
d505b31200204d0854d67244dfddab81552937571e321d3f5520c5be8fcbc283.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x8529]        # 0x140009530
   140001007:	jmp    0x140008b68
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	sub    rsp,0x28
   140001014:	lea    rcx,[rip+0x10ba5]        # 0x140011bc0
   14000101b:	call   QWORD PTR [rip+0xa4f7]        # 0x14000b518
   140001021:	lea    rcx,[rip+0x8558]        # 0x140009580
   140001028:	add    rsp,0x28
   14000102c:	jmp    0x140008b68
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	int3   
   140001041:	int3   
   140001042:	int3   
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	mov    r11,rsp
   14000104b:	mov    DWORD PTR [r11+0x20],r9d
   14000104f:	sub    rsp,0x58
   140001053:	and    QWORD PTR [r11-0x18],0x0
   140001058:	lea    rax,[r11+0x28]
   14000105c:	mov    r8d,0x11
   140001062:	movzx  r9d,r8w
   140001066:	lea    edx,[r8-0xd]
   14000106a:	mov    QWORD PTR [r11-0x20],rdx
   14000106e:	lea    r8,[rip+0xaa63]        # 0x14000bad8
   140001075:	mov    QWORD PTR [r11-0x28],rax
   140001079:	lea    rax,[r11+0x20]
   14000107d:	mov    QWORD PTR [r11-0x30],rdx
   140001081:	mov    edx,0x2b
   140001086:	mov    QWORD PTR [r11-0x38],rax
   14000108a:	call   QWORD PTR [rip+0x9f70]        # 0x14000b000
   140001090:	add    rsp,0x58
   140001094:	ret    
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	mov    r11,rsp
   14000109f:	mov    QWORD PTR [r11+0x20],r9
   1400010a3:	sub    rsp,0x48
   1400010a7:	and    QWORD PTR [r11-0x18],0x0
   1400010ac:	lea    rax,[r11+0x20]
   1400010b0:	movzx  r9d,dx
   1400010b4:	lea    r8,[rip+0xaa1d]        # 0x14000bad8
   1400010bb:	mov    QWORD PTR [r11-0x20],0x8
   1400010c3:	mov    edx,0x2b
   1400010c8:	mov    QWORD PTR [r11-0x28],rax
   1400010cc:	call   QWORD PTR [rip+0x9f2e]        # 0x14000b000
   1400010d2:	add    rsp,0x48
   1400010d6:	ret    
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	mov    r11,rsp
   1400010e3:	mov    QWORD PTR [r11+0x20],r9
   1400010e7:	sub    rsp,0x58
   1400010eb:	and    QWORD PTR [r11-0x18],0x0
   1400010f0:	lea    rax,[r11+0x28]
   1400010f4:	mov    QWORD PTR [r11-0x20],0x4
   1400010fc:	lea    r8,[rip+0xa9d5]        # 0x14000bad8
   140001103:	mov    QWORD PTR [r11-0x28],rax
   140001107:	lea    rax,[r11+0x20]
   14000110b:	movzx  r9d,dx
   14000110f:	mov    edx,0x2b
   140001114:	mov    QWORD PTR [r11-0x30],0x8
   14000111c:	mov    QWORD PTR [r11-0x38],rax
   140001120:	call   QWORD PTR [rip+0x9eda]        # 0x14000b000
   140001126:	add    rsp,0x58
   14000112a:	ret    
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	mov    r11,rsp
   140001137:	mov    QWORD PTR [r11+0x20],r9
   14000113b:	sub    rsp,0x78
   14000113f:	and    QWORD PTR [r11-0x18],0x0
   140001144:	lea    rax,[r11+0x38]
   140001148:	mov    r8d,0x12
   14000114e:	movzx  r9d,r8w
   140001152:	lea    edx,[r8-0xe]
   140001156:	mov    QWORD PTR [r11-0x20],rdx
   14000115a:	lea    r8,[rip+0xa977]        # 0x14000bad8
   140001161:	mov    QWORD PTR [r11-0x28],rax
   140001165:	lea    rax,[r11+0x30]
   140001169:	mov    QWORD PTR [r11-0x30],rdx
   14000116d:	mov    QWORD PTR [r11-0x38],rax
   140001171:	lea    rax,[r11+0x28]
   140001175:	mov    QWORD PTR [r11-0x40],rdx
   140001179:	mov    edx,0x2b
   14000117e:	mov    QWORD PTR [r11-0x48],rax
   140001182:	lea    rax,[r11+0x20]
   140001186:	mov    QWORD PTR [r11-0x50],0x8
   14000118e:	mov    QWORD PTR [r11-0x58],rax
   140001192:	call   QWORD PTR [rip+0x9e68]        # 0x14000b000
   140001198:	add    rsp,0x78
   14000119c:	ret    
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	int3   
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	rex push rbx
   1400011a6:	sub    rsp,0x20
   1400011aa:	call   QWORD PTR [rip+0xa088]        # 0x14000b238
   1400011b0:	test   eax,eax
   1400011b2:	jne    0x140001214
   1400011b4:	mov    rcx,QWORD PTR [rip+0xfe65]        # 0x140011020
   1400011bb:	lea    rbx,[rip+0xfe5e]        # 0x140011020
   1400011c2:	cmp    rcx,rbx
   1400011c5:	je     0x1400011e0
   1400011c7:	test   BYTE PTR [rcx+0x1c],0x8
   1400011cb:	je     0x1400011e0
   1400011cd:	mov    rcx,QWORD PTR [rcx+0x10]
   1400011d1:	lea    edx,[rax+0xe]
   1400011d4:	lea    r8,[rip+0xa9a5]        # 0x14000bb80
   1400011db:	call   0x140001cb8
   1400011e0:	mov    rcx,QWORD PTR [rip+0x10a41]        # 0x140011c28
   1400011e7:	call   QWORD PTR [rip+0x9f03]        # 0x14000b0f0
   1400011ed:	mov    rcx,QWORD PTR [rip+0xfe2c]        # 0x140011020
   1400011f4:	cmp    rcx,rbx
   1400011f7:	je     0x140001214
   1400011f9:	test   BYTE PTR [rcx+0x1c],0x8
   1400011fd:	je     0x140001214
   1400011ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140001203:	lea    r8,[rip+0xa976]        # 0x14000bb80
   14000120a:	mov    edx,0xf
   14000120f:	call   0x140001cb8
   140001214:	add    rsp,0x20
   140001218:	pop    rbx
   140001219:	ret    
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	mov    QWORD PTR [rsp+0x10],rbx
   140001225:	mov    QWORD PTR [rsp+0x18],rsi
   14000122a:	mov    QWORD PTR [rsp+0x20],rdi
   14000122f:	push   r14
   140001231:	sub    rsp,0x30
   140001235:	xor    ebx,ebx
   140001237:	mov    DWORD PTR [rcx+0x8],0x1
   14000123e:	lea    rax,[rip+0xa5db]        # 0x14000b820
   140001245:	mov    rdi,rcx
   140001248:	mov    QWORD PTR [rcx],rax
   14000124b:	lea    rax,[rip+0xa5be]        # 0x14000b810
   140001252:	mov    QWORD PTR [rcx+0x10],rax
   140001256:	mov    DWORD PTR [rcx+0x18],ebx
   140001259:	mov    rax,QWORD PTR [rip+0x10a70]        # 0x140011cd0
   140001260:	neg    rax
   140001263:	sbb    esi,esi
   140001265:	not    esi
   140001267:	and    esi,0x8000ffff
   14000126d:	jl     0x140001278
   14000126f:	lock inc DWORD PTR [rip+0x10a52]        # 0x140011cc8
   140001276:	jmp    0x1400012f3
   140001278:	xor    edx,edx
   14000127a:	mov    QWORD PTR [rsp+0x40],rbx
   14000127f:	lea    rax,[rsp+0x40]
   140001284:	lea    r9,[rip+0xa86d]        # 0x14000baf8
   14000128b:	mov    QWORD PTR [rsp+0x20],rax
   140001290:	lea    rcx,[rip+0xa881]        # 0x14000bb18
   140001297:	lea    r8d,[rdx+0x1]
   14000129b:	call   QWORD PTR [rip+0x9f7f]        # 0x14000b220
   1400012a1:	mov    esi,eax
   1400012a3:	test   eax,eax
   1400012a5:	js     0x1400012cf
   1400012a7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400012ac:	xor    eax,eax
   1400012ae:	lock cmpxchg QWORD PTR [rip+0x10a19],rcx        # 0x140011cd0
   1400012b7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400012bc:	test   rax,rax
   1400012bf:	cmove  rcx,rbx
   1400012c3:	mov    QWORD PTR [rsp+0x40],rcx
   1400012c8:	lock inc DWORD PTR [rip+0x109f9]        # 0x140011cc8
   1400012cf:	mov    r14,QWORD PTR [rsp+0x40]
   1400012d4:	test   r14,r14
   1400012d7:	je     0x1400012f3
   1400012d9:	mov    QWORD PTR [rsp+0x40],rbx
   1400012de:	mov    rax,QWORD PTR [r14]
   1400012e1:	mov    rbx,QWORD PTR [rax+0x10]
   1400012e5:	mov    rcx,rbx
   1400012e8:	call   QWORD PTR [rip+0xa28a]        # 0x14000b578
   1400012ee:	mov    rcx,r14
   1400012f1:	call   rbx
   1400012f3:	lea    rax,[rip+0xa516]        # 0x14000b810
   1400012fa:	mov    DWORD PTR [rdi+0x1c],esi
   1400012fd:	mov    QWORD PTR [rdi+0x10],rax
   140001301:	call   QWORD PTR [rip+0x9f21]        # 0x14000b228
   140001307:	mov    rbx,QWORD PTR [rsp+0x48]
   14000130c:	mov    rax,rdi
   14000130f:	mov    rdi,QWORD PTR [rsp+0x58]
   140001314:	mov    rsi,QWORD PTR [rsp+0x50]
   140001319:	add    rsp,0x30
   14000131d:	pop    r14
   14000131f:	ret    
   140001320:	int3   
   140001321:	int3   
   140001322:	int3   
   140001323:	int3   
   140001324:	int3   
   140001325:	int3   
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	mov    QWORD PTR [rsp+0x8],rbx
   140001335:	push   rdi
   140001336:	sub    rsp,0x20
   14000133a:	mov    ebx,edx
   14000133c:	mov    rdi,rcx
   14000133f:	call   0x140001bb4
   140001344:	test   bl,0x1
   140001347:	je     0x140001351
   140001349:	mov    rcx,rdi
   14000134c:	call   0x140008708
   140001351:	mov    rax,rdi
   140001354:	mov    rbx,QWORD PTR [rsp+0x30]
   140001359:	add    rsp,0x20
   14000135d:	pop    rdi
   14000135e:	ret    
   14000135f:	int3   
   140001360:	int3   
   140001361:	int3   
   140001362:	int3   
   140001363:	int3   
   140001364:	int3   
   140001365:	int3   
   140001366:	int3   
   140001367:	int3   
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	mov    QWORD PTR [rsp+0x8],rbx
   140001375:	push   rdi
   140001376:	sub    rsp,0x20
   14000137a:	and    QWORD PTR [r8],0x0
   14000137e:	mov    rdi,rcx
   140001381:	mov    rax,QWORD PTR [rdx]
   140001384:	mov    r9d,0x80004002
   14000138a:	cmp    rax,QWORD PTR [rip+0xd0af]        # 0x14000e440
   140001391:	jne    0x1400013a0
   140001393:	mov    rax,QWORD PTR [rdx+0x8]
   140001397:	cmp    rax,QWORD PTR [rip+0xd0aa]        # 0x14000e448
   14000139e:	je     0x1400013b9
   1400013a0:	mov    rax,QWORD PTR [rdx]
   1400013a3:	cmp    rax,QWORD PTR [rip+0xa68e]        # 0x14000ba38
   1400013aa:	jne    0x1400013d4
   1400013ac:	mov    rax,QWORD PTR [rdx+0x8]
   1400013b0:	cmp    rax,QWORD PTR [rip+0xa689]        # 0x14000ba40
   1400013b7:	jne    0x1400013d4
   1400013b9:	mov    QWORD PTR [r8],rcx
   1400013bc:	mov    rax,QWORD PTR [rcx]
   1400013bf:	mov    rbx,QWORD PTR [rax+0x8]
   1400013c3:	mov    rcx,rbx
   1400013c6:	call   QWORD PTR [rip+0xa1ac]        # 0x14000b578
   1400013cc:	mov    rcx,rdi
   1400013cf:	call   rbx
   1400013d1:	xor    r9d,r9d
   1400013d4:	mov    eax,r9d
   1400013d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013dc:	add    rsp,0x20
   1400013e0:	pop    rdi
   1400013e1:	ret    
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    eax,0x1
   1400013f5:	lock xadd DWORD PTR [rcx+0x8],eax
   1400013fa:	inc    eax
   1400013fc:	ret    
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	int3   
   140001401:	int3   
   140001402:	int3   
   140001403:	int3   
   140001404:	int3   
   140001405:	int3   
   140001406:	int3   
   140001407:	int3   
   140001408:	int3   
   140001409:	int3   
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    QWORD PTR [rsp+0x8],rbx
   140001415:	push   rdi
   140001416:	sub    rsp,0x20
   14000141a:	mov    rbx,rcx
   14000141d:	or     edi,0xffffffff
   140001420:	lock xadd DWORD PTR [rcx+0x8],edi
   140001425:	sub    edi,0x1
   140001428:	jne    0x14000144f
   14000142a:	test   rcx,rcx
   14000142d:	je     0x14000144f
   14000142f:	lea    rax,[rip+0xa3ea]        # 0x14000b820
   140001436:	mov    QWORD PTR [rcx],rax
   140001439:	call   0x1400011a4
   14000143e:	lea    rcx,[rbx+0x10]
   140001442:	call   0x140001bb4
   140001447:	mov    rcx,rbx
   14000144a:	call   0x140008708
   14000144f:	mov    eax,edi
   140001451:	mov    rbx,QWORD PTR [rsp+0x30]
   140001456:	add    rsp,0x20
   14000145a:	pop    rdi
   14000145b:	ret    
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	int3   
   140001461:	int3   
   140001462:	int3   
   140001463:	int3   
   140001464:	int3   
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    QWORD PTR [rsp+0x8],rbx
   140001475:	mov    QWORD PTR [rsp+0x10],rsi
   14000147a:	push   rbp
   14000147b:	push   rdi
   14000147c:	push   r12
   14000147e:	push   r14
   140001480:	push   r15
   140001482:	mov    rbp,rsp
   140001485:	sub    rsp,0x50
   140001489:	xor    edi,edi
   14000148b:	mov    r15,rdx
   14000148e:	and    QWORD PTR [rbp-0x8],rdi
   140001492:	mov    r14,rcx
   140001495:	mov    DWORD PTR [rbp-0x10],edi
   140001498:	mov    rcx,QWORD PTR [rip+0xfb81]        # 0x140011020
   14000149f:	lea    rsi,[rip+0xfb7a]        # 0x140011020
   1400014a6:	cmp    rcx,rsi
   1400014a9:	je     0x1400014c0
   1400014ab:	test   BYTE PTR [rcx+0x1c],0x8
   1400014af:	je     0x1400014c0
   1400014b1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400014b5:	lea    edx,[rdi+0xa]
   1400014b8:	mov    r9,r14
   1400014bb:	call   0x14000109c
   1400014c0:	and    DWORD PTR [rbp+0x40],edi
   1400014c3:	lea    rax,[rbp-0xc]
   1400014c7:	mov    QWORD PTR [rsp+0x30],rax
   1400014cc:	lea    r8,[rip+0xa575]        # 0x14000ba48
   1400014d3:	lea    rax,[rbp+0x40]
   1400014d7:	mov    DWORD PTR [rbp-0xc],0x4
   1400014de:	mov    QWORD PTR [rsp+0x28],rax
   1400014e3:	lea    rdx,[rip+0xa586]        # 0x14000ba70
   1400014ea:	and    QWORD PTR [rsp+0x20],rdi
   1400014ef:	mov    r9d,0x10
   1400014f5:	mov    rcx,0xffffffff80000002
   1400014fc:	call   QWORD PTR [rip+0x9b06]        # 0x14000b008
   140001502:	cmp    DWORD PTR [rbp+0x40],0x1
   140001506:	jne    0x14000152c
   140001508:	and    DWORD PTR [rbp+0x48],edi
   14000150b:	mov    rcx,QWORD PTR [rip+0xfb0e]        # 0x140011020
   140001512:	cmp    rcx,rsi
   140001515:	je     0x140001703
   14000151b:	test   BYTE PTR [rcx+0x1c],0x4
   14000151f:	je     0x140001703
   140001525:	mov    edx,0xb
   14000152a:	jmp    0x140001558
   14000152c:	cmp    DWORD PTR [rbp+0x40],0x2
   140001530:	jne    0x140001569
   140001532:	mov    DWORD PTR [rbp+0x48],0x1
   140001539:	mov    rcx,QWORD PTR [rip+0xfae0]        # 0x140011020
   140001540:	cmp    rcx,rsi
   140001543:	je     0x140001753
   140001549:	test   BYTE PTR [rcx+0x1c],0x4
   14000154d:	je     0x14000172d
   140001553:	mov    edx,0xc
   140001558:	mov    rcx,QWORD PTR [rcx+0x10]
   14000155c:	mov    r9,r14
   14000155f:	call   0x14000109c
   140001564:	jmp    0x1400016f6
   140001569:	mov    rdi,QWORD PTR [rbp-0x8]
   14000156d:	test   rdi,rdi
   140001570:	je     0x14000158c
   140001572:	and    QWORD PTR [rbp-0x8],0x0
   140001577:	mov    rax,QWORD PTR [rdi]
   14000157a:	mov    rbx,QWORD PTR [rax+0x10]
   14000157e:	mov    rcx,rbx
   140001581:	call   QWORD PTR [rip+0x9ff1]        # 0x14000b578
   140001587:	mov    rcx,rdi
   14000158a:	call   rbx
   14000158c:	xor    edx,edx
   14000158e:	lea    rax,[rbp-0x8]
   140001592:	lea    r9,[rip+0xa52f]        # 0x14000bac8
   140001599:	mov    QWORD PTR [rsp+0x20],rax
   14000159e:	lea    rcx,[rip+0xa233]        # 0x14000b7d8
   1400015a5:	lea    r8d,[rdx+0x1]
   1400015a9:	call   QWORD PTR [rip+0x9c71]        # 0x14000b220
   1400015af:	mov    edi,eax
   1400015b1:	test   eax,eax
   1400015b3:	jns    0x1400015f0
   1400015b5:	mov    rcx,QWORD PTR [rip+0xfa64]        # 0x140011020
   1400015bc:	cmp    rcx,rsi
   1400015bf:	je     0x140001830
   1400015c5:	test   BYTE PTR [rcx+0x1c],0x1
   1400015c9:	je     0x140001810
   1400015cf:	mov    edx,0xd
   1400015d4:	mov    DWORD PTR [rsp+0x20],eax
   1400015d8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400015dc:	mov    r9,r14
   1400015df:	call   0x1400010e0
   1400015e4:	mov    rcx,QWORD PTR [rip+0xfa35]        # 0x140011020
   1400015eb:	jmp    0x140001810
   1400015f0:	lea    r12,[r14+0x18]
   1400015f4:	xor    edi,edi
   1400015f6:	mov    esi,DWORD PTR [r12]
   1400015fa:	test   esi,esi
   1400015fc:	je     0x140001626
   1400015fe:	mov    edi,DWORD PTR [r14+0x1c]
   140001602:	test   edi,edi
   140001604:	js     0x140001626
   140001606:	mov    rdi,QWORD PTR [rip+0x106c3]        # 0x140011cd0
   14000160d:	mov    rax,QWORD PTR [rdi]
   140001610:	mov    rbx,QWORD PTR [rax+0x20]
   140001614:	mov    rcx,rbx
   140001617:	call   QWORD PTR [rip+0x9f5b]        # 0x14000b578
   14000161d:	mov    edx,esi
   14000161f:	mov    rcx,rdi
   140001622:	call   rbx
   140001624:	mov    edi,eax
   140001626:	and    DWORD PTR [r12],0x0
   14000162b:	test   edi,edi
   14000162d:	js     0x14000166f
   14000162f:	mov    rsi,QWORD PTR [rbp-0x8]
   140001633:	test   rsi,rsi
   140001636:	je     0x14000166b
   140001638:	mov    edi,DWORD PTR [r14+0x1c]
   14000163c:	test   edi,edi
   14000163e:	js     0x14000166f
   140001640:	mov    rdi,QWORD PTR [rip+0x10689]        # 0x140011cd0
   140001647:	mov    rax,QWORD PTR [rdi]
   14000164a:	mov    rbx,QWORD PTR [rax+0x18]
   14000164e:	mov    rcx,rbx
   140001651:	call   QWORD PTR [rip+0x9f21]        # 0x14000b578
   140001657:	mov    r9,r12
   14000165a:	lea    r8,[rip+0xa467]        # 0x14000bac8
   140001661:	mov    rdx,rsi
   140001664:	mov    rcx,rdi
   140001667:	call   rbx
   140001669:	mov    edi,eax
   14000166b:	test   edi,edi
   14000166d:	jns    0x14000169e
   14000166f:	mov    rcx,QWORD PTR [rip+0xf9aa]        # 0x140011020
   140001676:	lea    rsi,[rip+0xf9a3]        # 0x140011020
   14000167d:	cmp    rcx,rsi
   140001680:	je     0x140001830
   140001686:	test   BYTE PTR [rcx+0x1c],0x1
   14000168a:	je     0x140001810
   140001690:	mov    edx,0xe
   140001695:	mov    DWORD PTR [rsp+0x20],edi
   140001699:	jmp    0x1400015d8
   14000169e:	mov    rsi,QWORD PTR [rbp-0x8]
   1400016a2:	mov    rax,QWORD PTR [rsi]
   1400016a5:	mov    rbx,QWORD PTR [rax+0x18]
   1400016a9:	mov    rcx,rbx
   1400016ac:	call   QWORD PTR [rip+0x9ec6]        # 0x14000b578
   1400016b2:	lea    rdx,[rbp+0x48]
   1400016b6:	mov    rcx,rsi
   1400016b9:	call   rbx
   1400016bb:	mov    DWORD PTR [rbp-0x10],eax
   1400016be:	mov    edi,eax
   1400016c0:	test   eax,eax
   1400016c2:	jns    0x1400016ef
   1400016c4:	mov    rcx,QWORD PTR [rip+0xf955]        # 0x140011020
   1400016cb:	lea    rsi,[rip+0xf94e]        # 0x140011020
   1400016d2:	cmp    rcx,rsi
   1400016d5:	je     0x140001830
   1400016db:	test   BYTE PTR [rcx+0x1c],0x1
   1400016df:	je     0x140001810
   1400016e5:	mov    edx,0xf
   1400016ea:	jmp    0x1400015d4
   1400016ef:	lea    rsi,[rip+0xf92a]        # 0x140011020
   1400016f6:	cmp    DWORD PTR [rbp+0x48],0x1
   1400016fa:	mov    rcx,QWORD PTR [rip+0xf91f]        # 0x140011020
   140001701:	je     0x14000172d
   140001703:	mov    edi,0x800704c7
   140001708:	cmp    rcx,rsi
   14000170b:	je     0x140001830
   140001711:	test   BYTE PTR [rcx+0x1c],0x4
   140001715:	je     0x140001810
   14000171b:	mov    edx,0x10
   140001720:	mov    DWORD PTR [rsp+0x20],0x800704c7
   140001728:	jmp    0x1400015d8
   14000172d:	cmp    rcx,rsi
   140001730:	je     0x140001753
   140001732:	test   BYTE PTR [rcx+0x1c],0x4
   140001736:	je     0x140001753
   140001738:	mov    eax,DWORD PTR [r15+0x10]
   14000173c:	mov    r9d,DWORD PTR [r15]
   14000173f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001743:	mov    DWORD PTR [rsp+0x20],eax
   140001747:	call   0x140001048
   14000174c:	mov    rcx,QWORD PTR [rip+0xf8cd]        # 0x140011020
   140001753:	xor    ebx,ebx
   140001755:	cmp    DWORD PTR [r15+0x10],ebx
   140001759:	jbe    0x140001810
   14000175f:	lea    rdi,[rip+0xf8ba]        # 0x140011020
   140001766:	mov    r12,QWORD PTR [r15+0x18]
   14000176a:	lea    rsi,[rbx+rbx*4]
   14000176e:	cmp    rcx,rdi
   140001771:	je     0x14000179d
   140001773:	test   BYTE PTR [rcx+0x1c],0x4
   140001777:	je     0x14000179d
   140001779:	mov    eax,DWORD PTR [r12+rsi*8+0x4]
   14000177e:	mov    r9,r14
   140001781:	mov    rcx,QWORD PTR [rcx+0x10]
   140001785:	mov    DWORD PTR [rsp+0x30],eax
   140001789:	mov    eax,DWORD PTR [r12+rsi*8]
   14000178d:	mov    DWORD PTR [rsp+0x28],eax
   140001791:	mov    eax,DWORD PTR [r15]
   140001794:	mov    DWORD PTR [rsp+0x20],eax
   140001798:	call   0x140001134
   14000179d:	mov    ecx,DWORD PTR [r12+rsi*8]
   1400017a1:	lea    rax,[r12+0x10]
   1400017a6:	mov    edx,DWORD PTR [r12+rsi*8+0x4]
   1400017ab:	lea    rax,[rax+rsi*8]
   1400017af:	mov    r9,QWORD PTR [r15+0x8]
   1400017b3:	mov    r8d,DWORD PTR [r15]
   1400017b6:	mov    QWORD PTR [rsp+0x30],rax
   1400017bb:	mov    DWORD PTR [rsp+0x28],ecx
   1400017bf:	mov    DWORD PTR [rsp+0x20],edx
   1400017c3:	call   0x1400036f0
   1400017c8:	test   eax,eax
   1400017ca:	jns    0x1400017f3
   1400017cc:	mov    rcx,QWORD PTR [rip+0xf84d]        # 0x140011020
   1400017d3:	cmp    rcx,rdi
   1400017d6:	je     0x1400017fa
   1400017d8:	test   BYTE PTR [rcx+0x1c],0x1
   1400017dc:	je     0x1400017fa
   1400017de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400017e2:	mov    edx,0x13
   1400017e7:	mov    r9,r14
   1400017ea:	mov    DWORD PTR [rsp+0x20],eax
   1400017ee:	call   0x1400010e0
   1400017f3:	mov    rcx,QWORD PTR [rip+0xf826]        # 0x140011020
   1400017fa:	inc    ebx
   1400017fc:	cmp    ebx,DWORD PTR [r15+0x10]
   140001800:	jb     0x140001766
   140001806:	mov    edi,DWORD PTR [rbp-0x10]
   140001809:	lea    rsi,[rip+0xf810]        # 0x140011020
   140001810:	cmp    rcx,rsi
   140001813:	je     0x140001830
   140001815:	test   BYTE PTR [rcx+0x1c],0x8
   140001819:	je     0x140001830
   14000181b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000181f:	mov    edx,0x14
   140001824:	mov    r9,r14
   140001827:	mov    DWORD PTR [rsp+0x20],edi
   14000182b:	call   0x1400010e0
   140001830:	mov    rsi,QWORD PTR [rbp-0x8]
   140001834:	test   rsi,rsi
   140001837:	je     0x140001853
   140001839:	and    QWORD PTR [rbp-0x8],0x0
   14000183e:	mov    rax,QWORD PTR [rsi]
   140001841:	mov    rbx,QWORD PTR [rax+0x10]
   140001845:	mov    rcx,rbx
   140001848:	call   QWORD PTR [rip+0x9d2a]        # 0x14000b578
   14000184e:	mov    rcx,rsi
   140001851:	call   rbx
   140001853:	lea    r11,[rsp+0x50]
   140001858:	mov    eax,edi
   14000185a:	mov    rbx,QWORD PTR [r11+0x30]
   14000185e:	mov    rsi,QWORD PTR [r11+0x38]
   140001862:	mov    rsp,r11
   140001865:	pop    r15
   140001867:	pop    r14
   140001869:	pop    r12
   14000186b:	pop    rdi
   14000186c:	pop    rbp
   14000186d:	ret    
   14000186e:	int3   
   14000186f:	int3   
   140001870:	int3   
   140001871:	int3   
   140001872:	int3   
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    QWORD PTR [rsp+0x10],rbx
   140001885:	mov    QWORD PTR [rsp+0x18],rbp
   14000188a:	push   rsi
   14000188b:	push   rdi
   14000188c:	push   r15
   14000188e:	sub    rsp,0x30
   140001892:	xor    edi,edi
   140001894:	mov    rbp,rcx
   140001897:	mov    QWORD PTR [rsp+0x50],rdi
   14000189c:	mov    rcx,QWORD PTR [rip+0xf77d]        # 0x140011020
   1400018a3:	lea    r15,[rip+0xf776]        # 0x140011020
   1400018aa:	cmp    rcx,r15
   1400018ad:	je     0x1400018d0
   1400018af:	test   BYTE PTR [rcx+0x1c],0x8
   1400018b3:	je     0x1400018d0
   1400018b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018b9:	lea    edx,[rdi+0x15]
   1400018bc:	mov    r9,rbp
   1400018bf:	call   0x14000109c
   1400018c4:	mov    rcx,QWORD PTR [rip+0xf755]        # 0x140011020
   1400018cb:	mov    rdi,QWORD PTR [rsp+0x50]
   1400018d0:	test   rdi,rdi
   1400018d3:	je     0x1400018f7
   1400018d5:	and    QWORD PTR [rsp+0x50],0x0
   1400018db:	mov    rax,QWORD PTR [rdi]
   1400018de:	mov    rbx,QWORD PTR [rax+0x10]
   1400018e2:	mov    rcx,rbx
   1400018e5:	call   QWORD PTR [rip+0x9c8d]        # 0x14000b578
   1400018eb:	mov    rcx,rdi
   1400018ee:	call   rbx
   1400018f0:	mov    rcx,QWORD PTR [rip+0xf729]        # 0x140011020
   1400018f7:	and    QWORD PTR [rsp+0x50],0x0
   1400018fd:	mov    esi,DWORD PTR [rbp+0x18]
   140001900:	test   esi,esi
   140001902:	je     0x140001940
   140001904:	mov    edi,DWORD PTR [rbp+0x1c]
   140001907:	test   edi,edi
   140001909:	js     0x140001949
   14000190b:	mov    rdi,QWORD PTR [rip+0x103be]        # 0x140011cd0
   140001912:	mov    rax,QWORD PTR [rdi]
   140001915:	mov    rbx,QWORD PTR [rax+0x28]
   140001919:	mov    rcx,rbx
   14000191c:	call   QWORD PTR [rip+0x9c56]        # 0x14000b578
   140001922:	lea    r9,[rsp+0x50]
   140001927:	mov    edx,esi
   140001929:	lea    r8,[rip+0xa198]        # 0x14000bac8
   140001930:	mov    rcx,rdi
   140001933:	call   rbx
   140001935:	mov    rcx,QWORD PTR [rip+0xf6e4]        # 0x140011020
   14000193c:	mov    edi,eax
   14000193e:	jmp    0x140001945
   140001940:	mov    edi,0x80070057
   140001945:	test   edi,edi
   140001947:	jns    0x14000195f
   140001949:	cmp    rcx,r15
   14000194c:	je     0x1400019cd
   14000194e:	test   BYTE PTR [rcx+0x1c],0x1
   140001952:	je     0x1400019ad
   140001954:	mov    edx,0x16
   140001959:	mov    DWORD PTR [rsp+0x20],edi
   14000195d:	jmp    0x14000199a
   14000195f:	mov    rsi,QWORD PTR [rsp+0x50]
   140001964:	mov    rax,QWORD PTR [rsi]
   140001967:	mov    rbx,QWORD PTR [rax+0x20]
   14000196b:	mov    rcx,rbx
   14000196e:	call   QWORD PTR [rip+0x9c04]        # 0x14000b578
   140001974:	mov    rcx,rsi
   140001977:	call   rbx
   140001979:	mov    edi,eax
   14000197b:	test   eax,eax
   14000197d:	jns    0x1400019a6
   14000197f:	mov    rcx,QWORD PTR [rip+0xf69a]        # 0x140011020
   140001986:	cmp    rcx,r15
   140001989:	je     0x1400019cd
   14000198b:	test   BYTE PTR [rcx+0x1c],0x1
   14000198f:	je     0x1400019ad
   140001991:	mov    edx,0x17
   140001996:	mov    DWORD PTR [rsp+0x20],eax
   14000199a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000199e:	mov    r9,rbp
   1400019a1:	call   0x1400010e0
   1400019a6:	mov    rcx,QWORD PTR [rip+0xf673]        # 0x140011020
   1400019ad:	cmp    rcx,r15
   1400019b0:	je     0x1400019cd
   1400019b2:	test   BYTE PTR [rcx+0x1c],0x8
   1400019b6:	je     0x1400019cd
   1400019b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400019bc:	mov    edx,0x18
   1400019c1:	mov    r9,rbp
   1400019c4:	mov    DWORD PTR [rsp+0x20],edi
   1400019c8:	call   0x1400010e0
   1400019cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400019d2:	test   rsi,rsi
   1400019d5:	je     0x1400019f2
   1400019d7:	and    QWORD PTR [rsp+0x50],0x0
   1400019dd:	mov    rax,QWORD PTR [rsi]
   1400019e0:	mov    rbx,QWORD PTR [rax+0x10]
   1400019e4:	mov    rcx,rbx
   1400019e7:	call   QWORD PTR [rip+0x9b8b]        # 0x14000b578
   1400019ed:	mov    rcx,rsi
   1400019f0:	call   rbx
   1400019f2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400019f7:	mov    eax,edi
   1400019f9:	mov    rbp,QWORD PTR [rsp+0x60]
   1400019fe:	add    rsp,0x30
   140001a02:	pop    r15
   140001a04:	pop    rdi
   140001a05:	pop    rsi
   140001a06:	ret    
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	mov    QWORD PTR [rsp+0x8],rbx
   140001a15:	push   rdi
   140001a16:	sub    rsp,0x20
   140001a1a:	and    QWORD PTR [r8],0x0
   140001a1e:	mov    rdi,rcx
   140001a21:	mov    rax,QWORD PTR [rdx]
   140001a24:	mov    r9d,0x80004002
   140001a2a:	cmp    rax,QWORD PTR [rip+0xca0f]        # 0x14000e440
   140001a31:	jne    0x140001a40
   140001a33:	mov    rax,QWORD PTR [rdx+0x8]
   140001a37:	cmp    rax,QWORD PTR [rip+0xca0a]        # 0x14000e448
   140001a3e:	je     0x140001a59
   140001a40:	mov    rax,QWORD PTR [rdx]
   140001a43:	cmp    rax,QWORD PTR [rip+0xca06]        # 0x14000e450
   140001a4a:	jne    0x140001a74
   140001a4c:	mov    rax,QWORD PTR [rdx+0x8]
   140001a50:	cmp    rax,QWORD PTR [rip+0xca01]        # 0x14000e458
   140001a57:	jne    0x140001a74
   140001a59:	mov    QWORD PTR [r8],rcx
   140001a5c:	mov    rax,QWORD PTR [rcx]
   140001a5f:	mov    rbx,QWORD PTR [rax+0x8]
   140001a63:	mov    rcx,rbx
   140001a66:	call   QWORD PTR [rip+0x9b0c]        # 0x14000b578
   140001a6c:	mov    rcx,rdi
   140001a6f:	call   rbx
   140001a71:	xor    r9d,r9d
   140001a74:	mov    eax,r9d
   140001a77:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a7c:	add    rsp,0x20
   140001a80:	pop    rdi
   140001a81:	ret    
   140001a82:	int3   
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	rex push rbx
   140001a92:	sub    rsp,0x20
   140001a96:	or     ebx,0xffffffff
   140001a99:	lock xadd DWORD PTR [rcx+0x8],ebx
   140001a9e:	sub    ebx,0x1
   140001aa1:	jne    0x140001aa8
   140001aa3:	call   0x140008708
   140001aa8:	mov    eax,ebx
   140001aaa:	add    rsp,0x20
   140001aae:	pop    rbx
   140001aaf:	ret    
   140001ab0:	int3   
   140001ab1:	int3   
   140001ab2:	int3   
   140001ab3:	int3   
   140001ab4:	int3   
   140001ab5:	int3   
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ac5:	mov    QWORD PTR [rsp+0x10],rbp
   140001aca:	mov    QWORD PTR [rsp+0x18],rsi
   140001acf:	push   rdi
   140001ad0:	sub    rsp,0x20
   140001ad4:	mov    rsi,r9
   140001ad7:	mov    rbp,r8
   140001ada:	test   rdx,rdx
   140001add:	je     0x140001ae9
   140001adf:	mov    esi,0x80040110
   140001ae4:	jmp    0x140001b6a
   140001ae9:	mov    ecx,0x20
   140001aee:	call   0x140008714
   140001af3:	test   rax,rax
   140001af6:	je     0x140001b05
   140001af8:	mov    rcx,rax
   140001afb:	call   0x140001220
   140001b00:	mov    rdi,rax
   140001b03:	jmp    0x140001b07
   140001b05:	xor    edi,edi
   140001b07:	test   rdi,rdi
   140001b0a:	jne    0x140001b13
   140001b0c:	mov    esi,0x8007000e
   140001b11:	jmp    0x140001b6a
   140001b13:	mov    rax,QWORD PTR [rdi]
   140001b16:	mov    rbx,QWORD PTR [rax]
   140001b19:	mov    rcx,rbx
   140001b1c:	call   QWORD PTR [rip+0x9a56]        # 0x14000b578
   140001b22:	mov    r8,rsi
   140001b25:	mov    rdx,rbp
   140001b28:	mov    rcx,rdi
   140001b2b:	call   rbx
   140001b2d:	mov    esi,eax
   140001b2f:	test   eax,eax
   140001b31:	js     0x140001b4a
   140001b33:	mov    rcx,QWORD PTR [rdi]
   140001b36:	mov    rbx,QWORD PTR [rcx+0x10]
   140001b3a:	mov    rcx,rbx
   140001b3d:	call   QWORD PTR [rip+0x9a35]        # 0x14000b578
   140001b43:	mov    rcx,rdi
   140001b46:	call   rbx
   140001b48:	jmp    0x140001b6a
   140001b4a:	lea    rax,[rip+0x9ccf]        # 0x14000b820
   140001b51:	mov    QWORD PTR [rdi],rax
   140001b54:	call   0x1400011a4
   140001b59:	lea    rcx,[rdi+0x10]
   140001b5d:	call   0x140001bb4
   140001b62:	mov    rcx,rdi
   140001b65:	call   0x140008708
   140001b6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b6f:	mov    eax,esi
   140001b71:	mov    rsi,QWORD PTR [rsp+0x40]
   140001b76:	mov    rbp,QWORD PTR [rsp+0x38]
   140001b7b:	add    rsp,0x20
   140001b7f:	pop    rdi
   140001b80:	ret    
   140001b81:	int3   
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	sub    rsp,0x28
   140001b94:	test   edx,edx
   140001b96:	je     0x140001ba0
   140001b98:	call   QWORD PTR [rip+0x968a]        # 0x14000b228
   140001b9e:	jmp    0x140001ba5
   140001ba0:	call   0x1400011a4
   140001ba5:	xor    eax,eax
   140001ba7:	add    rsp,0x28
   140001bab:	ret    
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	int3   
   140001bb1:	int3   
   140001bb2:	int3   
   140001bb3:	int3   
   140001bb4:	mov    QWORD PTR [rsp+0x8],rbx
   140001bb9:	mov    QWORD PTR [rsp+0x10],rbp
   140001bbe:	mov    QWORD PTR [rsp+0x18],rsi
   140001bc3:	push   rdi
   140001bc4:	sub    rsp,0x20
   140001bc8:	mov    ebp,DWORD PTR [rcx+0x8]
   140001bcb:	lea    rax,[rip+0x9c3e]        # 0x14000b810
   140001bd2:	mov    QWORD PTR [rcx],rax
   140001bd5:	mov    rsi,rcx
   140001bd8:	test   ebp,ebp
   140001bda:	je     0x140001c04
   140001bdc:	cmp    DWORD PTR [rcx+0xc],0x0
   140001be0:	jl     0x140001c00
   140001be2:	mov    rdi,QWORD PTR [rip+0x100e7]        # 0x140011cd0
   140001be9:	mov    rax,QWORD PTR [rdi]
   140001bec:	mov    rbx,QWORD PTR [rax+0x20]
   140001bf0:	mov    rcx,rbx
   140001bf3:	call   QWORD PTR [rip+0x997f]        # 0x14000b578
   140001bf9:	mov    edx,ebp
   140001bfb:	mov    rcx,rdi
   140001bfe:	call   rbx
   140001c00:	and    DWORD PTR [rsi+0x8],0x0
   140001c04:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c09:	mov    rbp,QWORD PTR [rsp+0x38]
   140001c0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c13:	add    rsp,0x20
   140001c17:	pop    rdi
   140001c18:	ret    
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	xor    eax,eax
   140001c22:	cmp    DWORD PTR [rcx+0x8],eax
   140001c25:	setne  al
   140001c28:	ret    
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    QWORD PTR [rsp+0x8],rbx
   140001c35:	mov    QWORD PTR [rsp+0x10],rsi
   140001c3a:	push   rdi
   140001c3b:	sub    rsp,0x20
   140001c3f:	and    DWORD PTR [r8],0x0
   140001c43:	mov    rbx,rdx
   140001c46:	sub    ecx,0x4
   140001c49:	je     0x140001c60
   140001c4b:	cmp    ecx,0x1
   140001c4e:	je     0x140001c57
   140001c50:	mov    eax,0x57
   140001c55:	jmp    0x140001c9f
   140001c57:	xor    edi,edi
   140001c59:	xor    eax,eax
   140001c5b:	xor    sil,sil
   140001c5e:	jmp    0x140001c81
   140001c60:	mov    rcx,r9
   140001c63:	call   QWORD PTR [rip+0x93af]        # 0x14000b018
   140001c69:	mov    rcx,rax
   140001c6c:	mov    rdi,rax
   140001c6f:	call   QWORD PTR [rip+0x93b3]        # 0x14000b028
   140001c75:	mov    rcx,rdi
   140001c78:	mov    sil,al
   140001c7b:	call   QWORD PTR [rip+0x938f]        # 0x14000b010
   140001c81:	test   BYTE PTR [rbx+0x1a],0x2
   140001c85:	je     0x140001c92
   140001c87:	mov    rcx,QWORD PTR [rbx+0x10]
   140001c8b:	test   rcx,rcx
   140001c8e:	cmovne rbx,rcx
   140001c92:	mov    QWORD PTR [rbx+0x10],rdi
   140001c96:	mov    BYTE PTR [rbx+0x19],sil
   140001c9a:	mov    DWORD PTR [rbx+0x1c],eax
   140001c9d:	xor    eax,eax
   140001c9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ca4:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ca9:	add    rsp,0x20
   140001cad:	pop    rdi
   140001cae:	ret    
   140001caf:	int3   
   140001cb0:	int3   
   140001cb1:	int3   
   140001cb2:	int3   
   140001cb3:	int3   
   140001cb4:	int3   
   140001cb5:	int3   
   140001cb6:	int3   
   140001cb7:	int3   
   140001cb8:	sub    rsp,0x38
   140001cbc:	and    QWORD PTR [rsp+0x20],0x0
   140001cc2:	movzx  r9d,dx
   140001cc6:	mov    edx,0x2b
   140001ccb:	call   QWORD PTR [rip+0x932f]        # 0x14000b000
   140001cd1:	add    rsp,0x38
   140001cd5:	ret    
   140001cd6:	int3   
   140001cd7:	int3   
   140001cd8:	int3   
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	mov    r11,rsp
   140001cdf:	mov    DWORD PTR [r11+0x20],r9d
   140001ce3:	sub    rsp,0x48
   140001ce7:	and    QWORD PTR [r11-0x18],0x0
   140001cec:	lea    rax,[r11+0x20]
   140001cf0:	movzx  r9d,dx
   140001cf4:	mov    edx,0x2b
   140001cf9:	mov    QWORD PTR [r11-0x20],0x4
   140001d01:	mov    QWORD PTR [r11-0x28],rax
   140001d05:	call   QWORD PTR [rip+0x92f5]        # 0x14000b000
   140001d0b:	add    rsp,0x48
   140001d0f:	ret    
   140001d10:	int3   
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	int3   
   140001d15:	int3   
   140001d16:	int3   
   140001d17:	int3   
   140001d18:	sub    rsp,0x48
   140001d1c:	xor    r11d,r11d
   140001d1f:	test   r9,r9
   140001d22:	je     0x140001d48
   140001d24:	cmp    WORD PTR [r9],r11w
   140001d28:	jne    0x140001d30
   140001d2a:	lea    eax,[r11+0xe]
   140001d2e:	jmp    0x140001d4d
   140001d30:	or     rax,0xffffffffffffffff
   140001d34:	inc    rax
   140001d37:	cmp    WORD PTR [r9+rax*2],r11w
   140001d3c:	jne    0x140001d34
   140001d3e:	lea    rax,[rax*2+0x2]
   140001d46:	jmp    0x140001d4d
   140001d48:	mov    eax,0xa
   140001d4d:	test   r9,r9
   140001d50:	je     0x140001d63
   140001d52:	cmp    WORD PTR [r9],r11w
   140001d56:	lea    r10,[rip+0x9dcb]        # 0x14000bb28
   140001d5d:	cmove  r9,r10
   140001d61:	jmp    0x140001d6a
   140001d63:	lea    r9,[rip+0x9dce]        # 0x14000bb38
   140001d6a:	mov    QWORD PTR [rsp+0x30],r11
   140001d6f:	mov    QWORD PTR [rsp+0x28],rax
   140001d74:	mov    QWORD PTR [rsp+0x20],r9
   140001d79:	movzx  r9d,dx
   140001d7d:	mov    edx,0x2b
   140001d82:	call   QWORD PTR [rip+0x9278]        # 0x14000b000
   140001d88:	add    rsp,0x48
   140001d8c:	ret    
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	int3   
   140001d91:	int3   
   140001d92:	int3   
   140001d93:	int3   
   140001d94:	mov    DWORD PTR [rsp+0x20],r9d
   140001d99:	sub    rsp,0x58
   140001d9d:	mov    rax,QWORD PTR [rsp+0x80]
   140001da5:	xor    r8d,r8d
   140001da8:	mov    r10,rcx
   140001dab:	test   rax,rax
   140001dae:	je     0x140001dd4
   140001db0:	cmp    WORD PTR [rax],r8w
   140001db4:	jne    0x140001dbc
   140001db6:	lea    ecx,[r8+0xe]
   140001dba:	jmp    0x140001dd9
   140001dbc:	or     rcx,0xffffffffffffffff
   140001dc0:	inc    rcx
   140001dc3:	cmp    WORD PTR [rax+rcx*2],r8w
   140001dc8:	jne    0x140001dc0
   140001dca:	lea    rcx,[rcx*2+0x2]
   140001dd2:	jmp    0x140001dd9
   140001dd4:	mov    ecx,0xa
   140001dd9:	test   rax,rax
   140001ddc:	je     0x140001def
   140001dde:	cmp    WORD PTR [rax],r8w
   140001de2:	lea    rdx,[rip+0x9d3f]        # 0x14000bb28
   140001de9:	cmove  rax,rdx
   140001ded:	jmp    0x140001df6
   140001def:	lea    rax,[rip+0x9d42]        # 0x14000bb38
   140001df6:	mov    QWORD PTR [rsp+0x40],r8
   140001dfb:	mov    edx,0xd
   140001e00:	mov    QWORD PTR [rsp+0x38],rcx
   140001e05:	lea    r8,[rip+0x9d54]        # 0x14000bb60
   140001e0c:	mov    QWORD PTR [rsp+0x30],rax
   140001e11:	mov    rcx,r10
   140001e14:	lea    rax,[rsp+0x78]
   140001e19:	movzx  r9d,dx
   140001e1d:	mov    QWORD PTR [rsp+0x28],0x4
   140001e26:	mov    edx,0x2b
   140001e2b:	mov    QWORD PTR [rsp+0x20],rax
   140001e30:	call   QWORD PTR [rip+0x91ca]        # 0x14000b000
   140001e36:	add    rsp,0x58
   140001e3a:	ret    
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	int3   
   140001e41:	int3   
   140001e42:	int3   
   140001e43:	int3   
   140001e44:	int3   
   140001e45:	int3   
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	sub    rsp,0x38
   140001e54:	mov    r8,rdx
   140001e57:	cmp    ecx,0x1
   140001e5a:	jne    0x140001e84
   140001e5c:	mov    rcx,QWORD PTR [rip+0xf1bd]        # 0x140011020
   140001e63:	lea    rax,[rip+0xf1b6]        # 0x140011020
   140001e6a:	cmp    rcx,rax
   140001e6d:	je     0x140001f0d
   140001e73:	test   BYTE PTR [rcx+0x1c],0x1
   140001e77:	je     0x140001f0d
   140001e7d:	mov    edx,0xa
   140001e82:	jmp    0x140001ecc
   140001e84:	cmp    ecx,0x2
   140001e87:	jne    0x140001ea9
   140001e89:	mov    rcx,QWORD PTR [rip+0xf190]        # 0x140011020
   140001e90:	lea    rax,[rip+0xf189]        # 0x140011020
   140001e97:	cmp    rcx,rax
   140001e9a:	je     0x140001f0d
   140001e9c:	test   BYTE PTR [rcx+0x1c],0x2
   140001ea0:	je     0x140001f0d
   140001ea2:	mov    edx,0xb
   140001ea7:	jmp    0x140001ecc
   140001ea9:	cmp    ecx,0x3
   140001eac:	jne    0x140001ee3
   140001eae:	mov    rcx,QWORD PTR [rip+0xf16b]        # 0x140011020
   140001eb5:	lea    rax,[rip+0xf164]        # 0x140011020
   140001ebc:	cmp    rcx,rax
   140001ebf:	je     0x140001f0d
   140001ec1:	test   BYTE PTR [rcx+0x1c],0x4
   140001ec5:	je     0x140001f0d
   140001ec7:	mov    edx,0xc
   140001ecc:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ed0:	mov    r9,r8
   140001ed3:	lea    r8,[rip+0x9c86]        # 0x14000bb60
   140001eda:	add    rsp,0x38
   140001ede:	jmp    0x140001d18
   140001ee3:	mov    rdx,QWORD PTR [rip+0xf136]        # 0x140011020
   140001eea:	lea    rax,[rip+0xf12f]        # 0x140011020
   140001ef1:	cmp    rdx,rax
   140001ef4:	je     0x140001f0d
   140001ef6:	test   BYTE PTR [rdx+0x1c],0x4
   140001efa:	je     0x140001f0d
   140001efc:	mov    r9d,ecx
   140001eff:	mov    QWORD PTR [rsp+0x20],r8
   140001f04:	mov    rcx,QWORD PTR [rdx+0x10]
   140001f08:	call   0x140001d94
   140001f0d:	add    rsp,0x38
   140001f11:	ret    
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	mov    QWORD PTR [rsp+0x8],rbx
   140001f1d:	mov    QWORD PTR [rsp+0x10],rbp
   140001f22:	mov    QWORD PTR [rsp+0x18],rsi
   140001f27:	push   rdi
   140001f28:	push   r14
   140001f2a:	push   r15
   140001f2c:	sub    rsp,0x50
   140001f30:	mov    rbp,rdx
   140001f33:	mov    esi,ecx
   140001f35:	xor    r14d,r14d
   140001f38:	lea    rax,[rip+0x9bc9]        # 0x14000bb08
   140001f3f:	lea    rbx,[rip+0xfb0a]        # 0x140011a50
   140001f46:	mov    QWORD PTR [rip+0xfb13],r14        # 0x140011a60
   140001f4d:	mov    QWORD PTR [rip+0xfafc],r14        # 0x140011a50
   140001f54:	lea    rdi,[rip+0xfb1d]        # 0x140011a78
   140001f5b:	mov    QWORD PTR [rip+0xfb16],rax        # 0x140011a78
   140001f62:	lea    r15d,[r14+0x1]
   140001f66:	mov    QWORD PTR [rip+0xf0b3],rbx        # 0x140011020
   140001f6d:	mov    QWORD PTR [rip+0xfaf4],r15        # 0x140011a68
   140001f74:	mov    r8,QWORD PTR [rdi]
   140001f77:	lea    rax,[rbx+0x8]
   140001f7b:	mov    QWORD PTR [rsp+0x38],rax
   140001f80:	lea    rcx,[rip+0xfffffffffffffca9]        # 0x140001c30
   140001f87:	mov    QWORD PTR [rsp+0x30],r14
   140001f8c:	lea    rax,[rsp+0x40]
   140001f91:	mov    QWORD PTR [rsp+0x40],r8
   140001f96:	lea    rdi,[rdi+0x8]
   140001f9a:	mov    QWORD PTR [rsp+0x48],r14
   140001f9f:	mov    r9d,r15d
   140001fa2:	mov    QWORD PTR [rsp+0x28],r14
   140001fa7:	mov    rdx,rbx
   140001faa:	mov    QWORD PTR [rsp+0x20],rax
   140001faf:	mov    QWORD PTR [rbx+0x20],r8
   140001fb3:	call   QWORD PTR [rip+0x9077]        # 0x14000b030
   140001fb9:	mov    rbx,QWORD PTR [rbx]
   140001fbc:	test   rbx,rbx
   140001fbf:	jne    0x140001f74
   140001fc1:	cmp    esi,0x2
   140001fc4:	jl     0x14000210a
   140001fca:	mov    rcx,QWORD PTR [rbp+0x8]
   140001fce:	lea    rdx,[rip+0x9b73]        # 0x14000bb48
   140001fd5:	call   QWORD PTR [rip+0x940d]        # 0x14000b3e8
   140001fdb:	test   eax,eax
   140001fdd:	jne    0x14000210a
   140001fe3:	mov    dl,r15b
   140001fe6:	lea    rcx,[rip+0xfbd3]        # 0x140011bc0
   140001fed:	call   QWORD PTR [rip+0x953d]        # 0x14000b530
   140001ff3:	add    DWORD PTR [rip+0xfc5e],r15d        # 0x140011c58
   140001ffa:	cmp    DWORD PTR [rip+0xfc53],r14d        # 0x140011c54
   140002001:	jne    0x140002041
   140002003:	lea    rax,[rip+0xfffffffffffffe46]        # 0x140001e50
   14000200a:	lea    rcx,[rip+0xfa6f]        # 0x140011a80
   140002011:	mov    QWORD PTR [rip+0xfc90],rax        # 0x140011ca8
   140002018:	call   QWORD PTR [rip+0x94fa]        # 0x14000b518
   14000201e:	mov    DWORD PTR [rip+0xfc2b],r15d        # 0x140011c50
   140002025:	mov    QWORD PTR [rip+0xfab4],r15        # 0x140011ae0
   14000202c:	mov    DWORD PTR [rip+0xfab5],r14d        # 0x140011ae8
   140002033:	mov    QWORD PTR [rip+0xfab6],r14        # 0x140011af0
   14000203a:	mov    DWORD PTR [rip+0xfc13],r15d        # 0x140011c54
   140002041:	lea    rcx,[rip+0xfb78]        # 0x140011bc0
   140002048:	call   QWORD PTR [rip+0x94da]        # 0x14000b528
   14000204e:	xor    edx,edx
   140002050:	xor    ecx,ecx
   140002052:	call   QWORD PTR [rip+0x91b0]        # 0x14000b208
   140002058:	mov    esi,eax
   14000205a:	test   eax,eax
   14000205c:	jns    0x140002091
   14000205e:	mov    rcx,QWORD PTR [rip+0xefbb]        # 0x140011020
   140002065:	lea    rdi,[rip+0xefb4]        # 0x140011020
   14000206c:	cmp    rcx,rdi
   14000206f:	je     0x1400020d3
   140002071:	test   BYTE PTR [rcx+0x1c],r15b
   140002075:	je     0x1400020d3
   140002077:	mov    rcx,QWORD PTR [rcx+0x10]
   14000207b:	lea    r8,[rip+0x9ade]        # 0x14000bb60
   140002082:	mov    edx,0x10
   140002087:	mov    r9d,eax
   14000208a:	call   0x140001cdc
   14000208f:	jmp    0x1400020d3
   140002091:	call   0x1400027bc
   140002096:	lea    rdi,[rip+0xef83]        # 0x140011020
   14000209d:	mov    esi,eax
   14000209f:	test   eax,eax
   1400020a1:	je     0x1400020cd
   1400020a3:	mov    rcx,QWORD PTR [rip+0xef76]        # 0x140011020
   1400020aa:	cmp    rcx,rdi
   1400020ad:	je     0x1400020cd
   1400020af:	test   BYTE PTR [rcx+0x1c],r15b
   1400020b3:	je     0x1400020cd
   1400020b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020b9:	lea    r8,[rip+0x9aa0]        # 0x14000bb60
   1400020c0:	mov    edx,0x11
   1400020c5:	mov    r9d,eax
   1400020c8:	call   0x140001cdc
   1400020cd:	call   QWORD PTR [rip+0x915d]        # 0x14000b230
   1400020d3:	call   0x140003954
   1400020d8:	mov    rbx,QWORD PTR [rip+0xef41]        # 0x140011020
   1400020df:	cmp    rbx,rdi
   1400020e2:	je     0x14000213d
   1400020e4:	jmp    0x1400020fc
   1400020e6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400020ea:	test   rcx,rcx
   1400020ed:	je     0x1400020f9
   1400020ef:	call   QWORD PTR [rip+0x8f2b]        # 0x14000b020
   1400020f5:	mov    QWORD PTR [rbx+0x8],r14
   1400020f9:	mov    rbx,QWORD PTR [rbx]
   1400020fc:	test   rbx,rbx
   1400020ff:	jne    0x1400020e6
   140002101:	mov    QWORD PTR [rip+0xef18],rdi        # 0x140011020
   140002108:	jmp    0x14000213d
   14000210a:	mov    rcx,QWORD PTR [rip+0xef0f]        # 0x140011020
   140002111:	lea    rdi,[rip+0xef08]        # 0x140011020
   140002118:	cmp    rcx,rdi
   14000211b:	je     0x140002138
   14000211d:	test   BYTE PTR [rcx+0x1c],r15b
   140002121:	je     0x140002138
   140002123:	mov    rcx,QWORD PTR [rcx+0x10]
   140002127:	lea    r8,[rip+0x9a32]        # 0x14000bb60
   14000212e:	mov    edx,0xe
   140002133:	call   0x140001cb8
   140002138:	mov    esi,0x57
   14000213d:	lea    r11,[rsp+0x50]
   140002142:	mov    eax,esi
   140002144:	mov    rbx,QWORD PTR [r11+0x20]
   140002148:	mov    rbp,QWORD PTR [r11+0x28]
   14000214c:	mov    rsi,QWORD PTR [r11+0x30]
   140002150:	mov    rsp,r11
   140002153:	pop    r15
   140002155:	pop    r14
   140002157:	pop    rdi
   140002158:	ret    
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    QWORD PTR [rsp+0x18],r8
   140002165:	mov    QWORD PTR [rsp+0x20],r9
   14000216a:	push   rbx
   14000216b:	push   rbp
   14000216c:	push   rsi
   14000216d:	push   rdi
   14000216e:	sub    rsp,0x28
   140002172:	xor    ebp,ebp
   140002174:	lea    rax,[rdx-0x1]
   140002178:	cmp    rax,0x7ffffffe
   14000217e:	mov    rsi,rcx
   140002181:	mov    edi,ebp
   140002183:	mov    ecx,0x80070057
   140002188:	cmova  edi,ecx
   14000218b:	test   edi,edi
   14000218d:	js     0x1400021c4
   14000218f:	lea    rbx,[rdx-0x1]
   140002193:	mov    rcx,rsi
   140002196:	mov    rdx,rbx
   140002199:	lea    r9,[rsp+0x68]
   14000219e:	mov    edi,ebp
   1400021a0:	call   QWORD PTR [rip+0x924a]        # 0x14000b3f0
   1400021a6:	test   eax,eax
   1400021a8:	js     0x1400021b9
   1400021aa:	cdqe   
   1400021ac:	cmp    rax,rbx
   1400021af:	ja     0x1400021b9
   1400021b1:	jne    0x1400021cc
   1400021b3:	mov    WORD PTR [rsi+rbx*2],bp
   1400021b7:	jmp    0x1400021cc
   1400021b9:	mov    WORD PTR [rsi+rbx*2],bp
   1400021bd:	mov    edi,0x8007007a
   1400021c2:	jmp    0x1400021cc
   1400021c4:	test   rdx,rdx
   1400021c7:	je     0x1400021cc
   1400021c9:	mov    WORD PTR [rsi],bp
   1400021cc:	mov    eax,edi
   1400021ce:	add    rsp,0x28
   1400021d2:	pop    rdi
   1400021d3:	pop    rsi
   1400021d4:	pop    rbp
   1400021d5:	pop    rbx
   1400021d6:	ret    
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021e5:	push   rsi
   1400021e6:	push   rdi
   1400021e7:	push   r14
   1400021e9:	sub    rsp,0x30
   1400021ed:	xor    edi,edi
   1400021ef:	mov    r14,rcx
   1400021f2:	and    QWORD PTR [rsp+0x60],rdi
   1400021f7:	xor    esi,esi
   1400021f9:	call   QWORD PTR [rip+0x8ee9]        # 0x14000b0e8
   1400021ff:	lea    r9,[rsp+0x60]
   140002204:	xor    r8d,r8d
   140002207:	mov    rcx,rax
   14000220a:	lea    edx,[rdi+0xc]
   14000220d:	call   QWORD PTR [rip+0x8e2d]        # 0x14000b040
   140002213:	test   eax,eax
   140002215:	jne    0x1400022b1
   14000221b:	call   QWORD PTR [rip+0x8ebf]        # 0x14000b0e0
   140002221:	mov    ebx,eax
   140002223:	cmp    eax,0x3f0
   140002228:	je     0x14000226c
   14000222a:	mov    rcx,QWORD PTR [rip+0xedef]        # 0x140011020
   140002231:	lea    rax,[rip+0xede8]        # 0x140011020
   140002238:	cmp    rcx,rax
   14000223b:	je     0x140002259
   14000223d:	test   BYTE PTR [rcx+0x1c],0x1
   140002241:	je     0x140002259
   140002243:	lea    edx,[rdi+0xa]
   140002246:	mov    rcx,QWORD PTR [rcx+0x10]
   14000224a:	lea    r8,[rip+0x992f]        # 0x14000bb80
   140002251:	mov    r9d,ebx
   140002254:	call   0x140001cdc
   140002259:	movzx  edi,bx
   14000225c:	or     edi,0x80070000
   140002262:	test   ebx,ebx
   140002264:	cmovle edi,ebx
   140002267:	jmp    0x1400023b7
   14000226c:	call   QWORD PTR [rip+0x8e8e]        # 0x14000b100
   140002272:	lea    r8,[rsp+0x60]
   140002277:	mov    edx,0xc
   14000227c:	mov    rcx,rax
   14000227f:	call   QWORD PTR [rip+0x8db3]        # 0x14000b038
   140002285:	test   eax,eax
   140002287:	jne    0x1400022b1
   140002289:	call   QWORD PTR [rip+0x8e51]        # 0x14000b0e0
   14000228f:	mov    ebx,eax
   140002291:	mov    rcx,QWORD PTR [rip+0xed88]        # 0x140011020
   140002298:	lea    rax,[rip+0xed81]        # 0x140011020
   14000229f:	cmp    rcx,rax
   1400022a2:	je     0x140002259
   1400022a4:	test   BYTE PTR [rcx+0x1c],0x1
   1400022a8:	je     0x140002259
   1400022aa:	mov    edx,0xb
   1400022af:	jmp    0x140002246
   1400022b1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400022b6:	lea    rax,[rsp+0x58]
   1400022bb:	xor    r9d,r9d
   1400022be:	mov    QWORD PTR [rsp+0x20],rax
   1400022c3:	xor    r8d,r8d
   1400022c6:	lea    edx,[r9+0x1]
   1400022ca:	call   QWORD PTR [rip+0x8d78]        # 0x14000b048
   1400022d0:	mov    ebx,eax
   1400022d2:	call   QWORD PTR [rip+0x8e08]        # 0x14000b0e0
   1400022d8:	test   ebx,ebx
   1400022da:	jne    0x140002373
   1400022e0:	cmp    eax,0x7a
   1400022e3:	jne    0x140002363
   1400022e5:	mov    ecx,DWORD PTR [rsp+0x58]
   1400022e9:	call   QWORD PTR [rip+0x8f09]        # 0x14000b1f8
   1400022ef:	mov    rsi,rax
   1400022f2:	test   rax,rax
   1400022f5:	jne    0x140002301
   1400022f7:	mov    edi,0x8007000e
   1400022fc:	jmp    0x1400023b7
   140002301:	mov    r9d,DWORD PTR [rsp+0x58]
   140002306:	lea    rax,[rsp+0x58]
   14000230b:	mov    rcx,QWORD PTR [rsp+0x60]
   140002310:	mov    r8,rsi
   140002313:	mov    edx,0x1
   140002318:	mov    QWORD PTR [rsp+0x20],rax
   14000231d:	call   QWORD PTR [rip+0x8d25]        # 0x14000b048
   140002323:	test   eax,eax
   140002325:	jne    0x14000235e
   140002327:	call   QWORD PTR [rip+0x8db3]        # 0x14000b0e0
   14000232d:	movzx  edi,ax
   140002330:	mov    r9d,eax
   140002333:	or     edi,0x80070000
   140002339:	test   eax,eax
   14000233b:	cmovle edi,eax
   14000233e:	mov    rcx,QWORD PTR [rip+0xecdb]        # 0x140011020
   140002345:	lea    rax,[rip+0xecd4]        # 0x140011020
   14000234c:	cmp    rcx,rax
   14000234f:	je     0x1400023a9
   140002351:	test   BYTE PTR [rcx+0x1c],0x1
   140002355:	je     0x1400023a9
   140002357:	mov    edx,0xd
   14000235c:	jmp    0x140002399
   14000235e:	mov    QWORD PTR [r14],rsi
   140002361:	jmp    0x1400023b7
   140002363:	movzx  edi,ax
   140002366:	or     edi,0x80070000
   14000236c:	test   eax,eax
   14000236e:	cmovle edi,eax
   140002371:	jmp    0x140002378
   140002373:	mov    edi,0x8007000e
   140002378:	mov    rcx,QWORD PTR [rip+0xeca1]        # 0x140011020
   14000237f:	lea    rax,[rip+0xec9a]        # 0x140011020
   140002386:	cmp    rcx,rax
   140002389:	je     0x1400023b7
   14000238b:	test   BYTE PTR [rcx+0x1c],0x1
   14000238f:	je     0x1400023b7
   140002391:	mov    edx,0xc
   140002396:	mov    r9d,edi
   140002399:	mov    rcx,QWORD PTR [rcx+0x10]
   14000239d:	lea    r8,[rip+0x97dc]        # 0x14000bb80
   1400023a4:	call   0x140001cdc
   1400023a9:	test   rsi,rsi
   1400023ac:	je     0x1400023b7
   1400023ae:	mov    rcx,rsi
   1400023b1:	call   QWORD PTR [rip+0x8e59]        # 0x14000b210
   1400023b7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400023bc:	test   rcx,rcx
   1400023bf:	je     0x1400023c7
   1400023c1:	call   QWORD PTR [rip+0x8d09]        # 0x14000b0d0
   1400023c7:	mov    eax,edi
   1400023c9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400023ce:	add    rsp,0x30
   1400023d2:	pop    r14
   1400023d4:	pop    rdi
   1400023d5:	pop    rsi
   1400023d6:	ret    
   1400023d7:	int3   
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    rax,rsp
   1400023e3:	mov    QWORD PTR [rax+0x8],rbx
   1400023e7:	mov    QWORD PTR [rax+0x10],rsi
   1400023eb:	mov    QWORD PTR [rax+0x18],rdi
   1400023ef:	mov    QWORD PTR [rax+0x20],r12
   1400023f3:	push   rbp
   1400023f4:	push   r14
   1400023f6:	push   r15
   1400023f8:	lea    rbp,[rax-0x188]
   1400023ff:	sub    rsp,0x270
   140002406:	mov    rax,QWORD PTR [rip+0xebfb]        # 0x140011008
   14000240d:	xor    rax,rsp
   140002410:	mov    QWORD PTR [rbp+0x160],rax
   140002417:	xor    r14d,r14d
   14000241a:	mov    QWORD PTR [rbp-0x70],r14
   14000241e:	mov    edi,r14d
   140002421:	mov    QWORD PTR [rsp+0x60],r14
   140002426:	mov    QWORD PTR [rsp+0x70],r14
   14000242b:	lea    eax,[r14+0x64]
   14000242f:	mov    DWORD PTR [rsp+0x68],r14d
   140002434:	mov    DWORD PTR [rsp+0x7c],eax
   140002438:	mov    DWORD PTR [rbp-0x7c],eax
   14000243b:	mov    DWORD PTR [rsp+0x78],eax
   14000243f:	mov    DWORD PTR [rbp-0x80],eax
   140002442:	mov    DWORD PTR [rbp-0x78],r14d
   140002446:	mov    rcx,QWORD PTR [rip+0xebd3]        # 0x140011020
   14000244d:	lea    r15,[rip+0xebcc]        # 0x140011020
   140002454:	lea    r12,[rip+0x9725]        # 0x14000bb80
   14000245b:	cmp    rcx,r15
   14000245e:	je     0x140002475
   140002460:	test   BYTE PTR [rcx+0x1c],0x8
   140002464:	je     0x140002475
   140002466:	mov    rcx,QWORD PTR [rcx+0x10]
   14000246a:	lea    edx,[rax-0x54]
   14000246d:	mov    r8,r12
   140002470:	call   0x140001cb8
   140002475:	lea    rcx,[rbp-0x70]
   140002479:	call   0x1400021e0
   14000247e:	mov    rsi,QWORD PTR [rbp-0x70]
   140002482:	mov    ebx,eax
   140002484:	test   eax,eax
   140002486:	jns    0x1400024ac
   140002488:	mov    rcx,QWORD PTR [rip+0xeb91]        # 0x140011020
   14000248f:	cmp    rcx,r15
   140002492:	je     0x140002707
   140002498:	test   BYTE PTR [rcx+0x1c],0x1
   14000249c:	je     0x140002707
   1400024a2:	mov    edx,0x11
   1400024a7:	jmp    0x1400026f1
   1400024ac:	mov    rcx,QWORD PTR [rsi]
   1400024af:	lea    rdx,[rsp+0x60]
   1400024b4:	call   QWORD PTR [rip+0x8ba6]        # 0x14000b060
   1400024ba:	test   eax,eax
   1400024bc:	jne    0x1400024f9
   1400024be:	call   QWORD PTR [rip+0x8c1c]        # 0x14000b0e0
   1400024c4:	movzx  ebx,ax
   1400024c7:	or     ebx,0x80070000
   1400024cd:	test   eax,eax
   1400024cf:	cmovle ebx,eax
   1400024d2:	mov    rcx,QWORD PTR [rip+0xeb47]        # 0x140011020
   1400024d9:	cmp    rcx,r15
   1400024dc:	je     0x140002707
   1400024e2:	test   BYTE PTR [rcx+0x1c],0x1
   1400024e6:	je     0x140002707
   1400024ec:	mov    edx,0x12
   1400024f1:	mov    r9d,ebx
   1400024f4:	jmp    0x1400026f4
   1400024f9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400024fe:	or     rax,0xffffffffffffffff
   140002502:	inc    rax
   140002505:	cmp    WORD PTR [rcx+rax*2],r14w
   14000250a:	jne    0x140002502
   14000250c:	add    eax,0x14
   14000250f:	mov    ebx,eax
   140002511:	lea    rcx,[rax+rax*1]
   140002515:	call   QWORD PTR [rip+0x8cdd]        # 0x14000b1f8
   14000251b:	mov    rdi,rax
   14000251e:	test   rax,rax
   140002521:	jne    0x140002550
   140002523:	mov    ebx,0x8007000e
   140002528:	mov    rcx,QWORD PTR [rip+0xeaf1]        # 0x140011020
   14000252f:	cmp    rcx,r15
   140002532:	je     0x140002707
   140002538:	test   BYTE PTR [rcx+0x1c],0x1
   14000253c:	je     0x140002707
   140002542:	lea    edx,[rax+0x13]
   140002545:	mov    r9d,0x8007000e
   14000254b:	jmp    0x1400026f4
   140002550:	mov    rax,QWORD PTR [rsp+0x60]
   140002555:	lea    r9,[rip+0x9634]        # 0x14000bb90
   14000255c:	lea    r8,[rip+0x960d]        # 0x14000bb70
   140002563:	mov    QWORD PTR [rsp+0x20],rax
   140002568:	mov    rdx,rbx
   14000256b:	mov    rcx,rdi
   14000256e:	call   0x140002160
   140002573:	mov    ebx,eax
   140002575:	test   eax,eax
   140002577:	jns    0x14000259d
   140002579:	mov    rcx,QWORD PTR [rip+0xeaa0]        # 0x140011020
   140002580:	cmp    rcx,r15
   140002583:	je     0x140002707
   140002589:	test   BYTE PTR [rcx+0x1c],0x1
   14000258d:	je     0x140002707
   140002593:	mov    edx,0x14
   140002598:	jmp    0x1400026f1
   14000259d:	mov    rcx,QWORD PTR [rip+0xea7c]        # 0x140011020
   1400025a4:	cmp    rcx,r15
   1400025a7:	je     0x1400025c3
   1400025a9:	test   BYTE PTR [rcx+0x1c],0x4
   1400025ad:	je     0x1400025c3
   1400025af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025b3:	mov    edx,0x15
   1400025b8:	mov    r9,rdi
   1400025bb:	mov    r8,r12
   1400025be:	call   0x140001d18
   1400025c3:	lea    r9,[rsp+0x68]
   1400025c8:	mov    edx,0x1
   1400025cd:	lea    r8,[rsp+0x70]
   1400025d2:	mov    rcx,rdi
   1400025d5:	call   QWORD PTR [rip+0x8a7d]        # 0x14000b058
   1400025db:	test   eax,eax
   1400025dd:	jne    0x140002617
   1400025df:	call   QWORD PTR [rip+0x8afb]        # 0x14000b0e0
   1400025e5:	movzx  ebx,ax
   1400025e8:	or     ebx,0x80070000
   1400025ee:	test   eax,eax
   1400025f0:	cmovle ebx,eax
   1400025f3:	mov    rcx,QWORD PTR [rip+0xea26]        # 0x140011020
   1400025fa:	cmp    rcx,r15
   1400025fd:	je     0x140002707
   140002603:	test   BYTE PTR [rcx+0x1c],0x1
   140002607:	je     0x140002707
   14000260d:	mov    edx,0x16
   140002612:	jmp    0x1400024f1
   140002617:	mov    rcx,QWORD PTR [rsp+0x70]
   14000261c:	lea    rax,[rbp-0x80]
   140002620:	mov    QWORD PTR [rsp+0x50],rax
   140002625:	lea    r9,[rbp+0xf0]
   14000262c:	lea    rax,[rbp+0x10]
   140002630:	mov    QWORD PTR [rsp+0x48],rax
   140002635:	lea    r8,[rsp+0x7c]
   14000263a:	lea    rax,[rsp+0x78]
   14000263f:	mov    QWORD PTR [rsp+0x40],rax
   140002644:	lea    rdx,[rbp-0x60]
   140002648:	lea    rax,[rbp+0x80]
   14000264f:	mov    QWORD PTR [rsp+0x38],rax
   140002654:	lea    rax,[rbp-0x78]
   140002658:	mov    QWORD PTR [rsp+0x30],rax
   14000265d:	lea    rax,[rbp-0x7c]
   140002661:	mov    QWORD PTR [rsp+0x28],r14
   140002666:	mov    QWORD PTR [rsp+0x20],rax
   14000266b:	call   QWORD PTR [rip+0x89df]        # 0x14000b050
   140002671:	test   eax,eax
   140002673:	jne    0x1400026a5
   140002675:	call   QWORD PTR [rip+0x8a65]        # 0x14000b0e0
   14000267b:	movzx  ebx,ax
   14000267e:	or     ebx,0x80070000
   140002684:	test   eax,eax
   140002686:	cmovle ebx,eax
   140002689:	mov    rcx,QWORD PTR [rip+0xe990]        # 0x140011020
   140002690:	cmp    rcx,r15
   140002693:	je     0x140002707
   140002695:	test   BYTE PTR [rcx+0x1c],0x1
   140002699:	je     0x140002707
   14000269b:	mov    edx,0x17
   1400026a0:	jmp    0x1400024f1
   1400026a5:	mov    QWORD PTR [rsp+0x40],r14
   1400026aa:	lea    rcx,[rbp-0x60]
   1400026ae:	mov    DWORD PTR [rsp+0x38],r14d
   1400026b3:	xor    r9d,r9d
   1400026b6:	mov    QWORD PTR [rsp+0x30],r14
   1400026bb:	xor    r8d,r8d
   1400026be:	mov    DWORD PTR [rsp+0x28],0x2
   1400026c6:	or     edx,0xffffffff
   1400026c9:	mov    DWORD PTR [rsp+0x20],r14d
   1400026ce:	call   QWORD PTR [rip+0x8b1c]        # 0x14000b1f0
   1400026d4:	mov    ebx,eax
   1400026d6:	test   eax,eax
   1400026d8:	jns    0x140002700
   1400026da:	mov    rcx,QWORD PTR [rip+0xe93f]        # 0x140011020
   1400026e1:	cmp    rcx,r15
   1400026e4:	je     0x140002707
   1400026e6:	test   BYTE PTR [rcx+0x1c],0x1
   1400026ea:	je     0x140002707
   1400026ec:	mov    edx,0x18
   1400026f1:	mov    r9d,eax
   1400026f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026f8:	mov    r8,r12
   1400026fb:	call   0x140001cdc
   140002700:	mov    rcx,QWORD PTR [rip+0xe919]        # 0x140011020
   140002707:	mov    rax,QWORD PTR [rsp+0x70]
   14000270c:	test   rax,rax
   14000270f:	je     0x140002721
   140002711:	mov    rcx,rax
   140002714:	call   QWORD PTR [rip+0x89ae]        # 0x14000b0c8
   14000271a:	mov    rcx,QWORD PTR [rip+0xe8ff]        # 0x140011020
   140002721:	test   rdi,rdi
   140002724:	je     0x140002736
   140002726:	mov    rcx,rdi
   140002729:	call   QWORD PTR [rip+0x8ae1]        # 0x14000b210
   14000272f:	mov    rcx,QWORD PTR [rip+0xe8ea]        # 0x140011020
   140002736:	mov    rax,QWORD PTR [rsp+0x60]
   14000273b:	test   rax,rax
   14000273e:	je     0x140002750
   140002740:	mov    rcx,rax
   140002743:	call   QWORD PTR [rip+0x897f]        # 0x14000b0c8
   140002749:	mov    rcx,QWORD PTR [rip+0xe8d0]        # 0x140011020
   140002750:	test   rsi,rsi
   140002753:	je     0x140002765
   140002755:	mov    rcx,rsi
   140002758:	call   QWORD PTR [rip+0x8ab2]        # 0x14000b210
   14000275e:	mov    rcx,QWORD PTR [rip+0xe8bb]        # 0x140011020
   140002765:	cmp    rcx,r15
   140002768:	je     0x140002784
   14000276a:	test   BYTE PTR [rcx+0x1c],0x8
   14000276e:	je     0x140002784
   140002770:	mov    rcx,QWORD PTR [rcx+0x10]
   140002774:	mov    edx,0x19
   140002779:	mov    r9d,ebx
   14000277c:	mov    r8,r12
   14000277f:	call   0x140001cdc
   140002784:	mov    eax,ebx
   140002786:	mov    rcx,QWORD PTR [rbp+0x160]
   14000278d:	xor    rcx,rsp
   140002790:	call   0x140008aa0
   140002795:	lea    r11,[rsp+0x270]
   14000279d:	mov    rbx,QWORD PTR [r11+0x20]
   1400027a1:	mov    rsi,QWORD PTR [r11+0x28]
   1400027a5:	mov    rdi,QWORD PTR [r11+0x30]
   1400027a9:	mov    r12,QWORD PTR [r11+0x38]
   1400027ad:	mov    rsp,r11
   1400027b0:	pop    r15
   1400027b2:	pop    r14
   1400027b4:	pop    rbp
   1400027b5:	ret    
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400027c6:	push   rdi
   1400027c7:	sub    rsp,0x30
   1400027cb:	mov    rcx,QWORD PTR [rip+0xe84e]        # 0x140011020
   1400027d2:	lea    rdi,[rip+0xe847]        # 0x140011020
   1400027d9:	lea    rsi,[rip+0x93a0]        # 0x14000bb80
   1400027e0:	cmp    rcx,rdi
   1400027e3:	je     0x1400027fc
   1400027e5:	test   BYTE PTR [rcx+0x1c],0x8
   1400027e9:	je     0x1400027fc
   1400027eb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027ef:	mov    edx,0x1a
   1400027f4:	mov    r8,rsi
   1400027f7:	call   0x140001cb8
   1400027fc:	xor    eax,eax
   1400027fe:	xor    r9d,r9d
   140002801:	xor    r8d,r8d
   140002804:	mov    QWORD PTR [rip+0xf415],rax        # 0x140011c20
   14000280b:	xor    edx,edx
   14000280d:	mov    QWORD PTR [rip+0xf414],rax        # 0x140011c28
   140002814:	xor    ecx,ecx
   140002816:	call   QWORD PTR [rip+0x88bc]        # 0x14000b0d8
   14000281c:	mov    QWORD PTR [rip+0xf405],rax        # 0x140011c28
   140002823:	test   rax,rax
   140002826:	jne    0x140002854
   140002828:	call   QWORD PTR [rip+0x88b2]        # 0x14000b0e0
   14000282e:	mov    ebx,eax
   140002830:	mov    rcx,QWORD PTR [rip+0xe7e9]        # 0x140011020
   140002837:	cmp    rcx,rdi
   14000283a:	je     0x14000290c
   140002840:	test   BYTE PTR [rcx+0x1c],0x1
   140002844:	je     0x14000290c
   14000284a:	mov    edx,0x1b
   14000284f:	jmp    0x1400028f6
   140002854:	call   0x1400023e0
   140002859:	mov    ebx,eax
   14000285b:	test   eax,eax
   14000285d:	jns    0x140002880
   14000285f:	mov    rcx,QWORD PTR [rip+0xe7ba]        # 0x140011020
   140002866:	cmp    rcx,rdi
   140002869:	je     0x14000290c
   14000286f:	test   BYTE PTR [rcx+0x1c],0x1
   140002873:	je     0x14000290c
   140002879:	mov    edx,0x1c
   14000287e:	jmp    0x1400028f6
   140002880:	mov    r9d,0x1
   140002886:	lea    rax,[rip+0xf393]        # 0x140011c20
   14000288d:	lea    rdx,[rip+0xebb4]        # 0x140011448
   140002894:	mov    QWORD PTR [rsp+0x20],rax
   140002899:	lea    rcx,[rip+0x9248]        # 0x14000bae8
   1400028a0:	lea    r8d,[r9+0x3]
   1400028a4:	call   QWORD PTR [rip+0x8956]        # 0x14000b200
   1400028aa:	mov    ebx,eax
   1400028ac:	test   eax,eax
   1400028ae:	jns    0x1400028c9
   1400028b0:	mov    rcx,QWORD PTR [rip+0xe769]        # 0x140011020
   1400028b7:	cmp    rcx,rdi
   1400028ba:	je     0x14000290c
   1400028bc:	test   BYTE PTR [rcx+0x1c],0x1
   1400028c0:	je     0x14000290c
   1400028c2:	mov    edx,0x1d
   1400028c7:	jmp    0x1400028f6
   1400028c9:	mov    rcx,QWORD PTR [rip+0xf358]        # 0x140011c28
   1400028d0:	or     edx,0xffffffff
   1400028d3:	call   QWORD PTR [rip+0x881f]        # 0x14000b0f8
   1400028d9:	mov    ebx,eax
   1400028db:	test   eax,eax
   1400028dd:	je     0x140002905
   1400028df:	mov    rcx,QWORD PTR [rip+0xe73a]        # 0x140011020
   1400028e6:	cmp    rcx,rdi
   1400028e9:	je     0x14000290c
   1400028eb:	test   BYTE PTR [rcx+0x1c],0x1
   1400028ef:	je     0x14000290c
   1400028f1:	mov    edx,0x1e
   1400028f6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028fa:	mov    r9d,eax
   1400028fd:	mov    r8,rsi
   140002900:	call   0x140001cdc
   140002905:	mov    rcx,QWORD PTR [rip+0xe714]        # 0x140011020
   14000290c:	mov    rax,QWORD PTR [rip+0xf30d]        # 0x140011c20
   140002913:	test   eax,eax
   140002915:	je     0x140002926
   140002917:	mov    ecx,eax
   140002919:	call   QWORD PTR [rip+0x88f9]        # 0x14000b218
   14000291f:	mov    rcx,QWORD PTR [rip+0xe6fa]        # 0x140011020
   140002926:	mov    rax,QWORD PTR [rip+0xf2fb]        # 0x140011c28
   14000292d:	test   rax,rax
   140002930:	je     0x140002942
   140002932:	mov    rcx,rax
   140002935:	call   QWORD PTR [rip+0x8795]        # 0x14000b0d0
   14000293b:	mov    rcx,QWORD PTR [rip+0xe6de]        # 0x140011020
   140002942:	cmp    rcx,rdi
   140002945:	je     0x140002961
   140002947:	test   BYTE PTR [rcx+0x1c],0x8
   14000294b:	je     0x140002961
   14000294d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002951:	mov    edx,0x1f
   140002956:	mov    r9d,ebx
   140002959:	mov    r8,rsi
   14000295c:	call   0x140001cdc
   140002961:	mov    rsi,QWORD PTR [rsp+0x48]
   140002966:	mov    eax,ebx
   140002968:	mov    rbx,QWORD PTR [rsp+0x40]
   14000296d:	add    rsp,0x30
   140002971:	pop    rdi
   140002972:	ret    
   140002973:	int3   
   140002974:	int3   
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	rex push rdi
   14000297e:	sub    rsp,0x30
   140002982:	mov    rax,QWORD PTR [rip+0xe67f]        # 0x140011008
   140002989:	xor    rax,rsp
   14000298c:	mov    QWORD PTR [rsp+0x28],rax
   140002991:	cmp    BYTE PTR [rip+0xf298],0x0        # 0x140011c30
   140002998:	lea    rdi,[rip+0xf291]        # 0x140011c30
   14000299f:	jne    0x1400029d2
   1400029a1:	mov    r8b,0x1
   1400029a4:	mov    DWORD PTR [rsp+0x20],0x0
   1400029ac:	lea    rdx,[rsp+0x20]
   1400029b1:	mov    WORD PTR [rsp+0x24],0x500
   1400029b8:	mov    rcx,rdi
   1400029bb:	call   QWORD PTR [rip+0x8b07]        # 0x14000b4c8
   1400029c1:	xor    edx,edx
   1400029c3:	mov    rcx,rdi
   1400029c6:	call   QWORD PTR [rip+0x8b8c]        # 0x14000b558
   1400029cc:	mov    DWORD PTR [rax],0x20
   1400029d2:	mov    rcx,rdi
   1400029d5:	call   QWORD PTR [rip+0x89b5]        # 0x14000b390
   1400029db:	mov    edx,eax
   1400029dd:	xor    ecx,ecx
   1400029df:	call   QWORD PTR [rip+0x888b]        # 0x14000b270
   1400029e5:	mov    QWORD PTR [rip+0xf28c],rax        # 0x140011c78
   1400029ec:	test   rax,rax
   1400029ef:	je     0x140002a3f
   1400029f1:	mov    rcx,rdi
   1400029f4:	call   QWORD PTR [rip+0x8996]        # 0x14000b390
   1400029fa:	mov    rdx,QWORD PTR [rip+0xf277]        # 0x140011c78
   140002a01:	mov    r8,rdi
   140002a04:	mov    ecx,eax
   140002a06:	call   QWORD PTR [rip+0x898c]        # 0x14000b398
   140002a0c:	test   eax,eax
   140002a0e:	jne    0x140002a3b
   140002a10:	mov    rcx,QWORD PTR [rip+0xf261]        # 0x140011c78
   140002a17:	call   QWORD PTR [rip+0x86ab]        # 0x14000b0c8
   140002a1d:	and    QWORD PTR [rip+0xf253],0x0        # 0x140011c78
   140002a25:	call   QWORD PTR [rip+0x86b5]        # 0x14000b0e0
   140002a2b:	movzx  ecx,ax
   140002a2e:	or     ecx,0xc0070000
   140002a34:	test   eax,eax
   140002a36:	cmovle ecx,eax
   140002a39:	jmp    0x140002a44
   140002a3b:	xor    ecx,ecx
   140002a3d:	jmp    0x140002a44
   140002a3f:	mov    ecx,0xc000009a
   140002a44:	mov    eax,ecx
   140002a46:	mov    rcx,QWORD PTR [rsp+0x28]
   140002a4b:	xor    rcx,rsp
   140002a4e:	call   0x140008aa0
   140002a53:	add    rsp,0x30
   140002a57:	pop    rdi
   140002a58:	ret    
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	mov    QWORD PTR [rsp+0x18],rbx
   140002a65:	mov    QWORD PTR [rsp+0x20],rsi
   140002a6a:	mov    QWORD PTR [rsp+0x8],rcx
   140002a6f:	push   rbp
   140002a70:	push   rdi
   140002a71:	push   r14
   140002a73:	mov    rbp,rsp
   140002a76:	sub    rsp,0x60
   140002a7a:	mov    r14d,r9d
   140002a7d:	mov    rdi,rdx
   140002a80:	test   rdx,rdx
   140002a83:	jne    0x140002a8f
   140002a85:	mov    ebx,0xc000000d
   140002a8a:	jmp    0x140002b11
   140002a8f:	mov    rsi,QWORD PTR [rbp+0x40]
   140002a93:	lea    rcx,[rbp-0x40]
   140002a97:	and    QWORD PTR [rbp+0x20],0x0
   140002a9c:	xorps  xmm0,xmm0
   140002a9f:	and    QWORD PTR [rbp-0x28],0x0
   140002aa4:	mov    ebx,0x30
   140002aa9:	and    DWORD PTR [rbp-0x18],0x0
   140002aad:	xor    edx,edx
   140002aaf:	and    QWORD PTR [rsi],0x0
   140002ab3:	and    QWORD PTR [rbp-0x20],0x0
   140002ab8:	mov    DWORD PTR [rbp-0x30],ebx
   140002abb:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140002ac0:	call   QWORD PTR [rip+0x8a8a]        # 0x14000b550
   140002ac6:	lea    r9,[rbp-0x30]
   140002aca:	mov    r8d,ebx
   140002acd:	lea    rdx,[rbp+0x20]
   140002ad1:	lea    rcx,[rbp-0x40]
   140002ad5:	call   QWORD PTR [rip+0x86d5]        # 0x14000b1b0
   140002adb:	mov    ebx,eax
   140002add:	test   eax,eax
   140002adf:	jne    0x140002b11
   140002ae1:	mov    rcx,QWORD PTR [rbp+0x20]
   140002ae5:	lea    r9,[rbp+0x28]
   140002ae9:	and    QWORD PTR [rbp+0x28],0x0
   140002aee:	mov    r8,rdi
   140002af1:	mov    edx,r14d
   140002af4:	call   QWORD PTR [rip+0x8686]        # 0x14000b180
   140002afa:	mov    ebx,eax
   140002afc:	test   eax,eax
   140002afe:	jne    0x140002b07
   140002b00:	mov    rax,QWORD PTR [rbp+0x28]
   140002b04:	mov    QWORD PTR [rsi],rax
   140002b07:	mov    rcx,QWORD PTR [rbp+0x20]
   140002b0b:	call   QWORD PTR [rip+0x8677]        # 0x14000b188
   140002b11:	lea    r11,[rsp+0x60]
   140002b16:	mov    eax,ebx
   140002b18:	mov    rbx,QWORD PTR [r11+0x30]
   140002b1c:	mov    rsi,QWORD PTR [r11+0x38]
   140002b20:	mov    rsp,r11
   140002b23:	pop    r14
   140002b25:	pop    rdi
   140002b26:	pop    rbp
   140002b27:	ret    
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	mov    rax,rsp
   140002b33:	mov    QWORD PTR [rax+0x8],rbx
   140002b37:	mov    QWORD PTR [rax+0x20],r9
   140002b3b:	mov    QWORD PTR [rax+0x18],r8
   140002b3f:	mov    QWORD PTR [rax+0x10],rdx
   140002b43:	push   rsi
   140002b44:	sub    rsp,0x40
   140002b48:	mov    rcx,QWORD PTR [rip+0xf151]        # 0x140011ca0
   140002b4f:	lea    r8,[rax+0x10]
   140002b53:	and    QWORD PTR [rax+0x18],0x0
   140002b58:	mov    edx,0x3
   140002b5d:	and    QWORD PTR [rax+0x10],0x0
   140002b62:	and    DWORD PTR [rip+0xf103],0x0        # 0x140011c6c
   140002b69:	and    DWORD PTR [rip+0xf100],0x0        # 0x140011c70
   140002b70:	and    QWORD PTR [rip+0xf108],0x0        # 0x140011c80
   140002b78:	call   QWORD PTR [rip+0x8842]        # 0x14000b3c0
   140002b7e:	mov    ebx,eax
   140002b80:	test   eax,eax
   140002b82:	je     0x140002ba9
   140002b84:	lea    rax,[rip+0x9675]        # 0x14000c200
   140002b8b:	mov    QWORD PTR [rsp+0x30],rax
   140002b90:	lea    rax,[rip+0x9021]        # 0x14000bbb8
   140002b97:	mov    QWORD PTR [rsp+0x28],rax
   140002b9c:	mov    DWORD PTR [rsp+0x20],0x89
   140002ba4:	jmp    0x140002ca0
   140002ba9:	mov    rax,QWORD PTR [rsp+0x58]
   140002bae:	test   rax,rax
   140002bb1:	je     0x140002bc1
   140002bb3:	cmp    QWORD PTR [rax+0x10],0x0
   140002bb8:	je     0x140002bc1
   140002bba:	mov    eax,0x1
   140002bbf:	jmp    0x140002bc3
   140002bc1:	xor    eax,eax
   140002bc3:	lea    rcx,[rsp+0x68]
   140002bc8:	mov    DWORD PTR [rip+0xf09e],eax        # 0x140011c6c
   140002bce:	call   QWORD PTR [rip+0x8974]        # 0x14000b548
   140002bd4:	test   al,al
   140002bd6:	jne    0x140002c02
   140002bd8:	lea    rax,[rip+0x9621]        # 0x14000c200
   140002bdf:	mov    ebx,0xc00000e5
   140002be4:	mov    QWORD PTR [rsp+0x30],rax
   140002be9:	lea    rax,[rip+0x90a8]        # 0x14000bc98
   140002bf0:	mov    QWORD PTR [rsp+0x28],rax
   140002bf5:	mov    DWORD PTR [rsp+0x20],0x95
   140002bfd:	jmp    0x140002ca0
   140002c02:	mov    rcx,QWORD PTR [rip+0xf097]        # 0x140011ca0
   140002c09:	lea    r8,[rsp+0x60]
   140002c0e:	xor    eax,eax
   140002c10:	mov    edx,0x5
   140002c15:	cmp    DWORD PTR [rsp+0x68],0x2
   140002c1a:	sete   al
   140002c1d:	mov    DWORD PTR [rip+0xf04d],eax        # 0x140011c70
   140002c23:	call   QWORD PTR [rip+0x8797]        # 0x14000b3c0
   140002c29:	mov    ebx,eax
   140002c2b:	test   eax,eax
   140002c2d:	je     0x140002c51
   140002c2f:	lea    rax,[rip+0x95ca]        # 0x14000c200
   140002c36:	mov    QWORD PTR [rsp+0x30],rax
   140002c3b:	lea    rax,[rip+0x8f76]        # 0x14000bbb8
   140002c42:	mov    QWORD PTR [rsp+0x28],rax
   140002c47:	mov    DWORD PTR [rsp+0x20],0x9b
   140002c4f:	jmp    0x140002ca0
   140002c51:	mov    rax,QWORD PTR [rsp+0x60]
   140002c56:	mov    rbx,QWORD PTR [rax+0x10]
   140002c5a:	mov    rcx,rbx
   140002c5d:	call   QWORD PTR [rip+0x88dd]        # 0x14000b540
   140002c63:	mov    edx,eax
   140002c65:	xor    ecx,ecx
   140002c67:	mov    esi,eax
   140002c69:	call   QWORD PTR [rip+0x8601]        # 0x14000b270
   140002c6f:	mov    QWORD PTR [rip+0xf00a],rax        # 0x140011c80
   140002c76:	test   rax,rax
   140002c79:	jne    0x140002cbd
   140002c7b:	lea    rax,[rip+0x957e]        # 0x14000c200
   140002c82:	mov    ebx,0xc0000017
   140002c87:	mov    QWORD PTR [rsp+0x30],rax
   140002c8c:	lea    rax,[rip+0x902d]        # 0x14000bcc0
   140002c93:	mov    QWORD PTR [rsp+0x28],rax
   140002c98:	mov    DWORD PTR [rsp+0x20],0xa4
   140002ca0:	lea    r9,[rip+0x8f49]        # 0x14000bbf0
   140002ca7:	mov    r8d,ebx
   140002caa:	lea    rdx,[rip+0x8faf]        # 0x14000bc60
   140002cb1:	mov    ecx,0x1
   140002cb6:	call   0x140005910
   140002cbb:	jmp    0x140002ccd
   140002cbd:	mov    r8,rbx
   140002cc0:	mov    rdx,rax
   140002cc3:	mov    ecx,esi
   140002cc5:	call   QWORD PTR [rip+0x886d]        # 0x14000b538
   140002ccb:	xor    ebx,ebx
   140002ccd:	mov    rcx,QWORD PTR [rsp+0x60]
   140002cd2:	test   rcx,rcx
   140002cd5:	je     0x140002cdd
   140002cd7:	call   QWORD PTR [rip+0x86db]        # 0x14000b3b8
   140002cdd:	mov    rcx,QWORD PTR [rsp+0x58]
   140002ce2:	test   rcx,rcx
   140002ce5:	je     0x140002ced
   140002ce7:	call   QWORD PTR [rip+0x86cb]        # 0x14000b3b8
   140002ced:	mov    eax,ebx
   140002cef:	mov    rbx,QWORD PTR [rsp+0x50]
   140002cf4:	add    rsp,0x40
   140002cf8:	pop    rsi
   140002cf9:	ret    
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	rex push rbx
   140002d02:	sub    rsp,0x40
   140002d06:	xor    edx,edx
   140002d08:	mov    DWORD PTR [rsp+0x50],0x44
   140002d10:	lea    r9,[rsp+0x50]
   140002d15:	lea    r8,[rip+0xee34]        # 0x140011b50
   140002d1c:	lea    ecx,[rdx+0x1]
   140002d1f:	call   QWORD PTR [rip+0x867b]        # 0x14000b3a0
   140002d25:	xor    ebx,ebx
   140002d27:	test   eax,eax
   140002d29:	jne    0x140002d70
   140002d2b:	call   QWORD PTR [rip+0x83af]        # 0x14000b0e0
   140002d31:	test   eax,eax
   140002d33:	jg     0x140002d3f
   140002d35:	call   QWORD PTR [rip+0x83a5]        # 0x14000b0e0
   140002d3b:	mov    ebx,eax
   140002d3d:	jmp    0x140002d4e
   140002d3f:	call   QWORD PTR [rip+0x839b]        # 0x14000b0e0
   140002d45:	movzx  ebx,ax
   140002d48:	or     ebx,0xc0070000
   140002d4e:	lea    rax,[rip+0x94ab]        # 0x14000c200
   140002d55:	mov    QWORD PTR [rsp+0x30],rax
   140002d5a:	lea    rax,[rip+0x8f7f]        # 0x14000bce0
   140002d61:	mov    QWORD PTR [rsp+0x28],rax
   140002d66:	mov    DWORD PTR [rsp+0x20],0xca
   140002d6e:	jmp    0x140002dce
   140002d70:	xor    edx,edx
   140002d72:	lea    r9,[rsp+0x50]
   140002d77:	lea    r8,[rip+0xed82]        # 0x140011b00
   140002d7e:	lea    ecx,[rdx+0x16]
   140002d81:	call   QWORD PTR [rip+0x8619]        # 0x14000b3a0
   140002d87:	test   eax,eax
   140002d89:	jne    0x140002de9
   140002d8b:	call   QWORD PTR [rip+0x834f]        # 0x14000b0e0
   140002d91:	test   eax,eax
   140002d93:	jg     0x140002d9f
   140002d95:	call   QWORD PTR [rip+0x8345]        # 0x14000b0e0
   140002d9b:	mov    ebx,eax
   140002d9d:	jmp    0x140002dae
   140002d9f:	call   QWORD PTR [rip+0x833b]        # 0x14000b0e0
   140002da5:	movzx  ebx,ax
   140002da8:	or     ebx,0xc0070000
   140002dae:	lea    rax,[rip+0x944b]        # 0x14000c200
   140002db5:	mov    QWORD PTR [rsp+0x30],rax
   140002dba:	lea    rax,[rip+0x8f5f]        # 0x14000bd20
   140002dc1:	mov    QWORD PTR [rsp+0x28],rax
   140002dc6:	mov    DWORD PTR [rsp+0x20],0xd0
   140002dce:	lea    r9,[rip+0x8e1b]        # 0x14000bbf0
   140002dd5:	mov    r8d,ebx
   140002dd8:	lea    rdx,[rip+0x8e81]        # 0x14000bc60
   140002ddf:	mov    ecx,0x1
   140002de4:	call   0x140005910
   140002de9:	mov    eax,ebx
   140002deb:	add    rsp,0x40
   140002def:	pop    rbx
   140002df0:	ret    
   140002df1:	int3   
   140002df2:	int3   
   140002df3:	int3   
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	sub    rsp,0x28
   140002e04:	mov    dl,0x1
   140002e06:	lea    rcx,[rip+0xec73]        # 0x140011a80
   140002e0d:	call   QWORD PTR [rip+0x871d]        # 0x14000b530
   140002e13:	and    DWORD PTR [rip+0xee32],0x0        # 0x140011c4c
   140002e1a:	call   0x140008274
   140002e1f:	mov    rcx,QWORD PTR [rip+0xee72]        # 0x140011c98
   140002e26:	test   rcx,rcx
   140002e29:	je     0x140002e39
   140002e2b:	call   QWORD PTR [rip+0x824f]        # 0x14000b080
   140002e31:	and    QWORD PTR [rip+0xee5f],0x0        # 0x140011c98
   140002e39:	mov    rcx,QWORD PTR [rip+0xee50]        # 0x140011c90
   140002e40:	test   rcx,rcx
   140002e43:	je     0x140002e53
   140002e45:	call   QWORD PTR [rip+0x833d]        # 0x14000b188
   140002e4b:	and    QWORD PTR [rip+0xee3d],0x0        # 0x140011c90
   140002e53:	mov    rcx,QWORD PTR [rip+0xee2e]        # 0x140011c88
   140002e5a:	test   rcx,rcx
   140002e5d:	je     0x140002e6d
   140002e5f:	call   QWORD PTR [rip+0x8323]        # 0x14000b188
   140002e65:	and    QWORD PTR [rip+0xee1b],0x0        # 0x140011c88
   140002e6d:	mov    rcx,QWORD PTR [rip+0xee0c]        # 0x140011c80
   140002e74:	test   rcx,rcx
   140002e77:	je     0x140002e87
   140002e79:	call   QWORD PTR [rip+0x8249]        # 0x14000b0c8
   140002e7f:	and    QWORD PTR [rip+0xedf9],0x0        # 0x140011c80
   140002e87:	mov    rcx,QWORD PTR [rip+0xedea]        # 0x140011c78
   140002e8e:	test   rcx,rcx
   140002e91:	je     0x140002ea1
   140002e93:	call   QWORD PTR [rip+0x822f]        # 0x14000b0c8
   140002e99:	and    QWORD PTR [rip+0xedd7],0x0        # 0x140011c78
   140002ea1:	mov    rcx,QWORD PTR [rip+0xedf8]        # 0x140011ca0
   140002ea8:	test   rcx,rcx
   140002eab:	je     0x140002ebb
   140002ead:	call   QWORD PTR [rip+0x84fd]        # 0x14000b3b0
   140002eb3:	and    QWORD PTR [rip+0xede5],0x0        # 0x140011ca0
   140002ebb:	lea    rcx,[rip+0xebbe]        # 0x140011a80
   140002ec2:	add    rsp,0x28
   140002ec6:	rex.W jmp QWORD PTR [rip+0x865b]        # 0x14000b528
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	int3   
   140002ed1:	int3   
   140002ed2:	int3   
   140002ed3:	int3   
   140002ed4:	mov    QWORD PTR [rsp+0x8],rbx
   140002ed9:	mov    QWORD PTR [rsp+0x10],rbp
   140002ede:	push   rdi
   140002edf:	sub    rsp,0x70
   140002ee3:	cmp    DWORD PTR [rip+0xed62],0x0        # 0x140011c4c
   140002eea:	mov    edi,ecx
   140002eec:	mov    ebp,0x1
   140002ef1:	je     0x140002efa
   140002ef3:	xor    ebx,ebx
   140002ef5:	jmp    0x14000313d
   140002efa:	mov    dl,bpl
   140002efd:	lea    rcx,[rip+0xeb7c]        # 0x140011a80
   140002f04:	call   QWORD PTR [rip+0x8626]        # 0x14000b530
   140002f0a:	cmp    DWORD PTR [rip+0xed3b],0x0        # 0x140011c4c
   140002f11:	jne    0x140003125
   140002f17:	lea    rax,[rip+0xfffffffffffffee2]        # 0x140002e00
   140002f1e:	mov    QWORD PTR [rip+0xed3b],rax        # 0x140011c60
   140002f25:	call   0x140002d00
   140002f2a:	mov    ebx,eax
   140002f2c:	test   eax,eax
   140002f2e:	je     0x140002f6d
   140002f30:	lea    rax,[rip+0x92c9]        # 0x14000c200
   140002f37:	mov    QWORD PTR [rsp+0x30],rax
   140002f3c:	lea    rax,[rip+0x8e2d]        # 0x14000bd70
   140002f43:	mov    QWORD PTR [rsp+0x28],rax
   140002f48:	mov    DWORD PTR [rsp+0x20],0x12b
   140002f50:	mov    ecx,ebp
   140002f52:	lea    rdx,[rip+0x8d07]        # 0x14000bc60
   140002f59:	mov    r8d,ebx
   140002f5c:	lea    r9,[rip+0x8c8d]        # 0x14000bbf0
   140002f63:	call   0x140005910
   140002f68:	jmp    0x140003127
   140002f6d:	xor    edx,edx
   140002f6f:	lea    rcx,[rsp+0x40]
   140002f74:	lea    r8d,[rdx+0x30]
   140002f78:	call   0x1400093b2
   140002f7d:	lea    r9,[rip+0xed1c]        # 0x140011ca0
   140002f84:	mov    r8d,0x801
   140002f8a:	lea    rdx,[rsp+0x40]
   140002f8f:	xor    ecx,ecx
   140002f91:	call   QWORD PTR [rip+0x8431]        # 0x14000b3c8
   140002f97:	mov    ebx,eax
   140002f99:	test   eax,eax
   140002f9b:	je     0x140002fbf
   140002f9d:	lea    rax,[rip+0x925c]        # 0x14000c200
   140002fa4:	mov    QWORD PTR [rsp+0x30],rax
   140002fa9:	lea    rax,[rip+0x8df8]        # 0x14000bda8
   140002fb0:	mov    QWORD PTR [rsp+0x28],rax
   140002fb5:	mov    DWORD PTR [rsp+0x20],0x12e
   140002fbd:	jmp    0x140002f50
   140002fbf:	call   0x140002b30
   140002fc4:	mov    ebx,eax
   140002fc6:	test   eax,eax
   140002fc8:	je     0x140002fef
   140002fca:	lea    rax,[rip+0x922f]        # 0x14000c200
   140002fd1:	mov    QWORD PTR [rsp+0x30],rax
   140002fd6:	lea    rax,[rip+0x8dfb]        # 0x14000bdd8
   140002fdd:	mov    QWORD PTR [rsp+0x28],rax
   140002fe2:	mov    DWORD PTR [rsp+0x20],0x131
   140002fea:	jmp    0x140002f50
   140002fef:	mov    rdx,QWORD PTR [rip+0xec8a]        # 0x140011c80
   140002ff6:	lea    rax,[rip+0xec93]        # 0x140011c90
   140002ffd:	mov    r9d,0x305
   140003003:	mov    QWORD PTR [rsp+0x20],rax
   140003008:	call   0x140002a60
   14000300d:	mov    ebx,eax
   14000300f:	test   eax,eax
   140003011:	je     0x140003038
   140003013:	lea    rax,[rip+0x91e6]        # 0x14000c200
   14000301a:	mov    QWORD PTR [rsp+0x30],rax
   14000301f:	lea    rax,[rip+0x8dd2]        # 0x14000bdf8
   140003026:	mov    QWORD PTR [rsp+0x28],rax
   14000302b:	mov    DWORD PTR [rsp+0x20],0x139
   140003033:	jmp    0x140002f50
   140003038:	call   0x14000297c
   14000303d:	mov    ebx,eax
   14000303f:	test   eax,eax
   140003041:	je     0x140003068
   140003043:	lea    rax,[rip+0x91b6]        # 0x14000c200
   14000304a:	mov    QWORD PTR [rsp+0x30],rax
   14000304f:	lea    rax,[rip+0x8dca]        # 0x14000be20
   140003056:	mov    QWORD PTR [rsp+0x28],rax
   14000305b:	mov    DWORD PTR [rsp+0x20],0x13c
   140003063:	jmp    0x140002f50
   140003068:	mov    rdx,QWORD PTR [rip+0xec09]        # 0x140011c78
   14000306f:	lea    rax,[rip+0xec12]        # 0x140011c88
   140003076:	mov    r9d,0x285
   14000307c:	mov    QWORD PTR [rsp+0x20],rax
   140003081:	call   0x140002a60
   140003086:	mov    ebx,eax
   140003088:	mov    ecx,ebp
   14000308a:	test   eax,eax
   14000308c:	je     0x1400030b3
   14000308e:	lea    rax,[rip+0x916b]        # 0x14000c200
   140003095:	mov    QWORD PTR [rsp+0x30],rax
   14000309a:	lea    rax,[rip+0x8d57]        # 0x14000bdf8
   1400030a1:	mov    QWORD PTR [rsp+0x28],rax
   1400030a6:	mov    DWORD PTR [rsp+0x20],0x144
   1400030ae:	jmp    0x140002f52
   1400030b3:	mov    eax,0x3
   1400030b8:	test   edi,edi
   1400030ba:	cmovne ecx,eax
   1400030bd:	lea    rax,[rip+0xebd4]        # 0x140011c98
   1400030c4:	mov    QWORD PTR [rsp+0x28],rax
   1400030c9:	xor    r9d,r9d
   1400030cc:	and    QWORD PTR [rsp+0x20],0x0
   1400030d2:	xor    r8d,r8d
   1400030d5:	xor    edx,edx
   1400030d7:	call   QWORD PTR [rip+0x7fcb]        # 0x14000b0a8
   1400030dd:	test   eax,eax
   1400030df:	jne    0x14000311a
   1400030e1:	call   QWORD PTR [rip+0x7ff9]        # 0x14000b0e0
   1400030e7:	movzx  ebx,ax
   1400030ea:	or     ebx,0xc0070000
   1400030f0:	test   eax,eax
   1400030f2:	cmovle ebx,eax
   1400030f5:	lea    rax,[rip+0x9104]        # 0x14000c200
   1400030fc:	mov    QWORD PTR [rsp+0x30],rax
   140003101:	lea    rax,[rip+0x8d48]        # 0x14000be50
   140003108:	mov    QWORD PTR [rsp+0x28],rax
   14000310d:	mov    DWORD PTR [rsp+0x20],0x155
   140003115:	jmp    0x140002f50
   14000311a:	call   0x14000823c
   14000311f:	mov    DWORD PTR [rip+0xeb27],ebp        # 0x140011c4c
   140003125:	xor    ebx,ebx
   140003127:	lea    rcx,[rip+0xe952]        # 0x140011a80
   14000312e:	call   QWORD PTR [rip+0x83f4]        # 0x14000b528
   140003134:	test   ebx,ebx
   140003136:	jns    0x14000313d
   140003138:	call   0x140002e00
   14000313d:	lea    r11,[rsp+0x70]
   140003142:	mov    eax,ebx
   140003144:	mov    rbx,QWORD PTR [r11+0x10]
   140003148:	mov    rbp,QWORD PTR [r11+0x18]
   14000314c:	mov    rsp,r11
   14000314f:	pop    rdi
   140003150:	ret    
   140003151:	int3   
   140003152:	int3   
   140003153:	int3   
   140003154:	int3   
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	mov    QWORD PTR [rsp+0x10],rbx
   14000315d:	push   rbp
   14000315e:	push   rsi
   14000315f:	push   r14
   140003161:	sub    rsp,0x90
   140003168:	mov    rax,QWORD PTR [rip+0xde99]        # 0x140011008
   14000316f:	xor    rax,rsp
   140003172:	mov    QWORD PTR [rsp+0x80],rax
   14000317a:	and    QWORD PTR [rsp+0x40],0x0
   140003180:	lea    rdx,[rsp+0x40]
   140003185:	mov    r14,r9
   140003188:	mov    rbp,r8
   14000318b:	mov    rsi,rcx
   14000318e:	call   0x140003a5c
   140003193:	mov    ebx,eax
   140003195:	test   eax,eax
   140003197:	je     0x1400031be
   140003199:	lea    rax,[rip+0x9060]        # 0x14000c200
   1400031a0:	mov    QWORD PTR [rsp+0x30],rax
   1400031a5:	lea    rax,[rip+0x8ce4]        # 0x14000be90
   1400031ac:	mov    QWORD PTR [rsp+0x28],rax
   1400031b1:	mov    DWORD PTR [rsp+0x20],0x17c
   1400031b9:	jmp    0x140003246
   1400031be:	mov    r8,QWORD PTR [rsp+0x40]
   1400031c3:	lea    rax,[rsp+0x48]
   1400031c8:	mov    QWORD PTR [rsp+0x38],rax
   1400031cd:	mov    rdx,rsi
   1400031d0:	mov    QWORD PTR [rsp+0x30],r14
   1400031d5:	mov    QWORD PTR [rsp+0x28],rbp
   1400031da:	call   0x14000561c
   1400031df:	mov    ebx,eax
   1400031e1:	test   eax,eax
   1400031e3:	je     0x140003207
   1400031e5:	lea    rax,[rip+0x9014]        # 0x14000c200
   1400031ec:	mov    QWORD PTR [rsp+0x30],rax
   1400031f1:	lea    rax,[rip+0x8cc0]        # 0x14000beb8
   1400031f8:	mov    QWORD PTR [rsp+0x28],rax
   1400031fd:	mov    DWORD PTR [rsp+0x20],0x18c
   140003205:	jmp    0x140003246
   140003207:	mov    r9d,DWORD PTR [rsp+0x7c]
   14000320c:	mov    edx,0x1
   140003211:	mov    r8d,DWORD PTR [rsp+0x78]
   140003216:	mov    rcx,QWORD PTR [rsp+0x40]
   14000321b:	call   0x1400059d4
   140003220:	mov    ebx,eax
   140003222:	test   eax,eax
   140003224:	je     0x140003263
   140003226:	lea    rax,[rip+0x8fd3]        # 0x14000c200
   14000322d:	mov    QWORD PTR [rsp+0x30],rax
   140003232:	lea    rax,[rip+0x8cb7]        # 0x14000bef0
   140003239:	mov    QWORD PTR [rsp+0x28],rax
   14000323e:	mov    DWORD PTR [rsp+0x20],0x194
   140003246:	lea    r9,[rip+0x89a3]        # 0x14000bbf0
   14000324d:	mov    r8d,ebx
   140003250:	lea    rdx,[rip+0x8a09]        # 0x14000bc60
   140003257:	mov    ecx,0x1
   14000325c:	call   0x140005910
   140003261:	jmp    0x140003265
   140003263:	xor    ebx,ebx
   140003265:	cmp    QWORD PTR [rsp+0x40],0x0
   14000326b:	je     0x140003278
   14000326d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003272:	call   QWORD PTR [rip+0x7e50]        # 0x14000b0c8
   140003278:	mov    eax,ebx
   14000327a:	mov    rcx,QWORD PTR [rsp+0x80]
   140003282:	xor    rcx,rsp
   140003285:	call   0x140008aa0
   14000328a:	mov    rbx,QWORD PTR [rsp+0xb8]
   140003292:	add    rsp,0x90
   140003299:	pop    r14
   14000329b:	pop    rsi
   14000329c:	pop    rbp
   14000329d:	ret    
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	int3   
   1400032a1:	int3   
   1400032a2:	int3   
   1400032a3:	int3   
   1400032a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400032a9:	push   rdi
   1400032aa:	sub    rsp,0x40
   1400032ae:	mov    rax,rdx
   1400032b1:	sub    r8d,0x9
   1400032b5:	je     0x1400033a7
   1400032bb:	lea    rdi,[rip+0x8f3e]        # 0x14000c200
   1400032c2:	cmp    r8d,0x1
   1400032c6:	je     0x140003306
   1400032c8:	mov    QWORD PTR [rsp+0x30],rdi
   1400032cd:	lea    rax,[rip+0x8cfc]        # 0x14000bfd0
   1400032d4:	mov    QWORD PTR [rsp+0x28],rax
   1400032d9:	mov    ebx,0xc000000d
   1400032de:	mov    DWORD PTR [rsp+0x20],0x1e1
   1400032e6:	lea    r9,[rip+0x8903]        # 0x14000bbf0
   1400032ed:	mov    r8d,ebx
   1400032f0:	lea    rdx,[rip+0x8969]        # 0x14000bc60
   1400032f7:	mov    ecx,0x1
   1400032fc:	call   0x140005910
   140003301:	jmp    0x1400033e3
   140003306:	test   r9,r9
   140003309:	je     0x14000334c
   14000330b:	mov    ecx,0xb
   140003310:	cmp    cx,WORD PTR [r9]
   140003314:	jne    0x14000334c
   140003316:	or     ecx,0xffffffff
   140003319:	xor    edx,edx
   14000331b:	cmp    cx,WORD PTR [r9+0x8]
   140003320:	mov    rcx,rax
   140003323:	sete   dl
   140003326:	call   0x140006d70
   14000332b:	mov    ebx,eax
   14000332d:	test   eax,eax
   14000332f:	je     0x140003385
   140003331:	mov    QWORD PTR [rsp+0x30],rdi
   140003336:	lea    rax,[rip+0x8bfb]        # 0x14000bf38
   14000333d:	mov    QWORD PTR [rsp+0x28],rax
   140003342:	mov    DWORD PTR [rsp+0x20],0x1b6
   14000334a:	jmp    0x14000336a
   14000334c:	mov    QWORD PTR [rsp+0x30],rdi
   140003351:	lea    rax,[rip+0x8bc8]        # 0x14000bf20
   140003358:	mov    QWORD PTR [rsp+0x28],rax
   14000335d:	mov    ebx,0xc00000e5
   140003362:	mov    DWORD PTR [rsp+0x20],0x1b0
   14000336a:	lea    r9,[rip+0x887f]        # 0x14000bbf0
   140003371:	mov    r8d,ebx
   140003374:	lea    rdx,[rip+0x88e5]        # 0x14000bc60
   14000337b:	mov    ecx,0x1
   140003380:	call   0x140005910
   140003385:	test   ebx,ebx
   140003387:	je     0x1400033e1
   140003389:	mov    QWORD PTR [rsp+0x30],rdi
   14000338e:	lea    rax,[rip+0x8c03]        # 0x14000bf98
   140003395:	mov    QWORD PTR [rsp+0x28],rax
   14000339a:	mov    DWORD PTR [rsp+0x20],0x1dd
   1400033a2:	jmp    0x1400032e6
   1400033a7:	mov    r9,QWORD PTR [rsp+0x78]
   1400033ac:	mov    r8,QWORD PTR [rsp+0x70]
   1400033b1:	call   0x140003158
   1400033b6:	mov    ebx,eax
   1400033b8:	test   eax,eax
   1400033ba:	je     0x1400033e1
   1400033bc:	lea    rdi,[rip+0x8e3d]        # 0x14000c200
   1400033c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400033c8:	lea    rax,[rip+0x8b81]        # 0x14000bf50
   1400033cf:	mov    QWORD PTR [rsp+0x28],rax
   1400033d4:	mov    DWORD PTR [rsp+0x20],0x1d7
   1400033dc:	jmp    0x1400032e6
   1400033e1:	xor    ebx,ebx
   1400033e3:	mov    eax,ebx
   1400033e5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400033ea:	add    rsp,0x40
   1400033ee:	pop    rdi
   1400033ef:	ret    
   1400033f0:	int3   
   1400033f1:	int3   
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	rex push rbp
   1400033fa:	push   rbx
   1400033fb:	push   rsi
   1400033fc:	push   rdi
   1400033fd:	push   r12
   1400033ff:	push   r14
   140003401:	push   r15
   140003403:	lea    rbp,[rsp-0x7]
   140003408:	sub    rsp,0x90
   14000340f:	mov    rax,QWORD PTR [rip+0xdbf2]        # 0x140011008
   140003416:	xor    rax,rsp
   140003419:	mov    QWORD PTR [rbp-0x1],rax
   14000341d:	mov    ecx,DWORD PTR [rbp+0x7f]
   140003420:	lea    rax,[rbp-0x45]
   140003424:	mov    r12,QWORD PTR [rbp+0x77]
   140003428:	mov    rsi,r9
   14000342b:	mov    rdi,QWORD PTR [rbp+0x97]
   140003432:	lea    r9,[rbp-0x3d]
   140003436:	mov    QWORD PTR [rsp+0x28],rax
   14000343b:	mov    r15d,r8d
   14000343e:	lea    rax,[rbp-0x41]
   140003442:	mov    r14,rdx
   140003445:	mov    rdx,QWORD PTR [rbp+0x87]
   14000344c:	lea    r8,[rbp-0x19]
   140003450:	mov    QWORD PTR [rsp+0x20],rax
   140003455:	call   0x1400064d8
   14000345a:	mov    ebx,eax
   14000345c:	test   eax,eax
   14000345e:	je     0x140003485
   140003460:	lea    rax,[rip+0x8d99]        # 0x14000c200
   140003467:	mov    QWORD PTR [rsp+0x30],rax
   14000346c:	lea    rax,[rip+0x8b85]        # 0x14000bff8
   140003473:	mov    QWORD PTR [rsp+0x28],rax
   140003478:	mov    DWORD PTR [rsp+0x20],0x206
   140003480:	jmp    0x140003587
   140003485:	mov    ecx,DWORD PTR [rbp+0x8f]
   14000348b:	lea    rax,[rbp-0x45]
   14000348f:	mov    QWORD PTR [rsp+0x28],rax
   140003494:	lea    r9,[rbp-0x39]
   140003498:	lea    rax,[rbp-0x49]
   14000349c:	mov    rdx,rdi
   14000349f:	lea    r8,[rbp-0x31]
   1400034a3:	mov    QWORD PTR [rsp+0x20],rax
   1400034a8:	call   0x1400064d8
   1400034ad:	mov    ebx,eax
   1400034af:	test   eax,eax
   1400034b1:	je     0x1400034d8
   1400034b3:	lea    rax,[rip+0x8d46]        # 0x14000c200
   1400034ba:	mov    QWORD PTR [rsp+0x30],rax
   1400034bf:	lea    rax,[rip+0x8b32]        # 0x14000bff8
   1400034c6:	mov    QWORD PTR [rsp+0x28],rax
   1400034cb:	mov    DWORD PTR [rsp+0x20],0x210
   1400034d3:	jmp    0x140003587
   1400034d8:	mov    edi,DWORD PTR [rbp+0x6f]
   1400034db:	cmp    edi,0x9
   1400034de:	je     0x140003510
   1400034e0:	mov    rcx,r14
   1400034e3:	call   0x140006ad8
   1400034e8:	mov    ebx,eax
   1400034ea:	test   eax,eax
   1400034ec:	je     0x140003510
   1400034ee:	lea    rax,[rip+0x8d0b]        # 0x14000c200
   1400034f5:	mov    QWORD PTR [rsp+0x30],rax
   1400034fa:	lea    rax,[rip+0x8b17]        # 0x14000c018
   140003501:	mov    QWORD PTR [rsp+0x28],rax
   140003506:	mov    DWORD PTR [rsp+0x20],0x21c
   14000350e:	jmp    0x140003587
   140003510:	mov    ecx,r15d
   140003513:	call   0x140002ed4
   140003518:	mov    ebx,eax
   14000351a:	test   eax,eax
   14000351c:	je     0x140003540
   14000351e:	lea    rax,[rip+0x8cdb]        # 0x14000c200
   140003525:	mov    QWORD PTR [rsp+0x30],rax
   14000352a:	lea    rax,[rip+0x8b0f]        # 0x14000c040
   140003531:	mov    QWORD PTR [rsp+0x28],rax
   140003536:	mov    DWORD PTR [rsp+0x20],0x220
   14000353e:	jmp    0x140003587
   140003540:	mov    eax,DWORD PTR [rbp+0x67]
   140003543:	test   eax,eax
   140003545:	je     0x140003679
   14000354b:	sub    eax,0x1
   14000354e:	je     0x140003631
   140003554:	sub    eax,0x2
   140003557:	je     0x1400035e9
   14000355d:	cmp    eax,0x1
   140003560:	je     0x1400035a7
   140003562:	lea    rax,[rip+0x8c97]        # 0x14000c200
   140003569:	mov    ebx,0xc000000d
   14000356e:	mov    QWORD PTR [rsp+0x30],rax
   140003573:	lea    rax,[rip+0x8bae]        # 0x14000c128
   14000357a:	mov    QWORD PTR [rsp+0x28],rax
   14000357f:	mov    DWORD PTR [rsp+0x20],0x24e
   140003587:	lea    r9,[rip+0x8662]        # 0x14000bbf0
   14000358e:	mov    r8d,ebx
   140003591:	lea    rdx,[rip+0x86c8]        # 0x14000bc60
   140003598:	mov    ecx,0x1
   14000359d:	call   0x140005910
   1400035a2:	jmp    0x1400036c9
   1400035a7:	mov    eax,DWORD PTR [rbp-0x39]
   1400035aa:	mov    r8d,edi
   1400035ad:	mov    r9d,DWORD PTR [rbp-0x3d]
   1400035b1:	mov    rdx,rsi
   1400035b4:	mov    DWORD PTR [rsp+0x20],eax
   1400035b8:	call   0x140007300
   1400035bd:	mov    ebx,eax
   1400035bf:	test   eax,eax
   1400035c1:	je     0x1400036c7
   1400035c7:	lea    rax,[rip+0x8c32]        # 0x14000c200
   1400035ce:	mov    QWORD PTR [rsp+0x30],rax
   1400035d3:	lea    rax,[rip+0x8b06]        # 0x14000c0e0
   1400035da:	mov    QWORD PTR [rsp+0x28],rax
   1400035df:	mov    DWORD PTR [rsp+0x20],0x24a
   1400035e7:	jmp    0x140003587
   1400035e9:	mov    eax,DWORD PTR [rbp-0x49]
   1400035ec:	mov    r9d,edi
   1400035ef:	mov    DWORD PTR [rsp+0x28],eax
   1400035f3:	mov    r8,rsi
   1400035f6:	mov    eax,DWORD PTR [rbp-0x41]
   1400035f9:	mov    DWORD PTR [rsp+0x20],eax
   1400035fd:	call   0x1400070e4
   140003602:	mov    ebx,eax
   140003604:	test   eax,eax
   140003606:	je     0x1400036c7
   14000360c:	lea    rax,[rip+0x8bed]        # 0x14000c200
   140003613:	mov    QWORD PTR [rsp+0x30],rax
   140003618:	lea    rax,[rip+0x8ac1]        # 0x14000c0e0
   14000361f:	mov    QWORD PTR [rsp+0x28],rax
   140003624:	mov    DWORD PTR [rsp+0x20],0x241
   14000362c:	jmp    0x140003587
   140003631:	lea    rax,[rbp-0x31]
   140003635:	mov    r9d,edi
   140003638:	mov    QWORD PTR [rsp+0x28],rax
   14000363d:	mov    r8,rsi
   140003640:	lea    rax,[rbp-0x19]
   140003644:	mov    QWORD PTR [rsp+0x20],rax
   140003649:	call   0x14000417c
   14000364e:	mov    ebx,eax
   140003650:	test   eax,eax
   140003652:	je     0x1400036c7
   140003654:	lea    rax,[rip+0x8ba5]        # 0x14000c200
   14000365b:	mov    QWORD PTR [rsp+0x30],rax
   140003660:	lea    rax,[rip+0x8a31]        # 0x14000c098
   140003667:	mov    QWORD PTR [rsp+0x28],rax
   14000366c:	mov    DWORD PTR [rsp+0x20],0x237
   140003674:	jmp    0x140003587
   140003679:	lea    rax,[rbp-0x31]
   14000367d:	mov    r9,r12
   140003680:	mov    QWORD PTR [rsp+0x28],rax
   140003685:	mov    r8d,edi
   140003688:	lea    rax,[rbp-0x19]
   14000368c:	mov    rdx,rsi
   14000368f:	mov    rcx,r14
   140003692:	mov    QWORD PTR [rsp+0x20],rax
   140003697:	call   0x1400032a4
   14000369c:	mov    ebx,eax
   14000369e:	test   eax,eax
   1400036a0:	je     0x1400036c7
   1400036a2:	lea    rax,[rip+0x8b57]        # 0x14000c200
   1400036a9:	mov    QWORD PTR [rsp+0x30],rax
   1400036ae:	lea    rax,[rip+0x89a3]        # 0x14000c058
   1400036b5:	mov    QWORD PTR [rsp+0x28],rax
   1400036ba:	mov    DWORD PTR [rsp+0x20],0x22d
   1400036c2:	jmp    0x140003587
   1400036c7:	xor    ebx,ebx
   1400036c9:	mov    eax,ebx
   1400036cb:	mov    rcx,QWORD PTR [rbp-0x1]
   1400036cf:	xor    rcx,rsp
   1400036d2:	call   0x140008aa0
   1400036d7:	add    rsp,0x90
   1400036de:	pop    r15
   1400036e0:	pop    r14
   1400036e2:	pop    r12
   1400036e4:	pop    rdi
   1400036e5:	pop    rsi
   1400036e6:	pop    rbx
   1400036e7:	pop    rbp
   1400036e8:	ret    
   1400036e9:	int3   
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400036f5:	mov    DWORD PTR [rsp+0x10],edx
   1400036f9:	mov    DWORD PTR [rsp+0x8],ecx
   1400036fd:	push   rbp
   1400036fe:	push   rsi
   1400036ff:	push   rdi
   140003700:	push   r12
   140003702:	push   r13
   140003704:	push   r14
   140003706:	push   r15
   140003708:	mov    rbp,rsp
   14000370b:	sub    rsp,0x70
   14000370f:	xor    eax,eax
   140003711:	mov    r12,r9
   140003714:	cmp    DWORD PTR [rip+0xe53a],eax        # 0x140011c54
   14000371a:	mov    r13d,r8d
   14000371d:	mov    esi,eax
   14000371f:	mov    DWORD PTR [rbp+0x48],eax
   140003722:	mov    QWORD PTR [rbp-0x8],rax
   140003726:	mov    r14d,eax
   140003729:	mov    QWORD PTR [rbp-0x10],rax
   14000372d:	mov    edi,eax
   14000372f:	mov    QWORD PTR [rbp+0x78],rax
   140003733:	mov    DWORD PTR [rbp+0x40],eax
   140003736:	je     0x1400038ca
   14000373c:	cmp    DWORD PTR [rip+0xe50e],eax        # 0x140011c50
   140003742:	je     0x1400038ca
   140003748:	lea    rdx,[rbp+0x40]
   14000374c:	lea    rcx,[rbp-0x8]
   140003750:	call   0x140006870
   140003755:	mov    ebx,eax
   140003757:	test   eax,eax
   140003759:	je     0x140003799
   14000375b:	lea    rax,[rip+0x8a9e]        # 0x14000c200
   140003762:	mov    r8d,ebx
   140003765:	mov    QWORD PTR [rsp+0x30],rax
   14000376a:	lea    r9,[rip+0x847f]        # 0x14000bbf0
   140003771:	lea    rax,[rip+0x8a30]        # 0x14000c1a8
   140003778:	mov    QWORD PTR [rsp+0x28],rax
   14000377d:	lea    rdx,[rip+0x84dc]        # 0x14000bc60
   140003784:	lea    ecx,[rdi+0x1]
   140003787:	mov    DWORD PTR [rsp+0x20],0x48d
   14000378f:	call   0x140005910
   140003794:	jmp    0x140003918
   140003799:	mov    r15d,DWORD PTR [rbp+0x68]
   14000379d:	lea    rdx,[rbp+0x78]
   1400037a1:	xor    ecx,ecx
   1400037a3:	cmp    r15d,0x9
   1400037a7:	sete   cl
   1400037aa:	call   0x140005ddc
   1400037af:	mov    ebx,eax
   1400037b1:	test   eax,eax
   1400037b3:	je     0x1400037f9
   1400037b5:	lea    rax,[rip+0x8a44]        # 0x14000c200
   1400037bc:	mov    r8d,ebx
   1400037bf:	mov    QWORD PTR [rsp+0x30],rax
   1400037c4:	lea    r9,[rip+0x8425]        # 0x14000bbf0
   1400037cb:	lea    rax,[rip+0x899e]        # 0x14000c170
   1400037d2:	mov    ecx,0x1
   1400037d7:	mov    QWORD PTR [rsp+0x28],rax
   1400037dc:	lea    rdx,[rip+0x847d]        # 0x14000bc60
   1400037e3:	mov    DWORD PTR [rsp+0x20],0x493
   1400037eb:	call   0x140005910
   1400037f0:	mov    rdi,QWORD PTR [rbp+0x78]
   1400037f4:	jmp    0x14000390a
   1400037f9:	mov    rdi,QWORD PTR [rbp+0x78]
   1400037fd:	lea    r8,[rbp-0x10]
   140003801:	mov    rcx,rdi
   140003804:	lea    rdx,[rbp+0x48]
   140003808:	call   0x140005f1c
   14000380d:	mov    ebx,eax
   14000380f:	test   eax,eax
   140003811:	je     0x14000385a
   140003813:	lea    rax,[rip+0x89e6]        # 0x14000c200
   14000381a:	mov    r8d,ebx
   14000381d:	mov    QWORD PTR [rsp+0x30],rax
   140003822:	lea    r9,[rip+0x83c7]        # 0x14000bbf0
   140003829:	lea    rax,[rip+0x8958]        # 0x14000c188
   140003830:	mov    ecx,0x1
   140003835:	mov    QWORD PTR [rsp+0x28],rax
   14000383a:	lea    rdx,[rip+0x841f]        # 0x14000bc60
   140003841:	mov    DWORD PTR [rsp+0x20],0x499
   140003849:	call   0x140005910
   14000384e:	mov    esi,DWORD PTR [rbp+0x48]
   140003851:	mov    r14,QWORD PTR [rbp-0x10]
   140003855:	jmp    0x14000390a
   14000385a:	mov    ecx,DWORD PTR [rbp+0x60]
   14000385d:	mov    esi,DWORD PTR [rbp+0x48]
   140003860:	mov    r14,QWORD PTR [rbp-0x10]
   140003864:	cmp    ecx,0x4
   140003867:	ja     0x1400038c6
   140003869:	mov    rax,QWORD PTR [rbp+0x70]
   14000386d:	mov    r9,rdi
   140003870:	mov    r8d,DWORD PTR [rbp+0x40]
   140003874:	mov    rdx,QWORD PTR [rbp-0x8]
   140003878:	mov    QWORD PTR [rsp+0x50],r12
   14000387d:	mov    DWORD PTR [rsp+0x48],r13d
   140003882:	mov    QWORD PTR [rsp+0x40],r14
   140003887:	mov    DWORD PTR [rsp+0x38],esi
   14000388b:	mov    QWORD PTR [rsp+0x30],rax
   140003890:	mov    DWORD PTR [rsp+0x28],r15d
   140003895:	mov    DWORD PTR [rsp+0x20],ecx
   140003899:	call   0x1400033f8
   14000389e:	mov    ebx,eax
   1400038a0:	test   eax,eax
   1400038a2:	je     0x1400038c6
   1400038a4:	lea    rax,[rip+0x8955]        # 0x14000c200
   1400038ab:	mov    QWORD PTR [rsp+0x30],rax
   1400038b0:	lea    rax,[rip+0x8909]        # 0x14000c1c0
   1400038b7:	mov    QWORD PTR [rsp+0x28],rax
   1400038bc:	mov    DWORD PTR [rsp+0x20],0x4b0
   1400038c4:	jmp    0x1400038ef
   1400038c6:	xor    ebx,ebx
   1400038c8:	jmp    0x14000390a
   1400038ca:	lea    rax,[rip+0x892f]        # 0x14000c200
   1400038d1:	mov    ebx,0xc0070015
   1400038d6:	mov    QWORD PTR [rsp+0x30],rax
   1400038db:	lea    rax,[rip+0x886e]        # 0x14000c150
   1400038e2:	mov    QWORD PTR [rsp+0x28],rax
   1400038e7:	mov    DWORD PTR [rsp+0x20],0x481
   1400038ef:	lea    r9,[rip+0x82fa]        # 0x14000bbf0
   1400038f6:	mov    r8d,ebx
   1400038f9:	lea    rdx,[rip+0x8360]        # 0x14000bc60
   140003900:	mov    ecx,0x1
   140003905:	call   0x140005910
   14000390a:	test   rdi,rdi
   14000390d:	je     0x140003918
   14000390f:	mov    rcx,rdi
   140003912:	call   QWORD PTR [rip+0x79e0]        # 0x14000b2f8
   140003918:	mov    rcx,QWORD PTR [rbp-0x8]
   14000391c:	test   rcx,rcx
   14000391f:	je     0x140003927
   140003921:	call   QWORD PTR [rip+0x7bf9]        # 0x14000b520
   140003927:	mov    rdx,r14
   14000392a:	mov    ecx,esi
   14000392c:	call   0x14000632c
   140003931:	mov    eax,ebx
   140003933:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000393b:	add    rsp,0x70
   14000393f:	pop    r15
   140003941:	pop    r14
   140003943:	pop    r13
   140003945:	pop    r12
   140003947:	pop    rdi
   140003948:	pop    rsi
   140003949:	pop    rbp
   14000394a:	ret    
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	int3   
   140003951:	int3   
   140003952:	int3   
   140003953:	int3   
   140003954:	mov    QWORD PTR [rsp+0x8],rbx
   140003959:	mov    QWORD PTR [rsp+0x10],rsi
   14000395e:	push   rdi
   14000395f:	sub    rsp,0x40
   140003963:	mov    dl,0x1
   140003965:	lea    rcx,[rip+0xe254]        # 0x140011bc0
   14000396c:	call   QWORD PTR [rip+0x7bbe]        # 0x14000b530
   140003972:	mov    eax,DWORD PTR [rip+0xe2e0]        # 0x140011c58
   140003978:	xor    edi,edi
   14000397a:	test   eax,eax
   14000397c:	jne    0x1400039c0
   14000397e:	lea    rax,[rip+0x887b]        # 0x14000c200
   140003985:	mov    edi,0x80000025
   14000398a:	mov    QWORD PTR [rsp+0x30],rax
   14000398f:	lea    r9,[rip+0x88ca]        # 0x14000c260
   140003996:	lea    rax,[rip+0x8873]        # 0x14000c210
   14000399d:	mov    r8d,edi
   1400039a0:	mov    QWORD PTR [rsp+0x28],rax
   1400039a5:	lea    rdx,[rip+0x82b4]        # 0x14000bc60
   1400039ac:	mov    ecx,0x1
   1400039b1:	mov    DWORD PTR [rsp+0x20],0x6b
   1400039b9:	call   0x140005910
   1400039be:	jmp    0x140003a36
   1400039c0:	add    eax,0xffffffff
   1400039c3:	mov    DWORD PTR [rip+0xe28f],eax        # 0x140011c58
   1400039c9:	jne    0x140003a36
   1400039cb:	mov    rbx,QWORD PTR [rip+0xe28e]        # 0x140011c60
   1400039d2:	mov    DWORD PTR [rip+0xe27c],edi        # 0x140011c54
   1400039d8:	test   rbx,rbx
   1400039db:	je     0x1400039ef
   1400039dd:	mov    rcx,rbx
   1400039e0:	call   QWORD PTR [rip+0x7b92]        # 0x14000b578
   1400039e6:	call   rbx
   1400039e8:	mov    QWORD PTR [rip+0xe271],rdi        # 0x140011c60
   1400039ef:	lea    rcx,[rip+0xe08a]        # 0x140011a80
   1400039f6:	call   QWORD PTR [rip+0x7b14]        # 0x14000b510
   1400039fc:	mov    rsi,QWORD PTR [rip+0xe0ed]        # 0x140011af0
   140003a03:	test   rsi,rsi
   140003a06:	je     0x140003a29
   140003a08:	mov    rax,QWORD PTR [rsi]
   140003a0b:	mov    rbx,QWORD PTR [rax+0x50]
   140003a0f:	mov    rcx,rbx
   140003a12:	call   QWORD PTR [rip+0x7b60]        # 0x14000b578
   140003a18:	mov    edx,0x1
   140003a1d:	mov    rcx,rsi
   140003a20:	call   rbx
   140003a22:	mov    QWORD PTR [rip+0xe0c7],rdi        # 0x140011af0
   140003a29:	mov    DWORD PTR [rip+0xe221],edi        # 0x140011c50
   140003a2f:	mov    QWORD PTR [rip+0xe272],rdi        # 0x140011ca8
   140003a36:	lea    rcx,[rip+0xe183]        # 0x140011bc0
   140003a3d:	call   QWORD PTR [rip+0x7ae5]        # 0x14000b528
   140003a43:	mov    rbx,QWORD PTR [rsp+0x50]
   140003a48:	mov    eax,edi
   140003a4a:	mov    rsi,QWORD PTR [rsp+0x58]
   140003a4f:	add    rsp,0x40
   140003a53:	pop    rdi
   140003a54:	ret    
   140003a55:	int3   
   140003a56:	int3   
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	mov    r11,rsp
   140003a5f:	mov    QWORD PTR [r11+0x8],rbx
   140003a63:	mov    QWORD PTR [r11+0x18],rbp
   140003a67:	push   rsi
   140003a68:	push   rdi
   140003a69:	push   r14
   140003a6b:	sub    rsp,0x40
   140003a6f:	xor    edi,edi
   140003a71:	lea    rax,[r11+0x10]
   140003a75:	and    QWORD PTR [rdx],rdi
   140003a78:	mov    r14,rdx
   140003a7b:	xor    r9d,r9d
   140003a7e:	mov    QWORD PTR [r11-0x38],rax
   140003a82:	xor    r8d,r8d
   140003a85:	mov    rsi,rcx
   140003a88:	lea    ebp,[rdi+0x1]
   140003a8b:	mov    edx,ebp
   140003a8d:	call   QWORD PTR [rip+0x75b5]        # 0x14000b048
   140003a93:	test   eax,eax
   140003a95:	jne    0x140003bd1
   140003a9b:	call   QWORD PTR [rip+0x763f]        # 0x14000b0e0
   140003aa1:	mov    ebx,eax
   140003aa3:	cmp    eax,0x7a
   140003aa6:	je     0x140003ae5
   140003aa8:	lea    rax,[rip+0x8751]        # 0x14000c200
   140003aaf:	mov    r8d,ebx
   140003ab2:	mov    QWORD PTR [rsp+0x30],rax
   140003ab7:	lea    rax,[rip+0x87fa]        # 0x14000c2b8
   140003abe:	mov    QWORD PTR [rsp+0x28],rax
   140003ac3:	mov    DWORD PTR [rsp+0x20],0xf0
   140003acb:	lea    r9,[rip+0x87fe]        # 0x14000c2d0
   140003ad2:	mov    ecx,ebp
   140003ad4:	lea    rdx,[rip+0x8185]        # 0x14000bc60
   140003adb:	call   0x140005910
   140003ae0:	jmp    0x140003c1c
   140003ae5:	mov    edx,DWORD PTR [rsp+0x68]
   140003ae9:	mov    ebx,0x40
   140003aee:	mov    ecx,ebx
   140003af0:	call   QWORD PTR [rip+0x777a]        # 0x14000b270
   140003af6:	mov    rdi,rax
   140003af9:	test   rax,rax
   140003afc:	jne    0x140003b27
   140003afe:	lea    rax,[rip+0x86fb]        # 0x14000c200
   140003b05:	mov    QWORD PTR [rsp+0x30],rax
   140003b0a:	lea    r8d,[rbx-0x32]
   140003b0e:	lea    rax,[rip+0x8833]        # 0x14000c348
   140003b15:	mov    ebx,r8d
   140003b18:	mov    QWORD PTR [rsp+0x28],rax
   140003b1d:	mov    DWORD PTR [rsp+0x20],0xf7
   140003b25:	jmp    0x140003acb
   140003b27:	mov    r9d,DWORD PTR [rsp+0x68]
   140003b2c:	lea    rax,[rsp+0x68]
   140003b31:	mov    r8,rdi
   140003b34:	mov    QWORD PTR [rsp+0x20],rax
   140003b39:	mov    edx,ebp
   140003b3b:	mov    rcx,rsi
   140003b3e:	call   QWORD PTR [rip+0x7504]        # 0x14000b048
   140003b44:	test   eax,eax
   140003b46:	jne    0x140003b75
   140003b48:	call   QWORD PTR [rip+0x7592]        # 0x14000b0e0
   140003b4e:	mov    ebx,eax
   140003b50:	lea    rax,[rip+0x86a9]        # 0x14000c200
   140003b57:	mov    QWORD PTR [rsp+0x30],rax
   140003b5c:	lea    rax,[rip+0x8755]        # 0x14000c2b8
   140003b63:	mov    QWORD PTR [rsp+0x28],rax
   140003b68:	mov    DWORD PTR [rsp+0x20],0x102
   140003b70:	jmp    0x140003bf6
   140003b75:	mov    rcx,QWORD PTR [rdi]
   140003b78:	call   QWORD PTR [rip+0x79c2]        # 0x14000b540
   140003b7e:	mov    edx,eax
   140003b80:	mov    ecx,ebx
   140003b82:	mov    DWORD PTR [rsp+0x68],eax
   140003b86:	call   QWORD PTR [rip+0x76e4]        # 0x14000b270
   140003b8c:	mov    QWORD PTR [r14],rax
   140003b8f:	test   rax,rax
   140003b92:	jne    0x140003bbd
   140003b94:	lea    r8d,[rax+0xe]
   140003b98:	lea    rax,[rip+0x8661]        # 0x14000c200
   140003b9f:	mov    ebx,r8d
   140003ba2:	mov    QWORD PTR [rsp+0x30],rax
   140003ba7:	lea    rax,[rip+0x879a]        # 0x14000c348
   140003bae:	mov    QWORD PTR [rsp+0x28],rax
   140003bb3:	mov    DWORD PTR [rsp+0x20],0x112
   140003bbb:	jmp    0x140003bf9
   140003bbd:	mov    r8,QWORD PTR [rdi]
   140003bc0:	mov    rdx,rax
   140003bc3:	mov    ecx,DWORD PTR [rsp+0x68]
   140003bc7:	call   QWORD PTR [rip+0x796b]        # 0x14000b538
   140003bcd:	xor    ebx,ebx
   140003bcf:	jmp    0x140003c0e
   140003bd1:	lea    rax,[rip+0x8628]        # 0x14000c200
   140003bd8:	mov    ebx,0x54f
   140003bdd:	mov    QWORD PTR [rsp+0x30],rax
   140003be2:	lea    rax,[rip+0x86cf]        # 0x14000c2b8
   140003be9:	mov    QWORD PTR [rsp+0x28],rax
   140003bee:	mov    DWORD PTR [rsp+0x20],0x108
   140003bf6:	mov    r8d,ebx
   140003bf9:	lea    r9,[rip+0x86d0]        # 0x14000c2d0
   140003c00:	mov    ecx,ebp
   140003c02:	lea    rdx,[rip+0x8057]        # 0x14000bc60
   140003c09:	call   0x140005910
   140003c0e:	test   rdi,rdi
   140003c11:	je     0x140003c1c
   140003c13:	mov    rcx,rdi
   140003c16:	call   QWORD PTR [rip+0x74ac]        # 0x14000b0c8
   140003c1c:	mov    rbp,QWORD PTR [rsp+0x70]
   140003c21:	movzx  eax,bx
   140003c24:	or     eax,0xc0070000
   140003c29:	test   ebx,ebx
   140003c2b:	cmovle eax,ebx
   140003c2e:	mov    rbx,QWORD PTR [rsp+0x60]
   140003c33:	add    rsp,0x40
   140003c37:	pop    r14
   140003c39:	pop    rdi
   140003c3a:	pop    rsi
   140003c3b:	ret    
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	int3   
   140003c41:	int3   
   140003c42:	int3   
   140003c43:	int3   
   140003c44:	mov    rax,rsp
   140003c47:	mov    QWORD PTR [rax+0x8],rbx
   140003c4b:	mov    QWORD PTR [rax+0x10],rbp
   140003c4f:	mov    QWORD PTR [rax+0x18],rsi
   140003c53:	mov    QWORD PTR [rax+0x20],rdi
   140003c57:	push   r12
   140003c59:	push   r14
   140003c5b:	push   r15
   140003c5d:	sub    rsp,0x40
   140003c61:	xor    edi,edi
   140003c63:	mov    r12,r9
   140003c66:	mov    r15,r8
   140003c69:	mov    rbp,rcx
   140003c6c:	cmp    DWORD PTR [rcx],edi
   140003c6e:	jbe    0x140003caf
   140003c70:	mov    r14,QWORD PTR [rbp+0x8]
   140003c74:	mov    esi,edi
   140003c76:	add    rsi,rsi
   140003c79:	cmp    DWORD PTR [r14+rsi*8+0x8],0x0
   140003c7f:	jne    0x140003ca8
   140003c81:	mov    rbx,QWORD PTR [r14+rsi*8]
   140003c85:	mov    rcx,r15
   140003c88:	call   QWORD PTR [rip+0x78ea]        # 0x14000b578
   140003c8e:	mov    edx,DWORD PTR [r14+rsi*8+0xc]
   140003c93:	mov    r9,r12
   140003c96:	mov    r8d,0x1
   140003c9c:	mov    rcx,rbx
   140003c9f:	call   r15
   140003ca2:	mov    ebx,eax
   140003ca4:	test   eax,eax
   140003ca6:	jne    0x140003cd2
   140003ca8:	inc    edi
   140003caa:	cmp    edi,DWORD PTR [rbp+0x0]
   140003cad:	jb     0x140003c70
   140003caf:	xor    ebx,ebx
   140003cb1:	mov    rbp,QWORD PTR [rsp+0x68]
   140003cb6:	mov    eax,ebx
   140003cb8:	mov    rbx,QWORD PTR [rsp+0x60]
   140003cbd:	mov    rsi,QWORD PTR [rsp+0x70]
   140003cc2:	mov    rdi,QWORD PTR [rsp+0x78]
   140003cc7:	add    rsp,0x40
   140003ccb:	pop    r15
   140003ccd:	pop    r14
   140003ccf:	pop    r12
   140003cd1:	ret    
   140003cd2:	lea    rax,[rip+0x8527]        # 0x14000c200
   140003cd9:	mov    r8d,ebx
   140003cdc:	mov    QWORD PTR [rsp+0x30],rax
   140003ce1:	lea    r9,[rip+0x85e8]        # 0x14000c2d0
   140003ce8:	lea    rax,[rip+0x8669]        # 0x14000c358
   140003cef:	mov    ecx,0x1
   140003cf4:	mov    QWORD PTR [rsp+0x28],rax
   140003cf9:	lea    rdx,[rip+0x7f60]        # 0x14000bc60
   140003d00:	mov    DWORD PTR [rsp+0x20],0x13b
   140003d08:	call   0x140005910
   140003d0d:	jmp    0x140003cb1
   140003d0f:	int3   
   140003d10:	int3   
   140003d11:	int3   
   140003d12:	int3   
   140003d13:	int3   
   140003d14:	int3   
   140003d15:	int3   
   140003d16:	int3   
   140003d17:	int3   
   140003d18:	int3   
   140003d19:	int3   
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	mov    rax,r9
   140003d23:	test   edx,edx
   140003d25:	jne    0x140003d2f
   140003d27:	test   r8d,r8d
   140003d2a:	jne    0x140003d2f
   140003d2c:	xor    eax,eax
   140003d2e:	ret    
   140003d2f:	mov    r9d,DWORD PTR [r9+0x4]
   140003d33:	xor    edx,edx
   140003d35:	mov    r8d,DWORD PTR [rax]
   140003d38:	jmp    0x1400059d4
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	int3   
   140003d41:	int3   
   140003d42:	int3   
   140003d43:	int3   
   140003d44:	mov    QWORD PTR [rsp+0x10],rbx
   140003d49:	mov    QWORD PTR [rsp+0x20],rsi
   140003d4e:	mov    DWORD PTR [rsp+0x8],ecx
   140003d52:	push   rbp
   140003d53:	push   rdi
   140003d54:	push   r15
   140003d56:	mov    rbp,rsp
   140003d59:	sub    rsp,0x80
   140003d60:	and    DWORD PTR [rbp-0x28],0x0
   140003d64:	xor    eax,eax
   140003d66:	and    DWORD PTR [rbp-0x38],eax
   140003d69:	xor    r11d,r11d
   140003d6c:	and    QWORD PTR [rbp-0x30],rax
   140003d70:	xor    edi,edi
   140003d72:	xor    ecx,ecx
   140003d74:	mov    QWORD PTR [rbp-0x20],rax
   140003d78:	lea    r15d,[rax+0x1]
   140003d7c:	mov    QWORD PTR [rbp-0x18],rax
   140003d80:	mov    QWORD PTR [rbp-0x10],rax
   140003d84:	mov    r10,r9
   140003d87:	mov    QWORD PTR [rbp-0x40],r11
   140003d8b:	mov    rsi,rdx
   140003d8e:	mov    DWORD PTR [rbp+0x30],0xffff
   140003d95:	mov    DWORD PTR [rbp+0x20],0xffff
   140003d9c:	cmp    r8d,r15d
   140003d9f:	jne    0x140003e07
   140003da1:	mov    rax,QWORD PTR [rbp+0x40]
   140003da5:	mov    ecx,DWORD PTR [rax]
   140003da7:	test   ecx,ecx
   140003da9:	je     0x14000401a
   140003daf:	cmp    ecx,0x4
   140003db2:	jbe    0x140003de2
   140003db4:	lea    rax,[rip+0x8445]        # 0x14000c200
   140003dbb:	mov    r8d,0xc000000d
   140003dc1:	mov    QWORD PTR [rsp+0x30],rax
   140003dc6:	mov    ebx,r8d
   140003dc9:	lea    rax,[rip+0x85a0]        # 0x14000c370
   140003dd0:	mov    QWORD PTR [rsp+0x28],rax
   140003dd5:	mov    DWORD PTR [rsp+0x20],0x17b
   140003ddd:	jmp    0x140004002
   140003de2:	mov    edx,0x13
   140003de7:	mov    DWORD PTR [rbp-0x28],r15d
   140003deb:	mov    WORD PTR [rbp-0x20],dx
   140003def:	mov    DWORD PTR [rbp-0x18],ecx
   140003df2:	cmp    ecx,DWORD PTR [r9]
   140003df5:	jbe    0x14000401a
   140003dfb:	mov    edi,r15d
   140003dfe:	mov    DWORD PTR [rbp-0x40],r15d
   140003e02:	jmp    0x140003f54
   140003e07:	mov    r9,QWORD PTR [rbp+0x40]
   140003e0b:	mov    edx,0x13
   140003e10:	cmp    r8d,0x2
   140003e14:	jne    0x140003e7d
   140003e16:	mov    eax,DWORD PTR [r9+0x4]
   140003e1a:	test   eax,eax
   140003e1c:	je     0x14000401a
   140003e22:	cmp    eax,0x10
   140003e25:	jbe    0x140003e55
   140003e27:	lea    rax,[rip+0x83d2]        # 0x14000c200
   140003e2e:	mov    r8d,0xc000000d
   140003e34:	mov    QWORD PTR [rsp+0x30],rax
   140003e39:	mov    ebx,r8d
   140003e3c:	lea    rax,[rip+0x852d]        # 0x14000c370
   140003e43:	mov    QWORD PTR [rsp+0x28],rax
   140003e48:	mov    DWORD PTR [rsp+0x20],0x195
   140003e50:	jmp    0x140004002
   140003e55:	mov    DWORD PTR [rbp-0x28],0x2
   140003e5c:	mov    WORD PTR [rbp-0x20],dx
   140003e60:	mov    DWORD PTR [rbp-0x18],eax
   140003e63:	cmp    DWORD PTR [r10+0x4],ecx
   140003e67:	je     0x140003e73
   140003e69:	cmp    eax,DWORD PTR [r10+0x4]
   140003e6d:	jbe    0x14000401a
   140003e73:	mov    edi,r15d
   140003e76:	mov    DWORD PTR [rbp-0x40],r15d
   140003e7a:	mov    r11d,r15d
   140003e7d:	cmp    r8d,0x3
   140003e81:	jne    0x140003ee1
   140003e83:	mov    eax,DWORD PTR [r9+0x8]
   140003e87:	test   eax,eax
   140003e89:	je     0x140003f4b
   140003e8f:	cmp    eax,0x3e7
   140003e94:	jbe    0x140003ec4
   140003e96:	lea    rax,[rip+0x8363]        # 0x14000c200
   140003e9d:	mov    r8d,0xc000000d
   140003ea3:	mov    QWORD PTR [rsp+0x30],rax
   140003ea8:	mov    ebx,r8d
   140003eab:	lea    rax,[rip+0x84be]        # 0x14000c370
   140003eb2:	mov    QWORD PTR [rsp+0x28],rax
   140003eb7:	mov    DWORD PTR [rsp+0x20],0x1b1
   140003ebf:	jmp    0x140004002
   140003ec4:	cmp    DWORD PTR [r10+0x8],ecx
   140003ec8:	je     0x140003ed0
   140003eca:	cmp    eax,DWORD PTR [r10+0x8]
   140003ece:	jae    0x140003f4b
   140003ed0:	mov    DWORD PTR [rbp-0x28],0x3
   140003ed7:	mov    edi,r15d
   140003eda:	mov    WORD PTR [rbp-0x20],dx
   140003ede:	mov    DWORD PTR [rbp-0x18],eax
   140003ee1:	cmp    r8d,0x8
   140003ee5:	cmove  ecx,r15d
   140003ee9:	mov    DWORD PTR [rbp-0x3c],ecx
   140003eec:	cmp    r8d,0x4
   140003ef0:	jne    0x140003f4b
   140003ef2:	mov    eax,DWORD PTR [r9+0xc]
   140003ef6:	test   eax,eax
   140003ef8:	je     0x140003f4b
   140003efa:	cmp    eax,0x18
   140003efd:	jbe    0x140003f2d
   140003eff:	lea    rax,[rip+0x82fa]        # 0x14000c200
   140003f06:	mov    r8d,0xc000000d
   140003f0c:	mov    QWORD PTR [rsp+0x30],rax
   140003f11:	mov    ebx,r8d
   140003f14:	lea    rax,[rip+0x8455]        # 0x14000c370
   140003f1b:	mov    QWORD PTR [rsp+0x28],rax
   140003f20:	mov    DWORD PTR [rsp+0x20],0x1cc
   140003f28:	jmp    0x140004002
   140003f2d:	cmp    DWORD PTR [r10+0xc],0x0
   140003f32:	je     0x140003f3a
   140003f34:	cmp    eax,DWORD PTR [r10+0xc]
   140003f38:	jbe    0x140003f4b
   140003f3a:	mov    DWORD PTR [rbp-0x28],0x4
   140003f41:	mov    edi,r15d
   140003f44:	mov    WORD PTR [rbp-0x20],dx
   140003f48:	mov    DWORD PTR [rbp-0x18],eax
   140003f4b:	test   r11d,r11d
   140003f4e:	jne    0x140003f54
   140003f50:	test   ecx,ecx
   140003f52:	je     0x140003fc9
   140003f54:	lea    r8,[rbp-0x38]
   140003f58:	lea    rdx,[rbp+0x20]
   140003f5c:	lea    rcx,[rbp+0x30]
   140003f60:	call   0x140005cbc
   140003f65:	mov    ebx,eax
   140003f67:	test   eax,eax
   140003f69:	je     0x140003f8d
   140003f6b:	lea    rax,[rip+0x828e]        # 0x14000c200
   140003f72:	mov    QWORD PTR [rsp+0x30],rax
   140003f77:	lea    rax,[rip+0x8412]        # 0x14000c390
   140003f7e:	mov    QWORD PTR [rsp+0x28],rax
   140003f83:	mov    DWORD PTR [rsp+0x20],0x1e0
   140003f8b:	jmp    0x140003fff
   140003f8d:	lea    r9,[rbp-0x40]
   140003f91:	lea    r8,[rip+0xfffffffffffffd88]        # 0x140003d20
   140003f98:	lea    rcx,[rbp-0x38]
   140003f9c:	call   0x140003c44
   140003fa1:	mov    ebx,eax
   140003fa3:	test   eax,eax
   140003fa5:	je     0x140003fc9
   140003fa7:	lea    rax,[rip+0x8252]        # 0x14000c200
   140003fae:	mov    QWORD PTR [rsp+0x30],rax
   140003fb3:	lea    rax,[rip+0x8406]        # 0x14000c3c0
   140003fba:	mov    QWORD PTR [rsp+0x28],rax
   140003fbf:	mov    DWORD PTR [rsp+0x20],0x1e9
   140003fc7:	jmp    0x140003fff
   140003fc9:	test   edi,edi
   140003fcb:	je     0x14000401a
   140003fcd:	lea    r8,[rbp-0x28]
   140003fd1:	mov    rcx,rsi
   140003fd4:	call   0x140006bc8
   140003fd9:	mov    ebx,eax
   140003fdb:	test   eax,eax
   140003fdd:	je     0x14000401a
   140003fdf:	lea    rax,[rip+0x821a]        # 0x14000c200
   140003fe6:	mov    QWORD PTR [rsp+0x30],rax
   140003feb:	lea    rax,[rip+0x83ee]        # 0x14000c3e0
   140003ff2:	mov    QWORD PTR [rsp+0x28],rax
   140003ff7:	mov    DWORD PTR [rsp+0x20],0x1f3
   140003fff:	mov    r8d,ebx
   140004002:	lea    r9,[rip+0x82c7]        # 0x14000c2d0
   140004009:	mov    ecx,r15d
   14000400c:	lea    rdx,[rip+0x7c4d]        # 0x14000bc60
   140004013:	call   0x140005910
   140004018:	jmp    0x14000401c
   14000401a:	xor    ebx,ebx
   14000401c:	mov    rcx,QWORD PTR [rbp-0x30]
   140004020:	test   rcx,rcx
   140004023:	je     0x14000402a
   140004025:	call   0x1400080f0
   14000402a:	lea    r11,[rsp+0x80]
   140004032:	mov    eax,ebx
   140004034:	mov    rbx,QWORD PTR [r11+0x28]
   140004038:	mov    rsi,QWORD PTR [r11+0x38]
   14000403c:	mov    rsp,r11
   14000403f:	pop    r15
   140004041:	pop    rdi
   140004042:	pop    rbp
   140004043:	ret    
   140004044:	int3   
   140004045:	int3   
   140004046:	int3   
   140004047:	int3   
   140004048:	int3   
   140004049:	int3   
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	mov    QWORD PTR [rsp+0x8],rbx
   140004051:	push   rdi
   140004052:	sub    rsp,0x70
   140004056:	mov    eax,0xb
   14000405b:	mov    DWORD PTR [rsp+0x48],0x5
   140004063:	mov    WORD PTR [rsp+0x50],ax
   140004068:	mov    rdi,rdx
   14000406b:	mov    eax,r9d
   14000406e:	neg    eax
   140004070:	sbb    cx,cx
   140004073:	xor    eax,eax
   140004075:	mov    WORD PTR [rsp+0x58],cx
   14000407a:	mov    QWORD PTR [rsp+0x40],rax
   14000407f:	test   r9d,r9d
   140004082:	jne    0x14000408b
   140004084:	xor    ebx,ebx
   140004086:	jmp    0x140004166
   14000408b:	test   r8d,r8d
   14000408e:	jne    0x140004118
   140004094:	and    DWORD PTR [rsp+0x44],eax
   140004098:	lea    rcx,[rsp+0x40]
   14000409d:	mov    DWORD PTR [rsp+0x40],0x1
   1400040a5:	call   0x140007640
   1400040aa:	mov    ebx,eax
   1400040ac:	test   eax,eax
   1400040ae:	je     0x1400040d2
   1400040b0:	lea    rax,[rip+0x8149]        # 0x14000c200
   1400040b7:	mov    QWORD PTR [rsp+0x30],rax
   1400040bc:	lea    rax,[rip+0x833d]        # 0x14000c400
   1400040c3:	mov    QWORD PTR [rsp+0x28],rax
   1400040c8:	mov    DWORD PTR [rsp+0x20],0x222
   1400040d0:	jmp    0x14000414b
   1400040d2:	cmp    DWORD PTR [rsp+0x40],0x1
   1400040d7:	je     0x140004118
   1400040d9:	call   0x1400090a8
   1400040de:	test   al,al
   1400040e0:	je     0x140004118
   1400040e2:	call   QWORD PTR [rip+0xef18]        # 0x140013000
   1400040e8:	mov    ebx,eax
   1400040ea:	test   eax,eax
   1400040ec:	je     0x140004118
   1400040ee:	lea    rax,[rip+0x810b]        # 0x14000c200
   1400040f5:	btr    ebx,0x1c
   1400040f9:	mov    QWORD PTR [rsp+0x30],rax
   1400040fe:	bts    ebx,0x1e
   140004102:	lea    rax,[rip+0x832f]        # 0x14000c438
   140004109:	mov    QWORD PTR [rsp+0x28],rax
   14000410e:	mov    DWORD PTR [rsp+0x20],0x22c
   140004116:	jmp    0x14000414b
   140004118:	lea    r8,[rsp+0x48]
   14000411d:	mov    rcx,rdi
   140004120:	call   0x140006bc8
   140004125:	mov    ebx,eax
   140004127:	test   eax,eax
   140004129:	je     0x140004166
   14000412b:	lea    rax,[rip+0x80ce]        # 0x14000c200
   140004132:	mov    QWORD PTR [rsp+0x30],rax
   140004137:	lea    rax,[rip+0x82a2]        # 0x14000c3e0
   14000413e:	mov    QWORD PTR [rsp+0x28],rax
   140004143:	mov    DWORD PTR [rsp+0x20],0x236
   14000414b:	lea    r9,[rip+0x817e]        # 0x14000c2d0
   140004152:	mov    r8d,ebx
   140004155:	lea    rdx,[rip+0x7b04]        # 0x14000bc60
   14000415c:	mov    ecx,0x1
   140004161:	call   0x140005910
   140004166:	mov    eax,ebx
   140004168:	mov    rbx,QWORD PTR [rsp+0x80]
   140004170:	add    rsp,0x70
   140004174:	pop    rdi
   140004175:	ret    
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	rex push rbx
   14000417e:	sub    rsp,0x40
   140004182:	mov    r10d,r9d
   140004185:	mov    r11,r8
   140004188:	test   r9d,r9d
   14000418b:	je     0x1400041a7
   14000418d:	cmp    r9d,0x4
   140004191:	jbe    0x140004231
   140004197:	cmp    r9d,0x5
   14000419b:	je     0x1400041ef
   14000419d:	cmp    r9d,0x8
   1400041a1:	je     0x140004231
   1400041a7:	lea    rax,[rip+0x8052]        # 0x14000c200
   1400041ae:	mov    ebx,0xc000000d
   1400041b3:	mov    QWORD PTR [rsp+0x30],rax
   1400041b8:	lea    rax,[rip+0x7e11]        # 0x14000bfd0
   1400041bf:	mov    QWORD PTR [rsp+0x28],rax
   1400041c4:	mov    DWORD PTR [rsp+0x20],0x262
   1400041cc:	lea    r9,[rip+0x80fd]        # 0x14000c2d0
   1400041d3:	mov    r8d,ebx
   1400041d6:	lea    rdx,[rip+0x7a83]        # 0x14000bc60
   1400041dd:	mov    ecx,0x1
   1400041e2:	call   0x140005910
   1400041e7:	mov    eax,ebx
   1400041e9:	add    rsp,0x40
   1400041ed:	pop    rbx
   1400041ee:	ret    
   1400041ef:	mov    rax,QWORD PTR [rsp+0x78]
   1400041f4:	mov    rdx,r11
   1400041f7:	mov    r9d,DWORD PTR [rax+0x10]
   1400041fb:	mov    rax,QWORD PTR [rsp+0x70]
   140004200:	mov    r8d,DWORD PTR [rax+0x10]
   140004204:	call   0x14000404c
   140004209:	mov    ebx,eax
   14000420b:	test   eax,eax
   14000420d:	je     0x140004276
   14000420f:	lea    rax,[rip+0x7fea]        # 0x14000c200
   140004216:	mov    QWORD PTR [rsp+0x30],rax
   14000421b:	lea    rax,[rip+0x827e]        # 0x14000c4a0
   140004222:	mov    QWORD PTR [rsp+0x28],rax
   140004227:	mov    DWORD PTR [rsp+0x20],0x25e
   14000422f:	jmp    0x1400041cc
   140004231:	mov    rax,QWORD PTR [rsp+0x78]
   140004236:	mov    r8d,r10d
   140004239:	mov    r9,QWORD PTR [rsp+0x70]
   14000423e:	mov    rdx,r11
   140004241:	mov    QWORD PTR [rsp+0x20],rax
   140004246:	call   0x140003d44
   14000424b:	mov    ebx,eax
   14000424d:	test   eax,eax
   14000424f:	je     0x140004276
   140004251:	lea    rax,[rip+0x7fa8]        # 0x14000c200
   140004258:	mov    QWORD PTR [rsp+0x30],rax
   14000425d:	lea    rax,[rip+0x820c]        # 0x14000c470
   140004264:	mov    QWORD PTR [rsp+0x28],rax
   140004269:	mov    DWORD PTR [rsp+0x20],0x256
   140004271:	jmp    0x1400041cc
   140004276:	xor    ebx,ebx
   140004278:	jmp    0x1400041e7
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	int3   
   140004281:	int3   
   140004282:	int3   
   140004283:	int3   
   140004284:	mov    rax,rsp
   140004287:	mov    QWORD PTR [rax+0x8],rbx
   14000428b:	mov    QWORD PTR [rax+0x10],rsi
   14000428f:	mov    QWORD PTR [rax+0x18],rdi
   140004293:	push   rbp
   140004294:	push   r14
   140004296:	push   r15
   140004298:	lea    rbp,[rax-0xa8]
   14000429f:	sub    rsp,0x190
   1400042a6:	mov    rax,QWORD PTR [rip+0xcd5b]        # 0x140011008
   1400042ad:	xor    rax,rsp
   1400042b0:	mov    QWORD PTR [rbp+0x80],rax
   1400042b7:	mov    rdi,QWORD PTR [rbp+0xd8]
   1400042be:	xor    ebx,ebx
   1400042c0:	mov    rsi,QWORD PTR [rbp+0xe0]
   1400042c7:	mov    r14d,r8d
   1400042ca:	mov    BYTE PTR [rsp+0x41],bl
   1400042ce:	mov    BYTE PTR [rsp+0x40],bl
   1400042d2:	mov    BYTE PTR [rsp+0x42],bl
   1400042d6:	cmp    DWORD PTR [rdi],ebx
   1400042d8:	je     0x1400044e4
   1400042de:	cmp    DWORD PTR [rbp+0xd0],ebx
   1400042e4:	je     0x1400044e4
   1400042ea:	test   ecx,ecx
   1400042ec:	jne    0x1400042f6
   1400042ee:	test   edx,edx
   1400042f0:	je     0x1400044e4
   1400042f6:	mov    r15d,0x1
   1400042fc:	cmp    r9d,r15d
   1400042ff:	je     0x1400044e2
   140004305:	call   0x1400091a0
   14000430a:	test   al,al
   14000430c:	je     0x140004352
   14000430e:	lea    rdx,[rsp+0x44]
   140004313:	lea    rcx,[rsp+0x41]
   140004318:	call   QWORD PTR [rip+0xed02]        # 0x140013020
   14000431e:	cmp    DWORD PTR [rsp+0x44],ebx
   140004322:	jne    0x140004352
   140004324:	lea    rax,[rip+0x7ed5]        # 0x14000c200
   14000432b:	mov    r8d,0xc00000e5
   140004331:	mov    QWORD PTR [rsp+0x30],rax
   140004336:	mov    ebx,r8d
   140004339:	lea    rax,[rip+0x81a0]        # 0x14000c4e0
   140004340:	mov    QWORD PTR [rsp+0x28],rax
   140004345:	mov    DWORD PTR [rsp+0x20],0x2a8
   14000434d:	jmp    0x1400044be
   140004352:	cmp    BYTE PTR [rsp+0x41],bl
   140004356:	je     0x14000440f
   14000435c:	call   0x1400091a0
   140004361:	test   al,al
   140004363:	je     0x1400043a9
   140004365:	lea    rdx,[rsp+0x44]
   14000436a:	lea    rcx,[rsp+0x40]
   14000436f:	call   QWORD PTR [rip+0xec9b]        # 0x140013010
   140004375:	cmp    DWORD PTR [rsp+0x44],ebx
   140004379:	jne    0x1400043a9
   14000437b:	lea    rax,[rip+0x7e7e]        # 0x14000c200
   140004382:	mov    r8d,0xc00000e5
   140004388:	mov    QWORD PTR [rsp+0x30],rax
   14000438d:	mov    ebx,r8d
   140004390:	lea    rax,[rip+0x8149]        # 0x14000c4e0
   140004397:	mov    QWORD PTR [rsp+0x28],rax
   14000439c:	mov    DWORD PTR [rsp+0x20],0x2b6
   1400043a4:	jmp    0x1400044be
   1400043a9:	cmp    BYTE PTR [rsp+0x40],bl
   1400043ad:	je     0x14000440f
   1400043af:	test   r14d,r14d
   1400043b2:	je     0x1400044dc
   1400043b8:	call   0x1400091a0
   1400043bd:	test   al,al
   1400043bf:	je     0x140004405
   1400043c1:	lea    rdx,[rsp+0x44]
   1400043c6:	lea    rcx,[rsp+0x42]
   1400043cb:	call   QWORD PTR [rip+0xec47]        # 0x140013018
   1400043d1:	cmp    DWORD PTR [rsp+0x44],ebx
   1400043d5:	jne    0x140004405
   1400043d7:	lea    rax,[rip+0x7e22]        # 0x14000c200
   1400043de:	mov    r8d,0xc00000e5
   1400043e4:	mov    QWORD PTR [rsp+0x30],rax
   1400043e9:	mov    ebx,r8d
   1400043ec:	lea    rax,[rip+0x80ed]        # 0x14000c4e0
   1400043f3:	mov    QWORD PTR [rsp+0x28],rax
   1400043f8:	mov    DWORD PTR [rsp+0x20],0x2c6
   140004400:	jmp    0x1400044be
   140004405:	cmp    BYTE PTR [rsp+0x42],bl
   140004409:	jne    0x1400044dc
   14000440f:	lea    rcx,[rsp+0x60]
   140004414:	mov    DWORD PTR [rsp+0x60],0x11c
   14000441c:	call   QWORD PTR [rip+0x6f3e]        # 0x14000b360
   140004422:	test   eax,eax
   140004424:	je     0x140004438
   140004426:	mov    al,BYTE PTR [rbp+0x7a]
   140004429:	sub    al,0x2
   14000442b:	cmp    al,r15b
   14000442e:	ja     0x140004438
   140004430:	mov    DWORD PTR [rsi],r15d
   140004433:	jmp    0x1400044e2
   140004438:	lea    rax,[rsp+0x4c]
   14000443d:	mov    DWORD PTR [rsp+0x4c],0x4
   140004445:	mov    QWORD PTR [rsp+0x30],rax
   14000444a:	lea    r8,[rip+0x80bf]        # 0x14000c510
   140004451:	lea    rax,[rsp+0x48]
   140004456:	mov    r9d,0x10
   14000445c:	mov    QWORD PTR [rsp+0x28],rax
   140004461:	lea    rdx,[rip+0x80e8]        # 0x14000c550
   140004468:	lea    rax,[rsp+0x50]
   14000446d:	mov    rcx,0xffffffff80000002
   140004474:	mov    QWORD PTR [rsp+0x20],rax
   140004479:	call   QWORD PTR [rip+0x6b89]        # 0x14000b008
   14000447f:	lea    ecx,[rax-0x2]
   140004482:	cmp    ecx,r15d
   140004485:	jbe    0x1400044dc
   140004487:	test   eax,eax
   140004489:	je     0x1400044d6
   14000448b:	movzx  ecx,ax
   14000448e:	or     ecx,0xc0070000
   140004494:	test   eax,eax
   140004496:	cmovle ecx,eax
   140004499:	lea    rax,[rip+0x7d60]        # 0x14000c200
   1400044a0:	mov    QWORD PTR [rsp+0x30],rax
   1400044a5:	mov    ebx,ecx
   1400044a7:	lea    rax,[rip+0x80fa]        # 0x14000c5a8
   1400044ae:	mov    r8d,ecx
   1400044b1:	mov    QWORD PTR [rsp+0x28],rax
   1400044b6:	mov    DWORD PTR [rsp+0x20],0x303
   1400044be:	lea    r9,[rip+0x7e0b]        # 0x14000c2d0
   1400044c5:	mov    ecx,r15d
   1400044c8:	lea    rdx,[rip+0x7791]        # 0x14000bc60
   1400044cf:	call   0x140005910
   1400044d4:	jmp    0x1400044e4
   1400044d6:	cmp    DWORD PTR [rsp+0x48],ebx
   1400044da:	jne    0x1400044e4
   1400044dc:	mov    DWORD PTR [rsi],0x2
   1400044e2:	mov    DWORD PTR [rdi],ebx
   1400044e4:	mov    eax,ebx
   1400044e6:	mov    rcx,QWORD PTR [rbp+0x80]
   1400044ed:	xor    rcx,rsp
   1400044f0:	call   0x140008aa0
   1400044f5:	lea    r11,[rsp+0x190]
   1400044fd:	mov    rbx,QWORD PTR [r11+0x20]
   140004501:	mov    rsi,QWORD PTR [r11+0x28]
   140004505:	mov    rdi,QWORD PTR [r11+0x30]
   140004509:	mov    rsp,r11
   14000450c:	pop    r15
   14000450e:	pop    r14
   140004510:	pop    rbp
   140004511:	ret    
   140004512:	int3   
   140004513:	int3   
   140004514:	int3   
   140004515:	int3   
   140004516:	int3   
   140004517:	int3   
   140004518:	mov    QWORD PTR [rsp+0x8],rcx
   14000451d:	push   rbp
   14000451e:	push   rbx
   14000451f:	push   rsi
   140004520:	push   rdi
   140004521:	push   r12
   140004523:	push   r13
   140004525:	push   r14
   140004527:	push   r15
   140004529:	mov    rbp,rsp
   14000452c:	sub    rsp,0x48
   140004530:	xor    eax,eax
   140004532:	mov    r15,r9
   140004535:	cmp    DWORD PTR [rip+0xd735],eax        # 0x140011c70
   14000453b:	mov    r13,r8
   14000453e:	mov    r12,rdx
   140004541:	mov    QWORD PTR [rbp+0x50],rax
   140004545:	mov    esi,eax
   140004547:	mov    QWORD PTR [rbp+0x60],rax
   14000454b:	mov    QWORD PTR [rbp+0x58],rax
   14000454f:	mov    DWORD PTR [rdx],eax
   140004551:	mov    DWORD PTR [r8],eax
   140004554:	mov    DWORD PTR [r9],eax
   140004557:	je     0x140004566
   140004559:	lea    edi,[rax+0x1]
   14000455c:	mov    ebx,eax
   14000455e:	mov    DWORD PTR [r9],edi
   140004561:	jmp    0x1400047df
   140004566:	call   QWORD PTR [rip+0x6fd4]        # 0x14000b540
   14000456c:	mov    edx,eax
   14000456e:	mov    ecx,0x40
   140004573:	mov    ebx,eax
   140004575:	call   QWORD PTR [rip+0x6cf5]        # 0x14000b270
   14000457b:	mov    r14,rax
   14000457e:	test   rax,rax
   140004581:	jne    0x1400045c8
   140004583:	lea    rcx,[rip+0x7c76]        # 0x14000c200
   14000458a:	mov    r8d,0xc0000017
   140004590:	mov    QWORD PTR [rsp+0x30],rcx
   140004595:	lea    rax,[rip+0x7724]        # 0x14000bcc0
   14000459c:	mov    QWORD PTR [rsp+0x28],rax
   1400045a1:	lea    ecx,[r14+0x1]
   1400045a5:	mov    DWORD PTR [rsp+0x20],0x340
   1400045ad:	mov    ebx,r8d
   1400045b0:	lea    r9,[rip+0x7d19]        # 0x14000c2d0
   1400045b7:	lea    rdx,[rip+0x76a2]        # 0x14000bc60
   1400045be:	call   0x140005910
   1400045c3:	jmp    0x1400047a4
   1400045c8:	mov    r8,QWORD PTR [rbp+0x48]
   1400045cc:	mov    rdx,rax
   1400045cf:	mov    ecx,ebx
   1400045d1:	call   QWORD PTR [rip+0x6f61]        # 0x14000b538
   1400045d7:	mov    rcx,QWORD PTR [rbp+0x48]
   1400045db:	call   QWORD PTR [rip+0x6f27]        # 0x14000b508
   1400045e1:	mov    edi,0x1
   1400045e6:	mov    rcx,r14
   1400045e9:	movzx  ebx,BYTE PTR [rax]
   1400045ec:	sub    ebx,edi
   1400045ee:	call   QWORD PTR [rip+0x6f14]        # 0x14000b508
   1400045f4:	mov    rdx,r14
   1400045f7:	mov    BYTE PTR [rax],bl
   1400045f9:	mov    rcx,QWORD PTR [rip+0xd680]        # 0x140011c80
   140004600:	call   QWORD PTR [rip+0x6efa]        # 0x14000b500
   140004606:	test   al,al
   140004608:	je     0x140004613
   14000460a:	xor    r15d,r15d
   14000460d:	mov    DWORD PTR [r12],r15d
   140004611:	jmp    0x140004632
   140004613:	mov    rcx,QWORD PTR [rip+0xd65e]        # 0x140011c78
   14000461a:	mov    rdx,r14
   14000461d:	call   QWORD PTR [rip+0x6edd]        # 0x14000b500
   140004623:	test   al,al
   140004625:	je     0x14000478d
   14000462b:	mov    DWORD PTR [r12],edi
   14000462f:	xor    r15d,r15d
   140004632:	mov    rcx,QWORD PTR [rip+0xd667]        # 0x140011ca0
   140004639:	lea    rax,[rbp+0x58]
   14000463d:	lea    r9,[rbp+0x60]
   140004641:	mov    QWORD PTR [rsp+0x20],rax
   140004646:	lea    r8,[rbp+0x48]
   14000464a:	mov    edx,edi
   14000464c:	call   QWORD PTR [rip+0x6d7e]        # 0x14000b3d0
   140004652:	mov    ebx,eax
   140004654:	test   eax,eax
   140004656:	je     0x140004682
   140004658:	lea    rcx,[rip+0x7ba1]        # 0x14000c200
   14000465f:	mov    r8d,ebx
   140004662:	mov    QWORD PTR [rsp+0x30],rcx
   140004667:	lea    rax,[rip+0x7f5a]        # 0x14000c5c8
   14000466e:	mov    QWORD PTR [rsp+0x28],rax
   140004673:	mov    DWORD PTR [rsp+0x20],0x35f
   14000467b:	mov    ecx,edi
   14000467d:	jmp    0x1400045b0
   140004682:	mov    rax,QWORD PTR [rbp+0x58]
   140004686:	mov    rsi,r15
   140004689:	lea    rbx,[rax+0x8]
   14000468d:	test   rbx,rbx
   140004690:	je     0x1400046d2
   140004692:	cmp    WORD PTR [rbx],r15w
   140004696:	je     0x1400046d2
   140004698:	movzx  eax,WORD PTR [rbx]
   14000469b:	add    ax,0x2
   14000469f:	cmp    ax,WORD PTR [rbx]
   1400046a2:	jb     0x140004712
   1400046a4:	movzx  edx,ax
   1400046a7:	xor    ecx,ecx
   1400046a9:	call   QWORD PTR [rip+0x6bc1]        # 0x14000b270
   1400046af:	mov    rsi,rax
   1400046b2:	test   rax,rax
   1400046b5:	je     0x140004712
   1400046b7:	movzx  r8d,WORD PTR [rbx]
   1400046bb:	mov    rcx,rax
   1400046be:	mov    rdx,QWORD PTR [rbx+0x8]
   1400046c2:	call   0x1400093a6
   1400046c7:	movzx  ecx,WORD PTR [rbx]
   1400046ca:	shr    rcx,1
   1400046cd:	mov    WORD PTR [rsi+rcx*2],r15w
   1400046d2:	lea    r9,[rbp+0x50]
   1400046d6:	mov    r8d,0x18
   1400046dc:	mov    rdx,rsi
   1400046df:	xor    ecx,ecx
   1400046e1:	call   QWORD PTR [rip+0x6e81]        # 0x14000b568
   1400046e7:	test   eax,eax
   1400046e9:	je     0x140004781
   1400046ef:	lea    r8,[rip+0xc94a]        # 0x140011040
   1400046f6:	mov    ecx,r15d
   1400046f9:	mov    rdx,r8
   1400046fc:	cmp    DWORD PTR [rdx],eax
   1400046fe:	je     0x140004740
   140004700:	add    ecx,edi
   140004702:	add    rdx,0x8
   140004706:	cmp    ecx,0x78
   140004709:	jb     0x1400046fc
   14000470b:	mov    ebx,0xc00000e5
   140004710:	jmp    0x140004747
   140004712:	lea    rcx,[rip+0x7ae7]        # 0x14000c200
   140004719:	mov    r8d,0xc0000017
   14000471f:	mov    QWORD PTR [rsp+0x30],rcx
   140004724:	lea    rax,[rip+0x7ebd]        # 0x14000c5e8
   14000472b:	mov    QWORD PTR [rsp+0x28],rax
   140004730:	mov    ebx,r8d
   140004733:	mov    DWORD PTR [rsp+0x20],0x364
   14000473b:	jmp    0x14000467b
   140004740:	mov    eax,ecx
   140004742:	mov    ebx,DWORD PTR [r8+rax*8+0x4]
   140004747:	lea    rcx,[rip+0x7ab2]        # 0x14000c200
   14000474e:	mov    r8d,ebx
   140004751:	mov    QWORD PTR [rsp+0x30],rcx
   140004756:	lea    rax,[rip+0x7ec3]        # 0x14000c620
   14000475d:	mov    QWORD PTR [rsp+0x28],rax
   140004762:	lea    r9,[rip+0x7b67]        # 0x14000c2d0
   140004769:	mov    ecx,edi
   14000476b:	mov    DWORD PTR [rsp+0x20],0x36f
   140004773:	lea    rdx,[rip+0x74e6]        # 0x14000bc60
   14000477a:	call   0x140005910
   14000477f:	jmp    0x140004796
   140004781:	mov    rax,QWORD PTR [rbp+0x50]
   140004785:	mov    ecx,DWORD PTR [rax]
   140004787:	mov    DWORD PTR [r13+0x0],ecx
   14000478b:	jmp    0x140004793
   14000478d:	mov    DWORD PTR [r15],edi
   140004790:	xor    r15d,r15d
   140004793:	mov    ebx,r15d
   140004796:	test   rsi,rsi
   140004799:	je     0x1400047a4
   14000479b:	mov    rcx,rsi
   14000479e:	call   QWORD PTR [rip+0x6924]        # 0x14000b0c8
   1400047a4:	mov    rcx,QWORD PTR [rbp+0x50]
   1400047a8:	test   rcx,rcx
   1400047ab:	je     0x1400047b3
   1400047ad:	call   QWORD PTR [rip+0x6d05]        # 0x14000b4b8
   1400047b3:	mov    rcx,QWORD PTR [rbp+0x60]
   1400047b7:	test   rcx,rcx
   1400047ba:	je     0x1400047c2
   1400047bc:	call   QWORD PTR [rip+0x6bf6]        # 0x14000b3b8
   1400047c2:	mov    rcx,QWORD PTR [rbp+0x58]
   1400047c6:	test   rcx,rcx
   1400047c9:	je     0x1400047d1
   1400047cb:	call   QWORD PTR [rip+0x6be7]        # 0x14000b3b8
   1400047d1:	test   r14,r14
   1400047d4:	je     0x1400047df
   1400047d6:	mov    rcx,r14
   1400047d9:	call   QWORD PTR [rip+0x68e9]        # 0x14000b0c8
   1400047df:	mov    eax,ebx
   1400047e1:	add    rsp,0x48
   1400047e5:	pop    r15
   1400047e7:	pop    r14
   1400047e9:	pop    r13
   1400047eb:	pop    r12
   1400047ed:	pop    rdi
   1400047ee:	pop    rsi
   1400047ef:	pop    rbx
   1400047f0:	pop    rbp
   1400047f1:	ret    
   1400047f2:	int3   
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400047fd:	push   rbp
   1400047fe:	push   rsi
   1400047ff:	push   rdi
   140004800:	push   r14
   140004802:	push   r15
   140004804:	lea    rbp,[rsp-0x37]
   140004809:	sub    rsp,0xd0
   140004810:	xor    r15d,r15d
   140004813:	mov    DWORD PTR [rbp+0xf],0x40
   14000481a:	lea    rax,[rbp+0x7f]
   14000481e:	mov    DWORD PTR [r8],r15d
   140004821:	mov    QWORD PTR [rbp-0x9],rax
   140004825:	mov    rsi,r8
   140004828:	mov    r14,rdx
   14000482b:	mov    QWORD PTR [rbp-0x29],r15
   14000482f:	lea    edi,[r15+0x1]
   140004833:	mov    DWORD PTR [rbp+0x27],r15d
   140004837:	xorps  xmm0,xmm0
   14000483a:	mov    QWORD PTR [rbp+0x2f],r15
   14000483e:	lea    rax,[rbp+0x77]
   140004842:	mov    DWORD PTR [rbp+0x7f],r15d
   140004846:	lea    edx,[rdi+0x6]
   140004849:	mov    DWORD PTR [rbp+0x77],0x5
   140004850:	lea    r8,[rbp-0x49]
   140004854:	mov    DWORD PTR [rbp-0x11],edi
   140004857:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   14000485c:	mov    QWORD PTR [rbp-0x1],r15
   140004860:	mov    QWORD PTR [rbp+0x7],rax
   140004864:	mov    QWORD PTR [rbp-0x49],r15
   140004868:	mov    QWORD PTR [rbp-0x31],r15
   14000486c:	mov    QWORD PTR [rbp-0x41],r15
   140004870:	call   QWORD PTR [rip+0x691a]        # 0x14000b190
   140004876:	mov    ebx,eax
   140004878:	test   eax,eax
   14000487a:	je     0x1400048a1
   14000487c:	lea    rax,[rip+0x797d]        # 0x14000c200
   140004883:	mov    QWORD PTR [rsp+0x30],rax
   140004888:	lea    rax,[rip+0x7db1]        # 0x14000c640
   14000488f:	mov    QWORD PTR [rsp+0x28],rax
   140004894:	mov    DWORD PTR [rsp+0x20],0x3bc
   14000489c:	jmp    0x140004a3e
   1400048a1:	mov    rcx,QWORD PTR [rbp-0x49]
   1400048a5:	lea    r9,[rbp-0x19]
   1400048a9:	lea    r8,[rbp-0x21]
   1400048ad:	lea    rdx,[rbp-0x39]
   1400048b1:	call   QWORD PTR [rip+0x6ab9]        # 0x14000b370
   1400048b7:	test   eax,eax
   1400048b9:	jne    0x1400048f4
   1400048bb:	call   QWORD PTR [rip+0x681f]        # 0x14000b0e0
   1400048c1:	movzx  ebx,ax
   1400048c4:	or     ebx,0xc0070000
   1400048ca:	test   eax,eax
   1400048cc:	cmovle ebx,eax
   1400048cf:	lea    rax,[rip+0x792a]        # 0x14000c200
   1400048d6:	mov    QWORD PTR [rsp+0x30],rax
   1400048db:	lea    rax,[rip+0x7d8e]        # 0x14000c670
   1400048e2:	mov    QWORD PTR [rsp+0x28],rax
   1400048e7:	mov    DWORD PTR [rsp+0x20],0x3c7
   1400048ef:	jmp    0x140004a3e
   1400048f4:	cmp    DWORD PTR [rbp-0x39],r15d
   1400048f8:	je     0x140004a67
   1400048fe:	cmp    QWORD PTR [rbp-0x21],r15
   140004902:	je     0x140004a67
   140004908:	mov    r8,QWORD PTR [rip+0xd389]        # 0x140011c98
   14000490f:	lea    rax,[rbp-0x31]
   140004913:	mov    QWORD PTR [rsp+0x30],rax
   140004918:	xor    r9d,r9d
   14000491b:	mov    rax,QWORD PTR [rbp-0x29]
   14000491f:	mov    rdx,r14
   140004922:	mov    QWORD PTR [rsp+0x28],r15
   140004927:	mov    QWORD PTR [rsp+0x20],rax
   14000492c:	lea    ecx,[r9+0x2]
   140004930:	call   QWORD PTR [rip+0x6752]        # 0x14000b088
   140004936:	test   eax,eax
   140004938:	jne    0x140004973
   14000493a:	call   QWORD PTR [rip+0x67a0]        # 0x14000b0e0
   140004940:	movzx  ebx,ax
   140004943:	or     ebx,0xc0070000
   140004949:	test   eax,eax
   14000494b:	cmovle ebx,eax
   14000494e:	lea    rax,[rip+0x78ab]        # 0x14000c200
   140004955:	mov    QWORD PTR [rsp+0x30],rax
   14000495a:	lea    rax,[rip+0x7d47]        # 0x14000c6a8
   140004961:	mov    QWORD PTR [rsp+0x28],rax
   140004966:	mov    DWORD PTR [rsp+0x20],0x3e4
   14000496e:	jmp    0x140004a3e
   140004973:	mov    rcx,QWORD PTR [rbp-0x31]
   140004977:	lea    rax,[rbp-0x41]
   14000497b:	mov    QWORD PTR [rsp+0x28],rax
   140004980:	lea    rdx,[rip+0xc6a1]        # 0x140011028
   140004987:	xor    r9d,r9d
   14000498a:	mov    DWORD PTR [rsp+0x20],r15d
   14000498f:	mov    r8d,edi
   140004992:	call   QWORD PTR [rip+0x66f8]        # 0x14000b090
   140004998:	test   eax,eax
   14000499a:	jne    0x1400049d2
   14000499c:	call   QWORD PTR [rip+0x673e]        # 0x14000b0e0
   1400049a2:	movzx  ebx,ax
   1400049a5:	or     ebx,0xc0070000
   1400049ab:	test   eax,eax
   1400049ad:	cmovle ebx,eax
   1400049b0:	lea    rax,[rip+0x7849]        # 0x14000c200
   1400049b7:	mov    QWORD PTR [rsp+0x30],rax
   1400049bc:	lea    rax,[rip+0x7d25]        # 0x14000c6e8
   1400049c3:	mov    QWORD PTR [rsp+0x28],rax
   1400049c8:	mov    DWORD PTR [rsp+0x20],0x3f2
   1400049d0:	jmp    0x140004a3e
   1400049d2:	mov    rdx,QWORD PTR [rbp-0x41]
   1400049d6:	lea    rax,[rbp-0x11]
   1400049da:	mov    QWORD PTR [rsp+0x40],r15
   1400049df:	lea    r8,[rbp+0xf]
   1400049e3:	mov    QWORD PTR [rsp+0x38],rax
   1400049e8:	xor    r9d,r9d
   1400049eb:	mov    rax,QWORD PTR [rbp-0x49]
   1400049ef:	xor    ecx,ecx
   1400049f1:	mov    DWORD PTR [rsp+0x30],r15d
   1400049f6:	mov    QWORD PTR [rsp+0x28],r15
   1400049fb:	mov    QWORD PTR [rsp+0x20],rax
   140004a00:	call   QWORD PTR [rip+0x6692]        # 0x14000b098
   140004a06:	test   eax,eax
   140004a08:	jne    0x140004a58
   140004a0a:	call   QWORD PTR [rip+0x66d0]        # 0x14000b0e0
   140004a10:	movzx  ebx,ax
   140004a13:	or     ebx,0xc0070000
   140004a19:	test   eax,eax
   140004a1b:	cmovle ebx,eax
   140004a1e:	lea    rax,[rip+0x77db]        # 0x14000c200
   140004a25:	mov    QWORD PTR [rsp+0x30],rax
   140004a2a:	lea    rax,[rip+0x7ce7]        # 0x14000c718
   140004a31:	mov    QWORD PTR [rsp+0x28],rax
   140004a36:	mov    DWORD PTR [rsp+0x20],0x403
   140004a3e:	lea    r9,[rip+0x788b]        # 0x14000c2d0
   140004a45:	mov    r8d,ebx
   140004a48:	lea    rdx,[rip+0x7211]        # 0x14000bc60
   140004a4f:	mov    ecx,edi
   140004a51:	call   0x140005910
   140004a56:	jmp    0x140004a6c
   140004a58:	cmp    DWORD PTR [rbp+0x77],r15d
   140004a5c:	jne    0x140004a64
   140004a5e:	test   BYTE PTR [rbp+0x7f],0x40
   140004a62:	jne    0x140004a67
   140004a64:	mov    edi,r15d
   140004a67:	mov    ebx,r15d
   140004a6a:	mov    DWORD PTR [rsi],edi
   140004a6c:	mov    rcx,QWORD PTR [rbp-0x49]
   140004a70:	test   rcx,rcx
   140004a73:	je     0x140004a7b
   140004a75:	call   QWORD PTR [rip+0x672d]        # 0x14000b1a8
   140004a7b:	mov    rcx,QWORD PTR [rbp-0x31]
   140004a7f:	test   rcx,rcx
   140004a82:	je     0x140004a8a
   140004a84:	call   QWORD PTR [rip+0x6616]        # 0x14000b0a0
   140004a8a:	mov    rcx,QWORD PTR [rbp-0x41]
   140004a8e:	test   rcx,rcx
   140004a91:	je     0x140004a99
   140004a93:	call   QWORD PTR [rip+0x6607]        # 0x14000b0a0
   140004a99:	mov    eax,ebx
   140004a9b:	mov    rbx,QWORD PTR [rsp+0x100]
   140004aa3:	add    rsp,0xd0
   140004aaa:	pop    r15
   140004aac:	pop    r14
   140004aae:	pop    rdi
   140004aaf:	pop    rsi
   140004ab0:	pop    rbp
   140004ab1:	ret    
   140004ab2:	int3   
   140004ab3:	int3   
   140004ab4:	int3   
   140004ab5:	int3   
   140004ab6:	int3   
   140004ab7:	int3   
   140004ab8:	mov    rax,rsp
   140004abb:	mov    QWORD PTR [rax+0x8],rbx
   140004abf:	mov    QWORD PTR [rax+0x10],rbp
   140004ac3:	mov    QWORD PTR [rax+0x18],rsi
   140004ac7:	push   rdi
   140004ac8:	sub    rsp,0x50
   140004acc:	and    QWORD PTR [rax-0x18],0x0
   140004ad1:	mov    ebp,r8d
   140004ad4:	mov    edi,edx
   140004ad6:	lea    r8,[rax-0x18]
   140004ada:	mov    edx,0x10
   140004adf:	mov    esi,r9d
   140004ae2:	call   QWORD PTR [rip+0x66d0]        # 0x14000b1b8
   140004ae8:	mov    ebx,eax
   140004aea:	test   eax,eax
   140004aec:	je     0x140004b30
   140004aee:	lea    rax,[rip+0x770b]        # 0x14000c200
   140004af5:	mov    r8d,ebx
   140004af8:	mov    QWORD PTR [rsp+0x30],rax
   140004afd:	lea    r9,[rip+0x77cc]        # 0x14000c2d0
   140004b04:	lea    rax,[rip+0x7c35]        # 0x14000c740
   140004b0b:	mov    ecx,0x1
   140004b10:	mov    QWORD PTR [rsp+0x28],rax
   140004b15:	lea    rdx,[rip+0x7144]        # 0x14000bc60
   140004b1c:	mov    DWORD PTR [rsp+0x20],0x42c
   140004b24:	call   0x140005910
   140004b29:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b2e:	jmp    0x140004b6c
   140004b30:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b35:	test   DWORD PTR [rcx],0x200
   140004b3b:	je     0x140004b6a
   140004b3d:	mov    rax,QWORD PTR [rsp+0x80]
   140004b45:	test   edi,edi
   140004b47:	je     0x140004b50
   140004b49:	mov    DWORD PTR [rax+0x34],0x1
   140004b50:	test   ebp,ebp
   140004b52:	jne    0x140004b58
   140004b54:	test   esi,esi
   140004b56:	je     0x140004b6a
   140004b58:	and    DWORD PTR [rax+0x14],0x0
   140004b5c:	mov    DWORD PTR [rax+0x10],0x2
   140004b63:	mov    DWORD PTR [rax+0x1c],0x1
   140004b6a:	xor    ebx,ebx
   140004b6c:	test   rcx,rcx
   140004b6f:	je     0x140004b77
   140004b71:	call   QWORD PTR [rip+0x6631]        # 0x14000b1a8
   140004b77:	mov    rbp,QWORD PTR [rsp+0x68]
   140004b7c:	mov    eax,ebx
   140004b7e:	mov    rbx,QWORD PTR [rsp+0x60]
   140004b83:	mov    rsi,QWORD PTR [rsp+0x70]
   140004b88:	add    rsp,0x50
   140004b8c:	pop    rdi
   140004b8d:	ret    
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	int3   
   140004b91:	int3   
   140004b92:	int3   
   140004b93:	int3   
   140004b94:	mov    rax,rsp
   140004b97:	mov    QWORD PTR [rax+0x8],rbx
   140004b9b:	mov    QWORD PTR [rax+0x20],r9
   140004b9f:	mov    DWORD PTR [rax+0x18],r8d
   140004ba3:	mov    DWORD PTR [rax+0x10],edx
   140004ba6:	push   rbp
   140004ba7:	push   rsi
   140004ba8:	push   rdi
   140004ba9:	push   r12
   140004bab:	push   r13
   140004bad:	push   r14
   140004baf:	push   r15
   140004bb1:	mov    rbp,rsp
   140004bb4:	sub    rsp,0x50
   140004bb8:	mov    r14,QWORD PTR [rbp+0x80]
   140004bbf:	xor    edx,edx
   140004bc1:	mov    rdi,QWORD PTR [rbp+0xa0]
   140004bc8:	mov    r12d,ecx
   140004bcb:	mov    r13,QWORD PTR [rbp+0x78]
   140004bcf:	mov    r11d,edx
   140004bd2:	mov    r15,QWORD PTR [rbp+0x70]
   140004bd6:	mov    r10d,edx
   140004bd9:	lea    esi,[rdx+0x1]
   140004bdc:	mov    DWORD PTR [rbp-0x10],edx
   140004bdf:	cmp    DWORD PTR [r14],edx
   140004be2:	je     0x140004cfb
   140004be8:	mov    eax,DWORD PTR [r13+0x0]
   140004bec:	test   eax,eax
   140004bee:	je     0x140004bf9
   140004bf0:	cmp    DWORD PTR [r15],eax
   140004bf3:	jbe    0x140004cfb
   140004bf9:	test   ecx,ecx
   140004bfb:	je     0x140004c5e
   140004bfd:	test   r8d,r8d
   140004c00:	jne    0x140004c5e
   140004c02:	mov    rcx,QWORD PTR [rbp+0x60]
   140004c06:	lea    r8,[rbp-0x10]
   140004c0a:	mov    rdx,r9
   140004c0d:	call   0x1400047f8
   140004c12:	xor    edx,edx
   140004c14:	mov    ebx,eax
   140004c16:	test   eax,eax
   140004c18:	je     0x140004c3f
   140004c1a:	lea    rax,[rip+0x75df]        # 0x14000c200
   140004c21:	mov    QWORD PTR [rsp+0x30],rax
   140004c26:	lea    rax,[rip+0x7b43]        # 0x14000c770
   140004c2d:	mov    QWORD PTR [rsp+0x28],rax
   140004c32:	mov    DWORD PTR [rsp+0x20],0x480
   140004c3a:	jmp    0x140004eea
   140004c3f:	mov    r10d,DWORD PTR [rbp-0x10]
   140004c43:	mov    r11d,esi
   140004c46:	test   r10d,r10d
   140004c49:	jne    0x140004c57
   140004c4b:	mov    DWORD PTR [rdi+0x4],0x80550006
   140004c52:	jmp    0x140004cf2
   140004c57:	mov    r9,QWORD PTR [rbp+0x58]
   140004c5b:	mov    DWORD PTR [rdi+0x30],esi
   140004c5e:	cmp    DWORD PTR [r14],edx
   140004c61:	je     0x140004cfb
   140004c67:	mov    rax,QWORD PTR [rbp+0x68]
   140004c6b:	mov    eax,DWORD PTR [rax]
   140004c6d:	test   eax,eax
   140004c6f:	je     0x140004c7a
   140004c71:	cmp    DWORD PTR [r15],eax
   140004c74:	jbe    0x140004cfb
   140004c7a:	test   r11d,r11d
   140004c7d:	jne    0x140004cc3
   140004c7f:	mov    rcx,QWORD PTR [rbp+0x60]
   140004c83:	lea    r8,[rbp-0x10]
   140004c87:	mov    rdx,r9
   140004c8a:	call   0x1400047f8
   140004c8f:	xor    edx,edx
   140004c91:	mov    ebx,eax
   140004c93:	test   eax,eax
   140004c95:	je     0x140004cbc
   140004c97:	lea    rax,[rip+0x7562]        # 0x14000c200
   140004c9e:	mov    QWORD PTR [rsp+0x30],rax
   140004ca3:	lea    rax,[rip+0x7ac6]        # 0x14000c770
   140004caa:	mov    QWORD PTR [rsp+0x28],rax
   140004caf:	mov    DWORD PTR [rsp+0x20],0x49d
   140004cb7:	jmp    0x140004eea
   140004cbc:	mov    r10d,DWORD PTR [rbp-0x10]
   140004cc0:	mov    r11d,esi
   140004cc3:	test   r10d,r10d
   140004cc6:	je     0x140004cd4
   140004cc8:	mov    QWORD PTR [rdi],0x2
   140004ccf:	mov    DWORD PTR [rdi+0x30],esi
   140004cd2:	jmp    0x140004cfb
   140004cd4:	mov    eax,r12d
   140004cd7:	neg    eax
   140004cd9:	mov    eax,0x80550008
   140004cde:	sbb    ecx,ecx
   140004ce0:	and    ecx,0xfffffffd
   140004ce3:	add    ecx,0x80550009
   140004ce9:	cmp    DWORD PTR [rbp+0x48],edx
   140004cec:	cmovne ecx,eax
   140004cef:	mov    DWORD PTR [rdi+0x4],ecx
   140004cf2:	mov    DWORD PTR [rdi],0x3
   140004cf8:	mov    DWORD PTR [r14],edx
   140004cfb:	mov    r14,QWORD PTR [rbp+0x88]
   140004d02:	cmp    DWORD PTR [r14],edx
   140004d05:	je     0x140004e27
   140004d0b:	mov    eax,DWORD PTR [r13+0x4]
   140004d0f:	test   eax,eax
   140004d11:	je     0x140004d1d
   140004d13:	cmp    DWORD PTR [r15+0x4],eax
   140004d17:	jbe    0x140004e27
   140004d1d:	test   r12d,r12d
   140004d20:	je     0x140004d85
   140004d22:	cmp    DWORD PTR [rbp+0x50],edx
   140004d25:	jne    0x140004d85
   140004d27:	test   r11d,r11d
   140004d2a:	jne    0x140004d71
   140004d2c:	mov    rdx,QWORD PTR [rbp+0x58]
   140004d30:	lea    r8,[rbp-0x10]
   140004d34:	mov    rcx,QWORD PTR [rbp+0x60]
   140004d38:	call   0x1400047f8
   140004d3d:	xor    edx,edx
   140004d3f:	mov    ebx,eax
   140004d41:	test   eax,eax
   140004d43:	je     0x140004d6a
   140004d45:	lea    rax,[rip+0x74b4]        # 0x14000c200
   140004d4c:	mov    QWORD PTR [rsp+0x30],rax
   140004d51:	lea    rax,[rip+0x7a18]        # 0x14000c770
   140004d58:	mov    QWORD PTR [rsp+0x28],rax
   140004d5d:	mov    DWORD PTR [rsp+0x20],0x4ce
   140004d65:	jmp    0x140004eea
   140004d6a:	mov    r10d,DWORD PTR [rbp-0x10]
   140004d6e:	mov    r11d,esi
   140004d71:	test   r10d,r10d
   140004d74:	jne    0x140004d82
   140004d76:	mov    DWORD PTR [rdi+0xc],0x80550006
   140004d7d:	jmp    0x140004e1d
   140004d82:	mov    DWORD PTR [rdi+0x30],esi
   140004d85:	cmp    DWORD PTR [r14],edx
   140004d88:	je     0x140004e27
   140004d8e:	mov    rax,QWORD PTR [rbp+0x68]
   140004d92:	mov    eax,DWORD PTR [rax+0x4]
   140004d95:	test   eax,eax
   140004d97:	je     0x140004da3
   140004d99:	cmp    DWORD PTR [r15+0x4],eax
   140004d9d:	jbe    0x140004e27
   140004da3:	test   r11d,r11d
   140004da6:	jne    0x140004ded
   140004da8:	mov    rdx,QWORD PTR [rbp+0x58]
   140004dac:	lea    r8,[rbp-0x10]
   140004db0:	mov    rcx,QWORD PTR [rbp+0x60]
   140004db4:	call   0x1400047f8
   140004db9:	xor    edx,edx
   140004dbb:	mov    ebx,eax
   140004dbd:	test   eax,eax
   140004dbf:	je     0x140004de6
   140004dc1:	lea    rax,[rip+0x7438]        # 0x14000c200
   140004dc8:	mov    QWORD PTR [rsp+0x30],rax
   140004dcd:	lea    rax,[rip+0x799c]        # 0x14000c770
   140004dd4:	mov    QWORD PTR [rsp+0x28],rax
   140004dd9:	mov    DWORD PTR [rsp+0x20],0x4eb
   140004de1:	jmp    0x140004eea
   140004de6:	mov    r10d,DWORD PTR [rbp-0x10]
   140004dea:	mov    r11d,esi
   140004ded:	test   r10d,r10d
   140004df0:	je     0x140004dff
   140004df2:	mov    QWORD PTR [rdi+0x8],0x2
   140004dfa:	mov    DWORD PTR [rdi+0x30],esi
   140004dfd:	jmp    0x140004e27
   140004dff:	mov    eax,r12d
   140004e02:	neg    eax
   140004e04:	mov    eax,0x80550008
   140004e09:	sbb    ecx,ecx
   140004e0b:	and    ecx,0xfffffffd
   140004e0e:	add    ecx,0x80550009
   140004e14:	cmp    DWORD PTR [rbp+0x48],edx
   140004e17:	cmovne ecx,eax
   140004e1a:	mov    DWORD PTR [rdi+0xc],ecx
   140004e1d:	mov    DWORD PTR [rdi+0x8],0x3
   140004e24:	mov    DWORD PTR [r14],edx
   140004e27:	mov    r14,QWORD PTR [rbp+0x98]
   140004e2e:	cmp    DWORD PTR [r14],edx
   140004e31:	je     0x140004f58
   140004e37:	mov    eax,DWORD PTR [r13+0x14]
   140004e3b:	test   eax,eax
   140004e3d:	je     0x140004e51
   140004e3f:	cmp    DWORD PTR [r15+0x8],eax
   140004e43:	ja     0x140004e51
   140004e45:	mov    DWORD PTR [rdi+0x14],0x80550005
   140004e4c:	jmp    0x140004f4e
   140004e51:	test   r11d,r11d
   140004e54:	jne    0x140004e95
   140004e56:	mov    rdx,QWORD PTR [rbp+0x58]
   140004e5a:	lea    r8,[rbp-0x10]
   140004e5e:	mov    rcx,QWORD PTR [rbp+0x60]
   140004e62:	call   0x1400047f8
   140004e67:	xor    edx,edx
   140004e69:	mov    ebx,eax
   140004e6b:	test   eax,eax
   140004e6d:	je     0x140004e91
   140004e6f:	lea    rax,[rip+0x738a]        # 0x14000c200
   140004e76:	mov    QWORD PTR [rsp+0x30],rax
   140004e7b:	lea    rax,[rip+0x78ee]        # 0x14000c770
   140004e82:	mov    QWORD PTR [rsp+0x28],rax
   140004e87:	mov    DWORD PTR [rsp+0x20],0x51e
   140004e8f:	jmp    0x140004eea
   140004e91:	mov    r10d,DWORD PTR [rbp-0x10]
   140004e95:	test   r10d,r10d
   140004e98:	je     0x140004f33
   140004e9e:	mov    eax,DWORD PTR [rbp+0x48]
   140004ea1:	test   eax,eax
   140004ea3:	jne    0x140004eaa
   140004ea5:	test   r12d,r12d
   140004ea8:	je     0x140004f07
   140004eaa:	mov    r9d,DWORD PTR [rbp+0x50]
   140004eae:	mov    r8d,eax
   140004eb1:	mov    rcx,QWORD PTR [rbp+0x60]
   140004eb5:	mov    edx,r12d
   140004eb8:	mov    QWORD PTR [rsp+0x20],rdi
   140004ebd:	call   0x140004ab8
   140004ec2:	xor    edx,edx
   140004ec4:	mov    ebx,eax
   140004ec6:	test   eax,eax
   140004ec8:	je     0x140004f07
   140004eca:	lea    rax,[rip+0x732f]        # 0x14000c200
   140004ed1:	mov    QWORD PTR [rsp+0x30],rax
   140004ed6:	lea    rax,[rip+0x78db]        # 0x14000c7b8
   140004edd:	mov    QWORD PTR [rsp+0x28],rax
   140004ee2:	mov    DWORD PTR [rsp+0x20],0x52f
   140004eea:	lea    r9,[rip+0x73df]        # 0x14000c2d0
   140004ef1:	mov    r8d,ebx
   140004ef4:	lea    rdx,[rip+0x6d65]        # 0x14000bc60
   140004efb:	mov    ecx,esi
   140004efd:	call   0x140005910
   140004f02:	jmp    0x140004f8c
   140004f07:	mov    eax,DWORD PTR [r13+0x8]
   140004f0b:	test   eax,eax
   140004f0d:	je     0x140004f15
   140004f0f:	cmp    DWORD PTR [r15+0x8],eax
   140004f13:	jae    0x140004f58
   140004f15:	mov    rcx,QWORD PTR [rbp+0x68]
   140004f19:	mov    eax,DWORD PTR [rcx+0x8]
   140004f1c:	test   eax,eax
   140004f1e:	je     0x140004f26
   140004f20:	cmp    DWORD PTR [r15+0x8],eax
   140004f24:	jae    0x140004f5c
   140004f26:	mov    QWORD PTR [rdi+0x10],0x2
   140004f2e:	mov    DWORD PTR [rdi+0x18],esi
   140004f31:	jmp    0x140004f5c
   140004f33:	neg    r12d
   140004f36:	mov    ecx,0x80550008
   140004f3b:	sbb    eax,eax
   140004f3d:	and    eax,0xfffffffd
   140004f40:	add    eax,0x80550009
   140004f45:	cmp    DWORD PTR [rbp+0x48],edx
   140004f48:	cmovne eax,ecx
   140004f4b:	mov    DWORD PTR [rdi+0x14],eax
   140004f4e:	mov    DWORD PTR [rdi+0x10],0x3
   140004f55:	mov    DWORD PTR [r14],edx
   140004f58:	mov    rcx,QWORD PTR [rbp+0x68]
   140004f5c:	mov    rax,QWORD PTR [rbp+0x90]
   140004f63:	cmp    DWORD PTR [rax],edx
   140004f65:	je     0x140004f8a
   140004f67:	mov    eax,DWORD PTR [r13+0xc]
   140004f6b:	test   eax,eax
   140004f6d:	je     0x140004f75
   140004f6f:	cmp    DWORD PTR [r15+0xc],eax
   140004f73:	jbe    0x140004f8a
   140004f75:	mov    eax,DWORD PTR [rcx+0xc]
   140004f78:	test   eax,eax
   140004f7a:	je     0x140004f82
   140004f7c:	cmp    DWORD PTR [r15+0xc],eax
   140004f80:	jbe    0x140004f8a
   140004f82:	mov    QWORD PTR [rdi+0x20],0x2
   140004f8a:	mov    ebx,edx
   140004f8c:	mov    eax,ebx
   140004f8e:	mov    rbx,QWORD PTR [rsp+0x90]
   140004f96:	add    rsp,0x50
   140004f9a:	pop    r15
   140004f9c:	pop    r14
   140004f9e:	pop    r13
   140004fa0:	pop    r12
   140004fa2:	pop    rdi
   140004fa3:	pop    rsi
   140004fa4:	pop    rbp
   140004fa5:	ret    
   140004fa6:	int3   
   140004fa7:	int3   
   140004fa8:	int3   
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	mov    rax,rsp
   140004faf:	mov    QWORD PTR [rax+0x10],rbx
   140004fb3:	mov    DWORD PTR [rax+0x18],r8d
   140004fb7:	mov    DWORD PTR [rax+0x8],ecx
   140004fba:	push   rbp
   140004fbb:	push   rsi
   140004fbc:	push   rdi
   140004fbd:	push   r12
   140004fbf:	push   r13
   140004fc1:	push   r14
   140004fc3:	push   r15
   140004fc5:	lea    rbp,[rax-0x3f]
   140004fc9:	sub    rsp,0x90
   140004fd0:	mov    r15,QWORD PTR [rbp+0x97]
   140004fd7:	xor    ecx,ecx
   140004fd9:	mov    r14,QWORD PTR [rbp+0x9f]
   140004fe0:	mov    esi,edx
   140004fe2:	mov    r12d,ecx
   140004fe5:	mov    QWORD PTR [rbp-0x11],rcx
   140004fe9:	mov    QWORD PTR [rbp-0x9],rcx
   140004fed:	mov    QWORD PTR [rbp-0x1],rcx
   140004ff1:	cmp    DWORD PTR [r15],ecx
   140004ff4:	jne    0x140005023
   140004ff6:	cmp    DWORD PTR [r14],ecx
   140004ff9:	jne    0x140005023
   140004ffb:	mov    rax,QWORD PTR [rbp+0xa7]
   140005002:	cmp    DWORD PTR [rax],ecx
   140005004:	jne    0x140005023
   140005006:	mov    rax,QWORD PTR [rbp+0xaf]
   14000500d:	cmp    DWORD PTR [rax],ecx
   14000500f:	jne    0x140005023
   140005011:	mov    rax,QWORD PTR [rbp+0xb7]
   140005018:	cmp    DWORD PTR [rax],ecx
   14000501a:	jne    0x140005023
   14000501c:	mov    ebx,ecx
   14000501e:	jmp    0x14000544c
   140005023:	mov    r13,QWORD PTR [rbp+0x67]
   140005027:	test   r13,r13
   14000502a:	jne    0x140005088
   14000502c:	lea    rdx,[rbp-0x11]
   140005030:	mov    rcx,r9
   140005033:	call   0x140003a5c
   140005038:	mov    ebx,eax
   14000503a:	test   eax,eax
   14000503c:	je     0x140005081
   14000503e:	lea    rax,[rip+0x71bb]        # 0x14000c200
   140005045:	mov    r8d,ebx
   140005048:	mov    QWORD PTR [rsp+0x30],rax
   14000504d:	lea    r9,[rip+0x727c]        # 0x14000c2d0
   140005054:	lea    rax,[rip+0x6e35]        # 0x14000be90
   14000505b:	mov    QWORD PTR [rsp+0x28],rax
   140005060:	lea    rdx,[rip+0x6bf9]        # 0x14000bc60
   140005067:	lea    ecx,[r13+0x1]
   14000506b:	mov    DWORD PTR [rsp+0x20],0x5b7
   140005073:	call   0x140005910
   140005078:	mov    r12,QWORD PTR [rbp-0x11]
   14000507c:	jmp    0x140005420
   140005081:	mov    r12,QWORD PTR [rbp-0x11]
   140005085:	mov    r13,r12
   140005088:	lea    r9,[rbp+0x97]
   14000508f:	mov    rcx,r13
   140005092:	lea    r8,[rbp-0x19]
   140005096:	lea    rdx,[rbp-0x11]
   14000509a:	call   0x140004518
   14000509f:	mov    ebx,eax
   1400050a1:	test   eax,eax
   1400050a3:	je     0x1400050ca
   1400050a5:	lea    rax,[rip+0x7154]        # 0x14000c200
   1400050ac:	mov    QWORD PTR [rsp+0x30],rax
   1400050b1:	lea    rax,[rip+0x7740]        # 0x14000c7f8
   1400050b8:	mov    QWORD PTR [rsp+0x28],rax
   1400050bd:	mov    DWORD PTR [rsp+0x20],0x5c1
   1400050c5:	jmp    0x140005405
   1400050ca:	mov    rdi,QWORD PTR [rbp+0xbf]
   1400050d1:	mov    ecx,esi
   1400050d3:	mov    r8d,DWORD PTR [rbp+0x97]
   1400050da:	mov    edx,DWORD PTR [rbp+0x47]
   1400050dd:	lea    rax,[rdi+0x28]
   1400050e1:	mov    QWORD PTR [rsp+0x30],rax
   1400050e6:	mov    rax,QWORD PTR [rbp+0xb7]
   1400050ed:	mov    QWORD PTR [rsp+0x28],rax
   1400050f2:	mov    rax,QWORD PTR [rbp+0x77]
   1400050f6:	mov    eax,DWORD PTR [rax+0x10]
   1400050f9:	mov    DWORD PTR [rsp+0x20],eax
   1400050fd:	mov    rax,QWORD PTR [rbp+0x6f]
   140005101:	mov    r9d,DWORD PTR [rax+0x10]
   140005105:	call   0x140004284
   14000510a:	mov    ebx,eax
   14000510c:	test   eax,eax
   14000510e:	je     0x140005135
   140005110:	lea    rax,[rip+0x70e9]        # 0x14000c200
   140005117:	mov    QWORD PTR [rsp+0x30],rax
   14000511c:	lea    rax,[rip+0x76fd]        # 0x14000c820
   140005123:	mov    QWORD PTR [rsp+0x28],rax
   140005128:	mov    DWORD PTR [rsp+0x20],0x5cb
   140005130:	jmp    0x140005405
   140005135:	xor    ebx,ebx
   140005137:	mov    edx,0x3
   14000513c:	cmp    DWORD PTR [rbp-0x19],ebx
   14000513f:	jne    0x140005178
   140005141:	mov    r8d,0x80550003
   140005147:	mov    rcx,QWORD PTR [rbp+0x77]
   14000514b:	cmp    DWORD PTR [r15],ebx
   14000514e:	je     0x14000515d
   140005150:	cmp    DWORD PTR [rcx],edx
   140005152:	jbe    0x14000515d
   140005154:	mov    DWORD PTR [rdi],edx
   140005156:	mov    DWORD PTR [rdi+0x4],r8d
   14000515a:	mov    DWORD PTR [r15],ebx
   14000515d:	cmp    DWORD PTR [r14],ebx
   140005160:	je     0x140005178
   140005162:	mov    rax,QWORD PTR [rbp+0x7f]
   140005166:	mov    eax,DWORD PTR [rax+0x18]
   140005169:	cmp    DWORD PTR [rcx+0x4],eax
   14000516c:	jbe    0x140005178
   14000516e:	mov    DWORD PTR [rdi+0x8],edx
   140005171:	mov    DWORD PTR [rdi+0xc],r8d
   140005175:	mov    DWORD PTR [r14],ebx
   140005178:	cmp    DWORD PTR [rbp+0x97],ebx
   14000517e:	jne    0x140005420
   140005184:	mov    rcx,r13
   140005187:	call   QWORD PTR [rip+0x637b]        # 0x14000b508
   14000518d:	mov    rcx,r13
   140005190:	movzx  edx,BYTE PTR [rax]
   140005193:	dec    edx
   140005195:	call   QWORD PTR [rip+0x63bd]        # 0x14000b558
   14000519b:	mov    rcx,QWORD PTR [rip+0xcaee]        # 0x140011c90
   1400051a2:	lea    r9,[rbp-0x9]
   1400051a6:	cmp    DWORD PTR [rbp-0x11],ebx
   1400051a9:	mov    edx,0x2011b
   1400051ae:	mov    r8d,DWORD PTR [rax]
   1400051b1:	cmovne rcx,QWORD PTR [rip+0xcacf]        # 0x140011c88
   1400051b9:	call   QWORD PTR [rip+0x5fe1]        # 0x14000b1a0
   1400051bf:	mov    ebx,eax
   1400051c1:	test   eax,eax
   1400051c3:	je     0x1400051ea
   1400051c5:	lea    rax,[rip+0x7034]        # 0x14000c200
   1400051cc:	mov    QWORD PTR [rsp+0x30],rax
   1400051d1:	lea    rax,[rip+0x7688]        # 0x14000c860
   1400051d8:	mov    QWORD PTR [rsp+0x28],rax
   1400051dd:	mov    DWORD PTR [rsp+0x20],0x5eb
   1400051e5:	jmp    0x140005405
   1400051ea:	mov    rcx,QWORD PTR [rbp-0x9]
   1400051ee:	lea    r8,[rbp-0x1]
   1400051f2:	mov    edx,0x1d
   1400051f7:	call   QWORD PTR [rip+0x5fbb]        # 0x14000b1b8
   1400051fd:	mov    ebx,eax
   1400051ff:	test   eax,eax
   140005201:	je     0x140005228
   140005203:	lea    rax,[rip+0x6ff6]        # 0x14000c200
   14000520a:	mov    QWORD PTR [rsp+0x30],rax
   14000520f:	lea    rax,[rip+0x752a]        # 0x14000c740
   140005216:	mov    QWORD PTR [rsp+0x28],rax
   14000521b:	mov    DWORD PTR [rsp+0x20],0x5ef
   140005223:	jmp    0x140005405
   140005228:	mov    ecx,DWORD PTR [rbp+0x47]
   14000522b:	xor    ebx,ebx
   14000522d:	test   esi,esi
   14000522f:	jne    0x140005239
   140005231:	test   ecx,ecx
   140005233:	je     0x140005386
   140005239:	cmp    DWORD PTR [rbp-0x19],ebx
   14000523c:	je     0x140005386
   140005242:	test   ecx,ecx
   140005244:	je     0x14000529d
   140005246:	lea    rdx,[rbp+0x97]
   14000524d:	lea    rcx,[rbp-0x19]
   140005251:	call   0x140005bac
   140005256:	mov    ebx,eax
   140005258:	test   eax,eax
   14000525a:	je     0x140005281
   14000525c:	lea    rax,[rip+0x6f9d]        # 0x14000c200
   140005263:	mov    QWORD PTR [rsp+0x30],rax
   140005268:	lea    rax,[rip+0x7609]        # 0x14000c878
   14000526f:	mov    QWORD PTR [rsp+0x28],rax
   140005274:	mov    DWORD PTR [rsp+0x20],0x602
   14000527c:	jmp    0x140005405
   140005281:	movzx  eax,WORD PTR [rbp+0x99]
   140005288:	xor    ebx,ebx
   14000528a:	movzx  r9d,WORD PTR [rbp+0x97]
   140005292:	movzx  edx,WORD PTR [rbp-0x17]
   140005296:	movzx  r8d,WORD PTR [rbp-0x19]
   14000529b:	jmp    0x1400052cd
   14000529d:	mov    rax,QWORD PTR [rbp+0x87]
   1400052a4:	test   rax,rax
   1400052a7:	je     0x14000535f
   1400052ad:	mov    rcx,QWORD PTR [rbp+0x8f]
   1400052b4:	test   rcx,rcx
   1400052b7:	je     0x14000535f
   1400052bd:	movzx  r8d,WORD PTR [rax]
   1400052c1:	movzx  edx,WORD PTR [rax+0x2]
   1400052c5:	movzx  eax,WORD PTR [rcx+0x2]
   1400052c9:	movzx  r9d,WORD PTR [rcx]
   1400052cd:	mov    r10d,0x8055000c
   1400052d3:	mov    rcx,QWORD PTR [rbp+0x77]
   1400052d7:	lea    r11d,[r10+0x1]
   1400052db:	cmp    DWORD PTR [r15],ebx
   1400052de:	je     0x140005318
   1400052e0:	movzx  eax,ax
   1400052e3:	cmp    DWORD PTR [rcx],eax
   1400052e5:	jbe    0x1400052f5
   1400052e7:	mov    eax,esi
   1400052e9:	neg    eax
   1400052eb:	sbb    ecx,ecx
   1400052ed:	and    ecx,0xfffffffe
   1400052f0:	add    ecx,r10d
   1400052f3:	jmp    0x140005308
   1400052f5:	movzx  eax,dx
   1400052f8:	cmp    DWORD PTR [rcx],eax
   1400052fa:	jbe    0x140005318
   1400052fc:	mov    eax,esi
   1400052fe:	neg    eax
   140005300:	sbb    ecx,ecx
   140005302:	and    ecx,0xfffffffe
   140005305:	add    ecx,r11d
   140005308:	mov    DWORD PTR [rdi+0x4],ecx
   14000530b:	mov    rcx,QWORD PTR [rbp+0x77]
   14000530f:	mov    DWORD PTR [rdi],0x3
   140005315:	mov    DWORD PTR [r15],ebx
   140005318:	cmp    DWORD PTR [r14],ebx
   14000531b:	je     0x140005420
   140005321:	movzx  eax,r9w
   140005325:	cmp    DWORD PTR [rcx+0x4],eax
   140005328:	jbe    0x140005336
   14000532a:	neg    esi
   14000532c:	sbb    eax,eax
   14000532e:	and    eax,0xfffffffe
   140005331:	add    eax,r10d
   140005334:	jmp    0x14000534d
   140005336:	movzx  eax,r8w
   14000533a:	cmp    DWORD PTR [rcx+0x4],eax
   14000533d:	jbe    0x140005420
   140005343:	neg    esi
   140005345:	sbb    eax,eax
   140005347:	and    eax,0xfffffffe
   14000534a:	add    eax,r11d
   14000534d:	mov    DWORD PTR [rdi+0x8],0x3
   140005354:	mov    DWORD PTR [rdi+0xc],eax
   140005357:	mov    DWORD PTR [r14],ebx
   14000535a:	jmp    0x140005420
   14000535f:	lea    rax,[rip+0x6e9a]        # 0x14000c200
   140005366:	mov    ebx,0xc00000e5
   14000536b:	mov    QWORD PTR [rsp+0x30],rax
   140005370:	lea    rax,[rip+0x7539]        # 0x14000c8b0
   140005377:	mov    QWORD PTR [rsp+0x28],rax
   14000537c:	mov    DWORD PTR [rsp+0x20],0x60d
   140005384:	jmp    0x140005405
   140005386:	mov    rax,QWORD PTR [rbp+0xaf]
   14000538d:	mov    r9,r13
   140005390:	mov    r8d,DWORD PTR [rbp+0x57]
   140005394:	mov    edx,esi
   140005396:	mov    QWORD PTR [rsp+0x60],rdi
   14000539b:	mov    QWORD PTR [rsp+0x58],rax
   1400053a0:	mov    rax,QWORD PTR [rbp+0xa7]
   1400053a7:	mov    QWORD PTR [rsp+0x50],rax
   1400053ac:	mov    rax,QWORD PTR [rbp+0x7f]
   1400053b0:	mov    QWORD PTR [rsp+0x48],r14
   1400053b5:	mov    QWORD PTR [rsp+0x40],r15
   1400053ba:	mov    QWORD PTR [rsp+0x38],rax
   1400053bf:	mov    rax,QWORD PTR [rbp+0x77]
   1400053c3:	mov    QWORD PTR [rsp+0x30],rax
   1400053c8:	mov    rax,QWORD PTR [rbp+0x6f]
   1400053cc:	mov    QWORD PTR [rsp+0x28],rax
   1400053d1:	mov    rax,QWORD PTR [rbp-0x9]
   1400053d5:	mov    QWORD PTR [rsp+0x20],rax
   1400053da:	call   0x140004b94
   1400053df:	mov    ebx,eax
   1400053e1:	test   eax,eax
   1400053e3:	je     0x140005420
   1400053e5:	lea    rax,[rip+0x6e14]        # 0x14000c200
   1400053ec:	mov    QWORD PTR [rsp+0x30],rax
   1400053f1:	lea    rax,[rip+0x7500]        # 0x14000c8f8
   1400053f8:	mov    QWORD PTR [rsp+0x28],rax
   1400053fd:	mov    DWORD PTR [rsp+0x20],0x663
   140005405:	lea    r9,[rip+0x6ec4]        # 0x14000c2d0
   14000540c:	mov    r8d,ebx
   14000540f:	lea    rdx,[rip+0x684a]        # 0x14000bc60
   140005416:	mov    ecx,0x1
   14000541b:	call   0x140005910
   140005420:	test   r12,r12
   140005423:	je     0x14000542e
   140005425:	mov    rcx,r12
   140005428:	call   QWORD PTR [rip+0x5c9a]        # 0x14000b0c8
   14000542e:	mov    rcx,QWORD PTR [rbp-0x1]
   140005432:	test   rcx,rcx
   140005435:	je     0x14000543d
   140005437:	call   QWORD PTR [rip+0x5d6b]        # 0x14000b1a8
   14000543d:	mov    rcx,QWORD PTR [rbp-0x9]
   140005441:	test   rcx,rcx
   140005444:	je     0x14000544c
   140005446:	call   QWORD PTR [rip+0x5d3c]        # 0x14000b188
   14000544c:	mov    eax,ebx
   14000544e:	mov    rbx,QWORD PTR [rsp+0xd8]
   140005456:	add    rsp,0x90
   14000545d:	pop    r15
   14000545f:	pop    r14
   140005461:	pop    r13
   140005463:	pop    r12
   140005465:	pop    rdi
   140005466:	pop    rsi
   140005467:	pop    rbp
   140005468:	ret    
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	mov    r11,rsp
   140005473:	mov    QWORD PTR [r11+0x8],rbx
   140005477:	push   rdi
   140005478:	sub    rsp,0x40
   14000547c:	and    QWORD PTR [r11+0x10],0x0
   140005481:	lea    r8,[r11+0x18]
   140005485:	and    QWORD PTR [r11+0x18],0x0
   14000548a:	xor    eax,eax
   14000548c:	mov    QWORD PTR [rcx],rax
   14000548f:	mov    rdi,rcx
   140005492:	mov    QWORD PTR [rcx+0x8],rax
   140005496:	mov    QWORD PTR [rcx+0x10],rax
   14000549a:	mov    DWORD PTR [rcx+0x18],eax
   14000549d:	lea    edx,[rax+0x2]
   1400054a0:	mov    rcx,QWORD PTR [rip+0xc7e9]        # 0x140011c90
   1400054a7:	call   QWORD PTR [rip+0x5ceb]        # 0x14000b198
   1400054ad:	mov    ebx,eax
   1400054af:	test   eax,eax
   1400054b1:	je     0x1400054d5
   1400054b3:	lea    rax,[rip+0x6d46]        # 0x14000c200
   1400054ba:	mov    QWORD PTR [rsp+0x30],rax
   1400054bf:	lea    rax,[rip+0x7472]        # 0x14000c938
   1400054c6:	mov    QWORD PTR [rsp+0x28],rax
   1400054cb:	mov    DWORD PTR [rsp+0x20],0x685
   1400054d3:	jmp    0x14000552b
   1400054d5:	mov    rax,QWORD PTR [rsp+0x60]
   1400054da:	lea    r8,[rsp+0x58]
   1400054df:	mov    edx,0x1
   1400054e4:	mov    cl,BYTE PTR [rax+0x48]
   1400054e7:	neg    cl
   1400054e9:	sbb    eax,eax
   1400054eb:	and    eax,0xffffff0e
   1400054f0:	add    eax,0x100
   1400054f5:	mov    DWORD PTR [rdi+0x18],eax
   1400054f8:	mov    rcx,QWORD PTR [rip+0xc791]        # 0x140011c90
   1400054ff:	call   QWORD PTR [rip+0x5c93]        # 0x14000b198
   140005505:	mov    ebx,eax
   140005507:	test   eax,eax
   140005509:	je     0x140005550
   14000550b:	lea    rax,[rip+0x6cee]        # 0x14000c200
   140005512:	mov    QWORD PTR [rsp+0x30],rax
   140005517:	lea    rax,[rip+0x741a]        # 0x14000c938
   14000551e:	mov    QWORD PTR [rsp+0x28],rax
   140005523:	mov    DWORD PTR [rsp+0x20],0x697
   14000552b:	lea    r9,[rip+0x6d9e]        # 0x14000c2d0
   140005532:	mov    r8d,ebx
   140005535:	lea    rdx,[rip+0x6724]        # 0x14000bc60
   14000553c:	mov    ecx,0x1
   140005541:	call   0x140005910
   140005546:	mov    r8,QWORD PTR [rsp+0x58]
   14000554b:	jmp    0x1400055ea
   140005550:	mov    r8,QWORD PTR [rsp+0x58]
   140005555:	xor    eax,eax
   140005557:	movabs r11,0x29406b2a1a85bd43
   140005561:	mov    r10d,0x91a2b3c5
   140005567:	mov    r9d,0xaaaaaaab
   14000556d:	mov    cl,BYTE PTR [r8+0x4]
   140005571:	and    cl,0x1
   140005574:	sub    al,cl
   140005576:	mov    dl,al
   140005578:	neg    dl
   14000557a:	sbb    eax,eax
   14000557c:	and    eax,0x3
   14000557f:	mov    DWORD PTR [rdi],eax
   140005581:	movzx  eax,WORD PTR [r8]
   140005585:	mov    DWORD PTR [rdi+0x4],eax
   140005588:	movzx  eax,WORD PTR [r8+0x2]
   14000558d:	mov    DWORD PTR [rdi+0xc],eax
   140005590:	mov    rax,r11
   140005593:	imul   QWORD PTR [r8+0x8]
   140005597:	mov    eax,r10d
   14000559a:	sub    rdx,QWORD PTR [r8+0x8]
   14000559e:	sar    rdx,0x17
   1400055a2:	mov    rcx,rdx
   1400055a5:	shr    rcx,0x3f
   1400055a9:	add    rdx,rcx
   1400055ac:	mul    edx
   1400055ae:	mov    eax,r9d
   1400055b1:	shr    edx,0xb
   1400055b4:	mul    edx
   1400055b6:	mov    rax,r11
   1400055b9:	shr    edx,0x4
   1400055bc:	mov    DWORD PTR [rdi+0x8],edx
   1400055bf:	imul   QWORD PTR [r8+0x10]
   1400055c3:	mov    eax,r10d
   1400055c6:	sub    rdx,QWORD PTR [r8+0x10]
   1400055ca:	sar    rdx,0x17
   1400055ce:	mov    rcx,rdx
   1400055d1:	shr    rcx,0x3f
   1400055d5:	add    rdx,rcx
   1400055d8:	mul    edx
   1400055da:	mov    eax,r9d
   1400055dd:	shr    edx,0xb
   1400055e0:	mul    edx
   1400055e2:	shr    edx,0x4
   1400055e5:	mov    DWORD PTR [rdi+0x14],edx
   1400055e8:	xor    ebx,ebx
   1400055ea:	test   r8,r8
   1400055ed:	je     0x1400055f8
   1400055ef:	mov    rcx,r8
   1400055f2:	call   QWORD PTR [rip+0x5bb0]        # 0x14000b1a8
   1400055f8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400055fd:	test   rcx,rcx
   140005600:	je     0x140005608
   140005602:	call   QWORD PTR [rip+0x5ba0]        # 0x14000b1a8
   140005608:	mov    eax,ebx
   14000560a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000560f:	add    rsp,0x40
   140005613:	pop    rdi
   140005614:	ret    
   140005615:	int3   
   140005616:	int3   
   140005617:	int3   
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	mov    QWORD PTR [rsp+0x8],rbx
   140005621:	push   rbp
   140005622:	push   rsi
   140005623:	push   rdi
   140005624:	push   r12
   140005626:	push   r13
   140005628:	push   r14
   14000562a:	push   r15
   14000562c:	lea    rbp,[rsp-0x7]
   140005631:	sub    rsp,0xc0
   140005638:	mov    rax,QWORD PTR [rip+0xb9c9]        # 0x140011008
   14000563f:	xor    rax,rsp
   140005642:	mov    QWORD PTR [rbp-0x1],rax
   140005646:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000564a:	mov    r10d,0x1
   140005650:	mov    rsi,QWORD PTR [rbp+0x77]
   140005654:	mov    ecx,r10d
   140005657:	mov    r15,QWORD PTR [rbp+0x6f]
   14000565b:	xor    eax,eax
   14000565d:	xor    ebx,ebx
   14000565f:	mov    QWORD PTR [rbp-0x1d],rax
   140005663:	mov    QWORD PTR [rbp-0x15],rax
   140005667:	lea    r12,[rdi+0x28]
   14000566b:	mov    QWORD PTR [rbp-0xd],rax
   14000566f:	lea    r11d,[r10+0x2]
   140005673:	mov    eax,ecx
   140005675:	mov    QWORD PTR [r12],rcx
   140005679:	mov    r13,rdx
   14000567c:	mov    QWORD PTR [rdi],rcx
   14000567f:	mov    QWORD PTR [rdi+0x10],rcx
   140005683:	mov    edx,r10d
   140005686:	mov    QWORD PTR [rdi+0x18],rbx
   14000568a:	mov    r14,r8
   14000568d:	mov    QWORD PTR [rdi+0x20],rcx
   140005691:	mov    r8d,r10d
   140005694:	mov    QWORD PTR [rdi+0x8],rcx
   140005698:	mov    r9d,r10d
   14000569b:	mov    QWORD PTR [rdi+0x30],rbx
   14000569f:	mov    eax,DWORD PTR [rsi]
   1400056a1:	mov    DWORD PTR [rbp-0x35],ecx
   1400056a4:	mov    DWORD PTR [rbp-0x39],edx
   1400056a7:	mov    DWORD PTR [rbp-0x2d],r10d
   1400056ab:	mov    DWORD PTR [rbp-0x31],r10d
   1400056af:	mov    DWORD PTR [rbp-0x21],ebx
   1400056b2:	test   eax,eax
   1400056b4:	je     0x1400056c7
   1400056b6:	dec    eax
   1400056b8:	cmp    eax,r11d
   1400056bb:	jbe    0x1400056cc
   1400056bd:	mov    DWORD PTR [rdi+0x4],0x80070057
   1400056c4:	mov    DWORD PTR [rdi],r11d
   1400056c7:	mov    DWORD PTR [rbp-0x35],ebx
   1400056ca:	mov    ecx,ebx
   1400056cc:	mov    eax,DWORD PTR [rsi+0x4]
   1400056cf:	test   eax,eax
   1400056d1:	je     0x1400056e5
   1400056d3:	dec    eax
   1400056d5:	cmp    eax,0xf
   1400056d8:	jbe    0x1400056ea
   1400056da:	mov    DWORD PTR [rdi+0xc],0x80070057
   1400056e1:	mov    DWORD PTR [rdi+0x8],r11d
   1400056e5:	mov    DWORD PTR [rbp-0x39],ebx
   1400056e8:	mov    edx,ebx
   1400056ea:	mov    eax,DWORD PTR [rsi+0x8]
   1400056ed:	test   eax,eax
   1400056ef:	je     0x140005705
   1400056f1:	dec    eax
   1400056f3:	cmp    eax,0x3e6
   1400056f8:	jbe    0x14000570b
   1400056fa:	mov    DWORD PTR [rdi+0x14],0x80070057
   140005701:	mov    DWORD PTR [rdi+0x10],r11d
   140005705:	mov    DWORD PTR [rbp-0x31],ebx
   140005708:	mov    r9d,ebx
   14000570b:	mov    eax,DWORD PTR [rsi+0xc]
   14000570e:	test   eax,eax
   140005710:	je     0x140005724
   140005712:	dec    eax
   140005714:	cmp    eax,0x17
   140005717:	jbe    0x14000572a
   140005719:	mov    DWORD PTR [rdi+0x24],0x80070057
   140005720:	mov    DWORD PTR [rdi+0x20],r11d
   140005724:	mov    DWORD PTR [rbp-0x2d],ebx
   140005727:	mov    r8d,ebx
   14000572a:	cmp    DWORD PTR [rsi+0x10],ebx
   14000572d:	mov    eax,r10d
   140005730:	cmove  eax,ebx
   140005733:	mov    DWORD PTR [rbp-0x29],eax
   140005736:	test   ecx,ecx
   140005738:	jne    0x140005748
   14000573a:	test   edx,edx
   14000573c:	jne    0x140005748
   14000573e:	test   r9d,r9d
   140005741:	jne    0x140005748
   140005743:	test   r8d,r8d
   140005746:	je     0x14000578c
   140005748:	lea    rcx,[rbp-0x21]
   14000574c:	call   0x140005470
   140005751:	mov    ebx,eax
   140005753:	test   eax,eax
   140005755:	je     0x14000577c
   140005757:	lea    rax,[rip+0x6aa2]        # 0x14000c200
   14000575e:	mov    QWORD PTR [rsp+0x30],rax
   140005763:	lea    rax,[rip+0x7246]        # 0x14000c9b0
   14000576a:	mov    QWORD PTR [rsp+0x28],rax
   14000576f:	mov    DWORD PTR [rsp+0x20],0x79d
   140005777:	jmp    0x1400058bf
   14000577c:	mov    ecx,DWORD PTR [rbp-0x35]
   14000577f:	xor    ebx,ebx
   140005781:	mov    edx,DWORD PTR [rbp-0x39]
   140005784:	lea    r10d,[rbx+0x1]
   140005788:	lea    r11d,[rbx+0x3]
   14000578c:	cmp    DWORD PTR [rip+0xc4de],ebx        # 0x140011c70
   140005792:	je     0x14000581d
   140005798:	mov    r8d,0x80550003
   14000579e:	test   ecx,ecx
   1400057a0:	je     0x1400057b1
   1400057a2:	cmp    DWORD PTR [rsi],r11d
   1400057a5:	jbe    0x1400057b1
   1400057a7:	mov    DWORD PTR [rdi],r11d
   1400057aa:	mov    DWORD PTR [rdi+0x4],r8d
   1400057ae:	mov    DWORD PTR [rbp-0x35],ebx
   1400057b1:	test   edx,edx
   1400057b3:	je     0x1400057c8
   1400057b5:	mov    eax,DWORD PTR [rbp-0x9]
   1400057b8:	cmp    DWORD PTR [rsi+0x4],eax
   1400057bb:	jbe    0x1400057c8
   1400057bd:	mov    DWORD PTR [rdi+0x8],r11d
   1400057c1:	mov    DWORD PTR [rdi+0xc],r8d
   1400057c5:	mov    DWORD PTR [rbp-0x39],ebx
   1400057c8:	mov    r9d,DWORD PTR [r15+0x10]
   1400057cc:	lea    rax,[rbp-0x29]
   1400057d0:	mov    QWORD PTR [rsp+0x30],r12
   1400057d5:	mov    r8d,r10d
   1400057d8:	mov    QWORD PTR [rsp+0x28],rax
   1400057dd:	mov    edx,r10d
   1400057e0:	mov    eax,DWORD PTR [rsi+0x10]
   1400057e3:	xor    ecx,ecx
   1400057e5:	mov    DWORD PTR [rsp+0x20],eax
   1400057e9:	call   0x140004284
   1400057ee:	mov    ebx,eax
   1400057f0:	test   eax,eax
   1400057f2:	je     0x1400058de
   1400057f8:	lea    rax,[rip+0x6a01]        # 0x14000c200
   1400057ff:	mov    QWORD PTR [rsp+0x30],rax
   140005804:	lea    rax,[rip+0x7015]        # 0x14000c820
   14000580b:	mov    QWORD PTR [rsp+0x28],rax
   140005810:	mov    DWORD PTR [rsp+0x20],0x7b8
   140005818:	jmp    0x1400058bf
   14000581d:	lea    rdx,[rip+0xc2dc]        # 0x140011b00
   140005824:	mov    rcx,r14
   140005827:	call   QWORD PTR [rip+0x5b5b]        # 0x14000b388
   14000582d:	test   eax,eax
   14000582f:	jne    0x1400058de
   140005835:	mov    QWORD PTR [rsp+0x78],rdi
   14000583a:	lea    rax,[rbp-0x29]
   14000583e:	mov    QWORD PTR [rsp+0x70],rax
   140005843:	xor    edx,edx
   140005845:	lea    rax,[rbp-0x31]
   140005849:	mov    r9,r13
   14000584c:	mov    QWORD PTR [rsp+0x68],rax
   140005851:	xor    r8d,r8d
   140005854:	lea    rax,[rbp-0x2d]
   140005858:	mov    QWORD PTR [rsp+0x60],rax
   14000585d:	lea    ecx,[rdx+0x1]
   140005860:	lea    rax,[rbp-0x39]
   140005864:	mov    QWORD PTR [rsp+0x58],rax
   140005869:	lea    rax,[rbp-0x35]
   14000586d:	mov    QWORD PTR [rsp+0x50],rax
   140005872:	lea    rax,[rbp-0x21]
   140005876:	mov    QWORD PTR [rsp+0x48],rbx
   14000587b:	mov    QWORD PTR [rsp+0x40],rbx
   140005880:	mov    QWORD PTR [rsp+0x38],rax
   140005885:	mov    QWORD PTR [rsp+0x30],rsi
   14000588a:	mov    QWORD PTR [rsp+0x28],r15
   14000588f:	mov    QWORD PTR [rsp+0x20],r14
   140005894:	call   0x140004fac
   140005899:	mov    ebx,eax
   14000589b:	test   eax,eax
   14000589d:	je     0x1400058dc
   14000589f:	lea    rax,[rip+0x695a]        # 0x14000c200
   1400058a6:	mov    QWORD PTR [rsp+0x30],rax
   1400058ab:	lea    rax,[rip+0x70be]        # 0x14000c970
   1400058b2:	mov    QWORD PTR [rsp+0x28],rax
   1400058b7:	mov    DWORD PTR [rsp+0x20],0x7d2
   1400058bf:	lea    r9,[rip+0x6a0a]        # 0x14000c2d0
   1400058c6:	mov    r8d,ebx
   1400058c9:	lea    rdx,[rip+0x6390]        # 0x14000bc60
   1400058d0:	mov    ecx,0x1
   1400058d5:	call   0x140005910
   1400058da:	jmp    0x1400058de
   1400058dc:	xor    ebx,ebx
   1400058de:	mov    eax,ebx
   1400058e0:	mov    rcx,QWORD PTR [rbp-0x1]
   1400058e4:	xor    rcx,rsp
   1400058e7:	call   0x140008aa0
   1400058ec:	mov    rbx,QWORD PTR [rsp+0x100]
   1400058f4:	add    rsp,0xc0
   1400058fb:	pop    r15
   1400058fd:	pop    r14
   1400058ff:	pop    r13
   140005901:	pop    r12
   140005903:	pop    rdi
   140005904:	pop    rsi
   140005905:	pop    rbp
   140005906:	ret    
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	mov    QWORD PTR [rsp+0x10],rdx
   140005915:	mov    QWORD PTR [rsp+0x18],r8
   14000591a:	mov    QWORD PTR [rsp+0x20],r9
   14000591f:	push   rbx
   140005920:	push   rsi
   140005921:	push   rdi
   140005922:	sub    rsp,0x430
   140005929:	mov    rax,QWORD PTR [rip+0xb6d8]        # 0x140011008
   140005930:	xor    rax,rsp
   140005933:	mov    QWORD PTR [rsp+0x420],rax
   14000593b:	xor    esi,esi
   14000593d:	mov    rbx,rdx
   140005940:	cmp    QWORD PTR [rip+0xc361],rsi        # 0x140011ca8
   140005947:	mov    edi,ecx
   140005949:	je     0x1400059b2
   14000594b:	xor    edx,edx
   14000594d:	mov    WORD PTR [rsp+0x20],si
   140005952:	mov    r8d,0x3fe
   140005958:	lea    rcx,[rsp+0x22]
   14000595d:	call   0x1400093b2
   140005962:	mov    r8,rbx
   140005965:	lea    r9,[rsp+0x460]
   14000596d:	mov    ebx,0x1ff
   140005972:	lea    rcx,[rsp+0x20]
   140005977:	mov    edx,ebx
   140005979:	call   QWORD PTR [rip+0x5a71]        # 0x14000b3f0
   14000597f:	test   eax,eax
   140005981:	js     0x1400059b2
   140005983:	cdqe   
   140005985:	cmp    rax,rbx
   140005988:	ja     0x1400059b2
   14000598a:	jne    0x140005994
   14000598c:	mov    WORD PTR [rsp+0x41e],si
   140005994:	mov    rbx,QWORD PTR [rip+0xc30d]        # 0x140011ca8
   14000599b:	test   rbx,rbx
   14000599e:	je     0x1400059b2
   1400059a0:	mov    rcx,rbx
   1400059a3:	call   QWORD PTR [rip+0x5bcf]        # 0x14000b578
   1400059a9:	lea    rdx,[rsp+0x20]
   1400059ae:	mov    ecx,edi
   1400059b0:	call   rbx
   1400059b2:	mov    rcx,QWORD PTR [rsp+0x420]
   1400059ba:	xor    rcx,rsp
   1400059bd:	call   0x140008aa0
   1400059c2:	add    rsp,0x430
   1400059c9:	pop    rdi
   1400059ca:	pop    rsi
   1400059cb:	pop    rbx
   1400059cc:	ret    
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	int3   
   1400059d1:	int3   
   1400059d2:	int3   
   1400059d3:	int3   
   1400059d4:	mov    r11,rsp
   1400059d7:	mov    QWORD PTR [r11+0x10],rbx
   1400059db:	mov    QWORD PTR [r11+0x18],rsi
   1400059df:	mov    QWORD PTR [r11+0x20],rdi
   1400059e3:	push   r14
   1400059e5:	sub    rsp,0x80
   1400059ec:	mov    edi,r9d
   1400059ef:	mov    esi,r8d
   1400059f2:	mov    r14d,edx
   1400059f5:	and    QWORD PTR [r11+0x8],0x0
   1400059fa:	and    QWORD PTR [r11-0x40],0x0
   1400059ff:	test   rcx,rcx
   140005a02:	jne    0x140005a2c
   140005a04:	mov    ebx,0xc000000d
   140005a09:	lea    rax,[rip+0x67f0]        # 0x14000c200
   140005a10:	mov    QWORD PTR [r11-0x58],rax
   140005a14:	lea    rax,[rip+0x6fcd]        # 0x14000c9e8
   140005a1b:	mov    QWORD PTR [r11-0x60],rax
   140005a1f:	mov    DWORD PTR [rsp+0x20],0x17
   140005a27:	jmp    0x140005b43
   140005a2c:	lea    rdx,[rsp+0x48]
   140005a31:	call   QWORD PTR [rip+0x5629]        # 0x14000b060
   140005a37:	test   eax,eax
   140005a39:	jne    0x140005a74
   140005a3b:	call   QWORD PTR [rip+0x569f]        # 0x14000b0e0
   140005a41:	movzx  ebx,ax
   140005a44:	or     ebx,0xc0070000
   140005a4a:	test   eax,eax
   140005a4c:	cmovle ebx,eax
   140005a4f:	lea    rax,[rip+0x67aa]        # 0x14000c200
   140005a56:	mov    QWORD PTR [rsp+0x30],rax
   140005a5b:	lea    rax,[rip+0x7006]        # 0x14000ca68
   140005a62:	mov    QWORD PTR [rsp+0x28],rax
   140005a67:	mov    DWORD PTR [rsp+0x20],0x1e
   140005a6f:	jmp    0x140005b43
   140005a74:	mov    rdx,QWORD PTR [rsp+0x48]
   140005a79:	lea    rcx,[rsp+0x60]
   140005a7e:	call   QWORD PTR [rip+0x5acc]        # 0x14000b550
   140005a84:	lea    r8,[rsp+0x90]
   140005a8c:	lea    rdx,[rip+0x83cd]        # 0x14000de60
   140005a93:	lea    rcx,[rip+0x6ffe]        # 0x14000ca98
   140005a9a:	call   0x1400085fc
   140005a9f:	mov    ebx,eax
   140005aa1:	test   eax,eax
   140005aa3:	je     0x140005ac7
   140005aa5:	lea    rax,[rip+0x6754]        # 0x14000c200
   140005aac:	mov    QWORD PTR [rsp+0x30],rax
   140005ab1:	lea    rax,[rip+0x7008]        # 0x14000cac0
   140005ab8:	mov    QWORD PTR [rsp+0x28],rax
   140005abd:	mov    DWORD PTR [rsp+0x20],0x28
   140005ac5:	jmp    0x140005b43
   140005ac7:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140005acc:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140005ad2:	mov    DWORD PTR [rsp+0x38],edi
   140005ad6:	mov    DWORD PTR [rsp+0x30],esi
   140005ada:	mov    DWORD PTR [rsp+0x28],r14d
   140005adf:	lea    rax,[rsp+0x70]
   140005ae4:	mov    QWORD PTR [rsp+0x20],rax
   140005ae9:	mov    r9,QWORD PTR [rsp+0x90]
   140005af1:	xor    r8d,r8d
   140005af4:	xor    edx,edx
   140005af6:	lea    rcx,[rip+0x8333]        # 0x14000de30
   140005afd:	call   QWORD PTR [rip+0x5665]        # 0x14000b168
   140005b03:	mov    rbx,rax
   140005b06:	mov    QWORD PTR [rsp+0x50],rax
   140005b0b:	mov    DWORD PTR [rsp+0x40],eax
   140005b0f:	jmp    0x140005b1f
   140005b11:	mov    ecx,eax
   140005b13:	call   QWORD PTR [rip+0x563f]        # 0x14000b158
   140005b19:	mov    ebx,eax
   140005b1b:	mov    DWORD PTR [rsp+0x40],eax
   140005b1f:	test   ebx,ebx
   140005b21:	je     0x140005b5e
   140005b23:	lea    rax,[rip+0x66d6]        # 0x14000c200
   140005b2a:	mov    QWORD PTR [rsp+0x30],rax
   140005b2f:	lea    rax,[rip+0x6fca]        # 0x14000cb00
   140005b36:	mov    QWORD PTR [rsp+0x28],rax
   140005b3b:	mov    DWORD PTR [rsp+0x20],0x3d
   140005b43:	lea    r9,[rip+0x6eb6]        # 0x14000ca00
   140005b4a:	mov    r8d,ebx
   140005b4d:	lea    rdx,[rip+0x610c]        # 0x14000bc60
   140005b54:	mov    ecx,0x1
   140005b59:	call   0x140005910
   140005b5e:	cmp    QWORD PTR [rsp+0x90],0x0
   140005b67:	je     0x140005b77
   140005b69:	lea    rcx,[rsp+0x90]
   140005b71:	call   QWORD PTR [rip+0x55d9]        # 0x14000b150
   140005b77:	mov    rcx,QWORD PTR [rsp+0x48]
   140005b7c:	test   rcx,rcx
   140005b7f:	je     0x140005b87
   140005b81:	call   QWORD PTR [rip+0x5541]        # 0x14000b0c8
   140005b87:	mov    eax,ebx
   140005b89:	lea    r11,[rsp+0x80]
   140005b91:	mov    rbx,QWORD PTR [r11+0x18]
   140005b95:	mov    rsi,QWORD PTR [r11+0x20]
   140005b99:	mov    rdi,QWORD PTR [r11+0x28]
   140005b9d:	mov    rsp,r11
   140005ba0:	pop    r14
   140005ba2:	ret    
   140005ba3:	int3   
   140005ba4:	int3   
   140005ba5:	int3   
   140005ba6:	int3   
   140005ba7:	int3   
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	mov    rax,rsp
   140005baf:	mov    QWORD PTR [rax+0x18],rbx
   140005bb3:	mov    QWORD PTR [rax+0x20],rsi
   140005bb7:	push   rdi
   140005bb8:	sub    rsp,0x50
   140005bbc:	mov    rdi,rdx
   140005bbf:	mov    rsi,rcx
   140005bc2:	and    QWORD PTR [rax+0x8],0x0
   140005bc7:	mov    DWORD PTR [rcx],0xffffffff
   140005bcd:	mov    DWORD PTR [rdx],0xffffffff
   140005bd3:	lea    r8,[rax+0x8]
   140005bd7:	lea    rdx,[rip+0x8282]        # 0x14000de60
   140005bde:	lea    rcx,[rip+0x6eb3]        # 0x14000ca98
   140005be5:	call   0x1400085fc
   140005bea:	mov    ebx,eax
   140005bec:	test   eax,eax
   140005bee:	je     0x140005c12
   140005bf0:	lea    rax,[rip+0x6609]        # 0x14000c200
   140005bf7:	mov    QWORD PTR [rsp+0x30],rax
   140005bfc:	lea    rax,[rip+0x6ebd]        # 0x14000cac0
   140005c03:	mov    QWORD PTR [rsp+0x28],rax
   140005c08:	mov    DWORD PTR [rsp+0x20],0x60
   140005c10:	jmp    0x140005c75
   140005c12:	mov    QWORD PTR [rsp+0x28],rdi
   140005c17:	mov    QWORD PTR [rsp+0x20],rsi
   140005c1c:	mov    r9,QWORD PTR [rsp+0x60]
   140005c21:	xor    r8d,r8d
   140005c24:	lea    edx,[r8+0x1]
   140005c28:	lea    rcx,[rip+0x8201]        # 0x14000de30
   140005c2f:	call   QWORD PTR [rip+0x5533]        # 0x14000b168
   140005c35:	mov    rbx,rax
   140005c38:	mov    QWORD PTR [rsp+0x68],rax
   140005c3d:	mov    DWORD PTR [rsp+0x40],eax
   140005c41:	jmp    0x140005c51
   140005c43:	mov    ecx,eax
   140005c45:	call   QWORD PTR [rip+0x550d]        # 0x14000b158
   140005c4b:	mov    ebx,eax
   140005c4d:	mov    DWORD PTR [rsp+0x40],eax
   140005c51:	test   ebx,ebx
   140005c53:	je     0x140005c90
   140005c55:	lea    rax,[rip+0x65a4]        # 0x14000c200
   140005c5c:	mov    QWORD PTR [rsp+0x30],rax
   140005c61:	lea    rax,[rip+0x6ed8]        # 0x14000cb40
   140005c68:	mov    QWORD PTR [rsp+0x28],rax
   140005c6d:	mov    DWORD PTR [rsp+0x20],0x73
   140005c75:	lea    r9,[rip+0x6d84]        # 0x14000ca00
   140005c7c:	mov    r8d,ebx
   140005c7f:	lea    rdx,[rip+0x5fda]        # 0x14000bc60
   140005c86:	mov    ecx,0x1
   140005c8b:	call   0x140005910
   140005c90:	cmp    QWORD PTR [rsp+0x60],0x0
   140005c96:	je     0x140005ca3
   140005c98:	lea    rcx,[rsp+0x60]
   140005c9d:	call   QWORD PTR [rip+0x54ad]        # 0x14000b150
   140005ca3:	mov    eax,ebx
   140005ca5:	mov    rbx,QWORD PTR [rsp+0x70]
   140005caa:	mov    rsi,QWORD PTR [rsp+0x78]
   140005caf:	add    rsp,0x50
   140005cb3:	pop    rdi
   140005cb4:	ret    
   140005cb5:	int3   
   140005cb6:	int3   
   140005cb7:	int3   
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	mov    QWORD PTR [rsp+0x18],rbx
   140005cc1:	push   rsi
   140005cc2:	push   rdi
   140005cc3:	push   r14
   140005cc5:	sub    rsp,0x50
   140005cc9:	mov    rdi,r8
   140005ccc:	mov    rsi,rdx
   140005ccf:	mov    r14,rcx
   140005cd2:	and    QWORD PTR [rsp+0x70],0x0
   140005cd8:	mov    DWORD PTR [rcx],0xffffffff
   140005cde:	mov    DWORD PTR [rdx],0xffffffff
   140005ce4:	and    DWORD PTR [r8],0x0
   140005ce8:	and    QWORD PTR [r8+0x8],0x0
   140005ced:	lea    r8,[rsp+0x70]
   140005cf2:	lea    rdx,[rip+0x8167]        # 0x14000de60
   140005cf9:	lea    rcx,[rip+0x6d98]        # 0x14000ca98
   140005d00:	call   0x1400085fc
   140005d05:	mov    ebx,eax
   140005d07:	test   eax,eax
   140005d09:	je     0x140005d2d
   140005d0b:	lea    rax,[rip+0x64ee]        # 0x14000c200
   140005d12:	mov    QWORD PTR [rsp+0x30],rax
   140005d17:	lea    rax,[rip+0x6da2]        # 0x14000cac0
   140005d1e:	mov    QWORD PTR [rsp+0x28],rax
   140005d23:	mov    DWORD PTR [rsp+0x20],0x93
   140005d2b:	jmp    0x140005d95
   140005d2d:	mov    QWORD PTR [rsp+0x30],rdi
   140005d32:	mov    QWORD PTR [rsp+0x28],rsi
   140005d37:	mov    QWORD PTR [rsp+0x20],r14
   140005d3c:	mov    r9,QWORD PTR [rsp+0x70]
   140005d41:	xor    r8d,r8d
   140005d44:	lea    edx,[r8+0x2]
   140005d48:	lea    rcx,[rip+0x80e1]        # 0x14000de30
   140005d4f:	call   QWORD PTR [rip+0x5413]        # 0x14000b168
   140005d55:	mov    rbx,rax
   140005d58:	mov    QWORD PTR [rsp+0x78],rax
   140005d5d:	mov    DWORD PTR [rsp+0x40],eax
   140005d61:	jmp    0x140005d71
   140005d63:	mov    ecx,eax
   140005d65:	call   QWORD PTR [rip+0x53ed]        # 0x14000b158
   140005d6b:	mov    ebx,eax
   140005d6d:	mov    DWORD PTR [rsp+0x40],eax
   140005d71:	test   ebx,ebx
   140005d73:	je     0x140005db0
   140005d75:	lea    rax,[rip+0x6484]        # 0x14000c200
   140005d7c:	mov    QWORD PTR [rsp+0x30],rax
   140005d81:	lea    rax,[rip+0x6e08]        # 0x14000cb90
   140005d88:	mov    QWORD PTR [rsp+0x28],rax
   140005d8d:	mov    DWORD PTR [rsp+0x20],0xa7
   140005d95:	lea    r9,[rip+0x6c64]        # 0x14000ca00
   140005d9c:	mov    r8d,ebx
   140005d9f:	lea    rdx,[rip+0x5eba]        # 0x14000bc60
   140005da6:	mov    ecx,0x1
   140005dab:	call   0x140005910
   140005db0:	cmp    QWORD PTR [rsp+0x70],0x0
   140005db6:	je     0x140005dc3
   140005db8:	lea    rcx,[rsp+0x70]
   140005dbd:	call   QWORD PTR [rip+0x538d]        # 0x14000b150
   140005dc3:	mov    eax,ebx
   140005dc5:	mov    rbx,QWORD PTR [rsp+0x80]
   140005dcd:	add    rsp,0x50
   140005dd1:	pop    r14
   140005dd3:	pop    rdi
   140005dd4:	pop    rsi
   140005dd5:	ret    
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	mov    r11,rsp
   140005ddf:	mov    QWORD PTR [r11+0x18],rbx
   140005de3:	mov    QWORD PTR [r11+0x20],rsi
   140005de7:	push   rdi
   140005de8:	sub    rsp,0x50
   140005dec:	xor    esi,esi
   140005dee:	xor    r8d,r8d
   140005df1:	mov    QWORD PTR [rdx],rsi
   140005df4:	test   ecx,ecx
   140005df6:	mov    rdi,rdx
   140005df9:	mov    QWORD PTR [r11+0x10],rsi
   140005dfd:	lea    rdx,[rip+0x6dcc]        # 0x14000cbd0
   140005e04:	mov    rcx,0xffffffff80000002
   140005e0b:	je     0x140005e62
   140005e0d:	lea    rax,[r11+0x10]
   140005e11:	mov    r9d,0x20019
   140005e17:	mov    QWORD PTR [r11-0x38],rax
   140005e1b:	call   QWORD PTR [rip+0x54df]        # 0x14000b300
   140005e21:	lea    ecx,[rax-0x2]
   140005e24:	cmp    ecx,0x1
   140005e27:	cmovbe eax,esi
   140005e2a:	movzx  ebx,ax
   140005e2d:	or     ebx,0xc0070000
   140005e33:	test   eax,eax
   140005e35:	cmovle ebx,eax
   140005e38:	test   ebx,ebx
   140005e3a:	je     0x140005ee4
   140005e40:	lea    rax,[rip+0x63b9]        # 0x14000c200
   140005e47:	mov    QWORD PTR [rsp+0x30],rax
   140005e4c:	lea    rax,[rip+0x6ddd]        # 0x14000cc30
   140005e53:	mov    QWORD PTR [rsp+0x28],rax
   140005e58:	mov    DWORD PTR [rsp+0x20],0x2a
   140005e60:	jmp    0x140005ec2
   140005e62:	lea    rax,[rsp+0x60]
   140005e67:	xor    r9d,r9d
   140005e6a:	mov    QWORD PTR [rsp+0x40],rax
   140005e6f:	lea    rax,[rsp+0x68]
   140005e74:	mov    QWORD PTR [rsp+0x38],rax
   140005e79:	mov    QWORD PTR [rsp+0x30],rsi
   140005e7e:	mov    DWORD PTR [rsp+0x28],0xf003f
   140005e86:	mov    DWORD PTR [rsp+0x20],esi
   140005e8a:	call   QWORD PTR [rip+0x5460]        # 0x14000b2f0
   140005e90:	test   eax,eax
   140005e92:	je     0x140005ee4
   140005e94:	movzx  ebx,ax
   140005e97:	or     ebx,0xc0070000
   140005e9d:	test   eax,eax
   140005e9f:	cmovle ebx,eax
   140005ea2:	lea    rax,[rip+0x6357]        # 0x14000c200
   140005ea9:	mov    QWORD PTR [rsp+0x30],rax
   140005eae:	lea    rax,[rip+0x6deb]        # 0x14000cca0
   140005eb5:	mov    QWORD PTR [rsp+0x28],rax
   140005eba:	mov    DWORD PTR [rsp+0x20],0x3c
   140005ec2:	lea    r9,[rip+0x6d87]        # 0x14000cc50
   140005ec9:	mov    r8d,ebx
   140005ecc:	lea    rdx,[rip+0x5d8d]        # 0x14000bc60
   140005ed3:	mov    ecx,0x1
   140005ed8:	call   0x140005910
   140005edd:	mov    rcx,QWORD PTR [rsp+0x68]
   140005ee2:	jmp    0x140005ef6
   140005ee4:	mov    rax,QWORD PTR [rsp+0x68]
   140005ee9:	mov    rcx,rsi
   140005eec:	mov    QWORD PTR [rdi],rax
   140005eef:	mov    ebx,esi
   140005ef1:	mov    QWORD PTR [rsp+0x68],rcx
   140005ef6:	test   rcx,rcx
   140005ef9:	je     0x140005f01
   140005efb:	call   QWORD PTR [rip+0x53f7]        # 0x14000b2f8
   140005f01:	mov    rsi,QWORD PTR [rsp+0x78]
   140005f06:	mov    eax,ebx
   140005f08:	mov    rbx,QWORD PTR [rsp+0x70]
   140005f0d:	add    rsp,0x50
   140005f11:	pop    rdi
   140005f12:	ret    
   140005f13:	int3   
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	mov    rax,rsp
   140005f1f:	mov    QWORD PTR [rax+0x18],r8
   140005f23:	mov    QWORD PTR [rax+0x10],rdx
   140005f27:	mov    QWORD PTR [rax+0x8],rcx
   140005f2b:	push   rbp
   140005f2c:	push   rbx
   140005f2d:	push   rsi
   140005f2e:	push   rdi
   140005f2f:	push   r12
   140005f31:	push   r13
   140005f33:	push   r14
   140005f35:	push   r15
   140005f37:	lea    rbp,[rax-0x5f]
   140005f3b:	sub    rsp,0xa8
   140005f42:	xor    esi,esi
   140005f44:	mov    r13,rcx
   140005f47:	mov    DWORD PTR [rbp-0x25],esi
   140005f4a:	mov    ebx,esi
   140005f4c:	mov    DWORD PTR [rbp-0x29],ebx
   140005f4f:	mov    r14d,esi
   140005f52:	mov    DWORD PTR [rbp+0x7f],esi
   140005f55:	mov    DWORD PTR [rbp-0x21],esi
   140005f58:	mov    WORD PTR [rbp-0x9],si
   140005f5c:	mov    DWORD PTR [rdx],esi
   140005f5e:	mov    QWORD PTR [r8],rsi
   140005f61:	test   rcx,rcx
   140005f64:	je     0x1400062d7
   140005f6a:	mov    QWORD PTR [rsp+0x58],rsi
   140005f6f:	lea    rax,[rbp-0x21]
   140005f73:	mov    QWORD PTR [rsp+0x50],rsi
   140005f78:	xor    r9d,r9d
   140005f7b:	mov    QWORD PTR [rsp+0x48],rax
   140005f80:	xor    r8d,r8d
   140005f83:	lea    rax,[rbp+0x7f]
   140005f87:	xor    edx,edx
   140005f89:	mov    QWORD PTR [rsp+0x40],rax
   140005f8e:	lea    rax,[rbp-0x25]
   140005f92:	mov    QWORD PTR [rsp+0x38],rax
   140005f97:	mov    QWORD PTR [rsp+0x30],rsi
   140005f9c:	mov    QWORD PTR [rsp+0x28],rsi
   140005fa1:	mov    QWORD PTR [rsp+0x20],rsi
   140005fa6:	call   QWORD PTR [rip+0x5334]        # 0x14000b2e0
   140005fac:	test   eax,eax
   140005fae:	je     0x140005ffe
   140005fb0:	movzx  ebx,ax
   140005fb3:	lea    rsi,[rip+0x6246]        # 0x14000c200
   140005fba:	or     ebx,0xc0070000
   140005fc0:	mov    QWORD PTR [rsp+0x30],rsi
   140005fc5:	test   eax,eax
   140005fc7:	cmovle ebx,eax
   140005fca:	lea    rax,[rip+0x6cef]        # 0x14000ccc0
   140005fd1:	mov    QWORD PTR [rsp+0x28],rax
   140005fd6:	mov    r8d,ebx
   140005fd9:	mov    DWORD PTR [rsp+0x20],0x1f0
   140005fe1:	mov    ecx,0x1
   140005fe6:	lea    r9,[rip+0x6c63]        # 0x14000cc50
   140005fed:	lea    rdx,[rip+0x5c6c]        # 0x14000bc60
   140005ff4:	call   0x140005910
   140005ff9:	jmp    0x1400062d7
   140005ffe:	mov    eax,DWORD PTR [rbp-0x25]
   140006001:	test   eax,eax
   140006003:	je     0x1400062d7
   140006009:	mov    edx,eax
   14000600b:	xor    ecx,ecx
   14000600d:	shl    rdx,0x5
   140006011:	call   QWORD PTR [rip+0x5259]        # 0x14000b270
   140006017:	mov    r14,rax
   14000601a:	test   rax,rax
   14000601d:	jne    0x14000604a
   14000601f:	lea    rsi,[rip+0x61da]        # 0x14000c200
   140006026:	mov    r8d,0xc0000017
   14000602c:	mov    QWORD PTR [rsp+0x30],rsi
   140006031:	lea    rcx,[rip+0x5c88]        # 0x14000bcc0
   140006038:	mov    QWORD PTR [rsp+0x28],rcx
   14000603d:	mov    ebx,r8d
   140006040:	mov    DWORD PTR [rsp+0x20],0x1fe
   140006048:	jmp    0x140005fe1
   14000604a:	mov    eax,DWORD PTR [rbp+0x7f]
   14000604d:	mov    edi,0x1
   140006052:	add    eax,edi
   140006054:	mov    edx,eax
   140006056:	add    rdx,rdx
   140006059:	mov    DWORD PTR [rbp+0x7f],eax
   14000605c:	lea    r12d,[rdi+0x3f]
   140006060:	mov    ecx,r12d
   140006063:	call   QWORD PTR [rip+0x5207]        # 0x14000b270
   140006069:	mov    r15,rax
   14000606c:	test   rax,rax
   14000606f:	jne    0x1400060a1
   140006071:	lea    rcx,[rip+0x5c48]        # 0x14000bcc0
   140006078:	mov    r8d,0xc0000017
   14000607e:	lea    rsi,[rip+0x617b]        # 0x14000c200
   140006085:	mov    ebx,r8d
   140006088:	mov    QWORD PTR [rsp+0x30],rsi
   14000608d:	mov    QWORD PTR [rsp+0x28],rcx
   140006092:	mov    ecx,edi
   140006094:	mov    DWORD PTR [rsp+0x20],0x207
   14000609c:	jmp    0x140005fe6
   1400060a1:	mov    edx,DWORD PTR [rbp-0x21]
   1400060a4:	mov    ecx,r12d
   1400060a7:	call   QWORD PTR [rip+0x51c3]        # 0x14000b270
   1400060ad:	mov    r12,rax
   1400060b0:	test   rax,rax
   1400060b3:	jne    0x1400060e3
   1400060b5:	lea    rsi,[rip+0x6144]        # 0x14000c200
   1400060bc:	mov    r8d,0xc0000017
   1400060c2:	mov    QWORD PTR [rsp+0x30],rsi
   1400060c7:	lea    rcx,[rip+0x5bf2]        # 0x14000bcc0
   1400060ce:	mov    QWORD PTR [rsp+0x28],rcx
   1400060d3:	mov    ebx,r8d
   1400060d6:	mov    DWORD PTR [rsp+0x20],0x20f
   1400060de:	jmp    0x140006295
   1400060e3:	mov    ecx,esi
   1400060e5:	mov    DWORD PTR [rbp-0x19],ecx
   1400060e8:	cmp    DWORD PTR [rbp-0x25],esi
   1400060eb:	jbe    0x1400062ae
   1400060f1:	lea    rsi,[rip+0x6108]        # 0x14000c200
   1400060f8:	xor    edx,edx
   1400060fa:	mov    eax,DWORD PTR [rbp+0x7f]
   1400060fd:	lea    r9,[rbp-0x1d]
   140006101:	mov    DWORD PTR [rbp-0x1d],eax
   140006104:	mov    r8,r15
   140006107:	mov    eax,DWORD PTR [rbp-0x21]
   14000610a:	mov    DWORD PTR [rbp-0x15],eax
   14000610d:	lea    rax,[rbp-0x15]
   140006111:	mov    QWORD PTR [rsp+0x38],rax
   140006116:	lea    rax,[rbp-0x11]
   14000611a:	mov    QWORD PTR [rsp+0x30],r12
   14000611f:	mov    QWORD PTR [rsp+0x28],rax
   140006124:	mov    QWORD PTR [rsp+0x20],rdx
   140006129:	mov    WORD PTR [rbp-0x9],dx
   14000612d:	mov    edx,ecx
   14000612f:	mov    rcx,r13
   140006132:	call   QWORD PTR [rip+0x51b0]        # 0x14000b2e8
   140006138:	xor    ecx,ecx
   14000613a:	test   eax,eax
   14000613c:	jne    0x1400062f8
   140006142:	mov    eax,DWORD PTR [rbp-0x1d]
   140006145:	mov    WORD PTR [r15+rax*2],cx
   14000614a:	mov    rcx,r15
   14000614d:	call   QWORD PTR [rip+0x52ad]        # 0x14000b400
   140006153:	xor    edx,edx
   140006155:	mov    r13d,eax
   140006158:	test   eax,eax
   14000615a:	jg     0x140006197
   14000615c:	lea    rax,[rip+0x6bc5]        # 0x14000cd28
   140006163:	mov    QWORD PTR [rsp+0x30],r15
   140006168:	mov    QWORD PTR [rsp+0x28],rax
   14000616d:	lea    r9,[rip+0x6adc]        # 0x14000cc50
   140006174:	mov    r8d,0xc000000d
   14000617a:	mov    DWORD PTR [rsp+0x20],0x230
   140006182:	lea    rdx,[rip+0x5ad7]        # 0x14000bc60
   140006189:	mov    ecx,edi
   14000618b:	call   0x140005910
   140006190:	xor    edx,edx
   140006192:	jmp    0x140006263
   140006197:	mov    WORD PTR [rbp-0x9],dx
   14000619b:	cmp    DWORD PTR [rbp-0x15],edx
   14000619e:	je     0x1400061f2
   1400061a0:	cmp    DWORD PTR [rbp-0x11],0x4
   1400061a4:	je     0x1400061e2
   1400061a6:	mov    ecx,0x80070057
   1400061ab:	mov    QWORD PTR [rsp+0x30],rsi
   1400061b0:	lea    rax,[rip+0x6b31]        # 0x14000cce8
   1400061b7:	mov    ebx,ecx
   1400061b9:	mov    r8d,ecx
   1400061bc:	mov    QWORD PTR [rsp+0x28],rax
   1400061c1:	mov    ecx,edi
   1400061c3:	mov    DWORD PTR [rsp+0x20],0x1b1
   1400061cb:	lea    r9,[rip+0x6a7e]        # 0x14000cc50
   1400061d2:	lea    rdx,[rip+0x5a87]        # 0x14000bc60
   1400061d9:	call   0x140005910
   1400061de:	xor    edx,edx
   1400061e0:	jmp    0x1400061f4
   1400061e2:	mov    eax,0x13
   1400061e7:	mov    WORD PTR [rbp-0x9],ax
   1400061eb:	mov    eax,DWORD PTR [r12]
   1400061ef:	mov    DWORD PTR [rbp-0x1],eax
   1400061f2:	mov    ebx,edx
   1400061f4:	mov    eax,ebx
   1400061f6:	btr    ebx,0x1c
   1400061fa:	bts    ebx,0x1e
   1400061fe:	test   eax,eax
   140006200:	cmove  ebx,edx
   140006203:	cmp    ebx,0xc0070057
   140006209:	je     0x140006260
   14000620b:	test   ebx,ebx
   14000620d:	jne    0x140006279
   14000620f:	cmp    r13d,0x5
   140006213:	je     0x14000621b
   140006215:	cmp    r13d,0x8
   140006219:	jne    0x140006232
   14000621b:	mov    eax,0xb
   140006220:	mov    WORD PTR [rbp-0x9],ax
   140006224:	mov    eax,edx
   140006226:	sub    eax,DWORD PTR [rbp-0x1]
   140006229:	neg    eax
   14000622b:	sbb    ax,ax
   14000622e:	mov    WORD PTR [rbp-0x1],ax
   140006232:	mov    ebx,DWORD PTR [rbp-0x29]
   140006235:	movups xmm0,XMMWORD PTR [rbp-0x9]
   140006239:	mov    eax,ebx
   14000623b:	mov    WORD PTR [rbp-0x9],dx
   14000623f:	movsd  xmm1,QWORD PTR [rbp+0x7]
   140006244:	shl    rax,0x5
   140006248:	add    ebx,edi
   14000624a:	mov    DWORD PTR [rbp-0x29],ebx
   14000624d:	movups XMMWORD PTR [rax+r14*1+0x8],xmm0
   140006253:	mov    DWORD PTR [rax+r14*1],r13d
   140006257:	movsd  QWORD PTR [rax+r14*1+0x18],xmm1
   14000625e:	jmp    0x140006263
   140006260:	mov    ebx,DWORD PTR [rbp-0x29]
   140006263:	mov    ecx,DWORD PTR [rbp-0x19]
   140006266:	add    ecx,edi
   140006268:	mov    DWORD PTR [rbp-0x19],ecx
   14000626b:	cmp    ecx,DWORD PTR [rbp-0x25]
   14000626e:	jae    0x1400062ac
   140006270:	mov    r13,QWORD PTR [rbp+0x67]
   140006274:	jmp    0x1400060fa
   140006279:	mov    QWORD PTR [rsp+0x30],r15
   14000627e:	lea    rax,[rip+0x6acb]        # 0x14000cd50
   140006285:	mov    QWORD PTR [rsp+0x28],rax
   14000628a:	mov    DWORD PTR [rsp+0x20],0x23e
   140006292:	mov    r8d,ebx
   140006295:	lea    r9,[rip+0x69b4]        # 0x14000cc50
   14000629c:	mov    ecx,edi
   14000629e:	lea    rdx,[rip+0x59bb]        # 0x14000bc60
   1400062a5:	call   0x140005910
   1400062aa:	jmp    0x1400062c0
   1400062ac:	xor    esi,esi
   1400062ae:	mov    rax,QWORD PTR [rbp+0x6f]
   1400062b2:	mov    DWORD PTR [rax],ebx
   1400062b4:	mov    ebx,esi
   1400062b6:	mov    rax,QWORD PTR [rbp+0x77]
   1400062ba:	mov    QWORD PTR [rax],r14
   1400062bd:	mov    r14,rsi
   1400062c0:	mov    rcx,r15
   1400062c3:	call   QWORD PTR [rip+0x4dff]        # 0x14000b0c8
   1400062c9:	test   r12,r12
   1400062cc:	je     0x1400062d7
   1400062ce:	mov    rcx,r12
   1400062d1:	call   QWORD PTR [rip+0x4df1]        # 0x14000b0c8
   1400062d7:	mov    ecx,DWORD PTR [rbp-0x29]
   1400062da:	mov    rdx,r14
   1400062dd:	call   0x14000632c
   1400062e2:	mov    eax,ebx
   1400062e4:	add    rsp,0xa8
   1400062eb:	pop    r15
   1400062ed:	pop    r14
   1400062ef:	pop    r13
   1400062f1:	pop    r12
   1400062f3:	pop    rdi
   1400062f4:	pop    rsi
   1400062f5:	pop    rbx
   1400062f6:	pop    rbp
   1400062f7:	ret    
   1400062f8:	movzx  ebx,ax
   1400062fb:	or     ebx,0xc0070000
   140006301:	mov    QWORD PTR [rsp+0x30],rsi
   140006306:	test   eax,eax
   140006308:	cmovle ebx,eax
   14000630b:	lea    rax,[rip+0x69f6]        # 0x14000cd08
   140006312:	mov    QWORD PTR [rsp+0x28],rax
   140006317:	mov    DWORD PTR [rsp+0x20],0x228
   14000631f:	jmp    0x140006292
   140006324:	int3   
   140006325:	int3   
   140006326:	int3   
   140006327:	int3   
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	sub    rsp,0x28
   140006330:	xor    r10d,r10d
   140006333:	test   rdx,rdx
   140006336:	je     0x140006374
   140006338:	test   ecx,ecx
   14000633a:	je     0x14000636b
   14000633c:	lea    r8,[rdx+0x8]
   140006340:	mov    r9d,ecx
   140006343:	test   r8,r8
   140006346:	je     0x140006361
   140006348:	cmp    WORD PTR [r8],0x2
   14000634d:	jb     0x140006361
   14000634f:	movzx  eax,WORD PTR [r8]
   140006353:	add    eax,0xfffffff5
   140006356:	test   eax,0xfffffff7
   14000635b:	jne    0x140006361
   14000635d:	mov    WORD PTR [r8],r10w
   140006361:	add    r8,0x20
   140006365:	sub    r9,0x1
   140006369:	jne    0x140006343
   14000636b:	mov    rcx,rdx
   14000636e:	call   QWORD PTR [rip+0x4d54]        # 0x14000b0c8
   140006374:	add    rsp,0x28
   140006378:	ret    
   140006379:	int3   
   14000637a:	int3   
   14000637b:	int3   
   14000637c:	int3   
   14000637d:	int3   
   14000637e:	int3   
   14000637f:	int3   
   140006380:	mov    r11,rsp
   140006383:	mov    QWORD PTR [r11+0x10],rbx
   140006387:	mov    QWORD PTR [r11+0x20],rbp
   14000638b:	push   rsi
   14000638c:	push   rdi
   14000638d:	push   r14
   14000638f:	sub    rsp,0x60
   140006393:	mov    rax,QWORD PTR [rip+0xac6e]        # 0x140011008
   14000639a:	xor    rax,rsp
   14000639d:	mov    QWORD PTR [rsp+0x58],rax
   1400063a2:	xor    ebp,ebp
   1400063a4:	mov    r14,r8
   1400063a7:	mov    rsi,rcx
   1400063aa:	mov    edi,0x1
   1400063af:	test   rcx,rcx
   1400063b2:	jne    0x1400063de
   1400063b4:	lea    rdx,[rip+0x5e45]        # 0x14000c200
   1400063bb:	mov    ebx,0xc00000e5
   1400063c0:	mov    QWORD PTR [r11-0x48],rdx
   1400063c4:	lea    rax,[rip+0x69ad]        # 0x14000cd78
   1400063cb:	mov    QWORD PTR [r11-0x50],rax
   1400063cf:	mov    ecx,edi
   1400063d1:	mov    DWORD PTR [rsp+0x20],0x285
   1400063d9:	jmp    0x140006496
   1400063de:	dec    edi
   1400063e0:	lea    r8,[rip+0x69c9]        # 0x14000cdb0
   1400063e7:	mov    edx,0xb
   1400063ec:	lea    rcx,[rsp+0x40]
   1400063f1:	mov    r9d,DWORD PTR [r14+rdi*4]
   1400063f5:	call   0x140007064
   1400063fa:	mov    ebx,eax
   1400063fc:	test   eax,eax
   1400063fe:	jne    0x140006469
   140006400:	lea    rdx,[rsp+0x40]
   140006405:	mov    rcx,rsi
   140006408:	call   QWORD PTR [rip+0x4efa]        # 0x14000b308
   14000640e:	mov    ecx,eax
   140006410:	add    eax,0xfffffffe
   140006413:	cmp    eax,0x1
   140006416:	cmovbe ecx,ebp
   140006419:	test   ecx,ecx
   14000641b:	jne    0x140006428
   14000641d:	test   edi,edi
   14000641f:	jne    0x1400063de
   140006421:	mov    ebx,ebp
   140006423:	jmp    0x1400064ac
   140006428:	movzx  ebx,cx
   14000642b:	lea    rdx,[rip+0x5dce]        # 0x14000c200
   140006432:	or     ebx,0xc0070000
   140006438:	lea    rax,[rsp+0x40]
   14000643d:	test   ecx,ecx
   14000643f:	cmovle ebx,ecx
   140006442:	lea    rcx,[rsp+0x40]
   140006447:	test   rcx,rcx
   14000644a:	cmove  rax,rdx
   14000644e:	mov    QWORD PTR [rsp+0x30],rax
   140006453:	lea    rax,[rip+0x6986]        # 0x14000cde0
   14000645a:	mov    QWORD PTR [rsp+0x28],rax
   14000645f:	mov    DWORD PTR [rsp+0x20],0x298
   140006467:	jmp    0x140006491
   140006469:	lea    rdx,[rip+0x5d90]        # 0x14000c200
   140006470:	btr    ebx,0x1c
   140006474:	mov    QWORD PTR [rsp+0x30],rdx
   140006479:	lea    rax,[rip+0x6938]        # 0x14000cdb8
   140006480:	mov    QWORD PTR [rsp+0x28],rax
   140006485:	bts    ebx,0x1e
   140006489:	mov    DWORD PTR [rsp+0x20],0x28e
   140006491:	mov    ecx,0x1
   140006496:	lea    r9,[rip+0x67b3]        # 0x14000cc50
   14000649d:	mov    r8d,ebx
   1400064a0:	lea    rdx,[rip+0x57b9]        # 0x14000bc60
   1400064a7:	call   0x140005910
   1400064ac:	mov    eax,ebx
   1400064ae:	mov    rcx,QWORD PTR [rsp+0x58]
   1400064b3:	xor    rcx,rsp
   1400064b6:	call   0x140008aa0
   1400064bb:	lea    r11,[rsp+0x60]
   1400064c0:	mov    rbx,QWORD PTR [r11+0x28]
   1400064c4:	mov    rbp,QWORD PTR [r11+0x38]
   1400064c8:	mov    rsp,r11
   1400064cb:	pop    r14
   1400064cd:	pop    rdi
   1400064ce:	pop    rsi
   1400064cf:	ret    
   1400064d0:	int3   
   1400064d1:	int3   
   1400064d2:	int3   
   1400064d3:	int3   
   1400064d4:	int3   
   1400064d5:	int3   
   1400064d6:	int3   
   1400064d7:	int3   
   1400064d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400064dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400064e2:	push   rdi
   1400064e3:	sub    rsp,0x40
   1400064e7:	mov    rdi,QWORD PTR [rsp+0x70]
   1400064ec:	xor    ebx,ebx
   1400064ee:	mov    rsi,QWORD PTR [rsp+0x78]
   1400064f3:	mov    r11,r9
   1400064f6:	mov    DWORD PTR [r9],ebx
   1400064f9:	mov    r10d,ecx
   1400064fc:	mov    QWORD PTR [r8+0xc],rbx
   140006500:	mov    r9d,ebx
   140006503:	mov    DWORD PTR [rdi],ebx
   140006505:	mov    DWORD PTR [rsi],ebx
   140006507:	mov    QWORD PTR [r8],rbx
   14000650a:	mov    DWORD PTR [r8+0x8],ebx
   14000650e:	test   ecx,ecx
   140006510:	je     0x14000665c
   140006516:	movzx  eax,WORD PTR [rdx+0x8]
   14000651a:	cmp    eax,0x2
   14000651d:	jb     0x1400065b1
   140006523:	cmp    eax,0x13
   140006526:	jne    0x14000652d
   140006528:	mov    ecx,DWORD PTR [rdx+0x10]
   14000652b:	jmp    0x140006548
   14000652d:	cmp    eax,0xb
   140006530:	jne    0x14000661c
   140006536:	cmp    DWORD PTR [rdx],0x5
   140006539:	je     0x140006544
   14000653b:	cmp    DWORD PTR [rdx],0x8
   14000653e:	jne    0x1400065c6
   140006544:	movsx  ecx,WORD PTR [rdx+0x10]
   140006548:	mov    eax,DWORD PTR [rdx]
   14000654a:	cmp    eax,0x9
   14000654d:	jae    0x1400065f1
   140006553:	sub    eax,0x1
   140006556:	je     0x1400065ae
   140006558:	sub    eax,0x1
   14000655b:	je     0x1400065a8
   14000655d:	sub    eax,0x1
   140006560:	je     0x1400065a2
   140006562:	sub    eax,0x1
   140006565:	je     0x14000659c
   140006567:	sub    eax,0x1
   14000656a:	je     0x14000658f
   14000656c:	sub    eax,0x1
   14000656f:	je     0x14000658a
   140006571:	sub    eax,0x1
   140006574:	je     0x140006586
   140006576:	cmp    eax,0x1
   140006579:	jne    0x1400065b1
   14000657b:	mov    eax,ebx
   14000657d:	test   ecx,ecx
   14000657f:	setne  al
   140006582:	mov    DWORD PTR [rsi],eax
   140006584:	jmp    0x1400065b1
   140006586:	mov    DWORD PTR [rdi],ecx
   140006588:	jmp    0x1400065b1
   14000658a:	mov    DWORD PTR [r11],ecx
   14000658d:	jmp    0x1400065b1
   14000658f:	mov    eax,ebx
   140006591:	test   ecx,ecx
   140006593:	setne  al
   140006596:	mov    DWORD PTR [r8+0x10],eax
   14000659a:	jmp    0x1400065b1
   14000659c:	mov    DWORD PTR [r8+0xc],ecx
   1400065a0:	jmp    0x1400065b1
   1400065a2:	mov    DWORD PTR [r8+0x8],ecx
   1400065a6:	jmp    0x1400065b1
   1400065a8:	mov    DWORD PTR [r8+0x4],ecx
   1400065ac:	jmp    0x1400065b1
   1400065ae:	mov    DWORD PTR [r8],ecx
   1400065b1:	inc    r9d
   1400065b4:	add    rdx,0x20
   1400065b8:	cmp    r9d,r10d
   1400065bb:	jae    0x14000665c
   1400065c1:	jmp    0x140006516
   1400065c6:	lea    rax,[rip+0x5c33]        # 0x14000c200
   1400065cd:	mov    r8d,0xc000000d
   1400065d3:	mov    QWORD PTR [rsp+0x30],rax
   1400065d8:	mov    ebx,r8d
   1400065db:	lea    rax,[rip+0x681e]        # 0x14000ce00
   1400065e2:	mov    QWORD PTR [rsp+0x28],rax
   1400065e7:	mov    DWORD PTR [rsp+0x20],0x2d0
   1400065ef:	jmp    0x140006644
   1400065f1:	lea    rax,[rip+0x5c08]        # 0x14000c200
   1400065f8:	mov    r8d,0xc000000d
   1400065fe:	mov    QWORD PTR [rsp+0x30],rax
   140006603:	mov    ebx,r8d
   140006606:	lea    rax,[rip+0x6853]        # 0x14000ce60
   14000660d:	mov    QWORD PTR [rsp+0x28],rax
   140006612:	mov    DWORD PTR [rsp+0x20],0x2de
   14000661a:	jmp    0x140006644
   14000661c:	lea    rax,[rip+0x5bdd]        # 0x14000c200
   140006623:	mov    ebx,0xc00000bb
   140006628:	mov    QWORD PTR [rsp+0x30],rax
   14000662d:	mov    r8d,ebx
   140006630:	lea    rax,[rip+0x67f9]        # 0x14000ce30
   140006637:	mov    QWORD PTR [rsp+0x28],rax
   14000663c:	mov    DWORD PTR [rsp+0x20],0x2d8
   140006644:	lea    r9,[rip+0x6605]        # 0x14000cc50
   14000664b:	mov    ecx,0x1
   140006650:	lea    rdx,[rip+0x5609]        # 0x14000bc60
   140006657:	call   0x140005910
   14000665c:	mov    rsi,QWORD PTR [rsp+0x58]
   140006661:	mov    eax,ebx
   140006663:	mov    rbx,QWORD PTR [rsp+0x50]
   140006668:	add    rsp,0x40
   14000666c:	pop    rdi
   14000666d:	ret    
   14000666e:	int3   
   14000666f:	int3   
   140006670:	int3   
   140006671:	int3   
   140006672:	int3   
   140006673:	int3   
   140006674:	mov    QWORD PTR [rsp+0x10],rbx
   140006679:	push   rbp
   14000667a:	mov    rbp,rsp
   14000667d:	sub    rsp,0x70
   140006681:	mov    rax,QWORD PTR [rip+0xa980]        # 0x140011008
   140006688:	xor    rax,rsp
   14000668b:	mov    QWORD PTR [rbp-0x8],rax
   14000668f:	xor    eax,eax
   140006691:	mov    QWORD PTR [rbp-0x28],0x7
   140006699:	mov    QWORD PTR [rbp-0x1c],rax
   14000669d:	lea    r8,[rbp-0x30]
   1400066a1:	mov    QWORD PTR [rbp-0x14],rax
   1400066a5:	lea    rdx,[rbp-0x20]
   1400066a9:	mov    rax,QWORD PTR [rbp-0x28]
   1400066ad:	xor    ebx,ebx
   1400066af:	mov    QWORD PTR [rbp-0x18],rax
   1400066b3:	mov    DWORD PTR [rbp-0x30],ebx
   1400066b6:	mov    QWORD PTR [rbp-0x20],0x1
   1400066be:	mov    DWORD PTR [rbp-0x10],ebx
   1400066c1:	call   QWORD PTR [rip+0x4cb1]        # 0x14000b378
   1400066c7:	test   eax,eax
   1400066c9:	jne    0x14000672b
   1400066cb:	call   QWORD PTR [rip+0x4a0f]        # 0x14000b0e0
   1400066d1:	test   eax,eax
   1400066d3:	jg     0x1400066df
   1400066d5:	call   QWORD PTR [rip+0x4a05]        # 0x14000b0e0
   1400066db:	mov    ebx,eax
   1400066dd:	jmp    0x1400066ee
   1400066df:	call   QWORD PTR [rip+0x49fb]        # 0x14000b0e0
   1400066e5:	movzx  ebx,ax
   1400066e8:	or     ebx,0xc0070000
   1400066ee:	lea    rax,[rip+0x5b0b]        # 0x14000c200
   1400066f5:	mov    r8d,ebx
   1400066f8:	mov    QWORD PTR [rsp+0x30],rax
   1400066fd:	lea    r9,[rip+0x654c]        # 0x14000cc50
   140006704:	lea    rax,[rip+0x67ed]        # 0x14000cef8
   14000670b:	mov    ecx,0x1
   140006710:	mov    QWORD PTR [rsp+0x28],rax
   140006715:	lea    rdx,[rip+0x5544]        # 0x14000bc60
   14000671c:	mov    DWORD PTR [rsp+0x20],0x348
   140006724:	call   0x140005910
   140006729:	jmp    0x14000673a
   14000672b:	mov    eax,DWORD PTR [rbp-0x30]
   14000672e:	neg    eax
   140006730:	sbb    ebx,ebx
   140006732:	not    ebx
   140006734:	and    ebx,0xc0000022
   14000673a:	mov    eax,ebx
   14000673c:	mov    rcx,QWORD PTR [rbp-0x8]
   140006740:	xor    rcx,rsp
   140006743:	call   0x140008aa0
   140006748:	mov    rbx,QWORD PTR [rsp+0x88]
   140006750:	add    rsp,0x70
   140006754:	pop    rbp
   140006755:	ret    
   140006756:	int3   
   140006757:	int3   
   140006758:	int3   
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	rex push rbx
   14000675e:	sub    rsp,0xb0
   140006765:	mov    rax,QWORD PTR [rip+0xa89c]        # 0x140011008
   14000676c:	xor    rax,rsp
   14000676f:	mov    QWORD PTR [rsp+0xa0],rax
   140006777:	and    DWORD PTR [rsp+0x40],0x0
   14000677c:	lea    r9,[rsp+0x44]
   140006781:	xor    edx,edx
   140006783:	mov    DWORD PTR [rsp+0x44],0x44
   14000678b:	mov    rbx,rcx
   14000678e:	lea    r8,[rsp+0x50]
   140006793:	lea    ecx,[rdx+0x1a]
   140006796:	call   QWORD PTR [rip+0x4c04]        # 0x14000b3a0
   14000679c:	test   eax,eax
   14000679e:	jne    0x1400067d6
   1400067a0:	call   QWORD PTR [rip+0x493a]        # 0x14000b0e0
   1400067a6:	movzx  ebx,ax
   1400067a9:	or     ebx,0xc0070000
   1400067af:	test   eax,eax
   1400067b1:	cmovle ebx,eax
   1400067b4:	lea    rax,[rip+0x5a45]        # 0x14000c200
   1400067bb:	mov    QWORD PTR [rsp+0x30],rax
   1400067c0:	lea    rax,[rip+0x6751]        # 0x14000cf18
   1400067c7:	mov    QWORD PTR [rsp+0x28],rax
   1400067cc:	mov    DWORD PTR [rsp+0x20],0x36d
   1400067d4:	jmp    0x140006821
   1400067d6:	lea    r8,[rsp+0x40]
   1400067db:	mov    rcx,rbx
   1400067de:	lea    rdx,[rsp+0x50]
   1400067e3:	call   QWORD PTR [rip+0x4b97]        # 0x14000b380
   1400067e9:	test   eax,eax
   1400067eb:	jne    0x14000683e
   1400067ed:	call   QWORD PTR [rip+0x48ed]        # 0x14000b0e0
   1400067f3:	movzx  ebx,ax
   1400067f6:	or     ebx,0xc0070000
   1400067fc:	test   eax,eax
   1400067fe:	cmovle ebx,eax
   140006801:	lea    rax,[rip+0x59f8]        # 0x14000c200
   140006808:	mov    QWORD PTR [rsp+0x30],rax
   14000680d:	lea    rax,[rip+0x672c]        # 0x14000cf40
   140006814:	mov    QWORD PTR [rsp+0x28],rax
   140006819:	mov    DWORD PTR [rsp+0x20],0x378
   140006821:	lea    r9,[rip+0x6428]        # 0x14000cc50
   140006828:	mov    r8d,ebx
   14000682b:	lea    rdx,[rip+0x542e]        # 0x14000bc60
   140006832:	mov    ecx,0x1
   140006837:	call   0x140005910
   14000683c:	jmp    0x14000684e
   14000683e:	mov    eax,DWORD PTR [rsp+0x40]
   140006842:	neg    eax
   140006844:	sbb    ebx,ebx
   140006846:	not    ebx
   140006848:	and    ebx,0xc0000022
   14000684e:	mov    eax,ebx
   140006850:	mov    rcx,QWORD PTR [rsp+0xa0]
   140006858:	xor    rcx,rsp
   14000685b:	call   0x140008aa0
   140006860:	add    rsp,0xb0
   140006867:	pop    rbx
   140006868:	ret    
   140006869:	int3   
   14000686a:	int3   
   14000686b:	int3   
   14000686c:	int3   
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	mov    QWORD PTR [rsp+0x18],rbx
   140006875:	mov    QWORD PTR [rsp+0x20],rsi
   14000687a:	push   rbp
   14000687b:	push   rdi
   14000687c:	push   r15
   14000687e:	lea    rbp,[rsp-0x47]
   140006883:	sub    rsp,0xb0
   14000688a:	mov    rax,QWORD PTR [rip+0xa777]        # 0x140011008
   140006891:	xor    rax,rsp
   140006894:	mov    QWORD PTR [rbp+0x37],rax
   140006898:	and    QWORD PTR [rbp-0x29],0x0
   14000689d:	mov    rdi,rdx
   1400068a0:	and    QWORD PTR [rbp-0x19],0x0
   1400068a5:	mov    rsi,rcx
   1400068a8:	mov    DWORD PTR [rbp-0x21],0x4
   1400068af:	test   rdx,rdx
   1400068b2:	je     0x1400068b7
   1400068b4:	and    DWORD PTR [rdx],0x0
   1400068b7:	mov    r15d,0x1
   1400068bd:	lea    r9,[rbp-0x29]
   1400068c1:	mov    r8b,r15b
   1400068c4:	mov    rcx,0xfffffffffffffffe
   1400068cb:	lea    edx,[r15+0x7]
   1400068cf:	call   QWORD PTR [rip+0x4c23]        # 0x14000b4f8
   1400068d5:	mov    ebx,eax
   1400068d7:	cmp    eax,0xc000007c
   1400068dc:	jne    0x1400069ba
   1400068e2:	lea    r8,[rbp-0x29]
   1400068e6:	or     rcx,0xffffffffffffffff
   1400068ea:	lea    edx,[r15+0x9]
   1400068ee:	call   QWORD PTR [rip+0x4bfc]        # 0x14000b4f0
   1400068f4:	mov    ebx,eax
   1400068f6:	test   eax,eax
   1400068f8:	je     0x14000691f
   1400068fa:	lea    rax,[rip+0x58ff]        # 0x14000c200
   140006901:	mov    QWORD PTR [rsp+0x30],rax
   140006906:	lea    rax,[rip+0x6643]        # 0x14000cf50
   14000690d:	mov    QWORD PTR [rsp+0x28],rax
   140006912:	mov    DWORD PTR [rsp+0x20],0x3a6
   14000691a:	jmp    0x140006a74
   14000691f:	and    QWORD PTR [rbp-0x1],0x0
   140006924:	lea    rax,[rbp+0x27]
   140006928:	and    DWORD PTR [rbp+0xf],0x0
   14000692c:	lea    r8,[rbp-0x9]
   140006930:	and    QWORD PTR [rbp+0x7],0x0
   140006935:	mov    ecx,0x2
   14000693a:	and    QWORD PTR [rbp+0x17],0x0
   14000693f:	xor    r9d,r9d
   140006942:	mov    QWORD PTR [rbp+0x1f],rax
   140006946:	lea    rax,[rbp-0x19]
   14000694a:	mov    QWORD PTR [rsp+0x28],rax
   14000694f:	mov    DWORD PTR [rsp+0x20],ecx
   140006953:	lea    edx,[rcx+0x6]
   140006956:	mov    DWORD PTR [rbp+0x2b],ecx
   140006959:	mov    rcx,QWORD PTR [rbp-0x29]
   14000695d:	mov    DWORD PTR [rbp+0x27],0xc
   140006964:	mov    WORD PTR [rbp+0x2f],0x0
   14000696a:	mov    DWORD PTR [rbp-0x9],0x30
   140006971:	call   QWORD PTR [rip+0x4b71]        # 0x14000b4e8
   140006977:	mov    ebx,eax
   140006979:	test   eax,eax
   14000697b:	je     0x1400069a2
   14000697d:	lea    rax,[rip+0x587c]        # 0x14000c200
   140006984:	mov    QWORD PTR [rsp+0x30],rax
   140006989:	lea    rax,[rip+0x65e8]        # 0x14000cf78
   140006990:	mov    QWORD PTR [rsp+0x28],rax
   140006995:	mov    DWORD PTR [rsp+0x20],0x3be
   14000699d:	jmp    0x140006a74
   1400069a2:	mov    rcx,QWORD PTR [rbp-0x29]
   1400069a6:	call   QWORD PTR [rip+0x4b74]        # 0x14000b520
   1400069ac:	mov    rax,QWORD PTR [rbp-0x19]
   1400069b0:	and    QWORD PTR [rbp-0x19],0x0
   1400069b5:	jmp    0x140006a48
   1400069ba:	test   eax,eax
   1400069bc:	jne    0x140006a54
   1400069c2:	mov    r9d,DWORD PTR [rbp-0x21]
   1400069c6:	lea    rax,[rbp-0x21]
   1400069ca:	mov    rcx,QWORD PTR [rbp-0x29]
   1400069ce:	lea    r8,[rbp-0x11]
   1400069d2:	mov    edx,0x9
   1400069d7:	mov    QWORD PTR [rsp+0x20],rax
   1400069dc:	call   QWORD PTR [rip+0x4afe]        # 0x14000b4e0
   1400069e2:	mov    ebx,eax
   1400069e4:	test   eax,eax
   1400069e6:	je     0x140006a0a
   1400069e8:	lea    rax,[rip+0x5811]        # 0x14000c200
   1400069ef:	mov    QWORD PTR [rsp+0x30],rax
   1400069f4:	lea    rax,[rip+0x65a5]        # 0x14000cfa0
   1400069fb:	mov    QWORD PTR [rsp+0x28],rax
   140006a00:	mov    DWORD PTR [rsp+0x20],0x3cd
   140006a08:	jmp    0x140006a74
   140006a0a:	mov    eax,DWORD PTR [rbp-0x11]
   140006a0d:	add    eax,0xfffffffe
   140006a10:	cmp    eax,r15d
   140006a13:	jbe    0x140006a3c
   140006a15:	lea    rax,[rip+0x57e4]        # 0x14000c200
   140006a1c:	mov    ebx,0xc0000022
   140006a21:	mov    QWORD PTR [rsp+0x30],rax
   140006a26:	lea    rax,[rip+0x65a3]        # 0x14000cfd0
   140006a2d:	mov    QWORD PTR [rsp+0x28],rax
   140006a32:	mov    DWORD PTR [rsp+0x20],0x3d3
   140006a3a:	jmp    0x140006a74
   140006a3c:	mov    rax,QWORD PTR [rbp-0x29]
   140006a40:	test   rdi,rdi
   140006a43:	je     0x140006a48
   140006a45:	mov    DWORD PTR [rdi],r15d
   140006a48:	and    QWORD PTR [rbp-0x29],0x0
   140006a4d:	xor    ebx,ebx
   140006a4f:	mov    QWORD PTR [rsi],rax
   140006a52:	jmp    0x140006a8d
   140006a54:	lea    rax,[rip+0x57a5]        # 0x14000c200
   140006a5b:	mov    QWORD PTR [rsp+0x30],rax
   140006a60:	lea    rax,[rip+0x65b1]        # 0x14000d018
   140006a67:	mov    QWORD PTR [rsp+0x28],rax
   140006a6c:	mov    DWORD PTR [rsp+0x20],0x3dd
   140006a74:	lea    r9,[rip+0x61d5]        # 0x14000cc50
   140006a7b:	mov    r8d,ebx
   140006a7e:	lea    rdx,[rip+0x51db]        # 0x14000bc60
   140006a85:	mov    ecx,r15d
   140006a88:	call   0x140005910
   140006a8d:	mov    rcx,QWORD PTR [rbp-0x29]
   140006a91:	test   rcx,rcx
   140006a94:	je     0x140006a9c
   140006a96:	call   QWORD PTR [rip+0x4a84]        # 0x14000b520
   140006a9c:	mov    rcx,QWORD PTR [rbp-0x19]
   140006aa0:	test   rcx,rcx
   140006aa3:	je     0x140006aab
   140006aa5:	call   QWORD PTR [rip+0x4a75]        # 0x14000b520
   140006aab:	mov    eax,ebx
   140006aad:	mov    rcx,QWORD PTR [rbp+0x37]
   140006ab1:	xor    rcx,rsp
   140006ab4:	call   0x140008aa0
   140006ab9:	lea    r11,[rsp+0xb0]
   140006ac1:	mov    rbx,QWORD PTR [r11+0x30]
   140006ac5:	mov    rsi,QWORD PTR [r11+0x38]
   140006ac9:	mov    rsp,r11
   140006acc:	pop    r15
   140006ace:	pop    rdi
   140006acf:	pop    rbp
   140006ad0:	ret    
   140006ad1:	int3   
   140006ad2:	int3   
   140006ad3:	int3   
   140006ad4:	int3   
   140006ad5:	int3   
   140006ad6:	int3   
   140006ad7:	int3   
   140006ad8:	mov    QWORD PTR [rsp+0x10],rbx
   140006add:	push   rdi
   140006ade:	sub    rsp,0x40
   140006ae2:	xor    edi,edi
   140006ae4:	mov    rbx,rcx
   140006ae7:	mov    QWORD PTR [rsp+0x50],rdi
   140006aec:	test   rcx,rcx
   140006aef:	jne    0x140006b4b
   140006af1:	xor    edx,edx
   140006af3:	lea    rcx,[rsp+0x50]
   140006af8:	call   0x140006870
   140006afd:	mov    ebx,eax
   140006aff:	test   eax,eax
   140006b01:	je     0x140006b43
   140006b03:	lea    rax,[rip+0x56f6]        # 0x14000c200
   140006b0a:	mov    r8d,ebx
   140006b0d:	mov    QWORD PTR [rsp+0x30],rax
   140006b12:	lea    r9,[rip+0x6137]        # 0x14000cc50
   140006b19:	lea    rax,[rip+0x5688]        # 0x14000c1a8
   140006b20:	mov    QWORD PTR [rsp+0x28],rax
   140006b25:	lea    rdx,[rip+0x5134]        # 0x14000bc60
   140006b2c:	lea    ecx,[rdi+0x1]
   140006b2f:	mov    DWORD PTR [rsp+0x20],0x3ff
   140006b37:	call   0x140005910
   140006b3c:	mov    rdi,QWORD PTR [rsp+0x50]
   140006b41:	jmp    0x140006ba4
   140006b43:	mov    rdi,QWORD PTR [rsp+0x50]
   140006b48:	mov    rbx,rdi
   140006b4b:	mov    rcx,rbx
   140006b4e:	call   0x14000675c
   140006b53:	test   eax,eax
   140006b55:	jns    0x140006ba2
   140006b57:	mov    rcx,rbx
   140006b5a:	call   0x140006674
   140006b5f:	mov    ebx,eax
   140006b61:	test   eax,eax
   140006b63:	je     0x140006ba2
   140006b65:	lea    rax,[rip+0x5694]        # 0x14000c200
   140006b6c:	mov    r8d,ebx
   140006b6f:	mov    QWORD PTR [rsp+0x30],rax
   140006b74:	lea    r9,[rip+0x60d5]        # 0x14000cc50
   140006b7b:	lea    rax,[rip+0x64be]        # 0x14000d040
   140006b82:	mov    ecx,0x1
   140006b87:	mov    QWORD PTR [rsp+0x28],rax
   140006b8c:	lea    rdx,[rip+0x50cd]        # 0x14000bc60
   140006b93:	mov    DWORD PTR [rsp+0x20],0x407
   140006b9b:	call   0x140005910
   140006ba0:	jmp    0x140006ba4
   140006ba2:	xor    ebx,ebx
   140006ba4:	test   rdi,rdi
   140006ba7:	je     0x140006bb2
   140006ba9:	mov    rcx,rdi
   140006bac:	call   QWORD PTR [rip+0x496e]        # 0x14000b520
   140006bb2:	mov    eax,ebx
   140006bb4:	mov    rbx,QWORD PTR [rsp+0x58]
   140006bb9:	add    rsp,0x40
   140006bbd:	pop    rdi
   140006bbe:	ret    
   140006bbf:	int3   
   140006bc0:	int3   
   140006bc1:	int3   
   140006bc2:	int3   
   140006bc3:	int3   
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	mov    QWORD PTR [rsp+0x10],rbx
   140006bcd:	push   rbp
   140006bce:	push   rdi
   140006bcf:	push   r14
   140006bd1:	sub    rsp,0x70
   140006bd5:	mov    rax,QWORD PTR [rip+0xa42c]        # 0x140011008
   140006bdc:	xor    rax,rsp
   140006bdf:	mov    QWORD PTR [rsp+0x60],rax
   140006be4:	mov    r14,rcx
   140006be7:	test   rcx,rcx
   140006bea:	jne    0x140006c16
   140006bec:	lea    rax,[rip+0x560d]        # 0x14000c200
   140006bf3:	mov    ebx,0xc00000e5
   140006bf8:	mov    QWORD PTR [rsp+0x30],rax
   140006bfd:	lea    rax,[rip+0x6454]        # 0x14000d058
   140006c04:	mov    QWORD PTR [rsp+0x28],rax
   140006c09:	mov    DWORD PTR [rsp+0x20],0x425
   140006c11:	jmp    0x140006d2c
   140006c16:	xor    ebp,ebp
   140006c18:	lea    rdi,[r8+0x10]
   140006c1c:	movzx  eax,WORD PTR [rdi-0x8]
   140006c20:	add    eax,0xfffffff5
   140006c23:	test   eax,0xfffffff7
   140006c28:	jne    0x140006d07
   140006c2e:	mov    r9d,DWORD PTR [rdi-0x10]
   140006c32:	cmp    r9d,0x5
   140006c36:	je     0x140006c3e
   140006c38:	cmp    r9d,0x8
   140006c3c:	jne    0x140006c54
   140006c3e:	mov    eax,0x13
   140006c43:	or     ecx,0xffffffff
   140006c46:	mov    WORD PTR [rdi-0x8],ax
   140006c4a:	xor    eax,eax
   140006c4c:	cmp    cx,WORD PTR [rdi]
   140006c4f:	sete   al
   140006c52:	mov    DWORD PTR [rdi],eax
   140006c54:	lea    r8,[rip+0x6155]        # 0x14000cdb0
   140006c5b:	mov    edx,0xc
   140006c60:	lea    rcx,[rsp+0x48]
   140006c65:	call   0x140007064
   140006c6a:	mov    ebx,eax
   140006c6c:	test   eax,eax
   140006c6e:	jne    0x140006ce5
   140006c70:	mov    eax,DWORD PTR [rdi]
   140006c72:	lea    r9d,[rbx+0x4]
   140006c76:	mov    DWORD PTR [rsp+0x40],eax
   140006c7a:	lea    rdx,[rsp+0x48]
   140006c7f:	lea    rax,[rsp+0x40]
   140006c84:	mov    DWORD PTR [rsp+0x28],0x4
   140006c8c:	xor    r8d,r8d
   140006c8f:	mov    QWORD PTR [rsp+0x20],rax
   140006c94:	mov    rcx,r14
   140006c97:	call   QWORD PTR [rip+0x463b]        # 0x14000b2d8
   140006c9d:	test   eax,eax
   140006c9f:	jne    0x140006cb5
   140006ca1:	inc    ebp
   140006ca3:	add    rdi,0x20
   140006ca7:	cmp    ebp,0x1
   140006caa:	jb     0x140006c1c
   140006cb0:	jmp    0x140006d47
   140006cb5:	movzx  ebx,ax
   140006cb8:	or     ebx,0xc0070000
   140006cbe:	test   eax,eax
   140006cc0:	cmovle ebx,eax
   140006cc3:	lea    rax,[rip+0x5536]        # 0x14000c200
   140006cca:	mov    QWORD PTR [rsp+0x30],rax
   140006ccf:	lea    rax,[rip+0x639a]        # 0x14000d070
   140006cd6:	mov    QWORD PTR [rsp+0x28],rax
   140006cdb:	mov    DWORD PTR [rsp+0x20],0x458
   140006ce3:	jmp    0x140006d2c
   140006ce5:	lea    rax,[rip+0x5514]        # 0x14000c200
   140006cec:	mov    QWORD PTR [rsp+0x30],rax
   140006cf1:	lea    rax,[rip+0x60c0]        # 0x14000cdb8
   140006cf8:	mov    QWORD PTR [rsp+0x28],rax
   140006cfd:	mov    DWORD PTR [rsp+0x20],0x44b
   140006d05:	jmp    0x140006d2c
   140006d07:	lea    rax,[rip+0x54f2]        # 0x14000c200
   140006d0e:	mov    ebx,0xc00000bb
   140006d13:	mov    QWORD PTR [rsp+0x30],rax
   140006d18:	lea    rax,[rip+0x6111]        # 0x14000ce30
   140006d1f:	mov    QWORD PTR [rsp+0x28],rax
   140006d24:	mov    DWORD PTR [rsp+0x20],0x43f
   140006d2c:	lea    r9,[rip+0x5f1d]        # 0x14000cc50
   140006d33:	mov    r8d,ebx
   140006d36:	lea    rdx,[rip+0x4f23]        # 0x14000bc60
   140006d3d:	mov    ecx,0x1
   140006d42:	call   0x140005910
   140006d47:	mov    eax,ebx
   140006d49:	mov    rcx,QWORD PTR [rsp+0x60]
   140006d4e:	xor    rcx,rsp
   140006d51:	call   0x140008aa0
   140006d56:	mov    rbx,QWORD PTR [rsp+0x98]
   140006d5e:	add    rsp,0x70
   140006d62:	pop    r14
   140006d64:	pop    rdi
   140006d65:	pop    rbp
   140006d66:	ret    
   140006d67:	int3   
   140006d68:	int3   
   140006d69:	int3   
   140006d6a:	int3   
   140006d6b:	int3   
   140006d6c:	int3   
   140006d6d:	int3   
   140006d6e:	int3   
   140006d6f:	int3   
   140006d70:	mov    r11,rsp
   140006d73:	push   rbx
   140006d74:	sub    rsp,0x50
   140006d78:	and    QWORD PTR [r11+0x8],0x0
   140006d7d:	test   edx,edx
   140006d7f:	lea    rdx,[rip+0x5f5a]        # 0x14000cce0
   140006d86:	je     0x140006dea
   140006d88:	lea    rax,[r11+0x10]
   140006d8c:	xor    r9d,r9d
   140006d8f:	mov    QWORD PTR [r11-0x18],rax
   140006d93:	xor    r8d,r8d
   140006d96:	lea    rax,[r11+0x8]
   140006d9a:	mov    QWORD PTR [r11-0x20],rax
   140006d9e:	and    QWORD PTR [r11-0x28],0x0
   140006da3:	mov    DWORD PTR [rsp+0x28],0xf003f
   140006dab:	and    DWORD PTR [rsp+0x20],0x0
   140006db0:	call   QWORD PTR [rip+0x453a]        # 0x14000b2f0
   140006db6:	test   eax,eax
   140006db8:	je     0x140006e07
   140006dba:	movzx  ebx,ax
   140006dbd:	or     ebx,0xc0070000
   140006dc3:	test   eax,eax
   140006dc5:	cmovle ebx,eax
   140006dc8:	lea    rax,[rip+0x5431]        # 0x14000c200
   140006dcf:	mov    QWORD PTR [rsp+0x30],rax
   140006dd4:	lea    rax,[rip+0x5ec5]        # 0x14000cca0
   140006ddb:	mov    QWORD PTR [rsp+0x28],rax
   140006de0:	mov    DWORD PTR [rsp+0x20],0x47b
   140006de8:	jmp    0x140006e39
   140006dea:	call   QWORD PTR [rip+0x4520]        # 0x14000b310
   140006df0:	lea    ecx,[rax-0x4]
   140006df3:	cmp    ecx,0x48b
   140006df9:	jbe    0x140006e0b
   140006dfb:	cmp    eax,0x1
   140006dfe:	je     0x140006e0b
   140006e00:	cmp    eax,0x491
   140006e05:	jae    0x140006e0b
   140006e07:	xor    ebx,ebx
   140006e09:	jmp    0x140006e54
   140006e0b:	movzx  ebx,ax
   140006e0e:	or     ebx,0xc0070000
   140006e14:	test   eax,eax
   140006e16:	cmovle ebx,eax
   140006e19:	lea    rax,[rip+0x53e0]        # 0x14000c200
   140006e20:	mov    QWORD PTR [rsp+0x30],rax
   140006e25:	lea    rax,[rip+0x60ac]        # 0x14000ced8
   140006e2c:	mov    QWORD PTR [rsp+0x28],rax
   140006e31:	mov    DWORD PTR [rsp+0x20],0x489
   140006e39:	lea    r9,[rip+0x5e10]        # 0x14000cc50
   140006e40:	mov    r8d,ebx
   140006e43:	lea    rdx,[rip+0x4e16]        # 0x14000bc60
   140006e4a:	mov    ecx,0x1
   140006e4f:	call   0x140005910
   140006e54:	mov    rcx,QWORD PTR [rsp+0x60]
   140006e59:	test   rcx,rcx
   140006e5c:	je     0x140006e64
   140006e5e:	call   QWORD PTR [rip+0x4494]        # 0x14000b2f8
   140006e64:	mov    eax,ebx
   140006e66:	add    rsp,0x50
   140006e6a:	pop    rbx
   140006e6b:	ret    
   140006e6c:	int3   
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	int3   
   140006e71:	int3   
   140006e72:	int3   
   140006e73:	int3   
   140006e74:	mov    rax,rsp
   140006e77:	mov    QWORD PTR [rax+0x18],rbx
   140006e7b:	push   rdi
   140006e7c:	sub    rsp,0x40
   140006e80:	xor    ebx,ebx
   140006e82:	mov    edi,ecx
   140006e84:	and    DWORD PTR [rax+0x10],ebx
   140006e87:	and    DWORD PTR [rax+0x8],ebx
   140006e8a:	test   ecx,ecx
   140006e8c:	je     0x140006fde
   140006e92:	xor    r9d,r9d
   140006e95:	lea    r8,[rax+0x10]
   140006e99:	xor    edx,edx
   140006e9b:	lea    ecx,[rbx+0xe]
   140006e9e:	call   QWORD PTR [rip+0x432c]        # 0x14000b1d0
   140006ea4:	test   eax,eax
   140006ea6:	jne    0x140006ef5
   140006ea8:	call   QWORD PTR [rip+0x4232]        # 0x14000b0e0
   140006eae:	cmp    eax,0x7f
   140006eb1:	je     0x140007050
   140006eb7:	cmp    eax,0x505
   140006ebc:	je     0x140007050
   140006ec2:	movzx  ebx,ax
   140006ec5:	or     ebx,0xc0070000
   140006ecb:	test   eax,eax
   140006ecd:	cmovle ebx,eax
   140006ed0:	lea    rax,[rip+0x5329]        # 0x14000c200
   140006ed7:	mov    QWORD PTR [rsp+0x30],rax
   140006edc:	lea    rax,[rip+0x61ad]        # 0x14000d090
   140006ee3:	mov    QWORD PTR [rsp+0x28],rax
   140006ee8:	mov    DWORD PTR [rsp+0x20],0x4ab
   140006ef0:	jmp    0x140007031
   140006ef5:	xor    edx,edx
   140006ef7:	lea    r8,[rsp+0x50]
   140006efc:	xor    r9d,r9d
   140006eff:	lea    ecx,[rdx+0x10]
   140006f02:	call   QWORD PTR [rip+0x42c8]        # 0x14000b1d0
   140006f08:	test   eax,eax
   140006f0a:	jne    0x140006f59
   140006f0c:	call   QWORD PTR [rip+0x41ce]        # 0x14000b0e0
   140006f12:	cmp    eax,0x7f
   140006f15:	je     0x140007050
   140006f1b:	cmp    eax,0x505
   140006f20:	je     0x140007050
   140006f26:	movzx  ebx,ax
   140006f29:	or     ebx,0xc0070000
   140006f2f:	test   eax,eax
   140006f31:	cmovle ebx,eax
   140006f34:	lea    rax,[rip+0x52c5]        # 0x14000c200
   140006f3b:	mov    QWORD PTR [rsp+0x30],rax
   140006f40:	lea    rax,[rip+0x6199]        # 0x14000d0e0
   140006f47:	mov    QWORD PTR [rsp+0x28],rax
   140006f4c:	mov    DWORD PTR [rsp+0x20],0x4c0
   140006f54:	jmp    0x140007031
   140006f59:	cmp    DWORD PTR [rsp+0x50],ebx
   140006f5d:	je     0x140006f6f
   140006f5f:	mov    eax,DWORD PTR [rsp+0x58]
   140006f63:	test   eax,eax
   140006f65:	je     0x140006f6f
   140006f67:	cmp    eax,edi
   140006f69:	jle    0x14000704e
   140006f6f:	xor    r9d,r9d
   140006f72:	xor    r8d,r8d
   140006f75:	mov    edx,edi
   140006f77:	lea    ecx,[r9+0xf]
   140006f7b:	call   QWORD PTR [rip+0x424f]        # 0x14000b1d0
   140006f81:	test   eax,eax
   140006f83:	jne    0x14000704e
   140006f89:	call   QWORD PTR [rip+0x4151]        # 0x14000b0e0
   140006f8f:	cmp    eax,0x5b3
   140006f94:	je     0x140007050
   140006f9a:	cmp    eax,0x7f
   140006f9d:	je     0x140007050
   140006fa3:	cmp    eax,0x505
   140006fa8:	je     0x140007050
   140006fae:	movzx  ebx,ax
   140006fb1:	or     ebx,0xc0070000
   140006fb7:	test   eax,eax
   140006fb9:	cmovle ebx,eax
   140006fbc:	lea    rax,[rip+0x523d]        # 0x14000c200
   140006fc3:	mov    QWORD PTR [rsp+0x30],rax
   140006fc8:	lea    rax,[rip+0x6161]        # 0x14000d130
   140006fcf:	mov    QWORD PTR [rsp+0x28],rax
   140006fd4:	mov    DWORD PTR [rsp+0x20],0x4d6
   140006fdc:	jmp    0x140007031
   140006fde:	mov    ecx,0x2
   140006fe3:	call   QWORD PTR [rip+0x41df]        # 0x14000b1c8
   140006fe9:	test   eax,eax
   140006feb:	jne    0x14000704e
   140006fed:	call   QWORD PTR [rip+0x40ed]        # 0x14000b0e0
   140006ff3:	cmp    eax,0x7f
   140006ff6:	je     0x140007050
   140006ff8:	cmp    eax,0x505
   140006ffd:	je     0x140007050
   140006fff:	movzx  ebx,ax
   140007002:	or     ebx,0xc0070000
   140007008:	test   eax,eax
   14000700a:	cmovle ebx,eax
   14000700d:	test   ebx,ebx
   14000700f:	je     0x14000704e
   140007011:	lea    rax,[rip+0x51e8]        # 0x14000c200
   140007018:	mov    QWORD PTR [rsp+0x30],rax
   14000701d:	lea    rax,[rip+0x615c]        # 0x14000d180
   140007024:	mov    QWORD PTR [rsp+0x28],rax
   140007029:	mov    DWORD PTR [rsp+0x20],0x4ec
   140007031:	lea    r9,[rip+0x5c18]        # 0x14000cc50
   140007038:	mov    r8d,ebx
   14000703b:	lea    rdx,[rip+0x4c1e]        # 0x14000bc60
   140007042:	mov    ecx,0x1
   140007047:	call   0x140005910
   14000704c:	jmp    0x140007050
   14000704e:	xor    ebx,ebx
   140007050:	mov    eax,ebx
   140007052:	mov    rbx,QWORD PTR [rsp+0x60]
   140007057:	add    rsp,0x40
   14000705b:	pop    rdi
   14000705c:	ret    
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	int3   
   140007061:	int3   
   140007062:	int3   
   140007063:	int3   
   140007064:	mov    QWORD PTR [rsp+0x18],r8
   140007069:	mov    QWORD PTR [rsp+0x20],r9
   14000706e:	push   rbx
   14000706f:	push   rbp
   140007070:	push   rsi
   140007071:	push   rdi
   140007072:	sub    rsp,0x28
   140007076:	xor    ebp,ebp
   140007078:	lea    rax,[rdx-0x1]
   14000707c:	cmp    rax,0x7ffffffe
   140007082:	mov    rsi,rcx
   140007085:	mov    edi,ebp
   140007087:	mov    ecx,0xc000000d
   14000708c:	cmova  edi,ecx
   14000708f:	test   edi,edi
   140007091:	js     0x1400070c8
   140007093:	lea    rbx,[rdx-0x1]
   140007097:	mov    rcx,rsi
   14000709a:	mov    rdx,rbx
   14000709d:	lea    r9,[rsp+0x68]
   1400070a2:	mov    edi,ebp
   1400070a4:	call   QWORD PTR [rip+0x4346]        # 0x14000b3f0
   1400070aa:	test   eax,eax
   1400070ac:	js     0x1400070bd
   1400070ae:	cdqe   
   1400070b0:	cmp    rax,rbx
   1400070b3:	ja     0x1400070bd
   1400070b5:	jne    0x1400070d0
   1400070b7:	mov    WORD PTR [rsi+rbx*2],bp
   1400070bb:	jmp    0x1400070d0
   1400070bd:	mov    WORD PTR [rsi+rbx*2],bp
   1400070c1:	mov    edi,0x80000005
   1400070c6:	jmp    0x1400070d0
   1400070c8:	test   rdx,rdx
   1400070cb:	je     0x1400070d0
   1400070cd:	mov    WORD PTR [rsi],bp
   1400070d0:	mov    eax,edi
   1400070d2:	add    rsp,0x28
   1400070d6:	pop    rdi
   1400070d7:	pop    rsi
   1400070d8:	pop    rbp
   1400070d9:	pop    rbx
   1400070da:	ret    
   1400070db:	int3   
   1400070dc:	int3   
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	int3   
   1400070e1:	int3   
   1400070e2:	int3   
   1400070e3:	int3   
   1400070e4:	mov    r11,rsp
   1400070e7:	mov    QWORD PTR [r11+0x10],rbx
   1400070eb:	mov    QWORD PTR [r11+0x18],rsi
   1400070ef:	mov    DWORD PTR [rsp+0x8],ecx
   1400070f3:	push   rbp
   1400070f4:	push   r12
   1400070f6:	push   r13
   1400070f8:	push   r14
   1400070fa:	push   r15
   1400070fc:	mov    rbp,rsp
   1400070ff:	sub    rsp,0x60
   140007103:	xor    eax,eax
   140007105:	xor    r13d,r13d
   140007108:	and    DWORD PTR [rbp-0x20],r13d
   14000710c:	mov    r12,r8
   14000710f:	mov    QWORD PTR [rbp-0x18],rax
   140007113:	mov    QWORD PTR [rbp-0x10],rax
   140007117:	mov    QWORD PTR [rbp-0x8],rax
   14000711b:	lea    eax,[r13+0x7]
   14000711f:	mov    DWORD PTR [rbp+0x30],eax
   140007122:	cmp    r9d,eax
   140007125:	je     0x140007153
   140007127:	lea    r14,[rip+0x50d2]        # 0x14000c200
   14000712e:	mov    r8d,0xc000000d
   140007134:	mov    QWORD PTR [r11-0x58],r14
   140007138:	lea    rax,[rip+0x6099]        # 0x14000d1d8
   14000713f:	mov    QWORD PTR [r11-0x60],rax
   140007143:	mov    ebx,r8d
   140007146:	mov    DWORD PTR [rsp+0x20],0x18
   14000714e:	jmp    0x1400072c3
   140007153:	mov    esi,DWORD PTR [rbp+0x58]
   140007156:	test   esi,esi
   140007158:	jne    0x140007161
   14000715a:	xor    ebx,ebx
   14000715c:	jmp    0x1400072db
   140007161:	lea    r14,[rip+0x5098]        # 0x14000c200
   140007168:	cmp    esi,0x92784
   14000716e:	jbe    0x140007197
   140007170:	mov    QWORD PTR [rsp+0x30],r14
   140007175:	lea    rax,[rip+0x51f4]        # 0x14000c370
   14000717c:	mov    r8d,0xc000000d
   140007182:	mov    QWORD PTR [rsp+0x28],rax
   140007187:	mov    DWORD PTR [rsp+0x20],0x25
   14000718f:	mov    ebx,r8d
   140007192:	jmp    0x1400072c3
   140007197:	mov    r15d,DWORD PTR [rbp+0x50]
   14000719b:	mov    ecx,0x13
   1400071a0:	test   r15d,r15d
   1400071a3:	je     0x1400071ae
   1400071a5:	cmp    esi,r15d
   1400071a8:	jae    0x140007247
   1400071ae:	mov    WORD PTR [rbp-0x18],cx
   1400071b2:	lea    r8,[rbp-0x20]
   1400071b6:	mov    rcx,r12
   1400071b9:	mov    DWORD PTR [rbp-0x20],eax
   1400071bc:	mov    DWORD PTR [rbp-0x10],esi
   1400071bf:	call   0x140006bc8
   1400071c4:	mov    ebx,eax
   1400071c6:	test   eax,eax
   1400071c8:	je     0x140007200
   1400071ca:	mov    QWORD PTR [rsp+0x30],r14
   1400071cf:	lea    rsi,[rip+0x520a]        # 0x14000c3e0
   1400071d6:	mov    QWORD PTR [rsp+0x28],rsi
   1400071db:	lea    r9,[rip+0x601e]        # 0x14000d200
   1400071e2:	mov    r8d,eax
   1400071e5:	mov    DWORD PTR [rsp+0x20],0x39
   1400071ed:	lea    rdx,[rip+0x4a6c]        # 0x14000bc60
   1400071f4:	mov    ecx,0x1
   1400071f9:	call   0x140005910
   1400071fe:	jmp    0x140007250
   140007200:	mov    ecx,esi
   140007202:	mov    r13d,0x1
   140007208:	call   0x140006e74
   14000720d:	mov    ebx,eax
   14000720f:	test   eax,eax
   140007211:	je     0x140007247
   140007213:	lea    rax,[rip+0x605e]        # 0x14000d278
   14000721a:	mov    QWORD PTR [rsp+0x30],r14
   14000721f:	mov    QWORD PTR [rsp+0x28],rax
   140007224:	lea    r9,[rip+0x5fd5]        # 0x14000d200
   14000722b:	mov    r8d,ebx
   14000722e:	mov    DWORD PTR [rsp+0x20],0x3d
   140007236:	lea    rdx,[rip+0x4a23]        # 0x14000bc60
   14000723d:	mov    ecx,r13d
   140007240:	call   0x140005910
   140007245:	jmp    0x140007249
   140007247:	xor    ebx,ebx
   140007249:	lea    rsi,[rip+0x5190]        # 0x14000c3e0
   140007250:	test   ebx,ebx
   140007252:	jns    0x1400072db
   140007258:	test   r13d,r13d
   14000725b:	je     0x1400072db
   14000725d:	mov    rcx,r12
   140007260:	test   r15d,r15d
   140007263:	jne    0x14000728d
   140007265:	lea    r8,[rbp+0x30]
   140007269:	call   0x140006380
   14000726e:	test   eax,eax
   140007270:	je     0x1400072db
   140007272:	mov    QWORD PTR [rsp+0x30],r14
   140007277:	lea    rcx,[rip+0x6022]        # 0x14000d2a0
   14000727e:	mov    QWORD PTR [rsp+0x28],rcx
   140007283:	mov    DWORD PTR [rsp+0x20],0x47
   14000728b:	jmp    0x1400072c0
   14000728d:	mov    eax,0x13
   140007292:	mov    DWORD PTR [rbp-0x20],0x7
   140007299:	lea    r8,[rbp-0x20]
   14000729d:	mov    WORD PTR [rbp-0x18],ax
   1400072a1:	mov    DWORD PTR [rbp-0x10],r15d
   1400072a5:	call   0x140006bc8
   1400072aa:	test   eax,eax
   1400072ac:	je     0x1400072db
   1400072ae:	mov    QWORD PTR [rsp+0x30],r14
   1400072b3:	mov    QWORD PTR [rsp+0x28],rsi
   1400072b8:	mov    DWORD PTR [rsp+0x20],0x56
   1400072c0:	mov    r8d,eax
   1400072c3:	lea    r9,[rip+0x5f36]        # 0x14000d200
   1400072ca:	mov    ecx,0x1
   1400072cf:	lea    rdx,[rip+0x498a]        # 0x14000bc60
   1400072d6:	call   0x140005910
   1400072db:	lea    r11,[rsp+0x60]
   1400072e0:	mov    eax,ebx
   1400072e2:	mov    rbx,QWORD PTR [r11+0x38]
   1400072e6:	mov    rsi,QWORD PTR [r11+0x40]
   1400072ea:	mov    rsp,r11
   1400072ed:	pop    r15
   1400072ef:	pop    r14
   1400072f1:	pop    r13
   1400072f3:	pop    r12
   1400072f5:	pop    rbp
   1400072f6:	ret    
   1400072f7:	int3   
   1400072f8:	int3   
   1400072f9:	int3   
   1400072fa:	int3   
   1400072fb:	int3   
   1400072fc:	int3   
   1400072fd:	int3   
   1400072fe:	int3   
   1400072ff:	int3   
   140007300:	mov    r11,rsp
   140007303:	push   rbx
   140007304:	sub    rsp,0x60
   140007308:	and    DWORD PTR [rsp+0x40],0x0
   14000730d:	xor    eax,eax
   14000730f:	mov    QWORD PTR [r11-0x20],rax
   140007313:	mov    QWORD PTR [r11-0x18],rax
   140007317:	mov    QWORD PTR [r11-0x10],rax
   14000731b:	cmp    r8d,0x6
   14000731f:	je     0x14000734d
   140007321:	lea    rax,[rip+0x4ed8]        # 0x14000c200
   140007328:	mov    r8d,0xc000000d
   14000732e:	mov    QWORD PTR [r11-0x38],rax
   140007332:	mov    ebx,r8d
   140007335:	lea    rax,[rip+0x5e9c]        # 0x14000d1d8
   14000733c:	mov    QWORD PTR [r11-0x40],rax
   140007340:	mov    DWORD PTR [rsp+0x20],0x11
   140007348:	jmp    0x1400073e4
   14000734d:	mov    eax,DWORD PTR [rsp+0x90]
   140007354:	test   eax,eax
   140007356:	je     0x1400073fe
   14000735c:	cmp    eax,0x3e7
   140007361:	jbe    0x14000738e
   140007363:	lea    rax,[rip+0x4e96]        # 0x14000c200
   14000736a:	mov    r8d,0xc000000d
   140007370:	mov    QWORD PTR [rsp+0x30],rax
   140007375:	mov    ebx,r8d
   140007378:	lea    rax,[rip+0x4ff1]        # 0x14000c370
   14000737f:	mov    QWORD PTR [rsp+0x28],rax
   140007384:	mov    DWORD PTR [rsp+0x20],0x1e
   14000738c:	jmp    0x1400073e4
   14000738e:	test   r9d,r9d
   140007391:	je     0x140007398
   140007393:	cmp    eax,r9d
   140007396:	jae    0x1400073fe
   140007398:	mov    ecx,0x13
   14000739d:	mov    DWORD PTR [rsp+0x40],0x6
   1400073a5:	mov    WORD PTR [rsp+0x48],cx
   1400073aa:	lea    r8,[rsp+0x40]
   1400073af:	mov    rcx,rdx
   1400073b2:	mov    DWORD PTR [rsp+0x50],eax
   1400073b6:	call   0x140006bc8
   1400073bb:	mov    ebx,eax
   1400073bd:	test   eax,eax
   1400073bf:	je     0x1400073fe
   1400073c1:	lea    rax,[rip+0x4e38]        # 0x14000c200
   1400073c8:	mov    r8d,ebx
   1400073cb:	mov    QWORD PTR [rsp+0x30],rax
   1400073d0:	lea    rax,[rip+0x5009]        # 0x14000c3e0
   1400073d7:	mov    QWORD PTR [rsp+0x28],rax
   1400073dc:	mov    DWORD PTR [rsp+0x20],0x2d
   1400073e4:	lea    r9,[rip+0x5ed5]        # 0x14000d2c0
   1400073eb:	mov    ecx,0x1
   1400073f0:	lea    rdx,[rip+0x4869]        # 0x14000bc60
   1400073f7:	call   0x140005910
   1400073fc:	jmp    0x140007400
   1400073fe:	xor    ebx,ebx
   140007400:	mov    eax,ebx
   140007402:	add    rsp,0x60
   140007406:	pop    rbx
   140007407:	ret    
   140007408:	int3   
   140007409:	int3   
   14000740a:	int3   
   14000740b:	int3   
   14000740c:	int3   
   14000740d:	int3   
   14000740e:	int3   
   14000740f:	int3   
   140007410:	mov    QWORD PTR [rsp+0x18],rbx
   140007415:	mov    QWORD PTR [rsp+0x20],rsi
   14000741a:	mov    DWORD PTR [rsp+0x8],ecx
   14000741e:	push   rdi
   14000741f:	push   r14
   140007421:	push   r15
   140007423:	sub    rsp,0x40
   140007427:	mov    rdi,rdx
   14000742a:	mov    DWORD PTR [rdx],0x80310001
   140007430:	mov    r14d,0x1
   140007436:	lea    rcx,[rip+0xa783]        # 0x140011bc0
   14000743d:	mov    dl,r14b
   140007440:	call   QWORD PTR [rip+0x40ea]        # 0x14000b530
   140007446:	cmp    DWORD PTR [rip+0xa693],0x0        # 0x140011ae0
   14000744d:	je     0x140007477
   14000744f:	and    DWORD PTR [rsp+0x68],0x0
   140007454:	lea    rcx,[rsp+0x68]
   140007459:	call   0x140007eac
   14000745e:	mov    ecx,DWORD PTR [rsp+0x68]
   140007462:	and    DWORD PTR [rip+0xa677],0x0        # 0x140011ae0
   140007469:	mov    DWORD PTR [rip+0xa679],ecx        # 0x140011ae8
   14000746f:	mov    DWORD PTR [rip+0xa66f],eax        # 0x140011ae4
   140007475:	jmp    0x140007483
   140007477:	mov    ecx,DWORD PTR [rip+0xa66b]        # 0x140011ae8
   14000747d:	mov    eax,DWORD PTR [rip+0xa661]        # 0x140011ae4
   140007483:	lea    r15,[rip+0x4d76]        # 0x14000c200
   14000748a:	test   eax,eax
   14000748c:	jne    0x1400075c8
   140007492:	mov    r15d,0x88010008
   140007498:	test   ecx,ecx
   14000749a:	je     0x1400074b0
   14000749c:	mov    rdx,rdi
   14000749f:	lea    rcx,[rsp+0x60]
   1400074a4:	call   0x1400082e8
   1400074a9:	mov    ebx,eax
   1400074ab:	jmp    0x140007547
   1400074b0:	mov    rsi,QWORD PTR [rip+0xa639]        # 0x140011af0
   1400074b7:	test   rsi,rsi
   1400074ba:	jne    0x1400074da
   1400074bc:	lea    rcx,[rip+0xa62d]        # 0x140011af0
   1400074c3:	call   0x140007ba4
   1400074c8:	mov    rsi,QWORD PTR [rip+0xa621]        # 0x140011af0
   1400074cf:	mov    ebx,eax
   1400074d1:	test   rsi,rsi
   1400074d4:	je     0x14000758d
   1400074da:	mov    rax,QWORD PTR [rsi]
   1400074dd:	mov    rbx,QWORD PTR [rax]
   1400074e0:	mov    rcx,rbx
   1400074e3:	call   QWORD PTR [rip+0x408f]        # 0x14000b578
   1400074e9:	mov    r8,rdi
   1400074ec:	lea    rdx,[rsp+0x60]
   1400074f1:	mov    rcx,rsi
   1400074f4:	call   rbx
   1400074f6:	mov    ebx,eax
   1400074f8:	test   eax,eax
   1400074fa:	js     0x14000754b
   1400074fc:	mov    r8d,DWORD PTR [rsp+0x60]
   140007501:	mov    ecx,r8d
   140007504:	test   r8d,r8d
   140007507:	je     0x140007544
   140007509:	sub    ecx,r14d
   14000750c:	je     0x140007521
   14000750e:	cmp    ecx,r14d
   140007511:	je     0x14000751c
   140007513:	lea    rdx,[rip+0x5fd6]        # 0x14000d4f0
   14000751a:	jmp    0x140007537
   14000751c:	and    DWORD PTR [rdi],0x0
   14000751f:	jmp    0x140007547
   140007521:	mov    r8d,DWORD PTR [rdi]
   140007524:	lea    eax,[r8+0x77feffff]
   14000752b:	cmp    eax,0x6
   14000752e:	jbe    0x140007547
   140007530:	lea    rdx,[rip+0x5f69]        # 0x14000d4a0
   140007537:	mov    ecx,r14d
   14000753a:	call   0x140005910
   14000753f:	and    DWORD PTR [rsp+0x60],0x0
   140007544:	mov    DWORD PTR [rdi],r15d
   140007547:	test   ebx,ebx
   140007549:	jns    0x14000758d
   14000754b:	lea    rax,[rip+0x4cae]        # 0x14000c200
   140007552:	mov    r8d,ebx
   140007555:	mov    QWORD PTR [rsp+0x30],rax
   14000755a:	lea    r9,[rip+0x5e0f]        # 0x14000d370
   140007561:	lea    rax,[rip+0x5f08]        # 0x14000d470
   140007568:	mov    ecx,r14d
   14000756b:	mov    QWORD PTR [rsp+0x28],rax
   140007570:	lea    rdx,[rip+0x46e9]        # 0x14000bc60
   140007577:	mov    DWORD PTR [rsp+0x20],0x96
   14000757f:	call   0x140005910
   140007584:	xor    ebx,ebx
   140007586:	mov    DWORD PTR [rdi],r15d
   140007589:	and    DWORD PTR [rsp+0x60],ebx
   14000758d:	lea    r15,[rip+0x4c6c]        # 0x14000c200
   140007594:	lea    rcx,[rip+0xa625]        # 0x140011bc0
   14000759b:	call   QWORD PTR [rip+0x3f87]        # 0x14000b528
   1400075a1:	test   ebx,ebx
   1400075a3:	je     0x1400075d8
   1400075a5:	mov    QWORD PTR [rsp+0x30],r15
   1400075aa:	lea    rax,[rip+0x5d87]        # 0x14000d338
   1400075b1:	btr    ebx,0x1c
   1400075b5:	mov    QWORD PTR [rsp+0x28],rax
   1400075ba:	mov    DWORD PTR [rsp+0x20],0x1e
   1400075c2:	bts    ebx,0x1e
   1400075c6:	jmp    0x14000761d
   1400075c8:	movzx  ebx,ax
   1400075cb:	or     ebx,0x80070000
   1400075d1:	test   eax,eax
   1400075d3:	cmovle ebx,eax
   1400075d6:	jmp    0x140007594
   1400075d8:	cmp    DWORD PTR [rsp+0x60],0x2
   1400075dd:	jne    0x1400075fa
   1400075df:	and    DWORD PTR [rdi],0x0
   1400075e2:	xor    ebx,ebx
   1400075e4:	mov    rsi,QWORD PTR [rsp+0x78]
   1400075e9:	mov    eax,ebx
   1400075eb:	mov    rbx,QWORD PTR [rsp+0x70]
   1400075f0:	add    rsp,0x40
   1400075f4:	pop    r15
   1400075f6:	pop    r14
   1400075f8:	pop    rdi
   1400075f9:	ret    
   1400075fa:	cmp    DWORD PTR [rdi],0x0
   1400075fd:	jne    0x1400075e2
   1400075ff:	mov    QWORD PTR [rsp+0x30],r15
   140007604:	lea    rax,[rip+0x5de5]        # 0x14000d3f0
   14000760b:	mov    QWORD PTR [rsp+0x28],rax
   140007610:	mov    ebx,0xc00000e5
   140007615:	mov    DWORD PTR [rsp+0x20],0x2d
   14000761d:	lea    r9,[rip+0x5d4c]        # 0x14000d370
   140007624:	mov    r8d,ebx
   140007627:	lea    rdx,[rip+0x4632]        # 0x14000bc60
   14000762e:	mov    ecx,r14d
   140007631:	call   0x140005910
   140007636:	jmp    0x1400075e4
   140007638:	int3   
   140007639:	int3   
   14000763a:	int3   
   14000763b:	int3   
   14000763c:	int3   
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	mov    QWORD PTR [rsp+0x8],rbx
   140007645:	mov    QWORD PTR [rsp+0x10],rsi
   14000764a:	push   rdi
   14000764b:	sub    rsp,0x40
   14000764f:	lea    rdx,[rcx+0x4]
   140007653:	mov    rdi,rcx
   140007656:	call   0x140007410
   14000765b:	mov    ebx,eax
   14000765d:	test   eax,eax
   14000765f:	je     0x14000769e
   140007661:	lea    rax,[rip+0x4b98]        # 0x14000c200
   140007668:	mov    r8d,ebx
   14000766b:	mov    QWORD PTR [rsp+0x30],rax
   140007670:	lea    r9,[rip+0x5cf9]        # 0x14000d370
   140007677:	lea    rax,[rip+0x5dc2]        # 0x14000d440
   14000767e:	mov    ecx,0x1
   140007683:	mov    QWORD PTR [rsp+0x28],rax
   140007688:	lea    rdx,[rip+0x45d1]        # 0x14000bc60
   14000768f:	mov    DWORD PTR [rsp+0x20],0x45
   140007697:	call   0x140005910
   14000769c:	jmp    0x1400076ac
   14000769e:	cmp    DWORD PTR [rdi+0x4],0x0
   1400076a2:	je     0x1400076aa
   1400076a4:	mov    DWORD PTR [rdi],0x3
   1400076aa:	xor    ebx,ebx
   1400076ac:	mov    rsi,QWORD PTR [rsp+0x58]
   1400076b1:	mov    eax,ebx
   1400076b3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400076b8:	add    rsp,0x40
   1400076bc:	pop    rdi
   1400076bd:	ret    
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	int3   
   1400076c1:	int3   
   1400076c2:	int3   
   1400076c3:	int3   
   1400076c4:	int3   
   1400076c5:	int3   
   1400076c6:	int3   
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	rex push rbx
   1400076d2:	sub    rsp,0x40
   1400076d6:	mov    rbx,rdx
   1400076d9:	mov    QWORD PTR [rsp+0x28],r8
   1400076de:	lea    rax,[rsp+0x68]
   1400076e3:	mov    QWORD PTR [rsp+0x20],rax
   1400076e8:	mov    r9,QWORD PTR [rcx+0x8]
   1400076ec:	xor    r8d,r8d
   1400076ef:	xor    edx,edx
   1400076f1:	lea    rcx,[rip+0x61e8]        # 0x14000d8e0
   1400076f8:	call   QWORD PTR [rip+0x3a6a]        # 0x14000b168
   1400076fe:	mov    QWORD PTR [rsp+0x38],rax
   140007703:	mov    DWORD PTR [rsp+0x30],eax
   140007707:	test   eax,eax
   140007709:	js     0x140007748
   14000770b:	mov    eax,DWORD PTR [rsp+0x68]
   14000770f:	mov    DWORD PTR [rbx],eax
   140007711:	xor    eax,eax
   140007713:	jmp    0x140007748
   140007715:	mov    ecx,eax
   140007717:	test   eax,eax
   140007719:	je     0x140007744
   14000771b:	jns    0x140007737
   14000771d:	and    eax,0x1fff0000
   140007722:	cmp    eax,0x10000
   140007727:	jne    0x140007731
   140007729:	mov    eax,ecx
   14000772b:	mov    DWORD PTR [rsp+0x30],ecx
   14000772f:	jmp    0x140007748
   140007731:	bts    ecx,0x1c
   140007735:	jmp    0x140007729
   140007737:	movzx  eax,ax
   14000773a:	or     eax,0x80070000
   14000773f:	test   ecx,ecx
   140007741:	cmovle eax,ecx
   140007744:	mov    DWORD PTR [rsp+0x30],eax
   140007748:	add    rsp,0x40
   14000774c:	pop    rbx
   14000774d:	ret    
   14000774e:	int3   
   14000774f:	int3   
   140007750:	int3   
   140007751:	int3   
   140007752:	int3   
   140007753:	int3   
   140007754:	int3   
   140007755:	int3   
   140007756:	int3   
   140007757:	int3   
   140007758:	int3   
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	mov    QWORD PTR [r9],0x1
   140007767:	xor    eax,eax
   140007769:	ret    
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	int3   
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	sub    rsp,0x38
   140007774:	mov    r9,QWORD PTR [rcx+0x8]
   140007778:	xor    r8d,r8d
   14000777b:	lea    edx,[r8+0x1]
   14000777f:	lea    rcx,[rip+0x615a]        # 0x14000d8e0
   140007786:	call   QWORD PTR [rip+0x39dc]        # 0x14000b168
   14000778c:	mov    QWORD PTR [rsp+0x50],rax
   140007791:	mov    DWORD PTR [rsp+0x20],eax
   140007795:	test   eax,eax
   140007797:	js     0x1400077d0
   140007799:	xor    eax,eax
   14000779b:	jmp    0x1400077d0
   14000779d:	mov    ecx,eax
   14000779f:	test   eax,eax
   1400077a1:	je     0x1400077cc
   1400077a3:	jns    0x1400077bf
   1400077a5:	and    eax,0x1fff0000
   1400077aa:	cmp    eax,0x10000
   1400077af:	jne    0x1400077b9
   1400077b1:	mov    eax,ecx
   1400077b3:	mov    DWORD PTR [rsp+0x20],ecx
   1400077b7:	jmp    0x1400077d0
   1400077b9:	bts    ecx,0x1c
   1400077bd:	jmp    0x1400077b1
   1400077bf:	movzx  eax,ax
   1400077c2:	or     eax,0x80070000
   1400077c7:	test   ecx,ecx
   1400077c9:	cmovle eax,ecx
   1400077cc:	mov    DWORD PTR [rsp+0x20],eax
   1400077d0:	add    rsp,0x38
   1400077d4:	ret    
   1400077d5:	int3   
   1400077d6:	int3   
   1400077d7:	int3   
   1400077d8:	int3   
   1400077d9:	int3   
   1400077da:	int3   
   1400077db:	int3   
   1400077dc:	int3   
   1400077dd:	int3   
   1400077de:	int3   
   1400077df:	int3   
   1400077e0:	xor    eax,eax
   1400077e2:	ret    
   1400077e3:	int3   
   1400077e4:	int3   
   1400077e5:	int3   
   1400077e6:	int3   
   1400077e7:	int3   
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	int3   
   1400077ed:	int3   
   1400077ee:	int3   
   1400077ef:	int3   
   1400077f0:	sub    rsp,0x38
   1400077f4:	mov    r9,QWORD PTR [rcx+0x8]
   1400077f8:	xor    r8d,r8d
   1400077fb:	lea    edx,[r8+0x2]
   1400077ff:	lea    rcx,[rip+0x60da]        # 0x14000d8e0
   140007806:	call   QWORD PTR [rip+0x395c]        # 0x14000b168
   14000780c:	mov    QWORD PTR [rsp+0x50],rax
   140007811:	mov    DWORD PTR [rsp+0x20],eax
   140007815:	test   eax,eax
   140007817:	js     0x140007850
   140007819:	xor    eax,eax
   14000781b:	jmp    0x140007850
   14000781d:	mov    ecx,eax
   14000781f:	test   eax,eax
   140007821:	je     0x14000784c
   140007823:	jns    0x14000783f
   140007825:	and    eax,0x1fff0000
   14000782a:	cmp    eax,0x10000
   14000782f:	jne    0x140007839
   140007831:	mov    eax,ecx
   140007833:	mov    DWORD PTR [rsp+0x20],ecx
   140007837:	jmp    0x140007850
   140007839:	bts    ecx,0x1c
   14000783d:	jmp    0x140007831
   14000783f:	movzx  eax,ax
   140007842:	or     eax,0x80070000
   140007847:	test   ecx,ecx
   140007849:	cmovle eax,ecx
   14000784c:	mov    DWORD PTR [rsp+0x20],eax
   140007850:	add    rsp,0x38
   140007854:	ret    
   140007855:	int3   
   140007856:	int3   
   140007857:	int3   
   140007858:	int3   
   140007859:	int3   
   14000785a:	int3   
   14000785b:	int3   
   14000785c:	int3   
   14000785d:	int3   
   14000785e:	int3   
   14000785f:	int3   
   140007860:	sub    rsp,0x58
   140007864:	test   r8,r8
   140007867:	jne    0x14000788a
   140007869:	mov    QWORD PTR [rsp+0x20],r9
   14000786e:	mov    r9,QWORD PTR [rcx+0x8]
   140007872:	lea    edx,[r8+0x7]
   140007876:	lea    rcx,[rip+0x6063]        # 0x14000d8e0
   14000787d:	call   QWORD PTR [rip+0x38e5]        # 0x14000b168
   140007883:	mov    QWORD PTR [rsp+0x38],rax
   140007888:	jmp    0x1400078b1
   14000788a:	mov    QWORD PTR [rsp+0x28],r9
   14000788f:	mov    QWORD PTR [rsp+0x20],r8
   140007894:	mov    r9,QWORD PTR [rcx+0x8]
   140007898:	xor    r8d,r8d
   14000789b:	lea    edx,[r8+0x3]
   14000789f:	lea    rcx,[rip+0x603a]        # 0x14000d8e0
   1400078a6:	call   QWORD PTR [rip+0x38bc]        # 0x14000b168
   1400078ac:	mov    QWORD PTR [rsp+0x40],rax
   1400078b1:	mov    DWORD PTR [rsp+0x30],eax
   1400078b5:	test   eax,eax
   1400078b7:	js     0x1400078f0
   1400078b9:	xor    eax,eax
   1400078bb:	jmp    0x1400078f0
   1400078bd:	mov    ecx,eax
   1400078bf:	test   eax,eax
   1400078c1:	je     0x1400078ec
   1400078c3:	jns    0x1400078df
   1400078c5:	and    eax,0x1fff0000
   1400078ca:	cmp    eax,0x10000
   1400078cf:	jne    0x1400078d9
   1400078d1:	mov    eax,ecx
   1400078d3:	mov    DWORD PTR [rsp+0x30],ecx
   1400078d7:	jmp    0x1400078f0
   1400078d9:	bts    ecx,0x1c
   1400078dd:	jmp    0x1400078d1
   1400078df:	movzx  eax,ax
   1400078e2:	or     eax,0x80070000
   1400078e7:	test   ecx,ecx
   1400078e9:	cmovle eax,ecx
   1400078ec:	mov    DWORD PTR [rsp+0x30],eax
   1400078f0:	add    rsp,0x58
   1400078f4:	ret    
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	int3   
   1400078f9:	int3   
   1400078fa:	int3   
   1400078fb:	int3   
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	sub    rsp,0x38
   140007904:	mov    r9,QWORD PTR [rcx+0x8]
   140007908:	xor    r8d,r8d
   14000790b:	lea    edx,[r8+0x4]
   14000790f:	lea    rcx,[rip+0x5fca]        # 0x14000d8e0
   140007916:	call   QWORD PTR [rip+0x384c]        # 0x14000b168
   14000791c:	mov    QWORD PTR [rsp+0x50],rax
   140007921:	mov    DWORD PTR [rsp+0x20],eax
   140007925:	test   eax,eax
   140007927:	js     0x140007960
   140007929:	xor    eax,eax
   14000792b:	jmp    0x140007960
   14000792d:	mov    ecx,eax
   14000792f:	test   eax,eax
   140007931:	je     0x14000795c
   140007933:	jns    0x14000794f
   140007935:	and    eax,0x1fff0000
   14000793a:	cmp    eax,0x10000
   14000793f:	jne    0x140007949
   140007941:	mov    eax,ecx
   140007943:	mov    DWORD PTR [rsp+0x20],ecx
   140007947:	jmp    0x140007960
   140007949:	bts    ecx,0x1c
   14000794d:	jmp    0x140007941
   14000794f:	movzx  eax,ax
   140007952:	or     eax,0x80070000
   140007957:	test   ecx,ecx
   140007959:	cmovle eax,ecx
   14000795c:	mov    DWORD PTR [rsp+0x20],eax
   140007960:	add    rsp,0x38
   140007964:	ret    
   140007965:	int3   
   140007966:	int3   
   140007967:	int3   
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	sub    rsp,0x48
   140007974:	mov    DWORD PTR [rsp+0x28],r9d
   140007979:	mov    QWORD PTR [rsp+0x20],r8
   14000797e:	mov    r9,QWORD PTR [rcx+0x8]
   140007982:	xor    r8d,r8d
   140007985:	lea    edx,[r8+0x5]
   140007989:	lea    rcx,[rip+0x5f50]        # 0x14000d8e0
   140007990:	call   QWORD PTR [rip+0x37d2]        # 0x14000b168
   140007996:	mov    QWORD PTR [rsp+0x38],rax
   14000799b:	mov    DWORD PTR [rsp+0x30],eax
   14000799f:	test   eax,eax
   1400079a1:	js     0x1400079da
   1400079a3:	xor    eax,eax
   1400079a5:	jmp    0x1400079da
   1400079a7:	mov    ecx,eax
   1400079a9:	test   eax,eax
   1400079ab:	je     0x1400079d6
   1400079ad:	jns    0x1400079c9
   1400079af:	and    eax,0x1fff0000
   1400079b4:	cmp    eax,0x10000
   1400079b9:	jne    0x1400079c3
   1400079bb:	mov    eax,ecx
   1400079bd:	mov    DWORD PTR [rsp+0x30],ecx
   1400079c1:	jmp    0x1400079da
   1400079c3:	bts    ecx,0x1c
   1400079c7:	jmp    0x1400079bb
   1400079c9:	movzx  eax,ax
   1400079cc:	or     eax,0x80070000
   1400079d1:	test   ecx,ecx
   1400079d3:	cmovle eax,ecx
   1400079d6:	mov    DWORD PTR [rsp+0x30],eax
   1400079da:	add    rsp,0x48
   1400079de:	ret    
   1400079df:	int3   
   1400079e0:	int3   
   1400079e1:	int3   
   1400079e2:	int3   
   1400079e3:	int3   
   1400079e4:	int3   
   1400079e5:	int3   
   1400079e6:	int3   
   1400079e7:	int3   
   1400079e8:	int3   
   1400079e9:	int3   
   1400079ea:	int3   
   1400079eb:	int3   
   1400079ec:	int3   
   1400079ed:	int3   
   1400079ee:	int3   
   1400079ef:	int3   
   1400079f0:	sub    rsp,0x38
   1400079f4:	mov    r9,QWORD PTR [rcx+0x8]
   1400079f8:	xor    r8d,r8d
   1400079fb:	lea    edx,[r8+0x6]
   1400079ff:	lea    rcx,[rip+0x5eda]        # 0x14000d8e0
   140007a06:	call   QWORD PTR [rip+0x375c]        # 0x14000b168
   140007a0c:	mov    QWORD PTR [rsp+0x50],rax
   140007a11:	mov    DWORD PTR [rsp+0x20],eax
   140007a15:	test   eax,eax
   140007a17:	js     0x140007a50
   140007a19:	xor    eax,eax
   140007a1b:	jmp    0x140007a50
   140007a1d:	mov    ecx,eax
   140007a1f:	test   eax,eax
   140007a21:	je     0x140007a4c
   140007a23:	jns    0x140007a3f
   140007a25:	and    eax,0x1fff0000
   140007a2a:	cmp    eax,0x10000
   140007a2f:	jne    0x140007a39
   140007a31:	mov    eax,ecx
   140007a33:	mov    DWORD PTR [rsp+0x20],ecx
   140007a37:	jmp    0x140007a50
   140007a39:	bts    ecx,0x1c
   140007a3d:	jmp    0x140007a31
   140007a3f:	movzx  eax,ax
   140007a42:	or     eax,0x80070000
   140007a47:	test   ecx,ecx
   140007a49:	cmovle eax,ecx
   140007a4c:	mov    DWORD PTR [rsp+0x20],eax
   140007a50:	add    rsp,0x38
   140007a54:	ret    
   140007a55:	int3   
   140007a56:	int3   
   140007a57:	int3   
   140007a58:	int3   
   140007a59:	int3   
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	mov    QWORD PTR [rsp+0x8],rbx
   140007a65:	mov    QWORD PTR [rsp+0x10],rsi
   140007a6a:	push   rdi
   140007a6b:	sub    rsp,0x20
   140007a6f:	lea    rdi,[rcx+0x10]
   140007a73:	mov    esi,edx
   140007a75:	cmp    QWORD PTR [rdi],0x0
   140007a79:	lea    rax,[rip+0x3dc8]        # 0x14000b848
   140007a80:	mov    rbx,rcx
   140007a83:	mov    QWORD PTR [rcx],rax
   140007a86:	je     0x140007a95
   140007a88:	mov    rcx,rdi
   140007a8b:	call   QWORD PTR [rip+0x36a7]        # 0x14000b138
   140007a91:	and    QWORD PTR [rdi],0x0
   140007a95:	lea    rdi,[rbx+0x8]
   140007a99:	cmp    QWORD PTR [rdi],0x0
   140007a9d:	je     0x140007aac
   140007a9f:	mov    rcx,rdi
   140007aa2:	call   QWORD PTR [rip+0x36a8]        # 0x14000b150
   140007aa8:	and    QWORD PTR [rdi],0x0
   140007aac:	lea    rax,[rip+0x3ded]        # 0x14000b8a0
   140007ab3:	mov    QWORD PTR [rbx],rax
   140007ab6:	test   sil,0x1
   140007aba:	je     0x140007ac4
   140007abc:	mov    rcx,rbx
   140007abf:	call   0x140008708
   140007ac4:	mov    rsi,QWORD PTR [rsp+0x38]
   140007ac9:	mov    rax,rbx
   140007acc:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ad1:	add    rsp,0x20
   140007ad5:	pop    rdi
   140007ad6:	ret    
   140007ad7:	int3   
   140007ad8:	int3   
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	mov    QWORD PTR [rsp+0x18],rbx
   140007ae5:	push   rbp
   140007ae6:	mov    rbp,rsp
   140007ae9:	sub    rsp,0x30
   140007aed:	and    QWORD PTR [rbp+0x18],0x0
   140007af2:	mov    rbx,rcx
   140007af5:	and    QWORD PTR [rbp+0x10],0x0
   140007afa:	cmp    QWORD PTR [rcx+0x10],0x0
   140007aff:	je     0x140007b08
   140007b01:	xor    ebx,ebx
   140007b03:	jmp    0x140007b90
   140007b08:	lea    rax,[rbp+0x10]
   140007b0c:	xor    r9d,r9d
   140007b0f:	mov    QWORD PTR [rsp+0x28],rax
   140007b14:	lea    rdx,[rip+0x5a3d]        # 0x14000d558
   140007b1b:	and    QWORD PTR [rsp+0x20],0x0
   140007b21:	xor    r8d,r8d
   140007b24:	xor    ecx,ecx
   140007b26:	call   QWORD PTR [rip+0x361c]        # 0x14000b148
   140007b2c:	test   eax,eax
   140007b2e:	jne    0x140007b42
   140007b30:	mov    rcx,QWORD PTR [rbp+0x10]
   140007b34:	lea    rdx,[rbp+0x18]
   140007b38:	call   QWORD PTR [rip+0x3602]        # 0x14000b140
   140007b3e:	test   eax,eax
   140007b40:	je     0x140007b52
   140007b42:	movzx  ebx,ax
   140007b45:	or     ebx,0x80070000
   140007b4b:	test   eax,eax
   140007b4d:	cmovle ebx,eax
   140007b50:	jmp    0x140007b6e
   140007b52:	mov    rax,QWORD PTR [rbp+0x18]
   140007b56:	and    QWORD PTR [rbp+0x18],0x0
   140007b5b:	mov    QWORD PTR [rbx+0x8],rax
   140007b5f:	mov    rax,QWORD PTR [rbp+0x10]
   140007b63:	and    QWORD PTR [rbp+0x10],0x0
   140007b68:	mov    QWORD PTR [rbx+0x10],rax
   140007b6c:	xor    ebx,ebx
   140007b6e:	cmp    QWORD PTR [rbp+0x10],0x0
   140007b73:	je     0x140007b7f
   140007b75:	lea    rcx,[rbp+0x10]
   140007b79:	call   QWORD PTR [rip+0x35b9]        # 0x14000b138
   140007b7f:	cmp    QWORD PTR [rbp+0x18],0x0
   140007b84:	je     0x140007b90
   140007b86:	lea    rcx,[rbp+0x18]
   140007b8a:	call   QWORD PTR [rip+0x35c0]        # 0x14000b150
   140007b90:	mov    eax,ebx
   140007b92:	mov    rbx,QWORD PTR [rsp+0x50]
   140007b97:	add    rsp,0x30
   140007b9b:	pop    rbp
   140007b9c:	ret    
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	int3   
   140007ba1:	int3   
   140007ba2:	int3   
   140007ba3:	int3   
   140007ba4:	mov    QWORD PTR [rsp+0x8],rbx
   140007ba9:	mov    QWORD PTR [rsp+0x10],rsi
   140007bae:	mov    QWORD PTR [rsp+0x18],rdi
   140007bb3:	push   r14
   140007bb5:	sub    rsp,0x20
   140007bb9:	mov    r14,rcx
   140007bbc:	mov    ecx,0x18
   140007bc1:	call   0x140008714
   140007bc6:	mov    rdi,rax
   140007bc9:	test   rax,rax
   140007bcc:	je     0x140007be4
   140007bce:	and    QWORD PTR [rdi+0x8],0x0
   140007bd3:	lea    rax,[rip+0x3c6e]        # 0x14000b848
   140007bda:	and    QWORD PTR [rdi+0x10],0x0
   140007bdf:	mov    QWORD PTR [rdi],rax
   140007be2:	jmp    0x140007be6
   140007be4:	xor    edi,edi
   140007be6:	test   rdi,rdi
   140007be9:	jne    0x140007bf2
   140007beb:	mov    eax,0x8007000e
   140007bf0:	jmp    0x140007c33
   140007bf2:	mov    rax,QWORD PTR [rdi]
   140007bf5:	mov    rbx,QWORD PTR [rax+0x48]
   140007bf9:	mov    rcx,rbx
   140007bfc:	call   QWORD PTR [rip+0x3976]        # 0x14000b578
   140007c02:	mov    rcx,rdi
   140007c05:	call   rbx
   140007c07:	mov    esi,eax
   140007c09:	test   eax,eax
   140007c0b:	jne    0x140007c12
   140007c0d:	mov    QWORD PTR [r14],rdi
   140007c10:	xor    edi,edi
   140007c12:	test   rdi,rdi
   140007c15:	je     0x140007c31
   140007c17:	mov    rdx,QWORD PTR [rdi]
   140007c1a:	mov    rbx,QWORD PTR [rdx+0x50]
   140007c1e:	mov    rcx,rbx
   140007c21:	call   QWORD PTR [rip+0x3951]        # 0x14000b578
   140007c27:	mov    edx,0x1
   140007c2c:	mov    rcx,rdi
   140007c2f:	call   rbx
   140007c31:	mov    eax,esi
   140007c33:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c38:	mov    rsi,QWORD PTR [rsp+0x38]
   140007c3d:	mov    rdi,QWORD PTR [rsp+0x40]
   140007c42:	add    rsp,0x20
   140007c46:	pop    r14
   140007c48:	ret    
   140007c49:	int3   
   140007c4a:	int3   
   140007c4b:	int3   
   140007c4c:	int3   
   140007c4d:	int3   
   140007c4e:	int3   
   140007c4f:	int3   
   140007c50:	rex push rbx
   140007c52:	sub    rsp,0x40
   140007c56:	and    QWORD PTR [rsp+0x50],0x0
   140007c5c:	lea    rax,[rsp+0x50]
   140007c61:	mov    r9d,0x3
   140007c67:	mov    QWORD PTR [rsp+0x20],rax
   140007c6c:	xor    r8d,r8d
   140007c6f:	lea    rdx,[rip+0x594a]        # 0x14000d5c0
   140007c76:	mov    rcx,0xffffffff80000002
   140007c7d:	call   QWORD PTR [rip+0x367d]        # 0x14000b300
   140007c83:	mov    ebx,eax
   140007c85:	test   eax,eax
   140007c87:	je     0x140007cb3
   140007c89:	lea    rax,[rip+0x4570]        # 0x14000c200
   140007c90:	mov    QWORD PTR [rsp+0x30],rax
   140007c95:	lea    rax,[rip+0x5a34]        # 0x14000d6d0
   140007c9c:	mov    QWORD PTR [rsp+0x28],rax
   140007ca1:	mov    DWORD PTR [rsp+0x20],0x9e
   140007ca9:	mov    r8d,ebx
   140007cac:	mov    ecx,0x1
   140007cb1:	jmp    0x140007d08
   140007cb3:	mov    rcx,QWORD PTR [rsp+0x50]
   140007cb8:	lea    rdx,[rip+0x58b1]        # 0x14000d570
   140007cbf:	call   QWORD PTR [rip+0x3643]        # 0x14000b308
   140007cc5:	mov    ebx,eax
   140007cc7:	test   eax,eax
   140007cc9:	lea    rax,[rip+0x4530]        # 0x14000c200
   140007cd0:	mov    QWORD PTR [rsp+0x30],rax
   140007cd5:	je     0x140007ced
   140007cd7:	lea    rax,[rip+0x5102]        # 0x14000cde0
   140007cde:	mov    QWORD PTR [rsp+0x28],rax
   140007ce3:	mov    DWORD PTR [rsp+0x20],0xa4
   140007ceb:	jmp    0x140007ca9
   140007ced:	xor    r8d,r8d
   140007cf0:	lea    rax,[rip+0x5a49]        # 0x14000d740
   140007cf7:	mov    QWORD PTR [rsp+0x28],rax
   140007cfc:	mov    DWORD PTR [rsp+0x20],0xa6
   140007d04:	lea    ecx,[r8+0x4]
   140007d08:	lea    r9,[rip+0x5961]        # 0x14000d670
   140007d0f:	lea    rdx,[rip+0x3f4a]        # 0x14000bc60
   140007d16:	call   0x140005910
   140007d1b:	mov    rcx,QWORD PTR [rsp+0x50]
   140007d20:	test   rcx,rcx
   140007d23:	je     0x140007d2b
   140007d25:	call   QWORD PTR [rip+0x35cd]        # 0x14000b2f8
   140007d2b:	mov    eax,ebx
   140007d2d:	add    rsp,0x40
   140007d31:	pop    rbx
   140007d32:	ret    
   140007d33:	int3   
   140007d34:	int3   
   140007d35:	int3   
   140007d36:	int3   
   140007d37:	int3   
   140007d38:	int3   
   140007d39:	int3   
   140007d3a:	int3   
   140007d3b:	int3   
   140007d3c:	mov    rax,rsp
   140007d3f:	mov    DWORD PTR [rax+0x10],edx
   140007d42:	push   rbp
   140007d43:	push   rbx
   140007d44:	push   rdi
   140007d45:	mov    rbp,rsp
   140007d48:	sub    rsp,0x50
   140007d4c:	and    QWORD PTR [rax-0x38],0x0
   140007d51:	xor    r9d,r9d
   140007d54:	or     QWORD PTR [rbp-0x10],0xffffffffffffffff
   140007d59:	mov    edx,0x80000000
   140007d5e:	mov    DWORD PTR [rax-0x40],0x80
   140007d65:	mov    rdi,rcx
   140007d68:	mov    BYTE PTR [rbp+0x28],0x0
   140007d6c:	lea    r8d,[r9+0x1]
   140007d70:	mov    DWORD PTR [rax-0x48],0x3
   140007d77:	call   QWORD PTR [rip+0x34e3]        # 0x14000b260
   140007d7d:	mov    QWORD PTR [rbp-0x10],rax
   140007d81:	cmp    rax,0xffffffffffffffff
   140007d85:	jne    0x140007dbb
   140007d87:	call   QWORD PTR [rip+0x3353]        # 0x14000b0e0
   140007d8d:	mov    ebx,eax
   140007d8f:	test   rdi,rdi
   140007d92:	lea    rax,[rip+0x4467]        # 0x14000c200
   140007d99:	cmovne rax,rdi
   140007d9d:	mov    QWORD PTR [rsp+0x30],rax
   140007da2:	lea    rax,[rip+0x59ff]        # 0x14000d7a8
   140007da9:	mov    QWORD PTR [rsp+0x28],rax
   140007dae:	mov    DWORD PTR [rsp+0x20],0xf1
   140007db6:	jmp    0x140007e6f
   140007dbb:	and    QWORD PTR [rsp+0x28],0x0
   140007dc1:	lea    r8,[rbp+0x28]
   140007dc5:	and    QWORD PTR [rsp+0x20],0x0
   140007dcb:	lea    rdx,[rbp+0x30]
   140007dcf:	xor    r9d,r9d
   140007dd2:	mov    rcx,rax
   140007dd5:	call   QWORD PTR [rip+0x36f5]        # 0x14000b4d0
   140007ddb:	mov    ebx,eax
   140007ddd:	test   eax,eax
   140007ddf:	je     0x140007e0a
   140007de1:	test   rdi,rdi
   140007de4:	lea    rax,[rip+0x4415]        # 0x14000c200
   140007deb:	cmovne rax,rdi
   140007def:	mov    QWORD PTR [rsp+0x30],rax
   140007df4:	lea    rax,[rip+0x59d5]        # 0x14000d7d0
   140007dfb:	mov    QWORD PTR [rsp+0x28],rax
   140007e00:	mov    DWORD PTR [rsp+0x20],0x106
   140007e08:	jmp    0x140007e6f
   140007e0a:	mov    r8d,0x8
   140007e10:	cmp    BYTE PTR [rbp+0x28],r8b
   140007e14:	jae    0x140007e8a
   140007e16:	and    DWORD PTR [rbp+0x3c],0x0
   140007e1a:	lea    rdx,[rbp+0x38]
   140007e1e:	xor    r9d,r9d
   140007e21:	mov    DWORD PTR [rbp+0x38],r8d
   140007e25:	lea    ecx,[r8+0x5f]
   140007e29:	call   QWORD PTR [rip+0x36a9]        # 0x14000b4d8
   140007e2f:	test   eax,eax
   140007e31:	js     0x140007e43
   140007e33:	test   BYTE PTR [rbp+0x3c],0x2
   140007e37:	je     0x140007e43
   140007e39:	cmp    BYTE PTR [rbp+0x28],0x4
   140007e3d:	jne    0x140007e43
   140007e3f:	xor    ebx,ebx
   140007e41:	jmp    0x140007e48
   140007e43:	mov    ebx,0x241
   140007e48:	test   rdi,rdi
   140007e4b:	lea    rax,[rip+0x43ae]        # 0x14000c200
   140007e52:	cmovne rax,rdi
   140007e56:	mov    QWORD PTR [rsp+0x30],rax
   140007e5b:	lea    rax,[rip+0x599e]        # 0x14000d800
   140007e62:	mov    QWORD PTR [rsp+0x28],rax
   140007e67:	mov    DWORD PTR [rsp+0x20],0x113
   140007e6f:	lea    r9,[rip+0x57fa]        # 0x14000d670
   140007e76:	mov    r8d,ebx
   140007e79:	lea    rdx,[rip+0x3de0]        # 0x14000bc60
   140007e80:	mov    ecx,0x1
   140007e85:	call   0x140005910
   140007e8a:	mov    rcx,QWORD PTR [rbp-0x10]
   140007e8e:	cmp    rcx,0xffffffffffffffff
   140007e92:	je     0x140007e9a
   140007e94:	call   QWORD PTR [rip+0x3236]        # 0x14000b0d0
   140007e9a:	mov    eax,ebx
   140007e9c:	add    rsp,0x50
   140007ea0:	pop    rdi
   140007ea1:	pop    rbx
   140007ea2:	pop    rbp
   140007ea3:	ret    
   140007ea4:	int3   
   140007ea5:	int3   
   140007ea6:	int3   
   140007ea7:	int3   
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	mov    rax,rsp
   140007eaf:	mov    QWORD PTR [rax+0x10],rbx
   140007eb3:	mov    QWORD PTR [rax+0x18],rsi
   140007eb7:	mov    QWORD PTR [rax+0x20],rdi
   140007ebb:	push   rbp
   140007ebc:	lea    rbp,[rax-0xf68]
   140007ec3:	mov    eax,0x1060
   140007ec8:	call   0x1400093f0
   140007ecd:	sub    rsp,rax
   140007ed0:	mov    rax,QWORD PTR [rip+0x9131]        # 0x140011008
   140007ed7:	xor    rax,rsp
   140007eda:	mov    QWORD PTR [rbp+0xf50],rax
   140007ee1:	mov    rdi,rcx
   140007ee4:	mov    ebx,0x7fe
   140007ee9:	xor    esi,esi
   140007eeb:	lea    rcx,[rsp+0x52]
   140007ef0:	mov    r8d,ebx
   140007ef3:	mov    WORD PTR [rsp+0x50],si
   140007ef8:	xor    edx,edx
   140007efa:	call   0x1400093b2
   140007eff:	mov    r8d,ebx
   140007f02:	mov    DWORD PTR [rdi],esi
   140007f04:	xor    edx,edx
   140007f06:	mov    WORD PTR [rbp+0x750],si
   140007f0d:	lea    rcx,[rbp+0x752]
   140007f14:	call   0x1400093b2
   140007f19:	lea    rax,[rsp+0x40]
   140007f1e:	mov    DWORD PTR [rsp+0x40],0x400
   140007f26:	mov    QWORD PTR [rsp+0x30],rax
   140007f2b:	lea    r9d,[rsi+0x2]
   140007f2f:	lea    rax,[rbp+0x750]
   140007f36:	mov    rcx,0xffffffff80000002
   140007f3d:	mov    QWORD PTR [rsp+0x28],rax
   140007f42:	lea    r8,[rip+0x5627]        # 0x14000d570
   140007f49:	lea    rdx,[rip+0x5670]        # 0x14000d5c0
   140007f50:	mov    QWORD PTR [rsp+0x20],rsi
   140007f55:	call   QWORD PTR [rip+0x30ad]        # 0x14000b008
   140007f5b:	mov    ebx,eax
   140007f5d:	test   eax,eax
   140007f5f:	je     0x140007f8c
   140007f61:	lea    rcx,[rip+0x4298]        # 0x14000c200
   140007f68:	mov    r8d,ebx
   140007f6b:	mov    QWORD PTR [rsp+0x30],rcx
   140007f70:	lea    rax,[rip+0x5699]        # 0x14000d610
   140007f77:	mov    QWORD PTR [rsp+0x28],rax
   140007f7c:	lea    ecx,[rsi+0x1]
   140007f7f:	mov    DWORD PTR [rsp+0x20],0x5e
   140007f87:	jmp    0x140008023
   140007f8c:	mov    edx,0x10
   140007f91:	lea    rax,[rsp+0x50]
   140007f96:	lea    rcx,[rbp+0x750]
   140007f9d:	lea    r8d,[rdx+0x70]
   140007fa1:	movups xmm0,XMMWORD PTR [rcx]
   140007fa4:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140007fa8:	movups XMMWORD PTR [rax],xmm0
   140007fab:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140007faf:	movups XMMWORD PTR [rax+0x10],xmm1
   140007fb3:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140007fb7:	movups XMMWORD PTR [rax+0x20],xmm0
   140007fbb:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140007fbf:	movups XMMWORD PTR [rax+0x30],xmm1
   140007fc3:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140007fc7:	movups XMMWORD PTR [rax+0x40],xmm0
   140007fcb:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140007fcf:	movups XMMWORD PTR [rax+0x50],xmm1
   140007fd3:	movups xmm1,XMMWORD PTR [rcx+0x70]
   140007fd7:	add    rcx,r8
   140007fda:	movups XMMWORD PTR [rax+0x60],xmm0
   140007fde:	add    rax,r8
   140007fe1:	movups XMMWORD PTR [rax-0x10],xmm1
   140007fe5:	sub    rdx,0x1
   140007fe9:	jne    0x140007fa1
   140007feb:	lea    rcx,[rip+0x420e]        # 0x14000c200
   140007ff2:	lea    rdx,[rsp+0x50]
   140007ff7:	test   rdx,rdx
   140007ffa:	lea    rax,[rsp+0x50]
   140007fff:	cmove  rax,rcx
   140008003:	xor    r8d,r8d
   140008006:	mov    QWORD PTR [rsp+0x30],rax
   14000800b:	lea    rax,[rip+0x55fe]        # 0x14000d610
   140008012:	mov    QWORD PTR [rsp+0x28],rax
   140008017:	mov    DWORD PTR [rsp+0x20],0x62
   14000801f:	lea    ecx,[r8+0x4]
   140008023:	lea    r9,[rip+0x5646]        # 0x14000d670
   14000802a:	lea    rdx,[rip+0x3c2f]        # 0x14000bc60
   140008031:	call   0x140005910
   140008036:	test   ebx,ebx
   140008038:	jne    0x14000805b
   14000803a:	lea    rcx,[rsp+0x50]
   14000803f:	or     rax,0xffffffffffffffff
   140008043:	inc    rax
   140008046:	cmp    WORD PTR [rcx+rax*2],si
   14000804a:	jne    0x140008043
   14000804c:	test   rax,rax
   14000804f:	mov    ecx,0xd
   140008054:	cmove  ebx,ecx
   140008057:	test   ebx,ebx
   140008059:	je     0x140008065
   14000805b:	lea    eax,[rbx-0x2]
   14000805e:	cmp    eax,0x1
   140008061:	ja     0x140008086
   140008063:	jmp    0x14000807e
   140008065:	lea    rcx,[rsp+0x50]
   14000806a:	call   0x140007d3c
   14000806f:	mov    ebx,eax
   140008071:	lea    ecx,[rax-0x2]
   140008074:	cmp    ecx,0x1
   140008077:	ja     0x140008086
   140008079:	call   0x140007c50
   14000807e:	mov    DWORD PTR [rdi],0x1
   140008084:	mov    ebx,esi
   140008086:	mov    eax,ebx
   140008088:	mov    rcx,QWORD PTR [rbp+0xf50]
   14000808f:	xor    rcx,rsp
   140008092:	call   0x140008aa0
   140008097:	lea    r11,[rsp+0x1060]
   14000809f:	mov    rbx,QWORD PTR [r11+0x18]
   1400080a3:	mov    rsi,QWORD PTR [r11+0x20]
   1400080a7:	mov    rdi,QWORD PTR [r11+0x28]
   1400080ab:	mov    rsp,r11
   1400080ae:	pop    rbp
   1400080af:	ret    
   1400080b0:	int3   
   1400080b1:	int3   
   1400080b2:	int3   
   1400080b3:	int3   
   1400080b4:	int3   
   1400080b5:	int3   
   1400080b6:	int3   
   1400080b7:	int3   
   1400080b8:	int3   
   1400080b9:	int3   
   1400080ba:	int3   
   1400080bb:	int3   
   1400080bc:	int3   
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	rex push rbx
   1400080c2:	sub    rsp,0x20
   1400080c6:	mov    rbx,rcx
   1400080c9:	call   QWORD PTR [rip+0x3041]        # 0x14000b110
   1400080cf:	mov    r8,rbx
   1400080d2:	mov    edx,0x8
   1400080d7:	mov    rcx,rax
   1400080da:	add    rsp,0x20
   1400080de:	pop    rbx
   1400080df:	rex.W jmp QWORD PTR [rip+0x2fda]        # 0x14000b0c0
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	int3   
   1400080e9:	int3   
   1400080ea:	int3   
   1400080eb:	int3   
   1400080ec:	int3   
   1400080ed:	int3   
   1400080ee:	int3   
   1400080ef:	int3   
   1400080f0:	rex push rbx
   1400080f2:	sub    rsp,0x20
   1400080f6:	mov    rbx,rcx
   1400080f9:	call   QWORD PTR [rip+0x3011]        # 0x14000b110
   1400080ff:	mov    r8,rbx
   140008102:	xor    edx,edx
   140008104:	mov    rcx,rax
   140008107:	add    rsp,0x20
   14000810b:	pop    rbx
   14000810c:	rex.W jmp QWORD PTR [rip+0x2fa5]        # 0x14000b0b8
   140008113:	int3   
   140008114:	int3   
   140008115:	int3   
   140008116:	int3   
   140008117:	int3   
   140008118:	int3   
   140008119:	int3   
   14000811a:	int3   
   14000811b:	int3   
   14000811c:	int3   
   14000811d:	int3   
   14000811e:	int3   
   14000811f:	int3   
   140008120:	mov    QWORD PTR [rsp+0x8],rbx
   140008125:	push   rdi
   140008126:	sub    rsp,0x20
   14000812a:	mov    r10,QWORD PTR [rsp+0x60]
   14000812f:	xor    edi,edi
   140008131:	test   r10,r10
   140008134:	je     0x14000822a
   14000813a:	test   edx,edx
   14000813c:	je     0x1400081e7
   140008142:	sub    edx,0x1
   140008145:	jne    0x14000822a
   14000814b:	mov    r11d,edi
   14000814e:	mov    rax,QWORD PTR [rsp+0x50]
   140008153:	mov    QWORD PTR [r10+0x10],r9
   140008157:	lea    r9d,[rdi+0x1]
   14000815b:	mov    DWORD PTR [r10+0x24],r9d
   14000815f:	mov    BYTE PTR [r10+0x28],r8b
   140008163:	mov    QWORD PTR [r10+0x18],rax
   140008167:	cmp    di,WORD PTR [r10+0x2a]
   14000816c:	jae    0x14000822a
   140008172:	mov    rax,QWORD PTR [r10+0x38]
   140008176:	mov    dl,BYTE PTR [r10+0x28]
   14000817a:	mov    ebx,r11d
   14000817d:	mov    rcx,QWORD PTR [rax+rbx*8]
   140008181:	mov    rax,QWORD PTR [r10+0x40]
   140008185:	cmp    BYTE PTR [rbx+rax*1],dl
   140008188:	jbe    0x14000818e
   14000818a:	test   dl,dl
   14000818c:	jne    0x1400081a6
   14000818e:	test   rcx,rcx
   140008191:	je     0x1400081c1
   140008193:	test   QWORD PTR [r10+0x10],rcx
   140008197:	je     0x1400081a6
   140008199:	mov    rax,QWORD PTR [r10+0x18]
   14000819d:	and    rax,rcx
   1400081a0:	cmp    rax,QWORD PTR [r10+0x18]
   1400081a4:	je     0x1400081c1
   1400081a6:	mov    r8,QWORD PTR [r10+0x30]
   1400081aa:	mov    ecx,r11d
   1400081ad:	and    ecx,0x1f
   1400081b0:	shr    rbx,0x5
   1400081b4:	mov    edx,r9d
   1400081b7:	shl    edx,cl
   1400081b9:	not    edx
   1400081bb:	and    DWORD PTR [r8+rbx*4],edx
   1400081bf:	jmp    0x1400081d8
   1400081c1:	mov    r8,QWORD PTR [r10+0x30]
   1400081c5:	mov    ecx,r11d
   1400081c8:	and    ecx,0x1f
   1400081cb:	shr    rbx,0x5
   1400081cf:	mov    edx,r9d
   1400081d2:	shl    edx,cl
   1400081d4:	or     DWORD PTR [r8+rbx*4],edx
   1400081d8:	movzx  eax,WORD PTR [r10+0x2a]
   1400081dd:	add    r11d,r9d
   1400081e0:	cmp    r11d,eax
   1400081e3:	jb     0x140008172
   1400081e5:	jmp    0x14000822a
   1400081e7:	mov    DWORD PTR [r10+0x24],edi
   1400081eb:	mov    BYTE PTR [r10+0x28],dil
   1400081ef:	mov    QWORD PTR [r10+0x10],rdi
   1400081f3:	mov    QWORD PTR [r10+0x18],rdi
   1400081f7:	cmp    WORD PTR [r10+0x2a],di
   1400081fc:	jbe    0x14000822a
   1400081fe:	movzx  eax,WORD PTR [r10+0x2a]
   140008203:	mov    r9d,0x1
   140008209:	mov    rcx,QWORD PTR [r10+0x30]
   14000820d:	sub    eax,r9d
   140008210:	cdq    
   140008211:	and    edx,0x1f
   140008214:	add    eax,edx
   140008216:	xor    edx,edx
   140008218:	sar    eax,0x5
   14000821b:	add    eax,r9d
   14000821e:	movsxd r8,eax
   140008221:	shl    r8,0x2
   140008225:	call   0x1400093b2
   14000822a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000822f:	add    rsp,0x20
   140008233:	pop    rdi
   140008234:	ret    
   140008235:	int3   
   140008236:	int3   
   140008237:	int3   
   140008238:	int3   
   140008239:	int3   
   14000823a:	int3   
   14000823b:	int3   
   14000823c:	cmp    QWORD PTR [rip+0x9a74],0x0        # 0x140011cb8
   140008244:	je     0x140008249
   140008246:	xor    eax,eax
   140008248:	ret    
   140008249:	lea    r9,[rip+0x9a68]        # 0x140011cb8
   140008250:	lea    r8,[rip+0x91a9]        # 0x140011400
   140008257:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140008120
   14000825e:	lea    rcx,[rip+0x6163]        # 0x14000e3c8
   140008265:	rex.W jmp QWORD PTR [rip+0x2e04]        # 0x14000b070
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	int3   
   140008271:	int3   
   140008272:	int3   
   140008273:	int3   
   140008274:	sub    rsp,0x28
   140008278:	mov    rcx,QWORD PTR [rip+0x9a39]        # 0x140011cb8
   14000827f:	test   rcx,rcx
   140008282:	jne    0x140008288
   140008284:	xor    eax,eax
   140008286:	jmp    0x140008296
   140008288:	call   QWORD PTR [rip+0x2dda]        # 0x14000b068
   14000828e:	and    QWORD PTR [rip+0x9a22],0x0        # 0x140011cb8
   140008296:	add    rsp,0x28
   14000829a:	ret    
   14000829b:	int3   
   14000829c:	int3   
   14000829d:	int3   
   14000829e:	int3   
   14000829f:	int3   
   1400082a0:	int3   
   1400082a1:	int3   
   1400082a2:	int3   
   1400082a3:	int3   
   1400082a4:	mov    r11,rsp
   1400082a7:	mov    DWORD PTR [r11+0x20],r9d
   1400082ab:	sub    rsp,0x48
   1400082af:	and    QWORD PTR [r11-0x18],0x0
   1400082b4:	lea    rax,[r11+0x20]
   1400082b8:	movzx  r9d,dx
   1400082bc:	lea    r8,[rip+0x60f5]        # 0x14000e3b8
   1400082c3:	mov    QWORD PTR [r11-0x20],0x4
   1400082cb:	mov    edx,0x2b
   1400082d0:	mov    QWORD PTR [r11-0x28],rax
   1400082d4:	call   QWORD PTR [rip+0x2d26]        # 0x14000b000
   1400082da:	add    rsp,0x48
   1400082de:	ret    
   1400082df:	int3   
   1400082e0:	int3   
   1400082e1:	int3   
   1400082e2:	int3   
   1400082e3:	int3   
   1400082e4:	int3   
   1400082e5:	int3   
   1400082e6:	int3   
   1400082e7:	int3   
   1400082e8:	mov    QWORD PTR [rsp+0x18],rbx
   1400082ed:	push   rbp
   1400082ee:	push   rsi
   1400082ef:	push   rdi
   1400082f0:	push   r12
   1400082f2:	push   r13
   1400082f4:	push   r14
   1400082f6:	push   r15
   1400082f8:	lea    rbp,[rsp-0x1b0]
   140008300:	sub    rsp,0x2b0
   140008307:	mov    rax,QWORD PTR [rip+0x8cfa]        # 0x140011008
   14000830e:	xor    rax,rsp
   140008311:	mov    QWORD PTR [rbp+0x1a0],rax
   140008318:	mov    r15,rdx
   14000831b:	mov    r14,rcx
   14000831e:	mov    rcx,QWORD PTR [rip+0x8cfb]        # 0x140011020
   140008325:	lea    r13,[rip+0x8cf4]        # 0x140011020
   14000832c:	cmp    rcx,r13
   14000832f:	je     0x14000834c
   140008331:	test   BYTE PTR [rcx+0x1c],0x20
   140008335:	je     0x14000834c
   140008337:	mov    rcx,QWORD PTR [rcx+0x10]
   14000833b:	lea    r8,[rip+0x6076]        # 0x14000e3b8
   140008342:	mov    edx,0xf
   140008347:	call   0x140001cb8
   14000834c:	xor    edx,edx
   14000834e:	lea    rcx,[rsp+0x30]
   140008353:	lea    r8d,[rdx+0x58]
   140008357:	call   0x1400093b2
   14000835c:	xor    edx,edx
   14000835e:	lea    rcx,[rbp-0x70]
   140008362:	mov    r8d,0x208
   140008368:	call   0x1400093b2
   14000836d:	xor    r12d,r12d
   140008370:	mov    DWORD PTR [r14],0x1
   140008377:	lea    r9,[rip+0x5fd2]        # 0x14000e350
   14000837e:	mov    DWORD PTR [r15],0x80310020
   140008385:	lea    rax,[rbp-0x70]
   140008389:	mov    edi,0x104
   14000838e:	sub    r9,rax
   140008391:	lea    rcx,[rbp-0x70]
   140008395:	mov    r8d,edi
   140008398:	mov    ebx,r12d
   14000839b:	mov    edx,r12d
   14000839e:	lea    rax,[r8+0x7ffffefa]
   1400083a5:	test   rax,rax
   1400083a8:	je     0x1400083c4
   1400083aa:	movzx  eax,WORD PTR [r9+rcx*1]
   1400083af:	test   ax,ax
   1400083b2:	je     0x1400083c4
   1400083b4:	mov    WORD PTR [rcx],ax
   1400083b7:	inc    rdx
   1400083ba:	add    rcx,0x2
   1400083be:	sub    r8,0x1
   1400083c2:	jne    0x14000839e
   1400083c4:	mov    r9d,0x8007007a
   1400083ca:	test   r8,r8
   1400083cd:	jne    0x1400083d9
   1400083cf:	sub    rcx,0x2
   1400083d3:	mov    ebx,r9d
   1400083d6:	dec    rdx
   1400083d9:	mov    WORD PTR [rcx],r12w
   1400083dd:	lea    rsi,[rbp-0x70]
   1400083e1:	mov    ecx,0x80000000
   1400083e6:	lea    rsi,[rsi+rdx*2]
   1400083ea:	sub    rdi,rdx
   1400083ed:	lea    eax,[rbx+rcx*1]
   1400083f0:	test   ecx,eax
   1400083f2:	jne    0x140008403
   1400083f4:	cmp    ebx,r9d
   1400083f7:	je     0x140008403
   1400083f9:	mov    rdi,QWORD PTR [rsp+0x20]
   1400083fe:	mov    rsi,QWORD PTR [rsp+0x20]
   140008403:	test   ebx,ebx
   140008405:	jne    0x1400085a7
   14000840b:	mov    eax,0xffffffff
   140008410:	cmp    rdi,rax
   140008413:	ja     0x1400084ad
   140008419:	mov    edx,edi
   14000841b:	mov    rcx,rsi
   14000841e:	mov    ebx,r12d
   140008421:	call   QWORD PTR [rip+0x2ce1]        # 0x14000b108
   140008427:	test   eax,eax
   140008429:	jne    0x1400084a2
   14000842b:	call   QWORD PTR [rip+0x2caf]        # 0x14000b0e0
   140008431:	movzx  ebx,ax
   140008434:	or     ebx,0x80070000
   14000843a:	test   eax,eax
   14000843c:	cmovle ebx,eax
   14000843f:	test   ebx,ebx
   140008441:	jne    0x1400085a7
   140008447:	xor    edx,edx
   140008449:	lea    rcx,[rip+0x50f0]        # 0x14000d540
   140008450:	mov    r8d,0x800
   140008456:	call   QWORD PTR [rip+0x2e34]        # 0x14000b290
   14000845c:	mov    rdi,rax
   14000845f:	test   rax,rax
   140008462:	jne    0x1400084b7
   140008464:	mov    rcx,QWORD PTR [rip+0x8bb5]        # 0x140011020
   14000846b:	cmp    rcx,r13
   14000846e:	je     0x140008489
   140008470:	test   BYTE PTR [rcx+0x1c],0x8
   140008474:	je     0x140008489
   140008476:	mov    rcx,QWORD PTR [rcx+0x10]
   14000847a:	lea    edx,[rbx+0x10]
   14000847d:	lea    r8,[rip+0x5f34]        # 0x14000e3b8
   140008484:	call   0x140001cb8
   140008489:	call   QWORD PTR [rip+0x2c51]        # 0x14000b0e0
   14000848f:	movzx  ebx,ax
   140008492:	or     ebx,0x80070000
   140008498:	test   eax,eax
   14000849a:	cmovle ebx,eax
   14000849d:	jmp    0x1400085a7
   1400084a2:	cmp    eax,edi
   1400084a4:	ja     0x14000843f
   1400084a6:	mov    WORD PTR [rsi+0x4],r12w
   1400084ab:	jmp    0x14000843f
   1400084ad:	mov    ebx,0x80070216
   1400084b2:	jmp    0x1400085a7
   1400084b7:	lea    rdx,[rip+0x5ea2]        # 0x14000e360
   1400084be:	mov    rcx,rax
   1400084c1:	call   QWORD PTR [rip+0x2dc1]        # 0x14000b288
   1400084c7:	mov    rbx,rax
   1400084ca:	test   rax,rax
   1400084cd:	jne    0x14000850d
   1400084cf:	mov    rcx,QWORD PTR [rip+0x8b4a]        # 0x140011020
   1400084d6:	cmp    rcx,r13
   1400084d9:	je     0x1400084f4
   1400084db:	test   BYTE PTR [rcx+0x1c],0x8
   1400084df:	je     0x1400084f4
   1400084e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084e5:	lea    edx,[rax+0x11]
   1400084e8:	lea    r8,[rip+0x5ec9]        # 0x14000e3b8
   1400084ef:	call   0x140001cb8
   1400084f4:	call   QWORD PTR [rip+0x2be6]        # 0x14000b0e0
   1400084fa:	movzx  ebx,ax
   1400084fd:	or     ebx,0x80070000
   140008503:	test   eax,eax
   140008505:	cmovle ebx,eax
   140008508:	jmp    0x14000859e
   14000850d:	mov    rcx,rax
   140008510:	mov    DWORD PTR [rsp+0x30],0x58
   140008518:	mov    DWORD PTR [rsp+0x34],0x5
   140008520:	call   QWORD PTR [rip+0x3052]        # 0x14000b578
   140008526:	lea    rdx,[rsp+0x30]
   14000852b:	lea    rcx,[rbp-0x70]
   14000852f:	call   rbx
   140008531:	mov    ebx,eax
   140008533:	test   eax,eax
   140008535:	jne    0x14000859e
   140008537:	mov    eax,DWORD PTR [rsp+0x3c]
   14000853b:	test   al,0x1
   14000853d:	je     0x14000859e
   14000853f:	bt     eax,0xc
   140008543:	jae    0x14000855c
   140008545:	mov    rcx,QWORD PTR [rip+0x8ad4]        # 0x140011020
   14000854c:	cmp    rcx,r13
   14000854f:	je     0x140008594
   140008551:	test   BYTE PTR [rcx+0x1c],0x8
   140008555:	je     0x140008594
   140008557:	lea    edx,[rbx+0x12]
   14000855a:	jmp    0x140008584
   14000855c:	bt     eax,0xa
   140008560:	jb     0x14000859e
   140008562:	test   al,0x20
   140008564:	je     0x14000859e
   140008566:	test   BYTE PTR [rsp+0x68],0x1
   14000856b:	je     0x14000859e
   14000856d:	mov    rcx,QWORD PTR [rip+0x8aac]        # 0x140011020
   140008574:	cmp    rcx,r13
   140008577:	je     0x140008594
   140008579:	test   BYTE PTR [rcx+0x1c],0x8
   14000857d:	je     0x140008594
   14000857f:	mov    edx,0x13
   140008584:	mov    rcx,QWORD PTR [rcx+0x10]
   140008588:	lea    r8,[rip+0x5e29]        # 0x14000e3b8
   14000858f:	call   0x140001cb8
   140008594:	mov    DWORD PTR [r14],0x2
   14000859b:	mov    DWORD PTR [r15],r12d
   14000859e:	mov    rcx,rdi
   1400085a1:	call   QWORD PTR [rip+0x2cf1]        # 0x14000b298
   1400085a7:	mov    rcx,QWORD PTR [rip+0x8a72]        # 0x140011020
   1400085ae:	cmp    rcx,r13
   1400085b1:	je     0x1400085ca
   1400085b3:	test   BYTE PTR [rcx+0x1c],0x20
   1400085b7:	je     0x1400085ca
   1400085b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400085bd:	mov    edx,0x14
   1400085c2:	mov    r9d,ebx
   1400085c5:	call   0x1400082a4
   1400085ca:	mov    eax,ebx
   1400085cc:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400085d3:	xor    rcx,rsp
   1400085d6:	call   0x140008aa0
   1400085db:	mov    rbx,QWORD PTR [rsp+0x300]
   1400085e3:	add    rsp,0x2b0
   1400085ea:	pop    r15
   1400085ec:	pop    r14
   1400085ee:	pop    r13
   1400085f0:	pop    r12
   1400085f2:	pop    rdi
   1400085f3:	pop    rsi
   1400085f4:	pop    rbp
   1400085f5:	ret    
   1400085f6:	int3   
   1400085f7:	int3   
   1400085f8:	int3   
   1400085f9:	int3   
   1400085fa:	int3   
   1400085fb:	int3   
   1400085fc:	mov    QWORD PTR [rsp+0x20],rbx
   140008601:	push   rsi
   140008602:	push   rdi
   140008603:	push   r14
   140008605:	sub    rsp,0x70
   140008609:	mov    rax,QWORD PTR [rip+0x89f8]        # 0x140011008
   140008610:	xor    rax,rsp
   140008613:	mov    QWORD PTR [rsp+0x60],rax
   140008618:	xor    edi,edi
   14000861a:	mov    r14,r8
   14000861d:	mov    rsi,rdx
   140008620:	mov    QWORD PTR [rsp+0x20],rdi
   140008625:	mov    rbx,rcx
   140008628:	xor    edx,edx
   14000862a:	lea    rcx,[rsp+0x2c]
   14000862f:	lea    r8d,[rdi+0x34]
   140008633:	call   0x1400093b2
   140008638:	lea    r9,[rsp+0x20]
   14000863d:	mov    DWORD PTR [rsp+0x28],0x1
   140008645:	xor    r8d,r8d
   140008648:	mov    DWORD PTR [rsp+0x30],0x3
   140008650:	lea    rdx,[rip+0x5dc1]        # 0x14000e418
   140008657:	mov    QWORD PTR [rsp+0x40],rbx
   14000865c:	lea    rcx,[rsp+0x28]
   140008661:	call   QWORD PTR [rip+0x2ac9]        # 0x14000b130
   140008667:	mov    ebx,eax
   140008669:	test   eax,eax
   14000866b:	jne    0x14000868a
   14000866d:	mov    rdx,QWORD PTR [rsp+0x20]
   140008672:	mov    r8,rsi
   140008675:	xor    ecx,ecx
   140008677:	call   QWORD PTR [rip+0x2af3]        # 0x14000b170
   14000867d:	mov    ebx,eax
   14000867f:	test   eax,eax
   140008681:	jne    0x14000868a
   140008683:	mov    rdi,QWORD PTR [rsp+0x20]
   140008688:	jmp    0x14000869a
   14000868a:	lea    rcx,[rsp+0x20]
   14000868f:	call   QWORD PTR [rip+0x2abb]        # 0x14000b150
   140008695:	mov    QWORD PTR [rsp+0x20],rdi
   14000869a:	mov    ecx,ebx
   14000869c:	mov    QWORD PTR [r14],rdi
   14000869f:	call   QWORD PTR [rip+0x2ab3]        # 0x14000b158
   1400086a5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400086aa:	xor    rcx,rsp
   1400086ad:	call   0x140008aa0
   1400086b2:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400086ba:	add    rsp,0x70
   1400086be:	pop    r14
   1400086c0:	pop    rdi
   1400086c1:	pop    rsi
   1400086c2:	ret    
   1400086c3:	int3   
   1400086c4:	int3   
   1400086c5:	int3   
   1400086c6:	int3   
   1400086c7:	int3   
   1400086c8:	int3   
   1400086c9:	int3   
   1400086ca:	int3   
   1400086cb:	int3   
   1400086cc:	int3   
   1400086cd:	int3   
   1400086ce:	int3   
   1400086cf:	int3   
   1400086d0:	sub    rsp,0x38
   1400086d4:	and    DWORD PTR [rsp+0x28],0x0
   1400086d9:	mov    r9,QWORD PTR [rip+0x2a38]        # 0x14000b118
   1400086e0:	mov    r8,QWORD PTR [rip+0x5d79]        # 0x14000e460
   1400086e7:	mov    QWORD PTR [rsp+0x20],rdx
   1400086ec:	mov    rdx,rcx
   1400086ef:	lea    rcx,[rip+0xffffffffffff790a]        # 0x140000000
   1400086f6:	call   QWORD PTR [rip+0x2a24]        # 0x14000b120
   1400086fc:	add    rsp,0x38
   140008700:	ret    
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	jmp    0x140008b86
   14000870d:	int3   
   14000870e:	int3   
   14000870f:	int3   
   140008710:	int3   
   140008711:	int3   
   140008712:	int3   
   140008713:	int3   
   140008714:	mov    QWORD PTR [rsp+0x8],rbx
   140008719:	push   rdi
   14000871a:	sub    rsp,0x20
   14000871e:	mov    rdi,rcx
   140008721:	jmp    0x140008732
   140008723:	mov    rcx,rdi
   140008726:	call   0x140008b9e
   14000872b:	test   eax,eax
   14000872d:	je     0x14000873f
   14000872f:	mov    rcx,rdi
   140008732:	call   0x140008b92
   140008737:	mov    rbx,rax
   14000873a:	test   rax,rax
   14000873d:	je     0x140008723
   14000873f:	mov    rax,rbx
   140008742:	mov    rbx,QWORD PTR [rsp+0x30]
   140008747:	add    rsp,0x20
   14000874b:	pop    rdi
   14000874c:	ret    
   14000874d:	int3   
   14000874e:	int3   
   14000874f:	int3   
   140008750:	int3   
   140008751:	int3   
   140008752:	int3   
   140008753:	int3   
   140008754:	int3   
   140008755:	int3   
   140008756:	int3   
   140008757:	int3   
   140008758:	int3   
   140008759:	int3   
   14000875a:	int3   
   14000875b:	int3   
   14000875c:	int3   
   14000875d:	int3   
   14000875e:	int3   
   14000875f:	int3   
   140008760:	sub    rsp,0x28
   140008764:	mov    eax,0x5a4d
   140008769:	cmp    WORD PTR [rip+0xffffffffffff7890],ax        # 0x140000000
   140008770:	je     0x140008776
   140008772:	xor    eax,eax
   140008774:	jmp    0x1400087c5
   140008776:	movsxd rcx,DWORD PTR [rip+0xffffffffffff78bf]        # 0x14000003c
   14000877d:	lea    rax,[rip+0xffffffffffff787c]        # 0x140000000
   140008784:	add    rcx,rax
   140008787:	cmp    DWORD PTR [rcx],0x4550
   14000878d:	jne    0x140008772
   14000878f:	movzx  eax,WORD PTR [rcx+0x18]
   140008793:	cmp    eax,0x10b
   140008798:	je     0x1400087b4
   14000879a:	cmp    eax,0x20b
   14000879f:	jne    0x140008772
   1400087a1:	xor    eax,eax
   1400087a3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400087aa:	jbe    0x1400087c5
   1400087ac:	cmp    DWORD PTR [rcx+0xf8],eax
   1400087b2:	jmp    0x1400087c2
   1400087b4:	xor    eax,eax
   1400087b6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400087ba:	jbe    0x1400087c5
   1400087bc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400087c2:	setne  al
   1400087c5:	mov    ecx,0x1
   1400087ca:	mov    DWORD PTR [rip+0x8cd0],eax        # 0x1400114a0
   1400087d0:	call   0x140008c78
   1400087d5:	mov    ecx,eax
   1400087d7:	call   QWORD PTR [rip+0x2c5b]        # 0x14000b438
   1400087dd:	mov    rcx,QWORD PTR [rip+0x2c8c]        # 0x14000b470
   1400087e4:	or     rax,0xffffffffffffffff
   1400087e8:	mov    QWORD PTR [rip+0x94f9],rax        # 0x140011ce8
   1400087ef:	mov    QWORD PTR [rip+0x94fa],rax        # 0x140011cf0
   1400087f6:	mov    eax,DWORD PTR [rip+0x8cb8]        # 0x1400114b4
   1400087fc:	mov    DWORD PTR [rcx],eax
   1400087fe:	mov    rcx,QWORD PTR [rip+0x2c73]        # 0x14000b478
   140008805:	mov    eax,DWORD PTR [rip+0x8c9d]        # 0x1400114a8
   14000880b:	mov    DWORD PTR [rcx],eax
   14000880d:	call   0x1400077e0
   140008812:	cmp    DWORD PTR [rip+0x87e7],0x0        # 0x140011000
   140008819:	jne    0x140008828
   14000881b:	lea    rcx,[rip+0xffffffffffffefbe]        # 0x1400077e0
   140008822:	call   QWORD PTR [rip+0x2c30]        # 0x14000b458
   140008828:	xor    eax,eax
   14000882a:	add    rsp,0x28
   14000882e:	ret    
   14000882f:	int3   
   140008830:	int3   
   140008831:	int3   
   140008832:	int3   
   140008833:	int3   
   140008834:	int3   
   140008835:	int3   
   140008836:	int3   
   140008837:	int3   
   140008838:	int3   
   140008839:	int3   
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	int3   
   14000883f:	int3   
   140008840:	sub    rsp,0x38
   140008844:	mov    eax,DWORD PTR [rip+0x8c66]        # 0x1400114b0
   14000884a:	lea    r8,[rip+0x8c47]        # 0x140011498
   140008851:	mov    r9d,DWORD PTR [rip+0x8c54]        # 0x1400114ac
   140008858:	lea    rdx,[rip+0x8c31]        # 0x140011490
   14000885f:	mov    DWORD PTR [rip+0x8c3f],eax        # 0x1400114a4
   140008865:	lea    rcx,[rip+0x8c1c]        # 0x140011488
   14000886c:	lea    rax,[rip+0x8c31]        # 0x1400114a4
   140008873:	mov    QWORD PTR [rsp+0x20],rax
   140008878:	call   QWORD PTR [rip+0x2bb2]        # 0x14000b430
   14000887e:	mov    DWORD PTR [rip+0x8c08],eax        # 0x14001148c
   140008884:	add    rsp,0x38
   140008888:	ret    
   140008889:	int3   
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	int3   
   14000888d:	int3   
   14000888e:	int3   
   14000888f:	int3   
   140008890:	mov    rax,rsp
   140008893:	mov    QWORD PTR [rax+0x8],rbx
   140008897:	mov    QWORD PTR [rax+0x10],rsi
   14000889b:	mov    QWORD PTR [rax+0x18],rdi
   14000889f:	mov    QWORD PTR [rax+0x20],r12
   1400088a3:	push   r14
   1400088a5:	sub    rsp,0x30
   1400088a9:	mov    rax,QWORD PTR gs:0x30
   1400088b2:	mov    rbx,QWORD PTR [rax+0x8]
   1400088b6:	xor    r14d,r14d
   1400088b9:	xor    eax,eax
   1400088bb:	lock cmpxchg QWORD PTR [rip+0x9414],rbx        # 0x140011cd8
   1400088c4:	je     0x1400088e2
   1400088c6:	cmp    rax,rbx
   1400088c9:	jne    0x1400088d5
   1400088cb:	mov    ebx,0x1
   1400088d0:	mov    r14d,ebx
   1400088d3:	jmp    0x1400088e7
   1400088d5:	mov    ecx,0x3e8
   1400088da:	call   QWORD PTR [rip+0x2a60]        # 0x14000b340
   1400088e0:	jmp    0x1400088b9
   1400088e2:	mov    ebx,0x1
   1400088e7:	mov    eax,DWORD PTR [rip+0x93f3]        # 0x140011ce0
   1400088ed:	cmp    eax,ebx
   1400088ef:	jne    0x1400088fd
   1400088f1:	mov    ecx,0x1f
   1400088f6:	call   0x140008cc4
   1400088fb:	jmp    0x140008966
   1400088fd:	mov    eax,DWORD PTR [rip+0x93dd]        # 0x140011ce0
   140008903:	test   eax,eax
   140008905:	jne    0x140008960
   140008907:	mov    DWORD PTR [rip+0x93d3],ebx        # 0x140011ce0
   14000890d:	lea    r12,[rip+0x2cb4]        # 0x14000b5c8
   140008914:	lea    rdi,[rip+0x2c95]        # 0x14000b5b0
   14000891b:	mov    QWORD PTR [rsp+0x28],rdi
   140008920:	mov    DWORD PTR [rsp+0x20],eax
   140008924:	cmp    rdi,r12
   140008927:	jae    0x140008952
   140008929:	test   eax,eax
   14000892b:	jne    0x140008956
   14000892d:	mov    rsi,QWORD PTR [rdi]
   140008930:	test   rsi,rsi
   140008933:	je     0x140008947
   140008935:	mov    rcx,rsi
   140008938:	mov    rax,QWORD PTR [rip+0x2c39]        # 0x14000b578
   14000893f:	call   rax
   140008941:	call   rsi
   140008943:	mov    DWORD PTR [rsp+0x20],eax
   140008947:	add    rdi,0x8
   14000894b:	mov    QWORD PTR [rsp+0x28],rdi
   140008950:	jmp    0x140008924
   140008952:	test   eax,eax
   140008954:	je     0x140008966
   140008956:	mov    eax,0xff
   14000895b:	jmp    0x140008a47
   140008960:	mov    DWORD PTR [rip+0x8b1e],ebx        # 0x140011484
   140008966:	mov    eax,DWORD PTR [rip+0x9374]        # 0x140011ce0
   14000896c:	cmp    eax,ebx
   14000896e:	jne    0x14000898d
   140008970:	lea    rdx,[rip+0x2c31]        # 0x14000b5a8
   140008977:	lea    rcx,[rip+0x2c0a]        # 0x14000b588
   14000897e:	call   0x140008e8a
   140008983:	mov    DWORD PTR [rip+0x9353],0x2        # 0x140011ce0
   14000898d:	test   r14d,r14d
   140008990:	jne    0x14000899b
   140008992:	xor    eax,eax
   140008994:	xchg   QWORD PTR [rip+0x933d],rax        # 0x140011cd8
   14000899b:	cmp    QWORD PTR [rip+0x9355],0x0        # 0x140011cf8
   1400089a3:	je     0x1400089d3
   1400089a5:	lea    rcx,[rip+0x934c]        # 0x140011cf8
   1400089ac:	call   0x140008d20
   1400089b1:	test   eax,eax
   1400089b3:	je     0x1400089d3
   1400089b5:	mov    rbx,QWORD PTR [rip+0x933c]        # 0x140011cf8
   1400089bc:	mov    rcx,rbx
   1400089bf:	mov    rax,QWORD PTR [rip+0x2bb2]        # 0x14000b578
   1400089c6:	call   rax
   1400089c8:	xor    r8d,r8d
   1400089cb:	lea    edx,[r8+0x2]
   1400089cf:	xor    ecx,ecx
   1400089d1:	call   rbx
   1400089d3:	mov    r8,QWORD PTR [rip+0x8abe]        # 0x140011498
   1400089da:	mov    rdx,QWORD PTR [rip+0x8aaf]        # 0x140011490
   1400089e1:	mov    ecx,DWORD PTR [rip+0x8aa1]        # 0x140011488
   1400089e7:	call   0x140001f18
   1400089ec:	mov    DWORD PTR [rip+0x8a8e],eax        # 0x140011480
   1400089f2:	cmp    DWORD PTR [rip+0x8aa7],0x0        # 0x1400114a0
   1400089f9:	jne    0x140008a03
   1400089fb:	mov    ecx,eax
   1400089fd:	call   QWORD PTR [rip+0x2a3d]        # 0x14000b440
   140008a03:	cmp    DWORD PTR [rip+0x8a7a],0x0        # 0x140011484
   140008a0a:	jne    0x140008a18
   140008a0c:	call   QWORD PTR [rip+0x2a3e]        # 0x14000b450
   140008a12:	mov    eax,DWORD PTR [rip+0x8a68]        # 0x140011480
   140008a18:	jmp    0x140008a47
   140008a1a:	mov    DWORD PTR [rip+0x8a60],eax        # 0x140011480
   140008a20:	cmp    DWORD PTR [rip+0x8a79],0x0        # 0x1400114a0
   140008a27:	jne    0x140008a32
   140008a29:	mov    ecx,eax
   140008a2b:	call   QWORD PTR [rip+0x2a17]        # 0x14000b448
   140008a31:	int3   
   140008a32:	cmp    DWORD PTR [rip+0x8a4b],0x0        # 0x140011484
   140008a39:	jne    0x140008a47
   140008a3b:	call   QWORD PTR [rip+0x2a0f]        # 0x14000b450
   140008a41:	mov    eax,DWORD PTR [rip+0x8a39]        # 0x140011480
   140008a47:	mov    rbx,QWORD PTR [rsp+0x40]
   140008a4c:	mov    rsi,QWORD PTR [rsp+0x48]
   140008a51:	mov    rdi,QWORD PTR [rsp+0x50]
   140008a56:	mov    r12,QWORD PTR [rsp+0x58]
   140008a5b:	add    rsp,0x30
   140008a5f:	pop    r14
   140008a61:	ret    
   140008a62:	int3   
   140008a63:	int3   
   140008a64:	int3   
   140008a65:	int3   
   140008a66:	int3   
   140008a67:	int3   
   140008a68:	int3   
   140008a69:	int3   
   140008a6a:	int3   
   140008a6b:	int3   
   140008a6c:	int3   
   140008a6d:	int3   
   140008a6e:	int3   
   140008a6f:	int3   
   140008a70:	sub    rsp,0x28
   140008a74:	call   0x140008db4
   140008a79:	add    rsp,0x28
   140008a7d:	jmp    0x140008890
   140008a82:	int3   
   140008a83:	int3   
   140008a84:	int3   
   140008a85:	int3   
   140008a86:	int3   
   140008a87:	int3   
   140008a88:	int3   
   140008a89:	int3   
   140008a8a:	int3   
   140008a8b:	int3   
   140008a8c:	int3   
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	int3   
   140008a91:	int3   
   140008a92:	int3   
   140008a93:	int3   
   140008a94:	int3   
   140008a95:	int3   
   140008a96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008aa0:	cmp    rcx,QWORD PTR [rip+0x8561]        # 0x140011008
   140008aa7:	jne    0x140008ab9
   140008aa9:	rol    rcx,0x10
   140008aad:	test   cx,0xffff
   140008ab2:	jne    0x140008ab5
   140008ab4:	ret    
   140008ab5:	ror    rcx,0x10
   140008ab9:	jmp    0x140008f00
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	int3   
   140008ac1:	int3   
   140008ac2:	int3   
   140008ac3:	int3   
   140008ac4:	mov    QWORD PTR [rsp+0x8],rbx
   140008ac9:	push   rdi
   140008aca:	sub    rsp,0x20
   140008ace:	mov    rdi,rcx
   140008ad1:	mov    rax,QWORD PTR [rip+0x9218]        # 0x140011cf0
   140008ad8:	mov    QWORD PTR [rsp+0x38],rax
   140008add:	cmp    rax,0xffffffffffffffff
   140008ae1:	jne    0x140008afa
   140008ae3:	mov    rbx,QWORD PTR [rip+0x29b6]        # 0x14000b4a0
   140008aea:	mov    rcx,rbx
   140008aed:	call   QWORD PTR [rip+0x2a85]        # 0x14000b578
   140008af3:	mov    rcx,rdi
   140008af6:	call   rbx
   140008af8:	jmp    0x140008b57
   140008afa:	mov    ecx,0x8
   140008aff:	call   0x140009078
   140008b04:	nop
   140008b05:	mov    rax,QWORD PTR [rip+0x91e4]        # 0x140011cf0
   140008b0c:	mov    QWORD PTR [rsp+0x38],rax
   140008b11:	mov    rax,QWORD PTR [rip+0x91d0]        # 0x140011ce8
   140008b18:	mov    QWORD PTR [rsp+0x40],rax
   140008b1d:	lea    r8,[rsp+0x40]
   140008b22:	lea    rdx,[rsp+0x38]
   140008b27:	mov    rcx,rdi
   140008b2a:	call   0x140009090
   140008b2f:	mov    rbx,rax
   140008b32:	mov    rdx,QWORD PTR [rsp+0x38]
   140008b37:	mov    QWORD PTR [rip+0x91b2],rdx        # 0x140011cf0
   140008b3e:	mov    rdx,QWORD PTR [rsp+0x40]
   140008b43:	mov    QWORD PTR [rip+0x919e],rdx        # 0x140011ce8
   140008b4a:	mov    ecx,0x8
   140008b4f:	call   0x140009084
   140008b54:	mov    rax,rbx
   140008b57:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b5c:	add    rsp,0x20
   140008b60:	pop    rdi
   140008b61:	ret    
   140008b62:	int3   
   140008b63:	int3   
   140008b64:	int3   
   140008b65:	int3   
   140008b66:	int3   
   140008b67:	int3   
   140008b68:	sub    rsp,0x28
   140008b6c:	call   0x140008ac4
   140008b71:	neg    rax
   140008b74:	sbb    eax,eax
   140008b76:	neg    eax
   140008b78:	dec    eax
   140008b7a:	add    rsp,0x28
   140008b7e:	ret    
   140008b7f:	int3   
   140008b80:	int3   
   140008b81:	int3   
   140008b82:	int3   
   140008b83:	int3   
   140008b84:	int3   
   140008b85:	int3   
   140008b86:	jmp    QWORD PTR [rip+0x287c]        # 0x14000b408
   140008b8c:	int3   
   140008b8d:	int3   
   140008b8e:	int3   
   140008b8f:	int3   
   140008b90:	int3   
   140008b91:	int3   
   140008b92:	jmp    QWORD PTR [rip+0x2878]        # 0x14000b410
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	jmp    QWORD PTR [rip+0x2874]        # 0x14000b418
   140008ba4:	int3   
   140008ba5:	int3   
   140008ba6:	int3   
   140008ba7:	int3   
   140008ba8:	int3   
   140008ba9:	int3   
   140008baa:	int3   
   140008bab:	int3   
   140008bac:	int3   
   140008bad:	int3   
   140008bae:	int3   
   140008baf:	int3   
   140008bb0:	sub    rsp,0x28
   140008bb4:	mov    rax,QWORD PTR [rcx]
   140008bb7:	cmp    DWORD PTR [rax],0xe06d7363
   140008bbd:	jne    0x140008be2
   140008bbf:	cmp    DWORD PTR [rax+0x18],0x4
   140008bc3:	jne    0x140008be2
   140008bc5:	mov    ecx,DWORD PTR [rax+0x20]
   140008bc8:	lea    eax,[rcx-0x19930520]
   140008bce:	cmp    eax,0x2
   140008bd1:	jbe    0x140008bdb
   140008bd3:	cmp    ecx,0x1994000
   140008bd9:	jne    0x140008be2
   140008bdb:	call   QWORD PTR [rip+0x28c7]        # 0x14000b4a8
   140008be1:	int3   
   140008be2:	xor    eax,eax
   140008be4:	add    rsp,0x28
   140008be8:	ret    
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	sub    rsp,0x28
   140008bf4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140008bb0
   140008bfb:	call   QWORD PTR [rip+0x264f]        # 0x14000b250
   140008c01:	xor    eax,eax
   140008c03:	add    rsp,0x28
   140008c07:	ret    
   140008c08:	int3   
   140008c09:	int3   
   140008c0a:	int3   
   140008c0b:	int3   
   140008c0c:	int3   
   140008c0d:	int3   
   140008c0e:	jmp    QWORD PTR [rip+0x280c]        # 0x14000b420
   140008c14:	int3   
   140008c15:	int3   
   140008c16:	int3   
   140008c17:	int3   
   140008c18:	int3   
   140008c19:	int3   
   140008c1a:	int3   
   140008c1b:	int3   
   140008c1c:	sub    rsp,0x18
   140008c20:	xor    edx,edx
   140008c22:	lea    rax,[rcx-0x1]
   140008c26:	cmp    rax,0xfffffffffffffffd
   140008c2a:	ja     0x140008c68
   140008c2c:	mov    eax,0x5a4d
   140008c31:	cmp    WORD PTR [rcx],ax
   140008c34:	jne    0x140008c60
   140008c36:	cmp    DWORD PTR [rcx+0x3c],edx
   140008c39:	jl     0x140008c60
   140008c3b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008c42:	jae    0x140008c60
   140008c44:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008c48:	add    rax,rcx
   140008c4b:	mov    QWORD PTR [rsp],rax
   140008c4f:	cmp    DWORD PTR [rax],0x4550
   140008c55:	cmovne rax,rdx
   140008c59:	mov    rdx,rax
   140008c5c:	mov    QWORD PTR [rsp],rax
   140008c60:	jmp    0x140008c68
   140008c62:	xor    edx,edx
   140008c64:	mov    QWORD PTR [rsp],rdx
   140008c68:	mov    rax,rdx
   140008c6b:	add    rsp,0x18
   140008c6f:	ret    
   140008c70:	int3   
   140008c71:	int3   
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	rex push rbx
   140008c7a:	sub    rsp,0x20
   140008c7e:	mov    ebx,ecx
   140008c80:	xor    ecx,ecx
   140008c82:	call   QWORD PTR [rip+0x25f8]        # 0x14000b280
   140008c88:	test   rax,rax
   140008c8b:	je     0x140008cb5
   140008c8d:	mov    rcx,rax
   140008c90:	call   0x140008c1c
   140008c95:	test   rax,rax
   140008c98:	je     0x140008cb5
   140008c9a:	mov    ecx,0x2
   140008c9f:	cmp    WORD PTR [rax+0x5c],cx
   140008ca3:	jne    0x140008ca9
   140008ca5:	mov    eax,ecx
   140008ca7:	jmp    0x140008cb7
   140008ca9:	cmp    WORD PTR [rax+0x5c],0x3
   140008cae:	mov    eax,0x1
   140008cb3:	je     0x140008cb7
   140008cb5:	mov    eax,ebx
   140008cb7:	add    rsp,0x20
   140008cbb:	pop    rbx
   140008cbc:	ret    
   140008cbd:	int3   
   140008cbe:	int3   
   140008cbf:	int3   
   140008cc0:	int3   
   140008cc1:	int3   
   140008cc2:	int3   
   140008cc3:	int3   
   140008cc4:	jmp    QWORD PTR [rip+0x275e]        # 0x14000b428
   140008cca:	int3   
   140008ccb:	int3   
   140008ccc:	int3   
   140008ccd:	int3   
   140008cce:	int3   
   140008ccf:	int3   
   140008cd0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008cd4:	xor    r9d,r9d
   140008cd7:	add    r8,rcx
   140008cda:	mov    r10,rdx
   140008cdd:	movzx  eax,WORD PTR [r8+0x14]
   140008ce2:	movzx  r11d,WORD PTR [r8+0x6]
   140008ce7:	add    rax,0x18
   140008ceb:	add    rax,r8
   140008cee:	test   r11d,r11d
   140008cf1:	je     0x140008d11
   140008cf3:	mov    edx,DWORD PTR [rax+0xc]
   140008cf6:	cmp    r10,rdx
   140008cf9:	jb     0x140008d05
   140008cfb:	mov    ecx,DWORD PTR [rax+0x8]
   140008cfe:	add    ecx,edx
   140008d00:	cmp    r10,rcx
   140008d03:	jb     0x140008d13
   140008d05:	inc    r9d
   140008d08:	add    rax,0x28
   140008d0c:	cmp    r9d,r11d
   140008d0f:	jb     0x140008cf3
   140008d11:	xor    eax,eax
   140008d13:	ret    
   140008d14:	int3   
   140008d15:	int3   
   140008d16:	int3   
   140008d17:	int3   
   140008d18:	int3   
   140008d19:	int3   
   140008d1a:	int3   
   140008d1b:	int3   
   140008d1c:	int3   
   140008d1d:	int3   
   140008d1e:	int3   
   140008d1f:	int3   
   140008d20:	mov    QWORD PTR [rsp+0x8],rbx
   140008d25:	push   rdi
   140008d26:	sub    rsp,0x20
   140008d2a:	mov    rbx,rcx
   140008d2d:	lea    rdi,[rip+0xffffffffffff72cc]        # 0x140000000
   140008d34:	mov    rcx,rdi
   140008d37:	call   0x140008d80
   140008d3c:	test   eax,eax
   140008d3e:	je     0x140008d62
   140008d40:	sub    rbx,rdi
   140008d43:	mov    rdx,rbx
   140008d46:	mov    rcx,rdi
   140008d49:	call   0x140008cd0
   140008d4e:	test   rax,rax
   140008d51:	je     0x140008d62
   140008d53:	mov    eax,DWORD PTR [rax+0x24]
   140008d56:	shr    eax,0x1f
   140008d59:	not    eax
   140008d5b:	and    eax,0x1
   140008d5e:	jmp    0x140008d62
   140008d60:	xor    eax,eax
   140008d62:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d67:	add    rsp,0x20
   140008d6b:	pop    rdi
   140008d6c:	ret    
   140008d6d:	int3   
   140008d6e:	int3   
   140008d6f:	int3   
   140008d70:	int3   
   140008d71:	int3   
   140008d72:	int3   
   140008d73:	int3   
   140008d74:	int3   
   140008d75:	int3   
   140008d76:	int3   
   140008d77:	int3   
   140008d78:	int3   
   140008d79:	int3   
   140008d7a:	int3   
   140008d7b:	int3   
   140008d7c:	int3   
   140008d7d:	int3   
   140008d7e:	int3   
   140008d7f:	int3   
   140008d80:	mov    rax,rcx
   140008d83:	mov    ecx,0x5a4d
   140008d88:	cmp    WORD PTR [rax],cx
   140008d8b:	je     0x140008d90
   140008d8d:	xor    eax,eax
   140008d8f:	ret    
   140008d90:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008d94:	add    rcx,rax
   140008d97:	xor    eax,eax
   140008d99:	cmp    DWORD PTR [rcx],0x4550
   140008d9f:	jne    0x140008dad
   140008da1:	mov    edx,0x20b
   140008da6:	cmp    WORD PTR [rcx+0x18],dx
   140008daa:	sete   al
   140008dad:	ret    
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	int3   
   140008db1:	int3   
   140008db2:	int3   
   140008db3:	int3   
   140008db4:	mov    QWORD PTR [rsp+0x20],rbx
   140008db9:	push   rbp
   140008dba:	mov    rbp,rsp
   140008dbd:	sub    rsp,0x20
   140008dc1:	and    QWORD PTR [rbp+0x18],0x0
   140008dc6:	movabs rbx,0x2b992ddfa232
   140008dd0:	mov    rax,QWORD PTR [rip+0x8231]        # 0x140011008
   140008dd7:	cmp    rax,rbx
   140008dda:	jne    0x140008e6f
   140008de0:	lea    rcx,[rbp+0x18]
   140008de4:	call   QWORD PTR [rip+0x256e]        # 0x14000b358
   140008dea:	mov    rax,QWORD PTR [rbp+0x18]
   140008dee:	mov    QWORD PTR [rbp+0x10],rax
   140008df2:	call   QWORD PTR [rip+0x24b0]        # 0x14000b2a8
   140008df8:	mov    eax,eax
   140008dfa:	xor    QWORD PTR [rbp+0x10],rax
   140008dfe:	call   QWORD PTR [rip+0x24b4]        # 0x14000b2b8
   140008e04:	mov    eax,eax
   140008e06:	xor    QWORD PTR [rbp+0x10],rax
   140008e0a:	call   QWORD PTR [rip+0x2540]        # 0x14000b350
   140008e10:	mov    eax,eax
   140008e12:	shl    rax,0x18
   140008e16:	xor    QWORD PTR [rbp+0x10],rax
   140008e1a:	call   QWORD PTR [rip+0x2530]        # 0x14000b350
   140008e20:	mov    eax,eax
   140008e22:	lea    rcx,[rbp+0x10]
   140008e26:	xor    rax,QWORD PTR [rbp+0x10]
   140008e2a:	xor    rax,rcx
   140008e2d:	lea    rcx,[rbp+0x20]
   140008e31:	mov    QWORD PTR [rbp+0x10],rax
   140008e35:	call   QWORD PTR [rip+0x248d]        # 0x14000b2c8
   140008e3b:	mov    eax,DWORD PTR [rbp+0x20]
   140008e3e:	movabs rcx,0xffffffffffff
   140008e48:	shl    rax,0x20
   140008e4c:	xor    rax,QWORD PTR [rbp+0x20]
   140008e50:	xor    rax,QWORD PTR [rbp+0x10]
   140008e54:	and    rax,rcx
   140008e57:	movabs rcx,0x2b992ddfa233
   140008e61:	cmp    rax,rbx
   140008e64:	cmove  rax,rcx
   140008e68:	mov    QWORD PTR [rip+0x8199],rax        # 0x140011008
   140008e6f:	mov    rbx,QWORD PTR [rsp+0x48]
   140008e74:	not    rax
   140008e77:	mov    QWORD PTR [rip+0x8192],rax        # 0x140011010
   140008e7e:	add    rsp,0x20
   140008e82:	pop    rbp
   140008e83:	ret    
   140008e84:	int3   
   140008e85:	int3   
   140008e86:	int3   
   140008e87:	int3   
   140008e88:	int3   
   140008e89:	int3   
   140008e8a:	jmp    QWORD PTR [rip+0x25d0]        # 0x14000b460
   140008e90:	int3   
   140008e91:	int3   
   140008e92:	int3   
   140008e93:	int3   
   140008e94:	int3   
   140008e95:	int3   
   140008e96:	jmp    QWORD PTR [rip+0x25cc]        # 0x14000b468
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	int3   
   140008ea1:	int3   
   140008ea2:	int3   
   140008ea3:	int3   
   140008ea4:	int3   
   140008ea5:	int3   
   140008ea6:	int3   
   140008ea7:	int3   
   140008ea8:	int3   
   140008ea9:	int3   
   140008eaa:	int3   
   140008eab:	int3   
   140008eac:	int3   
   140008ead:	int3   
   140008eae:	int3   
   140008eaf:	int3   
   140008eb0:	ret    0x0
   140008eb3:	int3   
   140008eb4:	int3   
   140008eb5:	int3   
   140008eb6:	int3   
   140008eb7:	int3   
   140008eb8:	int3   
   140008eb9:	int3   
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	rex push rbx
   140008ebe:	sub    rsp,0x20
   140008ec2:	mov    rbx,rcx
   140008ec5:	xor    ecx,ecx
   140008ec7:	call   QWORD PTR [rip+0x2383]        # 0x14000b250
   140008ecd:	mov    rcx,rbx
   140008ed0:	call   QWORD PTR [rip+0x2372]        # 0x14000b248
   140008ed6:	call   QWORD PTR [rip+0x2224]        # 0x14000b100
   140008edc:	mov    rcx,rax
   140008edf:	mov    edx,0xc0000409
   140008ee4:	add    rsp,0x20
   140008ee8:	pop    rbx
   140008ee9:	rex.W jmp QWORD PTR [rip+0x23c0]        # 0x14000b2b0
   140008ef0:	int3   
   140008ef1:	int3   
   140008ef2:	int3   
   140008ef3:	int3   
   140008ef4:	int3   
   140008ef5:	int3   
   140008ef6:	int3   
   140008ef7:	int3   
   140008ef8:	int3   
   140008ef9:	int3   
   140008efa:	int3   
   140008efb:	int3   
   140008efc:	int3   
   140008efd:	int3   
   140008efe:	int3   
   140008eff:	int3   
   140008f00:	mov    QWORD PTR [rsp+0x8],rcx
   140008f05:	sub    rsp,0x88
   140008f0c:	lea    rcx,[rip+0x864d]        # 0x140011560
   140008f13:	call   QWORD PTR [rip+0x2407]        # 0x14000b320
   140008f19:	mov    rax,QWORD PTR [rip+0x8738]        # 0x140011658
   140008f20:	mov    QWORD PTR [rsp+0x48],rax
   140008f25:	xor    r8d,r8d
   140008f28:	lea    rdx,[rsp+0x50]
   140008f2d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008f32:	call   QWORD PTR [rip+0x23f8]        # 0x14000b330
   140008f38:	mov    QWORD PTR [rsp+0x40],rax
   140008f3d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008f43:	je     0x140008f87
   140008f45:	mov    QWORD PTR [rsp+0x38],0x0
   140008f4e:	lea    rax,[rsp+0x58]
   140008f53:	mov    QWORD PTR [rsp+0x30],rax
   140008f58:	lea    rax,[rsp+0x60]
   140008f5d:	mov    QWORD PTR [rsp+0x28],rax
   140008f62:	lea    rax,[rip+0x85f7]        # 0x140011560
   140008f69:	mov    QWORD PTR [rsp+0x20],rax
   140008f6e:	mov    r9,QWORD PTR [rsp+0x40]
   140008f73:	mov    r8,QWORD PTR [rsp+0x48]
   140008f78:	mov    rdx,QWORD PTR [rsp+0x50]
   140008f7d:	xor    ecx,ecx
   140008f7f:	call   QWORD PTR [rip+0x23a3]        # 0x14000b328
   140008f85:	jmp    0x140008faa
   140008f87:	mov    rax,QWORD PTR [rip+0x866a]        # 0x1400115f8
   140008f8e:	mov    rax,QWORD PTR [rax]
   140008f91:	mov    QWORD PTR [rip+0x86c0],rax        # 0x140011658
   140008f98:	mov    rax,QWORD PTR [rip+0x8659]        # 0x1400115f8
   140008f9f:	add    rax,0x8
   140008fa3:	mov    QWORD PTR [rip+0x864e],rax        # 0x1400115f8
   140008faa:	mov    rax,QWORD PTR [rip+0x86a7]        # 0x140011658
   140008fb1:	mov    QWORD PTR [rip+0x8518],rax        # 0x1400114d0
   140008fb8:	mov    rax,QWORD PTR [rsp+0x90]
   140008fc0:	mov    QWORD PTR [rip+0x8619],rax        # 0x1400115e0
   140008fc7:	mov    DWORD PTR [rip+0x84ef],0xc0000409        # 0x1400114c0
   140008fd1:	mov    DWORD PTR [rip+0x84e9],0x1        # 0x1400114c4
   140008fdb:	mov    DWORD PTR [rip+0x84f3],0x3        # 0x1400114d8
   140008fe5:	mov    eax,0x8
   140008fea:	imul   rax,rax,0x0
   140008fee:	lea    rcx,[rip+0x84eb]        # 0x1400114e0
   140008ff5:	mov    QWORD PTR [rcx+rax*1],0x2
   140008ffd:	mov    eax,0x8
   140009002:	imul   rax,rax,0x1
   140009006:	lea    rcx,[rip+0x84d3]        # 0x1400114e0
   14000900d:	mov    rdx,QWORD PTR [rip+0x7ff4]        # 0x140011008
   140009014:	mov    QWORD PTR [rcx+rax*1],rdx
   140009018:	mov    eax,0x8
   14000901d:	imul   rax,rax,0x2
   140009021:	lea    rcx,[rip+0x84b8]        # 0x1400114e0
   140009028:	mov    rdx,QWORD PTR [rip+0x7fe1]        # 0x140011010
   14000902f:	mov    QWORD PTR [rcx+rax*1],rdx
   140009033:	mov    eax,0x8
   140009038:	imul   rax,rax,0x0
   14000903c:	mov    rcx,QWORD PTR [rip+0x7fc5]        # 0x140011008
   140009043:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009048:	mov    eax,0x8
   14000904d:	imul   rax,rax,0x1
   140009051:	mov    rcx,QWORD PTR [rip+0x7fb8]        # 0x140011010
   140009058:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000905d:	lea    rcx,[rip+0x263c]        # 0x14000b6a0
   140009064:	call   0x140008ebc
   140009069:	add    rsp,0x88
   140009070:	ret    
   140009071:	int3   
   140009072:	int3   
   140009073:	int3   
   140009074:	int3   
   140009075:	int3   
   140009076:	int3   
   140009077:	int3   
   140009078:	jmp    QWORD PTR [rip+0x2402]        # 0x14000b480
   14000907e:	int3   
   14000907f:	int3   
   140009080:	int3   
   140009081:	int3   
   140009082:	int3   
   140009083:	int3   
   140009084:	jmp    QWORD PTR [rip+0x23fe]        # 0x14000b488
   14000908a:	int3   
   14000908b:	int3   
   14000908c:	int3   
   14000908d:	int3   
   14000908e:	int3   
   14000908f:	int3   
   140009090:	jmp    QWORD PTR [rip+0x23fa]        # 0x14000b490
   140009096:	int3   
   140009097:	int3   
   140009098:	int3   
   140009099:	int3   
   14000909a:	int3   
   14000909b:	int3   
   14000909c:	int3   
   14000909d:	int3   
   14000909e:	int3   
   14000909f:	int3   
   1400090a0:	int3   
   1400090a1:	int3   
   1400090a2:	int3   
   1400090a3:	int3   
   1400090a4:	int3   
   1400090a5:	int3   
   1400090a6:	int3   
   1400090a7:	int3   
   1400090a8:	sub    rsp,0x28
   1400090ac:	mov    ecx,DWORD PTR [rip+0x897e]        # 0x140011a30
   1400090b2:	cmp    ecx,0x1
   1400090b5:	jne    0x1400090bb
   1400090b7:	mov    al,cl
   1400090b9:	jmp    0x1400090f1
   1400090bb:	cmp    ecx,0x2
   1400090be:	jne    0x1400090c4
   1400090c0:	xor    al,al
   1400090c2:	jmp    0x1400090f1
   1400090c4:	lea    rdx,[rsp+0x30]
   1400090c9:	mov    BYTE PTR [rsp+0x30],0x0
   1400090ce:	lea    rcx,[rip+0x25db]        # 0x14000b6b0
   1400090d5:	call   0x140009300
   1400090da:	test   eax,eax
   1400090dc:	js     0x1400090c0
   1400090de:	mov    al,BYTE PTR [rsp+0x30]
   1400090e2:	mov    cl,al
   1400090e4:	neg    cl
   1400090e6:	sbb    edx,edx
   1400090e8:	add    edx,0x2
   1400090eb:	mov    DWORD PTR [rip+0x893f],edx        # 0x140011a30
   1400090f1:	add    rsp,0x28
   1400090f5:	ret    
   1400090f6:	int3   
   1400090f7:	int3   
   1400090f8:	int3   
   1400090f9:	int3   
   1400090fa:	int3   
   1400090fb:	int3   
   1400090fc:	int3   
   1400090fd:	int3   
   1400090fe:	int3   
   1400090ff:	int3   
   140009100:	lea    rax,[rip+0x9ef9]        # 0x140013000
   140009107:	jmp    0x140009120
   14000910c:	int3   
   14000910d:	int3   
   14000910e:	int3   
   14000910f:	int3   
   140009110:	int3   
   140009111:	int3   
   140009112:	int3   
   140009113:	int3   
   140009114:	int3   
   140009115:	int3   
   140009116:	int3   
   140009117:	int3   
   140009118:	int3   
   140009119:	int3   
   14000911a:	int3   
   14000911b:	int3   
   14000911c:	int3   
   14000911d:	int3   
   14000911e:	int3   
   14000911f:	int3   
   140009120:	mov    QWORD PTR [rsp+0x8],rcx
   140009125:	mov    QWORD PTR [rsp+0x10],rdx
   14000912a:	mov    QWORD PTR [rsp+0x18],r8
   14000912f:	mov    QWORD PTR [rsp+0x20],r9
   140009134:	sub    rsp,0x68
   140009138:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000913e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140009144:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000914a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140009150:	mov    rdx,rax
   140009153:	lea    rcx,[rip+0x5dc6]        # 0x14000ef20
   14000915a:	call   0x1400086d0
   14000915f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140009165:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000916b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140009171:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140009177:	mov    rcx,QWORD PTR [rsp+0x70]
   14000917c:	mov    rdx,QWORD PTR [rsp+0x78]
   140009181:	mov    r8,QWORD PTR [rsp+0x80]
   140009189:	mov    r9,QWORD PTR [rsp+0x88]
   140009191:	add    rsp,0x68
   140009195:	jmp    0x140009197
   140009197:	jmp    rax
   140009199:	int3   
   14000919a:	int3   
   14000919b:	int3   
   14000919c:	int3   
   14000919d:	int3   
   14000919e:	int3   
   14000919f:	int3   
   1400091a0:	sub    rsp,0x28
   1400091a4:	mov    ecx,DWORD PTR [rip+0x8896]        # 0x140011a40
   1400091aa:	cmp    ecx,0x1
   1400091ad:	jne    0x1400091b3
   1400091af:	mov    al,cl
   1400091b1:	jmp    0x1400091e9
   1400091b3:	cmp    ecx,0x2
   1400091b6:	jne    0x1400091bc
   1400091b8:	xor    al,al
   1400091ba:	jmp    0x1400091e9
   1400091bc:	lea    rdx,[rsp+0x30]
   1400091c1:	mov    BYTE PTR [rsp+0x30],0x0
   1400091c6:	lea    rcx,[rip+0x2583]        # 0x14000b750
   1400091cd:	call   0x140009300
   1400091d2:	test   eax,eax
   1400091d4:	js     0x1400091b8
   1400091d6:	mov    al,BYTE PTR [rsp+0x30]
   1400091da:	mov    cl,al
   1400091dc:	neg    cl
   1400091de:	sbb    edx,edx
   1400091e0:	add    edx,0x2
   1400091e3:	mov    DWORD PTR [rip+0x8857],edx        # 0x140011a40
   1400091e9:	add    rsp,0x28
   1400091ed:	ret    
   1400091ee:	int3   
   1400091ef:	int3   
   1400091f0:	int3   
   1400091f1:	int3   
   1400091f2:	int3   
   1400091f3:	int3   
   1400091f4:	int3   
   1400091f5:	int3   
   1400091f6:	int3   
   1400091f7:	int3   
   1400091f8:	int3   
   1400091f9:	int3   
   1400091fa:	int3   
   1400091fb:	int3   
   1400091fc:	int3   
   1400091fd:	int3   
   1400091fe:	int3   
   1400091ff:	int3   
   140009200:	lea    rax,[rip+0x9e19]        # 0x140013020
   140009207:	jmp    0x140009220
   14000920c:	int3   
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	int3   
   140009211:	int3   
   140009212:	int3   
   140009213:	int3   
   140009214:	int3   
   140009215:	int3   
   140009216:	int3   
   140009217:	int3   
   140009218:	int3   
   140009219:	int3   
   14000921a:	int3   
   14000921b:	int3   
   14000921c:	int3   
   14000921d:	int3   
   14000921e:	int3   
   14000921f:	int3   
   140009220:	mov    QWORD PTR [rsp+0x8],rcx
   140009225:	mov    QWORD PTR [rsp+0x10],rdx
   14000922a:	mov    QWORD PTR [rsp+0x18],r8
   14000922f:	mov    QWORD PTR [rsp+0x20],r9
   140009234:	sub    rsp,0x68
   140009238:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000923e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140009244:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000924a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140009250:	mov    rdx,rax
   140009253:	lea    rcx,[rip+0x5ce6]        # 0x14000ef40
   14000925a:	call   0x1400086d0
   14000925f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140009265:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000926b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140009271:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140009277:	mov    rcx,QWORD PTR [rsp+0x70]
   14000927c:	mov    rdx,QWORD PTR [rsp+0x78]
   140009281:	mov    r8,QWORD PTR [rsp+0x80]
   140009289:	mov    r9,QWORD PTR [rsp+0x88]
   140009291:	add    rsp,0x68
   140009295:	jmp    0x140009297
   140009297:	jmp    rax
   140009299:	int3   
   14000929a:	int3   
   14000929b:	int3   
   14000929c:	int3   
   14000929d:	int3   
   14000929e:	int3   
   14000929f:	int3   
   1400092a0:	lea    rax,[rip+0x9d69]        # 0x140013010
   1400092a7:	jmp    0x140009220
   1400092ac:	int3   
   1400092ad:	int3   
   1400092ae:	int3   
   1400092af:	int3   
   1400092b0:	int3   
   1400092b1:	int3   
   1400092b2:	int3   
   1400092b3:	int3   
   1400092b4:	int3   
   1400092b5:	int3   
   1400092b6:	int3   
   1400092b7:	int3   
   1400092b8:	int3   
   1400092b9:	int3   
   1400092ba:	int3   
   1400092bb:	int3   
   1400092bc:	int3   
   1400092bd:	int3   
   1400092be:	int3   
   1400092bf:	int3   
   1400092c0:	lea    rax,[rip+0x9d51]        # 0x140013018
   1400092c7:	jmp    0x140009220
   1400092cc:	int3   
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	int3   
   1400092d1:	int3   
   1400092d2:	int3   
   1400092d3:	int3   
   1400092d4:	int3   
   1400092d5:	int3   
   1400092d6:	int3   
   1400092d7:	int3   
   1400092d8:	int3   
   1400092d9:	int3   
   1400092da:	int3   
   1400092db:	int3   
   1400092dc:	int3   
   1400092dd:	int3   
   1400092de:	int3   
   1400092df:	int3   
   1400092e0:	jmp    QWORD PTR [rip+0x1e32]        # 0x14000b118
   1400092e6:	int3   
   1400092e7:	int3   
   1400092e8:	int3   
   1400092e9:	int3   
   1400092ea:	int3   
   1400092eb:	int3   
   1400092ec:	int3   
   1400092ed:	int3   
   1400092ee:	int3   
   1400092ef:	int3   
   1400092f0:	jmp    QWORD PTR [rip+0x2102]        # 0x14000b3f8
   1400092f6:	int3   
   1400092f7:	int3   
   1400092f8:	int3   
   1400092f9:	int3   
   1400092fa:	int3   
   1400092fb:	int3   
   1400092fc:	int3   
   1400092fd:	int3   
   1400092fe:	int3   
   1400092ff:	int3   
   140009300:	jmp    QWORD PTR [rip+0x1eda]        # 0x14000b1e0
   140009306:	int3   
   140009307:	int3   
   140009308:	int3   
   140009309:	int3   
   14000930a:	int3   
   14000930b:	int3   
   14000930c:	sub    rsp,0x28
   140009310:	mov    r8,QWORD PTR [r9+0x38]
   140009314:	mov    rcx,rdx
   140009317:	mov    rdx,r9
   14000931a:	call   0x140009330
   14000931f:	mov    eax,0x1
   140009324:	add    rsp,0x28
   140009328:	ret    
   140009329:	int3   
   14000932a:	int3   
   14000932b:	int3   
   14000932c:	int3   
   14000932d:	int3   
   14000932e:	int3   
   14000932f:	int3   
   140009330:	rex push rbx
   140009332:	sub    rsp,0x20
   140009336:	mov    r11d,DWORD PTR [r8]
   140009339:	mov    rbx,rdx
   14000933c:	and    r11d,0xfffffff8
   140009340:	mov    r9,rcx
   140009343:	test   BYTE PTR [r8],0x4
   140009347:	mov    r10,rcx
   14000934a:	je     0x14000935f
   14000934c:	mov    eax,DWORD PTR [r8+0x8]
   140009350:	movsxd r10,DWORD PTR [r8+0x4]
   140009354:	neg    eax
   140009356:	add    r10,rcx
   140009359:	movsxd rcx,eax
   14000935c:	and    r10,rcx
   14000935f:	movsxd rax,r11d
   140009362:	mov    rdx,QWORD PTR [rax+r10*1]
   140009366:	mov    rax,QWORD PTR [rbx+0x10]
   14000936a:	mov    ecx,DWORD PTR [rax+0x8]
   14000936d:	add    rcx,QWORD PTR [rbx+0x8]
   140009371:	test   BYTE PTR [rcx+0x3],0xf
   140009375:	je     0x140009383
   140009377:	movzx  eax,BYTE PTR [rcx+0x3]
   14000937b:	and    eax,0xfffffff0
   14000937e:	cdqe   
   140009380:	add    r9,rax
   140009383:	xor    r9,rdx
   140009386:	mov    rcx,r9
   140009389:	add    rsp,0x20
   14000938d:	pop    rbx
   14000938e:	jmp    0x140008aa0
   140009393:	int3   
   140009394:	int3   
   140009395:	int3   
   140009396:	int3   
   140009397:	int3   
   140009398:	int3   
   140009399:	int3   
   14000939a:	int3   
   14000939b:	int3   
   14000939c:	int3   
   14000939d:	int3   
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	int3   
   1400093a1:	int3   
   1400093a2:	int3   
   1400093a3:	int3   
   1400093a4:	int3   
   1400093a5:	int3   
   1400093a6:	jmp    QWORD PTR [rip+0x2034]        # 0x14000b3e0
   1400093ac:	int3   
   1400093ad:	int3   
   1400093ae:	int3   
   1400093af:	int3   
   1400093b0:	int3   
   1400093b1:	int3   
   1400093b2:	jmp    QWORD PTR [rip+0x20e0]        # 0x14000b498
   1400093b8:	int3   
   1400093b9:	int3   
   1400093ba:	int3   
   1400093bb:	int3   
   1400093bc:	int3   
   1400093bd:	int3   
   1400093be:	int3   
   1400093bf:	int3   
   1400093c0:	int3   
   1400093c1:	int3   
   1400093c2:	int3   
   1400093c3:	int3   
   1400093c4:	int3   
   1400093c5:	int3   
   1400093c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400093d0:	jmp    rax
   1400093d2:	int3   
   1400093d3:	int3   
   1400093d4:	int3   
   1400093d5:	int3   
   1400093d6:	int3   
   1400093d7:	int3   
   1400093d8:	int3   
   1400093d9:	int3   
   1400093da:	int3   
   1400093db:	int3   
   1400093dc:	int3   
   1400093dd:	int3   
   1400093de:	int3   
   1400093df:	int3   
   1400093e0:	int3   
   1400093e1:	int3   
   1400093e2:	int3   
   1400093e3:	int3   
   1400093e4:	int3   
   1400093e5:	int3   
   1400093e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400093f0:	sub    rsp,0x10
   1400093f4:	mov    QWORD PTR [rsp],r10
   1400093f8:	mov    QWORD PTR [rsp+0x8],r11
   1400093fd:	xor    r11,r11
   140009400:	lea    r10,[rsp+0x18]
   140009405:	sub    r10,rax
   140009408:	cmovb  r10,r11
   14000940c:	mov    r11,QWORD PTR gs:0x10
   140009415:	cmp    r10,r11
   140009418:	jae    0x14000942f
   14000941a:	and    r10w,0xf000
   140009420:	lea    r11,[r11-0x1000]
   140009427:	test   BYTE PTR [r11],r11b
   14000942a:	cmp    r10,r11
   14000942d:	jne    0x140009420
   14000942f:	mov    r10,QWORD PTR [rsp]
   140009433:	mov    r11,QWORD PTR [rsp+0x8]
   140009438:	add    rsp,0x10
   14000943c:	ret    
   14000943d:	int3   
   14000943e:	int3   
   14000943f:	int3   
   140009440:	int3   
   140009441:	int3   
   140009442:	int3   
   140009443:	int3   
   140009444:	int3   
   140009445:	int3   
   140009446:	rex push rbp
   140009448:	sub    rsp,0x40
   14000944c:	mov    rbp,rdx
   14000944f:	mov    rax,QWORD PTR [rcx]
   140009452:	mov    ecx,DWORD PTR [rax]
   140009454:	call   QWORD PTR [rip+0x1d06]        # 0x14000b160
   14000945a:	nop
   14000945b:	add    rsp,0x40
   14000945f:	pop    rbp
   140009460:	ret    
   140009461:	int3   
   140009462:	int3   
   140009463:	int3   
   140009464:	int3   
   140009465:	int3   
   140009466:	int3   
   140009467:	int3   
   140009468:	rex push rbp
   14000946a:	sub    rsp,0x30
   14000946e:	mov    rbp,rdx
   140009471:	mov    rax,QWORD PTR [rcx]
   140009474:	mov    ecx,DWORD PTR [rax]
   140009476:	call   QWORD PTR [rip+0x1ce4]        # 0x14000b160
   14000947c:	nop
   14000947d:	add    rsp,0x30
   140009481:	pop    rbp
   140009482:	ret    
   140009483:	int3   
   140009484:	int3   
   140009485:	int3   
   140009486:	int3   
   140009487:	int3   
   140009488:	int3   
   140009489:	int3   
   14000948a:	rex push rbp
   14000948c:	sub    rsp,0x20
   140009490:	mov    rbp,rdx
   140009493:	mov    rax,QWORD PTR [rcx]
   140009496:	mov    ecx,DWORD PTR [rax]
   140009498:	call   QWORD PTR [rip+0x1cc2]        # 0x14000b160
   14000949e:	nop
   14000949f:	add    rsp,0x20
   1400094a3:	pop    rbp
   1400094a4:	ret    
   1400094a5:	int3   
   1400094a6:	int3   
   1400094a7:	int3   
   1400094a8:	int3   
   1400094a9:	int3   
   1400094aa:	int3   
   1400094ab:	int3   
   1400094ac:	rex push rbp
   1400094ae:	sub    rsp,0x20
   1400094b2:	mov    rbp,rdx
   1400094b5:	mov    rax,QWORD PTR [rcx]
   1400094b8:	mov    rdx,rcx
   1400094bb:	mov    ecx,DWORD PTR [rax]
   1400094bd:	call   0x140008c0e
   1400094c2:	nop
   1400094c3:	add    rsp,0x20
   1400094c7:	pop    rbp
   1400094c8:	ret    
   1400094c9:	int3   
   1400094ca:	int3   
   1400094cb:	int3   
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	rex push rbp
   1400094d2:	sub    rsp,0x20
   1400094d6:	mov    rbp,rdx
   1400094d9:	mov    ecx,0x8
   1400094de:	call   0x140009084
   1400094e3:	nop
   1400094e4:	add    rsp,0x20
   1400094e8:	pop    rbp
   1400094e9:	ret    
   1400094ea:	int3   
   1400094eb:	int3   
   1400094ec:	int3   
   1400094ed:	int3   
   1400094ee:	int3   
   1400094ef:	int3   
   1400094f0:	int3   
   1400094f1:	int3   
   1400094f2:	int3   
   1400094f3:	int3   
   1400094f4:	int3   
   1400094f5:	int3   
   1400094f6:	int3   
   1400094f7:	int3   
   1400094f8:	int3   
   1400094f9:	int3   
   1400094fa:	int3   
   1400094fb:	int3   
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	rex push rbp
   140009502:	sub    rsp,0x20
   140009506:	mov    rbp,rdx
   140009509:	mov    rax,QWORD PTR [rcx]
   14000950c:	xor    ecx,ecx
   14000950e:	cmp    DWORD PTR [rax],0xc0000005
   140009514:	sete   cl
   140009517:	mov    eax,ecx
   140009519:	add    rsp,0x20
   14000951d:	pop    rbp
   14000951e:	ret    
   14000951f:	int3   
   140009520:	int3   
   140009521:	int3   
   140009522:	int3   
   140009523:	int3   
   140009524:	int3   
   140009525:	int3   
   140009526:	int3   
   140009527:	int3   
   140009528:	int3   
   140009529:	int3   
   14000952a:	int3   
   14000952b:	int3   
   14000952c:	int3   
   14000952d:	int3   
   14000952e:	int3   
   14000952f:	int3   
   140009530:	mov    QWORD PTR [rsp+0x8],rbx
   140009535:	push   rdi
   140009536:	sub    rsp,0x20
   14000953a:	mov    rdi,QWORD PTR [rip+0x878f]        # 0x140011cd0
   140009541:	test   rdi,rdi
   140009544:	je     0x140009563
   140009546:	and    QWORD PTR [rip+0x8782],0x0        # 0x140011cd0
   14000954e:	mov    rax,QWORD PTR [rdi]
   140009551:	mov    rbx,QWORD PTR [rax+0x10]
   140009555:	mov    rcx,rbx
   140009558:	call   QWORD PTR [rip+0x201a]        # 0x14000b578
   14000955e:	mov    rcx,rdi
   140009561:	call   rbx
   140009563:	mov    rbx,QWORD PTR [rsp+0x30]
   140009568:	add    rsp,0x20
   14000956c:	pop    rdi
   14000956d:	ret    
   14000956e:	int3   
   14000956f:	int3   
   140009570:	int3   
   140009571:	int3   
   140009572:	int3   
   140009573:	int3   
   140009574:	int3   
   140009575:	int3   
   140009576:	int3   
   140009577:	int3   
   140009578:	int3   
   140009579:	int3   
   14000957a:	int3   
   14000957b:	int3   
   14000957c:	int3   
   14000957d:	int3   
   14000957e:	int3   
   14000957f:	int3   
   140009580:	lea    rcx,[rip+0x8639]        # 0x140011bc0
   140009587:	rex.W jmp QWORD PTR [rip+0x1f82]        # 0x14000b510

Disassembly of section .imrsiv:

000000014000a000 <.imrsiv>:
   14000a000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000014000b000 <.rdata>:
   14000b000:	shl    bh,0x0
   14000b003:	add    BYTE PTR [rax],al
   14000b005:	add    BYTE PTR [rax],al
   14000b007:	add    al,dl
   14000b009:	test   DWORD PTR [rax],0x0
   14000b00f:	add    al,ah
   14000b011:	test   DWORD PTR [rax],0x0
   14000b017:	add    dh,dh
   14000b019:	test   DWORD PTR [rax],0x0
   14000b01f:	add    BYTE PTR [rsi],cl
   14000b021:	clc    
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	add    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	es clc 
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	add    BYTE PTR [rax],al
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	cmp    al,0xf8
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	push   rdx
   14000b039:	clc    
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	data16 clc 
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	add    BYTE PTR [rax],al
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	js     0x14000b042
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	mov    ?,eax
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	add    BYTE PTR [rax],al
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	movabs al,ds:0xd8000000000000f8
   14000b061:	clc    
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	add    BYTE PTR [rax],al
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	xchg   esp,eax
   14000b069:	add    al,0x1
   14000b06b:	add    BYTE PTR [rax],al
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rsi+0x104],ah
	...
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    al,ch
   14000b081:	cld    
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	add    BYTE PTR [rax],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	test   ch,bh
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	add    BYTE PTR [rax],al
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b091:	std    
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	add    BYTE PTR [rax],al
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	mov    esp,0xfd
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    al,dl
   14000b0a1:	std    
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    BYTE PTR [rax],al
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	add    al,0xfd
	...
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	ret    0x104
   14000b0bb:	add    BYTE PTR [rax],al
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rsi+0x104],dh
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    BYTE PTR [rax-0x7],bh
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	add    BYTE PTR [rax],al
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	push   0xfffffffffffffff9
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	add    BYTE PTR [rax],al
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	pop    rdx
   14000b0d9:	stc    
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	add    BYTE PTR [rax],al
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	rex.WX stc 
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	add    BYTE PTR [rax],al
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	ss stc 
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	add    BYTE PTR [rax],al
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	sub    bh,cl
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	add    BYTE PTR [rax],al
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	adc    al,0xf9
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rax],al
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	add    cl,bh
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	add    BYTE PTR [rax],al
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	loopne 0x14000b10e
   14000b10a:	add    DWORD PTR [rax],eax
   14000b10c:	add    BYTE PTR [rax],al
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	(bad)  
   14000b111:	add    al,0x1
   14000b113:	add    BYTE PTR [rax],al
   14000b115:	add    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rsi],dl
   14000b119:	add    eax,0x1
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	inc    BYTE PTR [rcx+rax*1]
	...
   14000b12f:	add    BYTE PTR [rdx],ch
   14000b131:	add    al,0x1
   14000b133:	add    BYTE PTR [rax],al
   14000b135:	add    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rsi-0x1],al
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    BYTE PTR [rax],al
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	inc    DWORD PTR es:[rax]
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rdx],cl
   14000b149:	inc    DWORD PTR [rax]
   14000b14b:	add    BYTE PTR [rax],al
   14000b14d:	add    BYTE PTR [rax],al
   14000b14f:	add    BYTE PTR [rdx],dl
   14000b151:	inc    BYTE PTR [rax]
   14000b153:	add    BYTE PTR [rax],al
   14000b155:	add    BYTE PTR [rax],al
   14000b157:	add    ah,bh
   14000b159:	std    
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    BYTE PTR [rax],al
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	in     al,0xfd
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	add    BYTE PTR [rax],al
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	inc    WORD PTR [rax]
   14000b16b:	add    BYTE PTR [rax],al
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    BYTE PTR [rsi],bh
   14000b171:	add    al,0x1
	...
   14000b17f:	add    BYTE PTR [rcx+rax*1+0x1],bh
   14000b183:	add    BYTE PTR [rax],al
   14000b185:	add    BYTE PTR [rax],al
   14000b187:	add    BYTE PTR [rcx+rax*1+0x1],cl
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	out    0x1,al
   14000b192:	add    DWORD PTR [rax],eax
   14000b194:	add    BYTE PTR [rax],al
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	cmp    BYTE PTR [rdx],al
   14000b19a:	add    DWORD PTR [rax],eax
   14000b19c:	add    BYTE PTR [rax],al
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	sub    al,BYTE PTR [rdx]
   14000b1a2:	add    DWORD PTR [rax],eax
   14000b1a4:	add    BYTE PTR [rax],al
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	add    BYTE PTR [rdx],al
   14000b1aa:	add    DWORD PTR [rax],eax
   14000b1ac:	add    BYTE PTR [rax],al
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b1b1:	add    DWORD PTR [rcx],eax
   14000b1b3:	add    BYTE PTR [rax],al
   14000b1b5:	add    BYTE PTR [rax],al
   14000b1b7:	add    BYTE PTR [rax],dl
   14000b1b9:	add    al,BYTE PTR [rcx]
	...
   14000b1c7:	add    BYTE PTR [rax+0x4],ch
   14000b1ca:	add    DWORD PTR [rax],eax
   14000b1cc:	add    BYTE PTR [rax],al
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	push   rax
   14000b1d1:	add    al,0x1
	...
   14000b1df:	add    BYTE PTR [rdx+0x5],al
   14000b1e2:	add    DWORD PTR [rax],eax
	...
   14000b1f0:	es sti 
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	add    BYTE PTR [rax],al
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	rex.WRX sti 
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	add    BYTE PTR [rax],al
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	jbe    0x14000b1fd
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	add    BYTE PTR [rax],al
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	adc    al,0xfb
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	add    BYTE PTR [rax],al
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	ds sti 
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	add    BYTE PTR [rax],al
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	(bad)  
   14000b219:	sti    
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	add    BYTE PTR [rax],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	mov    esp,0xfa
   14000b225:	add    BYTE PTR [rax],al
   14000b227:	add    al,dl
   14000b229:	cli    
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	add    BYTE PTR [rax],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	add    bh,bl
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	add    BYTE PTR [rax],al
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	call   0x14000b337
	...
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    BYTE PTR [rdx-0x4],bh
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	add    BYTE PTR [rax],al
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	xchg   esi,eax
   14000b251:	sti    
	...
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	pop    rax
   14000b261:	inc    DWORD PTR [rax]
	...
   14000b26f:	add    BYTE PTR [rdx+0xfc],ch
	...
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rbx+rdi*8+0x0],dh
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	clc    
   14000b289:	inc    BYTE PTR [rax]
   14000b28b:	add    BYTE PTR [rax],al
   14000b28d:	add    BYTE PTR [rax],al
   14000b28f:	add    dh,ah
   14000b291:	inc    BYTE PTR [rax]
   14000b293:	add    BYTE PTR [rax],al
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    al,bl
   14000b299:	inc    BYTE PTR [rax]
	...
   14000b2a7:	add    dl,ah
   14000b2a9:	sti    
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    BYTE PTR [rax],al
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	xchg   esi,eax
   14000b2b1:	cld    
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	clc    
   14000b2b9:	sti    
	...
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	enter  0xfb,0x0
	...
   14000b2d8:	(bad)  
   14000b2d9:	inc    BYTE PTR [rax]
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rsi+rdi*8+0x0],dl
   14000b2e3:	add    BYTE PTR [rax],al
   14000b2e5:	add    BYTE PTR [rax],al
   14000b2e7:	add    BYTE PTR [rax-0x2],ch
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	add    BYTE PTR [rax],al
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	xor    al,0xfe
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	rex.RX inc BYTE PTR [rax]
   14000b2fb:	add    BYTE PTR [rax],al
   14000b2fd:	add    BYTE PTR [rax],al
   14000b2ff:	add    BYTE PTR [rsi+rdi*8],ah
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	add    BYTE PTR [rax],al
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	js     0x14000b308
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	mov    bh,dh
	...
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	cmp    ah,bh
   14000b322:	add    BYTE PTR [rax],al
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	data16 cld 
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	rex.WR cld 
	...
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	mov    ?,ebx
	...
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	sub    ah,bh
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	(bad)  
   14000b359:	cld    
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	add    BYTE PTR [rax],al
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	xor    bh,ch
	...
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	push   0xfd
   14000b375:	add    BYTE PTR [rax],al
   14000b377:	add    BYTE PTR [rsi+rdi*8+0x0],bl
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	scas   al,BYTE PTR es:[rdi]
   14000b381:	inc    BYTE PTR [rax]
   14000b383:	add    BYTE PTR [rax],al
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rsi],ah
   14000b389:	std    
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	mov    eax,0xfc
   14000b395:	add    BYTE PTR [rax],al
   14000b397:	add    al,cl
   14000b399:	cld    
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	add    BYTE PTR [rax],al
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	sar    ah,cl
	...
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	retf   0x101
   14000b3b3:	add    BYTE PTR [rax],al
   14000b3b5:	add    BYTE PTR [rax],al
   14000b3b7:	add    BYTE PTR [rdx+0x101],bh
   14000b3bd:	add    BYTE PTR [rax],al
   14000b3bf:	add    BYTE PTR [rsi+0x101],bl
   14000b3c5:	add    BYTE PTR [rax],al
   14000b3c7:	add    BYTE PTR [rsi+0x1],bl
   14000b3ca:	add    DWORD PTR [rax],eax
   14000b3cc:	add    BYTE PTR [rax],al
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	(bad)  
   14000b3d1:	add    DWORD PTR [rcx],eax
	...
   14000b3df:	add    BYTE PTR [rdx+0x105],al
   14000b3e5:	add    BYTE PTR [rax],al
   14000b3e7:	add    BYTE PTR [rdx+0xf9],dl
   14000b3ed:	add    BYTE PTR [rax],al
   14000b3ef:	add    BYTE PTR [rsi+0xf9],bl
   14000b3f5:	add    BYTE PTR [rax],al
   14000b3f7:	add    BYTE PTR [rsi],dh
   14000b3f9:	add    eax,0x1
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	cs add eax,0x1
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	lods   al,BYTE PTR ds:[rsi]
   14000b409:	stc    
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	add    BYTE PTR [rax],al
   14000b40e:	add    BYTE PTR [rax],al
   14000b410:	mov    ah,0xf9
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	add    BYTE PTR [rax],al
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	mov    esi,0xf9
   14000b41d:	add    BYTE PTR [rax],al
   14000b41f:	add    dl,cl
   14000b421:	stc    
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rax],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	fdivr  st,st(1)
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	add    BYTE PTR [rax],al
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	out    0xf9,al
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	add    BYTE PTR [rax],al
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	clc    
   14000b439:	stc    
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	add    BYTE PTR [rax],al
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	or     bh,dl
   14000b442:	add    BYTE PTR [rax],al
   14000b444:	add    BYTE PTR [rax],al
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	adc    bh,dl
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	add    BYTE PTR [rax],al
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	sbb    bh,dl
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	add    BYTE PTR [rax],al
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	and    al,0xfa
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	add    BYTE PTR [rax],al
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	cmp    dl,bh
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	add    BYTE PTR [rax],al
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	rex.R cli 
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	add    BYTE PTR [rax],al
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	pop    rsp
   14000b471:	cli    
   14000b472:	add    BYTE PTR [rax],al
   14000b474:	add    BYTE PTR [rax],al
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	data16 cli 
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	add    BYTE PTR [rax],al
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	jb     0x14000b47c
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	add    BYTE PTR [rax],al
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	jp     0x14000b484
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	add    BYTE PTR [rax],al
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	test   dl,bh
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	add    BYTE PTR [rax],al
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	mov    WORD PTR [rip+0x1],es        # 0x14000b49f
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	xchg   edx,eax
   14000b4a1:	cli    
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	add    BYTE PTR [rax],al
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	test   al,0xfa
	...
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	push   rsp
   14000b4b9:	std    
	...
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	mov    al,BYTE PTR [rdx]
   14000b4ca:	add    DWORD PTR [rax],eax
   14000b4cc:	add    BYTE PTR [rax],al
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	(bad)  
   14000b4d1:	add    al,0x1
   14000b4d3:	add    BYTE PTR [rax],al
   14000b4d5:	add    BYTE PTR [rax],al
   14000b4d7:	add    dl,ch
   14000b4d9:	add    eax,DWORD PTR [rcx]
   14000b4db:	add    BYTE PTR [rax],al
   14000b4dd:	add    BYTE PTR [rax],al
   14000b4df:	add    al,dl
   14000b4e1:	add    eax,DWORD PTR [rcx]
   14000b4e3:	add    BYTE PTR [rax],al
   14000b4e5:	add    BYTE PTR [rax],al
   14000b4e7:	add    BYTE PTR [rbx+rax*1+0x1],bh
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b4f1:	add    eax,DWORD PTR [rcx]
   14000b4f3:	add    BYTE PTR [rax],al
   14000b4f5:	add    BYTE PTR [rax],al
   14000b4f7:	add    BYTE PTR [rdx+0x103],dl
   14000b4fd:	add    BYTE PTR [rax],al
   14000b4ff:	add    BYTE PTR [rbx+rax*1+0x1],al
   14000b506:	add    BYTE PTR [rax],al
   14000b508:	push   0x3
   14000b50a:	add    DWORD PTR [rax],eax
   14000b50c:	add    BYTE PTR [rax],al
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	push   rsi
   14000b511:	add    eax,DWORD PTR [rcx]
   14000b513:	add    BYTE PTR [rax],al
   14000b515:	add    BYTE PTR [rax],al
   14000b517:	add    BYTE PTR [rsi],bh
   14000b519:	add    eax,DWORD PTR [rcx]
   14000b51b:	add    BYTE PTR [rax],al
   14000b51d:	add    BYTE PTR [rax],al
   14000b51f:	add    BYTE PTR [rbx+rax*1],dh
   14000b522:	add    DWORD PTR [rax],eax
   14000b524:	add    BYTE PTR [rax],al
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	(bad)  
   14000b529:	add    eax,DWORD PTR [rcx]
   14000b52b:	add    BYTE PTR [rax],al
   14000b52d:	add    BYTE PTR [rax],al
   14000b52f:	add    BYTE PTR [rax],al
   14000b531:	add    eax,DWORD PTR [rcx]
   14000b533:	add    BYTE PTR [rax],al
   14000b535:	add    BYTE PTR [rax],al
   14000b537:	add    dl,dh
   14000b539:	add    al,BYTE PTR [rcx]
   14000b53b:	add    BYTE PTR [rax],al
   14000b53d:	add    BYTE PTR [rax],al
   14000b53f:	add    dl,ah
   14000b541:	add    al,BYTE PTR [rcx]
   14000b543:	add    BYTE PTR [rax],al
   14000b545:	add    BYTE PTR [rax],al
   14000b547:	add    ah,cl
   14000b549:	add    al,BYTE PTR [rcx]
   14000b54b:	add    BYTE PTR [rax],al
   14000b54d:	add    BYTE PTR [rax],al
   14000b54f:	add    BYTE PTR [rdx+rax*1+0x1],dh
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	sahf   
   14000b559:	add    al,BYTE PTR [rcx]
	...
   14000b567:	add    BYTE PTR [rdx-0x3],al
	...
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	mov    al,0x8e
   14000b57a:	add    BYTE PTR [rax+0x1],al
   14000b57d:	add    BYTE PTR [rax],al
   14000b57f:	add    al,dl
   14000b581:	xchg   ebx,eax
   14000b582:	add    BYTE PTR [rax+0x1],al
	...
   14000b58d:	add    BYTE PTR [rax],al
   14000b58f:	add    BYTE PTR [rax-0x78],al
   14000b592:	add    BYTE PTR [rax+0x1],al
   14000b595:	add    BYTE PTR [rax],al
   14000b597:	add    BYTE PTR [rax],al
   14000b599:	adc    BYTE PTR [rax],al
   14000b59b:	rex add DWORD PTR [rax],eax
   14000b59e:	add    BYTE PTR [rax],al
   14000b5a0:	adc    BYTE PTR [rax],dl
   14000b5a2:	add    BYTE PTR [rax+0x1],al
	...
   14000b5b5:	add    BYTE PTR [rax],al
   14000b5b7:	add    BYTE PTR [rax-0x79],ah
   14000b5ba:	add    BYTE PTR [rax+0x1],al
   14000b5bd:	add    BYTE PTR [rax],al
   14000b5bf:	add    al,dh
   14000b5c1:	mov    eax,DWORD PTR [rax]
   14000b5c3:	rex add DWORD PTR [rax],eax
	...
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	add    BYTE PTR [rax],dl
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	adc    BYTE PTR [rax],dl
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	xor    BYTE PTR [rbx],dl
   14000b5da:	add    BYTE PTR [rax],al
   14000b5dc:	jo     0x14000b5f1
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	lock adc eax,DWORD PTR [rax]
   14000b5e3:	add    BYTE PTR [rax],dl
   14000b5e5:	adc    al,0x0
   14000b5e7:	add    BYTE PTR [rax+0x14],dh
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	sbb    BYTE PTR [rax],0x0
   14000b5ef:	add    BYTE PTR [rax],dl
   14000b5f1:	sbb    al,BYTE PTR [rax]
   14000b5f3:	add    BYTE PTR [rax-0x3fffffe6],dl
   14000b5f9:	sbb    al,BYTE PTR [rax]
   14000b5fb:	add    BYTE PTR [rax+0x2000001b],dl
   14000b601:	sbb    al,0x0
   14000b603:	add    BYTE PTR [rax],dh
   14000b605:	sbb    al,0x0
   14000b607:	add    BYTE PTR [rax+0x1e],dl
   14000b60a:	add    BYTE PTR [rax],al
   14000b60c:	add    BYTE PTR [rsi],ch
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	and    BYTE PTR [rip+0x76d00000],bh        # 0x1b6d0b616
   14000b616:	add    BYTE PTR [rax],al
   14000b618:	(bad)  
   14000b619:	ja     0x14000b61b
   14000b61b:	add    BYTE PTR [rax+0x77],dh
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	loopne 0x14000b699
   14000b622:	add    BYTE PTR [rax],al
   14000b624:	lock ja 0x14000b627
   14000b627:	add    BYTE PTR [rax+0x78],ah
   14000b62a:	add    BYTE PTR [rax],al
   14000b62c:	add    BYTE PTR [rcx+0x0],bh
   14000b62f:	add    BYTE PTR [rax+0x79],dh
   14000b632:	add    BYTE PTR [rax],al
   14000b634:	lock jns 0x14000b637
   14000b637:	add    BYTE PTR [rax+0x7a],ah
   14000b63a:	add    BYTE PTR [rax],al
   14000b63c:	loopne 0x14000b6b8
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	rol    BYTE PTR [rax-0x7f100000],0x0
   14000b647:	add    BYTE PTR [rax],ah
   14000b649:	add    DWORD PTR [rax],0x86d000
   14000b64f:	add    BYTE PTR [rax-0x79],ah
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	mov    BYTE PTR [rax],al
   14000b657:	add    BYTE PTR [rax-0x76],dh
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	mov    al,0x8b
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	lock mov eax,DWORD PTR [rax]
   14000b663:	add    BYTE PTR [rax+0x8e],dh
   14000b669:	pop    QWORD PTR [rax]
   14000b66b:	add    BYTE PTR [rax],al
   14000b66d:	xchg   ecx,eax
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	and    BYTE PTR [rcx-0x6e000000],dl
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	and    BYTE PTR [rdx-0x6d600000],dl
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	rcl    BYTE PTR [rdx-0x6d200000],0x0
   14000b687:	add    al,dh
   14000b689:	xchg   edx,eax
   14000b68a:	add    BYTE PTR [rax],al
   14000b68c:	add    BYTE PTR [rbx-0x6ad00000],dl
   14000b692:	add    BYTE PTR [rax],al
   14000b694:	adc    BYTE PTR [rbp+0x0],0x0
   14000b69b:	add    BYTE PTR [rax],al
   14000b69d:	add    BYTE PTR [rax],al
   14000b69f:	add    al,al
   14000b6a1:	adc    al,0x1
   14000b6a3:	rex add DWORD PTR [rax],eax
   14000b6a6:	add    BYTE PTR [rax],al
   14000b6a8:	(bad)  
   14000b6a9:	adc    eax,0x14001
   14000b6ae:	add    BYTE PTR [rax],al
   14000b6b0:	push   rax
   14000b6b1:	add    BYTE PTR [rdx+0x0],dl
   14000b6b4:	add    BYTE PTR [rax],al
   14000b6b6:	add    BYTE PTR [rax],al
   14000b6b8:	shl    BYTE PTR [rsi+0x14000],0x0
   14000b6bf:	add    BYTE PTR [rbp+0x0],ah
   14000b6c2:	js     0x14000b6c4
   14000b6c4:	je     0x14000b6c6
   14000b6c6:	sub    eax,0x73006d00
   14000b6cb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9012dd1
   14000b6d1:	add    BYTE PTR [rsi+0x0],ch
   14000b6d4:	sub    eax,0x69006200
   14000b6d9:	add    BYTE PTR [rdi+0x0],ch
   14000b6dc:	ins    DWORD PTR es:[rdi],dx
   14000b6dd:	add    BYTE PTR [rbp+0x0],ah
   14000b6e0:	je     0x14000b6e2
   14000b6e2:	jb     0x14000b6e4
   14000b6e4:	imul   eax,DWORD PTR [rax],0x730063
   14000b6ea:	sub    eax,0x69007700
   14000b6ef:	add    BYTE PTR [rsi+0x0],ch
   14000b6f2:	(bad)  
   14000b6f3:	add    BYTE PTR [rcx+0x0],ch
   14000b6f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b6f7:	add    BYTE PTR [rip+0x6f006300],ch        # 0x1af0119fd
   14000b6fd:	add    BYTE PTR [rdx+0x0],dh
   14000b700:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x171012307
   14000b707:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00e80d
   14000b70d:	add    BYTE PTR [rax],dh
	...
   14000b71f:	add    BYTE PTR [rbp+0x78],ah
   14000b722:	je     0x14000b751
   14000b724:	ins    DWORD PTR es:[rdi],dx
   14000b725:	jae    0x14000b754
   14000b727:	ja     0x14000b792
   14000b729:	outs   dx,BYTE PTR ds:[rsi]
   14000b72a:	sub    eax,0x6d6f6962
   14000b72f:	gs je  0x14000b7a4
   14000b732:	imul   esp,DWORD PTR [rbx+0x73],0x6e69772d
   14000b739:	(bad)  
   14000b73a:	imul   ebp,DWORD PTR [rdi+0x2d],0x65726f63
   14000b741:	sub    eax,0x312d316c
   14000b746:	sub    eax,0x6c642e30
   14000b74b:	ins    BYTE PTR es:[rdi],dx
   14000b74c:	add    BYTE PTR [rax],al
   14000b74e:	add    BYTE PTR [rax],al
   14000b750:	rex.RX add BYTE PTR [rax+0x0],r9b
   14000b754:	add    BYTE PTR [rax],al
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	(bad)  
   14000b759:	mov    bh,0x0
   14000b75b:	rex add DWORD PTR [rax],eax
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	add    BYTE PTR gs:[rax+0x0],bh
   14000b764:	je     0x14000b766
   14000b766:	sub    eax,0x73006d00
   14000b76b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9012e71
   14000b771:	add    BYTE PTR [rsi+0x0],ch
   14000b774:	sub    eax,0x69006200
   14000b779:	add    BYTE PTR [rdi+0x0],ch
   14000b77c:	ins    DWORD PTR es:[rdi],dx
   14000b77d:	add    BYTE PTR [rbp+0x0],ah
   14000b780:	je     0x14000b782
   14000b782:	jb     0x14000b784
   14000b784:	imul   eax,DWORD PTR [rax],0x730063
   14000b78a:	sub    eax,0x69007700
   14000b78f:	add    BYTE PTR [rsi+0x0],ch
   14000b792:	(bad)  
   14000b793:	add    BYTE PTR [rcx+0x0],ch
   14000b796:	outs   dx,DWORD PTR ds:[rsi]
   14000b797:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17101239d
   14000b79d:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d00e9a3
   14000b7a3:	add    BYTE PTR [rax],dh
	...
   14000b7ad:	add    BYTE PTR [rax],al
   14000b7af:	add    BYTE PTR [rbp+0x78],ah
   14000b7b2:	je     0x14000b7e1
   14000b7b4:	ins    DWORD PTR es:[rdi],dx
   14000b7b5:	jae    0x14000b7e4
   14000b7b7:	ja     0x14000b822
   14000b7b9:	outs   dx,BYTE PTR ds:[rsi]
   14000b7ba:	sub    eax,0x6d6f6962
   14000b7bf:	gs je  0x14000b834
   14000b7c2:	imul   esp,DWORD PTR [rbx+0x73],0x6e69772d
   14000b7c9:	(bad)  
   14000b7ca:	imul   ebp,DWORD PTR [rdi+0x2d],0x322d316c
   14000b7d1:	sub    eax,0x6c642e30
   14000b7d6:	ins    BYTE PTR es:[rdi],dx
   14000b7d7:	add    BYTE PTR [rdi],ch
   14000b7d9:	mov    ah,0x67
   14000b7db:	push   rcx
   14000b7dc:	adc    ecx,eax
   14000b7de:	movabs eax,ds:0xb1be6ab8ec4ac47
   14000b7e7:	push   rsp
   14000b7e8:	adc    BYTE PTR [rdx],bl
   14000b7ea:	add    BYTE PTR [rax+0x1],al
   14000b7ed:	add    BYTE PTR [rax],al
   14000b7ef:	add    al,dh
   14000b7f1:	adc    eax,DWORD PTR [rax]
   14000b7f3:	rex add DWORD PTR [rax],eax
   14000b7f6:	add    BYTE PTR [rax],al
   14000b7f8:	nop
   14000b7f9:	sbb    al,BYTE PTR [rax]
   14000b7fb:	rex add DWORD PTR [rax],eax
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	rcr    BYTE PTR [rdx],0x0
   14000b803:	rex add DWORD PTR [rax],eax
   14000b806:	add    BYTE PTR [rax],al
   14000b808:	nop
   14000b809:	sbb    eax,DWORD PTR [rax]
   14000b80b:	rex add DWORD PTR [rax],eax
   14000b80e:	add    BYTE PTR [rax],al
   14000b810:	xor    BYTE PTR [rbx],dl
   14000b812:	add    BYTE PTR [rax+0x1],al
   14000b815:	add    BYTE PTR [rax],al
   14000b817:	add    BYTE PTR [rax],ah
   14000b819:	sbb    al,0x0
   14000b81b:	rex add DWORD PTR [rax],eax
   14000b81e:	add    BYTE PTR [rax],al
   14000b820:	jo     0x14000b835
   14000b822:	add    BYTE PTR [rax+0x1],al
   14000b825:	add    BYTE PTR [rax],al
   14000b827:	add    al,dh
   14000b829:	adc    eax,DWORD PTR [rax]
   14000b82b:	rex add DWORD PTR [rax],eax
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	adc    BYTE PTR [rax+rax*1],dl
   14000b833:	rex add DWORD PTR [rax],eax
   14000b836:	add    BYTE PTR [rax],al
   14000b838:	jo     0x14000b84e
   14000b83a:	add    BYTE PTR [rax+0x1],al
   14000b83d:	add    BYTE PTR [rax],al
   14000b83f:	add    BYTE PTR [rax+0x1400018],al
   14000b845:	add    BYTE PTR [rax],al
   14000b847:	add    al,dl
   14000b849:	jbe    0x14000b84b
   14000b84b:	rex add DWORD PTR [rax],eax
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	(bad)  
   14000b851:	ja     0x14000b853
   14000b853:	rex add DWORD PTR [rax],eax
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	jo     0x14000b8d1
   14000b85a:	add    BYTE PTR [rax+0x1],al
   14000b85d:	add    BYTE PTR [rax],al
   14000b85f:	add    al,ah
   14000b861:	ja     0x14000b863
   14000b863:	rex add DWORD PTR [rax],eax
   14000b866:	add    BYTE PTR [rax],al
   14000b868:	lock ja 0x14000b86b
   14000b86b:	rex add DWORD PTR [rax],eax
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	(bad)  
   14000b871:	js     0x14000b873
   14000b873:	rex add DWORD PTR [rax],eax
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	add    BYTE PTR [rcx+0x0],bh
   14000b87b:	rex add DWORD PTR [rax],eax
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	jo     0x14000b8fb
   14000b882:	add    BYTE PTR [rax+0x1],al
   14000b885:	add    BYTE PTR [rax],al
   14000b887:	add    al,dh
   14000b889:	jns    0x14000b88b
   14000b88b:	rex add DWORD PTR [rax],eax
   14000b88e:	add    BYTE PTR [rax],al
   14000b890:	loopne 0x14000b90c
   14000b892:	add    BYTE PTR [rax+0x1],al
   14000b895:	add    BYTE PTR [rax],al
   14000b897:	add    BYTE PTR [rax+0x7a],ah
   14000b89a:	add    BYTE PTR [rax+0x1],al
   14000b89d:	add    BYTE PTR [rax],al
   14000b89f:	add    al,dh
   14000b8a1:	xchg   edx,eax
   14000b8a2:	add    BYTE PTR [rax+0x1],al
   14000b8a5:	add    BYTE PTR [rax],al
   14000b8a7:	add    al,dh
   14000b8a9:	xchg   edx,eax
   14000b8aa:	add    BYTE PTR [rax+0x1],al
   14000b8ad:	add    BYTE PTR [rax],al
   14000b8af:	add    al,dh
   14000b8b1:	xchg   edx,eax
   14000b8b2:	add    BYTE PTR [rax+0x1],al
   14000b8b5:	add    BYTE PTR [rax],al
   14000b8b7:	add    al,dh
   14000b8b9:	xchg   edx,eax
   14000b8ba:	add    BYTE PTR [rax+0x1],al
   14000b8bd:	add    BYTE PTR [rax],al
   14000b8bf:	add    al,dh
   14000b8c1:	xchg   edx,eax
   14000b8c2:	add    BYTE PTR [rax+0x1],al
   14000b8c5:	add    BYTE PTR [rax],al
   14000b8c7:	add    al,dh
   14000b8c9:	xchg   edx,eax
   14000b8ca:	add    BYTE PTR [rax+0x1],al
   14000b8cd:	add    BYTE PTR [rax],al
   14000b8cf:	add    al,dh
   14000b8d1:	xchg   edx,eax
   14000b8d2:	add    BYTE PTR [rax+0x1],al
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    al,dh
   14000b8d9:	xchg   edx,eax
   14000b8da:	add    BYTE PTR [rax+0x1],al
   14000b8dd:	add    BYTE PTR [rax],al
   14000b8df:	add    al,dh
   14000b8e1:	xchg   edx,eax
   14000b8e2:	add    BYTE PTR [rax+0x1],al
   14000b8e5:	add    BYTE PTR [rax],al
   14000b8e7:	add    al,dh
   14000b8e9:	xchg   edx,eax
   14000b8ea:	add    BYTE PTR [rax+0x1],al
   14000b8ed:	add    BYTE PTR [rax],al
   14000b8ef:	add    al,dh
   14000b8f1:	xchg   edx,eax
   14000b8f2:	add    BYTE PTR [rax+0x1],al
	...
   14000b8fd:	add    BYTE PTR [rax],al
   14000b8ff:	add    al,al
   14000b901:	fadd   QWORD PTR [rax]
   14000b903:	rex add DWORD PTR [rax],eax
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	rol    BYTE PTR [rax+0x14000],0x0
   14000b90f:	add    al,dh
   14000b911:	add    BYTE PTR [rax],0x40
   14000b914:	add    DWORD PTR [rax],eax
   14000b916:	add    BYTE PTR [rax],al
   14000b918:	clc    
   14000b919:	sbb    al,BYTE PTR [rcx]
   14000b91b:	rex add DWORD PTR [rax],eax
	...
   14000b93e:	add    BYTE PTR [rax],al
   14000b940:	adc    bl,bl
   14000b942:	add    BYTE PTR [rax+0x1],al
   14000b945:	add    BYTE PTR [rax],al
   14000b947:	add    BYTE PTR [rcx],al
   14000b949:	add    BYTE PTR [rax],al
   14000b94b:	add    BYTE PTR [rax],al
   14000b94d:	add    BYTE PTR [rdx],cl
	...
   14000b957:	add    BYTE PTR [rbp+0x2],ah
   14000b95a:	add    BYTE PTR [rax],cl
	...
   14000b978:	add    DWORD PTR [rax],eax
   14000b97a:	add    BYTE PTR [rdx],al
	...
   14000b988:	loopne 0x14000b962
   14000b98a:	add    BYTE PTR [rax+0x1],al
	...
   14000b99d:	add    BYTE PTR [rax],al
   14000b99f:	add    BYTE PTR [rax-0x22],ah
   14000b9a2:	add    BYTE PTR [rax+0x1],al
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    al,al
   14000b9a9:	add    BYTE PTR [rax],0x40
   14000b9ac:	add    DWORD PTR [rax],eax
   14000b9ae:	add    BYTE PTR [rax],al
   14000b9b0:	lock add BYTE PTR [rax],0x40
   14000b9b4:	add    DWORD PTR [rax],eax
   14000b9b6:	add    BYTE PTR [rax],al
   14000b9b8:	cwde   
   14000b9b9:	sbb    eax,DWORD PTR [rcx]
   14000b9bb:	rex add DWORD PTR [rax],eax
	...
   14000b9de:	add    BYTE PTR [rax],al
   14000b9e0:	(bad)  
   14000b9e1:	fild   WORD PTR [rax]
   14000b9e3:	rex add DWORD PTR [rax],eax
   14000b9e6:	add    BYTE PTR [rax],al
   14000b9e8:	add    DWORD PTR [rax],eax
   14000b9ea:	add    BYTE PTR [rax],al
   14000b9ec:	add    BYTE PTR [rax],al
   14000b9ee:	or     al,BYTE PTR [rax]
	...
   14000b9f8:	add    al,BYTE PTR gs:[rax]
   14000b9fb:	or     BYTE PTR [rax],al
	...
   14000ba15:	add    BYTE PTR [rax],al
   14000ba17:	add    BYTE PTR [rcx],al
   14000ba19:	add    BYTE PTR [rax],al
   14000ba1b:	add    al,BYTE PTR [rax]
	...
   14000ba25:	add    BYTE PTR [rax],al
   14000ba27:	add    BYTE PTR [rax],dh
   14000ba29:	fiadd  WORD PTR [rax]
   14000ba2b:	rex add DWORD PTR [rax],eax
	...
   14000ba36:	add    BYTE PTR [rax],al
   14000ba38:	xchg   esp,eax
   14000ba39:	lock fisub DWORD PTR [rcx+0x4841b06f]
   14000ba40:	mov    WORD PTR [rbx-0x68],fs
   14000ba43:	and    dh,al
   14000ba45:	mov    esp,DWORD PTR [rbp-0x5f]
   14000ba48:	rex.W add BYTE PTR [rcx+0x0],bpl
   14000ba4c:	add    BYTE PTR [eax+0x0],ch
   14000ba50:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ba54:	outs   dx,BYTE PTR ds:[rsi]
   14000ba55:	add    BYTE PTR [rbx+0x0],dh
   14000ba58:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ba5c:	je     0x14000ba5e
   14000ba5e:	push   rbp
   14000ba5f:	add    BYTE PTR [rcx+0x0],cl
	...
   14000ba6e:	add    BYTE PTR [rax],al
   14000ba70:	push   rbx
   14000ba71:	add    BYTE PTR [rcx+0x0],bl
   14000ba74:	push   rbx
   14000ba75:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000ba79:	add    BYTE PTR [rbp+0x0],cl
   14000ba7c:	pop    rsp
   14000ba7d:	add    BYTE PTR [rbx+0x0],al
   14000ba80:	jne    0x14000ba82
   14000ba82:	jb     0x14000ba84
   14000ba84:	jb     0x14000ba86
   14000ba86:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ba8a:	je     0x14000ba8c
   14000ba8c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ba90:	outs   dx,BYTE PTR ds:[rsi]
   14000ba91:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ba95:	add    BYTE PTR [rdi+0x0],ch
   14000ba98:	ins    BYTE PTR es:[rdi],dx
   14000ba99:	add    BYTE PTR [rbx+0x0],dl
   14000ba9c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000baa1:	add    BYTE PTR [rbx+0x0],al
   14000baa4:	outs   dx,DWORD PTR ds:[rsi]
   14000baa5:	add    BYTE PTR [rsi+0x0],ch
   14000baa8:	je     0x14000baaa
   14000baaa:	jb     0x14000baac
   14000baac:	outs   dx,DWORD PTR ds:[rsi]
   14000baad:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000bab1:	add    BYTE PTR [rbp+0x0],al
   14000bab4:	(bad)  
   14000bab5:	add    BYTE PTR [rbx+0x0],dh
   14000bab8:	push   rsp
   14000bab9:	add    BYTE PTR [rbp+0x0],ah
   14000babc:	jae    0x14000babe
   14000babe:	je     0x14000bac0
	...
   14000bac8:	mov    ah,BYTE PTR [rdx]
   14000baca:	adc    bl,BYTE PTR [rsi]
   14000bacc:	stc    
   14000bacd:	scas   al,BYTE PTR es:[rdi]
   14000bace:	ins    DWORD PTR es:[rdi],dx
   14000bacf:	rex.WRX mov WORD PTR [rbx],?
   14000bad2:	movabs eax,ds:0x3dd6055fe2f0db92
   14000badb:	sbb    eax,0x37951957
   14000bae0:	mov    ss,WORD PTR [rbx+0x52]
   14000bae3:	mov    dl,0x2f
   14000bae5:	rex.RB and BYTE PTR [r10],0xbc
   14000bae9:	(bad)  
   14000baea:	sti    
   14000baeb:	sbb    dl,ch
   14000baed:	(bad)  
   14000baee:	repnz rex.RXB mov r10b,r8b
   14000baf2:	xchg   BYTE PTR [rdx+rdx*1+0x469ac769],cl
   14000baf9:	add    DWORD PTR [rax],eax
   14000bafb:	add    BYTE PTR [rax],al
   14000bafd:	add    BYTE PTR [rax],al
   14000baff:	add    al,al
   14000bb01:	add    BYTE PTR [rax],al
   14000bb03:	add    BYTE PTR [rax],al
   14000bb05:	add    BYTE PTR [rax],al
   14000bb07:	rex.RX xor eax,0x561220e2
   14000bb0d:	(bad)  
   14000bb0e:	mov    ecx,0xda908c4d
   14000bb13:	jrcxz  0x14000babc
   14000bb15:	jge    0x14000bb2f
   14000bb17:	pop    rsi
   14000bb18:	and    eax,DWORD PTR [rbx]
   14000bb1a:	add    BYTE PTR [rax],al
   14000bb1c:	add    BYTE PTR [rax],al
   14000bb1e:	add    BYTE PTR [rax],al
   14000bb20:	rol    BYTE PTR [rax],0x0
   14000bb23:	add    BYTE PTR [rax],al
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	rex.RX cmp al,0x0
   14000bb2a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000bb2e:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   14000bb33:	add    BYTE PTR [rax],al
   14000bb35:	add    BYTE PTR [rax],al
   14000bb37:	add    BYTE PTR [rsi+0x0],cl
   14000bb3a:	push   rbp
   14000bb3b:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000bb47:	add    BYTE PTR [rip+0x6d004500],ch        # 0x1ad01004d
   14000bb4d:	add    BYTE PTR [rdx+0x0],ah
   14000bb50:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   14000bb55:	add    BYTE PTR [rcx+0x0],ch
   14000bb58:	outs   dx,BYTE PTR ds:[rsi]
   14000bb59:	add    BYTE PTR [rdi+0x0],ah
   14000bb5c:	add    BYTE PTR [rax],al
   14000bb5e:	add    BYTE PTR [rax],al
   14000bb60:	push   rcx
   14000bb61:	es sbb al,0x96
   14000bb64:	rex.WX or sil,dil
   14000bb67:	adc    ebp,esp
   14000bb69:	rex.WR xchg rdi,rax
   14000bb6b:	movabs eax,ds:0x7700254122c0ac
   14000bb74:	jae    0x14000bb76
   14000bb76:	and    eax,0x73007700
   14000bb7b:	add    BYTE PTR [rcx],ch
   14000bb7d:	add    BYTE PTR [rax],al
   14000bb7f:	add    BYTE PTR [rsp+rbx*4],bh
   14000bb82:	mov    esi,0x394937d6
   14000bb87:	imul   ecx,DWORD PTR [rbp-0x2e251741],0x43
   14000bb8e:	bswap  ebx
   14000bb90:	rex.WRXB add BYTE PTR [r10],r15b
   14000bb93:	add    BYTE PTR [rax+0x0],dl
   14000bb96:	push   rbx
   14000bb97:	add    BYTE PTR [rdi+0x0],al
   14000bb9a:	cmp    al,BYTE PTR [rax]
   14000bb9c:	rex.X add BYTE PTR [rbp+0x0],dl
   14000bba0:	add    BYTE PTR [rdx],r15b
   14000bba3:	add    BYTE PTR [rax],ch
   14000bba5:	add    BYTE PTR [rcx+0x0],al
   14000bba8:	cmp    eax,DWORD PTR [rax]
   14000bbaa:	cmp    eax,DWORD PTR [rax]
   14000bbac:	xor    eax,DWORD PTR [rax]
   14000bbae:	cmp    eax,DWORD PTR [rax]
   14000bbb0:	cmp    eax,DWORD PTR [rax]
   14000bbb2:	cmp    eax,DWORD PTR [rax]
   14000bbb4:	add    BYTE PTR [rax],al
   14000bbb6:	add    BYTE PTR [rax],al
   14000bbb8:	rex.WR add BYTE PTR [rbx+0x0],r14b
   14000bbbc:	(bad)  
   14000bbbd:	add    BYTE PTR [rcx+0x0],dl
   14000bbc0:	jne    0x14000bbc2
   14000bbc2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bbc6:	jns    0x14000bbc8
   14000bbc8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000bbcc:	data16 add BYTE PTR [rdi+0x0],ch
   14000bbd0:	jb     0x14000bbd2
   14000bbd2:	ins    DWORD PTR es:[rdi],dx
   14000bbd3:	add    BYTE PTR [rcx+0x0],ah
   14000bbd6:	je     0x14000bbd8
   14000bbd8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bbde:	push   rax
   14000bbdf:	add    BYTE PTR [rdi+0x0],ch
   14000bbe2:	ins    BYTE PTR es:[rdi],dx
   14000bbe3:	add    BYTE PTR [rcx+0x0],ch
   14000bbe6:	movsxd eax,DWORD PTR [rax]
   14000bbe8:	jns    0x14000bbea
   14000bbea:	add    BYTE PTR [rax],al
   14000bbec:	add    BYTE PTR [rax],al
   14000bbee:	add    BYTE PTR [rax],al
   14000bbf0:	add    BYTE PTR fs:[rbx+0x0],dh
   14000bbf4:	pop    rsp
   14000bbf5:	add    BYTE PTR [rbx+0x0],dh
   14000bbf8:	add    BYTE PTR gs:[rbx+0x0],ah
   14000bbfc:	jne    0x14000bbfe
   14000bbfe:	jb     0x14000bc00
   14000bc00:	imul   eax,DWORD PTR [rax],0x790074
   14000bc06:	pop    rsp
   14000bc07:	add    BYTE PTR [rbp+0x0],ah
   14000bc0a:	(bad)  
   14000bc0b:	add    BYTE PTR [rbx+0x0],dh
   14000bc0e:	pop    rsp
   14000bc0f:	add    BYTE PTR [rax+0x0],dh
   14000bc12:	outs   dx,DWORD PTR ds:[rsi]
   14000bc13:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000bc17:	add    BYTE PTR [rbx+0x0],ah
   14000bc1a:	jns    0x14000bc1c
   14000bc1c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bc20:	add    BYTE PTR [ecx+0x0],ch
   14000bc24:	outs   dx,BYTE PTR ds:[rsi]
   14000bc25:	add    BYTE PTR [rbp+0x0],ah
   14000bc28:	pop    rsp
   14000bc29:	add    BYTE PTR [rbp+0x0],ah
   14000bc2c:	jbe    0x14000bc2e
   14000bc2e:	(bad)  
   14000bc2f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000bc33:	add    BYTE PTR [rcx+0x0],ch
   14000bc36:	(bad)  
   14000bc37:	add    BYTE PTR [rax+rax*1+0x65],bl
   14000bc3b:	add    BYTE PTR [rsi+0x0],dh
   14000bc3e:	(bad)  
   14000bc3f:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000bc43:	add    BYTE PTR [rdi+0x0],ch
   14000bc46:	ins    BYTE PTR es:[rdi],dx
   14000bc47:	add    BYTE PTR [rcx+0x0],ch
   14000bc4a:	movsxd eax,DWORD PTR [rax]
   14000bc4c:	imul   eax,DWORD PTR [rax],0x730065
   14000bc52:	add    BYTE PTR cs:[rbx+0x0],ah
   14000bc56:	jo     0x14000bc58
   14000bc58:	jo     0x14000bc5a
   14000bc5a:	add    BYTE PTR [rax],al
   14000bc5c:	add    BYTE PTR [rax],al
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	sub    BYTE PTR [rax],al
   14000bc62:	xor    BYTE PTR [rax],al
   14000bc64:	js     0x14000bc66
   14000bc66:	and    eax,0x38003000
   14000bc6b:	add    BYTE PTR [rax+0x0],bh
   14000bc6e:	sub    DWORD PTR [rax],eax
   14000bc70:	and    BYTE PTR [rax],al
   14000bc72:	and    eax,0x73007700
   14000bc77:	add    BYTE PTR [rdx],bh
   14000bc79:	add    BYTE PTR [rip+0x20007500],ah        # 0x16001317f
   14000bc7f:	add    BYTE PTR [rdx],bh
   14000bc81:	add    BYTE PTR [rax],ah
   14000bc83:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b3013389
   14000bc89:	add    BYTE PTR [rdx],bh
   14000bc8b:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b3013391
   14000bc91:	add    BYTE PTR [rdx],cl
   14000bc93:	add    BYTE PTR [rax],al
   14000bc95:	add    BYTE PTR [rax],al
   14000bc97:	add    BYTE PTR [rdx+0x0],dl
   14000bc9a:	je     0x14000bc9c
   14000bc9c:	ins    BYTE PTR es:[rdi],dx
   14000bc9d:	add    BYTE PTR [rdi+0x0],al
   14000bca0:	add    BYTE PTR gs:[rax+rax*1+0x4e],dh
   14000bca5:	add    BYTE PTR [rax+rax*1+0x50],dh
   14000bca9:	add    BYTE PTR [rdx+0x0],dh
   14000bcac:	outs   dx,DWORD PTR ds:[rsi]
   14000bcad:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000bcb1:	add    BYTE PTR [rbx+0x0],ah
   14000bcb4:	je     0x14000bcb6
   14000bcb6:	push   rsp
   14000bcb7:	add    BYTE PTR [rcx+0x0],bh
   14000bcba:	jo     0x14000bcbc
   14000bcbc:	add    BYTE PTR gs:[rax],al
   14000bcbf:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000bcc3:	add    BYTE PTR [rbx+0x0],ah
   14000bcc6:	(bad)  
   14000bcc7:	add    BYTE PTR [rax+rax*1+0x41],ch
   14000bccb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000bccf:	add    BYTE PTR [rdi+0x0],ch
   14000bcd2:	movsxd eax,DWORD PTR [rax]
	...
   14000bce0:	rex.XB add BYTE PTR [r10+0x0],sil
   14000bce4:	add    BYTE PTR gs:[rcx+0x0],ah
   14000bce8:	je     0x14000bcea
   14000bcea:	add    BYTE PTR gs:[rdi+0x0],dl
   14000bcee:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000bcf3:	add    BYTE PTR [rbx+0x0],cl
   14000bcf6:	outs   dx,BYTE PTR ds:[rsi]
   14000bcf7:	add    BYTE PTR [rdi+0x0],ch
   14000bcfa:	ja     0x14000bcfc
   14000bcfc:	outs   dx,BYTE PTR ds:[rsi]
   14000bcfd:	add    BYTE PTR [rbx+0x0],dl
   14000bd00:	imul   eax,DWORD PTR [rax],0x280064
   14000bd06:	push   rdi
   14000bd07:	add    BYTE PTR [rcx+0x0],ch
   14000bd0a:	outs   dx,BYTE PTR ds:[rsi]
   14000bd0b:	add    BYTE PTR [rdi+0x0],dl
   14000bd0e:	outs   dx,DWORD PTR ds:[rsi]
   14000bd0f:	add    BYTE PTR [rdx+0x0],dh
   14000bd12:	ins    BYTE PTR es:[rdi],dx
   14000bd13:	add    BYTE PTR [rax+rax*1+0x53],ah
   14000bd17:	add    BYTE PTR [rcx+0x0],ch
   14000bd1a:	add    BYTE PTR fs:[rcx],ch
   14000bd1d:	add    BYTE PTR [rax],al
   14000bd1f:	add    BYTE PTR [rbx+0x0],al
   14000bd22:	jb     0x14000bd24
   14000bd24:	add    BYTE PTR gs:[rcx+0x0],ah
   14000bd28:	je     0x14000bd2a
   14000bd2a:	add    BYTE PTR gs:[rdi+0x0],dl
   14000bd2e:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000bd33:	add    BYTE PTR [rbx+0x0],cl
   14000bd36:	outs   dx,BYTE PTR ds:[rsi]
   14000bd37:	add    BYTE PTR [rdi+0x0],ch
   14000bd3a:	ja     0x14000bd3c
   14000bd3c:	outs   dx,BYTE PTR ds:[rsi]
   14000bd3d:	add    BYTE PTR [rbx+0x0],dl
   14000bd40:	imul   eax,DWORD PTR [rax],0x280064
   14000bd46:	push   rdi
   14000bd47:	add    BYTE PTR [rcx+0x0],ch
   14000bd4a:	outs   dx,BYTE PTR ds:[rsi]
   14000bd4b:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000bd4f:	add    BYTE PTR [rbx+0x0],ah
   14000bd52:	(bad)  
   14000bd53:	add    BYTE PTR [rax+rax*1+0x53],ch
   14000bd57:	add    BYTE PTR [rcx+0x0],bh
   14000bd5a:	jae    0x14000bd5c
   14000bd5c:	je     0x14000bd5e
   14000bd5e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bd62:	push   rbx
   14000bd63:	add    BYTE PTR [rcx+0x0],ch
   14000bd66:	add    BYTE PTR fs:[rcx],ch
   14000bd69:	add    BYTE PTR [rax],al
   14000bd6b:	add    BYTE PTR [rax],al
   14000bd6d:	add    BYTE PTR [rax],al
   14000bd6f:	add    BYTE PTR [rdi+0x0],bl
   14000bd72:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000bd76:	imul   eax,DWORD PTR [rax],0x690074
   14000bd7c:	(bad)  
   14000bd7d:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000bd81:	add    BYTE PTR [rdx+0x0],bh
   14000bd84:	add    BYTE PTR gs:[rdi+0x0],dl
   14000bd88:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000bd8d:	add    BYTE PTR [rbx+0x0],cl
   14000bd90:	outs   dx,BYTE PTR ds:[rsi]
   14000bd91:	add    BYTE PTR [rdi+0x0],ch
   14000bd94:	ja     0x14000bd96
   14000bd96:	outs   dx,BYTE PTR ds:[rsi]
   14000bd97:	add    BYTE PTR [rdi+0x0],al
   14000bd9a:	jb     0x14000bd9c
   14000bd9c:	outs   dx,DWORD PTR ds:[rsi]
   14000bd9d:	add    BYTE PTR [rbp+0x0],dh
   14000bda0:	jo     0x14000bda2
   14000bda2:	jae    0x14000bda4
   14000bda4:	add    BYTE PTR [rax],al
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	pop    rdi
   14000bda9:	add    BYTE PTR [rdi+0x0],cl
   14000bdac:	jo     0x14000bdae
   14000bdae:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bdb2:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000bdb6:	add    BYTE PTR [r8+0x0],dl
   14000bdba:	outs   dx,DWORD PTR ds:[rsi]
   14000bdbb:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000bdbf:	add    BYTE PTR [rbx+0x0],ah
   14000bdc2:	jns    0x14000bdc4
   14000bdc4:	rex.W add BYTE PTR [rcx+0x0],spl
   14000bdc8:	outs   dx,BYTE PTR ds:[rsi]
   14000bdc9:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000bdcd:	add    BYTE PTR [rbp+0x0],ah
	...
   14000bdd8:	pop    rdi
   14000bdd9:	add    BYTE PTR [rdi+0x0],al
   14000bddc:	add    BYTE PTR gs:[rax+rax*1+0x44],dh
   14000bde1:	add    BYTE PTR [rdi+0x0],ch
   14000bde4:	ins    DWORD PTR es:[rdi],dx
   14000bde5:	add    BYTE PTR [rcx+0x0],ah
   14000bde8:	imul   eax,DWORD PTR [rax],0x53006e
   14000bdee:	rex.WB add BYTE PTR [r8+rax*1+0x73],al
   14000bdf3:	add    BYTE PTR [rax],al
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rdi+0x0],bl
   14000bdfa:	push   rbx
   14000bdfb:	add    BYTE PTR [rcx+0x0],ah
   14000bdfe:	ins    DWORD PTR es:[rdi],dx
   14000bdff:	add    BYTE PTR [rax+0x0],cl
   14000be02:	(bad)  
   14000be03:	add    BYTE PTR [rsi+0x0],ch
   14000be06:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000be0b:	add    BYTE PTR [rsi+0x0],al
   14000be0e:	outs   dx,DWORD PTR ds:[rsi]
   14000be0f:	add    BYTE PTR [rdx+0x0],dh
   14000be12:	add    BYTE PTR [rdi+0x0],r13b
   14000be16:	ins    DWORD PTR es:[rdi],dx
   14000be17:	add    BYTE PTR [rcx+0x0],ah
   14000be1a:	imul   eax,DWORD PTR [rax],0x6e
   14000be20:	pop    rdi
   14000be21:	add    BYTE PTR [rdi+0x0],al
   14000be24:	add    BYTE PTR gs:[rax+rax*1+0x42],dh
   14000be29:	add    BYTE PTR [rbp+0x0],dh
   14000be2c:	imul   eax,DWORD PTR [rax],0x74006c
   14000be32:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000be36:	add    BYTE PTR [rdi+0x0],r13b
   14000be3a:	ins    DWORD PTR es:[rdi],dx
   14000be3b:	add    BYTE PTR [rcx+0x0],ah
   14000be3e:	imul   eax,DWORD PTR [rax],0x53006e
   14000be44:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000be49:	add    BYTE PTR [rax],al
   14000be4b:	add    BYTE PTR [rax],al
   14000be4d:	add    BYTE PTR [rax],al
   14000be4f:	add    BYTE PTR [rcx+0x0],al
   14000be52:	jne    0x14000be54
   14000be54:	je     0x14000be56
   14000be56:	push   0x49007a00
   14000be5b:	add    BYTE PTR [rsi+0x0],ch
   14000be5e:	imul   eax,DWORD PTR [rax],0x690074
   14000be64:	(bad)  
   14000be65:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000be69:	add    BYTE PTR [rdx+0x0],bh
   14000be6c:	add    BYTE PTR gs:[rdx+0x0],dl
   14000be70:	add    BYTE PTR gs:[rbx+0x0],dh
   14000be74:	outs   dx,DWORD PTR ds:[rsi]
   14000be75:	add    BYTE PTR [rbp+0x0],dh
   14000be78:	jb     0x14000be7a
   14000be7a:	movsxd eax,DWORD PTR [rax]
   14000be7c:	add    BYTE PTR gs:[rbp+0x0],cl
   14000be80:	(bad)  
   14000be81:	add    BYTE PTR [rsi+0x0],ch
   14000be84:	(bad)  
   14000be85:	add    BYTE PTR [rdi+0x0],ah
   14000be88:	add    BYTE PTR gs:[rdx+0x0],dh
   14000be8c:	add    BYTE PTR [rax],al
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000be94:	je     0x14000be96
   14000be96:	rex.XB add BYTE PTR [r13+0x0],sil
   14000be9a:	jb     0x14000be9c
   14000be9c:	jb     0x14000be9e
   14000be9e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bea2:	je     0x14000bea4
   14000bea4:	push   rbp
   14000bea5:	add    BYTE PTR [rbx+0x0],dh
   14000bea8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000beac:	push   rbx
   14000bead:	add    BYTE PTR [rcx+0x0],cl
   14000beb0:	add    BYTE PTR [rax],r8b
   14000beb3:	add    BYTE PTR [rax],al
   14000beb5:	add    BYTE PTR [rax],al
   14000beb7:	add    BYTE PTR [rbp+0x0],al
   14000beba:	jbe    0x14000bebc
   14000bebc:	(bad)  
   14000bebd:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000bec1:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000bec5:	add    BYTE PTR [rdx+0x0],al
   14000bec8:	imul   eax,DWORD PTR [rax],0x6c0074
   14000bece:	outs   dx,DWORD PTR ds:[rsi]
   14000becf:	add    BYTE PTR [rbx+0x0],ah
   14000bed2:	imul   eax,DWORD PTR [rax],0x65
   14000bed5:	add    BYTE PTR [rdx+0x0],dh
   14000bed8:	push   rax
   14000bed9:	add    BYTE PTR [rdi+0x0],ch
   14000bedc:	ins    BYTE PTR es:[rdi],dx
   14000bedd:	add    BYTE PTR [rcx+0x0],ch
   14000bee0:	movsxd eax,DWORD PTR [rax]
   14000bee2:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000bef0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000bef4:	jb     0x14000bef6
   14000bef6:	imul   eax,DWORD PTR [rax],0x55
   14000bef9:	add    BYTE PTR [rbx+0x0],dh
   14000befc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bf00:	add    BYTE PTR [r11+0x0],sil
   14000bf04:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000bf08:	outs   dx,BYTE PTR ds:[rsi]
   14000bf09:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000bf0d:	add    BYTE PTR [rdi+0x0],ch
   14000bf10:	ins    BYTE PTR es:[rdi],dx
   14000bf11:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bf15:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000bf19:	add    BYTE PTR [rax],al
   14000bf1b:	add    BYTE PTR [rax],al
   14000bf1d:	add    BYTE PTR [rax],al
   14000bf1f:	add    BYTE PTR [rsi+0x75],cl
   14000bf22:	ins    BYTE PTR es:[rdi],dx
   14000bf23:	ins    BYTE PTR es:[rdi],dx
   14000bf24:	(bad)  
   14000bf25:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bf27:	jbe    0x14000bf8a
   14000bf29:	ins    BYTE PTR es:[rdi],dx
   14000bf2a:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6772
   14000bf32:	add    BYTE PTR [rax],al
   14000bf34:	add    BYTE PTR [rax],al
   14000bf36:	add    BYTE PTR [rax],al
   14000bf38:	pop    rdi
   14000bf39:	push   rbx
   14000bf3a:	gs je  0x14000bf8a
   14000bf3d:	rex.R
   14000bf3e:	rex.WRB
   14000bf3f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000bf41:	outs   dx,WORD PTR ds:[rsi]
   14000bf43:	jb     0x14000bfa8
   14000bf45:	gs add BYTE PTR fs:[rax],al
   14000bf49:	add    BYTE PTR [rax],al
   14000bf4b:	add    BYTE PTR [rax],al
   14000bf4d:	add    BYTE PTR [rax],al
   14000bf4f:	add    BYTE PTR [rdi+0x0],bl
   14000bf52:	add    BYTE PTR [r8+0x0],r15b
   14000bf56:	add    BYTE PTR gs:[rbx+0x0],ah
   14000bf5a:	jne    0x14000bf5c
   14000bf5c:	je     0x14000bf5e
   14000bf5e:	add    BYTE PTR gs:[rbp+0x0],cl
   14000bf62:	(bad)  
   14000bf63:	add    BYTE PTR [rdx+0x0],dh
   14000bf66:	imul   eax,DWORD PTR [rax],0x55
   14000bf69:	add    BYTE PTR [rbx+0x0],dh
   14000bf6c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bf70:	add    BYTE PTR [r11+0x0],sil
   14000bf74:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000bf78:	outs   dx,BYTE PTR ds:[rsi]
   14000bf79:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000bf7d:	add    BYTE PTR [rdi+0x0],ch
   14000bf80:	ins    BYTE PTR es:[rdi],dx
   14000bf81:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bf85:	add    BYTE PTR [rax+rax*1+0x41],ah
   14000bf89:	add    BYTE PTR [rbx+0x0],ah
   14000bf8c:	je     0x14000bf8e
   14000bf8e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bf94:	add    BYTE PTR [rax],al
   14000bf96:	add    BYTE PTR [rax],al
   14000bf98:	pop    rdi
   14000bf99:	add    BYTE PTR [rbp+0x0],al
   14000bf9c:	js     0x14000bf9e
   14000bf9e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000bfa2:	jne    0x14000bfa4
   14000bfa4:	je     0x14000bfa6
   14000bfa6:	add    BYTE PTR gs:[rbp+0x0],cl
   14000bfaa:	add    BYTE PTR [rbp+0x0],r9b
   14000bfae:	add    BYTE PTR [r14+0x0],r13b
   14000bfb2:	data16 add BYTE PTR [rdi+0x0],ch
   14000bfb6:	jb     0x14000bfb8
   14000bfb8:	movsxd eax,DWORD PTR [rax]
   14000bfba:	add    BYTE PTR gs:[rax+rax*1+0x41],ah
   14000bfbf:	add    BYTE PTR [rbx+0x0],ah
   14000bfc2:	je     0x14000bfc4
   14000bfc4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bfca:	add    BYTE PTR [rax],al
   14000bfcc:	add    BYTE PTR [rax],al
   14000bfce:	add    BYTE PTR [rax],al
   14000bfd0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000bfd4:	jbe    0x14000bfd6
   14000bfd6:	(bad)  
   14000bfd7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000bfdb:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000bfdf:	add    BYTE PTR [rcx+0x0],al
   14000bfe2:	movsxd eax,DWORD PTR [rax]
   14000bfe4:	je     0x14000bfe6
   14000bfe6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bfec:	and    BYTE PTR [rax],al
   14000bfee:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000bff3:	add    BYTE PTR [rax],al
   14000bff5:	add    BYTE PTR [rax],al
   14000bff7:	add    BYTE PTR [rdi+0x0],bl
   14000bffa:	push   rax
   14000bffb:	add    BYTE PTR [rcx+0x0],ah
   14000bffe:	jb     0x14000c000
   14000c000:	jae    0x14000c002
   14000c002:	add    BYTE PTR gs:[rax+0x0],dl
   14000c006:	outs   dx,DWORD PTR ds:[rsi]
   14000c007:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c00b:	add    BYTE PTR [rbx+0x0],ah
   14000c00e:	imul   eax,DWORD PTR [rax],0x730065
   14000c014:	add    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	pop    rdi
   14000c019:	add    BYTE PTR [rbx+0x0],al
   14000c01c:	push   0x63006500
   14000c021:	add    BYTE PTR [rbx+0x0],ch
   14000c024:	push   rdi
   14000c025:	add    BYTE PTR [rdx+0x0],dh
   14000c028:	imul   eax,DWORD PTR [rax],0x650074
   14000c02e:	add    BYTE PTR [r11+0x0],spl
   14000c032:	movsxd eax,DWORD PTR [rax]
   14000c034:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c038:	jae    0x14000c03a
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	pop    rdi
   14000c041:	add    BYTE PTR [rcx+0x0],cl
   14000c044:	outs   dx,BYTE PTR ds:[rsi]
   14000c045:	add    BYTE PTR [rcx+0x0],ch
   14000c048:	je     0x14000c04a
   14000c04a:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c050:	imul   eax,DWORD PTR [rax],0x65007a
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	pop    rdi
   14000c059:	add    BYTE PTR [rbp+0x0],al
   14000c05c:	js     0x14000c05e
   14000c05e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c062:	jne    0x14000c064
   14000c064:	je     0x14000c066
   14000c066:	add    BYTE PTR gs:[rax+rax*1+0x65],al
   14000c06b:	add    BYTE PTR [rsi+0x0],ah
   14000c06e:	(bad)  
   14000c06f:	add    BYTE PTR [rbp+0x0],dh
   14000c072:	ins    BYTE PTR es:[rdi],dx
   14000c073:	add    BYTE PTR [rax+rax*1+0x50],dh
   14000c077:	add    BYTE PTR [rdx+0x0],dh
   14000c07a:	outs   dx,DWORD PTR ds:[rsi]
   14000c07b:	add    BYTE PTR [rsi+0x0],dh
   14000c07e:	imul   eax,DWORD PTR [rax],0x650064
   14000c084:	jb     0x14000c086
   14000c086:	add    BYTE PTR [r11+0x0],spl
   14000c08a:	je     0x14000c08c
   14000c08c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c092:	jae    0x14000c094
   14000c094:	add    BYTE PTR [rax],al
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	add    BYTE PTR [r8+0x0],r15b
   14000c09c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c0a0:	jne    0x14000c0a2
   14000c0a2:	je     0x14000c0a4
   14000c0a4:	add    BYTE PTR gs:[rax+0x0],dl
   14000c0a8:	(bad)  
   14000c0a9:	add    BYTE PTR [rbx+0x0],dh
   14000c0ac:	jae    0x14000c0ae
   14000c0ae:	ja     0x14000c0b0
   14000c0b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c0b1:	add    BYTE PTR [rdx+0x0],dh
   14000c0b4:	add    BYTE PTR fs:[rax+0x0],dl
   14000c0b8:	jb     0x14000c0ba
   14000c0ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c0bb:	add    BYTE PTR [rsi+0x0],dh
   14000c0be:	imul   eax,DWORD PTR [rax],0x650064
   14000c0c4:	jb     0x14000c0c6
   14000c0c6:	add    BYTE PTR [r11+0x0],spl
   14000c0ca:	je     0x14000c0cc
   14000c0cc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c0d2:	jae    0x14000c0d4
	...
   14000c0e0:	add    BYTE PTR [r8+0x0],r15b
   14000c0e4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c0e8:	jne    0x14000c0ea
   14000c0ea:	je     0x14000c0ec
   14000c0ec:	add    BYTE PTR gs:[rcx+0x0],cl
   14000c0f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c0f1:	add    BYTE PTR [rcx+0x0],ah
   14000c0f4:	movsxd eax,DWORD PTR [rax]
   14000c0f6:	je     0x14000c0f8
   14000c0f8:	imul   eax,DWORD PTR [rax],0x690076
   14000c0fe:	je     0x14000c100
   14000c100:	jns    0x14000c102
   14000c102:	push   rax
   14000c103:	add    BYTE PTR [rdx+0x0],dh
   14000c106:	outs   dx,DWORD PTR ds:[rsi]
   14000c107:	add    BYTE PTR [rsi+0x0],dh
   14000c10a:	imul   eax,DWORD PTR [rax],0x650064
   14000c110:	jb     0x14000c112
   14000c112:	add    BYTE PTR [r11+0x0],spl
   14000c116:	je     0x14000c118
   14000c118:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c11e:	jae    0x14000c120
	...
   14000c128:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c12c:	jbe    0x14000c12e
   14000c12e:	(bad)  
   14000c12f:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c133:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c137:	add    BYTE PTR [rax+0x0],dl
   14000c13a:	jb     0x14000c13c
   14000c13c:	outs   dx,DWORD PTR ds:[rsi]
   14000c13d:	add    BYTE PTR [rsi+0x0],dh
   14000c140:	imul   eax,DWORD PTR [rax],0x650064
   14000c146:	jb     0x14000c148
	...
   14000c150:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000c154:	je     0x14000c156
   14000c156:	and    BYTE PTR [rax],al
   14000c158:	imul   eax,DWORD PTR [rax],0x69006e
   14000c15e:	je     0x14000c160
   14000c160:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c166:	imul   eax,DWORD PTR [rax],0x65007a
   14000c16c:	add    BYTE PTR fs:[rax],al
   14000c16f:	add    BYTE PTR [rdi+0x0],bl
   14000c172:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c176:	movsxd eax,DWORD PTR [rax]
   14000c178:	imul   eax,DWORD PTR [rax],0x53
   14000c17b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c17f:	add    BYTE PTR [rdx+0x0],dh
   14000c182:	add    BYTE PTR gs:[rax],al
   14000c185:	add    BYTE PTR [rax],al
   14000c187:	add    BYTE PTR [rdi+0x0],bl
   14000c18a:	push   rdx
   14000c18b:	add    BYTE PTR [rbp+0x0],ah
   14000c18e:	(bad)  
   14000c18f:	add    BYTE PTR [rax+rax*1+0x50],ah
   14000c193:	add    BYTE PTR [rdi+0x0],ch
   14000c196:	ins    BYTE PTR es:[rdi],dx
   14000c197:	add    BYTE PTR [rcx+0x0],ch
   14000c19a:	movsxd eax,DWORD PTR [rax]
   14000c19c:	imul   eax,DWORD PTR [rax],0x730065
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	pop    rdi
   14000c1a9:	add    BYTE PTR [rdi+0x0],al
   14000c1ac:	add    BYTE PTR gs:[rax+rax*1+0x54],dh
   14000c1b1:	add    BYTE PTR [rdi+0x0],ch
   14000c1b4:	imul   eax,DWORD PTR [rax],0x65
   14000c1b7:	add    BYTE PTR [rsi+0x0],ch
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	pop    rdi
   14000c1c1:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000c1c5:	add    BYTE PTR [rbx+0x0],ch
   14000c1c8:	add    BYTE PTR gs:[rcx+0x0],al
   14000c1cc:	movsxd eax,DWORD PTR [rax]
   14000c1ce:	je     0x14000c1d0
   14000c1d0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1d6:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c1da:	jb     0x14000c1dc
   14000c1dc:	rex.X add BYTE PTR [rbp+0x0],sil
   14000c1e0:	imul   eax,DWORD PTR [rax],0x74006c
   14000c1e6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c1ea:	push   rax
   14000c1eb:	add    BYTE PTR [rdx+0x0],dh
   14000c1ee:	outs   dx,DWORD PTR ds:[rsi]
   14000c1ef:	add    BYTE PTR [rsi+0x0],dh
   14000c1f2:	imul   eax,DWORD PTR [rax],0x650064
   14000c1f8:	jb     0x14000c1fa
   14000c1fa:	jae    0x14000c1fc
	...
   14000c210:	add    BYTE PTR [r8+0x0],r15b
   14000c214:	je     0x14000c216
   14000c216:	jb     0x14000c218
   14000c218:	(bad)  
   14000c219:	add    BYTE PTR [rax],ah
   14000c21b:	add    BYTE PTR [rbp+0x0],al
   14000c21e:	(bad)  
   14000c21f:	add    BYTE PTR [rbx+0x0],dh
   14000c222:	add    BYTE PTR [r14+0x0],r13b
   14000c226:	add    BYTE PTR [ecx+0x0],ch
   14000c22a:	outs   dx,BYTE PTR ds:[rsi]
   14000c22b:	add    BYTE PTR [rbp+0x0],ah
   14000c22e:	push   rbp
   14000c22f:	add    BYTE PTR [rsi+0x0],ch
   14000c232:	imul   eax,DWORD PTR [rax],0x69006e
   14000c238:	je     0x14000c23a
   14000c23a:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c240:	imul   eax,DWORD PTR [rax],0x65007a
   14000c246:	and    BYTE PTR [rax],al
   14000c248:	movsxd eax,DWORD PTR [rax]
   14000c24a:	(bad)  
   14000c24b:	add    BYTE PTR [rax+rax*1+0x6c],ch
	...
   14000c25f:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000c263:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000c267:	add    BYTE PTR [rbp+0x0],ah
   14000c26a:	movsxd eax,DWORD PTR [rax]
   14000c26c:	jne    0x14000c26e
   14000c26e:	jb     0x14000c270
   14000c270:	imul   eax,DWORD PTR [rax],0x790074
   14000c276:	pop    rsp
   14000c277:	add    BYTE PTR [rbp+0x0],ah
   14000c27a:	(bad)  
   14000c27b:	add    BYTE PTR [rbx+0x0],dh
   14000c27e:	pop    rsp
   14000c27f:	add    BYTE PTR [rax+0x0],dh
   14000c282:	outs   dx,DWORD PTR ds:[rsi]
   14000c283:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c287:	add    BYTE PTR [rbx+0x0],ah
   14000c28a:	jns    0x14000c28c
   14000c28c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c290:	add    BYTE PTR [ecx+0x0],ch
   14000c294:	outs   dx,BYTE PTR ds:[rsi]
   14000c295:	add    BYTE PTR [rbp+0x0],ah
   14000c298:	pop    rsp
   14000c299:	add    BYTE PTR [rcx+0x0],ch
   14000c29c:	outs   dx,BYTE PTR ds:[rsi]
   14000c29d:	add    BYTE PTR [rcx+0x0],ch
   14000c2a0:	je     0x14000c2a2
   14000c2a2:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c2a8:	imul   eax,DWORD PTR [rax],0x65007a
   14000c2ae:	add    BYTE PTR cs:[rbx+0x0],ah
   14000c2b2:	jo     0x14000c2b4
   14000c2b4:	jo     0x14000c2b6
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	rex.RXB
   14000c2b9:	gs je  0x14000c310
   14000c2bc:	outs   dx,DWORD PTR ds:[rsi]
   14000c2bd:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000c2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000c2c2:	outs   dx,WORD PTR ds:[rsi]
   14000c2c4:	jb     0x14000c333
   14000c2c6:	(bad)  
   14000c2c7:	je     0x14000c332
   14000c2c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000c2d3:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000c2d7:	add    BYTE PTR [rbp+0x0],ah
   14000c2da:	movsxd eax,DWORD PTR [rax]
   14000c2dc:	jne    0x14000c2de
   14000c2de:	jb     0x14000c2e0
   14000c2e0:	imul   eax,DWORD PTR [rax],0x790074
   14000c2e6:	pop    rsp
   14000c2e7:	add    BYTE PTR [rbp+0x0],ah
   14000c2ea:	(bad)  
   14000c2eb:	add    BYTE PTR [rbx+0x0],dh
   14000c2ee:	pop    rsp
   14000c2ef:	add    BYTE PTR [rax+0x0],dh
   14000c2f2:	outs   dx,DWORD PTR ds:[rsi]
   14000c2f3:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c2f7:	add    BYTE PTR [rbx+0x0],ah
   14000c2fa:	jns    0x14000c2fc
   14000c2fc:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c300:	add    BYTE PTR [ecx+0x0],ch
   14000c304:	outs   dx,BYTE PTR ds:[rsi]
   14000c305:	add    BYTE PTR [rbp+0x0],ah
   14000c308:	pop    rsp
   14000c309:	add    BYTE PTR [rbp+0x0],ah
   14000c30c:	jbe    0x14000c30e
   14000c30e:	(bad)  
   14000c30f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000c313:	add    BYTE PTR [rcx+0x0],ch
   14000c316:	(bad)  
   14000c317:	add    BYTE PTR [rax+rax*1+0x70],bl
   14000c31b:	add    BYTE PTR [rcx+0x0],ah
   14000c31e:	jae    0x14000c320
   14000c320:	jae    0x14000c322
   14000c322:	ja     0x14000c324
   14000c324:	outs   dx,DWORD PTR ds:[rsi]
   14000c325:	add    BYTE PTR [rdx+0x0],dh
   14000c328:	add    BYTE PTR fs:[rax+0x0],dh
   14000c32c:	jb     0x14000c32e
   14000c32e:	outs   dx,DWORD PTR ds:[rsi]
   14000c32f:	add    BYTE PTR [rsi+0x0],dh
   14000c332:	imul   eax,DWORD PTR [rax],0x650064
   14000c338:	jb     0x14000c33a
   14000c33a:	add    BYTE PTR cs:[rbx+0x0],ah
   14000c33e:	jo     0x14000c340
   14000c340:	jo     0x14000c342
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	add    BYTE PTR [rax],al
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c34a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c34d:	rex.B ins BYTE PTR es:[rdi],dx
   14000c34f:	ins    BYTE PTR es:[rdi],dx
   14000c350:	outs   dx,DWORD PTR ds:[rsi]
   14000c351:	movsxd eax,DWORD PTR [rax]
   14000c353:	add    BYTE PTR [rax],al
   14000c355:	add    BYTE PTR [rax],al
   14000c357:	add    BYTE PTR [rsi+0x0],ah
   14000c35a:	outs   dx,BYTE PTR ds:[rsi]
   14000c35b:	add    BYTE PTR [rdi+0x0],dl
   14000c35e:	outs   dx,DWORD PTR ds:[rsi]
   14000c35f:	add    BYTE PTR [rdx+0x0],dh
   14000c362:	imul   eax,DWORD PTR [rax],0x65
   14000c365:	add    BYTE PTR [rdx+0x0],dh
	...
   14000c370:	outs   dx,DWORD PTR ds:[rsi]
   14000c371:	add    BYTE PTR [rbp+0x0],dh
   14000c374:	je     0x14000c376
   14000c376:	and    BYTE PTR [rax],al
   14000c378:	outs   dx,DWORD PTR ds:[rsi]
   14000c379:	add    BYTE PTR [rsi+0x0],ah
   14000c37c:	and    BYTE PTR [rax],al
   14000c37e:	(bad)  
   14000c37f:	add    BYTE PTR [rdi+0x0],ch
   14000c382:	jne    0x14000c384
   14000c384:	outs   dx,BYTE PTR ds:[rsi]
   14000c385:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000c389:	add    BYTE PTR [rax],al
   14000c38b:	add    BYTE PTR [rax],al
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rdi+0x0],al
   14000c392:	add    BYTE PTR gs:[rax+rax*1+0x43],dh
   14000c397:	add    BYTE PTR [rdi+0x0],ch
   14000c39a:	outs   dx,BYTE PTR ds:[rsi]
   14000c39b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c39f:	add    BYTE PTR [rdi+0x0],ch
   14000c3a2:	ins    BYTE PTR es:[rdi],dx
   14000c3a3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000c3a7:	add    BYTE PTR [rax+rax*1+0x55],ah
   14000c3ab:	add    BYTE PTR [rbx+0x0],dh
   14000c3ae:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c3b2:	jae    0x14000c3b4
   14000c3b4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3b8:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3bc:	add    BYTE PTR [rax],al
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	pop    rdi
   14000c3c1:	add    BYTE PTR [rbp+0x0],al
   14000c3c4:	outs   dx,BYTE PTR ds:[rsi]
   14000c3c5:	add    BYTE PTR [rbp+0x0],dh
   14000c3c8:	ins    DWORD PTR es:[rdi],dx
   14000c3c9:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000c3cd:	add    BYTE PTR [rbx+0x0],ah
   14000c3d0:	(bad)  
   14000c3d1:	add    BYTE PTR [rax+rax*1+0x55],ch
   14000c3d5:	add    BYTE PTR [rbx+0x0],dh
   14000c3d8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c3dc:	jae    0x14000c3de
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	pop    rdi
   14000c3e1:	add    BYTE PTR [rdi+0x0],dl
   14000c3e4:	jb     0x14000c3e6
   14000c3e6:	imul   eax,DWORD PTR [rax],0x650074
   14000c3ec:	push   rax
   14000c3ed:	add    BYTE PTR [rdi+0x0],ch
   14000c3f0:	ins    BYTE PTR es:[rdi],dx
   14000c3f1:	add    BYTE PTR [rcx+0x0],ch
   14000c3f4:	movsxd eax,DWORD PTR [rax]
   14000c3f6:	imul   eax,DWORD PTR [rax],0x730065
   14000c3fc:	add    BYTE PTR [rax],al
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	add    BYTE PTR [r14+0x0],r14b
   14000c404:	(bad)  
   14000c405:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000c409:	add    BYTE PTR [rcx+0x0],ah
   14000c40c:	je     0x14000c40e
   14000c40e:	add    BYTE PTR gs:[rdx+0x0],al
   14000c412:	imul   eax,DWORD PTR [rax],0x6c0074
   14000c418:	outs   dx,DWORD PTR ds:[rsi]
   14000c419:	add    BYTE PTR [rbx+0x0],ah
   14000c41c:	imul   eax,DWORD PTR [rax],0x65
   14000c41f:	add    BYTE PTR [rdx+0x0],dh
   14000c422:	push   rax
   14000c423:	add    BYTE PTR [rdi+0x0],ch
   14000c426:	ins    BYTE PTR es:[rdi],dx
   14000c427:	add    BYTE PTR [rcx+0x0],ch
   14000c42a:	movsxd eax,DWORD PTR [rax]
   14000c42c:	imul   eax,DWORD PTR [rax],0x730065
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	push   rdi
   14000c439:	add    BYTE PTR [rcx+0x0],ch
   14000c43c:	outs   dx,BYTE PTR ds:[rsi]
   14000c43d:	add    BYTE PTR [rdx+0x0],al
   14000c440:	imul   eax,DWORD PTR [rax],0x52006f
   14000c446:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c44a:	outs   dx,DWORD PTR ds:[rsi]
   14000c44b:	add    BYTE PTR [rsi+0x0],dh
   14000c44e:	add    BYTE PTR gs:[rcx+0x0],al
   14000c452:	ins    BYTE PTR es:[rdi],dx
   14000c453:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c457:	add    BYTE PTR [rdx+0x0],dh
   14000c45a:	add    BYTE PTR gs:[rax+rax*1+0x65],ah
   14000c45f:	add    BYTE PTR [rsi+0x0],ch
   14000c462:	je     0x14000c464
   14000c464:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c46a:	jae    0x14000c46c
   14000c46c:	add    BYTE PTR [rax],al
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	pop    rdi
   14000c471:	add    BYTE PTR [rbp+0x0],dl
   14000c474:	jo     0x14000c476
   14000c476:	add    BYTE PTR fs:[rcx+0x0],ah
   14000c47a:	je     0x14000c47c
   14000c47c:	add    BYTE PTR gs:[rax+0x0],dl
   14000c480:	(bad)  
   14000c481:	add    BYTE PTR [rbx+0x0],dh
   14000c484:	jae    0x14000c486
   14000c486:	ja     0x14000c488
   14000c488:	outs   dx,DWORD PTR ds:[rsi]
   14000c489:	add    BYTE PTR [rdx+0x0],dh
   14000c48c:	add    BYTE PTR fs:[rax+0x0],dl
   14000c490:	outs   dx,DWORD PTR ds:[rsi]
   14000c491:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c495:	add    BYTE PTR [rbx+0x0],ah
   14000c498:	imul   eax,DWORD PTR [rax],0x730065
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	pop    rdi
   14000c4a1:	add    BYTE PTR [rbp+0x0],dl
   14000c4a4:	jo     0x14000c4a6
   14000c4a6:	add    BYTE PTR fs:[rcx+0x0],ah
   14000c4aa:	je     0x14000c4ac
   14000c4ac:	add    BYTE PTR gs:[rbx+0x0],al
   14000c4b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4b1:	add    BYTE PTR [rsi+0x0],ch
   14000c4b4:	jbe    0x14000c4b6
   14000c4b6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c4ba:	imul   eax,DWORD PTR [rax],0x6e0065
   14000c4c0:	movsxd eax,DWORD PTR [rax]
   14000c4c2:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
   14000c4c7:	add    BYTE PTR [rdi+0x0],ah
   14000c4ca:	outs   dx,DWORD PTR ds:[rsi]
   14000c4cb:	add    BYTE PTR [rsi+0x0],ch
   14000c4ce:	push   rax
   14000c4cf:	add    BYTE PTR [rdi+0x0],ch
   14000c4d2:	ins    BYTE PTR es:[rdi],dx
   14000c4d3:	add    BYTE PTR [rcx+0x0],ch
   14000c4d6:	movsxd eax,DWORD PTR [rax]
   14000c4d8:	jns    0x14000c4da
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	add    BYTE PTR [rax],al
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c4e4:	jbe    0x14000c4e6
   14000c4e6:	(bad)  
   14000c4e7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c4eb:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c4ef:	add    BYTE PTR [rbx+0x0],dl
   14000c4f2:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000c4f7:	add    BYTE PTR [rcx+0x0],ch
   14000c4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000c4fb:	add    BYTE PTR [rdi+0x0],ah
   14000c4fe:	and    BYTE PTR [rax],al
   14000c500:	push   rbx
   14000c501:	add    BYTE PTR [rdi+0x0],ch
   14000c504:	jne    0x14000c506
   14000c506:	jb     0x14000c508
   14000c508:	movsxd eax,DWORD PTR [rax]
   14000c50a:	add    BYTE PTR gs:[rax],al
   14000c50d:	add    BYTE PTR [rax],al
   14000c50f:	add    BYTE PTR [rdx+0x0],al
   14000c512:	ins    BYTE PTR es:[rdi],dx
   14000c513:	add    BYTE PTR [rdi+0x0],ch
   14000c516:	movsxd eax,DWORD PTR [rax]
   14000c518:	imul   eax,DWORD PTR [rax],0x44
   14000c51b:	add    BYTE PTR [rdi+0x0],ch
   14000c51e:	ins    DWORD PTR es:[rdi],dx
   14000c51f:	add    BYTE PTR [rcx+0x0],ah
   14000c522:	imul   eax,DWORD PTR [rax],0x50006e
   14000c528:	imul   eax,DWORD PTR [rax],0x740063
   14000c52e:	jne    0x14000c530
   14000c530:	jb     0x14000c532
   14000c532:	add    BYTE PTR gs:[rax+0x0],dl
   14000c536:	(bad)  
   14000c537:	add    BYTE PTR [rbx+0x0],dh
   14000c53a:	jae    0x14000c53c
   14000c53c:	ja     0x14000c53e
   14000c53e:	outs   dx,DWORD PTR ds:[rsi]
   14000c53f:	add    BYTE PTR [rdx+0x0],dh
   14000c542:	add    BYTE PTR fs:[rax],al
	...
   14000c54d:	add    BYTE PTR [rax],al
   14000c54f:	add    BYTE PTR [rbx+0x0],dl
   14000c552:	outs   dx,DWORD PTR ds:[rsi]
   14000c553:	add    BYTE PTR [rsi+0x0],ah
   14000c556:	je     0x14000c558
   14000c558:	ja     0x14000c55a
   14000c55a:	(bad)  
   14000c55b:	add    BYTE PTR [rdx+0x0],dh
   14000c55e:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   14000c563:	add    BYTE PTR [rdi+0x0],ch
   14000c566:	ins    BYTE PTR es:[rdi],dx
   14000c567:	add    BYTE PTR [rcx+0x0],ch
   14000c56a:	movsxd eax,DWORD PTR [rax]
   14000c56c:	imul   eax,DWORD PTR [rax],0x730065
   14000c572:	pop    rsp
   14000c573:	add    BYTE PTR [rbp+0x0],cl
   14000c576:	imul   eax,DWORD PTR [rax],0x720063
   14000c57c:	outs   dx,DWORD PTR ds:[rsi]
   14000c57d:	add    BYTE PTR [rbx+0x0],dh
   14000c580:	outs   dx,DWORD PTR ds:[rsi]
   14000c581:	add    BYTE PTR [rsi+0x0],ah
   14000c584:	je     0x14000c586
   14000c586:	pop    rsp
   14000c587:	add    BYTE PTR [rdi+0x0],dl
   14000c58a:	imul   eax,DWORD PTR [rax],0x64006e
   14000c590:	outs   dx,DWORD PTR ds:[rsi]
   14000c591:	add    BYTE PTR [rdi+0x0],dh
   14000c594:	jae    0x14000c596
   14000c596:	pop    rsp
   14000c597:	add    BYTE PTR [rbx+0x0],dl
   14000c59a:	jns    0x14000c59c
   14000c59c:	jae    0x14000c59e
   14000c59e:	je     0x14000c5a0
   14000c5a0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c5a4:	add    BYTE PTR [rax],al
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	push   rdx
   14000c5a9:	add    BYTE PTR [rbp+0x0],ah
   14000c5ac:	add    BYTE PTR [edi+0x0],al
   14000c5b0:	add    BYTE PTR gs:[rax+rax*1+0x56],dh
   14000c5b5:	add    BYTE PTR [rcx+0x0],ah
   14000c5b8:	ins    BYTE PTR es:[rdi],dx
   14000c5b9:	add    BYTE PTR [rbp+0x0],dh
   14000c5bc:	add    BYTE PTR gs:[rdi+0x0],dl
	...
   14000c5c8:	rex.WR add BYTE PTR [rbx+0x0],r14b
   14000c5cc:	(bad)  
   14000c5cd:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000c5d1:	add    BYTE PTR [rdi+0x0],ch
   14000c5d4:	imul   eax,DWORD PTR [rax],0x75
   14000c5d7:	add    BYTE PTR [rax+0x0],dh
   14000c5da:	push   rbx
   14000c5db:	add    BYTE PTR [rcx+0x0],ch
   14000c5de:	add    BYTE PTR fs:[rbx+0x0],dh
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	add    BYTE PTR [rax],al
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	pop    rdi
   14000c5e9:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000c5ed:	add    BYTE PTR [rbx+0x0],ah
   14000c5f0:	(bad)  
   14000c5f1:	add    BYTE PTR [rax+rax*1+0x41],ch
   14000c5f5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000c5f9:	add    BYTE PTR [rdi+0x0],ch
   14000c5fc:	movsxd eax,DWORD PTR [rax]
   14000c5fe:	push   rdi
   14000c5ff:	add    BYTE PTR [rbx+0x0],dl
   14000c602:	je     0x14000c604
   14000c604:	jb     0x14000c606
   14000c606:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000c60a:	outs   dx,DWORD PTR ds:[rsi]
   14000c60b:	add    BYTE PTR [rbp+0x0],ch
   14000c60e:	push   rbx
   14000c60f:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c613:	add    BYTE PTR [rcx+0x0],ch
   14000c616:	outs   dx,BYTE PTR ds:[rsi]
   14000c617:	add    BYTE PTR [rdi+0x0],ah
   14000c61a:	add    BYTE PTR [rax],al
   14000c61c:	add    BYTE PTR [rax],al
   14000c61e:	add    BYTE PTR [rax],al
   14000c620:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000c624:	je     0x14000c626
   14000c626:	push   rbp
   14000c627:	add    BYTE PTR [rbx+0x0],dh
   14000c62a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c62e:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000c632:	je     0x14000c634
   14000c634:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c638:	data16 add BYTE PTR [rdi+0x0],ch
   14000c63c:	add    BYTE PTR [rax],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	push   rbx
   14000c641:	add    BYTE PTR [rcx+0x0],ah
   14000c644:	ins    DWORD PTR es:[rdi],dx
   14000c645:	add    BYTE PTR [rcx+0x0],dl
   14000c648:	jne    0x14000c64a
   14000c64a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c64e:	jns    0x14000c650
   14000c650:	push   rbx
   14000c651:	add    BYTE PTR [rbp+0x0],ah
   14000c654:	movsxd eax,DWORD PTR [rax]
   14000c656:	jne    0x14000c658
   14000c658:	jb     0x14000c65a
   14000c65a:	imul   eax,DWORD PTR [rax],0x790074
   14000c660:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000c664:	push   0x0
   14000c666:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c66a:	je     0x14000c66c
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000c674:	je     0x14000c676
   14000c676:	push   rbx
   14000c677:	add    BYTE PTR [rbp+0x0],ah
   14000c67a:	movsxd eax,DWORD PTR [rax]
   14000c67c:	jne    0x14000c67e
   14000c67e:	jb     0x14000c680
   14000c680:	imul   eax,DWORD PTR [rax],0x790074
   14000c686:	add    BYTE PTR [rbp+0x0],r12b
   14000c68a:	jae    0x14000c68c
   14000c68c:	movsxd eax,DWORD PTR [rax]
   14000c68e:	jb     0x14000c690
   14000c690:	imul   eax,DWORD PTR [rax],0x740070
   14000c696:	outs   dx,DWORD PTR ds:[rsi]
   14000c697:	add    BYTE PTR [rdx+0x0],dh
   14000c69a:	add    BYTE PTR [rcx+0x0],r12b
   14000c69e:	movsxd eax,DWORD PTR [rax]
   14000c6a0:	ins    BYTE PTR es:[rdi],dx
   14000c6a1:	add    BYTE PTR [rax],al
   14000c6a3:	add    BYTE PTR [rax],al
   14000c6a5:	add    BYTE PTR [rax],al
   14000c6a7:	add    BYTE PTR [rcx+0x0],al
   14000c6aa:	jne    0x14000c6ac
   14000c6ac:	je     0x14000c6ae
   14000c6ae:	push   0x49007a00
   14000c6b3:	add    BYTE PTR [rsi+0x0],ch
   14000c6b6:	imul   eax,DWORD PTR [rax],0x690074
   14000c6bc:	(bad)  
   14000c6bd:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c6c1:	add    BYTE PTR [rdx+0x0],bh
   14000c6c4:	add    BYTE PTR gs:[rbx+0x0],al
   14000c6c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c9:	add    BYTE PTR [rsi+0x0],ch
   14000c6cc:	je     0x14000c6ce
   14000c6ce:	add    BYTE PTR gs:[rax+0x0],bh
   14000c6d2:	je     0x14000c6d4
   14000c6d4:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000c6d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c6d9:	add    BYTE PTR [rbp+0x0],ch
   14000c6dc:	push   rbx
   14000c6dd:	add    BYTE PTR [rcx+0x0],ch
   14000c6e0:	add    BYTE PTR fs:[rax],al
   14000c6e3:	add    BYTE PTR [rax],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rcx+0x0],al
   14000c6ea:	jne    0x14000c6ec
   14000c6ec:	je     0x14000c6ee
   14000c6ee:	push   0x41007a00
   14000c6f3:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000c6f7:	add    BYTE PTR [rbx+0x0],dl
   14000c6fa:	imul   eax,DWORD PTR [rax],0x730064
   14000c700:	push   rsp
   14000c701:	add    BYTE PTR [rdi+0x0],ch
   14000c704:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c708:	outs   dx,BYTE PTR ds:[rsi]
   14000c709:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c70d:	add    BYTE PTR [rax+0x0],bh
   14000c710:	je     0x14000c712
   14000c712:	add    BYTE PTR [rax],al
   14000c714:	add    BYTE PTR [rax],al
   14000c716:	add    BYTE PTR [rax],al
   14000c718:	add    BYTE PTR [r13+0x0],sil
   14000c71c:	je     0x14000c71e
   14000c71e:	push   0x41007a00
   14000c723:	add    BYTE PTR [rbx+0x0],ah
   14000c726:	movsxd eax,DWORD PTR [rax]
   14000c728:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c72c:	jae    0x14000c72e
   14000c72e:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000c732:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c736:	imul   eax,DWORD PTR [rax],0x0
   14000c739:	add    BYTE PTR [rax],al
   14000c73b:	add    BYTE PTR [rax],al
   14000c73d:	add    BYTE PTR [rax],al
   14000c73f:	add    BYTE PTR [rbx+0x0],dl
   14000c742:	(bad)  
   14000c743:	add    BYTE PTR [rbp+0x0],ch
   14000c746:	push   rcx
   14000c747:	add    BYTE PTR [rbp+0x0],dh
   14000c74a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c74e:	jns    0x14000c750
   14000c750:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c754:	data16 add BYTE PTR [rdi+0x0],ch
   14000c758:	jb     0x14000c75a
   14000c75a:	ins    DWORD PTR es:[rdi],dx
   14000c75b:	add    BYTE PTR [rcx+0x0],ah
   14000c75e:	je     0x14000c760
   14000c760:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c766:	push   rbp
   14000c767:	add    BYTE PTR [rbx+0x0],dh
   14000c76a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	pop    rdi
   14000c771:	add    BYTE PTR [rbx+0x0],al
   14000c774:	push   0x63006500
   14000c779:	add    BYTE PTR [rbx+0x0],ch
   14000c77c:	push   rbp
   14000c77d:	add    BYTE PTR [rbx+0x0],dh
   14000c780:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c784:	add    BYTE PTR [r11+0x0],spl
   14000c788:	movsxd eax,DWORD PTR [rax]
   14000c78a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c78e:	jae    0x14000c790
   14000c790:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c794:	jb     0x14000c796
   14000c796:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000c79a:	(bad)  
   14000c79b:	add    BYTE PTR [rsi+0x0],ch
   14000c79e:	add    BYTE PTR [ebp+0x0],ah
   14000c7a2:	push   rax
   14000c7a3:	add    BYTE PTR [rcx+0x0],ah
   14000c7a6:	jae    0x14000c7a8
   14000c7a8:	jae    0x14000c7aa
   14000c7aa:	ja     0x14000c7ac
   14000c7ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ad:	add    BYTE PTR [rdx+0x0],dh
   14000c7b0:	add    BYTE PTR fs:[rax],al
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    BYTE PTR [rdi+0x0],bl
   14000c7ba:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000c7be:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c7c2:	imul   eax,DWORD PTR [rax],0x49
   14000c7c5:	add    BYTE PTR [rsi+0x0],ah
   14000c7c8:	push   rax
   14000c7c9:	add    BYTE PTR [rcx+0x0],ah
   14000c7cc:	jae    0x14000c7ce
   14000c7ce:	jae    0x14000c7d0
   14000c7d0:	ja     0x14000c7d2
   14000c7d2:	outs   dx,DWORD PTR ds:[rsi]
   14000c7d3:	add    BYTE PTR [rdx+0x0],dh
   14000c7d6:	add    BYTE PTR fs:[rsi+0x0],cl
   14000c7da:	add    BYTE PTR gs:[rsi+0x0],dh
   14000c7de:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c7e2:	add    BYTE PTR [r8+0x0],r15b
   14000c7e6:	jo     0x14000c7e8
   14000c7e8:	imul   eax,DWORD PTR [rax],0x650072
   14000c7ee:	jae    0x14000c7f0
	...
   14000c7f8:	pop    rdi
   14000c7f9:	add    BYTE PTR [rdi+0x0],al
   14000c7fc:	add    BYTE PTR gs:[rax+rax*1+0x55],dh
   14000c801:	add    BYTE PTR [rbx+0x0],dh
   14000c804:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c808:	push   rbx
   14000c809:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c80d:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000c811:	add    BYTE PTR [rbx+0x0],dh
	...
   14000c820:	pop    rdi
   14000c821:	add    BYTE PTR [rbp+0x0],al
   14000c824:	jbe    0x14000c826
   14000c826:	(bad)  
   14000c827:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000c82b:	add    BYTE PTR [rcx+0x0],ah
   14000c82e:	je     0x14000c830
   14000c830:	add    BYTE PTR gs:[rbx+0x0],al
   14000c834:	outs   dx,DWORD PTR ds:[rsi]
   14000c835:	add    BYTE PTR [rsi+0x0],ch
   14000c838:	jbe    0x14000c83a
   14000c83a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c83e:	imul   eax,DWORD PTR [rax],0x6e0065
   14000c844:	movsxd eax,DWORD PTR [rax]
   14000c846:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
   14000c84b:	add    BYTE PTR [rdi+0x0],ah
   14000c84e:	outs   dx,DWORD PTR ds:[rsi]
   14000c84f:	add    BYTE PTR [rsi+0x0],ch
   14000c852:	push   rax
   14000c853:	add    BYTE PTR [rdi+0x0],ch
   14000c856:	ins    BYTE PTR es:[rdi],dx
   14000c857:	add    BYTE PTR [rcx+0x0],ch
   14000c85a:	movsxd eax,DWORD PTR [rax]
   14000c85c:	jns    0x14000c85e
   14000c85e:	add    BYTE PTR [rax],al
   14000c860:	push   rbx
   14000c861:	add    BYTE PTR [rcx+0x0],ah
   14000c864:	ins    DWORD PTR es:[rdi],dx
   14000c865:	add    BYTE PTR [rdi+0x0],cl
   14000c868:	jo     0x14000c86a
   14000c86a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c86e:	push   rbp
   14000c86f:	add    BYTE PTR [rbx+0x0],dh
   14000c872:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000c87c:	je     0x14000c87e
   14000c87e:	rex.XB add BYTE PTR [r13+0x0],sil
   14000c882:	jb     0x14000c884
   14000c884:	jb     0x14000c886
   14000c886:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c88a:	je     0x14000c88c
   14000c88c:	push   rbp
   14000c88d:	add    BYTE PTR [rbx+0x0],dh
   14000c890:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c894:	push   rax
   14000c895:	add    BYTE PTR [rcx+0x0],ah
   14000c898:	jae    0x14000c89a
   14000c89a:	jae    0x14000c89c
   14000c89c:	ja     0x14000c89e
   14000c89e:	outs   dx,DWORD PTR ds:[rsi]
   14000c89f:	add    BYTE PTR [rdx+0x0],dh
   14000c8a2:	add    BYTE PTR fs:[rax+0x0],dl
   14000c8a6:	jb     0x14000c8a8
   14000c8a8:	outs   dx,DWORD PTR ds:[rsi]
   14000c8a9:	add    BYTE PTR [rax+0x0],dh
   14000c8ac:	jae    0x14000c8ae
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	add    BYTE PTR [r15+0x0],spl
   14000c8b4:	add    BYTE PTR [eax],ah
   14000c8b7:	add    BYTE PTR [rax+0x0],dh
   14000c8ba:	(bad)  
   14000c8bb:	add    BYTE PTR [rbx+0x0],dh
   14000c8be:	jae    0x14000c8c0
   14000c8c0:	ja     0x14000c8c2
   14000c8c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c3:	add    BYTE PTR [rdx+0x0],dh
   14000c8c6:	add    BYTE PTR fs:[rax],ah
   14000c8c9:	add    BYTE PTR [rax+0x0],dh
   14000c8cc:	jb     0x14000c8ce
   14000c8ce:	outs   dx,DWORD PTR ds:[rsi]
   14000c8cf:	add    BYTE PTR [rax+0x0],dh
   14000c8d2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c8d6:	je     0x14000c8d8
   14000c8d8:	imul   eax,DWORD PTR [rax],0x730065
   14000c8de:	and    BYTE PTR [rax],al
   14000c8e0:	(bad)  
   14000c8e1:	add    BYTE PTR [rdx+0x0],dh
   14000c8e4:	add    BYTE PTR gs:[rax],ah
   14000c8e7:	add    BYTE PTR [rsi+0x0],cl
   14000c8ea:	push   rbp
   14000c8eb:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000c8f7:	add    BYTE PTR [rdi+0x0],bl
   14000c8fa:	add    BYTE PTR [r14+0x0],r14b
   14000c8fe:	(bad)  
   14000c8ff:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000c903:	add    BYTE PTR [rcx+0x0],ah
   14000c906:	je     0x14000c908
   14000c908:	add    BYTE PTR gs:[rax+0x0],dl
   14000c90c:	outs   dx,DWORD PTR ds:[rsi]
   14000c90d:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c911:	add    BYTE PTR [rbx+0x0],ah
   14000c914:	imul   eax,DWORD PTR [rax],0x730065
   14000c91a:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c91e:	jb     0x14000c920
   14000c920:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c924:	movsxd eax,DWORD PTR [rax]
   14000c926:	(bad)  
   14000c927:	add    BYTE PTR [rax+rax*1+0x55],ch
   14000c92b:	add    BYTE PTR [rbx+0x0],dh
   14000c92e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c932:	add    BYTE PTR [rax],al
   14000c934:	add    BYTE PTR [rax],al
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	push   rbx
   14000c939:	add    BYTE PTR [rcx+0x0],ah
   14000c93c:	ins    DWORD PTR es:[rdi],dx
   14000c93d:	add    BYTE PTR [rcx+0x0],dl
   14000c940:	jne    0x14000c942
   14000c942:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c946:	jns    0x14000c948
   14000c948:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c94c:	data16 add BYTE PTR [rdi+0x0],ch
   14000c950:	jb     0x14000c952
   14000c952:	ins    DWORD PTR es:[rdi],dx
   14000c953:	add    BYTE PTR [rcx+0x0],ah
   14000c956:	je     0x14000c958
   14000c958:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c95e:	add    BYTE PTR [rdi+0x0],r13b
   14000c962:	ins    DWORD PTR es:[rdi],dx
   14000c963:	add    BYTE PTR [rcx+0x0],ah
   14000c966:	imul   eax,DWORD PTR [rax],0x6e
   14000c96c:	add    BYTE PTR [rax],al
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	pop    rdi
   14000c971:	add    BYTE PTR [rbp+0x0],al
   14000c974:	jbe    0x14000c976
   14000c976:	(bad)  
   14000c977:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000c97b:	add    BYTE PTR [rcx+0x0],ah
   14000c97e:	je     0x14000c980
   14000c980:	add    BYTE PTR gs:[rax+0x0],dl
   14000c984:	outs   dx,DWORD PTR ds:[rsi]
   14000c985:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c989:	add    BYTE PTR [rbx+0x0],ah
   14000c98c:	imul   eax,DWORD PTR [rax],0x730065
   14000c992:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c996:	jb     0x14000c998
   14000c998:	rex.XB add BYTE PTR [r13+0x0],sil
   14000c99c:	jb     0x14000c99e
   14000c99e:	jb     0x14000c9a0
   14000c9a0:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c9a4:	je     0x14000c9a6
   14000c9a6:	push   rbp
   14000c9a7:	add    BYTE PTR [rbx+0x0],dh
   14000c9aa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c9ae:	add    BYTE PTR [rax],al
   14000c9b0:	pop    rdi
   14000c9b1:	add    BYTE PTR [rdi+0x0],al
   14000c9b4:	add    BYTE PTR gs:[rax+rax*1+0x57],dh
   14000c9b9:	add    BYTE PTR [rcx+0x0],ch
   14000c9bc:	outs   dx,BYTE PTR ds:[rsi]
   14000c9bd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c9c1:	add    BYTE PTR [rdi+0x0],dh
   14000c9c4:	jae    0x14000c9c6
   14000c9c6:	push   rax
   14000c9c7:	add    BYTE PTR [rcx+0x0],ah
   14000c9ca:	jae    0x14000c9cc
   14000c9cc:	jae    0x14000c9ce
   14000c9ce:	ja     0x14000c9d0
   14000c9d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d1:	add    BYTE PTR [rdx+0x0],dh
   14000c9d4:	add    BYTE PTR fs:[rax+0x0],dl
   14000c9d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d9:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c9dd:	add    BYTE PTR [rbx+0x0],ah
   14000c9e0:	imul   eax,DWORD PTR [rax],0x730065
   14000c9e6:	add    BYTE PTR [rax],al
   14000c9e8:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14000c9ec:	ins    BYTE PTR es:[rdi],dx
   14000c9ed:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c9f1:	add    BYTE PTR [rbx+0x0],dl
   14000c9f4:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000c9f9:	add    BYTE PTR [rax],al
   14000c9fb:	add    BYTE PTR [rax],al
   14000c9fd:	add    BYTE PTR [rax],al
   14000c9ff:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000ca03:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000ca07:	add    BYTE PTR [rbp+0x0],ah
   14000ca0a:	movsxd eax,DWORD PTR [rax]
   14000ca0c:	jne    0x14000ca0e
   14000ca0e:	jb     0x14000ca10
   14000ca10:	imul   eax,DWORD PTR [rax],0x790074
   14000ca16:	pop    rsp
   14000ca17:	add    BYTE PTR [rbp+0x0],ah
   14000ca1a:	(bad)  
   14000ca1b:	add    BYTE PTR [rbx+0x0],dh
   14000ca1e:	pop    rsp
   14000ca1f:	add    BYTE PTR [rax+0x0],dh
   14000ca22:	outs   dx,DWORD PTR ds:[rsi]
   14000ca23:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ca27:	add    BYTE PTR [rbx+0x0],ah
   14000ca2a:	jns    0x14000ca2c
   14000ca2c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ca30:	add    BYTE PTR [ecx+0x0],ch
   14000ca34:	outs   dx,BYTE PTR ds:[rsi]
   14000ca35:	add    BYTE PTR [rbp+0x0],ah
   14000ca38:	pop    rsp
   14000ca39:	add    BYTE PTR [rbp+0x0],ah
   14000ca3c:	jbe    0x14000ca3e
   14000ca3e:	(bad)  
   14000ca3f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000ca43:	add    BYTE PTR [rcx+0x0],ch
   14000ca46:	(bad)  
   14000ca47:	add    BYTE PTR [rax+rax*1+0x70],bl
   14000ca4b:	add    BYTE PTR [rdi+0x0],ch
   14000ca4e:	ins    BYTE PTR es:[rdi],dx
   14000ca4f:	add    BYTE PTR [rcx+0x0],ch
   14000ca52:	movsxd eax,DWORD PTR [rax]
   14000ca54:	imul   eax,DWORD PTR [rax],0x730065
   14000ca5a:	add    BYTE PTR cs:[rbx+0x0],ah
   14000ca5e:	jo     0x14000ca60
   14000ca60:	jo     0x14000ca62
   14000ca62:	add    BYTE PTR [rax],al
   14000ca64:	add    BYTE PTR [rax],al
   14000ca66:	add    BYTE PTR [rax],al
   14000ca68:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ca6c:	outs   dx,BYTE PTR ds:[rsi]
   14000ca6d:	add    BYTE PTR [rsi+0x0],dh
   14000ca70:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ca74:	je     0x14000ca76
   14000ca76:	push   rbx
   14000ca77:	add    BYTE PTR [rcx+0x0],ch
   14000ca7a:	add    BYTE PTR fs:[rax+rax*1+0x6f],dl
   14000ca7f:	add    BYTE PTR [rbx+0x0],dl
   14000ca82:	je     0x14000ca84
   14000ca84:	jb     0x14000ca86
   14000ca86:	imul   eax,DWORD PTR [rax],0x67006e
   14000ca8c:	push   rbx
   14000ca8d:	add    BYTE PTR [rcx+0x0],ch
   14000ca90:	add    BYTE PTR fs:[rax],al
   14000ca93:	add    BYTE PTR [rax],al
   14000ca95:	add    BYTE PTR [rax],al
   14000ca97:	add    BYTE PTR [rax+rax*1+0x53],cl
   14000ca9b:	add    BYTE PTR [rcx+0x0],al
   14000ca9e:	pop    rdi
   14000ca9f:	add    BYTE PTR [rbp+0x0],al
   14000caa2:	add    BYTE PTR [r11+0x0],dl
   14000caa6:	pop    rdi
   14000caa7:	add    BYTE PTR [rbp+0x0],al
   14000caaa:	rex.WRX add BYTE PTR [rax+r8*1+0x50],r8b
   14000caaf:	add    BYTE PTR [rdi+0x0],cl
   14000cab2:	rex.WB add BYTE PTR [r14+0x0],cl
   14000cab6:	push   rsp
	...
   14000cabf:	add    BYTE PTR [rax+rax*1+0x73],cl
   14000cac3:	add    BYTE PTR [rcx+0x0],ah
   14000cac6:	jo     0x14000cac8
   14000cac8:	rex.XB add BYTE PTR [r10+0x0],sil
   14000cacc:	add    BYTE PTR gs:[rcx+0x0],ah
   14000cad0:	je     0x14000cad2
   14000cad2:	add    BYTE PTR gs:[rdx+0x0],al
   14000cad6:	imul   eax,DWORD PTR [rax],0x64006e
   14000cadc:	imul   eax,DWORD PTR [rax],0x67006e
   14000cae2:	rex.W add BYTE PTR [rcx+0x0],spl
   14000cae6:	outs   dx,BYTE PTR ds:[rsi]
   14000cae7:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000caeb:	add    BYTE PTR [rbp+0x0],ah
   14000caee:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000caf2:	jb     0x14000caf4
   14000caf4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000caf8:	movsxd eax,DWORD PTR [rax]
   14000cafa:	(bad)  
   14000cafb:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000caff:	add    BYTE PTR [rbx+0x0],ah
   14000cb02:	pop    rdi
   14000cb03:	add    BYTE PTR [rax+rax*1+0x73],cl
   14000cb07:	add    BYTE PTR [rcx+0x0],ah
   14000cb0a:	jb     0x14000cb0c
   14000cb0c:	add    BYTE PTR [r9+0x0],r12b
   14000cb10:	jae    0x14000cb12
   14000cb12:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000cb16:	jb     0x14000cb18
   14000cb18:	imul   eax,DWORD PTR [rax],0x55
   14000cb1b:	add    BYTE PTR [rbx+0x0],dh
   14000cb1e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cb22:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000cb26:	outs   dx,BYTE PTR ds:[rsi]
   14000cb27:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cb2b:	add    BYTE PTR [rdi+0x0],ch
   14000cb2e:	ins    BYTE PTR es:[rdi],dx
   14000cb2f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cb33:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000cb3f:	add    BYTE PTR [rbx+0x0],ah
   14000cb42:	pop    rdi
   14000cb43:	add    BYTE PTR [rax+rax*1+0x73],cl
   14000cb47:	add    BYTE PTR [rcx+0x0],ah
   14000cb4a:	jb     0x14000cb4c
   14000cb4c:	add    BYTE PTR [r9+0x0],r12b
   14000cb50:	jae    0x14000cb52
   14000cb52:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000cb56:	je     0x14000cb58
   14000cb58:	rex.XB add BYTE PTR [r9+0x0],spl
   14000cb5c:	ins    BYTE PTR es:[rdi],dx
   14000cb5d:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cb61:	add    BYTE PTR [rdx+0x0],dh
   14000cb64:	push   rax
   14000cb65:	add    BYTE PTR [rcx+0x0],ah
   14000cb68:	jae    0x14000cb6a
   14000cb6a:	jae    0x14000cb6c
   14000cb6c:	ja     0x14000cb6e
   14000cb6e:	outs   dx,DWORD PTR ds:[rsi]
   14000cb6f:	add    BYTE PTR [rdx+0x0],dh
   14000cb72:	add    BYTE PTR fs:[rbx+0x0],al
   14000cb76:	outs   dx,DWORD PTR ds:[rsi]
   14000cb77:	add    BYTE PTR [rbp+0x0],ch
   14000cb7a:	jo     0x14000cb7c
   14000cb7c:	ins    BYTE PTR es:[rdi],dx
   14000cb7d:	add    BYTE PTR [rbp+0x0],ah
   14000cb80:	js     0x14000cb82
   14000cb82:	imul   eax,DWORD PTR [rax],0x790074
	...
   14000cb90:	movsxd eax,DWORD PTR [rax]
   14000cb92:	pop    rdi
   14000cb93:	add    BYTE PTR [rax+rax*1+0x73],cl
   14000cb97:	add    BYTE PTR [rcx+0x0],ah
   14000cb9a:	jb     0x14000cb9c
   14000cb9c:	add    BYTE PTR [r9+0x0],r12b
   14000cba0:	jae    0x14000cba2
   14000cba2:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000cba6:	je     0x14000cba8
   14000cba8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000cbac:	outs   dx,BYTE PTR ds:[rsi]
   14000cbad:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cbb1:	add    BYTE PTR [rdi+0x0],ch
   14000cbb4:	ins    BYTE PTR es:[rdi],dx
   14000cbb5:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cbb9:	add    BYTE PTR [rax+rax*1+0x55],ah
   14000cbbd:	add    BYTE PTR [rbx+0x0],dh
   14000cbc0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cbc4:	jae    0x14000cbc6
   14000cbc6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000cbca:	data16 add BYTE PTR [rdi+0x0],ch
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	push   rbx
   14000cbd1:	add    BYTE PTR [rcx+0x0],bl
   14000cbd4:	push   rbx
   14000cbd5:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000cbd9:	add    BYTE PTR [rbp+0x0],cl
   14000cbdc:	pop    rsp
   14000cbdd:	add    BYTE PTR [rbx+0x0],al
   14000cbe0:	jne    0x14000cbe2
   14000cbe2:	jb     0x14000cbe4
   14000cbe4:	jb     0x14000cbe6
   14000cbe6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cbea:	je     0x14000cbec
   14000cbec:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000cbf0:	outs   dx,BYTE PTR ds:[rsi]
   14000cbf1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cbf5:	add    BYTE PTR [rdi+0x0],ch
   14000cbf8:	ins    BYTE PTR es:[rdi],dx
   14000cbf9:	add    BYTE PTR [rbx+0x0],dl
   14000cbfc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000cc01:	add    BYTE PTR [rbx+0x0],al
   14000cc04:	outs   dx,DWORD PTR ds:[rsi]
   14000cc05:	add    BYTE PTR [rsi+0x0],ch
   14000cc08:	je     0x14000cc0a
   14000cc0a:	jb     0x14000cc0c
   14000cc0c:	outs   dx,DWORD PTR ds:[rsi]
   14000cc0d:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000cc11:	add    BYTE PTR [rbp+0x0],al
   14000cc14:	add    BYTE PTR [r11+0x0],dl
   14000cc18:	pop    rsp
   14000cc19:	add    BYTE PTR [rax+0x0],dl
   14000cc1c:	outs   dx,DWORD PTR ds:[rsi]
   14000cc1d:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cc21:	add    BYTE PTR [rbx+0x0],ah
   14000cc24:	imul   eax,DWORD PTR [rax],0x730065
   14000cc2a:	add    BYTE PTR [rax],al
   14000cc2c:	add    BYTE PTR [rax],al
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	push   rdx
   14000cc31:	add    BYTE PTR [rbp+0x0],ah
   14000cc34:	add    BYTE PTR [edi+0x0],cl
   14000cc38:	jo     0x14000cc3a
   14000cc3a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cc3e:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000cc42:	jns    0x14000cc44
   14000cc44:	add    BYTE PTR [r8+0x0],r15b
	...
   14000cc50:	add    BYTE PTR fs:[rbx+0x0],dh
   14000cc54:	pop    rsp
   14000cc55:	add    BYTE PTR [rbx+0x0],dh
   14000cc58:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cc5c:	jne    0x14000cc5e
   14000cc5e:	jb     0x14000cc60
   14000cc60:	imul   eax,DWORD PTR [rax],0x790074
   14000cc66:	pop    rsp
   14000cc67:	add    BYTE PTR [rbp+0x0],ah
   14000cc6a:	(bad)  
   14000cc6b:	add    BYTE PTR [rbx+0x0],dh
   14000cc6e:	pop    rsp
   14000cc6f:	add    BYTE PTR [rax+0x0],dh
   14000cc72:	outs   dx,DWORD PTR ds:[rsi]
   14000cc73:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cc77:	add    BYTE PTR [rbx+0x0],ah
   14000cc7a:	jns    0x14000cc7c
   14000cc7c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cc80:	add    BYTE PTR [ecx+0x0],ch
   14000cc84:	outs   dx,BYTE PTR ds:[rsi]
   14000cc85:	add    BYTE PTR [rbp+0x0],ah
   14000cc88:	pop    rsp
   14000cc89:	add    BYTE PTR [rbx+0x0],ah
   14000cc8c:	outs   dx,DWORD PTR ds:[rsi]
   14000cc8d:	add    BYTE PTR [rbp+0x0],ch
   14000cc90:	ins    DWORD PTR es:[rdi],dx
   14000cc91:	add    BYTE PTR [rdi+0x0],ch
   14000cc94:	outs   dx,BYTE PTR ds:[rsi]
   14000cc95:	add    BYTE PTR [rsi],ch
   14000cc97:	add    BYTE PTR [rbx+0x0],ah
   14000cc9a:	jo     0x14000cc9c
   14000cc9c:	jo     0x14000cc9e
   14000cc9e:	add    BYTE PTR [rax],al
   14000cca0:	push   rdx
   14000cca1:	add    BYTE PTR [rbp+0x0],ah
   14000cca4:	add    BYTE PTR [ebx+0x0],al
   14000cca8:	jb     0x14000ccaa
   14000ccaa:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ccae:	je     0x14000ccb0
   14000ccb0:	add    BYTE PTR gs:[rbx+0x0],cl
   14000ccb4:	add    BYTE PTR gs:[rcx+0x0],bh
   14000ccb8:	add    BYTE PTR [r8+0x0],r15b
   14000ccbc:	add    BYTE PTR [rax],al
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	push   rdx
   14000ccc1:	add    BYTE PTR [rbp+0x0],ah
   14000ccc4:	add    BYTE PTR [ecx+0x0],dl
   14000ccc8:	jne    0x14000ccca
   14000ccca:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ccce:	jns    0x14000ccd0
   14000ccd0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000ccd4:	data16 add BYTE PTR [rdi+0x0],ch
   14000ccd8:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000ccdc:	jns    0x14000ccde
   14000ccde:	add    BYTE PTR [rax],al
   14000cce0:	rex.WRB add BYTE PTR [r8+rax*1+0x4d],r8b
   14000cce5:	add    BYTE PTR [rax],al
   14000cce7:	add    BYTE PTR [rcx+0x0],ch
   14000ccea:	outs   dx,BYTE PTR ds:[rsi]
   14000cceb:	add    BYTE PTR [rsi+0x0],dh
   14000ccee:	(bad)  
   14000ccef:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ccf3:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ccf7:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000ccfb:	add    BYTE PTR [rax+0x0],dh
   14000ccfe:	add    BYTE PTR gs:[rax],al
   14000cd01:	add    BYTE PTR [rax],al
   14000cd03:	add    BYTE PTR [rax],al
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	add    BYTE PTR [rdx+0x0],dl
   14000cd0a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000cd0e:	add    BYTE PTR [r14+0x0],r13b
   14000cd12:	jne    0x14000cd14
   14000cd14:	ins    DWORD PTR es:[rdi],dx
   14000cd15:	add    BYTE PTR [rsi+0x0],dl
   14000cd18:	(bad)  
   14000cd19:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000cd1d:	add    BYTE PTR [rbp+0x0],ah
	...
   14000cd28:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000cd2c:	jbe    0x14000cd2e
   14000cd2e:	(bad)  
   14000cd2f:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cd33:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000cd37:	add    BYTE PTR [rax+0x0],dh
   14000cd3a:	outs   dx,DWORD PTR ds:[rsi]
   14000cd3b:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cd3f:	add    BYTE PTR [rbx+0x0],ah
   14000cd42:	jns    0x14000cd44
   14000cd44:	and    BYTE PTR [rax],al
   14000cd46:	imul   eax,DWORD PTR [rax],0x64
   14000cd4c:	add    BYTE PTR [rax],al
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	pop    rdi
   14000cd51:	add    BYTE PTR [rdx+0x0],dl
   14000cd54:	add    BYTE PTR gs:[rdi+0x0],ah
   14000cd58:	push   rsi
   14000cd59:	add    BYTE PTR [rcx+0x0],ah
   14000cd5c:	ins    BYTE PTR es:[rdi],dx
   14000cd5d:	add    BYTE PTR [rbp+0x0],dh
   14000cd60:	add    BYTE PTR gs:[rax+rax*1+0x6f],dl
   14000cd65:	add    BYTE PTR [rsi+0x0],dl
   14000cd68:	(bad)  
   14000cd69:	add    BYTE PTR [rdx+0x0],dh
   14000cd6c:	imul   eax,DWORD PTR [rax],0x6e0061
   14000cd72:	je     0x14000cd74
   14000cd74:	add    BYTE PTR [rax],al
   14000cd76:	add    BYTE PTR [rax],al
   14000cd78:	push   rdx
   14000cd79:	add    BYTE PTR [rbp+0x0],ah
   14000cd7c:	add    BYTE PTR [ecx+0x0],ch
   14000cd80:	jae    0x14000cd82
   14000cd82:	je     0x14000cd84
   14000cd84:	jb     0x14000cd86
   14000cd86:	jns    0x14000cd88
   14000cd88:	and    BYTE PTR [rax],al
   14000cd8a:	imul   eax,DWORD PTR [rax],0x65
   14000cd8d:	add    BYTE PTR [rcx+0x0],bh
   14000cd90:	and    BYTE PTR [rax],al
   14000cd92:	imul   eax,DWORD PTR [rax],0x200073
   14000cd98:	outs   dx,BYTE PTR ds:[rsi]
   14000cd99:	add    BYTE PTR [rdi+0x0],ch
   14000cd9c:	je     0x14000cd9e
   14000cd9e:	and    BYTE PTR [rax],al
   14000cda0:	outs   dx,DWORD PTR ds:[rsi]
   14000cda1:	add    BYTE PTR [rax+0x0],dh
   14000cda4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cda8:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    BYTE PTR [rip+0x7500],ah        # 0x1400142b5
   14000cdb5:	add    BYTE PTR [rax],al
   14000cdb7:	add    BYTE PTR [rdx+0x0],dl
   14000cdba:	je     0x14000cdbc
   14000cdbc:	ins    BYTE PTR es:[rdi],dx
   14000cdbd:	add    BYTE PTR [rbx+0x0],dl
   14000cdc0:	je     0x14000cdc2
   14000cdc2:	jb     0x14000cdc4
   14000cdc4:	imul   eax,DWORD PTR [rax],0x67006e
   14000cdca:	rex.XB add BYTE PTR [r11+0x0],spl
   14000cdce:	push   0x72005000
   14000cdd3:	add    BYTE PTR [rcx+0x0],ch
   14000cdd6:	outs   dx,BYTE PTR ds:[rsi]
   14000cdd7:	add    BYTE PTR [rax+rax*1+0x66],dh
   14000cddb:	add    BYTE PTR [rdi+0x0],dl
   14000cdde:	add    BYTE PTR [rax],al
   14000cde0:	push   rdx
   14000cde1:	add    BYTE PTR [rbp+0x0],ah
   14000cde4:	add    BYTE PTR [eax+eax*1+0x65],al
   14000cde9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cded:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000cdf1:	add    BYTE PTR [rsi+0x0],dl
   14000cdf4:	(bad)  
   14000cdf5:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000cdf9:	add    BYTE PTR [rbp+0x0],ah
   14000cdfc:	add    BYTE PTR [rax],al
   14000cdfe:	add    BYTE PTR [rax],al
   14000ce00:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000ce04:	jbe    0x14000ce06
   14000ce06:	(bad)  
   14000ce07:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce0b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ce0f:	add    BYTE PTR [rax+0x0],dh
   14000ce12:	outs   dx,DWORD PTR ds:[rsi]
   14000ce13:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce17:	add    BYTE PTR [rbx+0x0],ah
   14000ce1a:	jns    0x14000ce1c
   14000ce1c:	and    BYTE PTR [rax],al
   14000ce1e:	jbe    0x14000ce20
   14000ce20:	(bad)  
   14000ce21:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000ce25:	add    BYTE PTR [rbp+0x0],ah
	...
   14000ce30:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000ce34:	jbe    0x14000ce36
   14000ce36:	(bad)  
   14000ce37:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce3b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ce3f:	add    BYTE PTR [rax+0x0],dl
   14000ce42:	outs   dx,DWORD PTR ds:[rsi]
   14000ce43:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce47:	add    BYTE PTR [rbx+0x0],ah
   14000ce4a:	jns    0x14000ce4c
   14000ce4c:	and    BYTE PTR [rax],al
   14000ce4e:	push   rsp
   14000ce4f:	add    BYTE PTR [rcx+0x0],bh
   14000ce52:	jo     0x14000ce54
   14000ce54:	add    BYTE PTR gs:[rax],al
	...
   14000ce5f:	add    BYTE PTR [rcx+0x0],cl
   14000ce62:	outs   dx,BYTE PTR ds:[rsi]
   14000ce63:	add    BYTE PTR [rsi+0x0],dh
   14000ce66:	(bad)  
   14000ce67:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce6b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ce6f:	add    BYTE PTR [rax+0x0],dh
   14000ce72:	outs   dx,DWORD PTR ds:[rsi]
   14000ce73:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ce77:	add    BYTE PTR [rbx+0x0],ah
   14000ce7a:	jns    0x14000ce7c
   14000ce7c:	and    BYTE PTR [rax],al
   14000ce7e:	jbe    0x14000ce80
   14000ce80:	(bad)  
   14000ce81:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000ce85:	add    BYTE PTR [rbp+0x0],ah
   14000ce88:	cmp    al,BYTE PTR [rax]
   14000ce8a:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000ce8e:	jb     0x14000ce90
   14000ce90:	and    BYTE PTR [rax],al
   14000ce92:	outs   dx,BYTE PTR ds:[rsi]
   14000ce93:	add    BYTE PTR [rbp+0x0],ah
   14000ce96:	ja     0x14000ce98
   14000ce98:	and    BYTE PTR [rax],al
   14000ce9a:	jo     0x14000ce9c
   14000ce9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ce9d:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cea1:	add    BYTE PTR [rbx+0x0],ah
   14000cea4:	imul   eax,DWORD PTR [rax],0x730065
   14000ceaa:	and    BYTE PTR [rax],al
   14000ceac:	jne    0x14000ceae
   14000ceae:	jo     0x14000ceb0
   14000ceb0:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ceb4:	je     0x14000ceb6
   14000ceb6:	add    BYTE PTR gs:[rax],ah
   14000ceb9:	add    BYTE PTR [rsi+0x0],ch
   14000cebc:	add    BYTE PTR [r8+rax*1+0x4c],cl
   14000cec1:	add    BYTE PTR [rdi+0x0],bl
   14000cec4:	push   rax
   14000cec5:	add    BYTE PTR [rdi+0x0],cl
   14000cec8:	rex.WR add BYTE PTR [rcx+0x0],r9b
   14000cecc:	rex.XB add BYTE PTR [r9+0x0],cl
   14000ced0:	add    BYTE PTR [r11+0x0],r10b
   14000ced4:	add    BYTE PTR [rax],al
   14000ced6:	add    BYTE PTR [rax],al
   14000ced8:	push   rdx
   14000ced9:	add    BYTE PTR [rbp+0x0],ah
   14000cedc:	add    BYTE PTR [eax+eax*1+0x65],al
   14000cee1:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cee5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000cee9:	add    BYTE PTR [rbx+0x0],cl
   14000ceec:	add    BYTE PTR gs:[rcx+0x0],bh
	...
   14000cef8:	push   rax
   14000cef9:	add    BYTE PTR [rdx+0x0],dh
   14000cefc:	imul   eax,DWORD PTR [rax],0x690076
   14000cf02:	ins    BYTE PTR es:[rdi],dx
   14000cf03:	add    BYTE PTR [rbp+0x0],ah
   14000cf06:	add    BYTE PTR [ebp+0x0],ah
   14000cf0a:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000cf0e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cf12:	imul   eax,DWORD PTR [rax],0x0
   14000cf15:	add    BYTE PTR [rax],al
   14000cf17:	add    BYTE PTR [rbx+0x0],al
   14000cf1a:	jb     0x14000cf1c
   14000cf1c:	add    BYTE PTR gs:[rcx+0x0],ah
   14000cf20:	je     0x14000cf22
   14000cf22:	add    BYTE PTR gs:[rdi+0x0],dl
   14000cf26:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000cf2b:	add    BYTE PTR [rbx+0x0],cl
   14000cf2e:	outs   dx,BYTE PTR ds:[rsi]
   14000cf2f:	add    BYTE PTR [rdi+0x0],ch
   14000cf32:	ja     0x14000cf34
   14000cf34:	outs   dx,BYTE PTR ds:[rsi]
   14000cf35:	add    BYTE PTR [rbx+0x0],dl
   14000cf38:	imul   eax,DWORD PTR [rax],0x64
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	pop    rdi
   14000cf41:	rex.XB push 0x416b6365
   14000cf47:	fs ins DWORD PTR es:[rdi],dx
   14000cf49:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14000cf50:	rex.WRX add BYTE PTR [rax+r8*1+0x4f],r14b
   14000cf55:	add    BYTE PTR [rax+0x0],dh
   14000cf58:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cf5c:	push   rax
   14000cf5d:	add    BYTE PTR [rdx+0x0],dh
   14000cf60:	outs   dx,DWORD PTR ds:[rsi]
   14000cf61:	add    BYTE PTR [rbx+0x0],ah
   14000cf64:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cf68:	jae    0x14000cf6a
   14000cf6a:	push   rsp
   14000cf6b:	add    BYTE PTR [rdi+0x0],ch
   14000cf6e:	imul   eax,DWORD PTR [rax],0x65
   14000cf71:	add    BYTE PTR [rsi+0x0],ch
   14000cf74:	add    BYTE PTR [rax],al
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	rex.WRX add BYTE PTR [rax+r8*1+0x44],r14b
   14000cf7d:	add    BYTE PTR [rbp+0x0],dh
   14000cf80:	jo     0x14000cf82
   14000cf82:	ins    BYTE PTR es:[rdi],dx
   14000cf83:	add    BYTE PTR [rcx+0x0],ch
   14000cf86:	movsxd eax,DWORD PTR [rax]
   14000cf88:	(bad)  
   14000cf89:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000cf8d:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14000cf91:	add    BYTE PTR [rbx+0x0],ch
   14000cf94:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   14000cfa0:	rex.WRX add BYTE PTR [rax+r8*1+0x51],r14b
   14000cfa5:	add    BYTE PTR [rbp+0x0],dh
   14000cfa8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cfac:	jns    0x14000cfae
   14000cfae:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000cfb2:	data16 add BYTE PTR [rdi+0x0],ch
   14000cfb6:	jb     0x14000cfb8
   14000cfb8:	ins    DWORD PTR es:[rdi],dx
   14000cfb9:	add    BYTE PTR [rcx+0x0],ah
   14000cfbc:	je     0x14000cfbe
   14000cfbe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cfc4:	push   rsp
   14000cfc5:	add    BYTE PTR [rdi+0x0],ch
   14000cfc8:	imul   eax,DWORD PTR [rax],0x65
   14000cfcb:	add    BYTE PTR [rsi+0x0],ch
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000cfd4:	je     0x14000cfd6
   14000cfd6:	and    BYTE PTR [rax],al
   14000cfd8:	(bad)  
   14000cfd9:	add    BYTE PTR [rsi+0x0],ch
   14000cfdc:	and    BYTE PTR [rax],al
   14000cfde:	imul   eax,DWORD PTR [rax],0x70006d
   14000cfe4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cfe8:	jae    0x14000cfea
   14000cfea:	outs   dx,DWORD PTR ds:[rsi]
   14000cfeb:	add    BYTE PTR [rsi+0x0],ch
   14000cfee:	(bad)  
   14000cfef:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000cff3:	add    BYTE PTR [rdi+0x0],ch
   14000cff6:	outs   dx,BYTE PTR ds:[rsi]
   14000cff7:	add    BYTE PTR [rax],ah
   14000cff9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000cffd:	add    BYTE PTR [rsi+0x0],dh
   14000d000:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000d005:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000d009:	add    BYTE PTR [rbx+0x0],ch
   14000d00c:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   14000d018:	rex.WRX add BYTE PTR [rax+r8*1+0x4f],r14b
   14000d01d:	add    BYTE PTR [rax+0x0],dh
   14000d020:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d024:	push   rsp
   14000d025:	add    BYTE PTR [rax+0x0],ch
   14000d028:	jb     0x14000d02a
   14000d02a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000d02e:	add    BYTE PTR fs:[rax+rax*1+0x6f],dl
   14000d033:	add    BYTE PTR [rbx+0x0],ch
   14000d036:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	pop    rdi
   14000d041:	add    BYTE PTR [rbx+0x0],al
   14000d044:	push   0x63006500
   14000d049:	add    BYTE PTR [rbx+0x0],ch
   14000d04c:	push   rsp
   14000d04d:	add    BYTE PTR [rbx+0x0],al
   14000d050:	rex.X add BYTE PTR [rax],al
   14000d053:	add    BYTE PTR [rax],al
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	add    BYTE PTR [rbp+0x0],dh
   14000d05a:	outs   dx,BYTE PTR ds:[rsi]
   14000d05b:	add    BYTE PTR [rbp+0x0],ah
   14000d05e:	js     0x14000d060
   14000d060:	jo     0x14000d062
   14000d062:	add    BYTE PTR gs:[rbx+0x0],ah
   14000d066:	je     0x14000d068
   14000d068:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rdx+0x0],dl
   14000d072:	add    BYTE PTR gs:[rdi+0x0],ah
   14000d076:	push   rbx
   14000d077:	add    BYTE PTR [rbp+0x0],ah
   14000d07a:	je     0x14000d07c
   14000d07c:	push   rsi
   14000d07d:	add    BYTE PTR [rcx+0x0],ah
   14000d080:	ins    BYTE PTR es:[rdi],dx
   14000d081:	add    BYTE PTR [rbp+0x0],dh
   14000d084:	add    BYTE PTR gs:[rbp+0x0],al
   14000d088:	js     0x14000d08a
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	add    BYTE PTR [rax],al
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	add    BYTE PTR [r10+0x0],r14b
   14000d094:	jb     0x14000d096
   14000d096:	outs   dx,DWORD PTR ds:[rsi]
   14000d097:	add    BYTE PTR [rdx+0x0],dh
   14000d09a:	and    BYTE PTR [rax],al
   14000d09c:	jb     0x14000d09e
   14000d09e:	add    BYTE PTR gs:[rcx+0x0],ah
   14000d0a2:	add    BYTE PTR fs:[rcx+0x0],ch
   14000d0a6:	outs   dx,BYTE PTR ds:[rsi]
   14000d0a7:	add    BYTE PTR [rdi+0x0],ah
   14000d0aa:	and    BYTE PTR [rax],al
   14000d0ac:	push   rbx
   14000d0ad:	add    BYTE PTR [rbx+0x0],ah
   14000d0b0:	jb     0x14000d0b2
   14000d0b2:	add    BYTE PTR gs:[rbp+0x0],ah
   14000d0b6:	outs   dx,BYTE PTR ds:[rsi]
   14000d0b7:	add    BYTE PTR [rbx+0x0],dl
   14000d0ba:	(bad)  
   14000d0bb:	add    BYTE PTR [rsi+0x0],dh
   14000d0be:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d0c2:	and    BYTE PTR [rax],al
   14000d0c4:	push   rsp
   14000d0c5:	add    BYTE PTR [rcx+0x0],ch
   14000d0c8:	ins    DWORD PTR es:[rdi],dx
   14000d0c9:	add    BYTE PTR [rbp+0x0],ah
   14000d0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000d0cd:	add    BYTE PTR [rbp+0x0],dh
   14000d0d0:	je     0x14000d0d2
	...
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	add    BYTE PTR [r10+0x0],r14b
   14000d0e4:	jb     0x14000d0e6
   14000d0e6:	outs   dx,DWORD PTR ds:[rsi]
   14000d0e7:	add    BYTE PTR [rdx+0x0],dh
   14000d0ea:	and    BYTE PTR [rax],al
   14000d0ec:	jb     0x14000d0ee
   14000d0ee:	add    BYTE PTR gs:[rcx+0x0],ah
   14000d0f2:	add    BYTE PTR fs:[rcx+0x0],ch
   14000d0f6:	outs   dx,BYTE PTR ds:[rsi]
   14000d0f7:	add    BYTE PTR [rdi+0x0],ah
   14000d0fa:	and    BYTE PTR [rax],al
   14000d0fc:	push   rbx
   14000d0fd:	add    BYTE PTR [rbx+0x0],ah
   14000d100:	jb     0x14000d102
   14000d102:	add    BYTE PTR gs:[rbp+0x0],ah
   14000d106:	outs   dx,BYTE PTR ds:[rsi]
   14000d107:	add    BYTE PTR [rbx+0x0],dl
   14000d10a:	(bad)  
   14000d10b:	add    BYTE PTR [rsi+0x0],dh
   14000d10e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d112:	and    BYTE PTR [rax],al
   14000d114:	jae    0x14000d116
   14000d116:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000d11b:	add    BYTE PTR [rcx+0x0],ch
   14000d11e:	outs   dx,BYTE PTR ds:[rsi]
   14000d11f:	add    BYTE PTR [rdi+0x0],ah
	...
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	add    BYTE PTR [r10+0x0],r14b
   14000d134:	jb     0x14000d136
   14000d136:	outs   dx,DWORD PTR ds:[rsi]
   14000d137:	add    BYTE PTR [rdx+0x0],dh
   14000d13a:	and    BYTE PTR [rax],al
   14000d13c:	jae    0x14000d13e
   14000d13e:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000d143:	add    BYTE PTR [rcx+0x0],ch
   14000d146:	outs   dx,BYTE PTR ds:[rsi]
   14000d147:	add    BYTE PTR [rdi+0x0],ah
   14000d14a:	and    BYTE PTR [rax],al
   14000d14c:	push   rbx
   14000d14d:	add    BYTE PTR [rbx+0x0],ah
   14000d150:	jb     0x14000d152
   14000d152:	add    BYTE PTR gs:[rbp+0x0],ah
   14000d156:	outs   dx,BYTE PTR ds:[rsi]
   14000d157:	add    BYTE PTR [rbx+0x0],dl
   14000d15a:	(bad)  
   14000d15b:	add    BYTE PTR [rsi+0x0],dh
   14000d15e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d162:	and    BYTE PTR [rax],al
   14000d164:	push   rsp
   14000d165:	add    BYTE PTR [rcx+0x0],ch
   14000d168:	ins    DWORD PTR es:[rdi],dx
   14000d169:	add    BYTE PTR [rbp+0x0],ah
   14000d16c:	outs   dx,DWORD PTR ds:[rsi]
   14000d16d:	add    BYTE PTR [rbp+0x0],dh
   14000d170:	je     0x14000d172
	...
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	add    BYTE PTR [r10+0x0],r14b
   14000d184:	jb     0x14000d186
   14000d186:	outs   dx,DWORD PTR ds:[rsi]
   14000d187:	add    BYTE PTR [rdx+0x0],dh
   14000d18a:	and    BYTE PTR [rax],al
   14000d18c:	data16 add BYTE PTR [rdx+0x0],dh
   14000d190:	outs   dx,DWORD PTR ds:[rsi]
   14000d191:	add    BYTE PTR [rbp+0x0],ch
   14000d194:	and    BYTE PTR [rax],al
   14000d196:	push   rbp
   14000d197:	add    BYTE PTR [rax+0x0],dh
   14000d19a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000d19e:	je     0x14000d1a0
   14000d1a0:	add    BYTE PTR gs:[rax+0x0],dl
   14000d1a4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d1a8:	push   rbp
   14000d1a9:	add    BYTE PTR [rbx+0x0],dh
   14000d1ac:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d1b0:	push   rbx
   14000d1b1:	add    BYTE PTR [rcx+0x0],bh
   14000d1b4:	jae    0x14000d1b6
   14000d1b6:	je     0x14000d1b8
   14000d1b8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d1bc:	push   rax
   14000d1bd:	add    BYTE PTR [rcx+0x0],ah
   14000d1c0:	jb     0x14000d1c2
   14000d1c2:	(bad)  
   14000d1c3:	add    BYTE PTR [rbp+0x0],ch
   14000d1c6:	(bad)  
   14000d1c7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d1cb:	add    BYTE PTR [rdx+0x0],dh
   14000d1ce:	jae    0x14000d1d0
	...
   14000d1d8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d1dc:	jbe    0x14000d1de
   14000d1de:	(bad)  
   14000d1df:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d1e3:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000d1e7:	add    BYTE PTR [rcx+0x0],al
   14000d1ea:	movsxd eax,DWORD PTR [rax]
   14000d1ec:	je     0x14000d1ee
   14000d1ee:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d1f4:	and    BYTE PTR [rax],al
   14000d1f6:	imul   eax,DWORD PTR [rax],0x64
   14000d1fc:	add    BYTE PTR [rax],al
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	add    BYTE PTR fs:[rbx+0x0],dh
   14000d204:	pop    rsp
   14000d205:	add    BYTE PTR [rbx+0x0],dh
   14000d208:	add    BYTE PTR gs:[rbx+0x0],ah
   14000d20c:	jne    0x14000d20e
   14000d20e:	jb     0x14000d210
   14000d210:	imul   eax,DWORD PTR [rax],0x790074
   14000d216:	pop    rsp
   14000d217:	add    BYTE PTR [rbp+0x0],ah
   14000d21a:	(bad)  
   14000d21b:	add    BYTE PTR [rbx+0x0],dh
   14000d21e:	pop    rsp
   14000d21f:	add    BYTE PTR [rax+0x0],dh
   14000d222:	outs   dx,DWORD PTR ds:[rsi]
   14000d223:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d227:	add    BYTE PTR [rbx+0x0],ah
   14000d22a:	jns    0x14000d22c
   14000d22c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d230:	add    BYTE PTR [ecx+0x0],ch
   14000d234:	outs   dx,BYTE PTR ds:[rsi]
   14000d235:	add    BYTE PTR [rbp+0x0],ah
   14000d238:	pop    rsp
   14000d239:	add    BYTE PTR [rbp+0x0],ah
   14000d23c:	jbe    0x14000d23e
   14000d23e:	(bad)  
   14000d23f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d243:	add    BYTE PTR [rcx+0x0],ch
   14000d246:	(bad)  
   14000d247:	add    BYTE PTR [rax+rax*1+0x69],bl
   14000d24b:	add    BYTE PTR [rsi+0x0],ch
   14000d24e:	(bad)  
   14000d24f:	add    BYTE PTR [rbx+0x0],ah
   14000d252:	je     0x14000d254
   14000d254:	imul   eax,DWORD PTR [rax],0x690076
   14000d25a:	je     0x14000d25c
   14000d25c:	jns    0x14000d25e
   14000d25e:	jo     0x14000d260
   14000d260:	jb     0x14000d262
   14000d262:	outs   dx,DWORD PTR ds:[rsi]
   14000d263:	add    BYTE PTR [rsi+0x0],dh
   14000d266:	imul   eax,DWORD PTR [rax],0x650064
   14000d26c:	jb     0x14000d26e
   14000d26e:	add    BYTE PTR cs:[rbx+0x0],ah
   14000d272:	jo     0x14000d274
   14000d274:	jo     0x14000d276
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	pop    rdi
   14000d279:	add    BYTE PTR [rcx+0x0],al
   14000d27c:	jo     0x14000d27e
   14000d27e:	jo     0x14000d280
   14000d280:	ins    BYTE PTR es:[rdi],dx
   14000d281:	add    BYTE PTR [rcx+0x0],bh
   14000d284:	add    BYTE PTR [r9+0x0],r8b
   14000d288:	push   rbx
   14000d289:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000d28d:	add    BYTE PTR [rbp+0x0],ch
   14000d290:	add    BYTE PTR gs:[rdi+0x0],ch
   14000d294:	jne    0x14000d296
   14000d296:	je     0x14000d298
	...
   14000d2a0:	pop    rdi
   14000d2a1:	add    BYTE PTR [rax+rax*1+0x65],al
   14000d2a5:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000d2a9:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d2ad:	add    BYTE PTR [rax+0x0],dl
   14000d2b0:	outs   dx,DWORD PTR ds:[rsi]
   14000d2b1:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d2b5:	add    BYTE PTR [rbx+0x0],ah
   14000d2b8:	imul   eax,DWORD PTR [rax],0x730065
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	add    BYTE PTR fs:[rbx+0x0],dh
   14000d2c4:	pop    rsp
   14000d2c5:	add    BYTE PTR [rbx+0x0],dh
   14000d2c8:	add    BYTE PTR gs:[rbx+0x0],ah
   14000d2cc:	jne    0x14000d2ce
   14000d2ce:	jb     0x14000d2d0
   14000d2d0:	imul   eax,DWORD PTR [rax],0x790074
   14000d2d6:	pop    rsp
   14000d2d7:	add    BYTE PTR [rbp+0x0],ah
   14000d2da:	(bad)  
   14000d2db:	add    BYTE PTR [rbx+0x0],dh
   14000d2de:	pop    rsp
   14000d2df:	add    BYTE PTR [rax+0x0],dh
   14000d2e2:	outs   dx,DWORD PTR ds:[rsi]
   14000d2e3:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d2e7:	add    BYTE PTR [rbx+0x0],ah
   14000d2ea:	jns    0x14000d2ec
   14000d2ec:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d2f0:	add    BYTE PTR [ecx+0x0],ch
   14000d2f4:	outs   dx,BYTE PTR ds:[rsi]
   14000d2f5:	add    BYTE PTR [rbp+0x0],ah
   14000d2f8:	pop    rsp
   14000d2f9:	add    BYTE PTR [rbp+0x0],ah
   14000d2fc:	jbe    0x14000d2fe
   14000d2fe:	(bad)  
   14000d2ff:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d303:	add    BYTE PTR [rcx+0x0],ch
   14000d306:	(bad)  
   14000d307:	add    BYTE PTR [rax+rax*1+0x6c],bl
   14000d30b:	add    BYTE PTR [rdi+0x0],ch
   14000d30e:	movsxd eax,DWORD PTR [rax]
   14000d310:	imul   eax,DWORD PTR [rax],0x6f
   14000d313:	add    BYTE PTR [rbp+0x0],dh
   14000d316:	je     0x14000d318
   14000d318:	jo     0x14000d31a
   14000d31a:	jb     0x14000d31c
   14000d31c:	outs   dx,DWORD PTR ds:[rsi]
   14000d31d:	add    BYTE PTR [rsi+0x0],dh
   14000d320:	imul   eax,DWORD PTR [rax],0x650064
   14000d326:	jb     0x14000d328
   14000d328:	add    BYTE PTR cs:[rbx+0x0],ah
   14000d32c:	jo     0x14000d32e
   14000d32e:	jo     0x14000d330
	...
   14000d338:	push   rcx
   14000d339:	add    BYTE PTR [rbp+0x0],dh
   14000d33c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d340:	jns    0x14000d342
   14000d342:	add    BYTE PTR [r9+0x0],r8b
   14000d346:	push   rbx
   14000d347:	add    BYTE PTR [rax+0x0],dl
   14000d34a:	jb     0x14000d34c
   14000d34c:	outs   dx,DWORD PTR ds:[rsi]
   14000d34d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d351:	add    BYTE PTR [rbx+0x0],ah
   14000d354:	je     0x14000d356
   14000d356:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d35c:	push   rbx
   14000d35d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d361:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d365:	add    BYTE PTR [rbx+0x0],dh
	...
   14000d370:	add    BYTE PTR fs:[rbx+0x0],dh
   14000d374:	pop    rsp
   14000d375:	add    BYTE PTR [rbx+0x0],dh
   14000d378:	add    BYTE PTR gs:[rbx+0x0],ah
   14000d37c:	jne    0x14000d37e
   14000d37e:	jb     0x14000d380
   14000d380:	imul   eax,DWORD PTR [rax],0x790074
   14000d386:	pop    rsp
   14000d387:	add    BYTE PTR [rbp+0x0],ah
   14000d38a:	(bad)  
   14000d38b:	add    BYTE PTR [rbx+0x0],dh
   14000d38e:	pop    rsp
   14000d38f:	add    BYTE PTR [rax+0x0],dh
   14000d392:	outs   dx,DWORD PTR ds:[rsi]
   14000d393:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d397:	add    BYTE PTR [rbx+0x0],ah
   14000d39a:	jns    0x14000d39c
   14000d39c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d3a0:	add    BYTE PTR [ecx+0x0],ch
   14000d3a4:	outs   dx,BYTE PTR ds:[rsi]
   14000d3a5:	add    BYTE PTR [rbp+0x0],ah
   14000d3a8:	pop    rsp
   14000d3a9:	add    BYTE PTR [rbp+0x0],ah
   14000d3ac:	jbe    0x14000d3ae
   14000d3ae:	(bad)  
   14000d3af:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d3b3:	add    BYTE PTR [rcx+0x0],ch
   14000d3b6:	(bad)  
   14000d3b7:	add    BYTE PTR [rax+rax*1+0x62],bl
   14000d3bb:	add    BYTE PTR [rcx+0x0],ch
   14000d3be:	je     0x14000d3c0
   14000d3c0:	ins    BYTE PTR es:[rdi],dx
   14000d3c1:	add    BYTE PTR [rdi+0x0],ch
   14000d3c4:	movsxd eax,DWORD PTR [rax]
   14000d3c6:	imul   eax,DWORD PTR [rax],0x65
   14000d3c9:	add    BYTE PTR [rdx+0x0],dh
   14000d3cc:	jo     0x14000d3ce
   14000d3ce:	jb     0x14000d3d0
   14000d3d0:	outs   dx,DWORD PTR ds:[rsi]
   14000d3d1:	add    BYTE PTR [rsi+0x0],dh
   14000d3d4:	imul   eax,DWORD PTR [rax],0x650064
   14000d3da:	jb     0x14000d3dc
   14000d3dc:	add    BYTE PTR cs:[rbx+0x0],ah
   14000d3e0:	jo     0x14000d3e2
   14000d3e2:	jo     0x14000d3e4
	...
   14000d3f0:	rex.X add BYTE PTR [rcx+0x0],bpl
   14000d3f4:	je     0x14000d3f6
   14000d3f6:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000d3fa:	movsxd eax,DWORD PTR [rax]
   14000d3fc:	imul   eax,DWORD PTR [rax],0x65
   14000d3ff:	add    BYTE PTR [rdx+0x0],dh
   14000d402:	and    BYTE PTR [rax],al
   14000d404:	push   rbx
   14000d405:	add    BYTE PTR [rbp+0x0],dh
   14000d408:	(bad)  
   14000d409:	add    BYTE PTR [rbx+0x0],dl
   14000d40c:	je     0x14000d40e
   14000d40e:	(bad)  
   14000d40f:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d413:	add    BYTE PTR [rbx+0x0],dh
   14000d416:	and    BYTE PTR [rax],al
   14000d418:	jae    0x14000d41a
   14000d41a:	push   0x75006f00
   14000d41f:	add    BYTE PTR [rax+rax*1+0x64],ch
   14000d423:	add    BYTE PTR [rax],ah
   14000d425:	add    BYTE PTR [rsi+0x0],ch
   14000d428:	outs   dx,DWORD PTR ds:[rsi]
   14000d429:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000d42d:	add    BYTE PTR [rdx+0x0],ah
   14000d430:	add    BYTE PTR gs:[rax],ah
   14000d433:	add    BYTE PTR [rbx+0x0],dl
   14000d436:	pop    rdi
   14000d437:	add    BYTE PTR [rdi+0x0],cl
   14000d43a:	rex.WXB add BYTE PTR [r8],al
   14000d43d:	add    BYTE PTR [rax],al
   14000d43f:	add    BYTE PTR [rcx+0x0],dl
   14000d442:	jne    0x14000d444
   14000d444:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d448:	jns    0x14000d44a
   14000d44a:	rex.X add BYTE PTR [rcx+0x0],bpl
   14000d44e:	je     0x14000d450
   14000d450:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000d454:	movsxd eax,DWORD PTR [rax]
   14000d456:	imul   eax,DWORD PTR [rax],0x65
   14000d459:	add    BYTE PTR [rdx+0x0],dh
   14000d45c:	push   rbx
   14000d45d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d461:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d465:	add    BYTE PTR [rbx+0x0],dh
	...
   14000d470:	push   rcx
   14000d471:	add    BYTE PTR [rbp+0x0],dh
   14000d474:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d478:	jns    0x14000d47a
   14000d47a:	push   rax
   14000d47b:	add    BYTE PTR [rdx+0x0],dh
   14000d47e:	outs   dx,DWORD PTR ds:[rsi]
   14000d47f:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d483:	add    BYTE PTR [rbx+0x0],ah
   14000d486:	je     0x14000d488
   14000d488:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d48e:	push   rbx
   14000d48f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d493:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d497:	add    BYTE PTR [rbx+0x0],dh
   14000d49a:	add    BYTE PTR [rax],al
   14000d49c:	add    BYTE PTR [rax],al
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d4a4:	jbe    0x14000d4a6
   14000d4a6:	(bad)  
   14000d4a7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d4ab:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000d4af:	add    BYTE PTR [rbx],dh
   14000d4b1:	add    BYTE PTR [rdx+0x0],dh
   14000d4b4:	add    BYTE PTR fs:[rax],ah
   14000d4b7:	add    BYTE PTR [rax+0x0],dl
   14000d4ba:	(bad)  
   14000d4bb:	add    BYTE PTR [rdx+0x0],dh
   14000d4be:	je     0x14000d4c0
   14000d4c0:	jns    0x14000d4c2
   14000d4c2:	and    BYTE PTR [rax],al
   14000d4c4:	add    BYTE PTR [r10+0x0],r14b
   14000d4c8:	jb     0x14000d4ca
   14000d4ca:	outs   dx,DWORD PTR ds:[rsi]
   14000d4cb:	add    BYTE PTR [rdx+0x0],dh
   14000d4ce:	and    BYTE PTR [rax],al
   14000d4d0:	push   rbx
   14000d4d1:	add    BYTE PTR [rbp+0x0],dh
   14000d4d4:	(bad)  
   14000d4d5:	add    BYTE PTR [rbx+0x0],dl
   14000d4d8:	je     0x14000d4da
   14000d4da:	(bad)  
   14000d4db:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d4df:	add    BYTE PTR [rbx+0x0],dh
   14000d4e2:	and    BYTE PTR [rax],al
   14000d4e4:	cmp    eax,0x25002000
   14000d4e9:	add    BYTE PTR [rbx],ah
   14000d4eb:	add    BYTE PTR [rax+0x0],bh
   14000d4ee:	add    BYTE PTR [rax],al
   14000d4f0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d4f4:	jbe    0x14000d4f6
   14000d4f6:	(bad)  
   14000d4f7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d4fb:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000d4ff:	add    BYTE PTR [rbx],dh
   14000d501:	add    BYTE PTR [rdx+0x0],dh
   14000d504:	add    BYTE PTR fs:[rax],ah
   14000d507:	add    BYTE PTR [rax+0x0],dl
   14000d50a:	(bad)  
   14000d50b:	add    BYTE PTR [rdx+0x0],dh
   14000d50e:	je     0x14000d510
   14000d510:	jns    0x14000d512
   14000d512:	and    BYTE PTR [rax],al
   14000d514:	add    BYTE PTR [rbp+0x0],r12b
   14000d518:	jbe    0x14000d51a
   14000d51a:	imul   eax,DWORD PTR [rax],0x650063
   14000d520:	and    BYTE PTR [rax],al
   14000d522:	push   rbx
   14000d523:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d527:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d52b:	add    BYTE PTR [rbx+0x0],dh
   14000d52e:	and    BYTE PTR [rax],al
   14000d530:	cmp    eax,0x25002000
   14000d535:	add    BYTE PTR [rbx],ah
   14000d537:	add    BYTE PTR [rax+0x0],bh
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	add    BYTE PTR [rax],al
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	data16 add BYTE PTR [rsi+0x0],dh
   14000d544:	add    BYTE PTR gs:[rcx+0x0],ah
   14000d548:	jo     0x14000d54a
   14000d54a:	imul   eax,DWORD PTR [rax],0x64002e
   14000d550:	ins    BYTE PTR es:[rdi],dx
   14000d551:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d555:	add    BYTE PTR [rax],al
   14000d557:	add    BYTE PTR [rsi+0x0],ch
   14000d55a:	movsxd eax,DWORD PTR [rax]
   14000d55c:	(bad)  
   14000d55d:	add    BYTE PTR [rax+rax*1+0x72],ch
   14000d561:	add    BYTE PTR [rax+0x0],dh
   14000d564:	movsxd eax,DWORD PTR [rax]
	...
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	push   rsp
   14000d571:	add    BYTE PTR [rax+0x0],ch
   14000d574:	imul   eax,DWORD PTR [rax],0x640072
   14000d57a:	push   rax
   14000d57b:	add    BYTE PTR [rcx+0x0],ah
   14000d57e:	jb     0x14000d580
   14000d580:	je     0x14000d582
   14000d582:	jns    0x14000d584
   14000d584:	add    BYTE PTR [r14+0x0],r13b
   14000d588:	movsxd eax,DWORD PTR [rax]
   14000d58a:	jb     0x14000d58c
   14000d58c:	jns    0x14000d58e
   14000d58e:	jo     0x14000d590
   14000d590:	je     0x14000d592
   14000d592:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d598:	push   rax
   14000d599:	add    BYTE PTR [rdx+0x0],dh
   14000d59c:	outs   dx,DWORD PTR ds:[rsi]
   14000d59d:	add    BYTE PTR [rsi+0x0],dh
   14000d5a0:	imul   eax,DWORD PTR [rax],0x650064
   14000d5a6:	jb     0x14000d5a8
   14000d5a8:	push   rax
   14000d5a9:	add    BYTE PTR [rcx+0x0],ah
   14000d5ac:	je     0x14000d5ae
   14000d5ae:	push   0x0
	...
   14000d5bf:	add    BYTE PTR [rbx+0x0],dl
   14000d5c2:	pop    rcx
   14000d5c3:	add    BYTE PTR [rbx+0x0],dl
   14000d5c6:	push   rsp
   14000d5c7:	add    BYTE PTR [rbp+0x0],al
   14000d5ca:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000d5cf:	add    BYTE PTR [rbp+0x0],dh
   14000d5d2:	jb     0x14000d5d4
   14000d5d4:	jb     0x14000d5d6
   14000d5d6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d5da:	je     0x14000d5dc
   14000d5dc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d5e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d5e1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d5e5:	add    BYTE PTR [rdi+0x0],ch
   14000d5e8:	ins    BYTE PTR es:[rdi],dx
   14000d5e9:	add    BYTE PTR [rbx+0x0],dl
   14000d5ec:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000d5f1:	add    BYTE PTR [rbx+0x0],al
   14000d5f4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5f5:	add    BYTE PTR [rsi+0x0],ch
   14000d5f8:	je     0x14000d5fa
   14000d5fa:	jb     0x14000d5fc
   14000d5fc:	outs   dx,DWORD PTR ds:[rsi]
   14000d5fd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000d601:	add    BYTE PTR [rbp+0x0],al
   14000d604:	add    BYTE PTR [r11+0x0],dl
	...
   14000d610:	push   rdx
   14000d611:	add    BYTE PTR [rbp+0x0],ah
   14000d614:	add    BYTE PTR [edi+0x0],al
   14000d618:	add    BYTE PTR gs:[rax+rax*1+0x56],dh
   14000d61d:	add    BYTE PTR [rcx+0x0],ah
   14000d620:	ins    BYTE PTR es:[rdi],dx
   14000d621:	add    BYTE PTR [rbp+0x0],dh
   14000d624:	add    BYTE PTR gs:[rdi+0x0],dl
   14000d628:	sub    BYTE PTR [rax],al
   14000d62a:	push   rsp
   14000d62b:	add    BYTE PTR [rax+0x0],ch
   14000d62e:	imul   eax,DWORD PTR [rax],0x640072
   14000d634:	push   rax
   14000d635:	add    BYTE PTR [rcx+0x0],ah
   14000d638:	jb     0x14000d63a
   14000d63a:	je     0x14000d63c
   14000d63c:	jns    0x14000d63e
   14000d63e:	add    BYTE PTR [r14+0x0],r13b
   14000d642:	movsxd eax,DWORD PTR [rax]
   14000d644:	jb     0x14000d646
   14000d646:	jns    0x14000d648
   14000d648:	jo     0x14000d64a
   14000d64a:	je     0x14000d64c
   14000d64c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d652:	push   rax
   14000d653:	add    BYTE PTR [rdx+0x0],dh
   14000d656:	outs   dx,DWORD PTR ds:[rsi]
   14000d657:	add    BYTE PTR [rsi+0x0],dh
   14000d65a:	imul   eax,DWORD PTR [rax],0x650064
   14000d660:	jb     0x14000d662
   14000d662:	push   rax
   14000d663:	add    BYTE PTR [rcx+0x0],ah
   14000d666:	je     0x14000d668
   14000d668:	push   0x2900
   14000d66d:	add    BYTE PTR [rax],al
   14000d66f:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000d673:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000d677:	add    BYTE PTR [rbp+0x0],ah
   14000d67a:	movsxd eax,DWORD PTR [rax]
   14000d67c:	jne    0x14000d67e
   14000d67e:	jb     0x14000d680
   14000d680:	imul   eax,DWORD PTR [rax],0x790074
   14000d686:	pop    rsp
   14000d687:	add    BYTE PTR [rbp+0x0],ah
   14000d68a:	(bad)  
   14000d68b:	add    BYTE PTR [rbx+0x0],dh
   14000d68e:	pop    rsp
   14000d68f:	add    BYTE PTR [rax+0x0],dh
   14000d692:	outs   dx,DWORD PTR ds:[rsi]
   14000d693:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d697:	add    BYTE PTR [rbx+0x0],ah
   14000d69a:	jns    0x14000d69c
   14000d69c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d6a0:	add    BYTE PTR [ecx+0x0],ch
   14000d6a4:	outs   dx,BYTE PTR ds:[rsi]
   14000d6a5:	add    BYTE PTR [rbp+0x0],ah
   14000d6a8:	pop    rsp
   14000d6a9:	add    BYTE PTR [rbp+0x0],dh
   14000d6ac:	je     0x14000d6ae
   14000d6ae:	imul   eax,DWORD PTR [rax],0x72006c
   14000d6b4:	add    BYTE PTR gs:[rdi+0x0],ah
   14000d6b8:	jae    0x14000d6ba
   14000d6ba:	add    BYTE PTR cs:[rbx+0x0],ah
   14000d6be:	js     0x14000d6c0
   14000d6c0:	js     0x14000d6c2
	...
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	push   rdx
   14000d6d1:	add    BYTE PTR [rbp+0x0],ah
   14000d6d4:	add    BYTE PTR [edi+0x0],cl
   14000d6d8:	jo     0x14000d6da
   14000d6da:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d6de:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000d6e2:	jns    0x14000d6e4
   14000d6e4:	add    BYTE PTR [r8+0x0],r15b
   14000d6e8:	sub    BYTE PTR [rax],al
   14000d6ea:	push   rbx
   14000d6eb:	add    BYTE PTR [rcx+0x0],bl
   14000d6ee:	push   rbx
   14000d6ef:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000d6f3:	add    BYTE PTR [rbp+0x0],cl
   14000d6f6:	pop    rsp
   14000d6f7:	add    BYTE PTR [rbx+0x0],al
   14000d6fa:	jne    0x14000d6fc
   14000d6fc:	jb     0x14000d6fe
   14000d6fe:	jb     0x14000d700
   14000d700:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d704:	je     0x14000d706
   14000d706:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d70a:	outs   dx,BYTE PTR ds:[rsi]
   14000d70b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d70f:	add    BYTE PTR [rdi+0x0],ch
   14000d712:	ins    BYTE PTR es:[rdi],dx
   14000d713:	add    BYTE PTR [rbx+0x0],dl
   14000d716:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000d71b:	add    BYTE PTR [rbx+0x0],al
   14000d71e:	outs   dx,DWORD PTR ds:[rsi]
   14000d71f:	add    BYTE PTR [rsi+0x0],ch
   14000d722:	je     0x14000d724
   14000d724:	jb     0x14000d726
   14000d726:	outs   dx,DWORD PTR ds:[rsi]
   14000d727:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000d72b:	add    BYTE PTR [rbp+0x0],al
   14000d72e:	add    BYTE PTR [r11+0x0],dl
   14000d732:	sub    DWORD PTR [rax],eax
	...
   14000d740:	push   rdx
   14000d741:	add    BYTE PTR [rbp+0x0],ah
   14000d744:	add    BYTE PTR [eax+eax*1+0x65],al
   14000d749:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000d74d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d751:	add    BYTE PTR [rsi+0x0],dl
   14000d754:	(bad)  
   14000d755:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000d759:	add    BYTE PTR [rbp+0x0],ah
   14000d75c:	sub    BYTE PTR [rax],al
   14000d75e:	push   rsp
   14000d75f:	add    BYTE PTR [rax+0x0],ch
   14000d762:	imul   eax,DWORD PTR [rax],0x640072
   14000d768:	push   rax
   14000d769:	add    BYTE PTR [rcx+0x0],ah
   14000d76c:	jb     0x14000d76e
   14000d76e:	je     0x14000d770
   14000d770:	jns    0x14000d772
   14000d772:	add    BYTE PTR [r14+0x0],r13b
   14000d776:	movsxd eax,DWORD PTR [rax]
   14000d778:	jb     0x14000d77a
   14000d77a:	jns    0x14000d77c
   14000d77c:	jo     0x14000d77e
   14000d77e:	je     0x14000d780
   14000d780:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d786:	push   rax
   14000d787:	add    BYTE PTR [rdx+0x0],dh
   14000d78a:	outs   dx,DWORD PTR ds:[rsi]
   14000d78b:	add    BYTE PTR [rsi+0x0],dh
   14000d78e:	imul   eax,DWORD PTR [rax],0x650064
   14000d794:	jb     0x14000d796
   14000d796:	push   rax
   14000d797:	add    BYTE PTR [rcx+0x0],ah
   14000d79a:	je     0x14000d79c
   14000d79c:	push   0x2900
   14000d7a1:	add    BYTE PTR [rax],al
   14000d7a3:	add    BYTE PTR [rax],al
   14000d7a5:	add    BYTE PTR [rax],al
   14000d7a7:	add    BYTE PTR [rbx+0x0],al
   14000d7aa:	jb     0x14000d7ac
   14000d7ac:	add    BYTE PTR gs:[rcx+0x0],ah
   14000d7b0:	je     0x14000d7b2
   14000d7b2:	add    BYTE PTR gs:[rsi+0x0],al
   14000d7b6:	imul   eax,DWORD PTR [rax],0x65006c
   14000d7bc:	sub    BYTE PTR [rax],al
   14000d7be:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   14000d7c3:	add    BYTE PTR [rax+0x0],dl
   14000d7c6:	(bad)  
   14000d7c7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000d7cb:	add    BYTE PTR [rcx],ch
   14000d7cd:	add    BYTE PTR [rax],al
   14000d7cf:	add    BYTE PTR [rsi+0x0],cl
   14000d7d2:	je     0x14000d7d4
   14000d7d4:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000d7d8:	je     0x14000d7da
   14000d7da:	rex.XB add BYTE PTR [r9+0x0],spl
   14000d7de:	movsxd eax,DWORD PTR [rax]
   14000d7e0:	push   0x64006500
   14000d7e5:	add    BYTE PTR [rbx+0x0],dl
   14000d7e8:	imul   eax,DWORD PTR [rax],0x6e0067
   14000d7ee:	imul   eax,DWORD PTR [rax],0x67006e
   14000d7f4:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000d7f8:	jbe    0x14000d7fa
   14000d7fa:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14000d7ff:	add    BYTE PTR [rbx+0x0],dl
   14000d802:	add    BYTE PTR [r15+0x0],r11b
   14000d806:	push   rbx
   14000d807:	add    BYTE PTR [rcx+0x0],cl
   14000d80a:	rex.RXB add BYTE PTR [r14+0x0],r9b
   14000d80e:	rex.WB add BYTE PTR [r14+0x0],cl
   14000d812:	rex.RXB add BYTE PTR [r15+0x0],r11b
   14000d816:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000d81a:	push   rsi
   14000d81b:	add    BYTE PTR [rbp+0x0],al
   14000d81e:	rex.WR add BYTE PTR [rdi+0x0],r11b
   14000d822:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000d826:	rex.XB add BYTE PTR [r10+0x0],dl
   14000d82a:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   14000d82e:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000d832:	push   rsp
   14000d833:	add    BYTE PTR [rax],ah
   14000d835:	add    BYTE PTR [rsi],bh
   14000d837:	add    BYTE PTR [rax],ah
   14000d839:	add    BYTE PTR [rdx+0x0],dh
   14000d83c:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d840:	jne    0x14000d842
   14000d842:	ins    BYTE PTR es:[rdi],dx
   14000d843:	add    BYTE PTR [rax+rax*1+0x53],dh
   14000d847:	add    BYTE PTR [rcx+0x0],ch
   14000d84a:	add    BYTE PTR [esi+0x0],ch
   14000d84e:	imul   eax,DWORD PTR [rax],0x67006e
   14000d854:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000d858:	jbe    0x14000d85a
   14000d85a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14000d85f:	add    BYTE PTR [rdx],al
   14000d861:	add    BYTE PTR [rax],al
   14000d863:	add    BYTE PTR [rax],al
   14000d865:	add    BYTE PTR [rax],al
   14000d867:	add    BYTE PTR [rax+0x0],al
   14000d86a:	or     BYTE PTR [rcx],al
   14000d86c:	adc    BYTE PTR [rax],al
   14000d86e:	add    BYTE PTR [rax],al
   14000d870:	add    BYTE PTR [rax],al
   14000d872:	add    BYTE PTR [rax],al
   14000d874:	or     BYTE PTR [rax],al
   14000d876:	add    BYTE PTR [rax],al
   14000d878:	add    BYTE PTR [rax],al
   14000d87a:	add    BYTE PTR [rax],al
   14000d87c:	add    DWORD PTR [rax],eax
   14000d87e:	or     BYTE PTR [rax],al
   14000d880:	jb     0x14000d882
   14000d882:	add    BYTE PTR [rax],al
   14000d884:	add    BYTE PTR [rax],al
   14000d886:	add    BYTE PTR [rax],al
   14000d888:	movabs al,ds:0xf0000000014000dc
   14000d891:	add    BYTE PTR [rax],al
   14000d893:	add    BYTE PTR [rax],cl
	...
   14000d89d:	add    BYTE PTR [rax],al
   14000d89f:	add    BYTE PTR [rax+0x0],al
   14000d8a2:	or     BYTE PTR [rcx],al
   14000d8a4:	sbb    BYTE PTR [rax],al
   14000d8a6:	add    BYTE PTR [rax],al
   14000d8a8:	add    BYTE PTR [rax],al
   14000d8aa:	add    BYTE PTR [rax],al
   14000d8ac:	sub    BYTE PTR [rax],al
   14000d8ae:	add    BYTE PTR [rax],al
   14000d8b0:	add    BYTE PTR [rax],al
   14000d8b2:	add    BYTE PTR [rax],al
   14000d8b4:	add    al,BYTE PTR [rax]
   14000d8b6:	or     BYTE PTR [rax],al
   14000d8b8:	jb     0x14000d8ba
   14000d8ba:	add    BYTE PTR [rax],al
   14000d8bc:	add    BYTE PTR [rax],al
   14000d8be:	add    BYTE PTR [rax],al
   14000d8c0:	movabs al,ds:0x50000000014000dc
   14000d8c9:	add    DWORD PTR [rax],0x800
   14000d8cf:	add    BYTE PTR [rax+0x14000dc],ah
   14000d8d5:	add    BYTE PTR [rax],al
   14000d8d7:	add    al,dh
   14000d8d9:	add    BYTE PTR [rax],al
   14000d8db:	add    BYTE PTR [rax],dl
   14000d8dd:	add    BYTE PTR [rax],al
   14000d8df:	add    BYTE PTR [rax],al
   14000d8e1:	mov    ecx,0x14000
   14000d8e6:	add    BYTE PTR [rax],al
   14000d8e8:	ret    0xd9
   14000d8eb:	rex add DWORD PTR [rax],eax
   14000d8ee:	add    BYTE PTR [rax],al
   14000d8f0:	jo     0x14000d8cb
   14000d8f2:	add    BYTE PTR [rax+0x1],al
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	add    BYTE PTR [rax+0x14000dc],ch
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    BYTE PTR [rdx],al
   14000d901:	add    BYTE PTR [rax],al
   14000d903:	add    BYTE PTR [rax],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    al,ah
   14000d909:	fild   DWORD PTR [rax]
   14000d90b:	rex add DWORD PTR [rax],eax
   14000d90e:	add    BYTE PTR [rax],al
   14000d910:	and    DWORD PTR [rax],esp
   14000d912:	add    BYTE PTR [rax],al
   14000d914:	add    BYTE PTR [rax],al
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	sbb    ah,0x0
   14000d91b:	rex add DWORD PTR [rax],eax
   14000d91e:	add    BYTE PTR [rax],al
   14000d920:	add    BYTE PTR [rcx+rax*1],bpl
   14000d924:	and    BYTE PTR [rax],al
   14000d926:	add    BYTE PTR [rax],al
   14000d928:	or     BYTE PTR [rax],al
   14000d92a:	add    BYTE PTR [rax],al
   14000d92c:	or     BYTE PTR [rax],al
   14000d92e:	add    BYTE PTR [rax],al
   14000d930:	add    BYTE PTR [rax],al
   14000d932:	add    BYTE PTR [rax],al
   14000d934:	add    eax,DWORD PTR [rax]
   14000d936:	or     BYTE PTR [rax],al
   14000d938:	jb     0x14000d93a
   14000d93a:	add    BYTE PTR [rax],al
   14000d93c:	add    BYTE PTR [rax],al
   14000d93e:	add    BYTE PTR [rax],al
   14000d940:	adc    cl,bl
   14000d942:	add    BYTE PTR [rax+0x1],al
   14000d945:	add    BYTE PTR [rax],al
   14000d947:	add    BYTE PTR [rbx],cl
   14000d949:	add    BYTE PTR [rax],al
   14000d94b:	add    BYTE PTR [rax],cl
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    BYTE PTR [rax+0x14000dc],ah
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	add    al,cl
   14000d959:	add    BYTE PTR [rax],al
   14000d95b:	add    BYTE PTR [rax],dl
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    BYTE PTR [rax+0x14000dc],ah
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    al,dh
   14000d969:	add    BYTE PTR [rax],al
   14000d96b:	add    BYTE PTR [rax],bl
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rax],al
   14000d971:	add    BYTE PTR [rax],dh
   14000d973:	add    BYTE PTR [rax+rax*1+0x78],dl
   14000d977:	add    BYTE PTR [rax-0x3ff3400],ch
   14000d97d:	add    BYTE PTR [rax],ah
   14000d97f:	add    DWORD PTR [rax],esi
   14000d981:	fld    QWORD PTR [rax]
   14000d983:	rex add DWORD PTR [rax],eax
   14000d986:	add    BYTE PTR [rax],al
   14000d988:	push   0x14000d8
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    BYTE PTR [rax-0x28],ch
   14000d992:	add    BYTE PTR [rax+0x1],al
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rax-0x25],dl
   14000d99a:	add    BYTE PTR [rax+0x1],al
   14000d99d:	add    BYTE PTR [rax],al
   14000d99f:	add    BYTE PTR [rax-0x28],ch
   14000d9a2:	add    BYTE PTR [rax+0x1],al
   14000d9a5:	add    BYTE PTR [rax],al
   14000d9a7:	add    BYTE PTR [rax],ah
   14000d9a9:	fld    DWORD PTR [rax]
   14000d9ab:	rex add DWORD PTR [rax],eax
   14000d9ae:	add    BYTE PTR [rax],al
   14000d9b0:	push   0x14000d8
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rax+0x14000d8],ah
   14000d9bd:	add    BYTE PTR [rax],al
   14000d9bf:	add    BYTE PTR [rax],al
   14000d9c1:	add    BYTE PTR [rax],al
   14000d9c3:	rex.W add BYTE PTR [rax],al
   14000d9c6:	add    BYTE PTR [rax],al
   14000d9c8:	add    BYTE PTR [rax],al
   14000d9ca:	and    BYTE PTR [rax],al
   14000d9cc:	xor    al,BYTE PTR [rax]
   14000d9ce:	add    BYTE PTR [rax],al
   14000d9d0:	add    BYTE PTR [rax],al
   14000d9d2:	add    BYTE PTR ds:[rbx+rax*1+0xa],al
   14000d9d7:	add    DWORD PTR [rax],eax
   14000d9d9:	add    BYTE PTR [rax],al
   14000d9db:	add    BYTE PTR [rax],al
   14000d9dd:	add    BYTE PTR [rax],al
   14000d9df:	add    BYTE PTR [rax],dl
   14000d9e1:	and    BYTE PTR [rax],cl
   14000d9e3:	add    BYTE PTR [rdx],al
   14000d9e5:	add    BYTE PTR [rax+0x21],dl
   14000d9e8:	adc    BYTE PTR [rax],al
   14000d9ea:	or     BYTE PTR [rax],al
   14000d9ec:	jo     0x14000d9ee
   14000d9ee:	sbb    BYTE PTR [rax],al
   14000d9f0:	or     BYTE PTR [rax],al
   14000d9f2:	add    BYTE PTR [rax+0x0],cl
   14000d9f5:	add    BYTE PTR [rax],al
   14000d9f7:	add    BYTE PTR [rcx],al
   14000d9f9:	add    BYTE PTR [rax],dl
   14000d9fb:	add    BYTE PTR [rdx],dh
   14000d9fd:	add    BYTE PTR [rax],al
   14000d9ff:	add    BYTE PTR [rax],al
   14000da01:	add    BYTE PTR [rax],cl
   14000da03:	add    BYTE PTR [rcx+rax*1+0xa],al
   14000da07:	add    DWORD PTR [rax],eax
   14000da09:	add    BYTE PTR [rax],al
   14000da0b:	add    BYTE PTR [rax],al
   14000da0d:	add    BYTE PTR [rax],al
   14000da0f:	add    BYTE PTR [rax+0x0],dh
   14000da12:	or     BYTE PTR [rax],al
   14000da14:	or     BYTE PTR [rax],al
   14000da16:	add    BYTE PTR [rax+0x0],cl
   14000da19:	add    BYTE PTR [rax],al
   14000da1b:	add    BYTE PTR [rdx],al
   14000da1d:	add    BYTE PTR [rax],dl
   14000da1f:	add    BYTE PTR [rdx],dh
   14000da21:	add    BYTE PTR [rax],al
   14000da23:	add    BYTE PTR [rax],al
   14000da25:	add    BYTE PTR [rax],cl
   14000da27:	add    BYTE PTR [rcx+rax*1+0xa],al
   14000da2b:	add    DWORD PTR [rax],eax
   14000da2d:	add    BYTE PTR [rax],al
   14000da2f:	add    BYTE PTR [rax],al
   14000da31:	add    BYTE PTR [rax],al
   14000da33:	add    BYTE PTR [rax+0x0],dh
   14000da36:	or     BYTE PTR [rax],al
   14000da38:	or     BYTE PTR [rax],al
   14000da3a:	add    BYTE PTR [rax+0x0],cl
   14000da3d:	add    BYTE PTR [rax],al
   14000da3f:	add    BYTE PTR [rbx],al
   14000da41:	add    BYTE PTR [rax],ah
   14000da43:	add    BYTE PTR [rdx],dh
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    BYTE PTR [rax+rax*1],bl
   14000da4a:	and    al,0x0
   14000da4c:	rex.RXB add r9d,DWORD PTR [r10]
   14000da4f:	(bad)  
   14000da50:	add    DWORD PTR [rax],eax
   14000da52:	add    DWORD PTR [rax],eax
   14000da54:	add    BYTE PTR [rax],al
   14000da56:	add    BYTE PTR [rax],al
   14000da58:	sbb    eax,DWORD PTR [rax]
   14000da5a:	or     BYTE PTR [rax],al
   14000da5c:	or     al,BYTE PTR [rax]
   14000da5e:	pop    rax
   14000da5f:	add    DWORD PTR [rax],edx
   14000da61:	add    BYTE PTR [rax],cl
   14000da63:	add    BYTE PTR [rax+0x0],dh
   14000da66:	sbb    BYTE PTR [rax],al
   14000da68:	or     BYTE PTR [rax],al
   14000da6a:	add    BYTE PTR [rax+0x0],cl
   14000da6d:	add    BYTE PTR [rax],al
   14000da6f:	add    BYTE PTR [rax+rax*1],al
   14000da72:	adc    BYTE PTR [rax],al
   14000da74:	xor    al,BYTE PTR [rax]
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	add    BYTE PTR [rax],al
   14000da7a:	or     BYTE PTR [rax],al
   14000da7c:	add    DWORD PTR [rdx],r9d
   14000da7f:	add    DWORD PTR [rax],eax
   14000da81:	add    BYTE PTR [rax],al
   14000da83:	add    BYTE PTR [rax],al
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	add    BYTE PTR [rax+0x0],dh
   14000da8a:	or     BYTE PTR [rax],al
   14000da8c:	or     BYTE PTR [rax],al
   14000da8e:	add    BYTE PTR [rax+0x0],cl
   14000da91:	add    BYTE PTR [rax],al
   14000da93:	add    BYTE PTR [rip+0x32002000],al        # 0x17200fa99
   14000da99:	add    BYTE PTR [rax],al
   14000da9b:	add    BYTE PTR [rax],cl
   14000da9d:	add    BYTE PTR [rax],cl
   14000da9f:	add    BYTE PTR [rsi+0x3],al
   14000daa2:	or     al,BYTE PTR [rip+0x10000]        # 0x14001daa8
   14000daa8:	add    BYTE PTR [rax],al
   14000daaa:	add    BYTE PTR [rax],al
   14000daac:	or     eax,DWORD PTR [rax]
   14000daae:	or     BYTE PTR [rax],al
   14000dab0:	(bad)  
   14000dab1:	add    BYTE PTR [rax+0x0],cl
   14000dab4:	adc    BYTE PTR [rax],al
   14000dab6:	or     BYTE PTR [rax],al
   14000dab8:	jo     0x14000daba
   14000daba:	sbb    BYTE PTR [rax],al
   14000dabc:	or     BYTE PTR [rax],al
   14000dabe:	add    BYTE PTR [rax+0x0],cl
   14000dac1:	add    BYTE PTR [rax],al
   14000dac3:	add    BYTE PTR [rsi],al
   14000dac5:	add    BYTE PTR [rax],dl
   14000dac7:	add    BYTE PTR [rdx],dh
   14000dac9:	add    BYTE PTR [rax],al
   14000dacb:	add    BYTE PTR [rax],al
   14000dacd:	add    BYTE PTR [rax],cl
   14000dacf:	add    BYTE PTR [rcx+rax*1+0xa],al
   14000dad3:	add    DWORD PTR [rax],eax
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	add    BYTE PTR [rax],al
   14000dad9:	add    BYTE PTR [rax],al
   14000dadb:	add    BYTE PTR [rax+0x0],dh
   14000dade:	or     BYTE PTR [rax],al
   14000dae0:	or     BYTE PTR [rax],al
   14000dae2:	add    BYTE PTR [rax+0x0],cl
   14000dae5:	add    BYTE PTR [rax],al
   14000dae7:	add    BYTE PTR [rdi],al
   14000dae9:	add    BYTE PTR [rax],bl
   14000daeb:	add    BYTE PTR [rdx],dh
   14000daed:	add    BYTE PTR [rax],al
   14000daef:	add    BYTE PTR [rax],al
   14000daf1:	add    BYTE PTR [rax+rax*1],ah
   14000daf4:	add    r9b,BYTE PTR [rdx]
   14000daf7:	add    DWORD PTR [rax],eax
   14000daf9:	add    BYTE PTR [rax],al
   14000dafb:	add    BYTE PTR [rax],al
   14000dafd:	add    BYTE PTR [rax],al
   14000daff:	add    BYTE PTR [rax+0x21],dl
   14000db02:	or     BYTE PTR [rax],al
   14000db04:	or     BYTE PTR [rax],al
   14000db06:	jo     0x14000db08
   14000db08:	adc    BYTE PTR [rax],al
   14000db0a:	or     BYTE PTR [rax],al
	...
   14000db14:	adc    DWORD PTR [rcx*1+0x80c115c],ecx
   14000db1b:	pop    rsp
   14000db1c:	adc    ah,BYTE PTR [rax]
   14000db1e:	add    al,BYTE PTR [rax]
   14000db20:	sbb    eax,DWORD PTR [rax]
   14000db22:	add    DWORD PTR [rax],eax
   14000db24:	sub    DWORD PTR [rax+rdx*1+0x0],edx
   14000db28:	add    BYTE PTR [rax],al
   14000db2a:	add    DWORD PTR [rbx+0x11],ebx
   14000db2d:	or     BYTE PTR [rax],cl
   14000db2f:	pop    rsp
   14000db30:	adc    ah,BYTE PTR [rax]
   14000db32:	add    al,BYTE PTR [rax]
   14000db34:	sbb    eax,DWORD PTR [rax]
   14000db36:	add    DWORD PTR [rax],eax
   14000db38:	sub    DWORD PTR [rax],eax
   14000db3a:	adc    BYTE PTR [rax],al
   14000db3c:	add    BYTE PTR [rax],al
   14000db3e:	add    DWORD PTR [rbx+0x0],ebx
	...
   14000db4d:	add    BYTE PTR [rax],al
   14000db4f:	add    BYTE PTR [rax+0x0],al
   14000db52:	outs   dx,BYTE PTR ds:[rsi]
   14000db53:	add    DWORD PTR [rax],esp
   14000db55:	add    BYTE PTR [rax],al
   14000db57:	add    BYTE PTR [rax],ah
   14000db59:	add    BYTE PTR [rax],al
   14000db5b:	add    BYTE PTR [rax],ch
   14000db5d:	add    BYTE PTR [rax],al
   14000db5f:	add    BYTE PTR [rax],al
   14000db61:	add    BYTE PTR [rax],al
   14000db63:	add    BYTE PTR [rbx],al
   14000db65:	add    BYTE PTR [rax],cl
   14000db67:	add    BYTE PTR [rdx+0x0],dh
   14000db6a:	add    BYTE PTR [rax],al
   14000db6c:	add    BYTE PTR [rax],al
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	movabs al,ds:0x1b000000014000db
   14000db79:	add    BYTE PTR [rax],al
   14000db7b:	add    BYTE PTR [rax],cl
   14000db7d:	add    BYTE PTR [rax],al
   14000db7f:	add    BYTE PTR [rax+0x14000dc],ah
   14000db85:	add    BYTE PTR [rax],al
   14000db87:	add    BYTE PTR [rax+0x1],bl
   14000db8a:	add    BYTE PTR [rax],al
   14000db8c:	adc    BYTE PTR [rax],al
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	movabs al,ds:0xf0000000014000dc
   14000db99:	add    BYTE PTR [rax],al
   14000db9b:	add    BYTE PTR [rax],bl
   14000db9d:	add    BYTE PTR [rax],al
   14000db9f:	add    BYTE PTR [rcx],ah
   14000dba1:	and    BYTE PTR [rax],al
   14000dba3:	add    BYTE PTR [rax],al
   14000dba5:	add    BYTE PTR [rax],al
   14000dba7:	add    al,al
   14000dba9:	fild   DWORD PTR [rax]
   14000dbab:	rex add DWORD PTR [rax],eax
   14000dbae:	add    BYTE PTR [rax],al
   14000dbb0:	add    BYTE PTR [rax],al
   14000dbb2:	add    BYTE PTR [rax],al
   14000dbb4:	add    eax,DWORD PTR [rsi]
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	adc    BYTE PTR [rax],al
   14000dbba:	add    BYTE PTR [rax],al
   14000dbbc:	add    BYTE PTR [rax],al
   14000dbbe:	add    BYTE PTR [rax],al
   14000dbc0:	add    BYTE PTR [r8],al
   14000dbc3:	add    BYTE PTR [rcx],al
   14000dbc5:	add    BYTE PTR [rax],al
   14000dbc7:	add    BYTE PTR [rax],ah
   14000dbc9:	fld    QWORD PTR [rax]
   14000dbcb:	rex add DWORD PTR [rax],eax
   14000dbce:	add    BYTE PTR [rax],al
   14000dbd0:	add    DWORD PTR [rax],eax
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	add    BYTE PTR [rax],al
   14000dbd6:	add    BYTE PTR [rax],al
   14000dbd8:	(bad)  
   14000dbd9:	fadd   DWORD PTR [rax]
   14000dbdb:	rex add DWORD PTR [rax],eax
   14000dbde:	add    BYTE PTR [rax],al
   14000dbe0:	add    al,0x5d
   14000dbe2:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   14000dbe8:	lahf   
   14000dbe9:	call   0x1502bdbf6
   14000dbee:	rex.W (bad) 
   14000dbf0:	add    al,BYTE PTR [rax]
	...
   14000dbfe:	add    BYTE PTR [rax],al
   14000dc00:	ret    0xd9
   14000dc03:	rex add DWORD PTR [rax],eax
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	jo     0x14000dbe3
   14000dc0a:	add    BYTE PTR [rax+0x1],al
   14000dc0d:	add    BYTE PTR [rax],al
   14000dc0f:	add    BYTE PTR [rdx],dl
   14000dc11:	fild   DWORD PTR [rax]
   14000dc13:	rex add DWORD PTR [rax],eax
	...
   14000dc2e:	add    BYTE PTR [rax],al
   14000dc30:	xor    eax,DWORD PTR [rip+0xffffffffbeba7171]        # 0xfebb4da7
   14000dc36:	(bad)  
   14000dc37:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   14000dc3b:	fucomi st,st(7)
   14000dc3d:	pushf  
   14000dc3e:	int3   
   14000dc3f:	add    DWORD PTR ss:[rax],eax
	...
   14000dc56:	add    BYTE PTR [rax],al
   14000dc58:	sbb    cl,0x0
   14000dc5b:	rex add DWORD PTR [rax],eax
	...
   14000dc7e:	add    BYTE PTR [rax],al
   14000dc80:	add    BYTE PTR [r8],al
   14000dc83:	add    BYTE PTR [rcx],al
   14000dc85:	add    BYTE PTR [rax],al
   14000dc87:	add    BYTE PTR [rax+0x14000db],dh
   14000dc8d:	add    BYTE PTR [rax],al
   14000dc8f:	add    BYTE PTR [rcx],al
   14000dc91:	add    BYTE PTR [rax],al
   14000dc93:	add    BYTE PTR [rax],al
   14000dc95:	add    BYTE PTR [rax],al
   14000dc97:	add    BYTE PTR [rax-0x28],ah
   14000dc9a:	add    BYTE PTR [rax+0x1],al
   14000dc9d:	add    BYTE PTR [rax],al
   14000dc9f:	add    BYTE PTR [rip+0x0],al        # 0x14000dca5
   14000dca5:	add    BYTE PTR [rax],al
   14000dca7:	add    BYTE PTR [rbx*2+0x1ceb8a88],al
   14000dcae:	leave  
   14000dcaf:	adc    DWORD PTR [rdi+0x2b0008e8],ebx
   14000dcb5:	adc    BYTE PTR [rax+0x60],cl
   14000dcb8:	add    al,BYTE PTR [rax]
   14000dcba:	add    BYTE PTR [rax],al
   14000dcbc:	add    BYTE PTR [rax],al
   14000dcbe:	add    BYTE PTR [rax],al
   14000dcc0:	(bad)  
   14000dcc1:	add    BYTE PTR [rax],al
   14000dcc3:	add    BYTE PTR [rbx+0x42],al
   14000dcc6:	and    al,0x56
   14000dcc8:	sar    DWORD PTR [rsi],cl
   14000dcca:	adc    eax,DWORD PTR [rax-0x4d]
   14000dccd:	out    0xf,eax
   14000dccf:	enter  0xe309,0x5f
   14000dcd3:	mov    edx,0x1
   14000dcd8:	add    al,0x5d
   14000dcda:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   14000dce0:	lahf   
   14000dce1:	call   0x1502bdcee
   14000dce6:	rex.W (bad) 
   14000dce8:	add    al,BYTE PTR [rax]
	...
   14000dd0e:	add    BYTE PTR [rax],al
   14000dd10:	loopne 0x14000dcea
   14000dd12:	add    BYTE PTR [rax+0x1],al
   14000dd15:	add    BYTE PTR [rax],al
   14000dd17:	add    BYTE PTR [rax],al
   14000dd19:	add    BYTE PTR [rax],al
   14000dd1b:	add    al,BYTE PTR [rax]
   14000dd1d:	add    BYTE PTR [rax],al
   14000dd1f:	add    BYTE PTR [rax],al
   14000dd21:	add    BYTE PTR [rax],al
   14000dd23:	add    BYTE PTR [rax*1+0x8030006],al
   14000dd2a:	add    BYTE PTR [rax],al
   14000dd2c:	adc    BYTE PTR [rax],al
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	add    BYTE PTR [rax],cl
   14000dd33:	add    DWORD PTR [rax],esp
   14000dd35:	add    BYTE PTR [rax],al
   14000dd37:	add    BYTE PTR [rax],al
   14000dd39:	add    BYTE PTR [rax],al
   14000dd3b:	add    BYTE PTR [rax+0x0],cl
   14000dd3e:	add    BYTE PTR [rax],al
   14000dd40:	add    BYTE PTR [rax],al
   14000dd42:	add    BYTE PTR [rax],al
   14000dd44:	add    eax,DWORD PTR [rax]
   14000dd46:	or     BYTE PTR [rax],al
   14000dd48:	jb     0x14000dd4a
   14000dd4a:	add    BYTE PTR [rax],al
   14000dd4c:	add    BYTE PTR [rax],al
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	movabs al,ds:0x50000000014000dc
   14000dd59:	add    DWORD PTR [rax],0x800
   14000dd5f:	add    BYTE PTR [rax+0x14000dc],ah
   14000dd65:	add    BYTE PTR [rax],al
   14000dd67:	add    BYTE PTR [rax-0x7f],dl
   14000dd6a:	add    BYTE PTR [rax],al
   14000dd6c:	adc    BYTE PTR [rax],al
   14000dd6e:	add    BYTE PTR [rax],al
   14000dd70:	movabs al,ds:0xf0000000014000dc
   14000dd79:	add    BYTE PTR [rax],al
   14000dd7b:	add    BYTE PTR [rax],bl
   14000dd7d:	add    BYTE PTR [rax],al
   14000dd7f:	add    BYTE PTR [rdx],dh
   14000dd81:	add    eax,DWORD PTR [rax+rax*1]
   14000dd84:	or     BYTE PTR [rax],al
   14000dd86:	add    BYTE PTR [rax],al
   14000dd88:	adc    dh,bl
   14000dd8a:	add    BYTE PTR [rax+0x1],al
   14000dd8d:	add    BYTE PTR [rax],al
   14000dd8f:	add    al,ah
   14000dd91:	loop   0x14000dd93
   14000dd93:	rex add DWORD PTR [rax],eax
   14000dd96:	add    BYTE PTR [rax],al
   14000dd98:	lock loopne 0x14000dd9b
   14000dd9b:	rex add DWORD PTR [rax],eax
   14000dd9e:	add    BYTE PTR [rax],al
   14000dda0:	rex loope 0x14000dda3
   14000dda3:	rex add DWORD PTR [rax],eax
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	and    DWORD PTR [rcx],esp
   14000ddaa:	add    BYTE PTR [rax],al
   14000ddac:	add    BYTE PTR [rax],al
   14000ddae:	add    BYTE PTR [rax],al
   14000ddb0:	add    dl,ah
   14000ddb2:	add    BYTE PTR [rax+0x1],al
	...
   14000ddbd:	add    BYTE PTR [rax],al
   14000ddbf:	add    BYTE PTR [rip+0x10000307],dh        # 0x15000e0cc
	...
   14000ddd5:	add    BYTE PTR [rax],al
   14000ddd7:	add    BYTE PTR [rax+0x14000dd],ch
   14000dddd:	add    BYTE PTR [rax],al
   14000dddf:	add    BYTE PTR [rip+0x0],al        # 0x14000dde5
   14000dde5:	add    BYTE PTR [rax],al
   14000dde7:	add    BYTE PTR [rax+0x400],dl
   14000dded:	add    BYTE PTR [rax],al
   14000ddef:	add    BYTE PTR [rax+rax*1],dl
   14000ddf2:	add    BYTE PTR [rax],al
   14000ddf4:	add    BYTE PTR [rax],al
   14000ddf6:	add    BYTE PTR [rax],al
   14000ddf8:	xchg   ebx,eax
   14000ddf9:	add    BYTE PTR [rax],al
   14000ddfb:	add    BYTE PTR [rax],al
   14000ddfd:	add    BYTE PTR [rax],al
   14000ddff:	add    BYTE PTR [rcx],al
   14000de01:	add    BYTE PTR [rax],al
   14000de03:	add    BYTE PTR [rbx],al
   14000de05:	add    DWORD PTR [rax],eax
   14000de07:	add    BYTE PTR [rcx],al
   14000de09:	add    BYTE PTR [rax],al
   14000de0b:	add    BYTE PTR [rax],al
   14000de0d:	add    BYTE PTR [rax],al
   14000de0f:	add    BYTE PTR [rcx+0x3],al
   14000de12:	add    BYTE PTR [rax],al
   14000de14:	add    al,0x0
   14000de16:	add    BYTE PTR [rax],al
   14000de18:	add    dh,bl
   14000de1a:	add    BYTE PTR [rax+0x1],al
   14000de1d:	add    BYTE PTR [rax],al
   14000de1f:	add    BYTE PTR [rax+rax*1],al
   14000de22:	add    BYTE PTR [rax],al
   14000de24:	add    BYTE PTR [rax],al
   14000de26:	add    BYTE PTR [rax],al
   14000de28:	movabs al,ds:0xa0000000014000e2
   14000de31:	mov    ecx,0x14000
   14000de36:	add    BYTE PTR [rax],al
   14000de38:	rcr    dh,cl
   14000de3a:	add    BYTE PTR [rax+0x1],al
   14000de3d:	add    BYTE PTR [rax],al
   14000de3f:	add    BYTE PTR [rdx+riz*8+0x14000],ah
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	push   rax
   14000de49:	loop   0x14000de4b
   14000de4b:	rex add DWORD PTR [rax],eax
   14000de4e:	add    BYTE PTR [rax],al
   14000de50:	add    al,BYTE PTR [rax]
   14000de52:	add    BYTE PTR [rax],al
   14000de54:	add    BYTE PTR [rax],al
   14000de56:	add    BYTE PTR [rax],al
   14000de58:	push   rax
   14000de59:	loopne 0x14000de5b
   14000de5b:	rex add DWORD PTR [rax],eax
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	(bad)  
   14000de61:	add    BYTE PTR [rax],al
   14000de63:	add    ah,ah
   14000de65:	jbe    0x14000debc
   14000de67:	rcl    dl,cl
   14000de69:	add    bh,dh
   14000de6b:	rex.XB cwde 
   14000de6d:	stc    
   14000de6e:	mov    ah,0xc0
   14000de70:	jb     0x14000deb3
   14000de72:	pop    rax
   14000de73:	stc    
   14000de74:	add    BYTE PTR [rax],al
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	add    al,0x5d
   14000de7a:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   14000de80:	lahf   
   14000de81:	call   0x1502bde8e
   14000de86:	rex.W (bad) 
   14000de88:	add    al,BYTE PTR [rax]
	...
   14000deae:	add    BYTE PTR [rax],al
   14000deb0:	xor    dh,bl
   14000deb2:	add    BYTE PTR [rax+0x1],al
   14000deb5:	add    BYTE PTR [rax],al
   14000deb7:	add    BYTE PTR [rax],al
   14000deb9:	add    BYTE PTR [rax],al
   14000debb:	add    al,BYTE PTR [rax]
   14000debd:	add    BYTE PTR [rax],al
   14000debf:	add    BYTE PTR [rcx],al
   14000dec1:	add    BYTE PTR [rax],al
   14000dec3:	add    BYTE PTR [rbx],al
   14000dec5:	(bad)  
	...
   14000ded2:	add    BYTE PTR [rax+0x0],cl
   14000ded5:	add    BYTE PTR [rax],al
   14000ded7:	add    BYTE PTR [rax],al
   14000ded9:	add    BYTE PTR [rax],dh
   14000dedb:	add    BYTE PTR [rdx],dh
   14000dedd:	add    BYTE PTR [rax],al
   14000dedf:	add    BYTE PTR [rax],bl
   14000dee1:	add    BYTE PTR [rax],cl
   14000dee3:	add    BYTE PTR [rsi+0x5],al
   14000dee6:	or     al,BYTE PTR [rbp+0x10000]
   14000deec:	add    BYTE PTR [rax],al
   14000deee:	add    BYTE PTR [rax],al
   14000def0:	or     eax,DWORD PTR [rcx]
   14000def2:	or     BYTE PTR [rax],al
   14000def4:	sbb    BYTE PTR [rax],al
   14000def6:	rex.W add BYTE PTR [rax],dl
   14000def9:	add    BYTE PTR [rax],cl
   14000defb:	add    BYTE PTR [rax+0x0],cl
   14000defe:	sbb    BYTE PTR [rax],al
   14000df00:	or     BYTE PTR [rax],al
   14000df02:	rex.W add BYTE PTR [rax],spl
   14000df05:	add    BYTE PTR [rax],cl
   14000df07:	add    BYTE PTR [rax+0x0],dh
   14000df0a:	sub    BYTE PTR [rax],al
   14000df0c:	or     BYTE PTR [rax],al
   14000df0e:	add    BYTE PTR [rax+0x0],cl
   14000df11:	add    BYTE PTR [rax],al
   14000df13:	add    BYTE PTR [rcx],al
   14000df15:	add    BYTE PTR [rax],ah
   14000df17:	add    BYTE PTR [rdx],dh
   14000df19:	add    BYTE PTR [rax],al
   14000df1b:	add    BYTE PTR [rax],al
   14000df1d:	add    BYTE PTR [rax+0x0],bl
   14000df20:	add    r9d,DWORD PTR [rdx]
   14000df23:	add    DWORD PTR [rax],eax
   14000df25:	add    BYTE PTR [rax],al
   14000df27:	add    BYTE PTR [rax],al
   14000df29:	add    BYTE PTR [rax],al
   14000df2b:	add    BYTE PTR [rdx],dl
   14000df2d:	and    DWORD PTR [rax],ecx
   14000df2f:	add    BYTE PTR [rsi],ch
   14000df31:	add    BYTE PTR [rdx],dl
   14000df33:	and    DWORD PTR [rax],edx
   14000df35:	add    BYTE PTR [rsi],ch
   14000df37:	add    BYTE PTR [rax+0x0],dh
   14000df3a:	sbb    BYTE PTR [rax],al
   14000df3c:	or     BYTE PTR [rax],al
   14000df3e:	add    BYTE PTR [rax+0x0],cl
   14000df41:	add    BYTE PTR [rax],al
   14000df43:	add    BYTE PTR [rdx],al
   14000df45:	add    BYTE PTR [rax],ch
   14000df47:	add    BYTE PTR [rdx],dh
   14000df49:	add    BYTE PTR [rax],al
   14000df4b:	add    BYTE PTR [rax],al
   14000df4d:	add    BYTE PTR [rax+0x0],bl
   14000df50:	rex.RB add al,0xa
   14000df53:	add    eax,DWORD PTR [rcx]
   14000df55:	add    BYTE PTR [rax],al
   14000df57:	add    BYTE PTR [rax],al
   14000df59:	add    BYTE PTR [rax],al
   14000df5b:	add    BYTE PTR [rdx],dl
   14000df5d:	and    DWORD PTR [rax],ecx
   14000df5f:	add    BYTE PTR [rsi],ch
   14000df61:	add    BYTE PTR [rdx],dl
   14000df63:	and    DWORD PTR [rax],edx
   14000df65:	add    BYTE PTR [rsi],ch
   14000df67:	add    BYTE PTR [rbx],dl
   14000df69:	sbb    BYTE PTR [r8],al
   14000df6c:	mov    al,BYTE PTR [rax]
   14000df6e:	jo     0x14000df70
   14000df70:	and    BYTE PTR [rax],al
   14000df72:	or     BYTE PTR [rax],al
	...
   14000df84:	adc    DWORD PTR [rax],eax
   14000df86:	adc    al,0x0
   14000df88:	sbb    al,0x1
   14000df8a:	add    al,BYTE PTR [rax]
   14000df8c:	(bad)  
   14000df8d:	push   rbp
   14000df8e:	add    al,BYTE PTR [rax]
   14000df90:	add    DWORD PTR [rax],eax
   14000df92:	(bad)  
   14000df93:	push   rbp
   14000df94:	add    BYTE PTR [rax],al
   14000df96:	add    DWORD PTR [rax],eax
   14000df98:	(bad)  
   14000df99:	pop    rbx
   14000df9a:	sbb    al,BYTE PTR [rbx]
   14000df9c:	adc    BYTE PTR [rax],al
   14000df9e:	add    BYTE PTR [rax],al
   14000dfa0:	or     BYTE PTR [rax],al
   14000dfa2:	(bad)  
   14000dfa3:	(bad)  
   14000dfa4:	rex
   14000dfa5:	ss pop rsp
   14000dfa7:	pop    rbx
   14000dfa8:	adc    ah,BYTE PTR [rax]
   14000dfaa:	fdivp  st(7),st
   14000dfac:	adc    DWORD PTR [rdx+rax*1],eax
   14000dfaf:	add    BYTE PTR [rip+0x6000401],dl        # 0x14600e3b6
   14000dfb5:	(bad)  
   14000dfb6:	pop    rsp
   14000dfb7:	pop    rbx
   14000dfb8:	adc    DWORD PTR [rdx+rdx*2],eax
   14000dfbb:	add    BYTE PTR [rip+0x2000600],bl        # 0x14200e5c1
   14000dfc1:	pop    rbx
   14000dfc2:	adc    eax,0x4c000600
   14000dfc7:	add    ah,dh
   14000dfc9:	call   FWORD PTR [rbx+rbx*2+0x1b]
   14000dfcd:	add    eax,DWORD PTR [rax+rax*1]
   14000dfd0:	add    al,0x0
   14000dfd2:	stc    
   14000dfd3:	inc    DWORD PTR [rcx]
   14000dfd5:	add    BYTE PTR [rax],cl
   14000dfd7:	pop    rbx
   14000dfd8:	(bad)  
   14000dfd9:	add    ecx,DWORD PTR [rax]
   14000dfdb:	add    al,dh
   14000dfdd:	inc    DWORD PTR [rdx]
   14000dfdf:	add    cl,BYTE PTR [rax+rax*1-0x20]
   14000dfe3:	call   FWORD PTR [rbx+rbx*2+0x1a]
   14000dfe7:	add    edx,DWORD PTR [rax]
   14000dfe9:	add    BYTE PTR [rax],al
   14000dfeb:	add    BYTE PTR [rsi],al
   14000dfed:	add    BYTE PTR [rsi],dh
   14000dfef:	or     BYTE PTR [rax],cl
   14000dff1:	pop    rbx
   14000dff2:	adc    al,BYTE PTR [rax]
   14000dff4:	in     al,0xff
   14000dff6:	and    DWORD PTR [rbx],eax
   14000dff8:	add    BYTE PTR [rax],al
   14000dffa:	sbb    DWORD PTR [rax],eax
   14000dffc:	add    BYTE PTR [rax],al
   14000dffe:	add    DWORD PTR [rax],eax
   14000e000:	(bad)  
   14000e001:	(bad)  
   14000e002:	(bad)  
   14000e003:	inc    DWORD PTR [rax]
   14000e005:	add    BYTE PTR [rax+rax*1-0x22],cl
   14000e009:	call   FWORD PTR [rbx+rbx*2+0x1a]
   14000e00d:	add    edx,DWORD PTR [rax]
   14000e00f:	add    BYTE PTR [rax],al
   14000e011:	add    BYTE PTR [rsi],al
   14000e013:	add    BYTE PTR [rax],cl
   14000e015:	rex
   14000e016:	ss pop rbx
   14000e018:	adc    ah,BYTE PTR [rcx]
   14000e01a:	fdiv   st(7),st
   14000e01c:	add    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	xor    DWORD PTR [rdi],eax
   14000e022:	add    DWORD PTR [rax],eax
   14000e024:	adc    BYTE PTR [rax],al
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	add    BYTE PTR [rax],0x0
	...
   14000e037:	add    BYTE PTR [rcx],ah
   14000e039:	add    BYTE PTR [rax],al
   14000e03b:	add    BYTE PTR [rax],al
   14000e03d:	add    BYTE PTR [rax],al
   14000e03f:	add    BYTE PTR [rax+0x14000dd],al
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    BYTE PTR [rbx+0x0],dl
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rbx*2+0x1ceb8a88],al
   14000e056:	leave  
   14000e057:	adc    DWORD PTR [rdi+0x2b0008e8],ebx
   14000e05d:	adc    BYTE PTR [rax+0x60],cl
   14000e060:	add    al,BYTE PTR [rax]
	...
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	rcr    dh,cl
   14000e072:	add    BYTE PTR [rax+0x1],al
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    BYTE PTR [rdx+riz*8+0x14000],ah
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	(bad)  
   14000e081:	fild   WORD PTR [rax]
   14000e083:	rex add DWORD PTR [rax],eax
	...
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	xor    eax,DWORD PTR [rip+0xffffffffbeba7171]        # 0xfebb5217
   14000e0a6:	(bad)  
   14000e0a7:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   14000e0ab:	fucomi st,st(7)
   14000e0ad:	pushf  
   14000e0ae:	int3   
   14000e0af:	add    DWORD PTR ss:[rax],eax
	...
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	nop
   14000e0c9:	fld    QWORD PTR [rax]
   14000e0cb:	rex add DWORD PTR [rax],eax
	...
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	add    BYTE PTR [rax],cl
   14000e0f3:	add    DWORD PTR [rax],esp
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rax],al
   14000e0f9:	add    BYTE PTR [rax],al
   14000e0fb:	add    BYTE PTR [rax+0x0],ah
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	add    BYTE PTR [rax],al
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	add    eax,DWORD PTR [rax]
   14000e106:	or     BYTE PTR [rax],al
   14000e108:	jb     0x14000e10a
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	add    BYTE PTR [rax],al
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	shl    dl,1
   14000e112:	add    BYTE PTR [rax+0x1],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rdx],dl
   14000e119:	add    DWORD PTR [rax],0x800
   14000e11f:	add    al,dl
   14000e121:	loop   0x14000e123
   14000e123:	rex add DWORD PTR [rax],eax
   14000e126:	add    BYTE PTR [rax],al
   14000e128:	adc    al,BYTE PTR [rcx+0x100000]
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	movabs al,ds:0xf0000000014000e2
   14000e139:	add    BYTE PTR [rax],al
   14000e13b:	add    BYTE PTR [rax],bl
   14000e13d:	add    BYTE PTR [rax],al
   14000e13f:	add    BYTE PTR [rax+0x0],al
   14000e142:	rex.WX add QWORD PTR [rax],rbp
   14000e145:	add    BYTE PTR [rax],al
   14000e147:	add    BYTE PTR [rax],al
   14000e149:	add    BYTE PTR [rax],al
   14000e14b:	add    BYTE PTR [rax+0x0],ah
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	add    BYTE PTR [rax],al
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	add    al,0x0
   14000e156:	or     BYTE PTR [rax],al
   14000e158:	jb     0x14000e15a
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	add    BYTE PTR [rax],al
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	shl    dl,1
   14000e162:	add    BYTE PTR [rax+0x1],al
   14000e165:	add    BYTE PTR [rax],al
   14000e167:	add    BYTE PTR [rdx],dl
   14000e169:	add    DWORD PTR [rax],0x800
   14000e16f:	add    al,dl
   14000e171:	loop   0x14000e173
   14000e173:	rex add DWORD PTR [rax],eax
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	adc    al,BYTE PTR [rcx+0x100000]
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	rcr    ch,0x0
   14000e183:	rex add DWORD PTR [rax],eax
   14000e186:	add    BYTE PTR [rax],al
   14000e188:	adc    eax,DWORD PTR [rcx+0x180000]
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	movabs al,ds:0xf0000000014000e2
   14000e199:	add    BYTE PTR [rax],al
   14000e19b:	add    BYTE PTR [rax],ah
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rip+0x10000307],dh        # 0x15000e4ac
	...
   14000e1b5:	add    BYTE PTR [rax],al
   14000e1b7:	add    al,ch
   14000e1b9:	loope  0x14000e1bb
   14000e1bb:	rex add DWORD PTR [rax],eax
   14000e1be:	add    BYTE PTR [rax],al
   14000e1c0:	add    al,0x0
   14000e1c2:	add    BYTE PTR [rax],al
   14000e1c4:	add    BYTE PTR [rax],al
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	add    al,0x0
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	add    BYTE PTR [rax],al
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	nop
   14000e1d1:	add    BYTE PTR [rax+rax*1],al
   14000e1d4:	add    BYTE PTR [rax],al
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	adc    al,0x0
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	add    BYTE PTR [rax],al
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	xchg   ebx,eax
   14000e1e1:	add    BYTE PTR [rax],al
   14000e1e3:	add    BYTE PTR [rax],al
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    BYTE PTR [rcx],ah
   14000e1e9:	and    BYTE PTR [rax],al
   14000e1eb:	add    BYTE PTR [rax],al
   14000e1ed:	add    BYTE PTR [rax],al
   14000e1ef:	add    BYTE PTR [rax-0x1e],ch
   14000e1f2:	add    BYTE PTR [rax+0x1],al
	...
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rcx+0x7],al
   14000e202:	add    DWORD PTR [rax],eax
   14000e204:	adc    BYTE PTR [rax],al
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	rcr    dh,0x0
   14000e20b:	rex add DWORD PTR [rax],eax
   14000e20e:	add    BYTE PTR [rax],al
   14000e210:	(bad)  
   14000e211:	add    DWORD PTR [rax],eax
   14000e213:	add    BYTE PTR [rax],dl
   14000e215:	add    BYTE PTR [rax],al
   14000e217:	add    BYTE PTR [rax],al
   14000e219:	add    BYTE PTR [rax],al
   14000e21b:	add    BYTE PTR [rcx],al
	...
   14000e225:	add    BYTE PTR [rax],al
   14000e227:	add    BYTE PTR [rcx],ah
   14000e229:	add    BYTE PTR [rax],al
   14000e22b:	add    BYTE PTR [rax],al
   14000e22d:	add    BYTE PTR [rax],al
   14000e22f:	add    BYTE PTR [rax+0x14000dd],al
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	add    BYTE PTR [rbx+0x0],dl
   14000e23d:	add    BYTE PTR [rax],al
   14000e23f:	add    BYTE PTR [rax],dl
   14000e241:	add    BYTE PTR [rax],al
   14000e243:	add    BYTE PTR [rax],al
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    BYTE PTR [rax],ah
   14000e249:	loopne 0x14000e24b
   14000e24b:	rex add DWORD PTR [rax],eax
   14000e24e:	add    BYTE PTR [rax],al
   14000e250:	add    al,0x5d
   14000e252:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   14000e258:	lahf   
   14000e259:	call   0x1502be266
   14000e25e:	rex.W (bad) 
   14000e260:	add    al,BYTE PTR [rax]
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	add    BYTE PTR [rax],al
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	rex.XB add DWORD PTR [r8],eax
   14000e26b:	add    BYTE PTR [rdx],al
   14000e26d:	add    BYTE PTR [rax],al
   14000e26f:	add    BYTE PTR [rax+0x14000e2],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    BYTE PTR [rax+0x14000e2],dh
   14000e27d:	add    BYTE PTR [rax],al
   14000e27f:	add    BYTE PTR [rcx],al
   14000e281:	add    BYTE PTR [rax],al
   14000e283:	add    BYTE PTR [rcx+rdx*1],al
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	add    eax,DWORD PTR [rbx]
   14000e28a:	add    BYTE PTR [rax],al
   14000e28c:	add    al,BYTE PTR [rax]
   14000e28e:	add    BYTE PTR [rax],al
   14000e290:	add    al,BYTE PTR [rdi]
   14000e292:	add    BYTE PTR [rax],al
   14000e294:	add    BYTE PTR [rax],al
   14000e296:	add    BYTE PTR [rax],al
   14000e298:	add    al,BYTE PTR [rax]
   14000e29a:	add    BYTE PTR [rax],al
   14000e29c:	add    BYTE PTR [rax],al
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	add    eax,0x0
   14000e2a5:	add    BYTE PTR [rax+rax*1],bh
   14000e2a8:	ins    BYTE PTR es:[rdi],dx
   14000e2a9:	add    BYTE PTR [rax],al
   14000e2ab:	add    BYTE PTR [rax],al
   14000e2ad:	add    BYTE PTR [rax],al
   14000e2af:	add    BYTE PTR [rcx],al
   14000e2b1:	add    BYTE PTR [rax],al
   14000e2b3:	add    BYTE PTR [rcx+rdx*1],al
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	add    eax,DWORD PTR [rbx]
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	add    BYTE PTR [rax],al
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	add    al,BYTE PTR [rdi]
   14000e2c2:	add    BYTE PTR [rax],al
   14000e2c4:	add    BYTE PTR [rax],al
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	add    al,BYTE PTR [rax]
   14000e2ca:	add    BYTE PTR [rax],al
   14000e2cc:	add    BYTE PTR [rax],al
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	xor    BYTE PTR [rcx],al
   14000e2d2:	add    BYTE PTR [rax],al
   14000e2d4:	add    al,0x0
	...
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	add    BYTE PTR [rbx+rax*1],bpl
   14000e2e4:	xor    BYTE PTR [rax],al
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	sbb    BYTE PTR [rax],al
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	or     BYTE PTR [rax],al
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	add    BYTE PTR [rax],al
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	add    eax,0x72000800
   14000e2f9:	add    BYTE PTR [rax],al
   14000e2fb:	add    BYTE PTR [rax],al
   14000e2fd:	add    BYTE PTR [rax],al
   14000e2ff:	add    BYTE PTR [rax+0x14000e1],ah
   14000e305:	add    BYTE PTR [rax],al
   14000e307:	add    BYTE PTR [rbx],cl
   14000e309:	add    DWORD PTR [rax],eax
   14000e30b:	add    BYTE PTR [rax],cl
   14000e30d:	add    BYTE PTR [rax],al
   14000e30f:	add    BYTE PTR [rax+0x14000e2],ah
   14000e315:	add    BYTE PTR [rax],al
   14000e317:	add    al,cl
   14000e319:	add    BYTE PTR [rax],al
   14000e31b:	add    BYTE PTR [rax],dl
   14000e31d:	add    BYTE PTR [rax],al
   14000e31f:	add    BYTE PTR [rax+0x14000e2],ah
   14000e325:	add    BYTE PTR [rax],al
   14000e327:	add    al,cl
   14000e329:	add    BYTE PTR [rax],al
   14000e32b:	add    BYTE PTR [rax],bl
   14000e32d:	add    BYTE PTR [rax],al
   14000e32f:	add    BYTE PTR [rax+0x14000e2],ah
   14000e335:	add    BYTE PTR [rax],al
   14000e337:	add    al,cl
   14000e339:	add    BYTE PTR [rax],al
   14000e33b:	add    BYTE PTR [rax],ah
   14000e33d:	add    BYTE PTR [rax],al
   14000e33f:	add    BYTE PTR [rax+0x14000e2],ah
   14000e345:	add    BYTE PTR [rax],al
   14000e347:	add    al,dh
   14000e349:	add    BYTE PTR [rax],al
   14000e34b:	add    BYTE PTR [rax],ch
   14000e34d:	add    BYTE PTR [rax],al
   14000e34f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000e353:	add    BYTE PTR [rsi],ch
   14000e355:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000e359:	add    BYTE PTR [rax],al
   14000e35b:	add    BYTE PTR [rax],al
   14000e35d:	add    BYTE PTR [rax],al
   14000e35f:	add    BYTE PTR [rsi+0x76],al
   14000e362:	gs rex.RXB
   14000e364:	gs je  0x14000e3ba
   14000e367:	je     0x14000e3ca
   14000e369:	je     0x14000e3e0
   14000e36b:	jae    0x14000e3c4
	...
   14000e375:	add    BYTE PTR [rax],al
   14000e377:	add    BYTE PTR [rax],0x0
   14000e37a:	add    BYTE PTR [rax],al
   14000e37c:	add    BYTE PTR [rax],al
   14000e37e:	add    BYTE PTR [rax+0x0],al
   14000e384:	add    BYTE PTR [rax],al
   14000e386:	add    BYTE PTR [rax+0x0],al
   14000e38c:	add    BYTE PTR [rax],al
   14000e38e:	add    BYTE PTR [rax+0x0],al
   14000e391:	add    BYTE PTR [rax],al
   14000e393:	add    BYTE PTR [rax],al
   14000e395:	add    BYTE PTR [rax],al
   14000e397:	add    BYTE PTR [rax],al
   14000e39a:	add    BYTE PTR [rax],al
   14000e39c:	add    BYTE PTR [rax],al
   14000e39e:	add    BYTE PTR [rax+0x0],al
   14000e3a1:	add    BYTE PTR [rax],al
   14000e3a3:	add    BYTE PTR [rax],al
   14000e3a5:	add    BYTE PTR [rax],al
   14000e3a7:	and    BYTE PTR [rax],al
   14000e3a9:	add    BYTE PTR [rax],al
   14000e3ab:	add    BYTE PTR [rax],al
   14000e3ad:	add    BYTE PTR [rax],al
   14000e3af:	adc    BYTE PTR [rbx+rax*1],al
   14000e3b2:	add    al,BYTE PTR [rbx+rax*1]
   14000e3b5:	add    al,BYTE PTR [rdx+rax*1]
   14000e3b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e3b9:	sbb    al,0x39
   14000e3bb:	ret    0xe675
   14000e3be:	cli    
   14000e3bf:	xchg   ebx,eax
   14000e3c0:	adc    al,bl
   14000e3c2:	adc    al,0x91
   14000e3c4:	adc    dh,BYTE PTR [rdi+0x423071b6]
   14000e3ca:	addr32 pop rbp
   14000e3cc:	lahf   
   14000e3cd:	retf   0x11da
   14000e3d0:	test   eax,0x2000084d
   14000e3d5:	or     al,0x9a
   14000e3d7:	add    WORD PTR [rcx],ax
   14000e3da:	add    BYTE PTR [rax],al
   14000e3dc:	add    BYTE PTR [rax],al
   14000e3de:	add    BYTE PTR [rip+0x12],al        # 0x14000e3f6
   14000e3e4:	add    BYTE PTR [rax],al
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	add    al,0x0
   14000e3ea:	add    BYTE PTR [rax],al
   14000e3ec:	add    DWORD PTR [rax],eax
   14000e3ee:	add    BYTE PTR [rax],al
   14000e3f0:	add    DWORD PTR [rax],eax
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	add    eax,DWORD PTR [rax]
	...
   14000e406:	add    BYTE PTR [rax],al
   14000e408:	fsub   st,st(3)
   14000e40a:	add    BYTE PTR [rax+0x1],al
	...
   14000e415:	add    BYTE PTR [rax],al
   14000e417:	add    BYTE PTR [rcx],al
	...
   14000e425:	add    BYTE PTR [rax],al
   14000e427:	add    BYTE PTR [rsi],al
   14000e429:	add    BYTE PTR [rax],al
   14000e42b:	add    BYTE PTR [rdx],cl
	...
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    al,ch
   14000e439:	jrcxz  0x14000e43b
   14000e43b:	rex add DWORD PTR [rax],eax
	...
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	rol    BYTE PTR [rax],0x0
   14000e44b:	add    BYTE PTR [rax],al
   14000e44d:	add    BYTE PTR [rax],al
   14000e44f:	rex.RX add DWORD PTR [rax],r8d
   14000e452:	add    BYTE PTR [rax],al
   14000e454:	add    BYTE PTR [rax],al
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	rol    BYTE PTR [rax],0x0
   14000e45b:	add    BYTE PTR [rax],al
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	rex.RX add BYTE PTR [rax],r8b
	...
   14000e472:	add    BYTE PTR [rax],al
   14000e474:	xchg   esi,eax
   14000e475:	cmp    DWORD PTR [rdi+0x55],ebx
   14000e47b:	add    BYTE PTR [rdx],al
   14000e47d:	add    BYTE PTR [rax],al
   14000e47f:	add    BYTE PTR [rdi],ah
   14000e481:	add    BYTE PTR [rax],al
   14000e483:	add    BYTE PTR [rax-0x1b],dh
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	jo     0x14000e449
   14000e48a:	add    BYTE PTR [rax],al
   14000e48c:	add    BYTE PTR [rax],al
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	xchg   esi,eax
   14000e491:	cmp    DWORD PTR [rdi+0x55],ebx
   14000e497:	add    BYTE PTR [rip+0xffffffffa4000000],cl        # 0xe400e49d
   14000e49d:	add    al,BYTE PTR [rax]
   14000e49f:	add    BYTE PTR [rbp+riz*8-0x40540000],ch
	...
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	movabs al,ds:0x0
	...
   14000e525:	add    BYTE PTR [rax],al
   14000e527:	add    BYTE PTR [rax],cl
   14000e529:	adc    BYTE PTR [rcx],al
   14000e52b:	rex add DWORD PTR [rax],eax
	...
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	js     0x14000e4f7
   14000e542:	add    BYTE PTR [rax+0x1],al
   14000e545:	add    BYTE PTR [rax],al
   14000e547:	add    BYTE PTR [rax+0x14000b5],al
   14000e54d:	add    BYTE PTR [rax],al
   14000e54f:	add    al,dl
   14000e551:	mov    ch,0x0
   14000e553:	rex add DWORD PTR [rax],eax
   14000e556:	add    BYTE PTR [rax],al
   14000e558:	xor    al,BYTE PTR [rax]
   14000e55a:	add    BYTE PTR [rax],al
   14000e55c:	add    BYTE PTR [rax],al
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	add    BYTE PTR [rip+0x0],dh        # 0x14000e566
	...
   14000e56e:	add    BYTE PTR [rax],al
   14000e570:	push   rdx
   14000e571:	push   rbx
   14000e572:	rex.R push rbx
   14000e574:	rex.WXB ja 0x14000e4fc
   14000e577:	fidiv  WORD PTR [rcx+rcx*4]
   14000e57a:	rex.RB
   14000e57b:	rex.X mov sil,cl
   14000e57e:	(bad)  
   14000e57f:	lods   eax,DWORD PTR ds:[rsi]
   14000e580:	popf   
   14000e581:	int3   
   14000e582:	add    al,0x3c
   14000e584:	add    DWORD PTR [rax],eax
   14000e586:	add    BYTE PTR [rax],al
   14000e588:	gs (bad) 
   14000e58a:	jae    0x14000e5f5
   14000e58c:	outs   dx,BYTE PTR ds:[rsi]
   14000e58d:	jbe    0x14000e5fe
   14000e58f:	imul   esp,DWORD PTR [rbp+0x72],0x2e
   14000e593:	jo     0x14000e5f9
   14000e595:	(bad)  
	...
   14000e5aa:	add    BYTE PTR [rax],al
   14000e5ac:	rex.RXB
   14000e5ad:	rex.XB push r12
   14000e5af:	rex.WR add BYTE PTR [rax],r10b
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	xor    DWORD PTR [rax],eax
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	cs je  0x14000e620
   14000e5bb:	js     0x14000e631
   14000e5bd:	and    al,0x64
   14000e5bf:	imul   eax,DWORD PTR [rax],0x40000000
   14000e5c5:	adc    BYTE PTR [rax],al
   14000e5c7:	add    BYTE PTR [rax-0x7d],bh
   14000e5ca:	add    BYTE PTR [rax],al
   14000e5cc:	cs je  0x14000e634
   14000e5cf:	js     0x14000e645
   14000e5d1:	and    al,0x6d
   14000e5d3:	outs   dx,BYTE PTR ds:[rsi]
   14000e5d4:	add    BYTE PTR [rax],al
   14000e5d6:	add    BYTE PTR [rax],al
   14000e5d8:	rcl    BYTE PTR [rbx+0x7d0000],0x0
   14000e5df:	add    BYTE PTR [rsi],ch
   14000e5e1:	je     0x14000e648
   14000e5e3:	js     0x14000e659
   14000e5e5:	and    al,0x6d
   14000e5e7:	outs   dx,BYTE PTR ds:[rsi]
   14000e5e8:	and    al,0x30
   14000e5ea:	xor    BYTE PTR [rax],al
   14000e5ec:	rex xchg esp,eax
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	loopne 0x14000e5f2
   14000e5f2:	add    BYTE PTR [rax],al
   14000e5f4:	cs je  0x14000e65c
   14000e5f7:	js     0x14000e66d
   14000e5f9:	and    al,0x78
   14000e5fb:	add    BYTE PTR [rax],ah
   14000e5fd:	xchg   ebp,eax
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	outs   dx,BYTE PTR ds:[rsi]
   14000e601:	add    BYTE PTR [rax],al
   14000e603:	add    BYTE PTR [rsi],ch
   14000e605:	je     0x14000e66c
   14000e607:	js     0x14000e67d
   14000e609:	and    al,0x79
   14000e60b:	add    BYTE PTR fs:[rax],al
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	add    BYTE PTR [rax+0x40000],ah
   14000e616:	add    BYTE PTR [rax],al
   14000e618:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   14000e620:	add    BYTE PTR [rax+0x5780000],dh
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000e631:	add    BYTE PTR [rax],al
   14000e633:	add    BYTE PTR [rax-0x4b],bh
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	adc    BYTE PTR [rax],al
   14000e63a:	add    BYTE PTR [rax],al
   14000e63c:	xor    BYTE PTR cs:[rax],dh
   14000e63f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000e642:	add    BYTE PTR [rax],al
   14000e644:	mov    BYTE PTR [rbp+0x80000],dh
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	cs rex.XB push r10
   14000e64f:	push   rsp
   14000e650:	and    al,0x58
   14000e652:	rex.XB
   14000e653:	add    BYTE PTR [r8],al
   14000e656:	add    BYTE PTR [rax],al
   14000e658:	nop
   14000e659:	mov    ch,0x0
   14000e65b:	add    BYTE PTR [rax],cl
   14000e65d:	add    BYTE PTR [rax],al
   14000e65f:	add    BYTE PTR [rsi],ch
   14000e661:	rex.XB push r10
   14000e663:	push   rsp
   14000e664:	and    al,0x58
   14000e666:	rex.XB
   14000e667:	rex.B
   14000e668:	add    BYTE PTR [r8],al
   14000e66b:	add    BYTE PTR [rax+0x100000b5],bl
   14000e671:	add    BYTE PTR [rax],al
   14000e673:	add    BYTE PTR [rsi],ch
   14000e675:	rex.XB push r10
   14000e677:	push   rsp
   14000e678:	and    al,0x58
   14000e67a:	rex.XB push r13
   14000e67c:	add    BYTE PTR [rax],al
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	test   al,0xb5
   14000e682:	add    BYTE PTR [rax],al
   14000e684:	or     BYTE PTR [rax],al
   14000e686:	add    BYTE PTR [rax],al
   14000e688:	cs rex.XB push r10
   14000e68b:	push   rsp
   14000e68c:	and    al,0x58
   14000e68e:	rex.XB pop r10
   14000e690:	add    BYTE PTR [rax],al
   14000e692:	add    BYTE PTR [rax],al
   14000e694:	mov    al,0xb5
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	or     BYTE PTR [rax],al
   14000e69a:	add    BYTE PTR [rax],al
   14000e69c:	cs rex.XB push r10
   14000e69f:	push   rsp
   14000e6a0:	and    al,0x58
   14000e6a2:	rex.WB
   14000e6a3:	add    BYTE PTR [r8],al
   14000e6a6:	add    BYTE PTR [rax],al
   14000e6a8:	mov    eax,0x80000b5
   14000e6ad:	add    BYTE PTR [rax],al
   14000e6af:	add    BYTE PTR [rsi],ch
   14000e6b1:	rex.XB push r10
   14000e6b3:	push   rsp
   14000e6b4:	and    al,0x58
   14000e6b6:	rex.WB
   14000e6b7:	rex.B
   14000e6b8:	add    BYTE PTR [r8],al
   14000e6bb:	add    al,al
   14000e6bd:	mov    ch,0x0
   14000e6bf:	add    BYTE PTR [rax],cl
   14000e6c1:	add    BYTE PTR [rax],al
   14000e6c3:	add    BYTE PTR [rsi],ch
   14000e6c5:	rex.XB push r10
   14000e6c7:	push   rsp
   14000e6c8:	and    al,0x58
   14000e6ca:	rex.WB pop r9
   14000e6cc:	add    BYTE PTR [rax],al
   14000e6ce:	add    BYTE PTR [rax],al
   14000e6d0:	enter  0xb5,0x0
   14000e6d4:	or     BYTE PTR [rax],al
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	cs rex.XB push r10
   14000e6db:	push   rsp
   14000e6dc:	and    al,0x58
   14000e6de:	rex.WB pop r10
   14000e6e0:	add    BYTE PTR [rax],al
   14000e6e2:	add    BYTE PTR [rax],al
   14000e6e4:	shl    BYTE PTR [rbp+0xc80000],1
   14000e6ea:	add    BYTE PTR [rax],al
   14000e6ec:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    BYTE PTR [rax-0x2fffff4a],ah
   14000e6fd:	add    BYTE PTR cs:[rax],al
   14000e700:	cs jb  0x14000e767
   14000e703:	(bad)  
   14000e704:	je     0x14000e767
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	jo     0x14000e6ef
   14000e70a:	add    BYTE PTR [rax],al
   14000e70c:	loopne 0x14000e710
   14000e70e:	add    BYTE PTR [rax],al
   14000e710:	cs jb  0x14000e777
   14000e713:	(bad)  
   14000e714:	je     0x14000e777
   14000e716:	and    al,0x7a
   14000e718:	jp     0x14000e794
   14000e71a:	fs (bad) 
   14000e71c:	add    BYTE PTR [eax],al
   14000e71f:	add    BYTE PTR [rax-0x18],dl
   14000e722:	add    BYTE PTR [rax],al
   14000e724:	rol    BYTE PTR [rsi],1
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	cs js  0x14000e78f
   14000e72b:	(bad)  
   14000e72c:	je     0x14000e78f
   14000e72e:	add    BYTE PTR [rax],al
   14000e730:	and    bh,ch
   14000e732:	add    BYTE PTR [rax],al
   14000e734:	add    BYTE PTR [rax],al
   14000e737:	add    BYTE PTR [rsi],ch
   14000e739:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000e742:	add    BYTE PTR [rax],al
   14000e744:	(bad)  
   14000e745:	out    dx,eax
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	and    BYTE PTR [rax],al
   14000e74a:	add    BYTE PTR [rax],al
   14000e74c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000e756:	add    BYTE PTR [rax],al
   14000e758:	sub    bh,0x0
   14000e75b:	add    BYTE PTR [rax],dh
   14000e75d:	add    BYTE PTR [rax],al
   14000e75f:	add    BYTE PTR [rsi],ch
   14000e761:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000e76a:	add    BYTE PTR [rax],al
   14000e76c:	mov    al,0xef
   14000e76e:	add    BYTE PTR [rax],al
   14000e770:	outs   dx,BYTE PTR ds:[rsi]
   14000e771:	add    BYTE PTR [rax],al
   14000e773:	add    BYTE PTR [rsi],ch
   14000e775:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000e77e:	add    BYTE PTR [rax],al
   14000e780:	and    al,dh
   14000e782:	add    BYTE PTR [rax],al
   14000e784:	xor    BYTE PTR [rax],al
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000e792:	add    BYTE PTR [rax],al
   14000e794:	push   rax
   14000e795:	lock add BYTE PTR [rax],al
   14000e798:	loopne 0x14000e79b
   14000e79a:	add    BYTE PTR [rax],al
   14000e79c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000e7a5:	add    BYTE PTR [rax],al
   14000e7a7:	add    BYTE PTR [rax],dh
   14000e7a9:	repnz add BYTE PTR [rax],al
   14000e7ac:	adc    al,0x0
   14000e7ae:	add    BYTE PTR [rax],al
   14000e7b0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000e7b9:	add    BYTE PTR [rax],al
   14000e7bb:	add    BYTE PTR [rax-0xe],cl
   14000e7be:	add    BYTE PTR [rax],al
   14000e7c0:	js     0x14000e7c7
   14000e7c2:	add    BYTE PTR [rax],al
   14000e7c4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000e7cd:	add    BYTE PTR [rax],al
   14000e7cf:	add    al,al
   14000e7d1:	test   DWORD PTR [rax],0xdd600
   14000e7d7:	add    BYTE PTR [rsi],ch
   14000e7d9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000e7e1:	add    BYTE PTR [rax],al
   14000e7e3:	add    BYTE PTR [rax],al
   14000e7e5:	adc    BYTE PTR [rcx],al
   14000e7e7:	add    BYTE PTR [rax+0x4],ah
   14000e7ea:	add    BYTE PTR [rax],al
   14000e7ec:	cs fs (bad) 
   14000e7ef:	je     0x14000e852
   14000e7f1:	add    BYTE PTR [rax],al
   14000e7f3:	add    BYTE PTR [rax-0x7ffffeec],al
   14000e7f9:	or     BYTE PTR [rax],al
   14000e7fb:	add    BYTE PTR [rsi],ch
   14000e7fd:	(bad)  
   14000e7ff:	jae    0x14000e801
   14000e801:	add    BYTE PTR [rax],al
   14000e803:	add    BYTE PTR [rax],al
   14000e805:	and    BYTE PTR [rcx],al
   14000e807:	add    ah,bl
   14000e809:	add    eax,0x702e0000
   14000e80e:	fs (bad) 
   14000e810:	je     0x14000e873
   14000e812:	add    BYTE PTR [rax],al
   14000e814:	add    BYTE PTR [rax],dh
   14000e816:	add    DWORD PTR [rax],eax
   14000e818:	xor    BYTE PTR [rax],al
   14000e81a:	add    BYTE PTR [rax],al
   14000e81c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000e826:	add    BYTE PTR [rax],al
   14000e828:	add    BYTE PTR [rax+0x1],al
   14000e82b:	add    al,dh
   14000e82d:	add    BYTE PTR [rax],al
   14000e82f:	add    BYTE PTR [rsi],ch
   14000e831:	jb     0x14000e8a6
   14000e833:	jb     0x14000e898
   14000e835:	and    al,0x30
   14000e837:	xor    DWORD PTR [rax],eax
   14000e839:	add    BYTE PTR [rax],al
   14000e83b:	add    al,dh
   14000e83d:	rex add DWORD PTR [rax],eax
   14000e840:	adc    BYTE PTR [rax],cl
   14000e842:	add    BYTE PTR [rax],al
   14000e844:	cs jb  0x14000e8ba
   14000e847:	jb     0x14000e8ac
   14000e849:	and    al,0x30
   14000e84b:	xor    al,BYTE PTR [rax]
   14000e84d:	add    BYTE PTR [rax],al
   14000e84f:	add    BYTE PTR [rcx],al
   14000e851:	or     al,BYTE PTR [rax+rax*1]
   14000e854:	or     dh,BYTE PTR [rsi+rax*1]
   14000e857:	add    BYTE PTR [rdx],cl
   14000e859:	xor    al,BYTE PTR [rsi]
   14000e85b:	jo     0x14000e85e
   14000e85d:	or     eax,DWORD PTR [rcx]
   14000e85f:	add    BYTE PTR [rbx],cl
   14000e861:	movabs ds:0x820b00010b010000,al
   14000e86a:	add    BYTE PTR [rax],al
   14000e86c:	add    DWORD PTR [rbx],ecx
   14000e86e:	add    DWORD PTR [rax],eax
   14000e870:	or     esp,edx
   14000e872:	add    BYTE PTR [rax],al
   14000e874:	add    DWORD PTR [rsi],eax
   14000e876:	add    al,BYTE PTR [rax]
   14000e878:	(bad)  
   14000e879:	xor    al,BYTE PTR [rdx]
   14000e87b:	xor    BYTE PTR [rcx],al
   14000e87d:	adc    eax,0x74150008
   14000e882:	or     eax,DWORD PTR [rax]
   14000e884:	adc    eax,0x15000a64
   14000e889:	xor    al,0x9
   14000e88b:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0f9e3
   14000e891:	sbb    DWORD PTR [rdx],ecx
   14000e893:	add    BYTE PTR [rcx],bl
   14000e895:	adc    DWORD PTR fs:[rax],eax
   14000e898:	sbb    DWORD PTR [rax+rdx*1],esi
   14000e89b:	add    BYTE PTR [rcx],bl
   14000e89d:	xchg   edx,eax
   14000e89e:	adc    dh,al
   14000e8a0:	adc    al,ah
   14000e8a2:	(bad)  
   14000e8a3:	ror    BYTE PTR [rax+rsi*2],0xb
   14000e8a7:	push   rax
   14000e8a8:	add    DWORD PTR [rdx],edx
   14000e8aa:	or     BYTE PTR [rax],al
   14000e8ac:	adc    dl,BYTE PTR [rsp+rcx*1+0x0]
   14000e8b0:	adc    dh,BYTE PTR [rbx+rcx*1]
   14000e8b3:	add    BYTE PTR [rdx],dl
   14000e8b5:	push   rdx
   14000e8b6:	(bad)  
   14000e8b7:	lock or al,0x70
   14000e8ba:	or     esp,DWORD PTR [rax+0x1]
   14000e8bd:	adc    al,0x8
   14000e8bf:	add    BYTE PTR [rsp+riz*2],dl
   14000e8c2:	or     BYTE PTR [rax],al
   14000e8c4:	adc    al,0x54
   14000e8c6:	(bad)  
   14000e8c7:	add    BYTE PTR [rsp+rsi*1],dl
   14000e8ca:	(bad)  
   14000e8cb:	add    BYTE PTR [rdx+rsi*1],dl
   14000e8ce:	adc    BYTE PTR [rax+0x1],dh
   14000e8d1:	add    al,0x1
   14000e8d3:	add    BYTE PTR [rdx+rax*2],al
   14000e8d6:	add    BYTE PTR [rax],al
   14000e8d8:	add    DWORD PTR [rdi],ecx
   14000e8da:	(bad)  
   14000e8db:	add    BYTE PTR [rdi],cl
   14000e8dd:	fs (bad) 
   14000e8df:	add    BYTE PTR [rdi],cl
   14000e8e1:	xor    al,0x6
   14000e8e3:	add    BYTE PTR [rdi],cl
   14000e8e5:	xor    cl,BYTE PTR [rbx]
   14000e8e7:	jo     0x14000e8ea
   14000e8e9:	add    al,0x1
   14000e8eb:	add    BYTE PTR [rdx+riz*2],al
   14000e8ee:	add    BYTE PTR [rax],al
   14000e8f0:	add    DWORD PTR [rcx+rax*1],eax
   14000e8f3:	add    BYTE PTR [rdx+rax*4],al
   14000e8f6:	add    BYTE PTR [rax],al
   14000e8f8:	add    DWORD PTR [rcx],ecx
   14000e8fa:	add    DWORD PTR [rax],eax
   14000e8fc:	or     DWORD PTR [rdx+0x18010000],esp
   14000e902:	or     al,BYTE PTR [rax]
   14000e904:	sbb    BYTE PTR [rax+rdx*1+0x0],ah
   14000e908:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   14000e90c:	sbb    BYTE PTR [rsi+rcx*1],dh
   14000e90f:	add    BYTE PTR [rax],bl
   14000e911:	xchg   edx,eax
   14000e912:	adc    al,0xf0
   14000e914:	adc    ah,al
   14000e916:	adc    BYTE PTR [rax+0x1],dh
   14000e919:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42fb1f
   14000e91f:	jo     0x14000e92e
   14000e921:	(bad)  
   14000e922:	or     al,0x50
   14000e924:	or     esi,DWORD PTR [rax]
   14000e926:	add    BYTE PTR [rax],al
   14000e928:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1740de934
   14000e92e:	or     al,BYTE PTR [rax]
   14000e930:	or     eax,0x7e00952
   14000e935:	jo     0x14000e93d
   14000e937:	(bad)  
   14000e938:	sbb    DWORD PTR [rdi],esi
   14000e93a:	or     eax,0x55c42600
   14000e93f:	add    BYTE PTR [rsi],ah
   14000e941:	je     0x14000e997
   14000e943:	add    BYTE PTR [rsi],ah
   14000e945:	fs push rbx
   14000e947:	add    BYTE PTR [rsi],ah
   14000e949:	xor    al,0x52
   14000e94b:	add    BYTE PTR [rsi],ah
   14000e94d:	add    DWORD PTR [rsi+0x0],ecx
   14000e950:	sbb    al,dh
   14000e952:	(bad)  
   14000e953:	loopne 0x14000e969
   14000e955:	push   rax
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	or     al,0x93
   14000e95a:	add    BYTE PTR [rax],al
   14000e95c:	(bad)  
   14000e95d:	add    al,BYTE PTR [rax]
   14000e95f:	add    BYTE PTR [rcx],al
   14000e961:	clts   
   14000e963:	add    BYTE PTR [rdi],cl
   14000e965:	or     DWORD PTR fs:[rax],eax
   14000e968:	sysenter 
   14000e96a:	or     BYTE PTR [rax],al
   14000e96c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000e96f:	jo     0x14000e98a
   14000e971:	adc    eax,0x52060002
   14000e976:	add    dh,BYTE PTR [rax+0xc]
   14000e979:	xchg   ebx,eax
   14000e97a:	add    BYTE PTR [rax],al
   14000e97c:	sub    BYTE PTR [rax],al
   14000e97e:	add    BYTE PTR [rax],al
   14000e980:	add    DWORD PTR [rdx],ebx
   14000e982:	or     BYTE PTR [rax],al
   14000e984:	sbb    ah,BYTE PTR [rbx+rdx*1+0x0]
   14000e988:	sbb    dh,BYTE PTR [rdx+rdx*1]
   14000e98b:	add    BYTE PTR [rdx],bl
   14000e98d:	mov    dl,0x13
   14000e98f:	loopne 0x14000e9a2
   14000e991:	jo     0x14000e9a3
   14000e993:	push   rax
   14000e994:	add    DWORD PTR [rax],ebx
   14000e996:	add    al,0x0
   14000e998:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000e99b:	add    BYTE PTR [rax],bl
   14000e99d:	jb     0x14000e9b3
   14000e99f:	(bad)  
   14000e9a0:	add    DWORD PTR [rsi],eax
   14000e9a2:	add    al,BYTE PTR [rax]
   14000e9a4:	(bad)  
   14000e9a5:	jb     0x14000e9a9
   14000e9a7:	xor    BYTE PTR [rcx],al
   14000e9a9:	clts   
   14000e9ab:	add    BYTE PTR [rdi],cl
   14000e9ad:	push   rsp
   14000e9ae:	adc    DWORD PTR [rax],eax
   14000e9b0:	sysenter 
   14000e9b2:	adc    BYTE PTR [rax],al
   14000e9b4:	psrld  mm1,QWORD PTR [rbx]
   14000e9b7:	jo     0x14000e9d2
   14000e9b9:	and    al,BYTE PTR [rdi]
   14000e9bb:	add    BYTE PTR [rax],dl
   14000e9bd:	xor    al,0x17
   14000e9bf:	add    BYTE PTR [rax],dl
   14000e9c1:	add    DWORD PTR [rdx],edx
   14000e9c3:	add    BYTE PTR [rcx],cl
   14000e9c5:	loopne 0x14000e9ce
   14000e9c7:	(bad)  
   14000e9c8:	(bad)  
   14000e9c9:	push   rax
   14000e9ca:	add    BYTE PTR [rax],al
   14000e9cc:	or     al,0x93
   14000e9ce:	add    BYTE PTR [rax],al
   14000e9d0:	add    BYTE PTR [rax],0x0
   14000e9d3:	add    BYTE PTR [rcx],al
   14000e9d5:	or     al,BYTE PTR [rax+rax*1]
   14000e9d8:	or     dh,BYTE PTR [rdx+rcx*1]
   14000e9db:	add    BYTE PTR [rdx],cl
   14000e9dd:	jb     0x14000e9e5
   14000e9df:	jo     0x14000e9fa
   14000e9e1:	and    eax,0x1170009
   14000e9e6:	adc    al,BYTE PTR [rax]
   14000e9e8:	or     esi,eax
   14000e9ea:	or     eax,esp
   14000e9ec:	(bad)  
   14000e9ed:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ee64
   14000e9f4:	add    dl,BYTE PTR [rax+0x0]
   14000e9f7:	add    BYTE PTR [rbx+rdx*4],cl
   14000e9fa:	add    BYTE PTR [rax],al
   14000e9fc:	mov    BYTE PTR [rax],al
   14000e9fe:	add    BYTE PTR [rax],al
   14000ea00:	add    DWORD PTR [rdi],ebx
   14000ea02:	or     al,BYTE PTR [rax]
   14000ea04:	(bad)  
   14000ea05:	xor    al,0x18
   14000ea07:	add    BYTE PTR [rdi],bl
   14000ea09:	rcr    BYTE PTR [rax],cl
   14000ea0b:	lock (bad) 
   14000ea0d:	loopne 0x14000ea23
   14000ea0f:	rcl    BYTE PTR [rdx],1
   14000ea11:	rcl    BYTE PTR [rax],0x70
   14000ea14:	punpcklbw mm1,DWORD PTR [rsi]
   14000ea17:	push   rax
   14000ea18:	add    DWORD PTR [rdi],ecx
   14000ea1a:	(bad)  
   14000ea1b:	add    BYTE PTR [rdi],cl
   14000ea1d:	or     eax,DWORD PTR fs:[rax]
   14000ea20:	sysenter 
   14000ea22:	or     al,BYTE PTR [rax]
   14000ea24:	(bad)  
   14000ea26:	or     esi,DWORD PTR [rax+0x1]
   14000ea29:	adc    ecx,DWORD PTR [rax]
   14000ea2b:	add    BYTE PTR [rbx],dl
   14000ea2d:	push   rsp
   14000ea2e:	(bad)  
   14000ea2f:	add    BYTE PTR [rbx],dl
   14000ea31:	xor    al,0xc
   14000ea33:	add    BYTE PTR [rbx],dl
   14000ea35:	jb     0x14000ea46
   14000ea37:	loopne 0x14000ea46
   14000ea39:	jo     0x14000ea47
   14000ea3b:	(bad)  
   14000ea3c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dea4e
   14000ea42:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00f8ad
   14000ea49:	push   rsp
   14000ea4a:	or     eax,0xc341d00
   14000ea4f:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f103c7
   14000ea55:	loopne 0x14000ea6c
   14000ea57:	rol    BYTE PTR [rcx],0x1c
   14000ea5a:	or     BYTE PTR [rax],al
   14000ea5c:	sbb    al,0x64
   14000ea5e:	(bad)  
   14000ea5f:	add    BYTE PTR [rsp+rsi*1],bl
   14000ea62:	adc    eax,0x12f21c00
   14000ea67:	lock adc BYTE PTR [rax+0xf],dh
   14000ea6b:	push   rax
   14000ea6c:	add    DWORD PTR [rdx],ecx
   14000ea6e:	add    al,0x0
   14000ea70:	or     dh,BYTE PTR [rax+rdx*1]
   14000ea73:	add    BYTE PTR [rdx],cl
   14000ea75:	rol    BYTE PTR [rsi],cl
   14000ea77:	jo     0x14000ea92
   14000ea79:	xor    ecx,DWORD PTR [rbx]
   14000ea7b:	add    BYTE PTR [rdx],ah
   14000ea7d:	je     0x14000eab7
   14000ea7f:	add    BYTE PTR [rdx],ah
   14000ea81:	fs (bad) 
   14000ea83:	add    BYTE PTR [rdx],ah
   14000ea85:	xor    al,0x36
   14000ea87:	add    BYTE PTR [rdx],ah
   14000ea89:	add    DWORD PTR [rdx],esi
   14000ea8b:	add    BYTE PTR [rax+rsi*8],dl
   14000ea8e:	adc    ah,al
   14000ea90:	adc    BYTE PTR [rax+0x0],dl
   14000ea93:	add    BYTE PTR [rbx+rdx*4],cl
   14000ea96:	add    BYTE PTR [rax],al
   14000ea98:	add    BYTE PTR [rcx],0x0
   14000ea9b:	add    BYTE PTR [rcx],al
   14000ea9d:	sbb    BYTE PTR [rcx],cl
   14000ea9f:	add    BYTE PTR [rax],bl
   14000eaa1:	(bad)  
   14000eaa2:	adc    eax,esi
   14000eaa4:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c0f67b
   14000eaab:	jo     0x14000eab5
   14000eaad:	(bad)  
   14000eaae:	(bad)  
   14000eaaf:	xor    BYTE PTR [rsi],al
   14000eab1:	push   rax
   14000eab2:	add    BYTE PTR [rax],al
   14000eab4:	add    DWORD PTR [rax],ebx
   14000eab6:	or     DWORD PTR [rax],eax
   14000eab8:	sbb    BYTE PTR [rax+riz*1],dh
   14000eabb:	add    BYTE PTR [rax],bl
   14000eabd:	add    DWORD PTR [rdx],ebx
   14000eabf:	add    BYTE PTR [rax+rsi*8],cl
   14000eac2:	or     ah,al
   14000eac4:	or     BYTE PTR [rax+0x7],dh
   14000eac7:	(bad)  
   14000eac8:	(bad)  
   14000eac9:	push   rax
   14000eaca:	add    BYTE PTR [rax],al
   14000eacc:	add    DWORD PTR [rax+rcx*1],edx
   14000eacf:	add    BYTE PTR [rsp+riz*2],dl
   14000ead2:	(bad)  
   14000ead3:	add    BYTE PTR [rsp+rdx*2],dl
   14000ead6:	or     eax,0xc341400
   14000eadb:	add    BYTE PTR [rdx+rdx*4],dl
   14000eade:	adc    BYTE PTR [rax+0x1],dh
   14000eae1:	and    al,0xa
   14000eae3:	add    BYTE PTR [rsp+rsi*1],ah
   14000eae6:	adc    al,BYTE PTR [rax]
   14000eae8:	and    al,0x92
   14000eaea:	sbb    eax,0x19e01bf0
   14000eaef:	rcl    BYTE PTR [rdi],1
   14000eaf1:	rcl    BYTE PTR [rip+0x13601470],0x50        # 0x15360ff68
   14000eaf8:	add    DWORD PTR [rbx+rcx*1],esp
   14000eafb:	add    BYTE PTR [rsp+rsi*1],ah
   14000eafe:	sbb    eax,DWORD PTR [rax]
   14000eb00:	and    al,0x1
   14000eb02:	adc    al,BYTE PTR [rax]
   14000eb04:	sbb    eax,esi
   14000eb06:	(bad)  
   14000eb07:	loopne 0x14000eb1e
   14000eb09:	rcl    BYTE PTR [rbx],1
   14000eb0b:	rcl    BYTE PTR [rcx],0x70
   14000eb0e:	adc    BYTE PTR [rax+0xf],ah
   14000eb11:	push   rax
   14000eb12:	add    BYTE PTR [rax],al
   14000eb14:	add    DWORD PTR [rsp+rax*1],ecx
   14000eb17:	add    BYTE PTR [rsp+rsi*1],cl
   14000eb1a:	or     al,BYTE PTR [rax]
   14000eb1c:	or     al,0x72
   14000eb1e:	or     BYTE PTR [rax+0x19],dh
   14000eb21:	sub    cl,BYTE PTR [rbx]
   14000eb23:	add    BYTE PTR [rsp+rsi*1],bl
   14000eb26:	and    BYTE PTR [rax],al
   14000eb28:	sbb    al,0x1
   14000eb2a:	sbb    BYTE PTR [rax],al
   14000eb2c:	adc    al,dh
   14000eb2e:	(bad)  
   14000eb2f:	loopne 0x14000eb3d
   14000eb31:	ror    BYTE PTR [rdx],1
   14000eb33:	ror    BYTE PTR [rax],0x70
   14000eb36:	(bad)  
   14000eb37:	(bad)  
   14000eb38:	(bad)  
   14000eb39:	push   rax
   14000eb3a:	add    BYTE PTR [rax],al
   14000eb3c:	or     al,0x93
   14000eb3e:	add    BYTE PTR [rax],al
   14000eb40:	mov    eax,0x19000000
   14000eb45:	sub    eax,DWORD PTR [rip+0xffffffff86011900]        # 0xc602044b
   14000eb4b:	add    BYTE PTR [rdx],dl
   14000eb4d:	jo     0x14000eb60
   14000eb4f:	(bad)  
   14000eb50:	adc    BYTE PTR [rax],dh
   14000eb52:	add    BYTE PTR [rax],al
   14000eb54:	or     al,0x93
   14000eb56:	add    BYTE PTR [rax],al
   14000eb58:	and    BYTE PTR [rax+rax*1],al
   14000eb5b:	add    BYTE PTR [rcx],cl
   14000eb5d:	sbb    BYTE PTR [rax],cl
   14000eb5f:	add    BYTE PTR [rax],bl
   14000eb61:	je     0x14000eb78
   14000eb63:	add    BYTE PTR [rax],bl
   14000eb65:	fs adc al,0x0
   14000eb68:	sbb    BYTE PTR [rbx+rdx*1],dh
   14000eb6b:	add    BYTE PTR [rax],bl
   14000eb6d:	repnz adc eax,esp
   14000eb70:	xchg   esi,eax
   14000eb71:	mov    es,WORD PTR [rax]
   14000eb73:	add    BYTE PTR [rcx],al
   14000eb75:	add    BYTE PTR [rax],al
   14000eb77:	add    bh,al
   14000eb79:	pop    rdx
   14000eb7a:	add    BYTE PTR [rax],al
   14000eb7c:	adc    DWORD PTR [rbx+0x0],ebx
   14000eb7f:	add    BYTE PTR [rsi-0x6c],al
   14000eb82:	add    BYTE PTR [rax],al
   14000eb84:	adc    DWORD PTR [rbx+0x0],ebx
   14000eb87:	add    BYTE PTR [rcx],al
   14000eb89:	(bad)  
   14000eb8a:	add    al,BYTE PTR [rax]
   14000eb8c:	(bad)  
   14000eb8d:	jb     0x14000eb91
   14000eb8f:	push   rax
   14000eb90:	or     DWORD PTR [rax],edx
   14000eb92:	(bad)  
   14000eb93:	add    BYTE PTR [rax],dl
   14000eb95:	lldt   WORD PTR fs:[rax]
   14000eb99:	xor    al,0xe
   14000eb9b:	add    BYTE PTR [rax],dl
   14000eb9d:	xchg   edx,eax
   14000eb9e:	or     al,0x70
   14000eba0:	xchg   esi,eax
   14000eba1:	mov    es,WORD PTR [rax]
   14000eba3:	add    BYTE PTR [rcx],al
   14000eba5:	add    BYTE PTR [rax],al
   14000eba7:	add    BYTE PTR [rdx],dl
   14000eba9:	pop    rsp
   14000ebaa:	add    BYTE PTR [rax],al
   14000ebac:	rex.XB pop r12
   14000ebae:	add    BYTE PTR [rax],al
   14000ebb0:	rex.RX xchg esp,eax
   14000ebb2:	add    BYTE PTR [rax],al
   14000ebb4:	rex.XB pop r12
   14000ebb6:	add    BYTE PTR [rax],al
   14000ebb8:	or     DWORD PTR [rip+0x340d0006],ecx        # 0x1740debc4
   14000ebbe:	adc    BYTE PTR [rax],al
   14000ebc0:	or     eax,0x7e00992
   14000ebc5:	jo     0x14000ebcd
   14000ebc7:	(bad)  
   14000ebc8:	xchg   esi,eax
   14000ebc9:	mov    es,WORD PTR [rax]
   14000ebcb:	add    BYTE PTR [rcx],al
   14000ebcd:	add    BYTE PTR [rax],al
   14000ebcf:	add    BYTE PTR [rip+0x6300005d],ch        # 0x1a300ec32
   14000ebd5:	pop    rbp
   14000ebd6:	add    BYTE PTR [rax],al
   14000ebd8:	rex.RX xchg esp,eax
   14000ebda:	add    BYTE PTR [rax],al
   14000ebdc:	movsxd ebx,DWORD PTR [rbp+0x0]
   14000ebdf:	add    BYTE PTR [rcx],al
   14000ebe1:	adc    BYTE PTR [rsi],al
   14000ebe3:	add    BYTE PTR [rax],dl
   14000ebe5:	lldt   WORD PTR fs:[rax]
   14000ebe9:	xor    al,0xe
   14000ebeb:	add    BYTE PTR [rax],dl
   14000ebed:	xchg   edx,eax
   14000ebee:	or     al,0x70
   14000ebf0:	add    DWORD PTR [rsi],esp
   14000ebf2:	or     al,BYTE PTR [rax]
   14000ebf4:	add    DWORD PTR es:[rip+0x19f01b00],edx        # 0x159f106fb
   14000ebfb:	loopne 0x14000ec14
   14000ebfd:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270ffc3
   14000ec03:	(bad)  
   14000ec04:	adc    DWORD PTR [rax],esi
   14000ec06:	adc    BYTE PTR [rax+0x19],dl
   14000ec09:	and    cl,BYTE PTR [rax]
   14000ec0b:	add    BYTE PTR [rbx],dl
   14000ec0d:	push   rsp
   14000ec0e:	adc    eax,DWORD PTR [rax]
   14000ec10:	adc    esi,DWORD PTR [rcx+rdx*1]
   14000ec13:	add    BYTE PTR [rbx],dl
   14000ec15:	mov    dl,0xf
   14000ec17:	loopne 0x14000ec26
   14000ec19:	jo     0x14000ec27
   14000ec1b:	(bad)  
   14000ec1c:	or     al,0x93
   14000ec1e:	add    BYTE PTR [rax],al
   14000ec20:	pop    rax
   14000ec21:	add    BYTE PTR [rax],al
   14000ec23:	add    BYTE PTR [rcx],bl
   14000ec25:	sbb    eax,DWORD PTR [rax+rax*1]
   14000ec28:	or     eax,0xd001134
   14000ec2d:	rol    BYTE PTR [rsi],cl
   14000ec2f:	push   rax
   14000ec30:	or     al,0x93
   14000ec32:	add    BYTE PTR [rax],al
   14000ec34:	push   0x19000000
   14000ec39:	sbb    eax,DWORD PTR [rbx]
   14000ec3b:	add    BYTE PTR [rcx],cl
   14000ec3d:	add    DWORD PTR [rsi],edx
   14000ec3f:	add    BYTE PTR [rdx],al
   14000ec41:	xor    BYTE PTR [rax],al
   14000ec43:	add    BYTE PTR [rbx+rdx*4],cl
   14000ec46:	add    BYTE PTR [rax],al
   14000ec48:	movabs al,ds:0x1a00092819000000
   14000ec51:	fs sbb eax,0x1c341a00
   14000ec57:	add    BYTE PTR [rdx],bl
   14000ec59:	add    DWORD PTR [rsi],edx
   14000ec5b:	add    BYTE PTR [rsi],cl
   14000ec5d:	lock or al,0x70
   14000ec60:	or     edx,DWORD PTR [rax+0x0]
   14000ec63:	add    BYTE PTR [rbx+rdx*4],cl
   14000ec66:	add    BYTE PTR [rax],al
   14000ec68:	movabs al,ds:0xa00040a01000000
   14000ec71:	xor    al,0xb
   14000ec73:	add    BYTE PTR [rdx],cl
   14000ec75:	jb     0x14000ec7d
   14000ec77:	jo     0x14000ec92
   14000ec79:	sbb    al,0x6
   14000ec7b:	add    BYTE PTR [rip+0xd001334],cl        # 0x14d00ffb5
   14000ec81:	ror    BYTE PTR [rcx],cl
   14000ec83:	loopne 0x14000ec8c
   14000ec85:	jo     0x14000ec8d
   14000ec87:	push   rax
   14000ec88:	or     al,0x93
   14000ec8a:	add    BYTE PTR [rax],al
   14000ec8c:	(bad)  
   14000ec8d:	add    BYTE PTR [rax],al
   14000ec8f:	add    BYTE PTR [rcx],al
   14000ec91:	or     BYTE PTR [rdx],al
   14000ec93:	add    BYTE PTR [rax],cl
   14000ec95:	xchg   edx,eax
   14000ec96:	add    al,0x30
   14000ec98:	add    DWORD PTR [rsp+rax*1],ecx
   14000ec9b:	add    BYTE PTR [rsp+rsi*1],cl
   14000ec9e:	or     al,0x0
   14000eca0:	or     al,0x72
   14000eca2:	or     BYTE PTR [rax+0x1],dh
   14000eca5:	(bad)  
   14000eca6:	or     al,BYTE PTR [rax]
   14000eca8:	(bad)  
   14000eca9:	fs adc al,0x0
   14000ecac:	(bad)  
   14000ecad:	xor    al,0x13
   14000ecaf:	add    BYTE PTR [rdi],bl
   14000ecb1:	mov    dl,0x18
   14000ecb3:	lock (bad) 
   14000ecb5:	loopne 0x14000eccb
   14000ecb7:	rcl    BYTE PTR [rdx],1
   14000ecb9:	rcl    BYTE PTR [rax],0x50
   14000ecbc:	add    DWORD PTR [rax],ecx
   14000ecbe:	add    al,BYTE PTR [rax]
   14000ecc0:	or     BYTE PTR [rdx+0x17013004],dh
   14000ecc6:	or     BYTE PTR [rax],al
   14000ecc8:	(bad)  
   14000ecc9:	lldt   WORD PTR fs:[rdi]
   14000eccd:	xor    al,0xe
   14000eccf:	add    BYTE PTR [rdi],dl
   14000ecd1:	jb     0x14000ece6
   14000ecd3:	lock adc eax,esp
   14000ecd6:	pshufw mm1,QWORD PTR [rcx],0x6
   14000ecda:	add    al,BYTE PTR [rax]
   14000ecdc:	(bad)  
   14000ecdd:	jb     0x14000ece1
   14000ecdf:	xor    BYTE PTR [rsi+0x100008e],dl
   14000ece5:	add    BYTE PTR [rax],al
   14000ece7:	add    cl,bl
   14000ece9:	jbe    0x14000eceb
   14000eceb:	add    BYTE PTR [rcx],dl
   14000eced:	ja     0x14000ecef
   14000ecef:	add    BYTE PTR [rax-0x6c],ch
   14000ecf2:	add    BYTE PTR [rax],al
   14000ecf4:	adc    eax,0x1000077
   14000ecf9:	(bad)  
   14000ecfa:	add    al,BYTE PTR [rax]
   14000ecfc:	(bad)  
   14000ecfd:	push   rdx
   14000ecfe:	add    dl,BYTE PTR [rax+0x9]
   14000ed01:	add    al,0x1
   14000ed03:	add    BYTE PTR [rdx+riz*2],al
   14000ed06:	add    BYTE PTR [rax],al
   14000ed08:	xchg   esi,eax
   14000ed09:	mov    es,WORD PTR [rax]
   14000ed0b:	add    BYTE PTR [rcx],al
   14000ed0d:	add    BYTE PTR [rax],al
   14000ed0f:	add    BYTE PTR [rdi+rsi*2+0x0],dh
   14000ed13:	add    BYTE PTR [rcx-0x75ffff89],bl
   14000ed19:	xchg   esp,eax
   14000ed1a:	add    BYTE PTR [rax],al
   14000ed1c:	popf   
   14000ed1d:	ja     0x14000ed1f
   14000ed1f:	add    BYTE PTR [rcx],al
   14000ed21:	(bad)  
   14000ed22:	add    al,BYTE PTR [rax]
   14000ed24:	(bad)  
   14000ed25:	xor    al,BYTE PTR [rdx]
   14000ed27:	push   rax
   14000ed28:	or     DWORD PTR [rcx+rax*1],eax
   14000ed2b:	add    BYTE PTR [rdx+riz*2],al
   14000ed2e:	add    BYTE PTR [rax],al
   14000ed30:	xchg   esi,eax
   14000ed31:	mov    es,WORD PTR [rax]
   14000ed33:	add    BYTE PTR [rcx],al
   14000ed35:	add    BYTE PTR [rax],al
   14000ed37:	add    ah,dh
   14000ed39:	ja     0x14000ed3b
   14000ed3b:	add    BYTE PTR [rcx],bl
   14000ed3d:	js     0x14000ed3f
   14000ed3f:	add    BYTE PTR [rdx+0x1d000094],cl
   14000ed45:	js     0x14000ed47
   14000ed47:	add    BYTE PTR [rcx],cl
   14000ed49:	add    al,0x1
   14000ed4b:	add    BYTE PTR [rdx+riz*4],al
   14000ed4e:	add    BYTE PTR [rax],al
   14000ed50:	xchg   esi,eax
   14000ed51:	mov    es,WORD PTR [rax]
   14000ed53:	add    BYTE PTR [rcx],al
   14000ed55:	add    BYTE PTR [rax],al
   14000ed57:	add    BYTE PTR [rax+rdi*2+0x0],ah
   14000ed5b:	add    BYTE PTR [rcx+0x68000078],bh
   14000ed61:	xchg   esp,eax
   14000ed62:	add    BYTE PTR [rax],al
   14000ed64:	mov    ebp,0x9000078
   14000ed69:	add    al,0x1
   14000ed6b:	add    BYTE PTR [rdx+riz*2],al
   14000ed6e:	add    BYTE PTR [rax],al
   14000ed70:	xchg   esi,eax
   14000ed71:	mov    es,WORD PTR [rax]
   14000ed73:	add    BYTE PTR [rcx],al
   14000ed75:	add    BYTE PTR [rax],al
   14000ed77:	add    BYTE PTR [rcx+rdi*2],al
   14000ed7a:	add    BYTE PTR [rax],al
   14000ed7c:	sub    DWORD PTR [rcx+0x0],edi
   14000ed7f:	add    BYTE PTR [rdx+0x2d000094],cl
   14000ed85:	jns    0x14000ed87
   14000ed87:	add    BYTE PTR [rcx],cl
   14000ed89:	add    al,0x1
   14000ed8b:	add    BYTE PTR [rdx+rax*4],al
   14000ed8e:	add    BYTE PTR [rax],al
   14000ed90:	xchg   esi,eax
   14000ed91:	mov    es,WORD PTR [rax]
   14000ed93:	add    BYTE PTR [rcx],al
   14000ed95:	add    BYTE PTR [rax],al
   14000ed97:	add    BYTE PTR [rcx+rdi*2+0x0],dh
   14000ed9b:	add    BYTE PTR [rbx+0x68000079],ah
   14000eda1:	xchg   esp,eax
   14000eda2:	add    BYTE PTR [rax],al
   14000eda4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eda5:	jns    0x14000eda7
   14000eda7:	add    BYTE PTR [rcx],cl
   14000eda9:	add    al,0x1
   14000edab:	add    BYTE PTR [rdx+riz*2],al
   14000edae:	add    BYTE PTR [rax],al
   14000edb0:	xchg   esi,eax
   14000edb1:	mov    es,WORD PTR [rax]
   14000edb3:	add    BYTE PTR [rcx],al
   14000edb5:	add    BYTE PTR [rax],al
   14000edb7:	add    ah,dh
   14000edb9:	jns    0x14000edbb
   14000edbb:	add    BYTE PTR [rcx],bl
   14000edbd:	jp     0x14000edbf
   14000edbf:	add    BYTE PTR [rdx+0x1d000094],cl
   14000edc5:	jp     0x14000edc7
   14000edc7:	add    BYTE PTR [rcx],al
   14000edc9:	or     eax,0x340d0004
   14000edce:	or     al,BYTE PTR [rax]
   14000edd0:	or     eax,0x1500652
   14000edd5:	adc    eax,0x74150008
   14000edda:	or     BYTE PTR [rax],al
   14000eddc:	adc    eax,0x15000764
   14000ede1:	xor    al,0x6
   14000ede3:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0ff1b
   14000ede9:	adc    BYTE PTR [rax+rax*1],al
   14000edec:	adc    BYTE PTR [rdx+0x30087009],dl
   14000edf2:	(bad)  
   14000edf3:	push   rax
   14000edf4:	sbb    DWORD PTR [rip+0x74240009],esi        # 0x1b424ee03
   14000edfa:	adc    DWORD PTR [rdx],eax
   14000edfc:	and    al,0x64
   14000edfe:	adc    BYTE PTR [rdx],al
   14000ee00:	and    al,0x34
   14000ee02:	lar    esp,WORD PTR [rcx+rax*1]
   14000ee06:	or     al,0x2
   14000ee08:	adc    BYTE PTR [rax+0x0],dl
   14000ee0b:	add    BYTE PTR [rbx+rdx*4],cl
   14000ee0e:	add    BYTE PTR [rax],al
   14000ee10:	push   rax
   14000ee11:	adc    BYTE PTR [rax],al
   14000ee13:	add    BYTE PTR [rcx],bl
   14000ee15:	xor    BYTE PTR [rbx],cl
   14000ee17:	add    BYTE PTR [rdi],bl
   14000ee19:	xor    al,0x60
   14000ee1b:	add    BYTE PTR [rdi],bl
   14000ee1d:	add    DWORD PTR [rsi+0x0],edx
   14000ee20:	adc    al,dh
   14000ee22:	(bad)  
   14000ee23:	loopne 0x14000ee31
   14000ee25:	ror    BYTE PTR [rdx],1
   14000ee27:	ror    BYTE PTR [rax],0x70
   14000ee2a:	(bad)  
   14000ee2b:	(bad)  
   14000ee2c:	(bad)  
   14000ee2d:	push   rax
   14000ee2e:	add    BYTE PTR [rax],al
   14000ee30:	or     al,0x93
   14000ee32:	add    BYTE PTR [rax],al
   14000ee34:	movabs al,ds:0xd00061c19000002
   14000ee3d:	xor    al,0x15
   14000ee3f:	add    BYTE PTR [rip+0x7e009d2],cl        # 0x147e0f817
   14000ee45:	jo     0x14000ee4d
   14000ee47:	(bad)  
   14000ee48:	or     al,0x93
   14000ee4a:	add    BYTE PTR [rax],al
   14000ee4c:	(bad)  
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    BYTE PTR [rcx],cl
   14000ee51:	sbb    DWORD PTR [rdx],ecx
   14000ee53:	add    BYTE PTR [rcx],bl
   14000ee55:	(bad)  
   14000ee56:	or     eax,DWORD PTR [rax]
   14000ee58:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000ee5c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000ee60:	sbb    DWORD PTR [rax+rcx*1],esi
   14000ee63:	add    BYTE PTR [rcx],bl
   14000ee65:	push   rdx
   14000ee66:	adc    eax,0x8e96e0
   14000ee6b:	add    BYTE PTR [rcx],al
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rcx+0x1a000088],ch
   14000ee75:	mov    al,BYTE PTR [rax]
   14000ee77:	add    BYTE PTR [rsp+rdx*4-0x75e60000],ch
   14000ee7e:	add    BYTE PTR [rax],al
   14000ee80:	add    DWORD PTR [rax],eax
   14000ee82:	add    BYTE PTR [rax],al
   14000ee84:	adc    DWORD PTR [rdx],ecx
   14000ee86:	add    al,0x0
   14000ee88:	or     dh,BYTE PTR [rsi+rax*1]
   14000ee8b:	add    BYTE PTR [rdx],cl
   14000ee8d:	xor    al,BYTE PTR [rsi]
   14000ee8f:	jo     0x14000ee27
   14000ee91:	mov    es,WORD PTR [rax]
   14000ee93:	add    BYTE PTR [rcx],al
   14000ee95:	add    BYTE PTR [rax],al
   14000ee97:	add    BYTE PTR [rip+0x4a00008b],al        # 0x18a00ef28
   14000ee9d:	mov    eax,DWORD PTR [rax]
   14000ee9f:	add    al,dl
   14000eea1:	xchg   esp,eax
   14000eea2:	add    BYTE PTR [rax],al
   14000eea4:	add    BYTE PTR [rax],al
   14000eea6:	add    BYTE PTR [rax],al
   14000eea8:	or     DWORD PTR [rcx+rax*1],eax
   14000eeab:	add    BYTE PTR [rdx+riz*1],al
   14000eeae:	add    BYTE PTR [rax],al
   14000eeb0:	xchg   esi,eax
   14000eeb1:	mov    es,WORD PTR [rax]
   14000eeb3:	add    BYTE PTR [rcx],al
   14000eeb5:	add    BYTE PTR [rax],al
   14000eeb7:	add    BYTE PTR [rsp+rcx*4],ch
   14000eeba:	add    BYTE PTR [rax],al
   14000eebc:	(bad)  
   14000eebd:	mov    WORD PTR [rax],es
   14000eebf:	add    BYTE PTR [rcx],al
   14000eec1:	add    BYTE PTR [rax],al
   14000eec3:	add    BYTE PTR [rdx-0x74],ah
   14000eec6:	add    BYTE PTR [rax],al
   14000eec8:	or     DWORD PTR [rdx],ecx
   14000eeca:	add    al,0x0
   14000eecc:	or     dh,BYTE PTR [rsi+rax*1]
   14000eecf:	add    BYTE PTR [rdx],cl
   14000eed1:	xor    al,BYTE PTR [rsi]
   14000eed3:	jo     0x14000ee6b
   14000eed5:	mov    es,WORD PTR [rax]
   14000eed7:	add    BYTE PTR [rcx],al
   14000eed9:	add    BYTE PTR [rax],al
   14000eedb:	add    BYTE PTR [rip+0x6000008d],ch        # 0x1a000ef6e
   14000eee1:	lea    eax,[rax]
   14000eee3:	add    BYTE PTR [rax],al
   14000eee5:	xchg   ebp,eax
   14000eee6:	add    BYTE PTR [rax],al
   14000eee8:	(bad)  
   14000eee9:	lea    eax,[rax]
   14000eeeb:	add    BYTE PTR [rcx],al
   14000eeed:	or     eax,0x340d0004
   14000eef2:	or     DWORD PTR [rax],eax
   14000eef4:	or     eax,0x1500632
   14000eef9:	or     al,0x2
   14000eefb:	add    BYTE PTR [rcx+rax*1],cl
   14000eefe:	adc    DWORD PTR [rax],eax
   14000ef00:	add    DWORD PTR [rax],eax
   14000ef02:	add    BYTE PTR [rax],al
   14000ef04:	add    DWORD PTR [rax],ebx
   14000ef06:	add    DWORD PTR [rax],eax
   14000ef08:	sbb    dl,al
   14000ef0a:	add    BYTE PTR [rax],al
   14000ef0c:	add    DWORD PTR [rax],ebx
   14000ef0e:	add    DWORD PTR [rax],eax
   14000ef10:	sbb    dl,al
   14000ef12:	add    BYTE PTR [rax],al
   14000ef14:	add    BYTE PTR [rax],al
   14000ef16:	add    BYTE PTR [rax],al
   14000ef18:	add    DWORD PTR [rcx+rax*1],eax
   14000ef1b:	add    BYTE PTR [rdx+rdx*1],al
   14000ef1e:	add    BYTE PTR [rax],al
   14000ef20:	add    DWORD PTR [rax],eax
   14000ef22:	add    BYTE PTR [rax],al
   14000ef24:	and    BYTE PTR [rdi+0x1a380000],dh
   14000ef2a:	add    DWORD PTR [rax],eax
   14000ef2c:	add    BYTE PTR [rax],dh
   14000ef2e:	add    DWORD PTR [rax],eax
   14000ef30:	sub    bh,0x0
   14000ef33:	add    BYTE PTR [rax],ah
   14000ef35:	lock add BYTE PTR [rax],al
	...
   14000ef40:	add    DWORD PTR [rax],eax
   14000ef42:	add    BYTE PTR [rax],al
   14000ef44:	mov    al,0xb7
   14000ef46:	add    BYTE PTR [rax],al
   14000ef48:	rex.W sbb al,BYTE PTR [rcx]
   14000ef4b:	add    BYTE PTR [rax],dl
   14000ef4d:	xor    BYTE PTR [rcx],al
   14000ef4f:	add    BYTE PTR [rax+0x300000ef],dl
   14000ef55:	lock add BYTE PTR [rax],al
	...
   14000ef80:	mov    al,0xef
	...
   14000ef8e:	add    BYTE PTR [rax],al
   14000ef90:	call   0x14000f084
   14000ef95:	add    BYTE PTR [rax],al
   14000ef97:	add    BYTE PTR [rax],al
   14000ef99:	lock add BYTE PTR [rax],al
   14000ef9c:	add    BYTE PTR [rax],al
   14000ef9e:	add    BYTE PTR [rax],al
   14000efa0:	(bad)  
   14000efa1:	out    dx,eax
	...
   14000efb2:	push   rdi
   14000efb3:	imul   ebp,DWORD PTR [rsi+0x42],0x65526f69
   14000efba:	ins    DWORD PTR es:[rdi],dx
   14000efbb:	outs   dx,DWORD PTR ds:[rsi]
   14000efbc:	jbe    0x14000f023
   14000efbe:	rex.B ins BYTE PTR es:[rdi],dx
   14000efc0:	ins    BYTE PTR es:[rdi],dx
   14000efc1:	rex.XB jb 0x14000f029
   14000efc4:	fs outs dx,BYTE PTR gs:[rsi]
   14000efc7:	je     0x14000f032
   14000efc9:	(bad)  
   14000efca:	ins    BYTE PTR es:[rdi],dx
   14000efcb:	jae    0x14000efcd
   14000efcd:	add    BYTE PTR [rax],al
   14000efcf:	add    BYTE PTR [rdi+0x69],dl
   14000efd2:	outs   dx,BYTE PTR ds:[rsi]
   14000efd3:	rex.X imul ebp,DWORD PTR [rdi+0x47],0x6e457465
   14000efdb:	(bad)  
   14000efdc:	(bad)  
   14000efdd:	ins    BYTE PTR es:[rdi],dx
   14000efde:	gs fs push rbx
   14000efe1:	gs je  0x14000f058
   14000efe4:	imul   ebp,DWORD PTR [rsi+0x67],0x57000000
   14000efeb:	imul   ebp,DWORD PTR [rsi+0x42],0x65476f69
   14000eff2:	je     0x14000f040
   14000eff4:	outs   dx,DWORD PTR ds:[rsi]
   14000eff5:	outs   dx,DWORD PTR ds:[esi]
   14000eff7:	outs   dx,BYTE PTR ds:[rsi]
   14000eff8:	push   rbx
   14000eff9:	gs je  0x14000f070
   14000effc:	imul   ebp,DWORD PTR [rsi+0x67],0x57000000
   14000f003:	imul   ebp,DWORD PTR [rsi+0x42],0x65476f69
   14000f00a:	je     0x14000f050
   14000f00c:	outs   dx,DWORD PTR ds:[rsi]
   14000f00d:	ins    DWORD PTR es:[rdi],dx
   14000f00e:	(bad)  
   14000f00f:	imul   ebp,DWORD PTR [rsi+0x4c],0x6e6f676f
   14000f016:	push   rbx
   14000f017:	gs je  0x14000f08e
   14000f01a:	imul   ebp,DWORD PTR [rsi+0x67],0x0
	...
   14000f04d:	add    BYTE PTR [rax],al
   14000f04f:	add    BYTE PTR [rax-0xe],cl
	...
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	repnz clc 
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	add    BYTE PTR [rax-0xd000000],dh
	...
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	test   cl,bh
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	mov    eax,0x280000b0
   14000f079:	test   BYTE PTR [rax],0x0
	...
   14000f084:	pushf  
   14000f085:	cli    
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	loopne 0x14000f03d
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	cmp    ah,dh
	...
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	js     0x14000f099
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	lock mov cl,0x0
   14000f09f:	add    BYTE PTR [rax+0xf5],cl
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    BYTE PTR [rax],al
   14000f0a9:	add    BYTE PTR [rax],al
   14000f0ab:	add    BYTE PTR [rax+0x400000ff],bl
   14000f0b1:	mov    bl,0x0
   14000f0b3:	add    BYTE PTR [rax+0xf4],dl
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    BYTE PTR [rax],al
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    BYTE PTR [rdx+0x480000ff],bh
   14000f0c5:	mov    dl,0x0
   14000f0c7:	add    al,cl
   14000f0c9:	hlt    
	...
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	in     al,0xff
   14000f0d6:	add    BYTE PTR [rax],al
   14000f0d8:	xor    BYTE PTR [rdx-0xaf00000],0x0
	...
   14000f0e7:	add    BYTE PTR [rsi],cl
   14000f0e9:	add    BYTE PTR [rcx],al
   14000f0eb:	add    al,cl
   14000f0ed:	mov    dl,0x0
   14000f0ef:	add    al,dh
   14000f0f1:	hlt    
	...
   14000f0fa:	add    BYTE PTR [rax],al
   14000f0fc:	xor    al,BYTE PTR [rax]
   14000f0fe:	add    DWORD PTR [rax],eax
   14000f100:	test   al,0xb2
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	cwde   
   14000f105:	cmc    
	...
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	pop    rsp
   14000f111:	add    BYTE PTR [rcx],al
   14000f113:	add    BYTE PTR [rax-0x4d],dl
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	push   0xf5
   14000f11d:	add    BYTE PTR [rax],al
   14000f11f:	add    BYTE PTR [rax],al
   14000f121:	add    BYTE PTR [rax],al
   14000f123:	add    BYTE PTR [rax+0x20000100],al
   14000f129:	mov    bl,0x0
   14000f12b:	add    BYTE PTR [rax+0xf4],bh
   14000f131:	add    BYTE PTR [rax],al
   14000f133:	add    BYTE PTR [rax],al
   14000f135:	add    BYTE PTR [rax],al
   14000f137:	add    BYTE PTR [rsi+0x70000100],ah
   14000f13d:	mov    dl,0x0
   14000f13f:	add    BYTE PTR [rax+0xf5],bh
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    BYTE PTR [rax],al
   14000f149:	add    BYTE PTR [rax],al
   14000f14b:	add    dh,al
   14000f14d:	add    BYTE PTR [rcx],al
   14000f14f:	add    BYTE PTR [rax-0x4d],dh
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	enter  0xf2,0x0
	...
   14000f160:	(bad)  
   14000f161:	add    BYTE PTR [rcx],al
   14000f163:	add    BYTE PTR [rax-0x4fffff50],al
   14000f169:	test   DWORD PTR [rax],0x0
   14000f16f:	add    BYTE PTR [rax],al
   14000f171:	add    BYTE PTR [rax],al
   14000f173:	add    ah,dh
   14000f175:	add    BYTE PTR [rcx],al
   14000f177:	add    BYTE PTR [rax-0x4b],ch
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	add    bh,dh
	...
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	add    BYTE PTR [rcx],al
   14000f18a:	add    DWORD PTR [rax],eax
   14000f18c:	mov    eax,0x780000b4
   14000f191:	repz add BYTE PTR [rax],al
	...
   14000f19c:	(bad)  
   14000f19d:	add    DWORD PTR [rcx],eax
   14000f19f:	add    BYTE PTR [rax],dh
   14000f1a1:	mov    cl,0x0
   14000f1a3:	add    BYTE PTR [rax],ah
   14000f1a5:	cmc    
	...
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	sbb    al,BYTE PTR [rcx]
   14000f1b2:	add    DWORD PTR [rax],eax
   14000f1b4:	fdiv   DWORD PTR [rdx-0xb580000]
	...
   14000f1c2:	add    BYTE PTR [rax],al
   14000f1c4:	add    DWORD PTR ds:[rcx],eax
   14000f1c7:	add    BYTE PTR [rax-0x4e],ah
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	clc    
   14000f1cd:	cmc    
	...
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	push   rsp
   14000f1d9:	add    al,BYTE PTR [rcx]
   14000f1db:	add    BYTE PTR [rax-0x37ffff4d],dh
   14000f1e1:	repz add BYTE PTR [rax],al
	...
   14000f1ec:	jle    0x14000f1f0
   14000f1ee:	add    DWORD PTR [rax],eax
   14000f1f0:	xor    BYTE PTR [rcx-0x8f00000],0x0
	...
   14000f1ff:	add    BYTE PTR [rax],ah
   14000f201:	add    al,0x1
   14000f203:	add    al,cl
   14000f205:	mov    ah,0x0
   14000f207:	add    BYTE PTR [rax],dl
   14000f209:	hlt    
	...
   14000f212:	add    BYTE PTR [rax],al
   14000f214:	mov    BYTE PTR [rcx+rax*1],al
   14000f217:	add    al,cl
   14000f219:	mov    cl,0x0
   14000f21b:	add    BYTE PTR [rax],ch
   14000f21d:	hlt    
	...
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	pop    rsi
   14000f229:	add    eax,0xb1e00001
	...
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	shl    bh,0x0
   14000f24b:	add    BYTE PTR [rax],al
   14000f24d:	add    BYTE PTR [rax],al
   14000f24f:	add    al,dl
   14000f251:	test   DWORD PTR [rax],0x0
   14000f257:	add    al,ah
   14000f259:	test   DWORD PTR [rax],0x0
   14000f25f:	add    dh,dh
   14000f261:	test   DWORD PTR [rax],0x0
   14000f267:	add    BYTE PTR [rsi],cl
   14000f269:	clc    
   14000f26a:	add    BYTE PTR [rax],al
   14000f26c:	add    BYTE PTR [rax],al
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	es clc 
   14000f272:	add    BYTE PTR [rax],al
   14000f274:	add    BYTE PTR [rax],al
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	cmp    al,0xf8
   14000f27a:	add    BYTE PTR [rax],al
   14000f27c:	add    BYTE PTR [rax],al
   14000f27e:	add    BYTE PTR [rax],al
   14000f280:	push   rdx
   14000f281:	clc    
   14000f282:	add    BYTE PTR [rax],al
   14000f284:	add    BYTE PTR [rax],al
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	data16 clc 
   14000f28a:	add    BYTE PTR [rax],al
   14000f28c:	add    BYTE PTR [rax],al
   14000f28e:	add    BYTE PTR [rax],al
   14000f290:	js     0x14000f28a
   14000f292:	add    BYTE PTR [rax],al
   14000f294:	add    BYTE PTR [rax],al
   14000f296:	add    BYTE PTR [rax],al
   14000f298:	mov    ?,eax
   14000f29a:	add    BYTE PTR [rax],al
   14000f29c:	add    BYTE PTR [rax],al
   14000f29e:	add    BYTE PTR [rax],al
   14000f2a0:	movabs al,ds:0xd8000000000000f8
   14000f2a9:	clc    
   14000f2aa:	add    BYTE PTR [rax],al
   14000f2ac:	add    BYTE PTR [rax],al
   14000f2ae:	add    BYTE PTR [rax],al
   14000f2b0:	xchg   esp,eax
   14000f2b1:	add    al,0x1
   14000f2b3:	add    BYTE PTR [rax],al
   14000f2b5:	add    BYTE PTR [rax],al
   14000f2b7:	add    BYTE PTR [rsi+0x104],ah
	...
   14000f2c5:	add    BYTE PTR [rax],al
   14000f2c7:	add    al,ch
   14000f2c9:	cld    
   14000f2ca:	add    BYTE PTR [rax],al
   14000f2cc:	add    BYTE PTR [rax],al
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	test   ch,bh
   14000f2d2:	add    BYTE PTR [rax],al
   14000f2d4:	add    BYTE PTR [rax],al
   14000f2d6:	add    BYTE PTR [rax],al
   14000f2d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f2d9:	std    
   14000f2da:	add    BYTE PTR [rax],al
   14000f2dc:	add    BYTE PTR [rax],al
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	mov    esp,0xfd
   14000f2e5:	add    BYTE PTR [rax],al
   14000f2e7:	add    al,dl
   14000f2e9:	std    
   14000f2ea:	add    BYTE PTR [rax],al
   14000f2ec:	add    BYTE PTR [rax],al
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	add    al,0xfd
	...
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	ret    0x104
   14000f303:	add    BYTE PTR [rax],al
   14000f305:	add    BYTE PTR [rax],al
   14000f307:	add    BYTE PTR [rsi+0x104],dh
   14000f30d:	add    BYTE PTR [rax],al
   14000f30f:	add    BYTE PTR [rax-0x7],bh
   14000f312:	add    BYTE PTR [rax],al
   14000f314:	add    BYTE PTR [rax],al
   14000f316:	add    BYTE PTR [rax],al
   14000f318:	push   0xfffffffffffffff9
   14000f31a:	add    BYTE PTR [rax],al
   14000f31c:	add    BYTE PTR [rax],al
   14000f31e:	add    BYTE PTR [rax],al
   14000f320:	pop    rdx
   14000f321:	stc    
   14000f322:	add    BYTE PTR [rax],al
   14000f324:	add    BYTE PTR [rax],al
   14000f326:	add    BYTE PTR [rax],al
   14000f328:	rex.WX stc 
   14000f32a:	add    BYTE PTR [rax],al
   14000f32c:	add    BYTE PTR [rax],al
   14000f32e:	add    BYTE PTR [rax],al
   14000f330:	ss stc 
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	add    BYTE PTR [rax],al
   14000f336:	add    BYTE PTR [rax],al
   14000f338:	sub    bh,cl
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	add    BYTE PTR [rax],al
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	adc    al,0xf9
   14000f342:	add    BYTE PTR [rax],al
   14000f344:	add    BYTE PTR [rax],al
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	add    cl,bh
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	add    BYTE PTR [rax],al
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	loopne 0x14000f356
   14000f352:	add    DWORD PTR [rax],eax
   14000f354:	add    BYTE PTR [rax],al
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	(bad)  
   14000f359:	add    al,0x1
   14000f35b:	add    BYTE PTR [rax],al
   14000f35d:	add    BYTE PTR [rax],al
   14000f35f:	add    BYTE PTR [rsi],dl
   14000f361:	add    eax,0x1
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	inc    BYTE PTR [rcx+rax*1]
	...
   14000f377:	add    BYTE PTR [rdx],ch
   14000f379:	add    al,0x1
   14000f37b:	add    BYTE PTR [rax],al
   14000f37d:	add    BYTE PTR [rax],al
   14000f37f:	add    BYTE PTR [rsi-0x1],al
   14000f382:	add    BYTE PTR [rax],al
   14000f384:	add    BYTE PTR [rax],al
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	inc    DWORD PTR es:[rax]
   14000f38b:	add    BYTE PTR [rax],al
   14000f38d:	add    BYTE PTR [rax],al
   14000f38f:	add    BYTE PTR [rdx],cl
   14000f391:	inc    DWORD PTR [rax]
   14000f393:	add    BYTE PTR [rax],al
   14000f395:	add    BYTE PTR [rax],al
   14000f397:	add    BYTE PTR [rdx],dl
   14000f399:	inc    BYTE PTR [rax]
   14000f39b:	add    BYTE PTR [rax],al
   14000f39d:	add    BYTE PTR [rax],al
   14000f39f:	add    ah,bh
   14000f3a1:	std    
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	add    BYTE PTR [rax],al
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	in     al,0xfd
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	add    BYTE PTR [rax],al
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	inc    WORD PTR [rax]
   14000f3b3:	add    BYTE PTR [rax],al
   14000f3b5:	add    BYTE PTR [rax],al
   14000f3b7:	add    BYTE PTR [rsi],bh
   14000f3b9:	add    al,0x1
	...
   14000f3c7:	add    BYTE PTR [rcx+rax*1+0x1],bh
   14000f3cb:	add    BYTE PTR [rax],al
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rcx+rax*1+0x1],cl
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	out    0x1,al
   14000f3da:	add    DWORD PTR [rax],eax
   14000f3dc:	add    BYTE PTR [rax],al
   14000f3de:	add    BYTE PTR [rax],al
   14000f3e0:	cmp    BYTE PTR [rdx],al
   14000f3e2:	add    DWORD PTR [rax],eax
   14000f3e4:	add    BYTE PTR [rax],al
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	sub    al,BYTE PTR [rdx]
   14000f3ea:	add    DWORD PTR [rax],eax
   14000f3ec:	add    BYTE PTR [rax],al
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	add    BYTE PTR [rdx],al
   14000f3f2:	add    DWORD PTR [rax],eax
   14000f3f4:	add    BYTE PTR [rax],al
   14000f3f6:	add    BYTE PTR [rax],al
   14000f3f8:	outs   dx,BYTE PTR ds:[rsi]
   14000f3f9:	add    DWORD PTR [rcx],eax
   14000f3fb:	add    BYTE PTR [rax],al
   14000f3fd:	add    BYTE PTR [rax],al
   14000f3ff:	add    BYTE PTR [rax],dl
   14000f401:	add    al,BYTE PTR [rcx]
	...
   14000f40f:	add    BYTE PTR [rax+0x4],ch
   14000f412:	add    DWORD PTR [rax],eax
   14000f414:	add    BYTE PTR [rax],al
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	push   rax
   14000f419:	add    al,0x1
	...
   14000f427:	add    BYTE PTR [rdx+0x5],al
   14000f42a:	add    DWORD PTR [rax],eax
	...
   14000f438:	es sti 
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	add    BYTE PTR [rax],al
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	rex.WRX sti 
   14000f442:	add    BYTE PTR [rax],al
   14000f444:	add    BYTE PTR [rax],al
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	jbe    0x14000f445
   14000f44a:	add    BYTE PTR [rax],al
   14000f44c:	add    BYTE PTR [rax],al
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	adc    al,0xfb
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	add    BYTE PTR [rax],al
   14000f456:	add    BYTE PTR [rax],al
   14000f458:	ds sti 
   14000f45a:	add    BYTE PTR [rax],al
   14000f45c:	add    BYTE PTR [rax],al
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	(bad)  
   14000f461:	sti    
   14000f462:	add    BYTE PTR [rax],al
   14000f464:	add    BYTE PTR [rax],al
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	mov    esp,0xfa
   14000f46d:	add    BYTE PTR [rax],al
   14000f46f:	add    al,dl
   14000f471:	cli    
   14000f472:	add    BYTE PTR [rax],al
   14000f474:	add    BYTE PTR [rax],al
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	add    bh,bl
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	add    BYTE PTR [rax],al
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	call   0x14000f57f
	...
   14000f48d:	add    BYTE PTR [rax],al
   14000f48f:	add    BYTE PTR [rdx-0x4],bh
   14000f492:	add    BYTE PTR [rax],al
   14000f494:	add    BYTE PTR [rax],al
   14000f496:	add    BYTE PTR [rax],al
   14000f498:	xchg   esi,eax
   14000f499:	sti    
	...
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	pop    rax
   14000f4a9:	inc    DWORD PTR [rax]
	...
   14000f4b7:	add    BYTE PTR [rdx+0xfc],ch
	...
   14000f4c5:	add    BYTE PTR [rax],al
   14000f4c7:	add    BYTE PTR [rbx+rdi*8+0x0],dh
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	clc    
   14000f4d1:	inc    BYTE PTR [rax]
   14000f4d3:	add    BYTE PTR [rax],al
   14000f4d5:	add    BYTE PTR [rax],al
   14000f4d7:	add    dh,ah
   14000f4d9:	inc    BYTE PTR [rax]
   14000f4db:	add    BYTE PTR [rax],al
   14000f4dd:	add    BYTE PTR [rax],al
   14000f4df:	add    al,bl
   14000f4e1:	inc    BYTE PTR [rax]
	...
   14000f4ef:	add    dl,ah
   14000f4f1:	sti    
   14000f4f2:	add    BYTE PTR [rax],al
   14000f4f4:	add    BYTE PTR [rax],al
   14000f4f6:	add    BYTE PTR [rax],al
   14000f4f8:	xchg   esi,eax
   14000f4f9:	cld    
   14000f4fa:	add    BYTE PTR [rax],al
   14000f4fc:	add    BYTE PTR [rax],al
   14000f4fe:	add    BYTE PTR [rax],al
   14000f500:	clc    
   14000f501:	sti    
	...
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	enter  0xfb,0x0
	...
   14000f520:	(bad)  
   14000f521:	inc    BYTE PTR [rax]
   14000f523:	add    BYTE PTR [rax],al
   14000f525:	add    BYTE PTR [rax],al
   14000f527:	add    BYTE PTR [rsi+rdi*8+0x0],dl
   14000f52b:	add    BYTE PTR [rax],al
   14000f52d:	add    BYTE PTR [rax],al
   14000f52f:	add    BYTE PTR [rax-0x2],ch
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	add    BYTE PTR [rax],al
   14000f536:	add    BYTE PTR [rax],al
   14000f538:	xor    al,0xfe
   14000f53a:	add    BYTE PTR [rax],al
   14000f53c:	add    BYTE PTR [rax],al
   14000f53e:	add    BYTE PTR [rax],al
   14000f540:	rex.RX inc BYTE PTR [rax]
   14000f543:	add    BYTE PTR [rax],al
   14000f545:	add    BYTE PTR [rax],al
   14000f547:	add    BYTE PTR [rsi+rdi*8],ah
   14000f54a:	add    BYTE PTR [rax],al
   14000f54c:	add    BYTE PTR [rax],al
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	js     0x14000f550
   14000f552:	add    BYTE PTR [rax],al
   14000f554:	add    BYTE PTR [rax],al
   14000f556:	add    BYTE PTR [rax],al
   14000f558:	mov    bh,dh
	...
   14000f566:	add    BYTE PTR [rax],al
   14000f568:	cmp    ah,bh
   14000f56a:	add    BYTE PTR [rax],al
   14000f56c:	add    BYTE PTR [rax],al
   14000f56e:	add    BYTE PTR [rax],al
   14000f570:	data16 cld 
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	add    BYTE PTR [rax],al
   14000f576:	add    BYTE PTR [rax],al
   14000f578:	rex.WR cld 
	...
   14000f586:	add    BYTE PTR [rax],al
   14000f588:	mov    ?,ebx
	...
   14000f596:	add    BYTE PTR [rax],al
   14000f598:	sub    ah,bh
   14000f59a:	add    BYTE PTR [rax],al
   14000f59c:	add    BYTE PTR [rax],al
   14000f59e:	add    BYTE PTR [rax],al
   14000f5a0:	(bad)  
   14000f5a1:	cld    
   14000f5a2:	add    BYTE PTR [rax],al
   14000f5a4:	add    BYTE PTR [rax],al
   14000f5a6:	add    BYTE PTR [rax],al
   14000f5a8:	xor    bh,ch
	...
   14000f5b6:	add    BYTE PTR [rax],al
   14000f5b8:	push   0xfd
   14000f5bd:	add    BYTE PTR [rax],al
   14000f5bf:	add    BYTE PTR [rsi+rdi*8+0x0],bl
   14000f5c6:	add    BYTE PTR [rax],al
   14000f5c8:	scas   al,BYTE PTR es:[rdi]
   14000f5c9:	inc    BYTE PTR [rax]
   14000f5cb:	add    BYTE PTR [rax],al
   14000f5cd:	add    BYTE PTR [rax],al
   14000f5cf:	add    BYTE PTR [rsi],ah
   14000f5d1:	std    
   14000f5d2:	add    BYTE PTR [rax],al
   14000f5d4:	add    BYTE PTR [rax],al
   14000f5d6:	add    BYTE PTR [rax],al
   14000f5d8:	mov    eax,0xfc
   14000f5dd:	add    BYTE PTR [rax],al
   14000f5df:	add    al,cl
   14000f5e1:	cld    
   14000f5e2:	add    BYTE PTR [rax],al
   14000f5e4:	add    BYTE PTR [rax],al
   14000f5e6:	add    BYTE PTR [rax],al
   14000f5e8:	sar    ah,cl
	...
   14000f5f6:	add    BYTE PTR [rax],al
   14000f5f8:	retf   0x101
   14000f5fb:	add    BYTE PTR [rax],al
   14000f5fd:	add    BYTE PTR [rax],al
   14000f5ff:	add    BYTE PTR [rdx+0x101],bh
   14000f605:	add    BYTE PTR [rax],al
   14000f607:	add    BYTE PTR [rsi+0x101],bl
   14000f60d:	add    BYTE PTR [rax],al
   14000f60f:	add    BYTE PTR [rsi+0x1],bl
   14000f612:	add    DWORD PTR [rax],eax
   14000f614:	add    BYTE PTR [rax],al
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	(bad)  
   14000f619:	add    DWORD PTR [rcx],eax
	...
   14000f627:	add    BYTE PTR [rdx+0x105],al
   14000f62d:	add    BYTE PTR [rax],al
   14000f62f:	add    BYTE PTR [rdx+0xf9],dl
   14000f635:	add    BYTE PTR [rax],al
   14000f637:	add    BYTE PTR [rsi+0xf9],bl
   14000f63d:	add    BYTE PTR [rax],al
   14000f63f:	add    BYTE PTR [rsi],dh
   14000f641:	add    eax,0x1
   14000f646:	add    BYTE PTR [rax],al
   14000f648:	cs add eax,0x1
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	lods   al,BYTE PTR ds:[rsi]
   14000f651:	stc    
   14000f652:	add    BYTE PTR [rax],al
   14000f654:	add    BYTE PTR [rax],al
   14000f656:	add    BYTE PTR [rax],al
   14000f658:	mov    ah,0xf9
   14000f65a:	add    BYTE PTR [rax],al
   14000f65c:	add    BYTE PTR [rax],al
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	mov    esi,0xf9
   14000f665:	add    BYTE PTR [rax],al
   14000f667:	add    dl,cl
   14000f669:	stc    
   14000f66a:	add    BYTE PTR [rax],al
   14000f66c:	add    BYTE PTR [rax],al
   14000f66e:	add    BYTE PTR [rax],al
   14000f670:	fdivr  st,st(1)
   14000f672:	add    BYTE PTR [rax],al
   14000f674:	add    BYTE PTR [rax],al
   14000f676:	add    BYTE PTR [rax],al
   14000f678:	out    0xf9,al
   14000f67a:	add    BYTE PTR [rax],al
   14000f67c:	add    BYTE PTR [rax],al
   14000f67e:	add    BYTE PTR [rax],al
   14000f680:	clc    
   14000f681:	stc    
   14000f682:	add    BYTE PTR [rax],al
   14000f684:	add    BYTE PTR [rax],al
   14000f686:	add    BYTE PTR [rax],al
   14000f688:	or     bh,dl
   14000f68a:	add    BYTE PTR [rax],al
   14000f68c:	add    BYTE PTR [rax],al
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	adc    bh,dl
   14000f692:	add    BYTE PTR [rax],al
   14000f694:	add    BYTE PTR [rax],al
   14000f696:	add    BYTE PTR [rax],al
   14000f698:	sbb    bh,dl
   14000f69a:	add    BYTE PTR [rax],al
   14000f69c:	add    BYTE PTR [rax],al
   14000f69e:	add    BYTE PTR [rax],al
   14000f6a0:	and    al,0xfa
   14000f6a2:	add    BYTE PTR [rax],al
   14000f6a4:	add    BYTE PTR [rax],al
   14000f6a6:	add    BYTE PTR [rax],al
   14000f6a8:	cmp    dl,bh
   14000f6aa:	add    BYTE PTR [rax],al
   14000f6ac:	add    BYTE PTR [rax],al
   14000f6ae:	add    BYTE PTR [rax],al
   14000f6b0:	rex.R cli 
   14000f6b2:	add    BYTE PTR [rax],al
   14000f6b4:	add    BYTE PTR [rax],al
   14000f6b6:	add    BYTE PTR [rax],al
   14000f6b8:	pop    rsp
   14000f6b9:	cli    
   14000f6ba:	add    BYTE PTR [rax],al
   14000f6bc:	add    BYTE PTR [rax],al
   14000f6be:	add    BYTE PTR [rax],al
   14000f6c0:	data16 cli 
   14000f6c2:	add    BYTE PTR [rax],al
   14000f6c4:	add    BYTE PTR [rax],al
   14000f6c6:	add    BYTE PTR [rax],al
   14000f6c8:	jb     0x14000f6c4
   14000f6ca:	add    BYTE PTR [rax],al
   14000f6cc:	add    BYTE PTR [rax],al
   14000f6ce:	add    BYTE PTR [rax],al
   14000f6d0:	jp     0x14000f6cc
   14000f6d2:	add    BYTE PTR [rax],al
   14000f6d4:	add    BYTE PTR [rax],al
   14000f6d6:	add    BYTE PTR [rax],al
   14000f6d8:	test   dl,bh
   14000f6da:	add    BYTE PTR [rax],al
   14000f6dc:	add    BYTE PTR [rax],al
   14000f6de:	add    BYTE PTR [rax],al
   14000f6e0:	mov    WORD PTR [rip+0x1],es        # 0x14000f6e7
   14000f6e6:	add    BYTE PTR [rax],al
   14000f6e8:	xchg   edx,eax
   14000f6e9:	cli    
   14000f6ea:	add    BYTE PTR [rax],al
   14000f6ec:	add    BYTE PTR [rax],al
   14000f6ee:	add    BYTE PTR [rax],al
   14000f6f0:	test   al,0xfa
	...
   14000f6fe:	add    BYTE PTR [rax],al
   14000f700:	push   rsp
   14000f701:	std    
	...
   14000f70e:	add    BYTE PTR [rax],al
   14000f710:	mov    al,BYTE PTR [rdx]
   14000f712:	add    DWORD PTR [rax],eax
   14000f714:	add    BYTE PTR [rax],al
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	(bad)  
   14000f719:	add    al,0x1
   14000f71b:	add    BYTE PTR [rax],al
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    dl,ch
   14000f721:	add    eax,DWORD PTR [rcx]
   14000f723:	add    BYTE PTR [rax],al
   14000f725:	add    BYTE PTR [rax],al
   14000f727:	add    al,dl
   14000f729:	add    eax,DWORD PTR [rcx]
   14000f72b:	add    BYTE PTR [rax],al
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rbx+rax*1+0x1],bh
   14000f736:	add    BYTE PTR [rax],al
   14000f738:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f739:	add    eax,DWORD PTR [rcx]
   14000f73b:	add    BYTE PTR [rax],al
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    BYTE PTR [rdx+0x103],dl
   14000f745:	add    BYTE PTR [rax],al
   14000f747:	add    BYTE PTR [rbx+rax*1+0x1],al
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	push   0x3
   14000f752:	add    DWORD PTR [rax],eax
   14000f754:	add    BYTE PTR [rax],al
   14000f756:	add    BYTE PTR [rax],al
   14000f758:	push   rsi
   14000f759:	add    eax,DWORD PTR [rcx]
   14000f75b:	add    BYTE PTR [rax],al
   14000f75d:	add    BYTE PTR [rax],al
   14000f75f:	add    BYTE PTR [rsi],bh
   14000f761:	add    eax,DWORD PTR [rcx]
   14000f763:	add    BYTE PTR [rax],al
   14000f765:	add    BYTE PTR [rax],al
   14000f767:	add    BYTE PTR [rbx+rax*1],dh
   14000f76a:	add    DWORD PTR [rax],eax
   14000f76c:	add    BYTE PTR [rax],al
   14000f76e:	add    BYTE PTR [rax],al
   14000f770:	(bad)  
   14000f771:	add    eax,DWORD PTR [rcx]
   14000f773:	add    BYTE PTR [rax],al
   14000f775:	add    BYTE PTR [rax],al
   14000f777:	add    BYTE PTR [rax],al
   14000f779:	add    eax,DWORD PTR [rcx]
   14000f77b:	add    BYTE PTR [rax],al
   14000f77d:	add    BYTE PTR [rax],al
   14000f77f:	add    dl,dh
   14000f781:	add    al,BYTE PTR [rcx]
   14000f783:	add    BYTE PTR [rax],al
   14000f785:	add    BYTE PTR [rax],al
   14000f787:	add    dl,ah
   14000f789:	add    al,BYTE PTR [rcx]
   14000f78b:	add    BYTE PTR [rax],al
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    ah,cl
   14000f791:	add    al,BYTE PTR [rcx]
   14000f793:	add    BYTE PTR [rax],al
   14000f795:	add    BYTE PTR [rax],al
   14000f797:	add    BYTE PTR [rdx+rax*1+0x1],dh
   14000f79e:	add    BYTE PTR [rax],al
   14000f7a0:	sahf   
   14000f7a1:	add    al,BYTE PTR [rcx]
	...
   14000f7af:	add    BYTE PTR [rdx-0x3],al
	...
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	and    BYTE PTR [rbx],al
   14000f7c2:	push   rsp
   14000f7c3:	jb     0x14000f826
   14000f7c5:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000f7c8:	gs jae 0x14000f83e
   14000f7cb:	(bad)  
   14000f7cc:	add    BYTE PTR gs:[eax],al
   14000f7d0:	jnp    0x14000f7d4
   14000f7d2:	push   rdx
   14000f7d3:	gs addr32 rex.RXB
   14000f7d6:	gs je  0x14000f82f
   14000f7d9:	(bad)  
   14000f7da:	ins    BYTE PTR es:[rdi],dx
   14000f7db:	jne    0x14000f842
   14000f7dd:	push   rdi
   14000f7de:	add    BYTE PTR [rax],al
   14000f7e0:	jo     0x14000f7e3
   14000f7e2:	rex.RXB
   14000f7e3:	gs je  0x14000f83a
   14000f7e6:	jb     0x14000f849
   14000f7e8:	movsxd esp,DWORD PTR [rbp+0x45]
   14000f7eb:	outs   dx,BYTE PTR ds:[rsi]
   14000f7ec:	(bad)  
   14000f7ed:	(bad)  
   14000f7ee:	ins    BYTE PTR es:[rdi],dx
   14000f7ef:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000f7f2:	(bad)  
   14000f7f3:	addr32 jae 0x14000f7f6
   14000f7f6:	jb     0x14000f7f9
   14000f7f8:	rex.RXB
   14000f7f9:	gs je  0x14000f850
   14000f7fc:	jb     0x14000f85f
   14000f7fe:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000f801:	outs   dx,DWORD PTR ds:[rsi]
   14000f802:	addr32 addr32 gs jb 0x14000f84f
   14000f807:	(bad)  
   14000f808:	outs   dx,BYTE PTR ds:[rsi]
   14000f809:	fs ins BYTE PTR es:[rdi],dx
   14000f80b:	add    BYTE PTR gs:[rax],al
   14000f80e:	sub    eax,0x726e5503
   14000f813:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000f81c:	(bad)  
   14000f81d:	movsxd esp,DWORD PTR [rbp+0x47]
   14000f820:	jne    0x14000f88b
   14000f822:	fs jae 0x14000f825
   14000f825:	add    BYTE PTR [rcx+0x1],dh
   14000f828:	rex.RXB
   14000f829:	gs je  0x14000f880
   14000f82c:	jb     0x14000f88f
   14000f82e:	movsxd esp,DWORD PTR [rbp+0x45]
   14000f831:	outs   dx,BYTE PTR ds:[rsi]
   14000f832:	(bad)  
   14000f833:	(bad)  
   14000f834:	ins    BYTE PTR es:[rdi],dx
   14000f835:	gs rex.WR
   14000f837:	gs jbe 0x14000f89f
   14000f83a:	ins    BYTE PTR es:[rdi],dx
   14000f83b:	add    BYTE PTR [rdi+0x67655202],ch
   14000f841:	imul   esi,DWORD PTR [rbx+0x74],0x72547265
   14000f848:	(bad)  
   14000f849:	movsxd esp,DWORD PTR [rbp+0x47]
   14000f84c:	jne    0x14000f8b7
   14000f84e:	fs jae 0x14000f8a8
   14000f851:	add    BYTE PTR [rbx],dl
   14000f853:	add    cl,BYTE PTR [rdi+0x70]
   14000f856:	outs   dx,BYTE PTR gs:[rsi]
   14000f858:	push   rax
   14000f859:	jb     0x14000f8ca
   14000f85b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f85e:	jae    0x14000f8b4
   14000f860:	outs   dx,DWORD PTR ds:[rsi]
   14000f861:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000f865:	add    BYTE PTR [rax],bl
   14000f867:	add    cl,BYTE PTR [rdi+0x70]
   14000f86a:	outs   dx,BYTE PTR gs:[rsi]
   14000f86c:	push   rsp
   14000f86d:	push   0x64616572
   14000f872:	push   rsp
   14000f873:	outs   dx,DWORD PTR ds:[rsi]
   14000f874:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000f878:	outs   dx,DWORD PTR ds:[rsi]
   14000f879:	add    DWORD PTR [rdi+0x65],eax
   14000f87c:	je     0x14000f8d2
   14000f87e:	outs   dx,DWORD PTR ds:[rsi]
   14000f87f:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000f883:	outs   dx,BYTE PTR ds:[rsi]
   14000f884:	outs   dx,WORD PTR ds:[rsi]
   14000f886:	jb     0x14000f8f5
   14000f888:	(bad)  
   14000f889:	je     0x14000f8f4
   14000f88b:	outs   dx,DWORD PTR ds:[rsi]
   14000f88c:	outs   dx,BYTE PTR ds:[rsi]
   14000f88d:	add    bl,bh
   14000f88f:	add    DWORD PTR [rbp+0x61],ecx
   14000f892:	imul   esp,DWORD PTR [rbp+0x41],0x62
   14000f896:	jae    0x14000f907
   14000f898:	ins    BYTE PTR es:[rdi],dx
   14000f899:	jne    0x14000f90f
   14000f89b:	gs push rbx
   14000f89d:	add    BYTE PTR [rax],r8b
   14000f8a0:	add    DWORD PTR [rax],0x766e6f43
   14000f8a6:	gs jb  0x14000f91d
   14000f8a9:	push   rbx
   14000f8aa:	je     0x14000f91e
   14000f8ac:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   14000f8b3:	jb     0x14000f91e
   14000f8b5:	je     0x14000f930
   14000f8b7:	rex.R
   14000f8b8:	gs jae 0x14000f91e
   14000f8bb:	jb     0x14000f926
   14000f8bd:	jo     0x14000f933
   14000f8bf:	outs   dx,DWORD PTR ds:[rsi]
   14000f8c0:	jb     0x14000f916
   14000f8c2:	outs   dx,DWORD PTR ds:[rsi]
   14000f8c3:	push   rbx
   14000f8c4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f8c8:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000f8d0:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   14000f8d7:	add    BYTE PTR [rbx+0x0],bh
   14000f8da:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f8dc:	outs   dx,BYTE PTR ds:[rsi]
   14000f8dd:	jbe    0x14000f944
   14000f8df:	jb     0x14000f955
   14000f8e1:	push   rbx
   14000f8e2:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000f8ea:	outs   dx,BYTE PTR ds:[rsi]
   14000f8eb:	addr32 push rbx
   14000f8ed:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x56444100
   14000f8f5:	push   r8
   14000f8f7:	xor    rsi,QWORD PTR [r10]
   14000f8fa:	cs fs ins BYTE PTR es:[rdi],dx
   14000f8fd:	ins    BYTE PTR es:[rdi],dx
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	adc    BYTE PTR [rdx],al
   14000f902:	rex.RXB
   14000f903:	gs je  0x14000f949
   14000f906:	jne    0x14000f97a
   14000f908:	jb     0x14000f96f
   14000f90a:	outs   dx,BYTE PTR ds:[rsi]
   14000f90b:	je     0x14000f95d
   14000f90d:	jb     0x14000f97e
   14000f90f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f912:	jae    0x14000f914
   14000f914:	enter  0x5705,0x61
   14000f918:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000f920:	ins    BYTE PTR es:[edi],dx
   14000f922:	gs rex.WRXB (bad) 
   14000f925:	push   0x65
   14000f927:	movsxd esi,DWORD PTR [rax+rax*1+0x8]
   14000f92b:	add    eax,0x45746553
   14000f930:	jbe    0x14000f997
   14000f932:	outs   dx,BYTE PTR ds:[rsi]
   14000f933:	je     0x14000f935
   14000f935:	add    BYTE PTR [rdx+rax*1],dl
   14000f938:	rex.RXB
   14000f939:	gs je  0x14000f97f
   14000f93c:	jne    0x14000f9b0
   14000f93e:	jb     0x14000f9a5
   14000f940:	outs   dx,BYTE PTR ds:[rsi]
   14000f941:	je     0x14000f997
   14000f943:	push   0x64616572
   14000f948:	add    BYTE PTR [rax],al
   14000f94a:	push   rdi
   14000f94b:	add    al,BYTE PTR [rdi+0x65]
   14000f94e:	je     0x14000f99c
   14000f950:	(bad)  
   14000f951:	jae    0x14000f9c7
   14000f953:	rex.RB jb 0x14000f9c8
   14000f956:	outs   dx,DWORD PTR ds:[rsi]
   14000f957:	jb     0x14000f959
   14000f959:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   14000f960:	je     0x14000f9c7
   14000f962:	rex.RB jbe 0x14000f9ca
   14000f965:	outs   dx,BYTE PTR ds:[rsi]
   14000f966:	je     0x14000f9bf
   14000f968:	add    BYTE PTR [rax],al
   14000f96a:	jge    0x14000f96c
   14000f96c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000f96e:	outs   dx,DWORD PTR ds:[rsi]
   14000f96f:	jae    0x14000f9d6
   14000f971:	rex.W (bad) 
   14000f973:	outs   dx,BYTE PTR ds:[rsi]
   14000f974:	fs ins BYTE PTR es:[rdi],dx
   14000f976:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   14000f97d:	(bad)  
   14000f97e:	ins    BYTE PTR es:[rdi],dx
   14000f97f:	rex.RX jb 0x14000f9e7
   14000f982:	add    BYTE PTR gs:[rbx+0x45],cl
   14000f986:	push   rdx
   14000f987:	rex.WRX
   14000f988:	rex.RB
   14000f989:	xor    r14,QWORD PTR [rdx]
   14000f98c:	cs fs ins BYTE PTR es:[rdi],dx
   14000f98f:	ins    BYTE PTR es:[rdi],dx
   14000f990:	add    BYTE PTR [rax],al
   14000f992:	mov    al,BYTE PTR [rbx]
   14000f994:	pop    rdi
   14000f995:	ja     0x14000f9fa
   14000f997:	jae    0x14000fa02
   14000f999:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000f99c:	add    BYTE PTR [rax],al
   14000f99e:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000f9a4:	ja     0x14000fa16
   14000f9a6:	jb     0x14000fa11
   14000f9a8:	outs   dx,BYTE PTR ds:[rsi]
   14000f9a9:	je     0x14000fa11
   14000f9ab:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000f9af:	jb     0x14000fa16
   14000f9b1:	add    BYTE PTR gs:[rax],al
   14000f9b4:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000f9bb:	movsxd eax,DWORD PTR [rax]
   14000f9bd:	add    BYTE PTR [rdi+0x61635f00],bh
   14000f9c3:	ins    BYTE PTR es:[rdi],dx
   14000f9c4:	ins    BYTE PTR es:[rdi],dx
   14000f9c5:	outs   dx,BYTE PTR ds:[rsi]
   14000f9c6:	gs ja  0x14000fa31
   14000f9c9:	add    BYTE PTR [rbp+0x0],dl
   14000f9cc:	pop    rdi
   14000f9cd:	pop    rax
   14000f9ce:	movsxd esi,DWORD PTR [rax+0x74]
   14000f9d1:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000f9da:	pop    rdi
   14000f9db:	(bad)  
   14000f9dc:	ins    DWORD PTR es:[rdi],dx
   14000f9dd:	jae    0x14000fa46
   14000f9df:	pop    rdi
   14000f9e0:	gs js  0x14000fa4c
   14000f9e3:	je     0x14000f9e5
   14000f9e5:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000f9eb:	addr32 gs je 0x14000fa5c
   14000f9ef:	(bad)  
   14000f9f0:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000f9f7:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000f9fd:	gs je  0x14000fa5f
   14000fa00:	(bad)  
   14000fa01:	jo     0x14000fa73
   14000fa03:	pop    rdi
   14000fa04:	je     0x14000fa7f
   14000fa06:	jo     0x14000fa6d
   14000fa08:	add    BYTE PTR [rax],al
   14000fa0a:	xor    al,BYTE PTR [riz*2+0x746978]
   14000fa11:	add    BYTE PTR [rsi],cl
   14000fa13:	add    DWORD PTR [rdi+0x65],ebx
   14000fa16:	js     0x14000fa81
   14000fa18:	je     0x14000fa1a
   14000fa1a:	rol    DWORD PTR [rax],0x5f
   14000fa1d:	movsxd esp,DWORD PTR [rbp+0x78]
   14000fa20:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000fa28:	jae    0x14000fa8f
   14000fa2a:	je     0x14000faa1
   14000fa2c:	jae    0x14000fa93
   14000fa2e:	jb     0x14000fa9d
   14000fa30:	(bad)  
   14000fa31:	je     0x14000fa9b
   14000fa33:	gs jb  0x14000faa8
   14000fa36:	add    BYTE PTR [rax],al
   14000fa38:	jge    0x14000fa3b
   14000fa3a:	pop    rdi
   14000fa3b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000fa42:	ins    DWORD PTR es:[rdi],dx
   14000fa43:	add    BYTE PTR [rdi+0x0],dl
   14000fa46:	pop    rdi
   14000fa47:	pop    rdi
   14000fa48:	rex.XB pop r15
   14000fa4a:	jae    0x14000fabc
   14000fa4c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000fa50:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000fa57:	ins    BYTE PTR es:[rdi],dx
   14000fa58:	gs jb  0x14000fa5b
   14000fa5b:	add    BYTE PTR [rdi],ah
   14000fa5d:	add    DWORD PTR [rdi+0x66],ebx
   14000fa60:	ins    DWORD PTR es:[rdi],dx
   14000fa61:	outs   dx,DWORD PTR ds:[rsi]
   14000fa62:	fs add BYTE PTR gs:[rax],al
   14000fa66:	rol    BYTE PTR [rax],cl
   14000fa68:	pop    rdi
   14000fa69:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000fa6c:	ins    DWORD PTR es:[rdi],dx
   14000fa6d:	outs   dx,DWORD PTR ds:[rsi]
   14000fa6e:	fs add BYTE PTR gs:[rax],al
   14000fa72:	out    0x1,al
   14000fa74:	pop    rdi
   14000fa75:	ins    BYTE PTR es:[rdi],dx
   14000fa76:	outs   dx,DWORD PTR ds:[rsi]
   14000fa77:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000fa7a:	add    ebx,DWORD PTR [r15+0x75]
   14000fa7e:	outs   dx,BYTE PTR ds:[rsi]
   14000fa7f:	ins    BYTE PTR es:[rdi],dx
   14000fa80:	outs   dx,DWORD PTR ds:[rsi]
   14000fa81:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000fa84:	jnp    0x14000fa86
   14000fa86:	pop    rdi
   14000fa87:	pop    rdi
   14000fa88:	fs ins BYTE PTR es:[rdi],dx
   14000fa8a:	ins    BYTE PTR es:[rdi],dx
   14000fa8b:	outs   dx,DWORD PTR ds:[rsi]
   14000fa8c:	outs   dx,BYTE PTR ds:[rsi]
   14000fa8d:	gs js  0x14000faf9
   14000fa90:	je     0x14000fa92
   14000fa92:	nop
   14000fa93:	add    bl,BYTE PTR [rdi+0x6f]
   14000fa96:	outs   dx,BYTE PTR ds:[rsi]
   14000fa97:	gs js  0x14000fb03
   14000fa9a:	je     0x14000fa9c
   14000fa9c:	ins    DWORD PTR es:[rdi],dx
   14000fa9d:	jae    0x14000fb15
   14000fa9f:	movsxd esi,DWORD PTR [rdx+0x74]
   14000faa2:	cs fs ins BYTE PTR es:[rdi],dx
   14000faa5:	ins    BYTE PTR es:[rdi],dx
   14000faa6:	add    BYTE PTR [rax],al
   14000faa8:	(bad)  
   14000faa9:	add    BYTE PTR [rdi],bh
   14000faab:	je     0x14000fb12
   14000faad:	jb     0x14000fb1c
   14000faaf:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000fab6:	pop    rcx
   14000fab7:	pop    r8
   14000fab9:	pop    rax
   14000faba:	pop    rdx
   14000fabb:	add    BYTE PTR [rax],cl
   14000fabd:	add    BYTE PTR [rbx+0x6f],al
   14000fac0:	rex.XB jb 0x14000fb28
   14000fac3:	(bad)  
   14000fac4:	je     0x14000fb2b
   14000fac6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000fac8:	jae    0x14000fb3e
   14000faca:	(bad)  
   14000facb:	outs   dx,BYTE PTR ds:[rsi]
   14000facc:	movsxd esp,DWORD PTR [rbp+0x0]
   14000facf:	add    BYTE PTR [rdx],al
   14000fad1:	add    BYTE PTR [rbx+0x6f],al
   14000fad4:	rex.B
   14000fad5:	fs fs push rdx
   14000fad8:	gs push bx
   14000fadb:	gs jb  0x14000fb54
   14000fade:	gs jb  0x14000fb31
   14000fae1:	jb     0x14000fb52
   14000fae3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fae6:	jae    0x14000fae8
   14000fae8:	add    BYTE PTR ss:[rbx+0x6f],al
   14000faec:	push   rdx
   14000faed:	gs ins BYTE PTR es:[rdi],dx
   14000faef:	gs (bad) 
   14000faf1:	jae    0x14000fb58
   14000faf3:	push   rbx
   14000faf4:	gs jb  0x14000fb6d
   14000faf7:	gs jb  0x14000fb4a
   14000fafa:	jb     0x14000fb6b
   14000fafc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000faff:	jae    0x14000fb01
   14000fb01:	add    BYTE PTR [rdx+0x0],al
   14000fb04:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000fb06:	push   rbp
   14000fb07:	outs   dx,BYTE PTR ds:[rsi]
   14000fb08:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000fb0f:	imul   edi,DWORD PTR [rdx+0x65],0x260000
   14000fb16:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000fb18:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000fb1a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000fb22:	rex.RB js 0x14000fb25
   14000fb25:	add    BYTE PTR [rdi],ah
   14000fb27:	add    BYTE PTR [rbx+0x6f],al
   14000fb2a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000fb2c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000fb34:	push   rbx
   14000fb35:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000fb39:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43003f00
   14000fb41:	outs   dx,DWORD PTR ds:[rsi]
   14000fb42:	push   rsp
   14000fb43:	(bad)  
   14000fb44:	jae    0x14000fbb1
   14000fb46:	rex.WRB
   14000fb47:	gs ins DWORD PTR es:[rdi],dx
   14000fb49:	rex.RX jb 0x14000fbb1
   14000fb4c:	add    BYTE PTR gs:[rsi],bh
   14000fb4f:	add    BYTE PTR [rbx+0x6f],al
   14000fb52:	push   rsp
   14000fb53:	(bad)  
   14000fb54:	jae    0x14000fbc1
   14000fb56:	rex.WRB
   14000fb57:	gs ins DWORD PTR es:[rdi],dx
   14000fb59:	rex.B ins BYTE PTR es:[rdi],dx
   14000fb5b:	ins    BYTE PTR es:[rdi],dx
   14000fb5c:	outs   dx,DWORD PTR ds:[rsi]
   14000fb5d:	movsxd eax,DWORD PTR [rax]
   14000fb5f:	add    BYTE PTR [rcx],bh
   14000fb61:	add    BYTE PTR [rbx+0x6f],al
   14000fb64:	push   rdx
   14000fb65:	gs jbe 0x14000fbd7
   14000fb68:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000fb6c:	(bad)  
   14000fb6d:	jae    0x14000fbe2
   14000fb6f:	rex.WRXB (bad) 
   14000fb71:	push   0x65
   14000fb73:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   14000fb77:	add    BYTE PTR [rbx+0x6f],al
   14000fb7a:	push   rdx
   14000fb7b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000fb84:	(bad)  
   14000fb85:	jae    0x14000fbfa
   14000fb87:	rex.WRXB (bad) 
   14000fb89:	push   0x65
   14000fb8b:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
   14000fb8f:	add    BYTE PTR [rbx+0x6c],dl
   14000fb92:	gs gs jo 0x14000fb96
   14000fb96:	lldt   WORD PTR [rbx+0x65]
   14000fb9a:	je     0x14000fbf1
   14000fb9c:	outs   dx,BYTE PTR ds:[rsi]
   14000fb9d:	push   0x6c646e61
   14000fba2:	gs fs rex.RB js 0x14000fc0a
   14000fba7:	gs jo  0x14000fc1e
   14000fbaa:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000fbb1:	gs jb  0x14000fbb4
   14000fbb4:	adc    eax,DWORD PTR [rax]
   14000fbb6:	rex.RXB
   14000fbb7:	gs je  0x14000fc07
   14000fbba:	outs   dx,DWORD PTR ds:[rsi]
   14000fbbb:	fs jne 0x14000fc2a
   14000fbbe:	gs rex.W (bad) 
   14000fbc1:	outs   dx,BYTE PTR ds:[rsi]
   14000fbc2:	fs ins BYTE PTR es:[rdi],dx
   14000fbc4:	gs push rdi
   14000fbc6:	add    BYTE PTR [rax],al
   14000fbc8:	add    BYTE PTR [rax],al
   14000fbca:	push   rcx
   14000fbcb:	jne    0x14000fc32
   14000fbcd:	jb     0x14000fc48
   14000fbcf:	push   rax
   14000fbd0:	gs jb  0x14000fc39
   14000fbd3:	outs   dx,DWORD PTR ds:[rsi]
   14000fbd4:	jb     0x14000fc43
   14000fbd6:	(bad)  
   14000fbd7:	outs   dx,BYTE PTR ds:[rsi]
   14000fbd8:	movsxd esp,DWORD PTR [rbp+0x43]
   14000fbdb:	outs   dx,DWORD PTR ds:[rsi]
   14000fbdc:	jne    0x14000fc4c
   14000fbde:	je     0x14000fc45
   14000fbe0:	jb     0x14000fbe2
   14000fbe2:	or     eax,0x74654700
   14000fbe7:	rex.XB jne 0x14000fc5c
   14000fbea:	jb     0x14000fc51
   14000fbec:	outs   dx,BYTE PTR ds:[rsi]
   14000fbed:	je     0x14000fc3f
   14000fbef:	jb     0x14000fc60
   14000fbf1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fbf4:	jae    0x14000fc3f
   14000fbf6:	add    BYTE PTR fs:[rcx],dl
   14000fbf9:	add    BYTE PTR [rdi+0x65],al
   14000fbfc:	je     0x14000fc41
   14000fbfe:	jne    0x14000fc72
   14000fc00:	jb     0x14000fc67
   14000fc02:	outs   dx,BYTE PTR ds:[rsi]
   14000fc03:	je     0x14000fc59
   14000fc05:	push   0x64616572
   14000fc0a:	rex.WB
   14000fc0b:	add    BYTE PTR fs:[rax],al
   14000fc0e:	adc    al,0x0
   14000fc10:	rex.RXB
   14000fc11:	gs je  0x14000fc67
   14000fc14:	jns    0x14000fc89
   14000fc16:	je     0x14000fc7d
   14000fc18:	ins    DWORD PTR es:[rdi],dx
   14000fc19:	push   rsp
   14000fc1a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000fc21:	ins    BYTE PTR es:[rdi],dx
   14000fc22:	gs push rsp
   14000fc24:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000fc2b:	gs je  0x14000fc82
   14000fc2e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000fc35:	je     0x14000fc37
   14000fc37:	add    BYTE PTR [rdx],al
   14000fc39:	add    BYTE PTR [rdx+0x74],dl
   14000fc3c:	ins    BYTE PTR es:[rdi],dx
   14000fc3d:	rex.XB (bad) 
   14000fc3f:	jo     0x14000fcb5
   14000fc41:	jne    0x14000fcb5
   14000fc43:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000fc46:	outs   dx,BYTE PTR ds:[rsi]
   14000fc47:	je     0x14000fcae
   14000fc49:	js     0x14000fcbf
   14000fc4b:	add    BYTE PTR [rcx],cl
   14000fc4d:	add    BYTE PTR [rdx+0x74],dl
   14000fc50:	ins    BYTE PTR es:[rdi],dx
   14000fc51:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000fc53:	outs   dx,DWORD PTR ds:[rsi]
   14000fc54:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000fc58:	jne    0x14000fcc8
   14000fc5a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000fc5e:	outs   dx,BYTE PTR ds:[rsi]
   14000fc5f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000fc61:	je     0x14000fcd5
   14000fc63:	jns    0x14000fc65
   14000fc65:	add    BYTE PTR [rdi],cl
   14000fc67:	add    BYTE PTR [rdx+0x74],dl
   14000fc6a:	ins    BYTE PTR es:[rdi],dx
   14000fc6b:	push   rsi
   14000fc6c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000fc73:	outs   dx,BYTE PTR ds:[rsi]
   14000fc74:	ja     0x14000fcdf
   14000fc76:	outs   dx,BYTE PTR ds:[rsi]
   14000fc77:	add    BYTE PTR fs:[rax],al
   14000fc7a:	adc    DWORD PTR [rax],eax
   14000fc7c:	push   rbp
   14000fc7d:	outs   dx,BYTE PTR ds:[rsi]
   14000fc7e:	push   0x6c646e61
   14000fc83:	gs fs rex.RB js 0x14000fceb
   14000fc88:	gs jo  0x14000fcff
   14000fc8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000fc92:	gs jb  0x14000fc95
   14000fc95:	add    BYTE PTR [rbx+0x0],cl
   14000fc98:	push   rsp
   14000fc99:	gs jb  0x14000fd09
   14000fc9c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000fca3:	outs   dx,DWORD PTR ds:[rsi]
   14000fca4:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fca7:	jae    0x14000fca9
   14000fca9:	add    BYTE PTR [rdx],al
   14000fcab:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000fcaf:	(bad)  
   14000fcb0:	ins    BYTE PTR es:[rdi],dx
   14000fcb1:	rex.B ins BYTE PTR es:[rdi],dx
   14000fcb3:	ins    BYTE PTR es:[rdi],dx
   14000fcb4:	outs   dx,DWORD PTR ds:[rsi]
   14000fcb5:	movsxd eax,DWORD PTR [rax]
   14000fcb7:	add    BYTE PTR [rbx],dh
   14000fcb9:	add    BYTE PTR [rdi+0x65],al
   14000fcbc:	je     0x14000fd0a
   14000fcbe:	outs   dx,BYTE PTR gs:[rsi]
   14000fcc0:	addr32 je 0x14000fd2b
   14000fcc3:	push   rbx
   14000fcc4:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f43001e
   14000fccc:	jo     0x14000fd47
   14000fcce:	push   rbx
   14000fccf:	imul   esp,DWORD PTR [rax+rax*1+0x23],0x65724300
   14000fcd7:	(bad)  
   14000fcd8:	je     0x14000fd3f
   14000fcda:	push   rdi
   14000fcdb:	gs ins BYTE PTR es:[rdi],dx
   14000fcdd:	ins    BYTE PTR es:[rdi],dx
   14000fcde:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14000fce0:	outs   dx,DWORD PTR ds:[rsi]
   14000fce1:	ja     0x14000fd51
   14000fce3:	push   rbx
   14000fce4:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7541000a
   14000fcec:	je     0x14000fd56
   14000fcee:	jp     0x14000fd36
   14000fcf0:	jb     0x14000fd57
   14000fcf2:	gs push rdx
   14000fcf4:	gs jae 0x14000fd66
   14000fcf7:	jne    0x14000fd6b
   14000fcf9:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000fcfc:	(bad)  
   14000fcfd:	outs   dx,BYTE PTR ds:[rsi]
   14000fcfe:	(bad)  
   14000fcff:	addr32 gs jb 0x14000fd03
   14000fd03:	add    BYTE PTR [rax+rax*1],dl
   14000fd06:	rex.B jne 0x14000fd7d
   14000fd09:	push   0x696e497a
   14000fd0e:	je     0x14000fd79
   14000fd10:	(bad)  
   14000fd11:	ins    BYTE PTR es:[rdi],dx
   14000fd12:	imul   edi,DWORD PTR [rdx+0x65],0x6f736552
   14000fd19:	jne    0x14000fd8d
   14000fd1b:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000fd1e:	(bad)  
   14000fd1f:	outs   dx,BYTE PTR ds:[rsi]
   14000fd20:	(bad)  
   14000fd21:	addr32 gs jb 0x14000fd25
   14000fd25:	add    BYTE PTR [rdx],ch
   14000fd27:	add    BYTE PTR [rbp+0x71],al
   14000fd2a:	jne    0x14000fd8d
   14000fd2c:	ins    BYTE PTR es:[rdi],dx
   14000fd2d:	push   rbx
   14000fd2e:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6547001c
   14000fd36:	je     0x14000fd8e
   14000fd38:	gs jb  0x14000fdae
   14000fd3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   14000fd42:	sbb    eax,DWORD PTR [rax]
   14000fd44:	rex.WRX
   14000fd45:	gs je  0x14000fd9d
   14000fd48:	jae    0x14000fdaf
   14000fd4a:	jb     0x14000fd93
   14000fd4c:	gs je  0x14000fd98
   14000fd4f:	outs   dx,BYTE PTR ds:[rsi]
   14000fd50:	outs   dx,WORD PTR ds:[rsi]
   14000fd52:	add    BYTE PTR [rax],al
   14000fd54:	add    DWORD PTR [rax],eax
   14000fd56:	rex.WRX
   14000fd57:	gs je  0x14000fd9b
   14000fd5a:	jo     0x14000fdc5
   14000fd5c:	rex.X jne 0x14000fdc5
   14000fd5f:	data16 gs jb 0x14000fda9
   14000fd63:	jb     0x14000fdca
   14000fd65:	add    BYTE PTR gs:[rax],al
   14000fd68:	add    BYTE PTR ss:[rdi+0x65],al
   14000fd6c:	je     0x14000fdc1
   14000fd6e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000fd72:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000fd7a:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14000fd81:	movsxd ebp,DWORD PTR [rax+rax*1+0xe]
   14000fd85:	add    BYTE PTR [rcx+0x75],al
   14000fd88:	je     0x14000fdf2
   14000fd8a:	jp     0x14000fdd5
   14000fd8c:	outs   dx,BYTE PTR ds:[rsi]
   14000fd8d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000fd95:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000fd97:	outs   dx,BYTE PTR ds:[rsi]
   14000fd98:	je     0x14000fdff
   14000fd9a:	js     0x14000fe10
   14000fd9c:	rex.RX jb 0x14000fe0e
   14000fd9f:	ins    DWORD PTR es:[rdi],dx
   14000fda0:	push   rbx
   14000fda1:	imul   esp,DWORD PTR [rax+rax*1+0x1],0x74754100
   14000fda9:	push   0x6464417a
   14000fdae:	push   rbx
   14000fdaf:	imul   esp,DWORD PTR [rbx+rsi*2+0x54],0x6e6f436f
   14000fdb7:	je     0x14000fe1e
   14000fdb9:	js     0x14000fe2f
   14000fdbb:	add    BYTE PTR [rax],al
   14000fdbd:	add    BYTE PTR [rcx+0x75],al
   14000fdc0:	je     0x14000fe2a
   14000fdc2:	jp     0x14000fe05
   14000fdc4:	movsxd esp,DWORD PTR [rbx+0x65]
   14000fdc7:	jae    0x14000fe3c
   14000fdc9:	rex.XB push 0x6b6365
   14000fdcf:	add    BYTE PTR [rax],cl
   14000fdd1:	add    BYTE PTR [rcx+0x75],al
   14000fdd4:	je     0x14000fe3e
   14000fdd6:	jp     0x14000fe1e
   14000fdd8:	jb     0x14000fe3f
   14000fdda:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000fddd:	outs   dx,BYTE PTR ds:[rsi]
   14000fdde:	je     0x14000fe45
   14000fde0:	js     0x14000fe56
   14000fde2:	add    BYTE PTR [rax],al
   14000fde4:	add    BYTE PTR cs:[rcx+0x5f],cl
   14000fde8:	push   rdx
   14000fde9:	jo     0x14000fe4e
   14000fdeb:	rex.RB js 0x14000fe51
   14000fdee:	gs jo  0x14000fe65
   14000fdf1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000fdf8:	gs jb  0x14000fdfb
   14000fdfb:	add    BYTE PTR [rcx+0x0],al
   14000fdfe:	rex.WB pop r15
   14000fe00:	push   rdx
   14000fe01:	jo     0x14000fe66
   14000fe03:	rex.WRB (bad) 
   14000fe05:	jo     0x14000fe5e
   14000fe07:	imul   ebp,DWORD PTR [rsi+0x33],0x61745332
   14000fe0e:	je     0x14000fe85
   14000fe10:	jae    0x14000fe12
   14000fe12:	ins    DWORD PTR es:[rdi],dx
   14000fe13:	add    DWORD PTR [rdx+0x70],edx
   14000fe16:	movsxd eax,DWORD PTR [rdx+0x69]
   14000fe19:	outs   dx,BYTE PTR ds:[rsi]
   14000fe1a:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65657246
   14000fe22:	add    BYTE PTR [rax],al
   14000fe24:	(bad)  
   14000fe25:	add    BYTE PTR [rdx+0x65],dl
   14000fe28:	addr32 rex.WRXB jo 0x14000fe91
   14000fe2c:	outs   dx,BYTE PTR ds:[rsi]
   14000fe2d:	rex.WXB
   14000fe2e:	gs jns 0x14000fe76
   14000fe31:	js     0x14000fe8a
   14000fe33:	add    BYTE PTR [rbx],al
   14000fe35:	add    BYTE PTR [rdx+0x65],dl
   14000fe38:	addr32 rex.XB jb 0x14000fea1
   14000fe3c:	(bad)  
   14000fe3d:	je     0x14000fea4
   14000fe3f:	rex.WXB
   14000fe40:	gs jns 0x14000fe88
   14000fe43:	js     0x14000fe9c
   14000fe45:	add    BYTE PTR [rax],al
   14000fe47:	add    BYTE PTR [rdx+0x65],dl
   14000fe4a:	rex.XB ins BYTE PTR es:[edi],dx
   14000fe4d:	outs   dx,DWORD PTR ds:[rsi]
   14000fe4e:	jae    0x14000feb5
   14000fe50:	rex.WXB
   14000fe51:	gs jns 0x14000fe54
   14000fe54:	and    DWORD PTR [rax],eax
   14000fe56:	push   rdx
   14000fe57:	gs addr32 push rcx
   14000fe5a:	jne    0x14000fec1
   14000fe5c:	jb     0x14000fed7
   14000fe5e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000fe60:	outs   dx,WORD PTR ds:[rsi]
   14000fe62:	rex.WXB
   14000fe63:	gs jns 0x14000febd
   14000fe66:	add    BYTE PTR [rax],al
   14000fe68:	adc    BYTE PTR [rax],al
   14000fe6a:	push   rdx
   14000fe6b:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000fe6f:	jne    0x14000fede
   14000fe71:	push   rsi
   14000fe72:	(bad)  
   14000fe73:	ins    BYTE PTR es:[rdi],dx
   14000fe74:	jne    0x14000fedb
   14000fe76:	push   rdi
   14000fe77:	add    BYTE PTR [rbx],cl
   14000fe79:	add    BYTE PTR [rdx+0x65],dl
   14000fe7c:	addr32 rex.R
   14000fe7e:	gs ins BYTE PTR es:[rdi],dx
   14000fe80:	gs je  0x14000fee8
   14000fe83:	push   rsi
   14000fe84:	(bad)  
   14000fe85:	ins    BYTE PTR es:[rdi],dx
   14000fe86:	jne    0x14000feed
   14000fe88:	push   rdi
   14000fe89:	add    BYTE PTR [rcx],cl
   14000fe8b:	add    BYTE PTR [rdx+0x65],dl
   14000fe8e:	addr32 rex.R
   14000fe90:	gs ins BYTE PTR es:[rdi],dx
   14000fe92:	gs je  0x14000fefa
   14000fe95:	push   rsp
   14000fe96:	jb     0x14000fefd
   14000fe98:	gs push rdi
   14000fe9a:	add    BYTE PTR [rax],al
   14000fe9c:	push   rsp
   14000fe9d:	add    BYTE PTR [rax+0x72],dl
   14000fea0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000fea7:	rex.XB push 0x6b6365
   14000fead:	add    BYTE PTR [rbx],bl
   14000feaf:	add    BYTE PTR [rbx+0x68],al
   14000feb2:	movsxd ebp,DWORD PTR gs:[rbx+0x54]
   14000feb6:	outs   dx,DWORD PTR ds:[rsi]
   14000feb7:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   14000febb:	gs ins DWORD PTR es:[rdi],dx
   14000febd:	(bad)  
   14000febe:	gs jb  0x14000ff34
   14000fec1:	push   0x7069
   14000fec6:	sub    al,0x0
   14000fec8:	push   rdx
   14000fec9:	gs addr32 push rbx
   14000fecc:	gs je  0x14000ff25
   14000fecf:	(bad)  
   14000fed0:	ins    BYTE PTR es:[rdi],dx
   14000fed1:	jne    0x14000ff38
   14000fed3:	rex.RB js 0x14000ff2d
   14000fed6:	add    BYTE PTR [rax],al
   14000fed8:	or     eax,DWORD PTR [rax]
   14000feda:	rex.RX jb 0x14000ff42
   14000fedd:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000fee6:	(bad)  
   14000fee7:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000feeb:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000fef4:	js     0x14000ff4d
   14000fef6:	add    BYTE PTR [rax],al
   14000fef8:	adc    al,0x0
   14000fefa:	rex.RXB
   14000fefb:	gs je  0x14000ff4e
   14000fefe:	jb     0x14000ff6f
   14000ff00:	movsxd eax,DWORD PTR [rcx+0x64]
   14000ff03:	fs jb  0x14000ff6b
   14000ff06:	jae    0x14000ff7b
   14000ff08:	add    BYTE PTR [rax],al
   14000ff0a:	or     BYTE PTR [rdx],al
   14000ff0c:	push   rdx
   14000ff0d:	jo     0x14000ff72
   14000ff0f:	push   rbx
   14000ff10:	je     0x14000ff84
   14000ff12:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6942
   14000ff19:	imul   ebp,DWORD PTR [rsi+0x67],0x706d6f43
   14000ff20:	outs   dx,DWORD PTR ds:[rsi]
   14000ff21:	jae    0x14000ff88
   14000ff23:	push   rdi
   14000ff24:	add    BYTE PTR [rax],al
   14000ff26:	outs   dx,DWORD PTR ds:[rsi]
   14000ff27:	add    DWORD PTR [rdx+0x70],edx
   14000ff2a:	movsxd eax,DWORD PTR [rdx+0x69]
   14000ff2d:	outs   dx,BYTE PTR ds:[rsi]
   14000ff2e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6d6f7246
   14000ff36:	push   rbx
   14000ff37:	je     0x14000ffab
   14000ff39:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6942
   14000ff40:	imul   ebp,DWORD PTR [rsi+0x67],0xc000057
   14000ff47:	add    dl,BYTE PTR [rdx+0x70]
   14000ff4a:	movsxd edx,DWORD PTR [rbx+0x74]
   14000ff4d:	jb     0x14000ffb8
   14000ff4f:	outs   dx,BYTE PTR ds:[rsi]
   14000ff50:	addr32 rex.RX jb 0x14000ffb9
   14000ff54:	gs push rdi
   14000ff56:	add    BYTE PTR [rax],al
   14000ff58:	(bad)  
   14000ff59:	add    BYTE PTR [rbx+0x72],al
   14000ff5c:	gs (bad) 
   14000ff5e:	je     0x14000ffc5
   14000ff60:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4e009d00
   14000ff69:	fs jb  0x14000ffaf
   14000ff6c:	ins    BYTE PTR es:[rdi],dx
   14000ff6d:	imul   esp,DWORD PTR [rbp+0x6e],0x6c614374
   14000ff74:	ins    BYTE PTR es:[rdi],dx
   14000ff75:	xor    eax,DWORD PTR [rax]
   14000ff77:	add    BYTE PTR [rcx+0x70],ah
   14000ff7a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e72f1
   14000ff84:	outs   dx,DWORD PTR ds:[rsi]
   14000ff85:	jb     0x14000ffec
   14000ff87:	sub    eax,0x2d6d6f63
   14000ff8c:	ins    BYTE PTR es:[rdi],dx
   14000ff8d:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e322cc4
   14000ff93:	fs ins BYTE PTR es:[rdi],dx
   14000ff95:	ins    BYTE PTR es:[rdi],dx
   14000ff96:	add    BYTE PTR [rax],al
   14000ff98:	(bad)  
   14000ff99:	jo     0x140010004
   14000ff9b:	sub    eax,0x772d736d
   14000ffa0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ffa7:	sub    eax,0x636e7973
   14000ffac:	push   0x2d316c2d
   14000ffb1:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac652de7
   14000ffb7:	ins    BYTE PTR es:[rdi],dx
   14000ffb8:	add    BYTE PTR [rax],al
   14000ffba:	(bad)  
   14000ffbb:	jo     0x140010026
   14000ffbd:	sub    eax,0x772d736d
   14000ffc2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ffc9:	sub    eax,0x6f727265
   14000ffce:	jb     0x140010038
   14000ffd0:	(bad)  
   14000ffd1:	outs   dx,BYTE PTR ds:[rsi]
   14000ffd2:	fs ins BYTE PTR es:[rdi],dx
   14000ffd4:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000ffdb:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac652e12
   14000ffe1:	ins    BYTE PTR es:[rdi],dx
   14000ffe2:	add    BYTE PTR [rax],al
   14000ffe4:	(bad)  
   14000ffe5:	jo     0x140010050
   14000ffe7:	sub    eax,0x772d736d
   14000ffec:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000fff3:	sub    eax,0x7262696c
   14000fff8:	(bad)  
   14000fff9:	jb     0x140010074
   14000fffb:	ins    BYTE PTR es:[rdi],dx
   14000fffc:	outs   dx,DWORD PTR ds:[rsi]
   14000fffd:	(bad)  
   14000fffe:	fs gs jb 0x14001002f
   140010002:	ins    BYTE PTR es:[rdi],dx
   140010003:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e312d3b
   140010009:	fs ins BYTE PTR es:[rdi],dx
   14001000b:	ins    BYTE PTR es:[rdi],dx
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	(bad)  
   14001000f:	jo     0x14001007a
   140010011:	sub    eax,0x772d736d
   140010016:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14001001d:	sub    eax,0x666f7270
   140010022:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14001002a:	sub    eax,0x6c642e30
   14001002f:	ins    BYTE PTR es:[rdi],dx
   140010030:	add    BYTE PTR [rax],al
   140010032:	(bad)  
   140010033:	jo     0x14001009e
   140010035:	sub    eax,0x772d736d
   14001003a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010041:	sub    eax,0x636f7270
   140010046:	gs jae 0x1400100bc
   140010049:	je     0x1400100b3
   14001004b:	jb     0x1400100b2
   14001004d:	(bad)  
   14001004e:	fs jae 0x14001007e
   140010051:	ins    BYTE PTR es:[rdi],dx
   140010052:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e332d89
   140010058:	fs ins BYTE PTR es:[rdi],dx
   14001005a:	ins    BYTE PTR es:[rdi],dx
   14001005b:	add    BYTE PTR [rcx+0x70],ah
   14001005e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e73d5
   140010068:	outs   dx,DWORD PTR ds:[rsi]
   140010069:	jb     0x1400100d0
   14001006b:	sub    eax,0x69737973
   140010070:	outs   dx,BYTE PTR ds:[rsi]
   140010071:	outs   dx,WORD PTR ds:[rsi]
   140010073:	sub    eax,0x322d316c
   140010078:	sub    eax,0x6c642e31
   14001007d:	ins    BYTE PTR es:[rdi],dx
   14001007e:	add    BYTE PTR [rax],al
   140010080:	(bad)  
   140010081:	jo     0x1400100ec
   140010083:	sub    eax,0x772d736d
   140010088:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14001008f:	sub    eax,0x736c7472
   140010094:	jne    0x140010106
   140010096:	jo     0x140010107
   140010098:	jb     0x14001010e
   14001009a:	sub    eax,0x322d316c
   14001009f:	sub    eax,0x6c642e30
   1400100a4:	ins    BYTE PTR es:[rdi],dx
   1400100a5:	add    BYTE PTR [rcx+0x70],ah
   1400100a8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e741f
   1400100b2:	outs   dx,DWORD PTR ds:[rsi]
   1400100b3:	jb     0x14001011a
   1400100b5:	sub    eax,0x70616568
   1400100ba:	sub    eax,0x312d326c
   1400100bf:	sub    eax,0x6c642e30
   1400100c4:	ins    BYTE PTR es:[rdi],dx
   1400100c5:	add    BYTE PTR [rcx+0x70],ah
   1400100c8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e743f
   1400100d2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400100d6:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   1400100de:	sub    eax,0x322d316c
   1400100e3:	sub    eax,0x6c642e30
   1400100e8:	ins    BYTE PTR es:[rdi],dx
   1400100e9:	add    BYTE PTR [rcx+0x55],al
   1400100ec:	push   rsp
   1400100ed:	rex.W pop rdx
   1400100ef:	cs fs ins BYTE PTR es:[rdi],dx
   1400100f2:	ins    BYTE PTR es:[rdi],dx
   1400100f3:	add    BYTE PTR [rbx+0x61],dh
   1400100f6:	ins    DWORD PTR es:[rdi],dx
   1400100f7:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   1400100fb:	fs ins BYTE PTR es:[rdi],dx
   1400100fd:	ins    BYTE PTR es:[rdi],dx
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	outs   dx,BYTE PTR ds:[rsi]
   140010101:	gs je  0x140010179
   140010104:	je     0x14001016f
   140010106:	ins    BYTE PTR es:[rdi],dx
   140010107:	jae    0x140010137
   140010109:	fs ins BYTE PTR es:[rdi],dx
   14001010b:	ins    BYTE PTR es:[rdi],dx
   14001010c:	add    BYTE PTR [rax],al
   14001010e:	push   rdx
   14001010f:	push   rax
   140010110:	rex.XB push r10
   140010112:	push   rsp
   140010113:	xor    al,0x2e
   140010115:	fs ins BYTE PTR es:[rdi],dx
   140010117:	ins    BYTE PTR es:[rdi],dx
   140010118:	add    BYTE PTR [rax],al
   14001011a:	(bad)  
   14001011b:	jo     0x140010186
   14001011d:	sub    eax,0x772d736d
   140010122:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010129:	sub    eax,0x69676572
   14001012e:	jae    0x1400101a4
   140010130:	jb     0x1400101ab
   140010132:	sub    eax,0x312d316c
   140010137:	sub    eax,0x6c642e30
   14001013c:	ins    BYTE PTR es:[rdi],dx
   14001013d:	add    BYTE PTR [rcx+0x70],ah
   140010140:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e74b7
   14001014a:	outs   dx,DWORD PTR ds:[rsi]
   14001014b:	jb     0x1400101b2
   14001014d:	sub    eax,0x656c6966
   140010152:	sub    eax,0x322d316c
   140010157:	sub    eax,0x6c642e31
   14001015c:	ins    BYTE PTR es:[rdi],dx
   14001015d:	add    BYTE PTR [rsi],cl
   14001015f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140010163:	rex.WRXB jo 0x1400101cb
   140010166:	outs   dx,BYTE PTR ds:[rsi]
   140010167:	push   rax
   140010168:	outs   dx,DWORD PTR ds:[rsi]
   140010169:	ins    BYTE PTR es:[rdi],dx
   14001016a:	imul   esp,DWORD PTR [rbx+0x79],0x53000700
   140010171:	(bad)  
   140010172:	ins    DWORD PTR es:[rdi],dx
   140010173:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010175:	outs   dx,BYTE PTR ds:[rsi]
   140010176:	outs   dx,BYTE PTR ds:[rsi]
   140010177:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   14001017c:	and    DWORD PTR [rax],eax
   14001017e:	push   rbx
   14001017f:	(bad)  
   140010180:	ins    DWORD PTR es:[rdi],dx
   140010181:	rex.WRXB jo 0x1400101e9
   140010184:	outs   dx,BYTE PTR ds:[rsi]
   140010185:	rex.R outs dx,DWORD PTR ds:[rsi]
   140010187:	ins    DWORD PTR es:[rdi],dx
   140010188:	(bad)  
   140010189:	imul   ebp,DWORD PTR [rsi+0x0],0x61530006
   140010190:	ins    DWORD PTR es:[rdi],dx
   140010191:	rex.XB ins BYTE PTR es:[rdi],dx
   140010193:	outs   dx,DWORD PTR ds:[rsi]
   140010194:	jae    0x1400101fb
   140010196:	rex.W (bad) 
   140010198:	outs   dx,BYTE PTR ds:[rsi]
   140010199:	fs ins BYTE PTR es:[rdi],dx
   14001019b:	add    BYTE PTR gs:[rax],al
   14001019e:	adc    BYTE PTR [rax],al
   1400101a0:	rex.WR jae 0x140010204
   1400101a3:	push   rcx
   1400101a4:	jne    0x14001020b
   1400101a6:	jb     0x140010221
   1400101a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400101aa:	outs   dx,WORD PTR ds:[rsi]
   1400101ac:	jb     0x14001021b
   1400101ae:	(bad)  
   1400101af:	je     0x14001021a
   1400101b1:	outs   dx,DWORD PTR ds:[rsi]
   1400101b2:	outs   dx,BYTE PTR ds:[rsi]
   1400101b3:	push   rax
   1400101b4:	outs   dx,DWORD PTR ds:[rsi]
   1400101b5:	ins    BYTE PTR es:[rdi],dx
   1400101b6:	imul   esp,DWORD PTR [rbx+0x79],0x4c000600
   1400101bd:	jae    0x140010220
   1400101bf:	rex.RX jb 0x140010227
   1400101c2:	gs rex.WRB
   1400101c4:	gs ins DWORD PTR es:[rdi],dx
   1400101c6:	outs   dx,DWORD PTR ds:[rsi]
   1400101c7:	jb     0x140010242
   1400101c9:	add    BYTE PTR [rcx],al
   1400101cb:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400101cf:	rex.XB ins BYTE PTR es:[rdi],dx
   1400101d1:	outs   dx,DWORD PTR ds:[rsi]
   1400101d2:	jae    0x140010239
   1400101d4:	add    BYTE PTR [rax],al
   1400101d6:	or     al,0x0
   1400101d8:	rex.WR jae 0x14001023c
   1400101db:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400101dd:	outs   dx,DWORD PTR ds:[rsi]
   1400101de:	imul   esi,DWORD PTR [rbp+0x70],0x53
   1400101e2:	imul   esp,DWORD PTR [rbx+rsi*2+0x0],0x6153002b
   1400101ea:	ins    DWORD PTR es:[rdi],dx
   1400101eb:	push   rcx
   1400101ec:	jne    0x140010253
   1400101ee:	jb     0x140010269
   1400101f0:	push   rbx
   1400101f1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400101f5:	imul   esi,DWORD PTR [rcx+rdi*2+0x4f],0x63656a62
   1400101fd:	je     0x1400101ff
   1400101ff:	add    BYTE PTR [rip+0x6d615300],dl        # 0x1ad625505
   140010205:	rex.RX jb 0x14001026d
   140010208:	gs rex.WRB
   14001020a:	gs ins DWORD PTR es:[rdi],dx
   14001020c:	outs   dx,DWORD PTR ds:[rsi]
   14001020d:	jb     0x140010288
   14001020f:	add    BYTE PTR [rcx],ch
   140010211:	add    BYTE PTR [rbx+0x61],dl
   140010214:	ins    DWORD PTR es:[rdi],dx
   140010215:	push   rcx
   140010216:	jne    0x14001027d
   140010218:	jb     0x140010293
   14001021a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001021c:	outs   dx,WORD PTR ds:[rsi]
   14001021e:	jb     0x14001028d
   140010220:	(bad)  
   140010221:	je     0x14001028c
   140010223:	outs   dx,DWORD PTR ds:[rsi]
   140010224:	outs   dx,BYTE PTR ds:[rsi]
   140010225:	push   rbp
   140010226:	jae    0x14001028d
   140010228:	jb     0x14001022a
   14001022a:	and    eax,DWORD PTR [rax]
   14001022c:	push   rbx
   14001022d:	(bad)  
   14001022e:	ins    DWORD PTR es:[rdi],dx
   14001022f:	rex.WRXB jo 0x140010297
   140010232:	outs   dx,BYTE PTR ds:[rsi]
   140010233:	push   rbp
   140010234:	jae    0x14001029b
   140010236:	jb     0x140010238
   140010238:	(bad)  
   140010239:	add    BYTE PTR [rbx+0x61],dl
   14001023c:	ins    DWORD PTR es:[rdi],dx
   14001023d:	push   rcx
   14001023e:	jne    0x1400102a5
   140010240:	jb     0x1400102bb
   140010242:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010244:	outs   dx,WORD PTR ds:[rsi]
   140010246:	jb     0x1400102b5
   140010248:	(bad)  
   140010249:	je     0x1400102b4
   14001024b:	outs   dx,DWORD PTR ds:[rsi]
   14001024c:	outs   dx,BYTE PTR ds:[rsi]
   14001024d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001024f:	ins    DWORD PTR es:[rdi],dx
   140010250:	(bad)  
   140010251:	imul   ebp,DWORD PTR [rsi+0x0],0x2d697061
   140010258:	ins    DWORD PTR es:[rdi],dx
   140010259:	jae    0x140010288
   14001025b:	ja     0x1400102c6
   14001025d:	outs   dx,BYTE PTR ds:[rsi]
   14001025e:	sub    eax,0x75636573
   140010263:	jb     0x1400102ce
   140010265:	je     0x1400102e0
   140010267:	sub    eax,0x7061736c
   14001026c:	outs   dx,DWORD PTR ds:[rsi]
   14001026d:	ins    BYTE PTR es:[rdi],dx
   14001026e:	imul   esp,DWORD PTR [rbx+0x79],0x2d316c2d
   140010275:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac6530ab
   14001027b:	ins    BYTE PTR es:[rdi],dx
   14001027c:	add    BYTE PTR [rax],al
   14001027e:	push   rbx
   14001027f:	rex.B
   140010280:	rex.WRB
   140010281:	rex.WR
   140010282:	rex.WB
   140010283:	rex.X
   140010284:	cs fs ins BYTE PTR es:[rdi],dx
   140010287:	ins    BYTE PTR es:[rdi],dx
   140010288:	add    BYTE PTR [rax],al
   14001028a:	and    DWORD PTR [rdx+rdx*2],eax
   14001028d:	je     0x1400102fb
   14001028f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010291:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010299:	push   rbx
   14001029a:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7452053d
   1400102a2:	ins    BYTE PTR es:[rdi],dx
   1400102a3:	push   rbx
   1400102a4:	jne    0x140010308
   1400102a6:	rex.B jne 0x14001031d
   1400102a9:	push   0x7469726f
   1400102ae:	jns    0x140010303
   1400102b0:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7452040e
   1400102b8:	ins    BYTE PTR es:[rdi],dx
   1400102b9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400102bb:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   1400102c3:	gs push rbx
   1400102c5:	je     0x140010339
   1400102c7:	imul   ebp,DWORD PTR [rsi+0x67],0x3de0000
   1400102ce:	push   rdx
   1400102cf:	je     0x14001033d
   1400102d1:	rex.RXB
   1400102d2:	gs je  0x140010323
   1400102d5:	je     0x140010327
   1400102d7:	jb     0x140010348
   1400102d9:	fs jne 0x14001033f
   1400102dc:	je     0x140010332
   1400102de:	jns    0x140010350
   1400102e0:	add    BYTE PTR gs:[rdx+0x4],ah
   1400102e4:	push   rdx
   1400102e5:	je     0x140010353
   1400102e7:	rex.WR
   1400102e8:	outs   dx,BYTE PTR gs:[rsi]
   1400102ea:	addr32 je 0x140010355
   1400102ed:	push   rbx
   1400102ee:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x745202fb
   1400102f6:	ins    BYTE PTR es:[rdi],dx
   1400102f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400102f9:	jo     0x140010374
   1400102fb:	push   rbx
   1400102fc:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74520283
   140010304:	ins    BYTE PTR es:[rdi],dx
   140010305:	movsxd esi,DWORD PTR [r9+0x75]
   140010309:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   140010310:	jne    0x140010384
   140010312:	movsxd esp,DWORD PTR [rbp+0x45]
   140010315:	js     0x14001037a
   140010317:	ins    BYTE PTR es:[rdi],dx
   140010318:	jne    0x14001038d
   14001031a:	imul   esi,DWORD PTR [rsi+0x65],0x5204e100
   140010321:	je     0x14001038f
   140010323:	push   rdx
   140010324:	gs ins BYTE PTR es:[rdi],dx
   140010326:	gs (bad) 
   140010328:	jae    0x14001038f
   14001032a:	push   rdx
   14001032b:	gs jae 0x14001039d
   14001032e:	jne    0x1400103a2
   140010330:	movsxd esp,DWORD PTR [rbp+0x0]
   140010333:	add    dh,ch
   140010335:	add    BYTE PTR [rsi+0x74],cl
   140010338:	rex.XB ins BYTE PTR es:[rdi],dx
   14001033a:	outs   dx,DWORD PTR ds:[rsi]
   14001033b:	jae    0x1400103a2
   14001033d:	add    BYTE PTR [rsi],bl
   14001033f:	add    al,0x52
   140010341:	je     0x1400103af
   140010343:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010345:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001034d:	push   rdx
   14001034e:	gs jae 0x1400103c0
   140010351:	jne    0x1400103c5
   140010353:	movsxd esp,DWORD PTR [rbp+0x0]
   140010356:	(bad)  
   140010357:	add    edx,DWORD PTR [rdx+0x74]
   14001035a:	ins    BYTE PTR es:[rdi],dx
   14001035b:	rex.R
   14001035c:	gs ins BYTE PTR es:[rdi],dx
   14001035e:	gs je  0x1400103c6
   140010361:	push   rdx
   140010362:	gs jae 0x1400103d4
   140010365:	jne    0x1400103d9
   140010367:	movsxd esp,DWORD PTR [rbp+0x0]
   14001036a:	cmp    al,0x5
   14001036c:	push   rdx
   14001036d:	je     0x1400103db
   14001036f:	push   rbx
   140010370:	jne    0x1400103d4
   140010372:	rex.B jne 0x1400103e9
   140010375:	push   0x7469726f
   14001037a:	jns    0x1400103bf
   14001037c:	outs   dx,DWORD PTR ds:[rsi]
   14001037d:	jne    0x1400103ed
   14001037f:	je     0x1400103d4
   140010381:	imul   esp,DWORD PTR [rax+rax*1+0x7a],0x6c745203
   140010389:	rex.RB jno 0x140010401
   14001038c:	(bad)  
   14001038d:	ins    BYTE PTR es:[rdi],dx
   14001038e:	push   rbx
   14001038f:	imul   esp,DWORD PTR [rax+rax*1-0x6a],0x4f744e01
   140010397:	jo     0x1400103fe
   140010399:	outs   dx,BYTE PTR ds:[rsi]
   14001039a:	push   rsp
   14001039b:	push   0x64616572
   1400103a0:	push   rsp
   1400103a1:	outs   dx,DWORD PTR ds:[rsi]
   1400103a2:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400103a6:	mov    es,WORD PTR [rcx]
   1400103a8:	rex.WRX je 0x1400103fa
   1400103ab:	jo     0x140010412
   1400103ad:	outs   dx,BYTE PTR ds:[rsi]
   1400103ae:	push   rax
   1400103af:	jb     0x140010420
   1400103b1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400103b4:	jae    0x14001040a
   1400103b6:	outs   dx,DWORD PTR ds:[rsi]
   1400103b7:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400103bb:	add    BYTE PTR [rdi],dh
   1400103bd:	add    DWORD PTR [rsi+0x74],ecx
   1400103c0:	rex.R jne 0x140010433
   1400103c3:	ins    BYTE PTR es:[rdi],dx
   1400103c4:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   1400103cb:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400103cf:	add    BYTE PTR [rcx+rax*1+0x7551744e],bh
   1400103d6:	gs jb  0x140010452
   1400103d9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400103db:	outs   dx,WORD PTR ds:[rsi]
   1400103dd:	jb     0x14001044c
   1400103df:	(bad)  
   1400103e0:	je     0x14001044b
   1400103e2:	outs   dx,DWORD PTR ds:[rsi]
   1400103e3:	outs   dx,BYTE PTR ds:[rsi]
   1400103e4:	push   rsp
   1400103e5:	outs   dx,DWORD PTR ds:[rsi]
   1400103e6:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400103ea:	(bad)  
   1400103eb:	add    DWORD PTR [rsi+0x74],ecx
   1400103ee:	push   rcx
   1400103ef:	jne    0x140010456
   1400103f1:	jb     0x14001046c
   1400103f3:	push   rbx
   1400103f4:	jns    0x140010469
   1400103f6:	je     0x14001045d
   1400103f8:	ins    DWORD PTR es:[rdi],dx
   1400103f9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400103fb:	outs   dx,WORD PTR ds:[rsi]
   1400103fd:	jb     0x14001046c
   1400103ff:	(bad)  
   140010400:	je     0x14001046b
   140010402:	outs   dx,DWORD PTR ds:[rsi]
   140010403:	outs   dx,BYTE PTR ds:[rsi]
   140010404:	add    BYTE PTR [rax],al
   140010406:	push   rcx
   140010407:	add    DWORD PTR [rsi+0x74],ecx
   14001040a:	rex.RXB
   14001040b:	gs je  0x140010451
   14001040e:	(bad)  
   14001040f:	movsxd ebp,DWORD PTR [rax+0x65]
   140010412:	fs push rbx
   140010414:	imul   esp,DWORD PTR [rdi+0x6e],0x4c676e69
   14001041b:	gs jbe 0x140010483
   14001041e:	ins    BYTE PTR es:[rdi],dx
   14001041f:	add    BYTE PTR [rsi+0x74],ch
   140010422:	fs ins BYTE PTR es:[rdi],dx
   140010424:	ins    BYTE PTR es:[rdi],dx
   140010425:	cs fs ins BYTE PTR es:[rdi],dx
   140010428:	ins    BYTE PTR es:[rdi],dx
   140010429:	add    BYTE PTR [rcx+rax*1+0x52],ch
   14001042d:	jo     0x140010492
   14001042f:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x43676e69
   140010437:	jb     0x14001049e
   140010439:	(bad)  
   14001043a:	je     0x1400104a1
   14001043c:	push   rdi
   14001043d:	add    BYTE PTR [rcx+0x1],ch
   140010440:	push   rdx
   140010441:	jo     0x1400104a6
   140010443:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x42676e69
   14001044b:	imul   ebp,DWORD PTR [rsi+0x64],0x35b0000
   140010452:	push   rbx
   140010453:	jns    0x1400104c8
   140010455:	je     0x1400104bc
   140010457:	ins    DWORD PTR es:[rdi],dx
   140010458:	push   rax
   140010459:	(bad)  
   14001045a:	jb     0x1400104bd
   14001045c:	ins    DWORD PTR es:[rdi],dx
   14001045d:	gs je  0x1400104c5
   140010460:	jb     0x1400104d5
   140010462:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010464:	outs   dx,WORD PTR ds:[rsi]
   140010466:	push   rdi
   140010467:	add    BYTE PTR [rdx+0x64705503],al
   14001046d:	(bad)  
   14001046e:	je     0x1400104d5
   140010470:	push   rax
   140010471:	gs jb  0x1400104c9
   140010474:	jae    0x1400104db
   140010476:	jb     0x1400104cb
   140010478:	jns    0x1400104ed
   14001047a:	je     0x1400104e1
   14001047c:	ins    DWORD PTR es:[rdi],dx
   14001047d:	push   rax
   14001047e:	(bad)  
   14001047f:	jb     0x1400104e2
   140010481:	ins    DWORD PTR es:[rdi],dx
   140010482:	gs je  0x1400104ea
   140010485:	jb     0x1400104fa
   140010487:	add    BYTE PTR [rbp+0x53],dl
   14001048a:	rex.RB push r10
   14001048c:	xor    esi,DWORD PTR [rdx]
   14001048e:	cs fs ins BYTE PTR es:[rdi],dx
   140010491:	ins    BYTE PTR es:[rdi],dx
   140010492:	add    BYTE PTR [rax],al
   140010494:	and    al,BYTE PTR [rcx]
   140010496:	rex.RB jbe 0x1400104fe
   140010499:	outs   dx,BYTE PTR ds:[rsi]
   14001049a:	je     0x1400104f1
   14001049c:	outs   dx,BYTE PTR ds:[rsi]
   14001049d:	jb     0x140010504
   14001049f:	imul   esi,DWORD PTR [ebx+0x74],0x20007265
   1400104a7:	add    DWORD PTR [rbp+0x76],eax
   1400104aa:	outs   dx,BYTE PTR gs:[rsi]
   1400104ac:	je     0x140010500
   1400104ae:	imul   esi,DWORD PTR gs:[ebx+0x74],0x3c007265
   1400104b7:	add    ecx,DWORD PTR [rax+0x65]
   1400104ba:	(bad)  
   1400104bb:	jo     0x1400104fe
   1400104bd:	ins    BYTE PTR es:[rdi],dx
   1400104be:	ins    BYTE PTR es:[rdi],dx
   1400104bf:	outs   dx,DWORD PTR ds:[rsi]
   1400104c0:	movsxd eax,DWORD PTR [rax]
   1400104c2:	rex add ecx,DWORD PTR [rax+0x65]
   1400104c6:	(bad)  
   1400104c7:	jo     0x14001050f
   1400104c9:	jb     0x140010530
   1400104cb:	add    BYTE PTR gs:[rax],al
   1400104ce:	stos   DWORD PTR es:[rdi],eax
   1400104cf:	add    al,BYTE PTR [rdi+0x65]
   1400104d2:	je     0x140010524
   1400104d4:	jb     0x140010545
   1400104d6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400104d9:	jae    0x140010523
   1400104db:	gs (bad) 
   1400104dd:	jo     0x1400104df
   1400104df:	add    ah,ah
   1400104e1:	add    al,BYTE PTR [rdi+0x65]
   1400104e4:	je     0x140010539
   1400104e6:	jns    0x14001055b
   1400104e8:	je     0x14001054f
   1400104ea:	ins    DWORD PTR es:[rdi],dx
   1400104eb:	push   rdi
   1400104ec:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   1400104f3:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   1400104fa:	jns    0x140010553
   1400104fc:	add    BYTE PTR [rax],al
   1400104fe:	mov    cl,0x4
   140010500:	push   rdx
   140010501:	gs jae 0x140010573
   140010504:	ins    BYTE PTR es:[rdi],dx
   140010505:	jbe    0x14001056c
   140010507:	rex.R
   140010508:	gs ins BYTE PTR es:[rdi],dx
   14001050a:	(bad)  
   14001050b:	jns    0x140010559
   14001050d:	outs   dx,DWORD PTR ds:[rsi]
   14001050e:	(bad)  
   14001050f:	fs gs fs push r8
   140010514:	rex.WB add BYTE PTR [r10],al
   140010517:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14001051b:	(bad)  
   14001051c:	jns    0x14001056a
   14001051e:	outs   dx,DWORD PTR ds:[rsi]
   14001051f:	(bad)  
   140010520:	fs rex.RX (bad) 
   140010523:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14001052b:	imul   eax,DWORD PTR [rax],0x0
   14001052e:	add    eax,0x74775f04
   140010533:	outs   dx,DWORD PTR ds:[rsi]
   140010534:	imul   eax,DWORD PTR [rax],0x705f029e
   14001053a:	jne    0x1400105ae
   14001053c:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140010540:	ins    BYTE PTR es:[rdi],dx
   140010541:	add    BYTE PTR [rax],al
   140010543:	add    BYTE PTR [rcx+0x70],al
   140010546:	imul   edx,DWORD PTR [rbx+0x65],0x65755174
   14001054d:	jb     0x1400105c8
   14001054f:	rex.B jo 0x1400105bb
   140010552:	push   rbx
   140010553:	gs je  0x1400105a6
   140010556:	jb     0x1400105bd
   140010558:	jae    0x1400105bf
   14001055a:	outs   dx,BYTE PTR ds:[rsi]
   14001055b:	movsxd esp,DWORD PTR [rbp+0x0]
   14001055e:	(bad)  
   14001055f:	jo     0x1400105ca
   140010561:	sub    eax,0x772d736d
   140010566:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14001056d:	sub    eax,0x71697061
   140010572:	jne    0x1400105d9
   140010574:	jb     0x1400105ef
   140010576:	sub    eax,0x312d316c
   14001057b:	sub    eax,0x6c642e30
   140010580:	ins    BYTE PTR es:[rdi],dx
   140010581:	add    BYTE PTR [rdx+0x6d656d04],dl
   140010587:	movsxd esi,DWORD PTR [rax+0x79]
   14001058a:	add    BYTE PTR [rax],al
   14001058c:	xchg   esi,eax
   14001058d:	add    al,0x6d
   14001058f:	gs ins DWORD PTR es:[rdi],dx
   140010591:	jae    0x1400105f8
   140010593:	je     0x140010595
	...

Disassembly of section .data:

0000000140011000 <.data>:
   140011000:	add    DWORD PTR [rax],eax
   140011002:	add    BYTE PTR [rax],al
   140011004:	add    BYTE PTR [rax],al
   140011006:	add    BYTE PTR [rax],al
   140011008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14001100e:	add    BYTE PTR [rax],al
   140011010:	int    0x5d
   140011012:	and    dl,dl
   140011014:	data16 (bad) 
   140011016:	(bad)  
   140011017:	inc    DWORD PTR [rax]
   140011019:	add    BYTE PTR [rax],al
   14001101b:	add    BYTE PTR [rax],al
   14001101d:	add    BYTE PTR [rax],al
   14001101f:	add    BYTE PTR [rax],ah
   140011021:	adc    BYTE PTR [rcx],al
   140011023:	rex add DWORD PTR [rax],eax
   140011026:	add    BYTE PTR [rax],al
   140011028:	push   rax
   140011029:	sbb    eax,DWORD PTR [rcx]
   14001102b:	rex add DWORD PTR [rax],eax
   14001102e:	add    BYTE PTR [rax],al
   140011030:	(bad)  
	...
   140011045:	add    BYTE PTR [rax],al
   140011047:	add    BYTE PTR [rip+0x22000000],al        # 0x16201104d
   14001104d:	add    BYTE PTR [rax],al
   14001104f:	sar    BYTE PTR [rcx],0x0
   140011052:	add    BYTE PTR [rax],al
   140011054:	ret    0x0
   140011057:	shl    BYTE PTR [rdi+0x35000000],0x0
   14001105e:	add    al,al
   140011060:	(bad)  
   140011061:	add    al,BYTE PTR [rax]
   140011063:	add    BYTE PTR [rbp+0x42c00000],dl
   140011069:	add    BYTE PTR [rax],al
   14001106b:	add    bl,cl
   14001106d:	add    BYTE PTR [rax],al
   14001106f:	rol    cl,0x0
   140011072:	add    BYTE PTR [rax],al
   140011074:	jnp    0x140011076
   140011076:	add    al,al
   140011078:	sbb    BYTE PTR [rax],al
   14001107a:	add    BYTE PTR [rax],al
   14001107c:	add    BYTE PTR ds:[rax],al
   14001107f:	shl    BYTE PTR [rip+0xffffffffbe000000],0x0        # 0xfe011086
   140011086:	add    al,al
   140011088:	rex.XB add BYTE PTR [r8],al
   14001108b:	add    ah,cl
   14001108d:	add    BYTE PTR [rax],al
   14001108f:	sar    BYTE PTR [rdx],0x0
   140011092:	add    BYTE PTR [rax],al
   140011094:	ret    
   140011095:	add    BYTE PTR [rax],al
   140011097:	shl    BYTE PTR [rcx+0x3b000000],0x0
   14001109e:	add    al,al
   1400110a0:	out    0x0,al
   1400110a2:	add    BYTE PTR [rax],al
   1400110a4:	lods   eax,DWORD PTR ds:[rsi]
   1400110a5:	add    BYTE PTR [rax],al
   1400110a7:	sar    BYTE PTR [rax+rax*1],0x0
   1400110ab:	add    ch,al
   1400110ad:	add    BYTE PTR [rax],al
   1400110af:	shr    BYTE PTR [rdi+0x0],0x0
   1400110b3:	add    BYTE PTR [rip+0xffffffffea800000],al        # 0x12a8110b9
   1400110b9:	add    BYTE PTR [rax],al
   1400110bb:	add    BYTE PTR [rip+0xffffffffaa800000],al        # 0xea8110c1
   1400110c1:	add    BYTE PTR [rax],al
   1400110c3:	add    BYTE PTR [rcx],dl
   1400110c5:	add    BYTE PTR [rax],al
   1400110c7:	adc    BYTE PTR [rdi],0x0
   1400110ca:	add    BYTE PTR [rax],al
   1400110cc:	(bad)  
   1400110cd:	add    BYTE PTR [rax],al
   1400110cf:	rcl    BYTE PTR [rax],0x0
   1400110d2:	add    BYTE PTR [rax],al
   1400110d4:	add    DWORD PTR [rcx],eax
   1400110d6:	add    al,al
   1400110d8:	(bad)  
   1400110d9:	add    BYTE PTR [rax],al
   1400110db:	add    al,al
   1400110dd:	add    BYTE PTR [rax],al
   1400110df:	ror    BYTE PTR [rbx],0x1
   1400110e2:	add    BYTE PTR [rax],al
   1400110e4:	add    eax,DWORD PTR [rcx]
   1400110e6:	add    al,al
   1400110e8:	jo     0x1400110ea
   1400110ea:	add    BYTE PTR [rax],al
   1400110ec:	jg     0x1400110ee
   1400110ee:	add    al,al
   1400110f0:	xor    al,0x0
   1400110f2:	add    BYTE PTR [rax],al
   1400110f4:	mov    ebp,0x13c00000
   1400110f9:	add    DWORD PTR [rax],eax
   1400110fb:	add    BYTE PTR [rax+0x0],dl
   1400110fe:	add    al,al
   140011100:	sbb    al,BYTE PTR [rcx]
   140011102:	add    BYTE PTR [rax],al
   140011104:	rex.WRXB add BYTE PTR [r8],r8b
   140011107:	rol    BYTE PTR [rdx],0x0
   14001110a:	add    BYTE PTR [rax],al
   14001110c:	sldt   WORD PTR [rax]
   14001110f:	rcr    BYTE PTR [rdi],0x0
   140011112:	add    BYTE PTR [rax],al
   140011114:	add    DWORD PTR [rax],eax
   140011116:	add    al,al
   140011118:	add    BYTE PTR es:[rax],al
   14001111b:	add    BYTE PTR [rcx],dl
   14001111d:	add    BYTE PTR [rax],al
   14001111f:	shl    bh,0x1
   140011122:	add    BYTE PTR [rax],al
   140011124:	movabs al,ds:0x13000000fec00000
   14001112d:	add    BYTE PTR [rax],al
   14001112f:	add    BYTE PTR [rcx],0x0
   140011132:	add    BYTE PTR [rax],al
   140011134:	add    al,BYTE PTR [rax]
   140011136:	add    al,al
   140011138:	(bad)  
   140011139:	add    BYTE PTR [rax],al
   14001113b:	add    BYTE PTR [rax],cl
   14001113d:	add    BYTE PTR [rax],al
   14001113f:	sar    BYTE PTR [rbx+0x0],0x0
   140011143:	add    BYTE PTR [rbx],dh
   140011145:	add    BYTE PTR [rax],al
   140011147:	rcl    BYTE PTR [rdi+0x0],0x0
   14001114b:	add    BYTE PTR [rip+0x56c00000],cl        # 0x196c11151
   140011151:	add    BYTE PTR [rax],al
   140011153:	add    BYTE PTR [rdx+0x0],ch
   140011156:	add    al,al
   140011158:	in     eax,0x3
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	add    eax,DWORD PTR [rcx]
   14001115e:	add    BYTE PTR [rax],al
   140011160:	and    DWORD PTR [rax],eax
   140011162:	add    BYTE PTR [rax],al
   140011164:	push   rbp
   140011165:	add    BYTE PTR [rax],al
   140011167:	shr    BYTE PTR [rcx+0x5],0x0
   14001116b:	add    BYTE PTR [rbx+0x1],bl
   14001116e:	add    al,al
   140011170:	add    BYTE PTR [rax],al
   140011173:	add    cl,cl
   140011175:	add    BYTE PTR [rax],al
   140011177:	rol    BYTE PTR [rcx+0x0],0x0
   14001117b:	add    dl,cl
   14001117d:	add    BYTE PTR [rax],al
   14001117f:	shl    BYTE PTR [rsi],0x0
   140011182:	add    BYTE PTR [rax],al
   140011184:	mov    edi,0xcfc00000
   140011189:	add    al,0x0
   14001118b:	add    BYTE PTR [rdx+rax*1],bh
   14001118e:	add    al,al
   140011190:	pop    rax
   140011191:	add    BYTE PTR [rax],al
   140011193:	add    dl,dl
   140011195:	add    BYTE PTR [rax],al
   140011197:	shl    dh,0x3
   14001119a:	add    BYTE PTR [rax],al
   14001119c:	add    eax,0x1ac00000
   1400111a1:	add    BYTE PTR [rax],al
   1400111a3:	add    BYTE PTR [rdx],dh
   1400111a5:	add    BYTE PTR [rax],al
   1400111a7:	ror    BYTE PTR [rax],0x0
   1400111aa:	add    BYTE PTR [rax],al
   1400111ac:	(bad)  
   1400111ad:	add    BYTE PTR [rax],al
   1400111af:	rcr    BYTE PTR [rsi+0x7e000000],0x0
   1400111b6:	add    al,al
   1400111b8:	and    BYTE PTR [rcx],al
   1400111ba:	add    BYTE PTR [rax],al
   1400111bc:	rex.RX add BYTE PTR [rax],r8b
   1400111bf:	rcl    BYTE PTR [rip+0x10000000],0x0        # 0x1500111c6
   1400111c6:	add    BYTE PTR [rax+0x11],al
   1400111cc:	(bad)  
   1400111cd:	add    BYTE PTR [rax],al
   1400111cf:	shl    BYTE PTR [rdx],0x0
   1400111d2:	add    BYTE PTR [rax],al
   1400111d4:	mov    ebx,0xe8c00000
   1400111d9:	add    BYTE PTR [rax],al
   1400111db:	add    BYTE PTR [rcx+0x12c00000],dh
   1400111e1:	add    BYTE PTR [rax],al
   1400111e3:	add    BYTE PTR [rsi],al
   1400111e5:	add    BYTE PTR [rax],al
   1400111e7:	add    BYTE PTR [rbx],0x1
   1400111ea:	add    BYTE PTR [rax],al
   1400111ec:	adc    al,BYTE PTR [rax]
   1400111ee:	add    BYTE PTR [rax+0x3e],al
   1400111f4:	mov    DWORD PTR [rax],0x54bc000
   1400111fa:	add    BYTE PTR [rax],al
   1400111fc:	fild   WORD PTR [rax]
   1400111fe:	add    al,al
   140011200:	sbb    al,0x0
   140011202:	add    BYTE PTR [rax],al
   140011204:	(bad)  
   140011205:	add    BYTE PTR [rax],al
   140011207:	add    BYTE PTR [rbx],0x0
   14001120a:	add    BYTE PTR [rax],al
   14001120c:	cmp    al,BYTE PTR [rax]
   14001120e:	add    al,al
   140011210:	out    0x0,eax
   140011212:	add    BYTE PTR [rax],al
   140011214:	lods   al,BYTE PTR ds:[rsi]
   140011215:	add    BYTE PTR [rax],al
   140011217:	shr    cl,0x0
   14001121a:	add    BYTE PTR [rax],al
   14001121c:	mov    al,0x0
   14001121e:	add    al,al
   140011220:	cmp    eax,0xc6000000
   140011225:	add    BYTE PTR [rax],al
   140011227:	sar    BYTE PTR [rdi],0x0
   14001122a:	add    BYTE PTR [rax],al
   14001122c:	enter  0x0,0xc0
   140011230:	jg     0x140011232
   140011232:	add    BYTE PTR [rax],al
   140011234:	jp     0x140011236
   140011236:	add    al,al
   140011238:	rex.W add BYTE PTR [rax],al
   14001123b:	add    cl,dl
   14001123d:	add    BYTE PTR [rax],al
   14001123f:	shl    BYTE PTR [rbx],0x0
   140011242:	add    BYTE PTR [rax],al
   140011244:	mov    esp,0x47c00000
   140011249:	add    BYTE PTR [rax],al
   14001124b:	add    al,dl
   14001124d:	add    BYTE PTR [rax],al
   14001124f:	rcr    BYTE PTR [rbx],0x0
   140011252:	add    BYTE PTR [rax],al
   140011254:	adc    eax,0x79c00000
   140011259:	add    BYTE PTR [rax],al
   14001125b:	add    BYTE PTR [rbp+0x46c00000],dh
   140011261:	add    BYTE PTR [rax],al
   140011263:	add    bh,cl
   140011265:	add    BYTE PTR [rax],al
   140011267:	shl    BYTE PTR [rax],0x0
   14001126a:	add    BYTE PTR [rax],al
   14001126c:	rex.XB add BYTE PTR [r8],al
   14001126f:	shl    bh,0x3
   140011272:	add    BYTE PTR [rax],al
   140011274:	(bad)  
   140011275:	add    BYTE PTR [rax],al
   140011277:	sar    BYTE PTR [rax],0x0
   14001127a:	add    BYTE PTR [rax],al
   14001127c:	rol    DWORD PTR [rax],0x0
   14001127f:	rol    BYTE PTR [rax+rax*1+0x0],0x0
   140011284:	int    0x0
   140011286:	add    al,al
   140011288:	add    al,0x0
   14001128a:	add    BYTE PTR [rax],al
   14001128c:	(bad)  
   14001128d:	add    DWORD PTR [rax],eax
   14001128f:	shr    BYTE PTR [rdx],0x1
   140011292:	add    BYTE PTR [rax],al
   140011294:	rex.RXB add BYTE PTR [r8],r8b
   140011297:	rol    BYTE PTR [rbp+0x0],0x0
   14001129b:	add    dh,cl
   14001129d:	add    BYTE PTR [rax],al
   14001129f:	sar    BYTE PTR [rbx],0x0
   1400112a2:	add    BYTE PTR [rax],al
   1400112a4:	(bad)  
   1400112a5:	add    BYTE PTR [rax],al
   1400112a7:	shl    al,0x0
   1400112aa:	add    BYTE PTR [rax],al
   1400112ac:	(bad)  
   1400112ad:	add    BYTE PTR [rax],al
   1400112af:	shl    BYTE PTR [rdx],0x0
   1400112b2:	add    BYTE PTR [rax],al
   1400112b4:	adc    al,BYTE PTR [rax]
   1400112b6:	add    al,al
   1400112b8:	add    BYTE PTR [rdi],al
   1400112ba:	add    BYTE PTR [rax],al
   1400112bc:	xchg   edx,eax
   1400112bd:	add    DWORD PTR [rax],eax
   1400112bf:	rol    BYTE PTR [rcx],0x7
   1400112c2:	add    BYTE PTR [rax],al
   1400112c4:	xchg   ebx,eax
   1400112c5:	add    DWORD PTR [rax],eax
   1400112c7:	shl    BYTE PTR [rbp+0x7],0x0
   1400112cb:	add    BYTE PTR [rdx+rax*1],dh
   1400112ce:	add    al,al
   1400112d0:	jae    0x1400112d9
   1400112d2:	add    BYTE PTR [rax],al
   1400112d4:	and    al,0x2
   1400112d6:	add    al,al
   1400112d8:	sysret 
   1400112da:	add    BYTE PTR [rax],al
   1400112dc:	cwde   
   1400112dd:	add    DWORD PTR [rax],eax
   1400112df:	rcl    BYTE PTR [rax],0x7
   1400112e2:	add    BYTE PTR [rax],al
   1400112e4:	cdq    
   1400112e5:	add    DWORD PTR [rax],eax
   1400112e7:	rcl    BYTE PTR [rcx],0x7
   1400112ea:	add    BYTE PTR [rax],al
   1400112ec:	(bad)  
   1400112ed:	add    DWORD PTR [rax],eax
   1400112ef:	rcl    BYTE PTR [rdx],0x7
   1400112f2:	add    BYTE PTR [rax],al
   1400112f4:	fwait
   1400112f5:	add    DWORD PTR [rax],eax
   1400112f7:	ror    BYTE PTR [rdx+0x5],0x0
   1400112fb:	add    dh,bl
   1400112fd:	add    BYTE PTR [rax],al
   1400112ff:	sar    BYTE PTR [rdi-0x6cfffff8],0x1
   140011306:	add    al,al
   140011308:	mov    bl,0x8
   14001130a:	add    BYTE PTR [rax],al
   14001130c:	fld    QWORD PTR [rax]
   14001130e:	add    al,al
   140011310:	mov    ah,0x8
   140011312:	add    BYTE PTR [rax],al
   140011314:	pop    rax
   140011315:	add    DWORD PTR [rax],eax
   140011317:	rcr    BYTE PTR [rbx+0x6a000008],0x0
   14001131e:	add    al,al
   140011320:	(bad)  
   140011321:	or     BYTE PTR [rax],al
   140011323:	add    BYTE PTR [rdx+0x0],ah
   140011326:	add    al,al
   140011328:	rex.WXB or BYTE PTR [r8],al
   14001132b:	add    BYTE PTR [rbx],ah
   14001132d:	add    BYTE PTR [rax],al
   14001132f:	rcr    BYTE PTR [rax+0x58000009],0x1
   140011336:	add    al,al
   140011338:	or     DWORD PTR fs:[rax],eax
   14001133b:	add    BYTE PTR [rax],cl
   14001133d:	add    DWORD PTR [rax],eax
   14001133f:	shr    BYTE PTR [rdi+0x65000008],0x0
   140011346:	add    al,al
   140011348:	lods   al,BYTE PTR ds:[rsi]
   140011349:	or     BYTE PTR [rax],al
   14001134b:	add    BYTE PTR [rbx+0x0],dh
   14001134e:	add    al,al
   140011350:	(bad)  
   140011351:	or     BYTE PTR [rax],al
   140011353:	add    ah,ah
   140011355:	add    BYTE PTR [rax],al
   140011357:	rol    cl,0x8
   14001135a:	add    BYTE PTR [rax],al
   14001135c:	outs   dx,DWORD PTR ds:[rsi]
   14001135d:	add    BYTE PTR [rax],al
   14001135f:	rol    al,0x8
   140011362:	add    BYTE PTR [rax],al
   140011364:	jo     0x140011366
   140011366:	add    al,al
   140011368:	or     BYTE PTR ss:[rax],al
   14001136b:	add    bl,bh
   14001136d:	add    BYTE PTR [rax],al
   14001136f:	shl    BYTE PTR [rdx-0x78fffff8],0x1
   140011376:	add    al,al
   140011378:	(bad)  
   140011379:	or     DWORD PTR [rax],eax
   14001137b:	add    BYTE PTR [rdi],al
   14001137d:	add    DWORD PTR [rax],eax
   14001137f:	rol    dl,0x8
   140011382:	add    BYTE PTR [rax],al
   140011384:	jno    0x140011386
   140011386:	add    al,al
   140011388:	mov    edx,0x25000008
   14001138d:	add    DWORD PTR [rax],eax
   14001138f:	shl    BYTE PTR [rax+0x63000008],0x0
   140011396:	add    al,al
   140011398:	mov    esp,0x67000008
   14001139d:	add    BYTE PTR [rax],al
   14001139f:	sar    BYTE PTR [rbp+0x68000008],0x0
   1400113a6:	add    al,al
   1400113a8:	lods   eax,DWORD PTR ds:[rsi]
   1400113a9:	or     BYTE PTR [rax],al
   1400113ab:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400113af:	shl    BYTE PTR [rdx+0x32000008],0x1
   1400113b6:	add    al,al
   1400113b8:	cdq    
   1400113b9:	or     DWORD PTR [rax],eax
   1400113bb:	add    BYTE PTR [rbx],dh
   1400113bd:	add    DWORD PTR [rax],eax
   1400113bf:	ror    cl,0x8
   1400113c2:	add    BYTE PTR [rax],al
   1400113c4:	xor    al,0x1
   1400113c6:	add    al,al
   1400113c8:	xchg   ebp,eax
   1400113c9:	or     DWORD PTR [rax],eax
   1400113cb:	add    BYTE PTR [rbx],dh
   1400113cd:	add    al,BYTE PTR [rax]
   1400113cf:	rcr    BYTE PTR [rdx+0x8],0x0
   1400113d3:	add    BYTE PTR [rdi],dl
   1400113d5:	add    BYTE PTR [rdx],al
   1400113d7:	rol    BYTE PTR [rdx+0x8],0x0
   1400113db:	add    BYTE PTR [rdi],dl
   1400113dd:	add    BYTE PTR [rdx],al
   1400113df:	ror    BYTE PTR [rax+0x17000008],0x0
   1400113e6:	add    al,al
   1400113e8:	(bad)
   1400113eb:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400113ef:	rol    bl,0x8
   1400113f2:	add    BYTE PTR [rax],al
   1400113f4:	ins    BYTE PTR es:[rdi],dx
   1400113f5:	add    BYTE PTR [rax],al
   1400113f7:	rol    dh,0x8
   1400113fa:	add    BYTE PTR [rax],al
   1400113fc:	ins    BYTE PTR es:[rdi],dx
   1400113fd:	add    BYTE PTR [rax],al
   1400113ff:	rol    BYTE PTR [rax],0x0
	...
   14001142a:	or     BYTE PTR [rax],al
   14001142c:	add    BYTE PTR [rax],al
   14001142e:	add    BYTE PTR [rax],al
   140011430:	rcr    BYTE PTR [rcx+rax*1],0x40
   140011434:	add    DWORD PTR [rax],eax
   140011436:	add    BYTE PTR [rax],al
   140011438:	jo     0x14001141d
   14001143a:	add    BYTE PTR [rax+0x1],al
   14001143d:	add    BYTE PTR [rax],al
   14001143f:	add    BYTE PTR [rax+0x14000e3],dh
   140011445:	add    BYTE PTR [rax],al
   140011447:	add    al,ch
   140011449:	mov    bh,0x0
   14001144b:	rex add DWORD PTR [rax],eax
   14001144e:	add    BYTE PTR [rax],al
   140011450:	add    DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

0000000140012000 <.pdata>:
   140012000:	adc    BYTE PTR [rax],dl
   140012002:	add    BYTE PTR [rax],al
   140012004:	xor    DWORD PTR [rax],edx
   140012006:	add    BYTE PTR [rax],al
   140012008:	shr    al,1
   14001200a:	add    BYTE PTR [rax],al
   14001200c:	rex.W adc BYTE PTR [rax],al
   14001200f:	add    BYTE PTR [rbp+0x5c000010],dl
   140012015:	call   0x1509d201a
   14001201a:	add    BYTE PTR [rax],al
   14001201c:	xlat   BYTE PTR ds:[rbx]
   14001201d:	adc    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rax+rbp*8+0x0],ah
   140012023:	add    al,ah
   140012025:	adc    BYTE PTR [rax],al
   140012027:	add    BYTE PTR [rbx],ch
   140012029:	adc    DWORD PTR [rax],eax
   14001202b:	add    BYTE PTR [rax+rbp*8+0x0],bl
   14001202f:	add    BYTE PTR [rcx+rdx*1],dh
   140012032:	add    BYTE PTR [rax],al
   140012034:	popf   
   140012035:	adc    DWORD PTR [rax],eax
   140012037:	add    BYTE PTR [rax+rbp*8+0x0],ch
   14001203b:	add    BYTE PTR [rcx+rdx*1+0x121a0000],ah
   140012042:	add    BYTE PTR [rax],al
   140012044:	je     0x14001202e
   140012046:	add    BYTE PTR [rax],al
   140012048:	and    BYTE PTR [rdx],dl
   14001204a:	add    BYTE PTR [rax],al
   14001204c:	and    BYTE PTR [rbx],dl
   14001204e:	add    BYTE PTR [rax],al
   140012050:	jl     0x14001203a
   140012052:	add    BYTE PTR [rax],al
   140012054:	xor    BYTE PTR [rbx],dl
   140012056:	add    BYTE PTR [rax],al
   140012058:	pop    rdi
   140012059:	adc    eax,DWORD PTR [rax]
   14001205b:	add    BYTE PTR [rax-0x18],dl
   14001205e:	add    BYTE PTR [rax],al
   140012060:	jo     0x140012075
   140012062:	add    BYTE PTR [rax],al
   140012064:	loop   0x140012079
   140012066:	add    BYTE PTR [rax],al
   140012068:	push   rax
   140012069:	call   0x15411206e
   14001206e:	add    BYTE PTR [rax],al
   140012070:	pop    rsp
   140012071:	adc    al,0x0
   140012073:	add    BYTE PTR [rax-0x18],dl
   140012076:	add    BYTE PTR [rax],al
   140012078:	jo     0x14001208e
   14001207a:	add    BYTE PTR [rax],al
   14001207c:	outs   dx,BYTE PTR ds:[rsi]
   14001207d:	sbb    BYTE PTR [rax],al
   14001207f:	add    BYTE PTR [rax-0x7fffff18],dl
   140012085:	sbb    BYTE PTR [rax],al
   140012087:	add    BYTE PTR [rdi],al
   140012089:	sbb    al,BYTE PTR [rax]
   14001208b:	add    BYTE PTR [rax+0x100000e8],ch
   140012091:	sbb    al,BYTE PTR [rax]
   140012093:	add    BYTE PTR [rdx+0x5000001a],al
   140012099:	call   0x15a91209e
   14001209e:	add    BYTE PTR [rax],al
   1400120a0:	mov    al,0x1a
   1400120a2:	add    BYTE PTR [rax],al
   1400120a4:	je     0x14001208e
   1400120a6:	add    BYTE PTR [rax],al
   1400120a8:	rcr    BYTE PTR [rdx],0x0
   1400120ab:	add    BYTE PTR [rcx-0x43ffffe5],al
   1400120b1:	call   0x15b9120b6
   1400120b6:	add    BYTE PTR [rax],al
   1400120b8:	lods   al,BYTE PTR ds:[rsi]
   1400120b9:	sbb    eax,DWORD PTR [rax]
   1400120bb:	add    al,dl
   1400120bd:	call   0x15bb520c2
   1400120c2:	add    BYTE PTR [rax],al
   1400120c4:	sbb    DWORD PTR [rax+rax*1],ebx
   1400120c7:	add    BYTE PTR [rax+rbp*8+0x1c300000],bh
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	scas   eax,DWORD PTR es:[rdi]
   1400120d1:	sbb    al,0x0
   1400120d3:	add    al,bl
   1400120d5:	call   0x15cb920da
   1400120da:	add    BYTE PTR [rax],al
   1400120dc:	(bad)  
   1400120dd:	sbb    al,0x0
   1400120df:	add    al,ch
   1400120e1:	call   0x15cdd20e6
   1400120e6:	add    BYTE PTR [rax],al
   1400120e8:	adc    BYTE PTR [rip+0xffffffffe8640000],bl        # 0x1286520ee
   1400120ee:	add    BYTE PTR [rax],al
   1400120f0:	sbb    BYTE PTR [rip+0x1d8d0000],bl        # 0x15d8e20f6
   1400120f6:	add    BYTE PTR [rax],al
   1400120f8:	lock call 0x15d9520fe
   1400120fe:	add    BYTE PTR [rax],al
   140012100:	cmp    ebx,DWORD PTR [rsi]
   140012102:	add    BYTE PTR [rax],al
   140012104:	clc    
   140012105:	call   0x15e51210a
   14001210a:	add    BYTE PTR [rax],al
   14001210c:	adc    bl,BYTE PTR [rdi]
   14001210e:	add    BYTE PTR [rax],al
   140012110:	call   0x1580121fd
   140012115:	(bad)  
   140012116:	add    BYTE PTR [rax],al
   140012118:	pop    rcx
   140012119:	and    DWORD PTR [rax],eax
   14001211b:	add    BYTE PTR [rax],al
   14001211d:	jmp    0x161612122
   140012122:	add    BYTE PTR [rax],al
   140012124:	xlat   BYTE PTR ds:[rbx]
   140012125:	and    DWORD PTR [rax],eax
   140012127:	add    BYTE PTR [rax],bl
   140012129:	jmp    0x161e1212e
   14001212e:	add    BYTE PTR [rax],al
   140012130:	xlat   BYTE PTR ds:[rbx]
   140012131:	and    eax,DWORD PTR [rax]
   140012133:	add    BYTE PTR [rax],ch
   140012135:	jmp    0x163e1213a
   14001213a:	add    BYTE PTR [rax],al
   14001213c:	mov    dh,0x27
   14001213e:	add    BYTE PTR [rax],al
   140012140:	cmp    cl,ch
   140012142:	add    BYTE PTR [rax],al
   140012144:	mov    esp,0x73000027
   140012149:	sub    DWORD PTR [rax],eax
   14001214b:	add    BYTE PTR [rax-0x17],ah
   14001214e:	add    BYTE PTR [rax],al
   140012150:	jl     0x14001217b
   140012152:	add    BYTE PTR [rax],al
   140012154:	pop    rcx
   140012155:	sub    al,BYTE PTR [rax]
   140012157:	add    BYTE PTR [rax-0x17],dh
   14001215a:	add    BYTE PTR [rax],al
   14001215c:	(bad)  
   14001215d:	sub    al,BYTE PTR [rax]
   14001215f:	add    BYTE PTR [rax],ch
   140012161:	sub    eax,DWORD PTR [rax]
   140012163:	add    BYTE PTR [rax+0x300000e9],al
   140012169:	sub    eax,DWORD PTR [rax]
   14001216b:	add    dl,bh
   14001216d:	sub    al,0x0
   14001216f:	add    BYTE PTR [rcx+rbp*8+0x2d000000],dl
   140012176:	add    BYTE PTR [rax],al
   140012178:	icebp  
   140012179:	sub    eax,0xe9a00000
   14001217e:	add    BYTE PTR [rax],al
   140012180:	add    BYTE PTR [rsi],ch
   140012182:	add    BYTE PTR [rax],al
   140012184:	int    0x2e
   140012186:	add    BYTE PTR [rax],al
   140012188:	shr    al,1
   14001218a:	add    BYTE PTR [rax],al
   14001218c:	(bad)  
   14001218d:	add    BYTE PTR cs:[rax],al
   140012190:	push   rcx
   140012191:	xor    DWORD PTR [rax],eax
   140012193:	add    BYTE PTR [rax+0x580000e9],ch
   140012199:	xor    DWORD PTR [rax],eax
   14001219b:	add    BYTE PTR [rsi-0x47ffffce],bl
   1400121a1:	jmp    0x172a521a6
   1400121a6:	add    BYTE PTR [rax],al
   1400121a8:	lock xor eax,DWORD PTR [rax]
   1400121ab:	add    ah,dl
   1400121ad:	jmp    0x173f921b2
   1400121b2:	add    BYTE PTR [rax],al
   1400121b4:	jmp    0x1200121ef
   1400121b9:	jmp    0x176f121be
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	rex.WXB cmp QWORD PTR [r8],rax
   1400121c3:	add    BYTE PTR [rax],al
   1400121c5:	(bad)  
   1400121c6:	add    BYTE PTR [rax],al
   1400121c8:	push   rsp
   1400121c9:	cmp    DWORD PTR [rax],eax
   1400121cb:	add    BYTE PTR [rbp+0x3a],dl
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	sbb    dl,ch
   1400121d2:	add    BYTE PTR [rax],al
   1400121d4:	pop    rsp
   1400121d5:	cmp    al,BYTE PTR [rax]
   1400121d7:	add    BYTE PTR [rsp+rdi*1],bh
   1400121da:	add    BYTE PTR [rax],al
   1400121dc:	sub    dl,ch
   1400121de:	add    BYTE PTR [rax],al
   1400121e0:	rex.R cmp al,0x0
   1400121e3:	add    BYTE PTR [rdi],cl
   1400121e5:	cmp    eax,0xea3c0000
   1400121ea:	add    BYTE PTR [rax],al
   1400121ec:	rex.R cmp eax,0x40440000
   1400121f2:	add    BYTE PTR [rax],al
   1400121f4:	pop    rax
   1400121f5:	(bad)  
   1400121f6:	add    BYTE PTR [rax],al
   1400121f8:	rex.WR
   1400121f9:	add    BYTE PTR [rax],al
   1400121fc:	jbe    0x14001223f
   1400121fe:	add    BYTE PTR [rax],al
   140012200:	ins    BYTE PTR es:[rdi],dx
   140012201:	(bad)  
   140012202:	add    BYTE PTR [rax],al
   140012204:	jl     0x140012247
   140012206:	add    BYTE PTR [rax],al
   140012208:	jge    0x14001224c
   14001220a:	add    BYTE PTR [rax],al
   14001220c:	movabs al,ds:0x12000042840000e9
   140012215:	add    BYTE PTR [r8],r8b
   140012218:	js     0x140012204
   14001221a:	add    BYTE PTR [rax],al
   14001221c:	sbb    BYTE PTR [rbp+0x0],al
   14001221f:	add    dl,dh
   140012221:	rex.RXB add BYTE PTR [r8],r8b
   140012224:	pushf  
   140012225:	(bad)  
   140012226:	add    BYTE PTR [rax],al
   140012228:	clc    
   140012229:	rex.RXB add BYTE PTR [r8],r8b
   14001222c:	mov    dl,0x4a
   14001222e:	add    BYTE PTR [rax],al
   140012230:	mov    ah,0xea
   140012232:	add    BYTE PTR [rax],al
   140012234:	mov    eax,0x8e00004a
   140012239:	rex.WXB add BYTE PTR [r8],al
   14001223c:	int3   
   14001223d:	(bad)  
   14001223e:	add    BYTE PTR [rax],al
   140012240:	xchg   esp,eax
   140012241:	rex.WXB add BYTE PTR [r8],al
   140012244:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012245:	rex.WRXB add BYTE PTR [r8],r8b
   140012248:	loopne 0x140012234
   14001224a:	add    BYTE PTR [rax],al
   14001224c:	lods   al,BYTE PTR ds:[rsi]
   14001224d:	rex.WRXB add BYTE PTR [r8],r8b
   140012250:	imul   edx,DWORD PTR [rax+rax*1+0x0],0xeaf8
   140012258:	jo     0x1400122ae
   14001225a:	add    BYTE PTR [rax],al
   14001225c:	adc    eax,0x14000056
   140012261:	jmp    0x140012263
   140012263:	add    BYTE PTR [rsi+rdx*2],bl
   140012266:	add    BYTE PTR [rax],al
   140012268:	(bad)  
   140012269:	pop    rcx
   14001226a:	add    BYTE PTR [rax],al
   14001226c:	and    bl,ch
   14001226e:	add    BYTE PTR [rax],al
   140012270:	adc    BYTE PTR [rcx+0x0],bl
   140012273:	add    ch,cl
   140012275:	pop    rcx
   140012276:	add    BYTE PTR [rax],al
   140012278:	rex.R jmp 0x14001227b
   14001227b:	add    ah,dl
   14001227d:	pop    rcx
   14001227e:	add    BYTE PTR [rax],al
   140012280:	movabs ds:0xac0000eb5c00005b,eax
   140012289:	pop    rbx
   14001228a:	add    BYTE PTR [rax],al
   14001228c:	mov    ch,0x5c
   14001228e:	add    BYTE PTR [rax],al
   140012290:	nop
   140012291:	jmp    0x140012293
   140012293:	add    BYTE PTR [rsp+rbx*2+0x5dd60000],bh
   14001229a:	add    BYTE PTR [rax],al
   14001229c:	mov    eax,0xdc0000eb
   1400122a1:	pop    rbp
   1400122a2:	add    BYTE PTR [rax],al
   1400122a4:	adc    ebx,DWORD PTR [rdi+0x0]
   1400122a7:	add    al,ah
   1400122a9:	jmp    0x1400122ab
   1400122ab:	add    BYTE PTR [rdi+rbx*2],bl
   1400122ae:	add    BYTE PTR [rax],al
   1400122b0:	and    al,0x63
   1400122b2:	add    BYTE PTR [rax],al
   1400122b4:	lock jmp 0x1400122b7
   1400122b7:	add    BYTE PTR [rbx+riz*2],ch
   1400122ba:	add    BYTE PTR [rax],al
   1400122bc:	jns    0x140012321
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	shr    al,1
   1400122c2:	add    BYTE PTR [rax],al
   1400122c4:	and    BYTE PTR [rbx+0x0],0x0
   1400122c8:	shl    BYTE PTR [rax+rax*1+0x0],1
   1400122cc:	or     ah,ch
   1400122ce:	add    BYTE PTR [rax],al
   1400122d0:	fsub   DWORD PTR [rax+rax*1+0x0]
   1400122d4:	outs   dx,BYTE PTR ds:[rsi]
   1400122d5:	data16 add BYTE PTR [rax],al
   1400122d8:	sbb    dl,ch
   1400122da:	add    BYTE PTR [rax],al
   1400122dc:	je     0x140012344
   1400122de:	add    BYTE PTR [rax],al
   1400122e0:	push   rsi
   1400122e1:	add    BYTE PTR [eax],al
   1400122e4:	and    al,0xec
   1400122e6:	add    BYTE PTR [rax],al
   1400122e8:	pop    rsp
   1400122e9:	add    BYTE PTR [eax],al
   1400122ec:	imul   ebp,DWORD PTR [rax+0x0],0xec3800
   1400122f3:	add    BYTE PTR [rax+0x68],dh
   1400122f6:	add    BYTE PTR [rax],al
   1400122f8:	shr    DWORD PTR [rdx+0x0],1
   1400122fb:	add    BYTE PTR [rsp+rbp*8+0x0],cl
   1400122ff:	add    al,bl
   140012301:	push   0x0
   140012303:	add    BYTE PTR [rdi+0x6c00006b],bh
   140012309:	in     al,dx
   14001230a:	add    BYTE PTR [rax],al
   14001230c:	enter  0x6b,0x0
   140012310:	ins    DWORD PTR es:[edi],dx
   140012312:	add    BYTE PTR [rax],al
   140012314:	js     0x140012302
   140012316:	add    BYTE PTR [rax],al
   140012318:	jo     0x140012387
   14001231a:	add    BYTE PTR [rax],al
   14001231c:	ins    BYTE PTR es:[rdi],dx
   14001231d:	outs   dx,BYTE PTR ds:[rsi]
   14001231e:	add    BYTE PTR [rax],al
   140012320:	nop
   140012321:	in     al,dx
   140012322:	add    BYTE PTR [rax],al
   140012324:	je     0x140012394
   140012326:	add    BYTE PTR [rax],al
   140012328:	pop    rbp
   140012329:	jo     0x14001232b
   14001232b:	add    BYTE PTR [rax+0x640000ec],bl
   140012331:	jo     0x140012333
   140012333:	add    bl,bl
   140012335:	jo     0x140012337
   140012337:	add    BYTE PTR [rax],bl
   140012339:	jmp    0x1b0e5233e
   14001233e:	add    BYTE PTR [rax],al
   140012340:	div    DWORD PTR [rdx+0x0]
   140012343:	add    BYTE PTR [rsp+rbp*8+0x73000000],ah
   14001234a:	add    BYTE PTR [rax],al
   14001234c:	or     BYTE PTR [rax+rax*1+0x0],dh
   140012350:	mov    esp,0x100000ec
   140012355:	je     0x140012357
   140012357:	add    BYTE PTR [rax],bh
   140012359:	jbe    0x14001235b
   14001235b:	add    ah,al
   14001235d:	in     al,dx
   14001235e:	add    BYTE PTR [rax],al
   140012360:	rex jbe 0x140012363
   140012363:	add    BYTE PTR [rsi+0x18000076],bh
   140012369:	(bad)  
   14001236a:	add    BYTE PTR [rax],al
   14001236c:	shl    BYTE PTR [rsi+0x0],1
   14001236f:	add    BYTE PTR [rsi+0x77],cl
   140012372:	add    BYTE PTR [rax],al
   140012374:	fsubr  st,st(4)
   140012376:	add    BYTE PTR [rax],al
   140012378:	jo     0x1400123f1
   14001237a:	add    BYTE PTR [rax],al
   14001237c:	(bad)  
   14001237d:	ja     0x14001237f
   14001237f:	add    BYTE PTR [rax],al
   140012381:	in     eax,dx
   140012382:	add    BYTE PTR [rax],al
   140012384:	lock ja 0x140012387
   140012387:	add    BYTE PTR [rbp+0x78],dl
   14001238a:	add    BYTE PTR [rax],al
   14001238c:	sub    ch,ch
   14001238e:	add    BYTE PTR [rax],al
   140012390:	(bad)  
   140012391:	js     0x140012393
   140012393:	add    ch,dh
   140012395:	js     0x140012397
   140012397:	add    BYTE PTR [rax-0x13],cl
   14001239a:	add    BYTE PTR [rax],al
   14001239c:	add    BYTE PTR [rcx+0x0],bh
   14001239f:	add    BYTE PTR [rbp+0x79],ah
   1400123a2:	add    BYTE PTR [rax],al
   1400123a4:	push   0x700000ed
   1400123a9:	jns    0x1400123ab
   1400123ab:	add    bh,bl
   1400123ad:	jns    0x1400123af
   1400123af:	add    BYTE PTR [rax-0xfffff13],cl
   1400123b5:	jns    0x1400123b7
   1400123b7:	add    BYTE PTR [rbp+0x7a],dl
   1400123ba:	add    BYTE PTR [rax],al
   1400123bc:	test   al,0xed
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	(bad)  
   1400123c1:	jp     0x1400123c3
   1400123c3:	add    bh,dl
   1400123c5:	jp     0x1400123c7
   1400123c7:	add    al,bl
   1400123c9:	call   0x1bae123ce
   1400123ce:	add    BYTE PTR [rax],al
   1400123d0:	popf   
   1400123d1:	jnp    0x1400123d3
   1400123d3:	add    al,cl
   1400123d5:	in     eax,dx
   1400123d6:	add    BYTE PTR [rax],al
   1400123d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400123d9:	jnp    0x1400123db
   1400123db:	add    BYTE PTR [rcx+0x7c],cl
   1400123de:	add    BYTE PTR [rax],al
   1400123e0:	(bad)  
   1400123e1:	in     eax,dx
   1400123e2:	add    BYTE PTR [rax],al
   1400123e4:	push   rax
   1400123e5:	jl     0x1400123e7
   1400123e7:	add    BYTE PTR [rbx],dh
   1400123e9:	jge    0x1400123eb
   1400123eb:	add    BYTE PTR [rax+0x3c0000e9],ah
   1400123f1:	jge    0x1400123f3
   1400123f3:	add    BYTE PTR [rsi+rdi*2-0x12180000],ah
   1400123fa:	add    BYTE PTR [rax],al
   1400123fc:	lods   al,BYTE PTR ds:[rsi]
   1400123fd:	jle    0x1400123ff
   1400123ff:	add    BYTE PTR [rax-0xbffff80],dh
   140012405:	in     eax,dx
   140012406:	add    BYTE PTR [rax],al
   140012408:	rol    BYTE PTR [rax-0x7f1a0000],0x0
   14001240f:	add    BYTE PTR [rax+rbp*8+0x0],dh
   140012413:	add    al,dh
   140012415:	add    BYTE PTR [rax],0x0
   140012418:	adc    eax,DWORD PTR [rcx-0x178c0000]
   14001241e:	add    BYTE PTR [rax],al
   140012420:	and    BYTE PTR [rcx-0x7dcb0000],al
   140012426:	add    BYTE PTR [rax],al
   140012428:	push   rax
   140012429:	call   0xc275242e
   14001242e:	add    BYTE PTR [rax],al
   140012430:	fwait
   140012431:	(bad)  
   140012432:	add    BYTE PTR [rax],al
   140012434:	shr    al,1
   140012436:	add    BYTE PTR [rax],al
   140012438:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012439:	(bad)  
   14001243a:	add    BYTE PTR [rax],al
   14001243c:	fild   WORD PTR [rdx-0x179c0000]
   140012442:	add    BYTE PTR [rax],al
   140012444:	call   0x1360124cb
   140012449:	test   DWORD PTR [rax],eax
   14001244b:	add    BYTE PTR [rsi+rbp*8],dl
   14001244e:	add    BYTE PTR [rax],al
   140012450:	cld    
   140012451:	test   DWORD PTR [rax],eax
   140012453:	add    bl,al
   140012455:	xchg   BYTE PTR [rax],al
   140012457:	add    BYTE PTR [rax],bh
   140012459:	out    dx,al
   14001245a:	add    BYTE PTR [rax],al
   14001245c:	rol    BYTE PTR [rsi-0x78ff0000],1
   140012462:	add    BYTE PTR [rax],al
   140012464:	call   0x154012551
   140012469:	xchg   DWORD PTR [rax],eax
   14001246b:	add    BYTE PTR [rbp-0x79],cl
   14001246e:	add    BYTE PTR [rax],al
   140012470:	push   rax
   140012471:	call   0xc7612476
   140012476:	add    BYTE PTR [rax],al
   140012478:	(bad)  
   140012479:	mov    BYTE PTR [rax],al
   14001247b:	add    al,dl
   14001247d:	call   0xc8412482
   140012482:	add    BYTE PTR [rax],al
   140012484:	mov    DWORD PTR [rax-0x17180000],ecx
   14001248a:	add    BYTE PTR [rax],al
   14001248c:	nop
   14001248d:	mov    BYTE PTR [rax],al
   14001248f:	add    BYTE PTR [rdx-0x76],ah
   140012492:	add    BYTE PTR [rax],al
   140012494:	push   rax
   140012495:	out    dx,al
   140012496:	add    BYTE PTR [rax],al
   140012498:	jo     0x140012424
   14001249a:	add    BYTE PTR [rax],al
   14001249c:	(bad)  
   14001249d:	mov    al,BYTE PTR [rax]
   14001249f:	add    al,dl
   1400124a1:	call   0xcaa124a6
   1400124a6:	add    BYTE PTR [rax],al
   1400124a8:	mov    esi,0x8000008a
   1400124ad:	out    dx,al
   1400124ae:	add    BYTE PTR [rax],al
   1400124b0:	(bad)  
   1400124b1:	mov    al,BYTE PTR [rax]
   1400124b3:	add    BYTE PTR [rdx-0x75],ah
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	test   dh,ch
   1400124ba:	add    BYTE PTR [rax],al
   1400124bc:	push   0x7f00008b
   1400124c1:	mov    eax,DWORD PTR [rax]
   1400124c3:	add    al,dl
   1400124c5:	call   0xcbb124ca
   1400124ca:	add    BYTE PTR [rax],al
   1400124cc:	jmp    0x11001255c
   1400124d1:	call   0xcbf124d6
   1400124d6:	add    BYTE PTR [rax],al
   1400124d8:	or     BYTE PTR [rax+rax*1+0xe8d000],cl
   1400124df:	add    BYTE PTR [rsp+rcx*4],bl
   1400124e2:	add    BYTE PTR [rax],al
   1400124e4:	jo     0x140012472
   1400124e6:	add    BYTE PTR [rax],al
   1400124e8:	test   al,0xee
   1400124ea:	add    BYTE PTR [rax],al
   1400124ec:	js     0x14001247a
   1400124ee:	add    BYTE PTR [rax],al
   1400124f0:	mov    ebp,0x7400008c
   1400124f5:	call   0xcd2124fa
   1400124fa:	add    BYTE PTR [rax],al
   1400124fc:	ins    DWORD PTR es:[rdi],dx
   1400124fd:	lea    eax,[rax]
   1400124ff:	add    al,cl
   140012501:	out    dx,al
   140012502:	add    BYTE PTR [rax],al
   140012504:	mov    ah,0x8d
   140012506:	add    BYTE PTR [rax],al
   140012508:	test   BYTE PTR [rsi-0x11140000],cl
   14001250e:	add    BYTE PTR [rax],al
   140012510:	mov    esp,0xf000008e
   140012515:	mov    es,WORD PTR [rax]
   140012517:	add    BYTE PTR [rax+rbp*8+0x0],dh
   14001251b:	add    BYTE PTR [rax],al
   14001251d:	pop    QWORD PTR [rax]
   14001251f:	add    BYTE PTR [rcx-0x70],dh
   140012522:	add    BYTE PTR [rax],al
   140012524:	clc    
   140012525:	out    dx,al
   140012526:	add    BYTE PTR [rax],al
   140012528:	test   al,0x90
   14001252a:	add    BYTE PTR [rax],al
   14001252c:	not    BYTE PTR [rax-0x17300000]
   140012532:	add    BYTE PTR [rax],al
   140012534:	and    BYTE PTR [rcx-0x6e690000],dl
   14001253a:	add    BYTE PTR [rax],al
   14001253c:	add    al,0xef
   14001253e:	add    BYTE PTR [rax],al
   140012540:	movabs al,ds:0xd0000091ee000091
   140012549:	call   0xd221254e
   14001254e:	add    BYTE PTR [rax],al
   140012550:	xchg   edi,eax
   140012551:	xchg   edx,eax
   140012552:	add    BYTE PTR [rax],al
   140012554:	or     al,0xef
   140012556:	add    BYTE PTR [rax],al
   140012558:	or     al,0x93
   14001255a:	add    BYTE PTR [rax],al
   14001255c:	sub    DWORD PTR [rbx-0x17300000],edx
   140012562:	add    BYTE PTR [rax],al
   140012564:	xor    BYTE PTR [rbx-0x6c6d0000],dl
   14001256a:	add    BYTE PTR [rax],al
   14001256c:	je     0x140012556
   14001256e:	add    BYTE PTR [rax],al
   140012570:	rcl    BYTE PTR [rbx-0x6c2e0000],1
   140012576:	add    BYTE PTR [rax],al
   140012578:	add    bh,ch
   14001257a:	add    BYTE PTR [rax],al
   14001257c:	lock xchg ebx,eax
   14001257e:	add    BYTE PTR [rax],al
   140012580:	cmp    eax,0x18000094
   140012585:	out    dx,eax
   140012586:	add    BYTE PTR [rax],al
   140012588:	rex.RX xchg esp,eax
   14001258a:	add    BYTE PTR [rax],al
   14001258c:	(bad)  
   14001258d:	xchg   esp,eax
   14001258e:	add    BYTE PTR [rax],al
   140012590:	mov    bl,ch
   140012592:	add    BYTE PTR [rax],al
   140012594:	push   0xffffffff84000094
   140012599:	xchg   esp,eax
   14001259a:	add    BYTE PTR [rax],al
   14001259c:	clc    
   14001259d:	in     al,dx
   14001259e:	add    BYTE PTR [rax],al
   1400125a0:	mov    dl,BYTE PTR [rax+rax*1+0x94a600]
   1400125a7:	add    BYTE PTR [rax],ah
   1400125a9:	in     eax,dx
   1400125aa:	add    BYTE PTR [rax],al
   1400125ac:	lods   al,BYTE PTR ds:[rsi]
   1400125ad:	xchg   esp,eax
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	retf   0x94
   1400125b3:	add    BYTE PTR [rax],ah
   1400125b5:	in     eax,dx
   1400125b6:	add    BYTE PTR [rax],al
   1400125b8:	rcl    BYTE PTR [rax+rax*1+0x94eb00],1
   1400125bf:	add    BYTE PTR [rax],ah
   1400125c1:	in     eax,dx
   1400125c2:	add    BYTE PTR [rax],al
   1400125c4:	add    BYTE PTR [rbp-0x6ae00000],dl
   1400125ca:	add    BYTE PTR [rax],al
   1400125cc:	and    ch,ch
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	xor    BYTE PTR [rbp-0x6a920000],dl
   1400125d6:	add    BYTE PTR [rax],al
   1400125d8:	push   rax
   1400125d9:	.byte 0xe8
	...

Disassembly of section .didat:

0000000140013000 <.didat>:
   140013000:	add    BYTE PTR [rcx+0x14000],dl
	...
   14001300e:	add    BYTE PTR [rax],al
   140013010:	movabs al,ds:0xc000000001400092
   140013019:	xchg   edx,eax
   14001301a:	add    BYTE PTR [rax+0x1],al
   14001301d:	add    BYTE PTR [rax],al
   14001301f:	add    BYTE PTR [rax],al
   140013021:	xchg   edx,eax
   140013022:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140014000 <.rsrc>:
	...
   14001400c:	add    DWORD PTR [rax],eax
   14001400e:	add    al,BYTE PTR [rax]
   140014010:	call   0x168814015
   140014015:	add    BYTE PTR [rax],al
   140014017:	adc    BYTE PTR [rax],0x0
   14001401a:	add    BYTE PTR [rax],al
   14001401c:	add    BYTE PTR [rax],al
   14001401f:	sbb    BYTE PTR [rax],0x0
   140014022:	add    BYTE PTR [rax],al
   140014024:	pop    rax
   140014025:	add    BYTE PTR [rax],al
   140014027:	add    BYTE PTR [rax],0x0
	...
   140014036:	add    DWORD PTR [rax],eax
   140014038:	add    DWORD PTR [rax],eax
   14001403a:	add    BYTE PTR [rax],al
   14001403c:	jo     0x14001403e
   14001403e:	add    BYTE PTR [rax+0x0],al
	...
   14001404c:	add    BYTE PTR [rax],al
   14001404e:	add    DWORD PTR [rax],eax
   140014050:	add    DWORD PTR [rax],eax
   140014052:	add    BYTE PTR [rax],al
   140014054:	mov    BYTE PTR [rax],al
   140014056:	add    BYTE PTR [rax+0x0],al
	...
   140014064:	add    BYTE PTR [rax],al
   140014066:	add    DWORD PTR [rax],eax
   140014068:	add    DWORD PTR [rax],eax
   14001406a:	add    BYTE PTR [rax],al
   14001406c:	movabs al,ds:0x800000
	...
   14001407d:	add    BYTE PTR [rcx],al
   14001407f:	add    BYTE PTR [rcx],cl
   140014081:	add    al,0x0
   140014083:	add    BYTE PTR [rax+0x0],bh
	...
   140014095:	add    BYTE PTR [rcx],al
   140014097:	add    BYTE PTR [rcx],cl
   140014099:	add    al,0x0
   14001409b:	add    al,cl
	...
   1400140ad:	add    BYTE PTR [rcx],al
   1400140af:	add    BYTE PTR [rcx],cl
   1400140b1:	add    al,0x0
   1400140b3:	add    al,bl
   1400140b5:	add    BYTE PTR [rax],al
   1400140b7:	add    BYTE PTR [rax],bh
   1400140b9:	add    QWORD PTR [rax],rax
   1400140bc:	enter  0x0,0x0
	...
   1400140c8:	mov    BYTE PTR [rcx+rax*1+0x0],al
   1400140cc:	lods   al,BYTE PTR ds:[rsi]
   1400140cd:	add    eax,DWORD PTR [rax]
	...
   1400140d7:	add    al,dh
   1400140d9:	rex add DWORD PTR [rax],eax
   1400140dc:	xchg   ebx,eax
   1400140dd:	add    eax,DWORD PTR [rax]
	...
   1400140e7:	add    BYTE PTR [rbx],al
   1400140e9:	add    BYTE PTR [rbp+0x0],cl
   1400140ec:	push   rbp
   1400140ed:	add    BYTE PTR [rcx+0x0],cl
   1400140f0:	cmp    al,0x3f
   1400140f2:	js     0x140014161
   1400140f4:	ins    BYTE PTR es:[rdi],dx
   1400140f5:	and    BYTE PTR [rsi+0x65],dh
   1400140f8:	jb     0x14001416d
   1400140fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140014101:	xor    BYTE PTR [rdx],ah
   140014103:	and    BYTE PTR [rbp+0x6e],ah
   140014106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140014109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140014110:	rex.RX sub eax,0x73202238
   140014116:	je     0x140014179
   140014118:	outs   dx,BYTE PTR ds:[rsi]
   140014119:	fs (bad) 
   14001411b:	ins    BYTE PTR es:[rdi],dx
   14001411c:	outs   dx,DWORD PTR ds:[rsi]
   14001411d:	outs   dx,BYTE PTR ds:[rsi]
   14001411e:	gs cmp eax,0x73657922
   140014124:	and    bh,BYTE PTR [rdi]
   140014126:	ds or  eax,0x2d213c0a
   14001412c:	sub    eax,0x706f4320
   140014131:	jns    0x1400141a5
   140014133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001413a:	sub    DWORD PTR [rax],esp
   14001413c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140014144:	je     0x140014166
   140014146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014148:	jb     0x1400141ba
   14001414a:	outs   dx,DWORD PTR ds:[rsi]
   14001414b:	jb     0x1400141ae
   14001414d:	je     0x1400141b8
   14001414f:	outs   dx,DWORD PTR ds:[rsi]
   140014150:	outs   dx,BYTE PTR ds:[rsi]
   140014151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e7f84
   140014157:	cmp    al,0x61
   140014159:	jae    0x1400141ce
   14001415b:	gs ins DWORD PTR es:[rdi],dx
   14001415d:	(bad)  
   14001415e:	ins    BYTE PTR es:[rdi],dx
   14001415f:	jns    0x140014181
   140014161:	js     0x1400141d0
   140014163:	ins    BYTE PTR es:[rdi],dx
   140014164:	outs   dx,BYTE PTR ds:[rsi]
   140014165:	jae    0x1400141a4
   140014167:	and    dh,BYTE PTR [rbp+0x72]
   14001416a:	outs   dx,BYTE PTR ds:[rsi]
   14001416b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001416e:	push   0x73616d65
   140014173:	sub    eax,0x7263696d
   140014178:	outs   dx,DWORD PTR ds:[rsi]
   140014179:	jae    0x1400141ea
   14001417b:	data16 je 0x1400141ab
   14001417e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140014181:	cmp    ah,BYTE PTR [rcx+0x73]
   140014184:	ins    DWORD PTR es:[rdi],dx
   140014185:	cs jbe 0x1400141b9
   140014188:	and    ah,BYTE PTR [rax]
   14001418a:	and    BYTE PTR [rax+0x6d],bh
   14001418d:	ins    BYTE PTR es:[rdi],dx
   14001418e:	outs   dx,BYTE PTR ds:[rsi]
   14001418f:	jae    0x1400141cb
   140014191:	(bad)  
   140014192:	jae    0x140014201
   140014194:	jbe    0x1400141c9
   140014196:	cmp    eax,0x6e727522
   14001419b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001419e:	push   0x73616d65
   1400141a3:	sub    eax,0x7263696d
   1400141a8:	outs   dx,DWORD PTR ds:[rsi]
   1400141a9:	jae    0x14001421a
   1400141ab:	data16 je 0x1400141db
   1400141ae:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400141b1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400141b4:	ins    DWORD PTR es:[rdi],dx
   1400141b5:	cs jbe 0x1400141eb
   1400141b8:	and    ah,BYTE PTR [rax]
   1400141ba:	ins    DWORD PTR es:[rdi],dx
   1400141bb:	(bad)  
   1400141bc:	outs   dx,BYTE PTR ds:[rsi]
   1400141bd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400141c4:	jb     0x140014239
   1400141c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400141cd:	xor    BYTE PTR [rdx],ah
   1400141cf:	ds or  eax,0x3c20200a
   1400141d5:	(bad)  
   1400141d6:	jae    0x14001424b
   1400141d8:	gs ins DWORD PTR es:[rdi],dx
   1400141da:	(bad)  
   1400141db:	ins    BYTE PTR es:[rdi],dx
   1400141dc:	jns    0x140014227
   1400141de:	fs outs dx,BYTE PTR gs:[rsi]
   1400141e1:	je     0x14001424c
   1400141e3:	je     0x14001425e
   1400141e5:	or     eax,0x2020200a
   1400141ea:	and    BYTE PTR [rsi+0x65],dh
   1400141ed:	jb     0x140014262
   1400141ef:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400141f6:	xor    BYTE PTR [rsi],ch
   1400141f8:	xor    BYTE PTR [rsi],ch
   1400141fa:	xor    BYTE PTR [rdx],ah
   1400141fc:	or     eax,0x2020200a
   140014201:	and    BYTE PTR [rax+0x72],dh
   140014204:	outs   dx,DWORD PTR ds:[rsi]
   140014205:	movsxd esp,DWORD PTR [rbp+0x73]
   140014208:	jae    0x140014279
   14001420a:	jb     0x14001424d
   14001420c:	jb     0x140014271
   14001420e:	push   0x63657469
   140014213:	je     0x14001428a
   140014215:	jb     0x14001427c
   140014217:	cmp    eax,0x646d6122
   14001421c:	ss xor al,0x22
   14001421f:	or     eax,0x2020200a
   140014224:	and    BYTE PTR [rsi+0x61],ch
   140014227:	ins    DWORD PTR es:[rdi],dx
   140014228:	gs cmp eax,0x73616522
   14001422e:	imul   ebp,DWORD PTR [rsi+0x76],0x72656b6f
   140014235:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160216245
   14001423b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001423f:	gs cmp eax,0x6e697722
   140014245:	xor    esi,DWORD PTR [rdx]
   140014247:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160216257
   14001424d:	and    BYTE PTR [rdi],ch
   14001424f:	ds or  eax,0x3c20200a
   140014255:	fs gs jae 0x1400142bc
   140014259:	jb     0x1400142c4
   14001425b:	jo     0x1400142d1
   14001425d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616d3e
   140014264:	imul   esp,DWORD PTR [rsi+0x65],0x66207473
   14001426b:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
   140014273:	gs (bad) 
   140014275:	jae    0x1400142e0
   140014277:	outs   dx,BYTE PTR ds:[rsi]
   140014278:	jbe    0x1400142e9
   14001427a:	imul   esp,DWORD PTR [rbp+0x72],0x3c
   14001427e:	(bad)  
   14001427f:	fs gs jae 0x1400142e6
   140014283:	jb     0x1400142ee
   140014285:	jo     0x1400142fb
   140014287:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14001428e:	and    BYTE PTR [rsp+rsi*2],bh
   140014291:	jb     0x140014308
   140014293:	jae    0x140014309
   140014295:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014297:	outs   dx,WORD PTR ds:[rsi]
   140014299:	and    BYTE PTR [rax+0x6d],bh
   14001429c:	ins    BYTE PTR es:[rdi],dx
   14001429d:	outs   dx,BYTE PTR ds:[rsi]
   14001429e:	jae    0x1400142dd
   1400142a0:	and    dh,BYTE PTR [rbp+0x72]
   1400142a3:	outs   dx,BYTE PTR ds:[rsi]
   1400142a4:	cmp    dh,BYTE PTR [rbx+0x63]
   1400142a7:	push   0x73616d65
   1400142ac:	sub    eax,0x7263696d
   1400142b1:	outs   dx,DWORD PTR ds:[rsi]
   1400142b2:	jae    0x140014323
   1400142b4:	data16 je 0x1400142e4
   1400142b7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400142ba:	cmp    ah,BYTE PTR [rcx+0x73]
   1400142bd:	ins    DWORD PTR es:[rdi],dx
   1400142be:	cs jbe 0x1400142f4
   1400142c1:	and    bh,BYTE PTR [rsi]
   1400142c3:	or     eax,0x2020200a
   1400142c8:	and    BYTE PTR [rbx+rsi*2],bh
   1400142cb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400142cf:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400142d7:	and    BYTE PTR [rax],ah
   1400142d9:	and    BYTE PTR [rax],ah
   1400142db:	cmp    al,0x72
   1400142dd:	gs jno 0x140014355
   1400142e0:	gs jae 0x140014357
   1400142e3:	gs fs push rax
   1400142e6:	jb     0x140014351
   1400142e8:	jbe    0x140014353
   1400142ea:	ins    BYTE PTR es:[rdi],dx
   1400142eb:	gs addr32 gs jae 0x14001432e
   1400142f0:	or     eax,0x2020200a
   1400142f5:	and    BYTE PTR [rax],ah
   1400142f7:	and    BYTE PTR [rax],ah
   1400142f9:	and    BYTE PTR [rdx+rsi*2],bh
   1400142fc:	gs jno 0x140014374
   1400142ff:	gs jae 0x140014376
   140014302:	gs fs rex.RB js 0x14001436c
   140014307:	movsxd esi,DWORD PTR [rbp+0x74]
   14001430a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140014311:	ins    BYTE PTR es:[rdi],dx
   140014312:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160216322
   140014318:	and    BYTE PTR [rax],ah
   14001431a:	and    BYTE PTR [rax],ah
   14001431c:	and    BYTE PTR [rax],ah
   14001431e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140014322:	gs ins BYTE PTR es:[rdi],dx
   140014324:	cmp    eax,0x71657222
   140014329:	jne    0x140014394
   14001432b:	jb     0x140014392
   14001432d:	rex.B
   14001432e:	fs ins DWORD PTR es:[rdi],dx
   140014330:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   140014337:	je     0x1400143a8
   140014339:	jb     0x14001435d
   14001433b:	and    BYTE PTR [rip+0x2020200a],cl        # 0x16021634b
   140014341:	and    BYTE PTR [rax],ah
   140014343:	and    BYTE PTR [rax],ah
   140014345:	and    BYTE PTR [rax],ah
   140014347:	and    BYTE PTR [rbp+0x69],dh
   14001434a:	movsxd esp,DWORD PTR [r11+0x65]
   14001434e:	jae    0x1400143c3
   140014350:	cmp    eax,0x6c616622
   140014355:	jae    0x1400143bc
   140014357:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160216367
   14001435d:	and    BYTE PTR [rax],ah
   14001435f:	and    BYTE PTR [rax],ah
   140014361:	and    BYTE PTR [rdi],ch
   140014363:	ds or  eax,0x2020200a
   140014369:	and    BYTE PTR [rax],ah
   14001436b:	and    BYTE PTR [rdi+rbp*1],bh
   14001436e:	jb     0x1400143d5
   140014370:	jno    0x1400143e7
   140014372:	gs jae 0x1400143e9
   140014375:	gs fs push rax
   140014378:	jb     0x1400143e3
   14001437a:	jbe    0x1400143e5
   14001437c:	ins    BYTE PTR es:[rdi],dx
   14001437d:	gs addr32 gs jae 0x1400143c0
   140014382:	or     eax,0x2020200a
   140014387:	and    BYTE PTR [rdi+rbp*1],bh
   14001438a:	jae    0x1400143f1
   14001438c:	movsxd esi,DWORD PTR [rbp+0x72]
   14001438f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140014397:	cmp    al,0x2f
   140014399:	je     0x14001440d
   14001439b:	jne    0x140014410
   14001439d:	je     0x1400143e8
   14001439f:	outs   dx,BYTE PTR ds:[rsi]
   1400143a0:	outs   dx,WORD PTR ds:[rsi]
   1400143a2:	ds or  eax,0x3c20200a
   1400143a8:	(bad)  
   1400143a9:	jae    0x140014418
   1400143ab:	jbe    0x1400143e0
   1400143ad:	cmp    ah,BYTE PTR [rcx+0x70]
   1400143b0:	jo     0x14001441e
   1400143b2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400143b9:	ds or  eax,0x2020200a
   1400143bf:	and    BYTE PTR [rcx+riz*2],bh
   1400143c2:	jae    0x140014431
   1400143c4:	jbe    0x1400143f9
   1400143c6:	cmp    dh,BYTE PTR [rdi+0x69]
   1400143c9:	outs   dx,BYTE PTR ds:[rsi]
   1400143ca:	outs   dx,DWORD PTR fs:[rsi]
   1400143cc:	ja     0x140014441
   1400143ce:	push   rbx
   1400143cf:	gs je  0x140014446
   1400143d2:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   1400143d9:	ins    BYTE PTR es:[rdi],dx
   1400143da:	outs   dx,BYTE PTR ds:[rsi]
   1400143db:	jae    0x14001441a
   1400143dd:	and    ch,BYTE PTR [rax+0x74]
   1400143e0:	je     0x140014452
   1400143e2:	cmp    ch,BYTE PTR [rdi]
   1400143e4:	(bad)  
   1400143e5:	jae    0x14001444a
   1400143e7:	push   0x73616d65
   1400143ec:	cs ins DWORD PTR es:[rdi],dx
   1400143ee:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400143f5:	je     0x140014425
   1400143f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400143fa:	(bad)  
   1400143fb:	push   rbx
   1400143fc:	rex.WRB
   1400143fd:	rex.WB (bad) 
   1400143ff:	xor    dh,BYTE PTR [rax]
   140014401:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a9b36
   140014407:	outs   dx,DWORD PTR fs:[rsi]
   140014409:	ja     0x14001447e
   14001440b:	push   rbx
   14001440c:	gs je  0x140014483
   14001440f:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   140014416:	or     ah,BYTE PTR [rax]
   140014418:	and    BYTE PTR [rax],ah
   14001441a:	and    BYTE PTR [rax],ah
   14001441c:	and    BYTE PTR [rcx+riz*2],bh
   14001441f:	jne    0x140014495
   140014421:	outs   dx,DWORD PTR ds:[rsi]
   140014422:	rex.RB ins BYTE PTR es:[rdi],dx
   140014424:	gs jbe 0x140014488
   140014427:	je     0x14001448e
   140014429:	ds je  0x14001449e
   14001442c:	jne    0x140014493
   14001442e:	cmp    al,0x2f
   140014430:	(bad)  
   140014431:	jne    0x1400144a7
   140014433:	outs   dx,DWORD PTR ds:[rsi]
   140014434:	rex.RB ins BYTE PTR es:[rdi],dx
   140014436:	gs jbe 0x14001449a
   140014439:	je     0x1400144a0
   14001443b:	ds or  eax,0x2020200a
   140014441:	and    BYTE PTR [rdi+rbp*1],bh
   140014444:	(bad)  
   140014445:	jae    0x1400144b4
   140014447:	jbe    0x14001447c
   140014449:	cmp    dh,BYTE PTR [rdi+0x69]
   14001444c:	outs   dx,BYTE PTR ds:[rsi]
   14001444d:	outs   dx,DWORD PTR fs:[rsi]
   14001444f:	ja     0x1400144c4
   140014451:	push   rbx
   140014452:	gs je  0x1400144c9
   140014455:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14001445c:	and    BYTE PTR [rax],ah
   14001445e:	cmp    al,0x2f
   140014460:	(bad)  
   140014461:	jae    0x1400144d0
   140014463:	jbe    0x140014498
   140014465:	cmp    ah,BYTE PTR [rcx+0x70]
   140014468:	jo     0x1400144d6
   14001446a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140014471:	ds or  eax,0x612f3c0a
   140014477:	jae    0x1400144ec
   140014479:	gs ins DWORD PTR es:[rdi],dx
   14001447b:	(bad)  
   14001447c:	ins    BYTE PTR es:[rdi],dx
   14001447d:	jns    0x1400144bd
   14001447f:	or     eax,0xa0d0a
   140014484:	add    BYTE PTR [rax],al
   140014486:	add    BYTE PTR [rax],al
   140014488:	lods   al,BYTE PTR ds:[rsi]
   140014489:	add    esi,DWORD PTR [rax+rax*1]
   14001448c:	add    BYTE PTR [rax],al
   14001448e:	push   rsi
   14001448f:	add    BYTE PTR [rbx+0x0],dl
   140014492:	pop    rdi
   140014493:	add    BYTE PTR [rsi+0x0],dl
   140014496:	add    BYTE PTR [r10+0x0],r10b
   14001449a:	push   rbx
   14001449b:	add    BYTE PTR [rcx+0x0],cl
   14001449e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400144a2:	pop    rdi
   1400144a3:	add    BYTE PTR [rcx+0x0],cl
   1400144a6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400144aa:	rex.WRXB add BYTE PTR [r8],r8b
   1400144ad:	add    BYTE PTR [rax],al
   1400144af:	add    BYTE PTR [rbp+0xfeef04],bh
   1400144b5:	add    BYTE PTR [rcx],al
   1400144b7:	add    BYTE PTR [rax],al
   1400144b9:	add    BYTE PTR [rdx],cl
   1400144bb:	add    BYTE PTR [rax],al
   1400144bd:	add    BYTE PTR [rax],bpl
   1400144c0:	add    BYTE PTR [rax],al
   1400144c2:	or     al,BYTE PTR [rax]
   1400144c4:	add    BYTE PTR [rax+0x0],al
   1400144c7:	sub    BYTE PTR [rdi],bh
   1400144c9:	add    BYTE PTR [rax],al
   1400144cb:	add    BYTE PTR [rax],al
   1400144cd:	add    BYTE PTR [rax],al
   1400144cf:	add    BYTE PTR [rax+rax*1],al
   1400144d2:	add    al,0x0
   1400144d4:	add    DWORD PTR [rax],eax
	...
   1400144e2:	add    BYTE PTR [rax],al
   1400144e4:	or     al,BYTE PTR [rbx]
   1400144e6:	add    BYTE PTR [rax],al
   1400144e8:	add    DWORD PTR [rax],eax
   1400144ea:	push   rbx
   1400144eb:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400144ef:	add    BYTE PTR [rcx+0x0],ch
   1400144f2:	outs   dx,BYTE PTR ds:[rsi]
   1400144f3:	add    BYTE PTR [rdi+0x0],ah
   1400144f6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400144fa:	ins    BYTE PTR es:[rdi],dx
   1400144fb:	add    BYTE PTR [rbp+0x0],ah
   1400144fe:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014502:	data16 add BYTE PTR [rdi+0x0],ch
   140014506:	add    BYTE PTR [rax],al
   140014508:	out    0x2,al
   14001450a:	add    BYTE PTR [rax],al
   14001450c:	add    DWORD PTR [rax],eax
   14001450e:	xor    BYTE PTR [rax],al
   140014510:	xor    al,0x0
   140014512:	xor    BYTE PTR [rax],al
   140014514:	cmp    DWORD PTR [rax],eax
   140014516:	xor    BYTE PTR [rax],al
   140014518:	xor    al,0x0
   14001451a:	rex.X add BYTE PTR [rax],sil
   14001451d:	add    BYTE PTR [rax],al
   14001451f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140014523:	add    BYTE PTR [rcx],al
   140014525:	add    BYTE PTR [rbx+0x0],al
   140014528:	outs   dx,DWORD PTR ds:[rsi]
   140014529:	add    BYTE PTR [rbp+0x0],ch
   14001452c:	jo     0x14001452e
   14001452e:	(bad)  
   14001452f:	add    BYTE PTR [rsi+0x0],ch
   140014532:	jns    0x140014534
   140014534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014538:	ins    DWORD PTR es:[rdi],dx
   140014539:	add    BYTE PTR [rbp+0x0],ah
   14001453c:	add    BYTE PTR [rax],al
   14001453e:	add    BYTE PTR [rax],al
   140014540:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014544:	movsxd eax,DWORD PTR [rax]
   140014546:	jb     0x140014548
   140014548:	outs   dx,DWORD PTR ds:[rsi]
   140014549:	add    BYTE PTR [rbx+0x0],dh
   14001454c:	outs   dx,DWORD PTR ds:[rsi]
   14001454d:	add    BYTE PTR [rsi+0x0],ah
   140014550:	je     0x140014552
   140014552:	and    BYTE PTR [rax],al
   140014554:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014558:	jb     0x14001455a
   14001455a:	jo     0x14001455c
   14001455c:	outs   dx,DWORD PTR ds:[rsi]
   14001455d:	add    BYTE PTR [rdx+0x0],dh
   140014560:	(bad)  
   140014561:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014565:	add    BYTE PTR [rdi+0x0],ch
   140014568:	outs   dx,BYTE PTR ds:[rsi]
   140014569:	add    BYTE PTR [rax],al
   14001456b:	add    BYTE PTR [rax+0x0],ah
   14001456e:	sbb    al,0x0
   140014570:	add    DWORD PTR [rax],eax
   140014572:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014576:	ins    BYTE PTR es:[rdi],dx
   140014577:	add    BYTE PTR [rbp+0x0],ah
   14001457a:	add    BYTE PTR [rbp+0x0],r12b
   14001457e:	jae    0x140014580
   140014580:	movsxd eax,DWORD PTR [rax]
   140014582:	jb     0x140014584
   140014584:	imul   eax,DWORD PTR [rax],0x740070
   14001458a:	imul   eax,DWORD PTR [rax],0x6e006f
   140014590:	add    BYTE PTR [rax],al
   140014592:	add    BYTE PTR [rax],al
   140014594:	add    BYTE PTR [r8+0x0],r15b
   140014598:	movsxd eax,DWORD PTR [rax]
   14001459a:	push   0x6e006100
   14001459f:	add    BYTE PTR [rdi+0x0],ah
   1400145a2:	add    BYTE PTR gs:[rax],ah
   1400145a5:	add    BYTE PTR [rcx+0x0],al
   1400145a8:	movsxd eax,DWORD PTR [rax]
   1400145aa:	je     0x1400145ac
   1400145ac:	imul   eax,DWORD PTR [rax],0x650076
   1400145b2:	push   rbx
   1400145b3:	add    BYTE PTR [rcx+0x0],bh
   1400145b6:	outs   dx,BYTE PTR ds:[rsi]
   1400145b7:	add    BYTE PTR [rbx+0x0],ah
   1400145ba:	and    BYTE PTR [rax],al
   1400145bc:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400145c0:	jbe    0x1400145c2
   1400145c2:	outs   dx,DWORD PTR ds:[rsi]
   1400145c3:	add    BYTE PTR [rbx+0x0],ch
   1400145c6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400145ca:	add    BYTE PTR [rax],al
   1400145cc:	data16 add BYTE PTR [rbx],ah
   1400145cf:	add    BYTE PTR [rcx],al
   1400145d1:	add    BYTE PTR [rsi+0x0],al
   1400145d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400145da:	push   rsi
   1400145db:	add    BYTE PTR [rbp+0x0],ah
   1400145de:	jb     0x1400145e0
   1400145e0:	jae    0x1400145e2
   1400145e2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400145e8:	add    BYTE PTR [rax],al
   1400145ea:	add    BYTE PTR [rax],al
   1400145ec:	xor    DWORD PTR [rax],eax
   1400145ee:	xor    BYTE PTR [rax],al
   1400145f0:	add    BYTE PTR cs:[rax],dh
   1400145f3:	add    BYTE PTR [rsi],ch
   1400145f5:	add    BYTE PTR [rcx],dh
   1400145f7:	add    BYTE PTR [rax],dh
   1400145f9:	add    BYTE PTR [rdx],dh
   1400145fb:	add    BYTE PTR [rax+rax*1],dh
   1400145fe:	xor    BYTE PTR [rax],al
   140014600:	add    BYTE PTR cs:[rcx],dh
   140014603:	add    BYTE PTR [rsi],dh
   140014605:	add    BYTE PTR [rbx],dh
   140014607:	add    BYTE PTR [rax],bh
   140014609:	add    BYTE PTR [rax+rax*1],dh
   14001460c:	and    BYTE PTR [rax],al
   14001460e:	sub    BYTE PTR [rax],al
   140014610:	je     0x140014612
   140014612:	push   0x2e003100
   140014617:	add    BYTE PTR [rcx],dh
   140014619:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701761f
   14001461f:	add    BYTE PTR [rax],dh
   140014621:	add    BYTE PTR [rcx],bh
   140014623:	add    BYTE PTR [rip+0x37003100],ch        # 0x177017729
   140014629:	add    BYTE PTR [rax],dh
   14001462b:	add    BYTE PTR [rax],dh
   14001462d:	add    BYTE PTR [rcx],ch
   14001462f:	add    BYTE PTR [rax],al
   140014631:	add    BYTE PTR [rax],al
   140014633:	add    BYTE PTR [rsi],bh
   140014635:	add    BYTE PTR [rdi],cl
   140014637:	add    BYTE PTR [rcx],al
   140014639:	add    BYTE PTR [rcx+0x0],cl
   14001463c:	outs   dx,BYTE PTR ds:[rsi]
   14001463d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140014641:	add    BYTE PTR [rdx+0x0],dh
   140014644:	outs   dx,BYTE PTR ds:[rsi]
   140014645:	add    BYTE PTR [rcx+0x0],ah
   140014648:	ins    BYTE PTR es:[rdi],dx
   140014649:	add    BYTE PTR [rsi+0x0],cl
   14001464c:	(bad)  
   14001464d:	add    BYTE PTR [rbp+0x0],ch
   140014650:	add    BYTE PTR gs:[rax],al
   140014653:	add    BYTE PTR [rbp+0x0],ah
   140014656:	(bad)  
   140014657:	add    BYTE PTR [rbx+0x0],dh
   14001465a:	imul   eax,DWORD PTR [rax],0x76006e
   140014660:	outs   dx,DWORD PTR ds:[rsi]
   140014661:	add    BYTE PTR [rbx+0x0],ch
   140014664:	add    BYTE PTR gs:[rdx+0x0],dh
   140014668:	add    BYTE PTR cs:[rbp+0x0],ah
   14001466c:	js     0x14001466e
   14001466e:	add    BYTE PTR gs:[rax],al
   140014671:	add    BYTE PTR [rax],al
   140014673:	add    BYTE PTR [rax+0x1002e00],al
   140014679:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001467d:	add    BYTE PTR [rdi+0x0],ah
   140014680:	(bad)  
   140014681:	add    BYTE PTR [rax+rax*1+0x43],ch
   140014685:	add    BYTE PTR [rdi+0x0],ch
   140014688:	jo     0x14001468a
   14001468a:	jns    0x14001468c
   14001468c:	jb     0x14001468e
   14001468e:	imul   eax,DWORD PTR [rax],0x680067
   140014694:	je     0x140014696
   140014696:	add    BYTE PTR [rax],al
   140014698:	test   eax,0x4d002000
   14001469d:	add    BYTE PTR [rcx+0x0],ch
   1400146a0:	movsxd eax,DWORD PTR [rax]
   1400146a2:	jb     0x1400146a4
   1400146a4:	outs   dx,DWORD PTR ds:[rsi]
   1400146a5:	add    BYTE PTR [rbx+0x0],dh
   1400146a8:	outs   dx,DWORD PTR ds:[rsi]
   1400146a9:	add    BYTE PTR [rsi+0x0],ah
   1400146ac:	je     0x1400146ae
   1400146ae:	and    BYTE PTR [rax],al
   1400146b0:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400146b4:	jb     0x1400146b6
   1400146b6:	jo     0x1400146b8
   1400146b8:	outs   dx,DWORD PTR ds:[rsi]
   1400146b9:	add    BYTE PTR [rdx+0x0],dh
   1400146bc:	(bad)  
   1400146bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400146c1:	add    BYTE PTR [rdi+0x0],ch
   1400146c4:	outs   dx,BYTE PTR ds:[rsi]
   1400146c5:	add    BYTE PTR [rsi],ch
   1400146c7:	add    BYTE PTR [rax],ah
   1400146c9:	add    BYTE PTR [rcx+0x0],al
   1400146cc:	ins    BYTE PTR es:[rdi],dx
   1400146cd:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400146d1:	add    BYTE PTR [rdx+0x0],dh
   1400146d4:	imul   eax,DWORD PTR [rax],0x680067
   1400146da:	je     0x1400146dc
   1400146dc:	jae    0x1400146de
   1400146de:	and    BYTE PTR [rax],al
   1400146e0:	jb     0x1400146e2
   1400146e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400146e6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400146ea:	jbe    0x1400146ec
   1400146ec:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400146f1:	add    BYTE PTR [rax],al
   1400146f3:	add    BYTE PTR [rsi+0x0],al
   1400146f6:	sldt   WORD PTR [rcx]
   1400146f9:	add    BYTE PTR [rdi+0x0],cl
   1400146fc:	jb     0x1400146fe
   1400146fe:	imul   eax,DWORD PTR [rax],0x690067
   140014704:	outs   dx,BYTE PTR ds:[rsi]
   140014705:	add    BYTE PTR [rcx+0x0],ah
   140014708:	ins    BYTE PTR es:[rdi],dx
   140014709:	add    BYTE PTR [rsi+0x0],al
   14001470c:	imul   eax,DWORD PTR [rax],0x65006c
   140014712:	outs   dx,BYTE PTR ds:[rsi]
   140014713:	add    BYTE PTR [rcx+0x0],ah
   140014716:	ins    DWORD PTR es:[rdi],dx
   140014717:	add    BYTE PTR [rbp+0x0],ah
   14001471a:	add    BYTE PTR [rax],al
   14001471c:	add    BYTE PTR gs:[rcx+0x0],ah
   140014720:	jae    0x140014722
   140014722:	imul   eax,DWORD PTR [rax],0x76006e
   140014728:	outs   dx,DWORD PTR ds:[rsi]
   140014729:	add    BYTE PTR [rbx+0x0],ch
   14001472c:	add    BYTE PTR gs:[rdx+0x0],dh
   140014730:	add    BYTE PTR cs:[rbp+0x0],ah
   140014734:	js     0x140014736
   140014736:	add    BYTE PTR gs:[rax],al
   140014739:	add    BYTE PTR [rax],al
   14001473b:	add    BYTE PTR [rdx+0x0],ch
   14001473e:	and    eax,0x50000100
   140014743:	add    BYTE PTR [rdx+0x0],dh
   140014746:	outs   dx,DWORD PTR ds:[rsi]
   140014747:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001474b:	add    BYTE PTR [rbx+0x0],ah
   14001474e:	je     0x140014750
   140014750:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014754:	ins    DWORD PTR es:[rdi],dx
   140014755:	add    BYTE PTR [rbp+0x0],ah
   140014758:	add    BYTE PTR [rax],al
   14001475a:	add    BYTE PTR [rax],al
   14001475c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014760:	movsxd eax,DWORD PTR [rax]
   140014762:	jb     0x140014764
   140014764:	outs   dx,DWORD PTR ds:[rsi]
   140014765:	add    BYTE PTR [rbx+0x0],dh
   140014768:	outs   dx,DWORD PTR ds:[rsi]
   140014769:	add    BYTE PTR [rsi+0x0],ah
   14001476c:	je     0x14001476e
   14001476e:	scas   al,BYTE PTR es:[rdi]
   14001476f:	add    BYTE PTR [rax],ah
   140014771:	add    BYTE PTR [rdi+0x0],dl
   140014774:	imul   eax,DWORD PTR [rax],0x64006e
   14001477a:	outs   dx,DWORD PTR ds:[rsi]
   14001477b:	add    BYTE PTR [rdi+0x0],dh
   14001477e:	jae    0x140014780
   140014780:	scas   al,BYTE PTR es:[rdi]
   140014781:	add    BYTE PTR [rax],ah
   140014783:	add    BYTE PTR [rdi+0x0],cl
   140014786:	jo     0x140014788
   140014788:	add    BYTE PTR gs:[rdx+0x0],dh
   14001478c:	(bad)  
   14001478d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014791:	add    BYTE PTR [rsi+0x0],ch
   140014794:	add    BYTE PTR [eax],ah
   140014797:	add    BYTE PTR [rbx+0x0],dl
   14001479a:	jns    0x14001479c
   14001479c:	jae    0x14001479e
   14001479e:	je     0x1400147a0
   1400147a0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400147a4:	add    BYTE PTR [rax],al
   1400147a6:	add    BYTE PTR [rax],al
   1400147a8:	rex.RX add BYTE PTR [rcx],r10b
   1400147ab:	add    BYTE PTR [rcx],al
   1400147ad:	add    BYTE PTR [rax+0x0],dl
   1400147b0:	jb     0x1400147b2
   1400147b2:	outs   dx,DWORD PTR ds:[rsi]
   1400147b3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400147b7:	add    BYTE PTR [rbx+0x0],ah
   1400147ba:	je     0x1400147bc
   1400147bc:	push   rsi
   1400147bd:	add    BYTE PTR [rbp+0x0],ah
   1400147c0:	jb     0x1400147c2
   1400147c2:	jae    0x1400147c4
   1400147c4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400147ca:	add    BYTE PTR [rax],al
   1400147cc:	xor    DWORD PTR [rax],eax
   1400147ce:	xor    BYTE PTR [rax],al
   1400147d0:	add    BYTE PTR cs:[rax],dh
   1400147d3:	add    BYTE PTR [rsi],ch
   1400147d5:	add    BYTE PTR [rcx],dh
   1400147d7:	add    BYTE PTR [rax],dh
   1400147d9:	add    BYTE PTR [rdx],dh
   1400147db:	add    BYTE PTR [rax+rax*1],dh
   1400147de:	xor    BYTE PTR [rax],al
   1400147e0:	add    BYTE PTR cs:[rcx],dh
   1400147e3:	add    BYTE PTR [rsi],dh
   1400147e5:	add    BYTE PTR [rbx],dh
   1400147e7:	add    BYTE PTR [rax],bh
   1400147e9:	add    BYTE PTR [rax+rax*1],dh
   1400147ec:	add    BYTE PTR [rax],al
   1400147ee:	add    BYTE PTR [rax],al
   1400147f0:	add    BYTE PTR [rax],r8b
   1400147f3:	add    BYTE PTR [rcx],al
   1400147f5:	add    BYTE PTR [rsi+0x0],dl
   1400147f8:	(bad)  
   1400147f9:	add    BYTE PTR [rdx+0x0],dh
   1400147fc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014800:	ins    BYTE PTR es:[rdi],dx
   140014801:	add    BYTE PTR [rbp+0x0],ah
   140014804:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014808:	data16 add BYTE PTR [rdi+0x0],ch
   14001480c:	add    BYTE PTR [rax],al
   14001480e:	add    BYTE PTR [rax],al
   140014810:	and    al,0x0
   140014812:	add    al,0x0
   140014814:	add    BYTE PTR [rax],al
   140014816:	push   rsp
   140014817:	add    BYTE PTR [rdx+0x0],dh
   14001481a:	(bad)  
   14001481b:	add    BYTE PTR [rsi+0x0],ch
   14001481e:	jae    0x140014820
   140014820:	ins    BYTE PTR es:[rdi],dx
   140014821:	add    BYTE PTR [rcx+0x0],ah
   140014824:	je     0x140014826
   140014826:	imul   eax,DWORD PTR [rax],0x6e006f
   14001482c:	add    BYTE PTR [rax],al
   14001482e:	add    BYTE PTR [rax],al
   140014830:	or     DWORD PTR [rax+rsi*4],eax
   140014833:	add    al,0x0
   140014835:	add    BYTE PTR [rax],al
   140014837:	add    ch,cl
   140014839:	dec    ch
   14001483b:	dec    al
   14001483d:	add    BYTE PTR [rax],al
   14001483f:	add    BYTE PTR [rax],al
   140014841:	add    BYTE PTR [rcx],al
   140014843:	add    BYTE PTR [rax],al
   140014845:	add    BYTE PTR [rax],al
   140014847:	add    BYTE PTR [rcx],dl
   140014849:	add    BYTE PTR [rax],al
   14001484b:	add    BYTE PTR [rax],al
   14001484d:	add    BYTE PTR [rax],al
   14001484f:	add    BYTE PTR [rdx],al
   140014851:	add    BYTE PTR [rax],al
   140014853:	add    BYTE PTR [rbx+0xd],al
   140014856:	rex.W cmp sil,cl
   140014859:	(bad)  
   14001485a:	jmp    0x19d387a13
   14001485f:	mov    dl,0xda
   140014861:	fwait
   140014862:	cmc    
   140014863:	ss cmp edx,DWORD PTR cs:[rdx-0x2ddec1eb]
   14001486b:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001486d:	ins    BYTE PTR es:[rdi],dx
   14001486e:	in     al,dx
   14001486f:	push   rdi
   140014870:	cmp    eax,0x24d4aa
	...
   140014889:	add    BYTE PTR [rax],al
   14001488b:	add    BYTE PTR [rax+0xe000000],cl
   140014891:	add    BYTE PTR [rax],al
   140014893:	add    BYTE PTR [rax+0x8000000],bl
   140014899:	add    BYTE PTR [rax],al
   14001489b:	add    BYTE PTR [rax+0xe000000],ah
   1400148a1:	add    BYTE PTR [rax],al
   1400148a3:	add    BYTE PTR [rax+0x8000000],dh
	...
   1400148b1:	add    BYTE PTR [rax],al
   1400148b3:	add    BYTE PTR [rax+0xc000000],bh
   1400148b9:	add    BYTE PTR [rax],al
   1400148bb:	add    BYTE PTR [rax],al
   1400148bd:	add    BYTE PTR [rax],al
   1400148bf:	add    BYTE PTR [rbp+0x0],cl
   1400148c2:	push   rbp
   1400148c3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400148ce:	add    BYTE PTR [rax],al
   1400148d0:	adc    BYTE PTR [rax],al
   1400148d2:	add    BYTE PTR [rax],al
   1400148d4:	sbb    BYTE PTR [rax],al
   1400148d6:	add    BYTE PTR [rax],al
   1400148d8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400148dc:	rex.WB add BYTE PTR [r8],al
	...
   1400148e7:	add    BYTE PTR [rsi],al
   1400148e9:	add    BYTE PTR [rax],al
   1400148eb:	add    BYTE PTR [rax],dl
   1400148ed:	add    BYTE PTR [rax],al
   1400148ef:	add    BYTE PTR [rbp+0x0],ah
   1400148f2:	outs   dx,BYTE PTR ds:[rsi]
   1400148f3:	add    BYTE PTR [rip+0x53005500],ch        # 0x193019df9
   1400148f9:	add    BYTE PTR [rax],al
   1400148fb:	add    BYTE PTR [rax],al
   1400148fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax+0x7c0000],dh
   140015006:	add    BYTE PTR [rax],al
   140015008:	js     0x140014faf
   14001500a:	and    BYTE PTR [rbp-0x5a675a70],0xa0
   140015011:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015012:	mov    eax,0xa0a5c0a5
   140015017:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015018:	test   al,0xa6
   14001501a:	mov    eax,0xe8a758a6
   14001501f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015020:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015022:	clc    
   140015023:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015024:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001502a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140015030:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140015036:	rex.W test al,0x50
   140015039:	test   al,0x58
   14001503b:	test   al,0x60
   14001503d:	test   al,0x68
   14001503f:	test   al,0x70
   140015041:	test   al,0x78
   140015043:	test   al,0x80
   140015045:	test   al,0x88
   140015047:	test   al,0x90
   140015049:	test   al,0x98
   14001504b:	test   al,0xa0
   14001504d:	test   al,0xa8
   14001504f:	test   al,0xb0
   140015051:	test   al,0xb8
   140015053:	test   al,0xc0
   140015055:	test   al,0xc8
   140015057:	test   al,0xd0
   140015059:	test   al,0xd8
   14001505b:	test   al,0xe0
   14001505d:	test   al,0xe8
   14001505f:	test   al,0xf0
   140015061:	test   al,0x0
   140015063:	test   eax,0xa910a908
   140015068:	sbb    BYTE PTR [rcx-0x567756c0],ch
   14001506e:	movabs al,ds:0xe0a9b8a9b0a9a8a9
   140015077:	test   eax,0xaa28
   14001507c:	add    al,dl
   14001507e:	add    BYTE PTR [rax],al
   140015080:	ins    BYTE PTR es:[rdi],dx
   140015081:	add    BYTE PTR [rax],al
   140015083:	add    BYTE PTR [rax-0x2f573f58],cl
   140015089:	test   al,0xe0
   14001508b:	test   al,0xe8
   14001508d:	test   al,0xf0
   14001508f:	test   al,0xf8
   140015091:	test   al,0x8
   140015093:	test   eax,0xa940a918
   140015098:	push   rax
   140015099:	test   eax,0xa980a960
   14001509e:	mov    BYTE PTR [rcx-0x56675670],ch
   1400150a4:	movabs al,ds:0x70a9b8a9b0a9a8a9
   1400150ad:	stos   DWORD PTR es:[rdi],eax
   1400150ae:	sub    BYTE PTR [rbx-0x54575470],0xc8
   1400150b5:	stos   DWORD PTR es:[rdi],eax
   1400150b6:	fsubr  DWORD PTR [rbx-0x53f75400]
   1400150bc:	adc    BYTE PTR [rax+rbx*2-0x67537754],ch
   1400150c3:	lods   al,BYTE PTR ds:[rsi]
   1400150c4:	adc    BYTE PTR [rbp-0x529f52b0],ch
   1400150ca:	jo     0x140015079
   1400150cc:	mov    BYTE PTR [rbp-0x52675270],ch
   1400150d2:	movabs al,ds:0x28ae18add8adb0ad
   1400150db:	scas   al,BYTE PTR es:[rdi]
   1400150dc:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   1400150e2:	rex.W scas al,BYTE PTR es:[rdi]
   1400150e4:	pop    rax
   1400150e5:	scas   al,BYTE PTR es:[rdi]
   1400150e6:	mov    al,0xae
   1400150e8:	add    al,ah
   1400150ea:	add    BYTE PTR [rax],al
   1400150ec:	add    BYTE PTR [rax],r8b
   1400150ef:	add    BYTE PTR [rax-0x60],al
   1400150f2:	jo     0x140015094
   1400150f4:	js     0x140015096
   1400150f6:	and    BYTE PTR [rax-0x5eef5f38],0x20
   1400150fd:	movabs eax,ds:0xa180a170a160a130
   140015106:	nop
   140015107:	movabs eax,ds:0xa230a208a1f0a1b8
   140015110:	rex.W movabs ds:0xa310a300a278a270,al
   14001511a:	and    BYTE PTR [rbx-0x5cbf5cd0],ah
   140015120:	or     BYTE PTR [rax+rdi*1+0x40a528a4],ah
   140015127:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015128:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001512a:	push   rax
   14001512b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001512c:	add    BYTE PTR [rax],dl
   14001512e:	add    DWORD PTR [rax],eax
   140015130:	adc    al,0x0
   140015132:	add    BYTE PTR [rax],al
   140015134:	and    BYTE PTR [rax-0x5bcf5fd8],ah
   14001513a:	cmp    BYTE PTR [rax+rax*2+0xa448a4],ah
   140015141:	xor    BYTE PTR [rcx],al
   140015143:	add    BYTE PTR [rax],dl
   140015145:	add    BYTE PTR [rax],al
   140015147:	add    BYTE PTR [rax],al
   140015149:	.byte 0xa0
   14001514a:	adc    BYTE PTR [rax-0x5fdf5fe8],ah
