
7320783c6e2941f13cbf3cdc75e649f6d8c1054175aa264693a404cec20f4590.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x10],rbx
   14000100d:	mov    QWORD PTR [rsp+0x18],rbp
   140001012:	push   rsi
   140001013:	push   rdi
   140001014:	push   r14
   140001016:	sub    rsp,0x260
   14000101d:	mov    rax,QWORD PTR [rip+0x2fe4]        # 0x140004008
   140001024:	xor    rax,rsp
   140001027:	mov    QWORD PTR [rsp+0x250],rax
   14000102f:	mov    rbp,rcx
   140001032:	mov    edx,0x6
   140001037:	xor    ecx,ecx
   140001039:	call   QWORD PTR [rip+0x2191]        # 0x1400031d0
   14000103f:	xor    r14d,r14d
   140001042:	mov    esi,eax
   140001044:	test   eax,eax
   140001046:	jns    0x140001056
   140001048:	lea    edx,[r14+0x4]
   14000104c:	xor    ecx,ecx
   14000104e:	call   QWORD PTR [rip+0x217c]        # 0x1400031d0
   140001054:	mov    esi,eax
   140001056:	test   esi,esi
   140001058:	js     0x14000113d
   14000105e:	xor    edx,edx
   140001060:	mov    QWORD PTR [rsp+0x30],r14
   140001065:	lea    rax,[rsp+0x30]
   14000106a:	lea    r9,[rip+0x236f]        # 0x1400033e0
   140001071:	mov    QWORD PTR [rsp+0x20],rax
   140001076:	lea    rcx,[rip+0x2383]        # 0x140003400
   14000107d:	lea    r8d,[rdx+0x1]
   140001081:	call   QWORD PTR [rip+0x2151]        # 0x1400031d8
   140001087:	mov    esi,eax
   140001089:	test   eax,eax
   14000108b:	js     0x140001118
   140001091:	xor    edx,edx
   140001093:	mov    WORD PTR [rsp+0x40],r14w
   140001099:	mov    r8d,0x206
   14000109f:	lea    rcx,[rsp+0x42]
   1400010a4:	call   0x140002436
   1400010a9:	mov    r9d,0x104
   1400010af:	lea    r8,[rsp+0x40]
   1400010b4:	mov    edx,0x67
   1400010b9:	lea    rcx,[rip+0xffffffffffffef40]        # 0x140000000
   1400010c0:	call   QWORD PTR [rip+0x2052]        # 0x140003118
   1400010c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010cb:	mov    rax,QWORD PTR [rbx]
   1400010ce:	mov    rdi,QWORD PTR [rax+0x18]
   1400010d2:	mov    rcx,rdi
   1400010d5:	call   QWORD PTR [rip+0x2115]        # 0x1400031f0
   1400010db:	lea    rdx,[rsp+0x40]
   1400010e0:	mov    rcx,rbx
   1400010e3:	call   rdi
   1400010e5:	mov    esi,eax
   1400010e7:	test   eax,eax
   1400010e9:	js     0x140001118
   1400010eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010f0:	mov    rax,QWORD PTR [rbx]
   1400010f3:	mov    rdi,QWORD PTR [rax+0x28]
   1400010f7:	mov    rcx,rdi
   1400010fa:	call   QWORD PTR [rip+0x20f0]        # 0x1400031f0
   140001100:	xor    r9d,r9d
   140001103:	mov    QWORD PTR [rsp+0x20],r14
   140001108:	mov    r8d,0x1000f
   14000110e:	mov    rdx,rbp
   140001111:	mov    rcx,rbx
   140001114:	call   rdi
   140001116:	mov    esi,eax
   140001118:	mov    rbx,QWORD PTR [rsp+0x30]
   14000111d:	test   rbx,rbx
   140001120:	je     0x140001137
   140001122:	mov    rax,QWORD PTR [rbx]
   140001125:	mov    rdi,QWORD PTR [rax+0x10]
   140001129:	mov    rcx,rdi
   14000112c:	call   QWORD PTR [rip+0x20be]        # 0x1400031f0
   140001132:	mov    rcx,rbx
   140001135:	call   rdi
   140001137:	call   QWORD PTR [rip+0x208b]        # 0x1400031c8
   14000113d:	mov    eax,esi
   14000113f:	mov    rcx,QWORD PTR [rsp+0x250]
   140001147:	xor    rcx,rsp
   14000114a:	call   0x140001e90
   14000114f:	lea    r11,[rsp+0x260]
   140001157:	mov    rbx,QWORD PTR [r11+0x28]
   14000115b:	mov    rbp,QWORD PTR [r11+0x30]
   14000115f:	mov    rsp,r11
   140001162:	pop    r14
   140001164:	pop    rdi
   140001165:	pop    rsi
   140001166:	ret    
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	mov    r11,rsp
   140001173:	mov    QWORD PTR [r11+0x8],rbx
   140001177:	mov    QWORD PTR [r11+0x10],rsi
   14000117b:	mov    QWORD PTR [r11+0x18],r8
   14000117f:	push   rbp
   140001180:	push   rdi
   140001181:	push   r14
   140001183:	mov    rbp,rsp
   140001186:	sub    rsp,0x30
   14000118a:	and    QWORD PTR [r9],0x0
   14000118e:	lea    rax,[rbp+0x38]
   140001192:	and    QWORD PTR [rbp+0x38],0x0
   140001197:	mov    rbx,rdx
   14000119a:	xor    edx,edx
   14000119c:	mov    QWORD PTR [r11-0x28],rax
   1400011a0:	mov    r14,r9
   1400011a3:	lea    r8d,[rdx+0x4]
   1400011a7:	cmp    ecx,0x1
   1400011aa:	jne    0x14000120e
   1400011ac:	lea    r9,[rip+0x221d]        # 0x1400033d0
   1400011b3:	lea    rcx,[rip+0x2266]        # 0x140003420
   1400011ba:	call   QWORD PTR [rip+0x2018]        # 0x1400031d8
   1400011c0:	mov    esi,eax
   1400011c2:	test   eax,eax
   1400011c4:	js     0x1400012a7
   1400011ca:	and    QWORD PTR [rbp+0x30],0x0
   1400011cf:	mov    rsi,QWORD PTR [rbp+0x38]
   1400011d3:	test   rbx,rbx
   1400011d6:	jne    0x1400011f8
   1400011d8:	mov    rax,QWORD PTR [rsi]
   1400011db:	mov    rdi,QWORD PTR [rax+0x20]
   1400011df:	mov    rcx,rdi
   1400011e2:	call   QWORD PTR [rip+0x2008]        # 0x1400031f0
   1400011e8:	lea    r9,[rbp+0x30]
   1400011ec:	mov    r8,rbx
   1400011ef:	xor    edx,edx
   1400011f1:	mov    rcx,rsi
   1400011f4:	call   rdi
   1400011f6:	jmp    0x140001256
   1400011f8:	mov    rcx,rbx
   1400011fb:	call   QWORD PTR [rip+0x1ecf]        # 0x1400030d0
   140001201:	mov    rbx,rax
   140001204:	test   rax,rax
   140001207:	jne    0x1400011d8
   140001209:	jmp    0x1400012f1
   14000120e:	lea    r9,[rip+0x21ab]        # 0x1400033c0
   140001215:	lea    rcx,[rip+0x21f4]        # 0x140003410
   14000121c:	call   QWORD PTR [rip+0x1fb6]        # 0x1400031d8
   140001222:	mov    esi,eax
   140001224:	test   eax,eax
   140001226:	js     0x1400012a7
   140001228:	and    QWORD PTR [rbp+0x30],0x0
   14000122d:	mov    rsi,QWORD PTR [rbp+0x38]
   140001231:	test   rbx,rbx
   140001234:	jne    0x1400012da
   14000123a:	mov    rax,QWORD PTR [rsi]
   14000123d:	mov    rdi,QWORD PTR [rax+0x20]
   140001241:	mov    rcx,rdi
   140001244:	call   QWORD PTR [rip+0x1fa6]        # 0x1400031f0
   14000124a:	lea    r8,[rbp+0x30]
   14000124e:	mov    rdx,rbx
   140001251:	mov    rcx,rsi
   140001254:	call   rdi
   140001256:	mov    rcx,rbx
   140001259:	mov    esi,eax
   14000125b:	call   QWORD PTR [rip+0x1e67]        # 0x1400030c8
   140001261:	test   esi,esi
   140001263:	js     0x140001289
   140001265:	mov    rbx,QWORD PTR [rbp+0x30]
   140001269:	mov    rax,QWORD PTR [rbx]
   14000126c:	mov    rdi,QWORD PTR [rax]
   14000126f:	mov    rcx,rdi
   140001272:	call   QWORD PTR [rip+0x1f78]        # 0x1400031f0
   140001278:	mov    r8,r14
   14000127b:	lea    rdx,[rip+0x211e]        # 0x1400033a0
   140001282:	mov    rcx,rbx
   140001285:	call   rdi
   140001287:	mov    esi,eax
   140001289:	mov    rbx,QWORD PTR [rbp+0x30]
   14000128d:	test   rbx,rbx
   140001290:	je     0x1400012a7
   140001292:	mov    rax,QWORD PTR [rbx]
   140001295:	mov    rdi,QWORD PTR [rax+0x10]
   140001299:	mov    rcx,rdi
   14000129c:	call   QWORD PTR [rip+0x1f4e]        # 0x1400031f0
   1400012a2:	mov    rcx,rbx
   1400012a5:	call   rdi
   1400012a7:	mov    rbx,QWORD PTR [rbp+0x38]
   1400012ab:	test   rbx,rbx
   1400012ae:	je     0x1400012c5
   1400012b0:	mov    rax,QWORD PTR [rbx]
   1400012b3:	mov    rdi,QWORD PTR [rax+0x10]
   1400012b7:	mov    rcx,rdi
   1400012ba:	call   QWORD PTR [rip+0x1f30]        # 0x1400031f0
   1400012c0:	mov    rcx,rbx
   1400012c3:	call   rdi
   1400012c5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400012ca:	mov    eax,esi
   1400012cc:	mov    rsi,QWORD PTR [rsp+0x58]
   1400012d1:	add    rsp,0x30
   1400012d5:	pop    r14
   1400012d7:	pop    rdi
   1400012d8:	pop    rbp
   1400012d9:	ret    
   1400012da:	mov    rcx,rbx
   1400012dd:	call   QWORD PTR [rip+0x1ded]        # 0x1400030d0
   1400012e3:	mov    rbx,rax
   1400012e6:	test   rax,rax
   1400012e9:	jne    0x14000123a
   1400012ef:	jmp    0x1400012f7
   1400012f1:	call   0x140001a84
   1400012f6:	int3   
   1400012f7:	call   0x140001a84
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	int3   
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	mov    QWORD PTR [rsp+0x10],rbx
   140001309:	push   rbp
   14000130a:	push   rsi
   14000130b:	push   rdi
   14000130c:	push   r14
   14000130e:	push   r15
   140001310:	lea    rbp,[rsp-0x4a0]
   140001318:	sub    rsp,0x5a0
   14000131f:	mov    rax,QWORD PTR [rip+0x2ce2]        # 0x140004008
   140001326:	xor    rax,rsp
   140001329:	mov    QWORD PTR [rbp+0x490],rax
   140001330:	mov    edi,edx
   140001332:	mov    r14,rcx
   140001335:	mov    edx,0x6
   14000133a:	xor    ecx,ecx
   14000133c:	mov    rbx,r8
   14000133f:	call   QWORD PTR [rip+0x1e8b]        # 0x1400031d0
   140001345:	xor    r15d,r15d
   140001348:	mov    esi,eax
   14000134a:	test   eax,eax
   14000134c:	jns    0x14000135c
   14000134e:	lea    edx,[r15+0x4]
   140001352:	xor    ecx,ecx
   140001354:	call   QWORD PTR [rip+0x1e76]        # 0x1400031d0
   14000135a:	mov    esi,eax
   14000135c:	test   esi,esi
   14000135e:	js     0x14000175b
   140001364:	xor    edx,edx
   140001366:	lea    rcx,[rsp+0x74]
   14000136b:	lea    r8d,[rdx+0x5c]
   14000136f:	call   0x140002436
   140001374:	mov    rax,QWORD PTR [rip+0x325d]        # 0x1400045d8
   14000137b:	mov    QWORD PTR [rbp-0x80],rax
   14000137f:	mov    DWORD PTR [rsp+0x70],0x60
   140001387:	mov    QWORD PTR [rsp+0x78],r14
   14000138c:	cmp    edi,0x2
   14000138f:	jne    0x1400014f5
   140001395:	xor    r9d,r9d
   140001398:	mov    QWORD PTR [rsp+0x38],r15
   14000139d:	lea    r8,[rsp+0x38]
   1400013a2:	mov    edx,0x1000002
   1400013a7:	lea    rcx,[rip+0xffffffffffffec52]        # 0x140000000
   1400013ae:	call   QWORD PTR [rip+0x1d4c]        # 0x140003100
   1400013b4:	mov    esi,eax
   1400013b6:	test   eax,eax
   1400013b8:	js     0x1400014be
   1400013be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013c3:	test   rbx,rbx
   1400013c6:	jne    0x1400014db
   1400013cc:	mov    rbx,r15
   1400013cf:	mov    rax,QWORD PTR [rsi]
   1400013d2:	mov    rdi,QWORD PTR [rax+0x28]
   1400013d6:	mov    rcx,rdi
   1400013d9:	call   QWORD PTR [rip+0x1e11]        # 0x1400031f0
   1400013df:	lea    r8,[rsp+0x30]
   1400013e4:	mov    rdx,rbx
   1400013e7:	mov    rcx,rsi
   1400013ea:	call   rdi
   1400013ec:	mov    rcx,rbx
   1400013ef:	mov    esi,eax
   1400013f1:	call   QWORD PTR [rip+0x1cd1]        # 0x1400030c8
   1400013f7:	test   esi,esi
   1400013f9:	js     0x1400014be
   1400013ff:	xor    edx,edx
   140001401:	mov    QWORD PTR [rsp+0x40],r15
   140001406:	lea    rax,[rsp+0x40]
   14000140b:	lea    r9,[rip+0x1f9e]        # 0x1400033b0
   140001412:	mov    QWORD PTR [rsp+0x20],rax
   140001417:	lea    rcx,[rip+0x1fd2]        # 0x1400033f0
   14000141e:	lea    r8d,[rdx+0x1]
   140001422:	call   QWORD PTR [rip+0x1db0]        # 0x1400031d8
   140001428:	mov    esi,eax
   14000142a:	test   eax,eax
   14000142c:	js     0x140001494
   14000142e:	mov    rbx,QWORD PTR [rsp+0x40]
   140001433:	mov    rax,QWORD PTR [rbx]
   140001436:	mov    rdi,QWORD PTR [rax+0x18]
   14000143a:	mov    rcx,rdi
   14000143d:	call   QWORD PTR [rip+0x1dad]        # 0x1400031f0
   140001443:	mov    rdx,QWORD PTR [rsp+0x30]
   140001448:	lea    r8,[rsp+0x70]
   14000144d:	mov    rcx,rbx
   140001450:	call   rdi
   140001452:	mov    esi,eax
   140001454:	test   eax,eax
   140001456:	js     0x140001494
   140001458:	mov    rax,QWORD PTR [rsp+0x30]
   14000145d:	mov    rcx,QWORD PTR [rax+0x130]
   140001464:	or     DWORD PTR [rsp+0x74],0x2000081
   14000146c:	mov    QWORD PTR [rbp-0x70],rcx
   140001470:	lea    rcx,[rsp+0x70]
   140001475:	call   QWORD PTR [rip+0x1b85]        # 0x140003000
   14000147b:	test   rax,rax
   14000147e:	jns    0x140001494
   140001480:	call   QWORD PTR [rip+0x1bca]        # 0x140003050
   140001486:	movzx  esi,ax
   140001489:	or     esi,0x80070000
   14000148f:	test   eax,eax
   140001491:	cmovle esi,eax
   140001494:	mov    rcx,QWORD PTR [rsp+0x30]
   140001499:	call   QWORD PTR [rip+0x1b71]        # 0x140003010
   14000149f:	mov    rbx,QWORD PTR [rsp+0x40]
   1400014a4:	test   rbx,rbx
   1400014a7:	je     0x1400014be
   1400014a9:	mov    rax,QWORD PTR [rbx]
   1400014ac:	mov    rdi,QWORD PTR [rax+0x10]
   1400014b0:	mov    rcx,rdi
   1400014b3:	call   QWORD PTR [rip+0x1d37]        # 0x1400031f0
   1400014b9:	mov    rcx,rbx
   1400014bc:	call   rdi
   1400014be:	mov    rcx,QWORD PTR [rbp-0x58]
   1400014c2:	test   rcx,rcx
   1400014c5:	je     0x1400014d1
   1400014c7:	call   QWORD PTR [rip+0x1b43]        # 0x140003010
   1400014cd:	mov    QWORD PTR [rbp-0x58],r15
   1400014d1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014d6:	jmp    0x14000173b
   1400014db:	mov    rcx,rbx
   1400014de:	call   QWORD PTR [rip+0x1bec]        # 0x1400030d0
   1400014e4:	mov    rbx,rax
   1400014e7:	test   rax,rax
   1400014ea:	jne    0x1400013cf
   1400014f0:	jmp    0x140001783
   1400014f5:	lea    r9,[rsp+0x30]
   1400014fa:	mov    QWORD PTR [rsp+0x30],r15
   1400014ff:	mov    rdx,rbx
   140001502:	mov    ecx,edi
   140001504:	call   0x140001170
   140001509:	mov    esi,eax
   14000150b:	test   eax,eax
   14000150d:	js     0x14000165a
   140001513:	mov    rbx,QWORD PTR [rsp+0x30]
   140001518:	xor    eax,eax
   14000151a:	mov    QWORD PTR [rsp+0x48],rax
   14000151f:	mov    QWORD PTR [rsp+0x52],rax
   140001524:	mov    QWORD PTR [rsp+0x5a],rax
   140001529:	lea    r14d,[rax+0x1]
   14000152d:	mov    DWORD PTR [rsp+0x62],eax
   140001531:	mov    WORD PTR [rsp+0x66],ax
   140001536:	mov    DWORD PTR [rsp+0x40],r14d
   14000153b:	mov    WORD PTR [rsp+0x50],r15w
   140001541:	mov    DWORD PTR [rsp+0x48],0x7
   140001549:	mov    rax,QWORD PTR [rbx]
   14000154c:	mov    rdi,QWORD PTR [rax+0x18]
   140001550:	mov    rcx,rdi
   140001553:	call   QWORD PTR [rip+0x1c97]        # 0x1400031f0
   140001559:	lea    r9,[rsp+0x50]
   14000155e:	mov    edx,r14d
   140001561:	lea    r8,[rsp+0x40]
   140001566:	mov    rcx,rbx
   140001569:	call   rdi
   14000156b:	test   eax,eax
   14000156d:	jne    0x140001650
   140001573:	cmp    WORD PTR [rsp+0x50],0x8
   140001579:	jne    0x140001638
   14000157f:	cmp    QWORD PTR [rsp+0x58],r15
   140001584:	je     0x140001638
   14000158a:	lea    rax,[rsp+0x38]
   14000158f:	mov    QWORD PTR [rsp+0x38],r15
   140001594:	lea    r9,[rip+0x1df5]        # 0x140003390
   14000159b:	mov    QWORD PTR [rsp+0x20],rax
   1400015a0:	mov    r8d,r14d
   1400015a3:	lea    rcx,[rip+0x1e46]        # 0x1400033f0
   1400015aa:	xor    edx,edx
   1400015ac:	call   QWORD PTR [rip+0x1c26]        # 0x1400031d8
   1400015b2:	mov    esi,eax
   1400015b4:	test   eax,eax
   1400015b6:	js     0x140001617
   1400015b8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400015bd:	mov    rax,QWORD PTR [rbx]
   1400015c0:	mov    rdi,QWORD PTR [rax+0x20]
   1400015c4:	mov    rcx,rdi
   1400015c7:	call   QWORD PTR [rip+0x1c23]        # 0x1400031f0
   1400015cd:	mov    rdx,QWORD PTR [rsp+0x30]
   1400015d2:	lea    r8,[rsp+0x70]
   1400015d7:	mov    rcx,rbx
   1400015da:	call   rdi
   1400015dc:	mov    esi,eax
   1400015de:	test   eax,eax
   1400015e0:	js     0x140001617
   1400015e2:	mov    rax,QWORD PTR [rsp+0x58]
   1400015e7:	lea    rcx,[rsp+0x70]
   1400015ec:	or     DWORD PTR [rsp+0x74],0x2000081
   1400015f4:	mov    QWORD PTR [rbp-0x70],rax
   1400015f8:	call   QWORD PTR [rip+0x1a02]        # 0x140003000
   1400015fe:	test   rax,rax
   140001601:	jns    0x140001617
   140001603:	call   QWORD PTR [rip+0x1a47]        # 0x140003050
   140001609:	movzx  esi,ax
   14000160c:	or     esi,0x80070000
   140001612:	test   eax,eax
   140001614:	cmovle esi,eax
   140001617:	mov    rbx,QWORD PTR [rsp+0x38]
   14000161c:	test   rbx,rbx
   14000161f:	je     0x14000163d
   140001621:	mov    rax,QWORD PTR [rbx]
   140001624:	mov    rdi,QWORD PTR [rax+0x10]
   140001628:	mov    rcx,rdi
   14000162b:	call   QWORD PTR [rip+0x1bbf]        # 0x1400031f0
   140001631:	mov    rcx,rbx
   140001634:	call   rdi
   140001636:	jmp    0x14000163d
   140001638:	mov    esi,0x8000ffff
   14000163d:	lea    rdx,[rsp+0x50]
   140001642:	mov    ecx,r14d
   140001645:	call   QWORD PTR [rip+0x1b95]        # 0x1400031e0
   14000164b:	jmp    0x140001723
   140001650:	mov    esi,0x80070002
   140001655:	jmp    0x140001723
   14000165a:	cmp    eax,0x80210005
   14000165f:	jne    0x140001723
   140001665:	xor    edx,edx
   140001667:	mov    WORD PTR [rbp-0x30],r15w
   14000166c:	mov    r8d,0xc6
   140001672:	lea    rcx,[rbp-0x2e]
   140001676:	call   0x140002436
   14000167b:	xor    edx,edx
   14000167d:	mov    WORD PTR [rbp+0xa0],r15w
   140001685:	mov    r8d,0x3e6
   14000168b:	lea    rcx,[rbp+0xa2]
   140001692:	call   0x140002436
   140001697:	mov    r9d,0x64
   14000169d:	lea    r8,[rbp-0x30]
   1400016a1:	lea    rcx,[rip+0xffffffffffffe958]        # 0x140000000
   1400016a8:	mov    ebx,r15d
   1400016ab:	lea    edx,[r9+0x3]
   1400016af:	call   QWORD PTR [rip+0x1a63]        # 0x140003118
   1400016b5:	mov    edi,0x80070000
   1400016ba:	test   eax,eax
   1400016bc:	jne    0x1400016d2
   1400016be:	call   QWORD PTR [rip+0x198c]        # 0x140003050
   1400016c4:	movzx  ebx,ax
   1400016c7:	or     ebx,edi
   1400016c9:	test   eax,eax
   1400016cb:	cmovle ebx,eax
   1400016ce:	test   ebx,ebx
   1400016d0:	js     0x140001723
   1400016d2:	mov    r9d,0x1f4
   1400016d8:	lea    r8,[rbp+0xa0]
   1400016df:	mov    edx,0x69
   1400016e4:	lea    rcx,[rip+0xffffffffffffe915]        # 0x140000000
   1400016eb:	call   QWORD PTR [rip+0x1a27]        # 0x140003118
   1400016f1:	test   eax,eax
   1400016f3:	jne    0x140001705
   1400016f5:	call   QWORD PTR [rip+0x1955]        # 0x140003050
   1400016fb:	movzx  ebx,ax
   1400016fe:	or     ebx,edi
   140001700:	test   eax,eax
   140001702:	cmovle ebx,eax
   140001705:	test   ebx,ebx
   140001707:	js     0x140001723
   140001709:	mov    r9d,0x30
   14000170f:	lea    r8,[rbp-0x30]
   140001713:	lea    rdx,[rbp+0xa0]
   14000171a:	mov    rcx,r14
   14000171d:	call   QWORD PTR [rip+0x19ed]        # 0x140003110
   140001723:	mov    rcx,QWORD PTR [rbp-0x58]
   140001727:	test   rcx,rcx
   14000172a:	je     0x140001736
   14000172c:	call   QWORD PTR [rip+0x18de]        # 0x140003010
   140001732:	mov    QWORD PTR [rbp-0x58],r15
   140001736:	mov    rbx,QWORD PTR [rsp+0x30]
   14000173b:	test   rbx,rbx
   14000173e:	je     0x140001755
   140001740:	mov    rax,QWORD PTR [rbx]
   140001743:	mov    rdi,QWORD PTR [rax+0x10]
   140001747:	mov    rcx,rdi
   14000174a:	call   QWORD PTR [rip+0x1aa0]        # 0x1400031f0
   140001750:	mov    rcx,rbx
   140001753:	call   rdi
   140001755:	call   QWORD PTR [rip+0x1a6d]        # 0x1400031c8
   14000175b:	mov    eax,esi
   14000175d:	mov    rcx,QWORD PTR [rbp+0x490]
   140001764:	xor    rcx,rsp
   140001767:	call   0x140001e90
   14000176c:	mov    rbx,QWORD PTR [rsp+0x5d8]
   140001774:	add    rsp,0x5a0
   14000177b:	pop    r15
   14000177d:	pop    r14
   14000177f:	pop    rdi
   140001780:	pop    rsi
   140001781:	pop    rbp
   140001782:	ret    
   140001783:	call   0x140001a84
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	mov    QWORD PTR [rsp+0x10],rbx
   140001795:	mov    QWORD PTR [rsp+0x18],rbp
   14000179a:	mov    QWORD PTR [rsp+0x20],rsi
   14000179f:	push   rdi
   1400017a0:	push   r12
   1400017a2:	push   r13
   1400017a4:	push   r14
   1400017a6:	push   r15
   1400017a8:	sub    rsp,0x40
   1400017ac:	xor    r9d,r9d
   1400017af:	mov    QWORD PTR [rip+0x2e22],rcx        # 0x1400045d8
   1400017b6:	mov    rbx,r8
   1400017b9:	xor    ecx,ecx
   1400017bb:	xor    r8d,r8d
   1400017be:	lea    edx,[r9+0x1]
   1400017c2:	call   QWORD PTR [rip+0x1868]        # 0x140003030
   1400017c8:	xor    ebp,ebp
   1400017ca:	lea    rdx,[rsp+0x24]
   1400017cf:	mov    rcx,rbx
   1400017d2:	mov    QWORD PTR [rsp+0x28],rbp
   1400017d7:	mov    DWORD PTR [rsp+0x20],ebp
   1400017db:	mov    r14d,ebp
   1400017de:	mov    QWORD PTR [rsp+0x30],rbp
   1400017e3:	mov    r12b,bpl
   1400017e6:	mov    BYTE PTR [rsp+0x70],bpl
   1400017eb:	mov    edi,ebp
   1400017ed:	mov    DWORD PTR [rsp+0x24],ebp
   1400017f1:	call   QWORD PTR [rip+0x18e9]        # 0x1400030e0
   1400017f7:	mov    QWORD PTR [rsp+0x38],rax
   1400017fc:	mov    rsi,rax
   1400017ff:	test   rax,rax
   140001802:	je     0x140001a2b
   140001808:	xor    r13d,r13d
   14000180b:	cmp    DWORD PTR [rsp+0x24],r13d
   140001810:	jle    0x140001a2b
   140001816:	lea    ebx,[rbp+0x1]
   140001819:	jmp    0x14000181e
   14000181b:	xor    r13d,r13d
   14000181e:	test   edi,edi
   140001820:	js     0x140001a35
   140001826:	mov    r15,QWORD PTR [rsi]
   140001829:	mov    ecx,0xfffd
   14000182e:	movzx  eax,WORD PTR [r15]
   140001832:	sub    ax,0x2d
   140001836:	test   cx,ax
   140001839:	jne    0x1400018cf
   14000183f:	add    r15,0x2
   140001843:	cmp    WORD PTR [r15],r13w
   140001847:	je     0x1400018cf
   14000184d:	lea    rdx,[rip+0x1ac4]        # 0x140003318
   140001854:	mov    rcx,r15
   140001857:	call   QWORD PTR [rip+0x1893]        # 0x1400030f0
   14000185d:	test   eax,eax
   14000185f:	jne    0x14000186b
   140001861:	mov    r12b,0x1
   140001864:	mov    BYTE PTR [rsp+0x70],r12b
   140001869:	jmp    0x1400018d4
   14000186b:	lea    rdx,[rip+0x1ace]        # 0x140003340
   140001872:	mov    rcx,r15
   140001875:	call   QWORD PTR [rip+0x1875]        # 0x1400030f0
   14000187b:	test   eax,eax
   14000187d:	jne    0x140001966
   140001883:	cmp    ebx,DWORD PTR [rsp+0x24]
   140001887:	jge    0x1400018ca
   140001889:	add    rsi,0x8
   14000188d:	lea    r8d,[rax+0xa]
   140001891:	xor    edx,edx
   140001893:	inc    ebp
   140001895:	inc    ebx
   140001897:	mov    rcx,QWORD PTR [rsi]
   14000189a:	call   QWORD PTR [rip+0x18f0]        # 0x140003190
   1400018a0:	mov    r14d,eax
   1400018a3:	mov    ecx,eax
   1400018a5:	mov    QWORD PTR [rsp+0x30],r14
   1400018aa:	call   QWORD PTR [rip+0x1870]        # 0x140003120
   1400018b0:	mov    r15,QWORD PTR [rsp+0x28]
   1400018b5:	mov    r12b,BYTE PTR [rsp+0x70]
   1400018ba:	mov    r13d,DWORD PTR [rsp+0x20]
   1400018bf:	test   eax,eax
   1400018c1:	jne    0x1400018de
   1400018c3:	mov    edi,0x80070578
   1400018c8:	jmp    0x1400018de
   1400018ca:	mov    edi,0x80070057
   1400018cf:	mov    r12b,BYTE PTR [rsp+0x70]
   1400018d4:	mov    r13d,DWORD PTR [rsp+0x20]
   1400018d9:	mov    r15,QWORD PTR [rsp+0x28]
   1400018de:	inc    ebp
   1400018e0:	inc    ebx
   1400018e2:	add    rsi,0x8
   1400018e6:	cmp    ebp,DWORD PTR [rsp+0x24]
   1400018ea:	jl     0x14000181b
   1400018f0:	xor    ebp,ebp
   1400018f2:	test   edi,edi
   1400018f4:	js     0x140001a35
   1400018fa:	test   r12b,r12b
   1400018fd:	je     0x140001a0f
   140001903:	lea    rcx,[rip+0x1966]        # 0x140003270
   14000190a:	mov    edi,ebp
   14000190c:	call   QWORD PTR [rip+0x1706]        # 0x140003018
   140001912:	mov    rsi,rax
   140001915:	test   rax,rax
   140001918:	je     0x1400019f9
   14000191e:	lea    rdx,[rip+0x1963]        # 0x140003288
   140001925:	mov    rcx,rax
   140001928:	call   QWORD PTR [rip+0x16f2]        # 0x140003020
   14000192e:	mov    rbp,rax
   140001931:	test   rax,rax
   140001934:	je     0x1400019da
   14000193a:	call   QWORD PTR [rip+0x17e8]        # 0x140003128
   140001940:	mov    rcx,rbp
   140001943:	mov    rbx,rax
   140001946:	call   QWORD PTR [rip+0x18a4]        # 0x1400031f0
   14000194c:	mov    r9d,0x5
   140001952:	lea    r8,[rip+0x1939]        # 0x140003292
   140001959:	mov    rdx,rsi
   14000195c:	mov    rcx,rbx
   14000195f:	call   rbp
   140001961:	jmp    0x1400019ee
   140001966:	mov    r12d,r13d
   140001969:	mov    r14,r13
   14000196c:	lea    r13,[rip+0x19ed]        # 0x140003360
   140001973:	mov    rdx,QWORD PTR [r13+0x0]
   140001977:	mov    rcx,r15
   14000197a:	call   QWORD PTR [rip+0x1770]        # 0x1400030f0
   140001980:	test   eax,eax
   140001982:	je     0x14000199c
   140001984:	inc    r12d
   140001987:	inc    r14
   14000198a:	movsxd rax,r12d
   14000198d:	add    r13,0x10
   140001991:	cmp    rax,0x3
   140001995:	jb     0x140001973
   140001997:	jmp    0x1400018cf
   14000199c:	mov    r12b,BYTE PTR [rsp+0x70]
   1400019a1:	cmp    ebx,DWORD PTR [rsp+0x24]
   1400019a5:	jge    0x1400019d0
   1400019a7:	add    rsi,0x8
   1400019ab:	lea    rax,[rip+0x19ae]        # 0x140003360
   1400019b2:	inc    ebp
   1400019b4:	inc    ebx
   1400019b6:	add    r14,r14
   1400019b9:	mov    r15,QWORD PTR [rsi]
   1400019bc:	mov    QWORD PTR [rsp+0x28],r15
   1400019c1:	mov    r13d,DWORD PTR [rax+r14*8+0x8]
   1400019c6:	mov    DWORD PTR [rsp+0x20],r13d
   1400019cb:	jmp    0x1400018de
   1400019d0:	mov    edi,0x80070057
   1400019d5:	jmp    0x1400018d4
   1400019da:	call   QWORD PTR [rip+0x1670]        # 0x140003050
   1400019e0:	movzx  edi,ax
   1400019e3:	or     edi,0x80070000
   1400019e9:	test   eax,eax
   1400019eb:	cmovle edi,eax
   1400019ee:	mov    rcx,rsi
   1400019f1:	call   QWORD PTR [rip+0x1631]        # 0x140003028
   1400019f7:	jmp    0x140001a35
   1400019f9:	call   QWORD PTR [rip+0x1651]        # 0x140003050
   1400019ff:	movzx  edi,ax
   140001a02:	or     edi,0x80070000
   140001a08:	test   eax,eax
   140001a0a:	cmovle edi,eax
   140001a0d:	jmp    0x140001a35
   140001a0f:	test   r15,r15
   140001a12:	je     0x140001a26
   140001a14:	mov    rcx,QWORD PTR [rsp+0x30]
   140001a19:	mov    r8,r15
   140001a1c:	mov    edx,r13d
   140001a1f:	call   0x140001304
   140001a24:	jmp    0x140001a33
   140001a26:	mov    r14,QWORD PTR [rsp+0x30]
   140001a2b:	mov    rcx,r14
   140001a2e:	call   0x140001008
   140001a33:	mov    edi,eax
   140001a35:	mov    rcx,QWORD PTR [rsp+0x38]
   140001a3a:	test   rcx,rcx
   140001a3d:	je     0x140001a45
   140001a3f:	call   QWORD PTR [rip+0x15cb]        # 0x140003010
   140001a45:	lea    r11,[rsp+0x40]
   140001a4a:	mov    eax,edi
   140001a4c:	mov    rbx,QWORD PTR [r11+0x38]
   140001a50:	mov    rbp,QWORD PTR [r11+0x40]
   140001a54:	mov    rsi,QWORD PTR [r11+0x48]
   140001a58:	mov    rsp,r11
   140001a5b:	pop    r15
   140001a5d:	pop    r14
   140001a5f:	pop    r13
   140001a61:	pop    r12
   140001a63:	pop    rdi
   140001a64:	ret    
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	xor    r9d,r9d
   140001a6f:	xor    r8d,r8d
   140001a72:	lea    edx,[r9+0x1]
   140001a76:	rex.W jmp QWORD PTR [rip+0x1633]        # 0x1400030b0
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	int3   
   140001a81:	int3   
   140001a82:	int3   
   140001a83:	int3   
   140001a84:	sub    rsp,0x28
   140001a88:	mov    ecx,0xc0000017
   140001a8d:	call   0x140001a6c
   140001a92:	int3   
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	jmp    0x140001eb4
   140001aa1:	int3   
   140001aa2:	int3   
   140001aa3:	int3   
   140001aa4:	int3   
   140001aa5:	int3   
   140001aa6:	int3   
   140001aa7:	int3   
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	sub    rsp,0x28
   140001ab4:	mov    eax,0x5a4d
   140001ab9:	cmp    WORD PTR [rip+0xffffffffffffe540],ax        # 0x140000000
   140001ac0:	je     0x140001ac6
   140001ac2:	xor    eax,eax
   140001ac4:	jmp    0x140001b15
   140001ac6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffe56f]        # 0x14000003c
   140001acd:	lea    rax,[rip+0xffffffffffffe52c]        # 0x140000000
   140001ad4:	add    rcx,rax
   140001ad7:	cmp    DWORD PTR [rcx],0x4550
   140001add:	jne    0x140001ac2
   140001adf:	movzx  eax,WORD PTR [rcx+0x18]
   140001ae3:	cmp    eax,0x10b
   140001ae8:	je     0x140001b04
   140001aea:	cmp    eax,0x20b
   140001aef:	jne    0x140001ac2
   140001af1:	xor    eax,eax
   140001af3:	cmp    DWORD PTR [rcx+0x84],0xe
   140001afa:	jbe    0x140001b15
   140001afc:	cmp    DWORD PTR [rcx+0xf8],eax
   140001b02:	jmp    0x140001b12
   140001b04:	xor    eax,eax
   140001b06:	cmp    DWORD PTR [rcx+0x74],0xe
   140001b0a:	jbe    0x140001b15
   140001b0c:	cmp    DWORD PTR [rcx+0xe8],eax
   140001b12:	setne  al
   140001b15:	mov    ecx,0x2
   140001b1a:	mov    DWORD PTR [rip+0x2520],eax        # 0x140004040
   140001b20:	call   0x140001f88
   140001b25:	mov    ecx,eax
   140001b27:	call   QWORD PTR [rip+0x160b]        # 0x140003138
   140001b2d:	mov    rcx,QWORD PTR [rip+0x1674]        # 0x1400031a8
   140001b34:	or     rax,0xffffffffffffffff
   140001b38:	mov    QWORD PTR [rip+0x2aa1],rax        # 0x1400045e0
   140001b3f:	mov    QWORD PTR [rip+0x2aa2],rax        # 0x1400045e8
   140001b46:	mov    eax,DWORD PTR [rip+0x2508]        # 0x140004054
   140001b4c:	mov    DWORD PTR [rcx],eax
   140001b4e:	mov    rcx,QWORD PTR [rip+0x164b]        # 0x1400031a0
   140001b55:	mov    eax,DWORD PTR [rip+0x24ed]        # 0x140004048
   140001b5b:	mov    DWORD PTR [rcx],eax
   140001b5d:	call   0x140001fe0
   140001b62:	cmp    DWORD PTR [rip+0x2497],0x0        # 0x140004000
   140001b69:	jne    0x140001b78
   140001b6b:	lea    rcx,[rip+0x46e]        # 0x140001fe0
   140001b72:	call   QWORD PTR [rip+0x15e8]        # 0x140003160
   140001b78:	xor    eax,eax
   140001b7a:	add    rsp,0x28
   140001b7e:	ret    
   140001b7f:	int3   
   140001b80:	int3   
   140001b81:	int3   
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	sub    rsp,0x38
   140001b94:	mov    eax,DWORD PTR [rip+0x24b6]        # 0x140004050
   140001b9a:	lea    r8,[rip+0x2497]        # 0x140004038
   140001ba1:	mov    r9d,DWORD PTR [rip+0x24a4]        # 0x14000404c
   140001ba8:	lea    rdx,[rip+0x2481]        # 0x140004030
   140001baf:	mov    DWORD PTR [rip+0x248f],eax        # 0x140004044
   140001bb5:	lea    rcx,[rip+0x246c]        # 0x140004028
   140001bbc:	lea    rax,[rip+0x2481]        # 0x140004044
   140001bc3:	mov    QWORD PTR [rsp+0x20],rax
   140001bc8:	call   QWORD PTR [rip+0x1572]        # 0x140003140
   140001bce:	mov    DWORD PTR [rip+0x2458],eax        # 0x14000402c
   140001bd4:	add    rsp,0x38
   140001bd8:	ret    
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	int3   
   140001bdd:	int3   
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	mov    QWORD PTR [rsp+0x8],rbx
   140001be5:	mov    QWORD PTR [rsp+0x10],rsi
   140001bea:	mov    QWORD PTR [rsp+0x18],rdi
   140001bef:	push   r12
   140001bf1:	push   r14
   140001bf3:	push   r15
   140001bf5:	sub    rsp,0xb0
   140001bfc:	xor    r15d,r15d
   140001bff:	mov    DWORD PTR [rsp+0x20],r15d
   140001c04:	lea    rcx,[rsp+0x40]
   140001c09:	call   QWORD PTR [rip+0x1461]        # 0x140003070
   140001c0f:	nop
   140001c10:	mov    rax,QWORD PTR gs:0x30
   140001c19:	mov    rbx,QWORD PTR [rax+0x8]
   140001c1d:	mov    r14d,r15d
   140001c20:	xor    eax,eax
   140001c22:	lock cmpxchg QWORD PTR [rip+0x29c5],rbx        # 0x1400045f0
   140001c2b:	je     0x140001c49
   140001c2d:	cmp    rax,rbx
   140001c30:	jne    0x140001c3c
   140001c32:	mov    edi,0x1
   140001c37:	mov    r14d,edi
   140001c3a:	jmp    0x140001c4e
   140001c3c:	mov    ecx,0x3e8
   140001c41:	call   QWORD PTR [rip+0x1431]        # 0x140003078
   140001c47:	jmp    0x140001c20
   140001c49:	mov    edi,0x1
   140001c4e:	mov    eax,DWORD PTR [rip+0x29a4]        # 0x1400045f8
   140001c54:	cmp    eax,edi
   140001c56:	jne    0x140001c66
   140001c58:	mov    esi,0x1f
   140001c5d:	mov    ecx,esi
   140001c5f:	call   0x140001fd4
   140001c64:	jmp    0x140001cd7
   140001c66:	mov    eax,DWORD PTR [rip+0x298c]        # 0x1400045f8
   140001c6c:	test   eax,eax
   140001c6e:	jne    0x140001ccc
   140001c70:	mov    DWORD PTR [rip+0x2982],edi        # 0x1400045f8
   140001c76:	lea    r12,[rip+0x15b3]        # 0x140003230
   140001c7d:	lea    rbx,[rip+0x1594]        # 0x140003218
   140001c84:	mov    QWORD PTR [rsp+0x30],rbx
   140001c89:	mov    eax,r15d
   140001c8c:	mov    DWORD PTR [rsp+0x24],eax
   140001c90:	cmp    rbx,r12
   140001c93:	jae    0x140001cbe
   140001c95:	test   eax,eax
   140001c97:	jne    0x140001cc2
   140001c99:	mov    rsi,QWORD PTR [rbx]
   140001c9c:	test   rsi,rsi
   140001c9f:	je     0x140001cb3
   140001ca1:	mov    rcx,rsi
   140001ca4:	mov    rax,QWORD PTR [rip+0x1545]        # 0x1400031f0
   140001cab:	call   rax
   140001cad:	call   rsi
   140001caf:	mov    DWORD PTR [rsp+0x24],eax
   140001cb3:	add    rbx,0x8
   140001cb7:	mov    QWORD PTR [rsp+0x30],rbx
   140001cbc:	jmp    0x140001c90
   140001cbe:	test   eax,eax
   140001cc0:	je     0x140001cd2
   140001cc2:	mov    eax,0xff
   140001cc7:	jmp    0x140001e33
   140001ccc:	mov    DWORD PTR [rip+0x2352],edi        # 0x140004024
   140001cd2:	mov    esi,0x1f
   140001cd7:	mov    eax,DWORD PTR [rip+0x291b]        # 0x1400045f8
   140001cdd:	cmp    eax,edi
   140001cdf:	jne    0x140001cfe
   140001ce1:	lea    rdx,[rip+0x1528]        # 0x140003210
   140001ce8:	lea    rcx,[rip+0x1511]        # 0x140003200
   140001cef:	call   0x1400021aa
   140001cf4:	mov    DWORD PTR [rip+0x28fa],0x2        # 0x1400045f8
   140001cfe:	test   r14d,r14d
   140001d01:	jne    0x140001d0d
   140001d03:	mov    rax,r15
   140001d06:	xchg   QWORD PTR [rip+0x28e3],rax        # 0x1400045f0
   140001d0d:	cmp    QWORD PTR [rip+0x28ec],r15        # 0x140004600
   140001d14:	je     0x140001d44
   140001d16:	lea    rcx,[rip+0x28e3]        # 0x140004600
   140001d1d:	call   0x140002040
   140001d22:	test   eax,eax
   140001d24:	je     0x140001d44
   140001d26:	mov    rbx,QWORD PTR [rip+0x28d3]        # 0x140004600
   140001d2d:	mov    rcx,rbx
   140001d30:	mov    rax,QWORD PTR [rip+0x14b9]        # 0x1400031f0
   140001d37:	call   rax
   140001d39:	xor    r8d,r8d
   140001d3c:	lea    edx,[r8+0x2]
   140001d40:	xor    ecx,ecx
   140001d42:	call   rbx
   140001d44:	mov    rax,QWORD PTR [rip+0x1465]        # 0x1400031b0
   140001d4b:	mov    rdx,QWORD PTR [rax]
   140001d4e:	test   rdx,rdx
   140001d51:	jne    0x140001d5d
   140001d53:	mov    eax,0xff
   140001d58:	jmp    0x140001e33
   140001d5d:	mov    QWORD PTR [rsp+0x28],rdx
   140001d62:	mov    ecx,DWORD PTR [rsp+0x20]
   140001d66:	cmp    WORD PTR [rdx],0x20
   140001d6a:	ja     0x140001de4
   140001d6c:	cmp    WORD PTR [rdx],r15w
   140001d70:	je     0x140001d76
   140001d72:	test   ecx,ecx
   140001d74:	jne    0x140001de4
   140001d76:	movzx  eax,WORD PTR [rdx]
   140001d79:	sub    ax,di
   140001d7c:	cmp    ax,si
   140001d7f:	ja     0x140001d8c
   140001d81:	add    rdx,0x2
   140001d85:	mov    QWORD PTR [rsp+0x28],rdx
   140001d8a:	jmp    0x140001d76
   140001d8c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001d90:	movzx  eax,WORD PTR [rsp+0x80]
   140001d98:	mov    r9d,0xa
   140001d9e:	and    cl,dil
   140001da1:	cmovne r9d,eax
   140001da5:	mov    r8,rdx
   140001da8:	xor    edx,edx
   140001daa:	lea    rcx,[rip+0xffffffffffffe24f]        # 0x140000000
   140001db1:	call   0x140001790
   140001db6:	mov    DWORD PTR [rip+0x2264],eax        # 0x140004020
   140001dbc:	cmp    DWORD PTR [rip+0x227d],r15d        # 0x140004040
   140001dc3:	jne    0x140001dcd
   140001dc5:	mov    ecx,eax
   140001dc7:	call   QWORD PTR [rip+0x137b]        # 0x140003148
   140001dcd:	cmp    DWORD PTR [rip+0x2250],r15d        # 0x140004024
   140001dd4:	jne    0x140001de2
   140001dd6:	call   QWORD PTR [rip+0x137c]        # 0x140003158
   140001ddc:	mov    eax,DWORD PTR [rip+0x223e]        # 0x140004020
   140001de2:	jmp    0x140001e33
   140001de4:	cmp    WORD PTR [rdx],0x22
   140001de8:	jne    0x140001df8
   140001dea:	mov    eax,r15d
   140001ded:	test   ecx,ecx
   140001def:	sete   al
   140001df2:	mov    ecx,eax
   140001df4:	mov    DWORD PTR [rsp+0x20],eax
   140001df8:	add    rdx,0x2
   140001dfc:	mov    QWORD PTR [rsp+0x28],rdx
   140001e01:	jmp    0x140001d66
   140001e06:	mov    DWORD PTR [rip+0x2214],eax        # 0x140004020
   140001e0c:	cmp    DWORD PTR [rip+0x222d],0x0        # 0x140004040
   140001e13:	jne    0x140001e1e
   140001e15:	mov    ecx,eax
   140001e17:	call   QWORD PTR [rip+0x1333]        # 0x140003150
   140001e1d:	int3   
   140001e1e:	cmp    DWORD PTR [rip+0x21ff],0x0        # 0x140004024
   140001e25:	jne    0x140001e33
   140001e27:	call   QWORD PTR [rip+0x132b]        # 0x140003158
   140001e2d:	mov    eax,DWORD PTR [rip+0x21ed]        # 0x140004020
   140001e33:	lea    r11,[rsp+0xb0]
   140001e3b:	mov    rbx,QWORD PTR [r11+0x20]
   140001e3f:	mov    rsi,QWORD PTR [r11+0x28]
   140001e43:	mov    rdi,QWORD PTR [r11+0x30]
   140001e47:	mov    rsp,r11
   140001e4a:	pop    r15
   140001e4c:	pop    r14
   140001e4e:	pop    r12
   140001e50:	ret    
   140001e51:	int3   
   140001e52:	int3   
   140001e53:	int3   
   140001e54:	int3   
   140001e55:	int3   
   140001e56:	int3   
   140001e57:	int3   
   140001e58:	int3   
   140001e59:	int3   
   140001e5a:	int3   
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	sub    rsp,0x28
   140001e64:	call   0x1400020d4
   140001e69:	add    rsp,0x28
   140001e6d:	jmp    0x140001be0
   140001e72:	int3   
   140001e73:	int3   
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	int3   
   140001e81:	int3   
   140001e82:	int3   
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001e90:	cmp    rcx,QWORD PTR [rip+0x2171]        # 0x140004008
   140001e97:	jne    0x140001ea9
   140001e99:	rol    rcx,0x10
   140001e9d:	test   cx,0xffff
   140001ea2:	jne    0x140001ea5
   140001ea4:	ret    
   140001ea5:	ror    rcx,0x10
   140001ea9:	jmp    0x140002220
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	int3   
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	jmp    QWORD PTR [rip+0x12ce]        # 0x140003188
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	sub    rsp,0x28
   140001ec4:	mov    rax,QWORD PTR [rcx]
   140001ec7:	cmp    DWORD PTR [rax],0xe06d7363
   140001ecd:	jne    0x140001ef2
   140001ecf:	cmp    DWORD PTR [rax+0x18],0x4
   140001ed3:	jne    0x140001ef2
   140001ed5:	mov    ecx,DWORD PTR [rax+0x20]
   140001ed8:	lea    eax,[rcx-0x19930520]
   140001ede:	cmp    eax,0x2
   140001ee1:	jbe    0x140001eeb
   140001ee3:	cmp    ecx,0x1994000
   140001ee9:	jne    0x140001ef2
   140001eeb:	call   QWORD PTR [rip+0x12a7]        # 0x140003198
   140001ef1:	int3   
   140001ef2:	xor    eax,eax
   140001ef4:	add    rsp,0x28
   140001ef8:	ret    
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	sub    rsp,0x28
   140001f04:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140001ec0
   140001f0b:	call   QWORD PTR [rip+0x1157]        # 0x140003068
   140001f11:	xor    eax,eax
   140001f13:	add    rsp,0x28
   140001f17:	ret    
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	jmp    QWORD PTR [rip+0x125c]        # 0x140003180
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	sub    rsp,0x18
   140001f30:	xor    edx,edx
   140001f32:	lea    rax,[rcx-0x1]
   140001f36:	cmp    rax,0xfffffffffffffffd
   140001f3a:	ja     0x140001f78
   140001f3c:	mov    eax,0x5a4d
   140001f41:	cmp    WORD PTR [rcx],ax
   140001f44:	jne    0x140001f70
   140001f46:	cmp    DWORD PTR [rcx+0x3c],edx
   140001f49:	jl     0x140001f70
   140001f4b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001f52:	jae    0x140001f70
   140001f54:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001f58:	add    rax,rcx
   140001f5b:	mov    QWORD PTR [rsp],rax
   140001f5f:	cmp    DWORD PTR [rax],0x4550
   140001f65:	cmovne rax,rdx
   140001f69:	mov    rdx,rax
   140001f6c:	mov    QWORD PTR [rsp],rax
   140001f70:	jmp    0x140001f78
   140001f72:	xor    edx,edx
   140001f74:	mov    QWORD PTR [rsp],rdx
   140001f78:	mov    rax,rdx
   140001f7b:	add    rsp,0x18
   140001f7f:	ret    
   140001f80:	int3   
   140001f81:	int3   
   140001f82:	int3   
   140001f83:	int3   
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	rex push rbx
   140001f8a:	sub    rsp,0x20
   140001f8e:	mov    ebx,ecx
   140001f90:	xor    ecx,ecx
   140001f92:	call   QWORD PTR [rip+0x10c8]        # 0x140003060
   140001f98:	test   rax,rax
   140001f9b:	je     0x140001fc5
   140001f9d:	mov    rcx,rax
   140001fa0:	call   0x140001f2c
   140001fa5:	test   rax,rax
   140001fa8:	je     0x140001fc5
   140001faa:	mov    ecx,0x2
   140001faf:	cmp    WORD PTR [rax+0x5c],cx
   140001fb3:	jne    0x140001fb9
   140001fb5:	mov    eax,ecx
   140001fb7:	jmp    0x140001fc7
   140001fb9:	cmp    WORD PTR [rax+0x5c],0x3
   140001fbe:	mov    eax,0x1
   140001fc3:	je     0x140001fc7
   140001fc5:	mov    eax,ebx
   140001fc7:	add    rsp,0x20
   140001fcb:	pop    rbx
   140001fcc:	ret    
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	int3   
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	jmp    QWORD PTR [rip+0x119e]        # 0x140003178
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	xor    eax,eax
   140001fe2:	ret    
   140001fe3:	int3   
   140001fe4:	int3   
   140001fe5:	int3   
   140001fe6:	int3   
   140001fe7:	int3   
   140001fe8:	int3   
   140001fe9:	int3   
   140001fea:	int3   
   140001feb:	int3   
   140001fec:	int3   
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140001ff4:	xor    r9d,r9d
   140001ff7:	add    r8,rcx
   140001ffa:	mov    r10,rdx
   140001ffd:	movzx  eax,WORD PTR [r8+0x14]
   140002002:	movzx  r11d,WORD PTR [r8+0x6]
   140002007:	add    rax,0x18
   14000200b:	add    rax,r8
   14000200e:	test   r11d,r11d
   140002011:	je     0x140002031
   140002013:	mov    edx,DWORD PTR [rax+0xc]
   140002016:	cmp    r10,rdx
   140002019:	jb     0x140002025
   14000201b:	mov    ecx,DWORD PTR [rax+0x8]
   14000201e:	add    ecx,edx
   140002020:	cmp    r10,rcx
   140002023:	jb     0x140002033
   140002025:	inc    r9d
   140002028:	add    rax,0x28
   14000202c:	cmp    r9d,r11d
   14000202f:	jb     0x140002013
   140002031:	xor    eax,eax
   140002033:	ret    
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    QWORD PTR [rsp+0x8],rbx
   140002045:	push   rdi
   140002046:	sub    rsp,0x20
   14000204a:	mov    rbx,rcx
   14000204d:	lea    rdi,[rip+0xffffffffffffdfac]        # 0x140000000
   140002054:	mov    rcx,rdi
   140002057:	call   0x1400020a0
   14000205c:	test   eax,eax
   14000205e:	je     0x140002082
   140002060:	sub    rbx,rdi
   140002063:	mov    rdx,rbx
   140002066:	mov    rcx,rdi
   140002069:	call   0x140001ff0
   14000206e:	test   rax,rax
   140002071:	je     0x140002082
   140002073:	mov    eax,DWORD PTR [rax+0x24]
   140002076:	shr    eax,0x1f
   140002079:	not    eax
   14000207b:	and    eax,0x1
   14000207e:	jmp    0x140002082
   140002080:	xor    eax,eax
   140002082:	mov    rbx,QWORD PTR [rsp+0x30]
   140002087:	add    rsp,0x20
   14000208b:	pop    rdi
   14000208c:	ret    
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	int3   
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    rax,rcx
   1400020a3:	mov    ecx,0x5a4d
   1400020a8:	cmp    WORD PTR [rax],cx
   1400020ab:	je     0x1400020b0
   1400020ad:	xor    eax,eax
   1400020af:	ret    
   1400020b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400020b4:	add    rcx,rax
   1400020b7:	xor    eax,eax
   1400020b9:	cmp    DWORD PTR [rcx],0x4550
   1400020bf:	jne    0x1400020cd
   1400020c1:	mov    edx,0x20b
   1400020c6:	cmp    WORD PTR [rcx+0x18],dx
   1400020ca:	sete   al
   1400020cd:	ret    
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	int3   
   1400020d1:	int3   
   1400020d2:	int3   
   1400020d3:	int3   
   1400020d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400020d9:	push   rbp
   1400020da:	mov    rbp,rsp
   1400020dd:	sub    rsp,0x20
   1400020e1:	and    QWORD PTR [rbp+0x18],0x0
   1400020e6:	movabs rbx,0x2b992ddfa232
   1400020f0:	mov    rax,QWORD PTR [rip+0x1f11]        # 0x140004008
   1400020f7:	cmp    rax,rbx
   1400020fa:	jne    0x14000218f
   140002100:	lea    rcx,[rbp+0x18]
   140002104:	call   QWORD PTR [rip+0xf36]        # 0x140003040
   14000210a:	mov    rax,QWORD PTR [rbp+0x18]
   14000210e:	mov    QWORD PTR [rbp+0x10],rax
   140002112:	call   QWORD PTR [rip+0xf90]        # 0x1400030a8
   140002118:	mov    eax,eax
   14000211a:	xor    QWORD PTR [rbp+0x10],rax
   14000211e:	call   QWORD PTR [rip+0xf24]        # 0x140003048
   140002124:	mov    eax,eax
   140002126:	xor    QWORD PTR [rbp+0x10],rax
   14000212a:	call   QWORD PTR [rip+0xf08]        # 0x140003038
   140002130:	mov    eax,eax
   140002132:	shl    rax,0x18
   140002136:	xor    QWORD PTR [rbp+0x10],rax
   14000213a:	call   QWORD PTR [rip+0xef8]        # 0x140003038
   140002140:	mov    eax,eax
   140002142:	lea    rcx,[rbp+0x10]
   140002146:	xor    rax,QWORD PTR [rbp+0x10]
   14000214a:	xor    rax,rcx
   14000214d:	lea    rcx,[rbp+0x20]
   140002151:	mov    QWORD PTR [rbp+0x10],rax
   140002155:	call   QWORD PTR [rip+0xefd]        # 0x140003058
   14000215b:	mov    eax,DWORD PTR [rbp+0x20]
   14000215e:	movabs rcx,0xffffffffffff
   140002168:	shl    rax,0x20
   14000216c:	xor    rax,QWORD PTR [rbp+0x20]
   140002170:	xor    rax,QWORD PTR [rbp+0x10]
   140002174:	and    rax,rcx
   140002177:	movabs rcx,0x2b992ddfa233
   140002181:	cmp    rax,rbx
   140002184:	cmove  rax,rcx
   140002188:	mov    QWORD PTR [rip+0x1e79],rax        # 0x140004008
   14000218f:	mov    rbx,QWORD PTR [rsp+0x48]
   140002194:	not    rax
   140002197:	mov    QWORD PTR [rip+0x1e72],rax        # 0x140004010
   14000219e:	add    rsp,0x20
   1400021a2:	pop    rbp
   1400021a3:	ret    
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	jmp    QWORD PTR [rip+0xfb8]        # 0x140003168
   1400021b0:	int3   
   1400021b1:	int3   
   1400021b2:	int3   
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	jmp    QWORD PTR [rip+0xfb4]        # 0x140003170
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	int3   
   1400021c1:	int3   
   1400021c2:	int3   
   1400021c3:	int3   
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	int3   
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	ret    0x0
   1400021d3:	int3   
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	rex push rbx
   1400021de:	sub    rsp,0x20
   1400021e2:	mov    rbx,rcx
   1400021e5:	xor    ecx,ecx
   1400021e7:	call   QWORD PTR [rip+0xe7b]        # 0x140003068
   1400021ed:	mov    rcx,rbx
   1400021f0:	call   QWORD PTR [rip+0xe9a]        # 0x140003090
   1400021f6:	call   QWORD PTR [rip+0xe9c]        # 0x140003098
   1400021fc:	mov    rcx,rax
   1400021ff:	mov    edx,0xc0000409
   140002204:	add    rsp,0x20
   140002208:	pop    rbx
   140002209:	rex.W jmp QWORD PTR [rip+0xe90]        # 0x1400030a0
   140002210:	int3   
   140002211:	int3   
   140002212:	int3   
   140002213:	int3   
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	mov    QWORD PTR [rsp+0x8],rcx
   140002225:	sub    rsp,0x88
   14000222c:	lea    rcx,[rip+0x1ecd]        # 0x140004100
   140002233:	call   QWORD PTR [rip+0xe7f]        # 0x1400030b8
   140002239:	mov    rax,QWORD PTR [rip+0x1fb8]        # 0x1400041f8
   140002240:	mov    QWORD PTR [rsp+0x48],rax
   140002245:	xor    r8d,r8d
   140002248:	lea    rdx,[rsp+0x50]
   14000224d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002252:	call   QWORD PTR [rip+0xe28]        # 0x140003080
   140002258:	mov    QWORD PTR [rsp+0x40],rax
   14000225d:	cmp    QWORD PTR [rsp+0x40],0x0
   140002263:	je     0x1400022a7
   140002265:	mov    QWORD PTR [rsp+0x38],0x0
   14000226e:	lea    rax,[rsp+0x58]
   140002273:	mov    QWORD PTR [rsp+0x30],rax
   140002278:	lea    rax,[rsp+0x60]
   14000227d:	mov    QWORD PTR [rsp+0x28],rax
   140002282:	lea    rax,[rip+0x1e77]        # 0x140004100
   140002289:	mov    QWORD PTR [rsp+0x20],rax
   14000228e:	mov    r9,QWORD PTR [rsp+0x40]
   140002293:	mov    r8,QWORD PTR [rsp+0x48]
   140002298:	mov    rdx,QWORD PTR [rsp+0x50]
   14000229d:	xor    ecx,ecx
   14000229f:	call   QWORD PTR [rip+0xde3]        # 0x140003088
   1400022a5:	jmp    0x1400022ca
   1400022a7:	mov    rax,QWORD PTR [rip+0x1eea]        # 0x140004198
   1400022ae:	mov    rax,QWORD PTR [rax]
   1400022b1:	mov    QWORD PTR [rip+0x1f40],rax        # 0x1400041f8
   1400022b8:	mov    rax,QWORD PTR [rip+0x1ed9]        # 0x140004198
   1400022bf:	add    rax,0x8
   1400022c3:	mov    QWORD PTR [rip+0x1ece],rax        # 0x140004198
   1400022ca:	mov    rax,QWORD PTR [rip+0x1f27]        # 0x1400041f8
   1400022d1:	mov    QWORD PTR [rip+0x1d98],rax        # 0x140004070
   1400022d8:	mov    rax,QWORD PTR [rsp+0x90]
   1400022e0:	mov    QWORD PTR [rip+0x1e99],rax        # 0x140004180
   1400022e7:	mov    DWORD PTR [rip+0x1d6f],0xc0000409        # 0x140004060
   1400022f1:	mov    DWORD PTR [rip+0x1d69],0x1        # 0x140004064
   1400022fb:	mov    DWORD PTR [rip+0x1d73],0x3        # 0x140004078
   140002305:	mov    eax,0x8
   14000230a:	imul   rax,rax,0x0
   14000230e:	lea    rcx,[rip+0x1d6b]        # 0x140004080
   140002315:	mov    QWORD PTR [rcx+rax*1],0x2
   14000231d:	mov    eax,0x8
   140002322:	imul   rax,rax,0x1
   140002326:	lea    rcx,[rip+0x1d53]        # 0x140004080
   14000232d:	mov    rdx,QWORD PTR [rip+0x1cd4]        # 0x140004008
   140002334:	mov    QWORD PTR [rcx+rax*1],rdx
   140002338:	mov    eax,0x8
   14000233d:	imul   rax,rax,0x2
   140002341:	lea    rcx,[rip+0x1d38]        # 0x140004080
   140002348:	mov    rdx,QWORD PTR [rip+0x1cc1]        # 0x140004010
   14000234f:	mov    QWORD PTR [rcx+rax*1],rdx
   140002353:	mov    eax,0x8
   140002358:	imul   rax,rax,0x0
   14000235c:	mov    rcx,QWORD PTR [rip+0x1ca5]        # 0x140004008
   140002363:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002368:	mov    eax,0x8
   14000236d:	imul   rax,rax,0x1
   140002371:	mov    rcx,QWORD PTR [rip+0x1c98]        # 0x140004010
   140002378:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000237d:	lea    rcx,[rip+0xedc]        # 0x140003260
   140002384:	call   0x1400021dc
   140002389:	add    rsp,0x88
   140002390:	ret    
   140002391:	int3   
   140002392:	int3   
   140002393:	int3   
   140002394:	int3   
   140002395:	int3   
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	int3   
   14000239d:	int3   
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	int3   
   1400023a1:	int3   
   1400023a2:	int3   
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	sub    rsp,0x28
   1400023ac:	mov    r8,QWORD PTR [r9+0x38]
   1400023b0:	mov    rcx,rdx
   1400023b3:	mov    rdx,r9
   1400023b6:	call   0x1400023cc
   1400023bb:	mov    eax,0x1
   1400023c0:	add    rsp,0x28
   1400023c4:	ret    
   1400023c5:	int3   
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	rex push rbx
   1400023ce:	sub    rsp,0x20
   1400023d2:	mov    r11d,DWORD PTR [r8]
   1400023d5:	mov    rbx,rdx
   1400023d8:	and    r11d,0xfffffff8
   1400023dc:	mov    r9,rcx
   1400023df:	test   BYTE PTR [r8],0x4
   1400023e3:	mov    r10,rcx
   1400023e6:	je     0x1400023fb
   1400023e8:	mov    eax,DWORD PTR [r8+0x8]
   1400023ec:	movsxd r10,DWORD PTR [r8+0x4]
   1400023f0:	neg    eax
   1400023f2:	add    r10,rcx
   1400023f5:	movsxd rcx,eax
   1400023f8:	and    r10,rcx
   1400023fb:	movsxd rax,r11d
   1400023fe:	mov    rdx,QWORD PTR [rax+r10*1]
   140002402:	mov    rax,QWORD PTR [rbx+0x10]
   140002406:	mov    ecx,DWORD PTR [rax+0x8]
   140002409:	add    rcx,QWORD PTR [rbx+0x8]
   14000240d:	test   BYTE PTR [rcx+0x3],0xf
   140002411:	je     0x14000241f
   140002413:	movzx  eax,BYTE PTR [rcx+0x3]
   140002417:	and    eax,0xfffffff0
   14000241a:	cdqe   
   14000241c:	add    r9,rax
   14000241f:	xor    r9,rdx
   140002422:	mov    rcx,r9
   140002425:	add    rsp,0x20
   140002429:	pop    rbx
   14000242a:	jmp    0x140001e90
   14000242f:	int3   
   140002430:	int3   
   140002431:	int3   
   140002432:	int3   
   140002433:	int3   
   140002434:	int3   
   140002435:	int3   
   140002436:	jmp    QWORD PTR [rip+0xd7c]        # 0x1400031b8
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	int3   
   140002441:	int3   
   140002442:	int3   
   140002443:	int3   
   140002444:	int3   
   140002445:	int3   
   140002446:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002450:	jmp    rax
   140002452:	int3   
   140002453:	int3   
   140002454:	int3   
   140002455:	int3   
   140002456:	int3   
   140002457:	int3   
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	int3   
   140002461:	int3   
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	rex push rbp
   140002468:	sub    rsp,0x20
   14000246c:	mov    rbp,rdx
   14000246f:	mov    rax,QWORD PTR [rcx]
   140002472:	mov    rdx,rcx
   140002475:	mov    ecx,DWORD PTR [rax]
   140002477:	call   0x140001f1e
   14000247c:	nop
   14000247d:	add    rsp,0x20
   140002481:	pop    rbp
   140002482:	ret    
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	rex push rbp
   140002492:	sub    rsp,0x20
   140002496:	mov    rbp,rdx
   140002499:	mov    rax,QWORD PTR [rcx]
   14000249c:	xor    ecx,ecx
   14000249e:	cmp    DWORD PTR [rax],0xc0000005
   1400024a4:	sete   cl
   1400024a7:	mov    eax,ecx
   1400024a9:	add    rsp,0x20
   1400024ad:	pop    rbp
   1400024ae:	ret    
   1400024af:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	out    0x3c,al
	...
   14000300e:	add    BYTE PTR [rax],al
   140003010:	pop    rdx
   140003011:	cmp    eax,DWORD PTR [rax]
   140003013:	add    BYTE PTR [rax],al
   140003015:	add    BYTE PTR [rax],al
   140003017:	add    BYTE PTR [rsi+0x3b],ah
   14000301a:	add    BYTE PTR [rax],al
   14000301c:	add    BYTE PTR [rax],al
   14000301e:	add    BYTE PTR [rax],al
   140003020:	jbe    0x14000305d
   140003022:	add    BYTE PTR [rax],al
   140003024:	add    BYTE PTR [rax],al
   140003026:	add    BYTE PTR [rax],al
   140003028:	mov    BYTE PTR [rbx],bh
   14000302a:	add    BYTE PTR [rax],al
   14000302c:	add    BYTE PTR [rax],al
   14000302e:	add    BYTE PTR [rax],al
   140003030:	xchg   esi,eax
   140003031:	cmp    eax,DWORD PTR [rax]
   140003033:	add    BYTE PTR [rax],al
   140003035:	add    BYTE PTR [rax],al
   140003037:	add    BYTE PTR [rsi+0x3e],ah
   14000303a:	add    BYTE PTR [rax],al
   14000303c:	add    BYTE PTR [rax],al
   14000303e:	add    BYTE PTR [rax],al
   140003040:	rex.WR
   140003041:	add    BYTE PTR ds:[rax],al
   140003044:	add    BYTE PTR [rax],al
   140003046:	add    BYTE PTR [rax],al
   140003048:	ss add BYTE PTR ds:[rax],al
   14000304c:	add    BYTE PTR [rax],al
   14000304e:	add    BYTE PTR [rax],al
   140003050:	rex.WX cmp rax,QWORD PTR [rax]
   140003053:	add    BYTE PTR [rax],al
   140003055:	add    BYTE PTR [rax],al
   140003057:	add    BYTE PTR [rsi],al
   140003059:	add    BYTE PTR ds:[rax],al
   14000305c:	add    BYTE PTR [rax],al
   14000305e:	add    BYTE PTR [rax],al
   140003060:	repnz cmp eax,0x0
   140003066:	add    BYTE PTR [rax],al
   140003068:	(bad)  
   140003069:	cmp    eax,0x0
   14000306e:	add    BYTE PTR [rax],al
   140003070:	ret    0x3d
   140003073:	add    BYTE PTR [rax],al
   140003075:	add    BYTE PTR [rax],al
   140003077:	add    BYTE PTR [rdx+0x3d],bh
   14000307d:	add    BYTE PTR [rax],al
   14000307f:	add    BYTE PTR [rdx+0x3e],cl
   140003085:	add    BYTE PTR [rax],al
   140003087:	add    BYTE PTR [rsi+rdi*1+0x0],ah
   14000308e:	add    BYTE PTR [rax],al
   140003090:	mov    eax,0x3e
   140003095:	add    BYTE PTR [rax],al
   140003097:	add    ah,dl
   140003099:	add    BYTE PTR ds:[rax],al
   14000309c:	add    BYTE PTR [rax],al
   14000309e:	add    BYTE PTR [rax],al
   1400030a0:	call   0x1400030e3
   1400030a5:	add    BYTE PTR [rax],al
   1400030a7:	add    BYTE PTR [rax],ah
   1400030a9:	add    BYTE PTR ds:[rax],al
   1400030ac:	add    BYTE PTR [rax],al
   1400030ae:	add    BYTE PTR [rax],al
   1400030b0:	cmp    BYTE PTR [rbx],bh
   1400030b2:	add    BYTE PTR [rax],al
   1400030b4:	add    BYTE PTR [rax],al
   1400030b6:	add    BYTE PTR [rax],al
   1400030b8:	jbe    0x1400030f8
	...
   1400030c6:	add    BYTE PTR [rax],al
   1400030c8:	(bad)  
   1400030c9:	add    BYTE PTR [rax],al
   1400030cb:	add    BYTE PTR [rax],al
   1400030cd:	add    BYTE PTR [rax],al
   1400030cf:	add    BYTE PTR [rdx],0x0
   1400030d2:	add    BYTE PTR [rax],al
   1400030d4:	add    BYTE PTR [rax],al
   1400030d6:	add    BYTE PTR [rax+0x0],al
   1400030dc:	add    BYTE PTR [rax],al
   1400030de:	add    BYTE PTR [rax],al
   1400030e0:	cwde   
   1400030e1:	cmp    eax,0x0
	...
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	sahf   
   1400030f1:	add    BYTE PTR [rax],al
   1400030f3:	add    BYTE PTR [rax],al
   1400030f5:	add    BYTE PTR [rax],al
   1400030f7:	add    BYTE PTR [rax],0x0
   1400030fa:	add    BYTE PTR [rax],al
   1400030fc:	add    BYTE PTR [rax],al
   1400030fe:	add    BYTE PTR [rax],al
   140003100:	jp     0x14000313f
	...
   14000310e:	add    BYTE PTR [rax],al
   140003110:	enter  0x3b,0x0
   140003114:	add    BYTE PTR [rax],al
   140003116:	add    BYTE PTR [rax],al
   140003118:	mov    edx,0x3b
   14000311d:	add    BYTE PTR [rax],al
   14000311f:	add    dl,ch
   140003121:	cmp    eax,DWORD PTR [rax]
   140003123:	add    BYTE PTR [rax],al
   140003125:	add    BYTE PTR [rax],al
   140003127:	add    dh,dl
   140003129:	cmp    eax,DWORD PTR [rax]
	...
   140003137:	add    BYTE PTR [rdx+0x3c],al
   14000313a:	add    BYTE PTR [rax],al
   14000313c:	add    BYTE PTR [rax],al
   14000313e:	add    BYTE PTR [rax],al
   140003140:	xor    BYTE PTR [rax+rax*1],bh
   140003143:	add    BYTE PTR [rax],al
   140003145:	add    BYTE PTR [rax],al
   140003147:	add    BYTE PTR [rsp+rdi*1+0x0],dl
   14000314b:	add    BYTE PTR [rax],al
   14000314d:	add    BYTE PTR [rax],al
   14000314f:	add    BYTE PTR [rsp+rdi*1+0x0],bl
   140003153:	add    BYTE PTR [rax],al
   140003155:	add    BYTE PTR [rax],al
   140003157:	add    BYTE PTR [rsp+rdi*1+0x0],ah
   14000315b:	add    BYTE PTR [rax],al
   14000315d:	add    BYTE PTR [rax],al
   14000315f:	add    BYTE PTR [rsi+0x3c],ch
   140003162:	add    BYTE PTR [rax],al
   140003164:	add    BYTE PTR [rax],al
   140003166:	add    BYTE PTR [rax],al
   140003168:	(bad)  
   140003169:	cmp    al,0x0
   14000316b:	add    BYTE PTR [rax],al
   14000316d:	add    BYTE PTR [rax],al
   14000316f:	add    BYTE PTR [rsi+0x3c],cl
   140003175:	add    BYTE PTR [rax],al
   140003177:	add    BYTE PTR [rdx],ah
   140003179:	cmp    al,0x0
   14000317b:	add    BYTE PTR [rax],al
   14000317d:	add    BYTE PTR [rax],al
   14000317f:	add    BYTE PTR [rsp+rdi*1],dl
   140003182:	add    BYTE PTR [rax],al
   140003184:	add    BYTE PTR [rax],al
   140003186:	add    BYTE PTR [rax],al
   140003188:	or     al,0x3c
   14000318a:	add    BYTE PTR [rax],al
   14000318c:	add    BYTE PTR [rax],al
   14000318e:	add    BYTE PTR [rax],al
   140003190:	add    bh,BYTE PTR [rax+rax*1]
   140003193:	add    BYTE PTR [rax],al
   140003195:	add    BYTE PTR [rax],al
   140003197:	add    dl,dl
   140003199:	cmp    al,0x0
   14000319b:	add    BYTE PTR [rax],al
   14000319d:	add    BYTE PTR [rax],al
   14000319f:	add    BYTE PTR [rdx+0x3c],bh
   1400031a5:	add    BYTE PTR [rax],al
   1400031a7:	add    BYTE PTR [rax+0x3c],dh
   1400031ad:	add    BYTE PTR [rax],al
   1400031af:	add    BYTE PTR [rsi+0x3c],ah
   1400031b5:	add    BYTE PTR [rax],al
   1400031b7:	add    ah,bh
   1400031b9:	add    BYTE PTR ds:[rax],al
	...
   1400031c8:	sub    al,0x3d
   1400031ca:	add    BYTE PTR [rax],al
   1400031cc:	add    BYTE PTR [rax],al
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	sbb    bh,BYTE PTR [rip+0x0]        # 0x1400031d6
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	(bad)  
   1400031d9:	cmp    eax,0x0
   1400031de:	add    BYTE PTR [rax],al
   1400031e0:	ds cmp eax,0x0
	...
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	shl    BYTE PTR [rcx],1
   1400031f2:	add    BYTE PTR [rax+0x1],al
   1400031f5:	add    BYTE PTR [rax],al
   1400031f7:	add    BYTE PTR [rax+0x24],dl
   1400031fa:	add    BYTE PTR [rax+0x1],al
	...
   140003205:	add    BYTE PTR [rax],al
   140003207:	add    BYTE PTR [rax+0x140001b],dl
	...
   14000321d:	add    BYTE PTR [rax],al
   14000321f:	add    BYTE PTR [rax+0x140001a],dh
   140003225:	add    BYTE PTR [rax],al
   140003227:	add    BYTE PTR [rax],al
   140003229:	(bad)  
   14000322a:	add    BYTE PTR [rax+0x1],al
	...
   140003235:	add    BYTE PTR [rax],al
   140003237:	add    BYTE PTR [rax-0x6fffffe6],dh
   14000323d:	sbb    eax,DWORD PTR [rax]
   14000323f:	add    BYTE PTR [rax+0x1e],ah
   140003242:	add    BYTE PTR [rax],al
   140003244:	rcr    BYTE PTR [rsi],0x0
   140003247:	add    BYTE PTR [rax],al
   140003249:	(bad)  
   14000324a:	add    BYTE PTR [rax],al
   14000324c:	loopne 0x14000326d
   14000324e:	add    BYTE PTR [rax],al
   140003250:	shl    BYTE PTR [rcx],1
   140003252:	add    BYTE PTR [rax],al
   140003254:	and    BYTE PTR [rdx],ah
	...
   14000325e:	add    BYTE PTR [rax],al
   140003260:	(bad)  
   140003261:	add    BYTE PTR [rax+0x1],al
   140003265:	add    BYTE PTR [rax],al
   140003267:	add    BYTE PTR [rax],al
   140003269:	add    BYTE PTR [r8+0x1],al
   14000326d:	add    BYTE PTR [rax],al
   14000326f:	add    BYTE PTR [rbx+0x0],dh
   140003272:	je     0x140003274
   140003274:	imul   eax,DWORD PTR [rax],0x63005f
   14000327a:	imul   eax,DWORD PTR [rax],0x64002e
   140003280:	ins    BYTE PTR es:[rdi],dx
   140003281:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003285:	add    BYTE PTR [rax],al
   140003287:	add    BYTE PTR [rcx+0x64],al
   14000328a:	fs rex.R
   14000328c:	gs jbe 0x1400032f8
   14000328f:	movsxd esp,DWORD PTR [rbp+0x0]
   140003292:	add    BYTE PTR [rax],al
   140003294:	add    BYTE PTR [rax],al
   140003296:	add    BYTE PTR [rax],al
   140003298:	push   rdi
   140003299:	add    BYTE PTR [rcx+0x0],ch
   14000329c:	(bad)  
   14000329d:	add    BYTE PTR [rax+0x0],dl
   1400032a0:	jb     0x1400032a2
   1400032a2:	outs   dx,DWORD PTR ds:[rsi]
   1400032a3:	add    BYTE PTR [rax+0x0],dh
   1400032a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400032aa:	je     0x1400032ac
   1400032ac:	imul   eax,DWORD PTR [rax],0x730065
   1400032b2:	push   rsi
   1400032b3:	add    BYTE PTR [rbp+0x0],ah
   1400032b6:	jb     0x1400032b8
   1400032b8:	jae    0x1400032ba
   1400032ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400032c0:	xor    DWORD PTR [rax],eax
   1400032c2:	add    BYTE PTR [rax],al
   1400032c4:	add    BYTE PTR [rax],al
   1400032c6:	add    BYTE PTR [rax],al
   1400032c8:	push   rdi
   1400032c9:	add    BYTE PTR [rcx+0x0],ch
   1400032cc:	(bad)  
   1400032cd:	add    BYTE PTR [rax+0x0],dl
   1400032d0:	jb     0x1400032d2
   1400032d2:	outs   dx,DWORD PTR ds:[rsi]
   1400032d3:	add    BYTE PTR [rax+0x0],dh
   1400032d6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400032da:	je     0x1400032dc
   1400032dc:	imul   eax,DWORD PTR [rax],0x730065
   1400032e2:	push   rsi
   1400032e3:	add    BYTE PTR [rbp+0x0],ah
   1400032e6:	jb     0x1400032e8
   1400032e8:	jae    0x1400032ea
   1400032ea:	imul   eax,DWORD PTR [rax],0x6e006f
   1400032f0:	xor    al,BYTE PTR [rax]
   1400032f2:	add    BYTE PTR [rax],al
   1400032f4:	add    BYTE PTR [rax],al
   1400032f6:	add    BYTE PTR [rax],al
   1400032f8:	push   rbx
   1400032f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400032fd:	add    BYTE PTR [rax+0x0],dl
   140003300:	jb     0x140003302
   140003302:	outs   dx,DWORD PTR ds:[rsi]
   140003303:	add    BYTE PTR [rax+0x0],dh
   140003306:	add    BYTE PTR gs:[rdx+0x0],dh
   14000330a:	je     0x14000330c
   14000330c:	imul   eax,DWORD PTR [rax],0x730065
   140003312:	add    BYTE PTR [rax],al
   140003314:	add    BYTE PTR [rax],al
   140003316:	add    BYTE PTR [rax],al
   140003318:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000331c:	jae    0x14000331e
   14000331e:	je     0x140003320
   140003320:	(bad)  
   140003321:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140003325:	add    BYTE PTR [rdi+0x0],dl
   140003328:	imul   eax,DWORD PTR [rax],0x440061
   14000332e:	add    BYTE PTR gs:[rsi+0x0],dh
   140003332:	imul   eax,DWORD PTR [rax],0x650063
	...
   140003340:	push   rdi
   140003341:	add    BYTE PTR [rcx+0x0],ch
   140003344:	outs   dx,BYTE PTR ds:[rsi]
   140003345:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140003349:	add    BYTE PTR [rdi+0x0],dh
   14000334c:	rex.W add BYTE PTR [rcx+0x0],spl
   140003350:	outs   dx,BYTE PTR ds:[rsi]
   140003351:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140003355:	add    BYTE PTR [rbp+0x0],ah
	...
   140003360:	cwde   
   140003361:	xor    al,BYTE PTR [rax]
   140003363:	rex add DWORD PTR [rax],eax
	...
   14000336e:	add    BYTE PTR [rax],al
   140003370:	enter  0x32,0x40
   140003374:	add    DWORD PTR [rax],eax
   140003376:	add    BYTE PTR [rax],al
   140003378:	add    DWORD PTR [rax],eax
   14000337a:	add    BYTE PTR [rax],al
   14000337c:	add    BYTE PTR [rax],al
   14000337e:	add    BYTE PTR [rax],al
   140003380:	clc    
   140003381:	xor    al,BYTE PTR [rax]
   140003383:	rex add DWORD PTR [rax],eax
   140003386:	add    BYTE PTR [rax],al
   140003388:	add    al,BYTE PTR [rax]
   14000338a:	add    BYTE PTR [rax],al
   14000338c:	add    BYTE PTR [rax],al
   14000338e:	add    BYTE PTR [rax],al
   140003390:	fwait
   140003391:	cs in  eax,dx
   140003393:	jle    0x14000336f
   140003395:	lods   al,BYTE PTR ds:[rsi]
   140003396:	rcl    BYTE PTR [rcx],cl
   140003398:	add    BYTE PTR [rax+0x655f8000],0x96
   14000339f:	shl    BYTE PTR [rax-0x33674a18],cl
   1400033a5:	sub    DWORD PTR [rdx],ebx
   1400033a7:	rex.WB stos BYTE PTR es:[rdi],al
   1400033a9:	shl    dh,0xdb
   1400033ac:	rex.WRXB fmul st(6),st
   1400033af:	mov    dh,0x8c
   1400033b1:	ss (bad) 
   1400033b3:	jo     0x1400033cc
   1400033b5:	nop
   1400033b6:	(bad)  
   1400033b7:	rex.WB movabs al,ds:0x2a7ddeb0ead35c7b
   1400033c1:	push   rax
   1400033c2:	mov    dl,0x5e
   1400033c4:	icebp  
   1400033c5:	mov    ecx,ss
   1400033c7:	adc    DWORD PTR [rdi+0x8600092],edi
   1400033cd:	(bad)  
   1400033ce:	fcom   DWORD PTR [rcx]
   1400033d0:	icebp  
   1400033d1:	jl     0x140003393
   1400033d3:	jns    0x1400033b2
   1400033d5:	retf   
   1400033d6:	out    dx,al
   1400033d7:	mov    es,r11d
   1400033da:	lock add BYTE PTR [rax+0x377adaca],al
   1400033e1:	mov    dl,dh
   1400033e3:	add    ch,bl
   1400033e5:	push   rbp
   1400033e6:	(bad)  
   1400033e7:	rex.WRXB stos BYTE PTR es:[rdi],al
   1400033e9:	cmc    
   1400033ea:	push   0x464a955
   1400033ef:	addr32 repz retf 
   1400033f2:	mov    ebx,0x19b28a83
   1400033f7:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400033f9:	stos   BYTE PTR es:[rdi],al
   1400033fa:	jae    0x1400033fe
   1400033fc:	je     0x140003443
   1400033fe:	(bad)  
   1400033ff:	jb     0x140003435
   140003401:	(bad)  
   140003402:	repnz add BYTE PTR [rcx-0x43b7d348],ah
   140003409:	clc    
   14000340a:	cmp    al,bh
   14000340c:	mov    al,0xfe
   14000340e:	(bad)  
   14000340f:	(bad)  
   140003410:	es out 0xf4,eax
   140003413:	movabs eax,ds:0x600092bf11d18cf1
   14000341c:	or     BYTE PTR [rsi],bl
   14000341e:	fcom   DWORD PTR [rcx]
   140003420:	mov    esp,0x88b6c292
   140003425:	jl     0x140003415
   140003427:	mov    edx,DWORD PTR [r14+rcx*4-0x37]
   14000342c:	es (bad) 
   14000342e:	in     eax,0x99
   140003430:	add    BYTE PTR [rax],al
   140003432:	add    BYTE PTR [rax],al
   140003434:	cmp    al,0x38
   140003436:	lahf   
   140003437:	push   rbp
   140003438:	add    BYTE PTR [rax],al
   14000343a:	add    BYTE PTR [rax],al
   14000343c:	add    al,BYTE PTR [rax]
   14000343e:	add    BYTE PTR [rax],al
   140003440:	sub    eax,DWORD PTR [rax]
   140003442:	add    BYTE PTR [rax],al
   140003444:	xor    BYTE PTR [rip+0x1f300000],dh        # 0x15f30344a
   14000344a:	add    BYTE PTR [rax],al
   14000344c:	add    BYTE PTR [rax],al
   14000344e:	add    BYTE PTR [rax],al
   140003450:	cmp    al,0x38
   140003452:	lahf   
   140003453:	push   rbp
   140003454:	add    BYTE PTR [rax],al
   140003456:	add    BYTE PTR [rax],al
   140003458:	or     eax,0xe0000000
   14000345d:	add    DWORD PTR [rax],eax
   14000345f:	add    BYTE PTR [rax+0x35],dh
   140003462:	add    BYTE PTR [rax],al
   140003464:	jo     0x140003485
	...
   14000348e:	add    BYTE PTR [rax],al
   140003490:	movabs al,ds:0x0
	...
   1400034e5:	add    BYTE PTR [rax],al
   1400034e7:	add    BYTE PTR [rax],cl
   1400034e9:	add    BYTE PTR [rax+0x1],al
	...
   1400034fd:	add    BYTE PTR [rax],al
   1400034ff:	add    al,dh
   140003501:	xor    DWORD PTR [rax],eax
   140003503:	rex add DWORD PTR [rax],eax
   140003506:	add    BYTE PTR [rax],al
   140003508:	clc    
   140003509:	xor    DWORD PTR [rax],eax
   14000350b:	rex add DWORD PTR [rax],eax
   14000350e:	add    BYTE PTR [rax],al
   140003510:	cmp    BYTE PTR [rdx],dh
   140003512:	add    BYTE PTR [rax+0x1],al
   140003515:	add    BYTE PTR [rax],al
   140003517:	add    BYTE PTR [rax],cl
	...
   140003521:	xor    eax,0x0
	...
   14000352e:	add    BYTE PTR [rax],al
   140003530:	push   rdx
   140003531:	push   rbx
   140003532:	rex.R push rbx
   140003534:	lods   al,BYTE PTR ds:[rsi]
   140003535:	stc    
   140003536:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140003537:	retf   
   140003538:	rex.WRB fcomp QWORD PTR [r8]
   14000353b:	and    QWORD PTR [rip+0x66da33b6],0x76        # 0x1a6da68f9
   140003543:	mov    esp,0x1
   140003548:	rex.WB ins DWORD PTR es:[rdi],dx
   14000354a:	(bad)  
   14000354b:	imul   ebp,DWORD PTR [esi+0x67],0x69766544
   140003553:	movsxd esp,DWORD PTR [rbp+0x73]
   140003556:	cs jo  0x1400035bd
   140003559:	(bad)  
	...
   14000356e:	add    BYTE PTR [rax],al
   140003570:	rex.RXB
   140003571:	rex.XB push r12
   140003573:	rex.WR add BYTE PTR [rax],r10b
   140003576:	add    BYTE PTR [rax],al
   140003578:	cmp    al,0x14
   14000357a:	add    BYTE PTR [rax],al
   14000357c:	cs je  0x1400035e4
   14000357f:	js     0x1400035f5
   140003581:	and    al,0x6d
   140003583:	outs   dx,BYTE PTR ds:[rsi]
   140003584:	add    BYTE PTR [rax],al
   140003586:	add    BYTE PTR [rax],al
   140003588:	and    al,0x0
   14000358b:	add    BYTE PTR [rdx],dl
   14000358d:	add    BYTE PTR [rax],al
   14000358f:	add    BYTE PTR [rsi],ch
   140003591:	je     0x1400035f8
   140003593:	js     0x140003609
   140003595:	and    al,0x6d
   140003597:	outs   dx,BYTE PTR ds:[rsi]
   140003598:	and    al,0x30
   14000359a:	xor    BYTE PTR [rax],al
   14000359c:	(bad)  
   14000359d:	and    al,0x0
   14000359f:	add    BYTE PTR [rax+0x0],dl
   1400035a2:	add    BYTE PTR [rax],al
   1400035a4:	cs je  0x14000360c
   1400035a7:	js     0x14000361d
   1400035a9:	and    al,0x78
   1400035ab:	add    BYTE PTR [rax],al
   1400035ad:	xor    BYTE PTR [rax],al
   1400035af:	add    al,dh
   1400035b1:	add    DWORD PTR [rax],eax
   1400035b3:	add    BYTE PTR [rsi],ch
   1400035b5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400035bd:	add    BYTE PTR [rax],al
   1400035bf:	add    al,dh
   1400035c1:	xor    DWORD PTR [rax],eax
   1400035c3:	add    BYTE PTR [rax],dl
   1400035c5:	add    BYTE PTR [rax],al
   1400035c7:	add    BYTE PTR [rsi],ch
   1400035c9:	xor    BYTE PTR [rax],dh
   1400035cb:	movsxd esp,DWORD PTR [rsi+0x67]
   1400035ce:	add    BYTE PTR [rax],al
   1400035d0:	add    BYTE PTR [rdx],dh
   1400035d2:	add    BYTE PTR [rax],al
   1400035d4:	or     BYTE PTR [rax],al
   1400035d6:	add    BYTE PTR [rax],al
   1400035d8:	cs rex.XB push r10
   1400035db:	push   rsp
   1400035dc:	and    al,0x58
   1400035de:	rex.XB
   1400035df:	add    BYTE PTR [r8],al
   1400035e2:	add    BYTE PTR [rax],al
   1400035e4:	or     BYTE PTR [rdx],dh
   1400035e6:	add    BYTE PTR [rax],al
   1400035e8:	or     BYTE PTR [rax],al
   1400035ea:	add    BYTE PTR [rax],al
   1400035ec:	cs rex.XB push r10
   1400035ef:	push   rsp
   1400035f0:	and    al,0x58
   1400035f2:	rex.XB
   1400035f3:	rex.B
   1400035f4:	add    BYTE PTR [r8],al
   1400035f7:	add    BYTE PTR [rax],dl
   1400035f9:	xor    al,BYTE PTR [rax]
   1400035fb:	add    BYTE PTR [rax],cl
   1400035fd:	add    BYTE PTR [rax],al
   1400035ff:	add    BYTE PTR [rsi],ch
   140003601:	rex.XB push r10
   140003603:	push   rsp
   140003604:	and    al,0x58
   140003606:	rex.XB pop r10
   140003608:	add    BYTE PTR [rax],al
   14000360a:	add    BYTE PTR [rax],al
   14000360c:	sbb    BYTE PTR [rdx],dh
   14000360e:	add    BYTE PTR [rax],al
   140003610:	or     BYTE PTR [rax],al
   140003612:	add    BYTE PTR [rax],al
   140003614:	cs rex.XB push r10
   140003617:	push   rsp
   140003618:	and    al,0x58
   14000361a:	rex.WB
   14000361b:	add    BYTE PTR [r8],al
   14000361e:	add    BYTE PTR [rax],al
   140003620:	and    BYTE PTR [rdx],dh
   140003622:	add    BYTE PTR [rax],al
   140003624:	or     BYTE PTR [rax],al
   140003626:	add    BYTE PTR [rax],al
   140003628:	cs rex.XB push r10
   14000362b:	push   rsp
   14000362c:	and    al,0x58
   14000362e:	rex.WB
   14000362f:	rex.B
   140003630:	add    BYTE PTR [r8],al
   140003633:	add    BYTE PTR [rax],ch
   140003635:	xor    al,BYTE PTR [rax]
   140003637:	add    BYTE PTR [rax],cl
   140003639:	add    BYTE PTR [rax],al
   14000363b:	add    BYTE PTR [rsi],ch
   14000363d:	rex.XB push r10
   14000363f:	push   rsp
   140003640:	and    al,0x58
   140003642:	rex.WB pop r9
   140003644:	add    BYTE PTR [rax],al
   140003646:	add    BYTE PTR [rax],al
   140003648:	xor    BYTE PTR [rdx],dh
   14000364a:	add    BYTE PTR [rax],al
   14000364c:	or     BYTE PTR [rax],al
   14000364e:	add    BYTE PTR [rax],al
   140003650:	cs rex.XB push r10
   140003653:	push   rsp
   140003654:	and    al,0x58
   140003656:	rex.WB pop r10
   140003658:	add    BYTE PTR [rax],al
   14000365a:	add    BYTE PTR [rax],al
   14000365c:	cmp    BYTE PTR [rdx],dh
   14000365e:	add    BYTE PTR [rax],al
   140003660:	and    BYTE PTR [rax],al
   140003662:	add    BYTE PTR [rax],al
   140003664:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000366d:	add    BYTE PTR [rax],al
   14000366f:	add    BYTE PTR [rax+0x32],ah
   140003672:	add    BYTE PTR [rax],al
   140003674:	rol    BYTE PTR [rdx],1
   140003676:	add    BYTE PTR [rax],al
   140003678:	cs jb  0x1400036df
   14000367b:	(bad)  
   14000367c:	je     0x1400036df
   14000367e:	add    BYTE PTR [rax],al
   140003680:	xor    BYTE PTR [rip+0x2200000],dh        # 0x142203686
   140003686:	add    BYTE PTR [rax],al
   140003688:	cs jb  0x1400036ef
   14000368b:	(bad)  
   14000368c:	je     0x1400036ef
   14000368e:	and    al,0x7a
   140003690:	jp     0x14000370c
   140003692:	fs (bad) 
   140003694:	add    BYTE PTR [eax],al
   140003697:	add    BYTE PTR [rax+0x37],dl
   14000369a:	add    BYTE PTR [rax],al
   14000369c:	sub    al,0x1
   14000369e:	add    BYTE PTR [rax],al
   1400036a0:	cs js  0x140003707
   1400036a3:	(bad)  
   1400036a4:	je     0x140003707
   1400036a6:	add    BYTE PTR [rax],al
   1400036a8:	cmp    BYTE PTR [rax],0x0
   1400036ab:	add    BYTE PTR [rax+rax*1+0x692e0000],dh
   1400036b2:	fs (bad) 
   1400036b4:	je     0x140003717
   1400036b6:	and    al,0x32
   1400036b8:	add    BYTE PTR [rax],al
   1400036ba:	add    BYTE PTR [rax],al
   1400036bc:	xor    al,0x39
   1400036be:	add    BYTE PTR [rax],al
   1400036c0:	adc    al,0x0
   1400036c2:	add    BYTE PTR [rax],al
   1400036c4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400036cd:	add    BYTE PTR [rax],al
   1400036cf:	add    BYTE PTR [rax+0x39],cl
   1400036d2:	add    BYTE PTR [rax],al
   1400036d4:	lock add DWORD PTR [rax],eax
   1400036d7:	add    BYTE PTR [rsi],ch
   1400036d9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   1400036e1:	add    BYTE PTR [rax],al
   1400036e3:	add    BYTE PTR [rax],bh
   1400036e5:	cmp    eax,DWORD PTR [rax]
   1400036e7:	add    dh,cl
   1400036e9:	add    eax,DWORD PTR [rax]
   1400036eb:	add    BYTE PTR [rsi],ch
   1400036ed:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400036f5:	add    BYTE PTR [rax],al
   1400036f7:	add    BYTE PTR [rax],al
   1400036f9:	add    BYTE PTR [rax],al
   1400036fc:	and    BYTE PTR [rax],al
   1400036fe:	add    BYTE PTR [rax],al
   140003700:	cs fs (bad) 
   140003703:	je     0x140003766
   140003705:	add    BYTE PTR [rax],al
   140003707:	add    BYTE PTR [rax],ah
   140003709:	add    BYTE PTR [rax],al
   14000370c:	call   0x16e003716
   140003711:	(bad)  
   140003713:	jae    0x140003715
   140003715:	add    BYTE PTR [rax],al
   140003717:	add    BYTE PTR [rax],al
   140003719:	push   rax
   14000371a:	add    BYTE PTR [rax],al
   14000371c:	adc    al,0x1
   14000371e:	add    BYTE PTR [rax],al
   140003720:	cs jo  0x140003787
   140003723:	(bad)  
   140003724:	je     0x140003787
   140003726:	add    BYTE PTR [rax],al
   140003728:	add    BYTE PTR [rax+0x0],ah
   14000372b:	add    BYTE PTR [rax],dh
   14000372d:	add    eax,DWORD PTR [rax]
   14000372f:	add    BYTE PTR [rsi],ch
   140003731:	jb     0x1400037a6
   140003733:	jb     0x140003798
   140003735:	and    al,0x30
   140003737:	xor    DWORD PTR [rax],eax
   140003739:	add    BYTE PTR [rax],al
   14000373b:	add    BYTE PTR [rax],dh
   14000373d:	movsxd eax,DWORD PTR [rax]
   14000373f:	add    BYTE PTR [rax+0x29],cl
   140003742:	add    DWORD PTR [rax],eax
   140003744:	cs jb  0x1400037ba
   140003747:	jb     0x1400037ac
   140003749:	and    al,0x30
   14000374b:	xor    al,BYTE PTR [rax]
   14000374d:	add    BYTE PTR [rax],al
   14000374f:	add    BYTE PTR [rcx],bl
   140003751:	(bad)  
   140003752:	or     DWORD PTR [rax],eax
   140003754:	adc    eax,0x15005254
   140003759:	xor    al,0x51
   14000375b:	add    BYTE PTR [rip+0xe004c01],dl        # 0x14e008362
   140003761:	loopne 0x14000376f
   140003763:	jo     0x140003770
   140003765:	(bad)  
   140003766:	add    BYTE PTR [rax],al
   140003768:	test   al,0x23
   14000376a:	add    BYTE PTR [rax],al
   14000376c:	push   rax
   14000376d:	add    al,BYTE PTR [rax]
   14000376f:	add    BYTE PTR [rcx],al
   140003771:	sbb    cl,BYTE PTR [rax]
   140003773:	add    BYTE PTR [rdx],bl
   140003775:	or     eax,DWORD PTR fs:[rax]
   140003778:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14000377b:	add    BYTE PTR [rdx],bl
   14000377d:	push   rdx
   14000377e:	adc    esp,eax
   140003780:	adc    DWORD PTR [rax+0x10],esi
   140003783:	push   rax
   140003784:	sbb    DWORD PTR [rcx+rcx*1],ebp
   140003787:	add    BYTE PTR [rbx],bl
   140003789:	xor    al,0xbb
   14000378b:	add    BYTE PTR [rbx],bl
   14000378d:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],esi
   140003794:	or     BYTE PTR [rax+0x7],dh
   140003797:	(bad)  
   140003798:	(bad)  
   140003799:	push   rax
   14000379a:	add    BYTE PTR [rax],al
   14000379c:	test   al,0x23
   14000379e:	add    BYTE PTR [rax],al
   1400037a0:	nop
   1400037a1:	add    eax,0x1c010000
   1400037a6:	or     al,0x0
   1400037a8:	sbb    al,0x64
   1400037aa:	adc    DWORD PTR [rax],eax
   1400037ac:	sbb    al,0x54
   1400037ae:	adc    BYTE PTR [rax],al
   1400037b0:	sbb    al,0x34
   1400037b2:	ltr    WORD PTR [rdx+rsi*2]
   1400037b6:	sbb    al,dh
   1400037b8:	(bad)  
   1400037b9:	loopne 0x1400037cf
   1400037bb:	rcl    BYTE PTR [rdx],1
   1400037bd:	rcl    BYTE PTR [rax],0x70
   1400037c0:	add    DWORD PTR [rcx+rax*1],eax
   1400037c3:	add    BYTE PTR [rdx+rax*2],al
   1400037c6:	add    BYTE PTR [rax],al
   1400037c8:	add    DWORD PTR [rcx+rax*1],eax
   1400037cb:	add    BYTE PTR [rdx+riz*2],al
   1400037ce:	add    BYTE PTR [rax],al
   1400037d0:	or     DWORD PTR [rbx+rcx*1],ebx
   1400037d3:	add    BYTE PTR [rsp+rsi*2],bl
   1400037d6:	sbb    al,0x0
   1400037d8:	sbb    al,0x64
   1400037da:	sbb    eax,DWORD PTR [rax]
   1400037dc:	sbb    al,0x34
   1400037de:	sbb    al,BYTE PTR [rax]
   1400037e0:	sbb    al,0x1
   1400037e2:	(bad)  
   1400037e3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e04bd9
   1400037e9:	rol    BYTE PTR [rax],0x0
   1400037ec:	mov    dh,0x21
   1400037ee:	add    BYTE PTR [rax],al
   1400037f0:	add    DWORD PTR [rax],eax
   1400037f2:	add    BYTE PTR [rax],al
   1400037f4:	adc    BYTE PTR [rax+rax*1],bl
   1400037f7:	add    BYTE PTR [rsi],al
   1400037f9:	(bad)  
   1400037fa:	add    BYTE PTR [rax],al
   1400037fc:	data16 and al,0x0
   1400037ff:	add    BYTE PTR [rsi],al
   140003801:	(bad)  
   140003802:	add    BYTE PTR [rax],al
   140003804:	add    BYTE PTR [rax],al
   140003806:	add    BYTE PTR [rax],al
   140003808:	add    DWORD PTR [rax],eax
   14000380a:	add    BYTE PTR [rax],al
   14000380c:	or     DWORD PTR [rcx+rax*1],eax
   14000380f:	add    BYTE PTR [rdx+riz*1],al
   140003812:	add    BYTE PTR [rax],al
   140003814:	mov    dh,0x21
   140003816:	add    BYTE PTR [rax],al
   140003818:	add    DWORD PTR [rax],eax
   14000381a:	add    BYTE PTR [rax],al
   14000381c:	cmp    al,0x1f
   14000381e:	add    BYTE PTR [rax],al
   140003820:	jb     0x140003841
   140003822:	add    BYTE PTR [rax],al
   140003824:	add    DWORD PTR [rax],eax
   140003826:	add    BYTE PTR [rax],al
   140003828:	jb     0x140003849
   14000382a:	add    BYTE PTR [rax],al
   14000382c:	or     DWORD PTR [rdx],ecx
   14000382e:	add    al,0x0
   140003830:	or     dh,BYTE PTR [rsi+rax*1]
   140003833:	add    BYTE PTR [rdx],cl
   140003835:	xor    al,BYTE PTR [rsi]
   140003837:	jo     0x1400037ef
   140003839:	and    DWORD PTR [rax],eax
   14000383b:	add    BYTE PTR [rcx],al
   14000383d:	add    BYTE PTR [rax],al
   14000383f:	add    BYTE PTR [rbp+0x20],cl
   140003842:	add    BYTE PTR [rax],al
   140003844:	and    BYTE PTR [rax],0x0
   140003847:	add    BYTE PTR [rax-0x7fffffdc],dl
   14000384d:	and    BYTE PTR [rax],al
   14000384f:	add    BYTE PTR [rcx],al
   140003851:	(bad)  
   140003852:	add    al,BYTE PTR [rax]
   140003854:	(bad)  
   140003855:	xor    al,BYTE PTR [rdx]
   140003857:	push   rax
   140003858:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d3862
   14000385e:	or     DWORD PTR [rax],eax
   140003860:	or     eax,0x1500632
   140003865:	or     al,0x2
   140003867:	add    BYTE PTR [rcx+rax*1],cl
   14000386a:	adc    DWORD PTR [rax],eax
   14000386c:	add    BYTE PTR [rax],al
   14000386e:	add    BYTE PTR [rax],al
   140003870:	add    DWORD PTR [rax],eax
   140003872:	add    BYTE PTR [rax],al
   140003874:	add    DWORD PTR [rsi],eax
   140003876:	add    al,BYTE PTR [rax]
   140003878:	(bad)  
   140003879:	xor    al,BYTE PTR [rdx]
   14000387b:	xor    BYTE PTR [rax],al
   14000387d:	add    BYTE PTR [rax],al
   14000387f:	add    BYTE PTR [rax+0x39],bl
	...
   14000388a:	add    BYTE PTR [rax],al
   14000388c:	lods   al,BYTE PTR ds:[rsi]
   14000388d:	cmp    eax,DWORD PTR [rax]
   14000388f:	add    BYTE PTR [rax],dl
   140003891:	xor    BYTE PTR [rax],al
   140003893:	add    BYTE PTR [rax+0x3a],bl
	...
   14000389e:	add    BYTE PTR [rax],al
   1400038a0:	idiv   BYTE PTR [rbx]
   1400038a2:	add    BYTE PTR [rax],al
   1400038a4:	adc    BYTE PTR [rcx],dh
   1400038a6:	add    BYTE PTR [rax],al
   1400038a8:	cmp    BYTE PTR [rdx],0x0
	...
   1400038b3:	add    dh,al
   1400038b5:	cmp    al,0x0
   1400038b7:	add    BYTE PTR [rax],bh
   1400038b9:	xor    DWORD PTR [rax],eax
   1400038bb:	add    BYTE PTR [rax+0x39],cl
	...
   1400038c6:	add    BYTE PTR [rax],al
   1400038c8:	clc    
   1400038c9:	cmp    al,0x0
   1400038cb:	add    BYTE PTR [rax],al
   1400038cd:	xor    BYTE PTR [rax],al
   1400038cf:	add    BYTE PTR [rax],dl
   1400038d1:	cmp    eax,DWORD PTR [rax]
	...
   1400038db:	add    BYTE PTR [rsi+0x3d],dl
   1400038de:	add    BYTE PTR [rax],al
   1400038e0:	enter  0x31,0x0
   1400038e4:	adc    BYTE PTR [rdx],bh
	...
   1400038ee:	add    BYTE PTR [rax],al
   1400038f0:	(bad)  
   1400038f1:	cmp    eax,0x30c80000
   1400038f6:	add    BYTE PTR [rax],al
   1400038f8:	cmp    BYTE PTR [rdx],bh
	...
   140003902:	add    BYTE PTR [rax],al
   140003904:	outs   dx,BYTE PTR ds:[rsi]
   140003905:	cmp    eax,0x30f00000
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	rex.W cmp al,BYTE PTR [rax]
	...
   140003917:	add    BYTE PTR [rax+0x3d],dl
   14000391d:	xor    DWORD PTR [rax],eax
   14000391f:	add    BYTE PTR [rax],ch
   140003921:	cmp    al,BYTE PTR [rax]
	...
   14000392b:	add    BYTE PTR [rsi-0x1fffffc3],ch
   140003931:	xor    BYTE PTR [rax],al
	...
   140003947:	add    dh,ah
   140003949:	cmp    al,0x0
	...
   140003957:	add    BYTE PTR [rdx+0x3b],bl
   14000395a:	add    BYTE PTR [rax],al
   14000395c:	add    BYTE PTR [rax],al
   14000395e:	add    BYTE PTR [rax],al
   140003960:	cmp    ax,WORD PTR [rax]
   140003963:	add    BYTE PTR [rax],al
   140003965:	add    BYTE PTR [rax],al
   140003967:	add    BYTE PTR [rsi+0x3b],dh
   14000396a:	add    BYTE PTR [rax],al
   14000396c:	add    BYTE PTR [rax],al
   14000396e:	add    BYTE PTR [rax],al
   140003970:	mov    BYTE PTR [rbx],bh
   140003972:	add    BYTE PTR [rax],al
   140003974:	add    BYTE PTR [rax],al
   140003976:	add    BYTE PTR [rax],al
   140003978:	xchg   esi,eax
   140003979:	cmp    eax,DWORD PTR [rax]
   14000397b:	add    BYTE PTR [rax],al
   14000397d:	add    BYTE PTR [rax],al
   14000397f:	add    BYTE PTR [rsi+0x3e],ah
   140003982:	add    BYTE PTR [rax],al
   140003984:	add    BYTE PTR [rax],al
   140003986:	add    BYTE PTR [rax],al
   140003988:	rex.WR
   140003989:	add    BYTE PTR ds:[rax],al
   14000398c:	add    BYTE PTR [rax],al
   14000398e:	add    BYTE PTR [rax],al
   140003990:	ss add BYTE PTR ds:[rax],al
   140003994:	add    BYTE PTR [rax],al
   140003996:	add    BYTE PTR [rax],al
   140003998:	rex.WX cmp rax,QWORD PTR [rax]
   14000399b:	add    BYTE PTR [rax],al
   14000399d:	add    BYTE PTR [rax],al
   14000399f:	add    BYTE PTR [rsi],al
   1400039a1:	add    BYTE PTR ds:[rax],al
   1400039a4:	add    BYTE PTR [rax],al
   1400039a6:	add    BYTE PTR [rax],al
   1400039a8:	repnz cmp eax,0x0
   1400039ae:	add    BYTE PTR [rax],al
   1400039b0:	(bad)  
   1400039b1:	cmp    eax,0x0
   1400039b6:	add    BYTE PTR [rax],al
   1400039b8:	ret    0x3d
   1400039bb:	add    BYTE PTR [rax],al
   1400039bd:	add    BYTE PTR [rax],al
   1400039bf:	add    BYTE PTR [rdx+0x3d],bh
   1400039c5:	add    BYTE PTR [rax],al
   1400039c7:	add    BYTE PTR [rdx+0x3e],cl
   1400039cd:	add    BYTE PTR [rax],al
   1400039cf:	add    BYTE PTR [rsi+rdi*1+0x0],ah
   1400039d6:	add    BYTE PTR [rax],al
   1400039d8:	mov    eax,0x3e
   1400039dd:	add    BYTE PTR [rax],al
   1400039df:	add    ah,dl
   1400039e1:	add    BYTE PTR ds:[rax],al
   1400039e4:	add    BYTE PTR [rax],al
   1400039e6:	add    BYTE PTR [rax],al
   1400039e8:	call   0x140003a2b
   1400039ed:	add    BYTE PTR [rax],al
   1400039ef:	add    BYTE PTR [rax],ah
   1400039f1:	add    BYTE PTR ds:[rax],al
   1400039f4:	add    BYTE PTR [rax],al
   1400039f6:	add    BYTE PTR [rax],al
   1400039f8:	cmp    BYTE PTR [rbx],bh
   1400039fa:	add    BYTE PTR [rax],al
   1400039fc:	add    BYTE PTR [rax],al
   1400039fe:	add    BYTE PTR [rax],al
   140003a00:	jbe    0x140003a40
	...
   140003a0e:	add    BYTE PTR [rax],al
   140003a10:	(bad)  
   140003a11:	add    BYTE PTR [rax],al
   140003a13:	add    BYTE PTR [rax],al
   140003a15:	add    BYTE PTR [rax],al
   140003a17:	add    BYTE PTR [rdx],0x0
   140003a1a:	add    BYTE PTR [rax],al
   140003a1c:	add    BYTE PTR [rax],al
   140003a1e:	add    BYTE PTR [rax+0x0],al
   140003a24:	add    BYTE PTR [rax],al
   140003a26:	add    BYTE PTR [rax],al
   140003a28:	cwde   
   140003a29:	cmp    eax,0x0
	...
   140003a36:	add    BYTE PTR [rax],al
   140003a38:	sahf   
   140003a39:	add    BYTE PTR [rax],al
   140003a3b:	add    BYTE PTR [rax],al
   140003a3d:	add    BYTE PTR [rax],al
   140003a3f:	add    BYTE PTR [rax],0x0
   140003a42:	add    BYTE PTR [rax],al
   140003a44:	add    BYTE PTR [rax],al
   140003a46:	add    BYTE PTR [rax],al
   140003a48:	jp     0x140003a87
	...
   140003a56:	add    BYTE PTR [rax],al
   140003a58:	enter  0x3b,0x0
   140003a5c:	add    BYTE PTR [rax],al
   140003a5e:	add    BYTE PTR [rax],al
   140003a60:	mov    edx,0x3b
   140003a65:	add    BYTE PTR [rax],al
   140003a67:	add    dl,ch
   140003a69:	cmp    eax,DWORD PTR [rax]
   140003a6b:	add    BYTE PTR [rax],al
   140003a6d:	add    BYTE PTR [rax],al
   140003a6f:	add    dh,dl
   140003a71:	cmp    eax,DWORD PTR [rax]
	...
   140003a7f:	add    BYTE PTR [rdx+0x3c],al
   140003a82:	add    BYTE PTR [rax],al
   140003a84:	add    BYTE PTR [rax],al
   140003a86:	add    BYTE PTR [rax],al
   140003a88:	xor    BYTE PTR [rax+rax*1],bh
   140003a8b:	add    BYTE PTR [rax],al
   140003a8d:	add    BYTE PTR [rax],al
   140003a8f:	add    BYTE PTR [rsp+rdi*1+0x0],dl
   140003a93:	add    BYTE PTR [rax],al
   140003a95:	add    BYTE PTR [rax],al
   140003a97:	add    BYTE PTR [rsp+rdi*1+0x0],bl
   140003a9b:	add    BYTE PTR [rax],al
   140003a9d:	add    BYTE PTR [rax],al
   140003a9f:	add    BYTE PTR [rsp+rdi*1+0x0],ah
   140003aa3:	add    BYTE PTR [rax],al
   140003aa5:	add    BYTE PTR [rax],al
   140003aa7:	add    BYTE PTR [rsi+0x3c],ch
   140003aaa:	add    BYTE PTR [rax],al
   140003aac:	add    BYTE PTR [rax],al
   140003aae:	add    BYTE PTR [rax],al
   140003ab0:	(bad)  
   140003ab1:	cmp    al,0x0
   140003ab3:	add    BYTE PTR [rax],al
   140003ab5:	add    BYTE PTR [rax],al
   140003ab7:	add    BYTE PTR [rsi+0x3c],cl
   140003abd:	add    BYTE PTR [rax],al
   140003abf:	add    BYTE PTR [rdx],ah
   140003ac1:	cmp    al,0x0
   140003ac3:	add    BYTE PTR [rax],al
   140003ac5:	add    BYTE PTR [rax],al
   140003ac7:	add    BYTE PTR [rsp+rdi*1],dl
   140003aca:	add    BYTE PTR [rax],al
   140003acc:	add    BYTE PTR [rax],al
   140003ace:	add    BYTE PTR [rax],al
   140003ad0:	or     al,0x3c
   140003ad2:	add    BYTE PTR [rax],al
   140003ad4:	add    BYTE PTR [rax],al
   140003ad6:	add    BYTE PTR [rax],al
   140003ad8:	add    bh,BYTE PTR [rax+rax*1]
   140003adb:	add    BYTE PTR [rax],al
   140003add:	add    BYTE PTR [rax],al
   140003adf:	add    dl,dl
   140003ae1:	cmp    al,0x0
   140003ae3:	add    BYTE PTR [rax],al
   140003ae5:	add    BYTE PTR [rax],al
   140003ae7:	add    BYTE PTR [rdx+0x3c],bh
   140003aed:	add    BYTE PTR [rax],al
   140003aef:	add    BYTE PTR [rax+0x3c],dh
   140003af5:	add    BYTE PTR [rax],al
   140003af7:	add    BYTE PTR [rsi+0x3c],ah
   140003afd:	add    BYTE PTR [rax],al
   140003aff:	add    ah,bh
   140003b01:	add    BYTE PTR ds:[rax],al
	...
   140003b10:	sub    al,0x3d
   140003b12:	add    BYTE PTR [rax],al
   140003b14:	add    BYTE PTR [rax],al
   140003b16:	add    BYTE PTR [rax],al
   140003b18:	sbb    bh,BYTE PTR [rip+0x0]        # 0x140003b1e
   140003b1e:	add    BYTE PTR [rax],al
   140003b20:	(bad)  
   140003b21:	cmp    eax,0x0
   140003b26:	add    BYTE PTR [rax],al
   140003b28:	ds cmp eax,0x0
	...
   140003b36:	add    BYTE PTR [rax],al
   140003b38:	rex.WR add al,0x52
   140003b3b:	(bad)  
   140003b3c:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140003b43:	jo     0x140003bb9
   140003b45:	imul   ebp,DWORD PTR [rdi+0x6e],0x2570000
   140003b4c:	rex.RXB
   140003b4d:	gs je  0x140003b9c
   140003b50:	(bad)  
   140003b51:	jae    0x140003bc7
   140003b53:	rex.RB jb 0x140003bc8
   140003b56:	outs   dx,DWORD PTR ds:[rsi]
   140003b57:	jb     0x140003b59
   140003b59:	add    BYTE PTR [rcx+0x636f4c03],bh
   140003b5f:	(bad)  
   140003b60:	ins    BYTE PTR es:[rdi],dx
   140003b61:	rex.RX jb 0x140003bc9
   140003b64:	add    BYTE PTR gs:[rdi+0x616f4c03],ch
   140003b6b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140003b74:	add    BYTE PTR [rax],al
   140003b76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140003b77:	add    al,BYTE PTR [rdi+0x65]
   140003b7a:	je     0x140003bcc
   140003b7c:	jb     0x140003bed
   140003b7e:	movsxd eax,DWORD PTR [rcx+0x64]
   140003b81:	fs jb  0x140003be9
   140003b84:	jae    0x140003bf9
   140003b86:	add    BYTE PTR [rax],al
   140003b88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003b89:	add    DWORD PTR [rsi+0x72],eax
   140003b8c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140003b96:	add    r9d,DWORD PTR [rax+0x65]
   140003b9a:	(bad)  
   140003b9b:	jo     0x140003bf0
   140003b9d:	gs je  0x140003be9
   140003ba0:	outs   dx,BYTE PTR ds:[rsi]
   140003ba1:	outs   dx,WORD PTR ds:[rsi]
   140003ba3:	jb     0x140003c12
   140003ba5:	(bad)  
   140003ba6:	je     0x140003c11
   140003ba8:	outs   dx,DWORD PTR ds:[rsi]
   140003ba9:	outs   dx,BYTE PTR ds:[rsi]
   140003baa:	add    BYTE PTR [rax],al
   140003bac:	rex.WXB
   140003bad:	rex.RB push r10
   140003baf:	rex.WRX
   140003bb0:	rex.RB
   140003bb1:	xor    r14,QWORD PTR [rdx]
   140003bb4:	cs fs ins BYTE PTR es:[rdi],dx
   140003bb7:	ins    BYTE PTR es:[rdi],dx
   140003bb8:	add    BYTE PTR [rax],al
   140003bba:	add    cl,BYTE PTR [r15+r13*2+0x61]
   140003bbf:	fs push rbx
   140003bc1:	je     0x140003c35
   140003bc3:	imul   ebp,DWORD PTR [rsi+0x67],0x2600057
   140003bca:	rex.WRB
   140003bcb:	gs jae 0x140003c41
   140003bce:	(bad)  
   140003bcf:	rex.X outs dx,DWORD PTR gs:[esi]
   140003bd3:	js     0x140003c2c
   140003bd5:	add    BYTE PTR [rbx],bh
   140003bd7:	add    DWORD PTR [rdi+0x65],eax
   140003bda:	je     0x140003c20
   140003bdc:	gs jae 0x140003c4a
   140003bdf:	je     0x140003c50
   140003be1:	jo     0x140003c3a
   140003be3:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140003bea:	and    al,BYTE PTR [rdx]
   140003bec:	rex.WB jae 0x140003c46
   140003bef:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140003bf6:	push   rbp
   140003bf7:	push   rbx
   140003bf8:	rex.RB push r10
   140003bfa:	xor    esi,DWORD PTR [rdx]
   140003bfc:	cs fs ins BYTE PTR es:[rdi],dx
   140003bff:	ins    BYTE PTR es:[rdi],dx
   140003c00:	add    BYTE PTR [rax],al
   140003c02:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b4739f7f
   140003c08:	outs   dx,DWORD PTR ds:[rsi]
   140003c09:	jne    0x140003c77
   140003c0b:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140003c0f:	jb     0x140003c76
   140003c11:	add    BYTE PTR gs:[rax],al
   140003c14:	push   rbp
   140003c15:	add    BYTE PTR [rdi+0x58],bl
   140003c18:	movsxd esi,DWORD PTR [rax+0x74]
   140003c1b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140003c24:	pop    rdi
   140003c25:	(bad)  
   140003c26:	ins    DWORD PTR es:[rdi],dx
   140003c27:	jae    0x140003c90
   140003c29:	pop    rdi
   140003c2a:	gs js  0x140003c96
   140003c2d:	je     0x140003c2f
   140003c2f:	add    BYTE PTR [rbp+0x775f5f00],bl
   140003c35:	addr32 gs je 0x140003ca6
   140003c39:	(bad)  
   140003c3a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140003c41:	add    BYTE PTR [rsi+0x735f5f00],cl
   140003c47:	gs je  0x140003ca9
   140003c4a:	(bad)  
   140003c4b:	jo     0x140003cbd
   140003c4d:	pop    rdi
   140003c4e:	je     0x140003cc9
   140003c50:	jo     0x140003cb7
   140003c52:	add    BYTE PTR [rax],al
   140003c54:	xor    al,BYTE PTR [riz*2+0x746978]
   140003c5b:	add    BYTE PTR [rsi],cl
   140003c5d:	add    DWORD PTR [rdi+0x65],ebx
   140003c60:	js     0x140003ccb
   140003c62:	je     0x140003c64
   140003c64:	rol    DWORD PTR [rax],0x5f
   140003c67:	movsxd esp,DWORD PTR [rbp+0x78]
   140003c6a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140003c72:	jae    0x140003cd9
   140003c74:	je     0x140003ceb
   140003c76:	jae    0x140003cdd
   140003c78:	jb     0x140003ce7
   140003c7a:	(bad)  
   140003c7b:	je     0x140003ce5
   140003c7d:	gs jb  0x140003cf2
   140003c80:	add    BYTE PTR [rax],al
   140003c82:	jge    0x140003c85
   140003c84:	pop    rdi
   140003c85:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140003c8c:	ins    DWORD PTR es:[rdi],dx
   140003c8d:	add    BYTE PTR [rdi+0x0],dl
   140003c90:	pop    rdi
   140003c91:	pop    rdi
   140003c92:	rex.XB pop r15
   140003c94:	jae    0x140003d06
   140003c96:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140003c9a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140003ca1:	ins    BYTE PTR es:[rdi],dx
   140003ca2:	gs jb  0x140003ca5
   140003ca5:	add    BYTE PTR [rdx+0x63775f03],al
   140003cab:	ins    DWORD PTR es:[rdi],dx
   140003cac:	fs ins BYTE PTR es:[rdi],dx
   140003cae:	outs   dx,BYTE PTR ds:[rsi]
   140003caf:	add    BYTE PTR [rdi],ah
   140003cb1:	add    DWORD PTR [rdi+0x66],ebx
   140003cb4:	ins    DWORD PTR es:[rdi],dx
   140003cb5:	outs   dx,DWORD PTR ds:[rsi]
   140003cb6:	fs add BYTE PTR gs:[rax],al
   140003cba:	rol    BYTE PTR [rax],cl
   140003cbc:	pop    rdi
   140003cbd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140003cc0:	ins    DWORD PTR es:[rdi],dx
   140003cc1:	outs   dx,DWORD PTR ds:[rsi]
   140003cc2:	fs add BYTE PTR gs:[rax],al
   140003cc6:	ins    DWORD PTR es:[rdi],dx
   140003cc7:	jae    0x140003d3f
   140003cc9:	movsxd esi,DWORD PTR [rdx+0x74]
   140003ccc:	cs fs ins BYTE PTR es:[rdi],dx
   140003ccf:	ins    BYTE PTR es:[rdi],dx
   140003cd0:	add    BYTE PTR [rax],al
   140003cd2:	(bad)  
   140003cd3:	add    BYTE PTR [rdi],bh
   140003cd5:	je     0x140003d3c
   140003cd7:	jb     0x140003d46
   140003cd9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140003ce0:	pop    rcx
   140003ce1:	pop    r8
   140003ce3:	pop    rax
   140003ce4:	pop    rdx
   140003ce5:	add    BYTE PTR [rsi+0x6f725000],al
   140003ceb:	jo     0x140003d52
   140003ced:	jb     0x140003d63
   140003cef:	jns    0x140003d44
   140003cf1:	push   0x57746565
   140003cf6:	add    BYTE PTR [rax],al
   140003cf8:	rex.XB
   140003cf9:	rex.WRXB
   140003cfa:	rex.WRB
   140003cfb:	rex.XB push r12
   140003cfd:	xor    r14,QWORD PTR [rdx]
   140003d00:	cs fs ins BYTE PTR es:[rdi],dx
   140003d03:	ins    BYTE PTR es:[rdi],dx
   140003d04:	add    BYTE PTR [rax],al
   140003d06:	sub    eax,DWORD PTR [rax]
   140003d08:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140003d0a:	rex.XB jb 0x140003d72
   140003d0d:	(bad)  
   140003d0e:	je     0x140003d75
   140003d10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003d12:	jae    0x140003d88
   140003d14:	(bad)  
   140003d15:	outs   dx,BYTE PTR ds:[rsi]
   140003d16:	movsxd esp,DWORD PTR [rbp+0x0]
   140003d19:	add    BYTE PTR [rcx+0x0],ah
   140003d1c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140003d1e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003d20:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140003d28:	rex.RB js 0x140003d2b
   140003d2b:	add    BYTE PTR [rax+0x556f4300],dl
   140003d31:	outs   dx,BYTE PTR ds:[rsi]
   140003d32:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140003d39:	imul   edi,DWORD PTR [rdx+0x65],0xb90000
   140003d40:	rex.RX jb 0x140003da8
   140003d43:	gs push rax
   140003d45:	jb     0x140003db6
   140003d47:	jo     0x140003d9f
   140003d49:	(bad)  
   140003d4a:	jb     0x140003db5
   140003d4c:	(bad)  
   140003d4d:	outs   dx,BYTE PTR ds:[rsi]
   140003d4e:	je     0x140003d91
   140003d50:	jb     0x140003dc4
   140003d52:	(bad)  
   140003d53:	jns    0x140003d55
   140003d55:	add    BYTE PTR [rdi+0x6c],ch
   140003d58:	xor    esi,DWORD PTR gs:[rdx]
   140003d5b:	cs fs ins BYTE PTR es:[rdi],dx
   140003d5e:	ins    BYTE PTR es:[rdi],dx
   140003d5f:	add    BYTE PTR [rdi+0x4c],cl
   140003d62:	rex.RB
   140003d63:	push   r13
   140003d65:	push   rsp
   140003d66:	xor    esi,DWORD PTR [rdx]
   140003d68:	cs fs ins BYTE PTR es:[rdi],dx
   140003d6b:	ins    BYTE PTR es:[rdi],dx
   140003d6c:	add    BYTE PTR [rax],al
   140003d6e:	push   rbx
   140003d6f:	rex.W
   140003d70:	rex.WR push rdi
   140003d72:	push   r8
   140003d74:	rex.WB
   140003d75:	cs fs ins BYTE PTR es:[rdi],dx
   140003d78:	ins    BYTE PTR es:[rdi],dx
   140003d79:	add    BYTE PTR [rax+rax*1],dl
   140003d7c:	push   rbx
   140003d7d:	je     0x140003de8
   140003d7f:	rex.XB jb 0x140003de7
   140003d82:	(bad)  
   140003d83:	je     0x140003dea
   140003d85:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003d87:	jae    0x140003dfd
   140003d89:	(bad)  
   140003d8a:	outs   dx,BYTE PTR ds:[rsi]
   140003d8b:	movsxd esp,DWORD PTR [rbp+0x57]
   140003d8e:	add    BYTE PTR [rax],al
   140003d90:	push   rbx
   140003d91:	push   rsp
   140003d92:	rex.WB
   140003d93:	cs fs ins BYTE PTR es:[rdi],dx
   140003d96:	ins    BYTE PTR es:[rdi],dx
   140003d97:	add    BYTE PTR [rdi],al
   140003d99:	add    BYTE PTR [rbx+0x6f],al
   140003d9c:	ins    DWORD PTR es:[rdi],dx
   140003d9d:	ins    DWORD PTR es:[rdi],dx
   140003d9e:	(bad)  
   140003d9f:	outs   dx,BYTE PTR ds:[rsi]
   140003da0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140003da9:	addr32 jbe 0x140003e03
   140003dac:	add    BYTE PTR [rax],al
   140003dae:	push   rbx
   140003daf:	rex.W
   140003db0:	rex.RB
   140003db1:	rex.WR
   140003db2:	xor    r14,QWORD PTR [rdx]
   140003db5:	cs fs ins BYTE PTR es:[rdi],dx
   140003db8:	ins    BYTE PTR es:[rdi],dx
   140003db9:	add    BYTE PTR [rbp+0x5],ch
   140003dbc:	push   rbx
   140003dbd:	ins    BYTE PTR es:[rdi],dx
   140003dbe:	gs gs jo 0x140003dc2
   140003dc2:	mov    DWORD PTR [rdx],0x53746547
   140003dc8:	je     0x140003e2b
   140003dca:	jb     0x140003e40
   140003dcc:	jne    0x140003e3e
   140003dce:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003dd0:	outs   dx,WORD PTR ds:[rsi]
   140003dd2:	push   rdi
   140003dd3:	add    BYTE PTR [rsi+0x5],bl
   140003dd6:	push   rbx
   140003dd7:	gs je  0x140003e2f
   140003dda:	outs   dx,BYTE PTR ds:[rsi]
   140003ddb:	push   0x6c646e61
   140003de0:	gs fs rex.RB js 0x140003e48
   140003de5:	gs jo  0x140003e5c
   140003de8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003def:	gs jb  0x140003df2
   140003df2:	outs   dx,BYTE PTR ds:[rsi]
   140003df3:	add    al,BYTE PTR [rdi+0x65]
   140003df6:	je     0x140003e45
   140003df8:	outs   dx,DWORD PTR ds:[rsi]
   140003df9:	fs jne 0x140003e68
   140003dfc:	gs rex.W (bad) 
   140003dff:	outs   dx,BYTE PTR ds:[rsi]
   140003e00:	fs ins BYTE PTR es:[rdi],dx
   140003e02:	gs push rdi
   140003e04:	add    BYTE PTR [rax],al
   140003e06:	ss add al,0x51
   140003e09:	jne    0x140003e70
   140003e0b:	jb     0x140003e86
   140003e0d:	push   rax
   140003e0e:	gs jb  0x140003e77
   140003e11:	outs   dx,DWORD PTR ds:[rsi]
   140003e12:	jb     0x140003e81
   140003e14:	(bad)  
   140003e15:	outs   dx,BYTE PTR ds:[rsi]
   140003e16:	movsxd esp,DWORD PTR [rbp+0x43]
   140003e19:	outs   dx,DWORD PTR ds:[rsi]
   140003e1a:	jne    0x140003e8a
   140003e1c:	je     0x140003e83
   140003e1e:	jb     0x140003e20
   140003e20:	adc    DWORD PTR [rdx],eax
   140003e22:	rex.RXB
   140003e23:	gs je  0x140003e69
   140003e26:	jne    0x140003e9a
   140003e28:	jb     0x140003e8f
   140003e2a:	outs   dx,BYTE PTR ds:[rsi]
   140003e2b:	je     0x140003e7d
   140003e2d:	jb     0x140003e9e
   140003e2f:	movsxd esp,DWORD PTR [rbp+0x73]
   140003e32:	jae    0x140003e7d
   140003e34:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465853d
   140003e3b:	rex.XB jne 0x140003eb0
   140003e3e:	jb     0x140003ea5
   140003e40:	outs   dx,BYTE PTR ds:[rsi]
   140003e41:	je     0x140003e97
   140003e43:	push   0x64616572
   140003e48:	rex.WB
   140003e49:	add    BYTE PTR fs:[rax],al
   140003e4c:	loopne 0x140003e50
   140003e4e:	rex.RXB
   140003e4f:	gs je  0x140003ea5
   140003e52:	jns    0x140003ec7
   140003e54:	je     0x140003ebb
   140003e56:	ins    DWORD PTR es:[rdi],dx
   140003e57:	push   rsp
   140003e58:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140003e5f:	ins    BYTE PTR es:[rdi],dx
   140003e60:	gs push rsp
   140003e62:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140003e69:	gs je  0x140003ec0
   140003e6c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140003e73:	je     0x140003e75
   140003e75:	add    BYTE PTR [rdi+0x6c745204],dh
   140003e7b:	rex.XB (bad) 
   140003e7d:	jo     0x140003ef3
   140003e7f:	jne    0x140003ef3
   140003e81:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140003e84:	outs   dx,BYTE PTR ds:[rsi]
   140003e85:	je     0x140003eec
   140003e87:	js     0x140003efd
   140003e89:	add    BYTE PTR [rsi+0x6c745204],bh
   140003e8f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003e91:	outs   dx,DWORD PTR ds:[rsi]
   140003e92:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140003e96:	jne    0x140003f06
   140003e98:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140003e9c:	outs   dx,BYTE PTR ds:[rsi]
   140003e9d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140003e9f:	je     0x140003f13
   140003ea1:	jns    0x140003ea3
   140003ea3:	add    ch,al
   140003ea5:	add    al,0x52
   140003ea7:	je     0x140003f15
   140003ea9:	push   rsi
   140003eaa:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140003eb1:	outs   dx,BYTE PTR ds:[rsi]
   140003eb2:	ja     0x140003f1d
   140003eb4:	outs   dx,BYTE PTR ds:[rsi]
   140003eb5:	add    BYTE PTR fs:[rax],al
   140003eb8:	sahf   
   140003eb9:	add    eax,0x61686e55
   140003ebe:	outs   dx,BYTE PTR ds:[rsi]
   140003ebf:	fs ins BYTE PTR es:[rdi],dx
   140003ec1:	gs fs rex.RB js 0x140003f29
   140003ec6:	gs jo  0x140003f3d
   140003ec9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003ed0:	gs jb  0x140003ed3
   140003ed3:	add    BYTE PTR [rax],dl
   140003ed5:	add    al,BYTE PTR [rdi+0x65]
   140003ed8:	je     0x140003f1d
   140003eda:	jne    0x140003f4e
   140003edc:	jb     0x140003f43
   140003ede:	outs   dx,BYTE PTR ds:[rsi]
   140003edf:	je     0x140003f31
   140003ee1:	jb     0x140003f52
   140003ee3:	movsxd esp,DWORD PTR [rbp+0x73]
   140003ee6:	jae    0x140003ee8
   140003ee8:	jl     0x140003eef
   140003eea:	push   rsp
   140003eeb:	gs jb  0x140003f5b
   140003eee:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140003ef5:	outs   dx,DWORD PTR ds:[rsi]
   140003ef6:	movsxd esp,DWORD PTR [rbp+0x73]
   140003ef9:	jae    0x140003efb
   140003efb:	add    BYTE PTR [rsi+0x6d656d04],dl
   140003f01:	jae    0x140003f68
   140003f03:	je     0x140003f05
	...

Disassembly of section .data:

0000000140004000 <.data>:
   140004000:	add    DWORD PTR [rax],eax
   140004002:	add    BYTE PTR [rax],al
   140004004:	add    BYTE PTR [rax],al
   140004006:	add    BYTE PTR [rax],al
   140004008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000400e:	add    BYTE PTR [rax],al
   140004010:	int    0x5d
   140004012:	and    dl,dl
   140004014:	data16 (bad) 
   140004016:	(bad)  
   140004017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140005000 <.pdata>:
   140005000:	or     BYTE PTR [rax],dl
   140005002:	add    BYTE PTR [rax],al
   140005004:	adc    DWORD PTR [eax],eax
   140005007:	add    BYTE PTR [rax+0x37],dl
   14000500a:	add    BYTE PTR [rax],al
   14000500c:	jo     0x14000501f
   14000500e:	add    BYTE PTR [rax],al
   140005010:	std    
   140005011:	adc    al,BYTE PTR [rax]
   140005013:	add    BYTE PTR [rax+0x37],dh
   140005016:	add    BYTE PTR [rax],al
   140005018:	add    al,0x13
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	mov    DWORD PTR [rdi],edx
   14000501e:	add    BYTE PTR [rax],al
   140005020:	test   BYTE PTR [rdi],dh
   140005022:	add    BYTE PTR [rax],al
   140005024:	nop
   140005025:	(bad)  
   140005026:	add    BYTE PTR [rax],al
   140005028:	sbb    al,BYTE PTR gs:[rax]
   14000502b:	add    BYTE PTR [rdi+rsi*1+0x1a840000],ah
   140005032:	add    BYTE PTR [rax],al
   140005034:	xchg   ebx,eax
   140005035:	sbb    al,BYTE PTR [rax]
   140005037:	add    al,al
   140005039:	(bad)  
   14000503a:	add    BYTE PTR [rax],al
   14000503c:	mov    al,0x1a
   14000503e:	add    BYTE PTR [rax],al
   140005040:	jg     0x14000505d
   140005042:	add    BYTE PTR [rax],al
   140005044:	shl    BYTE PTR [rdi],0x0
   140005047:	add    BYTE PTR [rax-0x26ffffe5],dl
   14000504d:	sbb    eax,DWORD PTR [rax]
   14000504f:	add    al,cl
   140005051:	(bad)  
   140005052:	add    BYTE PTR [rax],al
   140005054:	loopne 0x140005071
   140005056:	add    BYTE PTR [rax],al
   140005058:	push   rcx
   140005059:	(bad)  
   14000505a:	add    BYTE PTR [rax],al
   14000505c:	shl    BYTE PTR [rdi],1
   14000505e:	add    BYTE PTR [rax],al
   140005060:	(bad)  
   140005061:	(bad)  
   140005062:	add    BYTE PTR [rax],al
   140005064:	jb     0x140005084
   140005066:	add    BYTE PTR [rax],al
   140005068:	shl    BYTE PTR [rdi],0x0
   14000506b:	add    BYTE PTR [rax-0x51ffffe2],dl
   140005071:	(bad)  
   140005072:	add    BYTE PTR [rax],al
   140005074:	or     BYTE PTR [rax],bh
   140005076:	add    BYTE PTR [rax],al
   140005078:	rcr    BYTE PTR [rsi],0x0
   14000507b:	add    cl,bh
   14000507d:	(bad)  
   14000507e:	add    BYTE PTR [rax],al
   140005080:	shl    BYTE PTR [rdi],0x0
   140005083:	add    BYTE PTR [rax],al
   140005085:	(bad)  
   140005086:	add    BYTE PTR [rax],al
   140005088:	sbb    BYTE PTR [rdi],bl
   14000508a:	add    BYTE PTR [rax],al
   14000508c:	shl    BYTE PTR [rdi],0x0
   14000508f:	add    BYTE PTR [rdi+rbx*1],ch
   140005092:	add    BYTE PTR [rax],al
   140005094:	sbb    BYTE PTR [rdi],0x0
   140005097:	add    BYTE PTR [rax+rdi*1],cl
   14000509a:	add    BYTE PTR [rax],al
   14000509c:	mov    BYTE PTR [rdi],bl
   14000509e:	add    BYTE PTR [rax],al
   1400050a0:	int    0x1f
   1400050a2:	add    BYTE PTR [rax],al
   1400050a4:	je     0x1400050de
   1400050a6:	add    BYTE PTR [rax],al
   1400050a8:	and    BYTE PTR [rax],al
   1400050ab:	add    BYTE PTR [rbp+0x2c000020],cl
   1400050b1:	cmp    BYTE PTR [rax],al
   1400050b3:	add    ah,dl
   1400050b5:	and    BYTE PTR [rax],al
   1400050b7:	add    BYTE PTR [rcx+riz*1+0x38580000],ah
   1400050be:	add    BYTE PTR [rax],al
   1400050c0:	fsub   QWORD PTR [rcx]
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	adc    BYTE PTR [rdx],ah
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	je     0x140005102
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	and    BYTE PTR [rdx],ah
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	xchg   ecx,eax
   1400050d1:	and    eax,DWORD PTR [rax]
   1400050d3:	add    BYTE PTR [rax+rdi*1+0x0],ah
   1400050d7:	add    BYTE PTR [rax-0x3affffdd],ch
   1400050dd:	and    eax,DWORD PTR [rax]
   1400050df:	add    al,al
   1400050e1:	(bad)  
   1400050e2:	add    BYTE PTR [rax],al
   1400050e4:	int3   
   1400050e5:	and    eax,DWORD PTR [rax]
   1400050e7:	add    BYTE PTR [rdi],ch
   1400050e9:	and    al,0x0
   1400050eb:	add    BYTE PTR [rax+rdi*1+0x0],dh
   1400050ef:	add    BYTE PTR [rax+0x24],dl
   1400050f2:	add    BYTE PTR [rax],al
   1400050f4:	push   rdx
   1400050f5:	and    al,0x0
   1400050f7:	add    BYTE PTR [rax+0x38],dh
   1400050fa:	add    BYTE PTR [rax],al
   1400050fc:	data16 and al,0x0
   1400050ff:	add    BYTE PTR [rsp+0x38500000],al
   140005106:	add    BYTE PTR [rax],al
   140005108:	nop
   140005109:	and    al,0x0
   14000510b:	add    BYTE PTR [rax+0x50000024],dh
   140005111:	cmp    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

0000000140006000 <.rsrc>:
	...
   14000600c:	add    DWORD PTR [rax],eax
   14000600e:	add    al,0x0
   140006010:	sub    BYTE PTR [rbx],al
   140006012:	add    BYTE PTR [rax-0x7fffffc8],al
   140006018:	add    eax,DWORD PTR [rax]
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	push   rax
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	or     BYTE PTR [rsi],0x0
   140006022:	add    BYTE PTR [rax],al
   140006024:	mov    al,0x0
   140006026:	add    BYTE PTR [rax+0x10],al
   14000602c:	enter  0x0,0x80
   140006030:	sbb    BYTE PTR [rax],al
   140006032:	add    BYTE PTR [rax],al
   140006034:	loopne 0x140006036
   140006036:	add    BYTE PTR [rax+0x0],al
	...
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    DWORD PTR [rax],eax
   140006048:	add    DWORD PTR [rax],eax
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	clc    
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax],0x0
	...
   14000605e:	or     al,BYTE PTR [rax]
   140006060:	add    DWORD PTR [rax],eax
   140006062:	add    BYTE PTR [rax],al
   140006064:	adc    BYTE PTR [rcx],al
   140006066:	add    BYTE PTR [rax+0x2],al
   14000606c:	sub    BYTE PTR [rcx],al
   14000606e:	add    BYTE PTR [rax+0x3],al
   140006074:	rex add DWORD PTR [rax],eax
   140006077:	add    BYTE PTR [rax+rax*1],0x0
   14000607b:	add    BYTE PTR [rax+0x1],bl
   14000607e:	add    BYTE PTR [rax+0x5],al
   140006084:	jo     0x140006087
   140006086:	add    BYTE PTR [rax+0x6],al
   14000608c:	mov    BYTE PTR [rcx],al
   14000608e:	add    BYTE PTR [rax+0x7],al
   140006094:	movabs al,ds:0xb800000008800001
   14000609d:	add    DWORD PTR [rax],eax
   14000609f:	or     BYTE PTR [rcx],0x0
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	rol    BYTE PTR [rcx],1
   1400060a6:	add    BYTE PTR [rax+0xa],al
   1400060ac:	call   0x1408060b2
	...
   1400060bd:	add    BYTE PTR [rcx],al
   1400060bf:	add    BYTE PTR [rsi+0x0],ah
   1400060c2:	add    BYTE PTR [rax],al
   1400060c4:	add    BYTE PTR [rdx],al
   1400060c6:	add    BYTE PTR [rax+0x0],al
	...
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    DWORD PTR [rax],eax
   1400060d8:	add    DWORD PTR [rax],eax
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	sbb    BYTE PTR [rdx],al
   1400060de:	add    BYTE PTR [rax+0x0],al
	...
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    DWORD PTR [rax],eax
   1400060f0:	add    DWORD PTR [rax],eax
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	xor    BYTE PTR [rdx],al
   1400060f6:	add    BYTE PTR [rax+0x0],al
	...
   140006104:	add    BYTE PTR [rax],al
   140006106:	add    DWORD PTR [rax],eax
   140006108:	or     DWORD PTR [rax+rax*1],eax
   14000610b:	add    BYTE PTR [rax+0x2],cl
	...
   14000611e:	add    DWORD PTR [rax],eax
   140006120:	or     DWORD PTR [rax+rax*1],eax
   140006123:	add    BYTE PTR [rax+0x2],bl
	...
   140006136:	add    DWORD PTR [rax],eax
   140006138:	or     DWORD PTR [rax+rax*1],eax
   14000613b:	add    BYTE PTR [rax+0x2],ch
	...
   14000614e:	add    DWORD PTR [rax],eax
   140006150:	or     DWORD PTR [rax+rax*1],eax
   140006153:	add    BYTE PTR [rax+0x2],bh
	...
   140006166:	add    DWORD PTR [rax],eax
   140006168:	or     DWORD PTR [rax+rax*1],eax
   14000616b:	add    BYTE PTR [rax+0x2],cl
	...
   14000617d:	add    BYTE PTR [rcx],al
   14000617f:	add    BYTE PTR [rcx],cl
   140006181:	add    al,0x0
   140006183:	add    BYTE PTR [rax+0x2],bl
	...
   140006195:	add    BYTE PTR [rcx],al
   140006197:	add    BYTE PTR [rcx],cl
   140006199:	add    al,0x0
   14000619b:	add    BYTE PTR [rax+0x2],ch
	...
   1400061ad:	add    BYTE PTR [rcx],al
   1400061af:	add    BYTE PTR [rcx],cl
   1400061b1:	add    al,0x0
   1400061b3:	add    BYTE PTR [rax+0x2],bh
	...
   1400061c5:	add    BYTE PTR [rcx],al
   1400061c7:	add    BYTE PTR [rcx],cl
   1400061c9:	add    al,0x0
   1400061cb:	add    al,cl
   1400061cd:	add    al,BYTE PTR [rax]
	...
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rcx],al
   1400061df:	add    BYTE PTR [rcx],cl
   1400061e1:	add    al,0x0
   1400061e3:	add    al,bl
   1400061e5:	add    al,BYTE PTR [rax]
	...
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rcx],al
   1400061f7:	add    BYTE PTR [rcx],cl
   1400061f9:	add    al,0x0
   1400061fb:	add    al,ch
   1400061fd:	add    al,BYTE PTR [rax]
	...
   14000620b:	add    BYTE PTR [rax],al
   14000620d:	add    BYTE PTR [rcx],al
   14000620f:	add    BYTE PTR [rcx],cl
   140006211:	add    al,0x0
   140006213:	add    al,bh
   140006215:	add    al,BYTE PTR [rax]
	...
   140006223:	add    BYTE PTR [rax],al
   140006225:	add    BYTE PTR [rcx],al
   140006227:	add    BYTE PTR [rcx],cl
   140006229:	add    al,0x0
   14000622b:	add    BYTE PTR [rax],cl
   14000622d:	add    eax,DWORD PTR [rax]
	...
   14000623b:	add    BYTE PTR [rax],al
   14000623d:	add    BYTE PTR [rcx],al
   14000623f:	add    BYTE PTR [rcx],cl
   140006241:	add    al,0x0
   140006243:	add    BYTE PTR [rax],bl
   140006245:	add    eax,DWORD PTR [rax]
   140006247:	add    BYTE PTR [rax-0x2ffffe75],ch
	...
   140006259:	push   0x6680000
	...
   140006266:	add    BYTE PTR [rax],al
   140006268:	push   0xffffffffe800006e
   14000626d:	add    al,BYTE PTR [rax]
	...
   140006277:	add    BYTE PTR [rax+0x71],dl
   14000627a:	add    BYTE PTR [rax],al
   14000627c:	sub    BYTE PTR [rcx],al
	...
   140006286:	add    BYTE PTR [rax],al
   140006288:	js     0x1400062fc
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	test   al,0xe
	...
   140006296:	add    BYTE PTR [rax],al
   140006298:	and    BYTE PTR [rcx+0x8a80000],al
	...
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	enter  0x89,0x0
   1400062ac:	push   0x5
   1400062b1:	add    BYTE PTR [rax],al
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax],dh
   1400062b9:	pop    QWORD PTR [rax]
   1400062bb:	add    BYTE PTR [rbx-0x43],ah
	...
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	cwde   
   1400062c9:	add    QWORD PTR [rax],r8
   1400062cc:	test   al,0x25
	...
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	rex jb 0x1400062dc
   1400062db:	add    BYTE PTR [rax+0x10],ch
   1400062e1:	add    BYTE PTR [rax],al
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    al,ch
   1400062e9:	(bad)  
   1400062ea:	add    DWORD PTR [rax],eax
   1400062ec:	push   0x4
   1400062f1:	add    BYTE PTR [rax],al
   1400062f3:	add    BYTE PTR [rax],al
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    BYTE PTR [rax-0x79],dl
   1400062fa:	add    DWORD PTR [rax],eax
   1400062fc:	xchg   edx,eax
	...
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    al,ch
   140006309:	xchg   DWORD PTR [rcx],eax
   14000630b:	add    al,al
   14000630d:	add    eax,DWORD PTR [rax]
	...
   140006317:	add    BYTE PTR [rax],dh
   140006319:	movsxd eax,DWORD PTR [rax]
   14000631b:	add    ah,cl
   14000631d:	add    al,0x0
	...
   140006327:	add    BYTE PTR [rbx],al
   140006329:	add    BYTE PTR [rbp+0x0],cl
   14000632c:	push   rbp
   14000632d:	add    BYTE PTR [rcx+0x0],cl
   140006330:	cmp    al,0x3f
   140006332:	js     0x1400063a1
   140006334:	ins    BYTE PTR es:[rdi],dx
   140006335:	and    BYTE PTR [rsi+0x65],dh
   140006338:	jb     0x1400063ad
   14000633a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140006341:	xor    BYTE PTR [rdx],ah
   140006343:	and    BYTE PTR [rbp+0x6e],ah
   140006346:	movsxd ebp,DWORD PTR [rdi+0x64]
   140006349:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140006350:	rex.RX sub eax,0x73202238
   140006356:	je     0x1400063b9
   140006358:	outs   dx,BYTE PTR ds:[rsi]
   140006359:	fs (bad) 
   14000635b:	ins    BYTE PTR es:[rdi],dx
   14000635c:	outs   dx,DWORD PTR ds:[rsi]
   14000635d:	outs   dx,BYTE PTR ds:[rsi]
   14000635e:	gs cmp eax,0x73657922
   140006364:	and    bh,BYTE PTR [rdi]
   140006366:	ds or  eax,0x2d213c0a
   14000636c:	sub    eax,0x706f4320
   140006371:	jns    0x1400063e5
   140006373:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000637a:	sub    DWORD PTR [rax],esp
   14000637c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140006384:	je     0x1400063a6
   140006386:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006388:	jb     0x1400063fa
   14000638a:	outs   dx,DWORD PTR ds:[rsi]
   14000638b:	jb     0x1400063ee
   14000638d:	je     0x1400063f8
   14000638f:	outs   dx,DWORD PTR ds:[rsi]
   140006390:	outs   dx,BYTE PTR ds:[rsi]
   140006391:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0da1c4
   140006397:	cmp    al,0x61
   140006399:	jae    0x14000640e
   14000639b:	gs ins DWORD PTR es:[rdi],dx
   14000639d:	(bad)  
   14000639e:	ins    BYTE PTR es:[rdi],dx
   14000639f:	jns    0x1400063c1
   1400063a1:	js     0x140006410
   1400063a3:	ins    BYTE PTR es:[rdi],dx
   1400063a4:	outs   dx,BYTE PTR ds:[rsi]
   1400063a5:	jae    0x1400063e4
   1400063a7:	and    dh,BYTE PTR [rbp+0x72]
   1400063aa:	outs   dx,BYTE PTR ds:[rsi]
   1400063ab:	cmp    dh,BYTE PTR [rbx+0x63]
   1400063ae:	push   0x73616d65
   1400063b3:	sub    eax,0x7263696d
   1400063b8:	outs   dx,DWORD PTR ds:[rsi]
   1400063b9:	jae    0x14000642a
   1400063bb:	data16 je 0x1400063eb
   1400063be:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400063c1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400063c4:	ins    DWORD PTR es:[rdi],dx
   1400063c5:	cs jbe 0x1400063f9
   1400063c8:	and    ah,BYTE PTR [rax]
   1400063ca:	ins    DWORD PTR es:[rdi],dx
   1400063cb:	(bad)  
   1400063cc:	outs   dx,BYTE PTR ds:[rsi]
   1400063cd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400063d4:	jb     0x140006449
   1400063d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400063dd:	xor    BYTE PTR [rdx],ah
   1400063df:	and    BYTE PTR [rax+0x6d],bh
   1400063e2:	ins    BYTE PTR es:[rdi],dx
   1400063e3:	outs   dx,BYTE PTR ds:[rsi]
   1400063e4:	jae    0x140006420
   1400063e6:	(bad)  
   1400063e7:	jae    0x140006456
   1400063e9:	jbe    0x14000641e
   1400063eb:	cmp    eax,0x6e727522
   1400063f0:	cmp    dh,BYTE PTR [rbx+0x63]
   1400063f3:	push   0x73616d65
   1400063f8:	sub    eax,0x7263696d
   1400063fd:	outs   dx,DWORD PTR ds:[rsi]
   1400063fe:	jae    0x14000646f
   140006400:	data16 je 0x140006430
   140006403:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006406:	cmp    ah,BYTE PTR [rcx+0x73]
   140006409:	ins    DWORD PTR es:[rdi],dx
   14000640a:	cs jbe 0x140006440
   14000640d:	and    ah,BYTE PTR [rax]
   14000640f:	ds or  eax,0x3c20200a
   140006415:	(bad)  
   140006416:	jae    0x14000648b
   140006418:	gs ins DWORD PTR es:[rdi],dx
   14000641a:	(bad)  
   14000641b:	ins    BYTE PTR es:[rdi],dx
   14000641c:	jns    0x140006467
   14000641e:	fs outs dx,BYTE PTR gs:[rsi]
   140006421:	je     0x14000648c
   140006423:	je     0x14000649e
   140006425:	and    BYTE PTR [rax+0x72],dh
   140006428:	outs   dx,DWORD PTR ds:[rsi]
   140006429:	movsxd esp,DWORD PTR [rbp+0x73]
   14000642c:	jae    0x14000649d
   14000642e:	jb     0x140006471
   140006430:	jb     0x140006495
   140006432:	push   0x63657469
   140006437:	je     0x1400064ae
   140006439:	jb     0x1400064a0
   14000643b:	cmp    eax,0x646d6122
   140006440:	ss xor al,0x22
   140006443:	and    BYTE PTR [rsi+0x65],dh
   140006446:	jb     0x1400064bb
   140006448:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000644f:	xor    BYTE PTR [rsi],ch
   140006451:	xor    BYTE PTR [rsi],ch
   140006453:	xor    BYTE PTR [rdx],ah
   140006455:	and    BYTE PTR [rsi+0x61],ch
   140006458:	ins    DWORD PTR es:[rdi],dx
   140006459:	gs cmp eax,0x63694d22
   14000645f:	jb     0x1400064d0
   140006461:	jae    0x1400064d2
   140006463:	data16 je 0x140006494
   140006466:	push   rdi
   140006467:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000646e:	rex.WB ins DWORD PTR es:[rdi],dx
   140006470:	(bad)  
   140006471:	addr32 gs rex.R
   140006474:	gs jbe 0x1400064e0
   140006477:	movsxd esp,DWORD PTR [rbp+0x73]
   14000647a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000647c:	outs   dx,BYTE PTR ds:[rsi]
   14000647d:	je     0x1400064f1
   14000647f:	outs   dx,DWORD PTR ds:[rsi]
   140006480:	ins    BYTE PTR es:[rdi],dx
   140006481:	push   rax
   140006482:	(bad)  
   140006483:	outs   dx,BYTE PTR ds:[rsi]
   140006484:	gs ins BYTE PTR es:[rdi],dx
   140006486:	and    ah,BYTE PTR [rax]
   140006488:	je     0x140006503
   14000648a:	jo     0x1400064f1
   14000648c:	cmp    eax,0x6e697722
   140006491:	xor    esi,DWORD PTR [rdx]
   140006493:	and    ah,BYTE PTR [rax]
   140006495:	(bad)  
   140006496:	ds or  eax,0x3c20200a
   14000649c:	fs gs jae 0x140006503
   1400064a0:	jb     0x14000650b
   1400064a2:	jo     0x140006518
   1400064a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x616d493e
   1400064ab:	imul   ebp,DWORD PTR [esi+0x67],0x76654420
   1400064b3:	imul   esp,DWORD PTR [rbx+0x65],0x6f432073
   1400064ba:	outs   dx,BYTE PTR ds:[rsi]
   1400064bb:	je     0x14000652f
   1400064bd:	outs   dx,DWORD PTR ds:[rsi]
   1400064be:	ins    BYTE PTR es:[rdi],dx
   1400064bf:	and    BYTE PTR [rax+0x61],dl
   1400064c2:	outs   dx,BYTE PTR ds:[rsi]
   1400064c3:	gs ins BYTE PTR es:[rdi],dx
   1400064c5:	cmp    al,0x2f
   1400064c7:	fs gs jae 0x14000652e
   1400064cb:	jb     0x140006536
   1400064cd:	jo     0x140006543
   1400064cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   1400064d6:	and    BYTE PTR [rsp+riz*2],bh
   1400064d9:	gs jo  0x140006541
   1400064dc:	outs   dx,BYTE PTR ds:[rsi]
   1400064dd:	fs outs dx,BYTE PTR gs:[rsi]
   1400064e0:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400064e3:	or     eax,0x2020200a
   1400064e8:	and    BYTE PTR [rsp+riz*2],bh
   1400064eb:	gs jo  0x140006553
   1400064ee:	outs   dx,BYTE PTR ds:[rsi]
   1400064ef:	fs outs dx,BYTE PTR gs:[rsi]
   1400064f2:	je     0x140006535
   1400064f4:	jae    0x140006569
   1400064f6:	gs ins DWORD PTR es:[rdi],dx
   1400064f8:	(bad)  
   1400064f9:	ins    BYTE PTR es:[rdi],dx
   1400064fa:	jns    0x14000653a
   1400064fc:	or     eax,0x2020200a
   140006501:	and    BYTE PTR [rax],ah
   140006503:	and    BYTE PTR [rax],ah
   140006505:	and    BYTE PTR [rcx+riz*2],bh
   140006508:	jae    0x14000657d
   14000650a:	gs ins DWORD PTR es:[rdi],dx
   14000650c:	(bad)  
   14000650d:	ins    BYTE PTR es:[rdi],dx
   14000650e:	jns    0x140006559
   140006510:	fs outs dx,BYTE PTR gs:[rsi]
   140006513:	je     0x14000657e
   140006515:	je     0x140006590
   140006517:	or     eax,0x2020200a
   14000651c:	and    BYTE PTR [rax],ah
   14000651e:	and    BYTE PTR [rax],ah
   140006520:	and    BYTE PTR [rax],ah
   140006522:	and    BYTE PTR [rax],ah
   140006524:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140006528:	gs cmp eax,0x6e697722
   14000652e:	xor    esi,DWORD PTR [rdx]
   140006530:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160208540
   140006536:	and    BYTE PTR [rax],ah
   140006538:	and    BYTE PTR [rax],ah
   14000653a:	and    BYTE PTR [rax],ah
   14000653c:	and    BYTE PTR [rax],ah
   14000653e:	and    BYTE PTR [rsi+0x61],ch
   140006541:	ins    DWORD PTR es:[rdi],dx
   140006542:	gs cmp eax,0x63694d22
   140006548:	jb     0x1400065b9
   14000654a:	jae    0x1400065bb
   14000654c:	data16 je 0x14000657d
   14000654f:	push   rdi
   140006550:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140006557:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006559:	ins    DWORD PTR es:[rdi],dx
   14000655a:	ins    DWORD PTR es:[rdi],dx
   14000655b:	outs   dx,DWORD PTR ds:[rsi]
   14000655c:	outs   dx,BYTE PTR ds:[rsi]
   14000655d:	sub    eax,0x746e6f43
   140006562:	jb     0x1400065d3
   140006564:	ins    BYTE PTR es:[rdi],dx
   140006565:	jae    0x140006589
   140006567:	or     eax,0x2020200a
   14000656c:	and    BYTE PTR [rax],ah
   14000656e:	and    BYTE PTR [rax],ah
   140006570:	and    BYTE PTR [rax],ah
   140006572:	and    BYTE PTR [rax],ah
   140006574:	and    BYTE PTR [rsi+0x65],dh
   140006577:	jb     0x1400065ec
   140006579:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140006580:	xor    BYTE PTR [rsi],ch
   140006582:	xor    BYTE PTR [rsi],ch
   140006584:	xor    BYTE PTR [rdx],ah
   140006586:	or     eax,0x2020200a
   14000658b:	and    BYTE PTR [rax],ah
   14000658d:	and    BYTE PTR [rax],ah
   14000658f:	and    BYTE PTR [rax],ah
   140006591:	and    BYTE PTR [rax],ah
   140006593:	and    BYTE PTR [rax+0x72],dh
   140006596:	outs   dx,DWORD PTR ds:[rsi]
   140006597:	movsxd esp,DWORD PTR [rbp+0x73]
   14000659a:	jae    0x14000660b
   14000659c:	jb     0x1400065df
   14000659e:	jb     0x140006603
   1400065a0:	push   0x63657469
   1400065a5:	je     0x14000661c
   1400065a7:	jb     0x14000660e
   1400065a9:	cmp    eax,0xd222a22
   1400065ae:	or     ah,BYTE PTR [rax]
   1400065b0:	and    BYTE PTR [rax],ah
   1400065b2:	and    BYTE PTR [rax],ah
   1400065b4:	and    BYTE PTR [rax],ah
   1400065b6:	and    BYTE PTR [rax],ah
   1400065b8:	and    BYTE PTR [rax],ah
   1400065ba:	and    BYTE PTR [rax+0x75],dh
   1400065bd:	(bad)  
   1400065be:	ins    BYTE PTR es:[rdi],dx
   1400065bf:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   1400065c6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   1400065ca:	and    dh,BYTE PTR [rsi]
   1400065cc:	xor    eax,0x36623539
   1400065d1:	xor    al,0x31
   1400065d3:	xor    al,0x34
   1400065d5:	movsxd esp,DWORD PTR [rbx+0x66]
   1400065d8:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   1400065dc:	or     eax,0x2020200a
   1400065e1:	and    BYTE PTR [rax],ah
   1400065e3:	and    BYTE PTR [rax],ah
   1400065e5:	and    BYTE PTR [rax],ah
   1400065e7:	and    BYTE PTR [rax],ah
   1400065e9:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   1400065ed:	addr32 jne 0x140006651
   1400065f0:	addr32 gs cmp eax,0xd222a22
   1400065f7:	or     ah,BYTE PTR [rax]
   1400065f9:	and    BYTE PTR [rax],ah
   1400065fb:	and    BYTE PTR [rax],ah
   1400065fd:	and    BYTE PTR [rax],ah
   1400065ff:	and    BYTE PTR [rdi],ch
   140006601:	ds or  eax,0x2020200a
   140006607:	and    BYTE PTR [rdi+rbp*1],bh
   14000660a:	fs gs jo 0x140006673
   14000660e:	outs   dx,BYTE PTR ds:[rsi]
   14000660f:	fs outs dx,BYTE PTR gs:[rsi]
   140006612:	je     0x140006655
   140006614:	jae    0x140006689
   140006616:	gs ins DWORD PTR es:[rdi],dx
   140006618:	(bad)  
   140006619:	ins    BYTE PTR es:[rdi],dx
   14000661a:	jns    0x14000665a
   14000661c:	or     eax,0x3c20200a
   140006621:	(bad)  
   140006622:	fs gs jo 0x14000668b
   140006626:	outs   dx,BYTE PTR ds:[rsi]
   140006627:	fs outs dx,BYTE PTR gs:[rsi]
   14000662a:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000662d:	or     eax,0x3c20200a
   140006632:	je     0x1400066a6
   140006634:	jne    0x1400066a9
   140006636:	je     0x140006681
   140006638:	outs   dx,BYTE PTR ds:[rsi]
   140006639:	outs   dx,WORD PTR ds:[rsi]
   14000663b:	and    BYTE PTR [rax+0x6d],bh
   14000663e:	ins    BYTE PTR es:[rdi],dx
   14000663f:	outs   dx,BYTE PTR ds:[rsi]
   140006640:	jae    0x14000667f
   140006642:	and    dh,BYTE PTR [rbp+0x72]
   140006645:	outs   dx,BYTE PTR ds:[rsi]
   140006646:	cmp    dh,BYTE PTR [rbx+0x63]
   140006649:	push   0x73616d65
   14000664e:	sub    eax,0x7263696d
   140006653:	outs   dx,DWORD PTR ds:[rsi]
   140006654:	jae    0x1400066c5
   140006656:	data16 je 0x140006686
   140006659:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000665c:	cmp    ah,BYTE PTR [rcx+0x73]
   14000665f:	ins    DWORD PTR es:[rdi],dx
   140006660:	cs jbe 0x140006696
   140006663:	and    bh,BYTE PTR [rsi]
   140006665:	or     eax,0x2020200a
   14000666a:	and    BYTE PTR [rbx+rsi*2],bh
   14000666d:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140006671:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140006679:	and    BYTE PTR [rax],ah
   14000667b:	and    BYTE PTR [rax],ah
   14000667d:	and    BYTE PTR [rax],ah
   14000667f:	cmp    al,0x72
   140006681:	gs jno 0x1400066f9
   140006684:	gs jae 0x1400066fb
   140006687:	gs fs push rax
   14000668a:	jb     0x1400066f5
   14000668c:	jbe    0x1400066f7
   14000668e:	ins    BYTE PTR es:[rdi],dx
   14000668f:	gs addr32 gs jae 0x1400066d2
   140006694:	or     eax,0x2020200a
   140006699:	and    BYTE PTR [rax],ah
   14000669b:	and    BYTE PTR [rax],ah
   14000669d:	and    BYTE PTR [rax],ah
   14000669f:	and    BYTE PTR [rax],ah
   1400066a1:	and    BYTE PTR [rdx+rsi*2],bh
   1400066a4:	gs jno 0x14000671c
   1400066a7:	gs jae 0x14000671e
   1400066aa:	gs fs rex.RB js 0x140006714
   1400066af:	movsxd esi,DWORD PTR [rbp+0x74]
   1400066b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400066b9:	ins    BYTE PTR es:[rdi],dx
   1400066ba:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400066be:	gs ins BYTE PTR es:[rdi],dx
   1400066c0:	cmp    eax,0x49736122
   1400066c5:	outs   dx,BYTE PTR ds:[rsi]
   1400066c6:	jbe    0x140006737
   1400066c8:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400066cc:	and    BYTE PTR [rbp+0x69],dh
   1400066cf:	movsxd esp,DWORD PTR [r11+0x65]
   1400066d3:	jae    0x140006748
   1400066d5:	cmp    eax,0x6c616622
   1400066da:	jae    0x140006741
   1400066dc:	and    ch,BYTE PTR [rdi]
   1400066de:	ds or  eax,0x2020200a
   1400066e4:	and    BYTE PTR [rax],ah
   1400066e6:	and    BYTE PTR [rax],ah
   1400066e8:	and    BYTE PTR [rdi+rbp*1],bh
   1400066eb:	jb     0x140006752
   1400066ed:	jno    0x140006764
   1400066ef:	gs jae 0x140006766
   1400066f2:	gs fs push rax
   1400066f5:	jb     0x140006760
   1400066f7:	jbe    0x140006762
   1400066f9:	ins    BYTE PTR es:[rdi],dx
   1400066fa:	gs addr32 gs jae 0x14000673d
   1400066ff:	or     eax,0x2020200a
   140006704:	and    BYTE PTR [rdi+rbp*1],bh
   140006707:	jae    0x14000676e
   140006709:	movsxd esi,DWORD PTR [rbp+0x72]
   14000670c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140006714:	cmp    al,0x2f
   140006716:	je     0x14000678a
   140006718:	jne    0x14000678d
   14000671a:	je     0x140006765
   14000671c:	outs   dx,BYTE PTR ds:[rsi]
   14000671d:	outs   dx,WORD PTR ds:[rsi]
   14000671f:	ds or  eax,0x3c20200a
   140006725:	(bad)  
   140006726:	jae    0x140006795
   140006728:	jbe    0x14000675d
   14000672a:	cmp    ah,BYTE PTR [rcx+0x70]
   14000672d:	jo     0x14000679b
   14000672f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140006736:	ds or  eax,0x2020200a
   14000673c:	and    BYTE PTR [rcx+riz*2],bh
   14000673f:	jae    0x1400067ae
   140006741:	jbe    0x140006776
   140006743:	cmp    dh,BYTE PTR [rdi+0x69]
   140006746:	outs   dx,BYTE PTR ds:[rsi]
   140006747:	outs   dx,DWORD PTR fs:[rsi]
   140006749:	ja     0x1400067be
   14000674b:	push   rbx
   14000674c:	gs je  0x1400067c3
   14000674f:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   140006756:	ins    BYTE PTR es:[rdi],dx
   140006757:	outs   dx,BYTE PTR ds:[rsi]
   140006758:	jae    0x140006797
   14000675a:	and    ch,BYTE PTR [rax+0x74]
   14000675d:	je     0x1400067cf
   14000675f:	cmp    ch,BYTE PTR [rdi]
   140006761:	(bad)  
   140006762:	jae    0x1400067c7
   140006764:	push   0x73616d65
   140006769:	cs ins DWORD PTR es:[rdi],dx
   14000676b:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140006772:	je     0x1400067a2
   140006774:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006777:	(bad)  
   140006778:	push   rbx
   140006779:	rex.WRB
   14000677a:	rex.WB (bad) 
   14000677c:	xor    dh,BYTE PTR [rax]
   14000677e:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69beb3
   140006784:	outs   dx,DWORD PTR fs:[rsi]
   140006786:	ja     0x1400067fb
   140006788:	push   rbx
   140006789:	gs je  0x140006800
   14000678c:	imul   ebp,DWORD PTR [rsi+0x67],0x203e2273
   140006793:	or     eax,0x2020200a
   140006798:	and    BYTE PTR [rax],ah
   14000679a:	and    BYTE PTR [rsp+riz*2],bh
   14000679d:	jo     0x140006808
   14000679f:	rex.B ja 0x140006803
   1400067a2:	jb     0x140006809
   1400067a4:	ds je  0x140006819
   1400067a7:	jne    0x14000680e
   1400067a9:	cmp    al,0x2f
   1400067ab:	fs jo  0x140006817
   1400067ae:	rex.B ja 0x140006812
   1400067b1:	jb     0x140006818
   1400067b3:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x1602087c4
   1400067ba:	and    BYTE PTR [rdi+rbp*1],bh
   1400067bd:	(bad)  
   1400067be:	jae    0x14000682d
   1400067c0:	jbe    0x1400067f5
   1400067c2:	cmp    dh,BYTE PTR [rdi+0x69]
   1400067c5:	outs   dx,BYTE PTR ds:[rsi]
   1400067c6:	outs   dx,DWORD PTR fs:[rsi]
   1400067c8:	ja     0x14000683d
   1400067ca:	push   rbx
   1400067cb:	gs je  0x140006842
   1400067ce:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   1400067d5:	and    BYTE PTR [rax],ah
   1400067d7:	cmp    al,0x2f
   1400067d9:	(bad)  
   1400067da:	jae    0x140006849
   1400067dc:	jbe    0x140006811
   1400067de:	cmp    ah,BYTE PTR [rcx+0x70]
   1400067e1:	jo     0x14000684f
   1400067e3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400067ea:	ds or  eax,0x612f3c0a
   1400067f0:	jae    0x140006865
   1400067f2:	gs ins DWORD PTR es:[rdi],dx
   1400067f4:	(bad)  
   1400067f5:	ins    BYTE PTR es:[rdi],dx
   1400067f6:	jns    0x140006836
   1400067f8:	or     eax,0xa0d0a
   1400067fd:	add    BYTE PTR [rax],al
   1400067ff:	add    BYTE PTR [rax],ch
   140006801:	add    BYTE PTR [rax],al
   140006803:	add    BYTE PTR [rax],dh
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rax+0x0],ah
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	add    DWORD PTR [rax],eax
   14000680e:	add    al,0x0
   140006810:	add    BYTE PTR [rax],al
   140006812:	add    BYTE PTR [rax],al
   140006814:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000682c:	add    BYTE PTR [rax],al
   14000682e:	add    BYTE PTR [rax],0x0
   140006831:	add    BYTE PTR [rax],0x0
   140006834:	add    BYTE PTR [rax+0x800080],al
   14000683a:	add    BYTE PTR [rax],al
   14000683c:	add    BYTE PTR [rax],0x80
   14000683f:	add    BYTE PTR [rax-0x7fffff80],al
   140006845:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000684c:	add    BYTE PTR [rax],al
   14000684e:	inc    DWORD PTR [rax]
   140006850:	add    bh,bh
   140006852:	add    BYTE PTR [rax],al
   140006854:	add    bh,bh
   140006856:	inc    DWORD PTR [rax]
   140006858:	inc    DWORD PTR [rax]
   14000685a:	add    BYTE PTR [rax],al
   14000685c:	inc    DWORD PTR [rax]
   14000685e:	inc    DWORD PTR [rax]
   140006860:	(bad)  
   140006861:	inc    DWORD PTR [rax]
   140006863:	add    bh,bh
   140006865:	(bad)  
   140006866:	inc    DWORD PTR [rax]
	...
   1400068a4:	(bad)  
   1400068a5:	jbe    0x14000691c
   1400068a7:	addr32 jbe 0x140006901
   1400068aa:	addr32 je 0x140006924
   1400068ad:	addr32 jo 0x1400068b0
	...
   1400068bc:	ja     0x140006845
   1400068be:	js     0x140006937
   1400068c0:	ja     0x140006939
   1400068c2:	ja     0x14000693b
   1400068c4:	ja     0x14000693d
   1400068c6:	ja     0x1400068c8
	...
   1400068d4:	js     0x1400068ce
   1400068d6:	dec    DWORD PTR [rax-0x77878778]
   1400068dc:	js     0x140006866
   1400068de:	xchg   DWORD PTR [rax],eax
	...
   1400068ec:	js     0x1400068ed
   1400068ee:	mov    BYTE PTR [rdi+0x77],dh
   1400068f1:	addr32 ja 0x14000687b
   1400068f4:	mov    BYTE PTR [rax+0x87],cl
	...
   140006902:	add    BYTE PTR [rax],al
   140006904:	js     0x1400068fe
   140006906:	mov    bh,bh
   140006908:	clc    
   140006909:	test   BYTE PTR [rdi-0x78],dh
   14000690c:	mov    BYTE PTR [rdi+rsi*2+0x0],dh
	...
   14000691c:	mov    al,bh
   14000691e:	mov    BYTE PTR [rdi-0x77987788],al
   140006924:	mov    BYTE PTR [rdx],al
   140006926:	ja     0x140006928
	...
   140006934:	js     0x14000692e
   140006936:	clc    
   140006937:	fs (bad) 
   140006939:	js     0x1400069b2
   14000693b:	mov    BYTE PTR [rax+0x7841],cl
	...
   140006949:	add    BYTE PTR [rax],al
   14000694b:	add    BYTE PTR [rdi-0x79887708],cl
   140006951:	rex.WRXB xchg QWORD PTR [r8+0x77068f],r9
	...
   140006964:	mov    al,bh
   140006966:	test   DWORD PTR [rdi-0x1b],0x88888608
   14000696d:	(bad)  
   14000696e:	js     0x140006970
	...
   14000697c:	mov    al,bh
   14000697e:	clc    
   14000697f:	fs rex.X js 0x14000690a
   140006983:	mov    BYTE PTR [rax+0x7714],cl
	...
   140006991:	add    BYTE PTR [rax],al
   140006993:	add    BYTE PTR [rax+0x77788f8],cl
   140006999:	mov    BYTE PTR [rdi-0x78],dh
   14000699c:	clc    
   14000699d:	(bad)  
   14000699e:	js     0x1400069a0
	...
   1400069ac:	(bad)  
   1400069ad:	clc    
   1400069ae:	mov    BYTE PTR [rdi-0x77777871],cl
   1400069b4:	mov    BYTE PTR [rax],al
   1400069b6:	ja     0x1400069b8
	...
   1400069c4:	mov    bh,bh
   1400069c6:	mov    BYTE PTR [rax+0x77888888],cl
   1400069cc:	mov    BYTE PTR [rdi+0x78],dh
	...
   1400069db:	add    BYTE PTR [rax-0x78780701],cl
   1400069e1:	mov    al,bh
   1400069e3:	rex.RX js 0x1400069e5
   1400069e6:	clc    
	...
   1400069f3:	add    BYTE PTR [rdi-0x7007089],al
   1400069f9:	clc    
   1400069fa:	clc    
   1400069fb:	je     0x140006a75
   1400069fd:	mov    BYTE PTR [rax+0x0],cl
	...
   140006a0b:	add    BYTE PTR [rdi-0x99],al
   140006a11:	(bad)  
   140006a12:	dec    DWORD PTR [rax+0xf88f8f]
	...
   140006a20:	add    BYTE PTR [rax],al
   140006a22:	js     0x140006a9c
   140006a24:	xchg   DWORD PTR [rdi-0x8],esi
   140006a27:	(bad)  
   140006a28:	(bad)  
   140006a29:	(bad)  
   140006a2a:	(bad)  
   140006a2b:	clc    
   140006a2c:	clc    
   140006a2d:	clc    
   140006a2e:	clc    
	...
   140006a37:	(bad)  
   140006a38:	js     0x1400069c9
   140006a3a:	mov    BYTE PTR [rdi-0x77777708],al
   140006a40:	mov    BYTE PTR [rax-0x77777778],cl
   140006a46:	add    BYTE PTR [rax],0x0
   140006a49:	add    BYTE PTR [rax],al
   140006a4b:	add    BYTE PTR [rax],al
   140006a4d:	(bad)  
   140006a4e:	mov    BYTE PTR [rax+0x77878888],cl
   140006a54:	xchg   DWORD PTR [rax+0x777777],ecx
	...
   140006a62:	add    BYTE PTR [rdi],al
   140006a64:	js     0x1400069ee
   140006a66:	js     0x140006adf
   140006a68:	xchg   DWORD PTR [rdi-0x7007078],eax
   140006a6e:	mov    BYTE PTR [rsi+0x77],dh
   140006a71:	ja     0x140006a73
   140006a73:	add    BYTE PTR [rax],al
   140006a75:	add    BYTE PTR [rax],al
   140006a77:	add    BYTE PTR [rax],al
   140006a79:	add    BYTE PTR [rax+0x78],bh
   140006a7c:	ja     0x140006af5
   140006a7e:	js     0x140006a08
   140006a80:	(bad)  
   140006a81:	(bad)  
   140006a82:	(bad)  
   140006a83:	dec    DWORD PTR [rdi+0x778888f8]
   140006a89:	js     0x140006b02
   140006a8b:	add    BYTE PTR [rax],al
   140006a8d:	add    BYTE PTR [rax],al
   140006a8f:	add    BYTE PTR [rax],al
   140006a91:	mov    BYTE PTR [rdi+0x77],dh
   140006a94:	js     0x140006a16
   140006a96:	(bad)  
   140006a97:	clc    
   140006a98:	(bad)  
   140006a99:	(bad)  
   140006a9a:	(bad)  
   140006a9b:	(bad)  
   140006a9c:	(bad)  
   140006a9d:	clc    
   140006a9e:	mov    BYTE PTR [rax+0x77787777],cl
   140006aa4:	add    BYTE PTR [rax],al
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	or     BYTE PTR [rsi+0x77],dh
   140006aab:	mov    al,bh
   140006aad:	xchg   DWORD PTR [rax-0x71],edi
   140006ab0:	(bad)  
   140006ab1:	clc    
   140006ab2:	dec    DWORD PTR [rdi-0x77070008]
   140006ab8:	mov    BYTE PTR [rdi+0x707877],al
   140006abe:	add    BYTE PTR [rax],al
   140006ac0:	(bad)  
   140006ac1:	js     0x140006a4b
   140006ac3:	clc    
   140006ac4:	mov    BYTE PTR [rdi-0x77770701],cl
   140006aca:	mov    BYTE PTR [rdi+0x77],dh
   140006acd:	rex.RXB (bad) 
   140006acf:	clc    
   140006ad0:	mov    BYTE PTR [rax+0x70877777],cl
   140006ad6:	add    BYTE PTR [rax],al
   140006ad8:	or     BYTE PTR [rax-0x77070071],cl
   140006ade:	mov    BYTE PTR [rdi+0x77],dh
   140006ae1:	ja     0x140006b59
   140006ae3:	mov    WORD PTR [rdi+0x77],?
   140006ae6:	ja     0x140006a77
   140006ae8:	dec    DWORD PTR [rax+0x78787788]
   140006aee:	jo     0x140006af0
   140006af0:	mov    BYTE PTR [rax+0x768888f8],cl
   140006af6:	rex.RXB
   140006af7:	rex.X push rsi
   140006af9:	ja     0x140006ae3
   140006afb:	js     0x140006a84
   140006afd:	xchg   edi,esp
   140006aff:	ja     0x140006a89
   140006b01:	clc    
   140006b02:	mov    BYTE PTR [rax+0x878777],cl
   140006b08:	or     BYTE PTR [rdi+0x77],dh
   140006b0b:	(bad)  
   140006b0c:	(bad)  
   140006b0d:	ja     0x140006b0f
   140006b0f:	ja     0x140006b88
   140006b11:	out    0xc7,eax
   140006b13:	rex.R
   140006b14:	rex.RX
   140006b15:	rex.RX push rdi
   140006b17:	fs ja  0x140006b92
   140006b1a:	vpmacssdql ymm0,ymm15,ymm4,YMMWORD PTR [r15+0x61870000]
   140006b24:	add    BYTE PTR [rdi],al
   140006b26:	ja     0x140006b9e
   140006b28:	rex.RX
   140006b29:	add    BYTE PTR [rdi+0x70],spl
   140006b2d:	jo     0x140006b8f
   140006b2f:	add    DWORD PTR [rax+0x4],esp
   140006b32:	addr32 clc 
   140006b34:	mov    BYTE PTR [rdi+0x88],al
   140006b3a:	or     BYTE PTR [rdx+0x50],dh
   140006b3d:	add    BYTE PTR [rax],al
   140006b3f:	add    BYTE PTR [rcx+0x77],al
   140006b42:	(bad)  
   140006b43:	dec    DWORD PTR [rax+0x70f78888]
   140006b49:	add    BYTE PTR [rax],al
   140006b4b:	(bad)
   140006b50:	add    BYTE PTR [rax],al
   140006b52:	add    BYTE PTR [rax],al
   140006b54:	xchg   DWORD PTR [rax],eax
   140006b56:	jbe    0x140006bd0
   140006b58:	(bad)  
   140006b59:	(bad)  
   140006b5a:	(bad)  
   140006b5b:	(bad)  
   140006b5c:	clc    
   140006b5d:	clc    
   140006b5e:	mov    BYTE PTR [rax+0x787f888],cl
   140006b64:	addr32 js 0x140006aef
   140006b67:	add    BYTE PTR [rax],al
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax-0x71],cl
   140006b71:	dec    DWORD PTR [rdi-0x70070778]
   140006b77:	mov    BYTE PTR [rax-0x77777778],cl
   140006b7d:	mov    BYTE PTR [rax-0x77f80000],cl
   140006b83:	(bad)  
   140006b84:	(bad)  
   140006b85:	(bad)  
   140006b86:	dec    DWORD PTR [rdi-0x7070708]
   140006b8c:	mov    BYTE PTR [rdi-0x77777778],cl
   140006b92:	mov    BYTE PTR [rax+0x808888],cl
   140006b98:	add    BYTE PTR [rax],cl
   140006b9a:	(bad)  
   140006b9b:	(bad)  
   140006b9c:	dec    DWORD PTR [rdi-0x7070771]
   140006ba2:	mov    BYTE PTR [rdi-0x77777771],cl
   140006ba8:	mov    BYTE PTR [rax+0xf088],cl
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	add    BYTE PTR [rax],al
   140006bb2:	add    BYTE PTR [rax-0x70777778],cl
   140006bb8:	mov    BYTE PTR [rax-0x77777708],cl
   140006bbe:	mov    BYTE PTR [rdi+0x80],cl
	...
   140006bd0:	add    al,bh
   140006bd2:	mov    BYTE PTR [rax+0x88],cl
	...
   140006ce8:	(bad)  
   140006ce9:	(bad)  
   140006cea:	(bad)  
   140006ceb:	(bad)  
   140006cec:	(bad)  
   140006ced:	inc    DWORD PTR [rax]
   140006cef:	add    bh,bh
   140006cf1:	(bad)  
   140006cf2:	(bad)  
   140006cf3:	(bad)  
   140006cf4:	(bad)  
   140006cf5:	inc    DWORD PTR [rax]
   140006cf7:	add    bh,bh
   140006cf9:	(bad)  
   140006cfa:	inc    DWORD PTR [rax+0x700]
   140006d00:	(bad)  
   140006d01:	(bad)  
   140006d02:	inc    DWORD PTR [rax]
   140006d04:	add    BYTE PTR [rbx],al
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	(bad)  
   140006d09:	(bad)  
   140006d0a:	inc    DWORD PTR [rax]
   140006d0c:	add    BYTE PTR [rbx],al
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	(bad)  
   140006d11:	(bad)  
   140006d12:	inc    DWORD PTR [rax]
   140006d14:	add    BYTE PTR [rbx],al
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	(bad)  
   140006d19:	(bad)  
   140006d1a:	inc    DWORD PTR [rax]
   140006d1c:	add    BYTE PTR [rbx],al
   140006d1e:	add    BYTE PTR [rax],al
   140006d20:	(bad)  
   140006d21:	(bad)  
   140006d22:	inc    DWORD PTR [rax]
   140006d24:	add    BYTE PTR [rbx],al
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	(bad)  
   140006d29:	(bad)  
   140006d2a:	inc    DWORD PTR [rax]
   140006d2c:	add    BYTE PTR [rbx],al
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	(bad)  
   140006d31:	(bad)  
   140006d32:	inc    DWORD PTR [rax]
   140006d34:	add    BYTE PTR [rbx],al
   140006d36:	add    BYTE PTR [rax],al
   140006d38:	(bad)  
   140006d39:	(bad)  
   140006d3a:	inc    DWORD PTR [rax]
   140006d3c:	add    BYTE PTR [rbx],al
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	(bad)  
   140006d41:	(bad)  
   140006d42:	inc    DWORD PTR [rax]
   140006d44:	add    BYTE PTR [rbx],al
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	(bad)  
   140006d49:	(bad)  
   140006d4a:	inc    DWORD PTR [rax]
   140006d4c:	add    BYTE PTR [rbx],al
   140006d4e:	add    BYTE PTR [rax],al
   140006d50:	(bad)  
   140006d51:	(bad)  
   140006d52:	inc    DWORD PTR [rax]
   140006d54:	add    BYTE PTR [rbx],al
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	(bad)  
   140006d59:	(bad)  
   140006d5a:	inc    DWORD PTR [rax]
   140006d5c:	add    BYTE PTR [rbx],al
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	(bad)  
   140006d61:	(bad)  
   140006d62:	inc    DWORD PTR [rax]
   140006d64:	add    BYTE PTR [rbx],al
   140006d66:	add    BYTE PTR [rax],al
   140006d68:	(bad)  
   140006d69:	(bad)  
   140006d6a:	inc    DWORD PTR [rax]
   140006d6c:	add    BYTE PTR [rbx],al
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	(bad)  
   140006d71:	(bad)  
   140006d72:	inc    DWORD PTR [rax]
   140006d74:	add    BYTE PTR [rbx],al
   140006d76:	add    BYTE PTR [rax],al
   140006d78:	(bad)  
   140006d79:	push   rax
   140006d7b:	add    BYTE PTR [rax],al
   140006d7d:	add    eax,DWORD PTR [rax]
   140006d7f:	add    bh,bh
   140006d81:	inc    BYTE PTR [rax]
   140006d83:	add    BYTE PTR [rax],al
   140006d85:	(bad)  
   140006d86:	add    BYTE PTR [rax],al
   140006d88:	jmp    rax
   140006d8a:	add    BYTE PTR [rax],al
   140006d8c:	(bad)  
   140006d8d:	inc    DWORD PTR [rax]
   140006d8f:	add    dh,bh
   140006d91:	add    BYTE PTR [rax],al
   140006d93:	add    BYTE PTR [rdi],cl
   140006d95:	inc    DWORD PTR [rax]
   140006d97:	add    al,dh
   140006d99:	add    BYTE PTR [rax],al
   140006d9b:	add    BYTE PTR [rbx],al
   140006d9d:	inc    DWORD PTR [rax]
   140006d9f:	add    al,al
   140006da1:	add    BYTE PTR [rax],al
   140006da3:	add    BYTE PTR [rax],al
   140006da5:	inc    DWORD PTR [rax]
   140006da7:	add    BYTE PTR [rax+0x0],al
   140006dad:	jg     0x140006daf
   140006daf:	add    BYTE PTR [rax+0x0],al
   140006db5:	(bad)  
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	add    BYTE PTR [rax],0x0
   140006dbb:	add    BYTE PTR [rax],al
   140006dbd:	(bad)  
   140006dbe:	add    BYTE PTR [rax],al
   140006dc0:	add    BYTE PTR [rax],al
   140006dc2:	add    BYTE PTR [rax],al
   140006dc4:	add    BYTE PTR [rbx],al
   140006dc6:	add    BYTE PTR [rax],al
   140006dc8:	add    BYTE PTR [rax],0x0
   140006dcb:	add    BYTE PTR [rax],al
   140006dcd:	add    eax,DWORD PTR [rax]
   140006dcf:	add    al,al
   140006dd1:	add    BYTE PTR [rax],al
   140006dd3:	add    BYTE PTR [rax],al
   140006dd5:	add    eax,DWORD PTR [rax]
   140006dd7:	add    al,bh
   140006dd9:	add    BYTE PTR [rax],al
   140006ddb:	add    BYTE PTR [rax],al
   140006ddd:	add    eax,DWORD PTR [rax]
   140006ddf:	add    bh,bh
   140006de1:	add    BYTE PTR [rax],al
   140006de3:	add    BYTE PTR [rax],al
   140006de5:	add    eax,DWORD PTR [rax]
   140006de7:	add    bh,bh
   140006de9:	add    BYTE PTR [rax],al
   140006deb:	add    BYTE PTR [rax],al
   140006ded:	add    eax,DWORD PTR [rax]
   140006def:	add    al,ah
   140006df1:	add    BYTE PTR [rax],al
   140006df3:	add    BYTE PTR [rax],al
   140006df5:	(bad)  
   140006df6:	add    BYTE PTR [rax],al
   140006df8:	loopne 0x140006dfa
   140006dfa:	add    BYTE PTR [rax],al
   140006dfc:	add    edi,edi
   140006dfe:	add    BYTE PTR [rax],al
   140006e00:	cld    
   140006e01:	add    BYTE PTR [rax],al
   140006e03:	add    BYTE PTR [rdi-0x1],bh
   140006e06:	add    BYTE PTR [rax],al
   140006e08:	(bad)  
   140006e09:	inc    eax
   140006e0b:	(bad)  
   140006e0c:	(bad)  
   140006e0d:	inc    DWORD PTR [rax]
   140006e0f:	add    bh,bh
   140006e11:	(bad)  
   140006e12:	(bad)  
   140006e13:	(bad)  
   140006e14:	(bad)  
   140006e15:	inc    DWORD PTR [rax]
   140006e17:	add    bh,bh
   140006e19:	(bad)  
   140006e1a:	(bad)  
   140006e1b:	(bad)  
   140006e1c:	(bad)  
   140006e1d:	inc    DWORD PTR [rax]
   140006e1f:	add    bh,bh
   140006e21:	(bad)  
   140006e22:	(bad)  
   140006e23:	(bad)  
   140006e24:	(bad)  
   140006e25:	inc    DWORD PTR [rax]
   140006e27:	add    bh,bh
   140006e29:	(bad)  
   140006e2a:	(bad)  
   140006e2b:	(bad)  
   140006e2c:	(bad)  
   140006e2d:	inc    DWORD PTR [rax]
   140006e2f:	add    bh,bh
   140006e31:	(bad)  
   140006e32:	(bad)  
   140006e33:	(bad)  
   140006e34:	(bad)  
   140006e35:	inc    DWORD PTR [rax]
   140006e37:	add    bh,bh
   140006e39:	(bad)  
   140006e3a:	(bad)  
   140006e3b:	(bad)  
   140006e3c:	(bad)  
   140006e3d:	inc    DWORD PTR [rax]
   140006e3f:	add    bh,bh
   140006e41:	(bad)  
   140006e42:	(bad)  
   140006e43:	(bad)  
   140006e44:	(bad)  
   140006e45:	inc    DWORD PTR [rax]
   140006e47:	add    bh,bh
   140006e49:	(bad)  
   140006e4a:	(bad)  
   140006e4b:	(bad)  
   140006e4c:	(bad)  
   140006e4d:	inc    DWORD PTR [rax]
   140006e4f:	add    bh,bh
   140006e51:	(bad)  
   140006e52:	(bad)  
   140006e53:	(bad)  
   140006e54:	(bad)  
   140006e55:	inc    DWORD PTR [rax]
   140006e57:	add    bh,bh
   140006e59:	(bad)  
   140006e5a:	(bad)  
   140006e5b:	(bad)  
   140006e5c:	(bad)  
   140006e5d:	inc    DWORD PTR [rax]
   140006e5f:	add    bh,bh
   140006e61:	(bad)  
   140006e62:	(bad)  
   140006e63:	(bad)  
   140006e64:	(bad)  
   140006e65:	inc    DWORD PTR [rax]
   140006e67:	add    BYTE PTR [rax],ch
   140006e69:	add    BYTE PTR [rax],al
   140006e6b:	add    BYTE PTR [rax],ah
   140006e6d:	add    BYTE PTR [rax],al
   140006e6f:	add    BYTE PTR [rax+0x0],al
   140006e72:	add    BYTE PTR [rax],al
   140006e74:	add    DWORD PTR [rax],eax
   140006e76:	add    al,0x0
   140006e78:	add    BYTE PTR [rax],al
   140006e7a:	add    BYTE PTR [rax],al
   140006e7c:	add    BYTE PTR [rdx],al
	...
   140006e96:	add    BYTE PTR [rax],0x0
   140006e99:	add    BYTE PTR [rax],0x0
   140006e9c:	add    BYTE PTR [rax+0x800080],al
   140006ea2:	add    BYTE PTR [rax],al
   140006ea4:	add    BYTE PTR [rax],0x80
   140006ea7:	add    BYTE PTR [rax-0x7fffff80],al
   140006ead:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140006eb4:	add    BYTE PTR [rax],al
   140006eb6:	inc    DWORD PTR [rax]
   140006eb8:	add    bh,bh
   140006eba:	add    BYTE PTR [rax],al
   140006ebc:	add    bh,bh
   140006ebe:	inc    DWORD PTR [rax]
   140006ec0:	inc    DWORD PTR [rax]
   140006ec2:	add    BYTE PTR [rax],al
   140006ec4:	inc    DWORD PTR [rax]
   140006ec6:	inc    DWORD PTR [rax]
   140006ec8:	(bad)  
   140006ec9:	inc    DWORD PTR [rax]
   140006ecb:	add    bh,bh
   140006ecd:	(bad)  
   140006ece:	inc    DWORD PTR [rax]
	...
   140006ee8:	jbe    0x140006f5f
   140006eea:	addr32 jbe 0x140006f44
   140006eed:	addr32 je 0x140006ef0
   140006ef0:	add    BYTE PTR [rax],al
   140006ef2:	add    BYTE PTR [rax],al
   140006ef4:	add    BYTE PTR [rax],al
   140006ef6:	add    BYTE PTR [rdi],al
   140006ef8:	mov    BYTE PTR [rax+0x77787887],cl
   140006efe:	js     0x140006f70
   140006f00:	add    BYTE PTR [rax],al
   140006f02:	add    BYTE PTR [rax],al
   140006f04:	add    BYTE PTR [rax],al
   140006f06:	add    BYTE PTR [rdi],al
   140006f08:	(bad)  
   140006f09:	idiv   DWORD PTR [rax+0x77]
   140006f0c:	js     0x140006e96
   140006f0e:	mov    BYTE PTR [rax+0x0],dh
   140006f11:	add    BYTE PTR [rax],al
   140006f13:	add    BYTE PTR [rax],al
   140006f15:	add    BYTE PTR [rax],al
   140006f17:	(bad)  
   140006f18:	(bad)  
   140006f19:	jg     0x140006f13
   140006f1b:	xchg   BYTE PTR [rax+0x7f],bh
   140006f1e:	(bad)  
   140006f1f:	jo     0x140006f21
   140006f21:	add    BYTE PTR [rax],al
   140006f23:	add    BYTE PTR [rax],al
   140006f25:	add    BYTE PTR [rax],al
   140006f27:	or     al,bh
   140006f29:	mov    BYTE PTR [rsi],al
   140006f2b:	mov    BYTE PTR [rax-0x71],bl
   140006f2e:	(bad)  
   140006f2f:	jo     0x140006f31
   140006f31:	add    BYTE PTR [rax],al
   140006f33:	add    BYTE PTR [rax],al
   140006f35:	add    BYTE PTR [rax],al
   140006f37:	(bad)  
   140006f38:	clc    
   140006f39:	idiv   BYTE PTR [rax+0xf]
   140006f3c:	push   0x804388
   140006f41:	add    BYTE PTR [rax],al
   140006f43:	add    BYTE PTR [rax],al
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	or     al,bh
   140006f49:	hlt    
   140006f4a:	jbe    0x140006f9b
   140006f4c:	js     0x140006edd
   140006f4e:	(bad)  
   140006f4f:	jo     0x140006f51
   140006f51:	add    BYTE PTR [rax],al
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	add    BYTE PTR [rax],al
   140006f57:	or     al,bh
   140006f59:	mov    BYTE PTR [rax-0x78],al
   140006f5c:	js     0x140006ee6
   140006f5e:	(bad)  
   140006f5f:	add    BYTE PTR [rax],0x0
   140006f62:	add    BYTE PTR [rax],al
   140006f64:	add    BYTE PTR [rax],al
   140006f66:	add    BYTE PTR [rax],cl
   140006f68:	(bad)  
   140006f69:	jg     0x140006f6a
   140006f6b:	xchg   DWORD PTR [rax+0x804088],ecx
   140006f71:	add    BYTE PTR [rax],al
   140006f73:	add    BYTE PTR [rax],al
   140006f75:	add    BYTE PTR [rax],al
   140006f77:	or     BYTE PTR [rdi-0xb778878],cl
   140006f7d:	js     0x140006f7e
   140006f7f:	add    BYTE PTR [rax],0x0
   140006f82:	add    BYTE PTR [rax],al
   140006f84:	add    BYTE PTR [rax],al
   140006f86:	add    BYTE PTR [rax],cl
   140006f88:	js     0x140006f19
   140006f8a:	dec    DWORD PTR [rax-0x7f77b709]
   140006f90:	add    BYTE PTR [rax],al
   140006f92:	add    BYTE PTR [rax],al
   140006f94:	add    BYTE PTR [rax],al
   140006f96:	add    BYTE PTR [rdi],cl
   140006f98:	addr32 (bad) 
   140006f9a:	(bad)  
   140006f9b:	(bad)  
   140006f9c:	(bad)  
   140006f9d:	clc    
   140006f9e:	inc    DWORD PTR [rax+0x0]
   140006fa4:	add    BYTE PTR [rax+0x78],bh
   140006fa7:	mov    al,bh
   140006fa9:	mov    BYTE PTR [rax-0x77777778],cl
   140006faf:	add    BYTE PTR [rax],al
   140006fb1:	add    BYTE PTR [rax],al
   140006fb3:	ja     0x140006f3d
   140006fb5:	mov    BYTE PTR [rdi+0x77778787],al
   140006fbb:	ja     0x140006fbd
   140006fbd:	add    BYTE PTR [rax],al
   140006fbf:	add    BYTE PTR [rax],al
   140006fc1:	(bad)  
   140006fc2:	js     0x14000703c
   140006fc4:	js     0x140006f4e
   140006fc6:	(bad)  
   140006fc7:	(bad)  
   140006fc8:	dec    DWORD PTR [rax+0x777787]
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	(bad)  
   140006fd1:	ja     0x14000704b
   140006fd3:	test   BYTE PTR [rax],cl
   140006fd5:	dec    DWORD PTR [rdi-0x77070001]
   140006fdb:	ja     0x140007054
   140006fdd:	jo     0x140006fdf
   140006fdf:	add    BYTE PTR [rdi-0x700778],al
   140006fe5:	(bad)
   140006fe9:	(bad)  
   140006fea:	vpmacssdql ymm6,ymm15,ymm8,YMMWORD PTR [r8+0x0]
   140006ff1:	(bad)  
   140006ff2:	dec    DWORD PTR [rax+0x7c777677]
   140006ff8:	xchg   edi,eax
   140006ffa:	(bad)
   140006ffe:	xchg   DWORD PTR [rax-0x78],esi
   140007001:	ja     0x14000706a
   140007003:	jbe    0x14000700b
   140007005:	push   rdi
   140007006:	jle    0x14000707e
   140007008:	push   rsi
   140007009:	ja     0x140007072
   14000700b:	js     0x140006f95
   14000700d:	mov    BYTE PTR [rax-0x80],bh
   140007010:	add    BYTE PTR [rsi+0x0],dh
   140007013:	(bad)  
   140007014:	je     0x14000708a
   140007016:	rex push rdi
   140007018:	ja     0x14000707f
   14000701a:	and    eax,0x878f6700
   14000701f:	add    BYTE PTR [rax],0x0
   140007022:	(bad)  
   140007023:	add    BYTE PTR [rbx],al
   140007025:	ja     0x140007026
   140007027:	(bad)  
   140007028:	clc    
   140007029:	mov    BYTE PTR [rax-0x77988f89],cl
   14000702f:	add    BYTE PTR [rax],0x0
   140007032:	or     BYTE PTR [rax-0x7070001],cl
   140007038:	clc    
   140007039:	clc    
   14000703a:	mov    BYTE PTR [rax-0x7f877778],cl
   140007040:	or     BYTE PTR [rdi-0x7070001],cl
   140007046:	clc    
   140007047:	clc    
   140007048:	mov    BYTE PTR [rax-0x77777778],cl
   14000704e:	lock add BYTE PTR [rax],al
   140007051:	or     BYTE PTR [rax-0x77777778],cl
   140007057:	js     0x140006fe1
   140007059:	mov    BYTE PTR [rax+0x80],cl
	...
   1400070cf:	add    bh,bh
   1400070d1:	(bad)  
   1400070d2:	(bad)  
   1400070d3:	(bad)  
   1400070d4:	(bad)  
   1400070d5:	inc    DWORD PTR [rax]
   1400070d7:	add    edi,edi
   1400070d9:	inc    BYTE PTR [rax]
   1400070db:	add    edi,edi
   1400070dd:	inc    BYTE PTR [rax]
   1400070df:	add    edi,edi
   1400070e1:	inc    BYTE PTR [rax]
   1400070e3:	add    edi,edi
   1400070e5:	inc    BYTE PTR [rax]
   1400070e7:	add    edi,edi
   1400070e9:	inc    BYTE PTR [rax]
   1400070eb:	add    edi,edi
   1400070ed:	inc    BYTE PTR [rax]
   1400070ef:	add    edi,edi
   1400070f1:	inc    BYTE PTR [rax]
   1400070f3:	add    edi,edi
   1400070f5:	inc    BYTE PTR [rax]
   1400070f7:	add    edi,edi
   1400070f9:	inc    BYTE PTR [rax]
   1400070fb:	add    edi,edi
   1400070fd:	inc    BYTE PTR [rax]
   1400070ff:	add    edi,edi
   140007101:	inc    BYTE PTR [rax]
   140007103:	add    edi,edi
   140007105:	rol    BYTE PTR [rax],0x3
   140007108:	cld    
   140007109:	add    BYTE PTR [rax],al
   14000710b:	jmp    rax
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	(bad)  
   140007110:	add    BYTE PTR [rax],0x0
   140007113:	(bad)  
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rdi],al
   140007118:	add    BYTE PTR [rax],al
   14000711a:	add    BYTE PTR [rcx],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rcx],al
   140007120:	rol    BYTE PTR [rax],0x0
   140007123:	add    eax,edi
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    eax,edi
   140007129:	add    BYTE PTR [rax],al
   14000712b:	add    DWORD PTR [rax-0x1ff90000],eax
   140007131:	add    BYTE PTR [rcx],al
   140007133:	(bad)  
   140007134:	(bad)  
   140007135:	(bad)  
   140007136:	(bad)  
   140007137:	(bad)  
   140007138:	(bad)  
   140007139:	(bad)  
   14000713a:	(bad)  
   14000713b:	(bad)  
   14000713c:	(bad)  
   14000713d:	(bad)  
   14000713e:	(bad)  
   14000713f:	(bad)  
   140007140:	(bad)  
   140007141:	(bad)  
   140007142:	(bad)  
   140007143:	(bad)  
   140007144:	(bad)  
   140007145:	(bad)  
   140007146:	(bad)  
   140007147:	(bad)  
   140007148:	(bad)  
   140007149:	(bad)  
   14000714a:	(bad)  
   14000714b:	(bad)  
   14000714c:	(bad)  
   14000714d:	(bad)  
   14000714e:	(bad)  
   14000714f:	jmp    FWORD PTR [rax]
   140007151:	add    BYTE PTR [rax],al
   140007153:	add    BYTE PTR [rax],dl
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rax],ah
   140007159:	add    BYTE PTR [rax],al
   14000715b:	add    BYTE PTR [rcx],al
   14000715d:	add    BYTE PTR [rax+rax*1],al
   140007160:	add    BYTE PTR [rax],al
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],0x0
	...
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax+0x800000],al
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax+0x8000],0x0
   14000718c:	add    BYTE PTR [rax],0x80
   14000718f:	add    BYTE PTR [rax-0x7fffff80],al
   140007195:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	inc    DWORD PTR [rax]
   1400071a0:	add    bh,bh
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    bh,bh
   1400071a6:	inc    DWORD PTR [rax]
   1400071a8:	inc    DWORD PTR [rax]
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	inc    DWORD PTR [rax]
   1400071ae:	inc    DWORD PTR [rax]
   1400071b0:	(bad)  
   1400071b1:	inc    DWORD PTR [rax]
   1400071b3:	add    bh,bh
   1400071b5:	(bad)  
   1400071b6:	inc    DWORD PTR [rax]
   1400071b8:	add    BYTE PTR [rax],al
   1400071ba:	add    BYTE PTR [rdi],al
   1400071bc:	addr32 push rsi
   1400071be:	ja     0x140007228
   1400071c0:	add    BYTE PTR [rax],al
   1400071c2:	add    BYTE PTR [rax-0x78],bh
   1400071c5:	clc    
   1400071c6:	ja     0x140007150
   1400071c8:	add    BYTE PTR [rax],al
   1400071ca:	add    BYTE PTR [rax+0x88f6880],cl
   1400071d0:	add    BYTE PTR [rax],al
   1400071d2:	add    BYTE PTR [rdi+0x48],bh
   1400071d5:	cmp    al,0x8
   1400071d8:	add    BYTE PTR [rax],al
   1400071da:	add    BYTE PTR [rdi+0x48f86427],cl
   1400071e0:	add    BYTE PTR [rax],al
   1400071e2:	add    BYTE PTR [rdi+0x8880874],cl
   1400071e8:	add    BYTE PTR [rax],al
   1400071ea:	add    BYTE PTR [rdi-0x7880701],al
   1400071f0:	ja     0x140007269
   1400071f2:	ja     0x1400071ec
   1400071f4:	mov    BYTE PTR [rdi+0x77778f88],cl
   1400071fa:	ja     0x140007272
   1400071fc:	ja     0x140007275
   1400071fe:	ja     0x140007200
   140007200:	(bad)  
   140007201:	(bad)  
   140007202:	vpmacssdqh ymm1,ymm14,ymm7,YMMWORD PTR [r15-0x7177f100]
   14000720c:	mov    cs,WORD PTR [rax+0x60000f0]
   140007212:	rex.RB
   140007213:	fs rex.B push 0x77000000
   14000721a:	jae    0x14000728f
   14000721c:	ja     0x140007275
   14000721e:	add    BYTE PTR [rax],al
   140007220:	(bad)  
   140007221:	ja     0x14000729a
   140007223:	ja     0x14000729c
   140007225:	ja     0x140007297
   140007227:	add    BYTE PTR [rdi+0x77787777],al
   14000722d:	ja     0x1400071b6
	...
   140007237:	add    dh,bh
   140007239:	add    BYTE PTR [rax],al
   14000723b:	add    ah,bh
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    ah,bh
   140007241:	add    BYTE PTR [rax],al
   140007243:	add    ah,bh
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    ah,bh
   140007249:	add    BYTE PTR [rax],al
   14000724b:	add    ah,bh
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    ah,bh
	...
   140007259:	add    eax,DWORD PTR [rax]
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    eax,DWORD PTR [rax]
   14000725f:	add    BYTE PTR [rax-0x1ffffff9],al
   140007265:	sldt   WORD PTR [rax]
   140007268:	ror    BYTE PTR [rdi],0x0
   14000726b:	add    BYTE PTR [rax+0x7],al
   140007271:	add    eax,DWORD PTR [rax]
   140007273:	add    bh,bh
   140007275:	inc    DWORD PTR [rax]
   140007277:	add    BYTE PTR [rax],ch
   140007279:	add    BYTE PTR [rax],al
   14000727b:	add    BYTE PTR [rax],dh
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rax+0x0],ah
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    DWORD PTR [rax],eax
   140007286:	or     BYTE PTR [rax],al
   140007288:	add    BYTE PTR [rax],al
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rcx],cl
	...
   140007296:	add    BYTE PTR [rax],al
   140007298:	add    BYTE PTR [rcx],al
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rcx],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	add    BYTE PTR [rax],al
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	add    al,0x1
   1400072a6:	add    al,BYTE PTR [rax]
   1400072a8:	(bad)  
   1400072a9:	add    al,0x0
   1400072ab:	add    BYTE PTR [rsi],al
   1400072ad:	(bad)  
   1400072ae:	(bad)  
   1400072af:	add    BYTE PTR [rcx],cl
   1400072b1:	add    al,0x2
   1400072b3:	add    BYTE PTR [rax],dl
   1400072b5:	sldt   WORD PTR [rax]
   1400072b8:	(bad)  
   1400072b9:	adc    BYTE PTR [rax],al
   1400072bb:	add    BYTE PTR [rip+0x14000f14],dl        # 0x1540081d5
   1400072c1:	adc    al,0x13
   1400072c3:	add    BYTE PTR [rax],bl
   1400072c5:	(bad)  
   1400072c6:	(bad)  
   1400072c7:	add    BYTE PTR [rbx],bl
   1400072c9:	sbb    dl,BYTE PTR [rbx]
   1400072cb:	add    BYTE PTR [rip+0x2100181a],bl        # 0x161008aeb
   1400072d1:	sbb    eax,0x1e240015
   1400072d6:	sbb    DWORD PTR [rax],eax
   1400072d8:	sub    DWORD PTR [rbx],ebx
   1400072da:	sbb    al,BYTE PTR [rax]
   1400072dc:	cs and al,0x4
   1400072df:	add    BYTE PTR [rdi],ch
   1400072e1:	and    BYTE PTR [rax+rax*1],dl
   1400072e4:	and    ah,BYTE PTR [rdx]
   1400072e6:	sbb    al,0x0
   1400072e8:	(bad)  
   1400072e9:	and    ah,BYTE PTR [rax]
   1400072eb:	add    BYTE PTR [rcx],ch
   1400072ed:	(bad)  
   1400072ee:	(bad)  
   1400072ef:	add    BYTE PTR [rbx],ch
   1400072f1:	sub    DWORD PTR [rsi],esp
   1400072f3:	add    BYTE PTR [rsi],ch
   1400072f5:	sub    al,0x2a
   1400072f7:	add    BYTE PTR [rsi],dh
   1400072f9:	and    ah,BYTE PTR [rax+rax*1]
   1400072fc:	xor    BYTE PTR [rsi+riz*1],ch
   1400072ff:	add    BYTE PTR [rsi+rbp*1],bh
   140007302:	and    al,BYTE PTR [rax]
   140007304:	xor    DWORD PTR [rdi],ebp
   140007306:	sub    eax,DWORD PTR [rax]
   140007308:	xor    DWORD PTR [rax],esi
   14000730a:	(bad)  
   14000730b:	add    BYTE PTR [rbx],dh
   14000730d:	xor    ch,BYTE PTR [rax+rax*1]
   140007310:	cmp    BYTE PTR [rcx+rbp*1],dh
   140007313:	add    BYTE PTR [rcx],bh
   140007315:	(bad)  
   140007316:	xor    al,0x0
   140007318:	cmp    al,0x3b
   14000731a:	xor    eax,0x16304600
   14000731f:	add    BYTE PTR [rbx+0x35],cl
   140007322:	(bad)  
   140007323:	add    BYTE PTR [rbx+0x3c],cl
   140007326:	(bad)  
   140007327:	add    BYTE PTR [rdi+0x36],cl
   14000732a:	(bad)  
   14000732b:	add    BYTE PTR [rax+0x36],bl
   14000732e:	sbb    al,BYTE PTR [rax]
   140007330:	rex.RX
   140007331:	and    BYTE PTR ss:[rax],al
   140007334:	rex.WB xor al,0x21
   140007337:	add    BYTE PTR [rdx+0x2f],cl
   14000733a:	xor    BYTE PTR [rax],al
   14000733c:	rex.X xor esi,DWORD PTR [rdx]
   14000733f:	add    BYTE PTR [rbx+0x3c],al
   140007342:	xor    al,0x0
   140007344:	push   rsi
   140007345:	xor    edi,DWORD PTR [rcx]
   140007347:	add    BYTE PTR [rax+0x45],ah
   14000734a:	(bad)  
   14000734b:	add    BYTE PTR [rdx+0x46],bl
   14000734e:	and    eax,0x34444d00
   140007353:	add    BYTE PTR [rdx+0x45],al
   140007356:	cmp    al,0x0
   140007358:	jb     0x1400073a6
   14000735a:	(bad)  
   14000735b:	add    BYTE PTR [rax+0x52],dh
   14000735e:	sub    eax,0x36576800
   140007363:	add    BYTE PTR [rsi+0x59],dh
   140007366:	add    BYTE PTR ds:[rbx+rax*2+0x40],al
   14000736b:	add    BYTE PTR [rax+0x47],cl
   14000736e:	rex.RX add BYTE PTR [rsi+0x4a],r9b
   140007372:	add    BYTE PTR [r14+0x4b],r9b
   140007376:	rex.WXB add BYTE PTR [r10+0x4b],dl
   14000737a:	add    BYTE PTR [r11+0x4e],r10b
   14000737e:	rex.WXB add BYTE PTR [r15+0x52],bl
   140007382:	rex.RXB add BYTE PTR [r11+0x50],r10b
   140007386:	rex.WX add BYTE PTR [rbp+0x53],dl
   14000738a:	push   rdx
   14000738b:	add    BYTE PTR [rax+0x56],bl
   14000738e:	push   rcx
   14000738f:	add    BYTE PTR [rbx+rbx*2+0x54],bl
   140007393:	add    BYTE PTR [rsi+0x5c],bl
   140007396:	pop    rdx
   140007397:	add    BYTE PTR [rbx+0x52],ah
   14000739a:	rex.X add BYTE PTR [rcx+0x5b],spl
   14000739e:	add    BYTE PTR [r13+0x53],spl
   1400073a2:	rex.WX add BYTE PTR [rdi+0x59],spl
   1400073a6:	rex.WRB add BYTE PTR [r8+0x5a],r13b
   1400073aa:	rex.WRX add BYTE PTR [rsi+0x5c],r12b
   1400073ae:	push   rsp
   1400073af:	add    BYTE PTR [rsi+rbx*2+0x51],ch
   1400073b3:	add    BYTE PTR [rdi+0x56],bh
   1400073b6:	push   rsi
   1400073b7:	add    BYTE PTR [rdx+rbx*2+0x50],bh
   1400073bb:	add    BYTE PTR [rbp+0x63],ch
   1400073be:	add    BYTE PTR [rdx+0x61],r12b
   1400073c2:	pop    rax
   1400073c3:	add    BYTE PTR [rbx+0x63],dh
   1400073c6:	push   rbx
   1400073c7:	add    BYTE PTR [rbx+0x63],dh
   1400073ca:	pop    rax
   1400073cb:	add    BYTE PTR [rdi+0x69],dh
   1400073ce:	pop    rsi
   1400073cf:	add    BYTE PTR [rsp+rbp*2+0x5d],bh
   1400073d3:	add    BYTE PTR [rsi+riz*2+0x63],ch
   1400073d7:	add    BYTE PTR [rbx+0x69],ch
   1400073da:	add    BYTE PTR fs:[rcx+0x64],bh
   1400073de:	movsxd eax,DWORD PTR [rax]
   1400073e0:	je     0x14000744e
   1400073e2:	data16 add BYTE PTR [rax+rsi*2+0x65],bh
   1400073e7:	add    BYTE PTR [rbp+0x71],dh
   1400073ea:	push   0x0
   1400073ec:	jns    0x14000745e
   1400073ee:	push   0x0
   1400073f0:	jnp    0x14000746a
   1400073f2:	outs   dx,DWORD PTR ds:[rsi]
   1400073f3:	add    BYTE PTR [rbp+rsi*2+0x71],bh
   1400073f7:	add    BYTE PTR [rbx+0x79],bh
   1400073fa:	jb     0x1400073fc
   1400073fc:	jge    0x14000747b
   1400073fe:	jp     0x140007400
   140007400:	(bad)  
   140007401:	push   rcx
   140007402:	and    eax,DWORD PTR [rax]
   140007404:	test   BYTE PTR [rdi+0x2f],ah
   140007407:	add    BYTE PTR [rbx-0x79ffb3b0],al
   14000740d:	rex.WRX pop rcx
   14000740f:	add    BYTE PTR [rsi+rbx*2+0x6b890055],dl
   140007416:	pop    rdi
   140007417:	add    BYTE PTR [rbx-0x6effa296],dl
   14000741d:	rex.WRXB movsxd r8,DWORD PTR [r8]
   140007420:	xchg   ecx,eax
   140007421:	data16 add BYTE PTR [ebp-0x7aff9692],bl
   140007429:	jae    0x14000748e
   14000742b:	add    BYTE PTR [rdi-0x75ff978a],al
   140007431:	jp     0x14000749f
   140007433:	add    BYTE PTR [rax-0x60ff9182],dl
   140007439:	fs js  0x14000743c
   14000743c:	(bad)  
   14000743d:	jp     0x1400074b5
   14000743f:	add    BYTE PTR [rax-0x7eff8b82],cl
   140007445:	jg     0x1400074c2
   140007447:	add    BYTE PTR [rsi+rbp*2+0x68a90065],ch
   14000744e:	imul   eax,DWORD PTR [rax],0xffffffa9
   140007451:	jle    0x1400074b8
   140007453:	add    BYTE PTR [rcx-0x46ff918f],ch
   140007459:	ins    BYTE PTR es:[rdi],dx
   14000745a:	jo     0x14000745c
   14000745c:	mov    bl,0x6c
   14000745e:	js     0x140007460
   140007460:	lahf   
   140007461:	adc    BYTE PTR [rcx+0x0],0xa5
   140007465:	mov    BYTE PTR [rbp+0x0],al
   140007468:	mov    eax,DWORD PTR [rax-0x7f73ff89]
   14000746e:	jbe    0x140007470
   140007470:	test   BYTE PTR [rdx-0x7b73ff84],al
   140007476:	jge    0x140007478
   140007478:	xchg   BYTE PTR [rax-0x7777ff83],cl
   14000747e:	jge    0x140007480
   140007480:	cdq    
   140007481:	xchg   DWORD PTR [rdi+0x0],esi
   140007484:	xchg   ebx,eax
   140007485:	mov    BYTE PTR [rax+0x0],bh
   140007488:	fwait
   140007489:	mov    edi,DWORD PTR [rax+rax*1-0x5b]
   14000748d:	mov    DWORD PTR [rbx+0x0],ebp
   140007490:	mov    ebx,0xbf006f94
   140007495:	pushf  
   140007496:	jp     0x140007498
   140007498:	rol    BYTE PTR [rdi-0x623fffa7],0x63
   14000749f:	add    ah,al
   1400074a1:	xchg   ebx,eax
   1400074a2:	push   0x0
   1400074a4:	leave  
   1400074a5:	sahf   
   1400074a6:	ins    BYTE PTR es:[rdi],dx
   1400074a7:	add    dl,dl
   1400074a9:	(bad)  
   1400074aa:	jg     0x1400074ac
   1400074ac:	retf   0x7690
   1400074af:	add    bh,dl
   1400074b1:	sahf   
   1400074b2:	je     0x1400074b4
   1400074b4:	rcl    BYTE PTR [rbp-0x6824ff82],1
   1400074ba:	jns    0x1400074bc
   1400074bc:	fild   QWORD PTR [rcx-0x5f24ff94]
   1400074c2:	jno    0x1400074c4
   1400074c4:	sahf   
   1400074c5:	jns    0x140007447
   1400074c7:	add    BYTE PTR [rbx-0x3fff7f96],bh
   1400074cd:	outs   dx,BYTE PTR ds:[rsi]
   1400074ce:	add    DWORD PTR [rax],0x828485
   1400074d4:	mov    DWORD PTR [rsi-0x7678ff7f],eax
   1400074da:	(bad)  
   1400074db:	add    BYTE PTR [rdx+rcx*4-0x7977ff7d],cl
   1400074e2:	mov    BYTE PTR [rax],al
   1400074e4:	mov    cs,WORD PTR [rbx+rcx*4-0x7b786700]
   1400074eb:	add    BYTE PTR [rcx-0x68ff7d76],dl
   1400074f1:	mov    eax,DWORD PTR [rax-0x78747000]
   1400074f7:	add    BYTE PTR [rax-0x6aff7972],dl
   1400074fd:	lea    eax,[rax+rax*1+0x838d99]
   140007504:	xchg   ecx,eax
   140007505:	mov    cs,WORD PTR [rdx-0x786f6500]
   14000750b:	add    BYTE PTR [rbp-0x6bff7970],bl
   140007511:	xchg   edx,eax
   140007512:	mov    WORD PTR [rax],es
   140007514:	fwait
   140007515:	xchg   esp,eax
   140007516:	mov    WORD PTR [rax],es
   140007518:	(bad)  
   140007519:	xchg   esi,eax
   14000751a:	xchg   ecx,eax
   14000751b:	add    BYTE PTR [rcx+rbx*4-0x6362ff6d],bl
   140007522:	cdq    
   140007523:	add    BYTE PTR [rax-0x5cff7f71],ah
   140007529:	xchg   ebx,eax
   14000752a:	test   BYTE PTR [rax],al
   14000752c:	movabs eax,ds:0xa8008b98a6008b95
   140007535:	cwde   
   140007536:	mov    WORD PTR [rax],es
   140007538:	movabs ds:0xa100909aa6009098,al
   140007541:	fwait
   140007542:	xchg   esi,eax
   140007543:	add    BYTE PTR [rsi-0x5eff6966],ah
   140007549:	popf   
   14000754a:	xchg   edi,eax
   14000754b:	add    BYTE PTR [rbp+rbx*4-0x6254ff69],ah
   140007552:	xchg   edx,eax
   140007553:	add    BYTE PTR [rcx-0x61ff6662],ah
   140007559:	movabs al,ds:0xa1ad0086a5b90097
   140007562:	xchg   esp,eax
   140007563:	add    BYTE PTR [rbx-0x56ff635f],ah
   140007569:	movabs ds:0xa5b10095a3b2009d,eax
   140007572:	cdq    
   140007573:	add    BYTE PTR [rbx-0x56ff6157],dh
   140007579:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000757a:	movabs ds:0xa1a8aa00a2a7ad00,al
   140007583:	add    BYTE PTR [rbp-0x54ff5c58],ch
   140007589:	stos   BYTE PTR es:[rdi],al
   14000758a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000758b:	add    BYTE PTR [rcx+rbp*4-0x5351ff5b],ch
   140007592:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007593:	add    BYTE PTR [rsi-0x4cff5653],ch
   140007599:	stos   DWORD PTR es:[rdi],eax
   14000759a:	movabs ds:0xa9aeb000a3aeba00,eax
   1400075a3:	add    BYTE PTR [rbp-0x4cff5a50],bh
   1400075a9:	mov    cl,0xad
   1400075ab:	add    BYTE PTR [rbx-0x4aff524c],bh
   1400075b1:	mov    ah,0xb1
   1400075b3:	add    BYTE PTR [rdx-0x48ff4e4a],bh
   1400075b9:	mov    ecx,0xbabb00b1
   1400075be:	mov    ch,0x0
   1400075c0:	mov    dh,0xb8
   1400075c2:	mov    edx,0xb9bcbd00
   1400075c7:	add    ch,cl
   1400075c9:	sahf   
   1400075ca:	test   BYTE PTR [rax],al
   1400075cc:	fcom   DWORD PTR [rax-0x5535ff7c]
   1400075d2:	mov    DWORD PTR [rax],eax
   1400075d4:	(bad)  
   1400075d5:	mov    ch,0xa5
   1400075d7:	add    ah,dl
   1400075d9:	mov    edi,0xbbc400a9
   1400075de:	mov    dl,0x0
   1400075e0:	leave  
   1400075e1:	mov    esi,0xbec100b6
   1400075e6:	mov    edx,0xbac0be00
   1400075eb:	add    al,bh
   1400075ed:	iret   
   1400075ee:	mov    eax,DWORD PTR [rax]
   1400075f0:	enter  0xb7c0,0x0
   1400075f4:	ret    0xbdc2
   1400075f7:	add    bl,cl
   1400075f9:	ret    
   1400075fa:	mov    esp,0xb5c3d000
   1400075ff:	add    al,dl
   140007601:	(bad)  
   140007602:	mov    ebx,0xbdc8d300
   140007607:	add    ah,al
   140007609:	(bad)
   14000760d:	mov    cl,0x0
   140007610:	retf   0xc5c9
   140007613:	add    bh,al
   140007615:	int    0xc9
   140007617:	add    ch,cl
   140007619:	int3   
   14000761a:	leave  
   14000761b:	add    al,dl
   14000761d:	mov    eax,0xc3cad100
   140007623:	add    cl,dl
   140007625:	(bad)  
   140007626:	retf   0xd300
   140007629:	ror    ebp,1
   14000762b:	add    bl,bl
   14000762d:	(bad)  
   14000762e:	iret   
   14000762f:	add    ah,dl
   140007631:	(bad)  
   140007632:	rol    DWORD PTR [rax],1
   140007634:	fcmovbe st,st(7)
   140007636:	rol    DWORD PTR [rax],cl
   140007638:	(bad)  
   140007639:	fcmovbe st,st(7)
   14000763b:	add    bl,bl
   14000763d:	(bad)  
   14000763f:	add    ah,bl
   140007641:	(bad)  
   140007643:	add    cl,ah
   140007645:	fcmovnbe st,st(6)
   140007647:	add    cl,ah
   140007649:	(bad)  
   14000764b:	add    bh,bl
   14000764d:	loope  0x14000762d
   14000764f:	add    bl,ah
   140007651:	loope  0x140007631
   140007653:	add    cl,ch
   140007655:	jrcxz  0x140007633
   140007657:	add    ah,ah
   140007659:	in     al,0xe2
   14000765b:	add    cl,ch
   14000765d:	out    0xe3,al
   14000765f:	add    ch,ah
   140007661:	jmp    0x128ea774d
   140007666:	in     eax,0x0
   140007668:	in     al,dx
   140007669:	in     al,dx
   14000766a:	(bad)  
   14000766b:	add    al,dh
   14000766d:	in     eax,dx
   14000766e:	jmp    0x140007670
   140007670:	in     eax,dx
   140007671:	icebp  
   140007672:	out    dx,al
   140007673:	add    bl,dh
   140007675:	icebp  
   140007676:	out    dx,al
   140007677:	add    ah,ch
   140007679:	cmc    
   14000767a:	icebp  
   14000767b:	add    bl,dh
   14000767d:	repz repnz add dl,dh
   140007681:	stc    
   140007682:	test   BYTE PTR [rax],0xf9
   140007685:	clc    
   140007686:	test   DWORD PTR [rax],0xf8f7f3
   14000768c:	cmc    
   14000768d:	stc    
   14000768e:	clc    
   14000768f:	add    cl,bh
   140007691:	stc    
   140007692:	stc    
   140007693:	add    bl,bh
   140007695:	cld    
   140007696:	cli    
   140007697:	add    bl,bh
   140007699:	(bad)  
   14000769a:	std    
   14000769b:	add    bh,bh
   14000769d:	(bad)  
   14000769e:	inc    DWORD PTR [rax]
	...
   140007718:	add    BYTE PTR [rdx+0x42],dh
   14000771b:	rex.X
   14000771c:	rex.X
   14000771d:	rex.X
   14000771e:	rex.X
   14000771f:	rex.X
   140007720:	rex.X
   140007721:	rex.X
   140007722:	rex.X
   140007723:	rex.X
   140007724:	rex.X
   140007725:	rex.X
   140007726:	rex.X
   140007727:	rex.X
   140007728:	rex.X
   140007729:	rex.X
   14000772a:	rex.X
   14000772b:	rex.B push 0x0
	...
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rdx+rbx*4-0x3f465449],dl
   14000774e:	mov    esi,0x9898a6b2
   140007753:	cwde   
   140007754:	xchg   esp,eax
   140007755:	xchg   esp,eax
   140007756:	(bad)  
   140007757:	xchg   esp,eax
   140007758:	jne    0x1400077cf
   14000775a:	jne    0x1400077d1
   14000775c:	push   0x98
	...
   140007775:	add    BYTE PTR [rax],al
   140007777:	add    BYTE PTR [rbp-0x31],ah
   14000777a:	hlt    
   14000777b:	out    dx,al
   14000777c:	imul   edi
   14000777e:	loopne 0x140007750
   140007780:	shr    DWORD PTR [rax+rbx*4-0x3b3b4150],0xc2
   140007788:	ret    0xdac4
   14000778b:	fidivr WORD PTR [rcx+0x65]
	...
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rcx-0x130b0b3b],ah
   1400077ad:	iret   
   1400077ae:	movabs ds:0xc0aba14c44647a78,al
   1400077b7:	mov    ecx,0xe4dedbc4
   1400077bc:	(bad)  
	...
   1400077d7:	add    BYTE PTR [rdx-0x300e082a],ah
   1400077dd:	shr    cl,1
   1400077df:	icebp  
   1400077e0:	repz jmp 0xe249bc99
   1400077e6:	ret    
   1400077e7:	mov    bh,0xe2
   1400077e9:	fdiv   QWORD PTR [rdi]
   1400077eb:	cmp    ch,BYTE PTR [rax-0x5f]
	...
   140007806:	add    BYTE PTR [rax],al
   140007808:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007809:	loope  0x140007804
   14000780b:	jmp    0xd9d657e6
   140007810:	nop
   140007811:	ret    0xa6e1
   140007814:	rex.WXB
   140007815:	fs ret 
   140007817:	shr    al,0xdc
   14000781a:	or     eax,0xa24d0b
	...
   140007837:	add    BYTE PTR [rax-0x1220081d],dh
   14000783d:	(bad)  
   14000783e:	push   rax
   14000783f:	sbb    BYTE PTR [rip+0xffffffff98e3a049],ah        # 0xd8e4188e
   140007845:	rex.WR iretq 
   140007847:	shr    al,0xdb
   14000784a:	adc    eax,0xb05315
	...
   140007867:	add    BYTE PTR [rbx-0x12290617],dh
   14000786d:	sahf   
   14000786e:	ds jl  0x140007844
   140007871:	jo     0x14000788c
   140007873:	in     al,dx
   140007874:	mov    esi,0xe8c5cf51
   140007879:	ficom  WORD PTR [rdi]
   14000787b:	adc    eax,0xb053
	...
   140007898:	mov    edi,0xfcdff7ef
   14000789d:	cdq    
   14000789e:	and    eax,0x82f877e
   1400078a3:	in     al,0xbe
   1400078a5:	push   rcx
   1400078a6:	(bad)  
   1400078a7:	(bad)
   1400078aa:	adc    eax,0xb35313
	...
   1400078c7:	add    cl,al
   1400078c9:	in     al,dx
   1400078ca:	stc    
   1400078cb:	loopne 0x1400078c6
   1400078cd:	sar    BYTE PTR [rax],0x2e
   1400078d0:	and    ebx,DWORD PTR [rax]
   1400078d2:	cmp    eax,0xe068b0e1
   1400078d7:	leave  
   1400078d8:	in     al,dx
   1400078d9:	ficom  WORD PTR [rdi]
   1400078db:	adc    eax,0xb355
	...
   1400078f8:	iret   
   1400078f9:	in     al,dx
   1400078fa:	mul    eax
   1400078fc:	loopne 0x1400078df
   1400078fe:	mov    cl,0x37
   140007900:	adc    bh,BYTE PTR [rip+0xffffffffa6a5d6d5]        # 0xe6a64fdb
   140007906:	loopne 0x1400078dd
   140007908:	(bad)  
   140007909:	fcom   QWORD PTR [rdi]
   14000790b:	adc    dl,BYTE PTR [rbx-0x41]
	...
   140007926:	add    BYTE PTR [rax],al
   140007928:	shr    cl,1
   14000792a:	cld    
   14000792b:	out    dx,eax
   14000792c:	rol    bl,0xe9
   14000792f:	in     al,dx
   140007930:	call   0xe6a25b21
   140007935:	shl    ah,1
   140007937:	enter  0xc8e4,0xe
   14000793b:	add    dh,BYTE PTR [rsi]
   14000793d:	ret    
	...
   140007956:	add    BYTE PTR [rax],al
   140007958:	(bad)  
   140007959:	out    dx,eax
   14000795a:	cld    
   14000795b:	cld    
   14000795c:	jrcxz  0x140007923
   14000795e:	iret   
   14000795f:	(bad)  
   140007960:	(bad)  
   140007962:	mov    edi,0x62d6e3b3
   140007967:	jge    0x140007937
   140007969:	(bad)  
   14000796a:	xchg   ecx,eax
   14000796b:	nop
   14000796c:	mov    dl,0xd0
	...
   140007986:	add    BYTE PTR [rax],al
   140007988:	(bad)  
   140007989:	(bad)  
   14000798b:	cld    
   14000798c:	icebp  
   14000798d:	loope  0x14000794f
   14000798f:	mov    bl,0xb0
   140007991:	mov    al,0xbf
   140007993:	jrcxz  0x140007991
   140007995:	(bad)  
   140007996:	and    bl,BYTE PTR [rax+0x7b]
   140007999:	enter  0xfce8,0xf3
   14000799d:	loopne 0x14000799f
	...
   1400079b7:	add    al,dl
   1400079b9:	cdq    
   1400079ba:	mov    WORD PTR [rcx-0xb08161c],?
   1400079c0:	out    dx,eax
   1400079c1:	icebp  
   1400079c2:	jmp    0x193e473af
   1400079c7:	adc    BYTE PTR [rbx-0x26],al
   1400079ca:	(bad)  
   1400079cc:	out    0xe0,eax
	...
   1400079e6:	add    BYTE PTR [rax],al
   1400079e8:	mov    edi,0xfa693450
   1400079ed:	cld    
   1400079ee:	cld    
   1400079ef:	cld    
   1400079f0:	cld    
   1400079f1:	cld    
   1400079f2:	cld    
   1400079f3:	cld    
   1400079f4:	cld    
   1400079f5:	imul   ecx
   1400079f7:	fsubrp st(4),st
   1400079f9:	hlt    
   1400079fa:	hlt    
   1400079fb:	imul   esi
   1400079fd:	loopne 0x1400079ff
	...
   140007a13:	add    BYTE PTR [rsi-0x1c4e5555],bl
   140007a19:	pushf  
   140007a1a:	nop
   140007a1b:	cdq    
   140007a1c:	out    dx,eax
   140007a1d:	out    dx,eax
   140007a1e:	repz repz repz repz repz repz out dx,eax
   140007a25:	hlt    
   140007a26:	out    dx,eax
   140007a27:	out    dx,al
   140007a28:	in     al,dx
   140007a29:	jmp    0x129ea671a
	...
   140007a3e:	add    BYTE PTR [rsi+rbx*4-0x12121f3f],bl
   140007a45:	(bad)  
   140007a46:	mov    bh,0xb1
   140007a48:	hlt    
   140007a49:	(bad)  
   140007a4b:	loope  0x140007a2d
   140007a4d:	loopne 0x140007a2e
   140007a4f:	(bad)  
   140007a51:	(bad)  
   140007a53:	(bad)  
   140007a55:	(bad)  
   140007a57:	(bad)  
   140007a59:	(bad)  
   140007a5b:	loope  0x140007a40
	...
   140007a69:	add    BYTE PTR [rax],al
   140007a6b:	pushf  
   140007a6c:	stos   DWORD PTR es:[rdi],eax
   140007a6d:	mov    edi,0xd0dfdfd7
   140007a72:	ret    
   140007a73:	mov    edi,0x999c9eb7
   140007a78:	sahf   
   140007a79:	mov    dl,0xbd
   140007a7b:	rcr    BYTE PTR [rcx-0x708badb0],0x57
	...
   140007a96:	add    BYTE PTR [rdx-0x32324c67],ch
   140007a9c:	shl    DWORD PTR [rbx-0x55676754],0xb7
   140007aa3:	(bad)  
   140007aa4:	(bad)  
   140007aa5:	(bad)  
   140007aa7:	out    dx,al
   140007aa8:	idiv   esp
   140007aaa:	test   ecx,0x5256b9da
   140007ab0:	push   rsi
   140007ab1:	xchg   esp,eax
   140007ab2:	mov    WORD PTR [rax+rax*1+0x0],?
	...
   140007ac2:	add    BYTE PTR [rax],al
   140007ac4:	stos   BYTE PTR es:[rdi],al
   140007ac5:	movabs ds:0xb7949aa6a1a1b3b0,eax
   140007ace:	(bad)  
   140007ad0:	out    dx,al
   140007ad1:	hlt    
   140007ad2:	hlt    
   140007ad3:	div    esp
   140007ad5:	div    edi
   140007ad7:	div    edi
   140007ad9:	cld    
   140007ada:	test   edx,0xaadad5c0
   140007ae0:	push   rsi
   140007ae1:	push   rsi
   140007ae2:	je     0x140007a80
   140007ae4:	(bad)  
   140007ae5:	mov    WORD PTR [rax],es
	...
   140007aef:	add    BYTE PTR [rax],al
   140007af1:	add    bl,al
   140007af3:	mov    bl,0xa1
   140007af5:	fs rex.WR jb 0x140007a9c
   140007af9:	mov    dl,0xb9
   140007afb:	add    al,BYTE PTR [rdx]
   140007afd:	cmp    al,0xe8
   140007aff:	call   0x133f56ff8
   140007b04:	cld    
   140007b05:	cld    
   140007b06:	cld    
   140007b07:	cld    
   140007b08:	cld    
   140007b09:	cld    
   140007b0a:	cld    
   140007b0b:	hlt    
   140007b0c:	(bad)  
   140007b0d:	rol    dh,0xda
   140007b10:	ror    BYTE PTR [rsi-0x55708baa],0x74
   140007b17:	mov    WORD PTR [rax],es
	...
   140007b21:	ret    
   140007b22:	movsxd ecx,DWORD PTR [rdx+0x51]
   140007b25:	sahf   
   140007b26:	(bad)  
   140007b27:	out    dx,eax
   140007b28:	in     al,0xd5
   140007b2a:	rcl    BYTE PTR [rsi-0x64],0xdc
   140007b2e:	call   0x137f47021
   140007b33:	idiv   edx
   140007b35:	cld    
   140007b36:	sti    
   140007b37:	clc    
   140007b38:	div    al
   140007b3a:	lock cld 
   140007b3c:	cld    
   140007b3d:	lock (bad) 
   140007b3f:	rcl    ch,0xd5
   140007b42:	mov    dl,0x74
   140007b44:	je     0x140007bbd
   140007b46:	pushf  
   140007b47:	stos   BYTE PTR es:[rdi],al
   140007b48:	imul   eax,DWORD PTR [rax],0x0
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	add    BYTE PTR [rdi-0x112a3b5d],cl
   140007b56:	imul   ecx
   140007b58:	in     al,0xe2
   140007b5a:	in     al,0xee
   140007b5c:	hlt    
   140007b5d:	out    dx,al
   140007b5e:	hlt    
   140007b5f:	icebp  
   140007b60:	call   0x11adb5947
   140007b65:	(bad)  
   140007b66:	mov    cl,0x89
   140007b68:	pop    di
   140007b6a:	pop    rbx
   140007b6b:	fwait
   140007b6c:	call   0x11af17868
   140007b71:	rcl    ch,0xc6
   140007b74:	pushf  
   140007b75:	(bad)  
   140007b76:	(bad)  
   140007b77:	(bad)
   140007b7b:	add    BYTE PTR [rax],al
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rax],al
   140007b81:	leave  
   140007b82:	(bad)  
   140007b84:	jrcxz  0x140007b80
   140007b86:	cli    
   140007b87:	imul   esi
   140007b89:	call   0x106dd6372
   140007b8e:	stos   BYTE PTR es:[rdi],al
   140007b8f:	mov    cs,WORD PTR [rax+rbp*2+0x6a6d604f]
   140007b96:	outs   dx,BYTE PTR ds:[rsi]
   140007b97:	mov    ecx,DWORD PTR [rdx+0x5d5c6a6f]
   140007b9d:	stos   BYTE PTR es:[rdi],al
   140007b9e:	out    0xfc,al
   140007ba0:	cld    
   140007ba1:	hlt    
   140007ba2:	fcmovb st,st(6)
   140007ba4:	leave  
   140007ba5:	mov    dh,0x9c
   140007ba7:	pushf  
   140007ba8:	pushf  
   140007ba9:	pushf  
   140007baa:	mov    dl,0x91
   140007bac:	je     0x140007bae
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	call   0x124dd587b
   140007bb5:	loop   0x140007b8c
   140007bb7:	(bad)  
   140007bb8:	fcmovnb st,st(4)
   140007bba:	push   rcx
   140007bbb:	cmp    DWORD PTR [rsp+rsi*1],esi
   140007bbe:	(bad)  
   140007bbf:	(bad)  
   140007bc0:	sub    DWORD PTR [rdx+0x6a],ebx
   140007bc3:	add    DWORD PTR [rax+rcx*4-0x7a7d347a],0xffffffca
   140007bcb:	int3   
   140007bcc:	scas   eax,DWORD PTR es:[rdi]
   140007bcd:	movabs ds:0xd5ddeef7e8c29479,al
   140007bd6:	(bad)  
   140007bd7:	mov    dl,0x9c
   140007bd9:	stos   BYTE PTR es:[rdi],al
   140007bda:	pushf  
   140007bdb:	mov    dl,0xb9
   140007bdd:	je     0x140007bdf
   140007bdf:	add    BYTE PTR [rax],al
   140007be1:	mov    ecx,0x56568fab
   140007be6:	sbb    rcx,QWORD PTR [rbx]
   140007be9:	cmp    DWORD PTR [rsp+rsi*1+0x6145260e],ecx
   140007bf0:	ins    BYTE PTR es:[rdi],dx
   140007bf1:	add    BYTE PTR [rcx+0x2a59717f],0x1f
   140007bf8:	and    BYTE PTR [rbx],ch
   140007bfa:	xor    BYTE PTR [rdi+0x47],al
   140007bfd:	(bad)  
   140007bfe:	sub    al,0x28
   140007c00:	rex.WRX xchg rcx,rax
   140007c02:	(bad)  
   140007c03:	(bad)  
   140007c04:	in     al,dx
   140007c05:	out    dx,al
   140007c06:	(bad)  
   140007c08:	shl    BYTE PTR [rax-0x49495f60],0x0
   140007c0f:	add    BYTE PTR [rax],al
   140007c11:	add    ah,bl
   140007c13:	je     0x140007c47
   140007c15:	(bad)  
   140007c16:	adc    eax,0x1a020203
   140007c1b:	mov    ?,WORD PTR [rdi+0x40]
   140007c1e:	rex.RX pop rsi
   140007c20:	xor    DWORD PTR [rax],esp
   140007c22:	clts   
   140007c24:	add    eax,0x3c481b0a
   140007c29:	sub    eax,0x141b151b
   140007c2e:	or     dl,BYTE PTR [rip+0xa030b34]        # 0x14a038768
   140007c34:	rex.XB mov r10b,0xe6
   140007c37:	out    dx,al
   140007c38:	in     al,0xda
   140007c3a:	shl    BYTE PTR [rdx+0xc0b9],0x0
   140007c41:	add    BYTE PTR [rax],al
   140007c43:	add    BYTE PTR [rax],al
   140007c45:	mov    ebp,0x12151d3c
   140007c4a:	add    al,BYTE PTR [rdx]
   140007c4c:	adc    cl,BYTE PTR [rdx]
   140007c4e:	add    eax,DWORD PTR [rbx]
   140007c50:	or     al,0x1c
   140007c52:	cmp    al,0xaa
   140007c54:	fdivrp st(4),st
   140007c56:	cld    
   140007c57:	cld    
   140007c58:	call   0x109be4237
   140007c5d:	loop   0x140007c3d
   140007c5f:	movabs al,ds:0x561b02020209133d
   140007c68:	fsub   st(4),st
   140007c6a:	out    0xd5,al
   140007c6c:	(bad)  
   140007c6d:	(bad)  
	...
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	(bad)  
   140007c79:	sub    eax,0x39140a02
   140007c7e:	jne    0x140007c46
   140007c80:	out    dx,eax
   140007c81:	stc    
   140007c82:	cld    
   140007c83:	cld    
   140007c84:	cld    
   140007c85:	cld    
   140007c86:	cld    
   140007c87:	cld    
   140007c88:	div    ecx
   140007c8a:	call   0x109c7466b
   140007c8f:	(bad)  
   140007c90:	(bad)  
   140007c91:	fcmovu st,st(2)
   140007c93:	leave  
   140007c94:	movabs al,ds:0xe2c9b9563b2d334e
   140007c9d:	mov    dh,0x0
	...
   140007ca7:	add    al,ch
   140007ca9:	rcl    ch,0xec
   140007cac:	cld    
   140007cad:	cld    
   140007cae:	cld    
   140007caf:	cld    
   140007cb0:	cld    
   140007cb1:	cld    
   140007cb2:	cld    
   140007cb3:	div    edi
   140007cb5:	hlt    
   140007cb6:	out    dx,eax
   140007cb7:	out    dx,al
   140007cb8:	in     al,dx
   140007cb9:	in     al,dx
   140007cba:	in     al,dx
   140007cbb:	out    dx,al
   140007cbc:	call   0x11ae365a9
   140007cc1:	fcmovu st,st(3)
   140007cc3:	(bad)  
   140007cc5:	fcmovnu st,st(4)
   140007cc7:	loope  0x140007ca5
   140007cc9:	(bad)  
   140007cca:	rcl    ch,0xde
   140007ccd:	leave  
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	add    BYTE PTR [rax],al
   140007cd2:	add    ch,dl
   140007cd4:	fcmovu st,st(6)
   140007cd6:	in     al,0xe7
   140007cd8:	call   0x13cfd79d9
   140007cdd:	cli    
   140007cde:	div    esp
   140007ce0:	hlt    
   140007ce1:	out    dx,eax
   140007ce2:	out    dx,al
   140007ce3:	out    dx,al
   140007ce4:	in     al,dx
   140007ce5:	call   0x124e564d2
   140007cea:	loop   0x140007cca
   140007cec:	(bad)  
   140007cee:	(bad)  
   140007cf0:	(bad)  
   140007cf2:	(bad)  
   140007cf4:	(bad)  
   140007cf6:	fcmovbe st,st(5)
   140007cf8:	(bad)  
   140007cf9:	leave  
   140007cfa:	(bad)  
   140007cfb:	leave  
   140007cfc:	call   0x140007d01
   140007d01:	add    BYTE PTR [rax],al
   140007d03:	(bad)  
   140007d04:	fsubp  st(6),st
   140007d06:	repz div edi
   140007d09:	div    edi
   140007d0b:	cmc    
   140007d0c:	hlt    
   140007d0d:	hlt    
   140007d0e:	out    dx,eax
   140007d0f:	out    dx,al
   140007d10:	in     al,dx
   140007d11:	in     al,dx
   140007d12:	call   0x121e561ff
   140007d17:	loope  0x140007cf7
   140007d19:	(bad)  
   140007d1b:	(bad)  
   140007d1d:	fcmovu st,st(2)
   140007d1f:	fcmovbe st,st(5)
   140007d21:	(bad)  
   140007d22:	leave  
   140007d23:	(bad)  
   140007d24:	(bad)  
   140007d25:	loope  0x140007d0b
	...
   140007d33:	add    BYTE PTR [rax],al
   140007d35:	add    ah,ah
   140007d37:	fsubrp st(4),st
   140007d39:	(bad)  
   140007d3b:	(bad)  
   140007d3d:	loope  0x140007d23
   140007d3f:	call   0x11ee36227
   140007d44:	(bad)  
   140007d46:	(bad)  
   140007d48:	fcmovnu st,st(2)
   140007d4a:	fcmovbe st,st(5)
   140007d4c:	(bad)  
   140007d4d:	(bad)  
   140007d4e:	fcmovu st,st(6)
   140007d50:	in     al,0x0
	...
   140007d72:	in     al,0xdc
   140007d74:	(bad)  
   140007d75:	ret    0xc6c2
   140007d78:	(bad)  
	...
   140007f9e:	add    BYTE PTR [rax],al
   140007fa0:	(bad)  
   140007fa1:	(bad)  
   140007fa2:	(bad)  
   140007fa3:	(bad)  
   140007fa4:	(bad)  
   140007fa5:	inc    DWORD PTR [rax]
   140007fa7:	add    bh,bh
   140007fa9:	(bad)  
   140007faa:	(bad)  
   140007fab:	(bad)  
   140007fac:	(bad)  
   140007fad:	inc    DWORD PTR [rax]
   140007faf:	add    bh,bh
   140007fb1:	(bad)  
   140007fb2:	inc    DWORD PTR [rax+0x700]
   140007fb8:	(bad)  
   140007fb9:	(bad)  
   140007fba:	inc    DWORD PTR [rax]
   140007fbc:	add    BYTE PTR [rbx],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	(bad)  
   140007fc1:	(bad)  
   140007fc2:	inc    DWORD PTR [rax]
   140007fc4:	add    BYTE PTR [rbx],al
   140007fc6:	add    BYTE PTR [rax],al
   140007fc8:	(bad)  
   140007fc9:	(bad)  
   140007fca:	inc    DWORD PTR [rax]
   140007fcc:	add    BYTE PTR [rbx],al
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	(bad)  
   140007fd1:	(bad)  
   140007fd2:	inc    DWORD PTR [rax]
   140007fd4:	add    BYTE PTR [rbx],al
   140007fd6:	add    BYTE PTR [rax],al
   140007fd8:	(bad)  
   140007fd9:	(bad)  
   140007fda:	inc    DWORD PTR [rax]
   140007fdc:	add    BYTE PTR [rbx],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	(bad)  
   140007fe1:	(bad)  
   140007fe2:	inc    DWORD PTR [rax]
   140007fe4:	add    BYTE PTR [rbx],al
   140007fe6:	add    BYTE PTR [rax],al
   140007fe8:	(bad)  
   140007fe9:	(bad)  
   140007fea:	inc    DWORD PTR [rax]
   140007fec:	add    BYTE PTR [rbx],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	(bad)  
   140007ff1:	(bad)  
   140007ff2:	inc    DWORD PTR [rax]
   140007ff4:	add    BYTE PTR [rbx],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	(bad)  
   140007ff9:	(bad)  
   140007ffa:	inc    DWORD PTR [rax]
   140007ffc:	add    BYTE PTR [rbx],al
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	(bad)  
   140008001:	(bad)  
   140008002:	inc    DWORD PTR [rax]
   140008004:	add    BYTE PTR [rbx],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	(bad)  
   140008009:	(bad)  
   14000800a:	inc    DWORD PTR [rax]
   14000800c:	add    BYTE PTR [rbx],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	(bad)  
   140008011:	(bad)  
   140008012:	inc    DWORD PTR [rax]
   140008014:	add    BYTE PTR [rbx],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	(bad)  
   140008019:	(bad)  
   14000801a:	inc    DWORD PTR [rax]
   14000801c:	add    BYTE PTR [rbx],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	(bad)  
   140008021:	(bad)  
   140008022:	inc    DWORD PTR [rax]
   140008024:	add    BYTE PTR [rbx],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	(bad)  
   140008029:	(bad)  
   14000802a:	inc    DWORD PTR [rax]
   14000802c:	add    BYTE PTR [rbx],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	(bad)  
   140008031:	push   rax
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    eax,DWORD PTR [rax]
   140008037:	add    bh,bh
   140008039:	inc    BYTE PTR [rax]
   14000803b:	add    BYTE PTR [rax],al
   14000803d:	(bad)  
   14000803e:	add    BYTE PTR [rax],al
   140008040:	jmp    rax
   140008042:	add    BYTE PTR [rax],al
   140008044:	(bad)  
   140008045:	inc    DWORD PTR [rax]
   140008047:	add    dh,bh
   140008049:	add    BYTE PTR [rax],al
   14000804b:	add    BYTE PTR [rdi],cl
   14000804d:	inc    DWORD PTR [rax]
   14000804f:	add    al,dh
   140008051:	add    BYTE PTR [rax],al
   140008053:	add    BYTE PTR [rbx],al
   140008055:	inc    DWORD PTR [rax]
   140008057:	add    al,al
   140008059:	add    BYTE PTR [rax],al
   14000805b:	add    BYTE PTR [rax],al
   14000805d:	inc    DWORD PTR [rax]
   14000805f:	add    BYTE PTR [rax+0x0],al
   140008065:	jg     0x140008067
   140008067:	add    BYTE PTR [rax+0x0],al
   14000806d:	(bad)  
   14000806e:	add    BYTE PTR [rax],al
   140008070:	add    BYTE PTR [rax],0x0
   140008073:	add    BYTE PTR [rax],al
   140008075:	(bad)  
   140008076:	add    BYTE PTR [rax],al
   140008078:	add    BYTE PTR [rax],al
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rbx],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	add    BYTE PTR [rax],0x0
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    eax,DWORD PTR [rax]
   140008087:	add    al,al
   140008089:	add    BYTE PTR [rax],al
   14000808b:	add    BYTE PTR [rax],al
   14000808d:	add    eax,DWORD PTR [rax]
   14000808f:	add    al,bh
   140008091:	add    BYTE PTR [rax],al
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    eax,DWORD PTR [rax]
   140008097:	add    bh,bh
   140008099:	add    BYTE PTR [rax],al
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    eax,DWORD PTR [rax]
   14000809f:	add    bh,bh
   1400080a1:	add    BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    eax,DWORD PTR [rax]
   1400080a7:	add    al,ah
   1400080a9:	add    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	(bad)  
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	loopne 0x1400080b2
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    edi,edi
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	cld    
   1400080b9:	add    BYTE PTR [rax],al
   1400080bb:	add    BYTE PTR [rdi-0x1],bh
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	(bad)  
   1400080c1:	inc    eax
   1400080c3:	(bad)  
   1400080c4:	(bad)  
   1400080c5:	inc    DWORD PTR [rax]
   1400080c7:	add    bh,bh
   1400080c9:	(bad)  
   1400080ca:	(bad)  
   1400080cb:	(bad)  
   1400080cc:	(bad)  
   1400080cd:	inc    DWORD PTR [rax]
   1400080cf:	add    bh,bh
   1400080d1:	(bad)  
   1400080d2:	(bad)  
   1400080d3:	(bad)  
   1400080d4:	(bad)  
   1400080d5:	inc    DWORD PTR [rax]
   1400080d7:	add    bh,bh
   1400080d9:	(bad)  
   1400080da:	(bad)  
   1400080db:	(bad)  
   1400080dc:	(bad)  
   1400080dd:	inc    DWORD PTR [rax]
   1400080df:	add    bh,bh
   1400080e1:	(bad)  
   1400080e2:	(bad)  
   1400080e3:	(bad)  
   1400080e4:	(bad)  
   1400080e5:	inc    DWORD PTR [rax]
   1400080e7:	add    bh,bh
   1400080e9:	(bad)  
   1400080ea:	(bad)  
   1400080eb:	(bad)  
   1400080ec:	(bad)  
   1400080ed:	inc    DWORD PTR [rax]
   1400080ef:	add    bh,bh
   1400080f1:	(bad)  
   1400080f2:	(bad)  
   1400080f3:	(bad)  
   1400080f4:	(bad)  
   1400080f5:	inc    DWORD PTR [rax]
   1400080f7:	add    bh,bh
   1400080f9:	(bad)  
   1400080fa:	(bad)  
   1400080fb:	(bad)  
   1400080fc:	(bad)  
   1400080fd:	inc    DWORD PTR [rax]
   1400080ff:	add    bh,bh
   140008101:	(bad)  
   140008102:	(bad)  
   140008103:	(bad)  
   140008104:	(bad)  
   140008105:	inc    DWORD PTR [rax]
   140008107:	add    bh,bh
   140008109:	(bad)  
   14000810a:	(bad)  
   14000810b:	(bad)  
   14000810c:	(bad)  
   14000810d:	inc    DWORD PTR [rax]
   14000810f:	add    bh,bh
   140008111:	(bad)  
   140008112:	(bad)  
   140008113:	(bad)  
   140008114:	(bad)  
   140008115:	inc    DWORD PTR [rax]
   140008117:	add    bh,bh
   140008119:	(bad)  
   14000811a:	(bad)  
   14000811b:	(bad)  
   14000811c:	(bad)  
   14000811d:	inc    DWORD PTR [rax]
   14000811f:	add    BYTE PTR [rax],ch
   140008121:	add    BYTE PTR [rax],al
   140008123:	add    BYTE PTR [rax],ah
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rax+0x0],al
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    DWORD PTR [rax],eax
   14000812e:	or     BYTE PTR [rax],al
   140008130:	add    BYTE PTR [rax],al
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax+rax*1],al
	...
   14000813f:	add    BYTE PTR [rax],al
   140008141:	add    DWORD PTR [rax],eax
   140008143:	add    BYTE PTR [rax],al
   140008145:	add    DWORD PTR [rax],eax
   140008147:	add    BYTE PTR [rax],al
   140008149:	add    BYTE PTR [rax],al
   14000814b:	add    BYTE PTR [rsi],al
   14000814d:	add    al,BYTE PTR [rcx]
   14000814f:	add    BYTE PTR [rcx],dl
   140008151:	adc    DWORD PTR [rdi],eax
   140008153:	add    BYTE PTR [rbx+rdx*1],dl
   140008156:	adc    BYTE PTR [rax],al
   140008158:	(bad)  
   140008159:	sbb    eax,0x1d210019
   14000815e:	sbb    DWORD PTR [rax],eax
   140008160:	and    DWORD PTR [rax],esp
   140008162:	(bad)  
   140008163:	add    BYTE PTR [rdi],ch
   140008165:	and    BYTE PTR [rax+rax*1],dl
   140008168:	and    BYTE PTR es:[rdx],bl
   14000816b:	add    BYTE PTR [rcx],bh
   14000816d:	(bad)  
   14000816e:	adc    al,0x0
   140008170:	xor    eax,0x27001e33
   140008175:	and    al,0x23
   140008177:	add    BYTE PTR [rip+0x33002227],ch        # 0x17300a3a4
   14000817d:	and    esp,DWORD PTR [rdx]
   14000817f:	add    BYTE PTR [rdx],dh
   140008181:	(bad)  
   140008182:	sub    eax,DWORD PTR [rax]
   140008184:	xor    esi,DWORD PTR [rax]
   140008186:	add    BYTE PTR cs:[rax],dh
   140008189:	xor    BYTE PTR [rax],dh
   14000818b:	add    BYTE PTR [rsi],dh
   14000818d:	xor    al,0x32
   14000818f:	add    BYTE PTR [rbx],bh
   140008191:	cmp    al,0x39
   140008193:	add    BYTE PTR [rbx+0x3a],cl
   140008196:	sbb    eax,DWORD PTR [rax]
   140008198:	pop    rcx
   140008199:	(bad)  
   14000819a:	(bad)  
   14000819b:	add    BYTE PTR [rcx+0x39],al
   14000819e:	xor    DWORD PTR [rax],eax
   1400081a0:	pop    rbp
   1400081a1:	(bad)  
   1400081a2:	cmp    eax,0x3b434600
   1400081a7:	add    BYTE PTR [rsp+rax*2+0x38],al
   1400081ab:	add    BYTE PTR [rdx+0x41],al
   1400081ae:	cmp    eax,0x3f454600
   1400081b3:	add    BYTE PTR [rbx+0x41],cl
   1400081b6:	cmp    BYTE PTR [rax],al
   1400081b8:	pop    rsi
   1400081b9:	cmp    BYTE PTR [r8],al
   1400081bc:	ins    DWORD PTR es:[rdi],dx
   1400081bd:	rex.WX cmp al,BYTE PTR [rax]
   1400081c0:	jle    0x140008218
   1400081c2:	cmp    al,0x0
   1400081c4:	rex.X
   1400081c5:	rex
   1400081c6:	add    BYTE PTR [rax+0x49],cl
   1400081ca:	add    BYTE PTR [rdi+0x4b],cl
   1400081ce:	rex.RXB add BYTE PTR [r11+0x4f],r11b
   1400081d2:	add    BYTE PTR [rdi+rcx*2+0x4b],r10b
   1400081d7:	add    BYTE PTR [rbx+0x4f],dl
   1400081da:	rex.WRX add BYTE PTR [rbx+0x54],r10b
   1400081de:	rex.WR add BYTE PTR [rdx+0x53],r11b
   1400081e2:	rex.WRB add BYTE PTR [r11+0x5b],r11b
   1400081e6:	push   rbp
   1400081e7:	add    BYTE PTR [rsi+0x5e],bl
   1400081ea:	push   rsi
   1400081eb:	add    BYTE PTR [rbp+0x5b],ah
   1400081ee:	rex.WB add BYTE PTR [r8+0x5a],bpl
   1400081f2:	rex.WRX add BYTE PTR [rcx+0x52],r15b
   1400081f6:	rex.WRB add BYTE PTR [r11+0x5d],r13b
   1400081fa:	push   rax
   1400081fb:	add    BYTE PTR [rbp+0x5f],ch
   1400081fe:	push   rbx
   1400081ff:	add    BYTE PTR [rax+0x5e],ah
   140008202:	pop    rsp
   140008203:	add    BYTE PTR [rax+0x63],ch
   140008206:	pop    rcx
   140008207:	add    BYTE PTR [rbp+0x68],dh
   14000820a:	pop    rbp
   14000820b:	add    BYTE PTR [rcx+0x67],ch
   14000820e:	(bad)  
   14000820f:	add    BYTE PTR [rcx+0x67],bh
   140008212:	data16 add BYTE PTR [rdx+0x6c],dh
   140008216:	imul   eax,DWORD PTR [rax],0x687171
   14000821c:	jp     0x14000828e
   14000821e:	imul   eax,DWORD PTR [rax],0x707778
   140008224:	jp     0x1400082a0
   140008226:	jb     0x140008228
   140008228:	jl     0x1400082a4
   14000822a:	jbe    0x14000822c
   14000822c:	jg     0x1400082ab
   14000822e:	ja     0x140008230
   140008230:	jg     0x1400082ad
   140008232:	js     0x140008234
   140008234:	jl     0x1400082b3
   140008236:	jns    0x140008238
   140008238:	sbb    DWORD PTR [rax+0x3b],0x0
   14000823c:	lahf   
   14000823d:	jbe    0x14000827e
   14000823f:	add    BYTE PTR [rdi-0x76ffbd98],cl
   140008245:	imul   ecx,DWORD PTR [rcx+0x0],0xffffff82
   140008249:	ja     0x1400082a5
   14000824b:	add    BYTE PTR [rax-0x57ffa384],dl
   140008251:	jno    0x14000829a
   140008253:	add    BYTE PTR [rbx-0x77ffa68e],ah
   140008259:	jbe    0x1400082c1
   14000825b:	add    BYTE PTR [rdx+rdi*2+0x7d8c006a],cl
   140008262:	outs   dx,DWORD PTR ds:[rsi]
   140008263:	add    BYTE PTR [rbx-0x7fff9290],dl
   140008269:	jge    0x1400082e1
   14000826b:	add    BYTE PTR [rax-0x59ff8684],al
   140008271:	jae    0x1400082d6
   140008273:	add    BYTE PTR [rbp-0x47ff9384],bh
   140008279:	jae    0x1400082ee
   14000827b:	add    BYTE PTR [rax-0x3bff8e81],dh
   140008281:	jb     0x140008302
   140008283:	add    bh,al
   140008285:	js     0x140008301
   140008287:	add    BYTE PTR [rbx-0x7cffa56d],bh
   14000828d:	cmp    DWORD PTR [rsi+0x0],0x7d8485
   140008294:	xchg   ecx,eax
   140008295:	xor    DWORD PTR [rbx+0x0],0x748597
   14000829c:	cwde   
   14000829d:	xchg   BYTE PTR [rdi+0x0],dh
   1400082a0:	cdq    
   1400082a1:	mov    BYTE PTR [rdx+0x0],bh
   1400082a4:	pushf  
   1400082a5:	mov    edi,DWORD PTR [rax+rax*1-0x63]
   1400082a9:	mov    WORD PTR [rbp+0x0],?
   1400082ac:	ror    BYTE PTR [rdi-0x6734ff99],0x64
   1400082b3:	add    cl,cl
   1400082b5:	sahf   
   1400082b6:	je     0x1400082b8
   1400082b8:	movabs ds:0x8700828383008379,eax
   1400082c1:	xchg   DWORD PTR [rsi-0x7f797800],eax
   1400082c7:	add    BYTE PTR [rdx-0x70ff7d77],cl
   1400082cd:	mov    DWORD PTR [rcx-0x7b757500],eax
   1400082d3:	add    BYTE PTR [rbx+rcx*4-0x7370ff7c],cl
   1400082da:	xchg   BYTE PTR [rax],al
   1400082dc:	xchg   esi,eax
   1400082dd:	mov    es,WORD PTR [rsi-0x74706f00]
   1400082e3:	add    BYTE PTR [rsi-0x6dff7771],dl
   1400082e9:	nop
   1400082ea:	mov    DWORD PTR [rax],eax
   1400082ec:	xchg   edi,eax
   1400082ed:	xchg   edx,eax
   1400082ee:	lea    eax,[rax]
   1400082f0:	xchg   esi,eax
   1400082f1:	xchg   ebp,eax
   1400082f2:	mov    es,WORD PTR [rax]
   1400082f4:	sahf   
   1400082f5:	xchg   ebp,eax
   1400082f6:	lea    eax,[rax]
   1400082f8:	xchg   edi,eax
   1400082f9:	xchg   esi,eax
   1400082fa:	xchg   ecx,eax
   1400082fb:	add    BYTE PTR [rcx-0x65ff6d6a],bl
   140008301:	cwde   
   140008302:	xchg   ebx,eax
   140008303:	add    BYTE PTR [rsi-0x60ff6e67],bl
   140008309:	sahf   
   14000830a:	xchg   edi,eax
   14000830b:	add    BYTE PTR [rsi-0x5eff6764],bl
   140008311:	nop
   140008312:	(bad)  
   140008313:	add    BYTE PTR [rsp+rdx*4-0x6b5dff7a],ah
   14000831a:	mov    DWORD PTR [rax],eax
   14000831c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000831d:	xchg   edi,eax
   14000831e:	mov    BYTE PTR [rax],al
   140008320:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008321:	xchg   edi,eax
   140008322:	mov    WORD PTR [rax],es
   140008324:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008325:	cdq    
   140008326:	pop    QWORD PTR [rax]
   140008328:	test   eax,0xad008d9a
   14000832d:	sahf   
   14000832e:	pop    QWORD PTR [rax]
   140008330:	lods   al,BYTE PTR ds:[rsi]
   140008331:	sahf   
   140008332:	xchg   ecx,eax
   140008333:	add    BYTE PTR [rcx-0x4cff6764],ah
   140008339:	nop
   14000833a:	fwait
   14000833b:	add    BYTE PTR [rsi-0x5dff695f],ch
   140008341:	movabs al,ds:0xa2a5009ba1a5009a
   14000834a:	sahf   
   14000834b:	add    BYTE PTR [rdi-0x57ff605b],ah
   140008351:	movabs al,ds:0xa6b30097a3b1009a
   14000835a:	(bad)  
   14000835b:	add    BYTE PTR [rax-0x4aff615a],dh
   140008361:	test   al,0x9b
   140008363:	add    BYTE PTR [rdi-0x5aff6055],dh
   140008369:	movabs ds:0xa6a800a0a5a600a0,al
   140008372:	movabs eax,ds:0xa6a9aa00a3a8aa00
   14000837b:	add    BYTE PTR [rbp-0x51ff5956],ch
   140008381:	lods   eax,DWORD PTR ds:[rsi]
   140008382:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008383:	add    BYTE PTR [rbp-0x51ff5756],ch
   140008389:	lods   eax,DWORD PTR ds:[rsi]
   14000838a:	test   eax,0xa6a6b800
   14000838f:	add    BYTE PTR [rcx-0x4dff5f57],dh
   140008395:	stos   DWORD PTR es:[rdi],eax
   140008396:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008397:	add    BYTE PTR [rdx-0x4fff5b52],bh
   14000839d:	scas   al,BYTE PTR es:[rdi]
   14000839e:	test   eax,0xa8afb400
   1400083a3:	add    BYTE PTR [rcx-0x41ff5352],dh
   1400083a9:	stos   DWORD PTR es:[rdi],eax
   1400083aa:	scas   eax,DWORD PTR es:[rdi]
   1400083ab:	add    BYTE PTR [rbp-0x4eff594f],bh
   1400083b1:	mov    al,0xaa
   1400083b3:	add    BYTE PTR [rdx-0x4aff5350],dh
   1400083b9:	mov    dl,0xae
   1400083bb:	add    BYTE PTR [rax-0x43ff564f],bh
   1400083c1:	mov    cl,0xa9
   1400083c3:	add    BYTE PTR [rsi-0x49ff554c],bh
   1400083c9:	mov    bl,0xb0
   1400083cb:	add    BYTE PTR [rbp-0x47ff4e4c],dh
   1400083d1:	mov    bh,0xb3
   1400083d3:	add    BYTE PTR [rdx-0x47ff4b49],bh
   1400083d9:	mov    eax,0xbaba00b3
   1400083de:	mov    ch,0x0
   1400083e0:	mov    esp,0xbd00b7ba
   1400083e5:	mov    edx,0xbdbd00b8
   1400083ea:	mov    ecx,0xa5b1c000
   1400083ef:	add    dl,al
   1400083f1:	mov    eax,0xb8c200ae
   1400083f6:	mov    al,0x0
   1400083f8:	(bad)  
   1400083f9:	mov    ebp,0xbfc900b5
   1400083fe:	mov    bh,0x0
   140008400:	sar    DWORD PTR [rsi-0x413cff45],0xbe
   140008407:	add    bl,bh
   140008409:	retf   0x85
   14000840c:	rol    eax,0xbb
   14000840f:	add    ah,al
   140008411:	sar    DWORD PTR [rdx-0x423e3e00],0x0
   140008418:	(bad)
   14000841c:	(bad)
   14000841f:	add    ah,cl
   140008421:	ret    
   140008422:	mov    ebx,0xbec5ce00
   140008427:	add    dh,al
   140008429:	(bad)
   14000842c:	mov    esi,0xc6c800c4
   140008432:	ret    
   140008433:	add    dh,cl
   140008435:	mov    ecx,0xc4c6c800
   14000843b:	add    cl,cl
   14000843d:	enter  0xc2,0xc9
   140008441:	leave  
   140008442:	(bad)
   140008445:	retf   0xc6
   140008448:	retf   
   140008449:	retf   
   14000844a:	enter  0xcc00,0xcb
   14000844e:	enter  0xce00,0xcd
   140008452:	leave  
   140008453:	add    ch,cl
   140008455:	iret   
   140008456:	int    0x0
   140008458:	ror    ecx,1
   14000845a:	ret    0xd100
   14000845d:	retf   
   14000845e:	(bad)
   140008461:	int3   
   140008462:	(bad)
   140008465:	(bad)  
   140008466:	enter  0xce00,0xd0
   14000846a:	int3   
   14000846b:	add    dh,dl
   14000846d:	ror    ebx,1
   14000846f:	add    dl,dl
   140008471:	ror    dh,1
   140008473:	add    cl,bl
   140008475:	ror    ebp,cl
   140008477:	add    bh,cl
   140008479:	rcl    ecx,cl
   14000847b:	add    ch,dl
   14000847d:	rcl    eax,cl
   14000847f:	add    dl,dl
   140008481:	(bad)  
   140008482:	rol    DWORD PTR [rax],cl
   140008484:	(bad)  
   140008485:	(bad)  
   140008486:	rol    BYTE PTR [rax],cl
   140008488:	xlat   BYTE PTR ds:[rbx]
   140008489:	(bad)  
   14000848a:	(bad)  
   14000848b:	add    ch,bl
   14000848d:	xlat   BYTE PTR ds:[rbx]
   14000848e:	rol    BYTE PTR [rax],cl
   140008490:	(bad)  
   140008492:	(bad)  
   140008493:	add    dh,dl
   140008495:	fcom   st(4)
   140008497:	add    ch,bl
   140008499:	fcom   st(2)
   14000849b:	add    cl,bl
   14000849d:	fcom   st(5)
   14000849f:	add    ch,bl
   1400084a1:	(bad)  
   1400084a3:	add    dl,bl
   1400084a5:	(bad)  
   1400084a7:	add    dl,bl
   1400084a9:	fstp   st(2)
   1400084ab:	add    ch,bl
   1400084ad:	(bad)  
   1400084af:	add    dh,bl
   1400084b1:	fstp   st(4)
   1400084b3:	add    dl,ah
   1400084b5:	fstp   st(1)
   1400084b7:	add    al,ah
   1400084b9:	(bad)  
   1400084bb:	add    cl,ah
   1400084bd:	loopne 0x14000849e
   1400084bf:	add    ah,ah
   1400084c1:	loope  0x1400084a0
   1400084c3:	add    cl,ah
   1400084c5:	loope  0x1400084a7
   1400084c7:	add    ah,ah
   1400084c9:	jrcxz  0x1400084ab
   1400084cb:	add    ch,ah
   1400084cd:	in     eax,0xe2
   1400084cf:	add    dh,ah
   1400084d1:	out    0xe4,al
   1400084d3:	add    cl,ch
   1400084d5:	out    0xe3,al
   1400084d7:	add    al,ch
   1400084d9:	out    0xe6,eax
   1400084db:	add    cl,ch
   1400084dd:	call   0x129ec85c8
   1400084e2:	out    0x0,eax
   1400084e4:	(bad)  
   1400084e5:	jmp    0x12bec85d2
   1400084ea:	jmp    0x12aed6eef
   1400084ef:	add    dh,ch
   1400084f1:	in     al,dx
   1400084f2:	(bad)  
   1400084f3:	add    dh,ch
   1400084f5:	out    dx,al
   1400084f6:	in     eax,dx
   1400084f7:	add    al,dh
   1400084f9:	out    dx,al
   1400084fa:	in     eax,dx
   1400084fb:	add    bh,ch
   1400084fd:	lock out dx,al
   1400084ff:	add    al,dh
   140008501:	lock out dx,al
   140008503:	add    al,dh
   140008505:	out    dx,eax
   140008506:	lock add cl,dh
   140008509:	icebp  
   14000850a:	lock add ah,dh
   14000850d:	repnz icebp 
   14000850f:	add    ah,dh
   140008511:	hlt    
   140008512:	repnz add bl,dh
   140008515:	repz hlt 
   140008517:	add    dh,dh
   140008519:	cmc    
   14000851a:	cmc    
   14000851b:	add    cl,bh
   14000851d:	cli    
   14000851e:	stc    
   14000851f:	add    dl,bh
   140008521:	cld    
   140008522:	sti    
   140008523:	add    dh,bh
   140008525:	(bad)  
   140008526:	inc    BYTE PTR [rax]
	...
   140008544:	(bad)  
   140008545:	(bad)  
   140008546:	inc    DWORD PTR [rax]
	...
   140008578:	sub    ch,BYTE PTR [rdx]
   14000857a:	sub    ch,BYTE PTR [rdx]
   14000857c:	sub    ch,BYTE PTR [rdx]
   14000857e:	sub    ch,BYTE PTR [rdx]
   140008580:	sub    ch,BYTE PTR [rdx]
   140008582:	sub    ch,BYTE PTR [rdx]
   140008584:	sub    ch,BYTE PTR [rdx]
	...
   140008596:	add    BYTE PTR [rax+rdx*8-0x36],al
   14000859a:	loopne 0x14000856e
   14000859c:	mov    ebx,0x8d857d99
   1400085a1:	lea    ecx,[rbp+0x448a8a89]
	...
   1400085b7:	pop    rax
   1400085b8:	xlat   BYTE PTR ds:[rbx]
   1400085b9:	jmp    0x140008592
   1400085bb:	jns    0x140008611
   1400085bd:	pop    rax
   1400085be:	sub    al,0x44
   1400085c0:	ja     0x140008550
   1400085c2:	lea    ebp,[rsi+0x58caca]
	...
   1400085d4:	add    BYTE PTR [rax],al
   1400085d6:	add    BYTE PTR [rbx-0x15],dh
   1400085d9:	jrcxz  0x14000856f
   1400085db:	fucomi st,st(3)
   1400085dd:	jrcxz  0x140008596
   1400085df:	sub    al,0x45
   1400085e1:	popf   
   1400085e2:	xchg   ebp,eax
   1400085e3:	loopne 0x1400085ed
   1400085e5:	and    al,0x73
	...
   1400085f7:	jns    0x1400085ea
   1400085f9:	(bad)  
   1400085fa:	xlat   BYTE PTR ds:[rbx]
   1400085fb:	jnp    0x140008609
   1400085fd:	sbb    ecx,DWORD PTR [rdi-0x6354d349]
   140008603:	in     eax,0x8
   140008605:	and    al,0x79
	...
   140008617:	test   esi,esi
   140008619:	mov    bh,0xdb
   14000861b:	and    bl,BYTE PTR [rbx-0x50]
   14000861e:	add    eax,0xa2ab30f1
   140008623:	jrcxz  0x14000862d
   140008625:	and    al,0x79
	...
   140008637:	xchg   esp,eax
   140008638:	test   bh,0xf1
   14000863b:	sbb    eax,DWORD PTR [rdx+0x3e]
   14000863e:	add    eax,0xa3bb30de
   140008643:	jmp    0x14000864a
   140008645:	and    al,0x85
	...
   140008657:	stos   BYTE PTR es:[rdi],al
   140008658:	cmc    
   140008659:	(bad)  
   14000865a:	retf   
   14000865b:	lea    edx,[rip+0x54b78a05]        # 0x194b81066
   140008661:	mov    edi,0x2408e5a6
   140008666:	xchg   DWORD PTR [rax],eax
	...
   140008674:	add    BYTE PTR [rax],al
   140008676:	add    BYTE PTR [rbp-0x287d130f],ch
   14000867c:	icebp  
   14000867d:	icebp  
   14000867e:	rcl    BYTE PTR [rsi-0x55],cl
   140008681:	mov    edi,0x808caa2
   140008686:	popf   
	...
   140008697:	mov    bh,0xe5
   140008699:	icebp  
   14000869a:	fiadd  WORD PTR [rdi-0x35868c8d]
   1400086a0:	in     eax,0x14
   1400086a2:	pop    rdx
   1400086a3:	xchg   ebp,eax
   1400086a4:	shr    bl,1
   1400086a6:	mov    bh,0x0
	...
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    ah,al
   1400086b8:	rex.WB movabs ds:0x35f1d7dee5e5ebb9,al
   1400086c2:	(bad)  
   1400086c3:	movabs ds:0xc4d9b9,al
	...
   1400086d4:	add    BYTE PTR [rax],al
   1400086d6:	add    bl,bl
   1400086d8:	and    al,0x38
   1400086da:	xchg   ebp,eax
   1400086db:	div    dh
   1400086dd:	div    dh
   1400086df:	div    ch
   1400086e1:	div    cl
   1400086e3:	jmp    0x1400086d6
   1400086e5:	icebp  
   1400086e6:	(bad)  
	...
   1400086ef:	add    BYTE PTR [rax],al
   1400086f1:	add    BYTE PTR [rbp+0x6f],ch
   1400086f4:	mov    ss,WORD PTR [rbp-0x341c1471]
   1400086fa:	(bad)  
   1400086fb:	(bad)  
   1400086fc:	(bad)  
   1400086fd:	(bad)  
   1400086fe:	(bad)  
   1400086ff:	(bad)  
   140008700:	(bad)  
   140008701:	(bad)  
   140008702:	(bad)  
   140008703:	(bad)  
   140008704:	(bad)  
   140008705:	(bad)  
	...
   14000870e:	ins    DWORD PTR es:[rdi],dx
   14000870f:	imul   eax,DWORD PTR [rdi-0x62625667],0xffffff95
   140008716:	mov    es,WORD PTR [rax+0x62666c80]
   14000871c:	cmp    BYTE PTR [rax+0x38],cl
   14000871f:	pop    rbp
	...
   140008728:	add    BYTE PTR [rax],al
   14000872a:	add    BYTE PTR [rdi+0x58],ah
   14000872d:	jne    0x1400087a8
   14000872f:	jne    0x140008792
   140008731:	pushf  
   140008732:	retf   0xddd9
   140008735:	loopne 0x140008726
   140008737:	icebp  
   140008738:	div    dh
   14000873a:	shl    BYTE PTR [rsi+0x6248629c],0x48
   140008741:	pop    rbp
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    BYTE PTR [rax],al
   140008748:	add    BYTE PTR [rbp+0x56],dh
   14000874b:	rex.RB outs dx,DWORD PTR ds:[rsi]
   14000874d:	pushf  
   14000874e:	pushf  
   14000874f:	adc    dl,BYTE PTR [rax]
   140008751:	mov    ebx,0xf6f1f1eb
   140008756:	div    dh
   140008758:	div    dh
   14000875a:	test   dl,0xa6
   14000875d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000875e:	adc    BYTE PTR [rdx+0x62],0x66
   140008762:	cmp    BYTE PTR [rax],al
   140008764:	add    BYTE PTR [rax],al
   140008766:	add    BYTE PTR [rax],al
   140008768:	shl    BYTE PTR [rbp+0x7e],0xc0
   14000876c:	jmp    0x140008747
   14000876e:	enter  0xe0ca,0xe7
   140008772:	loopne 0x14000874e
   140008774:	(bad)  
   140008775:	sar    BYTE PTR [rcx-0x62a38363],1
   14000877b:	jmp    0x140008768
   14000877d:	(bad)  
   14000877e:	mov    cl,0x9c
   140008780:	outs   dx,DWORD PTR ds:[rsi]
   140008781:	(bad)  
   140008782:	pushw  0x3b
   140008786:	add    BYTE PTR [rax],al
   140008788:	mov    edi,0xe5ebd0b9
   14000878d:	loopne 0x140008756
   14000878f:	pushf  
   140008790:	and    BYTE PTR [rdx+0x34],0x32
   140008794:	rex.RXB
   140008795:	rex.WRB
   140008796:	rex.WXB
   140008797:	rex.WRXB
   140008798:	rex.WRX
   140008799:	rex.WR
   14000879a:	rex.WX pop rax
   14000879c:	scas   al,BYTE PTR es:[rdi]
   14000879d:	in     eax,0xed
   14000879f:	shl    BYTE PTR [rcx-0x7f999066],1
   1400087a5:	(bad)  
   1400087a6:	cmp    eax,DWORD PTR [rax]
   1400087a8:	mov    cl,0x8f
   1400087aa:	outs   dx,DWORD PTR ds:[rsi]
   1400087ab:	(bad)  
   1400087ad:	sub    BYTE PTR [rsi],dh
   1400087af:	and    DWORD PTR [rip+0x59432b16],ecx        # 0x19943b2cb
   1400087b5:	push   rax
   1400087b6:	cmp    eax,0x413f3c3c
   1400087bb:	rex sub DWORD PTR [rsi],esp
   1400087be:	addr32 mov cl,0xd9
   1400087c1:	(bad)  
   1400087c2:	mov    cl,0x8d
   1400087c4:	outs   dx,DWORD PTR ds:[rsi]
   1400087c5:	adc    BYTE PTR [rbp+0x5f000000],0x1a
   1400087cc:	add    al,0x2
   1400087ce:	add    ch,BYTE PTR [rax]
   1400087d0:	(bad)  
   1400087d1:	(bad)  
   1400087d2:	sbb    eax,0x1a0a0913
   1400087d7:	xor    edi,DWORD PTR [rax]
   1400087d9:	and    eax,0x1f191a20
   1400087de:	or     eax,DWORD PTR [rdx]
   1400087e0:	(bad)  
   1400087e1:	(bad)  
   1400087e2:	enter  0xb9ce,0x8d
   1400087e6:	pushf  
   1400087e7:	add    BYTE PTR [rax],al
   1400087e9:	add    BYTE PTR [rax],al
   1400087eb:	add    BYTE PTR [rax],al
   1400087ed:	cmp    BYTE PTR [rbx],al
   1400087ef:	add    al,BYTE PTR [rsi]
   1400087f1:	sbb    dh,BYTE PTR [rsi]
   1400087f3:	(bad)  
   1400087f4:	enter  0xf6eb,0xf6
   1400087f8:	icebp  
   1400087f9:	xlat   BYTE PTR ds:[rbx]
   1400087fa:	mov    ecx,0x6d9caeae
   1400087ff:	push   rdx
   140008800:	cs (bad) 
   140008802:	adc    DWORD PTR [rax-0x5d],ecx
   140008805:	mov    edi,0xa6
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	add    al,dl
   14000880e:	pushf  
   14000880f:	enter  0xf6eb,0xf6
   140008813:	div    ch
   140008815:	in     al,dx
   140008816:	jmp    0x1400087f8
   140008818:	loopne 0x1400087fa
   14000881a:	fcmovnbe st,st(7)
   14000881c:	retf   0xbfc0
   14000881f:	rol    bh,0xba
   140008822:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008823:	xchg   ebp,eax
   140008824:	(bad)  
   140008825:	test   al,0xb1
   140008827:	add    BYTE PTR [rax],al
   140008829:	retf   0xd7b9
   14000882c:	in     eax,0xeb
   14000882e:	div    dh
   140008830:	icebp  
   140008831:	icebp  
   140008832:	jmp    0x140008819
   140008834:	loopne 0x14000880f
   140008836:	fnop   
   140008838:	rol    al,1
   14000883a:	rol    al,0xb9
   14000883d:	mov    ecx,0xb9b1b1b9
   140008842:	mov    edi,0xd7d0
   140008847:	add    BYTE PTR [rax],al
   140008849:	add    BYTE PTR [rax],al
   14000884b:	mov    ecx,0xaea8b9b1
   140008850:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008851:	movabs ds:0x8f8f8f8f9a8f9ca2,al
   14000885a:	lea    ecx,[rdi+0xbba8a2]
	...
   140008948:	(bad)  
   140008949:	(bad)  
   14000894a:	(bad)  
   14000894b:	(bad)  
   14000894c:	(bad)  
   14000894d:	inc    DWORD PTR [rax]
   14000894f:	add    edi,edi
   140008951:	inc    BYTE PTR [rax]
   140008953:	add    edi,edi
   140008955:	inc    BYTE PTR [rax]
   140008957:	add    edi,edi
   140008959:	inc    BYTE PTR [rax]
   14000895b:	add    edi,edi
   14000895d:	inc    BYTE PTR [rax]
   14000895f:	add    edi,edi
   140008961:	inc    BYTE PTR [rax]
   140008963:	add    edi,edi
   140008965:	inc    BYTE PTR [rax]
   140008967:	add    edi,edi
   140008969:	inc    BYTE PTR [rax]
   14000896b:	add    edi,edi
   14000896d:	inc    BYTE PTR [rax]
   14000896f:	add    edi,edi
   140008971:	inc    BYTE PTR [rax]
   140008973:	add    edi,edi
   140008975:	inc    BYTE PTR [rax]
   140008977:	add    edi,edi
   140008979:	inc    BYTE PTR [rax]
   14000897b:	add    edi,edi
   14000897d:	rol    BYTE PTR [rax],0x3
   140008980:	cld    
   140008981:	add    BYTE PTR [rax],al
   140008983:	jmp    rax
   140008985:	add    BYTE PTR [rax],al
   140008987:	(bad)  
   140008988:	add    BYTE PTR [rax],0x0
   14000898b:	(bad)  
   14000898c:	add    BYTE PTR [rax],al
   14000898e:	add    BYTE PTR [rdi],al
   140008990:	add    BYTE PTR [rax],al
   140008992:	add    BYTE PTR [rcx],al
   140008994:	add    BYTE PTR [rax],al
   140008996:	add    BYTE PTR [rcx],al
   140008998:	rol    BYTE PTR [rax],0x0
   14000899b:	add    eax,edi
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    eax,edi
   1400089a1:	add    BYTE PTR [rax],al
   1400089a3:	add    DWORD PTR [rax-0x1ff90000],eax
   1400089a9:	add    BYTE PTR [rcx],al
   1400089ab:	(bad)  
   1400089ac:	(bad)  
   1400089ad:	(bad)  
   1400089ae:	(bad)  
   1400089af:	(bad)  
   1400089b0:	(bad)  
   1400089b1:	(bad)  
   1400089b2:	(bad)  
   1400089b3:	(bad)  
   1400089b4:	(bad)  
   1400089b5:	(bad)  
   1400089b6:	(bad)  
   1400089b7:	(bad)  
   1400089b8:	(bad)  
   1400089b9:	(bad)  
   1400089ba:	(bad)  
   1400089bb:	(bad)  
   1400089bc:	(bad)  
   1400089bd:	(bad)  
   1400089be:	(bad)  
   1400089bf:	(bad)  
   1400089c0:	(bad)  
   1400089c1:	(bad)  
   1400089c2:	(bad)  
   1400089c3:	(bad)  
   1400089c4:	(bad)  
   1400089c5:	(bad)  
   1400089c6:	(bad)  
   1400089c7:	jmp    FWORD PTR [rax]
   1400089c9:	add    BYTE PTR [rax],al
   1400089cb:	add    BYTE PTR [rax],dl
   1400089cd:	add    BYTE PTR [rax],al
   1400089cf:	add    BYTE PTR [rax],ah
   1400089d1:	add    BYTE PTR [rax],al
   1400089d3:	add    BYTE PTR [rcx],al
   1400089d5:	add    BYTE PTR [rax],cl
   1400089d7:	add    BYTE PTR [rax],al
   1400089d9:	add    BYTE PTR [rax],al
   1400089db:	add    BYTE PTR [rax],al
   1400089dd:	add    DWORD PTR [rax],eax
	...
   1400089e7:	add    BYTE PTR [rax],al
   1400089e9:	add    DWORD PTR [rax],eax
   1400089eb:	add    BYTE PTR [rax],al
   1400089ed:	add    DWORD PTR [rax],eax
   1400089ef:	add    BYTE PTR [rax],al
   1400089f1:	add    BYTE PTR [rax],al
   1400089f3:	add    BYTE PTR [rcx],ah
   1400089f5:	sbb    eax,0x252a0019
   1400089fa:	and    BYTE PTR [rax],al
   1400089fc:	sub    al,0x27
   1400089fe:	and    DWORD PTR [rax],eax
   140008a00:	cmp    DWORD PTR [r9],esi
   140008a03:	add    BYTE PTR [rax+0x3f],al
   140008a06:	cmp    eax,DWORD PTR [rax]
   140008a08:	rex.XB
   140008a09:	rex.X cmp eax,0x3e434400
   140008a0f:	add    BYTE PTR [rbp+0x44],al
   140008a12:	(bad)  
   140008a13:	add    BYTE PTR [rbx+0x41],cl
   140008a16:	cmp    BYTE PTR [rax],al
   140008a18:	rex.RX
   140008a19:	rex.RB
   140008a1a:	add    BYTE PTR [rbx+0x4f],bl
   140008a1e:	add    BYTE PTR [rcx+0x50],r10b
   140008a22:	rex.WX add BYTE PTR [rbx+0x52],dl
   140008a26:	rex.WR add BYTE PTR [rdx+rbx*2+0x54],r11b
   140008a2b:	add    BYTE PTR [rax+0x5a],ch
   140008a2e:	rex.WRX add BYTE PTR [rdx+0x60],r12b
   140008a32:	pop    rdx
   140008a33:	add    BYTE PTR [rdi+0x65],ah
   140008a36:	pop    rsi
   140008a37:	add    BYTE PTR [rdx+rsi*2+0x6b],dh
   140008a3b:	add    BYTE PTR [rbp+0x74],dh
   140008a3e:	outs   dx,DWORD PTR ds:[rsi]
   140008a3f:	add    BYTE PTR [rdi-0x57ffbd98],cl
   140008a45:	jno    0x140008a8e
   140008a47:	add    BYTE PTR [rcx-0x7fff8981],al
   140008a4d:	jl     0x140008ac8
   140008a4f:	add    BYTE PTR [rbx-0x79ff877f],al
   140008a55:	test   BYTE PTR [rdx+0x0],bh
   140008a58:	mov    BYTE PTR [rsi-0x6d43ff83],al
   140008a5e:	imul   eax,DWORD PTR [rax],0x6699cb
   140008a64:	xlat   BYTE PTR ds:[rbx]
   140008a65:	pushf  
   140008a66:	imul   eax,DWORD PTR [rax],0xffffffc9
   140008a69:	sahf   
   140008a6a:	je     0x140008a6c
   140008a6c:	fsub   DWORD PTR [rcx-0x5b26ff94]
   140008a72:	ins    DWORD PTR es:[rdi],dx
   140008a73:	add    dl,bl
   140008a75:	stos   DWORD PTR es:[rdi],eax
   140008a76:	outs   dx,BYTE PTR ds:[rsi]
   140008a77:	add    bl,bl
   140008a79:	mov    al,0x6f
   140008a7b:	add    cl,bl
   140008a7d:	mov    al,0x70
   140008a7f:	add    bh,bh
   140008a81:	loope  0x140008afc
   140008a83:	add    BYTE PTR [rsi-0x72ff7c74],cl
   140008a89:	mov    WORD PTR [rsi-0x766f6f00],es
   140008a8f:	add    BYTE PTR [rcx-0x65ff7069],bl
   140008a95:	cwde   
   140008a96:	nop
   140008a97:	add    BYTE PTR [rdx+rbx*4-0x6462ff6d],bl
   140008a9e:	xchg   esp,eax
   140008a9f:	add    BYTE PTR [rcx-0x50ff6764],ah
   140008aa5:	movabs ds:0xa5a7009aa1a20096,al
   140008aae:	lahf   
   140008aaf:	add    BYTE PTR [rdx-0x4eff605b],ch
   140008ab5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008ab6:	cdq    
   140008ab7:	add    BYTE PTR [rbx-0x58ff635a],dh
   140008abd:	movabs ds:0xa9ac00a1a7ab00a0,eax
   140008ac6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008ac7:	add    BYTE PTR [rbp-0x48ff5756],ch
   140008acd:	scas   al,BYTE PTR es:[rdi]
   140008ace:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008acf:	add    BYTE PTR [rsi-0x3fff524e],dh
   140008ad5:	lods   eax,DWORD PTR ds:[rsi]
   140008ad6:	cwde   
   140008ad7:	add    bl,cl
   140008ad9:	mov    bl,0x9a
   140008adb:	add    bl,al
   140008add:	mov    edi,0xcafb00ba
   140008ae2:	test   DWORD PTR [rax],eax
   140008ae4:	cld    
   140008ae5:	int3   
   140008ae6:	scas   al,BYTE PTR es:[rdi]
   140008ae7:	add    ch,al
   140008ae9:	(bad)  
   140008aea:	rol    BYTE PTR [rax],0xc8
   140008aed:	mov    ebx,0xc2c7ce00
   140008af3:	add    dl,dl
   140008af5:	iret   
   140008af6:	retf   
   140008af7:	add    dl,dl
   140008af9:	ror    esi,1
   140008afb:	add    ch,dl
   140008afd:	ror    esp,1
   140008aff:	add    dh,dl
   140008b01:	(bad)  
   140008b02:	rol    DWORD PTR [rax],1
   140008b04:	fcmovnbe st,st(5)
   140008b06:	rol    BYTE PTR [rax],1
   140008b08:	fcmovu st,st(0)
   140008b0a:	(bad)  
   140008b0b:	add    ch,bl
   140008b0d:	(bad)  
   140008b0f:	add    ah,bl
   140008b11:	fcmovu st,st(2)
   140008b13:	add    bh,bl
   140008b15:	(bad)  
   140008b17:	add    al,ah
   140008b19:	(bad)  
   140008b1b:	add    cl,ah
   140008b1d:	loope  0x140008afe
   140008b1f:	add    ah,ah
   140008b21:	loope  0x140008b01
   140008b23:	add    bl,ah
   140008b25:	jrcxz  0x140008b08
   140008b27:	add    ah,ah
   140008b29:	in     al,0xe2
   140008b2b:	add    dh,ah
   140008b2d:	out    0xe4,al
   140008b2f:	add    al,ch
   140008b31:	in     eax,0xe3
   140008b33:	add    cl,ch
   140008b35:	out    0xe4,al
   140008b37:	add    cl,ch
   140008b39:	jmp    0x12aea8c25
   140008b3e:	call   0x128ec7843
   140008b43:	add    ah,ch
   140008b45:	in     al,dx
   140008b46:	jmp    0x140008b48
   140008b48:	out    dx,eax
   140008b49:	out    dx,al
   140008b4a:	in     al,dx
   140008b4b:	add    al,dh
   140008b4d:	out    dx,al
   140008b4e:	in     al,dx
   140008b4f:	add    dl,dh
   140008b51:	lock out dx,al
   140008b53:	add    bl,dh
   140008b55:	repnz lock add ah,dh
   140008b59:	xacquire lock add BYTE PTR [rax],al
	...
   140008de9:	add    BYTE PTR [rax],al
   140008deb:	add    bh,bh
   140008ded:	(bad)  
   140008dee:	inc    DWORD PTR [rax]
   140008df0:	add    BYTE PTR [rax],al
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	add    BYTE PTR [rax],al
   140008df6:	add    BYTE PTR [rdi],cl
   140008df8:	(bad)  
   140008df9:	(bad)  
   140008dfa:	(bad)  
   140008dfb:	(bad)  
   140008dfc:	(bad)  
   140008dfd:	(bad)  
   140008dfe:	(bad)  
   140008e00:	add    BYTE PTR [rax],al
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	xor    DWORD PTR [rax],edi
   140008e08:	rex.XB push r8
   140008e0a:	rex.WR
   140008e0b:	rex.XB xor BYTE PTR [r8],sil
   140008e0e:	xor    QWORD PTR [rax],rax
   140008e11:	add    BYTE PTR [rax],al
   140008e13:	add    BYTE PTR [rax],al
   140008e15:	add    BYTE PTR [rip+0x9032c43],ch        # 0x14903ba5e
   140008e1b:	ss rex.XB
   140008e1d:	rex.XB add ebp,DWORD PTR [rip+0x0]        # 0x140008e24
   140008e24:	add    BYTE PTR [rax],al
   140008e26:	sub    eax,0x3c1e0b50
   140008e2b:	add    DWORD PTR [rsi+rax*2+0x3],edx
   140008e2f:	sub    eax,0x0
   140008e34:	add    BYTE PTR [rax],al
   140008e36:	xor    DWORD PTR [rdx+0x9],ebx
   140008e39:	adc    eax,0x44500114
   140008e3e:	add    esi,DWORD PTR [rcx]
   140008e40:	add    BYTE PTR [rax],al
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	(bad)  
   140008e47:	push   rdi
   140008e48:	xor    eax,0x3a330104
   140008e4d:	cmp    DWORD PTR [rbx],eax
   140008e4f:	(bad)  
   140008e50:	add    BYTE PTR [rax],al
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	add    BYTE PTR [rax],al
   140008e56:	rex.RX (bad) 
   140008e58:	rex.RX pop rdx
   140008e5a:	pop    rax
   140008e5b:	sbb    r11d,DWORD PTR [rsp+r9*2]
   140008e5f:	rex
   140008e60:	es es es es es es push rdi
   140008e67:	rex.RX
   140008e68:	rex.RXB
   140008e69:	rex.RB
   140008e6a:	rex.RB
   140008e6b:	rex.XB
   140008e6c:	rex.RB
   140008e6d:	rex.RXB
   140008e6e:	rex.RXB
   140008e6f:	adc    r10d,DWORD PTR [r11]
   140008e72:	adc    edx,DWORD PTR [rbx]
   140008e74:	adc    edx,DWORD PTR [rbx]
   140008e76:	(bad)  
   140008e77:	or     eax,0x13131313
   140008e7c:	adc    edx,DWORD PTR [rbx]
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	rex.W
   140008e81:	rex.WR
   140008e82:	rex.WRB
   140008e83:	rex.WRB push r12
   140008e85:	rex.WRB
   140008e86:	rex.XB
   140008e87:	rex
   140008e88:	rex.W push rbx
   140008e8a:	rex.WRB
   140008e8b:	rex.WRB
   140008e8c:	rex.WX
   140008e8d:	rex.W add BYTE PTR [rax],al
   140008e90:	add    BYTE PTR [rsp+rax*2+0x3d],dl
   140008e94:	sbb    eax,0x21232320
   140008e99:	(bad)  
   140008e9a:	and    al,0x43
   140008e9c:	rex.WRB add BYTE PTR [r8],r8b
   140008e9f:	add    BYTE PTR [rax],al
   140008ea1:	add    BYTE PTR [rax],al
   140008ea3:	or     eax,0x7070707
   140008ea8:	(bad)  
   140008ea9:	or     BYTE PTR [rip+0x3e],al        # 0x140008eed
   140008eaf:	add    BYTE PTR [rax],al
   140008eb1:	add    BYTE PTR [rdi],ah
   140008eb3:	adc    BYTE PTR [rcx],dl
   140008eb5:	adc    DWORD PTR [rcx],edx
   140008eb7:	adc    DWORD PTR [rcx],edx
   140008eb9:	adc    BYTE PTR [rax],dl
   140008ebb:	adc    eax,DWORD PTR [rax]
   140008ebd:	add    BYTE PTR [rax],al
   140008ebf:	add    BYTE PTR [rax],al
   140008ec1:	sbb    BYTE PTR es:[rdx],bl
   140008ec4:	sbb    bl,BYTE PTR [rdx]
   140008ec6:	sbb    bl,BYTE PTR [rdx]
   140008ec8:	sbb    bl,BYTE PTR es:[rdx]
   140008ecb:	sbb    DWORD PTR [rsi],edx
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	add    BYTE PTR [rdi],ch
   140008ed1:	sub    BYTE PTR [rcx],ch
   140008ed3:	sub    DWORD PTR [rcx+rbp*1],ebp
   140008ed6:	sub    DWORD PTR [rcx],ebp
   140008ed8:	sub    DWORD PTR [rcx],ebp
   140008eda:	sub    DWORD PTR [rcx],ebp
   140008edc:	sub    DWORD PTR [rdi],ebp
	...
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	inc    BYTE PTR [rax]
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	cld    
   140008ef5:	add    BYTE PTR [rax],al
   140008ef7:	add    ah,bh
   140008ef9:	add    BYTE PTR [rax],al
   140008efb:	add    ah,bh
   140008efd:	add    BYTE PTR [rax],al
   140008eff:	add    ah,bh
   140008f01:	add    BYTE PTR [rax],al
   140008f03:	add    ah,bh
   140008f05:	add    BYTE PTR [rax],al
   140008f07:	add    ah,bh
	...
   140008f11:	add    eax,DWORD PTR [rax]
   140008f13:	add    BYTE PTR [rax],al
   140008f15:	add    eax,DWORD PTR [rax]
   140008f17:	add    BYTE PTR [rax-0x1ffffff9],al
   140008f1d:	sldt   WORD PTR [rax]
   140008f20:	ror    BYTE PTR [rdi],0x0
   140008f23:	add    BYTE PTR [rax+0x7],al
   140008f29:	add    eax,DWORD PTR [rax]
   140008f2b:	add    bh,bh
   140008f2d:	inc    DWORD PTR [rax]
   140008f2f:	add    BYTE PTR [rcx+0xd474e50],cl
   140008f35:	or     bl,BYTE PTR [rdx]
   140008f37:	or     al,BYTE PTR [rax]
   140008f39:	add    BYTE PTR [rax],al
   140008f3b:	or     eax,0x52444849
   140008f40:	add    BYTE PTR [rax],al
   140008f42:	add    DWORD PTR [rax],eax
   140008f44:	add    BYTE PTR [rax],al
   140008f46:	add    DWORD PTR [rax],eax
   140008f48:	or     BYTE PTR [rsi],al
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140008f50:	data16 add BYTE PTR [rax],al
   140008f53:	and    BYTE PTR [rax],al
   140008f55:	rex.WB
   140008f56:	rex.R
   140008f57:	push   r12
   140008f59:	js     0x140008ef7
   140008f5b:	in     al,dx
   140008f5c:	mov    ebp,0x595c9059
   140008f61:	jp     0x140008f81
   140008f63:	neg    BYTE PTR [rbp-0x2a46911b]
   140008f69:	mov    esi,0x68ec2801
   140008f6e:	xor    al,0x7a
   140008f70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008f71:	jnp    0x140008ef9
   140008f73:	mov    ebp,0x6e1c3393
   140008f78:	(bad)  
   140008f79:	fwait
   140008f7a:	xchg   esp,eax
   140008f7b:	ins    DWORD PTR es:[rdi],dx
   140008f7c:	test   edx,eax
   140008f7e:	push   rsi
   140008f7f:	xchg   rsi,rax
   140008f81:	sub    al,0x52
   140008f83:	hlt    
   140008f84:	adc    dh,BYTE PTR [rsi-0x24f75d0b]
   140008f8a:	(bad)  
   140008f8b:	(bad)  
   140008f8c:	fmul   DWORD PTR [rdi]
   140008f8e:	mov    ?,WORD PTR [rax-0x8]
   140008f91:	leave  
   140008f92:	movabs eax,ds:0x1cb62d44a65149b0
   140008f9b:	xor    al,0x4d
   140008f9d:	shl    DWORD PTR [rdx+0x50],cl
   140008fa0:	and    al,0x35
   140008fa2:	pushf  
   140008fa3:	sbb    DWORD PTR [rcx-0xa],edi
   140008fa6:	outs   dx,BYTE PTR ds:[rsi]
   140008fa7:	rex.WX rol rbx,cl
   140008faa:	jmp    0x171bc6e4d
   140008faf:	lea    eax,[rsi]
   140008fb1:	push   rax
   140008fb2:	rex add DWORD PTR [rax-0x4408d543],ebp
   140008fb9:	pushf  
   140008fba:	jnp    0x140008f8a
   140008fbc:	icebp  
   140008fbd:	ret    
   140008fbe:	cmp    edi,esp
   140008fc0:	(bad)  
   140008fc1:	lods   eax,DWORD PTR ds:[rsi]
   140008fc2:	rex.R push rsi
   140008fc4:	movabs eax,ds:0x6445fba5269e9e80
   140008fcd:	fs out 0xcd,al
   140008fd0:	fwait
   140008fd1:	cdq    
   140008fd2:	ja     0x140008fcf
   140008fd4:	mov    edi,0x502fff7f
   140008fd9:	movabs eax,ds:0x50a8542a150a8542
   140008fe2:	movabs eax,ds:0x50a8542a150a8542
   140008feb:	movabs eax,ds:0x50a8542a150a8542
   140008ff4:	movabs eax,ds:0x50a8542a150a8542
   140008ffd:	movabs eax,ds:0x50a8542a150a8542
   140009006:	movabs eax,ds:0x50a8542a150a8542
   14000900f:	movabs eax,ds:0x50a8542a150a8542
   140009018:	movabs eax,ds:0x50a8542a150a8542
   140009021:	movabs eax,ds:0x50a8542a150a8542
   14000902a:	movabs eax,ds:0x50a8542a150a8542
   140009033:	movabs eax,ds:0x50a8542a150a8542
   14000903c:	movabs eax,ds:0x50a8542a150a8542
   140009045:	movabs eax,ds:0x50a8542a150a8542
   14000904e:	movabs eax,ds:0x50a8542a150a8542
   140009057:	movabs eax,ds:0x50a8542a150a8542
   140009060:	movabs eax,ds:0x50a8542a150a8542
   140009069:	movabs eax,ds:0x50a8542a150a8542
   140009072:	movabs eax,ds:0x50a8542a150a8542
   14000907b:	movabs eax,ds:0x50a8542a150a8542
   140009084:	movabs eax,ds:0x50a8542a150a8542
   14000908d:	movabs eax,ds:0x50a8542a150a8542
   140009096:	movabs eax,ds:0x50a8542a150a8542
   14000909f:	movabs eax,ds:0x50a8542a150a8542
   1400090a8:	movabs eax,ds:0x50a8542a150a8542
   1400090b1:	movabs eax,ds:0x50a8542a150a8542
   1400090ba:	movabs eax,ds:0x50a8542a150a8542
   1400090c3:	movabs eax,ds:0x50a8542a150a8542
   1400090cc:	movabs eax,ds:0x50a8542a150a8542
   1400090d5:	movabs eax,ds:0x50a8542a150a8542
   1400090de:	movabs eax,ds:0x50a8542a150a8542
   1400090e7:	movabs eax,ds:0x50a8542a150a8542
   1400090f0:	movabs eax,ds:0x50a8542a150a8542
   1400090f9:	movabs eax,ds:0x50a8542a150a8542
   140009102:	movabs eax,ds:0x50a8542a150a8542
   14000910b:	movabs eax,ds:0xf2061c2a150a8542
   140009114:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140009116:	rex test DWORD PTR [rdi],eax
   140009119:	jrcxz  0x14000912a
   14000911b:	mov    esi,0xccc6e5f4
   140009120:	int3   
   140009121:	int3   
   140009122:	(bad)  
   140009123:	jo     0x14000915d
   140009125:	pop    rsp
   140009126:	rex.WR shl rsp,cl
   140009129:	rex.R pushf 
   14000912b:	and    al,0x27
   14000912d:	mov    dl,0x4c
   14000912f:	pushf  
   140009130:	bnd jge 0x1400091a2
   140009133:	rex.WB mov BYTE PTR [r10+rbx*2+0x8],dil
   140009138:	xor    DWORD PTR [rdi+0x54a4f9e7],edx
   14000913e:	stos   BYTE PTR es:[rdi],al
   14000913f:	or     DWORD PTR [r9+0x18],r9d
   140009143:	movsxd ebx,DWORD PTR [rip+0x68842]        # 0x14007198b
   140009149:	rex.X or BYTE PTR [rbp-0x74],spl
   14000914d:	adc    edi,ebx
   14000914f:	test   DWORD PTR [rsi],0x529f1084
   140009155:	stos   BYTE PTR es:[rdi],al
   140009156:	cmp    eax,0xb56af7ce
   14000915b:	fidiv  DWORD PTR [rdi+0x3c]
   14000915e:	(bad)  
   14000915f:	scas   eax,DWORD PTR es:[rdi]
   140009160:	jp     0x140009120
   140009162:	call   FWORD PTR [rsi-0xc1a852a]
   140009168:	(bad)  
   140009169:	cmp    al,0x3f
   14000916b:	cld    
   14000916c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000916d:	div    DWORD PTR [rbx+0x151e8fc2]
   140009173:	add    DWORD PTR [rdx+rax*2-0x8],edi
   140009177:	out    dx,al
   140009178:	stos   DWORD PTR es:[rdi],eax
   140009179:	scas   eax,DWORD PTR es:[rdi]
   14000917a:	test   DWORD PTR [rcx-0x66],ecx
   14000917d:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000917f:	pop    rcx
   140009180:	mov    edx,0x62c92490
   140009185:	mov    bh,0xd7
   140009187:	pop    rdi
   140009188:	idiv   BYTE PTR [rbp-0x11]
   14000918b:	and    al,0xa5
   14000918d:	je     0x1400091c0
   14000918f:	rex.WRB mov r11b,0x69
   140009192:	and    esp,eax
   140009194:	movabs ds:0xaa5284f9e4566210,al
   14000919d:	add    eax,eax
   14000919f:	xlat   BYTE PTR ds:[rbx]
   1400091a0:	pop    rdx
   1400091a1:	jnp    0x140009199
   1400091a3:	jmp    0x140009129
   1400091a5:	adc    BYTE PTR [rdx+0x9],al
   1400091a8:	and    DWORD PTR [rax+0x6338294],esp
   1400091ae:	(bad)  
   1400091af:	cmp    DWORD PTR [rdi+rcx*8],edi
   1400091b2:	jl     0x140009160
   1400091b4:	mov    ch,0x6
   1400091b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400091b7:	adc    al,0x0
   1400091b9:	rex sub DWORD PTR [rcx+0x294a1a52],eax
   1400091c0:	test   DWORD PTR [rbp+0x68],0x408421ad
   1400091c7:	movs   DWORD PTR es:[rdi],DWORD PTR cs:[rsi]
   1400091c9:	(bad)  
   1400091ca:	pop    rdx
   1400091cb:	imul   ebx,edi,0xfffffff3
   1400091ce:	test   bh,ch
   1400091d0:	sti    
   1400091d1:	(bad)  [rax]
   1400091d3:	or     ch,BYTE PTR [rdi-0x2b]
   1400091d6:	imul   esi,DWORD PTR [rbp-0x21398d11],0xfffffff4
   1400091dd:	jl     0x1400091de
   1400091df:	(bad)  
   1400091e0:	and    edi,0xd9e17d5d
   1400091e6:	addr32 ss (bad) 
   1400091e9:	add    ebx,0x8447e153
   1400091ef:	mov    al,BYTE PTR [rax]
   1400091f1:	jle    0x1400091bb
   1400091f3:	clc    
   1400091f4:	cli    
   1400091f5:	mov    bh,0x5f
   1400091f7:	(bad)  
   1400091f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400091f9:	xchg   esp,eax
   1400091fa:	sahf   
   1400091fb:	call   0x14727980f
   140009200:	ret    
   140009201:	loope  0x1400091a5
   140009203:	out    0x79,eax
   140009205:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009206:	or     BYTE PTR [rcx],ah
   140009208:	(bad)  
   140009209:	shl    BYTE PTR [rdi*1-0x5d16db67],cl
   140009210:	enter  0x19f3,0x29
   140009214:	rex.WXB imul rbx,QWORD PTR gs:[r13+0x53],0x4a
   14000921a:	add    eax,0xe6b5a
   14000921f:	pop    rdx
   140009220:	imul   eax,DWORD PTR [rdx],0xffffff80
   140009223:	adc    al,BYTE PTR [rdx-0x40]
   140009226:	sbb    BYTE PTR [rbx],al
   140009228:	movsxd ecx,DWORD PTR [rsi+rbx*1]
   14000922b:	out    0xf0,eax
   14000922d:	jge    0x14000924e
   14000922f:	sahf   
   140009230:	test   BYTE PTR [ebx+0x5294e5db],bl
   140009237:	jo     0x140009207
   140009239:	add    DWORD PTR [rax],eax
   14000923b:	int3   
   14000923c:	or     bh,BYTE PTR [rdx]
   14000923e:	and    edi,esi
   140009240:	lahf   
   140009241:	rex.WX lods rax,QWORD PTR ds:[rsi]
   140009243:	cmc    
   140009244:	movabs eax,ds:0x4a520a5486b5a9db
   14000924d:	rex.RXB (bad) 
   14000924f:	enter  0xcb2,0x69
   140009253:	(bad)  
   140009254:	and    edi,ecx
   140009256:	jae    0x1400091e0
   140009258:	cmp    al,0xd7
   14000925a:	mov    WORD PTR [rdx-0x17],ss
   14000925d:	sti    
   14000925e:	jle    0x140009272
   140009260:	rex.RB loope 0x1400092b9
   140009263:	sub    eax,0x3cf5de8a
   140009268:	out    dx,eax
   140009269:	mov    ebx,0x76fe71e
   14000926e:	(bad)  
   14000926f:	clc    
   140009270:	fsubrp st(7),st
   140009272:	sahf   
   140009273:	jg     0x140009263
   140009275:	fcmovb st,st(7)
   140009277:	jo     0x140009271
   140009279:	sub    bh,ah
   14000927b:	mov    BYTE PTR [rcx+0x11],dl
   14000927e:	rol    BYTE PTR [rbx],0xf0
   140009281:	retf   0xafab
   140009284:	icebp  
   140009285:	cmp    BYTE PTR [rsi-0x64d32d99],cl
   14000928b:	mov    edx,DWORD PTR [rbx-0x4d34d19c]
   140009291:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009292:	pop    rdx
   140009293:	adc    al,0x2d
   140009295:	addr32 rex.X pushf 
   140009298:	rex.WX xchg rdx,rax
   14000929a:	hlt    
   14000929b:	push   rsp
   14000929c:	xchg   esi,eax
   14000929d:	mov    edi,DWORD PTR gs:[rcx-0x62]
   1400092a1:	rex.WRXB mov r15b,BYTE PTR [r15+r11*4]
   1400092a5:	nop
   1400092a6:	push   rdx
   1400092a7:	(bad)  
   1400092a8:	add    BYTE PTR [rax+rax*1],al
   1400092ab:	or     cl,BYTE PTR [rbp-0x13]
   1400092ae:	(bad)  
   1400092af:	xchg   esp,eax
   1400092b0:	push   rdx
   1400092b1:	xor    dh,al
   1400092b3:	rcr    BYTE PTR [rcx],0x83
   1400092b6:	out    0x79,eax
   1400092b8:	lock jge 0x14000928a
   1400092bb:	or     BYTE PTR [rip+0xffffffffa70685e7],dh        # 0xe70718a8
   1400092c1:	xchg   esp,eax
   1400092c2:	(bad)  
   1400092c3:	push   rcx
   1400092c4:	or     al,BYTE PTR [rdx+0x48]
   1400092c7:	jmp    0xcf6ca20d
   1400092cc:	(bad)  
   1400092cd:	push   0xffffffffffffffec
   1400092cf:	jbe    0x1400092ef
   1400092d1:	and    eax,0xebad87ec
   1400092d6:	lods   al,BYTE PTR ds:[rsi]
   1400092d7:	xor    DWORD PTR [rcx-0x61],0x223a52e7
   1400092de:	adc    BYTE PTR [rax],0x2
   1400092e1:	imul   ebx,DWORD PTR [rdx-0x1bcd34df],0x14a56a52
   1400092eb:	jl     0x1400092bc
   1400092ed:	retf   
   1400092ee:	(bad)  
   1400092ef:	and    BYTE PTR [rax-0x29],ch
   1400092f2:	push   0xffffffffffffffd1
   1400092f4:	lods   eax,DWORD PTR ds:[rsi]
   1400092f5:	pop    rdx
   1400092f6:	adc    al,0x7d
   1400092f8:	(bad)  
   1400092f9:	push   rdx
   1400092fa:	cli    
   1400092fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400092fc:	out    dx,eax
   1400092fd:	stc    
   1400092fe:	out    dx,eax
   1400092ff:	jb     0x140009290
   140009301:	pop    rdi
   140009302:	(bad)  
   140009303:	fdivr  st(3),st
   140009305:	iret   
   140009306:	ins    DWORD PTR es:[rdi],dx
   140009307:	sbb    al,0x7b
   140009309:	movsxd ebp,DWORD PTR [rdx]
   14000930b:	jl     0x1400092af
   14000930d:	clc    
   14000930e:	xlat   BYTE PTR ds:[rbx]
   14000930f:	xchg   esi,eax
   140009310:	add    BYTE PTR [rsi-0x5d00380b],bh
   140009316:	adc    DWORD PTR [rdi],esp
   140009318:	leave  
   140009319:	push   rdx
   14000931a:	(bad)  
   14000931b:	gs rex.WXB jno 0x14000933b
   14000931f:	lahf   
   140009320:	lods   al,BYTE PTR ds:[rsi]
   140009321:	rex.RB shl DWORD PTR [r10+0x34e5f3c8],1
   140009328:	int    0xa6
   14000932a:	lods   al,BYTE PTR ds:[rsi]
   14000932b:	stc    
   14000932c:	cmp    eax,0x569eb4a3
   140009331:	rex.WX xor rax,0x52a15295
   140009337:	mov    al,BYTE PTR [rbx]
   140009339:	movabs al,ds:0xc6d38800a6b5a000
   140009342:	mov    WORD PTR [rcx],?
   140009344:	rex.R (bad) 
   140009346:	or     dh,cl
   140009348:	lods   eax,DWORD PTR ds:[rsi]
   140009349:	out    0xf6,al
   14000934b:	cmp    al,0x30
   14000934d:	(bad)  
   14000934e:	lock push rsi
   140009350:	shr    BYTE PTR [rcx+0x21],0xd8
   140009354:	adc    al,0x84
   140009356:	xchg   edx,eax
   140009357:	rex.XB test r15d,ecx
   14000935a:	rex.B stos DWORD PTR es:[rdi],eax
   14000935c:	jrcxz  0x140009369
   14000935e:	je     0x140009351
   140009360:	sbb    eax,0x38c20aad
   140009365:	mov    WORD PTR [rax],gs
   140009367:	in     al,dx
   140009368:	idiv   BYTE PTR [rdi]
   14000936a:	loopne 0x1400093e3
   14000936c:	(bad)  
   14000936d:	(bad)  
   14000936e:	cmp    al,0x97
   140009370:	adc    cl,BYTE PTR [rdx+0x29]
   140009373:	rex.XB or bl,BYTE PTR [r9+0x6]
   140009377:	and    DWORD PTR [rdx+rsi*4],eax
   14000937a:	rex.WR adc al,0x56
   14000937d:	add    esp,DWORD PTR [rdi+0x4c]
   140009380:	cli    
   140009381:	mov    esi,0xa2d5a83f
   140009386:	mov    ch,0x28
   140009388:	or     al,0xdf
   14000938a:	or     DWORD PTR [rbx-0x2739b220],eax
   140009390:	fdivr  st(3),st
   140009393:	fdivp  st(1),st
   140009395:	cld    
   140009396:	or     ecx,edi
   140009398:	fistp  QWORD PTR [rax+rbp*8-0x63]
   14000939c:	stos   BYTE PTR es:[rdi],al
   14000939d:	lock mov cl,0xe2
   1400093a0:	pop    rdi
   1400093a1:	sub    DWORD PTR [rdx],eax
   1400093a3:	clc    
   1400093a4:	(bad)  
   1400093a5:	rex.WXB (bad) 
   1400093a7:	rex.WRXB (bad) 
   1400093a9:	jrcxz  0x140009423
   1400093ab:	jle    0x1400093c5
   1400093ad:	(bad)  
   1400093ae:	mov    bl,0x9c
   1400093b0:	repz mov bl,0x81
   1400093b3:	out    dx,eax
   1400093b4:	iret   
   1400093b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400093b6:	pop    rcx
   1400093b7:	mov    dh,0x98
   1400093b9:	fnstenv gs:[rdx+0x1c]
   1400093bd:	(bad)  
   1400093be:	(bad)  
   1400093bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400093c0:	xchg   esp,eax
   1400093c1:	mov    bl,0x4a
   1400093c3:	jmp    0x14000940e
   1400093c5:	sub    DWORD PTR [rbp-0x5c],esp
   1400093c8:	xchg   esp,eax
   1400093c9:	mov    dl,BYTE PTR [rdx+rdx*2-0x3315ffff]
   1400093d0:	outs   dx,DWORD PTR ds:[rsi]
   1400093d1:	out    0x3b,eax
   1400093d3:	xchg   edi,eax
   1400093d4:	mov    ch,0x75
   1400093d6:	stos   DWORD PTR es:[rdi],eax
   1400093d7:	(bad)  
   1400093d8:	test   bh,ch
   1400093da:	sti    
   1400093db:	test   al,0xd7
   1400093dd:	push   0xffffffffffffffe0
   1400093df:	mov    WORD PTR [rcx],fs
   1400093e1:	mov    ah,BYTE PTR [rdx+0x2d3b6342]
   1400093e7:	rex.WRB leave 
   1400093e9:	mov    esi,0x473c8b40
   1400093ee:	sahf   
   1400093ef:	out    0xc8,eax
   1400093f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400093f2:	test   BYTE PTR [rdi+rcx*4+0x2e],dl
   1400093f6:	test   BYTE PTR [rdi+0x7d],al
   1400093f9:	out    dx,eax
   1400093fa:	push   rcx
   1400093fb:	leave  
   1400093fc:	jrcxz  0x140009426
   1400093fe:	push   rdx
   1400093ff:	cmp    dh,cl
   140009401:	ss cmp eax,0x7da41888
   140009407:	mov    BYTE PTR [rdi+rax*2],bh
   14000940a:	xchg   esi,eax
   14000940b:	gs enter 0x5132,0xc4
   140009410:	sbb    al,BYTE PTR [rax]
   140009412:	sub    bh,bl
   140009414:	repz shl BYTE PTR [rax],cl
   140009417:	lock cmp edx,DWORD PTR [rcx+0x14]
   14000941b:	pop    rbp
   14000941c:	scas   eax,DWORD PTR es:[rdi]
   14000941d:	xlat   BYTE PTR ds:[rbx]
   14000941e:	push   0xffffffffffffffaf
   140009420:	xor    BYTE PTR [rdx-0x21],cl
   140009423:	movabs eax,ds:0xcf8beaf0c30b5e94
   14000942c:	ds mov bl,0x7b
   14000942f:	in     al,0x9f
   140009431:	push   rdi
   140009432:	clc    
   140009433:	pop    rax
   140009434:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009436:	sahf   
   140009437:	add    BYTE PTR [rsi-0x28905206],bh
   14000943d:	test   BYTE PTR [rax],dl
   14000943f:	xor    edi,DWORD PTR [rcx-0x62]
   140009442:	iret   
   140009443:	xchg   BYTE PTR [rcx+0x78],ah
   140009446:	rex.X or BYTE PTR [rcx-0x16269964],sil
   14000944d:	xor    al,0x4d
   14000944f:	rex.WRXB
   140009450:	fs cdq 
   140009452:	cwde   
   140009453:	retf   0x7cf3
   140009456:	pop    rsi
   140009457:	imul   edi,DWORD PTR [rip+0xffffffffe56a9523],0x79        # 0x1256b2981
   14000945e:	pop    rsi
   14000945f:	xlat   BYTE PTR ds:[rbx]
   140009460:	pop    rdx
   140009461:	sti    
   140009462:	pop    rdx
   140009463:	imul   esp,DWORD PTR [rsi+0x2f],0x56
   140009467:	or     dl,BYTE PTR [rbx]
   140009469:	xor    BYTE PTR [rbx+0x2627b04f],bh
   14000946f:	pop    rdx
   140009470:	lock cmp eax,0x1d7a8d0f
   140009476:	fdivr  st(3),st
   140009478:	adc    BYTE PTR [rip+0xfffffffff0a52801],al        # 0x130a5bc7f
   14000947e:	cmp    eax,0x277d6e0f
   140009483:	loopne 0x140009445
   140009485:	mov    esi,0x42a3d8f
   14000948a:	pop    rdx
   14000948b:	jmp    0x14000943e
   14000948d:	(bad)  
   14000948e:	and    DWORD PTR [rbp+0x2968cc2c],esp
   140009494:	and    eax,0x60c823f2
   140009499:	adc    al,0xf
   14000949b:	xor    dl,cl
   14000949d:	(bad)  
   14000949e:	ins    DWORD PTR es:[rdi],dx
   14000949f:	mov    DWORD PTR [rbx],0x51611f97
   1400094a5:	cmp    al,0xaa
   1400094a7:	pop    rbx
   1400094a8:	jno    0x140009486
   1400094aa:	ins    DWORD PTR es:[rdi],dx
   1400094ab:	jo     0x140009474
   1400094ad:	sar    DWORD PTR [rcx+0x2c6a6914],0x7
   1400094b4:	rex.WXB xchg r12,rax
   1400094b6:	(bad)  
   1400094b8:	pop    rsp
   1400094b9:	add    al,0x41
   1400094bb:	ror    BYTE PTR [rdi+0x146ef0a2],1
   1400094c1:	xchg   bh,bl
   1400094c3:	jae    0x1294ae2a9
   1400094c9:	sti    
   1400094ca:	xchg   esp,eax
   1400094cb:	mov    cl,0xeb
   1400094cd:	pop    rdi
   1400094ce:	clc    
   1400094cf:	icebp  
   1400094d0:	(bad)  
   1400094d1:	stos   DWORD PTR es:[rdi],eax
   1400094d2:	pop    rax
   1400094d3:	ret    
   1400094d4:	(bad)  
   1400094d5:	mov    BYTE PTR [rdi-0x7c],cl
   1400094d8:	add    BYTE PTR [rsi+0x7ecbd2f1],bh
   1400094de:	mov    bh,0xdf
   1400094e0:	lahf   
   1400094e1:	add    esi,DWORD PTR [rax]
   1400094e3:	push   rdi
   1400094e4:	scas   eax,DWORD PTR es:[rdi]
   1400094e5:	(bad)  
   1400094e6:	out    0xf3,al
   1400094e8:	cmp    al,0x3f
   1400094ea:	cdq    
   1400094eb:	fldenvw [rdx-0x66]
   1400094ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400094f0:	(bad)  
   1400094f1:	jrcxz  0x14000952b
   1400094f3:	cmp    DWORD PTR [rip+0x394a4160],eax        # 0x1794ad659
   1400094f9:	xchg   ebx,eax
   1400094fa:	rex.WXB fnstenv [r10+0x4d6077e6]
   140009501:	jo     0x1400094aa
   140009503:	test   eax,0x5d485949
   140009508:	and    al,0xdc
   14000950a:	repz cmp al,0x4c
   14000950d:	rex.WR mov spl,0xe0
   140009510:	jno    0x1400094a0
   140009512:	rex.RX mov ebp,0x6a19c601
   140009518:	(bad)  
   140009519:	or     BYTE PTR [rdx+0x8],al
   14000951c:	add    bl,bh
   14000951e:	(bad)  
   14000951f:	or     al,al
   140009521:	jge    0x14000950a
   140009523:	cmp    BYTE PTR [rsi-0x11284710],bh
   140009529:	std    
   14000952a:	mov    eax,0x8efdc7cf
   14000952f:	push   rdx
   140009530:	(bad)  
   140009531:	add    BYTE PTR [rsi+0x1c19671c],0x25
   140009538:	ins    BYTE PTR es:[rdi],dx
   140009539:	(bad)  
   14000953a:	add    ebx,ebx
   14000953c:	jbe    0x1400094da
   14000953e:	iret   
   14000953f:	(bad)  
   140009540:	xchg   esi,eax
   140009541:	sbb    dh,al
   140009543:	xchg   ecx,eax
   140009544:	ret    0xb147
   140009547:	adc    dh,al
   140009549:	xchg   edx,eax
   14000954a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000954b:	or     eax,0x8e79e642
   140009550:	rex.WR mov bl,r15b
   140009553:	fmul   QWORD PTR [rcx]
   140009555:	rex.X mov BYTE PTR [rdx],cl
   140009558:	rex.WR adc BYTE PTR [rdx+0x33],r14b
   14000955c:	lock std 
   14000955e:	stos   DWORD PTR es:[rdi],eax
   14000955f:	(bad)  
   140009560:	sbb    BYTE PTR [rsi-0x142ebaed],bh
   140009566:	add    dh,bl
   140009568:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009569:	xchg   esp,eax
   14000956a:	scas   al,BYTE PTR es:[rdi]
   14000956b:	jl     0x14000956b
   14000956d:	test   edi,esp
   14000956f:	sti    
   140009570:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   140009572:	push   rax
   140009573:	test   DWORD PTR [rdi],eax
   140009575:	loop   0x1400094fe
   140009577:	rex.RX add BYTE PTR [rdi-0x7],r11b
   14000957b:	cli    
   14000957c:	(bad)  
   14000957d:	cld    
   14000957e:	cmp    al,0xcf
   140009580:	pop    rbx
   140009581:	mov    ebp,0x7a7a7f7e
   140009586:	push   0xffffffffffffffea
   140009588:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009589:	(bad)  
   14000958a:	cli    
   14000958b:	fs pushf 
   14000958d:	and    al,0x67
   14000958f:	xchg   ebx,eax
   140009591:	js     0x1400095cc
   140009593:	rex.WRB rcl QWORD PTR [r11],cl
   140009596:	test   BYTE PTR [rax+0x2b75ad59],dl
   14000959c:	xchg   edi,eax
   14000959d:	mov    dl,0x25
   14000959f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400095a0:	ins    BYTE PTR es:[rdi],dx
   1400095a1:	xchg   esp,eax
   1400095a2:	cld    
   1400095a3:	push   0xffffffffffffffe2
   1400095a5:	jl     0x140009591
   1400095a7:	jb     0x140009599
   1400095a9:	stos   DWORD PTR es:[rdi],eax
   1400095aa:	pushf  
   1400095ab:	fsubrp st(2),st
   1400095ad:	pushf  
   1400095ae:	movsxd esi,DWORD PTR [rdx-0x5e]
   1400095b1:	add    eax,0x8d1a39ce
   1400095b6:	(bad)  
   1400095b7:	cmp    BYTE PTR [rbx+0x8],ah
   1400095ba:	lods   eax,DWORD PTR ds:[rsi]
   1400095bb:	(bad)  
   1400095bc:	(bad)  
   1400095bd:	jl     0x1400095de
   1400095bf:	test   BYTE PTR [rax],dl
   1400095c1:	js     0x140009561
   1400095c3:	(bad)  
   1400095c4:	(bad)  
   1400095c5:	or     BYTE PTR [rdi],bl
   1400095c7:	(bad)  
   1400095c8:	adc    DWORD PTR [rdi],ebx
   1400095ca:	(bad)
   1400095cd:	mov    ah,0x5b
   1400095cf:	xor    al,0x4e
   1400095d1:	call   0x170f8139d
   1400095d6:	movabs ds:0xacad1f9c248c38,al
   1400095df:	mov    eax,0xe261dd14
   1400095e4:	repz ret 
   1400095e6:	and    BYTE PTR [rdi+0x1feb6ae3],al
   1400095ec:	(bad)  
   1400095ed:	and    DWORD PTR [rsp+rbp*4],edi
   1400095f0:	test   edx,esp
   1400095f2:	loopne 0x1400095ea
   1400095f4:	(bad)  
   1400095f5:	adc    DWORD PTR [rbx-0x3bebb135],eax
   1400095fb:	and    BYTE PTR [rsi+rdx*2+0x738f6b5a],al
   140009602:	loope  0x1400095ff
   140009604:	jle    0x140009645
   140009606:	mov    al,dl
   140009608:	(bad)  
   140009609:	pop    rdx
   14000960a:	adc    al,0xbd
   14000960c:	(bad)  
   14000960d:	clc    
   14000960e:	(bad)  
   14000960f:	jmp    0x1400095ed
   140009611:	repz fiadd WORD PTR [rcx]
   140009614:	jo     0x1400095f9
   140009616:	or     edi,DWORD PTR [rdi]
   140009618:	(bad)  
   140009619:	loop   0x140009605
   14000961b:	xchg   ecx,eax
   14000961c:	jg     0x140009670
   14000961e:	movabs eax,ds:0xed7d5f77c01123c0
   140009627:	(bad)  
   140009628:	(bad)  
   140009629:	cmp    ah,bh
   14000962b:	test   DWORD PTR [rax+rcx*4-0x31],ecx
   14000962f:	scas   al,BYTE PTR es:[rdi]
   140009630:	outs   dx,DWORD PTR ds:[rsi]
   140009631:	ins    BYTE PTR es:[rdi],dx
   140009632:	jle    0x140009682
   140009634:	or     BYTE PTR [rcx],dh
   140009636:	sub    edx,DWORD PTR [rbp+0x7ca52baa]
   14000963c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000963d:	xchg   esp,eax
   14000963e:	scas   eax,DWORD PTR es:[rdi]
   14000963f:	mov    ch,0x66
   140009641:	mov    al,0x82
   140009643:	cmp    eax,0xa397466a
   140009648:	fisub  WORD PTR [rcx+0x18]
   14000964b:	movabs al,ds:0x5ebd7a863183af51
   140009654:	or     BYTE PTR [rsi],dh
   140009656:	movsxd ecx,DWORD PTR [rcx+rax*4]
   140009659:	out    dx,eax
   14000965a:	(bad)  [rax]
   14000965c:	sbb    ch,BYTE PTR [rbx]
   14000965e:	mov    esi,0x11f46c5b
   140009663:	sub    DWORD PTR [rdi+0x2dda84c3],ebp
   140009669:	(bad)  
   14000966a:	addr32 retf 0x261f
   14000966e:	call   0x13ff98c59
   140009673:	jns    0x140009645
   140009675:	imul   esi,edi,0x5f
   140009678:	push   0x44
   14000967a:	fisttp DWORD PTR [rdi+0x4269cf5b]
   140009680:	lods   eax,DWORD PTR ds:[rsi]
   140009681:	jne    0x1400096c4
   140009683:	or     al,0x87
   140009685:	adc    DWORD PTR [rsi+rax*4-0x3b1c96c7],edx
   14000968c:	push   0x7251dd74
   140009691:	cmp    BYTE PTR [rdx+0x3f],ch
   140009694:	(bad)  
   140009695:	mov    ebp,0xc213c607
   14000969a:	(bad)  
   14000969b:	(bad)  
   14000969c:	or     al,0xe
   14000969e:	sub    al,0x53
   1400096a0:	stos   BYTE PTR es:[rdi],al
   1400096a1:	jo     0x1400096ca
   1400096a3:	jb     0x140009640
   1400096a5:	ret    0xa974
   1400096a8:	retf   
   1400096a9:	pop    rsp
   1400096aa:	rex.WX
   1400096ab:	or     QWORD PTR [r9-0x293befbf],r10
   1400096b2:	push   0x78
   1400096b4:	(bad)  
   1400096b5:	or     al,0xc3
   1400096b7:	out    dx,eax
   1400096b8:	xchg   DWORD PTR [rcx-0x8],esp
   1400096bb:	jge    0x140009707
   1400096bd:	jmp    0x10af64437
   1400096c2:	rex.WRXB movabs r14,0x448f094356542f8
   1400096cc:	lock stos DWORD PTR es:[rdi],eax
   1400096ce:	jg     0x1400096bf
   1400096d0:	out    dx,eax
   1400096d1:	dec    DWORD PTR [rdi-0x74]
   1400096d4:	mov    cl,0xff
   1400096d6:	xchg   esi,eax
   1400096d7:	xor    esi,esp
   1400096d9:	icebp  
   1400096da:	push   rdx
   1400096db:	and    al,0xdc
   1400096dd:	or     DWORD PTR [rax+0x341371e7],edi
   1400096e3:	jae    0x1400096ff
   1400096e5:	fwait
   1400096e6:	push   rdx
   1400096e7:	add    al,0x56
   1400096e9:	movsxd eax,DWORD PTR [rdi-0x2a]
   1400096ec:	and    al,0xf7
   1400096ee:	mov    esp,0xf95a20fd
   1400096f3:	rex.X sub BYTE PTR [rbx],cl
   1400096f6:	call   0x13979cb7e
   1400096fb:	repz movsxd eax,DWORD PTR [rip+0xffffffff84c21ec7]        # 0xc4c2b5c9
   140009702:	cmp    eax,0x783ffb5c
   140009707:	std    
   140009708:	movabs ds:0x49696bdd9ea3872c,eax
   140009711:	movabs al,ds:0x89e1e01ff9c7064c
   14000971a:	loope  0x1400096d4
   14000971c:	(bad)  
   14000971d:	ret    0x9661
   140009720:	ret    0x90c3
   140009723:	shl    DWORD PTR [rbx+0x1238c110],0x38
   14000972a:	in     al,dx
   14000972b:	(bad)  
   14000972c:	retf   0x4841
   14000972f:	out    0x4e,eax
   140009731:	or     BYTE PTR [rcx],ah
   140009733:	and    dl,dh
   140009735:	pop    rsp
   140009736:	sub    esp,DWORD PTR [rbp+0x1a7ef810]
   14000973c:	xchg   BYTE PTR [rcx+0x3b],al
   14000973f:	or     al,0xc3
   140009741:	fild   DWORD PTR [rcx-0x7e14011]
   140009747:	(bad)  
   140009748:	fild   DWORD PTR [rcx+0x18]
   14000974b:	mov    esi,0xe7dae009
   140009750:	pop    rdi
   140009751:	js     0x140009751
   140009753:	pop    rdi
   140009754:	retf   
   140009755:	(bad)  
   140009756:	in     eax,0x23
   140009758:	adc    eax,eax
   14000975a:	(bad)  
   14000975b:	cli    
   14000975c:	int    0xdf
   14000975e:	mov    edx,0x7d3d2945
   140009763:	repnz (bad) 
   140009765:	adc    bl,BYTE PTR [rsi-0x17ac3307]
   14000976b:	je     0x1400097e8
   14000976d:	cwde   
   14000976e:	push   0x51099135
   140009773:	pop    rsp
   140009774:	mov    ah,0xc5
   140009776:	(bad)  
   140009777:	mov    WORD PTR [rax],cs
   140009779:	icebp  
   14000977a:	jno    0x140009780
   14000977c:	sti    
   14000977d:	rol    BYTE PTR [rsi],0x3e
   140009780:	(bad)  
   140009781:	mov    edx,0xd18121c7
   140009786:	cmc    
   140009787:	(bad)  
   140009788:	mov    ebp,0xa0f65d1e
   14000978d:	or     esi,DWORD PTR [rdi+0x1c]
   140009790:	sub    DWORD PTR [rdi+rax*8],ebx
   140009793:	sub    eax,0xc8512e38
   140009798:	adc    dl,BYTE PTR [rcx]
   14000979a:	mov    eax,0x305ae3e7
   14000979f:	rol    BYTE PTR [rdi-0x49],0x16
   1400097a3:	(bad)  
   1400097a4:	sbb    BYTE PTR [rdi],bl
   1400097a6:	push   rcx
   1400097a7:	in     eax,0x75
   1400097a9:	pop    QWORD PTR [rdi+0x8]
   1400097ac:	(bad)  
   1400097ad:	(bad)  
   1400097ae:	sbb    esp,ebx
   1400097b0:	idiv   DWORD PTR [rbp-0x46f29ddd]
   1400097b6:	xchg   esp,eax
   1400097b7:	(bad)  
   1400097b8:	xor    edx,DWORD PTR [rsi-0x73c04105]
   1400097be:	movabs ds:0xbbcf3c37c30a2370,al
   1400097c7:	sbb    bh,al
   1400097c9:	rcr    ebx,0x8c
   1400097cc:	mov    bl,0xb7
   1400097ce:	xchg   esp,eax
   1400097cf:	push   rdx
   1400097d0:	sub    ebx,DWORD PTR [rdi-0x8]
   1400097d3:	icebp  
   1400097d4:	(bad)  
   1400097d5:	mov    bl,0x47
   1400097d7:	cli    
   1400097d8:	jrcxz  0x140009819
   1400097da:	add    edi,DWORD PTR [rax+0x24]
   1400097dd:	add    bh,al
   1400097df:	mov    ebx,0x563ffbff
   1400097e4:	rcl    DWORD PTR [rbx-0x6d],cl
   1400097e7:	xor    BYTE PTR fs:[rax],bl
   1400097ea:	(bad)  
   1400097eb:	adc    BYTE PTR [rdx+0x2c39f985],al
   1400097f1:	(bad)  
   1400097f2:	iret   
   1400097f3:	movsxd esi,DWORD PTR [rdx+0x62]
   1400097f6:	add    dl,BYTE PTR [rbx]
   1400097f8:	lods   eax,DWORD PTR ds:[rsi]
   1400097f9:	es push 0x51
   1400097fc:	add    al,0x4a
   1400097fe:	imul   esi,DWORD PTR [rcx-0x50],0x28fc445d
   140009805:	(bad)  
   140009806:	clc    
   140009807:	(bad)  
   140009808:	jrcxz  0x14000985b
   14000980a:	rex.W sar BYTE PTR [rbp-0x786edae1],0xd1
   140009812:	out    dx,al
   140009813:	out    0xf5,al
   140009815:	icebp  
   140009816:	test   DWORD PTR [rbx-0x24],edi
   140009819:	jmp    0x14000988c
   14000981b:	lahf   
   14000981c:	sbb    eax,0xd96e0a46
   140009821:	test   al,0xa5
   140009823:	jo     0x1400097d1
   140009825:	ins    DWORD PTR es:[rdi],dx
   140009826:	(bad)  
   140009827:	(bad)  
   140009828:	pop    rbp
   140009829:	loopne 0x14000980c
   14000982b:	pop    rsp
   14000982c:	mov    bl,al
   14000982e:	or     BYTE PTR [rcx-0x1],ah
   140009831:	jae    0x1400098a8
   140009833:	fistp  QWORD PTR [rdx+0x47]
   140009836:	std    
   140009837:	not    BYTE PTR [rcx-0x15]
   14000983a:	sub    dl,BYTE PTR ds:[rcx]
   14000983d:	mov    ebx,?
   14000983f:	std    
   140009840:	jb     0x1400097ee
   140009842:	sar    DWORD PTR [rcx+0x523ab613],0x6b
   140009849:	rex (bad) 
   14000984b:	mov    esi,0xb061871f
   140009850:	sbb    eax,DWORD PTR [rsi]
   140009852:	ror    DWORD PTR [rdx+0x18],0x86
   140009856:	scas   eax,DWORD PTR es:[rdi]
   140009857:	jns    0x1400097f5
   140009859:	mov    edi,0x5bfef9e5
   14000985e:	pushf  
   14000985f:	mov    cl,0xeb
   140009861:	(bad)  
   140009862:	(bad)  
   140009863:	fdiv   QWORD PTR [rbx-0x7935e013]
   140009869:	jl     0x1400097ed
   14000986b:	js     0x140009891
   14000986d:	sub    esp,edi
   14000986f:	mov    ch,0xbf
   140009871:	dec    DWORD PTR [rdi]
   140009873:	cmc    
   140009874:	in     eax,0x4b
   140009876:	(bad)  
   140009877:	loope  0x140009854
   140009879:	(bad)  
   14000987b:	rex.WR or BYTE PTR [rcx+rcx*2],r12b
   14000987f:	(bad)  
   140009880:	cmp    BYTE PTR [rcx+0x10],cl
   140009883:	(bad)  
   140009884:	or     DWORD PTR [rdx+rdx*2-0x3b656568],edx
   14000988b:	mov    DWORD PTR [rbp-0x323033fb],eax
   140009891:	vprorvq zmm16{k2},zmm21,ZMMWORD PTR [rsi+0x7158c60]
   14000989b:	(bad)  [rbp+0x7bc99cc7]
   1400098a1:	fild   WORD PTR [rsi+0x1f26843d]
   1400098a7:	(bad)
   1400098aa:	std    
   1400098ab:	(bad)  
   1400098ac:	xchg   ebp,eax
   1400098ad:	(bad)  
   1400098ae:	(bad)  
   1400098af:	rex.RXB ror BYTE PTR [r15+0x12c3cefa],1
   1400098b6:	ret    0x65b8
   1400098b9:	btr    DWORD PTR [rsi+0x1c1d631a],ecx
   1400098c0:	ins    WORD PTR es:[rdi],dx
   1400098c2:	sbb    al,0xba
   1400098c4:	sub    eax,0xfb97ec87
   1400098c9:	std    
   1400098ca:	ret    
   1400098cb:	idiv   bl
   1400098cd:	pop    rax
   1400098ce:	out    dx,eax
   1400098cf:	(bad)  
   1400098d0:	mov    al,0x12
   1400098d2:	mov    ss,WORD PTR [rip+0xffffffffc998f88b]        # 0x109999163
   1400098d8:	loopne 0x140009898
   1400098da:	fbstp  TBYTE PTR [rbp+0x4ee706b1]
   1400098e0:	in     al,0x36
   1400098e2:	jge    0x14000993d
   1400098e4:	rex.WX pop rbp
   1400098e6:	out    0x41,al
   1400098e8:	adc    ah,dh
   1400098ea:	movabs ds:0x4a51af6ad7ab5c28,al
   1400098f3:	scas   eax,DWORD PTR es:[rdi]
   1400098f4:	stc    
   1400098f5:	sahf   
   1400098f6:	idiv   DWORD PTR [rdx+0x10]
   1400098f9:	add    al,0xef
   1400098fb:	sub    BYTE PTR [rbp-0x308c0a9],ch
   140009901:	jae    0x1400098ca
   140009903:	iret   
   140009904:	sti    
   140009905:	jle    0x140009889
   140009907:	clc    
   140009908:	rex.W add al,0xe0
   14000990b:	jno    0x14000991b
   14000990d:	rex.WX sbb QWORD PTR [rax],rcx
   140009910:	sub    eax,0x60ace4a5
   140009915:	(bad)
   140009918:	(bad)  
   140009919:	sbb    al,0x23
   14000991b:	rex.WB push r11
   14000991d:	(bad)  
   14000991e:	jno    0x140009922
   140009920:	lods   eax,DWORD PTR ds:[rsi]
   140009921:	xor    eax,0x385a2726
   140009926:	mov    cl,0xb8
   140009928:	mov    cl,bl
   14000992a:	cdq    
   14000992b:	imul   ecx,DWORD PTR [rsp+rsi*4+0x4c],0x56319e1e
   140009933:	nop
   140009934:	cmp    BYTE PTR [rax+rax*2-0x56],0xec
   140009939:	(bad)  
   14000993a:	push   rax
   14000993b:	(bad)  
   14000993c:	repnz ror DWORD PTR [rbx-0x128f9399],1
   140009943:	mov    BYTE PTR [rbx],cl
   140009945:	jmp    0xd6e4db82
   14000994a:	cmp    eax,0xee30858a
   14000994f:	cmp    eax,edi
   140009951:	mov    cl,0xa
   140009953:	rex.RX (bad) 
   140009955:	sub    ebp,DWORD PTR [rdi]
   140009957:	ja     0x1400098db
   140009959:	jno    0x140009973
   14000995b:	sub    esp,edi
   14000995d:	xor    BYTE PTR [rcx],cl
   14000995f:	loope  0x140009904
   140009961:	nop
   140009962:	cmp    ecx,0xeebe1d5c
   140009968:	xor    ecx,ecx
   14000996a:	loopne 0x14000994f
   14000996c:	and    al,BYTE PTR [rdx+0x5ac7fefb]
   140009972:	pop    rsi
   140009973:	movabs ds:0x7ca009a0f636d265,eax
   14000997c:	fisttp WORD PTR [rdi+0x2b68b56b]
   140009982:	or     al,0x82
   140009984:	jb     0x123de11aa
   14000998a:	cld    
   14000998b:	or     eax,0xf81f79ee
   140009990:	pushf  
   140009991:	pop    rdi
   140009992:	jnp    0x140009975
   140009994:	fldenv [rdi-0x2]
   140009997:	push   rsp
   140009998:	add    eax,0x1123f21
   14000999d:	mov    eax,0xca5a5772
   1400099a2:	lods   eax,DWORD PTR ds:[rsi]
   1400099a3:	add    esp,DWORD PTR [rsi+0x7008541]
   1400099a9:	push   rdx
   1400099aa:	jp     0x140009a06
   1400099ac:	imul   eax,esp,0x69
   1400099af:	or     dl,BYTE PTR [rcx+0x4084c865]
   1400099b5:	(bad)  
   1400099b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400099b7:	enter  0x44a5,0xb3
   1400099bb:	rol    eax,1
   1400099bd:	int3   
   1400099be:	(bad)  
   1400099bf:	adc    al,0x66
   1400099c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400099c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400099c3:	xor    cl,dl
   1400099c5:	push   0x15
   1400099c7:	imul   edi,DWORD PTR [rip+0x441694a],0x2ce6552e        # 0x14442031b
   1400099d1:	xchg   BYTE PTR [rdi-0x6dfb3c3b],al
   1400099d7:	rex.RX sar DWORD PTR [rbx+0x47],cl
   1400099db:	adc    eax,0xfcb51d00
   1400099e0:	mov    al,0x75
   1400099e2:	out    dx,al
   1400099e3:	xlat   BYTE PTR ds:[rbx]
   1400099e4:	loopne 0x1400099ed
   1400099e6:	mov    edi,0x1fdff0fb
   1400099eb:	and    edi,esp
   1400099ed:	and    eax,0xac4754f2
   1400099f2:	jg     0x140009a50
   1400099f4:	push   rdx
   1400099f5:	cmp    al,dh
   1400099f7:	sbb    dh,bh
   1400099f9:	(bad)  
   1400099fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400099fb:	xchg   DWORD PTR [rcx-0x692383e1],ecx
   140009a01:	ror    DWORD PTR [rdi+0x61c6088a],0xd4
   140009a08:	popf   
   140009a09:	sub    BYTE PTR [rdx-0x168ac970],al
   140009a0f:	jnp    0x1400099af
   140009a11:	mov    BYTE PTR [rdx-0x3cf3d090],ah
   140009a17:	sbb    esi,DWORD PTR [rbp+0x338d7a28]
   140009a1d:	imul   BYTE PTR [rsi]
   140009a1f:	idiv   DWORD PTR [rdi+rsi*8-0x52031c3]
   140009a26:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a27:	fmul   QWORD PTR [rcx-0x4ffbb71]
   140009a2d:	xor    eax,0x2b3ef4ee
   140009a32:	rcr    BYTE PTR [rcx+0x2],0xe3
   140009a36:	sub    ch,dl
   140009a38:	retf   0xd3ef
   140009a3b:	xor    al,0x45
   140009a3d:	push   0x9
   140009a3f:	rcr    DWORD PTR [rsi],0x2c
   140009a42:	rex.R push rcx
   140009a44:	test   BYTE PTR [rcx+0x4ccc0989],ch
   140009a4a:	rex.WRXB movsxd r12,DWORD PTR [r10-0x18dd32b]
   140009a51:	out    dx,al
   140009a52:	movabs ds:0x138effe51cd6172b,al
   140009a5b:	fiadd  WORD PTR [rdi-0x3d35d28f]
   140009a61:	push   rbx
   140009a62:	rex.WRX and r9,QWORD PTR [rsi-0x5c0b2d]
   140009a69:	jae    0x140009ac3
   140009a6b:	cli    
   140009a6c:	out    dx,eax
   140009a6d:	rex.B
   140009a6e:	rex.R
   140009a6f:	repnz and BYTE PTR [rdx+0x78],al
   140009a73:	sbb    BYTE PTR [rdx+0x30fcb718],al
   140009a79:	rex.X sbb bpl,dil
   140009a7c:	(bad)  
   140009a7d:	(bad)  
   140009a7e:	scas   eax,DWORD PTR es:[rdi]
   140009a7f:	out    dx,eax
   140009a80:	sti    
   140009a81:	(bad)  
   140009a82:	cwde   
   140009a83:	jge    0x140009abe
   140009a85:	int3   
   140009a86:	cmp    bh,BYTE PTR [rax]
   140009a88:	xchg   edx,eax
   140009a89:	sub    al,0x8f
   140009a8b:	mov    al,0xa
   140009a8d:	(bad)  
   140009a8e:	hlt    
   140009a8f:	fnsave [rcx-0x11]
   140009a92:	sbb    eax,0x42493e
   140009a97:	(bad)  
   140009a98:	lods   al,BYTE PTR ds:[rsi]
   140009a99:	in     al,0x52
   140009a9b:	(bad)  
   140009a9c:	rex.W (bad) 
   140009a9e:	and    al,0x18
   140009aa0:	(bad)  
   140009aa1:	xor    DWORD PTR [rsi],eax
   140009aa3:	ret    
   140009aa4:	and    DWORD PTR [rsi+0x59a758c3],eax
   140009aaa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009aab:	sub    BYTE PTR [rbp+0x5fb4a309],ah
   140009ab1:	scas   eax,DWORD PTR es:[rdi]
   140009ab2:	xlat   BYTE PTR ds:[rbx]
   140009ab3:	ficomp WORD PTR [rax+rbp*2-0x7ae7414b]
   140009aba:	loope  0x140009b13
   140009abc:	jle    0x140009ab8
   140009abe:	repz lahf 
   140009ac0:	sti    
   140009ac1:	xchg   ecx,eax
   140009ac2:	push   rsp
   140009ac3:	rex
   140009ac4:	xor    al,BYTE PTR ds:[rcx]
   140009ac7:	xor    al,0xea
   140009ac9:	jne    0x140009a4f
   140009acb:	(bad)  
   140009acc:	sbb    BYTE PTR [rdx+0x14],0x21
   140009ad0:	mov    ah,BYTE PTR [rdx]
   140009ad2:	add    al,0x7e
   140009ad4:	add    dh,al
   140009ad6:	fnstcw WORD PTR [rsi+0x37]
   140009ad9:	fwait
   140009ada:	sti    
   140009adb:	adc    DWORD PTR [rdx-0x70211f9b],0xffffff92
   140009ae2:	rex mov ecx,0x8d695ea6
   140009ae8:	xor    al,0x4d
   140009aea:	xchg   ecx,eax
   140009aeb:	sbb    DWORD PTR fs:[rdx-0x7c99bacc],esi
   140009af2:	mov    BYTE PTR [rcx+0x18],dl
   140009af5:	movabs ds:0x44c4c4d9a263af5e,al
   140009afe:	or     esi,DWORD PTR [rbp+0x10622a28]
   140009b04:	rcr    BYTE PTR [rdx+0x41118764],cl
   140009b0a:	sbb    DWORD PTR [rbx+0x5538ebda],esp
   140009b10:	and    BYTE PTR [rbp+0x7c],0x24
   140009b14:	shl    edi,cl
   140009b16:	or     BYTE PTR [rip+0xffffffff9a7fd87c],ch        # 0xda807398
   140009b1c:	jne    0x140009aac
   140009b1e:	(bad)  
   140009b1f:	(bad)  
   140009b20:	cmp    BYTE PTR [rsi+0x479ee13b],cl
   140009b26:	leave  
   140009b27:	loopne 0x140009b61
   140009b29:	mov    edi,0x932e7e5f
   140009b2e:	fsubr  QWORD PTR [rax+0x669870db]
   140009b34:	ds xchg esi,eax
   140009b36:	xchg   ebp,eax
   140009b37:	icebp  
   140009b38:	sbb    dl,0x83
   140009b3b:	rex.RXB and DWORD PTR [r11+0x3808938f],r8d
   140009b42:	movsxd eax,DWORD PTR [rbp+0x39]
   140009b45:	jns    0x140009b5f
   140009b47:	add    al,0x45
   140009b49:	lahf   
   140009b4a:	or     BYTE PTR [rbx+0xc],ah
   140009b4d:	ret    
   140009b4e:	cmp    BYTE PTR [rsi],ch
   140009b50:	fsub   QWORD PTR [rcx+0x67]
   140009b53:	stc    
   140009b54:	mov    edx,0x35ad117e
   140009b59:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b5a:	push   rsp
   140009b5b:	(bad)  
   140009b5c:	fmul   QWORD PTR [rdx]
   140009b5e:	cmp    esp,DWORD PTR [rbx-0x1f7cf4df]
   140009b64:	rex.WRX stos QWORD PTR es:[rdi],rax
   140009b66:	(bad)  
   140009b67:	cld    
   140009b68:	rex.WRX movabs ds:0xe7f2fb56ad62ff5e,rax
   140009b72:	pop    rdi
   140009b73:	js     0x140009b33
   140009b75:	sti    
   140009b76:	jno    0x140009be4
   140009b78:	sti    
   140009b79:	and    edx,DWORD PTR [rcx]
   140009b7b:	rcl    BYTE PTR [rdi-0x4a0542],0x62
   140009b82:	xor    BYTE PTR [rsi+rdi*8],bl
   140009b85:	je     0x140009b19
   140009b87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b88:	lahf   
   140009b89:	rex.WX shl rsp,cl
   140009b8c:	xchg   esp,eax
   140009b8d:	enter  0x26f3,0x67
   140009b91:	mov    eax,?
   140009b93:	mov    esi,0x4030c34f
   140009b98:	adc    al,0x86
   140009b9a:	mov    BYTE PTR [rdx+0x23e7be08],ah
   140009ba0:	or     ah,bh
   140009ba2:	add    edi,DWORD PTR [rip+0x181dceeb]        # 0x1581e6a93
   140009ba8:	and    eax,0x9418ce01
   140009bad:	(bad)  
   140009bae:	test   ebp,esp
   140009bb0:	loopne 0x140009c10
   140009bb2:	sub    ebp,DWORD PTR [rbp-0x7a]
   140009bb5:	push   rdi
   140009bb6:	or     al,0x93
   140009bb8:	add    al,0x83
   140009bba:	rol    DWORD PTR [rax],0x59
   140009bbd:	xchg   esi,eax
   140009bbe:	and    DWORD PTR [rax],ecx
   140009bc0:	add    ch,BYTE PTR [rdi+rbx*4]
   140009bc3:	cmp    BYTE PTR [rcx],al
   140009bc5:	rex.WX sub QWORD PTR [rsi],rsp
   140009bc8:	(bad)  
   140009bc9:	(bad)  
   140009bca:	loopne 0x140009ba5
   140009bcc:	add    edi,DWORD PTR [rsi]
   140009bce:	push   0xffffffffffffffba
   140009bd0:	(bad)
   140009bd4:	cmp    BYTE PTR [rdx+0x1730e30],cl
   140009bda:	(bad)  
   140009bdb:	je     0x140009b5e
   140009bdd:	sbb    eax,0xaa8ea047
   140009be2:	and    al,0x7c
   140009be4:	mov    al,0xb5
   140009be6:	jo     0x140009be0
   140009be8:	outs   dx,DWORD PTR ds:[rsi]
   140009be9:	(bad)
   140009bed:	add    al,0xd9
   140009bef:	mov    ebp,0xcefc4756
   140009bf4:	xor    esi,0xffffffe7
   140009bf7:	shr    BYTE PTR [rbp+0x18],1
   140009bfa:	mov    bl,0xfd
   140009bfc:	jrcxz  0x140009b8c
   140009bfe:	(bad)  
   140009bff:	movabs ds:0x8a288324a3f075a,eax
   140009c08:	and    edi,0xf87df7c1
   140009c0e:	neg    BYTE PTR [rcx+0x132c8252]
   140009c14:	call   0xd2c7980e
   140009c19:	mov    ch,0x1a
   140009c1b:	fidiv  WORD PTR [rip+0xffffffffb1079544]        # 0xf1083165
   140009c21:	mov    WORD PTR [rbx-0x48],?
   140009c24:	iret   
   140009c25:	mov    ch,BYTE PTR [rbp-0x4d]
   140009c28:	popf   
   140009c29:	xchg   esi,eax
   140009c2a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c2b:	rex.RX sub r9b,cl
   140009c2e:	sub    BYTE PTR [rip+0xfb56ad4],bl        # 0x14fb60708
   140009c34:	es (bad) 
   140009c36:	pop    rdx
   140009c37:	pop    rdi
   140009c38:	bnd jge 0x140009c3a
   140009c3b:	mov    edi,edi
   140009c3d:	(bad)  
   140009c3e:	rex.WRXB call r12
   140009c41:	neg    DWORD PTR [rsi]
   140009c43:	imul   eax,DWORD PTR [rdi],0xe723e0c6
   140009c49:	loop   0x140009ca9
   140009c4b:	jle    0x140009c32
   140009c4d:	mov    ebx,0x9fa6967e
   140009c52:	leave  
   140009c53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c54:	jl     0x140009cc8
   140009c56:	sbb    bh,al
   140009c58:	(bad)  
   140009c59:	ds sbb al,0xc6
   140009c5c:	rex.WRXB
   140009c5d:	gs pop rcx
   140009c5f:	jbe    0x140009c8f
   140009c61:	adc    esp,DWORD PTR [rdx-0x6e]
   140009c64:	adc    BYTE PTR [rdx+0x7d],al
   140009c67:	iret   
   140009c68:	movsxd esi,DWORD PTR [rbp+0xc28845a]
   140009c6e:	push   rcx
   140009c6f:	mov    esp,DWORD PTR [rdx]
   140009c71:	test   dh,dh
   140009c73:	and    BYTE PTR [rsi+0xe0003e3],dl
   140009c79:	sbb    al,0x90
   140009c7b:	xor    bl,BYTE PTR [rdi+rbp*8-0x7ce30dd1]
   140009c82:	rol    DWORD PTR [rax],0xdb
   140009c85:	mov    ebx,0x1a3668bb
   140009c8a:	clc    
   140009c8b:	cld    
   140009c8c:	mov    ebp,DWORD PTR [rdi]
   140009c8e:	(bad)  
   140009c8f:	scas   eax,DWORD PTR es:[rdi]
   140009c90:	fld    QWORD PTR [rsi-0x45]
   140009c93:	rol    ebp,cl
   140009c95:	jmp    0x14611c3ed
   140009c9a:	and    DWORD PTR [rcx-0x2c],0xc0f13052
   140009ca1:	mov    ss,WORD PTR [rsi-0x29e1f38]
   140009ca7:	cld    
   140009ca8:	movabs ds:0xb8df35e303609470,eax
   140009cb1:	out    dx,eax
   140009cb2:	lea    edi,[rbx+0x3e]
   140009cb5:	(bad)  
   140009cb6:	addr32 mov ds:0xeeba3064,eax
   140009cbc:	(bad)  
   140009cbd:	(bad)  
   140009cbe:	jne    0x140009cd8
   140009cc0:	push   rcx
   140009cc1:	sbb    al,0xb6
   140009cc3:	in     eax,dx
   140009cc4:	(bad)  
   140009cc5:	fldenv [rsi-0x27d8a5f9]
   140009ccb:	scas   eax,DWORD PTR es:[rdi]
   140009ccc:	(bad)  
   140009ccd:	cmp    al,0xea
   140009ccf:	sbb    BYTE PTR [rip+0xffffffff843c36e9],bl        # 0xc43cd3be
   140009cd5:	stos   DWORD PTR es:[rdi],eax
   140009cd6:	lock movabs al,ds:0x56781094044a39f3
   140009ce0:	mov    eax,0x2d47df03
   140009ce5:	mov    ah,al
   140009ce7:	jns    0x140009d07
   140009ce9:	sub    BYTE PTR [rip+0xffffffffb1215290],ah        # 0xf121ef7f
   140009cef:	ret    0x1fdd
   140009cf2:	or     al,0x90
   140009cf4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009cf5:	imul   edx,ecx,0x4fac6d0e
   140009cfb:	repz pop rbx
   140009cfd:	mov    WORD PTR [rip+0x55477654],ds        # 0x195481357
   140009d03:	mov    al,0x1e
   140009d05:	xchg   ebp,eax
   140009d06:	or     dh,BYTE PTR [rdi-0x25]
   140009d09:	sub    ah,BYTE PTR [rbp+0x560fb22c]
   140009d0f:	(bad)  
   140009d10:	fs mov ebp,0x689edb56
   140009d16:	xor    eax,0x3b3b3bbf
   140009d1b:	sti    
   140009d1c:	(bad)  
   140009d1d:	jl     0x140009d0d
   140009d1f:	stc    
   140009d20:	out    0xde,eax
   140009d22:	cmp    ah,dh
   140009d24:	rex.RXB mov es,WORD PTR [r9-0xe6d271]
   140009d2b:	(bad)  
   140009d2c:	outs   dx,DWORD PTR ds:[rsi]
   140009d2d:	jge    0x140009d2a
   140009d2f:	xor    DWORD PTR [rax],eax
   140009d31:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140009d33:	imul   edi,edx,0x9f8e30c2
   140009d39:	rex.WRB xchg r10,rax
   140009d3b:	hlt    
   140009d3c:	(bad)  
   140009d3d:	(bad)  
   140009d3e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009d3f:	ror    DWORD PTR [rdx-0x15],cl
   140009d42:	shl    bh,0x3c
   140009d45:	sbb    al,BYTE PTR [rbp+0x21]
   140009d48:	mov    edx,eax
   140009d4a:	adc    BYTE PTR [rbp+0x5ab50d5a],dh
   140009d50:	or     eax,0x2dfd2da1
   140009d55:	mov    bl,0x62
   140009d57:	stc    
   140009d58:	and    BYTE PTR [rax],cl
   140009d5a:	and    DWORD PTR [rax-0x22c5e65c],edx
   140009d60:	(bad)  
   140009d61:	mov    ah,0xd6
   140009d63:	js     0x140009d57
   140009d65:	mov    DWORD PTR [rdi],esp
   140009d67:	adc    BYTE PTR [rbp+0x21],al
   140009d6a:	fidivr WORD PTR [rcx-0x1]
   140009d6d:	sub    cl,dh
   140009d6f:	lahf   
   140009d70:	cmp    DWORD PTR [rbx+0x7829e999],eax
   140009d76:	mov    dh,0x6f
   140009d78:	rcr    BYTE PTR [rcx+0x19],0xce
   140009d7c:	and    eax,0x81120728
   140009d81:	adc    DWORD PTR [rdi],0x42
   140009d84:	fnstcw WORD PTR [rip+0x4a671871]        # 0x18a67b5fb
   140009d8a:	xchg   edi,eax
   140009d8b:	(bad)  
   140009d8c:	jnp    0x140009d9e
   140009d8e:	(bad)  
   140009d8f:	xor    eax,ebp
   140009d91:	sbb    eax,0xf87330e
   140009d96:	xlat   BYTE PTR ds:[rbx]
   140009d97:	clc    
   140009d98:	(bad)  
   140009d99:	mov    bh,0x14
   140009d9b:	mov    ah,0xde
   140009d9d:	dec    esp
   140009d9f:	sbb    eax,0xf9b4a3cb
   140009da4:	push   rcx
   140009da5:	ret    0x1c7d
   140009da8:	and    DWORD PTR [rbp+0x54],edi
   140009dab:	xor    al,BYTE PTR [rax]
   140009dad:	out    dx,al
   140009dae:	ja     0x140009dc7
   140009db0:	(bad)  
   140009db1:	sbb    DWORD PTR fs:[rdi+rdx*8],ebx
   140009db5:	sub    bl,BYTE PTR [rax]
   140009db7:	pop    rbp
   140009db8:	ja     0x140009dae
   140009dba:	cmp    eax,0xefbe1c63
   140009dbf:	and    DWORD PTR [rdx],ecx
   140009dc1:	rex.XB test BYTE PTR [r9+0x60],al
   140009dc5:	(bad)  
   140009dc6:	mov    bl,0x98
   140009dc8:	pop    rcx
   140009dc9:	(bad)  
   140009dca:	xchg   r10,rax
   140009dcc:	movabs ds:0x43870c124e20183f,al
   140009dd5:	(bad)  
   140009dd6:	rex.WB push r10
   140009dd8:	cwde   
   140009dd9:	out    dx,al
   140009dda:	push   rdx
   140009ddb:	(bad)  
   140009ddc:	lods   al,BYTE PTR ds:[rsi]
   140009ddd:	movsxd esp,DWORD PTR [rcx-0x17289f0c]
   140009de3:	add    DWORD PTR [rsp+rdi*2],0x5c
   140009de7:	xchg   ebp,eax
   140009de8:	jmp    0x140009dd2
   140009dea:	jle    0x140009dfe
   140009dec:	rex.X mov al,sil
   140009def:	mov    dh,0xc0
   140009df1:	not    DWORD PTR [rcx-0x55]
   140009df4:	(bad)  
   140009df5:	mov    ebx,?
   140009df7:	pop    rbx
   140009df8:	stos   DWORD PTR es:[rdi],eax
   140009df9:	and    DWORD PTR [rdx-0x2ed6b7be],ecx
   140009dff:	out    dx,eax
   140009e00:	pshufw mm4,mm3,0xd6
   140009e04:	sub    eax,0x6bf79e78
   140009e09:	(bad)  
   140009e0a:	push   QWORD PTR [rbx+0x3f]
   140009e0d:	sti    
   140009e0e:	(bad)  
   140009e0f:	icebp  
   140009e10:	adc    eax,esi
   140009e12:	and    ebp,ebp
   140009e14:	(bad)  
   140009e15:	cld    
   140009e16:	jrcxz  0x140009e07
   140009e18:	dec    cl
   140009e1a:	je     0x140009ddb
   140009e1c:	(bad)  
   140009e1e:	xor    DWORD PTR [rax],eax
   140009e20:	iret   
   140009e21:	(bad)  
   140009e22:	rex.WB
   140009e23:	bnd je 0x140009db8
   140009e26:	and    al,0x9f
   140009e28:	rex.WRX xchg rdx,rax
   140009e2a:	je     0x140009e55
   140009e2c:	int    0xb2
   140009e2e:	mov    eax,eax
   140009e30:	test   DWORD PTR [rcx+0x18],0x228a3406
   140009e37:	(bad)  
   140009e38:	movabs ds:0x247c280bedb8ecc8,al
   140009e41:	sub    DWORD PTR [rcx],edx
   140009e43:	(bad)  
   140009e44:	xor    DWORD PTR [rdx+0x2cd21ebd],edi
   140009e4a:	rex.XB movabs ds:0x80b0b8b18e30c75e,eax
   140009e54:	adc    ecx,DWORD PTR [rbx]
   140009e56:	or     esp,DWORD PTR [rax-0x74]
   140009e59:	(bad)  
   140009e5a:	mov    esi,0x3cd13397
   140009e5f:	(bad)  
   140009e60:	mov    esi,DWORD PTR [rcx]
   140009e62:	pop    rdx
   140009e63:	in     eax,0xb
   140009e65:	pop    rsi
   140009e66:	rex.WX jns 0x140009e89
   140009e69:	ja     0x140009ee9
   140009e6b:	loopne 0x140009e0d
   140009e6d:	mov    WORD PTR [rcx+0x1],gs
   140009e70:	jle    0x140009e8a
   140009e72:	push   rdx
   140009e73:	cmp    BYTE PTR [rsi+0x5c271a16],cl
   140009e79:	jrcxz  0x140009e51
   140009e7b:	sub    DWORD PTR [rbx+0x15],ebx
   140009e7e:	(bad)
   140009e82:	jle    0x140009e77
   140009e84:	test   al,0xef
   140009e86:	sbb    eax,0x69cb9847
   140009e8b:	(bad)  
   140009e8c:	movabs ds:0xe46f5d8effdc7bf6,eax
   140009e95:	std    
   140009e96:	jno    0x140009e61
   140009e98:	loopne 0x140009ec2
   140009e9a:	and    cl,BYTE PTR [rax+0x104110c2]
   140009ea0:	and    al,dh
   140009ea2:	jge    0x140009ec7
   140009ea4:	push   rax
   140009ea5:	or     DWORD PTR [rdi],0x34d239ce
   140009eab:	(bad)
   140009eae:	add    dh,BYTE PTR [rcx-0x7d]
   140009eb1:	loope  0x140009ec3
   140009eb3:	rex.WB (bad) 
   140009eb5:	and    cl,BYTE PTR [rcx+0x53]
   140009eb8:	fs pop rcx
   140009eba:	(bad)  
   140009ebb:	and    edx,esi
   140009ebd:	sti    
   140009ebe:	int3   
   140009ebf:	jbe    0x140009f38
   140009ec1:	pop    rbp
   140009ec2:	lea    esi,[rbx]
   140009ec4:	fxch   st(3)
   140009ec6:	out    dx,eax
   140009ec7:	rex.RXB sti 
   140009ec9:	rex.WRB retf 0x3adb
   140009ecd:	jp     0x140009edd
   140009ecf:	mov    esi,DWORD PTR [rdx+0x611ce79]
   140009ed5:	add    edx,eax
   140009ed7:	sub    BYTE PTR [rdx+0x3d],al
   140009eda:	mov    dl,BYTE PTR [rax-0x51]
   140009edd:	(bad)  
   140009ede:	push   rax
   140009edf:	stos   DWORD PTR es:[rdi],eax
   140009ee0:	sbb    DWORD PTR [rcx],ebx
   140009ee2:	or     BYTE PTR [rbx+rsi*4-0x43],bh
   140009ee6:	out    dx,al
   140009ee7:	cli    
   140009ee8:	jne    0x140009ed8
   140009eea:	xchg   r10d,eax
   140009eec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009eed:	js     0x140009ed8
   140009eef:	pop    rdi
   140009ef0:	jle    0x140009f39
   140009ef2:	cli    
   140009ef3:	mov    esi,0xfe7e0fff
   140009ef8:	out    0x7e,eax
   140009efa:	imul   BYTE PTR [rdi-0x20]
   140009efd:	and    esp,eax
   140009eff:	adc    ebx,DWORD PTR [rdi-0x54350ff9]
   140009f05:	scas   eax,DWORD PTR es:[rdi]
   140009f06:	stc    
   140009f07:	jno    0x140009f25
   140009f09:	(bad)  
   140009f0a:	cdq    
   140009f0b:	data16 (bad) [rbx+0x1d3d9659]
   140009f12:	sbb    edx,DWORD PTR [rdx+0x38]
   140009f15:	xchg   ebx,eax
   140009f16:	data16 fst DWORD PTR ds:0x40410784
   140009f1e:	movabs ds:0x4084a004107530c8,eax
   140009f27:	in     al,0x39
   140009f29:	jp     0x140009f28
   140009f2b:	ds jp  0x140009eeb
   140009f2e:	xor    ah,BYTE PTR ds:[rcx]
   140009f31:	adc    BYTE PTR [rsi],al
   140009f33:	add    DWORD PTR [rsi+0x37301716],edx
   140009f39:	xor    eax,DWORD PTR [rbx-0x4fae5c9a]
   140009f3f:	mov    ecx,0x1cc73383
   140009f44:	sub    DWORD PTR [rdi+rax*2+0x17fb0170],edx
   140009f4b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009f4c:	push   rdx
   140009f4d:	or     dh,BYTE PTR [rdx-0x1f148dac]
   140009f53:	rex.WRX loopne 0x140009f0e
   140009f56:	adc    edi,DWORD PTR [rbx-0x68]
   140009f59:	out    0x3e,al
   140009f5b:	mov    ah,cl
   140009f5d:	add    DWORD PTR [rbx-0x2b],esp
   140009f60:	mov    WORD PTR [rdx],ss
   140009f62:	sbb    QWORD PTR [rdi+0x9],r8
   140009f66:	shl    BYTE PTR [rcx+0x34],0xf6
   140009f6a:	loope  0x140009f90
   140009f6c:	(bad)  
   140009f6d:	jg     0x140009fce
   140009f6f:	test   eax,0xa1e51703
   140009f74:	(bad)  
   140009f75:	not    BYTE PTR [rax]
   140009f77:	ret    0x2518
   140009f7a:	xor    DWORD PTR [rdx],0x59
   140009f7d:	cmp    eax,0x6071c58a
   140009f82:	popf   
   140009f83:	xchg   ecx,eax
   140009f84:	iret   
   140009f85:	mov    cs,WORD PTR [rdx+0x199e04af]
   140009f8b:	lods   eax,DWORD PTR ds:[rsi]
   140009f8c:	out    0xae,al
   140009f8e:	(bad)  
   140009f8f:	and    al,dh
   140009f91:	mov    edi,ebp
   140009f93:	mov    ah,bl
   140009f95:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f96:	or     dl,al
   140009f98:	or     eax,0x8183c386
   140009f9d:	cmp    BYTE PTR [rcx+0x235ff81f],dl
   140009fa3:	fs idiv ebx
   140009fa6:	out    0xe,eax
   140009fa8:	packssdw mm7,QWORD PTR [rsi-0x64483069]
   140009faf:	out    dx,eax
   140009fb0:	sbb    BYTE PTR [rcx+rax*1],al
   140009fb3:	movabs ds:0xcee8203b56a34228,al
   140009fbc:	or     ch,BYTE PTR [rcx]
   140009fbe:	addr32 mov edx,0x7f7a09c
   140009fc4:	add    ebp,DWORD PTR [rsp+rbp*4-0x31093e22]
   140009fcb:	(bad)  
   140009fcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fcd:	xchg   esp,eax
   140009fce:	lock in al,dx
   140009fd0:	lock xlat BYTE PTR ds:[rbx]
   140009fd2:	mov    ecx,0x67751999
   140009fd7:	ins    DWORD PTR es:[rdi],dx
   140009fd8:	rex.WRB inc BYTE PTR [r13-0x1f408c1]
   140009fdf:	movabs eax,ds:0x187004e27c0c721b
   140009fe8:	pop    rsi
   140009fe9:	jle    0x140009fd0
   140009feb:	mov    ebx,0xc1830617
   140009ff0:	mov    bl,0x4a
   140009ff2:	test   eax,0xf1c61b1f
   140009ff7:	jae    0x14000a06a
   140009ff9:	pushf  
   140009ffa:	pop    rsp
   140009ffb:	rex.WX xchg rdx,rax
   140009ffd:	fs push rsi
   140009fff:	imul   ebp,ebp,0xa528c673
   14000a005:	xchg   esp,eax
   14000a006:	sub    QWORD PTR [rbx],rcx
   14000a009:	adc    ecx,DWORD PTR [rbp+0x6b]
   14000a00c:	lea    ebp,[rax]
   14000a00e:	or     al,0xd1
   14000a010:	test   al,0xd7
   14000a012:	shr    DWORD PTR [rsi+rsi*1+0x4c],1
   14000a016:	mov    dh,0xa0
   14000a018:	(bad)  
   14000a019:	rex.X movabs ds:0xdf08d971bc4c2f5e,eax
   14000a023:	pop    rsi
   14000a024:	rex (bad) 
   14000a026:	jge    0x14000a098
   14000a028:	test   DWORD PTR [rcx-0x1b],ecx
   14000a02b:	rex.RXB push r9
   14000a02d:	rex.WR xor rcx,0x2e
   14000a031:	shr    BYTE PTR [rax+0x4c],0x61
   14000a035:	hlt    
   14000a036:	rex.X (bad) 
   14000a038:	lods   al,BYTE PTR ds:[rsi]
   14000a039:	mov    ah,0xf8
   14000a03b:	xchg   r14d,eax
   14000a03d:	ret    
   14000a03e:	(bad)  
   14000a03f:	push   rsi
   14000a040:	ret    0x34f1
   14000a043:	jmp    rcx
   14000a045:	(bad)  
   14000a046:	ja     0x14000a047
   14000a048:	jns    0x14000a046
   14000a04a:	jg     0x14000a069
   14000a04c:	div    DWORD PTR [rdi]
   14000a04e:	(bad)  
   14000a04f:	jge    0x14000a087
   14000a051:	(bad)  
   14000a052:	push   rbp
   14000a053:	cmp    dh,ch
   14000a055:	jbe    0x14000a074
   14000a057:	jbe    0x14000a0c5
   14000a059:	sub    BYTE PTR [rbp-0x4d9cc310],ah
   14000a05f:	mov    ebx,0xabae8a79
   14000a064:	(bad)  
   14000a065:	cwde   
   14000a066:	(bad)  
   14000a067:	(bad)  
   14000a068:	(bad)  
   14000a069:	(bad)  
   14000a06a:	es leave 
   14000a06c:	jle    0x14000a06f
   14000a06e:	pop    rdx
   14000a06f:	xchg   edx,eax
   14000a070:	and    bh,cl
   14000a072:	shufps xmm0,XMMWORD PTR [rdx+0x59797eca],0xd8
   14000a07a:	retf   
   14000a07b:	cmp    BYTE PTR [rax+rsi*4+0x47],cl
   14000a07f:	sbb    ecx,edi
   14000a081:	rex.RX mul DWORD PTR [rcx+0x6b7dd1ac]
   14000a088:	mov    edx,0xaf5e8d3b
   14000a08d:	xlat   BYTE PTR ds:[rbx]
   14000a08e:	(bad)  
   14000a08f:	or     BYTE PTR [rdx+0x59],bh
   14000a092:	movabs ds:0xe9dda2edd3b86bbb,eax
   14000a09b:	(bad)  
   14000a09c:	imul   edi,DWORD PTR [rbx+0x1b],0xffffff9b
   14000a0a0:	fcmovnu st,st(3)
   14000a0a2:	push   0x74e8ba77
   14000a0a7:	mov    ebx,0xfbb13ac6
   14000a0ac:	in     eax,0x94
   14000a0ae:	sbb    BYTE PTR [rbx-0xcc030fc],ah
   14000a0b4:	sub    al,0x4e
   14000a0b6:	sub    al,0x2d
   14000a0b8:	(bad)  
   14000a0b9:	jge    0x14000a12e
   14000a0bb:	repz in al,0x9f
   14000a0be:	inc    DWORD PTR [rbp+0x7637bf9f]
   14000a0c4:	movabs ds:0xaf0e3004b53f818f,eax
   14000a0cd:	mov    esp,0x60ecdafa
   14000a0d2:	xor    BYTE PTR [rax+0x32],bh
   14000a0d5:	rcl    QWORD PTR [r15],cl
   14000a0d8:	xor    esp,DWORD PTR [rcx]
   14000a0da:	sahf   
   14000a0db:	out    dx,eax
   14000a0dc:	test   DWORD PTR [rdi],0x3249278f
   14000a0e2:	lahf   
   14000a0e3:	or     ecx,edx
   14000a0e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a0e6:	xchg   esp,eax
   14000a0e7:	push   0xffffffffffffffad
   14000a0e9:	xor    eax,0x3d4d249
   14000a0ee:	int3   
   14000a0ef:	leave  
   14000a0f0:	icebp  
   14000a0f1:	lods   eax,DWORD PTR ds:[rsi]
   14000a0f2:	data16 mov BYTE PTR [rdx+0x366ad08],ah
   14000a0f9:	lea    edi,[rdx-0x43]
   14000a0fc:	js     0x14000a0f6
   14000a0fe:	mov    esi,0xe0a59f7f
   14000a103:	cs (bad) 
   14000a105:	rex.RXB or r12b,r13b
   14000a108:	jns    0x14000a10e
   14000a10a:	sar    ch,0x2e
   14000a10d:	add    ebx,0xb8c40a8
   14000a113:	mov    al,0x69
   14000a115:	mov    WORD PTR [rdi+0x28e32bca],gs
   14000a11b:	sbb    DWORD PTR [rax],0x9187bff7
   14000a121:	ret    0xac68
   14000a124:	jrcxz  0x14000a15e
   14000a126:	(bad)  
   14000a127:	adc    DWORD PTR [rdx+0xf],0x2ce3f816
   14000a12e:	sub    edi,DWORD PTR [rdi]
   14000a130:	stos   DWORD PTR es:[rdi],eax
   14000a131:	xchg   ecx,eax
   14000a132:	(bad)  
   14000a133:	cmp    eax,0x3108db6a
   14000a138:	rex.XB pop r11
   14000a13a:	(bad)  
   14000a13b:	and    BYTE PTR [rax],al
   14000a13d:	out    0xac,eax
   14000a13f:	mov    BYTE PTR [rbx+rsi*2+0x408421ce],dh
   14000a146:	scas   eax,DWORD PTR es:[rdi]
   14000a147:	(bad)  
   14000a148:	sbb    al,0xc7
   14000a14b:	mov    BYTE PTR [rbx-0x208142fc],dl
   14000a151:	or     BYTE PTR [rsi+0x1c],bh
   14000a154:	and    ecx,ebx
   14000a156:	(bad)
   14000a15a:	adc    esi,edx
   14000a15c:	mov    dl,0xa0
   14000a15e:	mov    ebx,0x661c65e5
   14000a163:	scas   al,BYTE PTR es:[rdi]
   14000a164:	(bad)  
   14000a165:	and    eax,0x9f40e5e8
   14000a16a:	jae    0x14000a19f
   14000a16c:	and    DWORD PTR [rax],0x40
   14000a16f:	mov    bl,0xd9
   14000a171:	(bad)  
   14000a172:	rex.R movabs ds:0x3f8020c2c6bda681,eax
   14000a17c:	adc    dl,bl
   14000a17e:	xchg   edx,eax
   14000a17f:	push   rdx
   14000a180:	(bad)  
   14000a181:	add    esp,eax
   14000a183:	jbe    0x14000a140
   14000a185:	or     ebp,0xffffffed
   14000a188:	ins    DWORD PTR es:[rdi],dx
   14000a189:	ins    BYTE PTR es:[rdi],dx
   14000a18a:	in     eax,dx
   14000a18b:	in     al,dx
   14000a18c:	(bad)  
   14000a18d:	jge    0x14000a1f2
   14000a18f:	adc    ebx,DWORD PTR [rbx+0x3b]
   14000a192:	cmp    ebp,eax
   14000a194:	je     0x14000a1d0
   14000a196:	rex.W loop 0x14000a1b1
   14000a199:	push   rdx
   14000a19a:	retf   0xc462
   14000a19d:	jnp    0x14000a142
   14000a19f:	(bad)  
   14000a1a0:	ret    0xc4d4
   14000a1a3:	add    al,0x96
   14000a1a5:	(bad)  
   14000a1a6:	(bad)  
   14000a1a7:	mov    al,0x38
   14000a1a9:	(bad)  
   14000a1aa:	(bad)  
   14000a1ab:	(bad)  
   14000a1ac:	lock adc BYTE PTR [rdi],ah
   14000a1af:	or     edx,ebx
   14000a1b1:	in     eax,dx
   14000a1b2:	cs push rsi
   14000a1b4:	push   rsi
   14000a1b5:	push   rsi
   14000a1b6:	xchg   edx,eax
   14000a1b7:	fwait
   14000a1b8:	mov    bh,0x6f
   14000a1ba:	jne    0x14000a23b
   14000a1bc:	jrcxz  0x14000a215
   14000a1be:	jg     0x14000a225
   14000a1c0:	add    DWORD PTR [rdi],ebx
   14000a1c2:	add    DWORD PTR [rdi-0x5a],edi
   14000a1c5:	or     BYTE PTR [rax+0x4],ah
   14000a1c8:	adc    al,0x0
   14000a1ca:	lahf   
   14000a1cb:	(bad)  
   14000a1cc:	sahf   
   14000a1cd:	mov    ?,esi
   14000a1cf:	cli    
   14000a1d0:	jg     0x14000a1d0
   14000a1d2:	(bad)  
   14000a1d3:	jle    0x14000a23f
   14000a1d5:	jp     0x14000a251
   14000a1d7:	cli    
   14000a1d8:	mov    edi,0xcffbf7ea
   14000a1dd:	pop    rsi
   14000a1de:	jmp    rax
   14000a1e0:	cmp    DWORD PTR [rdx-0x61678619],0xffffff9d
   14000a1e7:	(bad)
   14000a1ea:	sbb    al,0x26
   14000a1ec:	pop    rdx
   14000a1ed:	lods   eax,DWORD PTR ds:[rsi]
   14000a1ee:	add    ecx,DWORD PTR [rdi+rcx*8+0x28]
   14000a1f2:	test   edi,ebp
   14000a1f4:	sti    
   14000a1f5:	(bad)  
   14000a1f6:	pop    rdx
   14000a1f7:	push   0x366ad1d4
   14000a1fc:	shr    DWORD PTR [rsp+rsi*1+0x10],1
   14000a200:	(bad)  
   14000a201:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a202:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a203:	shl    edi,0xbd
   14000a206:	rol    ch,cl
   14000a208:	rex.XB mov esp,DWORD PTR [r8+0x704104c]
   14000a20f:	(bad)  
   14000a210:	mov    WORD PTR [rbx-0x7b5c3c3f],fs
   14000a216:	fstp   DWORD PTR [rbp+0x68]
   14000a219:	movabs ds:0x718cace524d71ee9,eax
   14000a222:	fistp  WORD PTR [rip+0xffffffffc2a3fbf7]        # 0x102a49e1f
   14000a228:	pop    rsi
   14000a229:	adc    al,0x48
   14000a22b:	sbb    eax,0xdfcb2843
   14000a230:	sbb    ebx,ebp
   14000a232:	mov    esi,0xfc3b227d
   14000a237:	(bad)  
   14000a238:	(bad)  
   14000a239:	xchg   BYTE PTR [rsi+rax*8],cl
   14000a23c:	xchg   ecx,eax
   14000a23d:	xchg   ebp,eax
   14000a23e:	and    edx,DWORD PTR [rdi-0x3a]
   14000a241:	int3   
   14000a242:	jns    0x14000a2b4
   14000a244:	jle    0x14000a1f4
   14000a246:	push   rdx
   14000a247:	retf   0xeb9a
   14000a24a:	or     edx,edi
   14000a24c:	add    DWORD PTR [rcx],0x6
   14000a24f:	jno    0x14000a1dd
   14000a251:	mov    esi,0x4d34f415
   14000a256:	xchg   ecx,eax
   14000a257:	and    al,0xe9
   14000a259:	cmp    DWORD PTR [rax-0x33],0x8f97a0a8
   14000a260:	lods   eax,DWORD PTR ds:[rsi]
   14000a261:	adc    edi,DWORD PTR [rdx-0x49]
   14000a264:	fisubr WORD PTR [rax]
   14000a266:	(bad)  
   14000a267:	mov    ecx,0x1767e572
   14000a26c:	in     al,dx
   14000a26d:	xor    ebx,DWORD PTR [rdx-0x63]
   14000a270:	adc    eax,0x410636e
   14000a275:	rex.RB rcr BYTE PTR [r10+0x4c146e73],0x18
   14000a27d:	movabs ds:0x20b4d9ab5ea3a8d9,al
   14000a286:	rex.RB (bad) 
   14000a288:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a289:	fcomp  st(6)
   14000a28b:	ffree  st(5)
   14000a28d:	out    dx,al
   14000a28e:	pop    rsi
   14000a28f:	sbb    ebx,DWORD PTR [rbx]
   14000a291:	pop    rbx
   14000a292:	pop    rbx
   14000a293:	mov    eax,0xd61ef773
   14000a298:	ss ss mov al,0xb9
   14000a29c:	mov    ch,0x85
   14000a29e:	xor    al,0x31
   14000a2a0:	gs icebp 
   14000a2a2:	ret    0x8a6
   14000a2a5:	or     DWORD PTR [rcx],esp
   14000a2a7:	loopne 0x14000a23f
   14000a2a9:	rex.W (bad) 
   14000a2ab:	xor    BYTE PTR [rdi+rdi*4-0x689c5599],dh
   14000a2b2:	(bad)  
   14000a2b3:	(bad)  
   14000a2b4:	shr    BYTE PTR [rax+0x356ad0d5],1
   14000a2ba:	adc    DWORD PTR [rsi+0xe9d3a21],eax
   14000a2c0:	outs   dx,BYTE PTR ds:[rsi]
   14000a2c1:	lods   eax,DWORD PTR ds:[rsi]
   14000a2c2:	(bad)  
   14000a2c4:	cmp    edi,DWORD PTR [rbx]
   14000a2c6:	cmp    edi,DWORD PTR [rbx+0x5d6d5af5]
   14000a2cc:	sub    DWORD PTR [rip+0x7e6fd5f1],esi        # 0x1be7078c3
   14000a2d2:	jae    0x14000a2c5
   14000a2d4:	mov    bh,0xff
   14000a2d6:	(bad)  
   14000a2d7:	jg     0x14000a2bd
   14000a2d9:	loope  0x14000a2ec
   14000a2db:	rcr    DWORD PTR [rdi],0xf5
   14000a2de:	mov    edi,DWORD PTR [rdi+0xa]
   14000a2e1:	rex call rsi
   14000a2e4:	(bad)  
   14000a2e6:	cmc    
   14000a2e7:	jg     0x14000a35c
   14000a2e9:	xor    BYTE PTR [rsi+rdi*8],bl
   14000a2ec:	mov    dl,0x94
   14000a2ee:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a2f0:	out    dx,eax
   14000a2f1:	fidivr WORD PTR [rcx-0x1a1a832d]
   14000a2f7:	xchg   edi,eax
   14000a2f8:	clc    
   14000a2f9:	(bad)  
   14000a2fa:	out    0x6,al
   14000a2fc:	xchg   esp,eax
   14000a2fd:	push   rdx
   14000a2fe:	jbe    0x14000a376
   14000a300:	mov    esi,0xb3d34139
   14000a305:	mov    bl,0x98
   14000a307:	pop    rdi
   14000a308:	pop    rsp
   14000a309:	(bad)  
   14000a30a:	cld    
   14000a30b:	ret    0x6622
   14000a30e:	(bad)  
   14000a30f:	(bad)  
   14000a310:	xor    cl,bl
   14000a312:	push   0x21
   14000a314:	rex.WRB push r11
   14000a316:	mov    ah,0x3b
   14000a318:	popf   
   14000a319:	loop   0x14000a2fd
   14000a31b:	loope  0x14000a353
   14000a31d:	sbb    BYTE PTR [rbx],dl
   14000a31f:	rex.RB out 0x24,al
   14000a322:	add    al,0xbe
   14000a324:	(bad)  
   14000a325:	xor    BYTE PTR [rax],cl
   14000a327:	shr    BYTE PTR [rsp+rsi*1-0x76],1
   14000a32b:	add    DWORD PTR [rip+0xffffffffec161861],esp        # 0x12c16bb92
   14000a331:	sets   BYTE PTR [rbx]
   14000a334:	(bad)  
   14000a335:	mov    cl,0xbd
   14000a337:	xor    edi,ebp
   14000a339:	(bad)  
   14000a33a:	ret    
   14000a33b:	movabs eax,ds:0x8c84e0cb80e07e61
   14000a344:	pop    rdx
   14000a345:	lahf   
   14000a346:	rcr    BYTE PTR [rcx+0x17efbeb5],1
   14000a34c:	lahf   
   14000a34d:	xchg   edi,eax
   14000a34e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a34f:	add    al,0x8d
   14000a351:	jbe    0x14000a34e
   14000a353:	sbb    eax,0xd72e4116
   14000a358:	push   rbp
   14000a359:	xor    BYTE PTR [rdx-0x50],dh
   14000a35c:	cmp    al,0xb7
   14000a35e:	cld    
   14000a35f:	mov    ecx,0x2ebddf5b
   14000a364:	adc    ebx,eax
   14000a366:	call   0xfadce6b8
   14000a36b:	add    BYTE PTR [rcx],ch
   14000a36d:	or     BYTE PTR [rcx-0x64],ah
   14000a370:	cmc    
   14000a371:	xor    ecx,DWORD PTR [rdx+0x1e]
   14000a374:	(bad)
   14000a377:	adc    al,0x9c
   14000a379:	out    dx,eax
   14000a37a:	fild   QWORD PTR [rsp+rax*8+0x63196205]
   14000a381:	enter  0xccb2,0x55
   14000a385:	shl    DWORD PTR [rcx+0x6b],0x7b
   14000a389:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a38a:	shl    dh,1
   14000a38c:	jno    0x14000a320
   14000a38e:	and    BYTE PTR [rcx-0x2e],cl
   14000a391:	and    bl,ch
   14000a393:	in     eax,0xb6
   14000a395:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a396:	rex.WR (bad) 
   14000a398:	movabs ds:0x797e3597834e3ec2,eax
   14000a3a1:	sti    
   14000a3a2:	sbb    al,0xb4
   14000a3a4:	(bad)  
   14000a3a5:	test   DWORD PTR [rax-0xcc90245],eax
   14000a3ab:	sub    al,0x68
   14000a3ad:	adc    DWORD PTR [rcx-0x9],edi
   14000a3b0:	jge    0x14000a3d1
   14000a3b2:	push   rcx
   14000a3b3:	adc    al,0x21
   14000a3b5:	sub    bh,cl
   14000a3b7:	out    0xae,al
   14000a3b9:	ds test eax,ebx
   14000a3bc:	sbb    BYTE PTR [rdx+rdx*2+0xc1fd0a],dl
   14000a3c3:	mov    ebx,0x95e20e9d
   14000a3c8:	sbb    bl,al
   14000a3ca:	loope  0x14000a3dc
   14000a3cc:	not    esi
   14000a3ce:	(bad)  
   14000a3cf:	jo     0x14000a3b4
   14000a3d1:	(bad)  
   14000a3d2:	or     eax,0x41595adc
   14000a3d7:	mov    bh,0xdb
   14000a3d9:	add    DWORD PTR [rax],eax
   14000a3db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a3dc:	rex.WB add bpl,BYTE PTR [r9]
   14000a3df:	and    eax,0x9e986318
   14000a3e4:	cdq    
   14000a3e5:	(bad)
   14000a3e8:	and    al,0xc2
   14000a3ea:	sub    BYTE PTR [rdx-0x247f9721],al
   14000a3f0:	repz (bad) 
   14000a3f2:	fisubr DWORD PTR [rax]
   14000a3f4:	jg     0x14000a399
   14000a3f6:	pop    rsi
   14000a3f7:	mov    DWORD PTR [rbx+rbp*4-0x7b],0xa04e2753
   14000a3ff:	(bad)  
   14000a400:	push   0x283c0820
   14000a405:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a406:	nop
   14000a407:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a408:	sub    DWORD PTR [rsi+0x6e],edx
   14000a40b:	fild   WORD PTR [rsi-0x49]
   14000a40e:	fist   DWORD PTR [rdi-0x53]
   14000a411:	push   rsi
   14000a412:	movabs ds:0xf6e5737d59fcf173,eax
   14000a41b:	jrcxz  0x14000a3b0
   14000a41d:	xchg   ebx,eax
   14000a41e:	sub    eax,0xe22c5476
   14000a423:	cmp    al,bh
   14000a425:	xor    eax,DWORD PTR [rdi+0x0]
   14000a428:	mov    edi,0xff2fa5ff
   14000a42d:	int3   
   14000a42e:	(bad)  
   14000a42f:	out    0xd6,al
   14000a431:	jg     0x14000a3e5
   14000a433:	mov    ebp,0x5973f3b3
   14000a438:	xchg   esi,eax
   14000a439:	int    0xdd
   14000a43b:	mov    ebx,0xbb5d977b
   14000a440:	cli    
   14000a441:	ds out dx,al
   14000a443:	lods   eax,DWORD PTR ds:[rsi]
   14000a444:	scas   al,BYTE PTR es:[rdi]
   14000a445:	movabs ds:0xa02525010840eddb,al
   14000a44e:	xor    eax,0xe18c452
   14000a453:	cli    
   14000a454:	push   0xffffffffe770f7b7
   14000a459:	imul   BYTE PTR [rip+0x6899e78]        # 0x1468a42d7
   14000a45f:	jnp    0x14000a4a2
   14000a461:	mov    BYTE PTR [rax+0x62],dh
   14000a464:	sbb    dl,BYTE PTR [rbx+0x33]
   14000a467:	mov    ebx,DWORD PTR [rax-0x333a6663]
   14000a46d:	hlt    
   14000a46e:	and    al,0x16
   14000a470:	out    0x66,al
   14000a472:	xor    BYTE PTR [rip+0xffffffff8e30c0d1],dh        # 0xce316549
   14000a478:	or     esp,DWORD PTR [rcx+0x24]
   14000a47b:	test   BYTE PTR [rdi+rdx*1],dl
   14000a47e:	rex.RB adc al,0x99
   14000a481:	cmp    al,BYTE PTR [rsi]
   14000a483:	xor    DWORD PTR [eax-0x1bbdd87f],edi
   14000a48a:	and    BYTE PTR [rax+rax*1-0x53],ah
   14000a48e:	add    DWORD PTR [rcx],esp
   14000a490:	add    al,0xfa
   14000a492:	add    DWORD PTR [rcx+0x11],0xfffffff4
   14000a496:	sbb    esi,eax
   14000a498:	xor    esi,esi
   14000a49a:	cmp    bl,BYTE PTR [rip+0xffffffffa36d6e6c]        # 0xe36e130c
   14000a4a0:	shr    DWORD PTR [rax+0x163759a3],1
   14000a4a6:	rex.RXB movabs ds:0x190541026ebd475e,eax
   14000a4b0:	pop    rax
   14000a4b1:	retf   
   14000a4b2:	(bad)  
   14000a4b3:	hlt    
   14000a4b4:	(bad)  
   14000a4b5:	(bad)  
   14000a4b6:	(bad)  
   14000a4b7:	mov    BYTE PTR [rcx+0x64],ah
   14000a4ba:	rex.W enter 0x8161,0x46
   14000a4bf:	lods   eax,DWORD PTR ds:[rsi]
   14000a4c0:	xor    eax,0xe598e8
   14000a4c5:	mov    ah,BYTE PTR [rsi]
   14000a4c7:	stos   DWORD PTR es:[rdi],eax
   14000a4c8:	repnz mov dl,0xc3
   14000a4cb:	pop    rsp
   14000a4cc:	fwait
   14000a4cd:	jge    0x14000a531
   14000a4cf:	rex icebp 
   14000a4d1:	mov    ecx,0x535ad759
   14000a4d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a4d7:	adc    eax,ebp
   14000a4d9:	(bad)  
   14000a4da:	push   rbp
   14000a4db:	loop   0x14000a469
   14000a4dd:	rex.B in al,0x39
   14000a4e0:	loop   0x14000a506
   14000a4e2:	shl    DWORD PTR [rax+0x30],0xc4
   14000a4e6:	out    dx,al
   14000a4e7:	pop    rsi
   14000a4e8:	sbb    edi,DWORD PTR [rbp-0x3e7cff3f]
   14000a4ee:	movabs al,ds:0xa3c63bbe2f5dcdf0
   14000a4f7:	test   eax,0x89d6cf34
   14000a4fc:	xchg   esp,eax
   14000a4fd:	icebp  
   14000a4fe:	and    BYTE PTR [rbp+0x5e],cl
   14000a501:	(bad)  
   14000a502:	cli    
   14000a503:	sar    BYTE PTR [rsi+0x575b2f16],0x4e
   14000a50a:	movabs ds:0x77469ce5045f8107,eax
   14000a513:	mov    esi,0xa3112b39
   14000a518:	stos   DWORD PTR es:[rdi],eax
   14000a519:	jmp    0x113a2f7b5
   14000a51e:	jmp    0x14000a581
   14000a520:	scas   eax,DWORD PTR es:[rdi]
   14000a521:	ffree  st(6)
   14000a523:	out    0xd6,al
   14000a525:	ss mov dh,0xb6
   14000a528:	mov    dh,0xb0
   14000a52a:	jbe    0x14000a523
   14000a52c:	cs push rsi
   14000a52e:	push   rdi
   14000a52f:	outs   dx,DWORD PTR ds:[rsi]
   14000a530:	movsxd esi,DWORD PTR [rdi+0x6b]
   14000a533:	or     edi,DWORD PTR [rbx+0x7b746d3b]
   14000a539:	pop    rbp
   14000a53a:	in     al,0x42
   14000a53c:	movabs al,ds:0x93131e717e626cd1
   14000a545:	xchg   ebx,eax
   14000a546:	lock add DWORD PTR [rax],0x51
   14000a54a:	lods   eax,DWORD PTR ds:[rsi]
   14000a54b:	xchg   BYTE PTR [rax],ah
   14000a54d:	or     BYTE PTR [rcx],dh
   14000a54f:	xor    eax,0xc4e68d3d
   14000a554:	test   BYTE PTR [rcx+0xd],dh
   14000a557:	lods   al,BYTE PTR ds:[rsi]
   14000a558:	cmc    
   14000a559:	adc    BYTE PTR [rbp+0x26cd5a21],al
   14000a55f:	pop    rdx
   14000a560:	int    0x26
   14000a562:	out    0x66,al
   14000a564:	xor    BYTE PTR [ebx],dh
   14000a567:	xor    eax,0x1b35685
   14000a56c:	iret   
   14000a56d:	pause  
   14000a56f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a570:	sub    DWORD PTR [rdx],edi
   14000a572:	popf   
   14000a573:	(bad)  
   14000a574:	idiv   BYTE PTR [rdx]
   14000a576:	out    0x9a,al
   14000a578:	sahf   
   14000a579:	(bad)  
   14000a57a:	(bad)  
   14000a57b:	ret    0x1ea7
   14000a57e:	jg     0x14000a51c
   14000a580:	or     al,0x86
   14000a582:	ret    
   14000a583:	out    0xb5,al
   14000a585:	jmp    0x14000a55e
   14000a587:	cmp    DWORD PTR [rbp+0x24e4d4c0],esp
   14000a58d:	sbb    bl,bh
   14000a58f:	push   0xffffffff8267fc22
   14000a594:	add    BYTE PTR [rsi-0x9],bh
   14000a597:	ud0    ebx,ecx
   14000a59a:	(bad)  
   14000a59b:	mov    ch,0xdb
   14000a59d:	popf   
   14000a59e:	pop    rdi
   14000a59f:	fcmovu st,st(1)
   14000a5a1:	(bad)  
   14000a5a3:	or     edx,DWORD PTR [rdi+0x3f]
   14000a5a6:	mov    eax,0xe6f37cb6
   14000a5ab:	rex.WRB jbe 0x14000a599
   14000a5ae:	out    0xd,al
   14000a5b0:	lods   al,BYTE PTR ds:[rsi]
   14000a5b1:	fistp  QWORD PTR [rbp+0xeada18b]
   14000a5b7:	int3   
   14000a5b8:	xor    ah,BYTE PTR [rbx+0x3bf09c3d]
   14000a5be:	push   0x44a4a1ad
   14000a5c3:	push   0xffffffffffffffd3
   14000a5c5:	cmp    al,0x20
   14000a5c7:	adc    al,0x9a
   14000a5c9:	jno    0xfadce38c
   14000a5cf:	jns    0x14000a574
   14000a5d1:	enter  0xf2e5,0x30
   14000a5d5:	adc    al,0x35
   14000a5d8:	xor    BYTE PTR [rip+0xffffffffb9f98733],bh        # 0xf9fa2d11
   14000a5de:	add    eax,0x61cfcc2c
   14000a5e3:	imul   esp,DWORD PTR [rcx+0x1e],0x644d9333
   14000a5ea:	pop    rcx
   14000a5eb:	xchg   BYTE PTR [rsi-0x41],bl
   14000a5ee:	pop    rdi
   14000a5ef:	push   0x137d22d4
   14000a5f4:	xchg   BYTE PTR [rax+0x5f0b0a2],cl
   14000a5fa:	movabs ds:0x1080421024924228,eax
   14000a603:	(bad)  
   14000a604:	jp     0x14000a5c3
   14000a606:	mov    ss,WORD PTR [rbx]
   14000a608:	or     ecx,DWORD PTR [rbx]
   14000a60a:	js     0x14000a5ee
   14000a60c:	repnz movsxd ecx,DWORD PTR [rax-0x6e]
   14000a610:	adc    al,0xc3
   14000a612:	cmp    BYTE PTR [rsi-0x66],al
   14000a615:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a616:	fcomp  st(2)
   14000a618:	ffree  st(5)
   14000a61a:	fcmovb st,st(6)
   14000a61c:	(bad)  
   14000a61d:	jb     0x14000a648
   14000a61f:	rex.WRB sbb rax,0x29161844
   14000a625:	stos   DWORD PTR es:[rdi],eax
   14000a626:	xor    BYTE PTR [rdx+rcx*1],cl
   14000a629:	mov    bl,0xd8
   14000a62b:	fisttp QWORD PTR [rcx]
   14000a62d:	enter  0xfc3d,0x11
   14000a631:	rex.B sub eax,0x5f2859cf
   14000a637:	call   0x1ae690f83
   14000a63c:	sbb    DWORD PTR [rax+rax*1+0x1bfcabee],0xffffffb5
   14000a644:	add    BYTE PTR [rdx-0x496aef45],cl
   14000a64a:	movabs eax,ds:0x631c61810999755c
   14000a653:	cmp    BYTE PTR [rcx+rdx*8-0x142e8917],cl
   14000a65a:	wrmsr  
   14000a65c:	mov    WORD PTR [rdi+0x3c2732c5],es
   14000a662:	(bad)  
   14000a663:	xchg   esi,eax
   14000a664:	rol    BYTE PTR [rcx],0x6d
   14000a667:	out    dx,al
   14000a668:	retf   0x4765
   14000a66b:	icebp  
   14000a66c:	movabs al,ds:0x7df6e94bd0a8da94
   14000a675:	pop    rdi
   14000a676:	fcomp  st(5)
   14000a678:	test   BYTE PTR [rdx],ch
   14000a67a:	iret   
   14000a67b:	jrcxz  0x14000a602
   14000a67d:	fwait
   14000a67e:	adc    ecx,ebx
   14000a680:	movsxd ebp,esp
   14000a682:	add    al,0xdd
   14000a684:	pop    rcx
   14000a685:	movsxd ecx,DWORD PTR [rsi-0x5d]
   14000a688:	out    0xb6,eax
   14000a68a:	jb     0x14000a6fb
   14000a68c:	xor    BYTE PTR [rdx+riz*4],bl
   14000a68f:	fucomp st(5)
   14000a691:	(bad)  
   14000a692:	imul   edi,DWORD PTR [rbx+0x7],0xffffff9b
   14000a696:	fwait
   14000a697:	fwait
   14000a698:	mov    eax,0xee0ee77b
   14000a69d:	fidivr WORD PTR [rsi+0x777bb58d]
   14000a6a3:	mov    cl,0xbd
   14000a6a5:	mov    ch,0x8d
   14000a6a7:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000a6a9:	lea    ebp,[rbx+rcx*8]
   14000a6ac:	ins    DWORD PTR es:[rdi],dx
   14000a6ad:	or     DWORD PTR [rdi+0x6b678334],ebp
   14000a6b3:	xor    eax,0x12793c9c
   14000a6b8:	rex.WXB retf 
   14000a6ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a6bb:	loopne 0x14000a698
   14000a6bd:	data16 ss (bad) 
   14000a6c0:	or     eax,0x8fbefb89
   14000a6c5:	(bad)  
   14000a6c6:	in     al,0x24
   14000a6c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a6c9:	addr32 addr32 int 0xff
   14000a6cd:	jae    0x14000a72d
   14000a6cf:	sub    BYTE PTR [rax-0x33f63637],dl
   14000a6d5:	(bad)  
   14000a6d6:	int3   
   14000a6d7:	(bad)  
   14000a6d8:	jbe    0x14000a744
   14000a6da:	or     al,BYTE PTR [rcx+0x18]
   14000a6dd:	xor    BYTE PTR [rbx],0x86
   14000a6e0:	and    al,0x4d
   14000a6e2:	mov    cl,0xbd
   14000a6e4:	mov    ebp,0x388b2c6d
   14000a6e9:	adc    BYTE PTR [rax+r15*4],r8b
   14000a6ed:	je     0x14000a6d0
   14000a6ef:	add    cl,BYTE PTR [rsi+0x2e]
   14000a6f2:	cs (bad) 
   14000a6f4:	gs jne 0x14000a68c
   14000a6f7:	jl     0x14000a771
   14000a6f9:	std    
   14000a6fa:	cmp    dh,BYTE PTR [rdi]
   14000a6fc:	out    0xb,eax
   14000a6fe:	rex.RX cdq 
   14000a700:	jns    0x14000a701
   14000a702:	mov    dl,BYTE PTR [rdx]
   14000a704:	shr    bh,0xfe
   14000a707:	loope  0x14000a748
   14000a709:	sti    
   14000a70a:	je     0x14000a6cb
   14000a70c:	(bad)  
   14000a70d:	clc    
   14000a70e:	retf   
   14000a70f:	fcmovnu st,st(3)
   14000a712:	(bad)  
   14000a713:	fimul  WORD PTR [rbp-0x1168a46b]
   14000a719:	fdivr  QWORD PTR [rcx-0xf07221d]
   14000a71f:	sbb    dl,dh
   14000a721:	out    dx,al
   14000a722:	fiadd  WORD PTR [rbp-0x66]
   14000a725:	and    al,0x0
   14000a727:	jo     0x14000a769
   14000a729:	adc    edi,DWORD PTR [rdx+0x6334b0b]
   14000a72f:	pop    rbp
   14000a730:	(bad)  
   14000a731:	in     eax,dx
   14000a732:	jmp    0x14000a731
   14000a734:	add    BYTE PTR [rbp-0x7b7d7afa],bl
   14000a73a:	(bad)  
   14000a73b:	pop    rbp
   14000a73c:	or     cl,BYTE PTR [rax-0x7d]
   14000a73f:	rcr    ah,0xac
   14000a742:	and    ecx,DWORD PTR [rbp+0x6]
   14000a745:	sbb    BYTE PTR [rdx+rbx*8-0x28],dh
   14000a749:	fstp   QWORD PTR [rax-0x3d]
   14000a74c:	jne    0x14000a714
   14000a74e:	or     al,0x4b
   14000a750:	xchg   DWORD PTR [rip+0x58935b34],esi        # 0x19894028a
   14000a756:	pop    rdx
   14000a757:	pop    rdx
   14000a758:	(bad)  
   14000a759:	fsub   st(4),st
   14000a75b:	sbb    al,0xe6
   14000a75d:	out    0x66,al
   14000a75f:	xor    BYTE PTR [rdi],dh
   14000a761:	(bad)  
   14000a762:	ret    0x64d4
   14000a765:	add    edx,DWORD PTR [rdx+rbp*1+0x2c8c71c4]
   14000a76c:	retf   
   14000a76d:	adc    BYTE PTR [rbp+0x61],al
   14000a770:	and    DWORD PTR [rax-0x3a],eax
   14000a773:	je     0x14000a780
   14000a775:	or     al,cl
   14000a777:	icebp  
   14000a778:	jge    0x14000a799
   14000a77a:	jns    0x14000a71a
   14000a77c:	and    ecx,DWORD PTR [rax]
   14000a77e:	jl     0x14000a754
   14000a780:	push   0xffffffffffffffd1
   14000a782:	jge    0x14000a77f
   14000a784:	cdq    
   14000a785:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a786:	sub    edx,esi
   14000a788:	fsubr  QWORD PTR [rax-0x66]
   14000a78b:	outs   dx,BYTE PTR ds:[rsi]
   14000a78c:	scas   eax,DWORD PTR es:[rdi]
   14000a78d:	xchg   ebp,ebx
   14000a78f:	mov    ebp,0xf1ee933d
   14000a794:	mov    esp,0x20e5fc2
   14000a799:	adc    ebx,DWORD PTR [rbx+rsi*1]
   14000a79c:	(bad)  
   14000a79d:	(bad)  
   14000a79e:	loope  0x14000a7a7
   14000a7a0:	xor    al,0xae
   14000a7a2:	out    dx,eax
   14000a7a3:	sti    
   14000a7a4:	sti    
   14000a7a5:	add    bl,BYTE PTR [rbp-0x4e]
   14000a7a8:	adc    BYTE PTR [rbx+rsi*4-0x2c],bl
   14000a7ac:	(bad)  
   14000a7ad:	mov    cl,0x5
   14000a7af:	lods   eax,DWORD PTR ds:[rsi]
   14000a7b0:	jne    0x14000a793
   14000a7b2:	xor    dl,BYTE PTR [rax]
   14000a7b4:	rex.X (bad) 
   14000a7b6:	cwde   
   14000a7b7:	jmp    0x16b730c70
   14000a7bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a7bd:	nop
   14000a7be:	cwd    
   14000a7c0:	shr    eax,1
   14000a7c2:	in     eax,dx
   14000a7c3:	(bad)  
   14000a7c4:	ficomp DWORD PTR [rbp-0x5122c5f2]
   14000a7ca:	mov    DWORD PTR [rdx-0x5aae8e39],edi
   14000a7d0:	out    0xc8,al
   14000a7d2:	(bad)  
   14000a7d3:	jne    0x14000a756
   14000a7d5:	(bad)  
   14000a7d6:	add    DWORD PTR [rbp-0x1],edx
   14000a7d9:	(bad)  
   14000a7da:	sub    al,0xd5
   14000a7dc:	add    DWORD PTR [rdi+rbx*8],0x6d
   14000a7e0:	jrcxz  0x14000a81a
   14000a7e2:	pop    rdi
   14000a7e3:	mov    ebp,0xa1081eec
   14000a7e8:	mov    dl,BYTE PTR [rcx]
   14000a7ea:	je     0x14000a81a
   14000a7ec:	push   0xfffffffffc537ae8
   14000a7f1:	xchg   edx,eax
   14000a7f2:	movabs al,ds:0x9fdbd03d28c04213
   14000a7fb:	sbb    DWORD PTR fs:[rdx],edi
   14000a7fe:	popf   
   14000a7ff:	(bad)  
   14000a800:	mov    dh,0x77
   14000a802:	jbe    0x14000a791
   14000a804:	rex.RX mov edi,0x6e770f77
   14000a80a:	ffree  st(2)
   14000a80c:	fnstsw WORD PTR [rbx]
   14000a80e:	ja     0x14000a7c0
   14000a810:	mov    ecx,0x7b7689b9
   14000a815:	iret   
   14000a816:	nop
   14000a817:	pop    rax
   14000a818:	movabs al,es:0x37383e2739816d6c
   14000a822:	ja     0x14000a894
   14000a824:	or     ch,BYTE PTR [rbx+0x4d]
   14000a827:	int3   
   14000a828:	(bad)  
   14000a829:	int    0x62
   14000a82b:	stc    
   14000a82c:	in     al,dx
   14000a82d:	pop    rcx
   14000a82e:	(bad)  
   14000a82f:	push   0x75
   14000a831:	in     al,0xb9
   14000a833:	sub    ah,bl
   14000a835:	rex.WRX
   14000a836:	sub    ax,0xe9b9
   14000a83a:	fstp   DWORD PTR [rcx+0x4c]
   14000a83d:	rex.WRXB
   14000a83e:	rex.WRB movabs rax,ds:0xd9b34430a226cd5
   14000a848:	rex.WR
   14000a849:	rex.WRX
   14000a84a:	rex.WR (bad) 
   14000a84c:	mov    dl,0xd5
   14000a84e:	ret    0xe4d4
   14000a851:	and    al,0x1a
   14000a853:	cmc    
   14000a854:	sbb    dh,BYTE PTR [rax+rax*4]
   14000a857:	(bad)  
   14000a858:	(bad)  
   14000a859:	sbb    BYTE PTR [rip+0xffffffff9a69f82b],0x2        # 0xda6aa08b
   14000a860:	add    BYTE PTR [rsi],dl
   14000a862:	out    0xe7,eax
   14000a864:	jno    0x14000a84c
   14000a866:	(bad)  
   14000a867:	sub    DWORD PTR [rax],esi
   14000a869:	(bad)  
   14000a86a:	lock popf 
   14000a86c:	push   rdi
   14000a86d:	pop    rdi
   14000a86e:	rex.RB scas eax,DWORD PTR es:[rdi]
   14000a870:	fild   DWORD PTR [rdi+0x528c0a54]
   14000a876:	push   rax
   14000a877:	mov    al,BYTE PTR [rbx]
   14000a879:	(bad)  
   14000a87a:	retf   0xe2a3
   14000a87d:	rex.WRXB adc rax,0xffffffff9ff17c01
   14000a883:	(bad)  
   14000a884:	jg     0x14000a8ed
   14000a886:	neg    dl
   14000a888:	popf   
   14000a889:	pop    rdi
   14000a88a:	pop    rsp
   14000a88b:	(bad)  
   14000a88d:	cld    
   14000a88e:	rex.WXB xlat BYTE PTR ds:[rbx]
   14000a890:	outs   dx,DWORD PTR ds:[rsi]
   14000a891:	scas   al,BYTE PTR es:[rdi]
   14000a892:	cmp    al,0xbe
   14000a894:	mov    ch,0xbd
   14000a896:	in     eax,dx
   14000a897:	fnstsw WORD PTR [rax+0x6e770d76]
   14000a89d:	ffreep st(2)
   14000a89f:	jo     0x14000a8d1
   14000a8a1:	cmp    BYTE PTR [rax-0x385c355f],ah
   14000a8a7:	sub    BYTE PTR [rbp-0x492f7df8],ah
   14000a8ad:	movsxd ecx,DWORD PTR [rdx+0x10c2d1a2]
   14000a8b3:	add    al,0xa0
   14000a8b5:	(bad)  
   14000a8b6:	sbb    BYTE PTR [rbx+0x43],dl
   14000a8b9:	add    eax,edx
   14000a8bb:	sub    BYTE PTR [rdi],dl
   14000a8bd:	test   al,0x1b
   14000a8bf:	or     dl,BYTE PTR [rax-0x30]
   14000a8c2:	retf   0x8110
   14000a8c5:	rex.RX outs dx,BYTE PTR ds:[rsi]
   14000a8c7:	cs cmp al,0xee
   14000a8ca:	and    edi,edx
   14000a8cc:	rex
   14000a8cd:	rex.WRXB out 0x18,al
   14000a8d0:	je     0x14000a8c8
   14000a8d2:	jo     0x14000a857
   14000a8d4:	jno    0x14000a946
   14000a8d6:	out    dx,al
   14000a8d7:	cmp    DWORD PTR [rbx+0x1],0x28
   14000a8db:	div    DWORD PTR [rax]
   14000a8dd:	xor    DWORD PTR [rcx],edi
   14000a8df:	mov    DWORD PTR [rbp+0x589c45f9],eax
   14000a8e5:	pop    rdx
   14000a8e6:	(bad)  
   14000a8e7:	test   eax,0x3c5c39a5
   14000a8ec:	ja     0x14000a900
   14000a8ee:	retf   
   14000a8ef:	push   rbx
   14000a8f0:	push   rbx
   14000a8f1:	(bad)  
   14000a8f2:	int3   
   14000a8f3:	cli    
   14000a8f4:	push   rcx
   14000a8f5:	jg     0x14000a8cb
   14000a8f7:	in     eax,0xfe
   14000a8f9:	retf   
   14000a8fa:	jle    0x14000a8a8
   14000a8fc:	leave  
   14000a8fd:	pop    rbp
   14000a8fe:	out    dx,eax
   14000a8ff:	outs   dx,DWORD PTR ds:[rsi]
   14000a900:	(bad)  
   14000a901:	pop    rbx
   14000a902:	pop    rsi
   14000a903:	(bad)  
   14000a904:	pop    rbx
   14000a905:	(bad)  
   14000a906:	in     eax,dx
   14000a907:	cmc    
   14000a908:	xchg   ecx,eax
   14000a909:	out    dx,eax
   14000a90a:	mov    ch,0xb
   14000a90c:	(bad)  
   14000a90d:	jo     0x14000a900
   14000a90f:	(bad)  
   14000a910:	push   rdi
   14000a911:	int    0xe6
   14000a913:	outs   dx,BYTE PTR ds:[rsi]
   14000a914:	push   rsi
   14000a915:	loop   0x14000a91b
   14000a917:	cwde   
   14000a918:	jae    0x14000a8a8
   14000a91a:	mov    dl,0xd8
   14000a91c:	cmp    DWORD PTR [rdx],esp
   14000a91e:	adc    dh,dh
   14000a920:	mov    eax,0xb422c68c
   14000a925:	ss (bad) 
   14000a927:	xor    al,0x89
   14000a929:	jrcxz  0x14000a943
   14000a92b:	in     eax,dx
   14000a92c:	rex.WRX (bad) 
   14000a92e:	std    
   14000a92f:	inc    BYTE PTR [rax]
   14000a931:	and    ecx,0xffffffd0
   14000a934:	add    al,0xe3
   14000a936:	ins    BYTE PTR es:[rdi],dx
   14000a937:	(bad)  
   14000a938:	cmp    al,0x8e
   14000a93a:	xchg   ebx,eax
   14000a93b:	add    ebx,edi
   14000a93d:	(bad)  
   14000a93e:	or     edi,DWORD PTR [rdx]
   14000a940:	movsxd ecx,DWORD PTR [rsp+rdi*8]
   14000a943:	sbb    cl,al
   14000a945:	mov    dh,0xe3
   14000a947:	sub    al,0x2b
   14000a949:	mov    ebx,0x9dd36521
   14000a94e:	xor    DWORD PTR [rbx-0x46],esp
   14000a951:	mov    ebx,0x1a718e5a
   14000a956:	mov    ebp,0x706ebfbc
   14000a95b:	push   0xffffffffb768e796
   14000a960:	fcmovnu st,st(0)
   14000a962:	imul   esi,DWORD PTR [rdi-0x50],0xffffffb3
   14000a966:	mov    bl,0x83
   14000a968:	cmc    
   14000a969:	mov    ch,0x35
   14000a96b:	fcomp  QWORD PTR [rbp-0x43]
   14000a96e:	(bad)  
   14000a96f:	(bad)  
   14000a970:	fld    TBYTE PTR [rbx-0x3d232128]
   14000a976:	div    dh
   14000a978:	ss cli 
   14000a97a:	std    
   14000a97b:	add    DWORD PTR [rdx-0x3001d2d4],esi
   14000a981:	nop
   14000a982:	stos   DWORD PTR es:[rdi],eax
   14000a983:	cmp    DWORD PTR [rsi+0x65393d81],ecx
   14000a989:	mov    bh,0xb0
   14000a98b:	shr    DWORD PTR [rcx+riz*8-0x2c],1
   14000a98f:	jmp    0xdf9e41e7
   14000a994:	(bad)  
   14000a995:	rex.W xor cl,dil
   14000a998:	add    eax,0x7a86a8a2
   14000a99d:	movabs ds:0x9f9b985ab6680001,eax
   14000a9a6:	(bad)  
   14000a9a7:	hlt    
   14000a9a8:	in     al,0x24
   14000a9aa:	out    0x66,al
   14000a9ac:	shr    BYTE PTR [eax-0x4a952e29],1
   14000a9b3:	shr    BYTE PTR [rax-0x2ec6cf2b],1
   14000a9b9:	sub    cl,BYTE PTR [rax-0x2738e785]
   14000a9bf:	fstp   st(5)
   14000a9c1:	sub    eax,0x85295f04
   14000a9c6:	and    BYTE PTR [rax],cl
   14000a9c8:	jo     0x14000a9ab
   14000a9ca:	fdivr  QWORD PTR [rcx]
   14000a9cc:	sub    al,0xce
   14000a9ce:	int    0xe1
   14000a9d0:	fimul  DWORD PTR [rbp-0x48a47e5]
   14000a9d6:	rex.R outs dx,BYTE PTR ss:[rsi]
   14000a9d9:	add    al,0xdf
   14000a9db:	or     DWORD PTR [rbp-0x46b80a1d],edi
   14000a9e1:	adc    DWORD PTR [rcx+rbx*1-0x61],0x38
   14000a9e6:	add    DWORD PTR [rbx+riz*8-0x5b],edi
   14000a9ea:	xchg   edi,eax
   14000a9eb:	addr32 (bad) 
   14000a9ed:	mov    dh,0xb6
   14000a9ef:	(bad)  
   14000a9f0:	fcmovu st,st(2)
   14000a9f2:	(bad)  
   14000a9f3:	out    0x5f,al
   14000a9f5:	jle    0x14000a9de
   14000a9f7:	std    
   14000a9f8:	stos   DWORD PTR es:[rdi],eax
   14000a9f9:	lahf   
   14000a9fa:	fstp   st(5)
   14000a9fc:	fisttp DWORD PTR [rbx]
   14000a9fe:	scas   al,BYTE PTR es:[rdi]
   14000a9ff:	jg     0x14000a9f1
   14000aa01:	add    DWORD PTR [rcx-0x7ce48545],edi
   14000aa07:	inc    cl
   14000aa09:	(bad)  [rcx]
   14000aa0b:	movabs ds:0x1fb861a0fbefab7e,eax
   14000aa14:	cmp    bl,cl
   14000aa16:	jae    0x14000aa20
   14000aa18:	shl    DWORD PTR [rcx],0x72
   14000aa1b:	mov    DWORD PTR [rsi+riz*8-0x70],ecx
   14000aa1f:	mov    ecx,0x26beb284
   14000aa24:	mov    BYTE PTR [rsi],al
   14000aa26:	je     0x14000aa21
   14000aa28:	loop   0x14000aa05
   14000aa2a:	lahf   
   14000aa2b:	lods   eax,DWORD PTR ds:[rsi]
   14000aa2c:	pop    rbx
   14000aa2d:	add    al,0xeb
   14000aa2f:	in     al,dx
   14000aa30:	lods   eax,DWORD PTR ds:[rsi]
   14000aa31:	mov    ch,0x28
   14000aa33:	movabs ds:0x30645c8a5910d020,eax
   14000aa3c:	in     eax,dx
   14000aa3d:	(bad)  
   14000aa3e:	rex.WRX xor r14,QWORD PTR [rdx]
   14000aa41:	xor    BYTE PTR [rdx-0xc],0xf6
   14000aa45:	mov    dh,0x71
   14000aa47:	ja     0x14000aa2e
   14000aa49:	es pop rsi
   14000aa4b:	addr32 (bad) 
   14000aa4d:	test   al,0xc7
   14000aa4f:	rol    DWORD PTR [rdx+0x37af500],0x4b
   14000aa56:	or     esp,DWORD PTR [rdi]
   14000aa58:	jo     0x14000aa40
   14000aa5a:	hlt    
   14000aa5b:	rex.WB pop r12
   14000aa5d:	cmp    al,0x73
   14000aa5f:	adc    dl,BYTE PTR [rdi+0x2e]
   14000aa62:	pushf  
   14000aa63:	ret    0x73c5
   14000aa66:	out    0x6c,eax
   14000aa68:	jge    0x14000aa2b
   14000aa6a:	jle    0x14000aa52
   14000aa6c:	(bad)  
   14000aa6d:	xor    al,0x2b
   14000aa6f:	xor    BYTE PTR [rsi],ch
   14000aa71:	cmc    
   14000aa72:	in     al,0x59
   14000aa74:	in     eax,dx
   14000aa75:	pop    rdi
   14000aa76:	(bad)  
   14000aa77:	fcom   QWORD PTR [rbp-0x7e]
   14000aa7a:	or     DWORD PTR [rcx+0x2e],esp
   14000aa7d:	out    dx,al
   14000aa7e:	rex.WRX (bad) 
   14000aa80:	shl    esi,0xce
   14000aa83:	outs   dx,BYTE PTR ds:[rsi]
   14000aa84:	adc    DWORD PTR [rdx+rsi*2+0x56],esp
   14000aa88:	rex.XB adc al,0x99
   14000aa8b:	jp     0x14000aa95
   14000aa8d:	(bad)  
   14000aa8e:	test   DWORD PTR [rcx-0x52da1330],ebp
   14000aa94:	mov    esi,0xad85b5b1
   14000aa99:	in     eax,dx
   14000aa9a:	sbb    eax,0xa2bd7b74
   14000aa9f:	hlt    
   14000aaa0:	xor    eax,0xc0d3138e
   14000aaa5:	push   rdx
   14000aaa6:	adc    al,BYTE PTR [rdx+0x27]
   14000aaa9:	in     al,dx
   14000aaaa:	(bad)  
   14000aaab:	movabs ds:0x98d19d6c3ea11479,al
   14000aab4:	adc    DWORD PTR [rbx],0xfffffff4
   14000aab7:	xor    BYTE PTR [rbx*2-0x21ddd18b],dh
   14000aabe:	test   al,0xd5
   14000aac0:	adc    al,bl
   14000aac2:	stos   BYTE PTR es:[rdi],al
   14000aac3:	push   rax
   14000aac4:	idiv   DWORD PTR [rbp-0x371cf224]
   14000aaca:	int3   
   14000aacb:	cmp    eax,0xc32c930b
   14000aad0:	(bad)  
   14000aad1:	xor    BYTE PTR [rax-0x45],al
   14000aad4:	rol    ecx,cl
   14000aad6:	(bad)  
   14000aad7:	out    0x16,al
   14000aad9:	ss (bad) 
   14000aadb:	(bad)  
   14000aadc:	jno    0x14000aacd
   14000aade:	(bad)  
   14000aadf:	sbb    eax,0xc55d5ddc
   14000aae4:	cli    
   14000aae5:	ficomp DWORD PTR [rdx]
   14000aae7:	mov    dh,0xb7
   14000aae9:	mov    bh,0xd1
   14000aaeb:	in     eax,dx
   14000aaec:	cmc    
   14000aaed:	xchg   ecx,eax
   14000aaee:	or     DWORD PTR es:[rbx+rdi*1-0x1407c959],eax
   14000aaf6:	sti    
   14000aaf7:	(bad)  
   14000aaf8:	sbb    cl,ch
   14000aafa:	cmp    al,BYTE PTR [rax]
   14000aafc:	add    bl,BYTE PTR [rcx-0x26118fb5]
   14000ab02:	movsxd ebp,DWORD PTR [rdx-0x66]
   14000ab05:	shl    DWORD PTR [rdx+rdx*8+0x4d682100],1
   14000ab0c:	rex.WR loopne 0x14000aafb
   14000ab0f:	stc    
   14000ab10:	jae    0x14000aaaa
   14000ab12:	cdq    
   14000ab13:	fwait
   14000ab14:	cmp    DWORD PTR [rbx-0x502464fb],0xffffffc9
   14000ab1b:	test   eax,0x4d9a3429
   14000ab20:	jo     0x14000aaf1
   14000ab22:	rex.XB mov r11b,0xd9
   14000ab25:	(bad)  
   14000ab26:	cdq    
   14000ab27:	push   rbx
   14000ab28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ab29:	xor    BYTE PTR [rip+0xffffffffa356853d],bh        # 0xe357306c
   14000ab2f:	adc    DWORD PTR [rsi-0x2d],0x366bc98c
   14000ab36:	sbb    ecx,DWORD PTR [rax]
   14000ab38:	jl     0x14000ab59
   14000ab3a:	mov    ecx,0x870e1894
   14000ab3f:	fcomp  st(5)
   14000ab41:	fld    QWORD PTR [rbp-0x59]
   14000ab44:	xlat   BYTE PTR ds:[rbx]
   14000ab45:	sub    edi,DWORD PTR [rdx]
   14000ab47:	add    al,0x1
   14000ab49:	movabs ds:0xf18e388f3f9d2ff5,eax
   14000ab52:	bnd ja 0x14000ab13
   14000ab55:	cmp    esi,0x20
   14000ab58:	mov    esi,0x2601b8ef
   14000ab5d:	xchg   esi,eax
   14000ab5e:	rex.XB sbb DWORD PTR [r11],eax
   14000ab61:	push   QWORD PTR [rbx-0x6c03fd18]
   14000ab67:	(bad)  
   14000ab68:	clc    
   14000ab69:	ret    
   14000ab6a:	push   rsi
   14000ab6b:	xchg   esi,eax
   14000ab6c:	mov    DWORD PTR [rdi-0x6464148],edi
   14000ab72:	rex.WXB jg 0x14000ab67
   14000ab75:	std    
   14000ab76:	xlat   BYTE PTR ds:[rbx]
   14000ab77:	lahf   
   14000ab78:	jmp    0x14000ab6e
   14000ab7a:	jp     0x14000ab4d
   14000ab7c:	retf   0x1f87
   14000ab7f:	xchg   edx,eax
   14000ab80:	(bad)  
   14000ab81:	(bad)  [rdi-0x46649230]
   14000ab87:	or     BYTE PTR [rbx-0x194d53ff],ah
   14000ab8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ab8e:	xchg   esp,eax
   14000ab8f:	(bad)  
   14000ab90:	xchg   esi,eax
   14000ab91:	mov    ah,0x9d
   14000ab93:	(bad)  
   14000ab94:	sbb    bl,BYTE PTR [rcx-0x6a]
   14000ab97:	(bad)  
   14000ab98:	cwde   
   14000ab99:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ab9a:	adc    BYTE PTR [rcx-0x6f9863be],bh
   14000aba0:	mov    ecx,0x2012d684
   14000aba5:	add    al,0xc4
   14000aba7:	cli    
   14000aba8:	mov    ebp,0x2ce57c26
   14000abad:	add    BYTE PTR [rip+0x6bc520d],cl        # 0x146bcfdc0
   14000abb3:	add    BYTE PTR [rdi+0x39c607b],cl
   14000abb9:	test   BYTE PTR [rax+0x6595ae93],bl
   14000abbf:	pop    rdx
   14000abc0:	or     DWORD PTR [rax-0x28],eax
   14000abc3:	xchg   ebx,eax
   14000abc4:	rex.WRB int 0xfa
   14000abc7:	test   BYTE PTR [rdx],al
   14000abc9:	test   BYTE PTR [rdx+0x194a0a50],al
   14000abcf:	sbb    bl,dh
   14000abd1:	xor    eax,ebx
   14000abd3:	fcmovnb st,st(5)
   14000abd5:	(bad)  
   14000abd6:	fidivr DWORD PTR [rip+0xffffffffebf6f5bc]        # 0x12bf7a198
   14000abdc:	movabs al,ds:0x138e3df0fbea0f9e
   14000abe5:	repz mov edi,DWORD PTR [rax]
   14000abe8:	jae    0x14000abdc
   14000abea:	add    al,0x2e
   14000abec:	sahf   
   14000abed:	cmp    DWORD PTR [rcx-0x3962d1d9],ecx
   14000abf3:	movsxd edx,DWORD PTR [rdi]
   14000abf5:	movabs al,cs:0x8e368e27481fa8d9
   14000abff:	xchg   esp,eax
   14000ac00:	idiv   DWORD PTR [rbx+0x15b03afc]
   14000ac06:	outs   dx,DWORD PTR ds:[rsi]
   14000ac07:	sub    BYTE PTR gs:[rbp+0x14438c6c],ah
   14000ac0e:	rex.RB and eax,0x8f7d6ac2
   14000ac14:	jae    0x14000ac1a
   14000ac16:	mov    esi,0x989c98f
   14000ac1b:	int3   
   14000ac1c:	rex.WR
   14000ac1d:	rex.WRXB adc QWORD PTR [r8],0x5d9ded82
   14000ac24:	in     al,dx
   14000ac25:	in     al,dx
   14000ac26:	out    dx,al
   14000ac27:	(bad)  
   14000ac28:	imul   esp,DWORD PTR [rdi+0x7],0xffffff83
   14000ac2c:	loope  0x14000ac3e
   14000ac2e:	jno    0x14000ac9c
   14000ac30:	push   rdx
   14000ac31:	ins    DWORD PTR es:[rdi],dx
   14000ac32:	(bad)  
   14000ac33:	mov    WORD PTR [rdi-0x2a],?
   14000ac36:	cmp    DWORD PTR [rbx],0x2fffe5de
   14000ac3c:	jrcxz  0x14000abe6
   14000ac3e:	movabs ds:0xf1706ace9952a399,al
   14000ac47:	mov    ds,WORD PTR [rdx+0x1ab7808d]
   14000ac4d:	or     eax,0x91516ad4
   14000ac52:	push   rdx
   14000ac53:	jae    0x14000ac3e
   14000ac55:	push   r15
   14000ac57:	adc    eax,0xe2292497
   14000ac5c:	cmp    dh,al
   14000ac5e:	outs   dx,BYTE PTR ds:[rsi]
   14000ac5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ac60:	cmp    DWORD PTR [rbp+0x6f6c5dbd],0x6d
   14000ac67:	movsxd edi,DWORD PTR [rbp+0x63]
   14000ac6a:	add    ebp,DWORD PTR [rbx+0x76b157b7]
   14000ac70:	test   DWORD PTR [rsi],0xc3deeed6
   14000ac76:	mov    dh,0x6
   14000ac79:	cmp    bl,BYTE PTR [rbp+0x52a0b5ae]
   14000ac7f:	xchg   ebx,eax
   14000ac80:	shl    DWORD PTR [rax-0x30c22f7a],0xb7
   14000ac87:	jno    0x14000ac1f
   14000ac89:	adc    BYTE PTR [rdx+rdx*1+0x21b36d68],dl
   14000ac90:	rex.R
   14000ac91:	rex.XB imul edi,DWORD PTR [r11],0xffffffc7
   14000ac95:	ret    0x20a3
   14000ac98:	test   BYTE PTR [rcx-0x3911ebf0],al
   14000ac9e:	in     al,dx
   14000ac9f:	cld    
   14000aca0:	cmp    al,0x4e
   14000aca2:	sahf   
   14000aca3:	ds test ecx,ebp
   14000aca6:	cdq    
   14000aca7:	cdq    
   14000aca8:	(bad)  
   14000aca9:	sbb    al,0xa8
   14000acab:	rex.WXB (bad) 
   14000acad:	xlat   BYTE PTR ds:[rbx]
   14000acae:	push   0xffffffffffffffc6
   14000acb0:	(bad)  
   14000acb1:	lahf   
   14000acb2:	sahf   
   14000acb3:	xchg   bh,ch
   14000acb5:	jns    0x14000ac4f
   14000acb7:	sahf   
   14000acb8:	(bad)  
   14000acb9:	ret    0xc2d2
   14000acbc:	cmp    al,0xa6
   14000acbe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000acbf:	mov    eax,?
   14000acc1:	fwait
   14000acc2:	mov    dl,0x76
   14000acc4:	rcl    DWORD PTR [rsp+rdx*4+0x65],cl
   14000acc8:	sbb    DWORD PTR [rsi],eax
   14000acca:	jno    0x14000ac58
   14000accc:	in     eax,dx
   14000accd:	lods   eax,DWORD PTR ds:[rsi]
   14000acce:	sub    eax,0xc83a76ec
   14000acd3:	test   DWORD PTR [rax],ebp
   14000acd5:	add    bh,BYTE PTR [rbx-0x131fefbf]
   14000acdb:	jmp    0xd9a045b3
   14000ace0:	shl    DWORD PTR [rbp-0x188fc8e5],0xee
   14000ace7:	sbb    al,BYTE PTR [rsi+rbx*4+0x1f]
   14000aceb:	enter  0x8cd6,0x9b
   14000acef:	xchg   edx,eax
   14000acf0:	xor    eax,0x61e2773a
   14000acf5:	icebp  
   14000acf6:	and    esp,DWORD PTR [rbx]
   14000acf8:	cmp    BYTE PTR [rdi],0xf8
   14000acfb:	rcl    BYTE PTR [rdi+0x7f884cc3],cl
   14000ad01:	out    0xce,eax
   14000ad03:	mov    ebp,0xfaf8ffb5
   14000ad08:	int    0x95
   14000ad0a:	iret   
   14000ad0b:	vpsrld xmm15,xmm6,XMMWORD PTR [rax+0x5d3afd79]
   14000ad13:	mov    ecx,0xfa10bd71
   14000ad18:	shl    DWORD PTR [rcx+0x1f17a3a1],1
   14000ad1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ad1f:	mov    ah,0x48
   14000ad21:	popf   
   14000ad22:	xor    BYTE PTR [rbx],bl
   14000ad24:	rex.R retf 0x4484
   14000ad28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ad29:	fild   WORD PTR [rdi-0x49]
   14000ad2c:	fild   WORD PTR [rdi+0x12]
   14000ad2f:	pop    fs
   14000ad31:	outs   dx,BYTE PTR fs:[rsi]
   14000ad33:	(bad)  
   14000ad34:	add    BYTE PTR [rbx+rax*1+0x60],0x20
   14000ad39:	(bad)  
   14000ad3a:	pop    rsi
   14000ad3b:	je     0x14000ad57
   14000ad3d:	ss pushf 
   14000ad3f:	lods   eax,DWORD PTR ds:[rsi]
   14000ad40:	rex.WRB pop r12
   14000ad42:	add    BYTE PTR [rax],al
   14000ad44:	sub    al,0xb3
   14000ad46:	(bad)  
   14000ad47:	mov    esi,0x756a887
   14000ad4c:	addr32 sbb al,0x4a
   14000ad4f:	fld    st(0)
   14000ad51:	(bad)  
   14000ad52:	or     eax,0x886948f2
   14000ad57:	rex ret 
   14000ad59:	cwde   
   14000ad5a:	pop    rbx
   14000ad5b:	rex.WX sub QWORD PTR [rax+0x69],rax
   14000ad5f:	sub    BYTE PTR [rax+0x50],cl
   14000ad62:	rex.X movabs al,ds:0x364b324e4108a041
   14000ad6c:	adc    al,0xb0
   14000ad6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ad6f:	sub    BYTE PTR [rbx-0x3e],al
   14000ad73:	cmp    BYTE PTR [rdx-0x25],bh
   14000ad76:	pop    rbx
   14000ad77:	clc    
   14000ad78:	loopne 0x14000acfd
   14000ad7a:	div    eax
   14000ad7c:	jne    0x14000ad4d
   14000ad7e:	(bad)  
   14000ad7f:	cmc    
   14000ad80:	add    bh,al
   14000ad82:	(bad)  
   14000ad83:	(bad)
   14000ad86:	and    al,0x4e
   14000ad88:	(bad)  
   14000ad89:	popf   
   14000ad8a:	rol    ch,0xb3
   14000ad8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ad8e:	lock clc 
   14000ad90:	stc    
   14000ad91:	gs pop rsp
   14000ad93:	mov    edx,0xf34b0178
   14000ad98:	repz test DWORD PTR [rbp+0x1edb9a30],esp
   14000ad9f:	(bad)  
   14000ada0:	clc    
   14000ada1:	xchg   edi,eax
   14000ada2:	(bad)  
   14000ada3:	or     eax,0xada4d4a5
   14000ada8:	movabs ds:0x2d5a58e613935308,al
   14000adb1:	sbb    edi,eax
   14000adb3:	(bad)
   14000adb7:	bzhi   r13d,r14d,ebx
   14000adbc:	cmp    eax,0x936c4a10
   14000adc1:	rex.WB sbb rax,0xfffffffffb485194
   14000adc7:	pop    rcx
   14000adc8:	ins    BYTE PTR es:[rdi],dx
   14000adc9:	(bad)  
   14000adca:	mov    eax,0xd0198925
   14000adcf:	push   rdx
   14000add0:	mov    eax,0xdc6d230c
   14000add5:	xchg   DWORD PTR [rbp-0x4e183528],esp
   14000addb:	sbb    al,0xf0
   14000addd:	or     eax,DWORD PTR [rdx]
   14000addf:	mov    edi,0x91716a68
   14000ade4:	out    dx,eax
   14000ade5:	sub    BYTE PTR [rdx],dh
   14000ade7:	mov    sp,0xfbef
   14000adeb:	(bad)
   14000adee:	addr32 push 0xffffffffffffffe7
   14000adf1:	push   rdx
   14000adf2:	movabs ds:0xd6f70f6f6f60e9dd,al
   14000adfb:	(bad)  
   14000adfc:	jno    0x14000ade9
   14000adfe:	imul   BYTE PTR [rbp-0x24]
   14000ae01:	pop    rdx
   14000ae02:	mov    ecx,0x2b2bdb85
   14000ae07:	mov    eax,0x9b1372b5
   14000ae0c:	fwait
   14000ae0d:	pop    rbx
   14000ae0e:	fcomp  st(1)
   14000ae10:	ffree  st(5)
   14000ae12:	(bad)  
   14000ae13:	xor    BYTE PTR [rax+0x12],al
   14000ae16:	(bad)  
   14000ae17:	idiv   bh
   14000ae19:	add    BYTE PTR [rax+0x7803f7c0],al
   14000ae1f:	ds rex.RXB enter 0x3022,0x4b
   14000ae25:	shl    BYTE PTR [rsi+0x5b],cl
   14000ae28:	add    esi,eax
   14000ae2a:	jl     0x14000ae94
   14000ae2c:	sub    eax,0xa0a786ad
   14000ae31:	(bad)  
   14000ae32:	xor    ebp,DWORD PTR [rdx-0x5ac38b60]
   14000ae38:	int3   
   14000ae39:	rex or ebx,eax
   14000ae3c:	ret    0x12d2
   14000ae3f:	rex.WRX popf 
   14000ae41:	pop    rcx
   14000ae42:	(bad)  
   14000ae43:	in     al,dx
   14000ae44:	fdivr  QWORD PTR [rsi+0x41084fa9]
   14000ae4a:	push   rsp
   14000ae4b:	stos   DWORD PTR es:[rdi],eax
   14000ae4c:	and    DWORD PTR [rdx+riz*1-0x652f134c],ecx
   14000ae53:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ae54:	(bad)  
   14000ae55:	sti    
   14000ae56:	int3   
   14000ae57:	int    0xce
   14000ae59:	(bad)  
   14000ae5a:	jle    0x14000aeca
   14000ae5c:	(bad)  
   14000ae5d:	in     al,0xee
   14000ae5f:	fwait
   14000ae60:	or     eax,0xcc545144
   14000ae65:	shr    esp,0xf5
   14000ae68:	sti    
   14000ae69:	fcomp  st(5)
   14000ae6b:	ffree  st(5)
   14000ae6d:	pop    rsi
   14000ae6e:	mov    ebx,0xb688d26d
   14000ae73:	ret    
   14000ae74:	adc    eax,0xfcff5a30
   14000ae79:	cdq    
   14000ae7a:	xor    ebp,eax
   14000ae7c:	or     eax,0x95f97806
   14000ae81:	push   rdi
   14000ae82:	xor    al,ch
   14000ae84:	fwait
   14000ae85:	std    
   14000ae86:	sub    DWORD PTR [rbx-0x9],ebp
   14000ae89:	mov    dl,0x6c
   14000ae8b:	xchg   esp,eax
   14000ae8c:	rex.WB (bad) 
   14000ae8e:	mov    ah,0xbe
   14000ae90:	jrcxz  0x14000aef3
   14000ae92:	icebp  
   14000ae93:	mov    cl,0x13
   14000ae95:	shr    bh,0x7d
   14000ae98:	icebp  
   14000ae99:	(bad)  
   14000ae9a:	(bad)  
   14000ae9b:	(bad)  
   14000ae9d:	cli    
   14000ae9e:	(bad)  
   14000ae9f:	jg     0x14000af1b
   14000aea1:	cmc    
   14000aea2:	fiadd  DWORD PTR [rdi-0x677b37a1]
   14000aea8:	mov    esp,0x5b3afd79
   14000aead:	mov    ecx,0xbded1d71
   14000aeb2:	cmp    eax,0x28b7b113
   14000aeb7:	pop    rdi
   14000aeb8:	rex.WR (bad) 
   14000aeba:	and    edi,DWORD PTR [rbp-0x318c24ba]
   14000aec0:	loope  0x14000ae9b
   14000aec2:	rex.WX xor QWORD PTR [rdx+0x19],rax
   14000aec6:	jp     0x14000aec5
   14000aec8:	and    edx,ebx
   14000aeca:	mov    ebp,0x2eddba2e
   14000aecf:	sar    BYTE PTR [rax+0x60],cl
   14000aed2:	jge    0x14000af4d
   14000aed4:	stos   DWORD PTR es:[rdi],eax
   14000aed5:	(bad)  
   14000aed6:	sub    DWORD PTR [rcx],esi
   14000aed8:	repnz outs dx,DWORD PTR ds:[rsi]
   14000aeda:	jg     0x14000ae62
   14000aedc:	adc    BYTE PTR [rdx],cl
   14000aede:	push   rax
   14000aedf:	and    edi,esp
   14000aee1:	(bad)  
   14000aee2:	imul   esi,DWORD PTR [rax+0xd],0xd9805184
   14000aee9:	fstp   DWORD PTR [rcx-0x4c]
   14000aeec:	pop    rdx
   14000aeed:	rex.WRB add BYTE PTR [r14+0x39173baf],r12b
   14000aef4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aef5:	xchg   edx,eax
   14000aef6:	adc    BYTE PTR [rcx-0x5bc66d7c],bh
   14000aefc:	(bad)  
   14000aefd:	rcl    BYTE PTR [rdx+0x16],1
   14000af00:	data16 ja 0x14000af31
   14000af03:	jb     0x14000af2d
   14000af05:	stos   BYTE PTR es:[rdi],al
   14000af06:	ror    BYTE PTR [rax+0x3fe33ffd],0x98
   14000af0d:	clc    
   14000af0e:	(bad)  
   14000af0f:	(bad)  
   14000af10:	je     0x14000af80
   14000af12:	test   BYTE PTR [rcx+0x12],0x62
   14000af16:	xor    cl,BYTE PTR [rsi]
   14000af18:	shl    BYTE PTR [rax],1
   14000af1a:	(bad)  
   14000af1b:	nop
   14000af1c:	add    cl,BYTE PTR [rax-0x35ec3ccf]
   14000af22:	rcr    ebp,1
   14000af24:	fld    st(6)
   14000af26:	lods   eax,DWORD PTR ds:[rsi]
   14000af27:	pop    rbx
   14000af28:	(bad)  
   14000af29:	icebp  
   14000af2a:	repnz idiv DWORD PTR [rax-0x2eb1cadf]
   14000af31:	mov    al,BYTE PTR [rdx]
   14000af33:	pushf  
   14000af34:	pop    rdx
   14000af35:	pop    rdx
   14000af36:	ret    0xe5d9
   14000af39:	push   rbx
   14000af3a:	mov    eax,0xae34f678
   14000af3f:	cmp    al,0x76
   14000af41:	or     DWORD PTR [rdi-0x6faf47a3],ecx
   14000af47:	rex.X (bad) [rdx+0x18]
   14000af4b:	(bad)  
   14000af4c:	out    dx,al
   14000af4d:	(bad)  
   14000af4e:	outs   dx,BYTE PTR ds:[rsi]
   14000af4f:	(bad)  
   14000af50:	ficomp WORD PTR [rdi-0x68a41f57]
   14000af56:	(bad)  
   14000af57:	movabs ds:0x20000083c7dba6d5,al
   14000af60:	add    BYTE PTR [rcx+0x44],cl
   14000af63:	push   r12
   14000af65:	sub    al,0x8e
   14000af67:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000af68:	adc    BYTE PTR [rdx],al
   14000af6a:	cdq    
   14000af6b:	enter  0xdf8c,0x6f
   14000af6f:	(bad)  
   14000af70:	mov    eax,0x319bd33b
   14000af75:	xchg   BYTE PTR [rsi-0x4d],dl
   14000af78:	mov    ecx,ecx
   14000af7a:	mov    DWORD PTR [rcx+0x68],ecx
   14000af7d:	lods   eax,DWORD PTR ds:[rsi]
   14000af7e:	nop
   14000af7f:	or     DWORD PTR [rcx-0x34],esp
   14000af82:	jmp    0x14000af96
   14000af84:	and    DWORD PTR [rbx+riz*8-0x186fffd2],edx
   14000af8b:	jns    0x14000afae
   14000af8d:	call   0x15c402530
   14000af92:	mov    cl,0xb4
   14000af94:	(bad)  
   14000af95:	or     eax,0x8f56ad34
   14000af9a:	ret    0x8b0
   14000af9d:	push   0x3a
   14000af9f:	add    DWORD PTR [rdi-0x26],esi
   14000afa2:	mov    ebp,0x3061ebdb
   14000afa7:	sbb    BYTE PTR [rdx-0x123c2123],ah
   14000afad:	(bad)  
   14000afae:	push   rbp
   14000afaf:	fdivr  QWORD PTR [rdx-0x51c8e48b]
   14000afb5:	ffreep st(0)
   14000afb7:	lods   eax,DWORD PTR ds:[rsi]
   14000afb8:	xchg   ebp,eax
   14000afb9:	pop    rbx
   14000afba:	mov    eax,0x361eef77
   14000afbf:	(bad)  
   14000afc0:	xlat   BYTE PTR ds:[rbx]
   14000afc1:	shr    BYTE PTR [rsi-0x49],1
   14000afc4:	in     eax,dx
   14000afc5:	in     al,dx
   14000afc6:	cmp    eax,0x38284201
   14000afcb:	rep rex ins DWORD PTR es:[rdi],dx
   14000afce:	rex.WRB
   14000afcf:	rex.RX adc al,0x45
   14000afd2:	and    BYTE PTR [rdx+rbx*8-0x39fa91ce],al
   14000afd9:	(bad)  
   14000afda:	cmc    
   14000afdb:	and    dh,BYTE PTR [rbx+0x65]
   14000afde:	cqo    
   14000afe0:	pop    rax
   14000afe1:	ret    0xa004
   14000afe4:	mov    ah,0xb4
   14000afe6:	sti    
   14000afe7:	retf   
   14000afe8:	mov    edi,esp
   14000afea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000afeb:	cmp    esi,DWORD PTR [rsi-0x47]
   14000afee:	enter  0xb8c0,0x87
   14000aff2:	stc    
   14000aff3:	test   DWORD PTR [rip+0x97cb85c],esp        # 0x1497d6855
   14000aff9:	shl    DWORD PTR [rbx],cl
   14000affb:	mov    bl,0x45
   14000affd:	and    eax,0x810c6322
   14000b002:	lea    edi,[rcx]
   14000b004:	rex.R mov bpl,0x1a
   14000b007:	data16 data16 ins BYTE PTR es:[edi],dx
   14000b00b:	jo     0x14000afdc
   14000b00d:	(bad)  
   14000b00e:	mov    esp,ecx
   14000b010:	rex.WRX
   14000b011:	rex.WRXB movsxd r14,DWORD PTR [r9+0x7e]
   14000b015:	fsubp  st(4),st
   14000b017:	mov    edi,0x2b4a420d
   14000b01c:	clc    
   14000b01d:	popf   
   14000b01e:	jbe    0x14000b03b
   14000b020:	fstp   TBYTE PTR [rbx-0x2defba45]
   14000b026:	sbb    eax,0xf00820c3
   14000b02b:	fadd   DWORD PTR [rbp-0x636167f5]
   14000b031:	(bad)  
   14000b032:	fwait
   14000b033:	out    dx,eax
   14000b034:	mov    ebp,0xdb5b587
   14000b039:	sub    BYTE PTR [rbx+0x1e8ca4be],bl
   14000b03f:	stos   BYTE PTR es:[rdi],al
   14000b040:	fstp   st(5)
   14000b042:	jb     0x14000b0bb
   14000b044:	lahf   
   14000b045:	retf   
   14000b046:	pop    QWORD PTR [rdx-0x1ff7a71]
   14000b04c:	jmp    0xe7ea2d70
   14000b051:	push   rsi
   14000b052:	outs   dx,BYTE PTR ds:[rsi]
   14000b053:	scas   eax,DWORD PTR es:[rdi]
   14000b054:	inc    BYTE PTR [rdi+0x42]
   14000b057:	mov    BYTE PTR [rdi-0x15],bh
   14000b05a:	(bad)  
   14000b05b:	(bad)  
   14000b05c:	xlat   BYTE PTR ds:[rbx]
   14000b05d:	out    0x56,al
   14000b05f:	push   rsi
   14000b060:	push   rsi
   14000b061:	fsubr  st,st(5)
   14000b063:	xchg   ebp,eax
   14000b064:	fcomp  st(3)
   14000b067:	fldcw  WORD PTR [rcx]
   14000b069:	add    dh,BYTE PTR [rdx+rbx*8+0x5e]
   14000b06d:	js     0x14000b07d
   14000b06f:	(bad)  
   14000b070:	test   dh,bl
   14000b072:	cdq    
   14000b073:	in     al,dx
   14000b074:	(bad)  
   14000b075:	in     al,0xad
   14000b077:	(bad)  
   14000b078:	jmp    0x14000b022
   14000b07a:	(bad)  
   14000b07b:	jmp    0x14000b0c5
   14000b07d:	rcr    BYTE PTR [rbp*8+0x3b9b1776],cl
   14000b084:	fwait
   14000b085:	call   0xdd718c40
   14000b08a:	pop    rdi
   14000b08b:	push   rsi
   14000b08c:	and    al,0xe0
   14000b08e:	xchg   esp,eax
   14000b08f:	mov    esp,0x311c0e2e
   14000b094:	or     ebp,DWORD PTR [rax+0x292df535]
   14000b09a:	push   rax
   14000b09b:	(bad)  
   14000b09c:	jno    0x14000b098
   14000b09e:	hlt    
   14000b09f:	xor    dl,BYTE PTR [rsi+0x10419f4f]
   14000b0a5:	(bad)  
   14000b0a6:	test   DWORD PTR es:[rax+0x42f82349],ebx
   14000b0ad:	rex.X mov eax,0x21526371
   14000b0b3:	(bad)  
   14000b0b4:	or     al,bl
   14000b0b6:	pop    rsi
   14000b0b7:	mov    ecx,es
   14000b0b9:	and    BYTE PTR [rsi],al
   14000b0bb:	pop    rax
   14000b0bc:	or     bh,BYTE PTR [rdi]
   14000b0be:	movabs al,fs:0x52b439521a69a84
   14000b0c8:	add    eax,0x2b42c86d
   14000b0cd:	rex sub DWORD PTR [rax-0x45],ebp
   14000b0d1:	or     eax,0xad106b5a
   14000b0d6:	movabs al,ds:0x2000481091b66972
   14000b0df:	or     al,0x9a
   14000b0e1:	pop    rax
   14000b0e2:	rcl    DWORD PTR [rdx+rsi*1+0x28204a48],cl
   14000b0e9:	rex.XB int3 
   14000b0eb:	cmp    DWORD PTR [rsi],esi
   14000b0ed:	mov    bh,0xb7
   14000b0ef:	icebp  
   14000b0f0:	(bad)  
   14000b0f1:	(bad)  
   14000b0f2:	test   DWORD PTR [rax],0x28c043cf
   14000b0f8:	jl     0x14000b140
   14000b0fa:	mov    cl,0xb8
   14000b0fc:	xor    BYTE PTR [rdi+0x384b0bd3],cl
   14000b102:	mov    bh,0xbc
   14000b104:	mov    WORD PTR [rdi+0x3d],cs
   14000b107:	jle    0x14000b122
   14000b109:	rex.WRXB cmp al,0xf6
   14000b10c:	sbb    BYTE PTR [rdx-0x53],bl
   14000b10f:	and    WORD PTR [rax+0x65],di
   14000b113:	adc    BYTE PTR [rdx-0xa],al
   14000b116:	cmp    esi,ebp
   14000b118:	rex.WX
   14000b119:	fs loopne 0x14000b16c
   14000b11c:	out    dx,al
   14000b11d:	jbe    0x14000b14a
   14000b11f:	mov    dl,0x23
   14000b121:	ss rex jmp 0xf9ad6460
   14000b128:	pop    rbp
   14000b129:	jg     0x14000b130
   14000b12b:	and    DWORD PTR [rdx+rcx*2],edx
   14000b12e:	movsxd rsp,DWORD PTR [rip+0x4274dad8]        # 0x182758c0d
   14000b135:	or     dh,ah
   14000b137:	data16 data16 xor BYTE PTR [rcx],bh
   14000b13b:	xor    DWORD PTR [rcx+0x8],edx
   14000b13e:	jp     0x14000b0fd
   14000b140:	push   rsi
   14000b141:	sub    ecx,DWORD PTR [rdx+0x78]
   14000b144:	retf   
   14000b145:	and    al,0x21
   14000b147:	ins    DWORD PTR es:[rdi],dx
   14000b148:	rex.B retf 
   14000b14a:	lods   eax,DWORD PTR ds:[rsi]
   14000b14b:	(bad)  
   14000b14c:	cmp    ebx,DWORD PTR [rax]
   14000b14e:	or     al,0xfa
   14000b150:	pop    rax
   14000b151:	pop    rbx
   14000b152:	pop    rbx
   14000b153:	(bad)  
   14000b154:	fnstsw WORD PTR [rbx]
   14000b156:	ja     0x14000b1c8
   14000b158:	repz out 0xa,al
   14000b15b:	outs   dx,BYTE PTR ds:[rsi]
   14000b15c:	pop    rsp
   14000b15d:	mov    edi,0xababdb81
   14000b162:	fcomp  st(4)
   14000b164:	fadd   DWORD PTR [rax-0x51]
   14000b167:	xlat   BYTE PTR ds:[rbx]
   14000b168:	(bad)
   14000b16b:	nop
   14000b16c:	sub    DWORD PTR gs:[rax],ebp
   14000b16f:	sub    BYTE PTR [rax],bl
   14000b171:	out    0xd0,eax
   14000b173:	ficomp DWORD PTR [rbx+rcx*8]
   14000b176:	xor    BYTE PTR [rcx+riz*4],cl
   14000b179:	xchg   esp,eax
   14000b17a:	pop    rdi
   14000b17b:	adc    BYTE PTR [rsi+0x2b5cd252],dl
   14000b181:	retf   0xf214
   14000b184:	cwde   
   14000b185:	(bad)  
   14000b186:	and    eax,0xd1ce1306
   14000b18b:	(bad)
   14000b18f:	adc    BYTE PTR [rbp+0x104b5a1],ch
   14000b195:	add    esp,DWORD PTR [rbp+0x1c]
   14000b198:	rex.WX sub bpl,BYTE PTR [rax+0x62]
   14000b19c:	stos   BYTE PTR es:[rdi],al
   14000b19d:	repnz mov eax,0xdcfa71c7
   14000b1a3:	cmp    DWORD PTR [rax+rdi*2-0x14],ebx
   14000b1a7:	adc    ah,BYTE PTR [rsi]
   14000b1a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b1aa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b1ab:	or     cl,BYTE PTR [rbx-0x79]
   14000b1ae:	jnp    0x14000b1ce
   14000b1b0:	push   0xfffffffffffffff5
   14000b1b2:	mov    edx,0x5b1de29
   14000b1b7:	rex.X mov esi,ebx
   14000b1ba:	repz cwde 
   14000b1bc:	popf   
   14000b1bd:	cdq    
   14000b1be:	cs (bad) 
   14000b1c0:	mov    cl,0xf3
   14000b1c2:	mov    bl,0xb3
   14000b1c4:	cwde   
   14000b1c5:	sahf   
   14000b1c6:	(bad)  
   14000b1c7:	sub    al,0x32
   14000b1c9:	xor    eax,0x776810b9
   14000b1ce:	mov    ebx,0x8d5f0407
   14000b1d3:	adc    al,0x77
   14000b1d5:	cmp    DWORD PTR [rbp-0xf0a1121],ebp
   14000b1db:	int    0x97
   14000b1dd:	pop    rdi
   14000b1de:	xlat   BYTE PTR ss:[rbx]
   14000b1e0:	(bad)  
   14000b1e1:	push   rax
   14000b1e2:	ins    BYTE PTR es:[rdi],dx
   14000b1e3:	scas   eax,DWORD PTR es:[rdi]
   14000b1e4:	xchg   edx,eax
   14000b1e5:	or     dl,BYTE PTR [rbp+rdx*4+0x47e4b58a]
   14000b1ec:	xor    esi,ebp
   14000b1ee:	movnti DWORD PTR [rdi],ecx
   14000b1f1:	lea    eax,[rax]
   14000b1f3:	(bad)  
   14000b1f4:	loopne 0x14000b241
   14000b1f6:	pop    rdi
   14000b1f7:	jle    0x14000b1da
   14000b1f9:	out    dx,al
   14000b1fa:	(bad)  
   14000b1fc:	(bad)  
   14000b1fd:	pavgw  mm7,mm0
   14000b200:	out    0xaf,eax
   14000b202:	pop    rbp
   14000b203:	mov    edi,0xcee77cb1
   14000b208:	sbb    eax,0x87faf376
   14000b20d:	fcomp  st(1)
   14000b20f:	fiadd  DWORD PTR [rdx-0x70a75df0]
   14000b215:	adc    BYTE PTR [rdx],al
   14000b217:	and    eax,0xa58ad1a5
   14000b21c:	gs or  eax,DWORD PTR gs:[rax-0x5499718d]
   14000b224:	test   DWORD PTR [rcx-0x19cfd637],ecx
   14000b22a:	movabs eax,ds:0xafac55cdc6e2edd3
   14000b233:	fld    QWORD PTR [rbp-0x4d824c38]
   14000b239:	sbb    BYTE PTR [rbp-0x4a],bh
   14000b23c:	push   rbp
   14000b23d:	imul   ebx,DWORD PTR [rdx],0x30
   14000b240:	ds mov edx,0x2a41ea0d
   14000b246:	rex.WXB (bad) 
   14000b248:	add    al,0x27
   14000b24a:	rex.WRXB sub rax,0x7a9f53e3
   14000b250:	add    dh,bl
   14000b252:	or     ecx,DWORD PTR [rbx]
   14000b254:	enter  0x8e65,0x34
   14000b258:	retf   
   14000b259:	movabs al,ds:0xca9097321ad484a5
   14000b262:	(bad)  
   14000b263:	iret   
   14000b264:	push   rdx
   14000b265:	movsxd edx,eax
   14000b267:	rex.WRX mov al,0xb7
   14000b26a:	rol    DWORD PTR [rbx+0x56a20954],cl
   14000b270:	or     edx,DWORD PTR [rbx]
   14000b272:	jle    0x14000b278
   14000b274:	movabs ds:0xa6d682b4a1cc9419,al
   14000b27d:	mov    WORD PTR [rdi],?
   14000b27f:	push   rdi
   14000b280:	cmp    DWORD PTR [rsi+rbx*4+0x43],esp
   14000b284:	pop    rdx
   14000b285:	rex.X enter 0x80a5,0x52
   14000b28a:	mov    ecx,0x2013e8ad
   14000b28f:	rex.WX
   14000b290:	rex.X sub edx,DWORD PTR [rbx-0x61]
   14000b294:	(bad)  
   14000b295:	(bad)  
   14000b296:	or     ebp,esi
   14000b298:	xor    eax,0xa4308681
   14000b29d:	add    eax,0xa06ac6a
   14000b2a2:	adc    BYTE PTR [rdx+0x10],0xc6
   14000b2a6:	nop
   14000b2a7:	push   rcx
   14000b2a8:	add    al,dl
   14000b2aa:	cmp    eax,0x787af6ec
   14000b2af:	jg     0x14000b296
   14000b2b1:	(bad)  
   14000b2b2:	enter  0xaf6b,0xc2
   14000b2b6:	add    esp,eax
   14000b2b8:	imul   eax,DWORD PTR [rdx+0x670b5699],0x4e
   14000b2bf:	pushf  
   14000b2c0:	(bad)  
   14000b2c1:	test   DWORD PTR [rbx],ecx
   14000b2c3:	out    0xf0,eax
   14000b2c5:	fdivr  st,st(1)
   14000b2c7:	repz js 0x14000b2ac
   14000b2ca:	icebp  
   14000b2cb:	retf   
   14000b2cc:	cmp    BYTE PTR [rcx-0x3aa08f48],dh
   14000b2d2:	pop    rsp
   14000b2d3:	fldcw  WORD PTR [rdi-0x191baff9]
   14000b2d9:	retf   
   14000b2da:	data16 cmp al,0xb0
   14000b2dd:	lahf   
   14000b2de:	sbb    BYTE PTR [rcx+0x1],dh
   14000b2e1:	push   rcx
   14000b2e2:	imul   esp,DWORD PTR [rdi+0x83626de],0x3c176458
   14000b2ec:	(bad)  
   14000b2ee:	jmp    0x1873d7b5c
   14000b2f3:	adc    al,0x86
   14000b2f5:	cwde   
   14000b2f6:	lahf   
   14000b2f7:	fwait
   14000b2f8:	test   DWORD PTR [rax],edx
   14000b2fa:	cmp    DWORD PTR [rsi-0x442a738f],eax
   14000b300:	ja     0x14000b2a3
   14000b302:	mov    ah,0xc6
   14000b304:	(bad)  
   14000b305:	(bad)  
   14000b306:	sub    al,BYTE PTR [rax+rcx*8+0x1dcee771]
   14000b30d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b30e:	imul   ecx,DWORD PTR [rdx],0x966428c6
   14000b314:	(bad)  
   14000b315:	jno    0x14000b326
   14000b317:	imul   ebp,ebx,0xffffffeb
   14000b31a:	pop    rax
   14000b31b:	pop    rcx
   14000b31c:	pop    rcx
   14000b31d:	sar    DWORD PTR [rbp-0x21279445],0xdc
   14000b324:	(bad)  
   14000b325:	(bad)  
   14000b326:	shl    BYTE PTR [rdi],1
   14000b328:	rex.R
   14000b329:	rex.WRX add BYTE PTR [rdx],r8b
   14000b32c:	or     al,BYTE PTR [rsi+0x39]
   14000b32f:	or     BYTE PTR [rip+0x3e10c208],ah        # 0x17e11753d
   14000b335:	repz rex cmp DWORD PTR [rbx],eax
   14000b339:	add    DWORD PTR [rbp-0x1224046c],eax
   14000b33f:	add    al,0x83
   14000b341:	jno    0x14000b351
   14000b343:	rex.WX sub BYTE PTR [rax-0x33],al
   14000b347:	mov    ecx,0x75b9be35
   14000b34c:	push   rcx
   14000b34d:	lods   al,BYTE PTR ds:[rsi]
   14000b34e:	mov    ch,0x57
   14000b350:	pop    rsp
   14000b351:	pop    rbx
   14000b352:	xchg   esp,eax
   14000b353:	rcl    DWORD PTR [rbp+0x7036b930],0xa5
   14000b35a:	add    al,0x38
   14000b35c:	div    DWORD PTR [rcx-0x2]
   14000b35f:	shl    BYTE PTR [rip+0x1e70bb9c],cl        # 0x15e716f01
   14000b365:	shl    DWORD PTR [rbx],cl
   14000b367:	xor    eax,ebp
   14000b369:	sbb    BYTE PTR [rbx-0x31],0x33
   14000b36d:	icebp  
   14000b36e:	movabs al,ds:0x989c9d0ca8a8a28
   14000b377:	int3   
   14000b378:	int    0xce
   14000b37a:	(bad)  
   14000b37b:	movabs ds:0x4f4c430bb1b732d5,al
   14000b384:	rex.WRX (bad) 
   14000b386:	data16 jp 0x14000b393
   14000b389:	pushf  
   14000b38a:	jae    0x14000b370
   14000b38c:	rex.X (bad) 
   14000b38e:	mov    bh,0xdd
   14000b390:	mov    esi,0x1401f04f
   14000b395:	scas   eax,DWORD PTR es:[rdi]
   14000b396:	movabs ds:0x56c980b85d8f0d5a,eax
   14000b39f:	or     ebp,DWORD PTR [rdi+0x3636fdbf]
   14000b3a5:	ss mov dh,0xa1
   14000b3a8:	(bad)  
   14000b3a9:	mov    esi,0x2d194c25
   14000b3ae:	test   ch,bh
   14000b3b0:	xor    BYTE PTR [rcx+0x51ffaf2f],ah
   14000b3b6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b3b7:	addr32 jg 0x14000b3de
   14000b3ba:	add    bh,al
   14000b3bc:	repnz xlat BYTE PTR ds:[rbx]
   14000b3be:	mov    esi,0x637d617e
   14000b3c3:	repz xchg edi,eax
   14000b3c5:	fcmovnu st,st(5)
   14000b3c7:	out    dx,al
   14000b3c8:	pop    rdi
   14000b3c9:	cld    
   14000b3ca:	loopne 0x14000b3c6
   14000b3cc:	lea    ecx,[rbx+0x7cebeb6b]
   14000b3d2:	jne    0x14000b439
   14000b3d4:	add    eax,0x455bdb3b
   14000b3d9:	scas   al,BYTE PTR es:[rdi]
   14000b3da:	pop    rsi
   14000b3db:	imul   ebx,DWORD PTR [rbp+0x4],0x73
   14000b3df:	pop    rsp
   14000b3e0:	and    DWORD PTR [rbp-0x27],ecx
   14000b3e3:	je     0x14000b3ea
   14000b3e5:	div    BYTE PTR [rbp-0x3d2a4c81]
   14000b3eb:	loop   0x14000b3bf
   14000b3ed:	or     DWORD PTR [rdi+riz*1],esi
   14000b3f0:	es shr bh,1
   14000b3f3:	(bad)  
   14000b3f4:	jo     0x14000b3d9
   14000b3f6:	cli    
   14000b3f7:	jne    0x14000b3a5
   14000b3f9:	lods   al,BYTE PTR ds:[rsi]
   14000b3fa:	fadd   QWORD PTR [rax+0x7f]
   14000b3fd:	rol    BYTE PTR [rip+0xffffffffdd89f250],1        # 0x11d8aa653
   14000b403:	adc    al,0x21
   14000b405:	sti    
   14000b406:	std    
   14000b407:	jno    0x14000b487
   14000b409:	nop
   14000b40a:	or     DWORD PTR [rax],eax
   14000b40c:	add    dl,BYTE PTR [rax-0x3a]
   14000b40f:	xor    bl,BYTE PTR [rax+0x67c69e9a]
   14000b415:	(bad)  
   14000b416:	sti    
   14000b417:	movsxd edi,DWORD PTR [rax-0x4]
   14000b41a:	icebp  
   14000b41b:	retf   
   14000b41c:	loopne 0x14000b3dc
   14000b41e:	xchg   DWORD PTR [rcx*8-0xed65a40],esi
   14000b425:	(bad)  
   14000b426:	fadd   DWORD PTR ss:[rdi+0x18]
   14000b42a:	add    DWORD PTR [rcx+0x1c],esp
   14000b42d:	ret    
   14000b42e:	sahf   
   14000b42f:	sar    dl,0x9d
   14000b432:	div    BYTE PTR ss:[rsi+0x10e5887a]
   14000b439:	xchg   ebx,eax
   14000b43a:	mov    bl,0xb
   14000b43c:	mov    dl,al
   14000b43e:	or     DWORD PTR [rax],edx
   14000b440:	retf   0xb66d
   14000b443:	add    BYTE PTR [rbp+0x2c],al
   14000b446:	push   rax
   14000b447:	add    QWORD PTR [rip+0xffffffff990a3e63],rcx        # 0xd90af2b1
   14000b44e:	imul   ecx,DWORD PTR [r9],0x2e640521
   14000b455:	and    dl,dh
   14000b457:	or     al,0x79
   14000b459:	sahf   
   14000b45a:	mov    BYTE PTR [rdx+r10*2],cl
   14000b45e:	ror    BYTE PTR fs:[rdx+0x42],1
   14000b462:	sub    ebx,esp
   14000b464:	pop    rdx
   14000b465:	sub    BYTE PTR [rip+0xffffffffc4d26e6d],ah        # 0x104d322d8
   14000b46b:	and    al,0xa0
   14000b46d:	adc    al,0xb4
   14000b46f:	xchg   edx,eax
   14000b470:	ror    dl,1
   14000b472:	add    al,0x2b
   14000b474:	xor    eax,0xa71d5621
   14000b479:	(bad)  
   14000b47a:	pop    rdx
   14000b47b:	(bad)  
   14000b47c:	or     al,0x84
   14000b47e:	push   rcx
   14000b47f:	or     BYTE PTR [rdx+0x11],al
   14000b482:	adc    eax,DWORD PTR [rdx-0x64785092]
   14000b488:	imul   ebp,ebx,0x78
   14000b48b:	jmp    0x191e16c1d
   14000b490:	add    bl,BYTE PTR [rdi+0x1bd64c10]
   14000b496:	cmp    BYTE PTR [rbp+0x4f2b80b4],dh
   14000b49c:	cmp    al,0x8e
   14000b49e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b49f:	(bad)  
   14000b4a0:	repz adc al,0x2e
   14000b4a3:	sahf   
   14000b4a4:	cmp    esp,DWORD PTR [rdi+0x6]
   14000b4a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b4a8:	js     0x14000b4c8
   14000b4aa:	mov    ah,0xd
   14000b4ac:	mov    esp,0xa443860d
   14000b4b1:	pop    rcx
   14000b4b2:	xchg   al,al
   14000b4b4:	test   DWORD PTR [rbp+0x4d168c10],0xe6e4f3d9
   14000b4be:	xor    BYTE PTR [rax],bh
   14000b4c0:	jmp    0x14000b4e2
   14000b4c2:	xor    r10,QWORD PTR [r11+0x43dbdab2]
   14000b4c9:	mov    ebx,0x6f7bc1d3
   14000b4ce:	mov    edi,0x8dbb4e85
   14000b4d3:	rex.RX mov bl,0x9
   14000b4d6:	jmp    0x169a79601
   14000b4db:	cmp    ch,ch
   14000b4dd:	(bad)  
   14000b4de:	xchg   BYTE PTR [rbx+0x6878e221],al
   14000b4e4:	scas   al,BYTE PTR es:[rdi]
   14000b4e5:	add    DWORD PTR [rdx+0x50],eax
   14000b4e8:	imul   esi,DWORD PTR [rax+rdx*8],0x68
   14000b4ec:	ss xor cl,dl
   14000b4ef:	(bad)  
   14000b4f0:	rex stos DWORD PTR es:[rdi],eax
   14000b4f2:	(bad)  
   14000b4f3:	(bad)  
   14000b4f4:	int3   
   14000b4f5:	int3   
   14000b4f6:	or     al,0xe6
   14000b4f8:	out    0xe7,al
   14000b4fa:	movabs al,ds:0x72bac74438788572
   14000b503:	cmp    esi,0x0
   14000b506:	mov    ebp,0xc899176e
   14000b50b:	nop
   14000b50c:	addr32 cmp edx,esp
   14000b50f:	sub    al,0x85
   14000b511:	rex.WRX xchg rsp,rax
   14000b513:	ins    DWORD PTR es:[rdi],dx
   14000b514:	mov    esp,0x6132d6e1
   14000b519:	jbe    0x14000b511
   14000b51b:	and    al,0x83
   14000b51d:	push   rsp
   14000b51e:	adc    bl,BYTE PTR [rdx+0x29]
   14000b521:	sbb    ebp,DWORD PTR [rdi-0x5f]
   14000b524:	(bad)  
   14000b525:	and    dh,dl
   14000b527:	sub    bl,ah
   14000b529:	lahf   
   14000b52a:	rex.WX or rax,0xffffffffdea84042
   14000b530:	mov    bh,0x46
   14000b532:	rex.R (bad) 
   14000b534:	sub    DWORD PTR [rip+0xfffffffff9c03082],edx        # 0x139c0e5bc
   14000b53a:	rex.WXB xchg r15,rax
   14000b53c:	jno    0x14000b524
   14000b53e:	fdivr  QWORD PTR [rcx+0x2c]
   14000b541:	sub    al,0x2d
   14000b543:	adc    eax,0x863180c7
   14000b548:	enter  0xa90e,0x21
   14000b54c:	test   BYTE PTR ds:0x261393ba,dl
   14000b553:	outs   dx,DWORD PTR ds:[rsi]
   14000b554:	pop    rdi
   14000b555:	scas   eax,DWORD PTR es:[rdi]
   14000b556:	xlat   BYTE PTR ds:[rbx]
   14000b557:	loope  0x14000b534
   14000b559:	hlt    
   14000b55a:	loopne 0x14000b548
   14000b55c:	int3   
   14000b55d:	xor    al,0x6a
   14000b55f:	push   rcx
   14000b560:	test   BYTE PTR [rax+rcx*1+0x74],bl
   14000b564:	mov    edx,0xeeeeec5d
   14000b569:	(bad)  
   14000b56a:	stos   BYTE PTR es:[rdi],al
   14000b56b:	icebp  
   14000b56c:	add    DWORD PTR [rax-0x7],esp
   14000b56f:	in     al,0x49
   14000b571:	pushf  
   14000b572:	pop    rcx
   14000b573:	pop    rsi
   14000b574:	(bad)  
   14000b575:	rex.WRX movabs rbx,0xc3b62465fb7daf8d
   14000b57f:	scas   eax,DWORD PTR es:[rdi]
   14000b580:	mov    WORD PTR [rax+rcx*1+0x50],ds
   14000b584:	retf   0x80e
   14000b587:	stc    
   14000b588:	(bad)  
   14000b589:	sub    BYTE PTR [rdi+0xf151f05],ah
   14000b58f:	pop    rbp
   14000b590:	rex.W cld 
   14000b592:	(bad)  
   14000b593:	outs   dx,DWORD PTR ds:[rsi]
   14000b594:	jge    0x14000b611
   14000b596:	imul   esi,DWORD PTR [rdi+0x6f],0xdedc3fef
   14000b59d:	fscale 
   14000b59f:	(bad)
   14000b5a2:	(bad)  
   14000b5a3:	outs   dx,DWORD PTR ds:[rsi]
   14000b5a4:	ja     0x14000b5e0
   14000b5a6:	(bad)  
   14000b5a7:	in     eax,dx
   14000b5a8:	xchg   ebp,eax
   14000b5a9:	adc    eax,0x226d6f6c
   14000b5ae:	rex.WRB xchg r10,rax
   14000b5b0:	add    esp,DWORD PTR [rbp-0x2408ba56]
   14000b5b6:	adc    rax,QWORD PTR [rdi+0x59]
   14000b5ba:	repz rex.R mov bpl,0x1a
   14000b5be:	(bad)  
   14000b5bf:	xchg   edi,eax
   14000b5c0:	rex.WRX (bad) 
   14000b5c2:	jle    0x14000b62d
   14000b5c4:	or     DWORD PTR [rdx],esi
   14000b5c6:	push   rdi
   14000b5c7:	clc    
   14000b5c8:	lock (bad) 
   14000b5ca:	xlat   BYTE PTR ds:[rbx]
   14000b5cb:	lock (bad) 
   14000b5cd:	cmp    ebp,DWORD PTR [rdi+0x62]
   14000b5d0:	addr32 jnp 0x14000b586
   14000b5d3:	mov    al,0x12
   14000b5d5:	rex.W leave 
   14000b5d7:	div    DWORD PTR [rbp+0x27]
   14000b5da:	mov    ch,0x78
   14000b5dc:	std    
   14000b5dd:	add    BYTE PTR [rcx+riz*2],al
   14000b5e0:	mov    BYTE PTR [rdi+0x7f],cl
   14000b5e3:	cli    
   14000b5e4:	sar    DWORD PTR [rax-0x6],cl
   14000b5e7:	jmp    0x17939e793
   14000b5ec:	mov    DWORD PTR [rax+rbx*4+0x26],edx
   14000b5f0:	or     al,0x93
   14000b5f2:	fidiv  DWORD PTR [rcx-0x5a]
   14000b5f5:	and    al,BYTE PTR [rip+0xd283df3]        # 0x14d28f3ee
   14000b5fb:	ins    BYTE PTR es:[rdi],dx
   14000b5fc:	fucomp st(5)
   14000b5fe:	jrcxz  0x14000b5da
   14000b600:	orps   xmm6,XMMWORD PTR [rax+0x1781ddd7]
   14000b607:	jns    0x14000b591
   14000b609:	(bad)  
   14000b60a:	or     DWORD PTR [rdx+rbp*2],esi
   14000b60d:	shl    DWORD PTR [rax+0x18f307cc],cl
   14000b613:	add    BYTE PTR [rdx],cl
   14000b615:	iret   
   14000b616:	or     eax,eax
   14000b618:	jl     0x14000b629
   14000b61a:	add    BYTE PTR [rcx+0x2e],al
   14000b61d:	jae    0x14000b647
   14000b61f:	push   0x24a07f53
   14000b624:	and    al,0x14
   14000b626:	test   BYTE PTR [rdx],dl
   14000b628:	enter  0xcd3,0x49
   14000b62c:	ss rex.R
   14000b62e:	movsxd edx,DWORD PTR es:[rbx+0x52029663]
   14000b635:	in     al,0xc8
   14000b637:	or     dl,BYTE PTR gs:[rbp-0x19a10cb5]
   14000b63e:	rex
   14000b63f:	cs rex.WR loopne 0x14000b695
   14000b643:	rex.WB push 0xffffffffed192ae9
   14000b649:	icebp  
   14000b64a:	sub    cl,BYTE PTR [rsp+rsi*2-0x1b]
   14000b64e:	movabs ds:0x46e7512598cf61b,al
   14000b657:	(bad)  
   14000b658:	(bad)  
   14000b659:	shl    BYTE PTR [rcx],cl
   14000b65b:	sbb    al,0xc4
   14000b65d:	rex.WRX movabs rax,ds:0x8d3d37304e7c0065
   14000b667:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b668:	sahf   
   14000b669:	jl     0x14000b67d
   14000b66b:	lahf   
   14000b66c:	mov    esi,0x2cce18f2
   14000b671:	lahf   
   14000b672:	rex.X scas eax,DWORD PTR es:[rdi]
   14000b674:	xlat   BYTE PTR ds:[rbx]
   14000b675:	rex.RXB jg 0x14000b6a8
   14000b678:	sub    bh,0x79
   14000b67b:	enter  0x346d,0x3b
   14000b67f:	retf   
   14000b680:	xor    dh,BYTE PTR [rdx+rdi*2+0x3d]
   14000b684:	and    al,0x49
   14000b686:	(bad)  
   14000b687:	jle    0x14000b708
   14000b689:	mov    BYTE PTR [rbp-0x4c4f8845],dh
   14000b68f:	mov    ebp,0x8ba74e85
   14000b694:	outs   dx,BYTE PTR ds:[rsi]
   14000b695:	xlat   BYTE PTR ds:[rbx]
   14000b696:	rex.R stos DWORD PTR es:[rdi],eax
   14000b698:	lea    esi,[rip+0xffffffffac654801]        # 0xec65fe9f
   14000b69e:	and    eax,0x3dc027d7
   14000b6a3:	fistp  DWORD PTR [rax*2-0x66ff5e00]
   14000b6aa:	or     ebp,DWORD PTR [rax]
   14000b6ac:	test   eax,0x8d863d6c
   14000b6b1:	test   eax,0x5a104348
   14000b6b6:	imul   edx,DWORD PTR [rbx],0x7b7eb1cf
   14000b6bc:	movabs ds:0xa11ead44d1a340d1,eax
   14000b6c5:	pop    rsi
   14000b6c6:	scas   eax,DWORD PTR es:[rdi]
   14000b6c7:	fwait
   14000b6c8:	rex (bad) 
   14000b6ca:	adc    BYTE PTR [rdx],ah
   14000b6cc:	or     al,0x23
   14000b6ce:	push   rax
   14000b6cf:	xor    DWORD PTR [rsi+r8*8],r11d
   14000b6d3:	fcomp  st(6)
   14000b6d5:	fld    st(6)
   14000b6d7:	(bad)  
   14000b6d8:	(bad)  
   14000b6d9:	ss ss (bad) 
   14000b6dc:	ss nop
   14000b6de:	and    al,0x71
   14000b6e0:	loope  0x14000b6a4
   14000b6e2:	xor    dl,cl
   14000b6e4:	int3   
   14000b6e5:	movabs al,ds:0xd4c99810fc266a0e
   14000b6ee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b6ef:	loopne 0x14000b6bc
   14000b6f1:	nop
   14000b6f2:	mov    ah,0x4b
   14000b6f4:	fld    TBYTE PTR [rdx+0x68]
   14000b6f7:	jae    0x14000b6a5
   14000b6f9:	add    esp,edx
   14000b6fb:	(bad)  
   14000b6fc:	jne    0x14000b69a
   14000b6fe:	cmp    DWORD PTR [rdi+0x16],edi
   14000b701:	out    0x2e,eax
   14000b703:	pop    rsp
   14000b704:	(bad)  
   14000b705:	(bad)  
   14000b706:	in     al,0xa4
   14000b708:	push   rcx
   14000b709:	xchg   rsi,rax
   14000b70b:	sbb    al,0xeb
   14000b70d:	mov    dh,0x4b
   14000b70f:	xor    al,0xc
   14000b711:	(bad)  
   14000b712:	movabs ds:0x5c770a2cd5a27bd4,al
   14000b71b:	(bad)  
   14000b71c:	mov    ch,0xd5
   14000b71e:	push   0xffffffffffffffa2
   14000b720:	pop    rsi
   14000b721:	scas   eax,DWORD PTR es:[rdi]
   14000b722:	sub    DWORD PTR [rax-0x73],0xffffffde
   14000b726:	(bad)  
   14000b727:	jo     0x14000b6cd
   14000b729:	loopne 0x14000b756
   14000b72b:	sub    ecx,edx
   14000b72d:	push   0xffffffffffffffb5
   14000b72f:	jo     0x14000b71f
   14000b731:	int3   
   14000b732:	sbb    DWORD PTR [rbx+rbp*8],esi
   14000b735:	jne    0x14000b6f3
   14000b737:	not    dh
   14000b739:	pop    rbx
   14000b73a:	fcomp  st(6)
   14000b73c:	fidivr DWORD PTR [rcx+0x1872962f]
   14000b742:	pop    rsp
   14000b743:	gs jrcxz 0x14000b6fe
   14000b746:	js     0x14000b708
   14000b748:	out    0x7f,eax
   14000b74a:	loop   0x14000b791
   14000b74c:	cld    
   14000b74d:	iret   
   14000b74e:	mov    edi,0xf7f1b7f2
   14000b753:	push   rsi
   14000b755:	scas   eax,DWORD PTR es:[rdi]
   14000b756:	cmp    al,0x72
   14000b758:	rex.XB shl BYTE PTR [r9+0x7caf802c],0xfd
   14000b760:	sbb    ecx,DWORD PTR [rbp-0x40621253]
   14000b766:	ss mov ebx,fs
   14000b769:	pop    rdi
   14000b76a:	jp     0x14000b767
   14000b76c:	mov    ebp,0xc7133ff7
   14000b771:	jno    0x14000b727
   14000b773:	mov    ecx,0xb77645b5
   14000b778:	mov    bh,0x11
   14000b77a:	ja     0x148213780
   14000b780:	or     ecx,DWORD PTR [rbp+0x2f]
   14000b783:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b784:	test   al,cl
   14000b786:	mov    dl,0x3
   14000b788:	(bad)  
   14000b789:	and    eax,0x8673efb0
   14000b78e:	(bad)  
   14000b78f:	mov    BYTE PTR [rcx-0x3333ba7b],bh
   14000b795:	(bad)  
   14000b796:	rex.X sub ecx,DWORD PTR [rbp-0x754a42b]
   14000b79d:	movabs ds:0x3421f2b5b807fa7f,eax
   14000b7a6:	in     al,dx
   14000b7a7:	or     DWORD PTR [rbp+0xc],esp
   14000b7aa:	push   rax
   14000b7ab:	stos   BYTE PTR es:[rdi],al
   14000b7ac:	mov    al,ah
   14000b7ae:	add    ah,BYTE PTR [rbp+0x3977c8]
   14000b7b4:	mov    es,WORD PTR ss:[rsp+rbp*8]
   14000b7b8:	bnd jae 0x14000b822
   14000b7bb:	iret   
   14000b7bc:	loope  0x14000b783
   14000b7be:	(bad)  
   14000b7bf:	pop    rdi
   14000b7c0:	(bad)  
   14000b7c1:	jmp    0x18a918399
   14000b7c6:	and    DWORD PTR [rbx],edx
   14000b7c8:	sbb    DWORD PTR [rax+0x303f46d2],ecx
   14000b7ce:	jmp    0x14000b83e
   14000b7d0:	add    al,0x1e
   14000b7d2:	mov    eax,0x8ddbd1c7
   14000b7d7:	jno    0x14000b7c6
   14000b7d9:	(bad)  
   14000b7da:	sbb    eax,0x1b7dbcdc
   14000b7df:	cdq    
   14000b7e0:	mov    ecx,ss
   14000b7e2:	ins    BYTE PTR es:[rdi],dx
   14000b7e3:	rex.WRB (bad) 
   14000b7e5:	jb     0x14000b859
   14000b7e7:	add    DWORD PTR [rdx+0x52],ecx
   14000b7ea:	xor    dh,ch
   14000b7ec:	ret    
   14000b7ed:	mov    bh,0x5
   14000b7ef:	rex mov ecx,?
   14000b7f2:	lock js 0x14000b7f5
   14000b7f5:	(bad)  
   14000b7f6:	clc    
   14000b7f7:	add    BYTE PTR [rbx],dh
   14000b7f9:	or     DWORD PTR [rcx+0x21],0x9a040073
   14000b800:	adc    BYTE PTR [rax],cl
   14000b802:	sub    eax,0x9c42b520
   14000b807:	(bad)  
   14000b808:	call   0xe4edae1b
   14000b80d:	push   rdi
   14000b80e:	movsxd edx,DWORD PTR [rcx]
   14000b810:	in     al,0x52
   14000b812:	sbb    BYTE PTR [rbx+0x36],dl
   14000b815:	iret   
   14000b816:	movabs eax,ds:0x94052d010b90cf2
   14000b81f:	rex.XB adc BYTE PTR [r10+0x18],bl
   14000b823:	xor    dl,BYTE PTR [rax-0x47]
   14000b826:	and    DWORD PTR [rdi],eax
   14000b828:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b829:	jb     0x14000b7d3
   14000b82b:	pop    rsp
   14000b82c:	rex.X stos BYTE PTR es:[rdi],al
   14000b82e:	sbb    al,0xb0
   14000b830:	(bad)  
   14000b831:	add    DWORD PTR [rsi-0x6d72a9ca],0x36
   14000b838:	xchg   esi,eax
   14000b839:	sub    DWORD PTR [rcx-0x2ea4ffdf],esp
   14000b83f:	test   al,0x29
   14000b841:	add    eax,0x84e4101
   14000b846:	push   rdx
   14000b847:	rex.WX shr rdi,1
   14000b84a:	div    BYTE PTR [rcx-0x41d1048e]
   14000b850:	clc    
   14000b851:	in     eax,0x7f
   14000b853:	mov    es,esi
   14000b855:	in     al,0xc
   14000b857:	ret    0xc228
   14000b85a:	hlt    
   14000b85b:	mov    DWORD PTR [rbp-0x5c],esp
   14000b85e:	pop    rcx
   14000b85f:	push   0x2
   14000b861:	imul   ebx,ebp,0x5d
   14000b864:	and    al,0x83
   14000b866:	cs jb  0x14000b7fa
   14000b869:	movabs ds:0xa3ae9bbe28b890c8,eax
   14000b872:	ins    DWORD PTR es:[rdi],dx
   14000b873:	add    BYTE PTR [rbp-0x17],al
   14000b876:	(bad)  
   14000b877:	popf   
   14000b878:	loop   0x14000b853
   14000b87a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b87b:	test   eax,0xf580bd5d
   14000b880:	iret   
   14000b881:	cmp    edi,esp
   14000b883:	test   al,0xd9
   14000b885:	(bad)  
   14000b886:	pop    rsi
   14000b887:	stos   WORD PTR es:[rdi],ax
   14000b889:	xor    eax,DWORD PTR [rbp+0x59a6a20d]
   14000b88f:	mov    dh,BYTE PTR [rbx+rcx*2]
   14000b892:	rcr    DWORD PTR [rdi-0x11],1
   14000b895:	rex.XB test eax,0x4686835
   14000b89b:	fadd   QWORD PTR [rbx+0x54]
   14000b89e:	mov    esi,DWORD PTR [rax]
   14000b8a0:	xor    esi,DWORD PTR [rbx]
   14000b8a2:	and    ebp,0xffffffd3
   14000b8a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b8a6:	jno    0x14000b88d
   14000b8a8:	retf   0x7c15
   14000b8ab:	loope  0x14000b8d4
   14000b8ad:	scas   eax,DWORD PTR es:[rdi]
   14000b8ae:	loopne 0x14000b87c
   14000b8b0:	fnstenv [rbx-0x3c626268]
   14000b8b6:	mov    al,0xdf
   14000b8b8:	ret    
   14000b8b9:	fnstsw WORD PTR [rbx+0x6b]
   14000b8bc:	mov    eax,0xae36fb75
   14000b8c1:	mov    esi,0x3ed7157f
   14000b8c6:	cld    
   14000b8c7:	adc    bh,dh
   14000b8c9:	out    dx,al
   14000b8ca:	fld    QWORD PTR [rbx-0x51]
   14000b8cd:	rol    ebx,cl
   14000b8cf:	jo     0x14000b909
   14000b8d1:	rex sahf 
   14000b8d3:	and    BYTE PTR [eax],ah
   14000b8d6:	(bad)  
   14000b8d7:	pushf  
   14000b8d8:	(bad)  
   14000b8d9:	sar    ebp,1
   14000b8db:	jnp    0x14000b932
   14000b8dd:	sub    BYTE PTR [rbp-0x652f5e60],ah
   14000b8e3:	push   0xffffffffc7e5e2e1
   14000b8e8:	jo     0x14000b8e0
   14000b8ea:	ret    0xb445
   14000b8ed:	es mov bl,BYTE PTR es:[rdx]
   14000b8f1:	or     esp,DWORD PTR [rsi-0x45]
   14000b8f4:	cld    
   14000b8f5:	pop    rsp
   14000b8f6:	stc    
   14000b8f7:	mov    ch,0xeb
   14000b8f9:	fld    TBYTE PTR [rdi-0x15cbdd2b]
   14000b8ff:	jne    0x14000b8cd
   14000b901:	rex.WRX
   14000b902:	rex.WRXB (bad) 
   14000b904:	(bad)
   14000b907:	fs mov dl,0x18
   14000b90a:	add    al,0x40
   14000b90c:	fild   WORD PTR [rsi-0xb]
   14000b90f:	rex.RXB
   14000b910:	rex.WRB std 
   14000b912:	push   rcx
   14000b913:	lods   eax,DWORD PTR ds:[rsi]
   14000b914:	jg     0x14000b8fc
   14000b916:	hlt    
   14000b917:	imul   ebx,DWORD PTR [rbp+rbx*2-0xa2239a2],0x27f2bc75
   14000b922:	scas   eax,DWORD PTR es:[rdi]
   14000b923:	cdq    
   14000b924:	fadd   st,st(6)
   14000b926:	cwde   
   14000b927:	rex.RX sub al,0x0
   14000b92a:	movsxd eax,DWORD PTR [rip+0x319220bd]        # 0x17192d9ed
   14000b930:	retf   
   14000b931:	mov    bl,0xfd
   14000b933:	sub    al,0xd
   14000b935:	mov    cl,0x32
   14000b937:	repnz shr BYTE PTR [rcx],1
   14000b93a:	add    DWORD PTR [rdx-0x32],esp
   14000b93d:	scas   eax,DWORD PTR es:[rdi]
   14000b93e:	sahf   
   14000b93f:	add    al,dl
   14000b941:	and    eax,DWORD PTR [rsp+rbx*1-0x206808]
   14000b948:	rcl    BYTE PTR [rdi-0x44891201],cl
   14000b94e:	repz lahf 
   14000b950:	jne    0x14000b9cd
   14000b952:	mov    ebp,0x9884cc9f
   14000b957:	push   0xffffffffdfb43a77
   14000b95c:	out    dx,eax
   14000b95d:	rex.XB
   14000b95e:	fs out 0x5e,al
   14000b961:	mov    DWORD PTR [rdx-0x68],eax
   14000b964:	mov    edi,DWORD PTR [rcx]
   14000b966:	mov    bh,0xe9
   14000b968:	or     al,0xa5
   14000b96a:	adc    al,0x44
   14000b96c:	xchg   esi,eax
   14000b96d:	adc    eax,0x8cce5895
   14000b972:	jno    0x14000b9f2
   14000b974:	out    0xd4,eax
   14000b976:	(bad)  
   14000b977:	xor    al,0x96
   14000b979:	rex.WRX popf 
   14000b97b:	add    ah,BYTE PTR [rcx]
   14000b97d:	add    al,0xf7
   14000b97f:	outs   dx,BYTE PTR ds:[rsi]
   14000b980:	ffreep st(5)
   14000b982:	fld    TBYTE PTR [rdi-0x44]
   14000b985:	sub    ebx,0x9647ded7
   14000b98b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b98c:	imul   DWORD PTR [rcx+0x75]
   14000b98f:	push   0x6f
   14000b991:	cmp    BYTE PTR [rdx-0x67],al
   14000b994:	sbb    eax,0x1c71ecb1
   14000b999:	xlat   BYTE PTR ds:[rbx]
   14000b99a:	(bad)  
   14000b99b:	cdq    
   14000b99c:	popf   
   14000b99d:	popf   
   14000b99e:	(bad)
   14000b9a1:	mov    esp,0x2f97cb80
   14000b9a6:	ret    
   14000b9a7:	(bad)  
   14000b9a9:	imul   esp,DWORD PTR fs:[rsi-0x3],0xb7411740
   14000b9b1:	lea    ebp,[rsi+rdi*1]
   14000b9b4:	rex.RXB xchg r14d,eax
   14000b9b6:	rex.WX fdivr QWORD PTR [rsi-0x2108764f]
   14000b9bd:	std    
   14000b9be:	add    DWORD PTR [rsi-0x485764c5],esi
   14000b9c4:	(bad)  
   14000b9c5:	push   0xffffffffaf5067d6
   14000b9ca:	int    0x80
   14000b9cc:	xor    DWORD PTR [rdi],ecx
   14000b9ce:	xchg   esp,eax
   14000b9cf:	jae    0x14000b9a5
   14000b9d1:	push   0x2d
   14000b9d3:	xor    dh,ah
   14000b9d5:	and    eax,esi
   14000b9d7:	and    edi,DWORD PTR [rax+0x7e]
   14000b9da:	push   0x7a8a08
   14000b9df:	jrcxz  0x14000b9e1
   14000b9e1:	or     BYTE PTR gs:[rbx-0x6f1cd7e6],ah
   14000b9e8:	add    BYTE PTR [rdx*2+0x6218818],ah
   14000b9ef:	pop    rcx
   14000b9f0:	fist   WORD PTR [rbx+riz*1]
   14000b9f3:	fldcw  WORD PTR [rdx]
   14000b9f5:	xor    ebx,esp
   14000b9f7:	sbb    bl,BYTE PTR [rax]
   14000b9f9:	(bad)  
   14000b9fa:	xchg   esi,eax
   14000b9fb:	push   rsi
   14000b9fc:	cmp    ebp,DWORD PTR [rdx+0x73ce853c]
   14000ba02:	push   0xcf32029
   14000ba07:	sub    cl,BYTE PTR [rbx-0x73]
   14000ba0a:	lock mov edx,esp
   14000ba0d:	fidivr WORD PTR [rcx+0x26]
   14000ba10:	xor    ebx,DWORD PTR [rdx]
   14000ba12:	xor    eax,0xe6520cf
   14000ba17:	sub    eax,0x8ccca404
   14000ba1c:	rex.RB xchg r13d,eax
   14000ba1e:	or     ebp,ebx
   14000ba20:	xor    ch,BYTE PTR [rax]
   14000ba22:	adc    BYTE PTR [rbx+0x7],bl
   14000ba25:	xorps  xmm7,XMMWORD PTR [rbx+0x148ff7a0]
   14000ba2c:	mov    cl,0x16
   14000ba2e:	rex.XB jno 0x14000b9e7
   14000ba31:	popf   
   14000ba32:	push   rax
   14000ba33:	adc    ebx,DWORD PTR [rdx-0x46]
   14000ba36:	pop    rdx
   14000ba37:	pushf  
   14000ba38:	push   rax
   14000ba39:	mov    ebx,0xbdaa577
   14000ba3e:	sub    ebp,esp
   14000ba40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ba41:	lock test esp,ebp
   14000ba44:	xchg   edi,eax
   14000ba45:	mov    r8d,0x3822a3a
   14000ba4b:	and    al,0x4c
   14000ba4d:	or     ecx,DWORD PTR [rdi+0x5b]
   14000ba50:	adc    DWORD PTR [rax-0x80],0x53
   14000ba54:	fisttp DWORD PTR [rcx-0x17]
   14000ba57:	(bad)  
   14000ba58:	test   al,0xd5
   14000ba5a:	imul   ebp,DWORD PTR [rax+0x264ee9d9],0xf
   14000ba61:	rex.WRXB xchg r8,rax
   14000ba63:	data16 es mov bh,0x3f
   14000ba67:	in     al,dx
   14000ba68:	rdtsc  
   14000ba6a:	call   0x135ec8c66
   14000ba6f:	rex.WR
   14000ba70:	rex.XB xchg r14d,eax
   14000ba72:	ror    BYTE PTR [rax],cl
   14000ba74:	add    bl,BYTE PTR [rdi]
   14000ba76:	repz jae 0x14000ba6c
   14000ba79:	cmp    BYTE PTR [rdi-0x1f],dh
   14000ba7c:	cmp    al,0x9e
   14000ba7e:	mov    eax,0x3d4f0572
   14000ba83:	cmc    
   14000ba84:	adc    al,0xce
   14000ba86:	lahf   
   14000ba87:	(bad)  
   14000ba88:	pop    QWORD PTR [rbp+0x35447985]
   14000ba8e:	shl    DWORD PTR [rdi-0x4f],cl
   14000ba91:	mov    cl,0xbe
   14000ba93:	mov    DWORD PTR [rbx-0x210ec8d5],ebx
   14000ba99:	jnp    0x14000ba8a
   14000ba9b:	loope  0x14000ba97
   14000ba9d:	xchg   DWORD PTR [rdi],esi
   14000ba9f:	mov    al,0xba
   14000baa1:	mov    edx,0xbb6dd26a
   14000baa6:	mov    ebx,0x998a5910
   14000baab:	mov    ecx,0xe9fe3c39
   14000bab0:	(bad)  
   14000bab1:	jo     0x14000ba99
   14000bab3:	fdivr  QWORD PTR [rcx+0x34]
   14000bab6:	pop    rbx
   14000bab7:	sub    eax,0xbac06f3b
   14000babc:	adc    eax,esp
   14000babe:	adc    al,0x93
   14000bac0:	xchg   ebp,eax
   14000bac1:	jnp    0x14000babb
   14000bac3:	fst    QWORD PTR [rbx+rbp*8-0x57]
   14000bac7:	leave  
   14000bac8:	rex.WB mov r12b,0x6c
   14000bacb:	(bad)  
   14000bacc:	test   al,0x1b
   14000bace:	jg     0x14000ba9f
   14000bad0:	sbb    DWORD PTR [rbx],ebp
   14000bad2:	xor    al,0x7e
   14000bad4:	push   rcx
   14000bad5:	mov    ecx,0x9df04637
   14000bada:	(bad)  
   14000badb:	mov    edi,0x3c3cfe70
   14000bae0:	rex.WX icebp 
   14000bae2:	std    
   14000bae3:	mov    bh,0xdf
   14000bae5:	(bad)  
   14000bae6:	(bad)  
   14000bae7:	imul   dh
   14000bae9:	(bad)  
   14000baea:	xor    DWORD PTR [rdx],edi
   14000baec:	xchg   cl,bl
   14000baee:	jle    0x14000bb08
   14000baf0:	adc    DWORD PTR [rcx+rsi*8+0x9ff9f93],edx
   14000baf7:	cld    
   14000baf8:	lods   eax,DWORD PTR ds:[rsi]
   14000baf9:	pop    rdi
   14000bafa:	std    
   14000bafb:	xor    eax,0xfb5f83fc
   14000bb00:	push   rbp
   14000bb01:	mov    ?,ebp
   14000bb03:	xor    BYTE PTR [rdi-0x17],dh
   14000bb06:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bb07:	ds sbb dh,cl
   14000bb0a:	add    ch,al
   14000bb0c:	add    DWORD PTR [rax+0x2],ebp
   14000bb0f:	call   0x17fe6ae90
   14000bb14:	sahf   
   14000bb15:	fild   QWORD PTR [rbp-0x49]
   14000bb18:	jmp    rsi
   14000bb1a:	test   dh,0xee
   14000bb1d:	(bad)  
   14000bb1e:	ficomp WORD PTR [rsi-0x43]
   14000bb21:	jae    0x14000bb95
   14000bb23:	sbb    bh,al
   14000bb25:	sub    al,0xb5
   14000bb27:	rex.X
   14000bb28:	rex.WRB or BYTE PTR [r9-0x5d],r8b
   14000bb2c:	shr    DWORD PTR [rax],1
   14000bb2e:	add    al,0x3a
   14000bb30:	jo     0x14000bae7
   14000bb32:	out    0x85,eax
   14000bb34:	rcr    bl,0xbb
   14000bb37:	neg    eax
   14000bb39:	in     eax,0x59
   14000bb3b:	xchg   esi,eax
   14000bb3c:	in     eax,dx
   14000bb3d:	(bad)  
   14000bb3e:	test   r8b,al
   14000bb41:	mov    ecx,0x2690974b
   14000bb46:	or     DWORD PTR [rsi-0x43fc0043],ebp
   14000bb4c:	icebp  
   14000bb4d:	fisubr DWORD PTR [rbx-0x29450be8]
   14000bb53:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bb54:	rex.RXB jno 0x14000bb58
   14000bb57:	(bad)  
   14000bb58:	mov    ecx,0x84bbfb58
   14000bb5d:	out    0xa0,al
   14000bb5f:	(bad)  
   14000bb60:	(bad)  
   14000bb61:	jne    0x14000bb11
   14000bb63:	add    BYTE PTR [rcx],ch
   14000bb65:	retf   0xcb6c
   14000bb68:	test   BYTE PTR [rax+0x3e118411],ah
   14000bb6e:	sti    
   14000bb6f:	fxch   st(7)
   14000bb71:	loopne 0x14000bb0c
   14000bb73:	addr32 sahf 
   14000bb75:	mov    BYTE PTR [rbx+rsi*2+0x2],0x42
   14000bb7a:	fs rex.RB sub al,0x2
   14000bb7e:	add    BYTE PTR [rsp+rdx*8+0xfc28ca0],dh
   14000bb85:	cmp    al,0x10
   14000bb87:	rex.X mov cl,0x71
   14000bb8a:	addr32 (bad) 
   14000bb8c:	outs   dx,DWORD PTR ds:[rsi]
   14000bb8d:	mov    edi,0xd7563ef1
   14000bb92:	out    dx,al
   14000bb93:	rex.B push 0x61
   14000bb96:	movabs ds:0x801494011c0b5eb8,al
   14000bb9f:	add    cl,BYTE PTR [rax+0x12410a2]
   14000bba5:	mov    edi,DWORD PTR [rax-0xe928ccf]
   14000bbab:	nop
   14000bbac:	leave  
   14000bbad:	pop    rbx
   14000bbae:	push   rbx
   14000bbaf:	xor    dl,ch
   14000bbb1:	sub    DWORD PTR [rcx+0x2],0x81420e0a
   14000bbb8:	push   rsp
   14000bbb9:	not    BYTE PTR [rcx+0x2f0219e5]
   14000bbbf:	(bad)  
   14000bbc0:	(bad)  
   14000bbc1:	push   rdx
   14000bbc2:	push   rbx
   14000bbc3:	cmp    eax,DWORD PTR [rax+0x9]
   14000bbc6:	jb     0x14000bbed
   14000bbc8:	xchg   ecx,eax
   14000bbc9:	imul   ecx,DWORD PTR [rip+0xffffffff8e5dd289],0xffffffa4        # 0xce5e8e59
   14000bbd0:	xor    edi,edi
   14000bbd2:	jae    0x14000bbfc
   14000bbd4:	imul   ecx,DWORD PTR [rcx],0x48
   14000bbd7:	sub    DWORD PTR [rax+0x17220cb2],esp
   14000bbdd:	adc    BYTE PTR [rdx],ah
   14000bbdf:	mov    ch,0xb5
   14000bbe1:	jmp    0x14000bbc9
   14000bbe3:	mov    cs,WORD PTR [rdx+0x4a]
   14000bbe6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bbe7:	push   rax
   14000bbe8:	and    dh,BYTE PTR [rbx]
   14000bbea:	and    al,0x90
   14000bbec:	or     ebx,edi
   14000bbee:	sbb    eax,0x66da2043
   14000bbf3:	sub    eax,0x5c412e74
   14000bbf8:	jl     0x14000bbfb
   14000bbfa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bbfb:	rcl    WORD PTR [rbp+0x39],0x16
   14000bc00:	(bad)  
   14000bc01:	sbb    BYTE PTR [rax],al
   14000bc03:	xor    DWORD PTR [rdx],0x13025129
   14000bc09:	xor    BYTE PTR [rip+0x68118471],ch        # 0x1a8124080
   14000bc0f:	jae    0x14000bc6f
   14000bc11:	sub    BYTE PTR [rbp-0x2],dh
   14000bc14:	mov    ah,0xbd
   14000bc16:	stc    
   14000bc17:	or     ebp,DWORD PTR [rcx]
   14000bc19:	rex.WRXB jae 0x14000bbd2
   14000bc1c:	outs   dx,BYTE PTR ds:[rsi]
   14000bc1d:	mov    BYTE PTR [rbx],bh
   14000bc1f:	cs (bad) 
   14000bc21:	add    al,0x47
   14000bc23:	pushf  
   14000bc24:	(bad)  
   14000bc25:	out    0x6e,al
   14000bc27:	sbb    ah,BYTE PTR [rbx+0x152f4494]
   14000bc2d:	call   0xc06177f8
   14000bc32:	(bad)  
   14000bc33:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc34:	and    DWORD PTR [rsi+0x30b066a7],esp
   14000bc3a:	mov    edi,0x19b9b988
   14000bc3f:	rex.WR
   14000bc40:	rex.WRX
   14000bc41:	rex.WRX (bad) 
   14000bc43:	jb     0x14000bca7
   14000bc45:	adc    dl,BYTE PTR [rcx+0x14]
   14000bc48:	rex.B
   14000bc49:	test   QWORD PTR [r14+0x7f],rdi
   14000bc4d:	cmp    BYTE PTR [rbx-0x191d1109],0xcd
   14000bc54:	fwait
   14000bc55:	mov    eax,0xef8ab2bd
   14000bc5a:	jge    0x14000bc53
   14000bc5c:	push   rbp
   14000bc5d:	or     al,0x7
   14000bc5f:	jge    0x14000bc71
   14000bc61:	retf   0x3530
   14000bc64:	cmp    eax,0x96673385
   14000bc69:	jno    0x14000bc54
   14000bc6b:	shl    BYTE PTR [rip+0x572b95c],cl        # 0x1457375cd
   14000bc71:	push   rdi
   14000bc72:	scas   al,BYTE PTR es:[rdi]
   14000bc73:	cmp    al,0x8e
   14000bc75:	mov    edi,0xaff57fa
   14000bc7a:	(bad)  
   14000bc7b:	int    0x26
   14000bc7d:	mov    edx,0xe77e369d
   14000bc82:	lahf   
   14000bc83:	cld    
   14000bc84:	(bad)  
   14000bc85:	mov    esi,0xe0af95f2
   14000bc8a:	(bad)  
   14000bc8b:	jmp    0x104fd74e3
   14000bc90:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc91:	push   rax
   14000bc92:	stos   DWORD PTR es:[rdi],eax
   14000bc93:	(bad)  
   14000bc94:	mov    bl,al
   14000bc96:	xchg   ebx,eax
   14000bc97:	fwait
   14000bc98:	push   gs
   14000bc9a:	mov    ch,0x2e
   14000bc9c:	or     DWORD PTR [rsi+0x4377dfa9],edi
   14000bca2:	push   0xffffffffffffffa7
   14000bca4:	(bad)  
   14000bca5:	es int3 
   14000bca7:	cld    
   14000bca8:	(bad)  
   14000bca9:	iret   
   14000bcaa:	xor    al,0x7c
   14000bcac:	stc    
   14000bcad:	pushf  
   14000bcae:	(bad)  
   14000bcaf:	pop    rbx
   14000bcb0:	lock sub DWORD PTR [rbx+0x38],esp
   14000bcb4:	jg     0x14000bcac
   14000bcb6:	sub    al,0xce
   14000bcb8:	sub    al,0x2f
   14000bcba:	jrcxz  0x14000bc7f
   14000bcbc:	sbb    esi,DWORD PTR [rdi]
   14000bcbe:	jo     0x14000bcb5
   14000bcc0:	or     DWORD PTR [rdi],0x4d
   14000bcc3:	adc    ebx,DWORD PTR [rdx]
   14000bcc5:	(bad)  
   14000bcc6:	mov    bh,0x60
   14000bcc8:	xchg   edi,eax
   14000bcc9:	xchg   edi,eax
   14000bcca:	xchg   edi,eax
   14000bccb:	xchg   edi,eax
   14000bccc:	lea    edx,[rbx]
   14000bcce:	clc    
   14000bccf:	shl    DWORD PTR [rbp+0x43],1
   14000bcd2:	fstp   TBYTE PTR [rcx+0xa]
   14000bcd5:	rol    BYTE PTR [rdi-0x58488753],0xb7
   14000bcdc:	mov    esp,0x504491e2
   14000bce1:	rex.W nop
   14000bce3:	(bad)  
   14000bce4:	cli    
   14000bce5:	in     al,0xef
   14000bce7:	jg     0x14000bcd2
   14000bce9:	retf   
   14000bcea:	jg     0x14000bd69
   14000bcec:	jge    0x14000bd51
   14000bcee:	repz mov edi,0xe64c4211
   14000bcf4:	and    eax,0x60b8bdb3
   14000bcf9:	cmc    
   14000bcfa:	(bad)  
   14000bcfb:	fdivr  QWORD PTR [rdx+rsi*4-0x4251a0a7]
   14000bd02:	add    al,BYTE PTR cs:[rdi-0xa]
   14000bd06:	mov    ebp,0x2172f5b
   14000bd0b:	repz mov ecx,DWORD PTR [rbx+0x41aaa26]
   14000bd12:	sti    
   14000bd13:	std    
   14000bd14:	(bad)  
   14000bd15:	fstp   TBYTE PTR [rbx]
   14000bd17:	pop    rax
   14000bd18:	pop    rdi
   14000bd19:	pop    rbx
   14000bd1a:	(bad)  
   14000bd1b:	ficomp DWORD PTR [rbp+0x7ab3b83b]
   14000bd21:	or     eax,ebx
   14000bd23:	jle    0x14000bd34
   14000bd25:	jno    0x14000bd39
   14000bd27:	(bad)  
   14000bd28:	adc    ah,bl
   14000bd2a:	(bad)  
   14000bd2c:	sub    DWORD PTR [rip+0x7b8c1ce5],eax        # 0x1bb8cda17
   14000bd32:	test   DWORD PTR [rbp-0xd068f20],eax
   14000bd38:	gs cmp al,0xff
   14000bd3b:	fdiv   QWORD PTR [rbx+0x38]
   14000bd3e:	mov    ecx,0xe6ca0a7c
   14000bd43:	repnz mov ch,0x2d
   14000bd46:	clc    
   14000bd47:	jno    0x14000bd4a
   14000bd49:	and    esi,eax
   14000bd4b:	sbb    BYTE PTR [rax+0x4dd061ef],bh
   14000bd51:	jo     0x14000bd48
   14000bd53:	fucomp st(3)
   14000bd55:	clc    
   14000bd56:	loopne 0x14000bd32
   14000bd58:	xchg   DWORD PTR [rax],ebx
   14000bd5a:	and    al,0xa6
   14000bd5c:	retf   
   14000bd5d:	(bad)  
   14000bd5e:	or     al,0x22
   14000bd60:	xor    al,0xea
   14000bd62:	xchg   ebx,eax
   14000bd63:	lock sbb DWORD PTR [rdx],0x3c
   14000bd67:	(bad)  
   14000bd68:	add    BYTE PTR [rdi+0x3e],ah
   14000bd6b:	sub    BYTE PTR [rax],dil
   14000bd6e:	not    DWORD PTR [rcx]
   14000bd70:	clc    
   14000bd71:	jne    0x14000bdc3
   14000bd73:	out    dx,al
   14000bd74:	adc    DWORD PTR [rdx-0x7a],0xfb806c28
   14000bd7b:	and    DWORD PTR [rdi+rdi*1],edi
   14000bd7e:	rex lods eax,DWORD PTR ds:[rsi]
   14000bd80:	(bad)  
   14000bd81:	sbb    BYTE PTR [rdx+0x740272cf],r11b
   14000bd88:	ror    DWORD PTR [rsi],cl
   14000bd8a:	adc    dl,BYTE PTR [rcx]
   14000bd8c:	rex.XB xor ecx,DWORD PTR [r15]
   14000bd8f:	xchg   esp,eax
   14000bd90:	sti    
   14000bd91:	and    BYTE PTR [rsi-0x39940237],bl
   14000bd97:	movabs al,ds:0x4b9008403986e400
   14000bda0:	add    eax,0xc8213750
   14000bda5:	imul   esi,DWORD PTR [rbx+riz*4-0x2b],0x642eeb73
   14000bdad:	mov    ecx,0xe4122a44
   14000bdb2:	rex.X and bl,cl
   14000bdb5:	push   rbx
   14000bdb6:	test   al,0x34
   14000bdb8:	xor    DWORD PTR [rsp-0x8b4d60],0x75
   14000bdc0:	sahf   
   14000bdc1:	mov    ecx,DWORD PTR [r10+r10*2]
   14000bdc5:	or     BYTE PTR [rax-0x6f],ch
   14000bdc8:	rex.XB leave 
   14000bdca:	sbb    al,0xc8
   14000bdcc:	repz jge 0x14000be3a
   14000bdcf:	rex.B
   14000bdd0:	rex.WB
   14000bdd1:	rex.WXB add al,0xa5
   14000bdd4:	rcl    BYTE PTR [rdx],0x61
   14000bdd7:	mov    al,0x8c
   14000bdd9:	test   di,dx
   14000bddc:	adc    DWORD PTR [rbx-0x20e5c9f7],ebp
   14000bde2:	cwde   
   14000bde3:	sbb    dl,0x42
   14000bde6:	sbb    ah,BYTE PTR [rsi-0x53]
   14000bde9:	(bad)  
   14000bdea:	rex.RX sub BYTE PTR [rax],r13b
   14000bded:	addr32 rex.RB (bad) 
   14000bdf0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bdf1:	xchg   BYTE PTR [rsi],al
   14000bdf3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bdf4:	fcom   QWORD PTR [rax+rbx*2-0x46]
   14000bdf8:	and    BYTE PTR [rbp-0x2daf7453],al
   14000bdfe:	in     al,dx
   14000bdff:	sbb    esp,DWORD PTR [rcx-0x7ccb55ec]
   14000be05:	rex.WRXB out 0x12,eax
   14000be08:	jmp    0x1a128c67d
   14000be0d:	push   rdx
   14000be0e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000be0f:	pop    rdx
   14000be10:	(bad)  
   14000be11:	data16 jp 0x14000bdde
   14000be14:	rex.WR movabs rdi,0xb1e0ae57e3c25a59
   14000be1e:	(bad)  
   14000be1f:	cs loope 0x14000be04
   14000be22:	(bad)
   14000be25:	popf   
   14000be26:	cdq    
   14000be27:	add    DWORD PTR [rcx],esp
   14000be29:	add    al,0xdd
   14000be2b:	outs   dx,BYTE PTR ds:[rsi]
   14000be2c:	movntps XMMWORD PTR [rbx],xmm5
   14000be2f:	mov    bh,0x70
   14000be31:	cmc    
   14000be32:	(bad)  
   14000be33:	push   rbp
   14000be34:	mov    esp,0xf8fbdef7
   14000be39:	loopne 0x14000be42
   14000be3b:	(bad)  
   14000be3c:	rcr    dl,0xda
   14000be3f:	cmp    dh,dh
   14000be41:	fisubr DWORD PTR [rbp-0x58]
   14000be44:	cmp    al,0x47
   14000be46:	push   rsp
   14000be47:	mov    esi,DWORD PTR [rax]
   14000be49:	(bad)  
   14000be4a:	(bad)  
   14000be4b:	xchg   ebx,ecx
   14000be4d:	rex.WRXB cmp al,0x81
   14000be50:	rex.RX stos DWORD PTR es:[rdi],eax
   14000be52:	mov    ecx,ebx
   14000be54:	stc    
   14000be55:	jns    0x14000be8b
   14000be57:	sbb    ecx,DWORD PTR [rbp+0x5cf3ba2]
   14000be5d:	ss jmp 0x14000be15
   14000be60:	pop    rdx
   14000be61:	jno    0x14000be5a
   14000be63:	push   0xffffffffffffffdf
   14000be65:	fild   QWORD PTR [rdi-0x48]
   14000be68:	jb     0x14000bec4
   14000be6a:	mov    edi,0xf3454516
   14000be6f:	adc    eax,0x918314a7
   14000be74:	pop    rdx
   14000be75:	jge    0x14000be77
   14000be77:	movsxd eax,DWORD PTR [rbx]
   14000be79:	jl     0x14000bec9
   14000be7b:	jmp    0x14000bebc
   14000be7d:	jle    0x14000be70
   14000be7f:	and    dl,BYTE PTR [rax+rax*4]
   14000be82:	out    dx,eax
   14000be83:	mov    edi,0xb67626f9
   14000be88:	ja     0x14000be2b
   14000be8a:	xchg   esp,eax
   14000be8b:	sub    ah,BYTE PTR [rsi]
   14000be8d:	rex.WX (bad) 
   14000be8f:	ret    
   14000be90:	push   rcx
   14000be91:	ds mov esi,0x3461dcfb
   14000be97:	loop   0x14000be98
   14000be99:	fdiv   QWORD PTR [rbx]
   14000be9b:	(bad)  
   14000be9c:	xchg   BYTE PTR [rdi-0x8],bh
   14000be9f:	jg     0x14000be9f
   14000bea1:	es (bad) 
   14000bea3:	fisubr WORD PTR [rdi+0x30332ffc]
   14000bea9:	in     eax,0xaa
   14000beab:	out    dx,al
   14000beac:	movabs eax,ds:0xcbfd83ad46109070
   14000beb5:	sar    BYTE PTR [rbp+0x5ff7def8],0xff
   14000bebc:	(bad)  
   14000bebd:	mov    edi,0xff1bfaf7
   14000bec2:	popf   
   14000bec3:	out    dx,eax
   14000bec4:	jns    0x14000bef2
   14000bec6:	mov    cl,BYTE PTR [rdi+rdx*8+0x5a]
   14000beca:	xchg   esi,eax
   14000becb:	adc    eax,0xf22d4377
   14000bed0:	mul    ebp
   14000bed2:	xor    eax,DWORD PTR cs:[rdx+0x48]
   14000bed6:	ror    DWORD PTR [rcx],1
   14000bed8:	push   rsi
   14000bed9:	out    dx,al
   14000beda:	rex.R jae 0x14000bf00
   14000bedd:	(bad)  
   14000bede:	(bad)  
   14000bedf:	fadd   QWORD PTR [rcx]
   14000bee1:	fdivr  DWORD PTR [rsi-0x3dcb3aca]
   14000bee7:	push   rsp
   14000bee8:	scas   eax,DWORD PTR es:[rdi]
   14000bee9:	(bad)  
   14000beea:	push   0xffffffffffffff88
   14000beec:	ins    BYTE PTR es:[rdi],dx
   14000beed:	fldenv [rdi-0x34ed6619]
   14000bef3:	pop    rsi
   14000bef4:	scas   eax,DWORD PTR es:[rdi]
   14000bef5:	xchg   ebp,ebx
   14000bef7:	lods   eax,DWORD PTR ds:[rsi]
   14000bef8:	ins    DWORD PTR es:[rdi],dx
   14000bef9:	lods   al,BYTE PTR ds:[rsi]
   14000befa:	scas   eax,DWORD PTR es:[rdi]
   14000befb:	lods   eax,DWORD PTR ds:[rsi]
   14000befc:	movsxd esi,DWORD PTR [rbx+0x7d]
   14000beff:	sbb    eax,0xe86b1b9b
   14000bf04:	idiv   DWORD PTR [rdx+0x48]
   14000bf07:	loop   0x14000bf2a
   14000bf09:	rex.R
   14000bf0a:	or     dl,BYTE PTR cs:[rdi]
   14000bf0d:	sbb    eax,0xf2f2cde0
   14000bf13:	xor    bh,BYTE PTR [rsi-0x1e]
   14000bf16:	jae    0x14000beb7
   14000bf18:	ret    
   14000bf19:	in     eax,0xc7
   14000bf1b:	(bad)  
   14000bf1c:	(bad)  
   14000bf1d:	movabs eax,ds:0x66abf9c4d0132214
   14000bf26:	mov    bh,0x9d
   14000bf28:	mov    ecx,0x9b89322f
   14000bf2d:	xlat   BYTE PTR ds:[rbx]
   14000bf2e:	out    dx,eax
   14000bf2f:	loopne 0x14000bede
   14000bf31:	xlat   BYTE PTR ds:[rbx]
   14000bf32:	ffreep st(6)
   14000bf34:	(bad)  
   14000bf35:	(bad)  
   14000bf36:	ss xor al,0xd1
   14000bf39:	mov    BYTE PTR [rdx+0xb7ab508],ah
   14000bf3f:	mov    WORD PTR [rdx+0x8],?
   14000bf42:	(bad)  
   14000bf43:	or     BYTE PTR [rdx],bl
   14000bf45:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bf46:	xchg   ebp,eax
   14000bf47:	xchg   ebx,eax
   14000bf48:	ret    0xef83
   14000bf4b:	xchg   DWORD PTR [rax],esp
   14000bf4d:	mov    WORD PTR [rdx],fs
   14000bf4f:	lock (bad) 
   14000bf51:	loopne 0x14000bfd1
   14000bf53:	add    BYTE PTR [rbp-0x1ff430ff],ch
   14000bf59:	stc    
   14000bf5a:	adc    DWORD PTR [rdi+rdi*1+0x44],edi
   14000bf5e:	mov    ebp,0x3c782d6
   14000bf63:	sub    BYTE PTR [rsi-0x30],al
   14000bf66:	(bad)  
   14000bf67:	pop    rbp
   14000bf68:	or     BYTE PTR [rbp+0x6010f183],bl
   14000bf6e:	sbb    al,0xc4
   14000bf70:	repz rex cmp eax,0x10509a1f
   14000bf77:	(bad)  
   14000bf78:	movabs eax,ds:0xa16c20a57ec28519
   14000bf81:	adc    cl,ah
   14000bf83:	mov    al,0xc1
   14000bf85:	ds add eax,0x6c836d0a
   14000bf8b:	cmp    DWORD PTR [rdx+0x68],esi
   14000bf8e:	or     BYTE PTR [rcx+0x32391323],bl
   14000bf94:	imul   ecx,DWORD PTR [rax],0x6404cf21
   14000bf9a:	data16 fadd QWORD PTR [rdx]
   14000bf9d:	popf   
   14000bf9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf9f:	push   rax
   14000bfa0:	rex.X
   14000bfa1:	rex
   14000bfa2:	or     WORD PTR [rsi+rbp*1-0x60],dx
   14000bfa7:	xor    al,BYTE PTR [rcx]
   14000bfa9:	and    eax,0x332ce832
   14000bfae:	iret   
   14000bfaf:	ret    0xcd14
   14000bfb2:	call   0x18d256493
   14000bfb7:	and    BYTE PTR [rsi-0x13],dl
   14000bfba:	push   rdi
   14000bfbb:	ds push rbx
   14000bfbd:	(bad)  
   14000bfbe:	pop    rsp
   14000bfbf:	and    al,BYTE PTR [rdx+0x6d]
   14000bfc2:	sub    cl,ch
   14000bfc4:	or     BYTE PTR [rsi],dh
   14000bfc6:	mov    bl,0x71
   14000bfc8:	add    al,0x33
   14000bfca:	clc    
   14000bfcb:	test   BYTE PTR [rdx-0x37da24cd],al
   14000bfd1:	lea    esp,[rip+0x80319c0]        # 0x14803d997
   14000bfd7:	ins    BYTE PTR es:[rdi],dx
   14000bfd8:	mov    bl,0xc
   14000bfda:	adc    DWORD PTR [rdx+0x6858b4d2],0xd
   14000bfe1:	(bad)  
   14000bfe2:	sbb    dl,dh
   14000bfe4:	pop    rsp
   14000bfe5:	pop    rax
   14000bfe6:	ret    0x48a0
   14000bfe9:	xchg   ebx,eax
   14000bfea:	adc    al,0xd0
   14000bfec:	rex.RX add BYTE PTR [rdx],r10b
   14000bfef:	jnp    0x14000c01c
   14000bff1:	stc    
   14000bff2:	pop    rsp
   14000bff3:	out    0xd0,al
   14000bff5:	rex.X
   14000bff6:	rex.X test eax,0x9892791c
   14000bffc:	or     DWORD PTR [rcx],edi
   14000bffe:	rex.WX (bad) 
   14000c000:	rex and ebp,esi
   14000c003:	cmc    
   14000c004:	xchg   ecx,eax
   14000c005:	hlt    
   14000c006:	sti    
   14000c007:	mov    BYTE PTR [rdx+0x35],ch
   14000c00a:	xor    BYTE PTR [rax],dl
   14000c00c:	rex.R cmc 
   14000c00e:	or     BYTE PTR [rdi-0x32],ah
   14000c011:	pushf  
   14000c012:	(bad)
   14000c015:	rex.WXB movabs r8,0xce0ae2795c25d8fc
   14000c01f:	pushf  
   14000c020:	ds (bad) 
   14000c022:	stc    
   14000c023:	stc    
   14000c024:	cmp    DWORD PTR [rax-0x32],esi
   14000c027:	xor    eax,ebp
   14000c029:	div    ecx
   14000c02b:	lods   eax,DWORD PTR ds:[rsi]
   14000c02c:	xchg   edi,eax
   14000c02d:	pop    rsi
   14000c02e:	ret    0xf6ff
   14000c031:	jmp    0x14000c0b2
   14000c033:	(bad)  
   14000c034:	std    
   14000c035:	pop    rsi
   14000c036:	(bad)  
   14000c037:	lahf   
   14000c038:	jp     0x14000c024
   14000c03a:	rex.WB pushf 
   14000c03c:	ds ja  0x14000c04d
   14000c03f:	xchg   ebx,eax
   14000c040:	adc    edx,DWORD PTR [rbx]
   14000c042:	rex.RB mov r15b,0x24
   14000c045:	mov    bl,0x69
   14000c047:	push   rcx
   14000c048:	(bad)  
   14000c049:	in     al,0xf5
   14000c04b:	jp     0x14000bffa
   14000c04d:	mov    eax,0x80eb8f7b
   14000c052:	ins    BYTE PTR es:[rdi],dx
   14000c053:	fdivr  DWORD PTR [rcx]
   14000c055:	or     eax,0x1e0d7af5
   14000c05a:	out    0x80,eax
   14000c05c:	(bad)  
   14000c05d:	sti    
   14000c05e:	push   rbx
   14000c05f:	jge    0x14000c0ab
   14000c061:	(bad)  
   14000c062:	pop    rdi
   14000c063:	rex.WRX
   14000c064:	addr32 xchg edi,eax
   14000c066:	mov    ch,0x3e
   14000c068:	idiv   DWORD PTR [rsp+rbx*4]
   14000c06b:	cmp    eax,0x17271a7d
   14000c070:	(bad)  
   14000c071:	jno    0x14000c060
   14000c073:	(bad)  
   14000c074:	or     eax,0x3f57fbc
   14000c079:	in     al,0x23
   14000c07b:	gs mov esp,0x1238c1c7
   14000c081:	cmp    BYTE PTR [rdx-0x30160804],ch
   14000c087:	test   DWORD PTR ds:[rdi-0x4],edi
   14000c08b:	pop    rbx
   14000c08c:	mov    edi,0xd5f8df8d
   14000c091:	push   rbp
   14000c093:	sbb    al,0x80
   14000c095:	sbb    al,0x80
   14000c097:	sub    BYTE PTR [rbx+0x47ef375b],0x9
   14000c09e:	rcr    DWORD PTR [rbp+0x350502fd],0xad
   14000c0a5:	ins    DWORD PTR es:[rdi],dx
   14000c0a6:	ins    BYTE PTR es:[rdi],dx
   14000c0a7:	cld    
   14000c0a8:	xchg   ebp,eax
   14000c0a9:	shl    bh,0xd9
   14000c0ac:	fsub   st(4),st
   14000c0ae:	rex.WR push rcx
   14000c0b0:	pop    rdi
   14000c0b1:	out    dx,eax
   14000c0b2:	sub    dl,BYTE PTR [rdi+0x6135dcdc]
   14000c0b8:	imul   edx,DWORD PTR [rdi+0x72048965],0x1b
   14000c0bf:	clc    
   14000c0c0:	jae    0x14000c05c
   14000c0c2:	fbstp  TBYTE PTR [rbp-0x74]
   14000c0c5:	add    DWORD PTR [rax],ebp
   14000c0c7:	or     BYTE PTR [rax+0x2c881d6c],ah
   14000c0cd:	sub    eax,DWORD PTR [rbp+rdi*1-0x3c3bedb7]
   14000c0d4:	(bad)  
   14000c0d5:	push   rcx
   14000c0d6:	adc    esi,eax
   14000c0d8:	sbb    BYTE PTR [rbx+0x37a8041f],al
   14000c0de:	sbb    edi,DWORD PTR [rax+0x7c]
   14000c0e1:	out    0x9,al
   14000c0e3:	jl     0x14000c0df
   14000c0e5:	mov    bl,0x4f
   14000c0e7:	and    DWORD PTR [rbx+0x53],ecx
   14000c0ea:	or     al,0xfa
   14000c0ec:	jge    0x14000c0da
   14000c0ee:	in     eax,dx
   14000c0ef:	out    dx,al
   14000c0f0:	movabs ds:0xdbd87bbdfac6d7bd,al
   14000c0f9:	fld    QWORD PTR [rcx+0x67]
   14000c0fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0fd:	shrd   DWORD PTR [rsi+0x13],edx,cl
   14000c101:	iret   
   14000c102:	(bad)  
   14000c103:	repz xor al,0x96
   14000c106:	out    0x67,al
   14000c108:	xchg   ecx,eax
   14000c109:	or     al,0x7a
   14000c10b:	lock cld 
   14000c10d:	adc    BYTE PTR [rbx+rsi*1+0x8135b68],bl
   14000c114:	cwde   
   14000c115:	or     edx,DWORD PTR [rip+0xffffffffeadee084]        # 0x12adfa19f
   14000c11b:	es scas al,BYTE PTR es:[rdi]
   14000c11d:	mov    esi,0xfc3e01fb
   14000c122:	lock cmp al,BYTE PTR [rsi]
   14000c125:	jmp    0x120f7df2a
   14000c12a:	(bad)  
   14000c12b:	add    DWORD PTR [rdi+rbp*1+0x44],edi
   14000c12f:	adc    al,0xd5
   14000c131:	and    BYTE PTR [rbx-0x6d],dh
   14000c134:	xlat   BYTE PTR ds:[rbx]
   14000c135:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c136:	test   BYTE PTR [rbx],ah
   14000c138:	iret   
   14000c139:	add    eax,0x32502518
   14000c13e:	(bad)  
   14000c13f:	add    eax,0x48524e47
   14000c144:	and    eax,0xe6e6f9e1
   14000c149:	and    ebp,DWORD PTR [rdx]
   14000c14b:	(bad)  
   14000c14c:	(bad)  
   14000c14d:	jle    0x14000c157
   14000c14f:	lods   eax,DWORD PTR ds:[rsi]
   14000c150:	adc    al,0x7a
   14000c152:	sbb    DWORD PTR [rbp-0x4c],0xfffffffb
   14000c156:	fist   DWORD PTR [rax+0x85ee0d0]
   14000c15c:	(bad)  
   14000c15d:	or     al,bh
   14000c15f:	(bad)  
   14000c160:	add    al,0x22
   14000c162:	jae    0x14000c174
   14000c164:	test   eax,0x68c082c1
   14000c169:	cmp    DWORD PTR [rbp-0x58d25575],esp
   14000c16f:	push   rbp
   14000c170:	or     eax,0x66103199
   14000c175:	push   rdx
   14000c176:	nop
   14000c177:	rex.RB
   14000c178:	rex.WRX sahf 
   14000c17a:	add    BYTE PTR [rcx],bh
   14000c17c:	ror    eax,1
   14000c17e:	mov    ch,0x42
   14000c180:	scas   al,BYTE PTR es:[rdi]
   14000c181:	rex.WRB push r13
   14000c183:	(bad)  
   14000c184:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c185:	rex.WR jae 0x14000c11b
   14000c188:	int3   
   14000c189:	rex.WRB or al,0x41
   14000c18c:	mov    DWORD PTR [rdx+rbp*1],ebx
   14000c18f:	xchg   ebx,eax
   14000c190:	rex outs dx,BYTE PTR ds:[rsi]
   14000c192:	add    cl,BYTE PTR [rdx+rbx*2-0x76be28e8]
   14000c199:	int3   
   14000c19a:	or     BYTE PTR [rbp+0x645a148],bh
   14000c1a0:	sub    eax,0xb05d9373
   14000c1a5:	and    al,0xe0
   14000c1a7:	scas   al,BYTE PTR es:[rdi]
   14000c1a8:	and    BYTE PTR [rdx-0x627269c],0x0
   14000c1af:	and    eax,0x6adabca6
   14000c1b4:	jle    0x14000c145
   14000c1b6:	cdq    
   14000c1b7:	jl     0x14000c1f5
   14000c1b9:	neg    DWORD PTR [rax+0x7811ec0d]
   14000c1bf:	(bad)  
   14000c1c0:	(bad)  
   14000c1c1:	movabs ds:0xee0e3c0b4ce9800c,eax
   14000c1ca:	xor    edx,DWORD PTR [rbx]
   14000c1cc:	mov    WORD PTR [rdx+0xa],ss
   14000c1cf:	add    edi,0x2eb9b4a1
   14000c1d5:	shl    BYTE PTR [rcx+rax*4],cl
   14000c1d8:	int3   
   14000c1d9:	jae    0x14000c22b
   14000c1db:	push   0xffffffffa2d40568
   14000c1e0:	add    al,0x8c
   14000c1e2:	(bad)  
   14000c1e3:	stos   BYTE PTR es:[rdi],al
   14000c1e4:	cmp    al,0x2d
   14000c1e6:	(bad)  
   14000c1e7:	(bad)  
   14000c1e8:	jmp    0x14000c25f
   14000c1ea:	ficom  DWORD PTR [rax]
   14000c1ec:	and    al,BYTE PTR [rbx+0x2e]
   14000c1ef:	jb     0x14000c255
   14000c1f1:	ret    
   14000c1f2:	add    edx,eax
   14000c1f4:	xor    BYTE PTR [rsp+rbx*1-0x7c],al
   14000c1f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c1f9:	out    dx,al
   14000c1fa:	add    BYTE PTR [rdx],0x83
   14000c1fd:	(bad)  
   14000c1fe:	adc    BYTE PTR [rdi],dh
   14000c200:	scas   al,BYTE PTR es:[rdi]
   14000c201:	ffreep st(0)
   14000c203:	mov    ebx,0xaf83bcef
   14000c208:	jge    0x14000c1ff
   14000c20a:	imul   esi,DWORD PTR [rsi-0xb3dcf2e],0xfffffff4
   14000c211:	xor    al,0xe6
   14000c213:	out    0x67,eax
   14000c215:	mov    cl,0x78
   14000c217:	(bad)  
   14000c218:	or     ebx,eax
   14000c21a:	xor    al,0xc3
   14000c21c:	addr32 sahf 
   14000c21e:	jns    0x14000c226
   14000c220:	(bad)  
   14000c221:	rex.WRX sahf 
   14000c223:	rex.R mov bl,0xd1
   14000c226:	adc    al,0x86
   14000c229:	test   DWORD PTR [rbp-0x46],edx
   14000c22c:	(bad)  
   14000c22d:	frstor [rdi]
   14000c22f:	sub    al,0x4
   14000c231:	ficom  WORD PTR [rcx]
   14000c233:	sub    DWORD PTR [rbx-0x6a],0xa
   14000c237:	add    DWORD PTR [rax],0xffffff8d
   14000c23a:	xchg   BYTE PTR [rcx+0x10a52bfe],cl
   14000c240:	(bad)  
   14000c241:	leave  
   14000c242:	add    ecx,DWORD PTR [rbp+0x7d]
   14000c245:	add    ch,al
   14000c247:	repnz leave 
   14000c249:	test   eax,0x773c5c29
   14000c24e:	(bad)  
   14000c24f:	push   rdx
   14000c250:	sub    DWORD PTR [rbp+rbp*8-0x25],edi
   14000c254:	(bad)  
   14000c255:	movabs ds:0xd704e3bb2d14e9db,eax
   14000c25e:	imul   edi,ebx,0x13beb4a3
   14000c264:	cli    
   14000c265:	ret    
   14000c266:	ds iret 
   14000c268:	ins    DWORD PTR es:[rdi],dx
   14000c269:	jge    0x14000c2ab
   14000c26b:	jg     0x14000c29d
   14000c26d:	add    BYTE PTR [rbp-0x4967fcac],ah
   14000c273:	rex.X lahf 
   14000c275:	lea    edi,[rcx+0x38]
   14000c278:	push   rdx
   14000c279:	jo     0x14000c2bf
   14000c27b:	jo     0x14000c1fd
   14000c27d:	add    al,0x38
   14000c27f:	add    ah,dh
   14000c281:	cli    
   14000c282:	jge    0x14000c27e
   14000c284:	(bad)  
   14000c285:	outs   dx,DWORD PTR ds:[rsi]
   14000c286:	jle    0x14000c303
   14000c288:	fimul  WORD PTR [rbp+0x62]
   14000c28b:	sub    DWORD PTR [rdi-0x575d2987],esi
   14000c291:	adc    al,bh
   14000c293:	lods   al,BYTE PTR ds:[rsi]
   14000c294:	je     0x14000c235
   14000c296:	hlt    
   14000c297:	repnz mov al,0x7
   14000c29a:	pop    rcx
   14000c29b:	mov    dl,0x10
   14000c29d:	mov    eax,0xf657415
   14000c2a2:	(bad)  
   14000c2a3:	mov    dl,0x27
   14000c2a5:	ret    
   14000c2a6:	cmp    eax,0xb397f09c
   14000c2ab:	add    eax,0xce304a52
   14000c2b0:	and    ebx,esi
   14000c2b2:	sbb    al,0x69
   14000c2b4:	xchg   edx,eax
   14000c2b5:	and    BYTE PTR [rsi-0x56],dl
   14000c2b8:	mov    al,0x18
   14000c2ba:	sub    BYTE PTR [rbp-0x6ce08310],ah
   14000c2c0:	push   rbx
   14000c2c1:	push   rbx
   14000c2c2:	cwde   
   14000c2c3:	(bad)  
   14000c2c4:	sahf   
   14000c2c5:	(bad)  
   14000c2c6:	mov    ecx,0xe831e70b
   14000c2cb:	not    ecx
   14000c2cd:	in     eax,dx
   14000c2ce:	jbe    0x14000c300
   14000c2d0:	cmp    eax,0x7f618b33
   14000c2d5:	adc    BYTE PTR [rdi-0x41],0xff
   14000c2d9:	(bad)  
   14000c2da:	jb     0x14000c26d
   14000c2dc:	shl    DWORD PTR [rbx+0xc],0x8d
   14000c2e0:	sbb    ax,0xd3d3
   14000c2e4:	rcr    DWORD PTR [rax-0x5cbe6662],cl
   14000c2ea:	fld    DWORD PTR [rdx+rsi*1+0x4c]
   14000c2ee:	icebp  
   14000c2ef:	fidivr WORD PTR [rbx-0x82a3fc1]
   14000c2f5:	(bad)  
   14000c2f6:	mov    dil,0xdf
   14000c2f9:	add    ecx,DWORD PTR [rax-0x4103dca]
   14000c2ff:	test   al,0xd7
   14000c301:	fwait
   14000c302:	loopne 0x14000c2d8
   14000c304:	rex.XB cmp al,0x18
   14000c307:	cwde   
   14000c308:	rcl    BYTE PTR [rdx+0x4a],cl
   14000c30b:	xchg   ecx,eax
   14000c30c:	or     DWORD PTR gs:[rax],edi
   14000c30f:	or     edx,DWORD PTR [rax]
   14000c311:	xor    eax,0xd2656803
   14000c316:	rex.RXB pop r10
   14000c318:	add    edi,DWORD PTR [rsi-0x6fcbbeb1]
   14000c31e:	or     eax,0x3ab56087
   14000c323:	movabs al,ds:0x909bbbb41dfdfa15
   14000c32c:	push   rdx
   14000c32d:	xor    DWORD PTR [rdx],0xa8285a0f
   14000c333:	fdiv   st(2),st
   14000c335:	frstor [rax-0x51f6dd10]
   14000c33b:	adc    al,0x8
   14000c33d:	repz rex mov ecx,0x2835c207
   14000c344:	(bad)  
   14000c345:	es (bad) 
   14000c347:	rcr    DWORD PTR [rdx],1
   14000c349:	test   BYTE PTR [rbx-0x60],bh
   14000c34c:	retf   0xde56
   14000c34f:	add    DWORD PTR [rbx],0x54b10ccc
   14000c355:	add    BYTE PTR [rax],bh
   14000c357:	add    eax,0xd0e0d684
   14000c35c:	loopne 0x14000c31c
   14000c35e:	add    dl,BYTE PTR [rdi-0x35afc52a]
   14000c364:	adc    al,0x88
   14000c366:	in     al,0xa6
   14000c368:	ret    0xcb50
   14000c36b:	sbb    al,0x4a
   14000c36d:	sub    BYTE PTR [rax],ch
   14000c36f:	xchg   ebp,eax
   14000c370:	add    eax,DWORD PTR [rdx+0x0]
   14000c373:	cdq    
   14000c374:	adc    DWORD PTR [rax-0x1c],edi
   14000c377:	sbb    DWORD PTR [rsi+rbp*1+0x6c],edx
   14000c37b:	rex.WR loopne 0x14000c39e
   14000c37e:	add    eax,ebx
   14000c380:	idiv   BYTE PTR [rsi]
   14000c382:	xchg   ebx,eax
   14000c383:	imul   eax,DWORD PTR [rcx],0xa8a66101
   14000c389:	xchg   BYTE PTR [rax-0x47fcd7e],al
   14000c38f:	(bad)  
   14000c390:	mov    BYTE PTR [rsi],al
   14000c392:	sub    BYTE PTR [rbx],ah
   14000c394:	lock cmp DWORD PTR [rbx+0x2e],eax
   14000c398:	jae    0x14000c412
   14000c39a:	mov    WORD PTR [rcx-0x35475987],es
   14000c3a0:	jrcxz  0x14000c3ae
   14000c3a2:	mov    al,0xa9
   14000c3a4:	mov    ch,0xa8
   14000c3a6:	out    0x23,al
   14000c3a8:	int3   
   14000c3a9:	jae    0x14000c3bb
   14000c3ab:	lods   eax,DWORD PTR ds:[rsi]
   14000c3ac:	sar    DWORD PTR [rip+0xffffffffd588ce0a],0xa0        # 0x1158991bd
   14000c3b3:	or     DWORD PTR [rbx+rbx*2],edi
   14000c3b6:	lods   eax,DWORD PTR ds:[rsi]
   14000c3b7:	(bad)  
   14000c3b8:	mov    bl,0x1c
   14000c3ba:	mov    ecx,0xddded148
   14000c3bf:	xor    edi,ecx
   14000c3c1:	jl     0x14000c370
   14000c3c3:	and    dl,dl
   14000c3c5:	(bad)  
   14000c3c6:	mov    edx,es
   14000c3c8:	or     ah,BYTE PTR [rbx]
   14000c3ca:	mov    BYTE PTR [rax+riz*4-0x4f],bl
   14000c3ce:	mov    eax,0x758dad84
   14000c3d3:	add    al,0x5e
   14000c3d5:	mov    cl,bh
   14000c3d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c3d8:	add    eax,0xa26c6cec
   14000c3dd:	fimul  WORD PTR [rcx+rdx*4+0xe]
   14000c3e1:	xchg   BYTE PTR [rax],ah
   14000c3e3:	xchg   esp,eax
   14000c3e4:	sbb    BYTE PTR [rdx],dh
   14000c3e6:	and    DWORD PTR [rbx+rdi*2],edx
   14000c3e9:	mov    ebx,0xd9ddd83b
   14000c3ee:	rex.RX
   14000c3ef:	es push rbx
   14000c3f1:	xor    al,0x67
   14000c3f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c3f4:	jno    0x14000c3f4
   14000c3f6:	cld    
   14000c3f7:	jns    0x14000c445
   14000c3f9:	rex.WRXB
   14000c3fa:	rex.WRB fnstcw WORD PTR [r14+0x7a92e30c]
   14000c401:	pushf  
   14000c402:	and    esi,DWORD PTR [rbp+rdi*4-0x30a551fa]
   14000c409:	rex.WRB pop r13
   14000c40b:	bnd jl 0x14000c42d
   14000c40e:	xchg   ecx,eax
   14000c40f:	rex.WRB
   14000c410:	repz xor eax,0x2006261a
   14000c416:	ins    DWORD PTR es:[rdi],dx
   14000c417:	sub    esi,esp
   14000c419:	cmp    cl,al
   14000c41b:	(bad)  
   14000c41c:	rex.WR clc 
   14000c41e:	and    DWORD PTR [rax],0xffffffc0
   14000c421:	repnz test eax,0x9b9c5853
   14000c427:	ret    
   14000c428:	jnp    0x14000c401
   14000c42a:	scas   al,BYTE PTR es:[rdi]
   14000c42b:	loope  0x14000c407
   14000c42d:	(bad)  
   14000c42e:	(bad)  
   14000c42f:	(bad)  
   14000c430:	(bad)  
   14000c431:	mov    edi,0x5e3bb2df
   14000c436:	jnp    0x14000c473
   14000c438:	add    DWORD PTR [rdi],edi
   14000c43a:	outs   dx,BYTE PTR ds:[rsi]
   14000c43b:	jae    0x14000c48c
   14000c43d:	ds push rdx
   14000c43f:	adc    BYTE PTR [rsp+rax*1-0x29],dl
   14000c443:	repz fdivr QWORD PTR [rcx-0x2fa9ace9]
   14000c44a:	push   rbx
   14000c44b:	sub    esi,esp
   14000c44d:	mov    cl,0x7d
   14000c44f:	popf   
   14000c450:	fsub   DWORD PTR [rdi+0x51]
   14000c453:	and    al,BYTE PTR [rdx+0x8606bb2]
   14000c459:	(bad)  
   14000c45a:	scas   eax,DWORD PTR es:[rdi]
   14000c45b:	(bad)  [rsi-0x30bc52d5]
   14000c461:	jrcxz  0x14000c3e8
   14000c463:	lahf   
   14000c464:	pop    rdi
   14000c465:	out    dx,al
   14000c466:	push   rsp
   14000c467:	or     ebp,esp
   14000c469:	push   rax
   14000c46a:	xchg   DWORD PTR [rdx+0x14],ebx
   14000c46d:	pop    r10
   14000c46f:	ins    DWORD PTR es:[rdi],dx
   14000c470:	in     eax,dx
   14000c471:	outs   dx,BYTE PTR ds:[rsi]
   14000c472:	mov    edx,DWORD PTR [rsi+riz*4-0x351150da]
   14000c479:	cmp    eax,0x58182979
   14000c47e:	fadd   st(1),st
   14000c480:	xchg   edi,eax
   14000c481:	repz std 
   14000c483:	iret   
   14000c484:	rex.WXB (bad) 
   14000c486:	sbb    DWORD PTR [rbx+0x8b2ea80],0xffffffb9
   14000c48d:	cmp    al,bl
   14000c48f:	retf   
   14000c490:	out    dx,eax
   14000c491:	fimul  WORD PTR [rbx+0x492f432c]
   14000c497:	and    BYTE PTR [rbp-0x72],ah
   14000c49a:	xor    BYTE PTR [rax+rsi*4-0x61eb158c],cl
   14000c4a1:	jle    0x14000c499
   14000c4a3:	pop    rcx
   14000c4a4:	xor    al,0x1b
   14000c4a6:	lea    esp,[rdx]
   14000c4a8:	xchg   esi,eax
   14000c4a9:	shr    dh,1
   14000c4ab:	jbe    0x14000c47e
   14000c4ad:	(bad)  
   14000c4af:	ret    
   14000c4b0:	out    dx,al
   14000c4b1:	(bad)  
   14000c4b2:	ss ss mov dh,0xdb
   14000c4b6:	mov    eax,0x2a0d6775
   14000c4bb:	iret   
   14000c4bc:	mov    cl,0xb5
   14000c4be:	mov    esi,0x7b8db58d
   14000c4c3:	movabs al,ds:0x405a661023f7c384
   14000c4cc:	sbb    ecx,DWORD PTR [rbp-0x78c187b7]
   14000c4d2:	xchg   edx,eax
   14000c4d3:	sbb    dl,BYTE PTR [rax+rsi*2+0x239684b]
   14000c4da:	(bad)  
   14000c4db:	(bad)  
   14000c4dc:	(bad)  
   14000c4dd:	sbb    edx,edx
   14000c4df:	xor    al,0x81
   14000c4e1:	push   rsp
   14000c4e2:	adc    bh,BYTE PTR [rsi]
   14000c4e4:	xadd   DWORD PTR [rax],ebp
   14000c4e7:	mov    bl,0x66
   14000c4e9:	stos   BYTE PTR es:[rdi],al
   14000c4ea:	xor    dh,BYTE PTR [rbp-0x22]
   14000c4ed:	mov    esi,0xdbad8d8f
   14000c4f2:	mov    bl,ah
   14000c4f4:	(bad)  
   14000c4f5:	mov    eax,0x21e3c1e7
   14000c4fa:	repnz xor al,0x86
   14000c4fd:	rex.RXB add BYTE PTR [r14+0x2],r8b
   14000c501:	test   al,0x2c
   14000c503:	xor    esp,DWORD PTR [rip+0xffffffffd10109be]        # 0x11101cec7
   14000c509:	adc    al,0xd4
   14000c50b:	xchg   ebx,eax
   14000c50c:	and    BYTE PTR [rdx+0x43],bl
   14000c50f:	rex.WB (bad) 
   14000c511:	or     rax,0x525a03e6
   14000c517:	push   rax
   14000c518:	rex.WRB
   14000c519:	rex cmp eax,0x4602680e
   14000c51f:	pop    rbp
   14000c520:	lahf   
   14000c521:	add    al,BYTE PTR [rax-0x48]
   14000c524:	icebp  
   14000c525:	mov    ebp,0x60180841
   14000c52a:	(bad)  
   14000c52b:	(bad)  
   14000c52c:	or     BYTE PTR [rdi+0x4b9e4106],bh
   14000c532:	push   0xffffffffad99a0aa
   14000c537:	jl     0x14000c52d
   14000c539:	adc    eax,0x52d05488
   14000c53e:	or     DWORD PTR [rcx+0x9],0x95102b9d
   14000c545:	add    edx,DWORD PTR [rdx-0x7e]
   14000c548:	or     rax,rbx
   14000c54b:	ins    BYTE PTR es:[rdi],dx
   14000c54c:	add    DWORD PTR [rdx+0xa0a07e9],ecx
   14000c552:	(bad)  
   14000c553:	lea    eax,[rdx]
   14000c555:	xor    DWORD PTR [rcx],esp
   14000c557:	jge    0x14000c53f
   14000c559:	sbb    ebx,edx
   14000c55b:	fsubrp st(7),st
   14000c55d:	(bad)  
   14000c55f:	fcom   DWORD PTR [rbx+0x70]
   14000c562:	push   0x2c
   14000c564:	sub    BYTE PTR [rbp+0x548ce34d],ch
   14000c56a:	add    dl,BYTE PTR [rax+rax*4]
   14000c56d:	out    0x33,eax
   14000c56f:	in     al,0x79
   14000c571:	(bad)  
   14000c572:	or     eax,0x16b73e65
   14000c577:	rex.RX sbb BYTE PTR [rdx+0x2d2a9e0],r11b
   14000c57e:	add    al,0x80
   14000c580:	(bad)  
   14000c581:	sbb    BYTE PTR [rax],cl
   14000c583:	or     BYTE PTR [rax+0x4d],ch
   14000c586:	and    edi,ecx
   14000c588:	xor    cl,BYTE PTR [rdi+rcx*2+0x4c]
   14000c58c:	and    BYTE PTR [rcx+0x12],cl
   14000c58f:	push   rax
   14000c590:	add    BYTE PTR [rbx+0x66ad1f5e],al
   14000c596:	retf   
   14000c597:	(bad)  
   14000c598:	(bad)  
   14000c599:	out    0x39,eax
   14000c59b:	or     BYTE PTR [rcx],dh
   14000c59d:	test   DWORD PTR [rax-0x73],esp
   14000c5a0:	rex.RX adc r13d,DWORD PTR [rbp+0x6881689]
   14000c5a7:	cmp    BYTE PTR [rcx],ah
   14000c5a9:	nop
   14000c5aa:	and    al,ch
   14000c5ac:	movabs al,ds:0x8671801f6b8dc03f
   14000c5b5:	sub    ecx,DWORD PTR [rdi+0x7d]
   14000c5b8:	or     bl,BYTE PTR [rdi-0x63a61983]
   14000c5be:	cmp    esi,DWORD PTR [rbx-0x5a]
   14000c5c1:	push   0x4094a677
   14000c5c6:	mov    ah,bl
   14000c5c8:	or     BYTE PTR [rbp+rcx*1+0x7db685f0],bh
   14000c5cf:	cmp    al,dh
   14000c5d1:	add    edx,DWORD PTR [rax+0x46]
   14000c5d4:	adc    eax,ebx
   14000c5d6:	test   eax,0xb6a6ee4d
   14000c5db:	rex.WRX
   14000c5dc:	lock sti 
   14000c5de:	and    eax,ecx
   14000c5e0:	cmp    eax,0xe165e027
   14000c5e5:	sbb    al,0xd
   14000c5e7:	repnz rex.WRB iretq 
   14000c5ea:	int3   
   14000c5eb:	loopne 0x14000c5cf
   14000c5ed:	cdq    
   14000c5ee:	xor    ebx,DWORD PTR [rax]
   14000c5f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c5f1:	sub    DWORD PTR [rsi-0x2f683206],edi
   14000c5f7:	jmp    0xf4c35272
   14000c5fc:	repnz xor cl,dh
   14000c5ff:	add    ch,BYTE PTR [rax]
   14000c601:	imul   esi,DWORD PTR [rbp+0x4a],0x69
   14000c605:	ror    DWORD PTR [rax],1
   14000c607:	hlt    
   14000c608:	and    BYTE PTR [rcx+0x2f],ah
   14000c60b:	or     edi,DWORD PTR [rcx+rdi*2+0x5b]
   14000c60f:	sub    BYTE PTR [rbp+0x87f418],ah
   14000c615:	movabs al,ds:0xad8bd7bf6ce6cd1b
   14000c61e:	loopne 0x14000c687
   14000c620:	add    BYTE PTR [rbx+rbp*1],bh
   14000c623:	cld    
   14000c624:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c625:	jo     0x14000c60c
   14000c627:	(bad)  
   14000c628:	hlt    
   14000c629:	pop    rcx
   14000c62a:	adc    DWORD PTR [rbx],edx
   14000c62c:	loopne 0x14000c62e
   14000c62e:	mov    al,0xb6
   14000c630:	mov    esi,0xc5d68351
   14000c635:	add    cl,0xb2
   14000c638:	jg     0x14000c609
   14000c63a:	sbb    BYTE PTR [rbx+0xe],al
   14000c63d:	adc    al,0xdd
   14000c63f:	pop    rdx
   14000c640:	mov    esi,0x6ca96d
   14000c645:	nop
   14000c646:	mov    ecx,0x6dcd0129
   14000c64b:	fldcw  WORD PTR [rax-0x47]
   14000c64e:	push   rdi
   14000c64f:	fst    QWORD PTR [rcx]
   14000c651:	xor    BYTE PTR [rbx],0xfd
   14000c654:	jae    0x14000c624
   14000c656:	mul    ebx
   14000c658:	add    DWORD PTR [rsi+0x4805ca13],esi
   14000c65e:	rex.WR pop rbp
   14000c660:	mov    ebp,0x28ebb082
   14000c665:	jmp    0x14000c6d5
   14000c667:	cmp    BYTE PTR [rbx],ch
   14000c669:	rex.R push rax
   14000c66b:	mov    bh,BYTE PTR [rdx-0x5d]
   14000c66e:	cmp    DWORD PTR [rcx+0x5d9c45c5],0x56bd465e
   14000c678:	xor    ebp,DWORD PTR [rsi]
   14000c67a:	test   BYTE PTR [rip+0xffffffffd387ce61],bh        # 0x1138894e1
   14000c680:	(bad)  
   14000c681:	rex.WRX adc al,0x25
   14000c684:	movabs eax,ds:0x9821f87c6e0e9d7b
   14000c68d:	out    dx,eax
   14000c68e:	movabs eax,ds:0x9a4138d79699aad6
   14000c697:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c698:	push   rax
   14000c699:	rex.WX movabs al,ds:0xc21ee3d6936dedd
   14000c6a3:	and    dh,BYTE PTR [rax-0x36]
   14000c6a6:	pop    rsp
   14000c6a7:	jae    0x14000c6c9
   14000c6a9:	test   BYTE PTR [rax-0x5f],cl
   14000c6ac:	add    DWORD PTR [rax+0x41],edi
   14000c6af:	fs sub al,bh
   14000c6b2:	xchg   BYTE PTR [rax],r12b
   14000c6b5:	push   0x22
   14000c6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14000c6b9:	mov    ch,0x76
   14000c6bb:	jnp    0x14000c6a8
   14000c6bd:	xchg   BYTE PTR ss:[rcx+0x1f],dh
   14000c6c1:	rex.WX
   14000c6c2:	rex.WB mov BYTE PTR [r11+riz*1-0x1ad7fb09],dl
   14000c6ca:	mov    dh,0x19
   14000c6cc:	adc    QWORD PTR [rax+0xf],0x3cc08fdc
   14000c6d4:	or     DWORD PTR [rax+0xd],ecx
   14000c6d7:	retf   0x687c
   14000c6da:	pop    rdi
   14000c6db:	add    DWORD PTR [rdi],0x866e743e
   14000c6e1:	xchg   esp,eax
   14000c6e2:	adc    al,0xa2
   14000c6e5:	rex retf 0xab14
   14000c6e9:	adc    BYTE PTR [rax],dl
   14000c6eb:	data16 or ah,BYTE PTR [rbp+0x60]
   14000c6ef:	mov    ch,0x19
   14000c6f1:	mov    BYTE PTR [rcx],bl
   14000c6f3:	(bad)  
   14000c6f4:	loop   0x14000c747
   14000c6f6:	or     al,BYTE PTR [rcx]
   14000c6f8:	(bad)  
   14000c6f9:	rex.RB int3 
   14000c6fb:	ss jb  0x14000c6c8
   14000c6fe:	movabs al,ds:0xd53434a50552803c
   14000c707:	(bad)  
   14000c708:	(bad)  
   14000c709:	enter  0x2835,0xd7
   14000c70d:	and    ah,dl
   14000c70f:	hlt    
   14000c710:	(bad)  
   14000c711:	adc    BYTE PTR [rbp-0x56794b3f],ch
   14000c717:	outs   dx,DWORD PTR ds:[rsi]
   14000c718:	push   rsi
   14000c719:	(bad)  
   14000c71a:	cld    
   14000c71b:	rol    BYTE PTR cs:[rax+0x22e88a04],cl
   14000c722:	(bad)  
   14000c723:	movabs al,ds:0xc1a210739f046e64
   14000c72c:	sbb    BYTE PTR [rcx],al
   14000c72e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c72f:	add    BYTE PTR [rdi+0x4],ah
   14000c732:	push   rdx
   14000c733:	or     al,BYTE PTR [rax]
   14000c735:	sbb    dh,ch
   14000c737:	enter  0x5308,0x58
   14000c73b:	rep lods eax,DWORD PTR ds:[rsi]
   14000c73d:	jmp    0xc6a90770
   14000c742:	(bad)  
   14000c743:	xor    BYTE PTR [rbx-0x10],dl
   14000c746:	xchg   ebx,eax
   14000c747:	addr32 mov al,ds:0x1589239c
   14000c74d:	cld    
   14000c74e:	and    BYTE PTR [rdx],al
   14000c750:	test   DWORD PTR [rsi+0x3c],eax
   14000c753:	sbb    BYTE PTR [rax],bl
   14000c755:	(bad)  
   14000c756:	jmp    0xefcc22ce
   14000c75b:	shr    DWORD PTR [rcx],0x43
   14000c75e:	in     al,0x7
   14000c760:	mov    dh,0x22
   14000c762:	push   rdx
   14000c763:	mov    cl,r12b
   14000c766:	adc    BYTE PTR [rbx+0x5cca3a0d],cl
   14000c76c:	movabs al,ds:0x95ecd3638d23af51
   14000c775:	or     al,0xf0
   14000c777:	hlt    
   14000c778:	mov    ecx,edi
   14000c77a:	loope  0x14000c705
   14000c77c:	(bad)  
   14000c77d:	lahf   
   14000c77e:	(bad)  
   14000c77f:	mov    ecx,0xaf51a7d3
   14000c784:	xlat   BYTE PTR ds:[rbx]
   14000c785:	or     ah,BYTE PTR [rip+0xffffffffd711aee2]        # 0x11712766d
   14000c78b:	rex.X sbb al,0x6
   14000c78e:	cmp    DWORD PTR [rcx-0x43f26041],0x9eeef1b9
   14000c798:	out    0xa1,eax
   14000c79a:	shr    DWORD PTR [rax-0x1869dae5],1
   14000c7a0:	call   0xf4e94299
   14000c7a5:	fcmovnu st,st(0)
   14000c7a7:	mov    ch,0x33
   14000c7a9:	neg    DWORD PTR [rsi+rsi*1-0x35]
   14000c7ad:	or     ebx,ebp
   14000c7af:	jge    0x14000c81a
   14000c7b1:	cmp    BYTE PTR [rbx-0x3a],bl
   14000c7b4:	jnp    0x14000c7ac
   14000c7b6:	hlt    
   14000c7b7:	imul   ecx,esp,0xade24e4c
   14000c7bd:	neg    esi
   14000c7bf:	ret    
   14000c7c0:	xchg   edi,edx
   14000c7c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c7c3:	mov    cs,WORD PTR [rip+0xffffffff8f4a31d2]        # 0xcf4af99b
   14000c7c9:	(bad)  
   14000c7ca:	out    dx,al
   14000c7cb:	movabs ds:0x796eb71f86987dbf,eax
   14000c7d4:	mov    ecx,0x8788c7eb
   14000c7d9:	ret    
   14000c7da:	add    BYTE PTR [rsi-0x38],al
   14000c7dd:	cmp    DWORD PTR [rax+riz*8-0x7d885ec5],ecx
   14000c7e4:	pop    rsi
   14000c7e5:	(bad)  
   14000c7e6:	(bad)  
   14000c7e7:	sub    bl,bh
   14000c7e9:	mov    ecx,0x7602fd82
   14000c7ee:	fucomi st,st(5)
   14000c7f0:	(bad)  
   14000c7f1:	(bad)  
   14000c7f2:	(bad)  
   14000c7f3:	xchg   esp,eax
   14000c7f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c7f5:	(bad)  
   14000c7f6:	cmp    edx,ebx
   14000c7f8:	fucompp 
   14000c7fa:	(bad)  
   14000c7fb:	add    BYTE PTR ss:[rax],dl
   14000c7fe:	outs   dx,BYTE PTR gs:[rsi]
   14000c800:	movabs ds:0x6b44d93b3c2185e8,al
   14000c809:	(bad)  
   14000c80a:	(bad)  
   14000c80b:	mov    ?,WORD PTR [rax-0x32]
   14000c80e:	test   BYTE PTR [rax-0x1a63f371],bh
   14000c814:	loopne 0x14000c862
   14000c816:	and    BYTE PTR [rsi-0x39],ah
   14000c819:	and    bh,BYTE PTR [rbx+0x442130ce]
   14000c81f:	xchg   ecx,eax
   14000c820:	ds xchg edx,eax
   14000c822:	jns    0x14000c882
   14000c824:	add    al,0x7
   14000c826:	and    edi,DWORD PTR [rbx]
   14000c828:	adc    al,0xc2
   14000c82a:	(bad)  
   14000c82b:	(bad)  
   14000c82c:	mov    ebx,0x77375696
   14000c831:	outs   dx,DWORD PTR ds:[rsi]
   14000c832:	mov    ah,0xea
   14000c834:	xor    BYTE PTR [rbx],dl
   14000c836:	add    bl,BYTE PTR [rbp-0x1088f0a2]
   14000c83c:	fadd   st(1),st
   14000c83e:	jo     0x14000c870
   14000c840:	shl    ah,0xcc
   14000c843:	sub    al,0xa6
   14000c845:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c846:	addr32 rex.WR (bad) 
   14000c84a:	out    dx,al
   14000c84b:	rex.WXB adc al,r15b
   14000c84e:	sbb    BYTE PTR [rsi],cl
   14000c850:	xchg   al,ch
   14000c852:	jbe    0x14000c80e
   14000c854:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c855:	adc    al,0xb5
   14000c857:	fild   WORD PTR [rdi+0x17be0452]
   14000c85d:	and    cl,bl
   14000c85f:	(bad)  
   14000c860:	rex.R
   14000c861:	or     BYTE PTR [r15],dil
   14000c864:	push   0x31b9e740
   14000c869:	xlat   BYTE PTR ds:[rbx]
   14000c86a:	cdq    
   14000c86b:	addr32 retf 0xa578
   14000c86f:	rcr    BYTE PTR [rbp+0x4e201fd5],0x86
   14000c876:	or     BYTE PTR [rdx-0x1fab5be6],al
   14000c87c:	fadd   QWORD PTR [rbx]
   14000c87e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c87f:	mov    ah,0x68
   14000c881:	(bad)  
   14000c882:	push   rdx
   14000c883:	mov    ecx,0x321ca504
   14000c888:	adc    esp,DWORD PTR [rax-0x1bb0ffa2]
   14000c88e:	(bad)  
   14000c88f:	sahf   
   14000c890:	cmovg  ebx,DWORD PTR [rcx]
   14000c893:	and    DWORD PTR [rsi+rdx*8+0x1a],esp
   14000c897:	movabs al,ds:0x57c11b441a5287dc
   14000c8a0:	push   rdx
   14000c8a1:	(bad)  
   14000c8a2:	clc    
   14000c8a3:	ds mov ah,0x54
   14000c8a6:	and    BYTE PTR [rdx+0x109cff19],cl
   14000c8ac:	shl    ebx,cl
   14000c8ae:	rex.W int 0x89
   14000c8b1:	push   rdx
   14000c8b2:	(bad)  
   14000c8b3:	adc    al,0x1b
   14000c8b5:	push   rcx
   14000c8b6:	imul   ecx,DWORD PTR [rdx-0x7b],0xd6906129
   14000c8bd:	lods   eax,DWORD PTR ds:[rsi]
   14000c8be:	movabs ds:0xfb3b71806895e4b6,eax
   14000c8c7:	rex
   14000c8c8:	rex.WX jae 0x14000c84d
   14000c8cb:	mov    DWORD PTR [rsi],esi
   14000c8cd:	add    eax,0xf254c450
   14000c8d2:	adc    DWORD PTR [rdx+0x4d],eax
   14000c8d5:	movabs al,ds:0x5003c01415f0e6d4
   14000c8de:	rex.RX add BYTE PTR [rdx-0x67603bb3],r13b
   14000c8e5:	fbld   TBYTE PTR [rax+0x5191dbb6]
   14000c8eb:	add    ah,BYTE PTR [rdx-0x396aca34]
   14000c8f1:	add    cl,BYTE PTR [rcx+rdx*2-0x778a15cc]
   14000c8f8:	cmp    al,0x83
   14000c8fa:	iret   
   14000c8fb:	sbb    DWORD PTR [rax],edi
   14000c8fd:	and    BYTE PTR gs:[rcx+0x4e096807],al
   14000c904:	or     BYTE PTR [rax],cl
   14000c906:	jb     0x14000c980
   14000c908:	mov    WORD PTR [rbx],fs
   14000c90a:	hlt    
   14000c90b:	add    esp,DWORD PTR [rcx+rsi*8+0xc8b910]
   14000c912:	test   eax,0x35a0558c
   14000c917:	xchg   bl,al
   14000c919:	(bad)  
   14000c91a:	adc    esp,edi
   14000c91c:	or     al,0xa3
   14000c91e:	or     BYTE PTR [rcx-0x6e],bh
   14000c921:	movabs ds:0x10f11045aa216f51,al
   14000c92a:	mov    bh,0xb6
   14000c92c:	mov    bh,0xb0
   14000c92e:	mov    bh,0xb7
   14000c930:	lea    esp,[rbp-0x330fd8ad]
   14000c936:	mov    bl,0xcf
   14000c938:	loop   0x14000c90c
   14000c93a:	stc    
   14000c93b:	jae    0x14000c945
   14000c93d:	ret    
   14000c93e:	mov    al,0x10
   14000c940:	sub    BYTE PTR [rbx+rcx*8],0x8a
   14000c944:	fcmovnb st,st(3)
   14000c946:	test   DWORD PTR [rcx+0x68],esp
   14000c949:	push   rdx
   14000c94a:	jl     0x14000c8f1
   14000c94c:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   14000c94e:	rol    BYTE PTR [rsi-0x1],0xc3
   14000c952:	shl    ah,1
   14000c954:	(bad)  
   14000c955:	jnp    0x14000c8f3
   14000c957:	rex.XB sub esp,DWORD PTR [r13-0x3a]
   14000c95b:	scas   al,BYTE PTR es:[rdi]
   14000c95c:	in     eax,dx
   14000c95d:	out    dx,al
   14000c95e:	movabs ds:0x61dec0a5e471076d,al
   14000c967:	jne    0x14000c95e
   14000c969:	rex.WX
   14000c96a:	rex.WX
   14000c96b:	rex.WR iretq 
   14000c96d:	int3   
   14000c96e:	loopne 0x14000c962
   14000c970:	stc    
   14000c971:	repz push 0xfffffffff2f87af7
   14000c977:	push   rdi
   14000c978:	mov    edi,0xccf4e8e
   14000c97d:	stos   DWORD PTR es:[rdi],eax
   14000c97e:	loope  0x14000c90c
   14000c980:	fsubrp st(7),st
   14000c982:	xlat   BYTE PTR ds:[rbx]
   14000c983:	(bad)  
   14000c984:	enter  0x3fc7,0x4a
   14000c988:	loopne 0x14000c955
   14000c98a:	xor    ah,bh
   14000c98c:	movabs al,ds:0x9c738c70b9dc0a6d
   14000c995:	cmp    eax,0xbf578cb3
   14000c99a:	inc    DWORD PTR [rsi+0xe017853]
   14000c9a0:	or     bh,BYTE PTR [rbp+0x3fed3a49]
   14000c9a6:	pop    rsp
   14000c9a7:	push   rax
   14000c9a8:	nop
   14000c9a9:	sar    DWORD PTR [rax+0x630701],0x9f
   14000c9b0:	mov    esi,0xe3ff38f2
   14000c9b5:	push   rdi
   14000c9b6:	inc    ah
   14000c9b8:	out    0x3d,al
   14000c9ba:	rex.WRB (bad) 
   14000c9bc:	ror    BYTE PTR [rbp+rbx*2+0x11],0x85
   14000c9c1:	jo     0x14000c97c
   14000c9c3:	gs scas al,BYTE PTR es:[rdi]
   14000c9c5:	imul   eax,DWORD PTR [rdi+0x29],0x66c3a365
   14000c9cc:	js     0x14000c9f3
   14000c9ce:	and    eax,0x3d977504
   14000c9d3:	adc    dl,al
   14000c9d5:	add    al,0x89
   14000c9d7:	fcomp  QWORD PTR [rip+0xffffffff9fcfad7b]        # 0xdfd07758
   14000c9dd:	(bad)  [rdx+0x30]
   14000c9e0:	sub    DWORD PTR [rbp-0x5d],ebp
   14000c9e3:	xchg   r10,rax
   14000c9e5:	adc    al,0x6c
   14000c9e7:	jmp    0x14000c98b
   14000c9e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c9ea:	out    dx,al
   14000c9eb:	add    al,0x9a
   14000c9ed:	mov    BYTE PTR [rbp+0x1d],ch
   14000c9f0:	xor    DWORD PTR [rip+0xffffffffbaa944e9],0x87f17330        # 0xfaaa0ee3
   14000c9fa:	push   rdx
   14000c9fb:	pop    rdx
   14000c9fc:	xor    cl,BYTE PTR [rsi-0x4a11139d]
   14000ca02:	mov    cl,0xb6
   14000ca04:	mov    cl,0x81
   14000ca06:	(bad)  
   14000ca07:	cmc    
   14000ca08:	jne    0x14000ca6e
   14000ca0a:	imul   ecx,DWORD PTR [rdx],0xc8ce0edf
   14000ca10:	test   DWORD PTR [rax-0x53],eax
   14000ca13:	pop    rsi
   14000ca14:	(bad)  
   14000ca15:	out    dx,al
   14000ca16:	cld    
   14000ca17:	ret    
   14000ca18:	ins    DWORD PTR es:[rdi],dx
   14000ca19:	sbb    al,0x42
   14000ca1b:	pop    rax
   14000ca1c:	(bad)  
   14000ca1d:	data16 shl BYTE PTR [rdi],1
   14000ca20:	fisub  DWORD PTR [rax]
   14000ca22:	(bad)  
   14000ca23:	or     al,0x91
   14000ca25:	and    al,0x19
   14000ca27:	adc    dl,cl
   14000ca29:	ret    
   14000ca2a:	mov    al,0xd7
   14000ca2c:	or     eax,0x14
   14000ca2f:	jl     0x14000ca60
   14000ca31:	rex.X lods eax,DWORD PTR ds:[rsi]
   14000ca33:	(bad)  
   14000ca34:	rol    BYTE PTR [rdi+riz*1],0xd8
   14000ca38:	(bad)  
   14000ca3a:	sub    BYTE PTR [rdx+0x5d],cl
   14000ca3d:	xor    esp,DWORD PTR [rbp+0x62]
   14000ca40:	addr32 push rdx
   14000ca42:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ca44:	mov    ecx,0xbe0ca504
   14000ca49:	scas   eax,DWORD PTR es:[rdi]
   14000ca4a:	rcr    BYTE PTR [rax-0x2cfd0efc],0x2c
   14000ca51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ca52:	xchg   esp,eax
   14000ca53:	or     eax,edi
   14000ca55:	and    edx,r15d
   14000ca58:	xor    BYTE PTR [rbp+0x49],cl
   14000ca5b:	retf   0xe898
   14000ca5e:	fcom   QWORD PTR [rdi+0x60]
   14000ca61:	sahf   
   14000ca62:	jno    0x14000caa5
   14000ca64:	mov    BYTE PTR [rdi-0x16],ah
   14000ca67:	fnstenv [rbp-0x7e73afde]
   14000ca6d:	rex.WB or rax,0x11c74d8
   14000ca73:	sub    DWORD PTR [rbp+rdx*4+0x8a52b3a],eax
   14000ca7a:	jno    0x14000cae6
   14000ca7c:	push   rax
   14000ca7d:	gs pop rdx
   14000ca7f:	lahf   
   14000ca80:	mov    DWORD PTR [rdx-0x5613d68f],eax
   14000ca86:	xor    BYTE PTR gs:[rdi],dl
   14000ca89:	es xchg ebx,eax
   14000ca8b:	cmp    ax,0x14d7
   14000ca8f:	rex.WB cdqe 
   14000ca91:	shl    esi,1
   14000ca93:	ficom  DWORD PTR [rsi-0xd]
   14000ca96:	sub    BYTE PTR [rcx],ch
   14000ca98:	and    DWORD PTR [rip+0x4df331],esi        # 0x1404ebdcf
   14000ca9e:	adc    BYTE PTR [rbp-0x20],cl
   14000caa1:	push   rcx
   14000caa2:	pop    rsi
   14000caa3:	xor    al,0x3c
   14000caa5:	adc    DWORD PTR [rdx-0x462a5ef5],ebp
   14000caab:	(bad)  
   14000caac:	gs xor bh,ah
   14000caaf:	nop
   14000cab0:	add    dh,BYTE PTR [rdx]
   14000cab2:	xor    edx,DWORD PTR [rbp-0x5758e673]
   14000cab8:	xlat   BYTE PTR ds:[rbx]
   14000cab9:	rex.WR push 0x37
   14000cabc:	lea    edx,[rbx]
   14000cabe:	test   BYTE PTR [rsi+0x23d7a87],bh
   14000cac4:	mov    ah,0x46
   14000cac6:	movabs ds:0x6a7075ea08252425,al
   14000cacf:	fsubr  QWORD PTR [rdi-0x20f05f1f]
   14000cad5:	repz sub BYTE PTR [r9-0x24],al
   14000cada:	(bad)  
   14000cadb:	movabs al,ds:0xb8a69fa28291d51e
   14000cae4:	imul   dh
   14000cae6:	pop    rbx
   14000cae7:	enter  0x18b2,0xe7
   14000caeb:	(bad)  
   14000caec:	pop    rbp
   14000caed:	(bad)  
   14000caee:	pop    rdi
   14000caef:	cli    
   14000caf0:	paddd  mm7,QWORD PTR [rbp+0x2c]
   14000caf4:	cs sub al,0xa0
   14000caf7:	(bad)  
   14000caf8:	(bad)  
   14000caf9:	jno    0x14000cb6a
   14000cafb:	test   eax,0xf3c0d615
   14000cb00:	mov    ch,BYTE PTR [rbx]
   14000cb02:	fdiv   DWORD PTR [rbp-0x5f6468c4]
   14000cb08:	fsubr  QWORD PTR [rbp-0x5beb231c]
   14000cb0e:	mov    dl,0xa9
   14000cb10:	fucomip st,st(6)
   14000cb12:	cmc    
   14000cb13:	adc    bh,al
   14000cb15:	(bad)  
   14000cb16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cb17:	in     al,dx
   14000cb18:	mov    WORD PTR [rbx],?
   14000cb1a:	test   DWORD PTR [rcx-0x4d80a57d],0xef1bc4d9
   14000cb24:	mov    esi,0xde1f6b8b
   14000cb29:	sub    al,0x3e
   14000cb2b:	out    0xec,eax
   14000cb2d:	movabs al,ds:0x9c9ed3666efe5faf
   14000cb36:	shl    DWORD PTR [rbx],1
   14000cb38:	int    0xfa
   14000cb3a:	jno    0x14000cb60
   14000cb3c:	movabs eax,ds:0x74b13865d6932cc7
   14000cb45:	add    ah,BYTE PTR [rdi-0x203d6331]
   14000cb4b:	stc    
   14000cb4c:	cmc    
   14000cb4d:	ffreep st(0)
   14000cb4f:	in     al,dx
   14000cb50:	fsubr  QWORD PTR [rsi+rdx*4]
   14000cb53:	rex.WRX pushf 
   14000cb55:	mov    BYTE PTR [rcx-0xb],ah
   14000cb58:	cmp    DWORD PTR [rbp-0xa],0x60
   14000cb5c:	test   ch,bl
   14000cb5e:	mov    bl,0xef
   14000cb60:	jmp    0x17b81af2d
   14000cb65:	loopne 0x14000cb19
   14000cb67:	add    BYTE PTR [rbp-0x4eec83e],ch
   14000cb6d:	(bad)  
   14000cb6e:	sub    al,0x70
   14000cb70:	mov    bl,0xf5
   14000cb72:	pop    rbp
   14000cb73:	movsxd ecx,DWORD PTR [rax-0x627e066c]
   14000cb79:	int    0xa5
   14000cb7b:	add    al,0xcd
   14000cb7d:	jae    0x14000cb92
   14000cb7f:	pop    rbp
   14000cb80:	cmc    
   14000cb81:	cmp    al,0x28
   14000cb83:	lods   eax,DWORD PTR ds:[rsi]
   14000cb84:	adc    eax,edi
   14000cb86:	ds es (bad) 
   14000cb89:	int    0xc2
   14000cb8b:	fsubr  QWORD PTR [rdx]
   14000cb8d:	imul   ebp,DWORD PTR [rcx+0x0],0xffffff85
   14000cb91:	jmp    0x1690d2885
   14000cb96:	push   rbp
   14000cb97:	push   rcx
   14000cb98:	sub    cl,ah
   14000cb9a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cb9b:	mov    bl,0x16
   14000cb9d:	and    ebx,DWORD PTR [rdi-0x393ee3a4]
   14000cba3:	add    ebp,DWORD PTR [rax]
   14000cba5:	movsxd edx,DWORD PTR [rax+0xc3cffb6]
   14000cbab:	add    ah,BYTE PTR [rsi+rsi*4+0x77677d57]
   14000cbb2:	(bad)  
   14000cbb4:	in     eax,dx
   14000cbb5:	ss mov edx,0x2cb21ebd
   14000cbbb:	rex.XB movabs ds:0xd6a3748bd7aa84d9,eax
   14000cbc5:	sbb    bh,BYTE PTR [rsi+0x4d2ca325]
   14000cbcb:	mov    ebx,DWORD PTR [rdx+0x2618c600]
   14000cbd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cbd2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cbd3:	xor    BYTE PTR [rdi+0x73ca60b0],dh
   14000cbd9:	in     eax,dx
   14000cbda:	jbe    0x14000cc01
   14000cbdc:	jno    0x14000cb6a
   14000cbde:	rex.WRX movabs rbx,0xefd1f6ebd189248d
   14000cbe8:	div    BYTE PTR [rax+0x418bbbb1]
   14000cbee:	jg     0x14000cbf8
   14000cbf0:	lods   eax,DWORD PTR ds:[rsi]
   14000cbf1:	sub    BYTE PTR [rax-0x7f860f5a],cl
   14000cbf7:	ror    BYTE PTR [rbx-0xefd6640],0x4d
   14000cbfe:	rex.WRB jp 0x14000cc23
   14000cc01:	xchg   eax,esi
   14000cc03:	cmp    eax,0xf3cca233
   14000cc08:	int3   
   14000cc09:	jge    0x14000cc17
   14000cc0b:	cmp    dh,BYTE PTR gs:[rax*2-0x697d61c6]
   14000cc13:	rex.R cwd 
   14000cc16:	div    BYTE PTR [rdx-0x18]
   14000cc19:	pop    rsp
   14000cc1a:	rex.X jae 0x14000cc2c
   14000cc1d:	xchg   esp,eax
   14000cc1e:	in     eax,0xd0
   14000cc20:	(bad)  
   14000cc21:	(bad)  
   14000cc22:	idiv   DWORD PTR [rax+rax*2+0x1a]
   14000cc26:	push   rdx
   14000cc27:	rcl    dl,1
   14000cc29:	add    ebp,DWORD PTR [rax-0x5b331efe]
   14000cc2f:	or     ch,BYTE PTR [rbp+0x60]
   14000cc32:	push   rsi
   14000cc33:	adc    esp,ebx
   14000cc35:	ret    
   14000cc36:	xor    eax,DWORD PTR [rdx-0x60]
   14000cc39:	rex.B ins DWORD PTR es:[rdi],dx
   14000cc3b:	pop    rdx
   14000cc3c:	(bad)  
   14000cc3d:	sbb    ah,BYTE PTR [rcx+0x14d30057]
   14000cc43:	rex.R (bad) 
   14000cc45:	push   rdx
   14000cc46:	stos   BYTE PTR es:[edi],al
   14000cc48:	xor    eax,0x21182838
   14000cc4d:	es (bad) 
   14000cc4f:	rex test eax,0x26e44389
   14000cc55:	in     eax,0x6
   14000cc57:	adc    BYTE PTR [rax-0x6f],cl
   14000cc5a:	adc    DWORD PTR [rdx],0x63
   14000cc5d:	cmp    eax,0xdfb6568
   14000cc62:	sbb    BYTE PTR [rcx],dh
   14000cc64:	push   rbp
   14000cc65:	mov    DWORD PTR [rdx+0x41],ebx
   14000cc68:	adc    esp,ebx
   14000cc6a:	adc    BYTE PTR ss:[rsi],cl
   14000cc6d:	sub    BYTE PTR [rbp+0x6a],ah
   14000cc70:	sub    edi,DWORD PTR [rax+rax*4+0x23a6fb81]
   14000cc77:	push   rdx
   14000cc78:	sub    dl,BYTE PTR [rbx+0x1c7bae16]
   14000cc7e:	fnstsw WORD PTR [rbp-0xfeb6be2]
   14000cc84:	jge    0x14000cc10
   14000cc86:	pop    rsi
   14000cc87:	mov    bh,0x87
   14000cc89:	sub    al,0xf1
   14000cc8b:	adc    BYTE PTR [rsi+riz*4],al
   14000cc8e:	pushf  
   14000cc8f:	fwait
   14000cc90:	imul   esp,DWORD PTR [rax+0x56808416],0x220105a8
   14000cc9a:	fild   WORD PTR [rbx-0x5d]
   14000cc9d:	pop    rsi
   14000cc9e:	rex.RXB xchg r10d,eax
   14000cca0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cca1:	enter  0x4d2,0xc9
   14000cca5:	jo     0x14000cc27
   14000cca7:	mov    ch,0xd5
   14000cca9:	fwait
   14000ccaa:	call   0x126724324
   14000ccaf:	cld    
   14000ccb0:	imul   edi,esp,0xe3cf0bc4
   14000ccb6:	retf   0x4ba5
   14000ccb9:	mov    BYTE PTR [rdx+0x431c7108],ah
   14000ccbf:	sub    ah,BYTE PTR [rbp+0x7a]
   14000ccc2:	(bad)  
   14000ccc3:	repnz mov esp,0xe79ab818
   14000ccc9:	jns    0x14000cd1c
   14000cccb:	(bad)  
   14000cccc:	sbb    eax,DWORD PTR [rsi+0x5d75a141]
   14000ccd2:	xchg   edi,eax
   14000ccd3:	sahf   
   14000ccd4:	adc    ebx,DWORD PTR [rdx+0x6a3f8d51]
   14000ccda:	(bad)  
   14000ccdb:	(bad)  
   14000ccdc:	test   BYTE PTR es:[rsi-0x28],al
   14000cce0:	xchg   esi,eax
   14000cce1:	jo     0x14000ccc9
   14000cce3:	(bad)  
   14000cce4:	sub    DWORD PTR [rbp+rbp*8-0x12],ebp
   14000cce8:	loop   0x14000cd15
   14000ccea:	pop    rdi
   14000cceb:	sti    
   14000ccec:	(bad)  
   14000cced:	cmp    bh,BYTE PTR [rbp-0x69027fe2]
   14000ccf3:	fnsave [rcx-0x7e]
   14000ccf6:	or     eax,0x600313ec
   14000ccfb:	xchg   esp,eax
   14000ccfc:	movabs eax,ds:0xae8fd0a8c19651c3
   14000cd05:	xor    edi,DWORD PTR [rip+0x2ec78535]        # 0x16ec85240
   14000cd0b:	pop    rdi
   14000cd0c:	ret    0xfd6f
   14000cd0f:	(bad)  
   14000cd10:	mov    edi,0xee2fed83
   14000cd15:	loop   0x14000cd10
   14000cd17:	out    0x9e,eax
   14000cd19:	shr    DWORD PTR [rbp-0x20020c9a],cl
   14000cd1f:	std    
   14000cd20:	jg     0x14000cda1
   14000cd22:	out    0x25,eax
   14000cd24:	mov    ebx,0x9370a8ca
   14000cd29:	shl    BYTE PTR [rbx],cl
   14000cd2b:	sbb    ebx,esi
   14000cd2d:	fisubr WORD PTR [rbx+rbp*1+0x0]
   14000cd31:	push   0xffffffff8a52b9ad
   14000cd36:	cwde   
   14000cd37:	(bad)  
   14000cd38:	cmp    BYTE PTR ds:[rdx+0x5a],cl
   14000cd3c:	mov    BYTE PTR [rcx+rdi*2],cl
   14000cd3f:	mov    esi,0xfbebaedf
   14000cd44:	xor    DWORD PTR [rcx],0xcc2ab521
   14000cd4a:	(bad)  
   14000cd4b:	add    eax,DWORD PTR [rdx+0x6d]
   14000cd4e:	movd   mm4,DWORD PTR [rbx-0x120278af]
   14000cd55:	rex.X or BYTE PTR [rcx],al
   14000cd58:	adc    al,0x5d
   14000cd5a:	push   0xffffffffa56f6180
   14000cd5f:	jne    0x14000cd42
   14000cd61:	rcr    DWORD PTR [rcx+0x371303ba],cl
   14000cd67:	rex.W rcl BYTE PTR [rsi+rbx*4],cl
   14000cd6b:	or     eax,0x20425214
   14000cd70:	mov    dl,0xcc
   14000cd72:	fisub  WORD PTR [rcx]
   14000cd74:	(bad)  
   14000cd75:	fmul   QWORD PTR [rbx]
   14000cd77:	push   rax
   14000cd78:	sub    DWORD PTR [rbp-0x24],edx
   14000cd7b:	loope  0x14000cdb2
   14000cd7d:	int    0x32
   14000cd7f:	and    ecx,esp
   14000cd81:	lods   eax,DWORD PTR ds:[rsi]
   14000cd82:	push   rsi
   14000cd83:	(bad)  
   14000cd84:	ins    DWORD PTR es:[rdi],dx
   14000cd85:	push   0x59cc5f18
   14000cd8a:	sub    eax,0xccb2bb6e
   14000cd8f:	mov    ah,0x13
   14000cd91:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000cd93:	nop
   14000cd94:	(bad)  [rbx]
   14000cd96:	(bad)  
   14000cd97:	adc    BYTE PTR [rdx],al
   14000cd99:	ins    DWORD PTR es:[rdi],dx
   14000cd9a:	push   rbx
   14000cd9b:	nop
   14000cd9c:	sahf   
   14000cd9d:	out    0xa1,eax
   14000cd9f:	fisubr WORD PTR [rax+0x60]
   14000cda2:	jmp    0x1b063978b
   14000cda7:	movsxd esp,DWORD PTR [rdi+0x777b41d3]
   14000cdad:	(bad)  
   14000cdae:	in     eax,dx
   14000cdaf:	mov    ebp,0x7bda743d
   14000cdb4:	call   0x14788d4b0
   14000cdb9:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cdbb:	imul   edx,DWORD PTR [rdi],0xb340aa71
   14000cdc1:	add    BYTE PTR [rsi],bl
   14000cdc3:	icebp  
   14000cdc4:	rex rcl BYTE PTR [rax+0xb],0x5b
   14000cdc9:	or     BYTE PTR [rdx+0x5061381a],al
   14000cdcf:	movabs al,ds:0x8da902114c16d4a0
   14000cdd8:	xchg   BYTE PTR [rbp+0x7a7ab6da],dl
   14000cdde:	or     cl,BYTE PTR [rbx+rbx*1-0x7cadff29]
   14000cde5:	rex.WXB movsxd rbp,DWORD PTR [r10+0x3d40a16b]
   14000cdec:	(bad)  
   14000cded:	xchg   edx,eax
   14000cdee:	rex.WXB adc BYTE PTR [r14+0x49],spl
   14000cdf2:	pushf  
   14000cdf3:	(bad)  
   14000cdf4:	push   0x3c
   14000cdf6:	or     bl,BYTE PTR [rax-0x5d948086]
   14000cdfc:	imul   ebp,DWORD PTR [rip+0xffffffffc1c015a1],0x40        # 0x101c0e3a4
   14000ce03:	in     al,dx
   14000ce04:	push   rax
   14000ce05:	adc    ch,BYTE PTR [rdx]
   14000ce07:	xor    eax,0x1fe98818
   14000ce0c:	and    BYTE PTR [rsp],al
   14000ce0f:	xlat   BYTE PTR ds:[rbx]
   14000ce10:	add    BYTE PTR [rcx+0x2803dc6],dl
   14000ce16:	and    esi,esp
   14000ce18:	add    ah,BYTE PTR [rsi]
   14000ce1a:	(bad)  
   14000ce1b:	rex.X imul eax,DWORD PTR [rbx-0x14],0x44d6cda6
   14000ce23:	(bad)  [rbp-0x7da5af6a]
   14000ce29:	sti    
   14000ce2a:	rex.RX mov cl,0x88
   14000ce2d:	rex.R xor BYTE PTR [rax+0x62],0xfe
   14000ce32:	mov    ebx,DWORD PTR [rcx+0x6b4acac9]
   14000ce38:	or     BYTE PTR [rcx+0x10866a22],dl
   14000ce3e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ce40:	lods   al,BYTE PTR ds:[rsi]
   14000ce41:	sbb    al,dh
   14000ce43:	rex.B
   14000ce44:	and    BYTE PTR [r11],sil
   14000ce47:	mov    esi,ebx
   14000ce49:	jo     0x14000ce53
   14000ce4b:	xor    al,0x22
   14000ce4d:	imul   eax,DWORD PTR fs:[rdx-0x4a179840],0x2ff38af7
   14000ce58:	test   DWORD PTR [rax-0x62],eax
   14000ce5b:	gs enter 0x8a45,0xbb
   14000ce60:	mov    bh,0x6e
   14000ce62:	and    BYTE PTR [rbp-0x7a],cl
   14000ce65:	cmp    BYTE PTR [rbp-0x1a],bh
   14000ce68:	xor    al,0x5e
   14000ce6a:	jl     0x14000ce62
   14000ce6c:	ffreep st(5)
   14000ce6e:	fxam   
   14000ce70:	gs rex.R push rcx
   14000ce73:	mov    BYTE PTR [rcx+rcx*2],ah
   14000ce76:	shr    ebp,1
   14000ce78:	cmc    
   14000ce79:	movabs al,ds:0x37737ad6b8653294
   14000ce82:	push   QWORD PTR [rbx+rax*1+0x51]
   14000ce86:	or     DWORD PTR [rcx],esp
   14000ce88:	rex.RB fcmovu st,st(2)
   14000ce8b:	int    0xf5
   14000ce8d:	(bad)  
   14000ce8e:	rex.X movabs al,ds:0xe10f2fc7916eddb
   14000ce98:	xchg   DWORD PTR [rcx+0x7e],esi
   14000ce9b:	mov    esi,0x35cf1b83
   14000cea0:	xor    edi,DWORD PTR [rcx]
   14000cea2:	mov    DWORD PTR [rdi-0x7],edi
   14000cea5:	mov    ebp,0xd6e561ef
   14000ceaa:	stos   BYTE PTR es:[rdi],al
   14000ceab:	lea    edx,[rdi-0x13]
   14000ceae:	fild   WORD PTR [rax+0x70792947]
   14000ceb4:	(bad)  
   14000ceb5:	rex imul edi,DWORD PTR [rcx+0x76],0x6caf4984
   14000cebd:	mov    esp,0x8deffeeb
   14000cec2:	mov    bh,0x42
   14000cec4:	(bad)  
   14000cec5:	int    0x26
   14000cec7:	(bad)  
   14000cec8:	pushf  
   14000cec9:	ds test edi,ebp
   14000cecc:	cld    
   14000cecd:	leave  
   14000cece:	stos   DWORD PTR es:[rdi],eax
   14000cecf:	clc    
   14000ced0:	fidiv  DWORD PTR [rdi-0x60d87a42]
   14000ced6:	jl     0x14000ceea
   14000ced8:	iret   
   14000ced9:	cmp    eax,0x57faecf3
   14000cede:	mov    esi,0xfbdf95f2
   14000cee3:	(bad)  
   14000cee5:	sti    
   14000cee6:	(bad)  
   14000cee7:	cli    
   14000cee8:	add    DWORD PTR [rsi],ecx
   14000ceea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ceeb:	div    BYTE PTR [rcx+rbp*8-0xb]
   14000ceef:	push   0x62d8d011
   14000cef4:	and    BYTE PTR [rsi],cl
   14000cef6:	add    BYTE PTR [rdx+rdx*8-0x4a5ef7a4],dl
   14000cefd:	(bad)  
   14000cefe:	rex.R jmp 0x14000ce84
   14000cf01:	cmp    DWORD PTR [rdx],0x46
   14000cf04:	xchg   ecx,eax
   14000cf05:	gs jmp 0x10f3e9e8c
   14000cf0b:	(bad)  
   14000cf0c:	(bad)  
   14000cf0d:	test   dh,dl
   14000cf0f:	(bad)  
   14000cf10:	lods   al,BYTE PTR ds:[rsi]
   14000cf11:	out    dx,al
   14000cf12:	imul   ebx,DWORD PTR [rbp-0x68],0x65
   14000cf16:	rex.WRX enter 0xa1c7,0xdc
   14000cf1b:	adc    eax,0x416c008
   14000cf20:	cdq    
   14000cf21:	lea    eax,gs:[rsi-0x43]
   14000cf25:	enter  0x9814,0xfe
   14000cf29:	lahf   
   14000cf2a:	std    
   14000cf2b:	je     0x14000cecf
   14000cf2d:	and    ebx,DWORD PTR [rbp-0x596eb2dc]
   14000cf33:	sbb    DWORD PTR [rdx-0x6a13808c],edx
   14000cf39:	adc    BYTE PTR [rdx],al
   14000cf3b:	rex.WB (bad) 
   14000cf3e:	and    ebp,0x60
   14000cf41:	jrcxz  0x14000cfab
   14000cf43:	popf   
   14000cf44:	(bad)  
   14000cf45:	sti    
   14000cf46:	imul   r11,QWORD PTR [rbp-0x74],0xffffffffffffff8c
   14000cf4b:	cs (bad) 
   14000cf4d:	adc    edx,ecx
   14000cf4f:	jrcxz  0x14000cf01
   14000cf51:	ret    0xc430
   14000cf54:	test   eax,0xfe71a7d3
   14000cf59:	ret    0x3305
   14000cf5c:	shl    DWORD PTR [rdi],1
   14000cf5e:	xor    QWORD PTR [r14+rcx*1],r11
   14000cf62:	shr    edi,1
   14000cf64:	cmc    
   14000cf65:	(bad)  
   14000cf66:	pop    rcx
   14000cf67:	(bad)  
   14000cf68:	rex.WB add BYTE PTR [r8],al
   14000cf6b:	and    BYTE PTR [rax],al
   14000cf6d:	rex.WB
   14000cf6e:	rex.R
   14000cf6f:	push   r12
   14000cf71:	shr    bl,1
   14000cf73:	jbe    0x14000cfc2
   14000cf75:	pop    rbp
   14000cf76:	rex.X mov ebx,0x807f618b
   14000cf7c:	(bad)  
   14000cf7d:	mov    dh,0x85
   14000cf7f:	rex.B int3 
   14000cf81:	rcl    bl,0x8
   14000cf84:	(bad)  
   14000cf85:	or     edx,DWORD PTR [rcx]
   14000cf87:	add    al,0x75
   14000cf89:	xor    al,0x6a
   14000cf8b:	xchg   ebx,eax
   14000cf8c:	adc    dh,0xf0
   14000cf8f:	jge    0x14000cfa4
   14000cf91:	jns    0x14000cf2a
   14000cf93:	push   rdx
   14000cf94:	cmp    ecx,0x5146a43e
   14000cf9a:	ret    0xa90b
   14000cf9d:	rex.B in eax,dx
   14000cf9f:	jnp    0x14000cf6b
   14000cfa1:	js     0x14000cf94
   14000cfa3:	rex.WR cqo 
   14000cfa5:	ss push rsi
   14000cfa7:	add    BYTE PTR [rbx],dh
   14000cfa9:	jno    0x14000cfc6
   14000cfab:	or     eax,0xc404d033
   14000cfb0:	(bad)  
   14000cfb1:	rex.WRXB push r8
   14000cfb3:	rex.RB out dx,eax
   14000cfb5:	sar    DWORD PTR [rsi+0xa00a02b],cl
   14000cfbb:	data16 (bad) 
   14000cfbd:	jg     0x14000cfef
   14000cfbf:	jge    0x14000d010
   14000cfc1:	or     al,0xda
   14000cfc3:	rex.RX jg 0x14000cfda
   14000cfc6:	movabs al,ds:0xcb66431ed9c609a5
   14000cfcf:	mov    cl,0xa5
   14000cfd1:	xor    al,0xa4
   14000cfd3:	movabs ds:0x89a0cc3e45028114,al
   14000cfdc:	mov    cl,0x4
   14000cfde:	sbb    ah,cl
   14000cfe0:	pushf  
   14000cfe1:	mov    esp,0xa9c8163c
   14000cfe6:	(bad)  
   14000cfe7:	in     eax,0xa6
   14000cfe9:	call   0xdc619ff8
   14000cfee:	and    cl,BYTE PTR [rbp+0x431ef813]
   14000cff4:	pop    rdi
   14000cff5:	and    al,0x60
   14000cff7:	adc    al,0xa8
   14000cff9:	(bad)  
   14000cffa:	pop    rdx
   14000cffb:	enter  0x1892,0x0
   14000cfff:	add    eax,0xc59c4705
   14000d004:	loopne 0x14000cf92
   14000d006:	movabs ds:0xeb7761efdfa0eedb,al
   14000d00f:	(bad)  
   14000d010:	or     BYTE PTR [rsi+rcx*8],ah
   14000d013:	popf   
   14000d014:	(bad)  
   14000d015:	xchg   DWORD PTR [rdi-0x38603d05],ebx
   14000d01b:	adc    edx,DWORD PTR [rdi+0x1ad2831f]
   14000d021:	ret    
   14000d022:	(bad)  
   14000d023:	pop    rsp
   14000d024:	or     BYTE PTR [rbx-0x2d],dh
   14000d027:	rex.WRX fdiv DWORD PTR [rip+0x85786d7]        # 0x148585705
   14000d02e:	mov    ebx,0xd9b29213
   14000d033:	rex.WRXB or QWORD PTR [r9],r14
   14000d036:	std    
   14000d037:	clc    
   14000d038:	mov    dh,0x49
   14000d03a:	addr32 pushf 
   14000d03c:	(bad)  
   14000d03d:	(bad)  
   14000d03e:	(bad)  
   14000d03f:	fsubr  QWORD PTR [rax]
   14000d041:	out    dx,al
   14000d042:	jnp    0x14000d05f
   14000d044:	sbb    edi,eax
   14000d046:	jrcxz  0x14000d0c7
   14000d048:	icebp  
   14000d049:	sbb    eax,0x580306f4
   14000d04e:	sbb    DWORD PTR [rcx],ebp
   14000d050:	int3   
   14000d051:	jbe    0x14000d09d
   14000d053:	pop    rcx
   14000d054:	shl    DWORD PTR [rdx+0x3ddd6e5b],1
   14000d05a:	mov    WORD PTR [rax-0x3a],ss
   14000d05d:	or     DWORD PTR [rcx+rdi*2-0x3],edi
   14000d061:	jno    0x14000d042
   14000d063:	jrcxz  0x14000d001
   14000d065:	jrcxz  0x14000d043
   14000d067:	(bad)  
   14000d069:	pop    rax
   14000d06a:	(bad)  
   14000d06c:	ret    0xfe6f
   14000d06f:	imul   bh
   14000d071:	loopne 0x14000d065
   14000d073:	in     eax,0xcb
   14000d075:	clc    
   14000d076:	fstp   DWORD PTR [rdi+0x3bc199f9]
   14000d07c:	out    dx,eax
   14000d07d:	mov    esi,0xfeffc5fb
   14000d082:	mov    edi,0x83bf2ffe
   14000d087:	add    DWORD PTR [rcx-0x43],0x72
   14000d08b:	adc    eax,0xcbfbf3a0
   14000d090:	mov    ecx,0x808943ff
   14000d095:	add    eax,DWORD PTR [rax+0x348379ef]
   14000d09b:	retf   
   14000d09c:	mov    ah,0xbb
   14000d09e:	imul   eax,esp,0xf2b9bce8
   14000d0a4:	jae    0x14000d0bf
   14000d0a6:	(bad)  
   14000d0a7:	mov    WORD PTR [rdi],ss
   14000d0a9:	sar    BYTE PTR [rdx],1
   14000d0ab:	sub    ecx,esp
   14000d0ad:	push   rsp
   14000d0ae:	(bad)  
   14000d0af:	cmp    eax,0x8830ca10
   14000d0b4:	adc    esi,DWORD PTR [rax-0x12]
   14000d0b7:	movabs eax,ds:0x9fff8c02d7dfacd9
   14000d0c0:	mov    ebp,0x24928d37
   14000d0c5:	retf   
   14000d0c6:	retf   0x3f03
   14000d0c9:	pop    rbx
   14000d0ca:	(bad)  
   14000d0cc:	int    0xd7
   14000d0ce:	jo     0x14000d05f
   14000d0d0:	(bad)
   14000d0d3:	mov    eax,cs
   14000d0d5:	jge    0x14000d082
   14000d0d7:	lods   al,BYTE PTR ds:[rsi]
   14000d0d8:	stos   BYTE PTR es:[rdi],al
   14000d0d9:	lods   al,BYTE PTR ds:[rsi]
   14000d0da:	in     al,dx
   14000d0db:	fidivr DWORD PTR [rdx+0x8405e9b]
   14000d0e1:	ror    DWORD PTR [rdx+rax*4],1
   14000d0e4:	movabs eax,ds:0x6923999868418181
   14000d0ed:	out    0x70,al
   14000d0ef:	xor    al,0x1a
   14000d0f1:	rex.WB movabs ds:0x1cce7d030460623,rax
   14000d0fb:	je     0x14000d131
   14000d0fd:	adc    dl,dl
   14000d0ff:	(bad)  
   14000d100:	sbb    DWORD PTR [rsi],eax
   14000d102:	mov    ch,0x34
   14000d104:	fisttp QWORD PTR [rip+0x40d3bd34]        # 0x180d48e3e
   14000d10a:	(bad)  
   14000d10b:	(bad)  
   14000d10c:	push   rbp
   14000d10d:	je     0x14000d164
   14000d10f:	push   rdi
   14000d110:	jne    0x14000d177
   14000d112:	jne    0x14000d141
   14000d114:	pop    rcx
   14000d115:	rex.WXB push r15
   14000d117:	outs   dx,BYTE PTR ds:[rsi]
   14000d118:	push   rbp
   14000d119:	cdq    
   14000d11a:	sbb    DWORD PTR [rcx-0x107b84e7],ebx
   14000d120:	mov    ebp,DWORD PTR [rbp-0x8703211]
   14000d126:	sahf   
   14000d127:	cdq    
   14000d128:	mov    ecx,0x64447b85
   14000d12d:	push   rsi
   14000d12e:	add    ebp,DWORD PTR [r10+0x7b878e77]
   14000d135:	cwde   
   14000d136:	outs   dx,DWORD PTR ds:[rsi]
   14000d137:	out    0x66,al
   14000d139:	imul   dh
   14000d13b:	mov    ebx,0xfddfbbf7
   14000d140:	cs xor ah,dh
   14000d143:	icebp  
   14000d144:	test   al,0xe7
   14000d146:	and    eax,0xab15314e
   14000d14b:	add    BYTE PTR [rbx-0x4f],dh
   14000d14e:	cdq    
   14000d14f:	(bad)  
   14000d150:	jl     0x14000d1a4
   14000d152:	(bad)  
   14000d153:	rex.RX
   14000d154:	rex.WR pop rsi
   14000d156:	(bad)  [rcx-0x2f]
   14000d159:	mov    bh,0x99
   14000d15b:	outs   dx,BYTE PTR ds:[rsi]
   14000d15c:	jg     0x14000d11e
   14000d15e:	xor    DWORD PTR [rsi],eax
   14000d160:	xlat   BYTE PTR ds:[rbx]
   14000d161:	cmc    
   14000d162:	(bad)  
   14000d163:	add    al,0x31
   14000d165:	lea    r8d,[rbx-0x7f72a834]
   14000d16c:	jnp    0x14000d171
   14000d16e:	add    dl,BYTE PTR [rbx+0x29e37d10]
   14000d174:	test   DWORD PTR [rsi-0x46],0x6e3eb294
   14000d17b:	mov    edx,0x18d8d28e
   14000d180:	data16 stos BYTE PTR es:[rdi],al
   14000d182:	push   rbp
   14000d183:	sbb    BYTE PTR [rsi+rdi*1],bh
   14000d186:	in     eax,dx
   14000d187:	(bad)  [rsi]
   14000d189:	mov    edx,0xcd9a1ebd
   14000d18e:	es xlat BYTE PTR ss:[rbx]
   14000d191:	xlat   BYTE PTR ds:[rbx]
   14000d192:	shr    DWORD PTR [rdx+0x36],1
   14000d195:	shr    edi,1
   14000d197:	fucomi st,st(0)
   14000d199:	jbe    0x14000d135
   14000d19b:	push   0xffffffff9e904db8
   14000d1a0:	add    bl,BYTE PTR [rcx-0x4e]
   14000d1a3:	nop
   14000d1a4:	shl    BYTE PTR [rdx+0xc0c8cb0],cl
   14000d1aa:	mov    bl,0xc0
   14000d1ac:	rcl    BYTE PTR [rdx+0x644a099a],cl
   14000d1b2:	add    al,0x3e
   14000d1b4:	gs xchg ebx,eax
   14000d1b6:	push   rdi
   14000d1b7:	push   rcx
   14000d1b8:	rex push rbp
   14000d1ba:	add    ch,dl
   14000d1bc:	sub    eax,DWORD PTR [rax-0x7c7afeb6]
   14000d1c2:	or     eax,0x1e84712
   14000d1c7:	ror    BYTE PTR [rdi-0x4fdb8c76],0x29
   14000d1ce:	(bad)  
   14000d1cf:	(bad)  
   14000d1d0:	jle    0x14000d166
   14000d1d2:	and    DWORD PTR [rbx+0x22],eax
   14000d1d5:	add    BYTE PTR [rax],ch
   14000d1d7:	xlat   BYTE PTR ds:[rbx]
   14000d1d8:	(bad)  
   14000d1d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d1da:	add    al,0xaa
   14000d1dc:	sub    al,0x43
   14000d1de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1df:	adc    al,0x12
   14000d1e1:	pop    rdi
   14000d1e2:	jge    0x14000d20c
   14000d1e4:	and    DWORD PTR [rcx+0xd],esp
   14000d1e7:	syscall 
   14000d1e9:	loope  0x14000d17e
   14000d1eb:	sahf   
   14000d1ec:	add    BYTE PTR [rsp+riz*2-0x4f5b69aa],bh
   14000d1f3:	(bad)  
   14000d1f4:	or     DWORD PTR [rdx+0x12],0x133dc27c
   14000d1fb:	xor    BYTE PTR [rsi],al
   14000d1fd:	mov    cl,0xef
   14000d1ff:	cli    
   14000d200:	jo     0x14000d1fc
   14000d202:	ds test al,0xc4
   14000d205:	mov    WORD PTR [rdi-0xfdbfcdc],ss
   14000d20b:	shl    DWORD PTR [rbx+0x1529e81d],1
   14000d211:	xor    al,BYTE PTR [rip+0x280ecd3a]        # 0x1680f9f51
   14000d217:	icebp  
   14000d218:	movabs al,ds:0xd803b1c280a4122a
   14000d221:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d222:	sub    ebp,0xffffff8d
   14000d225:	pop    rbx
   14000d226:	movabs al,ds:0x675de0cffbd9c7c4
   14000d22f:	out    dx,eax
   14000d230:	mov    DWORD PTR [rcx-0x77ffe627],0x849aa5a
   14000d23a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d23b:	mov    esi,0x200f8205
   14000d240:	rex.WR out dx,eax
   14000d242:	mov    eax,edx
   14000d244:	push   rsp
   14000d245:	(bad)  
   14000d246:	and    al,0x0
   14000d248:	mov    WORD PTR [rcx-0x70a18a9],fs
   14000d24e:	icebp  
   14000d24f:	mov    DWORD PTR [rdi],ecx
   14000d251:	(bad)  
   14000d252:	xchg   DWORD PTR [rbx+0xdc262f],edi
   14000d258:	(bad)  
   14000d259:	lahf   
   14000d25a:	(bad)  
   14000d25b:	cli    
   14000d25c:	(bad)  
   14000d25d:	(bad)  
   14000d25e:	(bad)  
   14000d25f:	nop
   14000d260:	rex.WRX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d262:	lock hlt 
   14000d264:	stc    
   14000d265:	outs   dx,DWORD PTR ds:[rsi]
   14000d266:	(bad)  
   14000d267:	jmp    0x15cb1a052
   14000d26c:	cmp    eax,0x41c7ed79
   14000d271:	cmp    ebx,edi
   14000d273:	div    DWORD PTR [rax]
   14000d275:	ins    BYTE PTR es:[rdi],dx
   14000d276:	in     al,dx
   14000d277:	in     eax,0xd2
   14000d279:	pop    QWORD PTR [rdi+rsi*8+0x29]
   14000d27d:	rcr    esp,0xcc
   14000d280:	sbb    al,0xc6
   14000d282:	rex.WX add rax,0xfffffffffc7fdefc
   14000d288:	iret   
   14000d289:	cwde   
   14000d28a:	popf   
   14000d28b:	lahf   
   14000d28c:	ret    
   14000d28d:	jnp    0x14000d26e
   14000d28f:	repz (bad) 
   14000d291:	mov    bh,0xd1
   14000d293:	ins    BYTE PTR es:[rdi],dx
   14000d294:	ds std 
   14000d296:	rex.WRXB (bad) 
   14000d298:	out    0x7f,eax
   14000d29a:	hlt    
   14000d29b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d29c:	fisttp QWORD PTR [rsi-0x39]
   14000d29f:	ret    
   14000d2a0:	and    ch,dl
   14000d2a2:	(bad)  
   14000d2a3:	(bad)  
   14000d2a4:	hlt    
   14000d2a5:	or     edx,esp
   14000d2a7:	(bad)  
   14000d2a8:	mov    eax,0xdc418dc5
   14000d2ad:	adc    BYTE PTR [rbx+rax*2-0x48b17ffb],al
   14000d2b4:	xlat   BYTE PTR ds:[rbx]
   14000d2b5:	adc    DWORD PTR [rax-0x1d28ff62],esp
   14000d2bb:	adc    dl,dh
   14000d2bd:	icebp  
   14000d2be:	add    edx,DWORD PTR [rax-0x75b610ac]
   14000d2c4:	jno    0x14000d2ca
   14000d2c6:	or     DWORD PTR [rdi],0x1408076a
   14000d2cc:	test   DWORD PTR [rcx-0x16f2cbba],edx
   14000d2d2:	mov    ah,0x9
   14000d2d4:	(bad)  
   14000d2d5:	mov    bh,dl
   14000d2d7:	add    eax,DWORD PTR [rax-0x1e]
   14000d2da:	and    BYTE PTR [rdx],0xd
   14000d2dd:	lea    edi,[rdx+0x373fc6af]
   14000d2e3:	jle    0x14000d284
   14000d2e5:	mov    esp,0x8c03b7c5
   14000d2ea:	repnz fwait
   14000d2ec:	push   rsi
   14000d2ed:	push   rbp
   14000d2ee:	shl    BYTE PTR [rcx+rdx*4],0xe7
   14000d2f2:	sti    
   14000d2f3:	sbb    dl,BYTE PTR [rdx]
   14000d2f5:	mov    ?,eax
   14000d2f7:	test   dh,dh
   14000d2f9:	add    DWORD PTR [rax],0xffffffdd
   14000d2fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d2fd:	(bad)  
   14000d2fe:	int3   
   14000d2ff:	es hlt 
   14000d301:	sti    
   14000d302:	mul    BYTE PTR [rax]
   14000d304:	movabs al,ds:0x5cb148175c700418
   14000d30d:	mov    cl,0xd0
   14000d30f:	scas   al,BYTE PTR es:[rdi]
   14000d310:	and    eax,DWORD PTR [rsp+rcx*1-0x21c27080]
   14000d317:	jae    0x14000d2b7
   14000d319:	push   rdx
   14000d31a:	retf   0x86c2
   14000d31d:	je     0x14000d339
   14000d31f:	adc    esp,ebp
   14000d321:	xor    cl,BYTE PTR [rsi]
   14000d323:	int3   
   14000d324:	(bad)  
   14000d325:	rex.X mov edi,0x1043eff
   14000d32b:	(bad)  
   14000d32c:	cmc    
   14000d32d:	cmc    
   14000d32e:	(bad)  [rsi]
   14000d330:	(bad)  
   14000d331:	in     eax,dx
   14000d332:	ss push rsi
   14000d334:	push   rdi
   14000d335:	push   rsi
   14000d336:	shr    BYTE PTR [rdx+0x36],1
   14000d339:	shr    ebp,1
   14000d33b:	hlt    
   14000d33c:	shr    ch,1
   14000d33e:	xor    eax,0x6ddedd1
   14000d343:	mov    edx,0x1e4aa829
   14000d348:	xchg   BYTE PTR [rsi-0x80],dl
   14000d34b:	cdq    
   14000d34c:	retf   0x30c3
   14000d34f:	xor    dh,BYTE PTR [rax]
   14000d351:	push   rdx
   14000d352:	es push 0xffffffff82850140
   14000d358:	jp     0x14000d2ee
   14000d35a:	sub    edx,esp
   14000d35c:	sub    BYTE PTR [rdx+rdi*1-0x74],cl
   14000d360:	cli    
   14000d361:	or     al,0x54
   14000d363:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d364:	mov    dl,0xc4
   14000d366:	(bad)  
   14000d367:	fbld   TBYTE PTR [rcx]
   14000d369:	rex.RB mov r9d,0x7b5c27c
   14000d36f:	test   DWORD PTR [rdx],edx
   14000d371:	(bad)  
   14000d372:	and    DWORD PTR [rax+0x24],edx
   14000d375:	retf   0x7898
   14000d378:	mov    DWORD PTR ds:[rsi-0x427f6d3],ecx
   14000d37f:	xor    al,0xb7
   14000d382:	push   rax
   14000d383:	mov    dl,dh
   14000d385:	(bad)  
   14000d387:	rex.WB movabs ds:0x9423d1a8312bae8c,al
   14000d391:	icebp  
   14000d392:	(bad)  
   14000d393:	ins    BYTE PTR es:[rdi],dx
   14000d394:	(bad)  
   14000d395:	push   0x4a
   14000d397:	xchg   DWORD PTR [rdx+0x691d031],esp
   14000d39d:	add    al,0x90
   14000d39f:	sub    BYTE PTR [rdi+rcx*8],bh
   14000d3a2:	(bad)  
   14000d3a3:	movabs eax,ds:0x689039e786553401
   14000d3ac:	sbb    BYTE PTR [rsi+0x3e2020e7],0xc
   14000d3b3:	pop    rbp
   14000d3b4:	or     DWORD PTR [rbx+0x7c],0xffffffac
   14000d3b8:	(bad)  
   14000d3b9:	xlat   BYTE PTR ds:[rbx]
   14000d3ba:	shr    DWORD PTR [rax-0x5aab3923],1
   14000d3c0:	mov    WORD PTR [rdi+0x1e],es
   14000d3c3:	cmp    al,BYTE PTR [rdi+0x41ee67b3]
   14000d3c9:	mov    ch,0x32
   14000d3cb:	adc    eax,0x271cc812
   14000d3d0:	(bad)  
   14000d3d1:	xchg   DWORD PTR [rdx+0x7e4c506b],ecx
   14000d3d7:	mov    cl,0xca
   14000d3d9:	(bad)  
   14000d3da:	sti    
   14000d3db:	xrelease mov DWORD PTR [rsi],edi
   14000d3de:	xor    DWORD PTR [rbp-0x1c33dcba],0xffffffc7
   14000d3e5:	test   DWORD PTR [rsi],esi
   14000d3e7:	(bad)  [rdi+0x1d]
   14000d3ea:	rex.WR jmp 0x14000d3fa
   14000d3ed:	sub    eax,esi
   14000d3ef:	rcl    DWORD PTR [rbp+rdx*1-0x5b],1
   14000d3f3:	mov    DWORD PTR [rcx],ecx
   14000d3f5:	push   rsp
   14000d3f6:	sub    edx,DWORD PTR [rip+0xffffffffe2aeacac]        # 0x122af80a8
   14000d3fc:	mov    cl,0xb
   14000d3fe:	scas   eax,DWORD PTR es:[rdi]
   14000d3ff:	or     al,0x80
   14000d401:	test   BYTE PTR [rbx-0x62fd065f],bh
   14000d407:	(bad)  
   14000d408:	(bad)  
   14000d409:	xchg   ebx,eax
   14000d40a:	movsxd edx,DWORD PTR [rbx+rbx*2+0x1a1af03f]
   14000d411:	ins    DWORD PTR es:[rdi],dx
   14000d412:	(bad)  
   14000d413:	(bad)  
   14000d414:	xchg   ebp,eax
   14000d415:	push   rax
   14000d416:	lods   eax,DWORD PTR ds:[rsi]
   14000d417:	rex.WRX loope 0x14000d46d
   14000d41a:	lahf   
   14000d41b:	inc    DWORD PTR [rdx]
   14000d41d:	and    al,0x49
   14000d41f:	mov    bl,0x8f
   14000d422:	ds rex.X je 0x14000d473
   14000d426:	mov    ebx,0xf91fabf0
   14000d42b:	xchg   ebp,eax
   14000d42c:	iret   
   14000d42d:	sub    al,0x5d
   14000d42f:	mov    edi,0x55f0c1d6
   14000d434:	(bad)  
   14000d435:	ds stc 
   14000d437:	pop    rbp
   14000d438:	mov    al,0x34
   14000d43a:	(bad)  
   14000d43b:	xchg   edx,eax
   14000d43c:	or     DWORD PTR [rax],edi
   14000d43e:	ror    BYTE PTR [rax],cl
   14000d440:	rex.W add BYTE PTR [rax+0x6b],sil
   14000d444:	jns    0x14000d47f
   14000d446:	(bad)
   14000d44a:	jne    0x14000d43f
   14000d44c:	in     al,dx
   14000d44d:	mov    ebp,0xedad8c67
   14000d452:	in     eax,dx
   14000d453:	xor    BYTE PTR [rdi],al
   14000d455:	(bad)  
   14000d456:	addr32 add eax,0xbe1f038a
   14000d45c:	xor    esi,esp
   14000d45e:	and    eax,0x9e85b7c4
   14000d463:	add    dl,0xdc
   14000d466:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d467:	ins    BYTE PTR es:[rdi],dx
   14000d468:	mov    BYTE PTR [rdx+0x21],0x9f
   14000d46c:	xchg   esi,eax
   14000d46e:	test   DWORD PTR [rbx],esp
   14000d470:	fdivr  DWORD PTR [rbx+0x22]
   14000d473:	mov    esi,0xb29adc41
   14000d478:	leave  
   14000d479:	mov    esp,0xef17e4fb
   14000d47e:	rex.WXB sbb al,BYTE PTR [r9-0x308d7f18]
   14000d485:	and    eax,0x3b61efb1
   14000d48a:	sub    BYTE PTR [rcx+0x47a9e46a],dl
   14000d490:	(bad)  [rcx-0x30]
   14000d493:	ja     0x14000d4b1
   14000d495:	mov    eax,0xc076138e
   14000d49a:	(bad)  
   14000d49b:	adc    eax,0x29e84178
   14000d4a0:	mov    BYTE PTR [rdx-0x78],bh
   14000d4a3:	cmp    BYTE PTR [rax+0x4926dc99],bl
   14000d4a9:	push   rdx
   14000d4aa:	xchg   esp,eax
   14000d4ab:	rex.WRXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4ad:	xor    al,0x4c
   14000d4af:	pop    rdi
   14000d4b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4b1:	jns    0x14000d51e
   14000d4b3:	jb     0x14000d486
   14000d4b5:	ss int3 
   14000d4b7:	jbe    0x14000d4d5
   14000d4b9:	mov    ah,0xdb
   14000d4bb:	sbb    eax,0x49316c6c
   14000d4c0:	jmp    0x14000d538
   14000d4c2:	mov    bl,0x89
   14000d4c4:	outs   dx,BYTE PTR ds:[rsi]
   14000d4c5:	xlat   BYTE PTR ds:[rbx]
   14000d4c6:	rex.RX mov dil,0xe7
   14000d4c9:	ror    BYTE PTR [rdi],0x64
   14000d4cc:	rex.W mov al,0x20
   14000d4cf:	rex.WXB jns 0x14000d476
   14000d4d2:	push   rbx
   14000d4d3:	xchg   BYTE PTR [r15],r12b
   14000d4d6:	call   0x10e9b7cf4
   14000d4db:	cmp    eax,0x87c7c62b
   14000d4e0:	and    dl,BYTE PTR [rsi+0x7f]
   14000d4e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4e4:	add    DWORD PTR [rax],esp
   14000d4e6:	rex.B
   14000d4e7:	rex.RX sub BYTE PTR [rax-0x52364edf],r8b
   14000d4ee:	retf   
   14000d4ef:	adc    dl,BYTE PTR [rcx+rbx*2+0x2]
   14000d4f3:	or     BYTE PTR [rcx],al
   14000d4f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d4f6:	adc    ah,BYTE PTR [rax+rax*4+0xa1f69b0]
   14000d4fd:	movabs eax,ds:0x120a4d6c61457c70
   14000d506:	sar    BYTE PTR [rax-0x57],cl
   14000d509:	or     al,0xf0
   14000d50b:	sub    eax,0x40f3c70
   14000d510:	adc    al,0x1
   14000d512:	add    eax,0x3203ea02
   14000d517:	rex and eax,0x2157550a
   14000d51d:	leave  
   14000d51e:	adc    al,0xfd
   14000d520:	jle    0x14000d4a9
   14000d522:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d523:	or     al,0x3
   14000d525:	rex.W or al,BYTE PTR [rbp-0x20]
   14000d529:	jnp    0x14000d573
   14000d52b:	addr32 rex.WR je 0x14000d56a
   14000d52f:	sub    eax,0x82dc6d6c
   14000d534:	test   BYTE PTR [rsi],dh
   14000d536:	stos   BYTE PTR es:[rdi],al
   14000d537:	shl    ebx,cl
   14000d539:	cmp    BYTE PTR [rbx-0x6],dh
   14000d53c:	adc    al,0xde
   14000d53e:	repz rol BYTE PTR [rbx-0xcd0e768],1
   14000d545:	mov    ?,WORD PTR [rdi+0x3d29522e]
   14000d54b:	je     0x14000d544
   14000d54d:	jrcxz  0x14000d526
   14000d54f:	(bad)  
   14000d550:	adc    BYTE PTR [rax+0x57],0x50
   14000d554:	pushf  
   14000d555:	shr    DWORD PTR [edx],1
   14000d558:	rex.WRB xchg r14,rax
   14000d55a:	gs add al,0x41
   14000d55d:	shl    dl,0x7b
   14000d560:	mov    esi,0x379efbe2
   14000d565:	je     0x14000d549
   14000d567:	add    eax,ebx
   14000d569:	push   rdi
   14000d56a:	jle    0x14000d59d
   14000d56c:	sbb    DWORD PTR [rbx],esi
   14000d56e:	xchg   esi,eax
   14000d56f:	test   DWORD PTR [rcx-0x6597a627],edi
   14000d575:	xchg   BYTE PTR [rdi-0x42],ah
   14000d578:	stc    
   14000d579:	sbb    al,0xd6
   14000d57b:	(bad)  
   14000d57c:	xlat   BYTE PTR ds:[rbx]
   14000d57d:	pop    rax
   14000d57e:	jbe    0x14000d5ab
   14000d580:	push   rsi
   14000d581:	mov    esp,0x25c14f13
   14000d586:	out    dx,eax
   14000d587:	jrcxz  0x14000d528
   14000d589:	fwait
   14000d58a:	sbb    al,0xfb
   14000d58c:	cdq    
   14000d58d:	lock ret 0x5b28
   14000d591:	xchg   esi,eax
   14000d592:	test   DWORD PTR [rbx],eax
   14000d594:	repz mov bl,0x78
   14000d597:	(bad)  
   14000d598:	jmp    0x1b76ba604
   14000d59d:	jo     0x14000d587
   14000d59f:	shl    BYTE PTR [rcx],1
   14000d5a1:	pop    rdx
   14000d5a2:	sub    dl,BYTE PTR [rsi]
   14000d5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5a5:	jg     0x14000d589
   14000d5a7:	jrcxz  0x14000d5c8
   14000d5a9:	sti    
   14000d5aa:	in     al,0x13
   14000d5ac:	pop    rdi
   14000d5ad:	stc    
   14000d5ae:	repnz sub eax,0x317c4e0c
   14000d5b4:	stc    
   14000d5b5:	jrcxz  0x14000d620
   14000d5b7:	mov    esi,0xc077e4f8
   14000d5bc:	or     BYTE PTR [rcx+0x7d],al
   14000d5bf:	(bad)  
   14000d5c0:	mov    edi,0xc16925b8
   14000d5c5:	rex.WR sahf 
   14000d5c7:	push   rdx
   14000d5c8:	in     al,dx
   14000d5c9:	int3   
   14000d5ca:	(bad)  
   14000d5cb:	jle    0x14000d5c3
   14000d5cd:	jae    0x14000d62e
   14000d5cf:	iret   
   14000d5d0:	gs jae 0x14000d5c2
   14000d5d3:	popf   
   14000d5d4:	scas   al,BYTE PTR es:[rdi]
   14000d5d5:	and    QWORD PTR [rbx-0x49434f4f],r11
   14000d5dc:	mov    es,WORD PTR [rsi]
   14000d5de:	mov    bh,0xaa
   14000d5e0:	leave  
   14000d5e1:	(bad)  
   14000d5e2:	sub    esi,ecx
   14000d5e4:	adc    edx,DWORD PTR [rip+0xffffffff840604f7]        # 0xc406dae1
   14000d5ea:	cmp    eax,0xd552f539
   14000d5ef:	xor    al,0xde
   14000d5f1:	adc    al,0x33
   14000d5f3:	adc    eax,esi
   14000d5f5:	outs   dx,DWORD PTR ds:[rsi]
   14000d5f6:	leave  
   14000d5f7:	jo     0x14000d5f9
   14000d5f9:	loopne 0x14000d617
   14000d5fb:	jno    0x14000d5c7
   14000d5fd:	cmp    dh,BYTE PTR [rdi-0x3c136572]
   14000d603:	push   rsi
   14000d604:	std    
   14000d605:	fs mov bl,0xcb
   14000d608:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d609:	ja     0x14000d61c
   14000d60b:	(bad)  
   14000d60c:	pop    rsi
   14000d60d:	xor    cl,BYTE PTR [rdi-0x75541cdf]
   14000d613:	movabs ds:0x1c71d0d5b3927cc8,al
   14000d61c:	(bad)  
   14000d61d:	jnp    0x14000d5fd
   14000d61f:	mov    dh,0xd1
   14000d621:	jmp    0x14000d618
   14000d623:	mov    eax,0xc7532e8a
   14000d628:	lea    esp,[rsi]
   14000d62a:	jg     0x14000d65c
   14000d62c:	mov    al,0x6f
   14000d62e:	loop   0x14000d694
   14000d630:	or     edi,DWORD PTR [rsi+0x61063083]
   14000d636:	push   0x49640842
   14000d63b:	fidiv  DWORD PTR [rbx+r8*8]
   14000d63f:	in     al,dx
   14000d640:	mov    BYTE PTR [rax],ah
   14000d642:	(bad)  
   14000d643:	cmc    
   14000d644:	cli    
   14000d645:	ss jp  0x14000d645
   14000d648:	(bad)  
   14000d649:	sbb    bh,BYTE PTR [rbp+rcx*2+0x1595edd5]
   14000d650:	xor    al,0xea
   14000d652:	jne    0x14000d6c8
   14000d654:	mov    ebx,0x82976c36
   14000d659:	rex xchg DWORD PTR [rbx+rdx*8-0x70],eax
   14000d65e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d65f:	and    dl,dl
   14000d661:	jp     0x14000d671
   14000d663:	xchg   BYTE PTR [rdx-0x2f65597f],bl
   14000d669:	cmp    esi,esi
   14000d66b:	ret    0x77c3
   14000d66e:	mov    al,0x54
   14000d670:	(bad)  
   14000d671:	ja     0x14000d602
   14000d673:	and    DWORD PTR [rcx+0x3119f4a7],eax
   14000d679:	mov    DWORD PTR [rdx],eax
   14000d67b:	xchg   esp,eax
   14000d67c:	xor    BYTE PTR [rcx+0x6166450f],ah
   14000d682:	(bad)  
   14000d683:	or     esp,edi
   14000d685:	mov    al,0x28
   14000d687:	sub    BYTE PTR [rax],cl
   14000d689:	jl     0x14000d6cb
   14000d68b:	(bad)  
   14000d68c:	sub    eax,0xdc9f09c6
   14000d691:	and    bl,0x3a
   14000d694:	lock or BYTE PTR [rbx-0x72],bh
   14000d698:	add    BYTE PTR [rax-0xec1e8a3],dh
   14000d69e:	and    DWORD PTR [rcx],ebp
   14000d6a0:	adc    bh,BYTE PTR [rdx+riz*8-0x7b]
   14000d6a4:	rex.X (bad) 
   14000d6a6:	rex.B loopne 0x14000d6ec
   14000d6a9:	push   rsi
   14000d6aa:	add    BYTE PTR [rip+0x77eec1a5],bh        # 0x1b7ef9855
   14000d6b0:	loopne 0x14000d6b8
   14000d6b2:	fcomi  st,st(0)
   14000d6b4:	mov    ebp,0x4ccccc2d
   14000d6b9:	loopne 0x14000d68c
   14000d6bb:	xchg   DWORD PTR [rdi],ebx
   14000d6bd:	(bad)  
   14000d6be:	jge    0x14000d667
   14000d6c0:	rex.WRXB test QWORD PTR [r10],r12
   14000d6c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d6c4:	mov    ss,WORD PTR [rbx]
   14000d6c6:	sbb    eax,0x77dd147
   14000d6cb:	rex fsub DWORD PTR [rsp+rdx*2+0x78]
   14000d6d0:	push   rsp
   14000d6d1:	(bad)
   14000d6d6:	push   rdi
   14000d6d7:	fs xchg dl,ch
   14000d6da:	rex.WRB (bad) 
   14000d6dc:	loope  0x14000d685
   14000d6de:	fucomp st(3)
   14000d6e0:	movabs eax,ds:0x73f18260648ebc7
   14000d6e9:	(bad)  
   14000d6ea:	mov    WORD PTR [rbx],?
   14000d6ec:	or     al,0x79
   14000d6ee:	xchg   edi,eax
   14000d6ef:	gs sbb ebx,edx
   14000d6f2:	xchg   ebp,eax
   14000d6f3:	or     ah,BYTE PTR [rsi]
   14000d6f5:	retf   
   14000d6f6:	gs mov esp,0xb84b4b1
   14000d6fc:	(bad)  
   14000d6fd:	mov    edi,0xf775cf0a
   14000d702:	pop    rbp
   14000d703:	mov    esp,0x67391bb3
   14000d708:	(bad)  
   14000d709:	mov    dh,0x21
   14000d70b:	adc    ebx,DWORD PTR [rsi+0xc]
   14000d70e:	push   rbp
   14000d70f:	push   rcx
   14000d710:	jo     0x14000d782
   14000d712:	jno    0x14000d725
   14000d714:	xlat   BYTE PTR ds:[rbx]
   14000d715:	scas   al,BYTE PTR es:[rdi]
   14000d716:	pop    rdi
   14000d717:	(bad)  
   14000d718:	mov    bh,0x2f
   14000d71a:	pop    rsi
   14000d71b:	(bad)  
   14000d71c:	xchg   ecx,eax
   14000d71d:	movabs ds:0x27f3ff5e3e313147,eax
   14000d726:	sahf   
   14000d727:	clc    
   14000d728:	movabs ds:0x9120c75ef7f47c4f,eax
   14000d731:	(bad)  
   14000d732:	mov    ecx,0xfe5727ea
   14000d737:	mov    eax,0x8f63b001
   14000d73c:	add    eax,0x9e9383d
   14000d741:	or     al,0x1a
   14000d743:	and    BYTE PTR [rdi-0x61],0x7f
   14000d747:	movabs eax,ds:0xed6d756d7eb668d0
   14000d750:	rex.RXB xor r11d,DWORD PTR [r9]
   14000d753:	sub    edx,DWORD PTR [rbx+0x2c]
   14000d756:	adc    al,0xe4
   14000d758:	mov    DWORD PTR [rdx+0x19],esi
   14000d75b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d75c:	imul   esp,DWORD PTR [rax+0x75],0x769d037d
   14000d763:	fwait
   14000d764:	test   eax,0x42c826cc
   14000d769:	jno    0x14000d7ce
   14000d76b:	and    BYTE PTR [rsi-0x51298475],dh
   14000d771:	mov    ch,BYTE PTR [rcx-0x3e]
   14000d774:	shr    BYTE PTR [ecx-0x68],cl
   14000d778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d779:	or     DWORD PTR [rbp+0x57c5bb6b],ecx
   14000d77f:	push   rbx
   14000d780:	mov    cl,0xf2
   14000d782:	(bad)  
   14000d783:	(bad)  
   14000d784:	adc    DWORD PTR [rdx-0x7c],0xffffffa9
   14000d788:	(bad)  
   14000d789:	cmp    cl,dl
   14000d78b:	rex.RXB mov r12d,0x8308c9e
   14000d791:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000d793:	fdivr  DWORD PTR fs:[rsi-0x77]
   14000d797:	fwait
   14000d798:	xor    ah,BYTE PTR [rax+0x8]
   14000d79b:	adc    al,0xee
   14000d79d:	pop    rdx
   14000d79e:	rex.RX adc al,0x68
   14000d7a1:	xchg   BYTE PTR [rip+0x5b576104],al        # 0x19b5838ab
   14000d7a7:	(bad)  [rbp-0x2f]
   14000d7aa:	jmp    0x14000d7a1
   14000d7ac:	ret    0x5fd5
   14000d7af:	js     0x14000d7c3
   14000d7b1:	ret    
   14000d7b2:	rex.W push rbx
   14000d7b4:	loop   0x14000d81a
   14000d7b6:	push   rbx
   14000d7b7:	rex.WX ret 
   14000d7b9:	xor    al,0x67
   14000d7bb:	fsubr  QWORD PTR [rbx+0x12]
   14000d7be:	sti    
   14000d7bf:	pushf  
   14000d7c0:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d7c2:	nop
   14000d7c3:	int    0x66
   14000d7c5:	ret    0xc3ce
   14000d7c8:	imul   ebx,DWORD PTR [rsi+0x3a756afa],0xdb5851a1
   14000d7d2:	fadd   DWORD PTR [rax-0x55]
   14000d7d5:	(bad)  
   14000d7d6:	rex.X mov bl,0xd5
   14000d7d9:	and    ebx,0x12
   14000d7dc:	js     0x14000d75f
   14000d7de:	or     bl,BYTE PTR [rdx]
   14000d7e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d7e1:	movabs eax,ds:0xb232c2ce43063cb
   14000d7ea:	rex.XB (bad) 
   14000d7ec:	pop    rax
   14000d7ed:	lods   al,BYTE PTR ds:[rsi]
   14000d7ee:	iret   
   14000d7ef:	(bad)  
   14000d7f0:	or     esp,DWORD PTR [rbx]
   14000d7f2:	lock mov al,0xda
   14000d7f5:	add    al,0x89
   14000d7f7:	mov    dl,0x80
   14000d7f9:	and    DWORD PTR [rbp+0x1e6e9900],0x12013a15
   14000d803:	(bad)  
   14000d804:	add    BYTE PTR [rdx],dl
   14000d806:	add    ebp,DWORD PTR [rax]
   14000d808:	mov    ebp,0x4b2c83c0
   14000d80d:	nop
   14000d80e:	adc    al,0x86
   14000d810:	sub    bh,dl
   14000d812:	xor    al,0x60
   14000d814:	rex.WR
   14000d815:	rex.B add al,0xf0
   14000d818:	or     BYTE PTR [rbp-0x35034615],al
   14000d81e:	movabs eax,ds:0x3aeb812941b3d70
   14000d827:	xlat   BYTE PTR ds:[rbx]
   14000d828:	jmp    0x14000d7ed
   14000d82a:	icebp  
   14000d82b:	(bad)  
   14000d82c:	movabs eax,ds:0x79ef007a3e1c2da8
   14000d835:	in     al,0x61
   14000d837:	fdiv   QWORD PTR [rbx-0x1e]
   14000d83a:	add    al,0x54
   14000d83c:	push   rbp
   14000d83d:	rex.B (bad) 
   14000d83f:	rcl    BYTE PTR [rbx-0x5da9b7b3],0xcb
   14000d846:	ror    BYTE PTR [rbx-0x6f],0xc2
   14000d84a:	adc    eax,ebp
   14000d84c:	cmp    ah,dl
   14000d84e:	cwde   
   14000d84f:	mov    BYTE PTR [rbx+0x25],ah
   14000d852:	sar    BYTE PTR [rdi-0x25],cl
   14000d855:	jne    0x14000d7ed
   14000d857:	(bad)  
   14000d858:	ins    DWORD PTR es:[rdi],dx
   14000d859:	mov    dh,0xdb
   14000d85b:	lods   al,BYTE PTR ds:[rsi]
   14000d85c:	mov    ebx,0x1f1588cf
   14000d861:	ror    BYTE PTR [rsi],0x3
   14000d864:	adc    BYTE PTR [rdi],bl
   14000d866:	sbb    ebx,ecx
   14000d868:	ret    0xfcc2
   14000d86b:	cmp    al,0x0
   14000d86d:	loopne 0x14000d88a
   14000d86f:	iret   
   14000d870:	cmp    al,0x8b
   14000d872:	mov    ch,0xf5
   14000d874:	jne    0x14000d876
   14000d876:	xor    DWORD PTR [rcx-0x2],0x30
   14000d87a:	rex.XB jo 0x14000d824
   14000d87d:	out    dx,al
   14000d87e:	cmp    al,0x7b
   14000d880:	sbb    eax,0xd11ffc4d
   14000d885:	js     0x14000d896
   14000d887:	int3   
   14000d888:	int    0x23
   14000d88a:	fwait
   14000d88b:	mov    bl,0xf0
   14000d88d:	icebp  
   14000d88e:	(bad)  
   14000d88f:	clc    
   14000d890:	and    al,0x16
   14000d892:	(bad)  
   14000d893:	(bad)  
   14000d894:	xor    DWORD PTR [rdi],edi
   14000d896:	(bad)  
   14000d897:	xlat   BYTE PTR ds:[rbx]
   14000d898:	jnp    0x14000d88d
   14000d89a:	cli    
   14000d89b:	cmc    
   14000d89c:	(bad)  
   14000d89d:	(bad)  
   14000d89e:	cli    
   14000d89f:	(bad)  
   14000d8a0:	call   rdx
   14000d8a2:	xchg   ebx,eax
   14000d8a3:	fmul   st,st(1)
   14000d8a5:	fmul   QWORD PTR [rbx-0x7e]
   14000d8a8:	jl     0x14000d89b
   14000d8aa:	cmp    bh,bl
   14000d8ac:	rex.RB xor al,0xc9
   14000d8af:	popf   
   14000d8b0:	and    DWORD PTR [rdi+0x2c901e38],esi
   14000d8b6:	adc    eax,0xc611c1de
   14000d8bb:	xlat   BYTE PTR ds:[rbx]
   14000d8bc:	mov    esi,0x6f07e4fe
   14000d8c1:	scas   eax,DWORD PTR es:[rdi]
   14000d8c2:	outs   dx,BYTE PTR ds:[rsi]
   14000d8c3:	jl     0x14000d8be
   14000d8c5:	out    0xcd,al
   14000d8c7:	and    eax,0x3825085
   14000d8cc:	jae    0x14000d941
   14000d8ce:	cmp    BYTE PTR [rax+0x4194fac8],bh
   14000d8d4:	add    dl,BYTE PTR [rsi-0x122f29a9]
   14000d8da:	jne    0x14000d953
   14000d8dc:	rex.WR (bad) 
   14000d8de:	fisttp QWORD PTR [rax+rax*4+0x6948eba6]
   14000d8e5:	pop    rdx
   14000d8e6:	fcom   DWORD PTR [rsi]
   14000d8e8:	cmp    ebp,DWORD PTR [rsi]
   14000d8ea:	sbb    eax,0x83fc9f16
   14000d8ef:	js     0x14000d931
   14000d8f1:	mov    ah,0xf2
   14000d8f3:	mov    ecx,edi
   14000d8f5:	repz jns 0x14000d8ab
   14000d8f8:	mov    fs,WORD PTR [rdi+rdx*2+0x18642c30]
   14000d8ff:	ss xchg edx,eax
   14000d901:	rex.RX
   14000d902:	rex pushf 
   14000d904:	mov    WORD PTR [rax+0x71125041],?
   14000d90a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d90b:	nop
   14000d90c:	mov    ah,0x12
   14000d90e:	scas   eax,DWORD PTR es:[rdi]
   14000d90f:	jno    0x14000d96e
   14000d911:	(bad)  
   14000d912:	sahf   
   14000d913:	out    0x87,eax
   14000d915:	cmp    eax,0xedb6cf3
   14000d91a:	imul   ebx,DWORD PTR [rsi],0xffffffa2
   14000d91d:	fild   WORD PTR [rbx-0x3d]
   14000d920:	push   rsp
   14000d921:	fs sbb al,0xa0
   14000d924:	adc    al,0x17
   14000d926:	xor    DWORD PTR [rax],0x636b0080
   14000d92c:	sub    eax,0x2e12087a
   14000d931:	gs ins DWORD PTR es:[rdi],dx
   14000d933:	icebp  
   14000d934:	push   rsi
   14000d935:	pop    rax
   14000d936:	movabs ds:0x9d0f3d701869bd47,al
   14000d93f:	pop    rsi
   14000d940:	pmaddwd mm7,QWORD PTR [rdx+0x3d]
   14000d944:	xor    al,0xa
   14000d946:	mov    ch,0x7a
   14000d948:	sbb    eax,0xb61f76ad
   14000d94d:	rex.XB loope 0x14000d949
   14000d950:	or     ah,BYTE PTR [rdx+riz*2]
   14000d953:	and    eax,DWORD PTR [r13+0x64]
   14000d957:	push   rbx
   14000d958:	cmp    DWORD PTR [rax-0x57],ebx
   14000d95b:	xor    al,0x14
   14000d95d:	stos   BYTE PTR es:[rdi],al
   14000d95e:	xor    dl,BYTE PTR [rax-0x70]
   14000d961:	mov    dl,BYTE PTR [rax-0x80]
   14000d964:	xchg   BYTE PTR [rsi-0x3d187c00],bl
   14000d96a:	pop    rbp
   14000d96b:	or     cl,dl
   14000d96d:	push   rax
   14000d96e:	(bad)
   14000d971:	in     al,0x5a
   14000d973:	(bad)  
   14000d974:	(bad)  
   14000d975:	mov    ah,0xa4
   14000d977:	enter  0x8f0,0xb
   14000d97b:	add    esp,DWORD PTR [rax]
   14000d97d:	xor    DWORD PTR [rcx+0x33],0x8
   14000d981:	mov    ebx,0xe042033e
   14000d986:	(bad)  
   14000d987:	jge    0x14000d9bd
   14000d989:	mov    ebx,0xfb3291d7
   14000d98e:	cmp    BYTE PTR [rcx-0x6],bh
   14000d991:	or     BYTE PTR [rsi],bl
   14000d993:	cmp    al,0x7b
   14000d995:	(bad)  
   14000d996:	mov    ds,WORD PTR [rsi]
   14000d998:	cmp    al,BYTE PTR [rsp+rsi*2-0x471c7b26]
   14000d99f:	and    DWORD PTR [rdi+0x99a145e],edi
   14000d9a5:	scas   eax,DWORD PTR es:[rdi]
   14000d9a6:	rex.WXB movabs r8,0xc82f9a2145322fe
   14000d9b0:	es rex.RB xchg r12d,eax
   14000d9b3:	outs   dx,BYTE PTR ds:[rsi]
   14000d9b4:	mov    cl,0xe2
   14000d9b6:	out    dx,eax
   14000d9b7:	addr32 loop 0x14000d9c9
   14000d9ba:	sbb    eax,edx
   14000d9bc:	or     ebx,DWORD PTR [rax+0x5b3054ae]
   14000d9c2:	lods   eax,DWORD PTR ds:[rsi]
   14000d9c3:	loop   0x14000d95a
   14000d9c5:	xlat   BYTE PTR ds:[rbx]
   14000d9c6:	pop    rdi
   14000d9c7:	(bad)  
   14000d9c8:	retf   
   14000d9c9:	scas   eax,DWORD PTR es:[rdi]
   14000d9ca:	mov    esp,0x2173d706
   14000d9cf:	rex.WXB
   14000d9d0:	repnz sahf 
   14000d9d2:	sub    edi,edi
   14000d9d4:	test   al,0x95
   14000d9d6:	pop    rbp
   14000d9d7:	xchg   esi,eax
   14000d9d8:	in     al,0x5d
   14000d9da:	push   rdi
   14000d9db:	clc    
   14000d9dc:	(bad)  
   14000d9dd:	out    dx,eax
   14000d9de:	fwait
   14000d9df:	(bad)  
   14000d9e0:	cwde   
   14000d9e1:	rex test eax,0xbe67c454
   14000d9e7:	lock (bad) 
   14000d9e9:	sub    BYTE PTR [rbp+0x717070c6],dl
   14000d9ef:	shr    edi,1
   14000d9f1:	cmc    
   14000d9f2:	sti    
   14000d9f3:	rex.WRXB (bad) 
   14000d9f5:	(bad)  
   14000d9f6:	(bad)  
   14000d9f7:	call   rdx
   14000d9f9:	lahf   
   14000d9fa:	(bad)  
   14000d9fb:	imul   esi,DWORD PTR [rip+0xffffffffbe27a307],0xffffff98        # 0xfe287d09
   14000da02:	(bad)
   14000da06:	repnz mov cl,0x9b
   14000da09:	js     0x14000da5a
   14000da0b:	sbb    al,0x3
   14000da0d:	adc    bh,dh
   14000da0f:	cmp    ecx,DWORD PTR [rip+0xffffffffecfe17c0]        # 0x12cfef1d5
   14000da15:	rex.WXB mov rbx,QWORD PTR [r10-0x3b09c25a]
   14000da1c:	xchg   ebx,eax
   14000da1d:	out    0x17,eax
   14000da1f:	pop    rsi
   14000da20:	mov    ecx,0x69d202f0
   14000da25:	adc    esi,DWORD PTR [rbx+0x7]
   14000da28:	out    0x70,al
   14000da2a:	in     al,dx
   14000da2b:	enter  0x4c11,0x57
   14000da2f:	sub    ebp,DWORD PTR [rax+0x6c624e4c]
   14000da35:	lods   al,BYTE PTR ds:[rsi]
   14000da36:	or     bh,al
   14000da38:	jno    0x14000d9eb
   14000da3a:	mov    esi,0xe71e81b1
   14000da3f:	and    eax,DWORD PTR [rbx]
   14000da41:	add    DWORD PTR [rsi+0x0],0xffffff88
   14000da45:	es xchg edi,eax
   14000da47:	xor    BYTE PTR [rdx],al
   14000da49:	(bad)  
   14000da4a:	xchg   edi,eax
   14000da4b:	pop    rdi
   14000da4c:	mov    bl,BYTE PTR [rbx]
   14000da4e:	add    DWORD PTR [rcx+0x6],eax
   14000da51:	mov    cl,BYTE PTR [rdi-0x1a]
   14000da54:	(bad)  
   14000da55:	adc    edi,DWORD PTR [rax+rbx*1]
   14000da58:	xor    BYTE PTR [rax],cl
   14000da5a:	adc    DWORD PTR [rax+0x29],eax
   14000da5d:	mov    eax,0x1acc0c08
   14000da62:	sbb    al,0xc9
   14000da64:	mov    al,0x24
   14000da66:	rex.X mov WORD PTR fs:[rax],?
   14000da6a:	add    cl,dh
   14000da6c:	jmp    QWORD PTR [rbp+0x29]
   14000da6f:	stos   BYTE PTR es:[rdi],al
   14000da70:	mov    BYTE PTR [rdi+rsi*8],dl
   14000da73:	mov    ah,BYTE PTR [rdx]
   14000da75:	xchg   DWORD PTR [rdx+riz*1],eax
   14000da78:	push   rcx
   14000da79:	jmp    0xee0c8ca6
   14000da7e:	retf   
   14000da7f:	push   rsp
   14000da80:	jae    0x14000dadf
   14000da82:	(bad)  
   14000da83:	xor    al,BYTE PTR [rcx+rsi*1]
   14000da86:	(bad)  
   14000da87:	and    esi,ecx
   14000da89:	or     eax,0xe324a78f
   14000da8e:	and    BYTE PTR [rbp+0x3c],ah
   14000da91:	fist   DWORD PTR [rdx]
   14000da93:	sbb    al,BYTE PTR [rdi]
   14000da95:	jle    0x14000dac6
   14000da97:	mov    eax,0x80ca46ec
   14000da9c:	xchg   ecx,eax
   14000da9d:	rol    BYTE PTR [rbx-0x67],cl
   14000daa0:	push   0xffffffffffffff9b
   14000daa2:	xchg   DWORD PTR [rbx],ebp
   14000daa4:	mov    ch,0x7a
   14000daa6:	sbb    eax,0x589b1beb
   14000daab:	fcmovnu st,st(0)
   14000daad:	shl    BYTE PTR [rsi-0x53],0x86
   14000dab1:	jbe    0x14000da7a
   14000dab3:	rex.RX mov edi,0x32b9e04f
   14000dab9:	fs (bad) 
   14000dabb:	or     eax,0x80c02a53
   14000dac0:	or     DWORD PTR [rbx-0x4f],eax
   14000dac3:	movabs al,ds:0x2490814570bb3a4a
   14000dacc:	mov    cl,0xd8
   14000dace:	lahf   
   14000dacf:	mov    dl,ch
   14000dad1:	xchg   edx,eax
   14000dad2:	(bad)  
   14000dad3:	add    al,0x4
   14000dad5:	adc    al,0x7e
   14000dad7:	loopne 0x14000db0a
   14000dad9:	jp     0x14000da64
   14000dadb:	ret    0x1f78
   14000dade:	pop    rsi
   14000dadf:	loopne 0x14000db52
   14000dae1:	idiv   DWORD PTR [rdi]
   14000dae3:	mov    dil,0xd7
   14000dae6:	rex.X lahf 
   14000dae8:	lods   al,BYTE PTR ds:[rsi]
   14000dae9:	ret    
   14000daea:	int3   
   14000daeb:	div    BYTE PTR [rax-0x4]
   14000daee:	in     al,0x11
   14000daf0:	mov    esp,0x7107a1fb
   14000daf5:	js     0x14000db68
   14000daf7:	xor    ebp,0x381db7b6
   14000dafd:	mov    ss,WORD PTR [rbx]
   14000daff:	(bad)  
   14000db00:	out    dx,al
   14000db01:	loop   0x14000da9b
   14000db03:	mov    dh,BYTE PTR [rax+0x4b]
   14000db06:	sbb    bh,dl
   14000db08:	adc    al,0xe7
   14000db0a:	pop    rcx
   14000db0b:	(bad)  
   14000db0c:	sbb    DWORD PTR [rax+0x34f9270a],esp
   14000db12:	fucomi st,st(5)
   14000db14:	or     DWORD PTR [rcx+0x2f9f8a3f],0xfbdc6ec6
   14000db1e:	mov    WORD PTR [rbp+0x61],fs
   14000db21:	mov    edx,0x3c00055a
   14000db26:	repz int 0xf3
   14000db29:	fcomp  st(0)
   14000db2b:	fisub  DWORD PTR [rdi+rax*8+0x5a]
   14000db2f:	fimul  DWORD PTR [rcx-0x391a100e]
   14000db35:	(bad)  
   14000db36:	(bad)  
   14000db37:	hlt    
   14000db38:	movabs ds:0x4cc79f3e5cf102bc,eax
   14000db41:	mov    ch,0x8a
   14000db43:	(bad)  
   14000db44:	lahf   
   14000db45:	cld    
   14000db46:	cmp    ah,BYTE PTR [rcx+rcx*2]
   14000db49:	(bad)  
   14000db4a:	loop   0x14000db2e
   14000db4c:	and    dh,BYTE PTR [rip+0xffffffffbf8ba952]        # 0xff8c84a4
   14000db52:	std    
   14000db53:	(bad)  
   14000db54:	(bad)  
   14000db55:	std    
   14000db56:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000db57:	pop    rsi
   14000db58:	mov    ebp,0x7b0d52f0
   14000db5d:	(bad)  
   14000db5e:	stc    
   14000db5f:	leave  
   14000db60:	mov    DWORD PTR [rdi],edi
   14000db62:	(bad)  
   14000db63:	ss sub al,0xb
   14000db66:	adc    bh,bh
   14000db68:	fadd   QWORD PTR [rcx+0x30ee054]
   14000db6e:	lock mov ebx,0xa563f9ff
   14000db74:	jmp    0x18facc0e3
   14000db79:	(bad)  
   14000db7a:	sti    
   14000db7b:	sar    BYTE PTR [rbp-0x29],cl
   14000db7e:	outs   dx,BYTE PTR ds:[rsi]
   14000db7f:	fsub   QWORD PTR [rsi-0x36]
   14000db82:	cmp    al,BYTE PTR [rcx-0x71449171]
   14000db88:	pop    rsp
   14000db89:	(bad)  
   14000db8a:	rex.X
   14000db8b:	gs mov edx,0x8b8b8382
   14000db91:	cwde   
   14000db92:	fwait
   14000db93:	cdq    
   14000db94:	rex.B
   14000db95:	gs push 0x12
   14000db98:	in     eax,0xb1
   14000db9a:	xor    DWORD PTR [rdx+rdi*1+0x1d],esi
   14000db9e:	lods   al,BYTE PTR ds:[rsi]
   14000db9f:	outs   dx,DWORD PTR ds:[rsi]
   14000dba0:	ins    DWORD PTR es:[rdi],dx
   14000dba1:	ret    0xdc71
   14000dba4:	shl    BYTE PTR [rbp+0x13],1
   14000dba7:	(bad)  
   14000dba8:	pop    rbp
   14000dba9:	sbb    al,0x60
   14000dbab:	lea    ecx,[rbx+0x29]
   14000dbae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dbaf:	je     0x14000dbee
   14000dbb1:	in     al,dx
   14000dbb2:	xchg   edi,eax
   14000dbb3:	es loop 0x14000dbf5
   14000dbb6:	add    DWORD PTR [rdx+0x5f118989],edi
   14000dbbc:	sub    eax,0x9f1fbb85
   14000dbc1:	cmp    BYTE PTR [rbx],al
   14000dbc3:	(bad)  
   14000dbc4:	add    ah,BYTE PTR [rdx-0x2e]
   14000dbc7:	repnz lods eax,DWORD PTR cs:[rsi]
   14000dbca:	xor    DWORD PTR [rsi+0x4c0c7262],esi
   14000dbd0:	je     0x14000dbd3
   14000dbd2:	adc    al,dh
   14000dbd4:	rex.X (bad) 
   14000dbd6:	cmp    al,ch
   14000dbd8:	sub    DWORD PTR [rdx+rax*4],edi
   14000dbdb:	clc    
   14000dbdc:	dec    DWORD PTR [rcx-0x14]
   14000dbdf:	sbb    BYTE PTR [rsi],al
   14000dbe2:	shl    DWORD PTR [rbx+rdx*2],1
   14000dbe5:	in     al,dx
   14000dbe6:	stos   DWORD PTR es:[rdi],eax
   14000dbe7:	jmp    0x14000dba3
   14000dbe9:	mov    al,0x6d
   14000dbeb:	xchg   esi,eax
   14000dbec:	rex.X je 0x14000dc68
   14000dbef:	stos   BYTE PTR es:[rdi],al
   14000dbf0:	push   rcx
   14000dbf1:	xor    al,0xe9
   14000dbf3:	movabs al,ds:0xdd63c6cf42186840
   14000dbfc:	outs   dx,BYTE PTR ds:[rsi]
   14000dbfd:	test   al,0xe8
   14000dbff:	movsxd eax,DWORD PTR [rax-0x7fa1e0b8]
   14000dc05:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dc06:	ret    0xc608
   14000dc09:	shr    DWORD PTR [rbx+rdx*8+0x34],1
   14000dc0d:	(bad)  
   14000dc0e:	jo     0x14000dc41
   14000dc10:	rex.WXB cmp QWORD PTR [r11-0xbef7b33],0xfffffffffffffffa
   14000dc18:	jge    0x14000dc4e
   14000dc1a:	pop    rbx
   14000dc1b:	sub    eax,0x626e6fac
   14000dc20:	jns    0x14000dc97
   14000dc22:	or     eax,0xa85b5b9b
   14000dc27:	xlat   BYTE PTR ds:[rbx]
   14000dc28:	cmp    ebp,eax
   14000dc2a:	mov    ah,0x1d
   14000dc2c:	clc    
   14000dc2d:	scas   al,BYTE PTR es:[rdi]
   14000dc2e:	add    ch,BYTE PTR [rip+0x19f9a0b0]        # 0x159fa7ce4
   14000dc34:	call   0x1ac9561cb
   14000dc39:	rex.X (bad) 
   14000dc3b:	or     al,0x55
   14000dc3d:	push   rsi
   14000dc3e:	rex.XB loopne 0x14000dbd0
   14000dc41:	rol    BYTE PTR [rax],1
   14000dc43:	add    DWORD PTR [rbp+0x62],esp
   14000dc46:	(bad)  
   14000dc47:	add    ecx,esi
   14000dc49:	and    DWORD PTR [rbx+0xa],ebp
   14000dc4c:	sub    BYTE PTR [rax],al
   14000dc4e:	xlat   BYTE PTR ds:[rbx]
   14000dc4f:	jae    0x14000dcb2
   14000dc51:	sti    
   14000dc52:	sbb    eax,0xc85b8274
   14000dc57:	xchg   ebp,eax
   14000dc58:	sub    BYTE PTR [rsi-0x21],cl
   14000dc5b:	jae    0x14000dc5f
   14000dc5d:	out    dx,eax
   14000dc5e:	jle    0x14000dc58
   14000dc60:	and    esp,ecx
   14000dc62:	rex.WRB push r15
   14000dc64:	ret    
   14000dc65:	clc    
   14000dc66:	ds mov esi,0x5ed5c97f
   14000dc6c:	ins    BYTE PTR es:[rdi],dx
   14000dc6d:	add    edx,DWORD PTR [rax]
   14000dc6f:	mov    dh,BYTE PTR [rcx+0x0]
   14000dc72:	push   rcx
   14000dc73:	cld    
   14000dc74:	(bad)  
   14000dc75:	lahf   
   14000dc76:	clc    
   14000dc77:	add    bl,ah
   14000dc79:	rex.WXB
   14000dc7a:	rex.WX outs dx,BYTE PTR ds:[rsi]
   14000dc7c:	(bad)
   14000dc7f:	(bad)  
   14000dc80:	(bad)  
   14000dc81:	mov    al,0xc3
   14000dc83:	in     eax,dx
   14000dc84:	xlat   BYTE PTR ds:[rbx]
   14000dc85:	push   rsp
   14000dc86:	adc    eax,0x2632e513
   14000dc8b:	(bad)  
   14000dc8c:	(bad)  
   14000dc8d:	jno    0x14000dc80
   14000dc8f:	retf   0x5c15
   14000dc92:	mov    eax,0x79384af0
   14000dc97:	(bad)
   14000dc9a:	ss xchg edx,eax
   14000dc9c:	scas   al,BYTE PTR es:[rdi]
   14000dc9d:	cld    
   14000dc9e:	shl    BYTE PTR [rbx+0x7b],0x4c
   14000dca2:	clc    
   14000dca3:	and    al,0xe6
   14000dca5:	movabs al,ds:0x5f9786389e4e2aaa
   14000dcae:	std    
   14000dcaf:	ss xchg esi,eax
   14000dcb1:	xchg   edi,eax
   14000dcb2:	xchg   edi,eax
   14000dcb3:	mov    cl,0x78
   14000dcb5:	lock and BYTE PTR [rip+0xfffffffffed7162b],bl        # 0x13ed7f2e7
   14000dcbc:	clc    
   14000dcbd:	or     ebx,DWORD PTR [rdi+0x3f17e4ff]
   14000dcc3:	repz jmp 0x1a32765b4
   14000dcc9:	cmp    al,0x36
   14000dccb:	rex.WRXB (bad) 
   14000dccd:	stc    
   14000dcce:	icebp  
   14000dccf:	mov    DWORD PTR [rdi],ebx
   14000dcd1:	pop    rdi
   14000dcd2:	stc    
   14000dcd3:	jrcxz  0x14000dc9b
   14000dcd5:	and    dh,bh
   14000dcd7:	cmp    dh,cl
   14000dcd9:	jle    0x14000dccc
   14000dcdb:	pop    rcx
   14000dcdc:	ret    
   14000dcdd:	mov    BYTE PTR [rcx+0x0],al
   14000dce0:	xchg   BYTE PTR [rax],bl
   14000dce2:	sub    bh,0xff
   14000dce5:	movabs eax,ds:0x9fa7fd3ff9fed61f
   14000dcee:	jg     0x14000dcd6
   14000dcf0:	mov    ecx,0x6d77df0b
   14000dcf5:	imul   edi,DWORD PTR [rcx],0x9e7b20e4
   14000dcfb:	(bad)  
   14000dcfd:	lock loope 0x14000dd7b
   14000dd00:	fimul  DWORD PTR cs:[rbp+0x1972e46d]
   14000dd07:	push   rsp
   14000dd08:	stos   BYTE PTR es:[rdi],al
   14000dd09:	push   rbx
   14000dd0a:	cmp    BYTE PTR [rax+rsi*2-0x6f],dh
   14000dd0e:	test   eax,0x30a754a1
   14000dd13:	pop    rsi
   14000dd14:	sub    ah,BYTE PTR [rcx-0x55]
   14000dd17:	push   rsi
   14000dd18:	(bad)  
   14000dd19:	div    dh
   14000dd1b:	ss ins BYTE PTR es:[rdi],dx
   14000dd1d:	(bad)  
   14000dd1e:	sbb    DWORD PTR [rax+0x6b84e238],ebx
   14000dd24:	mov    edx,0x6217348e
   14000dd29:	xor    BYTE PTR [rbp+0x23],cl
   14000dd2c:	mov    edi,?
   14000dd2e:	add    al,0x81
   14000dd30:	(bad)  
   14000dd31:	mov    BYTE PTR [rcx],ah
   14000dd33:	jmp    0x14000dd36
   14000dd35:	sbb    DWORD PTR [rbp+rbx*1-0x16def91d],ecx
   14000dd3c:	adc    eax,0x66e630d0
   14000dd41:	pop    rbp
   14000dd42:	push   rbx
   14000dd43:	add    eax,0x99f02939
   14000dd48:	cli    
   14000dd49:	or     al,0x20
   14000dd4b:	or     al,0x0
   14000dd4d:	adc    edi,DWORD PTR [rax+rbx*1+0x15b1f098]
   14000dd54:	(bad)  
   14000dd55:	outs   dx,BYTE PTR ds:[rsi]
   14000dd56:	add    al,0x86
   14000dd58:	sbb    DWORD PTR [rdx+0x30906341],eax
   14000dd5e:	sbb    ah,bl
   14000dd60:	pop    rbx
   14000dd61:	push   rax
   14000dd62:	jrcxz  0x14000dd85
   14000dd64:	rex.XB
   14000dd65:	rex.WR
   14000dd66:	rex.XB and DWORD PTR [r14+0xc],ebp
   14000dd6a:	loop   0x14000dd8a
   14000dd6c:	sbb    BYTE PTR [rax],0xf1
   14000dd6f:	adc    BYTE PTR [rdx],ah
   14000dd71:	mov    es,WORD PTR [rax+0xc89d78b]
   14000dd77:	cmp    DWORD PTR [rax],0x69
   14000dd7a:	loop   0x14000dda8
   14000dd7c:	rex.WX (bad) 
   14000dd7e:	(bad)  [rdi]
   14000dd80:	xor    eax,0xe343bcd6
   14000dd85:	sub    BYTE PTR [rdx-0x29744edc],bh
   14000dd8b:	jno    0x14000dda9
   14000dd8d:	(bad)  
   14000dd8e:	(bad)  
   14000dd8f:	rex.WRB lods al,BYTE PTR ds:[rsi]
   14000dd91:	lods   eax,DWORD PTR ds:[rsi]
   14000dd92:	scas   eax,DWORD PTR es:[rdi]
   14000dd93:	movsxd edi,DWORD PTR [rcx+0x65]
   14000dd96:	adc    eax,0xd8ebebab
   14000dd9b:	fisubr WORD PTR [rsi-0x5f]
   14000dd9e:	(bad)  [rsi-0x20]
   14000dda1:	cmc    
   14000dda2:	add    BYTE PTR [rip+0x2c764348],ah        # 0x16c7720f0
   14000dda8:	push   0x365d09b2
   14000ddad:	movabs al,ds:0x27c6b12a0a001a28
   14000ddb6:	pop    rbp
   14000ddb7:	mov    bh,0x1
   14000ddb9:	pop    rbx
   14000ddba:	pop    rbx
   14000ddbb:	rex.XB jno 0x14000de00
   14000ddbe:	rol    DWORD PTR [rbx],0xf
   14000ddc1:	fmul   QWORD PTR [rbx-0x7fc23079]
   14000ddc7:	leave  
   14000ddc8:	mov    DWORD PTR [rcx+0x50],esi
   14000ddcb:	rex.WX ret 
   14000ddcd:	mov    dh,0x61
   14000ddcf:	rex.X jns 0x14000dd59
   14000ddd2:	sub    eax,0x5add1100
   14000ddd7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ddd8:	cwde   
   14000ddd9:	(bad)
   14000dddc:	jle    0x14000dd7d
   14000ddde:	xor    BYTE PTR [rsi+0x70be26c3],bl
   14000dde4:	cmc    
   14000dde5:	rex.RXB xchg r9d,eax
   14000dde7:	js     0x14000de2f
   14000dde9:	xchg   ebp,eax
   14000ddea:	fmul   QWORD PTR [rdx-0x475bd61d]
   14000ddf0:	ins    DWORD PTR es:[rdi],dx
   14000ddf1:	fcmovnb st,st(6)
   14000ddf3:	xlat   BYTE PTR ds:[rbx]
   14000ddf4:	lahf   
   14000ddf5:	jp     0x14000de11
   14000ddf7:	(bad)  [rbp-0x1295e7a6]
   14000ddfd:	mov    BYTE PTR [eax+0x2c],dh
   14000de01:	out    dx,al
   14000de02:	(bad)  
   14000de03:	fisttp WORD PTR [rcx]
   14000de05:	fimul  DWORD PTR [rdi]
   14000de07:	add    BYTE PTR [rdi+0xe],al
   14000de0a:	(bad)  
   14000de0b:	(bad)  
   14000de0c:	and    eax,0xe3fd9f14
   14000de11:	(bad)  
   14000de12:	loopne 0x14000ddd8
   14000de14:	mov    DWORD PTR [rbx],edx
   14000de16:	test   al,0x56
   14000de18:	sub    cl,BYTE PTR [rbp-0x9826099]
   14000de1e:	xor    ebx,DWORD PTR [rdi]
   14000de20:	std    
   14000de21:	in     eax,dx
   14000de22:	fistp  QWORD PTR [rbp+rax*1+0x7b]
   14000de26:	add    edi,DWORD PTR [rcx+rcx*2-0x70]
   14000de2a:	outs   dx,DWORD PTR ds:[rsi]
   14000de2b:	fmul   st,st(2)
   14000de2d:	(bad)  
   14000de2e:	mov    dh,0xc5
   14000de30:	or     edi,DWORD PTR [rsi-0x3c]
   14000de33:	mov    WORD PTR [edx-0xb],ds
   14000de37:	(bad)  
   14000de38:	sbb    al,0xe5
   14000de3a:	(bad)  
   14000de3b:	rex.RXB
   14000de3c:	rex.R cli 
   14000de3e:	(bad)  
   14000de3f:	mov    ebp,DWORD PTR [rdi]
   14000de41:	jge    0x14000de37
   14000de43:	jmp    0x1bbfb3daf
   14000de48:	xlat   BYTE PTR ds:[rbx]
   14000de49:	outs   dx,BYTE PTR ds:[rsi]
   14000de4a:	xchg   DWORD PTR cs:[rsi+0x61],ebp
   14000de4e:	adc    BYTE PTR [rax+0xfc40c48],dl
   14000de54:	cwde   
   14000de55:	xor    DWORD PTR [rax+0x5d],esi
   14000de58:	je     0x14000deb5
   14000de5a:	fcmovne st,st(0)
   14000de5c:	sub    ax,0x2a54
   14000de60:	push   rbx
   14000de61:	cmp    BYTE PTR [rax+rdi*8+0x20],dh
   14000de65:	(bad)  
   14000de66:	out    0xe7,eax
   14000de68:	xor    BYTE PTR [rbx],dh
   14000de6a:	pop    rbp
   14000de6b:	imul   r13d,DWORD PTR [r12+rcx*1-0x15],0xaed89b1b
   14000de74:	xlat   BYTE PTR ds:[rbx]
   14000de75:	loope  0x14000deb1
   14000de77:	rex.WRX
   14000de78:	rex.W out dx,al
   14000de7a:	shl    BYTE PTR [rip+0xfffffffff263c4a6],1        # 0x13264a326
   14000de80:	cmp    al,0x7b
   14000de82:	mov    bl,BYTE PTR [rbx]
   14000de84:	add    al,cl
   14000de86:	out    dx,eax
   14000de87:	mov    dh,0x6d
   14000de89:	mov    dh,0x6a
   14000de8b:	(bad)  
   14000de8c:	repz out dx,eax
   14000de8e:	(bad)  
   14000de8f:	sahf   
   14000de90:	ds xor ecx,esi
   14000de93:	rex.WB shl BYTE PTR [r14+rbp*4-0x1e],0x6
   14000de99:	and    edi,DWORD PTR [rsi]
   14000de9b:	(bad)  
   14000de9c:	in     al,0x91
   14000de9e:	test   DWORD PTR gs:[rdi+0x15d518d1],esp
   14000dea5:	xchg   esp,eax
   14000dea6:	test   bl,bl
   14000dea8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dea9:	fsub   DWORD PTR [rsi+rdx*2]
   14000deac:	js     0x14000de48
   14000deae:	sub    eax,0x8093d139
   14000deb3:	loope  0x14000dedd
   14000deb5:	and    eax,DWORD PTR [rax]
   14000deb7:	(bad)  
   14000deb8:	xchg   DWORD PTR [rcx],eax
   14000deba:	mov    DWORD PTR [rdi-0x6f572d71],edi
   14000dec0:	rex.WB test BYTE PTR [r14],dil
   14000dec3:	loop   0x14000dec7
   14000dec5:	adc    dl,BYTE PTR [rbx+0xb58893c]
   14000decb:	int3   
   14000decc:	and    ah,dh
   14000dece:	xor    al,bh
   14000ded0:	inc    edx
   14000ded2:	push   rax
   14000ded3:	mov    cl,0xd0
   14000ded6:	(bad)  
   14000ded7:	rex.XB xchg r10d,eax
   14000ded9:	and    al,0x26
   14000dedb:	test   BYTE PTR [rcx+0x2eea2169],ah
   14000dee1:	mov    esi,0xd43d75cb
   14000dee6:	sbb    ecx,DWORD PTR [rip+0xffffffffc55d5edc]        # 0x1055e3dc8
   14000deec:	retf   0x1aea
   14000deef:	outs   dx,BYTE PTR ds:[rsi]
   14000def0:	lods   eax,DWORD PTR ds:[rsi]
   14000def1:	lods   al,BYTE PTR ds:[rsi]
   14000def2:	(bad)  
   14000def3:	jnp    0x14000dea8
   14000def5:	mov    cs,WORD PTR [rsi-0x2d]
   14000def8:	adc    ebx,0x56c08a3
   14000defe:	mov    dl,0x6f
   14000df00:	rex.X mov sil,0xda
   14000df03:	cwde   
   14000df04:	cwde   
   14000df05:	mov    bl,0x70
   14000df07:	idiv   BYTE PTR [rsi-0x3e0b87cd]
   14000df0d:	ja     0x14000df30
   14000df0f:	lahf   
   14000df10:	iret   
   14000df11:	add    DWORD PTR [rax],eax
   14000df13:	imul   ebp,DWORD PTR [rbx-0x13],0xfffffff9
   14000df17:	movabs eax,ds:0x7778563511aaa327
   14000df20:	icebp  
   14000df21:	movsxd ebp,DWORD PTR [rbx]
   14000df23:	mov    dh,0x8b
   14000df25:	add    eax,0x1f15af61
   14000df2a:	sbb    BYTE PTR [rbp+0x0],ch
   14000df2d:	xchg   edx,eax
   14000df2e:	rex.XB mov r12d,0x8655534f
   14000df34:	lock (bad) 
   14000df36:	(bad)  
   14000df37:	jrcxz  0x14000df94
   14000df39:	(bad)  
   14000df3a:	cs loopne 0x14000df18
   14000df3d:	scas   eax,DWORD PTR es:[rdi]
   14000df3e:	pop    rdi
   14000df3f:	test   bh,ch
   14000df41:	rex.RXB and DWORD PTR [r14],r10d
   14000df44:	adc    BYTE PTR [rcx-0x36509f7a],0x3e
   14000df4b:	push   0x7b
   14000df4d:	jl     0x14000deda
   14000df4f:	or     al,0xa0
   14000df51:	cmp    dh,BYTE PTR [rip+0xfffffffff1d75d05]        # 0x131d83c5c
   14000df57:	(bad)  
   14000df58:	(bad)  
   14000df59:	sahf   
   14000df5a:	rcr    ah,0xdc
   14000df5d:	sbb    al,0xa6
   14000df5f:	stos   DWORD PTR es:[rdi],eax
   14000df60:	push   rbp
   14000df61:	ja     0x14000dfd8
   14000df63:	jge    0x14000df62
   14000df65:	sub    ebx,DWORD PTR [rdi]
   14000df67:	stc    
   14000df68:	stc    
   14000df69:	lahf   
   14000df6a:	sti    
   14000df6b:	sbb    dh,BYTE PTR [rsi+0x2]
   14000df6e:	jl     0x14000dfb9
   14000df70:	ja     0x14000dfd1
   14000df72:	rex.WR in al,0x51
   14000df75:	xchg   ebx,eax
   14000df76:	ds mov ecx,0xbfe527da
   14000df7c:	xchg   edx,eax
   14000df7d:	movabs ds:0x879288ec0fbc611f,al
   14000df86:	test   BYTE PTR [rip+0x766cb9a0],0x39        # 0x1b66d992d
   14000df8d:	movs   BYTE PTR es:[rdi],BYTE PTR gs:[rsi]
   14000df8f:	movabs al,ds:0xe0610812194ef173
   14000df98:	(bad)
   14000df9c:	imul   ebp,DWORD PTR [rdi+0x37414a97],0x807ef84c
   14000dfa6:	in     eax,0x8d
   14000dfa8:	es scas al,BYTE PTR es:[rdi]
   14000dfaa:	mov    esp,0x693218f1
   14000dfaf:	adc    edx,DWORD PTR [rbx-0x6b]
   14000dfb2:	rex.WB sbb al,0x38
   14000dfb5:	xor    BYTE PTR [rdi+0x620f8763],cl
   14000dfbb:	jbe    0x14000e037
   14000dfbd:	sbb    ah,BYTE PTR [rbx+0x63]
   14000dfc0:	rex.RB lods al,BYTE PTR ds:[rsi]
   14000dfc2:	scas   al,BYTE PTR es:[rdi]
   14000dfc3:	lods   eax,DWORD PTR ds:[rsi]
   14000dfc4:	movabs ds:0x17956c6eca3068de,eax
   14000dfcd:	(bad)  
   14000dfce:	push   rbx
   14000dfcf:	sub    DWORD PTR [rip+0xffffffffcb292e6c],edi        # 0x10b2a0e41
   14000dfd5:	xor    bh,dl
   14000dfd7:	pop    rsp
   14000dfd8:	and    BYTE PTR [esi-0x5f],bh
   14000dfdc:	mov    edx,DWORD PTR [rbx+0x24f5291c]
   14000dfe2:	mov    esp,0x8864c480
   14000dfe7:	(bad)  
   14000dfe8:	mov    bl,0x56
   14000dfea:	rol    DWORD PTR [rax+0x34],1
   14000dfed:	mov    ecx,0xc8052d35
   14000dff2:	rex.WR (bad) 
   14000dff4:	xchg   edx,eax
   14000dff5:	clc    
   14000dff6:	ds push 0x2e29058c
   14000dffc:	jrcxz  0x14000e076
   14000dffe:	cmp    BYTE PTR [rbx+0x1342621c],dl
   14000e004:	rex.WRX (bad) 
   14000e006:	mov    edi,DWORD PTR [rbx+0x4b5e03f4]
   14000e00c:	int3   
   14000e00d:	xor    BYTE PTR [rax+0x213c57c],ch
   14000e013:	sub    esp,DWORD PTR [rdx]
   14000e015:	mov    ch,0x15
   14000e017:	(bad)  
   14000e018:	(bad)  
   14000e019:	rex.WRB out dx,al
   14000e01b:	sti    
   14000e01c:	mov    al,0xdf
   14000e01e:	adc    al,0x61
   14000e020:	and    eax,0xc243851
   14000e025:	ret    
   14000e026:	ror    BYTE PTR [rcx+0x268befe4],0x3c
   14000e02d:	fwait
   14000e02e:	hlt    
   14000e02f:	ret    0x3735
   14000e032:	mov    WORD PTR [rsi+riz*4],ss
   14000e035:	stos   DWORD PTR es:[rdi],eax
   14000e036:	adc    eax,0x1e3673cc
   14000e03b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e03c:	adc    al,0x8e
   14000e03e:	jmp    0x14000dfe2
   14000e040:	fisubr WORD PTR [rax+0x62]
   14000e043:	jns    0x14000e0ba
   14000e045:	adc    eax,0xa32f6f37
   14000e04a:	push   rsi
   14000e04b:	scas   eax,DWORD PTR es:[rdi]
   14000e04c:	jrcxz  0x14000e02e
   14000e04e:	ret    0x78c3
   14000e051:	clc    
   14000e052:	fadd   QWORD PTR [rbx]
   14000e054:	enter  0xb365,0x70
   14000e058:	cmp    DWORD PTR [rdi+0x42],edx
   14000e05b:	test   BYTE PTR [rcx-0x46],ch
   14000e05e:	scas   al,BYTE PTR es:[rdi]
   14000e05f:	in     eax,dx
   14000e060:	loopne 0x14000e0bc
   14000e062:	mov    bh,ch
   14000e064:	adc    al,0x3d
   14000e066:	add    al,ah
   14000e068:	xor    DWORD PTR [rbx+rbp*1],edx
   14000e06b:	and    DWORD PTR ds:[rbx+rbx*8],eax
   14000e06f:	cmc    
   14000e070:	cli    
   14000e071:	rcl    BYTE PTR [rip+0x33f63e3f],1        # 0x173f71eb6
   14000e077:	stc    
   14000e078:	xchg   ebx,eax
   14000e079:	stos   DWORD PTR es:[rdi],eax
   14000e07a:	(bad)  
   14000e07b:	movabs eax,ds:0xe7d1fc4d9a340585
   14000e084:	mov    edi,0x11b36688
   14000e089:	sahf   
   14000e08a:	stos   DWORD PTR es:[rdi],eax
   14000e08b:	or     edi,0xe60dc325
   14000e091:	mov    esi,0xc7b17ad9
   14000e096:	(bad)  
   14000e097:	syscall 
   14000e099:	pop    rcx
   14000e09a:	rex.RX xor DWORD PTR [rdi-0x3ba756b9],r11d
   14000e0a1:	xlat   BYTE PTR ds:[rbx]
   14000e0a2:	lahf   
   14000e0a3:	jle    0x14000e0bf
   14000e0a5:	stc    
   14000e0a6:	jl     0x14000e0c6
   14000e0a8:	out    dx,eax
   14000e0a9:	cmp    dh,BYTE PTR [rdi+0x2e]
   14000e0ac:	mov    al,0x1d
   14000e0ae:	out    0x5b,eax
   14000e0b0:	(bad)  
   14000e0b1:	test   edi,0xb74fd7fe
   14000e0b7:	(bad)  
   14000e0b8:	rex.WRB (bad) 
   14000e0ba:	ficomp WORD PTR [rdi]
   14000e0bd:	mov    dl,0xbf
   14000e0bf:	fcmovnb st,st(4)
   14000e0c1:	rex.WRXB scas al,BYTE PTR es:[rdi]
   14000e0c3:	clc    
   14000e0c4:	ret    
   14000e0c5:	mov    ah,0xff
   14000e0c7:	xchg   BYTE PTR [rbp-0xb80bc08],ch
   14000e0cd:	push   rax
   14000e0ce:	push   rbx
   14000e0cf:	clc    
   14000e0d0:	(bad)  
   14000e0d2:	(bad)  
   14000e0d3:	jg     0x14000e0cb
   14000e0d5:	mov    ecx,0x77fb5e97
   14000e0da:	outs   dx,DWORD PTR ds:[rsi]
   14000e0db:	pop    rsp
   14000e0dc:	pop    rdi
   14000e0dd:	(bad)  
   14000e0de:	ror    DWORD PTR [rsi+0x4a],1
   14000e0e1:	rex.WB mov BYTE PTR [r14-0x5],sil
   14000e0e5:	jle    0x14000e0f7
   14000e0e7:	(bad)  
   14000e0e8:	lock xchg DWORD PTR [rsi],ebp
   14000e0eb:	cmp    esp,DWORD PTR [rcx-0x4614445f]
   14000e0f1:	cs mov edx,0x69321aed
   14000e0f7:	adc    edx,DWORD PTR [rbx]
   14000e0f9:	xchg   ebx,eax
   14000e0fa:	jrcxz  0x14000e134
   14000e0fc:	je     0x14000e166
   14000e0fe:	adc    DWORD PTR [rdi+0xf],eax
   14000e101:	sub    eax,0x1a7a6662
   14000e106:	in     eax,0xb1
   14000e108:	xor    DWORD PTR [rsp+rbp*2+0x6e],ebp
   14000e10c:	movabs ds:0x4ab9a465914068d6,al
   14000e115:	stos   DWORD PTR es:[rdi],eax
   14000e116:	nop
   14000e117:	addr32 (bad) 
   14000e119:	and    DWORD PTR [rcx+0x76e838e3],eax
   14000e11f:	sbb    edx,edx
   14000e121:	out    dx,al
   14000e122:	(bad)  
   14000e123:	push   rcx
   14000e124:	retf   
   14000e125:	out    dx,al
   14000e126:	clc    
   14000e127:	(bad)  
   14000e128:	pop    QWORD PTR [rdi+0x3613f106]
   14000e12e:	ins    BYTE PTR es:[rdi],dx
   14000e12f:	rex.RB sbb al,0x5
   14000e132:	cld    
   14000e133:	mov    cl,0xb
   14000e135:	push   rbx
   14000e136:	rex.RB retf 0x4148
   14000e13a:	push   rbx
   14000e13b:	cwde   
   14000e13c:	cmp    eax,0x56c0480c
   14000e141:	out    dx,al
   14000e142:	and    DWORD PTR [rsi-0x41],ebp
   14000e145:	jo     0x14000e136
   14000e147:	(bad)  
   14000e148:	sbb    BYTE PTR [rdx-0x24],ch
   14000e14b:	adc    edx,DWORD PTR [rax]
   14000e14d:	xor    DWORD PTR [rbp-0x11224108],ebp
   14000e153:	jrcxz  0x14000e181
   14000e155:	(bad)  
   14000e156:	xor    DWORD PTR [rdi+rsi*4+0x618cff13],eax
   14000e15d:	mov    edi,0x18c1845
   14000e162:	shl    BYTE PTR [rax],0x96
   14000e165:	xchg   esi,eax
   14000e166:	adc    al,0x17
   14000e168:	clc    
   14000e169:	and    BYTE PTR [rdi],ch
   14000e16b:	rex.XB sbb sil,r8b
   14000e16e:	and    al,0xc4
   14000e170:	(bad)  
   14000e171:	rex.WR (bad) 
   14000e173:	out    0x22,eax
   14000e175:	mov    WORD PTR [rax],ss
   14000e177:	mov    edi,0xa2efb859
   14000e17c:	(bad)  
   14000e17d:	rex.X
   14000e17e:	movabs rsp,0x17ee3c4f7c42cf09
   14000e188:	out    0x20,eax
   14000e18a:	int3   
   14000e18b:	scas   al,BYTE PTR es:[rdi]
   14000e18c:	jo     0x14000e15e
   14000e18e:	xor    al,0x9e
   14000e190:	(bad)  
   14000e191:	(bad)  
   14000e192:	xor    eax,0xfa4d87f1
   14000e197:	mov    eax,0xfd749fbb
   14000e19c:	cmp    eax,0x5d38215e
   14000e1a1:	test   eax,0xe2cd9b20
   14000e1a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e1a7:	or     edx,DWORD PTR [rdi]
   14000e1a9:	jo     0x14000e19c
   14000e1ab:	repnz (bad) 
   14000e1ad:	add    DWORD PTR [rcx-0x32],edx
   14000e1b0:	mov    ebp,0x6df17ad2
   14000e1b5:	ret    
   14000e1b6:	cwde   
   14000e1b7:	jg     0x14000e182
   14000e1b9:	push   rdi
   14000e1ba:	es pop rcx
   14000e1bc:	jg     0x14000e1e7
   14000e1be:	pop    rbp
   14000e1bf:	(bad)  
   14000e1c0:	jmp    0x104f10918
   14000e1c5:	xlat   BYTE PTR ds:[rbx]
   14000e1c6:	lahf   
   14000e1c7:	(bad)  
   14000e1c8:	jrcxz  0x14000e184
   14000e1ca:	pop    rax
   14000e1cb:	pop    rax
   14000e1cc:	pop    rax
   14000e1cd:	movabs al,ds:0xaff5feeffabcd369
   14000e1d6:	jg     0x14000e1d4
   14000e1d8:	retf   0x8ba5
   14000e1db:	rex.WRB mov WORD PTR [r14-0xf],ds
   14000e1df:	add    eax,0xe26a3fba
   14000e1e4:	(bad)
   14000e1e8:	fwait
   14000e1e9:	clc    
   14000e1ea:	rex.WB mov r14b,0xdf
   14000e1ed:	push   0xc2310f7
   14000e1f2:	ror    BYTE PTR [rbx],0x17
   14000e1f5:	pop    rsi
   14000e1f6:	(bad)  
   14000e1f7:	(bad)
   14000e1fb:	ds jns 0x14000e1fb
   14000e1fe:	out    0x1a,al
   14000e200:	sbb    al,0xcf
   14000e202:	and    DWORD PTR [rdx],0xffffffc9
   14000e205:	or     BYTE PTR [rax+0x39f3f1d0],cl
   14000e20b:	rex.WXB mov ?,WORD PTR [rip+0xffffffffb86c6e16]        # 0xf86d5028
   14000e212:	rex.WX (bad) 
   14000e214:	ds rex.W
   14000e216:	rex cdq 
   14000e218:	(bad)  
   14000e219:	mov    esi,0x7bb1c3e7
   14000e21e:	call   0xdb497c98
   14000e223:	sub    DWORD PTR [rsp+rcx*2-0x6c],ecx
   14000e227:	jno    0x14000e289
   14000e229:	loope  0x14000e22b
   14000e22b:	mov    ds,WORD PTR [rdi]
   14000e22d:	test   BYTE PTR ds:[rbx],al
   14000e230:	repz xor ebx,DWORD PTR [rax]
   14000e233:	(bad)  
   14000e234:	xchg   ebp,eax
   14000e235:	mov    al,0x5d
   14000e237:	stos   DWORD PTR es:[rdi],eax
   14000e238:	movabs ds:0x8cc1865176b0e9d5,eax
   14000e241:	adc    DWORD PTR [rcx+0x7704a98a],0xd074eed0
   14000e24b:	mov    bh,0x1d
   14000e24d:	clc    
   14000e24e:	mov    esi,0xe3f13037
   14000e253:	sub    ebp,DWORD PTR [rbp+0x3c]
   14000e256:	in     eax,0x6
   14000e258:	in     al,dx
   14000e259:	pop    rsp
   14000e25a:	xchg   ecx,eax
   14000e25b:	jrcxz  0x14000e22c
   14000e25d:	test   DWORD PTR [rcx],ebp
   14000e25f:	ds (bad) 
   14000e261:	movabs ds:0x7a6ba0d35575dd26,eax
   14000e26a:	enter  0xa74d,0x44
   14000e26e:	hlt    
   14000e26f:	xchg   esi,eax
   14000e270:	(bad)  
   14000e271:	loop   0x14000e24b
   14000e273:	cmp    BYTE PTR [rbx+0x6e2ebc50],dh
   14000e279:	sub    al,0x80
   14000e27b:	popf   
   14000e27c:	pop    rcx
   14000e27d:	xchg   ecx,eax
   14000e27e:	fs stos BYTE PTR es:[rdi],al
   14000e280:	xor    al,0xe
   14000e282:	rex.W mov cl,dil
   14000e285:	rex.WRX jb 0x14000e28d
   14000e288:	(bad)  
   14000e289:	rex.W
   14000e28a:	data16 xor al,0xe2
   14000e28d:	and    ebx,DWORD PTR [rcx+0x69a0153e]
   14000e293:	cld    
   14000e294:	mov    bh,0xef
   14000e296:	add    BYTE PTR [rdx],bh
   14000e298:	movsxd ebx,edi
   14000e29a:	(bad)  
   14000e29b:	push   0xffffffffffffffff
   14000e29d:	add    BYTE PTR [rax+rbx*1],cl
   14000e2a0:	mov    bh,BYTE PTR [rax+0x38]
   14000e2a3:	and    dh,dh
   14000e2a5:	push   rdi
   14000e2a6:	mov    WORD PTR [rcx-0x61],ss
   14000e2a9:	(bad)  
   14000e2aa:	rex.X cmp esi,DWORD PTR [rcx-0x3155701e]
   14000e2b1:	mov    ebx,0x201d8293
   14000e2b6:	rex.X std 
   14000e2b8:	mov    eax,ebp
   14000e2ba:	and    ah,BYTE PTR [rsi-0x56]
   14000e2bd:	push   rbp
   14000e2be:	xor    al,0x1b
   14000e2c0:	or     eax,0x37e4fe3c
   14000e2c5:	ror    BYTE PTR [rsi],1
   14000e2c7:	rex.WXB jbe 0x14000e2b9
   14000e2ca:	sahf   
   14000e2cb:	(bad)  
   14000e2cc:	mov    bl,0xd7
   14000e2ce:	test   BYTE PTR [rdi],dl
   14000e2d0:	rex.XB xchg r9d,eax
   14000e2d2:	gs sbb al,0x3b
   14000e2d5:	jp     0x14000e2eb
   14000e2d7:	stos   DWORD PTR es:[rdi],eax
   14000e2d8:	imul   ebp,DWORD PTR [rbx+0x38],0xffffffff
   14000e2dc:	lods   eax,DWORD PTR ds:[rsi]
   14000e2dd:	outs   dx,DWORD PTR ds:[rsi]
   14000e2de:	loope  0x14000e2c4
   14000e2e0:	leave  
   14000e2e1:	xchg   ebx,eax
   14000e2e2:	je     0x14000e2a0
   14000e2e4:	pop    rsp
   14000e2e5:	pop    rsi
   14000e2e6:	std    
   14000e2e7:	cld    
   14000e2e8:	out    0x3e,eax
   14000e2ea:	sti    
   14000e2eb:	xchg   DWORD PTR [rdi-0xa],edi
   14000e2ee:	stc    
   14000e2ef:	iret   
   14000e2f0:	sub    eax,0x2f806f61
   14000e2f5:	jmp    0x1338b72e4
   14000e2fa:	ja     0x14000e297
   14000e2fc:	clc    
   14000e2fd:	rex.B in al,dx
   14000e2ff:	jnp    0x14000e2c5
   14000e301:	mov    gs,esi
   14000e303:	mov    ch,dh
   14000e305:	rex.RXB lea r12d,[r9-0x50342ba9]
   14000e30c:	jge    0x14000e309
   14000e30e:	rcl    edi,0x2f
   14000e311:	pop    rdi
   14000e312:	jnp    0x14000e2fa
   14000e314:	neg    dl
   14000e316:	mov    dh,0xdc
   14000e318:	mov    bl,0x1d
   14000e31a:	rex.WRX xor rax,0xffffffffcf2c2e8f
   14000e320:	cmc    
   14000e321:	rex.XB and r8d,0x79
   14000e325:	ds rex.R sti 
   14000e328:	data16 rex.WX sub QWORD PTR [rax+0x11],rax
   14000e32d:	push   0xfffffffffffffff2
   14000e32f:	xchg   edx,ecx
   14000e331:	rcr    esp,0x95
   14000e334:	addr32 rex.WX cmp al,0x4d
   14000e338:	sbb    BYTE PTR [rdx+0x972f186],bh
   14000e33e:	or     eax,DWORD PTR [rdi]
   14000e340:	cmpxchg BYTE PTR [rax],dh
   14000e343:	movabs eax,ds:0x36ad5a04e4e4c15a
   14000e34c:	add    ecx,DWORD PTR [rdi]
   14000e34e:	and    eax,0x64cd909
   14000e353:	xchg   cl,al
   14000e355:	push   0xffffffffffffffbf
   14000e357:	jnp    0x14000e316
   14000e359:	ds sbb cl,ch
   14000e35c:	es cmp bl,ch
   14000e35f:	cs sbb al,0x2e
   14000e362:	push   rbp
   14000e363:	(bad)  
   14000e364:	(bad)  
   14000e365:	jg     0x14000e3d0
   14000e367:	loop   0x14000e2eb
   14000e369:	(bad)  
   14000e36a:	test   DWORD PTR [rdx],0xbb74eaa0
   14000e370:	test   al,0x35
   14000e372:	sbb    bl,al
   14000e374:	(bad)  
   14000e376:	rex scas eax,DWORD PTR es:[rdi]
   14000e378:	xlat   BYTE PTR ds:[rbx]
   14000e379:	and    DWORD PTR [rsi+0x6194869],0xffffffb2
   14000e380:	fldcw  WORD PTR [rsi+rax*8]
   14000e383:	mov    al,BYTE PTR [rbp-0x6c]
   14000e386:	mov    al,BYTE PTR [rbp-0x1c]
   14000e389:	jb     0x14000e3e4
   14000e38b:	cwde   
   14000e38c:	xchg   BYTE PTR [rcx],dl
   14000e38e:	scas   al,BYTE PTR es:[rdi]
   14000e38f:	int3   
   14000e390:	or     cl,BYTE PTR [rdi+0x7abe5595]
   14000e396:	imul   ebx,DWORD PTR [rdx+0x71b8c61e],0xbd2719a
   14000e3a0:	rex.W
   14000e3a1:	data16 adc al,BYTE PTR [rsi]
   14000e3a4:	(bad)  
   14000e3a5:	neg    BYTE PTR [rsi]
   14000e3a7:	xchg   BYTE PTR [rcx],ah
   14000e3a9:	(bad)  
   14000e3aa:	sub    r9b,BYTE PTR [rcx]
   14000e3ad:	mov    rcx,db5
   14000e3b0:	or     al,0xe2
   14000e3b2:	cs jg  0x14000e339
   14000e3b5:	jne    0x14000e37f
   14000e3b7:	add    edx,DWORD PTR [rbx]
   14000e3b9:	ds (bad) 
   14000e3bb:	rex.WRB mov BYTE PTR [r15-0x4d9dad64],r13b
   14000e3c2:	es (bad) 
   14000e3c4:	retf   
   14000e3c5:	sub    BYTE PTR [rbx+0x23],al
   14000e3c8:	sahf   
   14000e3c9:	or     ebx,DWORD PTR [rbp-0x2]
   14000e3cc:	fdivr  st,st(3)
   14000e3ce:	xchg   edx,eax
   14000e3cf:	cmp    BYTE PTR [rax-0x54fd4cd4],cl
   14000e3d5:	rex.RX movabs ds:0xd7d0beae090b38c1,eax
   14000e3df:	fld    TBYTE PTR [rbp-0x1e]
   14000e3e2:	(bad)  
   14000e3e3:	push   rdx
   14000e3e4:	xlat   BYTE PTR ds:[rbx]
   14000e3e5:	adc    eax,0xf4dcfeab
   14000e3ea:	xor    al,0xf2
   14000e3ec:	fldcw  WORD PTR [rsi+rbx*4]
   14000e3ef:	jle    0x14000e3df
   14000e3f1:	jns    0x14000e44f
   14000e3f3:	mov    edx,0xefe4797c
   14000e3f8:	(bad)  [rip+0xffffffffbb8603a8]        # 0xfb86e7a6
   14000e3fe:	hlt    
   14000e3ff:	rex.XB pop r15
   14000e401:	(bad)  
   14000e402:	mov    dl,0xd
   14000e404:	stos   BYTE PTR es:[rdi],al
   14000e405:	mov    bh,BYTE PTR [rcx-0x1471ea96]
   14000e40b:	loop   0x14000e409
   14000e40d:	repz (bad) 
   14000e40f:	(bad)  
   14000e410:	jno    0x14000e483
   14000e412:	add    DWORD PTR [rbx],edx
   14000e414:	jrcxz  0x14000e3f9
   14000e416:	int    0xf3
   14000e418:	out    0xcf,eax
   14000e41a:	jg     0x14000e406
   14000e41c:	(bad)  
   14000e41d:	std    
   14000e41e:	(bad)  
   14000e41f:	outs   dx,DWORD PTR ds:[rsi]
   14000e420:	mov    ebp,0xe00fb78a
   14000e425:	rex.WXB
   14000e426:	rex.WRX cld 
   14000e428:	(bad)  
   14000e429:	fs sahf 
   14000e42b:	jge    0x14000e3e8
   14000e42d:	sti    
   14000e42e:	ret    
   14000e42f:	(bad)  
   14000e430:	shl    BYTE PTR [rbx],1
   14000e432:	jge    0x14000e432
   14000e434:	stc    
   14000e435:	(bad)  
   14000e436:	(bad)  
   14000e437:	xchg   esi,eax
   14000e438:	outs   dx,BYTE PTR ds:[rsi]
   14000e439:	outs   dx,DWORD PTR ds:[rsi]
   14000e43a:	pop    rsp
   14000e43b:	(bad)  [rsi+0x74]
   14000e43e:	adc    al,0x21
   14000e440:	jge    0x14000e456
   14000e442:	add    al,0xa2
   14000e444:	and    DWORD PTR [rax-0x5b7020f1],ecx
   14000e44a:	rol    ebx,0x8b
   14000e44d:	or     al,0xc
   14000e44f:	add    DWORD PTR [rdi],0x60a05f8d
   14000e455:	rex sbb eax,0x4a031b8
   14000e45b:	add    DWORD PTR [rdi],ecx
   14000e45d:	(bad)  
   14000e45e:	in     al,dx
   14000e45f:	pop    rsi
   14000e460:	paddw  mm3,QWORD PTR [rsi+0xb]
   14000e464:	(bad)  
   14000e465:	stos   BYTE PTR es:[rdi],al
   14000e466:	and    BYTE PTR [rdi+0x726260cd],dl
   14000e46c:	add    ah,BYTE PTR [rdi]
   14000e46e:	(bad)  
   14000e46f:	(bad)  
   14000e470:	shl    ecx,0x83
   14000e473:	mov    ebx,DWORD PTR [rax-0x205f5165]
   14000e479:	mov    bh,0x43
   14000e47b:	movabs eax,gs:0x74eed142104da74
   14000e485:	(bad)  [rbp-0x214245e6]
   14000e48b:	add    BYTE PTR [rsi-0x2beb75d0],cl
   14000e491:	out    dx,al
   14000e492:	je     0x14000e505
   14000e494:	jmp    0x1337cfa63
   14000e499:	leave  
   14000e49a:	scas   eax,DWORD PTR es:[rdi]
   14000e49b:	jrcxz  0x14000e487
   14000e49d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e49e:	mov    ebp,eax
   14000e4a0:	jne    0x14000e45d
   14000e4a2:	(bad)  
   14000e4a3:	ror    DWORD PTR [rcx-0x2ddc7a34],0x56
   14000e4aa:	(bad)  
   14000e4ab:	mov    ecx,0x8f071e7c
   14000e4b0:	sbb    al,0xc1
   14000e4b2:	test   eax,0xcce2f733
   14000e4b7:	test   eax,0x8b152893
   14000e4bc:	jl     0x14000e4b0
   14000e4be:	mov    DWORD PTR [rsi-0x4c],ecx
   14000e4c1:	repnz (bad) 
   14000e4c3:	(bad)  
   14000e4c4:	movabs al,ds:0xd11502f1829eb2a6
   14000e4cd:	sub    al,0x23
   14000e4cf:	ds adc esp,eax
   14000e4d2:	std    
   14000e4d3:	mov    al,0x49
   14000e4d5:	(bad)  
   14000e4d6:	push   rsi
   14000e4d7:	sti    
   14000e4d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e4d9:	add    DWORD PTR [rax],edx
   14000e4db:	mov    edi,0xa4659643
   14000e4e0:	xor    r12,QWORD PTR [r9+rdx*8]
   14000e4e4:	in     al,dx
   14000e4e5:	fs rex.WRXB out dx,al
   14000e4e8:	hlt    
   14000e4e9:	js     0x14000e47d
   14000e4eb:	jl     0x14000e475
   14000e4ed:	mov    eax,0xaf1e48e1
   14000e4f2:	clc    
   14000e4f3:	jle    0x14000e481
   14000e4f5:	xor    cl,BYTE PTR [rsi-0xf]
   14000e4f8:	movabs eax,ds:0x4800c43c8dde83c8
   14000e501:	adc    ch,BYTE PTR [rbx-0x23232763]
   14000e507:	(bad)  
   14000e508:	out    0x90,al
   14000e50a:	adc    eax,0xf7e13e3f
   14000e50f:	xor    al,BYTE PTR [rax]
   14000e511:	leave  
   14000e512:	loope  0x14000e585
   14000e514:	mov    bh,0x7e
   14000e516:	movabs ds:0x3afafac152b5465c,al
   14000e51f:	(bad)  
   14000e520:	cld    
   14000e521:	test   eax,0xc5e1d1a7
   14000e526:	cmp    esi,DWORD PTR [rdi-0x5e]
   14000e529:	ret    0x2e1f
   14000e52c:	xchg   ebp,eax
   14000e52d:	sti    
   14000e52e:	rex.WR out 0x89,eax
   14000e531:	push   rcx
   14000e532:	cs xchg ebp,eax
   14000e534:	push   rax
   14000e535:	int3   
   14000e536:	out    0xf1,eax
   14000e538:	(bad)  
   14000e539:	xchg   ebx,eax
   14000e53a:	rex.WRXB movabs rax,ds:0x36d77152b5455d3a
   14000e544:	ss (bad) 
   14000e546:	dec    eax
   14000e548:	iret   
   14000e549:	(bad)  
   14000e54a:	fcom   QWORD PTR [rdi+0x7c03f6f1]
   14000e550:	jno    0x14000e564
   14000e552:	iret   
   14000e553:	pop    rbp
   14000e554:	(bad)  
   14000e555:	stc    
   14000e556:	mov    ebx,0xfb67a18d
   14000e55b:	rex.WXB pop r15
   14000e55d:	jnp    0x14000e59b
   14000e55f:	or     edi,DWORD PTR [rcx]
   14000e561:	jne    0x14000e536
   14000e563:	repz rex.WB (bad) 
   14000e566:	gs ins DWORD PTR es:[rdi],dx
   14000e568:	adc    ecx,DWORD PTR [rsi-0x28a3d15]
   14000e56e:	push   rax
   14000e56f:	cld    
   14000e570:	push   rbx
   14000e571:	mov    BYTE PTR [rsi+0x10],dh
   14000e574:	rex.WX cqo 
   14000e576:	cmp    al,0x14
   14000e578:	loope  0x14000e5c7
   14000e57a:	sub    eax,DWORD PTR [rbx+0x2f]
   14000e57d:	and    BYTE PTR [rcx+0x71],bh
   14000e580:	jb     0x14000e5a3
   14000e582:	rex.WR rcl BYTE PTR [rax],1
   14000e585:	(bad)  
   14000e586:	and    BYTE PTR [rbx+rbx*1-0x29f2d1ec],dl
   14000e58d:	ins    DWORD PTR es:[rdi],dx
   14000e58e:	(bad)  
   14000e58f:	and    BYTE PTR [rcx-0x68d47c0b],al
   14000e595:	mov    bh,BYTE PTR [rax]
   14000e597:	jne    0x14000e583
   14000e599:	add    al,0x8e
   14000e59b:	icebp  
   14000e59c:	lods   al,BYTE PTR ds:[rsi]
   14000e59d:	(bad)  
   14000e59e:	retf   
   14000e59f:	mov    ch,0xe3
   14000e5a1:	rex.RB sub al,0xba
   14000e5a4:	(bad)  [rax-0x60]
   14000e5a7:	pop    rsi
   14000e5a8:	scas   eax,DWORD PTR es:[rdi]
   14000e5a9:	ret    
   14000e5aa:	mov    esi,DWORD PTR [rdi]
   14000e5ac:	(bad)  
   14000e5ad:	or     DWORD PTR [rsi],eax
   14000e5af:	cmp    eax,0x70082080
   14000e5b4:	ins    DWORD PTR es:[rdi],dx
   14000e5b5:	imul   ecx,DWORD PTR [rcx],0xc7c4fa9f
   14000e5bb:	jno    0x14000e5b6
   14000e5bd:	cmc    
   14000e5be:	outs   dx,DWORD PTR ds:[rsi]
   14000e5bf:	out    dx,eax
   14000e5c0:	leave  
   14000e5c1:	or     eax,0x13d62490
   14000e5c6:	(bad)  
   14000e5c7:	clc    
   14000e5c8:	jmp    0x17fc4d648
   14000e5cd:	cli    
   14000e5ce:	movsxd edi,DWORD PTR [rax]
   14000e5d0:	jge    0x14000e5b4
   14000e5d2:	cmp    BYTE PTR [rdx-0x27],dh
   14000e5d5:	sub    al,0xeb
   14000e5d7:	mov    ah,0xab
   14000e5d9:	or     al,0x37
   14000e5db:	add    dh,BYTE PTR [rcx-0x1a]
   14000e5de:	(bad)  
   14000e5df:	mov    esp,0xa1cc40c6
   14000e5e4:	in     al,0xc4
   14000e5e6:	mov    bh,BYTE PTR [rbx+0x5b7749f7]
   14000e5ec:	rex.WB sbb BYTE PTR [rip+0x55545bf1],cl        # 0x1955541e4
   14000e5f3:	or     eax,0xb9876fd5
   14000e5f8:	call   0x13f1dc5ee
   14000e5fd:	(bad)  
   14000e5fe:	out    dx,al
   14000e5ff:	or     DWORD PTR [rbx+rax*2],esp
   14000e602:	test   al,dh
   14000e604:	icebp  
   14000e605:	nop
   14000e606:	test   DWORD PTR [rip+0x11090efb],0xa30f1f7a        # 0x15109f50b
   14000e610:	xchg   edx,eax
   14000e611:	scas   eax,DWORD PTR es:[rdi]
   14000e612:	repz jge 0x14000e634
   14000e615:	jmp    0x14000e5b2
   14000e617:	fwait
   14000e618:	movabs eax,ds:0x2b518f8dd9571fab
   14000e621:	sti    
   14000e622:	outs   dx,BYTE PTR ds:[rsi]
   14000e623:	rex.XB lods al,BYTE PTR ds:[rsi]
   14000e625:	cli    
   14000e626:	(bad)  
   14000e627:	out    0xe6,al
   14000e629:	(bad)  
   14000e62a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e62b:	sar    eax,cl
   14000e62d:	cli    
   14000e62e:	push   rbx
   14000e62f:	rex.WRXB jrcxz 0x14000e5bf
   14000e632:	sbb    esi,DWORD PTR [rdi]
   14000e634:	(bad)  
   14000e635:	sub    dh,dl
   14000e637:	test   dl,dl
   14000e639:	gs cld 
   14000e63b:	xchg   ebx,eax
   14000e63c:	xchg   DWORD PTR [rbp-0x8d5420b],ebx
   14000e642:	xchg   BYTE PTR [rbp-0x4d],ch
   14000e645:	shr    BYTE PTR [rcx-0x24],cl
   14000e648:	jg     0x14000e629
   14000e64a:	sbb    DWORD PTR [rcx+rsi*8+0x4f],edi
   14000e64e:	mov    edi,0x30d35504
   14000e653:	(bad)  
   14000e654:	(bad)  
   14000e655:	(bad)  
   14000e656:	add    al,0x41
   14000e658:	lock loop 0x14000e60a
   14000e65b:	jge    0x14000e641
   14000e65d:	xchg   edi,eax
   14000e65e:	(bad)  
   14000e65f:	mov    bl,0xb9
   14000e661:	mov    esi,0x3ddc7de
   14000e666:	jl     0x14000e6aa
   14000e668:	(bad)  
   14000e669:	jnp    0x14000e6bf
   14000e66b:	rex.WX out dx,eax
   14000e66d:	sub    eax,0x8dbbf9c7
   14000e672:	push   rcx
   14000e673:	out    0x5e,al
   14000e675:	jp     0x14000e675
   14000e677:	ret    0xff2b
   14000e67a:	ds gs pop rax
   14000e67d:	call   QWORD PTR [rbx-0x43]
   14000e680:	(bad)  
   14000e681:	rex.B lods eax,DWORD PTR ds:[rsi]
   14000e683:	fiadd  WORD PTR [rbx+riz*4-0x2f]
   14000e687:	rex.X mov bl,0xdd
   14000e68a:	sub    ebp,0x7010dcb8
   14000e690:	cmc    
   14000e691:	pop    rsi
   14000e692:	(bad)  
   14000e693:	adc    ch,cl
   14000e695:	(bad)  
   14000e696:	rex.RX sub bpl,0x8f
   14000e69a:	cwde   
   14000e69b:	lock xchg esp,eax
   14000e69d:	push   rax
   14000e69e:	cmp    esp,DWORD PTR cs:[rcx]
   14000e6a1:	and    DWORD PTR [rax+rax*1],esi
   14000e6a4:	xchg   esp,eax
   14000e6a5:	rex.RX iret 
   14000e6a7:	push   rcx
   14000e6a8:	cmp    dl,BYTE PTR [rax]
   14000e6aa:	xor    bh,al
   14000e6ac:	jle    0x14000e62e
   14000e6ae:	movsxd bx,DWORD PTR [rbx]
   14000e6b1:	and    edi,0xe414d341
   14000e6b7:	jae    0x14000e712
   14000e6b9:	pushf  
   14000e6ba:	cmp    dh,BYTE PTR [rbp+0x1c]
   14000e6bd:	(bad)  
   14000e6be:	mov    ds,WORD PTR [rsi]
   14000e6c0:	(bad)  
   14000e6c1:	movabs eax,ds:0xfbf6e8dbd6ee7985
   14000e6ca:	fcomp  st(4)
   14000e6cc:	fiadd  DWORD PTR [rdx-0x51]
   14000e6cf:	(bad)  
   14000e6d0:	mov    ch,0x8c
   14000e6d2:	rex.WRX (bad) 
   14000e6d4:	(bad)  
   14000e6d5:	outs   dx,DWORD PTR ds:[rsi]
   14000e6d6:	pop    rsp
   14000e6d7:	mov    edi,0x8df9df8e
   14000e6dc:	jg     0x14000e669
   14000e6de:	lods   eax,DWORD PTR ds:[rsi]
   14000e6df:	lea    ecx,[rbp+0x4a8d87f0]
   14000e6e5:	cdq    
   14000e6e6:	mov    DWORD PTR [rbx+0x62cd9338],ecx
   14000e6ec:	jle    0x14000e74f
   14000e6ee:	adc    edi,ebp
   14000e6f0:	stc    
   14000e6f1:	rol    BYTE PTR [rdi],0xf1
   14000e6f4:	mov    bh,0xbf
   14000e6f6:	out    0xbb,eax
   14000e6f8:	xchg   ecx,eax
   14000e6f9:	retf   
   14000e6fa:	out    0x20,al
   14000e6fc:	jae    0x14000e6d0
   14000e6fe:	(bad)  
   14000e6ff:	(bad)  
   14000e700:	xor    BYTE PTR [rax],al
   14000e702:	rex.WB sbb al,0x81
   14000e705:	mov    ecx,0x5e7f1ee
   14000e70a:	mov    r12b,bpl
   14000e70d:	cwde   
   14000e70e:	pop    rsp
   14000e70f:	loop   0x14000e74c
   14000e711:	ret    
   14000e712:	pop    rax
   14000e713:	cmp    esp,DWORD PTR [rcx+0x0]
   14000e716:	add    al,0xf8
   14000e718:	(bad)  
   14000e719:	addr32 (bad) 
   14000e71b:	es leave 
   14000e71d:	push   rbp
   14000e71e:	movabs ds:0xfc427861b6f88530,eax
   14000e727:	(bad)  
   14000e728:	mov    eax,0xe0bf1057
   14000e72d:	jrcxz  0x14000e790
   14000e72f:	test   eax,edi
   14000e731:	cmp    eax,0x24998ec3
   14000e736:	xor    DWORD PTR [rdx+0x74],edi
   14000e739:	lods   eax,DWORD PTR ds:[rsi]
   14000e73a:	push   rsi
   14000e73b:	or     ebx,DWORD PTR [rbp+0x7d]
   14000e73e:	xor    ecx,esi
   14000e740:	sbb    ebp,0x866eff27
   14000e746:	and    BYTE PTR [rcx-0xe],cl
   14000e749:	sub    DWORD PTR [rsi],edx
   14000e74b:	mov    ebx,DWORD PTR [rax-0x2d3e6661]
   14000e751:	in     eax,dx
   14000e752:	(bad)  
   14000e754:	(bad)  
   14000e755:	ror    edi,cl
   14000e757:	movabs al,ds:0x5ec90c3da45f45cf
   14000e760:	(bad)  
   14000e761:	sbb    al,0xa3
   14000e763:	mov    dh,0x89
   14000e765:	(bad)  
   14000e766:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e767:	(bad)  
   14000e768:	loopne 0x14000e742
   14000e76a:	shl    DWORD PTR [rbx+0x25d2fd78],1
   14000e770:	sub    al,0x2d
   14000e772:	sub    eax,0x63b1e8e1
   14000e777:	mov    ah,0x90
   14000e779:	iret   
   14000e77a:	pop    rdi
   14000e77b:	sti    
   14000e77c:	fstp   st(7)
   14000e77e:	(bad)  
   14000e77f:	lods   eax,DWORD PTR ds:[rsi]
   14000e780:	fistp  QWORD PTR [rdi-0xf]
   14000e783:	mov    ecx,0x1bd85bf3
   14000e788:	loopne 0x14000e7a5
   14000e78a:	mov    ch,0xe2
   14000e78c:	mov    edi,0xb80f8015
   14000e791:	cmp    DWORD PTR [rax],0x7f
   14000e794:	mov    bh,0x31
   14000e796:	rcr    bh,cl
   14000e798:	sti    
   14000e799:	(bad)  
   14000e79a:	mov    ebp,DWORD PTR [rdi]
   14000e79c:	jmp    0xe7ef445a
   14000e7a1:	cli    
   14000e7a2:	mov    ?,edi
   14000e7a4:	sar    DWORD PTR [rsi+0x40],cl
   14000e7a7:	iret   
   14000e7a8:	xor    eax,0xd5a35d5b
   14000e7ad:	jmp    0xe0ebc154
   14000e7b2:	(bad)  
   14000e7b3:	jmp    0x1176e80e8
   14000e7b8:	movsxd ecx,DWORD PTR [rbp+0x7e008341]
   14000e7be:	rex
   14000e7bf:	rex.X pop rbp
   14000e7c1:	cmp    DWORD PTR [rdx],ebx
   14000e7c3:	sub    eax,DWORD PTR [rcx+rcx*4+0x36d8c22e]
   14000e7ca:	or     al,0xae
   14000e7cc:	push   rdx
   14000e7cd:	loop   0x14000e7c8
   14000e7cf:	and    bh,0xf5
   14000e7d2:	sub    DWORD PTR [rcx-0x122e479f],esp
   14000e7d8:	mov    dh,0x61
   14000e7da:	ja     0x14000e797
   14000e7dc:	nop
   14000e7dd:	and    BYTE PTR gs:[rbp-0x1f178e2e],dl
   14000e7e4:	and    ch,dh
   14000e7e6:	cmp    esi,DWORD PTR [rbx+0xa]
   14000e7e9:	mov    esi,ebx
   14000e7eb:	mov    bl,0x28
   14000e7ed:	in     al,0xb3
   14000e7ef:	fcomp  st(4)
   14000e7f1:	fcmovb st,st(6)
   14000e7f3:	int    0xe5
   14000e7f5:	gs je  0x14000e832
   14000e7f8:	fstp   QWORD PTR [rip+0x42117c0]        # 0x14421ffbe
   14000e7fe:	pop    rdi
   14000e7ff:	stc    
   14000e800:	retf   0xf057
   14000e803:	(bad)  
   14000e804:	(bad)  
   14000e805:	std    
   14000e806:	and    bh,dl
   14000e808:	mov    ebp,0x8145641e
   14000e80d:	movsxd ebx,ebx
   14000e80f:	rex.XB
   14000e810:	rex.WRXB jle 0x14000e88f
   14000e813:	(bad)  
   14000e814:	leave  
   14000e815:	mov    dl,0x8c
   14000e817:	stc    
   14000e818:	test   DWORD PTR [rbp-0x4],eax
   14000e81b:	ja     0x14000e81c
   14000e81d:	loopne 0x14000e83e
   14000e81f:	loop   0x14000e7e2
   14000e821:	mov    bl,0xf7
   14000e823:	rex.XB push r9
   14000e825:	(bad)  
   14000e826:	adc    DWORD PTR [rax+0x20],0x98879f1e
   14000e82d:	rol    DWORD PTR [rax+0xd],0xc1
   14000e831:	lock push rax
   14000e833:	rex xchg esi,eax
   14000e835:	in     eax,0x1
   14000e837:	sub    ch,BYTE PTR [rcx+0x72]
   14000e83a:	repnz (bad) 
   14000e83c:	push   rdi
   14000e83d:	fsub   st,st(4)
   14000e83f:	in     al,0x4e
   14000e841:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e842:	(bad)  
   14000e844:	movabs al,ds:0x28f8ab61c78125b
   14000e84d:	(bad)
   14000e850:	and    ch,cl
   14000e852:	cmp    eax,0xc92633c4
   14000e857:	loope  0x14000e854
   14000e859:	ds mov dh,0xb6
   14000e85c:	mov    dh,0x76
   14000e85e:	rex.WR cld 
   14000e860:	cmp    eax,DWORD PTR [rip+0xffffffff808d46f4]        # 0xc08e2f5a
   14000e866:	xor    BYTE PTR [rip+0x69e9b989],bh        # 0x1a9eaa1f5
   14000e86c:	fs mov bl,0x59
   14000e86f:	jl     0x14000e866
   14000e871:	imul   ecx,DWORD PTR [rdi+0x60],0xffffffe9
   14000e875:	imul   ch
   14000e877:	call   0x1137f0e33
   14000e87c:	xor    BYTE PTR [rcx],dl
   14000e87e:	mov    fs,WORD PTR [rcx+0x6e]
   14000e881:	jl     0x14000e87f
   14000e883:	stc    
   14000e884:	(bad)  
   14000e885:	pop    QWORD PTR [rcx]
   14000e887:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e888:	rex.WRX mov bpl,0x30
   14000e88b:	(bad)  
   14000e88c:	xchg   DWORD PTR [rbp+0x7ebc6ded],ebp
   14000e892:	jmp    0x17eb2f6c9
   14000e897:	test   DWORD PTR [rbx+0x5f],ebx
   14000e89a:	clc    
   14000e89b:	cld    
   14000e89c:	out    0x3e,eax
   14000e89e:	mul    BYTE PTR [rdi-0x61]
   14000e8a1:	(bad)  
   14000e8a2:	fmul   QWORD PTR [rip+0xffffffffbbe00fec]        # 0xfbe0f894
   14000e8a8:	fwait
   14000e8a9:	cmp    BYTE PTR [rdi+0x3f],bh
   14000e8ac:	add    BYTE PTR [rdi-0x4],bl
   14000e8af:	(bad)  
   14000e8b0:	sub    eax,0x51a8bd8d
   14000e8b5:	shr    BYTE PTR [rdi-0x4],cl
   14000e8b8:	(bad)  
   14000e8b9:	out    dx,eax
   14000e8ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e8bb:	ds clc 
   14000e8bd:	pop    rbp
   14000e8be:	fcomip st,st(5)
   14000e8c0:	rex
   14000e8c1:	rex call 0x13ca0254e
   14000e8c7:	popf   
   14000e8c8:	jbe    0x14000e899
   14000e8ca:	ds fucomp st(5)
   14000e8cd:	(bad)  
   14000e8cf:	je     0x14000e94c
   14000e8d1:	test   al,0x35
   14000e8d3:	pop    rdx
   14000e8d4:	push   0xffffffffb9b0ba75
   14000e8d9:	jo     0x14000e87e
   14000e8db:	(bad)  
   14000e8dc:	jmp    0xd713019d
   14000e8e1:	rex.RX sub r12d,DWORD PTR [rcx]
   14000e8e4:	mov    eax,0x5ce2202f
   14000e8e9:	mov    DWORD PTR [rbx],ebx
   14000e8eb:	or     al,0x71
   14000e8ed:	loope  0x14000e878
   14000e8ef:	nop
   14000e8f0:	adc    DWORD PTR [rbp-0x2c],0x8800a205
   14000e8f7:	push   rdx
   14000e8f8:	hlt    
   14000e8f9:	jnp    0x14000e958
   14000e8fb:	je     0x14000e8d8
   14000e8fd:	lods   eax,DWORD PTR ds:[rsi]
   14000e8fe:	mov    al,0x75
   14000e900:	push   rdi
   14000e901:	mov    ch,0x32
   14000e903:	test   DWORD PTR [rbx-0x31],edi
   14000e906:	pushf  
   14000e907:	ret    0x13a9
   14000e90a:	rex.RXB push r9
   14000e90c:	cdq    
   14000e90d:	sbb    al,0xc7
   14000e90f:	(bad)  
   14000e910:	out    0x26,al
   14000e912:	ss mov bh,0xb6
   14000e915:	shr    DWORD PTR [rax-0x4a],1
   14000e918:	(bad)  
   14000e919:	(bad)  [rsi+0x78]
   14000e91c:	and    DWORD PTR [rdi+0x3e32f97e],edi
   14000e922:	cmc    
   14000e923:	icebp  
   14000e924:	(bad)  
   14000e925:	loope  0x14000e91d
   14000e927:	int    0xa5
   14000e929:	jo     0x14000e8ea
   14000e92b:	loop   0x14000e924
   14000e92d:	(bad)  
   14000e92e:	(bad)  
   14000e92f:	jns    0x14000e930
   14000e931:	(bad)  
   14000e932:	iret   
   14000e933:	fmul   QWORD PTR [rbx+0x1f23fbbf]
   14000e939:	(bad)  
   14000e93a:	mov    ecx,0xa963effb
   14000e93f:	xor    DWORD PTR [rsi+0x64],ecx
   14000e942:	mov    al,BYTE PTR [rdi-0x6250ddfe]
   14000e948:	hlt    
   14000e949:	or     dl,BYTE PTR [rdx-0x71f6dffa]
   14000e94f:	add    DWORD PTR [rbx-0x5cc658],eax
   14000e955:	(bad)  
   14000e956:	jp     0x14000e960
   14000e958:	leave  
   14000e959:	fdivr  DWORD PTR [rsi]
   14000e95b:	cmp    ecx,eax
   14000e95d:	xchg   ebx,eax
   14000e95e:	mov    bh,0x9d
   14000e960:	lahf   
   14000e961:	sub    ebp,ebp
   14000e963:	clc    
   14000e964:	out    dx,al
   14000e965:	push   rcx
   14000e966:	mov    cl,0x7e
   14000e968:	jl     0x14000e9e5
   14000e96a:	rcl    BYTE PTR [rbx],cl
   14000e96c:	sbb    BYTE PTR [rsi],al
   14000e96e:	data16 add al,BYTE PTR [rax-0x49]
   14000e972:	fcmovnb st,st(5)
   14000e974:	int    0xe5
   14000e976:	lods   al,BYTE PTR gs:[rsi]
   14000e978:	outs   dx,DWORD PTR ds:[rsi]
   14000e979:	outs   dx,BYTE PTR ds:[rsi]
   14000e97a:	ficom  WORD PTR [rcx-0x2281290c]
   14000e980:	inc    DWORD PTR [rax+0x458b1410]
   14000e986:	sub    al,0xcc
   14000e988:	int3   
   14000e989:	loopne 0x14000e955
   14000e98b:	cmc    
   14000e98c:	jmp    0x14000ea06
   14000e98e:	cli    
   14000e98f:	cdq    
   14000e990:	addr32 loope 0x14000e97f
   14000e993:	push   rcx
   14000e994:	mov    dl,0xbb
   14000e996:	(bad)  
   14000e997:	fdiv   DWORD PTR [rdi-0x4a80c331]
   14000e99d:	push   rdx
   14000e99e:	rex.RB (bad) 
   14000e9a0:	rex.WX jrcxz 0x14000e9be
   14000e9a3:	(bad)  
   14000e9a5:	data16 xor WORD PTR es:[ecx],di
   14000e9ab:	xor    ecx,edx
   14000e9ad:	jp     0x14000e994
   14000e9af:	(bad)  
   14000e9b0:	push   rdi
   14000e9b1:	(bad)  
   14000e9b2:	clc    
   14000e9b3:	mov    bh,0xff
   14000e9b5:	in     eax,dx
   14000e9b6:	mov    edi,0xcee16f9
   14000e9bb:	loopne 0x14000e998
   14000e9bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e9be:	pushf  
   14000e9bf:	call   QWORD PTR [rdi]
   14000e9c1:	add    dh,al
   14000e9c3:	in     eax,dx
   14000e9c4:	addr32 in al,dx
   14000e9c6:	imul   eax,DWORD PTR [rax],0x152a42c0
   14000e9cc:	xor    cl,0x63
   14000e9cf:	(bad)  
   14000e9d0:	cmc    
   14000e9d1:	rcl    DWORD PTR [rbx+0x3f],cl
   14000e9d4:	(bad)  
   14000e9d5:	jrcxz  0x14000ea16
   14000e9d7:	(bad)  
   14000e9d8:	inc    BYTE PTR [rdx+0x61]
   14000e9db:	in     al,dx
   14000e9dc:	out    dx,eax
   14000e9dd:	sub    ch,BYTE PTR [rdx-0x9209f02]
   14000e9e3:	or     ch,BYTE PTR [rbp+0x33c21776]
   14000e9e9:	call   0x15d7164e2
   14000e9ee:	(bad)  
   14000e9ef:	imul   ecx,edi,0x4b
   14000e9f2:	loope  0x14000e9a2
   14000e9f4:	push   rdx
   14000e9f5:	or     al,0xc6
   14000e9f7:	movabs ds:0x8f9e2ada9c809818,al
   14000ea00:	sbb    DWORD PTR [rcx-0x4f],0xffffffec
   14000ea04:	(bad)  
   14000ea05:	nop
   14000ea06:	fdecstp 
   14000ea08:	mov    esp,0xe9308400
   14000ea0d:	scas   eax,DWORD PTR es:[rdi]
   14000ea0e:	ins    WORD PTR es:[rdi],dx
   14000ea10:	xor    edx,DWORD PTR [rcx*1-0x11cb534b]
   14000ea17:	cmp    DWORD PTR [rbp+0x12],esi
   14000ea1a:	addr32 out dx,al
   14000ea1c:	cmp    DWORD PTR [rcx-0x2dcd5617],ecx
   14000ea22:	imul   edx,DWORD PTR [rbx],0x6c35dbdb
   14000ea28:	xlat   BYTE PTR ds:[rbx]
   14000ea29:	jmp    0x14000ea93
   14000ea2b:	mov    dh,0x5a
   14000ea2d:	fsubr  DWORD PTR [rsi-0x1c3b0e2b]
   14000ea33:	(bad)  
   14000ea34:	jrcxz  0x14000e9df
   14000ea36:	(bad)  
   14000ea37:	mov    esi,0xe5e5d586
   14000ea3c:	fdiv   st,st(7)
   14000ea3e:	rex.RXB adc r8d,DWORD PTR [r8-0x29]
   14000ea42:	jne    0x14000ea58
   14000ea44:	rex.WXB and rax,0x14723c1c
   14000ea4a:	movsx  esp,di
   14000ea4d:	mov    ebp,0xd39eefb8
   14000ea52:	sub    ah,ah
   14000ea54:	pause  
   14000ea56:	gs push rsi
   14000ea58:	mov    cl,0xa6
   14000ea5a:	lock cmp BYTE PTR [rax-0x6b],bl
   14000ea5e:	movabs ds:0xe20508805e51a0a2,eax
   14000ea67:	sbb    al,0x2
   14000ea69:	add    BYTE PTR [rbx],bh
   14000ea6b:	push   rsi
   14000ea6c:	out    dx,al
   14000ea6d:	mov    eax,0x89ebbe2b
   14000ea72:	rex.W
   14000ea73:	rex.WR loopne 0x14000ea6e
   14000ea76:	jbe    0x14000ea69
   14000ea78:	pop    rcx
   14000ea79:	movabs ds:0x69db009712492b5e,eax
   14000ea82:	xchg   BYTE PTR [rbp-0x3a],r15b
   14000ea86:	outs   dx,BYTE PTR ds:[rsi]
   14000ea87:	sbb    DWORD PTR [rdx],eax
   14000ea89:	add    BYTE PTR [rax-0x20a71429],ch
   14000ea8f:	fadd   st,st(0)
   14000ea91:	in     eax,dx
   14000ea92:	(bad)  
   14000ea93:	push   rbp
   14000ea94:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ea95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ea96:	cmp    BYTE PTR [rdx-0x1511d0d6],ah
   14000ea9c:	(bad)  
   14000ea9d:	call   FWORD PTR [rdi]
   14000ea9f:	ss add al,0x20
   14000eaa2:	call   0x1134d29a0
   14000eaa7:	(bad)  
   14000eaa8:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000eaaa:	add    al,bl
   14000eaac:	xor    al,dh
   14000eaae:	(bad)  
   14000eaaf:	(bad)  
   14000eab0:	call   FWORD PTR [rdi+rsi*4]
   14000eab3:	push   rdi
   14000eab4:	push   rsi
   14000eab5:	jbe    0x14000eaf2
   14000eab7:	xor    al,0x43
   14000eab9:	(bad)  
   14000eaba:	jle    0x14000eae3
   14000eabc:	cmp    edx,DWORD PTR [rax]
   14000eabe:	jno    0x14000eabf
   14000eac0:	repz fstp DWORD PTR [rsi+rbx*1]
   14000eac4:	cmp    al,0x77
   14000eac6:	(bad)  
   14000eac7:	lahf   
   14000eac8:	cld    
   14000eac9:	int3   
   14000eaca:	addr32 xchg ecx,eax
   14000eacc:	leave  
   14000eacd:	fs jno 0x14000eb30
   14000ead0:	jle    0x14000eab0
   14000ead2:	fstp   st(0)
   14000ead4:	fidivr DWORD PTR [rdx-0x48907fad]
   14000eada:	(bad)  
   14000eadb:	popf   
   14000eadc:	mov    edi,0x3f6f8054
   14000eae1:	jrcxz  0x14000eb31
   14000eae3:	or     al,0x40
   14000eae5:	or     al,BYTE PTR [rax+0x6002c009]
   14000eaeb:	std    
   14000eaec:	(bad)  
   14000eaed:	(bad)  
   14000eaee:	sti    
   14000eaef:	(bad)  
   14000eaf0:	rex.WRXB movabs r12,0x7c98989d1f4791fb
   14000eafa:	(bad)  
   14000eafb:	lods   al,BYTE PTR ds:[rsi]
   14000eafc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eafd:	mov    ?,WORD PTR [rbx]
   14000eaff:	sahf   
   14000eb00:	lahf   
   14000eb01:	push   0xffffffffffffffb6
   14000eb03:	mov    edx,0x68dab468
   14000eb08:	mov    ch,0xbb
   14000eb0a:	mov    al,0x1d
   14000eb0c:	xchg   edi,eax
   14000eb0d:	or     DWORD PTR [rbp-0x38],eax
   14000eb10:	repnz and BYTE PTR [rcx],0x88
   14000eb14:	jg     0x14000eabf
   14000eb16:	pop    rax
   14000eb17:	icebp  
   14000eb18:	movabs ds:0xbd3cf3c40ec222eb,eax
   14000eb21:	add    BYTE PTR [rax-0x4],cl
   14000eb24:	cmc    
   14000eb25:	test   BYTE PTR [rcx],bl
   14000eb27:	(bad)  
   14000eb28:	rex.B
   14000eb29:	and    QWORD PTR [rbp+riz*2+0x5736b616],rax
   14000eb31:	js     0x14000eada
   14000eb33:	sbb    bl,BYTE PTR [rcx]
   14000eb35:	sub    DWORD PTR [rbp-0x6331f18f],ebx
   14000eb3b:	ds test ebx,eax
   14000eb3e:	(bad)  
   14000eb3f:	out    0x51,eax
   14000eb41:	popf   
   14000eb42:	pushf  
   14000eb43:	sub    spl,BYTE PTR [rbp+0x6068dea3]
   14000eb4a:	movsxd esi,DWORD PTR [rbx+0xb]
   14000eb4d:	push   rdi
   14000eb4e:	fidivr WORD PTR [rbx+rdx*1-0x69]
   14000eb52:	scas   eax,DWORD PTR es:[rdi]
   14000eb53:	pop    rsi
   14000eb54:	(bad)
   14000eb57:	or     bl,BYTE PTR [rdx-0x6cc952a4]
   14000eb5d:	leave  
   14000eb5e:	(bad)  
   14000eb5f:	lods   al,BYTE PTR ds:[rsi]
   14000eb60:	pop    rsp
   14000eb61:	(bad)  
   14000eb62:	hlt    
   14000eb63:	hlt    
   14000eb64:	xor    al,0x26
   14000eb66:	mov    edi,0x4365cb91
   14000eb6c:	push   rbp
   14000eb6d:	sbb    al,BYTE PTR [rsi+0x224cabfa]
   14000eb73:	pop    rbp
   14000eb74:	push   rbp
   14000eb75:	ret    0x60d4
   14000eb78:	rol    BYTE PTR [rax],cl
   14000eb7a:	mov    dh,al
   14000eb7c:	xchg   ebx,eax
   14000eb7d:	movabs ds:0x7cc409fc9c3884,al
   14000eb86:	xchg   esp,eax
   14000eb87:	sbb    esp,edx
   14000eb89:	lea    ecx,[rbx+rbx*2]
   14000eb8c:	jno    0x14000eb73
   14000eb8e:	(bad)  
   14000eb8f:	in     al,0x1d
   14000eb91:	idiv   BYTE PTR [rdx-0xd8554af]
   14000eb97:	jne    0x14000ebd4
   14000eb99:	mov    WORD PTR [rbp-0x1e],es
   14000eb9c:	std    
   14000eb9d:	ret    
   14000eb9e:	or     al,0x84
   14000eba0:	clc    
   14000eba1:	sub    eax,0xe2e01041
   14000eba6:	xchg   ebp,eax
   14000eba7:	sub    ebp,DWORD PTR [rax+0x34]
   14000ebaa:	fwait
   14000ebab:	call   0x16b2466a6
   14000ebb0:	repnz push rsp
   14000ebb2:	test   DWORD PTR [r9+0x1a],r13d
   14000ebb6:	enter  0xb265,0xd0
   14000ebba:	xor    eax,0x162851d
   14000ebbf:	or     bh,bh
   14000ebc1:	rex.WR fcomip st,st(7)
   14000ebc4:	shl    DWORD PTR [rdi+0x6c],1
   14000ebc7:	hlt    
   14000ebc8:	jp     0x14000ec47
   14000ebca:	(bad)  
   14000ebcb:	xor    BYTE PTR [rbx],bh
   14000ebcd:	movabs eax,ds:0x34f4c0e0c995a33e
   14000ebd6:	cs mov ebp,0xfa9e06f1
   14000ebdc:	out    0x79,al
   14000ebde:	js     0x14000ec3c
   14000ebe0:	rex.WXB (bad) 
   14000ebe2:	scas   eax,DWORD PTR es:[rdi]
   14000ebe3:	mov    esp,0x7cee6efe
   14000ebe8:	mov    eax,0x8f91447d
   14000ebed:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   14000ebef:	jno    0x14000ebe3
   14000ebf1:	clc    
   14000ebf2:	jno    0x14000eb90
   14000ebf4:	jg     0x14000ebf4
   14000ebf6:	jns    0x14000ec2c
   14000ebf8:	pop    rdx
   14000ebf9:	sub    eax,0x88743e1c
   14000ebfe:	push   0xffffffffd7e1769a
   14000ec03:	ds repnz retf 
   14000ec06:	jg     0x14000ebbc
   14000ec08:	mov    edx,0x801fbcbc
   14000ec0d:	outs   dx,DWORD PTR ds:[rsi]
   14000ec0e:	(bad)  
   14000ec0f:	(bad)  
   14000ec10:	fild   QWORD PTR [rip+0x70bffce]        # 0x1470cebe4
   14000ec16:	clc    
   14000ec17:	div    BYTE PTR [rbx]
   14000ec19:	imul   BYTE PTR [rbx+0x0]
   14000ec1c:	adc    al,0x30
   14000ec1e:	add    edx,DWORD PTR [rax+0x37e69002]
   14000ec24:	adc    eax,DWORD PTR [rax-0x16cd9a97]
   14000ec2a:	(bad)  
   14000ec2b:	sti    
   14000ec2c:	test   eax,0xf0fe3e9f
   14000ec31:	ret    
   14000ec32:	(bad)  
   14000ec33:	cmp    al,0x54
   14000ec35:	cs xchg ebp,eax
   14000ec37:	(bad)  
   14000ec38:	nop
   14000ec39:	adc    al,0xed
   14000ec3b:	movabs al,ds:0xeed9a36cdea552e3
   14000ec44:	movabs ds:0x37e774a7a5603b6f,al
   14000ec4d:	push   rdx
   14000ec4e:	(bad)  
   14000ec4f:	retf   
   14000ec50:	data16 movabs al,ds:0xf0254020d2e79b00
   14000ec5a:	add    dh,BYTE PTR [rsi+0x603e1e3d]
   14000ec60:	rol    BYTE PTR [rbx+0x60],0xb8
   14000ec64:	add    DWORD PTR [rbx+0xf3cf769],ebp
   14000ec6a:	(bad)  
   14000ec6b:	fisub  DWORD PTR [rsi]
   14000ec6d:	pop    rsp
   14000ec6e:	xlat   BYTE PTR ds:[rbx]
   14000ec6f:	and    DWORD PTR [rsi+0x72e6c86a],0xe12f1f18
   14000ec79:	(bad)  
   14000ec7b:	(bad)  
   14000ec7c:	xor    DWORD PTR [rbx-0x63],ebx
   14000ec7f:	rex.X and DWORD PTR [rdi-0x1f5b967f],ebx
   14000ec86:	mov    edx,0xd7d6561e
   14000ec8b:	push   rcx
   14000ec8c:	stos   DWORD PTR es:[rdi],eax
   14000ec8d:	(bad)  
   14000ec8e:	shr    ch,1
   14000ec90:	cmc    
   14000ec91:	jns    0x14000ecec
   14000ec93:	outs   dx,BYTE PTR ds:[rsi]
   14000ec94:	rex.R out dx,al
   14000ec96:	adc    DWORD PTR [rsi],ebp
   14000ec98:	mov    esi,0xbc20230
   14000ec9d:	adc    BYTE PTR [rsi],al
   14000ec9f:	and    BYTE PTR [rsi+0x78],bl
   14000eca2:	and    edi,DWORD PTR [rax+0x2ed049f6]
   14000eca8:	sbb    DWORD PTR [rbx+0x3],ebx
   14000ecab:	sbb    BYTE PTR [rax],ah
   14000ecad:	(bad)  
   14000ecae:	in     al,dx
   14000ecaf:	jp     0x14000eca1
   14000ecb1:	xchg   DWORD PTR [rax+rdi*8+0x59932ef2],ebp
   14000ecb8:	mov    esp,0x61e3d867
   14000ecbd:	scas   eax,DWORD PTR es:[rdi]
   14000ecbe:	sbb    eax,0xc661faf6
   14000ecc3:	rex.RXB sbb BYTE PTR [r9],r14b
   14000ecc6:	rex.RB push r9
   14000ecc8:	shr    dl,1
   14000ecca:	je     0x14000ed3c
   14000eccc:	icebp  
   14000eccd:	retf   0x415
   14000ecd0:	sub    BYTE PTR [r14-0x59],0xb3
   14000ecd5:	add    ebp,DWORD PTR [rbx+riz*2+0x54648a1d]
   14000ecdc:	(bad)  
   14000ecdd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ecde:	(bad)  
   14000ecdf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ece0:	or     al,0xe4
   14000ece2:	jb     0x14000ed3d
   14000ece4:	je     0x14000eca1
   14000ece6:	cmp    eax,0xa459b364
   14000eceb:	add    r15,QWORD PTR [r10+0x31e485ae]
   14000ecf2:	xchg   ecx,eax
   14000ecf3:	push   rbp
   14000ecf4:	jb     0x14000ed52
   14000ecf6:	push   rsi
   14000ecf7:	ds sub al,0x8c
   14000ecfa:	in     al,dx
   14000ecfb:	or     ebp,DWORD PTR [rdi]
   14000ecfd:	pop    rbp
   14000ecfe:	rcl    ch,0x6b
   14000ed01:	xlat   BYTE PTR ds:[rbx]
   14000ed02:	pop    rax
   14000ed03:	lods   eax,DWORD PTR ds:[rsi]
   14000ed04:	sub    edi,0x3449ae71
   14000ed0a:	jbe    0xc187e2c2
   14000ed10:	jp     0x14000ed35
   14000ed12:	es mov esp,0xa95316b8
   14000ed18:	adc    al,0xe
   14000ed1a:	(bad)  
   14000ed1b:	cmp    BYTE PTR [rax-0x47545425],al
   14000ed21:	jns    0x14000ed0e
   14000ed23:	(bad)  
   14000ed24:	(bad)  
   14000ed25:	(bad)  
   14000ed26:	(bad)  
   14000ed27:	imul   ebp,DWORD PTR [rsi],0xd1f1bd9b
   14000ed2d:	push   rdi
   14000ed2f:	ja     0x14000edb0
   14000ed31:	(bad)  
   14000ed32:	stc    
   14000ed33:	addr32 mov edi,0x1fd81b9
   14000ed39:	jl     0x14000edb2
   14000ed3b:	jrcxz  0x14000ed2b
   14000ed3d:	jmp    QWORD PTR [rbp+0x19fb7c00]
   14000ed43:	sti    
   14000ed44:	xor    DWORD PTR [rax],eax
   14000ed46:	adc    bl,BYTE PTR [rax+0x3002a007]
   14000ed4c:	ror    BYTE PTR [rax+rax*4+0x22266fc1],0xc3
   14000ed54:	movabs al,ds:0xa7f27f87d6ab554f
   14000ed5d:	rex.WRX fnsave [rbx-0x6]
   14000ed61:	hlt    
   14000ed62:	fstp   DWORD PTR [rsi+rbp*4+0x70]
   14000ed66:	(bad)  
   14000ed67:	(bad)  
   14000ed68:	sar    BYTE PTR [rbx+rbp*8+0x7a756a41],cl
   14000ed6f:	call   0x10371e86a
   14000ed74:	adc    ebp,DWORD PTR [rcx]
   14000ed76:	push   rsi
   14000ed77:	jle    0x14000eda2
   14000ed79:	shl    DWORD PTR ss:[rbp+0x1ec08798],0x4b
   14000ed81:	je     0x14000ed0b
   14000ed83:	rex.RXB rol BYTE PTR [r15-0x6c],0x8e
   14000ed88:	xchg   edx,eax
   14000ed89:	(bad)  
   14000ed8a:	lahf   
   14000ed8b:	sbb    DWORD PTR [rbx-0x4a],eax
   14000ed8e:	or     DWORD PTR [rbp-0x2ff4da4b],ecx
   14000ed94:	jmp    0x1b6f0bf4d
   14000ed99:	xchg   ecx,eax
   14000ed9a:	mov    dh,0xd2
   14000ed9c:	rex.WR mov gs,WORD PTR [rbx]
   14000ed9f:	xchg   edi,eax
   14000eda0:	shl    DWORD PTR [rcx-0x6267fc3b],0xae
   14000eda7:	and    BYTE PTR [rdi-0x2ea94cb7],dl
   14000edad:	xchg   BYTE PTR [rsi-0x127458b2],cl
   14000edb3:	pop    rdx
   14000edb4:	sbb    eax,0x9e175edd
   14000edb9:	out    dx,eax
   14000edba:	rex.XB add bpl,BYTE PTR [r11]
   14000edbd:	push   rdi
   14000edbe:	adc    eax,0xfda24c45
   14000edc3:	xchg   esp,eax
   14000edc4:	push   0x6a69ad3d
   14000edc9:	pop    rax
   14000edca:	call   0x13291b473
   14000edcf:	sub    BYTE PTR [rcx+rbx*1+0x74],dh
   14000edd3:	icebp  
   14000edd4:	rex.RXB
   14000edd5:	and    DWORD PTR gs:[rsi-0x619e03e2],eax
   14000eddc:	rex ins BYTE PTR es:[rdi],dx
   14000edde:	adc    ah,BYTE PTR [rdi]
   14000ede0:	lea    eax,[rcx+0x396ecf78]
   14000ede6:	std    
   14000ede7:	std    
   14000ede8:	rex.WR clc 
   14000edea:	push   rcx
   14000edeb:	scas   eax,DWORD PTR es:[rdi]
   14000edec:	xchg   ebx,eax
   14000eded:	and    al,0x9
   14000edef:	int    0x56
   14000edf1:	or     edx,DWORD PTR [rdi+0x28055eae]
   14000edf7:	rex.RB mov r15d,0xce65e7df
   14000edfd:	mov    WORD PTR [rdi+0xa261a60],gs
   14000ee03:	test   DWORD PTR [rsp+rcx*2],edi
   14000ee06:	ret    
   14000ee07:	rex.R mov ebx,0xc3909d3
   14000ee0d:	jle    0x14000edef
   14000ee0f:	rex.XB (bad) 
   14000ee11:	(bad)  
   14000ee12:	pop    rcx
   14000ee13:	cdq    
   14000ee14:	adc    BYTE PTR [rbx],ah
   14000ee16:	(bad)  
   14000ee17:	sbb    eax,0x15e5d97b
   14000ee1c:	icebp  
   14000ee1d:	rex.RX
   14000ee1e:	rex.R lahf 
   14000ee20:	add    dl,dh
   14000ee22:	rex.B test eax,0xcd6563d7
   14000ee28:	pop    rbx
   14000ee29:	(bad)  [rip+0xfffffffff42d3ab4]        # 0x1342e28e3
   14000ee2f:	sti    
   14000ee30:	ss pop rdx
   14000ee32:	in     eax,dx
   14000ee33:	(bad)  
   14000ee34:	ret    
   14000ee35:	js     0x14000ee53
   14000ee37:	sbb    ebx,DWORD PTR [rsi+0x231d34cb]
   14000ee3d:	ret    
   14000ee3e:	cmp    bl,dl
   14000ee40:	test   al,0xd2
   14000ee42:	sbb    bh,bh
   14000ee44:	pop    rdi
   14000ee45:	xchg   edx,eax
   14000ee46:	and    eax,0x839d981c
   14000ee4b:	scas   al,BYTE PTR es:[rdi]
   14000ee4c:	imul   edi,DWORD PTR [rax],0x980bc2ff
   14000ee52:	popf   
   14000ee53:	popf   
   14000ee54:	(bad)  
   14000ee57:	mov    esp,0x1ec7b5fd
   14000ee5c:	sti    
   14000ee5d:	in     al,0xa7
   14000ee5f:	jg     0x14000ee60
   14000ee61:	jrcxz  0x14000edfa
   14000ee63:	xor    DWORD PTR [rdx],ebx
   14000ee65:	loopne 0x14000eeb2
   14000ee67:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ee68:	cmc    
   14000ee69:	imul   BYTE PTR [rdx+0x28efbd2]
   14000ee6f:	jl     0x14000ee6c
   14000ee71:	sbb    ebx,edi
   14000ee73:	xor    eax,0xb6a20a00
   14000ee78:	rex.XB cmp dil,r8b
   14000ee7b:	test   BYTE PTR [rdi+0x64],al
   14000ee7e:	adc    BYTE PTR [rsi+rdi*2+0x13],dh
   14000ee82:	scas   eax,DWORD PTR es:[rdi]
   14000ee83:	shl    esi,1
   14000ee85:	(bad)  
   14000ee86:	(bad)  
   14000ee87:	xor    edi,DWORD PTR [rdi]
   14000ee89:	lock pop rdi
   14000ee8b:	dec    eax
   14000ee8d:	mov    cl,0x13
   14000ee8f:	(bad)  
   14000ee90:	(bad)  
   14000ee91:	lahf   
   14000ee92:	rex.WRB pop r11
   14000ee94:	fnstenv [rbx]
   14000ee96:	add    DWORD PTR [rcx-0x3570e299],edx
   14000ee9c:	jge    0x14000ee25
   14000ee9e:	rex.WB jbe 0x14000eeac
   14000eea1:	fidivr WORD PTR [rbx+0x74]
   14000eea4:	adc    DWORD PTR [rdx+0xbcce49],ecx
   14000eeaa:	jno    0x14000eeb4
   14000eeac:	(bad)  
   14000eead:	sbb    al,0x6
   14000eeaf:	pop    rsi
   14000eeb0:	(bad)
   14000eeb3:	push   rsi
   14000eeb4:	add    BYTE PTR [rax+0x72849606],dh
   14000eeba:	ror    DWORD PTR [rbx+0x8],0xf
   14000eebe:	and    DWORD PTR [rdx+0x3d],edi
   14000eec1:	repz or al,0x78
   14000eec4:	xor    eax,0xc0c75861
   14000eec9:	enter  0xdd4c,0x76
   14000eecd:	xor    DWORD PTR [rip+0x560c34bb],0xffffffa2        # 0x1960d238f
   14000eed4:	ins    BYTE PTR es:[rdi],dx
   14000eed5:	(bad)  
   14000eed6:	enter  0x35a4,0x1c
   14000eeda:	ds mov eax,0x4c4ca88
   14000eee0:	mov    dh,0x8a
   14000eee3:	enter  0x7367,0xe8
   14000eee7:	idiv   BYTE PTR [rdx-0x5e89a5fd]
   14000eeed:	ja     0x14000ee7f
   14000eeef:	push   rax
   14000eef0:	or     ecx,DWORD PTR [rdx-0x72]
   14000eef3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eef4:	ror    DWORD PTR [rdx-0x1a],0xe5
   14000eef8:	rex.RXB (bad) 
   14000eefa:	hlt    
   14000eefb:	and    DWORD PTR [rbx+0x3cc9a8f8],ebp
   14000ef01:	adc    BYTE PTR [rdi+0x7609090f],ch
   14000ef07:	or     edx,DWORD PTR [rbx]
   14000ef09:	idiv   bl
   14000ef0b:	mov    ecx,0xd6060440
   14000ef10:	push   0x35
   14000ef12:	pop    rsp
   14000ef13:	jns    0x14000ef08
   14000ef15:	rex.WRB fimul WORD PTR [r13+rdx*4+0x22]
   14000ef1a:	fwait
   14000ef1b:	leave  
   14000ef1c:	and    bl,BYTE PTR [rbx-0x3268df33]
   14000ef22:	and    ah,BYTE PTR [rbp-0x5c]
   14000ef25:	movabs al,ds:0xdbee5b758d742a2a
   14000ef2e:	(bad)  
   14000ef2f:	adc    al,0x99
   14000ef31:	icebp  
   14000ef32:	sub    edi,DWORD PTR [rdx+rax*2-0x20]
   14000ef36:	cmp    bh,BYTE PTR [rsi]
   14000ef38:	add    BYTE PTR [rsi+0x66],bl
   14000ef3b:	sbb    eax,DWORD PTR [rax+rax*1]
   14000ef3e:	sbb    BYTE PTR [rsi-0x5e],dl
   14000ef41:	imul   edi,DWORD PTR [rdx],0x14
   14000ef44:	xchg   ebp,eax
   14000ef45:	jne    0x14000ef40
   14000ef47:	xchg   ebp,eax
   14000ef48:	and    eax,0x1c0d7de6
   14000ef4d:	and    DWORD PTR [rsi-0x190c4ff0],edi
   14000ef53:	jae    0x14000ef7a
   14000ef55:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ef56:	ds jp  0x14000ef0f
   14000ef59:	lea    eax,[rsi-0x4d]
   14000ef5c:	mov    DWORD PTR [rsi-0x4d],esp
   14000ef5f:	test   DWORD PTR [rsi-0x59],esi
   14000ef62:	lea    edx,[rsi-0x45]
   14000ef65:	lea    edi,[rdx-0x43]
   14000ef68:	and    DWORD PTR [rsi-0x45],0xa246ebc5
   14000ef6f:	lock rex.R push 0xffffffffffffffb6
   14000ef73:	(bad)  
   14000ef74:	sub    DWORD PTR [rax],eax
   14000ef76:	add    BYTE PTR [rax],ah
   14000ef78:	add    BYTE PTR [rcx+0x44],cl
   14000ef7b:	push   r12
   14000ef7d:	sbb    al,ah
   14000ef7f:	jb     0x14000efea
   14000ef81:	or     al,0xe7
   14000ef83:	(bad)  
   14000ef84:	fimul  WORD PTR [rdi-0x581b0021]
   14000ef8a:	xor    DWORD PTR [rsi+0x2e],edx
   14000ef8d:	(bad)  
   14000ef8e:	jle    0x14000f006
   14000ef90:	mov    dh,0xfb
   14000ef92:	cli    
   14000ef93:	vmaxsd xmm7,xmm14,xmm0
   14000ef97:	int    0x7f
   14000ef99:	repz scas eax,DWORD PTR es:[rdi]
   14000ef9b:	lahf   
   14000ef9c:	ret    
   14000ef9d:	(bad)  
   14000ef9e:	cmp    BYTE PTR [rdi+0x14],bh
   14000efa1:	shl    BYTE PTR [rdi+0x27],0x71
   14000efa5:	jle    0x14000f003
   14000efa7:	xchg   esp,eax
   14000efa8:	jrcxz  0x14000efe5
   14000efaa:	adc    ah,bh
   14000efac:	out    dx,eax
   14000efad:	imul   BYTE PTR ss:[rbx+0x0]
   14000efb1:	sbb    BYTE PTR [rax],r10b
   14000efb4:	rex.WRX jo 0x14000ef67
   14000efb7:	or     DWORD PTR [rdi],edi
   14000efb9:	in     al,dx
   14000efba:	pop    rsi
   14000efbb:	hlt    
   14000efbc:	and    al,0xb
   14000efbe:	outs   dx,DWORD PTR ds:[rsi]
   14000efbf:	rex.RXB mov ds,WORD PTR [rip+0xfffffffff7cf7dcf]        # 0x137d06d95
   14000efc6:	jg     0x14000efb0
   14000efc8:	call   0x10f88336e
   14000efcd:	fs xor ebx,ecx
   14000efd0:	sar    DWORD PTR [rbp+0x37],cl
   14000efd3:	cwde   
   14000efd4:	and    eax,0xa03f74d0
   14000efd9:	jo     0x14000f038
   14000efdb:	(bad)  
   14000efdc:	push   rsi
   14000efdd:	rcr    BYTE PTR [rdx],cl
   14000efdf:	sbb    DWORD PTR [rcx-0x21edf890],eax
   14000efe5:	add    DWORD PTR [rax-0x4c],ebp
   14000efe8:	xlat   BYTE PTR ds:[rbx]
   14000efe9:	xchg   esp,eax
   14000efea:	sub    ebx,esp
   14000efec:	mov    dl,0xea
   14000efee:	(bad)  
   14000efef:	clc    
   14000eff0:	(bad)  
   14000eff1:	(bad)  
   14000eff2:	cld    
   14000eff3:	adc    BYTE PTR [rcx],dl
   14000eff5:	add    BYTE PTR [rax+r13*2-0x3729af7a],dil
   14000effd:	xor    ecx,DWORD PTR [rax+0x1d5999d3]
   14000f003:	and    DWORD PTR [rbx-0x9],0x11
   14000f007:	add    al,0x1e
   14000f009:	sub    edi,edx
   14000f00b:	add    DWORD PTR [rbp-0x6667d452],eax
   14000f011:	cdq    
   14000f012:	(bad)  
   14000f013:	(bad)  
   14000f014:	in     al,0x38
   14000f016:	es mov edi,0xa22b1e51
   14000f01d:	pop    rax
   14000f01e:	sub    BYTE PTR [rax],ah
   14000f020:	or     BYTE PTR [rax-0x17],bl
   14000f023:	mov    dl,0x4f
   14000f025:	add    ah,BYTE PTR [rsi]
   14000f027:	sub    esp,DWORD PTR [rip+0x28f91c45]        # 0x168fa0c72
   14000f02d:	data16 (bad) 
   14000f02f:	rex.WRB add BYTE PTR [r10],r11b
   14000f032:	data16 add al,0x86
   14000f035:	xor    DWORD PTR [rax-0x37],0xbf3d46e7
   14000f03c:	(bad)  
   14000f03d:	movsxd esi,DWORD PTR [rax]
   14000f03f:	in     al,dx
   14000f040:	mov    ebp,0x812f5fb
   14000f045:	(bad)  
   14000f046:	popf   
   14000f047:	cwde   
   14000f048:	pop    rdx
   14000f049:	pushf  
   14000f04a:	imul   ebp,DWORD PTR [rdi+0x59],0x16
   14000f04e:	or     al,0x5d
   14000f050:	addr32 sub eax,0xc06914d0
   14000f056:	mov    eax,0xd2c21249
   14000f05b:	push   0x61
   14000f05d:	int    0x29
   14000f05f:	lea    edx,[rdi]
   14000f061:	and    esi,DWORD PTR [rcx]
   14000f063:	cmp    eax,0x282267d
   14000f068:	pop    rsi
   14000f069:	(bad)  
   14000f06a:	int3   
   14000f06b:	rex.WXB jbe 0x14000f093
   14000f06e:	jbe    0x14000eff2
   14000f070:	fldenv [rdi-0x10]
   14000f073:	xor    ch,BYTE PTR [rsi+0x7e]
   14000f076:	push   0xffffffffffffff95
   14000f078:	pop    rax
   14000f079:	mov    ecx,0x230c7331
   14000f07e:	(bad)  
   14000f07f:	mov    edx,DWORD PTR [rdx]
   14000f081:	push   rsi
   14000f082:	lods   al,BYTE PTR ds:[rsi]
   14000f083:	data16 fisttp DWORD PTR [rsi]
   14000f086:	jp     0x14000f085
   14000f088:	(bad)  
   14000f089:	(bad)  
   14000f08b:	cs sbb cl,ch
   14000f08e:	es pop rsi
   14000f090:	js     0x14000f083
   14000f092:	and    eax,0xcc1d3bb4
   14000f097:	iret   
   14000f098:	int    0xa1
   14000f09a:	pop    rsp
   14000f09b:	cs jrcxz 0x14000f037
   14000f09e:	repz iret 
   14000f0a0:	ret    0x80f
   14000f0a3:	sub    dl,BYTE PTR [rbp+0x74eedf8a]
   14000f0a9:	(bad)  
   14000f0aa:	sti    
   14000f0ab:	(bad)  
   14000f0ae:	iret   
   14000f0af:	mov    edi,0x2f49c18c
   14000f0b4:	push   rsi
   14000f0b5:	(bad)  
   14000f0b6:	std    
   14000f0b7:	add    BYTE PTR [rbx+rax*8-0x2],bh
   14000f0bb:	jmp    FWORD PTR [rbx]
   14000f0bd:	add    esi,eax
   14000f0bf:	in     eax,dx
   14000f0c0:	addr32 in al,dx
   14000f0c2:	gs add ah,al
   14000f0c5:	imul   esp,DWORD PTR [rsp+rcx*1+0x1a],0x1
   14000f0ca:	add    eax,0xd47d9383
   14000f0cf:	mov    ebp,0x15ffb1a
   14000f0d4:	movabs al,ds:0x7e07f7be67cfcece
   14000f0dd:	jo     0x14000f0c0
   14000f0df:	enter  0x2391,0x67
   14000f0e3:	jb     0x14000f09e
   14000f0e5:	cld    
   14000f0e6:	rex.WB (bad) 
   14000f0e8:	nop
   14000f0e9:	(bad)  
   14000f0ea:	enter  0x2a4a,0xe3
   14000f0ee:	adc    esp,DWORD PTR [rcx]
   14000f0f0:	sahf   
   14000f0f1:	adc    DWORD PTR [rcx-0x29],esi
   14000f0f4:	(bad)
   14000f0f7:	jmp    0x14000f16a
   14000f0f9:	shl    BYTE PTR [rax],0xc4
   14000f0fc:	(bad)  
   14000f0fd:	enter  0x309,0x21
   14000f101:	leave  
   14000f102:	push   rdx
   14000f103:	js     0x14000f176
   14000f105:	or     al,0xfe
   14000f107:	rex.W cmp sil,BYTE PTR [rax]
   14000f10a:	and    DWORD PTR [rbx],esp
   14000f10c:	inc    BYTE PTR [rcx+0x13315a0]
   14000f112:	adc    DWORD PTR [rcx+0x5d],eax
   14000f115:	data16 fistp DWORD PTR [rcx+0xd]
   14000f119:	cmp    DWORD PTR [rax-0x7ebaaa50],0xffffffa6
   14000f120:	retf   0x17c8
   14000f123:	mov    dl,0xa8
   14000f125:	rex.WR
   14000f126:	rex.WRX movabs al,ds:0x9f314790a144563c
   14000f130:	rex.XB sub spl,BYTE PTR [r13-0x4f3664dd]
   14000f137:	jb     0x14000f192
   14000f139:	fild   WORD PTR [rdi+0x9bd46e3]
   14000f13f:	in     eax,0xc4
   14000f141:	add    al,0x4c
   14000f143:	xchg   edx,eax
   14000f144:	imul   eax,esp,0x6f
   14000f147:	fsubr  QWORD PTR [rbp-0xb]
   14000f14a:	fucomip st,st(7)
   14000f14c:	jae    0x14000f130
   14000f14e:	(bad)  
   14000f14f:	fisttp QWORD PTR [rdx+rax*8]
   14000f152:	mov    al,0xd7
   14000f154:	or     al,0xfb
   14000f156:	sbb    al,0x80
   14000f158:	sar    DWORD PTR [rcx-0xdd16225],1
   14000f15e:	mov    ecx,0xd2b2c2c
   14000f163:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f164:	scas   eax,DWORD PTR es:[rdi]
   14000f165:	movabs al,ds:0x1a4ccaf0120a000
   14000f16e:	rex add eax,0x391341be
   14000f174:	stc    
   14000f175:	enter  0xf6a,0xee
   14000f179:	scas   eax,DWORD PTR es:[rdi]
   14000f17a:	test   al,0x9b
   14000f17c:	adc    BYTE PTR [rax+rbp*2],dl
   14000f17f:	and    BYTE PTR [rax],ah
   14000f181:	ds push rdi
   14000f183:	pop    rbp
   14000f184:	mov    ax,0x530e
   14000f188:	push   rdi
   14000f189:	outs   dx,WORD PTR ds:[rsi]
   14000f18b:	(bad)  
   14000f18c:	xor    cl,BYTE PTR fs:[rax+0x12]
   14000f190:	push   rdi
   14000f191:	rex.RB
   14000f192:	data16 mov BYTE PTR [rdx+rdx*4+0x19],0x46
   14000f198:	movsxd ebp,r14d
   14000f19b:	movabs ds:0xe9c0cca51630a5e0,eax
   14000f1a4:	push   rsi
   14000f1a5:	mov    ebx,DWORD PTR [rdi+0x7cb7a09b]
   14000f1ab:	sti    
   14000f1ac:	(bad)  
   14000f1ad:	rex.WXB
   14000f1ae:	rex.WXB
   14000f1af:	rex.WXB (bad) 
   14000f1b1:	push   rdi
   14000f1b2:	mov    dh,0x36
   14000f1b4:	(bad)  
   14000f1b5:	pop    rbx
   14000f1b6:	jmp    0x14000f1d3
   14000f1b8:	imul   ecx,DWORD PTR [rbp+0x6cae572b],0xffffffbc
   14000f1bf:	lock cld 
   14000f1c1:	repz jmp 0x14000f19f
   14000f1c4:	fcmovnu st,st(3)
   14000f1c6:	jge    0x14000f154
   14000f1c8:	(bad)  
   14000f1c9:	clc    
   14000f1ca:	add    al,0x6b
   14000f1cc:	out    dx,eax
   14000f1cd:	scas   eax,DWORD PTR es:[rdi]
   14000f1ce:	add    eax,0xb19fb7c0
   14000f1d3:	pop    rdi
   14000f1d4:	add    esp,DWORD PTR [rax]
   14000f1d6:	mov    WORD PTR [rax+0x4dc40708],es
   14000f1dc:	(bad)  
   14000f1dd:	ffree  st(7)
   14000f1df:	or     eax,0x9b8fba83
   14000f1e4:	movabs ds:0xd991fe1fa1f6baeb,al
   14000f1ed:	jae    0x14000f1fe
   14000f1ef:	ds js  0x14000f198
   14000f1f2:	nop
   14000f1f3:	(bad)  
   14000f1f4:	pushf  
   14000f1f5:	xchg   edx,eax
   14000f1f6:	(bad)  
   14000f1f7:	(bad)  
   14000f1f8:	add    ah,BYTE PTR [rcx+0x549538ca]
   14000f1fe:	cmp    BYTE PTR [rsi-0x5f1ed839],ch
   14000f204:	rex (bad) 
   14000f206:	and    BYTE PTR [rbx+0x293f1c4e],ah
   14000f20c:	sub    al,0xc4
   14000f20e:	or     DWORD PTR [rbx-0x65],ebx
   14000f211:	test   DWORD PTR [rdi+0x29795a36],eax
   14000f217:	movabs eax,ds:0xd1e5b98864d8e490
   14000f220:	(bad)  
   14000f221:	out    0x27,eax
   14000f223:	in     al,0x20
   14000f225:	add    al,0x5c
   14000f227:	(bad)  
   14000f228:	sub    edx,DWORD PTR [rsi-0x7b]
   14000f22b:	sub    BYTE PTR [rdx],ch
   14000f22d:	and    DWORD PTR [rbx-0x53],ebx
   14000f230:	(bad)  
   14000f231:	or     BYTE PTR [rdi+0x49],dl
   14000f234:	push   rdx
   14000f235:	adc    al,0x89
   14000f237:	add    DWORD PTR [rcx+0x31a54a2a],0xffffff8c
   14000f23e:	xchg   edi,eax
   14000f23f:	(bad)  
   14000f240:	xor    BYTE PTR [rsi+0x2e],bl
   14000f243:	and    edx,DWORD PTR [rbx-0x18306f4a]
   14000f249:	cwde   
   14000f24a:	or     al,0x9a
   14000f24c:	imul   eax,edx,0x9ae80d34
   14000f252:	xchg   BYTE PTR [rsi],cl
   14000f254:	outs   dx,DWORD PTR ds:[rsi]
   14000f255:	(bad)  
   14000f256:	in     eax,dx
   14000f257:	mov    edx,0x28cd585e
   14000f25c:	sub    ecx,0xc2bc61d
   14000f262:	(bad)
   14000f265:	(bad)  
   14000f266:	movsxd ecx,DWORD PTR [rdi]
   14000f268:	movabs ds:0xebd75ab1041a76f0,eax
   14000f271:	or     eax,0x4e79f214
   14000f276:	mov    esp,0x643dea89
   14000f27b:	rex.RB adc DWORD PTR [r14],0xc8143c66
   14000f282:	or     dl,BYTE PTR [rbx-0x2a7a6c9a]
   14000f288:	(bad)  
   14000f289:	mov    BYTE PTR [rax],0x11
   14000f28c:	add    eax,0x90ac401c
   14000f291:	rex.WB or spl,BYTE PTR [r15]
   14000f294:	icebp  
   14000f295:	(bad)  
   14000f296:	fist   WORD PTR [rdi]
   14000f298:	test   DWORD PTR [rbp-0x1e],ecx
   14000f29b:	out    0x8b,al
   14000f29d:	rex.X and al,dl
   14000f2a0:	(bad)  
   14000f2a1:	xchg   edi,eax
   14000f2a2:	add    al,0x41
   14000f2a4:	and    BYTE PTR [rsi+rax*4],bl
   14000f2a7:	sub    bl,bl
   14000f2a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f2aa:	enter  0xe8a1,0x89
   14000f2ae:	int3   
   14000f2af:	lea    ecx,[rbx]
   14000f2b1:	cmp    ebp,DWORD PTR [rbx-0x3f7a10ee]
   14000f2b7:	out    0x60,al
   14000f2b9:	rol    BYTE PTR [rbx+0x4],0x42
   14000f2bd:	or     BYTE PTR [rdi+rbx*8],bh
   14000f2c0:	or     eax,0x776dbe9c
   14000f2c5:	jnp    0x14000f2c4
   14000f2c7:	outs   dx,BYTE PTR ds:[rsi]
   14000f2c8:	iret   
   14000f2c9:	out    dx,al
   14000f2ca:	imul   edx
   14000f2cc:	mov    ch,0xda
   14000f2ce:	(bad)  
   14000f2cf:	retf   0xcaca
   14000f2d2:	(bad)  
   14000f2d3:	(bad)  
   14000f2d4:	xchg   ebp,eax
   14000f2d5:	xchg   ebp,eax
   14000f2d6:	fisttp DWORD PTR [rsi+0x5c6e74e3]
   14000f2dc:	mov    edi,0xcbf2f2b6
   14000f2e1:	scas   eax,DWORD PTR es:[rdi]
   14000f2e2:	lods   al,BYTE PTR ds:[rsi]
   14000f2e3:	xor    al,0x1a
   14000f2e5:	cmc    
   14000f2e6:	out    dx,al
   14000f2e7:	mov    dh,0x46
   14000f2ea:	xlat   BYTE PTR ds:[rbx]
   14000f2eb:	repz mov esp,0x361811b8
   14000f2f1:	icebp  
   14000f2f2:	jrcxz  0x14000f27e
   14000f2f4:	cmp    al,0xdf
   14000f2f6:	xor    DWORD PTR [rax+0x3f633f6f],eax
   14000f2fc:	(bad)  
   14000f2fd:	rex mov esp,0xe2046e2e
   14000f303:	(bad)  
   14000f304:	or     DWORD PTR [rax+0x13],0x61a4fb8a
   14000f30b:	sbb    BYTE PTR [rsi+0x14],ah
   14000f30e:	xchg   esp,eax
   14000f30f:	(bad)  
   14000f310:	(bad)  
   14000f311:	(bad)  
   14000f312:	cld    
   14000f313:	sahf   
   14000f314:	test   DWORD PTR [rsi+0x1ffdfbbf],0x3d333438
   14000f31e:	jae    0x14000f2ea
   14000f320:	mov    dl,0x72
   14000f322:	rex.RXB int 0x74
   14000f325:	jle    0x14000f2e1
   14000f327:	shl    DWORD PTR [rbx-0x357238f3],cl
   14000f32d:	sbb    cl,0x85
   14000f330:	mov    al,0x93
   14000f332:	jo     0x14000f356
   14000f334:	rex.WRX xor al,0xbb
   14000f337:	mov    BYTE PTR [rbx+0x13],ah
   14000f33a:	adc    al,0x10
   14000f33d:	(bad)  
   14000f33e:	nop
   14000f33f:	xor    BYTE PTR [rax+0x525f360d],0x18
   14000f346:	ror    BYTE PTR [rax],1
   14000f348:	xor    DWORD PTR [rbx+rcx*1+0x2f],0xe21cf223
   14000f350:	int3   
   14000f351:	rex.RX idiv bpl
   14000f354:	push   rcx
   14000f355:	or     dl,BYTE PTR [rdx+0x196a1212]
   14000f35b:	(bad)  
   14000f35c:	in     al,dx
   14000f35d:	lahf   
   14000f35e:	out    0x62,eax
   14000f360:	movsxd edi,ebp
   14000f362:	ss cmp al,0x97
   14000f365:	adc    DWORD PTR [rsp+rsi*2+0x5d],esp
   14000f369:	rex.XB
   14000f36a:	es xchg edi,eax
   14000f36c:	fimul  DWORD PTR [r11+riz*1-0x63]
   14000f371:	rex.WRX movabs ds:0x60d30cbc6263cf90,rax
   14000f37b:	rex.WRB
   14000f37c:	rex.XB xor bl,BYTE PTR [r9]
   14000f37f:	(bad)  
   14000f380:	jrcxz  0x14000f3c0
   14000f382:	imul   ebx,DWORD PTR [rcx+0x4c],0x21
   14000f386:	leave  
   14000f387:	xor    BYTE PTR [rdx+0x79],al
   14000f38a:	xor    al,0xd7
   14000f38c:	repz rex.X (bad) 
   14000f38f:	adc    BYTE PTR [rdi+0x4c9c8b84],r12b
   14000f396:	fisttp DWORD PTR [rcx+0x2e2703c7]
   14000f39c:	(bad)  
   14000f39d:	loopne 0x14000f3c4
   14000f39f:	mov    bh,0xc7
   14000f3a1:	out    dx,eax
   14000f3a2:	test   DWORD PTR [r13*4-0x34e6e88a],r9d
   14000f3aa:	(bad)  
   14000f3ab:	stos   BYTE PTR es:[rdi],al
   14000f3ac:	sub    ah,BYTE PTR [rcx+0x40403f5e]
   14000f3b2:	or     DWORD PTR [rax+0x2d],edi
   14000f3b5:	mov    BYTE PTR [rdi],dl
   14000f3b7:	retf   0x419c
   14000f3ba:	xchg   edx,eax
   14000f3bb:	ret    0xf156
   14000f3be:	nop
   14000f3bf:	test   DWORD PTR [rax],eax
   14000f3c1:	mov    bl,BYTE PTR [rdx]
   14000f3c3:	pop    rbx
   14000f3c4:	in     eax,0x95
   14000f3c6:	jo     0x14000f38a
   14000f3c8:	rex.RXB test BYTE PTR [r11],r12b
   14000f3cb:	sbb    bh,dh
   14000f3cd:	sldt   WORD PTR [rdx]
   14000f3d0:	fimul  WORD PTR [rcx+0x5d746776]
   14000f3d6:	sbb    DWORD PTR [rax],0xffffffbe
   14000f3d9:	out    0x71,eax
   14000f3db:	popf   
   14000f3dc:	and    DWORD PTR [r8],r10d
   14000f3df:	adc    al,BYTE PTR [rsi+rdi*1-0x79]
   14000f3e3:	add    al,0x50
   14000f3e5:	ret    0x99ee
   14000f3e8:	cli    
   14000f3e9:	xor    bl,dh
   14000f3eb:	pop    rsp
   14000f3ec:	movabs ds:0x8868412132cec263,al
   14000f3f5:	add    al,0x9
   14000f3f7:	lea    edx,[rax]
   14000f3f9:	jbe    0x14000f3c8
   14000f3fb:	mov    eax,0xf6eb5bae
   14000f400:	mov    edx,0xba90946b
   14000f405:	and    al,0x49
   14000f407:	mov    ch,0x7e
   14000f409:	mov    edi,0xbcf3c97f
   14000f40e:	adc    eax,0xa509d34d
   14000f413:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f414:	jmp    0x14000f40f
   14000f416:	jle    0x14000f413
   14000f418:	mov    cl,0xc7
   14000f41a:	(bad)  
   14000f41b:	sti    
   14000f41c:	(bad)  
   14000f41d:	(bad)  
   14000f41e:	cld    
   14000f41f:	cld    
   14000f420:	(bad)  
   14000f421:	mov    esi,0x9e449d81
   14000f426:	out    dx,eax
   14000f427:	sbb    al,al
   14000f429:	mov    bh,0x9f
   14000f42b:	jno    0x14000f454
   14000f42d:	(bad)  
   14000f42e:	rex fsub QWORD PTR [rdi]
   14000f431:	or     eax,0xe20af081
   14000f436:	rex.RX (bad) 
   14000f438:	xchg   esp,eax
   14000f439:	xchg   edi,eax
   14000f43a:	nop
   14000f43b:	pushf  
   14000f43c:	clc    
   14000f43d:	movabs ds:0xf7bfa4a95932818c,eax
   14000f446:	rex.XB (bad) 
   14000f448:	cmp    BYTE PTR [rdi-0x12],bh
   14000f44b:	pop    rbp
   14000f44c:	nop    DWORD PTR [rdi]
   14000f44f:	xchg   ebp,eax
   14000f450:	(bad)  
   14000f451:	rex.WRXB retf 0x36b2
   14000f455:	outs   dx,DWORD PTR ds:[rsi]
   14000f456:	cmp    ebx,esi
   14000f458:	pop    rax
   14000f459:	iret   
   14000f45a:	jbe    0x14000f4c0
   14000f45c:	xlat   BYTE PTR ds:[rbx]
   14000f45d:	cmc    
   14000f45e:	cmp    BYTE PTR [rip+0x476e4840],bh        # 0x1876f3ca4
   14000f464:	jne    0x14000f466
   14000f466:	icebp  
   14000f467:	xchg   edx,eax
   14000f468:	fdiv   QWORD PTR [rax]
   14000f46a:	es in  eax,0x3b
   14000f46d:	(bad)  
   14000f46e:	mov    edx,0x60cc528c
   14000f473:	(bad)  
   14000f474:	xor    BYTE PTR [rip+0xffffffffbf280931],al        # 0xff28fdab
   14000f47a:	(bad)  
   14000f47b:	and    al,0x66
   14000f47d:	and    esp,DWORD PTR [rdx]
   14000f47f:	sbb    eax,0x49aabe3e
   14000f484:	push   rdx
   14000f485:	add    al,0x2a
   14000f487:	mov    DWORD PTR [rbp+riz*4-0x48],edx
   14000f48b:	lock add ch,BYTE PTR [rsi-0x64]
   14000f48f:	rex.R leave 
   14000f491:	xor    dh,BYTE PTR [rbx-0x71]
   14000f494:	rex.WB enter 0x6c76,0xb7
   14000f499:	sbb    ch,BYTE PTR [rax+0x36]
   14000f49c:	push   0x3c
   14000f49e:	(bad)  
   14000f49f:	(bad)  
   14000f4a0:	or     al,0xc3
   14000f4a2:	sbb    BYTE PTR [rsi-0x2c5a9e2e],0xc8
   14000f4a9:	in     eax,0x72
   14000f4ab:	enter  0x3264,0x30
   14000f4af:	or     eax,0xe5cb903
   14000f4b4:	imul   edx,ebx,0x8050a140
   14000f4ba:	gs (bad) 
   14000f4bc:	mov    al,0xd2
   14000f4be:	imul   ebx,DWORD PTR [rax-0x17],0x699d3434
   14000f4c5:	adc    eax,0x661d8ed8
   14000f4ca:	cmp    cl,BYTE PTR [rax]
   14000f4cc:	and    DWORD PTR [rax+0x2a138524],eax
   14000f4d2:	(bad)  
   14000f4d3:	sti    
   14000f4d4:	mul    ebx
   14000f4d6:	and    DWORD PTR [rsp+riz*8],ecx
   14000f4d9:	sti    
   14000f4da:	adc    eax,DWORD PTR [rsi-0x6e482860]
   14000f4e0:	retf   
   14000f4e1:	out    0x40,al
   14000f4e3:	rex.W or BYTE PTR [rbx+0x6d60ae97],0x7d
   14000f4eb:	sbb    eax,0x69165cf9
   14000f4f0:	rex.XB
   14000f4f1:	rex.RXB retf 0x3130
   14000f4f5:	cmp    DWORD PTR [rcx],edi
   14000f4f7:	mov    DWORD PTR [rsi+rbp*1-0x35],edi
   14000f4fb:	cmp    DWORD PTR [rbx],0xf6f39429
   14000f501:	mov    ecx,0xd44122f1
   14000f506:	push   0x4e
   14000f508:	push   rcx
   14000f509:	(bad)  
   14000f50a:	push   rax
   14000f50b:	push   0xffffffffc849e425
   14000f510:	adc    DWORD PTR [rcx+0x29],ecx
   14000f513:	(bad)  
   14000f514:	jbe    0x14000f547
   14000f516:	cmp    cl,ah
   14000f518:	movabs ds:0xc221f9c04aaacec9,eax
   14000f521:	outs   dx,DWORD PTR ds:[rsi]
   14000f522:	(bad)  
   14000f523:	rex.RX pop rbp
   14000f525:	(bad)  
   14000f526:	pop    rcx
   14000f527:	add    cl,ah
   14000f529:	jne    0x14000f51b
   14000f52b:	idiv   DWORD PTR [rcx]
   14000f52d:	scas   al,BYTE PTR es:[rdi]
   14000f52e:	sbb    ebx,DWORD PTR [rsi]
   14000f530:	jnp    0x14000f573
   14000f532:	pop    rdx
   14000f533:	(bad)  
   14000f534:	mov    es,WORD PTR [rdx]
   14000f536:	xlat   BYTE PTR ds:[rbx]
   14000f537:	(bad)  
   14000f538:	add    al,0xc3
   14000f53a:	sbb    dl,BYTE PTR [rdx+0x29]
   14000f53d:	cmp    eax,0x71d89144
   14000f542:	or     BYTE PTR [rdi+0xa],dl
   14000f545:	push   rax
   14000f546:	mov    al,0x50
   14000f548:	and    al,0xa5
   14000f54a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f54b:	cwde   
   14000f54c:	enter  0x60a9,0xbd
   14000f550:	jb     0x14000f57b
   14000f552:	jne    0x14000f59d
   14000f554:	xchg   esi,eax
   14000f555:	pop    rbp
   14000f556:	(bad)  
   14000f557:	jno    0x14000f537
   14000f559:	call   0x17930f055
   14000f55e:	scas   al,BYTE PTR es:[rdi]
   14000f55f:	jnp    0x14000f512
   14000f561:	shr    DWORD PTR [rbp+rdi*4-0x2a],1
   14000f565:	out    dx,eax
   14000f566:	not    edi
   14000f568:	or     DWORD PTR gs:[rbp-0x1484c9b4],ebp
   14000f56f:	xchg   ebx,eax
   14000f570:	jg     0x14000f562
   14000f572:	sti    
   14000f573:	fstp   QWORD PTR [rdi-0x4]
   14000f576:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f577:	jg     0x14000f5de
   14000f579:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f57a:	xor    al,0x3
   14000f57c:	in     eax,dx
   14000f57d:	jbe    0x14000f55a
   14000f57f:	test   BYTE PTR [rcx+0x40],0x27
   14000f583:	(bad)  
   14000f584:	retf   
   14000f585:	jg     0x14000f5ac
   14000f587:	or     al,0xc1
   14000f589:	jle    0x14000f598
   14000f58b:	rex cld 
   14000f58d:	mov    ch,0xf1
   14000f58f:	jnp    0x14000f5f2
   14000f591:	add    dh,dh
   14000f593:	xor    al,BYTE PTR [rsi]
   14000f595:	rex.WB cld 
   14000f597:	(bad)  
   14000f598:	(bad)  
   14000f599:	movsxd edx,DWORD PTR [rax]
   14000f59b:	mov    edi,0x67a80057
   14000f5a0:	(bad)  
   14000f5a1:	jl     0x14000f54b
   14000f5a3:	clc    
   14000f5a4:	out    dx,al
   14000f5a5:	idiv   DWORD PTR [rbp+0x60]
   14000f5a8:	(bad)  
   14000f5a9:	hlt    
   14000f5aa:	jmp    0x1299c452a
   14000f5af:	int3   
   14000f5b0:	(bad)  
   14000f5b1:	or     bh,BYTE PTR [rcx-0x4a]
   14000f5b4:	(bad)  [rbx+0x72]
   14000f5b7:	mov    ds,WORD PTR [rbx]
   14000f5b9:	xchg   ebp,eax
   14000f5ba:	(bad)  
   14000f5bb:	(bad)  
   14000f5bc:	lea    eax,[rdx-0x48]
   14000f5bf:	shl    edx,cl
   14000f5c1:	loop   0x14000f609
   14000f5c3:	xor    al,0x1
   14000f5c5:	ret    0xfc9
   14000f5c8:	rex.R
   14000f5c9:	rex.RX
   14000f5ca:	rex.X xchg edx,eax
   14000f5cc:	ret    0x2315
   14000f5cf:	sahf   
   14000f5d0:	xchg   ebp,eax
   14000f5d1:	sbb    BYTE PTR [rax],bh
   14000f5d3:	rex push rsp
   14000f5d5:	sbb    BYTE PTR [rcx],dl
   14000f5d7:	xor    dh,BYTE PTR [rax+0x5560011a]
   14000f5dd:	imul   edx,DWORD PTR [rdx],0xb70b4e93
   14000f5e3:	jno    0x14000f5cf
   14000f5e5:	xor    ebp,DWORD PTR [rbx-0x5b]
   14000f5e8:	cs cmp al,0x6
   14000f5eb:	lahf   
   14000f5ec:	sub    eax,0x9a08440b
   14000f5f1:	lock int3 
   14000f5f3:	test   bh,ch
   14000f5f5:	movabs eax,ds:0x5cf3c0edd7a269d3
   14000f5fe:	call   0x12a3c413d
   14000f603:	stos   BYTE PTR es:[rdi],al
   14000f604:	or     ch,BYTE PTR [rbx]
   14000f606:	movsxd esp,DWORD PTR [rcx]
   14000f608:	fwait
   14000f609:	leave  
   14000f60a:	ret    0x4d34
   14000f60d:	xor    bl,BYTE PTR fs:[rcx]
   14000f610:	out    0x51,al
   14000f612:	fs sub al,0x64
   14000f615:	rcl    BYTE PTR [rsi],cl
   14000f617:	or     al,BYTE PTR [rbp+0x1986d23c]
   14000f61d:	push   0x2b
   14000f61f:	push   0xffffffffffffff9c
   14000f621:	mov    WORD PTR [rdx+rbx*2],fs
   14000f624:	lods   eax,DWORD PTR ds:[rsi]
   14000f625:	xchg   ebx,eax
   14000f626:	fmul   DWORD PTR [rdx-0x712c71d8]
   14000f62c:	jo     0x14000f68e
   14000f62e:	or     ch,bl
   14000f630:	push   rdi
   14000f631:	xchg   edx,eax
   14000f632:	and    al,0x78
   14000f634:	scas   al,BYTE PTR es:[rdi]
   14000f635:	(bad)  
   14000f636:	popf   
   14000f637:	stos   DWORD PTR es:[rdi],eax
   14000f638:	cmp    BYTE PTR [rdi-0xb83a225],dh
   14000f63e:	movsxd ebx,DWORD PTR [rdi-0x1ca952c0]
   14000f644:	(bad)  
   14000f645:	(bad)  
   14000f646:	sbb    DWORD PTR ss:[rip+0x2a94832b],ebp        # 0x16a957978
   14000f64d:	ret    
   14000f64e:	idiv   DWORD PTR [rsp+rdx*2]
   14000f651:	addr32 out 0x30,eax
   14000f654:	push   rbx
   14000f655:	lods   eax,DWORD PTR ds:[rsi]
   14000f656:	ror    BYTE PTR [rcx+rbp*8+0x18],0x2b
   14000f65b:	(bad)  
   14000f65c:	movabs ds:0x812882a355412a54,eax
   14000f665:	or     eax,0x540ab088
   14000f66a:	(bad)  
   14000f66b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f66c:	or     BYTE PTR [rdi+0x5d],dl
   14000f66f:	loope  0x14000f6da
   14000f671:	(bad)  
   14000f672:	sbb    DWORD PTR [rdx-0x239e7ade],esi
   14000f678:	(bad)  
   14000f679:	sub    eax,0x302de442
   14000f67e:	loopne 0x14000f618
   14000f680:	sbb    eax,0xa104125f
   14000f685:	xchg   DWORD PTR [rax+rax*4],eax
   14000f688:	test   DWORD PTR [rdx],ebp
   14000f68a:	xor    eax,edx
   14000f68c:	xor    eax,0x3023d95a
   14000f691:	fdiv   DWORD PTR [rbp+0x5c]
   14000f694:	cmp    BYTE PTR [rsi+0x2192490b],bl
   14000f69a:	push   rcx
   14000f69b:	or     bl,BYTE PTR [rdi-0x5d558885]
   14000f6a1:	and    ah,BYTE PTR [rbp+0x70c4806b]
   14000f6a7:	or     DWORD PTR [rbp+0x67],ebx
   14000f6aa:	sub    eax,0x6bb7b6d9
   14000f6af:	jmp    0x1434e9ade
   14000f6b5:	stos   BYTE PTR es:[rdi],al
   14000f6b6:	stos   BYTE PTR es:[rdi],al
   14000f6b7:	movabs ds:0x4c0411b6e9d077df,al
   14000f6c0:	(bad)  
   14000f6c1:	outs   dx,DWORD PTR ds:[rsi]
   14000f6c2:	movsxd ebp,DWORD PTR [rbx+0xb]
   14000f6c5:	push   rbx
   14000f6c6:	adc    edx,DWORD PTR [rbx]
   14000f6c8:	cwde   
   14000f6c9:	(bad)  
   14000f6ca:	(bad)  
   14000f6cb:	rex.R stos DWORD PTR es:[rdi],eax
   14000f6cd:	(bad)  
   14000f6ce:	xchg   bl,ah
   14000f6d0:	cmp    al,BYTE PTR [rdx+rax*4-0x2c]
   14000f6d4:	shl    DWORD PTR [rbp+rsi*8+0x75],1
   14000f6d8:	pop    rbp
   14000f6d9:	rcl    DWORD PTR [rsi+0x55],cl
   14000f6dc:	push   rbp
   14000f6dd:	sub    eax,0xa5295001
   14000f6e2:	xor    eax,0x84ba842
   14000f6e7:	mov    cl,0x9
   14000f6e9:	movabs eax,ds:0xb971a6d3c7d2946b
   14000f6f2:	push   rsp
   14000f6f3:	sbb    bh,BYTE PTR [rbx+0x3]
   14000f6f6:	fild   WORD PTR [rcx+0x20062771]
   14000f6fc:	stc    
   14000f6fd:	sahf   
   14000f6fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6ff:	push   rdi
   14000f700:	xor    BYTE PTR [rdx],ch
   14000f702:	rex.WR mov BYTE PTR [rdi-0x7c435cf6],r8b
   14000f709:	and    al,0x8e
   14000f70b:	xor    BYTE PTR [rbx+rbx*2],cl
   14000f70e:	or     BYTE PTR [rdi-0x5a],ch
   14000f711:	imul   ebp,DWORD PTR [rdx-0x71],0x53fdefbe
   14000f718:	bsr    esp,edi
   14000f71b:	mov    ebp,0x1c0e1787
   14000f720:	cmp    al,0x9a
   14000f722:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000f724:	vmwrite rdi,QWORD PTR [rsi]
   14000f727:	sub    dh,BYTE PTR [rsi-0x1c716615]
   14000f72d:	(bad)  
   14000f72e:	adc    eax,DWORD PTR [rip+0x693e773b]        # 0x1a93f6e6f
   14000f734:	add    al,0xc4
   14000f736:	push   QWORD PTR [rcx]
   14000f738:	rex.XB and BYTE PTR [r14+0x4010611f],bpl
   14000f73f:	(bad)  
   14000f740:	lea    eax,[rip+0xffffffffb907e403]        # 0xf908db49
   14000f746:	or     dl,BYTE PTR [rdx+0x57c0852c]
   14000f74c:	mov    esp,0x41d29824
   14000f751:	rex.WRXB
   14000f752:	rex.B lods al,BYTE PTR ds:[rsi]
   14000f754:	rol    BYTE PTR [rax],cl
   14000f756:	add    edx,edi
   14000f758:	add    al,dl
   14000f75a:	shl    BYTE PTR [rbx],0x26
   14000f75d:	mov    al,0xc2
   14000f75f:	rex.XB or edx,DWORD PTR [r8-0x52]
   14000f763:	data16 int3 
   14000f765:	sar    BYTE PTR fs:[rdx-0x3],1
   14000f769:	cs mov edx,0xc71c36dd
   14000f76f:	xchg   bh,ah
   14000f771:	mov    edx,0x35d00bcc
   14000f776:	jbe    0x14000f7b9
   14000f778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f779:	ror    eax,cl
   14000f77b:	xor    dh,BYTE PTR fs:[rax+0xbe469d2]
   14000f782:	jns    0x14000f75a
   14000f784:	(bad)  
   14000f785:	rex.RXB rcl DWORD PTR [r8-0x38],cl
   14000f789:	in     eax,0x90
   14000f78b:	int    0x64
   14000f78d:	nop
   14000f78e:	mov    cl,0x2c
   14000f790:	es je  0x14000f735
   14000f793:	test   eax,0xb0a9e948
   14000f798:	xor    edx,DWORD PTR [rbx-0x1bb3471d]
   14000f79e:	test   DWORD PTR [rdi+0x3afb62d2],esi
   14000f7a4:	test   al,0x1e
   14000f7a6:	adc    al,0xf8
   14000f7a8:	add    DWORD PTR [rdx-0x7a],edx
   14000f7ab:	add    DWORD PTR [rbp-0x1d8187f5],ebx
   14000f7b1:	xchg   ebx,eax
   14000f7b2:	lahf   
   14000f7b3:	out    0x14,al
   14000f7b5:	in     al,dx
   14000f7b6:	sbb    dl,BYTE PTR [rsi]
   14000f7b8:	nop    DWORD PTR [rdx]
   14000f7bb:	or     DWORD PTR [rax+rcx*2+0x32],edi
   14000f7bf:	push   rax
   14000f7c0:	sub    dl,BYTE PTR [rbp+0x64504800]
   14000f7c6:	add    eax,0xe8ab6beb
   14000f7cb:	je     0x14000f807
   14000f7cd:	nop
   14000f7ce:	xor    eax,0x22a6ba0d
   14000f7d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f7d4:	imul   esi,DWORD PTR [rax],0xa9950b2c
   14000f7da:	rex.WB in al,0xb3
   14000f7dd:	pop    rcx
   14000f7de:	xor    bl,BYTE PTR fs:[rcx-0x1c]
   14000f7e2:	jb     0x14000f7bd
   14000f7e4:	xor    BYTE PTR [rsi-0x9],ah
   14000f7e7:	sbb    DWORD PTR [rax+0x2b151824],0x7a
   14000f7ee:	movabs ds:0x515904926b8441be,al
   14000f7f7:	movabs al,ds:0xd0d080dbe1933ef3
   14000f800:	(bad)  
   14000f801:	mov    esi,0x2077dccf
   14000f806:	cmp    al,0x1f
   14000f808:	int3   
   14000f809:	jmp    0x14000f79e
   14000f80b:	vpminub ymm26{k7}{z},ymm15,YMMWORD PTR [rax+rbx*1+0x2508969]
   14000f816:	loop   0x14000f81f
   14000f818:	loope  0x14000f885
   14000f81a:	sbb    eax,0x2cf50dd7
   14000f81f:	add    al,dl
   14000f821:	push   rdx
   14000f822:	int3   
   14000f823:	mov    dh,0xdd
   14000f825:	rex.RXB stos DWORD PTR es:[rdi],eax
   14000f827:	rol    DWORD PTR [rsi-0x471f082d],cl
   14000f82d:	(bad)  
   14000f82e:	add    dh,dh
   14000f830:	xlat   BYTE PTR ds:[rbx]
   14000f832:	jne    0x14000f855
   14000f834:	rex.WXB rcl r12b,0xd4
   14000f838:	and    al,0x16
   14000f83a:	(bad)  
   14000f83b:	out    0x61,al
   14000f83d:	call   0x1295e28eb
   14000f842:	jns    0x14000f862
   14000f844:	jl     0x14000f815
   14000f846:	movsxd edi,ebx
   14000f848:	adc    esp,DWORD PTR [rbx]
   14000f84a:	lods   eax,DWORD PTR ds:[rsi]
   14000f84b:	mov    cl,0xf0
   14000f84d:	rex.WRB sub QWORD PTR [r11+rax*1],0xffffffffedd2a2aa
   14000f855:	pop    rdx
   14000f856:	jrcxz  0x14000f812
   14000f858:	movabs ds:0xed5a37d6d2662f2a,al
   14000f861:	not    BYTE PTR [rdi-0x62993266]
   14000f867:	add    bl,BYTE PTR [rbx-0x11f8511]
   14000f86d:	mov    edi,0x6ee12f70
   14000f872:	or     al,0xc0
   14000f874:	mov    al,0xf7
   14000f876:	lea    eax,es:[rax]
   14000f879:	mov    al,0xd3
   14000f87b:	cmp    edx,DWORD PTR [rax+0x30]
   14000f87e:	call   0x1018e1ca4
   14000f883:	xor    BYTE PTR [rbx+0x30],al
   14000f886:	retf   0xc08
   14000f889:	cld    
   14000f88a:	pop    rdi
   14000f88b:	popf   
   14000f88c:	cdq    
   14000f88d:	xor    DWORD PTR [rdi],ebx
   14000f88f:	jns    0x14000f880
   14000f891:	sti    
   14000f892:	stos   BYTE PTR es:[rdi],al
   14000f893:	addr32 out dx,al
   14000f895:	(bad)  
   14000f896:	mov    ebx,0x1cccad58
   14000f89b:	shl    DWORD PTR [rbx+rsi*8+0x40],1
   14000f89f:	rex push rax
   14000f8a1:	jmp    0x123d4169c
   14000f8a6:	(bad)  
   14000f8a7:	xchg   esi,eax
   14000f8a8:	mov    ecx,0x11a2ec9d
   14000f8ad:	(bad)  
   14000f8ae:	jns    0x14000f8b3
   14000f8b0:	or     bh,BYTE PTR [rsi]
   14000f8b2:	mov    cl,0x55
   14000f8b4:	xor    DWORD PTR [rcx+0x5a62179f],ebp
   14000f8ba:	mov    esp,0x924af03
   14000f8bf:	and    dl,BYTE PTR [rbx+0x5f52880c]
   14000f8c5:	icebp  
   14000f8c6:	mov    bl,0x59
   14000f8c8:	clc    
   14000f8c9:	sbb    ebx,DWORD PTR [rsi+0x74]
   14000f8cc:	lods   al,BYTE PTR ds:[rsi]
   14000f8cd:	xor    DWORD PTR [rdi],ebx
   14000f8cf:	or     eax,0x11a3b0e5
   14000f8d4:	imul   esp,DWORD PTR [rdi],0x15a62200
   14000f8da:	lods   al,BYTE PTR ds:[rsi]
   14000f8db:	rex.RX ret 0x6c50
   14000f8df:	sbb    al,BYTE PTR [rcx]
   14000f8e1:	(bad)  
   14000f8e2:	mov    esi,0x7f1c0830
   14000f8e7:	adc    BYTE PTR [rsi],al
   14000f8e9:	movabs ds:0x1d75c0ebd7a0e9d3,al
   14000f8f2:	js     0x14000f892
   14000f8f4:	sbb    edx,esi
   14000f8f6:	in     eax,dx
   14000f8f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f8f8:	adc    r15,QWORD PTR [r10+0x2a]
   14000f8fc:	test   DWORD PTR [rbp+rdx*4+0x60656586],ecx
   14000f903:	gs sub al,0x64
   14000f906:	mov    eax,0x16d2b041
   14000f90b:	or     bh,BYTE PTR [rcx]
   14000f90d:	out    0x51,al
   14000f90f:	call   0x1278407ce
   14000f914:	out    dx,eax
   14000f915:	rex.RB pushf 
   14000f917:	(bad)  
   14000f918:	shl    BYTE PTR [rcx-0x2cfc588a],0x30
   14000f91f:	add    edx,ecx
   14000f921:	adc    al,0x7f
   14000f923:	(bad)  
   14000f924:	sti    
   14000f925:	test   DWORD PTR [rdi],ebp
   14000f927:	ret    0x7cf6
   14000f92a:	fdivr  QWORD PTR [rsi+rsi*8-0x191919da]
   14000f931:	push   rax
   14000f932:	fcmovnu st,st(6)
   14000f934:	ret    0x54e4
   14000f937:	add    eax,0x59ecf67
   14000f93c:	and    DWORD PTR [rbx+rbp*8],eax
   14000f93f:	sbb    ebx,DWORD PTR [rbx]
   14000f941:	xor    BYTE PTR [rbx+rax*1],cl
   14000f944:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f945:	(bad)  
   14000f946:	ror    BYTE PTR [rdx-0x65],0xd8
   14000f94a:	fcomp  st(0)
   14000f94c:	rex.X
   14000f94d:	cs lahf 
   14000f94f:	rex.XB mov r13d,0x294480d1
   14000f955:	ss ss (bad) 
   14000f958:	movabs eax,ds:0x5930c6c6c7f3ecea
   14000f961:	(bad)  
   14000f962:	(bad)  
   14000f963:	in     al,dx
   14000f964:	rex.WR and rax,0xffffffffaba3d974
   14000f96a:	sub    DWORD PTR [rdx+0x480729cd],ecx
   14000f970:	movabs ds:0xaaaa0339c0c878a7,eax
   14000f979:	rex.X out 0xd,al
   14000f97c:	pop    rbx
   14000f97d:	xor    al,0x45
   14000f97f:	gs out 0x58,eax
   14000f982:	mov    ah,cl
   14000f984:	or     al,0xdc
   14000f986:	sti    
   14000f987:	adc    bh,BYTE PTR [rdi+0x241d5c29]
   14000f98d:	rex (bad) 
   14000f98f:	xor    edx,DWORD PTR [rbx]
   14000f991:	adc    BYTE PTR [rax-0x7c40f06f],0x87
   14000f998:	push   rsp
   14000f999:	and    bh,BYTE PTR [rbx+rdx*4+0x65]
   14000f99d:	mov    DWORD PTR [rbx-0x91744aa],ebp
   14000f9a3:	jp     0x14000f98d
   14000f9a5:	(bad)  [rsi]
   14000f9a7:	sar    BYTE PTR [rsp+rsi*1],cl
   14000f9aa:	sub    ecx,DWORD PTR [rdi+0x6df76097]
   14000f9b0:	fsubr  DWORD PTR [rsi+0x5ba5a583]
   14000f9b6:	test   al,0x56
   14000f9b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9b9:	pop    rax
   14000f9ba:	rex.XB pop r12
   14000f9bc:	popf   
   14000f9bd:	idiv   DWORD PTR [rbx]
   14000f9bf:	in     al,0xa0
   14000f9c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f9c2:	out    dx,eax
   14000f9c3:	(bad)  
   14000f9c4:	lods   al,BYTE PTR ds:[rsi]
   14000f9c5:	mov    ch,0x5a
   14000f9c7:	adc    cl,cl
   14000f9c9:	(bad)  
   14000f9ca:	outs   dx,DWORD PTR ds:[rsi]
   14000f9cb:	outs   dx,DWORD PTR ds:[rsi]
   14000f9cc:	xlat   BYTE PTR ds:[rbx]
   14000f9cd:	icebp  
   14000f9ce:	lea    esp,[rdi-0x32]
   14000f9d1:	jrcxz  0x14000f991
   14000f9d3:	jnp    0x14000f9c4
   14000f9d5:	(bad)
   14000f9d8:	rex.RXB shr r9b,1
   14000f9db:	hlt    
   14000f9dc:	(bad)  
   14000f9dd:	scas   al,BYTE PTR es:[rdi]
   14000f9de:	jmp    0x14000f995
   14000f9e0:	sbb    al,0xc7
   14000f9e2:	jns    0x14000f9b9
   14000f9e4:	idiv   DWORD PTR [rbp+0x5de78eeb]
   14000f9ea:	(bad)  
   14000f9eb:	call   0xfadb5043
   14000f9f0:	jp     0x14000f9e4
   14000f9f2:	clc    
   14000f9f3:	sar    DWORD PTR [rsi],1
   14000f9f5:	fsubrp st(6),st
   14000f9f7:	icebp  
   14000f9f8:	push   rsi
   14000f9f9:	or     al,0xc0
   14000f9fb:	mov    al,0xcf
   14000f9fd:	sbb    ebp,esp
   14000f9ff:	adc    eax,0xb8810dc4
   14000fa04:	or     eax,0x20710633
   14000fa09:	jno    0x14000fa42
   14000fa0b:	sbb    al,0x61
   14000fa0d:	test   al,0x21
   14000fa0f:	adc    BYTE PTR [rdi+0x78c54ac9],dh
   14000fa15:	in     al,0xbd
   14000fa17:	out    dx,eax
   14000fa18:	stos   DWORD PTR es:[rdi],eax
   14000fa19:	fdivr  st(7),st
   14000fa1b:	sar    BYTE PTR [rcx-0x2315163b],0x61
   14000fa22:	rex.RB
   14000fa23:	rex.WRB sub rax,0x7b5684f8
   14000fa29:	jge    0x14000fa02
   14000fa2b:	hlt    
   14000fa2c:	cmp    ecx,edi
   14000fa2e:	sub    BYTE PTR [rsi+0x10],ch
   14000fa31:	(bad)  
   14000fa32:	(bad)  
   14000fa33:	cmp    WORD PTR [rdi-0x2f],r14w
   14000fa38:	leave  
   14000fa39:	rex.RX or r12b,BYTE PTR [rbx-0x1]
   14000fa3d:	mov    eax,0xa67eccdb
   14000fa42:	(bad)  
   14000fa43:	add    BYTE PTR [rcx],al
   14000fa45:	or     ch,cl
   14000fa47:	add    esi,DWORD PTR [rcx-0x57fd772e]
   14000fa4d:	cmp    dh,bh
   14000fa4f:	and    BYTE PTR [rsi],bh
   14000fa51:	rex.XB loopne 0x14000fa64
   14000fa54:	in     al,dx
   14000fa55:	stc    
   14000fa56:	fadd   st,st(5)
   14000fa58:	iret   
   14000fa59:	xor    DWORD PTR [rdi],eax
   14000fa5b:	ror    BYTE PTR [rax-0xe],1
   14000fa5e:	sub    ebp,DWORD PTR [rsi]
   14000fa60:	jnp    0x14000fab0
   14000fa62:	or     DWORD PTR [rdi+0x24480b65],edx
   14000fa68:	xchg   esp,eax
   14000fa69:	retf   0x4bd
   14000fa6c:	add    DWORD PTR [rip+0xffffffffdc6e5c78],0x76d85d73        # 0x11c6f56ee
   14000fa76:	minps  xmm5,XMMWORD PTR [rsi+0x1c]
   14000fa7a:	(bad)  
   14000fa7b:	sub    cl,0x37
   14000fa7e:	rex.W add BYTE PTR [rbx+rdx*8],cl
   14000fa82:	and    BYTE PTR [rsi-0x64617397],0x66
   14000fa89:	shl    BYTE PTR [rsi+rsi*1-0x6d],0x41
   14000fa8e:	ss xchg ebx,eax
   14000fa90:	sar    eax,0xe4
   14000fa93:	and    al,0xb2
   14000fa95:	xchg   esi,eax
   14000fa96:	test   DWORD PTR [rbp+riz*2-0x43ac2f3f],ecx
   14000fa9d:	mov    ch,0xbb
   14000fa9f:	add    al,0x5d
   14000faa1:	push   rbx
   14000faa2:	icebp  
   14000faa3:	rex.RXB lahf 
   14000faa5:	sti    
   14000faa6:	movsxd edi,eax
   14000faa8:	jle    0x14000fa2a
   14000faaa:	sbb    ebp,DWORD PTR [rdi+0x5e]
   14000faad:	rex.RB mov r13b,0x5a
   14000fab0:	rex.RB movabs ds:0x353530472391c4d9,eax
   14000faba:	add    eax,0xcb9071d7
   14000fabf:	in     eax,0x50
   14000fac1:	sub    BYTE PTR [rsi],dl
   14000fac3:	mov    cl,0xbc
   14000fac5:	mov    esp,0x156a998c
   14000faca:	scas   eax,DWORD PTR es:[rdi]
   14000facb:	pop    rdi
   14000facc:	mov    edx,0xe47a38c
   14000fad1:	movsxd ebp,DWORD PTR [rcx-0x17]
   14000fad4:	es data16 addr32 push ax
   14000fad9:	stos   DWORD PTR es:[rdi],eax
   14000fada:	(bad)  
   14000fadb:	push   rax
   14000fadc:	cdq    
   14000fadd:	(bad)  
   14000fade:	ror    dl,0xda
   14000fae1:	cmp    dh,BYTE PTR [rdx-0x6a]
   14000fae4:	test   DWORD PTR [rsi-0x45],esp
   14000fae7:	and    DWORD PTR [rdx+0x21],0xffffff8f
   14000faeb:	test   eax,0xcf48f189
   14000faf0:	rex.B lods al,BYTE PTR ds:[rsi]
   14000faf2:	in     al,dx
   14000faf3:	mov    DWORD PTR [rax+0x6e],edx
   14000faf6:	call   0x187eb7e9b
   14000fafb:	add    BYTE PTR [rbx],al
   14000fafd:	jb     0x14000fb64
   14000faff:	fimul  WORD PTR [rcx-0x77]
   14000fb02:	cmc    
   14000fb03:	movabs ds:0xc4ad16ad21151910,al
   14000fb0c:	add    DWORD PTR [rcx],esp
   14000fb0e:	mov    esp,0xf03b1a4d
   14000fb13:	sar    DWORD PTR [rcx-0x77],1
   14000fb16:	xlat   BYTE PTR ds:[rbx]
   14000fb17:	ins    DWORD PTR es:[rdi],dx
   14000fb18:	rex.R ficom WORD PTR [rcx+0x4f4cb124]
   14000fb1f:	mov    bl,0xd5
   14000fb21:	rex.R stos DWORD PTR es:[rdi],eax
   14000fb23:	fld    QWORD PTR [rcx+0x17c86aae]
   14000fb29:	repnz add BYTE PTR [rax],ch
   14000fb2c:	in     al,dx
   14000fb2d:	ds jmp 0x14000fab3
   14000fb30:	mov    cl,0xba
   14000fb32:	mov    esi,0x9ba5a58e
   14000fb37:	and    BYTE PTR [rax],al
   14000fb39:	shl    BYTE PTR [rsi-0x66],cl
   14000fb3c:	pop    rbp
   14000fb3d:	movsxd edi,DWORD PTR [rsp+rbx*2]
   14000fb40:	icebp  
   14000fb41:	cld    
   14000fb42:	add    BYTE PTR [rsi-0x8985e15],ch
   14000fb48:	shr    DWORD PTR [rcx+0x77],1
   14000fb4b:	shr    DWORD PTR [rdx-0x4b],1
   14000fb4e:	loopne 0x14000fb49
   14000fb50:	ds out 0x67,al
   14000fb53:	addr32 icebp 
   14000fb55:	enter  0xe743,0x90
   14000fb59:	leave  
   14000fb5a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb5b:	loope  0x14000fb17
   14000fb5d:	(bad)  
   14000fb5e:	outs   dx,DWORD PTR ds:[rsi]
   14000fb5f:	xchg   edi,eax
   14000fb60:	scas   al,BYTE PTR es:[rdi]
   14000fb61:	ret    0x3df3
   14000fb64:	add    BYTE PTR [rdx],dl
   14000fb66:	sub    BYTE PTR [rcx-0x41aebad3],ah
   14000fb6c:	fldpi  
   14000fb6e:	cmc    
   14000fb6f:	(bad)  
   14000fb70:	std    
   14000fb71:	(bad)  
   14000fb72:	xchg   ebx,eax
   14000fb73:	rex.WRXB std 
   14000fb75:	loope  0x14000fbb6
   14000fb77:	cld    
   14000fb78:	(bad)  
   14000fb79:	(bad)  
   14000fb7a:	jle    0x14000fbe7
   14000fb7c:	test   DWORD PTR [rbx],0x76f1ffb3
   14000fb82:	sbb    DWORD PTR [rax+0x56f99f61],eax
   14000fb88:	mov    ecx,es
   14000fb8a:	pop    rsi
   14000fb8b:	rex.RX and ecx,r13d
   14000fb8e:	and    DWORD PTR [rdx+rsi*8-0xdffebda],ecx
   14000fb95:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   14000fb97:	(bad)  
   14000fb98:	ds cli 
   14000fb9a:	pop    rbp
   14000fb9b:	out    dx,eax
   14000fb9c:	scas   eax,DWORD PTR es:[rdi]
   14000fb9d:	fdiv   st(3),st
   14000fb9f:	sar    BYTE PTR [rbx-0x166a55ea],0xa3
   14000fba6:	mov    ch,BYTE PTR [rdx-0x34]
   14000fba9:	mov    ebx,0x6df6a91e
   14000fbae:	(bad)  
   14000fbaf:	adc    al,0xdd
   14000fbb1:	jl     0x14000fc0c
   14000fbb3:	out    0xe0,eax
   14000fbb5:	rol    DWORD PTR [rdx],0x1e
   14000fbb8:	rex.WB mov bl,r10b
   14000fbbb:	pop    rcx
   14000fbbc:	add    DWORD PTR [rcx+0x25],edx
   14000fbbf:	pop    rdi
   14000fbc0:	fcom   QWORD PTR [rbx+0x10]
   14000fbc3:	mov    esp,0x62cd68f4
   14000fbc8:	adc    ebx,DWORD PTR [rbx-0x6f]
   14000fbcb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fbcc:	enter  0xc408,0xc0
   14000fbd0:	rex.XB add BYTE PTR [r11-0x509dbe7a],al
   14000fbd7:	or     esi,DWORD PTR [rbp-0x7f98c616]
   14000fbdd:	lock xlat BYTE PTR ds:[rbx]
   14000fbdf:	xchg   ecx,edi
   14000fbe1:	je     0x14000fc21
   14000fbe3:	sbb    DWORD PTR [rdx+0x6a],eax
   14000fbe6:	xor    DWORD PTR [rdi-0x636b74c8],esp
   14000fbec:	loopne 0x14000fc1b
   14000fbee:	clc    
   14000fbef:	or     edi,0xae489c57
   14000fbf5:	int    0xf3
   14000fbf7:	cld    
   14000fbf8:	xor    DWORD PTR [rsi-0x1a],0xf267ddb6
   14000fbff:	fidivr WORD PTR [rbp-0x3058e3d2]
   14000fc05:	sbb    DWORD PTR [rbx+0x2],esi
   14000fc08:	repz (bad) 
   14000fc0a:	(bad)  
   14000fc0b:	and    DWORD PTR [rdi+0x7f27e3cf],ebx
   14000fc11:	cld    
   14000fc12:	(bad)  
   14000fc13:	xor    DWORD PTR [rip+0x2b22855d],edi        # 0x16b238176
   14000fc19:	jo     0x14000fc37
   14000fc1b:	(bad)  
   14000fc1c:	jg     0x14000fc1c
   14000fc1e:	(bad)  
   14000fc1f:	xor    ecx,DWORD PTR [rax]
   14000fc21:	jl     0x14000fc42
   14000fc23:	jmp    0x14000fc10
   14000fc25:	sub    ebx,DWORD PTR [rax-0x393f60e8]
   14000fc2b:	out    0x26,al
   14000fc2d:	(bad)  
   14000fc2e:	(bad)  
   14000fc2f:	cmp    al,0x8
   14000fc31:	rex.WRB rcl r8,cl
   14000fc34:	push   0x77
   14000fc36:	jo     0x14000fc07
   14000fc38:	test   eax,0xcb972813
   14000fc3d:	mov    eax,0x271374b1
   14000fc42:	rex.WRXB sbb al,0xc3
   14000fc45:	mov    ebp,DWORD PTR [rdi]
   14000fc47:	mov    edi,0x39effb82
   14000fc4c:	(bad)  
   14000fc4d:	repz iret 
   14000fc4f:	mov    edi,0x8f27d384
   14000fc54:	loope  0x14000fc3b
   14000fc56:	xlat   BYTE PTR ds:[rbx]
   14000fc57:	mov    esi,0xb0b438d
   14000fc5c:	fcomp  st(0)
   14000fc5e:	fadd   QWORD PTR [rdx+0x3e]
   14000fc61:	xchg   edi,eax
   14000fc62:	ret    
   14000fc63:	jbe    0x14000fc12
   14000fc65:	(bad)  
   14000fc66:	(bad)  [rcx+0x11e8fc71]
   14000fc6c:	(bad)  
   14000fc6d:	pop    rax
   14000fc6e:	(bad)
   14000fc74:	ficomp DWORD PTR [rbp+0x3c4624f8]
   14000fc7a:	imul   edx,DWORD PTR [rbx],0xf
   14000fc7d:	scas   eax,DWORD PTR es:[rdi]
   14000fc7e:	sub    BYTE PTR [rax-0x553ada0d],bl
   14000fc84:	xor    DWORD PTR [rbp+0x59],esp
   14000fc87:	sub    DWORD PTR fs:[rax+rbp*1],edx
   14000fc8b:	sub    dl,BYTE PTR [rbx+0x58e7137c]
   14000fc91:	test   BYTE PTR [rax],dl
   14000fc93:	xchg   edx,eax
   14000fc94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fc95:	lock iret 
   14000fc97:	or     al,BYTE PTR [rax]
   14000fc99:	mov    BYTE PTR [rsi+0x4f],ch
   14000fc9c:	movabs ds:0xeeae10935bcc6aa9,al
   14000fca5:	xlat   BYTE PTR ds:[rbx]
   14000fca6:	xchg   esi,eax
   14000fca7:	outs   dx,BYTE PTR ds:[rsi]
   14000fca8:	add    DWORD PTR [rdx+riz*2+0x7488ac6c],edx
   14000fcaf:	fiadd  DWORD PTR [rax-0x4a970619]
   14000fcb5:	cmp    cl,BYTE PTR [rbp+rdx*4-0x285e9528]
   14000fcbc:	out    0x7d,eax
   14000fcbe:	or     eax,0xd75b5a79
   14000fcc3:	xor    eax,0x9459b3e4
   14000fcc8:	retf   0x4c25
   14000fccb:	xchg   esi,eax
   14000fccc:	retf   
   14000fccd:	enter  0x7217,0x70
   14000fcd1:	pop    rbp
   14000fcd2:	pand   mm3,mm3
   14000fcd5:	jne    0x14000fc83
   14000fcd7:	lods   al,BYTE PTR ds:[rsi]
   14000fcd8:	lods   eax,DWORD PTR ds:[rsi]
   14000fcd9:	movabs eax,ds:0x55590f216289353a
   14000fce2:	pop    rax
   14000fce3:	rcl    DWORD PTR [rdi+0x55],cl
   14000fce6:	add    DWORD PTR [rbp-0x392482fc],esp
   14000fcec:	repnz repnz retf 0xb5e3
   14000fcf1:	rex.RX jmp 0x14000fd53
   14000fcf4:	mov    esi,0x3e8fbdff
   14000fcf9:	(bad)  
   14000fcfa:	repnz movabs al,ds:0x8eade017d618c1dc
   14000fd04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd05:	(bad)  [rsi-0x13bfa2c7]
   14000fd0b:	xor    ecx,eax
   14000fd0d:	movabs al,ds:0x63376146831f031
   14000fd16:	rex.WB push r8
   14000fd18:	jno    0x14000fd51
   14000fd1a:	ins    BYTE PTR es:[rdi],dx
   14000fd1b:	pop    r9
   14000fd1d:	pop    rdi
   14000fd1e:	pop    rbp
   14000fd1f:	jne    0x14000fd5f
   14000fd21:	repz (bad) 
   14000fd23:	lahf   
   14000fd24:	push   0x3e0fe67d
   14000fd29:	icebp  
   14000fd2a:	(bad)  
   14000fd2b:	sub    BYTE PTR [rdi-0x73d9d86b],0xf7
   14000fd32:	mov    esp,0x675383ff
   14000fd37:	(bad)  
   14000fd38:	jl     0x14000fdb2
   14000fd3a:	mov    cl,0x5a
   14000fd3c:	cdq    
   14000fd3d:	cmp    DWORD PTR [rcx+rcx*8],ebp
   14000fd40:	fiadd  DWORD PTR [rdx-0x20b56e15]
   14000fd46:	jbe    0x14000fd74
   14000fd48:	(bad)  
   14000fd49:	jo     0x14000fd44
   14000fd4b:	add    al,0x66
   14000fd4d:	add    BYTE PTR [rax+0x228afcb0],dl
   14000fd53:	bswap  eax
   14000fd55:	rex.WRB
   14000fd56:	rex.RB test al,0x35
   14000fd59:	sbb    eax,0x6523cf40
   14000fd5e:	(bad)  
   14000fd5f:	outs   dx,BYTE PTR ds:[rsi]
   14000fd60:	fldenv [rdx+0x4d]
   14000fd63:	sub    BYTE PTR [rcx+rdx*4],dl
   14000fd66:	push   rsi
   14000fd67:	mov    spl,0xd2
   14000fd6a:	xchg   rsp,rax
   14000fd6c:	xchg   BYTE PTR [rdi+0x1cb9d711],ch
   14000fd72:	(bad)  
   14000fd73:	sub    cl,dl
   14000fd75:	mov    ebp,0x14940882
   14000fd7a:	(bad)  
   14000fd7b:	rex.B (bad) 
   14000fd7d:	xchg   esp,eax
   14000fd7e:	(bad)  
   14000fd7f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fd80:	adc    al,0x62
   14000fd82:	sub    ah,dl
   14000fd84:	jg     0x14000fd37
   14000fd86:	ret    0xa609
   14000fd89:	movabs ds:0xcf1e0e43e166a128,eax
   14000fd92:	movabs ds:0xf179171d1c07e07,eax
   14000fd9b:	shr    bl,1
   14000fd9d:	not    eax
   14000fd9f:	push   0x77
   14000fda1:	pop    rax
   14000fda2:	stos   DWORD PTR es:[rdi],eax
   14000fda3:	(bad)  
   14000fda4:	(bad)  
   14000fda5:	xchg   ebx,eax
   14000fda6:	fisttp DWORD PTR [rsi+0x4a0fbcc3]
   14000fdac:	(bad)  
   14000fdad:	sbb    BYTE PTR [rsi],ah
   14000fdaf:	push   rsp
   14000fdb0:	ffree  st(0)
   14000fdb2:	movabs eax,ds:0x8f2e51142c518743
   14000fdbb:	movabs eax,ds:0x5230142066b16ed9
   14000fdc4:	sub    eax,edi
   14000fdc6:	sahf   
   14000fdc7:	cmovp  ebx,DWORD PTR [rcx-0x74]
   14000fdcb:	in     eax,dx
   14000fdcc:	cmp    cl,BYTE PTR [rsi]
   14000fdce:	lods   al,BYTE PTR ds:[rsi]
   14000fdcf:	mov    ah,0x5
   14000fdd1:	mov    DWORD PTR [rdx+0x28],ecx
   14000fdd4:	lea    ecx,[rbp+0x50656321]
   14000fdda:	stos   DWORD PTR es:[rdi],eax
   14000fddb:	(bad)  
   14000fddc:	xor    BYTE PTR [rip+0xffffffffaded8135],dh        # 0xedee7f17
   14000fde2:	ins    DWORD PTR es:[rdi],dx
   14000fde3:	(bad)  
   14000fde4:	cs cs popf 
   14000fde7:	mov    sp,0x2e08
   14000fdeb:	sub    eax,0x64f65c2f
   14000fdf0:	rex.WXB stc 
   14000fdf2:	mov    eax,0xb9938e01
   14000fdf7:	(bad)  
   14000fdf8:	icebp  
   14000fdf9:	adc    ecx,DWORD PTR [rsi-0x7d]
   14000fdfc:	int3   
   14000fdfd:	(bad)  
   14000fdfe:	xor    BYTE PTR [rcx+rbx*2+0x39],al
   14000fe02:	loope  0x14000fe78
   14000fe04:	lock scas al,BYTE PTR es:[rdi]
   14000fe06:	(bad)  
   14000fe07:	test   BYTE PTR [rdx],ch
   14000fe09:	push   rbp
   14000fe0a:	loop   0x14000fe48
   14000fe0c:	xor    bl,dh
   14000fe0e:	add    eax,0x5514ff03
   14000fe13:	sbb    DWORD PTR [rdx],0xfffffff6
   14000fe16:	adc    BYTE PTR [rcx+riz*1+0x406832c9],0x42
   14000fe1e:	sbb    al,0x48
   14000fe20:	sbb    BYTE PTR [rax+0x9],ah
   14000fe23:	push   rdx
   14000fe24:	fcomp  st(0)
   14000fe26:	jne    0x14000fe96
   14000fe28:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe29:	mov    bl,BYTE PTR [rbx-0x68fa949]
   14000fe2f:	retf   0x9b
   14000fe32:	or     BYTE PTR [rdx],dh
   14000fe34:	sbb    DWORD PTR [rbx],ecx
   14000fe36:	(bad)  [rsi+rax*1-0x3b]
   14000fe3a:	(bad)  
   14000fe3b:	(bad)  
   14000fe3c:	push   rbx
   14000fe3d:	push   rbx
   14000fe3e:	adc    eax,DWORD PTR [rax]
   14000fe40:	sbb    dh,dl
   14000fe42:	ror    DWORD PTR [rsp+rbx*1],0xa0
   14000fe46:	test   eax,0xad9f3c0a
   14000fe4b:	hlt    
   14000fe4c:	mov    ch,0x7a
   14000fe4e:	add    edx,edi
   14000fe50:	xchg   esi,eax
   14000fe51:	outs   dx,BYTE PTR ds:[rsi]
   14000fe52:	movabs ds:0x4f4f4c54d743efdf,al
   14000fe5b:	movsxd esp,DWORD PTR [rdx-0x44]
   14000fe5e:	or     al,0x8d
   14000fe60:	jae    0x14000fe7b
   14000fe62:	add    cl,BYTE PTR [rdx-0x2f]
   14000fe65:	jmp    0x135eecfe0
   14000fe6a:	shr    ch,1
   14000fe6c:	test   BYTE PTR [rax],0x48
   14000fe6f:	(bad)  
   14000fe70:	xor    BYTE PTR [rip+0x3d8f33f3],cl        # 0x17d903269
   14000fe76:	(bad)  
   14000fe77:	in     al,0x4f
   14000fe79:	jl     0x14000fe72
   14000fe7b:	(bad)  
   14000fe7c:	fdivp  st(3),st
   14000fe7e:	and    al,0xde
   14000fe80:	loop   0x14000fe7a
   14000fe82:	mov    esi,eax
   14000fe84:	add    dh,dh
   14000fe86:	cli    
   14000fe87:	sahf   
   14000fe88:	(bad)  
   14000fe89:	(bad)  
   14000fe8a:	(bad)  
   14000fe8b:	xchg   esp,eax
   14000fe8c:	ja     0x14000fe9e
   14000fe8e:	jg     0x14000fecc
   14000fe90:	retf   0xb843
   14000fe93:	fistp  DWORD PTR [rbx-0x8]
   14000fe96:	pop    rcx
   14000fe97:	adc    edx,DWORD PTR [rbx+0x53]
   14000fe9a:	out    0x23,al
   14000fe9c:	out    dx,eax
   14000fe9d:	jge    0x14000fe7e
   14000fe9f:	in     al,0xe9
   14000fea1:	sti    
   14000fea2:	out    dx,al
   14000fea3:	pop    rdi
   14000fea4:	test   al,0x56
   14000fea6:	data16 (bad) 
   14000fea8:	push   rsp
   14000fea9:	int    0x38
   14000feab:	loopne 0x14000fea6
   14000fead:	je     0x14000fe89
   14000feaf:	cmc    
   14000feb0:	(bad)  
   14000feb1:	mov    esp,0x45541908
   14000feb6:	sub    DWORD PTR [rsi-0x68472f95],0xbc0ca830
   14000fec0:	adc    eax,DWORD PTR [rdi+0x60]
   14000fec3:	rex.RX cmp ebp,0x1c
   14000fec7:	mov    cl,0xba
   14000fec9:	rex.RXB (bad) 
   14000fecb:	add    al,0xfb
   14000fecd:	icebp  
   14000fece:	mov    dl,0x2c
   14000fed0:	xchg   DWORD PTR [rdi+riz*2+0x6],edx
   14000fed4:	jb     0x14000fec7
   14000fed6:	in     eax,dx
   14000fed7:	xchg   edx,eax
   14000fed8:	xor    ah,al
   14000feda:	xor    DWORD PTR [rsi+rsi*8-0x80],eax
   14000fede:	test   DWORD PTR [rsi],0x348b018c
   14000fee4:	data16 sbb BYTE PTR [rax+riz*1],ah
   14000fee8:	(bad)  
   14000fee9:	rex.RX adc al,0x6
   14000feec:	and    ah,al
   14000feee:	fimul  DWORD PTR [rbp+0x2a235e2]
   14000fef4:	cmovo  ebx,eax
   14000fef7:	popf   
   14000fef8:	mov    BYTE PTR [rcx+0x7],bh
   14000fefb:	add    bl,BYTE PTR ds:[rsi]
   14000fefe:	sub    eax,DWORD PTR [rdi]
   14000ff00:	test   al,al
   14000ff02:	jae    0x14000ff41
   14000ff04:	jl     0x14000fee5
   14000ff06:	idiv   DWORD PTR [rsi+0x10]
   14000ff09:	repz jae 0x14000ff3f
   14000ff0c:	add    BYTE PTR [rip+0x5e3efd7a],al        # 0x19e3ffc8c
   14000ff12:	jl     0x14000fefd
   14000ff14:	gs mov ah,0xbb
   14000ff17:	pop    rbp
   14000ff18:	adc    BYTE PTR [rdx-0x58],0xaa
   14000ff1c:	(bad)  
   14000ff1d:	pop    rbp
   14000ff1e:	xlat   BYTE PTR ds:[rbx]
   14000ff1f:	loope  0x14000ff9b
   14000ff21:	(bad)  
   14000ff22:	push   rdx
   14000ff23:	mov    edx,0x4148d306
   14000ff28:	xchg   esi,eax
   14000ff29:	adc    eax,0xc98b9eb8
   14000ff2e:	icebp  
   14000ff2f:	or     DWORD PTR [rbx+rcx*8+0x5b346863],edx
   14000ff36:	test   al,0x4c
   14000ff38:	rex.WRB loop 0x14000ff15
   14000ff3b:	cmc    
   14000ff3c:	sbb    edi,DWORD PTR [rax]
   14000ff3e:	jbe    0x14000ff34
   14000ff40:	xor    BYTE PTR [rsi],ch
   14000ff42:	pop    rdi
   14000ff43:	mov    esi,0x8fc7138a
   14000ff48:	ret    0x5db1
   14000ff4b:	jl     0x14000ff3e
   14000ff4d:	iret   
   14000ff4e:	mov    esi,0x69d9d982
   14000ff53:	test   al,0xaa
   14000ff55:	xchg   BYTE PTR [rbx],al
   14000ff57:	repz mov bl,0xac
   14000ff5a:	mov    DWORD PTR [rax+0xb4e951c],0x5953406f
   14000ff64:	jp     0x14000ff77
   14000ff66:	mov    BYTE PTR [rax+0x59435103],bh
   14000ff6c:	shl    DWORD PTR [rbx],0x10
   14000ff6f:	(bad)  
   14000ff70:	nop
   14000ff71:	add    DWORD PTR [rcx+0x198b842c],esi
   14000ff77:	push   rcx
   14000ff78:	mov    al,0x50
   14000ff7a:	sub    ch,BYTE PTR [rsi]
   14000ff7c:	(bad)  
   14000ff7d:	iret   
   14000ff7e:	mov    ah,0x24
   14000ff80:	test   DWORD PTR [rsi],ebp
   14000ff82:	and    eax,0x42ca2540
   14000ff87:	add    DWORD PTR [rdx],ebx
   14000ff89:	rex xchg edx,eax
   14000ff8b:	rcr    bl,0x95
   14000ff8e:	imul   edx,eax,0x74
   14000ff91:	(bad)  
   14000ff92:	imul   DWORD PTR [rsi]
   14000ff94:	fs rex.R (bad) 
   14000ff97:	and    DWORD PTR [rdx+rdi*1+0x28659e78],ecx
   14000ff9e:	mov    dl,0x82
   14000ffa0:	mov    esi,0x6ed9a0ed
   14000ffa5:	movabs ds:0x488e13871dac1429,eax
   14000ffae:	call   0x153950004
   14000ffb3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ffb4:	and    al,0xa8
   14000ffb6:	mov    dl,0x2
   14000ffb8:	cmp    eax,0xcb9f2065
   14000ffbd:	and    BYTE PTR [rbx-0x30675f33],bl
   14000ffc3:	xor    ecx,DWORD PTR [rsi+rax*4]
   14000ffc6:	adc    ah,BYTE PTR [rsi-0x70]
   14000ffc9:	stc    
   14000ffca:	mov    ecx,0x6c6df7eb
   14000ffcf:	xlat   BYTE PTR ds:[rbx]
   14000ffd0:	sbb    ebp,eax
   14000ffd2:	idiv   BYTE PTR [rdx-0x34]
   14000ffd5:	or     BYTE PTR [rcx],dh
   14000ffd7:	movsxd edi,ebp
   14000ffd9:	jp     0x14000ff92
   14000ffdb:	xlat   BYTE PTR ds:[rbx]
   14000ffdc:	stc    
   14000ffdd:	pop    rbx
   14000ffde:	(bad)  
   14000ffdf:	cli    
   14000ffe0:	mov    esi,0x351e5def
   14000ffe5:	jmp    0xf2ff33e0
   14000ffea:	or     al,0xc0
   14000ffec:	test   al,0xef
   14000ffee:	sbb    al,0x66
   14000fff0:	or     al,0x80
   14000fff2:	add    BYTE PTR [r9],sil
   14000fff5:	sbb    DWORD PTR [rsi],ebp
   14000fff7:	fmul   QWORD PTR [rbp-0xe13cf69]
   14000fffd:	and    QWORD PTR [rax+0x18],0xffffffffffffff86
   140010002:	imul   al
   140010004:	sti    
   140010005:	fidivr WORD PTR [rdi]
   140010007:	jno    0x14000ffef
   140010009:	in     al,dx
   14001000a:	mov    ecx,0x7b3b303
   14001000f:	(bad)  
   140010010:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010011:	rcr    DWORD PTR [rcx-0x596fd0fb],cl
   140010017:	add    al,BYTE PTR [rdx-0x75]
   14001001a:	sahf   
   14001001b:	(bad)  
   14001001c:	enter  0xa300,0x4
   140010020:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010021:	push   rdx
   140010022:	cmp    dh,BYTE PTR [rbp+rcx*2-0x73]
   140010026:	test   eax,0x71a14902
   14001002b:	mov    bl,ah
   14001002d:	or     BYTE PTR [rax],al
   14001002f:	or     ebp,DWORD PTR [rbp-0x3b]
   140010032:	test   DWORD PTR [rip+0xffffffff809d5149],ebp        # 0xc09e5181
   140010038:	sbb    al,0x3
   14001003a:	mov    ch,0xd8
   14001003c:	xor    eax,0x1089bdc5
   140010041:	sub    eax,0xb249578e
   140010046:	mov    edi,0x2e443a7c
   14001004b:	sub    DWORD PTR [rdi+0x62e40222],ebx
   140010051:	fs and eax,0x21041b81
   140010057:	test   eax,0x9c947085
   14001005c:	repnz fcomp DWORD PTR [rcx-0x2c]
   140010060:	rex.X adc BYTE PTR [rcx-0x3f],sil
   140010064:	test   DWORD PTR [rcx+0x841f08],ebx
   14001006a:	setge  BYTE PTR [rbx]
   14001006d:	mov    ebx,DWORD PTR [rcx+0x25082ae9]
   140010073:	jo     0x1400100d1
   140010075:	(bad)  
   140010076:	push   rdi
   140010077:	scas   al,BYTE PTR es:[rdi]
   140010078:	mov    esp,0x957e10c9
   14001007d:	lods   eax,DWORD PTR ds:[rsi]
   14001007e:	mov    ds,WORD PTR [rcx+0x2b]
   140010081:	sub    DWORD PTR [rbp+0x46186ded],0xa
   140010088:	movabs al,ds:0x69b2898e067d7a12
   140010091:	rex.XB xlat BYTE PTR ds:[rbx]
   140010093:	xor    DWORD PTR [rip+0x37b5c15d],edi        # 0x177b6c1f6
   140010099:	scas   al,BYTE PTR es:[rdi]
   14001009a:	loope  0x14001007c
   14001009c:	movabs eax,ds:0x849a9a98fbf5e883
   1400100a5:	out    dx,eax
   1400100a6:	jns    0x140010050
   1400100a8:	(bad)  
   1400100a9:	sbb    bl,BYTE PTR [rax-0x46]
   1400100ac:	jne    0x1400100c9
   1400100ae:	jge    0x14001006b
   1400100b0:	pop    QWORD PTR [rdi-0x73fc232]
   1400100b6:	add    eax,DWORD PTR [rax+rax*2+0x432614d1]
   1400100bd:	rex.WRXB push 0x4a82c78
   1400100c3:	xor    BYTE PTR [rdx],0x6f
   1400100c6:	rex
   1400100c7:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400100c9:	fmul   DWORD PTR [rdx-0x53]
   1400100cc:	test   al,0xdc
   1400100ce:	movabs al,ds:0x102ffa3294cc6eb1
   1400100d7:	add    esp,DWORD PTR [rcx+rax*2+0x1]
   1400100db:	rex.WB xchg BYTE PTR [r10+rbx*1],al
   1400100df:	ss xchg esi,eax
   1400100e1:	adc    DWORD PTR [rsi+0x24],eax
   1400100e4:	loopne 0x1400100bf
   1400100e6:	xchg   DWORD PTR [rax],esp
   1400100e8:	mov    al,bl
   1400100ea:	mov    ah,BYTE PTR [rcx]
   1400100ec:	(bad)  
   1400100ed:	and    dh,BYTE PTR [rax]
   1400100ef:	xchg   edi,eax
   1400100f0:	lock mov bl,0x18
   1400100f3:	xlat   BYTE PTR ds:[rbx]
   1400100f4:	rex or DWORD PTR [rbp-0x5e],edx
   1400100f8:	pop    rcx
   1400100f9:	mov    DWORD PTR [rax+0x54d0e861],edi
   1400100ff:	or     eax,0xd30c2f32
   140010104:	xor    eax,0xf1a6aa0d
   140010109:	repz (bad) 
   14001010b:	mov    WORD PTR [rax+0x1d70f9eb],?
   140010111:	xchg   edi,eax
   140010112:	test   DWORD PTR [rsi-0x24],esp
   140010115:	adc    DWORD PTR [rdx-0x5955f6db],0x2
   14001011c:	mov    WORD PTR [rsi+0x40615501],?
   140010122:	and    DWORD PTR es:[rdx+rbx*2+0x4f],ecx
   140010127:	in     al,dx
   140010128:	sub    esp,ecx
   14001012a:	sbb    BYTE PTR [rbp+0x5b5b7e28],al
   140010130:	fild   WORD PTR [rax-0x5d]
   140010133:	(bad)  
   140010134:	loop   0x14001011d
   140010136:	mov    eax,edx
   140010138:	repz mov esp,0xfc1f85f
   14001013e:	std    
   14001013f:	in     eax,dx
   140010140:	pop    rdi
   140010141:	fincstp 
   140010143:	int3   
   140010144:	sbb    esi,DWORD PTR [rdx]
   140010146:	mov    esi,0xd4600613
   14001014b:	test   DWORD PTR [rdi],0xffe20af3
   140010151:	(bad)  
   140010152:	loop   0x140010170
   140010154:	(bad)  
   140010155:	icebp  
   140010156:	add    edi,DWORD PTR [rcx-0x38]
   140010159:	jrcxz  0x140010138
   14001015b:	cmp    al,0x80
   14001015d:	jge    0x140010178
   14001015f:	add    al,0x0
   140010161:	retf   0x1ebb
   140010164:	jns    0x1400101da
   140010166:	in     al,dx
   140010167:	sahf   
   140010168:	sti    
   140010169:	iret   
   14001016a:	rex.WRX (bad) 
   14001016c:	(bad)  
   14001016d:	cmp    al,0x7c
   14001016f:	mov    al,0x58
   140010171:	sbb    al,0x9f
   140010173:	and    edx,DWORD PTR [rax+0x250082e7]
   140010179:	(bad)  
   14001017a:	and    BYTE PTR [rcx+0x4a],ch
   14001017d:	jmp    0xc5d14302
   140010182:	cmp    BYTE PTR ss:[rax+rbp*1],0x14
   140010187:	sub    cl,bl
   140010189:	ret    0x104b
   14001018c:	(bad)  
   14001018d:	add    al,0x12
   14001018f:	pop    rbp
   140010190:	jae    0x14001014b
   140010192:	mov    ebp,DWORD PTR [rbx]
   140010194:	rex.WXB mov r9b,0x70
   140010197:	add    DWORD PTR [rsi+0x809793c],0x625904f1
   1400101a1:	rex.R cwde 
   1400101a3:	test   al,0x4
   1400101a5:	(bad)  
   1400101a6:	xchg   BYTE PTR [rsi+0x4ab6003],al
   1400101ac:	jnp    0x1400101e5
   1400101ae:	or     DWORD PTR [rdi],ebp
   1400101b0:	rol    DWORD PTR es:[rdx],1
   1400101b3:	pushf  
   1400101b4:	pop    rbp
   1400101b5:	in     al,0xbc
   1400101b7:	rex.WX push rdx
   1400101b9:	push   rax
   1400101ba:	pushf  
   1400101bb:	jmp    0xc42106a0
   1400101c0:	loopne 0x14001018e
   1400101c2:	test   eax,0x9e9e9853
   1400101c7:	(bad)  
   1400101c8:	out    0xfb,eax
   1400101ca:	call   0xfeb9fcc4
   1400101cf:	je     0x1400101dc
   1400101d1:	sub    ebp,DWORD PTR [rbx-0x676567d5]
   1400101d7:	rex mov esi,0x9e5de390
   1400101dd:	mov    dh,0x50
   1400101df:	loopne 0x14001019e
   1400101e1:	add    dl,BYTE PTR [rdi-0x29]
   1400101e4:	(bad)  
   1400101e5:	shr    ch,1
   1400101e7:	cmc    
   1400101e8:	(bad)  
   1400101e9:	pop    rcx
   1400101ea:	imul   esp,DWORD PTR [rbp+rcx*8+0x1b7dfa34],0x78d3b373
   1400101f5:	jmp    0x1307199bf
   1400101fa:	rol    BYTE PTR [rcx-0x54],1
   1400101fd:	lods   al,BYTE PTR ds:[rsi]
   1400101fe:	scas   al,BYTE PTR es:[rdi]
   1400101ff:	(bad)  
   140010200:	push   0x72
   140010202:	adc    dh,BYTE PTR [rdi-0x3e392091]
   140010208:	or     DWORD PTR [rbx-0x67a5cb98],0xffffff99
   14001020f:	scas   al,BYTE PTR es:[rdi]
   140010210:	movabs al,ds:0xf1e8d0cb6c852e5c
   140010219:	xchg   esp,eax
   14001021a:	and    BYTE PTR [rbx],ah
   14001021c:	loope  0x140010216
   14001021e:	jo     0x14001023c
   140010220:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010221:	sbb    eax,edx
   140010223:	jmp    0x140010200
   140010225:	lock cmp al,0x17
   140010228:	mov    ch,BYTE PTR [rax+riz*1-0x32a5766d]
   14001022f:	push   rbx
   140010230:	and    cl,BYTE PTR [rax]
   140010232:	rex add edi,edx
   140010235:	xchg   ebx,eax
   140010236:	mov    WORD PTR [rdi+rbx*4],cs
   140010239:	out    0x31,eax
   14001023b:	and    DWORD PTR [rbx+0x31],ebx
   14001023e:	stc    
   14001023f:	imul   eax,eax,0x4405dcda
   140010245:	test   BYTE PTR [rip+0xffffffffa1361234],cl        # 0xe137147f
   14001024b:	loopne 0x140010253
   14001024d:	xchg   edi,eax
   14001024e:	in     al,dx
   14001024f:	in     al,0xec
   140010251:	mov    dh,BYTE PTR ds:0x7e11dc62
   140010258:	mov    esi,0x86958d74
   14001025d:	jmp    0x140010279
   14001025f:	retf   
   140010260:	stos   BYTE PTR es:[rdi],al
   140010261:	call   0x193561120
   140010266:	cmp    DWORD PTR [rax],edx
   140010268:	test   eax,0xd7098282
   14001026d:	mov    bh,bl
   14001026f:	loop   0x1400102e4
   140010271:	jns    0x1400102ed
   140010273:	xchg   ebp,eax
   140010274:	(bad)  
   140010275:	pop    rsi
   140010276:	or     DWORD PTR [rax],ecx
   140010278:	rex.WXB
   140010279:	rex.RB (bad) 
   14001027b:	pushf  
   14001027c:	sbb    eax,DWORD PTR [rdx-0x8]
   14001027f:	cmp    DWORD PTR [rdx],edx
   140010281:	(bad)  
   140010282:	pop    rsp
   140010283:	or     DWORD PTR [rsi+rcx*2+0x5ba58fb7],0x1f13e0b7
   14001028e:	or     DWORD PTR [rdi+0x40],0x2944bd29
   140010295:	mov    ecx,0xe87e47f7
   14001029a:	mov    edi,0xe3977072
   14001029f:	(bad)  
   1400102a0:	add    al,BYTE PTR [rbx]
   1400102a2:	mov    eax,0xe60c3193
   1400102a7:	lea    esp,[rdi+0x2086e3f1]
   1400102ad:	mov    ds,WORD PTR [rcx]
   1400102af:	mov    BYTE PTR [rbx+0x1c],bl
   1400102b2:	(bad)  
   1400102b3:	sbb    dh,ah
   1400102b5:	sub    DWORD PTR [rbx+rcx*1],ecx
   1400102b8:	sbb    eax,DWORD PTR [rsi+0x3cbdf84d]
   1400102be:	add    al,0xf9
   1400102c0:	mov    ecx,0x9fb69e67
   1400102c5:	jnp    0x1400102ad
   1400102c7:	jmp    0x140180341
   1400102cc:	enter  0xbf3,0x8b
   1400102d0:	(bad)  
   1400102d1:	jge    0x1400102ba
   1400102d3:	(bad)  
   1400102d4:	rex.WRB sbb al,0x3e
   1400102d7:	jbe    0x1400102bb
   1400102d9:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400102db:	xor    bh,BYTE PTR [rbp-0x63195758]
   1400102e1:	movsxd eax,DWORD PTR [rdi]
   1400102e3:	xchg   ebp,eax
   1400102e4:	mov    esi,0x2108e72d
   1400102e9:	mov    dl,0x24
   1400102eb:	rex.WB
   1400102ec:	jmp    0x10e958f0c
   1400102f2:	mov    ah,0x3
   1400102f4:	xor    al,0x15
   1400102f6:	(bad)  
   1400102f7:	(bad)  
   1400102f8:	push   rax
   1400102f9:	imul   edx,DWORD PTR [rbp-0x5e836939],0x5903f108
   140010303:	sbb    DWORD PTR [rdi+rbp*1-0x7b],esi
   140010307:	push   rcx
   140010308:	add    BYTE PTR [rax],al
   14001030a:	push   rbp
   14001030b:	xchg   ecx,eax
   14001030c:	(bad)  [rdi+0x220b844c]
   140010312:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010313:	sbb    DWORD PTR [rsi],edx
   140010315:	sbb    al,0xf1
   140010317:	xchg   ebp,eax
   140010318:	mov    ebp,DWORD PTR [rdx+0x5518b182]
   14001031e:	retf   
   14001031f:	xchg   ecx,eax
   140010320:	xor    BYTE PTR [rdx-0x4b386ef5],0x2c
   140010327:	lods   eax,DWORD PTR ds:[rsi]
   140010328:	rex.W
   140010329:	mov    ?,WORD PTR [rax+r12*1-0x33127ada]
   140010331:	xchg   ebp,eax
   140010332:	mov    BYTE PTR [rip+0xffffffffa632aaa9],cl        # 0xe633ade1
   140010338:	stos   DWORD PTR es:[rdi],eax
   140010339:	push   rbx
   14001033a:	call   0x11f59be34
   14001033f:	fadd   st,st(0)
   140010341:	lea    ebx,[rbx+0x142c5137]
   140010347:	sbb    DWORD PTR [rax],edx
   140010349:	mov    DWORD PTR [rcx],ebx
   14001034b:	xchg   rdx,rax
   14001034d:	test   BYTE PTR [rsi+rsi*1-0x75],bh
   140010351:	(bad)  
   140010352:	in     al,0x24
   140010354:	fs rex.RB
   140010356:	rex.B
   140010357:	gs push 0x12
   14001035a:	xlat   BYTE PTR ds:[rbx]
   14001035b:	xchg   edi,eax
   14001035c:	outs   dx,BYTE PTR ds:[rsi]
   14001035d:	(bad)  
   14001035e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001035f:	pop    rdx
   140010360:	sub    edi,0x2654a879
   140010366:	movabs eax,ds:0x1369d23cb9f23a6b
   14001036f:	pop    rbx
   140010370:	pop    rbx
   140010371:	pop    rbx
   140010372:	cwde   
   140010373:	fwait
   140010374:	popf   
   140010375:	(bad)
   140010378:	add    al,0xfa
   14001037a:	jge    0x1400103f7
   14001037c:	or     al,dl
   14001037e:	(bad)  
   14001037f:	rex.WRB xor BYTE PTR [r13+0x55],r9b
   140010383:	movabs al,ds:0xcf00280c997216eb
   14001038c:	not    eax
   14001038e:	jmp    0x174705507
   140010393:	mov    al,0xb5
   140010395:	mov    ch,0xd
   140010397:	shl    DWORD PTR [rcx+rdx*4],cl
   14001039a:	int    0x5a
   14001039c:	xor    BYTE PTR [rdx+0x6],dl
   14001039f:	retf   
   1400103a0:	out    dx,al
   1400103a1:	enter  0x6fac,0x83
   1400103a5:	and    al,0xb1
   1400103a7:	nop
   1400103a8:	mov    BYTE PTR [rax],bl
   1400103aa:	cmp    al,BYTE PTR [rdx]
   1400103ac:	(bad)  
   1400103ad:	and    bl,0xba
   1400103b0:	jo     0x14001041e
   1400103b2:	sbb    edi,DWORD PTR [rsi]
   1400103b4:	add    eax,0x48053d0c
   1400103b9:	pushf  
   1400103ba:	adc    ah,ah
   1400103bc:	mov    dl,0x16
   1400103be:	mov    ch,BYTE PTR gs:[rdi+rax*4]
   1400103c2:	cdq    
   1400103c3:	sbb    BYTE PTR [rdx],bl
   1400103c5:	dec    BYTE PTR [rbp-0x4f3a65eb]
   1400103cb:	xchg   DWORD PTR [rax-0x4b9efc81],esi
   1400103d1:	call   0x11f48e394
   1400103d6:	(bad)  
   1400103d7:	adc    edx,DWORD PTR [rax+0x11bc2b6d]
   1400103dd:	sub    ecx,ebx
   1400103df:	rex.RX call 0x1135e129f
   1400103e5:	fadd   DWORD PTR [rdx]
   1400103e7:	rcl    ebx,0xae
   1400103ea:	mov    esi,0xdb6fa01f
   1400103ef:	and    edi,esp
   1400103f1:	sbb    BYTE PTR [rcx],0xab
   1400103f4:	and    BYTE PTR [rsi+0x1c422d94],ah
   1400103fa:	pop    rsi
   1400103fb:	sti    
   1400103fc:	rex sbb DWORD PTR [rdi],edi
   1400103ff:	test   BYTE PTR [rsp+rax*1],al
   140010402:	mov    gs,ebp
   140010404:	xor    bl,dh
   140010406:	xor    BYTE PTR [rbx+0x7e71eae9],r12b
   14001040d:	rex.WRB (bad) 
   140010410:	clc    
   140010411:	rex.WRX sbb r8,QWORD PTR [rax-0x38765f08]
   140010418:	adc    dh,BYTE PTR [rsi+0x1a]
   14001041b:	add    esi,DWORD PTR [rcx+0x3f]
   14001041e:	int3   
   14001041f:	cmp    eax,DWORD PTR [rax]
   140010421:	xchg   BYTE PTR [rbx],bl
   140010423:	and    DWORD PTR [rcx-0x62],0xffffffc2
   140010427:	jle    0x140010436
   140010429:	ret    0xedc8
   14001042c:	rex.WXB xlat BYTE PTR ds:[rbx]
   14001042e:	scas   eax,DWORD PTR es:[rdi]
   14001042f:	cmp    DWORD PTR [rbx-0x29],ecx
   140010432:	scas   eax,DWORD PTR es:[rdi]
   140010433:	xor    eax,0xe009bc00
   140010438:	or     ebx,edx
   14001043a:	xor    al,0xd5
   14001043c:	jae    0x1400103cd
   14001043e:	cmp    al,0x3a
   140010440:	jle    0x14001043e
   140010442:	(bad)  
   140010443:	jmp    0x1098af611
   140010448:	stc    
   140010449:	rex.X mov cl,0x3c
   14001044c:	out    dx,eax
   14001044d:	and    esi,DWORD PTR [rip+0x729d76d3]        # 0x1b29e7b26
   140010453:	rex.WXB push r10
   140010455:	xor    al,BYTE PTR [rax+rdx*1+0x23028aa8]
   14001045c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001045d:	rex.RXB (bad) 
   14001045f:	and    eax,ebp
   140010461:	adc    eax,0x6d9e5485
   140010466:	mov    BYTE PTR [rdx-0x70],dl
   140010469:	ret    0x6043
   14001046c:	and    ebx,eax
   14001046e:	(bad)  
   14001046f:	adc    al,0xa5
   140010471:	cwde   
   140010472:	and    BYTE PTR [rdx+0x39cad14],dh
   140010478:	(bad)  
   140010479:	xor    eax,DWORD PTR [rsi-0x57]
   14001047c:	or     eax,0xb2103109
   140010481:	in     al,dx
   140010482:	mov    BYTE PTR [rax+rbx*4],dl
   140010485:	fldcw  WORD PTR [r10-0x3e]
   140010489:	adc    eax,0x421ee295
   14001048e:	enter  0xe795,0x59
   140010492:	mov    DWORD PTR [rsi+rax*8-0x3e],ebx
   140010496:	and    ecx,DWORD PTR [rdi]
   140010498:	popf   
   140010499:	rex.XB loopne 0x1400104a3
   14001049c:	jo     0x1400104fb
   14001049e:	(bad)  
   14001049f:	lea    edx,[rsi+0xb]
   1400104a2:	cmc    
   1400104a3:	jp     0x1400104b8
   1400104a5:	scas   al,BYTE PTR es:[rdi]
   1400104a6:	jmp    0x14001050a
   1400104a8:	movsxd ebp,DWORD PTR [rbx+0x46958c86]
   1400104ae:	mov    ebp,0xf9f226f6
   1400104b3:	sub    al,0x96
   1400104b5:	outs   dx,BYTE PTR ds:[rsi]
   1400104b6:	fld    QWORD PTR [rsi-0x454f5b97]
   1400104bc:	mov    dh,0xce
   1400104be:	jmp    0x1400104bf
   1400104c0:	sub    DWORD PTR [rdx],ecx
   1400104c2:	(bad)
   1400104c5:	(bad)  [rdx+rcx*2]
   1400104c8:	jrcxz  0x14001052d
   1400104ca:	js     0x1400104c1
   1400104cc:	xchg   ebp,eax
   1400104cd:	xlat   BYTE PTR ds:[rbx]
   1400104ce:	xor    BYTE PTR [rip+0x4f7e1131],dh        # 0x18f7f1605
   1400104d4:	or     BYTE PTR [rsi-0x64fea87a],dl
   1400104da:	mov    DWORD PTR [rcx-0x68],esp
   1400104dd:	adc    eax,DWORD PTR [rdi+rdx*4-0x79]
   1400104e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400104e2:	stos   BYTE PTR es:[rdi],al
   1400104e3:	sub    BYTE PTR [rsi],dl
   1400104e5:	or     ch,BYTE PTR [rax]
   1400104e7:	in     al,0xf3
   1400104e9:	call   0x115a97fe4
   1400104ee:	(bad)  
   1400104ef:	pop    rax
   1400104f0:	(bad)  
   1400104f2:	rex.R fimul DWORD PTR [rbx+riz*4-0x70]
   1400104f7:	retf   
   1400104f8:	rex.X (bad) 
   1400104fa:	xor    eax,0xfc09f10
   1400104ff:	js     0x140010508
   140010501:	sub    edx,eax
   140010503:	ds pop rax
   140010505:	shl    DWORD PTR [rsp+riz*4],cl
   140010508:	shr    DWORD PTR [rcx-0x52],cl
   14001050b:	rex.XB adc DWORD PTR [r9],eax
   14001050e:	sbb    BYTE PTR [rsi+0x6cd9a017],0x61
   140010515:	mov    ebx,0x11a1dbe
   14001051a:	sbb    bl,bl
   14001051c:	(bad)  
   14001051d:	ror    DWORD PTR [rdx-0x74],0xa7
   140010521:	and    eax,0xf0648d09
   140010526:	and    eax,0xf88b6799
   14001052b:	gs enter 0x4988,0x4
   140010530:	xchg   esp,eax
   140010531:	and    QWORD PTR [rcx],rsp
   140010534:	test   al,0x2f
   140010536:	rex.RXB
   140010537:	rex.RB
   140010538:	rex.WX sub QWORD PTR [rbp+0x34d2a675],rbx
   14001053f:	xchg   ebp,eax
   140010540:	jae    0x14001054d
   140010542:	in     al,dx
   140010543:	xor    BYTE PTR [rax+riz*4],bh
   140010546:	xchg   esp,eax
   140010547:	add    ah,BYTE PTR [rcx-0x38]
   14001054a:	(bad)  
   14001054b:	xor    DWORD PTR [rdi+0x1a10020],ecx
   140010551:	add    ch,BYTE PTR [rdi]
   140010553:	add    bh,0x43
   140010556:	(bad)  
   140010557:	mov    dh,0xf
   140010559:	(bad)  
   14001055a:	movabs ds:0x74ef80182de0ce12,al
   140010563:	or     BYTE PTR [rax+0x542a31df],dh
   140010569:	adc    bh,dh
   14001056b:	icebp  
   14001056c:	mov    ebx,0xc13b83f0
   140010572:	adc    DWORD PTR [rsi-0x3d],esi
   140010575:	adc    eax,DWORD PTR [rsi+0x19]
   140010578:	mov    DWORD PTR [rcx-0x61],esp
   14001057b:	and    DWORD PTR [rdi-0x10add9d9],edx
   140010581:	jp     0x140010567
   140010583:	ror    DWORD PTR [rcx-0x59b8bc3b],1
   140010589:	retf   0x9313
   14001058c:	jae    0x140010587
   14001058e:	pop    rsp
   14001058f:	jno    0x1400105d2
   140010591:	push   rsi
   140010592:	hlt    
   140010593:	sbb    DWORD PTR [rdx],eax
   140010595:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010596:	sub    BYTE PTR [rcx+rdx*1+0x3a],cl
   14001059b:	cwde   
   14001059c:	(bad)  
   14001059d:	movabs ds:0x1ae949a246695a98,eax
   1400105a6:	push   rsp
   1400105a7:	rex.WRB add r14,0x4d806891
   1400105ae:	jo     0x1400105f5
   1400105b0:	(bad)  
   1400105b1:	and    al,0x97
   1400105b3:	cmp    BYTE PTR [rbp+0x79],dl
   1400105b6:	fadd   DWORD PTR [rcx]
   1400105b8:	or     bh,bh
   1400105ba:	xchg   edi,eax
   1400105bb:	xchg   edx,eax
   1400105bc:	pushf  
   1400105bd:	jp     0x140010543
   1400105bf:	adc    ebx,DWORD PTR [rax+rdx*4+0x64]
   1400105c3:	(bad)  
   1400105c4:	rex.RB in eax,dx
   1400105c6:	(bad)  
   1400105c7:	adc    al,0xa0
   1400105c9:	xchg   ecx,eax
   1400105ca:	(bad)  
   1400105cb:	rex sub ebp,eax
   1400105ce:	ins    BYTE PTR es:[rdi],dx
   1400105cf:	jne    0x1400105e3
   1400105d1:	push   rbx
   1400105d2:	xchg   ebx,eax
   1400105d3:	adc    esi,DWORD PTR [rax+0x5d]
   1400105d6:	(bad)  
   1400105d7:	mov    dh,0x6d
   1400105d9:	rex.XB xchg r14d,eax
   1400105db:	in     eax,0x90
   1400105dd:	movabs al,ds:0x13123c4e354f0424
   1400105e6:	fprem1 
   1400105e8:	sbb    cl,al
   1400105ea:	in     eax,0xd6
   1400105ec:	retf   0x342a
   1400105ef:	rex.RB (bad) 
   1400105f1:	cli    
   1400105f2:	out    0x76,al
   1400105f4:	pop    rax
   1400105f5:	xchg   esi,eax
   1400105f6:	add    QWORD PTR [r15+r9*4+0x3a6ba197],rcx
   1400105fe:	shl    BYTE PTR [rsi+0xf216281],cl
   140010604:	retf   
   140010605:	mov    dl,0x76
   140010607:	sub    cl,bh
   140010609:	mov    BYTE PTR [rcx],cl
   14001060b:	(bad)  
   14001060c:	jle    0x140010622
   14001060e:	retf   
   14001060f:	jbe    0x140010599
   140010611:	addr32 mov ds:0x2528790,eax
   140010617:	rex.RB push r9
   140010619:	and    DWORD PTR [rbx+0x32],ecx
   14001061c:	mov    edx,0xb6362edd
   140010621:	mov    dh,0xe0
   140010623:	cmp    BYTE PTR [rsi],cl
   140010625:	or     al,BYTE PTR [rbp-0x7a69cdc4]
   14001062b:	xor    BYTE PTR [rax-0x37],0x7a
   14001062f:	(bad)  
   140010630:	and    bl,0xd8
   140010633:	xor    BYTE PTR [rbp+0x13],cl
   140010636:	or     cl,BYTE PTR [rdi-0x53]
   140010639:	sbb    DWORD PTR [rsi+0xa],esp
   14001063c:	stos   BYTE PTR es:[rdi],al
   14001063d:	stos   BYTE PTR es:[rdi],al
   14001063e:	xor    edx,0xa8aa80ec
   140010644:	test   al,0x37
   140010646:	sbb    ebx,DWORD PTR [rax+0x59]
   140010649:	pop    rbp
   14001064a:	xchg   edx,eax
   14001064c:	sbb    edi,DWORD PTR [rbp-0x63960b76]
   140010652:	(bad)
   140010655:	adc    eax,0x51762edc
   14001065a:	test   eax,0xd261d70c
   14001065f:	jbe    0x140010663
   140010661:	in     al,0x65
   140010663:	push   rbp
   140010664:	xchg   edx,eax
   140010665:	(bad)  
   140010666:	(bad)  
   140010667:	sbb    eax,0xf38b33a7
   14001066c:	or     DWORD PTR [rax-0x4f973575],eax
   140010672:	ins    DWORD PTR es:[rdi],dx
   140010673:	fwait
   140010674:	idiv   DWORD PTR [rcx]
   140010676:	loopne 0x140010657
   140010678:	adc    DWORD PTR [rax+0x43651f89],ecx
   14001067e:	and    BYTE PTR [rcx],dh
   140010680:	and    edi,DWORD PTR [rax-0x13]
   140010683:	cli    
   140010684:	or     eax,0x3cfb79f4
   140010689:	rex.W adc bpl,BYTE PTR [rax]
   14001068c:	lock rex.WRXB jle 0x14001068a
   140010690:	(bad)  
   140010691:	jle    0x140010687
   140010693:	inc    esi
   140010695:	pop    rbp
   140010696:	mov    ?,WORD PTR [rdi+0x3920062e]
   14001069c:	xchg   BYTE PTR [rcx],bl
   14001069e:	and    esp,0x5bdba8fd
   1400106a4:	xor    eax,0x81197b08
   1400106a9:	clc    
   1400106aa:	dec    DWORD PTR [rcx+0x4c]
   1400106ad:	rex.X
   1400106ae:	ds jb  0x14001069d
   1400106b1:	js     0x1400106a9
   1400106b3:	call   0x187e49a81
   1400106b8:	mov    ds,WORD PTR [rdi-0x6a71d564]
   1400106be:	data16 lods al,BYTE PTR ds:[rsi]
   1400106c0:	je     0x140010730
   1400106c2:	pop    rdx
   1400106c3:	push   rdx
   1400106c4:	hlt    
   1400106c5:	sub    ah,BYTE PTR [rbp+0x34a02972]
   1400106cb:	sub    eax,0x91a60e32
   1400106d0:	(bad)  
   1400106d1:	xchg   ebp,eax
   1400106d2:	data16 mov WORD PTR [rdx],?
   1400106d5:	ror    DWORD PTR [rax-0x3f],cl
   1400106d8:	xor    al,0x53
   1400106da:	rex.W jno 0x14001069d
   1400106dd:	push   rcx
   1400106de:	push   rcx
   1400106df:	xchg   esp,eax
   1400106e0:	test   al,0xe4
   1400106e2:	(bad)  
   1400106e3:	push   rcx
   1400106e4:	or     BYTE PTR [rcx],al
   1400106e6:	or     al,0xa6
   1400106e8:	retf   
   1400106e9:	test   BYTE PTR [rsi+r15*8],dil
   1400106ed:	pushf  
   1400106ee:	mov    eax,0x43a162c8
   1400106f3:	call   0x1639fcdc2
   1400106f8:	xchg   esp,eax
   1400106f9:	(bad)  
   1400106fa:	push   0xffffffffffffffbc
   1400106fc:	test   BYTE PTR [rcx-0x38e3cd0f],ch
   140010702:	fbstp  TBYTE PTR [r9-0x3e]
   140010706:	(bad)  
   140010707:	(bad)  
   140010708:	jnp    0x140010769
   14001070a:	adc    BYTE PTR [rsi-0x663e989a],dh
   140010710:	adc    al,0x7a
   140010712:	xor    DWORD PTR [rdx+0x2a5ca1aa],ebp
   140010718:	add    DWORD PTR [rax],eax
   14001071a:	cli    
   14001071b:	mov    esp,0x76d6d76d
   140010720:	or     eax,0xda1ab5db
   140010725:	popf   
   140010726:	ss mov dh,0xb6
   140010729:	push   0x30
   14001072b:	shl    DWORD PTR [rsi],cl
   14001072d:	out    dx,al
   14001072e:	cmp    DWORD PTR [rcx+0x2],edi
   140010731:	rcl    ebp,cl
   140010733:	sub    ah,BYTE PTR [rdi]
   140010735:	mov    esp,0xf866f044
   14001073a:	cmp    eax,0x84e46452
   14001073f:	adc    DWORD PTR [rax],edx
   140010741:	xor    ebx,edi
   140010743:	sar    BYTE PTR [rsi-0x56b4f72d],0x71
   14001074a:	vandnps xmm12,xmm3,XMMWORD PTR [rcx+0x65]
   14001074f:	fldcw  WORD PTR [rdx-0x50a15e56]
   140010755:	push   r13
   140010757:	xor    eax,0x6c859658
   14001075c:	(bad)  
   14001075d:	rex.X mov ebp,0x5785c2de
   140010763:	pop    rdi
   140010764:	rex.RXB movabs ds:0xc4fa71476389c751,eax
   14001076e:	adc    DWORD PTR [rax-0x28093966],ebp
   140010774:	jbe    0x1400107e6
   140010776:	in     eax,0xca
   140010778:	sbb    esi,eax
   14001077a:	mov    DWORD PTR [rdi+0x32cb366c],ecx
   140010780:	cmp    al,0x4
   140010782:	and    DWORD PTR [rbp-0x28fdaf68],esi
   140010788:	jno    0x1400107cd
   14001078a:	mov    ecx,0x14cc7138
   14001078f:	mov    DWORD PTR [rdi],edx
   140010791:	cmp    ebp,DWORD PTR [rcx+0x34b0242a]
   140010797:	xor    ah,bl
   140010799:	sbb    cl,al
   14001079b:	add    edi,DWORD PTR [rax]
   14001079d:	iret   
   14001079e:	and    BYTE PTR [rbp-0x64],cl
   1400107a1:	in     eax,dx
   1400107a2:	mov    ebx,0xf6e8aaaa
   1400107a7:	sti    
   1400107a8:	mov    al,0xfb
   1400107aa:	jge    0x14001072c
   1400107ac:	rex.W
   1400107ad:	lock rex.W add al,0x77
   1400107b2:	mov    ecx,0x7788e31
   1400107b7:	add    r12b,bl
   1400107ba:	mov    edx,0xeb8e0b75
   1400107bf:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400107c1:	addr32 add esp,edi
   1400107c4:	loop   0x1400107a5
   1400107c6:	sti    
   1400107c7:	mov    DWORD PTR [rdi],ebx
   1400107c9:	std    
   1400107ca:	and    eax,0xabf8e5dc
   1400107cf:	adc    al,0x2
   1400107d1:	fmul   st(1),st
   1400107d3:	movabs al,ds:0x841876f872f8fbb1
   1400107dc:	mov    ebp,0x26ddc5c0
   1400107e1:	(bad)  
   1400107e2:	pop    rsi
   1400107e3:	pop    rsi
   1400107e4:	xor    DWORD PTR [rdx-0x1b],0xcafb45d2
   1400107eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400107ec:	mov    esi,DWORD PTR [rip+0xffffffffc45753e0]        # 0x104585bd2
   1400107f2:	test   esp,0x275a2c2f
   1400107f8:	out    dx,al
   1400107f9:	mov    ecx,0x89d8fc67
   1400107fe:	push   rbx
   1400107ff:	xchg   ebp,eax
   140010800:	mov    cl,0x52
   140010802:	jns    0x14001083e
   140010804:	gs pop rax
   140010806:	xor    edi,DWORD PTR [rsi-0x458b5565]
   14001080c:	ficomp DWORD PTR [rax]
   14001080e:	test   DWORD PTR [rbp+rax*1+0x1],esp
   140010812:	xchg   ecx,eax
   140010813:	xor    eax,0xd291854d
   140010818:	(bad)  
   140010819:	cdq    
   14001081a:	(bad)  
   14001081b:	mov    dl,0x99
   14001081d:	xor    al,0x32
   14001081f:	push   rsi
   140010820:	sbb    ah,BYTE PTR [rsi+0x33a18299]
   140010826:	(bad)  
   140010827:	mov    ebp,0xd923a612
   14001082c:	iret   
   14001082d:	rex.WRB xchg r14,rax
   14001082f:	int    0xa
   140010831:	mov    WORD PTR [rax-0x3c],es
   140010834:	xchg   edi,eax
   140010835:	mov    dl,0x14
   140010837:	test   DWORD PTR [rip+0x425442ec],eax        # 0x182554b29
   14001083d:	hlt    
   14001083e:	pop    rbx
   14001083f:	xchg   ecx,eax
   140010840:	cmp    DWORD PTR [rbp-0x66],edx
   140010843:	and    esi,eax
   140010845:	and    al,0x62
   140010847:	sub    al,0xf3
   140010849:	sar    ebx,0x3b
   14001084c:	rex.W pushf 
   14001084e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001084f:	(bad)  
   140010850:	xor    esi,DWORD PTR [rax+0x287df7d1]
   140010856:	mov    cl,BYTE PTR [rdx]
   140010858:	ret    
   140010859:	movabs rax,ds:0x3050f31c1401ebdb
   140010863:	xor    ebx,DWORD PTR [rbp-0x3b]
   140010866:	cmp    ecx,0xa52c0059
   14001086c:	mov    eax,0x7c85b9b1
   140010871:	ds iret 
   140010873:	fdivr  st(1),st
   140010875:	pop    rax
   140010876:	jle    0x14001089b
   140010878:	int3   
   140010879:	mov    dl,0x4b
   14001087b:	icebp  
   14001087c:	rol    DWORD PTR [rdi],cl
   14001087e:	rex.W push rdx
   140010880:	cmp    al,0x77
   140010882:	(bad)  
   140010883:	lock sti 
   140010885:	mov    DWORD PTR [r14-0x68d7f530],r14d
   14001088c:	(bad)  
   14001088d:	nop
   14001088e:	mov    cl,0x2c
   140010890:	sub    al,0xdd
   140010892:	mov    esp,0x96b75b8d
   140010897:	push   rcx
   140010898:	sub    ah,ah
   14001089a:	shr    ecx,1
   14001089c:	not    BYTE PTR [rcx-0x67]
   14001089f:	retf   0xb2c0
   1400108a2:	sar    BYTE PTR [rax],cl
   1400108a4:	(bad)  
   1400108a5:	fmul   QWORD PTR [rbx-0x6207208]
   1400108ab:	push   rax
   1400108ad:	fdiv   st(1),st
   1400108af:	shr    BYTE PTR [eax-0x66ad5e91],1
   1400108b6:	rol    DWORD PTR [rdi],0xde
   1400108b9:	jmp    FWORD PTR [rsi-0x4]
   1400108bc:	ret    0xfcbf
   1400108bf:	(bad)  
   1400108c0:	cwde   
   1400108c1:	test   eax,0x5234c24e
   1400108c6:	test   al,0x56
   1400108c8:	sub    edi,DWORD PTR [rax-0xf]
   1400108cb:	ret    0x7805
   1400108ce:	scas   al,BYTE PTR es:[rdi]
   1400108cf:	or     edx,DWORD PTR [rbp-0x2d]
   1400108d2:	rex add ebx,DWORD PTR [rdx]
   1400108d5:	movabs ds:0xc194cd08aaca8aff,al
   1400108de:	nop
   1400108df:	jnp    0x140010932
   1400108e1:	imul   ecx,DWORD PTR [rcx+rbp*1+0x7c],0xffffffe2
   1400108e6:	adc    DWORD PTR [rdx],0xffffff89
   1400108e9:	sbb    DWORD PTR [rsi],ebp
   1400108eb:	cmp    edx,edx
   1400108ed:	jbe    0x1400108ef
   1400108ef:	in     eax,0xf8
   1400108f1:	mov    gs,WORD PTR [rcx*1-0xcff4b3c]
   1400108f8:	enter  0x973c,0x91
   1400108fc:	movabs al,ds:0xd0b7ec7ae181ae5c
   140010905:	sub    cl,0x57
   140010908:	push   rax
   140010909:	ret    0x9452
   14001090c:	or     DWORD PTR ds:[rax-0x40],eax
   140010910:	mov    eax,0xc97e311e
   140010915:	pop    rbx
   140010916:	(bad)  
   140010917:	ret    
   140010918:	jg     0x140010977
   14001091a:	or     eax,0xc28c7c40
   14001091f:	(bad)  
   140010920:	cmp    ch,0xe1
   140010923:	(bad)  
   140010924:	ja     0x140010991
   140010926:	adc    dh,dh
   140010928:	add    esi,DWORD PTR [rdx]
   14001092a:	out    dx,al
   14001092b:	cmc    
   14001092c:	pushf  
   14001092d:	mov    WORD PTR [rax],ds
   14001092f:	sahf   
   140010930:	lock addr32 lahf 
   140010933:	(bad)  
   140010934:	fcomp  QWORD PTR [rbx-0x2b3b049e]
   14001093a:	xchg   esp,eax
   14001093b:	jno    0x140010921
   14001093d:	fdiv   st,st(1)
   14001093f:	loop   0x140010923
   140010941:	loope  0x1400108e6
   140010943:	xchg   ebx,eax
   140010944:	mov    eax,DWORD PTR [rdi-0x3258b0f1]
   14001094a:	ins    BYTE PTR es:[rdi],dx
   14001094b:	test   edx,edi
   14001094d:	test   eax,0x2ddfbb49
   140010952:	outs   dx,DWORD PTR ds:[rsi]
   140010953:	ins    BYTE PTR es:[rdi],dx
   140010954:	xlat   BYTE PTR ds:[rbx]
   140010955:	mov    eax,DWORD PTR [rax+rdx*8-0x2fb4d36c]
   14001095c:	xor    eax,0x8533690d
   140010961:	rex.WR fiadd DWORD PTR [rsi+rsi*1+0x63]
   140010966:	and    DWORD PTR [rbp+0x18369036],ebx
   14001096c:	(bad)  
   14001096d:	and    ah,al
   14001096f:	cmp    dl,BYTE PTR [rax+rbx*4-0x57ffd908]
   140010976:	add    cl,BYTE PTR [rip+0x886918f]        # 0x148879b0b
   14001097c:	and    DWORD PTR [rax],esp
   14001097e:	jb     0x14001095c
   140010980:	jo     0x1400109f2
   140010982:	jrcxz  0x1400109a4
   140010984:	xor    al,0x10
   140010986:	cmp    BYTE PTR [rsi+0x7b80d011],al
   14001098c:	or     al,0x11
   14001098e:	and    DWORD PTR [rsi+0x18],eax
   140010991:	adc    eax,0x488a675d
   140010996:	(bad)  
   140010997:	mov    ds,WORD PTR [rdi+rax*8+0x505284cf]
   14001099e:	fisttp WORD PTR [rbx]
   1400109a0:	jne    0x1400109be
   1400109a2:	je     0x1400109f1
   1400109a4:	mov    DWORD PTR [rcx-0x5c6f2647],0x5280021f
   1400109ae:	in     al,0x5
   1400109b0:	in     al,dx
   1400109b1:	sbb    al,0xa1
   1400109b3:	(bad)  
   1400109b4:	xor    esi,DWORD PTR [rax]
   1400109b6:	stc    
   1400109b7:	add    edx,ecx
   1400109b9:	or     esi,DWORD PTR [rcx-0x471c2868]
   1400109bf:	cs je  0x140010a1f
   1400109c2:	(bad)  
   1400109c3:	shl    DWORD PTR [rbx],1
   1400109c5:	(bad)  
   1400109c6:	jno    0x1400109bb
   1400109c8:	div    BYTE PTR [rdx]
   1400109ca:	fidivr WORD PTR [rbx+rsi*8+0x1a]
   1400109ce:	es (bad) 
   1400109d0:	es xchg ecx,eax
   1400109d2:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400109d4:	jno    0x1400109d1
   1400109d6:	imul   BYTE PTR [rbp-0x4]
   1400109d9:	cli    
   1400109da:	outs   dx,DWORD PTR ds:[rsi]
   1400109db:	jle    0x1400109f1
   1400109dd:	xchg   edi,eax
   1400109de:	(bad)  
   1400109df:	pop    rbp
   1400109e0:	test   DWORD PTR [rsi+0x385d986b],esp
   1400109e6:	add    al,bh
   1400109e8:	out    dx,al
   1400109e9:	jrcxz  0x140010a5e
   1400109eb:	jg     0x1400109df
   1400109ed:	xor    eax,0xfc1d1ad4
   1400109f2:	(bad)  
   1400109f3:	jmp    rcx
   1400109f5:	xlat   BYTE PTR ds:[rbx]
   1400109f6:	push   rcx
   1400109f7:	enter  0x50e5,0xc8
   1400109fb:	out    0x60,eax
   1400109fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109fe:	or     al,0xd4
   140010a00:	(bad)  
   140010a01:	or     eax,0x10a6a754
   140010a06:	xor    ch,0xc2
   140010a09:	in     al,dx
   140010a0a:	sti    
   140010a0b:	or     al,0x6c
   140010a0d:	push   rdi
   140010a0e:	cmp    DWORD PTR [rbx+0x50],esi
   140010a11:	push   rbp
   140010a12:	xchg   esp,eax
   140010a13:	push   rax
   140010a14:	es pop rsi
   140010a16:	shl    DWORD PTR [rax+rbx*4+0x29],cl
   140010a1a:	adc    ebx,DWORD PTR [rdx+0x148241ae]
   140010a20:	(bad)  
   140010a21:	add    al,0x1
   140010a23:	ins    BYTE PTR es:[rdi],dx
   140010a24:	repnz or edi,DWORD PTR [rbx+rax*4]
   140010a28:	sbb    DWORD PTR [rdi],ebp
   140010a2a:	rol    esp,1
   140010a2c:	xchg   ebp,eax
   140010a2d:	xchg   BYTE PTR [rcx],ch
   140010a2f:	pop    rax
   140010a30:	pushfw 
   140010a32:	or     DWORD PTR [rbx+rbx*8-0x1b],ebp
   140010a36:	cdq    
   140010a37:	or     dh,bh
   140010a39:	pop    rbx
   140010a3a:	jge    0x140010a3d
   140010a3c:	(bad)  
   140010a3d:	rex.RX (bad) 
   140010a3f:	(bad)  
   140010a40:	and    al,BYTE PTR [rdi+0x21]
   140010a43:	xor    edi,DWORD PTR [rdi]
   140010a45:	(bad)  
   140010a46:	sbb    BYTE PTR [rax+0x37f1efbe],dl
   140010a4c:	rol    DWORD PTR [rax],0x24
   140010a4f:	(bad)  
   140010a50:	pop    rdi
   140010a51:	xchg   BYTE PTR [rcx-0x28],al
   140010a54:	sub    eax,0x30cbd86c
   140010a59:	in     al,dx
   140010a5a:	out    0x5e,eax
   140010a5c:	ficomp WORD PTR [rax+0x5b]
   140010a5f:	mov    bl,0x37
   140010a61:	(bad)  
   140010a62:	(bad)  
   140010a63:	pop    rdx
   140010a64:	(bad)  
   140010a66:	repz (bad) 
   140010a68:	outs   dx,BYTE PTR ds:[rsi]
   140010a69:	add    DWORD PTR [rax+0x11],edi
   140010a6c:	sub    BYTE PTR [rbx+rbp*8-0x7874d46],0x48
   140010a74:	out    0xf0,al
   140010a76:	mov    cl,0x63
   140010a78:	jrcxz  0x140010a2d
   140010a7a:	repz (bad) 
   140010a7c:	sub    dl,BYTE PTR [rbx-0x6b]
   140010a7f:	cdq    
   140010a80:	rex.WB push 0x66
   140010a83:	sub    ch,BYTE PTR [rsi+0xdeb95ad]
   140010a89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a8a:	add    al,0x49
   140010a8c:	(bad)  
   140010a8d:	add    eax,0x9554d101
   140010a92:	or     DWORD PTR [rbp+0x2e44da56],0x36958693
   140010a9c:	xchg   ecx,eax
   140010a9d:	int    0xa4
   140010a9f:	(bad)  
   140010aa0:	(bad)  
   140010aa1:	sbb    dl,BYTE PTR [rdx+0x29]
   140010aa4:	sub    eax,0x77105fec
   140010aa9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010aaa:	sbb    DWORD PTR [rdx],ecx
   140010aac:	sbb    eax,0x3311c0e5
   140010ab1:	add    al,0x44
   140010ab3:	je     0x140010b23
   140010ab5:	add    al,BYTE PTR [rbx]
   140010ab7:	or     eax,DWORD PTR [rip+0x6d890d52]        # 0x1ad8a180f
   140010abd:	or     eax,0xaeba0082
   140010ac2:	ret    
   140010ac3:	mov    dl,0xac
   140010ac5:	lock mov al,0xc7
   140010ac8:	stc    
   140010ac9:	hlt    
   140010aca:	movabs ds:0x1c9b05ae308c426e,al
   140010ad3:	and    dh,BYTE PTR [rip+0xffffffffd1faad1a]        # 0x111fbb7f3
   140010ad9:	jmp    0x1b12d8cf0
   140010ade:	ret    
   140010adf:	adc    al,0xcf
   140010ae1:	sbb    BYTE PTR [rax],cl
   140010ae3:	rex.XB adc BYTE PTR [r9],dl
   140010ae6:	jae    0x140010b4c
   140010ae8:	rex.WRX xchg BYTE PTR [rdx+0xe17071],r10b
   140010aef:	(bad)  
   140010af0:	lea    edx,[rsi]
   140010af2:	(bad)  
   140010af3:	jo     0x140010a9e
   140010af5:	js     0x140010ae1
   140010af7:	cld    
   140010af8:	rex.WXB push 0xffffffffd2c514d9
   140010afe:	sbb    dh,ah
   140010b00:	(bad)  
   140010b02:	test   cl,bh
   140010b04:	add    ecx,DWORD PTR [rbx-0x701388]
   140010b0a:	adc    cl,bl
   140010b0c:	ret    0x5e18
   140010b0f:	jl     0x140010af6
   140010b11:	adc    bh,BYTE PTR [rsi-0x15]
   140010b14:	(bad)  
   140010b15:	inc    BYTE PTR [rcx]
   140010b17:	(bad)  
   140010b18:	mov    bh,0x9f
   140010b1a:	std    
   140010b1b:	out    dx,eax
   140010b1c:	shr    ecx,1
   140010b1e:	cmc    
   140010b1f:	nop
   140010b20:	leave  
   140010b21:	data16 jno 0x140010b17
   140010b24:	(bad)  
   140010b25:	ins    DWORD PTR es:[rdi],dx
   140010b26:	rex.WR xchg rsp,rax
   140010b28:	retf   
   140010b29:	int3   
   140010b2a:	test   DWORD PTR [rdi-0x8],edx
   140010b2d:	outs   dx,DWORD PTR ds:[rsi]
   140010b2e:	adc    DWORD PTR [rsi],eax
   140010b30:	rex.WRXB adc BYTE PTR [r13-0x1fce59c4],r13b
   140010b37:	jp     0x140010b57
   140010b39:	cli    
   140010b3a:	jge    0x140010b12
   140010b3c:	jp     0x140010b7c
   140010b3e:	ins    DWORD PTR es:[rdi],dx
   140010b3f:	pop    rcx
   140010b40:	mov    al,0xd2
   140010b42:	imul   esp,DWORD PTR [rdx+rsi*1+0xa],0xea1dbeec
   140010b4a:	rex.RX (bad) 
   140010b4c:	sbb    BYTE PTR [rcx+rsi*4],bl
   140010b4f:	cli    
   140010b50:	(bad)  
   140010b51:	jbe    0x140010bbf
   140010b53:	or     DWORD PTR [rip+0x21055914],eax        # 0x16106646d
   140010b59:	std    
   140010b5a:	call   0x12a9bd317
   140010b5f:	sub    cl,BYTE PTR [rdx-0x670a28fe]
   140010b65:	ror    BYTE PTR [rip+0xffffffff9b4104db],0x7e        # 0xdb421047
   140010b6c:	sub    esp,ebx
   140010b6e:	outs   dx,DWORD PTR ds:[rsi]
   140010b6f:	movabs ds:0xfee208353b8e4801,al
   140010b78:	outs   dx,BYTE PTR ds:[rsi]
   140010b79:	jo     0x140010aff
   140010b7b:	clc    
   140010b7c:	mov    dh,0x3b
   140010b7e:	icebp  
   140010b7f:	(bad)  
   140010b80:	rex.RX sbb DWORD PTR [rax-0x1451387f],r10d
   140010b87:	retf   0xbe97
   140010b8a:	std    
   140010b8b:	pop    rdx
   140010b8c:	call   rdx
   140010b8e:	mov    bh,0x5f
   140010b90:	fild   DWORD PTR [rsi]
   140010b92:	jo     0x140010bd9
   140010b94:	jl     0x140010bf5
   140010b96:	es fwait
   140010b98:	(bad)  
   140010b99:	(bad)  
   140010b9a:	(bad)  
   140010b9b:	ds xchg edx,eax
   140010b9d:	pop    rcx
   140010b9e:	cmp    BYTE PTR [rax+rbp*2-0x4],dh
   140010ba2:	rcl    BYTE PTR [rcx-0x72d2a1d],1
   140010ba8:	in     al,0xb8
   140010baa:	sub    ah,BYTE PTR [rbp-0x56]
   140010bad:	rex.WRB iretq 
   140010baf:	sbb    eax,0x635a35af
   140010bb4:	mov    esi,0xa528641f
   140010bb9:	stos   BYTE PTR es:[rdi],al
   140010bba:	xor    BYTE PTR [rcx+rbp*2],cl
   140010bbd:	rol    DWORD PTR [rax+0x26],cl
   140010bc0:	ins    DWORD PTR es:[rdi],dx
   140010bc1:	and    bl,BYTE PTR [rdi-0x67366f4b]
   140010bc7:	xor    BYTE PTR [rbx+0x29],dl
   140010bca:	xchg   esi,eax
   140010bcb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010bcc:	in     al,0x69
   140010bce:	stos   DWORD PTR es:[rdi],eax
   140010bcf:	lock lock lock leave 
   140010bd3:	(bad)  
   140010bd4:	nop
   140010bd5:	test   al,0xed
   140010bd7:	xchg   edi,eax
   140010bd8:	xor    BYTE PTR [rdx],dl
   140010bda:	add    ch,BYTE PTR [rax-0x4b228bed]
   140010be0:	xchg   ebp,eax
   140010be1:	loope  0x140010c03
   140010be3:	pop    rax
   140010be4:	je     0x140010bfe
   140010be6:	rex.RB retf 0x7932
   140010bea:	xchg   ebp,eax
   140010beb:	mov    dl,0xb2
   140010bed:	pop    rsi
   140010bee:	and    DWORD PTR ss:[rax],ebx
   140010bf1:	imul   ecx,DWORD PTR [rdi-0x72],0x4c010c62
   140010bf8:	rex.WX and al,BYTE PTR [rip+0xffffffff969ec529]        # 0xd69fd128
   140010bff:	cmp    DWORD PTR [rdx],esi
   140010c01:	(bad)  
   140010c02:	test   BYTE PTR [rcx+rbp*1+0x41],al
   140010c06:	(bad)  
   140010c07:	xchg   esi,eax
   140010c08:	adc    BYTE PTR [rcx+0x7],ah
   140010c0b:	icebp  
   140010c0c:	mov    WORD PTR [rax+0x3d616bae],cs
   140010c12:	(bad)  
   140010c13:	cmc    
   140010c14:	fucomi st,st(3)
   140010c16:	sub    BYTE PTR [rsi+0x61b60a7],dl
   140010c1c:	pop    rsp
   140010c1d:	mov    DWORD PTR [rbp-0x41],0x52d140ef
   140010c24:	movabs al,ds:0x79f4febe12a5f200
   140010c2d:	cld    
   140010c2e:	fmul   DWORD PTR [rdi]
   140010c30:	jg     0x140010c71
   140010c32:	push   rdx
   140010c33:	mov    dl,0x84
   140010c35:	xchg   esp,eax
   140010c36:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010c37:	movabs eax,ds:0x79500436e6a3f76f
   140010c40:	(bad)
   140010c43:	add    al,0x8a
   140010c45:	loopne 0x140010cb9
   140010c47:	sub    BYTE PTR [rcx],dl
   140010c49:	stc    
   140010c4a:	or     edx,DWORD PTR [rdx]
   140010c4c:	mov    ebx,0x1eddba04
   140010c51:	sbb    al,0xdb
   140010c53:	rex.B
   140010c54:	movsxd esp,DWORD PTR es:[rdx]
   140010c57:	xchg   edi,eax
   140010c58:	retf   
   140010c59:	ret    
   140010c5a:	mov    dh,0x6d
   140010c5c:	cmp    BYTE PTR [rsi+0x3b038613],ch
   140010c62:	mov    ebp,0x9038ce2f
   140010c67:	and    al,0xf8
   140010c69:	adc    BYTE PTR [r14+0x16],spl
   140010c6d:	fs pop rcx
   140010c6f:	test   ebx,ebp
   140010c71:	not    cl
   140010c73:	out    dx,eax
   140010c74:	fisttp DWORD PTR [rdx+rbx*1-0x43]
   140010c78:	fld    DWORD PTR [rax+0x36]
   140010c7b:	xchg   edi,eax
   140010c7c:	and    DWORD PTR [rsi-0x1c30de95],0xffffffad
   140010c83:	(bad)  
   140010c84:	js     0x140010c85
   140010c86:	and    eax,0x78e48018
   140010c8b:	sub    eax,DWORD PTR [rsi]
   140010c8d:	rex.B cmp al,0x8e
   140010c90:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010c91:	sbb    eax,0x692106e3
   140010c96:	adc    al,0x92
   140010c98:	dec    DWORD PTR [rdi+0x797b0a32]
   140010c9e:	adc    BYTE PTR [rbx-0x6ffcd022],ah
   140010ca4:	cmp    ebp,ebp
   140010ca6:	mov    dh,0xfc
   140010ca8:	repnz mov ebp,DWORD PTR [rdi]
   140010cab:	je     0x140010d0c
   140010cad:	jle    0x140010ca0
   140010caf:	test   DWORD PTR [rip+0xfffffffff6c51700],ecx        # 0x136c623b5
   140010cb5:	icebp  
   140010cb6:	leave  
   140010cb7:	leave  
   140010cb8:	(bad)  
   140010cb9:	rcl    DWORD PTR [rbx],1
   140010cbb:	(bad)  
   140010cbc:	jae    0x140010d31
   140010cbe:	(bad)  
   140010cbf:	(bad)  
   140010cc0:	retf   
   140010cc1:	mov    bl,0xf3
   140010cc3:	or     edx,DWORD PTR [rbx+0x13]
   140010cc6:	xchg   ebx,eax
   140010cc7:	xchg   ebp,eax
   140010cc8:	rex.WB iretq 
   140010cca:	icebp  
   140010ccb:	(bad)  
   140010ccc:	sbb    ecx,DWORD PTR [rsi-0x41]
   140010ccf:	mov    esp,0x2146b5d
   140010cd4:	rex.X
   140010cd5:	repz add BYTE PTR [rcx+rax*8],dh
   140010cd9:	(bad)  
   140010cdb:	rol    BYTE PTR [rsi],cl
   140010cdd:	repnz fnstenv [rdi+rdx*2]
   140010ce1:	(bad)  
   140010ce2:	xor    dl,BYTE PTR [rax+0x2d]
   140010ce5:	in     eax,0x79
   140010ce7:	mov    ch,0x1c
   140010ce9:	ja     0x140010d2c
   140010ceb:	rex.XB cli 
   140010ced:	sub    eax,0x6c1c783f
   140010cf2:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140010cf4:	shl    eax,cl
   140010cf6:	push   rbp
   140010cf7:	mov    eax,0xbe30ea61
   140010cfc:	and    al,bh
   140010cfe:	xchg   DWORD PTR [rdx+0x3b242608],esp
   140010d04:	in     al,dx
   140010d05:	lods   al,BYTE PTR ds:[rsi]
   140010d06:	out    0x63,eax
   140010d08:	(bad)  
   140010d09:	mov    fs,ebx
   140010d0b:	jo     0x140010d5e
   140010d0d:	adc    eax,0xf8559640
   140010d12:	add    edi,0x814534c0
   140010d18:	sahf   
   140010d19:	rol    bl,cl
   140010d1b:	ins    BYTE PTR es:[rdi],dx
   140010d1c:	or     DWORD PTR [rax],0x69
   140010d1f:	cld    
   140010d20:	and    BYTE PTR [rax],al
   140010d22:	or     eax,0xe92e2408
   140010d27:	and    al,0x42
   140010d29:	(bad)
   140010d2e:	jp     0x140010d94
   140010d30:	xchg   BYTE PTR [r15],r11b
   140010d33:	add    al,0x4c
   140010d35:	(bad)  
   140010d36:	rex.WR (bad) 
   140010d38:	push   rcx
   140010d39:	sub    dl,BYTE PTR [rsi]
   140010d3b:	rcl    BYTE PTR [rdx+0x14],1
   140010d3e:	rex.W pop rsi
   140010d40:	(bad)  
   140010d41:	(bad)  
   140010d43:	enter  0x5c69,0x7d
   140010d47:	std    
   140010d48:	and    eax,0x286d5b34
   140010d4d:	mov    cl,BYTE PTR [rsi+rcx*2-0x1a723fc1]
   140010d54:	sub    eax,0x671b9d1c
   140010d59:	in     al,dx
   140010d5a:	rex.RXB fild DWORD PTR [r9-0x7f8bd7b1]
   140010d61:	mov    cl,0x11
   140010d63:	gs jbe 0x140010d0b
   140010d66:	enter  0x1cb2,0x86
   140010d6a:	adc    QWORD PTR ds:[rdx-0x3e6ac3cd],r11
   140010d72:	rex.X mov dl,0x6e
   140010d75:	mov    bh,0xf
   140010d77:	fisttp WORD PTR [rdi]
   140010d79:	xor    BYTE PTR [rsi],dh
   140010d7b:	push   rsi
   140010d7c:	add    al,0x21
   140010d7e:	rex.B test al,0x3e
   140010d81:	popf   
   140010d82:	in     al,dx
   140010d83:	adc    ecx,eax
   140010d85:	js     0x140010d8c
   140010d87:	xchg   ecx,eax
   140010d88:	(bad)  
   140010d89:	test   DWORD PTR [rbx+rcx*2],ebp
   140010d8c:	jo     0x140010daa
   140010d8e:	sbb    ebp,DWORD PTR [rbx]
   140010d90:	imul   ebp,ebx,0xffffffe8
   140010d93:	jne    0x140010e10
   140010d95:	and    BYTE PTR [rcx-0x66aabaf1],al
   140010d9b:	xchg   DWORD PTR [rbp+0x11],eax
   140010d9e:	jp     0x140010e01
   140010da0:	nop
   140010da1:	cmp    DWORD PTR [rbx-0xe],ecx
   140010da4:	sub    eax,0xd12ff8c
   140010da9:	rex jb 0x140010d88
   140010dac:	lea    eax,[rcx+0x20]
   140010daf:	mov    cl,0xff
   140010db1:	rex.RXB jns 0x140010dbb
   140010db4:	movabs ds:0x88197b1084fd853c,eax
   140010dbd:	xchg   ecx,eax
   140010dbe:	(bad)  
   140010dbf:	and    BYTE PTR [rsi-0x25],bh
   140010dc2:	pop    rsp
   140010dc3:	pop    rdi
   140010dc4:	mov    bh,0x37
   140010dc6:	xlat   BYTE PTR ds:[rbx]
   140010dc7:	xlat   BYTE PTR ds:[rbx]
   140010dc8:	pop    rbx
   140010dc9:	shl    bl,0x2b
   140010dcc:	add    BYTE PTR [rsi+0x13],bl
   140010dcf:	fistp  WORD PTR [rbp+0x2a]
   140010dd2:	xchg   ebp,eax
   140010dd3:	push   rdx
   140010dd4:	(bad)  
   140010dd5:	(bad)  
   140010dd6:	sbb    eax,0x3c581cce
   140010ddb:	cmp    BYTE PTR [rsi],dh
   140010ddd:	pop    rcx
   140010dde:	cdq    
   140010ddf:	sahf   
   140010de0:	lods   al,BYTE PTR ds:[rsi]
   140010de1:	rex.WRX iretq 
   140010de3:	rex.WRX leave 
   140010de5:	push   rsi
   140010de6:	outs   dx,BYTE PTR ds:[rsi]
   140010de7:	mov    dl,0xe1
   140010de9:	test   bh,0xb7
   140010dec:	push   0xfffffffffffffff5
   140010dee:	and    ah,BYTE PTR [rbp-0x97fe1ae]
   140010df4:	jge    0x140010de5
   140010df6:	cmp    ecx,DWORD PTR [rbx+0x70100d02]
   140010dfc:	movabs eax,ds:0x16596caaa9de5912
   140010e05:	stos   DWORD PTR es:[rdi],eax
   140010e06:	leave  
   140010e07:	xchg   edi,eax
   140010e08:	(bad)  
   140010e09:	xchg   DWORD PTR [rax-0x499ee979],ecx
   140010e0f:	add    bl,BYTE PTR [rax+rsi*1]
   140010e12:	in     al,0x34
   140010e14:	push   0x36fa294a
   140010e19:	xchg   ebx,eax
   140010e1a:	sbb    BYTE PTR [rdi-0x102fc893],ch
   140010e20:	not    ecx
   140010e22:	ja     0x140010e40
   140010e24:	add    BYTE PTR [rax+rdx*2],0x74
   140010e28:	sbb    eax,0xdf429686
   140010e2d:	mov    dh,0x1
   140010e2f:	mov    al,0x9c
   140010e31:	mov    ecx,0x4d306bae
   140010e36:	add    ebx,DWORD PTR [rcx+0x5cf9064c]
   140010e3c:	(bad)  
   140010e3d:	jmp    0xea9b28b6
   140010e42:	(bad)  
   140010e43:	sub    cl,BYTE PTR [rbp+rcx*8+0x2614f018]
   140010e4a:	add    BYTE PTR [rsi+0x47],dl
   140010e4d:	or     DWORD PTR [rax-0x1837a276],0x6b2b2b1
   140010e57:	push   rbp
   140010e58:	push   rbp
   140010e59:	jno    0x140010e55
   140010e5b:	call   0xfe707c82
   140010e60:	mov    cl,cl
   140010e62:	test   eax,0xf2bb5c29
   140010e67:	ins    DWORD PTR es:[rdi],dx
   140010e68:	cmp    al,0xf7
   140010e6a:	loop   0x140010ed7
   140010e6c:	xor    BYTE PTR [rbx],dh
   140010e6e:	jns    0x140010e68
   140010e70:	push   rax
   140010e71:	(bad)  
   140010e72:	ja     0x140010e4f
   140010e74:	call   0xdf0244af
   140010e79:	(bad)
   140010e7c:	pop    rsi
   140010e7d:	(bad)  
   140010e7e:	test   BYTE PTR [rax+rdx*2],al
   140010e81:	rex.WRX fisub DWORD PTR gs:[rdx-0x2666a3dc]
   140010e89:	test   DWORD PTR [rax+0x0],0xfe643ef7
   140010e90:	sbb    bh,BYTE PTR [rcx]
   140010e92:	out    0x89,al
   140010e94:	mov    al,0xf4
   140010e96:	lahf   
   140010e97:	add    al,0xd7
   140010e99:	jno    0x140010e6b
   140010e9b:	push   0x75
   140010e9d:	(bad)  
   140010e9e:	pop    rcx
   140010e9f:	imul   ebx,eax,0xe5607376
   140010ea5:	(bad)  
   140010ea6:	(bad)  
   140010ea7:	mov    ecx,0x34bdec05
   140010eac:	(bad)  
   140010ead:	(bad)  
   140010eae:	call   0xe749ea67
   140010eb3:	rex.WRB cdqe 
   140010eb5:	rex.RX (bad) 
   140010eb7:	jmp    0x1969e2930
   140010ebc:	sbb    esi,DWORD PTR [rsi+0x137231eb]
   140010ec2:	and    eax,0x18450990
   140010ec7:	fsubr  st(5),st
   140010eca:	js     0x140010e93
   140010ecc:	add    ah,ch
   140010ece:	sbb    al,0x77
   140010ed0:	jmp    0x140010ef3
   140010ed2:	mov    bl,bh
   140010ed4:	mov    ebp,0x80bd86c2
   140010ed9:	(bad)  
   140010eda:	cmp    ebx,DWORD PTR [rcx+0x4f9ea3e4]
   140010ee0:	outs   dx,BYTE PTR ds:[rsi]
   140010ee1:	(bad)  
   140010ee2:	clc    
   140010ee3:	cld    
   140010ee4:	in     eax,dx
   140010ee5:	in     eax,dx
   140010ee6:	ins    DWORD PTR es:[rdi],dx
   140010ee7:	jnp    0x140010f64
   140010ee9:	jnp    0x140010ea6
   140010eeb:	std    
   140010eec:	ret    0x67f9
   140010eef:	xlat   BYTE PTR ds:[rbx]
   140010ef0:	add    BYTE PTR [rdx+rdx*1-0x25],bl
   140010ef4:	lods   eax,DWORD PTR ds:[rsi]
   140010ef5:	rex.WR
   140010ef6:	cmp    r15d,DWORD PTR [rsp+r14*8+0x58]
   140010efb:	jbe    0x140010ede
   140010efd:	shl    cl,1
   140010eff:	mov    cl,0xa9
   140010f01:	(bad)  
   140010f02:	int3   
   140010f03:	add    al,0xde
   140010f05:	jnp    0x140010f06
   140010f07:	fbld   TBYTE PTR [rdi+0x64445a94]
   140010f0d:	(bad)  
   140010f0e:	add    al,0xfb
   140010f10:	lea    ebx,[rdi-0x4c]
   140010f13:	cmp    ch,BYTE PTR [rdi]
   140010f15:	xchg   esp,eax
   140010f16:	mov    DWORD PTR [rbp-0x1c],eax
   140010f19:	in     al,dx
   140010f1a:	outs   dx,DWORD PTR ds:[rsi]
   140010f1b:	rex.W in al,dx
   140010f1d:	mov    DWORD PTR [rbx+rdi*4+0x25],esp
   140010f21:	mov    DWORD PTR [rcx+0x7d],ecx
   140010f24:	jne    0x140010f60
   140010f26:	sbb    eax,0xa16e6c6c
   140010f2b:	fbstp  TBYTE PTR [rdi-0x5160d167]
   140010f31:	ret    0x8b34
   140010f34:	push   rax
   140010f35:	xor    eax,0x90a90995
   140010f3a:	sbb    BYTE PTR [rax],al
   140010f3c:	sub    DWORD PTR [rax+0x7e2e5c30],ecx
   140010f42:	jnp    0x140010fbf
   140010f44:	sbb    esi,DWORD PTR [rbp-0x39a9f2a6]
   140010f4a:	rex.X jns 0x140010fb9
   140010f4d:	or     al,0xd9
   140010f4f:	mov    ebp,es
   140010f51:	test   BYTE PTR [rsp+rdx*1-0x32],cl
   140010f55:	clc    
   140010f56:	movabs ds:0x162c547b675f971,eax
   140010f5f:	xlat   BYTE PTR ds:[rbx]
   140010f60:	scas   al,BYTE PTR es:[rdi]
   140010f61:	(bad)  
   140010f62:	shl    DWORD PTR [rbx+0x3d],0xbc
   140010f66:	out    dx,eax
   140010f67:	xchg   ecx,eax
   140010f68:	jae    0x140010fe2
   140010f6a:	repnz stc 
   140010f6c:	mov    esi,DWORD PTR [rax]
   140010f6e:	rcl    BYTE PTR [rsi],cl
   140010f70:	or     al,0x2b
   140010f72:	mov    ebp,DWORD PTR [rdi]
   140010f74:	jge    0x140010f6f
   140010f76:	sub    ecx,DWORD PTR [rsp+rcx*4-0x148f0b1d]
   140010f7d:	rex.W div BYTE PTR [rbp+0x47]
   140010f81:	add    BYTE PTR [rax],al
   140010f83:	and    BYTE PTR [rax],al
   140010f85:	rex.WB
   140010f86:	rex.R
   140010f87:	push   r12
   140010f89:	out    0xd,al
   140010f8b:	cmp    al,0x78
   140010f8d:	call   FWORD PTR [rcx]
   140010f8f:	sub    al,0xce
   140010f91:	rex.WRX shl QWORD PTR [rcx+0x5c],0xac
   140010f96:	lods   eax,DWORD PTR ds:[rsi]
   140010f97:	lods   eax,DWORD PTR ds:[rsi]
   140010f98:	rex.XB (bad) 
   140010f9a:	pop    rax
   140010f9b:	cmp    eax,0x70057843
   140010fa0:	addr32 rex.RX (bad) 
   140010fa3:	jae    0x14001101c
   140010fa5:	adc    al,0x85
   140010fa7:	mov    ecx,0xb3b262fd
   140010fac:	cmp    BYTE PTR [rdi-0x70874881],bl
   140010fb2:	and    al,0xa3
   140010fb4:	xlat   BYTE PTR ds:[rbx]
   140010fb5:	jmp    0x140010f79
   140010fb7:	xor    BYTE PTR [rdx-0x64],dl
   140010fba:	pop    rbx
   140010fbb:	loopne 0x140011002
   140010fbd:	(bad)  
   140010fbe:	xchg   edi,eax
   140010fbf:	enter  0xf020,0x4b
   140010fc3:	sub    eax,0xa106acc
   140010fc8:	or     DWORD PTR [rdx],esi
   140010fca:	repnz mov ecx,0xc289243c
   140010fd0:	cmc    
   140010fd1:	cmp    eax,0x54196464
   140010fd6:	xchg   edx,eax
   140010fd7:	cmp    BYTE PTR [rax-0x38],dh
   140010fda:	rex.X and sil,al
   140010fdd:	push   rbx
   140010fde:	sbb    al,0xf4
   140010fe0:	mov    al,0xee
   140010fe2:	je     0x140010fa0
   140010fe4:	movsxd eax,DWORD PTR [rax]
   140010fe6:	neg    BYTE PTR [rsi]
   140010fe8:	sti    
   140010fe9:	xor    DWORD PTR [rax],ecx
   140010feb:	icebp  
   140010fec:	(bad)  
   140010fed:	leave  
   140010fee:	jo     0x140011011
   140010ff0:	mov    esi,0x61063f6d
   140010ff5:	mov    edi,0x189dc31e
   140010ffa:	test   BYTE PTR [rbp-0x46ffed92],bh
   140011000:	fucomi st,st(1)
   140011002:	enter  0x5e17,0x78
   140011006:	mov    esi,0xe785e173
   14001100b:	xlat   BYTE PTR ds:[rbx]
   14001100c:	add    DWORD PTR [rsi+rdi*8-0x67],ebx
   140011010:	lahf   
   140011011:	cli    
   140011012:	outs   dx,DWORD PTR ds:[rsi]
   140011013:	(bad)  
   140011014:	rex.WR sub BYTE PTR [rdx+rax*8],r13b
   140011018:	rex.WXB push 0xffffffffac829ae3
   14001101e:	mov    ebp,0x9adec197
   140011023:	add    ch,ah
   140011025:	sub    BYTE PTR [rcx+0x26046290],ah
   14001102b:	pop    rcx
   14001102c:	xchg   esi,eax
   14001102d:	add    al,BYTE PTR [r10+0x3475d595]
   140011034:	(bad)  
   140011035:	rex.WRB in al,0x73
   140011038:	cmp    DWORD PTR [rdi+riz*4+0xfa359a7],edx
   14001103f:	or     al,BYTE PTR [rax+0x62]
   140011042:	stos   BYTE PTR es:[rdi],al
   140011043:	cmp    eax,0xe7c3e79e
   140011048:	fstp   QWORD PTR [rdi+0x419651d9]
   14001104e:	(bad)  
   14001104f:	cmp    eax,0x11d52916
   140011054:	add    al,0x3e
   140011056:	jp     0x140011015
   140011058:	(bad)  
   140011059:	xchg   esi,eax
   14001105a:	mov    edx,0xac6947d
   14001105f:	sbb    BYTE PTR [rdi],ch
   140011061:	xchg   edi,eax
   140011062:	jns    0x140010feb
   140011064:	sbb    DWORD PTR es:[rdx-0x2e3717e0],esi
   14001106b:	xor    DWORD PTR [rdi],0x6363030d
   140011071:	rex.RB pop r12
   140011073:	mov    edx,0x9f4e06fa
   140011078:	cmp    al,0x8e
   14001107a:	lahf   
   14001107b:	stc    
   14001107c:	lock ffreep st(2)
   14001107f:	rex.RXB (bad) 
   140011081:	repz add al,0xf2
   140011084:	in     eax,0x2a
   140011086:	(bad)  
   140011087:	sbb    dh,BYTE PTR [rbp+0x2c]
   14001108a:	pop    rbp
   14001108b:	mov    esi,0x558dad80
   140011090:	rex.WR push rdi
   140011092:	stos   DWORD PTR es:[rdi],eax
   140011093:	clc    
   140011094:	rex.RXB jmp r8
   140011097:	addr32 mov al,ds:0x9d6a2aa9
   14001109d:	cs xchg esi,eax
   14001109f:	push   rdi
   1400110a0:	push   rdi
   1400110a1:	xor    DWORD PTR [rcx],esi
   1400110a3:	xor    DWORD PTR [rcx],eax
   1400110a5:	push   rbp
   1400110a6:	xlat   BYTE PTR ds:[rbx]
   1400110a7:	loopne 0x140011124
   1400110a9:	(bad)  
   1400110aa:	(bad)  
   1400110ab:	je     0x14001108e
   1400110ad:	mov    BYTE PTR [rbp+0x4412fdc7],0xdc
   1400110b4:	ret    
   1400110b5:	jg     0x1400110df
   1400110b7:	scas   eax,DWORD PTR es:[rdi]
   1400110b8:	sub    BYTE PTR [rax+rdi*4+0x1d],ah
   1400110bc:	or     eax,0x210988d5
   1400110c1:	jo     0x1400110df
   1400110c3:	xchg   edi,eax
   1400110c4:	jmp    0xc7320105
   1400110c9:	jb     0x140011072
   1400110cb:	rex.RB loop 0x1400110f7
   1400110ce:	push   rdi
   1400110cf:	adc    cl,al
   1400110d1:	movabs eax,ds:0x65924012124f13e1
   1400110da:	fdivr  DWORD PTR [rbp+0x7]
   1400110dd:	rex.WRX fiadd DWORD PTR [rcx]
   1400110e0:	push   rbx
   1400110e1:	movsxd ecx,DWORD PTR [rsi]
   1400110e3:	add    BYTE PTR [rbp+0x9],al
   1400110e6:	and    DWORD PTR [rbx],edx
   1400110e8:	adc    bh,BYTE PTR [rdi-0x439d10c6]
   1400110ee:	movsxd eax,DWORD PTR [rax]
   1400110f0:	out    dx,al
   1400110f1:	jl     0x1400110ff
   1400110f3:	xor    ecx,DWORD PTR [rax]
   1400110f5:	icebp  
   1400110f6:	in     eax,dx
   1400110f7:	ja     0x1400110e3
   1400110f9:	and    eax,0x62726d88
   1400110fe:	sti    
   1400110ff:	xor    BYTE PTR [rcx+riz*2+0x3f],bl
   140011103:	pop    rsi
   140011104:	ret    
   140011105:	(bad)  [rsi-0x6d]
   140011108:	sub    BYTE PTR [rbp+0x5c921024],ah
   14001110e:	or     DWORD PTR [rdx],0x3d
   140011111:	(bad)  
   140011112:	xchg   esi,eax
   140011113:	loop   0x1400110df
   140011115:	mov    esi,0x97884fd1
   14001111a:	enter  0x5282,0x48
   14001111e:	or     cl,BYTE PTR [rbx-0x3a38e21f]
   140011124:	cmc    
   140011125:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011126:	fwait
   140011127:	push   rax
   140011128:	push   rbp
   140011129:	add    eax,0x61171707
   14001112e:	sbb    al,BYTE PTR [rsi]
   140011130:	rex.RXB (bad) 
   140011132:	pop    rbp
   140011133:	xor    al,0x5a
   140011135:	ins    DWORD PTR es:[rdi],dx
   140011136:	ins    BYTE PTR es:[rdi],dx
   140011137:	ins    BYTE PTR es:[rdi],dx
   140011138:	ins    BYTE PTR es:[rdi],dx
   140011139:	shl    DWORD PTR [rcx+0x6c],0x51
   14001113d:	out    dx,eax
   14001113e:	(bad)  
   14001113f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011140:	test   DWORD PTR [rdi+rcx*4],0x22cb90be
   140011147:	xchg   ebp,eax
   140011148:	rex.WX
   140011149:	xchg   r10d,eax
   14001114b:	movabs ds:0x475dbdb04f81cc8e,eax
   140011154:	mov    edi,0x32b547df
   140011159:	add    eax,0x63830c3
   14001115e:	mov    cl,0xf3
   140011160:	test   BYTE PTR [rip+0xffffffff8bc05c5a],bl        # 0xcbc16dc0
   140011166:	(bad)  
   140011167:	pop    rsi
   140011168:	shr    ebp,0xe5
   14001116b:	adc    eax,0x38e7bd9c
   140011170:	shr    cl,cl
   140011172:	xor    al,0xfe
   140011174:	in     al,0x89
   140011176:	out    0x90,eax
   140011178:	xor    edx,DWORD PTR [rsp+rdx*2]
   14001117b:	stos   DWORD PTR es:[rdi],eax
   14001117c:	adc    eax,0x1f8a0d14
   140011181:	clc    
   140011182:	fdivrp st(7),st
   140011184:	loope  0x14001117a
   140011186:	icebp  
   140011187:	jrcxz  0x140011171
   140011189:	idiv   BYTE PTR [rdx+0x78]
   14001118c:	repz cli 
   14001118e:	cmc    
   14001118f:	push   rax
   140011190:	test   eax,0x339dc847
   140011195:	loope  0x1400111ad
   140011197:	outs   dx,BYTE PTR ds:[rsi]
   140011198:	cld    
   140011199:	adc    al,0x5
   14001119b:	adc    bh,BYTE PTR [rax]
   14001119d:	sti    
   14001119e:	sysenter 
   1400111a0:	add    al,0x2b
   1400111a2:	rcl    DWORD PTR [rbx+0x7b],0x2
   1400111a6:	cmp    al,0x25
   1400111a8:	movabs eax,ds:0xe472a69ac2aa6001
   1400111b1:	(bad)  
   1400111b2:	movabs eax,ds:0x160810cc04da60e1
   1400111bb:	and    BYTE PTR [rbx+0x55],ah
   1400111be:	add    BYTE PTR [rcx],al
   1400111c0:	add    eax,0xcd3dfe54
   1400111c5:	sub    cx,WORD PTR [rcx+rbp*4-0x36]
   1400111ca:	cmp    al,0x43
   1400111cc:	and    BYTE PTR [rbx-0x26],al
   1400111cf:	mov    ch,0x1f
   1400111d1:	loop   0x140011251
   1400111d3:	(bad)  
   1400111d4:	cmp    eax,DWORD PTR [rsi]
   1400111d6:	loopne 0x140011185
   1400111d8:	(bad)  
   1400111d9:	push   rcx
   1400111da:	ss js  0x14001120c
   1400111dd:	(bad)  
   1400111de:	and    DWORD PTR [rcx+0x7f],edi
   1400111e1:	(bad)  
   1400111e2:	rex.RX (bad) 
   1400111e4:	push   rsp
   1400111e5:	cmp    BYTE PTR [rcx],dh
   1400111e7:	jb     0x14001117e
   1400111e9:	(bad)  
   1400111ea:	and    BYTE PTR [rdi+0x41e35761],ah
   1400111f0:	sub    BYTE PTR [rcx-0x7bbb507c],ah
   1400111f6:	shl    BYTE PTR [rax],cl
   1400111f8:	ficom  DWORD PTR [rax+rdi*4+0x36]
   1400111fc:	ret    0xc9b0
   1400111ff:	(bad)  
   140011200:	(bad)  
   140011201:	push   rax
   140011202:	pop    rcx
   140011203:	(bad)  
   140011204:	stos   BYTE PTR es:[rdi],al
   140011205:	test   al,0xac
   140011207:	mov    eax,?
   140011209:	(bad)  
   14001120a:	fwait
   14001120b:	sub    BYTE PTR [rdi+0x5d333197],cl
   140011211:	add    DWORD PTR [rax+riz*4],0xdf58db67
   140011218:	fadd   st,st(4)
   14001121a:	int    0xa5
   14001121c:	cmp    BYTE PTR gs:[rsi],ch
   14001121f:	xchg   ebx,eax
   140011220:	sbb    eax,0x983266cf
   140011225:	scas   al,BYTE PTR es:[rdi]
   140011226:	rex.WRX
   140011227:	push   r13
   140011229:	xor    al,0x10
   14001122b:	rex.WX loope 0x140011266
   14001122e:	(bad)  
   14001122f:	cmp    bl,BYTE PTR [rbp+0xead5a0e]
   140011235:	outs   dx,BYTE PTR ds:[rsi]
   140011236:	fdivr  QWORD PTR [rbp+rcx*1-0x5ebd75f6]
   14001123d:	adc    BYTE PTR [rdx-0x4f],0x80
   140011241:	push   rsp
   140011242:	rex.WX add rsp,QWORD PTR [rip+0xffffffffdba02b4c]        # 0x11ba13d95
   140011249:	jmp    0x14001122c
   14001124b:	(bad)  
   14001124d:	fwait
   14001124e:	cwde   
   14001124f:	cdq    
   140011250:	test   eax,0xecd9720
   140011255:	fst    QWORD PTR [rdi]
   140011257:	pop    rbp
   140011258:	xlat   BYTE PTR ds:[rbx]
   140011259:	jo     0x14001124d
   14001125b:	(bad)  
   14001125c:	push   rcx
   14001125d:	mov    esp,0xb835e174
   140011262:	scas   al,BYTE PTR es:[rdi]
   140011263:	xchg   DWORD PTR [rbx],esp
   140011265:	or     esi,DWORD PTR [rbx]
   140011267:	cwde   
   140011268:	popf   
   140011269:	sub    ah,BYTE PTR [rcx+0x65]
   14001126c:	ins    DWORD PTR es:[rdi],dx
   14001126d:	adc    edi,DWORD PTR [rsi+0x40]
   140011270:	nop
   140011271:	iret   
   140011272:	cwde   
   140011273:	nop
   140011274:	gs sbb ebp,ebx
   140011277:	cs stos DWORD PTR es:[rdi],eax
   140011279:	js     0x140011237
   14001127b:	jle    0x14001127a
   14001127d:	(bad)  
   14001127e:	rex.WRX sbb al,0x3f
   140011281:	(bad)  
   140011282:	retf   
   140011283:	rex.WX ret 
   140011285:	idiv   DWORD PTR [rsi+rax*1+0x64]
   140011289:	rex.WX loopne 0x140011234
   14001128c:	mov    edi,0xaf121902
   140011291:	sbb    eax,esp
   140011293:	rex.WXB jns 0x1400112fe
   140011296:	and    al,cl
   140011298:	push   rsi
   140011299:	outs   dx,BYTE PTR ds:[rsi]
   14001129a:	sub    al,BYTE PTR [rdx+0x19]
   14001129d:	xchg   ecx,eax
   14001129e:	ret    0xca64
   1400112a1:	ror    DWORD PTR [rdx-0x5e2cd73e],0xea
   1400112a8:	sbb    edi,ebx
   1400112aa:	(bad)  
   1400112ab:	xchg   ecx,eax
   1400112ac:	jne    0x140011253
   1400112ae:	loop   0x14001125c
   1400112b0:	push   rbx
   1400112b1:	test   BYTE PTR [rax],ah
   1400112b3:	movsxd edx,DWORD PTR [rax]
   1400112b5:	clc    
   1400112b6:	(bad)  
   1400112b7:	rex.WXB xor al,0xca
   1400112ba:	ret    
   1400112bb:	sbb    al,0x42
   1400112bd:	or     BYTE PTR [rax+0x28],al
   1400112c0:	push   0xffffffffaee2c8d4
   1400112c5:	(bad)  
   1400112c6:	cmp    eax,DWORD PTR [rsi]
   1400112c8:	loopne 0x1400112b7
   1400112ca:	(bad)  
   1400112cb:	leave  
   1400112cc:	xor    esi,DWORD PTR [rdx+0x37]
   1400112cf:	pop    rsi
   1400112d0:	(bad)  
   1400112d1:	js     0x14001130f
   1400112d3:	int3   
   1400112d4:	sub    BYTE PTR [rbx+rsi*1],cl
   1400112d7:	(bad)  
   1400112d8:	sti    
   1400112d9:	xor    eax,0xb797b0a
   1400112de:	add    ecx,edi
   1400112e0:	rol    DWORD PTR [rax-0x389bddf0],cl
   1400112e6:	add    cl,BYTE PTR [rdx]
   1400112e8:	stos   BYTE PTR es:[rdi],al
   1400112e9:	mov    al,0x15
   1400112eb:	push   rax
   1400112ec:	mov    ah,0x4b
   1400112ee:	(bad)  
   1400112ef:	rex.WR shl BYTE PTR [rax-0x19],0x42
   1400112f4:	add    dl,BYTE PTR [rax]
   1400112f6:	stos   DWORD PTR es:[rdi],eax
   1400112f7:	jno    0x140011370
   1400112f9:	pop    rbp
   1400112fa:	(bad)  
   1400112fb:	outs   dx,DWORD PTR ds:[rsi]
   1400112fc:	pop    rsi
   1400112fd:	mov    ebx,0x9b32f18e
   140011302:	cld    
   140011303:	add    BYTE PTR [rax+0x1b81beb6],dh
   140011309:	rex.WXB mov r15b,0xb8
   14001130c:	test   al,0x66
   14001130e:	or     ch,BYTE PTR [rcx+0x23]
   140011311:	or     ecx,DWORD PTR [rdx+0x3]
   140011314:	je     0x1400112f1
   140011316:	sub    eax,0xa41d7af4
   14001131b:	or     eax,0x2f73b593
   140011320:	xchg   ebp,eax
   140011321:	mov    al,0xb8
   140011323:	xor    BYTE PTR [rdi],cl
   140011325:	add    BYTE PTR [rax-0x54d4f893],dh
   14001132b:	imul   edi,DWORD PTR [rax-0x51c91487],0xffffffbe
   140011332:	jno    0x140011341
   140011334:	test   DWORD PTR [rdx+0x11],eax
   140011337:	xchg   ebx,eax
   140011338:	adc    esp,DWORD PTR [rbx+0x0]
   14001133b:	and    al,0xc8
   14001133d:	xchg   edx,eax
   14001133e:	or     bh,BYTE PTR [rdi]
   140011340:	and    BYTE PTR [rax-0x46],bl
   140011343:	mov    ecx,0x14eae98c
   140011348:	(bad)  
   140011349:	mov    al,BYTE PTR [rbp-0x64dad85f]
   14001134f:	leave  
   140011350:	loopne 0x1400112d3
   140011352:	mov    bl,0x67
   140011354:	jo     0x14001134b
   140011356:	(bad)  
   140011357:	jmp    0x1400113d1
   140011359:	in     eax,0xd5
   14001135b:	xlat   BYTE PTR ds:[rbx]
   14001135c:	(bad)  
   14001135d:	pop    rcx
   14001135e:	imul   edx,DWORD PTR [rsi-0x78],0xf7e848a5
   140011365:	ins    DWORD PTR es:[rdi],dx
   140011366:	je     0x140011322
   140011368:	cmp    eax,0xc25a5b5c
   14001136d:	cli    
   14001136e:	cli    
   14001136f:	es rex.WRX sbb al,0x3f
   140011373:	mov    bl,cl
   140011375:	cdq    
   140011376:	sub    bh,BYTE PTR [rdi+rbx*4]
   140011379:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001137a:	add    BYTE PTR [rcx-0x3c6a7cf0],ch
   140011380:	sahf   
   140011381:	xchg   DWORD PTR [rdi+rbx*1+0x40],ecx
   140011385:	xchg   BYTE PTR [rdx-0x64d34358],ch
   14001138b:	ror    BYTE PTR [rdi],0x28
   14001138e:	push   rdi
   14001138f:	add    DWORD PTR [rsi],esp
   140011391:	and    BYTE PTR [rdi+rbp*2+0x40],bl
   140011395:	(bad)  
   140011396:	(bad)  
   140011398:	or     DWORD PTR [rdi],0x605314d0
   14001139e:	out    0x82,al
   1400113a0:	(bad)  
   1400113a1:	(bad)  
   1400113a2:	mov    cs,WORD PTR [rip+0x29207399]        # 0x169218741
   1400113a8:	mov    eax,0xb56f1c1c
   1400113ad:	rex.RX add r10b,BYTE PTR [rax-0x4d3e1868]
   1400113b4:	test   DWORD PTR [rcx+rcx*4+0x3a],ecx
   1400113b8:	movabs al,ds:0xef19bbc441063214
   1400113c1:	sbb    BYTE PTR [rax-0x35ce6341],al
   1400113c7:	sub    ah,ch
   1400113c9:	out    0x25,al
   1400113cb:	(bad)  
   1400113cc:	(bad)  
   1400113cd:	pop    rdx
   1400113cf:	(bad)  
   1400113d0:	idiv   BYTE PTR [rdx-0x9e70cf3]
   1400113d6:	imul   ebx,DWORD PTR [rax],0x24
   1400113d9:	ret    0xefc8
   1400113dc:	rex.WR (bad) 
   1400113de:	sub    bh,0xb6
   1400113e1:	int3   
   1400113e2:	sbb    ebp,DWORD PTR [rdx-0x7c]
   1400113e5:	mov    BYTE PTR [rax+0x3d696344],bl
   1400113eb:	ss fs cdq 
   1400113ee:	mov    ecx,0x6e9637ba
   1400113f3:	(bad)  
   1400113f4:	ins    BYTE PTR es:[rdi],dx
   1400113f5:	ins    BYTE PTR es:[rdi],dx
   1400113f6:	or     al,0x33
   1400113f8:	(bad)  
   1400113f9:	sub    DWORD PTR [rax+0xa],edx
   1400113fc:	fcomp  QWORD PTR [rdx+0x5e]
   1400113ff:	(bad)  
   140011400:	retf   
   140011401:	scas   eax,DWORD PTR es:[rdi]
   140011402:	mov    esp,0xf266d70a
   140011407:	push   rdi
   140011408:	jbe    0x140011461
   14001140a:	rex.RXB fisub DWORD PTR [r10+0x69]
   14001140e:	rex.RXB
   14001140f:	rex.W
   140011410:	rex.WR stos BYTE PTR es:[rdi],al
   140011412:	fsub   st(6),st
   140011414:	xlat   BYTE PTR ds:[rbx]
   140011415:	mov    al,0xba
   140011417:	mov    dh,0x6
   140011419:	(bad)  
   14001141a:	or     BYTE PTR [rax-0x30338a2e],dl
   140011420:	iret   
   140011421:	(bad)  
   140011422:	jp     0x14001149e
   140011424:	sbb    cl,BYTE PTR [rbx-0x67a70cf5]
   14001142a:	lahf   
   14001142b:	ret    
   14001142c:	(bad)  
   14001142d:	cli    
   14001142e:	cmp    ch,BYTE PTR [rsi]
   140011430:	pop    rsi
   140011431:	mov    esi,0xaf57cb8a
   140011436:	(bad)  
   140011437:	push   0x6a
   140011439:	adc    bl,BYTE PTR [rcx]
   14001143b:	retf   
   14001143c:	or     al,cl
   14001143e:	ret    0xb75b
   140011441:	xchg   edi,eax
   140011442:	add    edx,ecx
   140011444:	mov    ah,0xf9
   140011446:	xchg   BYTE PTR [rbp-0x611d964c],cl
   14001144c:	push   rbx
   14001144d:	(bad)  
   14001144e:	push   rcx
   14001144f:	stos   DWORD PTR es:[rdi],eax
   140011450:	xor    eax,0x61af5db0
   140011455:	jge    0x1400114c2
   140011457:	sbb    esi,DWORD PTR [rbp-0x2225c513]
   14001145d:	rex.W adc BYTE PTR ss:[rax],spl
   140011461:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011462:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011463:	jo     0x140011453
   140011465:	in     al,dx
   140011466:	mov    ebp,0xf03264c8
   14001146b:	pop    rbp
   14001146c:	xchg   DWORD PTR cs:[rsi],esp
   14001146f:	rex.WB add BYTE PTR [r15+0x3d],cl
   140011473:	retf   0x1ddc
   140011476:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011477:	movabs al,ds:0x6eb7174eed134d30
   140011480:	fild   WORD PTR [rdx-0x20]
   140011483:	(bad)  
   140011484:	mov    al,0x2c
   140011486:	or     ebx,DWORD PTR [rcx+0x6596166c]
   14001148c:	mov    cl,0x13
   14001148e:	retf   
   14001148f:	adc    DWORD PTR [rbx-0x31],0xbc3ae0f3
   140011496:	cmp    DWORD PTR [rcx+0x29a2b124],ecx
   14001149c:	movabs eax,ds:0xd2224294bd282035
   1400114a5:	add    al,dh
   1400114a7:	sub    QWORD PTR [r9],rbx
   1400114aa:	rex.W icebp 
   1400114ac:	or     DWORD PTR [rsi+0x26],edx
   1400114af:	sub    BYTE PTR [rbx+0x46a16325],dl
   1400114b5:	sbb    al,0x44
   1400114b7:	mov    esp,0x18ef1bb
   1400114bc:	clc    
   1400114bd:	(bad)  
   1400114be:	lea    edi,[rbp-0x589ffb50]
   1400114c4:	add    DWORD PTR [rax],ebx
   1400114c6:	mov    dh,0x6d
   1400114c8:	cwde   
   1400114c9:	rex.B
   1400114ca:	rex.W (bad) 
   1400114cc:	mov    edi,0xda30e79b
   1400114d1:	xor    BYTE PTR [rax+0x12],cl
   1400114d4:	adc    DWORD PTR [rdx+0x57fd0263],esi
   1400114da:	adc    al,0x5
   1400114dc:	xchg   edx,eax
   1400114dd:	sbb    al,0xeb
   1400114df:	pop    rbx
   1400114e0:	mov    BYTE PTR [rax-0x1e],cl
   1400114e3:	rex.WR
   1400114e4:	lock add dl,BYTE PTR [rsi+rbp*4-0x72]
   1400114e9:	fwait
   1400114ea:	ss rex.WRB int3 
   1400114ed:	push   rsp
   1400114ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400114ef:	add    BYTE PTR [rax],al
   1400114f1:	mov    ch,0x7a
   1400114f3:	or     eax,0xaf2beaf
   1400114f8:	add    cl,bh
   1400114fa:	(bad)
   1400114fd:	sbb    al,0xa6
   1400114ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140011501:	xor    DWORD PTR [rsi],esi
   140011503:	push   rsi
   140011504:	test   BYTE PTR [rcx+rcx*8],ch
   140011507:	and    DWORD PTR [rcx],esi
   140011509:	(bad)  
   14001150a:	cmc    
   14001150b:	add    edi,eax
   14001150d:	sahf   
   14001150e:	retf   
   14001150f:	adc    al,0x8d
   140011511:	sbb    eax,0x37af51b
   140011516:	xlat   BYTE PTR ds:[rbx]
   140011517:	outs   dx,BYTE PTR ds:[rsi]
   140011518:	fadd   st(0),st
   14001151a:	mov    ch,0xeb
   14001151c:	xlat   BYTE PTR ds:[rbx]
   14001151d:	xor    DWORD PTR [rdi],edi
   14001151f:	(bad)  
   140011520:	xchg   DWORD PTR [rbp+0x2b540585],eax
   140011526:	push   rbx
   140011527:	cwde   
   140011528:	sbb    BYTE PTR [rdi],bl
   14001152a:	(bad)  
   14001152b:	sbb    ebp,DWORD PTR [rdi+0x5e]
   14001152e:	(bad)  
   14001152f:	xchg   ebp,eax
   140011530:	(bad)  
   140011531:	fiadd  WORD PTR [rsi+rdi*1-0x69]
   140011535:	(bad)  
   140011538:	cdq    
   140011539:	and    esp,esp
   14001153b:	add    al,0xb8
   14001153d:	mov    ch,0xbc
   14001153f:	or     dl,BYTE PTR [rbp+0x55]
   140011542:	xchg   ecx,eax
   140011543:	retf   
   140011544:	or     eax,0x4924070f
   140011549:	rex.X test eax,0xa958c454
   14001154f:	or     BYTE PTR [rax-0x76],dl
   140011552:	in     eax,0x95
   140011554:	push   rbp
   140011555:	cmp    al,0xf3
   140011557:	int    0xe7
   140011559:	jo     0x14001154b
   14001155b:	loopne 0x14001155f
   14001155d:	or     al,BYTE PTR [rbp+0x359f0202]
   140011563:	push   0xffffffffffffff81
   140011565:	and    al,0xa4
   140011567:	fdivr  QWORD PTR [rax+0x27]
   14001156a:	and    ecx,DWORD PTR [rcx-0x6fff0553]
   140011570:	ss sub eax,0x6beaf6bc
   140011576:	clc    
   140011577:	in     al,0xa7
   140011579:	dec    DWORD PTR [rax]
   14001157b:	retf   
   14001157c:	retf   
   14001157d:	retf   
   14001157e:	jo     0x1400115dd
   140011580:	psubusw mm5,QWORD PTR [rsi+rbx*1-0x6a]
   140011585:	movabs gs:0xd32a24d4d4c31c54,al
   14001158f:	push   rbp
   140011590:	rex.WR
   140011591:	rex.WRB
   140011592:	rex.WR movabs ds:0x186522cb9b202f90,al
   14001159c:	loopne 0x1400115e7
   14001159e:	jl     0x1400115b0
   1400115a0:	pop    rsi
   1400115a1:	(bad)  
   1400115a2:	adc    dl,dh
   1400115a4:	stc    
   1400115a5:	or     DWORD PTR [rax],eax
   1400115a7:	test   DWORD PTR [rdi+0x14],eax
   1400115aa:	int3   
   1400115ab:	out    0x32,al
   1400115ad:	out    dx,eax
   1400115ae:	add    BYTE PTR [rdx-0x3f16fa59],0x31
   1400115b5:	mov    ss,WORD PTR [rax-0x67]
   1400115b8:	mov    bh,0x3e
   1400115ba:	fidiv  WORD PTR [rcx]
   1400115bc:	add    BYTE PTR [rdi+0x75],bh
   1400115bf:	(bad)  
   1400115c0:	mov    al,0xf3
   1400115c2:	cdq    
   1400115c3:	hlt    
   1400115c4:	adc    al,0x80
   1400115c6:	std    
   1400115c7:	sbb    DWORD PTR [rbx-0x3d22491c],eax
   1400115cd:	or     BYTE PTR [rax-0x7c],ah
   1400115d0:	(bad)  
   1400115d1:	and    BYTE PTR [rdx+rdx*2-0x516cd6be],dl
   1400115d8:	loop   0x140011596
   1400115da:	jle    0x140011561
   1400115dc:	(bad)  
   1400115dd:	(bad)  
   1400115de:	add    ecx,edx
   1400115e0:	mov    dh,0xf8
   1400115e2:	xlat   BYTE PTR ds:[rbx]
   1400115e3:	push   0xffffffffffffffaa
   1400115e5:	xchg   BYTE PTR [rsi-0x49],dh
   1400115e8:	add    DWORD PTR [rsi-0x4d],0xffffff8d
   1400115ec:	ret    
   1400115ed:	(bad)  
   1400115ee:	(bad)  
   1400115ef:	add    BYTE PTR [rax],al
   1400115f1:	retf   
   1400115f2:	retf   
   1400115f3:	retf   
   1400115f4:	mov    eax,0xa632f97c
   1400115f9:	es (bad) 
   1400115fb:	jno    0x1400115f1
   1400115fd:	fcom   DWORD PTR [rcx+0x64]
   140011600:	cmp    BYTE PTR [rbp-0x68],ah
   140011603:	mov    DWORD PTR [rbp+0xa2050a],edx
   140011609:	add    DWORD PTR [rdi+0x2e],edx
   14001160c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001160d:	add    BYTE PTR [rbp+rdi*1-0x7b],dh
   140011611:	mov    ecx,esi
   140011613:	jno    0x1400115a1
   140011615:	lea    edx,[rbp-0x4ec99330]
   14001161b:	je     0x140011610
   14001161d:	(bad)  
   14001161e:	(bad)  
   14001161f:	(bad)  
   140011620:	(bad)  
   140011621:	jo     0x14001161f
   140011623:	clc    
   140011624:	or     DWORD PTR [rbx+rcx*8+0x7a3b1c25],edx
   14001162b:	or     BYTE PTR [rbp-0x40d0f1be],al
   140011631:	repnz ins DWORD PTR es:[rdi],dx
   140011633:	lods   al,BYTE PTR ds:[rsi]
   140011634:	lods   al,BYTE PTR ds:[rsi]
   140011635:	scas   al,BYTE PTR es:[rdi]
   140011636:	movabs ds:0xb70f03f01400a952,al
   14001163f:	outs   dx,BYTE PTR ds:[rsi]
   140011640:	sub    eax,0x8e616163
   140011645:	or     DWORD PTR [rbp-0x6b57c4f2],ecx
   14001164b:	jb     0x140011676
   14001164d:	mov    al,0x0
   14001164f:	xchg   ebp,eax
   140011650:	test   eax,0x8f8f8c49
   140011655:	movsxd esi,DWORD PTR [rbp+0x75]
   140011658:	or     eax,0x21864cd9
   14001165d:	repz mov esp,0xb85657a4
   140011663:	and    BYTE PTR [rax+0x11c270a4],bl
   140011669:	js     0x140011676
   14001166b:	xor    al,0x82
   14001166d:	scas   eax,DWORD PTR es:[rdi]
   14001166e:	cmp    eax,0x5cdc35fe
   140011673:	mov    edx,0x14a95285
   140011678:	mov    edx,0xf6eddf8
   14001167d:	mov    ch,0x5a
   14001167f:	or     eax,0xa5f2f17
   140011684:	push   rbp
   140011685:	cwde   
   140011686:	push   rdx
   140011687:	sub    DWORD PTR [rip+0xffffffffef017cf9],ebx        # 0x12f029386
   14001168d:	cmp    dh,BYTE PTR [rdi+0xe]
   140011690:	(bad)  
   140011691:	stc    
   140011692:	adc    edi,edi
   140011694:	or     eax,0xde12554f
   140011699:	jp     0x1400116e7
   14001169b:	add    al,BYTE PTR [rdx-0x7ebf7de8]
   1400116a1:	and    BYTE PTR [rdi+0x0],0x24
   1400116a5:	movabs rax,ds:0xed70027ed0c034da
   1400116af:	rex.X loopne 0x14001171f
   1400116b2:	(bad)  
   1400116b3:	add    DWORD PTR [rbx],eax
   1400116b5:	mov    cl,0xb
   1400116b7:	loopne 0x140011656
   1400116b9:	icebp  
   1400116ba:	push   rdi
   1400116bb:	ja     0x14001168d
   1400116bd:	(bad)  
   1400116be:	lea    esp,[rsi+rbx*1]
   1400116c1:	(bad)  
   1400116c2:	outs   dx,DWORD PTR ds:[rsi]
   1400116c3:	icebp  
   1400116c4:	xchg   esi,eax
   1400116c5:	(bad)  
   1400116c6:	rex.B (bad) 
   1400116c8:	fwait
   1400116c9:	lahf   
   1400116ca:	mov    eax,0xbb5e5bc5
   1400116cf:	(bad)  
   1400116d0:	ins    DWORD PTR es:[rdi],dx
   1400116d1:	scas   eax,DWORD PTR es:[rdi]
   1400116d2:	jrcxz  0x14001170b
   1400116d4:	fwait
   1400116d5:	add    al,0x84
   1400116d7:	or     dh,BYTE PTR [rdi]
   1400116d9:	xchg   ebp,eax
   1400116da:	(bad)  
   1400116db:	mov    esp,0xa11be6b3
   1400116e0:	cmp    eax,0x4de212a2
   1400116e5:	cmp    eax,0xbeb65804
   1400116ea:	mov    dh,0x85
   1400116ec:	mov    cl,0xb1
   1400116ee:	add    cl,BYTE PTR [rbx+riz*1]
   1400116f1:	test   DWORD PTR [rbx],ebx
   1400116f3:	(bad)  
   1400116f4:	xchg   esi,eax
   1400116f5:	jo     0x1400116e8
   1400116f7:	rol    BYTE PTR [rbp+0x1c],cl
   1400116fa:	cmp    eax,0xcf67147a
   1400116ff:	fimul  WORD PTR [rdi-0x4e7a9a74]
   140011705:	scas   eax,DWORD PTR es:[rdi]
   140011706:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011707:	test   eax,0xa474a548
   14001170c:	shr    DWORD PTR [rbp+riz*8+0x4050b159],cl
   140011713:	jns    0x1400116c1
   140011715:	adc    al,0xba
   140011717:	cmc    
   140011718:	sahf   
   140011719:	(bad)  
   14001171a:	(bad)  
   14001171b:	loope  0x140011750
   14001171d:	xchg   esi,eax
   14001171e:	test   ecx,edi
   140011720:	stc    
   140011721:	add    ecx,DWORD PTR [rax+0x19]
   140011724:	imul   ebx,DWORD PTR [rdi+rdi*2+0x5eae3cee],0x5294037d
   14001172f:	xchg   esp,eax
   140011730:	mov    dh,0xf0
   140011733:	rcr    cl,0x33
   140011736:	push   rax
   140011737:	gs add eax,0x806b6bab
   14001173d:	(bad)  
   14001173e:	sbb    dh,BYTE PTR [rax-0x647c51c8]
   140011744:	retf   
   140011745:	sub    ecx,DWORD PTR [rsi+rdx*2+0x14983c9b]
   14001174c:	and    BYTE PTR [rbp+rdx*1+0x2dbc04d8],al
   140011753:	fnclex 
   140011755:	ret    0x5a1c
   140011758:	lods   eax,DWORD PTR ds:[rsi]
   140011759:	(bad)  
   14001175a:	pop    rdx
   14001175b:	lods   eax,DWORD PTR ds:[rsi]
   14001175c:	ss stos DWORD PTR es:[rdi],eax
   14001175e:	rex.WRB xchg r8,rax
   140011760:	and    eax,0x78d44aa8
   140011765:	rex.R push rcx
   140011767:	rex.R jmp 0x14001179c
   14001176a:	push   rsi
   14001176b:	repnz fld TBYTE PTR [rcx+0x77]
   14001176f:	mov    al,0x5d
   140011771:	stos   DWORD PTR es:[rdi],eax
   140011772:	movabs ds:0xc2a28a7d7a862850,eax
   14001177b:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001177d:	nop
   14001177e:	(bad)  
   14001177f:	adc    al,0x50
   140011781:	sub    dl,BYTE PTR [rbp-0x5dd4e3b0]
   140011787:	push   rax
   140011788:	sub    al,0xc0
   14001178a:	cqo    
   14001178c:	pop    rax
   14001178d:	pop    rcx
   14001178e:	pop    rsi
   14001178f:	shr    DWORD PTR [rbx-0x51],0xbd
   140011793:	sbb    dh,cl
   140011795:	adc    al,0xe2
   140011797:	gs (bad) 
   140011799:	or     DWORD PTR [rbx-0x67646bd1],edi
   14001179f:	mov    esi,0xa3271723
   1400117a4:	movabs ds:0xbb6f1dd261579b8c,al
   1400117ad:	jmp    0x1400117a0
   1400117af:	mov    es,WORD PTR [rdi]
   1400117b1:	lock xlat BYTE PTR ds:[rbx]
   1400117b3:	jae    0x1400117a1
   1400117b5:	(bad)  
   1400117b6:	xor    al,0xc6
   1400117b8:	lahf   
   1400117b9:	fild   QWORD PTR [rdi]
   1400117bb:	mov    dh,0x20
   1400117bd:	(bad)  
   1400117be:	vmread QWORD PTR [rcx],rcx
   1400117c1:	xchg   esp,eax
   1400117c2:	push   rdx
   1400117c3:	sbb    al,BYTE PTR [rdx]
   1400117c5:	jnp    0x140011767
   1400117c7:	movabs eax,ds:0x69a14a1da2d0e1b6
   1400117d0:	or     bl,BYTE PTR [rdx]
   1400117d2:	int    0x26
   1400117d4:	cli    
   1400117d5:	jbe    0x1400117f6
   1400117d7:	(bad)  
   1400117d8:	(bad)  
   1400117d9:	pavgb  mm1,mm5
   1400117dc:	imul   esi,DWORD PTR [rdi],0x70
   1400117df:	jrcxz  0x1400117a7
   1400117e1:	xor    eax,0xfddf77dc
   1400117e6:	sub    BYTE PTR [rbp-0x63fb8e73],cl
   1400117ec:	mov    ecx,0xdb9bebd6
   1400117f1:	clc    
   1400117f2:	rcl    BYTE PTR [rdi+0x1e],cl
   1400117f5:	rex.XB lods eax,DWORD PTR ds:[rsi]
   1400117f7:	mov    dh,0x81
   1400117f9:	shl    BYTE PTR [rbp-0x20],0x79
   1400117fd:	or     BYTE PTR ss:[rcx],ah
   140011800:	xor    BYTE PTR [rbp-0x4660b1f4],cl
   140011806:	(bad)  
   140011807:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011808:	rex.WRX sahf 
   14001180a:	rex.RX
   14001180b:	addr32 mov ss:0xb6c0eddb,al
   140011812:	sti    
   140011813:	and    BYTE PTR [rax+rcx*8],al
   140011816:	in     eax,0xa
   140011818:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001181a:	or     al,0x5c
   14001181c:	mov    ebx,0xe79e1d7e
   140011821:	(bad)  
   140011822:	(bad)  
   140011823:	(bad)  
   140011824:	add    DWORD PTR [rsi+0x7b9ee261],esp
   14001182a:	rex.WRX loope 0x1400117b2
   14001182d:	(bad)  
   14001182e:	pop    rdi
   14001182f:	(bad)  
   140011830:	out    0xc6,al
   140011832:	ss mov bh,0x4b
   140011836:	nop
   140011837:	adc    al,0x19
   140011839:	popf   
   14001183a:	rex.WRX (bad) 
   14001183c:	sub    ebp,DWORD PTR [rbx]
   14001183e:	imul   ebx,DWORD PTR [rax+0x71de9d9b],0x50
   140011845:	ret    0xcf2e
   140011848:	test   BYTE PTR [rax],ah
   14001184a:	and    BYTE PTR [rsi],bh
   14001184c:	jb     0x140011847
   14001184e:	add    cl,BYTE PTR [rdx]
   140011850:	test   DWORD PTR [rdx],esp
   140011852:	push   rsi
   140011853:	push   rdi
   140011854:	xlat   BYTE PTR ds:[rbx]
   140011855:	nop
   140011856:	retf   
   140011857:	movabs eax,gs:0x513eac166148522a
   140011861:	jmp    QWORD PTR [rax+0x7eec32c8]
   140011867:	(bad)  
   140011868:	cmc    
   140011869:	jp     0x140011888
   14001186b:	xchg   BYTE PTR [rcx+0x32],ch
   14001186e:	xchg   BYTE PTR [rdx+rax*8+0xb78a79c],ah
   140011875:	je     0x1400118d0
   140011877:	xchg   edx,eax
   140011878:	rex.B and eax,0x595a9c06
   14001187e:	or     ebp,ecx
   140011880:	mov    ah,0xc5
   140011882:	test   BYTE PTR [rcx+0x63],al
   140011885:	jne    0x14001189d
   140011887:	int3   
   140011888:	fucom  st(0)
   14001188a:	call   QWORD PTR [rdx+0x29]
   14001188d:	push   rsp
   14001188e:	sbb    DWORD PTR [rdx],ecx
   140011890:	xchg   ecx,eax
   140011891:	jle    0x1400118bc
   140011893:	stos   BYTE PTR es:[rdi],al
   140011894:	sbb    dl,BYTE PTR [rax+rbp*2-0x729b413c]
   14001189b:	rex.WR ficomp WORD PTR [rsi]
   14001189e:	or     esi,eax
   1400118a0:	mov    es,WORD PTR [rcx]
   1400118a2:	clc    
   1400118a3:	fwait
   1400118a4:	xor    esi,DWORD PTR [rsi+0xb]
   1400118a7:	and    DWORD PTR [rdx+0x30cbefcf],edx
   1400118ad:	(bad)  
   1400118ae:	(bad)  
   1400118af:	ins    BYTE PTR es:[rdi],dx
   1400118b0:	and    BYTE PTR [rcx],al
   1400118b2:	mov    ch,BYTE PTR [rdx-0x6e18abe0]
   1400118b8:	js     0x140011856
   1400118ba:	and    BYTE PTR [rdi+0x13],al
   1400118bd:	rex.RB xchg r14d,eax
   1400118bf:	sbb    dl,cl
   1400118c1:	pop    rdi
   1400118c2:	sub    cl,BYTE PTR [rbp-0x7249449f]
   1400118c8:	retf   
   1400118c9:	xchg   edi,eax
   1400118ca:	(bad)  
   1400118cb:	loope  0x1400118cb
   1400118cd:	sti    
   1400118ce:	out    dx,al
   1400118cf:	ret    
   1400118d0:	pop    rax
   1400118d1:	movabs eax,ds:0x57960aa9a00fcf08
   1400118da:	(bad)  
   1400118db:	icebp  
   1400118dc:	fstp   TBYTE PTR [rdi-0x6a0f6009]
   1400118e2:	scas   eax,DWORD PTR es:[rdi]
   1400118e3:	cld    
   1400118e4:	sub    DWORD PTR [rsi+rbp*2+0x22c9951d],ebx
   1400118eb:	jb     0x1400118a6
   1400118ed:	sbb    al,0x64
   1400118ef:	call   0x175a9746b
   1400118f5:	(bad)  
   1400118f6:	clc    
   1400118f7:	fadd   st,st(7)
   1400118f9:	jg     0x140011912
   1400118fb:	in     eax,0xf2
   1400118fd:	adc    al,0x7e
   1400118ff:	call   0xff8d588b
   140011904:	repz jge 0x140011926
   140011907:	rex.X
   140011908:	ss fwait
   14001190a:	rex.RXB mov r11b,0xd9
   14001190d:	add    al,BYTE PTR [rip+0xffffffffa14a9e81]        # 0xe14bb794
   140011913:	pop    rdx
   140011914:	popf   
   140011915:	ror    ebp,0x9b
   140011918:	mov    bh,0x40
   14001191a:	sub    ecx,eax
   14001191c:	loop   0x140011900
   14001191e:	and    dl,BYTE PTR [rdx-0x46]
   140011921:	mov    ss,ebx
   140011923:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011924:	mov    fs,ebx
   140011926:	in     eax,0x57
   140011928:	pop    rsi
   140011929:	rex.XB mov r11d,0x4ac641d3
   14001192f:	adc    DWORD PTR [rdx],0xffffff8a
   140011932:	int    0xcd
   140011934:	sub    eax,0xa51a5658
   140011939:	sbb    BYTE PTR [rax],ch
   14001193b:	sbb    BYTE PTR [rdi+0x1c1e42fc],bl
   140011941:	adc    al,0x98
   140011943:	fwait
   140011944:	cdq    
   140011945:	ror    DWORD PTR [rbx-0x205fd1e9],0xb7
   14001194c:	push   rcx
   14001194d:	enter  0xc2e5,0x89
   140011951:	sbb    dl,cl
   140011953:	jp     0x14001192e
   140011955:	out    dx,eax
   140011956:	adc    al,0x22
   140011958:	(bad)  
   140011959:	loop   0x14001190c
   14001195b:	enter  0x5086,0xee
   14001195f:	add    eax,0xc03feb0
   140011964:	rcl    BYTE PTR [rbx+0x4bac5e64],0x25
   14001196b:	sub    BYTE PTR [rdx-0x5c4d67c6],ch
   140011971:	(bad)  
   140011972:	outs   dx,DWORD PTR ds:[rsi]
   140011973:	movsxd ecx,DWORD PTR [rax-0x3d53c100]
   140011979:	or     al,0xbb
   14001197b:	adc    ebp,eax
   14001197d:	rex mov esi,0x8fd571b7
   140011983:	(bad)  
   140011984:	ja     0x140011992
   140011986:	rcr    bh,0xfc
   140011989:	jno    0x140011942
   14001198b:	xchg   BYTE PTR [rcx],al
   14001198d:	stos   BYTE PTR es:[rdi],al
   14001198e:	movabs ds:0xa4082b22800950,al
   140011997:	mov    ch,BYTE PTR [rsi+rcx*1+0x11e3dcf0]
   14001199e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001199f:	movabs ds:0xa636fbf41df7e828,al
   1400119a8:	es (bad) 
   1400119aa:	lock (bad) 
   1400119ac:	sub    ebp,DWORD PTR [rdi]
   1400119ae:	movsxd esp,DWORD PTR [rcx+0x61]
   1400119b1:	add    ebp,esp
   1400119b3:	jb     0x1400119be
   1400119b5:	jle    0x140011997
   1400119b7:	shl    DWORD PTR [r12+rdi*2-0x17],cl
   1400119bc:	mov    cl,0xaf
   1400119be:	jrcxz  0x1400119bf
   1400119c0:	clc    
   1400119c1:	(bad)  
   1400119c2:	jg     0x1400119c9
   1400119c4:	rex.WRX jnp 0x1400119d4
   1400119c7:	fcomip st,st(3)
   1400119c9:	shr    edi,0xc2
   1400119cc:	mov    DWORD PTR [rbx-0x9],edx
   1400119cf:	and    DWORD PTR [rdi+0x1452432b],ebx
   1400119d5:	add    al,0x1
   1400119d7:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400119d9:	push   rbp
   1400119da:	rex.XB mov r11b,0x55
   1400119dd:	ret    
   1400119de:	out    0xda,al
   1400119e0:	sub    eax,0x4beafabc
   1400119e5:	clc    
   1400119e6:	(bad)  
   1400119e7:	(bad)  
   1400119e8:	jmp    0x140011a49
   1400119ea:	loope  0x1400119df
   1400119ec:	lahf   
   1400119ed:	std    
   1400119ee:	adc    al,0xfe
   1400119f0:	icebp  
   1400119f1:	push   rdx
   1400119f3:	iret   
   1400119f4:	jo     0x1400119ec
   1400119f6:	in     al,dx
   1400119f7:	mov    ebx,0xe0366cd0
   1400119fc:	jns    0x1400119ff
   1400119fe:	adc    ebx,DWORD PTR [rip+0xfffffffff37156ad]        # 0x1337270b1
   140011a04:	out    0x2d,al
   140011a06:	pop    rax
   140011a07:	xchg   esi,eax
   140011a08:	test   ecx,ecx
   140011a0a:	leave  
   140011a0b:	rex.WB
   140011a0c:	xor    dl,BYTE PTR fs:[rsi]
   140011a0f:	mov    ds,WORD PTR [rip+0x5f57823b]        # 0x19f589c50
   140011a15:	mov    ebx,0x559955c8
   140011a1a:	add    al,0xc4
   140011a1c:	(bad)  
   140011a1d:	(bad)  
   140011a1f:	cmp    dh,BYTE PTR [rdx-0x27]
   140011a22:	sub    al,0x34
   140011a24:	rex.WRB in eax,0xa9
   140011a27:	mov    bh,0xff
   140011a29:	mov    edi,0xb20f37bd
   140011a2e:	in     al,dx
   140011a2f:	mov    edx,0xe73efbef
   140011a34:	fsubr  st(5),st
   140011a36:	in     eax,dx
   140011a37:	scas   eax,DWORD PTR es:[rdi]
   140011a38:	imul   ecx
   140011a3a:	out    dx,al
   140011a3b:	jmp    0x14df8f429
   140011a40:	xor    eax,DWORD PTR [rbx-0x75b7df7b]
   140011a46:	(bad)  
   140011a47:	rex.WX add al,0x23
   140011a4a:	push   rcx
   140011a4b:	xchg   ecx,eax
   140011a4c:	rex.R xchg ebx,eax
   140011a4e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011a4f:	ins    DWORD PTR es:[rdi],dx
   140011a50:	fld    st(5)
   140011a52:	test   al,0x12
   140011a54:	rex.RXB mov r12b,0xcb
   140011a57:	sub    ecx,DWORD PTR gs:[rcx+0x4aca5723]
   140011a5e:	rex.WX jno 0x1400119eb
   140011a61:	mov    cl,0x5d
   140011a63:	mov    gs,WORD PTR [rbx]
   140011a65:	gs retf 
   140011a67:	xchg   esi,eax
   140011a68:	retf   
   140011a69:	xchg   edx,eax
   140011a6a:	retf   0x13b2
   140011a6d:	(bad)  
   140011a6e:	xchg   esp,eax
   140011a6f:	xchg   ebx,eax
   140011a70:	push   rax
   140011a71:	sub    DWORD PTR es:[rsi],ebp
   140011a74:	add    BYTE PTR [rax+0x58858865],cl
   140011a7a:	mov    WORD PTR [rbp-0x3fccf928],es
   140011a80:	add    BYTE PTR [rax],bl
   140011a82:	int3   
   140011a83:	ds sar ebx,cl
   140011a86:	repnz (bad) 
   140011a88:	jnp    0x140011a79
   140011a8a:	mov    ecx,0x739c7f27
   140011a8f:	out    dx,al
   140011a90:	mov    ebx,0x1440c43d
   140011a95:	xchg   BYTE PTR [rax+0x6c],dh
   140011a98:	jmp    0x12e8e6c1b
   140011a9d:	sahf   
   140011a9e:	xlat   BYTE PTR ds:[rbx]
   140011a9f:	out    dx,eax
   140011aa0:	cmc    
   140011aa1:	jnp    0x140011a5a
   140011aa3:	fucomip st,st(7)
   140011aa5:	ja     0x140011b25
   140011aa7:	retf   
   140011aa8:	div    edi
   140011aaa:	std    
   140011aab:	fstp   DWORD PTR [rbp-0x75]
   140011aae:	out    dx,al
   140011aaf:	jae    0x140011b13
   140011ab1:	push   0xf
   140011ab3:	and    esp,DWORD PTR [rbx]
   140011ab5:	ret    
   140011ab6:	clc    
   140011ab7:	rol    r10b,0xc2
   140011abb:	add    ah,BYTE PTR [rbx+0x7aa443c3]
   140011ac1:	loopne 0x140011a9f
   140011ac3:	(bad)  
   140011ac4:	push   rax
   140011ac5:	loopne 0x140011acb
   140011ac7:	jrcxz  0x140011ad1
   140011ac9:	adc    DWORD PTR [rdx+0x29],0xffffffbb
   140011acd:	fs (bad) 
   140011acf:	rex.B cwde 
   140011ad1:	push   rsp
   140011ad2:	push   0x49e68f20
   140011ad7:	(bad)  
   140011ad8:	sar    DWORD PTR [rbx],cl
   140011ada:	lock jge 0x140011afc
   140011add:	xchg   ebp,eax
   140011ade:	fmul   DWORD PTR [rip+0xffffffffcfeb2e43]        # 0x10fec4927
   140011ae4:	(bad)  
   140011ae5:	push   rbx
   140011ae6:	addr32 rex.WRX leave 
   140011ae9:	mov    ah,0xd
   140011aeb:	in     eax,dx
   140011aec:	rex.WX jp 0x140011b10
   140011aef:	xor    esp,ebp
   140011af1:	mov    edi,0x3f32ff1b
   140011af6:	ds adc al,0x35
   140011af9:	cmp    BYTE PTR [rdi],0xbd
   140011afc:	mov    eax,0x6370b6b1
   140011b01:	jge    0x140011b44
   140011b03:	rex.WXB stos QWORD PTR es:[rdi],rax
   140011b05:	pop    rsi
   140011b06:	or     al,0xd8
   140011b08:	xchg   ecx,eax
   140011b09:	push   rdi
   140011b0a:	jnp    0x140011b5b
   140011b0c:	(bad)  
   140011b0d:	jnp    0x140011b0e
   140011b0f:	mov    ecx,0xf8106537
   140011b14:	sub    al,0xad
   140011b16:	lods   al,BYTE PTR ds:[rsi]
   140011b17:	push   rdx
   140011b18:	sub    DWORD PTR [rbp+0x22f174b9],edx
   140011b1e:	rex.WB movabs ds:0x82088a2899bcd998,al
   140011b28:	nop
   140011b29:	(bad)  
   140011b2b:	(bad)  
   140011b2c:	(bad)  
   140011b2d:	clc    
   140011b2e:	jmp    0x140011b2f
   140011b30:	in     eax,dx
   140011b31:	scas   eax,DWORD PTR es:[rdi]
   140011b32:	xor    dh,BYTE PTR [rip+0xfffffffffcdff1ea]        # 0x13ce10d22
   140011b38:	lea    edi,[rdi-0x8c0823f]
   140011b3e:	rex.WXB
   140011b3f:	rex.WR int3 
   140011b41:	sbb    al,0xa0
   140011b43:	(bad)  
   140011b44:	jmp    0x140011b72
   140011b46:	mov    bh,0x61
   140011b48:	jle    0x140011b7f
   140011b4a:	(bad)  
   140011b4b:	xor    eax,0x930492ae
   140011b50:	xor    al,0x26
   140011b52:	(bad)  
   140011b53:	jb     0x140011b1c
   140011b55:	rex.RXB jg 0x140011ade
   140011b58:	(bad)  
   140011b59:	in     al,dx
   140011b5a:	mov    esi,0xd2f9734f
   140011b5f:	pop    rbx
   140011b60:	cld    
   140011b61:	(bad)  
   140011b62:	scas   eax,DWORD PTR es:[rdi]
   140011b63:	dec    BYTE PTR [rdx]
   140011b65:	pop    rdi
   140011b66:	inc    esi
   140011b68:	(bad)  
   140011b69:	rcr    BYTE PTR [rdx+rbx*1],1
   140011b6c:	mov    cl,0xf3
   140011b6e:	dec    BYTE PTR [rdx]
   140011b70:	iret   
   140011b71:	prefetcht2 BYTE PTR [rip+0xffffffffd9ece71f]        # 0x119ee0297
   140011b78:	mov    bh,0x68
   140011b7a:	mov    ch,0x8d
   140011b7c:	cli    
   140011b7d:	shr    al,1
   140011b7f:	enter  0x5b08,0x66
   140011b83:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011b84:	cdq    
   140011b85:	pop    rdi
   140011b86:	pop    rax
   140011b87:	mov    al,0xa9
   140011b89:	xchg   BYTE PTR [rdi-0x45],al
   140011b8c:	frstor [rcx+0x6e]
   140011b8f:	jle    0x140011bbf
   140011b91:	jnp    0x140011b71
   140011b93:	sbb    ch,ah
   140011b95:	js     0x140011b8a
   140011b97:	(bad)  
   140011b98:	loope  0x140011c04
   140011b9a:	lods   al,BYTE PTR ds:[rsi]
   140011b9b:	adc    al,0x52
   140011b9d:	shl    BYTE PTR [rsi+0x17e631f1],0x16
   140011ba4:	jmp    0x123276cee
   140011ba9:	xchg   ebp,eax
   140011baa:	addr32 (bad) 
   140011bac:	out    0x7,al
   140011bae:	jns    0x140011bb2
   140011bb0:	fild   WORD PTR [rdi]
   140011bb2:	jb     0x140011be7
   140011bb4:	add    BYTE PTR [rdx+0x23],ah
   140011bb7:	adc    edx,edx
   140011bb9:	(bad)  
   140011bba:	rex.XB fsub QWORD PTR [r10]
   140011bbd:	sbb    BYTE PTR [rcx],ch
   140011bbf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011bc0:	test   eax,0x11b26bde
   140011bc5:	(bad)  
   140011bc6:	neg    DWORD PTR [rax-0x3489ad57]
   140011bcc:	mov    ah,0x9d
   140011bce:	popf   
   140011bcf:	mov    al,0xec
   140011bd1:	rex.X popf 
   140011bd3:	lgs    esi,FWORD PTR [rdx+0x4be0d93f]
   140011bda:	sbb    esp,DWORD PTR [rbx-0x5f642d24]
   140011be0:	jo     0x140011be2
   140011be2:	add    eax,0xe6446e
   140011be7:	cmp    al,0xcf
   140011be9:	rcl    DWORD PTR [rdx+0x8],cl
   140011bec:	nop
   140011bed:	xchg   esi,eax
   140011bee:	(bad)  
   140011bef:	push   0x49
   140011bf1:	xor    BYTE PTR [rax],cl
   140011bf3:	stos   DWORD PTR es:[rdi],eax
   140011bf4:	(bad)  
   140011bf5:	(bad)  
   140011bf6:	mov    dl,0x8c
   140011bf8:	(bad)  
   140011bf9:	lods   eax,DWORD PTR ds:[rsi]
   140011bfa:	(bad)  
   140011bfb:	imul   esp,DWORD PTR [rbp-0x67],0xe973e928
   140011c02:	bnd gs jbe 0x140011bf4
   140011c06:	fimul  DWORD PTR [rbp-0x5ab56d70]
   140011c0c:	ret    0x1fb7
   140011c0f:	cmp    al,0xc9
   140011c11:	xchg   edi,eax
   140011c12:	call   rdi
   140011c14:	(bad)  
   140011c15:	repz icebp 
   140011c17:	cmp    ecx,DWORD PTR [rdi]
   140011c19:	repnz xchg edi,eax
   140011c1b:	mov    edi,0x79b1dff4
   140011c20:	out    0xed,eax
   140011c22:	mov    ah,0xba
   140011c24:	mov    dh,BYTE PTR [rsi+0x6b]
   140011c27:	lea    esp,[rbx+rdi*4-0x5ed21574]
   140011c2e:	sti    
   140011c2f:	stos   DWORD PTR es:[rdi],eax
   140011c30:	rcr    BYTE PTR [rdi-0x7f],1
   140011c33:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011c34:	movsxd esi,DWORD PTR [rsi+0x34]
   140011c37:	(bad)  
   140011c38:	mov    dh,0xd0
   140011c3a:	fdiv   QWORD PTR [rdx+0x17]
   140011c3d:	ja     0x140011cbe
   140011c3f:	in     al,dx
   140011c40:	push   rbx
   140011c41:	xor    al,0x6b
   140011c43:	and    eax,0xfcffcefe
   140011c48:	mov    bh,0xf9
   140011c4a:	retf   0xfe57
   140011c4d:	bndldx bnd1,[rbp+0x1248521a]
   140011c54:	xchg   ebp,eax
   140011c55:	push   rax
   140011c56:	lods   eax,DWORD PTR ds:[rsi]
   140011c57:	(bad)  
   140011c58:	push   rax
   140011c59:	rex.WX icebp 
   140011c5b:	neg    bl
   140011c5d:	outs   dx,DWORD PTR ds:[rsi]
   140011c5e:	gs jns 0x140011c54
   140011c61:	mov    dh,0xad
   140011c63:	mov    bl,0x84
   140011c65:	(bad)  
   140011c66:	mov    DWORD PTR [rbp+0x67845595],edx
   140011c6c:	or     dl,BYTE PTR [rbx-0xbb4f40d]
   140011c72:	sti    
   140011c73:	jge    0x140011c68
   140011c75:	fdiv   QWORD PTR [rbx+0x53edc028]
   140011c7b:	(bad)  
   140011c7c:	jbe    0x140011c3f
   140011c7e:	mov    BYTE PTR [rdx+0x6a],ah
   140011c81:	jb     0x140011c15
   140011c83:	pop    rsi
   140011c84:	mov    edi,0xced5ab4f
   140011c89:	rex.W
   140011c8a:	rex.WRX out 0x2e,al
   140011c8d:	adc    DWORD PTR [rbx],0xffffffdb
   140011c90:	test   cl,dh
   140011c92:	add    esp,DWORD PTR [rcx+0x56]
   140011c95:	and    esp,eax
   140011c97:	(bad)  
   140011c98:	sub    edx,DWORD PTR [rdx]
   140011c9a:	jns    0x140011d03
   140011c9c:	movabs al,ds:0xbbb65bae6fd73b1
   140011ca5:	sub    eax,0x495b507b
   140011caa:	jbe    0x140011c43
   140011cac:	(bad)  
   140011cad:	cwde   
   140011cae:	movabs al,ss:0x31378e5a77efcb6
   140011cb8:	(bad)  
   140011cb9:	in     eax,dx
   140011cba:	mov    DWORD PTR [rbx-0x5ddc0121],ebx
   140011cc0:	jo     0x140011cc2
   140011cc2:	add    eax,0x84470a6e
   140011cc7:	mov    ecx,0x336dc3f1
   140011ccc:	rex.X jmp 0x140011c7b
   140011ccf:	(bad)  
   140011cd0:	shr    bh,1
   140011cd2:	imul   ecx
   140011cd4:	cmc    
   140011cd5:	cli    
   140011cd6:	lods   al,BYTE PTR ds:[rsi]
   140011cd7:	sub    al,0x2f
   140011cd9:	push   rbx
   140011cda:	stos   DWORD PTR es:[rdi],eax
   140011cdb:	push   rbp
   140011cdc:	sbb    DWORD PTR [rip+0xffffffffc14a461d],ebx        # 0x1014b62ff
   140011ce2:	(bad)  
   140011ce4:	(bad)  
   140011ce5:	repz ja 0x140011ca6
   140011ce8:	cld    
   140011ce9:	ja     0x140011cc4
   140011ceb:	mov    ebp,0xfccf9c75
   140011cf0:	loop   0x140011d51
   140011cf2:	ret    0x4eaf
   140011cf5:	shr    dh,1
   140011cf7:	lods   al,BYTE PTR ds:[rsi]
   140011cf8:	adc    esi,DWORD PTR [rdi+0x57]
   140011cfb:	mov    DWORD PTR [rdx],edi
   140011cfd:	sub    eax,DWORD PTR [rbp+rbx*4+0x16]
   140011d01:	push   rcx
   140011d02:	mov    edi,0xa1d7af4b
   140011d07:	rcr    DWORD PTR [rdx-0x5d],cl
   140011d0a:	mov    ebp,0xe97b4732
   140011d0f:	and    ah,BYTE PTR [rip+0xfffffffff4d4c2bd]        # 0x134d5dfd2
   140011d15:	xor    al,0xa3
   140011d17:	cmp    edi,DWORD PTR [rsi]
   140011d19:	retf   0x43ae
   140011d1c:	(bad)  
   140011d1d:	lods   al,BYTE PTR ds:[esi]
   140011d1f:	pop    rcx
   140011d20:	in     eax,0x1f
   140011d22:	(bad)  
   140011d23:	outs   dx,DWORD PTR ds:[rsi]
   140011d24:	pop    rdi
   140011d25:	out    0xa1,al
   140011d27:	xchg   DWORD PTR [rsi],ebx
   140011d29:	fs fs ins BYTE PTR es:[rdi],dx
   140011d2c:	(bad)  
   140011d2d:	xchg   esp,eax
   140011d2e:	and    BYTE PTR [rip+0xffffffffe26c4d8c],al        # 0x1226d6ac0
   140011d34:	fidiv  DWORD PTR [rbp+0x16161639]
   140011d3a:	rex.WR fsubr st,st(5)
   140011d3d:	jns    0x140011d0b
   140011d3f:	(bad)  
   140011d40:	int3   
   140011d41:	mov    al,0xb2
   140011d43:	mov    dl,0x8e
   140011d45:	rex.WX push rdx
   140011d47:	cmp    al,0x4f
   140011d49:	shr    bl,1
   140011d4b:	cmc    
   140011d4c:	cwde   
   140011d4d:	pop    rdi
   140011d4e:	pop    rax
   140011d4f:	int3   
   140011d50:	pop    rsi
   140011d51:	xchg   edi,eax
   140011d52:	(bad)  
   140011d53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d54:	add    bl,cl
   140011d56:	adc    cl,BYTE PTR [rsi]
   140011d58:	lods   eax,DWORD PTR ds:[rsi]
   140011d59:	sub    DWORD PTR [rbp+0x32c3944b],edx
   140011d5f:	mov    ecx,DWORD PTR [rbx-0x35]
   140011d62:	test   BYTE PTR [rdx],0x88
   140011d65:	or     eax,0xba41bf3f
   140011d6a:	sbb    esi,DWORD PTR [rsi]
   140011d6c:	sbb    BYTE PTR [rdx-0x3645a105],bh
   140011d72:	rex.RXB imul r8d,DWORD PTR [r14-0x7b],0x63479b1d
   140011d7a:	xchg   BYTE PTR [rdx+rdx*2-0x4563c19f],ah
   140011d81:	xchg   edx,eax
   140011d82:	mov    ecx,0xd9af49cd
   140011d87:	(bad)  
   140011d88:	(bad)  
   140011d89:	cdq    
   140011d8a:	(bad)  
   140011d8b:	and    BYTE PTR [rbx],bh
   140011d8d:	(bad)  
   140011d8e:	repz or DWORD PTR [rbx+0xd1cfbb3],ebx
   140011d95:	stc    
   140011d96:	and    DWORD PTR [rdx+0x6e050070],0xa
   140011d9d:	and    ebp,ecx
   140011d9f:	test   al,0x9a
   140011da1:	xchg   esp,eax
   140011da2:	add    cl,BYTE PTR [rcx+0x1b97c8d5]
   140011da8:	mov    ?,WORD PTR [rbx]
   140011daa:	ror    BYTE PTR [rax-0x775c0b84],0x76
   140011db1:	stos   DWORD PTR es:[rdi],eax
   140011db2:	rex.RB stos DWORD PTR es:[rdi],eax
   140011db4:	(bad)  
   140011db5:	(bad)  
   140011db6:	jl     0x140011e34
   140011db8:	fcom   QWORD PTR [rdx-0x440dba8]
   140011dbe:	jnp    0x140011dbf
   140011dc0:	sbb    dl,ch
   140011dc2:	popf   
   140011dc3:	jrcxz  0x140011d98
   140011dc5:	(bad)  
   140011dc6:	sti    
   140011dc7:	pop    rcx
   140011dc8:	sub    al,bl
   140011dca:	xor    esi,esp
   140011dcc:	mov    ebx,0x15edc4eb
   140011dd1:	movabs ds:0x1c4d12884a28876e,al
   140011dda:	imul   esp,DWORD PTR [rdx-0x7d5abac8],0xffffff94
   140011de1:	sub    BYTE PTR [rsi-0x6c],0x72
   140011de5:	icebp  
   140011de6:	ret    0xae05
   140011de9:	mov    esi,0x235332f5
   140011dee:	gs mov dh,0x1c
   140011df1:	dec    BYTE PTR [rcx-0x3a]
   140011df4:	mov    dh,0x1c
   140011df6:	(bad)  
   140011df7:	rex.WXB movsxd rdi,r14d
   140011dfa:	(bad)  
   140011dfc:	std    
   140011dfd:	or     eax,0x8a753f5e
   140011e02:	data16 mov bl,0x89
   140011e05:	rex.WRX xor rax,0x4a854ad5
   140011e0b:	mov    ch,0xc2
   140011e0d:	cmp    ebp,DWORD PTR [rdi-0x41]
   140011e10:	popf   
   140011e11:	mov    ch,0xd
   140011e13:	(bad)  
   140011e14:	mov    BYTE PTR [rdi-0x57],0x54
   140011e18:	retf   
   140011e19:	out    0x24,al
   140011e1b:	mov    bh,0x96
   140011e1d:	mov    bl,0xb0
   140011e1f:	mov    eax,0x8a9d966c
   140011e24:	add    edi,eax
   140011e26:	ds jae 0x140011e2b
   140011e29:	mov    dh,0x67
   140011e2b:	out    dx,eax
   140011e2c:	sti    
   140011e2d:	and    esp,DWORD PTR ds:[rbx]
   140011e30:	rex.WRB push r14
   140011e32:	push   rsi
   140011e33:	push   rsi
   140011e34:	mov    BYTE PTR [rdx-0x57fb8df8],ah
   140011e3a:	add    ebx,0xcd612c18
   140011e40:	(bad)  
   140011e41:	sahf   
   140011e42:	jae    0x140011e29
   140011e44:	adc    BYTE PTR [rdi],dh
   140011e46:	cli    
   140011e47:	ins    BYTE PTR es:[rdi],dx
   140011e48:	js     0x140011e9e
   140011e4a:	cwde   
   140011e4b:	or     dh,bl
   140011e4d:	jbe    0x140011e8d
   140011e4f:	(bad)  
   140011e50:	or     cl,ah
   140011e52:	cmp    ah,bl
   140011e54:	std    
   140011e55:	outs   dx,DWORD PTR ds:[rsi]
   140011e56:	xor    al,0xdf
   140011e58:	cld    
   140011e59:	(bad)  
   140011e5a:	in     al,0xea
   140011e5c:	mov    cl,0xb6
   140011e5e:	call   0x1b0363c12
   140011e63:	jrcxz  0x140011e0c
   140011e65:	pop    rbx
   140011e66:	rex.X loope 0x140011e69
   140011e69:	or     bl,ah
   140011e6b:	adc    al,0x52
   140011e6d:	(bad)  
   140011e6e:	mov    dh,0xe3
   140011e70:	data16 std 
   140011e72:	xor    esi,ebx
   140011e74:	imul   rsp,QWORD PTR [r9-0x31],0x29
   140011e79:	sbb    ebx,0x31c717c6
   140011e7f:	push   rcx
   140011e80:	adc    al,0xa3
   140011e82:	xor    eax,0xa44d1a34
   140011e87:	(bad)  
   140011e88:	jns    0x140011e6d
   140011e8a:	lods   eax,DWORD PTR ds:[rsi]
   140011e8b:	repz cmp al,0xf9
   140011e8e:	(bad)
   140011e92:	ror    DWORD PTR [rdi+0x9f779b0],1
   140011e98:	cli    
   140011e99:	fst    QWORD PTR [rsi]
   140011e9b:	std    
   140011e9c:	imul   BYTE PTR [rdx]
   140011e9e:	std    
   140011e9f:	jle    0x140011ee5
   140011ea1:	xchg   esp,eax
   140011ea2:	sub    dl,ah
   140011ea4:	adc    DWORD PTR [rip+0xffffffff91aa4909],r12d        # 0xd1ab67b4
   140011eab:	pop    rsi
   140011eac:	mov    dl,dl
   140011eae:	(bad)  
   140011eaf:	imul   esi,ebx,0xffffff8b
   140011eb2:	pushf  
   140011eb3:	jp     0x140011e98
   140011eb5:	sbb    eax,0x19c1f99e
   140011eba:	mov    esi,0xbe49ff7e
   140011ebf:	repnz (bad) 
   140011ec1:	jg     0x140011eda
   140011ec3:	(bad)  
   140011ec4:	pop    rdx
   140011ec5:	rex
   140011ec6:	rex.WR sbb rax,0x59c65447
   140011ecc:	pop    rsi
   140011ecd:	mov    edx,0xd6fd6fce
   140011ed2:	outs   dx,DWORD PTR ds:[rsi]
   140011ed3:	sbb    cl,BYTE PTR [rip+0x33f6ab3d]        # 0x173f7ca16
   140011ed9:	ss ds (bad) 
   140011edc:	ret    0x22e2
   140011edf:	retf   
   140011ee0:	rex.WXB mov rcx,QWORD PTR [r8-0x17]
   140011ee4:	movabs eax,ds:0x901039d319d9d981
   140011eed:	or     al,BYTE PTR [rcx-0x59]
   140011ef0:	(bad)  [rbp+0x75]
   140011ef3:	ins    DWORD PTR es:[rdi],dx
   140011ef4:	sub    eax,0xbe19d82b
   140011ef9:	mov    ebp,0x4107b0de
   140011efe:	or     al,cl
   140011f00:	enter  0x8c8,0x3d
   140011f04:	mov    ebx,0xed85cc82
   140011f09:	(bad)  
   140011f0a:	push   0xffffffffd6890d53
   140011f0f:	and    al,0xa9
   140011f11:	(bad)  
   140011f12:	jrcxz  0x140011f21
   140011f14:	(bad)  
   140011f15:	and    ebx,DWORD PTR [rsi]
   140011f17:	sahf   
   140011f18:	lock or al,0x53
   140011f1b:	push   rax
   140011f1c:	mov    cr0,rcx
   140011f1f:	ret    
   140011f20:	sbb    eax,0x7b017570
   140011f25:	in     eax,dx
   140011f26:	push   rsp
   140011f27:	movs   DWORD PTR es:[rdi],DWORD PTR cs:[rsi]
   140011f29:	enter  0x4d5,0xb4
   140011f2d:	adc    BYTE PTR [rbx-0x75a9bb12],al
   140011f33:	mov    cl,0x51
   140011f35:	sbb    BYTE PTR [rsi-0x7],al
   140011f38:	rex.RXB or BYTE PTR [r13-0x17],r13b
   140011f3c:	pop    rdx
   140011f3d:	sbb    ebx,0x6e
   140011f40:	xor    eax,0xba2802
   140011f45:	add    eax,0xf9e90a6e
   140011f4a:	fsubr  DWORD PTR [rcx+0x58]
   140011f4d:	nop
   140011f4e:	mov    dh,0x17
   140011f50:	sahf   
   140011f51:	rex.WX movabs ds:0x4159b4b5b418840c,rax
   140011f5b:	fsubp  st(5),st
   140011f5d:	jbe    0x140011f07
   140011f5f:	push   rbp
   140011f60:	rex.WX jbe 0x140011fbc
   140011f63:	xchg   edi,eax
   140011f65:	xchg   ebx,eax
   140011f66:	rex.WRXB (bad) 
   140011f68:	add    esi,ecx
   140011f6a:	sub    al,BYTE PTR [rdi]
   140011f6c:	(bad)  
   140011f6d:	jg     0x140011f7b
   140011f6f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011f70:	xor    eax,0x512ad6fd
   140011f75:	scas   eax,DWORD PTR es:[rdi]
   140011f76:	rex.WRXB xchg r10,rax
   140011f78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f79:	(bad)  
   140011f7a:	mov    cl,0x22
   140011f7c:	mov    dl,BYTE PTR [rip+0xffffffffb8a8f85a]        # 0xf8aa17dc
   140011f82:	retf   
   140011f83:	stc    
   140011f84:	ja     0x140011f65
   140011f86:	in     al,0xf5
   140011f88:	push   rbx
   140011f89:	scas   eax,DWORD PTR es:[rdi]
   140011f8a:	jae    0x140011f85
   140011f8c:	retf   0x3a15
   140011f8f:	popf   
   140011f90:	(bad)  
   140011f91:	mov    cl,0x92
   140011f93:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f94:	jle    0x140011f19
   140011f96:	stos   DWORD PTR es:[rdi],eax
   140011f97:	jno    0x140011f1b
   140011f99:	jle    0x140011f8f
   140011f9b:	add    DWORD PTR [rsi],edi
   140011f9d:	(bad)  
   140011f9e:	cdq    
   140011f9f:	mov    edi,0xbddcdcc0
   140011fa4:	lock fidiv DWORD PTR [rdi]
   140011fa7:	js     0x140011f8f
   140011fa9:	test   eax,0xbbe07847
   140011fae:	(bad)  
   140011fb0:	jae    0x140011ff1
   140011fb2:	sti    
   140011fb3:	sbb    DWORD PTR [rsi-0x7cf6e8e9],edx
   140011fb9:	cmp    BYTE PTR [rdx-0x43],0xce
   140011fbd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011fbe:	retf   
   140011fbf:	xchg   edi,eax
   140011fc0:	sbb    DWORD PTR [rbx],ebx
   140011fc2:	lahf   
   140011fc3:	rex jmp 0x140011f5a
   140011fc6:	mov    cl,0xd1
   140011fc8:	adc    edx,eax
   140011fca:	push   rdx
   140011fcb:	enter  0xdada,0x3a
   140011fcf:	mov    ch,0x6a
   140011fd1:	xchg   ebp,eax
   140011fd2:	pop    rsi
   140011fd3:	adc    al,0xb3
   140011fd5:	mov    esp,0xd0f0cab2
   140011fda:	nop
   140011fdb:	xor    DWORD PTR [rbx+0x75472cd4],ebx
   140011fe1:	cmp    DWORD PTR [rbp+0x6bd0c616],edi
   140011fe7:	(bad)  
   140011fe8:	sub    ch,BYTE PTR [rax+0x68]
   140011feb:	ja     0x140012047
   140011fed:	or     al,0x35
   140011fef:	sbb    eax,DWORD PTR [rbx+0x59b5f93]
   140011ff5:	movabs ds:0xe93dc14b2aa43e1e,eax
   140011ffe:	or     eax,0x586173a2
   140012003:	(bad)  
   140012004:	imul   esi,DWORD PTR [rdx+r14*1-0x3494adf2],0x9
   14001200d:	jo     0x140011fd4
   14001200f:	(bad)  
   140012010:	popf   
   140012011:	adc    esi,DWORD PTR [rax]
   140012013:	(bad)
   140012016:	in     al,0x46
   140012018:	adc    al,BYTE PTR [rsi+0x6a]
   14001201b:	fild   DWORD PTR [rdi-0x725b4927]
   140012021:	xor    al,0x8f
   140012023:	mov    esp,0x35168b8
   140012028:	sub    al,dh
   14001202a:	movabs eax,ds:0xe46edf1728656641
   140012033:	std    
   140012034:	imul   ebx,DWORD PTR [rbp+0x1249cb75],0xffffffc5
   14001203b:	cli    
   14001203c:	cli    
   14001203d:	sbb    al,BYTE PTR [rbx+0x43]
   140012040:	ret    
   140012041:	add    al,0xbe
   140012043:	(bad)  
   140012044:	jp     0x140012001
   140012046:	(bad)  
   140012047:	xchg   ebx,eax
   140012048:	rex.WRXB cmp rax,0x33adb6c9
   14001204e:	(bad)  
   14001204f:	(bad)  
   140012050:	addr32 jmp 0xfaf5fbcc
   140012056:	pop    rbp
   140012057:	movabs ds:0x152138a2138fd158,al
   140012060:	ds stos DWORD PTR es:[rdi],eax
   140012062:	rex.WXB
   140012063:	repz jl 0x140012065
   140012066:	mov    DWORD PTR [rdi-0x6c2e0b87],eax
   14001206c:	mov    esp,0xad1cee75
   140012071:	jbe    0x14001200e
   140012073:	cmp    BYTE PTR [rsi-0x2ef4b62f],cl
   140012079:	lahf   
   14001207a:	movabs ds:0xef4b2af2ee732e54,eax
   140012083:	mov    esi,0xfa7f27ca
   140012088:	ds cld 
   14001208a:	xchg   r8,r14
   14001208d:	push   rsp
   14001208e:	lahf   
   14001208f:	push   rdi
   140012091:	(bad)  
   140012092:	stc    
   140012093:	or     bl,BYTE PTR [rbp-0x56ad708a]
   140012099:	add    al,0x8
   14001209b:	(bad)  
   14001209c:	int    0x21
   14001209e:	out    0xe7,al
   1400120a0:	out    0xe9,al
   1400120a2:	jbe    0x1400120df
   1400120a4:	push   0x33e7810d
   1400120a9:	ds rex.RX cmps DWORD PTR ss:[rsi],DWORD PTR es:[rdi]
   1400120ad:	rol    ebx,cl
   1400120af:	(bad)  
   1400120b0:	ficomp WORD PTR [rdx-0x15]
   1400120b3:	ins    DWORD PTR es:[rdi],dx
   1400120b4:	movabs ds:0x8d60fce92f0c1a28,al
   1400120bd:	push   rcx
   1400120be:	adc    eax,0x209f03f2
   1400120c3:	or     al,0x58
   1400120c5:	pop    rbx
   1400120c6:	imul   ebx,DWORD PTR [rcx+0x7],0x61
   1400120ca:	ja     0x1400120bf
   1400120cc:	sub    DWORD PTR [rbx-0x6ad4aab8],esi
   1400120d2:	mov    ebp,0x6216ace6
   1400120d7:	test   DWORD PTR [rax],ecx
   1400120d9:	cmp    al,0x5b
   1400120db:	(bad)  
   1400120dc:	leave  
   1400120dd:	std    
   1400120de:	push   rbx
   1400120df:	(bad)  
   1400120e0:	movabs eax,ds:0x344c2b4ba1f61840
   1400120e9:	xor    eax,0xfb9800e0
   1400120ee:	mov    BYTE PTR [rbx+rbp*8-0x2045a911],cl
   1400120f5:	fsubr  DWORD PTR [rsi+0x19]
   1400120f8:	in     al,dx
   1400120f9:	rex.WRX sbb BYTE PTR [rax],r15b
   1400120fc:	(bad)  
   1400120fd:	pop    rbx
   1400120fe:	sti    
   1400120ff:	sbb    edx,DWORD PTR [rdi]
   140012101:	sub    BYTE PTR [rax+0x13],dh
   140012104:	push   0xfffffffff77ff26d
   140012109:	lahf   
   14001210a:	pop    rbx
   14001210b:	jg     0x1400120cb
   14001210d:	loope  0x140012176
   14001210f:	in     al,dx
   140012110:	jmp    0x1666673bd
   140012115:	(bad)  
   140012116:	lods   al,BYTE PTR ds:[rsi]
   140012117:	jo     0x1400120e0
   140012119:	jp     0x140012186
   14001211b:	popf   
   14001211c:	test   DWORD PTR [rbx],ebp
   14001211e:	out    0x98,eax
   140012120:	sahf   
   140012121:	fisttp QWORD PTR [rbx]
   140012123:	pop    rsi
   140012124:	cdq    
   140012125:	jle    0x1400120ce
   140012127:	rex.WRB scas rax,QWORD PTR es:[rdi]
   140012129:	(bad)  
   14001212a:	ror    DWORD PTR [rdi-0x43d017b3],cl
   140012130:	adc    dl,BYTE PTR [rdi-0x51]
   140012133:	pop    rbp
   140012134:	jrcxz  0x140012107
   140012136:	xchg   DWORD PTR [rdi],ebx
   140012138:	loopne 0x140012106
   14001213a:	fnstenv [rdi-0x78]
   14001213d:	in     al,dx
   14001213e:	lods   al,BYTE PTR ds:[rsi]
   14001213f:	jnp    0x1400120d3
   140012141:	push   0xffffffffffffffb4
   140012143:	hlt    
   140012144:	xchg   ecx,eax
   140012145:	(bad)  
   140012146:	sbb    eax,0xc411283f
   14001214b:	or     eax,DWORD PTR [rcx+riz*2-0x42d08c40]
   140012152:	leave  
   140012153:	fs pop rcx
   140012155:	xor    DWORD PTR [rbx-0x1e],edi
   140012158:	push   rbx
   140012159:	test   ch,dl
   14001215b:	and    esi,ebx
   14001215d:	jle    0x140012142
   14001215f:	push   rbp
   140012160:	sahf   
   140012161:	jnp    0x140012144
   140012163:	jns    0x14001210f
   140012165:	mov    ch,0x3a
   140012167:	pop    rdx
   140012168:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012169:	xchg   esp,eax
   14001216a:	sub    edx,DWORD PTR [rip+0x30b1e7a4]        # 0x170b30914
   140012170:	(bad)  
   140012171:	xchg   DWORD PTR [rdx+rax*4+0x1f194d24],edx
   140012178:	(bad)  
   140012179:	and    eax,0x7273238a
   14001217e:	sti    
   14001217f:	xchg   edx,eax
   140012180:	outs   dx,BYTE PTR ds:[rsi]
   140012181:	mov    bh,0x47
   140012183:	mov    ebx,0x7656c9db
   140012188:	cmp    DWORD PTR [rdx-0x15325593],edi
   14001218e:	(bad)  
   14001218f:	lods   eax,DWORD PTR ds:[rsi]
   140012190:	push   rbx
   140012191:	jl     0x14001217c
   140012193:	push   rcx
   140012194:	(bad)  
   140012195:	rex.XB (bad) 
   140012198:	ins    DWORD PTR es:[rdi],dx
   140012199:	cli    
   14001219a:	jno    0x14001211e
   14001219c:	mov    dh,0x1a
   14001219e:	jge    0x140012209
   1400121a0:	xor    bl,BYTE PTR [rax-0x5b]
   1400121a3:	out    dx,al
   1400121a4:	mov    dh,0x28
   1400121a6:	rex.WB loope 0x14001213f
   1400121a9:	mov    esp,0x73a0675a
   1400121ae:	sub    eax,0x51239941
   1400121b3:	loope  0x1400121ef
   1400121b5:	add    al,BYTE PTR [rbx+0x9081f9f]
   1400121bb:	in     eax,0xda
   1400121bd:	mov    WORD PTR [rsi+rsi*2],cs
   1400121c0:	adc    bh,BYTE PTR [rbx-0x4e5c825]
   1400121c6:	loopne 0x1400121c7
   1400121c8:	outs   dx,BYTE PTR ds:[rsi]
   1400121c9:	xor    eax,0x70a2add8
   1400121ce:	add    BYTE PTR [rip+0xffffffffeba70a6e],al        # 0x12ba82c42
   1400121d4:	xchg   ebp,ebx
   1400121d6:	retf   0xd6e3
   1400121d9:	popf   
   1400121da:	out    0x67,eax
   1400121dc:	rcr    ch,1
   1400121de:	xlat   BYTE PTR ds:[rbx]
   1400121df:	mov    ebp,0xa572874e
   1400121e4:	rex.WR pop rax
   1400121e6:	sub    ah,BYTE PTR [rcx-0x31486b2d]
   1400121ec:	pop    rbp
   1400121ed:	and    cl,BYTE PTR [rcx-0x25917305]
   1400121f3:	(bad)  
   1400121f4:	push   rdx
   1400121f5:	shr    BYTE PTR [rbp+0x77],1
   1400121f8:	call   0xe4525344
   1400121fd:	adc    BYTE PTR [rdx],dh
   1400121ff:	in     al,0xfc
   140012201:	mov    ch,0x35
   140012203:	(bad)  
   140012204:	(bad)  
   140012205:	fisub  WORD PTR [rbx]
   140012207:	pop    rsp
   140012208:	pop    rdi
   140012209:	pop    rsp
   14001220a:	and    cl,BYTE PTR [rdx+0x34]
   14001220d:	lods   eax,DWORD PTR ds:[rsi]
   14001220e:	jbe    0x1400121a7
   140012210:	cmp    BYTE PTR [rip+0x90277db],dh        # 0x1490399f1
   140012216:	and    DWORD PTR [rdi],0xfc75aa09
   14001221c:	rex.WX adc rax,0xffffffffbf332d5f
   140012222:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012223:	cmp    bh,dh
   140012225:	(bad)  
   140012226:	sub    DWORD PTR [rsi+0x62277edd],ecx
   14001222c:	loop   0x14001224e
   14001222e:	std    
   14001222f:	mul    BYTE PTR [rdx]
   140012231:	(bad)  
   140012232:	sahf   
   140012233:	jl     0x140012249
   140012235:	lods   eax,DWORD PTR ds:[rsi]
   140012236:	lea    esi,[rbx+0x2a]
   140012239:	xchg   edi,eax
   14001223a:	retf   
   14001223b:	clc    
   14001223c:	mov    esi,0x52d2c2cf
   140012241:	idiv   BYTE PTR [rdx+rax*8-0x6a0aab30]
   140012248:	fnsave [rbx+riz*4-0x2248bdac]
   14001224f:	add    eax,0xf4e79e34
   140012254:	cmc    
   140012255:	fcomp  QWORD PTR [rsi]
   140012257:	(bad)  
   140012258:	mov    ebx,0xb9405d22
   14001225d:	pop    rsp
   14001225e:	retf   0xc124
   140012261:	fstp   QWORD PTR [rax+0x6f]
   140012264:	stos   BYTE PTR es:[rdi],al
   140012265:	shr    DWORD PTR [rbp+rbx*4+0x3a],cl
   140012269:	in     al,0x3a
   14001226b:	and    al,0x58
   14001226d:	movabs eax,ds:0xbb35bdb02a8c2910
   140012276:	xchg   BYTE PTR [rcx-0x124e7ed2],bh
   14001227c:	lea    ebp,[rbp*2+0x5adc00e7]
   140012283:	jbe    0x14001225c
   140012285:	and    eax,0xff8339d4
   14001228a:	movabs eax,ds:0x80385414918fcbbf
   140012293:	add    dh,BYTE PTR [rdi]
   140012295:	test   DWORD PTR [rdx+rdx*2-0x61e24bf5],edx
   14001229c:	add    DWORD PTR [rdi+0x2972146c],esi
   1400122a2:	xor    BYTE PTR [rsi],0x85
   1400122a5:	mov    dl,0x28
   1400122a7:	mov    ch,BYTE PTR [rax]
   1400122a9:	xchg   ebp,eax
   1400122aa:	rex.WX
   1400122ab:	rex.RX cmc 
   1400122ad:	rex.RX ret 
   1400122af:	mov    ch,0xeb
   1400122b1:	xlat   BYTE PTR ds:[rbx]
   1400122b2:	or     BYTE PTR [rax+rcx*1],bh
   1400122b5:	imul   ecx,DWORD PTR [rbp-0x5e],0xffffffa8
   1400122b9:	rex.WRXB movabs r15,0x6179701f80a547d7
   1400122c3:	popf   
   1400122c4:	addr32 pop rsi
   1400122c6:	js     0x14001225d
   1400122c8:	test   ecx,edi
   1400122ca:	jmp    0x140012278
   1400122cc:	mov    bh,0xfb
   1400122ce:	mov    ah,0x3b
   1400122d0:	sbb    eax,0x90225fa4
   1400122d5:	(bad)  
   1400122d6:	sbb    BYTE PTR [rax],0x5f
   1400122d9:	push   0x54
   1400122db:	(bad)  
   1400122dc:	es in  eax,dx
   1400122de:	scas   al,BYTE PTR es:[rdi]
   1400122df:	jrcxz  0x14001235a
   1400122e1:	jbe    0x14001226f
   1400122e3:	push   rsi
   1400122e4:	mov    ch,0x38
   1400122e6:	std    
   1400122e7:	test   BYTE PTR [rdx],0xd3
   1400122ea:	or     eax,0x13f6fa9f
   1400122ef:	push   rsp
   1400122f0:	rex.WX or rax,0x29ee7f9e
   1400122f6:	push   rsi
   1400122f7:	push   rsi
   1400122f8:	push   rsi
   1400122f9:	or     BYTE PTR [rdx+0x41242910],al
   1400122ff:	sbb    dl,dl
   140012301:	in     eax,dx
   140012302:	jbe    0x1400122ed
   140012304:	mul    DWORD PTR [rdx]
   140012306:	je     0x1400122a2
   140012308:	push   rdx
   140012309:	(bad)  
   14001230a:	add    ebp,DWORD PTR [rdx+0x6edd0ad5]
   140012310:	(bad)  
   140012311:	mov    ebx,ss
   140012313:	or     DWORD PTR [rcx-0x45],ecx
   140012316:	shl    DWORD PTR [rbp+0x11a48a1b],cl
   14001231c:	out    0xb0,eax
   14001231e:	add    eax,0x82a8633e
   140012323:	xor    al,0x15
   140012325:	xchg   esp,eax
   140012326:	rex.WX adc rax,0xffffffff8e2638a2
   14001232c:	(bad)  
   14001232d:	push   rsp
   14001232e:	(bad)  
   14001232f:	push   rsi
   140012330:	jb     0x1400122cd
   140012332:	sahf   
   140012333:	mov    ebp,0x67420675
   140012338:	rcr    bh,cl
   14001233a:	stc    
   14001233b:	lods   eax,DWORD PTR ds:[rsi]
   14001233c:	(bad)  
   14001233d:	fld    DWORD PTR [rdx]
   14001233f:	push   rax
   140012340:	sub    DWORD PTR [rbx+0x694a5fbc],esi
   140012346:	xlat   BYTE PTR ds:[rbx]
   140012347:	lods   al,BYTE PTR ds:[rsi]
   140012348:	or     esp,DWORD PTR [rbx-0x25f16c1e]
   14001234e:	jp     0x14001232a
   140012350:	xchg   edx,eax
   140012351:	jge    0x140012307
   140012353:	jne    0x140012391
   140012355:	out    0x3e,al
   140012357:	outs   dx,BYTE PTR ds:[rsi]
   140012358:	(bad)  
   140012359:	jmp    0x140012368
   14001235b:	sub    eax,0xe435173e
   140012360:	clc    
   140012361:	or     DWORD PTR [rdi],edi
   140012363:	xchg   esi,eax
   140012364:	mov    edi,0x91ed8ff1
   140012369:	or     bh,ah
   14001236b:	or     DWORD PTR [rbx+rbp*8-0xaef2489],eax
   140012372:	(bad)  
   140012373:	stc    
   140012374:	cmp    ebx,esp
   140012376:	add    ah,cl
   140012378:	(bad)  
   140012379:	(bad)  
   14001237a:	rex.WB add bl,r10b
   14001237d:	push   rax
   14001237e:	(bad)  
   14001237f:	cmp    eax,0x59dfa7df
   140012384:	movabs ds:0x5afe2a6aa0c8061c,al
   14001238d:	movabs al,ds:0xe72bccf3ef5d5808
   140012396:	cmp    BYTE PTR [rdi-0x1f],bh
   140012399:	sbb    al,0x2b
   14001239b:	stos   DWORD PTR es:[rdi],eax
   14001239c:	retf   
   14001239d:	rex.R mov cl,0x22
   1400123a0:	lods   al,BYTE PTR ds:[rsi]
   1400123a1:	(bad)  
   1400123a2:	sub    BYTE PTR [rbp-0x36],dl
   1400123a5:	test   BYTE PTR [rdx+0x51],al
   1400123a8:	scas   al,BYTE PTR es:[rdi]
   1400123a9:	(bad)  
   1400123aa:	fdivr  DWORD PTR [rbx-0x3a0e089]
   1400123b0:	loop   0x1400123c9
   1400123b2:	cmp    DWORD PTR [rsi-0xc],edi
   1400123b5:	or     BYTE PTR [rcx-0x41],ch
   1400123b8:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400123ba:	xor    edx,eax
   1400123bc:	pop    rax
   1400123bd:	xor    esp,DWORD PTR [rdi+rdx*4+0x1dfaf096]
   1400123c4:	mov    dh,0x1e
   1400123c6:	mov    eax,0x5997ed1b
   1400123cb:	pop    rcx
   1400123cc:	mov    esp,0xae97bbca
   1400123d1:	adc    DWORD PTR [rsi-0x52afefdb],eax
   1400123d7:	(bad)  
   1400123d8:	push   0x3bb43a77
   1400123dd:	ins    DWORD PTR es:[rdi],dx
   1400123de:	repz (bad) 
   1400123e0:	(bad)  
   1400123e1:	data16 icebp 
   1400123e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123e4:	movabs r9,0xe9807bf5ef3facd
   1400123ee:	add    dh,BYTE PTR [rsi-0x6763104e]
   1400123f4:	nop
   1400123f5:	(bad)  
   1400123f6:	xor    al,0x4d
   1400123f8:	lock std 
   1400123fa:	add    BYTE PTR [rbp+0x6451fa12],ah
   140012400:	fild   DWORD PTR [rbp+0x732c48a]
   140012406:	mov    ch,0x9b
   140012408:	mov    ebx,0x37bc2c84
   14001240d:	movabs eax,ds:0x2b3e70b9062387bd
   140012416:	(bad)  
   140012417:	mov    edx,0x60ba95a
   14001241c:	repnz (bad) 
   14001241e:	pop    rax
   14001241f:	(bad)  
   140012420:	loope  0x14001244a
   140012422:	ret    0x56f9
   140012425:	(bad)  
   140012426:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012427:	mov    ecx,0x6fd18420
   14001242c:	retf   
   14001242d:	rex.RXB adc r11d,r9d
   140012430:	add    edx,DWORD PTR [rdi]
   140012432:	pop    rbp
   140012433:	add    BYTE PTR [rdx],0x1f
   140012436:	adc    bl,BYTE PTR [rcx+rcx*4-0x31]
   14001243a:	lods   al,BYTE PTR ds:[rsi]
   14001243b:	test   al,0x4a
   14001243d:	rex.WB mov r13b,0xa9
   140012440:	rex.WRX (bad) 
   140012443:	sub    DWORD PTR [rsi+0x4d],0x2952a2b7
   14001244a:	and    DWORD PTR gs:[rbx-0xd99e98f],esi
   140012451:	rex.WRB xchg BYTE PTR [rip+0x4e215844],r10b        # 0x18e227c9c
   140012458:	int    0xba
   14001245a:	in     eax,dx
   14001245b:	addr32 pop rdi
   14001245d:	jns    0x1400123fa
   14001245f:	xor    esp,edi
   140012461:	scas   al,BYTE PTR es:[rdi]
   140012462:	movabs ds:0x5a8d4aa501783ee3,eax
   14001246b:	lods   eax,DWORD PTR ds:[rsi]
   14001246c:	(bad)
   140012470:	xor    al,0x43
   140012472:	jp     0x1400124c5
   140012474:	int3   
   140012475:	(bad)  
   140012476:	fldcw  WORD PTR [rbp+0x7c]
   140012479:	jmp    0x19c2d233d
   14001247e:	mov    edx,0xf07f897a
   140012483:	idiv   edi
   140012485:	ds mov edx,0xaa57843c
   14001248b:	xchg   edx,eax
   14001248c:	xchg   esp,eax
   14001248d:	imul   r10d,DWORD PTR [rbx+r13*1-0x24],0xf9867875
   140012496:	fld    QWORD PTR [rdi-0x47]
   140012499:	je     0x140012495
   14001249b:	jns    0x1400124fb
   14001249d:	jl     0x140012494
   14001249f:	jne    0x1400124df
   1400124a1:	jb     0x14001249f
   1400124a3:	and    BYTE PTR [rbp-0x4a9578a2],bh
   1400124a9:	rex.WX (bad) 
   1400124ab:	out    dx,eax
   1400124ac:	shr    edi,cl
   1400124ae:	cmc    
   1400124af:	(bad)  
   1400124b0:	push   0x73243ac8
   1400124b5:	jb     0x140012451
   1400124b7:	push   rax
   1400124b8:	pop    rdi
   1400124b9:	shr    ch,1
   1400124bb:	rex.RXB test al,0x24
   1400124be:	xor    DWORD PTR [rdi+0x275b4],esp
   1400124c4:	imul   ebp,DWORD PTR [rdx+0x4e],0xe504295f
   1400124cb:	push   rdx
   1400124cc:	adc    al,0x19
   1400124cf:	and    eax,0x62a55a9f
   1400124d4:	pop    rdx
   1400124d5:	sub    BYTE PTR [rdx],0x35
   1400124d8:	in     eax,dx
   1400124d9:	rex.WX
   1400124da:	mul    BYTE PTR gs:[rax+rdi*1]
   1400124de:	cwde   
   1400124df:	adc    ebx,ecx
   1400124e1:	je     0x1400124e5
   1400124e3:	adc    al,0x1a
   1400124e5:	test   bl,bl
   1400124e7:	in     al,dx
   1400124e8:	and    edx,DWORD PTR [rcx]
   1400124ea:	xor    dh,BYTE PTR [rip+0x3af6d883]        # 0x17af7fd73
   1400124f0:	rex.WX sub QWORD PTR [rdx],rsi
   1400124f3:	pop    rbp
   1400124f4:	rex movabs ds:0xfb16f5305531bc9c,eax
   1400124fe:	xchg   esp,eax
   1400124ff:	ins    BYTE PTR es:[rdi],dx
   140012500:	icebp  
   140012501:	(bad)  
   140012502:	sti    
   140012503:	mov    esp,ecx
   140012505:	imul   BYTE PTR [rdi-0x33]
   140012508:	loopne 0x140012579
   14001250a:	rex.R loope 0x14001250d
   14001250d:	or     bl,ah
   14001250f:	adc    al,0xae
   140012511:	retf   0x842f
   140012514:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012516:	xor    DWORD PTR [rdx-0x18],eax
   140012519:	or     eax,0xa6d6a7f9
   14001251e:	stos   BYTE PTR es:[rdi],al
   14001251f:	popf   
   140012520:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012521:	(bad)  
   140012522:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140012524:	add    cl,BYTE PTR [rax]
   140012526:	xchg   esp,eax
   140012527:	sub    eax,0x25ca5596
   14001252c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001252d:	popf   
   14001252e:	iret   
   14001252f:	pop    QWORD PTR [rbp-0x77]
   140012532:	mov    ch,0x4e
   140012534:	lahf   
   140012535:	repz xchg edi,eax
   140012537:	out    0x39,eax
   140012539:	cmc    
   14001253a:	(bad)  
   14001253b:	xor    eax,0x83221784
   140012540:	(bad)  
   140012541:	in     eax,0xc6
   140012543:	adc    BYTE PTR [rbx-0x3d],al
   140012546:	jrcxz  0x14001259c
   140012548:	(bad)  
   140012549:	jne    0x1400125bf
   14001254b:	jnp    0x1400124de
   14001254d:	cmp    ecx,DWORD PTR [rdi+0xb9de0ee]
   140012553:	or     edi,DWORD PTR [rbp+rsi*8-0x2c3a40a]
   14001255a:	int3   
   14001255b:	shl    DWORD PTR [rdi+rax*4],cl
   14001255e:	(bad)  
   14001255f:	or     al,0xf
   140012561:	psrlq  mm2,QWORD PTR [rdx-0x6e]
   140012565:	adc    al,0x48
   140012567:	push   rsp
   140012568:	rex.WX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001256a:	adc    edx,ecx
   14001256c:	pushf  
   14001256d:	scas   al,BYTE PTR es:[rdi]
   14001256e:	mov    al,0x69
   140012570:	fist   DWORD PTR [rcx]
   140012572:	mov    esp,0xcee215d6
   140012577:	adc    bh,BYTE PTR [rsi+0x10]
   14001257a:	loopne 0x1400125c5
   14001257c:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001257e:	pop    rsp
   14001257f:	movabs eax,ds:0x539c36514513ebdb
   140012588:	cs xchg edi,eax
   14001258a:	mov    DWORD PTR [rbx+0x70d82a45],edx
   140012590:	pop    rbx
   140012591:	imul   edi,edx,0x52a54271
   140012597:	and    cl,BYTE PTR [rax]
   140012599:	rex.X adc dl,BYTE PTR [rbp+0x253493d8]
   1400125a0:	jne    0x1400125c9
   1400125a2:	mov    ebx,0x591deb0d
   1400125a7:	sub    BYTE PTR [rcx-0x76],dl
   1400125aa:	(bad)  
   1400125ab:	mov    dh,0x12
   1400125ad:	mov    ah,0x4e
   1400125af:	lea    edx,[rbx]
   1400125b1:	mov    ah,0xa2
   1400125b3:	movabs al,ds:0xf9b4de109895eb22
   1400125bc:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400125be:	test   eax,0xfee4f0e5
   1400125c3:	retf   
   1400125c4:	(bad)  
   1400125c5:	rex.WRXB test BYTE PTR [r13+0x6c1214af],r15b
   1400125cc:	jno    0x1400125de
   1400125ce:	sub    eax,0x17e4f650
   1400125d3:	sbb    ecx,ebp
   1400125d5:	rex.RXB (bad) 
   1400125d7:	enter  0x68d,0xbb
   1400125db:	push   0x6c0d0cc2
   1400125e0:	sbb    BYTE PTR [rax],dh
   1400125e2:	cld    
   1400125e3:	and    BYTE PTR [rax],ch
   1400125e5:	sbb    al,0x40
   1400125e7:	sbb    DWORD PTR [rbx-0x46037a3d],0x3cf3df5c
   1400125f1:	imul   ebp,DWORD PTR [rax],0xa
   1400125f4:	mov    bh,0xed
   1400125f6:	push   rsi
   1400125f7:	test   eax,0x82b56a84
   1400125fc:	out    dx,eax
   1400125fd:	jnp    0x1400125f3
   1400125ff:	movabs ds:0x4a409b1f184a3888,eax
   140012608:	(bad)  
   140012609:	mov    ch,0xf5
   14001260b:	push   rbp
   14001260c:	je     0x1400125c6
   14001260e:	cdq    
   14001260f:	mov    ecx,0x5e6f3ed5
   140012614:	pop    rax
   140012615:	and    dl,al
   140012617:	(bad)  
   140012618:	sub    al,0x97
   14001261a:	sbb    BYTE PTR [rsi],bl
   14001261c:	fimul  WORD PTR [rsi-0x43]
   14001261f:	lahf   
   140012620:	loopne 0x140012677
   140012622:	(bad)  
   140012623:	push   0xffffffffb211623c
   140012628:	mov    dl,0xda
   14001262a:	and    cl,BYTE PTR [rdx-0x1fdf7d9d]
   140012630:	mov    DWORD PTR [rdi],esp
   140012632:	lahf   
   140012633:	and    BYTE PTR [rsi+0x2eddba63],cl
   140012639:	rex.WX xchg rsp,rax
   14001263b:	mov    BYTE PTR [rbp-0x42caddb9],ah
   140012641:	cmp    BYTE PTR [rcx+0x7e2407ee],ah
   140012647:	cdq    
   140012648:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001264a:	(bad)  
   14001264b:	push   rax
   14001264c:	mov    ebp,0xd21e908a
   140012651:	repz lock mov ah,0xa0
   140012655:	fucomip st,st(3)
   140012657:	movabs ds:0xb30c294d6b4eab6c,al
   140012660:	scas   eax,DWORD PTR es:[rdi]
   140012661:	add    DWORD PTR [rcx+0x31],0x9b1a7313
   140012668:	mov    ch,0xe8
   14001266a:	push   rsi
   14001266b:	test   eax,0x9fa59b57
   140012670:	mov    esi,0x21a423ef
   140012675:	sbb    DWORD PTR [rcx-0x3c71a01e],ebx
   14001267b:	out    dx,eax
   14001267c:	mov    al,BYTE PTR [rsi+0x7eff5da]
   140012682:	ins    DWORD PTR es:[rdi],dx
   140012683:	ds xchg ecx,eax
   140012685:	or     bl,ah
   140012687:	movabs al,ds:0x859a0265b767654
   140012690:	push   0xffffffffffffffa9
   140012692:	mov    esi,0x18508319
   140012697:	jrcxz  0x1400126b0
   140012699:	rex.WRX jo 0x140012701
   14001269c:	movabs al,ds:0xe22ee16b0a5268ad
   1400126a5:	jb     0x140012699
   1400126a7:	ins    BYTE PTR es:[rdi],dx
   1400126a8:	ins    BYTE PTR es:[rdi],dx
   1400126a9:	lods   al,BYTE PTR ds:[rsi]
   1400126aa:	sub    ebx,esi
   1400126ac:	or     cl,BYTE PTR [rdx-0x647ebfe6]
   1400126b2:	rex.X pop rax
   1400126b4:	mov    esi,0x31821bb9
   1400126b9:	pop    rbx
   1400126ba:	jge    0x140012709
   1400126bc:	enter  0x42ef,0x7d
   1400126c0:	(bad)  
   1400126c1:	sbb    DWORD PTR [rbp+rdx*4+0x4a],ebp
   1400126c5:	xchg   ebp,eax
   1400126c6:	and    BYTE PTR [rax],cl
   1400126c8:	call   0x189462243
   1400126cd:	int3   
   1400126ce:	(bad)  
   1400126cf:	in     al,0xc
   1400126d1:	sub    cl,BYTE PTR [rcx+0x3ce97ab9]
   1400126d7:	xchg   ecx,eax
   1400126d8:	push   rdi
   1400126d9:	(bad)  
   1400126da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400126db:	(bad)  
   1400126dc:	pop    rax
   1400126dd:	imul   eax,DWORD PTR [rbp+0x34],0xc6a64d9a
   1400126e4:	xchg   DWORD PTR [rax],ebx
   1400126e6:	fistp  QWORD PTR [rbx+rax*1]
   1400126e9:	pop    rsi
   1400126ea:	sbb    DWORD PTR [rbp-0x2bb0acf4],esp
   1400126f0:	(bad)  
   1400126f1:	js     0x1400126ec
   1400126f3:	xchg   ebp,eax
   1400126f4:	ja     0x1400126df
   1400126f6:	ja     0x14001270c
   1400126f8:	mov    bl,0xb3
   1400126fa:	pop    rbx
   1400126fb:	pop    rax
   1400126fc:	pop    rbp
   1400126fd:	pop    rbp
   1400126fe:	gs jno 0x140012772
   140012701:	xchg   ecx,eax
   140012702:	scas   al,BYTE PTR es:[rdi]
   140012703:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012704:	or     al,0x2b
   140012706:	jl     0x14001268a
   140012708:	shr    BYTE PTR [rax+rcx*1-0x7dff430d],0x1a
   140012710:	sub    cl,BYTE PTR [rsi+0xc394101]
   140012716:	lods   al,BYTE PTR ds:[rsi]
   140012717:	rcr    DWORD PTR [rdx],1
   140012719:	rcl    DWORD PTR [rbx-0x345a3b62],cl
   14001271f:	sbb    dh,BYTE PTR [rbx+0x72]
   140012722:	cmp    dh,dl
   140012724:	(bad)  
   140012725:	stos   DWORD PTR es:[rdi],eax
   140012726:	push   rbx
   140012727:	cmp    BYTE PTR [rsi-0x60],al
   14001272a:	addr32 adc eax,0xfd55a480
   140012730:	jne    0x14001275d
   140012732:	mov    edi,0x8a2490d0
   140012737:	and    al,0xb1
   140012739:	fld    QWORD PTR [rcx]
   14001273b:	mov    ch,0x71
   14001273d:	rex.WXB mov r9b,0x3b
   140012740:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012741:	outs   dx,DWORD PTR ds:[rsi]
   140012742:	in     al,dx
   140012743:	test   DWORD PTR [rbx],0x40437121
   140012749:	cdq    
   14001274a:	test   al,0xa8
   14001274c:	jmp    0x140012766
   14001274e:	rex.W nop
   140012750:	ret    0x2db3
   140012753:	rex.XB jb 0x1400126dc
   140012756:	out    dx,eax
   140012757:	test   BYTE PTR [rdx],0xea
   14001275a:	sub    al,0x9a
   14001275c:	rol    dl,1
   14001275e:	xor    eax,0x807c0704
   140012763:	or     esp,0xdc2ee3b8
   140012769:	jp     0x1400127a5
   14001276b:	push   rax
   14001276c:	cmp    BYTE PTR [rax-0x6b7ac8fe],al
   140012772:	rcl    BYTE PTR [rbp+0x1],cl
   140012775:	jb     0x14001276a
   140012777:	(bad)  
   140012778:	test   eax,0xa8c763d
   14001277d:	mov    ?,WORD PTR [rsi+0x820ad55]
   140012783:	sub    BYTE PTR [rdi-0x36],dl
   140012786:	rex.R std 
   140012788:	(bad)  
   140012789:	sub    cl,BYTE PTR [rsi+0x18]
   14001278c:	(bad)  
   14001278d:	sbb    eax,0xb268dea5
   140012792:	js     0x14001277d
   140012794:	sub    al,0x1e
   140012796:	xor    DWORD PTR [rcx-0x57],ecx
   140012799:	mov    r9d,0xb8746156
   14001279f:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400127a1:	pop    rdx
   1400127a2:	rex.RB js 0x1400127ba
   1400127a5:	fs jge 0x14001272e
   1400127a8:	and    al,0xee
   1400127aa:	movabs ds:0x31374754aa0d2094,al
   1400127b3:	mov    ecx,0xbf7e9469
   1400127b8:	iret   
   1400127b9:	cli    
   1400127ba:	cli    
   1400127bb:	cmp    bl,ch
   1400127bd:	rex.WRX (bad) 
   1400127bf:	in     al,0xeb
   1400127c1:	xchg   ebp,eax
   1400127c2:	cmp    ah,BYTE PTR [rcx-0x4b]
   1400127c5:	mov    r9d,0xa8d1a0da
   1400127cb:	ror    BYTE PTR [rdi-0x6e95c5eb],1
   1400127d1:	push   0x3c2a9a41
   1400127d6:	fucomip st,st(4)
   1400127d8:	sub    DWORD PTR [rax-0x59],eax
   1400127db:	or     BYTE PTR [rcx],ch
   1400127dd:	push   rcx
   1400127de:	or     bh,dl
   1400127e0:	mov    ebp,0xb4c54488
   1400127e5:	(bad)  
   1400127e7:	and    DWORD PTR [rcx+0x33df4b1d],0x7
   1400127ee:	scas   eax,DWORD PTR es:[rdi]
   1400127ef:	mov    al,0xaf
   1400127f1:	rcr    DWORD PTR [rbx],1
   1400127f3:	push   rsp
   1400127f4:	repnz lods eax,DWORD PTR ds:[rsi]
   1400127f6:	rcl    DWORD PTR [rax+0x4e54e0de],cl
   1400127fc:	ins    DWORD PTR es:[rdi],dx
   1400127fd:	jp     0x14001278f
   1400127ff:	xor    eax,DWORD PTR [rbp-0x5]
   140012802:	mov    bl,0x83
   140012804:	ds mov esp,0x9cbc1290
   14001280a:	push   rax
   14001280b:	(bad)  
   14001280c:	or     eax,0xa2effba
   140012811:	xor    BYTE PTR [rdx+0x5859cec2],bh
   140012817:	(bad)  
   140012818:	xor    BYTE PTR [rsp+rax*4],0x3f
   14001281c:	sub    DWORD PTR [rdi],eax
   14001281e:	(bad)
   140012821:	mov    bh,0x22
   140012823:	mov    WORD PTR [rax+rdx*1+0x30],cs
   140012827:	xor    edi,DWORD PTR [rbx+rcx*1+0x53]
   14001282b:	add    edi,DWORD PTR [rbp+rsi*4+0x38520c5]
   140012832:	sub    al,dh
   140012834:	mov    esi,0xdc68db70
   140012839:	ror    BYTE PTR [rdx+rdx*2-0x5a4fdcd6],1
   140012840:	test   BYTE PTR [rax+0x75],0xe2
   140012844:	(bad)  
   140012845:	int    0x46
   140012847:	xchg   ebx,eax
   140012848:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001284a:	rex.WRB xchg r10,rax
   14001284c:	es add al,0x61
   14001284f:	enter  0xddae,0x87
   140012853:	cwde   
   140012854:	cmp    esi,edi
   140012856:	sbb    ah,BYTE PTR [rcx-0x24]
   140012859:	(bad)  
   14001285a:	ins    BYTE PTR es:[rdi],dx
   14001285b:	push   0x33
   14001285d:	in     eax,0x5a
   14001285f:	add    ebp,ecx
   140012861:	sti    
   140012862:	enter  0xca0,0x7e
   140012866:	mov    edx,esi
   140012868:	int3   
   140012869:	push   rcx
   14001286a:	or     BYTE PTR [rbx-0x2d4efbd8],bl
   140012870:	mov    BYTE PTR [rcx-0x537b3ba3],dh
   140012876:	sub    al,0x2d
   140012878:	movabs ds:0xa19b1b53e8529892,al
   140012881:	xor    dh,BYTE PTR [rdx]
   140012883:	adc    BYTE PTR [r14-0x58],dl
   140012887:	(bad)  
   140012888:	mov    ebx,?
   14001288a:	cwde   
   14001288b:	pop    rdi
   14001288c:	(bad)  
   14001288d:	movabs al,ds:0x1042104ae46a4abf
   140012896:	test   BYTE PTR [rcx-0x99e069f],ah
   14001289c:	or     BYTE PTR [rbp+rbp*4+0x31fb88b7],ch
   1400128a3:	push   rcx
   1400128a4:	(bad)  
   1400128a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128a6:	pop    rdx
   1400128a7:	test   eax,0x9e7f5a64
   1400128ac:	(bad)  
   1400128ad:	int3   
   1400128ae:	movabs ds:0x63a4eab6d1ba6c8d,al
   1400128b7:	icebp  
   1400128b8:	cdq    
   1400128b9:	jo     0x1400128f8
   1400128bb:	mov    cs,ebp
   1400128bd:	movsxd esp,DWORD PTR [rcx+0x28d2b453]
   1400128c3:	cmp    eax,0x8ed417d0
   1400128c8:	fsub   DWORD PTR [rbx+0x2b]
   1400128cb:	movabs ds:0x6d3329f22b3c4a42,al
   1400128d4:	(bad)  
   1400128d5:	rex.B call 0xf2d9c509
   1400128db:	jmp    0x1400128eb
   1400128dd:	mov    BYTE PTR [rcx-0x3c],al
   1400128e0:	(bad)  
   1400128e1:	mov    bl,0x80
   1400128e3:	int3   
   1400128e4:	fnstcw WORD PTR [r9]
   1400128e7:	sub    eax,DWORD PTR [r9]
   1400128ea:	xchg   esi,eax
   1400128eb:	movabs ds:0x4d106260cc12ab12,al
   1400128f4:	mov    dh,0x43
   1400128f6:	xor    DWORD PTR [rbp+0x6f],ecx
   1400128f9:	sub    eax,0x401c280a
   1400128fe:	xor    edi,0xa961b681
   140012904:	cmp    DWORD PTR [rcx],edx
   140012906:	push   rbp
   140012907:	stos   BYTE PTR es:[rdi],al
   140012908:	mov    dl,0x22
   14001290a:	lahf   
   14001290b:	mov    dh,0xca
   14001290d:	mov    ch,0x2e
   14001290f:	or     dl,BYTE PTR [rax]
   140012911:	rex.X xor BYTE PTR [rsi],dil
   140012914:	ds rex.RX mov ebx,0x638921d3
   14001291b:	adc    BYTE PTR [rdx-0x2cf178fd],al
   140012921:	jmp    0x1400128d8
   140012923:	imul   ebx,DWORD PTR [rdi+0x7c],0x59999999
   14001292a:	stos   BYTE PTR es:[rdi],al
   14001292b:	int    0x31
   14001292d:	xor    al,0x1e
   14001292f:	(bad)  
   140012931:	ror    DWORD PTR [rax-0x44],1
   140012934:	movabs eax,ds:0xc5bb76827efbaa19
   14001293d:	loop   0x140012929
   14001293f:	cmp    bh,BYTE PTR [rax+0x21]
   140012942:	leave  
   140012943:	call   0x13b547376
   140012948:	push   0xffffffffb6a4ed4c
   14001294d:	stc    
   14001294e:	add    dh,bh
   140012950:	call   0xef3cfccb
   140012955:	xor    QWORD PTR [rcx],r15
   140012958:	xor    DWORD PTR [rbp+riz*4-0x22],ecx
   14001295c:	imul   ebp,DWORD PTR fs:[rbp+0x255d6e8b],0xe6950195
   140012967:	or     BYTE PTR [rax-0x48b6c20f],ah
   14001296d:	(bad)  [rbp+0x5e94bfc5]
   140012973:	scas   eax,DWORD PTR es:[rdi]
   140012974:	rex.RXB sbb al,0x2b
   140012977:	stos   DWORD PTR es:[rdi],eax
   140012978:	lods   eax,DWORD PTR ds:[rsi]
   140012979:	(bad)  
   14001297a:	mov    esi,0x41021e7
   14001297f:	mov    esi,0x7aea6859
   140012984:	call   FWORD PTR [rdx]
   140012986:	repnz es imul esi,edx,0xfffffff5
   14001298b:	push   rsp
   14001298c:	(bad)  
   14001298e:	sti    
   14001298f:	imul   ecx,DWORD PTR [rdx+0x63548ad2],0x835a4088
   140012999:	rex.WRX xor BYTE PTR [rsi-0x40],r13b
   14001299d:	out    0xfc,al
   14001299f:	(bad)  
   1400129a0:	nop
   1400129a1:	int    0x8e
   1400129a3:	je     0x140012951
   1400129a5:	jae    0x14001296f
   1400129a7:	in     eax,0xf3
   1400129a9:	mov    dh,0x78
   1400129ab:	(bad)  
   1400129ac:	jns    0x1400129e0
   1400129ae:	fwait
   1400129af:	test   al,0x34
   1400129b1:	jne    0x1400129be
   1400129b3:	(bad)  
   1400129b4:	rex.WRX (bad) 
   1400129b6:	xchg   edx,eax
   1400129b7:	test   ah,bl
   1400129b9:	mov    DWORD PTR [rdi-0x1e738eb7],ebp
   1400129bf:	xor    al,0x35
   1400129c1:	sub    eax,ebx
   1400129c3:	(bad)  
   1400129c5:	mov    al,0x4a
   1400129c7:	popf   
   1400129c8:	xchg   esi,eax
   1400129c9:	cmp    BYTE PTR [rdx-0x7a9f2a1b],0x3
   1400129d0:	sub    al,dh
   1400129d2:	mov    esi,0xb6ab68c8
   1400129d7:	or     ch,BYTE PTR [rbp-0x71a17164]
   1400129dd:	leave  
   1400129de:	data16 mov bl,BYTE PTR [rsi+rax*2-0x6f]
   1400129e3:	rex.RXB jp 0x140012978
   1400129e6:	sahf   
   1400129e7:	ins    DWORD PTR es:[rdi],dx
   1400129e8:	vpcmpeqd ymm6,ymm4,ymm4
   1400129ec:	sbb    BYTE PTR [rbx],dh
   1400129ee:	mov    bl,0xdb
   1400129f0:	cmp    ch,bh
   1400129f2:	int3   
   1400129f3:	std    
   1400129f4:	rex.WR test BYTE PTR [rcx],r14b
   1400129f7:	fcomi  st,st(7)
   1400129f9:	in     eax,dx
   1400129fa:	rex.XB jns 0x140012a1b
   1400129fd:	pop    rdx
   1400129fe:	or     dl,BYTE PTR [rdx+rcx*4]
   140012a01:	rex.WRX mov dil,0x43
   140012a04:	mov    esp,0x7da504e9
   140012a09:	mul    ecx
   140012a0b:	jnp    0x140012a2b
   140012a0d:	and    esi,DWORD PTR [rbp-0x72b50ace]
   140012a13:	(bad)  
   140012a14:	fsub   DWORD PTR [rsi-0x44]
   140012a17:	rcr    DWORD PTR [rcx],1
   140012a19:	push   rsp
   140012a1a:	fsub   DWORD PTR [rax]
   140012a1c:	rex.WRB sti 
   140012a1e:	add    al,0xcd
   140012a20:	sbb    esp,edi
   140012a22:	ficomp DWORD PTR [rax]
   140012a24:	mov    ebx,0x4f58c767
   140012a29:	rex.XB (bad) 
   140012a2b:	xchg   edi,eax
   140012a2c:	out    0x51,al
   140012a2e:	jmp    0x140012a3b
   140012a30:	xchg   esp,eax
   140012a31:	stos   DWORD PTR es:[rdi],eax
   140012a32:	ret    
   140012a33:	fdiv   QWORD PTR [rsi-0x1c]
   140012a36:	xor    BYTE PTR [rdx],ch
   140012a38:	xor    edi,ecx
   140012a3a:	addr32 jns 0x140012aa2
   140012a3d:	cmp    ebx,edx
   140012a3f:	stc    
   140012a40:	imul   esi,DWORD PTR [rbp+0x3a],0x74
   140012a44:	sti    
   140012a45:	cmp    eax,0x612ebdba
   140012a4a:	sbb    dl,ah
   140012a4c:	(bad)  
   140012a4d:	xchg   BYTE PTR [rbp+0x58],ah
   140012a50:	test   eax,0xaf684d94
   140012a55:	push   rdx
   140012a56:	cmp    ecx,esp
   140012a58:	xchg   ebx,eax
   140012a59:	and    eax,0x3500c6f1
   140012a5e:	rex.R push rcx
   140012a60:	(bad)  
   140012a61:	mov    ah,0x46
   140012a63:	(bad)  
   140012a64:	xchg   edx,eax
   140012a65:	(bad)  
   140012a66:	lods   eax,DWORD PTR ds:[rsi]
   140012a67:	cli    
   140012a68:	push   rdx
   140012a69:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140012a6b:	lahf   
   140012a6c:	rex.X movabs ds:0xc984308a2c827572,eax
   140012a76:	in     al,dx
   140012a77:	fbstp  TBYTE PTR [rax-0x21]
   140012a7a:	fwait
   140012a7b:	stos   DWORD PTR es:[rdi],eax
   140012a7c:	fs jg  0x140012ac5
   140012a7f:	loop   0x140012aca
   140012a81:	(bad)  
   140012a82:	fwait
   140012a83:	adc    dh,BYTE PTR [rdi+rsi*8+0x65]
   140012a87:	jo     0x140012abe
   140012a89:	(bad)  
   140012a8a:	(bad)
   140012a8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012a8e:	sub    BYTE PTR [rbx+0x17db8b9],0xda
   140012a95:	sbb    al,0xff
   140012a97:	cmp    dh,BYTE PTR [rbp-0x4ca43d13]
   140012a9d:	inc    edx
   140012a9f:	add    DWORD PTR [rax+rdi*4],edx
   140012aa2:	cmp    DWORD PTR [rdx],esi
   140012aa4:	add    DWORD PTR [rsp+rbx*1+0x5e89ccf3],ebx
   140012aab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012aac:	outs   dx,BYTE PTR ds:[rsi]
   140012aad:	mov    cl,dh
   140012aaf:	repnz shl BYTE PTR [rbp-0x142a56b2],cl
   140012ab6:	or     al,0x35
   140012ab8:	(bad)  
   140012ab9:	sub    al,0x2f
   140012abb:	movabs cs:0x7ef793f3ad5aa6b5,al
   140012ac5:	(bad)  
   140012ac6:	rex.WXB out 0x4e,eax
   140012ac9:	xor    edi,DWORD PTR [rdi-0x16]
   140012acc:	(bad)  
   140012acd:	out    dx,al
   140012ace:	cmp    al,0x76
   140012ad0:	cwde   
   140012ad1:	mov    cl,0xa9
   140012ad3:	lods   eax,DWORD PTR ds:[rsi]
   140012ad4:	lods   al,BYTE PTR ds:[rsi]
   140012ad5:	lods   al,BYTE PTR ds:[rsi]
   140012ad6:	jbe    0x140012b31
   140012ad8:	ins    DWORD PTR es:[rdi],dx
   140012ad9:	jne    0x140012b33
   140012adb:	pop    rbx
   140012adc:	pop    rbx
   140012add:	and    DWORD PTR [rdx+0x5b],ebx
   140012ae0:	(bad)  
   140012ae1:	fs neg ebp
   140012ae4:	sbb    al,0xf8
   140012ae6:	test   eax,0xe6f8c8bf
   140012aeb:	ins    DWORD PTR es:[rdi],dx
   140012aec:	js     0x140012b40
   140012aee:	nop
   140012aef:	rex.RX pop rbp
   140012af1:	sar    BYTE PTR [rsi-0x7c],cl
   140012af4:	out    0x5,eax
   140012af6:	xchg   esp,eax
   140012af7:	(bad)  
   140012af8:	mul    BYTE PTR [rax]
   140012afa:	push   0xffffffffffffffd3
   140012afc:	mov    WORD PTR [rdx+rax*2],?
   140012aff:	jbe    0x140012acf
   140012b01:	rex.WRX jno 0x140012ac1
   140012b04:	pop    rbx
   140012b05:	movabs ds:0xd89919a17c25f17b,al
   140012b0e:	retf   0x99f6
   140012b11:	rex.WB stos QWORD PTR es:[rdi],rax
   140012b13:	in     al,dx
   140012b14:	movabs ds:0x31c7e921035d5958,eax
   140012b1d:	lods   eax,DWORD PTR ds:[rsi]
   140012b1e:	push   rsi
   140012b1f:	mov    edx,ebp
   140012b21:	mov    ch,0x75
   140012b23:	cmp    bl,BYTE PTR [rbp-0x3a952ad2]
   140012b29:	sbb    BYTE PTR [rsi+0x4a56a82f],bl
   140012b2f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012b30:	jae    0x140012ad3
   140012b32:	(bad)  
   140012b33:	hlt    
   140012b34:	xchg   BYTE PTR [rbx],cl
   140012b36:	out    0x7,eax
   140012b38:	test   DWORD PTR [rdx],edi
   140012b3a:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012b3c:	rol    DWORD PTR [rbx+0x48],cl
   140012b3f:	rex.B loopne 0x140012b3b
   140012b42:	rex.RX movabs ds:0x138b39a54f93b73b,al
   140012b4c:	mov    ?,WORD PTR [rbx+rax*2+0x6ecbf2d6]
   140012b53:	fidivr DWORD PTR [rax+0x25]
   140012b56:	in     eax,dx
   140012b57:	scas   eax,DWORD PTR es:[rdi]
   140012b58:	rcl    BYTE PTR [rsi+0x5a],1
   140012b5b:	rex.WRB pop r10
   140012b5d:	scas   al,BYTE PTR es:[rdi]
   140012b5e:	jg     0x140012afe
   140012b60:	jmp    0x152c899cc
   140012b65:	add    eax,0x9c00d4d
   140012b6a:	xchg   esi,eax
   140012b6b:	mov    eax,0x6e83cccd
   140012b70:	rex.WR (bad) 
   140012b72:	cmp    ah,BYTE PTR [rdi+0x5004450]
   140012b78:	ds rex.R mov eax,0xa2d77879
   140012b7f:	jb     0x140012b6e
   140012b81:	sub    al,0xcb
   140012b83:	(bad)  
   140012b84:	(bad)  
   140012b85:	(bad)  
   140012b86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012b87:	sbb    eax,0x80fc0d67
   140012b8c:	ins    DWORD PTR es:[rdi],dx
   140012b8d:	(bad)  [rsi+0x4cbcbcb3]
   140012b93:	xchg   edx,eax
   140012b94:	(bad)  
   140012b95:	mov    edx,r12d
   140012b98:	adc    ebx,DWORD PTR [rdi-0x44e26844]
   140012b9e:	div    cl
   140012ba0:	(bad)  
   140012ba1:	(bad)  
   140012ba2:	jg     0x140012b33
   140012ba4:	jb     0x140012b91
   140012ba6:	and    dh,BYTE PTR [rdi-0x22]
   140012ba9:	jns    0x140012bd2
   140012bab:	pop    rsi
   140012bac:	movsxd edx,DWORD PTR [rsi+rbx*2+0x53e908ac]
   140012bb3:	outs   dx,BYTE PTR ds:[rsi]
   140012bb4:	pop    rdi
   140012bb5:	rex.B int 0xbf
   140012bb8:	sbb    BYTE PTR [r8+rbp*4+0x32a7ef4c],r10b
   140012bc0:	jge    0x140012b52
   140012bc2:	retf   0x3ee4
   140012bc5:	push   0x33
   140012bc7:	xchg   DWORD PTR [rcx-0x6bbbe0b4],ebp
   140012bcd:	rex.WRB mov BYTE PTR [r15+0x6c],r15b
   140012bd1:	iret   
   140012bd2:	data16 shr dl,cl
   140012bd5:	or     BYTE PTR [rdi-0x1a],dl
   140012bd8:	out    0xe9,al
   140012bda:	pop    rbp
   140012bdb:	jl     0x140012be7
   140012bdd:	rex.WX
   140012bde:	rex.XB pushf 
   140012be0:	mov    eax,0x47466eeb
   140012be5:	rex.RXB or eax,0x63dbbfc7
   140012beb:	gs jns 0x140012b73
   140012bee:	adc    al,0x4d
   140012bf0:	mov    bh,0xd7
   140012bf2:	movabs ds:0x92948cbcb4b2e9d3,eax
   140012bfb:	push   rdx
   140012bfc:	push   rax
   140012bfd:	ret    0x1e93
   140012c00:	(bad)  
   140012c01:	loopne 0x140012c56
   140012c03:	scas   eax,DWORD PTR es:[rdi]
   140012c04:	fwait
   140012c05:	lea    eax,[rcx+0x2e]
   140012c08:	test   DWORD PTR [rcx],esi
   140012c0a:	and    edi,esp
   140012c0c:	cmp    dl,BYTE PTR [rdi-0x52a5f431]
   140012c12:	(bad)  
   140012c13:	sahf   
   140012c14:	out    0xa1,eax
   140012c16:	xor    al,0x36
   140012c18:	fiadd  DWORD PTR [rcx]
   140012c1a:	popf   
   140012c1b:	es jbe 0x140012c34
   140012c1e:	add    BYTE PTR [rdi*2+0x1fc2f183],bh
   140012c25:	and    esp,ebx
   140012c27:	jmp    0x196573a66
   140012c2c:	rex.WRB movabs r10,0x9e9e86c1549e647a
   140012c36:	test   eax,0x3519a7f8
   140012c3b:	cmp    BYTE PTR [rbp+0xad6bea7],dh
   140012c41:	rex.RB push 0x55
   140012c44:	test   DWORD PTR [rcx+rbp*2],esi
   140012c47:	adc    DWORD PTR [rcx],eax
   140012c49:	adc    al,0xf8
   140012c4b:	mov    al,0xa0
   140012c4d:	ins    DWORD PTR es:[rdi],dx
   140012c4e:	cmp    ecx,ebx
   140012c50:	repz fsubr QWORD PTR [rsi]
   140012c53:	add    BYTE PTR [rbx+0x1a],dh
   140012c56:	mov    edx,0xaed52034
   140012c5b:	push   rcx
   140012c5c:	gs jp  0x140012c41
   140012c5f:	imul   ebx,DWORD PTR [rdx+0x2ccb65b2],0x3f301041
   140012c69:	(bad)  
   140012c6a:	(bad)
   140012c6e:	int    0x61
   140012c70:	idiv   DWORD PTR ds:[rcx-0x3a0d1da1]
   140012c77:	mov    bh,0xf9
   140012c79:	out    0xef,al
   140012c7b:	cld    
   140012c7c:	cmp    al,BYTE PTR [rdi+0x66]
   140012c7f:	stos   DWORD PTR es:[rdi],eax
   140012c80:	jl     0x140012c78
   140012c82:	xor    esi,edi
   140012c84:	mov    dl,0x75
   140012c86:	sti    
   140012c87:	lods   al,BYTE PTR ds:[rsi]
   140012c88:	(bad)  
   140012c89:	ret    0x18a9
   140012c8c:	(bad)  
   140012c8d:	pop    rdx
   140012c8e:	and    bl,BYTE PTR [rsi-0x47]
   140012c91:	rex.RX ficomp DWORD PTR [rcx+0x5]
   140012c95:	sub    eax,esi
   140012c97:	sub    eax,DWORD PTR [rbx+0x8]
   140012c9a:	scas   eax,DWORD PTR es:[rdi]
   140012c9b:	mov    WORD PTR [rdx-0x5a],ss
   140012c9e:	(bad)  
   140012c9f:	jg     0x140012d15
   140012ca1:	mul    DWORD PTR [rbx+rdi*4]
   140012ca4:	ja     0x140012d15
   140012ca6:	out    0xad,eax
   140012ca8:	xor    eax,0x1fd7b99f
   140012cad:	rex.RB je 0x140012cc7
   140012cb0:	icebp  
   140012cb1:	stos   DWORD PTR es:[rdi],eax
   140012cb2:	movsxd edi,DWORD PTR [rsp+rsi*8-0x3c]
   140012cb6:	adc    DWORD PTR [rdx+0x25],ecx
   140012cb9:	(bad)  
   140012cba:	lea    esp,[rax+0x65]
   140012cbd:	test   DWORD PTR gs:[rbp+0x3f0279f9],eax
   140012cc4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012cc5:	fucomp st(6)
   140012cc7:	shr    bl,cl
   140012cc9:	idiv   DWORD PTR [rax-0x5e718282]
   140012ccf:	loope  0x140012d32
   140012cd1:	retf   0x10e5
   140012cd4:	loope  0x140012d1f
   140012cd6:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140012cd8:	or     dl,ch
   140012cda:	rex.WX (bad) 
   140012cdd:	xor    DWORD PTR [rdx+rbx*4-0x57],esi
   140012ce1:	hlt    
   140012ce2:	add    BYTE PTR [rcx-0x7d6f40bc],bl
   140012ce8:	in     eax,0xe5
   140012cea:	and    eax,0x3228693c
   140012cef:	test   eax,0xa2c6cd4a
   140012cf4:	and    al,0xb1
   140012cf6:	jae    0x140012cfb
   140012cf8:	rex.RX push rsp
   140012cfa:	push   rsp
   140012cfb:	cmp    ebx,DWORD PTR [rcx+0x2f]
   140012cfe:	sbb    ebx,DWORD PTR [rip+0x67327b28]        # 0x1a733a82c
   140012d04:	in     eax,dx
   140012d05:	mov    edx,0x8b38171c
   140012d0a:	movabs ds:0xd822471f5546e484,al
   140012d13:	shl    al,0xb5
   140012d16:	cld    
   140012d17:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140012d19:	adc    eax,0xc8e40f4a
   140012d1e:	rex
   140012d1f:	fwait
   140012d20:	jns    0x140012d2c
   140012d22:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012d23:	int    0xef
   140012d25:	rex.WRB shl QWORD PTR [r10-0x3c1faff5],cl
   140012d2c:	xor    DWORD PTR [rdx+rdi*4-0x249250a],0xffffffdc
   140012d34:	mov    ebp,esp
   140012d36:	push   rsi
   140012d37:	js     0x140012cde
   140012d39:	push   rsi
   140012d3a:	repnz fimul DWORD PTR [rax+rcx*1-0x4aa9bd65]
   140012d42:	pop    rdx
   140012d43:	data16 (bad) 
   140012d45:	(bad)  
   140012d46:	jge    0x140012da4
   140012d48:	mov    ebp,0xee38957a
   140012d4d:	shr    DWORD PTR [rdx-0x49],cl
   140012d50:	mov    ecx,0xf38f9efb
   140012d55:	addr32 (bad) 
   140012d57:	fsubr  QWORD PTR [rdi]
   140012d59:	jae    0x140012d55
   140012d5b:	(bad)
   140012d5e:	repnz pop rdi
   140012d60:	(bad)  
   140012d61:	cmp    eax,0xca35d9ee
   140012d66:	(bad)  
   140012d67:	jle    0x140012d5f
   140012d69:	pop    rsi
   140012d6a:	imul   ah
   140012d6c:	fisttp WORD PTR [rbx-0x7c]
   140012d6f:	iret   
   140012d70:	jp     0x140012d19
   140012d72:	rex.RXB (bad) 
   140012d74:	push   rcx
   140012d75:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012d76:	and    ah,BYTE PTR [rax]
   140012d78:	rex.WB
   140012d79:	rex.WRB or r15b,r11b
   140012d7c:	(bad)  
   140012d7d:	adc    esp,DWORD PTR [rdi+rbp*8+0x2dfefb71]
   140012d84:	jl     0x140012d68
   140012d86:	scas   al,BYTE PTR es:[rdi]
   140012d87:	sub    DWORD PTR [rdx+rdi*8],0x23
   140012d8b:	pushf  
   140012d8c:	jg     0x140012d71
   140012d8e:	gs out 0x7f,al
   140012d91:	lock xor eax,0x1d92fbd6
   140012d97:	(bad)  [rsi-0x7c49038f]
   140012d9d:	je     0x140012dda
   140012d9f:	pop    rbp
   140012da0:	mov    ah,0x86
   140012da2:	ja     0x140012d72
   140012da4:	mov    ebp,0x1d3bb43
   140012da9:	sub    DWORD PTR [rax+0x77],ebp
   140012dac:	fisubr DWORD PTR [rsp+rbp*1]
   140012daf:	sub    al,0x92
   140012db1:	(bad)  
   140012db2:	or     DWORD PTR [rbx-0x51b339da],ebx
   140012db8:	(bad)  
   140012db9:	add    al,0xf5
   140012dbb:	pop    rdx
   140012dbc:	xchg   ebp,eax
   140012dbd:	push   rdx
   140012dbe:	test   eax,0x3249c44
   140012dc3:	cmp    eax,0x66f5acbe
   140012dc8:	fdivr  DWORD PTR [rax-0x3]
   140012dcb:	outs   dx,BYTE PTR ds:[rsi]
   140012dcc:	lahf   
   140012dcd:	cmc    
   140012dce:	jbe    0x140012d6b
   140012dd0:	push   0xffffffffffffffb5
   140012dd2:	(bad)  
   140012dd3:	xchg   esp,eax
   140012dd4:	(bad)  
   140012dd5:	jno    0x140012de9
   140012dd7:	movabs ds:0x9e06039ce5b80c54,eax
   140012de0:	cdq    
   140012de1:	rex.R add al,0x6c
   140012de4:	cmp    BYTE PTR [rsi],ch
   140012de6:	push   rsp
   140012de7:	push   0x6b
   140012de9:	add    dh,dh
   140012deb:	add    ch,dl
   140012ded:	adc    DWORD PTR [rdx-0x50],0x5cfc14c4
   140012df4:	(bad)
   140012df7:	pop    rsi
   140012df8:	(bad)  
   140012df9:	outs   dx,BYTE PTR ds:[rsi]
   140012dfa:	fiadd  WORD PTR [rdx]
   140012dfc:	and    DWORD PTR [rdx-0x2cd6a090],esi
   140012e02:	(bad)  
   140012e03:	(bad)  
   140012e04:	ss mov ebp,0x338ca51
   140012e0a:	ins    DWORD PTR es:[rdi],dx
   140012e0b:	rcl    DWORD PTR [rax],cl
   140012e0d:	xchg   ebp,eax
   140012e0e:	mov    edx,0x1cd6e4d4
   140012e13:	rex rol DWORD PTR [rsp+rbp*1],0xf0
   140012e18:	(bad)  
   140012e19:	adc    BYTE PTR [rsi-0xb2112ae],ch
   140012e1f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012e20:	cli    
   140012e21:	lods   eax,DWORD PTR ds:[rsi]
   140012e22:	(bad)  
   140012e24:	adc    edi,esi
   140012e26:	std    
   140012e27:	cld    
   140012e28:	pop    rbx
   140012e29:	enter  0x99bc,0xf7
   140012e2d:	in     eax,dx
   140012e2e:	fcmovnb st,st(3)
   140012e30:	cdq    
   140012e31:	xor    ebp,DWORD PTR [rdi+0x70]
   140012e34:	in     eax,0xf2
   140012e36:	adc    eax,0x42d96cb6
   140012e3b:	mov    bh,0xd7
   140012e3d:	out    0x97,eax
   140012e3f:	jmp    FWORD PTR [rbx-0x50a8ed1]
   140012e45:	xor    eax,0xdfb5fbbe
   140012e4a:	movsxd esp,DWORD PTR [rbp+0x65]
   140012e4d:	xchg   ecx,eax
   140012e4e:	pop    rdi
   140012e4f:	cli    
   140012e50:	imul   edi,DWORD PTR [rdi-0x3301683f],0x4f
   140012e57:	repnz xor DWORD PTR [rbx],0x6f
   140012e5b:	icebp  
   140012e5c:	ret    0xf399
   140012e5f:	je     0x140012ebb
   140012e61:	cmp    eax,0x14405f52
   140012e66:	push   rcx
   140012e67:	sub    DWORD PTR [rip+0xffffffffe11a9f6c],eax        # 0x1211bcdd9
   140012e6d:	lock scas al,BYTE PTR es:[rdi]
   140012e6f:	sub    DWORD PTR [rsi-0x2b47d85a],esp
   140012e75:	sub    eax,0x53f5f671
   140012e7a:	pop    rsp
   140012e7b:	cmp    cl,bh
   140012e7d:	mov    ebx,0x120d6b54
   140012e82:	cmp    al,0xbe
   140012e84:	lock stc 
   140012e86:	iret   
   140012e87:	push   rdx
   140012e88:	(bad)  
   140012e89:	rex.XB pop r10
   140012e8b:	lods   eax,DWORD PTR ds:[rsi]
   140012e8c:	lods   eax,DWORD PTR ss:[rsi]
   140012e8e:	jbe    0x140012e1b
   140012e90:	push   rdi
   140012e91:	pop    rsi
   140012e92:	jns    0x140012e21
   140012e94:	push   0xffffffffffffffad
   140012e96:	mov    r15d,0x730347d7
   140012e9c:	xlat   BYTE PTR ds:[rbx]
   140012e9d:	out    0x39,eax
   140012e9f:	mov    al,0x7f
   140012ea1:	(bad)  
   140012ea2:	mov    ch,0x6a
   140012ea4:	xchg   ebp,eax
   140012ea5:	enter  0x7cca,0x37
   140012ea9:	sbb    ecx,DWORD PTR [rip+0x6deb0db4]        # 0x1adec3c63
   140012eaf:	(bad)  
   140012eb0:	sub    eax,0xba635037
   140012eb5:	add    ch,BYTE PTR [rbx-0x15]
   140012eb8:	sub    eax,0x4cdad6d6
   140012ebd:	outs   dx,BYTE PTR ds:[rsi]
   140012ebe:	fiadd  DWORD PTR [rdx+rcx*4+0x73705323]
   140012ec5:	and    al,0x40
   140012ec7:	test   eax,0xbc6328d0
   140012ecc:	ss or  eax,0x8d013430
   140012ed2:	(bad)  
   140012ed3:	mov    ecx,0x3dcea136
   140012ed8:	outs   dx,BYTE PTR ds:[rsi]
   140012ed9:	push   rsi
   140012eda:	call   0xeeab3152
   140012edf:	out    0x90,al
   140012ee1:	or     edx,DWORD PTR [rcx]
   140012ee3:	fadd   QWORD PTR [rbp+0x5950d7b6]
   140012ee9:	lea    eax,[rbp+0x7a60f54]
   140012eef:	in     eax,dx
   140012ef0:	xor    BYTE PTR [rsi+0x29942e89],ah
   140012ef6:	add    al,0xa6
   140012ef8:	rex.X sbb BYTE PTR [rdi+0x1c280b73],spl
   140012eff:	rex sbb DWORD PTR [rbx-0x6fa8763e],0x9fb70039
   140012f0a:	rex.WRX xchg rax,rax
   140012f0c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012f0d:	adc    DWORD PTR [rdx],esp
   140012f0f:	xchg   ecx,eax
   140012f10:	xchg   BYTE PTR [rdx-0x65],ch
   140012f13:	in     eax,0xaa
   140012f15:	adc    ah,BYTE PTR [rbp-0x1bdf3dae]
   140012f1b:	sahf   
   140012f1c:	(bad)  
   140012f1d:	jle    0x140012ea3
   140012f1f:	out    dx,eax
   140012f20:	cmp    al,0xf0
   140012f22:	and    ch,cl
   140012f24:	movabs eax,ds:0xafe0d439a138e261
   140012f2d:	(bad)  
   140012f2e:	xchg   ebp,eax
   140012f2f:	mov    edi,0x75dce2ce
   140012f34:	sahf   
   140012f35:	jle    0x140012f2f
   140012f37:	fbstp  TBYTE PTR [rcx]
   140012f39:	ja     0x140012f30
   140012f3b:	pop    rbp
   140012f3c:	jle    0x140012f38
   140012f3e:	mov    bl,0x7f
   140012f40:	xchg   ebp,eax
   140012f41:	mov    ebx,0x3e19fdef
   140012f46:	jbe    0x140012fac
   140012f48:	bts    ebp,ebp
   140012f4b:	(bad)  
   140012f4c:	cmp    ch,cl
   140012f4e:	adc    ah,BYTE PTR [rax+0x544b97a9]
   140012f54:	imul   edx,DWORD PTR [rbp-0x2a],0xffffff95
   140012f58:	(bad)  
   140012f59:	sbb    edx,edi
   140012f5b:	cmp    edi,DWORD PTR [rdx+rdi*8-0x143bc0c]
   140012f62:	in     eax,dx
   140012f63:	fbld   TBYTE PTR [rcx-0x52d8bdec]
   140012f69:	icebp  
   140012f6a:	pop    rdi
   140012f6b:	(bad)  
   140012f6c:	repnz (bad) 
   140012f6e:	mov    eax,0xb443b6fd
   140012f73:	pop    rdx
   140012f74:	jmp    0x140012f96
   140012f76:	add    eax,0x9d7a9daf
   140012f7b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012f7c:	xchg   ebp,eax
   140012f7d:	push   rbp
   140012f7e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012f7f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012f80:	(bad)  
   140012f81:	ror    DWORD PTR [rdi-0x59c76d9e],cl
   140012f87:	(bad)  
   140012f88:	pop    rdx
   140012f89:	in     al,0x29
   140012f8b:	mov    al,0x47
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	sbb    al,0xee
   140012f91:	rex.WB
   140012f92:	rex.R
   140012f93:	push   r12
   140012f95:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012f96:	push   rdx
   140012f97:	test   eax,0x2f7dfd64
   140012f9c:	or     BYTE PTR [rax-0x6ad7d5ac],ch
   140012fa2:	fs (bad) 
   140012fa4:	pop    rsi
   140012fa5:	xlat   BYTE PTR ds:[rbx]
   140012fa6:	push   rdi
   140012fa7:	(bad)  
   140012fa8:	popf   
   140012fa9:	cmp    edx,ebx
   140012fab:	add    DWORD PTR [rax+0x58],ebx
   140012fae:	pop    rsp
   140012faf:	and    al,0xd5
   140012fb1:	mov    bl,BYTE PTR [rdx-0x5b]
   140012fb4:	rex.X (bad) 
   140012fb6:	add    DWORD PTR [esp+edi*1-0x51],ebx
   140012fbb:	jne    0x140012feb
   140012fbd:	gs rcr dl,1
   140012fc0:	sub    al,0xea
   140012fc2:	mov    ah,0x5f
   140012fc4:	mov    ebx,0xfebb5e1c
   140012fc9:	mov    edi,0x9a6966bb
   140012fce:	mov    ch,0x49
   140012fd0:	repz push rbp
   140012fd2:	inc    DWORD PTR [rcx+0x7e]
   140012fd5:	add    BYTE PTR [rsi-0x34],ch
   140012fd8:	cmp    dl,bl
   140012fda:	(bad)  
   140012fdb:	rex.W push rbp
   140012fdd:	(bad)  
   140012fde:	ds je  0x14001304a
   140012fe1:	(bad)  
   140012fe2:	test   eax,0x8d053bb0
   140012fe7:	data16 movabs al,ds:0xe14407d07299be7b
   140012ff1:	add    BYTE PTR [rdx],cl
   140012ff3:	fcom   QWORD PTR [rsi+rcx*2]
   140012ff6:	test   edi,0xacec5790
   140012ffc:	jp     0x140012fa8
   140012ffe:	rex.WRB sub BYTE PTR [r10-0x2a4b083f],r13b
   140013005:	add    DWORD PTR [rax],ecx
   140013007:	mov    bl,0xd
   140013009:	cmp    dh,ch
   14001300b:	sahf   
   14001300c:	xor    esi,DWORD PTR [rbx]
   14001300e:	xor    ebx,DWORD PTR [rdi+rdi*1]
   140013011:	jbe    0x140012f9f
   140013013:	(bad)  
   140013014:	jle    0x140013006
   140013016:	adc    al,BYTE PTR [rdi+0xe]
   140013019:	(bad)  
   14001301a:	gs gs jns 0x140012fb3
   14001301e:	jmp    0x16ffd63f0
   140013023:	pop    rdi
   140013024:	inc    BYTE PTR [rdi]
   140013026:	cld    
   140013027:	out    dx,al
   140013028:	outs   dx,DWORD PTR ds:[rsi]
   140013029:	call   QWORD PTR [rbx-0x62]
   14001302c:	jl     0x140013020
   14001302e:	adc    DWORD PTR [rsi-0x7281b00e],edi
   140013034:	(bad)  
   140013035:	out    dx,al
   140013036:	push   QWORD PTR [rdi+0x67e3bdec]
   14001303c:	cwde   
   14001303d:	fidivr WORD PTR [rcx-0x80]
   140013040:	ins    DWORD PTR es:[rdi],dx
   140013041:	pop    rbx
   140013042:	mov    bh,0x50
   140013044:	lods   eax,DWORD PTR ds:[rsi]
   140013045:	(bad)  
   140013046:	mov    ecx,0xfcc6bf32
   14001304b:	retf   0xae65
   14001304e:	pop    rsp
   14001304f:	js     0x140012fe4
   140013051:	rex.WXB (bad) 
   140013053:	(bad)  
   140013054:	rex.WX idiv rdx
   140013057:	imul   edx,esi,0xd5e8d757
   14001305d:	(bad)  
   14001305e:	repz test edi,ecx
   140013061:	call   FWORD PTR [rdi+rbx*4]
   140013064:	sti    
   140013065:	vaddsubps ymm5,ymm6,ymm5
   140013069:	mov    dh,0x91
   14001306b:	shl    BYTE PTR [rbx+0x71],cl
   14001306e:	imul   ecx,DWORD PTR [rcx-0x7e806019],0x54490c30
   140013078:	rex.WX adc al,0xf7
   14001307b:	pop    rax
   14001307c:	pop    rdx
   14001307d:	pop    rsp
   14001307e:	and    BYTE PTR [rdi-0x652adc68],bh
   140013084:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013085:	popf   
   140013086:	push   rbp
   140013087:	call   0x16bde2dd1
   14001308c:	int3   
   14001308d:	sbb    DWORD PTR [rax],esi
   14001308f:	sub    DWORD PTR [rcx-0x1e8f46b6],esi
   140013095:	and    cl,BYTE PTR [rbp+0x41aec55a]
   14001309b:	retf   
   14001309c:	mov    DWORD PTR [rax+riz*2+0xa],esi
   1400130a0:	movabs eax,ds:0x1e9ed14d3a8518e4
   1400130a9:	or     al,0xee
   1400130ab:	rol    BYTE PTR [rax+0x6b07aba2],0xbc
   1400130b2:	pop    rbp
   1400130b3:	(bad)  
   1400130b4:	ror    BYTE PTR [rcx],0x88
   1400130b7:	call   0x1261920b8
   1400130bc:	jp     0x14001309f
   1400130be:	pushf  
   1400130bf:	mov    edx,ebx
   1400130c1:	add    esi,DWORD PTR [rax-0x113567ed]
   1400130c7:	or     BYTE PTR [rdx+rdi*2+0x41],dh
   1400130cb:	test   eax,0xf2da1275
   1400130d0:	adc    dl,dh
   1400130d2:	mov    edi,0x70a083fb
   1400130d7:	add    BYTE PTR [rip+0x3d2c8a6e],al        # 0x17d2dbb4b
   1400130dd:	jbe    0x140013106
   1400130df:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   1400130e1:	imul   DWORD PTR [rsp+rbp*2+0x494a99d8]
   1400130e8:	scas   eax,DWORD PTR es:[rdi]
   1400130e9:	xlat   BYTE PTR ds:[rbx]
   1400130ea:	movabs ds:0x5ea676fb2d512e54,eax
   1400130f3:	and    dl,dl
   1400130f5:	add    al,0x29
   1400130f7:	jge    0x1400130e7
   1400130f9:	mov    eax,0xaed704fd
   1400130fe:	pop    rdi
   1400130ff:	out    0xd4,eax
   140013101:	test   eax,0xf47a38d7
   140013106:	sub    BYTE PTR [rbx+0xb],dh
   140013109:	mov    ecx,DWORD PTR [rsi+rcx*4-0xc80c72]
   140013110:	(bad)  
   140013111:	scas   eax,DWORD PTR es:[rdi]
   140013112:	jae    0x140013100
   140013114:	clc    
   140013115:	in     eax,dx
   140013116:	jl     0x140013113
   140013118:	(bad)  
   140013119:	outs   dx,DWORD PTR ds:[rsi]
   14001311a:	jo     0x14001311a
   14001311c:	in     eax,dx
   14001311d:	(bad)  
   14001311e:	cwde   
   14001311f:	(bad)  
   140013120:	push   QWORD PTR [rdx]
   140013122:	rex.B jne 0x1400130ad
   140013125:	sbb    eax,0x34328e7b
   14001312a:	cmp    al,BYTE PTR [rbp+0x5fcc7b8a]
   140013130:	jnp    0x1400130cd
   140013132:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013133:	mov    ebp,0x24c4f8cc
   140013138:	lea    ecx,[rcx+0x43c6d49d]
   14001313e:	(bad)  
   14001313f:	fsubr  st(7),st
   140013141:	jg     0x1400130c4
   140013143:	lahf   
   140013144:	mov    ecx,0xad5a5eef
   140013149:	mov    dh,0x5d
   14001314b:	out    dx,eax
   14001314c:	popf   
   14001314d:	repnz clc 
   14001314f:	jrcxz  0x1400131a0
   140013151:	mov    al,0xb0
   140013153:	mov    esp,0x24c4e4c2
   140013158:	jno    0x14001316e
   14001315a:	mov    cl,0xbc
   14001315c:	mov    esp,0x2d895284
   140013161:	(bad)  
   140013162:	xchg   ebp,eax
   140013163:	shr    BYTE PTR [rcx-0x52a523cf],1
   140013169:	xchg   BYTE PTR [rdx+0x29],dl
   14001316c:	imul   edx,DWORD PTR [rdx-0x12a02b9a],0x205a6f8a
   140013176:	icebp  
   140013177:	pop    rax
   140013178:	pop    rbp
   140013179:	pop    rcx
   14001317a:	loope  0x140013156
   14001317c:	cmc    
   14001317d:	cmp    DWORD PTR [rsi+0x6e],esi
   140013180:	fbld   TBYTE PTR [rsi+0x6e]
   140013183:	push   rdi
   140013184:	sub    edx,edi
   140013186:	xchg   BYTE PTR [rbx],cl
   140013188:	xchg   edx,eax
   140013189:	push   rcx
   14001318a:	mov    ch,BYTE PTR [rbp+0x428a77b4]
   140013190:	loop   0x1400131b5
   140013192:	xor    BYTE PTR [rdx-0x1ba37198],dh
   140013198:	add    bh,ah
   14001319a:	in     al,dx
   14001319b:	imul   esp,ecx,0x66
   14001319e:	adc    bl,ah
   1400131a0:	push   0x30
   1400131a2:	sti    
   1400131a3:	enter  0xb9d6,0x38
   1400131a7:	push   rcx
   1400131a8:	push   rdx
   1400131a9:	gs (bad) 
   1400131ab:	(bad)  
   1400131ac:	addr32 or al,cl
   1400131af:	(bad)  
   1400131b0:	cdq    
   1400131b1:	sub    QWORD PTR [rcx],rdx
   1400131b4:	sub    DWORD PTR [rdx+rcx*1-0x4bed20ae],esp
   1400131bb:	test   BYTE PTR [rsi-0x59],al
   1400131be:	test   DWORD PTR [rbx],eax
   1400131c0:	sub    al,dh
   1400131c2:	and    DWORD PTR [rdx],esp
   1400131c4:	int    0x46
   1400131c6:	push   rax
   1400131c7:	xor    eax,0xb8909249
   1400131cc:	pushf  
   1400131cd:	push   rbx
   1400131ce:	movsxd ebp,DWORD PTR [rdx-0x142cad17]
   1400131d4:	test   BYTE PTR [rcx],0x83
   1400131d7:	xor    BYTE PTR [rbx-0x8cb4c00],cl
   1400131dd:	or     edx,eax
   1400131df:	or     BYTE PTR [rdi-0x21],0xf7
   1400131e3:	sub    DWORD PTR [rsi-0x1bc00a02],edi
   1400131e9:	cmc    
   1400131ea:	shl    DWORD PTR [rdi+0x3f6fb7d9],cl
   1400131f0:	mov    esi,ebx
   1400131f2:	mov    esi,DWORD PTR [rdx+rbx*1]
   1400131f5:	jne    0x140013275
   1400131f7:	(bad)  
   1400131f8:	(bad)  
   1400131f9:	ds iret 
   1400131fb:	sbb    eax,0xa3c3dd77
   140013200:	(bad)  
   140013201:	(bad)  
   140013202:	loop   0x1400131a9
   140013204:	(bad)  
   140013205:	sahf   
   140013206:	(bad)  
   140013207:	outs   dx,BYTE PTR ds:[rsi]
   140013208:	out    dx,al
   140013209:	or     dh,BYTE PTR [rbx-0x69]
   14001320c:	pop    rdi
   14001320d:	rex.RB
   14001320e:	es rex.WXB
   140013210:	rex.RX and DWORD PTR [rdi],0xec4e698e
   140013217:	(bad)  
   140013218:	jb     0x1400131e1
   14001321a:	jle    0x140013212
   14001321c:	in     eax,dx
   14001321d:	fxch   st(3)
   14001321f:	rex.WRXB std 
   140013221:	in     al,0x3d
   140013223:	ins    BYTE PTR es:[rdi],dx
   140013224:	popf   
   140013225:	(bad)  [rbx+rbp*4-0x4b]
   140013229:	outs   dx,BYTE PTR ds:[rsi]
   14001322a:	(bad)  
   14001322b:	jle    0x140013238
   14001322d:	clc    
   14001322e:	(bad)  
   14001322f:	neg    DWORD PTR [rdi-0x6198161a]
   140013235:	movsxd ebp,DWORD PTR [rdx+0x7a]
   140013238:	mov    dl,BYTE PTR [rdi+riz*4+0x2c]
   14001323c:	(bad)  
   14001323d:	(bad)  
   14001323e:	adc    DWORD PTR [rdi+0x11],eax
   140013241:	and    esp,DWORD PTR [rbx+0x524278a3]
   140013247:	scas   eax,DWORD PTR es:[rdi]
   140013248:	push   rsi
   140013249:	mov    ebx,esp
   14001324b:	cwde   
   14001324c:	rex.RX mov ebp,0xb4f8104e
   140013252:	cmp    edi,DWORD PTR [rbp+0x67beaa1f]
   140013258:	out    0x2a,al
   14001325a:	add    eax,0x479fcee7
   14001325f:	and    eax,0x4dc3c331
   140013264:	fcomi  st,st(3)
   140013266:	(bad)  
   140013267:	in     al,dx
   140013268:	add    al,0x10
   14001326a:	push   rdx
   14001326b:	loopne 0x1400132d6
   14001326d:	(bad)  
   14001326e:	adc    DWORD PTR [rcx-0x6b746574],ecx
   140013274:	push   0xffffffffd844476c
   140013279:	jbe    0x140013218
   14001327b:	retf   
   14001327c:	(bad)  
   14001327d:	mov    ch,0xce
   14001327f:	jge    0x14001324e
   140013281:	sar    BYTE PTR [rcx],0xb8
   140013284:	rex.X movabs eax,ds:0x8ab8ac6cf3047c36
   14001328e:	jbe    0x14001322c
   140013290:	add    esi,DWORD PTR [rbx]
   140013292:	and    al,0x95
   140013294:	out    0x57,al
   140013296:	pushf  
   140013297:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013298:	mov    dl,BYTE PTR [rbx+rbp*1-0x2e]
   14001329c:	(bad)  
   14001329d:	sub    al,0x69
   14001329f:	xchg   ebp,eax
   1400132a0:	rex.X xchg edx,eax
   1400132a2:	fsubrp st(2),st
   1400132a4:	xchg   esi,eax
   1400132a5:	loopne 0x140013269
   1400132a7:	add    DWORD PTR [rax+rdi*4],edx
   1400132aa:	sub    esp,ecx
   1400132ac:	fwait
   1400132ad:	xlat   BYTE PTR ds:[rbx]
   1400132ae:	or     ah,BYTE PTR [rcx+0x66]
   1400132b1:	add    eax,0x35eef729
   1400132b6:	jmp    0x14001326d
   1400132b8:	cmp    al,0x4
   1400132ba:	lods   eax,DWORD PTR ds:[rsi]
   1400132bb:	push   rsi
   1400132bc:	sbb    ecx,edi
   1400132be:	xchg   ebx,eax
   1400132bf:	push   rsp
   1400132c0:	stos   DWORD PTR es:[rdi],eax
   1400132c1:	push   rbp
   1400132c2:	(bad)  
   1400132c3:	popf   
   1400132c4:	adc    bh,BYTE PTR [rax-0x7f]
   1400132c7:	mov    ecx,0x30a5047f
   1400132cc:	loopne 0x140013281
   1400132ce:	mov    edi,0xed7cf3f8
   1400132d3:	sbb    ebx,edi
   1400132d5:	in     al,0xcc
   1400132d7:	jmp    0xfde01faf
   1400132dc:	xchg   edi,eax
   1400132dd:	test   ebp,eax
   1400132df:	adc    eax,0xc336edda
   1400132e4:	ret    
   1400132e5:	and    edi,esp
   1400132e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400132e8:	mov    edi,0xd9fccbf8
   1400132ed:	iret   
   1400132ee:	(bad)  
   1400132ef:	jns    0x14001331f
   1400132f1:	pop    rbp
   1400132f2:	mov    edx,0x57abd5c0
   1400132f7:	int3   
   1400132f8:	rex.R sahf 
   1400132fa:	(bad)  
   1400132fb:	loopne 0x140013304
   1400132fd:	push   rbp
   1400132fe:	es cmps DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   140013301:	fdiv   DWORD PTR [rbx+0x5af50b7d]
   140013307:	xchg   ebp,eax
   140013308:	push   rsp
   140013309:	imul   edx,ebx,0xffffffe7
   14001330c:	mov    bh,0x61
   14001330e:	icebp  
   14001330f:	jae    0x1400132e0
   140013311:	cmp    eax,0x3f0f83cf
   140013316:	movsxd r13,DWORD PTR [rax+0x8]
   14001331a:	adc    ah,cl
   14001331c:	int    0x5d
   14001331e:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013320:	sub    DWORD PTR [rbx-0x54f79c5d],esp
   140013326:	rex.WX adc al,0x84
   140013329:	and    eax,0xd1a3cf3c
   14001332e:	push   0x1d894510
   140013333:	addr32 xchg esi,eax
   140013335:	mov    dh,0x9f
   140013337:	scas   al,BYTE PTR es:[rdi]
   140013338:	(bad)  
   140013339:	sub    eax,0x75e92134
   14001333e:	cmp    edi,DWORD PTR [rcx+rsi*2+0x63a32cf6]
   140013345:	movsxd eax,DWORD PTR [rcx+rax*2+0x386f5a68]
   14001334c:	(bad)  
   14001334d:	(bad)  
   14001334e:	(bad)  
   14001334f:	test   eax,0x23e7844b
   140013354:	push   rdx
   140013355:	xchg   ebp,eax
   140013356:	adc    DWORD PTR [rsi+0x5c],esi
   140013359:	jnp    0x140013329
   14001335b:	in     al,0xe4
   14001335d:	ret    0x63fd
   140013360:	out    0x0,al
   140013362:	pop    rsp
   140013363:	icebp  
   140013364:	iret   
   140013365:	xor    ebp,edi
   140013367:	int3   
   140013368:	test   BYTE PTR [rax+0x3a],ah
   14001336b:	(bad)  
   14001336c:	cli    
   14001336d:	pop    rcx
   14001336e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001336f:	test   eax,0x475f7430
   140013374:	repnz (bad) 
   140013376:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013377:	mov    edx,0xffa60e9c
   14001337c:	mov    dl,0x96
   14001337e:	movabs al,ds:0xf81401c2e941c8d
   140013387:	or     DWORD PTR [rcx-0x5d9e7bb6],ecx
   14001338d:	test   eax,0xce05f8ac
   140013392:	js     0x140013400
   140013394:	jbe    0x140013336
   140013396:	push   rbx
   140013397:	rcl    BYTE PTR [rdx+0x2943ab56],1
   14001339d:	or     al,0xf1
   14001339f:	jl     0x140013340
   1400133a1:	and    al,0x4d
   1400133a3:	lock xor BYTE PTR [rcx],bh
   1400133a6:	je     0x140013407
   1400133a8:	imul   eax,DWORD PTR [rdx+0x7fe7e020],0xffffffee
   1400133af:	addr32 stc 
   1400133b1:	cli    
   1400133b2:	(bad)  
   1400133b3:	jle    0x140013348
   1400133b5:	xchg   edi,eax
   1400133b6:	pop    rsi
   1400133b7:	jp     0x14001333a
   1400133b9:	popf   
   1400133ba:	cmp    esi,DWORD PTR [rdi-0x6f]
   1400133bd:	and    al,0x15
   1400133bf:	ficomp DWORD PTR [rbp-0x5bd6bed2]
   1400133c5:	push   rcx
   1400133c6:	stos   DWORD PTR es:[rdi],eax
   1400133c7:	mov    dl,0x6d
   1400133c9:	sti    
   1400133ca:	rex.WRX imul dil
   1400133cd:	(bad)  
   1400133ce:	rex.WR adc BYTE PTR [rax-0x7c],r15b
   1400133d2:	(bad)  
   1400133d3:	or     dl,bl
   1400133d5:	or     al,0xe4
   1400133d7:	hlt    
   1400133d8:	sti    
   1400133d9:	xor    DWORD PTR [rbx],ebp
   1400133db:	stos   DWORD PTR es:[rdi],eax
   1400133dc:	stos   DWORD PTR es:[rdi],eax
   1400133dd:	movabs al,ds:0xf93976edd0107e35
   1400133e6:	mov    ebp,0xa9f278c7
   1400133eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400133ec:	test   eax,0x21481ad6
   1400133f1:	mov    ecx,0xbe1afd7e
   1400133f6:	out    dx,eax
   1400133f7:	xor    edi,DWORD PTR [rdx]
   1400133f9:	cmp    cl,BYTE PTR [rdx+0x34e87bef]
   1400133ff:	rex.RB
   140013400:	rex.WX
   140013401:	rex.WB (bad) 
   140013403:	out    dx,eax
   140013404:	xor    esi,DWORD PTR [rsp+rbx*8]
   140013407:	rex.R xchg ebx,eax
   140013409:	adc    ah,BYTE PTR [rdi]
   14001340b:	mov    cl,0x99
   14001340d:	repnz retf 
   14001340f:	cmp    BYTE PTR [rdx-0x6e55e526],bh
   140013415:	or     eax,0x79eef73b
   14001341a:	(bad)  
   14001341b:	(bad)  
   14001341c:	(bad)  
   14001341d:	mov    ecx,0xb331c4e3
   140013422:	(bad)  
   140013423:	xor    BYTE PTR [rbx],ah
   140013425:	loop   0x1400133ff
   140013427:	adc    ebx,DWORD PTR [rdx+0xf]
   14001342a:	rex.RX jp 0x140013472
   14001342d:	rex.WX (bad) 
   14001342f:	or     al,0x94
   140013431:	rex.X (bad) 
   140013433:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013434:	sbb    eax,0xab748318
   140013439:	ret    
   14001343a:	xor    al,0x64
   14001343c:	mov    es,WORD PTR [rsi-0x15]
   14001343f:	xor    al,0xb
   140013441:	sti    
   140013442:	mov    bl,0xdb
   140013444:	mov    bl,0xa2
   140013446:	movabs eax,ds:0x9179772b3483a8bb
   14001344f:	push   rdx
   140013450:	fcom   DWORD PTR [rcx]
   140013452:	in     al,dx
   140013453:	pushf  
   140013454:	push   rbx
   140013455:	rcr    eax,1
   140013457:	fild   QWORD PTR [rip+0xffffffffdf0c8e68]        # 0x11f0dc2c5
   14001345d:	rcr    bh,cl
   14001345f:	mov    eax,0x6e050070
   140013464:	mov    ah,BYTE PTR [rsi+rcx*4]
   140013467:	lods   eax,DWORD PTR ds:[rsi]
   140013468:	and    al,ch
   14001346a:	rex.RX xor r9b,BYTE PTR [rdx]
   14001346d:	fldl2t 
   14001346f:	data16 fsubrp st(0),st
   140013472:	rcl    BYTE PTR [rbx],cl
   140013474:	je     0x140013471
   140013476:	jge    0x1400134ce
   140013478:	xlat   BYTE PTR ds:[rbx]
   140013479:	xlat   BYTE PTR ds:[rbx]
   14001347a:	sbb    DWORD PTR [rsi],ebx
   14001347c:	sbb    dh,BYTE PTR [rdx]
   14001347e:	stc    
   14001347f:	mov    ecx,0x9eee8da7
   140013484:	jge    0x1400134a9
   140013486:	xchg   DWORD PTR [rcx-0x77],esp
   140013489:	(bad)  
   14001348a:	jl     0x14001348a
   14001348c:	jae    0x14001348a
   14001348e:	loope  0x140013447
   140013490:	mov    esi,0xfdcf73c3
   140013495:	jnp    0x14001350d
   140013497:	in     eax,dx
   140013498:	fadd   st(1),st
   14001349a:	fdivr  st,st(0)
   14001349c:	add    al,0x7e
   14001349e:	sbb    al,0xd1
   1400134a0:	jmp    0x140013518
   1400134a2:	pop    rax
   1400134a3:	pop    rdx
   1400134a4:	pop    rsi
   1400134a5:	xor    DWORD PTR [rbx-0x5ab05ec6],eax
   1400134ab:	pop    rsp
   1400134ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400134ad:	sbb    al,0x4
   1400134af:	loopne 0x1400134fa
   1400134b1:	retf   
   1400134b2:	loopne 0x1400134bf
   1400134b4:	nop
   1400134b5:	push   rdx
   1400134b6:	lock (bad) 
   1400134b8:	cmp    ebp,edi
   1400134ba:	lock mov ebp,0xd4e3df93
   1400134c0:	jmp    0x140013529
   1400134c2:	sub    BYTE PTR [rdi+0x6b],dl
   1400134c5:	je     0x1400134a2
   1400134c7:	ins    DWORD PTR es:[rdi],dx
   1400134c8:	xchg   edx,eax
   1400134c9:	rex.R rcr DWORD PTR [rax],1
   1400134cc:	push   0x50
   1400134ce:	stos   DWORD PTR es:[rdi],eax
   1400134cf:	xlat   BYTE PTR ds:[rbx]
   1400134d0:	lock test ecx,ebx
   1400134d3:	call   0x108ce5df3
   1400134d8:	lock adc BYTE PTR [rbx-0x7df7a44d],dh
   1400134df:	sbb    BYTE PTR [rsi-0x51],0x8f
   1400134e3:	(bad)  
   1400134e4:	mov    ecx,0xb32e6676
   1400134e9:	xchg   edi,eax
   1400134ea:	movabs rdx,0x23a312f8bc2f0e9d
   1400134f4:	and    edx,esp
   1400134f6:	imul   esi,ebp,0x6c
   1400134f9:	repnz iret 
   1400134fb:	rex.WR fcmovu st,st(1)
   1400134fe:	movabs eax,ds:0x56fe79620d4ecf1f
   140013507:	cs pop rsp
   140013509:	jnp    0x140013585
   14001350b:	nop
   14001350c:	rex.W fcomp DWORD PTR [rbp+rbx*2+0x6001d833]
   140013514:	scas   al,BYTE PTR es:[rdi]
   140013515:	adc    DWORD PTR [rbx+0x2ce85cd3],eax
   14001351b:	lock xor bh,dh
   14001351e:	xor    esi,ecx
   140013520:	ror    BYTE PTR [rcx],0x87
   140013523:	(bad)  
   140013524:	rol    BYTE PTR [rdi+riz*8+0x1c],0xae
   140013529:	sbb    BYTE PTR [rsp+rcx*1],dh
   14001352c:	pop    rsp
   14001352d:	mov    bh,0xc5
   14001352f:	adc    al,BYTE PTR [rax-0x118fe05c]
   140013535:	popf   
   140013536:	ja     0x1400135a6
   140013538:	jmp    0xc03991ac
   14001353d:	add    dh,BYTE PTR [rdi]
   14001353f:	test   esi,ecx
   140013541:	fs test al,0x72
   140013544:	cmc    
   140013545:	ins    BYTE PTR es:[rdi],dx
   140013546:	(bad)  
   140013547:	(bad)  
   140013548:	data16 mov bh,0x99
   14001354b:	cmc    
   14001354c:	(bad)  
   14001354d:	sahf   
   14001354e:	xchg   esp,eax
   14001354f:	mov    ah,0xda
   140013551:	sbb    eax,0x5ca03f02
   140013556:	cs pop rcx
   140013558:	(bad)  
   140013559:	mov    ebx,0x419cf68f
   14001355e:	sbb    dh,cl
   140013560:	shr    BYTE PTR [rdi],0xfc
   140013563:	out    0x9f,eax
   140013565:	(bad)  
   140013566:	push   0x1ffb8868
   14001356b:	js     0x1400134fd
   14001356d:	rex.WX stc 
   14001356f:	pop    rbp
   140013570:	cmps   DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   140013572:	imul   esi,DWORD PTR es:[rdx+rbx*1],0x4a756bd4
   14001357a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001357b:	xor    bl,BYTE PTR [rsi-0xb162c11]
   140013581:	test   al,0x94
   140013583:	rex.XB push r10
   140013585:	lods   eax,DWORD PTR ds:[rsi]
   140013586:	mov    DWORD PTR [rdx+0x7d],edi
   140013589:	scas   al,BYTE PTR es:[rdi]
   14001358a:	pop    rbp
   14001358b:	mov    ebx,0xdeb7d9c2
   140013590:	out    0x9d,al
   140013592:	ja     0x140013562
   140013594:	shr    ecx,1
   140013596:	je     0x1400135c1
   140013598:	push   rbp
   140013599:	sub    edx,DWORD PTR [rax-0x6ab57dd6]
   14001359f:	shl    ecx,1
   1400135a1:	(bad)  
   1400135a2:	sub    edi,0x24ebb6e1
   1400135a8:	rex.WX xor QWORD PTR [rsi],rdi
   1400135ab:	ds retf 0x3e27
   1400135af:	jle    0x1400135c0
   1400135b1:	push   rbx
   1400135b2:	fwait
   1400135b3:	es call 0xeb09b12e
   1400135b9:	jmp    QWORD PTR [rdi]
   1400135bb:	jb     0x1400135de
   1400135bd:	jne    0x140013559
   1400135bf:	(bad)  
   1400135c0:	rcr    eax,cl
   1400135c2:	repz cmp eax,0x35f57e5e
   1400135c8:	cs pop rbp
   1400135ca:	mov    ecx,0xdd77ddca
   1400135cf:	xor    DWORD PTR [rax+0x618fe7ee],ebp
   1400135d5:	iret   
   1400135d6:	(bad)  
   1400135d7:	cmp    esp,DWORD PTR [rax+0x4f]
   1400135da:	in     al,0xc4
   1400135dc:	out    0xe8,al
   1400135de:	sbb    BYTE PTR [rcx+0x6bd3a770],ch
   1400135e4:	es test esp,0xf9c26e49
   1400135eb:	sbb    ecx,DWORD PTR [rsi+0x6e]
   1400135ee:	rex.WXB fstp QWORD PTR [rip+0xffffffffe0d60ea4]        # 0x120d74499
   1400135f5:	popf   
   1400135f6:	xchg   ebx,eax
   1400135f7:	rex.B
   1400135f8:	fs jmp 0x1809116d4
   1400135fe:	(bad)  
   1400135ff:	stos   BYTE PTR es:[rdi],al
   140013600:	xor    al,0x1d
   140013602:	xor    rdi,QWORD PTR [r13-0x58]
   140013606:	xor    DWORD PTR [rdx-0xc1d019],esi
   14001360c:	lods   al,BYTE PTR ds:[rsi]
   14001360d:	sti    
   14001360e:	leave  
   14001360f:	fwait
   140013610:	push   rbp
   140013611:	add    ebx,edi
   140013613:	(bad)  
   140013614:	sub    BYTE PTR [r8+r8*2],r11b
   140013618:	sbb    DWORD PTR [rbx+0x4bd56ac3],0xf6cb50cb
   140013622:	call   0xf6cde3c8
   140013627:	stc    
   140013628:	xor    DWORD PTR [rbx+0x1f],edx
   14001362b:	push   rax
   14001362c:	movabs al,ds:0x130e8d8cab2bcb05
   140013635:	add    al,0x1
   140013637:	rex.WB (bad) 
   140013639:	rex.R
   14001363a:	rex.X push rbx
   14001363c:	lods   eax,DWORD PTR ds:[rsi]
   14001363d:	icebp  
   14001363e:	jge    0x14001368d
   140013640:	(bad)  
   140013641:	sub    dl,BYTE PTR [rdx+rdx*4+0x1f13f27c]
   140013648:	movabs ds:0x37877f6fedf1ab56,eax
   140013651:	fistp  QWORD PTR [rbx+rbx*4+0x72]
   140013655:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013656:	test   BYTE PTR [rdi],ch
   140013658:	rex.WRB fcmovne st,st(6)
   14001365b:	xchg   ebx,eax
   14001365c:	add    ah,BYTE PTR [rcx]
   14001365e:	jge    0x140013664
   140013660:	(bad)  
   140013661:	push   rsi
   140013662:	mov    ebx,0x75fcfcc3
   140013667:	(bad)  
   140013668:	pop    rbx
   140013669:	sub    eax,0xb37a9ad0
   14001366e:	leave  
   14001366f:	in     al,0xf4
   140013671:	adc    al,0xbe
   140013673:	(bad)  
   140013674:	adc    BYTE PTR [rdx+rcx*2-0x2590417c],dl
   14001367b:	jge    0x1400136dd
   14001367d:	sub    esi,edx
   14001367f:	xor    BYTE PTR [rip+0xffffffffee47c539],dh        # 0x12e48fbbe
   140013685:	cmp    al,cl
   140013687:	mov    gs,WORD PTR [rbp+0x5b]
   14001368a:	jmp    0x10a9af185
   14001368f:	(bad)
   140013693:	rex.WRX imul r8,rdi,0xffffffffffffff93
   140013697:	(bad)  
   140013698:	or     ecx,DWORD PTR [rbx-0x2b0ec375]
   14001369e:	shr    DWORD PTR [rcx+rbx*4-0x27],cl
   1400136a2:	rex.WR mov bl,0xd9
   1400136a5:	sbb    al,0x18
   1400136a7:	mov    ebp,0x15e31b83
   1400136ac:	xchg   BYTE PTR [rdx],dl
   1400136ae:	in     eax,dx
   1400136af:	or     DWORD PTR [rcx+0x4ac69ec2],ecx
   1400136b5:	xchg   edx,eax
   1400136b6:	or     bh,BYTE PTR [rbx+0x62dc027]
   1400136bc:	(bad)  
   1400136bd:	test   eax,0xb4cc9a8d
   1400136c2:	(bad)  
   1400136c3:	(bad)  
   1400136c4:	rex.WXB and rsi,QWORD PTR [r10+0x53ae7f95]
   1400136cb:	call   0x1a819f8f4
   1400136d0:	add    DWORD PTR [rax-0x57c5bf26],ebx
   1400136d6:	mov    bh,0xb8
   1400136d8:	jl     0x1400136b9
   1400136da:	xchg   ecx,eax
   1400136db:	mov    DWORD PTR [rax+rbp*2],eax
   1400136de:	lods   al,BYTE PTR ds:[rsi]
   1400136df:	pushf  
   1400136e0:	mov    ecx,0x3fbcf14e
   1400136e5:	rol    BYTE PTR [rdi+rax*1+0x40f7a30c],cl
   1400136ec:	loope  0x1400136ee
   1400136ee:	or     bl,ah
   1400136f0:	adc    al,0xa9
   1400136f2:	(bad)  
   1400136f3:	jge    0x140013708
   1400136f5:	loop   0x140013752
   1400136f7:	mov    ebp,0xe87b6d3d
   1400136fc:	pop    rdx
   1400136fd:	fwait
   1400136fe:	mov    esp,0xb7bebb57
   140013703:	fldcw  WORD PTR [rbp+0x2944a527]
   140013709:	int    0xca
   14001370b:	(bad)  
   14001370c:	sbb    ah,BYTE PTR [rbx]
   14001370e:	rex.XB
   14001370f:	rex.XB clc 
   140013711:	mov    esi,0xe6775967
   140013716:	add    al,0xf4
   140013718:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013719:	sub    DWORD PTR [rcx+0x1c],r9d
   14001371d:	(bad)  
   14001371e:	in     al,dx
   14001371f:	fbstp  TBYTE PTR [rdi+0x3c7a4f17]
   140013725:	icebp  
   140013726:	std    
   140013727:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013728:	mov    ecx,0xfd0ae574
   14001372d:	sub    dl,al
   14001372f:	idiv   DWORD PTR [rbx+riz*8]
   140013732:	and    al,0xd2
   140013734:	scas   al,BYTE PTR es:[rdi]
   140013735:	sub    DWORD PTR [rax],esi
   140013737:	jp     0x1400136cb
   140013739:	mov    DWORD PTR [rcx-0x4acd5997],ebp
   14001373f:	sbb    eax,0xa3a4bbf3
   140013744:	shl    BYTE PTR [rsi+0x7d],cl
   140013747:	rex.WX
   140013748:	mov    r11b,0x59
   14001374b:	movsxd edi,ebx
   14001374d:	mov    dh,0x6d
   14001374f:	ins    BYTE PTR es:[rdi],dx
   140013750:	fistp  QWORD PTR [rdx+0x49e9e995]
   140013756:	adc    ah,BYTE PTR [rbp-0x20c3b7f0]
   14001375c:	(bad)  
   14001375d:	stc    
   14001375e:	jns    0x1400136f6
   140013760:	mov    dl,0xd8
   140013762:	cld    
   140013763:	pop    rcx
   140013764:	(bad)  
   140013765:	out    0x71,eax
   140013767:	inc    DWORD PTR [rbx+0x1144930f]
   14001376d:	(bad)  [rsi-0x49]
   140013770:	cwde   
   140013771:	rcr    ebp,cl
   140013773:	push   rdx
   140013774:	jo     0x140013753
   140013776:	loopne 0x14001370b
   140013778:	fwait
   140013779:	adc    DWORD PTR [rax-0x6f4c35c7],0x66
   140013780:	adc    DWORD PTR [rax+0x46],ebp
   140013783:	add    BYTE PTR [rdx],dl
   140013785:	or     al,0xf4
   140013787:	cli    
   140013788:	xchg   esp,eax
   140013789:	push   rbx
   14001378a:	in     eax,dx
   14001378b:	rol    DWORD PTR [rbx-0x3a0461ca],1
   140013791:	or     al,0x1c
   140013793:	shl    BYTE PTR [rax],1
   140013795:	shl    BYTE PTR [rdi+0x33],0x84
   140013799:	data16 cmp BYTE PTR [rcx-0x55],cl
   14001379d:	je     0x1400137e2
   14001379f:	jge    0x1400137e1
   1400137a1:	or     esp,edi
   1400137a3:	push   0x25b8e3dd
   1400137a8:	or     eax,0x33a43d9
   1400137ad:	test   DWORD PTR [rsi],0x9f43f43f
   1400137b3:	repz (bad) 
   1400137b5:	xchg   edi,eax
   1400137b6:	xchg   DWORD PTR [rsi],ebp
   1400137b8:	sbb    al,0x40
   1400137ba:	sbb    DWORD PTR [rbx+0x2fefdfa2],0x210d69a7
   1400137c4:	add    al,0x7e
   1400137c6:	call   0xd33431ee
   1400137cb:	inc    BYTE PTR [rsi+0x85b9f41]
   1400137d1:	xrelease xchg BYTE PTR [rsi-0x26],dl
   1400137d5:	sbb    BYTE PTR [rsi-0x59],dl
   1400137d8:	fild   DWORD PTR [rbp+0x3a323354]
   1400137de:	ins    BYTE PTR es:[rdi],dx
   1400137df:	ss clc 
   1400137e1:	sub    DWORD PTR es:[rcx-0x3430d7ae],ebp
   1400137e8:	lods   eax,DWORD PTR ds:[rsi]
   1400137e9:	(bad)  
   1400137ea:	ror    DWORD PTR [rdi+rcx*2+0x4f],cl
   1400137ee:	jno    0x1400137d7
   1400137f0:	popf   
   1400137f1:	mov    bh,0x13
   1400137f3:	mov    esp,0xd2f1701c
   1400137f8:	adc    eax,0xf0d7d7d6
   1400137fd:	cmp    eax,0xa429528f
   140013802:	push   rsp
   140013803:	sub    bh,BYTE PTR cs:[ebx+0x692c7903]
   14001380b:	rex.WRXB
   14001380c:	rol    QWORD PTR [r14-0x1e70830d],cl
   140013813:	movabs eax,ds:0x4b3b36d9a7a65b26
   14001381c:	mov    ch,0x66
   14001381e:	je     0x140013829
   140013820:	rex.WXB (bad) 
   140013822:	or     BYTE PTR [rax],cl
   140013824:	xchg   ebx,eax
   140013825:	push   rdi
   140013826:	fcmovnu st,st(7)
   140013828:	out    0x56,al
   14001382a:	sub    DWORD PTR [rcx-0x55],0x1f81bda
   140013831:	(bad)  
   140013832:	cmp    eax,0xcfa724fe
   140013837:	pushf  
   140013838:	loope  0x140013832
   14001383a:	shl    DWORD PTR [rbx-0x44ca94ac],1
   140013840:	fsubr  QWORD PTR es:[rdi*8-0xb758ab8]
   140013848:	cmp    eax,0x841218fb
   14001384d:	xchg   edi,eax
   14001384e:	sbb    esp,ebx
   140013850:	adc    eax,0x9cd07b59
   140013855:	hlt    
   140013856:	add    esp,DWORD PTR [rsi+0xf5daa64]
   14001385c:	fist   WORD PTR [rsi-0xc]
   14001385f:	and    DWORD PTR [rbx-0x5f],ecx
   140013862:	xor    bl,BYTE PTR [rdi+0x0]
   140013865:	div    ch
   140013867:	fdivr  st,st(3)
   140013869:	or     DWORD PTR [rip+0xffffffffd63246da],ecx        # 0x116337f49
   14001386f:	cdq    
   140013870:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013871:	and    dh,BYTE PTR [rbp+0x1]
   140013874:	rex.RB (bad) 
   140013876:	ins    DWORD PTR es:[rdi],dx
   140013877:	in     eax,0x2
   140013879:	(bad)  
   14001387a:	sub    al,0x2d
   14001387c:	(bad)  
   14001387d:	(bad)  
   14001387e:	in     al,0x37
   140013880:	(bad)  
   140013881:	cmc    
   140013882:	push   0x7d023a36
   140013887:	ret    
   140013888:	ins    DWORD PTR es:[rdi],dx
   140013889:	add    BYTE PTR [rdx+0x6e050070],ah
   14001388f:	mov    dh,BYTE PTR [rsi-0x49]
   140013892:	mul    edx
   140013894:	mov    BYTE PTR [rdx+0x3e],cl
   140013897:	and    DWORD PTR [rbp-0x265b0b79],esp
   14001389d:	cdq    
   14001389e:	xlat   BYTE PTR ds:[rbx]
   14001389f:	xor    eax,0x15f2b66b
   1400138a4:	in     al,dx
   1400138a5:	rex.B and eax,0xf8d4b41b
   1400138ab:	add    edi,0xdd1aead2
   1400138b1:	jle    0x140013852
   1400138b3:	leave  
   1400138b4:	leave  
   1400138b5:	jno    0x1400138f3
   1400138b7:	jmp    0x18bc7ed5d
   1400138bc:	push   rbx
   1400138bd:	test   BYTE PTR [rdi+0x7],ah
   1400138c0:	xchg   DWORD PTR [rax+rcx*4+0x3c],ebp
   1400138c4:	mov    ebx,0x8a389a79
   1400138c9:	nop
   1400138ca:	push   rdx
   1400138cb:	mov    al,0xb4
   1400138cd:	pop    rsp
   1400138ce:	movsxd esi,DWORD PTR [rbp+0x75]
   1400138d1:	sbb    eax,0xe3559895
   1400138d6:	push   rdx
   1400138d7:	or     ah,BYTE PTR [rbp+rsi*2-0x5c1fbee6]
   1400138de:	test   DWORD PTR [rax+0x1a34f814],esp
   1400138e4:	or     eax,0x18478646
   1400138e9:	lahf   
   1400138ea:	sbb    BYTE PTR [rcx+0x7c],ah
   1400138ed:	ins    BYTE PTR es:[rdi],dx
   1400138ee:	(bad)  
   1400138ef:	push   0xffffffffffffffa5
   1400138f1:	rex.X xchg edx,eax
   1400138f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400138f4:	js     0x140013938
   1400138f6:	xor    BYTE PTR [rdx],bh
   1400138f8:	cmp    al,BYTE PTR [rdx+0x18]
   1400138fb:	xchg   BYTE PTR [rax],bh
   1400138fd:	rcl    edx,1
   1400138ff:	cmp    al,0x8d
   140013901:	fldenv [rcx]
   140013903:	sub    al,0x85
   140013905:	cmp    al,0xf7
   140013907:	fmul   QWORD PTR [rbx+0x23e0ffdc]
   14001390d:	in     al,dx
   14001390e:	fdiv   QWORD PTR [rcx+0x4da9c98d]
   140013914:	es jp  0x140013960
   140013917:	int3   
   140013918:	imul   ecx,DWORD PTR [rbx-0x4b],0x36
   14001391c:	adc    ah,BYTE PTR [rdx+0x76]
   14001391f:	(bad)  
   140013920:	xchg   edi,eax
   140013921:	adc    al,ah
   140013923:	(bad)  
   140013924:	rex.RX enter 0x2043,0x2c
   140013929:	rex.RXB (bad) 
   14001392b:	rex.WXB fisub WORD PTR [r9]
   14001392e:	addr32 call 0x114211cad
   140013934:	adc    BYTE PTR [rdx-0x5ab8e190],dh
   14001393a:	jbe    0x1400138d3
   14001393c:	retf   
   14001393d:	xor    BYTE PTR [rdx],cl
   14001393f:	shl    BYTE PTR [rdx],1
   140013941:	retf   
   140013942:	jmp    0x1400139a1
   140013944:	jnp    0x140013915
   140013946:	int3   
   140013947:	add    bl,al
   140013949:	push   rax
   14001394a:	(bad)  
   14001394b:	cmp    eax,0x15c80398
   140013950:	(bad)  
   140013951:	in     eax,dx
   140013952:	imul   edi,DWORD PTR [rbx+0x6e2fee59],0xffffffb8
   140013959:	in     eax,dx
   14001395a:	(bad)  
   14001395b:	(bad)  
   14001395c:	push   rdi
   14001395d:	or     al,BYTE PTR [rbp+0xa]
   140013960:	push   rax
   140013961:	loopne 0x1400139e0
   140013963:	mov    al,0xb6
   140013965:	mov    dl,0xf2
   140013967:	mov    ebp,0x5fc8d8de
   14001396c:	stos   DWORD PTR es:[rdi],eax
   14001396d:	xchg   esp,eax
   14001396e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001396f:	fucomip st,st(5)
   140013971:	div    al
   140013973:	jl     0x140013914
   140013975:	rex.WX movabs rcx,0x9280df22d91fbf42
   14001397f:	(bad)  
   140013980:	mov    BYTE PTR [rsi],ch
   140013982:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013983:	sbb    ch,BYTE PTR [rcx]
   140013985:	add    eax,0xb5995ab5
   14001398a:	(bad)  
   14001398b:	(bad)  
   14001398c:	(bad)  [rsi-0x71]
   14001398f:	int    0xd3
   140013991:	push   rbx
   140013992:	xchg   esp,eax
   140013993:	retf   0x7121
   140013996:	pushf  
   140013997:	and    BYTE PTR [rsi+rax*2],dl
   14001399a:	repnz fcmovb st,st(5)
   14001399d:	mov    ecx,0xceceb612
   1400139a2:	adc    BYTE PTR [rsi+rdi*1],al
   1400139a5:	outs   dx,DWORD PTR ds:[rsi]
   1400139a6:	mov    edi,0x23a32ef3
   1400139ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400139ac:	nop
   1400139ad:	sub    BYTE PTR [rax+riz*1+0x3f027c08],ah
   1400139b4:	and    BYTE PTR [rsp+rdi*2],cl
   1400139b7:	retf   0xae5
   1400139ba:	(bad)  
   1400139bb:	sbb    BYTE PTR [rdx-0x53],dl
   1400139be:	push   rsi
   1400139bf:	test   al,0x56
   1400139c1:	sub    dl,BYTE PTR [rdx+rcx*2+0x64107e21]
   1400139c8:	rex.RB enter 0x184a,0x30
   1400139cd:	xor    al,0x34
   1400139cf:	rex.R pop rax
   1400139d1:	xor    ch,BYTE PTR [rip+0xffffffffdf5bc1c4]        # 0x11f5cfb9b
   1400139d7:	ins    DWORD PTR es:[rdi],dx
   1400139d8:	push   QWORD PTR [rcx]
   1400139da:	(bad)  
   1400139db:	movabs eax,ds:0xe0fe19faf5390e54
   1400139e4:	imul   ebx,edi,0x64
   1400139e7:	jp     0x140013a53
   1400139e9:	adc    edi,DWORD PTR [rbx+0x824ed76]
   1400139ef:	rex.X stos DWORD PTR es:[rdi],eax
   1400139f1:	jne    0x140013a5b
   1400139f3:	(bad)  
   1400139f4:	jp     0x1400139a3
   1400139f6:	pop    rdx
   1400139f7:	pop    rsp
   1400139f9:	rex.WR out dx,eax
   1400139fb:	rex.WB jmp 0x11248c7dc
   140013a01:	in     al,dx
   140013a02:	push   QWORD PTR [rbx-0x7a52f7c4]
   140013a08:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013a09:	rex
   140013a0a:	fwait
   140013a0b:	cmp    al,0x60
   140013a0d:	rex.XB mov r14d,0xa90e798f
   140013a13:	sbb    eax,0xd06a55db
   140013a18:	add    dl,BYTE PTR [rcx+rbx*4]
   140013a1b:	repz sbb al,0x88
   140013a1e:	or     BYTE PTR [rdx+rdi*1+0x5b3e85b5],ah
   140013a25:	jo     0x140013a9c
   140013a27:	ss out dx,al
   140013a29:	or     al,BYTE PTR [rsi]
   140013a2b:	jb     0x140013a6d
   140013a2d:	ins    DWORD PTR es:[rdi],dx
   140013a2e:	(bad)  
   140013a2f:	or     dh,BYTE PTR [rax-0x2343b81a]
   140013a35:	lahf   
   140013a36:	in     al,dx
   140013a37:	std    
   140013a38:	bnd jge 0x140013a2c
   140013a3b:	pop    rsi
   140013a3c:	lahf   
   140013a3d:	or     eax,DWORD PTR [rdi]
   140013a3f:	push   rax
   140013a40:	loopne 0x1400139e8
   140013a42:	cmp    ch,bh
   140013a44:	cli    
   140013a45:	test   eax,0x26262647
   140013a4a:	pop    rsi
   140013a4b:	outs   dx,BYTE PTR ds:[rsi]
   140013a4c:	sbb    dh,BYTE PTR ss:[rdi-0x6d928509]
   140013a53:	mov    eax,0x45584207
   140013a58:	pop    rbp
   140013a59:	(bad)  
   140013a5a:	mov    ss,WORD PTR [rbx-0x158a218f]
   140013a60:	bnd jl 0x140013a36
   140013a63:	(bad)  
   140013a64:	outs   dx,DWORD PTR ds:[rsi]
   140013a65:	imul   ebp,DWORD PTR ss:[rsp+rbp*4-0x7a110e54],0xb
   140013a6e:	rex.WR
   140013a6f:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140013a71:	movabs ds:0xb74ab8409422ab56,al
   140013a7a:	in     eax,dx
   140013a7b:	jo     0x140013ac6
   140013a7d:	jmp    0x1a6f4a033
   140013a82:	mov    BYTE PTR [rsi+0x46],0xb8
   140013a86:	ss (bad) 
   140013a88:	iret   
   140013a89:	fcmovu st,st(2)
   140013a8b:	cmp    dh,BYTE PTR [rcx-0x5e]
   140013a8e:	or     BYTE PTR [rdx],al
   140013a90:	lahf   
   140013a91:	xor    BYTE PTR [rax+rbp*1],cl
   140013a94:	test   DWORD PTR [rip+0x5ca430c2],esp        # 0x19ca56b5c
   140013a9a:	(bad)  
   140013a9b:	icebp  
   140013a9c:	jge    0x140013add
   140013a9e:	push   rbx
   140013a9f:	jmp    0x140013af6
   140013aa1:	jno    0x140013a2f
   140013aa3:	out    0x7b,eax
   140013aa5:	push   rsp
   140013aa6:	stos   DWORD PTR es:[rdi],eax
   140013aa7:	adc    eax,0x413a8d9a
   140013aac:	sbb    BYTE PTR [rax-0x1912e8d6],dl
   140013ab2:	clc    
   140013ab3:	stc    
   140013ab4:	jbe    0x140013a99
   140013ab6:	rex.WRXB loopne 0x140013ac0
   140013ab9:	mov    esp,0xfc6beaf4
   140013abe:	fwait
   140013abf:	scas   eax,DWORD PTR es:[rdi]
   140013ac0:	cld    
   140013ac1:	pop    rbx
   140013ac2:	xchg   BYTE PTR [rsi-0x402013e6],al
   140013ac8:	xchg   edi,eax
   140013ac9:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140013acb:	pushf  
   140013acc:	sbb    DWORD PTR [rip+0x34f92d90],esp        # 0x174fa6862
   140013ad2:	jne    0x140013ada
   140013ad4:	adc    DWORD PTR [rsi+rax*4-0x41041bac],0x9d2426d9
   140013adf:	test   BYTE PTR [rax+0x62b9c629],cl
   140013ae5:	lahf   
   140013ae6:	cmp    ebp,ebx
   140013ae8:	(bad)  
   140013ae9:	(bad)  
   140013aea:	lahf   
   140013aeb:	jne    0x140013b35
   140013aed:	mov    dl,0x71
   140013aef:	pop    rbp
   140013af0:	jnp    0x140013aad
   140013af2:	in     eax,dx
   140013af3:	xor    ah,BYTE PTR [rax]
   140013af5:	fcom   QWORD PTR [rax]
   140013af7:	xchg   edx,eax
   140013af8:	sbb    eax,0x15a2ce17
   140013afd:	cmp    eax,0x20ca1458
   140013b02:	ins    DWORD PTR es:[rdi],dx
   140013b03:	jo     0x140013b20
   140013b05:	mov    ch,dl
   140013b07:	xchg   BYTE PTR [rax+0x5e],al
   140013b0a:	ret    
   140013b0b:	and    ah,dh
   140013b0d:	jg     0x140013abe
   140013b0f:	rol    DWORD PTR [rdx-0x48],1
   140013b12:	jns    0x140013b2b
   140013b14:	in     al,0xef
   140013b17:	pop    rsp
   140013b18:	movabs al,ds:0xb0fff6ffd7e10fc0
   140013b21:	(bad)  
   140013b22:	fstp   TBYTE PTR [rdi+0x6d7fcffd]
   140013b28:	ins    DWORD PTR es:[rdi],dx
   140013b29:	mov    ebp,0x56ad5f3d
   140013b2e:	add    BYTE PTR [rbx+0x238a2404],dh
   140013b34:	xchg   edx,eax
   140013b35:	cmp    BYTE PTR [rsi+0x71cf9917],ah
   140013b3b:	xchg   esp,eax
   140013b3c:	pop    rax
   140013b3d:	lea    edi,[rip+0x19696b91]        # 0x1596aa6d4
   140013b43:	or     eax,0x61d1d1bc
   140013b48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013b49:	adc    al,0xbc
   140013b4b:	jnp    0x140013b4b
   140013b4d:	add    dh,bl
   140013b4f:	repz mov ebx,DWORD PTR [rcx]
   140013b52:	add    DWORD PTR [rsi+0x5b],0xb8735db5
   140013b59:	sbb    DWORD PTR [rip+0xffffffffcabd6a9e],esp        # 0x10abea5fd
   140013b5f:	out    dx,al
   140013b60:	pop    rbp
   140013b61:	cmp    edi,DWORD PTR [rax]
   140013b63:	js     0x140013bd5
   140013b65:	(bad)  
   140013b66:	cmp    esi,DWORD PTR [rsi+0x6c6c656f]
   140013b6c:	xchg   esp,eax
   140013b6d:	jb     0x140013b38
   140013b6f:	int3   
   140013b70:	in     eax,0x9b
   140013b72:	push   rsi
   140013b73:	(bad)  
   140013b74:	push   0xffffffffffffffb6
   140013b76:	cmc    
   140013b77:	movabs al,ds:0x4d9a864296105211
   140013b80:	rex.RX xchg BYTE PTR [rdi-0x58df020f],r8b
   140013b87:	nop
   140013b88:	cmp    edi,DWORD PTR [rax-0x1]
   140013b8b:	sub    ebp,DWORD PTR [rbp+0x252de9cd]
   140013b91:	rex.WRXB cmp rax,0xffffffffe6ff2cf3
   140013b97:	sub    edi,edi
   140013b99:	(bad)  
   140013b9a:	lea    esp,[rcx+0x1d0f8706]
   140013ba0:	movabs al,ds:0x15e3039fc5d9ad56
   140013ba9:	push   rdx
   140013baa:	fs (bad) 
   140013bac:	(bad)  
   140013bad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013bae:	(bad)  
   140013baf:	repz jl 0x140013c2e
   140013bb2:	fwait
   140013bb3:	xchg   BYTE PTR [rax],bl
   140013bb5:	rex.WRB (bad) 
   140013bb7:	xor    DWORD PTR [rax],ebp
   140013bb9:	(bad)  
   140013bba:	sub    dl,BYTE PTR [rdi]
   140013bbc:	(bad)  
   140013bbd:	out    0x42,eax
   140013bbf:	(bad)  
   140013bc0:	sbb    al,0x59
   140013bc2:	addr32 rex.XB cmp ecx,r15d
   140013bc6:	and    edi,ebx
   140013bc8:	sbb    cl,ah
   140013bca:	fld    TBYTE PTR [rcx-0x556923e2]
   140013bd0:	add    DWORD PTR [rbp-0xceeea28],ebx
   140013bd6:	push   rbx
   140013bd7:	mov    ebp,DWORD PTR [rsi]
   140013bd9:	xchg   edx,eax
   140013bda:	clc    
   140013bdb:	and    edx,DWORD PTR [rdx+0x0]
   140013bde:	xchg   DWORD PTR [rbx],ebx
   140013be0:	push   rbx
   140013be1:	or     DWORD PTR [rip+0x2802228],0x7ff107ef        # 0x142815e13
   140013beb:	std    
   140013bec:	lahf   
   140013bed:	(bad)  
   140013bee:	(bad)  
   140013bef:	in     al,0xe2
   140013bf1:	loop   0x140013bb5
   140013bf3:	(bad)  
   140013bf5:	out    dx,eax
   140013bf6:	jg     0x140013be5
   140013bf8:	outs   dx,DWORD PTR ds:[rsi]
   140013bf9:	std    
   140013bfa:	ret    
   140013bfb:	popf   
   140013bfc:	cmp    esi,DWORD PTR [rsi+0x6c]
   140013bff:	(bad)  
   140013c00:	jne    0x140013c3c
   140013c02:	rex.R jno 0x140013b91
   140013c05:	push   rdx
   140013c06:	mov    dl,BYTE PTR [rdx+0x6c71c490]
   140013c0c:	jbe    0x140013c0f
   140013c0e:	sub    bl,dl
   140013c10:	jrcxz  0x140013c04
   140013c12:	jge    0x140013bc7
   140013c14:	mov    esp,0x5b3df7c3
   140013c19:	rex.WR ror QWORD PTR [rbp+rcx*4-0x6ad52f74],cl
   140013c21:	mov    eax,0xcacf3736
   140013c26:	ficomp DWORD PTR [rdx]
   140013c28:	pop    rbx
   140013c29:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c2b:	imul   edx,esp,0x1c75386b
   140013c31:	sub    DWORD PTR [rcx],esi
   140013c33:	lods   eax,DWORD PTR ds:[rsi]
   140013c34:	(bad)  
   140013c35:	stos   DWORD PTR es:[rdi],eax
   140013c36:	ds push rdx
   140013c38:	lods   eax,DWORD PTR ds:[rsi]
   140013c39:	xchg   esi,eax
   140013c3a:	test   eax,0x34e8ca56
   140013c3f:	and    eax,0x1249144e
   140013c44:	pop    rbx
   140013c45:	jrcxz  0x140013c5d
   140013c47:	clc    
   140013c48:	sahf   
   140013c49:	and    al,0x8
   140013c4b:	add    al,dl
   140013c4d:	mov    dl,0x89
   140013c4f:	or     bh,BYTE PTR [rbx+rsi*4+0x51]
   140013c53:	ret    
   140013c54:	out    0xe1,al
   140013c56:	stc    
   140013c57:	push   rbx
   140013c58:	pop    rdi
   140013c59:	adc    DWORD PTR [rsp+rdx*4],0xffffff82
   140013c5d:	or     BYTE PTR [rsi-0x45],0xc3
   140013c61:	ja     0x140013c82
   140013c63:	jp     0x140013be9
   140013c65:	(bad)  
   140013c66:	lahf   
   140013c67:	jp     0x140013bf3
   140013c69:	test   eax,0xdeec534d
   140013c6e:	mov    ch,0x83
   140013c70:	pop    rdx
   140013c71:	lods   eax,DWORD PTR ds:[rsi]
   140013c72:	pop    si
   140013c74:	movabs al,ds:0x102007d8316aefa5
   140013c7d:	xchg   esi,eax
   140013c7e:	cmp    esp,eax
   140013c80:	loope  0x140013c7d
   140013c82:	(bad)  
   140013c83:	rex.B (bad) 
   140013c85:	push   rbx
   140013c86:	add    bh,cl
   140013c88:	adc    al,0x2
   140013c8a:	rex.WRB pop r11
   140013c8c:	(bad)  
   140013c8d:	or     BYTE PTR [rcx+0xea4d4ca],dl
   140013c93:	out    dx,al
   140013c94:	pushf  
   140013c95:	jne    0x140013d14
   140013c97:	jl     0x140013cc2
   140013c99:	in     al,0x40
   140013c9b:	je     0x140013c61
   140013c9d:	test   esp,edi
   140013c9f:	sbb    DWORD PTR [rdi-0x1e0dcade],esp
   140013ca5:	cs ins DWORD PTR es:[rdi],dx
   140013ca7:	adc    dh,BYTE PTR [rsi]
   140013ca9:	repnz nop
   140013cab:	cs mov ah,0x4f
   140013cae:	rex.WRB (bad) 
   140013cb0:	push   rbp
   140013cb1:	out    0x1c,eax
   140013cb3:	mov    ebx,ss
   140013cb5:	dec    BYTE PTR [rdx-0x2d]
   140013cb8:	add    DWORD PTR [rdi-0x68f8c73f],ebx
   140013cbe:	add    bh,BYTE PTR [rdi+rbp*2+0x389b8fbb]
   140013cc5:	add    edx,0xa3f81401
   140013ccb:	loopne 0x140013cac
   140013ccd:	(bad)  
   140013cce:	in     eax,dx
   140013ccf:	outs   dx,DWORD PTR ds:[rsi]
   140013cd0:	jge    0x140013cbf
   140013cd2:	mov    ch,0x57
   140013cd4:	pop    rsi
   140013cd5:	cdq    
   140013cd6:	sti    
   140013cd7:	retf   
   140013cd8:	mov    edi,0xfa5f2bf2
   140013cdd:	jmp    0x109fe7bdd
   140013ce2:	leave  
   140013ce3:	icebp  
   140013ce4:	icebp  
   140013ce5:	push   rcx
   140013ce6:	and    DWORD PTR [rbx*8-0x6820e4b2],eax
   140013ced:	push   rsp
   140013cee:	stos   DWORD PTR es:[rdi],eax
   140013cef:	gs xchg edx,eax
   140013cf1:	and    al,0x25
   140013cf3:	rex.WRX and r12b,BYTE PTR [rdx+0x7afac27e]
   140013cfa:	or     ecx,DWORD PTR [rdi+0x4a]
   140013cfd:	(bad)  
   140013cfe:	push   rdx
   140013cff:	rex loopne 0x140013d09
   140013d02:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013d03:	sahf   
   140013d04:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013d05:	pop    rsi
   140013d06:	lods   eax,DWORD PTR ds:[rsi]
   140013d07:	push   rax
   140013d08:	sub    eax,0x5c585895
   140013d0d:	loop   0x140013cac
   140013d0f:	jae    0x140013cf8
   140013d11:	cdq    
   140013d12:	pushf  
   140013d13:	sbb    BYTE PTR [rdi+0x7c],ah
   140013d16:	jl     0x140013cb4
   140013d18:	jb     0x140013d53
   140013d1a:	mov    ah,0xe4
   140013d1c:	(bad)  
   140013d1d:	cmp    edi,DWORD PTR [rsi-0x14]
   140013d20:	mov    edx,0xc320d604
   140013d25:	push   rdx
   140013d26:	sub    DWORD PTR [rbx],ebx
   140013d28:	movabs ds:0xe2bb37b3cf3c0845,eax
   140013d31:	sahf   
   140013d32:	rex.WXB
   140013d33:	in     al,dx
   140013d35:	pushf  
   140013d36:	popf   
   140013d37:	cmp    eax,0x2fdacd59
   140013d3c:	js     0x140013d29
   140013d3e:	in     al,dx
   140013d3f:	cmp    edi,DWORD PTR [rax+rsi*8]
   140013d42:	shl    BYTE PTR [rbx],1
   140013d44:	mov    esp,0x3b02e17b
   140013d49:	mov    dh,0x6d
   140013d4b:	addr32 fcmovnbe st,st(6)
   140013d4e:	pop    rcx
   140013d4f:	retf   0xf295
   140013d52:	sar    BYTE PTR [rax],0x6d
   140013d55:	(bad)
   140013d59:	mov    bh,0x6b
   140013d5b:	test   DWORD PTR [rip+0x7f4f607e],0x1b3d291f        # 0x1bf509de3
   140013d65:	add    eax,0xccbcfb08
   140013d6a:	pushf  
   140013d6b:	rex.B scas eax,DWORD PTR es:[rdi]
   140013d6d:	fcmovne st,st(3)
   140013d6f:	push   rdx
   140013d70:	add    al,BYTE PTR [rdi-0x34df504]
   140013d76:	cs ror ah,0xd8
   140013d7a:	sbb    DWORD PTR [rsi+riz*1-0x5],edi
   140013d7e:	fidivr WORD PTR [rdx]
   140013d80:	rex.B sub eax,0x18587d2c
   140013d86:	ror    BYTE PTR [rdi-0x56],cl
   140013d89:	lea    eax,[rsi]
   140013d8b:	rex (bad) 
   140013d8d:	movabs ds:0xd5d9246e105133d,al
   140013d96:	(bad)
   140013d99:	pop    rbp
   140013d9a:	cmp    al,0x90
   140013d9c:	in     eax,0x3e
   140013d9e:	out    dx,eax
   140013d9f:	push   rbp
   140013da0:	icebp  
   140013da1:	mov    edi,0x85901a11
   140013da6:	add    ebp,DWORD PTR [rax]
   140013da8:	lock jle 0x140013d7b
   140013dab:	cwde   
   140013dac:	std    
   140013dad:	mov    dh,0xfd
   140013daf:	mov    edx,DWORD PTR [rdi]
   140013db1:	(bad)  
   140013db2:	cmp    al,0xf5
   140013db4:	sbb    edi,edi
   140013db6:	sar    edi,cl
   140013db8:	clc    
   140013db9:	out    0xef,al
   140013dbb:	jg     0x140013da2
   140013dbd:	imul   edi
   140013dbf:	mov    eax,0x3f7bdef7
   140013dc4:	cmc    
   140013dc5:	mov    cl,0x8f
   140013dc7:	jg     0x140013db5
   140013dc9:	sahf   
   140013dca:	std    
   140013dcb:	(bad)  
   140013dcc:	(bad)  
   140013dcd:	in     al,dx
   140013dce:	(bad)  
   140013dcf:	(bad)  
   140013dd0:	push   0x7a
   140013dd2:	rex.WX and rax,0xffffffffa15344a8
   140013dd8:	mov    WORD PTR [rsi-0x666269e5],gs
   140013dde:	sbb    al,0x4c
   140013de0:	push   rax
   140013de1:	rex.WX cqo 
   140013de3:	(bad)  
   140013de4:	pop    rsi
   140013de5:	push   rdx
   140013de6:	and    DWORD PTR [rax-0x5d8e0e0f],eax
   140013dec:	sub    BYTE PTR [rdx+0x71],ah
   140013def:	imul   ebx,DWORD PTR [rcx+0x2675f5d5],0x1d18c6c6
   140013df9:	sbb    eax,0xf622c231
   140013dfe:	(bad)  
   140013dff:	(bad)  
   140013e00:	mov    dl,0xe4
   140013e02:	pop    rsp
   140013e03:	jmp    0x140013e10
   140013e05:	mov    dl,0x6f
   140013e07:	(bad)  
   140013e08:	push   rsp
   140013e09:	shl    ebx,1
   140013e0b:	imul   esi,DWORD PTR [rdi+0x484fe15c],0xffffffb3
   140013e12:	test   eax,0x9e6e6e77
   140013e17:	addr32 lahf 
   140013e19:	jnp    0x140013d9c
   140013e1b:	push   rdi
   140013e1c:	pop    rdi
   140013e1d:	cmp    eax,0xe534a85
   140013e22:	out    dx,al
   140013e23:	ffreep st(7)
   140013e25:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013e26:	mov    DWORD PTR [rcx],esi
   140013e28:	(bad)  
   140013e29:	push   rdx
   140013e2a:	jns    0x140013e4c
   140013e2c:	push   0x6a
   140013e2e:	or     eax,DWORD PTR [rbx+0xbbf19d2]
   140013e34:	repz jge 0x140013e56
   140013e37:	(bad)  
   140013e38:	hlt    
   140013e39:	lock lock or al,0xf9
   140013e3d:	(bad)  
   140013e3e:	mov    bl,0xb9
   140013e40:	mov    edi,0xb94ab135
   140013e45:	int3   
   140013e46:	shl    al,1
   140013e48:	adc    BYTE PTR [rbp+0x3dad1b76],bl
   140013e4e:	fimul  WORD PTR [rbx]
   140013e50:	stc    
   140013e51:	lock fbld TBYTE PTR [rsi+rsi*8+0xb648096]
   140013e59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e5a:	fs and ecx,ecx
   140013e5d:	add    edx,DWORD PTR [rcx+0x55]
   140013e60:	test   dh,cl
   140013e62:	movabs ds:0xff22016aca14cb20,al
   140013e6b:	mov    eax,0x9b4354b9
   140013e70:	(bad)  
   140013e71:	loopne 0x140013ea6
   140013e73:	or     ch,dh
   140013e75:	(bad)  
   140013e77:	or     esp,esp
   140013e79:	call   FWORD PTR [rsi-0x1f5d2c27]
   140013e7f:	add    DWORD PTR [rax+rdi*8],edx
   140013e82:	adc    DWORD PTR [rax-0x4dace77f],esp
   140013e88:	mov    esi,0xa9f4e672
   140013e8d:	sti    
   140013e8e:	iret   
   140013e8f:	pushf  
   140013e90:	ds cmc 
   140013e92:	(bad)  
   140013e93:	mov    edi,0xb7bf97fa
   140013e98:	jne    0x140013e69
   140013e9a:	fidivr WORD PTR [rbp-0x6e0dc1d9]
   140013ea0:	mov    ebx,0xec763aef
   140013ea5:	fsubr  st,st(5)
   140013ea7:	jnp    0x140013e9f
   140013ea9:	in     al,dx
   140013eaa:	fnstcw WORD PTR [rdx]
   140013eac:	xor    eax,0x6cdc3535
   140013eb1:	ror    DWORD PTR ss:[rax-0x4c],1
   140013eb5:	push   rsi
   140013eb6:	rex.RX
   140013eb7:	rex.WXB (bad) 
   140013eb9:	(bad)  
   140013eba:	mov    dh,0xb7
   140013ebc:	lods   eax,DWORD PTR ds:[rsi]
   140013ebd:	jmp    0x11f525009
   140013ec2:	mov    ah,0xfc
   140013ec4:	rex.RX
   140013ec5:	rex.RXB
   140013ec6:	rex.RX push 0xffffffffbc5c3a77
   140013ecc:	je     0x140013e67
   140013ece:	stos   DWORD PTR es:[rdi],eax
   140013ecf:	xlat   BYTE PTR ds:[rbx]
   140013ed0:	scas   al,BYTE PTR es:[rdi]
   140013ed1:	xor    esi,DWORD PTR [rcx]
   140013ed3:	ds (bad) 
   140013ed5:	enter  0x88e8,0xd9
   140013ed9:	loop   0x140013f3e
   140013edb:	repz out dx,eax
   140013edd:	int3   
   140013ede:	call   0x1ab5df450
   140013ee3:	xor    ch,al
   140013ee5:	jp     0x140013f48
   140013ee7:	je     0x140013ee1
   140013ee9:	xor    esi,DWORD PTR [rdx+0xe]
   140013eec:	and    BYTE PTR [rax-0xa8e1029],0xea
   140013ef3:	jne    0x140013f53
   140013ef5:	(bad)  
   140013ef6:	jge    0x140013e92
   140013ef8:	xor    esp,DWORD PTR [rdi-0x21]
   140013efb:	movabs ds:0x4da6c6363131ebd7,al
   140013f04:	jrcxz  0x140013eda
   140013f06:	imul   esi,DWORD PTR [rbp-0x2d],0x6a
   140013f0a:	(bad)  [rax]
   140013f0c:	pop    rsp
   140013f0d:	rex.X
   140013f0e:	es add eax,0x13c0852e
   140013f14:	adc    ch,BYTE PTR [rcx+0xb]
   140013f17:	jle    0x140013ed7
   140013f19:	lock in eax,dx
   140013f1b:	push   rsp
   140013f1c:	movabs eax,ds:0x952a7adb6411fd39
   140013f25:	sub    bl,BYTE PTR [rbx+0x7f3827c6]
   140013f2b:	out    dx,al
   140013f2c:	pop    rbp
   140013f2d:	(bad)  
   140013f2e:	and    ah,cl
   140013f30:	push   rsp
   140013f31:	jle    0x140013f39
   140013f33:	imul   edi,ecx,0xded0170d
   140013f39:	loopne 0x140013f33
   140013f3b:	add    edi,DWORD PTR [rcx-0x68]
   140013f3e:	stc    
   140013f3f:	(bad)  
   140013f40:	(bad)  
   140013f41:	not    ebx
   140013f43:	mov    dh,0x96
   140013f45:	movabs ds:0xe6be49e964164437,al
   140013f4e:	and    BYTE PTR [rax+rcx*1+0x3d419080],al
   140013f55:	rex.WRXB fcomip st,st(0)
   140013f58:	xchg   ecx,eax
   140013f59:	rex.WRXB or rax,0xb218ef2
   140013f5f:	(bad)  
   140013f60:	or     dl,BYTE PTR [rax+rdi*8]
   140013f63:	push   rcx
   140013f64:	movabs al,ds:0xeaceddbbf40c47ec
   140013f6d:	sub    ebp,DWORD PTR [rdi]
   140013f6f:	mov    edi,0x9795fa74
   140013f74:	pop    rdi
   140013f75:	cli    
   140013f76:	rex.XB (bad) 
   140013f78:	jl     0x140013ff4
   140013f7a:	jp     0x140013f6f
   140013f7c:	mov    es,WORD PTR [rbx]
   140013f7e:	xchg   DWORD PTR [rsi],ecx
   140013f80:	fnsave [rsi-0x4]
   140013f83:	mov    dh,0x63
   140013f85:	rex.RXB (bad) 
   140013f87:	(bad)  
   140013f88:	cmp    edi,DWORD PTR [rsi-0x10]
   140013f8b:	rol    BYTE PTR [rcx+0x369b337d],0x4d
   140013f92:	xor    al,0xcb
   140013f94:	and    eax,0x2a9bc2ab
   140013f99:	stos   BYTE PTR es:[rdi],al
   140013f9a:	in     eax,0xb2
   140013f9c:	(bad)  
   140013f9d:	ret    
   140013f9e:	push   0xffffffffffffffe3
   140013fa0:	or     al,0xaa
   140013fa2:	(bad)  
   140013fa3:	or     dh,BYTE PTR [rbp-0x1a7a7ab6]
   140013fa9:	and    eax,0x917f3dde
   140013fae:	jae    0x140013f97
   140013fb0:	(bad)  
   140013fb1:	shr    BYTE PTR [rsp+rsi*1+0x18],1
   140013fb5:	(bad)  
   140013fb6:	(bad)  
   140013fb7:	(bad)  
   140013fb8:	fidivr DWORD PTR [rbp+0x61]
   140013fbb:	sbb    al,ah
   140013fbd:	stc    
   140013fbe:	mov    esi,0x74c20a71
   140013fc3:	(bad)  
   140013fc4:	adc    BYTE PTR [rdx-0x6ad7aadc],bl
   140013fca:	shr    ch,cl
   140013fcc:	jbe    0x140014027
   140013fce:	pop    rdi
   140013fcf:	outs   dx,DWORD PTR ds:[rsi]
   140013fd0:	jno    0x140013fb7
   140013fd2:	(bad)  
   140013fd3:	push   rbp
   140013fd4:	scas   al,BYTE PTR es:[rdi]
   140013fd5:	pop    rsi
   140013fd6:	mov    ebx,0xd7abd5c6
   140013fdb:	ror    QWORD PTR [rsi*1-0x626493e6],1
   140013fe3:	gs push 0x1a3761a8
   140013fe9:	pop    rbx
   140013fea:	or     ecx,0xffffffd1
   140013fed:	test   BYTE PTR [eax+ecx*2],dl
   140013ff1:	fucomip st,st(6)
   140013ff3:	add    DWORD PTR [rsi+rbx*4+0x27c0fe31],edx
   140013ffa:	enter  0xbe19,0x67
   140013ffe:	(bad)  
   140013fff:	cdq    
   140014000:	mov    eax,0x354d3e73
   140014005:	rex.B loopne 0x14001407b
   140014008:	cld    
   140014009:	fdiv   DWORD PTR [rcx]
   14001400b:	sahf   
   14001400c:	jp     0x140013ff8
   14001400e:	imul   edx,DWORD PTR [rdx+rdx*2-0x519b0b8],0x44f1eefc
   140014019:	(bad)  
   14001401a:	jp     0x140014090
   14001401c:	fwait
   14001401d:	jg     0x140013ffc
   14001401f:	scas   rax,QWORD PTR es:[rdi]
   140014021:	movabs eax,ds:0x4d60aa8e63369b0d
   14001402a:	push   rsp
   14001402b:	cwde   
   14001402c:	sbb    al,0x3f
   14001402e:	xchg   edi,eax
   14001402f:	idiv   DWORD PTR [rbx+0x7354e5d1]
   140014035:	adc    DWORD PTR [rbx-0x30],0x68
   140014039:	lods   eax,DWORD PTR ds:[rsi]
   14001403a:	add    esp,DWORD PTR [rax-0x3e1f3f34]
   140014040:	mov    fs,WORD PTR [rip+0x208ec3f0]        # 0x160900436
   140014046:	call   FWORD PTR [rcx+0x53]
   140014049:	add    BYTE PTR [rip+0xffffffff9bdc003e],r8b        # 0xdbdd408e
   140014050:	sub    eax,ecx
   140014052:	mov    esp,0xe2c0ba99
   140014057:	(bad)  
   140014058:	stos   DWORD PTR es:[rdi],eax
   140014059:	push   rdi
   14001405a:	fidivr WORD PTR [rsi-0x1c350a86]
   140014060:	(bad)  
   140014061:	ds cld 
   140014063:	push   rax
   140014064:	mov    bl,0x5e
   140014066:	outs   dx,DWORD PTR ds:[rsi]
   140014067:	int3   
   140014068:	rex.WR
   140014069:	rex.WRB
   14001406a:	rex.WRXB in eax,dx
   14001406c:	cmp    eax,0x23b6f47a
   140014071:	ja     0x140014052
   140014073:	std    
   140014074:	shl    DWORD PTR [rbx+0x391c8f87],1
   14001407a:	mov    ah,0x77
   14001407c:	imul   esi
   14001407e:	leave  
   14001407f:	rex.RX mov bl,0x21
   140014082:	rex.WRB lahf 
   140014084:	(bad)  
   140014085:	loop   0x1400140ab
   140014087:	es mov dl,0x4e
   14001408a:	(bad)  
   14001408b:	js     0x1400140f1
   14001408d:	mov    BYTE PTR [rsi-0x59],dh
   140014090:	ret    
   140014091:	retf   0x2aca
   140014094:	imul   ebp,DWORD PTR [rbp+0x2f17ab36],0x42
   14001409b:	stos   BYTE PTR es:[rdi],al
   14001409c:	or     edx,eax
   14001409e:	nop
   14001409f:	jb     0x1400140ca
   1400140a1:	and    al,0x8
   1400140a3:	jl     0x140014070
   1400140a5:	in     al,0xd3
   1400140a7:	rex.R jno 0x1400140f6
   1400140aa:	xchg   edx,eax
   1400140ab:	cwde   
   1400140ac:	fsin   
   1400140ae:	jle    0x14001406f
   1400140b0:	(bad)  
   1400140b1:	(bad)  
   1400140b2:	(bad)  
   1400140b3:	cmp    dh,BYTE PTR [rcx+0x14]
   1400140b6:	adc    eax,ebp
   1400140b8:	xor    edx,edx
   1400140ba:	adc    ecx,DWORD PTR [rdi+rcx*2+0x4f]
   1400140be:	push   rcx
   1400140bf:	lods   eax,DWORD PTR ds:[rsi]
   1400140c0:	xchg   esp,eax
   1400140c1:	sub    DWORD PTR [rdi-0x2ed6f735],edx
   1400140c7:	imul   ecx,DWORD PTR [rdx-0x6e],0xd76c7624
   1400140ce:	rex.WX jb 0x14001413a
   1400140d1:	rex.WXB in eax,dx
   1400140d3:	cmc    
   1400140d4:	fs pushfw 
   1400140d7:	shl    bl,cl
   1400140d9:	nop
   1400140da:	add    DWORD PTR [rdi-0x20],0xdbbef8f9
   1400140e1:	loopne 0x140014146
   1400140e3:	ret    0x997e
   1400140e6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400140e7:	and    esi,eax
   1400140e9:	(bad)  
   1400140ea:	pop    rbx
   1400140eb:	lods   eax,DWORD PTR ds:[rsi]
   1400140ec:	ss neg esp
   1400140ef:	jae    0x140014128
   1400140f1:	fidivr WORD PTR [eax]
   1400140f4:	ret    
   1400140f5:	or     DWORD PTR [rdi],0x3e
   1400140f8:	rex.R mov ebp,0x43ec335e
   1400140fe:	sub    DWORD PTR [rdx-0x39],esi
   140014101:	ins    DWORD PTR es:[rdi],dx
   140014102:	(bad)  
   140014103:	push   rax
   140014104:	in     eax,dx
   140014105:	push   0x30
   140014107:	jrcxz  0x1400140cd
   140014109:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001410a:	mov    ch,0xc2
   14001410c:	and    ebp,0xb084729b
   140014112:	jmp    0x1403c09a6
   140014117:	scas   al,BYTE PTR es:[rdi]
   140014118:	and    QWORD PTR [rax+r8*2+0x72a93efa],r8
   140014120:	xor    eax,DWORD PTR [rax]
   140014122:	add    eax,DWORD PTR [rdi]
   140014124:	movabs eax,ds:0x7ae1eff62a025a75
   14001412d:	mov    gs,WORD PTR [rsi+0x14]
   140014130:	shl    DWORD PTR [rbp+0x4fbee470],1
   140014136:	repz (bad) 
   140014138:	test   DWORD PTR [rbx],eax
   14001413a:	sub    al,dh
   14001413c:	xchg   r9d,eax
   14001413e:	jg     0x140014183
   140014140:	and    eax,0x6718440
   140014145:	jmp    0x1400140f4
   140014147:	(bad)  
   140014148:	cli    
   140014149:	(bad)  
   14001414a:	mov    bh,0xce
   14001414c:	scas   al,BYTE PTR es:[rdi]
   14001414d:	mov    edi,0xb3d9d6f2
   140014152:	idiv   edi
   140014154:	mov    ebx,0x58eaf83f
   140014159:	movabs ds:0xdba1d0f078399cd1,eax
   140014162:	outs   dx,BYTE PTR ds:[rsi]
   140014163:	mov    ebx,0xee3bb6ed
   140014168:	mov    esp,0x381f0e3
   14001416d:	xchg   DWORD PTR [rsi+0x65b6dd6d],esi
   140014173:	mov    ah,0x56
   140014175:	lods   eax,DWORD PTR ds:[rsi]
   140014176:	jnp    0x14001415d
   140014178:	push   rdx
   140014179:	mov    DWORD PTR [rsi+0x3f],edi
   14001417c:	and    cl,BYTE PTR [rbx+rax*1]
   14001417f:	sbb    dh,ch
   140014181:	cmp    dl,BYTE PTR [rcx+0x1c]
   140014184:	shr    edi,cl
   140014186:	rex.RXB mov r12b,0xd6
   140014189:	(bad)  [rbx+rdi*2+0x5d]
   14001418d:	repz jne 0x14001413b
   140014190:	ins    DWORD PTR es:[rdi],dx
   140014191:	data16 or dl,dl
   140014194:	je     0x1400141c6
   140014196:	jnp    0x140014137
   140014198:	push   0x12
   14001419a:	popf   
   14001419b:	push   rax
   14001419c:	stos   DWORD PTR es:[rdi],eax
   14001419d:	push   rsi
   14001419e:	icebp  
   14001419f:	(bad)  
   1400141a0:	(bad)  
   1400141a1:	pop    rsi
   1400141a2:	xor    BYTE PTR [rax-0x4b125c2a],ch
   1400141a8:	pop    rdi
   1400141a9:	push   0xffffffffffffff8c
   1400141ab:	(bad)  
   1400141ac:	int    0x2c
   1400141ae:	cmp    BYTE PTR [rbp+0x1e],al
   1400141b1:	add    DWORD PTR [rax],ecx
   1400141b3:	rex.WRXB
   1400141b4:	fs in  eax,dx
   1400141b6:	rex.RXB push r11
   1400141b8:	in     eax,dx
   1400141b9:	test   DWORD PTR [rcx],0x3ec534a4
   1400141bf:	(bad)  
   1400141c0:	mov    bh,0xba
   1400141c2:	mov    ecx,DWORD PTR [rbp-0x10cc8c1b]
   1400141c8:	movabs al,ds:0x8bf17c5ff16f5f58
   1400141d1:	push   rsp
   1400141d2:	sub    edx,DWORD PTR [rbp+0x1e]
   1400141d5:	jnp    0x1400141d3
   1400141d7:	jno    0x14001422f
   1400141d9:	xlat   BYTE PTR ds:[rbx]
   1400141da:	(bad)  
   1400141db:	test   al,0x56
   1400141dd:	(bad)  
   1400141de:	in     al,dx
   1400141df:	clc    
   1400141e0:	movabs al,ds:0x5c5b3d27902e67c8
   1400141e9:	fsubr  QWORD PTR [rax-0x4e0467f7]
   1400141ef:	rex.B js 0x140014261
   1400141f2:	adc    ebx,DWORD PTR [rsi-0x5f46fb7f]
   1400141f8:	push   rsp
   1400141f9:	test   eax,0x68572950
   1400141fe:	scas   eax,DWORD PTR es:[rdi]
   1400141ff:	scas   eax,DWORD PTR es:[rdi]
   140014200:	fwait
   140014201:	adc    al,BYTE PTR [rdx]
   140014203:	sbb    ch,BYTE PTR [rip+0xffffffffaa41668c]        # 0xea42a895
   140014209:	push   rsp
   14001420a:	(bad)  
   14001420b:	jno    0x14001420d
   14001420d:	adc    DWORD PTR [rbx],eax
   14001420f:	xor    edi,0x18
   140014212:	add    sil,r13b
   140014215:	imul   esi,edi,0x77
   140014218:	jb     0x140014259
   14001421a:	push   rbx
   14001421b:	cmp    BYTE PTR [rax-0x1ba9c0fe],al
   140014221:	sbb    eax,0xd9bcc082
   140014226:	jp     0x1400141e8
   140014228:	retf   0xfafa
   14001422b:	fcmovb st,st(5)
   14001422d:	addr32 lahf 
   14001422f:	jge    0x14001422b
   140014231:	(bad)
   140014234:	jge    0x140014230
   140014236:	stos   DWORD PTR es:[rdi],eax
   140014237:	jmp    rdx
   140014239:	pop    rdi
   14001423a:	js     0x14001428f
   14001423c:	push   rbx
   14001423d:	push   rbx
   14001423e:	sar    DWORD PTR [rbx],cl
   140014240:	ja     0x14001422f
   140014242:	fidivr WORD PTR [rbp-0x10]
   140014245:	clc    
   140014246:	icebp  
   140014247:	jrcxz  0x140014290
   140014249:	out    dx,eax
   14001424a:	mov    esp,0xfbddaee3
   14001424f:	imul   bh
   140014251:	fstp   TBYTE PTR [rbp+0x4aa6d369]
   140014257:	mov    ch,0x5a
   140014259:	movabs ds:0x711ab56a238e21a2,al
   140014262:	pushf  
   140014263:	adc    ch,al
   140014265:	jge    0x1400141f9
   140014267:	cmp    BYTE PTR [rsi],ah
   140014269:	mov    dl,BYTE PTR [rbx]
   14001426b:	loop   0x140014295
   14001426d:	and    dh,BYTE PTR [rcx+0x464549cb]
   140014273:	movsxd esi,DWORD PTR [rcx]
   140014275:	sbb    esi,DWORD PTR fs:[rdi-0xfd22747]
   14001427c:	xor    al,0xb
   14001427e:	xor    eax,0x2997e1cd
   140014283:	repnz fisub DWORD PTR [rdi+0x29]
   140014287:	jge    0x1400142f2
   140014289:	pop    rbx
   14001428a:	jp     0x140014302
   14001428c:	movsxd ecx,DWORD PTR [rdi-0x4107ee11]
   140014292:	sub    esi,esi
   140014294:	jns    0x140014268
   140014296:	adc    bh,BYTE PTR [rsi+0x6c]
   140014299:	cmp    edx,eax
   14001429b:	xchg   ch,ah
   14001429d:	stc    
   14001429e:	(bad)  
   14001429f:	xchg   ecx,eax
   1400142a0:	push   rdx
   1400142a1:	adc    al,BYTE PTR [rbp+0x11]
   1400142a4:	jno    0x140014238
   1400142a6:	lock stc 
   1400142a8:	iret   
   1400142a9:	std    
   1400142aa:	sbb    esi,ebp
   1400142ac:	mov    eax,0x785e76f3
   1400142b1:	icebp  
   1400142b2:	(bad)  
   1400142b3:	pushf  
   1400142b4:	jle    0x1400142b3
   1400142b6:	or     al,0x57
   1400142b8:	scas   al,BYTE PTR es:[rdi]
   1400142b9:	pop    rsp
   1400142ba:	(bad)  
   1400142bb:	sbb    BYTE PTR [rdx-0x41def9f],dl
   1400142c1:	pop    rsi
   1400142c2:	mov    dh,0x10
   1400142c4:	push   rsp
   1400142c5:	imul   ebx,DWORD PTR [rbx-0x12],0xffffffcf
   1400142c9:	jne    0x1400142eb
   1400142cb:	cmp    al,0x21
   1400142cd:	rex.WRB cmp rax,0xffffffffc12016c3
   1400142d3:	push   0xc56a60b
   1400142d8:	adc    al,0x5b
   1400142da:	(bad)  
   1400142db:	rex.WR jne 0x140014268
   1400142de:	hlt    
   1400142df:	add    al,0xda
   1400142e1:	(bad)  
   1400142e2:	sub    DWORD PTR [rax+0x4b],ebp
   1400142e5:	rex.WB
   1400142e6:	rex.WRX xchg rdx,rax
   1400142e8:	push   rsp
   1400142e9:	add    DWORD PTR [rbp+0x6],edx
   1400142ec:	xchg   BYTE PTR [rsi+0xcecf86e],ch
   1400142f2:	(bad)  
   1400142f4:	jno    0x140014358
   1400142f6:	jb     0x140014309
   1400142f8:	rex.X loope 0x1400142fb
   1400142fb:	or     bh,BYTE PTR [rax+rbx*1-0x48]
   1400142ff:	xor    DWORD PTR [rdx],edi
   140014301:	call   0x19576ef69
   140014306:	sub    DWORD PTR [rip+0xffffffffa5f2f977],esi        # 0xe5f43c83
   14001430c:	xor    edx,DWORD PTR [rdi-0xb85a0d1]
   140014312:	icebp  
   140014313:	(bad)  
   140014314:	mov    esi,0xc1fbe237
   140014319:	hlt    
   14001431a:	in     al,0xe4
   14001431c:	in     al,0xee
   14001431e:	and    eax,DWORD PTR [rdi-0x72]
   140014321:	sbb    al,0x3e
   140014323:	jbe    0x140014321
   140014325:	(bad)  
   140014326:	xchg   ecx,eax
   140014327:	movabs ds:0xe4d773b1d9ec8f47,eax
   140014330:	clc    
   140014331:	clc    
   140014332:	js     0x1400142ed
   140014334:	push   rsi
   140014335:	sub    DWORD PTR [rbx+0x29],edx
   140014338:	xchg   DWORD PTR [rbx+rdi*4+0x5d],esi
   14001433c:	(bad)  
   14001433d:	and    BYTE PTR [rsi],ah
   14001433f:	or     DWORD PTR [rbx-0x1e],eax
   140014342:	sub    BYTE PTR [rdx],dh
   140014344:	push   rcx
   140014345:	rex.X adc al,0x11
   140014348:	rex.RB jge 0x140014316
   14001434b:	fbstp  TBYTE PTR [rdi]
   14001434d:	je     0x1400143ae
   14001434f:	(bad)  
   140014350:	mov    ebx,0x7766526d
   140014355:	add    BYTE PTR [rdx-0x1d],bl
   140014358:	ret    
   140014359:	mov    al,0xfd
   14001435b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001435c:	xor    al,0xe1
   14001435e:	mov    ebp,0xdf3dfbcb
   140014363:	(bad)  
   140014364:	mov    al,0x43
   140014366:	(bad)  
   140014367:	sahf   
   140014368:	out    dx,eax
   140014369:	fcmovnbe st,st(0)
   14001436b:	fistp  WORD PTR [rdx]
   14001436d:	jl     0x14001435d
   14001436f:	add    eax,0xeeb829e5
   140014374:	sti    
   140014375:	push   rsp
   140014376:	sub    DWORD PTR [rsi+0x1b199656],edx
   14001437c:	sbb    eax,0xddf7d3e5
   140014381:	(bad)  
   140014382:	rex.WRXB fnstsw WORD PTR [r11+0x2f]
   140014386:	rex.WXB mov rcx,r11
   140014389:	mov    esp,0x572cf679
   14001438e:	cs pop rdi
   140014390:	loop   0x14001435c
   140014392:	xchg   ebp,eax
   140014393:	stos   DWORD PTR es:[rdi],eax
   140014394:	sub    al,0x2e
   140014396:	sub    eax,0x7447ebd1
   14001439b:	mov    ebx,0xa0c20ddd
   1400143a0:	out    dx,al
   1400143a1:	sub    bh,BYTE PTR [rcx-0x3125a21]
   1400143a7:	add    DWORD PTR [rdx+0x64],eax
   1400143aa:	lods   eax,DWORD PTR ds:[rsi]
   1400143ab:	rex.WRB pop r11
   1400143ad:	push   rbp
   1400143ae:	movabs al,ds:0x2628bd01f9e1efd7
   1400143b7:	push   rcx
   1400143b8:	mov    al,BYTE PTR [rax+0x4a]
   1400143bb:	cmp    ebp,DWORD PTR [rdx-0x54]
   1400143be:	mov    BYTE PTR [rdx+0x718c5e],ah
   1400143c4:	xchg   edx,eax
   1400143c5:	(bad)  
   1400143c6:	jbe    0x1400143c8
   1400143c8:	out    dx,al
   1400143c9:	fisub  DWORD PTR [rdi-0x393b8c0a]
   1400143cf:	hlt    
   1400143d0:	movabs al,ds:0x1a77060ff8160228
   1400143d9:	mov    ecx,0xac0ba0e8
   1400143de:	and    eax,0xf2e57c49
   1400143e3:	in     eax,0x4b
   1400143e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400143e6:	cs pop rdi
   1400143e8:	mov    esi,0xf03d0f4
   1400143ed:	fdivr  QWORD PTR [rdi]
   1400143ef:	push   rsp
   1400143f0:	cs xchg edi,eax
   1400143f2:	mov    bh,0xcd
   1400143f4:	outs   dx,BYTE PTR ds:[rsi]
   1400143f5:	fnsave [rsi+0x1dced767]
   1400143fb:	xchg   DWORD PTR [rsi-0x1f1c40e1],ecx
   140014401:	movabs eax,ds:0xf36bb5df6fb687c3
   14001440a:	jo     0x1400143af
   14001440c:	or     DWORD PTR [rax+0x7c2b8e8c],ebp
   140014412:	cmovg  edi,edx
   140014415:	hlt    
   140014416:	movabs ds:0x9c9ed8e2a31c711e,eax
   14001441f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014420:	push   rbp
   140014421:	sub    BYTE PTR [rbp+0x4a4cf7c0],ah
   140014427:	(bad)  
   140014428:	loop   0x14001448a
   14001442a:	xchg   ebx,eax
   14001442b:	movsxd ecx,DWORD PTR [rbx-0x21]
   14001442e:	in     al,dx
   14001442f:	out    0xf3,al
   140014431:	ins    BYTE PTR es:[rdi],dx
   140014432:	ficomp WORD PTR [rdi]
   140014434:	(bad)  
   140014435:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014436:	(bad)  
   140014437:	(bad)  
   140014438:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014439:	xchg   DWORD PTR [rdi],ebp
   14001443b:	jae    0x1400143fa
   14001443d:	jle    0x1400144b6
   14001443f:	cli    
   140014440:	imul   rcx,QWORD PTR [r11+r10*8-0x212f2182],0xffffffffedd0d003
   14001444c:	hlt    
   14001444d:	mov    WORD PTR [rsi],?
   14001444f:	lahf   
   140014450:	adc    BYTE PTR [rcx-0x24119e4f],0xfe
   140014457:	push   rbx
   140014458:	or     BYTE PTR [rcx],ch
   14001445a:	pop    rax
   14001445b:	pop    rbp
   14001445c:	pop    rbp
   14001445d:	movsxd esi,DWORD PTR [rcx+0x71]
   140014460:	mov    ebx,edx
   140014462:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014463:	rex.WRXB sbb r11,QWORD PTR [r9-0x6d32934d]
   14001446a:	jrcxz  0x14001447f
   14001446c:	mov    eax,0xeac2013d
   140014471:	or     eax,0x9a661698
   140014476:	push   0x148a3548
   14001447b:	and    DWORD PTR [rcx-0x4bbf7029],esp
   140014481:	test   eax,0x49c4ab55
   140014486:	xchg   esp,eax
   140014487:	(bad)  
   140014488:	or     dl,bh
   14001448a:	mov    ebp,0xb8b8b27e
   14001448f:	mov    eax,0xf2014986
   140014494:	add    eax,0x11f86740
   140014499:	or     ch,BYTE PTR es:[rbx-0x4d]
   14001449d:	sar    eax,1
   14001449f:	xor    edx,DWORD PTR [rsi+rcx*1]
   1400144a2:	movabs al,ds:0x418ad2abe4687fc0
   1400144ab:	in     eax,dx
   1400144ac:	(bad)  
   1400144ad:	adc    eax,0x7af5e858
   1400144b2:	(bad)  
   1400144b3:	(bad)  
   1400144b4:	mov    esi,0x67b3c6f9
   1400144b9:	fistp  QWORD PTR [rbx+riz*4-0x7]
   1400144bd:	rol    BYTE PTR [rbx],0xf
   1400144c0:	rex.WR (bad) 
   1400144c2:	push   0xfffffffffffffff5
   1400144c4:	in     eax,dx
   1400144c5:	fwait
   1400144c6:	(bad)  
   1400144c7:	outs   dx,DWORD PTR ds:[rsi]
   1400144c8:	fidivr WORD PTR [rbx-0x7c3e0091]
   1400144ce:	(bad)  
   1400144cf:	outs   dx,BYTE PTR ds:[rsi]
   1400144d0:	(bad)  
   1400144d1:	jno    0x140014543
   1400144d3:	out    dx,eax
   1400144d4:	sahf   
   1400144d5:	cmp    eax,0x66679bb3
   1400144da:	xchg   edx,ebp
   1400144dc:	cmc    
   1400144dd:	(bad)  
   1400144de:	sahf   
   1400144df:	lock lock cmp al,0x41
   1400144e3:	pop    rdi
   1400144e4:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400144e6:	xor    al,0xda
   1400144e8:	add    ecx,DWORD PTR [rcx+0x6c]
   1400144eb:	idiv   al
   1400144ed:	and    eax,0x27144249
   1400144f2:	js     0x14001456a
   1400144f4:	sub    DWORD PTR [rdi-0x18],esp
   1400144f7:	stc    
   1400144f8:	clc    
   1400144f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400144fa:	rcr    BYTE PTR [rdx],0xbe
   1400144fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400144fe:	clc    
   1400144ff:	cli    
   140014500:	or     DWORD PTR [rbp+0x5],0xe33b023c
   140014507:	out    dx,eax
   140014508:	fidivr DWORD PTR [rbp-0x80]
   14001450b:	push   rbp
   14001450c:	cld    
   14001450d:	and    eax,0x91c87e33
   140014512:	js     0x140014544
   140014514:	push   rbx
   140014515:	add    DWORD PTR [rdx+0xa],0x17
   140014519:	movabs ds:0xeb6b6b0d48109e3,eax
   140014522:	add    cl,BYTE PTR [rdx+0x61]
   140014525:	enter  0xadf6,0xdb
   140014529:	fdiv   DWORD PTR [rcx+0x18411b7d]
   14001452f:	movabs fs:0xa5cf8359ef8252fc,eax
   140014539:	adc    eax,0xd2bacd6e
   14001453e:	sub    DWORD PTR [rdx],ecx
   140014540:	(bad)  
   140014541:	adc    eax,DWORD PTR [rax]
   140014543:	mov    ch,0x5a
   140014545:	lea    esp,[rcx+0x389221a1]
   14001454b:	es lock rex.XB jp 0x1400145a6
   140014550:	cmp    esp,DWORD PTR [rcx-0x43]
   140014553:	mov    ch,0xde
   140014555:	mov    ebx,0x12e2f972
   14001455a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001455b:	or     eax,0x3f538308
   140014560:	jg     0x1400145af
   140014562:	popf   
   140014563:	icebp  
   140014564:	out    0xbb,eax
   140014566:	add    al,0x19
   140014568:	or     al,BYTE PTR [rdi]
   14001456a:	push   rax
   14001456b:	loopne 0x14001456c
   14001456d:	(bad)  
   14001456e:	in     al,0xdf
   140014570:	mov    ecx,?
   140014572:	pop    rsp
   140014573:	mov    ch,0x87
   140014575:	rex.WRB (bad) 
   140014577:	sub    BYTE PTR [rbx-0x13],0x76
   14001457b:	jmp    0x140014549
   14001457d:	fnstenv [rbx-0x981c191]
   140014583:	in     al,dx
   140014584:	rex.XB (bad) 
   140014588:	out    0xd7,al
   14001458a:	(bad)  
   14001458b:	push   rbp
   14001458c:	sub    dl,ch
   14001458e:	popf   
   14001458f:	jnp    0x140014588
   140014591:	in     eax,dx
   140014592:	(bad)  
   140014593:	mov    eax,0xc3fedf6f
   140014598:	(bad)  
   140014599:	(bad)  
   14001459a:	(bad)  
   14001459b:	fdivr  QWORD PTR [rbp-0x3609049d]
   1400145a1:	mov    DWORD PTR [rbp-0x6d],ecx
   1400145a4:	cmc    
   1400145a5:	jb     0x14001454c
   1400145a7:	rex.WR xchg rdx,rax
   1400145a9:	sub    BYTE PTR [rcx+rbx*1],bh
   1400145ac:	sbb    DWORD PTR [rsi],eax
   1400145ae:	movabs eax,ds:0x6253ad435d18410e
   1400145b7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400145b8:	movabs rdx,0x4ccf7c420fc8c066
   1400145c2:	sbb    DWORD PTR [rdx],ebx
   1400145c4:	rex.RXB xor BYTE PTR [r8],r9b
   1400145c7:	sti    
   1400145c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400145c9:	movabs ds:0x90073839f7dc8af5,eax
   1400145d2:	push   0xffffffffffffffbb
   1400145d4:	pop    rdi
   1400145d5:	and    BYTE PTR [rip+0xffffffffecb084d1],dh        # 0x12cb1caac
   1400145db:	rex.XB xchg r9d,eax
   1400145dd:	adc    eax,0xa249050f
   1400145e2:	rex.W push rsp
   1400145e4:	(bad)  
   1400145e5:	lods   eax,DWORD PTR ds:[rsi]
   1400145e6:	add    eax,0x26892b55
   1400145eb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400145ec:	shl    bl,0x85
   1400145ef:	mov    ecx,0x3df8ce4f
   1400145f4:	iret   
   1400145f5:	xor    ebx,DWORD PTR [rbx-0x27c5ab82]
   1400145fb:	xor    eax,0x6cd1a088
   140014600:	push   rax
   140014601:	or     al,BYTE PTR [rbx+0x56]
   140014604:	xchg   edi,eax
   140014605:	push   rdi
   140014606:	xchg   rsp,rax
   140014608:	pop    rbx
   140014609:	push   rax
   14001460a:	(bad)  
   14001460b:	loop   0x1400145a4
   14001460d:	retf   0x3f9c
   140014610:	test   esi,0xb7af7e85
   140014616:	(bad)  
   140014617:	add    al,0xc
   140014619:	mov    bh,BYTE PTR [rbx+0x6d]
   14001461c:	(bad)  
   14001461d:	mov    DWORD PTR [rcx-0x1f6b440f],eax
   140014623:	cmp    eax,0x2803851
   140014628:	push   QWORD PTR [rcx+0x1d91bdc1]
   14001462e:	out    0xa0,eax
   140014630:	(bad)  
   140014631:	lods   al,BYTE PTR ds:[rsi]
   140014632:	movsxd ebx,esi
   140014634:	(bad)  
   140014635:	xchg   edi,eax
   140014636:	mov    ebx,0x2febcedd
   14001463b:	mov    edi,0x97c9e2f4
   140014640:	pop    rdi
   140014641:	jp     0x1400146b4
   140014643:	rex.WR
   140014644:	cmp    QWORD PTR [rbx],rsi
   140014647:	ds ds mov cl,0x7f
   14001464b:	jmp    0x140014623
   14001464d:	ins    DWORD PTR es:[rdi],dx
   14001464e:	sti    
   14001464f:	(bad)  
   140014650:	sbb    al,0x3c
   140014652:	js     0x140014634
   140014654:	lock loope 0x14001467a
   140014657:	cmp    esp,DWORD PTR [rdi-0x49]
   14001465a:	outs   dx,BYTE PTR ds:[rsi]
   14001465b:	popf   
   14001465c:	sbb    BYTE PTR [rcx],bl
   14001465e:	sbb    DWORD PTR [rcx],edx
   140014660:	mov    esi,0x84e2a3ef
   140014665:	xor    al,0x8
   140014667:	jno    0x1400146e4
   140014669:	cmp    BYTE PTR [rbp+0x112168d6],dh
   14001466f:	test   eax,0xa3efdfa6
   140014674:	xchg   esp,eax
   140014675:	and    ch,BYTE PTR [rax]
   140014677:	test   DWORD PTR [rbx+rcx*8+0x65],edx
   14001467b:	rol    DWORD PTR [rcx-0x70],cl
   14001467e:	fisub  WORD PTR [rax-0x36e6ff72]
   140014684:	call   0x117658bcf
   140014689:	fbstp  TBYTE PTR [rdi-0x63]
   14001468c:	add    eax,0x4d483753
   140014691:	jg     0x140014672
   140014693:	int    0x12
   140014695:	cld    
   140014696:	adc    ch,bl
   140014698:	xlat   BYTE PTR ds:[rbx]
   140014699:	sub    cl,BYTE PTR [rcx+rcx*2]
   14001469c:	push   rbx
   14001469d:	fs and al,0x67
   1400146a0:	cld    
   1400146a1:	fldl2e 
   1400146a3:	jne    0x1400146f0
   1400146a5:	adc    dl,BYTE PTR [rsi+rdx*4-0x11]
   1400146a9:	pop    rdi
   1400146aa:	scas   al,BYTE PTR es:[rdi]
   1400146ab:	push   rsp
   1400146ac:	ror    BYTE PTR [rdx-0x4f],1
   1400146af:	mov    edx,0x825962bc
   1400146b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400146b5:	add    edx,DWORD PTR [rcx]
   1400146b7:	or     BYTE PTR [rdi+0x5fa7b77e],bl
   1400146bd:	jle    0x1400146b0
   1400146bf:	test   edi,edx
   1400146c1:	adc    BYTE PTR [rsi+0x7b5d66bd],0x8d
   1400146c8:	(bad)  
   1400146c9:	xor    dh,al
   1400146cb:	out    dx,eax
   1400146cc:	jb     0x1400146cd
   1400146ce:	fwait
   1400146cf:	push   rcx
   1400146d0:	add    DWORD PTR [rcx-0x7ebfe3e],0x46371f8f
   1400146da:	(bad)  
   1400146db:	add    bl,BYTE PTR [rax+0x1]
   1400146de:	scas   al,BYTE PTR es:[rdi]
   1400146df:	(bad)  
   1400146e0:	xor    al,0x3d
   1400146e2:	cmp    edi,DWORD PTR [rdi]
   1400146e4:	ja     0x1400146e3
   1400146e6:	mov    ecx,0xcdebb9f9
   1400146eb:	(bad)  
   1400146ec:	sahf   
   1400146ed:	push   rdi
   1400146ef:	fwait
   1400146f0:	jl     0x140014731
   1400146f2:	fdiv   DWORD PTR [rdx]
   1400146f4:	xor    eax,0xef707d3d
   1400146f9:	mov    esi,0xeef6077d
   1400146fe:	fnsave [rdi+0x43c1c0ef]
   140014704:	pop    rbx
   140014705:	data16 data16 ss (bad) 
   140014709:	rex.RXB
   14001470a:	rex.RXB
   14001470b:	rex.RXB
   14001470c:	rex.R loopne 0x140014696
   14001470f:	push   0xffffffffb6378969
   140014714:	adc    BYTE PTR [rdi],ah
   140014716:	test   DWORD PTR [rcx+rdx*2],esp
   140014719:	mov    ch,BYTE PTR [rax-0x38102ce1]
   14001471f:	data16 jle 0x140014743
   140014722:	xor    al,0xd3
   140014724:	jg     0x140014767
   140014726:	adc    BYTE PTR [rsp+rdi*1-0x7e],ah
   14001472a:	rex.B icebp 
   14001472c:	iret   
   14001472d:	adc    al,0xe8
   14001472f:	test   ch,dh
   140014731:	adc    BYTE PTR [rcx+0x21029013],bl
   140014737:	cmp    al,0xdc
   140014739:	test   BYTE PTR [rdx-0x4a],al
   14001473c:	cmp    eax,0xd68bfec8
   140014741:	fdiv   DWORD PTR [rax+0x1f]
   140014744:	and    ebp,DWORD PTR [rbx]
   140014746:	sahf   
   140014747:	xor    edi,DWORD PTR [rdi+riz*2-0x4]
   14001474b:	(bad)  
   14001474c:	adc    al,0x8f
   14001474e:	mov    al,0xfa
   140014750:	(bad)  
   140014751:	rex.X
   140014752:	sbb    al,0xf7
   140014755:	mov    DWORD PTR [rdx-0x65],edx
   140014758:	data16 and BYTE PTR [rax+0x49],cl
   14001475c:	icebp  
   14001475d:	jge    0x1400146fe
   14001475f:	pop    rsi
   140014760:	adc    dh,cl
   140014762:	fmul   st,st(1)
   140014764:	xchg   DWORD PTR [rsi-0x46],ebx
   140014767:	je     0x14001475a
   140014769:	cld    
   14001476a:	rex.WXB shl BYTE PTR [r10],0xc6
   14001476e:	call   0xe00f785a
   140014773:	lea    esi,[rcx-0x64]
   140014776:	out    dx,eax
   140014777:	imul   edi,eax,0xe
   14001477a:	out    dx,eax
   14001477b:	cmp    DWORD PTR [rcx],esp
   14001477d:	push   rsp
   14001477e:	movabs al,ds:0x8797f69810227fc0
   140014787:	leave  
   140014788:	or     ebx,0xffffff98
   14001478b:	mov    bh,al
   14001478d:	or     BYTE PTR [rax-0x1254a947],dh
   140014793:	cwde   
   140014794:	fnstsw WORD PTR [rdx+0x7dbed0ed]
   14001479a:	sti    
   14001479b:	neg    DWORD PTR [rsi]
   14001479d:	(bad)  
   14001479e:	jno    0x140014802
   1400147a0:	mul    DWORD PTR [rcx-0x4859b8dd]
   1400147a6:	ins    BYTE PTR es:[rdi],dx
   1400147a7:	sahf   
   1400147a8:	or     ebx,ebp
   1400147aa:	lea    edi,[rdx]
   1400147ac:	adc    al,BYTE PTR [rcx-0x6e]
   1400147af:	and    al,0x8
   1400147b1:	cdq    
   1400147b2:	movabs ds:0x2830ccda57d15353,al
   1400147bb:	(bad)  
   1400147bc:	test   BYTE PTR [rdx],cl
   1400147be:	test   BYTE PTR [rsi-0x7e041fdd],dl
   1400147c4:	in     eax,dx
   1400147c5:	xor    BYTE PTR [rax+0x1893a3b6],bl
   1400147cb:	retf   
   1400147cc:	in     al,0xc0
   1400147ce:	sar    BYTE PTR [rax-0x3e],1
   1400147d1:	sbb    esp,DWORD PTR [rdi+rcx*1-0x7ad8474a]
   1400147d8:	and    al,0x4d
   1400147da:	adc    eax,0xd01d7af5
   1400147df:	(bad)  
   1400147e0:	rex.WB (bad) 
   1400147e2:	fisttp WORD PTR [rbx]
   1400147e4:	mov    dl,0xb9
   1400147e6:	add    eax,DWORD PTR [rdi+0x34]
   1400147e9:	lock cmp eax,0x3595958f
   1400147ef:	mov    esi,0x2c83ff79
   1400147f4:	cs cs cdq 
   1400147f7:	(bad)  
   1400147f8:	addr32 mov esp,0x4a0b6589
   1400147fe:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140014800:	xor    dl,BYTE PTR [rdi+0x2e]
   140014803:	pop    rsi
   140014804:	in     al,dx
   140014805:	sahf   
   140014806:	jl     0x1400147ec
   140014808:	mov    ebx,0xf37d9fcf
   14001480d:	int3   
   14001480e:	ret    
   14001480f:	ror    BYTE PTR [rbx-0x40],0x79
   140014813:	mov    ecx,?
   140014815:	scas   eax,DWORD PTR es:[rdi]
   140014816:	(bad)  
   140014817:	rex.WRX std 
   140014819:	test   esp,0x2efdff5
   14001481f:	(bad)  
   140014820:	sub    al,dh
   140014822:	(bad)  
   140014823:	add    eax,0x20ce312
   140014828:	sti    
   140014829:	push   rcx
   14001482a:	add    DWORD PTR [rdx+0x79e798c0],ebx
   140014830:	mov    bl,0xc3
   140014832:	ret    
   140014833:	ret    
   140014834:	mov    ebx,0x743c1c0e
   140014839:	in     al,0xc8
   14001483b:	rcr    ebx,1
   14001483d:	jbe    0x14001481e
   14001483f:	jle    0x14001483c
   140014841:	in     eax,dx
   140014842:	cmp    esi,esi
   140014844:	sbb    eax,0x3a323fd8
   140014849:	cmp    al,0xec
   14001484b:	xchg   ebp,eax
   14001484c:	rex.WXB
   14001484d:	data16 hlt 
   14001484f:	cmp    BYTE PTR [rcx-0x76],dl
   140014852:	push   rsp
   140014853:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014854:	and    al,0x5a
   140014856:	movabs ds:0x2d04a20fb4e24a55,eax
   14001485f:	shl    bl,0x4
   140014862:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014863:	and    BYTE PTR [rcx+rdi*4-0x1ead4b44],dh
   14001486a:	or     esi,0x40
   14001486d:	data16 shl dh,1
   140014870:	test   eax,0x481e9398
   140014875:	movabs eax,ds:0xb989528552a3af5e
   14001487e:	mov    edi,0x732154d
   140014883:	loopne 0x140014900
   140014885:	sub    al,0x2c
   140014887:	sub    al,0xf3
   140014889:	int    0xef
   14001488b:	cmp    al,0xc8
   14001488d:	loop   0x140014861
   14001488f:	push   rdx
   140014890:	xchg   esi,eax
   140014891:	jle    0x14001489b
   140014893:	and    BYTE PTR [rax],cl
   140014895:	or     eax,0x1fe5f27b
   14001489a:	mov    esp,0xc789e970
   14001489f:	(bad)  
   1400148a0:	jge    0x14001490e
   1400148a2:	ins    DWORD PTR es:[rdi],dx
   1400148a3:	jne    0x14001488a
   1400148a5:	sub    eax,esp
   1400148a7:	or     al,0xc6
   1400148a9:	clc    
   1400148aa:	(bad)  
   1400148ab:	or     BYTE PTR [rsi],0x3
   1400148ae:	xchg   edx,eax
   1400148af:	iret   
   1400148b0:	(bad)  
   1400148b1:	or     eax,DWORD PTR [rbp+0x27f02803]
   1400148b7:	adc    eax,0xdbe7c48e
   1400148bc:	(bad)  
   1400148bd:	adc    dl,BYTE PTR [rax-0x39]
   1400148c0:	cmp    BYTE PTR [rcx+rcx*8+0x6fb60820],al
   1400148c7:	fidivr WORD PTR [rcx+rdi*2-0x48ec4e31]
   1400148ce:	fbstp  TBYTE PTR [rsi-0x14]
   1400148d1:	fdiv   st,st(1)
   1400148d3:	popf   
   1400148d4:	rex.RXB mov ds,WORD PTR [r9+r11*8]
   1400148d8:	mov    esp,0x46eed77b
   1400148dd:	movabs ds:0x710edd7a420824d9,eax
   1400148e6:	ins    BYTE PTR es:[rdi],dx
   1400148e7:	and    ch,cl
   1400148e9:	xor    al,0x4d
   1400148eb:	mov    ebx,esp
   1400148ed:	cwde   
   1400148ee:	cmp    BYTE PTR [rcx-0x18],cl
   1400148f1:	rex.RXB xor DWORD PTR [r9-0x5e],r13d
   1400148f5:	rex
   1400148f6:	rex.WX mov bl,0xc5
   1400148f9:	sub    BYTE PTR [rax],dh
   1400148fb:	and    eax,ebx
   1400148fd:	adc    r8b,spl
   140014900:	adc    DWORD PTR ss:[rbx-0x7e87ddda],ebx
   140014907:	rex.R ficomp DWORD PTR [rcx+0x46ad5a83]
   14001490e:	mov    bh,0xdb
   140014910:	(bad)  [rax-0x4]
   140014913:	nop
   140014914:	(bad)  
   140014915:	lock clc 
   140014917:	mov    esi,0xd72bd5cf
   14001491c:	stc    
   14001491d:	test   BYTE PTR [rbx],0xdf
   140014920:	gs jns 0x140014998
   140014923:	add    eax,0x50ca4c29
   140014928:	sub    dl,BYTE PTR [rdi+0x58]
   14001492b:	pop    rdx
   14001492c:	pop    rsp
   14001492d:	mov    BYTE PTR [rsi],bl
   14001492f:	(bad)  
   140014930:	stc    
   140014931:	shr    BYTE PTR [rbx],1
   140014933:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014934:	pop    rsi
   140014935:	jge    0x14001491c
   140014937:	push   rcx
   140014938:	loopne 0x1400149b3
   14001493a:	loopne 0x140014949
   14001493c:	loopne 0x140014978
   14001493e:	xlat   BYTE PTR es:[rbx]
   140014940:	(bad)  
   140014941:	js     0x1400148e2
   140014943:	and    bl,bh
   140014945:	(bad)  
   140014946:	jb     0x1400148d9
   140014948:	or     dl,BYTE PTR [rax+rdi*8]
   14001494b:	xchg   ebx,eax
   14001494c:	(bad)  
   14001494d:	out    0xc,eax
   14001494f:	and    al,0x26
   140014951:	xor    dh,BYTE PTR [rax-0x17]
   140014954:	rex.X adc edx,DWORD PTR [rbx+0x1b196c2e]
   14001495b:	sbb    ebx,edi
   14001495d:	xor    eax,0xef7a79bd
   140014962:	in     eax,dx
   140014963:	mov    bh,0xdf
   140014965:	jns    0x140014947
   140014967:	(bad)  
   140014968:	in     eax,dx
   140014969:	(bad)  
   14001496a:	data16 (bad) 
   14001496c:	(bad)  
   14001496d:	mov    ecx,0xcb66666d
   140014972:	mov    edi,fs
   140014974:	pop    rcx
   140014975:	rcl    DWORD PTR [rcx+0x34c32944],0x54
   14001497c:	mov    ah,BYTE PTR [rsi+rcx*4]
   14001497f:	rex.WB push r10
   140014981:	rex.RB xchg r10d,eax
   140014983:	sub    dl,bh
   140014985:	push   rcx
   140014986:	test   al,dl
   140014988:	loopne 0x140014a03
   14001498a:	ds (bad) 
   14001498c:	leave  
   14001498d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001498e:	adc    al,0x96
   140014990:	jae    0x140014957
   140014992:	rex.XB adc eax,DWORD PTR [r13+0x54]
   140014996:	stos   DWORD PTR es:[rdi],eax
   140014997:	push   rbp
   140014998:	sub    ah,ch
   14001499a:	or     ch,BYTE PTR [rcx-0x637cae]
   1400149a0:	(bad)  
   1400149a1:	mov    ?,WORD PTR [rcx-0x20]
   1400149a4:	sti    
   1400149a5:	pushf  
   1400149a6:	ds repz es (bad) 
   1400149aa:	test   BYTE PTR ds:[rbp*8+0x29610ef5],0x44
   1400149b3:	rex.W leave 
   1400149b5:	jmp    0xdf17f18d
   1400149ba:	cmp    al,0xf9
   1400149bc:	rcl    BYTE PTR [rbx-0x75],1
   1400149bf:	mov    ecx,DWORD PTR [rbx-0x37be6d9]
   1400149c5:	repz cwde 
   1400149c7:	movabs ds:0x2985c83ff5f50fdf,al
   1400149d0:	push   rax
   1400149d1:	loopne 0x140014a22
   1400149d3:	sbb    ebx,DWORD PTR [rcx+rdi*8+0x10fa59b9]
   1400149da:	test   al,0x1
   1400149dc:	rol    BYTE PTR [r8+r14*1],0x3b
   1400149e1:	cmp    DWORD PTR [rcx],edi
   1400149e3:	mov    ecx,0x1d8efb6f
   1400149e8:	mov    ebx,0xe3e7b9ef
   1400149ed:	xchg   DWORD PTR [rdi+0x79b23e1c],ecx
   1400149f3:	neg    DWORD PTR [rsi+0x535323bd]
   1400149f9:	xchg   ebx,eax
   1400149fa:	shl    bh,cl
   1400149fc:	or     eax,0x6bd3a059
   140014a01:	movabs ds:0x4271c4d1a40aa362,eax
   140014a0a:	stos   BYTE PTR es:[rdi],al
   140014a0b:	adc    al,0x71
   140014a0d:	(bad)  
   140014a0e:	(bad)  
   140014a0f:	(bad)  
   140014a10:	add    al,0xbe
   140014a12:	and    al,0xf0
   140014a14:	jge    0x140014a60
   140014a16:	push   rsi
   140014a17:	mov    ecx,0xad9e93c8
   140014a1c:	(bad)  
   140014a1d:	repz rex.XB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014a20:	(bad)  
   140014a21:	sub    bh,0xf9
   140014a24:	pushf  
   140014a25:	jl     0x140014a23
   140014a27:	sti    
   140014a28:	mov    esp,0x48abcafc
   140014a2d:	loope  0x1400149e0
   140014a2f:	mov    edx,0xffbeacb2
   140014a34:	in     al,0xf7
   140014a36:	fidivr WORD PTR [rbp+riz*8-0x5b]
   140014a3a:	(bad)  
   140014a3b:	(bad)  
   140014a3c:	add    DWORD PTR [rsi-0x51f8a200],ebx
   140014a42:	(bad)  
   140014a43:	stos   BYTE PTR es:[rdi],al
   140014a44:	(bad)  
   140014a45:	(bad)  
   140014a46:	jb     0x1400149d9
   140014a48:	out    dx,eax
   140014a49:	rex.RXB mov r9d,0xfc0a0510
   140014a4f:	imul   eax,DWORD PTR [rsi+0x4c5701b3],0xc485300c
   140014a59:	sbb    dh,BYTE PTR [rax]
   140014a5b:	or     cl,BYTE PTR [rcx+rax*1-0x25]
   140014a5f:	imul   edi
   140014a61:	(bad)  
   140014a62:	js     0x140014ad4
   140014a64:	out    0xae,eax
   140014a66:	popf   
   140014a67:	jnp    0x140014a58
   140014a69:	mov    esi,0x75d9efb
   140014a6e:	(bad)  
   140014a6f:	out    dx,al
   140014a70:	(bad)  
   140014a71:	fistp  QWORD PTR [rbp+0x6463777b]
   140014a77:	js     0x140014a11
   140014a79:	cmp    BYTE PTR [rsi+0x6],cl
   140014a7c:	fdivr  QWORD PTR [rbp-0x73]
   140014a7f:	adc    DWORD PTR [rip+0xa4f0295],esp        # 0x14a504d1a
   140014a85:	rex.WXB xor QWORD PTR [r14],rsi
   140014a88:	add    esp,0x59
   140014a8b:	ror    edi,1
   140014a8d:	std    
   140014a8e:	(bad)  
   140014a8f:	pushf  
   140014a90:	in     eax,0x79
   140014a92:	rex.X shr cl,cl
   140014a95:	idiv   BYTE PTR [rax-0x46b81e01]
   140014a9b:	jp     0x140014a82
   140014a9d:	sbb    ah,BYTE PTR [rdi-0x21]
   140014aa0:	cmp    bl,dl
   140014aa2:	jp     0x140014a98
   140014aa4:	loope  0x140014aa1
   140014aa6:	lahf   
   140014aa7:	pop    rsi
   140014aa8:	pop    rdx
   140014aa9:	pop    rsp
   140014aaa:	jl     0x140014ab0
   140014aac:	js     0x140014ac4
   140014aae:	js     0x140014ab7
   140014ab0:	pop    rax
   140014ab1:	(bad)  
   140014ab2:	pushf  
   140014ab3:	cli    
   140014ab4:	(bad)  
   140014ab5:	cmp    ah,bl
   140014ab7:	jg     0x140014a78
   140014ab9:	(bad)  
   140014aba:	pop    rdi
   140014abb:	movabs al,ds:0xe30941d1f2018140
   140014ac4:	adc    dl,ch
   140014ac6:	shl    BYTE PTR [rax+rsi*1],0x53
   140014aca:	scas   eax,DWORD PTR es:[rdi]
   140014acb:	xlat   BYTE PTR ds:[rbx]
   140014acc:	ja     0x140014abb
   140014ace:	fidivr DWORD PTR [rbp-0x42213f05]
   140014ad4:	sti    
   140014ad5:	jbe    0x140014ad5
   140014ad7:	hlt    
   140014ad8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014ad9:	ds mov ebp,0x1daed77f
   140014adf:	rex.XB xor esi,DWORD PTR [r11]
   140014ae2:	mov    bl,0x5e
   140014ae4:	lods   eax,DWORD PTR ds:[rsi]
   140014ae5:	pop    rdx
   140014ae6:	rex.XB imul ecx,DWORD PTR [r13-0x5e],0x62
   140014aeb:	xchg   esp,eax
   140014aec:	mov    ch,BYTE PTR [rip+0x68dbc839]        # 0x1a8dd132b
   140014af2:	cld    
   140014af3:	out    dx,al
   140014af4:	shr    ebp,1
   140014af6:	pop    rax
   140014af7:	movabs al,ds:0xaf970b8952950d6
   140014b00:	mov    edi,0xf2afd5ff
   140014b05:	mov    ebp,0xf77a1e87
   140014b0a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014b0b:	(bad)  
   140014b0c:	cmp    al,0x7f
   140014b0e:	push   rdx
   140014b0f:	and    eax,0x2bc043c9
   140014b14:	cwde   
   140014b15:	push   rbx
   140014b16:	dec    DWORD PTR [rdi-0x1c04252b]
   140014b1c:	mov    esi,0xa0502d0
   140014b21:	fcomp  QWORD PTR [rdi+rsi*1]
   140014b24:	(bad)  
   140014b25:	adc    ecx,ebx
   140014b27:	cwde   
   140014b28:	call   0x15d1c638d
   140014b2d:	mov    WORD PTR [rbp-0x14421073],cs
   140014b33:	out    dx,al
   140014b34:	mov    ebx,0x7fd81e0f
   140014b39:	jo     0x140014b12
   140014b3b:	rex.WRXB jl 0x140014b30
   140014b3e:	(bad)  
   140014b3f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014b40:	ja     0x140014b2f
   140014b42:	fcmovu st,st(1)
   140014b44:	pushf  
   140014b45:	sahf   
   140014b46:	(bad)  
   140014b47:	mov    dl,0x72
   140014b49:	push   0xffffffffbc12a651
   140014b4e:	loope  0x140014b21
   140014b50:	push   rdx
   140014b51:	in     al,dx
   140014b52:	(bad)  
   140014b53:	(bad)  
   140014b54:	adc    BYTE PTR [rax+0x4ff9bf1e],0xff
   140014b5b:	pop    rcx
   140014b5c:	out    dx,eax
   140014b5d:	ja     0x140014b5d
   140014b5f:	stc    
   140014b60:	outs   dx,DWORD PTR ds:[rsi]
   140014b61:	std    
   140014b62:	(bad)  
   140014b63:	(bad)  
   140014b64:	jle    0x140014b54
   140014b66:	cmp    ebx,DWORD PTR [rax-0x59d30070]
   140014b6c:	(bad)  
   140014b6d:	out    dx,eax
   140014b6e:	or     BYTE PTR [rip+0x2b8bda1f],bh        # 0x16b8d2593
   140014b74:	push   rax
   140014b75:	movabs al,ds:0x2e9f31317c868fc0
   140014b7e:	(bad)  
   140014b7f:	xor    ecx,ebp
   140014b81:	ret    0xf0ec
   140014b84:	lock lock sahf 
   140014b87:	(bad)  
   140014b89:	ins    DWORD PTR es:[rdi],dx
   140014b8a:	(bad)  
   140014b8b:	(bad)  
   140014b8c:	(bad)  
   140014b8d:	cmp    eax,0x8f9efbb2
   140014b92:	jg     0x140014bf6
   140014b94:	test   edi,0xe4d8f9ee
   140014b9a:	enter  0x30c8,0x8d
   140014b9e:	rex.RX ret 
   140014ba0:	out    dx,al
   140014ba1:	rex.WR
   140014ba2:	rex.W in al,dx
   140014ba4:	in     al,0xa2
   140014ba6:	test   eax,0xafafaffc
   140014bab:	repz mov edi,0x9cdfa3ff
   140014bb1:	sti    
   140014bb2:	lods   eax,DWORD PTR ds:[rsi]
   140014bb3:	jg     0x140014ba7
   140014bb5:	(bad)  
   140014bb6:	(bad)  
   140014bb7:	jmp    0x141e106b3
   140014bbc:	pop    rsi
   140014bbd:	add    BYTE PTR [rsi],ch
   140014bbf:	movsxd ebx,DWORD PTR [rdx+0x7b]
   140014bc2:	mov    bh,0x5c
   140014bc4:	in     al,0xfb
   140014bc6:	push   rcx
   140014bc7:	pop    rsi
   140014bc8:	push   rax
   140014bc9:	add    DWORD PTR [rdx],0x9c383e05
   140014bcf:	rex.XB
   140014bd0:	lock xor DWORD PTR [rsi],ecx
   140014bd3:	movabs eax,ds:0x439b3b024c2ce986
   140014bdc:	rex.XB jnp 0x140014bce
   140014bdf:	mov    eax,0x8f0723f3
   140014be4:	(bad)  
   140014be5:	cmp    edi,DWORD PTR [rsi+0x747c7c7d]
   140014beb:	fs out 0xce,eax
   140014bee:	(bad)  
   140014bf0:	data16 mov bl,0x19
   140014bf3:	jbe    0x140014c6f
   140014bf5:	(bad)  
   140014bf7:	in     al,dx
   140014bf8:	sbb    ebp,DWORD PTR [rdi-0x54]
   140014bfb:	jg     0x140014be8
   140014bfd:	fcmovnu st,st(7)
   140014bff:	jp     0x140014bf4
   140014c01:	leave  
   140014c02:	(bad)  
   140014c03:	(bad)  
   140014c04:	jnp    0x140014c06
   140014c06:	js     0x140014c14
   140014c08:	js     0x140014c1d
   140014c0a:	rcr    edx,cl
   140014c0c:	sti    
   140014c0d:	rex cmp eax,0xe4fa0ffd
   140014c13:	or     edx,DWORD PTR [rax+rbp*1]
   140014c16:	lock jrcxz 0x140014b9a
   140014c19:	jae    0x140014c21
   140014c1b:	(bad)  
   140014c1c:	and    DWORD PTR [rcx+rax*4+0x30bba606],edx
   140014c23:	(bad)  
   140014c24:	ins    BYTE PTR es:[rdi],dx
   140014c25:	stos   BYTE PTR es:[rdi],al
   140014c26:	(bad)  
   140014c27:	sbb    edx,DWORD PTR [rbx]
   140014c29:	in     eax,0x52
   140014c2b:	imul   ebp,DWORD PTR [rax],0x7d64938a
   140014c31:	ins    DWORD PTR es:[rdi],dx
   140014c32:	in     eax,0xa
   140014c34:	jo     0x140014c44
   140014c36:	js     0x140014c53
   140014c38:	adc    ebp,esi
   140014c3a:	fist   WORD PTR [rdx+0x4f]
   140014c3d:	inc    DWORD PTR [rbx+0x502e13e]
   140014c43:	or     bh,BYTE PTR [rax+rdi*2-0x50]
   140014c47:	rex.XB (bad) 
   140014c49:	pop    rcx
   140014c4a:	(bad)  
   140014c4c:	ds xor al,0xc6
   140014c4f:	loopne 0x140014bee
   140014c51:	push   rdx
   140014c52:	(bad)  
   140014c54:	push   rsp
   140014c55:	in     eax,dx
   140014c56:	sub    eax,0x8140a050
   140014c5b:	add    al,BYTE PTR [rip+0x5028140a]        # 0x19029606b
   140014c61:	movabs al,ds:0x5028140a05028140
   140014c6a:	movabs al,ds:0x5028140a05028140
   140014c73:	movabs al,ds:0x63f8140a05028140
   140014c7c:	loope  0x140014c7d
   140014c7e:	add    ebx,DWORD PTR [rsp+rdx*8-0x2a]
   140014c82:	push   rsi
   140014c83:	rex.RX push rbx
   140014c85:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014c86:	(bad)  
   140014c87:	add    BYTE PTR [rax],al
   140014c89:	add    BYTE PTR [rax],al
   140014c8b:	rex.WB
   140014c8c:	rex.RB
   140014c8d:	rex.WRX
   140014c8e:	rex.R scas al,BYTE PTR es:[rdi]
   140014c90:	rex.X (bad) 
   140014c92:	(bad)  
   140014c93:	add    BYTE PTR [rax],al
   140014c95:	add    BYTE PTR [rax],al
   140014c97:	add    BYTE PTR [rax],ch
   140014c99:	add    BYTE PTR [rax],al
   140014c9b:	add    BYTE PTR [rax],dh
   140014c9d:	add    BYTE PTR [rax],al
   140014c9f:	add    BYTE PTR [rax+0x0],ah
   140014ca2:	add    BYTE PTR [rax],al
   140014ca4:	add    DWORD PTR [rax],eax
   140014ca6:	and    BYTE PTR [rax],al
   140014ca8:	add    BYTE PTR [rax],al
   140014caa:	add    BYTE PTR [rax],al
   140014cac:	and    BYTE PTR [rip+0x0],0x0        # 0x140014cb3
	...
   140014e9f:	add    BYTE PTR [rdi+0x59],ah
   140014ea2:	rex.WRB pop r10
   140014ea4:	push   0x68c34e5a
   140014ea9:	pop    rdx
   140014eaa:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eae:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eb2:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eb6:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eba:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ebe:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ec2:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ec6:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eca:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ece:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ed2:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ed6:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eda:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ede:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ee2:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014ee6:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140014eea:	rex.WRX jmp QWORD PTR [rdi+0x59]
   140014eee:	rex.WRB jmp FWORD PTR [r13+rbx*2+0x51]
   140014ef3:	retf   
   140014ef4:	jb     0x140014f59
   140014ef6:	push   rsi
   140014ef7:	pop    rdx
	...
   140014f60:	js     0x140014fca
   140014f62:	pop    rcx
   140014f63:	ret    
   140014f64:	xchg   edi,eax
   140014f65:	mov    WORD PTR [rbx-0x5d58520b],es
   140014f6b:	jmp    QWORD PTR [rbp+rbx*4-0x56500069]
   140014f72:	movabs ds:0xa3aab1ffa8aeb4ff,eax
   140014f7b:	jmp    FWORD PTR [rbx-0x5d00635d]
   140014f81:	xchg   edi,eax
   140014f82:	(bad)  
   140014f83:	call   FWORD PTR [rbx-0x67007c73]
   140014f89:	mov    eax,DWORD PTR [rcx-0x7c736701]
   140014f8f:	call   QWORD PTR [rbp-0x6d007b74]
   140014f95:	mov    eax,DWORD PTR [rbx-0x7d756e01]
   140014f9b:	call   QWORD PTR [rax-0x71007e77]
   140014fa1:	xchg   BYTE PTR [rdi-0x1],bh
   140014fa4:	mov    eax,DWORD PTR [rsp+rdi*2+0x7c838bff]
   140014fab:	dec    DWORD PTR [rbp+rax*4+0x7b86ff7f]
   140014fb2:	jno    0x140014fad
   140014fb4:	jge    0x140015022
   140014fb6:	pop    rbp
   140014fb7:	ret    
	...
   140015020:	xchg   ecx,eax
   140015021:	jg     0x140015092
   140015023:	inc    edx
   140015025:	mov    edx,0xeeecffb3
   14001502a:	out    dx,eax
   14001502b:	jmp    rsi
   14001502d:	out    0xe5,al
   14001502f:	push   rcx
   140015031:	repnz icebp 
   140015033:	jmp    rdi
   140015035:	in     eax,0xe2
   140015037:	call   rbx
   140015039:	retf   
   14001503a:	(bad)  
   14001503b:	inc    esi
   14001503d:	mov    ebp,0xb0bdffb3
   140015042:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015043:	jmp    FWORD PTR [rbx-0x62006e64]
   140015049:	nop
   14001504a:	xchg   bh,bh
   14001504c:	stos   DWORD PTR es:[rdi],eax
   14001504d:	sahf   
   14001504e:	xchg   ebx,eax
   14001504f:	push   QWORD PTR [rbx-0x49005c55]
   140015055:	mov    dl,0xad
   140015057:	push   QWORD PTR [rbp-0x4c004f4c]
   14001505d:	mov    dl,0xae
   14001505f:	push   QWORD PTR [rdx-0x47005250]
   140015065:	mov    dh,0xb3
   140015067:	inc    esp
   140015069:	ret    
   14001506a:	sar    bh,0xca
   14001506d:	retf   0xffca
   140015070:	mov    al,0xa9
   140015072:	movabs ds:0xff6e7e90ff,al
	...
   1400150df:	add    BYTE PTR [rsi-0x3f008173],bl
   1400150e5:	mov    ecx,0xe9e8ffb1
   1400150ea:	jmp    0x12df040ee
   1400150ef:	jmp    rbp
   1400150f1:	jrcxz  0x1400150d2
   1400150f3:	inc    ebp
   1400150f5:	mov    esp,0x95a5ffb3
   1400150fa:	xchg   edi,edi
   1400150fc:	cdq    
   1400150fd:	xchg   DWORD PTR [rdi-0x1],esi
   140015100:	lahf   
   140015101:	lea    edi,[rdi+rdi*8-0x77]
   140015105:	jp     0x140015173
   140015107:	jmp    FWORD PTR [rbp+0x5f]
   14001510a:	push   rbx
   14001510b:	(bad)  
   14001510c:	jg     0x14001517b
   14001510e:	pop    rsi
   14001510f:	call   FWORD PTR [rax-0x54008478]
   140015115:	movabs eax,ds:0xa9acffa8adb1ff99
   14001511e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001511f:	push   QWORD PTR [rbp-0x38004f4e]
   140015125:	(bad)  
   140015129:	retf   
   14001512a:	leave  
   14001512b:	call   rbp
   14001512d:	(bad)  
   14001512e:	(bad)  
   14001512f:	(bad)  
   140015130:	mov    esi,0x9dffb0b7
   140015135:	mov    WORD PTR [rbp-0x1],?
	...
   1400151a0:	movabs ds:0xf3ffbcc3caff8492,al
   1400151a9:	repz hlt 
   1400151ab:	(bad)  
   1400151ac:	in     eax,dx
   1400151ad:	in     al,dx
   1400151ae:	(bad)  
   1400151af:	inc    ebp
   1400151b1:	mov    esp,0xbcc6ffb3
   1400151b6:	mov    bl,0xff
   1400151b8:	loop   0x140015196
   1400151ba:	(bad)  
   1400151bb:	(bad)  
   1400151bc:	out    dx,eax
   1400151bd:	call   0x12df551a4
   1400151c2:	call   0x112d930c6
   1400151c7:	push   QWORD PTR [rax+0x6cff9ba4]
   1400151cd:	pop    rbp
   1400151ce:	push   rax
   1400151cf:	push   QWORD PTR [rsi+0x63]
   1400151d2:	push   rbx
   1400151d3:	jmp    QWORD PTR [rbx-0x4900786c]
   1400151d9:	mov    al,0xa9
   1400151db:	jmp    FWORD PTR [rbp-0x2d005a57]
   1400151e1:	ror    bh,1
   1400151e3:	dec    edx
   1400151e5:	enter  0xffc7,0x54
   1400151e9:	push   rax
   1400151ea:	rex.WXB call QWORD PTR [r9+r10*2+0x50]
   1400151ef:	inc    DWORD PTR [rsp+rdi*2-0x705f0089]
   1400151f6:	cmp    bh,0x0
	...
   14001525d:	add    BYTE PTR [rax],al
   14001525f:	add    BYTE PTR [rax-0x2a007468],ch
   140015265:	(bad)  
   140015266:	leave  
   140015267:	push   rbp
   140015269:	cmc    
   14001526a:	cmc    
   14001526b:	(bad)  
   14001526c:	(bad)  
   14001526e:	(bad)  
   14001526f:	dec    esp
   140015271:	ret    
   140015272:	mov    ebx,0xc1c7cfff
   140015277:	inc    ecx
   140015279:	mov    edi,0x8d8dffbd
   14001527e:	mov    ?,edi
   140015280:	mov    BYTE PTR [rsi-0x4f4c0078],al
   140015286:	scas   eax,DWORD PTR es:[rdi]
   140015287:	call   rbx
   140015289:	int    0xc8
   14001528b:	jmp    QWORD PTR [rcx+0x7aff8d97]
   140015291:	imul   ebx,DWORD PTR [rbx-0x1],0xff6c7a8a
   140015298:	mov    esi,0xb1ffadb6
   14001529d:	lods   al,BYTE PTR ds:[rsi]
   14001529e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001529f:	(bad)  
   1400152a0:	(bad)  
   1400152a2:	(bad)  
   1400152a4:	retf   0xc7c9
   1400152a7:	jmp    QWORD PTR [rdx]
   1400152a9:	sbb    al,0x16
   1400152ab:	call   FWORD PTR [rsi]
   1400152ad:	sbb    bl,BYTE PTR [rcx]
   1400152af:	jmp    FWORD PTR [rbp+0x65]
   1400152b2:	(bad)  
   1400152b3:	jmp    QWORD PTR [rbp+0xff8795]
	...
   14001531d:	add    BYTE PTR [rax],al
   14001531f:	add    BYTE PTR [rsi-0x21006c61],ch
   140015325:	fcom   st(3)
   140015327:	push   rbx
   140015329:	repnz bnd call rax
   14001532d:	enter  0xffc1,0xe7
   140015331:	loope  0x14001530f
   140015333:	inc    ebx
   140015335:	mov    esi,0x6d74ffba
   14001533a:	data16 (bad) 
   14001533c:	cmp    ch,BYTE PTR [rsi]
   14001533e:	and    edi,edi
   140015340:	rex.RX
   140015341:	ss and bh,bh
   140015344:	jo     0x1400153aa
   140015346:	push   rsp
   140015347:	call   FWORD PTR [rdx+rbx*4-0x25200067]
   14001534e:	(bad)  
   14001534f:	call   FWORD PTR [rbx+0x77ff858f]
   140015355:	imul   ebx,DWORD PTR [rsi-0x1],0xffb2bac4
   14001535c:	mov    ch,0xb0
   14001535e:	stos   DWORD PTR es:[rdi],eax
   14001535f:	(bad)  
   140015360:	fcmovnu st,st(3)
   140015362:	fdivr  st,st(7)
   140015364:	retf   0xc6c9
   140015367:	push   QWORD PTR [rcx]
   140015369:	sub    al,0x26
   14001536b:	jmp    FWORD PTR [rsi]
   14001536d:	sub    ch,BYTE PTR [rcx]
   14001536f:	push   QWORD PTR [rdi+0x70]
   140015372:	imul   edi,edi,0xffffffab
   140015375:	pushf  
   140015376:	nop
   140015377:	inc    DWORD PTR [rax]
	...
   1400153dd:	add    BYTE PTR [rax],al
   1400153df:	add    BYTE PTR [rdx-0x1b00665b],dh
   1400153e5:	(bad)  
   1400153e7:	push   rbp
   1400153e9:	hlt    
   1400153ea:	repnz dec esp
   1400153ed:	ret    0xffba
   1400153f0:	(bad)  
   1400153f1:	in     al,0xe0
   1400153f3:	call   FWORD PTR [rdx+0x63ff9195]
   1400153f9:	push   rdx
   1400153fa:	rex.X (bad) 
   1400153fc:	mov    ebx,0xf8ff6f94
   140015401:	iret   
   140015402:	mov    edi,edi
   140015404:	lahf   
   140015405:	adc    BYTE PTR [rcx-0x1],0x2f
   140015409:	cs (bad) 
   14001540b:	(bad)  
   14001540c:	(bad)  
   14001540e:	fdivp  st(7),st
   140015410:	mov    bl,0xab
   140015412:	movabs ds:0xb5bcc6ff64707cff,al
   14001541b:	push   QWORD PTR [rdi-0x2200504d]
   140015421:	(bad)  
   140015423:	dec    edx
   140015425:	leave  
   140015426:	(bad)  
   140015427:	push   QWORD PTR [rcx]
   140015429:	sub    al,0x26
   14001542b:	jmp    FWORD PTR [rip+0x78ff2829]        # 0x1b9007c5a
   140015431:	jno    0x1400154a0
   140015433:	jmp    FWORD PTR [rdi+0xff95a1]
	...
   14001549d:	add    BYTE PTR [rax],al
   14001549f:	add    BYTE PTR [rdi-0x19005f55],dh
   1400154a5:	loop   0x140015485
   1400154a7:	push   rdi
   1400154a9:	div    ch
   1400154ab:	call   rbx
   1400154ad:	retf   0xffc4
   1400154b0:	cld    
   1400154b1:	stc    
   1400154b2:	idiv   edi
   1400154b4:	xchg   ecx,eax
   1400154b5:	nop
   1400154b6:	(bad)  
   1400154b7:	dec    DWORD PTR [rcx+0x34]
   1400154ba:	and    edi,edi
   1400154bc:	rol    BYTE PTR [rdi-0x562000a7],0x6c
   1400154c3:	push   QWORD PTR [rax+0x52]
   1400154c6:	sub    eax,0x131414ff
   1400154cb:	call   rsi
   1400154cd:	(bad)  
   1400154ce:	(bad)  
   1400154cf:	push   QWORD PTR [rcx+0x7dffa1a8]
   1400154d5:	jno    0x14001553d
   1400154d7:	dec    ebx
   1400154d9:	ret    
   1400154da:	mov    esp,0xb2b6baff
   1400154df:	(bad)  
   1400154e0:	(bad)  
   1400154e2:	fdiv   st(7),st
   1400154e4:	retf   
   1400154e5:	leave  
   1400154e6:	enter  0x31ff,0x2c
   1400154ea:	jmp    FWORD PTR es:[rip+0x79ff2729]        # 0x1ba007c1a
   1400154f1:	jno    0x140015560
   1400154f3:	push   QWORD PTR [rax+0xff96a2]
	...
   14001555d:	add    BYTE PTR [rax],al
   14001555f:	add    BYTE PTR [rbp-0x1900574e],bh
   140015565:	jrcxz  0x140015546
   140015567:	push   rsp
   140015569:	repz repz call rcx
   14001556d:	retf   
   14001556e:	(bad)  
   14001556f:	push   rbp
   140015571:	repnz out dx,al
   140015573:	push   QWORD PTR [rax+0x5fffacaf]
   140015579:	push   rdx
   14001557a:	rex.RXB push QWORD PTR [r10+0x4c]
   14001557e:	(bad)  
   14001557f:	call   FWORD PTR [rax+0x36]
   140015582:	sbb    bh,bh
   140015584:	(bad)  
   140015585:	(bad)  
   140015586:	and    edi,edi
   140015588:	pop    rdi
   140015589:	pop    rsp
   14001558a:	pop    rdx
   14001558b:	call   rbx
   14001558d:	iret   
   14001558e:	retf   
   14001558f:	jmp    FWORD PTR [rcx-0x76006b63]
   140015595:	jnp    0x140015606
   140015597:	dec    edi
   140015599:	retf   0xffc3
   14001559c:	mov    esi,0xe1ffb7bb
   1400155a1:	loopne 0x140015582
   1400155a3:	dec    ebp
   1400155a5:	retf   
   1400155a6:	retf   0x31ff
   1400155a9:	sub    al,0x26
   1400155ab:	jmp    FWORD PTR [rdi]
   1400155ad:	sub    ebp,DWORD PTR [rcx]
   1400155af:	(bad)  
   1400155b0:	jl     0x140015627
   1400155b2:	jno    0x1400155b3
   1400155b4:	mov    bl,0xa6
   1400155b6:	cdq    
   1400155b7:	inc    DWORD PTR [rax]
	...
   14001561d:	add    BYTE PTR [rax],al
   14001561f:	add    bl,al
   140015621:	mov    ecx,0xe2e6ffb0
   140015626:	(bad)  
   140015628:	icebp  
   140015629:	icebp  
   14001562a:	icebp  
   14001562b:	call   rax
   14001562d:	int3   
   14001562e:	(bad)  
   14001562f:	call   rbx
   140015631:	int    0xc7
   140015633:	dec    edi
   140015635:	retf   
   140015636:	(bad)  
   140015637:	jmp    QWORD PTR [rdx+0x53ff9da0]
   14001563d:	rex.WRXB
   14001563e:	rex.WX jmp QWORD PTR [rbx]
   140015641:	and    DWORD PTR [rdi],ebx
   140015643:	call   FWORD PTR [rbp+0x5c]
   140015646:	pop    rdx
   140015647:	inc    edx
   140015649:	mov    esp,0xc2cbffb9
   14001564e:	mov    ebx,0x8d99a8ff
   140015653:	jmp    QWORD PTR [rbx-0x2e00766b]
   140015659:	int    0xc9
   14001565b:	(bad)  
   14001565c:	mov    edi,0xe0ffbabc
   140015661:	(bad)  
   140015663:	dec    edx
   140015665:	leave  
   140015666:	(bad)  
   140015667:	push   QWORD PTR [rax]
   140015669:	sub    esp,DWORD PTR [rip+0x202227ff]        # 0x160237e6e
   14001566f:	push   QWORD PTR [rdi+0x71]
   140015672:	imul   edi,edi,0xffffffb8
   140015675:	lods   al,BYTE PTR ds:[rsi]
   140015676:	movabs al,ds:0xff
	...
   1400156df:	add    al,cl
   1400156e1:	mov    esi,0xdee3ffb6
   1400156e6:	(bad)  
   1400156e8:	stc    
   1400156e9:	stc    
   1400156ea:	stc    
   1400156eb:	(bad)  
   1400156ec:	jmp    0xf3013bd7
   1400156f1:	stos   DWORD PTR es:[rdi],eax
   1400156f2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400156f3:	(bad)  
   1400156f4:	mov    ebx,0xe2ffaeb4
   1400156f9:	(bad)  
   1400156fb:	jmp    rcx
   1400156fd:	loopne 0x1400156de
   1400156ff:	(bad)  
   140015700:	(bad)  
   140015702:	fdivp  st(7),st
   140015704:	loopne 0x1400156e5
   140015706:	fdivp  st(7),st
   140015708:	(bad)  
   140015709:	iret   
   14001570a:	retf   0xa0ff
   14001570d:	xchg   ecx,eax
   14001570e:	test   bh,bh
   140015710:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015711:	cwde   
   140015712:	mov    edi,edi
   140015714:	leave  
   140015715:	ret    0xffba
   140015718:	rcl    edx,cl
   14001571a:	sar    edi,1
   14001571c:	mov    ecx,0xd4ffbcbb
   140015721:	(bad)  
   140015722:	(bad)  
   140015723:	(bad)  
   140015724:	mov    ebx,0x24ffb5b8
   140015729:	(bad)  
   14001572a:	sbb    edi,edi
   14001572c:	add    BYTE PTR [rax],al
   14001572e:	add    bh,bh
   140015730:	push   rbp
   140015731:	rex.WRX
   140015732:	rex.RX (bad) 
   140015734:	mov    esp,0xffa7b1
	...
   14001579d:	add    BYTE PTR [rax],al
   14001579f:	add    ah,cl
   1400157a1:	ret    
   1400157a2:	mov    ebx,0xdee2e6ff
   1400157a7:	(bad)  
   1400157a8:	(bad)  
   1400157a9:	(bad)  
   1400157aa:	(bad)  
   1400157ab:	(bad)  
   1400157ac:	sti    
   1400157ad:	sti    
   1400157ae:	sti    
   1400157af:	call   rsp
   1400157b1:	ror    dh,1
   1400157b3:	(bad)  
   1400157b4:	mov    esi,0xc3ffb2b8
   1400157b9:	mov    edx,0xc3ccffb1
   1400157be:	mov    edx,0xbec8d2ff
   1400157c3:	dec    ebx
   1400157c5:	mov    edi,0xafbbffb5
   1400157ca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400157cb:	push   QWORD PTR [rbx-0x29006157]
   1400157d1:	ror    ebx,1
   1400157d3:	dec    eax
   1400157d5:	ret    0xffbb
   1400157d8:	test   DWORD PTR [rbx+0x63],esi
   1400157db:	(bad)  
   1400157dc:	mov    edi,0xd4ff7a9c
   1400157e1:	mov    edi,0xb2b2ffa9
   1400157e6:	mov    ah,0xff
   1400157e8:	(bad)  
   1400157e9:	mov    WORD PTR [rcx-0x7b787601],cs
   1400157ef:	jmp    FWORD PTR [rax-0x3700625d]
   1400157f5:	shl    BYTE PTR [rdi+0xff],0x0
	...
   140015860:	int    0xc4
   140015862:	mov    esp,0xc3c7cbfe
   140015867:	(bad)  
   140015868:	sti    
   140015869:	sti    
   14001586a:	sti    
   14001586b:	(bad)  
   14001586c:	sti    
   14001586d:	sti    
   14001586e:	sti    
   14001586f:	jmp    rdi
   140015871:	out    0xe7,eax
   140015873:	call   rax
   140015875:	(bad)  
   140015876:	retf   0xb6ff
   140015879:	scas   al,BYTE PTR es:[rdi]
   14001587a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001587b:	jmp    FWORD PTR [rbp-0x5200695f]
   140015881:	movabs al,ds:0xabb6ff93a0adff93
   14001588a:	movabs eax,ds:0xfdfefdffccd1d6ff
   140015893:	inc    ebp
   140015895:	mov    esi,0x364fffb8
   14001589a:	(bad)  
   14001589b:	inc    DWORD PTR [rdx-0x5a00dcaf]
   1400158a1:	mov    DWORD PTR [rbx-0x1],ebp
   1400158a4:	mov    dh,0xb8
   1400158a6:	mov    edx,0xdcdedeff
   1400158ab:	(bad)  
   1400158ac:	cld    
   1400158ad:	std    
   1400158ae:	std    
   1400158af:	push   rax
   1400158b1:	in     eax,dx
   1400158b2:	(bad)  
   1400158b3:	call   rcx
   1400158b5:	leave  
   1400158b6:	sar    edx,0x0
	...
   14001591d:	add    BYTE PTR [rax],al
   14001591f:	add    cl,cl
   140015921:	mov    edi,0x8b90fdb7
   140015926:	xchg   edi,edi
   140015928:	test   BYTE PTR [rcx-0x615e0081],al
   14001592e:	pushf  
   14001592f:	call   rsi
   140015931:	rcl    eax,cl
   140015933:	(bad)  
   140015934:	(bad)  
   140015936:	fdiv   st(7),st
   140015938:	hlt    
   140015939:	repz repnz (bad) 
   14001593c:	in     eax,dx
   14001593d:	(bad)  
   14001593e:	call   0x129ec4842
   140015943:	(bad)  
   140015944:	jmp    0x14001592e
   140015946:	out    0xff,al
   140015948:	in     eax,0xe2
   14001594a:	fdivp  st(7),st
   14001594c:	fstp   st(2)
   14001594e:	(bad)  
   14001594f:	push   rsi
   140015951:	cmc    
   140015952:	repz (bad) 
   140015954:	fcmovbe st,st(7)
   140015956:	(bad)  
   140015957:	(bad)  
   140015958:	jp     0x1400159ca
   14001595a:	push   0x14202fff
   14001595f:	jmp    QWORD PTR [rsi+0x5c]
   140015962:	push   rsp
   140015963:	inc    esi
   140015965:	(bad)
   140015968:	(bad)
   14001596c:	fcomp  st(0)
   14001596e:	fdivr  st,st(7)
   140015970:	fcmovnu st,st(0)
   140015972:	(bad)  
   140015973:	dec    edi
   140015975:	(bad)  
   140015976:	mov    edi,0xee
	...
   1400159cf:	(bad)  
   1400159d0:	add    BYTE PTR [rax],al
   1400159d2:	add    BYTE PTR [rax+rax*1],cl
   1400159d5:	add    BYTE PTR [rax],al
   1400159d7:	(bad)  
   1400159d8:	add    BYTE PTR [rax],al
   1400159da:	add    BYTE PTR [rdx],ch
   1400159dc:	pop    rdx
   1400159dd:	pop    rax
   1400159de:	push   rbp
   1400159df:	jae    0x14001599c
   1400159e1:	scas   eax,DWORD PTR es:[rdi]
   1400159e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400159e3:	push   QWORD PTR [rsp+rbp*2+0x66]
   1400159e7:	dec    DWORD PTR [rbp+0x49]
   1400159ea:	rex.RXB inc DWORD PTR [r11-0xa008281]
   1400159f1:	hlt    
   1400159f2:	hlt    
   1400159f3:	(bad)  
   1400159f4:	sti    
   1400159f5:	sti    
   1400159f6:	sti    
   1400159f7:	(bad)  
   1400159f8:	(bad)  
   1400159f9:	(bad)  
   1400159fa:	(bad)  
   1400159fb:	(bad)  
   1400159fc:	(bad)  
   1400159fd:	(bad)  
   1400159fe:	(bad)  
   1400159ff:	(bad)  
   140015a00:	(bad)  
   140015a01:	(bad)  
   140015a02:	(bad)  
   140015a03:	(bad)  
   140015a04:	(bad)  
   140015a05:	(bad)  
   140015a06:	(bad)  
   140015a07:	(bad)  
   140015a08:	std    
   140015a09:	(bad)  
   140015a0a:	(bad)  
   140015a0b:	(bad)  
   140015a0c:	clc    
   140015a0d:	clc    
   140015a0e:	clc    
   140015a0f:	(bad)  
   140015a10:	sti    
   140015a11:	sti    
   140015a12:	sti    
   140015a13:	push   rsp
   140015a15:	hlt    
   140015a16:	hlt    
   140015a17:	jmp    rax
   140015a19:	(bad)  
   140015a1b:	dec    ecx
   140015a1d:	mov    esi,0xd2d3d4ff
   140015a23:	(bad)  
   140015a24:	jmp    0x140015a11
   140015a26:	jmp    0x140015a27
   140015a28:	in     al,dx
   140015a29:	jmp    0x140015a16
   140015a2b:	push   rbx
   140015a2d:	hlt    
   140015a2e:	cmc    
   140015a2f:	jmp    rsi
   140015a31:	in     al,0xe2
   140015a33:	call   rdx
   140015a35:	retf   0xffc3
	...
   140015a78:	add    BYTE PTR [rax],al
   140015a7a:	add    BYTE PTR [rcx],al
   140015a7c:	add    BYTE PTR [rax],al
   140015a7e:	add    BYTE PTR [rax],cl
   140015a80:	add    BYTE PTR [rax],al
   140015a82:	add    BYTE PTR [rdi],dl
   140015a84:	add    BYTE PTR [rax],al
   140015a86:	add    BYTE PTR [rsp+rcx*1],dh
   140015a89:	or     cl,BYTE PTR [rcx]
   140015a8b:	push   rbx
   140015a8c:	sub    BYTE PTR [rip+0x565a7222],ah        # 0x1965bccb4
   140015a92:	push   rcx
   140015a93:	sahf   
   140015a94:	mov    es,WORD PTR [rdi-0x64602b7f]
   140015a9a:	xchg   ebp,eax
   140015a9b:	stc    
   140015a9c:	movabs ds:0x93ffd1d7ddfe999f,al
   140015aa5:	(bad)  
   140015aa6:	mov    edi,edi
   140015aa8:	mov    eax,DWORD PTR [rsi-0x706c007f]
   140015aae:	mov    edi,?
   140015ab0:	out    0xe1,al
   140015ab2:	(bad)  
   140015ab4:	(bad)  
   140015ab5:	out    0xe4,al
   140015ab7:	(bad)  
   140015ab8:	out    dx,al
   140015ab9:	(bad)  
   140015aba:	call   0x128ed49be
   140015abf:	(bad)  
   140015ac0:	out    dx,al
   140015ac1:	jmp    0x140015aac
   140015ac3:	(bad)  
   140015ac4:	out    dx,al
   140015ac5:	in     al,dx
   140015ac6:	jmp    0x128ed49ca
   140015acb:	(bad)  
   140015acc:	in     eax,dx
   140015acd:	(bad)  
   140015ace:	call   0x125e945d2
   140015ad3:	(bad)  
   140015ad4:	jmp    0x140015abe
   140015ad6:	out    0xff,al
   140015ad8:	in     al,dx
   140015ad9:	call   0x122e85ac4
   140015ade:	loopne 0x140015adf
   140015ae0:	jrcxz  0x140015ac3
   140015ae2:	(bad)  
   140015ae4:	loop   0x140015ac4
   140015ae6:	fdiv   st(7),st
   140015ae8:	out    0xe2,al
   140015aea:	loopne 0x140015aeb
   140015aec:	out    0xe2,al
   140015aee:	loopne 0x140015aef
   140015af0:	loope  0x140015acf
   140015af2:	fprem  
   140015af4:	(bad)  
   140015af5:	(bad)  
   140015af6:	enter  0xbb,0x0
	...
   140015b2e:	add    BYTE PTR [rdx],cl
   140015b30:	add    BYTE PTR [rax],al
   140015b32:	add    BYTE PTR [rax+rcx*1],bl
   140015b35:	or     DWORD PTR [rax],ecx
   140015b37:	rex xor DWORD PTR [rip+0x4c52782a],ebp        # 0x18c53d368
   140015b3e:	rex.RXB popf 
   140015b40:	xchg   DWORD PTR [rax-0x4f433288],eax
   140015b46:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015b47:	std    
   140015b48:	(bad)  
   140015b49:	retf   0xffc1
   140015b4c:	jmp    0x12b013733
   140015b51:	in     al,0xde
   140015b53:	inc    ebp
   140015b55:	sar    BYTE PTR [rdx-0x5c575401],0xff
   140015b5c:	movabs ds:0xcfffedeef0ff9ba0,eax
   140015b65:	enter  0xffc3,0xd7
   140015b69:	ror    dl,1
   140015b6b:	call   rdi
   140015b6d:	ror    dl,1
   140015b6f:	call   rsp
   140015b71:	int3   
   140015b72:	(bad)  
   140015b73:	call   rcx
   140015b75:	leave  
   140015b76:	ret    0xd1ff
   140015b79:	leave  
   140015b7a:	ret    0xceff
   140015b7d:	(bad)  
   140015b7e:	mov    edi,0xbcc3ccff
   140015b83:	dec    esi
   140015b85:	(bad)  
   140015b86:	mov    edi,0xbfc6ceff
   140015b8b:	dec    esi
   140015b8d:	(bad)  
   140015b8e:	mov    edi,0xc0c7cfff
   140015b93:	call   rax
   140015b95:	mov    eax,0xbfc5cdff
   140015b9b:	dec    esi
   140015b9d:	mov    eax,0xc0c7ceff
   140015ba3:	dec    esi
   140015ba5:	mov    eax,0xc4cad1ff
   140015bab:	call   rcx
   140015bad:	retf   0xffc4
   140015bb0:	ror    ebx,cl
   140015bb2:	(bad)
   140015bb5:	ror    dl,1
   140015bb7:	pop    rcx
	...
   140015bdc:	add    BYTE PTR [rax],al
   140015bde:	add    BYTE PTR [rip+0x15000000],al        # 0x155015be4
   140015be4:	add    al,0x5
   140015be6:	(bad)  
   140015be7:	cmp    bh,BYTE PTR [rsi]
   140015be9:	cmp    al,0x38
   140015beb:	jp     0x140015c5a
   140015bed:	pop    di
   140015bef:	mov    dh,0x94
   140015bf1:	mov    DWORD PTR [rdi-0x23],edi
   140015bf4:	mov    edi,0xd0ffa6b0
   140015bf9:	ret    
   140015bfa:	mov    ch,0xff
   140015bfc:	(bad)  
   140015bfd:	enter  0xffbc,0xd0
   140015c01:	(bad)  
   140015c02:	mov    ebx,0xb4bcc5ff
   140015c07:	(bad)  
   140015c08:	mov    ebp,0xb6ffafb5
   140015c0d:	scas   al,BYTE PTR es:[rdi]
   140015c0e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c0f:	jmp    FWORD PTR [rdx-0x6200605c]
   140015c15:	cwde   
   140015c16:	xchg   ebx,eax
   140015c17:	call   QWORD PTR [rax+rdx*4-0x6f6d0075]
   140015c1e:	mov    bh,bh
   140015c20:	fwait
   140015c21:	cwde   
   140015c22:	xchg   esp,eax
   140015c23:	jmp    QWORD PTR [rbp-0x5100615c]
   140015c29:	lods   al,BYTE PTR ds:[rsi]
   140015c2a:	test   eax,0xa9adadff
   140015c2f:	call   QWORD PTR [rax+0x6dff898f]
   140015c35:	imul   esp,DWORD PTR [rdi+rdi*8+0x73],0x71
   140015c3a:	imul   edi,edi,0xff7b8485
   140015c40:	mov    cl,BYTE PTR [rcx+0x5657ff81]
   140015c46:	push   rdx
   140015c47:	(bad)
   140015c4a:	add    ebp,DWORD PTR [rbx+0x0]
   140015c4d:	add    BYTE PTR [rax],al
   140015c4f:	add    BYTE PTR [rax],r8b
   140015c52:	add    BYTE PTR [rax+rax*1],dh
   140015c55:	add    BYTE PTR [rax],al
   140015c57:	(bad)  
   140015c58:	add    BYTE PTR [rax],al
   140015c5a:	add    BYTE PTR [rbx],al
	...
   140015c90:	add    BYTE PTR [rax],al
   140015c92:	add    BYTE PTR [rbx],al
   140015c94:	add    BYTE PTR [rax],al
   140015c96:	add    BYTE PTR [rsi],bl
   140015c98:	sbb    ebx,DWORD PTR [rbx]
   140015c9a:	sbb    cl,BYTE PTR [rdi+0x61]
   140015c9d:	pop    rbx
   140015c9e:	push   rbp
   140015c9f:	lahf   
   140015ca0:	cmp    DWORD PTR [rcx+0x6f],0xffffffd0
   140015ca4:	scas   eax,DWORD PTR es:[rdi]
   140015ca5:	movabs ds:0xb4c3ffa5b6c5ff97,eax
   140015cae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015caf:	(bad)  
   140015cb0:	mov    edi,0xb1ffa2b0
   140015cb5:	movabs ds:0x909bff909aa6ff97,eax
   140015cbe:	xchg   edi,edi
   140015cc0:	xchg   ebp,eax
   140015cc1:	mov    es,WORD PTR [rbp-0x6c656101]
   140015cc7:	jmp    FWORD PTR [rax+rbp*4-0x4948005d]
   140015cce:	mov    al,0xff
   140015cd0:	mov    ecx,0xc3ffb4b9
   140015cd5:	ret    0xffbf
   140015cd8:	(bad)  
   140015cd9:	(bad)  
   140015cda:	sar    edi,1
   140015cdc:	in     eax,0xe5
   140015cde:	loop   0x140015cdf
   140015ce0:	icebp  
   140015ce1:	icebp  
   140015ce2:	lock (bad) 
   140015ce4:	cli    
   140015ce5:	cli    
   140015ce6:	stc    
   140015ce7:	push   rsi
   140015ce9:	div    ch
   140015ceb:	(bad)  
   140015cec:	mov    esp,0xc4ffb9bd
   140015cf1:	(bad)  
   140015cf2:	sar    bh,0xab
   140015cf5:	stos   BYTE PTR es:[rdi],al
   140015cf6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015cf7:	(bad)  
   140015cf8:	jge    0x140015d75
   140015cfa:	jne    0x140015cfb
   140015cfc:	jae    0x140015d70
   140015cfe:	imul   edi,edi,0xff72797b
   140015d04:	nop
   140015d05:	pop    QWORD PTR [rsi+0x7d8385ff]
   140015d0b:	cli    
   140015d0c:	cmp    al,0x3b
   140015d0e:	cmp    DWORD PTR [rbp+0x5a000000],esp
   140015d14:	add    BYTE PTR [rax],al
   140015d16:	add    BYTE PTR [rax+0x0],al
   140015d19:	add    BYTE PTR [rax],al
   140015d1b:	sub    al,BYTE PTR [rax]
   140015d1d:	add    BYTE PTR [rax],al
   140015d1f:	sldt   WORD PTR [rax]
	...
   140015d4a:	add    BYTE PTR [rax],al
   140015d4c:	and    ah,BYTE PTR [rcx]
   140015d4e:	and    cl,BYTE PTR [rsi+0x6c]
   140015d51:	push   0xffffffff8f9ca960
   140015d56:	xor    ecx,0xffffffb1
   140015d59:	movabs ds:0x91a4ff93a1b4ff93,eax
   140015d62:	test   bh,bh
   140015d64:	cwde   
   140015d65:	mov    DWORD PTR [rdx-0x1],edi
   140015d68:	movabs ds:0x93ff8a969fff8b95,al
   140015d71:	mov    es,WORD PTR [rbp-0x5e585501]
   140015d77:	inc    ebp
   140015d79:	(bad)
   140015d7c:	(bad)  
   140015d7d:	(bad)  
   140015d7e:	sar    edi,cl
   140015d80:	in     eax,0xe6
   140015d82:	in     al,0xff
   140015d84:	out    dx,al
   140015d85:	out    dx,al
   140015d86:	out    dx,eax
   140015d87:	(bad)  
   140015d88:	out    dx,eax
   140015d89:	lock out dx,eax
   140015d8b:	(bad)  
   140015d8c:	out    dx,eax
   140015d8d:	icebp  
   140015d8e:	out    dx,eax
   140015d8f:	push   rax
   140015d91:	lock icebp 
   140015d93:	push   rdx
   140015d95:	repnz lock push rdx
   140015d99:	repz repnz push rdx
   140015d9d:	repnz icebp 
   140015d9f:	push   rsp
   140015da1:	hlt    
   140015da2:	repz (bad) 
   140015da4:	clc    
   140015da5:	clc    
   140015da6:	idiv   edi
   140015da8:	cmc    
   140015da9:	cmc    
   140015daa:	hlt    
   140015dab:	push   QWORD PTR [rbx-0x5000514d]
   140015db1:	scas   eax,DWORD PTR es:[rdi]
   140015db2:	test   eax,0xbec2c0ff
   140015db7:	inc    ebx
   140015db9:	ret    0xffc0
   140015dbc:	fwait
   140015dbd:	(bad)  
   140015dbe:	xchg   esp,eax
   140015dbf:	(bad)  
   140015dc0:	jp     0x140015e3a
   140015dc2:	jno    0x140015dc3
   140015dc4:	jnp    0x140015e3f
   140015dc6:	jno    0x140015dc7
   140015dc8:	test   DWORD PTR [rsp+rdi*2-0x726a6901],eax
   140015dcf:	inc    DWORD PTR [rdx+0x2af27a80]
   140015dd5:	sub    DWORD PTR [rax],ebp
   140015dd7:	xchg   esp,eax
   140015dd8:	add    BYTE PTR [rax],al
   140015dda:	add    BYTE PTR [rax+rax*1+0x0],dl
   140015dde:	add    BYTE PTR [rax+rax*1],bh
   140015de1:	add    BYTE PTR [rax],al
   140015de3:	add    BYTE PTR es:[rax],al
   140015de6:	add    BYTE PTR [rbx],cl
	...
   140015e04:	outs   dx,DWORD PTR ds:[rsi]
   140015e05:	outs   dx,BYTE PTR ds:[rsi]
   140015e06:	imul   ecx,DWORD PTR [rbx-0x4d],0xffffffaa
   140015e0a:	movabs ds:0x8090a3ff97a6b5de,al
   140015e13:	dec    DWORD PTR [rsi+0x7cff6c7c]
   140015e19:	outs   dx,BYTE PTR ds:[rsi]
   140015e1a:	pop    rdi
   140015e1b:	dec    DWORD PTR [rax+rax*4-0x6a63008a]
   140015e22:	(bad)  
   140015e23:	jmp    FWORD PTR [rcx-0x5300615b]
   140015e29:	stos   BYTE PTR es:[rdi],al
   140015e2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015e2b:	inc    DWORD PTR [rsi]
   140015e2d:	(bad)  
   140015e2e:	(bad)  
   140015e2f:	inc    DWORD PTR [rax]
   140015e31:	add    BYTE PTR [rax],al
   140015e33:	call   FWORD PTR [rcx+0x58]
   140015e36:	push   rbp
   140015e37:	(bad)  
   140015e38:	fstp   st(4)
   140015e3a:	fdivr  st,st(7)
   140015e3c:	(bad)  
   140015e3e:	(bad)  
   140015e40:	jmp    0x12e01472d
   140015e45:	in     eax,dx
   140015e46:	jmp    0x140015e47
   140015e48:	out    dx,eax
   140015e49:	out    dx,eax
   140015e4a:	in     eax,dx
   140015e4b:	push   rax
   140015e4d:	lock lock (bad) 
   140015e50:	clc    
   140015e51:	clc    
   140015e52:	idiv   edi
   140015e54:	sti    
   140015e55:	(bad)  
   140015e56:	std    
   140015e57:	(bad)  
   140015e58:	(bad)  
   140015e59:	(bad)  
   140015e5a:	(bad)  
   140015e5b:	(bad)  
   140015e5c:	(bad)  
   140015e5d:	(bad)  
   140015e5e:	(bad)  
   140015e5f:	(bad)  
   140015e60:	(bad)  
   140015e61:	(bad)  
   140015e62:	(bad)  
   140015e63:	(bad)  
   140015e64:	(bad)  
   140015e65:	(bad)  
   140015e66:	(bad)  
   140015e67:	(bad)  
   140015e68:	(bad)  
   140015e69:	(bad)  
   140015e6a:	(bad)  
   140015e6b:	(bad)  
   140015e6c:	(bad)  
   140015e6d:	in     al,dx
   140015e6e:	(bad)  
   140015e6f:	inc    ecx
   140015e71:	sar    DWORD PTR [rsi-0x544e4e01],0xff
   140015e78:	mov    bh,0xb7
   140015e7a:	mov    bl,0xff
   140015e7c:	vcmppd ymm7,ymm7,ymm7,0xb1
   140015e81:	mov    al,0xab
   140015e83:	dec    DWORD PTR [rdx+0x7fff8289]
   140015e89:	jnp    0x140015eff
   140015e8b:	inc    DWORD PTR [rdx+rax*4-0x73710085]
   140015e92:	test   edi,edi
   140015e94:	fwait
   140015e95:	cdq    
   140015e96:	xchg   edx,eax
   140015e97:	push   QWORD PTR [rbx+rsi*2+0x6b]
   140015e9b:	loopne 0x140015ebb
   140015e9d:	(bad)  
   140015e9e:	sbb    al,0x88
   140015ea0:	add    BYTE PTR [rax],al
   140015ea2:	add    BYTE PTR [rax+rax*1+0x0],cl
   140015ea6:	add    BYTE PTR [rdx],bh
   140015ea8:	add    BYTE PTR [rax],al
   140015eaa:	add    BYTE PTR [rdi],bl
   140015eac:	add    BYTE PTR [rax],al
   140015eae:	add    BYTE PTR [rax],cl
	...
   140015ec4:	mov    ch,0xab
   140015ec6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015ec7:	in     al,0x87
   140015ec9:	jbe    0x140015f33
   140015ecb:	push   QWORD PTR [rbx+0x63]
   140015ece:	pop    rax
   140015ecf:	(bad)  
   140015ed0:	jp     0x140015f43
   140015ed2:	push   0xffffffff8f969cff
   140015ed7:	(bad)  
   140015ed8:	mov    ebx,0xe3ffb6b9
   140015edd:	in     eax,0xe2
   140015edf:	call   rsp
   140015ee1:	(bad)  
   140015ee2:	sar    bh,cl
   140015ee4:	mov    esi,0xb1ffbac0
   140015ee9:	mov    cl,0xac
   140015eeb:	(bad)  
   140015eec:	jns    0x140015f66
   140015eee:	jae    0x140015eef
   140015ef0:	nop
   140015ef1:	(bad)  
   140015ef5:	leave  
   140015ef6:	(bad)  
   140015ef9:	fcmovnu st,st(1)
   140015efb:	jmp    rbp
   140015efd:	out    0xe4,al
   140015eff:	(bad)  
   140015f00:	out    dx,eax
   140015f01:	out    dx,eax
   140015f02:	in     eax,dx
   140015f03:	push   rcx
   140015f05:	icebp  
   140015f06:	out    dx,eax
   140015f07:	push   rdx
   140015f09:	repnz icebp 
   140015f0b:	push   rbx
   140015f0d:	repz repz push rsi
   140015f11:	cli    
   140015f12:	stc    
   140015f13:	push   rbp
   140015f15:	stc    
   140015f16:	clc    
   140015f17:	push   rdx
   140015f19:	stc    
   140015f1a:	idiv   bh
   140015f1c:	in     al,dx
   140015f1d:	cmc    
   140015f1e:	icebp  
   140015f1f:	(bad)  
   140015f20:	jmp    0x140015f16
   140015f22:	out    dx,al
   140015f23:	jmp    rbx
   140015f25:	out    0xe3,al
   140015f27:	jmp    rbp
   140015f29:	jmp    0x140015f15
   140015f2e:	(bad)  
   140015f2f:	(bad)  
   140015f30:	(bad)  
   140015f31:	(bad)  
   140015f32:	(bad)  
   140015f33:	jmp    rsp
   140015f35:	in     al,0xe1
   140015f37:	inc    ebx
   140015f39:	ret    
   140015f3a:	mov    edi,0xaeb2b2ff
   140015f3f:	(bad)  
   140015f40:	mov    ebx,0xc1ffb8bc
   140015f45:	ret    0xffbe
   140015f48:	movabs ds:0x87ff7c8285ff9da2,eax
   140015f51:	test   DWORD PTR [rbp-0x1],edi
   140015f54:	mov    cl,BYTE PTR [rax-0x6c6a007f]
   140015f5a:	mov    edi,?
   140015f5c:	popf   
   140015f5d:	fwait
   140015f5e:	xchg   edx,eax
   140015f5f:	jmp    QWORD PTR [rbp+0x64]
   140015f62:	pop    rbp
   140015f63:	ror    BYTE PTR [rsi],1
   140015f65:	(bad)  
   140015f66:	(bad)  
   140015f67:	jns    0x140015f69
   140015f69:	add    BYTE PTR [rax],al
   140015f6b:	rex.WB add BYTE PTR [r8],al
   140015f6e:	add    BYTE PTR [rdi],dh
   140015f70:	add    BYTE PTR [rax],al
   140015f72:	add    BYTE PTR [rax+rax*1],bl
   140015f75:	add    BYTE PTR [rax],al
   140015f77:	(bad)  
	...
   140015f84:	cmp    DWORD PTR [rsp+rsi*2-0x1b],0xff8f969a
   140015f8c:	mov    dh,0xb4
   140015f8e:	mov    al,0xff
   140015f90:	rol    eax,0xbd
   140015f93:	(bad)  
   140015f94:	(bad)  
   140015f96:	fdivp  st(7),st
   140015f98:	repnz bnd lock jmp rax
   140015f9d:	(bad)  
   140015f9f:	call   rbp
   140015fa1:	(bad)  
   140015fa2:	sar    bh,cl
   140015fa4:	rcl    edx,cl
   140015fa6:	iret   
   140015fa7:	call   rbp
   140015fa9:	(bad)  
   140015faa:	sar    bh,1
   140015fac:	in     al,0xe3
   140015fae:	(bad)  
   140015fb0:	in     al,dx
   140015fb1:	jmp    0x140015f9c
   140015fb3:	(bad)  
   140015fb4:	jmp    0x12d0147a1
   140015fb9:	in     eax,dx
   140015fba:	jmp    0x140015fbb
   140015fbc:	jmp    0x140015fa9
   140015fbe:	call   0x11ae03cc2
   140015fc3:	call   rcx
   140015fc5:	(bad)  
   140015fc6:	iret   
   140015fc7:	inc    edi
   140015fc9:	int    0xc9
   140015fcb:	inc    ecx
   140015fcd:	mov    edx,0xc3c5c0ff
   140015fd3:	push   QWORD PTR [rbp-0x59004e4b]
   140015fd9:	(bad)  
   140015fda:	xchg   esi,eax
   140015fdb:	call   FWORD PTR [rsi-0x60007f87]
   140015fe1:	fs js  0x140015fe3
   140015fe4:	xchg   ecx,eax
   140015fe5:	rex.WRXB movsxd r15,r15d
   140015fe8:	xchg   BYTE PTR [rsi+0x59],cl
   140015feb:	call   FWORD PTR [rcx-0x29007b79]
   140015ff1:	fcmovbe st,st(7)
   140015ff3:	push   rbx
   140015ff5:	idiv   eax
   140015ff7:	(bad)  
   140015ff8:	sti    
   140015ff9:	sti    
   140015ffa:	sti    
   140015ffb:	(bad)  
   140015ffc:	call   0x1020146e9
   140016001:	sar    DWORD PTR [rsi-0x504b4b01],0xff
   140016008:	mov    esp,0xb7ffbabd
   14001600d:	mov    bh,0xb2
   14001600f:	call   QWORD PTR [rbx+rdx*4-0x78760072]
   140016016:	(bad)  
   140016017:	dec    DWORD PTR [rsi-0x6f007874]
   14001601d:	mov    es,WORD PTR [rdi-0x6a636101]
   140016023:	call   FWORD PTR [rbx+0x53ff9197]
   140016029:	push   rdx
   14001602a:	rex.WRX movabs rsi,0x4700000063000000
   140016034:	add    BYTE PTR [rax],al
   140016036:	add    BYTE PTR [rdx],dh
   140016038:	add    BYTE PTR [rax],al
   14001603a:	add    BYTE PTR [rdi],dl
   14001603c:	add    BYTE PTR [rax],al
   14001603e:	add    BYTE PTR [rdx],al
   140016040:	fstp   st(4)
   140016042:	fdiv   DWORD PTR [rax-0x43]
   140016045:	mov    esp,0xc9caffb7
   14001604a:	(bad)  
   14001604d:	(bad)  
   14001604e:	mov    edi,0xd5d7d8ff
   140016053:	(bad)  
   140016054:	clc    
   140016055:	stc    
   140016056:	stc    
   140016057:	push   rsp
   140016059:	cmc    
   14001605a:	cmc    
   14001605b:	push   rax
   14001605d:	out    dx,eax
   14001605e:	in     eax,dx
   14001605f:	(bad)  
   140016060:	call   0x11b01464c
   140016065:	(bad)  
   140016067:	(bad)  
   140016068:	fcom   st(7)
   14001606a:	(bad)  
   14001606b:	(bad)  
   14001606c:	fcmovu st,st(1)
   14001606e:	(bad)  
   14001606f:	dec    ecx
   140016071:	retf   0xffc3
   140016074:	mov    bh,0xb9
   140016076:	mov    cl,0xff
   140016078:	sahf   
   140016079:	movabs al,ds:0x8585ff828987ff97
   140016082:	cmp    bh,0x81
   140016085:	jns    0x1400160fd
   140016087:	(bad)  
   140016088:	jns    0x1400160ee
   14001608a:	movsxd edi,edi
   14001608c:	xchg   ecx,eax
   14001608d:	jmp    DWORD PTR [ecx-0x5100918f]
   140016095:	ins    DWORD PTR es:[rdi],dx
   140016096:	addr32 (bad) 
   140016098:	mov    ecx,0xc0ff706c
   14001609d:	outs   dx,BYTE PTR ds:[rsi]
   14001609e:	cmp    edi,0xff806abb
   1400160a4:	mov    bl,0x6c
   1400160a6:	js     0x1400160a7
   1400160a8:	test   eax,0x94ff6b68
   1400160ad:	pop    rsi
   1400160ae:	push   rbp
   1400160af:	dec    DWORD PTR [rcx-0x6100a095]
   1400160b5:	xchg   edi,eax
   1400160b6:	nop
   1400160b7:	(bad)  
   1400160b8:	(bad)  
   1400160ba:	fdivr  st,st(7)
   1400160bc:	(bad)  
   1400160bd:	(bad)  
   1400160be:	(bad)  
   1400160bf:	(bad)  
   1400160c0:	(bad)  
   1400160c1:	(bad)  
   1400160c2:	(bad)  
   1400160c3:	(bad)  
   1400160c4:	jmp    0x1070149b3
   1400160c9:	mov    dl,0xff
   1400160cc:	mov    edx,0xbeffb5ba
   1400160d1:	mov    esi,0xa8a9ffb9
   1400160d6:	movabs ds:0x888e91ff8a8f91ff,eax
   1400160df:	call   QWORD PTR [rbx-0x6800746f]
   1400160e5:	xchg   esp,eax
   1400160e6:	(bad)  
   1400160e7:	jmp    QWORD PTR [rbx+riz*4-0x72700063]
   1400160ee:	mov    cl,bh
   1400160f0:	cmp    bh,BYTE PTR [rcx]
   1400160f2:	(bad)  
   1400160f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400160f4:	add    BYTE PTR [rax],al
   1400160f6:	add    BYTE PTR [rsi+0x0],bl
   1400160f9:	add    BYTE PTR [rax],al
   1400160fb:	rex.RXB add BYTE PTR [r8],r8b
   1400160fe:	add    BYTE PTR [rdx],bl
   140016100:	mov    edi,0xbabb96c2
   140016106:	mov    ch,0xff
   140016108:	retf   0xc4c9
   14001610b:	dec    ecx
   14001610d:	enter  0xffc4,0xd5
   140016111:	(bad)  
   140016112:	sar    edi,1
   140016114:	rcl    cl,cl
   140016116:	int    0xff
   140016118:	ret    0xbcc3
   14001611b:	(bad)  
   14001611c:	mov    ebx,0xc6ffb5ba
   140016121:	(bad)  
   140016122:	mov    edi,0xafb6b8ff
   140016127:	push   QWORD PTR [rdi+0x75]
   14001612a:	outs   dx,BYTE PTR ds:[rsi]
   14001612b:	dec    DWORD PTR [rdi+0x4d]
   14001612e:	rex.RB dec DWORD PTR [r15+0x49]
   140016132:	rex.XB call QWORD PTR [r8+0x48]
   140016136:	rex.R inc DWORD PTR [rdx+0x33]
   14001613a:	xor    bh,bh
   14001613c:	and    ah,BYTE PTR ss:[rdi+rdi*8]
   140016140:	push   rsi
   140016141:	xor    edi,DWORD PTR [rcx]
   140016143:	inc    DWORD PTR [rbx-0x5400b3b0]
   140016149:	outs   dx,DWORD PTR ds:[rsi]
   14001614a:	movsxd edi,edi
   14001614c:	retf   0x7690
   14001614f:	call   rdi
   140016151:	sahf   
   140016152:	je     0x140016153
   140016154:	(bad)  [rax-0x6824008f]
   14001615a:	jns    0x14001615b
   14001615c:	fcom   DWORD PTR [rax-0x702d007c]
   140016162:	jg     0x140016163
   140016164:	rcl    BYTE PTR [rbp-0x61320082],1
   14001616a:	test   bh,bh
   14001616c:	retf   0x89aa
   14001616f:	(bad)  
   140016170:	mov    ecx,0xa4ff86a5
   140016175:	xchg   esi,eax
   140016176:	cmp    edi,0xff788893
   14001617c:	(bad)
   140016180:	scas   eax,DWORD PTR es:[rdi]
   140016181:	scas   al,BYTE PTR es:[rdi]
   140016182:	lods   al,BYTE PTR ds:[rsi]
   140016183:	jmp    rcx
   140016185:	loopne 0x140016164
   140016187:	push   rdx
   140016189:	repnz icebp 
   14001618b:	jmp    rsp
   14001618d:	jrcxz  0x140016170
   14001618f:	dec    ecx
   140016191:	retf   
   140016192:	(bad)  
   140016193:	(bad)  
   140016194:	mov    edi,0xbaffbabf
   140016199:	mov    ecx,0xa1a4ffb5
   14001619e:	pushf  
   14001619f:	call   QWORD PTR [rdi-0x6500706b]
   1400161a5:	cwde   
   1400161a6:	xchg   ebx,eax
   1400161a7:	call   FWORD PTR [rcx-0x5e006e6a]
   1400161ad:	lahf   
   1400161ae:	cwde   
   1400161af:	jmp    FWORD PTR [rsi+0x7dffa5ac]
   1400161b5:	jnp    0x14001622c
   1400161b7:	lock add BYTE PTR [rax],al
   1400161ba:	add    BYTE PTR [rax+0x0],ah
   1400161bd:	add    BYTE PTR [rax],al
   1400161bf:	and    bl,al
   1400161c1:	xlat   BYTE PTR ds:[rbx]
   1400161c2:	(bad)  
   1400161c3:	pop    rbx
   1400161c4:	stos   BYTE PTR es:[rdi],al
   1400161c5:	test   al,0xa0
   1400161c7:	jmp    QWORD PTR [rcx-0x6f006761]
   1400161cd:	mov    es,WORD PTR [rsi+0x727c7eff]
   1400161d3:	(bad)  
   1400161d4:	jnp    0x14001624e
   1400161d6:	outs   dx,DWORD PTR ds:[rsi]
   1400161d7:	jmp    QWORD PTR [rcx+riz*2+0x58]
   1400161db:	push   QWORD PTR [rdx+rsi*1]
   1400161de:	sub    eax,0x181c1dff
   1400161e3:	call   QWORD PTR [rcx+0x50]
   1400161e6:	rex.WXB inc QWORD PTR [r11+0x53ff7e83]
   1400161ed:	rex.WRX
   1400161ee:	rex.WRB jmp FWORD PTR [r9]
   1400161f1:	sbb    ebx,DWORD PTR [rdx]
   1400161f3:	dec    DWORD PTR [rdx+0x2f]
   1400161f6:	xor    bh,bh
   1400161f8:	jg     0x140016250
   1400161fa:	push   rsi
   1400161fb:	call   FWORD PTR [rbp-0x56009692]
   140016201:	jle    0x140016268
   140016203:	inc    esp
   140016205:	xchg   ebx,eax
   140016206:	push   0xffffffffffffffff
   140016208:	leave  
   140016209:	sahf   
   14001620a:	ins    BYTE PTR es:[rdi],dx
   14001620b:	inc    eax
   14001620d:	popf   
   14001620e:	movsxd edi,edi
   140016210:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016211:	mov    BYTE PTR [rbp-0x1],al
   140016214:	test   BYTE PTR [rdi+0x2f],ah
   140016217:	jmp    QWORD PTR [rax+0x45]
   14001621a:	(bad)  
   14001621b:	inc    DWORD PTR [rsi+0x30]
   14001621e:	(bad)  
   14001621f:	dec    DWORD PTR [rbx+0x35]
   140016222:	(bad)  
   140016223:	call   FWORD PTR [rdx+0x46]
   140016226:	and    eax,0x365768ff
   14001622b:	jmp    FWORD PTR [rdi+0x62]
   14001622e:	jmp    FWORD PTR [r13+r12*2+0x45]
   140016233:	jmp    QWORD PTR [rcx+0x5b]
   140016236:	dec    DWORD PTR [r13+0x44]
   14001623a:	xor    al,0xff
   14001623c:	rex.XB cmp al,0x34
   14001623f:	jmp    FWORD PTR [rbx+0x67]
   140016242:	dec    WORD PTR [rbp-0x70007875]
   140016249:	mov    WORD PTR [rbp-0x463f3d01],es
   14001624f:	jmp    rsp
   140016251:	jrcxz  0x140016232
   140016253:	jmp    rbp
   140016255:	in     eax,0xe3
   140016257:	dec    esi
   140016259:	iret   
   14001625a:	retf   
   14001625b:	inc    edx
   14001625d:	ret    0xffbe
   140016260:	mov    dl,0xb2
   140016262:	scas   al,BYTE PTR es:[rdi]
   140016263:	jmp    QWORD PTR [rcx-0x61006461]
   140016269:	pushf  
   14001626a:	cwde   
   14001626b:	jmp    QWORD PTR [rax-0x57006662]
   140016271:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016272:	lahf   
   140016273:	jmp    FWORD PTR [rdx+0xffa1a8]
   140016279:	add    BYTE PTR [rax],al
   14001627b:	(bad)  
	...
   140016284:	mov    cl,0xb0
   140016286:	stos   BYTE PTR es:[rdi],al
   140016287:	sbb    bl,BYTE PTR [rcx+0x72858f97]
   14001628d:	jo     0x1400162f8
   14001628f:	in     al,0x46
   140016291:	rex.R
   140016292:	rex.B (bad) 
   140016294:	cmp    al,0x3b
   140016296:	xor    eax,0x2d2f31ff
   14001629b:	dec    DWORD PTR [rcx]
   14001629d:	(bad)  
   14001629e:	add    eax,0x1ff
   1400162a3:	inc    DWORD PTR [rcx]
   1400162a5:	add    BYTE PTR [rax],al
   1400162a7:	push   QWORD PTR [rcx]
   1400162a9:	xor    BYTE PTR [rdi],ah
   1400162ab:	inc    DWORD PTR [rsi-0x77008278]
   1400162b1:	mov    BYTE PTR [rbp-0x1],bh
   1400162b4:	gs push rbx
   1400162b6:	rex.WX (bad) 
   1400162b8:	jl     0x140016314
   1400162ba:	push   rax
   1400162bb:	call   QWORD PTR [rbx+0x76ff5d6a]
   1400162c1:	pop    rcx
   1400162c2:	dec    DWORD PTR ds:[rbx+0x3c]
   1400162c6:	(bad)  
   1400162c7:	jmp    FWORD PTR [rsi]
   1400162c9:	and    al,0x4
   1400162cb:	call   QWORD PTR [rsi]
   1400162cd:	adc    BYTE PTR [rax],al
   1400162cf:	call   QWORD PTR [rax]
   1400162d1:	(bad)  
   1400162d3:	call   FWORD PTR [rbx*1+0x3334ff11]
   1400162da:	sub    edi,edi
   1400162dc:	(bad)  
   1400162dd:	(bad)  
   1400162de:	pop    rcx
   1400162df:	call   FWORD PTR [rdi+0x5f]
   1400162e2:	push   rbp
   1400162e3:	inc    DWORD PTR [rdx+0x45]
   1400162e6:	cmp    al,0xff
   1400162e8:	xor    dh,BYTE PTR [rbx]
   1400162ea:	sub    eax,0x292f2fff
   1400162ef:	jmp    FWORD PTR [rdi]
   1400162f1:	(bad)  
   1400162f2:	sub    bh,bh
   1400162f4:	sub    ch,BYTE PTR [rdx]
   1400162f6:	and    eax,0x16181aff
   1400162fb:	jmp    FWORD PTR [rip+0x4eff2c2c]        # 0x18f008f2d
   140016301:	rex.WXB
   140016302:	rex.WXB call FWORD PTR [r8+r11*1]
   140016306:	sbb    bh,bh
   140016308:	or     DWORD PTR [rbx],eax
   14001630a:	add    al,0xff
   14001630c:	sbb    al,0x19
   14001630e:	(bad)  
   14001630f:	call   FWORD PTR [rdi+0x5d]
   140016312:	push   rsi
   140016313:	jmp    QWORD PTR [rbp-0x2600645e]
   140016319:	fcom   st(3)
   14001631b:	jmp    rbp
   14001631d:	out    0xe3,al
   14001631f:	call   rsp
   140016321:	(bad)  
   140016322:	sar    edi,1
   140016324:	ret    
   140016325:	ret    
   140016326:	sar    bh,0xb0
   140016329:	scas   eax,DWORD PTR es:[rdi]
   14001632a:	stos   DWORD PTR es:[rdi],eax
   14001632b:	jmp    QWORD PTR [rbp-0x5200615f]
   140016331:	stos   DWORD PTR es:[rdi],eax
   140016332:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016333:	jmp    FWORD PTR [rdi+0xffa9ae]
	...
   14001634d:	add    BYTE PTR [rax],al
   14001634f:	add    BYTE PTR [rcx-0x7fdc6761],ah
   140016355:	jg     0x1400163d0
   140016357:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016358:	rex.WRXB
   140016359:	rex.WRX
   14001635a:	rex.WXB
   14001635b:	lock cmp DWORD PTR [rdi],esi
   14001635e:	xor    al,0xff
   140016360:	xor    DWORD PTR [rdi],ebp
   140016362:	sub    bh,bh
   140016364:	and    DWORD PTR [rdi],ebx
   140016366:	(bad)  
   140016367:	inc    DWORD PTR [rdi]
   140016369:	add    eax,0x406ff00
   14001636e:	add    bh,bh
   140016370:	and    ah,BYTE PTR [rbx]
   140016372:	sbb    edi,edi
   140016374:	sbb    eax,0x8ff121c
   140016379:	add    al,BYTE PTR [rax]
   14001637b:	dec    DWORD PTR [rbx]
   14001637d:	add    eax,0x1c20ff00
   140016382:	adc    edi,edi
   140016384:	cmp    BYTE PTR [rcx+rbp*1],dh
   140016387:	call   FWORD PTR [rsi+0x5d]
   14001638a:	push   rdx
   14001638b:	call   FWORD PTR [rdx-0x33006a66]
   140016391:	int    0xca
   140016393:	(bad)  
   140016394:	in     eax,dx
   140016395:	out    dx,al
   140016396:	in     eax,dx
   140016397:	(bad)  
   140016398:	(bad)  
   140016399:	std    
   14001639a:	(bad)  
   14001639b:	(bad)  
   14001639c:	(bad)  
   14001639d:	(bad)  
   14001639e:	(bad)  
   14001639f:	(bad)  
   1400163a0:	(bad)  
   1400163a2:	fdivr  st,st(7)
   1400163a4:	mov    ch,0xc2
   1400163a7:	push   QWORD PTR [rdi-0x4f004f4a]
   1400163ad:	scas   al,BYTE PTR es:[rdi]
   1400163ae:	test   eax,0xbabcbeff
   1400163b3:	call   rcx
   1400163b5:	ror    dh,1
   1400163b7:	dec    esi
   1400163b9:	int    0xcb
   1400163bb:	call   FWORD PTR [rdi+0x57ff9d9e]
   1400163c1:	push   rbp
   1400163c2:	push   rbp
   1400163c3:	jmp    FWORD PTR [rcx]
   1400163c5:	(bad)  
   1400163c6:	(bad)  
   1400163c7:	call   FWORD PTR [rax]
   1400163c9:	(bad)  
   1400163ca:	(bad)  
   1400163cb:	inc    DWORD PTR [rcx+rax*1]
   1400163ce:	add    bh,bh
   1400163d0:	add    BYTE PTR [rax],al
   1400163d2:	add    bh,bh
   1400163d4:	add    BYTE PTR [rax],al
   1400163d6:	add    bh,bh
   1400163d8:	xor    eax,0x7bff2c31
   1400163dd:	jns    0x14001644f
   1400163df:	dec    edx
   1400163e1:	leave  
   1400163e2:	(bad)  
   1400163e5:	loop   0x1400163c5
   1400163e7:	call   rbp
   1400163e9:	(bad)  
   1400163ea:	sar    edi,cl
   1400163ec:	ret    0xbdc1
   1400163ef:	push   QWORD PTR [rbp-0x4900504d]
   1400163f5:	mov    ah,0xaf
   1400163f7:	inc    DWORD PTR [rax]
	...
   140016419:	add    BYTE PTR [rax],al
   14001641b:	add    BYTE PTR [rbx+0x6d2198a2],ah
   140016421:	imul   esp,DWORD PTR [rsi-0x7f],0x27
   140016425:	es and al,0xde
   140016428:	add    DWORD PTR [rcx],eax
   14001642a:	add    bh,bh
   14001642c:	adc    eax,0x30ff0f14
   140016431:	cs (bad) 
   140016433:	call   QWORD PTR [rdx+rdx*2+0x4a]
   140016437:	dec    DWORD PTR [rbx-0x43007f78]
   14001643d:	mov    esp,0xe5e7ffb6
   140016442:	jrcxz  0x140016443
   140016444:	clc    
   140016445:	cli    
   140016446:	idiv   edi
   140016448:	(bad)  
   140016449:	(bad)  
   14001644a:	(bad)  
   14001644b:	(bad)  
   14001644c:	(bad)  
   14001644d:	(bad)  
   14001644e:	(bad)  
   14001644f:	(bad)  
   140016450:	cld    
   140016451:	cld    
   140016452:	std    
   140016453:	(bad)  
   140016454:	std    
   140016455:	std    
   140016456:	std    
   140016457:	(bad)  
   140016458:	stc    
   140016459:	stc    
   14001645a:	stc    
   14001645b:	push   rsi
   14001645d:	div    ah
   14001645f:	push   rdx
   140016461:	repnz icebp 
   140016463:	(bad)  
   140016464:	call   0x11c014b51
   140016469:	fcmovnu st,st(0)
   14001646b:	dec    edx
   14001646d:	leave  
   14001646e:	(bad)  
   140016471:	mov    esi,0xbabcffba
   140016476:	mov    ch,0xff
   140016478:	mov    ebx,0xc2ffb5ba
   14001647d:	mov    edi,0xc3c5ffb9
   140016482:	mov    ebp,0xbec4c5ff
   140016487:	inc    esi
   140016489:	(bad)
   14001648c:	mov    ebp,0x9effb7bd
   140016491:	pushf  
   140016492:	cwde   
   140016493:	jmp    FWORD PTR [rdx+0x68]
   140016496:	dec    DWORD PTR gs:[rax+0x47]
   14001649a:	rex.RX inc DWORD PTR [rsi+0x44]
   14001649e:	rex call FWORD PTR [rax+0x56]
   1400164a2:	push   rcx
   1400164a3:	(bad)  
   1400164a4:	jp     0x14001651f
   1400164a6:	jb     0x1400164a7
   1400164a8:	stos   DWORD PTR es:[rdi],eax
   1400164a9:	stos   BYTE PTR es:[rdi],al
   1400164aa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400164ab:	inc    ecx
   1400164ad:	mov    edi,0xcfcfffbc
   1400164b2:	(bad)  
   1400164b3:	jmp    FWORD PTR [rcx+0xffa3a6]
	...
   1400164d5:	add    BYTE PTR [rax],al
   1400164d7:	add    bl,al
   1400164d9:	ret    0x35bd
   1400164dc:	ret    0xbbc1
   1400164df:	imul   edi,DWORD PTR [rbp-0x5f794844],0xc2d39a9f
   1400164e9:	sar    DWORD PTR [rbp-0x1e1b1a01],0xff
   1400164f0:	(bad)  
   1400164f1:	std    
   1400164f2:	std    
   1400164f3:	(bad)  
   1400164f4:	(bad)  
   1400164f5:	(bad)  
   1400164f6:	(bad)  
   1400164f7:	(bad)  
   1400164f8:	(bad)  
   1400164f9:	(bad)  
   1400164fa:	(bad)  
   1400164fb:	(bad)  
   1400164fc:	(bad)  
   1400164fd:	(bad)  
   1400164fe:	(bad)  
   1400164ff:	(bad)  
   140016500:	(bad)  
   140016501:	(bad)  
   140016502:	(bad)  
   140016503:	(bad)  
   140016504:	cli    
   140016505:	cli    
   140016506:	stc    
   140016507:	push   rbp
   140016509:	div    dh
   14001650b:	push   rdx
   14001650d:	repnz icebp 
   14001650f:	(bad)  
   140016510:	out    dx,eax
   140016511:	out    dx,eax
   140016512:	out    dx,al
   140016513:	(bad)  
   140016514:	jmp    0x128014e03
   140016519:	in     eax,0xe3
   14001651b:	jmp    rbx
   14001651d:	jrcxz  0x1400164ff
   14001651f:	jmp    rdx
   140016521:	loope  0x140016502
   140016523:	jmp    rdx
   140016525:	loope  0x140016506
   140016527:	jmp    rbx
   140016529:	loop   0x14001650b
   14001652b:	jmp    rax
   14001652d:	loopne 0x14001650f
   14001652f:	(bad)  
   140016530:	fstp   st(5)
   140016532:	(bad)  
   140016534:	(bad)  
   140016536:	(bad)  
   140016538:	fcmovu st,st(3)
   14001653a:	fdivr  st,st(7)
   14001653c:	rcl    edx,cl
   14001653e:	iret   
   14001653f:	dec    ecx
   140016541:	enter  0xffc4,0xc5
   140016545:	(bad)  
   140016549:	enter  0xffc1,0xc8
   14001654d:	enter  0xffc2,0xc6
   140016551:	(bad)
   140016554:	enter  0xc0c6,0xff
   140016558:	int3   
   140016559:	retf   
   14001655a:	(bad)  
   14001655b:	dec    esi
   14001655d:	int    0xc8
   14001655f:	dec    esp
   140016561:	retf   
   140016562:	(bad)  
   140016563:	push   QWORD PTR [rsp+rsi*4-0x4f4e0051]
   14001656a:	stos   DWORD PTR es:[rdi],eax
   14001656b:	(bad)  
   14001656c:	mov    edi,0xd0ffbabe
   140016571:	iret   
   140016572:	retf   
   140016573:	push   QWORD PTR [rbx+0xe1adb2]
	...
   140016585:	add    BYTE PTR [rax],al
   140016587:	add    BYTE PTR [rbp-0x43bf5954],ch
   14001658d:	mov    ebx,0xc3c4e1b7
   140016592:	mov    esi,0xc9cccdf6
   140016597:	call   rsi
   140016599:	(bad)  
   14001659a:	sar    bh,cl
   14001659c:	fcmovnu st,st(2)
   14001659e:	xlat   BYTE PTR ds:[rbx]
   14001659f:	(bad)  
   1400165a0:	fcmovnu st,st(2)
   1400165a2:	xlat   BYTE PTR ds:[rbx]
   1400165a3:	(bad)  
   1400165a4:	sti    
   1400165a5:	cld    
   1400165a6:	cli    
   1400165a7:	(bad)  
   1400165a8:	(bad)  
   1400165a9:	(bad)  
   1400165aa:	(bad)  
   1400165ab:	(bad)  
   1400165ac:	(bad)  
   1400165ad:	(bad)  
   1400165ae:	(bad)  
   1400165af:	(bad)  
   1400165b0:	clc    
   1400165b1:	clc    
   1400165b2:	clc    
   1400165b3:	push   rdx
   1400165b5:	repnz repz (bad) 
   1400165b8:	out    dx,eax
   1400165b9:	out    dx,eax
   1400165ba:	out    dx,al
   1400165bb:	(bad)  
   1400165bc:	jmp    0x1400165a9
   1400165be:	jmp    0x128ec4fc2
   1400165c3:	jmp    rdi
   1400165c5:	out    0xe5,eax
   1400165c7:	jmp    rbp
   1400165c9:	in     eax,0xe3
   1400165cb:	jmp    rbx
   1400165cd:	jrcxz  0x1400165b0
   1400165cf:	jmp    rcx
   1400165d1:	loope  0x1400165b1
   1400165d3:	(bad)  
   1400165d4:	(bad)  
   1400165d6:	fdiv   st(7),st
   1400165d8:	(bad)  
   1400165da:	fcos   
   1400165dc:	fcmovu st,st(1)
   1400165de:	xlat   BYTE PTR ds:[rbx]
   1400165df:	call   rdi
   1400165e1:	(bad)  
   1400165e2:	sar    edi,cl
   1400165e4:	(bad)  
   1400165e5:	rcl    eax,cl
   1400165e7:	call   rdx
   1400165e9:	ror    esi,1
   1400165eb:	call   rax
   1400165ed:	iret   
   1400165ee:	int3   
   1400165ef:	dec    esi
   1400165f1:	int    0xc9
   1400165f3:	dec    esp
   1400165f5:	retf   
   1400165f6:	(bad)  
   1400165f7:	dec    edx
   1400165f9:	leave  
   1400165fa:	(bad)  
   1400165fd:	enter  0xffc4,0xc9
   140016601:	enter  0xffc4,0xc8
   140016605:	mov    ebx,0xc5c8c9ff
   14001660b:	dec    ebx
   14001660d:	retf   0xffc6
   140016610:	retf   0xc4c9
   140016613:	inc    edi
   140016615:	mov    cl,0xff
   140016618:	(bad)
   14001661b:	inc    ebp
   14001661d:	(bad)  
   14001661e:	mov    edi,0xbbc0c1ff
   140016623:	(bad)  
   140016624:	mov    esi,0xb9ffb8bd
   140016629:	mov    eax,0xb6b8f8b1
   14001662e:	mov    cl,0xe0
   140016630:	rol    al,0xbb
   140016633:	(bad)  
   140016634:	(bad)  
   140016635:	int    0xc8
   140016637:	sbb    eax,0x0
	...
   140016648:	lahf   
   140016649:	popf   
   14001664a:	xchg   edi,eax
   14001664b:	push   0xffffffffffbbc0c1
   140016650:	(bad)  
   140016651:	int    0xc9
   140016653:	jmp    rbx
   140016655:	loop   0x140016639
   140016657:	(bad)  
   140016658:	out    dx,eax
   140016659:	out    dx,al
   14001665a:	out    dx,al
   14001665b:	push   rdx
   14001665d:	repnz lock push rsi
   140016661:	div    ah
   140016663:	push   rsp
   140016665:	hlt    
   140016666:	repz (bad) 
   140016668:	out    dx,al
   140016669:	out    dx,al
   14001666a:	in     eax,dx
   14001666b:	(bad)  
   14001666c:	out    dx,al
   14001666d:	out    dx,al
   14001666e:	in     al,dx
   14001666f:	(bad)  
   140016670:	in     al,dx
   140016671:	out    dx,al
   140016672:	in     al,dx
   140016673:	(bad)  
   140016674:	jmp    0x140016661
   140016676:	jmp    0x140016677
   140016678:	call   0x126014e66
   14001667d:	in     al,0xe2
   14001667f:	jmp    rbx
   140016681:	loop   0x140016664
   140016683:	jmp    rcx
   140016685:	loopne 0x140016665
   140016687:	(bad)  
   140016688:	(bad)  
   14001668a:	fdiv   st(7),st
   14001668c:	fcmovu st,st(1)
   14001668e:	xlat   BYTE PTR ds:[rbx]
   14001668f:	call   rsi
   140016691:	(bad)  
   140016692:	sar    edi,cl
   140016694:	(bad)  
   140016695:	rcl    al,cl
   140016697:	call   rcx
   140016699:	ror    ch,1
   14001669b:	dec    edi
   14001669d:	(bad)  
   14001669e:	retf   
   14001669f:	dec    ebp
   1400166a1:	int3   
   1400166a2:	leave  
   1400166a3:	dec    esp
   1400166a5:	retf   
   1400166a6:	(bad)  
   1400166a7:	dec    edx
   1400166a9:	leave  
   1400166aa:	(bad)  
   1400166ad:	enter  0xffc4,0xc8
   1400166b1:	mov    ebx,0xc2c6c7ff
   1400166b7:	inc    esi
   1400166b9:	(bad)
   1400166bc:	(bad)
   1400166bf:	inc    ebx
   1400166c1:	ret    0xffbd
   1400166c4:	rol    eax,0xbb
   1400166c7:	(bad)  
   1400166c8:	mov    ebp,0xbbffb8bc
   1400166cd:	mov    edx,0xbbbcffb4
   1400166d2:	mov    dh,0xe8
   1400166d4:	mov    esi,0xbabcb8bd
   1400166d9:	mov    ecx,0xb8ba9fb4
   1400166de:	mov    bl,0x7e
   1400166e0:	mov    esi,0xc443b8bd
   1400166e5:	ret    
   1400166e6:	mov    esi,0x10
	...
   14001670b:	add    BYTE PTR [rsi-0x51cd5853],ch
   140016711:	lods   al,BYTE PTR ds:[rsi]
   140016712:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016713:	push   rsp
   140016714:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016715:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016716:	movabs al,ds:0xaaafb18dacb2b378
   14001671f:	movabs al,ds:0xc5b9bfbeb1b9bfc0
   140016728:	enter  0xc3c7,0xdc
   14001672c:	leave  
   14001672d:	enter  0xfac4,0xce
   140016731:	int    0xca
   140016733:	call   rax
   140016735:	iret   
   140016736:	retf   
   140016737:	call   rsi
   140016739:	(bad)  
   14001673a:	sar    bh,cl
   14001673c:	fcmovnu st,st(2)
   14001673e:	xlat   BYTE PTR ds:[rbx]
   14001673f:	(bad)  
   140016740:	(bad)  
   140016742:	(bad)  
   140016743:	call   rbp
   140016745:	(bad)  
   140016746:	sar    edi,cl
   140016748:	iret   
   140016749:	iret   
   14001674a:	int3   
   14001674b:	dec    ebp
   14001674d:	int3   
   14001674e:	retf   0xccff
   140016751:	int3   
   140016752:	(bad)  
   140016753:	dec    ebp
   140016755:	int3   
   140016756:	enter  0xccff,0xcb
   14001675a:	(bad)  
   14001675b:	dec    ebx
   14001675d:	leave  
   14001675e:	(bad)  
   140016761:	mov    ebx,0xc1c6c7ff
   140016767:	inc    esi
   140016769:	(bad)
   14001676c:	ret    
   14001676d:	ret    0xffbe
   140016770:	sar    BYTE PTR [rbp-0x44430047],0xb7
   140016777:	(bad)  
   140016778:	mov    ebp,0xbce1b7bc
   14001677d:	mov    ebx,0xb8b9bab6
   140016782:	mov    bl,0x9c
   140016784:	mov    eax,0xb979b1b7
   140016789:	mov    eax,0xbbbc3eb3
   14001678e:	mov    dh,0xa
	...
   1400167f0:	mov    al,0xaf
   1400167f2:	stos   BYTE PTR es:[rdi],al
   1400167f3:	or     esp,DWORD PTR [rbp-0x4dd7625e]
   1400167f9:	mov    cl,0xab
   1400167fb:	cmp    eax,0x519ca2a4
   140016800:	mov    bl,0xb2
   140016802:	lods   eax,DWORD PTR ds:[rsi]
   140016803:	(bad)  
   140016804:	scas   al,BYTE PTR es:[rdi]
   140016805:	stos   BYTE PTR es:[rdi],al
   140016806:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016807:	jbe    0x1400167bf
   140016809:	mov    ch,0xb0
   14001680b:	mov    esi,DWORD PTR [rax-0x4a4a5651]
   140016811:	mov    bl,0xae
   140016813:	shl    DWORD PTR [rdx+rsi*4-0x4c4b0c53],cl
   14001681a:	scas   al,BYTE PTR es:[rdi]
   14001681b:	std    
   14001681c:	mov    eax,0xbbfcb1b8
   140016821:	mov    edx,0xbcbddeb5
   140016826:	mov    bh,0xa1
   140016828:	mov    edx,0xb972b4b9
   14001682d:	mov    eax,0xb6b852b3
   140016832:	mov    cl,0x34
   140016834:	mov    edx,0x7b4b9
	...
   1400170bd:	add    BYTE PTR [rax],al
   1400170bf:	add    bh,bh
   1400170c1:	(bad)  
   1400170c2:	(bad)  
   1400170c3:	(bad)  
   1400170c4:	(bad)  
   1400170c5:	inc    DWORD PTR [rax]
   1400170c7:	add    bh,bh
   1400170c9:	(bad)  
   1400170ca:	(bad)  
   1400170cb:	(bad)  
   1400170cc:	(bad)  
   1400170cd:	inc    DWORD PTR [rax]
   1400170cf:	add    bh,bh
   1400170d1:	(bad)  
   1400170d2:	inc    DWORD PTR [rax]
   1400170d4:	add    BYTE PTR [rbx],al
   1400170d6:	add    BYTE PTR [rax],al
   1400170d8:	(bad)  
   1400170d9:	(bad)  
   1400170da:	inc    DWORD PTR [rax]
   1400170dc:	add    BYTE PTR [rbx],al
   1400170de:	add    BYTE PTR [rax],al
   1400170e0:	(bad)  
   1400170e1:	(bad)  
   1400170e2:	inc    DWORD PTR [rax]
   1400170e4:	add    BYTE PTR [rbx],al
   1400170e6:	add    BYTE PTR [rax],al
   1400170e8:	(bad)  
   1400170e9:	(bad)  
   1400170ea:	inc    DWORD PTR [rax]
   1400170ec:	add    BYTE PTR [rbx],al
   1400170ee:	add    BYTE PTR [rax],al
   1400170f0:	(bad)  
   1400170f1:	(bad)  
   1400170f2:	inc    DWORD PTR [rax]
   1400170f4:	add    BYTE PTR [rbx],al
   1400170f6:	add    BYTE PTR [rax],al
   1400170f8:	(bad)  
   1400170f9:	(bad)  
   1400170fa:	inc    DWORD PTR [rax]
   1400170fc:	add    BYTE PTR [rbx],al
   1400170fe:	add    BYTE PTR [rax],al
   140017100:	(bad)  
   140017101:	(bad)  
   140017102:	inc    DWORD PTR [rax]
   140017104:	add    BYTE PTR [rbx],al
   140017106:	add    BYTE PTR [rax],al
   140017108:	(bad)  
   140017109:	(bad)  
   14001710a:	inc    DWORD PTR [rax]
   14001710c:	add    BYTE PTR [rbx],al
   14001710e:	add    BYTE PTR [rax],al
   140017110:	(bad)  
   140017111:	(bad)  
   140017112:	inc    DWORD PTR [rax]
   140017114:	add    BYTE PTR [rbx],al
   140017116:	add    BYTE PTR [rax],al
   140017118:	(bad)  
   140017119:	(bad)  
   14001711a:	inc    DWORD PTR [rax]
   14001711c:	add    BYTE PTR [rbx],al
   14001711e:	add    BYTE PTR [rax],al
   140017120:	(bad)  
   140017121:	(bad)  
   140017122:	inc    DWORD PTR [rax]
   140017124:	add    BYTE PTR [rbx],al
   140017126:	add    BYTE PTR [rax],al
   140017128:	(bad)  
   140017129:	(bad)  
   14001712a:	inc    DWORD PTR [rax]
   14001712c:	add    BYTE PTR [rbx],al
   14001712e:	add    BYTE PTR [rax],al
   140017130:	(bad)  
   140017131:	(bad)  
   140017132:	inc    DWORD PTR [rax]
   140017134:	add    BYTE PTR [rbx],al
   140017136:	add    BYTE PTR [rax],al
   140017138:	(bad)  
   140017139:	(bad)  
   14001713a:	inc    DWORD PTR [rax]
   14001713c:	add    BYTE PTR [rbx],al
   14001713e:	add    BYTE PTR [rax],al
   140017140:	(bad)  
   140017141:	(bad)  
   140017142:	inc    BYTE PTR [rax]
   140017144:	add    BYTE PTR [rbx],al
   140017146:	add    BYTE PTR [rax],al
   140017148:	(bad)  
   140017149:	jmp    rax
   14001714b:	add    BYTE PTR [rax],al
   14001714d:	add    eax,DWORD PTR [rax]
   14001714f:	add    bh,bh
   140017151:	cld    
   140017152:	add    BYTE PTR [rax],al
   140017154:	add    BYTE PTR [rbx],al
   140017156:	add    BYTE PTR [rax],al
   140017158:	jmp    rax
   14001715a:	add    BYTE PTR [rax],al
   14001715c:	add    BYTE PTR [rbx],al
   14001715e:	add    BYTE PTR [rax],al
   140017160:	inc    BYTE PTR [rax]
   140017162:	add    BYTE PTR [rax],al
   140017164:	add    edi,edi
   140017166:	add    BYTE PTR [rax],al
   140017168:	lock add BYTE PTR [rax],al
   14001716b:	add    BYTE PTR [rax],al
   14001716d:	inc    DWORD PTR [rax]
   14001716f:	add    al,ah
   140017171:	add    BYTE PTR [rax],al
   140017173:	add    BYTE PTR [rax],al
   140017175:	(bad)  
   140017176:	add    BYTE PTR [rax],al
   140017178:	add    BYTE PTR [rax],0x0
   14001717b:	add    BYTE PTR [rax],al
   14001717d:	sldt   WORD PTR [rax]
   140017180:	add    BYTE PTR [rax],0x0
   140017183:	add    BYTE PTR [rax],al
   140017185:	add    eax,DWORD PTR [rax]
   140017187:	add    BYTE PTR [rax+0x0],al
	...
   1400171a5:	add    DWORD PTR [rax],eax
   1400171a7:	add    BYTE PTR [rax+0x0],al
   1400171ad:	add    eax,DWORD PTR [rax]
   1400171af:	add    al,dh
   1400171b1:	add    BYTE PTR [rax],al
   1400171b3:	add    BYTE PTR [rax],al
   1400171b5:	add    eax,DWORD PTR [rax]
   1400171b7:	add    dh,bh
   1400171b9:	add    BYTE PTR [rax],al
   1400171bb:	add    BYTE PTR [rax],al
   1400171bd:	add    eax,DWORD PTR [rax]
   1400171bf:	add    ah,bh
   1400171c1:	add    BYTE PTR [rax],al
   1400171c3:	add    BYTE PTR [rax],al
   1400171c5:	add    eax,DWORD PTR [rax]
   1400171c7:	add    al,al
   1400171c9:	add    BYTE PTR [rax],al
   1400171cb:	add    BYTE PTR [rax],al
   1400171cd:	add    eax,DWORD PTR [rax]
   1400171cf:	add    al,al
   1400171d1:	add    BYTE PTR [rax],al
   1400171d3:	add    BYTE PTR [rax],al
   1400171d5:	(bad)  
   1400171d6:	add    BYTE PTR [rax],al
   1400171d8:	loopne 0x1400171da
   1400171da:	add    BYTE PTR [rax],al
   1400171dc:	ud0    eax,DWORD PTR [rax]
   1400171df:	add    bh,bh
   1400171e1:	lock add BYTE PTR [rbx],al
   1400171e4:	(bad)  
   1400171e5:	inc    DWORD PTR [rax]
   1400171e7:	add    bh,bh
   1400171e9:	(bad)  
   1400171ea:	(bad)  
   1400171eb:	(bad)  
   1400171ec:	(bad)  
   1400171ed:	inc    DWORD PTR [rax]
   1400171ef:	add    bh,bh
   1400171f1:	(bad)  
   1400171f2:	(bad)  
   1400171f3:	(bad)  
   1400171f4:	(bad)  
   1400171f5:	inc    DWORD PTR [rax]
   1400171f7:	add    bh,bh
   1400171f9:	(bad)  
   1400171fa:	(bad)  
   1400171fb:	(bad)  
   1400171fc:	(bad)  
   1400171fd:	inc    DWORD PTR [rax]
   1400171ff:	add    bh,bh
   140017201:	(bad)  
   140017202:	(bad)  
   140017203:	(bad)  
   140017204:	(bad)  
   140017205:	inc    DWORD PTR [rax]
   140017207:	add    bh,bh
   140017209:	(bad)  
   14001720a:	(bad)  
   14001720b:	(bad)  
   14001720c:	(bad)  
   14001720d:	inc    DWORD PTR [rax]
   14001720f:	add    bh,bh
   140017211:	(bad)  
   140017212:	(bad)  
   140017213:	(bad)  
   140017214:	(bad)  
   140017215:	inc    DWORD PTR [rax]
   140017217:	add    bh,bh
   140017219:	(bad)  
   14001721a:	(bad)  
   14001721b:	(bad)  
   14001721c:	(bad)  
   14001721d:	inc    DWORD PTR [rax]
   14001721f:	add    bh,bh
   140017221:	(bad)  
   140017222:	(bad)  
   140017223:	(bad)  
   140017224:	(bad)  
   140017225:	inc    DWORD PTR [rax]
   140017227:	add    bh,bh
   140017229:	(bad)  
   14001722a:	(bad)  
   14001722b:	(bad)  
   14001722c:	(bad)  
   14001722d:	inc    DWORD PTR [rax]
   14001722f:	add    bh,bh
   140017231:	(bad)  
   140017232:	(bad)  
   140017233:	(bad)  
   140017234:	(bad)  
   140017235:	inc    DWORD PTR [rax]
   140017237:	add    bh,bh
   140017239:	(bad)  
   14001723a:	(bad)  
   14001723b:	(bad)  
   14001723c:	(bad)  
   14001723d:	inc    DWORD PTR [rax]
   14001723f:	add    BYTE PTR [rax],ch
   140017241:	add    BYTE PTR [rax],al
   140017243:	add    BYTE PTR [rax],ah
   140017245:	add    BYTE PTR [rax],al
   140017247:	add    BYTE PTR [rax+0x0],al
   14001724a:	add    BYTE PTR [rax],al
   14001724c:	add    DWORD PTR [rax],eax
   14001724e:	and    BYTE PTR [rax],al
   140017250:	add    BYTE PTR [rax],al
   140017252:	add    BYTE PTR [rax],al
   140017254:	adc    BYTE PTR [rax],0x0
	...
   140017323:	add    BYTE PTR [rdi+0x59],ah
   140017326:	rex.WRB pop r10
   140017328:	push   0x68ff4e5a
   14001732d:	pop    rdx
   14001732e:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017332:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017336:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001733a:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001733e:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017342:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017346:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001734a:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001734e:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017352:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140017356:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001735a:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001735e:	rex.WRX push QWORD PTR [rdx+0x63]
   140017362:	push   rsi
   140017363:	pop    rdx
	...
   1400173a4:	mov    BYTE PTR [rsi+0x66],dh
   1400173a7:	call   rdi
   1400173a9:	(bad)  
   1400173aa:	sar    edi,cl
   1400173ac:	rcl    al,cl
   1400173ae:	(bad)  
   1400173af:	jmp    rbx
   1400173b1:	loop   0x140017393
   1400173b3:	(bad)  
   1400173b4:	(bad)  
   1400173b6:	(bad)  
   1400173b7:	dec    esi
   1400173b9:	mov    ecx,0xa6b0bcff
   1400173bf:	jmp    FWORD PTR [rsi-0x4f00685f]
   1400173c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400173c6:	sahf   
   1400173c7:	jmp    FWORD PTR [rsi-0x52005b56]
   1400173cd:	stos   DWORD PTR es:[rdi],eax
   1400173ce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400173cf:	jmp    FWORD PTR [rdx-0x57005c58]
   1400173d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400173d6:	movabs eax,ds:0xa2a6a9ffa2a6a9ff
   1400173df:	dec    DWORD PTR [rax+0xff6676]
	...
   140017421:	add    BYTE PTR [rax],al
   140017423:	add    BYTE PTR [rbp-0x25008274],bl
   140017429:	(bad)  
   14001742b:	(bad)  
   14001742c:	out    dx,al
   14001742d:	in     eax,dx
   14001742e:	in     al,dx
   14001742f:	(bad)  
   140017430:	fstp   st(1)
   140017432:	(bad)  
   140017433:	jmp    FWORD PTR [rbp-0x68006d61]
   140017439:	test   DWORD PTR [rdi+rdi*8-0x66],esi
   14001743d:	mov    DWORD PTR [rcx-0x1],edi
   140017440:	ins    DWORD PTR es:[rdi],dx
   140017441:	pop    rdi
   140017442:	push   rbx
   140017443:	dec    DWORD PTR [rax-0x5900988a]
   140017449:	cdq    
   14001744a:	(bad)  
   14001744b:	push   QWORD PTR [rcx-0x52005753]
   140017451:	stos   BYTE PTR es:[rdi],al
   140017452:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017453:	inc    ecx
   140017455:	mov    esi,0xd0d2ffbb
   14001745a:	(bad)  
   14001745b:	call   rdx
   14001745d:	ror    dh,1
   14001745f:	call   FWORD PTR [rbx+rcx*4+0xff7c]
	...
   1400174a2:	add    BYTE PTR [rax],al
   1400174a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400174a5:	xchg   esp,eax
   1400174a6:	xchg   bh,bh
   1400174a8:	(bad)  
   1400174a9:	jmp    0x129ed7496
   1400174ae:	out    0xff,al
   1400174b0:	mov    edx,0xe2ffa4ae
   1400174b5:	fstp   st(0)
   1400174b7:	(bad)  
   1400174b8:	out    dx,eax
   1400174b9:	in     al,dx
   1400174ba:	(bad)  
   1400174bb:	(bad)  
   1400174bc:	in     eax,dx
   1400174bd:	jmp    0x106d174a9
   1400174c2:	mov    edi,0x505d6bff
   1400174c7:	dec    DWORD PTR [rdx+rdi*2-0x4e470096]
   1400174ce:	test   eax,0xa9adb0ff
   1400174d3:	jmp    rdi
   1400174d5:	out    0xe5,al
   1400174d7:	jmp    QWORD PTR [rsi]
   1400174d9:	and    BYTE PTR [rdx],bl
   1400174db:	call   QWORD PTR [rbx+0x4f]
   1400174de:	rex.WRX jmp QWORD PTR [rcx+0xff8290]
	...
   140017521:	add    BYTE PTR [rax],al
   140017523:	add    BYTE PTR [rbp+rbx*4-0xb0a0070],ch
   14001752a:	hlt    
   14001752b:	call   rbp
   14001752d:	(bad)  
   14001752e:	enter  0xdfff,0xd9
   140017532:	(bad)  
   140017533:	jmp    QWORD PTR [rcx+0x2dff989c]
   140017539:	(bad)  
   14001753a:	and    bh,bh
   14001753c:	rex.WXB
   14001753d:	cmp    r15b,dil
   140017540:	lods   eax,DWORD PTR ds:[rsi]
   140017541:	stos   BYTE PTR es:[rdi],al
   140017542:	test   al,0xff
   140017544:	(bad)  
   140017545:	(bad)
   140017548:	ins    DWORD PTR es:[rdi],dx
   140017549:	pop    rdi
   14001754a:	push   rbx
   14001754b:	inc    edx
   14001754d:	mov    eax,0xb0b3ffb0
   140017552:	lods   al,BYTE PTR ds:[rsi]
   140017553:	jmp    rdi
   140017555:	out    0xe5,eax
   140017557:	jmp    QWORD PTR [rsi]
   140017559:	and    BYTE PTR [rdx],bl
   14001755b:	call   QWORD PTR [rbx+0x4f]
   14001755e:	rex.WRX jmp FWORD PTR [rcx+0xff8d9a]
	...
   1400175a1:	add    BYTE PTR [rax],al
   1400175a3:	add    BYTE PTR [rbx-0x300655a],dh
   1400175a9:	cld    
   1400175aa:	cld    
   1400175ab:	dec    esp
   1400175ad:	ret    
   1400175ae:	mov    ebx,0xdadee3ff
   1400175b3:	call   FWORD PTR [rbx+0x4f]
   1400175b6:	rex.R dec ecx
   1400175b9:	sahf   
   1400175ba:	je     0x1400175bb
   1400175bc:	sti    
   1400175bd:	retf   0xff85
   1400175c0:	and    DWORD PTR [rip+0xfffffffff2f4ff19],ebx        # 0x132f674df
   1400175c6:	lock push QWORD PTR [rax+rbp*2+0x5d]
   1400175cb:	inc    ebp
   1400175cd:	mov    esp,0xb3b6ffb5
   1400175d2:	mov    al,0xff
   1400175d4:	call   0x167015cc0
   1400175d9:	and    BYTE PTR [rdx],bl
   1400175db:	call   QWORD PTR [rbx+0x4f]
   1400175de:	rex.WRX jmp FWORD PTR [rdi+0xff95a1]
	...
   140017621:	add    BYTE PTR [rax],al
   140017623:	add    BYTE PTR [rdx-0x2005b52],bh
   140017629:	std    
   14001762a:	cld    
   14001762b:	call   rbp
   14001762d:	(bad)  
   14001762e:	leave  
   14001762f:	push   rsp
   140017631:	xacquire lock dec DWORD PTR [rbx+0x41]
   140017636:	cmp    bh,bh
   140017638:	test   al,0x71
   14001763a:	rex.RXB dec DWORD PTR [r15+0x21ff4268]
   140017641:	sbb    eax,0xe0e4ff19
   140017646:	fdiv   st(7),st
   140017648:	jbe    0x1400176b3
   14001764a:	pop    rsi
   14001764b:	dec    esp
   14001764d:	(bad)
   140017650:	mov    edx,0xe9ffb4b7
   140017655:	call   0x160287641
   14001765a:	sbb    bh,bh
   14001765c:	push   rbx
   14001765d:	rex.WRXB
   14001765e:	rex.WRX push QWORD PTR [rcx+0xff97a3]
	...
   1400176a1:	add    BYTE PTR [rax],al
   1400176a3:	add    dl,al
   1400176a5:	mov    eax,0xf7f7ffae
   1400176aa:	idiv   edi
   1400176ac:	(bad)  
   1400176ad:	retf   0xffc5
   1400176b0:	(bad)  
   1400176b2:	int    0xff
   1400176b4:	lods   al,BYTE PTR ds:[rsi]
   1400176b5:	test   eax,0x3941ffa7
   1400176ba:	xor    edi,edi
   1400176bc:	and    DWORD PTR [rip+0xffffffffa3a7ff19],ebx        # 0xe3a975db
   1400176c2:	movabs al,ds:0x738191ffbfc6cfff
   1400176cb:	call   rax
   1400176cd:	retf   
   1400176ce:	(bad)  
   1400176cf:	(bad)  
   1400176d0:	mov    ebp,0xeaffb8ba
   1400176d5:	(bad)  
   1400176d6:	call   0x15a219dda
   1400176db:	call   QWORD PTR [rbx+0x4f]
   1400176de:	rex.WRX push QWORD PTR [rdi+0xff9fab]
	...
   140017721:	add    BYTE PTR [rax],al
   140017723:	add    cl,cl
   140017725:	mov    edi,0xf1f2ffb7
   14001772a:	lock push rax
   14001772d:	out    dx,al
   14001772e:	in     eax,dx
   14001772f:	jmp    FWORD PTR [rax-0x22006560]
   140017735:	fcom   st(2)
   140017737:	push   rsp
   140017739:	repnz lock push rsp
   14001773d:	repnz lock (bad) 
   140017740:	fst    st(7)
   140017742:	sar    bh,cl
   140017744:	cwde   
   140017745:	mov    BYTE PTR [rbx-0x1],bh
   140017748:	(bad)  
   140017749:	mov    edi,0xc6c9ffb6
   14001774e:	ret    
   14001774f:	push   QWORD PTR [rsi-0x2c004f4c]
   140017755:	ror    edi,1
   140017757:	jmp    QWORD PTR [rsi]
   140017759:	and    BYTE PTR [rdx],bl
   14001775b:	jmp    QWORD PTR [rdi]
   14001775d:	and    DWORD PTR [rbx],ebx
   14001775f:	(bad)  
   140017760:	mov    esi,0xffaab4
	...
   1400177a1:	add    BYTE PTR [rax],al
   1400177a3:	add    ch,cl
   1400177a5:	(bad)  
   1400177a6:	mov    esp,0xe8e9eaff
   1400177ab:	push   rbp
   1400177ad:	hlt    
   1400177ae:	hlt    
   1400177af:	jmp    rcx
   1400177b1:	loopne 0x140017792
   1400177b3:	push   QWORD PTR [rcx-0x5c005f57]
   1400177b9:	xchg   ebp,eax
   1400177ba:	mov    bh,bh
   1400177bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400177bd:	xchg   edi,eax
   1400177be:	mov    bh,bh
   1400177c0:	test   eax,0xd6ff8e9b
   1400177c5:	ror    ebx,1
   1400177c7:	(bad)  
   1400177c8:	jmp    0x1400177b3
   1400177ca:	out    0xff,al
   1400177cc:	pop    rcx
   1400177cd:	(bad)  
   1400177ce:	(bad)  
   1400177cf:	dec    ebx
   1400177d1:	cwde   
   1400177d2:	push   QWORD PTR fs:[rax-0x28005352]
   1400177d9:	(bad)  
   1400177da:	(bad)  
   1400177db:	(bad)  
   1400177dc:	in     al,dx
   1400177dd:	jmp    0x1400177c9
   1400177df:	dec    edi
   1400177e1:	(bad)  
   1400177e2:	mov    edi,0xff
	...
   140017823:	add    bl,dl
   140017825:	retf   
   140017826:	(bad)  
   140017829:	jl     0x1400178a4
   14001782b:	push   QWORD PTR [rcx+rsi*4-0x39370051]
   140017832:	(bad)  
   140017835:	out    dx,eax
   140017836:	out    dx,al
   140017837:	(bad)  
   140017838:	in     al,dx
   140017839:	jmp    0x129ee7825
   14001783e:	out    0xff,eax
   140017840:	in     eax,0xe2
   140017842:	(bad)  
   140017844:	fstp   st(2)
   140017846:	(bad)  
   140017847:	push   rsp
   140017849:	repz icebp 
   14001784b:	(bad)  
   14001784c:	jp     0x1400178be
   14001784e:	imul   edi,edi,0xff14202f
   140017854:	mov    dh,0xb4
   140017856:	mov    cl,0xff
   140017858:	mov    ch,0xc3
   14001785b:	(bad)  
   14001785c:	(bad)  
   14001785e:	fdiv   st(7),st
   140017860:	iret   
   140017861:	(bad)  
   140017862:	mov    edi,0xee
	...
   140017897:	or     DWORD PTR [rax],eax
   140017899:	add    BYTE PTR [rax],al
   14001789b:	sbb    eax,0x4307090a
   1400178a0:	rex.WRB
   1400178a1:	rex.WB
   1400178a2:	rex.RX jg 0x140017886
   1400178a5:	fstp   st(1)
   1400178a7:	call   QWORD PTR [rdi+rcx*2+0x4b]
   1400178ab:	(bad)  
   1400178ac:	jg     0x140017929
   1400178ae:	js     0x1400178af
   1400178b0:	mov    dl,0xaf
   1400178b2:	lods   eax,DWORD PTR ds:[rsi]
   1400178b3:	(bad)  
   1400178b4:	(bad)  
   1400178b5:	(bad)  
   1400178b6:	(bad)  
   1400178b7:	(bad)  
   1400178b8:	(bad)  
   1400178b9:	(bad)  
   1400178ba:	(bad)  
   1400178bb:	(bad)  
   1400178bc:	(bad)  
   1400178bd:	(bad)  
   1400178be:	(bad)  
   1400178bf:	(bad)  
   1400178c0:	std    
   1400178c1:	std    
   1400178c2:	std    
   1400178c3:	(bad)  
   1400178c4:	cli    
   1400178c5:	cli    
   1400178c6:	cli    
   1400178c7:	push   rdi
   1400178c9:	div    dh
   1400178cb:	(bad)  
   1400178cc:	stc    
   1400178cd:	stc    
   1400178ce:	stc    
   1400178cf:	push   rsp
   1400178d1:	hlt    
   1400178d2:	repz (bad) 
   1400178d4:	out    dx,al
   1400178d5:	in     eax,dx
   1400178d6:	in     al,dx
   1400178d7:	push   rsp
   1400178d9:	repz repz push rsp
   1400178dd:	repz repz call rbx
   1400178e1:	int3   
   1400178e2:	(bad)  
	...
   140017905:	add    BYTE PTR [rax],al
   140017907:	or     eax,0x32070707
   14001790c:	sub    DWORD PTR [rdi],esp
   14001790e:	and    al,0x64
   140017910:	push   rsi
   140017911:	push   rcx
   140017912:	rex.WR cqo 
   140017914:	test   BYTE PTR [rbp+0x74],bh
   140017917:	enter  0xa4ab,0x9c
   14001791b:	jmp    0x13faf28d2
   140017920:	stos   BYTE PTR es:[rdi],al
   140017921:	test   al,0xa7
   140017923:	(bad)  
   140017924:	in     eax,dx
   140017925:	jmp    0x140017910
   140017927:	(bad)  
   140017928:	jmp    0x11b015d13
   14001792d:	ror    esi,cl
   14001792f:	call   rcx
   140017931:	leave  
   140017932:	ret    0xd1ff
   140017935:	leave  
   140017936:	ret    0xd1ff
   140017939:	leave  
   14001793a:	ret    0xd1ff
   14001793d:	leave  
   14001793e:	ret    0xd1ff
   140017941:	leave  
   140017942:	ret    0xd1ff
   140017945:	leave  
   140017946:	ret    0xd1ff
   140017949:	leave  
   14001794a:	ret    0xd1ff
   14001794d:	leave  
   14001794e:	ret    0xd1ff
   140017951:	leave  
   140017952:	ret    0xd1ff
   140017955:	leave  
   140017956:	ret    0xd1ff
   140017959:	leave  
   14001795a:	ret    0xd1ff
   14001795d:	leave  
   14001795e:	ret    0xd7ff
   140017961:	ror    dl,1
   140017963:	pop    rcx
	...
   140017978:	add    eax,DWORD PTR [rsp+rax*1]
   14001797b:	(bad)  
   14001797c:	sub    BYTE PTR [rip+0x50565c23],ah        # 0x19057d5a5
   140017982:	rex.WX cqo 
   140017984:	mov    BYTE PTR [rsi+0x75],bh
   140017987:	shl    BYTE PTR [rbp-0x3f006458],cl
   14001798d:	mov    cl,0xa5
   14001798f:	(bad)  
   140017990:	mov    edi,0xbcffa7b3
   140017995:	mov    cl,0xa9
   140017997:	push   QWORD PTR [rdi+rbp*4-0x524e0058]
   14001799e:	test   al,0xff
   1400179a0:	scas   eax,DWORD PTR es:[rdi]
   1400179a1:	lods   al,BYTE PTR ds:[rsi]
   1400179a2:	test   al,0xff
   1400179a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400179a5:	movabs ds:0x9697ffa0a2a4ff9f,eax
   1400179ae:	xchg   ecx,eax
   1400179af:	call   QWORD PTR [rcx-0x76007470]
   1400179b5:	xchg   DWORD PTR [rcx+0x707779ff],eax
   1400179bb:	(bad)  
   1400179bc:	jge    0x140017a39
   1400179be:	jne    0x1400179bf
   1400179c0:	jne    0x140017a36
   1400179c2:	ins    DWORD PTR es:[rdi],dx
   1400179c3:	repz sub DWORD PTR [rcx],ebp
   1400179c6:	(bad)  
   1400179c7:	xchg   ebx,eax
   1400179c8:	add    BYTE PTR [rax],al
   1400179ca:	add    BYTE PTR [rdi+0x0],al
   1400179cd:	add    BYTE PTR [rax],al
   1400179cf:	and    BYTE PTR [rax],al
   1400179d1:	add    BYTE PTR [rax],al
   1400179d3:	add    eax,0x0
	...
   1400179ec:	add    DWORD PTR [rdx],eax
   1400179ee:	add    dl,BYTE PTR [rax]
   1400179f0:	xor    esi,DWORD PTR [rax]
   1400179f2:	sub    eax,0x69727b67
   1400179f7:	retf   0x8d9c
   1400179fa:	jg     0x1400179fb
   1400179fc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400179fd:	xchg   edi,eax
   1400179fe:	mov    bh,bh
   140017a00:	lods   eax,DWORD PTR ds:[rsi]
   140017a01:	sahf   
   140017a02:	(bad)  
   140017a03:	jmp    QWORD PTR [rdi+rdx*4-0x77700074]
   140017a0a:	cmp    bh,0xb7
   140017a0d:	mov    bl,0xae
   140017a0f:	call   rbx
   140017a11:	ror    esi,1
   140017a13:	(bad)  
   140017a14:	fcmovu st,st(4)
   140017a16:	fcos   
   140017a18:	loopne 0x1400179fa
   140017a1a:	loopne 0x140017a1b
   140017a1c:	out    0xe6,al
   140017a1e:	out    0xff,al
   140017a20:	lock lock out dx,al
   140017a23:	push   rbp
   140017a25:	cmc    
   140017a26:	hlt    
   140017a27:	(bad)  
   140017a28:	cli    
   140017a29:	cld    
   140017a2a:	sti    
   140017a2b:	(bad)  
   140017a2c:	(bad)  
   140017a2d:	(bad)  
   140017a2e:	(bad)  
   140017a2f:	dec    eax
   140017a31:	leave  
   140017a32:	(bad)  
   140017a35:	mov    eax,0xb6b5ffb3
   140017a3a:	mov    cl,0xff
   140017a3c:	mov    cl,BYTE PTR [rcx+0x7d80ff82]
   140017a42:	jbe    0x140017a43
   140017a44:	lea    ecx,[rbx+0x7073ff84]
   140017a4a:	imul   esp,edi,0x881d1f1e
   140017a50:	add    BYTE PTR [rax],al
   140017a52:	add    BYTE PTR [rsi],bh
   140017a54:	add    BYTE PTR [rax],al
   140017a56:	add    BYTE PTR [rcx],bl
   140017a58:	add    BYTE PTR [rax],al
   140017a5a:	add    BYTE PTR [rdx],al
	...
   140017a68:	jp     0x140017ae4
   140017a6a:	jbe    0x140017aad
   140017a6c:	movabs al,ds:0x8cff778698f88892
   140017a75:	jge    0x140017ae6
   140017a77:	call   FWORD PTR [rdi-0x48007269]
   140017a7d:	mov    dl,0xac
   140017a7f:	push   QWORD PTR [rcx+0x3bffaab1]
   140017a85:	cmp    al,0x39
   140017a87:	push   QWORD PTR [rax]
   140017a89:	xor    BYTE PTR [rax],dh
   140017a8b:	dec    eax
   140017a8d:	mov    ebx,0xe8eaebff
   140017a93:	push   rsp
   140017a95:	hlt    
   140017a96:	repnz push rbx
   140017a99:	repz hlt 
   140017a9b:	(bad)  
   140017a9c:	stc    
   140017a9d:	sti    
   140017a9e:	cli    
   140017a9f:	(bad)  
   140017aa0:	(bad)  
   140017aa1:	(bad)  
   140017aa2:	(bad)  
   140017aa3:	(bad)  
   140017aa4:	(bad)  
   140017aa5:	(bad)  
   140017aa6:	(bad)  
   140017aa7:	(bad)  
   140017aa8:	(bad)  
   140017aa9:	(bad)  
   140017aaa:	(bad)  
   140017aab:	(bad)  
   140017aac:	(bad)  
   140017aad:	(bad)  
   140017aae:	(bad)  
   140017aaf:	(bad)  
   140017ab0:	(bad)  
   140017ab1:	(bad)  
   140017ab2:	(bad)  
   140017ab3:	call   rcx
   140017ab5:	ror    bh,cl
   140017ab7:	(bad)  
   140017ab8:	mov    edx,0xbcffb6bb
   140017abd:	mov    esp,0xa5a6ffb8
   140017ac2:	movabs al,ds:0x82898bff7d8485ff
   140017acb:	call   QWORD PTR [rbx+0x61ff8891]
   140017ad1:	(bad)  
   140017ad2:	pop    rbx
   140017ad3:	ror    DWORD PTR [rdx],cl
   140017ad5:	or     cl,BYTE PTR [rdx]
   140017ad7:	ins    DWORD PTR es:[rdi],dx
   140017ad8:	add    BYTE PTR [rax],al
   140017ada:	add    BYTE PTR [rdi],dh
   140017adc:	add    BYTE PTR [rax],al
   140017ade:	add    BYTE PTR [rax+rax*1],dl
   140017ae1:	add    BYTE PTR [rax],al
   140017ae3:	add    BYTE PTR [rax],al
   140017ae5:	add    BYTE PTR [rax],al
   140017ae7:	add    BYTE PTR [rbp-0x697d6c67],bl
   140017aed:	mov    es,WORD PTR [rsi-0x645e5a01]
   140017af3:	dec    esp
   140017af5:	retf   
   140017af6:	leave  
   140017af7:	(bad)  
   140017af8:	in     eax,dx
   140017af9:	out    dx,al
   140017afa:	in     eax,dx
   140017afb:	(bad)  
   140017afc:	fstp   st(5)
   140017afe:	(bad)  
   140017b00:	(bad)  
   140017b01:	ror    ah,1
   140017b03:	call   rbx
   140017b05:	ror    dh,cl
   140017b07:	jmp    rsp
   140017b09:	jrcxz  0x140017aeb
   140017b0b:	(bad)  
   140017b0c:	jmp    0x140017af8
   140017b0e:	jmp    0x125ea6412
   140017b13:	(bad)  
   140017b14:	fcmovnu st,st(7)
   140017b16:	(bad)  
   140017b18:	rcl    dh,cl
   140017b1a:	sar    edi,cl
   140017b1c:	iret   
   140017b1d:	rcl    ecx,cl
   140017b1f:	inc    ebx
   140017b21:	mov    esi,0xabbeffbe
   140017b26:	scas   eax,DWORD PTR es:[rdi]
   140017b27:	push   QWORD PTR [rbx-0x5c006470]
   140017b2d:	jns    0x140017ab2
   140017b2f:	(bad)  
   140017b30:	mov    eax,0xe8ffa6a6
   140017b35:	(bad)  
   140017b36:	jmp    0x12ff16b3a
   140017b3b:	call   rbp
   140017b3d:	(bad)  
   140017b3e:	sar    bh,cl
   140017b40:	rol    al,0xbc
   140017b43:	push   QWORD PTR [rbx+rsi*4-0x67650051]
   140017b4a:	xchg   ebx,eax
   140017b4b:	dec    DWORD PTR [rbx-0x69007b76]
   140017b51:	xchg   ebp,eax
   140017b52:	mov    ?,edi
   140017b54:	(bad)  
   140017b55:	mov    WORD PTR [rsi+0x515556ff],es
   140017b5b:	ret    
   140017b5c:	add    DWORD PTR [rdx],eax
   140017b5e:	add    DWORD PTR [rcx+0x0],esp
   140017b61:	add    BYTE PTR [rax],al
   140017b63:	sub    eax,DWORD PTR [rax]
   140017b65:	add    BYTE PTR [rax],al
   140017b67:	adc    esp,eax
   140017b69:	(bad)  
   140017b6a:	shl    bl,0xc8
   140017b6d:	enter  0xffc4,0xd5
   140017b71:	(bad)  
   140017b72:	sar    bh,1
   140017b74:	out    dx,eax
   140017b75:	lock out dx,al
   140017b77:	(bad)  
   140017b78:	(bad)  
   140017b79:	(bad)  
   140017b7a:	out    0xff,eax
   140017b7c:	out    0xe6,eax
   140017b7e:	jrcxz  0x140017b7f
   140017b80:	iret   
   140017b81:	int    0xc9
   140017b83:	push   QWORD PTR [rdx-0x5800534e]
   140017b89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017b8a:	lahf   
   140017b8b:	dec    DWORD PTR [rbx+0x72ff848a]
   140017b91:	ins    BYTE PTR es:[rdi],dx
   140017b92:	imul   edi,edi,0xff666779
   140017b98:	xchg   ebx,eax
   140017b99:	jo     0x140017c08
   140017b9b:	push   QWORD PTR [rax-0x42008e81]
   140017ba1:	jl     0x140017c0f
   140017ba3:	inc    edi
   140017ba5:	js     0x140017c21
   140017ba7:	inc    esp
   140017ba9:	jb     0x140017c2a
   140017bab:	(bad)  
   140017bac:	mov    eax,0xa6ff7373
   140017bb1:	jae    0x140017c16
   140017bb3:	call   FWORD PTR [rdi-0x3b008373]
   140017bb9:	sar    DWORD PTR [rdx-0x16151401],0xff
   140017bc0:	out    dx,al
   140017bc1:	out    dx,al
   140017bc2:	in     eax,dx
   140017bc3:	call   rsi
   140017bc5:	(bad)  
   140017bc6:	sar    bh,cl
   140017bc8:	ret    
   140017bc9:	ret    
   140017bca:	mov    edi,0xa8acadff
   140017bcf:	call   FWORD PTR [rcx-0x68006d69]
   140017bd5:	xchg   edx,eax
   140017bd6:	(bad)  
   140017bd7:	jmp    QWORD PTR [rdx-0x75006560]
   140017bdd:	mov    DWORD PTR [rbx+0x373b3af9],eax
   140017be3:	test   eax,0x57000000
   140017be8:	mov    ebp,0xaee2b7bc
   140017bed:	lods   eax,DWORD PTR ds:[rsi]
   140017bee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017bef:	call   FWORD PTR [rdi-0x70006862]
   140017bf5:	mov    eax,DWORD PTR [rbx+0x606769ff]
   140017bfb:	call   FWORD PTR [rbx+0x5b]
   140017bfe:	push   rbp
   140017bff:	(bad)  
   140017c00:	js     0x140017c79
   140017c02:	jno    0x140017c03
   140017c04:	rex.WRXB
   140017c05:	rex.WXB
   140017c06:	rex.RXB push QWORD PTR [r11]
   140017c09:	and    esp,DWORD PTR [rdx]
   140017c0b:	call   FWORD PTR [rbp+0x3f]
   140017c0e:	cmp    eax,0x4d5279ff
   140017c13:	jmp    QWORD PTR [rbx-0x3f00a68e]
   140017c19:	(bad)  
   140017c1a:	addr32 (bad) 
   140017c1c:	mov    ebx,0x9fff5a93
   140017c21:	jbe    0x140017c62
   140017c23:	inc    DWORD PTR [rbx+0x7eff3b58]
   140017c29:	push   rsi
   140017c2a:	cmp    al,0xff
   140017c2c:	mov    DWORD PTR [rbx+0x49],ebp
   140017c2f:	call   QWORD PTR [rax-0x7d00a384]
   140017c35:	ja     0x140017c91
   140017c37:	jmp    QWORD PTR [rbp+0x5b]
   140017c3a:	rex.WB call FWORD PTR [r10+0x53]
   140017c3e:	rex.WRB call QWORD PTR [r9-0x3e007471]
   140017c45:	sar    BYTE PTR [rbx-0x26222101],0xff
   140017c4c:	(bad)  
   140017c4d:	fcom   st(4)
   140017c4f:	inc    ebx
   140017c51:	ret    
   140017c52:	mov    esi,0xa2a7a8ff
   140017c57:	call   FWORD PTR [rsi-0x5b006764]
   140017c5d:	movabs ds:0x1a1cffa9afb1ff9d,al
   140017c66:	sbb    DWORD PTR [rsi-0x2e],ebp
   140017c69:	ror    dh,cl
   140017c6b:	(bad)  
   140017c6c:	(bad)  
   140017c6d:	cwde   
   140017c6e:	xchg   ecx,eax
   140017c6f:	ins    DWORD PTR es:[rdi],dx
   140017c70:	imul   ebp,DWORD PTR [rdx+0x63],0xffffffd2
   140017c74:	rex.XB
   140017c75:	rex.X cmp eax,0x191d1eff
   140017c7b:	inc    DWORD PTR [rcx]
   140017c7d:	add    BYTE PTR [rax],al
   140017c7f:	call   QWORD PTR [rcx]
   140017c81:	adc    DWORD PTR [rdi],eax
   140017c83:	call   FWORD PTR [rsi+0x5e]
   140017c86:	push   rsi
   140017c87:	jmp    FWORD PTR [rax+0x63]
   140017c8a:	pop    rcx
   140017c8b:	call   FWORD PTR [rsi+0x41]
   140017c8e:	cmp    bh,bh
   140017c90:	ins    DWORD PTR es:[rdi],dx
   140017c91:	rex.WX cmp dil,dil
   140017c94:	rex.WXB cmp bl,BYTE PTR [r11]
   140017c97:	(bad)  
   140017c98:	cmp    DWORD PTR [rdi],ebp
   140017c9a:	adc    al,0xff
   140017c9c:	xor    eax,0x44ff1e33
   140017ca1:	cmp    dil,r15b
   140017ca4:	jno    0x140017d17
   140017ca6:	push   0x717b79ff
   140017cab:	call   QWORD PTR [rbx+0x54]
   140017cae:	rex.WR dec QWORD PTR [rax+0x49]
   140017cb2:	rex inc DWORD PTR [rsi+0x45]
   140017cb6:	(bad)  
   140017cb7:	inc    DWORD PTR [rcx+0x40]
   140017cba:	cmp    eax,0x404042ff
   140017cbf:	jmp    QWORD PTR [rdi]
   140017cc1:	and    al,0x23
   140017cc3:	inc    DWORD PTR [rsi]
   140017cc5:	add    al,BYTE PTR [rcx]
   140017cc7:	push   QWORD PTR [rdx]
   140017cc9:	(bad)  
   140017cca:	sub    edi,edi
   140017ccc:	mov    BYTE PTR [rsi-0x31300080],al
   140017cd2:	retf   0xd8ff
   140017cd5:	fcom   st(5)
   140017cd7:	inc    ebx
   140017cd9:	ret    0xffbf
   140017cdc:	scas   al,BYTE PTR es:[rdi]
   140017cdd:	stos   DWORD PTR es:[rdi],eax
   140017cde:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017cdf:	push   QWORD PTR [rdx+rsi*4+0x2f2effae]
   140017ce6:	sub    al,0x39
	...
   140017cf4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017cf5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017cf6:	lahf   
   140017cf7:	(bad)  
   140017cf8:	mov    DWORD PTR [rax+0x53555b80],ecx
   140017cfe:	rex.WRX (bad) 
   140017d00:	adc    BYTE PTR [rdi],cl
   140017d02:	or     al,0xfa
   140017d04:	add    BYTE PTR [rax],al
   140017d06:	add    bh,bh
   140017d08:	and    DWORD PTR [rax],esp
   140017d0a:	(bad)  
   140017d0b:	inc    DWORD PTR [rsi+0x43]
   140017d0e:	cmp    edi,edi
   140017d10:	jp     0x140017d8b
   140017d12:	jb     0x140017d13
   140017d14:	stos   DWORD PTR es:[rdi],eax
   140017d15:	stos   DWORD PTR es:[rdi],eax
   140017d16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017d17:	dec    ebp
   140017d19:	iret   
   140017d1a:	int    0xff
   140017d1c:	(bad)  
   140017d1d:	in     al,dx
   140017d1e:	jmp    0x140017d1f
   140017d20:	(bad)  
   140017d21:	(bad)  
   140017d22:	(bad)  
   140017d23:	(bad)  
   140017d24:	(bad)  
   140017d25:	(bad)  
   140017d26:	(bad)  
   140017d27:	push   rax
   140017d29:	out    dx,eax
   140017d2a:	lock (bad) 
   140017d2c:	fcmovu st,st(1)
   140017d2e:	fdivr  st,st(7)
   140017d30:	mov    ebp,0xc1c2ffc2
   140017d36:	mov    esp,0xbbc0c1ff
   140017d3b:	push   QWORD PTR [rdx-0x66005350]
   140017d41:	xchg   edi,eax
   140017d42:	xchg   ebx,eax
   140017d43:	inc    DWORD PTR [rbx+0x60ff7e81]
   140017d49:	pop    rsi
   140017d4a:	pop    rsp
   140017d4b:	push   QWORD PTR [rbx]
   140017d4d:	xor    BYTE PTR [rsi],ch
   140017d4f:	push   QWORD PTR [rsi]
   140017d51:	xor    al,0x32
   140017d53:	(bad)  
   140017d54:	jg     0x140017dd3
   140017d56:	ja     0x140017d57
   140017d58:	mov    ecx,0xcbffb3b8
   140017d5d:	retf   
   140017d5e:	enter  0xbcff,0xba
   140017d62:	mov    bh,0xff
   140017d64:	outs   dx,BYTE PTR ds:[rsi]
   140017d65:	imul   esp,DWORD PTR [rdx+0x3f],0x0
   140017d69:	add    BYTE PTR [rax],al
   140017d6b:	add    BYTE PTR [rax],al
   140017d6d:	add    BYTE PTR [rax],al
   140017d6f:	add    BYTE PTR [rax-0x3fe34d49],bh
   140017d75:	mov    ebp,0xc9cb3eb8
   140017d7a:	ret    
   140017d7b:	fs mov edi,0xaf9fb9be
   140017d81:	scas   al,BYTE PTR es:[rdi]
   140017d82:	stos   DWORD PTR es:[rdi],eax
   140017d83:	repz rcl eax,1
   140017d86:	(bad)  
   140017d87:	(bad)  
   140017d88:	in     al,dx
   140017d89:	jmp    0x140017d75
   140017d8b:	(bad)  
   140017d8c:	(bad)  
   140017d8d:	(bad)  
   140017d8e:	std    
   140017d8f:	(bad)  
   140017d90:	(bad)  
   140017d91:	(bad)  
   140017d92:	(bad)  
   140017d93:	(bad)  
   140017d94:	std    
   140017d95:	std    
   140017d96:	(bad)  
   140017d97:	push   rdi
   140017d99:	div    esi
   140017d9b:	push   rcx
   140017d9d:	icebp  
   140017d9e:	icebp  
   140017d9f:	(bad)  
   140017da0:	in     eax,dx
   140017da1:	in     eax,dx
   140017da2:	jmp    0x140017da3
   140017da4:	out    0xe6,al
   140017da6:	in     al,0xff
   140017da8:	in     al,0xe4
   140017daa:	in     al,0xff
   140017dac:	in     al,0xe4
   140017dae:	loop   0x140017daf
   140017db0:	loopne 0x140017d91
   140017db2:	(bad)  
   140017db4:	(bad)  
   140017db6:	(bad)  
   140017db7:	call   rdx
   140017db9:	ror    esi,1
   140017dbb:	dec    esi
   140017dbd:	int    0xc9
   140017dbf:	dec    esp
   140017dc1:	retf   
   140017dc2:	(bad)  
   140017dc3:	dec    ebp
   140017dc5:	int3   
   140017dc6:	enter  0xcfff,0xce
   140017dca:	leave  
   140017dcb:	dec    ecx
   140017dcd:	enter  0xffc2,0xbb
   140017dd1:	mov    ecx,0xafb0ffb5
   140017dd6:	stos   BYTE PTR es:[rdi],al
   140017dd7:	push   QWORD PTR [rcx-0x41005450]
   140017ddd:	mov    ebp,0xbfc1ffb8
   140017de2:	mov    ebx,0x9ca2a3f8
   140017de7:	adc    BYTE PTR [rax],al
   140017de9:	add    BYTE PTR [rax],al
   140017deb:	add    BYTE PTR [rcx-0x387a5d59],ch
   140017df1:	mov    dl,0xff
   140017df4:	fcmovnu st,st(2)
   140017df6:	fdivr  st,st(7)
   140017df8:	jmp    0x12f0165e6
   140017dfd:	out    dx,al
   140017dfe:	in     eax,dx
   140017dff:	(bad)  
   140017e00:	(bad)  
   140017e01:	(bad)  
   140017e02:	(bad)  
   140017e03:	(bad)  
   140017e04:	cld    
   140017e05:	cld    
   140017e06:	cld    
   140017e07:	push   rsi
   140017e09:	div    ch
   140017e0b:	(bad)  
   140017e0c:	out    dx,eax
   140017e0d:	out    dx,eax
   140017e0e:	out    dx,al
   140017e0f:	(bad)  
   140017e10:	(bad)  
   140017e11:	in     al,dx
   140017e12:	(bad)  
   140017e13:	jmp    rdi
   140017e15:	out    0xe5,eax
   140017e17:	jmp    rsp
   140017e19:	jrcxz  0x140017dfc
   140017e1b:	(bad)  
   140017e1c:	fstp   st(4)
   140017e1e:	(bad)  
   140017e20:	(bad)  
   140017e22:	(bad)  
   140017e23:	call   rbp
   140017e25:	(bad)  
   140017e26:	sar    bh,cl
   140017e28:	rcl    cl,cl
   140017e2a:	(bad)  
   140017e2b:	dec    edi
   140017e2d:	(bad)  
   140017e2e:	retf   0xccff
   140017e31:	retf   
   140017e32:	enter  0xcaff,0xc9
   140017e36:	(bad)  
   140017e37:	dec    eax
   140017e39:	mov    esp,0xc4c6c7ff
   140017e3f:	inc    edi
   140017e41:	mov    dl,0xff
   140017e44:	(bad)
   140017e48:	(bad)
   140017e4c:	ret    
   140017e4d:	ret    0xf5bd
   140017e50:	(bad)
   140017e54:	ret    
   140017e55:	sar    DWORD PTR [rbp-0x4843424e],0x8a
   140017e5c:	mov    bh,0xb6
   140017e5e:	mov    al,0x57
   140017e60:	mov    edi,0xeb8bd
   140017e65:	add    BYTE PTR [rax],al
   140017e67:	add    BYTE PTR [rax],al
   140017e69:	add    BYTE PTR [rax],al
   140017e6b:	add    bl,al
   140017e6d:	ret    0x1abe
   140017e70:	mov    cl,BYTE PTR [rax-0x6e6e8f7c]
   140017e76:	mov    WORD PTR [rsi-0x62676362],es
   140017e7c:	test   al,0xa8
   140017e7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017e7f:	mov    cl,0xac
   140017e81:	lods   al,BYTE PTR ds:[rsi]
   140017e82:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017e83:	(bad)  
   140017e84:	mov    ah,0xb3
   140017e86:	scas   eax,DWORD PTR es:[rdi]
   140017e87:	fidiv  DWORD PTR [rbx-0x4a11514e]
   140017e8d:	mov    ah,0xb1
   140017e8f:	sti    
   140017e90:	mov    ch,0xb4
   140017e92:	mov    bl,0xff
   140017e94:	mov    bl,0xb2
   140017e96:	scas   eax,DWORD PTR es:[rdi]
   140017e97:	push   QWORD PTR [rcx-0x50005350]
   140017e9d:	scas   eax,DWORD PTR es:[rdi]
   140017e9e:	stos   DWORD PTR es:[rdi],eax
   140017e9f:	jmp    FWORD PTR [rdi-0x50005452]
   140017ea5:	scas   al,BYTE PTR es:[rdi]
   140017ea6:	stos   DWORD PTR es:[rdi],eax
   140017ea7:	jmp    FWORD PTR [rbp-0x53005654]
   140017ead:	stos   DWORD PTR es:[rdi],eax
   140017eae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017eaf:	jmp    FWORD PTR [rdx-0x54005b57]
   140017eb5:	stos   BYTE PTR es:[rdi],al
   140017eb6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017eb7:	out    dx,eax
   140017eb8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017eb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017eba:	movabs ds:0x949899b19ca1a2d1,al
   140017ec3:	mov    WORD PTR [rbx-0x44b44a46],?
   140017ec9:	mov    edx,0x58b5
	...
   140018266:	add    BYTE PTR [rax],al
   140018268:	(bad)  
   140018269:	(bad)  
   14001826a:	(bad)  
   14001826b:	(bad)  
   14001826c:	(bad)  
   14001826d:	inc    BYTE PTR [rax]
   14001826f:	add    edi,edi
   140018271:	inc    BYTE PTR [rax]
   140018273:	add    edi,edi
   140018275:	inc    BYTE PTR [rax]
   140018277:	add    edi,edi
   140018279:	inc    BYTE PTR [rax]
   14001827b:	add    edi,edi
   14001827d:	inc    BYTE PTR [rax]
   14001827f:	add    edi,edi
   140018281:	inc    BYTE PTR [rax]
   140018283:	add    edi,edi
   140018285:	inc    BYTE PTR [rax]
   140018287:	add    edi,edi
   140018289:	inc    BYTE PTR [rax]
   14001828b:	add    edi,edi
   14001828d:	inc    BYTE PTR [rax]
   14001828f:	add    edi,edi
   140018291:	inc    BYTE PTR [rax]
   140018293:	add    edi,edi
   140018295:	inc    BYTE PTR [rax]
   140018297:	add    edi,edi
   140018299:	loopne 0x14001829b
   14001829b:	add    esi,edi
   14001829d:	add    BYTE PTR [rax],al
   14001829f:	add    eax,esi
   1400182a1:	add    BYTE PTR [rax],al
   1400182a3:	(bad)  
   1400182a4:	add    BYTE PTR [rax],0x0
   1400182a7:	(bad)  
   1400182a8:	add    BYTE PTR [rax],al
   1400182aa:	add    BYTE PTR [rbx],al
	...
   1400182bc:	loopne 0x1400182be
   1400182be:	add    BYTE PTR [rax],al
   1400182c0:	rol    BYTE PTR [rax],0x0
   1400182c3:	add    BYTE PTR [rax-0x7fff0000],al
   1400182c9:	add    BYTE PTR [rax],al
   1400182cb:	jg     0x1400182cc
   1400182cd:	(bad)  
   1400182ce:	(bad)  
   1400182cf:	(bad)  
   1400182d0:	(bad)  
   1400182d1:	(bad)  
   1400182d2:	(bad)  
   1400182d3:	(bad)  
   1400182d4:	(bad)  
   1400182d5:	(bad)  
   1400182d6:	(bad)  
   1400182d7:	(bad)  
   1400182d8:	(bad)  
   1400182d9:	(bad)  
   1400182da:	(bad)  
   1400182db:	(bad)  
   1400182dc:	(bad)  
   1400182dd:	(bad)  
   1400182de:	(bad)  
   1400182df:	(bad)  
   1400182e0:	(bad)  
   1400182e1:	(bad)  
   1400182e2:	(bad)  
   1400182e3:	(bad)  
   1400182e4:	(bad)  
   1400182e5:	(bad)  
   1400182e6:	(bad)  
   1400182e7:	jmp    FWORD PTR [rax]
   1400182e9:	add    BYTE PTR [rax],al
   1400182eb:	add    BYTE PTR [rax],dl
   1400182ed:	add    BYTE PTR [rax],al
   1400182ef:	add    BYTE PTR [rax],ah
   1400182f1:	add    BYTE PTR [rax],al
   1400182f3:	add    BYTE PTR [rcx],al
   1400182f5:	add    BYTE PTR [rax],ah
   1400182f7:	add    BYTE PTR [rax],al
   1400182f9:	add    BYTE PTR [rax],al
   1400182fb:	add    BYTE PTR [rax+0x4],al
	...
   140018326:	add    BYTE PTR [rax],al
   140018328:	push   0x685f4e5a
   14001832d:	pop    rdx
   14001832e:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140018332:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140018336:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001833a:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001833e:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140018342:	rex.WRX jmp FWORD PTR [rax+0x5a]
   140018346:	rex.WRX jmp FWORD PTR [rax+0x5a]
   14001834a:	rex.WRX inc rbx
   14001834d:	mov    esi,0xfbb9
	...
   140018366:	add    BYTE PTR [rax],al
   140018368:	mov    cl,0xa4
   14001836a:	cdq    
   14001836b:	push   QWORD PTR [rsi-0x2b00524e]
   140018371:	ror    ah,1
   140018373:	(bad)  
   140018374:	call   0x12601675e
   140018379:	loope  0x140018359
   14001837b:	call   rbp
   14001837d:	ror    dh,cl
   14001837f:	jmp    FWORD PTR [rdx-0x5400605b]
   140018385:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018386:	movabs eax,ds:0x99a4b1ffdadadcff
   14001838f:	inc    DWORD PTR [rax]
	...
   1400183a5:	add    BYTE PTR [rax],al
   1400183a7:	add    BYTE PTR [rdi-0x2900695e],ch
   1400183ad:	ror    dh,cl
   1400183af:	jmp    QWORD PTR [rcx+0x2dff989c]
   1400183b5:	(bad)  
   1400183b6:	and    bh,bh
   1400183b8:	rex.WXB
   1400183b9:	cmp    r15b,dil
   1400183bc:	lods   eax,DWORD PTR ds:[rsi]
   1400183bd:	stos   BYTE PTR es:[rdi],al
   1400183be:	test   al,0xff
   1400183c0:	(bad)  
   1400183c1:	ror    dh,cl
   1400183c3:	call   rdx
   1400183c5:	iret   
   1400183c6:	retf   
   1400183c7:	jmp    FWORD PTR [rdi+riz*1]
   1400183ca:	and    edi,edi
   1400183cc:	scas   eax,DWORD PTR es:[rdi]
   1400183cd:	movabs ds:0xff96,al
	...
   1400183e6:	add    BYTE PTR [rax],al
   1400183e8:	scas   eax,DWORD PTR es:[rdi]
   1400183e9:	movabs ds:0x4f5bffe3e6e9ff97,eax
   1400183f2:	rex.R dec ecx
   1400183f5:	sahf   
   1400183f6:	je     0x1400183f7
   1400183f8:	sti    
   1400183f9:	retf   0xff85
   1400183fc:	and    DWORD PTR [rip+0xffffffffebedff19],ebx        # 0x12bef831b
   140018402:	call   0x114da5f06
   140018407:	jmp    FWORD PTR [rbx]
   140018409:	es and bh,bh
   14001840c:	scas   eax,DWORD PTR es:[rdi]
   14001840d:	movabs ds:0xff97,eax
	...
   140018426:	add    BYTE PTR [rax],al
   140018428:	mov    bl,0xa6
   14001842a:	pushf  
   14001842b:	push   rsp
   14001842d:	xacquire lock dec DWORD PTR [rbx+0x41]
   140018432:	cmp    bh,bh
   140018434:	test   al,0x71
   140018436:	rex.RXB dec DWORD PTR [r15+0x21ff4268]
   14001843d:	sbb    eax,0xe6e9ff19
   140018442:	in     al,0xff
   140018444:	xlat   BYTE PTR ds:[rbx]
   140018445:	(bad)  
   140018446:	sar    edi,1
   140018448:	sub    al,0x27
   14001844a:	and    bh,bh
   14001844c:	mov    bl,0xa6
   14001844e:	pushf  
   14001844f:	inc    DWORD PTR [rax]
	...
   140018465:	add    BYTE PTR [rax],al
   140018467:	add    BYTE PTR [rdi-0xf005952],dh
   14001846d:	out    dx,al
   14001846e:	in     al,dx
   14001846f:	jmp    FWORD PTR [rcx+rbp*4+0x3941ffa7]
   140018476:	xor    edi,edi
   140018478:	and    DWORD PTR [rip+0xffffffffa3a7ff19],ebx        # 0xe3a98397
   14001847e:	movabs al,ds:0x98adc0ff9ab3cbff
   140018487:	jmp    FWORD PTR [rdx]
   140018489:	and    eax,0xaeb7ff20
   14001848e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001848f:	inc    DWORD PTR [rax]
	...
   1400184a5:	add    BYTE PTR [rax],al
   1400184a7:	add    ch,bl
   1400184a9:	fcmovbe st,st(6)
   1400184ab:	inc    DWORD PTR [rax-0x22008684]
   1400184b1:	fcom   st(5)
   1400184b3:	push   rbx
   1400184b5:	repnz lock push rdx
   1400184b9:	lock out dx,al
   1400184bb:	(bad)  
   1400184bc:	fstp   st(0)
   1400184be:	(bad)  
   1400184bf:	(bad)  
   1400184c0:	mov    esp,0xcbff6992
   1400184c5:	cdq    
   1400184c6:	jmp    sp
   1400184c9:	loope  0x1400184aa
   1400184cb:	dec    esi
   1400184cd:	mov    edx,0x868c8dff
   1400184d3:	cld    
   1400184d4:	lea    ecx,[rsi+rax*4-0x79737201]
   1400184db:	dec    DWORD PTR [rbp-0x71007974]
   1400184e1:	lea    eax,[rdi-0x78727101]
   1400184e7:	(bad)  
   1400184e8:	out    dx,eax
   1400184e9:	out    dx,al
   1400184ea:	in     al,dx
   1400184eb:	(bad)  
   1400184ec:	(bad)  
   1400184ee:	xlat   BYTE PTR ds:[rbx]
   1400184ef:	(bad)  
   1400184f0:	fcmovnbe st,st(6)
   1400184f2:	sar    edi,1
   1400184f4:	fcmovnbe st,st(5)
   1400184f6:	sar    bh,1
   1400184f8:	xlat   BYTE PTR ds:[rbx]
   1400184f9:	ror    esp,1
   1400184fb:	call   rdi
   1400184fd:	ror    esp,1
   1400184ff:	call   rdi
   140018501:	ror    esp,1
   140018503:	(bad)  
   140018504:	fcompp 
   140018506:	(bad)  
   140018507:	(bad)  
   140018508:	fcmovnbe st,st(6)
   14001850a:	sar    edi,1
   14001850c:	fcmovnbe st,st(5)
   14001850e:	sar    bh,1
   140018510:	jne    0x140018586
   140018512:	outs   dx,DWORD PTR ds:[rsi]
   140018513:	(bad)  
   140018514:	jne    0x14001858a
   140018516:	outs   dx,DWORD PTR ds:[rsi]
   140018517:	push   QWORD PTR [rbp+0x74]
   14001851a:	outs   dx,DWORD PTR ds:[rsi]
   14001851b:	push   QWORD PTR [rbp+0x74]
   14001851e:	outs   dx,DWORD PTR ds:[rsi]
   14001851f:	push   QWORD PTR [rbp+0x74]
   140018522:	outs   dx,DWORD PTR ds:[rsi]
   140018523:	push   QWORD PTR [rsi+0x74]
   140018526:	outs   dx,DWORD PTR ds:[rsi]
   140018527:	call   FWORD PTR [rdx+rbx*2+0x54]
   14001852b:	call   QWORD PTR [rcx+0x50]
   14001852e:	rex.WX push QWORD PTR [rbp+0x74]
   140018532:	outs   dx,DWORD PTR ds:[rsi]
   140018533:	push   QWORD PTR [rbp+0x74]
   140018536:	outs   dx,DWORD PTR ds:[rsi]
   140018537:	push   QWORD PTR [rbp+0x74]
   14001853a:	outs   dx,DWORD PTR ds:[rsi]
   14001853b:	push   QWORD PTR [rbp+0x74]
   14001853e:	outs   dx,DWORD PTR ds:[rsi]
   14001853f:	push   QWORD PTR [rbp+0x74]
   140018542:	outs   dx,DWORD PTR ds:[rsi]
   140018543:	push   QWORD PTR [rsi+0x74]
   140018546:	outs   dx,DWORD PTR ds:[rsi]
   140018547:	inc    DWORD PTR [rax]
   140018549:	add    BYTE PTR [rax],al
   14001854b:	add    BYTE PTR [rax],al
   14001854d:	add    BYTE PTR [rax],al
   14001854f:	add    bh,bl
   140018551:	(bad)  
   140018553:	jmp    rax
   140018555:	(bad)  
   140018557:	jmp    rbx
   140018559:	jrcxz  0x14001853c
   14001855b:	jmp    rsi
   14001855d:	out    0xe4,al
   14001855f:	(bad)  
   140018560:	jmp    0x128016d4e
   140018565:	out    0xe5,eax
   140018567:	call   rcx
   140018569:	ror    ch,1
   14001856b:	dec    eax
   14001856d:	mov    ebx,0xdcdedfff
   140018573:	(bad)  
   140018574:	(bad)  
   140018575:	(bad)  
   140018576:	call   0x122e66a7a
   14001857b:	jmp    rsp
   14001857d:	in     al,0xe2
   14001857f:	jmp    rcx
   140018581:	loope  0x140018562
   140018583:	(bad)  
   140018584:	(bad)  
   140018586:	fdiv   st(7),st
	...
   140018590:	in     al,dx
   140018591:	in     al,dx
   140018592:	jmp    0x1400185fc
   140018594:	in     al,dx
   140018595:	in     al,dx
   140018596:	jmp    0x14001858d
   140018598:	(bad)  
   140018599:	(bad)  
   14001859a:	sar    bh,cl
   14001859c:	cld    
   14001859d:	int3   
   14001859e:	scas   al,BYTE PTR es:[rdi]
   14001859f:	call   rdi
   1400185a1:	pushf  
   1400185a2:	imul   edi,edi,0xffffffd9
   1400185a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400185a6:	ins    DWORD PTR es:[rdi],dx
   1400185a7:	(bad)  
   1400185a8:	(bad)  [rax-0x4f260091]
   1400185ae:	jo     0x1400185af
   1400185b0:	fisubr DWORD PTR [rbx-0x5e270092]
   1400185b6:	ins    BYTE PTR es:[rdi],dx
   1400185b7:	(bad)  
   1400185b8:	jmp    rcx
   1400185ba:	jns    0x1400185bb
   1400185bc:	rcl    edx,cl
   1400185be:	iret   
   1400185bf:	jmp    rsp
   1400185c1:	in     al,0xe2
   1400185c3:	(bad)  
   1400185c4:	in     al,dx
   1400185c5:	in     al,dx
   1400185c6:	jmp    0x140018642
	...
   1400185d4:	lock lock out dx,eax
   1400185d7:	adc    al,al
   1400185d9:	mov    edi,0x52532bba
   1400185de:	rex.WR inc QWORD PTR [rbx+0x42]
   1400185e2:	cmp    eax,0x3f4445ff
   1400185e7:	inc    DWORD PTR [rbp+0x44]
   1400185ea:	(bad)  
   1400185eb:	inc    DWORD PTR [rsi+0x45]
   1400185ee:	rex inc DWORD PTR [rbp+0x44]
   1400185f2:	(bad)  
   1400185f3:	inc    DWORD PTR [rbx+rax*2+0x3e]
   1400185f7:	inc    DWORD PTR [rax+0x3f]
   1400185fa:	cmp    edi,edi
   1400185fc:	(bad)  
   1400185fd:	lea    eax,[rdx+rax*4+0x23ebecec]
	...
   140018618:	jne    0x14001868d
   14001861a:	imul   ecx,edx,0x63
   14001861d:	(bad)  
   14001861e:	pop    rbx
   14001861f:	jmp    QWORD PTR [rdi+0x65]
   140018622:	pop    rsi
   140018623:	jmp    QWORD PTR [rdi+0x65]
   140018626:	pop    rsi
   140018627:	jmp    QWORD PTR [rdi+0x65]
   14001862a:	pop    rsi
   14001862b:	jmp    QWORD PTR [rdi+0x65]
   14001862e:	pop    rsi
   14001862f:	jmp    QWORD PTR [rdi+0x65]
   140018632:	pop    rsi
   140018633:	jmp    QWORD PTR [rdi+0x65]
   140018636:	pop    rsi
   140018637:	jmp    QWORD PTR [rdx+0x60]
   14001863a:	pop    rdx
   14001863b:	jmp    FWORD PTR [rbp+0x6b]
   14001863e:	repnz add DWORD PTR fs:[rcx+0x2f78],0x0
	...
   14001864f:	add    BYTE PTR [rdi-0x77b1726b],dl
   140018655:	xchg   BYTE PTR [rbp-0xe],bh
   140018658:	add    DWORD PTR [rcx-0x79770088],0x7d
   14001865f:	dec    DWORD PTR [rax-0x7700827a]
   140018665:	xchg   BYTE PTR [rbp-0x1],bh
   140018668:	mov    BYTE PTR [rsi-0x79770083],al
   14001866e:	jge    0x14001866f
   140018670:	mov    BYTE PTR [rsi-0x79770083],al
   140018676:	jge    0x140018677
   140018678:	mov    BYTE PTR [rsi-0x7b790083],al
   14001867e:	jp     0x14001867f
   140018680:	cmp    DWORD PTR [rdi+0x76],0x8b9395ff
   140018687:	(bad)  
	...
   140018690:	fwait
   140018691:	cdq    
   140018692:	xchg   edx,eax
   140018693:	loopne 0x14001862e
   140018695:	xchg   edi,eax
   140018696:	(bad)  
   140018697:	call   FWORD PTR [rdx-0x64026f68]
   14001869d:	cdq    
   14001869e:	xchg   edx,eax
   14001869f:	stc    
   1400186a0:	fwait
   1400186a1:	cdq    
   1400186a2:	xchg   edx,eax
   1400186a3:	stc    
   1400186a4:	fwait
   1400186a5:	cdq    
   1400186a6:	xchg   edx,eax
   1400186a7:	stc    
   1400186a8:	fwait
   1400186a9:	cdq    
   1400186aa:	xchg   edx,eax
   1400186ab:	stc    
   1400186ac:	fwait
   1400186ad:	cdq    
   1400186ae:	xchg   edx,eax
   1400186af:	stc    
   1400186b0:	fwait
   1400186b1:	cdq    
   1400186b2:	xchg   edx,eax
   1400186b3:	stc    
   1400186b4:	fwait
   1400186b5:	cdq    
   1400186b6:	xchg   edx,eax
   1400186b7:	stc    
   1400186b8:	fwait
   1400186b9:	cdq    
   1400186ba:	xchg   edx,eax
   1400186bb:	stc    
   1400186bc:	fwait
   1400186bd:	cdq    
   1400186be:	xchg   edx,eax
   1400186bf:	sti    
   1400186c0:	(bad)  
   1400186c1:	cwde   
   1400186c2:	nop
   1400186c3:	call   FWORD PTR [rdx+rbx*4+0xed93]
	...
   14001870e:	add    BYTE PTR [rax],al
   140018710:	cld    
   140018711:	add    BYTE PTR [rax],al
   140018713:	add    ah,bh
   140018715:	add    BYTE PTR [rax],al
   140018717:	add    ah,bh
   140018719:	add    BYTE PTR [rax],al
   14001871b:	add    ah,bh
   14001871d:	add    BYTE PTR [rax],al
   14001871f:	add    ah,bh
   140018721:	add    BYTE PTR [rax],al
   140018723:	add    ah,bh
   140018725:	add    BYTE PTR [rax],al
   140018727:	add    ah,bh
	...
   140018731:	add    eax,DWORD PTR [rax]
   140018733:	add    BYTE PTR [rax],al
   140018735:	add    eax,DWORD PTR [rax]
   140018737:	add    BYTE PTR [rax],al
   140018739:	add    eax,DWORD PTR [rax]
   14001873b:	add    BYTE PTR [rax-0x3ffffff9],al
   140018741:	(bad)  
   140018742:	add    BYTE PTR [rax],al
   140018744:	add    BYTE PTR [rbx],al
   140018746:	add    BYTE PTR [rax],al
   140018748:	add    BYTE PTR [rbx],al
   14001874a:	add    BYTE PTR [rax],al
   14001874c:	(bad)  
   14001874d:	inc    DWORD PTR [rax]
   14001874f:	add    BYTE PTR [rax],al
   140018751:	add    BYTE PTR [rcx],al
   140018753:	add    BYTE PTR [rdx],cl
   140018755:	add    BYTE PTR [rax],dh
   140018757:	xor    BYTE PTR [rax],dl
   140018759:	add    BYTE PTR [rcx],al
   14001875b:	add    BYTE PTR [rax+rax*1],al
   14001875e:	push   0x1000006
   140018763:	add    BYTE PTR [rax],ah
   140018765:	and    BYTE PTR [rax],dl
   140018767:	add    BYTE PTR [rcx],al
   140018769:	add    BYTE PTR [rax+rax*1],al
   14001876c:	call   0x142018773
   140018771:	add    BYTE PTR [rax],dl
   140018773:	adc    BYTE PTR [rax],dl
   140018775:	add    BYTE PTR [rcx],al
   140018777:	add    BYTE PTR [rax+rax*1],al
   14001877a:	sub    BYTE PTR [rcx],al
   14001877c:	add    BYTE PTR [rax],al
   14001877e:	add    eax,DWORD PTR [rax]
   140018780:	xor    BYTE PTR [rax],dh
   140018782:	add    BYTE PTR [rax],al
   140018784:	add    DWORD PTR [rax],eax
   140018786:	or     BYTE PTR [rax],al
   140018788:	test   al,0xe
   14001878a:	add    BYTE PTR [rax],al
   14001878c:	add    al,0x0
   14001878e:	and    BYTE PTR [rax],ah
   140018790:	add    BYTE PTR [rax],al
   140018792:	add    DWORD PTR [rax],eax
   140018794:	or     BYTE PTR [rax],al
   140018796:	test   al,0x8
   140018798:	add    BYTE PTR [rax],al
   14001879a:	add    eax,0x101000
   14001879f:	add    BYTE PTR [rcx],al
   1400187a1:	add    BYTE PTR [rax],cl
   1400187a3:	add    BYTE PTR [rax+0x5],ch
   1400187a6:	add    BYTE PTR [rax],al
   1400187a8:	(bad)  
   1400187a9:	add    BYTE PTR [rax],al
   1400187ab:	add    BYTE PTR [rax],al
   1400187ad:	add    BYTE PTR [rcx],al
   1400187af:	add    BYTE PTR [rax],ah
   1400187b1:	add    BYTE PTR [rbx-0x43],ah
   1400187b4:	add    BYTE PTR [rax],al
   1400187b6:	(bad)  
   1400187b7:	add    BYTE PTR [rax],dh
   1400187b9:	xor    BYTE PTR [rax],al
   1400187bb:	add    BYTE PTR [rcx],al
   1400187bd:	add    BYTE PTR [rax],ah
   1400187bf:	add    BYTE PTR [rax+0x8000025],ch
   1400187c5:	add    BYTE PTR [rax],ah
   1400187c7:	and    BYTE PTR [rax],al
   1400187c9:	add    BYTE PTR [rcx],al
   1400187cb:	add    BYTE PTR [rax],ah
   1400187cd:	add    BYTE PTR [rax+0x9000010],ch
   1400187d3:	add    BYTE PTR [rax],dl
   1400187d5:	adc    BYTE PTR [rax],al
   1400187d7:	add    BYTE PTR [rcx],al
   1400187d9:	add    BYTE PTR [rax],ah
   1400187db:	add    BYTE PTR [rax+0x4],ch
   1400187de:	add    BYTE PTR [rax],al
   1400187e0:	or     al,BYTE PTR [rax]
   1400187e2:	add    BYTE PTR [rax],al
   1400187e4:	add    BYTE PTR [rax],al
   1400187e6:	add    BYTE PTR [rax],al
   1400187e8:	rol    BYTE PTR [rbx],0x34
   1400187eb:	add    BYTE PTR [rax],al
   1400187ed:	add    BYTE PTR [rsi+0x0],dl
   1400187f0:	push   rbx
   1400187f1:	add    BYTE PTR [rdi+0x0],bl
   1400187f4:	push   rsi
   1400187f5:	add    BYTE PTR [rbp+0x0],al
   1400187f8:	push   rdx
   1400187f9:	add    BYTE PTR [rbx+0x0],dl
   1400187fc:	rex.WB add BYTE PTR [r15+0x0],cl
   140018800:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140018804:	rex.WB add BYTE PTR [r14+0x0],cl
   140018808:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001880c:	add    BYTE PTR [rax],al
   14001880e:	add    BYTE PTR [rax],al
   140018810:	mov    ebp,0xfeef04
   140018815:	add    BYTE PTR [rcx],al
   140018817:	add    BYTE PTR [rax],al
   140018819:	add    BYTE PTR [rdx],cl
   14001881b:	add    BYTE PTR [rax],al
   14001881d:	add    BYTE PTR [rax],bpl
   140018820:	add    BYTE PTR [rax],al
   140018822:	or     al,BYTE PTR [rax]
   140018824:	add    BYTE PTR [rax+0x0],al
   140018827:	sub    BYTE PTR [rdi],bh
   140018829:	add    BYTE PTR [rax],al
   14001882b:	add    BYTE PTR [rax],al
   14001882d:	add    BYTE PTR [rax],al
   14001882f:	add    BYTE PTR [rax+rax*1],al
   140018832:	add    al,0x0
   140018834:	add    DWORD PTR [rax],eax
	...
   140018842:	add    BYTE PTR [rax],al
   140018844:	(bad)  
   140018845:	add    eax,DWORD PTR [rax]
   140018847:	add    BYTE PTR [rcx],al
   140018849:	add    BYTE PTR [rbx+0x0],dl
   14001884c:	je     0x14001884e
   14001884e:	jb     0x140018850
   140018850:	imul   eax,DWORD PTR [rax],0x67006e
   140018856:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001885a:	ins    BYTE PTR es:[rdi],dx
   14001885b:	add    BYTE PTR [rbp+0x0],ah
   14001885e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140018862:	data16 add BYTE PTR [rdi+0x0],ch
   140018866:	add    BYTE PTR [rax],al
   140018868:	cli    
   140018869:	add    al,BYTE PTR [rax]
   14001886b:	add    BYTE PTR [rcx],al
   14001886d:	add    BYTE PTR [rax],dh
   14001886f:	add    BYTE PTR [rax+rax*1],dh
   140018872:	xor    BYTE PTR [rax],al
   140018874:	cmp    DWORD PTR [rax],eax
   140018876:	xor    BYTE PTR [rax],al
   140018878:	xor    al,0x0
   14001887a:	rex.X add BYTE PTR [rax],sil
   14001887d:	add    BYTE PTR [rax],al
   14001887f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140018883:	add    BYTE PTR [rcx],al
   140018885:	add    BYTE PTR [rbx+0x0],al
   140018888:	outs   dx,DWORD PTR ds:[rsi]
   140018889:	add    BYTE PTR [rbp+0x0],ch
   14001888c:	jo     0x14001888e
   14001888e:	(bad)  
   14001888f:	add    BYTE PTR [rsi+0x0],ch
   140018892:	jns    0x140018894
   140018894:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140018898:	ins    DWORD PTR es:[rdi],dx
   140018899:	add    BYTE PTR [rbp+0x0],ah
   14001889c:	add    BYTE PTR [rax],al
   14001889e:	add    BYTE PTR [rax],al
   1400188a0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400188a4:	movsxd eax,DWORD PTR [rax]
   1400188a6:	jb     0x1400188a8
   1400188a8:	outs   dx,DWORD PTR ds:[rsi]
   1400188a9:	add    BYTE PTR [rbx+0x0],dh
   1400188ac:	outs   dx,DWORD PTR ds:[rsi]
   1400188ad:	add    BYTE PTR [rsi+0x0],ah
   1400188b0:	je     0x1400188b2
   1400188b2:	and    BYTE PTR [rax],al
   1400188b4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400188b8:	jb     0x1400188ba
   1400188ba:	jo     0x1400188bc
   1400188bc:	outs   dx,DWORD PTR ds:[rsi]
   1400188bd:	add    BYTE PTR [rdx+0x0],dh
   1400188c0:	(bad)  
   1400188c1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400188c5:	add    BYTE PTR [rdi+0x0],ch
   1400188c8:	outs   dx,BYTE PTR ds:[rsi]
   1400188c9:	add    BYTE PTR [rax],al
   1400188cb:	add    BYTE PTR [rax+rax*1+0x1e],ah
   1400188cf:	add    BYTE PTR [rcx],al
   1400188d1:	add    BYTE PTR [rsi+0x0],al
   1400188d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400188da:	add    BYTE PTR [rbp+0x0],r12b
   1400188de:	jae    0x1400188e0
   1400188e0:	movsxd eax,DWORD PTR [rax]
   1400188e2:	jb     0x1400188e4
   1400188e4:	imul   eax,DWORD PTR [rax],0x740070
   1400188ea:	imul   eax,DWORD PTR [rax],0x6e006f
   1400188f0:	add    BYTE PTR [rax],al
   1400188f2:	add    BYTE PTR [rax],al
   1400188f4:	rex.WB add BYTE PTR [r13+0x0],bpl
   1400188f8:	(bad)  
   1400188f9:	add    BYTE PTR [rdi+0x0],ah
   1400188fc:	imul   eax,DWORD PTR [rax],0x67006e
   140018902:	and    BYTE PTR [rax],al
   140018904:	add    BYTE PTR [rbp+0x0],r12b
   140018908:	jbe    0x14001890a
   14001890a:	imul   eax,DWORD PTR [rax],0x650063
   140018910:	jae    0x140018912
   140018912:	and    BYTE PTR [rax],al
   140018914:	rex.XB add BYTE PTR [r15+0x0],bpl
   140018918:	outs   dx,BYTE PTR ds:[rsi]
   140018919:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001891d:	add    BYTE PTR [rdi+0x0],ch
   140018920:	ins    BYTE PTR es:[rdi],dx
   140018921:	add    BYTE PTR [rax],ah
   140018923:	add    BYTE PTR [rax+0x0],dl
   140018926:	(bad)  
   140018927:	add    BYTE PTR [rsi+0x0],ch
   14001892a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14001892f:	add    BYTE PTR [rsi+0x0],ah
   140018932:	and    eax,DWORD PTR [rax]
   140018934:	add    DWORD PTR [rax],eax
   140018936:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001893a:	ins    BYTE PTR es:[rdi],dx
   14001893b:	add    BYTE PTR [rbp+0x0],ah
   14001893e:	push   rsi
   14001893f:	add    BYTE PTR [rbp+0x0],ah
   140018942:	jb     0x140018944
   140018944:	jae    0x140018946
   140018946:	imul   eax,DWORD PTR [rax],0x6e006f
   14001894c:	add    BYTE PTR [rax],al
   14001894e:	add    BYTE PTR [rax],al
   140018950:	xor    DWORD PTR [rax],eax
   140018952:	xor    BYTE PTR [rax],al
   140018954:	add    BYTE PTR cs:[rax],dh
   140018957:	add    BYTE PTR [rsi],ch
   140018959:	add    BYTE PTR [rcx],dh
   14001895b:	add    BYTE PTR [rax],dh
   14001895d:	add    BYTE PTR [rdx],dh
   14001895f:	add    BYTE PTR [rax+rax*1],dh
   140018962:	xor    BYTE PTR [rax],al
   140018964:	add    BYTE PTR cs:[rcx],dh
   140018967:	add    BYTE PTR [rsi],dh
   140018969:	add    BYTE PTR [rbx],dh
   14001896b:	add    BYTE PTR [rax],bh
   14001896d:	add    BYTE PTR [rax+rax*1],dh
   140018970:	and    BYTE PTR [rax],al
   140018972:	sub    BYTE PTR [rax],al
   140018974:	je     0x140018976
   140018976:	push   0x2e003100
   14001897b:	add    BYTE PTR [rcx],dh
   14001897d:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701b983
   140018983:	add    BYTE PTR [rax],dh
   140018985:	add    BYTE PTR [rcx],bh
   140018987:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701ba8d
   14001898d:	add    BYTE PTR [rax],dh
   14001898f:	add    BYTE PTR [rax],dh
   140018991:	add    BYTE PTR [rcx],ch
   140018993:	add    BYTE PTR [rax],al
   140018995:	add    BYTE PTR [rax],al
   140018997:	add    BYTE PTR [rsi+0x0],al
   14001899a:	adc    eax,DWORD PTR [rax]
   14001899c:	add    DWORD PTR [rax],eax
   14001899e:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400189a2:	je     0x1400189a4
   1400189a4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400189a8:	outs   dx,BYTE PTR ds:[rsi]
   1400189a9:	add    BYTE PTR [rcx+0x0],ah
   1400189ac:	ins    BYTE PTR es:[rdi],dx
   1400189ad:	add    BYTE PTR [rsi+0x0],cl
   1400189b0:	(bad)  
   1400189b1:	add    BYTE PTR [rbp+0x0],ch
   1400189b4:	add    BYTE PTR gs:[rax],al
   1400189b7:	add    BYTE PTR [rcx+0x0],cl
   1400189ba:	ins    DWORD PTR es:[rdi],dx
   1400189bb:	add    BYTE PTR [rcx+0x0],ah
   1400189be:	add    BYTE PTR [ecx+0x0],ch
   1400189c2:	outs   dx,BYTE PTR ds:[rsi]
   1400189c3:	add    BYTE PTR [rdi+0x0],ah
   1400189c6:	add    BYTE PTR [rbp+0x0],r12b
   1400189ca:	jbe    0x1400189cc
   1400189cc:	imul   eax,DWORD PTR [rax],0x650063
   1400189d2:	jae    0x1400189d4
   1400189d4:	add    BYTE PTR cs:[rbx+0x0],ah
   1400189d8:	jo     0x1400189da
   1400189da:	ins    BYTE PTR es:[rdi],dx
   1400189db:	add    BYTE PTR [rax],al
   1400189dd:	add    BYTE PTR [rax],al
   1400189df:	add    BYTE PTR [rax+0x1002e00],al
   1400189e5:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400189e9:	add    BYTE PTR [rdi+0x0],ah
   1400189ec:	(bad)  
   1400189ed:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400189f1:	add    BYTE PTR [rdi+0x0],ch
   1400189f4:	jo     0x1400189f6
   1400189f6:	jns    0x1400189f8
   1400189f8:	jb     0x1400189fa
   1400189fa:	imul   eax,DWORD PTR [rax],0x680067
   140018a00:	je     0x140018a02
   140018a02:	add    BYTE PTR [rax],al
   140018a04:	test   eax,0x4d002000
   140018a09:	add    BYTE PTR [rcx+0x0],ch
   140018a0c:	movsxd eax,DWORD PTR [rax]
   140018a0e:	jb     0x140018a10
   140018a10:	outs   dx,DWORD PTR ds:[rsi]
   140018a11:	add    BYTE PTR [rbx+0x0],dh
   140018a14:	outs   dx,DWORD PTR ds:[rsi]
   140018a15:	add    BYTE PTR [rsi+0x0],ah
   140018a18:	je     0x140018a1a
   140018a1a:	and    BYTE PTR [rax],al
   140018a1c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140018a20:	jb     0x140018a22
   140018a22:	jo     0x140018a24
   140018a24:	outs   dx,DWORD PTR ds:[rsi]
   140018a25:	add    BYTE PTR [rdx+0x0],dh
   140018a28:	(bad)  
   140018a29:	add    BYTE PTR [rax+rax*1+0x69],dh
   140018a2d:	add    BYTE PTR [rdi+0x0],ch
   140018a30:	outs   dx,BYTE PTR ds:[rsi]
   140018a31:	add    BYTE PTR [rsi],ch
   140018a33:	add    BYTE PTR [rax],ah
   140018a35:	add    BYTE PTR [rcx+0x0],al
   140018a38:	ins    BYTE PTR es:[rdi],dx
   140018a39:	add    BYTE PTR [rax+rax*1+0x20],ch
   140018a3d:	add    BYTE PTR [rdx+0x0],dh
   140018a40:	imul   eax,DWORD PTR [rax],0x680067
   140018a46:	je     0x140018a48
   140018a48:	jae    0x140018a4a
   140018a4a:	and    BYTE PTR [rax],al
   140018a4c:	jb     0x140018a4e
   140018a4e:	add    BYTE PTR gs:[rbx+0x0],dh
   140018a52:	add    BYTE PTR gs:[rdx+0x0],dh
   140018a56:	jbe    0x140018a58
   140018a58:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140018a5d:	add    BYTE PTR [rax],al
   140018a5f:	add    BYTE PTR [rsi+0x0],cl
   140018a62:	adc    eax,DWORD PTR [rax]
   140018a64:	add    DWORD PTR [rax],eax
   140018a66:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140018a6a:	imul   eax,DWORD PTR [rax],0x690067
   140018a70:	outs   dx,BYTE PTR ds:[rsi]
   140018a71:	add    BYTE PTR [rcx+0x0],ah
   140018a74:	ins    BYTE PTR es:[rdi],dx
   140018a75:	add    BYTE PTR [rsi+0x0],al
   140018a78:	imul   eax,DWORD PTR [rax],0x65006c
   140018a7e:	outs   dx,BYTE PTR ds:[rsi]
   140018a7f:	add    BYTE PTR [rcx+0x0],ah
   140018a82:	ins    DWORD PTR es:[rdi],dx
   140018a83:	add    BYTE PTR [rbp+0x0],ah
   140018a86:	add    BYTE PTR [rax],al
   140018a88:	rex.WB add BYTE PTR [r13+0x0],bpl
   140018a8c:	(bad)  
   140018a8d:	add    BYTE PTR [rdi+0x0],ah
   140018a90:	imul   eax,DWORD PTR [rax],0x67006e
   140018a96:	add    BYTE PTR [rbp+0x0],r12b
   140018a9a:	jbe    0x140018a9c
   140018a9c:	imul   eax,DWORD PTR [rax],0x650063
   140018aa2:	jae    0x140018aa4
   140018aa4:	add    BYTE PTR cs:[rbx+0x0],ah
   140018aa8:	jo     0x140018aaa
   140018aaa:	ins    BYTE PTR es:[rdi],dx
   140018aab:	add    BYTE PTR [rax],al
   140018aad:	add    BYTE PTR [rax],al
   140018aaf:	add    BYTE PTR [rdx+0x0],ch
   140018ab2:	and    eax,0x50000100
   140018ab7:	add    BYTE PTR [rdx+0x0],dh
   140018aba:	outs   dx,DWORD PTR ds:[rsi]
   140018abb:	add    BYTE PTR [rax+rax*1+0x75],ah
   140018abf:	add    BYTE PTR [rbx+0x0],ah
   140018ac2:	je     0x140018ac4
   140018ac4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140018ac8:	ins    DWORD PTR es:[rdi],dx
   140018ac9:	add    BYTE PTR [rbp+0x0],ah
   140018acc:	add    BYTE PTR [rax],al
   140018ace:	add    BYTE PTR [rax],al
   140018ad0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140018ad4:	movsxd eax,DWORD PTR [rax]
   140018ad6:	jb     0x140018ad8
   140018ad8:	outs   dx,DWORD PTR ds:[rsi]
   140018ad9:	add    BYTE PTR [rbx+0x0],dh
   140018adc:	outs   dx,DWORD PTR ds:[rsi]
   140018add:	add    BYTE PTR [rsi+0x0],ah
   140018ae0:	je     0x140018ae2
   140018ae2:	scas   al,BYTE PTR es:[rdi]
   140018ae3:	add    BYTE PTR [rax],ah
   140018ae5:	add    BYTE PTR [rdi+0x0],dl
   140018ae8:	imul   eax,DWORD PTR [rax],0x64006e
   140018aee:	outs   dx,DWORD PTR ds:[rsi]
   140018aef:	add    BYTE PTR [rdi+0x0],dh
   140018af2:	jae    0x140018af4
   140018af4:	scas   al,BYTE PTR es:[rdi]
   140018af5:	add    BYTE PTR [rax],ah
   140018af7:	add    BYTE PTR [rdi+0x0],cl
   140018afa:	jo     0x140018afc
   140018afc:	add    BYTE PTR gs:[rdx+0x0],dh
   140018b00:	(bad)  
   140018b01:	add    BYTE PTR [rax+rax*1+0x69],dh
   140018b05:	add    BYTE PTR [rsi+0x0],ch
   140018b08:	add    BYTE PTR [eax],ah
   140018b0b:	add    BYTE PTR [rbx+0x0],dl
   140018b0e:	jns    0x140018b10
   140018b10:	jae    0x140018b12
   140018b12:	je     0x140018b14
   140018b14:	add    BYTE PTR gs:[rbp+0x0],ch
   140018b18:	add    BYTE PTR [rax],al
   140018b1a:	add    BYTE PTR [rax],al
   140018b1c:	rex.RX add BYTE PTR [rcx],r10b
   140018b1f:	add    BYTE PTR [rcx],al
   140018b21:	add    BYTE PTR [rax+0x0],dl
   140018b24:	jb     0x140018b26
   140018b26:	outs   dx,DWORD PTR ds:[rsi]
   140018b27:	add    BYTE PTR [rax+rax*1+0x75],ah
   140018b2b:	add    BYTE PTR [rbx+0x0],ah
   140018b2e:	je     0x140018b30
   140018b30:	push   rsi
   140018b31:	add    BYTE PTR [rbp+0x0],ah
   140018b34:	jb     0x140018b36
   140018b36:	jae    0x140018b38
   140018b38:	imul   eax,DWORD PTR [rax],0x6e006f
   140018b3e:	add    BYTE PTR [rax],al
   140018b40:	xor    DWORD PTR [rax],eax
   140018b42:	xor    BYTE PTR [rax],al
   140018b44:	add    BYTE PTR cs:[rax],dh
   140018b47:	add    BYTE PTR [rsi],ch
   140018b49:	add    BYTE PTR [rcx],dh
   140018b4b:	add    BYTE PTR [rax],dh
   140018b4d:	add    BYTE PTR [rdx],dh
   140018b4f:	add    BYTE PTR [rax+rax*1],dh
   140018b52:	xor    BYTE PTR [rax],al
   140018b54:	add    BYTE PTR cs:[rcx],dh
   140018b57:	add    BYTE PTR [rsi],dh
   140018b59:	add    BYTE PTR [rbx],dh
   140018b5b:	add    BYTE PTR [rax],bh
   140018b5d:	add    BYTE PTR [rax+rax*1],dh
   140018b60:	add    BYTE PTR [rax],al
   140018b62:	add    BYTE PTR [rax],al
   140018b64:	add    BYTE PTR [rax],r8b
   140018b67:	add    BYTE PTR [rcx],al
   140018b69:	add    BYTE PTR [rsi+0x0],dl
   140018b6c:	(bad)  
   140018b6d:	add    BYTE PTR [rdx+0x0],dh
   140018b70:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140018b74:	ins    BYTE PTR es:[rdi],dx
   140018b75:	add    BYTE PTR [rbp+0x0],ah
   140018b78:	rex.WB add BYTE PTR [r14+0x0],bpl
   140018b7c:	data16 add BYTE PTR [rdi+0x0],ch
   140018b80:	add    BYTE PTR [rax],al
   140018b82:	add    BYTE PTR [rax],al
   140018b84:	and    al,0x0
   140018b86:	add    al,0x0
   140018b88:	add    BYTE PTR [rax],al
   140018b8a:	push   rsp
   140018b8b:	add    BYTE PTR [rdx+0x0],dh
   140018b8e:	(bad)  
   140018b8f:	add    BYTE PTR [rsi+0x0],ch
   140018b92:	jae    0x140018b94
   140018b94:	ins    BYTE PTR es:[rdi],dx
   140018b95:	add    BYTE PTR [rcx+0x0],ah
   140018b98:	je     0x140018b9a
   140018b9a:	imul   eax,DWORD PTR [rax],0x6e006f
   140018ba0:	add    BYTE PTR [rax],al
   140018ba2:	add    BYTE PTR [rax],al
   140018ba4:	or     DWORD PTR [rax+rsi*4],eax
   140018ba7:	add    al,0xcd
   140018ba9:	dec    ch
   140018bab:	(bad)  
   140018bac:	rol    BYTE PTR [rax],1
   140018bae:	add    BYTE PTR [rax],al
   140018bb0:	add    BYTE PTR [rax],al
   140018bb2:	add    DWORD PTR [rax],eax
   140018bb4:	add    BYTE PTR [rax],al
   140018bb6:	add    BYTE PTR [rax],al
   140018bb8:	adc    DWORD PTR [rax],eax
   140018bba:	add    BYTE PTR [rax],al
   140018bbc:	add    BYTE PTR [rax],al
   140018bbe:	add    BYTE PTR [rax],al
   140018bc0:	add    al,BYTE PTR [rax]
   140018bc2:	add    BYTE PTR [rax],al
   140018bc4:	cwde   
   140018bc5:	sub    DWORD PTR [rsp+rbx*8],edx
   140018bc8:	jle    0x140018b98
   140018bca:	lods   eax,DWORD PTR ds:[rsi]
   140018bcb:	shr    BYTE PTR [rsi-0x7c],1
   140018bce:	mov    dl,0x1a
   140018bd0:	fdivr  QWORD PTR [rax]
   140018bd2:	cmp    DWORD PTR [r13+r13*8+0xf4faf5f],edx
   140018bda:	xor    DWORD PTR [rbx+0x78],0xffffffde
   140018bde:	pop    rcx
   140018bdf:	jb     0x140018c40
   140018be1:	sbb    QWORD PTR [rdi+0x0],rdi
	...
   140018bfc:	mov    BYTE PTR [rax],al
   140018bfe:	add    BYTE PTR [rax],al
   140018c00:	(bad)  
   140018c01:	add    BYTE PTR [rax],al
   140018c03:	add    BYTE PTR [rax+0x10000000],bl
   140018c09:	add    BYTE PTR [rax],al
   140018c0b:	add    BYTE PTR [rax+0xe000000],ch
   140018c11:	add    BYTE PTR [rax],al
   140018c13:	add    BYTE PTR [rax+0x8000000],bh
	...
   140018c21:	add    BYTE PTR [rax],al
   140018c23:	add    al,al
   140018c25:	add    BYTE PTR [rax],al
   140018c27:	add    BYTE PTR [rax+rax*1],cl
   140018c2a:	add    BYTE PTR [rax],al
   140018c2c:	add    BYTE PTR [rax],al
   140018c2e:	add    BYTE PTR [rax],al
   140018c30:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140018c34:	rex.WB add BYTE PTR [r8],al
	...
   140018c3f:	add    BYTE PTR [rbx],al
   140018c41:	add    BYTE PTR [rax],al
   140018c43:	add    BYTE PTR [rsi],cl
   140018c45:	add    BYTE PTR [rax],al
   140018c47:	add    BYTE PTR [rax],dl
   140018c49:	add    BYTE PTR [rax],al
   140018c4b:	add    BYTE PTR [rax],bl
   140018c4d:	add    BYTE PTR [rax],al
   140018c4f:	add    BYTE PTR [rbp+0x0],cl
   140018c52:	push   rbp
   140018c53:	add    BYTE PTR [rcx+0x0],cl
	...
   140018c5e:	add    BYTE PTR [rax],al
   140018c60:	(bad)  
   140018c61:	add    BYTE PTR [rax],al
   140018c63:	add    BYTE PTR [rax],dl
   140018c65:	add    BYTE PTR [rax],al
   140018c67:	add    BYTE PTR [rbp+0x0],ah
   140018c6a:	outs   dx,BYTE PTR ds:[rsi]
   140018c6b:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301e171
   140018c71:	add    BYTE PTR [rax],al
   140018c73:	add    BYTE PTR [rax],al
   140018c75:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140019000 <.reloc>:
   140019000:	add    BYTE PTR [rax],dh
   140019002:	add    BYTE PTR [rax],al
   140019004:	and    al,0x0
   140019006:	add    BYTE PTR [rax],al
   140019008:	lock movabs eax,ds:0xa228a220a208a1f8
   140019012:	(bad)  
   140019013:	movabs ds:0xa380a370a360a268,al
   14001901c:	call   0x148a690c5
   140019021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019022:	.byte 0x10
   140019023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
