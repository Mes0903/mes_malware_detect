
d0411ed6c42fc12c860c8e43c3d993c6b210849443ba27d3219c36a8d222169b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	mov    QWORD PTR [rsp+0x10],rbp
   14000100a:	mov    QWORD PTR [rsp+0x18],rsi
   14000100f:	push   rdi
   140001010:	sub    rsp,0x40
   140001014:	mov    ebp,r9d
   140001017:	mov    rdi,r8
   14000101a:	mov    rbx,rdx
   14000101d:	mov    rsi,rcx
   140001020:	cmp    r9d,0x6
   140001024:	jne    0x140001081
   140001026:	mov    rdx,r8
   140001029:	call   0x140005ec0
   14000102e:	test   eax,eax
   140001030:	jne    0x140001081
   140001032:	lea    rcx,[rsp+0x20]
   140001037:	call   QWORD PTR [rip+0xc963]        # 0x14000d9a0
   14000103d:	lea    edx,[rbp-0x5]
   140001040:	lea    rcx,[rsp+0x20]
   140001045:	call   QWORD PTR [rip+0xc95d]        # 0x14000d9a8
   14000104b:	lea    rdx,[rsp+0x30]
   140001050:	lea    rcx,[rsp+0x20]
   140001055:	call   QWORD PTR [rip+0xc955]        # 0x14000d9b0
   14000105b:	lea    rdx,[rsp+0x30]
   140001060:	mov    rcx,rbx
   140001063:	call   QWORD PTR [rip+0xc797]        # 0x14000d800
   140001069:	lea    rcx,[rsp+0x30]
   14000106e:	call   QWORD PTR [rip+0xc784]        # 0x14000d7f8
   140001074:	lea    rcx,[rsp+0x20]
   140001079:	call   QWORD PTR [rip+0xc939]        # 0x14000d9b8
   14000107f:	jmp    0x140001092
   140001081:	mov    r9d,ebp
   140001084:	mov    r8,rdi
   140001087:	mov    rdx,rbx
   14000108a:	mov    rcx,rsi
   14000108d:	call   0x140005df0
   140001092:	mov    rbp,QWORD PTR [rsp+0x58]
   140001097:	mov    rsi,QWORD PTR [rsp+0x60]
   14000109c:	mov    rax,rbx
   14000109f:	mov    rbx,QWORD PTR [rsp+0x50]
   1400010a4:	add    rsp,0x40
   1400010a8:	pop    rdi
   1400010a9:	ret    
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400010b5:	push   rdi
   1400010b6:	sub    rsp,0x30
   1400010ba:	mov    rbx,rcx
   1400010bd:	mov    rcx,QWORD PTR [rcx+0x80]
   1400010c4:	mov    rdi,rdx
   1400010c7:	lea    rdx,[rsp+0x50]
   1400010cc:	call   QWORD PTR [rip+0xd676]        # 0x14000e748
   1400010d2:	lea    rcx,[rsp+0x20]
   1400010d7:	mov    rdx,rax
   1400010da:	call   QWORD PTR [rip+0xc5d8]        # 0x14000d6b8
   1400010e0:	lea    rdx,[rip+0xd8d9]        # 0x14000e9c0
   1400010e7:	lea    rcx,[rsp+0x40]
   1400010ec:	mov    r8d,0x10
   1400010f2:	call   QWORD PTR [rip+0xc5e0]        # 0x14000d6d8
   1400010f8:	lea    r8,[rsp+0x20]
   1400010fd:	lea    rdx,[rsp+0x40]
   140001102:	mov    rcx,rdi
   140001105:	call   QWORD PTR [rip+0xc5b5]        # 0x14000d6c0
   14000110b:	lea    rcx,[rsp+0x40]
   140001110:	call   QWORD PTR [rip+0xc5b2]        # 0x14000d6c8
   140001116:	lea    rcx,[rsp+0x20]
   14000111b:	call   QWORD PTR [rip+0xc6d7]        # 0x14000d7f8
   140001121:	lea    rcx,[rsp+0x50]
   140001126:	call   QWORD PTR [rip+0xc5a4]        # 0x14000d6d0
   14000112c:	mov    rcx,QWORD PTR [rbx+0x88]
   140001133:	lea    rdx,[rsp+0x50]
   140001138:	call   QWORD PTR [rip+0xd60a]        # 0x14000e748
   14000113e:	lea    rcx,[rsp+0x20]
   140001143:	mov    rdx,rax
   140001146:	call   QWORD PTR [rip+0xc56c]        # 0x14000d6b8
   14000114c:	lea    rdx,[rip+0xd885]        # 0x14000e9d8
   140001153:	lea    rcx,[rsp+0x40]
   140001158:	mov    r8d,0xd
   14000115e:	call   QWORD PTR [rip+0xc574]        # 0x14000d6d8
   140001164:	lea    r8,[rsp+0x20]
   140001169:	lea    rdx,[rsp+0x40]
   14000116e:	mov    rcx,rdi
   140001171:	call   QWORD PTR [rip+0xc549]        # 0x14000d6c0
   140001177:	lea    rcx,[rsp+0x40]
   14000117c:	call   QWORD PTR [rip+0xc546]        # 0x14000d6c8
   140001182:	lea    rcx,[rsp+0x20]
   140001187:	call   QWORD PTR [rip+0xc66b]        # 0x14000d7f8
   14000118d:	lea    rcx,[rsp+0x50]
   140001192:	call   QWORD PTR [rip+0xc538]        # 0x14000d6d0
   140001198:	mov    rbx,QWORD PTR [rsp+0x48]
   14000119d:	add    rsp,0x30
   1400011a1:	pop    rdi
   1400011a2:	ret    
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400011b5:	push   rdi
   1400011b6:	sub    rsp,0x40
   1400011ba:	mov    rbx,rdx
   1400011bd:	mov    rdi,rcx
   1400011c0:	lea    rdx,[rip+0xd7f9]        # 0x14000e9c0
   1400011c7:	lea    rcx,[rsp+0x50]
   1400011cc:	mov    r8d,0x10
   1400011d2:	call   QWORD PTR [rip+0xc500]        # 0x14000d6d8
   1400011d8:	lea    rcx,[rsp+0x30]
   1400011dd:	call   QWORD PTR [rip+0xc625]        # 0x14000d808
   1400011e3:	lea    r8,[rsp+0x50]
   1400011e8:	lea    rdx,[rsp+0x20]
   1400011ed:	mov    r9,rax
   1400011f0:	mov    rcx,rbx
   1400011f3:	call   QWORD PTR [rip+0xc4af]        # 0x14000d6a8
   1400011f9:	lea    rdx,[rsp+0x60]
   1400011fe:	mov    rcx,rax
   140001201:	call   QWORD PTR [rip+0xc4a9]        # 0x14000d6b0
   140001207:	mov    rcx,QWORD PTR [rdi+0x80]
   14000120e:	mov    rdx,rax
   140001211:	call   QWORD PTR [rip+0xd521]        # 0x14000e738
   140001217:	lea    rcx,[rsp+0x60]
   14000121c:	call   QWORD PTR [rip+0xc4ae]        # 0x14000d6d0
   140001222:	lea    rcx,[rsp+0x20]
   140001227:	call   QWORD PTR [rip+0xc5cb]        # 0x14000d7f8
   14000122d:	lea    rcx,[rsp+0x50]
   140001232:	call   QWORD PTR [rip+0xc490]        # 0x14000d6c8
   140001238:	lea    rcx,[rsp+0x30]
   14000123d:	call   QWORD PTR [rip+0xc5b5]        # 0x14000d7f8
   140001243:	lea    rdx,[rip+0xd78e]        # 0x14000e9d8
   14000124a:	lea    rcx,[rsp+0x50]
   14000124f:	mov    r8d,0xd
   140001255:	call   QWORD PTR [rip+0xc47d]        # 0x14000d6d8
   14000125b:	lea    rcx,[rsp+0x20]
   140001260:	call   QWORD PTR [rip+0xc5a2]        # 0x14000d808
   140001266:	lea    r8,[rsp+0x50]
   14000126b:	lea    rdx,[rsp+0x30]
   140001270:	mov    r9,rax
   140001273:	mov    rcx,rbx
   140001276:	call   QWORD PTR [rip+0xc42c]        # 0x14000d6a8
   14000127c:	lea    rdx,[rsp+0x60]
   140001281:	mov    rcx,rax
   140001284:	call   QWORD PTR [rip+0xc426]        # 0x14000d6b0
   14000128a:	mov    rcx,QWORD PTR [rdi+0x88]
   140001291:	mov    rdx,rax
   140001294:	call   QWORD PTR [rip+0xd49e]        # 0x14000e738
   14000129a:	lea    rcx,[rsp+0x60]
   14000129f:	call   QWORD PTR [rip+0xc42b]        # 0x14000d6d0
   1400012a5:	lea    rcx,[rsp+0x30]
   1400012aa:	call   QWORD PTR [rip+0xc548]        # 0x14000d7f8
   1400012b0:	lea    rcx,[rsp+0x50]
   1400012b5:	call   QWORD PTR [rip+0xc40d]        # 0x14000d6c8
   1400012bb:	lea    rcx,[rsp+0x20]
   1400012c0:	call   QWORD PTR [rip+0xc532]        # 0x14000d7f8
   1400012c6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400012cb:	add    rsp,0x40
   1400012cf:	pop    rdi
   1400012d0:	ret    
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	rex push rbx
   1400012e2:	push   rsi
   1400012e3:	push   rdi
   1400012e4:	sub    rsp,0x50
   1400012e8:	mov    rsi,rcx
   1400012eb:	or     rcx,0xffffffffffffffff
   1400012ef:	mov    rbx,rdx
   1400012f2:	lea    rdx,[rip+0xd713]        # 0x14000ea0c
   1400012f9:	xor    eax,eax
   1400012fb:	mov    rdi,rdx
   1400012fe:	mov    QWORD PTR [rsp+0x38],rdx
   140001303:	lea    rdx,[rsp+0x40]
   140001308:	repnz scas al,BYTE PTR es:[rdi]
   14000130a:	not    rcx
   14000130d:	dec    rcx
   140001310:	mov    DWORD PTR [rsp+0x30],ecx
   140001314:	lea    rcx,[rsp+0x20]
   140001319:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000131e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140001324:	call   QWORD PTR [rip+0xc366]        # 0x14000d690
   14000132a:	or     rcx,0xffffffffffffffff
   14000132e:	lea    rdx,[rip+0xd6b3]        # 0x14000e9e8
   140001335:	xor    eax,eax
   140001337:	mov    QWORD PTR [rsp+0x48],rdx
   14000133c:	mov    rdi,rdx
   14000133f:	lea    rdx,[rsp+0x40]
   140001344:	repnz scas al,BYTE PTR es:[rdi]
   140001346:	not    rcx
   140001349:	dec    rcx
   14000134c:	mov    DWORD PTR [rsp+0x40],ecx
   140001350:	lea    rcx,[rsp+0x88]
   140001358:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000135d:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140001363:	call   QWORD PTR [rip+0xc327]        # 0x14000d690
   140001369:	lea    rdx,[rsp+0x30]
   14000136e:	mov    rcx,rbx
   140001371:	call   QWORD PTR [rip+0xc321]        # 0x14000d698
   140001377:	lea    rdx,[rsp+0x88]
   14000137f:	lea    rcx,[rsp+0x80]
   140001387:	mov    rdi,rax
   14000138a:	call   QWORD PTR [rip+0xc490]        # 0x14000d820
   140001390:	lea    rcx,[rsp+0x80]
   140001398:	mov    rdx,rdi
   14000139b:	call   QWORD PTR [rip+0xc487]        # 0x14000d828
   1400013a1:	lea    rdx,[rsp+0x80]
   1400013a9:	lea    rcx,[rsp+0x70]
   1400013ae:	call   QWORD PTR [rip+0xc46c]        # 0x14000d820
   1400013b4:	lea    rdx,[rsp+0x20]
   1400013b9:	lea    rcx,[rsp+0x70]
   1400013be:	call   QWORD PTR [rip+0xc464]        # 0x14000d828
   1400013c4:	mov    rcx,QWORD PTR [rsi+0x78]
   1400013c8:	lea    rdx,[rsp+0x70]
   1400013cd:	call   QWORD PTR [rip+0xd35d]        # 0x14000e730
   1400013d3:	lea    rcx,[rsp+0x70]
   1400013d8:	call   QWORD PTR [rip+0xc2ea]        # 0x14000d6c8
   1400013de:	lea    rcx,[rsp+0x80]
   1400013e6:	call   QWORD PTR [rip+0xc2dc]        # 0x14000d6c8
   1400013ec:	lea    rcx,[rsp+0x30]
   1400013f1:	call   QWORD PTR [rip+0xc2d1]        # 0x14000d6c8
   1400013f7:	lea    rcx,[rsp+0x88]
   1400013ff:	call   QWORD PTR [rip+0xc2c3]        # 0x14000d6c8
   140001405:	lea    rcx,[rsp+0x20]
   14000140a:	call   QWORD PTR [rip+0xc2b8]        # 0x14000d6c8
   140001410:	add    rsp,0x50
   140001414:	pop    rdi
   140001415:	pop    rsi
   140001416:	pop    rbx
   140001417:	ret    
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	rex push rbx
   140001422:	push   r12
   140001424:	push   r13
   140001426:	push   r14
   140001428:	push   r15
   14000142a:	sub    rsp,0x90
   140001431:	mov    r13,rcx
   140001434:	lea    rcx,[rsp+0xc0]
   14000143c:	mov    r12,rdx
   14000143f:	lea    r14,[rdx+0x18]
   140001443:	call   QWORD PTR [rip+0xc23f]        # 0x14000d688
   140001449:	lea    rcx,[r13+0x30]
   14000144d:	mov    r8,rax
   140001450:	lea    rax,[rip+0xd611]        # 0x14000ea68
   140001457:	lea    r9,[r12+0x10]
   14000145c:	mov    QWORD PTR [rsp+0x30],rax
   140001461:	mov    rdx,r12
   140001464:	mov    QWORD PTR [rsp+0x28],r13
   140001469:	mov    QWORD PTR [rsp+0x20],r14
   14000146e:	call   QWORD PTR [rip+0xc4f4]        # 0x14000d968
   140001474:	lea    rcx,[rsp+0xc0]
   14000147c:	test   al,al
   14000147e:	sete   bl
   140001481:	call   QWORD PTR [rip+0xc241]        # 0x14000d6c8
   140001487:	test   bl,bl
   140001489:	je     0x1400015df
   14000148f:	mov    QWORD PTR [rsp+0x88],rbp
   140001497:	lea    r8,[rip+0xd582]        # 0x14000ea20
   14000149e:	lea    rdx,[rsp+0x40]
   1400014a3:	lea    rcx,[rip+0x1f126]        # 0x1400205d0
   1400014aa:	xor    r9d,r9d
   1400014ad:	mov    QWORD PTR [rsp+0x80],rsi
   1400014b5:	mov    QWORD PTR [rsp+0x78],rdi
   1400014ba:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400014c2:	call   QWORD PTR [rip+0xc348]        # 0x14000d810
   1400014c8:	lea    rcx,[rsp+0xc0]
   1400014d0:	mov    dl,0x20
   1400014d2:	call   QWORD PTR [rip+0xc1c8]        # 0x14000d6a0
   1400014d8:	lea    rcx,[rsp+0xc8]
   1400014e0:	mov    dl,0x20
   1400014e2:	mov    rbp,rax
   1400014e5:	call   QWORD PTR [rip+0xc1b5]        # 0x14000d6a0
   1400014eb:	lea    rcx,[rsp+0xd0]
   1400014f3:	mov    dl,0x20
   1400014f5:	mov    rsi,rax
   1400014f8:	call   QWORD PTR [rip+0xc1a2]        # 0x14000d6a0
   1400014fe:	lea    rcx,[rsp+0xd8]
   140001506:	mov    dl,0x20
   140001508:	mov    rdi,rax
   14000150b:	call   QWORD PTR [rip+0xc18f]        # 0x14000d6a0
   140001511:	lea    rdx,[rsp+0x60]
   140001516:	movzx  ecx,WORD PTR [rax]
   140001519:	xor    r9d,r9d
   14000151c:	mov    r8,r12
   14000151f:	mov    WORD PTR [rsp+0x20],cx
   140001524:	lea    rcx,[rsp+0x40]
   140001529:	call   QWORD PTR [rip+0xc151]        # 0x14000d680
   14000152f:	lea    r8,[r12+0x8]
   140001534:	lea    rdx,[rsp+0x58]
   140001539:	mov    rcx,rax
   14000153c:	movzx  eax,WORD PTR [rdi]
   14000153f:	xor    r9d,r9d
   140001542:	mov    WORD PTR [rsp+0x20],ax
   140001547:	call   QWORD PTR [rip+0xc133]        # 0x14000d680
   14000154d:	lea    r8,[r12+0x10]
   140001552:	mov    rcx,rax
   140001555:	movzx  eax,WORD PTR [rsi]
   140001558:	lea    rdx,[rsp+0x50]
   14000155d:	xor    r9d,r9d
   140001560:	mov    WORD PTR [rsp+0x20],ax
   140001565:	call   QWORD PTR [rip+0xc115]        # 0x14000d680
   14000156b:	lea    rdx,[rsp+0x48]
   140001570:	xor    r9d,r9d
   140001573:	mov    rcx,rax
   140001576:	movzx  eax,WORD PTR [rbp+0x0]
   14000157a:	mov    r8,r14
   14000157d:	mov    WORD PTR [rsp+0x20],ax
   140001582:	call   QWORD PTR [rip+0xc0f8]        # 0x14000d680
   140001588:	mov    rcx,r13
   14000158b:	mov    rdx,rax
   14000158e:	call   0x1400012e0
   140001593:	lea    rcx,[rsp+0x48]
   140001598:	call   QWORD PTR [rip+0xc12a]        # 0x14000d6c8
   14000159e:	lea    rcx,[rsp+0x50]
   1400015a3:	call   QWORD PTR [rip+0xc11f]        # 0x14000d6c8
   1400015a9:	lea    rcx,[rsp+0x58]
   1400015ae:	call   QWORD PTR [rip+0xc114]        # 0x14000d6c8
   1400015b4:	lea    rcx,[rsp+0x60]
   1400015b9:	call   QWORD PTR [rip+0xc109]        # 0x14000d6c8
   1400015bf:	lea    rcx,[rsp+0x40]
   1400015c4:	call   QWORD PTR [rip+0xc0fe]        # 0x14000d6c8
   1400015ca:	mov    rdi,QWORD PTR [rsp+0x78]
   1400015cf:	mov    rsi,QWORD PTR [rsp+0x80]
   1400015d7:	mov    rbp,QWORD PTR [rsp+0x88]
   1400015df:	add    rsp,0x90
   1400015e6:	pop    r15
   1400015e8:	pop    r14
   1400015ea:	pop    r13
   1400015ec:	pop    r12
   1400015ee:	pop    rbx
   1400015ef:	ret    
   1400015f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400015f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400015fa:	push   rdi
   1400015fb:	sub    rsp,0x40
   1400015ff:	mov    rdi,rcx
   140001602:	mov    rcx,QWORD PTR [rcx+0x40]
   140001606:	mov    rbx,rdx
   140001609:	call   QWORD PTR [rip+0xd111]        # 0x14000e720
   14000160f:	test   rax,rax
   140001612:	je     0x140001623
   140001614:	mov    r8,QWORD PTR [rax]
   140001617:	mov    edx,0x1
   14000161c:	mov    rcx,rax
   14000161f:	call   QWORD PTR [r8+0x18]
   140001623:	lea    rcx,[rdi+0x38]
   140001627:	call   QWORD PTR [rip+0xc023]        # 0x14000d650
   14000162d:	cmp    DWORD PTR [rbx],0x0
   140001630:	jl     0x14000170e
   140001636:	cmp    DWORD PTR [rbx+0x4],0x0
   14000163a:	jl     0x14000170e
   140001640:	cmp    QWORD PTR [rbx+0x10],0x0
   140001645:	je     0x14000170e
   14000164b:	lea    rdx,[rsp+0x30]
   140001650:	xor    r8d,r8d
   140001653:	mov    rcx,rbx
   140001656:	call   QWORD PTR [rip+0xbffc]        # 0x14000d658
   14000165c:	lea    rdx,[rsp+0x50]
   140001661:	mov    rcx,rax
   140001664:	call   QWORD PTR [rip+0xbff6]        # 0x14000d660
   14000166a:	lea    rcx,[rdi+0x38]
   14000166e:	mov    rdx,rax
   140001671:	call   QWORD PTR [rip+0xbff1]        # 0x14000d668
   140001677:	lea    rcx,[rsp+0x50]
   14000167c:	call   QWORD PTR [rip+0xc046]        # 0x14000d6c8
   140001682:	lea    rcx,[rsp+0x30]
   140001687:	call   QWORD PTR [rip+0xc16b]        # 0x14000d7f8
   14000168d:	mov    ecx,0x28
   140001692:	call   0x14000b8c2
   140001697:	mov    rbx,rax
   14000169a:	test   rax,rax
   14000169d:	je     0x1400016bb
   14000169f:	lea    r8,[rdi+0x30]
   1400016a3:	lea    rdx,[rdi+0x38]
   1400016a7:	mov    rcx,rax
   1400016aa:	call   0x140006590
   1400016af:	lea    r11,[rip+0xd1a2]        # 0x14000e858
   1400016b6:	mov    QWORD PTR [rbx],r11
   1400016b9:	jmp    0x1400016bd
   1400016bb:	xor    ebx,ebx
   1400016bd:	mov    rcx,QWORD PTR [rdi+0x40]
   1400016c1:	mov    rdx,rbx
   1400016c4:	mov    rax,QWORD PTR [rcx]
   1400016c7:	call   QWORD PTR [rax+0x188]
   1400016cd:	mov    rcx,QWORD PTR [rdi+0x40]
   1400016d1:	call   QWORD PTR [rip+0xd049]        # 0x14000e720
   1400016d7:	lea    r8,[rip+0xd3c2]        # 0x14000eaa0
   1400016de:	lea    rcx,[rsp+0x50]
   1400016e3:	mov    rdx,rax
   1400016e6:	lea    rax,[rip+0xd39b]        # 0x14000ea88
   1400016ed:	mov    r9,rdi
   1400016f0:	mov    DWORD PTR [rsp+0x28],0x0
   1400016f8:	mov    QWORD PTR [rsp+0x20],rax
   1400016fd:	call   QWORD PTR [rip+0xbf6d]        # 0x14000d670
   140001703:	lea    rcx,[rsp+0x50]
   140001708:	call   QWORD PTR [rip+0xbf6a]        # 0x14000d678
   14000170e:	mov    rbx,QWORD PTR [rsp+0x58]
   140001713:	mov    rsi,QWORD PTR [rsp+0x60]
   140001718:	add    rsp,0x40
   14000171c:	pop    rdi
   14000171d:	ret    
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    QWORD PTR [rsp+0x10],rbx
   140001725:	mov    QWORD PTR [rsp+0x18],rsi
   14000172a:	push   rdi
   14000172b:	sub    rsp,0x80
   140001732:	mov    rsi,rdx
   140001735:	mov    rdi,rcx
   140001738:	lea    rdx,[rsp+0x90]
   140001740:	add    rcx,0x30
   140001744:	call   QWORD PTR [rip+0xc216]        # 0x14000d960
   14000174a:	mov    rcx,rsi
   14000174d:	mov    rdx,rax
   140001750:	call   QWORD PTR [rip+0xbeea]        # 0x14000d640
   140001756:	lea    rcx,[rsp+0x90]
   14000175e:	movzx  ebx,al
   140001761:	call   QWORD PTR [rip+0xbf61]        # 0x14000d6c8
   140001767:	test   bl,bl
   140001769:	jne    0x140001810
   14000176f:	mov    rcx,QWORD PTR [rdi+0x58]
   140001773:	xor    ebx,ebx
   140001775:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14000177d:	mov    DWORD PTR [rsp+0x34],0xffffffff
   140001785:	mov    QWORD PTR [rsp+0x38],rbx
   14000178a:	mov    QWORD PTR [rsp+0x40],rbx
   14000178f:	mov    rax,QWORD PTR [rcx]
   140001792:	lea    r9,[rsp+0x30]
   140001797:	lea    r8d,[rbx+0x1]
   14000179b:	xor    edx,edx
   14000179d:	call   QWORD PTR [rax+0xe8]
   1400017a3:	lea    rcx,[rsp+0x30]
   1400017a8:	mov    rdx,rsi
   1400017ab:	call   QWORD PTR [rip+0xbe97]        # 0x14000d648
   1400017b1:	mov    rax,QWORD PTR [rdi+0x58]
   1400017b5:	lea    rdx,[rsp+0x48]
   1400017ba:	mov    DWORD PTR [rsp+0x48],0xffffffff
   1400017c2:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   1400017ca:	mov    QWORD PTR [rsp+0x50],rbx
   1400017cf:	mov    QWORD PTR [rsp+0x58],rbx
   1400017d4:	mov    rbx,QWORD PTR [rax]
   1400017d7:	mov    QWORD PTR [rsp+0x20],rdx
   1400017dc:	lea    rdx,[rsp+0x60]
   1400017e1:	mov    rcx,rax
   1400017e4:	xor    r9d,r9d
   1400017e7:	xor    r8d,r8d
   1400017ea:	call   QWORD PTR [rbx+0x58]
   1400017ed:	mov    rcx,QWORD PTR [rdi+0x58]
   1400017f1:	lea    r8,[rsp+0x30]
   1400017f6:	mov    rdx,rax
   1400017f9:	mov    r9d,0x2
   1400017ff:	call   QWORD PTR [rbx+0x90]
   140001805:	lea    rcx,[rsp+0x30]
   14000180a:	call   QWORD PTR [rip+0xbfe8]        # 0x14000d7f8
   140001810:	lea    r11,[rsp+0x80]
   140001818:	mov    rbx,QWORD PTR [r11+0x18]
   14000181c:	mov    rsi,QWORD PTR [r11+0x20]
   140001820:	mov    rsp,r11
   140001823:	pop    rdi
   140001824:	ret    
   140001825:	int3   
   140001826:	int3   
   140001827:	int3   
   140001828:	int3   
   140001829:	int3   
   14000182a:	int3   
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	rex push rbx
   140001832:	sub    rsp,0x20
   140001836:	mov    rbx,rcx
   140001839:	test   rdx,rdx
   14000183c:	je     0x140001852
   14000183e:	test   rcx,rcx
   140001841:	je     0x140001866
   140001843:	call   QWORD PTR [rip+0xbfb7]        # 0x14000d800
   140001849:	mov    rax,rbx
   14000184c:	add    rsp,0x20
   140001850:	pop    rbx
   140001851:	ret    
   140001852:	test   rcx,rcx
   140001855:	je     0x140001866
   140001857:	call   QWORD PTR [rip+0xbfab]        # 0x14000d808
   14000185d:	mov    rax,rbx
   140001860:	add    rsp,0x20
   140001864:	pop    rbx
   140001865:	ret    
   140001866:	xor    ebx,ebx
   140001868:	mov    rax,rbx
   14000186b:	add    rsp,0x20
   14000186f:	pop    rbx
   140001870:	ret    
   140001871:	int3   
   140001872:	int3   
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    QWORD PTR [rsp+0x8],rbx
   140001885:	push   rdi
   140001886:	sub    rsp,0x20
   14000188a:	mov    ebx,edx
   14000188c:	mov    rdi,rcx
   14000188f:	call   0x140008090
   140001894:	test   bl,0x1
   140001897:	je     0x1400018a1
   140001899:	mov    rcx,rdi
   14000189c:	call   0x14000b8c8
   1400018a1:	mov    rax,rdi
   1400018a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018a9:	add    rsp,0x20
   1400018ad:	pop    rdi
   1400018ae:	ret    
   1400018af:	int3   
   1400018b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400018b5:	push   rbp
   1400018b6:	push   rsi
   1400018b7:	push   rdi
   1400018b8:	push   r12
   1400018ba:	push   r13
   1400018bc:	push   r14
   1400018be:	push   r15
   1400018c0:	sub    rsp,0x130
   1400018c7:	mov    rax,r8
   1400018ca:	xor    r13d,r13d
   1400018cd:	mov    rdi,rdx
   1400018d0:	mov    r8d,r13d
   1400018d3:	mov    rdx,rax
   1400018d6:	mov    rbx,rcx
   1400018d9:	mov    esi,r13d
   1400018dc:	mov    DWORD PTR [rsp+0x170],r13d
   1400018e4:	call   QWORD PTR [rip+0xcd7e]        # 0x14000e668
   1400018ea:	lea    r11,[rip+0xe367]        # 0x14000fc58
   1400018f1:	lea    rax,[rip+0xe320]        # 0x14000fc18
   1400018f8:	lea    rcx,[rbx+0x30]
   1400018fc:	mov    rdx,rdi
   1400018ff:	mov    QWORD PTR [rbx],r11
   140001902:	mov    QWORD PTR [rbx+0x10],rax
   140001906:	call   QWORD PTR [rip+0xc024]        # 0x14000d930
   14000190c:	lea    rcx,[rbx+0x38]
   140001910:	call   QWORD PTR [rip+0xbd72]        # 0x14000d688
   140001916:	or     rcx,0xffffffffffffffff
   14000191a:	lea    rdx,[rip+0xe2cf]        # 0x14000fbf0
   140001921:	mov    rdi,rdx
   140001924:	mov    QWORD PTR [rsp+0x78],rdx
   140001929:	xor    eax,eax
   14000192b:	repnz scas al,BYTE PTR es:[rdi]
   14000192d:	lea    rdx,[rsp+0x80]
   140001935:	not    rcx
   140001938:	dec    rcx
   14000193b:	mov    DWORD PTR [rsp+0x70],ecx
   14000193f:	lea    rcx,[rsp+0x170]
   140001947:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000194c:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   140001955:	call   QWORD PTR [rip+0xbd35]        # 0x14000d690
   14000195b:	lea    r8d,[r13+0x1]
   14000195f:	lea    rdx,[rsp+0x170]
   140001967:	lea    rcx,[rbx+0x90]
   14000196e:	xor    r9d,r9d
   140001971:	call   QWORD PTR [rip+0xbc91]        # 0x14000d608
   140001977:	lea    rcx,[rsp+0x170]
   14000197f:	call   QWORD PTR [rip+0xbd43]        # 0x14000d6c8
   140001985:	lea    ecx,[r13+0x30]
   140001989:	call   0x14000b8c2
   14000198e:	mov    rdi,rax
   140001991:	test   rax,rax
   140001994:	je     0x1400019b9
   140001996:	mov    rdx,rbx
   140001999:	mov    rcx,rax
   14000199c:	call   QWORD PTR [rip+0xccce]        # 0x14000e670
   1400019a2:	lea    r11,[rip+0xe0df]        # 0x14000fa88
   1400019a9:	lea    rax,[rip+0xe098]        # 0x14000fa48
   1400019b0:	mov    QWORD PTR [rdi],r11
   1400019b3:	mov    QWORD PTR [rdi+0x10],rax
   1400019b7:	jmp    0x1400019bc
   1400019b9:	mov    rdi,r13
   1400019bc:	lea    r8,[rip+0xe06d]        # 0x14000fa30
   1400019c3:	lea    rdx,[rsp+0x170]
   1400019cb:	lea    rcx,[rip+0x1ebfe]        # 0x1400205d0
   1400019d2:	xor    r9d,r9d
   1400019d5:	mov    QWORD PTR [rbx+0x68],rdi
   1400019d9:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400019e1:	call   QWORD PTR [rip+0xbe29]        # 0x14000d810
   1400019e7:	mov    rcx,QWORD PTR [rbx+0x68]
   1400019eb:	lea    rdx,[rsp+0x170]
   1400019f3:	call   QWORD PTR [rip+0xcc7f]        # 0x14000e678
   1400019f9:	lea    rcx,[rsp+0x170]
   140001a01:	call   QWORD PTR [rip+0xbcc1]        # 0x14000d6c8
   140001a07:	mov    ecx,0x18
   140001a0c:	call   0x14000b8c2
   140001a11:	mov    rdi,rax
   140001a14:	test   rax,rax
   140001a17:	je     0x140001a31
   140001a19:	mov    rdx,rbx
   140001a1c:	mov    rcx,rax
   140001a1f:	call   QWORD PTR [rip+0xbbeb]        # 0x14000d610
   140001a25:	lea    r11,[rip+0xde9c]        # 0x14000f8c8
   140001a2c:	mov    QWORD PTR [rdi],r11
   140001a2f:	jmp    0x140001a34
   140001a31:	mov    rdi,r13
   140001a34:	mov    ecx,0x10
   140001a39:	mov    QWORD PTR [rbx+0x58],rdi
   140001a3d:	call   0x14000b8c2
   140001a42:	test   rax,rax
   140001a45:	je     0x140001a57
   140001a47:	mov    rdx,rbx
   140001a4a:	mov    rcx,rax
   140001a4d:	call   0x1400087a0
   140001a52:	mov    rcx,rax
   140001a55:	jmp    0x140001a5a
   140001a57:	mov    rcx,r13
   140001a5a:	mov    rdx,QWORD PTR [rbx+0x58]
   140001a5e:	mov    QWORD PTR [rbx+0x60],rcx
   140001a62:	mov    rax,QWORD PTR [rcx]
   140001a65:	call   QWORD PTR [rax+0x168]
   140001a6b:	mov    rcx,QWORD PTR [rbx+0x60]
   140001a6f:	xor    edx,edx
   140001a71:	call   QWORD PTR [rip+0xbba1]        # 0x14000d618
   140001a77:	mov    ecx,0x30
   140001a7c:	call   0x14000b8c2
   140001a81:	mov    rdi,rax
   140001a84:	test   rax,rax
   140001a87:	je     0x140001aac
   140001a89:	mov    rdx,rbx
   140001a8c:	mov    rcx,rax
   140001a8f:	call   QWORD PTR [rip+0xcbeb]        # 0x14000e680
   140001a95:	lea    r11,[rip+0xdb6c]        # 0x14000f608
   140001a9c:	lea    rax,[rip+0xdb25]        # 0x14000f5c8
   140001aa3:	mov    QWORD PTR [rdi],r11
   140001aa6:	mov    QWORD PTR [rdi+0x10],rax
   140001aaa:	jmp    0x140001aaf
   140001aac:	mov    rdi,r13
   140001aaf:	mov    rdx,QWORD PTR [rbx+0x60]
   140001ab3:	mov    QWORD PTR [rbx+0x70],rdi
   140001ab7:	mov    rax,QWORD PTR [rdi]
   140001aba:	mov    rcx,rdi
   140001abd:	call   QWORD PTR [rax+0x188]
   140001ac3:	mov    rcx,QWORD PTR [rbx+0x70]
   140001ac7:	call   QWORD PTR [rip+0xcbbb]        # 0x14000e688
   140001acd:	mov    rcx,rax
   140001ad0:	call   QWORD PTR [rip+0xcbba]        # 0x14000e690
   140001ad6:	mov    rcx,QWORD PTR [rbx+0x70]
   140001ada:	call   QWORD PTR [rip+0xcbb8]        # 0x14000e698
   140001ae0:	mov    dl,0x1
   140001ae2:	mov    rcx,rax
   140001ae5:	call   QWORD PTR [rip+0xcbb5]        # 0x14000e6a0
   140001aeb:	mov    rcx,QWORD PTR [rbx+0x70]
   140001aef:	xor    edx,edx
   140001af1:	call   QWORD PTR [rip+0xcbb1]        # 0x14000e6a8
   140001af7:	mov    rcx,QWORD PTR [rbx+0x70]
   140001afb:	mov    dl,0x1
   140001afd:	call   QWORD PTR [rip+0xcbad]        # 0x14000e6b0
   140001b03:	mov    rcx,QWORD PTR [rbx+0x70]
   140001b07:	xor    r8d,r8d
   140001b0a:	xor    edx,edx
   140001b0c:	call   QWORD PTR [rip+0xcba6]        # 0x14000e6b8
   140001b12:	mov    r9,QWORD PTR [rbx+0x60]
   140001b16:	mov    rdx,QWORD PTR [rbx+0x68]
   140001b1a:	lea    rax,[rip+0xda77]        # 0x14000f598
   140001b21:	lea    r8,[rip+0xda58]        # 0x14000f580
   140001b28:	lea    rcx,[rsp+0x170]
   140001b30:	mov    DWORD PTR [rsp+0x28],r13d
   140001b35:	mov    QWORD PTR [rsp+0x20],rax
   140001b3a:	call   QWORD PTR [rip+0xbb30]        # 0x14000d670
   140001b40:	lea    rcx,[rsp+0x170]
   140001b48:	call   QWORD PTR [rip+0xbb2a]        # 0x14000d678
   140001b4e:	mov    ecx,0x30
   140001b53:	call   0x14000b8c2
   140001b58:	mov    rdi,rax
   140001b5b:	test   rax,rax
   140001b5e:	je     0x140001b82
   140001b60:	xor    edx,edx
   140001b62:	mov    rcx,rax
   140001b65:	call   QWORD PTR [rip+0xcb55]        # 0x14000e6c0
   140001b6b:	lea    r11,[rip+0xd746]        # 0x14000f2b8
   140001b72:	lea    rax,[rip+0xd6ff]        # 0x14000f278
   140001b79:	mov    QWORD PTR [rdi],r11
   140001b7c:	mov    QWORD PTR [rdi+0x10],rax
   140001b80:	jmp    0x140001b85
   140001b82:	mov    rdi,r13
   140001b85:	mov    edx,0x3
   140001b8a:	mov    rcx,rdi
   140001b8d:	mov    QWORD PTR [rbx+0x40],rdi
   140001b91:	call   QWORD PTR [rip+0xcb31]        # 0x14000e6c8
   140001b97:	mov    rdx,QWORD PTR [rbx+0x40]
   140001b9b:	lea    rax,[rip+0xd6b6]        # 0x14000f258
   140001ba2:	lea    r8,[rip+0xd697]        # 0x14000f240
   140001ba9:	lea    rcx,[rsp+0x170]
   140001bb1:	mov    r9,rbx
   140001bb4:	mov    DWORD PTR [rsp+0x28],r13d
   140001bb9:	mov    QWORD PTR [rsp+0x20],rax
   140001bbe:	call   QWORD PTR [rip+0xbaac]        # 0x14000d670
   140001bc4:	lea    rcx,[rsp+0x170]
   140001bcc:	call   QWORD PTR [rip+0xbaa6]        # 0x14000d678
   140001bd2:	mov    ecx,0x10
   140001bd7:	call   0x14000b8c2
   140001bdc:	mov    rdi,rax
   140001bdf:	test   rax,rax
   140001be2:	je     0x140001c31
   140001be4:	lea    r8,[rip+0xd645]        # 0x14000f230
   140001beb:	lea    rdx,[rsp+0x170]
   140001bf3:	lea    rcx,[rip+0x1e9d6]        # 0x1400205d0
   140001bfa:	xor    r9d,r9d
   140001bfd:	mov    esi,0x1
   140001c02:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140001c0a:	call   QWORD PTR [rip+0xbc00]        # 0x14000d810
   140001c10:	mov    r8,QWORD PTR [rbx+0x40]
   140001c14:	lea    rdx,[rsp+0x170]
   140001c1c:	mov    rcx,rdi
   140001c1f:	call   QWORD PTR [rip+0xcaab]        # 0x14000e6d0
   140001c25:	lea    r11,[rip+0xd5ac]        # 0x14000f1d8
   140001c2c:	mov    QWORD PTR [rdi],r11
   140001c2f:	jmp    0x140001c34
   140001c31:	mov    rdi,r13
   140001c34:	mov    QWORD PTR [rbx+0x48],rdi
   140001c38:	test   sil,0x1
   140001c3c:	je     0x140001c4f
   140001c3e:	lea    rcx,[rsp+0x170]
   140001c46:	and    esi,0xfffffffe
   140001c49:	call   QWORD PTR [rip+0xba79]        # 0x14000d6c8
   140001c4f:	lea    rcx,[rsp+0x70]
   140001c54:	mov    edx,0x2a
   140001c59:	call   QWORD PTR [rip+0xb9c1]        # 0x14000d620
   140001c5f:	mov    rcx,QWORD PTR [rbx+0x48]
   140001c63:	lea    rdx,[rsp+0x70]
   140001c68:	call   QWORD PTR [rip+0xca6a]        # 0x14000e6d8
   140001c6e:	lea    rcx,[rsp+0x70]
   140001c73:	call   QWORD PTR [rip+0xbb7f]        # 0x14000d7f8
   140001c79:	lea    rcx,[rsp+0x170]
   140001c81:	mov    edx,0xf
   140001c86:	call   QWORD PTR [rip+0xbd04]        # 0x14000d990
   140001c8c:	mov    rcx,QWORD PTR [rbx+0x48]
   140001c90:	lea    rdx,[rsp+0x170]
   140001c98:	call   QWORD PTR [rip+0xca42]        # 0x14000e6e0
   140001c9e:	lea    rcx,[rsp+0x170]
   140001ca6:	call   QWORD PTR [rip+0xbcec]        # 0x14000d998
   140001cac:	mov    rdx,QWORD PTR [rbx+0x48]
   140001cb0:	lea    r14,[rip+0xd4f9]        # 0x14000f1b0
   140001cb7:	lea    r8,[rip+0xd4e2]        # 0x14000f1a0
   140001cbe:	lea    rcx,[rsp+0x170]
   140001cc6:	mov    r9,rbx
   140001cc9:	mov    DWORD PTR [rsp+0x28],r13d
   140001cce:	mov    QWORD PTR [rsp+0x20],r14
   140001cd3:	call   QWORD PTR [rip+0xb997]        # 0x14000d670
   140001cd9:	lea    rcx,[rsp+0x170]
   140001ce1:	call   QWORD PTR [rip+0xb991]        # 0x14000d678
   140001ce7:	mov    ecx,0x10
   140001cec:	call   0x14000b8c2
   140001cf1:	mov    rdi,rax
   140001cf4:	test   rax,rax
   140001cf7:	je     0x140001d40
   140001cf9:	lea    rcx,[rsp+0x170]
   140001d01:	mov    edx,0xf
   140001d06:	call   QWORD PTR [rip+0xbc84]        # 0x14000d990
   140001d0c:	mov    r8,QWORD PTR [rbx+0x40]
   140001d10:	lea    rdx,[rsp+0x170]
   140001d18:	xor    r9d,r9d
   140001d1b:	mov    rcx,rdi
   140001d1e:	mov    DWORD PTR [rsp+0x28],0x1
   140001d26:	or     esi,0x2
   140001d29:	mov    QWORD PTR [rsp+0x20],r13
   140001d2e:	call   QWORD PTR [rip+0xc9b4]        # 0x14000e6e8
   140001d34:	lea    r11,[rip+0xd40d]        # 0x14000f148
   140001d3b:	mov    QWORD PTR [rdi],r11
   140001d3e:	jmp    0x140001d43
   140001d40:	mov    rdi,r13
   140001d43:	test   sil,0x2
   140001d47:	je     0x140001d57
   140001d49:	lea    rcx,[rsp+0x170]
   140001d51:	call   QWORD PTR [rip+0xbc41]        # 0x14000d998
   140001d57:	lea    r8,[rip+0xd3ca]        # 0x14000f128
   140001d5e:	lea    rcx,[rsp+0x188]
   140001d66:	mov    r9,rbx
   140001d69:	mov    rdx,rdi
   140001d6c:	mov    DWORD PTR [rsp+0x28],r13d
   140001d71:	mov    QWORD PTR [rsp+0x20],r14
   140001d76:	call   QWORD PTR [rip+0xb8f4]        # 0x14000d670
   140001d7c:	lea    rcx,[rsp+0x188]
   140001d84:	call   QWORD PTR [rip+0xb8ee]        # 0x14000d678
   140001d8a:	mov    ecx,0x20
   140001d8f:	call   0x14000b8c2
   140001d94:	lea    rdi,[rip+0xd30d]        # 0x14000f0a8
   140001d9b:	lea    r14,[rip+0xd276]        # 0x14000f018
   140001da2:	mov    rsi,rax
   140001da5:	test   rax,rax
   140001da8:	je     0x140001dbf
   140001daa:	mov    rdx,rbx
   140001dad:	mov    rcx,rax
   140001db0:	call   QWORD PTR [rip+0xc93a]        # 0x14000e6f0
   140001db6:	mov    QWORD PTR [rsi],rdi
   140001db9:	mov    QWORD PTR [rsi+0x10],r14
   140001dbd:	jmp    0x140001dc2
   140001dbf:	mov    rsi,r13
   140001dc2:	mov    ecx,0x30
   140001dc7:	call   0x14000b8c2
   140001dcc:	lea    r14,[rip+0xd0c5]        # 0x14000ee98
   140001dd3:	lea    r15,[rip+0xd07e]        # 0x14000ee58
   140001dda:	mov    rdi,rax
   140001ddd:	test   rax,rax
   140001de0:	je     0x140001dfc
   140001de2:	mov    r8,rbx
   140001de5:	mov    edx,0x2
   140001dea:	mov    rcx,rax
   140001ded:	call   QWORD PTR [rip+0xc905]        # 0x14000e6f8
   140001df3:	mov    QWORD PTR [rdi],r14
   140001df6:	mov    QWORD PTR [rdi+0x10],r15
   140001dfa:	jmp    0x140001dff
   140001dfc:	mov    rdi,r13
   140001dff:	mov    r9d,r13d
   140001e02:	xor    r8d,r8d
   140001e05:	mov    rdx,rdi
   140001e08:	mov    rcx,rsi
   140001e0b:	mov    QWORD PTR [rbx+0x80],rdi
   140001e12:	call   QWORD PTR [rip+0xc8e8]        # 0x14000e700
   140001e18:	mov    ecx,0x30
   140001e1d:	call   0x14000b8c2
   140001e22:	test   rax,rax
   140001e25:	je     0x140001e33
   140001e27:	xor    edx,edx
   140001e29:	mov    rcx,rax
   140001e2c:	call   0x1400095f0
   140001e31:	jmp    0x140001e36
   140001e33:	mov    rax,r13
   140001e36:	lea    rcx,[rip+0xcffb]        # 0x14000ee38
   140001e3d:	mov    DWORD PTR [rsp+0x28],r13d
   140001e42:	lea    r8,[rip+0xcfd7]        # 0x14000ee20
   140001e49:	mov    QWORD PTR [rsp+0x20],rcx
   140001e4e:	lea    rcx,[rsp+0x170]
   140001e56:	mov    r9,rbx
   140001e59:	mov    rdx,rax
   140001e5c:	mov    QWORD PTR [rbx+0x78],rax
   140001e60:	call   QWORD PTR [rip+0xb80a]        # 0x14000d670
   140001e66:	lea    rcx,[rsp+0x170]
   140001e6e:	call   QWORD PTR [rip+0xb804]        # 0x14000d678
   140001e74:	mov    ecx,0x30
   140001e79:	call   0x14000b8c2
   140001e7e:	mov    rdi,rax
   140001e81:	test   rax,rax
   140001e84:	je     0x140001e9f
   140001e86:	mov    rdx,QWORD PTR [rbx+0x80]
   140001e8d:	mov    rcx,rax
   140001e90:	call   QWORD PTR [rip+0xc872]        # 0x14000e708
   140001e96:	mov    QWORD PTR [rdi],r14
   140001e99:	mov    QWORD PTR [rdi+0x10],r15
   140001e9d:	jmp    0x140001ea2
   140001e9f:	mov    rdi,r13
   140001ea2:	mov    rdx,QWORD PTR [rbx+0x70]
   140001ea6:	mov    rcx,rdi
   140001ea9:	mov    QWORD PTR [rbx+0x88],rdi
   140001eb0:	call   QWORD PTR [rip+0xc85a]        # 0x14000e710
   140001eb6:	mov    ecx,0x30
   140001ebb:	call   0x14000b8c2
   140001ec0:	mov    rdi,rax
   140001ec3:	test   rax,rax
   140001ec6:	je     0x140001eed
   140001ec8:	mov    r8d,r13d
   140001ecb:	xor    edx,edx
   140001ecd:	mov    rcx,rax
   140001ed0:	call   QWORD PTR [rip+0xc792]        # 0x14000e668
   140001ed6:	lea    r11,[rip+0xcddb]        # 0x14000ecb8
   140001edd:	lea    rax,[rip+0xcd94]        # 0x14000ec78
   140001ee4:	mov    QWORD PTR [rdi],r11
   140001ee7:	mov    QWORD PTR [rdi+0x10],rax
   140001eeb:	jmp    0x140001ef0
   140001eed:	mov    rdi,r13
   140001ef0:	mov    ecx,0x20
   140001ef5:	call   0x14000b8c2
   140001efa:	mov    rsi,rax
   140001efd:	test   rax,rax
   140001f00:	je     0x140001f25
   140001f02:	mov    rdx,rdi
   140001f05:	mov    rcx,rax
   140001f08:	call   QWORD PTR [rip+0xc7e2]        # 0x14000e6f0
   140001f0e:	lea    rax,[rip+0xd193]        # 0x14000f0a8
   140001f15:	mov    QWORD PTR [rsi],rax
   140001f18:	lea    rax,[rip+0xd0f9]        # 0x14000f018
   140001f1f:	mov    QWORD PTR [rsi+0x10],rax
   140001f23:	jmp    0x140001f28
   140001f25:	mov    rsi,r13
   140001f28:	mov    rdx,QWORD PTR [rbx+0x68]
   140001f2c:	mov    r9d,r13d
   140001f2f:	xor    r8d,r8d
   140001f32:	mov    rcx,rsi
   140001f35:	call   QWORD PTR [rip+0xc7c5]        # 0x14000e700
   140001f3b:	mov    rdx,QWORD PTR [rbx+0x70]
   140001f3f:	mov    r9d,r13d
   140001f42:	xor    r8d,r8d
   140001f45:	mov    rcx,rsi
   140001f48:	call   QWORD PTR [rip+0xc7b2]        # 0x14000e700
   140001f4e:	mov    rcx,QWORD PTR [rbx+0x88]
   140001f55:	mov    rdx,rdi
   140001f58:	call   QWORD PTR [rip+0xc7b2]        # 0x14000e710
   140001f5e:	mov    rdx,QWORD PTR [rbx+0x40]
   140001f62:	mov    rcx,QWORD PTR [rbx+0x88]
   140001f69:	call   QWORD PTR [rip+0xc7a1]        # 0x14000e710
   140001f6f:	mov    rdx,QWORD PTR [rbx+0x88]
   140001f76:	mov    rcx,QWORD PTR [rbx+0x80]
   140001f7d:	call   QWORD PTR [rip+0xc78d]        # 0x14000e710
   140001f83:	mov    rdx,QWORD PTR [rbx+0x78]
   140001f87:	mov    rcx,QWORD PTR [rbx+0x80]
   140001f8e:	call   QWORD PTR [rip+0xc77c]        # 0x14000e710
   140001f94:	mov    rcx,QWORD PTR [rbx+0x70]
   140001f98:	call   QWORD PTR [rip+0xc77a]        # 0x14000e718
   140001f9e:	lea    r8,[rip+0xcc9b]        # 0x14000ec40
   140001fa5:	lea    rcx,[rsp+0x170]
   140001fad:	mov    rdx,rax
   140001fb0:	lea    rax,[rip+0xcc69]        # 0x14000ec20
   140001fb7:	mov    r9,rbx
   140001fba:	mov    DWORD PTR [rsp+0x28],r13d
   140001fbf:	mov    QWORD PTR [rsp+0x20],rax
   140001fc4:	call   QWORD PTR [rip+0xb6a6]        # 0x14000d670
   140001fca:	lea    rcx,[rsp+0x170]
   140001fd2:	call   QWORD PTR [rip+0xb6a0]        # 0x14000d678
   140001fd8:	mov    rdx,QWORD PTR [rbx+0x40]
   140001fdc:	lea    rax,[rip+0xcc1d]        # 0x14000ec00
   140001fe3:	lea    r8,[rip+0xcbee]        # 0x14000ebd8
   140001fea:	lea    rcx,[rsp+0x170]
   140001ff2:	mov    r9,rbx
   140001ff5:	mov    DWORD PTR [rsp+0x28],r13d
   140001ffa:	mov    QWORD PTR [rsp+0x20],rax
   140001fff:	call   QWORD PTR [rip+0xb66b]        # 0x14000d670
   140002005:	lea    rcx,[rsp+0x170]
   14000200d:	call   QWORD PTR [rip+0xb665]        # 0x14000d678
   140002013:	mov    QWORD PTR [rsp+0x70],r13
   140002018:	mov    QWORD PTR [rsp+0x78],r13
   14000201d:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140002022:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140002028:	mov    QWORD PTR [rsp+0x110],r13
   140002030:	mov    QWORD PTR [rsp+0x118],r13
   140002038:	mov    QWORD PTR [rsp+0x100],r13
   140002040:	movaps xmm1,XMMWORD PTR [rsp+0x110]
   140002048:	movdqa XMMWORD PTR [rsp+0x110],xmm1
   140002051:	mov    QWORD PTR [rsp+0x108],r13
   140002059:	mov    QWORD PTR [rsp+0x120],r13
   140002061:	mov    QWORD PTR [rsp+0x128],r13
   140002069:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   140002071:	movaps xmm1,XMMWORD PTR [rsp+0x120]
   140002079:	mov    QWORD PTR [rsp+0xd0],r13
   140002081:	mov    QWORD PTR [rsp+0xd8],r13
   140002089:	mov    QWORD PTR [rsp+0xb0],r13
   140002091:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000209a:	movdqa XMMWORD PTR [rsp+0x120],xmm1
   1400020a3:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   1400020ab:	mov    QWORD PTR [rsp+0xb8],r13
   1400020b3:	mov    QWORD PTR [rsp+0xf0],r13
   1400020bb:	mov    QWORD PTR [rsp+0xf8],r13
   1400020c3:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   1400020cc:	movaps xmm1,XMMWORD PTR [rsp+0xb0]
   1400020d4:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   1400020dc:	mov    QWORD PTR [rsp+0xc0],r13
   1400020e4:	mov    QWORD PTR [rsp+0xc8],r13
   1400020ec:	mov    QWORD PTR [rsp+0xe0],r13
   1400020f4:	movdqa XMMWORD PTR [rsp+0xb0],xmm1
   1400020fd:	movaps xmm1,XMMWORD PTR [rsp+0xc0]
   140002105:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000210e:	mov    QWORD PTR [rsp+0xe8],r13
   140002116:	mov    QWORD PTR [rsp+0x80],r13
   14000211e:	mov    QWORD PTR [rsp+0x88],r13
   140002126:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000212e:	movdqa XMMWORD PTR [rsp+0xc0],xmm1
   140002137:	movaps xmm1,XMMWORD PTR [rsp+0x80]
   14000213f:	lea    rax,[rsp+0x70]
   140002144:	mov    QWORD PTR [rsp+0x80],r13
   14000214c:	mov    QWORD PTR [rsp+0x68],rax
   140002151:	lea    rax,[rsp+0x110]
   140002159:	mov    QWORD PTR [rsp+0x88],r13
   140002161:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   14000216a:	movdqa XMMWORD PTR [rsp+0xa0],xmm1
   140002173:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000217b:	mov    QWORD PTR [rsp+0x60],rax
   140002180:	lea    rax,[rsp+0x100]
   140002188:	lea    r9,[rsp+0x80]
   140002190:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   140002199:	mov    QWORD PTR [rsp+0x58],rax
   14000219e:	lea    rax,[rsp+0x120]
   1400021a6:	lea    rdx,[rip+0xca23]        # 0x14000ebd0
   1400021ad:	mov    QWORD PTR [rsp+0x50],rax
   1400021b2:	lea    rax,[rsp+0xd0]
   1400021ba:	mov    r8d,0x2
   1400021c0:	mov    QWORD PTR [rsp+0x48],rax
   1400021c5:	lea    rax,[rsp+0xb0]
   1400021cd:	mov    rcx,rbx
   1400021d0:	mov    QWORD PTR [rsp+0x40],rax
   1400021d5:	lea    rax,[rsp+0xf0]
   1400021dd:	mov    QWORD PTR [rsp+0x38],rax
   1400021e2:	lea    rax,[rsp+0xc0]
   1400021ea:	mov    QWORD PTR [rsp+0x30],rax
   1400021ef:	lea    rax,[rsp+0xe0]
   1400021f7:	mov    QWORD PTR [rsp+0x28],rax
   1400021fc:	lea    rax,[rsp+0xa0]
   140002204:	mov    QWORD PTR [rsp+0x20],rax
   140002209:	call   QWORD PTR [rip+0xb419]        # 0x14000d628
   14000220f:	lea    rcx,[rbx+0x30]
   140002213:	call   QWORD PTR [rip+0xb71f]        # 0x14000d938
   140002219:	or     rcx,0xffffffffffffffff
   14000221d:	test   al,al
   14000221f:	je     0x14000238e
   140002225:	lea    rdx,[rip+0xc98c]        # 0x14000ebb8
   14000222c:	xor    eax,eax
   14000222e:	mov    rdi,rdx
   140002231:	mov    QWORD PTR [rsp+0x88],rdx
   140002239:	lea    rdx,[rsp+0xa0]
   140002241:	repnz scas al,BYTE PTR es:[rdi]
   140002243:	not    rcx
   140002246:	dec    rcx
   140002249:	mov    DWORD PTR [rsp+0x80],ecx
   140002250:	lea    rcx,[rsp+0x70]
   140002255:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000225d:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   140002266:	call   QWORD PTR [rip+0xb424]        # 0x14000d690
   14000226c:	lea    rcx,[rsp+0x170]
   140002274:	mov    dl,0xa
   140002276:	call   QWORD PTR [rip+0xb424]        # 0x14000d6a0
   14000227c:	lea    rdx,[rsp+0x70]
   140002281:	lea    rcx,[rsp+0x188]
   140002289:	movzx  edi,WORD PTR [rax]
   14000228c:	call   QWORD PTR [rip+0xb58e]        # 0x14000d820
   140002292:	lea    rcx,[rsp+0x188]
   14000229a:	movzx  edx,di
   14000229d:	call   QWORD PTR [rip+0xb575]        # 0x14000d818
   1400022a3:	mov    rcx,QWORD PTR [rbx+0x78]
   1400022a7:	lea    rdx,[rsp+0x188]
   1400022af:	call   QWORD PTR [rip+0xc47b]        # 0x14000e730
   1400022b5:	lea    rcx,[rsp+0x188]
   1400022bd:	call   QWORD PTR [rip+0xb405]        # 0x14000d6c8
   1400022c3:	lea    rcx,[rsp+0x70]
   1400022c8:	call   QWORD PTR [rip+0xb3fa]        # 0x14000d6c8
   1400022ce:	lea    rcx,[rbx+0x30]
   1400022d2:	call   QWORD PTR [rip+0xb668]        # 0x14000d940
   1400022d8:	lea    r8,[rip+0xc8b9]        # 0x14000eb98
   1400022df:	lea    rcx,[rsp+0x170]
   1400022e7:	mov    rdi,rax
   1400022ea:	lea    rax,[rip+0xc887]        # 0x14000eb78
   1400022f1:	mov    r9,rbx
   1400022f4:	mov    rdx,rdi
   1400022f7:	mov    DWORD PTR [rsp+0x28],r13d
   1400022fc:	mov    QWORD PTR [rsp+0x20],rax
   140002301:	call   QWORD PTR [rip+0xb369]        # 0x14000d670
   140002307:	lea    rcx,[rsp+0x170]
   14000230f:	call   QWORD PTR [rip+0xb363]        # 0x14000d678
   140002315:	lea    rax,[rip+0xc83c]        # 0x14000eb58
   14000231c:	lea    r8,[rip+0xc815]        # 0x14000eb38
   140002323:	lea    rcx,[rsp+0x170]
   14000232b:	mov    r9,rbx
   14000232e:	mov    rdx,rdi
   140002331:	mov    DWORD PTR [rsp+0x28],r13d
   140002336:	mov    QWORD PTR [rsp+0x20],rax
   14000233b:	call   QWORD PTR [rip+0xb32f]        # 0x14000d670
   140002341:	lea    rcx,[rsp+0x170]
   140002349:	call   QWORD PTR [rip+0xb329]        # 0x14000d678
   14000234f:	lea    rax,[rip+0xc7b2]        # 0x14000eb08
   140002356:	lea    r8,[rip+0xc77b]        # 0x14000ead8
   14000235d:	lea    rcx,[rsp+0x170]
   140002365:	mov    r9,rbx
   140002368:	mov    rdx,rdi
   14000236b:	mov    DWORD PTR [rsp+0x28],r13d
   140002370:	mov    QWORD PTR [rsp+0x20],rax
   140002375:	call   QWORD PTR [rip+0xb2f5]        # 0x14000d670
   14000237b:	lea    rcx,[rsp+0x170]
   140002383:	call   QWORD PTR [rip+0xb2ef]        # 0x14000d678
   140002389:	jmp    0x140002467
   14000238e:	lea    rdx,[rip+0xc723]        # 0x14000eab8
   140002395:	xor    eax,eax
   140002397:	mov    rdi,rdx
   14000239a:	mov    QWORD PTR [rsp+0x88],rdx
   1400023a2:	lea    rdx,[rsp+0xa0]
   1400023aa:	repnz scas al,BYTE PTR es:[rdi]
   1400023ac:	not    rcx
   1400023af:	dec    rcx
   1400023b2:	mov    DWORD PTR [rsp+0x80],ecx
   1400023b9:	lea    rcx,[rsp+0x188]
   1400023c1:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400023c9:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   1400023d2:	call   QWORD PTR [rip+0xb2b8]        # 0x14000d690
   1400023d8:	lea    rdx,[rsp+0x80]
   1400023e0:	lea    rcx,[rbx+0x30]
   1400023e4:	call   QWORD PTR [rip+0xb55e]        # 0x14000d948
   1400023ea:	lea    rdx,[rsp+0x70]
   1400023ef:	mov    rcx,rax
   1400023f2:	call   QWORD PTR [rip+0xb558]        # 0x14000d950
   1400023f8:	lea    rdx,[rsp+0x188]
   140002400:	lea    rcx,[rsp+0x170]
   140002408:	mov    rdi,rax
   14000240b:	call   QWORD PTR [rip+0xb40f]        # 0x14000d820
   140002411:	lea    rcx,[rsp+0x170]
   140002419:	mov    rdx,rdi
   14000241c:	call   QWORD PTR [rip+0xb406]        # 0x14000d828
   140002422:	lea    rdx,[rsp+0x170]
   14000242a:	mov    rcx,rbx
   14000242d:	call   0x1400012e0
   140002432:	lea    rcx,[rsp+0x170]
   14000243a:	call   QWORD PTR [rip+0xb288]        # 0x14000d6c8
   140002440:	lea    rcx,[rsp+0x70]
   140002445:	call   QWORD PTR [rip+0xb27d]        # 0x14000d6c8
   14000244b:	lea    rcx,[rsp+0x80]
   140002453:	call   QWORD PTR [rip+0xb4ff]        # 0x14000d958
   140002459:	lea    rcx,[rsp+0x188]
   140002461:	call   QWORD PTR [rip+0xb261]        # 0x14000d6c8
   140002467:	lea    rcx,[rbx+0x90]
   14000246e:	mov    dl,0x1
   140002470:	call   QWORD PTR [rip+0xb1ba]        # 0x14000d630
   140002476:	mov    rax,rbx
   140002479:	mov    rbx,QWORD PTR [rsp+0x178]
   140002481:	add    rsp,0x130
   140002488:	pop    r15
   14000248a:	pop    r14
   14000248c:	pop    r13
   14000248e:	pop    r12
   140002490:	pop    rdi
   140002491:	pop    rsi
   140002492:	pop    rbp
   140002493:	ret    
   140002494:	int3   
   140002495:	int3   
   140002496:	int3   
   140002497:	int3   
   140002498:	int3   
   140002499:	int3   
   14000249a:	int3   
   14000249b:	int3   
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024a5:	push   rdi
   1400024a6:	sub    rsp,0x20
   1400024aa:	mov    ebx,edx
   1400024ac:	mov    rdi,rcx
   1400024af:	call   QWORD PTR [rip+0xbb23]        # 0x14000dfd8
   1400024b5:	test   bl,0x1
   1400024b8:	je     0x1400024c2
   1400024ba:	mov    rcx,rdi
   1400024bd:	call   0x14000b8c8
   1400024c2:	mov    rax,rdi
   1400024c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ca:	add    rsp,0x20
   1400024ce:	pop    rdi
   1400024cf:	ret    
   1400024d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024d5:	push   rdi
   1400024d6:	sub    rsp,0x20
   1400024da:	mov    ebx,edx
   1400024dc:	mov    rdi,rcx
   1400024df:	call   QWORD PTR [rip+0xb08b]        # 0x14000d570
   1400024e5:	test   bl,0x1
   1400024e8:	je     0x1400024f2
   1400024ea:	mov    rcx,rdi
   1400024ed:	call   0x14000b8c8
   1400024f2:	mov    rax,rdi
   1400024f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024fa:	add    rsp,0x20
   1400024fe:	pop    rdi
   1400024ff:	ret    
   140002500:	mov    QWORD PTR [rsp+0x8],rbx
   140002505:	push   rdi
   140002506:	sub    rsp,0x20
   14000250a:	mov    ebx,edx
   14000250c:	mov    rdi,rcx
   14000250f:	call   QWORD PTR [rip+0xbabb]        # 0x14000dfd0
   140002515:	test   bl,0x1
   140002518:	je     0x140002522
   14000251a:	mov    rcx,rdi
   14000251d:	call   0x14000b8c8
   140002522:	mov    rax,rdi
   140002525:	mov    rbx,QWORD PTR [rsp+0x30]
   14000252a:	add    rsp,0x20
   14000252e:	pop    rdi
   14000252f:	ret    
   140002530:	mov    QWORD PTR [rsp+0x8],rbx
   140002535:	push   rdi
   140002536:	sub    rsp,0x20
   14000253a:	mov    ebx,edx
   14000253c:	mov    rdi,rcx
   14000253f:	call   QWORD PTR [rip+0xba83]        # 0x14000dfc8
   140002545:	test   bl,0x1
   140002548:	je     0x140002552
   14000254a:	mov    rcx,rdi
   14000254d:	call   0x14000b8c8
   140002552:	mov    rax,rdi
   140002555:	mov    rbx,QWORD PTR [rsp+0x30]
   14000255a:	add    rsp,0x20
   14000255e:	pop    rdi
   14000255f:	ret    
   140002560:	mov    QWORD PTR [rsp+0x8],rbx
   140002565:	push   rdi
   140002566:	sub    rsp,0x20
   14000256a:	mov    ebx,edx
   14000256c:	mov    rdi,rcx
   14000256f:	call   QWORD PTR [rip+0xba4b]        # 0x14000dfc0
   140002575:	test   bl,0x1
   140002578:	je     0x140002582
   14000257a:	mov    rcx,rdi
   14000257d:	call   0x14000b8c8
   140002582:	mov    rax,rdi
   140002585:	mov    rbx,QWORD PTR [rsp+0x30]
   14000258a:	add    rsp,0x20
   14000258e:	pop    rdi
   14000258f:	ret    
   140002590:	mov    QWORD PTR [rsp+0x8],rbx
   140002595:	push   rdi
   140002596:	sub    rsp,0x20
   14000259a:	mov    ebx,edx
   14000259c:	mov    rdi,rcx
   14000259f:	call   QWORD PTR [rip+0xba13]        # 0x14000dfb8
   1400025a5:	test   bl,0x1
   1400025a8:	je     0x1400025b2
   1400025aa:	mov    rcx,rdi
   1400025ad:	call   0x14000b8c8
   1400025b2:	mov    rax,rdi
   1400025b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025ba:	add    rsp,0x20
   1400025be:	pop    rdi
   1400025bf:	ret    
   1400025c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025c5:	push   rdi
   1400025c6:	sub    rsp,0x20
   1400025ca:	mov    ebx,edx
   1400025cc:	mov    rdi,rcx
   1400025cf:	call   QWORD PTR [rip+0xb9db]        # 0x14000dfb0
   1400025d5:	test   bl,0x1
   1400025d8:	je     0x1400025e2
   1400025da:	mov    rcx,rdi
   1400025dd:	call   0x14000b8c8
   1400025e2:	mov    rax,rdi
   1400025e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025ea:	add    rsp,0x20
   1400025ee:	pop    rdi
   1400025ef:	ret    
   1400025f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025f5:	push   rdi
   1400025f6:	sub    rsp,0x20
   1400025fa:	mov    ebx,edx
   1400025fc:	mov    rdi,rcx
   1400025ff:	call   QWORD PTR [rip+0xb9a3]        # 0x14000dfa8
   140002605:	test   bl,0x1
   140002608:	je     0x140002612
   14000260a:	mov    rcx,rdi
   14000260d:	call   0x14000b8c8
   140002612:	mov    rax,rdi
   140002615:	mov    rbx,QWORD PTR [rsp+0x30]
   14000261a:	add    rsp,0x20
   14000261e:	pop    rdi
   14000261f:	ret    
   140002620:	mov    QWORD PTR [rsp+0x8],rbx
   140002625:	push   rdi
   140002626:	sub    rsp,0x20
   14000262a:	mov    ebx,edx
   14000262c:	mov    rdi,rcx
   14000262f:	call   QWORD PTR [rip+0xb96b]        # 0x14000dfa0
   140002635:	test   bl,0x1
   140002638:	je     0x140002642
   14000263a:	mov    rcx,rdi
   14000263d:	call   0x14000b8c8
   140002642:	mov    rax,rdi
   140002645:	mov    rbx,QWORD PTR [rsp+0x30]
   14000264a:	add    rsp,0x20
   14000264e:	pop    rdi
   14000264f:	ret    
   140002650:	sub    rcx,0x10
   140002654:	jmp    0x140002530
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	sub    rcx,0x10
   140002664:	jmp    0x1400026c0
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	sub    rcx,0x10
   140002674:	jmp    0x1400025f0
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	sub    rcx,0x10
   140002684:	jmp    0x1400024a0
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rcx,0x10
   140002694:	jmp    0x140002620
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	sub    rcx,0x10
   1400026a4:	jmp    0x140002500
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	sub    rcx,0x10
   1400026b4:	jmp    0x1400025c0
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c5:	push   rdi
   1400026c6:	sub    rsp,0x20
   1400026ca:	mov    rdi,rcx
   1400026cd:	add    rcx,0x90
   1400026d4:	mov    ebx,edx
   1400026d6:	call   QWORD PTR [rip+0xae8c]        # 0x14000d568
   1400026dc:	lea    rcx,[rdi+0x38]
   1400026e0:	call   QWORD PTR [rip+0xafe2]        # 0x14000d6c8
   1400026e6:	lea    rcx,[rdi+0x30]
   1400026ea:	call   QWORD PTR [rip+0xb238]        # 0x14000d928
   1400026f0:	mov    rcx,rdi
   1400026f3:	call   QWORD PTR [rip+0xb8a7]        # 0x14000dfa0
   1400026f9:	test   bl,0x1
   1400026fc:	je     0x140002706
   1400026fe:	mov    rcx,rdi
   140002701:	call   0x14000b8c8
   140002706:	mov    rax,rdi
   140002709:	mov    rbx,QWORD PTR [rsp+0x30]
   14000270e:	add    rsp,0x20
   140002712:	pop    rdi
   140002713:	ret    
   140002714:	int3   
   140002715:	int3   
   140002716:	int3   
   140002717:	int3   
   140002718:	int3   
   140002719:	int3   
   14000271a:	int3   
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	mov    QWORD PTR [rsp+0x8],rbx
   140002725:	push   rdi
   140002726:	sub    rsp,0x40
   14000272a:	mov    rbx,rcx
   14000272d:	mov    rcx,QWORD PTR [rcx+0x40]
   140002731:	call   QWORD PTR [rip+0xbfe9]        # 0x14000e720
   140002737:	lea    rcx,[rip+0x1deca]        # 0x140020608
   14000273e:	mov    rdx,rax
   140002741:	call   QWORD PTR [rip+0xaef1]        # 0x14000d638
   140002747:	mov    rdi,rax
   14000274a:	test   rax,rax
   14000274d:	je     0x140002769
   14000274f:	mov    rcx,QWORD PTR [rbx+0x40]
   140002753:	lea    rdx,[rsp+0x20]
   140002758:	call   QWORD PTR [rip+0xb83a]        # 0x14000df98
   14000275e:	mov    rcx,rdi
   140002761:	mov    rdx,rax
   140002764:	call   0x140008300
   140002769:	mov    rbx,QWORD PTR [rsp+0x50]
   14000276e:	add    rsp,0x40
   140002772:	pop    rdi
   140002773:	ret    
   140002774:	int3   
   140002775:	int3   
   140002776:	int3   
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    QWORD PTR [rsp+0x8],rbx
   140002785:	mov    QWORD PTR [rsp+0x10],rsi
   14000278a:	push   rdi
   14000278b:	sub    rsp,0x50
   14000278f:	mov    rbx,rcx
   140002792:	or     rcx,0xffffffffffffffff
   140002796:	mov    rsi,rdx
   140002799:	lea    rdx,[rip+0xd620]        # 0x14000fdc0
   1400027a0:	xor    eax,eax
   1400027a2:	mov    rdi,rdx
   1400027a5:	mov    QWORD PTR [rsp+0x28],rdx
   1400027aa:	lea    rdx,[rsp+0x70]
   1400027af:	repnz scas al,BYTE PTR es:[rdi]
   1400027b1:	not    rcx
   1400027b4:	dec    rcx
   1400027b7:	mov    DWORD PTR [rsp+0x20],ecx
   1400027bb:	mov    rcx,rsi
   1400027be:	call   QWORD PTR [rip+0xad7c]        # 0x14000d540
   1400027c4:	lea    rdx,[rsp+0x20]
   1400027c9:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400027ce:	mov    rcx,rax
   1400027d1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400027d7:	call   QWORD PTR [rip+0xad6b]        # 0x14000d548
   1400027dd:	lea    rcx,[rsp+0x70]
   1400027e2:	test   al,al
   1400027e4:	sete   dil
   1400027e8:	call   QWORD PTR [rip+0xaeda]        # 0x14000d6c8
   1400027ee:	test   dil,dil
   1400027f1:	jne    0x1400028c9
   1400027f7:	mov    rax,QWORD PTR [rbx+0x78]
   1400027fb:	lea    rcx,[rsp+0x70]
   140002800:	mov    rdi,QWORD PTR [rax]
   140002803:	call   QWORD PTR [rip+0xad47]        # 0x14000d550
   140002809:	mov    rcx,QWORD PTR [rbx+0x78]
   14000280d:	mov    rdx,rax
   140002810:	call   QWORD PTR [rdi+0x1b0]
   140002816:	lea    rcx,[rsp+0x70]
   14000281b:	call   QWORD PTR [rip+0xad37]        # 0x14000d558
   140002821:	mov    rcx,QWORD PTR [rbx+0x40]
   140002825:	call   QWORD PTR [rip+0xbef5]        # 0x14000e720
   14000282b:	lea    rcx,[rip+0x1ddd6]        # 0x140020608
   140002832:	mov    rdx,rax
   140002835:	call   QWORD PTR [rip+0xadfd]        # 0x14000d638
   14000283b:	mov    rdi,rax
   14000283e:	test   rax,rax
   140002841:	je     0x1400028c9
   140002847:	lea    rdx,[rsp+0x78]
   14000284c:	mov    r8d,0x7f00000
   140002852:	mov    rcx,rsi
   140002855:	call   QWORD PTR [rip+0xad05]        # 0x14000d560
   14000285b:	lea    rcx,[rsp+0x70]
   140002860:	mov    rdx,rax
   140002863:	call   QWORD PTR [rip+0xb0af]        # 0x14000d918
   140002869:	lea    rdx,[rsp+0x30]
   14000286e:	mov    rcx,rdi
   140002871:	mov    r8,rax
   140002874:	call   0x140008420
   140002879:	lea    rcx,[rsp+0x70]
   14000287e:	call   QWORD PTR [rip+0xb09c]        # 0x14000d920
   140002884:	lea    rcx,[rsp+0x78]
   140002889:	call   QWORD PTR [rip+0xae39]        # 0x14000d6c8
   14000288f:	cmp    DWORD PTR [rsp+0x30],0x0
   140002894:	jl     0x1400028c9
   140002896:	cmp    DWORD PTR [rsp+0x34],0x0
   14000289b:	jl     0x1400028c9
   14000289d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400028a3:	je     0x1400028c9
   1400028a5:	mov    rcx,QWORD PTR [rbx+0x40]
   1400028a9:	lea    rdx,[rsp+0x30]
   1400028ae:	xor    r8d,r8d
   1400028b1:	mov    rax,QWORD PTR [rcx]
   1400028b4:	call   QWORD PTR [rax+0x1a8]
   1400028ba:	mov    rcx,QWORD PTR [rbx+0x40]
   1400028be:	lea    rdx,[rsp+0x30]
   1400028c3:	call   QWORD PTR [rip+0xb6c7]        # 0x14000df90
   1400028c9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400028ce:	mov    rsi,QWORD PTR [rsp+0x68]
   1400028d3:	add    rsp,0x50
   1400028d7:	pop    rdi
   1400028d8:	ret    
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400028e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400028ea:	push   rsi
   1400028eb:	sub    rsp,0x20
   1400028ef:	movsxd rax,DWORD PTR [rdx+0xc]
   1400028f3:	mov    rbp,rdx
   1400028f6:	lea    rbx,[rdx+rax*8+0x10]
   1400028fb:	movsxd rax,DWORD PTR [rdx+0x8]
   1400028ff:	lea    rsi,[rdx+rax*8+0x10]
   140002904:	cmp    rsi,rbx
   140002907:	je     0x140002938
   140002909:	mov    QWORD PTR [rsp+0x30],rdi
   14000290e:	xchg   ax,ax
   140002910:	mov    rdi,QWORD PTR [rbx-0x8]
   140002914:	sub    rbx,0x8
   140002918:	test   rdi,rdi
   14000291b:	je     0x14000292e
   14000291d:	mov    rcx,rdi
   140002920:	call   QWORD PTR [rip+0xaed2]        # 0x14000d7f8
   140002926:	mov    rcx,rdi
   140002929:	call   0x14000b8c8
   14000292e:	cmp    rbx,rsi
   140002931:	jne    0x140002910
   140002933:	mov    rdi,QWORD PTR [rsp+0x30]
   140002938:	mov    rcx,rbp
   14000293b:	mov    rbx,QWORD PTR [rsp+0x38]
   140002940:	mov    rbp,QWORD PTR [rsp+0x40]
   140002945:	add    rsp,0x20
   140002949:	pop    rsi
   14000294a:	rex.W jmp QWORD PTR [rip+0xabcf]        # 0x14000d520
   140002951:	int3   
   140002952:	int3   
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	rex.W jmp QWORD PTR [rip+0xae91]        # 0x14000d7f8
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	sub    rsp,0x28
   140002974:	mov    rdx,QWORD PTR [rcx]
   140002977:	mov    eax,DWORD PTR [rdx]
   140002979:	test   eax,eax
   14000297b:	je     0x14000298d
   14000297d:	cmp    eax,0xffffffff
   140002980:	je     0x1400029ea
   140002982:	lock add DWORD PTR [rdx],0xffffffff
   140002986:	setne  al
   140002989:	test   al,al
   14000298b:	jne    0x1400029ea
   14000298d:	mov    QWORD PTR [rsp+0x30],rbx
   140002992:	mov    QWORD PTR [rsp+0x38],rsi
   140002997:	mov    rsi,QWORD PTR [rcx]
   14000299a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000299e:	mov    QWORD PTR [rsp+0x20],rdi
   1400029a3:	lea    rbx,[rsi+rax*8+0x10]
   1400029a8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400029ac:	lea    rdi,[rsi+rax*8+0x10]
   1400029b1:	cmp    rdi,rbx
   1400029b4:	je     0x1400029d2
   1400029b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400029c0:	sub    rbx,0x8
   1400029c4:	mov    rcx,rbx
   1400029c7:	call   QWORD PTR [rip+0xacfb]        # 0x14000d6c8
   1400029cd:	cmp    rbx,rdi
   1400029d0:	jne    0x1400029c0
   1400029d2:	mov    rcx,rsi
   1400029d5:	call   QWORD PTR [rip+0xab45]        # 0x14000d520
   1400029db:	mov    rdi,QWORD PTR [rsp+0x20]
   1400029e0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400029e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029ea:	add    rsp,0x28
   1400029ee:	ret    
   1400029ef:	int3   
   1400029f0:	rex push rbx
   1400029f2:	push   rbp
   1400029f3:	push   rdi
   1400029f4:	sub    rsp,0x20
   1400029f8:	mov    rbx,QWORD PTR [rdx]
   1400029fb:	mov    rdi,rdx
   1400029fe:	mov    rbp,rcx
   140002a01:	cmp    QWORD PTR [rcx],rbx
   140002a04:	je     0x140002b31
   140002a0a:	mov    QWORD PTR [rsp+0x40],rbx
   140002a0f:	mov    eax,DWORD PTR [rbx]
   140002a11:	mov    QWORD PTR [rsp+0x48],rsi
   140002a16:	mov    QWORD PTR [rsp+0x50],r12
   140002a1b:	test   eax,eax
   140002a1d:	je     0x140002a2f
   140002a1f:	cmp    eax,0xffffffff
   140002a22:	je     0x140002a99
   140002a24:	lock add DWORD PTR [rbx],0x1
   140002a28:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a2d:	jmp    0x140002a99
   140002a2f:	mov    edx,DWORD PTR [rbx+0x4]
   140002a32:	lea    rcx,[rsp+0x40]
   140002a37:	call   QWORD PTR [rip+0xaad3]        # 0x14000d510
   140002a3d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a42:	mov    rcx,QWORD PTR [rdi]
   140002a45:	movsxd rax,DWORD PTR [rbx+0xc]
   140002a49:	lea    r12,[rbx+rax*8+0x10]
   140002a4e:	movsxd rax,DWORD PTR [rcx+0x8]
   140002a52:	lea    rsi,[rcx+rax*8+0x10]
   140002a57:	movsxd rax,DWORD PTR [rbx+0x8]
   140002a5b:	lea    rdi,[rbx+rax*8+0x10]
   140002a60:	cmp    rdi,r12
   140002a63:	je     0x140002a99
   140002a65:	mov    ecx,0x10
   140002a6a:	call   0x14000b8c2
   140002a6f:	test   rax,rax
   140002a72:	je     0x140002a82
   140002a74:	mov    rdx,QWORD PTR [rsi]
   140002a77:	mov    rcx,rax
   140002a7a:	call   QWORD PTR [rip+0xad80]        # 0x14000d800
   140002a80:	jmp    0x140002a84
   140002a82:	xor    eax,eax
   140002a84:	mov    QWORD PTR [rdi],rax
   140002a87:	add    rdi,0x8
   140002a8b:	add    rsi,0x8
   140002a8f:	cmp    rdi,r12
   140002a92:	jne    0x140002a65
   140002a94:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a99:	lea    rax,[rsp+0x40]
   140002a9e:	cmp    rax,rbp
   140002aa1:	je     0x140002ab3
   140002aa3:	mov    rax,rbx
   140002aa6:	mov    rbx,QWORD PTR [rbp+0x0]
   140002aaa:	mov    QWORD PTR [rsp+0x40],rbx
   140002aaf:	mov    QWORD PTR [rbp+0x0],rax
   140002ab3:	mov    eax,DWORD PTR [rbx]
   140002ab5:	test   eax,eax
   140002ab7:	je     0x140002ace
   140002ab9:	cmp    eax,0xffffffff
   140002abc:	je     0x140002b1c
   140002abe:	lock add DWORD PTR [rbx],0xffffffff
   140002ac2:	setne  al
   140002ac5:	test   al,al
   140002ac7:	jne    0x140002b1c
   140002ac9:	mov    rbx,QWORD PTR [rsp+0x40]
   140002ace:	movsxd rax,DWORD PTR [rbx+0xc]
   140002ad2:	lea    rdi,[rbx+rax*8+0x10]
   140002ad7:	movsxd rax,DWORD PTR [rbx+0x8]
   140002adb:	lea    r12,[rbx+rax*8+0x10]
   140002ae0:	cmp    r12,rdi
   140002ae3:	je     0x140002b13
   140002ae5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002af0:	mov    rsi,QWORD PTR [rdi-0x8]
   140002af4:	sub    rdi,0x8
   140002af8:	test   rsi,rsi
   140002afb:	je     0x140002b0e
   140002afd:	mov    rcx,rsi
   140002b00:	call   QWORD PTR [rip+0xacf2]        # 0x14000d7f8
   140002b06:	mov    rcx,rsi
   140002b09:	call   0x14000b8c8
   140002b0e:	cmp    rdi,r12
   140002b11:	jne    0x140002af0
   140002b13:	mov    rcx,rbx
   140002b16:	call   QWORD PTR [rip+0xaa04]        # 0x14000d520
   140002b1c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002b21:	mov    r12,QWORD PTR [rsp+0x50]
   140002b26:	mov    rax,rbp
   140002b29:	add    rsp,0x20
   140002b2d:	pop    rdi
   140002b2e:	pop    rbp
   140002b2f:	pop    rbx
   140002b30:	ret    
   140002b31:	mov    rax,rcx
   140002b34:	add    rsp,0x20
   140002b38:	pop    rdi
   140002b39:	pop    rbp
   140002b3a:	pop    rbx
   140002b3b:	ret    
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	mov    QWORD PTR [rsp+0x8],rbx
   140002b45:	mov    QWORD PTR [rsp+0x18],rbp
   140002b4a:	mov    DWORD PTR [rsp+0x10],edx
   140002b4e:	push   rsi
   140002b4f:	push   rdi
   140002b50:	push   r12
   140002b52:	push   r13
   140002b54:	push   r14
   140002b56:	sub    rsp,0x20
   140002b5a:	mov    rdx,QWORD PTR [rcx]
   140002b5d:	movsxd r13,r8d
   140002b60:	mov    r12,rcx
   140002b63:	movsxd rax,DWORD PTR [rdx+0x8]
   140002b67:	mov    r8d,r13d
   140002b6a:	lea    r14,[rdx+rax*8+0x10]
   140002b6f:	lea    rdx,[rsp+0x58]
   140002b74:	call   QWORD PTR [rip+0xa986]        # 0x14000d500
   140002b7a:	mov    r10,QWORD PTR [r12]
   140002b7e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002b83:	movsxd r9,DWORD PTR [r10+0x8]
   140002b87:	mov    rbp,rax
   140002b8a:	mov    rdi,r14
   140002b8d:	add    rdx,r9
   140002b90:	lea    rbx,[r10+r9*8+0x10]
   140002b95:	lea    rsi,[r10+rdx*8+0x10]
   140002b9a:	cmp    rbx,rsi
   140002b9d:	je     0x140002bcf
   140002b9f:	nop
   140002ba0:	mov    ecx,0x10
   140002ba5:	call   0x14000b8c2
   140002baa:	test   rax,rax
   140002bad:	je     0x140002bbd
   140002baf:	mov    rdx,QWORD PTR [rdi]
   140002bb2:	mov    rcx,rax
   140002bb5:	call   QWORD PTR [rip+0xac45]        # 0x14000d800
   140002bbb:	jmp    0x140002bbf
   140002bbd:	xor    eax,eax
   140002bbf:	mov    QWORD PTR [rbx],rax
   140002bc2:	add    rbx,0x8
   140002bc6:	add    rdi,0x8
   140002bca:	cmp    rbx,rsi
   140002bcd:	jne    0x140002ba0
   140002bcf:	mov    r8,QWORD PTR [r12]
   140002bd3:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002bd8:	movsxd rcx,DWORD PTR [r8+0x8]
   140002bdc:	movsxd rax,DWORD PTR [r8+0xc]
   140002be0:	lea    rdi,[r14+rdx*8]
   140002be4:	add    rcx,rdx
   140002be7:	lea    rsi,[r8+rax*8+0x10]
   140002bec:	add    rcx,r13
   140002bef:	lea    rbx,[r8+rcx*8+0x10]
   140002bf4:	cmp    rbx,rsi
   140002bf7:	je     0x140002c2f
   140002bf9:	nop    DWORD PTR [rax+0x0]
   140002c00:	mov    ecx,0x10
   140002c05:	call   0x14000b8c2
   140002c0a:	test   rax,rax
   140002c0d:	je     0x140002c1d
   140002c0f:	mov    rdx,QWORD PTR [rdi]
   140002c12:	mov    rcx,rax
   140002c15:	call   QWORD PTR [rip+0xabe5]        # 0x14000d800
   140002c1b:	jmp    0x140002c1f
   140002c1d:	xor    eax,eax
   140002c1f:	mov    QWORD PTR [rbx],rax
   140002c22:	add    rbx,0x8
   140002c26:	add    rdi,0x8
   140002c2a:	cmp    rbx,rsi
   140002c2d:	jne    0x140002c00
   140002c2f:	mov    eax,DWORD PTR [rbp+0x0]
   140002c32:	test   eax,eax
   140002c34:	je     0x140002c47
   140002c36:	cmp    eax,0xffffffff
   140002c39:	je     0x140002c52
   140002c3b:	lock add DWORD PTR [rbp+0x0],0xffffffff
   140002c40:	setne  al
   140002c43:	test   al,al
   140002c45:	jne    0x140002c52
   140002c47:	mov    rdx,rbp
   140002c4a:	mov    rcx,r12
   140002c4d:	call   0x1400028e0
   140002c52:	mov    rdx,QWORD PTR [r12]
   140002c56:	movsxd rax,DWORD PTR [rsp+0x58]
   140002c5b:	mov    rbx,QWORD PTR [rsp+0x50]
   140002c60:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002c64:	mov    rbp,QWORD PTR [rsp+0x60]
   140002c69:	add    rcx,rax
   140002c6c:	lea    rax,[rdx+rcx*8+0x10]
   140002c71:	add    rsp,0x20
   140002c75:	pop    r14
   140002c77:	pop    r13
   140002c79:	pop    r12
   140002c7b:	pop    rdi
   140002c7c:	pop    rsi
   140002c7d:	ret    
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	mov    QWORD PTR [rsp+0x8],rbx
   140002c85:	mov    QWORD PTR [rsp+0x18],rbp
   140002c8a:	mov    QWORD PTR [rsp+0x20],rsi
   140002c8f:	mov    DWORD PTR [rsp+0x10],edx
   140002c93:	push   rdi
   140002c94:	sub    rsp,0x20
   140002c98:	mov    rdx,QWORD PTR [rcx]
   140002c9b:	movsxd rbp,r8d
   140002c9e:	mov    rdi,rcx
   140002ca1:	movsxd rax,DWORD PTR [rdx+0x8]
   140002ca5:	mov    r8d,ebp
   140002ca8:	lea    rsi,[rdx+rax*8+0x10]
   140002cad:	lea    rdx,[rsp+0x38]
   140002cb2:	call   QWORD PTR [rip+0xa848]        # 0x14000d500
   140002cb8:	mov    r10,QWORD PTR [rdi]
   140002cbb:	movsxd rdx,DWORD PTR [rsp+0x38]
   140002cc0:	movsxd r9,DWORD PTR [r10+0x8]
   140002cc4:	mov    rbx,rax
   140002cc7:	add    rdx,r9
   140002cca:	lea    rcx,[r10+r9*8+0x10]
   140002ccf:	lea    r8,[r10+rdx*8+0x10]
   140002cd4:	cmp    rsi,rcx
   140002cd7:	je     0x140002cf1
   140002cd9:	sub    r8,rcx
   140002cdc:	sar    r8,0x3
   140002ce0:	test   r8,r8
   140002ce3:	jle    0x140002cf1
   140002ce5:	shl    r8,0x3
   140002ce9:	mov    rdx,rsi
   140002cec:	call   0x14000b8ce
   140002cf1:	mov    r8,QWORD PTR [rdi]
   140002cf4:	movsxd rdx,DWORD PTR [rsp+0x38]
   140002cf9:	movsxd rcx,DWORD PTR [r8+0x8]
   140002cfd:	movsxd rax,DWORD PTR [r8+0xc]
   140002d01:	lea    r10,[rsi+rdx*8]
   140002d05:	add    rcx,rdx
   140002d08:	lea    r9,[r8+rax*8+0x10]
   140002d0d:	add    rcx,rbp
   140002d10:	lea    rcx,[r8+rcx*8+0x10]
   140002d15:	cmp    r10,rcx
   140002d18:	je     0x140002d36
   140002d1a:	sub    r9,rcx
   140002d1d:	sar    r9,0x3
   140002d21:	test   r9,r9
   140002d24:	jle    0x140002d36
   140002d26:	lea    r8,[r9*8+0x0]
   140002d2e:	mov    rdx,r10
   140002d31:	call   0x14000b8ce
   140002d36:	mov    eax,DWORD PTR [rbx]
   140002d38:	test   eax,eax
   140002d3a:	je     0x140002d4c
   140002d3c:	cmp    eax,0xffffffff
   140002d3f:	je     0x140002d55
   140002d41:	lock add DWORD PTR [rbx],0xffffffff
   140002d45:	setne  al
   140002d48:	test   al,al
   140002d4a:	jne    0x140002d55
   140002d4c:	mov    rcx,rbx
   140002d4f:	call   QWORD PTR [rip+0xa7cb]        # 0x14000d520
   140002d55:	mov    rdx,QWORD PTR [rdi]
   140002d58:	movsxd rax,DWORD PTR [rsp+0x38]
   140002d5d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d62:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002d66:	mov    rbp,QWORD PTR [rsp+0x40]
   140002d6b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002d70:	add    rcx,rax
   140002d73:	lea    rax,[rdx+rcx*8+0x10]
   140002d78:	add    rsp,0x20
   140002d7c:	pop    rdi
   140002d7d:	ret    
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	sub    rsp,0x38
   140002d84:	mov    eax,DWORD PTR [rip+0x1d9de]        # 0x140020768
   140002d8a:	test   eax,eax
   140002d8c:	jne    0x140002df7
   140002d8e:	lea    rdx,[rip+0xd033]        # 0x14000fdc8
   140002d95:	lea    rcx,[rsp+0x48]
   140002d9a:	mov    QWORD PTR [rsp+0x30],rbx
   140002d9f:	call   QWORD PTR [rip+0xa763]        # 0x14000d508
   140002da5:	lea    r8,[rip+0xffffffffffffea84]        # 0x140001830
   140002dac:	lea    rdx,[rip+0xfffffffffffffbad]        # 0x140002960
   140002db3:	lea    rcx,[rsp+0x48]
   140002db8:	mov    r9d,0x10
   140002dbe:	mov    QWORD PTR [rsp+0x28],0x0
   140002dc7:	mov    DWORD PTR [rsp+0x40],0x7
   140002dcf:	mov    DWORD PTR [rsp+0x20],0x107
   140002dd7:	call   QWORD PTR [rip+0xa73b]        # 0x14000d518
   140002ddd:	lea    rcx,[rsp+0x48]
   140002de2:	mov    ebx,eax
   140002de4:	call   QWORD PTR [rip+0xa8e6]        # 0x14000d6d0
   140002dea:	mov    DWORD PTR [rip+0x1d978],ebx        # 0x140020768
   140002df0:	mov    eax,ebx
   140002df2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002df7:	add    rsp,0x38
   140002dfb:	ret    
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	rex push rbx
   140002e02:	push   rbp
   140002e03:	push   rsi
   140002e04:	push   rdi
   140002e05:	push   r12
   140002e07:	push   r13
   140002e09:	push   r14
   140002e0b:	sub    rsp,0x20
   140002e0f:	mov    r14,rdx
   140002e12:	mov    r13,rcx
   140002e15:	call   QWORD PTR [rip+0xa86d]        # 0x14000d688
   140002e1b:	xor    r12d,r12d
   140002e1e:	xchg   ax,ax
   140002e20:	lea    rdx,[rsp+0x60]
   140002e25:	mov    rcx,r14
   140002e28:	call   QWORD PTR [rip+0xa6ba]        # 0x14000d4e8
   140002e2e:	mov    rdi,QWORD PTR [rsp+0x60]
   140002e33:	mov    r8,QWORD PTR [rax]
   140002e36:	mov    eax,DWORD PTR [r8+0xc]
   140002e3a:	sub    eax,DWORD PTR [r8+0x8]
   140002e3e:	cmp    r12d,eax
   140002e41:	mov    eax,DWORD PTR [rdi]
   140002e43:	setl   bpl
   140002e47:	test   eax,eax
   140002e49:	je     0x140002e60
   140002e4b:	cmp    eax,0xffffffff
   140002e4e:	je     0x140002e9b
   140002e50:	lock add DWORD PTR [rdi],0xffffffff
   140002e54:	setne  al
   140002e57:	test   al,al
   140002e59:	jne    0x140002e9b
   140002e5b:	mov    rdi,QWORD PTR [rsp+0x60]
   140002e60:	movsxd rax,DWORD PTR [rdi+0xc]
   140002e64:	lea    rbx,[rdi+rax*8+0x10]
   140002e69:	movsxd rax,DWORD PTR [rdi+0x8]
   140002e6d:	lea    rsi,[rdi+rax*8+0x10]
   140002e72:	cmp    rsi,rbx
   140002e75:	je     0x140002e92
   140002e77:	nop    WORD PTR [rax+rax*1+0x0]
   140002e80:	sub    rbx,0x8
   140002e84:	mov    rcx,rbx
   140002e87:	call   QWORD PTR [rip+0xa843]        # 0x14000d6d0
   140002e8d:	cmp    rbx,rsi
   140002e90:	jne    0x140002e80
   140002e92:	mov    rcx,rdi
   140002e95:	call   QWORD PTR [rip+0xa685]        # 0x14000d520
   140002e9b:	test   bpl,bpl
   140002e9e:	je     0x140002f57
   140002ea4:	lea    rdx,[rsp+0x70]
   140002ea9:	mov    rcx,r14
   140002eac:	call   QWORD PTR [rip+0xa636]        # 0x14000d4e8
   140002eb2:	mov    rdx,QWORD PTR [rax]
   140002eb5:	movsxd rax,r12d
   140002eb8:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002ebc:	add    rcx,rax
   140002ebf:	lea    rcx,[rdx+rcx*8+0x10]
   140002ec4:	call   QWORD PTR [rip+0xa626]        # 0x14000d4f0
   140002eca:	mov    rdi,QWORD PTR [rsp+0x70]
   140002ecf:	mov    ecx,DWORD PTR [rdi]
   140002ed1:	mov    ebp,eax
   140002ed3:	test   ecx,ecx
   140002ed5:	je     0x140002eec
   140002ed7:	cmp    ecx,0xffffffff
   140002eda:	je     0x140002f1e
   140002edc:	lock add DWORD PTR [rdi],0xffffffff
   140002ee0:	setne  cl
   140002ee3:	test   cl,cl
   140002ee5:	jne    0x140002f1e
   140002ee7:	mov    rdi,QWORD PTR [rsp+0x70]
   140002eec:	movsxd rax,DWORD PTR [rdi+0xc]
   140002ef0:	lea    rbx,[rdi+rax*8+0x10]
   140002ef5:	movsxd rax,DWORD PTR [rdi+0x8]
   140002ef9:	lea    rsi,[rdi+rax*8+0x10]
   140002efe:	cmp    rsi,rbx
   140002f01:	je     0x140002f15
   140002f03:	sub    rbx,0x8
   140002f07:	mov    rcx,rbx
   140002f0a:	call   QWORD PTR [rip+0xa7c0]        # 0x14000d6d0
   140002f10:	cmp    rbx,rsi
   140002f13:	jne    0x140002f03
   140002f15:	mov    rcx,rdi
   140002f18:	call   QWORD PTR [rip+0xa602]        # 0x14000d520
   140002f1e:	mov    ecx,ebp
   140002f20:	call   QWORD PTR [rip+0xa9ea]        # 0x14000d910
   140002f26:	lea    rcx,[rsp+0x78]
   140002f2b:	or     r8d,0xffffffff
   140002f2f:	mov    rdx,rax
   140002f32:	call   QWORD PTR [rip+0xa5c0]        # 0x14000d4f8
   140002f38:	mov    rcx,r13
   140002f3b:	mov    rdx,rax
   140002f3e:	call   QWORD PTR [rip+0xa8e4]        # 0x14000d828
   140002f44:	lea    rcx,[rsp+0x78]
   140002f49:	call   QWORD PTR [rip+0xa779]        # 0x14000d6c8
   140002f4f:	inc    r12d
   140002f52:	jmp    0x140002e20
   140002f57:	mov    rax,r13
   140002f5a:	add    rsp,0x20
   140002f5e:	pop    r14
   140002f60:	pop    r13
   140002f62:	pop    r12
   140002f64:	pop    rdi
   140002f65:	pop    rsi
   140002f66:	pop    rbp
   140002f67:	pop    rbx
   140002f68:	ret    
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	rex push rbx
   140002f72:	push   r12
   140002f74:	push   r13
   140002f76:	sub    rsp,0x90
   140002f7d:	xor    eax,eax
   140002f7f:	or     r12d,0xffffffff
   140002f83:	mov    r13,rcx
   140002f86:	mov    QWORD PTR [rsp+0x40],rax
   140002f8b:	mov    QWORD PTR [rsp+0x48],rax
   140002f90:	mov    QWORD PTR [rsp+0x28],rax
   140002f95:	mov    QWORD PTR [rsp+0x30],rax
   140002f9a:	mov    rax,QWORD PTR [rcx+0x58]
   140002f9e:	mov    DWORD PTR [rsp+0x38],r12d
   140002fa3:	mov    DWORD PTR [rsp+0x3c],r12d
   140002fa8:	mov    DWORD PTR [rsp+0x20],r12d
   140002fad:	mov    DWORD PTR [rsp+0x24],r12d
   140002fb2:	mov    rbx,QWORD PTR [rax]
   140002fb5:	lea    rdx,[rsp+0x20]
   140002fba:	mov    rcx,rax
   140002fbd:	call   QWORD PTR [rbx+0x70]
   140002fc0:	mov    rcx,QWORD PTR [r13+0x58]
   140002fc4:	lea    r9,[rsp+0x38]
   140002fc9:	mov    r8d,eax
   140002fcc:	xor    edx,edx
   140002fce:	call   QWORD PTR [rbx+0xf8]
   140002fd4:	lea    rcx,[r13+0x30]
   140002fd8:	call   QWORD PTR [rip+0xa95a]        # 0x14000d938
   140002fde:	test   al,al
   140002fe0:	je     0x14000321b
   140002fe6:	mov    QWORD PTR [rsp+0xc0],rbp
   140002fee:	lea    rcx,[r13+0x30]
   140002ff2:	mov    QWORD PTR [rsp+0x88],rsi
   140002ffa:	mov    QWORD PTR [rsp+0x80],rdi
   140003002:	call   QWORD PTR [rip+0xa938]        # 0x14000d940
   140003008:	lea    rdx,[rsp+0x50]
   14000300d:	mov    rcx,rax
   140003010:	call   QWORD PTR [rip+0xa8f2]        # 0x14000d908
   140003016:	mov    rdi,rax
   140003019:	mov    rbx,QWORD PTR [rax+0x20]
   14000301d:	mov    QWORD PTR [rsp+0xb0],rbx
   140003025:	mov    eax,DWORD PTR [rbx]
   140003027:	test   eax,eax
   140003029:	je     0x14000303e
   14000302b:	cmp    eax,r12d
   14000302e:	je     0x1400030a6
   140003030:	lock add DWORD PTR [rbx],0x1
   140003034:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000303c:	jmp    0x1400030a6
   14000303e:	mov    edx,DWORD PTR [rbx+0x4]
   140003041:	lea    rcx,[rsp+0xb0]
   140003049:	call   QWORD PTR [rip+0xa4c1]        # 0x14000d510
   14000304f:	mov    rbx,QWORD PTR [rsp+0xb0]
   140003057:	mov    rcx,QWORD PTR [rdi+0x20]
   14000305b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000305f:	lea    rbp,[rbx+rax*8+0x10]
   140003064:	movsxd rax,DWORD PTR [rcx+0x8]
   140003068:	lea    rsi,[rcx+rax*8+0x10]
   14000306d:	movsxd rax,DWORD PTR [rbx+0x8]
   140003071:	lea    rdi,[rbx+rax*8+0x10]
   140003076:	cmp    rdi,rbp
   140003079:	je     0x1400030a6
   14000307b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003080:	test   rdi,rdi
   140003083:	je     0x140003091
   140003085:	mov    rdx,rsi
   140003088:	mov    rcx,rdi
   14000308b:	call   QWORD PTR [rip+0xa78f]        # 0x14000d820
   140003091:	add    rdi,0x8
   140003095:	add    rsi,0x8
   140003099:	cmp    rdi,rbp
   14000309c:	jne    0x140003080
   14000309e:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400030a6:	mov    QWORD PTR [rsp+0xb8],rbx
   1400030ae:	mov    eax,DWORD PTR [rbx]
   1400030b0:	test   eax,eax
   1400030b2:	je     0x1400030c7
   1400030b4:	cmp    eax,0xffffffff
   1400030b7:	je     0x14000312e
   1400030b9:	lock add DWORD PTR [rbx],0x1
   1400030bd:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400030c5:	jmp    0x14000312e
   1400030c7:	mov    edx,DWORD PTR [rbx+0x4]
   1400030ca:	lea    rcx,[rsp+0xb8]
   1400030d2:	call   QWORD PTR [rip+0xa438]        # 0x14000d510
   1400030d8:	mov    r11,QWORD PTR [rsp+0xb8]
   1400030e0:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400030e8:	movsxd rax,DWORD PTR [r11+0xc]
   1400030ec:	lea    rbp,[r11+rax*8+0x10]
   1400030f1:	movsxd rax,DWORD PTR [rbx+0x8]
   1400030f5:	lea    rsi,[rbx+rax*8+0x10]
   1400030fa:	movsxd rax,DWORD PTR [r11+0x8]
   1400030fe:	lea    rdi,[r11+rax*8+0x10]
   140003103:	cmp    rdi,rbp
   140003106:	je     0x14000312e
   140003108:	test   rdi,rdi
   14000310b:	je     0x140003119
   14000310d:	mov    rdx,rsi
   140003110:	mov    rcx,rdi
   140003113:	call   QWORD PTR [rip+0xa707]        # 0x14000d820
   140003119:	add    rdi,0x8
   14000311d:	add    rsi,0x8
   140003121:	cmp    rdi,rbp
   140003124:	jne    0x140003108
   140003126:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000312e:	mov    eax,DWORD PTR [rbx]
   140003130:	mov    rbp,QWORD PTR [rsp+0xc0]
   140003138:	test   eax,eax
   14000313a:	je     0x140003154
   14000313c:	cmp    eax,0xffffffff
   14000313f:	je     0x14000318b
   140003141:	lock add DWORD PTR [rbx],0xffffffff
   140003145:	setne  al
   140003148:	test   al,al
   14000314a:	jne    0x14000318b
   14000314c:	mov    rbx,QWORD PTR [rsp+0xb0]
   140003154:	movsxd rax,DWORD PTR [rbx+0xc]
   140003158:	lea    rdi,[rbx+rax*8+0x10]
   14000315d:	movsxd rax,DWORD PTR [rbx+0x8]
   140003161:	lea    rsi,[rbx+rax*8+0x10]
   140003166:	cmp    rsi,rdi
   140003169:	je     0x140003182
   14000316b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003170:	sub    rdi,0x8
   140003174:	mov    rcx,rdi
   140003177:	call   QWORD PTR [rip+0xa54b]        # 0x14000d6c8
   14000317d:	cmp    rdi,rsi
   140003180:	jne    0x140003170
   140003182:	mov    rcx,rbx
   140003185:	call   QWORD PTR [rip+0xa395]        # 0x14000d520
   14000318b:	lea    rcx,[rsp+0x70]
   140003190:	call   0x140002970
   140003195:	lea    rcx,[rsp+0x50]
   14000319a:	call   QWORD PTR [rip+0xa7b8]        # 0x14000d958
   1400031a0:	mov    rcx,QWORD PTR [r13+0x58]
   1400031a4:	lea    rdx,[rsp+0xb8]
   1400031ac:	call   QWORD PTR [rip+0xa326]        # 0x14000d4d8
   1400031b2:	mov    rdi,QWORD PTR [rsp+0xb8]
   1400031ba:	mov    eax,DWORD PTR [rdi]
   1400031bc:	test   eax,eax
   1400031be:	je     0x1400031d8
   1400031c0:	cmp    eax,0xffffffff
   1400031c3:	je     0x14000320b
   1400031c5:	lock add DWORD PTR [rdi],0xffffffff
   1400031c9:	setne  al
   1400031cc:	test   al,al
   1400031ce:	jne    0x14000320b
   1400031d0:	mov    rdi,QWORD PTR [rsp+0xb8]
   1400031d8:	movsxd rax,DWORD PTR [rdi+0xc]
   1400031dc:	lea    rbx,[rdi+rax*8+0x10]
   1400031e1:	movsxd rax,DWORD PTR [rdi+0x8]
   1400031e5:	lea    rsi,[rdi+rax*8+0x10]
   1400031ea:	cmp    rsi,rbx
   1400031ed:	je     0x140003202
   1400031ef:	nop
   1400031f0:	sub    rbx,0x8
   1400031f4:	mov    rcx,rbx
   1400031f7:	call   QWORD PTR [rip+0xa4cb]        # 0x14000d6c8
   1400031fd:	cmp    rbx,rsi
   140003200:	jne    0x1400031f0
   140003202:	mov    rcx,rdi
   140003205:	call   QWORD PTR [rip+0xa315]        # 0x14000d520
   14000320b:	mov    rsi,QWORD PTR [rsp+0x88]
   140003213:	mov    rdi,QWORD PTR [rsp+0x80]
   14000321b:	add    rsp,0x90
   140003222:	pop    r13
   140003224:	pop    r12
   140003226:	pop    rbx
   140003227:	ret    
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    rax,rsp
   140003233:	push   rbx
   140003234:	push   rbp
   140003235:	push   rsi
   140003236:	push   rdi
   140003237:	sub    rsp,0x208
   14000323e:	mov    rbx,rdx
   140003241:	mov    QWORD PTR [rax-0x28],r13
   140003245:	mov    r13,rcx
   140003248:	lea    rdx,[rax+0x18]
   14000324c:	mov    rcx,rbx
   14000324f:	call   QWORD PTR [rip+0xa67b]        # 0x14000d8d0
   140003255:	lea    rdx,[rip+0xcc5c]        # 0x14000feb8
   14000325c:	xor    eax,eax
   14000325e:	mov    rdi,rdx
   140003261:	mov    QWORD PTR [rsp+0x28],rdx
   140003266:	or     rsi,0xffffffffffffffff
   14000326a:	mov    rcx,rsi
   14000326d:	lea    rdx,[rsp+0x180]
   140003275:	repnz scas al,BYTE PTR es:[rdi]
   140003277:	not    rcx
   14000327a:	dec    rcx
   14000327d:	mov    DWORD PTR [rsp+0x20],ecx
   140003281:	lea    rcx,[rsp+0x230]
   140003289:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000328e:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   140003297:	call   QWORD PTR [rip+0xa3f3]        # 0x14000d690
   14000329d:	mov    rcx,rbx
   1400032a0:	call   QWORD PTR [rip+0xa632]        # 0x14000d8d8
   1400032a6:	sub    eax,0x2
   1400032a9:	je     0x140003395
   1400032af:	sub    eax,0x1
   1400032b2:	je     0x14000334f
   1400032b8:	cmp    eax,0x1
   1400032bb:	je     0x140003306
   1400032bd:	lea    rdx,[rip+0xcbe4]        # 0x14000fea8
   1400032c4:	xor    eax,eax
   1400032c6:	mov    rcx,rsi
   1400032c9:	mov    rdi,rdx
   1400032cc:	mov    QWORD PTR [rsp+0x28],rdx
   1400032d1:	lea    rdx,[rsp+0x1f0]
   1400032d9:	repnz scas al,BYTE PTR es:[rdi]
   1400032db:	not    rcx
   1400032de:	dec    rcx
   1400032e1:	mov    DWORD PTR [rsp+0x20],ecx
   1400032e5:	lea    rcx,[rsp+0x230]
   1400032ed:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400032f2:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   1400032fb:	call   QWORD PTR [rip+0xa1b7]        # 0x14000d4b8
   140003301:	jmp    0x1400033d9
   140003306:	lea    rdx,[rip+0xcb93]        # 0x14000fea0
   14000330d:	xor    eax,eax
   14000330f:	mov    rcx,rsi
   140003312:	mov    rdi,rdx
   140003315:	mov    QWORD PTR [rsp+0x28],rdx
   14000331a:	lea    rdx,[rsp+0x1c0]
   140003322:	repnz scas al,BYTE PTR es:[rdi]
   140003324:	not    rcx
   140003327:	dec    rcx
   14000332a:	mov    DWORD PTR [rsp+0x20],ecx
   14000332e:	lea    rcx,[rsp+0x230]
   140003336:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000333b:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   140003344:	call   QWORD PTR [rip+0xa16e]        # 0x14000d4b8
   14000334a:	jmp    0x1400033d9
   14000334f:	lea    rdx,[rip+0xcb3a]        # 0x14000fe90
   140003356:	xor    eax,eax
   140003358:	mov    rcx,rsi
   14000335b:	mov    rdi,rdx
   14000335e:	mov    QWORD PTR [rsp+0x28],rdx
   140003363:	lea    rdx,[rsp+0x140]
   14000336b:	repnz scas al,BYTE PTR es:[rdi]
   14000336d:	not    rcx
   140003370:	dec    rcx
   140003373:	mov    DWORD PTR [rsp+0x20],ecx
   140003377:	lea    rcx,[rsp+0x230]
   14000337f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140003384:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000338d:	call   QWORD PTR [rip+0xa125]        # 0x14000d4b8
   140003393:	jmp    0x1400033d9
   140003395:	lea    rdx,[rip+0xcaec]        # 0x14000fe88
   14000339c:	xor    eax,eax
   14000339e:	mov    rcx,rsi
   1400033a1:	mov    rdi,rdx
   1400033a4:	mov    QWORD PTR [rsp+0x28],rdx
   1400033a9:	lea    rdx,[rsp+0x1a0]
   1400033b1:	repnz scas al,BYTE PTR es:[rdi]
   1400033b3:	not    rcx
   1400033b6:	dec    rcx
   1400033b9:	mov    DWORD PTR [rsp+0x20],ecx
   1400033bd:	lea    rcx,[rsp+0x230]
   1400033c5:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400033ca:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   1400033d3:	call   QWORD PTR [rip+0xa0df]        # 0x14000d4b8
   1400033d9:	lea    rdx,[rip+0xcaa0]        # 0x14000fe80
   1400033e0:	xor    eax,eax
   1400033e2:	mov    rcx,rsi
   1400033e5:	mov    rdi,rdx
   1400033e8:	mov    QWORD PTR [rsp+0x28],rdx
   1400033ed:	lea    rdx,[rsp+0x160]
   1400033f5:	repnz scas al,BYTE PTR es:[rdi]
   1400033f7:	not    rcx
   1400033fa:	dec    rcx
   1400033fd:	mov    DWORD PTR [rsp+0x20],ecx
   140003401:	lea    rcx,[rsp+0x230]
   140003409:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000340e:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   140003417:	call   QWORD PTR [rip+0xa09b]        # 0x14000d4b8
   14000341d:	lea    rdx,[rsp+0xc8]
   140003425:	mov    rcx,rbx
   140003428:	call   QWORD PTR [rip+0xa4b2]        # 0x14000d8e0
   14000342e:	lea    rcx,[rsp+0x230]
   140003436:	mov    rdx,rax
   140003439:	call   QWORD PTR [rip+0xa3e9]        # 0x14000d828
   14000343f:	lea    rcx,[rsp+0xc8]
   140003447:	call   QWORD PTR [rip+0xa27b]        # 0x14000d6c8
   14000344d:	lea    rdx,[rsp+0x98]
   140003455:	mov    rcx,rbx
   140003458:	call   QWORD PTR [rip+0xa48a]        # 0x14000d8e8
   14000345e:	mov    rcx,QWORD PTR [rax]
   140003461:	cmp    DWORD PTR [rcx+0x4],0x0
   140003465:	lea    rcx,[rsp+0x98]
   14000346d:	setne  dil
   140003471:	call   QWORD PTR [rip+0xa251]        # 0x14000d6c8
   140003477:	test   dil,dil
   14000347a:	je     0x140003533
   140003480:	lea    rdx,[rip+0xc9f1]        # 0x14000fe78
   140003487:	xor    eax,eax
   140003489:	mov    rcx,rsi
   14000348c:	mov    rdi,rdx
   14000348f:	mov    QWORD PTR [rsp+0x28],rdx
   140003494:	lea    rdx,[rsp+0x1e0]
   14000349c:	repnz scas al,BYTE PTR es:[rdi]
   14000349e:	not    rcx
   1400034a1:	dec    rcx
   1400034a4:	mov    DWORD PTR [rsp+0x20],ecx
   1400034a8:	lea    rcx,[rsp+0x80]
   1400034b0:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400034b5:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   1400034be:	call   QWORD PTR [rip+0xa1cc]        # 0x14000d690
   1400034c4:	lea    rdx,[rsp+0xd8]
   1400034cc:	mov    rcx,rbx
   1400034cf:	call   QWORD PTR [rip+0xa413]        # 0x14000d8e8
   1400034d5:	lea    rdx,[rsp+0x80]
   1400034dd:	lea    rcx,[rsp+0x60]
   1400034e2:	mov    rdi,rax
   1400034e5:	call   QWORD PTR [rip+0xa335]        # 0x14000d820
   1400034eb:	lea    rcx,[rsp+0x60]
   1400034f0:	mov    rdx,rdi
   1400034f3:	call   QWORD PTR [rip+0xa32f]        # 0x14000d828
   1400034f9:	lea    rdx,[rsp+0x60]
   1400034fe:	lea    rcx,[rsp+0x230]
   140003506:	call   QWORD PTR [rip+0xa31c]        # 0x14000d828
   14000350c:	lea    rcx,[rsp+0x60]
   140003511:	call   QWORD PTR [rip+0xa1b1]        # 0x14000d6c8
   140003517:	lea    rcx,[rsp+0xd8]
   14000351f:	call   QWORD PTR [rip+0xa1a3]        # 0x14000d6c8
   140003525:	lea    rcx,[rsp+0x80]
   14000352d:	call   QWORD PTR [rip+0xa195]        # 0x14000d6c8
   140003533:	lea    rdx,[rsp+0xc0]
   14000353b:	mov    rcx,rbx
   14000353e:	call   QWORD PTR [rip+0xa3ac]        # 0x14000d8f0
   140003544:	mov    rcx,QWORD PTR [rax]
   140003547:	cmp    DWORD PTR [rcx+0x4],0x0
   14000354b:	lea    rcx,[rsp+0xc0]
   140003553:	setne  dil
   140003557:	call   QWORD PTR [rip+0xa16b]        # 0x14000d6c8
   14000355d:	test   dil,dil
   140003560:	je     0x140003690
   140003566:	lea    rdx,[rip+0xc903]        # 0x14000fe70
   14000356d:	xor    eax,eax
   14000356f:	mov    rcx,rsi
   140003572:	mov    rdi,rdx
   140003575:	mov    QWORD PTR [rsp+0x28],rdx
   14000357a:	lea    rdx,[rsp+0x110]
   140003582:	repnz scas al,BYTE PTR es:[rdi]
   140003584:	not    rcx
   140003587:	dec    rcx
   14000358a:	mov    DWORD PTR [rsp+0x20],ecx
   14000358e:	lea    rcx,[rsp+0x90]
   140003596:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000359b:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   1400035a4:	call   QWORD PTR [rip+0xa0e6]        # 0x14000d690
   1400035aa:	lea    rdx,[rip+0xc8af]        # 0x14000fe60
   1400035b1:	mov    rdi,rdx
   1400035b4:	mov    QWORD PTR [rsp+0x28],rdx
   1400035b9:	xor    eax,eax
   1400035bb:	mov    rcx,rsi
   1400035be:	lea    rdx,[rsp+0x120]
   1400035c6:	repnz scas al,BYTE PTR es:[rdi]
   1400035c8:	not    rcx
   1400035cb:	dec    rcx
   1400035ce:	mov    DWORD PTR [rsp+0x20],ecx
   1400035d2:	lea    rcx,[rsp+0x70]
   1400035d7:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400035dc:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   1400035e5:	call   QWORD PTR [rip+0xa0a5]        # 0x14000d690
   1400035eb:	lea    rdx,[rsp+0xb0]
   1400035f3:	mov    rcx,rbx
   1400035f6:	call   QWORD PTR [rip+0xa2f4]        # 0x14000d8f0
   1400035fc:	lea    rdx,[rsp+0x70]
   140003601:	lea    rcx,[rsp+0x68]
   140003606:	mov    rdi,rax
   140003609:	call   QWORD PTR [rip+0xa211]        # 0x14000d820
   14000360f:	lea    rcx,[rsp+0x68]
   140003614:	mov    rdx,rdi
   140003617:	call   QWORD PTR [rip+0xa20b]        # 0x14000d828
   14000361d:	lea    rdx,[rsp+0x68]
   140003622:	lea    rcx,[rsp+0x58]
   140003627:	call   QWORD PTR [rip+0xa1f3]        # 0x14000d820
   14000362d:	lea    rdx,[rsp+0x90]
   140003635:	lea    rcx,[rsp+0x58]
   14000363a:	call   QWORD PTR [rip+0xa1e8]        # 0x14000d828
   140003640:	lea    rdx,[rsp+0x58]
   140003645:	lea    rcx,[rsp+0x230]
   14000364d:	call   QWORD PTR [rip+0xa1d5]        # 0x14000d828
   140003653:	lea    rcx,[rsp+0x58]
   140003658:	call   QWORD PTR [rip+0xa06a]        # 0x14000d6c8
   14000365e:	lea    rcx,[rsp+0x68]
   140003663:	call   QWORD PTR [rip+0xa05f]        # 0x14000d6c8
   140003669:	lea    rcx,[rsp+0xb0]
   140003671:	call   QWORD PTR [rip+0xa051]        # 0x14000d6c8
   140003677:	lea    rcx,[rsp+0x70]
   14000367c:	call   QWORD PTR [rip+0xa046]        # 0x14000d6c8
   140003682:	lea    rcx,[rsp+0x90]
   14000368a:	call   QWORD PTR [rip+0xa038]        # 0x14000d6c8
   140003690:	lea    rdx,[rsp+0xd0]
   140003698:	mov    rcx,rbx
   14000369b:	call   QWORD PTR [rip+0xa257]        # 0x14000d8f8
   1400036a1:	mov    rcx,QWORD PTR [rax]
   1400036a4:	cmp    DWORD PTR [rcx+0x4],0x0
   1400036a8:	lea    rcx,[rsp+0xd0]
   1400036b0:	setne  dil
   1400036b4:	call   QWORD PTR [rip+0xa00e]        # 0x14000d6c8
   1400036ba:	test   dil,dil
   1400036bd:	je     0x140003776
   1400036c3:	lea    rdx,[rip+0xc786]        # 0x14000fe50
   1400036ca:	xor    eax,eax
   1400036cc:	mov    rcx,rsi
   1400036cf:	mov    rdi,rdx
   1400036d2:	mov    QWORD PTR [rsp+0x28],rdx
   1400036d7:	lea    rdx,[rsp+0x130]
   1400036df:	repnz scas al,BYTE PTR es:[rdi]
   1400036e1:	not    rcx
   1400036e4:	dec    rcx
   1400036e7:	mov    DWORD PTR [rsp+0x20],ecx
   1400036eb:	lea    rcx,[rsp+0x88]
   1400036f3:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400036f8:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   140003701:	call   QWORD PTR [rip+0x9f89]        # 0x14000d690
   140003707:	lea    rdx,[rsp+0xa0]
   14000370f:	mov    rcx,rbx
   140003712:	call   QWORD PTR [rip+0xa1e0]        # 0x14000d8f8
   140003718:	lea    rdx,[rsp+0x88]
   140003720:	lea    rcx,[rsp+0x50]
   140003725:	mov    rdi,rax
   140003728:	call   QWORD PTR [rip+0xa0f2]        # 0x14000d820
   14000372e:	lea    rcx,[rsp+0x50]
   140003733:	mov    rdx,rdi
   140003736:	call   QWORD PTR [rip+0xa0ec]        # 0x14000d828
   14000373c:	lea    rdx,[rsp+0x50]
   140003741:	lea    rcx,[rsp+0x230]
   140003749:	call   QWORD PTR [rip+0xa0d9]        # 0x14000d828
   14000374f:	lea    rcx,[rsp+0x50]
   140003754:	call   QWORD PTR [rip+0x9f6e]        # 0x14000d6c8
   14000375a:	lea    rcx,[rsp+0xa0]
   140003762:	call   QWORD PTR [rip+0x9f60]        # 0x14000d6c8
   140003768:	lea    rcx,[rsp+0x88]
   140003770:	call   QWORD PTR [rip+0x9f52]        # 0x14000d6c8
   140003776:	lea    rdx,[rip+0xb28f]        # 0x14000ea0c
   14000377d:	xor    eax,eax
   14000377f:	mov    rcx,rsi
   140003782:	mov    rdi,rdx
   140003785:	mov    QWORD PTR [rsp+0x28],rdx
   14000378a:	lea    rdx,[rsp+0x150]
   140003792:	repnz scas al,BYTE PTR es:[rdi]
   140003794:	not    rcx
   140003797:	dec    rcx
   14000379a:	mov    DWORD PTR [rsp+0x20],ecx
   14000379e:	lea    rcx,[rsp+0x230]
   1400037a6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400037ab:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   1400037b4:	call   QWORD PTR [rip+0x9cfe]        # 0x14000d4b8
   1400037ba:	mov    rdx,QWORD PTR [rsp+0x240]
   1400037c2:	mov    eax,DWORD PTR [rdx+0x8]
   1400037c5:	cmp    DWORD PTR [rdx+0xc],eax
   1400037c8:	jne    0x140003813
   1400037ca:	lea    rdx,[rip+0xc65f]        # 0x14000fe30
   1400037d1:	xor    eax,eax
   1400037d3:	mov    rcx,rsi
   1400037d6:	mov    rdi,rdx
   1400037d9:	mov    QWORD PTR [rsp+0x28],rdx
   1400037de:	lea    rdx,[rsp+0x170]
   1400037e6:	repnz scas al,BYTE PTR es:[rdi]
   1400037e8:	not    rcx
   1400037eb:	dec    rcx
   1400037ee:	mov    DWORD PTR [rsp+0x20],ecx
   1400037f2:	lea    rcx,[rsp+0x230]
   1400037fa:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400037ff:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   140003808:	call   QWORD PTR [rip+0x9caa]        # 0x14000d4b8
   14000380e:	jmp    0x140003b97
   140003813:	lea    rdx,[rip+0xc5fe]        # 0x14000fe18
   14000381a:	xor    eax,eax
   14000381c:	mov    rcx,rsi
   14000381f:	mov    rdi,rdx
   140003822:	mov    QWORD PTR [rsp+0x28],rdx
   140003827:	lea    rdx,[rsp+0x190]
   14000382f:	repnz scas al,BYTE PTR es:[rdi]
   140003831:	mov    QWORD PTR [rsp+0x238],r12
   140003839:	not    rcx
   14000383c:	dec    rcx
   14000383f:	mov    DWORD PTR [rsp+0x20],ecx
   140003843:	lea    rcx,[rsp+0x230]
   14000384b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140003850:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   140003859:	call   QWORD PTR [rip+0x9c59]        # 0x14000d4b8
   14000385f:	mov    r11,QWORD PTR [rsp+0x240]
   140003867:	mov    QWORD PTR [rsp+0x30],r11
   14000386c:	mov    eax,DWORD PTR [r11]
   14000386f:	xor    edi,edi
   140003871:	test   eax,eax
   140003873:	je     0x140003886
   140003875:	cmp    eax,0xffffffff
   140003878:	je     0x1400038f8
   14000387a:	lock add DWORD PTR [r11],0x1
   14000387f:	mov    r11,QWORD PTR [rsp+0x30]
   140003884:	jmp    0x1400038f8
   140003886:	mov    edx,DWORD PTR [r11+0x4]
   14000388a:	lea    rcx,[rsp+0x30]
   14000388f:	call   QWORD PTR [rip+0x9c7b]        # 0x14000d510
   140003895:	mov    r11,QWORD PTR [rsp+0x30]
   14000389a:	movsxd rax,DWORD PTR [r11+0xc]
   14000389e:	lea    r12,[r11+rax*8+0x10]
   1400038a3:	mov    rax,QWORD PTR [rsp+0x240]
   1400038ab:	movsxd rcx,DWORD PTR [rax+0x8]
   1400038af:	lea    rbp,[rax+rcx*8+0x10]
   1400038b4:	movsxd rax,DWORD PTR [r11+0x8]
   1400038b8:	lea    rbx,[r11+rax*8+0x10]
   1400038bd:	cmp    rbx,r12
   1400038c0:	je     0x1400038f8
   1400038c2:	mov    ecx,0x10
   1400038c7:	call   0x14000b8c2
   1400038cc:	test   rax,rax
   1400038cf:	je     0x1400038e0
   1400038d1:	mov    rdx,QWORD PTR [rbp+0x0]
   1400038d5:	mov    rcx,rax
   1400038d8:	call   QWORD PTR [rip+0x9f22]        # 0x14000d800
   1400038de:	jmp    0x1400038e3
   1400038e0:	mov    rax,rdi
   1400038e3:	mov    QWORD PTR [rbx],rax
   1400038e6:	add    rbx,0x8
   1400038ea:	add    rbp,0x8
   1400038ee:	cmp    rbx,r12
   1400038f1:	jne    0x1400038c2
   1400038f3:	mov    r11,QWORD PTR [rsp+0x30]
   1400038f8:	mov    DWORD PTR [rsp+0x38],edi
   1400038fc:	movsxd rax,DWORD PTR [r11+0x8]
   140003900:	lea    rbx,[rip+0xc4e1]        # 0x14000fde8
   140003907:	lea    rcx,[r11+rax*8+0x10]
   14000390c:	lea    rbp,[rip+0xc4d1]        # 0x14000fde4
   140003913:	mov    QWORD PTR [rsp+0x40],rcx
   140003918:	movsxd rax,DWORD PTR [r11+0xc]
   14000391c:	lea    rdx,[r11+rax*8+0x10]
   140003921:	mov    QWORD PTR [rsp+0x48],rdx
   140003926:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003930:	mov    eax,edi
   140003932:	inc    edi
   140003934:	mov    DWORD PTR [rsp+0x38],edi
   140003938:	test   eax,eax
   14000393a:	jne    0x140003b11
   140003940:	cmp    rcx,rdx
   140003943:	je     0x140003b11
   140003949:	mov    rdx,QWORD PTR [rcx]
   14000394c:	lea    rcx,[rsp+0x100]
   140003954:	call   QWORD PTR [rip+0x9ea6]        # 0x14000d800
   14000395a:	mov    edx,DWORD PTR [rsp+0x38]
   14000395e:	xchg   ax,ax
   140003960:	test   edx,edx
   140003962:	je     0x140003ae7
   140003968:	lea    rdx,[rsp+0x100]
   140003970:	lea    rcx,[rsp+0xa8]
   140003978:	call   QWORD PTR [rip+0x9f82]        # 0x14000d900
   14000397e:	lea    rdx,[rsp+0x248]
   140003986:	mov    rcx,rax
   140003989:	call   QWORD PTR [rip+0x9d09]        # 0x14000d698
   14000398f:	lea    rcx,[rsp+0xa8]
   140003997:	call   QWORD PTR [rip+0x9d2b]        # 0x14000d6c8
   14000399d:	xor    eax,eax
   14000399f:	mov    rcx,rsi
   1400039a2:	mov    rdi,rbx
   1400039a5:	mov    QWORD PTR [rsp+0xe8],rbx
   1400039ad:	lea    rdx,[rsp+0x1b0]
   1400039b5:	repnz scas al,BYTE PTR es:[rdi]
   1400039b7:	not    rcx
   1400039ba:	dec    rcx
   1400039bd:	mov    DWORD PTR [rsp+0xe0],ecx
   1400039c4:	lea    rcx,[rsp+0x78]
   1400039c9:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   1400039d1:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   1400039da:	call   QWORD PTR [rip+0x9cb0]        # 0x14000d690
   1400039e0:	lea    rdx,[r13+0x90]
   1400039e7:	lea    r8,[rsp+0x78]
   1400039ec:	lea    rcx,[rsp+0x248]
   1400039f4:	call   QWORD PTR [rip+0x9ac6]        # 0x14000d4c0
   1400039fa:	lea    rcx,[rsp+0x78]
   1400039ff:	call   QWORD PTR [rip+0x9cc3]        # 0x14000d6c8
   140003a05:	lea    rdx,[rip+0xc3d0]        # 0x14000fddc
   140003a0c:	lea    rcx,[rsp+0x20]
   140003a11:	mov    r8d,0x5
   140003a17:	call   QWORD PTR [rip+0x9cbb]        # 0x14000d6d8
   140003a1d:	lea    rdx,[rip+0xc3b4]        # 0x14000fdd8
   140003a24:	lea    rcx,[rsp+0xb8]
   140003a2c:	mov    r8d,0x1
   140003a32:	mov    rdi,rax
   140003a35:	call   QWORD PTR [rip+0x9c9d]        # 0x14000d6d8
   140003a3b:	lea    rcx,[rsp+0x248]
   140003a43:	mov    r9d,0x1
   140003a49:	mov    rdx,rax
   140003a4c:	mov    r8,rdi
   140003a4f:	call   QWORD PTR [rip+0x9a73]        # 0x14000d4c8
   140003a55:	lea    rcx,[rsp+0xb8]
   140003a5d:	call   QWORD PTR [rip+0x9c65]        # 0x14000d6c8
   140003a63:	lea    rcx,[rsp+0x20]
   140003a68:	call   QWORD PTR [rip+0x9c5a]        # 0x14000d6c8
   140003a6e:	lea    rdx,[rsp+0x248]
   140003a76:	lea    rcx,[rsp+0x230]
   140003a7e:	call   QWORD PTR [rip+0x9da4]        # 0x14000d828
   140003a84:	xor    eax,eax
   140003a86:	mov    rcx,rsi
   140003a89:	mov    rdi,rbp
   140003a8c:	mov    QWORD PTR [rsp+0xf8],rbp
   140003a94:	lea    rdx,[rsp+0x1d0]
   140003a9c:	repnz scas al,BYTE PTR es:[rdi]
   140003a9e:	not    rcx
   140003aa1:	dec    rcx
   140003aa4:	mov    DWORD PTR [rsp+0xf0],ecx
   140003aab:	lea    rcx,[rsp+0x230]
   140003ab3:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140003abb:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   140003ac4:	call   QWORD PTR [rip+0x99ee]        # 0x14000d4b8
   140003aca:	lea    rcx,[rsp+0x248]
   140003ad2:	call   QWORD PTR [rip+0x9bf0]        # 0x14000d6c8
   140003ad8:	mov    edx,DWORD PTR [rsp+0x38]
   140003adc:	dec    edx
   140003ade:	mov    DWORD PTR [rsp+0x38],edx
   140003ae2:	jmp    0x140003960
   140003ae7:	lea    rcx,[rsp+0x100]
   140003aef:	call   QWORD PTR [rip+0x9d03]        # 0x14000d7f8
   140003af5:	mov    rcx,QWORD PTR [rsp+0x40]
   140003afa:	mov    rdx,QWORD PTR [rsp+0x48]
   140003aff:	mov    edi,DWORD PTR [rsp+0x38]
   140003b03:	add    rcx,0x8
   140003b07:	mov    QWORD PTR [rsp+0x40],rcx
   140003b0c:	jmp    0x140003930
   140003b11:	mov    rbp,QWORD PTR [rsp+0x30]
   140003b16:	mov    eax,DWORD PTR [rbp+0x0]
   140003b19:	test   eax,eax
   140003b1b:	je     0x140003b38
   140003b1d:	cmp    eax,0xffffffff
   140003b20:	je     0x140003b7c
   140003b22:	mov    eax,esi
   140003b24:	lock xadd DWORD PTR [rbp+0x0],eax
   140003b29:	add    eax,0xffffffff
   140003b2c:	setne  al
   140003b2f:	test   al,al
   140003b31:	jne    0x140003b7c
   140003b33:	mov    rbp,QWORD PTR [rsp+0x30]
   140003b38:	movsxd rax,DWORD PTR [rbp+0xc]
   140003b3c:	lea    rdi,[rbp+rax*8+0x10]
   140003b41:	movsxd rax,DWORD PTR [rbp+0x8]
   140003b45:	lea    r12,[rbp+rax*8+0x10]
   140003b4a:	cmp    r12,rdi
   140003b4d:	je     0x140003b73
   140003b4f:	nop
   140003b50:	mov    rbx,QWORD PTR [rdi-0x8]
   140003b54:	sub    rdi,0x8
   140003b58:	test   rbx,rbx
   140003b5b:	je     0x140003b6e
   140003b5d:	mov    rcx,rbx
   140003b60:	call   QWORD PTR [rip+0x9c92]        # 0x14000d7f8
   140003b66:	mov    rcx,rbx
   140003b69:	call   0x14000b8c8
   140003b6e:	cmp    rdi,r12
   140003b71:	jne    0x140003b50
   140003b73:	mov    rcx,rbp
   140003b76:	call   QWORD PTR [rip+0x99a4]        # 0x14000d520
   140003b7c:	lea    rcx,[rsp+0x230]
   140003b84:	mov    edx,0x2
   140003b89:	call   QWORD PTR [rip+0x9941]        # 0x14000d4d0
   140003b8f:	mov    r12,QWORD PTR [rsp+0x238]
   140003b97:	mov    rcx,QWORD PTR [r13+0x78]
   140003b9b:	lea    rdx,[rsp+0x230]
   140003ba3:	call   QWORD PTR [rip+0xab87]        # 0x14000e730
   140003ba9:	lea    rcx,[rsp+0x230]
   140003bb1:	call   QWORD PTR [rip+0x9b11]        # 0x14000d6c8
   140003bb7:	mov    rbp,QWORD PTR [rsp+0x240]
   140003bbf:	mov    r13,QWORD PTR [rsp+0x200]
   140003bc7:	mov    eax,DWORD PTR [rbp+0x0]
   140003bca:	test   eax,eax
   140003bcc:	je     0x140003bea
   140003bce:	cmp    eax,0xffffffff
   140003bd1:	je     0x140003c2d
   140003bd3:	lock xadd DWORD PTR [rbp+0x0],esi
   140003bd8:	add    esi,0xffffffff
   140003bdb:	setne  al
   140003bde:	test   al,al
   140003be0:	jne    0x140003c2d
   140003be2:	mov    rbp,QWORD PTR [rsp+0x240]
   140003bea:	movsxd rax,DWORD PTR [rbp+0xc]
   140003bee:	lea    rdi,[rbp+rax*8+0x10]
   140003bf3:	movsxd rax,DWORD PTR [rbp+0x8]
   140003bf7:	lea    rsi,[rbp+rax*8+0x10]
   140003bfc:	cmp    rsi,rdi
   140003bff:	je     0x140003c24
   140003c01:	mov    rbx,QWORD PTR [rdi-0x8]
   140003c05:	sub    rdi,0x8
   140003c09:	test   rbx,rbx
   140003c0c:	je     0x140003c1f
   140003c0e:	mov    rcx,rbx
   140003c11:	call   QWORD PTR [rip+0x9be1]        # 0x14000d7f8
   140003c17:	mov    rcx,rbx
   140003c1a:	call   0x14000b8c8
   140003c1f:	cmp    rdi,rsi
   140003c22:	jne    0x140003c01
   140003c24:	mov    rcx,rbp
   140003c27:	call   QWORD PTR [rip+0x98f3]        # 0x14000d520
   140003c2d:	add    rsp,0x208
   140003c34:	pop    rdi
   140003c35:	pop    rsi
   140003c36:	pop    rbp
   140003c37:	pop    rbx
   140003c38:	ret    
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	rex push rbx
   140003c42:	push   rbp
   140003c43:	push   rsi
   140003c44:	push   rdi
   140003c45:	sub    rsp,0x78
   140003c49:	mov    rsi,rcx
   140003c4c:	mov    rbx,rdx
   140003c4f:	lea    rdx,[rip+0xc292]        # 0x14000fee8
   140003c56:	mov    rdi,rdx
   140003c59:	mov    QWORD PTR [rsp+0x48],rdx
   140003c5e:	xor    eax,eax
   140003c60:	or     rbp,0xffffffffffffffff
   140003c64:	lea    rdx,[rsp+0x50]
   140003c69:	mov    rcx,rbp
   140003c6c:	repnz scas al,BYTE PTR es:[rdi]
   140003c6e:	not    rcx
   140003c71:	dec    rcx
   140003c74:	mov    DWORD PTR [rsp+0x40],ecx
   140003c78:	lea    rcx,[rsp+0xb8]
   140003c80:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003c85:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140003c8b:	call   QWORD PTR [rip+0x99ff]        # 0x14000d690
   140003c91:	lea    rdx,[rip+0xc230]        # 0x14000fec8
   140003c98:	mov    rdi,rdx
   140003c9b:	mov    QWORD PTR [rsp+0x48],rdx
   140003ca0:	xor    eax,eax
   140003ca2:	mov    rcx,rbp
   140003ca5:	lea    rdx,[rsp+0x60]
   140003caa:	repnz scas al,BYTE PTR es:[rdi]
   140003cac:	not    rcx
   140003caf:	dec    rcx
   140003cb2:	mov    DWORD PTR [rsp+0x40],ecx
   140003cb6:	lea    rcx,[rsp+0xb0]
   140003cbe:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003cc3:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140003cc9:	call   QWORD PTR [rip+0x99c1]        # 0x14000d690
   140003ccf:	lea    rax,[rsp+0xb8]
   140003cd7:	lea    r8,[rbx+0x8]
   140003cdb:	lea    r9,[rsp+0xb0]
   140003ce3:	lea    rcx,[rsp+0xa8]
   140003ceb:	mov    rdx,rbx
   140003cee:	mov    QWORD PTR [rsp+0x20],rax
   140003cf3:	call   QWORD PTR [rip+0x9bb7]        # 0x14000d8b0
   140003cf9:	lea    rcx,[rsp+0xb0]
   140003d01:	call   QWORD PTR [rip+0x99c1]        # 0x14000d6c8
   140003d07:	lea    rcx,[rsp+0xb8]
   140003d0f:	call   QWORD PTR [rip+0x99b3]        # 0x14000d6c8
   140003d15:	mov    rdx,QWORD PTR [rip+0x981c]        # 0x14000d538
   140003d1c:	lea    rcx,[rsp+0x40]
   140003d21:	mov    QWORD PTR [rsp+0xa0],rdx
   140003d29:	lea    rdx,[rbx+0x18]
   140003d2d:	call   QWORD PTR [rip+0x9915]        # 0x14000d648
   140003d33:	lea    rdx,[rbx+0x10]
   140003d37:	lea    rcx,[rsp+0x30]
   140003d3c:	call   QWORD PTR [rip+0x9906]        # 0x14000d648
   140003d42:	mov    rdx,QWORD PTR [rsp+0xa0]
   140003d4a:	mov    eax,DWORD PTR [rdx]
   140003d4c:	cmp    eax,0x1
   140003d4f:	je     0x140003d6d
   140003d51:	test   eax,eax
   140003d53:	je     0x140003d6d
   140003d55:	lea    r8d,[rbp+0x2]
   140003d59:	lea    rcx,[rsp+0xa0]
   140003d61:	mov    edx,0x7fffffff
   140003d66:	call   0x140002b40
   140003d6b:	jmp    0x140003d7b
   140003d6d:	lea    rcx,[rsp+0xa0]
   140003d75:	call   QWORD PTR [rip+0x9765]        # 0x14000d4e0
   140003d7b:	mov    ecx,0x10
   140003d80:	mov    rbx,rax
   140003d83:	call   0x14000b8c2
   140003d88:	xor    edi,edi
   140003d8a:	test   rax,rax
   140003d8d:	je     0x140003d9f
   140003d8f:	lea    rdx,[rsp+0x30]
   140003d94:	mov    rcx,rax
   140003d97:	call   QWORD PTR [rip+0x9a63]        # 0x14000d800
   140003d9d:	jmp    0x140003da2
   140003d9f:	mov    rax,rdi
   140003da2:	mov    QWORD PTR [rbx],rax
   140003da5:	mov    rax,QWORD PTR [rsp+0xa0]
   140003dad:	mov    ecx,DWORD PTR [rax]
   140003daf:	cmp    ecx,0x1
   140003db2:	je     0x140003dd2
   140003db4:	test   ecx,ecx
   140003db6:	je     0x140003dd2
   140003db8:	lea    rcx,[rsp+0xa0]
   140003dc0:	mov    edx,0x7fffffff
   140003dc5:	mov    r8d,0x1
   140003dcb:	call   0x140002b40
   140003dd0:	jmp    0x140003de0
   140003dd2:	lea    rcx,[rsp+0xa0]
   140003dda:	call   QWORD PTR [rip+0x9700]        # 0x14000d4e0
   140003de0:	mov    ecx,0x10
   140003de5:	mov    rbx,rax
   140003de8:	call   0x14000b8c2
   140003ded:	test   rax,rax
   140003df0:	je     0x140003e03
   140003df2:	lea    rdx,[rsp+0x40]
   140003df7:	mov    rcx,rax
   140003dfa:	call   QWORD PTR [rip+0x9a00]        # 0x14000d800
   140003e00:	mov    rdi,rax
   140003e03:	lea    rcx,[rsp+0x30]
   140003e08:	mov    QWORD PTR [rbx],rdi
   140003e0b:	call   QWORD PTR [rip+0x99e7]        # 0x14000d7f8
   140003e11:	lea    rcx,[rsp+0x40]
   140003e16:	call   QWORD PTR [rip+0x99dc]        # 0x14000d7f8
   140003e1c:	lea    rdx,[rsp+0xa0]
   140003e24:	lea    rcx,[rsp+0xa8]
   140003e2c:	call   QWORD PTR [rip+0x9a86]        # 0x14000d8b8
   140003e32:	lea    rcx,[rsi+0x30]
   140003e36:	lea    r9,[rip+0xac2b]        # 0x14000ea68
   140003e3d:	lea    rdx,[rsp+0xa8]
   140003e45:	mov    r8,rsi
   140003e48:	mov    DWORD PTR [rsp+0x20],ebp
   140003e4c:	call   QWORD PTR [rip+0x9a6e]        # 0x14000d8c0
   140003e52:	mov    rsi,QWORD PTR [rsp+0xa0]
   140003e5a:	mov    eax,DWORD PTR [rsi]
   140003e5c:	test   eax,eax
   140003e5e:	je     0x140003e7b
   140003e60:	cmp    eax,0xffffffff
   140003e63:	je     0x140003ebe
   140003e65:	lock xadd DWORD PTR [rsi],ebp
   140003e69:	add    ebp,0xffffffff
   140003e6c:	setne  al
   140003e6f:	test   al,al
   140003e71:	jne    0x140003ebe
   140003e73:	mov    rsi,QWORD PTR [rsp+0xa0]
   140003e7b:	movsxd rax,DWORD PTR [rsi+0xc]
   140003e7f:	lea    rdi,[rsi+rax*8+0x10]
   140003e84:	movsxd rax,DWORD PTR [rsi+0x8]
   140003e88:	lea    rbp,[rsi+rax*8+0x10]
   140003e8d:	cmp    rbp,rdi
   140003e90:	je     0x140003eb5
   140003e92:	mov    rbx,QWORD PTR [rdi-0x8]
   140003e96:	sub    rdi,0x8
   140003e9a:	test   rbx,rbx
   140003e9d:	je     0x140003eb0
   140003e9f:	mov    rcx,rbx
   140003ea2:	call   QWORD PTR [rip+0x9950]        # 0x14000d7f8
   140003ea8:	mov    rcx,rbx
   140003eab:	call   0x14000b8c8
   140003eb0:	cmp    rdi,rbp
   140003eb3:	jne    0x140003e92
   140003eb5:	mov    rcx,rsi
   140003eb8:	call   QWORD PTR [rip+0x9662]        # 0x14000d520
   140003ebe:	lea    rcx,[rsp+0xa8]
   140003ec6:	call   QWORD PTR [rip+0x99fc]        # 0x14000d8c8
   140003ecc:	add    rsp,0x78
   140003ed0:	pop    rdi
   140003ed1:	pop    rsi
   140003ed2:	pop    rbp
   140003ed3:	pop    rbx
   140003ed4:	ret    
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	rex push rbx
   140003ee2:	push   rbp
   140003ee3:	push   rsi
   140003ee4:	push   rdi
   140003ee5:	push   r12
   140003ee7:	push   r13
   140003ee9:	push   r14
   140003eeb:	push   r15
   140003eed:	sub    rsp,0x158
   140003ef4:	lea    rax,[rcx+0x30]
   140003ef8:	mov    rsi,rcx
   140003efb:	xor    ebx,ebx
   140003efd:	lea    rcx,[rsp+0x90]
   140003f05:	lea    r9,[rdx+0x10]
   140003f09:	lea    r8,[rdx+0x8]
   140003f0d:	mov    QWORD PTR [rsp+0x28],rbx
   140003f12:	mov    r12,rdx
   140003f15:	mov    QWORD PTR [rsp+0x20],rax
   140003f1a:	call   QWORD PTR [rip+0x9978]        # 0x14000d898
   140003f20:	lea    rdx,[rsp+0xf0]
   140003f28:	lea    rcx,[r12+0x18]
   140003f2d:	call   QWORD PTR [rip+0x953d]        # 0x14000d470
   140003f33:	mov    rcx,rax
   140003f36:	call   QWORD PTR [rip+0x953c]        # 0x14000d478
   140003f3c:	lea    rcx,[rsp+0x90]
   140003f44:	mov    rdi,rax
   140003f47:	call   QWORD PTR [rip+0x9953]        # 0x14000d8a0
   140003f4d:	mov    rdx,rdi
   140003f50:	mov    rcx,rax
   140003f53:	call   QWORD PTR [rip+0x9527]        # 0x14000d480
   140003f59:	lea    rcx,[rsp+0x90]
   140003f61:	mov    edi,eax
   140003f63:	call   QWORD PTR [rip+0x9937]        # 0x14000d8a0
   140003f69:	lea    rdx,[rsp+0x130]
   140003f71:	mov    rcx,rax
   140003f74:	mov    r8d,edi
   140003f77:	call   QWORD PTR [rip+0x950b]        # 0x14000d488
   140003f7d:	lea    rcx,[rsp+0xf0]
   140003f85:	call   QWORD PTR [rip+0x9745]        # 0x14000d6d0
   140003f8b:	lea    r8,[rip+0xbfb6]        # 0x14000ff48
   140003f92:	lea    rdx,[rsp+0x80]
   140003f9a:	lea    rcx,[rip+0x1c62f]        # 0x1400205d0
   140003fa1:	or     rbp,0xffffffffffffffff
   140003fa5:	xor    r9d,r9d
   140003fa8:	mov    DWORD PTR [rsp+0x1a8],ebx
   140003faf:	mov    DWORD PTR [rsp+0x20],ebp
   140003fb3:	call   QWORD PTR [rip+0x9857]        # 0x14000d810
   140003fb9:	lea    r8,[rip+0xbf78]        # 0x14000ff38
   140003fc0:	lea    rdx,[rsp+0xa0]
   140003fc8:	lea    rcx,[rip+0x1c601]        # 0x1400205d0
   140003fcf:	xor    r9d,r9d
   140003fd2:	mov    DWORD PTR [rsp+0x20],ebp
   140003fd6:	call   QWORD PTR [rip+0x9834]        # 0x14000d810
   140003fdc:	lea    rcx,[rsp+0xc0]
   140003fe4:	call   QWORD PTR [rip+0x969e]        # 0x14000d688
   140003fea:	lea    rcx,[rsp+0x130]
   140003ff2:	mov    rdi,rax
   140003ff5:	call   QWORD PTR [rip+0x9495]        # 0x14000d490
   140003ffb:	lea    rcx,[rsp+0xb8]
   140004003:	mov    rdx,rax
   140004006:	mov    r8d,ebp
   140004009:	call   QWORD PTR [rip+0x94e9]        # 0x14000d4f8
   14000400f:	lea    r8,[r12+0x18]
   140004014:	lea    rdx,[rsp+0xc8]
   14000401c:	lea    rcx,[rsp+0x80]
   140004024:	mov    r9,rax
   140004027:	call   QWORD PTR [rip+0x946b]        # 0x14000d498
   14000402d:	mov    DWORD PTR [rsp+0x40],ebx
   140004031:	mov    DWORD PTR [rsp+0x38],ebx
   140004035:	mov    r9,rax
   140004038:	lea    rax,[rsp+0x1a0]
   140004040:	lea    r8,[rsp+0xa0]
   140004048:	mov    QWORD PTR [rsp+0x30],rax
   14000404d:	lea    rcx,[rsp+0x1b8]
   140004055:	mov    rdx,rsi
   140004058:	mov    QWORD PTR [rsp+0x28],rdi
   14000405d:	mov    DWORD PTR [rsp+0x20],ebx
   140004061:	call   QWORD PTR [rip+0x9f19]        # 0x14000df80
   140004067:	lea    rcx,[rsp+0xa0]
   14000406f:	call   QWORD PTR [rip+0x9653]        # 0x14000d6c8
   140004075:	lea    rcx,[rsp+0xc8]
   14000407d:	call   QWORD PTR [rip+0x9645]        # 0x14000d6c8
   140004083:	lea    rcx,[rsp+0x80]
   14000408b:	call   QWORD PTR [rip+0x9637]        # 0x14000d6c8
   140004091:	lea    rcx,[rsp+0xb8]
   140004099:	call   QWORD PTR [rip+0x9629]        # 0x14000d6c8
   14000409f:	lea    rcx,[rsp+0xc0]
   1400040a7:	call   QWORD PTR [rip+0x961b]        # 0x14000d6c8
   1400040ad:	cmp    BYTE PTR [rsp+0x1a0],bl
   1400040b4:	je     0x1400044b5
   1400040ba:	lea    rdx,[rsp+0x1b8]
   1400040c2:	lea    rcx,[rsp+0xa8]
   1400040ca:	call   QWORD PTR [rip+0x9578]        # 0x14000d648
   1400040d0:	lea    rcx,[rsp+0x130]
   1400040d8:	call   QWORD PTR [rip+0x93c2]        # 0x14000d4a0
   1400040de:	lea    rcx,[rsp+0xa8]
   1400040e6:	mov    edx,eax
   1400040e8:	call   QWORD PTR [rip+0x93ba]        # 0x14000d4a8
   1400040ee:	test   al,al
   1400040f0:	jne    0x14000416a
   1400040f2:	lea    r8,[rip+0xbe0f]        # 0x14000ff08
   1400040f9:	lea    rdx,[rsp+0x68]
   1400040fe:	lea    rcx,[rip+0x1c4cb]        # 0x1400205d0
   140004105:	xor    r9d,r9d
   140004108:	mov    DWORD PTR [rsp+0x20],ebp
   14000410c:	call   QWORD PTR [rip+0x96fe]        # 0x14000d810
   140004112:	lea    r8,[rip+0xbdd7]        # 0x14000fef0
   140004119:	lea    rdx,[rsp+0x78]
   14000411e:	lea    rcx,[rip+0x1c4ab]        # 0x1400205d0
   140004125:	xor    r9d,r9d
   140004128:	mov    DWORD PTR [rsp+0x20],ebp
   14000412c:	call   QWORD PTR [rip+0x96de]        # 0x14000d810
   140004132:	lea    r8,[rsp+0x68]
   140004137:	lea    rdx,[rsp+0x78]
   14000413c:	mov    r9d,0x400
   140004142:	mov    rcx,rsi
   140004145:	mov    DWORD PTR [rsp+0x20],ebx
   140004149:	call   QWORD PTR [rip+0x9e39]        # 0x14000df88
   14000414f:	lea    rcx,[rsp+0x78]
   140004154:	call   QWORD PTR [rip+0x956e]        # 0x14000d6c8
   14000415a:	lea    rcx,[rsp+0x68]
   14000415f:	call   QWORD PTR [rip+0x9563]        # 0x14000d6c8
   140004165:	jmp    0x1400044a7
   14000416a:	lea    rdx,[rip+0xbd7b]        # 0x14000feec
   140004171:	xor    eax,eax
   140004173:	mov    rcx,rbp
   140004176:	mov    rdi,rdx
   140004179:	mov    QWORD PTR [rsp+0x58],rdx
   14000417e:	lea    rdx,[rsp+0x120]
   140004186:	repnz scas al,BYTE PTR es:[rdi]
   140004188:	not    rcx
   14000418b:	dec    rcx
   14000418e:	mov    DWORD PTR [rsp+0x50],ecx
   140004192:	lea    rcx,[rsp+0x70]
   140004197:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000419c:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   1400041a5:	call   QWORD PTR [rip+0x94e5]        # 0x14000d690
   1400041ab:	lea    rdx,[rip+0xbd16]        # 0x14000fec8
   1400041b2:	mov    rdi,rdx
   1400041b5:	mov    QWORD PTR [rsp+0x58],rdx
   1400041ba:	xor    eax,eax
   1400041bc:	mov    rcx,rbp
   1400041bf:	lea    rdx,[rsp+0x110]
   1400041c7:	repnz scas al,BYTE PTR es:[rdi]
   1400041c9:	not    rcx
   1400041cc:	dec    rcx
   1400041cf:	mov    DWORD PTR [rsp+0x50],ecx
   1400041d3:	lea    rcx,[rsp+0x88]
   1400041db:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   1400041e0:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   1400041e9:	call   QWORD PTR [rip+0x94a1]        # 0x14000d690
   1400041ef:	lea    rdx,[rsp+0x70]
   1400041f4:	mov    QWORD PTR [rsp+0x20],rdx
   1400041f9:	lea    r9,[rsp+0x88]
   140004201:	lea    r8,[r12+0x8]
   140004206:	lea    rcx,[rsp+0x60]
   14000420b:	mov    rdx,r12
   14000420e:	call   QWORD PTR [rip+0x969c]        # 0x14000d8b0
   140004214:	lea    rcx,[rsp+0x88]
   14000421c:	call   QWORD PTR [rip+0x94a6]        # 0x14000d6c8
   140004222:	lea    rcx,[rsp+0x70]
   140004227:	call   QWORD PTR [rip+0x949b]        # 0x14000d6c8
   14000422d:	mov    rcx,QWORD PTR [rip+0x9304]        # 0x14000d538
   140004234:	lea    rdx,[r12+0x18]
   140004239:	mov    QWORD PTR [rsp+0x1b0],rcx
   140004241:	lea    rcx,[rsp+0x50]
   140004246:	call   QWORD PTR [rip+0x93fc]        # 0x14000d648
   14000424c:	lea    rdx,[r12+0x10]
   140004251:	lea    rcx,[rsp+0xd0]
   140004259:	call   QWORD PTR [rip+0x93e9]        # 0x14000d648
   14000425f:	lea    rdx,[rsp+0xa8]
   140004267:	lea    rcx,[rsp+0xf8]
   14000426f:	call   QWORD PTR [rip+0x958b]        # 0x14000d800
   140004275:	call   0x140002d80
   14000427a:	lea    r8,[rsp+0xf8]
   140004282:	lea    rcx,[rsp+0xe0]
   14000428a:	mov    edx,eax
   14000428c:	xor    r9d,r9d
   14000428f:	call   QWORD PTR [rip+0x921b]        # 0x14000d4b0
   140004295:	mov    rdx,QWORD PTR [rsp+0x1b0]
   14000429d:	mov    eax,DWORD PTR [rdx]
   14000429f:	cmp    eax,0x1
   1400042a2:	je     0x1400042c2
   1400042a4:	test   eax,eax
   1400042a6:	je     0x1400042c2
   1400042a8:	lea    rcx,[rsp+0x1b0]
   1400042b0:	mov    edx,0x7fffffff
   1400042b5:	mov    r8d,0x1
   1400042bb:	call   0x140002b40
   1400042c0:	jmp    0x1400042d0
   1400042c2:	lea    rcx,[rsp+0x1b0]
   1400042ca:	call   QWORD PTR [rip+0x9210]        # 0x14000d4e0
   1400042d0:	mov    ecx,0x10
   1400042d5:	mov    rdi,rax
   1400042d8:	call   0x14000b8c2
   1400042dd:	test   rax,rax
   1400042e0:	je     0x1400042f5
   1400042e2:	lea    rdx,[rsp+0xd0]
   1400042ea:	mov    rcx,rax
   1400042ed:	call   QWORD PTR [rip+0x950d]        # 0x14000d800
   1400042f3:	jmp    0x1400042f8
   1400042f5:	mov    rax,rbx
   1400042f8:	mov    QWORD PTR [rdi],rax
   1400042fb:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004303:	mov    ecx,DWORD PTR [rax]
   140004305:	cmp    ecx,0x1
   140004308:	je     0x140004328
   14000430a:	test   ecx,ecx
   14000430c:	je     0x140004328
   14000430e:	lea    rcx,[rsp+0x1b0]
   140004316:	mov    edx,0x7fffffff
   14000431b:	mov    r8d,0x1
   140004321:	call   0x140002b40
   140004326:	jmp    0x140004336
   140004328:	lea    rcx,[rsp+0x1b0]
   140004330:	call   QWORD PTR [rip+0x91aa]        # 0x14000d4e0
   140004336:	mov    ecx,0x10
   14000433b:	mov    rdi,rax
   14000433e:	call   0x14000b8c2
   140004343:	test   rax,rax
   140004346:	je     0x140004358
   140004348:	lea    rdx,[rsp+0x50]
   14000434d:	mov    rcx,rax
   140004350:	call   QWORD PTR [rip+0x94aa]        # 0x14000d800
   140004356:	jmp    0x14000435b
   140004358:	mov    rax,rbx
   14000435b:	mov    QWORD PTR [rdi],rax
   14000435e:	mov    rax,QWORD PTR [rsp+0x1b0]
   140004366:	mov    ecx,DWORD PTR [rax]
   140004368:	cmp    ecx,0x1
   14000436b:	je     0x14000438b
   14000436d:	test   ecx,ecx
   14000436f:	je     0x14000438b
   140004371:	lea    rcx,[rsp+0x1b0]
   140004379:	mov    edx,0x7fffffff
   14000437e:	mov    r8d,0x1
   140004384:	call   0x140002b40
   140004389:	jmp    0x140004399
   14000438b:	lea    rcx,[rsp+0x1b0]
   140004393:	call   QWORD PTR [rip+0x9147]        # 0x14000d4e0
   140004399:	mov    ecx,0x10
   14000439e:	mov    rdi,rax
   1400043a1:	call   0x14000b8c2
   1400043a6:	test   rax,rax
   1400043a9:	je     0x1400043bf
   1400043ab:	lea    rdx,[rsp+0xe0]
   1400043b3:	mov    rcx,rax
   1400043b6:	call   QWORD PTR [rip+0x9444]        # 0x14000d800
   1400043bc:	mov    rbx,rax
   1400043bf:	lea    rcx,[rsp+0xe0]
   1400043c7:	mov    QWORD PTR [rdi],rbx
   1400043ca:	call   QWORD PTR [rip+0x9428]        # 0x14000d7f8
   1400043d0:	lea    rcx,[rsp+0xf8]
   1400043d8:	call   QWORD PTR [rip+0x941a]        # 0x14000d7f8
   1400043de:	lea    rcx,[rsp+0xd0]
   1400043e6:	call   QWORD PTR [rip+0x940c]        # 0x14000d7f8
   1400043ec:	lea    rcx,[rsp+0x50]
   1400043f1:	call   QWORD PTR [rip+0x9401]        # 0x14000d7f8
   1400043f7:	lea    rdx,[rsp+0x1b0]
   1400043ff:	lea    rcx,[rsp+0x60]
   140004404:	call   QWORD PTR [rip+0x94ae]        # 0x14000d8b8
   14000440a:	lea    r9,[rip+0xa657]        # 0x14000ea68
   140004411:	lea    rdx,[rsp+0x60]
   140004416:	lea    rcx,[rsi+0x30]
   14000441a:	mov    r8,rsi
   14000441d:	mov    DWORD PTR [rsp+0x20],ebp
   140004421:	call   QWORD PTR [rip+0x9499]        # 0x14000d8c0
   140004427:	mov    rsi,QWORD PTR [rsp+0x1b0]
   14000442f:	mov    eax,DWORD PTR [rsi]
   140004431:	test   eax,eax
   140004433:	je     0x140004450
   140004435:	cmp    eax,0xffffffff
   140004438:	je     0x14000449c
   14000443a:	lock xadd DWORD PTR [rsi],ebp
   14000443e:	add    ebp,0xffffffff
   140004441:	setne  al
   140004444:	test   al,al
   140004446:	jne    0x14000449c
   140004448:	mov    rsi,QWORD PTR [rsp+0x1b0]
   140004450:	movsxd rax,DWORD PTR [rsi+0xc]
   140004454:	lea    rdi,[rsi+rax*8+0x10]
   140004459:	movsxd rax,DWORD PTR [rsi+0x8]
   14000445d:	lea    rbp,[rsi+rax*8+0x10]
   140004462:	cmp    rbp,rdi
   140004465:	je     0x140004493
   140004467:	nop    WORD PTR [rax+rax*1+0x0]
   140004470:	mov    rbx,QWORD PTR [rdi-0x8]
   140004474:	sub    rdi,0x8
   140004478:	test   rbx,rbx
   14000447b:	je     0x14000448e
   14000447d:	mov    rcx,rbx
   140004480:	call   QWORD PTR [rip+0x9372]        # 0x14000d7f8
   140004486:	mov    rcx,rbx
   140004489:	call   0x14000b8c8
   14000448e:	cmp    rdi,rbp
   140004491:	jne    0x140004470
   140004493:	mov    rcx,rsi
   140004496:	call   QWORD PTR [rip+0x9084]        # 0x14000d520
   14000449c:	lea    rcx,[rsp+0x60]
   1400044a1:	call   QWORD PTR [rip+0x9421]        # 0x14000d8c8
   1400044a7:	lea    rcx,[rsp+0xa8]
   1400044af:	call   QWORD PTR [rip+0x9343]        # 0x14000d7f8
   1400044b5:	lea    rcx,[rsp+0x1b8]
   1400044bd:	call   QWORD PTR [rip+0x9205]        # 0x14000d6c8
   1400044c3:	lea    rcx,[rsp+0x90]
   1400044cb:	call   QWORD PTR [rip+0x93d7]        # 0x14000d8a8
   1400044d1:	add    rsp,0x158
   1400044d8:	pop    r15
   1400044da:	pop    r14
   1400044dc:	pop    r13
   1400044de:	pop    r12
   1400044e0:	pop    rdi
   1400044e1:	pop    rsi
   1400044e2:	pop    rbp
   1400044e3:	pop    rbx
   1400044e4:	ret    
   1400044e5:	int3   
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	int3   
   1400044ed:	int3   
   1400044ee:	int3   
   1400044ef:	int3   
   1400044f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400044f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400044fa:	push   rbx
   1400044fb:	push   rbp
   1400044fc:	push   rsi
   1400044fd:	push   rdi
   1400044fe:	push   r12
   140004500:	push   r13
   140004502:	push   r15
   140004504:	sub    rsp,0x200
   14000450b:	mov    r12,rcx
   14000450e:	add    rcx,0x30
   140004512:	xor    ebx,ebx
   140004514:	mov    QWORD PTR [rsp+0xe0],rcx
   14000451c:	mov    QWORD PTR [rsp+0x28],rbx
   140004521:	mov    QWORD PTR [rsp+0x20],rcx
   140004526:	lea    rcx,[rsp+0xc8]
   14000452e:	lea    r9,[rdx+0x10]
   140004532:	lea    r8,[rdx+0x8]
   140004536:	mov    r13,rdx
   140004539:	call   QWORD PTR [rip+0x9359]        # 0x14000d898
   14000453f:	lea    rcx,[rsp+0xc8]
   140004547:	call   QWORD PTR [rip+0x9353]        # 0x14000d8a0
   14000454d:	mov    QWORD PTR [rsp+0xa0],rbx
   140004555:	mov    DWORD PTR [rsp+0xa8],ebx
   14000455c:	mov    rcx,rax
   14000455f:	mov    rbp,rax
   140004562:	mov    esi,ebx
   140004564:	call   QWORD PTR [rip+0x8eb6]        # 0x14000d420
   14000456a:	test   eax,eax
   14000456c:	jle    0x14000469d
   140004572:	lea    rdx,[rsp+0x1c0]
   14000457a:	mov    r8d,esi
   14000457d:	mov    rcx,rbp
   140004580:	call   QWORD PTR [rip+0x8ea2]        # 0x14000d428
   140004586:	lea    rdx,[rsp+0x110]
   14000458e:	mov    rcx,rax
   140004591:	call   QWORD PTR [rip+0x8e99]        # 0x14000d430
   140004597:	lea    rcx,[rsp+0x60]
   14000459c:	mov    rdx,rax
   14000459f:	call   QWORD PTR [rip+0x8e93]        # 0x14000d438
   1400045a5:	lea    rcx,[rsp+0x110]
   1400045ad:	call   QWORD PTR [rip+0x911d]        # 0x14000d6d0
   1400045b3:	lea    rdx,[r13+0x18]
   1400045b7:	lea    rcx,[rsp+0x60]
   1400045bc:	mov    r8d,0x1
   1400045c2:	call   QWORD PTR [rip+0x8e78]        # 0x14000d440
   1400045c8:	test   al,al
   1400045ca:	je     0x140004675
   1400045d0:	mov    rax,QWORD PTR [r13+0x18]
   1400045d4:	lea    rcx,[rsp+0x250]
   1400045dc:	mov    dl,0x28
   1400045de:	mov    edi,DWORD PTR [rax+0x4]
   1400045e1:	call   QWORD PTR [rip+0x90b9]        # 0x14000d6a0
   1400045e7:	lea    rdx,[rsp+0x258]
   1400045ef:	movzx  ebx,WORD PTR [rax]
   1400045f2:	lea    rcx,[rsp+0x60]
   1400045f7:	mov    r8d,edi
   1400045fa:	call   QWORD PTR [rip+0x8e48]        # 0x14000d448
   140004600:	cmp    WORD PTR [rax],bx
   140004603:	jne    0x140004675
   140004605:	lea    rdx,[rsp+0x1e0]
   14000460d:	mov    r8d,esi
   140004610:	mov    rcx,rbp
   140004613:	call   QWORD PTR [rip+0x8e0f]        # 0x14000d428
   140004619:	lea    rcx,[rsp+0xf0]
   140004621:	mov    rdx,rax
   140004624:	call   0x140002e00
   140004629:	lea    rdx,[r13+0x20]
   14000462d:	mov    rcx,rax
   140004630:	call   QWORD PTR [rip+0x900a]        # 0x14000d640
   140004636:	lea    rcx,[rsp+0xf0]
   14000463e:	movzx  ebx,al
   140004641:	call   QWORD PTR [rip+0x9081]        # 0x14000d6c8
   140004647:	test   bl,bl
   140004649:	je     0x140004675
   14000464b:	lea    rdx,[rsp+0x1d0]
   140004653:	mov    r8d,esi
   140004656:	mov    rcx,rbp
   140004659:	call   QWORD PTR [rip+0x8dc9]        # 0x14000d428
   14000465f:	lea    rdx,[rsp+0xa0]
   140004667:	mov    rcx,QWORD PTR [rax]
   14000466a:	mov    QWORD PTR [rdx],rcx
   14000466d:	mov    rax,QWORD PTR [rax+0x8]
   140004671:	mov    QWORD PTR [rdx+0x8],rax
   140004675:	lea    rcx,[rsp+0x60]
   14000467a:	call   QWORD PTR [rip+0x9048]        # 0x14000d6c8
   140004680:	mov    rcx,rbp
   140004683:	inc    esi
   140004685:	call   QWORD PTR [rip+0x8d95]        # 0x14000d420
   14000468b:	cmp    esi,eax
   14000468d:	jl     0x140004572
   140004693:	mov    r12,QWORD PTR [rsp+0x240]
   14000469b:	xor    ebx,ebx
   14000469d:	cmp    QWORD PTR [rsp+0xa0],0x0
   1400046a6:	mov    QWORD PTR [rsp+0x1f8],r14
   1400046ae:	jne    0x1400047ff
   1400046b4:	lea    r8,[rip+0xb90d]        # 0x14000ffc8
   1400046bb:	lea    rdx,[rsp+0xb8]
   1400046c3:	lea    rcx,[rip+0x1bf06]        # 0x1400205d0
   1400046ca:	or     r14d,0xffffffff
   1400046ce:	xor    r9d,r9d
   1400046d1:	mov    DWORD PTR [rsp+0x20],r14d
   1400046d6:	call   QWORD PTR [rip+0x9134]        # 0x14000d810
   1400046dc:	lea    r8,[rip+0xb8cd]        # 0x14000ffb0
   1400046e3:	lea    rdx,[rsp+0x98]
   1400046eb:	lea    rcx,[rip+0x1bede]        # 0x1400205d0
   1400046f2:	xor    r9d,r9d
   1400046f5:	mov    DWORD PTR [rsp+0x20],r14d
   1400046fa:	call   QWORD PTR [rip+0x9110]        # 0x14000d810
   140004700:	lea    rcx,[rsp+0x5a]
   140004705:	mov    dl,0x20
   140004707:	call   QWORD PTR [rip+0x8f93]        # 0x14000d6a0
   14000470d:	lea    rcx,[rsp+0x68]
   140004712:	mov    dl,0x20
   140004714:	mov    rdi,rax
   140004717:	call   QWORD PTR [rip+0x8f83]        # 0x14000d6a0
   14000471d:	lea    rcx,[rsp+0x78]
   140004722:	mov    dl,0x20
   140004724:	mov    rbx,rax
   140004727:	call   QWORD PTR [rip+0x8f73]        # 0x14000d6a0
   14000472d:	lea    r8,[r13+0x18]
   140004731:	lea    rdx,[rsp+0xd8]
   140004739:	movzx  ecx,WORD PTR [rax]
   14000473c:	xor    r9d,r9d
   14000473f:	mov    WORD PTR [rsp+0x20],cx
   140004744:	lea    rcx,[rsp+0xb8]
   14000474c:	call   QWORD PTR [rip+0x8f2e]        # 0x14000d680
   140004752:	lea    r8,[r13+0x8]
   140004756:	lea    rdx,[rsp+0x100]
   14000475e:	mov    rcx,rax
   140004761:	movzx  eax,WORD PTR [rbx]
   140004764:	xor    r9d,r9d
   140004767:	mov    WORD PTR [rsp+0x20],ax
   14000476c:	call   QWORD PTR [rip+0x8f0e]        # 0x14000d680
   140004772:	lea    r8,[r13+0x10]
   140004776:	mov    rcx,rax
   140004779:	movzx  eax,WORD PTR [rdi]
   14000477c:	lea    rdx,[rsp+0x120]
   140004784:	xor    r9d,r9d
   140004787:	mov    WORD PTR [rsp+0x20],ax
   14000478c:	call   QWORD PTR [rip+0x8eee]        # 0x14000d680
   140004792:	lea    rdx,[rsp+0x98]
   14000479a:	mov    r9d,0x400
   1400047a0:	mov    rcx,r12
   1400047a3:	mov    r8,rax
   1400047a6:	mov    DWORD PTR [rsp+0x20],0x0
   1400047ae:	call   QWORD PTR [rip+0x97d4]        # 0x14000df88
   1400047b4:	lea    rcx,[rsp+0x98]
   1400047bc:	call   QWORD PTR [rip+0x8f06]        # 0x14000d6c8
   1400047c2:	lea    rcx,[rsp+0x120]
   1400047ca:	call   QWORD PTR [rip+0x8ef8]        # 0x14000d6c8
   1400047d0:	lea    rcx,[rsp+0x100]
   1400047d8:	call   QWORD PTR [rip+0x8eea]        # 0x14000d6c8
   1400047de:	lea    rcx,[rsp+0xd8]
   1400047e6:	call   QWORD PTR [rip+0x8edc]        # 0x14000d6c8
   1400047ec:	lea    rcx,[rsp+0xb8]
   1400047f4:	call   QWORD PTR [rip+0x8ece]        # 0x14000d6c8
   1400047fa:	jmp    0x1400051da
   1400047ff:	lea    rcx,[rsp+0x170]
   140004807:	mov    r8d,ebx
   14000480a:	xor    edx,edx
   14000480c:	mov    DWORD PTR [rsp+0x130],ebx
   140004813:	call   0x140008ec0
   140004818:	mov    r11,QWORD PTR [rip+0x8d19]        # 0x14000d538
   14000481f:	lea    rdx,[rsp+0x40]
   140004824:	lea    rcx,[rsp+0xa0]
   14000482c:	mov    QWORD PTR [rsp+0x30],r11
   140004831:	call   QWORD PTR [rip+0x8cb1]        # 0x14000d4e8
   140004837:	lea    rdx,[rsp+0x48]
   14000483c:	lea    rcx,[rsp+0xa0]
   140004844:	call   QWORD PTR [rip+0x8c06]        # 0x14000d450
   14000484a:	mov    rax,QWORD PTR [rsp+0x40]
   14000484f:	mov    r11,QWORD PTR [rip+0x8ce2]        # 0x14000d538
   140004856:	mov    QWORD PTR [rsp+0x38],r11
   14000485b:	mov    ecx,DWORD PTR [rax+0xc]
   14000485e:	sub    ecx,DWORD PTR [rax+0x8]
   140004861:	test   ecx,ecx
   140004863:	jle    0x14000499a
   140004869:	nop    DWORD PTR [rax+0x0]
   140004870:	movsxd rcx,DWORD PTR [rax+0x8]
   140004874:	movsxd rsi,ebx
   140004877:	add    rcx,rsi
   14000487a:	lea    rdx,[rax+rcx*8+0x10]
   14000487f:	lea    rcx,[rsp+0x50]
   140004884:	call   QWORD PTR [rip+0x8c9e]        # 0x14000d528
   14000488a:	lea    rcx,[rsp+0x50]
   14000488f:	mov    dl,0x26
   140004891:	call   QWORD PTR [rip+0x8bc1]        # 0x14000d458
   140004897:	test   al,al
   140004899:	je     0x1400048ab
   14000489b:	lea    rcx,[rsp+0x50]
   1400048a0:	call   QWORD PTR [rip+0x8e2a]        # 0x14000d6d0
   1400048a6:	jmp    0x140004980
   1400048ab:	lea    rcx,[rsp+0x50]
   1400048b0:	call   QWORD PTR [rip+0x8c3a]        # 0x14000d4f0
   1400048b6:	mov    edi,eax
   1400048b8:	test   ebx,ebx
   1400048ba:	js     0x1400048e4
   1400048bc:	mov    rcx,QWORD PTR [rsp+0x48]
   1400048c1:	movsxd rax,DWORD PTR [rcx+0x8]
   1400048c5:	mov    edx,DWORD PTR [rcx+0xc]
   1400048c8:	sub    edx,eax
   1400048ca:	cmp    ebx,edx
   1400048cc:	jge    0x1400048e4
   1400048ce:	lea    rdx,[rsi+rax*1]
   1400048d2:	lea    rdx,[rcx+rdx*8+0x10]
   1400048d7:	lea    rcx,[rsp+0x70]
   1400048dc:	call   QWORD PTR [rip+0x8c46]        # 0x14000d528
   1400048e2:	jmp    0x1400048ef
   1400048e4:	lea    rcx,[rsp+0x70]
   1400048e9:	call   QWORD PTR [rip+0x8c41]        # 0x14000d530
   1400048ef:	lea    rdx,[rsp+0x70]
   1400048f4:	lea    rcx,[rsp+0x128]
   1400048fc:	call   QWORD PTR [rip+0x8b36]        # 0x14000d438
   140004902:	lea    rcx,[rsp+0x170]
   14000490a:	mov    r8d,edi
   14000490d:	mov    rdx,rax
   140004910:	call   0x140008a90
   140004915:	lea    rcx,[rsp+0x128]
   14000491d:	call   QWORD PTR [rip+0x8da5]        # 0x14000d6c8
   140004923:	lea    rcx,[rsp+0x70]
   140004928:	call   QWORD PTR [rip+0x8da2]        # 0x14000d6d0
   14000492e:	mov    r11,QWORD PTR [rsp+0x38]
   140004933:	mov    eax,DWORD PTR [r11]
   140004936:	cmp    eax,0x1
   140004939:	je     0x140004958
   14000493b:	test   eax,eax
   14000493d:	je     0x140004958
   14000493f:	lea    rcx,[rsp+0x38]
   140004944:	mov    edx,0x7fffffff
   140004949:	mov    r8d,0x1
   14000494f:	call   0x140002c80
   140004954:	mov    DWORD PTR [rax],edi
   140004956:	jmp    0x140004975
   140004958:	lea    rcx,[rsp+0x38]
   14000495d:	mov    DWORD PTR [rsp+0x118],edi
   140004964:	call   QWORD PTR [rip+0x8b76]        # 0x14000d4e0
   14000496a:	mov    rcx,QWORD PTR [rsp+0x118]
   140004972:	mov    QWORD PTR [rax],rcx
   140004975:	lea    rcx,[rsp+0x50]
   14000497a:	call   QWORD PTR [rip+0x8d50]        # 0x14000d6d0
   140004980:	mov    rax,QWORD PTR [rsp+0x40]
   140004985:	inc    ebx
   140004987:	mov    ecx,DWORD PTR [rax+0xc]
   14000498a:	sub    ecx,DWORD PTR [rax+0x8]
   14000498d:	cmp    ebx,ecx
   14000498f:	jl     0x140004870
   140004995:	mov    r11,QWORD PTR [rsp+0x38]
   14000499a:	mov    eax,DWORD PTR [r11+0x8]
   14000499e:	or     r14d,0xffffffff
   1400049a2:	cmp    DWORD PTR [r11+0xc],eax
   1400049a6:	je     0x140004c0c
   1400049ac:	lea    r8,[rip+0xb5cd]        # 0x14000ff80
   1400049b3:	lea    rdx,[rsp+0x90]
   1400049bb:	lea    rcx,[rip+0x1bc0e]        # 0x1400205d0
   1400049c2:	xor    r9d,r9d
   1400049c5:	mov    DWORD PTR [rsp+0x20],r14d
   1400049ca:	call   QWORD PTR [rip+0x8e40]        # 0x14000d810
   1400049d0:	lea    rcx,[rsp+0x58]
   1400049d5:	mov    dl,0x20
   1400049d7:	call   QWORD PTR [rip+0x8cc3]        # 0x14000d6a0
   1400049dd:	lea    r8,[r13+0x18]
   1400049e1:	lea    rdx,[rsp+0x108]
   1400049e9:	movzx  eax,WORD PTR [rax]
   1400049ec:	lea    rcx,[rsp+0x90]
   1400049f4:	xor    r9d,r9d
   1400049f7:	mov    WORD PTR [rsp+0x20],ax
   1400049fc:	call   QWORD PTR [rip+0x8c7e]        # 0x14000d680
   140004a02:	lea    rcx,[rsp+0x170]
   140004a0a:	mov    rdx,rax
   140004a0d:	call   0x140008a30
   140004a12:	lea    rcx,[rsp+0x108]
   140004a1a:	call   QWORD PTR [rip+0x8ca8]        # 0x14000d6c8
   140004a20:	lea    rcx,[rsp+0x90]
   140004a28:	call   QWORD PTR [rip+0x8c9a]        # 0x14000d6c8
   140004a2e:	lea    rcx,[rsp+0x170]
   140004a36:	call   0x140008a40
   140004a3b:	cmp    eax,0x1
   140004a3e:	je     0x140004b79
   140004a44:	mov    rcx,QWORD PTR [rsp+0x38]
   140004a49:	mov    eax,DWORD PTR [rcx]
   140004a4b:	test   eax,eax
   140004a4d:	je     0x140004a64
   140004a4f:	cmp    eax,r14d
   140004a52:	je     0x140004a6a
   140004a54:	lock add DWORD PTR [rcx],r14d
   140004a58:	setne  al
   140004a5b:	test   al,al
   140004a5d:	jne    0x140004a6a
   140004a5f:	mov    rcx,QWORD PTR [rsp+0x38]
   140004a64:	call   QWORD PTR [rip+0x8ab6]        # 0x14000d520
   140004a6a:	mov    rdi,QWORD PTR [rsp+0x48]
   140004a6f:	mov    eax,DWORD PTR [rdi]
   140004a71:	test   eax,eax
   140004a73:	je     0x140004a8a
   140004a75:	cmp    eax,0xffffffff
   140004a78:	je     0x140004abc
   140004a7a:	lock add DWORD PTR [rdi],0xffffffff
   140004a7e:	setne  al
   140004a81:	test   al,al
   140004a83:	jne    0x140004abc
   140004a85:	mov    rdi,QWORD PTR [rsp+0x48]
   140004a8a:	movsxd rax,DWORD PTR [rdi+0xc]
   140004a8e:	lea    rbx,[rdi+rax*8+0x10]
   140004a93:	movsxd rax,DWORD PTR [rdi+0x8]
   140004a97:	lea    rsi,[rdi+rax*8+0x10]
   140004a9c:	cmp    rsi,rbx
   140004a9f:	je     0x140004ab3
   140004aa1:	sub    rbx,0x8
   140004aa5:	mov    rcx,rbx
   140004aa8:	call   QWORD PTR [rip+0x8c22]        # 0x14000d6d0
   140004aae:	cmp    rbx,rsi
   140004ab1:	jne    0x140004aa1
   140004ab3:	mov    rcx,rdi
   140004ab6:	call   QWORD PTR [rip+0x8a64]        # 0x14000d520
   140004abc:	mov    rdi,QWORD PTR [rsp+0x40]
   140004ac1:	mov    eax,DWORD PTR [rdi]
   140004ac3:	test   eax,eax
   140004ac5:	je     0x140004adc
   140004ac7:	cmp    eax,0xffffffff
   140004aca:	je     0x140004b0e
   140004acc:	lock add DWORD PTR [rdi],0xffffffff
   140004ad0:	setne  al
   140004ad3:	test   al,al
   140004ad5:	jne    0x140004b0e
   140004ad7:	mov    rdi,QWORD PTR [rsp+0x40]
   140004adc:	movsxd rax,DWORD PTR [rdi+0xc]
   140004ae0:	lea    rbx,[rdi+rax*8+0x10]
   140004ae5:	movsxd rax,DWORD PTR [rdi+0x8]
   140004ae9:	lea    rsi,[rdi+rax*8+0x10]
   140004aee:	cmp    rsi,rbx
   140004af1:	je     0x140004b05
   140004af3:	sub    rbx,0x8
   140004af7:	mov    rcx,rbx
   140004afa:	call   QWORD PTR [rip+0x8bd0]        # 0x14000d6d0
   140004b00:	cmp    rbx,rsi
   140004b03:	jne    0x140004af3
   140004b05:	mov    rcx,rdi
   140004b08:	call   QWORD PTR [rip+0x8a12]        # 0x14000d520
   140004b0e:	mov    rsi,QWORD PTR [rsp+0x30]
   140004b13:	mov    eax,DWORD PTR [rsi]
   140004b15:	test   eax,eax
   140004b17:	je     0x140004b36
   140004b19:	cmp    eax,0xffffffff
   140004b1c:	je     0x1400051cc
   140004b22:	lock add DWORD PTR [rsi],0xffffffff
   140004b26:	setne  al
   140004b29:	test   al,al
   140004b2b:	jne    0x1400051cc
   140004b31:	mov    rsi,QWORD PTR [rsp+0x30]
   140004b36:	movsxd rax,DWORD PTR [rsi+0xc]
   140004b3a:	lea    rbx,[rsi+rax*8+0x10]
   140004b3f:	movsxd rax,DWORD PTR [rsi+0x8]
   140004b43:	lea    rbp,[rsi+rax*8+0x10]
   140004b48:	cmp    rbp,rbx
   140004b4b:	je     0x1400051c3
   140004b51:	mov    rdi,QWORD PTR [rbx-0x8]
   140004b55:	sub    rbx,0x8
   140004b59:	test   rdi,rdi
   140004b5c:	je     0x140004b6f
   140004b5e:	mov    rcx,rdi
   140004b61:	call   QWORD PTR [rip+0x8c91]        # 0x14000d7f8
   140004b67:	mov    rcx,rdi
   140004b6a:	call   0x14000b8c8
   140004b6f:	cmp    rbx,rbp
   140004b72:	jne    0x140004b51
   140004b74:	jmp    0x1400051c3
   140004b79:	lea    rdx,[rsp+0xb0]
   140004b81:	lea    rcx,[rsp+0x170]
   140004b89:	call   0x1400094c0
   140004b8e:	lea    rcx,[rsp+0x30]
   140004b93:	mov    rdx,rax
   140004b96:	call   0x1400029f0
   140004b9b:	mov    rsi,QWORD PTR [rsp+0xb0]
   140004ba3:	mov    eax,DWORD PTR [rsi]
   140004ba5:	test   eax,eax
   140004ba7:	je     0x140004bc1
   140004ba9:	cmp    eax,0xffffffff
   140004bac:	je     0x140004c0c
   140004bae:	lock add DWORD PTR [rsi],0xffffffff
   140004bb2:	setne  al
   140004bb5:	test   al,al
   140004bb7:	jne    0x140004c0c
   140004bb9:	mov    rsi,QWORD PTR [rsp+0xb0]
   140004bc1:	movsxd rax,DWORD PTR [rsi+0xc]
   140004bc5:	lea    rbx,[rsi+rax*8+0x10]
   140004bca:	movsxd rax,DWORD PTR [rsi+0x8]
   140004bce:	lea    rbp,[rsi+rax*8+0x10]
   140004bd3:	cmp    rbp,rbx
   140004bd6:	je     0x140004c03
   140004bd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140004be0:	mov    rdi,QWORD PTR [rbx-0x8]
   140004be4:	sub    rbx,0x8
   140004be8:	test   rdi,rdi
   140004beb:	je     0x140004bfe
   140004bed:	mov    rcx,rdi
   140004bf0:	call   QWORD PTR [rip+0x8c02]        # 0x14000d7f8
   140004bf6:	mov    rcx,rdi
   140004bf9:	call   0x14000b8c8
   140004bfe:	cmp    rbx,rbp
   140004c01:	jne    0x140004be0
   140004c03:	mov    rcx,rsi
   140004c06:	call   QWORD PTR [rip+0x8914]        # 0x14000d520
   140004c0c:	mov    rax,QWORD PTR [rsp+0x30]
   140004c11:	xor    r15d,r15d
   140004c14:	xor    r13d,r13d
   140004c17:	mov    ecx,DWORD PTR [rax+0xc]
   140004c1a:	sub    ecx,DWORD PTR [rax+0x8]
   140004c1d:	test   ecx,ecx
   140004c1f:	jle    0x14000501f
   140004c25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004c30:	movsxd rdx,DWORD PTR [rax+0x8]
   140004c34:	lea    rcx,[rsp+0x148]
   140004c3c:	add    rdx,r13
   140004c3f:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   140004c44:	call   QWORD PTR [rip+0x8bb6]        # 0x14000d800
   140004c4a:	mov    rbx,QWORD PTR [rsp+0x38]
   140004c4f:	movsxd rax,DWORD PTR [rbx+0x8]
   140004c53:	add    rax,r13
   140004c56:	mov    r12d,DWORD PTR [rbx+rax*8+0x10]
   140004c5b:	cmp    r12d,0x400
   140004c62:	jge    0x140004da2
   140004c68:	cmp    r12d,0x8
   140004c6c:	je     0x140004da2
   140004c72:	lea    rcx,[rsp+0x148]
   140004c7a:	mov    edx,r12d
   140004c7d:	call   QWORD PTR [rip+0x87dd]        # 0x14000d460
   140004c83:	test   al,al
   140004c85:	je     0x140004d9d
   140004c8b:	mov    rcx,QWORD PTR [rsp+0x30]
   140004c90:	mov    eax,DWORD PTR [rcx]
   140004c92:	cmp    eax,0x1
   140004c95:	je     0x140004d81
   140004c9b:	test   eax,eax
   140004c9d:	je     0x140004d81
   140004ca3:	movsxd rax,DWORD PTR [rcx+0x8]
   140004ca7:	mov    edx,DWORD PTR [rcx+0x4]
   140004caa:	lea    rdi,[rcx+rax*8+0x10]
   140004caf:	lea    rcx,[rsp+0x30]
   140004cb4:	call   QWORD PTR [rip+0x8856]        # 0x14000d510
   140004cba:	mov    rcx,QWORD PTR [rsp+0x30]
   140004cbf:	movsxd rdx,DWORD PTR [rcx+0xc]
   140004cc3:	mov    rsi,rax
   140004cc6:	lea    rbp,[rcx+rdx*8+0x10]
   140004ccb:	movsxd rdx,DWORD PTR [rcx+0x8]
   140004ccf:	lea    rbx,[rcx+rdx*8+0x10]
   140004cd4:	cmp    rbx,rbp
   140004cd7:	je     0x140004d14
   140004cd9:	nop    DWORD PTR [rax+0x0]
   140004ce0:	mov    ecx,0x10
   140004ce5:	call   0x14000b8c2
   140004cea:	test   rax,rax
   140004ced:	je     0x140004cfd
   140004cef:	mov    rdx,QWORD PTR [rdi]
   140004cf2:	mov    rcx,rax
   140004cf5:	call   QWORD PTR [rip+0x8b05]        # 0x14000d800
   140004cfb:	jmp    0x140004cff
   140004cfd:	xor    eax,eax
   140004cff:	mov    QWORD PTR [rbx],rax
   140004d02:	add    rbx,0x8
   140004d06:	add    rdi,0x8
   140004d0a:	cmp    rbx,rbp
   140004d0d:	jne    0x140004ce0
   140004d0f:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d14:	mov    eax,DWORD PTR [rsi]
   140004d16:	test   eax,eax
   140004d18:	je     0x140004d31
   140004d1a:	cmp    eax,0xffffffff
   140004d1d:	je     0x140004d81
   140004d1f:	lock add DWORD PTR [rsi],0xffffffff
   140004d23:	setne  al
   140004d26:	test   al,al
   140004d28:	je     0x140004d31
   140004d2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d2f:	jmp    0x140004d81
   140004d31:	movsxd rax,DWORD PTR [rsi+0xc]
   140004d35:	lea    rbx,[rsi+rax*8+0x10]
   140004d3a:	movsxd rax,DWORD PTR [rsi+0x8]
   140004d3e:	lea    rbp,[rsi+rax*8+0x10]
   140004d43:	cmp    rbp,rbx
   140004d46:	je     0x140004d73
   140004d48:	nop    DWORD PTR [rax+rax*1+0x0]
   140004d50:	mov    rdi,QWORD PTR [rbx-0x8]
   140004d54:	sub    rbx,0x8
   140004d58:	test   rdi,rdi
   140004d5b:	je     0x140004d6e
   140004d5d:	mov    rcx,rdi
   140004d60:	call   QWORD PTR [rip+0x8a92]        # 0x14000d7f8
   140004d66:	mov    rcx,rdi
   140004d69:	call   0x14000b8c8
   140004d6e:	cmp    rbx,rbp
   140004d71:	jne    0x140004d50
   140004d73:	mov    rcx,rsi
   140004d76:	call   QWORD PTR [rip+0x87a4]        # 0x14000d520
   140004d7c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d81:	movsxd rax,DWORD PTR [rcx+0x8]
   140004d85:	mov    edx,r12d
   140004d88:	add    rax,r13
   140004d8b:	mov    rcx,QWORD PTR [rcx+rax*8+0x10]
   140004d90:	call   QWORD PTR [rip+0x8712]        # 0x14000d4a8
   140004d96:	mov    rbx,QWORD PTR [rsp+0x38]
   140004d9b:	jmp    0x140004da2
   140004d9d:	mov    rbx,QWORD PTR [rsp+0x38]
   140004da2:	movsxd rsi,DWORD PTR [rbx+0x8]
   140004da6:	mov    edi,DWORD PTR [rip+0x1b9bc]        # 0x140020768
   140004dac:	add    rsi,r13
   140004daf:	test   edi,edi
   140004db1:	jne    0x140004e1a
   140004db3:	lea    rdx,[rip+0xb00e]        # 0x14000fdc8
   140004dba:	lea    rcx,[rsp+0x88]
   140004dc2:	call   QWORD PTR [rip+0x8740]        # 0x14000d508
   140004dc8:	lea    r9d,[rdi+0x10]
   140004dcc:	lea    r8,[rip+0xffffffffffffca5d]        # 0x140001830
   140004dd3:	lea    rdx,[rip+0xffffffffffffdb86]        # 0x140002960
   140004dda:	lea    rcx,[rsp+0x88]
   140004de2:	mov    QWORD PTR [rsp+0x28],0x0
   140004deb:	mov    DWORD PTR [rsp+0xf8],0x7
   140004df6:	mov    DWORD PTR [rsp+0x20],0x107
   140004dfe:	call   QWORD PTR [rip+0x8714]        # 0x14000d518
   140004e04:	lea    rcx,[rsp+0x88]
   140004e0c:	mov    edi,eax
   140004e0e:	call   QWORD PTR [rip+0x88bc]        # 0x14000d6d0
   140004e14:	mov    DWORD PTR [rip+0x1b94e],edi        # 0x140020768
   140004e1a:	cmp    DWORD PTR [rbx+rsi*8+0x10],edi
   140004e1e:	jne    0x140004ff7
   140004e24:	mov    rdx,QWORD PTR [rsp+0x30]
   140004e29:	lea    rcx,[rsp+0x158]
   140004e31:	movsxd rax,DWORD PTR [rdx+0x8]
   140004e35:	add    rax,r13
   140004e38:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   140004e3d:	call   QWORD PTR [rip+0x89bd]        # 0x14000d800
   140004e43:	mov    ebx,DWORD PTR [rip+0x1b91f]        # 0x140020768
   140004e49:	test   ebx,ebx
   140004e4b:	jne    0x140004eb4
   140004e4d:	lea    rdx,[rip+0xaf74]        # 0x14000fdc8
   140004e54:	lea    rcx,[rsp+0xc0]
   140004e5c:	call   QWORD PTR [rip+0x86a6]        # 0x14000d508
   140004e62:	lea    r9d,[rbx+0x10]
   140004e66:	lea    r8,[rip+0xffffffffffffc9c3]        # 0x140001830
   140004e6d:	lea    rdx,[rip+0xffffffffffffdaec]        # 0x140002960
   140004e74:	lea    rcx,[rsp+0xc0]
   140004e7c:	mov    QWORD PTR [rsp+0x28],0x0
   140004e85:	mov    DWORD PTR [rsp+0xe8],0x7
   140004e90:	mov    DWORD PTR [rsp+0x20],0x107
   140004e98:	call   QWORD PTR [rip+0x867a]        # 0x14000d518
   140004e9e:	lea    rcx,[rsp+0xc0]
   140004ea6:	mov    ebx,eax
   140004ea8:	call   QWORD PTR [rip+0x8822]        # 0x14000d6d0
   140004eae:	mov    DWORD PTR [rip+0x1b8b4],ebx        # 0x140020768
   140004eb4:	lea    r8,[rsp+0x158]
   140004ebc:	lea    rcx,[rsp+0x138]
   140004ec4:	xor    r9d,r9d
   140004ec7:	mov    edx,ebx
   140004ec9:	call   QWORD PTR [rip+0x85e1]        # 0x14000d4b0
   140004ecf:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ed4:	mov    eax,DWORD PTR [rcx]
   140004ed6:	cmp    eax,0x1
   140004ed9:	je     0x140004fc1
   140004edf:	test   eax,eax
   140004ee1:	je     0x140004fc1
   140004ee7:	movsxd rax,DWORD PTR [rcx+0x8]
   140004eeb:	mov    edx,DWORD PTR [rcx+0x4]
   140004eee:	lea    rdi,[rcx+rax*8+0x10]
   140004ef3:	lea    rcx,[rsp+0x30]
   140004ef8:	call   QWORD PTR [rip+0x8612]        # 0x14000d510
   140004efe:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f03:	movsxd rdx,DWORD PTR [rcx+0xc]
   140004f07:	mov    rsi,rax
   140004f0a:	lea    rbp,[rcx+rdx*8+0x10]
   140004f0f:	movsxd rdx,DWORD PTR [rcx+0x8]
   140004f13:	lea    rbx,[rcx+rdx*8+0x10]
   140004f18:	cmp    rbx,rbp
   140004f1b:	je     0x140004f54
   140004f1d:	nop    DWORD PTR [rax]
   140004f20:	mov    ecx,0x10
   140004f25:	call   0x14000b8c2
   140004f2a:	test   rax,rax
   140004f2d:	je     0x140004f3d
   140004f2f:	mov    rdx,QWORD PTR [rdi]
   140004f32:	mov    rcx,rax
   140004f35:	call   QWORD PTR [rip+0x88c5]        # 0x14000d800
   140004f3b:	jmp    0x140004f3f
   140004f3d:	xor    eax,eax
   140004f3f:	mov    QWORD PTR [rbx],rax
   140004f42:	add    rbx,0x8
   140004f46:	add    rdi,0x8
   140004f4a:	cmp    rbx,rbp
   140004f4d:	jne    0x140004f20
   140004f4f:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f54:	mov    eax,DWORD PTR [rsi]
   140004f56:	test   eax,eax
   140004f58:	je     0x140004f71
   140004f5a:	cmp    eax,0xffffffff
   140004f5d:	je     0x140004fc1
   140004f5f:	lock add DWORD PTR [rsi],0xffffffff
   140004f63:	setne  al
   140004f66:	test   al,al
   140004f68:	je     0x140004f71
   140004f6a:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f6f:	jmp    0x140004fc1
   140004f71:	movsxd rax,DWORD PTR [rsi+0xc]
   140004f75:	lea    rbx,[rsi+rax*8+0x10]
   140004f7a:	movsxd rax,DWORD PTR [rsi+0x8]
   140004f7e:	lea    rbp,[rsi+rax*8+0x10]
   140004f83:	cmp    rbp,rbx
   140004f86:	je     0x140004fb3
   140004f88:	nop    DWORD PTR [rax+rax*1+0x0]
   140004f90:	mov    rdi,QWORD PTR [rbx-0x8]
   140004f94:	sub    rbx,0x8
   140004f98:	test   rdi,rdi
   140004f9b:	je     0x140004fae
   140004f9d:	mov    rcx,rdi
   140004fa0:	call   QWORD PTR [rip+0x8852]        # 0x14000d7f8
   140004fa6:	mov    rcx,rdi
   140004fa9:	call   0x14000b8c8
   140004fae:	cmp    rbx,rbp
   140004fb1:	jne    0x140004f90
   140004fb3:	mov    rcx,rsi
   140004fb6:	call   QWORD PTR [rip+0x8564]        # 0x14000d520
   140004fbc:	mov    rcx,QWORD PTR [rsp+0x30]
   140004fc1:	movsxd rax,DWORD PTR [rcx+0x8]
   140004fc5:	lea    rdx,[rsp+0x138]
   140004fcd:	add    rax,r13
   140004fd0:	mov    rcx,QWORD PTR [rcx+rax*8+0x10]
   140004fd5:	call   QWORD PTR [rip+0x848d]        # 0x14000d468
   140004fdb:	lea    rcx,[rsp+0x138]
   140004fe3:	call   QWORD PTR [rip+0x880f]        # 0x14000d7f8
   140004fe9:	lea    rcx,[rsp+0x158]
   140004ff1:	call   QWORD PTR [rip+0x8801]        # 0x14000d7f8
   140004ff7:	lea    rcx,[rsp+0x148]
   140004fff:	call   QWORD PTR [rip+0x87f3]        # 0x14000d7f8
   140005005:	mov    rax,QWORD PTR [rsp+0x30]
   14000500a:	inc    r15d
   14000500d:	mov    ecx,DWORD PTR [rax+0xc]
   140005010:	inc    r13
   140005013:	sub    ecx,DWORD PTR [rax+0x8]
   140005016:	cmp    r15d,ecx
   140005019:	jl     0x140004c30
   14000501f:	mov    rdx,QWORD PTR [rsp+0x248]
   140005027:	lea    rcx,[rsp+0x80]
   14000502f:	lea    rax,[rdx+0x18]
   140005033:	lea    r9,[rdx+0x10]
   140005037:	lea    r8,[rdx+0x8]
   14000503b:	mov    QWORD PTR [rsp+0x20],rax
   140005040:	call   QWORD PTR [rip+0x886a]        # 0x14000d8b0
   140005046:	lea    rdx,[rsp+0x30]
   14000504b:	lea    rcx,[rsp+0x80]
   140005053:	call   QWORD PTR [rip+0x885f]        # 0x14000d8b8
   140005059:	mov    r8,QWORD PTR [rsp+0x240]
   140005061:	mov    rcx,QWORD PTR [rsp+0xe0]
   140005069:	lea    r9,[rip+0x99f8]        # 0x14000ea68
   140005070:	lea    rdx,[rsp+0x80]
   140005078:	mov    DWORD PTR [rsp+0x20],r14d
   14000507d:	call   QWORD PTR [rip+0x883d]        # 0x14000d8c0
   140005083:	lea    rcx,[rsp+0x80]
   14000508b:	call   QWORD PTR [rip+0x8837]        # 0x14000d8c8
   140005091:	mov    rcx,QWORD PTR [rsp+0x38]
   140005096:	mov    eax,DWORD PTR [rcx]
   140005098:	test   eax,eax
   14000509a:	je     0x1400050b1
   14000509c:	cmp    eax,0xffffffff
   14000509f:	je     0x1400050b7
   1400050a1:	lock add DWORD PTR [rcx],0xffffffff
   1400050a5:	setne  al
   1400050a8:	test   al,al
   1400050aa:	jne    0x1400050b7
   1400050ac:	mov    rcx,QWORD PTR [rsp+0x38]
   1400050b1:	call   QWORD PTR [rip+0x8469]        # 0x14000d520
   1400050b7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400050bc:	mov    eax,DWORD PTR [rdi]
   1400050be:	test   eax,eax
   1400050c0:	je     0x1400050d7
   1400050c2:	cmp    eax,0xffffffff
   1400050c5:	je     0x14000510b
   1400050c7:	lock add DWORD PTR [rdi],0xffffffff
   1400050cb:	setne  al
   1400050ce:	test   al,al
   1400050d0:	jne    0x14000510b
   1400050d2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400050d7:	movsxd rax,DWORD PTR [rdi+0xc]
   1400050db:	lea    rbx,[rdi+rax*8+0x10]
   1400050e0:	movsxd rax,DWORD PTR [rdi+0x8]
   1400050e4:	lea    rsi,[rdi+rax*8+0x10]
   1400050e9:	cmp    rsi,rbx
   1400050ec:	je     0x140005102
   1400050ee:	xchg   ax,ax
   1400050f0:	sub    rbx,0x8
   1400050f4:	mov    rcx,rbx
   1400050f7:	call   QWORD PTR [rip+0x85d3]        # 0x14000d6d0
   1400050fd:	cmp    rbx,rsi
   140005100:	jne    0x1400050f0
   140005102:	mov    rcx,rdi
   140005105:	call   QWORD PTR [rip+0x8415]        # 0x14000d520
   14000510b:	mov    rdi,QWORD PTR [rsp+0x40]
   140005110:	mov    eax,DWORD PTR [rdi]
   140005112:	test   eax,eax
   140005114:	je     0x14000512b
   140005116:	cmp    eax,0xffffffff
   140005119:	je     0x14000515d
   14000511b:	lock add DWORD PTR [rdi],0xffffffff
   14000511f:	setne  al
   140005122:	test   al,al
   140005124:	jne    0x14000515d
   140005126:	mov    rdi,QWORD PTR [rsp+0x40]
   14000512b:	movsxd rax,DWORD PTR [rdi+0xc]
   14000512f:	lea    rbx,[rdi+rax*8+0x10]
   140005134:	movsxd rax,DWORD PTR [rdi+0x8]
   140005138:	lea    rsi,[rdi+rax*8+0x10]
   14000513d:	cmp    rsi,rbx
   140005140:	je     0x140005154
   140005142:	sub    rbx,0x8
   140005146:	mov    rcx,rbx
   140005149:	call   QWORD PTR [rip+0x8581]        # 0x14000d6d0
   14000514f:	cmp    rbx,rsi
   140005152:	jne    0x140005142
   140005154:	mov    rcx,rdi
   140005157:	call   QWORD PTR [rip+0x83c3]        # 0x14000d520
   14000515d:	mov    rsi,QWORD PTR [rsp+0x30]
   140005162:	mov    eax,DWORD PTR [rsi]
   140005164:	test   eax,eax
   140005166:	je     0x14000517d
   140005168:	cmp    eax,0xffffffff
   14000516b:	je     0x1400051cc
   14000516d:	lock add DWORD PTR [rsi],0xffffffff
   140005171:	setne  al
   140005174:	test   al,al
   140005176:	jne    0x1400051cc
   140005178:	mov    rsi,QWORD PTR [rsp+0x30]
   14000517d:	movsxd rax,DWORD PTR [rsi+0xc]
   140005181:	lea    rbx,[rsi+rax*8+0x10]
   140005186:	movsxd rax,DWORD PTR [rsi+0x8]
   14000518a:	lea    rbp,[rsi+rax*8+0x10]
   14000518f:	cmp    rbp,rbx
   140005192:	je     0x1400051c3
   140005194:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400051a0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400051a4:	sub    rbx,0x8
   1400051a8:	test   rdi,rdi
   1400051ab:	je     0x1400051be
   1400051ad:	mov    rcx,rdi
   1400051b0:	call   QWORD PTR [rip+0x8642]        # 0x14000d7f8
   1400051b6:	mov    rcx,rdi
   1400051b9:	call   0x14000b8c8
   1400051be:	cmp    rbx,rbp
   1400051c1:	jne    0x1400051a0
   1400051c3:	mov    rcx,rsi
   1400051c6:	call   QWORD PTR [rip+0x8354]        # 0x14000d520
   1400051cc:	lea    rcx,[rsp+0x170]
   1400051d4:	call   QWORD PTR [rip+0x954e]        # 0x14000e728
   1400051da:	lea    rcx,[rsp+0xc8]
   1400051e2:	call   QWORD PTR [rip+0x86c0]        # 0x14000d8a8
   1400051e8:	mov    r14,QWORD PTR [rsp+0x1f8]
   1400051f0:	add    rsp,0x200
   1400051f7:	pop    r15
   1400051f9:	pop    r13
   1400051fb:	pop    r12
   1400051fd:	pop    rdi
   1400051fe:	pop    rsi
   1400051ff:	pop    rbp
   140005200:	pop    rbx
   140005201:	ret    
   140005202:	int3   
   140005203:	int3   
   140005204:	int3   
   140005205:	int3   
   140005206:	int3   
   140005207:	int3   
   140005208:	int3   
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	rex push rbx
   140005212:	push   rdi
   140005213:	push   r13
   140005215:	sub    rsp,0x100
   14000521c:	mov    rdi,rcx
   14000521f:	mov    r13,rdx
   140005222:	mov    r8,rdx
   140005225:	xor    ebx,ebx
   140005227:	lea    rdx,[rsp+0x60]
   14000522c:	mov    DWORD PTR [rsp+0x120],ebx
   140005233:	mov    rcx,QWORD PTR [rcx+0x40]
   140005237:	mov    rax,QWORD PTR [rcx]
   14000523a:	call   QWORD PTR [rax+0x1b0]
   140005240:	cmp    DWORD PTR [rsp+0x60],ebx
   140005244:	jl     0x1400057b3
   14000524a:	cmp    DWORD PTR [rsp+0x64],ebx
   14000524e:	jl     0x1400057b3
   140005254:	mov    QWORD PTR [rsp+0xf8],rsi
   14000525c:	mov    rsi,QWORD PTR [rsp+0x70]
   140005261:	test   rsi,rsi
   140005264:	je     0x1400057ab
   14000526a:	lea    rcx,[rsp+0x30]
   14000526f:	mov    QWORD PTR [rsp+0xf0],r12
   140005277:	call   QWORD PTR [rip+0x840b]        # 0x14000d688
   14000527d:	lea    rcx,[rsp+0x38]
   140005282:	call   QWORD PTR [rip+0x8400]        # 0x14000d688
   140005288:	lea    rcx,[rsp+0x40]
   14000528d:	call   QWORD PTR [rip+0x83f5]        # 0x14000d688
   140005293:	lea    rcx,[rsp+0x48]
   140005298:	call   QWORD PTR [rip+0x83ea]        # 0x14000d688
   14000529e:	lea    rcx,[rsp+0x50]
   1400052a3:	call   QWORD PTR [rip+0x83df]        # 0x14000d688
   1400052a9:	lea    rdx,[rdi+0x38]
   1400052ad:	lea    rcx,[rsp+0x30]
   1400052b2:	call   QWORD PTR [rip+0x83b0]        # 0x14000d668
   1400052b8:	lea    r8,[rsp+0x60]
   1400052bd:	lea    rdx,[rsp+0x120]
   1400052c5:	mov    rcx,rsi
   1400052c8:	call   0x140005ee0
   1400052cd:	lea    rcx,[rsp+0x38]
   1400052d2:	mov    rdx,rax
   1400052d5:	call   QWORD PTR [rip+0x838d]        # 0x14000d668
   1400052db:	lea    rcx,[rsp+0x120]
   1400052e3:	call   QWORD PTR [rip+0x83df]        # 0x14000d6c8
   1400052e9:	lea    r8,[rsp+0x60]
   1400052ee:	lea    rdx,[rsp+0x120]
   1400052f6:	mov    rcx,rsi
   1400052f9:	call   0x140005fc0
   1400052fe:	lea    rcx,[rsp+0x40]
   140005303:	mov    rdx,rax
   140005306:	call   QWORD PTR [rip+0x835c]        # 0x14000d668
   14000530c:	lea    rcx,[rsp+0x120]
   140005314:	call   QWORD PTR [rip+0x83ae]        # 0x14000d6c8
   14000531a:	lea    r8,[rsp+0x60]
   14000531f:	lea    rdx,[rsp+0x120]
   140005327:	mov    rcx,rsi
   14000532a:	call   0x140006010
   14000532f:	lea    rcx,[rsp+0x48]
   140005334:	mov    rdx,rax
   140005337:	call   QWORD PTR [rip+0x832b]        # 0x14000d668
   14000533d:	lea    rcx,[rsp+0x120]
   140005345:	call   QWORD PTR [rip+0x837d]        # 0x14000d6c8
   14000534b:	lea    r8,[rsp+0x60]
   140005350:	lea    rdx,[rsp+0x120]
   140005358:	mov    rcx,rsi
   14000535b:	call   0x140006070
   140005360:	lea    rcx,[rsp+0x50]
   140005365:	mov    rdx,rax
   140005368:	call   QWORD PTR [rip+0x82fa]        # 0x14000d668
   14000536e:	lea    rcx,[rsp+0x120]
   140005376:	call   QWORD PTR [rip+0x834c]        # 0x14000d6c8
   14000537c:	lea    rcx,[rsp+0x88]
   140005384:	xor    edx,edx
   140005386:	call   QWORD PTR [rip+0x8b54]        # 0x14000dee0
   14000538c:	mov    rdx,QWORD PTR [rdi+0x48]
   140005390:	lea    rcx,[rsp+0x88]
   140005398:	call   QWORD PTR [rip+0x8b4a]        # 0x14000dee8
   14000539e:	lea    rdx,[rsp+0x60]
   1400053a3:	mov    rcx,rsi
   1400053a6:	call   0x140005ec0
   1400053ab:	sub    eax,0x2
   1400053ae:	je     0x14000560a
   1400053b4:	sub    eax,0x1
   1400053b7:	je     0x14000554a
   1400053bd:	cmp    eax,0x1
   1400053c0:	jne    0x1400056b3
   1400053c6:	lea    ecx,[rbx+0x10]
   1400053c9:	mov    QWORD PTR [rsp+0x128],rbp
   1400053d1:	call   0x14000b8c2
   1400053d6:	lea    r12,[rip+0x9dfb]        # 0x14000f1d8
   1400053dd:	mov    rbp,rax
   1400053e0:	test   rax,rax
   1400053e3:	je     0x140005430
   1400053e5:	lea    r8,[rip+0xac3c]        # 0x140010028
   1400053ec:	lea    rdx,[rsp+0x120]
   1400053f4:	lea    rcx,[rip+0x1b1d5]        # 0x1400205d0
   1400053fb:	xor    r9d,r9d
   1400053fe:	mov    ebx,0x4
   140005403:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000540b:	call   QWORD PTR [rip+0x83ff]        # 0x14000d810
   140005411:	lea    r8,[rsp+0x88]
   140005419:	lea    rdx,[rsp+0x120]
   140005421:	mov    rcx,rbp
   140005424:	call   QWORD PTR [rip+0x92a6]        # 0x14000e6d0
   14000542a:	mov    QWORD PTR [rbp+0x0],r12
   14000542e:	jmp    0x140005432
   140005430:	xor    ebp,ebp
   140005432:	test   bl,0x4
   140005435:	je     0x140005448
   140005437:	lea    rcx,[rsp+0x120]
   14000543f:	and    ebx,0xfffffffb
   140005442:	call   QWORD PTR [rip+0x8280]        # 0x14000d6c8
   140005448:	lea    rcx,[rsp+0xd8]
   140005450:	mov    edx,0x3
   140005455:	call   QWORD PTR [rip+0x81c5]        # 0x14000d620
   14000545b:	lea    rdx,[rsp+0xd8]
   140005463:	mov    rcx,rbp
   140005466:	call   QWORD PTR [rip+0x926c]        # 0x14000e6d8
   14000546c:	lea    rcx,[rsp+0xd8]
   140005474:	call   QWORD PTR [rip+0x837e]        # 0x14000d7f8
   14000547a:	mov    ecx,0x10
   14000547f:	call   0x14000b8c2
   140005484:	mov    rsi,rax
   140005487:	test   rax,rax
   14000548a:	je     0x1400054d4
   14000548c:	lea    r8,[rip+0xab85]        # 0x140010018
   140005493:	lea    rdx,[rsp+0x130]
   14000549b:	lea    rcx,[rip+0x1b12e]        # 0x1400205d0
   1400054a2:	xor    r9d,r9d
   1400054a5:	or     ebx,0x8
   1400054a8:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400054b0:	call   QWORD PTR [rip+0x835a]        # 0x14000d810
   1400054b6:	lea    r8,[rsp+0x88]
   1400054be:	lea    rdx,[rsp+0x130]
   1400054c6:	mov    rcx,rsi
   1400054c9:	call   QWORD PTR [rip+0x9201]        # 0x14000e6d0
   1400054cf:	mov    QWORD PTR [rsi],r12
   1400054d2:	jmp    0x1400054d6
   1400054d4:	xor    esi,esi
   1400054d6:	test   bl,0x8
   1400054d9:	je     0x1400054e9
   1400054db:	lea    rcx,[rsp+0x130]
   1400054e3:	call   QWORD PTR [rip+0x81df]        # 0x14000d6c8
   1400054e9:	lea    rcx,[rsp+0xc8]
   1400054f1:	mov    edx,0x4
   1400054f6:	call   QWORD PTR [rip+0x8124]        # 0x14000d620
   1400054fc:	lea    rdx,[rsp+0xc8]
   140005504:	mov    rcx,rsi
   140005507:	call   QWORD PTR [rip+0x91cb]        # 0x14000e6d8
   14000550d:	lea    rcx,[rsp+0xc8]
   140005515:	call   QWORD PTR [rip+0x82dd]        # 0x14000d7f8
   14000551b:	lea    rcx,[rsp+0x88]
   140005523:	mov    rdx,rbp
   140005526:	call   QWORD PTR [rip+0x89bc]        # 0x14000dee8
   14000552c:	lea    rcx,[rsp+0x88]
   140005534:	mov    rdx,rsi
   140005537:	call   QWORD PTR [rip+0x89ab]        # 0x14000dee8
   14000553d:	mov    rbp,QWORD PTR [rsp+0x128]
   140005545:	jmp    0x1400056b3
   14000554a:	mov    ecx,0x10
   14000554f:	call   0x14000b8c2
   140005554:	mov    rsi,rax
   140005557:	test   rax,rax
   14000555a:	je     0x1400055ad
   14000555c:	lea    r8,[rip+0xaaa5]        # 0x140010008
   140005563:	lea    rdx,[rsp+0x138]
   14000556b:	lea    rcx,[rip+0x1b05e]        # 0x1400205d0
   140005572:	xor    r9d,r9d
   140005575:	mov    ebx,0x1
   14000557a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005582:	call   QWORD PTR [rip+0x8288]        # 0x14000d810
   140005588:	lea    r8,[rsp+0x88]
   140005590:	lea    rdx,[rsp+0x138]
   140005598:	mov    rcx,rsi
   14000559b:	call   QWORD PTR [rip+0x912f]        # 0x14000e6d0
   1400055a1:	lea    r12,[rip+0x9c30]        # 0x14000f1d8
   1400055a8:	mov    QWORD PTR [rsi],r12
   1400055ab:	jmp    0x1400055af
   1400055ad:	xor    esi,esi
   1400055af:	test   bl,0x1
   1400055b2:	je     0x1400055c2
   1400055b4:	lea    rcx,[rsp+0x138]
   1400055bc:	call   QWORD PTR [rip+0x8106]        # 0x14000d6c8
   1400055c2:	lea    rcx,[rsp+0xb8]
   1400055ca:	mov    edx,0x1
   1400055cf:	call   QWORD PTR [rip+0x804b]        # 0x14000d620
   1400055d5:	lea    rdx,[rsp+0xb8]
   1400055dd:	mov    rcx,rsi
   1400055e0:	call   QWORD PTR [rip+0x90f2]        # 0x14000e6d8
   1400055e6:	lea    rcx,[rsp+0xb8]
   1400055ee:	call   QWORD PTR [rip+0x8204]        # 0x14000d7f8
   1400055f4:	lea    rcx,[rsp+0x88]
   1400055fc:	mov    rdx,rsi
   1400055ff:	call   QWORD PTR [rip+0x88e3]        # 0x14000dee8
   140005605:	jmp    0x1400056b3
   14000560a:	mov    ecx,0x10
   14000560f:	call   0x14000b8c2
   140005614:	mov    rsi,rax
   140005617:	test   rax,rax
   14000561a:	je     0x140005667
   14000561c:	lea    r8,[rip+0xa9d9]        # 0x14000fffc
   140005623:	lea    rdx,[rsp+0x58]
   140005628:	lea    rcx,[rip+0x1afa1]        # 0x1400205d0
   14000562f:	xor    r9d,r9d
   140005632:	mov    ebx,0x2
   140005637:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000563f:	call   QWORD PTR [rip+0x81cb]        # 0x14000d810
   140005645:	lea    r8,[rsp+0x88]
   14000564d:	lea    rdx,[rsp+0x58]
   140005652:	mov    rcx,rsi
   140005655:	call   QWORD PTR [rip+0x9075]        # 0x14000e6d0
   14000565b:	lea    r12,[rip+0x9b76]        # 0x14000f1d8
   140005662:	mov    QWORD PTR [rsi],r12
   140005665:	jmp    0x140005669
   140005667:	xor    esi,esi
   140005669:	test   bl,0x2
   14000566c:	je     0x140005679
   14000566e:	lea    rcx,[rsp+0x58]
   140005673:	call   QWORD PTR [rip+0x804f]        # 0x14000d6c8
   140005679:	lea    rcx,[rsp+0x78]
   14000567e:	mov    edx,0x2
   140005683:	call   QWORD PTR [rip+0x7f97]        # 0x14000d620
   140005689:	lea    rdx,[rsp+0x78]
   14000568e:	mov    rcx,rsi
   140005691:	call   QWORD PTR [rip+0x9041]        # 0x14000e6d8
   140005697:	lea    rcx,[rsp+0x78]
   14000569c:	call   QWORD PTR [rip+0x8156]        # 0x14000d7f8
   1400056a2:	lea    rcx,[rsp+0x88]
   1400056aa:	mov    rdx,rsi
   1400056ad:	call   QWORD PTR [rip+0x8835]        # 0x14000dee8
   1400056b3:	mov    rcx,QWORD PTR [rdi+0x40]
   1400056b7:	call   QWORD PTR [rip+0x8833]        # 0x14000def0
   1400056bd:	lea    rdx,[rsp+0x120]
   1400056c5:	mov    r8,r13
   1400056c8:	mov    rcx,rax
   1400056cb:	call   QWORD PTR [rip+0x882f]        # 0x14000df00
   1400056d1:	lea    rcx,[rsp+0x88]
   1400056d9:	xor    r8d,r8d
   1400056dc:	mov    rdx,rax
   1400056df:	call   QWORD PTR [rip+0x84f3]        # 0x14000dbd8
   1400056e5:	mov    r12,QWORD PTR [rsp+0xf0]
   1400056ed:	test   rax,rax
   1400056f0:	je     0x140005766
   1400056f2:	lea    rdx,[rsp+0x78]
   1400056f7:	mov    rcx,rax
   1400056fa:	call   QWORD PTR [rip+0x8870]        # 0x14000df70
   140005700:	xor    edx,edx
   140005702:	mov    rcx,rax
   140005705:	call   QWORD PTR [rip+0x7d0d]        # 0x14000d418
   14000570b:	lea    rcx,[rsp+0x78]
   140005710:	mov    ebx,eax
   140005712:	call   QWORD PTR [rip+0x80e0]        # 0x14000d7f8
   140005718:	sub    ebx,0x1
   14000571b:	je     0x140005759
   14000571d:	sub    ebx,0x1
   140005720:	je     0x14000574a
   140005722:	sub    ebx,0x1
   140005725:	je     0x14000573b
   140005727:	cmp    ebx,0x1
   14000572a:	jne    0x140005766
   14000572c:	lea    rdx,[rsp+0x30]
   140005731:	mov    rcx,rdi
   140005734:	call   0x140003c40
   140005739:	jmp    0x140005766
   14000573b:	lea    rdx,[rsp+0x30]
   140005740:	mov    rcx,rdi
   140005743:	call   0x140003ee0
   140005748:	jmp    0x140005766
   14000574a:	lea    rdx,[rsp+0x30]
   14000574f:	mov    rcx,rdi
   140005752:	call   0x1400044f0
   140005757:	jmp    0x140005766
   140005759:	lea    rdx,[rsp+0x30]
   14000575e:	mov    rcx,rdi
   140005761:	call   0x140001420
   140005766:	lea    rcx,[rsp+0x88]
   14000576e:	call   QWORD PTR [rip+0x8804]        # 0x14000df78
   140005774:	lea    rcx,[rsp+0x50]
   140005779:	call   QWORD PTR [rip+0x7f49]        # 0x14000d6c8
   14000577f:	lea    rcx,[rsp+0x48]
   140005784:	call   QWORD PTR [rip+0x7f3e]        # 0x14000d6c8
   14000578a:	lea    rcx,[rsp+0x40]
   14000578f:	call   QWORD PTR [rip+0x7f33]        # 0x14000d6c8
   140005795:	lea    rcx,[rsp+0x38]
   14000579a:	call   QWORD PTR [rip+0x7f28]        # 0x14000d6c8
   1400057a0:	lea    rcx,[rsp+0x30]
   1400057a5:	call   QWORD PTR [rip+0x7f1d]        # 0x14000d6c8
   1400057ab:	mov    rsi,QWORD PTR [rsp+0xf8]
   1400057b3:	add    rsp,0x100
   1400057ba:	pop    r13
   1400057bc:	pop    rdi
   1400057bd:	pop    rbx
   1400057be:	ret    
   1400057bf:	int3   
   1400057c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400057c5:	push   rdi
   1400057c6:	sub    rsp,0x50
   1400057ca:	cmp    DWORD PTR [rdx],0x0
   1400057cd:	mov    rbx,rdx
   1400057d0:	mov    rdi,rcx
   1400057d3:	jl     0x140005960
   1400057d9:	cmp    DWORD PTR [rdx+0x4],0x0
   1400057dd:	jl     0x140005960
   1400057e3:	mov    QWORD PTR [rsp+0x60],rsi
   1400057e8:	mov    rsi,QWORD PTR [rdx+0x10]
   1400057ec:	test   rsi,rsi
   1400057ef:	je     0x14000595b
   1400057f5:	lea    rcx,[rsp+0x20]
   1400057fa:	call   QWORD PTR [rip+0x7e88]        # 0x14000d688
   140005800:	lea    rcx,[rsp+0x28]
   140005805:	call   QWORD PTR [rip+0x7e7d]        # 0x14000d688
   14000580b:	lea    rcx,[rsp+0x30]
   140005810:	call   QWORD PTR [rip+0x7e72]        # 0x14000d688
   140005816:	lea    rcx,[rsp+0x38]
   14000581b:	call   QWORD PTR [rip+0x7e67]        # 0x14000d688
   140005821:	lea    rcx,[rsp+0x40]
   140005826:	call   QWORD PTR [rip+0x7e5c]        # 0x14000d688
   14000582c:	lea    rdx,[rdi+0x38]
   140005830:	lea    rcx,[rsp+0x20]
   140005835:	call   QWORD PTR [rip+0x7e2d]        # 0x14000d668
   14000583b:	lea    rdx,[rsp+0x68]
   140005840:	mov    r8,rbx
   140005843:	mov    rcx,rsi
   140005846:	call   0x140005ee0
   14000584b:	lea    rcx,[rsp+0x28]
   140005850:	mov    rdx,rax
   140005853:	call   QWORD PTR [rip+0x7e0f]        # 0x14000d668
   140005859:	lea    rcx,[rsp+0x68]
   14000585e:	call   QWORD PTR [rip+0x7e64]        # 0x14000d6c8
   140005864:	lea    rdx,[rsp+0x68]
   140005869:	mov    r8,rbx
   14000586c:	mov    rcx,rsi
   14000586f:	call   0x140005fc0
   140005874:	lea    rcx,[rsp+0x30]
   140005879:	mov    rdx,rax
   14000587c:	call   QWORD PTR [rip+0x7de6]        # 0x14000d668
   140005882:	lea    rcx,[rsp+0x68]
   140005887:	call   QWORD PTR [rip+0x7e3b]        # 0x14000d6c8
   14000588d:	lea    rdx,[rsp+0x68]
   140005892:	mov    r8,rbx
   140005895:	mov    rcx,rsi
   140005898:	call   0x140006010
   14000589d:	lea    rcx,[rsp+0x38]
   1400058a2:	mov    rdx,rax
   1400058a5:	call   QWORD PTR [rip+0x7dbd]        # 0x14000d668
   1400058ab:	lea    rcx,[rsp+0x68]
   1400058b0:	call   QWORD PTR [rip+0x7e12]        # 0x14000d6c8
   1400058b6:	lea    rdx,[rsp+0x68]
   1400058bb:	mov    r8,rbx
   1400058be:	mov    rcx,rsi
   1400058c1:	call   0x140006070
   1400058c6:	lea    rcx,[rsp+0x40]
   1400058cb:	mov    rdx,rax
   1400058ce:	call   QWORD PTR [rip+0x7d94]        # 0x14000d668
   1400058d4:	lea    rcx,[rsp+0x68]
   1400058d9:	call   QWORD PTR [rip+0x7de9]        # 0x14000d6c8
   1400058df:	mov    rdx,rbx
   1400058e2:	mov    rcx,rsi
   1400058e5:	call   0x140005ec0
   1400058ea:	sub    eax,0x2
   1400058ed:	je     0x140005917
   1400058ef:	sub    eax,0x1
   1400058f2:	je     0x140005908
   1400058f4:	cmp    eax,0x1
   1400058f7:	jne    0x140005924
   1400058f9:	lea    rdx,[rsp+0x20]
   1400058fe:	mov    rcx,rdi
   140005901:	call   0x140003c40
   140005906:	jmp    0x140005924
   140005908:	lea    rdx,[rsp+0x20]
   14000590d:	mov    rcx,rdi
   140005910:	call   0x140001420
   140005915:	jmp    0x140005924
   140005917:	lea    rdx,[rsp+0x20]
   14000591c:	mov    rcx,rdi
   14000591f:	call   0x1400044f0
   140005924:	lea    rcx,[rsp+0x40]
   140005929:	call   QWORD PTR [rip+0x7d99]        # 0x14000d6c8
   14000592f:	lea    rcx,[rsp+0x38]
   140005934:	call   QWORD PTR [rip+0x7d8e]        # 0x14000d6c8
   14000593a:	lea    rcx,[rsp+0x30]
   14000593f:	call   QWORD PTR [rip+0x7d83]        # 0x14000d6c8
   140005945:	lea    rcx,[rsp+0x28]
   14000594a:	call   QWORD PTR [rip+0x7d78]        # 0x14000d6c8
   140005950:	lea    rcx,[rsp+0x20]
   140005955:	call   QWORD PTR [rip+0x7d6d]        # 0x14000d6c8
   14000595b:	mov    rsi,QWORD PTR [rsp+0x60]
   140005960:	mov    rbx,QWORD PTR [rsp+0x70]
   140005965:	add    rsp,0x50
   140005969:	pop    rdi
   14000596a:	ret    
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	rex push rbx
   140005972:	push   rsi
   140005973:	push   rdi
   140005974:	push   r13
   140005976:	push   r15
   140005978:	sub    rsp,0x80
   14000597f:	mov    r13,rcx
   140005982:	mov    rdi,rdx
   140005985:	lea    rcx,[rsp+0x40]
   14000598a:	mov    rdx,r8
   14000598d:	call   QWORD PTR [rip+0x7cb5]        # 0x14000d648
   140005993:	mov    rbx,QWORD PTR [rdi]
   140005996:	lea    rax,[rsp+0x50]
   14000599b:	or     esi,0xffffffff
   14000599e:	xor    r15d,r15d
   1400059a1:	lea    rdx,[rsp+0x68]
   1400059a6:	xor    r9d,r9d
   1400059a9:	xor    r8d,r8d
   1400059ac:	mov    rcx,rdi
   1400059af:	mov    DWORD PTR [rsp+0x50],esi
   1400059b3:	mov    DWORD PTR [rsp+0x54],esi
   1400059b7:	mov    QWORD PTR [rsp+0x58],r15
   1400059bc:	mov    QWORD PTR [rsp+0x60],r15
   1400059c1:	mov    QWORD PTR [rsp+0x20],rax
   1400059c6:	call   QWORD PTR [rbx+0x58]
   1400059c9:	mov    r8,rax
   1400059cc:	lea    rax,[rsp+0x40]
   1400059d1:	mov    DWORD PTR [rsp+0x30],0x22
   1400059d9:	lea    rdx,[rsp+0xb8]
   1400059e1:	xor    r9d,r9d
   1400059e4:	mov    rcx,rdi
   1400059e7:	mov    DWORD PTR [rsp+0x28],0x1
   1400059ef:	mov    QWORD PTR [rsp+0x20],rax
   1400059f4:	call   QWORD PTR [rbx+0x140]
   1400059fa:	lea    rcx,[rsp+0x40]
   1400059ff:	call   QWORD PTR [rip+0x7df3]        # 0x14000d7f8
   140005a05:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005a0d:	movsxd rcx,DWORD PTR [rbx+0x8]
   140005a11:	cmp    DWORD PTR [rbx+0xc],ecx
   140005a14:	jne    0x140005a87
   140005a16:	mov    eax,DWORD PTR [rbx]
   140005a18:	mov    DWORD PTR [r13+0x0],esi
   140005a1c:	mov    DWORD PTR [r13+0x4],esi
   140005a20:	mov    QWORD PTR [r13+0x8],r15
   140005a24:	mov    QWORD PTR [r13+0x10],r15
   140005a28:	test   eax,eax
   140005a2a:	je     0x140005a4a
   140005a2c:	cmp    eax,esi
   140005a2e:	je     0x140005c1e
   140005a34:	lock add DWORD PTR [rbx],esi
   140005a37:	setne  al
   140005a3a:	test   al,al
   140005a3c:	jne    0x140005c1e
   140005a42:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005a4a:	movsxd rax,DWORD PTR [rbx+0xc]
   140005a4e:	lea    rdi,[rbx+rax*8+0x10]
   140005a53:	movsxd rax,DWORD PTR [rbx+0x8]
   140005a57:	lea    rsi,[rbx+rax*8+0x10]
   140005a5c:	cmp    rsi,rdi
   140005a5f:	je     0x140005c15
   140005a65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005a70:	mov    rcx,QWORD PTR [rdi-0x8]
   140005a74:	sub    rdi,0x8
   140005a78:	call   0x14000b8c8
   140005a7d:	cmp    rdi,rsi
   140005a80:	jne    0x140005a70
   140005a82:	jmp    0x140005c15
   140005a87:	mov    eax,DWORD PTR [rbx]
   140005a89:	cmp    eax,0x1
   140005a8c:	je     0x140005bae
   140005a92:	test   eax,eax
   140005a94:	je     0x140005bae
   140005a9a:	mov    edx,DWORD PTR [rbx+0x4]
   140005a9d:	mov    QWORD PTR [rsp+0xb0],rbp
   140005aa5:	lea    rbp,[rbx+rcx*8+0x10]
   140005aaa:	lea    rcx,[rsp+0xb8]
   140005ab2:	mov    QWORD PTR [rsp+0xc0],r12
   140005aba:	mov    QWORD PTR [rsp+0xc8],r14
   140005ac2:	call   QWORD PTR [rip+0x7a48]        # 0x14000d510
   140005ac8:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005ad0:	movsxd rcx,DWORD PTR [rbx+0xc]
   140005ad4:	mov    r12,rax
   140005ad7:	lea    r14,[rbx+rcx*8+0x10]
   140005adc:	movsxd rcx,DWORD PTR [rbx+0x8]
   140005ae0:	lea    rdi,[rbx+rcx*8+0x10]
   140005ae5:	cmp    rdi,r14
   140005ae8:	je     0x140005b36
   140005aea:	nop    WORD PTR [rax+rax*1+0x0]
   140005af0:	mov    ecx,0x18
   140005af5:	call   0x14000b8c2
   140005afa:	test   rax,rax
   140005afd:	je     0x140005b1b
   140005aff:	mov    rdx,QWORD PTR [rbp+0x0]
   140005b03:	mov    rcx,QWORD PTR [rdx]
   140005b06:	mov    QWORD PTR [rax],rcx
   140005b09:	mov    rcx,QWORD PTR [rdx+0x8]
   140005b0d:	mov    QWORD PTR [rax+0x8],rcx
   140005b11:	mov    rcx,QWORD PTR [rdx+0x10]
   140005b15:	mov    QWORD PTR [rax+0x10],rcx
   140005b19:	jmp    0x140005b1e
   140005b1b:	mov    rax,r15
   140005b1e:	mov    QWORD PTR [rdi],rax
   140005b21:	add    rdi,0x8
   140005b25:	add    rbp,0x8
   140005b29:	cmp    rdi,r14
   140005b2c:	jne    0x140005af0
   140005b2e:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005b36:	mov    eax,DWORD PTR [r12]
   140005b3a:	mov    r14,QWORD PTR [rsp+0xc8]
   140005b42:	mov    rbp,QWORD PTR [rsp+0xb0]
   140005b4a:	test   eax,eax
   140005b4c:	je     0x140005b6a
   140005b4e:	cmp    eax,0xffffffff
   140005b51:	je     0x140005ba6
   140005b53:	lock add DWORD PTR [r12],0xffffffff
   140005b59:	setne  al
   140005b5c:	test   al,al
   140005b5e:	je     0x140005b6a
   140005b60:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005b68:	jmp    0x140005ba6
   140005b6a:	movsxd rax,DWORD PTR [r12+0xc]
   140005b6f:	lea    rbx,[r12+rax*8+0x10]
   140005b74:	movsxd rax,DWORD PTR [r12+0x8]
   140005b79:	lea    rdi,[r12+rax*8+0x10]
   140005b7e:	cmp    rdi,rbx
   140005b81:	je     0x140005b95
   140005b83:	mov    rcx,QWORD PTR [rbx-0x8]
   140005b87:	sub    rbx,0x8
   140005b8b:	call   0x14000b8c8
   140005b90:	cmp    rbx,rdi
   140005b93:	jne    0x140005b83
   140005b95:	mov    rcx,r12
   140005b98:	call   QWORD PTR [rip+0x7982]        # 0x14000d520
   140005b9e:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005ba6:	mov    r12,QWORD PTR [rsp+0xc0]
   140005bae:	movsxd rax,DWORD PTR [rbx+0x8]
   140005bb2:	mov    rcx,QWORD PTR [rbx+rax*8+0x10]
   140005bb7:	mov    rax,QWORD PTR [rcx]
   140005bba:	mov    QWORD PTR [r13+0x0],rax
   140005bbe:	mov    rax,QWORD PTR [rcx+0x8]
   140005bc2:	mov    QWORD PTR [r13+0x8],rax
   140005bc6:	mov    rax,QWORD PTR [rcx+0x10]
   140005bca:	mov    QWORD PTR [r13+0x10],rax
   140005bce:	mov    eax,DWORD PTR [rbx]
   140005bd0:	test   eax,eax
   140005bd2:	je     0x140005bec
   140005bd4:	cmp    eax,0xffffffff
   140005bd7:	je     0x140005c1e
   140005bd9:	lock add DWORD PTR [rbx],0xffffffff
   140005bdd:	setne  al
   140005be0:	test   al,al
   140005be2:	jne    0x140005c1e
   140005be4:	mov    rbx,QWORD PTR [rsp+0xb8]
   140005bec:	movsxd rax,DWORD PTR [rbx+0xc]
   140005bf0:	lea    rdi,[rbx+rax*8+0x10]
   140005bf5:	movsxd rax,DWORD PTR [rbx+0x8]
   140005bf9:	lea    rsi,[rbx+rax*8+0x10]
   140005bfe:	cmp    rsi,rdi
   140005c01:	je     0x140005c15
   140005c03:	mov    rcx,QWORD PTR [rdi-0x8]
   140005c07:	sub    rdi,0x8
   140005c0b:	call   0x14000b8c8
   140005c10:	cmp    rdi,rsi
   140005c13:	jne    0x140005c03
   140005c15:	mov    rcx,rbx
   140005c18:	call   QWORD PTR [rip+0x7902]        # 0x14000d520
   140005c1e:	mov    rax,r13
   140005c21:	add    rsp,0x80
   140005c28:	pop    r15
   140005c2a:	pop    r13
   140005c2c:	pop    rdi
   140005c2d:	pop    rsi
   140005c2e:	pop    rbx
   140005c2f:	ret    
   140005c30:	rex push rbx
   140005c32:	sub    rsp,0x40
   140005c36:	mov    r8,rdx
   140005c39:	mov    rdx,QWORD PTR [rcx+0x58]
   140005c3d:	mov    rbx,rcx
   140005c40:	lea    rcx,[rsp+0x20]
   140005c45:	call   0x140005970
   140005c4a:	mov    edx,DWORD PTR [rsp+0x20]
   140005c4e:	test   edx,edx
   140005c50:	js     0x140005c95
   140005c52:	cmp    DWORD PTR [rsp+0x24],0x0
   140005c57:	jl     0x140005c95
   140005c59:	cmp    QWORD PTR [rsp+0x30],0x0
   140005c5f:	je     0x140005c95
   140005c61:	mov    rcx,QWORD PTR [rbx+0x58]
   140005c65:	xor    eax,eax
   140005c67:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005c6f:	mov    DWORD PTR [rsp+0x24],0xffffffff
   140005c77:	mov    QWORD PTR [rsp+0x28],rax
   140005c7c:	mov    QWORD PTR [rsp+0x30],rax
   140005c81:	mov    rax,QWORD PTR [rcx]
   140005c84:	lea    r9,[rsp+0x20]
   140005c89:	mov    r8d,0x1
   140005c8f:	call   QWORD PTR [rax+0xf8]
   140005c95:	add    rsp,0x40
   140005c99:	pop    rbx
   140005c9a:	ret    
   140005c9b:	int3   
   140005c9c:	int3   
   140005c9d:	int3   
   140005c9e:	int3   
   140005c9f:	int3   
   140005ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ca5:	mov    QWORD PTR [rsp+0x10],rbp
   140005caa:	mov    QWORD PTR [rsp+0x18],rsi
   140005caf:	push   rdi
   140005cb0:	sub    rsp,0x40
   140005cb4:	mov    rdi,r8
   140005cb7:	mov    rbp,rdx
   140005cba:	mov    r8,rdx
   140005cbd:	mov    rdx,QWORD PTR [rcx+0x58]
   140005cc1:	mov    rsi,rcx
   140005cc4:	lea    rcx,[rsp+0x20]
   140005cc9:	mov    rbx,r9
   140005ccc:	call   0x140005970
   140005cd1:	mov    edx,DWORD PTR [rsp+0x20]
   140005cd5:	mov    r11,QWORD PTR [rsp+0x30]
   140005cda:	mov    r10d,DWORD PTR [rsp+0x24]
   140005cdf:	test   edx,edx
   140005ce1:	js     0x140005ced
   140005ce3:	test   r10d,r10d
   140005ce6:	js     0x140005ced
   140005ce8:	test   r11,r11
   140005ceb:	jne    0x140005d03
   140005ced:	mov    rax,QWORD PTR [rdi]
   140005cf0:	cmp    DWORD PTR [rax+0x4],0x0
   140005cf4:	jne    0x140005d03
   140005cf6:	mov    rax,QWORD PTR [rbx]
   140005cf9:	cmp    DWORD PTR [rax+0x4],0x0
   140005cfd:	jne    0x140005db1
   140005d03:	test   edx,edx
   140005d05:	js     0x140005dbc
   140005d0b:	test   r10d,r10d
   140005d0e:	js     0x140005dbc
   140005d14:	test   r11,r11
   140005d17:	je     0x140005d61
   140005d19:	mov    rax,QWORD PTR [rdi]
   140005d1c:	cmp    DWORD PTR [rax+0x4],0x0
   140005d20:	je     0x140005d61
   140005d22:	mov    rax,QWORD PTR [rbx]
   140005d25:	cmp    DWORD PTR [rax+0x4],0x0
   140005d29:	jne    0x140005d61
   140005d2b:	mov    rcx,QWORD PTR [rsi+0x58]
   140005d2f:	xor    eax,eax
   140005d31:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005d39:	mov    DWORD PTR [rsp+0x24],0xffffffff
   140005d41:	mov    QWORD PTR [rsp+0x28],rax
   140005d46:	mov    QWORD PTR [rsp+0x30],rax
   140005d4b:	mov    rax,QWORD PTR [rcx]
   140005d4e:	lea    r9,[rsp+0x20]
   140005d53:	mov    r8d,0x1
   140005d59:	call   QWORD PTR [rax+0xf8]
   140005d5f:	jmp    0x140005dbc
   140005d61:	test   r10d,r10d
   140005d64:	js     0x140005dbc
   140005d66:	test   r11,r11
   140005d69:	je     0x140005dbc
   140005d6b:	mov    rax,QWORD PTR [rdi]
   140005d6e:	cmp    DWORD PTR [rax+0x4],0x0
   140005d72:	je     0x140005dbc
   140005d74:	mov    rax,QWORD PTR [rbx]
   140005d77:	cmp    DWORD PTR [rax+0x4],0x0
   140005d7b:	je     0x140005dbc
   140005d7d:	mov    rcx,QWORD PTR [rsi+0x58]
   140005d81:	xor    eax,eax
   140005d83:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005d8b:	mov    DWORD PTR [rsp+0x24],0xffffffff
   140005d93:	mov    QWORD PTR [rsp+0x28],rax
   140005d98:	mov    QWORD PTR [rsp+0x30],rax
   140005d9d:	mov    rax,QWORD PTR [rcx]
   140005da0:	lea    r9,[rsp+0x20]
   140005da5:	mov    r8d,0x1
   140005dab:	call   QWORD PTR [rax+0xf8]
   140005db1:	mov    rdx,rbp
   140005db4:	mov    rcx,rsi
   140005db7:	call   0x140001720
   140005dbc:	mov    rbx,QWORD PTR [rsp+0x50]
   140005dc1:	mov    rbp,QWORD PTR [rsp+0x58]
   140005dc6:	mov    rsi,QWORD PTR [rsp+0x60]
   140005dcb:	add    rsp,0x40
   140005dcf:	pop    rdi
   140005dd0:	ret    
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	mov    eax,0x1
   140005de5:	ret    
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	rex push rbx
   140005df2:	sub    rsp,0x20
   140005df6:	mov    rcx,QWORD PTR [r8+0x8]
   140005dfa:	mov    rbx,rdx
   140005dfd:	test   rcx,rcx
   140005e00:	jne    0x140005e14
   140005e02:	mov    rcx,rdx
   140005e05:	call   QWORD PTR [rip+0x79fd]        # 0x14000d808
   140005e0b:	mov    rax,rbx
   140005e0e:	add    rsp,0x20
   140005e12:	pop    rbx
   140005e13:	ret    
   140005e14:	test   r9d,r9d
   140005e17:	jne    0x140005e02
   140005e19:	mov    rax,QWORD PTR [rcx+0x28]
   140005e1d:	lea    rdx,[rcx+0x28]
   140005e21:	cmp    DWORD PTR [rax+0x4],r9d
   140005e25:	jne    0x140005e2b
   140005e27:	lea    rdx,[rcx+0x20]
   140005e2b:	mov    rcx,rbx
   140005e2e:	call   QWORD PTR [rip+0x7814]        # 0x14000d648
   140005e34:	mov    rax,rbx
   140005e37:	add    rsp,0x20
   140005e3b:	pop    rbx
   140005e3c:	ret    
   140005e3d:	int3   
   140005e3e:	int3   
   140005e3f:	int3   
   140005e40:	rex push rbx
   140005e42:	sub    rsp,0x30
   140005e46:	cmp    DWORD PTR [rsp+0x60],0x0
   140005e4b:	mov    rbx,rdx
   140005e4e:	jne    0x140005ea8
   140005e50:	cmp    r9d,0x2
   140005e54:	je     0x140005ea8
   140005e56:	test   r8d,r8d
   140005e59:	jne    0x140005ea8
   140005e5b:	or     rcx,0xffffffffffffffff
   140005e5f:	lea    rdx,[rip+0xa1d2]        # 0x140010038
   140005e66:	mov    QWORD PTR [rsp+0x40],rdi
   140005e6b:	mov    QWORD PTR [rsp+0x28],rdx
   140005e70:	mov    rdi,rdx
   140005e73:	xor    eax,eax
   140005e75:	repnz scas al,BYTE PTR es:[rdi]
   140005e77:	lea    rdx,[rsp+0x20]
   140005e7c:	not    rcx
   140005e7f:	dec    rcx
   140005e82:	mov    DWORD PTR [rsp+0x20],ecx
   140005e86:	mov    rcx,rbx
   140005e89:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140005e8e:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140005e94:	call   QWORD PTR [rip+0x756e]        # 0x14000d408
   140005e9a:	mov    rdi,QWORD PTR [rsp+0x40]
   140005e9f:	mov    rax,rbx
   140005ea2:	add    rsp,0x30
   140005ea6:	pop    rbx
   140005ea7:	ret    
   140005ea8:	mov    rcx,rdx
   140005eab:	call   QWORD PTR [rip+0x7957]        # 0x14000d808
   140005eb1:	mov    rax,rbx
   140005eb4:	add    rsp,0x30
   140005eb8:	pop    rbx
   140005eb9:	ret    
   140005eba:	int3   
   140005ebb:	int3   
   140005ebc:	int3   
   140005ebd:	int3   
   140005ebe:	int3   
   140005ebf:	int3   
   140005ec0:	mov    rax,QWORD PTR [rdx+0x8]
   140005ec4:	test   rax,rax
   140005ec7:	je     0x140005ecc
   140005ec9:	mov    eax,DWORD PTR [rax]
   140005ecb:	ret    
   140005ecc:	mov    eax,0x1
   140005ed1:	ret    
   140005ed2:	int3   
   140005ed3:	int3   
   140005ed4:	int3   
   140005ed5:	int3   
   140005ed6:	int3   
   140005ed7:	int3   
   140005ed8:	int3   
   140005ed9:	int3   
   140005eda:	int3   
   140005edb:	int3   
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140005eea:	push   rdi
   140005eeb:	sub    rsp,0x50
   140005eef:	mov    rax,QWORD PTR [r8]
   140005ef2:	mov    rsi,rcx
   140005ef5:	lea    rcx,[rsp+0x20]
   140005efa:	mov    QWORD PTR [rcx],rax
   140005efd:	mov    rax,QWORD PTR [r8+0x8]
   140005f01:	mov    rdi,rdx
   140005f04:	mov    QWORD PTR [rcx+0x8],rax
   140005f08:	mov    rax,QWORD PTR [r8+0x10]
   140005f0c:	mov    QWORD PTR [rcx+0x10],rax
   140005f10:	mov    rax,QWORD PTR [rsp+0x20]
   140005f15:	mov    rbx,QWORD PTR [rsp+0x28]
   140005f1a:	test   eax,eax
   140005f1c:	js     0x140005f60
   140005f1e:	shr    rax,0x20
   140005f22:	test   eax,eax
   140005f24:	js     0x140005f60
   140005f26:	cmp    QWORD PTR [rsp+0x30],0x0
   140005f2c:	je     0x140005f60
   140005f2e:	cmp    DWORD PTR [rbx],0x1
   140005f31:	je     0x140005f60
   140005f33:	lea    rdx,[rsp+0x38]
   140005f38:	lea    rcx,[rsp+0x20]
   140005f3d:	call   QWORD PTR [rip+0x74bd]        # 0x14000d400
   140005f43:	lea    rdx,[rsp+0x20]
   140005f48:	mov    rcx,QWORD PTR [rax]
   140005f4b:	mov    QWORD PTR [rdx],rcx
   140005f4e:	mov    rcx,QWORD PTR [rax+0x8]
   140005f52:	mov    QWORD PTR [rdx+0x8],rcx
   140005f56:	mov    rax,QWORD PTR [rax+0x10]
   140005f5a:	mov    QWORD PTR [rdx+0x10],rax
   140005f5e:	jmp    0x140005f10
   140005f60:	test   rbx,rbx
   140005f63:	jne    0x140005f69
   140005f65:	mov    rbx,QWORD PTR [rsi+0x20]
   140005f69:	mov    rcx,rdi
   140005f6c:	call   QWORD PTR [rip+0x7716]        # 0x14000d688
   140005f72:	test   rbx,rbx
   140005f75:	je     0x140005f96
   140005f77:	nop    WORD PTR [rax+rax*1+0x0]
   140005f80:	lea    rdx,[rbx+0x20]
   140005f84:	mov    rcx,rdi
   140005f87:	call   QWORD PTR [rip+0x7483]        # 0x14000d410
   140005f8d:	mov    rbx,QWORD PTR [rbx+0x8]
   140005f91:	test   rbx,rbx
   140005f94:	jne    0x140005f80
   140005f96:	mov    rax,QWORD PTR [rdi]
   140005f99:	cmp    DWORD PTR [rax+0x4],0x1
   140005f9d:	jle    0x140005fad
   140005f9f:	mov    edx,0x1
   140005fa4:	mov    rcx,rdi
   140005fa7:	call   QWORD PTR [rip+0x7523]        # 0x14000d4d0
   140005fad:	mov    rbx,QWORD PTR [rsp+0x60]
   140005fb2:	mov    rsi,QWORD PTR [rsp+0x68]
   140005fb7:	mov    rax,rdi
   140005fba:	add    rsp,0x50
   140005fbe:	pop    rdi
   140005fbf:	ret    
   140005fc0:	rex push rbx
   140005fc2:	sub    rsp,0x20
   140005fc6:	mov    rbx,rdx
   140005fc9:	mov    rdx,QWORD PTR [r8+0x8]
   140005fcd:	test   rdx,rdx
   140005fd0:	je     0x140005ffb
   140005fd2:	cmp    DWORD PTR [rdx],0x0
   140005fd5:	jne    0x140005fed
   140005fd7:	add    rdx,0x20
   140005fdb:	mov    rcx,rbx
   140005fde:	call   QWORD PTR [rip+0x783c]        # 0x14000d820
   140005fe4:	mov    rax,rbx
   140005fe7:	add    rsp,0x20
   140005feb:	pop    rbx
   140005fec:	ret    
   140005fed:	mov    rdx,QWORD PTR [rdx+0x8]
   140005ff1:	test   rdx,rdx
   140005ff4:	je     0x140005ffb
   140005ff6:	cmp    DWORD PTR [rdx],0x0
   140005ff9:	je     0x140005fd7
   140005ffb:	mov    rcx,rbx
   140005ffe:	call   QWORD PTR [rip+0x7684]        # 0x14000d688
   140006004:	mov    rax,rbx
   140006007:	add    rsp,0x20
   14000600b:	pop    rbx
   14000600c:	ret    
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	mov    QWORD PTR [rsp+0x8],rbx
   140006015:	push   rdi
   140006016:	sub    rsp,0x20
   14000601a:	xor    edi,edi
   14000601c:	mov    rbx,rdx
   14000601f:	mov    DWORD PTR [rsp+0x38],edi
   140006023:	mov    rax,QWORD PTR [r8+0x8]
   140006027:	test   rax,rax
   14000602a:	je     0x140006032
   14000602c:	add    rax,0x20
   140006030:	jmp    0x140006042
   140006032:	lea    rcx,[rsp+0x38]
   140006037:	mov    edi,0x1
   14000603c:	call   QWORD PTR [rip+0x7646]        # 0x14000d688
   140006042:	mov    rdx,rax
   140006045:	mov    rcx,rbx
   140006048:	call   QWORD PTR [rip+0x77d2]        # 0x14000d820
   14000604e:	test   dil,0x1
   140006052:	je     0x14000605f
   140006054:	lea    rcx,[rsp+0x38]
   140006059:	call   QWORD PTR [rip+0x7669]        # 0x14000d6c8
   14000605f:	mov    rax,rbx
   140006062:	mov    rbx,QWORD PTR [rsp+0x30]
   140006067:	add    rsp,0x20
   14000606b:	pop    rdi
   14000606c:	ret    
   14000606d:	int3   
   14000606e:	int3   
   14000606f:	int3   
   140006070:	mov    QWORD PTR [rsp+0x8],rbx
   140006075:	push   rdi
   140006076:	sub    rsp,0x20
   14000607a:	xor    edi,edi
   14000607c:	mov    rbx,rdx
   14000607f:	mov    DWORD PTR [rsp+0x38],edi
   140006083:	mov    rax,QWORD PTR [r8+0x8]
   140006087:	test   rax,rax
   14000608a:	je     0x140006092
   14000608c:	add    rax,0x30
   140006090:	jmp    0x1400060a2
   140006092:	lea    rcx,[rsp+0x38]
   140006097:	mov    edi,0x1
   14000609c:	call   QWORD PTR [rip+0x75e6]        # 0x14000d688
   1400060a2:	mov    rdx,rax
   1400060a5:	mov    rcx,rbx
   1400060a8:	call   QWORD PTR [rip+0x7772]        # 0x14000d820
   1400060ae:	test   dil,0x1
   1400060b2:	je     0x1400060bf
   1400060b4:	lea    rcx,[rsp+0x38]
   1400060b9:	call   QWORD PTR [rip+0x7609]        # 0x14000d6c8
   1400060bf:	mov    rax,rbx
   1400060c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400060c7:	add    rsp,0x20
   1400060cb:	pop    rdi
   1400060cc:	ret    
   1400060cd:	int3   
   1400060ce:	int3   
   1400060cf:	int3   
   1400060d0:	mov    rax,QWORD PTR [rsp+0x28]
   1400060d5:	mov    r10d,r9d
   1400060d8:	mov    r11,rcx
   1400060db:	mov    r9,QWORD PTR [rax+0x8]
   1400060df:	test   r9,r9
   1400060e2:	jne    0x1400060e8
   1400060e4:	mov    r9,QWORD PTR [rcx+0x20]
   1400060e8:	test   r10d,r10d
   1400060eb:	jne    0x14000611f
   1400060ed:	test   r8d,r8d
   1400060f0:	js     0x14000611f
   1400060f2:	mov    r9,QWORD PTR [r9+0x10]
   1400060f6:	cmp    r8d,DWORD PTR [r9+0x4]
   1400060fa:	jge    0x14000611f
   1400060fc:	xor    eax,eax
   1400060fe:	movsxd rcx,r8d
   140006101:	mov    DWORD PTR [rdx],r8d
   140006104:	mov    DWORD PTR [rdx+0x4],eax
   140006107:	mov    rax,QWORD PTR [r9+0x10]
   14000610b:	mov    QWORD PTR [rdx+0x10],r11
   14000610f:	lea    rcx,[rax+rcx*8]
   140006113:	mov    rax,QWORD PTR [rcx+r9*1]
   140006117:	mov    QWORD PTR [rdx+0x8],rax
   14000611b:	mov    rax,rdx
   14000611e:	ret    
   14000611f:	xor    eax,eax
   140006121:	mov    DWORD PTR [rdx],0xffffffff
   140006127:	mov    DWORD PTR [rdx+0x4],0xffffffff
   14000612e:	mov    QWORD PTR [rdx+0x10],rax
   140006132:	mov    QWORD PTR [rdx+0x8],rax
   140006136:	mov    rax,rdx
   140006139:	ret    
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	mov    r8,QWORD PTR [r8+0x8]
   140006144:	mov    r11,rcx
   140006147:	test   r8,r8
   14000614a:	je     0x1400061c2
   14000614c:	mov    r8,QWORD PTR [r8+0x8]
   140006150:	test   r8,r8
   140006153:	je     0x1400061c2
   140006155:	mov    rax,QWORD PTR [r8+0x8]
   140006159:	test   rax,rax
   14000615c:	je     0x1400061c2
   14000615e:	mov    r10,QWORD PTR [rax+0x10]
   140006162:	cmp    DWORD PTR [r10+0x4],0x0
   140006167:	jle    0x14000618f
   140006169:	movsxd rcx,DWORD PTR [r10+0x4]
   14000616d:	mov    rax,QWORD PTR [r10+0x10]
   140006171:	lea    r9,[rax+rcx*8]
   140006175:	lea    rcx,[r10+rax*1]
   140006179:	add    r9,r10
   14000617c:	cmp    rcx,r9
   14000617f:	je     0x14000618f
   140006181:	cmp    QWORD PTR [rcx],r8
   140006184:	je     0x1400061a5
   140006186:	add    rcx,0x8
   14000618a:	cmp    rcx,r9
   14000618d:	jne    0x140006181
   14000618f:	or     ecx,0xffffffff
   140006192:	xor    eax,eax
   140006194:	mov    QWORD PTR [rdx+0x8],r8
   140006198:	mov    DWORD PTR [rdx+0x4],eax
   14000619b:	mov    rax,rdx
   14000619e:	mov    DWORD PTR [rdx],ecx
   1400061a0:	mov    QWORD PTR [rdx+0x10],r11
   1400061a4:	ret    
   1400061a5:	sub    rcx,rax
   1400061a8:	mov    QWORD PTR [rdx+0x8],r8
   1400061ac:	mov    QWORD PTR [rdx+0x10],r11
   1400061b0:	sub    rcx,r10
   1400061b3:	sar    rcx,0x3
   1400061b7:	xor    eax,eax
   1400061b9:	mov    DWORD PTR [rdx+0x4],eax
   1400061bc:	mov    rax,rdx
   1400061bf:	mov    DWORD PTR [rdx],ecx
   1400061c1:	ret    
   1400061c2:	xor    eax,eax
   1400061c4:	mov    DWORD PTR [rdx],0xffffffff
   1400061ca:	mov    DWORD PTR [rdx+0x4],0xffffffff
   1400061d1:	mov    QWORD PTR [rdx+0x8],rax
   1400061d5:	mov    QWORD PTR [rdx+0x10],rax
   1400061d9:	mov    rax,rdx
   1400061dc:	ret    
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400061e5:	push   rdi
   1400061e6:	sub    rsp,0x30
   1400061ea:	xor    r8d,r8d
   1400061ed:	mov    rbx,rdx
   1400061f0:	mov    rdi,rcx
   1400061f3:	lea    edx,[r8+0xa]
   1400061f7:	lea    rcx,[rsp+0x20]
   1400061fc:	call   QWORD PTR [rip+0x71c6]        # 0x14000d3c8
   140006202:	lea    r8,[rsp+0x20]
   140006207:	mov    rdx,rdi
   14000620a:	mov    rcx,rbx
   14000620d:	call   QWORD PTR [rip+0x7675]        # 0x14000d888
   140006213:	lea    rcx,[rsp+0x20]
   140006218:	call   QWORD PTR [rip+0x71ba]        # 0x14000d3d8
   14000621e:	cmp    eax,0xa
   140006221:	jne    0x14000623e
   140006223:	lea    rcx,[rsp+0x20]
   140006228:	call   QWORD PTR [rip+0x71b2]        # 0x14000d3e0
   14000622e:	lea    rcx,[rsp+0x50]
   140006233:	mov    rdx,rax
   140006236:	call   QWORD PTR [rip+0x75e4]        # 0x14000d820
   14000623c:	jmp    0x140006285
   14000623e:	lea    rcx,[rsp+0x40]
   140006243:	call   QWORD PTR [rip+0x743f]        # 0x14000d688
   140006249:	lea    r8,[rsp+0x40]
   14000624e:	lea    rcx,[rsp+0x20]
   140006253:	mov    edx,0xa
   140006258:	call   QWORD PTR [rip+0x718a]        # 0x14000d3e8
   14000625e:	lea    rcx,[rsp+0x50]
   140006263:	test   al,al
   140006265:	je     0x140006274
   140006267:	lea    rdx,[rsp+0x40]
   14000626c:	call   QWORD PTR [rip+0x75ae]        # 0x14000d820
   140006272:	jmp    0x14000627a
   140006274:	call   QWORD PTR [rip+0x740e]        # 0x14000d688
   14000627a:	lea    rcx,[rsp+0x40]
   14000627f:	call   QWORD PTR [rip+0x7443]        # 0x14000d6c8
   140006285:	lea    rcx,[rdi+0x20]
   140006289:	lea    rdx,[rsp+0x50]
   14000628e:	call   QWORD PTR [rip+0x73d4]        # 0x14000d668
   140006294:	lea    rcx,[rsp+0x50]
   140006299:	call   QWORD PTR [rip+0x7429]        # 0x14000d6c8
   14000629f:	lea    rcx,[rsp+0x20]
   1400062a4:	call   QWORD PTR [rip+0x754e]        # 0x14000d7f8
   1400062aa:	mov    rbx,QWORD PTR [rsp+0x48]
   1400062af:	mov    rax,rdi
   1400062b2:	add    rsp,0x30
   1400062b6:	pop    rdi
   1400062b7:	ret    
   1400062b8:	int3   
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	rex push rbx
   1400062c2:	push   rbp
   1400062c3:	push   rdi
   1400062c4:	sub    rsp,0x20
   1400062c8:	mov    rbx,QWORD PTR [rcx]
   1400062cb:	mov    QWORD PTR [rsp+0x40],rsi
   1400062d0:	movsxd rbp,r8d
   1400062d3:	mov    eax,DWORD PTR [rbx]
   1400062d5:	movsxd rsi,edx
   1400062d8:	mov    rdi,rcx
   1400062db:	cmp    eax,0x1
   1400062de:	je     0x1400062e8
   1400062e0:	test   eax,eax
   1400062e2:	je     0x1400062e8
   1400062e4:	mov    cl,0x1
   1400062e6:	jmp    0x1400062ea
   1400062e8:	xor    cl,cl
   1400062ea:	test   r8d,r8d
   1400062ed:	je     0x1400063ee
   1400062f3:	mov    eax,DWORD PTR [rbx+0x8]
   1400062f6:	btr    eax,0x1f
   1400062fa:	cmp    ebp,eax
   1400062fc:	jne    0x140006339
   1400062fe:	test   cl,cl
   140006300:	jne    0x140006339
   140006302:	cmp    esi,DWORD PTR [rbx+0x4]
   140006305:	jle    0x140006331
   140006307:	mov    rdx,QWORD PTR [rbx+0x10]
   14000630b:	movsxd rax,DWORD PTR [rbx+0x4]
   14000630f:	mov    r8,rsi
   140006312:	shl    r8,0x3
   140006316:	lea    rcx,[rdx+rax*8]
   14000631a:	add    rcx,rbx
   14000631d:	sub    r8,rcx
   140006320:	add    r8,rdx
   140006323:	xor    edx,edx
   140006325:	add    r8,rbx
   140006328:	and    r8,0xfffffffffffffff8
   14000632c:	call   0x14000b8d4
   140006331:	mov    DWORD PTR [rbx+0x4],esi
   140006334:	jmp    0x1400063f5
   140006339:	mov    edx,0x8
   14000633e:	mov    r8,rbp
   140006341:	mov    QWORD PTR [rsp+0x48],r12
   140006346:	mov    rcx,rdx
   140006349:	mov    QWORD PTR [rsp+0x50],r13
   14000634e:	call   QWORD PTR [rip+0x707c]        # 0x14000d3d0
   140006354:	mov    rbx,rax
   140006357:	mov    DWORD PTR [rax+0x4],esi
   14000635a:	mov    r9,QWORD PTR [rdi]
   14000635d:	cmp    esi,DWORD PTR [r9+0x4]
   140006361:	mov    rcx,QWORD PTR [r9+0x10]
   140006365:	lea    r10,[r9+rcx*1]
   140006369:	jle    0x140006378
   14000636b:	movsxd rdx,DWORD PTR [r9+0x4]
   14000636f:	lea    r8,[rcx+rdx*8]
   140006373:	add    r8,r9
   140006376:	jmp    0x14000637f
   140006378:	lea    r8,[rcx+rsi*8]
   14000637c:	add    r8,r9
   14000637f:	mov    rax,QWORD PTR [rax+0x10]
   140006383:	sub    r8,r10
   140006386:	mov    rdx,r10
   140006389:	sar    r8,0x3
   14000638d:	lea    r12,[rbx+rax*1]
   140006391:	lea    r13,[r8*8+0x0]
   140006399:	mov    rcx,r12
   14000639c:	mov    r8,r13
   14000639f:	call   0x14000b8ce
   1400063a4:	mov    r11,QWORD PTR [rdi]
   1400063a7:	cmp    esi,DWORD PTR [r11+0x4]
   1400063ab:	jle    0x1400063cf
   1400063ad:	movsxd r8,DWORD PTR [rbx+0x4]
   1400063b1:	lea    rcx,[r13+r12*1+0x0]
   1400063b6:	xor    edx,edx
   1400063b8:	shl    r8,0x3
   1400063bc:	sub    r8,rcx
   1400063bf:	add    r8,QWORD PTR [rbx+0x10]
   1400063c3:	add    r8,rbx
   1400063c6:	and    r8,0xfffffffffffffff8
   1400063ca:	call   0x14000b8d4
   1400063cf:	mov    rax,QWORD PTR [rdi]
   1400063d2:	mov    r13,QWORD PTR [rsp+0x50]
   1400063d7:	mov    r12,QWORD PTR [rsp+0x48]
   1400063dc:	mov    ecx,DWORD PTR [rax+0x8]
   1400063df:	xor    ecx,DWORD PTR [rbx+0x8]
   1400063e2:	btr    ecx,0x1f
   1400063e6:	xor    ecx,DWORD PTR [rax+0x8]
   1400063e9:	mov    DWORD PTR [rbx+0x8],ecx
   1400063ec:	jmp    0x1400063f5
   1400063ee:	mov    rbx,QWORD PTR [rip+0x7003]        # 0x14000d3f8
   1400063f5:	mov    rcx,QWORD PTR [rdi]
   1400063f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400063fd:	cmp    rcx,rbx
   140006400:	je     0x14000642c
   140006402:	mov    eax,DWORD PTR [rcx]
   140006404:	test   eax,eax
   140006406:	je     0x140006418
   140006408:	cmp    eax,0xffffffff
   14000640b:	je     0x140006429
   14000640d:	lock add DWORD PTR [rcx],0xffffffff
   140006411:	setne  al
   140006414:	test   al,al
   140006416:	jne    0x140006429
   140006418:	mov    rcx,QWORD PTR [rdi]
   14000641b:	mov    edx,0x8
   140006420:	mov    r8,rdx
   140006423:	call   QWORD PTR [rip+0x6fc7]        # 0x14000d3f0
   140006429:	mov    QWORD PTR [rdi],rbx
   14000642c:	add    rsp,0x20
   140006430:	pop    rdi
   140006431:	pop    rbp
   140006432:	pop    rbx
   140006433:	ret    
   140006434:	int3   
   140006435:	int3   
   140006436:	int3   
   140006437:	int3   
   140006438:	int3   
   140006439:	int3   
   14000643a:	int3   
   14000643b:	int3   
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	mov    QWORD PTR [rsp+0x8],rbx
   140006445:	mov    QWORD PTR [rsp+0x10],rbp
   14000644a:	mov    QWORD PTR [rsp+0x18],rsi
   14000644f:	push   rdi
   140006450:	sub    rsp,0x20
   140006454:	mov    r8,QWORD PTR [rcx]
   140006457:	mov    rbx,rcx
   14000645a:	movsxd rax,DWORD PTR [r8+0x8]
   14000645e:	lea    rdi,[r8+rax*8+0x10]
   140006463:	call   QWORD PTR [rip+0x70a7]        # 0x14000d510
   140006469:	mov    rdx,QWORD PTR [rbx]
   14000646c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140006470:	mov    rsi,rax
   140006473:	lea    rbp,[rdx+rcx*8+0x10]
   140006478:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000647c:	lea    rbx,[rdx+rcx*8+0x10]
   140006481:	cmp    rbx,rbp
   140006484:	je     0x1400064a4
   140006486:	test   rbx,rbx
   140006489:	je     0x140006497
   14000648b:	mov    rdx,rdi
   14000648e:	mov    rcx,rbx
   140006491:	call   QWORD PTR [rip+0x7389]        # 0x14000d820
   140006497:	add    rbx,0x8
   14000649b:	add    rdi,0x8
   14000649f:	cmp    rbx,rbp
   1400064a2:	jne    0x140006486
   1400064a4:	mov    eax,DWORD PTR [rsi]
   1400064a6:	test   eax,eax
   1400064a8:	je     0x1400064ba
   1400064aa:	cmp    eax,0xffffffff
   1400064ad:	je     0x1400064ec
   1400064af:	lock add DWORD PTR [rsi],0xffffffff
   1400064b3:	setne  al
   1400064b6:	test   al,al
   1400064b8:	jne    0x1400064ec
   1400064ba:	movsxd rax,DWORD PTR [rsi+0xc]
   1400064be:	lea    rbx,[rsi+rax*8+0x10]
   1400064c3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400064c7:	lea    rdi,[rsi+rax*8+0x10]
   1400064cc:	cmp    rdi,rbx
   1400064cf:	je     0x1400064e3
   1400064d1:	sub    rbx,0x8
   1400064d5:	mov    rcx,rbx
   1400064d8:	call   QWORD PTR [rip+0x71ea]        # 0x14000d6c8
   1400064de:	cmp    rbx,rdi
   1400064e1:	jne    0x1400064d1
   1400064e3:	mov    rcx,rsi
   1400064e6:	call   QWORD PTR [rip+0x7034]        # 0x14000d520
   1400064ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400064f1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400064f6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400064fb:	add    rsp,0x20
   1400064ff:	pop    rdi
   140006500:	ret    
   140006501:	int3   
   140006502:	int3   
   140006503:	int3   
   140006504:	int3   
   140006505:	int3   
   140006506:	int3   
   140006507:	int3   
   140006508:	int3   
   140006509:	int3   
   14000650a:	int3   
   14000650b:	int3   
   14000650c:	int3   
   14000650d:	int3   
   14000650e:	int3   
   14000650f:	int3   
   140006510:	rex push rbx
   140006512:	sub    rsp,0x20
   140006516:	mov    r8,QWORD PTR [rcx+0x10]
   14000651a:	mov    rbx,rcx
   14000651d:	mov    rax,QWORD PTR [r8+0x10]
   140006521:	movsxd rdx,DWORD PTR [r8+0x4]
   140006525:	lea    rdx,[rax+rdx*8]
   140006529:	lea    rcx,[r8+rax*1]
   14000652d:	add    rdx,r8
   140006530:	call   0x1400066b0
   140006535:	lea    rcx,[rbx+0x30]
   140006539:	call   QWORD PTR [rip+0x7189]        # 0x14000d6c8
   14000653f:	lea    rcx,[rbx+0x28]
   140006543:	call   QWORD PTR [rip+0x717f]        # 0x14000d6c8
   140006549:	lea    rcx,[rbx+0x20]
   14000654d:	call   QWORD PTR [rip+0x7175]        # 0x14000d6c8
   140006553:	mov    rcx,QWORD PTR [rbx+0x10]
   140006557:	mov    eax,DWORD PTR [rcx]
   140006559:	test   eax,eax
   14000655b:	je     0x14000656d
   14000655d:	cmp    eax,0xffffffff
   140006560:	je     0x14000657f
   140006562:	lock add DWORD PTR [rcx],0xffffffff
   140006566:	setne  al
   140006569:	test   al,al
   14000656b:	jne    0x14000657f
   14000656d:	mov    rcx,QWORD PTR [rbx+0x10]
   140006571:	mov    edx,0x8
   140006576:	mov    r8,rdx
   140006579:	call   QWORD PTR [rip+0x6e71]        # 0x14000d3f0
   14000657f:	add    rsp,0x20
   140006583:	pop    rbx
   140006584:	ret    
   140006585:	int3   
   140006586:	int3   
   140006587:	int3   
   140006588:	int3   
   140006589:	int3   
   14000658a:	int3   
   14000658b:	int3   
   14000658c:	int3   
   14000658d:	int3   
   14000658e:	int3   
   14000658f:	int3   
   140006590:	mov    QWORD PTR [rsp+0x10],rbx
   140006595:	mov    QWORD PTR [rsp+0x18],rbp
   14000659a:	mov    QWORD PTR [rsp+0x20],rsi
   14000659f:	push   rdi
   1400065a0:	sub    rsp,0x30
   1400065a4:	mov    rdi,rdx
   1400065a7:	xor    ebp,ebp
   1400065a9:	xor    edx,edx
   1400065ab:	mov    rbx,r8
   1400065ae:	mov    rsi,rcx
   1400065b1:	mov    DWORD PTR [rsp+0x40],ebp
   1400065b5:	call   QWORD PTR [rip+0x6e05]        # 0x14000d3c0
   1400065bb:	lea    r11,[rip+0x9a96]        # 0x140010058
   1400065c2:	lea    rcx,[rsi+0x10]
   1400065c6:	mov    rdx,rdi
   1400065c9:	mov    QWORD PTR [rsi],r11
   1400065cc:	call   QWORD PTR [rip+0x724e]        # 0x14000d820
   1400065d2:	lea    rcx,[rsi+0x18]
   1400065d6:	mov    rdx,rbx
   1400065d9:	call   QWORD PTR [rip+0x7351]        # 0x14000d930
   1400065df:	lea    ecx,[rbp+0x38]
   1400065e2:	mov    QWORD PTR [rsi+0x20],rbp
   1400065e6:	call   0x14000b8c2
   1400065eb:	mov    rbx,rax
   1400065ee:	test   rax,rax
   1400065f1:	je     0x14000667a
   1400065f7:	or     rcx,0xffffffffffffffff
   1400065fb:	lea    rdx,[rip+0x9a3e]        # 0x140010040
   140006602:	xor    eax,eax
   140006604:	mov    QWORD PTR [rsp+0x28],rdx
   140006609:	mov    rdi,rdx
   14000660c:	lea    rdx,[rsp+0x20]
   140006611:	repnz scas al,BYTE PTR es:[rdi]
   140006613:	not    rcx
   140006616:	dec    rcx
   140006619:	mov    DWORD PTR [rsp+0x20],ecx
   14000661d:	lea    rcx,[rsp+0x40]
   140006622:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140006627:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000662d:	call   QWORD PTR [rip+0x705d]        # 0x14000d690
   140006633:	mov    QWORD PTR [rbx+0x8],0x0
   14000663b:	mov    ebp,0x1
   140006640:	lea    rcx,[rbx+0x20]
   140006644:	lea    rdx,[rsp+0x40]
   140006649:	mov    DWORD PTR [rbx],ebp
   14000664b:	mov    rax,QWORD PTR [rip+0x6da6]        # 0x14000d3f8
   140006652:	mov    QWORD PTR [rbx+0x10],rax
   140006656:	cmp    DWORD PTR [rbx],ebp
   140006658:	setne  al
   14000665b:	mov    BYTE PTR [rbx+0x18],al
   14000665e:	call   QWORD PTR [rip+0x71bc]        # 0x14000d820
   140006664:	lea    rcx,[rbx+0x28]
   140006668:	call   QWORD PTR [rip+0x701a]        # 0x14000d688
   14000666e:	lea    rcx,[rbx+0x30]
   140006672:	call   QWORD PTR [rip+0x7010]        # 0x14000d688
   140006678:	jmp    0x14000667c
   14000667a:	xor    ebx,ebx
   14000667c:	mov    QWORD PTR [rsi+0x20],rbx
   140006680:	test   bpl,0x1
   140006684:	je     0x140006691
   140006686:	lea    rcx,[rsp+0x40]
   14000668b:	call   QWORD PTR [rip+0x7037]        # 0x14000d6c8
   140006691:	mov    rbx,QWORD PTR [rsp+0x48]
   140006696:	mov    rbp,QWORD PTR [rsp+0x50]
   14000669b:	mov    rax,rsi
   14000669e:	mov    rsi,QWORD PTR [rsp+0x58]
   1400066a3:	add    rsp,0x30
   1400066a7:	pop    rdi
   1400066a8:	ret    
   1400066a9:	int3   
   1400066aa:	int3   
   1400066ab:	int3   
   1400066ac:	int3   
   1400066ad:	int3   
   1400066ae:	int3   
   1400066af:	int3   
   1400066b0:	cmp    rcx,rdx
   1400066b3:	je     0x14000675e
   1400066b9:	mov    QWORD PTR [rsp+0x10],rbx
   1400066be:	push   rsi
   1400066bf:	sub    rsp,0x20
   1400066c3:	mov    rsi,rdx
   1400066c6:	mov    rbx,rcx
   1400066c9:	mov    QWORD PTR [rsp+0x30],rdi
   1400066ce:	xchg   ax,ax
   1400066d0:	mov    rdi,QWORD PTR [rbx]
   1400066d3:	test   rdi,rdi
   1400066d6:	je     0x140006746
   1400066d8:	mov    r8,QWORD PTR [rdi+0x10]
   1400066dc:	movsxd rcx,DWORD PTR [r8+0x4]
   1400066e0:	mov    rax,QWORD PTR [r8+0x10]
   1400066e4:	lea    rdx,[rax+rcx*8]
   1400066e8:	lea    rcx,[r8+rax*1]
   1400066ec:	add    rdx,r8
   1400066ef:	call   0x1400066b0
   1400066f4:	lea    rcx,[rdi+0x30]
   1400066f8:	call   QWORD PTR [rip+0x6fca]        # 0x14000d6c8
   1400066fe:	lea    rcx,[rdi+0x28]
   140006702:	call   QWORD PTR [rip+0x6fc0]        # 0x14000d6c8
   140006708:	lea    rcx,[rdi+0x20]
   14000670c:	call   QWORD PTR [rip+0x6fb6]        # 0x14000d6c8
   140006712:	mov    rcx,QWORD PTR [rdi+0x10]
   140006716:	mov    eax,DWORD PTR [rcx]
   140006718:	test   eax,eax
   14000671a:	je     0x14000672c
   14000671c:	cmp    eax,0xffffffff
   14000671f:	je     0x14000673e
   140006721:	lock add DWORD PTR [rcx],0xffffffff
   140006725:	setne  al
   140006728:	test   al,al
   14000672a:	jne    0x14000673e
   14000672c:	mov    rcx,QWORD PTR [rdi+0x10]
   140006730:	mov    edx,0x8
   140006735:	mov    r8,rdx
   140006738:	call   QWORD PTR [rip+0x6cb2]        # 0x14000d3f0
   14000673e:	mov    rcx,rdi
   140006741:	call   0x14000b8c8
   140006746:	add    rbx,0x8
   14000674a:	cmp    rbx,rsi
   14000674d:	jne    0x1400066d0
   14000674f:	mov    rdi,QWORD PTR [rsp+0x30]
   140006754:	mov    rbx,QWORD PTR [rsp+0x38]
   140006759:	add    rsp,0x20
   14000675d:	pop    rsi
   14000675e:	repz ret 
   140006760:	mov    QWORD PTR [rsp+0x10],rbx
   140006765:	mov    QWORD PTR [rsp+0x18],r8
   14000676a:	mov    QWORD PTR [rsp+0x8],rcx
   14000676f:	push   rbp
   140006770:	push   rsi
   140006771:	push   rdi
   140006772:	push   r12
   140006774:	push   r13
   140006776:	push   r14
   140006778:	push   r15
   14000677a:	sub    rsp,0x160
   140006781:	mov    r14,rcx
   140006784:	lea    rcx,[rsp+0x68]
   140006789:	mov    rbx,r8
   14000678c:	mov    r15,rdx
   14000678f:	call   QWORD PTR [rip+0x8003]        # 0x14000e798
   140006795:	or     rcx,0xffffffffffffffff
   140006799:	lea    rdx,[rip+0x9ac0]        # 0x140010260
   1400067a0:	xor    eax,eax
   1400067a2:	mov    QWORD PTR [rsp+0x88],rdx
   1400067aa:	mov    rdi,rdx
   1400067ad:	lea    rdx,[rsp+0x80]
   1400067b5:	repnz scas al,BYTE PTR es:[rdi]
   1400067b7:	not    rcx
   1400067ba:	dec    rcx
   1400067bd:	mov    DWORD PTR [rsp+0x80],ecx
   1400067c4:	lea    rcx,[rsp+0x1b8]
   1400067cc:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400067d4:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   1400067dd:	call   QWORD PTR [rip+0x6ead]        # 0x14000d690
   1400067e3:	lea    rcx,[r14+0x10]
   1400067e7:	lea    rax,[r14+0x18]
   1400067eb:	mov    QWORD PTR [rsp+0x90],rcx
   1400067f3:	mov    rdx,rcx
   1400067f6:	lea    rcx,[rsp+0xa8]
   1400067fe:	lea    r9,[rsp+0x1b8]
   140006806:	mov    r8,rbx
   140006809:	mov    QWORD PTR [rsp+0x28],0x0
   140006812:	mov    QWORD PTR [rsp+0x20],rax
   140006817:	call   QWORD PTR [rip+0x707b]        # 0x14000d898
   14000681d:	lea    rcx,[rsp+0x1b8]
   140006825:	call   QWORD PTR [rip+0x6e9d]        # 0x14000d6c8
   14000682b:	lea    rcx,[rsp+0xa8]
   140006833:	call   QWORD PTR [rip+0x701f]        # 0x14000d858
   140006839:	test   al,al
   14000683b:	jne    0x1400069f0
   140006841:	lea    rdx,[rsp+0xf8]
   140006849:	lea    rcx,[rsp+0xa8]
   140006851:	call   QWORD PTR [rip+0x7009]        # 0x14000d860
   140006857:	lea    rcx,[rsp+0x1a0]
   14000685f:	mov    dl,0x20
   140006861:	call   QWORD PTR [rip+0x6e39]        # 0x14000d6a0
   140006867:	lea    rcx,[rsp+0x1b8]
   14000686f:	mov    dl,0x20
   140006871:	mov    r13,rax
   140006874:	call   QWORD PTR [rip+0x6e26]        # 0x14000d6a0
   14000687a:	lea    rcx,[rsp+0x72]
   14000687f:	mov    dl,0x20
   140006881:	mov    r12,rax
   140006884:	call   QWORD PTR [rip+0x6e16]        # 0x14000d6a0
   14000688a:	lea    rcx,[rsp+0x70]
   14000688f:	mov    dl,0x20
   140006891:	mov    rsi,rax
   140006894:	call   QWORD PTR [rip+0x6e06]        # 0x14000d6a0
   14000689a:	lea    rdx,[rsp+0x78]
   14000689f:	lea    rcx,[rsp+0xf8]
   1400068a7:	mov    rdi,rax
   1400068aa:	call   QWORD PTR [rip+0x70a0]        # 0x14000d950
   1400068b0:	lea    rdx,[rsp+0x98]
   1400068b8:	lea    rcx,[rsp+0xf8]
   1400068c0:	mov    rbp,rax
   1400068c3:	call   QWORD PTR [rip+0x6f9f]        # 0x14000d868
   1400068c9:	lea    rdx,[rip+0x9960]        # 0x140010230
   1400068d0:	lea    rcx,[rsp+0xb8]
   1400068d8:	or     r8d,0xffffffff
   1400068dc:	mov    rbx,rax
   1400068df:	call   QWORD PTR [rip+0x6c13]        # 0x14000d4f8
   1400068e5:	movzx  edx,WORD PTR [rdi]
   1400068e8:	mov    r8,QWORD PTR [rsp+0x1b0]
   1400068f0:	mov    WORD PTR [rsp+0x20],dx
   1400068f5:	lea    rdx,[rsp+0xe8]
   1400068fd:	mov    rcx,rax
   140006900:	xor    r9d,r9d
   140006903:	call   QWORD PTR [rip+0x6d77]        # 0x14000d680
   140006909:	movzx  edx,WORD PTR [rsi]
   14000690c:	lea    r8,[r14+0x10]
   140006910:	mov    WORD PTR [rsp+0x20],dx
   140006915:	lea    rdx,[rsp+0xc8]
   14000691d:	mov    rcx,rax
   140006920:	xor    r9d,r9d
   140006923:	call   QWORD PTR [rip+0x6d57]        # 0x14000d680
   140006929:	lea    rdx,[rsp+0xd8]
   140006931:	xor    r9d,r9d
   140006934:	mov    rcx,rax
   140006937:	movzx  eax,WORD PTR [r12]
   14000693c:	mov    r8,rbx
   14000693f:	mov    WORD PTR [rsp+0x20],ax
   140006944:	call   QWORD PTR [rip+0x6d36]        # 0x14000d680
   14000694a:	lea    rdx,[rsp+0x90]
   140006952:	mov    rcx,rax
   140006955:	movzx  eax,WORD PTR [r13+0x0]
   14000695a:	xor    r9d,r9d
   14000695d:	mov    r8,rbp
   140006960:	mov    WORD PTR [rsp+0x20],ax
   140006965:	call   QWORD PTR [rip+0x6d15]        # 0x14000d680
   14000696b:	mov    rcx,r14
   14000696e:	mov    rdx,rax
   140006971:	call   0x14000aae0
   140006976:	lea    rcx,[rsp+0x90]
   14000697e:	call   QWORD PTR [rip+0x6d44]        # 0x14000d6c8
   140006984:	lea    rcx,[rsp+0xd8]
   14000698c:	call   QWORD PTR [rip+0x6d36]        # 0x14000d6c8
   140006992:	lea    rcx,[rsp+0xc8]
   14000699a:	call   QWORD PTR [rip+0x6d28]        # 0x14000d6c8
   1400069a0:	lea    rcx,[rsp+0xe8]
   1400069a8:	call   QWORD PTR [rip+0x6d1a]        # 0x14000d6c8
   1400069ae:	lea    rcx,[rsp+0xb8]
   1400069b6:	call   QWORD PTR [rip+0x6d0c]        # 0x14000d6c8
   1400069bc:	lea    rcx,[rsp+0x98]
   1400069c4:	call   QWORD PTR [rip+0x6cfe]        # 0x14000d6c8
   1400069ca:	lea    rcx,[rsp+0x78]
   1400069cf:	call   QWORD PTR [rip+0x6cf3]        # 0x14000d6c8
   1400069d5:	lea    rdx,[rsp+0x68]
   1400069da:	mov    rcx,r15
   1400069dd:	call   QWORD PTR [rip+0x7dcd]        # 0x14000e7b0
   1400069e3:	lea    rcx,[rsp+0xf8]
   1400069eb:	jmp    0x140006eb7
   1400069f0:	or     rcx,0xffffffffffffffff
   1400069f4:	lea    rdx,[rip+0x9825]        # 0x140010220
   1400069fb:	xor    eax,eax
   1400069fd:	mov    QWORD PTR [rsp+0x88],rdx
   140006a05:	mov    rdi,rdx
   140006a08:	lea    rdx,[rsp+0x80]
   140006a10:	repnz scas al,BYTE PTR es:[rdi]
   140006a12:	not    rcx
   140006a15:	dec    rcx
   140006a18:	mov    DWORD PTR [rsp+0x80],ecx
   140006a1f:	lea    rcx,[rsp+0x1b8]
   140006a27:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140006a2f:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   140006a38:	call   QWORD PTR [rip+0x6c52]        # 0x14000d690
   140006a3e:	lea    rcx,[rsp+0xf8]
   140006a46:	call   QWORD PTR [rip+0x6dbc]        # 0x14000d808
   140006a4c:	lea    rcx,[rsp+0x150]
   140006a54:	mov    r14,rax
   140006a57:	call   QWORD PTR [rip+0x6dab]        # 0x14000d808
   140006a5d:	lea    rcx,[rsp+0x140]
   140006a65:	mov    r13,rax
   140006a68:	call   QWORD PTR [rip+0x6d9a]        # 0x14000d808
   140006a6e:	lea    rcx,[rsp+0xd8]
   140006a76:	mov    r12,rax
   140006a79:	call   QWORD PTR [rip+0x6d89]        # 0x14000d808
   140006a7f:	lea    rcx,[rsp+0xc8]
   140006a87:	mov    rbp,rax
   140006a8a:	call   QWORD PTR [rip+0x6d78]        # 0x14000d808
   140006a90:	lea    rcx,[rsp+0xe8]
   140006a98:	mov    rsi,rax
   140006a9b:	call   QWORD PTR [rip+0x6d67]        # 0x14000d808
   140006aa1:	lea    rcx,[rsp+0xb8]
   140006aa9:	mov    rbx,rax
   140006aac:	call   QWORD PTR [rip+0x6d56]        # 0x14000d808
   140006ab2:	lea    rcx,[rsp+0x98]
   140006aba:	mov    rdi,rax
   140006abd:	call   QWORD PTR [rip+0x6d45]        # 0x14000d808
   140006ac3:	mov    QWORD PTR [rsp+0x50],r14
   140006ac8:	mov    QWORD PTR [rsp+0x48],r13
   140006acd:	mov    QWORD PTR [rsp+0x40],r12
   140006ad2:	mov    QWORD PTR [rsp+0x38],rbp
   140006ad7:	mov    QWORD PTR [rsp+0x30],rsi
   140006adc:	lea    r8,[rsp+0x1b8]
   140006ae4:	lea    rdx,[rsp+0x78]
   140006ae9:	lea    rcx,[rsp+0xa8]
   140006af1:	mov    r9,rax
   140006af4:	mov    QWORD PTR [rsp+0x28],rbx
   140006af9:	mov    QWORD PTR [rsp+0x20],rdi
   140006afe:	call   QWORD PTR [rip+0x6d6c]        # 0x14000d870
   140006b04:	lea    rcx,[rsp+0x118]
   140006b0c:	mov    rdi,rax
   140006b0f:	call   QWORD PTR [rip+0x6d6b]        # 0x14000d880
   140006b15:	lea    rcx,[rsp+0x138]
   140006b1d:	call   QWORD PTR [rip+0x6b65]        # 0x14000d688
   140006b23:	lea    rcx,[rsp+0x118]
   140006b2b:	mov    rdx,rdi
   140006b2e:	call   0x1400061e0
   140006b33:	lea    rcx,[rsp+0x78]
   140006b38:	call   QWORD PTR [rip+0x6d8a]        # 0x14000d8c8
   140006b3e:	lea    rcx,[rsp+0x98]
   140006b46:	call   QWORD PTR [rip+0x6cac]        # 0x14000d7f8
   140006b4c:	lea    rcx,[rsp+0xb8]
   140006b54:	call   QWORD PTR [rip+0x6c9e]        # 0x14000d7f8
   140006b5a:	lea    rcx,[rsp+0xe8]
   140006b62:	call   QWORD PTR [rip+0x6c90]        # 0x14000d7f8
   140006b68:	lea    rcx,[rsp+0xc8]
   140006b70:	call   QWORD PTR [rip+0x6c82]        # 0x14000d7f8
   140006b76:	lea    rcx,[rsp+0xd8]
   140006b7e:	call   QWORD PTR [rip+0x6c74]        # 0x14000d7f8
   140006b84:	lea    rcx,[rsp+0x140]
   140006b8c:	call   QWORD PTR [rip+0x6c66]        # 0x14000d7f8
   140006b92:	lea    rcx,[rsp+0x150]
   140006b9a:	call   QWORD PTR [rip+0x6c58]        # 0x14000d7f8
   140006ba0:	lea    rcx,[rsp+0xf8]
   140006ba8:	call   QWORD PTR [rip+0x6c4a]        # 0x14000d7f8
   140006bae:	lea    rcx,[rsp+0x1b8]
   140006bb6:	call   QWORD PTR [rip+0x6b0c]        # 0x14000d6c8
   140006bbc:	lea    rcx,[rsp+0x118]
   140006bc4:	call   QWORD PTR [rip+0x6cc6]        # 0x14000d890
   140006bca:	test   al,al
   140006bcc:	je     0x140006e4d
   140006bd2:	lea    rdx,[rsp+0x118]
   140006bda:	lea    rcx,[rsp+0xf8]
   140006be2:	call   QWORD PTR [rip+0x6c90]        # 0x14000d878
   140006be8:	lea    rcx,[rsp+0xf8]
   140006bf0:	call   QWORD PTR [rip+0x6c9a]        # 0x14000d890
   140006bf6:	mov    dl,0x20
   140006bf8:	lea    rcx,[rsp+0x1b8]
   140006c00:	test   al,al
   140006c02:	je     0x140006d81
   140006c08:	call   QWORD PTR [rip+0x6a92]        # 0x14000d6a0
   140006c0e:	lea    rcx,[rsp+0x70]
   140006c13:	mov    dl,0x20
   140006c15:	mov    r13,rax
   140006c18:	call   QWORD PTR [rip+0x6a82]        # 0x14000d6a0
   140006c1e:	lea    rcx,[rsp+0x72]
   140006c23:	mov    dl,0x20
   140006c25:	mov    r12,rax
   140006c28:	call   QWORD PTR [rip+0x6a72]        # 0x14000d6a0
   140006c2e:	lea    rcx,[rsp+0x60]
   140006c33:	mov    dl,0x20
   140006c35:	mov    rsi,rax
   140006c38:	call   QWORD PTR [rip+0x6a62]        # 0x14000d6a0
   140006c3e:	lea    rdx,[rsp+0x80]
   140006c46:	lea    rcx,[rsp+0xf8]
   140006c4e:	mov    rdi,rax
   140006c51:	call   QWORD PTR [rip+0x6cf9]        # 0x14000d950
   140006c57:	lea    rdx,[rsp+0xd8]
   140006c5f:	lea    rcx,[rsp+0xf8]
   140006c67:	mov    rbp,rax
   140006c6a:	call   QWORD PTR [rip+0x6bf8]        # 0x14000d868
   140006c70:	lea    rdx,[rip+0x9579]        # 0x1400101f0
   140006c77:	lea    rcx,[rsp+0xc8]
   140006c7f:	or     r8d,0xffffffff
   140006c83:	mov    rbx,rax
   140006c86:	call   QWORD PTR [rip+0x686c]        # 0x14000d4f8
   140006c8c:	movzx  edx,WORD PTR [rdi]
   140006c8f:	mov    r8,QWORD PTR [rsp+0x1b0]
   140006c97:	mov    WORD PTR [rsp+0x20],dx
   140006c9c:	lea    rdx,[rsp+0xe8]
   140006ca4:	mov    rcx,rax
   140006ca7:	xor    r9d,r9d
   140006caa:	call   QWORD PTR [rip+0x69d0]        # 0x14000d680
   140006cb0:	movzx  edx,WORD PTR [rsi]
   140006cb3:	mov    r8,QWORD PTR [rsp+0x90]
   140006cbb:	mov    WORD PTR [rsp+0x20],dx
   140006cc0:	lea    rdx,[rsp+0xb8]
   140006cc8:	mov    rcx,rax
   140006ccb:	xor    r9d,r9d
   140006cce:	call   QWORD PTR [rip+0x69ac]        # 0x14000d680
   140006cd4:	lea    rdx,[rsp+0x98]
   140006cdc:	xor    r9d,r9d
   140006cdf:	mov    rcx,rax
   140006ce2:	movzx  eax,WORD PTR [r12]
   140006ce7:	mov    r8,rbx
   140006cea:	mov    WORD PTR [rsp+0x20],ax
   140006cef:	call   QWORD PTR [rip+0x698b]        # 0x14000d680
   140006cf5:	lea    rdx,[rsp+0x78]
   140006cfa:	mov    rcx,rax
   140006cfd:	movzx  eax,WORD PTR [r13+0x0]
   140006d02:	xor    r9d,r9d
   140006d05:	mov    r8,rbp
   140006d08:	mov    WORD PTR [rsp+0x20],ax
   140006d0d:	call   QWORD PTR [rip+0x696d]        # 0x14000d680
   140006d13:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140006d1b:	mov    rdx,rax
   140006d1e:	call   0x14000aae0
   140006d23:	lea    rcx,[rsp+0x78]
   140006d28:	call   QWORD PTR [rip+0x699a]        # 0x14000d6c8
   140006d2e:	lea    rcx,[rsp+0x98]
   140006d36:	call   QWORD PTR [rip+0x698c]        # 0x14000d6c8
   140006d3c:	lea    rcx,[rsp+0xb8]
   140006d44:	call   QWORD PTR [rip+0x697e]        # 0x14000d6c8
   140006d4a:	lea    rcx,[rsp+0xe8]
   140006d52:	call   QWORD PTR [rip+0x6970]        # 0x14000d6c8
   140006d58:	lea    rcx,[rsp+0xc8]
   140006d60:	call   QWORD PTR [rip+0x6962]        # 0x14000d6c8
   140006d66:	lea    rcx,[rsp+0xd8]
   140006d6e:	call   QWORD PTR [rip+0x6954]        # 0x14000d6c8
   140006d74:	lea    rcx,[rsp+0x80]
   140006d7c:	jmp    0x140006e29
   140006d81:	call   QWORD PTR [rip+0x6919]        # 0x14000d6a0
   140006d87:	lea    rcx,[rsp+0x60]
   140006d8c:	mov    dl,0x20
   140006d8e:	mov    rbx,rax
   140006d91:	call   QWORD PTR [rip+0x6909]        # 0x14000d6a0
   140006d97:	lea    rdx,[rip+0x9422]        # 0x1400101c0
   140006d9e:	lea    rcx,[rsp+0x98]
   140006da6:	or     r8d,0xffffffff
   140006daa:	mov    rdi,rax
   140006dad:	call   QWORD PTR [rip+0x6745]        # 0x14000d4f8
   140006db3:	movzx  edx,WORD PTR [rdi]
   140006db6:	mov    r8,QWORD PTR [rsp+0x1b0]
   140006dbe:	mov    WORD PTR [rsp+0x20],dx
   140006dc3:	lea    rdx,[rsp+0x78]
   140006dc8:	mov    rcx,rax
   140006dcb:	xor    r9d,r9d
   140006dce:	call   QWORD PTR [rip+0x68ac]        # 0x14000d680
   140006dd4:	mov    r8,QWORD PTR [rsp+0x90]
   140006ddc:	lea    rdx,[rsp+0x80]
   140006de4:	mov    rcx,rax
   140006de7:	movzx  eax,WORD PTR [rbx]
   140006dea:	xor    r9d,r9d
   140006ded:	mov    WORD PTR [rsp+0x20],ax
   140006df2:	call   QWORD PTR [rip+0x6888]        # 0x14000d680
   140006df8:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140006e00:	mov    rdx,rax
   140006e03:	call   0x14000aae0
   140006e08:	lea    rcx,[rsp+0x80]
   140006e10:	call   QWORD PTR [rip+0x68b2]        # 0x14000d6c8
   140006e16:	lea    rcx,[rsp+0x78]
   140006e1b:	call   QWORD PTR [rip+0x68a7]        # 0x14000d6c8
   140006e21:	lea    rcx,[rsp+0x98]
   140006e29:	call   QWORD PTR [rip+0x6899]        # 0x14000d6c8
   140006e2f:	lea    rdx,[rsp+0x68]
   140006e34:	mov    rcx,r15
   140006e37:	call   QWORD PTR [rip+0x7973]        # 0x14000e7b0
   140006e3d:	lea    rcx,[rsp+0xf8]
   140006e45:	call   QWORD PTR [rip+0x6b0d]        # 0x14000d958
   140006e4b:	jmp    0x140006ea1
   140006e4d:	lea    rdx,[rsp+0x138]
   140006e55:	lea    rcx,[rsp+0x1a0]
   140006e5d:	call   QWORD PTR [rip+0x69bd]        # 0x14000d820
   140006e63:	lea    rdx,[rsp+0x1a0]
   140006e6b:	lea    rcx,[rsp+0x68]
   140006e70:	xor    r9d,r9d
   140006e73:	xor    r8d,r8d
   140006e76:	mov    QWORD PTR [rsp+0x20],0x0
   140006e7f:	call   QWORD PTR [rip+0x7923]        # 0x14000e7a8
   140006e85:	lea    rcx,[rsp+0x1a0]
   140006e8d:	call   QWORD PTR [rip+0x6835]        # 0x14000d6c8
   140006e93:	lea    rdx,[rsp+0x68]
   140006e98:	mov    rcx,r15
   140006e9b:	call   QWORD PTR [rip+0x790f]        # 0x14000e7b0
   140006ea1:	lea    rcx,[rsp+0x138]
   140006ea9:	call   QWORD PTR [rip+0x6819]        # 0x14000d6c8
   140006eaf:	lea    rcx,[rsp+0x118]
   140006eb7:	call   QWORD PTR [rip+0x6a9b]        # 0x14000d958
   140006ebd:	lea    rcx,[rsp+0xa8]
   140006ec5:	call   QWORD PTR [rip+0x69dd]        # 0x14000d8a8
   140006ecb:	lea    rcx,[rsp+0x68]
   140006ed0:	call   QWORD PTR [rip+0x78ca]        # 0x14000e7a0
   140006ed6:	mov    rbx,QWORD PTR [rsp+0x1a8]
   140006ede:	mov    rax,r15
   140006ee1:	add    rsp,0x160
   140006ee8:	pop    r15
   140006eea:	pop    r14
   140006eec:	pop    r13
   140006eee:	pop    r12
   140006ef0:	pop    rdi
   140006ef1:	pop    rsi
   140006ef2:	pop    rbp
   140006ef3:	ret    
   140006ef4:	int3   
   140006ef5:	int3   
   140006ef6:	int3   
   140006ef7:	int3   
   140006ef8:	int3   
   140006ef9:	int3   
   140006efa:	int3   
   140006efb:	int3   
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	rex push rbx
   140006f02:	push   rbp
   140006f03:	push   rdi
   140006f04:	sub    rsp,0x2d0
   140006f0b:	lea    rcx,[rsp+0x28]
   140006f10:	xor    ebx,ebx
   140006f12:	mov    rdi,r8
   140006f15:	mov    rbp,rdx
   140006f18:	mov    DWORD PTR [rsp+0x308],ebx
   140006f1f:	call   QWORD PTR [rip+0x6763]        # 0x14000d688
   140006f25:	lea    rdx,[rsp+0x308]
   140006f2d:	mov    rcx,rdi
   140006f30:	mov    r8,rax
   140006f33:	call   QWORD PTR [rip+0x7827]        # 0x14000e760
   140006f39:	lea    rcx,[rsp+0x28]
   140006f3e:	call   QWORD PTR [rip+0x6784]        # 0x14000d6c8
   140006f44:	lea    rcx,[rsp+0x308]
   140006f4c:	call   QWORD PTR [rip+0x7816]        # 0x14000e768
   140006f52:	test   al,al
   140006f54:	jne    0x1400079db
   140006f5a:	mov    QWORD PTR [rsp+0x2f0],rsi
   140006f62:	mov    QWORD PTR [rsp+0x2f8],r12
   140006f6a:	mov    QWORD PTR [rsp+0x300],r13
   140006f72:	mov    QWORD PTR [rsp+0x2c8],r14
   140006f7a:	mov    QWORD PTR [rsp+0x2c0],r15
   140006f82:	lea    r13,[rip+0x9383]        # 0x14001030c
   140006f89:	lea    r15,[rip+0x9374]        # 0x140010304
   140006f90:	lea    r14,[rip+0x9365]        # 0x1400102fc
   140006f97:	lea    r12,[rip+0x9356]        # 0x1400102f4
   140006f9e:	lea    rsi,[rip+0x9343]        # 0x1400102e8
   140006fa5:	or     rcx,0xffffffffffffffff
   140006fa9:	xor    eax,eax
   140006fab:	mov    rdi,r14
   140006fae:	repnz scas al,BYTE PTR es:[rdi]
   140006fb0:	mov    QWORD PTR [rsp+0x1c8],r14
   140006fb8:	lea    rdx,[rsp+0xe8]
   140006fc0:	not    rcx
   140006fc3:	dec    rcx
   140006fc6:	mov    DWORD PTR [rsp+0x1c0],ecx
   140006fcd:	lea    rcx,[rsp+0x308]
   140006fd5:	movaps xmm0,XMMWORD PTR [rsp+0x1c0]
   140006fdd:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   140006fe6:	call   QWORD PTR [rip+0x7784]        # 0x14000e770
   140006fec:	lea    rdx,[rsp+0x1e0]
   140006ff4:	mov    rcx,rax
   140006ff7:	call   QWORD PTR [rip+0x654b]        # 0x14000d548
   140006ffd:	lea    rcx,[rsp+0xe8]
   140007005:	movzx  edi,al
   140007008:	call   QWORD PTR [rip+0x66ba]        # 0x14000d6c8
   14000700e:	test   dil,dil
   140007011:	je     0x140007406
   140007017:	mov    ecx,0x38
   14000701c:	call   0x14000b8c2
   140007021:	mov    rsi,rax
   140007024:	test   rax,rax
   140007027:	je     0x1400070e1
   14000702d:	or     rcx,0xffffffffffffffff
   140007031:	xor    eax,eax
   140007033:	mov    rdi,r13
   140007036:	repnz scas al,BYTE PTR es:[rdi]
   140007038:	mov    QWORD PTR [rsp+0x148],r13
   140007040:	lea    rdx,[rsp+0x250]
   140007048:	not    rcx
   14000704b:	dec    rcx
   14000704e:	mov    DWORD PTR [rsp+0x140],ecx
   140007055:	lea    rcx,[rsp+0x78]
   14000705a:	movaps xmm0,XMMWORD PTR [rsp+0x140]
   140007062:	movdqa XMMWORD PTR [rsp+0x250],xmm0
   14000706b:	call   QWORD PTR [rip+0x661f]        # 0x14000d690
   140007071:	lea    rcx,[rsp+0x110]
   140007079:	or     ebx,0x7
   14000707c:	call   QWORD PTR [rip+0x6606]        # 0x14000d688
   140007082:	lea    r8,[rsp+0x78]
   140007087:	lea    rdx,[rsp+0x90]
   14000708f:	lea    rcx,[rsp+0x308]
   140007097:	mov    r9,rax
   14000709a:	call   QWORD PTR [rip+0x76d8]        # 0x14000e778
   1400070a0:	mov    DWORD PTR [rsi],0x2
   1400070a6:	mov    QWORD PTR [rsi+0x8],rbp
   1400070aa:	mov    rcx,QWORD PTR [rip+0x6347]        # 0x14000d3f8
   1400070b1:	mov    rdx,rax
   1400070b4:	mov    QWORD PTR [rsi+0x10],rcx
   1400070b8:	cmp    DWORD PTR [rsi],0x1
   1400070bb:	setne  cl
   1400070be:	mov    BYTE PTR [rsi+0x18],cl
   1400070c1:	lea    rcx,[rsi+0x20]
   1400070c5:	call   QWORD PTR [rip+0x6755]        # 0x14000d820
   1400070cb:	lea    rcx,[rsi+0x28]
   1400070cf:	call   QWORD PTR [rip+0x65b3]        # 0x14000d688
   1400070d5:	lea    rcx,[rsi+0x30]
   1400070d9:	call   QWORD PTR [rip+0x65a9]        # 0x14000d688
   1400070df:	jmp    0x1400070e3
   1400070e1:	xor    esi,esi
   1400070e3:	test   bl,0x4
   1400070e6:	je     0x1400070f9
   1400070e8:	lea    rcx,[rsp+0x90]
   1400070f0:	and    ebx,0xfffffffb
   1400070f3:	call   QWORD PTR [rip+0x65cf]        # 0x14000d6c8
   1400070f9:	test   bl,0x2
   1400070fc:	je     0x14000710f
   1400070fe:	lea    rcx,[rsp+0x110]
   140007106:	and    ebx,0xfffffffd
   140007109:	call   QWORD PTR [rip+0x65b9]        # 0x14000d6c8
   14000710f:	test   bl,0x1
   140007112:	je     0x140007122
   140007114:	lea    rcx,[rsp+0x78]
   140007119:	and    ebx,0xfffffffe
   14000711c:	call   QWORD PTR [rip+0x65a6]        # 0x14000d6c8
   140007122:	or     rcx,0xffffffffffffffff
   140007126:	lea    rdx,[rip+0x91ab]        # 0x1400102d8
   14000712d:	xor    eax,eax
   14000712f:	mov    rdi,rdx
   140007132:	mov    QWORD PTR [rsp+0x128],rdx
   14000713a:	lea    rdx,[rsp+0x210]
   140007142:	repnz scas al,BYTE PTR es:[rdi]
   140007144:	not    rcx
   140007147:	dec    rcx
   14000714a:	mov    DWORD PTR [rsp+0x120],ecx
   140007151:	lea    rcx,[rsp+0x48]
   140007156:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   14000715e:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   140007167:	call   QWORD PTR [rip+0x6523]        # 0x14000d690
   14000716d:	lea    rdx,[rsp+0x48]
   140007172:	lea    rcx,[rsp+0x40]
   140007177:	call   QWORD PTR [rip+0x66a3]        # 0x14000d820
   14000717d:	lea    rdx,[rsi+0x20]
   140007181:	lea    rcx,[rsp+0x40]
   140007186:	call   QWORD PTR [rip+0x669c]        # 0x14000d828
   14000718c:	lea    rcx,[rsi+0x28]
   140007190:	lea    rdx,[rsp+0x40]
   140007195:	call   QWORD PTR [rip+0x64cd]        # 0x14000d668
   14000719b:	lea    rcx,[rsp+0x40]
   1400071a0:	call   QWORD PTR [rip+0x6522]        # 0x14000d6c8
   1400071a6:	lea    rcx,[rsp+0x48]
   1400071ab:	call   QWORD PTR [rip+0x6517]        # 0x14000d6c8
   1400071b1:	lea    rcx,[rsp+0xa0]
   1400071b9:	call   QWORD PTR [rip+0x64c9]        # 0x14000d688
   1400071bf:	lea    rdx,[rsp+0x20]
   1400071c4:	lea    rcx,[rsp+0x308]
   1400071cc:	mov    r8,rax
   1400071cf:	call   QWORD PTR [rip+0x758b]        # 0x14000e760
   1400071d5:	lea    rcx,[rsp+0xa0]
   1400071dd:	call   QWORD PTR [rip+0x64e5]        # 0x14000d6c8
   1400071e3:	lea    rcx,[rsp+0x20]
   1400071e8:	call   QWORD PTR [rip+0x757a]        # 0x14000e768
   1400071ee:	test   al,al
   1400071f0:	jne    0x1400073f6
   1400071f6:	lea    r14,[rip+0x90cb]        # 0x1400102c8
   1400071fd:	lea    r15,[rip+0x90c0]        # 0x1400102c4
   140007204:	or     rcx,0xffffffffffffffff
   140007208:	xor    eax,eax
   14000720a:	mov    rdi,r14
   14000720d:	repnz scas al,BYTE PTR es:[rdi]
   14000720f:	mov    QWORD PTR [rsp+0x168],r14
   140007217:	lea    rdx,[rsp+0x290]
   14000721f:	not    rcx
   140007222:	dec    rcx
   140007225:	mov    DWORD PTR [rsp+0x160],ecx
   14000722c:	lea    rcx,[rsp+0x70]
   140007231:	movaps xmm0,XMMWORD PTR [rsp+0x160]
   140007239:	movdqa XMMWORD PTR [rsp+0x290],xmm0
   140007242:	call   QWORD PTR [rip+0x6448]        # 0x14000d690
   140007248:	or     rcx,0xffffffffffffffff
   14000724c:	xor    eax,eax
   14000724e:	mov    rdi,r15
   140007251:	mov    QWORD PTR [rsp+0x1a8],r15
   140007259:	repnz scas al,BYTE PTR es:[rdi]
   14000725b:	not    rcx
   14000725e:	dec    rcx
   140007261:	mov    DWORD PTR [rsp+0x1a0],ecx
   140007268:	lea    rcx,[rsp+0xb0]
   140007270:	movaps xmm0,XMMWORD PTR [rsp+0x1a0]
   140007278:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   140007281:	call   QWORD PTR [rip+0x6401]        # 0x14000d688
   140007287:	lea    r8,[rsp+0x70]
   14000728c:	lea    rdx,[rsp+0xe0]
   140007294:	lea    rcx,[rsp+0x20]
   140007299:	mov    r9,rax
   14000729c:	call   QWORD PTR [rip+0x74d6]        # 0x14000e778
   1400072a2:	lea    rdx,[rsp+0x230]
   1400072aa:	mov    rcx,rax
   1400072ad:	call   QWORD PTR [rip+0x6295]        # 0x14000d548
   1400072b3:	lea    rcx,[rsp+0xe0]
   1400072bb:	movzx  edi,al
   1400072be:	call   QWORD PTR [rip+0x6404]        # 0x14000d6c8
   1400072c4:	lea    rcx,[rsp+0xb0]
   1400072cc:	call   QWORD PTR [rip+0x63f6]        # 0x14000d6c8
   1400072d2:	lea    rcx,[rsp+0x70]
   1400072d7:	call   QWORD PTR [rip+0x63eb]        # 0x14000d6c8
   1400072dd:	test   dil,dil
   1400072e0:	je     0x140007387
   1400072e6:	or     rcx,0xffffffffffffffff
   1400072ea:	xor    eax,eax
   1400072ec:	mov    rdi,r12
   1400072ef:	repnz scas al,BYTE PTR es:[rdi]
   1400072f1:	mov    QWORD PTR [rsp+0x188],r12
   1400072f9:	lea    rdx,[rsp+0x270]
   140007301:	not    rcx
   140007304:	dec    rcx
   140007307:	mov    DWORD PTR [rsp+0x180],ecx
   14000730e:	lea    rcx,[rsp+0x60]
   140007313:	movaps xmm0,XMMWORD PTR [rsp+0x180]
   14000731b:	movdqa XMMWORD PTR [rsp+0x270],xmm0
   140007324:	call   QWORD PTR [rip+0x6366]        # 0x14000d690
   14000732a:	lea    rcx,[rsp+0xc0]
   140007332:	call   QWORD PTR [rip+0x6350]        # 0x14000d688
   140007338:	lea    r8,[rsp+0x60]
   14000733d:	lea    rdx,[rsp+0x100]
   140007345:	lea    rcx,[rsp+0x20]
   14000734a:	mov    r9,rax
   14000734d:	call   QWORD PTR [rip+0x7425]        # 0x14000e778
   140007353:	lea    rcx,[rsi+0x30]
   140007357:	mov    rdx,rax
   14000735a:	call   QWORD PTR [rip+0x64c8]        # 0x14000d828
   140007360:	lea    rcx,[rsp+0x100]
   140007368:	call   QWORD PTR [rip+0x635a]        # 0x14000d6c8
   14000736e:	lea    rcx,[rsp+0xc0]
   140007376:	call   QWORD PTR [rip+0x634c]        # 0x14000d6c8
   14000737c:	lea    rcx,[rsp+0x60]
   140007381:	call   QWORD PTR [rip+0x6341]        # 0x14000d6c8
   140007387:	lea    rcx,[rsp+0xd0]
   14000738f:	call   QWORD PTR [rip+0x62f3]        # 0x14000d688
   140007395:	lea    rdx,[rsp+0xf0]
   14000739d:	lea    rcx,[rsp+0x20]
   1400073a2:	mov    r8,rax
   1400073a5:	call   QWORD PTR [rip+0x73d5]        # 0x14000e780
   1400073ab:	lea    rcx,[rsp+0x20]
   1400073b0:	mov    rdx,rax
   1400073b3:	call   QWORD PTR [rip+0x73cf]        # 0x14000e788
   1400073b9:	lea    rcx,[rsp+0xf0]
   1400073c1:	call   QWORD PTR [rip+0x73c9]        # 0x14000e790
   1400073c7:	lea    rcx,[rsp+0xd0]
   1400073cf:	call   QWORD PTR [rip+0x62f3]        # 0x14000d6c8
   1400073d5:	lea    rcx,[rsp+0x20]
   1400073da:	call   QWORD PTR [rip+0x7388]        # 0x14000e768
   1400073e0:	test   al,al
   1400073e2:	je     0x140007204
   1400073e8:	lea    r14,[rip+0x8f0d]        # 0x1400102fc
   1400073ef:	lea    r15,[rip+0x8f0e]        # 0x140010304
   1400073f6:	lea    rcx,[rsp+0x20]
   1400073fb:	call   QWORD PTR [rip+0x738f]        # 0x14000e790
   140007401:	jmp    0x14000782d
   140007406:	or     rcx,0xffffffffffffffff
   14000740a:	xor    eax,eax
   14000740c:	mov    rdi,r15
   14000740f:	repnz scas al,BYTE PTR es:[rdi]
   140007411:	mov    QWORD PTR [rsp+0x138],r15
   140007419:	lea    rdx,[rsp+0x88]
   140007421:	not    rcx
   140007424:	dec    rcx
   140007427:	mov    DWORD PTR [rsp+0x130],ecx
   14000742e:	lea    rcx,[rsp+0x308]
   140007436:	movaps xmm0,XMMWORD PTR [rsp+0x130]
   14000743e:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   140007447:	call   QWORD PTR [rip+0x7323]        # 0x14000e770
   14000744d:	lea    rdx,[rsp+0x1f0]
   140007455:	mov    rcx,rax
   140007458:	call   QWORD PTR [rip+0x60ea]        # 0x14000d548
   14000745e:	lea    rcx,[rsp+0x88]
   140007466:	movzx  edi,al
   140007469:	call   QWORD PTR [rip+0x6259]        # 0x14000d6c8
   14000746f:	test   dil,dil
   140007472:	je     0x140007617
   140007478:	mov    ecx,0x38
   14000747d:	call   0x14000b8c2
   140007482:	mov    rsi,rax
   140007485:	test   rax,rax
   140007488:	je     0x140007542
   14000748e:	or     rcx,0xffffffffffffffff
   140007492:	xor    eax,eax
   140007494:	mov    rdi,r13
   140007497:	repnz scas al,BYTE PTR es:[rdi]
   140007499:	mov    QWORD PTR [rsp+0x158],r13
   1400074a1:	lea    rdx,[rsp+0x200]
   1400074a9:	not    rcx
   1400074ac:	dec    rcx
   1400074af:	mov    DWORD PTR [rsp+0x150],ecx
   1400074b6:	lea    rcx,[rsp+0x50]
   1400074bb:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   1400074c3:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   1400074cc:	call   QWORD PTR [rip+0x61be]        # 0x14000d690
   1400074d2:	lea    rcx,[rsp+0xa8]
   1400074da:	or     ebx,0x38
   1400074dd:	call   QWORD PTR [rip+0x61a5]        # 0x14000d688
   1400074e3:	lea    r8,[rsp+0x50]
   1400074e8:	lea    rdx,[rsp+0x98]
   1400074f0:	lea    rcx,[rsp+0x308]
   1400074f8:	mov    r9,rax
   1400074fb:	call   QWORD PTR [rip+0x7277]        # 0x14000e778
   140007501:	mov    DWORD PTR [rsi],0x3
   140007507:	mov    QWORD PTR [rsi+0x8],rbp
   14000750b:	mov    rcx,QWORD PTR [rip+0x5ee6]        # 0x14000d3f8
   140007512:	mov    rdx,rax
   140007515:	mov    QWORD PTR [rsi+0x10],rcx
   140007519:	cmp    DWORD PTR [rsi],0x1
   14000751c:	setne  cl
   14000751f:	mov    BYTE PTR [rsi+0x18],cl
   140007522:	lea    rcx,[rsi+0x20]
   140007526:	call   QWORD PTR [rip+0x62f4]        # 0x14000d820
   14000752c:	lea    rcx,[rsi+0x28]
   140007530:	call   QWORD PTR [rip+0x6152]        # 0x14000d688
   140007536:	lea    rcx,[rsi+0x30]
   14000753a:	call   QWORD PTR [rip+0x6148]        # 0x14000d688
   140007540:	jmp    0x140007544
   140007542:	xor    esi,esi
   140007544:	test   bl,0x20
   140007547:	je     0x14000755a
   140007549:	lea    rcx,[rsp+0x98]
   140007551:	and    ebx,0xffffffdf
   140007554:	call   QWORD PTR [rip+0x616e]        # 0x14000d6c8
   14000755a:	test   bl,0x10
   14000755d:	je     0x140007570
   14000755f:	lea    rcx,[rsp+0xa8]
   140007567:	and    ebx,0xffffffef
   14000756a:	call   QWORD PTR [rip+0x6158]        # 0x14000d6c8
   140007570:	test   bl,0x8
   140007573:	je     0x140007583
   140007575:	lea    rcx,[rsp+0x50]
   14000757a:	and    ebx,0xfffffff7
   14000757d:	call   QWORD PTR [rip+0x6145]        # 0x14000d6c8
   140007583:	or     rcx,0xffffffffffffffff
   140007587:	lea    rdx,[rip+0x8d2a]        # 0x1400102b8
   14000758e:	xor    eax,eax
   140007590:	mov    rdi,rdx
   140007593:	mov    QWORD PTR [rsp+0x178],rdx
   14000759b:	lea    rdx,[rsp+0x220]
   1400075a3:	repnz scas al,BYTE PTR es:[rdi]
   1400075a5:	not    rcx
   1400075a8:	dec    rcx
   1400075ab:	mov    DWORD PTR [rsp+0x170],ecx
   1400075b2:	lea    rcx,[rsp+0x58]
   1400075b7:	movaps xmm0,XMMWORD PTR [rsp+0x170]
   1400075bf:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   1400075c8:	call   QWORD PTR [rip+0x60c2]        # 0x14000d690
   1400075ce:	lea    rdx,[rsp+0x58]
   1400075d3:	lea    rcx,[rsp+0x30]
   1400075d8:	call   QWORD PTR [rip+0x6242]        # 0x14000d820
   1400075de:	lea    rdx,[rsi+0x20]
   1400075e2:	lea    rcx,[rsp+0x30]
   1400075e7:	call   QWORD PTR [rip+0x623b]        # 0x14000d828
   1400075ed:	lea    rcx,[rsi+0x28]
   1400075f1:	lea    rdx,[rsp+0x30]
   1400075f6:	call   QWORD PTR [rip+0x606c]        # 0x14000d668
   1400075fc:	lea    rcx,[rsp+0x30]
   140007601:	call   QWORD PTR [rip+0x60c1]        # 0x14000d6c8
   140007607:	lea    rcx,[rsp+0x58]
   14000760c:	call   QWORD PTR [rip+0x60b6]        # 0x14000d6c8
   140007612:	jmp    0x14000782d
   140007617:	or     rcx,0xffffffffffffffff
   14000761b:	xor    eax,eax
   14000761d:	mov    rdi,rsi
   140007620:	repnz scas al,BYTE PTR es:[rdi]
   140007622:	mov    QWORD PTR [rsp+0x198],rsi
   14000762a:	lea    rdx,[rsp+0xb8]
   140007632:	not    rcx
   140007635:	dec    rcx
   140007638:	mov    DWORD PTR [rsp+0x190],ecx
   14000763f:	lea    rcx,[rsp+0x308]
   140007647:	movaps xmm0,XMMWORD PTR [rsp+0x190]
   14000764f:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   140007658:	call   QWORD PTR [rip+0x7112]        # 0x14000e770
   14000765e:	lea    rdx,[rsp+0x240]
   140007666:	mov    rcx,rax
   140007669:	call   QWORD PTR [rip+0x5ed9]        # 0x14000d548
   14000766f:	lea    rcx,[rsp+0xb8]
   140007677:	movzx  edi,al
   14000767a:	call   QWORD PTR [rip+0x6048]        # 0x14000d6c8
   140007680:	test   dil,dil
   140007683:	je     0x1400078c8
   140007689:	mov    ecx,0x38
   14000768e:	call   0x14000b8c2
   140007693:	mov    rsi,rax
   140007696:	test   rax,rax
   140007699:	je     0x14000775b
   14000769f:	or     rcx,0xffffffffffffffff
   1400076a3:	xor    eax,eax
   1400076a5:	mov    rdi,r13
   1400076a8:	repnz scas al,BYTE PTR es:[rdi]
   1400076aa:	mov    QWORD PTR [rsp+0x1b8],r13
   1400076b2:	lea    rdx,[rsp+0x260]
   1400076ba:	not    rcx
   1400076bd:	dec    rcx
   1400076c0:	mov    DWORD PTR [rsp+0x1b0],ecx
   1400076c7:	lea    rcx,[rsp+0x68]
   1400076cc:	movaps xmm0,XMMWORD PTR [rsp+0x1b0]
   1400076d4:	movdqa XMMWORD PTR [rsp+0x260],xmm0
   1400076dd:	call   QWORD PTR [rip+0x5fad]        # 0x14000d690
   1400076e3:	or     ebx,0x40
   1400076e6:	bts    ebx,0x7
   1400076ea:	lea    rcx,[rsp+0xd8]
   1400076f2:	bts    ebx,0x8
   1400076f6:	call   QWORD PTR [rip+0x5f8c]        # 0x14000d688
   1400076fc:	lea    r8,[rsp+0x68]
   140007701:	lea    rdx,[rsp+0xc8]
   140007709:	lea    rcx,[rsp+0x308]
   140007711:	mov    r9,rax
   140007714:	call   QWORD PTR [rip+0x705e]        # 0x14000e778
   14000771a:	mov    DWORD PTR [rsi],0x4
   140007720:	mov    QWORD PTR [rsi+0x8],rbp
   140007724:	mov    rcx,QWORD PTR [rip+0x5ccd]        # 0x14000d3f8
   14000772b:	mov    rdx,rax
   14000772e:	mov    QWORD PTR [rsi+0x10],rcx
   140007732:	cmp    DWORD PTR [rsi],0x1
   140007735:	setne  cl
   140007738:	mov    BYTE PTR [rsi+0x18],cl
   14000773b:	lea    rcx,[rsi+0x20]
   14000773f:	call   QWORD PTR [rip+0x60db]        # 0x14000d820
   140007745:	lea    rcx,[rsi+0x28]
   140007749:	call   QWORD PTR [rip+0x5f39]        # 0x14000d688
   14000774f:	lea    rcx,[rsi+0x30]
   140007753:	call   QWORD PTR [rip+0x5f2f]        # 0x14000d688
   140007759:	jmp    0x14000775d
   14000775b:	xor    esi,esi
   14000775d:	bt     ebx,0x8
   140007761:	jae    0x140007775
   140007763:	lea    rcx,[rsp+0xc8]
   14000776b:	btr    ebx,0x8
   14000776f:	call   QWORD PTR [rip+0x5f53]        # 0x14000d6c8
   140007775:	test   bl,bl
   140007777:	jns    0x14000778b
   140007779:	lea    rcx,[rsp+0xd8]
   140007781:	btr    ebx,0x7
   140007785:	call   QWORD PTR [rip+0x5f3d]        # 0x14000d6c8
   14000778b:	test   bl,0x40
   14000778e:	je     0x14000779e
   140007790:	lea    rcx,[rsp+0x68]
   140007795:	and    ebx,0xffffffbf
   140007798:	call   QWORD PTR [rip+0x5f2a]        # 0x14000d6c8
   14000779e:	or     rcx,0xffffffffffffffff
   1400077a2:	lea    rdx,[rip+0x8aff]        # 0x1400102a8
   1400077a9:	xor    eax,eax
   1400077ab:	mov    rdi,rdx
   1400077ae:	mov    QWORD PTR [rsp+0x1d8],rdx
   1400077b6:	lea    rdx,[rsp+0x280]
   1400077be:	repnz scas al,BYTE PTR es:[rdi]
   1400077c0:	not    rcx
   1400077c3:	dec    rcx
   1400077c6:	mov    DWORD PTR [rsp+0x1d0],ecx
   1400077cd:	lea    rcx,[rsp+0x28]
   1400077d2:	movaps xmm0,XMMWORD PTR [rsp+0x1d0]
   1400077da:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   1400077e3:	call   QWORD PTR [rip+0x5ea7]        # 0x14000d690
   1400077e9:	lea    rdx,[rsp+0x28]
   1400077ee:	lea    rcx,[rsp+0x38]
   1400077f3:	call   QWORD PTR [rip+0x6027]        # 0x14000d820
   1400077f9:	lea    rdx,[rsi+0x20]
   1400077fd:	lea    rcx,[rsp+0x38]
   140007802:	call   QWORD PTR [rip+0x6020]        # 0x14000d828
   140007808:	lea    rcx,[rsi+0x28]
   14000780c:	lea    rdx,[rsp+0x38]
   140007811:	call   QWORD PTR [rip+0x5e51]        # 0x14000d668
   140007817:	lea    rcx,[rsp+0x38]
   14000781c:	call   QWORD PTR [rip+0x5ea6]        # 0x14000d6c8
   140007822:	lea    rcx,[rsp+0x28]
   140007827:	call   QWORD PTR [rip+0x5e9b]        # 0x14000d6c8
   14000782d:	test   rsi,rsi
   140007830:	je     0x140007942
   140007836:	mov    rdx,QWORD PTR [rbp+0x10]
   14000783a:	mov    r10d,DWORD PTR [rdx+0x4]
   14000783e:	mov    r8d,DWORD PTR [rdx+0x8]
   140007842:	mov    eax,DWORD PTR [rdx]
   140007844:	btr    r8d,0x1f
   140007849:	lea    r11d,[r10+0x1]
   14000784d:	cmp    r11d,r8d
   140007850:	seta   cl
   140007853:	cmp    eax,0x1
   140007856:	je     0x14000785c
   140007858:	test   eax,eax
   14000785a:	jne    0x140007883
   14000785c:	test   cl,cl
   14000785e:	jne    0x140007883
   140007860:	mov    rax,QWORD PTR [rdx+0x10]
   140007864:	movsxd rcx,DWORD PTR [rdx+0x4]
   140007868:	lea    rcx,[rax+rcx*8]
   14000786c:	mov    QWORD PTR [rcx+rdx*1],rsi
   140007870:	mov    rax,QWORD PTR [rbp+0x10]
   140007874:	lea    rsi,[rip+0x8a6d]        # 0x1400102e8
   14000787b:	inc    DWORD PTR [rax+0x4]
   14000787e:	jmp    0x140007949
   140007883:	movzx  eax,cl
   140007886:	mov    edx,r10d
   140007889:	neg    al
   14000788b:	sbb    r9d,r9d
   14000788e:	and    r9d,0x8
   140007892:	test   cl,cl
   140007894:	lea    rcx,[rbp+0x10]
   140007898:	cmovne r8d,r11d
   14000789c:	call   0x1400062c0
   1400078a1:	mov    rdx,QWORD PTR [rbp+0x10]
   1400078a5:	mov    rax,QWORD PTR [rdx+0x10]
   1400078a9:	movsxd rcx,DWORD PTR [rdx+0x4]
   1400078ad:	lea    rcx,[rax+rcx*8]
   1400078b1:	mov    QWORD PTR [rcx+rdx*1],rsi
   1400078b5:	mov    rax,QWORD PTR [rbp+0x10]
   1400078b9:	lea    rsi,[rip+0x8a28]        # 0x1400102e8
   1400078c0:	inc    DWORD PTR [rax+0x4]
   1400078c3:	jmp    0x140007949
   1400078c8:	lea    rdx,[rsp+0xf8]
   1400078d0:	lea    rcx,[rsp+0x308]
   1400078d8:	call   QWORD PTR [rip+0x6e92]        # 0x14000e770
   1400078de:	lea    rcx,[rsp+0x2a0]
   1400078e6:	xor    r9d,r9d
   1400078e9:	xor    r8d,r8d
   1400078ec:	xor    edx,edx
   1400078ee:	mov    rdi,rax
   1400078f1:	call   QWORD PTR [rip+0x5aa1]        # 0x14000d398
   1400078f7:	lea    rdx,[rsp+0x80]
   1400078ff:	mov    rcx,rax
   140007902:	call   QWORD PTR [rip+0x5a98]        # 0x14000d3a0
   140007908:	lea    rdx,[rip+0x8979]        # 0x140010288
   14000790f:	mov    rcx,rax
   140007912:	call   QWORD PTR [rip+0x5a90]        # 0x14000d3a8
   140007918:	mov    rdx,rdi
   14000791b:	mov    rcx,rax
   14000791e:	call   QWORD PTR [rip+0x5a8c]        # 0x14000d3b0
   140007924:	lea    rcx,[rsp+0x80]
   14000792c:	call   QWORD PTR [rip+0x5a86]        # 0x14000d3b8
   140007932:	lea    rcx,[rsp+0xf8]
   14000793a:	call   QWORD PTR [rip+0x5d88]        # 0x14000d6c8
   140007940:	jmp    0x140007949
   140007942:	lea    rsi,[rip+0x899f]        # 0x1400102e8
   140007949:	lea    rcx,[rsp+0x118]
   140007951:	call   QWORD PTR [rip+0x5d31]        # 0x14000d688
   140007957:	lea    rdx,[rsp+0x108]
   14000795f:	lea    rcx,[rsp+0x308]
   140007967:	mov    r8,rax
   14000796a:	call   QWORD PTR [rip+0x6e10]        # 0x14000e780
   140007970:	lea    rcx,[rsp+0x308]
   140007978:	mov    rdx,rax
   14000797b:	call   QWORD PTR [rip+0x6e07]        # 0x14000e788
   140007981:	lea    rcx,[rsp+0x108]
   140007989:	call   QWORD PTR [rip+0x6e01]        # 0x14000e790
   14000798f:	lea    rcx,[rsp+0x118]
   140007997:	call   QWORD PTR [rip+0x5d2b]        # 0x14000d6c8
   14000799d:	lea    rcx,[rsp+0x308]
   1400079a5:	call   QWORD PTR [rip+0x6dbd]        # 0x14000e768
   1400079ab:	test   al,al
   1400079ad:	je     0x140006fa5
   1400079b3:	mov    r15,QWORD PTR [rsp+0x2c0]
   1400079bb:	mov    r14,QWORD PTR [rsp+0x2c8]
   1400079c3:	mov    r13,QWORD PTR [rsp+0x300]
   1400079cb:	mov    r12,QWORD PTR [rsp+0x2f8]
   1400079d3:	mov    rsi,QWORD PTR [rsp+0x2f0]
   1400079db:	lea    rcx,[rsp+0x308]
   1400079e3:	call   QWORD PTR [rip+0x6da7]        # 0x14000e790
   1400079e9:	add    rsp,0x2d0
   1400079f0:	pop    rdi
   1400079f1:	pop    rbp
   1400079f2:	pop    rbx
   1400079f3:	ret    
   1400079f4:	int3   
   1400079f5:	int3   
   1400079f6:	int3   
   1400079f7:	int3   
   1400079f8:	int3   
   1400079f9:	int3   
   1400079fa:	int3   
   1400079fb:	int3   
   1400079fc:	int3   
   1400079fd:	int3   
   1400079fe:	int3   
   1400079ff:	int3   
   140007a00:	rex push rbx
   140007a02:	push   rbp
   140007a03:	push   rdi
   140007a04:	push   r12
   140007a06:	push   r13
   140007a08:	sub    rsp,0x150
   140007a0f:	mov    r12,rcx
   140007a12:	xor    r13d,r13d
   140007a15:	lea    rcx,[rsp+0x198]
   140007a1d:	mov    ebx,r13d
   140007a20:	mov    rbp,rdx
   140007a23:	mov    DWORD PTR [rsp+0x188],ebx
   140007a2a:	call   QWORD PTR [rip+0x5c58]        # 0x14000d688
   140007a30:	mov    rdi,rbp
   140007a33:	test   rbp,rbp
   140007a36:	je     0x140007a5b
   140007a38:	nop    DWORD PTR [rax+rax*1+0x0]
   140007a40:	lea    rdx,[rdi+0x20]
   140007a44:	lea    rcx,[rsp+0x198]
   140007a4c:	call   QWORD PTR [rip+0x59be]        # 0x14000d410
   140007a52:	mov    rdi,QWORD PTR [rdi+0x8]
   140007a56:	test   rdi,rdi
   140007a59:	jne    0x140007a40
   140007a5b:	mov    rax,QWORD PTR [rsp+0x198]
   140007a63:	cmp    DWORD PTR [rax+0x4],0x1
   140007a67:	jle    0x140007a7c
   140007a69:	lea    rcx,[rsp+0x198]
   140007a71:	mov    edx,0x1
   140007a76:	call   QWORD PTR [rip+0x5a54]        # 0x14000d4d0
   140007a7c:	lea    r8,[rsp+0x198]
   140007a84:	lea    rdx,[rsp+0x40]
   140007a89:	mov    rcx,r12
   140007a8c:	call   0x140006760
   140007a91:	lea    rdx,[rsp+0x30]
   140007a96:	lea    rcx,[rsp+0x40]
   140007a9b:	call   QWORD PTR [rip+0x6cb7]        # 0x14000e758
   140007aa1:	lea    rcx,[rsp+0x188]
   140007aa9:	call   QWORD PTR [rip+0x5bd9]        # 0x14000d688
   140007aaf:	lea    rdx,[rsp+0x190]
   140007ab7:	lea    rcx,[rsp+0x30]
   140007abc:	mov    r8,rax
   140007abf:	call   QWORD PTR [rip+0x6c9b]        # 0x14000e760
   140007ac5:	lea    rcx,[rsp+0x188]
   140007acd:	call   QWORD PTR [rip+0x5bf5]        # 0x14000d6c8
   140007ad3:	lea    rcx,[rsp+0x190]
   140007adb:	call   QWORD PTR [rip+0x6c87]        # 0x14000e768
   140007ae1:	test   al,al
   140007ae3:	jne    0x140008042
   140007ae9:	mov    QWORD PTR [rsp+0x148],r14
   140007af1:	mov    QWORD PTR [rsp+0x140],r15
   140007af9:	lea    r15,[rip+0x8840]        # 0x140010340
   140007b00:	mov    QWORD PTR [rsp+0x180],rsi
   140007b08:	lea    r14,[rip+0x8825]        # 0x140010334
   140007b0f:	nop
   140007b10:	or     rcx,0xffffffffffffffff
   140007b14:	xor    eax,eax
   140007b16:	mov    rdi,r14
   140007b19:	repnz scas al,BYTE PTR es:[rdi]
   140007b1b:	mov    QWORD PTR [rsp+0xa8],r14
   140007b23:	lea    rdx,[rsp+0x60]
   140007b28:	not    rcx
   140007b2b:	dec    rcx
   140007b2e:	mov    DWORD PTR [rsp+0xa0],ecx
   140007b35:	lea    rcx,[rsp+0x190]
   140007b3d:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   140007b45:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   140007b4e:	call   QWORD PTR [rip+0x6c1c]        # 0x14000e770
   140007b54:	lea    rdx,[rsp+0xe0]
   140007b5c:	mov    rcx,rax
   140007b5f:	call   QWORD PTR [rip+0x59e3]        # 0x14000d548
   140007b65:	lea    rcx,[rsp+0x60]
   140007b6a:	movzx  edi,al
   140007b6d:	call   QWORD PTR [rip+0x5b55]        # 0x14000d6c8
   140007b73:	test   dil,dil
   140007b76:	je     0x140007d5a
   140007b7c:	mov    ecx,0x38
   140007b81:	call   0x14000b8c2
   140007b86:	mov    rsi,rax
   140007b89:	test   rax,rax
   140007b8c:	je     0x140007c7b
   140007b92:	or     rcx,0xffffffffffffffff
   140007b96:	lea    rdx,[rip+0x876f]        # 0x14001030c
   140007b9d:	xor    eax,eax
   140007b9f:	mov    rdi,rdx
   140007ba2:	mov    QWORD PTR [rsp+0xc8],rdx
   140007baa:	lea    rdx,[rsp+0x110]
   140007bb2:	repnz scas al,BYTE PTR es:[rdi]
   140007bb4:	not    rcx
   140007bb7:	dec    rcx
   140007bba:	mov    DWORD PTR [rsp+0xc0],ecx
   140007bc1:	lea    rcx,[rsp+0x38]
   140007bc6:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140007bce:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   140007bd7:	call   QWORD PTR [rip+0x5ab3]        # 0x14000d690
   140007bdd:	lea    rcx,[rsp+0x188]
   140007be5:	mov    dl,0x2f
   140007be7:	or     ebx,0xf
   140007bea:	call   QWORD PTR [rip+0x5ab0]        # 0x14000d6a0
   140007bf0:	lea    rcx,[rsp+0x78]
   140007bf5:	movzx  edi,WORD PTR [rax]
   140007bf8:	call   QWORD PTR [rip+0x5a8a]        # 0x14000d688
   140007bfe:	lea    r8,[rsp+0x38]
   140007c03:	lea    rdx,[rsp+0x90]
   140007c0b:	lea    rcx,[rsp+0x190]
   140007c13:	mov    r9,rax
   140007c16:	call   QWORD PTR [rip+0x6b5c]        # 0x14000e778
   140007c1c:	lea    rcx,[rsp+0x20]
   140007c21:	mov    rdx,rax
   140007c24:	call   QWORD PTR [rip+0x5bf6]        # 0x14000d820
   140007c2a:	lea    rcx,[rsp+0x20]
   140007c2f:	movzx  edx,di
   140007c32:	call   QWORD PTR [rip+0x5be0]        # 0x14000d818
   140007c38:	mov    DWORD PTR [rsi],0x1
   140007c3e:	mov    QWORD PTR [rsi+0x8],rbp
   140007c42:	mov    rax,QWORD PTR [rip+0x57af]        # 0x14000d3f8
   140007c49:	lea    rcx,[rsi+0x20]
   140007c4d:	lea    rdx,[rsp+0x20]
   140007c52:	mov    QWORD PTR [rsi+0x10],rax
   140007c56:	cmp    DWORD PTR [rsi],0x1
   140007c59:	setne  al
   140007c5c:	mov    BYTE PTR [rsi+0x18],al
   140007c5f:	call   QWORD PTR [rip+0x5bbb]        # 0x14000d820
   140007c65:	lea    rcx,[rsi+0x28]
   140007c69:	call   QWORD PTR [rip+0x5a19]        # 0x14000d688
   140007c6f:	lea    rcx,[rsi+0x30]
   140007c73:	call   QWORD PTR [rip+0x5a0f]        # 0x14000d688
   140007c79:	jmp    0x140007c7e
   140007c7b:	mov    rsi,r13
   140007c7e:	test   bl,0x8
   140007c81:	je     0x140007c91
   140007c83:	lea    rcx,[rsp+0x20]
   140007c88:	and    ebx,0xfffffff7
   140007c8b:	call   QWORD PTR [rip+0x5a37]        # 0x14000d6c8
   140007c91:	test   bl,0x4
   140007c94:	je     0x140007ca7
   140007c96:	lea    rcx,[rsp+0x90]
   140007c9e:	and    ebx,0xfffffffb
   140007ca1:	call   QWORD PTR [rip+0x5a21]        # 0x14000d6c8
   140007ca7:	test   bl,0x2
   140007caa:	je     0x140007cba
   140007cac:	lea    rcx,[rsp+0x78]
   140007cb1:	and    ebx,0xfffffffd
   140007cb4:	call   QWORD PTR [rip+0x5a0e]        # 0x14000d6c8
   140007cba:	test   bl,0x1
   140007cbd:	je     0x140007ccd
   140007cbf:	lea    rcx,[rsp+0x38]
   140007cc4:	and    ebx,0xfffffffe
   140007cc7:	call   QWORD PTR [rip+0x59fb]        # 0x14000d6c8
   140007ccd:	mov    rdx,QWORD PTR [rbp+0x10]
   140007cd1:	mov    r10d,DWORD PTR [rdx+0x4]
   140007cd5:	mov    r8d,DWORD PTR [rdx+0x8]
   140007cd9:	mov    eax,DWORD PTR [rdx]
   140007cdb:	btr    r8d,0x1f
   140007ce0:	lea    r11d,[r10+0x1]
   140007ce4:	cmp    r11d,r8d
   140007ce7:	seta   cl
   140007cea:	cmp    eax,0x1
   140007ced:	je     0x140007cf3
   140007cef:	test   eax,eax
   140007cf1:	jne    0x140007d09
   140007cf3:	test   cl,cl
   140007cf5:	jne    0x140007d09
   140007cf7:	movsxd rcx,DWORD PTR [rdx+0x4]
   140007cfb:	mov    rax,QWORD PTR [rdx+0x10]
   140007cff:	lea    rcx,[rax+rcx*8]
   140007d03:	mov    QWORD PTR [rcx+rdx*1],rsi
   140007d07:	jmp    0x140007d3b
   140007d09:	movzx  eax,cl
   140007d0c:	mov    edx,r10d
   140007d0f:	neg    al
   140007d11:	sbb    r9d,r9d
   140007d14:	and    r9d,0x8
   140007d18:	test   cl,cl
   140007d1a:	lea    rcx,[rbp+0x10]
   140007d1e:	cmovne r8d,r11d
   140007d22:	call   0x1400062c0
   140007d27:	mov    rdx,QWORD PTR [rbp+0x10]
   140007d2b:	movsxd rcx,DWORD PTR [rdx+0x4]
   140007d2f:	mov    rax,QWORD PTR [rdx+0x10]
   140007d33:	lea    rcx,[rax+rcx*8]
   140007d37:	mov    QWORD PTR [rcx+rdx*1],rsi
   140007d3b:	mov    rax,QWORD PTR [rbp+0x10]
   140007d3f:	lea    r8,[rsp+0x190]
   140007d47:	mov    rdx,rsi
   140007d4a:	inc    DWORD PTR [rax+0x4]
   140007d4d:	mov    rcx,r12
   140007d50:	call   0x140006f00
   140007d55:	jmp    0x140007fc6
   140007d5a:	or     rcx,0xffffffffffffffff
   140007d5e:	xor    eax,eax
   140007d60:	mov    rdi,r15
   140007d63:	repnz scas al,BYTE PTR es:[rdi]
   140007d65:	mov    QWORD PTR [rsp+0xb8],r15
   140007d6d:	lea    rdx,[rsp+0x68]
   140007d72:	not    rcx
   140007d75:	dec    rcx
   140007d78:	mov    DWORD PTR [rsp+0xb0],ecx
   140007d7f:	lea    rcx,[rsp+0x190]
   140007d87:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   140007d8f:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140007d98:	call   QWORD PTR [rip+0x69d2]        # 0x14000e770
   140007d9e:	lea    rdx,[rsp+0xf0]
   140007da6:	mov    rcx,rax
   140007da9:	call   QWORD PTR [rip+0x5799]        # 0x14000d548
   140007daf:	lea    rcx,[rsp+0x68]
   140007db4:	movzx  edi,al
   140007db7:	call   QWORD PTR [rip+0x590b]        # 0x14000d6c8
   140007dbd:	test   dil,dil
   140007dc0:	je     0x140007f5a
   140007dc6:	mov    ecx,0x38
   140007dcb:	call   0x14000b8c2
   140007dd0:	mov    rsi,rax
   140007dd3:	test   rax,rax
   140007dd6:	je     0x140007e91
   140007ddc:	or     rcx,0xffffffffffffffff
   140007de0:	lea    rdx,[rip+0x8525]        # 0x14001030c
   140007de7:	xor    eax,eax
   140007de9:	mov    rdi,rdx
   140007dec:	mov    QWORD PTR [rsp+0xd8],rdx
   140007df4:	lea    rdx,[rsp+0x100]
   140007dfc:	repnz scas al,BYTE PTR es:[rdi]
   140007dfe:	not    rcx
   140007e01:	dec    rcx
   140007e04:	mov    DWORD PTR [rsp+0xd0],ecx
   140007e0b:	lea    rcx,[rsp+0x28]
   140007e10:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140007e18:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140007e21:	call   QWORD PTR [rip+0x5869]        # 0x14000d690
   140007e27:	lea    rcx,[rsp+0x58]
   140007e2c:	or     ebx,0x70
   140007e2f:	call   QWORD PTR [rip+0x5853]        # 0x14000d688
   140007e35:	lea    r8,[rsp+0x28]
   140007e3a:	lea    rdx,[rsp+0x88]
   140007e42:	lea    rcx,[rsp+0x190]
   140007e4a:	mov    r9,rax
   140007e4d:	call   QWORD PTR [rip+0x6925]        # 0x14000e778
   140007e53:	mov    DWORD PTR [rsi],r13d
   140007e56:	mov    QWORD PTR [rsi+0x8],rbp
   140007e5a:	mov    rcx,QWORD PTR [rip+0x5597]        # 0x14000d3f8
   140007e61:	mov    rdx,rax
   140007e64:	mov    QWORD PTR [rsi+0x10],rcx
   140007e68:	cmp    DWORD PTR [rsi],0x1
   140007e6b:	setne  cl
   140007e6e:	mov    BYTE PTR [rsi+0x18],cl
   140007e71:	lea    rcx,[rsi+0x20]
   140007e75:	call   QWORD PTR [rip+0x59a5]        # 0x14000d820
   140007e7b:	lea    rcx,[rsi+0x28]
   140007e7f:	call   QWORD PTR [rip+0x5803]        # 0x14000d688
   140007e85:	lea    rcx,[rsi+0x30]
   140007e89:	call   QWORD PTR [rip+0x57f9]        # 0x14000d688
   140007e8f:	jmp    0x140007e94
   140007e91:	mov    rsi,r13
   140007e94:	test   bl,0x40
   140007e97:	je     0x140007eaa
   140007e99:	lea    rcx,[rsp+0x88]
   140007ea1:	and    ebx,0xffffffbf
   140007ea4:	call   QWORD PTR [rip+0x581e]        # 0x14000d6c8
   140007eaa:	test   bl,0x20
   140007ead:	je     0x140007ebd
   140007eaf:	lea    rcx,[rsp+0x58]
   140007eb4:	and    ebx,0xffffffdf
   140007eb7:	call   QWORD PTR [rip+0x580b]        # 0x14000d6c8
   140007ebd:	test   bl,0x10
   140007ec0:	je     0x140007ed0
   140007ec2:	lea    rcx,[rsp+0x28]
   140007ec7:	and    ebx,0xffffffef
   140007eca:	call   QWORD PTR [rip+0x57f8]        # 0x14000d6c8
   140007ed0:	mov    rdx,QWORD PTR [rbp+0x10]
   140007ed4:	mov    r10d,DWORD PTR [rdx+0x4]
   140007ed8:	mov    r8d,DWORD PTR [rdx+0x8]
   140007edc:	mov    eax,DWORD PTR [rdx]
   140007ede:	btr    r8d,0x1f
   140007ee3:	lea    r11d,[r10+0x1]
   140007ee7:	cmp    r11d,r8d
   140007eea:	seta   cl
   140007eed:	cmp    eax,0x1
   140007ef0:	je     0x140007ef6
   140007ef2:	test   eax,eax
   140007ef4:	jne    0x140007f0c
   140007ef6:	test   cl,cl
   140007ef8:	jne    0x140007f0c
   140007efa:	movsxd rcx,DWORD PTR [rdx+0x4]
   140007efe:	mov    rax,QWORD PTR [rdx+0x10]
   140007f02:	lea    rcx,[rax+rcx*8]
   140007f06:	mov    QWORD PTR [rcx+rdx*1],rsi
   140007f0a:	jmp    0x140007f3e
   140007f0c:	movzx  eax,cl
   140007f0f:	mov    edx,r10d
   140007f12:	neg    al
   140007f14:	sbb    r9d,r9d
   140007f17:	and    r9d,0x8
   140007f1b:	test   cl,cl
   140007f1d:	lea    rcx,[rbp+0x10]
   140007f21:	cmovne r8d,r11d
   140007f25:	call   0x1400062c0
   140007f2a:	mov    rdx,QWORD PTR [rbp+0x10]
   140007f2e:	movsxd rcx,DWORD PTR [rdx+0x4]
   140007f32:	mov    rax,QWORD PTR [rdx+0x10]
   140007f36:	lea    rcx,[rax+rcx*8]
   140007f3a:	mov    QWORD PTR [rcx+rdx*1],rsi
   140007f3e:	mov    rax,QWORD PTR [rbp+0x10]
   140007f42:	lea    r8,[rsp+0x190]
   140007f4a:	mov    rdx,rsi
   140007f4d:	inc    DWORD PTR [rax+0x4]
   140007f50:	mov    rcx,r12
   140007f53:	call   0x140006f00
   140007f58:	jmp    0x140007fc6
   140007f5a:	lea    rdx,[rsp+0x70]
   140007f5f:	lea    rcx,[rsp+0x190]
   140007f67:	call   QWORD PTR [rip+0x6803]        # 0x14000e770
   140007f6d:	lea    rcx,[rsp+0x120]
   140007f75:	xor    r9d,r9d
   140007f78:	xor    r8d,r8d
   140007f7b:	xor    edx,edx
   140007f7d:	mov    rdi,rax
   140007f80:	call   QWORD PTR [rip+0x5412]        # 0x14000d398
   140007f86:	lea    rdx,[rsp+0x48]
   140007f8b:	mov    rcx,rax
   140007f8e:	call   QWORD PTR [rip+0x540c]        # 0x14000d3a0
   140007f94:	lea    rdx,[rip+0x837d]        # 0x140010318
   140007f9b:	mov    rcx,rax
   140007f9e:	call   QWORD PTR [rip+0x5404]        # 0x14000d3a8
   140007fa4:	mov    rdx,rdi
   140007fa7:	mov    rcx,rax
   140007faa:	call   QWORD PTR [rip+0x5400]        # 0x14000d3b0
   140007fb0:	lea    rcx,[rsp+0x48]
   140007fb5:	call   QWORD PTR [rip+0x53fd]        # 0x14000d3b8
   140007fbb:	lea    rcx,[rsp+0x70]
   140007fc0:	call   QWORD PTR [rip+0x5702]        # 0x14000d6c8
   140007fc6:	lea    rcx,[rsp+0x50]
   140007fcb:	call   QWORD PTR [rip+0x56b7]        # 0x14000d688
   140007fd1:	lea    rdx,[rsp+0x80]
   140007fd9:	lea    rcx,[rsp+0x190]
   140007fe1:	mov    r8,rax
   140007fe4:	call   QWORD PTR [rip+0x6796]        # 0x14000e780
   140007fea:	lea    rcx,[rsp+0x190]
   140007ff2:	mov    rdx,rax
   140007ff5:	call   QWORD PTR [rip+0x678d]        # 0x14000e788
   140007ffb:	lea    rcx,[rsp+0x80]
   140008003:	call   QWORD PTR [rip+0x6787]        # 0x14000e790
   140008009:	lea    rcx,[rsp+0x50]
   14000800e:	call   QWORD PTR [rip+0x56b4]        # 0x14000d6c8
   140008014:	lea    rcx,[rsp+0x190]
   14000801c:	call   QWORD PTR [rip+0x6746]        # 0x14000e768
   140008022:	test   al,al
   140008024:	je     0x140007b10
   14000802a:	mov    r15,QWORD PTR [rsp+0x140]
   140008032:	mov    r14,QWORD PTR [rsp+0x148]
   14000803a:	mov    rsi,QWORD PTR [rsp+0x180]
   140008042:	lea    rcx,[rsp+0x190]
   14000804a:	mov    BYTE PTR [rbp+0x18],0x1
   14000804e:	call   QWORD PTR [rip+0x673c]        # 0x14000e790
   140008054:	lea    rcx,[rsp+0x30]
   140008059:	call   QWORD PTR [rip+0x6731]        # 0x14000e790
   14000805f:	lea    rcx,[rsp+0x40]
   140008064:	call   QWORD PTR [rip+0x6736]        # 0x14000e7a0
   14000806a:	lea    rcx,[rsp+0x198]
   140008072:	call   QWORD PTR [rip+0x5650]        # 0x14000d6c8
   140008078:	add    rsp,0x150
   14000807f:	pop    r13
   140008081:	pop    r12
   140008083:	pop    rdi
   140008084:	pop    rbp
   140008085:	pop    rbx
   140008086:	ret    
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    QWORD PTR [rsp+0x8],rbx
   140008095:	push   rdi
   140008096:	sub    rsp,0x20
   14000809a:	mov    rdi,QWORD PTR [rcx+0x20]
   14000809e:	lea    rax,[rip+0x7fb3]        # 0x140010058
   1400080a5:	mov    rbx,rcx
   1400080a8:	mov    QWORD PTR [rcx],rax
   1400080ab:	test   rdi,rdi
   1400080ae:	je     0x1400080c0
   1400080b0:	mov    rcx,rdi
   1400080b3:	call   0x140006510
   1400080b8:	mov    rcx,rdi
   1400080bb:	call   0x14000b8c8
   1400080c0:	lea    rcx,[rbx+0x18]
   1400080c4:	call   QWORD PTR [rip+0x585e]        # 0x14000d928
   1400080ca:	lea    rcx,[rbx+0x10]
   1400080ce:	call   QWORD PTR [rip+0x55f4]        # 0x14000d6c8
   1400080d4:	mov    rcx,rbx
   1400080d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080dc:	add    rsp,0x20
   1400080e0:	pop    rdi
   1400080e1:	rex.W jmp QWORD PTR [rip+0x52a8]        # 0x14000d390
   1400080e8:	int3   
   1400080e9:	int3   
   1400080ea:	int3   
   1400080eb:	int3   
   1400080ec:	int3   
   1400080ed:	int3   
   1400080ee:	int3   
   1400080ef:	int3   
   1400080f0:	rex push rbx
   1400080f2:	sub    rsp,0x20
   1400080f6:	mov    rbx,QWORD PTR [rdx+0x8]
   1400080fa:	test   rbx,rbx
   1400080fd:	jne    0x140008103
   1400080ff:	mov    rbx,QWORD PTR [rcx+0x20]
   140008103:	cmp    BYTE PTR [rbx+0x18],0x0
   140008107:	jne    0x140008111
   140008109:	mov    rdx,rbx
   14000810c:	call   0x140007a00
   140008111:	mov    r11,QWORD PTR [rbx+0x10]
   140008115:	mov    eax,DWORD PTR [r11+0x4]
   140008119:	add    rsp,0x20
   14000811d:	pop    rbx
   14000811e:	ret    
   14000811f:	int3   
   140008120:	mov    QWORD PTR [rsp+0x20],rsi
   140008125:	push   rdi
   140008126:	sub    rsp,0x20
   14000812a:	mov    rdi,QWORD PTR [rip+0x52c7]        # 0x14000d3f8
   140008131:	mov    QWORD PTR [rsp+0x40],rbp
   140008136:	mov    rbp,rcx
   140008139:	cmp    rdi,QWORD PTR [rcx]
   14000813c:	je     0x14000823c
   140008142:	mov    eax,DWORD PTR [rdi]
   140008144:	mov    QWORD PTR [rsp+0x38],rbx
   140008149:	test   eax,eax
   14000814b:	je     0x140008163
   14000814d:	cmp    eax,0xffffffff
   140008150:	je     0x140008156
   140008152:	lock add DWORD PTR [rdi],0x1
   140008156:	mov    rbx,rdi
   140008159:	mov    QWORD PTR [rsp+0x30],rbx
   14000815e:	jmp    0x1400081f1
   140008163:	mov    r8d,DWORD PTR [rdi+0x8]
   140008167:	bt     r8d,0x1f
   14000816c:	jae    0x140008197
   14000816e:	mov    edx,0x8
   140008173:	and    r8d,0x7fffffff
   14000817a:	xor    r9d,r9d
   14000817d:	mov    rcx,rdx
   140008180:	call   QWORD PTR [rip+0x524a]        # 0x14000d3d0
   140008186:	mov    rbx,rax
   140008189:	mov    QWORD PTR [rsp+0x30],rax
   14000818e:	or     DWORD PTR [rax+0x8],0x80000000
   140008195:	jmp    0x1400081b4
   140008197:	movsxd r8,DWORD PTR [rdi+0x4]
   14000819b:	mov    edx,0x8
   1400081a0:	xor    r9d,r9d
   1400081a3:	mov    rcx,rdx
   1400081a6:	call   QWORD PTR [rip+0x5224]        # 0x14000d3d0
   1400081ac:	mov    rbx,rax
   1400081af:	mov    QWORD PTR [rsp+0x30],rax
   1400081b4:	mov    eax,DWORD PTR [rbx+0x8]
   1400081b7:	btr    eax,0x1f
   1400081bb:	test   eax,eax
   1400081bd:	je     0x1400081f1
   1400081bf:	mov    rax,QWORD PTR [rdi+0x10]
   1400081c3:	movsxd r8,DWORD PTR [rdi+0x4]
   1400081c7:	shl    r8,0x3
   1400081cb:	lea    rdx,[rax+rdi*1]
   1400081cf:	sub    r8,rdx
   1400081d2:	add    r8,rax
   1400081d5:	mov    rax,QWORD PTR [rbx+0x10]
   1400081d9:	add    r8,rdi
   1400081dc:	lea    rcx,[rbx+rax*1]
   1400081e0:	and    r8,0xfffffffffffffff8
   1400081e4:	call   0x14000b8ce
   1400081e9:	mov    r11d,DWORD PTR [rdi+0x4]
   1400081ed:	mov    DWORD PTR [rbx+0x4],r11d
   1400081f1:	lea    rax,[rsp+0x30]
   1400081f6:	cmp    rax,rbp
   1400081f9:	je     0x14000820b
   1400081fb:	mov    rax,rbx
   1400081fe:	mov    rbx,QWORD PTR [rbp+0x0]
   140008202:	mov    QWORD PTR [rsp+0x30],rbx
   140008207:	mov    QWORD PTR [rbp+0x0],rax
   14000820b:	mov    eax,DWORD PTR [rbx]
   14000820d:	test   eax,eax
   14000820f:	je     0x140008226
   140008211:	cmp    eax,0xffffffff
   140008214:	je     0x140008237
   140008216:	lock add DWORD PTR [rbx],0xffffffff
   14000821a:	setne  al
   14000821d:	test   al,al
   14000821f:	jne    0x140008237
   140008221:	mov    rbx,QWORD PTR [rsp+0x30]
   140008226:	mov    edx,0x8
   14000822b:	mov    rcx,rbx
   14000822e:	mov    r8,rdx
   140008231:	call   QWORD PTR [rip+0x51b9]        # 0x14000d3f0
   140008237:	mov    rbx,QWORD PTR [rsp+0x38]
   14000823c:	mov    eax,DWORD PTR [rdi]
   14000823e:	mov    rbp,QWORD PTR [rsp+0x40]
   140008243:	test   eax,eax
   140008245:	je     0x140008257
   140008247:	cmp    eax,0xffffffff
   14000824a:	je     0x140008268
   14000824c:	lock add DWORD PTR [rdi],0xffffffff
   140008250:	setne  al
   140008253:	test   al,al
   140008255:	jne    0x140008268
   140008257:	mov    edx,0x8
   14000825c:	mov    rcx,rdi
   14000825f:	mov    r8,rdx
   140008262:	call   QWORD PTR [rip+0x5188]        # 0x14000d3f0
   140008268:	mov    rsi,QWORD PTR [rsp+0x48]
   14000826d:	add    rsp,0x20
   140008271:	pop    rdi
   140008272:	ret    
   140008273:	int3   
   140008274:	int3   
   140008275:	int3   
   140008276:	int3   
   140008277:	int3   
   140008278:	int3   
   140008279:	int3   
   14000827a:	int3   
   14000827b:	int3   
   14000827c:	int3   
   14000827d:	int3   
   14000827e:	int3   
   14000827f:	int3   
   140008280:	mov    QWORD PTR [rsp+0x8],rbx
   140008285:	mov    QWORD PTR [rsp+0x10],rsi
   14000828a:	push   rdi
   14000828b:	sub    rsp,0x20
   14000828f:	mov    rdi,QWORD PTR [rcx+0x20]
   140008293:	lea    rax,[rip+0x7dbe]        # 0x140010058
   14000829a:	mov    esi,edx
   14000829c:	mov    rbx,rcx
   14000829f:	mov    QWORD PTR [rcx],rax
   1400082a2:	test   rdi,rdi
   1400082a5:	je     0x1400082b7
   1400082a7:	mov    rcx,rdi
   1400082aa:	call   0x140006510
   1400082af:	mov    rcx,rdi
   1400082b2:	call   0x14000b8c8
   1400082b7:	lea    rcx,[rbx+0x18]
   1400082bb:	call   QWORD PTR [rip+0x5667]        # 0x14000d928
   1400082c1:	lea    rcx,[rbx+0x10]
   1400082c5:	call   QWORD PTR [rip+0x53fd]        # 0x14000d6c8
   1400082cb:	mov    rcx,rbx
   1400082ce:	call   QWORD PTR [rip+0x50bc]        # 0x14000d390
   1400082d4:	test   sil,0x1
   1400082d8:	je     0x1400082e2
   1400082da:	mov    rcx,rbx
   1400082dd:	call   0x14000b8c8
   1400082e2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400082e7:	mov    rax,rbx
   1400082ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082ef:	add    rsp,0x20
   1400082f3:	pop    rdi
   1400082f4:	ret    
   1400082f5:	int3   
   1400082f6:	int3   
   1400082f7:	int3   
   1400082f8:	int3   
   1400082f9:	int3   
   1400082fa:	int3   
   1400082fb:	int3   
   1400082fc:	int3   
   1400082fd:	int3   
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	mov    QWORD PTR [rsp+0x8],rbx
   140008305:	mov    QWORD PTR [rsp+0x10],rsi
   14000830a:	push   rdi
   14000830b:	sub    rsp,0x50
   14000830f:	mov    rax,QWORD PTR [rdx]
   140008312:	mov    rdi,rcx
   140008315:	lea    rcx,[rsp+0x20]
   14000831a:	mov    QWORD PTR [rcx],rax
   14000831d:	mov    rax,QWORD PTR [rdx+0x8]
   140008321:	mov    QWORD PTR [rcx+0x8],rax
   140008325:	mov    rax,QWORD PTR [rdx+0x10]
   140008329:	mov    QWORD PTR [rcx+0x10],rax
   14000832d:	nop    DWORD PTR [rax]
   140008330:	mov    rax,QWORD PTR [rsp+0x20]
   140008335:	mov    rbx,QWORD PTR [rsp+0x28]
   14000833a:	test   eax,eax
   14000833c:	js     0x140008380
   14000833e:	shr    rax,0x20
   140008342:	test   eax,eax
   140008344:	js     0x140008380
   140008346:	cmp    QWORD PTR [rsp+0x30],0x0
   14000834c:	je     0x140008380
   14000834e:	cmp    DWORD PTR [rbx],0x1
   140008351:	je     0x140008380
   140008353:	lea    rdx,[rsp+0x38]
   140008358:	lea    rcx,[rsp+0x20]
   14000835d:	call   QWORD PTR [rip+0x509d]        # 0x14000d400
   140008363:	lea    rdx,[rsp+0x20]
   140008368:	mov    rcx,QWORD PTR [rax]
   14000836b:	mov    QWORD PTR [rdx],rcx
   14000836e:	mov    rcx,QWORD PTR [rax+0x8]
   140008372:	mov    QWORD PTR [rdx+0x8],rcx
   140008376:	mov    rax,QWORD PTR [rax+0x10]
   14000837a:	mov    QWORD PTR [rdx+0x10],rax
   14000837e:	jmp    0x140008330
   140008380:	test   rbx,rbx
   140008383:	jne    0x140008389
   140008385:	mov    rbx,QWORD PTR [rdi+0x20]
   140008389:	mov    rax,QWORD PTR [rbx+0x10]
   14000838d:	mov    r9d,DWORD PTR [rax+0x4]
   140008391:	test   r9d,r9d
   140008394:	je     0x1400083d8
   140008396:	lea    rdx,[rsp+0x20]
   14000839b:	dec    r9d
   14000839e:	xor    r8d,r8d
   1400083a1:	mov    rcx,rdi
   1400083a4:	call   QWORD PTR [rip+0x4fc6]        # 0x14000d370
   1400083aa:	mov    r8,QWORD PTR [rbx+0x10]
   1400083ae:	movsxd rcx,DWORD PTR [r8+0x4]
   1400083b2:	mov    rax,QWORD PTR [r8+0x10]
   1400083b6:	lea    rdx,[rax+rcx*8]
   1400083ba:	lea    rcx,[r8+rax*1]
   1400083be:	add    rdx,r8
   1400083c1:	call   0x1400066b0
   1400083c6:	lea    rcx,[rbx+0x10]
   1400083ca:	call   0x140008120
   1400083cf:	mov    rcx,rdi
   1400083d2:	call   QWORD PTR [rip+0x4fa0]        # 0x14000d378
   1400083d8:	mov    rdx,rbx
   1400083db:	mov    rcx,rdi
   1400083de:	call   0x140007a00
   1400083e3:	mov    r11,QWORD PTR [rbx+0x10]
   1400083e7:	mov    r9d,DWORD PTR [r11+0x4]
   1400083eb:	test   r9d,r9d
   1400083ee:	je     0x14000840d
   1400083f0:	lea    rdx,[rsp+0x20]
   1400083f5:	dec    r9d
   1400083f8:	xor    r8d,r8d
   1400083fb:	mov    rcx,rdi
   1400083fe:	call   QWORD PTR [rip+0x4f7c]        # 0x14000d380
   140008404:	mov    rcx,rdi
   140008407:	call   QWORD PTR [rip+0x4f7b]        # 0x14000d388
   14000840d:	mov    rbx,QWORD PTR [rsp+0x60]
   140008412:	mov    rsi,QWORD PTR [rsp+0x68]
   140008417:	add    rsp,0x50
   14000841b:	pop    rdi
   14000841c:	ret    
   14000841d:	int3   
   14000841e:	int3   
   14000841f:	int3   
   140008420:	mov    QWORD PTR [rsp+0x10],rbx
   140008425:	push   rbp
   140008426:	push   rsi
   140008427:	push   rdi
   140008428:	push   r12
   14000842a:	push   r13
   14000842c:	push   r14
   14000842e:	push   r15
   140008430:	sub    rsp,0x60
   140008434:	mov    r14,rcx
   140008437:	mov    r13,rdx
   14000843a:	lea    rcx,[rsp+0xa0]
   140008442:	mov    dl,0x2f
   140008444:	mov    rdi,r8
   140008447:	call   QWORD PTR [rip+0x5253]        # 0x14000d6a0
   14000844d:	lea    rdx,[rsp+0x48]
   140008452:	mov    rcx,rdi
   140008455:	mov    rbx,rax
   140008458:	call   QWORD PTR [rip+0x53f2]        # 0x14000d850
   14000845e:	movzx  r8d,WORD PTR [rbx]
   140008462:	lea    rdx,[rsp+0x30]
   140008467:	mov    r9d,0x1
   14000846d:	mov    rcx,rax
   140008470:	mov    DWORD PTR [rsp+0x20],0x1
   140008478:	call   QWORD PTR [rip+0x4ee2]        # 0x14000d360
   14000847e:	lea    rcx,[rsp+0x48]
   140008483:	call   QWORD PTR [rip+0x523f]        # 0x14000d6c8
   140008489:	mov    rsi,QWORD PTR [r14+0x20]
   14000848d:	or     r12d,0xffffffff
   140008491:	xor    r15d,r15d
   140008494:	mov    edi,r12d
   140008497:	test   rsi,rsi
   14000849a:	je     0x140008716
   1400084a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084a5:	mov    eax,DWORD PTR [rbx+0x8]
   1400084a8:	cmp    DWORD PTR [rbx+0xc],eax
   1400084ab:	je     0x1400086a5
   1400084b1:	mov    eax,DWORD PTR [rbx]
   1400084b3:	cmp    eax,0x1
   1400084b6:	je     0x1400084ce
   1400084b8:	test   eax,eax
   1400084ba:	je     0x1400084ce
   1400084bc:	mov    edx,DWORD PTR [rbx+0x4]
   1400084bf:	lea    rcx,[rsp+0x30]
   1400084c4:	call   0x140006440
   1400084c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084ce:	movsxd rax,DWORD PTR [rbx+0x8]
   1400084d2:	lea    rcx,[rsp+0x40]
   1400084d7:	lea    rdx,[rbx+rax*8+0x10]
   1400084dc:	call   QWORD PTR [rip+0x533e]        # 0x14000d820
   1400084e2:	mov    r11,QWORD PTR [rsp+0x30]
   1400084e7:	mov    eax,DWORD PTR [r11]
   1400084ea:	cmp    eax,0x1
   1400084ed:	je     0x140008506
   1400084ef:	test   eax,eax
   1400084f1:	je     0x140008506
   1400084f3:	mov    edx,DWORD PTR [r11+0x4]
   1400084f7:	lea    rcx,[rsp+0x30]
   1400084fc:	call   0x140006440
   140008501:	mov    r11,QWORD PTR [rsp+0x30]
   140008506:	movsxd rax,DWORD PTR [r11+0x8]
   14000850a:	lea    rcx,[rax*8+0x10]
   140008512:	mov    eax,DWORD PTR [r11]
   140008515:	lea    rbx,[rcx+r11*1]
   140008519:	mov    QWORD PTR [rsp+0x50],rbx
   14000851e:	cmp    eax,0x1
   140008521:	je     0x140008562
   140008523:	test   eax,eax
   140008525:	je     0x140008562
   140008527:	sub    rbx,rcx
   14000852a:	sub    rbx,r11
   14000852d:	sar    rbx,0x3
   140008531:	cmp    eax,0x1
   140008534:	je     0x14000854d
   140008536:	test   eax,eax
   140008538:	je     0x14000854d
   14000853a:	mov    edx,DWORD PTR [r11+0x4]
   14000853e:	lea    rcx,[rsp+0x30]
   140008543:	call   0x140006440
   140008548:	mov    r11,QWORD PTR [rsp+0x30]
   14000854d:	movsxd rax,DWORD PTR [r11+0x8]
   140008551:	movsxd rcx,ebx
   140008554:	lea    rax,[r11+rax*8+0x10]
   140008559:	lea    rbx,[rax+rcx*8]
   14000855d:	mov    QWORD PTR [rsp+0x50],rbx
   140008562:	mov    rcx,rbx
   140008565:	call   QWORD PTR [rip+0x515d]        # 0x14000d6c8
   14000856b:	lea    rcx,[rsp+0x30]
   140008570:	mov    rdx,rbx
   140008573:	call   QWORD PTR [rip+0x4def]        # 0x14000d368
   140008579:	lea    rcx,[rsp+0xb8]
   140008581:	mov    dl,0x2f
   140008583:	call   QWORD PTR [rip+0x5117]        # 0x14000d6a0
   140008589:	lea    rdx,[rsp+0x40]
   14000858e:	lea    rcx,[rsp+0x38]
   140008593:	movzx  ebx,WORD PTR [rax]
   140008596:	call   QWORD PTR [rip+0x5284]        # 0x14000d820
   14000859c:	lea    rcx,[rsp+0x38]
   1400085a1:	movzx  edx,bx
   1400085a4:	call   QWORD PTR [rip+0x526e]        # 0x14000d818
   1400085aa:	lea    rcx,[rsp+0x40]
   1400085af:	call   QWORD PTR [rip+0x5113]        # 0x14000d6c8
   1400085b5:	mov    rdx,QWORD PTR [rsi+0x10]
   1400085b9:	lea    rbp,[rsi+0x10]
   1400085bd:	cmp    DWORD PTR [rdx+0x4],r15d
   1400085c1:	mov    edi,r15d
   1400085c4:	jle    0x140008607
   1400085c6:	mov    rbx,r15
   1400085c9:	nop    DWORD PTR [rax+0x0]
   1400085d0:	mov    rax,QWORD PTR [rdx+0x10]
   1400085d4:	lea    rcx,[rbx+rax*1]
   1400085d8:	mov    rsi,QWORD PTR [rcx+rdx*1]
   1400085dc:	cmp    DWORD PTR [rsi],0x1
   1400085df:	jne    0x1400085f8
   1400085e1:	lea    rcx,[rsi+0x20]
   1400085e5:	lea    rdx,[rsp+0x38]
   1400085ea:	call   QWORD PTR [rip+0x5050]        # 0x14000d640
   1400085f0:	test   al,al
   1400085f2:	jne    0x14000867b
   1400085f8:	mov    rdx,QWORD PTR [rbp+0x0]
   1400085fc:	inc    edi
   1400085fe:	add    rbx,0x8
   140008602:	cmp    edi,DWORD PTR [rdx+0x4]
   140008605:	jl     0x1400085d0
   140008607:	lea    rcx,[rsp+0x38]
   14000860c:	mov    DWORD PTR [r13+0x0],r12d
   140008610:	mov    DWORD PTR [r13+0x4],r12d
   140008614:	mov    QWORD PTR [r13+0x8],r15
   140008618:	mov    QWORD PTR [r13+0x10],r15
   14000861c:	call   QWORD PTR [rip+0x50a6]        # 0x14000d6c8
   140008622:	mov    rdi,QWORD PTR [rsp+0x30]
   140008627:	mov    eax,DWORD PTR [rdi]
   140008629:	test   eax,eax
   14000862b:	je     0x14000864a
   14000862d:	cmp    eax,0xffffffff
   140008630:	je     0x14000877b
   140008636:	lock add DWORD PTR [rdi],0xffffffff
   14000863a:	setne  al
   14000863d:	test   al,al
   14000863f:	jne    0x14000877b
   140008645:	mov    rdi,QWORD PTR [rsp+0x30]
   14000864a:	movsxd rax,DWORD PTR [rdi+0xc]
   14000864e:	lea    rbx,[rdi+rax*8+0x10]
   140008653:	movsxd rax,DWORD PTR [rdi+0x8]
   140008657:	lea    rsi,[rdi+rax*8+0x10]
   14000865c:	cmp    rsi,rbx
   14000865f:	je     0x140008673
   140008661:	sub    rbx,0x8
   140008665:	mov    rcx,rbx
   140008668:	call   QWORD PTR [rip+0x505a]        # 0x14000d6c8
   14000866e:	cmp    rbx,rsi
   140008671:	jne    0x140008661
   140008673:	mov    rcx,rdi
   140008676:	jmp    0x140008775
   14000867b:	cmp    BYTE PTR [rsi+0x18],r15b
   14000867f:	jne    0x14000868c
   140008681:	mov    rdx,rsi
   140008684:	mov    rcx,r14
   140008687:	call   0x140007a00
   14000868c:	cmp    edi,0xffffffff
   14000868f:	je     0x140008607
   140008695:	lea    rcx,[rsp+0x38]
   14000869a:	call   QWORD PTR [rip+0x5028]        # 0x14000d6c8
   1400086a0:	jmp    0x1400084a0
   1400086a5:	cmp    edi,0xffffffff
   1400086a8:	je     0x14000871b
   1400086aa:	test   rsi,rsi
   1400086ad:	je     0x14000871b
   1400086af:	cmp    DWORD PTR [rbx+0xc],eax
   1400086b2:	jne    0x14000871b
   1400086b4:	mov    eax,DWORD PTR [rbx]
   1400086b6:	mov    DWORD PTR [r13+0x0],edi
   1400086ba:	mov    DWORD PTR [r13+0x4],r15d
   1400086be:	mov    QWORD PTR [r13+0x8],rsi
   1400086c2:	mov    QWORD PTR [r13+0x10],r14
   1400086c6:	test   eax,eax
   1400086c8:	je     0x1400086e7
   1400086ca:	cmp    eax,0xffffffff
   1400086cd:	je     0x14000877b
   1400086d3:	lock add DWORD PTR [rbx],0xffffffff
   1400086d7:	setne  al
   1400086da:	test   al,al
   1400086dc:	jne    0x14000877b
   1400086e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e7:	movsxd rax,DWORD PTR [rbx+0xc]
   1400086eb:	lea    rdi,[rbx+rax*8+0x10]
   1400086f0:	movsxd rax,DWORD PTR [rbx+0x8]
   1400086f4:	lea    rsi,[rbx+rax*8+0x10]
   1400086f9:	cmp    rsi,rdi
   1400086fc:	je     0x140008772
   140008702:	sub    rdi,0x8
   140008706:	mov    rcx,rdi
   140008709:	call   QWORD PTR [rip+0x4fb9]        # 0x14000d6c8
   14000870f:	cmp    rdi,rsi
   140008712:	jne    0x140008702
   140008714:	jmp    0x140008772
   140008716:	mov    rbx,QWORD PTR [rsp+0x30]
   14000871b:	mov    eax,DWORD PTR [rbx]
   14000871d:	mov    DWORD PTR [r13+0x0],r12d
   140008721:	mov    DWORD PTR [r13+0x4],r12d
   140008725:	mov    QWORD PTR [r13+0x8],r15
   140008729:	mov    QWORD PTR [r13+0x10],r15
   14000872d:	test   eax,eax
   14000872f:	je     0x140008746
   140008731:	cmp    eax,0xffffffff
   140008734:	je     0x14000877b
   140008736:	lock add DWORD PTR [rbx],0xffffffff
   14000873a:	setne  al
   14000873d:	test   al,al
   14000873f:	jne    0x14000877b
   140008741:	mov    rbx,QWORD PTR [rsp+0x30]
   140008746:	movsxd rax,DWORD PTR [rbx+0xc]
   14000874a:	lea    rdi,[rbx+rax*8+0x10]
   14000874f:	movsxd rax,DWORD PTR [rbx+0x8]
   140008753:	lea    rsi,[rbx+rax*8+0x10]
   140008758:	cmp    rsi,rdi
   14000875b:	je     0x140008772
   14000875d:	nop    DWORD PTR [rax]
   140008760:	sub    rdi,0x8
   140008764:	mov    rcx,rdi
   140008767:	call   QWORD PTR [rip+0x4f5b]        # 0x14000d6c8
   14000876d:	cmp    rdi,rsi
   140008770:	jne    0x140008760
   140008772:	mov    rcx,rbx
   140008775:	call   QWORD PTR [rip+0x4da5]        # 0x14000d520
   14000877b:	mov    rax,r13
   14000877e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140008786:	add    rsp,0x60
   14000878a:	pop    r15
   14000878c:	pop    r14
   14000878e:	pop    r13
   140008790:	pop    r12
   140008792:	pop    rdi
   140008793:	pop    rsi
   140008794:	pop    rbp
   140008795:	ret    
   140008796:	int3   
   140008797:	int3   
   140008798:	int3   
   140008799:	int3   
   14000879a:	int3   
   14000879b:	int3   
   14000879c:	int3   
   14000879d:	int3   
   14000879e:	int3   
   14000879f:	int3   
   1400087a0:	rex push rbx
   1400087a2:	sub    rsp,0x20
   1400087a6:	mov    rbx,rcx
   1400087a9:	call   QWORD PTR [rip+0x4ba9]        # 0x14000d358
   1400087af:	lea    r11,[rip+0x7ba2]        # 0x140010358
   1400087b6:	mov    QWORD PTR [rbx],r11
   1400087b9:	mov    rax,rbx
   1400087bc:	add    rsp,0x20
   1400087c0:	pop    rbx
   1400087c1:	ret    
   1400087c2:	int3   
   1400087c3:	int3   
   1400087c4:	int3   
   1400087c5:	int3   
   1400087c6:	int3   
   1400087c7:	int3   
   1400087c8:	int3   
   1400087c9:	int3   
   1400087ca:	int3   
   1400087cb:	int3   
   1400087cc:	int3   
   1400087cd:	int3   
   1400087ce:	int3   
   1400087cf:	int3   
   1400087d0:	rex push rbx
   1400087d2:	sub    rsp,0x40
   1400087d6:	cmp    DWORD PTR [rsp+0x70],0x0
   1400087db:	mov    rbx,rdx
   1400087de:	jne    0x140008831
   1400087e0:	cmp    r9d,0x1
   1400087e4:	jne    0x140008831
   1400087e6:	test   r8d,r8d
   1400087e9:	jne    0x140008831
   1400087eb:	lea    r8,[rip+0x7d0e]        # 0x140010500
   1400087f2:	lea    rdx,[rsp+0x30]
   1400087f7:	lea    rcx,[rip+0x17e42]        # 0x140020640
   1400087fe:	xor    r9d,r9d
   140008801:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008809:	call   QWORD PTR [rip+0x5001]        # 0x14000d810
   14000880f:	lea    rdx,[rsp+0x30]
   140008814:	mov    rcx,rbx
   140008817:	call   QWORD PTR [rip+0x4e2b]        # 0x14000d648
   14000881d:	lea    rcx,[rsp+0x30]
   140008822:	call   QWORD PTR [rip+0x4ea0]        # 0x14000d6c8
   140008828:	mov    rax,rbx
   14000882b:	add    rsp,0x40
   14000882f:	pop    rbx
   140008830:	ret    
   140008831:	mov    rcx,rdx
   140008834:	call   QWORD PTR [rip+0x4fce]        # 0x14000d808
   14000883a:	mov    rax,rbx
   14000883d:	add    rsp,0x40
   140008841:	pop    rbx
   140008842:	ret    
   140008843:	int3   
   140008844:	int3   
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    QWORD PTR [rsp+0x8],rbx
   140008855:	mov    QWORD PTR [rsp+0x10],rbp
   14000885a:	mov    QWORD PTR [rsp+0x18],rsi
   14000885f:	push   rdi
   140008860:	sub    rsp,0x40
   140008864:	mov    rbp,r8
   140008867:	mov    rbx,rdx
   14000886a:	mov    rsi,rcx
   14000886d:	call   QWORD PTR [rip+0x498d]        # 0x14000d200
   140008873:	lea    rdx,[rsp+0x30]
   140008878:	xor    r9d,r9d
   14000887b:	mov    rdi,QWORD PTR [rax]
   14000887e:	mov    r8,rbx
   140008881:	mov    rcx,rax
   140008884:	call   QWORD PTR [rdi+0x88]
   14000888a:	lea    rdx,[rsp+0x20]
   14000888f:	mov    rcx,rax
   140008892:	call   QWORD PTR [rip+0x4dc8]        # 0x14000d660
   140008898:	lea    rcx,[rsp+0x30]
   14000889d:	call   QWORD PTR [rip+0x4f55]        # 0x14000d7f8
   1400088a3:	mov    rcx,rsi
   1400088a6:	call   QWORD PTR [rip+0x4954]        # 0x14000d200
   1400088ac:	lea    rdx,[rsp+0x30]
   1400088b1:	xor    r9d,r9d
   1400088b4:	mov    rdi,QWORD PTR [rax]
   1400088b7:	mov    r8,rbp
   1400088ba:	mov    rcx,rax
   1400088bd:	call   QWORD PTR [rdi+0x88]
   1400088c3:	lea    rdx,[rsp+0x68]
   1400088c8:	mov    rcx,rax
   1400088cb:	call   QWORD PTR [rip+0x4d8f]        # 0x14000d660
   1400088d1:	lea    rcx,[rsp+0x30]
   1400088d6:	call   QWORD PTR [rip+0x4f1c]        # 0x14000d7f8
   1400088dc:	or     rcx,0xffffffffffffffff
   1400088e0:	xor    eax,eax
   1400088e2:	lea    rsi,[rip+0x7c23]        # 0x14001050c
   1400088e9:	lea    rdx,[rsp+0x30]
   1400088ee:	lea    r8d,[rax+0x1]
   1400088f2:	mov    QWORD PTR [rsp+0x38],rsi
   1400088f7:	mov    rdi,rsi
   1400088fa:	repnz scas al,BYTE PTR es:[rdi]
   1400088fc:	not    rcx
   1400088ff:	dec    rcx
   140008902:	mov    DWORD PTR [rsp+0x30],ecx
   140008906:	lea    rcx,[rsp+0x20]
   14000890b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008910:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140008916:	call   QWORD PTR [rip+0x48ec]        # 0x14000d208
   14000891c:	or     rcx,0xffffffffffffffff
   140008920:	mov    QWORD PTR [rsp+0x38],rsi
   140008925:	movzx  ebx,al
   140008928:	xor    eax,eax
   14000892a:	mov    rdi,rsi
   14000892d:	lea    rdx,[rsp+0x30]
   140008932:	lea    r8d,[rax+0x1]
   140008936:	repnz scas al,BYTE PTR es:[rdi]
   140008938:	not    rcx
   14000893b:	dec    rcx
   14000893e:	mov    DWORD PTR [rsp+0x30],ecx
   140008942:	lea    rcx,[rsp+0x68]
   140008947:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000894c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140008952:	call   QWORD PTR [rip+0x48b0]        # 0x14000d208
   140008958:	movzx  edi,al
   14000895b:	cmp    bl,al
   14000895d:	jne    0x1400089cf
   14000895f:	lea    rcx,[rsp+0x20]
   140008964:	test   bl,bl
   140008966:	je     0x1400089bb
   140008968:	or     r9d,0xffffffff
   14000896c:	lea    rdx,[rsp+0x30]
   140008971:	lea    r8d,[r9+0x4]
   140008975:	call   QWORD PTR [rip+0x4895]        # 0x14000d210
   14000897b:	xor    edx,edx
   14000897d:	lea    r8d,[rdx+0xa]
   140008981:	mov    rcx,rax
   140008984:	call   QWORD PTR [rip+0x488e]        # 0x14000d218
   14000898a:	or     r9d,0xffffffff
   14000898e:	lea    rdx,[rsp+0x30]
   140008993:	lea    r8d,[r9+0x4]
   140008997:	lea    rcx,[rsp+0x68]
   14000899c:	mov    edi,eax
   14000899e:	call   QWORD PTR [rip+0x486c]        # 0x14000d210
   1400089a4:	xor    edx,edx
   1400089a6:	lea    r8d,[rdx+0xa]
   1400089aa:	mov    rcx,rax
   1400089ad:	call   QWORD PTR [rip+0x4865]        # 0x14000d218
   1400089b3:	cmp    edi,eax
   1400089b5:	setl   dil
   1400089b9:	jmp    0x1400089cf
   1400089bb:	lea    rdx,[rsp+0x68]
   1400089c0:	xor    r8d,r8d
   1400089c3:	call   QWORD PTR [rip+0x4857]        # 0x14000d220
   1400089c9:	test   eax,eax
   1400089cb:	sets   dil
   1400089cf:	lea    rcx,[rsp+0x68]
   1400089d4:	call   QWORD PTR [rip+0x4cee]        # 0x14000d6c8
   1400089da:	lea    rcx,[rsp+0x20]
   1400089df:	call   QWORD PTR [rip+0x4ce3]        # 0x14000d6c8
   1400089e5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400089ea:	mov    rbp,QWORD PTR [rsp+0x58]
   1400089ef:	mov    rsi,QWORD PTR [rsp+0x60]
   1400089f4:	mov    al,dil
   1400089f7:	add    rsp,0x40
   1400089fb:	pop    rdi
   1400089fc:	ret    
   1400089fd:	int3   
   1400089fe:	int3   
   1400089ff:	int3   
   140008a00:	mov    QWORD PTR [rsp+0x8],rbx
   140008a05:	push   rdi
   140008a06:	sub    rsp,0x20
   140008a0a:	mov    ebx,edx
   140008a0c:	mov    rdi,rcx
   140008a0f:	call   QWORD PTR [rip+0x4813]        # 0x14000d228
   140008a15:	test   bl,0x1
   140008a18:	je     0x140008a22
   140008a1a:	mov    rcx,rdi
   140008a1d:	call   0x14000b8c8
   140008a22:	mov    rax,rdi
   140008a25:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a2a:	add    rsp,0x20
   140008a2e:	pop    rdi
   140008a2f:	ret    
   140008a30:	mov    rcx,QWORD PTR [rcx+0x30]
   140008a34:	rex.W jmp QWORD PTR [rip+0x549d]        # 0x14000ded8
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	rex push rbx
   140008a42:	sub    rsp,0x20
   140008a46:	mov    rbx,rcx
   140008a49:	mov    rcx,QWORD PTR [rcx+0x38]
   140008a4d:	xor    edx,edx
   140008a4f:	call   QWORD PTR [rip+0x5463]        # 0x14000deb8
   140008a55:	mov    rcx,QWORD PTR [rbx+0x38]
   140008a59:	mov    edx,0x7
   140008a5e:	call   QWORD PTR [rip+0x545c]        # 0x14000dec0
   140008a64:	mov    rcx,QWORD PTR [rbx+0x38]
   140008a68:	xor    edx,edx
   140008a6a:	lea    r8d,[rdx+0x1]
   140008a6e:	call   QWORD PTR [rip+0x5454]        # 0x14000dec8
   140008a74:	mov    rcx,rbx
   140008a77:	add    rsp,0x20
   140008a7b:	pop    rbx
   140008a7c:	rex.W jmp QWORD PTR [rip+0x544d]        # 0x14000ded0
   140008a83:	int3   
   140008a84:	int3   
   140008a85:	int3   
   140008a86:	int3   
   140008a87:	int3   
   140008a88:	int3   
   140008a89:	int3   
   140008a8a:	int3   
   140008a8b:	int3   
   140008a8c:	int3   
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	mov    QWORD PTR [rsp+0x10],rbx
   140008a95:	push   rbp
   140008a96:	push   rsi
   140008a97:	push   rdi
   140008a98:	push   r12
   140008a9a:	push   r13
   140008a9c:	sub    rsp,0x50
   140008aa0:	mov    rsi,rcx
   140008aa3:	mov    rcx,QWORD PTR [rcx+0x38]
   140008aa7:	mov    r12d,r8d
   140008aaa:	mov    rdi,rdx
   140008aad:	call   QWORD PTR [rip+0x53d5]        # 0x14000de88
   140008ab3:	mov    rcx,QWORD PTR [rsi+0x38]
   140008ab7:	lea    edx,[rax+0x1]
   140008aba:	mov    ebp,eax
   140008abc:	call   QWORD PTR [rip+0x53ce]        # 0x14000de90
   140008ac2:	lea    rcx,[rsp+0x80]
   140008aca:	mov    rdx,rdi
   140008acd:	call   QWORD PTR [rip+0x4d4d]        # 0x14000d820
   140008ad3:	mov    rdx,QWORD PTR [rsp+0x80]
   140008adb:	cmp    DWORD PTR [rdx+0x4],0x0
   140008adf:	jne    0x140008b96
   140008ae5:	or     rcx,0xffffffffffffffff
   140008ae9:	lea    rdx,[rip+0x7a68]        # 0x140010558
   140008af0:	xor    eax,eax
   140008af2:	mov    rdi,rdx
   140008af5:	mov    QWORD PTR [rsp+0x38],rdx
   140008afa:	lea    rdx,[rsp+0x40]
   140008aff:	repnz scas al,BYTE PTR es:[rdi]
   140008b01:	not    rcx
   140008b04:	dec    rcx
   140008b07:	mov    DWORD PTR [rsp+0x30],ecx
   140008b0b:	lea    rcx,[rsp+0x20]
   140008b10:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008b15:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008b1b:	call   QWORD PTR [rip+0x4b6f]        # 0x14000d690
   140008b21:	lea    edx,[rbp+0x1]
   140008b24:	lea    rcx,[rsp+0x30]
   140008b29:	mov    r8d,0xa
   140008b2f:	call   QWORD PTR [rip+0x46bb]        # 0x14000d1f0
   140008b35:	lea    rdx,[rsp+0x20]
   140008b3a:	lea    rcx,[rsp+0x98]
   140008b42:	mov    rdi,rax
   140008b45:	call   QWORD PTR [rip+0x4cd5]        # 0x14000d820
   140008b4b:	lea    rcx,[rsp+0x98]
   140008b53:	mov    rdx,rdi
   140008b56:	call   QWORD PTR [rip+0x4ccc]        # 0x14000d828
   140008b5c:	lea    rdx,[rsp+0x98]
   140008b64:	lea    rcx,[rsp+0x80]
   140008b6c:	call   QWORD PTR [rip+0x4af6]        # 0x14000d668
   140008b72:	lea    rcx,[rsp+0x98]
   140008b7a:	call   QWORD PTR [rip+0x4b48]        # 0x14000d6c8
   140008b80:	lea    rcx,[rsp+0x30]
   140008b85:	call   QWORD PTR [rip+0x4b3d]        # 0x14000d6c8
   140008b8b:	lea    rcx,[rsp+0x20]
   140008b90:	call   QWORD PTR [rip+0x4b32]        # 0x14000d6c8
   140008b96:	or     rcx,0xffffffffffffffff
   140008b9a:	lea    rdx,[rip+0x79b3]        # 0x140010554
   140008ba1:	xor    eax,eax
   140008ba3:	mov    rdi,rdx
   140008ba6:	mov    QWORD PTR [rsp+0x38],rdx
   140008bab:	lea    rdx,[rsp+0x40]
   140008bb0:	repnz scas al,BYTE PTR es:[rdi]
   140008bb2:	not    rcx
   140008bb5:	dec    rcx
   140008bb8:	mov    DWORD PTR [rsp+0x30],ecx
   140008bbc:	lea    rcx,[rsp+0x80]
   140008bc4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008bc9:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008bcf:	call   QWORD PTR [rip+0x48e3]        # 0x14000d4b8
   140008bd5:	mov    ecx,r12d
   140008bd8:	call   QWORD PTR [rip+0x461a]        # 0x14000d1f8
   140008bde:	mov    r11,rax
   140008be1:	test   rax,rax
   140008be4:	je     0x140008bfd
   140008be6:	or     rcx,0xffffffffffffffff
   140008bea:	xor    eax,eax
   140008bec:	mov    rdi,r11
   140008bef:	repnz scas al,BYTE PTR es:[rdi]
   140008bf1:	not    rcx
   140008bf4:	dec    rcx
   140008bf7:	mov    DWORD PTR [rsp+0x30],ecx
   140008bfb:	jmp    0x140008c05
   140008bfd:	mov    DWORD PTR [rsp+0x30],0x0
   140008c05:	mov    QWORD PTR [rsp+0x38],r11
   140008c0a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008c0f:	lea    rdx,[rsp+0x40]
   140008c14:	lea    rcx,[rsp+0x80]
   140008c1c:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008c22:	call   QWORD PTR [rip+0x4890]        # 0x14000d4b8
   140008c28:	or     rcx,0xffffffffffffffff
   140008c2c:	lea    rdx,[rip+0x791d]        # 0x140010550
   140008c33:	mov    rdi,rdx
   140008c36:	mov    QWORD PTR [rsp+0x38],rdx
   140008c3b:	xor    eax,eax
   140008c3d:	repnz scas al,BYTE PTR es:[rdi]
   140008c3f:	lea    rdx,[rsp+0x40]
   140008c44:	not    rcx
   140008c47:	dec    rcx
   140008c4a:	mov    DWORD PTR [rsp+0x30],ecx
   140008c4e:	lea    rcx,[rsp+0x80]
   140008c56:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008c5b:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008c61:	call   QWORD PTR [rip+0x4851]        # 0x14000d4b8
   140008c67:	mov    ecx,0x30
   140008c6c:	call   0x14000b8c2
   140008c71:	lea    r13,[rip+0x78a0]        # 0x140010518
   140008c78:	mov    rdi,rax
   140008c7b:	test   rax,rax
   140008c7e:	je     0x140008c99
   140008c80:	lea    rdx,[rsp+0x80]
   140008c88:	xor    r8d,r8d
   140008c8b:	mov    rcx,rax
   140008c8e:	call   QWORD PTR [rip+0x5204]        # 0x14000de98
   140008c94:	mov    QWORD PTR [rdi],r13
   140008c97:	jmp    0x140008c9b
   140008c99:	xor    edi,edi
   140008c9b:	mov    edx,DWORD PTR [rdi+0x28]
   140008c9e:	mov    rcx,rdi
   140008ca1:	and    edx,0xfffffffc
   140008ca4:	call   QWORD PTR [rip+0x51f6]        # 0x14000dea0
   140008caa:	mov    rcx,QWORD PTR [rsi+0x38]
   140008cae:	mov    r9,rdi
   140008cb1:	xor    r8d,r8d
   140008cb4:	mov    edx,ebp
   140008cb6:	call   QWORD PTR [rip+0x51ec]        # 0x14000dea8
   140008cbc:	mov    ecx,0x30
   140008cc1:	call   0x14000b8c2
   140008cc6:	mov    rbx,rax
   140008cc9:	test   rax,rax
   140008ccc:	je     0x140008cde
   140008cce:	xor    edx,edx
   140008cd0:	mov    rcx,rax
   140008cd3:	call   QWORD PTR [rip+0x51d7]        # 0x14000deb0
   140008cd9:	mov    QWORD PTR [rbx],r13
   140008cdc:	jmp    0x140008ce0
   140008cde:	xor    ebx,ebx
   140008ce0:	mov    rdi,QWORD PTR [rbx]
   140008ce3:	lea    rcx,[rsp+0x40]
   140008ce8:	xor    r8d,r8d
   140008ceb:	mov    edx,r12d
   140008cee:	call   QWORD PTR [rip+0x46d4]        # 0x14000d3c8
   140008cf4:	xor    edx,edx
   140008cf6:	mov    rcx,rbx
   140008cf9:	mov    r8,rax
   140008cfc:	call   QWORD PTR [rdi+0x18]
   140008cff:	lea    rcx,[rsp+0x40]
   140008d04:	call   QWORD PTR [rip+0x4aee]        # 0x14000d7f8
   140008d0a:	mov    rcx,QWORD PTR [rsi+0x38]
   140008d0e:	mov    r9,rbx
   140008d11:	mov    r8d,0x1
   140008d17:	mov    edx,ebp
   140008d19:	call   QWORD PTR [rip+0x5189]        # 0x14000dea8
   140008d1f:	lea    rcx,[rsp+0x80]
   140008d27:	call   QWORD PTR [rip+0x499b]        # 0x14000d6c8
   140008d2d:	mov    rbx,QWORD PTR [rsp+0x88]
   140008d35:	add    rsp,0x50
   140008d39:	pop    r13
   140008d3b:	pop    r12
   140008d3d:	pop    rdi
   140008d3e:	pop    rsi
   140008d3f:	pop    rbp
   140008d40:	ret    
   140008d41:	int3   
   140008d42:	int3   
   140008d43:	int3   
   140008d44:	int3   
   140008d45:	int3   
   140008d46:	int3   
   140008d47:	int3   
   140008d48:	int3   
   140008d49:	int3   
   140008d4a:	int3   
   140008d4b:	int3   
   140008d4c:	int3   
   140008d4d:	int3   
   140008d4e:	int3   
   140008d4f:	int3   
   140008d50:	mov    QWORD PTR [rsp+0x8],rbx
   140008d55:	push   rdi
   140008d56:	sub    rsp,0x20
   140008d5a:	mov    ebx,edx
   140008d5c:	mov    rdi,rcx
   140008d5f:	call   QWORD PTR [rip+0x50eb]        # 0x14000de50
   140008d65:	test   bl,0x1
   140008d68:	je     0x140008d72
   140008d6a:	mov    rcx,rdi
   140008d6d:	call   0x14000b8c8
   140008d72:	mov    rax,rdi
   140008d75:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d7a:	add    rsp,0x20
   140008d7e:	pop    rdi
   140008d7f:	ret    
   140008d80:	mov    QWORD PTR [rsp+0x8],rbx
   140008d85:	mov    QWORD PTR [rsp+0x18],rbp
   140008d8a:	mov    DWORD PTR [rsp+0x10],edx
   140008d8e:	push   rsi
   140008d8f:	push   rdi
   140008d90:	push   r12
   140008d92:	push   r13
   140008d94:	push   r14
   140008d96:	sub    rsp,0x20
   140008d9a:	mov    rdx,QWORD PTR [rcx]
   140008d9d:	movsxd r13,r8d
   140008da0:	mov    r12,rcx
   140008da3:	movsxd rax,DWORD PTR [rdx+0x8]
   140008da7:	mov    r8d,r13d
   140008daa:	lea    r14,[rdx+rax*8+0x10]
   140008daf:	lea    rdx,[rsp+0x58]
   140008db4:	call   QWORD PTR [rip+0x4746]        # 0x14000d500
   140008dba:	mov    r10,QWORD PTR [r12]
   140008dbe:	movsxd rdx,DWORD PTR [rsp+0x58]
   140008dc3:	movsxd r9,DWORD PTR [r10+0x8]
   140008dc7:	mov    rsi,rax
   140008dca:	mov    rdi,r14
   140008dcd:	add    rdx,r9
   140008dd0:	lea    rbx,[r10+r9*8+0x10]
   140008dd5:	lea    rbp,[r10+rdx*8+0x10]
   140008dda:	cmp    rbx,rbp
   140008ddd:	je     0x140008dfe
   140008ddf:	nop
   140008de0:	test   rbx,rbx
   140008de3:	je     0x140008df1
   140008de5:	mov    rdx,rdi
   140008de8:	mov    rcx,rbx
   140008deb:	call   QWORD PTR [rip+0x4a2f]        # 0x14000d820
   140008df1:	add    rbx,0x8
   140008df5:	add    rdi,0x8
   140008df9:	cmp    rbx,rbp
   140008dfc:	jne    0x140008de0
   140008dfe:	mov    r8,QWORD PTR [r12]
   140008e02:	movsxd rdx,DWORD PTR [rsp+0x58]
   140008e07:	movsxd rcx,DWORD PTR [r8+0x8]
   140008e0b:	movsxd rax,DWORD PTR [r8+0xc]
   140008e0f:	lea    rdi,[r14+rdx*8]
   140008e13:	add    rcx,rdx
   140008e16:	lea    rbp,[r8+rax*8+0x10]
   140008e1b:	add    rcx,r13
   140008e1e:	lea    rbx,[r8+rcx*8+0x10]
   140008e23:	cmp    rbx,rbp
   140008e26:	je     0x140008e46
   140008e28:	test   rbx,rbx
   140008e2b:	je     0x140008e39
   140008e2d:	mov    rdx,rdi
   140008e30:	mov    rcx,rbx
   140008e33:	call   QWORD PTR [rip+0x49e7]        # 0x14000d820
   140008e39:	add    rbx,0x8
   140008e3d:	add    rdi,0x8
   140008e41:	cmp    rbx,rbp
   140008e44:	jne    0x140008e28
   140008e46:	mov    eax,DWORD PTR [rsi]
   140008e48:	test   eax,eax
   140008e4a:	je     0x140008e5c
   140008e4c:	cmp    eax,0xffffffff
   140008e4f:	je     0x140008e8e
   140008e51:	lock add DWORD PTR [rsi],0xffffffff
   140008e55:	setne  al
   140008e58:	test   al,al
   140008e5a:	jne    0x140008e8e
   140008e5c:	movsxd rax,DWORD PTR [rsi+0xc]
   140008e60:	lea    rbx,[rsi+rax*8+0x10]
   140008e65:	movsxd rax,DWORD PTR [rsi+0x8]
   140008e69:	lea    rdi,[rsi+rax*8+0x10]
   140008e6e:	cmp    rdi,rbx
   140008e71:	je     0x140008e85
   140008e73:	sub    rbx,0x8
   140008e77:	mov    rcx,rbx
   140008e7a:	call   QWORD PTR [rip+0x4848]        # 0x14000d6c8
   140008e80:	cmp    rbx,rdi
   140008e83:	jne    0x140008e73
   140008e85:	mov    rcx,rsi
   140008e88:	call   QWORD PTR [rip+0x4692]        # 0x14000d520
   140008e8e:	mov    rdx,QWORD PTR [r12]
   140008e92:	movsxd rax,DWORD PTR [rsp+0x58]
   140008e97:	mov    rbx,QWORD PTR [rsp+0x50]
   140008e9c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008ea0:	mov    rbp,QWORD PTR [rsp+0x60]
   140008ea5:	add    rcx,rax
   140008ea8:	lea    rax,[rdx+rcx*8+0x10]
   140008ead:	add    rsp,0x20
   140008eb1:	pop    r14
   140008eb3:	pop    r13
   140008eb5:	pop    r12
   140008eb7:	pop    rdi
   140008eb8:	pop    rsi
   140008eb9:	ret    
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	rex push rbx
   140008ec2:	push   rbp
   140008ec3:	push   rdi
   140008ec4:	push   r13
   140008ec6:	sub    rsp,0xa8
   140008ecd:	mov    rbp,rcx
   140008ed0:	call   QWORD PTR [rip+0x4f3a]        # 0x14000de10
   140008ed6:	lea    rdx,[rip+0x7dab]        # 0x140010c88
   140008edd:	lea    rax,[rip+0x7d64]        # 0x140010c48
   140008ee4:	mov    ecx,0x30
   140008ee9:	mov    QWORD PTR [rbp+0x0],rdx
   140008eed:	mov    QWORD PTR [rbp+0x10],rax
   140008ef1:	call   0x14000b8c2
   140008ef6:	mov    rdi,rax
   140008ef9:	test   rax,rax
   140008efc:	je     0x140008f20
   140008efe:	xor    edx,edx
   140008f00:	mov    rcx,rax
   140008f03:	call   QWORD PTR [rip+0x4f0f]        # 0x14000de18
   140008f09:	lea    r11,[rip+0x7bc8]        # 0x140010ad8
   140008f10:	lea    rax,[rip+0x7b81]        # 0x140010a98
   140008f17:	mov    QWORD PTR [rdi],r11
   140008f1a:	mov    QWORD PTR [rdi+0x10],rax
   140008f1e:	jmp    0x140008f22
   140008f20:	xor    edi,edi
   140008f22:	mov    ecx,0x30
   140008f27:	mov    QWORD PTR [rbp+0x40],rdi
   140008f2b:	call   0x14000b8c2
   140008f30:	mov    rdi,rax
   140008f33:	test   rax,rax
   140008f36:	je     0x140008f5a
   140008f38:	xor    edx,edx
   140008f3a:	mov    rcx,rax
   140008f3d:	call   QWORD PTR [rip+0x4edd]        # 0x14000de20
   140008f43:	lea    r11,[rip+0x786e]        # 0x1400107b8
   140008f4a:	lea    rax,[rip+0x7827]        # 0x140010778
   140008f51:	mov    QWORD PTR [rdi],r11
   140008f54:	mov    QWORD PTR [rdi+0x10],rax
   140008f58:	jmp    0x140008f5c
   140008f5a:	xor    edi,edi
   140008f5c:	mov    ecx,0x30
   140008f61:	mov    QWORD PTR [rbp+0x38],rdi
   140008f65:	call   0x14000b8c2
   140008f6a:	mov    rdi,rax
   140008f6d:	test   rax,rax
   140008f70:	je     0x140008f97
   140008f72:	xor    r8d,r8d
   140008f75:	xor    edx,edx
   140008f77:	mov    rcx,rax
   140008f7a:	call   QWORD PTR [rip+0x4ea8]        # 0x14000de28
   140008f80:	lea    r11,[rip+0x7681]        # 0x140010608
   140008f87:	lea    rax,[rip+0x763a]        # 0x1400105c8
   140008f8e:	mov    QWORD PTR [rdi],r11
   140008f91:	mov    QWORD PTR [rdi+0x10],rax
   140008f95:	jmp    0x140008f99
   140008f97:	xor    edi,edi
   140008f99:	mov    rcx,QWORD PTR [rbp+0x40]
   140008f9d:	mov    edx,0x400400
   140008fa2:	mov    QWORD PTR [rbp+0x30],rdi
   140008fa6:	call   QWORD PTR [rip+0x4e84]        # 0x14000de30
   140008fac:	mov    rcx,QWORD PTR [rbp+0x38]
   140008fb0:	mov    edx,0x2
   140008fb5:	call   QWORD PTR [rip+0x4e7d]        # 0x14000de38
   140008fbb:	lea    rdx,[rip+0x75ea]        # 0x1400105ac
   140008fc2:	xor    eax,eax
   140008fc4:	mov    rdi,rdx
   140008fc7:	mov    QWORD PTR [rsp+0x58],rdx
   140008fcc:	or     r13,0xffffffffffffffff
   140008fd0:	mov    rcx,r13
   140008fd3:	lea    rdx,[rsp+0x80]
   140008fdb:	repnz scas al,BYTE PTR es:[rdi]
   140008fdd:	not    rcx
   140008fe0:	dec    rcx
   140008fe3:	mov    DWORD PTR [rsp+0x50],ecx
   140008fe7:	lea    rcx,[rsp+0x40]
   140008fec:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140008ff1:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   140008ffa:	call   QWORD PTR [rip+0x4690]        # 0x14000d690
   140009000:	lea    rdx,[rip+0x759d]        # 0x1400105a4
   140009007:	mov    rdi,rdx
   14000900a:	mov    QWORD PTR [rsp+0x58],rdx
   14000900f:	xor    eax,eax
   140009011:	mov    rcx,r13
   140009014:	lea    rdx,[rsp+0x90]
   14000901c:	repnz scas al,BYTE PTR es:[rdi]
   14000901e:	not    rcx
   140009021:	dec    rcx
   140009024:	mov    DWORD PTR [rsp+0x50],ecx
   140009028:	lea    rcx,[rsp+0x38]
   14000902d:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140009032:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000903b:	call   QWORD PTR [rip+0x464f]        # 0x14000d690
   140009041:	mov    rdx,QWORD PTR [rip+0x44f0]        # 0x14000d538
   140009048:	mov    QWORD PTR [rsp+0xe8],rdx
   140009050:	mov    eax,DWORD PTR [rdx]
   140009052:	cmp    eax,0x1
   140009055:	je     0x140009086
   140009057:	test   eax,eax
   140009059:	je     0x140009086
   14000905b:	lea    r8d,[r13+0x2]
   14000905f:	lea    rcx,[rsp+0xe8]
   140009067:	mov    edx,0x7fffffff
   14000906c:	call   0x140008d80
   140009071:	test   rax,rax
   140009074:	je     0x1400090ac
   140009076:	lea    rdx,[rsp+0x38]
   14000907b:	mov    rcx,rax
   14000907e:	call   QWORD PTR [rip+0x479c]        # 0x14000d820
   140009084:	jmp    0x1400090ac
   140009086:	lea    rdx,[rsp+0x38]
   14000908b:	lea    rcx,[rsp+0x68]
   140009090:	call   QWORD PTR [rip+0x478a]        # 0x14000d820
   140009096:	lea    rcx,[rsp+0xe8]
   14000909e:	call   QWORD PTR [rip+0x443c]        # 0x14000d4e0
   1400090a4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400090a9:	mov    QWORD PTR [rax],rcx
   1400090ac:	mov    rax,QWORD PTR [rsp+0xe8]
   1400090b4:	mov    ecx,DWORD PTR [rax]
   1400090b6:	cmp    ecx,0x1
   1400090b9:	je     0x1400090ec
   1400090bb:	test   ecx,ecx
   1400090bd:	je     0x1400090ec
   1400090bf:	lea    rcx,[rsp+0xe8]
   1400090c7:	mov    edx,0x7fffffff
   1400090cc:	mov    r8d,0x1
   1400090d2:	call   0x140008d80
   1400090d7:	test   rax,rax
   1400090da:	je     0x140009112
   1400090dc:	lea    rdx,[rsp+0x40]
   1400090e1:	mov    rcx,rax
   1400090e4:	call   QWORD PTR [rip+0x4736]        # 0x14000d820
   1400090ea:	jmp    0x140009112
   1400090ec:	lea    rdx,[rsp+0x40]
   1400090f1:	lea    rcx,[rsp+0x60]
   1400090f6:	call   QWORD PTR [rip+0x4724]        # 0x14000d820
   1400090fc:	lea    rcx,[rsp+0xe8]
   140009104:	call   QWORD PTR [rip+0x43d6]        # 0x14000d4e0
   14000910a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000910f:	mov    QWORD PTR [rax],rcx
   140009112:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000911a:	mov    QWORD PTR [rsp+0xd8],rsi
   140009122:	mov    QWORD PTR [rsp+0x30],rbx
   140009127:	mov    eax,DWORD PTR [rbx]
   140009129:	test   eax,eax
   14000912b:	je     0x140009140
   14000912d:	cmp    eax,0xffffffff
   140009130:	je     0x1400091b1
   140009132:	lock add DWORD PTR [rbx],0x1
   140009136:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000913e:	jmp    0x1400091b1
   140009140:	mov    edx,DWORD PTR [rbx+0x4]
   140009143:	lea    rcx,[rsp+0x30]
   140009148:	mov    QWORD PTR [rsp+0xa0],r12
   140009150:	call   QWORD PTR [rip+0x43ba]        # 0x14000d510
   140009156:	mov    rdx,QWORD PTR [rsp+0x30]
   14000915b:	mov    rbx,QWORD PTR [rsp+0xe8]
   140009163:	movsxd rax,DWORD PTR [rdx+0xc]
   140009167:	lea    r12,[rdx+rax*8+0x10]
   14000916c:	movsxd rax,DWORD PTR [rbx+0x8]
   140009170:	lea    rsi,[rbx+rax*8+0x10]
   140009175:	movsxd rax,DWORD PTR [rdx+0x8]
   140009179:	lea    rdi,[rdx+rax*8+0x10]
   14000917e:	cmp    rdi,r12
   140009181:	je     0x1400091a9
   140009183:	test   rdi,rdi
   140009186:	je     0x140009194
   140009188:	mov    rdx,rsi
   14000918b:	mov    rcx,rdi
   14000918e:	call   QWORD PTR [rip+0x468c]        # 0x14000d820
   140009194:	add    rdi,0x8
   140009198:	add    rsi,0x8
   14000919c:	cmp    rdi,r12
   14000919f:	jne    0x140009183
   1400091a1:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400091a9:	mov    r12,QWORD PTR [rsp+0xa0]
   1400091b1:	mov    eax,DWORD PTR [rbx]
   1400091b3:	test   eax,eax
   1400091b5:	je     0x1400091d5
   1400091b7:	cmp    eax,0xffffffff
   1400091ba:	je     0x14000920b
   1400091bc:	mov    eax,r13d
   1400091bf:	lock xadd DWORD PTR [rbx],eax
   1400091c3:	add    eax,0xffffffff
   1400091c6:	setne  al
   1400091c9:	test   al,al
   1400091cb:	jne    0x14000920b
   1400091cd:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400091d5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400091d9:	lea    rdi,[rbx+rax*8+0x10]
   1400091de:	movsxd rax,DWORD PTR [rbx+0x8]
   1400091e2:	lea    rsi,[rbx+rax*8+0x10]
   1400091e7:	cmp    rsi,rdi
   1400091ea:	je     0x140009202
   1400091ec:	nop    DWORD PTR [rax+0x0]
   1400091f0:	sub    rdi,0x8
   1400091f4:	mov    rcx,rdi
   1400091f7:	call   QWORD PTR [rip+0x44cb]        # 0x14000d6c8
   1400091fd:	cmp    rdi,rsi
   140009200:	jne    0x1400091f0
   140009202:	mov    rcx,rbx
   140009205:	call   QWORD PTR [rip+0x4315]        # 0x14000d520
   14000920b:	lea    rcx,[rsp+0x38]
   140009210:	call   QWORD PTR [rip+0x44b2]        # 0x14000d6c8
   140009216:	lea    rcx,[rsp+0x40]
   14000921b:	call   QWORD PTR [rip+0x44a7]        # 0x14000d6c8
   140009221:	mov    rcx,QWORD PTR [rbp+0x38]
   140009225:	lea    rdx,[rsp+0x30]
   14000922a:	call   QWORD PTR [rip+0x4c10]        # 0x14000de40
   140009230:	mov    rcx,QWORD PTR [rbp+0x38]
   140009234:	call   QWORD PTR [rip+0x545e]        # 0x14000e698
   14000923a:	mov    dl,0x1
   14000923c:	mov    rcx,rax
   14000923f:	call   QWORD PTR [rip+0x545b]        # 0x14000e6a0
   140009245:	mov    rcx,QWORD PTR [rbp+0x38]
   140009249:	mov    edx,0x1f
   14000924e:	mov    DWORD PTR [rsp+0xd0],0x1f
   140009259:	call   QWORD PTR [rip+0x4be9]        # 0x14000de48
   14000925f:	mov    r8,QWORD PTR [rbp+0x40]
   140009263:	lea    rax,[rip+0x732e]        # 0x140010598
   14000926a:	lea    r9,[rip+0x7317]        # 0x140010588
   140009271:	lea    rdx,[rsp+0x70]
   140009276:	mov    rcx,rbp
   140009279:	mov    DWORD PTR [rsp+0x28],0x2
   140009281:	mov    QWORD PTR [rsp+0x20],rax
   140009286:	call   QWORD PTR [rip+0x3f5c]        # 0x14000d1e8
   14000928c:	lea    rcx,[rsp+0x70]
   140009291:	call   QWORD PTR [rip+0x43e1]        # 0x14000d678
   140009297:	mov    r8,QWORD PTR [rbp+0x40]
   14000929b:	lea    rax,[rip+0x72d6]        # 0x140010578
   1400092a2:	lea    r9,[rip+0x72bf]        # 0x140010568
   1400092a9:	lea    rdx,[rsp+0x50]
   1400092ae:	mov    rcx,rbp
   1400092b1:	mov    DWORD PTR [rsp+0x28],0x2
   1400092b9:	mov    QWORD PTR [rsp+0x20],rax
   1400092be:	call   QWORD PTR [rip+0x3f24]        # 0x14000d1e8
   1400092c4:	lea    rcx,[rsp+0x50]
   1400092c9:	call   QWORD PTR [rip+0x43a9]        # 0x14000d678
   1400092cf:	mov    ecx,0x20
   1400092d4:	call   0x14000b8c2
   1400092d9:	mov    rdi,rax
   1400092dc:	test   rax,rax
   1400092df:	je     0x140009304
   1400092e1:	mov    rdx,rbp
   1400092e4:	mov    rcx,rax
   1400092e7:	call   QWORD PTR [rip+0x5403]        # 0x14000e6f0
   1400092ed:	lea    r11,[rip+0x5db4]        # 0x14000f0a8
   1400092f4:	lea    rax,[rip+0x5d1d]        # 0x14000f018
   1400092fb:	mov    QWORD PTR [rdi],r11
   1400092fe:	mov    QWORD PTR [rdi+0x10],rax
   140009302:	jmp    0x140009306
   140009304:	xor    edi,edi
   140009306:	mov    rdx,QWORD PTR [rbp+0x30]
   14000930a:	xor    r9d,r9d
   14000930d:	xor    r8d,r8d
   140009310:	mov    rcx,rdi
   140009313:	call   QWORD PTR [rip+0x53e7]        # 0x14000e700
   140009319:	mov    rdx,QWORD PTR [rbp+0x38]
   14000931d:	xor    r9d,r9d
   140009320:	xor    r8d,r8d
   140009323:	mov    rcx,rdi
   140009326:	call   QWORD PTR [rip+0x53d4]        # 0x14000e700
   14000932c:	mov    rdx,QWORD PTR [rbp+0x40]
   140009330:	xor    r9d,r9d
   140009333:	xor    r8d,r8d
   140009336:	mov    rcx,rdi
   140009339:	call   QWORD PTR [rip+0x53c1]        # 0x14000e700
   14000933f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009344:	mov    eax,DWORD PTR [rbx]
   140009346:	test   eax,eax
   140009348:	je     0x140009364
   14000934a:	cmp    eax,0xffffffff
   14000934d:	je     0x14000939b
   14000934f:	lock xadd DWORD PTR [rbx],r13d
   140009354:	add    r13d,0xffffffff
   140009358:	setne  al
   14000935b:	test   al,al
   14000935d:	jne    0x14000939b
   14000935f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009364:	movsxd rax,DWORD PTR [rbx+0xc]
   140009368:	lea    rdi,[rbx+rax*8+0x10]
   14000936d:	movsxd rax,DWORD PTR [rbx+0x8]
   140009371:	lea    rsi,[rbx+rax*8+0x10]
   140009376:	cmp    rsi,rdi
   140009379:	je     0x140009392
   14000937b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009380:	sub    rdi,0x8
   140009384:	mov    rcx,rdi
   140009387:	call   QWORD PTR [rip+0x433b]        # 0x14000d6c8
   14000938d:	cmp    rdi,rsi
   140009390:	jne    0x140009380
   140009392:	mov    rcx,rbx
   140009395:	call   QWORD PTR [rip+0x4185]        # 0x14000d520
   14000939b:	mov    rax,rbp
   14000939e:	mov    rsi,QWORD PTR [rsp+0xd8]
   1400093a6:	add    rsp,0xa8
   1400093ad:	pop    r13
   1400093af:	pop    rdi
   1400093b0:	pop    rbp
   1400093b1:	pop    rbx
   1400093b2:	ret    
   1400093b3:	int3   
   1400093b4:	int3   
   1400093b5:	int3   
   1400093b6:	int3   
   1400093b7:	int3   
   1400093b8:	int3   
   1400093b9:	int3   
   1400093ba:	int3   
   1400093bb:	int3   
   1400093bc:	int3   
   1400093bd:	int3   
   1400093be:	int3   
   1400093bf:	int3   
   1400093c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400093c5:	push   rdi
   1400093c6:	sub    rsp,0x20
   1400093ca:	mov    ebx,edx
   1400093cc:	mov    rdi,rcx
   1400093cf:	call   QWORD PTR [rip+0x46c3]        # 0x14000da98
   1400093d5:	test   bl,0x1
   1400093d8:	je     0x1400093e2
   1400093da:	mov    rcx,rdi
   1400093dd:	call   0x14000b8c8
   1400093e2:	mov    rax,rdi
   1400093e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093ea:	add    rsp,0x20
   1400093ee:	pop    rdi
   1400093ef:	ret    
   1400093f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400093f5:	push   rdi
   1400093f6:	sub    rsp,0x20
   1400093fa:	mov    ebx,edx
   1400093fc:	mov    rdi,rcx
   1400093ff:	call   QWORD PTR [rip+0x469b]        # 0x14000daa0
   140009405:	test   bl,0x1
   140009408:	je     0x140009412
   14000940a:	mov    rcx,rdi
   14000940d:	call   0x14000b8c8
   140009412:	mov    rax,rdi
   140009415:	mov    rbx,QWORD PTR [rsp+0x30]
   14000941a:	add    rsp,0x20
   14000941e:	pop    rdi
   14000941f:	ret    
   140009420:	mov    QWORD PTR [rsp+0x8],rbx
   140009425:	push   rdi
   140009426:	sub    rsp,0x20
   14000942a:	mov    ebx,edx
   14000942c:	mov    rdi,rcx
   14000942f:	call   QWORD PTR [rip+0x4673]        # 0x14000daa8
   140009435:	test   bl,0x1
   140009438:	je     0x140009442
   14000943a:	mov    rcx,rdi
   14000943d:	call   0x14000b8c8
   140009442:	mov    rax,rdi
   140009445:	mov    rbx,QWORD PTR [rsp+0x30]
   14000944a:	add    rsp,0x20
   14000944e:	pop    rdi
   14000944f:	ret    
   140009450:	sub    rcx,0x10
   140009454:	jmp    0x1400093c0
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	sub    rcx,0x10
   140009464:	jmp    0x140009420
   140009469:	int3   
   14000946a:	int3   
   14000946b:	int3   
   14000946c:	int3   
   14000946d:	int3   
   14000946e:	int3   
   14000946f:	int3   
   140009470:	sub    rcx,0x10
   140009474:	jmp    0x1400093f0
   140009479:	int3   
   14000947a:	int3   
   14000947b:	int3   
   14000947c:	int3   
   14000947d:	int3   
   14000947e:	int3   
   14000947f:	int3   
   140009480:	sub    rcx,0x10
   140009484:	jmp    0x140009490
   140009489:	int3   
   14000948a:	int3   
   14000948b:	int3   
   14000948c:	int3   
   14000948d:	int3   
   14000948e:	int3   
   14000948f:	int3   
   140009490:	mov    QWORD PTR [rsp+0x8],rbx
   140009495:	push   rdi
   140009496:	sub    rsp,0x20
   14000949a:	mov    ebx,edx
   14000949c:	mov    rdi,rcx
   14000949f:	call   QWORD PTR [rip+0x5283]        # 0x14000e728
   1400094a5:	test   bl,0x1
   1400094a8:	je     0x1400094b2
   1400094aa:	mov    rcx,rdi
   1400094ad:	call   0x14000b8c8
   1400094b2:	mov    rax,rdi
   1400094b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094ba:	add    rsp,0x20
   1400094be:	pop    rdi
   1400094bf:	ret    
   1400094c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400094c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400094ca:	push   r12
   1400094cc:	sub    rsp,0x30
   1400094d0:	mov    rax,QWORD PTR [rip+0x4061]        # 0x14000d538
   1400094d7:	mov    r12,rcx
   1400094da:	mov    rdi,rdx
   1400094dd:	mov    QWORD PTR [rdx],rax
   1400094e0:	mov    rcx,QWORD PTR [rcx+0x38]
   1400094e4:	xor    ebx,ebx
   1400094e6:	call   QWORD PTR [rip+0x499c]        # 0x14000de88
   1400094ec:	test   eax,eax
   1400094ee:	jle    0x1400095ce
   1400094f4:	mov    QWORD PTR [rsp+0x40],rbp
   1400094f9:	mov    QWORD PTR [rsp+0x48],rsi
   1400094fe:	xchg   ax,ax
   140009500:	mov    rcx,QWORD PTR [r12+0x38]
   140009505:	mov    r8d,0x1
   14000950b:	mov    edx,ebx
   14000950d:	call   QWORD PTR [rip+0x459d]        # 0x14000dab0
   140009513:	lea    rdx,[rsp+0x20]
   140009518:	mov    r8d,0x2
   14000951e:	mov    r9,QWORD PTR [rax]
   140009521:	mov    rcx,rax
   140009524:	call   QWORD PTR [r9+0x10]
   140009528:	mov    rcx,QWORD PTR [rdi]
   14000952b:	mov    edx,DWORD PTR [rcx]
   14000952d:	mov    rbp,rax
   140009530:	cmp    edx,0x1
   140009533:	je     0x140009576
   140009535:	test   edx,edx
   140009537:	je     0x140009576
   140009539:	mov    edx,0x7fffffff
   14000953e:	mov    r8d,0x1
   140009544:	mov    rcx,rdi
   140009547:	call   0x140002b40
   14000954c:	mov    ecx,0x10
   140009551:	mov    rsi,rax
   140009554:	call   0x14000b8c2
   140009559:	test   rax,rax
   14000955c:	je     0x14000956f
   14000955e:	mov    rdx,rbp
   140009561:	mov    rcx,rax
   140009564:	call   QWORD PTR [rip+0x4296]        # 0x14000d800
   14000956a:	mov    QWORD PTR [rsi],rax
   14000956d:	jmp    0x1400095a4
   14000956f:	xor    eax,eax
   140009571:	mov    QWORD PTR [rsi],rax
   140009574:	jmp    0x1400095a4
   140009576:	mov    rcx,rdi
   140009579:	call   QWORD PTR [rip+0x3f61]        # 0x14000d4e0
   14000957f:	mov    ecx,0x10
   140009584:	mov    rsi,rax
   140009587:	call   0x14000b8c2
   14000958c:	test   rax,rax
   14000958f:	je     0x14000959f
   140009591:	mov    rdx,rbp
   140009594:	mov    rcx,rax
   140009597:	call   QWORD PTR [rip+0x4263]        # 0x14000d800
   14000959d:	jmp    0x1400095a1
   14000959f:	xor    eax,eax
   1400095a1:	mov    QWORD PTR [rsi],rax
   1400095a4:	lea    rcx,[rsp+0x20]
   1400095a9:	call   QWORD PTR [rip+0x4249]        # 0x14000d7f8
   1400095af:	mov    rcx,QWORD PTR [r12+0x38]
   1400095b4:	inc    ebx
   1400095b6:	call   QWORD PTR [rip+0x48cc]        # 0x14000de88
   1400095bc:	cmp    ebx,eax
   1400095be:	jl     0x140009500
   1400095c4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400095c9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400095ce:	mov    rbx,QWORD PTR [rsp+0x50]
   1400095d3:	mov    rax,rdi
   1400095d6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400095db:	add    rsp,0x30
   1400095df:	pop    r12
   1400095e1:	ret    
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	int3   
   1400095e9:	int3   
   1400095ea:	int3   
   1400095eb:	int3   
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	rex push rbx
   1400095f2:	sub    rsp,0x20
   1400095f6:	mov    rbx,rcx
   1400095f9:	call   QWORD PTR [rip+0x44b9]        # 0x14000dab8
   1400095ff:	lea    rax,[rip+0x7a02]        # 0x140011008
   140009606:	lea    r11,[rip+0x781b]        # 0x140010e28
   14000960d:	mov    QWORD PTR [rbx+0x10],rax
   140009611:	mov    rax,rbx
   140009614:	mov    QWORD PTR [rbx],r11
   140009617:	add    rsp,0x20
   14000961b:	pop    rbx
   14000961c:	ret    
   14000961d:	int3   
   14000961e:	int3   
   14000961f:	int3   
   140009620:	mov    QWORD PTR [rsp+0x8],rbx
   140009625:	push   rbp
   140009626:	push   rsi
   140009627:	push   rdi
   140009628:	sub    rsp,0x30
   14000962c:	mov    rsi,rdx
   14000962f:	mov    rdi,rcx
   140009632:	call   QWORD PTR [rip+0x45b0]        # 0x14000dbe8
   140009638:	lea    r8,[rip+0x7a0d]        # 0x14001104c
   14000963f:	lea    rdx,[rsp+0x58]
   140009644:	lea    rcx,[rip+0x17065]        # 0x1400206b0
   14000964b:	xor    r9d,r9d
   14000964e:	mov    rbp,rax
   140009651:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009659:	call   QWORD PTR [rip+0x41b1]        # 0x14000d810
   14000965f:	lea    rdx,[rsp+0x58]
   140009664:	mov    rcx,rbp
   140009667:	call   QWORD PTR [rip+0x4573]        # 0x14000dbe0
   14000966d:	lea    rcx,[rsp+0x58]
   140009672:	mov    rbx,rax
   140009675:	call   QWORD PTR [rip+0x404d]        # 0x14000d6c8
   14000967b:	lea    rax,[rip+0x79be]        # 0x140011040
   140009682:	lea    r8,[rip+0x5b17]        # 0x14000f1a0
   140009689:	lea    rcx,[rsp+0x60]
   14000968e:	mov    r9,rdi
   140009691:	mov    rdx,rbx
   140009694:	mov    DWORD PTR [rsp+0x28],0x0
   14000969c:	mov    QWORD PTR [rsp+0x20],rax
   1400096a1:	call   QWORD PTR [rip+0x3fc9]        # 0x14000d670
   1400096a7:	lea    rcx,[rsp+0x60]
   1400096ac:	call   QWORD PTR [rip+0x3fc6]        # 0x14000d678
   1400096b2:	lea    rdx,[rsi+0x28]
   1400096b6:	xor    r8d,r8d
   1400096b9:	mov    rcx,rbp
   1400096bc:	call   QWORD PTR [rip+0x4516]        # 0x14000dbd8
   1400096c2:	test   rbp,rbp
   1400096c5:	je     0x1400096d6
   1400096c7:	mov    rax,QWORD PTR [rbp+0x0]
   1400096cb:	mov    edx,0x1
   1400096d0:	mov    rcx,rbp
   1400096d3:	call   QWORD PTR [rax+0x18]
   1400096d6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400096db:	add    rsp,0x30
   1400096df:	pop    rdi
   1400096e0:	pop    rsi
   1400096e1:	pop    rbp
   1400096e2:	ret    
   1400096e3:	int3   
   1400096e4:	int3   
   1400096e5:	int3   
   1400096e6:	int3   
   1400096e7:	int3   
   1400096e8:	int3   
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	sub    rcx,0x10
   1400096f4:	jmp    0x140009700
   1400096f9:	int3   
   1400096fa:	int3   
   1400096fb:	int3   
   1400096fc:	int3   
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	mov    QWORD PTR [rsp+0x8],rbx
   140009705:	push   rdi
   140009706:	sub    rsp,0x20
   14000970a:	mov    ebx,edx
   14000970c:	mov    rdi,rcx
   14000970f:	call   QWORD PTR [rip+0x4f43]        # 0x14000e658
   140009715:	test   bl,0x1
   140009718:	je     0x140009722
   14000971a:	mov    rcx,rdi
   14000971d:	call   0x14000b8c8
   140009722:	mov    rax,rdi
   140009725:	mov    rbx,QWORD PTR [rsp+0x30]
   14000972a:	add    rsp,0x20
   14000972e:	pop    rdi
   14000972f:	ret    
   140009730:	mov    QWORD PTR [rsp+0x8],rbx
   140009735:	mov    QWORD PTR [rsp+0x10],rsi
   14000973a:	push   rdi
   14000973b:	sub    rsp,0x30
   14000973f:	mov    rsi,rcx
   140009742:	or     rcx,0xffffffffffffffff
   140009746:	xor    eax,eax
   140009748:	mov    rbx,rdx
   14000974b:	lea    rdi,[rip+0x7916]        # 0x140011068
   140009752:	repnz scas al,BYTE PTR es:[rdi]
   140009754:	not    rcx
   140009757:	lea    rdx,[rcx-0x1]
   14000975b:	lea    rcx,[rip+0x7906]        # 0x140011068
   140009762:	call   QWORD PTR [rip+0x3a78]        # 0x14000d1e0
   140009768:	lea    r8,[rsp+0x58]
   14000976d:	lea    rcx,[rsp+0x50]
   140009772:	mov    rdx,rbx
   140009775:	mov    QWORD PTR [rsp+0x58],rax
   14000977a:	call   QWORD PTR [rip+0x40c8]        # 0x14000d848
   140009780:	lea    rcx,[rsp+0x58]
   140009785:	call   QWORD PTR [rip+0x3f3d]        # 0x14000d6c8
   14000978b:	lea    rcx,[rsp+0x50]
   140009790:	call   QWORD PTR [rip+0x41a2]        # 0x14000d938
   140009796:	test   al,al
   140009798:	je     0x140009801
   14000979a:	mov    ecx,0x98
   14000979f:	call   0x14000b8c2
   1400097a4:	test   rax,rax
   1400097a7:	je     0x1400097be
   1400097a9:	lea    rdx,[rsp+0x50]
   1400097ae:	xor    r8d,r8d
   1400097b1:	mov    rcx,rax
   1400097b4:	call   0x1400018b0
   1400097b9:	mov    rdi,rax
   1400097bc:	jmp    0x1400097c0
   1400097be:	xor    edi,edi
   1400097c0:	lea    r8,[rip+0x7891]        # 0x140011058
   1400097c7:	lea    rdx,[rsp+0x58]
   1400097cc:	lea    rcx,[rip+0x16f15]        # 0x1400206e8
   1400097d3:	xor    r9d,r9d
   1400097d6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400097de:	call   QWORD PTR [rip+0x402c]        # 0x14000d810
   1400097e4:	mov    rcx,QWORD PTR [rsi+0x30]
   1400097e8:	lea    r8,[rsp+0x58]
   1400097ed:	mov    rdx,rdi
   1400097f0:	call   QWORD PTR [rip+0x43fa]        # 0x14000dbf0
   1400097f6:	lea    rcx,[rsp+0x58]
   1400097fb:	call   QWORD PTR [rip+0x3ec7]        # 0x14000d6c8
   140009801:	lea    rcx,[rsp+0x50]
   140009806:	call   QWORD PTR [rip+0x411c]        # 0x14000d928
   14000980c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009811:	mov    rsi,QWORD PTR [rsp+0x48]
   140009816:	add    rsp,0x30
   14000981a:	pop    rdi
   14000981b:	ret    
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	int3   
   14000981f:	int3   
   140009820:	rex push rdi
   140009822:	sub    rsp,0x90
   140009829:	mov    rdx,rcx
   14000982c:	lea    rcx,[rsp+0x60]
   140009831:	call   QWORD PTR [rip+0x43d9]        # 0x14000dc10
   140009837:	or     rcx,0xffffffffffffffff
   14000983b:	lea    rdx,[rip+0x78f6]        # 0x140011138
   140009842:	mov    rdi,rdx
   140009845:	mov    QWORD PTR [rsp+0x48],rdx
   14000984a:	xor    eax,eax
   14000984c:	repnz scas al,BYTE PTR es:[rdi]
   14000984e:	lea    rdx,[rsp+0x50]
   140009853:	not    rcx
   140009856:	dec    rcx
   140009859:	mov    DWORD PTR [rsp+0x40],ecx
   14000985d:	lea    rcx,[rsp+0xb0]
   140009865:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000986a:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140009870:	call   QWORD PTR [rip+0x3e1a]        # 0x14000d690
   140009876:	lea    r8,[rip+0x78ab]        # 0x140011128
   14000987d:	lea    rdx,[rsp+0xa8]
   140009885:	lea    rcx,[rip+0x16e5c]        # 0x1400206e8
   14000988c:	xor    r9d,r9d
   14000988f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009897:	call   QWORD PTR [rip+0x3f73]        # 0x14000d810
   14000989d:	lea    rdx,[rip+0x7878]        # 0x14001111c
   1400098a4:	lea    rcx,[rsp+0x40]
   1400098a9:	mov    r8d,0x4
   1400098af:	call   QWORD PTR [rip+0x3e23]        # 0x14000d6d8
   1400098b5:	lea    rdx,[rip+0x77c4]        # 0x140011080
   1400098bc:	lea    rcx,[rsp+0x30]
   1400098c1:	or     r8d,0xffffffff
   1400098c5:	mov    rdi,rax
   1400098c8:	call   QWORD PTR [rip+0x3c2a]        # 0x14000d4f8
   1400098ce:	lea    r9,[rsp+0xb0]
   1400098d6:	lea    r8,[rsp+0xa8]
   1400098de:	lea    rdx,[rsp+0xb8]
   1400098e6:	mov    rcx,rax
   1400098e9:	mov    QWORD PTR [rsp+0x20],rdi
   1400098ee:	call   QWORD PTR [rip+0x38e4]        # 0x14000d1d8
   1400098f4:	lea    rcx,[rsp+0x60]
   1400098f9:	mov    rdx,rax
   1400098fc:	call   QWORD PTR [rip+0x4306]        # 0x14000dc08
   140009902:	lea    rcx,[rsp+0xb8]
   14000990a:	call   QWORD PTR [rip+0x3db8]        # 0x14000d6c8
   140009910:	lea    rcx,[rsp+0x30]
   140009915:	call   QWORD PTR [rip+0x3dad]        # 0x14000d6c8
   14000991b:	lea    rcx,[rsp+0xa8]
   140009923:	call   QWORD PTR [rip+0x3d9f]        # 0x14000d6c8
   140009929:	lea    rcx,[rsp+0x40]
   14000992e:	call   QWORD PTR [rip+0x3d94]        # 0x14000d6c8
   140009934:	lea    rcx,[rsp+0xb0]
   14000993c:	call   QWORD PTR [rip+0x3d86]        # 0x14000d6c8
   140009942:	lea    r8,[rip+0x77df]        # 0x140011128
   140009949:	lea    rdx,[rsp+0xa8]
   140009951:	lea    rcx,[rip+0x16d90]        # 0x1400206e8
   140009958:	xor    r9d,r9d
   14000995b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009963:	call   QWORD PTR [rip+0x3ea7]        # 0x14000d810
   140009969:	lea    rdx,[rsp+0xa8]
   140009971:	lea    rcx,[rsp+0x60]
   140009976:	call   QWORD PTR [rip+0x4284]        # 0x14000dc00
   14000997c:	lea    rcx,[rsp+0xa8]
   140009984:	call   QWORD PTR [rip+0x3d3e]        # 0x14000d6c8
   14000998a:	lea    rcx,[rsp+0x60]
   14000998f:	call   QWORD PTR [rip+0x453b]        # 0x14000ded0
   140009995:	lea    rcx,[rsp+0x60]
   14000999a:	call   QWORD PTR [rip+0x4258]        # 0x14000dbf8
   1400099a0:	add    rsp,0x90
   1400099a7:	pop    rdi
   1400099a8:	ret    
   1400099a9:	int3   
   1400099aa:	int3   
   1400099ab:	int3   
   1400099ac:	int3   
   1400099ad:	int3   
   1400099ae:	int3   
   1400099af:	int3   
   1400099b0:	rex push rbx
   1400099b2:	sub    rsp,0x40
   1400099b6:	mov    rbx,rcx
   1400099b9:	lea    rcx,[rsp+0x20]
   1400099be:	xor    edx,edx
   1400099c0:	call   QWORD PTR [rip+0x37f2]        # 0x14000d1b8
   1400099c6:	lea    rdx,[rsp+0x58]
   1400099cb:	mov    rcx,rbx
   1400099ce:	call   QWORD PTR [rip+0x4244]        # 0x14000dc18
   1400099d4:	lea    rcx,[rsp+0x30]
   1400099d9:	mov    rdx,rax
   1400099dc:	call   QWORD PTR [rip+0x3cd6]        # 0x14000d6b8
   1400099e2:	lea    rdx,[rip+0x7757]        # 0x140011140
   1400099e9:	lea    rcx,[rsp+0x50]
   1400099ee:	mov    r8d,0xe
   1400099f4:	call   QWORD PTR [rip+0x3cde]        # 0x14000d6d8
   1400099fa:	lea    r8,[rsp+0x30]
   1400099ff:	lea    rdx,[rsp+0x50]
   140009a04:	lea    rcx,[rsp+0x20]
   140009a09:	call   QWORD PTR [rip+0x3cb1]        # 0x14000d6c0
   140009a0f:	lea    rcx,[rsp+0x50]
   140009a14:	call   QWORD PTR [rip+0x3cae]        # 0x14000d6c8
   140009a1a:	lea    rcx,[rsp+0x30]
   140009a1f:	call   QWORD PTR [rip+0x3dd3]        # 0x14000d7f8
   140009a25:	lea    rcx,[rsp+0x58]
   140009a2a:	call   QWORD PTR [rip+0x3ca0]        # 0x14000d6d0
   140009a30:	lea    rdx,[rip+0x7719]        # 0x140011150
   140009a37:	lea    rcx,[rsp+0x50]
   140009a3c:	mov    r8d,0xa
   140009a42:	call   QWORD PTR [rip+0x3c90]        # 0x14000d6d8
   140009a48:	lea    rdx,[rsp+0x50]
   140009a4d:	lea    rcx,[rsp+0x20]
   140009a52:	call   QWORD PTR [rip+0x3768]        # 0x14000d1c0
   140009a58:	lea    rcx,[rsp+0x50]
   140009a5d:	call   QWORD PTR [rip+0x3c65]        # 0x14000d6c8
   140009a63:	mov    rcx,QWORD PTR [rbx+0x38]
   140009a67:	lea    rdx,[rsp+0x20]
   140009a6c:	call   0x1400010b0
   140009a71:	lea    rcx,[rsp+0x20]
   140009a76:	call   QWORD PTR [rip+0x374c]        # 0x14000d1c8
   140009a7c:	lea    rdx,[rip+0x76dd]        # 0x140011160
   140009a83:	lea    rcx,[rsp+0x50]
   140009a88:	mov    r8d,0x9
   140009a8e:	call   QWORD PTR [rip+0x3c44]        # 0x14000d6d8
   140009a94:	lea    rdx,[rsp+0x50]
   140009a99:	lea    rcx,[rsp+0x20]
   140009a9e:	call   QWORD PTR [rip+0x371c]        # 0x14000d1c0
   140009aa4:	lea    rcx,[rsp+0x50]
   140009aa9:	call   QWORD PTR [rip+0x3c19]        # 0x14000d6c8
   140009aaf:	mov    rcx,QWORD PTR [rbx+0x40]
   140009ab3:	lea    rdx,[rsp+0x20]
   140009ab8:	call   0x1400010b0
   140009abd:	lea    rcx,[rsp+0x20]
   140009ac2:	call   QWORD PTR [rip+0x3700]        # 0x14000d1c8
   140009ac8:	lea    rcx,[rsp+0x20]
   140009acd:	call   QWORD PTR [rip+0x36fd]        # 0x14000d1d0
   140009ad3:	add    rsp,0x40
   140009ad7:	pop    rbx
   140009ad8:	ret    
   140009ad9:	int3   
   140009ada:	int3   
   140009adb:	int3   
   140009adc:	int3   
   140009add:	int3   
   140009ade:	int3   
   140009adf:	int3   
   140009ae0:	rex push rbx
   140009ae2:	sub    rsp,0x50
   140009ae6:	mov    rbx,rcx
   140009ae9:	lea    rcx,[rsp+0x20]
   140009aee:	xor    edx,edx
   140009af0:	call   QWORD PTR [rip+0x36c2]        # 0x14000d1b8
   140009af6:	lea    rdx,[rip+0x7643]        # 0x140011140
   140009afd:	lea    rcx,[rsp+0x60]
   140009b02:	mov    r8d,0xe
   140009b08:	call   QWORD PTR [rip+0x3bca]        # 0x14000d6d8
   140009b0e:	lea    rcx,[rsp+0x40]
   140009b13:	call   QWORD PTR [rip+0x3cef]        # 0x14000d808
   140009b19:	lea    r8,[rsp+0x60]
   140009b1e:	lea    rdx,[rsp+0x30]
   140009b23:	lea    rcx,[rsp+0x20]
   140009b28:	mov    r9,rax
   140009b2b:	call   QWORD PTR [rip+0x3b77]        # 0x14000d6a8
   140009b31:	lea    rdx,[rsp+0x68]
   140009b36:	mov    rcx,rax
   140009b39:	call   QWORD PTR [rip+0x3b71]        # 0x14000d6b0
   140009b3f:	mov    rcx,rbx
   140009b42:	mov    rdx,rax
   140009b45:	call   QWORD PTR [rip+0x40d5]        # 0x14000dc20
   140009b4b:	lea    rcx,[rsp+0x68]
   140009b50:	call   QWORD PTR [rip+0x3b7a]        # 0x14000d6d0
   140009b56:	lea    rcx,[rsp+0x30]
   140009b5b:	call   QWORD PTR [rip+0x3c97]        # 0x14000d7f8
   140009b61:	lea    rcx,[rsp+0x60]
   140009b66:	call   QWORD PTR [rip+0x3b5c]        # 0x14000d6c8
   140009b6c:	lea    rcx,[rsp+0x40]
   140009b71:	call   QWORD PTR [rip+0x3c81]        # 0x14000d7f8
   140009b77:	lea    rdx,[rip+0x75d2]        # 0x140011150
   140009b7e:	lea    rcx,[rsp+0x60]
   140009b83:	mov    r8d,0xa
   140009b89:	call   QWORD PTR [rip+0x3b49]        # 0x14000d6d8
   140009b8f:	lea    rdx,[rsp+0x60]
   140009b94:	lea    rcx,[rsp+0x20]
   140009b99:	call   QWORD PTR [rip+0x3621]        # 0x14000d1c0
   140009b9f:	lea    rcx,[rsp+0x60]
   140009ba4:	call   QWORD PTR [rip+0x3b1e]        # 0x14000d6c8
   140009baa:	mov    rcx,QWORD PTR [rbx+0x38]
   140009bae:	lea    rdx,[rsp+0x20]
   140009bb3:	call   0x1400011b0
   140009bb8:	lea    rcx,[rsp+0x20]
   140009bbd:	call   QWORD PTR [rip+0x3605]        # 0x14000d1c8
   140009bc3:	lea    rdx,[rip+0x7596]        # 0x140011160
   140009bca:	lea    rcx,[rsp+0x60]
   140009bcf:	mov    r8d,0x9
   140009bd5:	call   QWORD PTR [rip+0x3afd]        # 0x14000d6d8
   140009bdb:	lea    rdx,[rsp+0x60]
   140009be0:	lea    rcx,[rsp+0x20]
   140009be5:	call   QWORD PTR [rip+0x35d5]        # 0x14000d1c0
   140009beb:	lea    rcx,[rsp+0x60]
   140009bf0:	call   QWORD PTR [rip+0x3ad2]        # 0x14000d6c8
   140009bf6:	mov    rcx,QWORD PTR [rbx+0x40]
   140009bfa:	lea    rdx,[rsp+0x20]
   140009bff:	call   0x1400011b0
   140009c04:	lea    rcx,[rsp+0x20]
   140009c09:	call   QWORD PTR [rip+0x35b9]        # 0x14000d1c8
   140009c0f:	lea    rcx,[rsp+0x20]
   140009c14:	call   QWORD PTR [rip+0x35b6]        # 0x14000d1d0
   140009c1a:	add    rsp,0x50
   140009c1e:	pop    rbx
   140009c1f:	ret    
   140009c20:	rex push rbx
   140009c22:	push   rbp
   140009c23:	push   rsi
   140009c24:	push   rdi
   140009c25:	push   r12
   140009c27:	sub    rsp,0x30
   140009c2b:	xor    r12d,r12d
   140009c2e:	mov    rsi,rcx
   140009c31:	mov    r8d,r12d
   140009c34:	mov    ebp,r12d
   140009c37:	mov    DWORD PTR [rsp+0x60],r12d
   140009c3c:	call   QWORD PTR [rip+0x4016]        # 0x14000dc58
   140009c42:	lea    r11,[rip+0x77af]        # 0x1400113f8
   140009c49:	lea    rax,[rip+0x7768]        # 0x1400113b8
   140009c50:	lea    r8,[rip+0x774d]        # 0x1400113a4
   140009c57:	lea    rdx,[rsp+0x60]
   140009c5c:	lea    rcx,[rip+0x16a85]        # 0x1400206e8
   140009c63:	xor    r9d,r9d
   140009c66:	mov    QWORD PTR [rsi],r11
   140009c69:	mov    QWORD PTR [rsi+0x10],rax
   140009c6d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009c75:	call   QWORD PTR [rip+0x3b95]        # 0x14000d810
   140009c7b:	mov    rcx,rsi
   140009c7e:	call   QWORD PTR [rip+0x3fcc]        # 0x14000dc50
   140009c84:	lea    rdx,[rsp+0x60]
   140009c89:	mov    rcx,rax
   140009c8c:	call   QWORD PTR [rip+0x3fb6]        # 0x14000dc48
   140009c92:	lea    rcx,[rsp+0x60]
   140009c97:	mov    rbx,rax
   140009c9a:	call   QWORD PTR [rip+0x3a28]        # 0x14000d6c8
   140009ca0:	lea    rcx,[rsp+0x78]
   140009ca5:	xor    r9d,r9d
   140009ca8:	xor    r8d,r8d
   140009cab:	xor    edx,edx
   140009cad:	mov    DWORD PTR [rsp+0x20],r12d
   140009cb2:	call   QWORD PTR [rip+0x3cd0]        # 0x14000d988
   140009cb8:	lea    r8,[rip+0x76dd]        # 0x14001139c
   140009cbf:	lea    rdx,[rsp+0x70]
   140009cc4:	lea    rcx,[rip+0x16a1d]        # 0x1400206e8
   140009ccb:	xor    r9d,r9d
   140009cce:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009cd6:	call   QWORD PTR [rip+0x3b34]        # 0x14000d810
   140009cdc:	lea    r11,[rsp+0x78]
   140009ce1:	lea    r9,[rip+0x76a8]        # 0x140011390
   140009ce8:	lea    rdx,[rsp+0x70]
   140009ced:	mov    r8,rsi
   140009cf0:	mov    rcx,rbx
   140009cf3:	mov    QWORD PTR [rsp+0x20],r11
   140009cf8:	call   QWORD PTR [rip+0x3f42]        # 0x14000dc40
   140009cfe:	lea    rcx,[rsp+0x70]
   140009d03:	mov    rbx,rax
   140009d06:	call   QWORD PTR [rip+0x39bc]        # 0x14000d6c8
   140009d0c:	lea    rcx,[rsp+0x78]
   140009d11:	call   QWORD PTR [rip+0x3c81]        # 0x14000d998
   140009d17:	lea    edx,[r12+0x41]
   140009d1c:	lea    rcx,[rsp+0x60]
   140009d21:	call   QWORD PTR [rip+0x3c69]        # 0x14000d990
   140009d27:	lea    rdx,[rsp+0x60]
   140009d2c:	mov    rcx,rbx
   140009d2f:	call   QWORD PTR [rip+0x49ab]        # 0x14000e6e0
   140009d35:	lea    rcx,[rsp+0x60]
   140009d3a:	call   QWORD PTR [rip+0x3c58]        # 0x14000d998
   140009d40:	lea    edx,[r12+0x6]
   140009d45:	mov    rcx,rbx
   140009d48:	call   QWORD PTR [rip+0x3eea]        # 0x14000dc38
   140009d4e:	lea    r8,[rip+0x762f]        # 0x140011384
   140009d55:	lea    rdx,[rsp+0x60]
   140009d5a:	lea    rcx,[rip+0x16987]        # 0x1400206e8
   140009d61:	xor    r9d,r9d
   140009d64:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009d6c:	call   QWORD PTR [rip+0x3a9e]        # 0x14000d810
   140009d72:	mov    rcx,rsi
   140009d75:	call   QWORD PTR [rip+0x3ed5]        # 0x14000dc50
   140009d7b:	lea    rdx,[rsp+0x60]
   140009d80:	mov    rcx,rax
   140009d83:	call   QWORD PTR [rip+0x3ebf]        # 0x14000dc48
   140009d89:	lea    rcx,[rsp+0x60]
   140009d8e:	mov    rdi,rax
   140009d91:	call   QWORD PTR [rip+0x3931]        # 0x14000d6c8
   140009d97:	lea    r8,[rip+0x75de]        # 0x14001137c
   140009d9e:	lea    rdx,[rsp+0x70]
   140009da3:	lea    rcx,[rip+0x1693e]        # 0x1400206e8
   140009daa:	xor    r9d,r9d
   140009dad:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009db5:	call   QWORD PTR [rip+0x3a55]        # 0x14000d810
   140009dbb:	lea    rdx,[rsp+0x70]
   140009dc0:	mov    rcx,rdi
   140009dc3:	call   QWORD PTR [rip+0x3e17]        # 0x14000dbe0
   140009dc9:	lea    rcx,[rsp+0x70]
   140009dce:	mov    rbx,rax
   140009dd1:	call   QWORD PTR [rip+0x38f1]        # 0x14000d6c8
   140009dd7:	lea    edx,[r12+0x4]
   140009ddc:	mov    rcx,rbx
   140009ddf:	call   QWORD PTR [rip+0x3e53]        # 0x14000dc38
   140009de5:	lea    rax,[rip+0x7584]        # 0x140011370
   140009dec:	lea    r8,[rip+0x53ad]        # 0x14000f1a0
   140009df3:	lea    rcx,[rsp+0x78]
   140009df8:	mov    r9,rsi
   140009dfb:	mov    rdx,rbx
   140009dfe:	mov    DWORD PTR [rsp+0x28],r12d
   140009e03:	mov    QWORD PTR [rsp+0x20],rax
   140009e08:	call   QWORD PTR [rip+0x3862]        # 0x14000d670
   140009e0e:	lea    rcx,[rsp+0x78]
   140009e13:	call   QWORD PTR [rip+0x385f]        # 0x14000d678
   140009e19:	lea    r8,[rip+0x7540]        # 0x140011360
   140009e20:	lea    rdx,[rsp+0x70]
   140009e25:	lea    rcx,[rip+0x168bc]        # 0x1400206e8
   140009e2c:	xor    r9d,r9d
   140009e2f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009e37:	call   QWORD PTR [rip+0x39d3]        # 0x14000d810
   140009e3d:	lea    rdx,[rsp+0x70]
   140009e42:	mov    rcx,rdi
   140009e45:	call   QWORD PTR [rip+0x3d95]        # 0x14000dbe0
   140009e4b:	lea    rcx,[rsp+0x70]
   140009e50:	mov    rbx,rax
   140009e53:	call   QWORD PTR [rip+0x386f]        # 0x14000d6c8
   140009e59:	lea    edx,[r12+0x3]
   140009e5e:	mov    rcx,rbx
   140009e61:	call   QWORD PTR [rip+0x3dd1]        # 0x14000dc38
   140009e67:	mov    r9,QWORD PTR [rip+0x3342]        # 0x14000d1b0
   140009e6e:	lea    rax,[rip+0x74db]        # 0x140011350
   140009e75:	mov    r9,QWORD PTR [r9]
   140009e78:	lea    r8,[rip+0x5321]        # 0x14000f1a0
   140009e7f:	lea    rcx,[rsp+0x60]
   140009e84:	mov    rdx,rbx
   140009e87:	mov    DWORD PTR [rsp+0x28],r12d
   140009e8c:	mov    QWORD PTR [rsp+0x20],rax
   140009e91:	call   QWORD PTR [rip+0x37d9]        # 0x14000d670
   140009e97:	lea    rcx,[rsp+0x60]
   140009e9c:	call   QWORD PTR [rip+0x37d6]        # 0x14000d678
   140009ea2:	lea    ecx,[r12+0x30]
   140009ea7:	call   0x14000b8c2
   140009eac:	mov    rbx,rax
   140009eaf:	test   rax,rax
   140009eb2:	je     0x140009ed6
   140009eb4:	xor    edx,edx
   140009eb6:	mov    rcx,rax
   140009eb9:	call   QWORD PTR [rip+0x3d71]        # 0x14000dc30
   140009ebf:	lea    r11,[rip+0x7312]        # 0x1400111d8
   140009ec6:	lea    rax,[rip+0x72cb]        # 0x140011198
   140009ecd:	mov    QWORD PTR [rbx],r11
   140009ed0:	mov    QWORD PTR [rbx+0x10],rax
   140009ed4:	jmp    0x140009ed9
   140009ed6:	mov    rbx,r12
   140009ed9:	mov    rdx,rbx
   140009edc:	mov    rcx,rsi
   140009edf:	mov    QWORD PTR [rsi+0x30],rbx
   140009ee3:	call   QWORD PTR [rip+0x3d3f]        # 0x14000dc28
   140009ee9:	mov    ecx,0x98
   140009eee:	call   0x14000b8c2
   140009ef3:	mov    rbx,rax
   140009ef6:	test   rax,rax
   140009ef9:	je     0x140009f1b
   140009efb:	lea    rcx,[rsp+0x60]
   140009f00:	mov    ebp,0x1
   140009f05:	call   QWORD PTR [rip+0x3a65]        # 0x14000d970
   140009f0b:	xor    r8d,r8d
   140009f0e:	mov    rcx,rbx
   140009f11:	mov    rdx,rax
   140009f14:	call   0x1400018b0
   140009f19:	jmp    0x140009f1e
   140009f1b:	mov    rax,r12
   140009f1e:	mov    QWORD PTR [rsi+0x38],rax
   140009f22:	test   bpl,0x1
   140009f26:	je     0x140009f36
   140009f28:	lea    rcx,[rsp+0x60]
   140009f2d:	and    ebp,0xfffffffe
   140009f30:	call   QWORD PTR [rip+0x39f2]        # 0x14000d928
   140009f36:	mov    ecx,0x98
   140009f3b:	call   0x14000b8c2
   140009f40:	mov    rbx,rax
   140009f43:	test   rax,rax
   140009f46:	je     0x140009f67
   140009f48:	lea    rcx,[rsp+0x60]
   140009f4d:	or     ebp,0x2
   140009f50:	call   QWORD PTR [rip+0x38ea]        # 0x14000d840
   140009f56:	xor    r8d,r8d
   140009f59:	mov    rcx,rbx
   140009f5c:	mov    rdx,rax
   140009f5f:	call   0x1400018b0
   140009f64:	mov    r12,rax
   140009f67:	mov    QWORD PTR [rsi+0x40],r12
   140009f6b:	test   bpl,0x2
   140009f6f:	je     0x140009f7c
   140009f71:	lea    rcx,[rsp+0x60]
   140009f76:	call   QWORD PTR [rip+0x39ac]        # 0x14000d928
   140009f7c:	lea    r8,[rip+0x71fd]        # 0x140011180
   140009f83:	lea    rdx,[rsp+0x60]
   140009f88:	lea    rcx,[rip+0x16759]        # 0x1400206e8
   140009f8f:	xor    r9d,r9d
   140009f92:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009f9a:	call   QWORD PTR [rip+0x3870]        # 0x14000d810
   140009fa0:	mov    rdx,QWORD PTR [rsi+0x38]
   140009fa4:	mov    rcx,QWORD PTR [rsi+0x30]
   140009fa8:	lea    r8,[rsp+0x60]
   140009fad:	call   QWORD PTR [rip+0x3c3d]        # 0x14000dbf0
   140009fb3:	lea    rcx,[rsp+0x60]
   140009fb8:	call   QWORD PTR [rip+0x370a]        # 0x14000d6c8
   140009fbe:	lea    r8,[rip+0x71ab]        # 0x140011170
   140009fc5:	lea    rdx,[rsp+0x60]
   140009fca:	lea    rcx,[rip+0x16717]        # 0x1400206e8
   140009fd1:	xor    r9d,r9d
   140009fd4:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009fdc:	call   QWORD PTR [rip+0x382e]        # 0x14000d810
   140009fe2:	mov    rdx,QWORD PTR [rsi+0x40]
   140009fe6:	mov    rcx,QWORD PTR [rsi+0x30]
   140009fea:	lea    r8,[rsp+0x60]
   140009fef:	call   QWORD PTR [rip+0x3bfb]        # 0x14000dbf0
   140009ff5:	lea    rcx,[rsp+0x60]
   140009ffa:	call   QWORD PTR [rip+0x36c8]        # 0x14000d6c8
   14000a000:	mov    rcx,rsi
   14000a003:	call   0x140009ae0
   14000a008:	mov    rax,rsi
   14000a00b:	add    rsp,0x30
   14000a00f:	pop    r12
   14000a011:	pop    rdi
   14000a012:	pop    rsi
   14000a013:	pop    rbp
   14000a014:	pop    rbx
   14000a015:	ret    
   14000a016:	int3   
   14000a017:	int3   
   14000a018:	int3   
   14000a019:	int3   
   14000a01a:	int3   
   14000a01b:	int3   
   14000a01c:	int3   
   14000a01d:	int3   
   14000a01e:	int3   
   14000a01f:	int3   
   14000a020:	mov    QWORD PTR [rsp+0x8],rbx
   14000a025:	push   rdi
   14000a026:	sub    rsp,0x20
   14000a02a:	mov    ebx,edx
   14000a02c:	mov    rdi,rcx
   14000a02f:	call   QWORD PTR [rip+0x3cbb]        # 0x14000dcf0
   14000a035:	test   bl,0x1
   14000a038:	je     0x14000a042
   14000a03a:	mov    rcx,rdi
   14000a03d:	call   0x14000b8c8
   14000a042:	mov    rax,rdi
   14000a045:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a04a:	add    rsp,0x20
   14000a04e:	pop    rdi
   14000a04f:	ret    
   14000a050:	sub    rcx,0x10
   14000a054:	jmp    0x14000a0b0
   14000a059:	int3   
   14000a05a:	int3   
   14000a05b:	int3   
   14000a05c:	int3   
   14000a05d:	int3   
   14000a05e:	int3   
   14000a05f:	int3   
   14000a060:	sub    rcx,0x10
   14000a064:	jmp    0x14000a020
   14000a069:	int3   
   14000a06a:	int3   
   14000a06b:	int3   
   14000a06c:	int3   
   14000a06d:	int3   
   14000a06e:	int3   
   14000a06f:	int3   
   14000a070:	rex push rbx
   14000a072:	sub    rsp,0x20
   14000a076:	lea    rax,[rip+0x737b]        # 0x1400113f8
   14000a07d:	mov    rbx,rcx
   14000a080:	mov    QWORD PTR [rcx],rax
   14000a083:	lea    rax,[rip+0x732e]        # 0x1400113b8
   14000a08a:	mov    QWORD PTR [rcx+0x10],rax
   14000a08e:	call   0x1400099b0
   14000a093:	mov    rcx,rbx
   14000a096:	add    rsp,0x20
   14000a09a:	pop    rbx
   14000a09b:	rex.W jmp QWORD PTR [rip+0x3c56]        # 0x14000dcf8
   14000a0a2:	int3   
   14000a0a3:	int3   
   14000a0a4:	int3   
   14000a0a5:	int3   
   14000a0a6:	int3   
   14000a0a7:	int3   
   14000a0a8:	int3   
   14000a0a9:	int3   
   14000a0aa:	int3   
   14000a0ab:	int3   
   14000a0ac:	int3   
   14000a0ad:	int3   
   14000a0ae:	int3   
   14000a0af:	int3   
   14000a0b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a0b5:	push   rdi
   14000a0b6:	sub    rsp,0x20
   14000a0ba:	lea    rax,[rip+0x7337]        # 0x1400113f8
   14000a0c1:	mov    ebx,edx
   14000a0c3:	mov    rdi,rcx
   14000a0c6:	mov    QWORD PTR [rcx],rax
   14000a0c9:	lea    rax,[rip+0x72e8]        # 0x1400113b8
   14000a0d0:	mov    QWORD PTR [rcx+0x10],rax
   14000a0d4:	call   0x1400099b0
   14000a0d9:	mov    rcx,rdi
   14000a0dc:	call   QWORD PTR [rip+0x3c16]        # 0x14000dcf8
   14000a0e2:	test   bl,0x1
   14000a0e5:	je     0x14000a0ef
   14000a0e7:	mov    rcx,rdi
   14000a0ea:	call   0x14000b8c8
   14000a0ef:	mov    rax,rdi
   14000a0f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0f7:	add    rsp,0x20
   14000a0fb:	pop    rdi
   14000a0fc:	ret    
   14000a0fd:	int3   
   14000a0fe:	int3   
   14000a0ff:	int3   
   14000a100:	mov    DWORD PTR [rsp+0x8],ecx
   14000a104:	push   rdi
   14000a105:	sub    rsp,0x110
   14000a10c:	mov    r8,rdx
   14000a10f:	lea    rcx,[rsp+0x80]
   14000a117:	lea    rdx,[rsp+0x120]
   14000a11f:	mov    r9d,0x50602
   14000a125:	call   QWORD PTR [rip+0x3bf5]        # 0x14000dd20
   14000a12b:	lea    rdx,[rip+0x7476]        # 0x1400115a8
   14000a132:	lea    rcx,[rsp+0x48]
   14000a137:	mov    r8d,0x9
   14000a13d:	call   QWORD PTR [rip+0x3595]        # 0x14000d6d8
   14000a143:	mov    rcx,rax
   14000a146:	call   QWORD PTR [rip+0x304c]        # 0x14000d198
   14000a14c:	lea    rcx,[rsp+0x48]
   14000a151:	call   QWORD PTR [rip+0x3571]        # 0x14000d6c8
   14000a157:	lea    rdx,[rip+0x6f0a]        # 0x140011068
   14000a15e:	lea    rcx,[rsp+0x58]
   14000a163:	mov    r8d,0xb
   14000a169:	call   QWORD PTR [rip+0x3569]        # 0x14000d6d8
   14000a16f:	mov    rcx,rax
   14000a172:	call   QWORD PTR [rip+0x3028]        # 0x14000d1a0
   14000a178:	lea    rcx,[rsp+0x58]
   14000a17d:	call   QWORD PTR [rip+0x3545]        # 0x14000d6c8
   14000a183:	lea    rcx,[rsp+0xa0]
   14000a18b:	xor    edx,edx
   14000a18d:	call   0x140009c20
   14000a192:	or     rcx,0xffffffffffffffff
   14000a196:	lea    rdx,[rip+0x73d3]        # 0x140011570
   14000a19d:	mov    rdi,rdx
   14000a1a0:	mov    QWORD PTR [rsp+0x38],rdx
   14000a1a5:	xor    eax,eax
   14000a1a7:	repnz scas al,BYTE PTR es:[rdi]
   14000a1a9:	lea    rdx,[rsp+0x90]
   14000a1b1:	not    rcx
   14000a1b4:	dec    rcx
   14000a1b7:	mov    DWORD PTR [rsp+0x30],ecx
   14000a1bb:	lea    rcx,[rsp+0x138]
   14000a1c3:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000a1c8:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000a1d1:	call   QWORD PTR [rip+0x34b9]        # 0x14000d690
   14000a1d7:	lea    rdx,[rsp+0x138]
   14000a1df:	lea    rcx,[rsp+0x50]
   14000a1e4:	call   QWORD PTR [rip+0x37d6]        # 0x14000d9c0
   14000a1ea:	mov    rcx,rax
   14000a1ed:	call   QWORD PTR [rip+0x3b25]        # 0x14000dd18
   14000a1f3:	lea    rcx,[rsp+0x50]
   14000a1f8:	call   QWORD PTR [rip+0x3782]        # 0x14000d980
   14000a1fe:	lea    rcx,[rsp+0x138]
   14000a206:	call   QWORD PTR [rip+0x34bc]        # 0x14000d6c8
   14000a20c:	lea    rcx,[rsp+0x130]
   14000a214:	call   QWORD PTR [rip+0x2f8e]        # 0x14000d1a8
   14000a21a:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a222:	mov    eax,DWORD PTR [rcx+0xc]
   14000a225:	cmp    eax,DWORD PTR [rcx+0x8]
   14000a228:	je     0x14000a831
   14000a22e:	mov    QWORD PTR [rsp+0x128],rbx
   14000a236:	mov    QWORD PTR [rsp+0x108],rbp
   14000a23e:	mov    QWORD PTR [rsp+0xf8],r12
   14000a246:	mov    QWORD PTR [rsp+0xf0],r13
   14000a24e:	lea    r13,[rip+0x7313]        # 0x140011568
   14000a255:	mov    QWORD PTR [rsp+0x100],rsi
   14000a25d:	nop    DWORD PTR [rax]
   14000a260:	mov    eax,DWORD PTR [rcx]
   14000a262:	cmp    eax,0x1
   14000a265:	je     0x14000a333
   14000a26b:	test   eax,eax
   14000a26d:	je     0x14000a333
   14000a273:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a277:	mov    edx,DWORD PTR [rcx+0x4]
   14000a27a:	lea    rbx,[rcx+rax*8+0x10]
   14000a27f:	lea    rcx,[rsp+0x130]
   14000a287:	call   QWORD PTR [rip+0x3283]        # 0x14000d510
   14000a28d:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a295:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000a299:	mov    rsi,rax
   14000a29c:	lea    rbp,[rcx+rdx*8+0x10]
   14000a2a1:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000a2a5:	lea    rdi,[rcx+rdx*8+0x10]
   14000a2aa:	cmp    rdi,rbp
   14000a2ad:	je     0x14000a2d6
   14000a2af:	nop
   14000a2b0:	test   rdi,rdi
   14000a2b3:	je     0x14000a2c1
   14000a2b5:	mov    rdx,rbx
   14000a2b8:	mov    rcx,rdi
   14000a2bb:	call   QWORD PTR [rip+0x355f]        # 0x14000d820
   14000a2c1:	add    rdi,0x8
   14000a2c5:	add    rbx,0x8
   14000a2c9:	cmp    rdi,rbp
   14000a2cc:	jne    0x14000a2b0
   14000a2ce:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a2d6:	mov    eax,DWORD PTR [rsi]
   14000a2d8:	test   eax,eax
   14000a2da:	je     0x14000a2f6
   14000a2dc:	cmp    eax,0xffffffff
   14000a2df:	je     0x14000a333
   14000a2e1:	lock add DWORD PTR [rsi],0xffffffff
   14000a2e5:	setne  al
   14000a2e8:	test   al,al
   14000a2ea:	je     0x14000a2f6
   14000a2ec:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a2f4:	jmp    0x14000a333
   14000a2f6:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a2fa:	lea    rdi,[rsi+rax*8+0x10]
   14000a2ff:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a303:	lea    rbx,[rsi+rax*8+0x10]
   14000a308:	cmp    rbx,rdi
   14000a30b:	je     0x14000a322
   14000a30d:	nop    DWORD PTR [rax]
   14000a310:	sub    rdi,0x8
   14000a314:	mov    rcx,rdi
   14000a317:	call   QWORD PTR [rip+0x33ab]        # 0x14000d6c8
   14000a31d:	cmp    rdi,rbx
   14000a320:	jne    0x14000a310
   14000a322:	mov    rcx,rsi
   14000a325:	call   QWORD PTR [rip+0x31f5]        # 0x14000d520
   14000a32b:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a333:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a337:	lea    rdx,[rcx+rax*8+0x10]
   14000a33c:	lea    rcx,[rsp+0x20]
   14000a341:	call   QWORD PTR [rip+0x34d9]        # 0x14000d820
   14000a347:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a34f:	mov    eax,DWORD PTR [rcx]
   14000a351:	cmp    eax,0x1
   14000a354:	je     0x14000a423
   14000a35a:	test   eax,eax
   14000a35c:	je     0x14000a423
   14000a362:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a366:	mov    edx,DWORD PTR [rcx+0x4]
   14000a369:	lea    rbx,[rcx+rax*8+0x10]
   14000a36e:	lea    rcx,[rsp+0x130]
   14000a376:	call   QWORD PTR [rip+0x3194]        # 0x14000d510
   14000a37c:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a384:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000a388:	mov    rsi,rax
   14000a38b:	lea    rbp,[rcx+rdx*8+0x10]
   14000a390:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000a394:	lea    rdi,[rcx+rdx*8+0x10]
   14000a399:	cmp    rdi,rbp
   14000a39c:	je     0x14000a3c6
   14000a39e:	xchg   ax,ax
   14000a3a0:	test   rdi,rdi
   14000a3a3:	je     0x14000a3b1
   14000a3a5:	mov    rdx,rbx
   14000a3a8:	mov    rcx,rdi
   14000a3ab:	call   QWORD PTR [rip+0x346f]        # 0x14000d820
   14000a3b1:	add    rdi,0x8
   14000a3b5:	add    rbx,0x8
   14000a3b9:	cmp    rdi,rbp
   14000a3bc:	jne    0x14000a3a0
   14000a3be:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a3c6:	mov    eax,DWORD PTR [rsi]
   14000a3c8:	test   eax,eax
   14000a3ca:	je     0x14000a3e6
   14000a3cc:	cmp    eax,0xffffffff
   14000a3cf:	je     0x14000a423
   14000a3d1:	lock add DWORD PTR [rsi],0xffffffff
   14000a3d5:	setne  al
   14000a3d8:	test   al,al
   14000a3da:	je     0x14000a3e6
   14000a3dc:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a3e4:	jmp    0x14000a423
   14000a3e6:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a3ea:	lea    rdi,[rsi+rax*8+0x10]
   14000a3ef:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a3f3:	lea    rbx,[rsi+rax*8+0x10]
   14000a3f8:	cmp    rbx,rdi
   14000a3fb:	je     0x14000a412
   14000a3fd:	nop    DWORD PTR [rax]
   14000a400:	sub    rdi,0x8
   14000a404:	mov    rcx,rdi
   14000a407:	call   QWORD PTR [rip+0x32bb]        # 0x14000d6c8
   14000a40d:	cmp    rdi,rbx
   14000a410:	jne    0x14000a400
   14000a412:	mov    rcx,rsi
   14000a415:	call   QWORD PTR [rip+0x3105]        # 0x14000d520
   14000a41b:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a423:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a427:	lea    rdx,[rax*8+0x10]
   14000a42f:	mov    eax,DWORD PTR [rcx]
   14000a431:	lea    rbx,[rdx+rcx*1]
   14000a435:	mov    QWORD PTR [rsp+0x40],rbx
   14000a43a:	cmp    eax,0x1
   14000a43d:	je     0x14000a538
   14000a443:	test   eax,eax
   14000a445:	je     0x14000a538
   14000a44b:	mov    rbp,rbx
   14000a44e:	sub    rbp,rdx
   14000a451:	sub    rbp,rcx
   14000a454:	sar    rbp,0x3
   14000a458:	cmp    eax,0x1
   14000a45b:	je     0x14000a523
   14000a461:	test   eax,eax
   14000a463:	je     0x14000a523
   14000a469:	mov    edx,DWORD PTR [rcx+0x4]
   14000a46c:	lea    rcx,[rsp+0x130]
   14000a474:	call   QWORD PTR [rip+0x3096]        # 0x14000d510
   14000a47a:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a482:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000a486:	mov    rsi,rax
   14000a489:	lea    r12,[rcx+rdx*8+0x10]
   14000a48e:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000a492:	lea    rdi,[rcx+rdx*8+0x10]
   14000a497:	cmp    rdi,r12
   14000a49a:	je     0x14000a4c6
   14000a49c:	nop    DWORD PTR [rax+0x0]
   14000a4a0:	test   rdi,rdi
   14000a4a3:	je     0x14000a4b1
   14000a4a5:	mov    rdx,rbx
   14000a4a8:	mov    rcx,rdi
   14000a4ab:	call   QWORD PTR [rip+0x336f]        # 0x14000d820
   14000a4b1:	add    rdi,0x8
   14000a4b5:	add    rbx,0x8
   14000a4b9:	cmp    rdi,r12
   14000a4bc:	jne    0x14000a4a0
   14000a4be:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a4c6:	mov    eax,DWORD PTR [rsi]
   14000a4c8:	test   eax,eax
   14000a4ca:	je     0x14000a4e6
   14000a4cc:	cmp    eax,0xffffffff
   14000a4cf:	je     0x14000a523
   14000a4d1:	lock add DWORD PTR [rsi],0xffffffff
   14000a4d5:	setne  al
   14000a4d8:	test   al,al
   14000a4da:	je     0x14000a4e6
   14000a4dc:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a4e4:	jmp    0x14000a523
   14000a4e6:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a4ea:	lea    rdi,[rsi+rax*8+0x10]
   14000a4ef:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a4f3:	lea    rbx,[rsi+rax*8+0x10]
   14000a4f8:	cmp    rbx,rdi
   14000a4fb:	je     0x14000a512
   14000a4fd:	nop    DWORD PTR [rax]
   14000a500:	sub    rdi,0x8
   14000a504:	mov    rcx,rdi
   14000a507:	call   QWORD PTR [rip+0x31bb]        # 0x14000d6c8
   14000a50d:	cmp    rdi,rbx
   14000a510:	jne    0x14000a500
   14000a512:	mov    rcx,rsi
   14000a515:	call   QWORD PTR [rip+0x3005]        # 0x14000d520
   14000a51b:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a523:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a527:	lea    rax,[rcx+rax*8+0x10]
   14000a52c:	movsxd rcx,ebp
   14000a52f:	lea    rbx,[rax+rcx*8]
   14000a533:	mov    QWORD PTR [rsp+0x40],rbx
   14000a538:	mov    rcx,rbx
   14000a53b:	call   QWORD PTR [rip+0x3187]        # 0x14000d6c8
   14000a541:	lea    rcx,[rsp+0x130]
   14000a549:	mov    rdx,rbx
   14000a54c:	call   QWORD PTR [rip+0x2e16]        # 0x14000d368
   14000a552:	or     rcx,0xffffffffffffffff
   14000a556:	xor    eax,eax
   14000a558:	mov    rdi,r13
   14000a55b:	mov    QWORD PTR [rsp+0x68],r13
   14000a560:	lea    rdx,[rsp+0x70]
   14000a565:	repnz scas al,BYTE PTR es:[rdi]
   14000a567:	not    rcx
   14000a56a:	dec    rcx
   14000a56d:	mov    DWORD PTR [rsp+0x60],ecx
   14000a571:	lea    rcx,[rsp+0x20]
   14000a576:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14000a57b:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000a581:	call   QWORD PTR [rip+0x2fc1]        # 0x14000d548
   14000a587:	test   al,al
   14000a589:	je     0x14000a7ea
   14000a58f:	mov    rax,QWORD PTR [rsp+0x130]
   14000a597:	mov    ecx,DWORD PTR [rax]
   14000a599:	cmp    ecx,0x1
   14000a59c:	je     0x14000a666
   14000a5a2:	test   ecx,ecx
   14000a5a4:	je     0x14000a666
   14000a5aa:	movsxd rcx,DWORD PTR [rax+0x8]
   14000a5ae:	mov    edx,DWORD PTR [rax+0x4]
   14000a5b1:	lea    rbx,[rax+rcx*8+0x10]
   14000a5b6:	lea    rcx,[rsp+0x130]
   14000a5be:	call   QWORD PTR [rip+0x2f4c]        # 0x14000d510
   14000a5c4:	mov    rsi,rax
   14000a5c7:	mov    rax,QWORD PTR [rsp+0x130]
   14000a5cf:	movsxd rcx,DWORD PTR [rax+0xc]
   14000a5d3:	lea    rbp,[rax+rcx*8+0x10]
   14000a5d8:	movsxd rcx,DWORD PTR [rax+0x8]
   14000a5dc:	lea    rdi,[rax+rcx*8+0x10]
   14000a5e1:	cmp    rdi,rbp
   14000a5e4:	je     0x14000a60c
   14000a5e6:	test   rdi,rdi
   14000a5e9:	je     0x14000a5f7
   14000a5eb:	mov    rdx,rbx
   14000a5ee:	mov    rcx,rdi
   14000a5f1:	call   QWORD PTR [rip+0x3229]        # 0x14000d820
   14000a5f7:	add    rdi,0x8
   14000a5fb:	add    rbx,0x8
   14000a5ff:	cmp    rdi,rbp
   14000a602:	jne    0x14000a5e6
   14000a604:	mov    rax,QWORD PTR [rsp+0x130]
   14000a60c:	mov    ecx,DWORD PTR [rsi]
   14000a60e:	test   ecx,ecx
   14000a610:	je     0x14000a62c
   14000a612:	cmp    ecx,0xffffffff
   14000a615:	je     0x14000a666
   14000a617:	lock add DWORD PTR [rsi],0xffffffff
   14000a61b:	setne  al
   14000a61e:	test   al,al
   14000a620:	je     0x14000a62c
   14000a622:	mov    rax,QWORD PTR [rsp+0x130]
   14000a62a:	jmp    0x14000a666
   14000a62c:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a630:	lea    rdi,[rsi+rax*8+0x10]
   14000a635:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a639:	lea    rbx,[rsi+rax*8+0x10]
   14000a63e:	cmp    rbx,rdi
   14000a641:	je     0x14000a655
   14000a643:	sub    rdi,0x8
   14000a647:	mov    rcx,rdi
   14000a64a:	call   QWORD PTR [rip+0x3078]        # 0x14000d6c8
   14000a650:	cmp    rdi,rbx
   14000a653:	jne    0x14000a643
   14000a655:	mov    rcx,rsi
   14000a658:	call   QWORD PTR [rip+0x2ec2]        # 0x14000d520
   14000a65e:	mov    rax,QWORD PTR [rsp+0x130]
   14000a666:	movsxd rcx,DWORD PTR [rax+0x8]
   14000a66a:	lea    rdx,[rax+rcx*8+0x10]
   14000a66f:	lea    rcx,[rsp+0x28]
   14000a674:	call   QWORD PTR [rip+0x31a6]        # 0x14000d820
   14000a67a:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a682:	mov    eax,DWORD PTR [rdx]
   14000a684:	cmp    eax,0x1
   14000a687:	je     0x14000a753
   14000a68d:	test   eax,eax
   14000a68f:	je     0x14000a753
   14000a695:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a699:	lea    rcx,[rsp+0x130]
   14000a6a1:	lea    rbx,[rdx+rax*8+0x10]
   14000a6a6:	mov    edx,DWORD PTR [rdx+0x4]
   14000a6a9:	call   QWORD PTR [rip+0x2e61]        # 0x14000d510
   14000a6af:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a6b7:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000a6bb:	mov    rsi,rax
   14000a6be:	lea    rbp,[rdx+rcx*8+0x10]
   14000a6c3:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000a6c7:	lea    rdi,[rdx+rcx*8+0x10]
   14000a6cc:	cmp    rdi,rbp
   14000a6cf:	je     0x14000a6f7
   14000a6d1:	test   rdi,rdi
   14000a6d4:	je     0x14000a6e2
   14000a6d6:	mov    rdx,rbx
   14000a6d9:	mov    rcx,rdi
   14000a6dc:	call   QWORD PTR [rip+0x313e]        # 0x14000d820
   14000a6e2:	add    rdi,0x8
   14000a6e6:	add    rbx,0x8
   14000a6ea:	cmp    rdi,rbp
   14000a6ed:	jne    0x14000a6d1
   14000a6ef:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a6f7:	mov    eax,DWORD PTR [rsi]
   14000a6f9:	test   eax,eax
   14000a6fb:	je     0x14000a717
   14000a6fd:	cmp    eax,0xffffffff
   14000a700:	je     0x14000a753
   14000a702:	lock add DWORD PTR [rsi],0xffffffff
   14000a706:	setne  al
   14000a709:	test   al,al
   14000a70b:	je     0x14000a717
   14000a70d:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a715:	jmp    0x14000a753
   14000a717:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a71b:	lea    rdi,[rsi+rax*8+0x10]
   14000a720:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a724:	lea    rbx,[rsi+rax*8+0x10]
   14000a729:	cmp    rbx,rdi
   14000a72c:	je     0x14000a742
   14000a72e:	xchg   ax,ax
   14000a730:	sub    rdi,0x8
   14000a734:	mov    rcx,rdi
   14000a737:	call   QWORD PTR [rip+0x2f8b]        # 0x14000d6c8
   14000a73d:	cmp    rdi,rbx
   14000a740:	jne    0x14000a730
   14000a742:	mov    rcx,rsi
   14000a745:	call   QWORD PTR [rip+0x2dd5]        # 0x14000d520
   14000a74b:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a753:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a757:	lea    rcx,[rax*8+0x10]
   14000a75f:	mov    eax,DWORD PTR [rdx]
   14000a761:	lea    rdi,[rcx+rdx*1]
   14000a765:	mov    QWORD PTR [rsp+0x30],rdi
   14000a76a:	cmp    eax,0x1
   14000a76d:	je     0x14000a7b3
   14000a76f:	test   eax,eax
   14000a771:	je     0x14000a7b3
   14000a773:	sub    rdi,rcx
   14000a776:	sub    rdi,rdx
   14000a779:	sar    rdi,0x3
   14000a77d:	cmp    eax,0x1
   14000a780:	je     0x14000a79e
   14000a782:	test   eax,eax
   14000a784:	je     0x14000a79e
   14000a786:	mov    edx,DWORD PTR [rdx+0x4]
   14000a789:	lea    rcx,[rsp+0x130]
   14000a791:	call   0x140006440
   14000a796:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a79e:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a7a2:	movsxd rcx,edi
   14000a7a5:	lea    rax,[rdx+rax*8+0x10]
   14000a7aa:	lea    rdi,[rax+rcx*8]
   14000a7ae:	mov    QWORD PTR [rsp+0x30],rdi
   14000a7b3:	mov    rcx,rdi
   14000a7b6:	call   QWORD PTR [rip+0x2f0c]        # 0x14000d6c8
   14000a7bc:	lea    rcx,[rsp+0x130]
   14000a7c4:	mov    rdx,rdi
   14000a7c7:	call   QWORD PTR [rip+0x2b9b]        # 0x14000d368
   14000a7cd:	lea    rdx,[rsp+0x28]
   14000a7d2:	lea    rcx,[rsp+0xa0]
   14000a7da:	call   0x140009730
   14000a7df:	lea    rcx,[rsp+0x28]
   14000a7e4:	call   QWORD PTR [rip+0x2ede]        # 0x14000d6c8
   14000a7ea:	lea    rcx,[rsp+0x20]
   14000a7ef:	call   QWORD PTR [rip+0x2ed3]        # 0x14000d6c8
   14000a7f5:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a7fd:	mov    eax,DWORD PTR [rcx+0xc]
   14000a800:	cmp    eax,DWORD PTR [rcx+0x8]
   14000a803:	jne    0x14000a260
   14000a809:	mov    r13,QWORD PTR [rsp+0xf0]
   14000a811:	mov    r12,QWORD PTR [rsp+0xf8]
   14000a819:	mov    rsi,QWORD PTR [rsp+0x100]
   14000a821:	mov    rbp,QWORD PTR [rsp+0x108]
   14000a829:	mov    rbx,QWORD PTR [rsp+0x128]
   14000a831:	lea    rcx,[rsp+0xa0]
   14000a839:	call   QWORD PTR [rip+0x34d1]        # 0x14000dd10
   14000a83f:	call   QWORD PTR [rip+0x34c3]        # 0x14000dd08
   14000a845:	lea    rcx,[rsp+0x130]
   14000a84d:	mov    edi,eax
   14000a84f:	call   0x140002970
   14000a854:	lea    rcx,[rsp+0xa0]
   14000a85c:	call   0x14000a070
   14000a861:	lea    rcx,[rsp+0x80]
   14000a869:	call   QWORD PTR [rip+0x3491]        # 0x14000dd00
   14000a86f:	mov    eax,edi
   14000a871:	add    rsp,0x110
   14000a878:	pop    rdi
   14000a879:	ret    
   14000a87a:	int3   
   14000a87b:	int3   
   14000a87c:	int3   
   14000a87d:	int3   
   14000a87e:	int3   
   14000a87f:	int3   
   14000a880:	sub    rsp,0x28
   14000a884:	mov    r10,r9
   14000a887:	test   edx,edx
   14000a889:	jne    0x14000a96f
   14000a88f:	cmp    r8d,0xe
   14000a893:	ja     0x14000a96f
   14000a899:	movsxd rax,r8d
   14000a89c:	lea    r8,[rip+0xffffffffffff575d]        # 0x140000000
   14000a8a3:	mov    edx,DWORD PTR [r8+rax*4+0xa974]
   14000a8ab:	add    rdx,r8
   14000a8ae:	jmp    rdx
   14000a8b0:	add    rsp,0x28
   14000a8b4:	jmp    0x140002f70
   14000a8b9:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8bd:	add    rsp,0x28
   14000a8c1:	jmp    0x1400015f0
   14000a8c6:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8ca:	add    rsp,0x28
   14000a8ce:	jmp    0x140005210
   14000a8d3:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8d7:	add    rsp,0x28
   14000a8db:	jmp    0x140001420
   14000a8e0:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8e4:	add    rsp,0x28
   14000a8e8:	jmp    0x1400044f0
   14000a8ed:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8f1:	add    rsp,0x28
   14000a8f5:	jmp    0x140003c40
   14000a8fa:	mov    rdx,QWORD PTR [r9+0x8]
   14000a8fe:	add    rsp,0x28
   14000a902:	jmp    0x140003ee0
   14000a907:	mov    rdx,QWORD PTR [r9+0x8]
   14000a90b:	add    rsp,0x28
   14000a90f:	jmp    0x140003230
   14000a914:	add    rsp,0x28
   14000a918:	jmp    0x140002720
   14000a91d:	mov    rdx,QWORD PTR [r9+0x8]
   14000a921:	add    rsp,0x28
   14000a925:	jmp    0x140001720
   14000a92a:	mov    rdx,QWORD PTR [r9+0x8]
   14000a92e:	add    rsp,0x28
   14000a932:	jmp    0x140005c30
   14000a937:	mov    r9,QWORD PTR [r9+0x18]
   14000a93b:	mov    r8,QWORD PTR [r10+0x10]
   14000a93f:	mov    rdx,QWORD PTR [r10+0x8]
   14000a943:	add    rsp,0x28
   14000a947:	jmp    0x140005ca0
   14000a94c:	mov    rdx,QWORD PTR [r9+0x8]
   14000a950:	add    rsp,0x28
   14000a954:	jmp    0x1400057c0
   14000a959:	mov    rdx,QWORD PTR [r9+0x8]
   14000a95d:	add    rsp,0x28
   14000a961:	jmp    0x1400012e0
   14000a966:	mov    rdx,QWORD PTR [r9+0x8]
   14000a96a:	call   0x140002780
   14000a96f:	add    rsp,0x28
   14000a973:	ret    
   14000a974:	mov    al,0xa8
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	mov    ecx,0xc60000a8
   14000a97d:	test   al,0x0
   14000a97f:	add    bl,dl
   14000a981:	test   al,0x0
   14000a983:	add    al,ah
   14000a985:	test   al,0x0
   14000a987:	add    ch,ch
   14000a989:	test   al,0x0
   14000a98b:	add    dl,bh
   14000a98d:	test   al,0x0
   14000a98f:	add    BYTE PTR [rdi],al
   14000a991:	test   eax,0xa9140000
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	sbb    eax,0x2a0000a9
   14000a99d:	test   eax,0xa9370000
   14000a9a2:	add    BYTE PTR [rax],al
   14000a9a4:	rex.WR test rax,0xffffffffa9590000
   14000a9aa:	add    BYTE PTR [rax],al
   14000a9ac:	test   ax,0x0
   14000a9b0:	mov    r10,rdx
   14000a9b3:	mov    r9,rcx
   14000a9b6:	test   rdx,rdx
   14000a9b9:	jne    0x14000a9be
   14000a9bb:	xor    eax,eax
   14000a9bd:	ret    
   14000a9be:	lea    r8,[rip+0x7adb]        # 0x1400124a0
   14000a9c5:	mov    rax,rdx
   14000a9c8:	sub    r8,rdx
   14000a9cb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a9d0:	movzx  edx,BYTE PTR [rax]
   14000a9d3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000a9d8:	sub    edx,ecx
   14000a9da:	jne    0x14000a9e3
   14000a9dc:	inc    rax
   14000a9df:	test   ecx,ecx
   14000a9e1:	jne    0x14000a9d0
   14000a9e3:	test   edx,edx
   14000a9e5:	jne    0x14000a9eb
   14000a9e7:	mov    rax,r9
   14000a9ea:	ret    
   14000a9eb:	mov    rdx,r10
   14000a9ee:	mov    rcx,r9
   14000a9f1:	rex.W jmp QWORD PTR [rip+0x35f0]        # 0x14000dfe8
   14000a9f8:	int3   
   14000a9f9:	int3   
   14000a9fa:	int3   
   14000a9fb:	int3   
   14000a9fc:	int3   
   14000a9fd:	int3   
   14000a9fe:	int3   
   14000a9ff:	int3   
   14000aa00:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa05:	mov    QWORD PTR [rsp+0x10],rbp
   14000aa0a:	mov    QWORD PTR [rsp+0x18],rsi
   14000aa0f:	push   rdi
   14000aa10:	sub    rsp,0x20
   14000aa14:	mov    rsi,r9
   14000aa17:	mov    edi,edx
   14000aa19:	mov    rbp,rcx
   14000aa1c:	call   QWORD PTR [rip+0x35be]        # 0x14000dfe0
   14000aa22:	mov    ebx,eax
   14000aa24:	test   eax,eax
   14000aa26:	js     0x14000aa5b
   14000aa28:	test   edi,edi
   14000aa2a:	jne    0x14000aa43
   14000aa2c:	cmp    eax,0xf
   14000aa2f:	jge    0x14000aa56
   14000aa31:	mov    r9,rsi
   14000aa34:	mov    r8d,eax
   14000aa37:	xor    edx,edx
   14000aa39:	mov    rcx,rbp
   14000aa3c:	call   0x14000a880
   14000aa41:	jmp    0x14000aa56
   14000aa43:	cmp    edi,0xc
   14000aa46:	jne    0x14000aa59
   14000aa48:	cmp    eax,0xf
   14000aa4b:	jge    0x14000aa56
   14000aa4d:	mov    rax,QWORD PTR [rsi]
   14000aa50:	mov    DWORD PTR [rax],0xffffffff
   14000aa56:	sub    ebx,0xf
   14000aa59:	mov    eax,ebx
   14000aa5b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aa60:	mov    rbp,QWORD PTR [rsp+0x38]
   14000aa65:	mov    rsi,QWORD PTR [rsp+0x40]
   14000aa6a:	add    rsp,0x20
   14000aa6e:	pop    rdi
   14000aa6f:	ret    
   14000aa70:	mov    rcx,QWORD PTR [rcx+0x8]
   14000aa74:	cmp    QWORD PTR [rcx+0x28],0x0
   14000aa79:	je     0x14000aa82
   14000aa7b:	rex.W jmp QWORD PTR [rip+0x26fe]        # 0x14000d180
   14000aa82:	lea    rax,[rip+0x15b47]        # 0x1400205d0
   14000aa89:	ret    
   14000aa8a:	int3   
   14000aa8b:	int3   
   14000aa8c:	int3   
   14000aa8d:	int3   
   14000aa8e:	int3   
   14000aa8f:	int3   
   14000aa90:	mov    r10,rdx
   14000aa93:	mov    r9,rcx
   14000aa96:	test   rdx,rdx
   14000aa99:	jne    0x14000aa9e
   14000aa9b:	xor    eax,eax
   14000aa9d:	ret    
   14000aa9e:	lea    r8,[rip+0x7dbb]        # 0x140012860
   14000aaa5:	mov    rax,rdx
   14000aaa8:	sub    r8,rdx
   14000aaab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000aab0:	movzx  edx,BYTE PTR [rax]
   14000aab3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000aab8:	sub    edx,ecx
   14000aaba:	jne    0x14000aac3
   14000aabc:	inc    rax
   14000aabf:	test   ecx,ecx
   14000aac1:	jne    0x14000aab0
   14000aac3:	test   edx,edx
   14000aac5:	jne    0x14000aacb
   14000aac7:	mov    rax,r9
   14000aaca:	ret    
   14000aacb:	mov    rdx,r10
   14000aace:	mov    rcx,r9
   14000aad1:	rex.W jmp QWORD PTR [rip+0x26a0]        # 0x14000d178
   14000aad8:	int3   
   14000aad9:	int3   
   14000aada:	int3   
   14000aadb:	int3   
   14000aadc:	int3   
   14000aadd:	int3   
   14000aade:	int3   
   14000aadf:	int3   
   14000aae0:	sub    rsp,0x38
   14000aae4:	mov    QWORD PTR [rsp+0x28],rdx
   14000aae9:	lea    r9,[rsp+0x20]
   14000aaee:	lea    rdx,[rip+0x15b13]        # 0x140020608
   14000aaf5:	xor    r8d,r8d
   14000aaf8:	mov    QWORD PTR [rsp+0x20],0x0
   14000ab01:	call   QWORD PTR [rip+0x2669]        # 0x14000d170
   14000ab07:	add    rsp,0x38
   14000ab0b:	ret    
   14000ab0c:	int3   
   14000ab0d:	int3   
   14000ab0e:	int3   
   14000ab0f:	int3   
   14000ab10:	sub    rsp,0x38
   14000ab14:	test   edx,edx
   14000ab16:	jne    0x14000ab46
   14000ab18:	test   r8d,r8d
   14000ab1b:	jne    0x14000ab64
   14000ab1d:	mov    rax,QWORD PTR [r9+0x8]
   14000ab21:	lea    rdx,[rip+0x15ae0]        # 0x140020608
   14000ab28:	lea    r9,[rsp+0x20]
   14000ab2d:	mov    QWORD PTR [rsp+0x28],rax
   14000ab32:	mov    QWORD PTR [rsp+0x20],0x0
   14000ab3b:	call   QWORD PTR [rip+0x262f]        # 0x14000d170
   14000ab41:	add    rsp,0x38
   14000ab45:	ret    
   14000ab46:	cmp    edx,0xa
   14000ab49:	jne    0x14000ab64
   14000ab4b:	mov    rax,QWORD PTR [r9+0x8]
   14000ab4f:	lea    rcx,[rip+0xffffffffffffff8a]        # 0x14000aae0
   14000ab56:	cmp    QWORD PTR [rax],rcx
   14000ab59:	jne    0x14000ab64
   14000ab5b:	mov    rax,QWORD PTR [r9]
   14000ab5e:	mov    DWORD PTR [rax],0x0
   14000ab64:	add    rsp,0x38
   14000ab68:	ret    
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ab74:	cmp    QWORD PTR [rcx+0x28],0x0
   14000ab79:	je     0x14000ab82
   14000ab7b:	rex.W jmp QWORD PTR [rip+0x25fe]        # 0x14000d180
   14000ab82:	lea    rax,[rip+0x15a7f]        # 0x140020608
   14000ab89:	ret    
   14000ab8a:	int3   
   14000ab8b:	int3   
   14000ab8c:	int3   
   14000ab8d:	int3   
   14000ab8e:	int3   
   14000ab8f:	int3   
   14000ab90:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab95:	mov    QWORD PTR [rsp+0x10],rbp
   14000ab9a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ab9f:	push   rdi
   14000aba0:	sub    rsp,0x20
   14000aba4:	mov    rsi,r9
   14000aba7:	mov    edi,edx
   14000aba9:	mov    rbp,rcx
   14000abac:	call   QWORD PTR [rip+0x25b6]        # 0x14000d168
   14000abb2:	mov    ebx,eax
   14000abb4:	test   eax,eax
   14000abb6:	js     0x14000abea
   14000abb8:	test   edi,edi
   14000abba:	jne    0x14000abd3
   14000abbc:	cmp    eax,0x1
   14000abbf:	jge    0x14000abe6
   14000abc1:	mov    r9,rsi
   14000abc4:	mov    r8d,eax
   14000abc7:	xor    edx,edx
   14000abc9:	mov    rcx,rbp
   14000abcc:	call   0x14000ab10
   14000abd1:	jmp    0x14000abe6
   14000abd3:	cmp    edi,0xc
   14000abd6:	jne    0x14000abe8
   14000abd8:	cmp    eax,0x1
   14000abdb:	jge    0x14000abe6
   14000abdd:	mov    rax,QWORD PTR [rsi]
   14000abe0:	mov    DWORD PTR [rax],0xffffffff
   14000abe6:	dec    ebx
   14000abe8:	mov    eax,ebx
   14000abea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000abef:	mov    rbp,QWORD PTR [rsp+0x38]
   14000abf4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000abf9:	add    rsp,0x20
   14000abfd:	pop    rdi
   14000abfe:	ret    
   14000abff:	int3   
   14000ac00:	mov    r10,rdx
   14000ac03:	mov    r9,rcx
   14000ac06:	test   rdx,rdx
   14000ac09:	jne    0x14000ac0e
   14000ac0b:	xor    eax,eax
   14000ac0d:	ret    
   14000ac0e:	lea    r8,[rip+0x7ce3]        # 0x1400128f8
   14000ac15:	mov    rax,rdx
   14000ac18:	sub    r8,rdx
   14000ac1b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ac20:	movzx  edx,BYTE PTR [rax]
   14000ac23:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000ac28:	sub    edx,ecx
   14000ac2a:	jne    0x14000ac33
   14000ac2c:	inc    rax
   14000ac2f:	test   ecx,ecx
   14000ac31:	jne    0x14000ac20
   14000ac33:	test   edx,edx
   14000ac35:	jne    0x14000ac3b
   14000ac37:	mov    rax,r9
   14000ac3a:	ret    
   14000ac3b:	mov    rdx,r10
   14000ac3e:	mov    rcx,r9
   14000ac41:	rex.W jmp QWORD PTR [rip+0x2510]        # 0x14000d158
   14000ac48:	int3   
   14000ac49:	int3   
   14000ac4a:	int3   
   14000ac4b:	int3   
   14000ac4c:	int3   
   14000ac4d:	int3   
   14000ac4e:	int3   
   14000ac4f:	int3   
   14000ac50:	rex.W jmp QWORD PTR [rip+0x24f9]        # 0x14000d150
   14000ac57:	int3   
   14000ac58:	int3   
   14000ac59:	int3   
   14000ac5a:	int3   
   14000ac5b:	int3   
   14000ac5c:	int3   
   14000ac5d:	int3   
   14000ac5e:	int3   
   14000ac5f:	int3   
   14000ac60:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ac64:	cmp    QWORD PTR [rcx+0x28],0x0
   14000ac69:	je     0x14000ac72
   14000ac6b:	rex.W jmp QWORD PTR [rip+0x250e]        # 0x14000d180
   14000ac72:	lea    rax,[rip+0x159c7]        # 0x140020640
   14000ac79:	ret    
   14000ac7a:	int3   
   14000ac7b:	int3   
   14000ac7c:	int3   
   14000ac7d:	int3   
   14000ac7e:	int3   
   14000ac7f:	int3   
   14000ac80:	ret    0x0
   14000ac83:	int3   
   14000ac84:	int3   
   14000ac85:	int3   
   14000ac86:	int3   
   14000ac87:	int3   
   14000ac88:	int3   
   14000ac89:	int3   
   14000ac8a:	int3   
   14000ac8b:	int3   
   14000ac8c:	int3   
   14000ac8d:	int3   
   14000ac8e:	int3   
   14000ac8f:	int3   
   14000ac90:	mov    r10,rdx
   14000ac93:	mov    r9,rcx
   14000ac96:	test   rdx,rdx
   14000ac99:	jne    0x14000ac9e
   14000ac9b:	xor    eax,eax
   14000ac9d:	ret    
   14000ac9e:	lea    r8,[rip+0x7cc3]        # 0x140012968
   14000aca5:	mov    rax,rdx
   14000aca8:	sub    r8,rdx
   14000acab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000acb0:	movzx  edx,BYTE PTR [rax]
   14000acb3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000acb8:	sub    edx,ecx
   14000acba:	jne    0x14000acc3
   14000acbc:	inc    rax
   14000acbf:	test   ecx,ecx
   14000acc1:	jne    0x14000acb0
   14000acc3:	test   edx,edx
   14000acc5:	jne    0x14000accb
   14000acc7:	mov    rax,r9
   14000acca:	ret    
   14000accb:	mov    rdx,r10
   14000acce:	mov    rcx,r9
   14000acd1:	rex.W jmp QWORD PTR [rip+0x3058]        # 0x14000dd30
   14000acd8:	int3   
   14000acd9:	int3   
   14000acda:	int3   
   14000acdb:	int3   
   14000acdc:	int3   
   14000acdd:	int3   
   14000acde:	int3   
   14000acdf:	int3   
   14000ace0:	rex.W jmp QWORD PTR [rip+0x3051]        # 0x14000dd38
   14000ace7:	int3   
   14000ace8:	int3   
   14000ace9:	int3   
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	int3   
   14000aced:	int3   
   14000acee:	int3   
   14000acef:	int3   
   14000acf0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000acf4:	cmp    QWORD PTR [rcx+0x28],0x0
   14000acf9:	je     0x14000ad02
   14000acfb:	rex.W jmp QWORD PTR [rip+0x247e]        # 0x14000d180
   14000ad02:	lea    rax,[rip+0x1596f]        # 0x140020678
   14000ad09:	ret    
   14000ad0a:	int3   
   14000ad0b:	int3   
   14000ad0c:	int3   
   14000ad0d:	int3   
   14000ad0e:	int3   
   14000ad0f:	int3   
   14000ad10:	mov    r10,rdx
   14000ad13:	mov    r9,rcx
   14000ad16:	test   rdx,rdx
   14000ad19:	jne    0x14000ad1e
   14000ad1b:	xor    eax,eax
   14000ad1d:	ret    
   14000ad1e:	lea    r8,[rip+0x7cab]        # 0x1400129d0
   14000ad25:	mov    rax,rdx
   14000ad28:	sub    r8,rdx
   14000ad2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ad30:	movzx  edx,BYTE PTR [rax]
   14000ad33:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000ad38:	sub    edx,ecx
   14000ad3a:	jne    0x14000ad43
   14000ad3c:	inc    rax
   14000ad3f:	test   ecx,ecx
   14000ad41:	jne    0x14000ad30
   14000ad43:	test   edx,edx
   14000ad45:	jne    0x14000ad4b
   14000ad47:	mov    rax,r9
   14000ad4a:	ret    
   14000ad4b:	mov    rdx,r10
   14000ad4e:	mov    rcx,r9
   14000ad51:	rex.W jmp QWORD PTR [rip+0x2ff0]        # 0x14000dd48
   14000ad58:	int3   
   14000ad59:	int3   
   14000ad5a:	int3   
   14000ad5b:	int3   
   14000ad5c:	int3   
   14000ad5d:	int3   
   14000ad5e:	int3   
   14000ad5f:	int3   
   14000ad60:	rex.W jmp QWORD PTR [rip+0x2fe9]        # 0x14000dd50
   14000ad67:	int3   
   14000ad68:	int3   
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ad74:	cmp    QWORD PTR [rcx+0x28],0x0
   14000ad79:	je     0x14000ad82
   14000ad7b:	rex.W jmp QWORD PTR [rip+0x23fe]        # 0x14000d180
   14000ad82:	lea    rax,[rip+0x15927]        # 0x1400206b0
   14000ad89:	ret    
   14000ad8a:	int3   
   14000ad8b:	int3   
   14000ad8c:	int3   
   14000ad8d:	int3   
   14000ad8e:	int3   
   14000ad8f:	int3   
   14000ad90:	sub    rsp,0x28
   14000ad94:	test   edx,edx
   14000ad96:	jne    0x14000ada2
   14000ad98:	test   r8d,r8d
   14000ad9b:	jne    0x14000ada2
   14000ad9d:	call   0x140009820
   14000ada2:	add    rsp,0x28
   14000ada6:	ret    
   14000ada7:	int3   
   14000ada8:	int3   
   14000ada9:	int3   
   14000adaa:	int3   
   14000adab:	int3   
   14000adac:	int3   
   14000adad:	int3   
   14000adae:	int3   
   14000adaf:	int3   
   14000adb0:	mov    r10,rdx
   14000adb3:	mov    r9,rcx
   14000adb6:	test   rdx,rdx
   14000adb9:	jne    0x14000adbe
   14000adbb:	xor    eax,eax
   14000adbd:	ret    
   14000adbe:	lea    r8,[rip+0x7ca3]        # 0x140012a68
   14000adc5:	mov    rax,rdx
   14000adc8:	sub    r8,rdx
   14000adcb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000add0:	movzx  edx,BYTE PTR [rax]
   14000add3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000add8:	sub    edx,ecx
   14000adda:	jne    0x14000ade3
   14000addc:	inc    rax
   14000addf:	test   ecx,ecx
   14000ade1:	jne    0x14000add0
   14000ade3:	test   edx,edx
   14000ade5:	jne    0x14000adeb
   14000ade7:	mov    rax,r9
   14000adea:	ret    
   14000adeb:	mov    rdx,r10
   14000adee:	mov    rcx,r9
   14000adf1:	rex.W jmp QWORD PTR [rip+0x2f68]        # 0x14000dd60
   14000adf8:	int3   
   14000adf9:	int3   
   14000adfa:	int3   
   14000adfb:	int3   
   14000adfc:	int3   
   14000adfd:	int3   
   14000adfe:	int3   
   14000adff:	int3   
   14000ae00:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae05:	mov    QWORD PTR [rsp+0x10],rbp
   14000ae0a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ae0f:	push   rdi
   14000ae10:	sub    rsp,0x20
   14000ae14:	mov    rbp,r9
   14000ae17:	mov    edi,edx
   14000ae19:	mov    rsi,rcx
   14000ae1c:	call   QWORD PTR [rip+0x2f46]        # 0x14000dd68
   14000ae22:	mov    ebx,eax
   14000ae24:	test   eax,eax
   14000ae26:	js     0x14000ae57
   14000ae28:	test   edi,edi
   14000ae2a:	jne    0x14000ae3f
   14000ae2c:	cmp    eax,0x1
   14000ae2f:	jge    0x14000ae53
   14000ae31:	test   eax,eax
   14000ae33:	jne    0x14000ae53
   14000ae35:	mov    rcx,rsi
   14000ae38:	call   0x140009820
   14000ae3d:	jmp    0x14000ae53
   14000ae3f:	cmp    edi,0xc
   14000ae42:	jne    0x14000ae55
   14000ae44:	cmp    eax,0x1
   14000ae47:	jge    0x14000ae53
   14000ae49:	mov    rax,QWORD PTR [rbp+0x0]
   14000ae4d:	mov    DWORD PTR [rax],0xffffffff
   14000ae53:	dec    ebx
   14000ae55:	mov    eax,ebx
   14000ae57:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae5c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ae61:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ae66:	add    rsp,0x20
   14000ae6a:	pop    rdi
   14000ae6b:	ret    
   14000ae6c:	int3   
   14000ae6d:	int3   
   14000ae6e:	int3   
   14000ae6f:	int3   
   14000ae70:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ae74:	cmp    QWORD PTR [rcx+0x28],0x0
   14000ae79:	je     0x14000ae82
   14000ae7b:	rex.W jmp QWORD PTR [rip+0x22fe]        # 0x14000d180
   14000ae82:	lea    rax,[rip+0x1585f]        # 0x1400206e8
   14000ae89:	ret    
   14000ae8a:	jmp    QWORD PTR [rip+0x30d8]        # 0x14000df68
   14000ae90:	jmp    QWORD PTR [rip+0x30ca]        # 0x14000df60
   14000ae96:	jmp    QWORD PTR [rip+0x30bc]        # 0x14000df58
   14000ae9c:	jmp    QWORD PTR [rip+0x30ae]        # 0x14000df50
   14000aea2:	jmp    QWORD PTR [rip+0x30a0]        # 0x14000df48
   14000aea8:	jmp    QWORD PTR [rip+0x3092]        # 0x14000df40
   14000aeae:	jmp    QWORD PTR [rip+0x3084]        # 0x14000df38
   14000aeb4:	jmp    QWORD PTR [rip+0x3076]        # 0x14000df30
   14000aeba:	jmp    QWORD PTR [rip+0x3068]        # 0x14000df28
   14000aec0:	jmp    QWORD PTR [rip+0x305a]        # 0x14000df20
   14000aec6:	jmp    QWORD PTR [rip+0x304c]        # 0x14000df18
   14000aecc:	jmp    QWORD PTR [rip+0x303e]        # 0x14000df10
   14000aed2:	jmp    QWORD PTR [rip+0x3030]        # 0x14000df08
   14000aed8:	jmp    QWORD PTR [rip+0x301a]        # 0x14000def8
   14000aede:	jmp    QWORD PTR [rip+0x377c]        # 0x14000e660
   14000aee4:	jmp    QWORD PTR [rip+0x3766]        # 0x14000e650
   14000aeea:	jmp    QWORD PTR [rip+0x3758]        # 0x14000e648
   14000aef0:	jmp    QWORD PTR [rip+0x374a]        # 0x14000e640
   14000aef6:	jmp    QWORD PTR [rip+0x373c]        # 0x14000e638
   14000aefc:	jmp    QWORD PTR [rip+0x372e]        # 0x14000e630
   14000af02:	jmp    QWORD PTR [rip+0x3720]        # 0x14000e628
   14000af08:	jmp    QWORD PTR [rip+0x3712]        # 0x14000e620
   14000af0e:	jmp    QWORD PTR [rip+0x3704]        # 0x14000e618
   14000af14:	jmp    QWORD PTR [rip+0x36f6]        # 0x14000e610
   14000af1a:	jmp    QWORD PTR [rip+0x36e8]        # 0x14000e608
   14000af20:	jmp    QWORD PTR [rip+0x36da]        # 0x14000e600
   14000af26:	jmp    QWORD PTR [rip+0x36cc]        # 0x14000e5f8
   14000af2c:	jmp    QWORD PTR [rip+0x36be]        # 0x14000e5f0
   14000af32:	jmp    QWORD PTR [rip+0x36b0]        # 0x14000e5e8
   14000af38:	jmp    QWORD PTR [rip+0x36a2]        # 0x14000e5e0
   14000af3e:	jmp    QWORD PTR [rip+0x3694]        # 0x14000e5d8
   14000af44:	jmp    QWORD PTR [rip+0x3686]        # 0x14000e5d0
   14000af4a:	jmp    QWORD PTR [rip+0x3678]        # 0x14000e5c8
   14000af50:	jmp    QWORD PTR [rip+0x366a]        # 0x14000e5c0
   14000af56:	jmp    QWORD PTR [rip+0x365c]        # 0x14000e5b8
   14000af5c:	jmp    QWORD PTR [rip+0x364e]        # 0x14000e5b0
   14000af62:	jmp    QWORD PTR [rip+0x3640]        # 0x14000e5a8
   14000af68:	jmp    QWORD PTR [rip+0x3632]        # 0x14000e5a0
   14000af6e:	jmp    QWORD PTR [rip+0x3624]        # 0x14000e598
   14000af74:	jmp    QWORD PTR [rip+0x3616]        # 0x14000e590
   14000af7a:	jmp    QWORD PTR [rip+0x3608]        # 0x14000e588
   14000af80:	jmp    QWORD PTR [rip+0x35fa]        # 0x14000e580
   14000af86:	jmp    QWORD PTR [rip+0x35ec]        # 0x14000e578
   14000af8c:	jmp    QWORD PTR [rip+0x35de]        # 0x14000e570
   14000af92:	jmp    QWORD PTR [rip+0x35d0]        # 0x14000e568
   14000af98:	jmp    QWORD PTR [rip+0x35c2]        # 0x14000e560
   14000af9e:	jmp    QWORD PTR [rip+0x35b4]        # 0x14000e558
   14000afa4:	jmp    QWORD PTR [rip+0x35a6]        # 0x14000e550
   14000afaa:	jmp    QWORD PTR [rip+0x3598]        # 0x14000e548
   14000afb0:	jmp    QWORD PTR [rip+0x358a]        # 0x14000e540
   14000afb6:	jmp    QWORD PTR [rip+0x357c]        # 0x14000e538
   14000afbc:	jmp    QWORD PTR [rip+0x356e]        # 0x14000e530
   14000afc2:	jmp    QWORD PTR [rip+0x3560]        # 0x14000e528
   14000afc8:	jmp    QWORD PTR [rip+0x3552]        # 0x14000e520
   14000afce:	jmp    QWORD PTR [rip+0x3544]        # 0x14000e518
   14000afd4:	jmp    QWORD PTR [rip+0x3536]        # 0x14000e510
   14000afda:	jmp    QWORD PTR [rip+0x3528]        # 0x14000e508
   14000afe0:	jmp    QWORD PTR [rip+0x351a]        # 0x14000e500
   14000afe6:	jmp    QWORD PTR [rip+0x350c]        # 0x14000e4f8
   14000afec:	jmp    QWORD PTR [rip+0x34fe]        # 0x14000e4f0
   14000aff2:	jmp    QWORD PTR [rip+0x34f0]        # 0x14000e4e8
   14000aff8:	jmp    QWORD PTR [rip+0x34e2]        # 0x14000e4e0
   14000affe:	jmp    QWORD PTR [rip+0x34d4]        # 0x14000e4d8
   14000b004:	jmp    QWORD PTR [rip+0x34c6]        # 0x14000e4d0
   14000b00a:	jmp    QWORD PTR [rip+0x34b8]        # 0x14000e4c8
   14000b010:	jmp    QWORD PTR [rip+0x34aa]        # 0x14000e4c0
   14000b016:	jmp    QWORD PTR [rip+0x349c]        # 0x14000e4b8
   14000b01c:	jmp    QWORD PTR [rip+0x348e]        # 0x14000e4b0
   14000b022:	jmp    QWORD PTR [rip+0x3480]        # 0x14000e4a8
   14000b028:	jmp    QWORD PTR [rip+0x3472]        # 0x14000e4a0
   14000b02e:	jmp    QWORD PTR [rip+0x3464]        # 0x14000e498
   14000b034:	jmp    QWORD PTR [rip+0x3456]        # 0x14000e490
   14000b03a:	jmp    QWORD PTR [rip+0x3448]        # 0x14000e488
   14000b040:	jmp    QWORD PTR [rip+0x343a]        # 0x14000e480
   14000b046:	jmp    QWORD PTR [rip+0x342c]        # 0x14000e478
   14000b04c:	jmp    QWORD PTR [rip+0x341e]        # 0x14000e470
   14000b052:	jmp    QWORD PTR [rip+0x3410]        # 0x14000e468
   14000b058:	jmp    QWORD PTR [rip+0x3402]        # 0x14000e460
   14000b05e:	jmp    QWORD PTR [rip+0x33f4]        # 0x14000e458
   14000b064:	jmp    QWORD PTR [rip+0x33e6]        # 0x14000e450
   14000b06a:	jmp    QWORD PTR [rip+0x33d8]        # 0x14000e448
   14000b070:	jmp    QWORD PTR [rip+0x33ca]        # 0x14000e440
   14000b076:	jmp    QWORD PTR [rip+0x33bc]        # 0x14000e438
   14000b07c:	jmp    QWORD PTR [rip+0x33ae]        # 0x14000e430
   14000b082:	jmp    QWORD PTR [rip+0x33a0]        # 0x14000e428
   14000b088:	jmp    QWORD PTR [rip+0x3392]        # 0x14000e420
   14000b08e:	jmp    QWORD PTR [rip+0x3384]        # 0x14000e418
   14000b094:	jmp    QWORD PTR [rip+0x3376]        # 0x14000e410
   14000b09a:	jmp    QWORD PTR [rip+0x3368]        # 0x14000e408
   14000b0a0:	jmp    QWORD PTR [rip+0x335a]        # 0x14000e400
   14000b0a6:	jmp    QWORD PTR [rip+0x334c]        # 0x14000e3f8
   14000b0ac:	jmp    QWORD PTR [rip+0x333e]        # 0x14000e3f0
   14000b0b2:	jmp    QWORD PTR [rip+0x3330]        # 0x14000e3e8
   14000b0b8:	jmp    QWORD PTR [rip+0x3322]        # 0x14000e3e0
   14000b0be:	jmp    QWORD PTR [rip+0x3314]        # 0x14000e3d8
   14000b0c4:	jmp    QWORD PTR [rip+0x3306]        # 0x14000e3d0
   14000b0ca:	jmp    QWORD PTR [rip+0x32f8]        # 0x14000e3c8
   14000b0d0:	jmp    QWORD PTR [rip+0x32ea]        # 0x14000e3c0
   14000b0d6:	jmp    QWORD PTR [rip+0x32dc]        # 0x14000e3b8
   14000b0dc:	jmp    QWORD PTR [rip+0x32ce]        # 0x14000e3b0
   14000b0e2:	jmp    QWORD PTR [rip+0x32c0]        # 0x14000e3a8
   14000b0e8:	jmp    QWORD PTR [rip+0x32b2]        # 0x14000e3a0
   14000b0ee:	jmp    QWORD PTR [rip+0x32a4]        # 0x14000e398
   14000b0f4:	jmp    QWORD PTR [rip+0x3296]        # 0x14000e390
   14000b0fa:	jmp    QWORD PTR [rip+0x3288]        # 0x14000e388
   14000b100:	jmp    QWORD PTR [rip+0x327a]        # 0x14000e380
   14000b106:	jmp    QWORD PTR [rip+0x326c]        # 0x14000e378
   14000b10c:	jmp    QWORD PTR [rip+0x325e]        # 0x14000e370
   14000b112:	jmp    QWORD PTR [rip+0x3250]        # 0x14000e368
   14000b118:	jmp    QWORD PTR [rip+0x3242]        # 0x14000e360
   14000b11e:	jmp    QWORD PTR [rip+0x3234]        # 0x14000e358
   14000b124:	jmp    QWORD PTR [rip+0x3226]        # 0x14000e350
   14000b12a:	jmp    QWORD PTR [rip+0x3218]        # 0x14000e348
   14000b130:	jmp    QWORD PTR [rip+0x320a]        # 0x14000e340
   14000b136:	jmp    QWORD PTR [rip+0x31fc]        # 0x14000e338
   14000b13c:	jmp    QWORD PTR [rip+0x31ee]        # 0x14000e330
   14000b142:	jmp    QWORD PTR [rip+0x31e0]        # 0x14000e328
   14000b148:	jmp    QWORD PTR [rip+0x31d2]        # 0x14000e320
   14000b14e:	jmp    QWORD PTR [rip+0x31c4]        # 0x14000e318
   14000b154:	jmp    QWORD PTR [rip+0x31b6]        # 0x14000e310
   14000b15a:	jmp    QWORD PTR [rip+0x31a8]        # 0x14000e308
   14000b160:	jmp    QWORD PTR [rip+0x319a]        # 0x14000e300
   14000b166:	jmp    QWORD PTR [rip+0x318c]        # 0x14000e2f8
   14000b16c:	jmp    QWORD PTR [rip+0x317e]        # 0x14000e2f0
   14000b172:	jmp    QWORD PTR [rip+0x3170]        # 0x14000e2e8
   14000b178:	jmp    QWORD PTR [rip+0x3162]        # 0x14000e2e0
   14000b17e:	jmp    QWORD PTR [rip+0x3154]        # 0x14000e2d8
   14000b184:	jmp    QWORD PTR [rip+0x3146]        # 0x14000e2d0
   14000b18a:	jmp    QWORD PTR [rip+0x3138]        # 0x14000e2c8
   14000b190:	jmp    QWORD PTR [rip+0x312a]        # 0x14000e2c0
   14000b196:	jmp    QWORD PTR [rip+0x311c]        # 0x14000e2b8
   14000b19c:	jmp    QWORD PTR [rip+0x310e]        # 0x14000e2b0
   14000b1a2:	jmp    QWORD PTR [rip+0x3100]        # 0x14000e2a8
   14000b1a8:	jmp    QWORD PTR [rip+0x30f2]        # 0x14000e2a0
   14000b1ae:	jmp    QWORD PTR [rip+0x30e4]        # 0x14000e298
   14000b1b4:	jmp    QWORD PTR [rip+0x30d6]        # 0x14000e290
   14000b1ba:	jmp    QWORD PTR [rip+0x30c8]        # 0x14000e288
   14000b1c0:	jmp    QWORD PTR [rip+0x30ba]        # 0x14000e280
   14000b1c6:	jmp    QWORD PTR [rip+0x30ac]        # 0x14000e278
   14000b1cc:	jmp    QWORD PTR [rip+0x309e]        # 0x14000e270
   14000b1d2:	jmp    QWORD PTR [rip+0x3090]        # 0x14000e268
   14000b1d8:	jmp    QWORD PTR [rip+0x3082]        # 0x14000e260
   14000b1de:	jmp    QWORD PTR [rip+0x3074]        # 0x14000e258
   14000b1e4:	jmp    QWORD PTR [rip+0x3066]        # 0x14000e250
   14000b1ea:	jmp    QWORD PTR [rip+0x3058]        # 0x14000e248
   14000b1f0:	jmp    QWORD PTR [rip+0x304a]        # 0x14000e240
   14000b1f6:	jmp    QWORD PTR [rip+0x303c]        # 0x14000e238
   14000b1fc:	jmp    QWORD PTR [rip+0x302e]        # 0x14000e230
   14000b202:	jmp    QWORD PTR [rip+0x3020]        # 0x14000e228
   14000b208:	jmp    QWORD PTR [rip+0x3012]        # 0x14000e220
   14000b20e:	jmp    QWORD PTR [rip+0x3004]        # 0x14000e218
   14000b214:	jmp    QWORD PTR [rip+0x2ff6]        # 0x14000e210
   14000b21a:	jmp    QWORD PTR [rip+0x2fe8]        # 0x14000e208
   14000b220:	jmp    QWORD PTR [rip+0x2fda]        # 0x14000e200
   14000b226:	jmp    QWORD PTR [rip+0x2fcc]        # 0x14000e1f8
   14000b22c:	jmp    QWORD PTR [rip+0x2fbe]        # 0x14000e1f0
   14000b232:	jmp    QWORD PTR [rip+0x2fb0]        # 0x14000e1e8
   14000b238:	jmp    QWORD PTR [rip+0x2fa2]        # 0x14000e1e0
   14000b23e:	jmp    QWORD PTR [rip+0x2f94]        # 0x14000e1d8
   14000b244:	jmp    QWORD PTR [rip+0x2f86]        # 0x14000e1d0
   14000b24a:	jmp    QWORD PTR [rip+0x2f78]        # 0x14000e1c8
   14000b250:	jmp    QWORD PTR [rip+0x2f6a]        # 0x14000e1c0
   14000b256:	jmp    QWORD PTR [rip+0x2f5c]        # 0x14000e1b8
   14000b25c:	jmp    QWORD PTR [rip+0x2f4e]        # 0x14000e1b0
   14000b262:	jmp    QWORD PTR [rip+0x2f40]        # 0x14000e1a8
   14000b268:	jmp    QWORD PTR [rip+0x2f32]        # 0x14000e1a0
   14000b26e:	jmp    QWORD PTR [rip+0x2f24]        # 0x14000e198
   14000b274:	jmp    QWORD PTR [rip+0x2f16]        # 0x14000e190
   14000b27a:	jmp    QWORD PTR [rip+0x2f08]        # 0x14000e188
   14000b280:	jmp    QWORD PTR [rip+0x2efa]        # 0x14000e180
   14000b286:	jmp    QWORD PTR [rip+0x2eec]        # 0x14000e178
   14000b28c:	jmp    QWORD PTR [rip+0x2ede]        # 0x14000e170
   14000b292:	jmp    QWORD PTR [rip+0x2ed0]        # 0x14000e168
   14000b298:	jmp    QWORD PTR [rip+0x2ec2]        # 0x14000e160
   14000b29e:	jmp    QWORD PTR [rip+0x2eb4]        # 0x14000e158
   14000b2a4:	jmp    QWORD PTR [rip+0x2ea6]        # 0x14000e150
   14000b2aa:	jmp    QWORD PTR [rip+0x2e98]        # 0x14000e148
   14000b2b0:	jmp    QWORD PTR [rip+0x2e8a]        # 0x14000e140
   14000b2b6:	jmp    QWORD PTR [rip+0x2e7c]        # 0x14000e138
   14000b2bc:	jmp    QWORD PTR [rip+0x2e6e]        # 0x14000e130
   14000b2c2:	jmp    QWORD PTR [rip+0x2e60]        # 0x14000e128
   14000b2c8:	jmp    QWORD PTR [rip+0x2e52]        # 0x14000e120
   14000b2ce:	jmp    QWORD PTR [rip+0x2e44]        # 0x14000e118
   14000b2d4:	jmp    QWORD PTR [rip+0x2e36]        # 0x14000e110
   14000b2da:	jmp    QWORD PTR [rip+0x2e28]        # 0x14000e108
   14000b2e0:	jmp    QWORD PTR [rip+0x2e1a]        # 0x14000e100
   14000b2e6:	jmp    QWORD PTR [rip+0x2e0c]        # 0x14000e0f8
   14000b2ec:	jmp    QWORD PTR [rip+0x2dfe]        # 0x14000e0f0
   14000b2f2:	jmp    QWORD PTR [rip+0x2df0]        # 0x14000e0e8
   14000b2f8:	jmp    QWORD PTR [rip+0x2de2]        # 0x14000e0e0
   14000b2fe:	jmp    QWORD PTR [rip+0x2dd4]        # 0x14000e0d8
   14000b304:	jmp    QWORD PTR [rip+0x2dc6]        # 0x14000e0d0
   14000b30a:	jmp    QWORD PTR [rip+0x2db8]        # 0x14000e0c8
   14000b310:	jmp    QWORD PTR [rip+0x2daa]        # 0x14000e0c0
   14000b316:	jmp    QWORD PTR [rip+0x2d9c]        # 0x14000e0b8
   14000b31c:	jmp    QWORD PTR [rip+0x2d8e]        # 0x14000e0b0
   14000b322:	jmp    QWORD PTR [rip+0x2d80]        # 0x14000e0a8
   14000b328:	jmp    QWORD PTR [rip+0x2d72]        # 0x14000e0a0
   14000b32e:	jmp    QWORD PTR [rip+0x2d64]        # 0x14000e098
   14000b334:	jmp    QWORD PTR [rip+0x2d56]        # 0x14000e090
   14000b33a:	jmp    QWORD PTR [rip+0x2d48]        # 0x14000e088
   14000b340:	jmp    QWORD PTR [rip+0x2d3a]        # 0x14000e080
   14000b346:	jmp    QWORD PTR [rip+0x2d2c]        # 0x14000e078
   14000b34c:	jmp    QWORD PTR [rip+0x2d1e]        # 0x14000e070
   14000b352:	jmp    QWORD PTR [rip+0x2d10]        # 0x14000e068
   14000b358:	jmp    QWORD PTR [rip+0x2d02]        # 0x14000e060
   14000b35e:	jmp    QWORD PTR [rip+0x2cf4]        # 0x14000e058
   14000b364:	jmp    QWORD PTR [rip+0x2ce6]        # 0x14000e050
   14000b36a:	jmp    QWORD PTR [rip+0x2cd8]        # 0x14000e048
   14000b370:	jmp    QWORD PTR [rip+0x2cca]        # 0x14000e040
   14000b376:	jmp    QWORD PTR [rip+0x2cbc]        # 0x14000e038
   14000b37c:	jmp    QWORD PTR [rip+0x2cae]        # 0x14000e030
   14000b382:	jmp    QWORD PTR [rip+0x2ca0]        # 0x14000e028
   14000b388:	jmp    QWORD PTR [rip+0x2c92]        # 0x14000e020
   14000b38e:	jmp    QWORD PTR [rip+0x2c84]        # 0x14000e018
   14000b394:	jmp    QWORD PTR [rip+0x2c76]        # 0x14000e010
   14000b39a:	jmp    QWORD PTR [rip+0x2c68]        # 0x14000e008
   14000b3a0:	jmp    QWORD PTR [rip+0x2c5a]        # 0x14000e000
   14000b3a6:	jmp    QWORD PTR [rip+0x2c4c]        # 0x14000dff8
   14000b3ac:	jmp    QWORD PTR [rip+0x2c3e]        # 0x14000dff0
   14000b3b2:	jmp    QWORD PTR [rip+0x2c30]        # 0x14000dfe8
   14000b3b8:	jmp    QWORD PTR [rip+0x2c22]        # 0x14000dfe0
   14000b3be:	jmp    QWORD PTR [rip+0x2abc]        # 0x14000de80
   14000b3c4:	jmp    QWORD PTR [rip+0x2aae]        # 0x14000de78
   14000b3ca:	jmp    QWORD PTR [rip+0x2aa0]        # 0x14000de70
   14000b3d0:	jmp    QWORD PTR [rip+0x2a92]        # 0x14000de68
   14000b3d6:	jmp    QWORD PTR [rip+0x2a84]        # 0x14000de60
   14000b3dc:	jmp    QWORD PTR [rip+0x2a76]        # 0x14000de58
   14000b3e2:	jmp    QWORD PTR [rip+0x2a20]        # 0x14000de08
   14000b3e8:	jmp    QWORD PTR [rip+0x2a12]        # 0x14000de00
   14000b3ee:	jmp    QWORD PTR [rip+0x2a04]        # 0x14000ddf8
   14000b3f4:	jmp    QWORD PTR [rip+0x29f6]        # 0x14000ddf0
   14000b3fa:	jmp    QWORD PTR [rip+0x29e8]        # 0x14000dde8
   14000b400:	jmp    QWORD PTR [rip+0x29da]        # 0x14000dde0
   14000b406:	jmp    QWORD PTR [rip+0x29cc]        # 0x14000ddd8
   14000b40c:	jmp    QWORD PTR [rip+0x29be]        # 0x14000ddd0
   14000b412:	jmp    QWORD PTR [rip+0x29b0]        # 0x14000ddc8
   14000b418:	jmp    QWORD PTR [rip+0x299a]        # 0x14000ddb8
   14000b41e:	jmp    QWORD PTR [rip+0x299c]        # 0x14000ddc0
   14000b424:	jmp    QWORD PTR [rip+0x2986]        # 0x14000ddb0
   14000b42a:	jmp    QWORD PTR [rip+0x2978]        # 0x14000dda8
   14000b430:	jmp    QWORD PTR [rip+0x296a]        # 0x14000dda0
   14000b436:	jmp    QWORD PTR [rip+0x295c]        # 0x14000dd98
   14000b43c:	jmp    QWORD PTR [rip+0x294e]        # 0x14000dd90
   14000b442:	jmp    QWORD PTR [rip+0x2940]        # 0x14000dd88
   14000b448:	jmp    QWORD PTR [rip+0x2932]        # 0x14000dd80
   14000b44e:	jmp    QWORD PTR [rip+0x2924]        # 0x14000dd78
   14000b454:	jmp    QWORD PTR [rip+0x2746]        # 0x14000dba0
   14000b45a:	jmp    QWORD PTR [rip+0x2570]        # 0x14000d9d0
   14000b460:	jmp    QWORD PTR [rip+0x2572]        # 0x14000d9d8
   14000b466:	jmp    QWORD PTR [rip+0x2574]        # 0x14000d9e0
   14000b46c:	jmp    QWORD PTR [rip+0x2576]        # 0x14000d9e8
   14000b472:	jmp    QWORD PTR [rip+0x2578]        # 0x14000d9f0
   14000b478:	jmp    QWORD PTR [rip+0x257a]        # 0x14000d9f8
   14000b47e:	jmp    QWORD PTR [rip+0x257c]        # 0x14000da00
   14000b484:	jmp    QWORD PTR [rip+0x257e]        # 0x14000da08
   14000b48a:	jmp    QWORD PTR [rip+0x2580]        # 0x14000da10
   14000b490:	jmp    QWORD PTR [rip+0x2582]        # 0x14000da18
   14000b496:	jmp    QWORD PTR [rip+0x2584]        # 0x14000da20
   14000b49c:	jmp    QWORD PTR [rip+0x2586]        # 0x14000da28
   14000b4a2:	jmp    QWORD PTR [rip+0x2588]        # 0x14000da30
   14000b4a8:	jmp    QWORD PTR [rip+0x258a]        # 0x14000da38
   14000b4ae:	jmp    QWORD PTR [rip+0x258c]        # 0x14000da40
   14000b4b4:	jmp    QWORD PTR [rip+0x258e]        # 0x14000da48
   14000b4ba:	jmp    QWORD PTR [rip+0x2590]        # 0x14000da50
   14000b4c0:	jmp    QWORD PTR [rip+0x2592]        # 0x14000da58
   14000b4c6:	jmp    QWORD PTR [rip+0x2594]        # 0x14000da60
   14000b4cc:	jmp    QWORD PTR [rip+0x2596]        # 0x14000da68
   14000b4d2:	jmp    QWORD PTR [rip+0x2598]        # 0x14000da70
   14000b4d8:	jmp    QWORD PTR [rip+0x259a]        # 0x14000da78
   14000b4de:	jmp    QWORD PTR [rip+0x259c]        # 0x14000da80
   14000b4e4:	jmp    QWORD PTR [rip+0x259e]        # 0x14000da88
   14000b4ea:	jmp    QWORD PTR [rip+0x25a0]        # 0x14000da90
   14000b4f0:	jmp    QWORD PTR [rip+0x25ca]        # 0x14000dac0
   14000b4f6:	jmp    QWORD PTR [rip+0x25cc]        # 0x14000dac8
   14000b4fc:	jmp    QWORD PTR [rip+0x25ce]        # 0x14000dad0
   14000b502:	jmp    QWORD PTR [rip+0x25d0]        # 0x14000dad8
   14000b508:	jmp    QWORD PTR [rip+0x25d2]        # 0x14000dae0
   14000b50e:	jmp    QWORD PTR [rip+0x25d4]        # 0x14000dae8
   14000b514:	jmp    QWORD PTR [rip+0x25d6]        # 0x14000daf0
   14000b51a:	jmp    QWORD PTR [rip+0x25d8]        # 0x14000daf8
   14000b520:	jmp    QWORD PTR [rip+0x25da]        # 0x14000db00
   14000b526:	jmp    QWORD PTR [rip+0x25dc]        # 0x14000db08
   14000b52c:	jmp    QWORD PTR [rip+0x25de]        # 0x14000db10
   14000b532:	jmp    QWORD PTR [rip+0x25e0]        # 0x14000db18
   14000b538:	jmp    QWORD PTR [rip+0x25e2]        # 0x14000db20
   14000b53e:	jmp    QWORD PTR [rip+0x25e4]        # 0x14000db28
   14000b544:	jmp    QWORD PTR [rip+0x25e6]        # 0x14000db30
   14000b54a:	jmp    QWORD PTR [rip+0x25e8]        # 0x14000db38
   14000b550:	jmp    QWORD PTR [rip+0x25ea]        # 0x14000db40
   14000b556:	jmp    QWORD PTR [rip+0x25ec]        # 0x14000db48
   14000b55c:	jmp    QWORD PTR [rip+0x25ee]        # 0x14000db50
   14000b562:	jmp    QWORD PTR [rip+0x25f0]        # 0x14000db58
   14000b568:	jmp    QWORD PTR [rip+0x25f2]        # 0x14000db60
   14000b56e:	jmp    QWORD PTR [rip+0x25f4]        # 0x14000db68
   14000b574:	jmp    QWORD PTR [rip+0x25f6]        # 0x14000db70
   14000b57a:	jmp    QWORD PTR [rip+0x25f8]        # 0x14000db78
   14000b580:	jmp    QWORD PTR [rip+0x25fa]        # 0x14000db80
   14000b586:	jmp    QWORD PTR [rip+0x25fc]        # 0x14000db88
   14000b58c:	jmp    QWORD PTR [rip+0x25fe]        # 0x14000db90
   14000b592:	jmp    QWORD PTR [rip+0x2600]        # 0x14000db98
   14000b598:	jmp    QWORD PTR [rip+0x31a2]        # 0x14000e740
   14000b59e:	jmp    QWORD PTR [rip+0x2604]        # 0x14000dba8
   14000b5a4:	jmp    QWORD PTR [rip+0x2606]        # 0x14000dbb0
   14000b5aa:	jmp    QWORD PTR [rip+0x2608]        # 0x14000dbb8
   14000b5b0:	jmp    QWORD PTR [rip+0x260a]        # 0x14000dbc0
   14000b5b6:	jmp    QWORD PTR [rip+0x260c]        # 0x14000dbc8
   14000b5bc:	jmp    QWORD PTR [rip+0x260e]        # 0x14000dbd0
   14000b5c2:	jmp    QWORD PTR [rip+0x2698]        # 0x14000dc60
   14000b5c8:	jmp    QWORD PTR [rip+0x269a]        # 0x14000dc68
   14000b5ce:	jmp    QWORD PTR [rip+0x269c]        # 0x14000dc70
   14000b5d4:	jmp    QWORD PTR [rip+0x269e]        # 0x14000dc78
   14000b5da:	jmp    QWORD PTR [rip+0x26a0]        # 0x14000dc80
   14000b5e0:	jmp    QWORD PTR [rip+0x26a2]        # 0x14000dc88
   14000b5e6:	jmp    QWORD PTR [rip+0x26a4]        # 0x14000dc90
   14000b5ec:	jmp    QWORD PTR [rip+0x26a6]        # 0x14000dc98
   14000b5f2:	jmp    QWORD PTR [rip+0x26a8]        # 0x14000dca0
   14000b5f8:	jmp    QWORD PTR [rip+0x26aa]        # 0x14000dca8
   14000b5fe:	jmp    QWORD PTR [rip+0x26ac]        # 0x14000dcb0
   14000b604:	jmp    QWORD PTR [rip+0x26ae]        # 0x14000dcb8
   14000b60a:	jmp    QWORD PTR [rip+0x26b0]        # 0x14000dcc0
   14000b610:	jmp    QWORD PTR [rip+0x26b2]        # 0x14000dcc8
   14000b616:	jmp    QWORD PTR [rip+0x26b4]        # 0x14000dcd0
   14000b61c:	jmp    QWORD PTR [rip+0x26b6]        # 0x14000dcd8
   14000b622:	jmp    QWORD PTR [rip+0x26b8]        # 0x14000dce0
   14000b628:	jmp    QWORD PTR [rip+0x26ba]        # 0x14000dce8
   14000b62e:	jmp    QWORD PTR [rip+0x21bc]        # 0x14000d7f0
   14000b634:	jmp    QWORD PTR [rip+0x21ae]        # 0x14000d7e8
   14000b63a:	jmp    QWORD PTR [rip+0x21a0]        # 0x14000d7e0
   14000b640:	jmp    QWORD PTR [rip+0x2192]        # 0x14000d7d8
   14000b646:	jmp    QWORD PTR [rip+0x2184]        # 0x14000d7d0
   14000b64c:	jmp    QWORD PTR [rip+0x2176]        # 0x14000d7c8
   14000b652:	jmp    QWORD PTR [rip+0x2168]        # 0x14000d7c0
   14000b658:	jmp    QWORD PTR [rip+0x215a]        # 0x14000d7b8
   14000b65e:	jmp    QWORD PTR [rip+0x214c]        # 0x14000d7b0
   14000b664:	jmp    QWORD PTR [rip+0x213e]        # 0x14000d7a8
   14000b66a:	jmp    QWORD PTR [rip+0x2130]        # 0x14000d7a0
   14000b670:	jmp    QWORD PTR [rip+0x2122]        # 0x14000d798
   14000b676:	jmp    QWORD PTR [rip+0x2114]        # 0x14000d790
   14000b67c:	jmp    QWORD PTR [rip+0x2106]        # 0x14000d788
   14000b682:	jmp    QWORD PTR [rip+0x20f8]        # 0x14000d780
   14000b688:	jmp    QWORD PTR [rip+0x20ea]        # 0x14000d778
   14000b68e:	jmp    QWORD PTR [rip+0x20dc]        # 0x14000d770
   14000b694:	jmp    QWORD PTR [rip+0x20ce]        # 0x14000d768
   14000b69a:	jmp    QWORD PTR [rip+0x20c0]        # 0x14000d760
   14000b6a0:	jmp    QWORD PTR [rip+0x20b2]        # 0x14000d758
   14000b6a6:	jmp    QWORD PTR [rip+0x20a4]        # 0x14000d750
   14000b6ac:	jmp    QWORD PTR [rip+0x2096]        # 0x14000d748
   14000b6b2:	jmp    QWORD PTR [rip+0x2088]        # 0x14000d740
   14000b6b8:	jmp    QWORD PTR [rip+0x207a]        # 0x14000d738
   14000b6be:	jmp    QWORD PTR [rip+0x206c]        # 0x14000d730
   14000b6c4:	jmp    QWORD PTR [rip+0x205e]        # 0x14000d728
   14000b6ca:	jmp    QWORD PTR [rip+0x2050]        # 0x14000d720
   14000b6d0:	jmp    QWORD PTR [rip+0x2042]        # 0x14000d718
   14000b6d6:	jmp    QWORD PTR [rip+0x2034]        # 0x14000d710
   14000b6dc:	jmp    QWORD PTR [rip+0x2026]        # 0x14000d708
   14000b6e2:	jmp    QWORD PTR [rip+0x2018]        # 0x14000d700
   14000b6e8:	jmp    QWORD PTR [rip+0x200a]        # 0x14000d6f8
   14000b6ee:	jmp    QWORD PTR [rip+0x1ffc]        # 0x14000d6f0
   14000b6f4:	jmp    QWORD PTR [rip+0x1fee]        # 0x14000d6e8
   14000b6fa:	jmp    QWORD PTR [rip+0x1fe0]        # 0x14000d6e0
   14000b700:	jmp    QWORD PTR [rip+0x1efa]        # 0x14000d600
   14000b706:	jmp    QWORD PTR [rip+0x1eec]        # 0x14000d5f8
   14000b70c:	jmp    QWORD PTR [rip+0x1ede]        # 0x14000d5f0
   14000b712:	jmp    QWORD PTR [rip+0x1ed0]        # 0x14000d5e8
   14000b718:	jmp    QWORD PTR [rip+0x1ec2]        # 0x14000d5e0
   14000b71e:	jmp    QWORD PTR [rip+0x1eb4]        # 0x14000d5d8
   14000b724:	jmp    QWORD PTR [rip+0x1ea6]        # 0x14000d5d0
   14000b72a:	jmp    QWORD PTR [rip+0x1e98]        # 0x14000d5c8
   14000b730:	jmp    QWORD PTR [rip+0x1e8a]        # 0x14000d5c0
   14000b736:	jmp    QWORD PTR [rip+0x1e7c]        # 0x14000d5b8
   14000b73c:	jmp    QWORD PTR [rip+0x1e6e]        # 0x14000d5b0
   14000b742:	jmp    QWORD PTR [rip+0x1e60]        # 0x14000d5a8
   14000b748:	jmp    QWORD PTR [rip+0x1e52]        # 0x14000d5a0
   14000b74e:	jmp    QWORD PTR [rip+0x1e44]        # 0x14000d598
   14000b754:	jmp    QWORD PTR [rip+0x1e36]        # 0x14000d590
   14000b75a:	jmp    QWORD PTR [rip+0x1e28]        # 0x14000d588
   14000b760:	jmp    QWORD PTR [rip+0x1e1a]        # 0x14000d580
   14000b766:	jmp    QWORD PTR [rip+0x1e0c]        # 0x14000d578
   14000b76c:	jmp    QWORD PTR [rip+0x1bde]        # 0x14000d350
   14000b772:	jmp    QWORD PTR [rip+0x1bd0]        # 0x14000d348
   14000b778:	jmp    QWORD PTR [rip+0x1bc2]        # 0x14000d340
   14000b77e:	jmp    QWORD PTR [rip+0x1bb4]        # 0x14000d338
   14000b784:	jmp    QWORD PTR [rip+0x1ba6]        # 0x14000d330
   14000b78a:	jmp    QWORD PTR [rip+0x1b98]        # 0x14000d328
   14000b790:	jmp    QWORD PTR [rip+0x1b8a]        # 0x14000d320
   14000b796:	jmp    QWORD PTR [rip+0x1b7c]        # 0x14000d318
   14000b79c:	jmp    QWORD PTR [rip+0x1b6e]        # 0x14000d310
   14000b7a2:	jmp    QWORD PTR [rip+0x1b60]        # 0x14000d308
   14000b7a8:	jmp    QWORD PTR [rip+0x1b52]        # 0x14000d300
   14000b7ae:	jmp    QWORD PTR [rip+0x1b44]        # 0x14000d2f8
   14000b7b4:	jmp    QWORD PTR [rip+0x1b36]        # 0x14000d2f0
   14000b7ba:	jmp    QWORD PTR [rip+0x1b28]        # 0x14000d2e8
   14000b7c0:	jmp    QWORD PTR [rip+0x1b1a]        # 0x14000d2e0
   14000b7c6:	jmp    QWORD PTR [rip+0x1b0c]        # 0x14000d2d8
   14000b7cc:	jmp    QWORD PTR [rip+0x1afe]        # 0x14000d2d0
   14000b7d2:	jmp    QWORD PTR [rip+0x1af0]        # 0x14000d2c8
   14000b7d8:	jmp    QWORD PTR [rip+0x1ae2]        # 0x14000d2c0
   14000b7de:	jmp    QWORD PTR [rip+0x1ad4]        # 0x14000d2b8
   14000b7e4:	jmp    QWORD PTR [rip+0x1ac6]        # 0x14000d2b0
   14000b7ea:	jmp    QWORD PTR [rip+0x1ab8]        # 0x14000d2a8
   14000b7f0:	jmp    QWORD PTR [rip+0x1aaa]        # 0x14000d2a0
   14000b7f6:	jmp    QWORD PTR [rip+0x1a9c]        # 0x14000d298
   14000b7fc:	jmp    QWORD PTR [rip+0x1a8e]        # 0x14000d290
   14000b802:	jmp    QWORD PTR [rip+0x1a80]        # 0x14000d288
   14000b808:	jmp    QWORD PTR [rip+0x1a72]        # 0x14000d280
   14000b80e:	jmp    QWORD PTR [rip+0x1a64]        # 0x14000d278
   14000b814:	jmp    QWORD PTR [rip+0x1a56]        # 0x14000d270
   14000b81a:	jmp    QWORD PTR [rip+0x1a48]        # 0x14000d268
   14000b820:	jmp    QWORD PTR [rip+0x1a3a]        # 0x14000d260
   14000b826:	jmp    QWORD PTR [rip+0x1a2c]        # 0x14000d258
   14000b82c:	jmp    QWORD PTR [rip+0x1a1e]        # 0x14000d250
   14000b832:	jmp    QWORD PTR [rip+0x1a10]        # 0x14000d248
   14000b838:	jmp    QWORD PTR [rip+0x1a02]        # 0x14000d240
   14000b83e:	jmp    QWORD PTR [rip+0x19f4]        # 0x14000d238
   14000b844:	jmp    QWORD PTR [rip+0x19e6]        # 0x14000d230
   14000b84a:	jmp    QWORD PTR [rip+0x1940]        # 0x14000d190
   14000b850:	jmp    QWORD PTR [rip+0x1932]        # 0x14000d188
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	mov    QWORD PTR [rsp+0x8],rbx
   14000b85d:	mov    QWORD PTR [rsp+0x10],rsi
   14000b862:	push   rdi
   14000b863:	sub    rsp,0x20
   14000b867:	mov    esi,edx
   14000b869:	mov    rbx,rcx
   14000b86c:	test   dl,0x2
   14000b86f:	je     0x14000b89b
   14000b871:	mov    r8d,DWORD PTR [rcx-0x8]
   14000b875:	lea    r9,[rip+0x7c2]        # 0x14000c03e
   14000b87c:	mov    edx,0x18
   14000b881:	call   0x14000bd5c
   14000b886:	test   sil,0x1
   14000b88a:	je     0x14000b895
   14000b88c:	lea    rcx,[rbx-0x8]
   14000b890:	call   0x14000b8c8
   14000b895:	lea    rax,[rbx-0x8]
   14000b899:	jmp    0x14000b8b1
   14000b89b:	call   0x14000c03e
   14000b8a0:	test   sil,0x1
   14000b8a4:	je     0x14000b8ae
   14000b8a6:	mov    rcx,rbx
   14000b8a9:	call   0x14000b8c8
   14000b8ae:	mov    rax,rbx
   14000b8b1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8b6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b8bb:	add    rsp,0x20
   14000b8bf:	pop    rdi
   14000b8c0:	ret    
   14000b8c1:	int3   
   14000b8c2:	jmp    QWORD PTR [rip+0x1810]        # 0x14000d0d8
   14000b8c8:	jmp    QWORD PTR [rip+0x1802]        # 0x14000d0d0
   14000b8ce:	jmp    QWORD PTR [rip+0x17f4]        # 0x14000d0c8
   14000b8d4:	jmp    QWORD PTR [rip+0x17e6]        # 0x14000d0c0
   14000b8da:	int3   
   14000b8db:	int3   
   14000b8dc:	rex push rbx
   14000b8de:	sub    rsp,0x20
   14000b8e2:	mov    rbx,rcx
   14000b8e5:	mov    rcx,QWORD PTR [rip+0x14edc]        # 0x1400207c8
   14000b8ec:	call   QWORD PTR [rip+0x1796]        # 0x14000d088
   14000b8f2:	mov    QWORD PTR [rsp+0x38],rax
   14000b8f7:	cmp    rax,0xffffffffffffffff
   14000b8fb:	jne    0x14000b908
   14000b8fd:	mov    rcx,rbx
   14000b900:	call   QWORD PTR [rip+0x178a]        # 0x14000d090
   14000b906:	jmp    0x14000b986
   14000b908:	mov    ecx,0x8
   14000b90d:	call   0x14000bdcc
   14000b912:	nop
   14000b913:	mov    rcx,QWORD PTR [rip+0x14eae]        # 0x1400207c8
   14000b91a:	call   QWORD PTR [rip+0x1768]        # 0x14000d088
   14000b920:	mov    QWORD PTR [rsp+0x38],rax
   14000b925:	mov    rcx,QWORD PTR [rip+0x14e94]        # 0x1400207c0
   14000b92c:	call   QWORD PTR [rip+0x1756]        # 0x14000d088
   14000b932:	mov    QWORD PTR [rsp+0x40],rax
   14000b937:	mov    rcx,rbx
   14000b93a:	call   QWORD PTR [rip+0x17f8]        # 0x14000d138
   14000b940:	mov    rcx,rax
   14000b943:	lea    r8,[rsp+0x40]
   14000b948:	lea    rdx,[rsp+0x38]
   14000b94d:	call   0x14000bdc6
   14000b952:	mov    rbx,rax
   14000b955:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b95a:	call   QWORD PTR [rip+0x17d8]        # 0x14000d138
   14000b960:	mov    QWORD PTR [rip+0x14e61],rax        # 0x1400207c8
   14000b967:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b96c:	call   QWORD PTR [rip+0x17c6]        # 0x14000d138
   14000b972:	mov    QWORD PTR [rip+0x14e47],rax        # 0x1400207c0
   14000b979:	mov    ecx,0x8
   14000b97e:	call   0x14000bdc0
   14000b983:	mov    rax,rbx
   14000b986:	add    rsp,0x20
   14000b98a:	pop    rbx
   14000b98b:	ret    
   14000b98c:	sub    rsp,0x28
   14000b990:	call   0x14000b8dc
   14000b995:	neg    rax
   14000b998:	sbb    eax,eax
   14000b99a:	neg    eax
   14000b99c:	dec    eax
   14000b99e:	add    rsp,0x28
   14000b9a2:	ret    
   14000b9a3:	int3   
   14000b9a4:	sub    rsp,0x38
   14000b9a8:	lea    rcx,[rip+0x4c1]        # 0x14000be70
   14000b9af:	call   0x14000b98c
   14000b9b4:	mov    r11d,DWORD PTR [rip+0x14de5]        # 0x1400207a0
   14000b9bb:	mov    r9d,DWORD PTR [rip+0x14dda]        # 0x14002079c
   14000b9c2:	lea    rax,[rip+0x14dc3]        # 0x14002078c
   14000b9c9:	lea    r8,[rip+0x14da8]        # 0x140020778
   14000b9d0:	lea    rdx,[rip+0x14da9]        # 0x140020780
   14000b9d7:	lea    rcx,[rip+0x14d92]        # 0x140020770
   14000b9de:	mov    DWORD PTR [rip+0x14da7],r11d        # 0x14002078c
   14000b9e5:	mov    QWORD PTR [rsp+0x20],rax
   14000b9ea:	call   QWORD PTR [rip+0x1688]        # 0x14000d078
   14000b9f0:	mov    DWORD PTR [rip+0x14d92],eax        # 0x140020788
   14000b9f6:	test   eax,eax
   14000b9f8:	jns    0x14000ba04
   14000b9fa:	mov    ecx,0x8
   14000b9ff:	call   0x14000be30
   14000ba04:	add    rsp,0x38
   14000ba08:	ret    
   14000ba09:	int3   
   14000ba0a:	int3   
   14000ba0b:	int3   
   14000ba0c:	mov    QWORD PTR [rsp+0x8],rsi
   14000ba11:	push   rdi
   14000ba12:	sub    rsp,0xa0
   14000ba19:	and    DWORD PTR [rsp+0x20],0x0
   14000ba1e:	lea    rcx,[rsp+0x30]
   14000ba23:	call   QWORD PTR [rip+0x1617]        # 0x14000d040
   14000ba29:	nop
   14000ba2a:	mov    rax,QWORD PTR gs:0x30
   14000ba33:	mov    rdi,QWORD PTR [rax+0x8]
   14000ba37:	xor    esi,esi
   14000ba39:	xor    eax,eax
   14000ba3b:	lock cmpxchg QWORD PTR [rip+0x14d6c],rdi        # 0x1400207b0
   14000ba44:	je     0x14000ba5f
   14000ba46:	cmp    rax,rdi
   14000ba49:	jne    0x14000ba52
   14000ba4b:	mov    esi,0x1
   14000ba50:	jmp    0x14000ba5f
   14000ba52:	mov    ecx,0x3e8
   14000ba57:	call   QWORD PTR [rip+0x15eb]        # 0x14000d048
   14000ba5d:	jmp    0x14000ba39
   14000ba5f:	mov    eax,DWORD PTR [rip+0x14d47]        # 0x1400207ac
   14000ba65:	cmp    eax,0x1
   14000ba68:	jne    0x14000ba74
   14000ba6a:	lea    ecx,[rax+0x1e]
   14000ba6d:	call   0x14000be30
   14000ba72:	jmp    0x14000bab3
   14000ba74:	mov    eax,DWORD PTR [rip+0x14d32]        # 0x1400207ac
   14000ba7a:	test   eax,eax
   14000ba7c:	jne    0x14000baa9
   14000ba7e:	mov    DWORD PTR [rip+0x14d24],0x1        # 0x1400207ac
   14000ba88:	lea    rdx,[rip+0x2da9]        # 0x14000e838
   14000ba8f:	lea    rcx,[rip+0x2d8a]        # 0x14000e820
   14000ba96:	call   0x14000bf78
   14000ba9b:	test   eax,eax
   14000ba9d:	je     0x14000bab3
   14000ba9f:	mov    eax,0xff
   14000baa4:	jmp    0x14000bc01
   14000baa9:	mov    DWORD PTR [rip+0x14ce1],0x1        # 0x140020794
   14000bab3:	mov    eax,DWORD PTR [rip+0x14cf3]        # 0x1400207ac
   14000bab9:	cmp    eax,0x1
   14000babc:	jne    0x14000badb
   14000babe:	lea    rdx,[rip+0x2d53]        # 0x14000e818
   14000bac5:	lea    rcx,[rip+0x2d04]        # 0x14000e7d0
   14000bacc:	call   0x14000bf72
   14000bad1:	mov    DWORD PTR [rip+0x14cd1],0x2        # 0x1400207ac
   14000badb:	test   esi,esi
   14000badd:	jne    0x14000bae8
   14000badf:	xor    eax,eax
   14000bae1:	xchg   QWORD PTR [rip+0x14cc8],rax        # 0x1400207b0
   14000bae8:	cmp    QWORD PTR [rip+0x14cc8],0x0        # 0x1400207b8
   14000baf0:	je     0x14000bb11
   14000baf2:	lea    rcx,[rip+0x14cbf]        # 0x1400207b8
   14000baf9:	call   0x14000bf30
   14000bafe:	test   eax,eax
   14000bb00:	je     0x14000bb11
   14000bb02:	xor    r8d,r8d
   14000bb05:	lea    edx,[r8+0x2]
   14000bb09:	xor    ecx,ecx
   14000bb0b:	call   QWORD PTR [rip+0x14ca7]        # 0x1400207b8
   14000bb11:	mov    rax,QWORD PTR [rip+0x15d0]        # 0x14000d0e8
   14000bb18:	mov    rdi,QWORD PTR [rax]
   14000bb1b:	mov    QWORD PTR [rsp+0x28],rdi
   14000bb20:	mov    esi,DWORD PTR [rsp+0x20]
   14000bb24:	cmp    BYTE PTR [rdi],0x20
   14000bb27:	ja     0x14000bb99
   14000bb29:	cmp    BYTE PTR [rdi],0x0
   14000bb2c:	je     0x14000bb32
   14000bb2e:	test   esi,esi
   14000bb30:	jne    0x14000bb99
   14000bb32:	cmp    BYTE PTR [rdi],0x0
   14000bb35:	je     0x14000bb46
   14000bb37:	cmp    BYTE PTR [rdi],0x20
   14000bb3a:	ja     0x14000bb46
   14000bb3c:	inc    rdi
   14000bb3f:	mov    QWORD PTR [rsp+0x28],rdi
   14000bb44:	jmp    0x14000bb32
   14000bb46:	test   BYTE PTR [rsp+0x6c],0x1
   14000bb4b:	movzx  eax,WORD PTR [rsp+0x70]
   14000bb50:	mov    r9d,0xa
   14000bb56:	cmovne r9d,eax
   14000bb5a:	mov    r8,rdi
   14000bb5d:	xor    edx,edx
   14000bb5f:	lea    rcx,[rip+0xffffffffffff449a]        # 0x140000000
   14000bb66:	call   0x14000c0e0
   14000bb6b:	mov    DWORD PTR [rip+0x14c1f],eax        # 0x140020790
   14000bb71:	cmp    DWORD PTR [rip+0x14bfc],0x0        # 0x140020774
   14000bb78:	jne    0x14000bb82
   14000bb7a:	mov    ecx,eax
   14000bb7c:	call   QWORD PTR [rip+0x155e]        # 0x14000d0e0
   14000bb82:	cmp    DWORD PTR [rip+0x14c0b],0x0        # 0x140020794
   14000bb89:	jne    0x14000bb97
   14000bb8b:	call   QWORD PTR [rip+0x150f]        # 0x14000d0a0
   14000bb91:	mov    eax,DWORD PTR [rip+0x14bf9]        # 0x140020790
   14000bb97:	jmp    0x14000bbfa
   14000bb99:	cmp    BYTE PTR [rdi],0x22
   14000bb9c:	jne    0x14000bbab
   14000bb9e:	xor    eax,eax
   14000bba0:	test   esi,esi
   14000bba2:	sete   al
   14000bba5:	mov    esi,eax
   14000bba7:	mov    DWORD PTR [rsp+0x20],eax
   14000bbab:	movzx  ecx,BYTE PTR [rdi]
   14000bbae:	call   QWORD PTR [rip+0x14ac]        # 0x14000d060
   14000bbb4:	test   eax,eax
   14000bbb6:	je     0x14000bbc0
   14000bbb8:	inc    rdi
   14000bbbb:	mov    QWORD PTR [rsp+0x28],rdi
   14000bbc0:	inc    rdi
   14000bbc3:	mov    QWORD PTR [rsp+0x28],rdi
   14000bbc8:	jmp    0x14000bb24
   14000bbcd:	mov    DWORD PTR [rip+0x14bbd],eax        # 0x140020790
   14000bbd3:	cmp    DWORD PTR [rip+0x14b9a],0x0        # 0x140020774
   14000bbda:	jne    0x14000bbe5
   14000bbdc:	mov    ecx,eax
   14000bbde:	call   QWORD PTR [rip+0x1484]        # 0x14000d068
   14000bbe4:	int3   
   14000bbe5:	cmp    DWORD PTR [rip+0x14ba8],0x0        # 0x140020794
   14000bbec:	jne    0x14000bbfa
   14000bbee:	call   QWORD PTR [rip+0x14ac]        # 0x14000d0a0
   14000bbf4:	mov    eax,DWORD PTR [rip+0x14b96]        # 0x140020790
   14000bbfa:	jmp    0x14000bc01
   14000bbfc:	mov    eax,0xff
   14000bc01:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000bc09:	add    rsp,0xa0
   14000bc10:	pop    rdi
   14000bc11:	ret    
   14000bc12:	int3   
   14000bc13:	int3   
   14000bc14:	sub    rsp,0x28
   14000bc18:	mov    eax,0x5a4d
   14000bc1d:	cmp    WORD PTR [rip+0xffffffffffff43dc],ax        # 0x140000000
   14000bc24:	je     0x14000bc2a
   14000bc26:	xor    eax,eax
   14000bc28:	jmp    0x14000bc79
   14000bc2a:	movsxd rcx,DWORD PTR [rip+0xffffffffffff440b]        # 0x14000003c
   14000bc31:	lea    rax,[rip+0xffffffffffff43c8]        # 0x140000000
   14000bc38:	add    rcx,rax
   14000bc3b:	cmp    DWORD PTR [rcx],0x4550
   14000bc41:	jne    0x14000bc26
   14000bc43:	movzx  eax,WORD PTR [rcx+0x18]
   14000bc47:	cmp    eax,0x10b
   14000bc4c:	je     0x14000bc68
   14000bc4e:	cmp    eax,0x20b
   14000bc53:	jne    0x14000bc26
   14000bc55:	xor    eax,eax
   14000bc57:	cmp    DWORD PTR [rcx+0x84],0xe
   14000bc5e:	jbe    0x14000bc79
   14000bc60:	cmp    DWORD PTR [rcx+0xf8],eax
   14000bc66:	jmp    0x14000bc76
   14000bc68:	xor    eax,eax
   14000bc6a:	cmp    DWORD PTR [rcx+0x74],0xe
   14000bc6e:	jbe    0x14000bc79
   14000bc70:	cmp    DWORD PTR [rcx+0xe8],eax
   14000bc76:	setne  al
   14000bc79:	mov    ecx,0x2
   14000bc7e:	mov    DWORD PTR [rip+0x14af0],eax        # 0x140020774
   14000bc84:	call   QWORD PTR [rip+0x1496]        # 0x14000d120
   14000bc8a:	or     rcx,0xffffffffffffffff
   14000bc8e:	call   QWORD PTR [rip+0x14a4]        # 0x14000d138
   14000bc94:	mov    rcx,QWORD PTR [rip+0x147d]        # 0x14000d118
   14000bc9b:	mov    QWORD PTR [rip+0x14b1e],rax        # 0x1400207c0
   14000bca2:	mov    QWORD PTR [rip+0x14b1f],rax        # 0x1400207c8
   14000bca9:	mov    eax,DWORD PTR [rip+0x14af9]        # 0x1400207a8
   14000bcaf:	mov    DWORD PTR [rcx],eax
   14000bcb1:	mov    rdx,QWORD PTR [rip+0x1458]        # 0x14000d110
   14000bcb8:	mov    eax,DWORD PTR [rip+0x14ae6]        # 0x1400207a4
   14000bcbe:	mov    DWORD PTR [rdx],eax
   14000bcc0:	call   0x14000be38
   14000bcc5:	call   0x14000bf80
   14000bcca:	cmp    DWORD PTR [rip+0x14a73],0x0        # 0x140020744
   14000bcd1:	jne    0x14000bce0
   14000bcd3:	lea    rcx,[rip+0x2a6]        # 0x14000bf80
   14000bcda:	call   QWORD PTR [rip+0x1428]        # 0x14000d108
   14000bce0:	cmp    DWORD PTR [rip+0x14a59],0xffffffff        # 0x140020740
   14000bce7:	jne    0x14000bcf2
   14000bce9:	or     ecx,0xffffffff
   14000bcec:	call   QWORD PTR [rip+0x140e]        # 0x14000d100
   14000bcf2:	xor    eax,eax
   14000bcf4:	add    rsp,0x28
   14000bcf8:	ret    
   14000bcf9:	int3   
   14000bcfa:	int3   
   14000bcfb:	int3   
   14000bcfc:	sub    rsp,0x28
   14000bd00:	call   0x14000bf84
   14000bd05:	add    rsp,0x28
   14000bd09:	jmp    0x14000ba0c
   14000bd0e:	int3   
   14000bd0f:	int3   
   14000bd10:	mov    QWORD PTR [rsp+0x10],rbx
   14000bd15:	mov    DWORD PTR [rsp+0x18],r8d
   14000bd1a:	mov    QWORD PTR [rsp+0x8],rcx
   14000bd1f:	push   rsi
   14000bd20:	push   rdi
   14000bd21:	push   r12
   14000bd23:	sub    rsp,0x40
   14000bd27:	mov    rsi,r9
   14000bd2a:	mov    edi,r8d
   14000bd2d:	mov    r12,rdx
   14000bd30:	mov    rbx,rcx
   14000bd33:	sub    edi,0x1
   14000bd36:	mov    DWORD PTR [rsp+0x70],edi
   14000bd3a:	js     0x14000bd4b
   14000bd3c:	sub    rbx,r12
   14000bd3f:	mov    QWORD PTR [rsp+0x60],rbx
   14000bd44:	mov    rcx,rbx
   14000bd47:	call   rsi
   14000bd49:	jmp    0x14000bd33
   14000bd4b:	jmp    0x14000bd4d
   14000bd4d:	mov    rbx,QWORD PTR [rsp+0x68]
   14000bd52:	add    rsp,0x40
   14000bd56:	pop    r12
   14000bd58:	pop    rdi
   14000bd59:	pop    rsi
   14000bd5a:	ret    
   14000bd5b:	int3   
   14000bd5c:	mov    rax,rsp
   14000bd5f:	mov    QWORD PTR [rax+0x20],r9
   14000bd63:	mov    DWORD PTR [rax+0x18],r8d
   14000bd67:	mov    QWORD PTR [rax+0x10],rdx
   14000bd6b:	push   rbx
   14000bd6c:	push   rsi
   14000bd6d:	push   rdi
   14000bd6e:	push   r12
   14000bd70:	sub    rsp,0x38
   14000bd74:	mov    r12,r9
   14000bd77:	movsxd rdi,r8d
   14000bd7a:	mov    rsi,rdx
   14000bd7d:	and    DWORD PTR [rax-0x38],0x0
   14000bd81:	mov    rbx,rdi
   14000bd84:	imul   rbx,rdx
   14000bd88:	add    rbx,rcx
   14000bd8b:	mov    QWORD PTR [rax+0x8],rbx
   14000bd8f:	sub    edi,0x1
   14000bd92:	mov    DWORD PTR [rsp+0x70],edi
   14000bd96:	js     0x14000bda8
   14000bd98:	sub    rbx,rsi
   14000bd9b:	mov    QWORD PTR [rsp+0x60],rbx
   14000bda0:	mov    rcx,rbx
   14000bda3:	call   r12
   14000bda6:	jmp    0x14000bd8f
   14000bda8:	mov    DWORD PTR [rsp+0x20],0x1
   14000bdb0:	add    rsp,0x38
   14000bdb4:	pop    r12
   14000bdb6:	pop    rdi
   14000bdb7:	pop    rsi
   14000bdb8:	pop    rbx
   14000bdb9:	ret    
   14000bdba:	jmp    QWORD PTR [rip+0x12f8]        # 0x14000d0b8
   14000bdc0:	jmp    QWORD PTR [rip+0x12ea]        # 0x14000d0b0
   14000bdc6:	jmp    QWORD PTR [rip+0x12dc]        # 0x14000d0a8
   14000bdcc:	jmp    QWORD PTR [rip+0x12c6]        # 0x14000d098
   14000bdd2:	int3   
   14000bdd3:	int3   
   14000bdd4:	sub    rsp,0x28
   14000bdd8:	mov    rax,QWORD PTR [rcx]
   14000bddb:	cmp    DWORD PTR [rax],0xe06d7363
   14000bde1:	jne    0x14000be0e
   14000bde3:	cmp    DWORD PTR [rax+0x18],0x4
   14000bde7:	jne    0x14000be0e
   14000bde9:	mov    eax,DWORD PTR [rax+0x20]
   14000bdec:	cmp    eax,0x19930520
   14000bdf1:	je     0x14000be08
   14000bdf3:	cmp    eax,0x19930521
   14000bdf8:	je     0x14000be08
   14000bdfa:	cmp    eax,0x19930522
   14000bdff:	je     0x14000be08
   14000be01:	cmp    eax,0x1994000
   14000be06:	jne    0x14000be0e
   14000be08:	call   0x14000c038
   14000be0d:	int3   
   14000be0e:	xor    eax,eax
   14000be10:	add    rsp,0x28
   14000be14:	ret    
   14000be15:	int3   
   14000be16:	int3   
   14000be17:	int3   
   14000be18:	sub    rsp,0x28
   14000be1c:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000bdd4
   14000be23:	call   QWORD PTR [rip+0x120f]        # 0x14000d038
   14000be29:	xor    eax,eax
   14000be2b:	add    rsp,0x28
   14000be2f:	ret    
   14000be30:	jmp    QWORD PTR [rip+0x124a]        # 0x14000d080
   14000be36:	int3   
   14000be37:	int3   
   14000be38:	mov    QWORD PTR [rsp+0x8],rbx
   14000be3d:	push   rdi
   14000be3e:	sub    rsp,0x20
   14000be42:	lea    rbx,[rip+0x8227]        # 0x140014070
   14000be49:	lea    rdi,[rip+0x8220]        # 0x140014070
   14000be50:	jmp    0x14000be60
   14000be52:	mov    rax,QWORD PTR [rbx]
   14000be55:	test   rax,rax
   14000be58:	je     0x14000be5c
   14000be5a:	call   rax
   14000be5c:	add    rbx,0x8
   14000be60:	cmp    rbx,rdi
   14000be63:	jb     0x14000be52
   14000be65:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be6a:	add    rsp,0x20
   14000be6e:	pop    rdi
   14000be6f:	ret    
   14000be70:	mov    QWORD PTR [rsp+0x8],rbx
   14000be75:	push   rdi
   14000be76:	sub    rsp,0x20
   14000be7a:	lea    rbx,[rip+0x81ff]        # 0x140014080
   14000be81:	lea    rdi,[rip+0x81f8]        # 0x140014080
   14000be88:	jmp    0x14000be98
   14000be8a:	mov    rax,QWORD PTR [rbx]
   14000be8d:	test   rax,rax
   14000be90:	je     0x14000be94
   14000be92:	call   rax
   14000be94:	add    rbx,0x8
   14000be98:	cmp    rbx,rdi
   14000be9b:	jb     0x14000be8a
   14000be9d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bea2:	add    rsp,0x20
   14000bea6:	pop    rdi
   14000bea7:	ret    
   14000bea8:	jmp    QWORD PTR [rip+0x11c2]        # 0x14000d070
   14000beae:	int3   
   14000beaf:	int3   
   14000beb0:	mov    rax,rcx
   14000beb3:	mov    ecx,0x5a4d
   14000beb8:	cmp    WORD PTR [rax],cx
   14000bebb:	je     0x14000bec0
   14000bebd:	xor    eax,eax
   14000bebf:	ret    
   14000bec0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000bec4:	add    rcx,rax
   14000bec7:	xor    eax,eax
   14000bec9:	cmp    DWORD PTR [rcx],0x4550
   14000becf:	jne    0x14000bedd
   14000bed1:	mov    edx,0x20b
   14000bed6:	cmp    WORD PTR [rcx+0x18],dx
   14000beda:	sete   al
   14000bedd:	repz ret 
   14000bedf:	int3   
   14000bee0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000bee4:	xor    r9d,r9d
   14000bee7:	mov    r10,rdx
   14000beea:	add    r8,rcx
   14000beed:	movzx  eax,WORD PTR [r8+0x14]
   14000bef2:	movzx  r11d,WORD PTR [r8+0x6]
   14000bef7:	lea    rcx,[rax+r8*1+0x18]
   14000befc:	test   r11d,r11d
   14000beff:	je     0x14000bf1f
   14000bf01:	mov    edx,DWORD PTR [rcx+0xc]
   14000bf04:	cmp    r10,rdx
   14000bf07:	jb     0x14000bf13
   14000bf09:	mov    eax,DWORD PTR [rcx+0x8]
   14000bf0c:	add    eax,edx
   14000bf0e:	cmp    r10,rax
   14000bf11:	jb     0x14000bf22
   14000bf13:	inc    r9d
   14000bf16:	add    rcx,0x28
   14000bf1a:	cmp    r9d,r11d
   14000bf1d:	jb     0x14000bf01
   14000bf1f:	xor    eax,eax
   14000bf21:	ret    
   14000bf22:	mov    rax,rcx
   14000bf25:	ret    
   14000bf26:	int3   
   14000bf27:	int3   
   14000bf28:	int3   
   14000bf29:	int3   
   14000bf2a:	int3   
   14000bf2b:	int3   
   14000bf2c:	int3   
   14000bf2d:	int3   
   14000bf2e:	int3   
   14000bf2f:	int3   
   14000bf30:	sub    rsp,0x28
   14000bf34:	mov    r8,rcx
   14000bf37:	lea    r9,[rip+0xffffffffffff40c2]        # 0x140000000
   14000bf3e:	mov    rcx,r9
   14000bf41:	call   0x14000beb0
   14000bf46:	test   eax,eax
   14000bf48:	je     0x14000bf6c
   14000bf4a:	sub    r8,r9
   14000bf4d:	mov    rdx,r8
   14000bf50:	mov    rcx,r9
   14000bf53:	call   0x14000bee0
   14000bf58:	test   rax,rax
   14000bf5b:	je     0x14000bf6c
   14000bf5d:	mov    eax,DWORD PTR [rax+0x24]
   14000bf60:	shr    eax,0x1f
   14000bf63:	not    eax
   14000bf65:	and    eax,0x1
   14000bf68:	jmp    0x14000bf6c
   14000bf6a:	xor    eax,eax
   14000bf6c:	add    rsp,0x28
   14000bf70:	ret    
   14000bf71:	int3   
   14000bf72:	jmp    QWORD PTR [rip+0x1178]        # 0x14000d0f0
   14000bf78:	jmp    QWORD PTR [rip+0x117a]        # 0x14000d0f8
   14000bf7e:	int3   
   14000bf7f:	int3   
   14000bf80:	xor    eax,eax
   14000bf82:	ret    
   14000bf83:	int3   
   14000bf84:	mov    QWORD PTR [rsp+0x18],rbx
   14000bf89:	push   rdi
   14000bf8a:	sub    rsp,0x20
   14000bf8e:	mov    rax,QWORD PTR [rip+0x147b3]        # 0x140020748
   14000bf95:	and    QWORD PTR [rsp+0x30],0x0
   14000bf9b:	movabs rdi,0x2b992ddfa232
   14000bfa5:	cmp    rax,rdi
   14000bfa8:	je     0x14000bfb6
   14000bfaa:	not    rax
   14000bfad:	mov    QWORD PTR [rip+0x1479c],rax        # 0x140020750
   14000bfb4:	jmp    0x14000c02c
   14000bfb6:	lea    rcx,[rsp+0x30]
   14000bfbb:	call   QWORD PTR [rip+0x104f]        # 0x14000d010
   14000bfc1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bfc6:	call   QWORD PTR [rip+0x104c]        # 0x14000d018
   14000bfcc:	mov    r11d,eax
   14000bfcf:	xor    rbx,r11
   14000bfd2:	call   QWORD PTR [rip+0x1048]        # 0x14000d020
   14000bfd8:	mov    r11d,eax
   14000bfdb:	xor    rbx,r11
   14000bfde:	call   QWORD PTR [rip+0x1044]        # 0x14000d028
   14000bfe4:	lea    rcx,[rsp+0x38]
   14000bfe9:	mov    r11d,eax
   14000bfec:	xor    rbx,r11
   14000bfef:	call   QWORD PTR [rip+0x103b]        # 0x14000d030
   14000bff5:	mov    r11,QWORD PTR [rsp+0x38]
   14000bffa:	xor    r11,rbx
   14000bffd:	movabs rax,0xffffffffffff
   14000c007:	and    r11,rax
   14000c00a:	movabs rax,0x2b992ddfa233
   14000c014:	cmp    r11,rdi
   14000c017:	cmove  r11,rax
   14000c01b:	mov    QWORD PTR [rip+0x14726],r11        # 0x140020748
   14000c022:	not    r11
   14000c025:	mov    QWORD PTR [rip+0x14724],r11        # 0x140020750
   14000c02c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c031:	add    rsp,0x20
   14000c035:	pop    rdi
   14000c036:	ret    
   14000c037:	int3   
   14000c038:	jmp    QWORD PTR [rip+0x10f2]        # 0x14000d130
   14000c03e:	jmp    QWORD PTR [rip+0x10fc]        # 0x14000d140
   14000c044:	int3   
   14000c045:	int3   
   14000c046:	int3   
   14000c047:	int3   
   14000c048:	int3   
   14000c049:	int3   
   14000c04a:	int3   
   14000c04b:	int3   
   14000c04c:	int3   
   14000c04d:	int3   
   14000c04e:	int3   
   14000c04f:	int3   
   14000c050:	mov    rax,rsp
   14000c053:	mov    QWORD PTR [rax+0x8],rbx
   14000c057:	mov    QWORD PTR [rax+0x10],rbp
   14000c05b:	mov    QWORD PTR [rax+0x18],rsi
   14000c05f:	mov    QWORD PTR [rax+0x20],rdi
   14000c063:	push   r12
   14000c065:	sub    rsp,0x40
   14000c069:	xor    r12d,r12d
   14000c06c:	mov    rsi,rdx
   14000c06f:	mov    r8,rdx
   14000c072:	mov    QWORD PTR [rax-0x10],r12
   14000c076:	mov    QWORD PTR [rax-0x18],r12
   14000c07a:	mov    DWORD PTR [rax-0x20],r12d
   14000c07e:	or     r9d,0xffffffff
   14000c082:	xor    edx,edx
   14000c084:	mov    QWORD PTR [rax-0x28],r12
   14000c088:	mov    ebp,ecx
   14000c08a:	call   QWORD PTR [rip+0xf78]        # 0x14000d008
   14000c090:	movsxd rbx,eax
   14000c093:	mov    rcx,rbx
   14000c096:	call   0x14000c1f0
   14000c09b:	mov    QWORD PTR [rsp+0x38],r12
   14000c0a0:	mov    QWORD PTR [rsp+0x30],r12
   14000c0a5:	or     r9d,0xffffffff
   14000c0a9:	mov    r8,rsi
   14000c0ac:	xor    edx,edx
   14000c0ae:	mov    ecx,ebp
   14000c0b0:	mov    DWORD PTR [rsp+0x28],ebx
   14000c0b4:	mov    rdi,rax
   14000c0b7:	mov    QWORD PTR [rsp+0x20],rax
   14000c0bc:	call   QWORD PTR [rip+0xf46]        # 0x14000d008
   14000c0c2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c0c7:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c0cc:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c0d1:	mov    rax,rdi
   14000c0d4:	mov    rdi,QWORD PTR [rsp+0x68]
   14000c0d9:	add    rsp,0x40
   14000c0dd:	pop    r12
   14000c0df:	ret    
   14000c0e0:	push   r13
   14000c0e2:	sub    rsp,0x40
   14000c0e6:	call   QWORD PTR [rip+0xf14]        # 0x14000d000
   14000c0ec:	lea    rdx,[rsp+0x20]
   14000c0f1:	mov    rcx,rax
   14000c0f4:	call   QWORD PTR [rip+0x26c6]        # 0x14000e7c0
   14000c0fa:	mov    r13,rax
   14000c0fd:	test   rax,rax
   14000c100:	jne    0x14000c10c
   14000c102:	or     eax,0xffffffff
   14000c105:	add    rsp,0x40
   14000c109:	pop    r13
   14000c10b:	ret    
   14000c10c:	mov    eax,DWORD PTR [rsp+0x20]
   14000c110:	mov    QWORD PTR [rsp+0x50],rbx
   14000c115:	mov    QWORD PTR [rsp+0x60],rsi
   14000c11a:	inc    eax
   14000c11c:	mov    QWORD PTR [rsp+0x38],rdi
   14000c121:	mov    QWORD PTR [rsp+0x30],r12
   14000c126:	movsxd rcx,eax
   14000c129:	mov    eax,0x8
   14000c12e:	mul    rcx
   14000c131:	mov    rcx,0xffffffffffffffff
   14000c138:	cmovo  rax,rcx
   14000c13c:	mov    rcx,rax
   14000c13f:	call   0x14000c1f0
   14000c144:	mov    ecx,DWORD PTR [rsp+0x20]
   14000c148:	xor    edi,edi
   14000c14a:	mov    r12,rax
   14000c14d:	mov    esi,edi
   14000c14f:	test   ecx,ecx
   14000c151:	jle    0x14000c183
   14000c153:	mov    QWORD PTR [rsp+0x58],rbp
   14000c158:	mov    rbp,r13
   14000c15b:	mov    rbx,rax
   14000c15e:	sub    rbp,rax
   14000c161:	mov    rdx,QWORD PTR [rbx+rbp*1]
   14000c165:	xor    ecx,ecx
   14000c167:	call   0x14000c050
   14000c16c:	inc    esi
   14000c16e:	add    rbx,0x8
   14000c172:	mov    QWORD PTR [rbx-0x8],rax
   14000c176:	mov    ecx,DWORD PTR [rsp+0x20]
   14000c17a:	cmp    esi,ecx
   14000c17c:	jl     0x14000c161
   14000c17e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c183:	movsxd rax,ecx
   14000c186:	mov    rcx,r13
   14000c189:	mov    QWORD PTR [r12+rax*8],rdi
   14000c18d:	call   QWORD PTR [rip+0xebd]        # 0x14000d050
   14000c193:	mov    ecx,DWORD PTR [rsp+0x20]
   14000c197:	mov    rdx,r12
   14000c19a:	call   0x14000a100
   14000c19f:	cmp    DWORD PTR [rsp+0x20],edi
   14000c1a3:	mov    esi,eax
   14000c1a5:	jle    0x14000c1c9
   14000c1a7:	mov    rbx,r12
   14000c1aa:	nop    WORD PTR [rax+rax*1+0x0]
   14000c1b0:	mov    rcx,QWORD PTR [rbx]
   14000c1b3:	test   rcx,rcx
   14000c1b6:	je     0x14000c1c9
   14000c1b8:	call   0x14000c1f6
   14000c1bd:	inc    edi
   14000c1bf:	add    rbx,0x8
   14000c1c3:	cmp    edi,DWORD PTR [rsp+0x20]
   14000c1c7:	jl     0x14000c1b0
   14000c1c9:	mov    rcx,r12
   14000c1cc:	call   0x14000c1f6
   14000c1d1:	mov    r12,QWORD PTR [rsp+0x30]
   14000c1d6:	mov    rdi,QWORD PTR [rsp+0x38]
   14000c1db:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c1e0:	mov    eax,esi
   14000c1e2:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c1e7:	add    rsp,0x40
   14000c1eb:	pop    r13
   14000c1ed:	ret    
   14000c1ee:	int3   
   14000c1ef:	int3   
   14000c1f0:	jmp    0x14000b8c2
   14000c1f5:	int3   
   14000c1f6:	jmp    QWORD PTR [rip+0xf2c]        # 0x14000d128
   14000c1fc:	int3   
   14000c1fd:	int3   
   14000c1fe:	int3   
   14000c1ff:	int3   
   14000c200:	rex push rbp
   14000c202:	sub    rsp,0x20
   14000c206:	mov    rbp,rdx
   14000c209:	mov    ecx,0x8
   14000c20e:	call   0x14000bdc0
   14000c213:	add    rsp,0x20
   14000c217:	pop    rbp
   14000c218:	ret    
   14000c219:	rex push rbp
   14000c21b:	sub    rsp,0x20
   14000c21f:	mov    rbp,rdx
   14000c222:	mov    rax,QWORD PTR [rcx]
   14000c225:	mov    rdx,rcx
   14000c228:	mov    ecx,DWORD PTR [rax]
   14000c22a:	call   0x14000bea8
   14000c22f:	add    rsp,0x20
   14000c233:	pop    rbp
   14000c234:	ret    
   14000c235:	rex push rbp
   14000c237:	sub    rsp,0x20
   14000c23b:	mov    rbp,rdx
   14000c23e:	mov    QWORD PTR [rbp+0x38],rcx
   14000c242:	mov    QWORD PTR [rbp+0x28],rcx
   14000c246:	mov    rax,QWORD PTR [rbp+0x28]
   14000c24a:	mov    rcx,QWORD PTR [rax]
   14000c24d:	mov    QWORD PTR [rbp+0x30],rcx
   14000c251:	mov    rax,QWORD PTR [rbp+0x30]
   14000c255:	cmp    DWORD PTR [rax],0xe06d7363
   14000c25b:	je     0x14000c269
   14000c25d:	mov    DWORD PTR [rbp+0x20],0x0
   14000c264:	mov    eax,DWORD PTR [rbp+0x20]
   14000c267:	jmp    0x14000c26e
   14000c269:	call   0x14000c038
   14000c26e:	add    rsp,0x20
   14000c272:	pop    rbp
   14000c273:	ret    
   14000c274:	rex push rbp
   14000c276:	sub    rsp,0x20
   14000c27a:	mov    rbp,rdx
   14000c27d:	cmp    DWORD PTR [rbp+0x20],0x0
   14000c281:	jne    0x14000c298
   14000c283:	mov    r9,QWORD PTR [rbp+0x78]
   14000c287:	mov    r8d,DWORD PTR [rbp+0x70]
   14000c28b:	mov    rdx,QWORD PTR [rbp+0x68]
   14000c28f:	mov    rcx,QWORD PTR [rbp+0x60]
   14000c293:	call   0x14000bd10
   14000c298:	add    rsp,0x20
   14000c29c:	pop    rbp
   14000c29d:	ret    
   14000c29e:	int3   
   14000c29f:	int3   
   14000c2a0:	rex push rbp
   14000c2a2:	sub    rsp,0x20
   14000c2a6:	mov    rbp,rdx
   14000c2a9:	mov    rax,QWORD PTR [rcx]
   14000c2ac:	xor    ecx,ecx
   14000c2ae:	cmp    DWORD PTR [rax],0xc0000005
   14000c2b4:	sete   cl
   14000c2b7:	mov    eax,ecx
   14000c2b9:	mov    eax,ecx
   14000c2bb:	add    rsp,0x20
   14000c2bf:	pop    rbp
   14000c2c0:	ret    
   14000c2c1:	int3   
   14000c2c2:	int3   
   14000c2c3:	int3   
   14000c2c4:	int3   
   14000c2c5:	int3   
   14000c2c6:	int3   
   14000c2c7:	int3   
   14000c2c8:	int3   
   14000c2c9:	int3   
   14000c2ca:	int3   
   14000c2cb:	int3   
   14000c2cc:	int3   
   14000c2cd:	int3   
   14000c2ce:	int3   
   14000c2cf:	int3   
   14000c2d0:	sub    rsp,0x28
   14000c2d4:	lea    r9,[rip+0x52e5]        # 0x1400115c0
   14000c2db:	lea    r8,[rip+0x5e1e]        # 0x140012100
   14000c2e2:	lea    rdx,[rip+0x5eb7]        # 0x1400121a0
   14000c2e9:	mov    ecx,0x1
   14000c2ee:	call   0x14000b84a
   14000c2f3:	lea    rcx,[rip+0x76]        # 0x14000c370
   14000c2fa:	add    rsp,0x28
   14000c2fe:	jmp    0x14000b98c
   14000c303:	int3   
   14000c304:	int3   
   14000c305:	int3   
   14000c306:	int3   
   14000c307:	int3   
   14000c308:	int3   
   14000c309:	int3   
   14000c30a:	int3   
   14000c30b:	int3   
   14000c30c:	int3   
   14000c30d:	int3   
   14000c30e:	int3   
   14000c30f:	int3   
   14000c310:	mov    rax,QWORD PTR [rip+0x1a11]        # 0x14000dd28
   14000c317:	mov    QWORD PTR [rip+0x142b2],rax        # 0x1400205d0
   14000c31e:	ret    
   14000c31f:	int3   
   14000c320:	mov    rax,QWORD PTR [rip+0xe39]        # 0x14000d160
   14000c327:	mov    QWORD PTR [rip+0x142da],rax        # 0x140020608
   14000c32e:	ret    
   14000c32f:	int3   
   14000c330:	mov    rax,QWORD PTR [rip+0x14f9]        # 0x14000d830
   14000c337:	mov    QWORD PTR [rip+0x14302],rax        # 0x140020640
   14000c33e:	ret    
   14000c33f:	int3   
   14000c340:	mov    rax,QWORD PTR [rip+0x19f9]        # 0x14000dd40
   14000c347:	mov    QWORD PTR [rip+0x1432a],rax        # 0x140020678
   14000c34e:	ret    
   14000c34f:	int3   
   14000c350:	mov    rax,QWORD PTR [rip+0x1a01]        # 0x14000dd58
   14000c357:	mov    QWORD PTR [rip+0x14352],rax        # 0x1400206b0
   14000c35e:	ret    
   14000c35f:	int3   
   14000c360:	mov    rax,QWORD PTR [rip+0x1a09]        # 0x14000dd70
   14000c367:	mov    QWORD PTR [rip+0x1437a],rax        # 0x1400206e8
   14000c36e:	ret    
   14000c36f:	int3   
   14000c370:	lea    r9,[rip+0x5249]        # 0x1400115c0
   14000c377:	lea    r8,[rip+0x5d82]        # 0x140012100
   14000c37e:	lea    rdx,[rip+0x5e1b]        # 0x1400121a0
   14000c385:	mov    ecx,0x1
   14000c38a:	jmp    0x14000b850

Disassembly of section .rdata:

000000014000d000 <.rdata>:
   14000d000:	fs cmc 
   14000d002:	add    DWORD PTR [rax],eax
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	rex.X cmc 
   14000d00a:	add    DWORD PTR [rax],eax
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	out    0xf4,al
   14000d012:	add    DWORD PTR [rax],eax
   14000d014:	add    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	shl    ah,1
   14000d01a:	add    DWORD PTR [rax],eax
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	mov    edx,0x1f4
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rdx+0x1f4],ch
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    BYTE PTR [rax+0x1f4],dl
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rdx-0xc],dh
   14000d03a:	add    DWORD PTR [rax],eax
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	(bad)  
   14000d041:	hlt    
   14000d042:	add    DWORD PTR [rax],eax
   14000d044:	add    BYTE PTR [rax],al
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	pop    rax
   14000d049:	hlt    
   14000d04a:	add    DWORD PTR [rax],eax
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	pop    rax
   14000d051:	cmc    
   14000d052:	add    DWORD PTR [rax],eax
	...
   14000d060:	js     0x14000d055
   14000d062:	add    DWORD PTR [rax],eax
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	jo     0x14000d05d
   14000d06a:	add    DWORD PTR [rax],eax
   14000d06c:	add    BYTE PTR [rax],al
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	(bad)  
   14000d072:	add    DWORD PTR [rax],eax
   14000d074:	add    BYTE PTR [rax],al
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	push   rdx
   14000d079:	repz add DWORD PTR [rax],eax
   14000d07c:	add    BYTE PTR [rax],al
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	rex.R
   14000d081:	repz add DWORD PTR [rax],eax
   14000d084:	add    BYTE PTR [rax],al
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	xor    dh,bl
   14000d08a:	add    DWORD PTR [rax],eax
   14000d08c:	add    BYTE PTR [rax],al
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	sub    bl,dh
   14000d092:	add    DWORD PTR [rax],eax
   14000d094:	add    BYTE PTR [rax],al
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	and    bl,dh
   14000d09a:	add    DWORD PTR [rax],eax
   14000d09c:	add    BYTE PTR [rax],al
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	xchg   bl,dh
   14000d0a2:	add    DWORD PTR [rax],eax
   14000d0a4:	add    BYTE PTR [rax],al
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	add    bl,dh
   14000d0aa:	add    DWORD PTR [rax],eax
   14000d0ac:	add    BYTE PTR [rax],al
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	div    dl
   14000d0b2:	add    DWORD PTR [rax],eax
   14000d0b4:	add    BYTE PTR [rax],al
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	fdivrp st(2),st
   14000d0ba:	add    DWORD PTR [rax],eax
   14000d0bc:	add    BYTE PTR [rax],al
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	enter  0x1f2,0x0
   14000d0c4:	add    BYTE PTR [rax],al
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	mov    esi,0x1f2
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    BYTE PTR [rsi+0x1f2],ch
   14000d0d5:	add    BYTE PTR [rax],al
   14000d0d7:	add    BYTE PTR [rdx+rsi*8+0x1],bl
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	nop
   14000d0e1:	repz add DWORD PTR [rax],eax
   14000d0e4:	add    BYTE PTR [rax],al
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	cwde   
   14000d0e9:	repz add DWORD PTR [rax],eax
   14000d0ec:	add    BYTE PTR [rax],al
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	movabs ds:0xae000000000001f3,al
   14000d0f9:	repz add DWORD PTR [rax],eax
   14000d0fc:	add    BYTE PTR [rax],al
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	mov    esp,0x1f3
   14000d105:	add    BYTE PTR [rax],al
   14000d107:	add    dl,dl
   14000d109:	repz add DWORD PTR [rax],eax
   14000d10c:	add    BYTE PTR [rax],al
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	out    0xf3,al
   14000d112:	add    DWORD PTR [rax],eax
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	repnz repz add DWORD PTR [rax],eax
   14000d11c:	add    BYTE PTR [rax],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	cld    
   14000d121:	repz add DWORD PTR [rax],eax
   14000d124:	add    BYTE PTR [rax],al
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	xor    ch,dh
   14000d12a:	add    DWORD PTR [rax],eax
   14000d12c:	add    BYTE PTR [rax],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	(bad)  
   14000d131:	hlt    
   14000d132:	add    DWORD PTR [rax],eax
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	(bad)  
   14000d139:	repz add DWORD PTR [rax],eax
   14000d13c:	add    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	and    dh,ah
   14000d142:	add    DWORD PTR [rax],eax
	...
   14000d150:	or     dh,dl
   14000d152:	add    DWORD PTR [rax],eax
   14000d154:	add    BYTE PTR [rax],al
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	(bad)  
   14000d159:	icebp  
   14000d15a:	add    DWORD PTR [rax],eax
   14000d15c:	add    BYTE PTR [rax],al
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	(bad)  
   14000d161:	icebp  
   14000d162:	add    DWORD PTR [rax],eax
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	push   rdx
   14000d169:	icebp  
   14000d16a:	add    DWORD PTR [rax],eax
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	sbb    cl,dh
   14000d172:	add    DWORD PTR [rax],eax
   14000d174:	add    BYTE PTR [rax],al
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	out    0xf0,al
   14000d17a:	add    DWORD PTR [rax],eax
   14000d17c:	add    BYTE PTR [rax],al
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	lods   al,BYTE PTR ds:[rsi]
   14000d181:	lock add DWORD PTR [rax],eax
   14000d184:	add    BYTE PTR [rax],al
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	(bad)  
   14000d189:	lock add DWORD PTR [rax],eax
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	pop    rdx
   14000d191:	lock add DWORD PTR [rax],eax
   14000d194:	add    BYTE PTR [rax],al
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	(bad)  
   14000d199:	lock add DWORD PTR [rax],eax
   14000d19c:	add    BYTE PTR [rax],al
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	loop   0x14000d191
   14000d1a2:	add    DWORD PTR [rax],eax
   14000d1a4:	add    BYTE PTR [rax],al
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	scas   al,BYTE PTR es:[rdi]
   14000d1a9:	out    dx,eax
   14000d1aa:	add    DWORD PTR [rax],eax
   14000d1ac:	add    BYTE PTR [rax],al
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	mov    ch,bh
   14000d1b2:	add    DWORD PTR [rax],eax
   14000d1b4:	add    BYTE PTR [rax],al
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	fs out dx,eax
   14000d1ba:	add    DWORD PTR [rax],eax
   14000d1bc:	add    BYTE PTR [rax],al
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	ss out dx,eax
   14000d1c2:	add    DWORD PTR [rax],eax
   14000d1c4:	add    BYTE PTR [rax],al
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	(bad)  
   14000d1c9:	out    dx,eax
   14000d1ca:	add    DWORD PTR [rax],eax
   14000d1cc:	add    BYTE PTR [rax],al
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	(bad)  
   14000d1d1:	out    dx,al
   14000d1d2:	add    DWORD PTR [rax],eax
   14000d1d4:	add    BYTE PTR [rax],al
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	(bad)  
   14000d1da:	add    DWORD PTR [rax],eax
   14000d1dc:	add    BYTE PTR [rax],al
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	(bad)  
   14000d1e1:	out    dx,al
   14000d1e2:	add    DWORD PTR [rax],eax
   14000d1e4:	add    BYTE PTR [rax],al
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	rex.R out dx,al
   14000d1ea:	add    DWORD PTR [rax],eax
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	and    al,0xee
   14000d1f2:	add    DWORD PTR [rax],eax
   14000d1f4:	add    BYTE PTR [rax],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	add    ch,dh
   14000d1fa:	add    DWORD PTR [rax],eax
   14000d1fc:	add    BYTE PTR [rax],al
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	mov    esi,0x1ed
   14000d205:	add    BYTE PTR [rax],al
   14000d207:	add    BYTE PTR [rax-0x13],bh
   14000d20a:	add    DWORD PTR [rax],eax
   14000d20c:	add    BYTE PTR [rax],al
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	rex.WR in eax,dx
   14000d212:	add    DWORD PTR [rax],eax
   14000d214:	add    BYTE PTR [rax],al
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	sub    ch,ch
   14000d21a:	add    DWORD PTR [rax],eax
   14000d21c:	add    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	lock in al,dx
   14000d222:	add    DWORD PTR [rax],eax
   14000d224:	add    BYTE PTR [rax],al
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	int3   
   14000d229:	in     al,dx
   14000d22a:	add    DWORD PTR [rax],eax
   14000d22c:	add    BYTE PTR [rax],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	(bad)  
   14000d231:	in     al,dx
   14000d232:	add    DWORD PTR [rax],eax
   14000d234:	add    BYTE PTR [rax],al
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	cmp    al,0xec
   14000d23a:	add    DWORD PTR [rax],eax
   14000d23c:	add    BYTE PTR [rax],al
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	(bad)  
   14000d241:	jmp    0x14000d244
   14000d243:	add    BYTE PTR [rax],al
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rdx+0x1eb],bl
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rbx+rbp*8+0x1],dl
   14000d253:	add    BYTE PTR [rax],al
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    BYTE PTR [rax],dl
   14000d259:	jmp    0x14000d25c
   14000d25b:	add    BYTE PTR [rax],al
   14000d25d:	add    BYTE PTR [rax],al
   14000d25f:	add    dh,al
   14000d261:	(bad)  
   14000d262:	add    DWORD PTR [rax],eax
   14000d264:	add    BYTE PTR [rax],al
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	sahf   
   14000d269:	(bad)  
   14000d26a:	add    DWORD PTR [rax],eax
   14000d26c:	add    BYTE PTR [rax],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	jbe    0x14000d25c
   14000d272:	add    DWORD PTR [rax],eax
   14000d274:	add    BYTE PTR [rax],al
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	xor    al,0xea
   14000d27a:	add    DWORD PTR [rax],eax
   14000d27c:	add    BYTE PTR [rax],al
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	mov    ah,0xe9
   14000d282:	add    DWORD PTR [rax],eax
   14000d284:	add    BYTE PTR [rax],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	jbe    0x14000d273
   14000d28a:	add    DWORD PTR [rax],eax
   14000d28c:	add    BYTE PTR [rax],al
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	ds jmp 0x14000d297
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	call   0x14000d485
   14000d29d:	add    BYTE PTR [rax],al
   14000d29f:	add    BYTE PTR [rsi+0x1e8],ah
   14000d2a5:	add    BYTE PTR [rax],al
   14000d2a7:	add    BYTE PTR [rax-0x18],ch
   14000d2aa:	add    DWORD PTR [rax],eax
   14000d2ac:	add    BYTE PTR [rax],al
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	and    al,0xe8
   14000d2b2:	add    DWORD PTR [rax],eax
   14000d2b4:	add    BYTE PTR [rax],al
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	loop   0x14000d2a1
   14000d2ba:	add    DWORD PTR [rax],eax
   14000d2bc:	add    BYTE PTR [rax],al
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	sahf   
   14000d2c1:	out    0x1,eax
   14000d2c3:	add    BYTE PTR [rax],al
   14000d2c5:	add    BYTE PTR [rax],al
   14000d2c7:	add    BYTE PTR [rdi+riz*8+0x1],bl
   14000d2cb:	add    BYTE PTR [rax],al
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    BYTE PTR [rax],cl
   14000d2d1:	out    0x1,eax
   14000d2d3:	add    BYTE PTR [rax],al
   14000d2d5:	add    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rdx+0x1e6],dh
   14000d2dd:	add    BYTE PTR [rax],al
   14000d2df:	add    BYTE PTR [rsi-0x1a],cl
   14000d2e2:	add    DWORD PTR [rax],eax
   14000d2e4:	add    BYTE PTR [rax],al
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	(bad)  
   14000d2e9:	in     eax,0x1
   14000d2eb:	add    BYTE PTR [rax],al
   14000d2ed:	add    BYTE PTR [rax],al
   14000d2ef:	add    BYTE PTR [rbp+riz*8+0x1],dl
   14000d2f6:	add    BYTE PTR [rax],al
   14000d2f8:	pop    rax
   14000d2f9:	in     eax,0x1
   14000d2fb:	add    BYTE PTR [rax],al
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    BYTE PTR [rax],al
   14000d301:	in     eax,0x1
   14000d303:	add    BYTE PTR [rax],al
   14000d305:	add    BYTE PTR [rax],al
   14000d307:	add    BYTE PTR [rsi+0x1e4],ch
   14000d30d:	add    BYTE PTR [rax],al
   14000d30f:	add    BYTE PTR [rdx-0x1c],bl
   14000d312:	add    DWORD PTR [rax],eax
   14000d314:	add    BYTE PTR [rax],al
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	(bad)  
   14000d319:	in     al,0x1
   14000d31b:	add    BYTE PTR [rax],al
   14000d31d:	add    BYTE PTR [rax],al
   14000d31f:	add    al,cl
   14000d321:	jrcxz  0x14000d324
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rax+0x1e3],cl
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    BYTE PTR [rax-0x1d],cl
   14000d332:	add    DWORD PTR [rax],eax
   14000d334:	add    BYTE PTR [rax],al
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	or     al,0xe3
   14000d33a:	add    DWORD PTR [rax],eax
   14000d33c:	add    BYTE PTR [rax],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	retf   0x1e2
   14000d343:	add    BYTE PTR [rax],al
   14000d345:	add    BYTE PTR [rax],al
   14000d347:	add    BYTE PTR [rdx+riz*8+0x1],cl
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	rex.WR loop 0x14000d354
   14000d353:	add    BYTE PTR [rax],al
   14000d355:	add    BYTE PTR [rax],al
   14000d357:	add    BYTE PTR [rdx],bl
   14000d359:	loop   0x14000d35c
   14000d35b:	add    BYTE PTR [rax],al
   14000d35d:	add    BYTE PTR [rax],al
   14000d35f:	add    al,al
   14000d361:	loope  0x14000d364
   14000d363:	add    BYTE PTR [rax],al
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rsi+0x1e1],dl
   14000d36d:	add    BYTE PTR [rax],al
   14000d36f:	add    BYTE PTR [rcx+riz*8+0x1],dl
   14000d373:	add    BYTE PTR [rax],al
   14000d375:	add    BYTE PTR [rax],al
   14000d377:	add    BYTE PTR [rsi],ah
   14000d379:	loope  0x14000d37c
   14000d37b:	add    BYTE PTR [rax],al
   14000d37d:	add    BYTE PTR [rax],al
   14000d37f:	add    ah,ah
   14000d381:	loopne 0x14000d384
   14000d383:	add    BYTE PTR [rax],al
   14000d385:	add    BYTE PTR [rax],al
   14000d387:	add    BYTE PTR [rsi+0x1e0],dh
   14000d38d:	add    BYTE PTR [rax],al
   14000d38f:	add    BYTE PTR [rax+riz*8+0x1],dl
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	jo     0x14000d37a
   14000d39a:	add    DWORD PTR [rax],eax
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	rex.R loopne 0x14000d3a4
   14000d3a3:	add    BYTE PTR [rax],al
   14000d3a5:	add    BYTE PTR [rax],al
   14000d3a7:	add    BYTE PTR [rsi],ah
   14000d3a9:	loopne 0x14000d3ac
   14000d3ab:	add    BYTE PTR [rax],al
   14000d3ad:	add    BYTE PTR [rax],al
   14000d3af:	add    dh,bh
   14000d3b1:	fild   WORD PTR [rcx]
   14000d3b3:	add    BYTE PTR [rax],al
   14000d3b5:	add    BYTE PTR [rax],al
   14000d3b7:	add    al,ch
   14000d3b9:	fild   WORD PTR [rcx]
   14000d3bb:	add    BYTE PTR [rax],al
   14000d3bd:	add    BYTE PTR [rax],al
   14000d3bf:	add    BYTE PTR [rdx+0x1df],bh
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	add    BYTE PTR [rsi+0x1df],bl
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    BYTE PTR [rdi+rbx*8+0x1],cl
   14000d3d3:	add    BYTE PTR [rax],al
   14000d3d5:	add    BYTE PTR [rax],al
   14000d3d7:	add    BYTE PTR [rsi],ch
   14000d3d9:	fild   WORD PTR [rcx]
   14000d3db:	add    BYTE PTR [rax],al
   14000d3dd:	add    BYTE PTR [rax],al
   14000d3df:	add    BYTE PTR [rdi+rbx*8],cl
   14000d3e2:	add    DWORD PTR [rax],eax
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	call   0x14000d5cb
   14000d3ed:	add    BYTE PTR [rax],al
   14000d3ef:	add    BYTE PTR [rsi+0x1de],bh
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    BYTE PTR [rdx+0x1de],bl
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rsi-0x22],dh
   14000d402:	add    DWORD PTR [rax],eax
   14000d404:	add    BYTE PTR [rax],al
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	rex.WRX fiadd WORD PTR [rcx]
   14000d40b:	add    BYTE PTR [rax],al
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rsi],ah
   14000d411:	fiadd  WORD PTR [rcx]
   14000d413:	add    BYTE PTR [rax],al
   14000d415:	add    BYTE PTR [rax],al
   14000d417:	add    BYTE PTR [rsi],al
   14000d419:	fiadd  WORD PTR [rcx]
   14000d41b:	add    BYTE PTR [rax],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    dl,ah
   14000d421:	fld    QWORD PTR [rcx]
   14000d423:	add    BYTE PTR [rax],al
   14000d425:	add    BYTE PTR [rax],al
   14000d427:	add    BYTE PTR [rdx+0x1dd],dh
   14000d42d:	add    BYTE PTR [rax],al
   14000d42f:	add    BYTE PTR [rbp+rbx*8+0x1],bh
   14000d433:	add    BYTE PTR [rax],al
   14000d435:	add    BYTE PTR [rax],al
   14000d437:	add    BYTE PTR [rdx-0x23],cl
   14000d43a:	add    DWORD PTR [rax],eax
   14000d43c:	add    BYTE PTR [rax],al
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	(bad)  
   14000d441:	fld    QWORD PTR [rcx]
   14000d443:	add    BYTE PTR [rax],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	add    ah,ch
   14000d449:	fadd   QWORD PTR [rcx]
   14000d44b:	add    BYTE PTR [rax],al
   14000d44d:	add    BYTE PTR [rax],al
   14000d44f:	add    BYTE PTR [rsp+rbx*8+0x1],ch
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	mov    bl,ah
   14000d45a:	add    DWORD PTR [rax],eax
   14000d45c:	add    BYTE PTR [rax],al
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	push   0x1dc
   14000d465:	add    BYTE PTR [rax],al
   14000d467:	add    BYTE PTR [rsi-0x24],al
   14000d46a:	add    DWORD PTR [rax],eax
   14000d46c:	add    BYTE PTR [rax],al
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	sbb    bl,ah
   14000d472:	add    DWORD PTR [rax],eax
   14000d474:	add    BYTE PTR [rax],al
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	(bad)  
   14000d479:	fild   DWORD PTR [rcx]
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    dl,dl
   14000d481:	fild   DWORD PTR [rcx]
   14000d483:	add    BYTE PTR [rax],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    BYTE PTR [rsi+0x1db],bl
   14000d48d:	add    BYTE PTR [rax],al
   14000d48f:	add    BYTE PTR [rax-0x25],bh
   14000d492:	add    DWORD PTR [rax],eax
   14000d494:	add    BYTE PTR [rax],al
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	push   rsp
   14000d499:	fild   DWORD PTR [rcx]
   14000d49b:	add    BYTE PTR [rax],al
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rdx],ah
   14000d4a1:	fild   DWORD PTR [rcx]
   14000d4a3:	add    BYTE PTR [rax],al
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	add    BYTE PTR [rdx],al
   14000d4a9:	fild   DWORD PTR [rcx]
   14000d4ab:	add    BYTE PTR [rax],al
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    ah,ah
   14000d4b1:	fiadd  DWORD PTR [rcx]
   14000d4b3:	add    BYTE PTR [rax],al
   14000d4b5:	add    BYTE PTR [rax],al
   14000d4b7:	add    BYTE PTR [rdx+rbx*8+0x1],dh
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	sbb    dl,0x1
   14000d4c3:	add    BYTE PTR [rax],al
   14000d4c5:	add    BYTE PTR [rax],al
   14000d4c7:	add    BYTE PTR [rdx-0x26],al
   14000d4ca:	add    DWORD PTR [rax],eax
   14000d4cc:	add    BYTE PTR [rax],al
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	sub    dl,bl
   14000d4d2:	add    DWORD PTR [rax],eax
   14000d4d4:	add    BYTE PTR [rax],al
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	in     al,dx
   14000d4d9:	fld    DWORD PTR [rcx]
   14000d4db:	add    BYTE PTR [rax],al
   14000d4dd:	add    BYTE PTR [rax],al
   14000d4df:	add    al,cl
   14000d4e1:	fld    DWORD PTR [rcx]
   14000d4e3:	add    BYTE PTR [rax],al
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rax+0x1d9],cl
   14000d4ed:	add    BYTE PTR [rax],al
   14000d4ef:	add    BYTE PTR [rsi-0x27],bl
   14000d4f2:	add    DWORD PTR [rax],eax
   14000d4f4:	add    BYTE PTR [rax],al
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	cmp    cl,bl
   14000d4fa:	add    DWORD PTR [rax],eax
   14000d4fc:	add    BYTE PTR [rax],al
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	(bad)  
   14000d501:	fld    DWORD PTR [rcx]
   14000d503:	add    BYTE PTR [rax],al
   14000d505:	add    BYTE PTR [rax],al
   14000d507:	add    dh,cl
   14000d509:	fadd   DWORD PTR [rcx]
   14000d50b:	add    BYTE PTR [rax],al
   14000d50d:	add    BYTE PTR [rax],al
   14000d50f:	add    BYTE PTR [rsi+0x1d8],ah
   14000d515:	add    BYTE PTR [rax],al
   14000d517:	add    BYTE PTR [rsi],bl
   14000d519:	fadd   DWORD PTR [rcx]
   14000d51b:	add    BYTE PTR [rax],al
   14000d51d:	add    BYTE PTR [rax],al
   14000d51f:	add    dh,dh
   14000d521:	xlat   BYTE PTR ds:[rbx]
   14000d522:	add    DWORD PTR [rax],eax
   14000d524:	add    BYTE PTR [rax],al
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	(bad)  
   14000d529:	xlat   BYTE PTR ds:[rbx]
   14000d52a:	add    DWORD PTR [rax],eax
   14000d52c:	add    BYTE PTR [rax],al
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	mov    esp,0x1d7
   14000d535:	add    BYTE PTR [rax],al
   14000d537:	add    BYTE PTR [rsi+0x1d7],dl
   14000d53d:	add    BYTE PTR [rax],al
   14000d53f:	add    BYTE PTR [rdx-0x29],dh
   14000d542:	add    DWORD PTR [rax],eax
   14000d544:	add    BYTE PTR [rax],al
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	rex.WX xlat BYTE PTR ds:[rbx]
   14000d54a:	add    DWORD PTR [rax],eax
   14000d54c:	add    BYTE PTR [rax],al
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	xlat   BYTE PTR ss:[rbx]
   14000d552:	add    DWORD PTR [rax],eax
   14000d554:	add    BYTE PTR [rax],al
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	and    dl,bh
   14000d55a:	add    DWORD PTR [rax],eax
   14000d55c:	add    BYTE PTR [rax],al
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	rcl    dh,cl
   14000d562:	add    DWORD PTR [rax],eax
   14000d564:	add    BYTE PTR [rax],al
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	mov    esp,0x1d6
   14000d56d:	add    BYTE PTR [rax],al
   14000d56f:	add    BYTE PTR [rsi+rdx*8+0x1],bl
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	push   0x1d6
   14000d57d:	add    BYTE PTR [rax],al
   14000d57f:	add    BYTE PTR [rax],bl
   14000d581:	(bad)  
   14000d582:	add    DWORD PTR [rax],eax
   14000d584:	add    BYTE PTR [rax],al
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	(bad)  
   14000d58a:	add    DWORD PTR [rax],eax
   14000d58c:	add    BYTE PTR [rax],al
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	movabs al,ds:0x50000000000001d5
   14000d599:	(bad)  
   14000d59a:	add    DWORD PTR [rax],eax
   14000d59c:	add    BYTE PTR [rax],al
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	lock (bad) 
   14000d5a2:	add    DWORD PTR [rax],eax
   14000d5a4:	add    BYTE PTR [rax],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d5a9:	(bad)  
   14000d5aa:	add    DWORD PTR [rax],eax
   14000d5ac:	add    BYTE PTR [rax],al
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	(bad)  
   14000d5b1:	(bad)  
   14000d5b2:	add    DWORD PTR [rax],eax
   14000d5b4:	add    BYTE PTR [rax],al
   14000d5b6:	add    BYTE PTR [rax],al
   14000d5b8:	and    ah,dl
   14000d5ba:	add    DWORD PTR [rax],eax
   14000d5bc:	add    BYTE PTR [rax],al
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	loop   0x14000d595
   14000d5c2:	add    DWORD PTR [rax],eax
   14000d5c4:	add    BYTE PTR [rax],al
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d5c9:	rol    DWORD PTR [rcx],cl
   14000d5cb:	add    BYTE PTR [rax],al
   14000d5cd:	add    BYTE PTR [rax],al
   14000d5cf:	add    BYTE PTR [rsi-0x2d],ch
   14000d5d2:	add    DWORD PTR [rax],eax
   14000d5d4:	add    BYTE PTR [rax],al
   14000d5d6:	add    BYTE PTR [rax],al
   14000d5d8:	xor    dl,bl
   14000d5da:	add    DWORD PTR [rax],eax
   14000d5dc:	add    BYTE PTR [rax],al
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	not    dl
   14000d5e2:	add    DWORD PTR [rax],eax
   14000d5e4:	add    BYTE PTR [rax],al
   14000d5e6:	add    BYTE PTR [rax],al
   14000d5e8:	mov    edx,0x1d2
   14000d5ed:	add    BYTE PTR [rax],al
   14000d5ef:	add    BYTE PTR [rdx+rdx*8+0x1],dh
   14000d5f3:	add    BYTE PTR [rax],al
   14000d5f5:	add    BYTE PTR [rax],al
   14000d5f7:	add    BYTE PTR [rdx+rdx*8+0x1],al
   14000d5fb:	add    BYTE PTR [rax],al
   14000d5fd:	add    BYTE PTR [rax],al
   14000d5ff:	add    BYTE PTR [rdx+rdx*8],cl
   14000d602:	add    DWORD PTR [rax],eax
   14000d604:	add    BYTE PTR [rax],al
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	rcl    cl,0x1
   14000d60b:	add    BYTE PTR [rax],al
   14000d60d:	add    BYTE PTR [rax],al
   14000d60f:	add    BYTE PTR [rcx+rdx*8+0x1],dl
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	rex.X rol DWORD PTR [rcx],1
   14000d61b:	add    BYTE PTR [rax],al
   14000d61d:	add    BYTE PTR [rax],al
   14000d61f:	add    BYTE PTR [rdx],ch
   14000d621:	rol    DWORD PTR [rcx],1
   14000d623:	add    BYTE PTR [rax],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    BYTE PTR [rdx+0x1d0],ch
   14000d62d:	add    BYTE PTR [rax],al
   14000d62f:	add    BYTE PTR [rax+0x1d0],cl
   14000d635:	add    BYTE PTR [rax],al
   14000d637:	add    BYTE PTR [rax-0x30],bl
   14000d63a:	add    DWORD PTR [rax],eax
   14000d63c:	add    BYTE PTR [rax],al
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	cmp    al,0xd0
   14000d642:	add    DWORD PTR [rax],eax
   14000d644:	add    BYTE PTR [rax],al
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	sbb    al,dl
   14000d64a:	add    DWORD PTR [rax],eax
   14000d64c:	add    BYTE PTR [rax],al
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	dec    bh
   14000d652:	add    DWORD PTR [rax],eax
   14000d654:	add    BYTE PTR [rax],al
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	(bad)  
   14000d659:	iret   
   14000d65a:	add    DWORD PTR [rax],eax
   14000d65c:	add    BYTE PTR [rax],al
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	stos   BYTE PTR es:[rdi],al
   14000d661:	iret   
   14000d662:	add    DWORD PTR [rax],eax
   14000d664:	add    BYTE PTR [rax],al
   14000d666:	add    BYTE PTR [rax],al
   14000d668:	mov    bh,cl
   14000d66a:	add    DWORD PTR [rax],eax
   14000d66c:	add    BYTE PTR [rax],al
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	xor    cl,bh
   14000d672:	add    DWORD PTR [rax],eax
   14000d674:	add    BYTE PTR [rax],al
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	or     al,0xcf
   14000d67a:	add    DWORD PTR [rax],eax
   14000d67c:	add    BYTE PTR [rax],al
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	loopne 0x14000d650
   14000d682:	add    DWORD PTR [rax],eax
   14000d684:	add    BYTE PTR [rax],al
   14000d686:	add    BYTE PTR [rax],al
   14000d688:	retf   0x1ce
   14000d68b:	add    BYTE PTR [rax],al
   14000d68d:	add    BYTE PTR [rax],al
   14000d68f:	add    BYTE PTR [rsi+rcx*8+0x1],ah
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	jle    0x14000d668
   14000d69a:	add    DWORD PTR [rax],eax
   14000d69c:	add    BYTE PTR [rax],al
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	pop    rsp
   14000d6a1:	(bad)  
   14000d6a2:	add    DWORD PTR [rax],eax
   14000d6a4:	add    BYTE PTR [rax],al
   14000d6a6:	add    BYTE PTR [rax],al
   14000d6a8:	and    dh,cl
   14000d6aa:	add    DWORD PTR [rax],eax
   14000d6ac:	add    BYTE PTR [rax],al
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	lock int 0x1
   14000d6b3:	add    BYTE PTR [rax],al
   14000d6b5:	add    BYTE PTR [rax],al
   14000d6b7:	add    al,cl
   14000d6b9:	int    0x1
   14000d6bb:	add    BYTE PTR [rax],al
   14000d6bd:	add    BYTE PTR [rax],al
   14000d6bf:	add    BYTE PTR [rsi+0x1cd],cl
   14000d6c5:	add    BYTE PTR [rax],al
   14000d6c7:	add    BYTE PTR [rax-0x33],bh
   14000d6ca:	add    DWORD PTR [rax],eax
   14000d6cc:	add    BYTE PTR [rax],al
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	pop    rsi
   14000d6d1:	int    0x1
   14000d6d3:	add    BYTE PTR [rax],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    BYTE PTR [rdx],bh
   14000d6d9:	int    0x1
   14000d6db:	add    BYTE PTR [rax],al
   14000d6dd:	add    BYTE PTR [rax],al
   14000d6df:	add    BYTE PTR [rcx*8+0x1],dl
   14000d6e6:	add    BYTE PTR [rax],al
   14000d6e8:	in     al,dx
   14000d6e9:	int3   
   14000d6ea:	add    DWORD PTR [rax],eax
   14000d6ec:	add    BYTE PTR [rax],al
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	test   al,0xcc
   14000d6f2:	add    DWORD PTR [rax],eax
   14000d6f4:	add    BYTE PTR [rax],al
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	push   0xffffffffffffffcc
   14000d6fa:	add    DWORD PTR [rax],eax
   14000d6fc:	add    BYTE PTR [rax],al
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	out    dx,al
   14000d701:	retf   
   14000d702:	add    DWORD PTR [rax],eax
   14000d704:	add    BYTE PTR [rax],al
   14000d706:	add    BYTE PTR [rax],al
   14000d708:	mov    ah,0xcb
   14000d70a:	add    DWORD PTR [rax],eax
   14000d70c:	add    BYTE PTR [rax],al
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	jle    0x14000d6dd
   14000d712:	add    DWORD PTR [rax],eax
   14000d714:	add    BYTE PTR [rax],al
   14000d716:	add    BYTE PTR [rax],al
   14000d718:	sub    al,0xcb
   14000d71a:	add    DWORD PTR [rax],eax
   14000d71c:	add    BYTE PTR [rax],al
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	out    dx,al
   14000d721:	retf   0x1
   14000d724:	add    BYTE PTR [rax],al
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	mov    ah,0xca
   14000d72a:	add    DWORD PTR [rax],eax
   14000d72c:	add    BYTE PTR [rax],al
   14000d72e:	add    BYTE PTR [rax],al
   14000d730:	jb     0x14000d6fc
   14000d732:	add    DWORD PTR [rax],eax
   14000d734:	add    BYTE PTR [rax],al
   14000d736:	add    BYTE PTR [rax],al
   14000d738:	xor    al,0xca
   14000d73a:	add    DWORD PTR [rax],eax
   14000d73c:	add    BYTE PTR [rax],al
   14000d73e:	add    BYTE PTR [rax],al
   14000d740:	repnz leave 
   14000d742:	add    DWORD PTR [rax],eax
   14000d744:	add    BYTE PTR [rax],al
   14000d746:	add    BYTE PTR [rax],al
   14000d748:	mov    ah,0xc9
   14000d74a:	add    DWORD PTR [rax],eax
   14000d74c:	add    BYTE PTR [rax],al
   14000d74e:	add    BYTE PTR [rax],al
   14000d750:	jb     0x14000d71b
   14000d752:	add    DWORD PTR [rax],eax
   14000d754:	add    BYTE PTR [rax],al
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	xor    al,0xc9
   14000d75a:	add    DWORD PTR [rax],eax
   14000d75c:	add    BYTE PTR [rax],al
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	loop   0x14000d72a
   14000d762:	add    DWORD PTR [rax],eax
   14000d764:	add    BYTE PTR [rax],al
   14000d766:	add    BYTE PTR [rax],al
   14000d768:	nop
   14000d769:	enter  0x1,0x0
   14000d76d:	add    BYTE PTR [rax],al
   14000d76f:	add    BYTE PTR [rax],dh
   14000d771:	enter  0x1,0x0
   14000d775:	add    BYTE PTR [rax],al
   14000d777:	add    ah,cl
   14000d779:	mov    DWORD PTR [rcx],0x0
   14000d77f:	add    BYTE PTR [rdx-0x39],bh
   14000d782:	add    DWORD PTR [rax],eax
   14000d784:	add    BYTE PTR [rax],al
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	rex.X mov DWORD PTR [rcx],0x0
   14000d78f:	add    ah,ch
   14000d791:	mov    BYTE PTR [rcx],0x0
   14000d794:	add    BYTE PTR [rax],al
   14000d796:	add    BYTE PTR [rax],al
   14000d798:	pushf  
   14000d799:	mov    BYTE PTR [rcx],0x0
   14000d79c:	add    BYTE PTR [rax],al
   14000d79e:	add    BYTE PTR [rax],al
   14000d7a0:	rex.WR mov BYTE PTR [rcx],0x0
   14000d7a4:	add    BYTE PTR [rax],al
   14000d7a6:	add    BYTE PTR [rax],al
   14000d7a8:	add    al,0xc6
   14000d7aa:	add    DWORD PTR [rax],eax
   14000d7ac:	add    BYTE PTR [rax],al
   14000d7ae:	add    BYTE PTR [rax],al
   14000d7b0:	mov    ch,0x1
   14000d7b3:	add    BYTE PTR [rax],al
   14000d7b5:	add    BYTE PTR [rax],al
   14000d7b7:	add    BYTE PTR [rax+0x1c5],cl
   14000d7bd:	add    BYTE PTR [rax],al
   14000d7bf:	add    BYTE PTR [rdx-0x3b],dl
   14000d7c2:	add    DWORD PTR [rax],eax
   14000d7c4:	add    BYTE PTR [rax],al
   14000d7c6:	add    BYTE PTR [rax],al
   14000d7c8:	(bad)  
   14000d7c9:	(bad)
   14000d7cc:	add    BYTE PTR [rax],al
   14000d7ce:	add    BYTE PTR [rax],al
   14000d7d0:	(bad)
   14000d7d5:	add    BYTE PTR [rax],al
   14000d7d7:	add    dl,al
   14000d7d9:	(bad)
   14000d7dd:	add    BYTE PTR [rax],al
   14000d7df:	add    BYTE PTR [rdx+0x1c4],dl
   14000d7e5:	add    BYTE PTR [rax],al
   14000d7e7:	add    BYTE PTR [rsi-0x3c],bl
   14000d7ea:	add    DWORD PTR [rax],eax
   14000d7ec:	add    BYTE PTR [rax],al
   14000d7ee:	add    BYTE PTR [rax],al
   14000d7f0:	(bad)
   14000d7f5:	add    BYTE PTR [rax],al
   14000d7f7:	add    BYTE PTR [rsi],bl
   14000d7f9:	(bad)
   14000d7fd:	add    BYTE PTR [rax],al
   14000d7ff:	add    BYTE PTR [rax],al
   14000d801:	(bad)
   14000d805:	add    BYTE PTR [rax],al
   14000d807:	add    al,ch
   14000d809:	ret    
   14000d80a:	add    DWORD PTR [rax],eax
   14000d80c:	add    BYTE PTR [rax],al
   14000d80e:	add    BYTE PTR [rax],al
   14000d810:	mov    esp,0x1c3
   14000d815:	add    BYTE PTR [rax],al
   14000d817:	add    BYTE PTR [rax+0x1c3],bl
   14000d81d:	add    BYTE PTR [rax],al
   14000d81f:	add    BYTE PTR [rbx+rax*8+0x1],bh
   14000d823:	add    BYTE PTR [rax],al
   14000d825:	add    BYTE PTR [rax],al
   14000d827:	add    BYTE PTR [rsi-0x3d],dl
   14000d82a:	add    DWORD PTR [rax],eax
   14000d82c:	add    BYTE PTR [rax],al
   14000d82e:	add    BYTE PTR [rax],al
   14000d830:	push   rsp
   14000d831:	repnz add DWORD PTR [rax],eax
	...
   14000d840:	fadd   st,st(0)
   14000d842:	add    DWORD PTR [rax],eax
   14000d844:	add    BYTE PTR [rax],al
   14000d846:	add    BYTE PTR [rax],al
   14000d848:	sahf   
   14000d849:	rol    BYTE PTR [rcx],0x0
   14000d84c:	add    BYTE PTR [rax],al
   14000d84e:	add    BYTE PTR [rax],al
   14000d850:	jb     0x14000d812
   14000d852:	add    DWORD PTR [rax],eax
   14000d854:	add    BYTE PTR [rax],al
   14000d856:	add    BYTE PTR [rax],al
   14000d858:	rex.RX rol BYTE PTR [rcx],0x0
   14000d85c:	add    BYTE PTR [rax],al
   14000d85e:	add    BYTE PTR [rax],al
   14000d860:	or     al,al
   14000d862:	add    DWORD PTR [rax],eax
   14000d864:	add    BYTE PTR [rax],al
   14000d866:	add    BYTE PTR [rax],al
   14000d868:	loop   0x14000d829
   14000d86a:	add    DWORD PTR [rax],eax
   14000d86c:	add    BYTE PTR [rax],al
   14000d86e:	add    BYTE PTR [rax],al
   14000d870:	mov    BYTE PTR [rdi+0x1],bh
   14000d876:	add    BYTE PTR [rax],al
   14000d878:	push   0x1bf
   14000d87d:	add    BYTE PTR [rax],al
   14000d87f:	add    BYTE PTR [rsi-0x41],cl
   14000d882:	add    DWORD PTR [rax],eax
   14000d884:	add    BYTE PTR [rax],al
   14000d886:	add    BYTE PTR [rax],al
   14000d888:	add    al,0xbf
   14000d88a:	add    DWORD PTR [rax],eax
   14000d88c:	add    BYTE PTR [rax],al
   14000d88e:	add    BYTE PTR [rax],al
   14000d890:	in     al,0xbe
   14000d892:	add    DWORD PTR [rax],eax
   14000d894:	add    BYTE PTR [rax],al
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	xchg   esi,eax
   14000d899:	mov    esi,0x1
   14000d89e:	add    BYTE PTR [rax],al
   14000d8a0:	(bad)  
   14000d8a1:	mov    esi,0x1
   14000d8a6:	add    BYTE PTR [rax],al
   14000d8a8:	rex.X mov esi,0x1
   14000d8ae:	add    BYTE PTR [rax],al
   14000d8b0:	(bad)  
   14000d8b1:	mov    esi,0x1
   14000d8b6:	add    BYTE PTR [rax],al
   14000d8b8:	(bad)  
   14000d8b9:	mov    ebp,0x1
   14000d8be:	add    BYTE PTR [rax],al
   14000d8c0:	je     0x14000d87f
   14000d8c2:	add    DWORD PTR [rax],eax
   14000d8c4:	add    BYTE PTR [rax],al
   14000d8c6:	add    BYTE PTR [rax],al
   14000d8c8:	pop    rax
   14000d8c9:	mov    ebp,0x1
   14000d8ce:	add    BYTE PTR [rax],al
   14000d8d0:	(bad)  
   14000d8d1:	mov    ebp,0x1
   14000d8d6:	add    BYTE PTR [rax],al
   14000d8d8:	out    dx,al
   14000d8d9:	mov    esp,0x1
   14000d8de:	add    BYTE PTR [rax],al
   14000d8e0:	ret    0x1bc
   14000d8e3:	add    BYTE PTR [rax],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    BYTE PTR [rax+0x1bc],bl
   14000d8ed:	add    BYTE PTR [rax],al
   14000d8ef:	add    BYTE PTR [rdx-0x44],ch
   14000d8f2:	add    DWORD PTR [rax],eax
   14000d8f4:	add    BYTE PTR [rax],al
   14000d8f6:	add    BYTE PTR [rax],al
   14000d8f8:	ds mov esp,0x1
   14000d8fe:	add    BYTE PTR [rax],al
   14000d900:	add    BYTE PTR [rcx+rax*1+0x0],bh
   14000d907:	add    BYTE PTR [rbx+rdi*4+0x1],ah
   14000d90e:	add    BYTE PTR [rax],al
   14000d910:	js     0x14000d8cd
   14000d912:	add    DWORD PTR [rax],eax
   14000d914:	add    BYTE PTR [rax],al
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	rex.WR movabs rbx,0xbb2e000000000001
   14000d922:	add    DWORD PTR [rax],eax
   14000d924:	add    BYTE PTR [rax],al
   14000d926:	add    BYTE PTR [rax],al
   14000d928:	adc    BYTE PTR [rbx+0x1],bh
   14000d92e:	add    BYTE PTR [rax],al
   14000d930:	in     al,dx
   14000d931:	mov    edx,0x1
   14000d936:	add    BYTE PTR [rax],al
   14000d938:	ret    0x1ba
   14000d93b:	add    BYTE PTR [rax],al
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    BYTE PTR [rsi-0x46],bh
   14000d942:	add    DWORD PTR [rax],eax
   14000d944:	add    BYTE PTR [rax],al
   14000d946:	add    BYTE PTR [rax],al
   14000d948:	rex.WX movabs rdx,0xba20000000000001
   14000d952:	add    DWORD PTR [rax],eax
   14000d954:	add    BYTE PTR [rax],al
   14000d956:	add    BYTE PTR [rax],al
   14000d958:	(bad)  
   14000d959:	mov    edx,0x1
   14000d95e:	add    BYTE PTR [rax],al
   14000d960:	sar    BYTE PTR [rcx+0x1],cl
   14000d966:	add    BYTE PTR [rax],al
   14000d968:	mov    WORD PTR [rcx+0x1],?
   14000d96e:	add    BYTE PTR [rax],al
   14000d970:	add    cl,al
   14000d972:	add    DWORD PTR [rax],eax
	...
   14000d980:	rex.WX movabs rcx,0xb92a000000000001
   14000d98a:	add    DWORD PTR [rax],eax
   14000d98c:	add    BYTE PTR [rax],al
   14000d98e:	add    BYTE PTR [rax],al
   14000d990:	(bad)  
   14000d991:	mov    eax,0x1
   14000d996:	add    BYTE PTR [rax],al
   14000d998:	loop   0x14000d952
   14000d99a:	add    DWORD PTR [rax],eax
   14000d99c:	add    BYTE PTR [rax],al
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	(bad)  
   14000d9a1:	mov    eax,0x1
   14000d9a6:	add    BYTE PTR [rax],al
   14000d9a8:	test   al,0xb8
   14000d9aa:	add    DWORD PTR [rax],eax
   14000d9ac:	add    BYTE PTR [rax],al
   14000d9ae:	add    BYTE PTR [rax],al
   14000d9b0:	mov    BYTE PTR [rax+0x1],bh
   14000d9b6:	add    BYTE PTR [rax],al
   14000d9b8:	je     0x14000d972
   14000d9ba:	add    DWORD PTR [rax],eax
   14000d9bc:	add    BYTE PTR [rax],al
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	pop    rsi
   14000d9c1:	mov    ecx,0x1
	...
   14000d9ce:	add    BYTE PTR [rax],al
   14000d9d0:	out    0xa1,al
   14000d9d2:	add    DWORD PTR [rax],eax
   14000d9d4:	add    BYTE PTR [rax],al
   14000d9d6:	add    BYTE PTR [rax],al
   14000d9d8:	sub    BYTE PTR [rdx+0x1],ah
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	push   rsp
   14000d9e1:	movabs ds:0xa288000000000001,al
   14000d9ea:	add    DWORD PTR [rax],eax
   14000d9ec:	add    BYTE PTR [rax],al
   14000d9ee:	add    BYTE PTR [rax],al
   14000d9f0:	ret    0x1a2
   14000d9f3:	add    BYTE PTR [rax],al
   14000d9f5:	add    BYTE PTR [rax],al
   14000d9f7:	add    ah,dh
   14000d9f9:	movabs ds:0xa346000000000001,al
   14000da02:	add    DWORD PTR [rax],eax
   14000da04:	add    BYTE PTR [rax],al
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	nop
   14000da09:	movabs ds:0xa3dc000000000001,eax
   14000da12:	add    DWORD PTR [rax],eax
   14000da14:	add    BYTE PTR [rax],al
   14000da16:	add    BYTE PTR [rax],al
   14000da18:	or     ah,BYTE PTR [rcx+rax*1+0x0]
   14000da1f:	add    BYTE PTR [rax],dh
   14000da21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da22:	add    DWORD PTR [rax],eax
   14000da24:	add    BYTE PTR [rax],al
   14000da26:	add    BYTE PTR [rax],al
   14000da28:	ins    BYTE PTR es:[rdi],dx
   14000da29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da2a:	add    DWORD PTR [rax],eax
   14000da2c:	add    BYTE PTR [rax],al
   14000da2e:	add    BYTE PTR [rax],al
   14000da30:	xchg   edx,eax
   14000da31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da32:	add    DWORD PTR [rax],eax
   14000da34:	add    BYTE PTR [rax],al
   14000da36:	add    BYTE PTR [rax],al
   14000da38:	mov    eax,0x1a4
   14000da3d:	add    BYTE PTR [rax],al
   14000da3f:	add    ah,ah
   14000da41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da42:	add    DWORD PTR [rax],eax
   14000da44:	add    BYTE PTR [rax],al
   14000da46:	add    BYTE PTR [rax],al
   14000da48:	or     BYTE PTR [rbp+0x1],ah
   14000da4e:	add    BYTE PTR [rax],al
   14000da50:	cmp    al,0xa5
   14000da52:	add    DWORD PTR [rax],eax
   14000da54:	add    BYTE PTR [rax],al
   14000da56:	add    BYTE PTR [rax],al
   14000da58:	jb     0x14000d9ff
   14000da5a:	add    DWORD PTR [rax],eax
   14000da5c:	add    BYTE PTR [rax],al
   14000da5e:	add    BYTE PTR [rax],al
   14000da60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000da61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000da62:	add    DWORD PTR [rax],eax
   14000da64:	add    BYTE PTR [rax],al
   14000da66:	add    BYTE PTR [rax],al
   14000da68:	(bad)  
   14000da69:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000da6a:	add    DWORD PTR [rax],eax
   14000da6c:	add    BYTE PTR [rax],al
   14000da6e:	add    BYTE PTR [rax],al
   14000da70:	or     BYTE PTR [rsi+0x1],ah
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	cmp    ah,BYTE PTR [rsi+0x1]
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	push   0xffffffffffffffa6
   14000da82:	add    DWORD PTR [rax],eax
   14000da84:	add    BYTE PTR [rax],al
   14000da86:	add    BYTE PTR [rax],al
   14000da88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000da89:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000da8a:	add    DWORD PTR [rax],eax
   14000da8c:	add    BYTE PTR [rax],al
   14000da8e:	add    BYTE PTR [rax],al
   14000da90:	shl    BYTE PTR [rsi+0x1],cl
   14000da96:	add    BYTE PTR [rax],al
   14000da98:	cld    
   14000da99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000da9a:	add    DWORD PTR [rax],eax
   14000da9c:	add    BYTE PTR [rax],al
   14000da9e:	add    BYTE PTR [rax],al
   14000daa0:	sbb    al,0xa7
   14000daa2:	add    DWORD PTR [rax],eax
   14000daa4:	add    BYTE PTR [rax],al
   14000daa6:	add    BYTE PTR [rax],al
   14000daa8:	cmp    BYTE PTR [rdi+0x1],ah
   14000daae:	add    BYTE PTR [rax],al
   14000dab0:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000dab2:	add    DWORD PTR [rax],eax
   14000dab4:	add    BYTE PTR [rax],al
   14000dab6:	add    BYTE PTR [rax],al
   14000dab8:	test   BYTE PTR [rdi+0x1],ah
   14000dabe:	add    BYTE PTR [rax],al
   14000dac0:	lods   al,BYTE PTR ds:[rsi]
   14000dac1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dac2:	add    DWORD PTR [rax],eax
   14000dac4:	add    BYTE PTR [rax],al
   14000dac6:	add    BYTE PTR [rax],al
   14000dac8:	fsub   DWORD PTR [rdi+0x1]
   14000dace:	add    BYTE PTR [rax],al
   14000dad0:	or     ch,BYTE PTR [rax+0x1]
   14000dad6:	add    BYTE PTR [rax],al
   14000dad8:	rex.R test al,0x1
   14000dadb:	add    BYTE PTR [rax],al
   14000dadd:	add    BYTE PTR [rax],al
   14000dadf:	add    BYTE PTR [rax+0x1a8],al
   14000dae5:	add    BYTE PTR [rax],al
   14000dae7:	add    BYTE PTR [rsi+0x1a8],bh
   14000daed:	add    BYTE PTR [rax],al
   14000daef:	add    al,bh
   14000daf1:	test   al,0x1
   14000daf3:	add    BYTE PTR [rax],al
   14000daf5:	add    BYTE PTR [rax],al
   14000daf7:	add    BYTE PTR [rdx],ch
   14000daf9:	test   eax,0x1
   14000dafe:	add    BYTE PTR [rax],al
   14000db00:	(bad)  
   14000db01:	test   eax,0x1
   14000db06:	add    BYTE PTR [rax],al
   14000db08:	xchg   esi,eax
   14000db09:	test   eax,0x1
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	retf   0x1a9
   14000db13:	add    BYTE PTR [rax],al
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    BYTE PTR [rdx],al
   14000db19:	stos   BYTE PTR es:[rdi],al
   14000db1a:	add    DWORD PTR [rax],eax
   14000db1c:	add    BYTE PTR [rax],al
   14000db1e:	add    BYTE PTR [rax],al
   14000db20:	cmp    BYTE PTR [rdx+0x1],ch
   14000db26:	add    BYTE PTR [rax],al
   14000db28:	ins    BYTE PTR es:[rdi],dx
   14000db29:	stos   BYTE PTR es:[rdi],al
   14000db2a:	add    DWORD PTR [rax],eax
   14000db2c:	add    BYTE PTR [rax],al
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000db31:	stos   BYTE PTR es:[rdi],al
   14000db32:	add    DWORD PTR [rax],eax
   14000db34:	add    BYTE PTR [rax],al
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	fisubr WORD PTR [rdx+0x1]
   14000db3e:	add    BYTE PTR [rax],al
   14000db40:	sbb    BYTE PTR [rbx+0x1],ch
   14000db46:	add    BYTE PTR [rax],al
   14000db48:	stos   QWORD PTR es:[rdi],rax
   14000db4a:	add    DWORD PTR [rax],eax
   14000db4c:	add    BYTE PTR [rax],al
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	js     0x14000dafd
   14000db52:	add    DWORD PTR [rax],eax
   14000db54:	add    BYTE PTR [rax],al
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000db59:	stos   DWORD PTR es:[rdi],eax
   14000db5a:	add    DWORD PTR [rax],eax
   14000db5c:	add    BYTE PTR [rax],al
   14000db5e:	add    BYTE PTR [rax],al
   14000db60:	in     al,0xab
   14000db62:	add    DWORD PTR [rax],eax
   14000db64:	add    BYTE PTR [rax],al
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	lods   al,BYTE PTR cs:[rsi]
   14000db6a:	add    DWORD PTR [rax],eax
   14000db6c:	add    BYTE PTR [rax],al
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	pop    rsi
   14000db71:	lods   al,BYTE PTR ds:[rsi]
   14000db72:	add    DWORD PTR [rax],eax
   14000db74:	add    BYTE PTR [rax],al
   14000db76:	add    BYTE PTR [rax],al
   14000db78:	(bad)  
   14000db79:	lods   al,BYTE PTR ds:[rsi]
   14000db7a:	add    DWORD PTR [rax],eax
   14000db7c:	add    BYTE PTR [rax],al
   14000db7e:	add    BYTE PTR [rax],al
   14000db80:	(bad)  
   14000db81:	lods   al,BYTE PTR ds:[rsi]
   14000db82:	add    DWORD PTR [rax],eax
   14000db84:	add    BYTE PTR [rax],al
   14000db86:	add    BYTE PTR [rax],al
   14000db88:	(bad)  
   14000db89:	lods   al,BYTE PTR ds:[rsi]
   14000db8a:	add    DWORD PTR [rax],eax
   14000db8c:	add    BYTE PTR [rax],al
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	cmp    al,0xad
   14000db92:	add    DWORD PTR [rax],eax
   14000db94:	add    BYTE PTR [rax],al
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	jl     0x14000db47
   14000db9a:	add    DWORD PTR [rax],eax
   14000db9c:	add    BYTE PTR [rax],al
   14000db9e:	add    BYTE PTR [rax],al
   14000dba0:	mov    edx,0x1a1
   14000dba5:	add    BYTE PTR [rax],al
   14000dba7:	add    al,dh
   14000dba9:	lods   eax,DWORD PTR ds:[rsi]
   14000dbaa:	add    DWORD PTR [rax],eax
   14000dbac:	add    BYTE PTR [rax],al
   14000dbae:	add    BYTE PTR [rax],al
   14000dbb0:	sub    BYTE PTR [rsi+0x1],ch
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	push   rsi
   14000dbb9:	scas   al,BYTE PTR es:[rdi]
   14000dbba:	add    DWORD PTR [rax],eax
   14000dbbc:	add    BYTE PTR [rax],al
   14000dbbe:	add    BYTE PTR [rax],al
   14000dbc0:	js     0x14000db70
   14000dbc2:	add    DWORD PTR [rax],eax
   14000dbc4:	add    BYTE PTR [rax],al
   14000dbc6:	add    BYTE PTR [rax],al
   14000dbc8:	(bad)  
   14000dbc9:	scas   al,BYTE PTR es:[rdi]
   14000dbca:	add    DWORD PTR [rax],eax
   14000dbcc:	add    BYTE PTR [rax],al
   14000dbce:	add    BYTE PTR [rax],al
   14000dbd0:	mov    eax,0x1ae
   14000dbd5:	add    BYTE PTR [rax],al
   14000dbd7:	add    BYTE PTR [rax-0x68],bl
   14000dbda:	add    DWORD PTR [rax],eax
   14000dbdc:	add    BYTE PTR [rax],al
   14000dbde:	add    BYTE PTR [rax],al
   14000dbe0:	hlt    
   14000dbe1:	scas   al,BYTE PTR es:[rdi]
   14000dbe2:	add    DWORD PTR [rax],eax
   14000dbe4:	add    BYTE PTR [rax],al
   14000dbe6:	add    BYTE PTR [rax],al
   14000dbe8:	sub    ch,BYTE PTR [rdi+0x1]
   14000dbee:	add    BYTE PTR [rax],al
   14000dbf0:	fs scas eax,DWORD PTR es:[rdi]
   14000dbf2:	add    DWORD PTR [rax],eax
   14000dbf4:	add    BYTE PTR [rax],al
   14000dbf6:	add    BYTE PTR [rax],al
   14000dbf8:	pushf  
   14000dbf9:	scas   eax,DWORD PTR es:[rdi]
   14000dbfa:	add    DWORD PTR [rax],eax
   14000dbfc:	add    BYTE PTR [rax],al
   14000dbfe:	add    BYTE PTR [rax],al
   14000dc00:	mov    dh,0xaf
   14000dc02:	add    DWORD PTR [rax],eax
   14000dc04:	add    BYTE PTR [rax],al
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	(bad)  
   14000dc09:	scas   eax,DWORD PTR es:[rdi]
   14000dc0a:	add    DWORD PTR [rax],eax
   14000dc0c:	add    BYTE PTR [rax],al
   14000dc0e:	add    BYTE PTR [rax],al
   14000dc10:	sbb    BYTE PTR [rax+0x1],dh
   14000dc16:	add    BYTE PTR [rax],al
   14000dc18:	mov    al,0x1
   14000dc1b:	add    BYTE PTR [rax],al
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	add    BYTE PTR [rax-0x50],dh
   14000dc22:	add    DWORD PTR [rax],eax
   14000dc24:	add    BYTE PTR [rax],al
   14000dc26:	add    BYTE PTR [rax],al
   14000dc28:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dc29:	mov    al,0x1
   14000dc2b:	add    BYTE PTR [rax],al
   14000dc2d:	add    BYTE PTR [rax],al
   14000dc2f:	add    ah,bl
   14000dc31:	mov    al,0x1
   14000dc33:	add    BYTE PTR [rax],al
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	add    BYTE PTR [rdx],al
   14000dc39:	mov    cl,0x1
   14000dc3b:	add    BYTE PTR [rax],al
   14000dc3d:	add    BYTE PTR [rax],al
   14000dc3f:	add    BYTE PTR [rax],dh
   14000dc41:	mov    cl,0x1
   14000dc43:	add    BYTE PTR [rax],al
   14000dc45:	add    BYTE PTR [rax],al
   14000dc47:	add    BYTE PTR [rax+0x1b1],cl
   14000dc4d:	add    BYTE PTR [rax],al
   14000dc4f:	add    BYTE PTR [rcx+rsi*4+0x1],bh
   14000dc56:	add    BYTE PTR [rax],al
   14000dc58:	(bad)  
   14000dc59:	mov    cl,0x1
   14000dc5b:	add    BYTE PTR [rax],al
   14000dc5d:	add    BYTE PTR [rax],al
   14000dc5f:	add    BYTE PTR [rsi],ch
   14000dc61:	mov    dl,0x1
   14000dc63:	add    BYTE PTR [rax],al
   14000dc65:	add    BYTE PTR [rax],al
   14000dc67:	add    BYTE PTR [rdx-0x4e],bl
   14000dc6a:	add    DWORD PTR [rax],eax
   14000dc6c:	add    BYTE PTR [rax],al
   14000dc6e:	add    BYTE PTR [rax],al
   14000dc70:	(bad)  
   14000dc71:	mov    dl,0x1
   14000dc73:	add    BYTE PTR [rax],al
   14000dc75:	add    BYTE PTR [rax],al
   14000dc77:	add    ah,cl
   14000dc79:	mov    dl,0x1
   14000dc7b:	add    BYTE PTR [rax],al
   14000dc7d:	add    BYTE PTR [rax],al
   14000dc7f:	add    dh,bh
   14000dc81:	mov    dl,0x1
   14000dc83:	add    BYTE PTR [rax],al
   14000dc85:	add    BYTE PTR [rax],al
   14000dc87:	add    BYTE PTR [rax],ch
   14000dc89:	mov    bl,0x1
   14000dc8b:	add    BYTE PTR [rax],al
   14000dc8d:	add    BYTE PTR [rax],al
   14000dc8f:	add    BYTE PTR [rax-0x4d],ch
   14000dc92:	add    DWORD PTR [rax],eax
   14000dc94:	add    BYTE PTR [rax],al
   14000dc96:	add    BYTE PTR [rax],al
   14000dc98:	xchg   edx,eax
   14000dc99:	mov    bl,0x1
   14000dc9b:	add    BYTE PTR [rax],al
   14000dc9d:	add    BYTE PTR [rax],al
   14000dc9f:	add    BYTE PTR [rbx+rsi*4+0x1],bh
   14000dca6:	add    BYTE PTR [rax],al
   14000dca8:	in     al,dx
   14000dca9:	mov    bl,0x1
   14000dcab:	add    BYTE PTR [rax],al
   14000dcad:	add    BYTE PTR [rax],al
   14000dcaf:	add    BYTE PTR [rsp+rsi*4],dl
   14000dcb2:	add    DWORD PTR [rax],eax
   14000dcb4:	add    BYTE PTR [rax],al
   14000dcb6:	add    BYTE PTR [rax],al
   14000dcb8:	ds mov ah,0x1
   14000dcbb:	add    BYTE PTR [rax],al
   14000dcbd:	add    BYTE PTR [rax],al
   14000dcbf:	add    BYTE PTR [rdx-0x4c],dh
   14000dcc2:	add    DWORD PTR [rax],eax
   14000dcc4:	add    BYTE PTR [rax],al
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dcc9:	mov    ah,0x1
   14000dccb:	add    BYTE PTR [rax],al
   14000dccd:	add    BYTE PTR [rax],al
   14000dccf:	add    ah,bl
   14000dcd1:	mov    ah,0x1
   14000dcd3:	add    BYTE PTR [rax],al
   14000dcd5:	add    BYTE PTR [rax],al
   14000dcd7:	add    BYTE PTR [rsi],cl
   14000dcd9:	mov    ch,0x1
   14000dcdb:	add    BYTE PTR [rax],al
   14000dcdd:	add    BYTE PTR [rax],al
   14000dcdf:	add    BYTE PTR [rsi],bh
   14000dce1:	mov    ch,0x1
   14000dce3:	add    BYTE PTR [rax],al
   14000dce5:	add    BYTE PTR [rax],al
   14000dce7:	add    BYTE PTR [rdx-0x4b],ah
   14000dcea:	add    DWORD PTR [rax],eax
   14000dcec:	add    BYTE PTR [rax],al
   14000dcee:	add    BYTE PTR [rax],al
   14000dcf0:	xchg   BYTE PTR [rbp+0x1],dh
   14000dcf6:	add    BYTE PTR [rax],al
   14000dcf8:	movabs al,ds:0xba000000000001b5
   14000dd01:	mov    ch,0x1
   14000dd03:	add    BYTE PTR [rax],al
   14000dd05:	add    BYTE PTR [rax],al
   14000dd07:	add    dh,dl
   14000dd09:	mov    ch,0x1
   14000dd0b:	add    BYTE PTR [rax],al
   14000dd0d:	add    BYTE PTR [rax],al
   14000dd0f:	add    dl,dh
   14000dd11:	mov    ch,0x1
   14000dd13:	add    BYTE PTR [rax],al
   14000dd15:	add    BYTE PTR [rax],al
   14000dd17:	add    BYTE PTR [rsi+rsi*4],cl
   14000dd1a:	add    DWORD PTR [rax],eax
   14000dd1c:	add    BYTE PTR [rax],al
   14000dd1e:	add    BYTE PTR [rax],al
   14000dd20:	cmp    al,0xb6
   14000dd22:	add    DWORD PTR [rax],eax
   14000dd24:	add    BYTE PTR [rax],al
   14000dd26:	add    BYTE PTR [rax],al
   14000dd28:	fs mov dh,0x1
   14000dd2b:	add    BYTE PTR [rax],al
   14000dd2d:	add    BYTE PTR [rax],al
   14000dd2f:	add    BYTE PTR [rdx+0x1b6],dl
   14000dd35:	add    BYTE PTR [rax],al
   14000dd37:	add    BYTE PTR [rdx+0x1b6],bh
   14000dd3d:	add    BYTE PTR [rax],al
   14000dd3f:	add    dh,dh
   14000dd41:	mov    dh,0x1
   14000dd43:	add    BYTE PTR [rax],al
   14000dd45:	add    BYTE PTR [rax],al
   14000dd47:	add    BYTE PTR [rdi+rsi*4],ah
   14000dd4a:	add    DWORD PTR [rax],eax
   14000dd4c:	add    BYTE PTR [rax],al
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	push   rax
   14000dd51:	mov    bh,0x1
   14000dd53:	add    BYTE PTR [rax],al
   14000dd55:	add    BYTE PTR [rax],al
   14000dd57:	add    BYTE PTR [rdx+0x1b7],dl
   14000dd5d:	add    BYTE PTR [rax],al
   14000dd5f:	add    dh,al
   14000dd61:	mov    bh,0x1
   14000dd63:	add    BYTE PTR [rax],al
   14000dd65:	add    BYTE PTR [rax],al
   14000dd67:	add    dl,dh
   14000dd69:	mov    bh,0x1
   14000dd6b:	add    BYTE PTR [rax],al
   14000dd6d:	add    BYTE PTR [rax],al
   14000dd6f:	add    BYTE PTR [rdx],dh
   14000dd71:	mov    eax,0x1
   14000dd76:	add    BYTE PTR [rax],al
   14000dd78:	xchg   BYTE PTR [rcx+0x1],ah
   14000dd7e:	add    BYTE PTR [rax],al
   14000dd80:	push   rax
   14000dd81:	movabs eax,ds:0xa120000000000001
   14000dd8a:	add    DWORD PTR [rax],eax
   14000dd8c:	add    BYTE PTR [rax],al
   14000dd8e:	add    BYTE PTR [rax],al
   14000dd90:	fisub  DWORD PTR [rax+0x1]
   14000dd96:	add    BYTE PTR [rax],al
   14000dd98:	stos   BYTE PTR es:[rdi],al
   14000dd99:	movabs al,ds:0xa072000000000001
   14000dda2:	add    DWORD PTR [rax],eax
   14000dda4:	add    BYTE PTR [rax],al
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	push   rsi
   14000dda9:	movabs al,ds:0xa03a000000000001
   14000ddb2:	add    DWORD PTR [rax],eax
   14000ddb4:	add    BYTE PTR [rax],al
   14000ddb6:	add    BYTE PTR [rax],al
   14000ddb8:	(bad)  
   14000ddb9:	movabs al,ds:0xa020000000000001
   14000ddc2:	add    DWORD PTR [rax],eax
   14000ddc4:	add    BYTE PTR [rax],al
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	fcomp  DWORD PTR [rdi+0x1]
   14000ddce:	add    BYTE PTR [rax],al
   14000ddd0:	pushf  
   14000ddd1:	lahf   
   14000ddd2:	add    DWORD PTR [rax],eax
   14000ddd4:	add    BYTE PTR [rax],al
   14000ddd6:	add    BYTE PTR [rax],al
   14000ddd8:	ins    BYTE PTR es:[rdi],dx
   14000ddd9:	lahf   
   14000ddda:	add    DWORD PTR [rax],eax
   14000dddc:	add    BYTE PTR [rax],al
   14000ddde:	add    BYTE PTR [rax],al
   14000dde0:	cmp    bl,BYTE PTR [rdi+0x1]
   14000dde6:	add    BYTE PTR [rax],al
   14000dde8:	or     BYTE PTR [rdi+0x1],bl
   14000ddee:	add    BYTE PTR [rax],al
   14000ddf0:	ficomp DWORD PTR [rsi+0x1]
   14000ddf6:	add    BYTE PTR [rax],al
   14000ddf8:	mov    ah,0x9e
   14000ddfa:	add    DWORD PTR [rax],eax
   14000ddfc:	add    BYTE PTR [rax],al
   14000ddfe:	add    BYTE PTR [rax],al
   14000de00:	xchg   edx,eax
   14000de01:	sahf   
   14000de02:	add    DWORD PTR [rax],eax
   14000de04:	add    BYTE PTR [rax],al
   14000de06:	add    BYTE PTR [rax],al
   14000de08:	pop    rax
   14000de09:	sahf   
   14000de0a:	add    DWORD PTR [rax],eax
   14000de0c:	add    BYTE PTR [rax],al
   14000de0e:	add    BYTE PTR [rax],al
   14000de10:	sbb    BYTE PTR [rsi+0x1],bl
   14000de16:	add    BYTE PTR [rax],al
   14000de18:	in     al,dx
   14000de19:	popf   
   14000de1a:	add    DWORD PTR [rax],eax
   14000de1c:	add    BYTE PTR [rax],al
   14000de1e:	add    BYTE PTR [rax],al
   14000de20:	(bad)  
   14000de21:	popf   
   14000de22:	add    DWORD PTR [rax],eax
   14000de24:	add    BYTE PTR [rax],al
   14000de26:	add    BYTE PTR [rax],al
   14000de28:	test   BYTE PTR [rbp+0x1],bl
   14000de2e:	add    BYTE PTR [rax],al
   14000de30:	and    al,0x9d
   14000de32:	add    DWORD PTR [rax],eax
   14000de34:	add    BYTE PTR [rax],al
   14000de36:	add    BYTE PTR [rax],al
   14000de38:	cli    
   14000de39:	pushf  
   14000de3a:	add    DWORD PTR [rax],eax
   14000de3c:	add    BYTE PTR [rax],al
   14000de3e:	add    BYTE PTR [rax],al
   14000de40:	mov    dh,0x9c
   14000de42:	add    DWORD PTR [rax],eax
   14000de44:	add    BYTE PTR [rax],al
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	pop    rdx
   14000de49:	pushf  
   14000de4a:	add    DWORD PTR [rax],eax
   14000de4c:	add    BYTE PTR [rax],al
   14000de4e:	add    BYTE PTR [rax],al
   14000de50:	cmp    bl,BYTE PTR [rcx+rax*1+0x0]
   14000de57:	add    BYTE PTR [rsi],al
   14000de59:	pushf  
   14000de5a:	add    DWORD PTR [rax],eax
   14000de5c:	add    BYTE PTR [rax],al
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	rcr    BYTE PTR [rbx+0x1],cl
   14000de66:	add    BYTE PTR [rax],al
   14000de68:	lods   al,BYTE PTR ds:[rsi]
   14000de69:	fwait
   14000de6a:	add    DWORD PTR [rax],eax
   14000de6c:	add    BYTE PTR [rax],al
   14000de6e:	add    BYTE PTR [rax],al
   14000de70:	js     0x14000de0d
   14000de72:	add    DWORD PTR [rax],eax
   14000de74:	add    BYTE PTR [rax],al
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	rex.W
   14000de79:	fwait
   14000de7a:	add    DWORD PTR [rax],eax
   14000de7c:	add    BYTE PTR [rax],al
   14000de7e:	add    BYTE PTR [rax],al
   14000de80:	and    BYTE PTR [rbx+0x1],bl
   14000de86:	add    BYTE PTR [rax],al
   14000de88:	(bad)  
   14000de89:	(bad)  
   14000de8a:	add    DWORD PTR [rax],eax
   14000de8c:	add    BYTE PTR [rax],al
   14000de8e:	add    BYTE PTR [rax],al
   14000de90:	fcomp  DWORD PTR [rdx+0x1]
   14000de96:	add    BYTE PTR [rax],al
   14000de98:	stos   BYTE PTR es:[rdi],al
   14000de99:	(bad)  
   14000de9a:	add    DWORD PTR [rax],eax
   14000de9c:	add    BYTE PTR [rax],al
   14000de9e:	add    BYTE PTR [rax],al
   14000dea0:	push   0x19a
   14000dea5:	add    BYTE PTR [rax],al
   14000dea7:	add    BYTE PTR [rsi],ch
   14000dea9:	(bad)  
   14000deaa:	add    DWORD PTR [rax],eax
   14000deac:	add    BYTE PTR [rax],al
   14000deae:	add    BYTE PTR [rax],al
   14000deb0:	(bad)  
   14000deb1:	(bad)  
   14000deb2:	add    DWORD PTR [rax],eax
   14000deb4:	add    BYTE PTR [rax],al
   14000deb6:	add    BYTE PTR [rax],al
   14000deb8:	ficomp WORD PTR [rcx+0x1]
   14000debe:	add    BYTE PTR [rax],al
   14000dec0:	scas   al,BYTE PTR es:[rdi]
   14000dec1:	cdq    
   14000dec2:	add    DWORD PTR [rax],eax
   14000dec4:	add    BYTE PTR [rax],al
   14000dec6:	add    BYTE PTR [rax],al
   14000dec8:	test   BYTE PTR [rcx+0x1],bl
   14000dece:	add    BYTE PTR [rax],al
   14000ded0:	push   0xffffffffffffff99
   14000ded2:	add    DWORD PTR [rax],eax
   14000ded4:	add    BYTE PTR [rax],al
   14000ded6:	add    BYTE PTR [rax],al
   14000ded8:	rex.X cdq 
   14000deda:	add    DWORD PTR [rax],eax
   14000dedc:	add    BYTE PTR [rax],al
   14000dede:	add    BYTE PTR [rax],al
   14000dee0:	and    BYTE PTR [rcx+0x1],bl
   14000dee6:	add    BYTE PTR [rax],al
   14000dee8:	hlt    
   14000dee9:	cwde   
   14000deea:	add    DWORD PTR [rax],eax
   14000deec:	add    BYTE PTR [rax],al
   14000deee:	add    BYTE PTR [rax],al
   14000def0:	mov    esi,0x198
   14000def5:	add    BYTE PTR [rax],al
   14000def7:	add    al,bh
   14000def9:	push   0x1
   14000defe:	add    BYTE PTR [rax],al
   14000df00:	mov    ds,WORD PTR [rax+0x1]
   14000df06:	add    BYTE PTR [rax],al
   14000df08:	(bad)  
   14000df09:	push   0x1
   14000df0e:	add    BYTE PTR [rax],al
   14000df10:	xchg   edx,eax
   14000df11:	push   0x1
   14000df16:	add    BYTE PTR [rax],al
   14000df18:	(bad)  
   14000df19:	push   0x1
   14000df1e:	add    BYTE PTR [rax],al
   14000df20:	cs push 0x1
   14000df26:	add    BYTE PTR [rax],al
   14000df28:	repnz add DWORD PTR [eax],eax
   14000df2c:	add    BYTE PTR [rax],al
   14000df2e:	add    BYTE PTR [rax],al
   14000df30:	mov    edx,0x167
   14000df35:	add    BYTE PTR [rax],al
   14000df37:	add    BYTE PTR [rdi+riz*2+0x1],al
   14000df3e:	add    BYTE PTR [rax],al
   14000df40:	pop    rsp
   14000df41:	add    DWORD PTR [eax],eax
   14000df44:	add    BYTE PTR [rax],al
   14000df46:	add    BYTE PTR [rax],al
   14000df48:	cmp    BYTE PTR [rdi+0x1],ah
   14000df4b:	add    BYTE PTR [rax],al
   14000df4d:	add    BYTE PTR [rax],al
   14000df4f:	add    BYTE PTR [rdx],cl
   14000df51:	add    DWORD PTR [eax],eax
   14000df54:	add    BYTE PTR [rax],al
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	in     al,0x66
   14000df5a:	add    DWORD PTR [rax],eax
   14000df5c:	add    BYTE PTR [rax],al
   14000df5e:	add    BYTE PTR [rax],al
   14000df60:	ret    0x166
   14000df63:	add    BYTE PTR [rax],al
   14000df65:	add    BYTE PTR [rax],al
   14000df67:	add    BYTE PTR [rdx+0x166],bl
   14000df6d:	add    BYTE PTR [rax],al
   14000df6f:	add    BYTE PTR [rdx],dh
   14000df71:	cwde   
   14000df72:	add    DWORD PTR [rax],eax
   14000df74:	add    BYTE PTR [rax],al
   14000df76:	add    BYTE PTR [rax],al
   14000df78:	(bad)  
   14000df79:	cwde   
   14000df7a:	add    DWORD PTR [rax],eax
   14000df7c:	add    BYTE PTR [rax],al
   14000df7e:	add    BYTE PTR [rax],al
   14000df80:	test   BYTE PTR [rdi+0x1],dl
   14000df86:	add    BYTE PTR [rax],al
   14000df88:	or     BYTE PTR [rdi+0x1],dl
   14000df8e:	add    BYTE PTR [rax],al
   14000df90:	enter  0x196,0x0
   14000df94:	add    BYTE PTR [rax],al
   14000df96:	add    BYTE PTR [rax],al
   14000df98:	mov    ss,WORD PTR [rsi+0x1]
   14000df9e:	add    BYTE PTR [rax],al
   14000dfa0:	js     0x14000df38
   14000dfa2:	add    DWORD PTR [rax],eax
   14000dfa4:	add    BYTE PTR [rax],al
   14000dfa6:	add    BYTE PTR [rax],al
   14000dfa8:	(bad)  
   14000dfa9:	xchg   esi,eax
   14000dfaa:	add    DWORD PTR [rax],eax
   14000dfac:	add    BYTE PTR [rax],al
   14000dfae:	add    BYTE PTR [rax],al
   14000dfb0:	rex.RX xchg esi,eax
   14000dfb2:	add    DWORD PTR [rax],eax
   14000dfb4:	add    BYTE PTR [rax],al
   14000dfb6:	add    BYTE PTR [rax],al
   14000dfb8:	cs xchg esi,eax
   14000dfba:	add    DWORD PTR [rax],eax
   14000dfbc:	add    BYTE PTR [rax],al
   14000dfbe:	add    BYTE PTR [rax],al
   14000dfc0:	sbb    BYTE PTR [rsi+0x1],dl
   14000dfc6:	add    BYTE PTR [rax],al
   14000dfc8:	add    BYTE PTR [rsi+0x1],dl
   14000dfce:	add    BYTE PTR [rax],al
   14000dfd0:	out    0x95,al
   14000dfd2:	add    DWORD PTR [rax],eax
   14000dfd4:	add    BYTE PTR [rax],al
   14000dfd6:	add    BYTE PTR [rax],al
   14000dfd8:	(bad)  
   14000dfd9:	xchg   ebp,eax
   14000dfda:	add    DWORD PTR [rax],eax
   14000dfdc:	add    BYTE PTR [rax],al
   14000dfde:	add    BYTE PTR [rax],al
   14000dfe0:	xchg   edx,eax
   14000dfe1:	xchg   ebp,eax
   14000dfe2:	add    DWORD PTR [rax],eax
   14000dfe4:	add    BYTE PTR [rax],al
   14000dfe6:	add    BYTE PTR [rax],al
   14000dfe8:	push   0xffffffffffffff95
   14000dfea:	add    DWORD PTR [rax],eax
   14000dfec:	add    BYTE PTR [rax],al
   14000dfee:	add    BYTE PTR [rax],al
   14000dff0:	cmp    dl,BYTE PTR [rbp+0x1]
   14000dff6:	add    BYTE PTR [rax],al
   14000dff8:	add    dl,BYTE PTR [rbp+0x1]
   14000dffe:	add    BYTE PTR [rax],al
   14000e000:	(bad)  
   14000e001:	xchg   esp,eax
   14000e002:	add    DWORD PTR [rax],eax
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	movabs al,ds:0x7000000000000194
   14000e011:	xchg   esp,eax
   14000e012:	add    DWORD PTR [rax],eax
   14000e014:	add    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	rex xchg esp,eax
   14000e01a:	add    DWORD PTR [rax],eax
   14000e01c:	add    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	sbb    BYTE PTR [rcx+rax*1+0x0],dl
   14000e027:	add    dh,ah
   14000e029:	xchg   ebx,eax
   14000e02a:	add    DWORD PTR [rax],eax
   14000e02c:	add    BYTE PTR [rax],al
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	mov    esp,0x193
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rsi-0x6d],bh
   14000e03a:	add    DWORD PTR [rax],eax
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	push   rsp
   14000e041:	xchg   ebx,eax
   14000e042:	add    DWORD PTR [rax],eax
   14000e044:	add    BYTE PTR [rax],al
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	and    dl,BYTE PTR [rbx+0x1]
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	fcom   DWORD PTR [rdx+0x1]
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e059:	xchg   edx,eax
   14000e05a:	add    DWORD PTR [rax],eax
   14000e05c:	add    BYTE PTR [rax],al
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	test   BYTE PTR [rdx+0x1],dl
   14000e066:	add    BYTE PTR [rax],al
   14000e068:	pop    rax
   14000e069:	xchg   edx,eax
   14000e06a:	add    DWORD PTR [rax],eax
   14000e06c:	add    BYTE PTR [rax],al
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	ss xchg edx,eax
   14000e072:	add    DWORD PTR [rax],eax
   14000e074:	add    BYTE PTR [rax],al
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	or     BYTE PTR [rdx+0x1],dl
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	loopne 0x14000e013
   14000e082:	add    DWORD PTR [rax],eax
   14000e084:	add    BYTE PTR [rax],al
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	mov    dh,0x91
   14000e08a:	add    DWORD PTR [rax],eax
   14000e08c:	add    BYTE PTR [rax],al
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	cwde   
   14000e091:	xchg   ecx,eax
   14000e092:	add    DWORD PTR [rax],eax
   14000e094:	add    BYTE PTR [rax],al
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	jb     0x14000e02b
   14000e09a:	add    DWORD PTR [rax],eax
   14000e09c:	add    BYTE PTR [rax],al
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	rex.R xchg ecx,eax
   14000e0a2:	add    DWORD PTR [rax],eax
   14000e0a4:	add    BYTE PTR [rax],al
   14000e0a6:	add    BYTE PTR [rax],al
   14000e0a8:	cli    
   14000e0a9:	nop
   14000e0aa:	add    DWORD PTR [rax],eax
   14000e0ac:	add    BYTE PTR [rax],al
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	(bad)  
   14000e0b1:	nop
   14000e0b2:	add    DWORD PTR [rax],eax
   14000e0b4:	add    BYTE PTR [rax],al
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	movabs ds:0x7800000000000190,al
   14000e0c1:	nop
   14000e0c2:	add    DWORD PTR [rax],eax
   14000e0c4:	add    BYTE PTR [rax],al
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	pop    rdx
   14000e0c9:	nop
   14000e0ca:	add    DWORD PTR [rax],eax
   14000e0cc:	add    BYTE PTR [rax],al
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	xor    BYTE PTR [rax+0x1],dl
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	add    BYTE PTR [rax+0x1],dl
   14000e0de:	add    BYTE PTR [rax],al
   14000e0e0:	ror    BYTE PTR [rdi+0x1],1
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	movabs al,ds:0x700000000000018f
   14000e0f1:	pop    QWORD PTR [rcx]
   14000e0f3:	add    BYTE PTR [rax],al
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rax],dh
   14000e0f9:	pop    QWORD PTR [rcx]
   14000e0fb:	add    BYTE PTR [rax],al
   14000e0fd:	add    BYTE PTR [rax],al
   14000e0ff:	add    BYTE PTR [rdi+rcx*4],al
   14000e102:	add    DWORD PTR [rax],eax
   14000e104:	add    BYTE PTR [rax],al
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	ror    BYTE PTR [rsi+0x1],1
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e111:	mov    es,WORD PTR [rcx]
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rax-0x72],ch
   14000e11a:	add    DWORD PTR [rax],eax
   14000e11c:	add    BYTE PTR [rax],al
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	mov    es,WORD PTR ds:[rcx]
   14000e123:	add    BYTE PTR [rax],al
   14000e125:	add    BYTE PTR [rax],al
   14000e127:	add    BYTE PTR [rsi+rcx*4],cl
   14000e12a:	add    DWORD PTR [rax],eax
   14000e12c:	add    BYTE PTR [rax],al
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	in     al,0x8d
   14000e132:	add    DWORD PTR [rax],eax
   14000e134:	add    BYTE PTR [rax],al
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	test   al,0x8d
   14000e13a:	add    DWORD PTR [rax],eax
   14000e13c:	add    BYTE PTR [rax],al
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	or     BYTE PTR [rbp+0x1],0x0
   14000e147:	add    BYTE PTR [rax-0x73],dl
   14000e14a:	add    DWORD PTR [rax],eax
   14000e14c:	add    BYTE PTR [rax],al
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	add    cl,BYTE PTR [rbp+0x1]
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	stos   BYTE PTR es:[rdi],al
   14000e159:	mov    WORD PTR [rcx],es
   14000e15b:	add    BYTE PTR [rax],al
   14000e15d:	add    BYTE PTR [rax],al
   14000e15f:	add    BYTE PTR [rax-0x74],ch
   14000e162:	add    DWORD PTR [rax],eax
   14000e164:	add    BYTE PTR [rax],al
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	sub    BYTE PTR [rcx+rax*1+0x0],cl
   14000e16f:	add    dl,bl
   14000e171:	mov    eax,DWORD PTR [rcx]
   14000e173:	add    BYTE PTR [rax],al
   14000e175:	add    BYTE PTR [rax],al
   14000e177:	add    BYTE PTR [rdx-0x75],bh
   14000e17a:	add    DWORD PTR [rax],eax
   14000e17c:	add    BYTE PTR [rax],al
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	mov    r8d,DWORD PTR [rcx]
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    BYTE PTR [rsi],bl
   14000e189:	mov    eax,DWORD PTR [rcx]
   14000e18b:	add    BYTE PTR [rax],al
   14000e18d:	add    BYTE PTR [rax],al
   14000e18f:	add    dh,dh
   14000e191:	mov    al,BYTE PTR [rcx]
   14000e193:	add    BYTE PTR [rax],al
   14000e195:	add    BYTE PTR [rax],al
   14000e197:	add    BYTE PTR [rax+0x18a],al
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rsi-0x76],cl
   14000e1a2:	add    DWORD PTR [rax],eax
   14000e1a4:	add    BYTE PTR [rax],al
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	(bad)  
   14000e1a9:	mov    al,BYTE PTR [rcx]
   14000e1ab:	add    BYTE PTR [rax],al
   14000e1ad:	add    BYTE PTR [rax],al
   14000e1af:	add    dh,ch
   14000e1b1:	mov    DWORD PTR [rcx],eax
   14000e1b3:	add    BYTE PTR [rax],al
   14000e1b5:	add    BYTE PTR [rax],al
   14000e1b7:	add    BYTE PTR [rsi+0x189],dh
   14000e1bd:	add    BYTE PTR [rax],al
   14000e1bf:	add    BYTE PTR [rdx-0x77],bh
   14000e1c2:	add    DWORD PTR [rax],eax
   14000e1c4:	add    BYTE PTR [rax],al
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	cmp    al,0x89
   14000e1ca:	add    DWORD PTR [rax],eax
   14000e1cc:	add    BYTE PTR [rax],al
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	(bad)  
   14000e1d1:	mov    DWORD PTR [rcx],eax
   14000e1d3:	add    BYTE PTR [rax],al
   14000e1d5:	add    BYTE PTR [rax],al
   14000e1d7:	add    al,al
   14000e1d9:	mov    BYTE PTR [rcx],al
   14000e1db:	add    BYTE PTR [rax],al
   14000e1dd:	add    BYTE PTR [rax],al
   14000e1df:	add    BYTE PTR [rax+0x188],ah
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    BYTE PTR [rax+rcx*4+0x1],bh
   14000e1eb:	add    BYTE PTR [rax],al
   14000e1ed:	add    BYTE PTR [rax],al
   14000e1ef:	add    BYTE PTR [rax-0x78],cl
   14000e1f2:	add    DWORD PTR [rax],eax
   14000e1f4:	add    BYTE PTR [rax],al
   14000e1f6:	add    BYTE PTR [rax],al
   14000e1f8:	sub    al,0x88
   14000e1fa:	add    DWORD PTR [rax],eax
   14000e1fc:	add    BYTE PTR [rax],al
   14000e1fe:	add    BYTE PTR [rax],al
   14000e200:	add    cl,BYTE PTR [rax+0x1]
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	(bad)  
   14000e209:	xchg   DWORD PTR [rcx],eax
   14000e20b:	add    BYTE PTR [rax],al
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rdx+0x187],bl
   14000e215:	add    BYTE PTR [rax],al
   14000e217:	add    BYTE PTR [rdx-0x79],cl
   14000e21a:	add    DWORD PTR [rax],eax
   14000e21c:	add    BYTE PTR [rax],al
   14000e21e:	add    BYTE PTR [rax],al
   14000e220:	(bad)  
   14000e221:	xchg   DWORD PTR [rcx],eax
   14000e223:	add    BYTE PTR [rax],al
   14000e225:	add    BYTE PTR [rax],al
   14000e227:	add    ah,bl
   14000e229:	xchg   BYTE PTR [rcx],al
   14000e22b:	add    BYTE PTR [rax],al
   14000e22d:	add    BYTE PTR [rax],al
   14000e22f:	add    BYTE PTR [rdx+0x186],bl
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	add    BYTE PTR [rdx-0x7a],ah
   14000e23a:	add    DWORD PTR [rax],eax
   14000e23c:	add    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	xor    al,BYTE PTR [rsi+0x1]
   14000e246:	add    BYTE PTR [rax],al
   14000e248:	or     BYTE PTR [rsi+0x1],al
   14000e24e:	add    BYTE PTR [rax],al
   14000e250:	(bad)  
   14000e251:	test   DWORD PTR [rcx],eax
   14000e253:	add    BYTE PTR [rax],al
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    BYTE PTR [rsi+0x185],bl
   14000e25d:	add    BYTE PTR [rax],al
   14000e25f:	add    BYTE PTR [rbp+rax*4+0x1],ch
   14000e263:	add    BYTE PTR [rax],al
   14000e265:	add    BYTE PTR [rax],al
   14000e267:	add    BYTE PTR [rax],bh
   14000e269:	test   DWORD PTR [rcx],eax
   14000e26b:	add    BYTE PTR [rax],al
   14000e26d:	add    BYTE PTR [rax],al
   14000e26f:	add    BYTE PTR [rdx],al
   14000e271:	test   DWORD PTR [rcx],eax
   14000e273:	add    BYTE PTR [rax],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    ah,al
   14000e279:	test   BYTE PTR [rcx],al
   14000e27b:	add    BYTE PTR [rax],al
   14000e27d:	add    BYTE PTR [rax],al
   14000e27f:	add    BYTE PTR [rdx+0x184],cl
   14000e285:	add    BYTE PTR [rax],al
   14000e287:	add    BYTE PTR [rdx-0x7c],dl
   14000e28a:	add    DWORD PTR [rax],eax
   14000e28c:	add    BYTE PTR [rax],al
   14000e28e:	add    BYTE PTR [rax],al
   14000e290:	and    BYTE PTR [rcx+rax*1+0x0],al
   14000e297:	add    dl,ah
   14000e299:	add    DWORD PTR [rcx],0x0
   14000e29c:	add    BYTE PTR [rax],al
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	mov    eax,0x183
   14000e2a5:	add    BYTE PTR [rax],al
   14000e2a7:	add    BYTE PTR [rsi+0x183],al
   14000e2ad:	add    BYTE PTR [rax],al
   14000e2af:	add    BYTE PTR [rdx-0x7d],cl
   14000e2b2:	add    DWORD PTR [rax],eax
   14000e2b4:	add    BYTE PTR [rax],al
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	add    al,0x83
   14000e2ba:	add    DWORD PTR [rax],eax
   14000e2bc:	add    BYTE PTR [rax],al
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	xchg   BYTE PTR [rdx+0x1],al
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	rex.R (bad) 
   14000e2ca:	add    DWORD PTR [rax],eax
   14000e2cc:	add    BYTE PTR [rax],al
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	hlt    
   14000e2d1:	add    DWORD PTR [rcx],0x0
   14000e2d7:	add    BYTE PTR [rcx+rax*4+0x1],dl
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	pop    rsp
   14000e2e1:	add    DWORD PTR [rcx],0x0
   14000e2e7:	add    BYTE PTR [rsi],dh
   14000e2e9:	add    DWORD PTR [rcx],0x0
   14000e2ef:	add    BYTE PTR [rsi],cl
   14000e2f1:	add    DWORD PTR [rcx],0x0
   14000e2f7:	add    BYTE PTR [rax+0x180],bl
   14000e2fd:	add    BYTE PTR [rax],al
   14000e2ff:	add    BYTE PTR [rax+rax*4+0x1],bl
   14000e303:	add    BYTE PTR [rax],al
   14000e305:	add    BYTE PTR [rax],al
   14000e307:	add    BYTE PTR [rsi],ah
   14000e309:	add    BYTE PTR [rcx],0x0
   14000e30c:	add    BYTE PTR [rax],al
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	retf   0x17f
   14000e313:	add    BYTE PTR [rax],al
   14000e315:	add    BYTE PTR [rax],al
   14000e317:	add    BYTE PTR [rdx+0x17f],cl
   14000e31d:	add    BYTE PTR [rax],al
   14000e31f:	add    BYTE PTR [rdi+rdi*2+0x1],cl
   14000e323:	add    BYTE PTR [rax],al
   14000e325:	add    BYTE PTR [rax],al
   14000e327:	add    BYTE PTR [rdx],bl
   14000e329:	jg     0x14000e32c
   14000e32b:	add    BYTE PTR [rax],al
   14000e32d:	add    BYTE PTR [rax],al
   14000e32f:	add    dl,ch
   14000e331:	jle    0x14000e334
   14000e333:	add    BYTE PTR [rax],al
   14000e335:	add    BYTE PTR [rax],al
   14000e337:	add    dl,al
   14000e339:	jle    0x14000e33c
   14000e33b:	add    BYTE PTR [rax],al
   14000e33d:	add    BYTE PTR [rax],al
   14000e33f:	add    BYTE PTR [rsi+rdi*2+0x1],cl
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	pop    rsp
   14000e349:	jle    0x14000e34c
   14000e34b:	add    BYTE PTR [rax],al
   14000e34d:	add    BYTE PTR [rax],al
   14000e34f:	add    BYTE PTR [rsi+rdi*2],ah
   14000e352:	add    DWORD PTR [rax],eax
   14000e354:	add    BYTE PTR [rax],al
   14000e356:	add    BYTE PTR [rax],al
   14000e358:	out    0x7d,al
   14000e35a:	add    DWORD PTR [rax],eax
   14000e35c:	add    BYTE PTR [rax],al
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	movabs al,ds:0x620000000000017d
   14000e369:	jge    0x14000e36c
   14000e36b:	add    BYTE PTR [rax],al
   14000e36d:	add    BYTE PTR [rax],al
   14000e36f:	add    BYTE PTR [rdi*2+0x1],dl
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	ret    0x17c
   14000e37b:	add    BYTE PTR [rax],al
   14000e37d:	add    BYTE PTR [rax],al
   14000e37f:	add    BYTE PTR [rdx+0x17c],bl
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    BYTE PTR [rsp+rdi*2+0x1],dh
   14000e38b:	add    BYTE PTR [rax],al
   14000e38d:	add    BYTE PTR [rax],al
   14000e38f:	add    BYTE PTR [rsi],bh
   14000e391:	jl     0x14000e394
   14000e393:	add    BYTE PTR [rax],al
   14000e395:	add    BYTE PTR [rax],al
   14000e397:	add    BYTE PTR [rdx],bl
   14000e399:	jl     0x14000e39c
   14000e39b:	add    BYTE PTR [rax],al
   14000e39d:	add    BYTE PTR [rax],al
   14000e39f:	add    al,dh
   14000e3a1:	jnp    0x14000e3a4
   14000e3a3:	add    BYTE PTR [rax],al
   14000e3a5:	add    BYTE PTR [rax],al
   14000e3a7:	add    al,cl
   14000e3a9:	jnp    0x14000e3ac
   14000e3ab:	add    BYTE PTR [rax],al
   14000e3ad:	add    BYTE PTR [rax],al
   14000e3af:	add    BYTE PTR [rsi+0x17b],cl
   14000e3b5:	add    BYTE PTR [rax],al
   14000e3b7:	add    BYTE PTR [rbx+rdi*2],bh
   14000e3ba:	add    DWORD PTR [rax],eax
   14000e3bc:	add    BYTE PTR [rax],al
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	add    BYTE PTR [rbx+0x1],bh
   14000e3c3:	add    BYTE PTR [rax],al
   14000e3c5:	add    BYTE PTR [rax],al
   14000e3c7:	add    dh,al
   14000e3c9:	jp     0x14000e3cc
   14000e3cb:	add    BYTE PTR [rax],al
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    BYTE PTR [rdx+rdi*2+0x1],al
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	rex.WR jp 0x14000e3dc
   14000e3db:	add    BYTE PTR [rax],al
   14000e3dd:	add    BYTE PTR [rax],al
   14000e3df:	add    BYTE PTR [rdx],bl
   14000e3e1:	jp     0x14000e3e4
   14000e3e3:	add    BYTE PTR [rax],al
   14000e3e5:	add    BYTE PTR [rax],al
   14000e3e7:	add    al,dh
   14000e3e9:	jns    0x14000e3ec
   14000e3eb:	add    BYTE PTR [rax],al
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    BYTE PTR [rsi+0x179],dh
   14000e3f5:	add    BYTE PTR [rax],al
   14000e3f7:	add    BYTE PTR [rdx+0x79],bh
   14000e3fa:	add    DWORD PTR [rax],eax
   14000e3fc:	add    BYTE PTR [rax],al
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	rex.RX jns 0x14000e404
   14000e403:	add    BYTE PTR [rax],al
   14000e405:	add    BYTE PTR [rax],al
   14000e407:	add    ah,dh
   14000e409:	js     0x14000e40c
   14000e40b:	add    BYTE PTR [rax],al
   14000e40d:	add    BYTE PTR [rax],al
   14000e40f:	add    BYTE PTR [rsi+0x178],ch
   14000e415:	add    BYTE PTR [rax],al
   14000e417:	add    BYTE PTR [rdx+0x178],al
   14000e41d:	add    BYTE PTR [rax],al
   14000e41f:	add    BYTE PTR [rdx+0x78],cl
   14000e422:	add    DWORD PTR [rax],eax
   14000e424:	add    BYTE PTR [rax],al
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	or     BYTE PTR [rax+0x1],bh
   14000e42b:	add    BYTE PTR [rax],al
   14000e42d:	add    BYTE PTR [rax],al
   14000e42f:	add    al,cl
   14000e431:	ja     0x14000e434
   14000e433:	add    BYTE PTR [rax],al
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    BYTE PTR [rsi+0x177],al
   14000e43d:	add    BYTE PTR [rax],al
   14000e43f:	add    BYTE PTR [rsi],bh
   14000e441:	ja     0x14000e444
   14000e443:	add    BYTE PTR [rax],al
   14000e445:	add    BYTE PTR [rax],al
   14000e447:	add    BYTE PTR [rdx],al
   14000e449:	ja     0x14000e44c
   14000e44b:	add    BYTE PTR [rax],al
   14000e44d:	add    BYTE PTR [rax],al
   14000e44f:	add    dh,cl
   14000e451:	jbe    0x14000e454
   14000e453:	add    BYTE PTR [rax],al
   14000e455:	add    BYTE PTR [rax],al
   14000e457:	add    BYTE PTR [rax+0x176],dl
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	add    BYTE PTR [rsi+rsi*2+0x1],dl
   14000e463:	add    BYTE PTR [rax],al
   14000e465:	add    BYTE PTR [rax],al
   14000e467:	add    BYTE PTR [rax],bl
   14000e469:	jbe    0x14000e46c
   14000e46b:	add    BYTE PTR [rax],al
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    ah,bl
   14000e471:	jne    0x14000e474
   14000e473:	add    BYTE PTR [rax],al
   14000e475:	add    BYTE PTR [rax],al
   14000e477:	add    BYTE PTR [rsi+0x175],bl
   14000e47d:	add    BYTE PTR [rax],al
   14000e47f:	add    BYTE PTR [rax+0x75],bl
   14000e482:	add    DWORD PTR [rax],eax
   14000e484:	add    BYTE PTR [rax],al
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	(bad)  
   14000e489:	jne    0x14000e48c
   14000e48b:	add    BYTE PTR [rax],al
   14000e48d:	add    BYTE PTR [rax],al
   14000e48f:	add    dh,dl
   14000e491:	je     0x14000e494
   14000e493:	add    BYTE PTR [rax],al
   14000e495:	add    BYTE PTR [rax],al
   14000e497:	add    BYTE PTR [rsp+rsi*2+0x1],bl
   14000e49e:	add    BYTE PTR [rax],al
   14000e4a0:	push   0x74
   14000e4a2:	add    DWORD PTR [rax],eax
   14000e4a4:	add    BYTE PTR [rax],al
   14000e4a6:	add    BYTE PTR [rax],al
   14000e4a8:	ss je  0x14000e4ac
   14000e4ab:	add    BYTE PTR [rax],al
   14000e4ad:	add    BYTE PTR [rax],al
   14000e4af:	add    al,dh
   14000e4b1:	jae    0x14000e4b4
   14000e4b3:	add    BYTE PTR [rax],al
   14000e4b5:	add    BYTE PTR [rax],al
   14000e4b7:	add    BYTE PTR [rsi+0x173],bh
   14000e4bd:	add    BYTE PTR [rax],al
   14000e4bf:	add    BYTE PTR [rsi+0x73],bh
   14000e4c2:	add    DWORD PTR [rax],eax
   14000e4c4:	add    BYTE PTR [rax],al
   14000e4c6:	add    BYTE PTR [rax],al
   14000e4c8:	push   rsp
   14000e4c9:	jae    0x14000e4cc
   14000e4cb:	add    BYTE PTR [rax],al
   14000e4cd:	add    BYTE PTR [rax],al
   14000e4cf:	add    BYTE PTR [rdx],ah
   14000e4d1:	jae    0x14000e4d4
   14000e4d3:	add    BYTE PTR [rax],al
   14000e4d5:	add    BYTE PTR [rax],al
   14000e4d7:	add    al,bl
   14000e4d9:	jb     0x14000e4dc
   14000e4db:	add    BYTE PTR [rax],al
   14000e4dd:	add    BYTE PTR [rax],al
   14000e4df:	add    BYTE PTR [rdx+0x172],bl
   14000e4e5:	add    BYTE PTR [rax],al
   14000e4e7:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   14000e4eb:	add    BYTE PTR [rax],al
   14000e4ed:	add    BYTE PTR [rax],al
   14000e4ef:	add    BYTE PTR [rdx+rsi*2],bh
   14000e4f2:	add    DWORD PTR [rax],eax
   14000e4f4:	add    BYTE PTR [rax],al
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	add    dh,BYTE PTR [rdx+0x1]
   14000e4fb:	add    BYTE PTR [rax],al
   14000e4fd:	add    BYTE PTR [rax],al
   14000e4ff:	add    dl,cl
   14000e501:	jno    0x14000e504
   14000e503:	add    BYTE PTR [rax],al
   14000e505:	add    BYTE PTR [rax],al
   14000e507:	add    BYTE PTR [rax+0x171],dl
   14000e50d:	add    BYTE PTR [rax],al
   14000e50f:	add    BYTE PTR [rdx+0x71],dl
   14000e512:	add    DWORD PTR [rax],eax
   14000e514:	add    BYTE PTR [rax],al
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	and    BYTE PTR [rcx+0x1],dh
   14000e51b:	add    BYTE PTR [rax],al
   14000e51d:	add    BYTE PTR [rax],al
   14000e51f:	add    dl,ch
   14000e521:	jo     0x14000e524
   14000e523:	add    BYTE PTR [rax],al
   14000e525:	add    BYTE PTR [rax],al
   14000e527:	add    BYTE PTR [rsi+0x170],dh
   14000e52d:	add    BYTE PTR [rax],al
   14000e52f:	add    BYTE PTR [rdx+0x170],al
   14000e535:	add    BYTE PTR [rax],al
   14000e537:	add    BYTE PTR [rax+rsi*2+0x1],cl
   14000e53b:	add    BYTE PTR [rax],al
   14000e53d:	add    BYTE PTR [rax],al
   14000e53f:	add    BYTE PTR [rsi],cl
   14000e541:	jo     0x14000e544
   14000e543:	add    BYTE PTR [rax],al
   14000e545:	add    BYTE PTR [rax],al
   14000e547:	add    ah,dl
   14000e549:	outs   dx,DWORD PTR ds:[rsi]
   14000e54a:	add    DWORD PTR [rax],eax
   14000e54c:	add    BYTE PTR [rax],al
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	pushf  
   14000e551:	outs   dx,DWORD PTR ds:[rsi]
   14000e552:	add    DWORD PTR [rax],eax
   14000e554:	add    BYTE PTR [rax],al
   14000e556:	add    BYTE PTR [rax],al
   14000e558:	ins    BYTE PTR es:[rdi],dx
   14000e559:	outs   dx,DWORD PTR ds:[rsi]
   14000e55a:	add    DWORD PTR [rax],eax
   14000e55c:	add    BYTE PTR [rax],al
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000e562:	add    DWORD PTR [rax],eax
   14000e564:	add    BYTE PTR [rax],al
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	sbb    ch,BYTE PTR [rdi+0x1]
   14000e56b:	add    BYTE PTR [rax],al
   14000e56d:	add    BYTE PTR [rax],al
   14000e56f:	add    ah,bl
   14000e571:	outs   dx,BYTE PTR ds:[rsi]
   14000e572:	add    DWORD PTR [rax],eax
   14000e574:	add    BYTE PTR [rax],al
   14000e576:	add    BYTE PTR [rax],al
   14000e578:	mov    dl,0x6e
   14000e57a:	add    DWORD PTR [rax],eax
   14000e57c:	add    BYTE PTR [rax],al
   14000e57e:	add    BYTE PTR [rax],al
   14000e580:	sub    BYTE PTR [rsi+0x1],0x0
   14000e584:	add    BYTE PTR [rax],al
   14000e586:	add    BYTE PTR [rax],al
   14000e588:	push   rax
   14000e589:	outs   dx,BYTE PTR ds:[rsi]
   14000e58a:	add    DWORD PTR [rax],eax
   14000e58c:	add    BYTE PTR [rax],al
   14000e58e:	add    BYTE PTR [rax],al
   14000e590:	adc    al,0x6e
   14000e592:	add    DWORD PTR [rax],eax
   14000e594:	add    BYTE PTR [rax],al
   14000e596:	add    BYTE PTR [rax],al
   14000e598:	out    0x6d,al
   14000e59a:	add    DWORD PTR [rax],eax
   14000e59c:	add    BYTE PTR [rax],al
   14000e59e:	add    BYTE PTR [rax],al
   14000e5a0:	test   al,0x6d
   14000e5a2:	add    DWORD PTR [rax],eax
   14000e5a4:	add    BYTE PTR [rax],al
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	jbe    0x14000e617
   14000e5aa:	add    DWORD PTR [rax],eax
   14000e5ac:	add    BYTE PTR [rax],al
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	pop    rdx
   14000e5b1:	ins    DWORD PTR es:[rdi],dx
   14000e5b2:	add    DWORD PTR [rax],eax
   14000e5b4:	add    BYTE PTR [rax],al
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	xor    BYTE PTR [rbp+0x1],ch
   14000e5bb:	add    BYTE PTR [rax],al
   14000e5bd:	add    BYTE PTR [rax],al
   14000e5bf:	add    al,ch
   14000e5c1:	ins    BYTE PTR es:[rdi],dx
   14000e5c2:	add    DWORD PTR [rax],eax
   14000e5c4:	add    BYTE PTR [rax],al
   14000e5c6:	add    BYTE PTR [rax],al
   14000e5c8:	lods   al,BYTE PTR ds:[rsi]
   14000e5c9:	ins    BYTE PTR es:[rdi],dx
   14000e5ca:	add    DWORD PTR [rax],eax
   14000e5cc:	add    BYTE PTR [rax],al
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	sub    BYTE PTR [rcx+rax*1+0x0],0x0
   14000e5d5:	add    BYTE PTR [rax],al
   14000e5d7:	add    BYTE PTR [rsi+0x6c],al
   14000e5da:	add    DWORD PTR [rax],eax
   14000e5dc:	add    BYTE PTR [rax],al
   14000e5de:	add    BYTE PTR [rax],al
   14000e5e0:	sbb    BYTE PTR [rcx+rax*1+0x0],ch
   14000e5e4:	add    BYTE PTR [rax],al
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	(bad)  
   14000e5e9:	imul   eax,DWORD PTR [rcx],0x0
   14000e5ec:	add    BYTE PTR [rax],al
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	mov    esp,0x16b
   14000e5f5:	add    BYTE PTR [rax],al
   14000e5f7:	add    BYTE PTR [rbx+rbp*2+0x1],al
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	rex.WRX imul r8,QWORD PTR [rcx],0x0
   14000e604:	add    BYTE PTR [rax],al
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	(bad)  
   14000e609:	imul   eax,DWORD PTR [rcx],0x0
   14000e60c:	add    BYTE PTR [rax],al
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	in     al,0x6a
   14000e612:	add    DWORD PTR [rax],eax
   14000e614:	add    BYTE PTR [rax],al
   14000e616:	add    BYTE PTR [rax],al
   14000e618:	mov    dl,0x6a
   14000e61a:	add    DWORD PTR [rax],eax
   14000e61c:	add    BYTE PTR [rax],al
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	jbe    0x14000e68c
   14000e622:	add    DWORD PTR [rax],eax
   14000e624:	add    BYTE PTR [rax],al
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	rex.RX push 0x1
   14000e62b:	add    BYTE PTR [rax],al
   14000e62d:	add    BYTE PTR [rax],al
   14000e62f:	add    BYTE PTR [rdx+rbp*2],dl
   14000e632:	add    DWORD PTR [rax],eax
   14000e634:	add    BYTE PTR [rax],al
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	out    0x69,al
   14000e63a:	add    DWORD PTR [rax],eax
   14000e63c:	add    BYTE PTR [rax],al
   14000e63e:	add    BYTE PTR [rax],al
   14000e640:	mov    dh,0x69
   14000e642:	add    DWORD PTR [rax],eax
   14000e644:	add    BYTE PTR [rax],al
   14000e646:	add    BYTE PTR [rax],al
   14000e648:	mov    ch,BYTE PTR [rcx+0x1]
   14000e64b:	add    BYTE PTR [rax],al
   14000e64d:	add    BYTE PTR [rax],al
   14000e64f:	add    BYTE PTR [rsi+0x69],bl
   14000e652:	add    DWORD PTR [rax],eax
   14000e654:	add    BYTE PTR [rax],al
   14000e656:	add    BYTE PTR [rax],al
   14000e658:	fsubr  DWORD PTR [rsi+0x1]
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	sub    ch,BYTE PTR [rcx+0x1]
   14000e663:	add    BYTE PTR [rax],al
   14000e665:	add    BYTE PTR [rax],al
   14000e667:	add    BYTE PTR [rax+0x66],ah
   14000e66a:	add    DWORD PTR [rax],eax
   14000e66c:	add    BYTE PTR [rax],al
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	cmp    ah,BYTE PTR [rsi+0x1]
   14000e673:	add    BYTE PTR [rax],al
   14000e675:	add    BYTE PTR [rax],al
   14000e677:	add    BYTE PTR [rsi+riz*2],al
   14000e67a:	add    DWORD PTR [rax],eax
   14000e67c:	add    BYTE PTR [rax],al
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	fisub  WORD PTR [rbp+0x1]
   14000e683:	add    BYTE PTR [rax],al
   14000e685:	add    BYTE PTR [rax],al
   14000e687:	add    BYTE PTR [rax+0x165],ch
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    BYTE PTR [rsi+0x165],cl
   14000e695:	add    BYTE PTR [rax],al
   14000e697:	add    BYTE PTR [rsi+0x65],dl
   14000e69a:	add    DWORD PTR [rax],eax
   14000e69c:	add    BYTE PTR [rax],al
   14000e69e:	add    BYTE PTR [rax],al
   14000e6a0:	es add DWORD PTR gs:[rax],eax
   14000e6a4:	add    BYTE PTR [rax],al
   14000e6a6:	add    BYTE PTR [rax],al
   14000e6a8:	add    BYTE PTR [rbp+0x1],ah
   14000e6ab:	add    BYTE PTR [rax],al
   14000e6ad:	add    BYTE PTR [rax],al
   14000e6af:	add    ah,dl
   14000e6b1:	add    DWORD PTR fs:[rax],eax
   14000e6b4:	add    BYTE PTR [rax],al
   14000e6b6:	add    BYTE PTR [rax],al
   14000e6b8:	sahf   
   14000e6b9:	add    DWORD PTR fs:[rax],eax
   14000e6bc:	add    BYTE PTR [rax],al
   14000e6be:	add    BYTE PTR [rax],al
   14000e6c0:	js     0x14000e726
   14000e6c2:	add    DWORD PTR [rax],eax
   14000e6c4:	add    BYTE PTR [rax],al
   14000e6c6:	add    BYTE PTR [rax],al
   14000e6c8:	ss add DWORD PTR fs:[rax],eax
   14000e6cc:	add    BYTE PTR [rax],al
   14000e6ce:	add    BYTE PTR [rax],al
   14000e6d0:	(bad)  
   14000e6d1:	add    DWORD PTR fs:[rax],eax
   14000e6d4:	add    BYTE PTR [rax],al
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	fsub   QWORD PTR [rbx+0x1]
   14000e6db:	add    BYTE PTR [rax],al
   14000e6dd:	add    BYTE PTR [rax],al
   14000e6df:	add    BYTE PTR [rdx+0x163],ch
   14000e6e5:	add    BYTE PTR [rax],al
   14000e6e7:	add    BYTE PTR [rax+0x63],bl
   14000e6ea:	add    DWORD PTR [rax],eax
   14000e6ec:	add    BYTE PTR [rax],al
   14000e6ee:	add    BYTE PTR [rax],al
   14000e6f0:	xor    BYTE PTR [rbx+0x1],ah
   14000e6f3:	add    BYTE PTR [rax],al
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    al,bh
   14000e6f9:	(bad)  
   14000e6fb:	add    BYTE PTR [rax],al
   14000e6fd:	add    BYTE PTR [rax],al
   14000e6ff:	add    BYTE PTR [rax+0x162],ch
   14000e705:	add    BYTE PTR [rax],al
   14000e707:	add    BYTE PTR [rdx+0x162],al
   14000e70d:	add    BYTE PTR [rax],al
   14000e70f:	add    BYTE PTR [rdx+riz*2+0x1],dl
   14000e713:	add    BYTE PTR [rax],al
   14000e715:	add    BYTE PTR [rax],al
   14000e717:	add    BYTE PTR [rsi],cl
   14000e719:	(bad)  
   14000e71b:	add    BYTE PTR [rax],al
   14000e71d:	add    BYTE PTR [rax],al
   14000e71f:	add    dl,dl
   14000e721:	(bad)  
   14000e722:	add    DWORD PTR [rax],eax
   14000e724:	add    BYTE PTR [rax],al
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	mov    esp,0x161
   14000e72d:	add    BYTE PTR [rax],al
   14000e72f:	add    BYTE PTR [rdx+0x161],dl
   14000e735:	add    BYTE PTR [rax],al
   14000e737:	add    BYTE PTR [rsi+0x61],bl
   14000e73a:	add    DWORD PTR [rax],eax
   14000e73c:	add    BYTE PTR [rax],al
   14000e73e:	add    BYTE PTR [rax],al
   14000e740:	mov    eax,0x1ad
   14000e745:	add    BYTE PTR [rax],al
   14000e747:	add    BYTE PTR [rax],dh
   14000e749:	(bad)  
   14000e74a:	add    DWORD PTR [rax],eax
	...
   14000e758:	adc    al,bl
   14000e75a:	add    DWORD PTR [rax],eax
   14000e75c:	add    BYTE PTR [rax],al
   14000e75e:	add    BYTE PTR [rax],al
   14000e760:	(bad)  
   14000e761:	ret    0x1
   14000e764:	add    BYTE PTR [rax],al
   14000e766:	add    BYTE PTR [rax],al
   14000e768:	mov    al,0xc2
   14000e76a:	add    DWORD PTR [rax],eax
   14000e76c:	add    BYTE PTR [rax],al
   14000e76e:	add    BYTE PTR [rax],al
   14000e770:	test   dl,al
   14000e772:	add    DWORD PTR [rax],eax
   14000e774:	add    BYTE PTR [rax],al
   14000e776:	add    BYTE PTR [rax],al
   14000e778:	push   rax
   14000e779:	ret    0x1
   14000e77c:	add    BYTE PTR [rax],al
   14000e77e:	add    BYTE PTR [rax],al
   14000e780:	or     al,0xc2
   14000e782:	add    DWORD PTR [rax],eax
   14000e784:	add    BYTE PTR [rax],al
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	out    0xc1,al
   14000e78a:	add    DWORD PTR [rax],eax
   14000e78c:	add    BYTE PTR [rax],al
   14000e78e:	add    BYTE PTR [rax],al
   14000e790:	(bad)  
   14000e791:	rol    DWORD PTR [rcx],0x0
   14000e794:	add    BYTE PTR [rax],al
   14000e796:	add    BYTE PTR [rax],al
   14000e798:	mov    dl,0xc1
   14000e79a:	add    DWORD PTR [rax],eax
   14000e79c:	add    BYTE PTR [rax],al
   14000e79e:	add    BYTE PTR [rax],al
   14000e7a0:	rol    DWORD PTR ss:[rcx],0x0
   14000e7a4:	add    BYTE PTR [rax],al
   14000e7a6:	add    BYTE PTR [rax],al
   14000e7a8:	push   rdx
   14000e7a9:	rol    DWORD PTR [rcx],0x0
   14000e7ac:	add    BYTE PTR [rax],al
   14000e7ae:	add    BYTE PTR [rax],al
   14000e7b0:	nop
   14000e7b1:	rol    DWORD PTR [rcx],0x0
	...
   14000e7c0:	(bad)  
   14000e7c1:	cmc    
   14000e7c2:	add    DWORD PTR [rax],eax
	...
   14000e7d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e7d9:	mov    ecx,0x14000
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	rol    dl,1
   14000e7e2:	add    BYTE PTR [rax+0x1],al
   14000e7e5:	add    BYTE PTR [rax],al
   14000e7e7:	add    BYTE PTR [rax],dl
   14000e7e9:	ret    
   14000e7ea:	add    BYTE PTR [rax+0x1],al
   14000e7ed:	add    BYTE PTR [rax],al
   14000e7ef:	add    BYTE PTR [rax],ah
   14000e7f1:	ret    
   14000e7f2:	add    BYTE PTR [rax+0x1],al
   14000e7f5:	add    BYTE PTR [rax],al
   14000e7f7:	add    BYTE PTR [rax],dh
   14000e7f9:	ret    
   14000e7fa:	add    BYTE PTR [rax+0x1],al
   14000e7fd:	add    BYTE PTR [rax],al
   14000e7ff:	add    BYTE PTR [rax-0x3d],al
   14000e802:	add    BYTE PTR [rax+0x1],al
   14000e805:	add    BYTE PTR [rax],al
   14000e807:	add    BYTE PTR [rax-0x3d],dl
   14000e80a:	add    BYTE PTR [rax+0x1],al
   14000e80d:	add    BYTE PTR [rax],al
   14000e80f:	add    BYTE PTR [rax-0x3d],ah
   14000e812:	add    BYTE PTR [rax+0x1],al
	...
   14000e825:	add    BYTE PTR [rax],al
   14000e827:	add    BYTE PTR [rsp+rdi*4],dl
   14000e82a:	add    BYTE PTR [rax+0x1],al
   14000e82d:	add    BYTE PTR [rax],al
   14000e82f:	add    BYTE PTR [rax],bl
   14000e831:	mov    esi,0x14000
	...
   14000e83e:	add    BYTE PTR [rax],al
   14000e840:	(bad)
   14000e845:	ins    BYTE PTR es:[rdi],dx
   14000e846:	ins    BYTE PTR es:[rdi],dx
   14000e847:	outs   dx,DWORD PTR ds:[rsi]
   14000e848:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e84b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2af00000
   14000e852:	add    DWORD PTR [rax+0x1],eax
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    BYTE PTR [rax-0x55],dh
   14000e85a:	add    BYTE PTR [rax+0x1],al
   14000e85d:	add    BYTE PTR [rax],al
   14000e85f:	add    BYTE PTR [rax+0x14000aa],dl
   14000e865:	add    BYTE PTR [rax],al
   14000e867:	add    BYTE PTR [rax+0x14000ab],dl
   14000e86d:	add    BYTE PTR [rax],al
   14000e86f:	add    BYTE PTR [rax+0x1400018],al
   14000e875:	add    BYTE PTR [rax],al
   14000e877:	add    BYTE PTR [rsi],ch
   14000e879:	mov    dh,0x0
   14000e87b:	rex add DWORD PTR [rax],eax
   14000e87e:	add    BYTE PTR [rax],al
   14000e880:	xor    al,0xb6
   14000e882:	add    BYTE PTR [rax+0x1],al
   14000e885:	add    BYTE PTR [rax],al
   14000e887:	add    BYTE PTR [rdx],bh
   14000e889:	mov    dh,0x0
   14000e88b:	rex add DWORD PTR [rax],eax
   14000e88e:	add    BYTE PTR [rax],al
   14000e890:	mov    sil,0x0
   14000e893:	rex add DWORD PTR [rax],eax
   14000e896:	add    BYTE PTR [rax],al
   14000e898:	rex.RX mov sil,0x0
   14000e89b:	rex add DWORD PTR [rax],eax
   14000e89e:	add    BYTE PTR [rax],al
   14000e8a0:	rex.WR mov sil,0x0
   14000e8a3:	rex add DWORD PTR [rax],eax
   14000e8a6:	add    BYTE PTR [rax],al
   14000e8a8:	push   rdx
   14000e8a9:	mov    dh,0x0
   14000e8ab:	rex add DWORD PTR [rax],eax
   14000e8ae:	add    BYTE PTR [rax],al
   14000e8b0:	shl    BYTE PTR [rax+0x0],1
   14000e8b3:	rex add DWORD PTR [rax],eax
   14000e8b6:	add    BYTE PTR [rax],al
   14000e8b8:	rex (bad) 
   14000e8ba:	add    BYTE PTR [rax+0x1],al
   14000e8bd:	add    BYTE PTR [rax],al
   14000e8bf:	add    BYTE PTR [rax-0x4a],bl
   14000e8c2:	add    BYTE PTR [rax+0x1],al
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	add    al,dh
   14000e8c9:	add    BYTE PTR [rax],0x40
   14000e8cc:	add    DWORD PTR [rax],eax
   14000e8ce:	add    BYTE PTR [rax],al
   14000e8d0:	loopne 0x14000e92f
   14000e8d2:	add    BYTE PTR [rax+0x1],al
   14000e8d5:	add    BYTE PTR [rax],al
   14000e8d7:	add    BYTE PTR [rsi-0x4a],bl
   14000e8da:	add    BYTE PTR [rax+0x1],al
   14000e8dd:	add    BYTE PTR [rax],al
   14000e8df:	add    BYTE PTR [rax],al
   14000e8e1:	adc    BYTE PTR [rax],al
   14000e8e3:	rex add DWORD PTR [rax],eax
   14000e8e6:	add    BYTE PTR [rax],al
   14000e8e8:	fs mov dh,0x0
   14000e8eb:	rex add DWORD PTR [rax],eax
   14000e8ee:	add    BYTE PTR [rax],al
   14000e8f0:	rex pop rsi
   14000e8f2:	add    BYTE PTR [rax+0x1],al
   14000e8f5:	add    BYTE PTR [rax],al
   14000e8f7:	add    BYTE PTR [rdx-0x4a],ch
   14000e8fa:	add    BYTE PTR [rax+0x1],al
   14000e8fd:	add    BYTE PTR [rax],al
   14000e8ff:	add    BYTE PTR [rax-0x4a],dh
   14000e902:	add    BYTE PTR [rax+0x1],al
   14000e905:	add    BYTE PTR [rax],al
   14000e907:	add    BYTE PTR [rsi-0x4a],dh
   14000e90a:	add    BYTE PTR [rax+0x1],al
   14000e90d:	add    BYTE PTR [rax],al
   14000e90f:	add    BYTE PTR [rsi+rsi*4+0x0],bh
   14000e913:	rex add DWORD PTR [rax],eax
   14000e916:	add    BYTE PTR [rax],al
   14000e918:	(bad)  
   14000e919:	mov    dh,0x0
   14000e91b:	rex add DWORD PTR [rax],eax
   14000e91e:	add    BYTE PTR [rax],al
   14000e920:	mov    BYTE PTR [rsi+0x14000],dh
   14000e926:	add    BYTE PTR [rax],al
   14000e928:	mov    ?,WORD PTR [rsi+0x14000]
   14000e92e:	add    BYTE PTR [rax],al
   14000e930:	xchg   esp,eax
   14000e931:	mov    dh,0x0
   14000e933:	rex add DWORD PTR [rax],eax
   14000e936:	add    BYTE PTR [rax],al
   14000e938:	(bad)  
   14000e939:	mov    dh,0x0
   14000e93b:	rex add DWORD PTR [rax],eax
   14000e93e:	add    BYTE PTR [rax],al
   14000e940:	movabs al,ds:0xa6000000014000b6
   14000e949:	mov    dh,0x0
   14000e94b:	rex add DWORD PTR [rax],eax
   14000e94e:	add    BYTE PTR [rax],al
   14000e950:	lods   al,BYTE PTR ds:[rsi]
   14000e951:	mov    dh,0x0
   14000e953:	rex add DWORD PTR [rax],eax
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	mov    dl,0xb6
   14000e95a:	add    BYTE PTR [rax+0x1],al
   14000e95d:	add    BYTE PTR [rax],al
   14000e95f:	add    BYTE PTR [rax+0x14000b6],bh
   14000e965:	add    BYTE PTR [rax],al
   14000e967:	add    BYTE PTR [rsi+0x14000b6],bh
   14000e96d:	add    BYTE PTR [rax],al
   14000e96f:	add    ah,al
   14000e971:	mov    dh,0x0
   14000e973:	rex add DWORD PTR [rax],eax
   14000e976:	add    BYTE PTR [rax],al
   14000e978:	retf   0xb6
   14000e97b:	rex add DWORD PTR [rax],eax
   14000e97e:	add    BYTE PTR [rax],al
   14000e980:	shl    BYTE PTR [rsi+0x14000],1
   14000e986:	add    BYTE PTR [rax],al
   14000e988:	(bad)  
   14000e989:	mov    dh,0x0
   14000e98b:	rex add DWORD PTR [rax],eax
   14000e98e:	add    BYTE PTR [rax],al
   14000e990:	fdiv   QWORD PTR [rsi+0x14000]
   14000e996:	add    BYTE PTR [rax],al
   14000e998:	loop   0x14000e950
   14000e99a:	add    BYTE PTR [rax+0x1],al
   14000e99d:	add    BYTE PTR [rax],al
   14000e99f:	add    al,ch
   14000e9a1:	mov    dh,0x0
   14000e9a3:	rex add DWORD PTR [rax],eax
   14000e9a6:	add    BYTE PTR [rax],al
   14000e9a8:	out    dx,al
   14000e9a9:	mov    dh,0x0
   14000e9ab:	rex add DWORD PTR [rax],eax
   14000e9ae:	add    BYTE PTR [rax],al
   14000e9b0:	hlt    
   14000e9b1:	mov    dh,0x0
   14000e9b3:	rex add DWORD PTR [rax],eax
   14000e9b6:	add    BYTE PTR [rax],al
   14000e9b8:	cli    
   14000e9b9:	mov    dh,0x0
   14000e9bb:	rex add DWORD PTR [rax],eax
   14000e9be:	add    BYTE PTR [rax],al
   14000e9c0:	je     0x14000ea31
   14000e9c2:	jo     0x14000ea17
   14000e9c4:	jo     0x14000ea32
   14000e9c6:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x61745372
   14000e9ce:	je     0x14000ea35
	...
   14000e9d8:	jae    0x14000ea4a
   14000e9da:	ins    BYTE PTR es:[rdi],dx
   14000e9db:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x61745372
   14000e9e3:	je     0x14000ea4a
   14000e9e5:	add    BYTE PTR [rax],al
   14000e9e7:	add    BYTE PTR [rsi+riz*2],bh
   14000e9ea:	outs   dx,DWORD PTR ds:[rsi]
   14000e9eb:	outs   dx,BYTE PTR ds:[rsi]
   14000e9ec:	je     0x14000ea0e
   14000e9ee:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000e9f1:	outs   dx,DWORD PTR ds:[rsi]
   14000e9f2:	jb     0x14000ea31
   14000e9f4:	and    dh,BYTE PTR [rdx+0x65]
   14000e9f7:	and    bh,BYTE PTR fs:[rsi]
   14000e9fa:	rex.RB jb 0x14000ea6f
   14000e9fd:	outs   dx,DWORD PTR ds:[rsi]
   14000e9fe:	jb     0x14000ea3a
   14000ea00:	and    BYTE PTR [rdi+rbp*1],bh
   14000ea03:	outs   dx,WORD PTR ds:[rsi]
   14000ea05:	outs   dx,BYTE PTR ds:[rsi]
   14000ea06:	je     0x14000ea46
   14000ea08:	add    BYTE PTR [rax],al
   14000ea0a:	add    BYTE PTR [rax],al
   14000ea0c:	cmp    al,0x62
   14000ea0e:	jb     0x14000ea4e
	...
   14000ea20:	push   rbp
   14000ea21:	outs   dx,BYTE PTR ds:[rsi]
   14000ea22:	(bad)  
   14000ea23:	(bad)  
   14000ea24:	ins    BYTE PTR es:[rdi],dx
   14000ea25:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000ea2a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ea2d:	outs   dx,BYTE PTR ds:[rsi]
   14000ea2e:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
   14000ea33:	outs   dx,DWORD PTR ds:[rsi]
   14000ea34:	and    BYTE PTR [rbx+0x65],dh
   14000ea37:	jb     0x14000eaaf
   14000ea39:	imul   esp,DWORD PTR [rbx+0x65],0x2c312520
   14000ea40:	and    BYTE PTR [rax+0x61],dh
   14000ea43:	je     0x14000eaad
   14000ea45:	and    BYTE PTR [rip+0x69202c32],ah        # 0x1a921167d
   14000ea4b:	outs   dx,BYTE PTR ds:[rsi]
   14000ea4c:	je     0x14000eab3
   14000ea4e:	jb     0x14000eab6
   14000ea50:	(bad)  
   14000ea51:	movsxd esp,DWORD PTR [rbp+0x20]
   14000ea54:	and    eax,0x73202c33
   14000ea59:	imul   esp,DWORD PTR [rdi+0x6e],0x25206c61
   14000ea60:	xor    al,0x0
   14000ea62:	add    BYTE PTR [rax],al
   14000ea64:	add    BYTE PTR [rax],al
   14000ea66:	add    BYTE PTR [rax],al
   14000ea68:	xor    DWORD PTR [rbp+rsi*2+0x6d],esp
   14000ea6c:	jo     0x14000eabb
   14000ea6e:	gs jae 0x14000eae4
   14000ea71:	(bad)  
   14000ea72:	sub    BYTE PTR gs:[ecx+0x44],dl
   14000ea77:	rex.X jne 0x14000eaed
   14000ea7a:	rex.WRB
   14000ea7b:	gs jae 0x14000eaf1
   14000ea7e:	(bad)  
   14000ea7f:	sub    DWORD PTR gs:[eax],eax
   14000ea83:	add    BYTE PTR [rax],al
   14000ea85:	add    BYTE PTR [rax],al
   14000ea87:	add    BYTE PTR [rcx],dh
   14000ea89:	ins    BYTE PTR es:[rdi],dx
   14000ea8a:	outs   dx,DWORD PTR ds:[rsi]
   14000ea8b:	addr32 rex.RB jb 0x14000eb01
   14000ea8f:	outs   dx,DWORD PTR ds:[rsi]
   14000ea90:	jb     0x14000eaba
   14000ea92:	push   rcx
   14000ea93:	push   rbx
   14000ea94:	je     0x14000eb08
   14000ea96:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000ea9d:	add    BYTE PTR [rax],al
   14000ea9f:	add    BYTE PTR [rdx],dh
   14000eaa1:	(bad)  
   14000eaa2:	jne    0x14000eb17
   14000eaa4:	rex.RB jb 0x14000eb19
   14000eaa7:	outs   dx,DWORD PTR ds:[rsi]
   14000eaa8:	jb     0x14000ead2
   14000eaaa:	push   rcx
   14000eaab:	push   rbx
   14000eaac:	je     0x14000eb20
   14000eaae:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eab5:	add    BYTE PTR [rax],al
   14000eab7:	add    BYTE PTR [rbx+0x61],al
   14000eaba:	outs   dx,BYTE PTR ds:[rsi]
   14000eabb:	outs   dx,BYTE PTR ds:[rsi]
   14000eabc:	outs   dx,DWORD PTR ds:[rsi]
   14000eabd:	je     0x14000eadf
   14000eabf:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000eac2:	outs   dx,BYTE PTR ds:[rsi]
   14000eac3:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
   14000eac8:	outs   dx,DWORD PTR ds:[rsi]
   14000eac9:	and    BYTE PTR [rbp+rbp*1+0x42],al
   14000eacd:	jne    0x14000eb42
   14000eacf:	cmp    ah,BYTE PTR [rax]
   14000ead1:	add    BYTE PTR [rax],al
   14000ead3:	add    BYTE PTR [rax],al
   14000ead5:	add    BYTE PTR [rax],al
   14000ead7:	add    BYTE PTR [rdx],dh
   14000ead9:	jae    0x14000eb40
   14000eadb:	jb     0x14000eb53
   14000eadd:	imul   esp,DWORD PTR [rbx+0x65],0x656e774f
   14000eae4:	jb     0x14000eb29
   14000eae6:	push   0x65676e61
   14000eaeb:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000eaef:	je     0x14000eb63
   14000eaf1:	imul   ebp,DWORD PTR [rsi+0x67],0x7453512c
   14000eaf8:	jb     0x14000eb63
   14000eafa:	outs   dx,BYTE PTR ds:[rsi]
   14000eafb:	addr32 sub al,0x51
   14000eafe:	push   rbx
   14000eaff:	je     0x14000eb73
   14000eb01:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eb08:	xor    DWORD PTR [rbx+0x65],esi
   14000eb0b:	jb     0x14000eb83
   14000eb0d:	imul   esp,DWORD PTR [rbx+0x65],0x656e774f
   14000eb14:	jb     0x14000eb59
   14000eb16:	push   0x65676e61
   14000eb1b:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000eb1f:	je     0x14000eb93
   14000eb21:	imul   ebp,DWORD PTR [rsi+0x67],0x7453512c
   14000eb28:	jb     0x14000eb93
   14000eb2a:	outs   dx,BYTE PTR ds:[rsi]
   14000eb2b:	addr32 sub al,0x51
   14000eb2e:	push   rbx
   14000eb2f:	je     0x14000eba3
   14000eb31:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eb38:	xor    dh,BYTE PTR [rbx+0x65]
   14000eb3b:	jb     0x14000ebb3
   14000eb3d:	imul   esp,DWORD PTR [rbx+0x65],0x65726e55
   14000eb44:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14000eb4c:	sub    BYTE PTR [rcx+0x53],dl
   14000eb4f:	je     0x14000ebc3
   14000eb51:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eb58:	xor    DWORD PTR [rbx+0x65],esi
   14000eb5b:	jb     0x14000ebd3
   14000eb5d:	imul   esp,DWORD PTR [rbx+0x65],0x65726e55
   14000eb64:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14000eb6c:	sub    BYTE PTR [rcx+0x53],dl
   14000eb6f:	je     0x14000ebe3
   14000eb71:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eb78:	xor    DWORD PTR [rbx+0x65],esi
   14000eb7b:	jb     0x14000ebf3
   14000eb7d:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   14000eb84:	jae    0x14000ebfa
   14000eb86:	gs jb  0x14000ebee
   14000eb89:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000eb8d:	je     0x14000ec01
   14000eb8f:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000eb96:	add    BYTE PTR [rax],al
   14000eb98:	xor    dh,BYTE PTR [rbx+0x65]
   14000eb9b:	jb     0x14000ec13
   14000eb9d:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   14000eba4:	jae    0x14000ec1a
   14000eba6:	gs jb  0x14000ec0e
   14000eba9:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000ebad:	je     0x14000ec21
   14000ebaf:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000ebb6:	add    BYTE PTR [rax],al
   14000ebb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ebba:	outs   dx,BYTE PTR ds:[rsi]
   14000ebbb:	outs   dx,BYTE PTR ds:[rsi]
   14000ebbc:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000ebc1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000ebc5:	rex.R sub eax,0x2e737542
   14000ebcb:	add    BYTE PTR [rax],al
   14000ebcd:	add    BYTE PTR [rax],al
   14000ebcf:	add    BYTE PTR [rdx+0x65],dh
   14000ebd2:	data16 jb 0x14000ec3a
   14000ebd5:	jae    0x14000ec3f
   14000ebd7:	add    BYTE PTR [rdx],dh
   14000ebd9:	movsxd esi,DWORD PTR [rbp+0x73]
   14000ebdc:	je     0x14000ec4d
   14000ebde:	ins    DWORD PTR es:[rdi],dx
   14000ebdf:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ebe1:	outs   dx,BYTE PTR ds:[rsi]
   14000ebe2:	je     0x14000ec49
   14000ebe4:	js     0x14000ec5a
   14000ebe6:	rex.WRB
   14000ebe7:	outs   dx,BYTE PTR gs:[rsi]
   14000ebe9:	jne    0x14000ec3d
   14000ebeb:	gs jno 0x14000ec63
   14000ebee:	gs jae 0x14000ec65
   14000ebf1:	gs sub BYTE PTR fs:[rcx+0x50],dl
   14000ebf6:	outs   dx,DWORD PTR ds:[rsi]
   14000ebf7:	imul   ebp,DWORD PTR [rsi+0x74],0x29
   14000ebfe:	add    BYTE PTR [rax],al
   14000ec00:	xor    DWORD PTR [rbx+0x68],esi
   14000ec03:	outs   dx,DWORD PTR ds:[rsi]
   14000ec04:	ja     0x14000ec49
   14000ec06:	outs   dx,DWORD PTR ds:[rsi]
   14000ec07:	outs   dx,BYTE PTR ds:[rsi]
   14000ec08:	je     0x14000ec6f
   14000ec0a:	js     0x14000ec80
   14000ec0c:	rex.WRB
   14000ec0d:	outs   dx,BYTE PTR gs:[rsi]
   14000ec0f:	jne    0x14000ec39
   14000ec11:	push   rcx
   14000ec12:	push   rax
   14000ec13:	outs   dx,DWORD PTR ds:[rsi]
   14000ec14:	imul   ebp,DWORD PTR [rsi+0x74],0x29
   14000ec1b:	add    BYTE PTR [rax],al
   14000ec1d:	add    BYTE PTR [rax],al
   14000ec1f:	add    BYTE PTR [rcx],dh
   14000ec21:	jae    0x14000ec88
   14000ec23:	jb     0x14000ec9b
   14000ec25:	imul   esp,DWORD PTR [rbx+0x65],0x6e616843
   14000ec2c:	gs sub BYTE PTR fs:[ecx+0x4d],dl
   14000ec32:	outs   dx,DWORD PTR ds:[rsi]
   14000ec33:	fs gs ins BYTE PTR es:[rdi],dx
   14000ec36:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ec38:	fs gs js 0x14000ec65
   14000ec3c:	add    BYTE PTR [rax],al
   14000ec3e:	add    BYTE PTR [rax],al
   14000ec40:	xor    ah,BYTE PTR [rbx+0x75]
   14000ec43:	jb     0x14000ecb7
   14000ec45:	outs   dx,BYTE PTR gs:[rsi]
   14000ec47:	je     0x14000ec8c
   14000ec49:	push   0x65676e61
   14000ec4e:	sub    BYTE PTR fs:[rcx+0x4d],dl
   14000ec52:	outs   dx,DWORD PTR ds:[rsi]
   14000ec53:	fs gs ins BYTE PTR es:[rdi],dx
   14000ec56:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ec58:	fs gs js 0x14000ec88
   14000ec5c:	push   rcx
   14000ec5d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000ec5f:	fs gs ins BYTE PTR es:[rdi],dx
   14000ec62:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ec64:	fs gs js 0x14000ec91
	...
   14000ec70:	cwde   
   14000ec71:	add    DWORD PTR ss:[rax+0x1],eax
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax+0x1400026],dl
   14000ec7d:	add    BYTE PTR [rax],al
   14000ec7f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000ec83:	rex add DWORD PTR [rax],eax
   14000ec86:	add    BYTE PTR [rax],al
   14000ec88:	(bad)  
   14000ec89:	scas   eax,DWORD PTR es:[rdi]
   14000ec8a:	add    BYTE PTR [rax+0x1],al
   14000ec8d:	add    BYTE PTR [rax],al
   14000ec8f:	add    BYTE PTR [rax-0x51],ch
   14000ec92:	add    BYTE PTR [rax+0x1],al
   14000ec95:	add    BYTE PTR [rax],al
   14000ec97:	add    BYTE PTR [rsi-0x51],ch
   14000ec9a:	add    BYTE PTR [rax+0x1],al
   14000ec9d:	add    BYTE PTR [rax],al
   14000ec9f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000eca3:	rex add DWORD PTR [rax],eax
   14000eca6:	add    BYTE PTR [rax],al
   14000eca8:	jp     0x14000ec59
   14000ecaa:	add    BYTE PTR [rax+0x1],al
   14000ecad:	add    BYTE PTR [rax],al
   14000ecaf:	add    BYTE PTR [rax+0x36],dh
   14000ecb2:	add    DWORD PTR [rax+0x1],eax
   14000ecb5:	add    BYTE PTR [rax],al
   14000ecb7:	add    BYTE PTR [rbx+rsi*4+0x14000],ch
   14000ecbe:	add    BYTE PTR [rax],al
   14000ecc0:	mov    dl,0xb3
   14000ecc2:	add    BYTE PTR [rax+0x1],al
   14000ecc5:	add    BYTE PTR [rax],al
   14000ecc7:	add    BYTE PTR [rax+0x14000b3],bh
   14000eccd:	add    BYTE PTR [rax],al
   14000eccf:	add    BYTE PTR [rax],ah
   14000ecd1:	add    BYTE PTR es:[rax+0x1],al
   14000ecd5:	add    BYTE PTR [rax],al
   14000ecd7:	add    BYTE PTR [rdx+0x14000ae],cl
   14000ecdd:	add    BYTE PTR [rax],al
   14000ecdf:	add    BYTE PTR [rsi+rsi*4],dh
   14000ece2:	add    BYTE PTR [rax+0x1],al
   14000ece5:	add    BYTE PTR [rax],al
   14000ece7:	add    BYTE PTR [rdx],bh
   14000ece9:	mov    dh,0x0
   14000eceb:	rex add DWORD PTR [rax],eax
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	mov    sil,0x0
   14000ecf3:	rex add DWORD PTR [rax],eax
   14000ecf6:	add    BYTE PTR [rax],al
   14000ecf8:	rex.RX mov sil,0x0
   14000ecfb:	rex add DWORD PTR [rax],eax
   14000ecfe:	add    BYTE PTR [rax],al
   14000ed00:	rex.WR mov sil,0x0
   14000ed03:	rex add DWORD PTR [rax],eax
   14000ed06:	add    BYTE PTR [rax],al
   14000ed08:	push   rdx
   14000ed09:	mov    dh,0x0
   14000ed0b:	rex add DWORD PTR [rax],eax
   14000ed0e:	add    BYTE PTR [rax],al
   14000ed10:	nop
   14000ed11:	scas   al,BYTE PTR es:[rdi]
   14000ed12:	add    BYTE PTR [rax+0x1],al
   14000ed15:	add    BYTE PTR [rax],al
   14000ed17:	add    BYTE PTR [rsi+0x14000ae],dl
   14000ed1d:	add    BYTE PTR [rax],al
   14000ed1f:	add    BYTE PTR [rsi+rbp*4+0x14000],bl
   14000ed26:	add    BYTE PTR [rax],al
   14000ed28:	movabs ds:0xa8000000014000ae,al
   14000ed31:	scas   al,BYTE PTR es:[rdi]
   14000ed32:	add    BYTE PTR [rax+0x1],al
   14000ed35:	add    BYTE PTR [rax],al
   14000ed37:	add    BYTE PTR [rsi+0x14000ae],ch
   14000ed3d:	add    BYTE PTR [rax],al
   14000ed3f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   14000ed46:	add    BYTE PTR [rax],al
   14000ed48:	mov    edx,0x14000ae
   14000ed4d:	add    BYTE PTR [rax],al
   14000ed4f:	add    al,al
   14000ed51:	scas   al,BYTE PTR es:[rdi]
   14000ed52:	add    BYTE PTR [rax+0x1],al
   14000ed55:	add    BYTE PTR [rax],al
   14000ed57:	add    dh,al
   14000ed59:	scas   al,BYTE PTR es:[rdi]
   14000ed5a:	add    BYTE PTR [rax+0x1],al
   14000ed5d:	add    BYTE PTR [rax],al
   14000ed5f:	add    ah,cl
   14000ed61:	scas   al,BYTE PTR es:[rdi]
   14000ed62:	add    BYTE PTR [rax+0x1],al
   14000ed65:	add    BYTE PTR [rax],al
   14000ed67:	add    dl,dl
   14000ed69:	scas   al,BYTE PTR es:[rdi]
   14000ed6a:	add    BYTE PTR [rax+0x1],al
   14000ed6d:	add    BYTE PTR [rax],al
   14000ed6f:	add    al,bl
   14000ed71:	scas   al,BYTE PTR es:[rdi]
   14000ed72:	add    BYTE PTR [rax+0x1],al
   14000ed75:	add    BYTE PTR [rax],al
   14000ed77:	add    dh,bl
   14000ed79:	scas   al,BYTE PTR es:[rdi]
   14000ed7a:	add    BYTE PTR [rax+0x1],al
   14000ed7d:	add    BYTE PTR [rax],al
   14000ed7f:	add    ah,ah
   14000ed81:	scas   al,BYTE PTR es:[rdi]
   14000ed82:	add    BYTE PTR [rax+0x1],al
   14000ed85:	add    BYTE PTR [rax],al
   14000ed87:	add    dl,ch
   14000ed89:	scas   al,BYTE PTR es:[rdi]
   14000ed8a:	add    BYTE PTR [rax+0x1],al
   14000ed8d:	add    BYTE PTR [rax],al
   14000ed8f:	add    al,dh
   14000ed91:	scas   al,BYTE PTR es:[rdi]
   14000ed92:	add    BYTE PTR [rax+0x1],al
   14000ed95:	add    BYTE PTR [rax],al
   14000ed97:	add    dh,dh
   14000ed99:	scas   al,BYTE PTR es:[rdi]
   14000ed9a:	add    BYTE PTR [rax+0x1],al
   14000ed9d:	add    BYTE PTR [rax],al
   14000ed9f:	add    ah,bh
   14000eda1:	scas   al,BYTE PTR es:[rdi]
   14000eda2:	add    BYTE PTR [rax+0x1],al
   14000eda5:	add    BYTE PTR [rax],al
   14000eda7:	add    BYTE PTR [rdx],al
   14000eda9:	scas   eax,DWORD PTR es:[rdi]
   14000edaa:	add    BYTE PTR [rax+0x1],al
   14000edad:	add    BYTE PTR [rax],al
   14000edaf:	add    BYTE PTR [rax],cl
   14000edb1:	scas   eax,DWORD PTR es:[rdi]
   14000edb2:	add    BYTE PTR [rax+0x1],al
   14000edb5:	add    BYTE PTR [rax],al
   14000edb7:	add    BYTE PTR [rsi],cl
   14000edb9:	scas   eax,DWORD PTR es:[rdi]
   14000edba:	add    BYTE PTR [rax+0x1],al
   14000edbd:	add    BYTE PTR [rax],al
   14000edbf:	add    BYTE PTR [rdi+rbp*4],dl
   14000edc2:	add    BYTE PTR [rax+0x1],al
   14000edc5:	add    BYTE PTR [rax],al
   14000edc7:	add    BYTE PTR [rdx],bl
   14000edc9:	scas   eax,DWORD PTR es:[rdi]
   14000edca:	add    BYTE PTR [rax+0x1],al
   14000edcd:	add    BYTE PTR [rax],al
   14000edcf:	add    BYTE PTR [rax],ah
   14000edd1:	scas   eax,DWORD PTR es:[rdi]
   14000edd2:	add    BYTE PTR [rax+0x1],al
   14000edd5:	add    BYTE PTR [rax],al
   14000edd7:	add    BYTE PTR [rsi],ah
   14000edd9:	scas   eax,DWORD PTR es:[rdi]
   14000edda:	add    BYTE PTR [rax+0x1],al
   14000eddd:	add    BYTE PTR [rax],al
   14000eddf:	add    BYTE PTR [rdi+rbp*4],ch
   14000ede2:	add    BYTE PTR [rax+0x1],al
   14000ede5:	add    BYTE PTR [rax],al
   14000ede7:	add    BYTE PTR [rdx],dh
   14000ede9:	scas   eax,DWORD PTR es:[rdi]
   14000edea:	add    BYTE PTR [rax+0x1],al
   14000eded:	add    BYTE PTR [rax],al
   14000edef:	add    BYTE PTR [rax],bh
   14000edf1:	scas   eax,DWORD PTR es:[rdi]
   14000edf2:	add    BYTE PTR [rax+0x1],al
   14000edf5:	add    BYTE PTR [rax],al
   14000edf7:	add    BYTE PTR [rsi],bh
   14000edf9:	scas   eax,DWORD PTR es:[rdi]
   14000edfa:	add    BYTE PTR [rax+0x1],al
   14000edfd:	add    BYTE PTR [rax],al
   14000edff:	add    BYTE PTR [rdi+rbp*4+0x0],al
   14000ee03:	rex add DWORD PTR [rax],eax
   14000ee06:	add    BYTE PTR [rax],al
   14000ee08:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000ee0a:	add    BYTE PTR [rax+0x1],al
   14000ee0d:	add    BYTE PTR [rax],al
   14000ee0f:	add    BYTE PTR [rax-0x51],dl
   14000ee12:	add    BYTE PTR [rax+0x1],al
   14000ee15:	add    BYTE PTR [rax],al
   14000ee17:	add    BYTE PTR [rsi-0x51],dl
   14000ee1a:	add    BYTE PTR [rax+0x1],al
   14000ee1d:	add    BYTE PTR [rax],al
   14000ee1f:	add    BYTE PTR [rdx],dh
   14000ee21:	(bad)  
   14000ee22:	outs   dx,BYTE PTR ds:[rsi]
   14000ee23:	movsxd ebp,DWORD PTR [rax+0x6f]
   14000ee26:	jb     0x14000ee6b
   14000ee28:	ins    BYTE PTR es:[rdi],dx
   14000ee29:	imul   esp,DWORD PTR [rbx+0x6b],0x51286465
   14000ee30:	push   rbp
   14000ee31:	jb     0x14000ee9f
   14000ee33:	sub    DWORD PTR [rax],eax
   14000ee35:	add    BYTE PTR [rax],al
   14000ee37:	add    BYTE PTR [rcx],dh
   14000ee39:	(bad)  
   14000ee3a:	outs   dx,BYTE PTR ds:[rsi]
   14000ee3b:	movsxd ebp,DWORD PTR [rax+0x6f]
   14000ee3e:	jb     0x14000ee83
   14000ee40:	ins    BYTE PTR es:[rdi],dx
   14000ee41:	imul   esp,DWORD PTR [rbx+0x6b],0x51286465
   14000ee48:	push   rbp
   14000ee49:	jb     0x14000eeb7
   14000ee4b:	sub    DWORD PTR [rax],eax
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    BYTE PTR [rax+0x36],cl
   14000ee52:	add    DWORD PTR [rax+0x1],eax
   14000ee55:	add    BYTE PTR [rax],al
   14000ee57:	add    BYTE PTR [rax+0x26],dh
   14000ee5a:	add    BYTE PTR [rax+0x1],al
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000ee63:	rex add DWORD PTR [rax],eax
   14000ee66:	add    BYTE PTR [rax],al
   14000ee68:	(bad)  
   14000ee69:	scas   eax,DWORD PTR es:[rdi]
   14000ee6a:	add    BYTE PTR [rax+0x1],al
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rax-0x51],ch
   14000ee72:	add    BYTE PTR [rax+0x1],al
   14000ee75:	add    BYTE PTR [rax],al
   14000ee77:	add    BYTE PTR [rsi-0x51],ch
   14000ee7a:	add    BYTE PTR [rax+0x1],al
   14000ee7d:	add    BYTE PTR [rax],al
   14000ee7f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000ee83:	rex add DWORD PTR [rax],eax
   14000ee86:	add    BYTE PTR [rax],al
   14000ee88:	jp     0x14000ee39
   14000ee8a:	add    BYTE PTR [rax+0x1],al
   14000ee8d:	add    BYTE PTR [rax],al
   14000ee8f:	add    BYTE PTR [rax+0x1400135],dh
   14000ee95:	add    BYTE PTR [rax],al
   14000ee97:	add    BYTE PTR [rdx-0x4d],ch
   14000ee9a:	add    BYTE PTR [rax+0x1],al
   14000ee9d:	add    BYTE PTR [rax],al
   14000ee9f:	add    BYTE PTR [rax-0x4d],dh
   14000eea2:	add    BYTE PTR [rax+0x1],al
   14000eea5:	add    BYTE PTR [rax],al
   14000eea7:	add    BYTE PTR [rsi-0x4d],dh
   14000eeaa:	add    BYTE PTR [rax+0x1],al
   14000eead:	add    BYTE PTR [rax],al
   14000eeaf:	add    al,dh
   14000eeb1:	and    eax,0x14000
   14000eeb6:	add    BYTE PTR [rax],al
   14000eeb8:	jl     0x14000ee6d
   14000eeba:	add    BYTE PTR [rax+0x1],al
   14000eebd:	add    BYTE PTR [rax],al
   14000eebf:	add    BYTE PTR [rsi+rsi*4],dh
   14000eec2:	add    BYTE PTR [rax+0x1],al
   14000eec5:	add    BYTE PTR [rax],al
   14000eec7:	add    BYTE PTR [rdx],bh
   14000eec9:	mov    dh,0x0
   14000eecb:	rex add DWORD PTR [rax],eax
   14000eece:	add    BYTE PTR [rax],al
   14000eed0:	(bad)  
   14000eed1:	mov    bl,0x0
   14000eed3:	rex add DWORD PTR [rax],eax
   14000eed6:	add    BYTE PTR [rax],al
   14000eed8:	rex.RX mov sil,0x0
   14000eedb:	rex add DWORD PTR [rax],eax
   14000eede:	add    BYTE PTR [rax],al
   14000eee0:	rex.WR mov sil,0x0
   14000eee3:	rex add DWORD PTR [rax],eax
   14000eee6:	add    BYTE PTR [rax],al
   14000eee8:	push   rdx
   14000eee9:	mov    dh,0x0
   14000eeeb:	rex add DWORD PTR [rax],eax
   14000eeee:	add    BYTE PTR [rax],al
   14000eef0:	nop
   14000eef1:	scas   al,BYTE PTR es:[rdi]
   14000eef2:	add    BYTE PTR [rax+0x1],al
   14000eef5:	add    BYTE PTR [rax],al
   14000eef7:	add    BYTE PTR [rax+0x14000b3],cl
   14000eefd:	add    BYTE PTR [rax],al
   14000eeff:	add    BYTE PTR [rsi+0x14000b3],cl
   14000ef05:	add    BYTE PTR [rax],al
   14000ef07:	add    BYTE PTR [rdx+0x14000ae],ah
   14000ef0d:	add    BYTE PTR [rax],al
   14000ef0f:	add    BYTE PTR [rax+0x14000ae],ch
   14000ef15:	add    BYTE PTR [rax],al
   14000ef17:	add    BYTE PTR [rsi+0x14000ae],ch
   14000ef1d:	add    BYTE PTR [rax],al
   14000ef1f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   14000ef26:	add    BYTE PTR [rax],al
   14000ef28:	mov    edx,0x14000ae
   14000ef2d:	add    BYTE PTR [rax],al
   14000ef2f:	add    al,al
   14000ef31:	scas   al,BYTE PTR es:[rdi]
   14000ef32:	add    BYTE PTR [rax+0x1],al
   14000ef35:	add    BYTE PTR [rax],al
   14000ef37:	add    dh,al
   14000ef39:	scas   al,BYTE PTR es:[rdi]
   14000ef3a:	add    BYTE PTR [rax+0x1],al
   14000ef3d:	add    BYTE PTR [rax],al
   14000ef3f:	add    ah,cl
   14000ef41:	scas   al,BYTE PTR es:[rdi]
   14000ef42:	add    BYTE PTR [rax+0x1],al
   14000ef45:	add    BYTE PTR [rax],al
   14000ef47:	add    dl,dl
   14000ef49:	scas   al,BYTE PTR es:[rdi]
   14000ef4a:	add    BYTE PTR [rax+0x1],al
   14000ef4d:	add    BYTE PTR [rax],al
   14000ef4f:	add    al,bl
   14000ef51:	scas   al,BYTE PTR es:[rdi]
   14000ef52:	add    BYTE PTR [rax+0x1],al
   14000ef55:	add    BYTE PTR [rax],al
   14000ef57:	add    dh,bl
   14000ef59:	scas   al,BYTE PTR es:[rdi]
   14000ef5a:	add    BYTE PTR [rax+0x1],al
   14000ef5d:	add    BYTE PTR [rax],al
   14000ef5f:	add    ah,ah
   14000ef61:	scas   al,BYTE PTR es:[rdi]
   14000ef62:	add    BYTE PTR [rax+0x1],al
   14000ef65:	add    BYTE PTR [rax],al
   14000ef67:	add    dl,ch
   14000ef69:	scas   al,BYTE PTR es:[rdi]
   14000ef6a:	add    BYTE PTR [rax+0x1],al
   14000ef6d:	add    BYTE PTR [rax],al
   14000ef6f:	add    BYTE PTR [rbx+rsi*4+0x14000],dl
   14000ef76:	add    BYTE PTR [rax],al
   14000ef78:	imul   BYTE PTR [rsi+0x14000]
   14000ef7e:	add    BYTE PTR [rax],al
   14000ef80:	(bad)  
   14000ef81:	mov    bl,0x0
   14000ef83:	rex add DWORD PTR [rax],eax
   14000ef86:	add    BYTE PTR [rax],al
   14000ef88:	add    ch,BYTE PTR [rdi+0x14000]
   14000ef8e:	add    BYTE PTR [rax],al
   14000ef90:	or     BYTE PTR [rdi+0x14000],ch
   14000ef96:	add    BYTE PTR [rax],al
   14000ef98:	(bad)  
   14000ef99:	scas   eax,DWORD PTR es:[rdi]
   14000ef9a:	add    BYTE PTR [rax+0x1],al
   14000ef9d:	add    BYTE PTR [rax],al
   14000ef9f:	add    BYTE PTR [rdi+rbp*4],dl
   14000efa2:	add    BYTE PTR [rax+0x1],al
   14000efa5:	add    BYTE PTR [rax],al
   14000efa7:	add    BYTE PTR [rdx],bl
   14000efa9:	scas   eax,DWORD PTR es:[rdi]
   14000efaa:	add    BYTE PTR [rax+0x1],al
   14000efad:	add    BYTE PTR [rax],al
   14000efaf:	add    BYTE PTR [rax],ah
   14000efb1:	scas   eax,DWORD PTR es:[rdi]
   14000efb2:	add    BYTE PTR [rax+0x1],al
   14000efb5:	add    BYTE PTR [rax],al
   14000efb7:	add    BYTE PTR [rsi],ah
   14000efb9:	scas   eax,DWORD PTR es:[rdi]
   14000efba:	add    BYTE PTR [rax+0x1],al
   14000efbd:	add    BYTE PTR [rax],al
   14000efbf:	add    BYTE PTR [rdi+rbp*4],ch
   14000efc2:	add    BYTE PTR [rax+0x1],al
   14000efc5:	add    BYTE PTR [rax],al
   14000efc7:	add    BYTE PTR [rdx],dh
   14000efc9:	scas   eax,DWORD PTR es:[rdi]
   14000efca:	add    BYTE PTR [rax+0x1],al
   14000efcd:	add    BYTE PTR [rax],al
   14000efcf:	add    BYTE PTR [rax],bh
   14000efd1:	scas   eax,DWORD PTR es:[rdi]
   14000efd2:	add    BYTE PTR [rax+0x1],al
   14000efd5:	add    BYTE PTR [rax],al
   14000efd7:	add    BYTE PTR [rsi],bh
   14000efd9:	scas   eax,DWORD PTR es:[rdi]
   14000efda:	add    BYTE PTR [rax+0x1],al
   14000efdd:	add    BYTE PTR [rax],al
   14000efdf:	add    BYTE PTR [rax+0x14000b3],ah
   14000efe5:	add    BYTE PTR [rax],al
   14000efe7:	add    BYTE PTR [rdx-0x51],cl
   14000efea:	add    BYTE PTR [rax+0x1],al
   14000efed:	add    BYTE PTR [rax],al
   14000efef:	add    BYTE PTR [rax-0x51],dl
   14000eff2:	add    BYTE PTR [rax+0x1],al
   14000eff5:	add    BYTE PTR [rax],al
   14000eff7:	add    BYTE PTR [rsi-0x51],dl
   14000effa:	add    BYTE PTR [rax+0x1],al
   14000effd:	add    BYTE PTR [rax],al
   14000efff:	add    BYTE PTR [rsi+0x14000b3],ah
	...
   14000f00d:	add    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rax+0x1400135],cl
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rax+0x1400026],dh
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rax],dl
   14000f021:	mov    bl,0x0
   14000f023:	rex add DWORD PTR [rax],eax
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	(bad)  
   14000f029:	mov    bl,0x0
   14000f02b:	rex add DWORD PTR [rax],eax
   14000f02e:	add    BYTE PTR [rax],al
   14000f030:	sbb    al,0xb3
   14000f032:	add    BYTE PTR [rax+0x1],al
   14000f035:	add    BYTE PTR [rax],al
   14000f037:	add    BYTE PTR [rdx],ah
   14000f039:	mov    bl,0x0
   14000f03b:	rex add DWORD PTR [rax],eax
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	sub    BYTE PTR [rbx+0x14000],dh
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	cs mov bl,0x0
   14000f04b:	rex add DWORD PTR [rax],eax
   14000f04e:	add    BYTE PTR [rax],al
   14000f050:	xor    al,0xb3
   14000f052:	add    BYTE PTR [rax+0x1],al
   14000f055:	add    BYTE PTR [rax],al
   14000f057:	add    BYTE PTR [rdx],bh
   14000f059:	mov    bl,0x0
   14000f05b:	rex add DWORD PTR [rax],eax
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	mov    bl,0x0
   14000f063:	rex add DWORD PTR [rax],eax
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	rex.RX mov bl,0x0
   14000f06b:	rex add DWORD PTR [rax],eax
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	rex.WR mov bl,0x0
   14000f073:	rex add DWORD PTR [rax],eax
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	push   rdx
   14000f079:	mov    bl,0x0
   14000f07b:	rex add DWORD PTR [rax],eax
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	pop    rax
   14000f081:	mov    bl,0x0
   14000f083:	rex add DWORD PTR [rax],eax
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	pop    rsi
   14000f089:	mov    bl,0x0
   14000f08b:	rex add DWORD PTR [rax],eax
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	fs mov bl,0x0
   14000f093:	rex add DWORD PTR [rax],eax
	...
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	mov    al,0x33
   14000f0a2:	add    DWORD PTR [rax+0x1],eax
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    dl,bl
   14000f0a9:	mov    dl,0x0
   14000f0ab:	rex add DWORD PTR [rax],eax
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	loopne 0x14000f064
   14000f0b2:	add    BYTE PTR [rax+0x1],al
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    dh,ah
   14000f0b9:	mov    dl,0x0
   14000f0bb:	rex add DWORD PTR [rax],eax
   14000f0be:	add    BYTE PTR [rax],al
   14000f0c0:	shl    BYTE PTR [rip+0x14000],0x0        # 0x1400230c7
   14000f0c7:	add    BYTE PTR [rsi],ch
   14000f0c9:	mov    dh,0x0
   14000f0cb:	rex add DWORD PTR [rax],eax
   14000f0ce:	add    BYTE PTR [rax],al
   14000f0d0:	xor    al,0xb6
   14000f0d2:	add    BYTE PTR [rax+0x1],al
   14000f0d5:	add    BYTE PTR [rax],al
   14000f0d7:	add    BYTE PTR [rdx],bh
   14000f0d9:	mov    dh,0x0
   14000f0db:	rex add DWORD PTR [rax],eax
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	in     al,dx
   14000f0e1:	mov    dl,0x0
   14000f0e3:	rex add DWORD PTR [rax],eax
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	rex.RX mov sil,0x0
   14000f0eb:	rex add DWORD PTR [rax],eax
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	rex.WR mov sil,0x0
   14000f0f3:	rex add DWORD PTR [rax],eax
   14000f0f6:	add    BYTE PTR [rax],al
   14000f0f8:	push   rdx
   14000f0f9:	mov    dh,0x0
   14000f0fb:	rex add DWORD PTR [rax],eax
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	repnz mov dl,0x0
   14000f103:	rex add DWORD PTR [rax],eax
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	clc    
   14000f109:	mov    dl,0x0
   14000f10b:	rex add DWORD PTR [rax],eax
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	(bad)  
   14000f111:	mov    dl,0x0
   14000f113:	rex add DWORD PTR [rax],eax
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	add    al,0xb3
   14000f11a:	add    BYTE PTR [rax+0x1],al
   14000f11d:	add    BYTE PTR [rax],al
   14000f11f:	add    BYTE PTR [rdx],cl
   14000f121:	mov    bl,0x0
   14000f123:	rex add DWORD PTR [rax],eax
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	xor    ah,BYTE PTR [rcx+0x63]
   14000f12b:	je     0x14000f196
   14000f12d:	jbe    0x14000f190
   14000f12f:	je     0x14000f196
   14000f131:	sub    BYTE PTR fs:[rcx],ch
	...
   14000f140:	xor    BYTE PTR [rbx],dh
   14000f142:	add    DWORD PTR [rax+0x1],eax
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    dl,al
   14000f149:	mov    dl,0x0
   14000f14b:	rex add DWORD PTR [rax],eax
   14000f14e:	add    BYTE PTR [rax],al
   14000f150:	enter  0xb2,0x40
   14000f154:	add    DWORD PTR [rax],eax
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	(bad)  
   14000f159:	mov    dl,0x0
   14000f15b:	rex add DWORD PTR [rax],eax
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	nop
   14000f161:	and    eax,0x14000
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	(bad)  
   14000f169:	mov    dl,0x0
   14000f16b:	rex add DWORD PTR [rax],eax
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	xor    al,0xb6
   14000f172:	add    BYTE PTR [rax+0x1],al
   14000f175:	add    BYTE PTR [rax],al
   14000f177:	add    BYTE PTR [rdx],bh
   14000f179:	mov    dh,0x0
   14000f17b:	rex add DWORD PTR [rax],eax
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	mov    sil,0x0
   14000f183:	rex add DWORD PTR [rax],eax
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	rex.RX mov sil,0x0
   14000f18b:	rex add DWORD PTR [rax],eax
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	rex.WR mov sil,0x0
   14000f193:	rex add DWORD PTR [rax],eax
   14000f196:	add    BYTE PTR [rax],al
   14000f198:	push   rdx
   14000f199:	mov    dh,0x0
   14000f19b:	rex add DWORD PTR [rax],eax
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	xor    dh,BYTE PTR [rdx+rsi*2+0x69]
   14000f1a4:	addr32 addr32 gs jb 0x14000f20e
   14000f1a9:	sub    BYTE PTR fs:[rcx],ch
   14000f1ac:	add    BYTE PTR [rax],al
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	xor    DWORD PTR [rdx+0x65],esi
   14000f1b3:	data16 jb 0x14000f21b
   14000f1b6:	jae    0x14000f220
   14000f1b8:	rex.XB push 0x72646c69
   14000f1be:	outs   dx,BYTE PTR gs:[rsi]
   14000f1c0:	sub    BYTE PTR [rcx],ch
	...
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	mov    al,0x32
   14000f1d2:	add    DWORD PTR [rax+0x1],eax
   14000f1d5:	add    BYTE PTR [rax],al
   14000f1d7:	add    BYTE PTR [rdx+0x14000b2],ch
   14000f1dd:	add    BYTE PTR [rax],al
   14000f1df:	add    BYTE PTR [rax+0x14000b2],dh
   14000f1e5:	add    BYTE PTR [rax],al
   14000f1e7:	add    BYTE PTR [rsi+0x14000b2],dh
   14000f1ed:	add    BYTE PTR [rax],al
   14000f1ef:	add    BYTE PTR [rax+0x25],ah
   14000f1f2:	add    BYTE PTR [rax+0x1],al
   14000f1f5:	add    BYTE PTR [rax],al
   14000f1f7:	add    BYTE PTR [rdx+rsi*4+0x14000],bh
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	xor    al,0xb6
   14000f202:	add    BYTE PTR [rax+0x1],al
   14000f205:	add    BYTE PTR [rax],al
   14000f207:	add    BYTE PTR [rdx],bh
   14000f209:	mov    dh,0x0
   14000f20b:	rex add DWORD PTR [rax],eax
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	mov    sil,0x0
   14000f213:	rex add DWORD PTR [rax],eax
   14000f216:	add    BYTE PTR [rax],al
   14000f218:	rex.RX mov sil,0x0
   14000f21b:	rex add DWORD PTR [rax],eax
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	rex.WR mov sil,0x0
   14000f223:	rex add DWORD PTR [rax],eax
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	push   rdx
   14000f229:	mov    dh,0x0
   14000f22b:	rex add DWORD PTR [rax],eax
   14000f22e:	add    BYTE PTR [rax],al
   14000f230:	es push rdx
   14000f232:	gs data16 jb 0x14000f29b
   14000f236:	jae    0x14000f2a0
	...
   14000f240:	xor    ah,BYTE PTR [rcx+0x63]
   14000f243:	je     0x14000f2ae
   14000f245:	jbe    0x14000f2a8
   14000f247:	je     0x14000f2ae
   14000f249:	sub    BYTE PTR fs:[rcx+0x4d],dl
   14000f24d:	outs   dx,DWORD PTR ds:[rsi]
   14000f24e:	fs gs ins BYTE PTR es:[rdi],dx
   14000f251:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f253:	fs gs js 0x14000f280
   14000f257:	add    BYTE PTR [rcx],dh
   14000f259:	(bad)  
   14000f25a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000f25e:	(bad)  
   14000f25f:	je     0x14000f2c6
   14000f261:	sub    BYTE PTR [rcx+0x4d],dl
   14000f264:	outs   dx,DWORD PTR ds:[rsi]
   14000f265:	fs gs ins BYTE PTR es:[rdi],dx
   14000f268:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f26a:	fs gs js 0x14000f297
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	mov    BYTE PTR [rdx],dh
   14000f272:	add    DWORD PTR [rax+0x1],eax
   14000f275:	add    BYTE PTR [rax],al
   14000f277:	add    BYTE PTR [rax+0x26],dl
   14000f27a:	add    BYTE PTR [rax+0x1],al
   14000f27d:	add    BYTE PTR [rax],al
   14000f27f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000f283:	rex add DWORD PTR [rax],eax
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	(bad)  
   14000f289:	scas   eax,DWORD PTR es:[rdi]
   14000f28a:	add    BYTE PTR [rax+0x1],al
   14000f28d:	add    BYTE PTR [rax],al
   14000f28f:	add    BYTE PTR [rax-0x51],ch
   14000f292:	add    BYTE PTR [rax+0x1],al
   14000f295:	add    BYTE PTR [rax],al
   14000f297:	add    BYTE PTR [rsi-0x51],ch
   14000f29a:	add    BYTE PTR [rax+0x1],al
   14000f29d:	add    BYTE PTR [rax],al
   14000f29f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000f2a3:	rex add DWORD PTR [rax],eax
   14000f2a6:	add    BYTE PTR [rax],al
   14000f2a8:	jp     0x14000f259
   14000f2aa:	add    BYTE PTR [rax+0x1],al
   14000f2ad:	add    BYTE PTR [rax],al
   14000f2af:	add    al,ah
   14000f2b1:	xor    DWORD PTR [rcx],eax
   14000f2b3:	rex add DWORD PTR [rax],eax
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	movabs ds:0xa8000000014000b1,al
   14000f2c1:	mov    cl,0x0
   14000f2c3:	rex add DWORD PTR [rax],eax
   14000f2c6:	add    BYTE PTR [rax],al
   14000f2c8:	scas   al,BYTE PTR es:[rdi]
   14000f2c9:	mov    cl,0x0
   14000f2cb:	rex add DWORD PTR [rax],eax
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	xor    BYTE PTR [rip+0x14000],ah        # 0x1400232d6
   14000f2d6:	add    BYTE PTR [rax],al
   14000f2d8:	(bad)  
   14000f2d9:	mov    al,0x0
   14000f2db:	rex add DWORD PTR [rax],eax
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	sbb    al,0xb0
   14000f2e2:	add    BYTE PTR [rax+0x1],al
   14000f2e5:	add    BYTE PTR [rax],al
   14000f2e7:	add    BYTE PTR [rcx+rsi*4+0x14000],dh
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	mov    sil,0x0
   14000f2f3:	rex add DWORD PTR [rax],eax
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	rex.RX mov sil,0x0
   14000f2fb:	rex add DWORD PTR [rax],eax
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	rex.WR mov sil,0x0
   14000f303:	rex add DWORD PTR [rax],eax
   14000f306:	add    BYTE PTR [rax],al
   14000f308:	push   rdx
   14000f309:	mov    dh,0x0
   14000f30b:	rex add DWORD PTR [rax],eax
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	nop
   14000f311:	scas   al,BYTE PTR es:[rdi]
   14000f312:	add    BYTE PTR [rax+0x1],al
   14000f315:	add    BYTE PTR [rax],al
   14000f317:	add    BYTE PTR [rax],ch
   14000f319:	mov    al,0x0
   14000f31b:	rex add DWORD PTR [rax],eax
   14000f31e:	add    BYTE PTR [rax],al
   14000f320:	cs mov al,0x0
   14000f323:	rex add DWORD PTR [rax],eax
   14000f326:	add    BYTE PTR [rax],al
   14000f328:	movabs ds:0xa8000000014000ae,al
   14000f331:	scas   al,BYTE PTR es:[rdi]
   14000f332:	add    BYTE PTR [rax+0x1],al
   14000f335:	add    BYTE PTR [rax],al
   14000f337:	add    BYTE PTR [rdx+0x14000b1],bh
   14000f33d:	add    BYTE PTR [rax],al
   14000f33f:	add    al,al
   14000f341:	mov    cl,0x0
   14000f343:	rex add DWORD PTR [rax],eax
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	(bad)  
   14000f349:	mov    cl,0x0
   14000f34b:	rex add DWORD PTR [rax],eax
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	int3   
   14000f351:	mov    cl,0x0
   14000f353:	rex add DWORD PTR [rax],eax
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	rex.WR mov al,0x0
   14000f35b:	rex add DWORD PTR [rax],eax
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	shl    BYTE PTR [rcx+0x14000],cl
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	shr    BYTE PTR [rsi+0x14000],cl
   14000f36e:	add    BYTE PTR [rax],al
   14000f370:	pop    rax
   14000f371:	mov    al,0x0
   14000f373:	rex add DWORD PTR [rax],eax
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	pop    rsi
   14000f379:	mov    al,0x0
   14000f37b:	rex add DWORD PTR [rax],eax
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	in     al,0xae
   14000f382:	add    BYTE PTR [rax+0x1],al
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	add    dl,ch
   14000f389:	scas   al,BYTE PTR es:[rdi]
   14000f38a:	add    BYTE PTR [rax+0x1],al
   14000f38d:	add    BYTE PTR [rax],al
   14000f38f:	add    al,bl
   14000f391:	mov    cl,0x0
   14000f393:	rex add DWORD PTR [rax],eax
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	imul   BYTE PTR [rsi+0x14000]
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	push   0xffffffffffffffb0
   14000f3a2:	add    BYTE PTR [rax+0x1],al
   14000f3a5:	add    BYTE PTR [rax],al
   14000f3a7:	add    BYTE PTR [rdx],al
   14000f3a9:	scas   eax,DWORD PTR es:[rdi]
   14000f3aa:	add    BYTE PTR [rax+0x1],al
   14000f3ad:	add    BYTE PTR [rax],al
   14000f3af:	add    BYTE PTR [rax-0x50],dh
   14000f3b2:	add    BYTE PTR [rax+0x1],al
   14000f3b5:	add    BYTE PTR [rax],al
   14000f3b7:	add    BYTE PTR [rsi],cl
   14000f3b9:	scas   eax,DWORD PTR es:[rdi]
   14000f3ba:	add    BYTE PTR [rax+0x1],al
   14000f3bd:	add    BYTE PTR [rax],al
   14000f3bf:	add    BYTE PTR [rdi+rbp*4],dl
   14000f3c2:	add    BYTE PTR [rax+0x1],al
   14000f3c5:	add    BYTE PTR [rax],al
   14000f3c7:	add    BYTE PTR [rsi-0x50],dh
   14000f3ca:	add    BYTE PTR [rax+0x1],al
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    dh,bl
   14000f3d1:	mov    cl,0x0
   14000f3d3:	rex add DWORD PTR [rax],eax
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	(bad)  
   14000f3d9:	mov    al,0x0
   14000f3db:	rex add DWORD PTR [rax],eax
   14000f3de:	add    BYTE PTR [rax],al
   14000f3e0:	mov    BYTE PTR [rax+0x14000],dh
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	xor    ch,BYTE PTR [rdi+0x14000]
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	cmp    BYTE PTR [rdi+0x14000],ch
   14000f3f6:	add    BYTE PTR [rax],al
   14000f3f8:	ds scas eax,DWORD PTR es:[rdi]
   14000f3fa:	add    BYTE PTR [rax+0x1],al
   14000f3fd:	add    BYTE PTR [rax],al
   14000f3ff:	add    BYTE PTR [rsi+0x14000b0],cl
   14000f405:	add    BYTE PTR [rax],al
   14000f407:	add    BYTE PTR [rax+rsi*4+0x14000],dl
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	(bad)  
   14000f411:	mov    al,0x0
   14000f413:	rex add DWORD PTR [rax],eax
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	movabs al,ds:0xa6000000014000b0
   14000f421:	mov    al,0x0
   14000f423:	rex add DWORD PTR [rax],eax
   14000f426:	add    BYTE PTR [rax],al
   14000f428:	in     al,0xb1
   14000f42a:	add    BYTE PTR [rax+0x1],al
   14000f42d:	add    BYTE PTR [rax],al
   14000f42f:	add    dl,ch
   14000f431:	mov    cl,0x0
   14000f433:	rex add DWORD PTR [rax],eax
   14000f436:	add    BYTE PTR [rax],al
   14000f438:	lock mov cl,0x0
   14000f43b:	rex add DWORD PTR [rax],eax
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	div    BYTE PTR [rcx+0x14000]
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	cld    
   14000f449:	mov    cl,0x0
   14000f44b:	rex add DWORD PTR [rax],eax
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	add    dh,BYTE PTR [rdx+0x14000]
   14000f456:	add    BYTE PTR [rax],al
   14000f458:	or     BYTE PTR [rdx+0x14000],dh
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	(bad)  
   14000f461:	mov    dl,0x0
   14000f463:	rex add DWORD PTR [rax],eax
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	adc    al,0xb2
   14000f46a:	add    BYTE PTR [rax+0x1],al
   14000f46d:	add    BYTE PTR [rax],al
   14000f46f:	add    BYTE PTR [rdx],bl
   14000f471:	mov    dl,0x0
   14000f473:	rex add DWORD PTR [rax],eax
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	and    BYTE PTR [rdx+0x14000],dh
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	es mov dl,0x0
   14000f483:	rex add DWORD PTR [rax],eax
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	sub    al,0xb2
   14000f48a:	add    BYTE PTR [rax+0x1],al
   14000f48d:	add    BYTE PTR [rax],al
   14000f48f:	add    BYTE PTR [rdx],dh
   14000f491:	mov    dl,0x0
   14000f493:	rex add DWORD PTR [rax],eax
   14000f496:	add    BYTE PTR [rax],al
   14000f498:	cmp    BYTE PTR [rdx+0x14000],dh
   14000f49e:	add    BYTE PTR [rax],al
   14000f4a0:	(bad)  
   14000f4a1:	mov    cl,0x0
   14000f4a3:	rex add DWORD PTR [rax],eax
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	ds mov dl,0x0
   14000f4ab:	rex add DWORD PTR [rax],eax
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	rex.R mov dl,0x0
   14000f4b3:	rex add DWORD PTR [rax],eax
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	rex.WX mov dl,0x0
   14000f4bb:	rex add DWORD PTR [rax],eax
   14000f4be:	add    BYTE PTR [rax],al
   14000f4c0:	push   rax
   14000f4c1:	mov    dl,0x0
   14000f4c3:	rex add DWORD PTR [rax],eax
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	push   rsi
   14000f4c9:	mov    dl,0x0
   14000f4cb:	rex add DWORD PTR [rax],eax
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	sub    dh,BYTE PTR [rcx+0x14000]
   14000f4d6:	add    BYTE PTR [rax],al
   14000f4d8:	xor    BYTE PTR [rcx+0x14000],dh
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	pop    rsp
   14000f4e1:	mov    dl,0x0
   14000f4e3:	rex add DWORD PTR [rax],eax
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	(bad)  
   14000f4ea:	add    BYTE PTR [rax+0x1],al
   14000f4ed:	add    BYTE PTR [rax],al
   14000f4ef:	add    BYTE PTR [rax-0x4e],ch
   14000f4f2:	add    BYTE PTR [rax+0x1],al
   14000f4f5:	add    BYTE PTR [rax],al
   14000f4f7:	add    BYTE PTR [rax-0x4f],cl
   14000f4fa:	add    BYTE PTR [rax+0x1],al
   14000f4fd:	add    BYTE PTR [rax],al
   14000f4ff:	add    BYTE PTR [rsi-0x4f],cl
   14000f502:	add    BYTE PTR [rax+0x1],al
   14000f505:	add    BYTE PTR [rax],al
   14000f507:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   14000f50b:	rex add DWORD PTR [rax],eax
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	pop    rdx
   14000f511:	mov    cl,0x0
   14000f513:	rex add DWORD PTR [rax],eax
   14000f516:	add    BYTE PTR [rax],al
   14000f518:	(bad)  
   14000f519:	mov    cl,0x0
   14000f51b:	rex add DWORD PTR [rax],eax
   14000f51e:	add    BYTE PTR [rax],al
   14000f520:	outs   dx,BYTE PTR ds:[rsi]
   14000f521:	mov    dl,0x0
   14000f523:	rex add DWORD PTR [rax],eax
   14000f526:	add    BYTE PTR [rax],al
   14000f528:	je     0x14000f4dc
   14000f52a:	add    BYTE PTR [rax+0x1],al
   14000f52d:	add    BYTE PTR [rax],al
   14000f52f:	add    BYTE PTR [rdx-0x4e],bh
   14000f532:	add    BYTE PTR [rax+0x1],al
   14000f535:	add    BYTE PTR [rax],al
   14000f537:	add    BYTE PTR [rax+0x14000b2],al
   14000f53d:	add    BYTE PTR [rax],al
   14000f53f:	add    BYTE PTR [rsi+0x14000b2],al
   14000f545:	add    BYTE PTR [rax],al
   14000f547:	add    BYTE PTR [rdx+rsi*4+0x14000],cl
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	xchg   edx,eax
   14000f551:	mov    dl,0x0
   14000f553:	rex add DWORD PTR [rax],eax
   14000f556:	add    BYTE PTR [rax],al
   14000f558:	nop
   14000f559:	mov    cl,0x0
   14000f55b:	rex add DWORD PTR [rax],eax
   14000f55e:	add    BYTE PTR [rax],al
   14000f560:	xchg   esi,eax
   14000f561:	mov    cl,0x0
   14000f563:	rex add DWORD PTR [rax],eax
   14000f566:	add    BYTE PTR [rax],al
   14000f568:	cwde   
   14000f569:	mov    dl,0x0
   14000f56b:	rex add DWORD PTR [rax],eax
   14000f56e:	add    BYTE PTR [rax],al
   14000f570:	sahf   
   14000f571:	mov    dl,0x0
   14000f573:	rex add DWORD PTR [rax],eax
   14000f576:	add    BYTE PTR [rax],al
   14000f578:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f579:	mov    dl,0x0
   14000f57b:	rex add DWORD PTR [rax],eax
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	xor    dh,BYTE PTR [rbp+riz*2+0x78]
   14000f584:	je     0x14000f5c9
   14000f586:	push   0x65676e61
   14000f58b:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000f58f:	je     0x14000f603
   14000f591:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000f598:	xor    DWORD PTR [rbx+0x65],esi
   14000f59b:	je     0x14000f5e3
   14000f59d:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x78694672
   14000f5a5:	gs fs push rbx
   14000f5a8:	je     0x14000f61c
   14000f5aa:	imul   ebp,DWORD PTR [rsi+0x67],0x74535128
   14000f5b1:	jb     0x14000f61c
   14000f5b3:	outs   dx,BYTE PTR ds:[rsi]
   14000f5b4:	sub    DWORD PTR [eax],eax
	...
   14000f5bf:	add    BYTE PTR [rax+0x1400131],bh
   14000f5c5:	add    BYTE PTR [rax],al
   14000f5c7:	add    BYTE PTR [rax+0x1400026],ah
   14000f5cd:	add    BYTE PTR [rax],al
   14000f5cf:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000f5d3:	rex add DWORD PTR [rax],eax
   14000f5d6:	add    BYTE PTR [rax],al
   14000f5d8:	(bad)  
   14000f5d9:	scas   eax,DWORD PTR es:[rdi]
   14000f5da:	add    BYTE PTR [rax+0x1],al
   14000f5dd:	add    BYTE PTR [rax],al
   14000f5df:	add    BYTE PTR [rax-0x51],ch
   14000f5e2:	add    BYTE PTR [rax+0x1],al
   14000f5e5:	add    BYTE PTR [rax],al
   14000f5e7:	add    BYTE PTR [rsi-0x51],ch
   14000f5ea:	add    BYTE PTR [rax+0x1],al
   14000f5ed:	add    BYTE PTR [rax],al
   14000f5ef:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000f5f3:	rex add DWORD PTR [rax],eax
   14000f5f6:	add    BYTE PTR [rax],al
   14000f5f8:	jp     0x14000f5a9
   14000f5fa:	add    BYTE PTR [rax+0x1],al
   14000f5fd:	add    BYTE PTR [rax],al
   14000f5ff:	add    al,al
   14000f601:	(bad)  
   14000f602:	add    DWORD PTR [rax+0x1],eax
   14000f605:	add    BYTE PTR [rax],al
   14000f607:	add    BYTE PTR [rax+rsi*4],al
   14000f60a:	add    BYTE PTR [rax+0x1],al
   14000f60d:	add    BYTE PTR [rax],al
   14000f60f:	add    BYTE PTR [rdx],cl
   14000f611:	mov    al,0x0
   14000f613:	rex add DWORD PTR [rax],eax
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	adc    BYTE PTR [rax+0x14000],dh
   14000f61e:	add    BYTE PTR [rax],al
   14000f620:	add    BYTE PTR [rip+0x14000],ah        # 0x140023626
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	(bad)  
   14000f629:	mov    al,0x0
   14000f62b:	rex add DWORD PTR [rax],eax
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	sbb    al,0xb0
   14000f632:	add    BYTE PTR [rax+0x1],al
   14000f635:	add    BYTE PTR [rax],al
   14000f637:	add    BYTE PTR [rdx],ah
   14000f639:	mov    al,0x0
   14000f63b:	rex add DWORD PTR [rax],eax
   14000f63e:	add    BYTE PTR [rax],al
   14000f640:	mov    sil,0x0
   14000f643:	rex add DWORD PTR [rax],eax
   14000f646:	add    BYTE PTR [rax],al
   14000f648:	rex.RX mov sil,0x0
   14000f64b:	rex add DWORD PTR [rax],eax
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	rex.WR mov sil,0x0
   14000f653:	rex add DWORD PTR [rax],eax
   14000f656:	add    BYTE PTR [rax],al
   14000f658:	push   rdx
   14000f659:	mov    dh,0x0
   14000f65b:	rex add DWORD PTR [rax],eax
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	nop
   14000f661:	scas   al,BYTE PTR es:[rdi]
   14000f662:	add    BYTE PTR [rax+0x1],al
   14000f665:	add    BYTE PTR [rax],al
   14000f667:	add    BYTE PTR [rax],ch
   14000f669:	mov    al,0x0
   14000f66b:	rex add DWORD PTR [rax],eax
   14000f66e:	add    BYTE PTR [rax],al
   14000f670:	cs mov al,0x0
   14000f673:	rex add DWORD PTR [rax],eax
   14000f676:	add    BYTE PTR [rax],al
   14000f678:	movabs ds:0xa8000000014000ae,al
   14000f681:	scas   al,BYTE PTR es:[rdi]
   14000f682:	add    BYTE PTR [rax+0x1],al
   14000f685:	add    BYTE PTR [rax],al
   14000f687:	add    BYTE PTR [rax+rsi*4],dh
   14000f68a:	add    BYTE PTR [rax+0x1],al
   14000f68d:	add    BYTE PTR [rax],al
   14000f68f:	add    BYTE PTR [rdx],bh
   14000f691:	mov    al,0x0
   14000f693:	rex add DWORD PTR [rax],eax
   14000f696:	add    BYTE PTR [rax],al
   14000f698:	mov    al,0x0
   14000f69b:	rex add DWORD PTR [rax],eax
   14000f69e:	add    BYTE PTR [rax],al
   14000f6a0:	rex.RX mov al,0x0
   14000f6a3:	rex add DWORD PTR [rax],eax
   14000f6a6:	add    BYTE PTR [rax],al
   14000f6a8:	rex.WR mov al,0x0
   14000f6ab:	rex add DWORD PTR [rax],eax
   14000f6ae:	add    BYTE PTR [rax],al
   14000f6b0:	push   rdx
   14000f6b1:	mov    al,0x0
   14000f6b3:	rex add DWORD PTR [rax],eax
   14000f6b6:	add    BYTE PTR [rax],al
   14000f6b8:	shr    BYTE PTR [rsi+0x14000],cl
   14000f6be:	add    BYTE PTR [rax],al
   14000f6c0:	pop    rax
   14000f6c1:	mov    al,0x0
   14000f6c3:	rex add DWORD PTR [rax],eax
   14000f6c6:	add    BYTE PTR [rax],al
   14000f6c8:	pop    rsi
   14000f6c9:	mov    al,0x0
   14000f6cb:	rex add DWORD PTR [rax],eax
   14000f6ce:	add    BYTE PTR [rax],al
   14000f6d0:	in     al,0xae
   14000f6d2:	add    BYTE PTR [rax+0x1],al
   14000f6d5:	add    BYTE PTR [rax],al
   14000f6d7:	add    dl,ch
   14000f6d9:	scas   al,BYTE PTR es:[rdi]
   14000f6da:	add    BYTE PTR [rax+0x1],al
   14000f6dd:	add    BYTE PTR [rax],al
   14000f6df:	add    BYTE PTR [rax+rsi*4+0x0],ah
   14000f6e3:	rex add DWORD PTR [rax],eax
   14000f6e6:	add    BYTE PTR [rax],al
   14000f6e8:	imul   BYTE PTR [rsi+0x14000]
   14000f6ee:	add    BYTE PTR [rax],al
   14000f6f0:	push   0xffffffffffffffb0
   14000f6f2:	add    BYTE PTR [rax+0x1],al
   14000f6f5:	add    BYTE PTR [rax],al
   14000f6f7:	add    BYTE PTR [rdx],al
   14000f6f9:	scas   eax,DWORD PTR es:[rdi]
   14000f6fa:	add    BYTE PTR [rax+0x1],al
   14000f6fd:	add    BYTE PTR [rax],al
   14000f6ff:	add    BYTE PTR [rax-0x50],dh
   14000f702:	add    BYTE PTR [rax+0x1],al
   14000f705:	add    BYTE PTR [rax],al
   14000f707:	add    BYTE PTR [rsi],cl
   14000f709:	scas   eax,DWORD PTR es:[rdi]
   14000f70a:	add    BYTE PTR [rax+0x1],al
   14000f70d:	add    BYTE PTR [rax],al
   14000f70f:	add    BYTE PTR [rdi+rbp*4],dl
   14000f712:	add    BYTE PTR [rax+0x1],al
   14000f715:	add    BYTE PTR [rax],al
   14000f717:	add    BYTE PTR [rsi-0x50],dh
   14000f71a:	add    BYTE PTR [rax+0x1],al
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    BYTE PTR [rax+rsi*4+0x0],bh
   14000f723:	rex add DWORD PTR [rax],eax
   14000f726:	add    BYTE PTR [rax],al
   14000f728:	(bad)  
   14000f729:	mov    al,0x0
   14000f72b:	rex add DWORD PTR [rax],eax
   14000f72e:	add    BYTE PTR [rax],al
   14000f730:	mov    BYTE PTR [rax+0x14000],dh
   14000f736:	add    BYTE PTR [rax],al
   14000f738:	xor    ch,BYTE PTR [rdi+0x14000]
   14000f73e:	add    BYTE PTR [rax],al
   14000f740:	cmp    BYTE PTR [rdi+0x14000],ch
   14000f746:	add    BYTE PTR [rax],al
   14000f748:	ds scas eax,DWORD PTR es:[rdi]
   14000f74a:	add    BYTE PTR [rax+0x1],al
   14000f74d:	add    BYTE PTR [rax],al
   14000f74f:	add    BYTE PTR [rsi+0x14000b0],cl
   14000f755:	add    BYTE PTR [rax],al
   14000f757:	add    BYTE PTR [rax+rsi*4+0x14000],dl
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	(bad)  
   14000f761:	mov    al,0x0
   14000f763:	rex add DWORD PTR [rax],eax
   14000f766:	add    BYTE PTR [rax],al
   14000f768:	movabs al,ds:0xa6000000014000b0
   14000f771:	mov    al,0x0
   14000f773:	rex add DWORD PTR [rax],eax
   14000f776:	add    BYTE PTR [rax],al
   14000f778:	lods   al,BYTE PTR ds:[rsi]
   14000f779:	mov    al,0x0
   14000f77b:	rex add DWORD PTR [rax],eax
   14000f77e:	add    BYTE PTR [rax],al
   14000f780:	mov    dl,0xb0
   14000f782:	add    BYTE PTR [rax+0x1],al
   14000f785:	add    BYTE PTR [rax],al
   14000f787:	add    BYTE PTR [rax+0x14000b0],bh
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    BYTE PTR [rsi+0x14000b0],bh
   14000f795:	add    BYTE PTR [rax],al
   14000f797:	add    ah,al
   14000f799:	mov    al,0x0
   14000f79b:	rex add DWORD PTR [rax],eax
   14000f79e:	add    BYTE PTR [rax],al
   14000f7a0:	retf   0xb0
   14000f7a3:	rex add DWORD PTR [rax],eax
   14000f7a6:	add    BYTE PTR [rax],al
   14000f7a8:	shl    BYTE PTR [rax+0x14000],1
   14000f7ae:	add    BYTE PTR [rax],al
   14000f7b0:	(bad)  
   14000f7b1:	mov    al,0x0
   14000f7b3:	rex add DWORD PTR [rax],eax
   14000f7b6:	add    BYTE PTR [rax],al
   14000f7b8:	fdiv   QWORD PTR [rax+0x14000]
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	loop   0x14000f772
   14000f7c2:	add    BYTE PTR [rax+0x1],al
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    al,ch
   14000f7c9:	mov    al,0x0
   14000f7cb:	rex add DWORD PTR [rax],eax
   14000f7ce:	add    BYTE PTR [rax],al
   14000f7d0:	out    dx,al
   14000f7d1:	mov    al,0x0
   14000f7d3:	rex add DWORD PTR [rax],eax
   14000f7d6:	add    BYTE PTR [rax],al
   14000f7d8:	hlt    
   14000f7d9:	mov    al,0x0
   14000f7db:	rex add DWORD PTR [rax],eax
   14000f7de:	add    BYTE PTR [rax],al
   14000f7e0:	cli    
   14000f7e1:	mov    al,0x0
   14000f7e3:	rex add DWORD PTR [rax],eax
   14000f7e6:	add    BYTE PTR [rax],al
   14000f7e8:	add    BYTE PTR [rcx+0x14000],dh
   14000f7ee:	add    BYTE PTR [rax],al
   14000f7f0:	(bad)  
   14000f7f1:	mov    cl,0x0
   14000f7f3:	rex add DWORD PTR [rax],eax
   14000f7f6:	add    BYTE PTR [rax],al
   14000f7f8:	or     al,0xb1
   14000f7fa:	add    BYTE PTR [rax+0x1],al
   14000f7fd:	add    BYTE PTR [rax],al
   14000f7ff:	add    BYTE PTR [rdx],dl
   14000f801:	mov    cl,0x0
   14000f803:	rex add DWORD PTR [rax],eax
   14000f806:	add    BYTE PTR [rax],al
   14000f808:	sbb    BYTE PTR [rcx+0x14000],dh
   14000f80e:	add    BYTE PTR [rax],al
   14000f810:	(bad)  
   14000f811:	mov    cl,0x0
   14000f813:	rex add DWORD PTR [rax],eax
   14000f816:	add    BYTE PTR [rax],al
   14000f818:	and    al,0xb1
   14000f81a:	add    BYTE PTR [rax+0x1],al
   14000f81d:	add    BYTE PTR [rax],al
   14000f81f:	add    BYTE PTR [rdx],ch
   14000f821:	mov    cl,0x0
   14000f823:	rex add DWORD PTR [rax],eax
   14000f826:	add    BYTE PTR [rax],al
   14000f828:	xor    BYTE PTR [rcx+0x14000],dh
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	ss mov cl,0x0
   14000f833:	rex add DWORD PTR [rax],eax
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	cmp    al,0xb1
   14000f83a:	add    BYTE PTR [rax+0x1],al
   14000f83d:	add    BYTE PTR [rax],al
   14000f83f:	add    BYTE PTR [rdx-0x4f],al
   14000f842:	add    BYTE PTR [rax+0x1],al
   14000f845:	add    BYTE PTR [rax],al
   14000f847:	add    BYTE PTR [rax-0x4f],cl
   14000f84a:	add    BYTE PTR [rax+0x1],al
   14000f84d:	add    BYTE PTR [rax],al
   14000f84f:	add    BYTE PTR [rsi-0x4f],cl
   14000f852:	add    BYTE PTR [rax+0x1],al
   14000f855:	add    BYTE PTR [rax],al
   14000f857:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   14000f85b:	rex add DWORD PTR [rax],eax
   14000f85e:	add    BYTE PTR [rax],al
   14000f860:	pop    rdx
   14000f861:	mov    cl,0x0
   14000f863:	rex add DWORD PTR [rax],eax
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	(bad)  
   14000f869:	mov    cl,0x0
   14000f86b:	rex add DWORD PTR [rax],eax
   14000f86e:	add    BYTE PTR [rax],al
   14000f870:	data16 mov cl,0x0
   14000f873:	rex add DWORD PTR [rax],eax
   14000f876:	add    BYTE PTR [rax],al
   14000f878:	ins    BYTE PTR es:[rdi],dx
   14000f879:	mov    cl,0x0
   14000f87b:	rex add DWORD PTR [rax],eax
   14000f87e:	add    BYTE PTR [rax],al
   14000f880:	jb     0x14000f833
   14000f882:	add    BYTE PTR [rax+0x1],al
   14000f885:	add    BYTE PTR [rax],al
   14000f887:	add    BYTE PTR [rax-0x4f],bh
   14000f88a:	add    BYTE PTR [rax+0x1],al
   14000f88d:	add    BYTE PTR [rax],al
   14000f88f:	add    BYTE PTR [rsi-0x4f],bh
   14000f892:	add    BYTE PTR [rax+0x1],al
   14000f895:	add    BYTE PTR [rax],al
   14000f897:	add    BYTE PTR [rcx+rsi*4+0x14000],al
   14000f89e:	add    BYTE PTR [rax],al
   14000f8a0:	mov    dh,BYTE PTR [rcx+0x14000]
   14000f8a6:	add    BYTE PTR [rax],al
   14000f8a8:	nop
   14000f8a9:	mov    cl,0x0
   14000f8ab:	rex add DWORD PTR [rax],eax
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	xchg   esi,eax
   14000f8b1:	mov    cl,0x0
   14000f8b3:	rex add DWORD PTR [rax],eax
   14000f8b6:	add    BYTE PTR [rax],al
   14000f8b8:	pushf  
   14000f8b9:	mov    cl,0x0
   14000f8bb:	rex add DWORD PTR [rax],eax
   14000f8be:	add    BYTE PTR [rax],al
   14000f8c0:	shr    BYTE PTR [rsi],1
   14000f8c2:	add    DWORD PTR [rax+0x1],eax
   14000f8c5:	add    BYTE PTR [rax],al
   14000f8c7:	add    BYTE PTR [rax],al
   14000f8c9:	mov    bh,0x0
   14000f8cb:	rex add DWORD PTR [rax],eax
   14000f8ce:	add    BYTE PTR [rax],al
   14000f8d0:	(bad)  
   14000f8d1:	mov    bh,0x0
   14000f8d3:	rex add DWORD PTR [rax],eax
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	or     al,0xb7
   14000f8da:	add    BYTE PTR [rax+0x1],al
   14000f8dd:	add    BYTE PTR [rax],al
   14000f8df:	add    al,dl
   14000f8e1:	and    al,0x0
   14000f8e3:	rex add DWORD PTR [rax],eax
   14000f8e6:	add    BYTE PTR [rax],al
   14000f8e8:	cs mov dh,0x0
   14000f8eb:	rex add DWORD PTR [rax],eax
   14000f8ee:	add    BYTE PTR [rax],al
   14000f8f0:	xor    al,0xb6
   14000f8f2:	add    BYTE PTR [rax+0x1],al
   14000f8f5:	add    BYTE PTR [rax],al
   14000f8f7:	add    BYTE PTR [rdx],bh
   14000f8f9:	mov    dh,0x0
   14000f8fb:	rex add DWORD PTR [rax],eax
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	mov    sil,0x0
   14000f903:	rex add DWORD PTR [rax],eax
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	rex.RX mov sil,0x0
   14000f90b:	rex add DWORD PTR [rax],eax
   14000f90e:	add    BYTE PTR [rax],al
   14000f910:	rex.WR mov sil,0x0
   14000f913:	rex add DWORD PTR [rax],eax
   14000f916:	add    BYTE PTR [rax],al
   14000f918:	push   rdx
   14000f919:	mov    dh,0x0
   14000f91b:	rex add DWORD PTR [rax],eax
   14000f91e:	add    BYTE PTR [rax],al
   14000f920:	adc    dh,BYTE PTR [rdi+0x14000]
   14000f926:	add    BYTE PTR [rax],al
   14000f928:	sbb    BYTE PTR [rdi+0x14000],dh
   14000f92e:	add    BYTE PTR [rax],al
   14000f930:	(bad)  
   14000f931:	mov    bh,0x0
   14000f933:	rex add DWORD PTR [rax],eax
   14000f936:	add    BYTE PTR [rax],al
   14000f938:	and    al,0xb7
   14000f93a:	add    BYTE PTR [rax+0x1],al
   14000f93d:	add    BYTE PTR [rax],al
   14000f93f:	add    BYTE PTR [rdx],ch
   14000f941:	mov    bh,0x0
   14000f943:	rex add DWORD PTR [rax],eax
   14000f946:	add    BYTE PTR [rax],al
   14000f948:	xor    BYTE PTR [rdi+0x14000],dh
   14000f94e:	add    BYTE PTR [rax],al
   14000f950:	ss mov bh,0x0
   14000f953:	rex add DWORD PTR [rax],eax
   14000f956:	add    BYTE PTR [rax],al
   14000f958:	cmp    al,0xb7
   14000f95a:	add    BYTE PTR [rax+0x1],al
   14000f95d:	add    BYTE PTR [rax],al
   14000f95f:	add    BYTE PTR [rdx-0x49],al
   14000f962:	add    BYTE PTR [rax+0x1],al
   14000f965:	add    BYTE PTR [rax],al
   14000f967:	add    BYTE PTR [rdx-0x4a],ch
   14000f96a:	add    BYTE PTR [rax+0x1],al
   14000f96d:	add    BYTE PTR [rax],al
   14000f96f:	add    BYTE PTR [rax-0x4a],dh
   14000f972:	add    BYTE PTR [rax+0x1],al
   14000f975:	add    BYTE PTR [rax],al
   14000f977:	add    BYTE PTR [rsi-0x4a],dh
   14000f97a:	add    BYTE PTR [rax+0x1],al
   14000f97d:	add    BYTE PTR [rax],al
   14000f97f:	add    BYTE PTR [rsi+rsi*4+0x0],bh
   14000f983:	rex add DWORD PTR [rax],eax
   14000f986:	add    BYTE PTR [rax],al
   14000f988:	(bad)  
   14000f989:	mov    dh,0x0
   14000f98b:	rex add DWORD PTR [rax],eax
   14000f98e:	add    BYTE PTR [rax],al
   14000f990:	mov    BYTE PTR [rsi+0x14000],dh
   14000f996:	add    BYTE PTR [rax],al
   14000f998:	rex.W mov dil,0x0
   14000f99b:	rex add DWORD PTR [rax],eax
   14000f99e:	add    BYTE PTR [rax],al
   14000f9a0:	rex.WRX mov dil,0x0
   14000f9a3:	rex add DWORD PTR [rax],eax
   14000f9a6:	add    BYTE PTR [rax],al
   14000f9a8:	(bad)  
   14000f9a9:	mov    dh,0x0
   14000f9ab:	rex add DWORD PTR [rax],eax
   14000f9ae:	add    BYTE PTR [rax],al
   14000f9b0:	push   rsp
   14000f9b1:	mov    bh,0x0
   14000f9b3:	rex add DWORD PTR [rax],eax
   14000f9b6:	add    BYTE PTR [rax],al
   14000f9b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9b9:	mov    dh,0x0
   14000f9bb:	rex add DWORD PTR [rax],eax
   14000f9be:	add    BYTE PTR [rax],al
   14000f9c0:	pop    rdx
   14000f9c1:	mov    bh,0x0
   14000f9c3:	rex add DWORD PTR [rax],eax
   14000f9c6:	add    BYTE PTR [rax],al
   14000f9c8:	mov    dl,0xb6
   14000f9ca:	add    BYTE PTR [rax+0x1],al
   14000f9cd:	add    BYTE PTR [rax],al
   14000f9cf:	add    BYTE PTR [rax+0x14000b6],bh
   14000f9d5:	add    BYTE PTR [rax],al
   14000f9d7:	add    BYTE PTR [rsi+0x14000b6],bh
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    ah,al
   14000f9e1:	mov    dh,0x0
   14000f9e3:	rex add DWORD PTR [rax],eax
   14000f9e6:	add    BYTE PTR [rax],al
   14000f9e8:	retf   0xb6
   14000f9eb:	rex add DWORD PTR [rax],eax
   14000f9ee:	add    BYTE PTR [rax],al
   14000f9f0:	(bad)  
   14000f9f1:	mov    bh,0x0
   14000f9f3:	rex add DWORD PTR [rax],eax
   14000f9f6:	add    BYTE PTR [rax],al
   14000f9f8:	data16 mov bh,0x0
   14000f9fb:	rex add DWORD PTR [rax],eax
   14000f9fe:	add    BYTE PTR [rax],al
   14000fa00:	fdiv   QWORD PTR [rsi+0x14000]
   14000fa06:	add    BYTE PTR [rax],al
   14000fa08:	loop   0x14000f9c0
   14000fa0a:	add    BYTE PTR [rax+0x1],al
   14000fa0d:	add    BYTE PTR [rax],al
   14000fa0f:	add    al,ch
   14000fa11:	mov    dh,0x0
   14000fa13:	rex add DWORD PTR [rax],eax
   14000fa16:	add    BYTE PTR [rax],al
   14000fa18:	out    dx,al
   14000fa19:	mov    dh,0x0
   14000fa1b:	rex add DWORD PTR [rax],eax
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	hlt    
   14000fa21:	mov    dh,0x0
   14000fa23:	rex add DWORD PTR [rax],eax
   14000fa26:	add    BYTE PTR [rax],al
   14000fa28:	cli    
   14000fa29:	mov    dh,0x0
   14000fa2b:	rex add DWORD PTR [rax],eax
   14000fa2e:	add    BYTE PTR [rax],al
   14000fa30:	push   rbx
   14000fa31:	gs (bad) 
   14000fa33:	jb     0x14000fa98
   14000fa35:	push   0x2e2e2e
   14000fa3a:	add    BYTE PTR [rax],al
   14000fa3c:	add    BYTE PTR [rax],al
   14000fa3e:	add    BYTE PTR [rax],al
   14000fa40:	test   al,0x2e
   14000fa42:	add    DWORD PTR [rax+0x1],eax
   14000fa45:	add    BYTE PTR [rax],al
   14000fa47:	add    BYTE PTR [rax+0x1400026],al
   14000fa4d:	add    BYTE PTR [rax],al
   14000fa4f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000fa53:	rex add DWORD PTR [rax],eax
   14000fa56:	add    BYTE PTR [rax],al
   14000fa58:	(bad)  
   14000fa59:	scas   eax,DWORD PTR es:[rdi]
   14000fa5a:	add    BYTE PTR [rax+0x1],al
   14000fa5d:	add    BYTE PTR [rax],al
   14000fa5f:	add    BYTE PTR [rax-0x51],ch
   14000fa62:	add    BYTE PTR [rax+0x1],al
   14000fa65:	add    BYTE PTR [rax],al
   14000fa67:	add    BYTE PTR [rsi-0x51],ch
   14000fa6a:	add    BYTE PTR [rax+0x1],al
   14000fa6d:	add    BYTE PTR [rax],al
   14000fa6f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000fa73:	rex add DWORD PTR [rax],eax
   14000fa76:	add    BYTE PTR [rax],al
   14000fa78:	jp     0x14000fa29
   14000fa7a:	add    BYTE PTR [rax+0x1],al
   14000fa7d:	add    BYTE PTR [rax],al
   14000fa7f:	add    BYTE PTR [rax],bl
   14000fa81:	add    DWORD PTR cs:[rax+0x1],eax
   14000fa85:	add    BYTE PTR [rax],al
   14000fa87:	add    BYTE PTR [rax+0x14000af],al
   14000fa8d:	add    BYTE PTR [rax],al
   14000fa8f:	add    BYTE PTR [rsi+0x14000af],al
   14000fa95:	add    BYTE PTR [rax],al
   14000fa97:	add    BYTE PTR [rdi+rbp*4+0x14000],cl
   14000fa9e:	add    BYTE PTR [rax],al
   14000faa0:	movabs al,ds:0x9200000001400024
   14000faa9:	scas   eax,DWORD PTR es:[rdi]
   14000faaa:	add    BYTE PTR [rax+0x1],al
   14000faad:	add    BYTE PTR [rax],al
   14000faaf:	add    BYTE PTR [rsi+rsi*4],dh
   14000fab2:	add    BYTE PTR [rax+0x1],al
   14000fab5:	add    BYTE PTR [rax],al
   14000fab7:	add    BYTE PTR [rdx],bh
   14000fab9:	mov    dh,0x0
   14000fabb:	rex add DWORD PTR [rax],eax
   14000fabe:	add    BYTE PTR [rax],al
   14000fac0:	mov    sil,0x0
   14000fac3:	rex add DWORD PTR [rax],eax
   14000fac6:	add    BYTE PTR [rax],al
   14000fac8:	rex.RX mov sil,0x0
   14000facb:	rex add DWORD PTR [rax],eax
   14000face:	add    BYTE PTR [rax],al
   14000fad0:	rex.WR mov sil,0x0
   14000fad3:	rex add DWORD PTR [rax],eax
   14000fad6:	add    BYTE PTR [rax],al
   14000fad8:	push   rdx
   14000fad9:	mov    dh,0x0
   14000fadb:	rex add DWORD PTR [rax],eax
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	nop
   14000fae1:	scas   al,BYTE PTR es:[rdi]
   14000fae2:	add    BYTE PTR [rax+0x1],al
   14000fae5:	add    BYTE PTR [rax],al
   14000fae7:	add    BYTE PTR [rax+0x14000af],bl
   14000faed:	add    BYTE PTR [rax],al
   14000faef:	add    BYTE PTR [rsi+0x14000af],bl
   14000faf5:	add    BYTE PTR [rax],al
   14000faf7:	add    BYTE PTR [rdx+0x14000ae],ah
   14000fafd:	add    BYTE PTR [rax],al
   14000faff:	add    BYTE PTR [rax+0x14000ae],ch
   14000fb05:	add    BYTE PTR [rax],al
   14000fb07:	add    BYTE PTR [rdi+rbp*4+0x14000],ah
   14000fb0e:	add    BYTE PTR [rax],al
   14000fb10:	stos   BYTE PTR es:[rdi],al
   14000fb11:	scas   eax,DWORD PTR es:[rdi]
   14000fb12:	add    BYTE PTR [rax+0x1],al
   14000fb15:	add    BYTE PTR [rax],al
   14000fb17:	add    BYTE PTR [rax+0x14000af],dh
   14000fb1d:	add    BYTE PTR [rax],al
   14000fb1f:	add    BYTE PTR [rsi+0x14000af],dh
   14000fb25:	add    BYTE PTR [rax],al
   14000fb27:	add    dh,al
   14000fb29:	scas   al,BYTE PTR es:[rdi]
   14000fb2a:	add    BYTE PTR [rax+0x1],al
   14000fb2d:	add    BYTE PTR [rax],al
   14000fb2f:	add    BYTE PTR [rdi+rbp*4+0x14000],bh
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	shr    BYTE PTR [rsi+0x14000],cl
   14000fb3e:	add    BYTE PTR [rax],al
   14000fb40:	ret    0xaf
   14000fb43:	rex add DWORD PTR [rax],eax
   14000fb46:	add    BYTE PTR [rax],al
   14000fb48:	enter  0xaf,0x40
   14000fb4c:	add    DWORD PTR [rax],eax
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	in     al,0xae
   14000fb52:	add    BYTE PTR [rax+0x1],al
   14000fb55:	add    BYTE PTR [rax],al
   14000fb57:	add    dl,ch
   14000fb59:	scas   al,BYTE PTR es:[rdi]
   14000fb5a:	add    BYTE PTR [rax+0x1],al
   14000fb5d:	add    BYTE PTR [rax],al
   14000fb5f:	add    dh,cl
   14000fb61:	scas   eax,DWORD PTR es:[rdi]
   14000fb62:	add    BYTE PTR [rax+0x1],al
   14000fb65:	add    BYTE PTR [rax],al
   14000fb67:	add    dh,dh
   14000fb69:	scas   al,BYTE PTR es:[rdi]
   14000fb6a:	add    BYTE PTR [rax+0x1],al
   14000fb6d:	add    BYTE PTR [rax],al
   14000fb6f:	add    ah,bh
   14000fb71:	scas   al,BYTE PTR es:[rdi]
   14000fb72:	add    BYTE PTR [rax+0x1],al
   14000fb75:	add    BYTE PTR [rax],al
   14000fb77:	add    BYTE PTR [rdx],al
   14000fb79:	scas   eax,DWORD PTR es:[rdi]
   14000fb7a:	add    BYTE PTR [rax+0x1],al
   14000fb7d:	add    BYTE PTR [rax],al
   14000fb7f:	add    ah,dl
   14000fb81:	scas   eax,DWORD PTR es:[rdi]
   14000fb82:	add    BYTE PTR [rax+0x1],al
   14000fb85:	add    BYTE PTR [rax],al
   14000fb87:	add    BYTE PTR [rsi],cl
   14000fb89:	scas   eax,DWORD PTR es:[rdi]
   14000fb8a:	add    BYTE PTR [rax+0x1],al
   14000fb8d:	add    BYTE PTR [rax],al
   14000fb8f:	add    BYTE PTR [rdi+rbp*4],dl
   14000fb92:	add    BYTE PTR [rax+0x1],al
   14000fb95:	add    BYTE PTR [rax],al
   14000fb97:	add    dl,bl
   14000fb99:	scas   eax,DWORD PTR es:[rdi]
   14000fb9a:	add    BYTE PTR [rax+0x1],al
   14000fb9d:	add    BYTE PTR [rax],al
   14000fb9f:	add    al,ah
   14000fba1:	scas   eax,DWORD PTR es:[rdi]
   14000fba2:	add    BYTE PTR [rax+0x1],al
   14000fba5:	add    BYTE PTR [rax],al
   14000fba7:	add    dh,ah
   14000fba9:	scas   eax,DWORD PTR es:[rdi]
   14000fbaa:	add    BYTE PTR [rax+0x1],al
   14000fbad:	add    BYTE PTR [rax],al
   14000fbaf:	add    ah,ch
   14000fbb1:	scas   eax,DWORD PTR es:[rdi]
   14000fbb2:	add    BYTE PTR [rax+0x1],al
   14000fbb5:	add    BYTE PTR [rax],al
   14000fbb7:	add    BYTE PTR [rdx],dh
   14000fbb9:	scas   eax,DWORD PTR es:[rdi]
   14000fbba:	add    BYTE PTR [rax+0x1],al
   14000fbbd:	add    BYTE PTR [rax],al
   14000fbbf:	add    BYTE PTR [rax],bh
   14000fbc1:	scas   eax,DWORD PTR es:[rdi]
   14000fbc2:	add    BYTE PTR [rax+0x1],al
   14000fbc5:	add    BYTE PTR [rax],al
   14000fbc7:	add    BYTE PTR [rsi],bh
   14000fbc9:	scas   eax,DWORD PTR es:[rdi]
   14000fbca:	add    BYTE PTR [rax+0x1],al
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    dl,dh
   14000fbd1:	scas   eax,DWORD PTR es:[rdi]
   14000fbd2:	add    BYTE PTR [rax+0x1],al
   14000fbd5:	add    BYTE PTR [rax],al
   14000fbd7:	add    al,bh
   14000fbd9:	scas   eax,DWORD PTR es:[rdi]
   14000fbda:	add    BYTE PTR [rax+0x1],al
   14000fbdd:	add    BYTE PTR [rax],al
   14000fbdf:	add    dh,bh
   14000fbe1:	scas   eax,DWORD PTR es:[rdi]
   14000fbe2:	add    BYTE PTR [rax+0x1],al
   14000fbe5:	add    BYTE PTR [rax],al
   14000fbe7:	add    BYTE PTR [rsi-0x51],dl
   14000fbea:	add    BYTE PTR [rax+0x1],al
   14000fbed:	add    BYTE PTR [rax],al
   14000fbef:	add    BYTE PTR [rbx+rbx*2+0x4f],bl
   14000fbf3:	(bad)  
   14000fbf4:	push   0x65
   14000fbf6:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14000fbfa:	je     0x14000fc64
   14000fbfc:	cmp    ah,BYTE PTR [rax]
   14000fbfe:	sub    BYTE PTR [rsi],ch
   14000fc00:	sub    ch,BYTE PTR [rcx]
   14000fc02:	pop    rsp
   14000fc03:	pop    rbp
	...
   14000fc10:	lock sub eax,0x14001
   14000fc16:	add    BYTE PTR [rax],al
   14000fc18:	(bad)  
   14000fc19:	add    BYTE PTR es:[rax+0x1],al
   14000fc1d:	add    BYTE PTR [rax],al
   14000fc1f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000fc23:	rex add DWORD PTR [rax],eax
   14000fc26:	add    BYTE PTR [rax],al
   14000fc28:	(bad)  
   14000fc29:	scas   eax,DWORD PTR es:[rdi]
   14000fc2a:	add    BYTE PTR [rax+0x1],al
   14000fc2d:	add    BYTE PTR [rax],al
   14000fc2f:	add    BYTE PTR [rax-0x51],ch
   14000fc32:	add    BYTE PTR [rax+0x1],al
   14000fc35:	add    BYTE PTR [rax],al
   14000fc37:	add    BYTE PTR [rsi-0x51],ch
   14000fc3a:	add    BYTE PTR [rax+0x1],al
   14000fc3d:	add    BYTE PTR [rax],al
   14000fc3f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000fc43:	rex add DWORD PTR [rax],eax
   14000fc46:	add    BYTE PTR [rax],al
   14000fc48:	jp     0x14000fbf9
   14000fc4a:	add    BYTE PTR [rax+0x1],al
   14000fc4d:	add    BYTE PTR [rax],al
   14000fc4f:	add    BYTE PTR [rax+0x140012c],cl
   14000fc55:	add    BYTE PTR [rax],al
   14000fc57:	add    BYTE PTR [rax-0x56],dh
   14000fc5a:	add    BYTE PTR [rax+0x1],al
   14000fc5d:	add    BYTE PTR [rax],al
   14000fc5f:	add    BYTE PTR [rax+0x14000a9],dh
   14000fc65:	add    BYTE PTR [rax],al
   14000fc67:	add    BYTE PTR [rax],al
   14000fc69:	stos   BYTE PTR es:[rdi],al
   14000fc6a:	add    BYTE PTR [rax+0x1],al
   14000fc6d:	add    BYTE PTR [rax],al
   14000fc6f:	add    al,al
   14000fc71:	add    BYTE PTR es:[rax+0x1],al
   14000fc75:	add    BYTE PTR [rax],al
   14000fc77:	add    BYTE PTR [rdx+0x14000ae],cl
   14000fc7d:	add    BYTE PTR [rax],al
   14000fc7f:	add    BYTE PTR [rsi+rsi*4],dh
   14000fc82:	add    BYTE PTR [rax+0x1],al
   14000fc85:	add    BYTE PTR [rax],al
   14000fc87:	add    BYTE PTR [rdx],bh
   14000fc89:	mov    dh,0x0
   14000fc8b:	rex add DWORD PTR [rax],eax
   14000fc8e:	add    BYTE PTR [rax],al
   14000fc90:	mov    sil,0x0
   14000fc93:	rex add DWORD PTR [rax],eax
   14000fc96:	add    BYTE PTR [rax],al
   14000fc98:	rex.RX mov sil,0x0
   14000fc9b:	rex add DWORD PTR [rax],eax
   14000fc9e:	add    BYTE PTR [rax],al
   14000fca0:	rex.WR mov sil,0x0
   14000fca3:	rex add DWORD PTR [rax],eax
   14000fca6:	add    BYTE PTR [rax],al
   14000fca8:	push   rdx
   14000fca9:	mov    dh,0x0
   14000fcab:	rex add DWORD PTR [rax],eax
   14000fcae:	add    BYTE PTR [rax],al
   14000fcb0:	nop
   14000fcb1:	scas   al,BYTE PTR es:[rdi]
   14000fcb2:	add    BYTE PTR [rax+0x1],al
   14000fcb5:	add    BYTE PTR [rax],al
   14000fcb7:	add    BYTE PTR [rsi+0x14000ae],dl
   14000fcbd:	add    BYTE PTR [rax],al
   14000fcbf:	add    BYTE PTR [rsi+rbp*4+0x14000],bl
   14000fcc6:	add    BYTE PTR [rax],al
   14000fcc8:	movabs ds:0xa8000000014000ae,al
   14000fcd1:	scas   al,BYTE PTR es:[rdi]
   14000fcd2:	add    BYTE PTR [rax+0x1],al
   14000fcd5:	add    BYTE PTR [rax],al
   14000fcd7:	add    BYTE PTR [rsi+0x14000ae],ch
   14000fcdd:	add    BYTE PTR [rax],al
   14000fcdf:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   14000fce6:	add    BYTE PTR [rax],al
   14000fce8:	mov    edx,0x14000ae
   14000fced:	add    BYTE PTR [rax],al
   14000fcef:	add    al,al
   14000fcf1:	scas   al,BYTE PTR es:[rdi]
   14000fcf2:	add    BYTE PTR [rax+0x1],al
   14000fcf5:	add    BYTE PTR [rax],al
   14000fcf7:	add    dh,al
   14000fcf9:	scas   al,BYTE PTR es:[rdi]
   14000fcfa:	add    BYTE PTR [rax+0x1],al
   14000fcfd:	add    BYTE PTR [rax],al
   14000fcff:	add    ah,cl
   14000fd01:	scas   al,BYTE PTR es:[rdi]
   14000fd02:	add    BYTE PTR [rax+0x1],al
   14000fd05:	add    BYTE PTR [rax],al
   14000fd07:	add    dl,dl
   14000fd09:	scas   al,BYTE PTR es:[rdi]
   14000fd0a:	add    BYTE PTR [rax+0x1],al
   14000fd0d:	add    BYTE PTR [rax],al
   14000fd0f:	add    al,bl
   14000fd11:	scas   al,BYTE PTR es:[rdi]
   14000fd12:	add    BYTE PTR [rax+0x1],al
   14000fd15:	add    BYTE PTR [rax],al
   14000fd17:	add    dh,bl
   14000fd19:	scas   al,BYTE PTR es:[rdi]
   14000fd1a:	add    BYTE PTR [rax+0x1],al
   14000fd1d:	add    BYTE PTR [rax],al
   14000fd1f:	add    ah,ah
   14000fd21:	scas   al,BYTE PTR es:[rdi]
   14000fd22:	add    BYTE PTR [rax+0x1],al
   14000fd25:	add    BYTE PTR [rax],al
   14000fd27:	add    dl,ch
   14000fd29:	scas   al,BYTE PTR es:[rdi]
   14000fd2a:	add    BYTE PTR [rax+0x1],al
   14000fd2d:	add    BYTE PTR [rax],al
   14000fd2f:	add    al,dh
   14000fd31:	scas   al,BYTE PTR es:[rdi]
   14000fd32:	add    BYTE PTR [rax+0x1],al
   14000fd35:	add    BYTE PTR [rax],al
   14000fd37:	add    dh,dh
   14000fd39:	scas   al,BYTE PTR es:[rdi]
   14000fd3a:	add    BYTE PTR [rax+0x1],al
   14000fd3d:	add    BYTE PTR [rax],al
   14000fd3f:	add    ah,bh
   14000fd41:	scas   al,BYTE PTR es:[rdi]
   14000fd42:	add    BYTE PTR [rax+0x1],al
   14000fd45:	add    BYTE PTR [rax],al
   14000fd47:	add    BYTE PTR [rdx],al
   14000fd49:	scas   eax,DWORD PTR es:[rdi]
   14000fd4a:	add    BYTE PTR [rax+0x1],al
   14000fd4d:	add    BYTE PTR [rax],al
   14000fd4f:	add    BYTE PTR [rax],cl
   14000fd51:	scas   eax,DWORD PTR es:[rdi]
   14000fd52:	add    BYTE PTR [rax+0x1],al
   14000fd55:	add    BYTE PTR [rax],al
   14000fd57:	add    BYTE PTR [rsi],cl
   14000fd59:	scas   eax,DWORD PTR es:[rdi]
   14000fd5a:	add    BYTE PTR [rax+0x1],al
   14000fd5d:	add    BYTE PTR [rax],al
   14000fd5f:	add    BYTE PTR [rdi+rbp*4],dl
   14000fd62:	add    BYTE PTR [rax+0x1],al
   14000fd65:	add    BYTE PTR [rax],al
   14000fd67:	add    BYTE PTR [rdx],bl
   14000fd69:	scas   eax,DWORD PTR es:[rdi]
   14000fd6a:	add    BYTE PTR [rax+0x1],al
   14000fd6d:	add    BYTE PTR [rax],al
   14000fd6f:	add    BYTE PTR [rax],ah
   14000fd71:	scas   eax,DWORD PTR es:[rdi]
   14000fd72:	add    BYTE PTR [rax+0x1],al
   14000fd75:	add    BYTE PTR [rax],al
   14000fd77:	add    BYTE PTR [rsi],ah
   14000fd79:	scas   eax,DWORD PTR es:[rdi]
   14000fd7a:	add    BYTE PTR [rax+0x1],al
   14000fd7d:	add    BYTE PTR [rax],al
   14000fd7f:	add    BYTE PTR [rdi+rbp*4],ch
   14000fd82:	add    BYTE PTR [rax+0x1],al
   14000fd85:	add    BYTE PTR [rax],al
   14000fd87:	add    BYTE PTR [rdx],dh
   14000fd89:	scas   eax,DWORD PTR es:[rdi]
   14000fd8a:	add    BYTE PTR [rax+0x1],al
   14000fd8d:	add    BYTE PTR [rax],al
   14000fd8f:	add    BYTE PTR [rax],bh
   14000fd91:	scas   eax,DWORD PTR es:[rdi]
   14000fd92:	add    BYTE PTR [rax+0x1],al
   14000fd95:	add    BYTE PTR [rax],al
   14000fd97:	add    BYTE PTR [rsi],bh
   14000fd99:	scas   eax,DWORD PTR es:[rdi]
   14000fd9a:	add    BYTE PTR [rax+0x1],al
   14000fd9d:	add    BYTE PTR [rax],al
   14000fd9f:	add    BYTE PTR [rdi+rbp*4+0x0],al
   14000fda3:	rex add DWORD PTR [rax],eax
   14000fda6:	add    BYTE PTR [rax],al
   14000fda8:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000fdaa:	add    BYTE PTR [rax+0x1],al
   14000fdad:	add    BYTE PTR [rax],al
   14000fdaf:	add    BYTE PTR [rax-0x51],dl
   14000fdb2:	add    BYTE PTR [rax+0x1],al
   14000fdb5:	add    BYTE PTR [rax],al
   14000fdb7:	add    BYTE PTR [rsi-0x51],dl
   14000fdba:	add    BYTE PTR [rax+0x1],al
   14000fdbd:	add    BYTE PTR [rax],al
   14000fdbf:	add    BYTE PTR [rcx+0x64],dh
   14000fdc2:	(bad)  
   14000fdc3:	jne    0x14000fe38
   14000fdc5:	add    BYTE PTR [rax],al
   14000fdc7:	add    BYTE PTR [rcx+0x44],dl
   14000fdca:	rex.X jne 0x14000fe40
   14000fdcd:	push   rsi
   14000fdce:	(bad)  
   14000fdcf:	jb     0x14000fe3a
   14000fdd1:	(bad)  
   14000fdd2:	outs   dx,BYTE PTR ds:[rsi]
   14000fdd3:	je     0x14000fdd5
   14000fdd5:	add    BYTE PTR [rax],al
   14000fdd7:	add    BYTE PTR [rdx],cl
   14000fdd9:	add    BYTE PTR [rax],al
   14000fddb:	add    BYTE PTR [rdx+riz*2],bh
   14000fdde:	jb     0x14000fe0f
   14000fde0:	add    BYTE PTR ds:[rax],al
   14000fde3:	add    BYTE PTR [rax+riz*1],ch
   14000fde6:	add    BYTE PTR [rax],al
   14000fde8:	pop    rbx
   14000fde9:	rex.WRXB (bad) 
   14000fdeb:	push   0x65
   14000fded:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14000fdf1:	je     0x14000fe5b
   14000fdf3:	cmp    ah,BYTE PTR [rax]
   14000fdf5:	cmp    al,0x61
   14000fdf7:	and    BYTE PTR [rax+0x72],ch
   14000fdfa:	gs cmp ax,0x7122
   14000fdff:	fs (bad) 
   14000fe01:	jne    0x14000fe76
   14000fe03:	cmp    ch,BYTE PTR [rdi]
   14000fe05:	(bad)  
   14000fe06:	(bad)  
   14000fe07:	jne    0x14000fe7c
   14000fe09:	pop    rsp
   14000fe0a:	xor    DWORD PTR [rdx],esp
   14000fe0c:	ds pop rsp
   14000fe0e:	xor    DWORD PTR [rdi+rbp*1],edi
   14000fe11:	(bad)  
   14000fe12:	ds pop rbp
   14000fe14:	add    BYTE PTR [rax],al
   14000fe16:	add    BYTE PTR [rax],al
   14000fe18:	outs   dx,BYTE PTR es:[rsi]
   14000fe1a:	(bad)  
   14000fe1c:	jo     0x14000fe59
   14000fe1e:	outs   dx,BYTE PTR es:[rsi]
   14000fe20:	(bad)  
   14000fe22:	jo     0x14000fe5f
   14000fe24:	rex.B jb 0x14000fe8e
   14000fe27:	jne    0x14000fe96
   14000fe29:	outs   dx,BYTE PTR gs:[rsi]
   14000fe2b:	je     0x14000fea0
   14000fe2d:	cmp    ah,BYTE PTR [rax]
   14000fe2f:	add    BYTE PTR [rsi],ah
   14000fe31:	outs   dx,BYTE PTR ds:[rsi]
   14000fe32:	(bad)  
   14000fe34:	jo     0x14000fe71
   14000fe36:	outs   dx,BYTE PTR es:[rsi]
   14000fe38:	(bad)  
   14000fe3a:	jo     0x14000fe77
   14000fe3c:	sub    BYTE PTR [rsi+0x6f],ch
   14000fe3f:	and    BYTE PTR [rcx+0x72],ah
   14000fe42:	addr32 jne 0x14000feb2
   14000fe45:	outs   dx,BYTE PTR gs:[rsi]
   14000fe47:	je     0x14000febc
   14000fe49:	sub    DWORD PTR [rax],eax
   14000fe4b:	add    BYTE PTR [rax],al
   14000fe4d:	add    BYTE PTR [rax],al
   14000fe4f:	add    BYTE PTR [rax+riz*1],ch
   14000fe52:	ins    DWORD PTR es:[rdi],dx
   14000fe53:	gs ins DWORD PTR es:[rdi],dx
   14000fe55:	(bad)  
   14000fe56:	gs jb  0x14000fe79
   14000fe59:	add    BYTE PTR [rax],al
   14000fe5b:	add    BYTE PTR [rax],al
   14000fe5d:	add    BYTE PTR [rax],al
   14000fe5f:	add    BYTE PTR [rax+riz*1],ch
   14000fe62:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   14000fe69:	movsxd esp,DWORD PTR [rbp+0x20]
   14000fe6c:	cmp    al,0x69
   14000fe6e:	add    BYTE PTR ds:[rdi+rbp*1],bh
   14000fe72:	imul   edi,DWORD PTR [rsi],0x0
   14000fe78:	sub    al,0x20
   14000fe7a:	jo     0x14000fedd
   14000fe7c:	je     0x14000fee6
   14000fe7e:	and    BYTE PTR [rax],al
   14000fe80:	data16 jb 0x14000fef2
   14000fe83:	ins    DWORD PTR es:[rdi],dx
   14000fe84:	and    BYTE PTR [rax],al
   14000fe86:	add    BYTE PTR [rax],al
   14000fe88:	jb     0x14000feef
   14000fe8a:	jo     0x14000fef8
   14000fe8c:	jns    0x14000feae
   14000fe8e:	add    BYTE PTR [rax],al
   14000fe90:	gs jb  0x14000ff05
   14000fe93:	outs   dx,DWORD PTR ds:[rsi]
   14000fe94:	jb     0x14000feb6
   14000fe96:	ins    DWORD PTR es:[rdi],dx
   14000fe97:	gs jae 0x14000ff0d
   14000fe9a:	(bad)  
   14000fe9b:	and    BYTE PTR gs:[eax],al
   14000fe9f:	add    BYTE PTR [rbx+0x69],dh
   14000fea2:	outs   dx,BYTE PTR ds:[esi]
   14000fea4:	(bad)  
   14000fea5:	ins    BYTE PTR es:[rdi],dx
   14000fea6:	and    BYTE PTR [rax],al
   14000fea8:	ins    DWORD PTR es:[rdi],dx
   14000fea9:	gs jae 0x14000ff1f
   14000feac:	(bad)  
   14000fead:	and    BYTE PTR gs:[eax],al
   14000feb1:	add    BYTE PTR [rax],al
   14000feb3:	add    BYTE PTR [rax],al
   14000feb5:	add    BYTE PTR [rax],al
   14000feb7:	add    BYTE PTR [rdx+0x65],dl
   14000feba:	movsxd esp,DWORD PTR [rbp+0x69]
   14000febd:	jbe    0x14000ff24
   14000febf:	and    BYTE PTR fs:[rax],al
   14000fec2:	add    BYTE PTR [rax],al
   14000fec4:	add    BYTE PTR [rax],al
   14000fec6:	add    BYTE PTR [rax],al
   14000fec8:	outs   dx,DWORD PTR ds:[rsi]
   14000fec9:	jb     0x14000ff32
   14000fecb:	cs data16 jb 0x14000ff34
   14000fecf:	gs fs gs jae 0x14000ff3f
   14000fed4:	je     0x14000ff45
   14000fed6:	jo     0x14000ff06
   14000fed8:	rex.R
   14000fed9:	rex.X jne 0x14000ff4f
   14000fedc:	cs push rax
   14000fede:	jb     0x14000ff4f
   14000fee0:	jo     0x14000ff47
   14000fee2:	jb     0x14000ff58
   14000fee4:	imul   esp,DWORD PTR [rbp+0x73],0x74654700
   14000feeb:	add    BYTE PTR [rbx+0x65],dl
   14000feee:	je     0x14000fef0
   14000fef0:	push   rbp
   14000fef1:	outs   dx,BYTE PTR ds:[rsi]
   14000fef2:	(bad)  
   14000fef3:	(bad)  
   14000fef4:	ins    BYTE PTR es:[rdi],dx
   14000fef5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fefa:	ins    DWORD PTR es:[rdi],dx
   14000fefb:	(bad)  
   14000fefc:	jb     0x14000ff71
   14000fefe:	push   0x6c6c61
   14000ff03:	add    BYTE PTR [rax],al
   14000ff05:	add    BYTE PTR [rax],al
   14000ff07:	add    BYTE PTR [rsi+0x61],dl
   14000ff0a:	ins    BYTE PTR es:[rdi],dx
   14000ff0b:	jne    0x14000ff72
   14000ff0d:	and    BYTE PTR [rbx+0x6f],ah
   14000ff10:	outs   dx,BYTE PTR ds:[rsi]
   14000ff11:	jbe    0x14000ff78
   14000ff13:	jb     0x14000ff88
   14000ff15:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   14000ff1c:	ins    BYTE PTR es:[rdi],dx
   14000ff1d:	gs fs sub al,0x20
   14000ff21:	jne    0x14000ff91
   14000ff23:	(bad)  
   14000ff24:	(bad)  
   14000ff25:	ins    BYTE PTR es:[rdi],dx
   14000ff26:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000ff2b:	jae    0x14000ff92
   14000ff2d:	je     0x14000ff4f
   14000ff2f:	jo     0x14000ffa3
   14000ff31:	outs   dx,DWORD PTR ds:[rsi]
   14000ff32:	jo     0x14000ff99
   14000ff34:	jb     0x14000ffaa
   14000ff36:	jns    0x14000ff38
   14000ff38:	rex.B jb 0x14000ffa2
   14000ff3b:	jne    0x14000ffaa
   14000ff3d:	outs   dx,BYTE PTR gs:[rsi]
   14000ff3f:	je     0x14000ffb4
   14000ff41:	add    BYTE PTR [rax],al
   14000ff43:	add    BYTE PTR [rax],al
   14000ff45:	add    BYTE PTR [rax],al
   14000ff47:	add    BYTE PTR [rax+0x6c],dl
   14000ff4a:	gs (bad) 
   14000ff4c:	jae    0x14000ffb3
   14000ff4e:	and    BYTE PTR [rbp+0x6e],ah
   14000ff51:	je     0x14000ffb8
   14000ff53:	jb     0x14000ff75
   14000ff55:	je     0x14000ffbf
   14000ff57:	and    BYTE PTR gs:[rsi+0x61],dh
   14000ff5b:	ins    BYTE PTR es:[rdi],dx
   14000ff5c:	jne    0x14000ffc3
   14000ff5e:	and    BYTE PTR [rdi+0x66],ch
   14000ff61:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000ff65:	and    BYTE PTR [rax+0x72],dh
   14000ff68:	outs   dx,DWORD PTR ds:[rsi]
   14000ff69:	jo     0x14000ffd0
   14000ff6b:	jb     0x14000ffe1
   14000ff6d:	jns    0x14000ff8f
   14000ff6f:	and    eax,0x74282031
   14000ff74:	jns    0x14000ffe6
   14000ff76:	and    BYTE PTR gs:[rip+0x2932],ah        # 0x1400128af
   14000ff7d:	add    BYTE PTR [rax],al
   14000ff7f:	add    BYTE PTR [rax+0x6c],dl
   14000ff82:	gs (bad) 
   14000ff84:	jae    0x14000ffeb
   14000ff86:	and    BYTE PTR [rbp+0x6e],ah
   14000ff89:	je     0x14000fff0
   14000ff8b:	jb     0x14000ffad
   14000ff8d:	jo     0x14000fff0
   14000ff8f:	jb     0x14000fff2
   14000ff91:	ins    DWORD PTR es:[rdi],dx
   14000ff92:	gs je  0x14000fffa
   14000ff95:	jb     0x14001000a
   14000ff97:	and    BYTE PTR [rsi+0x6f],ah
   14000ff9a:	jb     0x14000ffbc
   14000ff9c:	je     0x140010006
   14000ff9e:	and    BYTE PTR gs:[rbp+0x65],ch
   14000ffa2:	je     0x14001000c
   14000ffa4:	outs   dx,DWORD PTR ds:[rsi]
   14000ffa5:	and    BYTE PTR fs:[rdx],ah
   14000ffa8:	and    eax,0x2231
   14000ffad:	add    BYTE PTR [rax],al
   14000ffaf:	add    BYTE PTR [rbp+0x6e],dl
   14000ffb2:	(bad)  
   14000ffb3:	(bad)  
   14000ffb4:	ins    BYTE PTR es:[rdi],dx
   14000ffb5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000ffba:	imul   bp,WORD PTR [rsi+0x64],0x6d20
   14000ffc0:	gs je  0x14001002b
   14000ffc3:	outs   dx,DWORD PTR ds:[rsi]
   14000ffc4:	add    BYTE PTR fs:[rax],al
   14000ffc7:	add    BYTE PTR [rbp+0x6e],dl
   14000ffca:	(bad)  
   14000ffcb:	(bad)  
   14000ffcc:	ins    BYTE PTR es:[rdi],dx
   14000ffcd:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000ffd2:	imul   bp,WORD PTR [rsi+0x64],0x6d20
   14000ffd8:	gs je  0x140010043
   14000ffdb:	outs   dx,DWORD PTR ds:[rsi]
   14000ffdc:	and    BYTE PTR fs:[rip+0x6e6f2031],ah        # 0x1ae702014
   14000ffe3:	and    BYTE PTR [rax+0x61],dh
   14000ffe6:	je     0x140010050
   14000ffe8:	and    BYTE PTR [rip+0x6e692032],ah        # 0x1ae6a2020
   14000ffee:	and    BYTE PTR [rcx+0x6e],ch
   14000fff1:	je     0x140010058
   14000fff3:	jb     0x14001005b
   14000fff5:	(bad)  
   14000fff6:	movsxd esp,DWORD PTR [rbp+0x20]
   14000fff9:	and    eax,0x43260033
   14000fffe:	(bad)  
   14000ffff:	ins    BYTE PTR es:[rdi],dx
   140010000:	ins    BYTE PTR es:[rdi],dx
   140010001:	add    BYTE PTR [rax],al
   140010003:	add    BYTE PTR [rax],al
   140010005:	add    BYTE PTR [rax],al
   140010007:	add    BYTE PTR [rsi],ah
   140010009:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001000b:	outs   dx,BYTE PTR ds:[rsi]
   14001000c:	outs   dx,BYTE PTR ds:[rsi]
   14001000d:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   140010012:	add    BYTE PTR [rax],al
   140010014:	add    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax],al
   140010018:	es rex.RXB
   14001001a:	gs je  0x14001003d
   14001001d:	jbe    0x140010080
   14001001f:	ins    BYTE PTR es:[rdi],dx
   140010020:	jne    0x140010087
   140010022:	add    BYTE PTR [rax],al
   140010024:	add    BYTE PTR [rax],al
   140010026:	add    BYTE PTR [rax],al
   140010028:	es push rbx
   14001002a:	gs je  0x14001004d
   14001002d:	jbe    0x140010090
   14001002f:	ins    BYTE PTR es:[rdi],dx
   140010030:	jne    0x140010097
   140010032:	add    BYTE PTR [rax],al
   140010034:	add    BYTE PTR [rax],al
   140010036:	add    BYTE PTR [rax],al
   140010038:	rex.WRB
   140010039:	gs je  0x1400100a4
   14001003c:	outs   dx,DWORD PTR ds:[rsi]
   14001003d:	fs jae 0x140010040
   140010040:	(bad)  
	...
   14001004d:	add    BYTE PTR [rax],al
   14001004f:	add    al,al
   140010051:	add    DWORD PTR ss:[rax+0x1],eax
   140010055:	add    BYTE PTR [rax],al
   140010057:	add    BYTE PTR [rax-0x55],dh
   14001005a:	add    BYTE PTR [rax+0x1],al
   14001005d:	add    BYTE PTR [rax],al
   14001005f:	add    BYTE PTR [rax+0x14000aa],dl
   140010065:	add    BYTE PTR [rax],al
   140010067:	add    BYTE PTR [rax+0x14000ab],dl
   14001006d:	add    BYTE PTR [rax],al
   14001006f:	add    BYTE PTR [rax+0x1400082],al
   140010075:	add    BYTE PTR [rax],al
   140010077:	add    BYTE PTR [rsi],ch
   140010079:	mov    dh,0x0
   14001007b:	rex add DWORD PTR [rax],eax
   14001007e:	add    BYTE PTR [rax],al
   140010080:	xor    al,0xb6
   140010082:	add    BYTE PTR [rax+0x1],al
   140010085:	add    BYTE PTR [rax],al
   140010087:	add    BYTE PTR [rdx],bh
   140010089:	mov    dh,0x0
   14001008b:	rex add DWORD PTR [rax],eax
   14001008e:	add    BYTE PTR [rax],al
   140010090:	mov    sil,0x0
   140010093:	rex add DWORD PTR [rax],eax
   140010096:	add    BYTE PTR [rax],al
   140010098:	rex.RX mov sil,0x0
   14001009b:	rex add DWORD PTR [rax],eax
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	rex.WR mov sil,0x0
   1400100a3:	rex add DWORD PTR [rax],eax
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	push   rdx
   1400100a9:	mov    dh,0x0
   1400100ab:	rex add DWORD PTR [rax],eax
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	shl    BYTE PTR [rax+0x0],1
   1400100b3:	rex add DWORD PTR [rax],eax
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	rex (bad) 
   1400100ba:	add    BYTE PTR [rax+0x1],al
   1400100bd:	add    BYTE PTR [rax],al
   1400100bf:	add    BYTE PTR [rax-0x4a],bl
   1400100c2:	add    BYTE PTR [rax+0x1],al
   1400100c5:	add    BYTE PTR [rax],al
   1400100c7:	add    al,dh
   1400100c9:	add    BYTE PTR [rax],0x40
   1400100cc:	add    DWORD PTR [rax],eax
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	loopne 0x14001012f
   1400100d2:	add    BYTE PTR [rax+0x1],al
   1400100d5:	add    BYTE PTR [rax],al
   1400100d7:	add    BYTE PTR [rsi-0x4a],bl
   1400100da:	add    BYTE PTR [rax+0x1],al
   1400100dd:	add    BYTE PTR [rax],al
   1400100df:	add    al,dh
   1400100e1:	pop    rbp
   1400100e2:	add    BYTE PTR [rax+0x1],al
   1400100e5:	add    BYTE PTR [rax],al
   1400100e7:	add    BYTE PTR [rsi+rsi*4+0x0],ah
   1400100eb:	rex add DWORD PTR [rax],eax
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	rex pop rsi
   1400100f2:	add    BYTE PTR [rax+0x1],al
   1400100f5:	add    BYTE PTR [rax],al
   1400100f7:	add    BYTE PTR [rdx-0x4a],ch
   1400100fa:	add    BYTE PTR [rax+0x1],al
   1400100fd:	add    BYTE PTR [rax],al
   1400100ff:	add    BYTE PTR [rax-0x4a],dh
   140010102:	add    BYTE PTR [rax+0x1],al
   140010105:	add    BYTE PTR [rax],al
   140010107:	add    BYTE PTR [rsi-0x4a],dh
   14001010a:	add    BYTE PTR [rax+0x1],al
   14001010d:	add    BYTE PTR [rax],al
   14001010f:	add    BYTE PTR [rsi+rsi*4+0x0],bh
   140010113:	rex add DWORD PTR [rax],eax
   140010116:	add    BYTE PTR [rax],al
   140010118:	(bad)  
   140010119:	mov    dh,0x0
   14001011b:	rex add DWORD PTR [rax],eax
   14001011e:	add    BYTE PTR [rax],al
   140010120:	mov    BYTE PTR [rsi+0x14000],dh
   140010126:	add    BYTE PTR [rax],al
   140010128:	mov    ?,WORD PTR [rsi+0x14000]
   14001012e:	add    BYTE PTR [rax],al
   140010130:	xchg   esp,eax
   140010131:	mov    dh,0x0
   140010133:	rex add DWORD PTR [rax],eax
   140010136:	add    BYTE PTR [rax],al
   140010138:	(bad)  
   140010139:	mov    dh,0x0
   14001013b:	rex add DWORD PTR [rax],eax
   14001013e:	add    BYTE PTR [rax],al
   140010140:	movabs al,ds:0xa6000000014000b6
   140010149:	mov    dh,0x0
   14001014b:	rex add DWORD PTR [rax],eax
   14001014e:	add    BYTE PTR [rax],al
   140010150:	lods   al,BYTE PTR ds:[rsi]
   140010151:	mov    dh,0x0
   140010153:	rex add DWORD PTR [rax],eax
   140010156:	add    BYTE PTR [rax],al
   140010158:	mov    dl,0xb6
   14001015a:	add    BYTE PTR [rax+0x1],al
   14001015d:	add    BYTE PTR [rax],al
   14001015f:	add    BYTE PTR [rax+0x14000b6],bh
   140010165:	add    BYTE PTR [rax],al
   140010167:	add    BYTE PTR [rsi+0x14000b6],bh
   14001016d:	add    BYTE PTR [rax],al
   14001016f:	add    ah,al
   140010171:	mov    dh,0x0
   140010173:	rex add DWORD PTR [rax],eax
   140010176:	add    BYTE PTR [rax],al
   140010178:	retf   0xb6
   14001017b:	rex add DWORD PTR [rax],eax
   14001017e:	add    BYTE PTR [rax],al
   140010180:	shl    BYTE PTR [rsi+0x14000],1
   140010186:	add    BYTE PTR [rax],al
   140010188:	(bad)  
   140010189:	mov    dh,0x0
   14001018b:	rex add DWORD PTR [rax],eax
   14001018e:	add    BYTE PTR [rax],al
   140010190:	fdiv   QWORD PTR [rsi+0x14000]
   140010196:	add    BYTE PTR [rax],al
   140010198:	loop   0x140010150
   14001019a:	add    BYTE PTR [rax+0x1],al
   14001019d:	add    BYTE PTR [rax],al
   14001019f:	add    al,ch
   1400101a1:	mov    dh,0x0
   1400101a3:	rex add DWORD PTR [rax],eax
   1400101a6:	add    BYTE PTR [rax],al
   1400101a8:	out    dx,al
   1400101a9:	mov    dh,0x0
   1400101ab:	rex add DWORD PTR [rax],eax
   1400101ae:	add    BYTE PTR [rax],al
   1400101b0:	hlt    
   1400101b1:	mov    dh,0x0
   1400101b3:	rex add DWORD PTR [rax],eax
   1400101b6:	add    BYTE PTR [rax],al
   1400101b8:	cli    
   1400101b9:	mov    dh,0x0
   1400101bb:	rex add DWORD PTR [rax],eax
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400101c2:	jbe    0x140010225
   1400101c4:	ins    BYTE PTR es:[rdi],dx
   1400101c5:	imul   esp,DWORD PTR [rax+riz*1+0x58],0x72204c4d
   1400101cd:	movsxd esp,DWORD PTR gs:[rbp+0x69]
   1400101d1:	jbe    0x140010238
   1400101d3:	and    BYTE PTR fs:[rsi+0x72],ah
   1400101d7:	outs   dx,DWORD PTR ds:[rsi]
   1400101d8:	ins    DWORD PTR es:[rdi],dx
   1400101d9:	and    BYTE PTR [rdi+0x62],ch
   1400101dc:	push   0x65
   1400101de:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
   1400101e2:	xor    DWORD PTR [rax],esp
   1400101e4:	(bad)  
   1400101e5:	je     0x140010207
   1400101e7:	and    eax,0xa32
   1400101ec:	add    BYTE PTR [rax],al
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	rex.XB (bad) 
   1400101f2:	ins    BYTE PTR es:[rdi],dx
   1400101f3:	ins    BYTE PTR es:[rdi],dx
   1400101f4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400101f8:	outs   dx,DWORD PTR ds:[rsi]
   1400101f9:	(bad)  
   1400101fa:	push   0x65
   1400101fc:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
   140010200:	xor    DWORD PTR [rax],esp
   140010202:	(bad)  
   140010203:	je     0x140010225
   140010205:	and    eax,0x200a3a32
   14001020a:	and    BYTE PTR [rip+0x25282033],ah        # 0x165292243
   140010210:	xor    al,0x29
   140010212:	and    BYTE PTR [rsi+0x61],ah
   140010215:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
   14001021d:	add    BYTE PTR [rax],al
   14001021f:	add    BYTE PTR [rcx+0x6e],cl
   140010222:	je     0x140010296
   140010224:	outs   dx,DWORD PTR ds:[rsi]
   140010225:	jae    0x140010297
   140010227:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   14001022c:	add    BYTE PTR [rax],al
   14001022e:	add    BYTE PTR [rax],al
   140010230:	rex.XB (bad) 
   140010232:	outs   dx,BYTE PTR ds:[rsi]
   140010233:	outs   dx,BYTE PTR ds:[rsi]
   140010234:	outs   dx,DWORD PTR ds:[rsi]
   140010235:	je     0x140010257
   140010237:	imul   ebp,DWORD PTR [rsi+0x74],0x70736f72
   14001023e:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x6f]
   140010243:	(bad)  
   140010244:	push   0x65
   140010246:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
   14001024a:	xor    DWORD PTR [rax],esp
   14001024c:	(bad)  
   14001024d:	je     0x14001026f
   14001024f:	and    eax,0x200a3a32
   140010254:	and    BYTE PTR [rip+0x25282033],ah        # 0x16529228d
   14001025a:	xor    al,0x29
   14001025c:	or     al,BYTE PTR [rax]
   14001025e:	add    BYTE PTR [rax],al
   140010260:	outs   dx,DWORD PTR ds:[rsi]
   140010261:	jb     0x1400102ca
   140010263:	cs data16 jb 0x1400102cc
   140010267:	gs fs gs jae 0x1400102d7
   14001026c:	je     0x1400102dd
   14001026e:	jo     0x14001029e
   140010270:	rex.R
   140010271:	rex.X jne 0x1400102e7
   140010274:	rex.WB outs dx,BYTE PTR cs:[rsi]
   140010277:	je     0x1400102eb
   140010279:	outs   dx,DWORD PTR ds:[rsi]
   14001027a:	jae    0x1400102ec
   14001027c:	movsxd esi,DWORD PTR gs:[rcx+riz*2+0x62]
   140010281:	ins    BYTE PTR es:[rdi],dx
   140010282:	add    BYTE PTR gs:[rax],al
   140010285:	add    BYTE PTR [rax],al
   140010287:	add    BYTE PTR [rcx+0x64],ah
   14001028a:	fs rex.WRB
   14001028c:	gs je  0x1400102f7
   14001028f:	outs   dx,DWORD PTR ds:[rsi]
   140010290:	fs jae 0x1400102cd
   140010293:	and    BYTE PTR [rbp+0x6e],dh
   140010296:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001029a:	outs   dx,BYTE PTR ds:[rsi]
   14001029b:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14001029f:	cmp    al,BYTE PTR [rax]
   1400102a1:	add    BYTE PTR [rax],al
   1400102a3:	add    BYTE PTR [rax],al
   1400102a5:	add    BYTE PTR [rax],al
   1400102a7:	add    BYTE PTR [rax+0x72],dl
   1400102aa:	outs   dx,DWORD PTR ds:[rsi]
   1400102ab:	jo     0x140010312
   1400102ad:	jb     0x140010323
   1400102af:	jns    0x1400102eb
   1400102b1:	and    BYTE PTR [rax],al
   1400102b3:	add    BYTE PTR [rax],al
   1400102b5:	add    BYTE PTR [rax],al
   1400102b7:	add    BYTE PTR [rbx+0x69],dl
   1400102ba:	outs   dx,BYTE PTR ds:[esi]
   1400102bc:	(bad)  
   1400102bd:	ins    BYTE PTR es:[rdi],dx
   1400102be:	cmp    ah,BYTE PTR [rax]
   1400102c0:	add    BYTE PTR [rax],al
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	imul   ebp,DWORD PTR [rsi+0x0],0x72696400
   1400102cb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400102d0:	outs   dx,BYTE PTR ds:[rsi]
   1400102d1:	add    BYTE PTR [rax],al
   1400102d3:	add    BYTE PTR [rax],al
   1400102d5:	add    BYTE PTR [rax],al
   1400102d7:	add    BYTE PTR [rbp+0x65],cl
   1400102da:	je     0x140010344
   1400102dc:	outs   dx,DWORD PTR ds:[rsi]
   1400102dd:	cmp    ah,BYTE PTR fs:[rax]
	...
   1400102e8:	jo     0x14001035c
   1400102ea:	outs   dx,DWORD PTR ds:[rsi]
   1400102eb:	jo     0x140010352
   1400102ed:	jb     0x140010363
   1400102ef:	jns    0x1400102f1
   1400102f1:	add    BYTE PTR [rax],al
   1400102f3:	add    BYTE PTR [rcx+rdi*2+0x70],dh
   1400102f7:	add    BYTE PTR gs:[rax],al
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	ins    DWORD PTR es:[rdi],dx
   1400102fd:	gs je  0x140010368
   140010300:	outs   dx,DWORD PTR ds:[rsi]
   140010301:	add    BYTE PTR fs:[rax],al
   140010304:	jae    0x14001036f
   140010306:	outs   dx,BYTE PTR ds:[esi]
   140010308:	(bad)  
   140010309:	ins    BYTE PTR es:[rdi],dx
   14001030a:	add    BYTE PTR [rax],al
   14001030c:	outs   dx,BYTE PTR ds:[rsi]
   14001030d:	(bad)  
   14001030e:	ins    DWORD PTR es:[rdi],dx
   14001030f:	add    BYTE PTR gs:[rax],al
   140010312:	add    BYTE PTR [rax],al
   140010314:	add    BYTE PTR [rax],al
   140010316:	add    BYTE PTR [rax],al
   140010318:	(bad)  
   140010319:	fs fs push rax
   14001031c:	(bad)  
   14001031d:	je     0x140010387
   14001031f:	cmp    ah,BYTE PTR [rax]
   140010321:	push   rbp
   140010322:	outs   dx,BYTE PTR ds:[rsi]
   140010323:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140010327:	outs   dx,BYTE PTR ds:[rsi]
   140010328:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14001032c:	and    BYTE PTR [rsi+0x61],ch
   14001032f:	ins    DWORD PTR es:[rdi],dx
   140010330:	cmp    al,BYTE PTR gs:[rax]
   140010333:	add    BYTE PTR [rsi+0x6f],ch
   140010336:	fs add BYTE PTR gs:[rax],al
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	add    BYTE PTR [rax],al
   14001033e:	add    BYTE PTR [rax],al
   140010340:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   140010347:	movsxd esp,DWORD PTR [rbp+0x0]
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	add    BYTE PTR [rax],al
   14001034e:	add    BYTE PTR [rax],al
   140010350:	call   0x14141048b
   140010355:	add    BYTE PTR [rax],al
   140010357:	add    BYTE PTR [rax-0x54],ah
   14001035a:	add    BYTE PTR [rax+0x1],al
   14001035d:	add    BYTE PTR [rax],al
   14001035f:	add    BYTE PTR [rax],al
   140010361:	lods   al,BYTE PTR ds:[rsi]
   140010362:	add    BYTE PTR [rax+0x1],al
   140010365:	add    BYTE PTR [rax],al
   140010367:	add    BYTE PTR [rax-0x54],dl
   14001036a:	add    BYTE PTR [rax+0x1],al
   14001036d:	add    BYTE PTR [rax],al
   14001036f:	add    BYTE PTR [rax],al
   140010371:	mov    al,BYTE PTR [rax]
   140010373:	rex add DWORD PTR [rax],eax
   140010376:	add    BYTE PTR [rax],al
   140010378:	cs mov dh,0x0
   14001037b:	rex add DWORD PTR [rax],eax
   14001037e:	add    BYTE PTR [rax],al
   140010380:	xor    al,0xb6
   140010382:	add    BYTE PTR [rax+0x1],al
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rdx],bh
   140010389:	mov    dh,0x0
   14001038b:	rex add DWORD PTR [rax],eax
   14001038e:	add    BYTE PTR [rax],al
   140010390:	mov    sil,0x0
   140010393:	rex add DWORD PTR [rax],eax
   140010396:	add    BYTE PTR [rax],al
   140010398:	rex.RX mov sil,0x0
   14001039b:	rex add DWORD PTR [rax],eax
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	rex.WR mov sil,0x0
   1400103a3:	rex add DWORD PTR [rax],eax
   1400103a6:	add    BYTE PTR [rax],al
   1400103a8:	push   rdx
   1400103a9:	mov    dh,0x0
   1400103ab:	rex add DWORD PTR [rax],eax
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	ins    BYTE PTR es:[rdi],dx
   1400103b1:	mov    bh,0x0
   1400103b3:	rex add DWORD PTR [rax],eax
   1400103b6:	add    BYTE PTR [rax],al
   1400103b8:	jb     0x140010371
   1400103ba:	add    BYTE PTR [rax+0x1],al
   1400103bd:	add    BYTE PTR [rax],al
   1400103bf:	add    BYTE PTR [rax-0x49],bh
   1400103c2:	add    BYTE PTR [rax+0x1],al
   1400103c5:	add    BYTE PTR [rax],al
   1400103c7:	add    BYTE PTR [rsi-0x49],bh
   1400103ca:	add    BYTE PTR [rax+0x1],al
   1400103cd:	add    BYTE PTR [rax],al
   1400103cf:	add    BYTE PTR [rdi+rsi*4+0x14000],al
   1400103d6:	add    BYTE PTR [rax],al
   1400103d8:	mov    dh,BYTE PTR [rdi+0x14000]
   1400103de:	add    BYTE PTR [rax],al
   1400103e0:	nop
   1400103e1:	mov    bh,0x0
   1400103e3:	rex add DWORD PTR [rax],eax
   1400103e6:	add    BYTE PTR [rax],al
   1400103e8:	xchg   esi,eax
   1400103e9:	mov    bh,0x0
   1400103eb:	rex add DWORD PTR [rax],eax
   1400103ee:	add    BYTE PTR [rax],al
   1400103f0:	rol    BYTE PTR [rdi+0x14000],1
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	pushf  
   1400103f9:	mov    bh,0x0
   1400103fb:	rex add DWORD PTR [rax],eax
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	movabs ds:0xa8000000014000b7,al
   140010409:	mov    bh,0x0
   14001040b:	rex add DWORD PTR [rax],eax
   14001040e:	add    BYTE PTR [rax],al
   140010410:	scas   al,BYTE PTR es:[rdi]
   140010411:	mov    bh,0x0
   140010413:	rex add DWORD PTR [rax],eax
   140010416:	add    BYTE PTR [rax],al
   140010418:	mov    ah,0xb7
   14001041a:	add    BYTE PTR [rax+0x1],al
   14001041d:	add    BYTE PTR [rax],al
   14001041f:	add    BYTE PTR [rdx+0x14000b7],bh
   140010425:	add    BYTE PTR [rax],al
   140010427:	add    al,al
   140010429:	mov    bh,0x0
   14001042b:	rex add DWORD PTR [rax],eax
   14001042e:	add    BYTE PTR [rax],al
   140010430:	(bad)  
   140010431:	mov    bh,0x0
   140010433:	rex add DWORD PTR [rax],eax
   140010436:	add    BYTE PTR [rax],al
   140010438:	int3   
   140010439:	mov    bh,0x0
   14001043b:	rex add DWORD PTR [rax],eax
   14001043e:	add    BYTE PTR [rax],al
   140010440:	shl    BYTE PTR [rdi+0x14000],cl
   140010446:	add    BYTE PTR [rax],al
   140010448:	fdiv   DWORD PTR [rdi+0x14000]
   14001044e:	add    BYTE PTR [rax],al
   140010450:	fidiv  WORD PTR [rdi+0x14000]
   140010456:	add    BYTE PTR [rax],al
   140010458:	in     al,0xb7
   14001045a:	add    BYTE PTR [rax+0x1],al
   14001045d:	add    BYTE PTR [rax],al
   14001045f:	add    BYTE PTR [rax+0x14000b6],bh
   140010465:	add    BYTE PTR [rax],al
   140010467:	add    BYTE PTR [rsi+0x14000b6],bh
   14001046d:	add    BYTE PTR [rax],al
   14001046f:	add    dl,ch
   140010471:	mov    bh,0x0
   140010473:	rex add DWORD PTR [rax],eax
   140010476:	add    BYTE PTR [rax],al
   140010478:	lock mov bh,0x0
   14001047b:	rex add DWORD PTR [rax],eax
   14001047e:	add    BYTE PTR [rax],al
   140010480:	div    BYTE PTR [rdi+0x14000]
   140010486:	add    BYTE PTR [rax],al
   140010488:	cld    
   140010489:	mov    bh,0x0
   14001048b:	rex add DWORD PTR [rax],eax
   14001048e:	add    BYTE PTR [rax],al
   140010490:	add    bh,BYTE PTR [rax+0x14000]
   140010496:	add    BYTE PTR [rax],al
   140010498:	or     BYTE PTR [rax+0x14000],bh
   14001049e:	add    BYTE PTR [rax],al
   1400104a0:	(bad)  
   1400104a1:	mov    eax,0x14000
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	out    dx,al
   1400104a9:	mov    dh,0x0
   1400104ab:	rex add DWORD PTR [rax],eax
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	adc    al,0xb8
   1400104b2:	add    BYTE PTR [rax+0x1],al
   1400104b5:	add    BYTE PTR [rax],al
   1400104b7:	add    BYTE PTR [rdx],bl
   1400104b9:	mov    eax,0x14000
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	and    BYTE PTR [rax+0x14000],bh
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	es mov eax,0x14000
   1400104ce:	add    BYTE PTR [rax],al
   1400104d0:	sub    al,0xb8
   1400104d2:	add    BYTE PTR [rax+0x1],al
   1400104d5:	add    BYTE PTR [rax],al
   1400104d7:	add    BYTE PTR [rdx],dh
   1400104d9:	mov    eax,0x14000
   1400104de:	add    BYTE PTR [rax],al
   1400104e0:	cmp    BYTE PTR [rax+0x14000],bh
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	ds mov eax,0x14000
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	rex.R mov eax,0x14000
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	push   rax
   1400104f9:	mov    BYTE PTR [rax],al
   1400104fb:	rex add DWORD PTR [rax],eax
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	push   rbx
   140010501:	gs jb  0x14001057a
   140010504:	imul   esp,DWORD PTR [rbx+0x65],0x73
   14001050b:	add    BYTE PTR [rdx],bh
   14001050d:	xor    DWORD PTR [rsi],ebp
   14001050f:	add    BYTE PTR [rax+0x38],cl
   140010512:	add    DWORD PTR [rax+0x1],eax
   140010515:	add    BYTE PTR [rax],al
   140010517:	add    BYTE PTR [rax-0x73],dl
   14001051a:	add    BYTE PTR [rax+0x1],al
   14001051d:	add    BYTE PTR [rax],al
   14001051f:	add    BYTE PTR [rsi+0x14000b3],bh
   140010525:	add    BYTE PTR [rax],al
   140010527:	add    ah,al
   140010529:	mov    bl,0x0
   14001052b:	rex add DWORD PTR [rax],eax
   14001052e:	add    BYTE PTR [rax],al
   140010530:	retf   0xb3
   140010533:	rex add DWORD PTR [rax],eax
   140010536:	add    BYTE PTR [rax],al
   140010538:	shl    BYTE PTR [rbx+0x14000],1
   14001053e:	add    BYTE PTR [rax],al
   140010540:	(bad)  
   140010541:	mov    bl,0x0
   140010543:	rex add DWORD PTR [rax],eax
   140010546:	add    BYTE PTR [rax],al
   140010548:	fdiv   QWORD PTR [rbx+0x14000]
   14001054e:	add    BYTE PTR [rax],al
   140010550:	sub    DWORD PTR [rax],eax
   140010552:	add    BYTE PTR [rax],al
   140010554:	and    BYTE PTR [rax],ch
   140010556:	add    BYTE PTR [rax],al
   140010558:	(bad)  
   140010559:	jb     0x1400105c2
   14001055b:	jne    0x1400105ca
   14001055d:	outs   dx,BYTE PTR gs:[rsi]
   14001055f:	je     0x140010581
   140010561:	add    BYTE PTR [rax],al
   140010563:	add    BYTE PTR [rax],al
   140010565:	add    BYTE PTR [rax],al
   140010567:	add    BYTE PTR [rdx],dh
   140010569:	jb     0x1400105d0
   14001056b:	push   0x65
   14001056d:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140010571:	sub    BYTE PTR [rcx],ch
   140010573:	add    BYTE PTR [rax],al
   140010575:	add    BYTE PTR [rax],al
   140010577:	add    BYTE PTR [rcx],dh
   140010579:	jb     0x1400105e0
   14001057b:	push   0x65
   14001057d:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
   140010581:	add    BYTE PTR [rax],al
   140010583:	add    BYTE PTR [rax],al
   140010585:	add    BYTE PTR [rax],al
   140010587:	add    BYTE PTR [rdx],dh
   140010589:	(bad)  
   14001058a:	movsxd esp,DWORD PTR [rbx+0x65]
   14001058d:	jo     0x140010603
   14001058f:	gs sub BYTE PTR fs:[rcx],ch
   140010593:	add    BYTE PTR [rax],al
   140010595:	add    BYTE PTR [rax],al
   140010597:	add    BYTE PTR [rcx],dh
   140010599:	(bad)  
   14001059a:	movsxd esp,DWORD PTR [rbx+0x65]
   14001059d:	jo     0x140010613
   14001059f:	sub    BYTE PTR [rcx],ch
   1400105a1:	add    BYTE PTR [rax],al
   1400105a3:	add    BYTE PTR [rsi+0x61],cl
   1400105a6:	ins    DWORD PTR es:[rdi],dx
   1400105a7:	add    BYTE PTR gs:[rax],al
   1400105aa:	add    BYTE PTR [rax],al
   1400105ac:	push   rsi
   1400105ad:	(bad)  
   1400105ae:	ins    BYTE PTR es:[rdi],dx
   1400105af:	jne    0x140010616
	...
   1400105bd:	add    BYTE PTR [rax],al
   1400105bf:	add    BYTE PTR [rax],dl
   1400105c1:	cmp    al,0x1
   1400105c3:	rex add DWORD PTR [rax],eax
   1400105c6:	add    BYTE PTR [rax],al
   1400105c8:	(bad)  
   1400105c9:	xchg   esp,eax
   1400105ca:	add    BYTE PTR [rax+0x1],al
   1400105cd:	add    BYTE PTR [rax],al
   1400105cf:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   1400105d3:	rex add DWORD PTR [rax],eax
   1400105d6:	add    BYTE PTR [rax],al
   1400105d8:	(bad)  
   1400105d9:	scas   eax,DWORD PTR es:[rdi]
   1400105da:	add    BYTE PTR [rax+0x1],al
   1400105dd:	add    BYTE PTR [rax],al
   1400105df:	add    BYTE PTR [rax-0x51],ch
   1400105e2:	add    BYTE PTR [rax+0x1],al
   1400105e5:	add    BYTE PTR [rax],al
   1400105e7:	add    BYTE PTR [rsi-0x51],ch
   1400105ea:	add    BYTE PTR [rax+0x1],al
   1400105ed:	add    BYTE PTR [rax],al
   1400105ef:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   1400105f3:	rex add DWORD PTR [rax],eax
   1400105f6:	add    BYTE PTR [rax],al
   1400105f8:	jp     0x1400105a9
   1400105fa:	add    BYTE PTR [rax+0x1],al
   1400105fd:	add    BYTE PTR [rax],al
   1400105ff:	add    BYTE PTR [rax+0x3b],bh
   140010602:	add    DWORD PTR [rax+0x1],eax
   140010605:	add    BYTE PTR [rax],al
   140010607:	add    BYTE PTR [rdx+0x14000b4],cl
   14001060d:	add    BYTE PTR [rax],al
   14001060f:	add    BYTE PTR [rax+0x14000b4],dl
   140010615:	add    BYTE PTR [rax],al
   140010617:	add    BYTE PTR [rsi+0x14000b4],dl
   14001061d:	add    BYTE PTR [rax],al
   14001061f:	add    BYTE PTR [rax],ah
   140010621:	xchg   esp,eax
   140010622:	add    BYTE PTR [rax+0x1],al
   140010625:	add    BYTE PTR [rax],al
   140010627:	add    BYTE PTR [rsp+rsi*4+0x14000],bl
   14001062e:	add    BYTE PTR [rax],al
   140010630:	xor    al,0xb6
   140010632:	add    BYTE PTR [rax+0x1],al
   140010635:	add    BYTE PTR [rax],al
   140010637:	add    BYTE PTR [rdx],bh
   140010639:	mov    dh,0x0
   14001063b:	rex add DWORD PTR [rax],eax
   14001063e:	add    BYTE PTR [rax],al
   140010640:	mov    sil,0x0
   140010643:	rex add DWORD PTR [rax],eax
   140010646:	add    BYTE PTR [rax],al
   140010648:	rex.RX mov sil,0x0
   14001064b:	rex add DWORD PTR [rax],eax
   14001064e:	add    BYTE PTR [rax],al
   140010650:	rex.WR mov sil,0x0
   140010653:	rex add DWORD PTR [rax],eax
   140010656:	add    BYTE PTR [rax],al
   140010658:	push   rdx
   140010659:	mov    dh,0x0
   14001065b:	rex add DWORD PTR [rax],eax
   14001065e:	add    BYTE PTR [rax],al
   140010660:	nop
   140010661:	scas   al,BYTE PTR es:[rdi]
   140010662:	add    BYTE PTR [rax+0x1],al
   140010665:	add    BYTE PTR [rax],al
   140010667:	add    BYTE PTR [rdx+0x14000b4],ah
   14001066d:	add    BYTE PTR [rax],al
   14001066f:	add    BYTE PTR [rax+0x14000b4],ch
   140010675:	add    BYTE PTR [rax],al
   140010677:	add    BYTE PTR [rsi+0x14000b4],ch
   14001067d:	add    BYTE PTR [rax],al
   14001067f:	add    BYTE PTR [rax+0x14000ae],ch
   140010685:	add    BYTE PTR [rax],al
   140010687:	add    BYTE PTR [rsp+rsi*4+0x14000],dh
   14001068e:	add    BYTE PTR [rax],al
   140010690:	mov    edx,0x14000b4
   140010695:	add    BYTE PTR [rax],al
   140010697:	add    BYTE PTR [rdx+0x14000ae],bh
   14001069d:	add    BYTE PTR [rax],al
   14001069f:	add    al,al
   1400106a1:	mov    ah,0x0
   1400106a3:	rex add DWORD PTR [rax],eax
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	(bad)  
   1400106a9:	scas   al,BYTE PTR es:[rdi]
   1400106aa:	add    BYTE PTR [rax+0x1],al
   1400106ad:	add    BYTE PTR [rax],al
   1400106af:	add    dh,al
   1400106b1:	mov    ah,0x0
   1400106b3:	rex add DWORD PTR [rax],eax
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	shr    BYTE PTR [rsi+0x14000],cl
   1400106be:	add    BYTE PTR [rax],al
   1400106c0:	int3   
   1400106c1:	mov    ah,0x0
   1400106c3:	rex add DWORD PTR [rax],eax
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	shl    BYTE PTR [rax+rax*1+0x140],cl
   1400106cf:	add    ah,ah
   1400106d1:	scas   al,BYTE PTR es:[rdi]
   1400106d2:	add    BYTE PTR [rax+0x1],al
   1400106d5:	add    BYTE PTR [rax],al
   1400106d7:	add    dl,ch
   1400106d9:	scas   al,BYTE PTR es:[rdi]
   1400106da:	add    BYTE PTR [rax+0x1],al
   1400106dd:	add    BYTE PTR [rax],al
   1400106df:	add    al,bl
   1400106e1:	mov    ah,0x0
   1400106e3:	rex add DWORD PTR [rax],eax
   1400106e6:	add    BYTE PTR [rax],al
   1400106e8:	imul   BYTE PTR [rsi+0x14000]
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	cld    
   1400106f1:	scas   al,BYTE PTR es:[rdi]
   1400106f2:	add    BYTE PTR [rax+0x1],al
   1400106f5:	add    BYTE PTR [rax],al
   1400106f7:	add    BYTE PTR [rdx],al
   1400106f9:	scas   eax,DWORD PTR es:[rdi]
   1400106fa:	add    BYTE PTR [rax+0x1],al
   1400106fd:	add    BYTE PTR [rax],al
   1400106ff:	add    dh,bl
   140010701:	mov    ah,0x0
   140010703:	rex add DWORD PTR [rax],eax
   140010706:	add    BYTE PTR [rax],al
   140010708:	(bad)  
   140010709:	scas   eax,DWORD PTR es:[rdi]
   14001070a:	add    BYTE PTR [rax+0x1],al
   14001070d:	add    BYTE PTR [rax],al
   14001070f:	add    BYTE PTR [rdi+rbp*4],dl
   140010712:	add    BYTE PTR [rax+0x1],al
   140010715:	add    BYTE PTR [rax],al
   140010717:	add    BYTE PTR [rdx],bl
   140010719:	scas   eax,DWORD PTR es:[rdi]
   14001071a:	add    BYTE PTR [rax+0x1],al
   14001071d:	add    BYTE PTR [rax],al
   14001071f:	add    BYTE PTR [rax],ah
   140010721:	scas   eax,DWORD PTR es:[rdi]
   140010722:	add    BYTE PTR [rax+0x1],al
   140010725:	add    BYTE PTR [rax],al
   140010727:	add    BYTE PTR [rsi],ah
   140010729:	scas   eax,DWORD PTR es:[rdi]
   14001072a:	add    BYTE PTR [rax+0x1],al
   14001072d:	add    BYTE PTR [rax],al
   14001072f:	add    BYTE PTR [rdi+rbp*4],ch
   140010732:	add    BYTE PTR [rax+0x1],al
   140010735:	add    BYTE PTR [rax],al
   140010737:	add    BYTE PTR [rdx],dh
   140010739:	scas   eax,DWORD PTR es:[rdi]
   14001073a:	add    BYTE PTR [rax+0x1],al
   14001073d:	add    BYTE PTR [rax],al
   14001073f:	add    BYTE PTR [rax],bh
   140010741:	scas   eax,DWORD PTR es:[rdi]
   140010742:	add    BYTE PTR [rax+0x1],al
   140010745:	add    BYTE PTR [rax],al
   140010747:	add    BYTE PTR [rsi],bh
   140010749:	scas   eax,DWORD PTR es:[rdi]
   14001074a:	add    BYTE PTR [rax+0x1],al
   14001074d:	add    BYTE PTR [rax],al
   14001074f:	add    ah,ah
   140010751:	mov    ah,0x0
   140010753:	rex add DWORD PTR [rax],eax
   140010756:	add    BYTE PTR [rax],al
   140010758:	rex.WX scas rax,QWORD PTR es:[rdi]
   14001075a:	add    BYTE PTR [rax+0x1],al
   14001075d:	add    BYTE PTR [rax],al
   14001075f:	add    BYTE PTR [rax-0x51],dl
   140010762:	add    BYTE PTR [rax+0x1],al
   140010765:	add    BYTE PTR [rax],al
   140010767:	add    dl,ch
   140010769:	mov    ah,0x0
   14001076b:	rex add DWORD PTR [rax],eax
   14001076e:	add    BYTE PTR [rax],al
   140010770:	push   rax
   140010771:	cmp    eax,DWORD PTR [rcx]
   140010773:	rex add DWORD PTR [rax],eax
   140010776:	add    BYTE PTR [rax],al
   140010778:	jo     0x14001070e
   14001077a:	add    BYTE PTR [rax+0x1],al
   14001077d:	add    BYTE PTR [rax],al
   14001077f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   140010783:	rex add DWORD PTR [rax],eax
   140010786:	add    BYTE PTR [rax],al
   140010788:	(bad)  
   140010789:	scas   eax,DWORD PTR es:[rdi]
   14001078a:	add    BYTE PTR [rax+0x1],al
   14001078d:	add    BYTE PTR [rax],al
   14001078f:	add    BYTE PTR [rax-0x51],ch
   140010792:	add    BYTE PTR [rax+0x1],al
   140010795:	add    BYTE PTR [rax],al
   140010797:	add    BYTE PTR [rsi-0x51],ch
   14001079a:	add    BYTE PTR [rax+0x1],al
   14001079d:	add    BYTE PTR [rax],al
   14001079f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   1400107a3:	rex add DWORD PTR [rax],eax
   1400107a6:	add    BYTE PTR [rax],al
   1400107a8:	jp     0x140010759
   1400107aa:	add    BYTE PTR [rax+0x1],al
   1400107ad:	add    BYTE PTR [rax],al
   1400107af:	add    BYTE PTR [rax+0x140013a],ah
   1400107b5:	add    BYTE PTR [rax],al
   1400107b7:	add    BYTE PTR [rsi-0x4c],cl
   1400107ba:	add    BYTE PTR [rax+0x1],al
   1400107bd:	add    BYTE PTR [rax],al
   1400107bf:	add    BYTE PTR [rsp+rsi*4+0x0],dl
   1400107c3:	rex add DWORD PTR [rax],eax
   1400107c6:	add    BYTE PTR [rax],al
   1400107c8:	pop    rdx
   1400107c9:	mov    ah,0x0
   1400107cb:	rex add DWORD PTR [rax],eax
   1400107ce:	add    BYTE PTR [rax],al
   1400107d0:	lock xchg ebx,eax
   1400107d2:	add    BYTE PTR [rax+0x1],al
   1400107d5:	add    BYTE PTR [rax],al
   1400107d7:	add    BYTE PTR [rax-0x4c],ah
   1400107da:	add    BYTE PTR [rax+0x1],al
   1400107dd:	add    BYTE PTR [rax],al
   1400107df:	add    BYTE PTR [rax+rsi*4],bl
   1400107e2:	add    BYTE PTR [rax+0x1],al
   1400107e5:	add    BYTE PTR [rax],al
   1400107e7:	add    BYTE PTR [rdx],ah
   1400107e9:	mov    al,0x0
   1400107eb:	rex add DWORD PTR [rax],eax
   1400107ee:	add    BYTE PTR [rax],al
   1400107f0:	mov    sil,0x0
   1400107f3:	rex add DWORD PTR [rax],eax
   1400107f6:	add    BYTE PTR [rax],al
   1400107f8:	rex.RX mov sil,0x0
   1400107fb:	rex add DWORD PTR [rax],eax
   1400107fe:	add    BYTE PTR [rax],al
   140010800:	rex.WR mov sil,0x0
   140010803:	rex add DWORD PTR [rax],eax
   140010806:	add    BYTE PTR [rax],al
   140010808:	push   rdx
   140010809:	mov    dh,0x0
   14001080b:	rex add DWORD PTR [rax],eax
   14001080e:	add    BYTE PTR [rax],al
   140010810:	nop
   140010811:	scas   al,BYTE PTR es:[rdi]
   140010812:	add    BYTE PTR [rax+0x1],al
   140010815:	add    BYTE PTR [rax],al
   140010817:	add    BYTE PTR [rax],ch
   140010819:	mov    al,0x0
   14001081b:	rex add DWORD PTR [rax],eax
   14001081e:	add    BYTE PTR [rax],al
   140010820:	cs mov al,0x0
   140010823:	rex add DWORD PTR [rax],eax
   140010826:	add    BYTE PTR [rax],al
   140010828:	movabs ds:0xa8000000014000ae,al
   140010831:	scas   al,BYTE PTR es:[rdi]
   140010832:	add    BYTE PTR [rax+0x1],al
   140010835:	add    BYTE PTR [rax],al
   140010837:	add    BYTE PTR [rax+rsi*4],dh
   14001083a:	add    BYTE PTR [rax+0x1],al
   14001083d:	add    BYTE PTR [rax],al
   14001083f:	add    BYTE PTR [rdx],bh
   140010841:	mov    al,0x0
   140010843:	rex add DWORD PTR [rax],eax
   140010846:	add    BYTE PTR [rax],al
   140010848:	mov    al,0x0
   14001084b:	rex add DWORD PTR [rax],eax
   14001084e:	add    BYTE PTR [rax],al
   140010850:	rex.RX mov al,0x0
   140010853:	rex add DWORD PTR [rax],eax
   140010856:	add    BYTE PTR [rax],al
   140010858:	rex.WR mov al,0x0
   14001085b:	rex add DWORD PTR [rax],eax
   14001085e:	add    BYTE PTR [rax],al
   140010860:	push   rdx
   140010861:	mov    al,0x0
   140010863:	rex add DWORD PTR [rax],eax
   140010866:	add    BYTE PTR [rax],al
   140010868:	shr    BYTE PTR [rsi+0x14000],cl
   14001086e:	add    BYTE PTR [rax],al
   140010870:	pop    rax
   140010871:	mov    al,0x0
   140010873:	rex add DWORD PTR [rax],eax
   140010876:	add    BYTE PTR [rax],al
   140010878:	pop    rsi
   140010879:	mov    al,0x0
   14001087b:	rex add DWORD PTR [rax],eax
   14001087e:	add    BYTE PTR [rax],al
   140010880:	in     al,0xae
   140010882:	add    BYTE PTR [rax+0x1],al
   140010885:	add    BYTE PTR [rax],al
   140010887:	add    dl,ch
   140010889:	scas   al,BYTE PTR es:[rdi]
   14001088a:	add    BYTE PTR [rax+0x1],al
   14001088d:	add    BYTE PTR [rax],al
   14001088f:	add    BYTE PTR [rax+rsi*4+0x0],ah
   140010893:	rex add DWORD PTR [rax],eax
   140010896:	add    BYTE PTR [rax],al
   140010898:	imul   BYTE PTR [rsi+0x14000]
   14001089e:	add    BYTE PTR [rax],al
   1400108a0:	push   0xffffffffffffffb0
   1400108a2:	add    BYTE PTR [rax+0x1],al
   1400108a5:	add    BYTE PTR [rax],al
   1400108a7:	add    BYTE PTR [rdx],al
   1400108a9:	scas   eax,DWORD PTR es:[rdi]
   1400108aa:	add    BYTE PTR [rax+0x1],al
   1400108ad:	add    BYTE PTR [rax],al
   1400108af:	add    BYTE PTR [rax-0x50],dh
   1400108b2:	add    BYTE PTR [rax+0x1],al
   1400108b5:	add    BYTE PTR [rax],al
   1400108b7:	add    BYTE PTR [rsi],cl
   1400108b9:	scas   eax,DWORD PTR es:[rdi]
   1400108ba:	add    BYTE PTR [rax+0x1],al
   1400108bd:	add    BYTE PTR [rax],al
   1400108bf:	add    BYTE PTR [rdi+rbp*4],dl
   1400108c2:	add    BYTE PTR [rax+0x1],al
   1400108c5:	add    BYTE PTR [rax],al
   1400108c7:	add    BYTE PTR [rsi-0x50],dh
   1400108ca:	add    BYTE PTR [rax+0x1],al
   1400108cd:	add    BYTE PTR [rax],al
   1400108cf:	add    BYTE PTR [rax+rsi*4+0x0],bh
   1400108d3:	rex add DWORD PTR [rax],eax
   1400108d6:	add    BYTE PTR [rax],al
   1400108d8:	(bad)  
   1400108d9:	mov    al,0x0
   1400108db:	rex add DWORD PTR [rax],eax
   1400108de:	add    BYTE PTR [rax],al
   1400108e0:	data16 mov ah,0x0
   1400108e3:	rex add DWORD PTR [rax],eax
   1400108e6:	add    BYTE PTR [rax],al
   1400108e8:	xor    ch,BYTE PTR [rdi+0x14000]
   1400108ee:	add    BYTE PTR [rax],al
   1400108f0:	cmp    BYTE PTR [rdi+0x14000],ch
   1400108f6:	add    BYTE PTR [rax],al
   1400108f8:	ds scas eax,DWORD PTR es:[rdi]
   1400108fa:	add    BYTE PTR [rax+0x1],al
   1400108fd:	add    BYTE PTR [rax],al
   1400108ff:	add    BYTE PTR [rsi+0x14000b0],cl
   140010905:	add    BYTE PTR [rax],al
   140010907:	add    BYTE PTR [rax+rsi*4+0x14000],dl
   14001090e:	add    BYTE PTR [rax],al
   140010910:	(bad)  
   140010911:	mov    al,0x0
   140010913:	rex add DWORD PTR [rax],eax
   140010916:	add    BYTE PTR [rax],al
   140010918:	movabs al,ds:0xa6000000014000b0
   140010921:	mov    al,0x0
   140010923:	rex add DWORD PTR [rax],eax
   140010926:	add    BYTE PTR [rax],al
   140010928:	lods   al,BYTE PTR ds:[rsi]
   140010929:	mov    al,0x0
   14001092b:	rex add DWORD PTR [rax],eax
   14001092e:	add    BYTE PTR [rax],al
   140010930:	mov    dl,0xb0
   140010932:	add    BYTE PTR [rax+0x1],al
   140010935:	add    BYTE PTR [rax],al
   140010937:	add    BYTE PTR [rax+0x14000b0],bh
   14001093d:	add    BYTE PTR [rax],al
   14001093f:	add    BYTE PTR [rsp+rsi*4+0x0],ch
   140010943:	rex add DWORD PTR [rax],eax
   140010946:	add    BYTE PTR [rax],al
   140010948:	(bad)  
   140010949:	mov    al,0x0
   14001094b:	rex add DWORD PTR [rax],eax
   14001094e:	add    BYTE PTR [rax],al
   140010950:	retf   0xb0
   140010953:	rex add DWORD PTR [rax],eax
   140010956:	add    BYTE PTR [rax],al
   140010958:	shl    BYTE PTR [rax+0x14000],1
   14001095e:	add    BYTE PTR [rax],al
   140010960:	(bad)  
   140010961:	mov    al,0x0
   140010963:	rex add DWORD PTR [rax],eax
   140010966:	add    BYTE PTR [rax],al
   140010968:	fdiv   QWORD PTR [rax+0x14000]
   14001096e:	add    BYTE PTR [rax],al
   140010970:	loop   0x140010922
   140010972:	add    BYTE PTR [rax+0x1],al
   140010975:	add    BYTE PTR [rax],al
   140010977:	add    al,ch
   140010979:	mov    al,0x0
   14001097b:	rex add DWORD PTR [rax],eax
   14001097e:	add    BYTE PTR [rax],al
   140010980:	out    dx,al
   140010981:	mov    al,0x0
   140010983:	rex add DWORD PTR [rax],eax
   140010986:	add    BYTE PTR [rax],al
   140010988:	hlt    
   140010989:	mov    al,0x0
   14001098b:	rex add DWORD PTR [rax],eax
   14001098e:	add    BYTE PTR [rax],al
   140010990:	cli    
   140010991:	mov    al,0x0
   140010993:	rex add DWORD PTR [rax],eax
   140010996:	add    BYTE PTR [rax],al
   140010998:	add    BYTE PTR [rcx+0x14000],dh
   14001099e:	add    BYTE PTR [rax],al
   1400109a0:	(bad)  
   1400109a1:	mov    cl,0x0
   1400109a3:	rex add DWORD PTR [rax],eax
   1400109a6:	add    BYTE PTR [rax],al
   1400109a8:	or     al,0xb1
   1400109aa:	add    BYTE PTR [rax+0x1],al
   1400109ad:	add    BYTE PTR [rax],al
   1400109af:	add    BYTE PTR [rdx],dl
   1400109b1:	mov    cl,0x0
   1400109b3:	rex add DWORD PTR [rax],eax
   1400109b6:	add    BYTE PTR [rax],al
   1400109b8:	sbb    BYTE PTR [rcx+0x14000],dh
   1400109be:	add    BYTE PTR [rax],al
   1400109c0:	(bad)  
   1400109c1:	mov    cl,0x0
   1400109c3:	rex add DWORD PTR [rax],eax
   1400109c6:	add    BYTE PTR [rax],al
   1400109c8:	and    al,0xb1
   1400109ca:	add    BYTE PTR [rax+0x1],al
   1400109cd:	add    BYTE PTR [rax],al
   1400109cf:	add    BYTE PTR [rdx],ch
   1400109d1:	mov    cl,0x0
   1400109d3:	rex add DWORD PTR [rax],eax
   1400109d6:	add    BYTE PTR [rax],al
   1400109d8:	xor    BYTE PTR [rcx+0x14000],dh
   1400109de:	add    BYTE PTR [rax],al
   1400109e0:	ss mov cl,0x0
   1400109e3:	rex add DWORD PTR [rax],eax
   1400109e6:	add    BYTE PTR [rax],al
   1400109e8:	cmp    al,0xb1
   1400109ea:	add    BYTE PTR [rax+0x1],al
   1400109ed:	add    BYTE PTR [rax],al
   1400109ef:	add    BYTE PTR [rdx-0x4f],al
   1400109f2:	add    BYTE PTR [rax+0x1],al
   1400109f5:	add    BYTE PTR [rax],al
   1400109f7:	add    BYTE PTR [rax-0x4f],cl
   1400109fa:	add    BYTE PTR [rax+0x1],al
   1400109fd:	add    BYTE PTR [rax],al
   1400109ff:	add    BYTE PTR [rsi-0x4f],cl
   140010a02:	add    BYTE PTR [rax+0x1],al
   140010a05:	add    BYTE PTR [rax],al
   140010a07:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   140010a0b:	rex add DWORD PTR [rax],eax
   140010a0e:	add    BYTE PTR [rax],al
   140010a10:	pop    rdx
   140010a11:	mov    cl,0x0
   140010a13:	rex add DWORD PTR [rax],eax
   140010a16:	add    BYTE PTR [rax],al
   140010a18:	(bad)  
   140010a19:	mov    cl,0x0
   140010a1b:	rex add DWORD PTR [rax],eax
   140010a1e:	add    BYTE PTR [rax],al
   140010a20:	data16 mov cl,0x0
   140010a23:	rex add DWORD PTR [rax],eax
   140010a26:	add    BYTE PTR [rax],al
   140010a28:	ins    BYTE PTR es:[rdi],dx
   140010a29:	mov    cl,0x0
   140010a2b:	rex add DWORD PTR [rax],eax
   140010a2e:	add    BYTE PTR [rax],al
   140010a30:	jb     0x1400109e3
   140010a32:	add    BYTE PTR [rax+0x1],al
   140010a35:	add    BYTE PTR [rax],al
   140010a37:	add    BYTE PTR [rax-0x4f],bh
   140010a3a:	add    BYTE PTR [rax+0x1],al
   140010a3d:	add    BYTE PTR [rax],al
   140010a3f:	add    BYTE PTR [rsi-0x4f],bh
   140010a42:	add    BYTE PTR [rax+0x1],al
   140010a45:	add    BYTE PTR [rax],al
   140010a47:	add    BYTE PTR [rcx+rsi*4+0x14000],al
   140010a4e:	add    BYTE PTR [rax],al
   140010a50:	mov    dh,BYTE PTR [rcx+0x14000]
   140010a56:	add    BYTE PTR [rax],al
   140010a58:	nop
   140010a59:	mov    cl,0x0
   140010a5b:	rex add DWORD PTR [rax],eax
   140010a5e:	add    BYTE PTR [rax],al
   140010a60:	xchg   esi,eax
   140010a61:	mov    cl,0x0
   140010a63:	rex add DWORD PTR [rax],eax
   140010a66:	add    BYTE PTR [rax],al
   140010a68:	pushf  
   140010a69:	mov    cl,0x0
   140010a6b:	rex add DWORD PTR [rax],eax
   140010a6e:	add    BYTE PTR [rax],al
   140010a70:	jb     0x140010a26
   140010a72:	add    BYTE PTR [rax+0x1],al
   140010a75:	add    BYTE PTR [rax],al
   140010a77:	add    BYTE PTR [rax-0x4c],bh
   140010a7a:	add    BYTE PTR [rax+0x1],al
   140010a7d:	add    BYTE PTR [rax],al
   140010a7f:	add    BYTE PTR [rsi-0x4c],bh
   140010a82:	add    BYTE PTR [rax+0x1],al
   140010a85:	add    BYTE PTR [rax],al
   140010a87:	add    BYTE PTR [rsp+rsi*4+0x14000],al
   140010a8e:	add    BYTE PTR [rax],al
   140010a90:	js     0x140010acc
   140010a92:	add    DWORD PTR [rax+0x1],eax
   140010a95:	add    BYTE PTR [rax],al
   140010a97:	add    BYTE PTR [rax-0x6c],dl
   140010a9a:	add    BYTE PTR [rax+0x1],al
   140010a9d:	add    BYTE PTR [rax],al
   140010a9f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   140010aa3:	rex add DWORD PTR [rax],eax
   140010aa6:	add    BYTE PTR [rax],al
   140010aa8:	(bad)  
   140010aa9:	scas   eax,DWORD PTR es:[rdi]
   140010aaa:	add    BYTE PTR [rax+0x1],al
   140010aad:	add    BYTE PTR [rax],al
   140010aaf:	add    BYTE PTR [rax-0x51],ch
   140010ab2:	add    BYTE PTR [rax+0x1],al
   140010ab5:	add    BYTE PTR [rax],al
   140010ab7:	add    BYTE PTR [rsi-0x51],ch
   140010aba:	add    BYTE PTR [rax+0x1],al
   140010abd:	add    BYTE PTR [rax],al
   140010abf:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   140010ac3:	rex add DWORD PTR [rax],eax
   140010ac6:	add    BYTE PTR [rax],al
   140010ac8:	jp     0x140010a79
   140010aca:	add    BYTE PTR [rax+0x1],al
   140010acd:	add    BYTE PTR [rax],al
   140010acf:	add    al,ch
   140010ad1:	cmp    DWORD PTR [rcx],eax
   140010ad3:	rex add DWORD PTR [rax],eax
   140010ad6:	add    BYTE PTR [rax],al
   140010ad8:	xor    BYTE PTR [rax+rax*1+0x140],dh
   140010adf:	add    BYTE PTR [rsi],dh
   140010ae1:	mov    ah,0x0
   140010ae3:	rex add DWORD PTR [rax],eax
   140010ae6:	add    BYTE PTR [rax],al
   140010ae8:	cmp    al,0xb4
   140010aea:	add    BYTE PTR [rax+0x1],al
   140010aed:	add    BYTE PTR [rax],al
   140010aef:	add    al,al
   140010af1:	xchg   ebx,eax
   140010af2:	add    BYTE PTR [rax+0x1],al
   140010af5:	add    BYTE PTR [rax],al
   140010af7:	add    BYTE PTR [rdx-0x4c],al
   140010afa:	add    BYTE PTR [rax+0x1],al
   140010afd:	add    BYTE PTR [rax],al
   140010aff:	add    BYTE PTR [rsi+rsi*4],dh
   140010b02:	add    BYTE PTR [rax+0x1],al
   140010b05:	add    BYTE PTR [rax],al
   140010b07:	add    BYTE PTR [rdx],bh
   140010b09:	mov    dh,0x0
   140010b0b:	rex add DWORD PTR [rax],eax
   140010b0e:	add    BYTE PTR [rax],al
   140010b10:	mov    sil,0x0
   140010b13:	rex add DWORD PTR [rax],eax
   140010b16:	add    BYTE PTR [rax],al
   140010b18:	rex.RX mov sil,0x0
   140010b1b:	rex add DWORD PTR [rax],eax
   140010b1e:	add    BYTE PTR [rax],al
   140010b20:	rex.WR mov sil,0x0
   140010b23:	rex add DWORD PTR [rax],eax
   140010b26:	add    BYTE PTR [rax],al
   140010b28:	push   rdx
   140010b29:	mov    dh,0x0
   140010b2b:	rex add DWORD PTR [rax],eax
   140010b2e:	add    BYTE PTR [rax],al
   140010b30:	nop
   140010b31:	scas   al,BYTE PTR es:[rdi]
   140010b32:	add    BYTE PTR [rax+0x1],al
   140010b35:	add    BYTE PTR [rax],al
   140010b37:	add    BYTE PTR [rsi+0x14000ae],dl
   140010b3d:	add    BYTE PTR [rax],al
   140010b3f:	add    BYTE PTR [rsi+rbp*4+0x14000],bl
   140010b46:	add    BYTE PTR [rax],al
   140010b48:	movabs ds:0xa8000000014000ae,al
   140010b51:	scas   al,BYTE PTR es:[rdi]
   140010b52:	add    BYTE PTR [rax+0x1],al
   140010b55:	add    BYTE PTR [rax],al
   140010b57:	add    BYTE PTR [rsi+0x14000ae],ch
   140010b5d:	add    BYTE PTR [rax],al
   140010b5f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   140010b66:	add    BYTE PTR [rax],al
   140010b68:	mov    edx,0x14000ae
   140010b6d:	add    BYTE PTR [rax],al
   140010b6f:	add    al,al
   140010b71:	scas   al,BYTE PTR es:[rdi]
   140010b72:	add    BYTE PTR [rax+0x1],al
   140010b75:	add    BYTE PTR [rax],al
   140010b77:	add    dh,al
   140010b79:	scas   al,BYTE PTR es:[rdi]
   140010b7a:	add    BYTE PTR [rax+0x1],al
   140010b7d:	add    BYTE PTR [rax],al
   140010b7f:	add    ah,cl
   140010b81:	scas   al,BYTE PTR es:[rdi]
   140010b82:	add    BYTE PTR [rax+0x1],al
   140010b85:	add    BYTE PTR [rax],al
   140010b87:	add    dl,dl
   140010b89:	scas   al,BYTE PTR es:[rdi]
   140010b8a:	add    BYTE PTR [rax+0x1],al
   140010b8d:	add    BYTE PTR [rax],al
   140010b8f:	add    al,bl
   140010b91:	scas   al,BYTE PTR es:[rdi]
   140010b92:	add    BYTE PTR [rax+0x1],al
   140010b95:	add    BYTE PTR [rax],al
   140010b97:	add    dh,bl
   140010b99:	scas   al,BYTE PTR es:[rdi]
   140010b9a:	add    BYTE PTR [rax+0x1],al
   140010b9d:	add    BYTE PTR [rax],al
   140010b9f:	add    ah,ah
   140010ba1:	scas   al,BYTE PTR es:[rdi]
   140010ba2:	add    BYTE PTR [rax+0x1],al
   140010ba5:	add    BYTE PTR [rax],al
   140010ba7:	add    dl,ch
   140010ba9:	scas   al,BYTE PTR es:[rdi]
   140010baa:	add    BYTE PTR [rax+0x1],al
   140010bad:	add    BYTE PTR [rax],al
   140010baf:	add    al,dh
   140010bb1:	scas   al,BYTE PTR es:[rdi]
   140010bb2:	add    BYTE PTR [rax+0x1],al
   140010bb5:	add    BYTE PTR [rax],al
   140010bb7:	add    dh,dh
   140010bb9:	scas   al,BYTE PTR es:[rdi]
   140010bba:	add    BYTE PTR [rax+0x1],al
   140010bbd:	add    BYTE PTR [rax],al
   140010bbf:	add    ah,bh
   140010bc1:	scas   al,BYTE PTR es:[rdi]
   140010bc2:	add    BYTE PTR [rax+0x1],al
   140010bc5:	add    BYTE PTR [rax],al
   140010bc7:	add    BYTE PTR [rdx],al
   140010bc9:	scas   eax,DWORD PTR es:[rdi]
   140010bca:	add    BYTE PTR [rax+0x1],al
   140010bcd:	add    BYTE PTR [rax],al
   140010bcf:	add    BYTE PTR [rax],cl
   140010bd1:	scas   eax,DWORD PTR es:[rdi]
   140010bd2:	add    BYTE PTR [rax+0x1],al
   140010bd5:	add    BYTE PTR [rax],al
   140010bd7:	add    BYTE PTR [rsi],cl
   140010bd9:	scas   eax,DWORD PTR es:[rdi]
   140010bda:	add    BYTE PTR [rax+0x1],al
   140010bdd:	add    BYTE PTR [rax],al
   140010bdf:	add    BYTE PTR [rdi+rbp*4],dl
   140010be2:	add    BYTE PTR [rax+0x1],al
   140010be5:	add    BYTE PTR [rax],al
   140010be7:	add    BYTE PTR [rdx],bl
   140010be9:	scas   eax,DWORD PTR es:[rdi]
   140010bea:	add    BYTE PTR [rax+0x1],al
   140010bed:	add    BYTE PTR [rax],al
   140010bef:	add    BYTE PTR [rax],ah
   140010bf1:	scas   eax,DWORD PTR es:[rdi]
   140010bf2:	add    BYTE PTR [rax+0x1],al
   140010bf5:	add    BYTE PTR [rax],al
   140010bf7:	add    BYTE PTR [rsi],ah
   140010bf9:	scas   eax,DWORD PTR es:[rdi]
   140010bfa:	add    BYTE PTR [rax+0x1],al
   140010bfd:	add    BYTE PTR [rax],al
   140010bff:	add    BYTE PTR [rdi+rbp*4],ch
   140010c02:	add    BYTE PTR [rax+0x1],al
   140010c05:	add    BYTE PTR [rax],al
   140010c07:	add    BYTE PTR [rdx],dh
   140010c09:	scas   eax,DWORD PTR es:[rdi]
   140010c0a:	add    BYTE PTR [rax+0x1],al
   140010c0d:	add    BYTE PTR [rax],al
   140010c0f:	add    BYTE PTR [rax],bh
   140010c11:	scas   eax,DWORD PTR es:[rdi]
   140010c12:	add    BYTE PTR [rax+0x1],al
   140010c15:	add    BYTE PTR [rax],al
   140010c17:	add    BYTE PTR [rsi],bh
   140010c19:	scas   eax,DWORD PTR es:[rdi]
   140010c1a:	add    BYTE PTR [rax+0x1],al
   140010c1d:	add    BYTE PTR [rax],al
   140010c1f:	add    BYTE PTR [rax-0x4c],cl
   140010c22:	add    BYTE PTR [rax+0x1],al
   140010c25:	add    BYTE PTR [rax],al
   140010c27:	add    BYTE PTR [rdx-0x51],cl
   140010c2a:	add    BYTE PTR [rax+0x1],al
   140010c2d:	add    BYTE PTR [rax],al
   140010c2f:	add    BYTE PTR [rax-0x51],dl
   140010c32:	add    BYTE PTR [rax+0x1],al
   140010c35:	add    BYTE PTR [rax],al
   140010c37:	add    BYTE PTR [rsi-0x51],dl
   140010c3a:	add    BYTE PTR [rax+0x1],al
   140010c3d:	add    BYTE PTR [rax],al
   140010c3f:	add    al,al
   140010c41:	cmp    DWORD PTR [rcx],eax
   140010c43:	rex add DWORD PTR [rax],eax
   140010c46:	add    BYTE PTR [rax],al
   140010c48:	adc    BYTE PTR [rax+rax*1+0x140],0x0
   140010c50:	pop    rsp
   140010c51:	scas   eax,DWORD PTR es:[rdi]
   140010c52:	add    BYTE PTR [rax+0x1],al
   140010c55:	add    BYTE PTR [rax],al
   140010c57:	add    BYTE PTR [rdx-0x51],ah
   140010c5a:	add    BYTE PTR [rax+0x1],al
   140010c5d:	add    BYTE PTR [rax],al
   140010c5f:	add    BYTE PTR [rax-0x51],ch
   140010c62:	add    BYTE PTR [rax+0x1],al
   140010c65:	add    BYTE PTR [rax],al
   140010c67:	add    BYTE PTR [rsi-0x51],ch
   140010c6a:	add    BYTE PTR [rax+0x1],al
   140010c6d:	add    BYTE PTR [rax],al
   140010c6f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   140010c73:	rex add DWORD PTR [rax],eax
   140010c76:	add    BYTE PTR [rax],al
   140010c78:	jp     0x140010c29
   140010c7a:	add    BYTE PTR [rax+0x1],al
   140010c7d:	add    BYTE PTR [rax],al
   140010c7f:	add    al,al
   140010c81:	cmp    BYTE PTR [rcx],al
   140010c83:	rex add DWORD PTR [rax],eax
   140010c86:	add    BYTE PTR [rax],al
   140010c88:	lock lods al,BYTE PTR ds:[rsi]
   140010c8a:	add    BYTE PTR [rax+0x1],al
   140010c8d:	add    BYTE PTR [rax],al
   140010c8f:	add    BYTE PTR [rax+0x14000ac],dl
   140010c95:	add    BYTE PTR [rax],al
   140010c97:	add    al,ah
   140010c99:	lods   al,BYTE PTR ds:[rsi]
   140010c9a:	add    BYTE PTR [rax+0x1],al
   140010c9d:	add    BYTE PTR [rax],al
   140010c9f:	add    BYTE PTR [rax+0x1400094],dl
   140010ca5:	add    BYTE PTR [rax],al
   140010ca7:	add    BYTE PTR [rdx+0x14000ae],cl
   140010cad:	add    BYTE PTR [rax],al
   140010caf:	add    dl,ah
   140010cb1:	mov    bl,0x0
   140010cb3:	rex add DWORD PTR [rax],eax
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	cmp    dh,BYTE PTR [rsi+0x14000]
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	mov    sil,0x0
   140010cc3:	rex add DWORD PTR [rax],eax
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	rex.RX mov sil,0x0
   140010ccb:	rex add DWORD PTR [rax],eax
   140010cce:	add    BYTE PTR [rax],al
   140010cd0:	rex.WR mov sil,0x0
   140010cd3:	rex add DWORD PTR [rax],eax
   140010cd6:	add    BYTE PTR [rax],al
   140010cd8:	push   rdx
   140010cd9:	mov    dh,0x0
   140010cdb:	rex add DWORD PTR [rax],eax
   140010cde:	add    BYTE PTR [rax],al
   140010ce0:	call   0x141410d98
   140010ce5:	add    BYTE PTR [rax],al
   140010ce7:	add    dh,ch
   140010ce9:	mov    bl,0x0
   140010ceb:	rex add DWORD PTR [rax],eax
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	hlt    
   140010cf1:	mov    bl,0x0
   140010cf3:	rex add DWORD PTR [rax],eax
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	movabs ds:0xa8000000014000ae,al
   140010d01:	scas   al,BYTE PTR es:[rdi]
   140010d02:	add    BYTE PTR [rax+0x1],al
   140010d05:	add    BYTE PTR [rax],al
   140010d07:	add    BYTE PTR [rsi+0x14000ae],ch
   140010d0d:	add    BYTE PTR [rax],al
   140010d0f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   140010d16:	add    BYTE PTR [rax],al
   140010d18:	mov    edx,0x14000ae
   140010d1d:	add    BYTE PTR [rax],al
   140010d1f:	add    al,al
   140010d21:	scas   al,BYTE PTR es:[rdi]
   140010d22:	add    BYTE PTR [rax+0x1],al
   140010d25:	add    BYTE PTR [rax],al
   140010d27:	add    dh,al
   140010d29:	scas   al,BYTE PTR es:[rdi]
   140010d2a:	add    BYTE PTR [rax+0x1],al
   140010d2d:	add    BYTE PTR [rax],al
   140010d2f:	add    dl,bh
   140010d31:	mov    bl,0x0
   140010d33:	rex add DWORD PTR [rax],eax
   140010d36:	add    BYTE PTR [rax],al
   140010d38:	shr    BYTE PTR [rsi+0x14000],cl
   140010d3e:	add    BYTE PTR [rax],al
   140010d40:	fsubr  DWORD PTR [rsi+0x14000]
   140010d46:	add    BYTE PTR [rax],al
   140010d48:	fisubr WORD PTR [rsi+0x14000]
   140010d4e:	add    BYTE PTR [rax],al
   140010d50:	in     al,0xae
   140010d52:	add    BYTE PTR [rax+0x1],al
   140010d55:	add    BYTE PTR [rax],al
   140010d57:	add    dl,ch
   140010d59:	scas   al,BYTE PTR es:[rdi]
   140010d5a:	add    BYTE PTR [rax+0x1],al
   140010d5d:	add    BYTE PTR [rax],al
   140010d5f:	add    al,dh
   140010d61:	scas   al,BYTE PTR es:[rdi]
   140010d62:	add    BYTE PTR [rax+0x1],al
   140010d65:	add    BYTE PTR [rax],al
   140010d67:	add    dh,dh
   140010d69:	scas   al,BYTE PTR es:[rdi]
   140010d6a:	add    BYTE PTR [rax+0x1],al
   140010d6d:	add    BYTE PTR [rax],al
   140010d6f:	add    BYTE PTR [rax],al
   140010d71:	mov    ah,0x0
   140010d73:	rex add DWORD PTR [rax],eax
   140010d76:	add    BYTE PTR [rax],al
   140010d78:	(bad)  
   140010d79:	mov    ah,0x0
   140010d7b:	rex add DWORD PTR [rax],eax
   140010d7e:	add    BYTE PTR [rax],al
   140010d80:	or     al,0xb4
   140010d82:	add    BYTE PTR [rax+0x1],al
   140010d85:	add    BYTE PTR [rax],al
   140010d87:	add    BYTE PTR [rsi],cl
   140010d89:	scas   eax,DWORD PTR es:[rdi]
   140010d8a:	add    BYTE PTR [rax+0x1],al
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    BYTE PTR [rdi+rbp*4],dl
   140010d92:	add    BYTE PTR [rax+0x1],al
   140010d95:	add    BYTE PTR [rax],al
   140010d97:	add    BYTE PTR [rdx],bl
   140010d99:	scas   eax,DWORD PTR es:[rdi]
   140010d9a:	add    BYTE PTR [rax+0x1],al
   140010d9d:	add    BYTE PTR [rax],al
   140010d9f:	add    BYTE PTR [rax],ah
   140010da1:	scas   eax,DWORD PTR es:[rdi]
   140010da2:	add    BYTE PTR [rax+0x1],al
   140010da5:	add    BYTE PTR [rax],al
   140010da7:	add    BYTE PTR [rsi],ah
   140010da9:	scas   eax,DWORD PTR es:[rdi]
   140010daa:	add    BYTE PTR [rax+0x1],al
   140010dad:	add    BYTE PTR [rax],al
   140010daf:	add    BYTE PTR [rdi+rbp*4],ch
   140010db2:	add    BYTE PTR [rax+0x1],al
   140010db5:	add    BYTE PTR [rax],al
   140010db7:	add    BYTE PTR [rdx],dl
   140010db9:	mov    ah,0x0
   140010dbb:	rex add DWORD PTR [rax],eax
   140010dbe:	add    BYTE PTR [rax],al
   140010dc0:	cmp    BYTE PTR [rdi+0x14000],ch
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	ds scas eax,DWORD PTR es:[rdi]
   140010dca:	add    BYTE PTR [rax+0x1],al
   140010dcd:	add    BYTE PTR [rax],al
   140010dcf:	add    BYTE PTR [rdi+rbp*4+0x0],al
   140010dd3:	rex add DWORD PTR [rax],eax
   140010dd6:	add    BYTE PTR [rax],al
   140010dd8:	rex.WX scas rax,QWORD PTR es:[rdi]
   140010dda:	add    BYTE PTR [rax+0x1],al
   140010ddd:	add    BYTE PTR [rax],al
   140010ddf:	add    BYTE PTR [rax-0x51],dl
   140010de2:	add    BYTE PTR [rax+0x1],al
   140010de5:	add    BYTE PTR [rax],al
   140010de7:	add    BYTE PTR [rsi-0x51],dl
   140010dea:	add    BYTE PTR [rax+0x1],al
   140010ded:	add    BYTE PTR [rax],al
   140010def:	add    BYTE PTR [rax],bl
   140010df1:	mov    ah,0x0
   140010df3:	rex add DWORD PTR [rax],eax
   140010df6:	add    BYTE PTR [rax],al
   140010df8:	mov    al,BYTE PTR [rax]
   140010dfb:	rex add DWORD PTR [rax],eax
   140010dfe:	add    BYTE PTR [rax],al
   140010e00:	(bad)  
   140010e01:	mov    ah,0x0
   140010e03:	rex add DWORD PTR [rax],eax
   140010e06:	add    BYTE PTR [rax],al
   140010e08:	and    al,0xb4
   140010e0a:	add    BYTE PTR [rax+0x1],al
   140010e0d:	add    BYTE PTR [rax],al
   140010e0f:	add    BYTE PTR [rdx],ch
   140010e11:	mov    ah,0x0
   140010e13:	rex add DWORD PTR [rax],eax
	...
   140010e1e:	add    BYTE PTR [rax],al
   140010e20:	call   0x141410f62
   140010e25:	add    BYTE PTR [rax],al
   140010e27:	add    BYTE PTR [rax-0x53],dh
   140010e2a:	add    BYTE PTR [rax+0x1],al
   140010e2d:	add    BYTE PTR [rax],al
   140010e2f:	add    BYTE PTR [rax],dl
   140010e31:	lods   eax,DWORD PTR ds:[rsi]
   140010e32:	add    BYTE PTR [rax+0x1],al
   140010e35:	add    BYTE PTR [rax],al
   140010e37:	add    BYTE PTR [rax-0x53],ah
   140010e3a:	add    BYTE PTR [rax+0x1],al
   140010e3d:	add    BYTE PTR [rax],al
   140010e3f:	add    BYTE PTR [rax],al
   140010e41:	xchg   edi,eax
   140010e42:	add    BYTE PTR [rax+0x1],al
   140010e45:	add    BYTE PTR [rax],al
   140010e47:	add    al,dh
   140010e49:	mov    ah,0x0
   140010e4b:	rex add DWORD PTR [rax],eax
   140010e4e:	add    BYTE PTR [rax],al
   140010e50:	sbb    al,0xb0
   140010e52:	add    BYTE PTR [rax+0x1],al
   140010e55:	add    BYTE PTR [rax],al
   140010e57:	add    dh,dh
   140010e59:	mov    ah,0x0
   140010e5b:	rex add DWORD PTR [rax],eax
   140010e5e:	add    BYTE PTR [rax],al
   140010e60:	mov    sil,0x0
   140010e63:	rex add DWORD PTR [rax],eax
   140010e66:	add    BYTE PTR [rax],al
   140010e68:	rex.RX mov sil,0x0
   140010e6b:	rex add DWORD PTR [rax],eax
   140010e6e:	add    BYTE PTR [rax],al
   140010e70:	rex.WR mov sil,0x0
   140010e73:	rex add DWORD PTR [rax],eax
   140010e76:	add    BYTE PTR [rax],al
   140010e78:	push   rdx
   140010e79:	mov    dh,0x0
   140010e7b:	rex add DWORD PTR [rax],eax
   140010e7e:	add    BYTE PTR [rax],al
   140010e80:	nop
   140010e81:	scas   al,BYTE PTR es:[rdi]
   140010e82:	add    BYTE PTR [rax+0x1],al
   140010e85:	add    BYTE PTR [rax],al
   140010e87:	add    BYTE PTR [rax],ch
   140010e89:	mov    al,0x0
   140010e8b:	rex add DWORD PTR [rax],eax
   140010e8e:	add    BYTE PTR [rax],al
   140010e90:	cs mov al,0x0
   140010e93:	rex add DWORD PTR [rax],eax
   140010e96:	add    BYTE PTR [rax],al
   140010e98:	movabs ds:0xa8000000014000ae,al
   140010ea1:	scas   al,BYTE PTR es:[rdi]
   140010ea2:	add    BYTE PTR [rax+0x1],al
   140010ea5:	add    BYTE PTR [rax],al
   140010ea7:	add    ah,bh
   140010ea9:	mov    ah,0x0
   140010eab:	rex add DWORD PTR [rax],eax
   140010eae:	add    BYTE PTR [rax],al
   140010eb0:	add    dh,BYTE PTR [rbp+0x14000]
   140010eb6:	add    BYTE PTR [rax],al
   140010eb8:	or     BYTE PTR [rbp+0x14000],dh
   140010ebe:	add    BYTE PTR [rax],al
   140010ec0:	(bad)  
   140010ec1:	mov    ch,0x0
   140010ec3:	rex add DWORD PTR [rax],eax
   140010ec6:	add    BYTE PTR [rax],al
   140010ec8:	adc    al,0xb5
   140010eca:	add    BYTE PTR [rax+0x1],al
   140010ecd:	add    BYTE PTR [rax],al
   140010ecf:	add    BYTE PTR [rdx],bl
   140010ed1:	mov    ch,0x0
   140010ed3:	rex add DWORD PTR [rax],eax
   140010ed6:	add    BYTE PTR [rax],al
   140010ed8:	and    BYTE PTR [rbp+0x14000],dh
   140010ede:	add    BYTE PTR [rax],al
   140010ee0:	es mov ch,0x0
   140010ee3:	rex add DWORD PTR [rax],eax
   140010ee6:	add    BYTE PTR [rax],al
   140010ee8:	sub    al,0xb5
   140010eea:	add    BYTE PTR [rax+0x1],al
   140010eed:	add    BYTE PTR [rax],al
   140010eef:	add    ah,ah
   140010ef1:	scas   al,BYTE PTR es:[rdi]
   140010ef2:	add    BYTE PTR [rax+0x1],al
   140010ef5:	add    BYTE PTR [rax],al
   140010ef7:	add    dl,ch
   140010ef9:	scas   al,BYTE PTR es:[rdi]
   140010efa:	add    BYTE PTR [rax+0x1],al
   140010efd:	add    BYTE PTR [rax],al
   140010eff:	add    BYTE PTR [rdx],dh
   140010f01:	mov    ch,0x0
   140010f03:	rex add DWORD PTR [rax],eax
   140010f06:	add    BYTE PTR [rax],al
   140010f08:	imul   BYTE PTR [rsi+0x14000]
   140010f0e:	add    BYTE PTR [rax],al
   140010f10:	cmp    BYTE PTR [rbp+0x14000],dh
   140010f16:	add    BYTE PTR [rax],al
   140010f18:	add    ch,BYTE PTR [rdi+0x14000]
   140010f1e:	add    BYTE PTR [rax],al
   140010f20:	and    BYTE PTR [rsi+0x14000],dl
   140010f26:	add    BYTE PTR [rax],al
   140010f28:	(bad)  
   140010f29:	scas   eax,DWORD PTR es:[rdi]
   140010f2a:	add    BYTE PTR [rax+0x1],al
   140010f2d:	add    BYTE PTR [rax],al
   140010f2f:	add    BYTE PTR [rdi+rbp*4],dl
   140010f32:	add    BYTE PTR [rax+0x1],al
   140010f35:	add    BYTE PTR [rax],al
   140010f37:	add    BYTE PTR [rsi],bh
   140010f39:	mov    ch,0x0
   140010f3b:	rex add DWORD PTR [rax],eax
   140010f3e:	add    BYTE PTR [rax],al
   140010f40:	rex.R mov bpl,0x0
   140010f43:	rex add DWORD PTR [rax],eax
   140010f46:	add    BYTE PTR [rax],al
   140010f48:	rex.WX mov bpl,0x0
   140010f4b:	rex add DWORD PTR [rax],eax
   140010f4e:	add    BYTE PTR [rax],al
   140010f50:	push   rax
   140010f51:	mov    ch,0x0
   140010f53:	rex add DWORD PTR [rax],eax
   140010f56:	add    BYTE PTR [rax],al
   140010f58:	push   rsi
   140010f59:	mov    ch,0x0
   140010f5b:	rex add DWORD PTR [rax],eax
   140010f5e:	add    BYTE PTR [rax],al
   140010f60:	cmp    BYTE PTR [rdi+0x14000],ch
   140010f66:	add    BYTE PTR [rax],al
   140010f68:	ds scas eax,DWORD PTR es:[rdi]
   140010f6a:	add    BYTE PTR [rax+0x1],al
   140010f6d:	add    BYTE PTR [rax],al
   140010f6f:	add    BYTE PTR [rbp+rsi*4+0x0],bl
   140010f73:	rex add DWORD PTR [rax],eax
   140010f76:	add    BYTE PTR [rax],al
   140010f78:	(bad)  
   140010f79:	mov    ch,0x0
   140010f7b:	rex add DWORD PTR [rax],eax
   140010f7e:	add    BYTE PTR [rax],al
   140010f80:	push   0x14000b5
   140010f85:	add    BYTE PTR [rax],al
   140010f87:	add    BYTE PTR [rsi-0x4b],ch
   140010f8a:	add    BYTE PTR [rax+0x1],al
   140010f8d:	add    BYTE PTR [rax],al
   140010f8f:	add    BYTE PTR [rsi+0x14000b0],ah
   140010f95:	add    BYTE PTR [rax],al
   140010f97:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   140010f9b:	rex add DWORD PTR [rax],eax
   140010f9e:	add    BYTE PTR [rax],al
   140010fa0:	jp     0x140010f57
   140010fa2:	add    BYTE PTR [rax+0x1],al
   140010fa5:	add    BYTE PTR [rax],al
   140010fa7:	add    BYTE PTR [rax+0x14000b5],al
   140010fad:	add    BYTE PTR [rax],al
   140010faf:	add    BYTE PTR [rsi+0x14000b5],al
   140010fb5:	add    BYTE PTR [rax],al
   140010fb7:	add    BYTE PTR [rbp+rsi*4+0x14000],cl
   140010fbe:	add    BYTE PTR [rax],al
   140010fc0:	xchg   edx,eax
   140010fc1:	mov    ch,0x0
   140010fc3:	rex add DWORD PTR [rax],eax
   140010fc6:	add    BYTE PTR [rax],al
   140010fc8:	cwde   
   140010fc9:	mov    ch,0x0
   140010fcb:	rex add DWORD PTR [rax],eax
   140010fce:	add    BYTE PTR [rax],al
   140010fd0:	sahf   
   140010fd1:	mov    ch,0x0
   140010fd3:	rex add DWORD PTR [rax],eax
   140010fd6:	add    BYTE PTR [rax],al
   140010fd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010fd9:	mov    ch,0x0
   140010fdb:	rex add DWORD PTR [rax],eax
   140010fde:	add    BYTE PTR [rax],al
   140010fe0:	stos   BYTE PTR es:[rdi],al
   140010fe1:	mov    ch,0x0
   140010fe3:	rex add DWORD PTR [rax],eax
   140010fe6:	add    BYTE PTR [rax],al
   140010fe8:	mov    al,0xb5
   140010fea:	add    BYTE PTR [rax+0x1],al
   140010fed:	add    BYTE PTR [rax],al
   140010fef:	add    BYTE PTR [rsi+0x14000b5],dh
   140010ff5:	add    BYTE PTR [rax],al
   140010ff7:	add    BYTE PTR [rbp+rsi*4+0x14000],bh
   140010ffe:	add    BYTE PTR [rax],al
   140011000:	cmp    BYTE PTR [rcx+rax*1],bh
   140011003:	rex add DWORD PTR [rax],eax
   140011006:	add    BYTE PTR [rax],al
   140011008:	lock xchg esi,eax
   14001100a:	add    BYTE PTR [rax+0x1],al
   14001100d:	add    BYTE PTR [rax],al
   14001100f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   140011013:	rex add DWORD PTR [rax],eax
   140011016:	add    BYTE PTR [rax],al
   140011018:	(bad)  
   140011019:	scas   eax,DWORD PTR es:[rdi]
   14001101a:	add    BYTE PTR [rax+0x1],al
   14001101d:	add    BYTE PTR [rax],al
   14001101f:	add    BYTE PTR [rax-0x51],ch
   140011022:	add    BYTE PTR [rax+0x1],al
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    BYTE PTR [rsi-0x51],ch
   14001102a:	add    BYTE PTR [rax+0x1],al
   14001102d:	add    BYTE PTR [rax],al
   14001102f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   140011033:	rex add DWORD PTR [rax],eax
   140011036:	add    BYTE PTR [rax],al
   140011038:	jp     0x140010fe9
   14001103a:	add    BYTE PTR [rax+0x1],al
   14001103d:	add    BYTE PTR [rax],al
   14001103f:	add    BYTE PTR [rcx],dh
   140011041:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   140011045:	jb     0x14001106f
   140011047:	sub    DWORD PTR [rax],eax
   140011049:	add    BYTE PTR [rax],al
   14001104b:	add    BYTE PTR [rbx+0x6c],al
   14001104e:	gs (bad) 
   140011050:	jb     0x140011052
   140011052:	add    BYTE PTR [rax],al
   140011054:	add    BYTE PTR [rax],al
   140011056:	add    BYTE PTR [rax],al
   140011058:	rex.XB jne 0x1400110ce
   14001105b:	je     0x1400110cc
   14001105d:	ins    DWORD PTR es:[rdi],dx
   14001105e:	and    BYTE PTR [rdx+0x75],al
   140011061:	jae    0x140011063
   140011063:	add    BYTE PTR [rax],al
   140011065:	add    BYTE PTR [rax],al
   140011067:	add    BYTE PTR [rcx+0x44],dl
   14001106a:	rex.X jne 0x1400110e0
   14001106d:	push   rsi
   14001106e:	imul   esp,DWORD PTR [rbp+0x77],0x7265
	...
   14001107d:	add    BYTE PTR [rax],al
   14001107f:	add    BYTE PTR [rbx+riz*2],bh
   140011082:	outs   dx,BYTE PTR gs:[rsi]
   140011084:	je     0x1400110eb
   140011086:	jb     0x1400110c6
   140011088:	cmp    al,0x69
   14001108a:	ins    DWORD PTR es:[rdi],dx
   14001108b:	and    BYTE PTR [ebx+0x72],dh
   14001108f:	movsxd edi,DWORD PTR [rip+0x712f3a22]        # 0x1b1304ab7
   140011095:	je     0x1400110c4
   140011097:	jo     0x14001110b
   140011099:	outs   dx,DWORD PTR ds:[rsi]
   14001109a:	push   0x65
   14001109c:	movsxd esi,DWORD PTR [rsi+rbp*1+0x6f]
   1400110a0:	jb     0x140011109
   1400110a2:	(bad)  
   1400110a3:	jno    0x140011109
   1400110a5:	(bad)  
   1400110a6:	jne    0x14001111b
   1400110a8:	jbe    0x140011113
   1400110aa:	gs ja  0x140011112
   1400110ad:	jb     0x1400110de
   1400110af:	imul   ebp,DWORD PTR [rbp+0x61],0x2f736567
   1400110b6:	jno    0x14001111c
   1400110b8:	(bad)  
   1400110b9:	jne    0x14001112e
   1400110bb:	jbe    0x140011126
   1400110bd:	gs ja  0x140011125
   1400110c0:	jb     0x1400110ef
   1400110c2:	xor    DWORD PTR [rdx],esi
   1400110c4:	cmp    BYTE PTR [rsi],ch
   1400110c6:	jo     0x140011136
   1400110c8:	and    bh,BYTE PTR [esi]
   1400110cb:	cmp    al,0x68
   1400110cd:	xor    edi,DWORD PTR [rsi]
   1400110cf:	and    eax,0x682f3c31
   1400110d4:	xor    edi,DWORD PTR [rsi]
   1400110d6:	cmp    al,0x70
   1400110d8:	ds push rsi
   1400110da:	gs jb  0x140011150
   1400110dd:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c322520
   1400110e4:	(bad)  
   1400110e5:	jo     0x140011125
   1400110e7:	cmp    al,0x2f
   1400110e9:	movsxd esp,DWORD PTR [rbp+0x6e]
   1400110ec:	je     0x140011153
   1400110ee:	jb     0x14001112e
   1400110f0:	cmp    al,0x70
   1400110f2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400110f5:	jo     0x140011170
   1400110f7:	jb     0x140011162
   1400110f9:	addr32 push 0x43282074
   1400110ff:	sub    DWORD PTR [rax],esp
   140011101:	and    eax,0x68542033
   140011106:	and    BYTE PTR gs:[rcx+0x74],dl
   14001110a:	and    BYTE PTR [rbx+0x6f],al
   14001110d:	ins    DWORD PTR es:[rdi],dx
   14001110e:	jo     0x140011171
   140011110:	outs   dx,BYTE PTR ds:[rsi]
   140011111:	jns    0x140011133
   140011113:	rex.WR je 0x14001117a
   140011116:	cs cmp al,0x2f
   140011119:	jo     0x140011159
   14001111b:	add    BYTE PTR [rdx],dh
   14001111d:	xor    BYTE PTR [rcx],dh
   14001111f:	add    BYTE PTR ss:[rax],al
   140011122:	add    BYTE PTR [rax],al
   140011124:	add    BYTE PTR [rax],al
   140011126:	add    BYTE PTR [rax],al
   140011128:	rex.R sub eax,0x20737542
   14001112e:	push   rsi
   14001112f:	imul   esp,DWORD PTR [rbp+0x77],0x7265
   140011136:	add    BYTE PTR [rax],al
   140011138:	xor    eax,0x322e362e
   14001113d:	add    BYTE PTR [rax],al
   14001113f:	add    BYTE PTR [rdi+0x69],dl
   140011142:	outs   dx,BYTE PTR ds:[rsi]
   140011143:	outs   dx,DWORD PTR fs:[rsi]
   140011145:	ja     0x14001118e
   140011147:	outs   dx,DWORD PTR gs:[rsi]
   140011149:	ins    DWORD PTR es:[rdi],dx
   14001114a:	gs je  0x1400111bf
   14001114d:	jns    0x14001114f
   14001114f:	add    BYTE PTR [rbx+0x65],dl
   140011152:	jae    0x1400111c7
   140011154:	imul   ebp,DWORD PTR [rdi+0x6e],0x626154
   14001115b:	add    BYTE PTR [rax],al
   14001115d:	add    BYTE PTR [rax],al
   14001115f:	add    BYTE PTR [rbx+0x79],dl
   140011162:	jae    0x1400111d8
   140011164:	gs ins DWORD PTR es:[rdi],dx
   140011166:	push   rsp
   140011167:	(bad)  
   140011168:	(bad)  
   140011169:	add    BYTE PTR [rax],al
   14001116b:	add    BYTE PTR [rax],al
   14001116d:	add    BYTE PTR [rax],al
   14001116f:	add    BYTE PTR [rbx+0x79],dl
   140011172:	jae    0x1400111e8
   140011174:	gs ins DWORD PTR es:[rdi],dx
   140011176:	and    BYTE PTR [rdx+0x75],al
   140011179:	jae    0x14001117b
   14001117b:	add    BYTE PTR [rax],al
   14001117d:	add    BYTE PTR [rax],al
   14001117f:	add    BYTE PTR [rbx+0x65],dl
   140011182:	jae    0x1400111f7
   140011184:	imul   ebp,DWORD PTR [rdi+0x6e],0x73754220
   14001118b:	add    BYTE PTR [rax],al
   14001118d:	add    BYTE PTR [rax],al
   14001118f:	add    al,cl
   140011191:	(bad)  
   140011192:	add    DWORD PTR [rax+0x1],eax
   140011195:	add    BYTE PTR [rax],al
   140011197:	add    BYTE PTR [rax-0x60],ah
   14001119a:	add    BYTE PTR [rax+0x1],al
   14001119d:	add    BYTE PTR [rax],al
   14001119f:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   1400111a3:	rex add DWORD PTR [rax],eax
   1400111a6:	add    BYTE PTR [rax],al
   1400111a8:	(bad)  
   1400111a9:	scas   eax,DWORD PTR es:[rdi]
   1400111aa:	add    BYTE PTR [rax+0x1],al
   1400111ad:	add    BYTE PTR [rax],al
   1400111af:	add    BYTE PTR [rax-0x51],ch
   1400111b2:	add    BYTE PTR [rax+0x1],al
   1400111b5:	add    BYTE PTR [rax],al
   1400111b7:	add    BYTE PTR [rsi-0x51],ch
   1400111ba:	add    BYTE PTR [rax+0x1],al
   1400111bd:	add    BYTE PTR [rax],al
   1400111bf:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   1400111c3:	rex add DWORD PTR [rax],eax
   1400111c6:	add    BYTE PTR [rax],al
   1400111c8:	jp     0x140011179
   1400111ca:	add    BYTE PTR [rax+0x1],al
   1400111cd:	add    BYTE PTR [rax],al
   1400111cf:	add    BYTE PTR [rax],bh
   1400111d1:	(bad)  
   1400111d2:	add    DWORD PTR [rax+0x1],eax
   1400111d5:	add    BYTE PTR [rax],al
   1400111d7:	add    ah,dl
   1400111d9:	mov    ch,0x0
   1400111db:	rex add DWORD PTR [rax],eax
   1400111de:	add    BYTE PTR [rax],al
   1400111e0:	fidiv  DWORD PTR [rbp+0x14000]
   1400111e6:	add    BYTE PTR [rax],al
   1400111e8:	loopne 0x14001119f
   1400111ea:	add    BYTE PTR [rax+0x1],al
   1400111ed:	add    BYTE PTR [rax],al
   1400111ef:	add    BYTE PTR [rax],ah
   1400111f1:	movabs al,ds:0xb5e6000000014000
   1400111fa:	add    BYTE PTR [rax+0x1],al
   1400111fd:	add    BYTE PTR [rax],al
   1400111ff:	add    BYTE PTR [rsi+rsi*4],dh
   140011202:	add    BYTE PTR [rax+0x1],al
   140011205:	add    BYTE PTR [rax],al
   140011207:	add    BYTE PTR [rdx],bh
   140011209:	mov    dh,0x0
   14001120b:	rex add DWORD PTR [rax],eax
   14001120e:	add    BYTE PTR [rax],al
   140011210:	mov    sil,0x0
   140011213:	rex add DWORD PTR [rax],eax
   140011216:	add    BYTE PTR [rax],al
   140011218:	rex.RX mov sil,0x0
   14001121b:	rex add DWORD PTR [rax],eax
   14001121e:	add    BYTE PTR [rax],al
   140011220:	rex.WR mov sil,0x0
   140011223:	rex add DWORD PTR [rax],eax
   140011226:	add    BYTE PTR [rax],al
   140011228:	push   rdx
   140011229:	mov    dh,0x0
   14001122b:	rex add DWORD PTR [rax],eax
   14001122e:	add    BYTE PTR [rax],al
   140011230:	nop
   140011231:	scas   al,BYTE PTR es:[rdi]
   140011232:	add    BYTE PTR [rax+0x1],al
   140011235:	add    BYTE PTR [rax],al
   140011237:	add    ah,ch
   140011239:	mov    ch,0x0
   14001123b:	rex add DWORD PTR [rax],eax
   14001123e:	add    BYTE PTR [rax],al
   140011240:	repnz mov ch,0x0
   140011243:	rex add DWORD PTR [rax],eax
   140011246:	add    BYTE PTR [rax],al
   140011248:	clc    
   140011249:	mov    ch,0x0
   14001124b:	rex add DWORD PTR [rax],eax
   14001124e:	add    BYTE PTR [rax],al
   140011250:	(bad)  
   140011251:	mov    ch,0x0
   140011253:	rex add DWORD PTR [rax],eax
   140011256:	add    BYTE PTR [rax],al
   140011258:	scas   al,BYTE PTR es:[rdi]
   140011259:	scas   al,BYTE PTR es:[rdi]
   14001125a:	add    BYTE PTR [rax+0x1],al
   14001125d:	add    BYTE PTR [rax],al
   14001125f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   140011266:	add    BYTE PTR [rax],al
   140011268:	mov    edx,0x14000ae
   14001126d:	add    BYTE PTR [rax],al
   14001126f:	add    al,al
   140011271:	scas   al,BYTE PTR es:[rdi]
   140011272:	add    BYTE PTR [rax+0x1],al
   140011275:	add    BYTE PTR [rax],al
   140011277:	add    dh,al
   140011279:	scas   al,BYTE PTR es:[rdi]
   14001127a:	add    BYTE PTR [rax+0x1],al
   14001127d:	add    BYTE PTR [rax],al
   14001127f:	add    BYTE PTR [rsi+rsi*4],al
   140011282:	add    BYTE PTR [rax+0x1],al
   140011285:	add    BYTE PTR [rax],al
   140011287:	add    dl,dl
   140011289:	scas   al,BYTE PTR es:[rdi]
   14001128a:	add    BYTE PTR [rax+0x1],al
   14001128d:	add    BYTE PTR [rax],al
   14001128f:	add    al,bl
   140011291:	scas   al,BYTE PTR es:[rdi]
   140011292:	add    BYTE PTR [rax+0x1],al
   140011295:	add    BYTE PTR [rax],al
   140011297:	add    dh,bl
   140011299:	scas   al,BYTE PTR es:[rdi]
   14001129a:	add    BYTE PTR [rax+0x1],al
   14001129d:	add    BYTE PTR [rax],al
   14001129f:	add    ah,ah
   1400112a1:	scas   al,BYTE PTR es:[rdi]
   1400112a2:	add    BYTE PTR [rax+0x1],al
   1400112a5:	add    BYTE PTR [rax],al
   1400112a7:	add    dl,ch
   1400112a9:	scas   al,BYTE PTR es:[rdi]
   1400112aa:	add    BYTE PTR [rax+0x1],al
   1400112ad:	add    BYTE PTR [rax],al
   1400112af:	add    BYTE PTR [rdx],cl
   1400112b1:	mov    dh,0x0
   1400112b3:	rex add DWORD PTR [rax],eax
   1400112b6:	add    BYTE PTR [rax],al
   1400112b8:	imul   BYTE PTR [rsi+0x14000]
   1400112be:	add    BYTE PTR [rax],al
   1400112c0:	adc    BYTE PTR [rsi+0x14000],dh
   1400112c6:	add    BYTE PTR [rax],al
   1400112c8:	add    ch,BYTE PTR [rdi+0x14000]
   1400112ce:	add    BYTE PTR [rax],al
   1400112d0:	or     BYTE PTR [rdi+0x14000],ch
   1400112d6:	add    BYTE PTR [rax],al
   1400112d8:	(bad)  
   1400112d9:	scas   eax,DWORD PTR es:[rdi]
   1400112da:	add    BYTE PTR [rax+0x1],al
   1400112dd:	add    BYTE PTR [rax],al
   1400112df:	add    BYTE PTR [rdi+rbp*4],dl
   1400112e2:	add    BYTE PTR [rax+0x1],al
   1400112e5:	add    BYTE PTR [rax],al
   1400112e7:	add    BYTE PTR [rdx],bl
   1400112e9:	scas   eax,DWORD PTR es:[rdi]
   1400112ea:	add    BYTE PTR [rax+0x1],al
   1400112ed:	add    BYTE PTR [rax],al
   1400112ef:	add    BYTE PTR [rax],ah
   1400112f1:	scas   eax,DWORD PTR es:[rdi]
   1400112f2:	add    BYTE PTR [rax+0x1],al
   1400112f5:	add    BYTE PTR [rax],al
   1400112f7:	add    BYTE PTR [rsi],ah
   1400112f9:	scas   eax,DWORD PTR es:[rdi]
   1400112fa:	add    BYTE PTR [rax+0x1],al
   1400112fd:	add    BYTE PTR [rax],al
   1400112ff:	add    BYTE PTR [rdi+rbp*4],ch
   140011302:	add    BYTE PTR [rax+0x1],al
   140011305:	add    BYTE PTR [rax],al
   140011307:	add    BYTE PTR [rsi],dl
   140011309:	mov    dh,0x0
   14001130b:	rex add DWORD PTR [rax],eax
   14001130e:	add    BYTE PTR [rax],al
   140011310:	cmp    BYTE PTR [rdi+0x14000],ch
   140011316:	add    BYTE PTR [rax],al
   140011318:	ds scas eax,DWORD PTR es:[rdi]
   14001131a:	add    BYTE PTR [rax+0x1],al
   14001131d:	add    BYTE PTR [rax],al
   14001131f:	add    BYTE PTR [rsi+rsi*4],bl
   140011322:	add    BYTE PTR [rax+0x1],al
   140011325:	add    BYTE PTR [rax],al
   140011327:	add    BYTE PTR [rdx-0x51],cl
   14001132a:	add    BYTE PTR [rax+0x1],al
   14001132d:	add    BYTE PTR [rax],al
   14001132f:	add    BYTE PTR [rax-0x51],dl
   140011332:	add    BYTE PTR [rax+0x1],al
   140011335:	add    BYTE PTR [rax],al
   140011337:	add    BYTE PTR [rsi-0x51],dl
   14001133a:	add    BYTE PTR [rax+0x1],al
   14001133d:	add    BYTE PTR [rax],al
   14001133f:	add    BYTE PTR [rdx],ah
   140011341:	mov    dh,0x0
   140011343:	rex add DWORD PTR [rax],eax
   140011346:	add    BYTE PTR [rax],al
   140011348:	sub    BYTE PTR [rsi+0x14000],dh
   14001134e:	add    BYTE PTR [rax],al
   140011350:	xor    DWORD PTR [rcx+0x62],esp
   140011353:	outs   dx,DWORD PTR ds:[rsi]
   140011354:	jne    0x1400113ca
   140011356:	push   rcx
   140011357:	je     0x140011381
   140011359:	sub    DWORD PTR [rax],eax
   14001135b:	add    BYTE PTR [rax],al
   14001135d:	add    BYTE PTR [rax],al
   14001135f:	add    BYTE PTR [rcx+0x62],al
   140011362:	outs   dx,DWORD PTR ds:[rsi]
   140011363:	jne    0x1400113d9
   140011365:	and    BYTE PTR [rsi],ah
   140011367:	push   rcx
   140011368:	je     0x14001136a
   14001136a:	add    BYTE PTR [rax],al
   14001136c:	add    BYTE PTR [rax],al
   14001136e:	add    BYTE PTR [rax],al
   140011370:	xor    DWORD PTR [rcx+0x62],esp
   140011373:	outs   dx,DWORD PTR ds:[rsi]
   140011374:	jne    0x1400113ea
   140011376:	sub    BYTE PTR [rcx],ch
   140011378:	add    BYTE PTR [rax],al
   14001137a:	add    BYTE PTR [rax],al
   14001137c:	es rex.B (bad) 
   14001137f:	outs   dx,DWORD PTR ds:[rsi]
   140011380:	jne    0x1400113f6
   140011382:	add    BYTE PTR [rax],al
   140011384:	es rex.W
   140011386:	gs ins BYTE PTR es:[rdi],dx
   140011388:	jo     0x14001138a
   14001138a:	add    BYTE PTR [rax],al
   14001138c:	add    BYTE PTR [rax],al
   14001138e:	add    BYTE PTR [rax],al
   140011390:	xor    DWORD PTR [rbx+0x6c],esp
   140011393:	outs   dx,DWORD PTR ds:[rsi]
   140011394:	jae    0x1400113fb
   140011396:	sub    BYTE PTR [rcx],ch
   140011398:	add    BYTE PTR [rax],al
   14001139a:	add    BYTE PTR [rax],al
   14001139c:	es push rcx
   14001139e:	jne    0x140011409
   1400113a0:	je     0x1400113a2
   1400113a2:	add    BYTE PTR [rax],al
   1400113a4:	imul   r13d,DWORD PTR es:[rbp+r12*2+0x0],0x0
   1400113ae:	add    BYTE PTR [rax],al
   1400113b0:	adc    BYTE PTR [rdi],bh
   1400113b2:	add    DWORD PTR [rax+0x1],eax
   1400113b5:	add    BYTE PTR [rax],al
   1400113b7:	add    BYTE PTR [rax-0x60],dl
   1400113ba:	add    BYTE PTR [rax+0x1],al
   1400113bd:	add    BYTE PTR [rax],al
   1400113bf:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   1400113c3:	rex add DWORD PTR [rax],eax
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	(bad)  
   1400113c9:	scas   eax,DWORD PTR es:[rdi]
   1400113ca:	add    BYTE PTR [rax+0x1],al
   1400113cd:	add    BYTE PTR [rax],al
   1400113cf:	add    BYTE PTR [rax-0x51],ch
   1400113d2:	add    BYTE PTR [rax+0x1],al
   1400113d5:	add    BYTE PTR [rax],al
   1400113d7:	add    BYTE PTR [rsi-0x51],ch
   1400113da:	add    BYTE PTR [rax+0x1],al
   1400113dd:	add    BYTE PTR [rax],al
   1400113df:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   1400113e3:	rex add DWORD PTR [rax],eax
   1400113e6:	add    BYTE PTR [rax],al
   1400113e8:	jp     0x140011399
   1400113ea:	add    BYTE PTR [rax+0x1],al
   1400113ed:	add    BYTE PTR [rax],al
   1400113ef:	add    BYTE PTR [rax],dl
   1400113f1:	add    DWORD PTR ds:[rax+0x1],eax
   1400113f5:	add    BYTE PTR [rax],al
   1400113f7:	add    BYTE PTR [rax-0x52],dh
   1400113fa:	add    BYTE PTR [rax+0x1],al
   1400113fd:	add    BYTE PTR [rax],al
   1400113ff:	add    BYTE PTR [rax+0x14000ad],dh
   140011405:	add    BYTE PTR [rax],al
   140011407:	add    BYTE PTR [rax],al
   140011409:	scas   al,BYTE PTR es:[rdi]
   14001140a:	add    BYTE PTR [rax+0x1],al
   14001140d:	add    BYTE PTR [rax],al
   14001140f:	add    BYTE PTR [rax+0x14000a0],dh
   140011415:	add    BYTE PTR [rax],al
   140011417:	add    dl,al
   140011419:	mov    ch,0x0
   14001141b:	rex add DWORD PTR [rax],eax
   14001141e:	add    BYTE PTR [rax],al
   140011420:	xor    al,0xb6
   140011422:	add    BYTE PTR [rax+0x1],al
   140011425:	add    BYTE PTR [rax],al
   140011427:	add    BYTE PTR [rdx],bh
   140011429:	mov    dh,0x0
   14001142b:	rex add DWORD PTR [rax],eax
   14001142e:	add    BYTE PTR [rax],al
   140011430:	mov    sil,0x0
   140011433:	rex add DWORD PTR [rax],eax
   140011436:	add    BYTE PTR [rax],al
   140011438:	rex.RX mov sil,0x0
   14001143b:	rex add DWORD PTR [rax],eax
   14001143e:	add    BYTE PTR [rax],al
   140011440:	rex.WR mov sil,0x0
   140011443:	rex add DWORD PTR [rax],eax
   140011446:	add    BYTE PTR [rax],al
   140011448:	push   rdx
   140011449:	mov    dh,0x0
   14001144b:	rex add DWORD PTR [rax],eax
   14001144e:	add    BYTE PTR [rax],al
   140011450:	nop
   140011451:	scas   al,BYTE PTR es:[rdi]
   140011452:	add    BYTE PTR [rax+0x1],al
   140011455:	add    BYTE PTR [rax],al
   140011457:	add    BYTE PTR [rsi+0x14000ae],dl
   14001145d:	add    BYTE PTR [rax],al
   14001145f:	add    BYTE PTR [rsi+rbp*4+0x14000],bl
   140011466:	add    BYTE PTR [rax],al
   140011468:	movabs ds:0xa8000000014000ae,al
   140011471:	scas   al,BYTE PTR es:[rdi]
   140011472:	add    BYTE PTR [rax+0x1],al
   140011475:	add    BYTE PTR [rax],al
   140011477:	add    BYTE PTR [rsi+0x14000ae],ch
   14001147d:	add    BYTE PTR [rax],al
   14001147f:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   140011486:	add    BYTE PTR [rax],al
   140011488:	mov    edx,0x14000ae
   14001148d:	add    BYTE PTR [rax],al
   14001148f:	add    al,al
   140011491:	scas   al,BYTE PTR es:[rdi]
   140011492:	add    BYTE PTR [rax+0x1],al
   140011495:	add    BYTE PTR [rax],al
   140011497:	add    dh,al
   140011499:	scas   al,BYTE PTR es:[rdi]
   14001149a:	add    BYTE PTR [rax+0x1],al
   14001149d:	add    BYTE PTR [rax],al
   14001149f:	add    ah,cl
   1400114a1:	scas   al,BYTE PTR es:[rdi]
   1400114a2:	add    BYTE PTR [rax+0x1],al
   1400114a5:	add    BYTE PTR [rax],al
   1400114a7:	add    dl,dl
   1400114a9:	scas   al,BYTE PTR es:[rdi]
   1400114aa:	add    BYTE PTR [rax+0x1],al
   1400114ad:	add    BYTE PTR [rax],al
   1400114af:	add    al,bl
   1400114b1:	scas   al,BYTE PTR es:[rdi]
   1400114b2:	add    BYTE PTR [rax+0x1],al
   1400114b5:	add    BYTE PTR [rax],al
   1400114b7:	add    dh,bl
   1400114b9:	scas   al,BYTE PTR es:[rdi]
   1400114ba:	add    BYTE PTR [rax+0x1],al
   1400114bd:	add    BYTE PTR [rax],al
   1400114bf:	add    ah,ah
   1400114c1:	scas   al,BYTE PTR es:[rdi]
   1400114c2:	add    BYTE PTR [rax+0x1],al
   1400114c5:	add    BYTE PTR [rax],al
   1400114c7:	add    dl,ch
   1400114c9:	scas   al,BYTE PTR es:[rdi]
   1400114ca:	add    BYTE PTR [rax+0x1],al
   1400114cd:	add    BYTE PTR [rax],al
   1400114cf:	add    al,dh
   1400114d1:	scas   al,BYTE PTR es:[rdi]
   1400114d2:	add    BYTE PTR [rax+0x1],al
   1400114d5:	add    BYTE PTR [rax],al
   1400114d7:	add    dh,dh
   1400114d9:	scas   al,BYTE PTR es:[rdi]
   1400114da:	add    BYTE PTR [rax+0x1],al
   1400114dd:	add    BYTE PTR [rax],al
   1400114df:	add    ah,bh
   1400114e1:	scas   al,BYTE PTR es:[rdi]
   1400114e2:	add    BYTE PTR [rax+0x1],al
   1400114e5:	add    BYTE PTR [rax],al
   1400114e7:	add    BYTE PTR [rdx],al
   1400114e9:	scas   eax,DWORD PTR es:[rdi]
   1400114ea:	add    BYTE PTR [rax+0x1],al
   1400114ed:	add    BYTE PTR [rax],al
   1400114ef:	add    al,cl
   1400114f1:	mov    ch,0x0
   1400114f3:	rex add DWORD PTR [rax],eax
   1400114f6:	add    BYTE PTR [rax],al
   1400114f8:	(bad)  
   1400114f9:	scas   eax,DWORD PTR es:[rdi]
   1400114fa:	add    BYTE PTR [rax+0x1],al
   1400114fd:	add    BYTE PTR [rax],al
   1400114ff:	add    BYTE PTR [rdi+rbp*4],dl
   140011502:	add    BYTE PTR [rax+0x1],al
   140011505:	add    BYTE PTR [rax],al
   140011507:	add    BYTE PTR [rdx],bl
   140011509:	scas   eax,DWORD PTR es:[rdi]
   14001150a:	add    BYTE PTR [rax+0x1],al
   14001150d:	add    BYTE PTR [rax],al
   14001150f:	add    BYTE PTR [rax],ah
   140011511:	scas   eax,DWORD PTR es:[rdi]
   140011512:	add    BYTE PTR [rax+0x1],al
   140011515:	add    BYTE PTR [rax],al
   140011517:	add    BYTE PTR [rsi],ah
   140011519:	scas   eax,DWORD PTR es:[rdi]
   14001151a:	add    BYTE PTR [rax+0x1],al
   14001151d:	add    BYTE PTR [rax],al
   14001151f:	add    BYTE PTR [rdi+rbp*4],ch
   140011522:	add    BYTE PTR [rax+0x1],al
   140011525:	add    BYTE PTR [rax],al
   140011527:	add    BYTE PTR [rdx],dh
   140011529:	scas   eax,DWORD PTR es:[rdi]
   14001152a:	add    BYTE PTR [rax+0x1],al
   14001152d:	add    BYTE PTR [rax],al
   14001152f:	add    BYTE PTR [rax],bh
   140011531:	scas   eax,DWORD PTR es:[rdi]
   140011532:	add    BYTE PTR [rax+0x1],al
   140011535:	add    BYTE PTR [rax],al
   140011537:	add    BYTE PTR [rsi],bh
   140011539:	scas   eax,DWORD PTR es:[rdi]
   14001153a:	add    BYTE PTR [rax+0x1],al
   14001153d:	add    BYTE PTR [rax],al
   14001153f:	add    BYTE PTR [rdi+rbp*4+0x0],al
   140011543:	rex add DWORD PTR [rax],eax
   140011546:	add    BYTE PTR [rax],al
   140011548:	rex.WX scas rax,QWORD PTR es:[rdi]
   14001154a:	add    BYTE PTR [rax+0x1],al
   14001154d:	add    BYTE PTR [rax],al
   14001154f:	add    BYTE PTR [rax-0x51],dl
   140011552:	add    BYTE PTR [rax+0x1],al
   140011555:	add    BYTE PTR [rax],al
   140011557:	add    BYTE PTR [rsi-0x51],dl
   14001155a:	add    BYTE PTR [rax+0x1],al
   14001155d:	add    BYTE PTR [rax],al
   14001155f:	add    dh,cl
   140011561:	mov    ch,0x0
   140011563:	rex add DWORD PTR [rax],eax
   140011566:	add    BYTE PTR [rax],al
   140011568:	sub    eax,0x7375622d
   14001156d:	add    BYTE PTR [rax],al
   14001156f:	add    BYTE PTR [rdx],bh
   140011571:	(bad)  
   140011572:	jno    0x1400115e8
   140011574:	sub    eax,0x6a6f7270
   140011579:	movsxd esi,DWORD PTR gs:[rsi+rbp*1+0x6f]
   14001157e:	jb     0x1400115e7
   140011580:	(bad)  
   140011581:	jno    0x1400115e7
   140011583:	(bad)  
   140011584:	jne    0x1400115f9
   140011586:	jbe    0x1400115f1
   140011588:	gs ja  0x1400115f0
   14001158b:	jb     0x1400115bc
   14001158d:	imul   ebp,DWORD PTR [rbp+0x61],0x2f736567
   140011594:	jno    0x1400115fa
   140011596:	(bad)  
   140011597:	jne    0x14001160c
   140011599:	jbe    0x140011604
   14001159b:	gs ja  0x140011603
   14001159e:	jb     0x1400115ce
   1400115a0:	jo     0x140011610
   1400115a2:	add    BYTE PTR [eax],al
   1400115a5:	add    BYTE PTR [rax],al
   1400115a7:	add    BYTE PTR [rcx+0x74],dl
   1400115aa:	push   rax
   1400115ab:	jb     0x14001161c
   1400115ad:	push   0x65
   1400115af:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
	...
   1400115bf:	add    BYTE PTR [rax],al
   1400115c1:	add    BYTE PTR [rax],cl
   1400115c3:	xor    al,0x89
   1400115c5:	push   rax
   1400115c6:	rex.WRX
   1400115c7:	rex.RXB or eax,0xa1a0a
   1400115cd:	add    BYTE PTR [rax],al
   1400115cf:	or     eax,0x52444849
   1400115d4:	add    BYTE PTR [rax],al
   1400115d6:	add    BYTE PTR [rax-0x80000000],al
   1400115dc:	or     BYTE PTR [rbx],al
   1400115de:	add    BYTE PTR [rax],al
   1400115e0:	add    ah,dh
   1400115e2:	loopne 0x140011575
   1400115e4:	stc    
   1400115e5:	add    BYTE PTR [rax],al
   1400115e7:	add    ah,dl
   1400115e9:	push   rax
   1400115ea:	rex.WR push rsp
   1400115ec:	add    BYTE PTR [r8],r8b
   1400115ef:	add    bh,bh
   1400115f1:	(bad)  
   1400115f2:	(bad)  
   1400115f3:	(bad)  
   1400115f4:	(bad)  
   1400115f5:	(bad)  
   1400115f6:	(bad)  
   1400115f7:	(bad)  
   1400115f8:	(bad)  
   1400115f9:	(bad)  
   1400115fa:	(bad)  
   1400115fb:	inc    DWORD PTR [rax-0x33]
   1400115fe:	push   rdx
   1400115ff:	rex.X int 0x52
   140011602:	(bad)  
   140011603:	(bad)  
   140011604:	(bad)  
   140011605:	(bad)  
   140011606:	(bad)  
   140011607:	(bad)  
   140011608:	(bad)  
   140011609:	(bad)  
   14001160a:	inc    DWORD PTR [rip+0x5f06295e]        # 0x19f073f6e
   140011610:	sub    cl,BYTE PTR [rbx]
   140011612:	(bad)  
   140011613:	cs or  eax,0x66123063
   140011619:	xor    al,0x1b
   14001161b:	ins    BYTE PTR es:[rdi],dx
   14001161c:	cmp    ebx,DWORD PTR [rip+0x121e3d6d]        # 0x1521f538f
   140011622:	(bad)  
   140011623:	(bad)  
   140011624:	outs   dx,BYTE PTR ds:[rsi]
   140011625:	ds (bad) 
   140011627:	adc    esp,DWORD PTR [rdx+0x22]
   14001162a:	(bad)  
   14001162b:	and    ebx,DWORD PTR fs:[rax]
   14001162e:	gs and al,0x72
   140011631:	rex.R (bad) 
   140011633:	and    al,0x6d
   140011635:	xor    DWORD PTR [rsi],esp
   140011637:	outs   dx,BYTE PTR ds:[rsi]
   140011638:	xor    DWORD PTR [rsi],esp
   14001163a:	outs   dx,DWORD PTR ds:[rsi]
   14001163b:	xor    DWORD PTR [rdx+0x4f],edi
   14001163e:	xor    edi,DWORD PTR [rax+rdx*2+0x35]
   140011642:	jge    0x140011696
   140011644:	test   BYTE PTR [rbx+0x41],bl
   140011648:	int    0x52
   14001164a:	rex.X int 0x53
   14001164d:	rex.XB (bad) 
   14001164f:	push   rsp
   140011650:	rex.R (bad) 
   140011652:	push   rbp
   140011653:	rex.RB (bad) 
   140011655:	push   rbp
   140011656:	rex.RB (bad) 
   140011658:	push   rsi
   140011659:	rex.RX (bad) 
   14001165b:	push   rdi
   14001165c:	rex.RXB iret 
   14001165e:	push   rdi
   14001165f:	iretq  
   140011661:	pop    rax
   140011662:	iretq  
   140011664:	pop    rcx
   140011665:	rex.WB iretq 
   140011667:	pop    rcx
   140011668:	rex.WX iretq 
   14001166a:	pop    rdx
   14001166b:	rex.WXB rcr BYTE PTR [r11+0x4d],1
   14001166f:	rcr    BYTE PTR [rbp+0x4e],1
   140011672:	rcr    DWORD PTR [rsi+0x50],1
   140011675:	shl    DWORD PTR [rax+0x51],1
   140011678:	shl    DWORD PTR [rax+0x51],1
   14001167b:	shl    DWORD PTR [rcx+0x52],1
   14001167e:	shl    BYTE PTR [rdx+0x53],cl
   140011681:	shl    BYTE PTR [rdx+0x54],cl
   140011684:	xchg   QWORD PTR [r10+r10*8+0x63],rdx
   140011689:	push   rsp
   14001168a:	shl    BYTE PTR [rbp+rdx*2-0x2e],cl
   14001168e:	fs push rsi
   140011690:	shl    BYTE PTR [rbp+0x57],cl
   140011693:	shl    DWORD PTR [rsi+0x58],cl
   140011696:	xchg   esp,eax
   140011697:	jo     0x1400116f1
   140011699:	shl    DWORD PTR [rdi+0x5a],cl
   14001169c:	shr    DWORD PTR [rax+0x5a],cl
   14001169f:	(bad)  
   1400116a0:	imul   ebx,DWORD PTR [rbx-0x2c],0x8d545d6a
   1400116a7:	pop    rbp
   1400116a8:	(bad)  
   1400116a9:	imul   ebx,DWORD PTR [rsi-0x69],0x75
   1400116ad:	(bad)  
   1400116ae:	(bad)  
   1400116af:	outs   dx,BYTE PTR ds:[rsi]
   1400116b0:	(bad)  
   1400116b1:	(bad)  
   1400116b2:	outs   dx,DWORD PTR ds:[rsi]
   1400116b3:	(bad)  
   1400116b4:	(bad)  
   1400116b5:	jo     0x14001171a
   1400116b7:	fwait
   1400116b8:	jp     0x14001171d
   1400116ba:	(bad)  
   1400116bb:	jno    0x140011721
   1400116bd:	(bad)  
   1400116be:	jb     0x140011725
   1400116c0:	(bad)  
   1400116c1:	jae    0x140011729
   1400116c3:	xlat   BYTE PTR ds:[rbx]
   1400116c4:	je     0x14001172d
   1400116c6:	pop    rdi
   1400116c7:	xchg   esp,eax
   1400116c8:	xlat   BYTE PTR ds:[ebx]
   1400116ca:	jne    0x140011734
   1400116cc:	xlat   BYTE PTR ds:[rbx]
   1400116cd:	jne    0x140011737
   1400116cf:	xlat   BYTE PTR ds:[rbx]
   1400116d0:	jbe    0x14001173b
   1400116d2:	fdiv   DWORD PTR [rdi+0x6a]
   1400116d5:	fdiv   DWORD PTR [rdi+0x6b]
   1400116d8:	fdivr  DWORD PTR [rax+0x6b]
   1400116db:	fdivr  DWORD PTR [rcx+0x6c]
   1400116de:	fdivr  DWORD PTR [rcx+0x6d]
   1400116e1:	cwd    
   1400116e3:	ins    DWORD PTR es:[rdi],dx
   1400116e4:	fnstcw WORD PTR [rdx+0x6e]
   1400116e7:	addr32 cdq 
   1400116e9:	outs   dx,BYTE PTR ds:[rsi]
   1400116ea:	fnstcw WORD PTR [rbx+0x6f]
   1400116ed:	fnstcw WORD PTR [rax+rsi*2+0x68]
   1400116f1:	fwait
   1400116f2:	jo     0x1400116cd
   1400116f4:	jge    0x140011767
   1400116f6:	imul   ebx,DWORD PTR [rbx+0x717dda71],0xda727eda
   140011700:	jg     0x140011776
   140011702:	fiadd  DWORD PTR [rax+0x7a84db77]
   140011708:	fadd   QWORD PTR [rsi+0x7da3757c]
   14001170e:	fisttp QWORD PTR [rcx-0x7f752282]
   140011714:	fisttp QWORD PTR [rbx-0x7c73217f]
   14001171a:	scas   eax,DWORD PTR es:[rdi]
   14001171b:	xchg   ebp,eax
   14001171c:	sbb    esi,0xffffff8e
   14001171f:	test   BYTE PTR [rsi-0x57],bh
   140011722:	test   bh,bl
   140011724:	pop    QWORD PTR [rsi-0x20796f21]
   14001172a:	xchg   ecx,eax
   14001172b:	xchg   edi,ebx
   14001172d:	xchg   edx,eax
   14001172e:	mov    al,ah
   140011730:	xchg   edx,eax
   140011731:	mov    DWORD PTR [rdx-0x6c1f7654],eax
   140011737:	mov    eax,esp
   140011739:	xchg   esp,eax
   14001173a:	mov    WORD PTR [rsi-0x691e7352],es
   140011740:	mov    ecx,fs
   140011742:	xchg   edi,eax
   140011743:	mov    fs,ecx
   140011745:	cdq    
   140011746:	nop
   140011747:	loop   0x1400116e3
   140011749:	xchg   ecx,eax
   14001174a:	loop   0x1400116e7
   14001174c:	xchg   edx,eax
   14001174d:	mov    WORD PTR [rdx-0x6b631d6e],?
   140011753:	jrcxz  0x1400116f2
   140011755:	xchg   esp,eax
   140011756:	jrcxz  0x1400116f6
   140011758:	xchg   ebp,eax
   140011759:	jrcxz  0x1400116fa
   14001175b:	xchg   esi,eax
   14001175c:	nop
   14001175d:	mov    ch,0x96
   14001175f:	jrcxz  0x140011700
   140011761:	xchg   edi,eax
   140011762:	in     al,0xa0
   140011764:	cdq    
   140011765:	in     al,0xa2
   140011767:	(bad)  
   140011768:	xchg   esp,eax
   140011769:	mov    eax,0x9ba3e59a
   14001176e:	in     eax,0xa4
   140011770:	popf   
   140011771:	in     eax,0xa5
   140011773:	popf   
   140011774:	in     eax,0xa6
   140011776:	movabs al,ds:0xaae6a2aae6a1a9e6
   14001177f:	movabs ds:0xace7a4b1c4a4abe7,eax
   140011788:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011789:	(bad)  
   14001178a:	mov    bl,0xa6
   14001178c:	out    0xae,eax
   14001178e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001178f:	call   0xefe9bf42
   140011794:	test   al,0xe8
   140011796:	mov    al,0xa9
   140011798:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011799:	ret    0xe8a9
   14001179c:	mov    al,0xaa
   14001179e:	jmp    0xf2eac355
   1400117a3:	lods   al,BYTE PTR ds:[rsi]
   1400117a4:	jmp    0xf4eac45c
   1400117a9:	lods   eax,DWORD PTR ds:[rsi]
   1400117aa:	test   eax,0xb4e9adc5
   1400117af:	mov    cl,0xea
   1400117b1:	mov    eax,0xb3b8ebb2
   1400117b6:	scas   eax,DWORD PTR es:[rdi]
   1400117b7:	retf   0xebb3
   1400117ba:	mov    edx,0xb5bbebb4
   1400117bf:	in     al,dx
   1400117c0:	mov    esp,0xb8beecb7
   1400117c5:	mov    ah,0xcd
   1400117c7:	mov    eax,0xedb9bfec
   1400117cc:	mov    edi,0xbbc1edba
   1400117d1:	in     eax,dx
   1400117d2:	sar    DWORD PTR [rsi-0x11403b12],0xc5
   1400117d9:	shr    dh,0xc5
   1400117dc:	shr    bh,0xc6
   1400117df:	shr    edi,0xc7
   1400117e2:	ret    0xc7ef
   1400117e5:	ret    
   1400117e6:	fmul   st,st(4)
   1400117e8:	ret    
   1400117e9:	out    dx,eax
   1400117ea:	leave  
   1400117eb:	(bad)
   1400117ef:	lock leave 
   1400117f1:	(bad)  
   1400117f2:	fcmovne st,st(7)
   1400117f4:	enter  0xd9c5,0xc9
   1400117f8:	icebp  
   1400117f9:	(bad)  
   1400117fa:	int3   
   1400117fb:	repnz ror ebp,1
   1400117fe:	repnz ror bh,cl
   140011801:	repnz rcl eax,cl
   140011804:	(bad)  
   140011805:	(bad)  
   140011807:	iret   
   140011808:	(bad)  
   14001180a:	repz (bad) 
   14001180c:	shl    bl,cl
   14001180e:	(bad)  
   14001180f:	shl    ebx,cl
   140011811:	xlat   BYTE PTR ds:[rbx]
   140011812:	(bad)  
   140011813:	jrcxz  0x1400117ef
   140011815:	(bad)  
   140011816:	in     al,0xdb
   140011818:	(bad)  
   140011819:	hlt    
   14001181a:	fcom   st(5)
   14001181c:	hlt    
   14001181d:	(bad)  
   14001181f:	hlt    
   140011820:	fcmovbe st,st(7)
   140011822:	(bad)  
   140011823:	jrcxz  0x1400117fd
   140011825:	(bad)  
   140011826:	in     al,0xd8
   140011828:	out    0xdd,al
   14001182a:	fdiv   st,st(5)
   14001182c:	fcmovnu st,st(0)
   14001182e:	cmc    
   14001182f:	(bad)  
   140011831:	out    0xde,al
   140011833:	fcmovu st,st(0)
   140011835:	in     eax,0xda
   140011837:	cmc    
   140011838:	fstp   st(2)
   14001183a:	cmc    
   14001183b:	(bad)  
   14001183d:	neg    dh
   14001183f:	fdivr  st(6),st
   140011841:	(bad)  
   140011843:	mul    al
   140011845:	fdivrp st(6),st
   140011847:	loope  0x140011828
   140011849:	(bad)  
   14001184a:	jrcxz  0x14001182c
   14001184c:	mul    ebx
   14001184e:	loope  0x140011847
   140011850:	in     al,0xe2
   140011852:	loopne 0x14001183f
   140011854:	loop   0x14001184d
   140011856:	in     eax,0xe3
   140011858:	clc    
   140011859:	out    0xe4,al
   14001185b:	clc    
   14001185c:	out    0xe5,eax
   14001185e:	jrcxz  0x14001184c
   140011860:	in     eax,0xf8
   140011862:	out    0xe6,eax
   140011864:	clc    
   140011865:	call   0x127eb1250
   14001186a:	stc    
   14001186b:	jmp    0x12aed1259
   140011870:	cli    
   140011871:	in     al,dx
   140011872:	in     al,dx
   140011873:	jmp    0x140011866
   140011875:	in     al,dx
   140011876:	cli    
   140011877:	in     eax,dx
   140011878:	in     eax,dx
   140011879:	in     al,dx
   14001187a:	repz in eax,dx
   14001187c:	cli    
   14001187d:	out    dx,eax
   14001187e:	out    dx,al
   14001187f:	in     eax,dx
   140011880:	repz out dx,al
   140011882:	cli    
   140011883:	out    dx,eax
   140011884:	out    dx,eax
   140011885:	sti    
   140011886:	lock out dx,eax
   140011888:	sti    
   140011889:	icebp  
   14001188a:	icebp  
   14001188b:	lock cmc 
   14001188d:	icebp  
   14001188e:	div    bl
   140011890:	icebp  
   140011891:	sti    
   140011892:	repnz repnz sti 
   140011895:	repz repnz cld 
   140011898:	repz hlt 
   14001189a:	hlt    
   14001189b:	clc    
   14001189c:	cmc    
   14001189d:	cld    
   14001189e:	cmc    
   14001189f:	cmc    
   1400118a0:	cld    
   1400118a1:	div    dh
   1400118a3:	std    
   1400118a4:	div    edi
   1400118a6:	idiv   ecx
   1400118a8:	idiv   ebp
   1400118aa:	clc    
   1400118ab:	clc    
   1400118ac:	std    
   1400118ad:	clc    
   1400118ae:	clc    
   1400118af:	std    
   1400118b0:	stc    
   1400118b1:	stc    
   1400118b2:	std    
   1400118b3:	cli    
   1400118b4:	cli    
   1400118b5:	(bad)  
   1400118b6:	cli    
   1400118b7:	sti    
   1400118b8:	cli    
   1400118b9:	cld    
   1400118ba:	sti    
   1400118bb:	(bad)  
   1400118bc:	sti    
   1400118bd:	sti    
   1400118be:	(bad)  
   1400118bf:	cld    
   1400118c0:	cld    
   1400118c1:	std    
   1400118c2:	cld    
   1400118c3:	cld    
   1400118c4:	(bad)  
   1400118c5:	cld    
   1400118c6:	(bad)  
   1400118c7:	(bad)  
   1400118c8:	(bad)  
   1400118c9:	(bad)  
   1400118ca:	(bad)  
   1400118cb:	(bad)  
   1400118cc:	(bad)  
   1400118cd:	(bad)  
   1400118ce:	call   FWORD PTR [rbx+0x2a]
   1400118d1:	(bad)  
   1400118d2:	xchg   ebp,eax
   1400118d3:	add    BYTE PTR [rax],al
   1400118d5:	add    BYTE PTR [rdx],cl
   1400118d7:	je     0x14001192b
   1400118d9:	rex.WRX push rbx
   1400118db:	add    BYTE PTR [rip+0x7f191816],dl        # 0x1bf1a30f7
   1400118e1:	adc    dl,0xd3
   1400118e4:	xlat   BYTE PTR ds:[rbx]
   1400118e5:	cmc    
   1400118e6:	mov    edi,0xd057
   1400118eb:	add    al,0xf7
   1400118ed:	rex.WB
   1400118ee:	rex.R
   1400118ef:	push   r12
   1400118f1:	js     0x1400118cd
   1400118f3:	in     eax,dx
   1400118f4:	cwde   
   1400118f5:	addr32 (bad) 
   1400118f7:	adc    al,0x45
   1400118f9:	adc    al,0x80
   1400118fb:	xlat   BYTE PTR ds:[rbx]
   1400118fc:	add    BYTE PTR [rdx+0x7678a27],cl
   140011902:	cmc    
   140011903:	fisttp QWORD PTR [rcx+0x10]
   140011906:	rex.X
   140011907:	mov    r9b,BYTE PTR [rcx]
   14001190a:	and    BYTE PTR [rdx+0x9],ah
   14001190d:	add    DWORD PTR [rcx+0x22],edx
   140011910:	or     BYTE PTR [rdx],ch
   140011912:	(bad)  
   140011913:	movsxd r9d,DWORD PTR [rcx]
   140011916:	rex.WX xchg rbx,rax
   140011918:	(bad)  
   140011919:	add    al,0x1b
   14001191b:	push   rcx
   14001191c:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001191e:	pop    rcx
   14001191f:	push   rcx
   140011920:	rex
   140011921:	sub    DWORD PTR [r10],eax
   140011924:	movabs ds:0x6a442c0407603511,al
   14001192d:	or     al,0x9c
   14001192f:	es add al,0x81
   140011932:	sub    BYTE PTR [rax-0x30],ch
   140011935:	mov    rsi,rax
   140011938:	in     al,dx
   140011939:	jg     0x1400119b2
   14001193b:	test   ebp,0xcedceddd
   140011941:	in     eax,0x16
   140011943:	pushf  
   140011944:	ja     0x140011929
   140011946:	(bad)  
   140011947:	jge    0x1400119c8
   140011949:	jb     0x140011946
   14001194b:	fisub  WORD PTR [rsi+rdi*4+0x6f]
   14001194f:	addr32 jbe 0x1400119b9
   140011952:	out    0x4e,al
   140011954:	sar    DWORD PTR [rax+rsi*8-0x43d0f43e],cl
   14001195b:	lock ret 0x2f0b
   14001195f:	mov    esp,0x2f0bc2f0
   140011964:	mov    esp,0x38bea2f0
   140011969:	adc    DWORD PTR [rdi+rax*4-0x1957c196],esp
   140011970:	sub    DWORD PTR [rdx+0x3e],0xffffffa8
   140011974:	out    0x83,al
   140011976:	push   0x3e
   140011978:	test   al,0xe6
   14001197a:	sub    DWORD PTR [rdx+0x3e],0xffffffa8
   14001197e:	out    0x83,al
   140011980:	push   0x3e
   140011982:	test   al,0xe6
   140011984:	sub    DWORD PTR [rdx+0x3e],0xffffffa8
   140011988:	out    0xc3,al
   14001198a:	jg     0x14001196f
   14001198c:	ja     0x14001195d
   14001198e:	lahf   
   14001198f:	mov    edi,0xd7eca4b2
   140011994:	retf   0x86d0
   140011997:	ja     0x14001193f
   140011999:	out    0xa6,al
   14001199b:	ror    DWORD PTR [rax],cl
   14001199d:	(bad)  
   14001199e:	call   rdi
   1400119a0:	hlt    
   1400119a1:	(bad)  
   1400119a2:	ins    DWORD PTR es:[rdi],dx
   1400119a3:	mov    edx,0xddbd0e3d
   1400119a8:	(bad)  
   1400119a9:	test   eax,0xe80f2302
   1400119ae:	mov    ds,WORD PTR [rax-0x6f]
   1400119b1:	shl    DWORD PTR [rdi+0x199cf299],0x43
   1400119b8:	sub    BYTE PTR [rdx+rbx*2],al
   1400119bb:	sub    al,0xd2
   1400119bd:	rex.RB mov r9b,0x2f
   1400119c0:	xchg   DWORD PTR [rbx-0x4b],ebp
   1400119c3:	xlat   BYTE PTR ds:[rbx]
   1400119c4:	rex.WX
   1400119c5:	cs and eax,0xd12c0810
   1400119cb:	(bad)
   1400119ce:	popf   
   1400119cf:	sbb    al,0x81
   1400119d1:	mov    DWORD PTR [rdx-0x44],edi
   1400119d4:	sub    BYTE PTR [rbp+0x4b],cl
   1400119d7:	xchg   al,al
   1400119d9:	adc    eax,0xdd5c327f
   1400119de:	retf   0x3d71
   1400119e1:	cmp    eax,DWORD PTR [rsi]
   1400119e3:	sar    DWORD PTR [rdx+0x3ca735dd],cl
   1400119e9:	ins    BYTE PTR es:[rdi],dx
   1400119ea:	lock jl 0x140011a1f
   1400119ed:	add    al,0x16
   1400119ef:	xor    bl,al
   1400119f1:	ja     0x140011a30
   1400119f3:	movabs ds:0xa0ce1dcc5aa4c50f,eax
   1400119fc:	(bad)  
   1400119fd:	call   0x116b331fe
   140011a02:	mov    dh,0xb1
   140011a04:	addr32 repz (bad) 
   140011a07:	xor    BYTE PTR [rbx],bh
   140011a09:	popf   
   140011a0a:	pop    rsi
   140011a0b:	loopne 0x140011a36
   140011a0d:	and    al,0x55
   140011a0f:	ja     0x1400119f6
   140011a11:	shl    DWORD PTR [rbx+0x31],cl
   140011a14:	pop    rbp
   140011a15:	(bad)  
   140011a16:	and    BYTE PTR [rdi],dl
   140011a18:	sub    BYTE PTR [rsi-0x2e],al
   140011a1b:	fcomp  QWORD PTR [rax+0x9361774]
   140011a21:	std    
   140011a22:	test   eax,0x58e3da05
   140011a27:	xlat   BYTE PTR ds:[rbx]
   140011a28:	(bad)
   140011a2c:	movabs ds:0x6a2322fce7e6d3c0,eax
   140011a35:	lods   al,BYTE PTR ds:[rsi]
   140011a36:	jmp    0x1400119f5
   140011a38:	rex.RB sub al,0x5a
   140011a3b:	rex.WX adc dil,BYTE PTR [rax+0x1d5b3917]
   140011a42:	test   DWORD PTR [rcx+0x3f322858],esp
   140011a48:	iret   
   140011a49:	adc    bh,BYTE PTR [rdx+riz*4+0x4c0925ad]
   140011a50:	(bad)  
   140011a51:	out    dx,al
   140011a52:	pop    rsi
   140011a53:	jae    0x140011a69
   140011a55:	mov    edx,0x5a9ca162
   140011a5a:	(bad)  
   140011a5b:	xor    DWORD PTR [rsi+0x37],esi
   140011a5e:	(bad)  
   140011a5f:	pop    rcx
   140011a60:	rol    ebp,0xa0
   140011a63:	cs popf 
   140011a65:	pop    rax
   140011a66:	loopne 0x140011ac3
   140011a68:	in     al,dx
   140011a69:	scas   al,BYTE PTR es:[rdi]
   140011a6a:	(bad)  
   140011a6b:	mov    bl,0xb2
   140011a6d:	or     ch,BYTE PTR [rbx]
   140011a6f:	cmp    esp,eax
   140011a71:	add    bh,BYTE PTR [rdi-0x1de2889d]
   140011a77:	cs push rax
   140011a79:	out    0xf6,al
   140011a7b:	(bad)  
   140011a7c:	cmp    DWORD PTR [rsp+rax*1+0x3e],esp
   140011a80:	lods   eax,DWORD PTR ds:[rsi]
   140011a81:	(bad)  
   140011a82:	and    DWORD PTR [rsi],edx
   140011a84:	lods   eax,DWORD PTR ds:[rsi]
   140011a85:	in     al,0x8
   140011a87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011a88:	mov    dl,0xed
   140011a8a:	(bad)  
   140011a8b:	loopne 0x140011ab9
   140011a8d:	cmp    eax,0xc387a58b
   140011a92:	xlat   BYTE PTR ds:[rbx]
   140011a93:	push   rbp
   140011a94:	and    al,0xaf
   140011a96:	(bad)  
   140011a97:	pop    rbx
   140011a98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011a99:	push   rsp
   140011a9a:	or     BYTE PTR [rdx+0x7b],bh
   140011a9d:	adc    al,0x4b
   140011a9f:	add    eax,0x905d02b4
   140011aa4:	mov    dl,0x53
   140011aa6:	rcr    BYTE PTR [rbx+0x3e],1
   140011aa9:	xchg   esi,eax
   140011aaa:	sahf   
   140011aab:	movabs eax,ds:0x236f4166ca42c815
   140011ab4:	mov    al,0xf4
   140011ab6:	xor    ch,BYTE PTR [rbp-0x41adf1c0]
   140011abc:	adc    dh,ah
   140011abe:	xchg   esi,eax
   140011abf:	xchg   DWORD PTR [rbp-0x42fd4b87],esp
   140011ac5:	nop
   140011ac6:	mov    dl,0x51
   140011ac8:	rcr    bl,1
   140011aca:	add    esi,DWORD PTR [rcx]
   140011acc:	fwait
   140011acd:	add    al,0x8d
   140011acf:	rcl    ch,0xf1
   140011ad2:	push   rsi
   140011ad3:	(bad)  
   140011ad4:	adc    BYTE PTR [rcx+0x58],0x7a
   140011ad8:	test   DWORD PTR [rsi+0x20],edx
   140011adb:	adc    ebp,DWORD PTR [rcx]
   140011add:	(bad)  
   140011ade:	or     BYTE PTR [rdx+0x1b],bh
   140011ae1:	xchg   DWORD PTR [rbp-0x16fd4b67],esp
   140011ae7:	in     al,dx
   140011ae8:	add    BYTE PTR [rax+rbp*8],ch
   140011aeb:	lea    ebx,[rip+0xad0a715]        # 0x14ad1c206
   140011af1:	add    al,0xd9
   140011af3:	jno    0x140011b25
   140011af5:	(bad)  
   140011af6:	pop    rcx
   140011af7:	jp     0x140011b02
   140011af9:	rex.WXB movsxd rbp,DWORD PTR [r9+0x5]
   140011afd:	loopne 0x140011b26
   140011aff:	(bad)  
   140011b00:	je     0x140011b75
   140011b02:	push   rsi
   140011b03:	xchg   esi,eax
   140011b04:	(bad)  
   140011b05:	and    eax,0x6d805897
   140011b0a:	cmp    DWORD PTR [rdi+0x3a],esi
   140011b0d:	sub    ebp,DWORD PTR [rbx-0x50]
   140011b10:	jb     0x140011b2f
   140011b12:	mov    cl,0x0
   140011b14:	cmp    edi,ebx
   140011b16:	rex.WRB je 0x140011b2d
   140011b19:	cmp    cl,BYTE PTR cs:[rax+0x2c469393]
   140011b20:	xor    BYTE PTR [rcx+0x1474117d],al
   140011b26:	outs   dx,BYTE PTR ds:[rsi]
   140011b27:	rol    dl,0xf7
   140011b2a:	ror    BYTE PTR [rbx],0x2c
   140011b2d:	xchg   edi,eax
   140011b2e:	sub    eax,0xe722b70
   140011b33:	cmp    BYTE PTR [rsi-0x43d3fd3e],bl
   140011b39:	adc    eax,0xaeb7ec49
   140011b3e:	(bad)  
   140011b3f:	xchg   esp,eax
   140011b40:	sub    eax,0xa08d5a90
   140011b45:	(bad)  
   140011b46:	xor    ecx,edi
   140011b48:	rex or esi,esp
   140011b4b:	xchg   DWORD PTR [rdi+0x32],eax
   140011b4e:	gs (bad) 
   140011b50:	cmc    
   140011b51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b52:	mov    dl,0x5
   140011b54:	movabs al,ds:0xe98b9d3e41c54110
   140011b5d:	fimul  DWORD PTR [rsi-0x7f01f36f]
   140011b63:	push   rax
   140011b64:	and    bl,BYTE PTR [rbp-0x20]
   140011b67:	ds jbe 0x140011b2e
   140011b6a:	(bad)  
   140011b6b:	retf   0x3365
   140011b6e:	lock jle 0x140011b5e
   140011b71:	push   rbx
   140011b72:	dec    BYTE PTR [rcx]
   140011b74:	ds xchg esp,eax
   140011b76:	ins    DWORD PTR es:[rdi],dx
   140011b77:	or     esi,DWORD PTR gs:[rax+rdi*8+0x6abc1991]
   140011b7f:	cmp    esp,ebp
   140011b81:	cmc    
   140011b82:	cs gs leave 
   140011b85:	add    ecx,edx
   140011b87:	fdivr  QWORD PTR [rsp+rcx*8+0x4c]
   140011b8b:	xchg   edx,eax
   140011b8c:	sub    eax,0xc7c26300
   140011b91:	int3   
   140011b92:	mov    dl,BYTE PTR [rdi]
   140011b94:	(bad)  
   140011b95:	pop    rsp
   140011b96:	ins    BYTE PTR es:[rdi],dx
   140011b97:	(bad)  
   140011b99:	enter  0xf642,0xcd
   140011b9d:	push   rax
   140011b9e:	pop    rdi
   140011b9f:	imul   si,di,0x4
   140011ba3:	retf   
   140011ba4:	ins    DWORD PTR es:[rdi],dx
   140011ba5:	pop    rsp
   140011ba6:	cmp    BYTE PTR [rdi-0x37],ch
   140011ba9:	mov    ah,BYTE PTR [rdx+0x2690135]
   140011baf:	or     edi,0x83dd676c
   140011bb5:	movabs eax,ds:0xbb5b276555e89a8a
   140011bbe:	sub    al,0xfe
   140011bc0:	push   rsp
   140011bc1:	fadd   QWORD PTR [rsi-0x66]
   140011bc4:	add    BYTE PTR [rsi+rdx*4-0x39],ah
   140011bc8:	stc    
   140011bc9:	jge    0x140011bad
   140011bcb:	push   rax
   140011bcc:	jg     0x140011b7c
   140011bce:	frstor [rsi]
   140011bd0:	scas   al,BYTE PTR es:[rdi]
   140011bd1:	cwde   
   140011bd2:	sub    DWORD PTR [rdi+0x0],ecx
   140011bd5:	mov    dl,0xcb
   140011bd7:	test   ah,bh
   140011bd9:	retf   0xf9db
   140011bdc:	div    WORD PTR [rbx-0x2b]
   140011be0:	sub    al,0x89
   140011be2:	add    dl,al
   140011be4:	(bad)  
   140011be5:	test   eax,0xbe46e048
   140011bea:	push   rcx
   140011beb:	cmp    edi,DWORD PTR [rsi+0x4]
   140011bee:	cli    
   140011bef:	retf   0x14
   140011bf2:	mov    eax,0x21c6b0b9
   140011bf7:	shr    BYTE PTR [rdi],0xfb
   140011bfa:	in     eax,dx
   140011bfb:	(bad)  
   140011bfc:	jmp    0x140011b9d
   140011bfe:	sbb    esp,DWORD PTR [rdi]
   140011c00:	(bad)  
   140011c01:	imul   BYTE PTR [rax+0x4af3786c]
   140011c07:	mov    ecx,0xe4970002
   140011c0c:	int    0x5a
   140011c0e:	mov    ch,0xf3
   140011c10:	mov    cl,dl
   140011c12:	jns    0x140011c61
   140011c14:	sub    DWORD PTR [rbx+0x4],ebx
   140011c17:	cmc    
   140011c18:	mov    ebx,0x7f5ffbf9
   140011c1d:	mov    edx,0x5ebb43ae
   140011c22:	add    eax,DWORD PTR [rdi]
   140011c24:	data16 addr32 rex.W jge 0x140011c36
   140011c29:	stc    
   140011c2a:	xor    BYTE PTR [rdi],dh
   140011c2c:	mov    edi,0x50762acc
   140011c31:	imul   ecx,ebp,0xfffffff3
   140011c34:	jge    0x140011bbc
   140011c36:	add    BYTE PTR [rax+0x5f],cl
   140011c39:	or     DWORD PTR [rbp-0xf],eax
   140011c3c:	cwde   
   140011c3d:	(bad)  
   140011c3e:	jae    0x140011c5e
   140011c40:	rex.R jle 0x140011c35
   140011c43:	add    al,0x82
   140011c45:	in     al,dx
   140011c46:	ja     0x140011be3
   140011c48:	fisubr DWORD PTR [rbx+0x39]
   140011c4b:	mov    esi,0x8c27af4f
   140011c50:	lea    sp,[rcx+rcx*1+0x14b61f40]
   140011c58:	scas   al,BYTE PTR es:[rdi]
   140011c59:	or     eax,0x409f9d8
   140011c5e:	adc    dh,bl
   140011c60:	fisttp QWORD PTR [rbx]
   140011c62:	rcr    BYTE PTR [rbx],0xac
   140011c65:	(bad)  [rcx]
   140011c67:	jbe    0x140011ce7
   140011c69:	cmp    eax,0xe0b80861
   140011c6e:	(bad)  
   140011c6f:	add    eax,0xffffffa5
   140011c72:	sti    
   140011c73:	fnstenv [rdi]
   140011c75:	xchg   esi,eax
   140011c76:	movabs al,ds:0x20c7f86e021be2b
   140011c7f:	xor    dh,dl
   140011c81:	(bad)  
   140011c82:	xchg   DWORD PTR [rsi],ebx
   140011c84:	imul   edx,DWORD PTR [rbp-0x3d499080],0x81649abf
   140011c8e:	shr    BYTE PTR [rdx-0x43],0x78
   140011c92:	js     0x140011cc4
   140011c94:	loope  0x140011c8e
   140011c96:	ror    DWORD PTR [rcx],cl
   140011c98:	rex test DWORD PTR [rcx-0x20],0x509fe62
   140011ca0:	and    ch,bl
   140011ca2:	outs   dx,DWORD PTR ds:[rsi]
   140011ca3:	push   rbx
   140011ca4:	lahf   
   140011ca5:	sub    eax,DWORD PTR [rcx+0x1a05aa86]
   140011cab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011cac:	push   rax
   140011cad:	or     BYTE PTR [rax+0x53],bl
   140011cb0:	jo     0x140011c38
   140011cb2:	add    ah,bl
   140011cb4:	in     al,0xc2
   140011cb6:	imul   ebp,DWORD PTR [rsi],0x3f
   140011cb9:	lahf   
   140011cba:	adc    edx,eax
   140011cbc:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140011cbe:	and    QWORD PTR [rax],rsp
   140011cc1:	cmp    BYTE PTR ss:[rbp-0x10],dh
   140011cc5:	(bad)  
   140011cc6:	es jns 0x140011d14
   140011cc9:	(bad)  
   140011cca:	push   rbx
   140011ccb:	movabs ds:0x3831c8018cdceb02,al
   140011cd4:	in     eax,dx
   140011cd5:	(bad)  
   140011cd7:	repnz (bad) 
   140011cd9:	sub    eax,0x97de702a
   140011cde:	mov    BYTE PTR cs:[rax],0xe4
   140011ce2:	sbb    ah,cl
   140011ce4:	mov    al,0xe0
   140011ce6:	pop    rdi
   140011ce7:	jg     0x140011cda
   140011ce9:	(bad)  
   140011cea:	pop    rdx
   140011ceb:	movabs al,ds:0xc0b83148018ddf80
   140011cf4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011cf5:	scas   al,BYTE PTR es:[rdi]
   140011cf6:	outs   dx,DWORD PTR ds:[rsi]
   140011cf7:	out    dx,al
   140011cf8:	repz popf 
   140011cfa:	repz mov esi,0xc195c05d
   140011d00:	icebp  
   140011d01:	(bad)
   140011d04:	xor    DWORD PTR [rbx+0x7f2336fa],eax
   140011d0a:	xor    cl,BYTE PTR [rdx+rdx*1]
   140011d0d:	or     al,dl
   140011d0f:	sbb    esp,DWORD PTR [rax]
   140011d11:	pop    WORD PTR [rcx-0x3a902d85]
   140011d18:	rex.XB (bad) 
   140011d1a:	xor    al,0xb
   140011d1c:	push   0x3
   140011d1e:	test   BYTE PTR [rip+0x220fa035],bl        # 0x16210bd59
   140011d24:	lock mov dh,0x18
   140011d27:	add    DWORD PTR [rdx+0x3],ebp
   140011d2a:	test   ch,bh
   140011d2c:	rex mov di,0x2011
   140011d32:	xor    al,0x48
   140011d34:	imul   ebp,DWORD PTR [rsi+rbx*1-0x35],0x376c64d
   140011d3c:	cli    
   140011d3d:	and    ah,dl
   140011d3f:	cmp    r8d,DWORD PTR [rax+r13*2]
   140011d43:	mov    DWORD PTR [rax],0x7f1baf61
   140011d49:	ja     0x140011ce8
   140011d4b:	sar    DWORD PTR gs:[rsi],1
   140011d4e:	jb     0x140011d5a
   140011d50:	ror    BYTE PTR [rsi-0x3c44fa7f],1
   140011d56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d57:	mov    ?,WORD PTR [rsi]
   140011d59:	(bad)  
   140011d5a:	frstor [rbx-0x3203fbf5]
   140011d60:	(bad)  
   140011d61:	mov    ecx,0x638e99db
   140011d66:	or     al,0x10
   140011d68:	jbe    0x140011d60
   140011d6a:	(bad)  
   140011d6b:	adc    edi,DWORD PTR [rbx+0x67eba6e0]
   140011d71:	call   QWORD PTR [rbx-0x3e72fe9c]
   140011d77:	cmp    ebx,DWORD PTR cs:[rdx]
   140011d7a:	jle    0x140011d75
   140011d7c:	(bad)  
   140011d7d:	mov    ?,WORD PTR [rbx]
   140011d7f:	add    eax,0x152340d
   140011d84:	call   QWORD PTR [rbp+0x3f]
   140011d87:	and    edi,edi
   140011d89:	xor    DWORD PTR [rbx-0x3b],0xf
   140011d8d:	and    DWORD PTR [rip+0x6fe0223f],edx        # 0x1afe13fd2
   140011d93:	idiv   al
   140011d95:	(bad)  
   140011d96:	jg     0x140011d84
   140011d98:	jle    0x140011d89
   140011d9a:	xchg   esi,eax
   140011d9b:	xor    edi,ebp
   140011d9d:	ret    0x90d7
   140011da0:	mov    WORD PTR [rdi-0x602418c7],gs
   140011da6:	(bad)  
   140011da7:	icebp  
   140011da8:	ja     0x140011dcd
   140011daa:	rex int3 
   140011dac:	xlat   BYTE PTR ds:[rbx]
   140011dad:	fsubr  QWORD PTR [rsi+rax*2-0x6c]
   140011db1:	jl     0x140011d80
   140011db3:	(bad)
   140011db6:	retf   0x304f
   140011db9:	cmp    DWORD PTR [rdx],ebp
   140011dbb:	stc    
   140011dbc:	sbb    bh,BYTE PTR [rbx]
   140011dbe:	xchg   edx,eax
   140011dbf:	sub    ebx,esp
   140011dc1:	imul   edi,DWORD PTR [rax+0x28],0x55
   140011dc5:	(bad)  
   140011dc6:	xlat   BYTE PTR ds:[rbx]
   140011dc7:	pop    rsp
   140011dc8:	(bad)  
   140011dc9:	retf   
   140011dca:	rex.WB (bad) 
   140011dcc:	rex.WRXB xchg r13,rax
   140011dce:	imul   DWORD PTR [rdi+0xa]
   140011dd1:	sub    BYTE PTR [rbp-0x12bfbc81],bh
   140011dd7:	std    
   140011dd8:	imul   ebx,DWORD PTR [rdx-0x5d694196],0x79
   140011ddf:	icebp  
   140011de0:	mov    edi,0x54017f8c
   140011de5:	or     eax,0x936d54a1
   140011dea:	pop    rsp
   140011deb:	cli    
   140011dec:	add    BYTE PTR [rax],al
   140011dee:	add    BYTE PTR [rax],al
   140011df0:	rex.WB
   140011df1:	rex.RB
   140011df2:	rex.WRX
   140011df3:	rex.R scas al,BYTE PTR es:[rdi]
   140011df5:	rex.X (bad) 
   140011df7:	(bad)  
   140011df8:	add    BYTE PTR [rax],al
   140011dfa:	add    eax,DWORD PTR [rcx+rcx*4]
   140011dfd:	push   rax
   140011dfe:	rex.WRX
   140011dff:	rex.RXB or eax,0xa1a0a
   140011e05:	add    BYTE PTR [rax],al
   140011e07:	or     eax,0x52444849
   140011e0c:	add    BYTE PTR [rax],al
   140011e0e:	add    BYTE PTR [rax],ah
   140011e10:	add    BYTE PTR [rax],al
   140011e12:	add    BYTE PTR [rax],ah
   140011e14:	or     BYTE PTR [rbx],al
   140011e16:	add    BYTE PTR [rax],al
   140011e18:	add    BYTE PTR [rsp+riz*4-0x76],al
   140011e1c:	mov    BYTE PTR [rax],0x0
   140011e1f:	add    DWORD PTR [rsi+0x45544c50],eax
   140011e25:	add    BYTE PTR [rax],al
   140011e27:	add    bh,bh
   140011e29:	(bad)  
   140011e2a:	(bad)  
   140011e2b:	(bad)  
   140011e2c:	(bad)  
   140011e2d:	(bad)  
   140011e2e:	(bad)  
   140011e2f:	(bad)  
   140011e30:	(bad)  
   140011e31:	(bad)  
   140011e32:	(bad)  
   140011e33:	(bad)  
   140011e34:	sti    
   140011e35:	sti    
   140011e36:	sti    
   140011e37:	repz lock idiv edi
   140011e3b:	(bad)  
   140011e3c:	push   rcx
   140011e3e:	out    dx,al
   140011e3f:	cmc    
   140011e40:	out    dx,eax
   140011e41:	out    dx,eax
   140011e42:	repnz repz repz imul bl
   140011e47:	jmp    0x140011e3a
   140011e49:	rex.X int 0x52
   140011e4c:	xlat   BYTE PTR fs:[rbx]
   140011e4e:	jae    0x140011e36
   140011e50:	out    dx,eax
   140011e51:	jmp    0x122f2073f
   140011e56:	loope  0x140011e43
   140011e58:	retf   
   140011e59:	leave  
   140011e5a:	fcmove st,st(4)
   140011e5c:	retf   0xcfdb
   140011e5f:	int3   
   140011e60:	fucom  st(1)
   140011e62:	fucomip st,st(1)
   140011e64:	fstp   st(4)
   140011e66:	out    0xe2,eax
   140011e68:	loopne 0x140011e55
   140011e6a:	fstp   st(3)
   140011e6c:	out    0xe5,eax
   140011e6e:	in     al,0xed
   140011e70:	retf   
   140011e71:	leave  
   140011e72:	fcmovne st,st(2)
   140011e74:	enter  0xc2da,0xbf
   140011e78:	(bad)  
   140011e79:	mov    ebx,0xb49095d8
   140011e7f:	cmc    
   140011e80:	cmc    
   140011e81:	clc    
   140011e82:	ins    BYTE PTR es:[rdi],dx
   140011e83:	fs cwde 
   140011e85:	mov    WORD PTR [rsi-0x3a555252],es
   140011e8b:	out    0xe6,eax
   140011e8d:	out    dx,al
   140011e8e:	jmp    0x140011e7c
   140011e90:	lock add eax,0x6510295e
   140011e96:	xor    dl,BYTE PTR [rcx]
   140011e98:	xor    dx,WORD PTR [rdx]
   140011e9b:	data16 xor al,0x15
   140011e9e:	push   0x37691636
   140011ea3:	(bad)  
   140011ea4:	adc    ah,BYTE PTR [rcx+0x23]
   140011ea7:	sbb    BYTE PTR [rbp+0x24],ah
   140011eaa:	sbb    DWORD PTR [rbp+0x28],esp
   140011ead:	sbb    al,0x68
   140011eaf:	cmp    BYTE PTR [rip+0x742e3873],ch        # 0x1b42f5728
   140011eb5:	xor    esi,DWORD PTR ds:[rdi+0x41]
   140011eb9:	int    0x52
   140011ebb:	rex.X int 0x53
   140011ebe:	rex.XB (bad) 
   140011ec0:	push   rsp
   140011ec1:	rex.RX (bad) 
   140011ec3:	push   rdi
   140011ec4:	iretq  
   140011ec6:	pop    rax
   140011ec7:	iretq  
   140011ec9:	pop    rcx
   140011eca:	rex.WXB rcr BYTE PTR [r11+0x53],1
   140011ece:	xchg   ecx,eax
   140011ecf:	ins    BYTE PTR es:[rdi],dx
   140011ed0:	push   rbx
   140011ed1:	shl    BYTE PTR [rbx+0x5e],cl
   140011ed4:	(bad)  
   140011ed5:	ins    BYTE PTR es:[rdi],dx
   140011ed6:	(bad)  
   140011ed7:	(bad)  
   140011ed8:	outs   dx,DWORD PTR ds:[rsi]
   140011ed9:	movsxd ebx,DWORD PTR [rdx+0x72d66579]
   140011edf:	push   0xffffffffffffffd7
   140011ee1:	ja     0x140011f50
   140011ee3:	fnstcw WORD PTR [rdx+0x6e]
   140011ee6:	xlat   BYTE PTR ds:[rbx]
   140011ee7:	jnp    0x140011f57
   140011ee9:	fnstcw WORD PTR [rbx+0x79]
   140011eec:	test   al,0x8c
   140011eee:	jp     0x140011eca
   140011ef0:	xchg   BYTE PTR [rbx-0x53],bh
   140011ef3:	lea    edi,[rbp-0x23]
   140011ef6:	mov    DWORD PTR [rax-0x217f6e4e],eax
   140011efc:	mov    WORD PTR [rcx-0x1e736c4e],es
   140011f02:	xchg   esi,eax
   140011f03:	mov    ?,WORD PTR [rbx-0x621c6c63]
   140011f09:	xchg   esp,eax
   140011f0a:	jrcxz  0x140011eaa
   140011f0c:	xchg   esi,eax
   140011f0d:	fisub  WORD PTR [rax-0x60592063]
   140011f13:	loope  0x140011ebe
   140011f15:	movabs ds:0xafe8a7aee1a6aae6,al
   140011f1e:	test   al,0xe2
   140011f20:	mov    cl,0xa9
   140011f22:	call   0xf4e4cad7
   140011f27:	mov    al,0xe9
   140011f29:	mov    eax,0xb6baebb3
   140011f2e:	jmp    0x140011eed
   140011f30:	mov    edx,0xe5bbc2e4
   140011f35:	ret    0xe5bc
   140011f38:	ret    
   140011f39:	mov    esp,0xd3bfc2ed
   140011f3e:	retf   0xdec3
   140011f41:	retf   
   140011f42:	(bad)  
   140011f43:	fcmove st,st(5)
   140011f45:	(bad)
   140011f48:	(bad)
   140011f4b:	(bad)  
   140011f4c:	lock retf 
   140011f4e:	(bad)  
   140011f4f:	lock int3 
   140011f51:	int3   
   140011f52:	(bad)  
   140011f54:	iret   
   140011f55:	jrcxz  0x140011f2d
   140011f57:	iret   
   140011f58:	repnz (bad) 
   140011f5a:	(bad)  
   140011f5c:	(bad)  
   140011f5e:	cmc    
   140011f5f:	fstp   st(3)
   140011f61:	loopne 0x140011f46
   140011f63:	(bad)  
   140011f65:	loopne 0x140011f46
   140011f67:	mul    edx
   140011f69:	loopne 0x140011f4f
   140011f6b:	out    0xe3,eax
   140011f6d:	clc    
   140011f6e:	out    0xe4,al
   140011f70:	out    dx,eax
   140011f71:	call   0x128ef0f5e
   140011f76:	lock in al,dx
   140011f78:	call   0x139eb0a76
   140011f7d:	jmp    0x140011f69
   140011f7f:	cli    
   140011f80:	in     al,dx
   140011f81:	in     al,dx
   140011f82:	cli    
   140011f83:	out    dx,al
   140011f84:	out    dx,eax
   140011f85:	stc    
   140011f86:	icebp  
   140011f87:	out    dx,eax
   140011f88:	sti    
   140011f89:	icebp  
   140011f8a:	lock sti 
   140011f8c:	icebp  
   140011f8d:	icebp  
   140011f8e:	sti    
   140011f8f:	repnz repnz cld 
   140011f92:	repz idiv ch
   140011f95:	idiv   ecx
   140011f97:	sti    
   140011f98:	cli    
   140011f99:	stc    
   140011f9a:	std    
   140011f9b:	cli    
   140011f9c:	sti    
   140011f9d:	(bad)  
   140011f9e:	sti    
   140011f9f:	sti    
   140011fa0:	(bad)  
   140011fa1:	cld    
   140011fa2:	std    
   140011fa3:	(bad)  
   140011fa4:	std    
   140011fa5:	(bad)  
   140011fa6:	(bad)  
   140011fa7:	(bad)  
   140011fa8:	(bad)  
   140011fa9:	(bad)  
   140011faa:	jmp    QWORD PTR [rax+0x66]
   140011fad:	mov    ecx,0x26
   140011fb2:	and    al,0x74
   140011fb4:	push   rdx
   140011fb5:	rex.WRX push rbx
   140011fb7:	add    BYTE PTR [rcx],ah
   140011fb9:	and    eax,0x423a3529
   140011fbe:	rex.R
   140011fbf:	rex.WB
   140011fc0:	rex.WRX push rbp
   140011fc2:	pop    rax
   140011fc3:	or     BYTE PTR [rbp+rcx*4-0x21223247],0xdf
   140011fcb:	(bad)  
   140011fcd:	loope  0x140011fb2
   140011fcf:	in     al,0xe8
   140011fd1:	jmp    0x137f50bc0
   140011fd6:	clc    
   140011fd7:	cli    
   140011fd8:	std    
   140011fd9:	(bad)  
   140011fda:	(bad)  
   140011fdb:	outs   dx,DWORD PTR ds:[rsi]
   140011fdc:	sbb    cl,dil
   140011fdf:	add    BYTE PTR [rax],al
   140011fe1:	add    DWORD PTR [rcx],ecx
   140011fe3:	rex.WB
   140011fe4:	rex.R
   140011fe5:	push   r12
   140011fe7:	cmp    bl,cl
   140011fe9:	movsxd esp,DWORD PTR [rax+0x18]
   140011fec:	push   rcx
   140011fed:	add    bh,0x10
   140011ff0:	or     esp,DWORD PTR [rax]
   140011ff2:	and    al,0x6f
   140011ff4:	rex.W
   140011ff5:	rex.W ficom WORD PTR [rax]
   140011ff8:	rex.XB faddp st(4),st
   140011ffb:	adc    al,0x87
   140011ffd:	add    cl,BYTE PTR [rax]
   140011fff:	xlat   BYTE PTR ds:[rbx]
   140012000:	xor    eax,0xc8b1b1bb
   140012005:	(bad)  
   140012006:	enter  0x6c68,0xc4
   14001200a:	stos   BYTE PTR es:[rdi],al
   14001200b:	shl    BYTE PTR [rcx+0x202438be],0xab
   140012012:	rcl    DWORD PTR [rbx],1
   140012014:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012015:	(bad)  
   140012016:	(bad)  
   140012017:	(bad)  
   140012018:	imul   eax,DWORD PTR [rbx+0x43],0xfffffff3
   14001201c:	retf   0x9c5c
   14001201f:	or     cl,BYTE PTR [rdx]
   140012021:	mov    bl,0x40
   140012023:	rex.WR movabs fs:0x4daa302a60082359,rax
   14001202e:	(bad)  
   14001202f:	push   rcx
   140012030:	lea    edx,[r14-0x1f]
   140012034:	jne    0x14001206b
   140012036:	loope  0x140012019
   140012038:	cwde   
   140012039:	or     cl,BYTE PTR [rbx+rbp*8+0x44544093]
   140012040:	mov    ch,0xad
   140012042:	(bad)  
   140012043:	push   rbp
   140012044:	sbb    DWORD PTR [rsi+0x2b],edx
   140012047:	rex.WX xor al,BYTE PTR [rax-0x4595a27c]
   14001204e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001204f:	(bad)  
   140012050:	push   rbp
   140012051:	cmp    DWORD PTR [rsi+0x5],edx
   140012054:	imul   ecx,DWORD PTR [rbp+0x710e86f6],0x91d1f11a
   14001205e:	jns    0x140012065
   140012060:	push   rcx
   140012061:	xchg   ecx,eax
   140012062:	rex loopne 0x140011ff1
   140012065:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012066:	sar    BYTE PTR [rbp+0x412c22b1],0x5d
   14001206d:	rex.RB
   14001206e:	adc    r9,QWORD PTR [r10]
   140012071:	sub    al,0x7c
   140012073:	rol    DWORD PTR [rbx],1
   140012075:	retf   0x34bb
   140012078:	rex.RB push r13
   14001207a:	add    eax,0xd1fc6c01
   14001207f:	adc    eax,0x20ba8618
   140012084:	leave  
   140012085:	stos   DWORD PTR es:[rdi],eax
   140012086:	cmp    ch,ah
   140012088:	repz movabs ds:0x28a05640f60a302b,al
   140012092:	(bad)  
   140012093:	mov    BYTE PTR [rsi-0x2fd72f40],ah
   140012099:	rex.WRB and rax,0xffffffff940a0736
   14001209f:	adc    eax,0xd118440c
   1400120a4:	adc    al,0x18
   1400120a6:	sbb    bh,dl
   1400120a8:	jns    0x14001210f
   1400120aa:	push   0x6b
   1400120ac:	rol    DWORD PTR [rcx+0x461328be],0xca
   1400120b3:	loop   0x140012108
   1400120b5:	rex.X push rdx
   1400120b7:	movabs al,ds:0x590242a18cce27a5
   1400120c0:	or     DWORD PTR [rsi+0x286170c],0x3a052401
   1400120ca:	rcr    ah,cl
   1400120cc:	cwde   
   1400120cd:	test   eax,0x10485f97
   1400120d2:	add    al,BYTE PTR [rbp+riz*8-0xec75a8b]
   1400120d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400120da:	jae    0x140012152
   1400120dc:	pop    rcx
   1400120dd:	rex.WB (bad) 
   1400120df:	mov    esp,0x8e5d8119
   1400120e4:	or     eax,0x61614e7f
   1400120e9:	add    eax,0x40000053
   1400120ee:	ins    BYTE PTR es:[rdi],dx
   1400120ef:	push   rsi
   1400120f0:	xchg   ebp,eax
   1400120f1:	jnp    0x14001216e
   1400120f3:	out    dx,eax
   1400120f4:	add    BYTE PTR [rax],al
   1400120f6:	add    BYTE PTR [rax],al
   1400120f8:	rex.WB
   1400120f9:	rex.RB
   1400120fa:	rex.WRX
   1400120fb:	rex.R scas al,BYTE PTR es:[rdi]
   1400120fd:	rex.X (bad) 
   1400120ff:	(bad)  
   140012100:	add    BYTE PTR [rsi],cl
   140012102:	add    eax,0x876c28
   140012107:	jno    0x140012109
   140012109:	je     0x14001210b
   14001210b:	sub    eax,0x72007000
   140012110:	add    BYTE PTR [rdi+0x0],ch
   140012113:	push   0x0
   140012115:	add    BYTE PTR gs:[rbx+0x0],ah
   140012119:	je     0x14001211b
   14001211b:	add    BYTE PTR cs:[rdi+0x0],ch
   14001211f:	jb     0x140012121
   140012121:	add    BYTE PTR [ebx],cl
   140012124:	or     ah,BYTE PTR [rax]
   140012126:	sahf   
   140012127:	rex.X add BYTE PTR [rcx+0x0],sil
   14001212b:	add    BYTE PTR fs:[rdx+0x0],ah
   14001212f:	jne    0x140012131
   140012131:	jae    0x140012133
   140012133:	jbe    0x140012135
   140012135:	imul   eax,DWORD PTR [rax],0x770065
   14001213b:	add    BYTE PTR gs:[rdx+0x0],dh
   14001213f:	(bad)  
   140012140:	(bad)  
   140012141:	add    edi,DWORD PTR [rbp-0x3d]
   140012144:	add    BYTE PTR [rcx+0x0],ch
   140012147:	ins    DWORD PTR es:[rdi],dx
   140012148:	add    BYTE PTR [rcx+0x0],ah
   14001214b:	add    BYTE PTR [ebp+0x0],ah
   14001214f:	jae    0x140012151
   140012151:	adc    eax,DWORD PTR [rip+0xc7f567]        # 0x140c916be
   140012157:	jno    0x140012159
   140012159:	add    BYTE PTR fs:[rdx+0x0],ah
   14001215d:	jne    0x14001215f
   14001215f:	jae    0x140012161
   140012161:	jbe    0x140012163
   140012163:	imul   eax,DWORD PTR [rax],0x770065
   140012169:	add    BYTE PTR gs:[rdx+0x0],dh
   14001216d:	sub    eax,0x32003100
   140012172:	add    BYTE PTR [rax],bh
   140012174:	add    BYTE PTR [rsi],ch
   140012176:	add    BYTE PTR [rax+0x0],dh
   140012179:	outs   dx,BYTE PTR ds:[rsi]
   14001217a:	add    BYTE PTR [rdi+0x0],ah
   14001217d:	femms  
   14001217f:	push   rcx
   140012180:	(bad)  
   140012181:	add    BYTE PTR [ecx+0x0],dh
   140012185:	add    BYTE PTR fs:[rdx+0x0],ah
   140012189:	jne    0x14001218b
   14001218b:	jae    0x14001218d
   14001218d:	jbe    0x14001218f
   14001218f:	imul   eax,DWORD PTR [rax],0x770065
   140012195:	add    BYTE PTR gs:[rdx+0x0],dh
   140012199:	add    BYTE PTR cs:[rax+0x0],dh
   14001219d:	outs   dx,BYTE PTR ds:[rsi]
   14001219e:	add    BYTE PTR [rdi+0x0],ah
   1400121a1:	add    BYTE PTR [rax],al
   1400121a3:	add    BYTE PTR [rax],al
   1400121a5:	add    al,BYTE PTR [rax]
   1400121a7:	add    BYTE PTR [rax],al
   1400121a9:	add    DWORD PTR [rax],eax
   1400121ab:	add    BYTE PTR [rax],al
   1400121ad:	add    DWORD PTR [rax],eax
   1400121af:	add    BYTE PTR [rax],al
   1400121b1:	add    BYTE PTR [rax],al
   1400121b3:	add    al,BYTE PTR [rax]
   1400121b5:	add    BYTE PTR [rax],al
   1400121b7:	add    DWORD PTR [rax],eax
   1400121b9:	add    BYTE PTR [rax],al
   1400121bb:	add    al,BYTE PTR [rax]
   1400121bd:	add    BYTE PTR [rax],al
   1400121bf:	and    al,BYTE PTR [rax]
   1400121c1:	add    al,BYTE PTR [rax]
   1400121c3:	add    BYTE PTR [rax],al
   1400121c5:	add    DWORD PTR [rax],eax
   1400121c7:	add    BYTE PTR [rax],al
   1400121c9:	add    eax,DWORD PTR [rax]
   1400121cb:	add    BYTE PTR [rax],al
   1400121cd:	add    BYTE PTR ds:[rdx],al
   1400121d0:	add    BYTE PTR [rax],al
   1400121d2:	add    BYTE PTR [rdx],al
   1400121d4:	add    BYTE PTR [rax],al
   1400121d6:	add    BYTE PTR [rax+rax*1],al
   1400121d9:	add    BYTE PTR [rax],al
   1400121db:	push   rax
   1400121dc:	add    BYTE PTR [rax],al
   1400121de:	add    BYTE PTR [rax],al
   1400121e0:	add    BYTE PTR [rcx],al
   1400121e2:	add    BYTE PTR [rax],al
   1400121e4:	add    BYTE PTR [rax],al
   1400121e6:	add    BYTE PTR [rax],al
   1400121e8:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400121ec:	add    BYTE PTR [rax],al
   1400121ee:	add    BYTE PTR [rcx],al
   1400121f0:	add    BYTE PTR [rax],al
   1400121f2:	or     BYTE PTR [rax],bh
	...
   140012200:	(bad)  
   140012201:	(bad)  
   140012202:	(bad)  
   140012203:	dec    DWORD PTR [rbx]
	...
   14001220d:	add    BYTE PTR [rax],al
   14001220f:	add    BYTE PTR [rax+0x2],ah
   140012215:	add    BYTE PTR [rax],al
   140012217:	add    bh,bh
   140012219:	(bad)  
   14001221a:	(bad)  
   14001221b:	inc    DWORD PTR [rdi]
	...
   140012225:	add    BYTE PTR [rax],al
   140012227:	add    BYTE PTR [rdx+rax*1+0x0],dl
   14001222e:	add    BYTE PTR [rax],al
   140012230:	(bad)  
   140012231:	(bad)  
   140012232:	(bad)  
   140012233:	inc    DWORD PTR [rax]
	...
   14001223d:	add    BYTE PTR [rax],al
   14001223f:	add    BYTE PTR [rdx+rax*1+0x0],al
   140012246:	add    BYTE PTR [rax],al
   140012248:	(bad)  
   140012249:	(bad)  
   14001224a:	(bad)  
   14001224b:	dec    DWORD PTR [rsi]
	...
   140012255:	add    BYTE PTR [rax],al
   140012257:	add    BYTE PTR [rbp+0x2],ch
   14001225a:	add    BYTE PTR [rax],al
   14001225c:	add    BYTE PTR [rax],al
   14001225e:	add    BYTE PTR [rax],al
   140012260:	(bad)  
   140012261:	(bad)  
   140012262:	(bad)  
   140012263:	inc    DWORD PTR [rip+0x0]        # 0x140012269
   140012269:	add    BYTE PTR [rax],al
   14001226b:	add    BYTE PTR [rax],al
   14001226d:	add    BYTE PTR [rax],al
   14001226f:	add    BYTE PTR [rdx+rax*1+0x0],ah
   140012273:	add    BYTE PTR [rax],al
   140012275:	add    BYTE PTR [rax],al
   140012277:	add    bh,bh
   140012279:	(bad)  
   14001227a:	(bad)  
   14001227b:	dec    DWORD PTR [rdi]
	...
   140012285:	add    BYTE PTR [rax],al
   140012287:	add    BYTE PTR [rdx+0x2],dl
   14001228a:	add    BYTE PTR [rax],al
   14001228c:	add    BYTE PTR [rax],al
   14001228e:	add    BYTE PTR [rax],al
   140012290:	(bad)  
   140012291:	(bad)  
   140012292:	(bad)  
   140012293:	call   QWORD PTR [rbx]
	...
   14001229d:	add    BYTE PTR [rax],al
   14001229f:	add    BYTE PTR [rdx+0x2],cl
   1400122a2:	add    BYTE PTR [rax],al
   1400122a4:	add    BYTE PTR [rax],al
   1400122a6:	add    BYTE PTR [rax],al
   1400122a8:	(bad)  
   1400122a9:	(bad)  
   1400122aa:	(bad)  
   1400122ab:	dec    DWORD PTR [rax+rax*1]
	...
   1400122b6:	add    BYTE PTR [rax],al
   1400122b8:	rex.RX add r8b,BYTE PTR [rax]
   1400122bb:	add    BYTE PTR [rax],al
   1400122bd:	add    BYTE PTR [rax],al
   1400122bf:	add    bh,bh
   1400122c1:	(bad)  
   1400122c2:	(bad)  
   1400122c3:	inc    DWORD PTR [rbx]
	...
   1400122cd:	add    BYTE PTR [rax],al
   1400122cf:	add    BYTE PTR [rbx],bh
   1400122d1:	add    al,BYTE PTR [rax]
   1400122d3:	add    BYTE PTR [rax],al
   1400122d5:	add    BYTE PTR [rax],al
   1400122d7:	add    bh,bh
   1400122d9:	(bad)  
   1400122da:	(bad)  
   1400122db:	dec    DWORD PTR [rdx]
	...
   1400122e5:	add    BYTE PTR [rax],al
   1400122e7:	add    BYTE PTR [rdi],ah
   1400122e9:	add    al,BYTE PTR [rax]
   1400122eb:	add    BYTE PTR [rax],al
   1400122ed:	add    BYTE PTR [rax],al
   1400122ef:	add    bh,bh
   1400122f1:	(bad)  
   1400122f2:	(bad)  
   1400122f3:	dec    DWORD PTR [rbx]
	...
   1400122fd:	add    BYTE PTR [rax],al
   1400122ff:	add    BYTE PTR [rdx],bl
   140012301:	add    al,BYTE PTR [rax]
   140012303:	add    BYTE PTR [rax],al
   140012305:	add    BYTE PTR [rax],al
   140012307:	add    bh,bh
   140012309:	(bad)  
   14001230a:	(bad)  
   14001230b:	dec    DWORD PTR [rbx]
	...
   140012315:	add    BYTE PTR [rax],al
   140012317:	add    BYTE PTR [rsi],cl
   140012319:	add    al,BYTE PTR [rax]
   14001231b:	add    BYTE PTR [rax],al
   14001231d:	add    BYTE PTR [rax],al
   14001231f:	add    bh,bh
   140012321:	(bad)  
   140012322:	(bad)  
   140012323:	dec    DWORD PTR [rbx]
	...
   14001232d:	add    BYTE PTR [rax],al
   14001232f:	add    BYTE PTR [rdx],al
   140012331:	add    al,BYTE PTR [rax]
   140012333:	add    BYTE PTR [rax],al
   140012335:	add    BYTE PTR [rax],al
   140012337:	add    bh,bh
   140012339:	(bad)  
   14001233a:	(bad)  
   14001233b:	dec    DWORD PTR [rax+rax*1]
	...
   140012346:	add    BYTE PTR [rax],al
   140012348:	test   BYTE PTR [rcx],0x0
   14001234b:	add    BYTE PTR [rax],al
   14001234d:	add    BYTE PTR [rax],al
   14001234f:	add    bh,bh
   140012351:	(bad)  
   140012352:	(bad)  
   140012353:	inc    DWORD PTR [rbx]
	...
   14001235d:	add    BYTE PTR [rax],al
   14001235f:	add    bl,ch
   140012361:	add    DWORD PTR [rax],eax
   140012363:	add    BYTE PTR [rax],al
   140012365:	add    BYTE PTR [rax],al
   140012367:	add    bh,bh
   140012369:	(bad)  
   14001236a:	(bad)  
   14001236b:	dec    DWORD PTR [rdi]
	...
   140012375:	add    BYTE PTR [rax],al
   140012377:	add    bh,dl
   140012379:	add    DWORD PTR [rax],eax
   14001237b:	add    BYTE PTR [rax],al
   14001237d:	add    BYTE PTR [rax],al
   14001237f:	add    bh,bh
   140012381:	(bad)  
   140012382:	(bad)  
   140012383:	call   QWORD PTR [rcx]
	...
   14001238d:	add    BYTE PTR [rax],al
   14001238f:	add    bh,cl
   140012391:	add    DWORD PTR [rax],eax
   140012393:	add    BYTE PTR [rax],al
   140012395:	add    BYTE PTR [rax],al
   140012397:	add    bh,bh
   140012399:	(bad)  
   14001239a:	(bad)  
   14001239b:	inc    DWORD PTR [rdi]
	...
   1400123a5:	add    BYTE PTR [rax],al
   1400123a7:	add    cl,cl
   1400123a9:	add    DWORD PTR [rax],eax
   1400123ab:	add    BYTE PTR [rax],al
   1400123ad:	add    BYTE PTR [rax],al
   1400123af:	add    bh,bh
   1400123b1:	(bad)  
   1400123b2:	(bad)  
   1400123b3:	call   QWORD PTR [rbx]
	...
   1400123bd:	add    BYTE PTR [rax],al
   1400123bf:	add    BYTE PTR [rcx+0x1],bh
   1400123c5:	add    BYTE PTR [rax],al
   1400123c7:	add    bh,bh
   1400123c9:	(bad)  
   1400123ca:	(bad)  
   1400123cb:	call   QWORD PTR [rbx]
	...
   1400123d5:	add    BYTE PTR [rax],al
   1400123d7:	add    BYTE PTR [rbp+0x1],dh
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    bh,bh
   1400123e1:	(bad)  
   1400123e2:	(bad)  
   1400123e3:	inc    DWORD PTR [rax+rax*1]
	...
   1400123ee:	add    BYTE PTR [rax],al
   1400123f0:	mov    cl,0x1
   1400123f2:	add    BYTE PTR [rax],al
   1400123f4:	add    BYTE PTR [rax],al
   1400123f6:	add    BYTE PTR [rax],al
   1400123f8:	(bad)  
   1400123f9:	(bad)  
   1400123fa:	(bad)  
   1400123fb:	dec    DWORD PTR [rax]
	...
   140012405:	add    BYTE PTR [rax],al
   140012407:	add    BYTE PTR [rsi+0x1],bl
   14001240d:	add    BYTE PTR [rax],al
   14001240f:	add    bh,bh
   140012411:	(bad)  
   140012412:	(bad)  
   140012413:	dec    DWORD PTR [rax]
	...
   14001241d:	add    BYTE PTR [rax],al
   14001241f:	add    BYTE PTR [rdi+0x1],cl
   140012425:	add    BYTE PTR [rax],al
   140012427:	add    bh,bh
   140012429:	(bad)  
   14001242a:	(bad)  
   14001242b:	dec    DWORD PTR [rax]
	...
   140012435:	add    BYTE PTR [rax],al
   140012437:	add    BYTE PTR [rax+0x1],al
   14001243d:	add    BYTE PTR [rax],al
   14001243f:	add    bh,bh
   140012441:	(bad)  
   140012442:	(bad)  
   140012443:	inc    DWORD PTR [rax+rax*1]
	...
   14001244e:	add    BYTE PTR [rax],al
   140012450:	jno    0x140012453
   140012452:	add    BYTE PTR [rax],al
   140012454:	add    BYTE PTR [rax],al
   140012456:	add    BYTE PTR [rax],al
   140012458:	(bad)  
   140012459:	(bad)  
   14001245a:	(bad)  
   14001245b:	dec    DWORD PTR [rax]
	...
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rsi+0x1],bl
   14001246a:	add    BYTE PTR [rax],al
   14001246c:	add    BYTE PTR [rax],al
   14001246e:	add    BYTE PTR [rax],al
   140012470:	(bad)  
   140012471:	(bad)  
   140012472:	(bad)  
   140012473:	dec    DWORD PTR [rip+0x0]        # 0x140012479
   140012479:	add    BYTE PTR [rax],al
   14001247b:	add    BYTE PTR [rax],al
   14001247d:	add    BYTE PTR [rax],al
   14001247f:	add    BYTE PTR [rdi+0x1],cl
   140012482:	add    BYTE PTR [rax],al
   140012484:	add    BYTE PTR [rax],al
   140012486:	add    BYTE PTR [rax],al
   140012488:	(bad)  
   140012489:	(bad)  
   14001248a:	(bad)  
   14001248b:	inc    DWORD PTR [rbx]
	...
   140012495:	add    BYTE PTR [rax],al
   140012497:	add    BYTE PTR [rbp+0x1],al
   14001249a:	add    BYTE PTR [rax],al
   14001249c:	add    BYTE PTR [rax],al
   14001249e:	add    BYTE PTR [rax],al
   1400124a0:	push   rcx
   1400124a1:	rex.R
   1400124a2:	rex.X jne 0x140012518
   1400124a5:	push   rsi
   1400124a6:	imul   esp,DWORD PTR [rbp+0x77],0x72007265
   1400124ad:	gs data16 jb 0x140012516
   1400124b1:	jae    0x14001251b
   1400124b3:	add    BYTE PTR [rax],al
   1400124b5:	jae    0x14001251c
   1400124b7:	jb     0x14001252f
   1400124b9:	imul   esp,DWORD PTR [rbx+0x65],0x6e616843
   1400124c0:	gs add BYTE PTR fs:[ecx+0x6e],ch
   1400124c6:	fs gs js 0x1400124ca
   1400124ca:	jae    0x140012534
   1400124cc:	outs   dx,DWORD PTR ds:[rsi]
   1400124cd:	ja     0x140012512
   1400124cf:	outs   dx,DWORD PTR ds:[rsi]
   1400124d0:	outs   dx,BYTE PTR ds:[rsi]
   1400124d1:	je     0x140012538
   1400124d3:	js     0x140012549
   1400124d5:	rex.WRB
   1400124d6:	outs   dx,BYTE PTR gs:[rsi]
   1400124d8:	jne    0x1400124da
   1400124da:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400124dd:	outs   dx,BYTE PTR ds:[rsi]
   1400124de:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400124e3:	outs   dx,BYTE PTR ds:[rsi]
   1400124e4:	push   rdx
   1400124e5:	gs jno 0x14001255d
   1400124e8:	gs jae 0x14001255f
   1400124eb:	gs add BYTE PTR fs:[rdx+0x75],al
   1400124f0:	jae    0x140012545
   1400124f2:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   1400124f9:	add    BYTE PTR gs:[rbx+0x69],dh
   1400124fd:	add    BYTE PTR [ebx+0x61],ah
   140012501:	ins    BYTE PTR es:[rdi],dx
   140012502:	ins    BYTE PTR es:[rdi],dx
   140012503:	rex.WRB
   140012504:	gs je  0x14001256f
   140012507:	outs   dx,DWORD PTR ds:[rsi]
   140012508:	add    BYTE PTR fs:[rdi+0x65],ah
   14001250c:	je     0x14001255e
   14001250e:	jb     0x14001257f
   140012510:	jo     0x140012577
   140012512:	jb     0x140012588
   140012514:	jns    0x140012516
   140012516:	jae    0x14001257d
   140012518:	je     0x14001256a
   14001251a:	jb     0x14001258b
   14001251c:	jo     0x140012583
   14001251e:	jb     0x140012594
   140012520:	jns    0x140012522
   140012522:	fs jne 0x140012592
   140012525:	jo     0x140012574
   140012527:	gs jae 0x14001259d
   14001252a:	(bad)  
   14001252b:	add    BYTE PTR gs:[ecx+0x44],dl
   140012530:	rex.X jne 0x1400125a6
   140012533:	rex.WRB
   140012534:	gs jae 0x1400125aa
   140012537:	(bad)  
   140012538:	add    BYTE PTR gs:[ebp+0x73],ch
   14001253d:	add    BYTE PTR [edx+0x65],dh
   140012541:	data16 jb 0x1400125a9
   140012544:	jae    0x1400125ae
   140012546:	rex.XB push 0x72646c69
   14001254c:	outs   dx,BYTE PTR gs:[rsi]
   14001254e:	add    BYTE PTR [rbx+0x65],dh
   140012551:	jb     0x1400125c9
   140012553:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   14001255a:	jae    0x1400125d0
   14001255c:	gs jb  0x1400125c4
   14001255f:	add    BYTE PTR fs:[rbx+0x65],dh
   140012563:	jb     0x1400125db
   140012565:	imul   esp,DWORD PTR [rbx+0x65],0x72657300
   14001256c:	jbe    0x1400125d7
   14001256e:	movsxd esp,DWORD PTR [rbp+0x55]
   140012571:	outs   dx,BYTE PTR ds:[rsi]
   140012572:	jb     0x1400125d9
   140012574:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14001257c:	add    BYTE PTR [rbx+0x65],dh
   14001257f:	jb     0x1400125f7
   140012581:	imul   esp,DWORD PTR [rbx+0x65],0x656e774f
   140012588:	jb     0x1400125cd
   14001258a:	push   0x65676e61
   14001258f:	add    BYTE PTR fs:[rsi+0x61],ch
   140012593:	ins    DWORD PTR es:[rdi],dx
   140012594:	add    BYTE PTR gs:[rdi+0x6c],ch
   140012598:	fs rex.WRXB ja 0x14001260a
   14001259c:	gs jb  0x14001259f
   14001259f:	outs   dx,BYTE PTR ds:[rsi]
   1400125a0:	gs ja  0x1400125f2
   1400125a3:	ja     0x140012613
   1400125a5:	gs jb  0x1400125a8
   1400125a8:	(bad)  
   1400125a9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400125ad:	(bad)  
   1400125ae:	je     0x140012615
   1400125b0:	add    BYTE PTR [rcx+0x74],ch
   1400125b3:	gs ins DWORD PTR es:[rdi],dx
   1400125b5:	add    BYTE PTR [rdi+rbp*2+0x67],ch
   1400125b9:	rex.RB jb 0x14001262e
   1400125bc:	outs   dx,DWORD PTR ds:[rsi]
   1400125bd:	jb     0x1400125bf
   1400125bf:	(bad)  
   1400125c0:	outs   dx,BYTE PTR ds:[rsi]
   1400125c1:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400125c4:	jb     0x140012609
   1400125c6:	ins    BYTE PTR es:[rdi],dx
   1400125c7:	imul   esp,DWORD PTR [rbx+0x6b],0x75006465
   1400125ce:	jb     0x14001263c
	...
   1400125e0:	(bad)  
	...
   1400125ed:	add    BYTE PTR [rax],al
   1400125ef:	add    BYTE PTR [rdi],cl
   1400125f1:	add    BYTE PTR [rax],al
   1400125f3:	add    BYTE PTR [rsi],cl
	...
   140012615:	add    BYTE PTR [rax],al
   140012617:	add    BYTE PTR [rcx],al
   140012619:	add    BYTE PTR [rax],al
   14001261b:	add    BYTE PTR [rax],al
   14001261d:	add    BYTE PTR [rax],al
   14001261f:	add    BYTE PTR [rcx+0x0],bl
   140012622:	add    BYTE PTR [rax],al
   140012624:	add    al,BYTE PTR [rax]
   140012626:	add    BYTE PTR [rax],al
   140012628:	or     al,BYTE PTR [rax]
   14001262a:	add    BYTE PTR [rax],al
   14001262c:	add    eax,DWORD PTR [rax]
   14001262e:	add    BYTE PTR [rax],al
   140012630:	add    DWORD PTR [rax],eax
   140012632:	add    BYTE PTR [rax],al
   140012634:	pop    rdx
   140012635:	add    BYTE PTR [rax],al
   140012637:	add    BYTE PTR [rdx],al
   140012639:	add    BYTE PTR [rax],al
   14001263b:	add    BYTE PTR [rax],cl
   14001263d:	add    BYTE PTR [rax],al
   14001263f:	add    BYTE PTR [rip+0x1000000],al        # 0x141012645
   140012645:	add    BYTE PTR [rax],al
   140012647:	add    BYTE PTR [rbp+0x0],bl
   14001264a:	add    BYTE PTR [rax],al
   14001264c:	add    al,BYTE PTR [rax]
   14001264e:	add    BYTE PTR [rax],al
   140012650:	or     BYTE PTR [rax],al
   140012652:	add    BYTE PTR [rax],al
   140012654:	(bad)  
   140012655:	add    BYTE PTR [rax],al
   140012657:	add    BYTE PTR [rcx],al
   140012659:	add    BYTE PTR [rax],al
   14001265b:	add    BYTE PTR [rax+0x0],ah
   14001265e:	add    BYTE PTR [rax],al
   140012660:	add    al,BYTE PTR [rax]
   140012662:	add    BYTE PTR [rax],al
   140012664:	or     BYTE PTR [rax],al
   140012666:	add    BYTE PTR [rax],al
   140012668:	or     DWORD PTR [rax],eax
   14001266a:	add    BYTE PTR [rax],al
   14001266c:	add    DWORD PTR [rax],eax
   14001266e:	add    BYTE PTR [rax],al
   140012670:	movsxd eax,DWORD PTR [rax]
   140012672:	add    BYTE PTR [rax],al
   140012674:	add    al,BYTE PTR [rax]
   140012676:	add    BYTE PTR [rax],al
   140012678:	or     BYTE PTR [rax],al
   14001267a:	add    BYTE PTR [rax],al
   14001267c:	or     al,BYTE PTR [rax]
   14001267e:	add    BYTE PTR [rax],al
   140012680:	add    DWORD PTR [rax],eax
   140012682:	add    BYTE PTR [rax],al
   140012684:	data16 add BYTE PTR [rax],al
   140012687:	add    BYTE PTR [rdx],al
   140012689:	add    BYTE PTR [rax],al
   14001268b:	add    BYTE PTR [rax],cl
   14001268d:	add    BYTE PTR [rax],al
   14001268f:	add    BYTE PTR [rbx],cl
   140012691:	add    BYTE PTR [rax],al
   140012693:	add    BYTE PTR [rcx],al
   140012695:	add    BYTE PTR [rax],al
   140012697:	add    BYTE PTR [rcx+0x0],ch
   14001269a:	add    BYTE PTR [rax],al
   14001269c:	add    al,BYTE PTR [rax]
   14001269e:	add    BYTE PTR [rax],al
   1400126a0:	or     BYTE PTR [rax],al
   1400126a2:	add    BYTE PTR [rax],al
   1400126a4:	or     al,0x0
   1400126a6:	add    BYTE PTR [rax],al
   1400126a8:	add    DWORD PTR [rax],eax
   1400126aa:	add    BYTE PTR [rax],al
   1400126ac:	ins    BYTE PTR es:[rdi],dx
   1400126ad:	add    BYTE PTR [rax],al
   1400126af:	add    BYTE PTR [rdx],al
   1400126b1:	add    BYTE PTR [rax],al
   1400126b3:	add    BYTE PTR [rax],cl
   1400126b5:	add    BYTE PTR [rax],al
   1400126b7:	add    BYTE PTR [rdi],cl
   1400126b9:	add    BYTE PTR [rax],al
   1400126bb:	add    BYTE PTR [rax],al
   1400126bd:	add    BYTE PTR [rax],al
   1400126bf:	add    BYTE PTR [rdi+0x0],ch
   1400126c2:	add    BYTE PTR [rax],al
   1400126c4:	add    al,BYTE PTR [rax]
   1400126c6:	add    BYTE PTR [rax],al
   1400126c8:	or     BYTE PTR [rax],al
   1400126ca:	add    BYTE PTR [rax],al
   1400126cc:	adc    BYTE PTR [rax],al
   1400126ce:	add    BYTE PTR [rax],al
   1400126d0:	add    DWORD PTR [rax],eax
   1400126d2:	add    BYTE PTR [rax],al
   1400126d4:	jo     0x1400126d6
   1400126d6:	add    BYTE PTR [rax],al
   1400126d8:	add    al,BYTE PTR [rax]
   1400126da:	add    BYTE PTR [rax],al
   1400126dc:	or     BYTE PTR [rax],al
   1400126de:	add    BYTE PTR [rax],al
   1400126e0:	adc    al,BYTE PTR [rax]
   1400126e2:	add    BYTE PTR [rax],al
   1400126e4:	add    DWORD PTR [rax],eax
   1400126e6:	add    BYTE PTR [rax],al
   1400126e8:	jae    0x1400126ea
   1400126ea:	add    BYTE PTR [rax],al
   1400126ec:	add    al,BYTE PTR [rax]
   1400126ee:	add    BYTE PTR [rax],al
   1400126f0:	or     BYTE PTR [rax],al
   1400126f2:	add    BYTE PTR [rax],al
   1400126f4:	adc    eax,DWORD PTR [rax]
   1400126f6:	add    BYTE PTR [rax],al
   1400126f8:	add    eax,DWORD PTR [rax]
   1400126fa:	add    BYTE PTR [rax],al
   1400126fc:	jbe    0x1400126fe
   1400126fe:	add    BYTE PTR [rax],al
   140012700:	add    al,BYTE PTR [rax]
   140012702:	add    BYTE PTR [rax],al
   140012704:	or     BYTE PTR [rax],al
   140012706:	add    BYTE PTR [rax],al
   140012708:	(bad)  
   140012709:	add    BYTE PTR [rax],al
   14001270b:	add    BYTE PTR [rcx],al
   14001270d:	add    BYTE PTR [rax],al
   14001270f:	add    BYTE PTR [rbp+0x0],bh
   140012712:	add    BYTE PTR [rax],al
   140012714:	add    al,BYTE PTR [rax]
   140012716:	add    BYTE PTR [rax],al
   140012718:	or     BYTE PTR [rax],al
   14001271a:	add    BYTE PTR [rax],al
   14001271c:	sbb    DWORD PTR [rax],eax
   14001271e:	add    BYTE PTR [rax],al
   140012720:	add    DWORD PTR [rax],eax
   140012722:	add    BYTE PTR [rax],al
   140012724:	add    BYTE PTR [rax],0x0
   140012727:	add    BYTE PTR [rdx],al
   140012729:	add    BYTE PTR [rax],al
   14001272b:	add    BYTE PTR [rax],cl
   14001272d:	add    BYTE PTR [rax],al
   14001272f:	add    BYTE PTR [rdx],bl
   140012731:	add    BYTE PTR [rax],al
   140012733:	add    BYTE PTR [rcx],al
   140012735:	add    BYTE PTR [rax],al
   140012737:	add    BYTE PTR [rbx+0x2000000],al
   14001273d:	add    BYTE PTR [rax],al
   14001273f:	add    BYTE PTR [rax],cl
   140012741:	add    BYTE PTR [rax],al
   140012743:	add    BYTE PTR [rbx],ch
   140012745:	add    BYTE PTR [rax],al
   140012747:	add    BYTE PTR [rbx],ch
   140012749:	add    BYTE PTR [rax],al
   14001274b:	add    BYTE PTR [rdx],ch
   14001274d:	add    BYTE PTR [rax],al
   14001274f:	add    BYTE PTR [rax+rax*1],al
   140012752:	add    BYTE PTR [rax],al
   140012754:	sub    eax,DWORD PTR [rax]
   140012756:	add    BYTE PTR [rax],al
   140012758:	sbb    DWORD PTR [rax],eax
   14001275a:	add    BYTE PTR [rax],al
   14001275c:	add    al,BYTE PTR [rax]
   14001275e:	add    BYTE PTR [rax],al
   140012760:	sub    eax,DWORD PTR [rax]
   140012762:	add    BYTE PTR [rax],al
   140012764:	(bad)  
   140012765:	add    BYTE PTR [rax],al
   140012767:	or     BYTE PTR [rax],0x0
   14001276a:	add    BYTE PTR [rax],al
   14001276c:	sub    eax,DWORD PTR [rax]
   14001276e:	add    BYTE PTR [rax],al
   140012770:	(bad)  
   140012771:	add    BYTE PTR [rax],al
   140012773:	or     BYTE PTR [rax],0x0
   140012776:	add    BYTE PTR [rax],al
   140012778:	sub    eax,DWORD PTR [rax]
   14001277a:	add    BYTE PTR [rax],al
   14001277c:	(bad)  
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	or     BYTE PTR [rax],0x0
   140012782:	add    BYTE PTR [rax],al
   140012784:	sub    eax,DWORD PTR [rax]
   140012786:	add    BYTE PTR [rax],al
   140012788:	(bad)  
   140012789:	add    BYTE PTR [rax],al
   14001278b:	or     BYTE PTR [rax],0x0
   14001278e:	add    BYTE PTR [rax],al
   140012790:	sub    eax,DWORD PTR [rax]
   140012792:	add    BYTE PTR [rax],al
   140012794:	or     eax,0xe800000
   140012799:	add    BYTE PTR [rax],al
   14001279b:	add    BYTE PTR [rbx],ch
   14001279d:	add    BYTE PTR [rax],al
   14001279f:	add    BYTE PTR [rbx],ch
   1400127a1:	add    BYTE PTR [rax],al
   1400127a3:	add    BYTE PTR [rdx],cl
   1400127a5:	add    BYTE PTR [rax],al
   1400127a7:	add    BYTE PTR [rcx],dl
   1400127a9:	add    BYTE PTR [rax],al
   1400127ab:	add    BYTE PTR [rbx],ch
   1400127ad:	add    BYTE PTR [rax],al
   1400127af:	add    BYTE PTR [rdx],cl
   1400127b1:	add    BYTE PTR [rax],al
   1400127b3:	add    BYTE PTR [rcx],dl
   1400127b5:	add    BYTE PTR [rax],al
   1400127b7:	add    BYTE PTR [rbx],ch
   1400127b9:	add    BYTE PTR [rax],al
   1400127bb:	add    BYTE PTR [rdx],cl
   1400127bd:	add    BYTE PTR [rax],al
   1400127bf:	add    BYTE PTR [rdx],cl
   1400127c1:	add    BYTE PTR [rax],al
   1400127c3:	add    BYTE PTR [rdx],cl
   1400127c5:	add    BYTE PTR [rax],al
   1400127c7:	add    BYTE PTR [rax+rax*1],dl
   1400127ca:	add    BYTE PTR [rax],al
   1400127cc:	adc    eax,0x16000000
   1400127d1:	add    BYTE PTR [rax],al
   1400127d3:	add    BYTE PTR [rbx],ch
   1400127d5:	add    BYTE PTR [rax],al
   1400127d7:	add    BYTE PTR [rdx],ch
   1400127d9:	add    BYTE PTR [rax],al
   1400127db:	add    BYTE PTR [rax],bl
   1400127dd:	add    BYTE PTR [rax],al
   1400127df:	add    BYTE PTR [rbx],ch
   1400127e1:	add    BYTE PTR [rax],al
   1400127e3:	add    BYTE PTR [rdx],cl
   1400127e5:	add    BYTE PTR [rax],al
   1400127e7:	add    BYTE PTR [rsi],cl
   1400127e9:	add    BYTE PTR [rax],al
   1400127eb:	add    BYTE PTR [rbx],ch
   1400127ed:	add    BYTE PTR [rax],al
   1400127ef:	add    BYTE PTR [rcx],dl
   1400127f1:	add    BYTE PTR [rax],al
   1400127f3:	add    BYTE PTR [rbx],bl
	...
   1400127fd:	add    BYTE PTR [rax],al
   1400127ff:	add    bh,bh
   140012801:	(bad)  
   140012802:	(bad)  
   140012803:	dec    DWORD PTR [rdx]
	...
   14001280d:	add    BYTE PTR [rax],al
   14001280f:	add    BYTE PTR [rax+0x0],ah
   140012812:	add    BYTE PTR [rax],al
   140012814:	add    BYTE PTR [rax],al
   140012816:	add    BYTE PTR [rax],al
   140012818:	(bad)  
   140012819:	(bad)  
   14001281a:	(bad)  
   14001281b:	dec    DWORD PTR [rax]
	...
   140012825:	add    BYTE PTR [rax],al
   140012827:	add    BYTE PTR [rbx+0x0],dl
   14001282a:	add    BYTE PTR [rax],al
   14001282c:	add    BYTE PTR [rax],al
   14001282e:	add    BYTE PTR [rax],al
   140012830:	(bad)  
   140012831:	(bad)  
   140012832:	(bad)  
   140012833:	inc    DWORD PTR [rax]
	...
   14001283d:	add    BYTE PTR [rax],al
   14001283f:	add    BYTE PTR [rax+rax*1+0x0],al
   140012843:	add    BYTE PTR [rax],al
   140012845:	add    BYTE PTR [rax],al
   140012847:	add    bh,bh
   140012849:	(bad)  
   14001284a:	(bad)  
   14001284b:	inc    DWORD PTR [rax+rax*1]
	...
   140012856:	add    BYTE PTR [rax],al
   140012858:	sub    eax,0x0
   14001285d:	add    BYTE PTR [rax],al
   14001285f:	add    BYTE PTR [rcx+0x44],dl
   140012862:	rex.X jne 0x1400128d8
   140012865:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140012867:	fs gs ins BYTE PTR es:[rdi],dx
   14001286a:	add    BYTE PTR [rdx+0x75],ah
   14001286d:	jae    0x1400128b4
   14001286f:	jb     0x1400128e3
   140012871:	outs   dx,DWORD PTR ds:[rsi]
   140012872:	jb     0x140012874
   140012874:	add    BYTE PTR [rbp+riz*2+0x78],dh
   140012878:	je     0x14001287a
   14001287a:	add    BYTE PTR [rax],al
   14001287c:	add    BYTE PTR [rax],al
   14001287e:	add    BYTE PTR [rax],al
   140012880:	(bad)  
	...
   14001288d:	add    BYTE PTR [rax],al
   14001288f:	add    BYTE PTR [rcx],al
   140012891:	add    BYTE PTR [rax],al
   140012893:	add    BYTE PTR [rsi],cl
	...
   1400128b1:	add    BYTE PTR [rax],al
   1400128b3:	add    BYTE PTR [rcx],al
   1400128b5:	add    BYTE PTR [rax],al
   1400128b7:	add    BYTE PTR [rcx],al
   1400128b9:	add    BYTE PTR [rax],al
   1400128bb:	add    BYTE PTR [rcx],al
   1400128bd:	add    BYTE PTR [rax],al
   1400128bf:	add    BYTE PTR [rbx],dl
   1400128c1:	add    BYTE PTR [rax],al
   1400128c3:	add    BYTE PTR [rdx],al
   1400128c5:	add    BYTE PTR [rax],al
   1400128c7:	add    BYTE PTR [rsi],al
   1400128c9:	add    BYTE PTR [rax],al
   1400128cb:	add    BYTE PTR [rbx],ch
   1400128cd:	add    BYTE PTR [rax],al
   1400128cf:	add    BYTE PTR [rdx],cl
   1400128d1:	add    BYTE PTR [rax],al
   1400128d3:	add    BYTE PTR [rbx],al
	...
   1400128dd:	add    BYTE PTR [rax],al
   1400128df:	add    bh,bh
   1400128e1:	(bad)  
   1400128e2:	(bad)  
   1400128e3:	call   QWORD PTR [rdx]
	...
   1400128ed:	add    BYTE PTR [rax],al
   1400128ef:	add    BYTE PTR [rax],bl
   1400128f1:	add    BYTE PTR [rax],al
   1400128f3:	add    BYTE PTR [rax],al
   1400128f5:	add    BYTE PTR [rax],al
   1400128f7:	add    BYTE PTR [rbx+0x65],dl
   1400128fa:	jb     0x140012972
   1400128fc:	imul   esp,DWORD PTR [rbx+0x65],0x6f725073
   140012903:	js     0x14001297e
   140012905:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140012907:	fs gs ins BYTE PTR es:[rdi],dx
   14001290a:	add    BYTE PTR [rax],al
   14001290c:	add    BYTE PTR [rax],al
   14001290e:	add    BYTE PTR [rax],al
   140012910:	(bad)  
	...
   14001294d:	add    BYTE PTR [rax],al
   14001294f:	add    bh,bh
   140012951:	(bad)  
   140012952:	(bad)  
   140012953:	dec    DWORD PTR [rsi]
	...
   14001295d:	add    BYTE PTR [rax],al
   14001295f:	add    BYTE PTR [rax],bl
   140012961:	add    BYTE PTR [rax],al
   140012963:	add    BYTE PTR [rax],al
   140012965:	add    BYTE PTR [rax],al
   140012967:	add    BYTE PTR [rax+0x72],dl
   14001296a:	outs   dx,DWORD PTR ds:[rsi]
   14001296b:	jo     0x1400129d2
   14001296d:	jb     0x1400129e3
   14001296f:	jns    0x1400129b5
   140012971:	imul   esp,DWORD PTR [rcx+0x6c],0x676f
   140012978:	(bad)  
	...
   1400129b5:	add    BYTE PTR [rax],al
   1400129b7:	add    bh,bh
   1400129b9:	(bad)  
   1400129ba:	(bad)  
   1400129bb:	dec    DWORD PTR [rcx]
	...
   1400129c5:	add    BYTE PTR [rax],al
   1400129c7:	add    BYTE PTR [rax],bl
   1400129c9:	add    BYTE PTR [rax],al
   1400129cb:	add    BYTE PTR [rax],al
   1400129cd:	add    BYTE PTR [rax],al
   1400129cf:	add    BYTE PTR [rdi+rbp*2+0x67],cl
   1400129d3:	push   rsi
   1400129d4:	imul   esp,DWORD PTR [rbp+0x77],0x7265
   1400129db:	add    BYTE PTR [rax],al
   1400129dd:	add    BYTE PTR [rax],al
   1400129df:	add    BYTE PTR [rdi],al
	...
   140012a1d:	add    BYTE PTR [rax],al
   140012a1f:	add    bh,bh
   140012a21:	(bad)  
   140012a22:	(bad)  
   140012a23:	dec    DWORD PTR [rdx]
	...
   140012a2d:	add    BYTE PTR [rax],al
   140012a2f:	add    BYTE PTR [rax+0x0],cl
   140012a32:	add    BYTE PTR [rax],al
   140012a34:	add    BYTE PTR [rax],al
   140012a36:	add    BYTE PTR [rax],al
   140012a38:	(bad)  
   140012a39:	(bad)  
   140012a3a:	(bad)  
   140012a3b:	inc    DWORD PTR [rip+0x0]        # 0x140012a41
   140012a41:	add    BYTE PTR [rax],al
   140012a43:	add    BYTE PTR [rax],al
   140012a45:	add    BYTE PTR [rax],al
   140012a47:	add    BYTE PTR [rbx],bh
   140012a49:	add    BYTE PTR [rax],al
   140012a4b:	add    BYTE PTR [rax],al
   140012a4d:	add    BYTE PTR [rax],al
   140012a4f:	add    bh,bh
   140012a51:	(bad)  
   140012a52:	(bad)  
   140012a53:	inc    DWORD PTR [rax]
	...
   140012a5d:	add    BYTE PTR [rax],al
   140012a5f:	add    BYTE PTR [rcx],ch
   140012a61:	add    BYTE PTR [rax],al
   140012a63:	add    BYTE PTR [rax],al
   140012a65:	add    BYTE PTR [rax],al
   140012a67:	add    BYTE PTR [rbp+0x61],cl
   140012a6a:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   140012a71:	ja     0x140012a73
   140012a73:	(bad)  
   140012a74:	(bad)  
   140012a75:	outs   dx,DWORD PTR ds:[rsi]
   140012a76:	jne    0x140012aec
	...
   140012a80:	(bad)  
	...
   140012a8d:	add    BYTE PTR [rax],al
   140012a8f:	add    BYTE PTR [rcx],al
   140012a91:	add    BYTE PTR [rax],al
   140012a93:	add    BYTE PTR [rsi],cl
	...
   140012ab5:	add    BYTE PTR [rax],al
   140012ab7:	add    BYTE PTR [rcx],al
   140012ab9:	add    BYTE PTR [rax],al
   140012abb:	add    BYTE PTR [rax],al
   140012abd:	add    BYTE PTR [rax],al
   140012abf:	add    BYTE PTR [rbx],dl
   140012ac1:	add    BYTE PTR [rax],al
   140012ac3:	add    BYTE PTR [rdx],al
   140012ac5:	add    BYTE PTR [rax],al
   140012ac7:	add    BYTE PTR [rax],cl
   140012ac9:	add    BYTE PTR [rax],al
   140012acb:	add    BYTE PTR [rbx],ch
	...
   140012ad5:	add    BYTE PTR [rax],al
   140012ad7:	add    al,dh
   140012ad9:	(bad)  
   140012ada:	add    DWORD PTR [rax+0x1],eax
   140012add:	add    BYTE PTR [rax],al
   140012adf:	add    BYTE PTR [rax-0x48],bl
   140012ae2:	add    BYTE PTR [rax+0x1],al
	...
   140012aed:	add    BYTE PTR [rax],al
   140012aef:	add    BYTE PTR [rcx],al
	...
   140012af9:	add    BYTE PTR [rax],al
   140012afb:	add    BYTE PTR [rax],cl
   140012afd:	add    BYTE PTR [rdx],al
   140012aff:	add    BYTE PTR [rax],bl
   140012b01:	sub    eax,DWORD PTR [rcx]
   140012b03:	add    al,dh
   140012b05:	sub    al,BYTE PTR [rcx]
	...
   140012b1f:	add    BYTE PTR [rax+rax*1],al
   140012b22:	add    BYTE PTR [rax],al
   140012b24:	xor    BYTE PTR [rbx],ch
   140012b26:	add    DWORD PTR [rax],eax
	...
   140012b30:	pop    rax
   140012b31:	sub    eax,DWORD PTR [rcx]
   140012b33:	add    BYTE PTR [rax-0x1ffffed5],al
   140012b39:	sub    eax,DWORD PTR [rcx]
   140012b3b:	add    BYTE PTR [rax],bh
   140012b3d:	sub    al,0x1
	...
   140012b57:	add    BYTE PTR [rax],cl
   140012b59:	add    BYTE PTR [rdx],al
   140012b5b:	add    BYTE PTR [rbx],al
   140012b5d:	add    BYTE PTR [rax],al
   140012b5f:	add    BYTE PTR [rax],al
   140012b61:	add    BYTE PTR [rax],al
   140012b63:	add    bh,bh
   140012b65:	(bad)  
   140012b66:	(bad)  
   140012b67:	inc    DWORD PTR [rax]
   140012b69:	add    BYTE PTR [rax],al
   140012b6b:	add    BYTE PTR [rax+0x0],al
   140012b6e:	add    BYTE PTR [rax],al
   140012b70:	sbb    BYTE PTR [rbx],ch
   140012b72:	add    DWORD PTR [rax],eax
	...
   140012b80:	xor    BYTE PTR [rax],al
   140012b82:	add    al,BYTE PTR [rax]
   140012b84:	add    al,BYTE PTR [rax]
   140012b86:	add    BYTE PTR [rax],al
   140012b88:	add    BYTE PTR [rax],al
   140012b8a:	add    BYTE PTR [rax],al
   140012b8c:	(bad)  
   140012b8d:	(bad)  
   140012b8e:	(bad)  
   140012b8f:	inc    DWORD PTR [rax]
   140012b91:	add    BYTE PTR [rax],al
   140012b93:	add    BYTE PTR [rax+0x0],al
   140012b96:	add    BYTE PTR [rax],al
   140012b98:	test   al,0x2b
   140012b9a:	add    DWORD PTR [rax],eax
	...
   140012bb0:	add    eax,DWORD PTR [rax]
   140012bb2:	add    BYTE PTR [rax],al
   140012bb4:	shr    BYTE PTR [rbx],0x1
	...
   140012bbf:	add    BYTE PTR [rax-0x1ffffed5],al
   140012bc5:	sub    eax,DWORD PTR [rcx]
   140012bc7:	add    BYTE PTR [rax],bh
   140012bc9:	sub    al,0x1
	...
   140012bdf:	add    BYTE PTR [rax+0x0],bl
   140012be2:	add    al,BYTE PTR [rax]
   140012be4:	add    DWORD PTR [rax],eax
   140012be6:	add    BYTE PTR [rax],al
   140012be8:	add    BYTE PTR [rax],al
   140012bea:	add    BYTE PTR [rax],al
   140012bec:	(bad)  
   140012bed:	(bad)  
   140012bee:	(bad)  
   140012bef:	inc    DWORD PTR [rax]
   140012bf1:	add    BYTE PTR [rax],al
   140012bf3:	add    BYTE PTR [rax+0x0],al
   140012bf6:	add    BYTE PTR [rax],al
   140012bf8:	or     BYTE PTR [rcx+rax*1],ch
	...
   140012c0f:	add    BYTE PTR [rdx],al
   140012c11:	add    BYTE PTR [rax],al
   140012c13:	add    BYTE PTR [rax],ah
   140012c15:	sub    al,0x1
	...
   140012c1f:	add    al,ah
   140012c21:	sub    eax,DWORD PTR [rcx]
   140012c23:	add    BYTE PTR [rax],bh
   140012c25:	sub    al,0x1
	...
   140012c37:	add    BYTE PTR [rax+0x200],cl
   140012c3d:	add    BYTE PTR [rax],al
   140012c3f:	add    BYTE PTR [rax],al
   140012c41:	add    BYTE PTR [rax],al
   140012c43:	add    bh,bh
   140012c45:	(bad)  
   140012c46:	(bad)  
   140012c47:	inc    DWORD PTR [rax]
   140012c49:	add    BYTE PTR [rax],al
   140012c4b:	add    BYTE PTR [rax+0x0],al
   140012c4e:	add    BYTE PTR [rax],al
   140012c50:	(bad)  
   140012c51:	sub    al,0x1
	...
   140012c67:	add    BYTE PTR [rcx],al
   140012c69:	add    BYTE PTR [rax],al
   140012c6b:	add    BYTE PTR [rax+0x2c],bh
   140012c6e:	add    DWORD PTR [rax],eax
	...
   140012c78:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   140012c87:	add    BYTE PTR [rcx],al
	...
   140012c91:	add    BYTE PTR [rax],al
   140012c93:	add    BYTE PTR [rax-0x4ffffe00],ch
   140012c99:	sub    al,0x1
   140012c9b:	add    BYTE PTR [rax+0x12c],cl
	...
   140012cb1:	add    BYTE PTR [rax],al
   140012cb3:	add    BYTE PTR [rcx],al
   140012cb5:	add    BYTE PTR [rax],al
   140012cb7:	add    BYTE PTR [rax+rax*1],al
   140012cba:	add    BYTE PTR [rax],al
   140012cbc:	enter  0x12c,0x0
	...
   140012cc8:	lock sub al,0x1
   140012ccb:	add    BYTE PTR [rax],bl
   140012ccd:	sub    eax,0x2c380001
   140012cd2:	add    DWORD PTR [rax],eax
   140012cd4:	js     0x140012d03
   140012cd6:	add    DWORD PTR [rax],eax
	...
   140012cf0:	test   al,0x0
   140012cf2:	add    al,BYTE PTR [rax]
   140012cf4:	add    eax,DWORD PTR [rax]
   140012cf6:	add    BYTE PTR [rax],al
   140012cf8:	add    BYTE PTR [rax],al
   140012cfa:	add    BYTE PTR [rax],al
   140012cfc:	(bad)  
   140012cfd:	(bad)  
   140012cfe:	(bad)  
   140012cff:	inc    DWORD PTR [rax]
   140012d01:	add    BYTE PTR [rax],al
   140012d03:	add    BYTE PTR [rax+0x0],al
   140012d06:	add    BYTE PTR [rax],al
   140012d08:	mov    al,0x2c
   140012d0a:	add    DWORD PTR [rax],eax
	...
   140012d18:	rol    BYTE PTR [rax],1
   140012d1a:	add    al,BYTE PTR [rax]
   140012d1c:	add    al,BYTE PTR [rax]
   140012d1e:	add    BYTE PTR [rax],al
   140012d20:	add    BYTE PTR [rax],al
   140012d22:	add    BYTE PTR [rax],al
   140012d24:	(bad)  
   140012d25:	(bad)  
   140012d26:	(bad)  
   140012d27:	inc    DWORD PTR [rax]
   140012d29:	add    BYTE PTR [rax],al
   140012d2b:	add    BYTE PTR [rax+0x0],al
   140012d2e:	add    BYTE PTR [rax],al
   140012d30:	rex sub eax,0x1
	...
   140012d42:	add    BYTE PTR [rax],al
   140012d44:	add    DWORD PTR [rax],eax
   140012d46:	add    BYTE PTR [rax],al
   140012d48:	add    eax,DWORD PTR [rax]
   140012d4a:	add    BYTE PTR [rax],al
   140012d4c:	pop    rax
   140012d4d:	sub    eax,0x1
   140012d52:	add    BYTE PTR [rax],al
   140012d54:	add    BYTE PTR [rax],al
   140012d56:	add    BYTE PTR [rax],al
   140012d58:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c392d5f
   140012d5e:	add    DWORD PTR [rax],eax
   140012d60:	js     0x140012d8f
   140012d62:	add    DWORD PTR [rax],eax
	...
   140012d78:	lock add BYTE PTR [rdx],al
   140012d7b:	add    BYTE PTR [rax],al
   140012d7d:	add    BYTE PTR [rax],al
   140012d7f:	add    BYTE PTR [rax],dl
   140012d81:	add    BYTE PTR [rax],al
   140012d83:	add    bh,bh
   140012d85:	(bad)  
   140012d86:	(bad)  
   140012d87:	inc    DWORD PTR [rax]
   140012d89:	add    BYTE PTR [rax],al
   140012d8b:	add    BYTE PTR [rax+0x0],al
   140012d8e:	add    BYTE PTR [rax],al
   140012d90:	movabs al,ds:0x12d
	...
   140012da5:	add    BYTE PTR [rax],al
   140012da7:	add    BYTE PTR [rcx],al
   140012da9:	add    BYTE PTR [rax],al
   140012dab:	add    BYTE PTR [rax+0x12d],bh
   140012db1:	add    BYTE PTR [rax],al
   140012db3:	add    BYTE PTR [rax],al
   140012db5:	add    BYTE PTR [rax],al
   140012db7:	add    al,cl
   140012db9:	sub    eax,0x1
	...
   140012dc6:	add    BYTE PTR [rax],al
   140012dc8:	lock add BYTE PTR [rdx],al
	...
   140012dd3:	add    bh,bh
   140012dd5:	(bad)  
   140012dd6:	(bad)  
   140012dd7:	inc    DWORD PTR [rax]
   140012dd9:	add    BYTE PTR [rax],al
   140012ddb:	add    BYTE PTR [rax+0x0],al
   140012dde:	add    BYTE PTR [rax],al
   140012de0:	movabs al,ds:0x12d
   140012de9:	add    BYTE PTR [rax],al
   140012deb:	add    BYTE PTR [rax],al
   140012ded:	add    BYTE PTR [rax],al
   140012def:	add    BYTE PTR [rcx],al
   140012df1:	add    BYTE PTR [rax],al
   140012df3:	add    BYTE PTR [rax],dl
   140012df5:	add    BYTE PTR [rax],al
   140012df7:	add    BYTE PTR [rax],al
   140012df9:	add    BYTE PTR [rax],al
   140012dfb:	add    BYTE PTR [rax-0x4ffffe00],ch
   140012e01:	sub    al,0x1
   140012e03:	add    al,dh
   140012e05:	sub    eax,0x1
	...
   140012e16:	add    BYTE PTR [rax],al
   140012e18:	add    DWORD PTR [rax],eax
	...
   140012e22:	add    BYTE PTR [rax],al
   140012e24:	sbb    BYTE PTR [rcx],al
   140012e26:	add    al,BYTE PTR [rax]
   140012e28:	rex
   140012e29:	add    DWORD PTR cs:[rax],eax
   140012e2c:	sbb    BYTE PTR [rsi],ch
   140012e2e:	add    DWORD PTR [rax],eax
	...
   140012e44:	add    DWORD PTR [rax],eax
   140012e46:	add    BYTE PTR [rax],al
   140012e48:	add    al,0x0
   140012e4a:	add    BYTE PTR [rax],al
   140012e4c:	pop    rax
   140012e4d:	add    DWORD PTR cs:[rax],eax
	...
   140012e58:	sub    BYTE PTR [rsi],0x1
   140012e5b:	add    BYTE PTR [rax],bl
   140012e5d:	sub    eax,0x2c380001
   140012e62:	add    DWORD PTR [rax],eax
   140012e64:	js     0x140012e93
   140012e66:	add    DWORD PTR [rax],eax
	...
   140012e80:	sbb    BYTE PTR [rcx],al
   140012e82:	add    al,BYTE PTR [rax]
   140012e84:	add    eax,DWORD PTR [rax]
   140012e86:	add    BYTE PTR [rax],al
   140012e88:	add    BYTE PTR [rax],al
   140012e8a:	add    BYTE PTR [rax],al
   140012e8c:	(bad)  
   140012e8d:	(bad)  
   140012e8e:	(bad)  
   140012e8f:	inc    DWORD PTR [rax]
   140012e91:	add    BYTE PTR [rax],al
   140012e93:	add    BYTE PTR [rax+0x0],al
   140012e96:	add    BYTE PTR [rax],al
   140012e98:	rex
   140012e99:	add    DWORD PTR cs:[rax],eax
	...
   140012ea8:	add    DWORD PTR [rax],eax
   140012eaa:	add    BYTE PTR [rax],al
   140012eac:	adc    BYTE PTR [rax],al
   140012eae:	add    BYTE PTR [rax],al
   140012eb0:	add    BYTE PTR [rax],al
   140012eb2:	add    BYTE PTR [rax],al
   140012eb4:	sbb    BYTE PTR [rcx],al
   140012eb6:	add    al,BYTE PTR [rax]
   140012eb8:	rex
   140012eb9:	add    DWORD PTR cs:[rax],eax
   140012ebc:	test   al,0x2e
   140012ebe:	add    DWORD PTR [rax],eax
	...
   140012ed0:	add    DWORD PTR [rax],eax
	...
   140012eda:	add    BYTE PTR [rax],al
   140012edc:	cmp    BYTE PTR [rcx],al
   140012ede:	add    al,BYTE PTR [rax]
   140012ee0:	clc    
   140012ee1:	add    DWORD PTR cs:[rax],eax
   140012ee4:	shr    BYTE PTR [rsi],1
   140012ee6:	add    DWORD PTR [rax],eax
	...
   140012f00:	add    al,0x0
   140012f02:	add    BYTE PTR [rax],al
   140012f04:	adc    BYTE PTR [rdi],ch
   140012f06:	add    DWORD PTR [rax],eax
	...
   140012f10:	cmp    BYTE PTR [rdi],ch
   140012f12:	add    DWORD PTR [rax],eax
   140012f14:	(bad)  
   140012f15:	(bad)  
   140012f16:	add    DWORD PTR [rax],eax
   140012f18:	loopne 0x140012f45
   140012f1a:	add    DWORD PTR [rax],eax
   140012f1c:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   140012f37:	add    BYTE PTR [rax],bh
   140012f39:	add    DWORD PTR [rdx],eax
   140012f3b:	add    BYTE PTR [rbx],al
   140012f3d:	add    BYTE PTR [rax],al
   140012f3f:	add    BYTE PTR [rax],al
   140012f41:	add    BYTE PTR [rax],al
   140012f43:	add    bh,bh
   140012f45:	(bad)  
   140012f46:	(bad)  
   140012f47:	inc    DWORD PTR [rax]
   140012f49:	add    BYTE PTR [rax],al
   140012f4b:	add    BYTE PTR [rax+0x0],al
   140012f4e:	add    BYTE PTR [rax],al
   140012f50:	clc    
   140012f51:	add    DWORD PTR cs:[rax],eax
	...
   140012f60:	(bad)  
   140012f61:	add    DWORD PTR [rdx],eax
   140012f63:	add    BYTE PTR [rdx],al
   140012f65:	add    BYTE PTR [rax],al
   140012f67:	add    BYTE PTR [rax],al
   140012f69:	add    BYTE PTR [rax],al
   140012f6b:	add    bh,bh
   140012f6d:	(bad)  
   140012f6e:	(bad)  
   140012f6f:	inc    DWORD PTR [rax]
   140012f71:	add    BYTE PTR [rax],al
   140012f73:	add    BYTE PTR [rax+0x0],al
   140012f76:	add    BYTE PTR [rax],al
   140012f78:	mov    BYTE PTR [rdi],ch
   140012f7a:	add    DWORD PTR [rax],eax
	...
   140012f90:	add    eax,DWORD PTR [rax]
   140012f92:	add    BYTE PTR [rax],al
   140012f94:	movabs al,ds:0x12f
   140012f9d:	add    BYTE PTR [rax],al
   140012f9f:	add    BYTE PTR [rax+0x2f],ah
   140012fa2:	add    DWORD PTR [rax],eax
   140012fa4:	loopne 0x140012fd1
   140012fa6:	add    DWORD PTR [rax],eax
   140012fa8:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   140012fbf:	add    BYTE PTR [rcx],al
	...
   140012fc9:	add    BYTE PTR [rax],al
   140012fcb:	add    BYTE PTR [rax-0x17fffdff],dl
   140012fd1:	(bad)  
   140012fd2:	add    DWORD PTR [rax],eax
   140012fd4:	shr    BYTE PTR [rdi],0x1
	...
   140012feb:	add    BYTE PTR [rcx],al
   140012fed:	add    BYTE PTR [rax],al
   140012fef:	add    BYTE PTR [rdi],al
   140012ff1:	add    BYTE PTR [rax],al
   140012ff3:	add    BYTE PTR [rax],al
   140012ff5:	xor    BYTE PTR [rcx],al
	...
   140012fff:	add    BYTE PTR [rax+0x30],al
   140013002:	add    DWORD PTR [rax],eax
   140013004:	push   0xffffffffe0000130
   140013009:	xor    BYTE PTR [rcx],al
   14001300b:	add    BYTE PTR [rax+0x31],dl
   14001300e:	add    DWORD PTR [rax],eax
   140013010:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c393017
   140013016:	add    DWORD PTR [rax],eax
   140013018:	js     0x140013047
   14001301a:	add    DWORD PTR [rax],eax
	...
   140013040:	nop
   140013041:	add    DWORD PTR [rdx],eax
   140013043:	add    BYTE PTR [rsi],al
   140013045:	add    BYTE PTR [rax],al
   140013047:	add    BYTE PTR [rax],al
   140013049:	add    BYTE PTR [rax],al
   14001304b:	add    bh,bh
   14001304d:	(bad)  
   14001304e:	(bad)  
   14001304f:	inc    DWORD PTR [rax]
   140013051:	add    BYTE PTR [rax],al
   140013053:	add    BYTE PTR [rax+0x0],al
   140013056:	add    BYTE PTR [rax],al
   140013058:	call   0x14001318c
	...
   140013065:	add    BYTE PTR [rax],al
   140013067:	add    BYTE PTR [rax+0x5000201],bh
   14001306d:	add    BYTE PTR [rax],al
   14001306f:	add    BYTE PTR [rax],al
   140013071:	add    BYTE PTR [rax],al
   140013073:	add    bh,bh
   140013075:	(bad)  
   140013076:	(bad)  
   140013077:	inc    DWORD PTR [rax]
   140013079:	add    BYTE PTR [rax],al
   14001307b:	add    BYTE PTR [rax+0x0],al
   14001307e:	add    BYTE PTR [rax],al
   140013080:	nop
   140013081:	xor    BYTE PTR [rcx],al
	...
   140013093:	add    BYTE PTR [rcx],al
   140013095:	add    BYTE PTR [rax],al
   140013097:	add    BYTE PTR [rsi],al
   140013099:	add    BYTE PTR [rax],al
   14001309b:	add    BYTE PTR [rax+0x130],ch
   1400130a1:	add    BYTE PTR [rax],al
   1400130a3:	add    BYTE PTR [rax],al
   1400130a5:	add    BYTE PTR [rax],al
   1400130a7:	add    BYTE PTR [rax+0x30],ch
   1400130aa:	add    DWORD PTR [rax],eax
   1400130ac:	loopne 0x1400130de
   1400130ae:	add    DWORD PTR [rax],eax
   1400130b0:	push   rax
   1400130b1:	xor    DWORD PTR [rcx],eax
   1400130b3:	add    BYTE PTR [rax],bl
   1400130b5:	sub    eax,0x2c380001
   1400130ba:	add    DWORD PTR [rax],eax
   1400130bc:	js     0x1400130eb
   1400130be:	add    DWORD PTR [rax],eax
	...
   1400130e0:	loopne 0x1400130e3
   1400130e2:	add    al,BYTE PTR [rax]
   1400130e4:	add    al,0x0
   1400130e6:	add    BYTE PTR [rax],al
   1400130e8:	add    BYTE PTR [rax],al
   1400130ea:	add    BYTE PTR [rax],al
   1400130ec:	(bad)  
   1400130ed:	(bad)  
   1400130ee:	(bad)  
   1400130ef:	inc    DWORD PTR [rax]
   1400130f1:	add    BYTE PTR [rax],al
   1400130f3:	add    BYTE PTR [rax+0x0],al
   1400130f6:	add    BYTE PTR [rax],al
   1400130f8:	or     BYTE PTR [rcx],dh
   1400130fa:	add    DWORD PTR [rax],eax
	...
   14001310c:	add    DWORD PTR [rax],eax
   14001310e:	add    BYTE PTR [rax],al
   140013110:	add    eax,0x20000000
   140013115:	xor    DWORD PTR [rcx],eax
	...
   14001311f:	add    al,ah
   140013121:	xor    BYTE PTR [rcx],al
   140013123:	add    BYTE PTR [rax+0x31],dl
   140013126:	add    DWORD PTR [rax],eax
   140013128:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c39312f
   14001312e:	add    DWORD PTR [rax],eax
   140013130:	js     0x14001315f
   140013132:	add    DWORD PTR [rax],eax
	...
   140013150:	adc    BYTE PTR [rdx],al
   140013152:	add    al,BYTE PTR [rax]
   140013154:	add    eax,DWORD PTR [rax]
   140013156:	add    BYTE PTR [rax],al
   140013158:	add    BYTE PTR [rax],al
   14001315a:	add    BYTE PTR [rax],al
   14001315c:	(bad)  
   14001315d:	(bad)  
   14001315e:	(bad)  
   14001315f:	inc    DWORD PTR [rax]
   140013161:	add    BYTE PTR [rax],al
   140013163:	add    BYTE PTR [rax+0x0],al
   140013166:	add    BYTE PTR [rax],al
   140013168:	js     0x14001319b
   14001316a:	add    DWORD PTR [rax],eax
	...
   14001317c:	add    DWORD PTR [rax],eax
   14001317e:	add    BYTE PTR [rax],al
   140013180:	add    al,0x0
   140013182:	add    BYTE PTR [rax],al
   140013184:	nop
   140013185:	xor    DWORD PTR [rcx],eax
	...
   14001318f:	add    BYTE PTR [rax+0x31],dl
   140013192:	add    DWORD PTR [rax],eax
   140013194:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c39319b
   14001319a:	add    DWORD PTR [rax],eax
   14001319c:	js     0x1400131cb
   14001319e:	add    DWORD PTR [rax],eax
	...
   1400131b8:	add    DWORD PTR [rax],eax
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	adc    BYTE PTR [rax],al
   1400131be:	add    BYTE PTR [rax],al
   1400131c0:	add    BYTE PTR [rax],al
   1400131c2:	add    BYTE PTR [rax],al
   1400131c4:	nop
   1400131c5:	add    DWORD PTR [rdx],eax
   1400131c7:	add    al,ch
   1400131c9:	(bad)  
   1400131ca:	add    DWORD PTR [rax],eax
   1400131cc:	mov    eax,0x131
	...
   1400131dd:	add    BYTE PTR [rax],al
   1400131df:	add    BYTE PTR [rcx],al
	...
   1400131e9:	add    BYTE PTR [rax],al
   1400131eb:	add    BYTE PTR [rax],dh
   1400131ed:	add    al,BYTE PTR [rdx]
   1400131ef:	add    BYTE PTR [rax],cl
   1400131f1:	xor    al,BYTE PTR [rcx]
   1400131f3:	add    al,ah
   1400131f5:	xor    DWORD PTR [rcx],eax
	...
   14001320b:	add    BYTE PTR [rcx],al
   14001320d:	add    BYTE PTR [rax],al
   14001320f:	add    BYTE PTR [rdi],al
   140013211:	add    BYTE PTR [rax],al
   140013213:	add    BYTE PTR [rax],ah
   140013215:	xor    al,BYTE PTR [rcx]
	...
   14001321f:	add    BYTE PTR [rax+0x32],ah
   140013222:	add    DWORD PTR [rax],eax
   140013224:	push   0xffffffffe0000130
   140013229:	xor    BYTE PTR [rcx],al
   14001322b:	add    BYTE PTR [rax+0x31],dl
   14001322e:	add    DWORD PTR [rax],eax
   140013230:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c393237
   140013236:	add    DWORD PTR [rax],eax
   140013238:	js     0x140013267
   14001323a:	add    DWORD PTR [rax],eax
	...
   140013260:	xor    BYTE PTR [rdx],al
   140013262:	add    al,BYTE PTR [rax]
   140013264:	(bad)  
   140013265:	add    BYTE PTR [rax],al
   140013267:	add    BYTE PTR [rax],al
   140013269:	add    BYTE PTR [rax],al
   14001326b:	add    bh,bh
   14001326d:	(bad)  
   14001326e:	(bad)  
   14001326f:	inc    DWORD PTR [rax]
   140013271:	add    BYTE PTR [rax],al
   140013273:	add    BYTE PTR [rax+0x0],al
   140013276:	add    BYTE PTR [rax],al
   140013278:	or     BYTE PTR [rdx],dh
   14001327a:	add    DWORD PTR [rax],eax
	...
   140013288:	add    DWORD PTR [rax],eax
   14001328a:	add    BYTE PTR [rax],al
   14001328c:	adc    BYTE PTR [rax],al
   14001328e:	add    BYTE PTR [rax],al
   140013290:	add    BYTE PTR [rax],al
   140013292:	add    BYTE PTR [rax],al
   140013294:	xor    BYTE PTR [rdx],al
   140013296:	add    al,BYTE PTR [rax]
   140013298:	or     BYTE PTR [rdx],dh
   14001329a:	add    DWORD PTR [rax],eax
   14001329c:	mov    BYTE PTR [rdx],dh
   14001329e:	add    DWORD PTR [rax],eax
	...
   1400132b0:	add    DWORD PTR [rax],eax
	...
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	push   rax
   1400132bd:	add    al,BYTE PTR [rdx]
   1400132bf:	add    al,bl
   1400132c1:	xor    al,BYTE PTR [rcx]
   1400132c3:	add    BYTE PTR [rax+0x132],dh
	...
   1400132dd:	add    BYTE PTR [rax],al
   1400132df:	add    BYTE PTR [rdx],al
   1400132e1:	add    BYTE PTR [rax],al
   1400132e3:	add    al,dh
   1400132e5:	xor    al,BYTE PTR [rcx]
	...
   1400132ef:	add    BYTE PTR [rax],cl
   1400132f1:	xor    eax,DWORD PTR [rcx]
   1400132f3:	add    BYTE PTR [rax],bh
   1400132f5:	sub    al,0x1
	...
   140013307:	add    BYTE PTR [rax+0x2],dl
   14001330a:	add    al,BYTE PTR [rax]
   14001330c:	add    DWORD PTR [rax],eax
   14001330e:	add    BYTE PTR [rax],al
   140013310:	add    BYTE PTR [rax],al
   140013312:	add    BYTE PTR [rax],al
   140013314:	(bad)  
   140013315:	(bad)  
   140013316:	(bad)  
   140013317:	inc    DWORD PTR [rax]
   140013319:	add    BYTE PTR [rax],al
   14001331b:	add    BYTE PTR [rax+0x0],al
   14001331e:	add    BYTE PTR [rax],al
   140013320:	fdiv   DWORD PTR [rdx]
   140013322:	add    DWORD PTR [rax],eax
	...
   140013330:	add    DWORD PTR [rax],eax
	...
   14001333a:	add    BYTE PTR [rax],al
   14001333c:	jo     0x140013340
   14001333e:	add    al,BYTE PTR [rax]
   140013340:	pop    rax
   140013341:	xor    eax,DWORD PTR [rcx]
   140013343:	add    BYTE PTR [rax],dh
   140013345:	xor    eax,DWORD PTR [rcx]
	...
   14001335f:	add    BYTE PTR [rdx],al
   140013361:	add    BYTE PTR [rax],al
   140013363:	add    BYTE PTR [rax+0x33],dh
   140013366:	add    DWORD PTR [rax],eax
	...
   140013370:	mov    BYTE PTR [rbx],dh
   140013372:	add    DWORD PTR [rax],eax
   140013374:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   140013387:	add    BYTE PTR [rax+0x2],dh
   14001338a:	add    al,BYTE PTR [rax]
   14001338c:	add    DWORD PTR [rax],eax
   14001338e:	add    BYTE PTR [rax],al
   140013390:	add    BYTE PTR [rax],al
   140013392:	add    BYTE PTR [rax],al
   140013394:	(bad)  
   140013395:	(bad)  
   140013396:	(bad)  
   140013397:	inc    DWORD PTR [rax]
   140013399:	add    BYTE PTR [rax],al
   14001339b:	add    BYTE PTR [rax+0x0],al
   14001339e:	add    BYTE PTR [rax],al
   1400133a0:	pop    rax
   1400133a1:	xor    eax,DWORD PTR [rcx]
	...
   1400133af:	add    BYTE PTR [rcx],al
	...
   1400133b9:	add    BYTE PTR [rax],al
   1400133bb:	add    BYTE PTR [rax-0x27fffdfe],dl
   1400133c1:	xor    eax,DWORD PTR [rcx]
   1400133c3:	add    BYTE PTR [rax+0x133],dh
	...
   1400133d9:	add    BYTE PTR [rax],al
   1400133db:	add    BYTE PTR [rcx],al
   1400133dd:	add    BYTE PTR [rax],al
   1400133df:	add    BYTE PTR [rip+0xfffffffff0000000],al        # 0x1300133e5
   1400133e5:	xor    eax,DWORD PTR [rcx]
	...
   1400133ef:	add    BYTE PTR [rax],ah
   1400133f1:	xor    al,0x1
   1400133f3:	add    BYTE PTR [rax+0x34],cl
   1400133f6:	add    DWORD PTR [rax],eax
   1400133f8:	mov    al,0x34
   1400133fa:	add    DWORD PTR [rax],eax
   1400133fc:	cmp    BYTE PTR [rcx+rax*1],ch
   1400133ff:	add    BYTE PTR [rax],dl
   140013401:	xor    eax,0x1
	...
   14001341e:	add    BYTE PTR [rax],al
   140013420:	nop
   140013421:	add    al,BYTE PTR [rdx]
   140013423:	add    BYTE PTR [rax+rax*1],al
   140013426:	add    BYTE PTR [rax],al
   140013428:	add    BYTE PTR [rax],al
   14001342a:	add    BYTE PTR [rax],al
   14001342c:	(bad)  
   14001342d:	(bad)  
   14001342e:	(bad)  
   14001342f:	inc    DWORD PTR [rax]
   140013431:	add    BYTE PTR [rax],al
   140013433:	add    BYTE PTR [rax+0x0],al
   140013436:	add    BYTE PTR [rax],al
   140013438:	fdiv   DWORD PTR [rbx]
   14001343a:	add    DWORD PTR [rax],eax
	...
   140013448:	mov    eax,0x3000202
   14001344d:	add    BYTE PTR [rax],al
   14001344f:	add    BYTE PTR [rax],al
   140013451:	add    BYTE PTR [rax],al
   140013453:	add    bh,bh
   140013455:	(bad)  
   140013456:	(bad)  
   140013457:	inc    DWORD PTR [rax]
   140013459:	add    BYTE PTR [rax],al
   14001345b:	add    BYTE PTR [rax+0x0],al
   14001345e:	add    BYTE PTR [rax],al
   140013460:	jo     0x140013496
   140013462:	add    DWORD PTR [rax],eax
	...
   140013474:	add    DWORD PTR [rax],eax
   140013476:	add    BYTE PTR [rax],al
   140013478:	add    al,0x0
   14001347a:	add    BYTE PTR [rax],al
   14001347c:	mov    BYTE PTR [rcx+rax*1],dh
	...
   140013487:	add    BYTE PTR [rax+0x34],cl
   14001348a:	add    DWORD PTR [rax],eax
   14001348c:	mov    al,0x34
   14001348e:	add    DWORD PTR [rax],eax
   140013490:	cmp    BYTE PTR [rcx+rax*1],ch
   140013493:	add    BYTE PTR [rax],dl
   140013495:	xor    eax,0x1
	...
   1400134ae:	add    BYTE PTR [rax],al
   1400134b0:	loopne 0x1400134b4
   1400134b2:	add    al,BYTE PTR [rax]
   1400134b4:	add    al,BYTE PTR [rax]
   1400134b6:	add    BYTE PTR [rax],al
   1400134b8:	add    BYTE PTR [rax],al
   1400134ba:	add    BYTE PTR [rax],al
   1400134bc:	(bad)  
   1400134bd:	(bad)  
   1400134be:	(bad)  
   1400134bf:	inc    DWORD PTR [rax]
   1400134c1:	add    BYTE PTR [rax],al
   1400134c3:	add    BYTE PTR [rax+0x0],al
   1400134c6:	add    BYTE PTR [rax],al
   1400134c8:	fdiv   DWORD PTR [rcx+rax*1]
	...
   1400134db:	add    BYTE PTR [rcx],al
   1400134dd:	add    BYTE PTR [rax],al
   1400134df:	add    BYTE PTR [rbx],al
   1400134e1:	add    BYTE PTR [rax],al
   1400134e3:	add    al,dh
   1400134e5:	xor    al,0x1
	...
   1400134ef:	add    BYTE PTR [rax+0x38000134],dh
   1400134f5:	sub    al,0x1
   1400134f7:	add    BYTE PTR [rax],dl
   1400134f9:	xor    eax,0x1
	...
   14001350e:	add    BYTE PTR [rax],al
   140013510:	add    BYTE PTR [rbx],al
   140013512:	add    al,BYTE PTR [rax]
   140013514:	add    BYTE PTR [rax],al
   140013516:	add    BYTE PTR [rax],al
   140013518:	adc    BYTE PTR [rax],al
   14001351a:	add    BYTE PTR [rax],al
   14001351c:	(bad)  
   14001351d:	(bad)  
   14001351e:	(bad)  
   14001351f:	inc    DWORD PTR [rax]
   140013521:	add    BYTE PTR [rax],al
   140013523:	add    BYTE PTR [rax+0x0],al
   140013526:	add    BYTE PTR [rax],al
   140013528:	cmp    BYTE PTR [rip+0x1],dh        # 0x14001352f
	...
   14001353e:	add    BYTE PTR [rax],al
   140013540:	add    DWORD PTR [rax],eax
   140013542:	add    BYTE PTR [rax],al
   140013544:	push   rax
   140013545:	xor    eax,0x1
   14001354a:	add    BYTE PTR [rax],al
   14001354c:	add    BYTE PTR [rax],al
   14001354e:	add    BYTE PTR [rax],al
   140013550:	(bad)  
   140013551:	xor    eax,0x1
	...
   14001355e:	add    BYTE PTR [rax],al
   140013560:	add    BYTE PTR [rbx],al
   140013562:	add    al,BYTE PTR [rax]
	...
   14001356c:	(bad)  
   14001356d:	(bad)  
   14001356e:	(bad)  
   14001356f:	inc    DWORD PTR [rax]
   140013571:	add    BYTE PTR [rax],al
   140013573:	add    BYTE PTR [rax+0x0],al
   140013576:	add    BYTE PTR [rax],al
   140013578:	cmp    BYTE PTR [rip+0x1],dh        # 0x14001357f
	...
   140013586:	add    BYTE PTR [rax],al
   140013588:	add    DWORD PTR [rax],eax
   14001358a:	add    BYTE PTR [rax],al
   14001358c:	adc    BYTE PTR [rax],al
   14001358e:	add    BYTE PTR [rax],al
   140013590:	add    BYTE PTR [rax],al
   140013592:	add    BYTE PTR [rax],al
   140013594:	nop
   140013595:	add    al,BYTE PTR [rdx]
   140013597:	add    al,bl
   140013599:	xor    eax,DWORD PTR [rcx]
   14001359b:	add    BYTE PTR [rax+0x135],cl
	...
   1400135ad:	add    BYTE PTR [rax],al
   1400135af:	add    BYTE PTR [rcx],al
	...
   1400135b9:	add    BYTE PTR [rax],al
   1400135bb:	add    BYTE PTR [rax],ch
   1400135bd:	add    eax,DWORD PTR [rdx]
   1400135bf:	add    al,bl
   1400135c1:	xor    eax,0x35b00001
   1400135c6:	add    DWORD PTR [rax],eax
	...
   1400135dc:	add    DWORD PTR [rax],eax
   1400135de:	add    BYTE PTR [rax],al
   1400135e0:	add    eax,0xf0000000
   1400135e5:	xor    eax,0x1
   1400135ea:	add    BYTE PTR [rax],al
   1400135ec:	add    BYTE PTR [rax],al
   1400135ee:	add    BYTE PTR [rax],al
   1400135f0:	and    BYTE PTR [rsi],dh
   1400135f2:	add    DWORD PTR [rax],eax
   1400135f4:	push   rax
   1400135f5:	xor    DWORD PTR [rcx],eax
   1400135f7:	add    BYTE PTR [rax],bl
   1400135f9:	sub    eax,0x2c380001
   1400135fe:	add    DWORD PTR [rax],eax
   140013600:	js     0x14001362f
   140013602:	add    DWORD PTR [rax],eax
	...
   140013620:	sub    BYTE PTR [rbx],al
   140013622:	add    al,BYTE PTR [rax]
   140013624:	add    al,0x0
   140013626:	add    BYTE PTR [rax],al
   140013628:	add    BYTE PTR [rax],al
   14001362a:	add    BYTE PTR [rax],al
   14001362c:	(bad)  
   14001362d:	(bad)  
   14001362e:	(bad)  
   14001362f:	inc    DWORD PTR [rax]
   140013631:	add    BYTE PTR [rax],al
   140013633:	add    BYTE PTR [rax+0x0],al
   140013636:	add    BYTE PTR [rax],al
   140013638:	fdiv   DWORD PTR [rip+0x1]        # 0x14001363f
	...
   140013646:	add    BYTE PTR [rax],al
   140013648:	add    DWORD PTR [rax],eax
   14001364a:	add    BYTE PTR [rax],al
   14001364c:	adc    BYTE PTR [rax],al
   14001364e:	add    BYTE PTR [rax],al
   140013650:	add    BYTE PTR [rax],al
   140013652:	add    BYTE PTR [rax],al
   140013654:	sub    BYTE PTR [rbx],al
   140013656:	add    al,BYTE PTR [rax]
   140013658:	fdiv   DWORD PTR [rip+0x36480001]        # 0x17649365f
   14001365e:	add    DWORD PTR [rax],eax
	...
   140013670:	add    DWORD PTR [rax],eax
	...
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	rol    BYTE PTR [rax],1
   14001367e:	add    al,BYTE PTR [rax]
   140013680:	rex sub eax,0x36700001
   140013686:	add    DWORD PTR [rax],eax
	...
   140013698:	add    DWORD PTR [rax],eax
   14001369a:	add    BYTE PTR [rax],al
   14001369c:	adc    BYTE PTR [rax],al
   14001369e:	add    BYTE PTR [rax],al
   1400136a0:	add    BYTE PTR [rax],al
   1400136a2:	add    BYTE PTR [rax],al
   1400136a4:	rol    BYTE PTR [rax],1
   1400136a6:	add    al,BYTE PTR [rax]
   1400136a8:	rex sub eax,0x36980001
   1400136ae:	add    DWORD PTR [rax],eax
	...
   1400136c0:	add    DWORD PTR [rax],eax
	...
   1400136ca:	add    BYTE PTR [rax],al
   1400136cc:	xor    BYTE PTR [rax],al
   1400136ce:	add    al,BYTE PTR [rax]
   1400136d0:	test   al,0x2b
   1400136d2:	add    DWORD PTR [rax],eax
   1400136d4:	shl    BYTE PTR [rsi],0x1
	...
   1400136e7:	add    BYTE PTR [rcx],al
	...
   1400136f1:	add    BYTE PTR [rax],al
   1400136f3:	add    BYTE PTR [rax+0x3],bl
   1400136f6:	add    al,BYTE PTR [rax]
   1400136f8:	adc    BYTE PTR [rdi],dh
   1400136fa:	add    DWORD PTR [rax],eax
   1400136fc:	call   0x140013837
	...
   140013715:	add    BYTE PTR [rax],al
   140013717:	add    BYTE PTR [rip+0x28000000],al        # 0x16801371d
   14001371d:	(bad)  
   14001371e:	add    DWORD PTR [rax],eax
	...
   140013728:	pop    rax
   140013729:	(bad)  
   14001372a:	add    DWORD PTR [rax],eax
   14001372c:	xor    BYTE PTR [rdi],0x1
   14001372f:	add    al,ch
   140013731:	(bad)  
   140013732:	add    DWORD PTR [rax],eax
   140013734:	loopne 0x140013761
   140013736:	add    DWORD PTR [rax],eax
   140013738:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   140013757:	add    BYTE PTR [rax+0x3],bl
   14001375a:	add    al,BYTE PTR [rax]
   14001375c:	add    al,0x0
   14001375e:	add    BYTE PTR [rax],al
   140013760:	add    BYTE PTR [rax],al
   140013762:	add    BYTE PTR [rax],al
   140013764:	(bad)  
   140013765:	(bad)  
   140013766:	(bad)  
   140013767:	inc    DWORD PTR [rax]
   140013769:	add    BYTE PTR [rax],al
   14001376b:	add    BYTE PTR [rax+0x0],al
   14001376e:	add    BYTE PTR [rax],al
   140013770:	adc    BYTE PTR [rdi],dh
   140013772:	add    DWORD PTR [rax],eax
	...
   140013780:	mov    BYTE PTR [rbx],al
   140013782:	add    al,BYTE PTR [rax]
   140013784:	add    eax,DWORD PTR [rax]
   140013786:	add    BYTE PTR [rax],al
   140013788:	add    BYTE PTR [rax],al
   14001378a:	add    BYTE PTR [rax],al
   14001378c:	(bad)  
   14001378d:	(bad)  
   14001378e:	(bad)  
   14001378f:	inc    DWORD PTR [rax]
   140013791:	add    BYTE PTR [rax],al
   140013793:	add    BYTE PTR [rax+0x0],al
   140013796:	add    BYTE PTR [rax],al
   140013798:	test   al,0x37
   14001379a:	add    DWORD PTR [rax],eax
	...
   1400137b0:	add    al,0x0
   1400137b2:	add    BYTE PTR [rax],al
   1400137b4:	shl    BYTE PTR [rdi],0x1
	...
   1400137bf:	add    BYTE PTR [rax-0x17fffec9],al
   1400137c5:	(bad)  
   1400137c6:	add    DWORD PTR [rax],eax
   1400137c8:	loopne 0x1400137f5
   1400137ca:	add    DWORD PTR [rax],eax
   1400137cc:	cmp    BYTE PTR [rcx+rax*1],ch
	...
   1400137e7:	add    BYTE PTR [rax+0x2000203],bh
   1400137ed:	add    BYTE PTR [rax],al
   1400137ef:	add    BYTE PTR [rax],al
   1400137f1:	add    BYTE PTR [rax],al
   1400137f3:	add    bh,bh
   1400137f5:	(bad)  
   1400137f6:	(bad)  
   1400137f7:	inc    DWORD PTR [rax]
   1400137f9:	add    BYTE PTR [rax],al
   1400137fb:	add    BYTE PTR [rax+0x0],al
   1400137fe:	add    BYTE PTR [rax],al
   140013800:	adc    BYTE PTR [rax],bh
   140013802:	add    DWORD PTR [rax],eax
	...
   140013818:	add    eax,DWORD PTR [rax]
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	sub    BYTE PTR [rax],bh
   14001381e:	add    DWORD PTR [rax],eax
	...
   140013828:	call   0x120013964
   14001382d:	sub    eax,DWORD PTR [rcx]
   14001382f:	add    BYTE PTR [rax],bh
   140013831:	sub    al,0x1
	...
   140013847:	add    BYTE PTR [rcx],al
	...
   140013851:	add    BYTE PTR [rax],al
   140013853:	add    al,dh
   140013855:	add    eax,DWORD PTR [rdx]
   140013857:	add    BYTE PTR [rax+0x38],dh
   14001385a:	add    DWORD PTR [rax],eax
   14001385c:	rex.W cmp BYTE PTR [rcx],al
	...
   140013877:	add    BYTE PTR [rcx],al
   140013879:	add    BYTE PTR [rax],al
   14001387b:	add    BYTE PTR [rax+0x138],cl
   140013881:	add    BYTE PTR [rax],al
   140013883:	add    BYTE PTR [rax],al
   140013885:	add    BYTE PTR [rax],al
   140013887:	add    BYTE PTR [rax+0x138],bl
	...
   140013895:	add    BYTE PTR [rax],al
   140013897:	add    al,dh
   140013899:	add    eax,DWORD PTR [rdx]
	...
   1400138a3:	add    bh,bh
   1400138a5:	(bad)  
   1400138a6:	(bad)  
   1400138a7:	inc    DWORD PTR [rax]
   1400138a9:	add    BYTE PTR [rax],al
   1400138ab:	add    BYTE PTR [rax+0x0],al
   1400138ae:	add    BYTE PTR [rax],al
   1400138b0:	jo     0x1400138ea
   1400138b2:	add    DWORD PTR [rax],eax
	...
   1400138c0:	add    DWORD PTR [rax],eax
	...
   1400138ca:	add    BYTE PTR [rax],al
   1400138cc:	sbb    BYTE PTR [rdx+rax*1],al
   1400138cf:	add    al,ch
   1400138d1:	cmp    BYTE PTR [rcx],al
   1400138d3:	add    al,al
   1400138d5:	cmp    BYTE PTR [rcx],al
	...
   1400138eb:	add    BYTE PTR [rcx],al
   1400138ed:	add    BYTE PTR [rax],al
   1400138ef:	add    BYTE PTR [rip+0x0],al        # 0x1400138f5
   1400138f5:	cmp    DWORD PTR [rcx],eax
	...
   1400138ff:	add    BYTE PTR [rax],dh
   140013901:	cmp    DWORD PTR [rcx],eax
   140013903:	add    BYTE PTR [rax+0x39],bl
   140013906:	add    DWORD PTR [rax],eax
   140013908:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c39390f
   14001390e:	add    DWORD PTR [rax],eax
   140013910:	js     0x14001393f
   140013912:	add    DWORD PTR [rax],eax
	...
   140013930:	sbb    BYTE PTR [rdx+rax*1],al
   140013933:	add    BYTE PTR [rax+rax*1],al
   140013936:	add    BYTE PTR [rax],al
   140013938:	add    BYTE PTR [rax],al
   14001393a:	add    BYTE PTR [rax],al
   14001393c:	(bad)  
   14001393d:	(bad)  
   14001393e:	(bad)  
   14001393f:	inc    DWORD PTR [rax]
   140013941:	add    BYTE PTR [rax],al
   140013943:	add    BYTE PTR [rax+0x0],al
   140013946:	add    BYTE PTR [rax],al
   140013948:	call   0x140013a85
	...
   140013955:	add    BYTE PTR [rax],al
   140013957:	add    BYTE PTR [rax+0x4],al
   14001395a:	add    al,BYTE PTR [rax]
   14001395c:	add    eax,DWORD PTR [rax]
   14001395e:	add    BYTE PTR [rax],al
   140013960:	add    BYTE PTR [rax],al
   140013962:	add    BYTE PTR [rax],al
   140013964:	(bad)  
   140013965:	(bad)  
   140013966:	(bad)  
   140013967:	inc    DWORD PTR [rax]
   140013969:	add    BYTE PTR [rax],al
   14001396b:	add    BYTE PTR [rax+0x0],al
   14001396e:	add    BYTE PTR [rax],al
   140013970:	cmp    BYTE PTR [rcx],0x1
	...
   140013983:	add    BYTE PTR [rcx],al
   140013985:	add    BYTE PTR [rax],al
   140013987:	add    BYTE PTR [rax+rax*1],al
   14001398a:	add    BYTE PTR [rax],al
   14001398c:	cwde   
   14001398d:	cmp    DWORD PTR [rcx],eax
	...
   140013997:	add    BYTE PTR [rax+0x39],bl
   14001399a:	add    DWORD PTR [rax],eax
   14001399c:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c3939a3
   1400139a2:	add    DWORD PTR [rax],eax
   1400139a4:	js     0x1400139d3
   1400139a6:	add    DWORD PTR [rax],eax
	...
   1400139c0:	add    DWORD PTR [rax],eax
   1400139c2:	add    BYTE PTR [rax],al
   1400139c4:	adc    BYTE PTR [rax],al
   1400139c6:	add    BYTE PTR [rax],al
   1400139c8:	add    BYTE PTR [rax],al
   1400139ca:	add    BYTE PTR [rax],al
   1400139cc:	sbb    BYTE PTR [rdx+rax*1],al
   1400139cf:	add    al,ch
   1400139d1:	cmp    BYTE PTR [rcx],al
   1400139d3:	add    al,al
   1400139d5:	cmp    DWORD PTR [rcx],eax
	...
   1400139e7:	add    BYTE PTR [rcx],al
	...
   1400139f1:	add    BYTE PTR [rax],al
   1400139f3:	add    BYTE PTR [rax+0x4],ah
   1400139f6:	add    al,BYTE PTR [rax]
   1400139f8:	adc    BYTE PTR [rdx],bh
   1400139fa:	add    DWORD PTR [rax],eax
   1400139fc:	call   0x140013b3a
	...
   140013a11:	add    BYTE PTR [rax],al
   140013a13:	add    BYTE PTR [rcx],al
   140013a15:	add    BYTE PTR [rax],al
   140013a17:	add    BYTE PTR [rax+rax*1],al
   140013a1a:	add    BYTE PTR [rax],al
   140013a1c:	sub    BYTE PTR [rdx],bh
   140013a1e:	add    DWORD PTR [rax],eax
	...
   140013a28:	push   rax
   140013a29:	cmp    al,BYTE PTR [rcx]
   140013a2b:	add    BYTE PTR [rax],bl
   140013a2d:	sub    eax,0x2c380001
   140013a32:	add    DWORD PTR [rax],eax
   140013a34:	js     0x140013a63
   140013a36:	add    DWORD PTR [rax],eax
	...
   140013a50:	(bad)  
   140013a51:	add    al,0x2
   140013a53:	add    BYTE PTR [rbx],al
   140013a55:	add    BYTE PTR [rax],al
   140013a57:	add    BYTE PTR [rax],al
   140013a59:	add    BYTE PTR [rax],al
   140013a5b:	add    bh,bh
   140013a5d:	(bad)  
   140013a5e:	(bad)  
   140013a5f:	inc    DWORD PTR [rax]
   140013a61:	add    BYTE PTR [rax],al
   140013a63:	add    BYTE PTR [rax+0x0],al
   140013a66:	add    BYTE PTR [rax],al
   140013a68:	adc    BYTE PTR [rdx],bh
   140013a6a:	add    DWORD PTR [rax],eax
	...
   140013a78:	add    DWORD PTR [rax],eax
   140013a7a:	add    BYTE PTR [rax],al
   140013a7c:	adc    BYTE PTR [rax],al
   140013a7e:	add    BYTE PTR [rax],al
   140013a80:	add    BYTE PTR [rax],al
   140013a82:	add    BYTE PTR [rax],al
   140013a84:	(bad)  
   140013a85:	add    al,0x2
   140013a87:	add    BYTE PTR [rax],dl
   140013a89:	cmp    al,BYTE PTR [rcx]
   140013a8b:	add    BYTE PTR [rax+0x3a],bh
   140013a8e:	add    DWORD PTR [rax],eax
	...
   140013aa0:	add    DWORD PTR [rax],eax
	...
   140013aaa:	add    BYTE PTR [rax],al
   140013aac:	mov    BYTE PTR [rdx+rax*1],al
   140013aaf:	add    al,cl
   140013ab1:	cmp    al,BYTE PTR [rcx]
   140013ab3:	add    BYTE PTR [rax+0x13a],ah
	...
   140013ac9:	add    BYTE PTR [rax],al
   140013acb:	add    BYTE PTR [rcx],al
   140013acd:	add    BYTE PTR [rax],al
   140013acf:	add    BYTE PTR [rax],cl
   140013ad1:	add    BYTE PTR [rax],al
   140013ad3:	add    al,ah
   140013ad5:	cmp    al,BYTE PTR [rcx]
	...
   140013adf:	add    BYTE PTR [rax],ch
   140013ae1:	cmp    eax,DWORD PTR [rcx]
   140013ae3:	add    BYTE PTR [rax+0x30],al
   140013ae6:	add    DWORD PTR [rax],eax
   140013ae8:	push   0xffffffffe0000130
   140013aed:	xor    BYTE PTR [rcx],al
   140013aef:	add    BYTE PTR [rax+0x31],dl
   140013af2:	add    DWORD PTR [rax],eax
   140013af4:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c393afb
   140013afa:	add    DWORD PTR [rax],eax
   140013afc:	js     0x140013b2b
   140013afe:	add    DWORD PTR [rax],eax
	...
   140013b28:	mov    BYTE PTR [rdx+rax*1],al
   140013b2b:	add    BYTE PTR [rdi],al
   140013b2d:	add    BYTE PTR [rax],al
   140013b2f:	add    BYTE PTR [rax],al
   140013b31:	add    BYTE PTR [rax],al
   140013b33:	add    bh,bh
   140013b35:	(bad)  
   140013b36:	(bad)  
   140013b37:	inc    DWORD PTR [rax]
   140013b39:	add    BYTE PTR [rax],al
   140013b3b:	add    BYTE PTR [rax+0x0],al
   140013b3e:	add    BYTE PTR [rax],al
   140013b40:	enter  0x13a,0x0
	...
   140013b50:	add    DWORD PTR [rax],eax
   140013b52:	add    BYTE PTR [rax],al
   140013b54:	adc    BYTE PTR [rax],al
   140013b56:	add    BYTE PTR [rax],al
   140013b58:	add    BYTE PTR [rax],al
   140013b5a:	add    BYTE PTR [rax],al
   140013b5c:	mov    BYTE PTR [rdx+rax*1],al
   140013b5f:	add    al,cl
   140013b61:	cmp    al,BYTE PTR [rcx]
   140013b63:	add    BYTE PTR [rax+0x3b],dl
   140013b66:	add    DWORD PTR [rax],eax
	...
   140013b78:	add    DWORD PTR [rax],eax
	...
   140013b82:	add    BYTE PTR [rax],al
   140013b84:	mov    al,0x4
   140013b86:	add    al,BYTE PTR [rax]
   140013b88:	movabs al,ds:0x13b7800013b
	...
   140013ba1:	add    BYTE PTR [rax],al
   140013ba3:	add    BYTE PTR [rcx],al
   140013ba5:	add    BYTE PTR [rax],al
   140013ba7:	add    BYTE PTR [rip+0xffffffffb8000000],al        # 0xf8013bad
   140013bad:	cmp    eax,DWORD PTR [rcx]
	...
   140013bb7:	add    al,ch
   140013bb9:	cmp    eax,DWORD PTR [rcx]
   140013bbb:	add    BYTE PTR [rax+0x31],dl
   140013bbe:	add    DWORD PTR [rax],eax
   140013bc0:	sbb    BYTE PTR [rip+0x2c380001],ch        # 0x16c393bc7
   140013bc6:	add    DWORD PTR [rax],eax
   140013bc8:	js     0x140013bf7
   140013bca:	add    DWORD PTR [rax],eax
	...
   140013be8:	mov    al,0x4
   140013bea:	add    al,BYTE PTR [rax]
   140013bec:	add    al,0x0
   140013bee:	add    BYTE PTR [rax],al
   140013bf0:	add    BYTE PTR [rax],al
   140013bf2:	add    BYTE PTR [rax],al
   140013bf4:	(bad)  
   140013bf5:	(bad)  
   140013bf6:	(bad)  
   140013bf7:	inc    DWORD PTR [rax]
   140013bf9:	add    BYTE PTR [rax],al
   140013bfb:	add    BYTE PTR [rax+0x0],al
   140013bfe:	add    BYTE PTR [rax],al
   140013c00:	movabs al,ds:0x13b
   140013c09:	add    BYTE PTR [rax],al
   140013c0b:	add    BYTE PTR [rax],al
   140013c0d:	add    BYTE PTR [rax],al
   140013c0f:	add    BYTE PTR [rcx],al
   140013c11:	add    BYTE PTR [rax],al
   140013c13:	add    BYTE PTR [rax],dl
   140013c15:	add    BYTE PTR [rax],al
   140013c17:	add    BYTE PTR [rax],al
   140013c19:	add    BYTE PTR [rax],al
   140013c1b:	add    BYTE PTR [rax-0x5ffffdfc],dh
   140013c21:	cmp    eax,DWORD PTR [rcx]
   140013c23:	add    BYTE PTR [rax],dl
   140013c25:	cmp    al,0x1
	...
   140013c37:	add    BYTE PTR [rcx],al
   140013c39:	add    BYTE PTR [rax],al
   140013c3b:	add    BYTE PTR [rax],dl
   140013c3d:	add    BYTE PTR [rax],al
   140013c3f:	add    BYTE PTR [rax],al
   140013c41:	add    BYTE PTR [rax],al
   140013c43:	add    al,bl
   140013c45:	add    al,0x2
   140013c47:	add    BYTE PTR [rax+0x3c],ah
   140013c4a:	add    DWORD PTR [rax],eax
   140013c4c:	cmp    BYTE PTR [rcx+rax*1],bh
	...
   140013c63:	add    BYTE PTR [rcx],al
   140013c65:	add    BYTE PTR [rax],al
   140013c67:	add    BYTE PTR [rax],cl
   140013c69:	add    BYTE PTR [rax],al
   140013c6b:	add    BYTE PTR [rax+0x13c],al
	...
   140013c7d:	add    BYTE PTR [rax],al
   140013c7f:	add    al,cl
   140013c81:	cmp    al,0x1
   140013c83:	add    al,dh
   140013c85:	cmp    al,0x1
   140013c87:	add    BYTE PTR [rax+0x3d],dh
   140013c8a:	add    DWORD PTR [rax],eax
   140013c8c:	loopne 0x140013cbe
   140013c8e:	add    DWORD PTR [rax],eax
   140013c90:	push   rax
   140013c91:	xor    DWORD PTR [rcx],eax
   140013c93:	add    BYTE PTR [rax],bl
   140013c95:	sub    eax,0x2c380001
   140013c9a:	add    DWORD PTR [rax],eax
   140013c9c:	js     0x140013ccb
   140013c9e:	add    DWORD PTR [rax],eax
	...
   140013cc8:	fadd   DWORD PTR [rdx+rax*1]
   140013ccb:	add    BYTE PTR [rdi],al
   140013ccd:	add    BYTE PTR [rax],al
   140013ccf:	add    BYTE PTR [rax],al
   140013cd1:	add    BYTE PTR [rax],al
   140013cd3:	add    bh,bh
   140013cd5:	(bad)  
   140013cd6:	(bad)  
   140013cd7:	inc    DWORD PTR [rax]
   140013cd9:	add    BYTE PTR [rax],al
   140013cdb:	add    BYTE PTR [rax+0x0],al
   140013cde:	add    BYTE PTR [rax],al
   140013ce0:	(bad)  
   140013ce1:	cmp    al,0x1
	...
   140013cef:	add    al,bh
   140013cf1:	add    al,0x2
   140013cf3:	add    BYTE PTR [rsi],al
   140013cf5:	add    BYTE PTR [rax],al
   140013cf7:	add    BYTE PTR [rax],al
   140013cf9:	add    BYTE PTR [rax],al
   140013cfb:	add    bh,bh
   140013cfd:	(bad)  
   140013cfe:	(bad)  
   140013cff:	inc    DWORD PTR [rax]
   140013d01:	add    BYTE PTR [rax],al
   140013d03:	add    BYTE PTR [rax+0x0],al
   140013d06:	add    BYTE PTR [rax],al
   140013d08:	sbb    BYTE PTR [rip+0x1],bh        # 0x140013d0f
	...
   140013d1a:	add    BYTE PTR [rax],al
   140013d1c:	add    DWORD PTR [rax],eax
   140013d1e:	add    BYTE PTR [rax],al
   140013d20:	(bad)  
   140013d21:	add    BYTE PTR [rax],al
   140013d23:	add    BYTE PTR [rax],dh
   140013d25:	cmp    eax,0x1
   140013d2a:	add    BYTE PTR [rax],al
   140013d2c:	add    BYTE PTR [rax],al
   140013d2e:	add    BYTE PTR [rax],al
   140013d30:	lock cmp al,0x1
   140013d33:	add    BYTE PTR [rax+0x3d],dh
   140013d36:	add    DWORD PTR [rax],eax
   140013d38:	loopne 0x140013d6a
   140013d3a:	add    DWORD PTR [rax],eax
   140013d3c:	push   rax
   140013d3d:	xor    DWORD PTR [rcx],eax
   140013d3f:	add    BYTE PTR [rax],bl
   140013d41:	sub    eax,0x2c380001
   140013d46:	add    DWORD PTR [rax],eax
   140013d48:	js     0x140013d77
   140013d4a:	add    DWORD PTR [rax],eax
	...
   140013d70:	and    BYTE PTR [rip+0x50002],al        # 0x140063d78
   140013d76:	add    BYTE PTR [rax],al
   140013d78:	add    BYTE PTR [rax],al
   140013d7a:	add    BYTE PTR [rax],al
   140013d7c:	(bad)  
   140013d7d:	(bad)  
   140013d7e:	(bad)  
   140013d7f:	inc    DWORD PTR [rax]
   140013d81:	add    BYTE PTR [rax],al
   140013d83:	add    BYTE PTR [rax+0x0],al
   140013d86:	add    BYTE PTR [rax],al
   140013d88:	cwde   
   140013d89:	cmp    eax,0x1
	...
   140013d9a:	add    BYTE PTR [rax],al
   140013d9c:	add    DWORD PTR [rax],eax
   140013d9e:	add    BYTE PTR [rax],al
   140013da0:	(bad)  
   140013da1:	add    BYTE PTR [rax],al
   140013da3:	add    BYTE PTR [rax+0x13d],dh
   140013da9:	add    BYTE PTR [rax],al
   140013dab:	add    BYTE PTR [rax],al
   140013dad:	add    BYTE PTR [rax],al
   140013daf:	add    BYTE PTR [rax+0x3d],dh
   140013db2:	add    DWORD PTR [rax],eax
   140013db4:	loopne 0x140013de6
   140013db6:	add    DWORD PTR [rax],eax
   140013db8:	push   rax
   140013db9:	xor    DWORD PTR [rcx],eax
   140013dbb:	add    BYTE PTR [rax],bl
   140013dbd:	sub    eax,0x2c380001
   140013dc2:	add    DWORD PTR [rax],eax
   140013dc4:	js     0x140013df3
   140013dc6:	add    DWORD PTR [rax],eax
	...
   140013de8:	add    DWORD PTR [rax],eax
	...
   140013df2:	add    BYTE PTR [rax],al
   140013df4:	fadd   DWORD PTR [rdx+rax*1]
   140013df7:	add    BYTE PTR [rax+0x3c],ah
   140013dfa:	add    DWORD PTR [rax],eax
   140013dfc:	call   0x140013f3e
	...
   140013e0d:	add    BYTE PTR [rax],al
   140013e0f:	add    BYTE PTR [rcx],al
	...
   140013e19:	add    BYTE PTR [rax],al
   140013e1b:	add    BYTE PTR [rax+0x5],cl
   140013e1e:	add    al,BYTE PTR [rax]
   140013e20:	cmp    BYTE PTR [rsi],bh
   140013e22:	add    DWORD PTR [rax],eax
   140013e24:	adc    BYTE PTR [rsi],bh
   140013e26:	add    DWORD PTR [rax],eax
	...
   140013e3c:	add    DWORD PTR [rax],eax
   140013e3e:	add    BYTE PTR [rax],al
   140013e40:	add    eax,0x50000000
   140013e45:	add    DWORD PTR ds:[rax],eax
	...
   140013e50:	cmp    BYTE PTR [rsi],0x1
   140013e53:	add    BYTE PTR [rax+0x1800013e],ch
   140013e59:	sub    eax,0x2c380001
   140013e5e:	add    DWORD PTR [rax],eax
   140013e60:	js     0x140013e8f
   140013e62:	add    DWORD PTR [rax],eax
	...
   140013e80:	add    rax,0x40002
   140013e86:	add    BYTE PTR [rax],al
   140013e88:	add    BYTE PTR [rax],al
   140013e8a:	add    BYTE PTR [rax],al
   140013e8c:	(bad)  
   140013e8d:	(bad)  
   140013e8e:	(bad)  
   140013e8f:	inc    DWORD PTR [rax]
   140013e91:	add    BYTE PTR [rax],al
   140013e93:	add    BYTE PTR [rax+0x0],al
   140013e96:	add    BYTE PTR [rax],al
   140013e98:	cmp    BYTE PTR [rsi],bh
   140013e9a:	add    DWORD PTR [rax],eax
	...
   140013ea8:	jo     0x140013eaf
   140013eaa:	add    al,BYTE PTR [rax]
   140013eac:	add    eax,DWORD PTR [rax]
   140013eae:	add    BYTE PTR [rax],al
   140013eb0:	add    BYTE PTR [rax],al
   140013eb2:	add    BYTE PTR [rax],al
   140013eb4:	(bad)  
   140013eb5:	(bad)  
   140013eb6:	(bad)  
   140013eb7:	inc    DWORD PTR [rax]
   140013eb9:	add    BYTE PTR [rax],al
   140013ebb:	add    BYTE PTR [rax+0x0],al
   140013ebe:	add    BYTE PTR [rax],al
   140013ec0:	sar    BYTE PTR [rsi],1
   140013ec2:	add    DWORD PTR [rax],eax
	...
   140013ed4:	add    DWORD PTR [rax],eax
   140013ed6:	add    BYTE PTR [rax],al
   140013ed8:	add    al,0x0
   140013eda:	add    BYTE PTR [rax],al
   140013edc:	call   0x14001401f
   140013ee1:	add    BYTE PTR [rax],al
   140013ee3:	add    BYTE PTR [rax],al
   140013ee5:	add    BYTE PTR [rax],al
   140013ee7:	add    BYTE PTR [rax+0x1800013e],ch
   140013eed:	sub    eax,0x2c380001
   140013ef2:	add    DWORD PTR [rax],eax
   140013ef4:	js     0x140013f23
   140013ef6:	add    DWORD PTR [rax],eax
	...
   140013f10:	add    DWORD PTR [rax],eax
   140013f12:	add    BYTE PTR [rax],al
   140013f14:	adc    BYTE PTR [rax],al
   140013f16:	add    BYTE PTR [rax],al
   140013f18:	add    BYTE PTR [rax],al
   140013f1a:	add    BYTE PTR [rax],al
   140013f1c:	add    rax,0x3e380002
   140013f22:	add    DWORD PTR [rax],eax
   140013f24:	adc    BYTE PTR [rdi],bh
   140013f26:	add    DWORD PTR [rax],eax
	...
   140013f38:	add    DWORD PTR [rax],eax
	...
   140013f42:	add    BYTE PTR [rax],al
   140013f44:	cwde   
   140013f45:	add    eax,0x3f600002
   140013f4a:	add    DWORD PTR [rax],eax
   140013f4c:	cmp    BYTE PTR [rdi],bh
   140013f4e:	add    DWORD PTR [rax],eax
	...
   140013f64:	add    DWORD PTR [rax],eax
   140013f66:	add    BYTE PTR [rax],al
   140013f68:	add    al,0x0
   140013f6a:	add    BYTE PTR [rax],al
   140013f6c:	js     0x140013fad
   140013f6e:	add    DWORD PTR [rax],eax
	...
   140013f78:	movabs al,ds:0x3800012d1800013f
   140013f81:	sub    al,0x1
   140013f83:	add    BYTE PTR [rax+0x2d],bh
   140013f86:	add    DWORD PTR [rax],eax
	...
   140013fa0:	cwde   
   140013fa1:	add    eax,0x30002
   140013fa6:	add    BYTE PTR [rax],al
   140013fa8:	add    BYTE PTR [rax],al
   140013faa:	add    BYTE PTR [rax],al
   140013fac:	(bad)  
   140013fad:	(bad)  
   140013fae:	(bad)  
   140013faf:	inc    DWORD PTR [rax]
   140013fb1:	add    BYTE PTR [rax],al
   140013fb3:	add    BYTE PTR [rax+0x0],al
   140013fb6:	add    BYTE PTR [rax],al
   140013fb8:	(bad)  
   140013fb9:	(bad)  
   140013fba:	add    DWORD PTR [rax],eax
	...
   140013fc8:	add    DWORD PTR [rax],eax
   140013fca:	add    BYTE PTR [rax],al
   140013fcc:	adc    BYTE PTR [rax],al
   140013fce:	add    BYTE PTR [rax],al
   140013fd0:	add    BYTE PTR [rax],al
   140013fd2:	add    BYTE PTR [rax],al
   140013fd4:	cwde   
   140013fd5:	add    eax,0x3f600002
   140013fda:	add    DWORD PTR [rax],eax
   140013fdc:	enter  0x13f,0x0
	...
   140013ff0:	add    DWORD PTR [rax],eax
	...
   140013ffa:	add    BYTE PTR [rax],al
   140013ffc:	sbb    BYTE PTR [rdi],al
   140013ffe:	add    al,BYTE PTR [rax]
   140014000:	sbb    BYTE PTR [rax+0x1],al
   140014003:	add    al,dh
   140014005:	(bad)  
   140014006:	add    DWORD PTR [rax],eax
	...
   140014020:	add    DWORD PTR [rax],eax
   140014022:	add    BYTE PTR [rax],al
   140014024:	xor    BYTE PTR [rax+0x1],al
	...
   14001402f:	add    BYTE PTR [rax+0x40],al
   140014032:	add    DWORD PTR [rax],eax
	...
   140014040:	sbb    BYTE PTR [rdi],al
   140014042:	add    al,BYTE PTR [rax]
	...
   14001404c:	(bad)  
   14001404d:	(bad)  
   14001404e:	(bad)  
   14001404f:	inc    DWORD PTR [rax]
   140014051:	add    BYTE PTR [rax],al
   140014053:	add    BYTE PTR [rax+0x0],al
   140014056:	add    BYTE PTR [rax],al
   140014058:	sbb    BYTE PTR [rax+0x1],al
	...
   140014087:	add    BYTE PTR [rcx],al
   140014089:	or     al,BYTE PTR [rax+rax*1]
   14001408c:	or     dh,BYTE PTR [rcx+rcx*1]
   14001408f:	add    BYTE PTR [rdx],cl
   140014091:	push   rdx
   140014092:	(bad)  
   140014093:	jo     0x140014096
   140014095:	or     al,BYTE PTR [rax+rax*1]
   140014098:	or     dh,BYTE PTR [rbx+rcx*1]
   14001409b:	add    BYTE PTR [rdx],cl
   14001409d:	jb     0x1400140a5
   14001409f:	jo     0x1400140a2
   1400140a1:	or     BYTE PTR [rax+rax*1],al
   1400140a4:	or     BYTE PTR [rdx+0x60037004],dl
   1400140aa:	add    dh,BYTE PTR [rax]
   1400140ac:	and    DWORD PTR [rax],eax
   1400140ae:	add    BYTE PTR [rax],al
   1400140b0:	and    BYTE PTR [rax+rax*1],dl
   1400140b3:	add    BYTE PTR [rdi-0x27ffffec],cl
   1400140b9:	rex add DWORD PTR [rax],eax
   1400140bc:	and    DWORD PTR [rbx],ebp
   1400140be:	(bad)  
   1400140bf:	add    BYTE PTR [rbx],ch
   1400140c1:	je     0x1400140d2
   1400140c3:	add    BYTE PTR [rsi],ah
   1400140c5:	adc    BYTE PTR fs:[rax],al
   1400140c8:	or     BYTE PTR [rcx+rdx*1+0x0],dl
   1400140cc:	and    BYTE PTR [rax+rax*1],dl
   1400140cf:	add    BYTE PTR [rdi-0x27ffffec],cl
   1400140d5:	rex add DWORD PTR [rax],eax
   1400140d8:	add    DWORD PTR [rcx],edx
   1400140da:	(bad)  
   1400140db:	add    BYTE PTR [rcx],dl
   1400140dd:	add    DWORD PTR [rdx],edx
   1400140df:	add    BYTE PTR [rdx],cl
   1400140e1:	lock or al,ah
   1400140e4:	(bad)  
   1400140e5:	rol    BYTE PTR [rax+rax*8],1
   1400140e8:	add    dh,BYTE PTR [rax]
   1400140ea:	add    BYTE PTR [rax],al
   1400140ec:	add    DWORD PTR [rdi],ecx
   1400140ee:	(bad)  
   1400140ef:	add    BYTE PTR [rdi],cl
   1400140f1:	fs or  al,0x0
   1400140f4:	sysenter 
   1400140f6:	or     eax,DWORD PTR [rax]
   1400140f8:	(bad)  
   1400140fa:	or     esi,DWORD PTR [rax+0x1]
   1400140fd:	adc    al,BYTE PTR [rsi]
   1400140ff:	add    BYTE PTR [rdx],dl
   140014101:	fs adc al,0x0
   140014104:	adc    dh,BYTE PTR [rbx+rdx*1]
   140014107:	add    BYTE PTR [rdx],dl
   140014109:	repnz or esi,DWORD PTR [rax+0x1]
   14001410d:	(bad)  
   14001410e:	or     eax,DWORD PTR [rax]
   140014110:	(bad)  
   140014111:	xor    al,0x2f
   140014113:	add    BYTE PTR [rdi],dl
   140014115:	add    DWORD PTR [rsi],esp
   140014117:	add    BYTE PTR [rax],dl
   140014119:	lock (bad) 
   14001411b:	loopne 0x140014129
   14001411d:	ror    BYTE PTR [rdx],1
   14001411f:	ror    BYTE PTR [rax],0x70
   140014122:	(bad)  
   140014123:	(bad)  
   140014124:	(bad)  
   140014125:	push   rax
   140014126:	add    BYTE PTR [rax],al
   140014128:	add    DWORD PTR [rdx],ecx
   14001412a:	add    al,0x0
   14001412c:	or     dh,BYTE PTR [rdx+rcx*1]
   14001412f:	add    BYTE PTR [rdx],cl
   140014131:	jb     0x140014139
   140014133:	jo     0x140014156
   140014135:	add    BYTE PTR [rax],al
   140014137:	add    al,ah
   140014139:	sub    BYTE PTR [rax],al
   14001413b:	add    BYTE PTR [rcx],cl
   14001413d:	sub    DWORD PTR [rax],eax
   14001413f:	add    BYTE PTR [rax+0x41],bl
   140014142:	add    DWORD PTR [rax],eax
   140014144:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b406414c
   14001414a:	(bad)  
   14001414b:	add    al,ah
   14001414d:	sub    BYTE PTR [rax],al
   14001414f:	add    BYTE PTR [rcx],cl
   140014151:	sub    DWORD PTR [rax],eax
   140014153:	add    BYTE PTR [rax+0x41],bl
   140014156:	add    DWORD PTR [rax],eax
   140014158:	add    DWORD PTR [rdi],ecx
   14001415a:	(bad)  
   14001415b:	add    BYTE PTR [rdi],cl
   14001415d:	push   rsp
   14001415e:	or     BYTE PTR [rax],al
   140014160:	sysenter 
   140014162:	(bad)  
   140014163:	add    BYTE PTR [rdi],cl
   140014165:	xor    cl,BYTE PTR [rbx]
   140014167:	(bad)  
   140014168:	and    DWORD PTR [rax],eax
   14001416a:	add    BYTE PTR [rax],al
   14001416c:	jo     0x140014197
   14001416e:	add    BYTE PTR [rax],al
   140014170:	lea    ebp,[rcx]
   140014172:	add    BYTE PTR [rax],al
   140014174:	sbb    BYTE PTR [rax+0x1],cl
   140014177:	add    BYTE PTR [rcx],ah
   140014179:	(bad)  
   14001417a:	(bad)  
   14001417b:	add    BYTE PTR [rsi],dl
   14001417d:	je     0x140014183
   14001417f:	add    BYTE PTR [rdx],cl
   140014181:	fs (bad) 
   140014183:	add    BYTE PTR [rip+0x70000634],al        # 0x1b00147bd
   140014189:	sub    DWORD PTR [rax],eax
   14001418b:	add    BYTE PTR [rbp+0x18000029],cl
   140014191:	add    QWORD PTR [rax],rax
   140014194:	and    DWORD PTR [rax],eax
   140014196:	add    BYTE PTR [rax],al
   140014198:	lock sub DWORD PTR [rax],eax
   14001419b:	add    BYTE PTR [rcx],dl
   14001419d:	sub    al,BYTE PTR [rax]
   14001419f:	add    BYTE PTR [rcx+rax*2+0xa210001],bh
   1400141a6:	add    al,0x0
   1400141a8:	or     al,ah
   1400141aa:	or     al,BYTE PTR [rax]
   1400141ac:	add    eax,0xf0000964
   1400141b1:	sub    DWORD PTR [rax],eax
   1400141b3:	add    BYTE PTR [rcx],dl
   1400141b5:	sub    al,BYTE PTR [rax]
   1400141b7:	add    BYTE PTR [rcx+rax*2+0x8010001],bh
   1400141be:	add    al,0x0
   1400141c0:	or     BYTE PTR [rdx],dh
   1400141c2:	add    al,0x70
   1400141c4:	add    edx,DWORD PTR [rax+0x2]
   1400141c7:	xor    BYTE PTR [rcx],al
   1400141c9:	sbb    cl,BYTE PTR [rdx]
   1400141cb:	add    BYTE PTR [rdx],bl
   1400141cd:	push   rsp
   1400141ce:	or     al,0x0
   1400141d0:	sbb    dh,BYTE PTR [rdx+rcx*1]
   1400141d3:	add    BYTE PTR [rdx],bl
   1400141d5:	xor    dl,BYTE PTR [rsi]
   1400141d7:	loopne 0x1400141ed
   1400141d9:	rcl    BYTE PTR [rdx],1
   1400141db:	rcl    BYTE PTR [rax],0x70
   1400141de:	punpcklbw mm0,DWORD PTR [rcx]
   1400141e1:	sbb    BYTE PTR [rax],cl
   1400141e3:	add    BYTE PTR [rax],bl
   1400141e5:	or     DWORD PTR fs:[rax],eax
   1400141e8:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   1400141ec:	sbb    BYTE PTR [rsi+rax*1],dh
   1400141ef:	add    BYTE PTR [rax],bl
   1400141f1:	xor    dl,BYTE PTR [rax+rsi*2]
   1400141f4:	and    DWORD PTR [rax],eax
   1400141f6:	add    BYTE PTR [rax],al
   1400141f8:	sub    BYTE PTR [rip+0x2d9a0000],0x0        # 0x16d9b41ff
   1400141ff:	add    BYTE PTR [rdi+rax*2],bh
   140014202:	add    DWORD PTR [rax],eax
   140014204:	and    DWORD PTR [rip+0x34050002],eax        # 0x17406420c
   14001420a:	(bad)  
   14001420b:	add    BYTE PTR [rax-0x65ffffd3],al
   140014211:	sub    eax,0x473c0000
   140014216:	add    DWORD PTR [rax],eax
   140014218:	add    DWORD PTR [rdi],ecx
   14001421a:	or     BYTE PTR [rax],al
   14001421c:	rdmsr  
   14001421e:	or     esp,eax
   140014220:	or     eax,edx
   140014222:	(bad)  
   140014223:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361469a
   14001422a:	add    dh,BYTE PTR [rax]
   14001422c:	and    DWORD PTR [rax],eax
   14001422e:	add    BYTE PTR [rax],al
   140014230:	jo     0x140014261
   140014232:	add    BYTE PTR [rax],al
   140014234:	out    0x2f,al
   140014236:	add    BYTE PTR [rax],al
   140014238:	jo     0x14001427c
   14001423a:	add    DWORD PTR [rax],eax
   14001423c:	and    DWORD PTR [rax],eax
   14001423e:	add    al,0x0
   140014240:	add    BYTE PTR [rax+rdx*1+0x0],dh
   140014244:	add    BYTE PTR [rcx+rdx*1+0x0],ah
   140014248:	jo     0x140014279
   14001424a:	add    BYTE PTR [rax],al
   14001424c:	out    0x2f,al
   14001424e:	add    BYTE PTR [rax],al
   140014250:	jo     0x140014294
   140014252:	add    DWORD PTR [rax],eax
   140014254:	and    DWORD PTR [rsi+rax*1],ebx
   140014257:	add    BYTE PTR [rsp+rsi*2],bl
   14001425a:	adc    BYTE PTR [rax],al
   14001425c:	adc    al,0x64
   14001425e:	adc    DWORD PTR [rax],eax
   140014260:	or     BYTE PTR [rax+rbx*1+0x0],dl
   140014264:	jo     0x140014295
   140014266:	add    BYTE PTR [rax],al
   140014268:	out    0x2f,al
   14001426a:	add    BYTE PTR [rax],al
   14001426c:	jo     0x1400142b0
   14001426e:	add    DWORD PTR [rax],eax
   140014270:	add    DWORD PTR [rip+0x10d0005],ecx        # 0x1410e427b
   140014276:	adc    al,BYTE PTR [rax]
   140014278:	(bad)  
   140014279:	rol    BYTE PTR [rax+rax*8],1
   14001427c:	add    dh,BYTE PTR [rax]
   14001427e:	add    BYTE PTR [rax],al
   140014280:	and    DWORD PTR [rax],eax
   140014282:	add    BYTE PTR [rax],al
   140014284:	xor    BYTE PTR [rdx],dh
   140014286:	add    BYTE PTR [rax],al
   140014288:	xor    al,BYTE PTR [r8]
   14001428b:	add    al,cl
   14001428d:	rex.X add DWORD PTR [rax],eax
   140014290:	and    DWORD PTR [rax],eax
   140014292:	add    BYTE PTR [rax],al
   140014294:	xor    al,BYTE PTR [r8]
   140014297:	add    BYTE PTR [rcx],dh
   140014299:	cmp    BYTE PTR [rax],al
   14001429b:	add    BYTE PTR [rdx+rax*2+0x8210001],dh
   1400142a2:	add    al,BYTE PTR [rax]
   1400142a4:	or     ah,al
   1400142a6:	rex.RXB add BYTE PTR [r9+0x32],r8b
   1400142aa:	add    BYTE PTR [rax],al
   1400142ac:	xor    DWORD PTR [rax],edi
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	mov    ah,0x42
   1400142b2:	add    DWORD PTR [rax],eax
   1400142b4:	and    DWORD PTR [rdx+rax*1],eax
   1400142b7:	add    BYTE PTR [rsp+rdx*8],al
   1400142ba:	add    BYTE PTR [rax],sil
   1400142bd:	xor    al,BYTE PTR [rax]
   1400142bf:	add    BYTE PTR [rcx+0x32],al
   1400142c2:	add    BYTE PTR [rax],al
   1400142c4:	enter  0x142,0x0
   1400142c8:	add    DWORD PTR [rsi],ecx
   1400142ca:	(bad)  
   1400142cb:	add    BYTE PTR [rsi],cl
   1400142cd:	add    DWORD PTR [rcx+0x0],eax
   1400142d0:	(bad)  
   1400142d1:	jo     0x1400142d9
   1400142d3:	(bad)  
   1400142d4:	add    eax,0x1300450
   1400142d9:	or     DWORD PTR [rip+0x5e20900],eax        # 0x145e34bdf
   1400142df:	jo     0x1400142e5
   1400142e1:	(bad)  
   1400142e2:	add    edx,DWORD PTR [rax+0x2]
   1400142e5:	xor    BYTE PTR [rax],al
   1400142e7:	add    BYTE PTR [rcx],al
   1400142e9:	adc    al,0xa
   1400142eb:	add    BYTE PTR [rcx+rax*1],dl
   1400142ee:	sub    eax,DWORD PTR [rax]
   1400142f0:	or     eax,0x9e00bf0
   1400142f5:	rol    BYTE PTR [rdi],1
   1400142f7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361476e
   1400142fe:	add    dh,BYTE PTR [rax]
   140014300:	and    DWORD PTR [rax],ecx
   140014302:	add    al,BYTE PTR [rax]
   140014304:	or     ah,ah
   140014306:	(bad)  
   140014307:	add    al,dh
   140014309:	add    BYTE PTR [rax],r8b
   14001430c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001430d:	rex.RX add BYTE PTR [rax],r8b
   140014310:	adc    al,0x43
   140014312:	add    DWORD PTR [rax],eax
   140014314:	add    DWORD PTR [rbx],ebx
   140014316:	or     DWORD PTR [rax],eax
   140014318:	sbb    eax,DWORD PTR [rcx]
   14001431a:	add    BYTE PTR [rax+rsi*8],dl
   14001431e:	adc    dl,al
   140014320:	adc    al,al
   140014322:	(bad)  
   140014323:	jo     0x140014332
   140014325:	(bad)  
   140014326:	or     al,0x50
   140014328:	or     esi,DWORD PTR [rax]
   14001432a:	add    BYTE PTR [rax],al
   14001432c:	and    DWORD PTR [rax],eax
   14001432e:	add    BYTE PTR [rax],al
   140014330:	adc    BYTE PTR [rdx+0x0],dl
   140014333:	add    BYTE PTR [rdx+rdx*2+0x0],dl
   140014337:	add    BYTE PTR [rax+0x21000143],bl
   14001433d:	add    BYTE PTR [rax],al
   14001433f:	add    BYTE PTR [rdx+rdx*2+0x0],dl
   140014343:	add    BYTE PTR [rdi+0x52],ch
   140014346:	add    BYTE PTR [rax],al
   140014348:	test   BYTE PTR [rbx+0x1],al
   14001434b:	add    BYTE PTR [rcx],ah
   14001434d:	add    BYTE PTR [rax],al
   14001434f:	add    BYTE PTR [rdi+0x52],ch
   140014352:	add    BYTE PTR [rax],al
   140014354:	leave  
   140014355:	push   rbx
   140014356:	add    BYTE PTR [rax],al
   140014358:	jo     0x14001439d
   14001435a:	add    DWORD PTR [rax],eax
   14001435c:	and    DWORD PTR [rax],ecx
   14001435e:	add    al,BYTE PTR [rax]
   140014360:	or     BYTE PTR [rbp+riz*1+0x0],dl
   140014364:	outs   dx,DWORD PTR ds:[rsi]
   140014365:	push   rdx
   140014366:	add    BYTE PTR [rax],al
   140014368:	leave  
   140014369:	push   rbx
   14001436a:	add    BYTE PTR [rax],al
   14001436c:	jo     0x1400143b1
   14001436e:	add    DWORD PTR [rax],eax
   140014370:	and    DWORD PTR [rax],ecx
   140014372:	add    al,BYTE PTR [rax]
   140014374:	or     ah,al
   140014376:	(bad)  
   140014377:	add    BYTE PTR [rdx+rdx*2+0x0],dl
   14001437b:	add    BYTE PTR [rdi+0x52],ch
   14001437e:	add    BYTE PTR [rax],al
   140014380:	test   BYTE PTR [rbx+0x1],al
   140014383:	add    BYTE PTR [rcx],ah
   140014385:	or     BYTE PTR [rdx],al
   140014387:	add    BYTE PTR [rax],cl
   140014389:	fs (bad) 
   14001438b:	add    BYTE PTR [rax],dl
   14001438d:	push   rdx
   14001438e:	add    BYTE PTR [rax],al
   140014390:	push   rsp
   140014391:	push   rdx
   140014392:	add    BYTE PTR [rax],al
   140014394:	cwde   
   140014395:	rex.XB add DWORD PTR [r8],eax
   140014398:	add    DWORD PTR [rax*1+0x20010c00],ecx
   14001439f:	add    BYTE PTR [rip+0x27003d0],al        # 0x142714775
   1400143a5:	xor    BYTE PTR [rax],al
   1400143a7:	add    BYTE PTR [rcx],ah
   1400143a9:	add    BYTE PTR [rax],al
   1400143ab:	add    al,al
   1400143ad:	push   rdi
   1400143ae:	add    BYTE PTR [rax],al
   1400143b0:	jrcxz  0x140014409
   1400143b2:	add    BYTE PTR [rax],al
   1400143b4:	int3   
   1400143b5:	rex.XB add DWORD PTR [r8],eax
   1400143b8:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40643c0
   1400143be:	or     al,0x0
   1400143c0:	rcl    BYTE PTR [rdi+0x0],0x0
   1400143c4:	jrcxz  0x14001441d
   1400143c6:	add    BYTE PTR [rax],al
   1400143c8:	int3   
   1400143c9:	rex.XB add DWORD PTR [r8],eax
   1400143cc:	add    DWORD PTR [rdx],ecx
   1400143ce:	add    al,0x0
   1400143d0:	or     dh,BYTE PTR [rsi+rcx*1]
   1400143d3:	add    BYTE PTR [rdx],cl
   1400143d5:	xchg   edx,eax
   1400143d6:	(bad)  
   1400143d7:	jo     0x1400143fa
   1400143d9:	add    BYTE PTR [rax],al
   1400143db:	add    BYTE PTR [rax+0x59],dh
   1400143de:	add    BYTE PTR [rax],al
   1400143e0:	popf   
   1400143e1:	pop    rdx
   1400143e2:	add    BYTE PTR [rax],al
   1400143e4:	sbb    BYTE PTR [rcx+rax*1+0x0],al
   1400143e8:	and    DWORD PTR [rax],eax
   1400143ea:	add    al,BYTE PTR [rax]
   1400143ec:	add    ah,al
   1400143ee:	sbb    BYTE PTR [rax],al
   1400143f0:	jo     0x14001444b
   1400143f2:	add    BYTE PTR [rax],al
   1400143f4:	popf   
   1400143f5:	pop    rdx
   1400143f6:	add    BYTE PTR [rax],al
   1400143f8:	sbb    BYTE PTR [rcx+rax*1+0x0],al
   1400143fc:	and    DWORD PTR [rip+0xffffffffe4250006],esp        # 0x124264408
   140014402:	sbb    DWORD PTR [rax],eax
   140014404:	sbb    eax,0x80018c4
   140014409:	push   rsp
   14001440a:	(bad)  
   14001440b:	add    BYTE PTR [rax+0x59],dh
   14001440e:	add    BYTE PTR [rax],al
   140014410:	popf   
   140014411:	pop    rdx
   140014412:	add    BYTE PTR [rax],al
   140014414:	sbb    BYTE PTR [rcx+rax*1+0x0],al
   140014418:	add    DWORD PTR [rdi],ecx
   14001441a:	(bad)  
   14001441b:	add    BYTE PTR [rdi],cl
   14001441d:	repnz or al,dh
   140014420:	(bad)  
   140014421:	rol    BYTE PTR [rax+rsi*2],1
   140014424:	add    esp,DWORD PTR [rax+0x2]
   140014427:	xor    BYTE PTR [rcx],al
   140014429:	(bad)  
   14001442a:	add    al,BYTE PTR [rax]
   14001442c:	(bad)  
   14001442d:	jb     0x140014431
   14001442f:	xor    BYTE PTR [rcx],ah
   140014431:	add    BYTE PTR [rax],al
   140014433:	add    BYTE PTR [rax+0x5e],al
   140014436:	add    BYTE PTR [rax],al
   140014438:	pop    si
   14001443a:	add    BYTE PTR [rax],al
   14001443c:	push   rsp
   14001443d:	add    DWORD PTR [rax],r8d
   140014440:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4064448
   140014446:	or     BYTE PTR [rax],al
   140014448:	rex pop rsi
   14001444a:	add    BYTE PTR [rax],al
   14001444c:	pop    si
   14001444e:	add    BYTE PTR [rax],al
   140014450:	push   rsp
   140014451:	add    DWORD PTR [rax],r8d
   140014454:	add    DWORD PTR [rsi],eax
   140014456:	add    al,BYTE PTR [rax]
   140014458:	(bad)  
   140014459:	push   rdx
   14001445a:	add    dh,BYTE PTR [rax]
   14001445c:	add    DWORD PTR [rdi],ecx
   14001445e:	(bad)  
   14001445f:	add    BYTE PTR [rdi],cl
   140014461:	fs or  eax,0xc340f00
   140014467:	add    BYTE PTR [rdi],cl
   140014469:	xchg   edx,eax
   14001446a:	or     esi,DWORD PTR [rax+0x21]
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    al,al
   140014471:	(bad)  
   140014472:	add    BYTE PTR [rax],al
   140014474:	retf   
   140014475:	(bad)  
   140014476:	add    BYTE PTR [rax],al
   140014478:	mov    esp,0x21000141
   14001447d:	add    BYTE PTR [rax],al
   14001447f:	add    bl,cl
   140014481:	(bad)  
   140014482:	add    BYTE PTR [rax],al
   140014484:	movsxd eax,DWORD PTR [r8]
   140014487:	add    BYTE PTR [rsp+rax*2+0xd210001],ah
   14001448e:	add    al,0x0
   140014490:	or     eax,0x5000ad4
   140014495:	(bad)  
   140014496:	or     DWORD PTR [rax],eax
   140014498:	retf   
   140014499:	(bad)  
   14001449a:	add    BYTE PTR [rax],al
   14001449c:	movsxd eax,DWORD PTR [r8]
   14001449f:	add    BYTE PTR [rsp+rax*2+0x5210001],ah
   1400144a6:	add    al,BYTE PTR [rax]
   1400144a8:	add    eax,0xc0000864
   1400144ad:	(bad)  
   1400144ae:	add    BYTE PTR [rax],al
   1400144b0:	retf   
   1400144b1:	(bad)  
   1400144b2:	add    BYTE PTR [rax],al
   1400144b4:	mov    esp,0x1000141
   1400144b9:	adc    al,0x8
   1400144bb:	add    BYTE PTR [rsp+riz*2],dl
   1400144be:	or     eax,DWORD PTR [rax]
   1400144c0:	adc    al,0x54
   1400144c2:	or     al,BYTE PTR [rax]
   1400144c4:	adc    al,0x34
   1400144c6:	or     DWORD PTR [rax],eax
   1400144c8:	adc    al,0x52
   1400144ca:	adc    BYTE PTR [rax+0x21],dh
   1400144cd:	add    BYTE PTR [rax],al
   1400144cf:	add    BYTE PTR [rax-0x36ffff9a],dh
   1400144d5:	data16 add BYTE PTR [rax],al
   1400144d8:	lock add DWORD PTR [rax],r8d
   1400144dc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40644e4
   1400144e2:	(bad)  
   1400144e3:	add    BYTE PTR [rax-0x36ffff9a],dh
   1400144e9:	data16 add BYTE PTR [rax],al
   1400144ec:	lock add DWORD PTR [rax],r8d
   1400144f0:	add    DWORD PTR [rbx],edx
   1400144f2:	add    al,0x0
   1400144f4:	adc    esi,DWORD PTR [rdi+rax*1]
   1400144f7:	add    BYTE PTR [rbx],dl
   1400144f9:	xor    cl,BYTE PTR [rdi]
   1400144fb:	(bad)  
   1400144fc:	add    DWORD PTR [rcx],esp
   1400144fe:	or     eax,DWORD PTR [rax]
   140014500:	and    DWORD PTR [rsi*1+0x2c012100],esi
   140014507:	add    BYTE PTR [rdx],bl
   140014509:	lock sbb al,ah
   14001450c:	(bad)  
   14001450d:	rcl    BYTE PTR [rax+rax*8],1
   140014510:	adc    dh,BYTE PTR [rax+0x11]
   140014513:	(bad)  
   140014514:	adc    BYTE PTR [rax+0x0],dl
   140014517:	add    BYTE PTR [rcx],ah
   140014519:	add    BYTE PTR [rax],al
   14001451b:	add    BYTE PTR [rax],al
   14001451d:	outs   dx,DWORD PTR ds:[rsi]
   14001451e:	add    BYTE PTR [rax],al
   140014520:	pop    rdx
   140014521:	outs   dx,DWORD PTR ds:[rsi]
   140014522:	add    BYTE PTR [rax],al
   140014524:	rex.WR
   140014525:	add    DWORD PTR [r8],r8d
   140014528:	and    DWORD PTR [rax],ebp
   14001452a:	or     al,BYTE PTR [rax]
   14001452c:	sub    ah,dh
   14001452e:	pop    rax
   14001452f:	add    BYTE PTR [rax],ah
   140014531:	in     al,0x59
   140014533:	add    BYTE PTR [rax],bl
   140014535:	(bad)  
   140014536:	(bad)  
   140014537:	add    BYTE PTR [rax],dl
   140014539:	(bad)  
   14001453a:	pop    rdi
   14001453b:	add    BYTE PTR [rax],cl
   14001453d:	fs pop rsi
   14001453f:	add    BYTE PTR [rax],al
   140014541:	outs   dx,DWORD PTR ds:[rsi]
   140014542:	add    BYTE PTR [rax],al
   140014544:	pop    rdx
   140014545:	outs   dx,DWORD PTR ds:[rsi]
   140014546:	add    BYTE PTR [rax],al
   140014548:	rex.WR
   140014549:	add    DWORD PTR [r8],r8d
   14001454c:	add    DWORD PTR [rbx],ecx
   14001454e:	add    eax,0x5a010b00
   140014553:	add    BYTE PTR [rax+rsi*2],al
   140014556:	add    edx,DWORD PTR [rax+0x2]
   140014559:	xor    BYTE PTR [rax],al
   14001455b:	add    BYTE PTR [rcx],ah
   14001455d:	add    BYTE PTR [rax],al
   14001455f:	add    BYTE PTR [rax],al
   140014561:	jp     0x140014563
   140014563:	add    cl,ch
   140014565:	jp     0x140014567
   140014567:	add    BYTE PTR [rax+0x21000145],cl
   14001456d:	(bad)  
   14001456e:	(bad)  
   14001456f:	add    BYTE PTR [rdi],bl
   140014571:	xor    BYTE PTR fs:[rax],al
   140014574:	adc    ah,dh
   140014576:	sub    BYTE PTR [rax],al
   140014578:	or     ah,ah
   14001457a:	sub    DWORD PTR [rax],eax
   14001457c:	add    BYTE PTR [rdx+0x0],bh
   14001457f:	add    cl,ch
   140014581:	jp     0x140014583
   140014583:	add    BYTE PTR [rax+0x1000145],cl
   140014589:	sysret 
   14001458b:	add    BYTE PTR [rdi],cl
   14001458d:	add    DWORD PTR [rdx],ebp
   14001458f:	add    BYTE PTR [rax],cl
   140014591:	rol    BYTE PTR [rsi],1
   140014593:	rol    BYTE PTR [rax+rsi*2],0x3
   140014597:	push   rax
   140014598:	add    dh,BYTE PTR [rax]
   14001459a:	add    BYTE PTR [rax],al
   14001459c:	and    DWORD PTR [rax],eax
   14001459e:	add    BYTE PTR [rax],al
   1400145a0:	and    BYTE PTR [rcx-0x7ecf0000],al
   1400145a6:	add    BYTE PTR [rax],al
   1400145a8:	in     al,0x45
   1400145aa:	add    DWORD PTR [rax],eax
   1400145ac:	and    DWORD PTR [rax],eax
   1400145ae:	add    BYTE PTR [rax],al
   1400145b0:	xor    DWORD PTR [rcx-0x7ebc0000],eax
   1400145b6:	add    BYTE PTR [rax],al
   1400145b8:	rol    BYTE PTR [rbp+0x1],1
   1400145bb:	add    BYTE PTR [rcx],ah
   1400145bd:	add    eax,0x34050002
   1400145c2:	(bad)  
   1400145c3:	add    BYTE PTR [rcx],dh
   1400145c5:	add    DWORD PTR [rax],0x814400
   1400145cb:	add    al,dl
   1400145cd:	add    DWORD PTR [r8],r8d
   1400145d0:	and    DWORD PTR [rip+0x54050002],eax        # 0x1940645d8
   1400145d6:	or     BYTE PTR [rax],al
   1400145d8:	and    BYTE PTR [rcx-0x7ecf0000],al
   1400145de:	add    BYTE PTR [rax],al
   1400145e0:	in     al,0x45
   1400145e2:	add    DWORD PTR [rax],eax
   1400145e4:	add    DWORD PTR [rdx],ecx
   1400145e6:	add    al,0x0
   1400145e8:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   1400145ec:	or     dh,BYTE PTR [rdx]
   1400145ee:	(bad)  
   1400145ef:	jo     0x1400145f2
   1400145f1:	adc    al,0xa
   1400145f3:	add    BYTE PTR [rsp+rsi*1],dl
   1400145f6:	adc    eax,0x10b21400
   1400145fb:	lock (bad) 
   1400145fd:	loopne 0x14001460b
   1400145ff:	ror    BYTE PTR [rdx],1
   140014601:	ror    BYTE PTR [rax],0x70
   140014604:	(bad)  
   140014605:	(bad)  
   140014606:	(bad)  
   140014607:	push   rax
   140014608:	add    DWORD PTR [rax+rcx*1],edx
   14001460b:	add    BYTE PTR [rsp+riz*2],dl
   14001460e:	or     al,0x0
   140014610:	adc    al,0x54
   140014612:	or     eax,DWORD PTR [rax]
   140014614:	adc    al,0x34
   140014616:	or     al,BYTE PTR [rax]
   140014618:	adc    al,0x72
   14001461a:	adc    BYTE PTR [rax+0x1],dh
   14001461d:	adc    BYTE PTR [rax],cl
   14001461f:	add    BYTE PTR [rax],dl
   140014621:	xor    al,0x11
   140014623:	add    BYTE PTR [rax],dl
   140014625:	xchg   edx,eax
   140014626:	or     al,0xd0
   140014628:	or     al,al
   14001462a:	or     BYTE PTR [rax+0x7],dh
   14001462d:	(bad)  
   14001462e:	(bad)  
   14001462f:	push   rax
   140014630:	and    DWORD PTR [rax],eax
   140014632:	add    BYTE PTR [rax],al
   140014634:	sbb    dl,BYTE PTR [rcx-0x6eb80000]
   14001463a:	add    BYTE PTR [rax],al
   14001463c:	push   rsp
   14001463d:	rex.RX add DWORD PTR [rax],r8d
   140014640:	and    DWORD PTR [rax],ecx
   140014642:	add    al,BYTE PTR [rax]
   140014644:	or     ah,al
   140014646:	adc    al,0x0
   140014648:	sbb    dl,BYTE PTR [rcx-0x6eb80000]
   14001464e:	add    BYTE PTR [rax],al
   140014650:	push   rsp
   140014651:	rex.RX add DWORD PTR [rax],r8d
   140014654:	and    DWORD PTR [rax],ecx
   140014656:	add    al,BYTE PTR [rax]
   140014658:	or     BYTE PTR [rbx+rbx*1+0x0],ah
   14001465c:	ror    BYTE PTR [rsi-0x6ee60000],0x0
   140014663:	add    BYTE PTR [rax+0x46],ch
   140014666:	add    DWORD PTR [rax],eax
   140014668:	add    DWORD PTR [rip+0x10d0006],ecx        # 0x1410e4674
   14001466e:	adc    eax,0x4d00600
   140014673:	jo     0x140014678
   140014675:	push   rax
   140014676:	add    dh,BYTE PTR [rax]
   140014678:	and    DWORD PTR [rax],eax
   14001467a:	add    BYTE PTR [rax],al
   14001467c:	rcl    BYTE PTR [rax+rax*1+0x94f400],0x0
   140014684:	movabs al,ds:0xa00040a21000146
   14001468d:	or     DWORD PTR fs:[rax],eax
   140014690:	add    eax,0xc0000854
   140014695:	xchg   esp,eax
   140014696:	add    BYTE PTR [rax],al
   140014698:	hlt    
   140014699:	xchg   esp,eax
   14001469a:	add    BYTE PTR [rax],al
   14001469c:	movabs al,ds:0x1000061001000146
   1400146a5:	je     0x1400146b2
   1400146a7:	add    BYTE PTR [rax],dl
   1400146a9:	xor    al,0xa
   1400146ab:	add    BYTE PTR [rax],dl
   1400146ad:	push   rdx
   1400146ae:	or     al,0xc0
   1400146b0:	add    DWORD PTR [rsi],eax
   1400146b2:	add    al,BYTE PTR [rax]
   1400146b4:	(bad)  
   1400146b5:	xor    al,BYTE PTR [rdx]
   1400146b7:	xor    BYTE PTR [rcx],al
   1400146b9:	or     al,0x6
   1400146bb:	add    BYTE PTR [rsp+rsi*1],cl
   1400146be:	or     al,BYTE PTR [rax]
   1400146c0:	or     al,0x52
   1400146c2:	or     BYTE PTR [rax+0x7],dh
   1400146c5:	(bad)  
   1400146c6:	(bad)  
   1400146c7:	push   rax
   1400146c8:	add    DWORD PTR [rdi],ecx
   1400146ca:	(bad)  
   1400146cb:	add    BYTE PTR [rdi],cl
   1400146cd:	or     DWORD PTR fs:[rax],eax
   1400146d0:	sysenter 
   1400146d2:	or     BYTE PTR [rax],al
   1400146d4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400146d7:	jo     0x1400146da
   1400146d9:	or     DWORD PTR [rbx],eax
   1400146db:	add    BYTE PTR [rcx],cl
   1400146dd:	add    DWORD PTR [rdx],edx
   1400146df:	add    BYTE PTR [rdx],al
   1400146e1:	jo     0x1400146e3
   1400146e3:	add    BYTE PTR [rcx],al
   1400146e5:	(bad)  
   1400146e6:	add    al,BYTE PTR [rax]
   1400146e8:	(bad)  
   1400146e9:	xchg   edx,eax
   1400146ea:	add    dh,BYTE PTR [rax]
   1400146ec:	add    DWORD PTR [rbx],ecx
   1400146ee:	(bad)  
   1400146ef:	add    BYTE PTR [rbx],cl
   1400146f1:	push   rdx
   1400146f2:	(bad)  
   1400146f3:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143614b6a
   1400146fa:	add    dh,BYTE PTR [rax]
   1400146fc:	and    DWORD PTR [rax],eax
   1400146fe:	add    BYTE PTR [rax],al
   140014700:	add    BYTE PTR [rcx-0x5dd20000],ah
   140014706:	add    BYTE PTR [rax],al
   140014708:	xor    BYTE PTR [rdi+0x1],al
   14001470b:	add    BYTE PTR [rcx],ah
   14001470d:	(bad)  
   14001470e:	or     al,BYTE PTR [rax]
   140014710:	(bad)  
   140014711:	and    BYTE PTR fs:[rax],al
   140014714:	and    ah,dl
   140014716:	(bad)  
   140014717:	add    BYTE PTR [rax],bl
   140014719:	(bad)  
   14001471a:	(bad)  
   14001471b:	add    BYTE PTR [rax],dl
   14001471d:	push   rsp
   14001471e:	and    DWORD PTR [rax],eax
   140014720:	or     BYTE PTR ds:0xa10000,dh
   140014727:	add    BYTE PTR [rsi],ch
   140014729:	movabs ds:0xc01000147300000,al
   140014732:	add    eax,DWORD PTR [rax]
   140014734:	or     al,0x1
   140014736:	and    al,BYTE PTR [rax]
   140014738:	add    eax,0x1000070
   14001473d:	add    al,0x1
   14001473f:	add    BYTE PTR [rdx+riz*2],al
   140014742:	add    BYTE PTR [rax],al
   140014744:	add    DWORD PTR [rax+rcx*1],edx
   140014747:	add    BYTE PTR [rsp+riz*2],dl
   14001474a:	or     BYTE PTR [rax],al
   14001474c:	adc    al,0x54
   14001474e:	(bad)  
   14001474f:	add    BYTE PTR [rsp+rsi*1],dl
   140014752:	(bad)  
   140014753:	add    BYTE PTR [rdx+rsi*1],dl
   140014756:	adc    BYTE PTR [rax+0x1],dh
   140014759:	clts   
   14001475b:	add    BYTE PTR [rdi],cl
   14001475d:	fs (bad) 
   14001475f:	add    BYTE PTR [rdi],cl
   140014761:	xor    al,0x6
   140014763:	add    BYTE PTR [rdi],cl
   140014765:	xor    cl,BYTE PTR [rbx]
   140014767:	jo     0x14001477a
   140014769:	(bad)  
   14001476a:	add    al,BYTE PTR [rax]
   14001476c:	(bad)  
   14001476d:	xor    al,BYTE PTR [rdx]
   14001476f:	xor    BYTE PTR [rdx+0x10000bd],bh
   140014775:	add    BYTE PTR [rax],al
   140014777:	add    BYTE PTR [rbx],dl
   140014779:	mov    ecx,0xb9790000
   14001477e:	add    BYTE PTR [rax],al
   140014780:	add    dl,al
   140014782:	add    BYTE PTR [rax],al
   140014784:	add    BYTE PTR [rax],al
   140014786:	add    BYTE PTR [rax],al
   140014788:	or     DWORD PTR [rip+0x640d0005],ecx        # 0x1a40e4793
   14001478e:	(bad)  
   14001478f:	add    BYTE PTR [rip+0x6001401],cl        # 0x146015b96
   140014795:	jo     0x140014797
   140014797:	add    BYTE PTR [rdx+0x20000bd],bh
   14001479d:	add    BYTE PTR [rax],al
   14001479f:	add    BYTE PTR [rsi],bl
   1400147a1:	mov    edx,0xba2a0000
   1400147a6:	add    BYTE PTR [rax],al
   1400147a8:	add    DWORD PTR [rax],eax
   1400147aa:	add    BYTE PTR [rax],al
   1400147ac:	cld    
   1400147ad:	mov    ebx,0xba2a0000
   1400147b2:	add    BYTE PTR [rax],al
   1400147b4:	int    0xbb
   1400147b6:	add    BYTE PTR [rax],al
   1400147b8:	sbb    edx,eax
   1400147ba:	add    BYTE PTR [rax],al
   1400147bc:	int    0xbb
   1400147be:	add    BYTE PTR [rax],al
   1400147c0:	or     DWORD PTR [rdi],edx
   1400147c2:	(bad)  
   1400147c3:	add    BYTE PTR [rdi],dl
   1400147c5:	xor    al,0xd
   1400147c7:	add    BYTE PTR [rdi],dl
   1400147c9:	jb     0x1400147de
   1400147cb:	rcl    BYTE PTR [rcx],0x70
   1400147ce:	adc    BYTE PTR [rax-0x46],ah
   1400147d1:	mov    ebp,0x10000
   1400147d6:	add    BYTE PTR [rax],al
   1400147d8:	xor    edi,DWORD PTR [rbp-0x42b30000]
   1400147de:	add    BYTE PTR [rax],al
   1400147e0:	xor    eax,0x4d0000c2
   1400147e5:	mov    ebp,0x6010000
   1400147ea:	add    al,BYTE PTR [rax]
   1400147ec:	(bad)  
   1400147ed:	xor    al,BYTE PTR [rdx]
   1400147ef:	push   rax
   1400147f0:	adc    DWORD PTR [rax],ebx
   1400147f2:	add    eax,0x14621800
   1400147f7:	rcl    BYTE PTR [rdx],0x70
   1400147fa:	adc    DWORD PTR [rax+0x10],esp
   1400147fd:	xor    BYTE PTR [rax],al
   1400147ff:	add    BYTE PTR [rdx+0x10000bd],bh
   140014805:	add    BYTE PTR [rax],al
   140014807:	add    BYTE PTR [rdi-0x4fffff43],cl
   14001480d:	mov    ebp,0xc2740000
   140014812:	add    BYTE PTR [rax],al
   140014814:	add    BYTE PTR [rax],al
   140014816:	add    BYTE PTR [rax],al
   140014818:	add    DWORD PTR [rcx+rax*1],eax
   14001481b:	add    BYTE PTR [rdx+rax*2],al
   14001481e:	add    BYTE PTR [rax],al
   140014820:	add    DWORD PTR [rdx],ecx
   140014822:	add    al,0x0
   140014824:	or     dh,BYTE PTR [rsi+rax*1]
   140014827:	add    BYTE PTR [rdx],cl
   140014829:	xor    al,BYTE PTR [rsi]
   14001482b:	jo     0x140014836
   14001482d:	add    al,0x1
   14001482f:	add    BYTE PTR [rdx+rax*2],al
   140014832:	add    BYTE PTR [rax],al
   140014834:	mov    edx,0x10000bd
   140014839:	add    BYTE PTR [rax],al
   14001483b:	add    BYTE PTR [rdi],dh
   14001483d:	mov    edi,0xbf6a0000
   140014842:	add    BYTE PTR [rax],al
   140014844:	movabs al,ds:0x10000bf6a0000c2
   14001484d:	or     al,BYTE PTR [rax+rax*1]
   140014850:	or     dh,BYTE PTR [rax+rcx*1]
   140014853:	add    BYTE PTR [rdx],cl
   140014855:	xor    al,BYTE PTR [rsi]
   140014857:	jo     0x14001485a
   140014859:	sbb    DWORD PTR [rdx],ecx
   14001485b:	add    BYTE PTR [rcx],bl
   14001485d:	je     0x14001486c
   14001485f:	add    BYTE PTR [rcx],bl
   140014861:	fs or  al,0x0
   140014864:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140014868:	sbb    DWORD PTR [rdx+rcx*1],esi
   14001486b:	add    BYTE PTR [rcx],bl
   14001486d:	jb     0x140014884
   14001486f:	shl    BYTE PTR [rcx],0x0
   140014872:	add    BYTE PTR [rax],al
   140014874:	loopne 0x140014836
   140014876:	add    BYTE PTR [rax],al
   140014878:	push   rbx
   140014879:	rol    DWORD PTR [rax],0x0
   14001487c:	xchg   esp,eax
   14001487d:	add    QWORD PTR [rax],rax
   140014880:	and    DWORD PTR [rip+0x54050002],eax        # 0x194064888
   140014886:	or     eax,DWORD PTR [rax]
   140014888:	loopne 0x14001484a
   14001488a:	add    BYTE PTR [rax],al
   14001488c:	push   rbx
   14001488d:	rol    DWORD PTR [rax],0x0
   140014890:	xchg   esp,eax
   140014891:	add    QWORD PTR [rax],rax
   140014894:	add    DWORD PTR [rsi+0xa],eax
   140014897:	add    BYTE PTR [rsi-0x3c],al
   14001489a:	(bad)  
   14001489b:	add    BYTE PTR [rcx+0x74],al
   14001489e:	(bad)  
   14001489f:	add    BYTE PTR [rdx],bh
   1400148a1:	fs or  al,0x0
   1400148a4:	xor    eax,0x6000a34
   1400148a9:	jb     0x1400148ad
   1400148ab:	shl    BYTE PTR [rax],1
   1400148ad:	push   rbx
   1400148ae:	add    DWORD PTR [rax],eax
	...
   1400148b8:	fs mov eax,0xd9d00001
   1400148be:	add    BYTE PTR [rax],al
   1400148c0:	loopne 0x140014914
   1400148c2:	add    DWORD PTR [rax],eax
	...
   1400148cc:	cmp    BYTE PTR [rcx-0x267fffff],0x0
   1400148d3:	add    BYTE PTR [rax+0x151],ah
   1400148d9:	add    BYTE PTR [rax],al
   1400148db:	add    BYTE PTR [rax],al
   1400148dd:	add    BYTE PTR [rax],al
   1400148df:	add    BYTE PTR [rdx],ch
   1400148e1:	rol    DWORD PTR [rcx],0x0
   1400148e4:	rex fadd DWORD PTR [rax]
   1400148e7:	add    BYTE PTR [rax+0x160],bh
   1400148ed:	add    BYTE PTR [rax],al
   1400148ef:	add    BYTE PTR [rax],al
   1400148f1:	add    BYTE PTR [rax],al
   1400148f3:	add    BYTE PTR [rdx-0x3d],cl
   1400148f6:	add    DWORD PTR [rax],eax
   1400148f8:	pop    rax
   1400148f9:	out    0x0,eax
   1400148fb:	add    BYTE PTR [rax+0x14a],dh
   140014901:	add    BYTE PTR [rax],al
   140014903:	add    BYTE PTR [rax],al
   140014905:	add    BYTE PTR [rax],al
   140014907:	add    BYTE PTR [rax+0x500001f2],dl
   14001490d:	rol    DWORD PTR [rax],1
   14001490f:	add    al,al
   140014911:	add    QWORD PTR [r8],rax
	...
   14001491c:	shl    dl,cl
   14001491e:	add    DWORD PTR [rax],eax
   140014920:	(bad)  
   140014921:	rol    BYTE PTR [rax],1
   140014923:	add    BYTE PTR [rax+0x49],ah
   140014926:	add    DWORD PTR [rax],eax
	...
   140014930:	add    ch,dh
   140014932:	add    DWORD PTR [rax],eax
   140014934:	add    al,dl
   140014936:	add    BYTE PTR [rax],al
   140014938:	and    BYTE PTR [rcx+0x1],ah
	...
   140014943:	add    BYTE PTR [rsi*8-0x183fffff],ah
	...
   14001495e:	add    BYTE PTR [rax],al
   140014960:	fs cmc 
   140014962:	add    DWORD PTR [rax],eax
   140014964:	add    BYTE PTR [rax],al
   140014966:	add    BYTE PTR [rax],al
   140014968:	rex.X cmc 
   14001496a:	add    DWORD PTR [rax],eax
   14001496c:	add    BYTE PTR [rax],al
   14001496e:	add    BYTE PTR [rax],al
   140014970:	out    0xf4,al
   140014972:	add    DWORD PTR [rax],eax
   140014974:	add    BYTE PTR [rax],al
   140014976:	add    BYTE PTR [rax],al
   140014978:	shl    ah,1
   14001497a:	add    DWORD PTR [rax],eax
   14001497c:	add    BYTE PTR [rax],al
   14001497e:	add    BYTE PTR [rax],al
   140014980:	mov    edx,0x1f4
   140014985:	add    BYTE PTR [rax],al
   140014987:	add    BYTE PTR [rdx+0x1f4],ch
   14001498d:	add    BYTE PTR [rax],al
   14001498f:	add    BYTE PTR [rax+0x1f4],dl
   140014995:	add    BYTE PTR [rax],al
   140014997:	add    BYTE PTR [rdx-0xc],dh
   14001499a:	add    DWORD PTR [rax],eax
   14001499c:	add    BYTE PTR [rax],al
   14001499e:	add    BYTE PTR [rax],al
   1400149a0:	(bad)  
   1400149a1:	hlt    
   1400149a2:	add    DWORD PTR [rax],eax
   1400149a4:	add    BYTE PTR [rax],al
   1400149a6:	add    BYTE PTR [rax],al
   1400149a8:	pop    rax
   1400149a9:	hlt    
   1400149aa:	add    DWORD PTR [rax],eax
   1400149ac:	add    BYTE PTR [rax],al
   1400149ae:	add    BYTE PTR [rax],al
   1400149b0:	pop    rax
   1400149b1:	cmc    
   1400149b2:	add    DWORD PTR [rax],eax
	...
   1400149c0:	js     0x1400149b5
   1400149c2:	add    DWORD PTR [rax],eax
   1400149c4:	add    BYTE PTR [rax],al
   1400149c6:	add    BYTE PTR [rax],al
   1400149c8:	jo     0x1400149bd
   1400149ca:	add    DWORD PTR [rax],eax
   1400149cc:	add    BYTE PTR [rax],al
   1400149ce:	add    BYTE PTR [rax],al
   1400149d0:	(bad)  
   1400149d2:	add    DWORD PTR [rax],eax
   1400149d4:	add    BYTE PTR [rax],al
   1400149d6:	add    BYTE PTR [rax],al
   1400149d8:	push   rdx
   1400149d9:	repz add DWORD PTR [rax],eax
   1400149dc:	add    BYTE PTR [rax],al
   1400149de:	add    BYTE PTR [rax],al
   1400149e0:	rex.R
   1400149e1:	repz add DWORD PTR [rax],eax
   1400149e4:	add    BYTE PTR [rax],al
   1400149e6:	add    BYTE PTR [rax],al
   1400149e8:	xor    dh,bl
   1400149ea:	add    DWORD PTR [rax],eax
   1400149ec:	add    BYTE PTR [rax],al
   1400149ee:	add    BYTE PTR [rax],al
   1400149f0:	sub    bl,dh
   1400149f2:	add    DWORD PTR [rax],eax
   1400149f4:	add    BYTE PTR [rax],al
   1400149f6:	add    BYTE PTR [rax],al
   1400149f8:	and    bl,dh
   1400149fa:	add    DWORD PTR [rax],eax
   1400149fc:	add    BYTE PTR [rax],al
   1400149fe:	add    BYTE PTR [rax],al
   140014a00:	xchg   bl,dh
   140014a02:	add    DWORD PTR [rax],eax
   140014a04:	add    BYTE PTR [rax],al
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	add    bl,dh
   140014a0a:	add    DWORD PTR [rax],eax
   140014a0c:	add    BYTE PTR [rax],al
   140014a0e:	add    BYTE PTR [rax],al
   140014a10:	div    dl
   140014a12:	add    DWORD PTR [rax],eax
   140014a14:	add    BYTE PTR [rax],al
   140014a16:	add    BYTE PTR [rax],al
   140014a18:	fdivrp st(2),st
   140014a1a:	add    DWORD PTR [rax],eax
   140014a1c:	add    BYTE PTR [rax],al
   140014a1e:	add    BYTE PTR [rax],al
   140014a20:	enter  0x1f2,0x0
   140014a24:	add    BYTE PTR [rax],al
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	mov    esi,0x1f2
   140014a2d:	add    BYTE PTR [rax],al
   140014a2f:	add    BYTE PTR [rsi+0x1f2],ch
   140014a35:	add    BYTE PTR [rax],al
   140014a37:	add    BYTE PTR [rdx+rsi*8+0x1],bl
   140014a3e:	add    BYTE PTR [rax],al
   140014a40:	nop
   140014a41:	repz add DWORD PTR [rax],eax
   140014a44:	add    BYTE PTR [rax],al
   140014a46:	add    BYTE PTR [rax],al
   140014a48:	cwde   
   140014a49:	repz add DWORD PTR [rax],eax
   140014a4c:	add    BYTE PTR [rax],al
   140014a4e:	add    BYTE PTR [rax],al
   140014a50:	movabs ds:0xae000000000001f3,al
   140014a59:	repz add DWORD PTR [rax],eax
   140014a5c:	add    BYTE PTR [rax],al
   140014a5e:	add    BYTE PTR [rax],al
   140014a60:	mov    esp,0x1f3
   140014a65:	add    BYTE PTR [rax],al
   140014a67:	add    dl,dl
   140014a69:	repz add DWORD PTR [rax],eax
   140014a6c:	add    BYTE PTR [rax],al
   140014a6e:	add    BYTE PTR [rax],al
   140014a70:	out    0xf3,al
   140014a72:	add    DWORD PTR [rax],eax
   140014a74:	add    BYTE PTR [rax],al
   140014a76:	add    BYTE PTR [rax],al
   140014a78:	repnz repz add DWORD PTR [rax],eax
   140014a7c:	add    BYTE PTR [rax],al
   140014a7e:	add    BYTE PTR [rax],al
   140014a80:	cld    
   140014a81:	repz add DWORD PTR [rax],eax
   140014a84:	add    BYTE PTR [rax],al
   140014a86:	add    BYTE PTR [rax],al
   140014a88:	xor    ch,dh
   140014a8a:	add    DWORD PTR [rax],eax
   140014a8c:	add    BYTE PTR [rax],al
   140014a8e:	add    BYTE PTR [rax],al
   140014a90:	(bad)  
   140014a91:	hlt    
   140014a92:	add    DWORD PTR [rax],eax
   140014a94:	add    BYTE PTR [rax],al
   140014a96:	add    BYTE PTR [rax],al
   140014a98:	(bad)  
   140014a99:	repz add DWORD PTR [rax],eax
   140014a9c:	add    BYTE PTR [rax],al
   140014a9e:	add    BYTE PTR [rax],al
   140014aa0:	and    dh,ah
   140014aa2:	add    DWORD PTR [rax],eax
	...
   140014ab0:	or     dh,dl
   140014ab2:	add    DWORD PTR [rax],eax
   140014ab4:	add    BYTE PTR [rax],al
   140014ab6:	add    BYTE PTR [rax],al
   140014ab8:	(bad)  
   140014ab9:	icebp  
   140014aba:	add    DWORD PTR [rax],eax
   140014abc:	add    BYTE PTR [rax],al
   140014abe:	add    BYTE PTR [rax],al
   140014ac0:	(bad)  
   140014ac1:	icebp  
   140014ac2:	add    DWORD PTR [rax],eax
   140014ac4:	add    BYTE PTR [rax],al
   140014ac6:	add    BYTE PTR [rax],al
   140014ac8:	push   rdx
   140014ac9:	icebp  
   140014aca:	add    DWORD PTR [rax],eax
   140014acc:	add    BYTE PTR [rax],al
   140014ace:	add    BYTE PTR [rax],al
   140014ad0:	sbb    cl,dh
   140014ad2:	add    DWORD PTR [rax],eax
   140014ad4:	add    BYTE PTR [rax],al
   140014ad6:	add    BYTE PTR [rax],al
   140014ad8:	out    0xf0,al
   140014ada:	add    DWORD PTR [rax],eax
   140014adc:	add    BYTE PTR [rax],al
   140014ade:	add    BYTE PTR [rax],al
   140014ae0:	lods   al,BYTE PTR ds:[rsi]
   140014ae1:	lock add DWORD PTR [rax],eax
   140014ae4:	add    BYTE PTR [rax],al
   140014ae6:	add    BYTE PTR [rax],al
   140014ae8:	(bad)  
   140014ae9:	lock add DWORD PTR [rax],eax
   140014aec:	add    BYTE PTR [rax],al
   140014aee:	add    BYTE PTR [rax],al
   140014af0:	pop    rdx
   140014af1:	lock add DWORD PTR [rax],eax
   140014af4:	add    BYTE PTR [rax],al
   140014af6:	add    BYTE PTR [rax],al
   140014af8:	(bad)  
   140014af9:	lock add DWORD PTR [rax],eax
   140014afc:	add    BYTE PTR [rax],al
   140014afe:	add    BYTE PTR [rax],al
   140014b00:	loop   0x140014af1
   140014b02:	add    DWORD PTR [rax],eax
   140014b04:	add    BYTE PTR [rax],al
   140014b06:	add    BYTE PTR [rax],al
   140014b08:	scas   al,BYTE PTR es:[rdi]
   140014b09:	out    dx,eax
   140014b0a:	add    DWORD PTR [rax],eax
   140014b0c:	add    BYTE PTR [rax],al
   140014b0e:	add    BYTE PTR [rax],al
   140014b10:	mov    ch,bh
   140014b12:	add    DWORD PTR [rax],eax
   140014b14:	add    BYTE PTR [rax],al
   140014b16:	add    BYTE PTR [rax],al
   140014b18:	fs out dx,eax
   140014b1a:	add    DWORD PTR [rax],eax
   140014b1c:	add    BYTE PTR [rax],al
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	ss out dx,eax
   140014b22:	add    DWORD PTR [rax],eax
   140014b24:	add    BYTE PTR [rax],al
   140014b26:	add    BYTE PTR [rax],al
   140014b28:	(bad)  
   140014b29:	out    dx,eax
   140014b2a:	add    DWORD PTR [rax],eax
   140014b2c:	add    BYTE PTR [rax],al
   140014b2e:	add    BYTE PTR [rax],al
   140014b30:	(bad)  
   140014b31:	out    dx,al
   140014b32:	add    DWORD PTR [rax],eax
   140014b34:	add    BYTE PTR [rax],al
   140014b36:	add    BYTE PTR [rax],al
   140014b38:	(bad)  
   140014b3a:	add    DWORD PTR [rax],eax
   140014b3c:	add    BYTE PTR [rax],al
   140014b3e:	add    BYTE PTR [rax],al
   140014b40:	(bad)  
   140014b41:	out    dx,al
   140014b42:	add    DWORD PTR [rax],eax
   140014b44:	add    BYTE PTR [rax],al
   140014b46:	add    BYTE PTR [rax],al
   140014b48:	rex.R out dx,al
   140014b4a:	add    DWORD PTR [rax],eax
   140014b4c:	add    BYTE PTR [rax],al
   140014b4e:	add    BYTE PTR [rax],al
   140014b50:	and    al,0xee
   140014b52:	add    DWORD PTR [rax],eax
   140014b54:	add    BYTE PTR [rax],al
   140014b56:	add    BYTE PTR [rax],al
   140014b58:	add    ch,dh
   140014b5a:	add    DWORD PTR [rax],eax
   140014b5c:	add    BYTE PTR [rax],al
   140014b5e:	add    BYTE PTR [rax],al
   140014b60:	mov    esi,0x1ed
   140014b65:	add    BYTE PTR [rax],al
   140014b67:	add    BYTE PTR [rax-0x13],bh
   140014b6a:	add    DWORD PTR [rax],eax
   140014b6c:	add    BYTE PTR [rax],al
   140014b6e:	add    BYTE PTR [rax],al
   140014b70:	rex.WR in eax,dx
   140014b72:	add    DWORD PTR [rax],eax
   140014b74:	add    BYTE PTR [rax],al
   140014b76:	add    BYTE PTR [rax],al
   140014b78:	sub    ch,ch
   140014b7a:	add    DWORD PTR [rax],eax
   140014b7c:	add    BYTE PTR [rax],al
   140014b7e:	add    BYTE PTR [rax],al
   140014b80:	lock in al,dx
   140014b82:	add    DWORD PTR [rax],eax
   140014b84:	add    BYTE PTR [rax],al
   140014b86:	add    BYTE PTR [rax],al
   140014b88:	int3   
   140014b89:	in     al,dx
   140014b8a:	add    DWORD PTR [rax],eax
   140014b8c:	add    BYTE PTR [rax],al
   140014b8e:	add    BYTE PTR [rax],al
   140014b90:	(bad)  
   140014b91:	in     al,dx
   140014b92:	add    DWORD PTR [rax],eax
   140014b94:	add    BYTE PTR [rax],al
   140014b96:	add    BYTE PTR [rax],al
   140014b98:	cmp    al,0xec
   140014b9a:	add    DWORD PTR [rax],eax
   140014b9c:	add    BYTE PTR [rax],al
   140014b9e:	add    BYTE PTR [rax],al
   140014ba0:	(bad)  
   140014ba1:	jmp    0x140014ba4
   140014ba3:	add    BYTE PTR [rax],al
   140014ba5:	add    BYTE PTR [rax],al
   140014ba7:	add    BYTE PTR [rdx+0x1eb],bl
   140014bad:	add    BYTE PTR [rax],al
   140014baf:	add    BYTE PTR [rbx+rbp*8+0x1],dl
   140014bb3:	add    BYTE PTR [rax],al
   140014bb5:	add    BYTE PTR [rax],al
   140014bb7:	add    BYTE PTR [rax],dl
   140014bb9:	jmp    0x140014bbc
   140014bbb:	add    BYTE PTR [rax],al
   140014bbd:	add    BYTE PTR [rax],al
   140014bbf:	add    dh,al
   140014bc1:	(bad)  
   140014bc2:	add    DWORD PTR [rax],eax
   140014bc4:	add    BYTE PTR [rax],al
   140014bc6:	add    BYTE PTR [rax],al
   140014bc8:	sahf   
   140014bc9:	(bad)  
   140014bca:	add    DWORD PTR [rax],eax
   140014bcc:	add    BYTE PTR [rax],al
   140014bce:	add    BYTE PTR [rax],al
   140014bd0:	jbe    0x140014bbc
   140014bd2:	add    DWORD PTR [rax],eax
   140014bd4:	add    BYTE PTR [rax],al
   140014bd6:	add    BYTE PTR [rax],al
   140014bd8:	xor    al,0xea
   140014bda:	add    DWORD PTR [rax],eax
   140014bdc:	add    BYTE PTR [rax],al
   140014bde:	add    BYTE PTR [rax],al
   140014be0:	mov    ah,0xe9
   140014be2:	add    DWORD PTR [rax],eax
   140014be4:	add    BYTE PTR [rax],al
   140014be6:	add    BYTE PTR [rax],al
   140014be8:	jbe    0x140014bd3
   140014bea:	add    DWORD PTR [rax],eax
   140014bec:	add    BYTE PTR [rax],al
   140014bee:	add    BYTE PTR [rax],al
   140014bf0:	ds jmp 0x140014bf7
   140014bf6:	add    BYTE PTR [rax],al
   140014bf8:	call   0x140014de5
   140014bfd:	add    BYTE PTR [rax],al
   140014bff:	add    BYTE PTR [rsi+0x1e8],ah
   140014c05:	add    BYTE PTR [rax],al
   140014c07:	add    BYTE PTR [rax-0x18],ch
   140014c0a:	add    DWORD PTR [rax],eax
   140014c0c:	add    BYTE PTR [rax],al
   140014c0e:	add    BYTE PTR [rax],al
   140014c10:	and    al,0xe8
   140014c12:	add    DWORD PTR [rax],eax
   140014c14:	add    BYTE PTR [rax],al
   140014c16:	add    BYTE PTR [rax],al
   140014c18:	loop   0x140014c01
   140014c1a:	add    DWORD PTR [rax],eax
   140014c1c:	add    BYTE PTR [rax],al
   140014c1e:	add    BYTE PTR [rax],al
   140014c20:	sahf   
   140014c21:	out    0x1,eax
   140014c23:	add    BYTE PTR [rax],al
   140014c25:	add    BYTE PTR [rax],al
   140014c27:	add    BYTE PTR [rdi+riz*8+0x1],bl
   140014c2b:	add    BYTE PTR [rax],al
   140014c2d:	add    BYTE PTR [rax],al
   140014c2f:	add    BYTE PTR [rax],cl
   140014c31:	out    0x1,eax
   140014c33:	add    BYTE PTR [rax],al
   140014c35:	add    BYTE PTR [rax],al
   140014c37:	add    BYTE PTR [rdx+0x1e6],dh
   140014c3d:	add    BYTE PTR [rax],al
   140014c3f:	add    BYTE PTR [rsi-0x1a],cl
   140014c42:	add    DWORD PTR [rax],eax
   140014c44:	add    BYTE PTR [rax],al
   140014c46:	add    BYTE PTR [rax],al
   140014c48:	(bad)  
   140014c49:	in     eax,0x1
   140014c4b:	add    BYTE PTR [rax],al
   140014c4d:	add    BYTE PTR [rax],al
   140014c4f:	add    BYTE PTR [rbp+riz*8+0x1],dl
   140014c56:	add    BYTE PTR [rax],al
   140014c58:	pop    rax
   140014c59:	in     eax,0x1
   140014c5b:	add    BYTE PTR [rax],al
   140014c5d:	add    BYTE PTR [rax],al
   140014c5f:	add    BYTE PTR [rax],al
   140014c61:	in     eax,0x1
   140014c63:	add    BYTE PTR [rax],al
   140014c65:	add    BYTE PTR [rax],al
   140014c67:	add    BYTE PTR [rsi+0x1e4],ch
   140014c6d:	add    BYTE PTR [rax],al
   140014c6f:	add    BYTE PTR [rdx-0x1c],bl
   140014c72:	add    DWORD PTR [rax],eax
   140014c74:	add    BYTE PTR [rax],al
   140014c76:	add    BYTE PTR [rax],al
   140014c78:	(bad)  
   140014c79:	in     al,0x1
   140014c7b:	add    BYTE PTR [rax],al
   140014c7d:	add    BYTE PTR [rax],al
   140014c7f:	add    al,cl
   140014c81:	jrcxz  0x140014c84
   140014c83:	add    BYTE PTR [rax],al
   140014c85:	add    BYTE PTR [rax],al
   140014c87:	add    BYTE PTR [rax+0x1e3],cl
   140014c8d:	add    BYTE PTR [rax],al
   140014c8f:	add    BYTE PTR [rax-0x1d],cl
   140014c92:	add    DWORD PTR [rax],eax
   140014c94:	add    BYTE PTR [rax],al
   140014c96:	add    BYTE PTR [rax],al
   140014c98:	or     al,0xe3
   140014c9a:	add    DWORD PTR [rax],eax
   140014c9c:	add    BYTE PTR [rax],al
   140014c9e:	add    BYTE PTR [rax],al
   140014ca0:	retf   0x1e2
   140014ca3:	add    BYTE PTR [rax],al
   140014ca5:	add    BYTE PTR [rax],al
   140014ca7:	add    BYTE PTR [rdx+riz*8+0x1],cl
   140014cae:	add    BYTE PTR [rax],al
   140014cb0:	rex.WR loop 0x140014cb4
   140014cb3:	add    BYTE PTR [rax],al
   140014cb5:	add    BYTE PTR [rax],al
   140014cb7:	add    BYTE PTR [rdx],bl
   140014cb9:	loop   0x140014cbc
   140014cbb:	add    BYTE PTR [rax],al
   140014cbd:	add    BYTE PTR [rax],al
   140014cbf:	add    al,al
   140014cc1:	loope  0x140014cc4
   140014cc3:	add    BYTE PTR [rax],al
   140014cc5:	add    BYTE PTR [rax],al
   140014cc7:	add    BYTE PTR [rsi+0x1e1],dl
   140014ccd:	add    BYTE PTR [rax],al
   140014ccf:	add    BYTE PTR [rcx+riz*8+0x1],dl
   140014cd3:	add    BYTE PTR [rax],al
   140014cd5:	add    BYTE PTR [rax],al
   140014cd7:	add    BYTE PTR [rsi],ah
   140014cd9:	loope  0x140014cdc
   140014cdb:	add    BYTE PTR [rax],al
   140014cdd:	add    BYTE PTR [rax],al
   140014cdf:	add    ah,ah
   140014ce1:	loopne 0x140014ce4
   140014ce3:	add    BYTE PTR [rax],al
   140014ce5:	add    BYTE PTR [rax],al
   140014ce7:	add    BYTE PTR [rsi+0x1e0],dh
   140014ced:	add    BYTE PTR [rax],al
   140014cef:	add    BYTE PTR [rax+riz*8+0x1],dl
   140014cf6:	add    BYTE PTR [rax],al
   140014cf8:	jo     0x140014cda
   140014cfa:	add    DWORD PTR [rax],eax
   140014cfc:	add    BYTE PTR [rax],al
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	rex.R loopne 0x140014d04
   140014d03:	add    BYTE PTR [rax],al
   140014d05:	add    BYTE PTR [rax],al
   140014d07:	add    BYTE PTR [rsi],ah
   140014d09:	loopne 0x140014d0c
   140014d0b:	add    BYTE PTR [rax],al
   140014d0d:	add    BYTE PTR [rax],al
   140014d0f:	add    dh,bh
   140014d11:	fild   WORD PTR [rcx]
   140014d13:	add    BYTE PTR [rax],al
   140014d15:	add    BYTE PTR [rax],al
   140014d17:	add    al,ch
   140014d19:	fild   WORD PTR [rcx]
   140014d1b:	add    BYTE PTR [rax],al
   140014d1d:	add    BYTE PTR [rax],al
   140014d1f:	add    BYTE PTR [rdx+0x1df],bh
   140014d25:	add    BYTE PTR [rax],al
   140014d27:	add    BYTE PTR [rsi+0x1df],bl
   140014d2d:	add    BYTE PTR [rax],al
   140014d2f:	add    BYTE PTR [rdi+rbx*8+0x1],cl
   140014d33:	add    BYTE PTR [rax],al
   140014d35:	add    BYTE PTR [rax],al
   140014d37:	add    BYTE PTR [rsi],ch
   140014d39:	fild   WORD PTR [rcx]
   140014d3b:	add    BYTE PTR [rax],al
   140014d3d:	add    BYTE PTR [rax],al
   140014d3f:	add    BYTE PTR [rdi+rbx*8],cl
   140014d42:	add    DWORD PTR [rax],eax
   140014d44:	add    BYTE PTR [rax],al
   140014d46:	add    BYTE PTR [rax],al
   140014d48:	call   0x140014f2b
   140014d4d:	add    BYTE PTR [rax],al
   140014d4f:	add    BYTE PTR [rsi+0x1de],bh
   140014d55:	add    BYTE PTR [rax],al
   140014d57:	add    BYTE PTR [rdx+0x1de],bl
   140014d5d:	add    BYTE PTR [rax],al
   140014d5f:	add    BYTE PTR [rsi-0x22],dh
   140014d62:	add    DWORD PTR [rax],eax
   140014d64:	add    BYTE PTR [rax],al
   140014d66:	add    BYTE PTR [rax],al
   140014d68:	rex.WRX fiadd WORD PTR [rcx]
   140014d6b:	add    BYTE PTR [rax],al
   140014d6d:	add    BYTE PTR [rax],al
   140014d6f:	add    BYTE PTR [rsi],ah
   140014d71:	fiadd  WORD PTR [rcx]
   140014d73:	add    BYTE PTR [rax],al
   140014d75:	add    BYTE PTR [rax],al
   140014d77:	add    BYTE PTR [rsi],al
   140014d79:	fiadd  WORD PTR [rcx]
   140014d7b:	add    BYTE PTR [rax],al
   140014d7d:	add    BYTE PTR [rax],al
   140014d7f:	add    dl,ah
   140014d81:	fld    QWORD PTR [rcx]
   140014d83:	add    BYTE PTR [rax],al
   140014d85:	add    BYTE PTR [rax],al
   140014d87:	add    BYTE PTR [rdx+0x1dd],dh
   140014d8d:	add    BYTE PTR [rax],al
   140014d8f:	add    BYTE PTR [rbp+rbx*8+0x1],bh
   140014d93:	add    BYTE PTR [rax],al
   140014d95:	add    BYTE PTR [rax],al
   140014d97:	add    BYTE PTR [rdx-0x23],cl
   140014d9a:	add    DWORD PTR [rax],eax
   140014d9c:	add    BYTE PTR [rax],al
   140014d9e:	add    BYTE PTR [rax],al
   140014da0:	(bad)  
   140014da1:	fld    QWORD PTR [rcx]
   140014da3:	add    BYTE PTR [rax],al
   140014da5:	add    BYTE PTR [rax],al
   140014da7:	add    ah,ch
   140014da9:	fadd   QWORD PTR [rcx]
   140014dab:	add    BYTE PTR [rax],al
   140014dad:	add    BYTE PTR [rax],al
   140014daf:	add    BYTE PTR [rsp+rbx*8+0x1],ch
   140014db6:	add    BYTE PTR [rax],al
   140014db8:	mov    bl,ah
   140014dba:	add    DWORD PTR [rax],eax
   140014dbc:	add    BYTE PTR [rax],al
   140014dbe:	add    BYTE PTR [rax],al
   140014dc0:	push   0x1dc
   140014dc5:	add    BYTE PTR [rax],al
   140014dc7:	add    BYTE PTR [rsi-0x24],al
   140014dca:	add    DWORD PTR [rax],eax
   140014dcc:	add    BYTE PTR [rax],al
   140014dce:	add    BYTE PTR [rax],al
   140014dd0:	sbb    bl,ah
   140014dd2:	add    DWORD PTR [rax],eax
   140014dd4:	add    BYTE PTR [rax],al
   140014dd6:	add    BYTE PTR [rax],al
   140014dd8:	(bad)  
   140014dd9:	fild   DWORD PTR [rcx]
   140014ddb:	add    BYTE PTR [rax],al
   140014ddd:	add    BYTE PTR [rax],al
   140014ddf:	add    dl,dl
   140014de1:	fild   DWORD PTR [rcx]
   140014de3:	add    BYTE PTR [rax],al
   140014de5:	add    BYTE PTR [rax],al
   140014de7:	add    BYTE PTR [rsi+0x1db],bl
   140014ded:	add    BYTE PTR [rax],al
   140014def:	add    BYTE PTR [rax-0x25],bh
   140014df2:	add    DWORD PTR [rax],eax
   140014df4:	add    BYTE PTR [rax],al
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	push   rsp
   140014df9:	fild   DWORD PTR [rcx]
   140014dfb:	add    BYTE PTR [rax],al
   140014dfd:	add    BYTE PTR [rax],al
   140014dff:	add    BYTE PTR [rdx],ah
   140014e01:	fild   DWORD PTR [rcx]
   140014e03:	add    BYTE PTR [rax],al
   140014e05:	add    BYTE PTR [rax],al
   140014e07:	add    BYTE PTR [rdx],al
   140014e09:	fild   DWORD PTR [rcx]
   140014e0b:	add    BYTE PTR [rax],al
   140014e0d:	add    BYTE PTR [rax],al
   140014e0f:	add    ah,ah
   140014e11:	fiadd  DWORD PTR [rcx]
   140014e13:	add    BYTE PTR [rax],al
   140014e15:	add    BYTE PTR [rax],al
   140014e17:	add    BYTE PTR [rdx+rbx*8+0x1],dh
   140014e1e:	add    BYTE PTR [rax],al
   140014e20:	sbb    dl,0x1
   140014e23:	add    BYTE PTR [rax],al
   140014e25:	add    BYTE PTR [rax],al
   140014e27:	add    BYTE PTR [rdx-0x26],al
   140014e2a:	add    DWORD PTR [rax],eax
   140014e2c:	add    BYTE PTR [rax],al
   140014e2e:	add    BYTE PTR [rax],al
   140014e30:	sub    dl,bl
   140014e32:	add    DWORD PTR [rax],eax
   140014e34:	add    BYTE PTR [rax],al
   140014e36:	add    BYTE PTR [rax],al
   140014e38:	in     al,dx
   140014e39:	fld    DWORD PTR [rcx]
   140014e3b:	add    BYTE PTR [rax],al
   140014e3d:	add    BYTE PTR [rax],al
   140014e3f:	add    al,cl
   140014e41:	fld    DWORD PTR [rcx]
   140014e43:	add    BYTE PTR [rax],al
   140014e45:	add    BYTE PTR [rax],al
   140014e47:	add    BYTE PTR [rax+0x1d9],cl
   140014e4d:	add    BYTE PTR [rax],al
   140014e4f:	add    BYTE PTR [rsi-0x27],bl
   140014e52:	add    DWORD PTR [rax],eax
   140014e54:	add    BYTE PTR [rax],al
   140014e56:	add    BYTE PTR [rax],al
   140014e58:	cmp    cl,bl
   140014e5a:	add    DWORD PTR [rax],eax
   140014e5c:	add    BYTE PTR [rax],al
   140014e5e:	add    BYTE PTR [rax],al
   140014e60:	(bad)  
   140014e61:	fld    DWORD PTR [rcx]
   140014e63:	add    BYTE PTR [rax],al
   140014e65:	add    BYTE PTR [rax],al
   140014e67:	add    dh,cl
   140014e69:	fadd   DWORD PTR [rcx]
   140014e6b:	add    BYTE PTR [rax],al
   140014e6d:	add    BYTE PTR [rax],al
   140014e6f:	add    BYTE PTR [rsi+0x1d8],ah
   140014e75:	add    BYTE PTR [rax],al
   140014e77:	add    BYTE PTR [rsi],bl
   140014e79:	fadd   DWORD PTR [rcx]
   140014e7b:	add    BYTE PTR [rax],al
   140014e7d:	add    BYTE PTR [rax],al
   140014e7f:	add    dh,dh
   140014e81:	xlat   BYTE PTR ds:[rbx]
   140014e82:	add    DWORD PTR [rax],eax
   140014e84:	add    BYTE PTR [rax],al
   140014e86:	add    BYTE PTR [rax],al
   140014e88:	(bad)  
   140014e89:	xlat   BYTE PTR ds:[rbx]
   140014e8a:	add    DWORD PTR [rax],eax
   140014e8c:	add    BYTE PTR [rax],al
   140014e8e:	add    BYTE PTR [rax],al
   140014e90:	mov    esp,0x1d7
   140014e95:	add    BYTE PTR [rax],al
   140014e97:	add    BYTE PTR [rsi+0x1d7],dl
   140014e9d:	add    BYTE PTR [rax],al
   140014e9f:	add    BYTE PTR [rdx-0x29],dh
   140014ea2:	add    DWORD PTR [rax],eax
   140014ea4:	add    BYTE PTR [rax],al
   140014ea6:	add    BYTE PTR [rax],al
   140014ea8:	rex.WX xlat BYTE PTR ds:[rbx]
   140014eaa:	add    DWORD PTR [rax],eax
   140014eac:	add    BYTE PTR [rax],al
   140014eae:	add    BYTE PTR [rax],al
   140014eb0:	xlat   BYTE PTR ss:[rbx]
   140014eb2:	add    DWORD PTR [rax],eax
   140014eb4:	add    BYTE PTR [rax],al
   140014eb6:	add    BYTE PTR [rax],al
   140014eb8:	and    dl,bh
   140014eba:	add    DWORD PTR [rax],eax
   140014ebc:	add    BYTE PTR [rax],al
   140014ebe:	add    BYTE PTR [rax],al
   140014ec0:	rcl    dh,cl
   140014ec2:	add    DWORD PTR [rax],eax
   140014ec4:	add    BYTE PTR [rax],al
   140014ec6:	add    BYTE PTR [rax],al
   140014ec8:	mov    esp,0x1d6
   140014ecd:	add    BYTE PTR [rax],al
   140014ecf:	add    BYTE PTR [rsi+rdx*8+0x1],bl
   140014ed6:	add    BYTE PTR [rax],al
   140014ed8:	push   0x1d6
   140014edd:	add    BYTE PTR [rax],al
   140014edf:	add    BYTE PTR [rax],bl
   140014ee1:	(bad)  
   140014ee2:	add    DWORD PTR [rax],eax
   140014ee4:	add    BYTE PTR [rax],al
   140014ee6:	add    BYTE PTR [rax],al
   140014ee8:	(bad)  
   140014eea:	add    DWORD PTR [rax],eax
   140014eec:	add    BYTE PTR [rax],al
   140014eee:	add    BYTE PTR [rax],al
   140014ef0:	movabs al,ds:0x50000000000001d5
   140014ef9:	(bad)  
   140014efa:	add    DWORD PTR [rax],eax
   140014efc:	add    BYTE PTR [rax],al
   140014efe:	add    BYTE PTR [rax],al
   140014f00:	lock (bad) 
   140014f02:	add    DWORD PTR [rax],eax
   140014f04:	add    BYTE PTR [rax],al
   140014f06:	add    BYTE PTR [rax],al
   140014f08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014f09:	(bad)  
   140014f0a:	add    DWORD PTR [rax],eax
   140014f0c:	add    BYTE PTR [rax],al
   140014f0e:	add    BYTE PTR [rax],al
   140014f10:	(bad)  
   140014f11:	(bad)  
   140014f12:	add    DWORD PTR [rax],eax
   140014f14:	add    BYTE PTR [rax],al
   140014f16:	add    BYTE PTR [rax],al
   140014f18:	and    ah,dl
   140014f1a:	add    DWORD PTR [rax],eax
   140014f1c:	add    BYTE PTR [rax],al
   140014f1e:	add    BYTE PTR [rax],al
   140014f20:	loop   0x140014ef5
   140014f22:	add    DWORD PTR [rax],eax
   140014f24:	add    BYTE PTR [rax],al
   140014f26:	add    BYTE PTR [rax],al
   140014f28:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014f29:	rol    DWORD PTR [rcx],cl
   140014f2b:	add    BYTE PTR [rax],al
   140014f2d:	add    BYTE PTR [rax],al
   140014f2f:	add    BYTE PTR [rsi-0x2d],ch
   140014f32:	add    DWORD PTR [rax],eax
   140014f34:	add    BYTE PTR [rax],al
   140014f36:	add    BYTE PTR [rax],al
   140014f38:	xor    dl,bl
   140014f3a:	add    DWORD PTR [rax],eax
   140014f3c:	add    BYTE PTR [rax],al
   140014f3e:	add    BYTE PTR [rax],al
   140014f40:	not    dl
   140014f42:	add    DWORD PTR [rax],eax
   140014f44:	add    BYTE PTR [rax],al
   140014f46:	add    BYTE PTR [rax],al
   140014f48:	mov    edx,0x1d2
   140014f4d:	add    BYTE PTR [rax],al
   140014f4f:	add    BYTE PTR [rdx+rdx*8+0x1],dh
   140014f53:	add    BYTE PTR [rax],al
   140014f55:	add    BYTE PTR [rax],al
   140014f57:	add    BYTE PTR [rdx+rdx*8+0x1],al
   140014f5b:	add    BYTE PTR [rax],al
   140014f5d:	add    BYTE PTR [rax],al
   140014f5f:	add    BYTE PTR [rdx+rdx*8],cl
   140014f62:	add    DWORD PTR [rax],eax
   140014f64:	add    BYTE PTR [rax],al
   140014f66:	add    BYTE PTR [rax],al
   140014f68:	rcl    cl,0x1
   140014f6b:	add    BYTE PTR [rax],al
   140014f6d:	add    BYTE PTR [rax],al
   140014f6f:	add    BYTE PTR [rcx+rdx*8+0x1],dl
   140014f76:	add    BYTE PTR [rax],al
   140014f78:	rex.X rol DWORD PTR [rcx],1
   140014f7b:	add    BYTE PTR [rax],al
   140014f7d:	add    BYTE PTR [rax],al
   140014f7f:	add    BYTE PTR [rdx],ch
   140014f81:	rol    DWORD PTR [rcx],1
   140014f83:	add    BYTE PTR [rax],al
   140014f85:	add    BYTE PTR [rax],al
   140014f87:	add    BYTE PTR [rdx+0x1d0],ch
   140014f8d:	add    BYTE PTR [rax],al
   140014f8f:	add    BYTE PTR [rax+0x1d0],cl
   140014f95:	add    BYTE PTR [rax],al
   140014f97:	add    BYTE PTR [rax-0x30],bl
   140014f9a:	add    DWORD PTR [rax],eax
   140014f9c:	add    BYTE PTR [rax],al
   140014f9e:	add    BYTE PTR [rax],al
   140014fa0:	cmp    al,0xd0
   140014fa2:	add    DWORD PTR [rax],eax
   140014fa4:	add    BYTE PTR [rax],al
   140014fa6:	add    BYTE PTR [rax],al
   140014fa8:	sbb    al,dl
   140014faa:	add    DWORD PTR [rax],eax
   140014fac:	add    BYTE PTR [rax],al
   140014fae:	add    BYTE PTR [rax],al
   140014fb0:	dec    bh
   140014fb2:	add    DWORD PTR [rax],eax
   140014fb4:	add    BYTE PTR [rax],al
   140014fb6:	add    BYTE PTR [rax],al
   140014fb8:	(bad)  
   140014fb9:	iret   
   140014fba:	add    DWORD PTR [rax],eax
   140014fbc:	add    BYTE PTR [rax],al
   140014fbe:	add    BYTE PTR [rax],al
   140014fc0:	stos   BYTE PTR es:[rdi],al
   140014fc1:	iret   
   140014fc2:	add    DWORD PTR [rax],eax
   140014fc4:	add    BYTE PTR [rax],al
   140014fc6:	add    BYTE PTR [rax],al
   140014fc8:	mov    bh,cl
   140014fca:	add    DWORD PTR [rax],eax
   140014fcc:	add    BYTE PTR [rax],al
   140014fce:	add    BYTE PTR [rax],al
   140014fd0:	xor    cl,bh
   140014fd2:	add    DWORD PTR [rax],eax
   140014fd4:	add    BYTE PTR [rax],al
   140014fd6:	add    BYTE PTR [rax],al
   140014fd8:	or     al,0xcf
   140014fda:	add    DWORD PTR [rax],eax
   140014fdc:	add    BYTE PTR [rax],al
   140014fde:	add    BYTE PTR [rax],al
   140014fe0:	loopne 0x140014fb0
   140014fe2:	add    DWORD PTR [rax],eax
   140014fe4:	add    BYTE PTR [rax],al
   140014fe6:	add    BYTE PTR [rax],al
   140014fe8:	retf   0x1ce
   140014feb:	add    BYTE PTR [rax],al
   140014fed:	add    BYTE PTR [rax],al
   140014fef:	add    BYTE PTR [rsi+rcx*8+0x1],ah
   140014ff6:	add    BYTE PTR [rax],al
   140014ff8:	jle    0x140014fc8
   140014ffa:	add    DWORD PTR [rax],eax
   140014ffc:	add    BYTE PTR [rax],al
   140014ffe:	add    BYTE PTR [rax],al
   140015000:	pop    rsp
   140015001:	(bad)  
   140015002:	add    DWORD PTR [rax],eax
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	and    dh,cl
   14001500a:	add    DWORD PTR [rax],eax
   14001500c:	add    BYTE PTR [rax],al
   14001500e:	add    BYTE PTR [rax],al
   140015010:	lock int 0x1
   140015013:	add    BYTE PTR [rax],al
   140015015:	add    BYTE PTR [rax],al
   140015017:	add    al,cl
   140015019:	int    0x1
   14001501b:	add    BYTE PTR [rax],al
   14001501d:	add    BYTE PTR [rax],al
   14001501f:	add    BYTE PTR [rsi+0x1cd],cl
   140015025:	add    BYTE PTR [rax],al
   140015027:	add    BYTE PTR [rax-0x33],bh
   14001502a:	add    DWORD PTR [rax],eax
   14001502c:	add    BYTE PTR [rax],al
   14001502e:	add    BYTE PTR [rax],al
   140015030:	pop    rsi
   140015031:	int    0x1
   140015033:	add    BYTE PTR [rax],al
   140015035:	add    BYTE PTR [rax],al
   140015037:	add    BYTE PTR [rdx],bh
   140015039:	int    0x1
   14001503b:	add    BYTE PTR [rax],al
   14001503d:	add    BYTE PTR [rax],al
   14001503f:	add    BYTE PTR [rcx*8+0x1],dl
   140015046:	add    BYTE PTR [rax],al
   140015048:	in     al,dx
   140015049:	int3   
   14001504a:	add    DWORD PTR [rax],eax
   14001504c:	add    BYTE PTR [rax],al
   14001504e:	add    BYTE PTR [rax],al
   140015050:	test   al,0xcc
   140015052:	add    DWORD PTR [rax],eax
   140015054:	add    BYTE PTR [rax],al
   140015056:	add    BYTE PTR [rax],al
   140015058:	push   0xffffffffffffffcc
   14001505a:	add    DWORD PTR [rax],eax
   14001505c:	add    BYTE PTR [rax],al
   14001505e:	add    BYTE PTR [rax],al
   140015060:	out    dx,al
   140015061:	retf   
   140015062:	add    DWORD PTR [rax],eax
   140015064:	add    BYTE PTR [rax],al
   140015066:	add    BYTE PTR [rax],al
   140015068:	mov    ah,0xcb
   14001506a:	add    DWORD PTR [rax],eax
   14001506c:	add    BYTE PTR [rax],al
   14001506e:	add    BYTE PTR [rax],al
   140015070:	jle    0x14001503d
   140015072:	add    DWORD PTR [rax],eax
   140015074:	add    BYTE PTR [rax],al
   140015076:	add    BYTE PTR [rax],al
   140015078:	sub    al,0xcb
   14001507a:	add    DWORD PTR [rax],eax
   14001507c:	add    BYTE PTR [rax],al
   14001507e:	add    BYTE PTR [rax],al
   140015080:	out    dx,al
   140015081:	retf   0x1
   140015084:	add    BYTE PTR [rax],al
   140015086:	add    BYTE PTR [rax],al
   140015088:	mov    ah,0xca
   14001508a:	add    DWORD PTR [rax],eax
   14001508c:	add    BYTE PTR [rax],al
   14001508e:	add    BYTE PTR [rax],al
   140015090:	jb     0x14001505c
   140015092:	add    DWORD PTR [rax],eax
   140015094:	add    BYTE PTR [rax],al
   140015096:	add    BYTE PTR [rax],al
   140015098:	xor    al,0xca
   14001509a:	add    DWORD PTR [rax],eax
   14001509c:	add    BYTE PTR [rax],al
   14001509e:	add    BYTE PTR [rax],al
   1400150a0:	repnz leave 
   1400150a2:	add    DWORD PTR [rax],eax
   1400150a4:	add    BYTE PTR [rax],al
   1400150a6:	add    BYTE PTR [rax],al
   1400150a8:	mov    ah,0xc9
   1400150aa:	add    DWORD PTR [rax],eax
   1400150ac:	add    BYTE PTR [rax],al
   1400150ae:	add    BYTE PTR [rax],al
   1400150b0:	jb     0x14001507b
   1400150b2:	add    DWORD PTR [rax],eax
   1400150b4:	add    BYTE PTR [rax],al
   1400150b6:	add    BYTE PTR [rax],al
   1400150b8:	xor    al,0xc9
   1400150ba:	add    DWORD PTR [rax],eax
   1400150bc:	add    BYTE PTR [rax],al
   1400150be:	add    BYTE PTR [rax],al
   1400150c0:	loop   0x14001508a
   1400150c2:	add    DWORD PTR [rax],eax
   1400150c4:	add    BYTE PTR [rax],al
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	nop
   1400150c9:	enter  0x1,0x0
   1400150cd:	add    BYTE PTR [rax],al
   1400150cf:	add    BYTE PTR [rax],dh
   1400150d1:	enter  0x1,0x0
   1400150d5:	add    BYTE PTR [rax],al
   1400150d7:	add    ah,cl
   1400150d9:	mov    DWORD PTR [rcx],0x0
   1400150df:	add    BYTE PTR [rdx-0x39],bh
   1400150e2:	add    DWORD PTR [rax],eax
   1400150e4:	add    BYTE PTR [rax],al
   1400150e6:	add    BYTE PTR [rax],al
   1400150e8:	rex.X mov DWORD PTR [rcx],0x0
   1400150ef:	add    ah,ch
   1400150f1:	mov    BYTE PTR [rcx],0x0
   1400150f4:	add    BYTE PTR [rax],al
   1400150f6:	add    BYTE PTR [rax],al
   1400150f8:	pushf  
   1400150f9:	mov    BYTE PTR [rcx],0x0
   1400150fc:	add    BYTE PTR [rax],al
   1400150fe:	add    BYTE PTR [rax],al
   140015100:	rex.WR mov BYTE PTR [rcx],0x0
   140015104:	add    BYTE PTR [rax],al
   140015106:	add    BYTE PTR [rax],al
   140015108:	add    al,0xc6
   14001510a:	add    DWORD PTR [rax],eax
   14001510c:	add    BYTE PTR [rax],al
   14001510e:	add    BYTE PTR [rax],al
   140015110:	mov    ch,0x1
   140015113:	add    BYTE PTR [rax],al
   140015115:	add    BYTE PTR [rax],al
   140015117:	add    BYTE PTR [rax+0x1c5],cl
   14001511d:	add    BYTE PTR [rax],al
   14001511f:	add    BYTE PTR [rdx-0x3b],dl
   140015122:	add    DWORD PTR [rax],eax
   140015124:	add    BYTE PTR [rax],al
   140015126:	add    BYTE PTR [rax],al
   140015128:	(bad)  
   140015129:	(bad)
   14001512c:	add    BYTE PTR [rax],al
   14001512e:	add    BYTE PTR [rax],al
   140015130:	(bad)
   140015135:	add    BYTE PTR [rax],al
   140015137:	add    dl,al
   140015139:	(bad)
   14001513d:	add    BYTE PTR [rax],al
   14001513f:	add    BYTE PTR [rdx+0x1c4],dl
   140015145:	add    BYTE PTR [rax],al
   140015147:	add    BYTE PTR [rsi-0x3c],bl
   14001514a:	add    DWORD PTR [rax],eax
   14001514c:	add    BYTE PTR [rax],al
   14001514e:	add    BYTE PTR [rax],al
   140015150:	(bad)
   140015155:	add    BYTE PTR [rax],al
   140015157:	add    BYTE PTR [rsi],bl
   140015159:	(bad)
   14001515d:	add    BYTE PTR [rax],al
   14001515f:	add    BYTE PTR [rax],al
   140015161:	(bad)
   140015165:	add    BYTE PTR [rax],al
   140015167:	add    al,ch
   140015169:	ret    
   14001516a:	add    DWORD PTR [rax],eax
   14001516c:	add    BYTE PTR [rax],al
   14001516e:	add    BYTE PTR [rax],al
   140015170:	mov    esp,0x1c3
   140015175:	add    BYTE PTR [rax],al
   140015177:	add    BYTE PTR [rax+0x1c3],bl
   14001517d:	add    BYTE PTR [rax],al
   14001517f:	add    BYTE PTR [rbx+rax*8+0x1],bh
   140015183:	add    BYTE PTR [rax],al
   140015185:	add    BYTE PTR [rax],al
   140015187:	add    BYTE PTR [rsi-0x3d],dl
   14001518a:	add    DWORD PTR [rax],eax
   14001518c:	add    BYTE PTR [rax],al
   14001518e:	add    BYTE PTR [rax],al
   140015190:	push   rsp
   140015191:	repnz add DWORD PTR [rax],eax
	...
   1400151a0:	fadd   st,st(0)
   1400151a2:	add    DWORD PTR [rax],eax
   1400151a4:	add    BYTE PTR [rax],al
   1400151a6:	add    BYTE PTR [rax],al
   1400151a8:	sahf   
   1400151a9:	rol    BYTE PTR [rcx],0x0
   1400151ac:	add    BYTE PTR [rax],al
   1400151ae:	add    BYTE PTR [rax],al
   1400151b0:	jb     0x140015172
   1400151b2:	add    DWORD PTR [rax],eax
   1400151b4:	add    BYTE PTR [rax],al
   1400151b6:	add    BYTE PTR [rax],al
   1400151b8:	rex.RX rol BYTE PTR [rcx],0x0
   1400151bc:	add    BYTE PTR [rax],al
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	or     al,al
   1400151c2:	add    DWORD PTR [rax],eax
   1400151c4:	add    BYTE PTR [rax],al
   1400151c6:	add    BYTE PTR [rax],al
   1400151c8:	loop   0x140015189
   1400151ca:	add    DWORD PTR [rax],eax
   1400151cc:	add    BYTE PTR [rax],al
   1400151ce:	add    BYTE PTR [rax],al
   1400151d0:	mov    BYTE PTR [rdi+0x1],bh
   1400151d6:	add    BYTE PTR [rax],al
   1400151d8:	push   0x1bf
   1400151dd:	add    BYTE PTR [rax],al
   1400151df:	add    BYTE PTR [rsi-0x41],cl
   1400151e2:	add    DWORD PTR [rax],eax
   1400151e4:	add    BYTE PTR [rax],al
   1400151e6:	add    BYTE PTR [rax],al
   1400151e8:	add    al,0xbf
   1400151ea:	add    DWORD PTR [rax],eax
   1400151ec:	add    BYTE PTR [rax],al
   1400151ee:	add    BYTE PTR [rax],al
   1400151f0:	in     al,0xbe
   1400151f2:	add    DWORD PTR [rax],eax
   1400151f4:	add    BYTE PTR [rax],al
   1400151f6:	add    BYTE PTR [rax],al
   1400151f8:	xchg   esi,eax
   1400151f9:	mov    esi,0x1
   1400151fe:	add    BYTE PTR [rax],al
   140015200:	(bad)  
   140015201:	mov    esi,0x1
   140015206:	add    BYTE PTR [rax],al
   140015208:	rex.X mov esi,0x1
   14001520e:	add    BYTE PTR [rax],al
   140015210:	(bad)  
   140015211:	mov    esi,0x1
   140015216:	add    BYTE PTR [rax],al
   140015218:	(bad)  
   140015219:	mov    ebp,0x1
   14001521e:	add    BYTE PTR [rax],al
   140015220:	je     0x1400151df
   140015222:	add    DWORD PTR [rax],eax
   140015224:	add    BYTE PTR [rax],al
   140015226:	add    BYTE PTR [rax],al
   140015228:	pop    rax
   140015229:	mov    ebp,0x1
   14001522e:	add    BYTE PTR [rax],al
   140015230:	(bad)  
   140015231:	mov    ebp,0x1
   140015236:	add    BYTE PTR [rax],al
   140015238:	out    dx,al
   140015239:	mov    esp,0x1
   14001523e:	add    BYTE PTR [rax],al
   140015240:	ret    0x1bc
   140015243:	add    BYTE PTR [rax],al
   140015245:	add    BYTE PTR [rax],al
   140015247:	add    BYTE PTR [rax+0x1bc],bl
   14001524d:	add    BYTE PTR [rax],al
   14001524f:	add    BYTE PTR [rdx-0x44],ch
   140015252:	add    DWORD PTR [rax],eax
   140015254:	add    BYTE PTR [rax],al
   140015256:	add    BYTE PTR [rax],al
   140015258:	ds mov esp,0x1
   14001525e:	add    BYTE PTR [rax],al
   140015260:	add    BYTE PTR [rcx+rax*1+0x0],bh
   140015267:	add    BYTE PTR [rbx+rdi*4+0x1],ah
   14001526e:	add    BYTE PTR [rax],al
   140015270:	js     0x14001522d
   140015272:	add    DWORD PTR [rax],eax
   140015274:	add    BYTE PTR [rax],al
   140015276:	add    BYTE PTR [rax],al
   140015278:	rex.WR movabs rbx,0xbb2e000000000001
   140015282:	add    DWORD PTR [rax],eax
   140015284:	add    BYTE PTR [rax],al
   140015286:	add    BYTE PTR [rax],al
   140015288:	adc    BYTE PTR [rbx+0x1],bh
   14001528e:	add    BYTE PTR [rax],al
   140015290:	in     al,dx
   140015291:	mov    edx,0x1
   140015296:	add    BYTE PTR [rax],al
   140015298:	ret    0x1ba
   14001529b:	add    BYTE PTR [rax],al
   14001529d:	add    BYTE PTR [rax],al
   14001529f:	add    BYTE PTR [rsi-0x46],bh
   1400152a2:	add    DWORD PTR [rax],eax
   1400152a4:	add    BYTE PTR [rax],al
   1400152a6:	add    BYTE PTR [rax],al
   1400152a8:	rex.WX movabs rdx,0xba20000000000001
   1400152b2:	add    DWORD PTR [rax],eax
   1400152b4:	add    BYTE PTR [rax],al
   1400152b6:	add    BYTE PTR [rax],al
   1400152b8:	(bad)  
   1400152b9:	mov    edx,0x1
   1400152be:	add    BYTE PTR [rax],al
   1400152c0:	sar    BYTE PTR [rcx+0x1],cl
   1400152c6:	add    BYTE PTR [rax],al
   1400152c8:	mov    WORD PTR [rcx+0x1],?
   1400152ce:	add    BYTE PTR [rax],al
   1400152d0:	add    cl,al
   1400152d2:	add    DWORD PTR [rax],eax
	...
   1400152e0:	rex.WX movabs rcx,0xb92a000000000001
   1400152ea:	add    DWORD PTR [rax],eax
   1400152ec:	add    BYTE PTR [rax],al
   1400152ee:	add    BYTE PTR [rax],al
   1400152f0:	(bad)  
   1400152f1:	mov    eax,0x1
   1400152f6:	add    BYTE PTR [rax],al
   1400152f8:	loop   0x1400152b2
   1400152fa:	add    DWORD PTR [rax],eax
   1400152fc:	add    BYTE PTR [rax],al
   1400152fe:	add    BYTE PTR [rax],al
   140015300:	(bad)  
   140015301:	mov    eax,0x1
   140015306:	add    BYTE PTR [rax],al
   140015308:	test   al,0xb8
   14001530a:	add    DWORD PTR [rax],eax
   14001530c:	add    BYTE PTR [rax],al
   14001530e:	add    BYTE PTR [rax],al
   140015310:	mov    BYTE PTR [rax+0x1],bh
   140015316:	add    BYTE PTR [rax],al
   140015318:	je     0x1400152d2
   14001531a:	add    DWORD PTR [rax],eax
   14001531c:	add    BYTE PTR [rax],al
   14001531e:	add    BYTE PTR [rax],al
   140015320:	pop    rsi
   140015321:	mov    ecx,0x1
	...
   14001532e:	add    BYTE PTR [rax],al
   140015330:	out    0xa1,al
   140015332:	add    DWORD PTR [rax],eax
   140015334:	add    BYTE PTR [rax],al
   140015336:	add    BYTE PTR [rax],al
   140015338:	sub    BYTE PTR [rdx+0x1],ah
   14001533e:	add    BYTE PTR [rax],al
   140015340:	push   rsp
   140015341:	movabs ds:0xa288000000000001,al
   14001534a:	add    DWORD PTR [rax],eax
   14001534c:	add    BYTE PTR [rax],al
   14001534e:	add    BYTE PTR [rax],al
   140015350:	ret    0x1a2
   140015353:	add    BYTE PTR [rax],al
   140015355:	add    BYTE PTR [rax],al
   140015357:	add    ah,dh
   140015359:	movabs ds:0xa346000000000001,al
   140015362:	add    DWORD PTR [rax],eax
   140015364:	add    BYTE PTR [rax],al
   140015366:	add    BYTE PTR [rax],al
   140015368:	nop
   140015369:	movabs ds:0xa3dc000000000001,eax
   140015372:	add    DWORD PTR [rax],eax
   140015374:	add    BYTE PTR [rax],al
   140015376:	add    BYTE PTR [rax],al
   140015378:	or     ah,BYTE PTR [rcx+rax*1+0x0]
   14001537f:	add    BYTE PTR [rax],dh
   140015381:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015382:	add    DWORD PTR [rax],eax
   140015384:	add    BYTE PTR [rax],al
   140015386:	add    BYTE PTR [rax],al
   140015388:	ins    BYTE PTR es:[rdi],dx
   140015389:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001538a:	add    DWORD PTR [rax],eax
   14001538c:	add    BYTE PTR [rax],al
   14001538e:	add    BYTE PTR [rax],al
   140015390:	xchg   edx,eax
   140015391:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015392:	add    DWORD PTR [rax],eax
   140015394:	add    BYTE PTR [rax],al
   140015396:	add    BYTE PTR [rax],al
   140015398:	mov    eax,0x1a4
   14001539d:	add    BYTE PTR [rax],al
   14001539f:	add    ah,ah
   1400153a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400153a2:	add    DWORD PTR [rax],eax
   1400153a4:	add    BYTE PTR [rax],al
   1400153a6:	add    BYTE PTR [rax],al
   1400153a8:	or     BYTE PTR [rbp+0x1],ah
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	cmp    al,0xa5
   1400153b2:	add    DWORD PTR [rax],eax
   1400153b4:	add    BYTE PTR [rax],al
   1400153b6:	add    BYTE PTR [rax],al
   1400153b8:	jb     0x14001535f
   1400153ba:	add    DWORD PTR [rax],eax
   1400153bc:	add    BYTE PTR [rax],al
   1400153be:	add    BYTE PTR [rax],al
   1400153c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400153c2:	add    DWORD PTR [rax],eax
   1400153c4:	add    BYTE PTR [rax],al
   1400153c6:	add    BYTE PTR [rax],al
   1400153c8:	(bad)  
   1400153c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400153ca:	add    DWORD PTR [rax],eax
   1400153cc:	add    BYTE PTR [rax],al
   1400153ce:	add    BYTE PTR [rax],al
   1400153d0:	or     BYTE PTR [rsi+0x1],ah
   1400153d6:	add    BYTE PTR [rax],al
   1400153d8:	cmp    ah,BYTE PTR [rsi+0x1]
   1400153de:	add    BYTE PTR [rax],al
   1400153e0:	push   0xffffffffffffffa6
   1400153e2:	add    DWORD PTR [rax],eax
   1400153e4:	add    BYTE PTR [rax],al
   1400153e6:	add    BYTE PTR [rax],al
   1400153e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153ea:	add    DWORD PTR [rax],eax
   1400153ec:	add    BYTE PTR [rax],al
   1400153ee:	add    BYTE PTR [rax],al
   1400153f0:	shl    BYTE PTR [rsi+0x1],cl
   1400153f6:	add    BYTE PTR [rax],al
   1400153f8:	cld    
   1400153f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153fa:	add    DWORD PTR [rax],eax
   1400153fc:	add    BYTE PTR [rax],al
   1400153fe:	add    BYTE PTR [rax],al
   140015400:	sbb    al,0xa7
   140015402:	add    DWORD PTR [rax],eax
   140015404:	add    BYTE PTR [rax],al
   140015406:	add    BYTE PTR [rax],al
   140015408:	cmp    BYTE PTR [rdi+0x1],ah
   14001540e:	add    BYTE PTR [rax],al
   140015410:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140015412:	add    DWORD PTR [rax],eax
   140015414:	add    BYTE PTR [rax],al
   140015416:	add    BYTE PTR [rax],al
   140015418:	test   BYTE PTR [rdi+0x1],ah
   14001541e:	add    BYTE PTR [rax],al
   140015420:	lods   al,BYTE PTR ds:[rsi]
   140015421:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015422:	add    DWORD PTR [rax],eax
   140015424:	add    BYTE PTR [rax],al
   140015426:	add    BYTE PTR [rax],al
   140015428:	fsub   DWORD PTR [rdi+0x1]
   14001542e:	add    BYTE PTR [rax],al
   140015430:	or     ch,BYTE PTR [rax+0x1]
   140015436:	add    BYTE PTR [rax],al
   140015438:	rex.R test al,0x1
   14001543b:	add    BYTE PTR [rax],al
   14001543d:	add    BYTE PTR [rax],al
   14001543f:	add    BYTE PTR [rax+0x1a8],al
   140015445:	add    BYTE PTR [rax],al
   140015447:	add    BYTE PTR [rsi+0x1a8],bh
   14001544d:	add    BYTE PTR [rax],al
   14001544f:	add    al,bh
   140015451:	test   al,0x1
   140015453:	add    BYTE PTR [rax],al
   140015455:	add    BYTE PTR [rax],al
   140015457:	add    BYTE PTR [rdx],ch
   140015459:	test   eax,0x1
   14001545e:	add    BYTE PTR [rax],al
   140015460:	(bad)  
   140015461:	test   eax,0x1
   140015466:	add    BYTE PTR [rax],al
   140015468:	xchg   esi,eax
   140015469:	test   eax,0x1
   14001546e:	add    BYTE PTR [rax],al
   140015470:	retf   0x1a9
   140015473:	add    BYTE PTR [rax],al
   140015475:	add    BYTE PTR [rax],al
   140015477:	add    BYTE PTR [rdx],al
   140015479:	stos   BYTE PTR es:[rdi],al
   14001547a:	add    DWORD PTR [rax],eax
   14001547c:	add    BYTE PTR [rax],al
   14001547e:	add    BYTE PTR [rax],al
   140015480:	cmp    BYTE PTR [rdx+0x1],ch
   140015486:	add    BYTE PTR [rax],al
   140015488:	ins    BYTE PTR es:[rdi],dx
   140015489:	stos   BYTE PTR es:[rdi],al
   14001548a:	add    DWORD PTR [rax],eax
   14001548c:	add    BYTE PTR [rax],al
   14001548e:	add    BYTE PTR [rax],al
   140015490:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015491:	stos   BYTE PTR es:[rdi],al
   140015492:	add    DWORD PTR [rax],eax
   140015494:	add    BYTE PTR [rax],al
   140015496:	add    BYTE PTR [rax],al
   140015498:	fisubr WORD PTR [rdx+0x1]
   14001549e:	add    BYTE PTR [rax],al
   1400154a0:	sbb    BYTE PTR [rbx+0x1],ch
   1400154a6:	add    BYTE PTR [rax],al
   1400154a8:	stos   QWORD PTR es:[rdi],rax
   1400154aa:	add    DWORD PTR [rax],eax
   1400154ac:	add    BYTE PTR [rax],al
   1400154ae:	add    BYTE PTR [rax],al
   1400154b0:	js     0x14001545d
   1400154b2:	add    DWORD PTR [rax],eax
   1400154b4:	add    BYTE PTR [rax],al
   1400154b6:	add    BYTE PTR [rax],al
   1400154b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400154b9:	stos   DWORD PTR es:[rdi],eax
   1400154ba:	add    DWORD PTR [rax],eax
   1400154bc:	add    BYTE PTR [rax],al
   1400154be:	add    BYTE PTR [rax],al
   1400154c0:	in     al,0xab
   1400154c2:	add    DWORD PTR [rax],eax
   1400154c4:	add    BYTE PTR [rax],al
   1400154c6:	add    BYTE PTR [rax],al
   1400154c8:	lods   al,BYTE PTR cs:[rsi]
   1400154ca:	add    DWORD PTR [rax],eax
   1400154cc:	add    BYTE PTR [rax],al
   1400154ce:	add    BYTE PTR [rax],al
   1400154d0:	pop    rsi
   1400154d1:	lods   al,BYTE PTR ds:[rsi]
   1400154d2:	add    DWORD PTR [rax],eax
   1400154d4:	add    BYTE PTR [rax],al
   1400154d6:	add    BYTE PTR [rax],al
   1400154d8:	(bad)  
   1400154d9:	lods   al,BYTE PTR ds:[rsi]
   1400154da:	add    DWORD PTR [rax],eax
   1400154dc:	add    BYTE PTR [rax],al
   1400154de:	add    BYTE PTR [rax],al
   1400154e0:	(bad)  
   1400154e1:	lods   al,BYTE PTR ds:[rsi]
   1400154e2:	add    DWORD PTR [rax],eax
   1400154e4:	add    BYTE PTR [rax],al
   1400154e6:	add    BYTE PTR [rax],al
   1400154e8:	(bad)  
   1400154e9:	lods   al,BYTE PTR ds:[rsi]
   1400154ea:	add    DWORD PTR [rax],eax
   1400154ec:	add    BYTE PTR [rax],al
   1400154ee:	add    BYTE PTR [rax],al
   1400154f0:	cmp    al,0xad
   1400154f2:	add    DWORD PTR [rax],eax
   1400154f4:	add    BYTE PTR [rax],al
   1400154f6:	add    BYTE PTR [rax],al
   1400154f8:	jl     0x1400154a7
   1400154fa:	add    DWORD PTR [rax],eax
   1400154fc:	add    BYTE PTR [rax],al
   1400154fe:	add    BYTE PTR [rax],al
   140015500:	mov    edx,0x1a1
   140015505:	add    BYTE PTR [rax],al
   140015507:	add    al,dh
   140015509:	lods   eax,DWORD PTR ds:[rsi]
   14001550a:	add    DWORD PTR [rax],eax
   14001550c:	add    BYTE PTR [rax],al
   14001550e:	add    BYTE PTR [rax],al
   140015510:	sub    BYTE PTR [rsi+0x1],ch
   140015516:	add    BYTE PTR [rax],al
   140015518:	push   rsi
   140015519:	scas   al,BYTE PTR es:[rdi]
   14001551a:	add    DWORD PTR [rax],eax
   14001551c:	add    BYTE PTR [rax],al
   14001551e:	add    BYTE PTR [rax],al
   140015520:	js     0x1400154d0
   140015522:	add    DWORD PTR [rax],eax
   140015524:	add    BYTE PTR [rax],al
   140015526:	add    BYTE PTR [rax],al
   140015528:	(bad)  
   140015529:	scas   al,BYTE PTR es:[rdi]
   14001552a:	add    DWORD PTR [rax],eax
   14001552c:	add    BYTE PTR [rax],al
   14001552e:	add    BYTE PTR [rax],al
   140015530:	mov    eax,0x1ae
   140015535:	add    BYTE PTR [rax],al
   140015537:	add    BYTE PTR [rax-0x68],bl
   14001553a:	add    DWORD PTR [rax],eax
   14001553c:	add    BYTE PTR [rax],al
   14001553e:	add    BYTE PTR [rax],al
   140015540:	hlt    
   140015541:	scas   al,BYTE PTR es:[rdi]
   140015542:	add    DWORD PTR [rax],eax
   140015544:	add    BYTE PTR [rax],al
   140015546:	add    BYTE PTR [rax],al
   140015548:	sub    ch,BYTE PTR [rdi+0x1]
   14001554e:	add    BYTE PTR [rax],al
   140015550:	fs scas eax,DWORD PTR es:[rdi]
   140015552:	add    DWORD PTR [rax],eax
   140015554:	add    BYTE PTR [rax],al
   140015556:	add    BYTE PTR [rax],al
   140015558:	pushf  
   140015559:	scas   eax,DWORD PTR es:[rdi]
   14001555a:	add    DWORD PTR [rax],eax
   14001555c:	add    BYTE PTR [rax],al
   14001555e:	add    BYTE PTR [rax],al
   140015560:	mov    dh,0xaf
   140015562:	add    DWORD PTR [rax],eax
   140015564:	add    BYTE PTR [rax],al
   140015566:	add    BYTE PTR [rax],al
   140015568:	(bad)  
   140015569:	scas   eax,DWORD PTR es:[rdi]
   14001556a:	add    DWORD PTR [rax],eax
   14001556c:	add    BYTE PTR [rax],al
   14001556e:	add    BYTE PTR [rax],al
   140015570:	sbb    BYTE PTR [rax+0x1],dh
   140015576:	add    BYTE PTR [rax],al
   140015578:	mov    al,0x1
   14001557b:	add    BYTE PTR [rax],al
   14001557d:	add    BYTE PTR [rax],al
   14001557f:	add    BYTE PTR [rax-0x50],dh
   140015582:	add    DWORD PTR [rax],eax
   140015584:	add    BYTE PTR [rax],al
   140015586:	add    BYTE PTR [rax],al
   140015588:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015589:	mov    al,0x1
   14001558b:	add    BYTE PTR [rax],al
   14001558d:	add    BYTE PTR [rax],al
   14001558f:	add    ah,bl
   140015591:	mov    al,0x1
   140015593:	add    BYTE PTR [rax],al
   140015595:	add    BYTE PTR [rax],al
   140015597:	add    BYTE PTR [rdx],al
   140015599:	mov    cl,0x1
   14001559b:	add    BYTE PTR [rax],al
   14001559d:	add    BYTE PTR [rax],al
   14001559f:	add    BYTE PTR [rax],dh
   1400155a1:	mov    cl,0x1
   1400155a3:	add    BYTE PTR [rax],al
   1400155a5:	add    BYTE PTR [rax],al
   1400155a7:	add    BYTE PTR [rax+0x1b1],cl
   1400155ad:	add    BYTE PTR [rax],al
   1400155af:	add    BYTE PTR [rcx+rsi*4+0x1],bh
   1400155b6:	add    BYTE PTR [rax],al
   1400155b8:	(bad)  
   1400155b9:	mov    cl,0x1
   1400155bb:	add    BYTE PTR [rax],al
   1400155bd:	add    BYTE PTR [rax],al
   1400155bf:	add    BYTE PTR [rsi],ch
   1400155c1:	mov    dl,0x1
   1400155c3:	add    BYTE PTR [rax],al
   1400155c5:	add    BYTE PTR [rax],al
   1400155c7:	add    BYTE PTR [rdx-0x4e],bl
   1400155ca:	add    DWORD PTR [rax],eax
   1400155cc:	add    BYTE PTR [rax],al
   1400155ce:	add    BYTE PTR [rax],al
   1400155d0:	(bad)  
   1400155d1:	mov    dl,0x1
   1400155d3:	add    BYTE PTR [rax],al
   1400155d5:	add    BYTE PTR [rax],al
   1400155d7:	add    ah,cl
   1400155d9:	mov    dl,0x1
   1400155db:	add    BYTE PTR [rax],al
   1400155dd:	add    BYTE PTR [rax],al
   1400155df:	add    dh,bh
   1400155e1:	mov    dl,0x1
   1400155e3:	add    BYTE PTR [rax],al
   1400155e5:	add    BYTE PTR [rax],al
   1400155e7:	add    BYTE PTR [rax],ch
   1400155e9:	mov    bl,0x1
   1400155eb:	add    BYTE PTR [rax],al
   1400155ed:	add    BYTE PTR [rax],al
   1400155ef:	add    BYTE PTR [rax-0x4d],ch
   1400155f2:	add    DWORD PTR [rax],eax
   1400155f4:	add    BYTE PTR [rax],al
   1400155f6:	add    BYTE PTR [rax],al
   1400155f8:	xchg   edx,eax
   1400155f9:	mov    bl,0x1
   1400155fb:	add    BYTE PTR [rax],al
   1400155fd:	add    BYTE PTR [rax],al
   1400155ff:	add    BYTE PTR [rbx+rsi*4+0x1],bh
   140015606:	add    BYTE PTR [rax],al
   140015608:	in     al,dx
   140015609:	mov    bl,0x1
   14001560b:	add    BYTE PTR [rax],al
   14001560d:	add    BYTE PTR [rax],al
   14001560f:	add    BYTE PTR [rsp+rsi*4],dl
   140015612:	add    DWORD PTR [rax],eax
   140015614:	add    BYTE PTR [rax],al
   140015616:	add    BYTE PTR [rax],al
   140015618:	ds mov ah,0x1
   14001561b:	add    BYTE PTR [rax],al
   14001561d:	add    BYTE PTR [rax],al
   14001561f:	add    BYTE PTR [rdx-0x4c],dh
   140015622:	add    DWORD PTR [rax],eax
   140015624:	add    BYTE PTR [rax],al
   140015626:	add    BYTE PTR [rax],al
   140015628:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015629:	mov    ah,0x1
   14001562b:	add    BYTE PTR [rax],al
   14001562d:	add    BYTE PTR [rax],al
   14001562f:	add    ah,bl
   140015631:	mov    ah,0x1
   140015633:	add    BYTE PTR [rax],al
   140015635:	add    BYTE PTR [rax],al
   140015637:	add    BYTE PTR [rsi],cl
   140015639:	mov    ch,0x1
   14001563b:	add    BYTE PTR [rax],al
   14001563d:	add    BYTE PTR [rax],al
   14001563f:	add    BYTE PTR [rsi],bh
   140015641:	mov    ch,0x1
   140015643:	add    BYTE PTR [rax],al
   140015645:	add    BYTE PTR [rax],al
   140015647:	add    BYTE PTR [rdx-0x4b],ah
   14001564a:	add    DWORD PTR [rax],eax
   14001564c:	add    BYTE PTR [rax],al
   14001564e:	add    BYTE PTR [rax],al
   140015650:	xchg   BYTE PTR [rbp+0x1],dh
   140015656:	add    BYTE PTR [rax],al
   140015658:	movabs al,ds:0xba000000000001b5
   140015661:	mov    ch,0x1
   140015663:	add    BYTE PTR [rax],al
   140015665:	add    BYTE PTR [rax],al
   140015667:	add    dh,dl
   140015669:	mov    ch,0x1
   14001566b:	add    BYTE PTR [rax],al
   14001566d:	add    BYTE PTR [rax],al
   14001566f:	add    dl,dh
   140015671:	mov    ch,0x1
   140015673:	add    BYTE PTR [rax],al
   140015675:	add    BYTE PTR [rax],al
   140015677:	add    BYTE PTR [rsi+rsi*4],cl
   14001567a:	add    DWORD PTR [rax],eax
   14001567c:	add    BYTE PTR [rax],al
   14001567e:	add    BYTE PTR [rax],al
   140015680:	cmp    al,0xb6
   140015682:	add    DWORD PTR [rax],eax
   140015684:	add    BYTE PTR [rax],al
   140015686:	add    BYTE PTR [rax],al
   140015688:	fs mov dh,0x1
   14001568b:	add    BYTE PTR [rax],al
   14001568d:	add    BYTE PTR [rax],al
   14001568f:	add    BYTE PTR [rdx+0x1b6],dl
   140015695:	add    BYTE PTR [rax],al
   140015697:	add    BYTE PTR [rdx+0x1b6],bh
   14001569d:	add    BYTE PTR [rax],al
   14001569f:	add    dh,dh
   1400156a1:	mov    dh,0x1
   1400156a3:	add    BYTE PTR [rax],al
   1400156a5:	add    BYTE PTR [rax],al
   1400156a7:	add    BYTE PTR [rdi+rsi*4],ah
   1400156aa:	add    DWORD PTR [rax],eax
   1400156ac:	add    BYTE PTR [rax],al
   1400156ae:	add    BYTE PTR [rax],al
   1400156b0:	push   rax
   1400156b1:	mov    bh,0x1
   1400156b3:	add    BYTE PTR [rax],al
   1400156b5:	add    BYTE PTR [rax],al
   1400156b7:	add    BYTE PTR [rdx+0x1b7],dl
   1400156bd:	add    BYTE PTR [rax],al
   1400156bf:	add    dh,al
   1400156c1:	mov    bh,0x1
   1400156c3:	add    BYTE PTR [rax],al
   1400156c5:	add    BYTE PTR [rax],al
   1400156c7:	add    dl,dh
   1400156c9:	mov    bh,0x1
   1400156cb:	add    BYTE PTR [rax],al
   1400156cd:	add    BYTE PTR [rax],al
   1400156cf:	add    BYTE PTR [rdx],dh
   1400156d1:	mov    eax,0x1
   1400156d6:	add    BYTE PTR [rax],al
   1400156d8:	xchg   BYTE PTR [rcx+0x1],ah
   1400156de:	add    BYTE PTR [rax],al
   1400156e0:	push   rax
   1400156e1:	movabs eax,ds:0xa120000000000001
   1400156ea:	add    DWORD PTR [rax],eax
   1400156ec:	add    BYTE PTR [rax],al
   1400156ee:	add    BYTE PTR [rax],al
   1400156f0:	fisub  DWORD PTR [rax+0x1]
   1400156f6:	add    BYTE PTR [rax],al
   1400156f8:	stos   BYTE PTR es:[rdi],al
   1400156f9:	movabs al,ds:0xa072000000000001
   140015702:	add    DWORD PTR [rax],eax
   140015704:	add    BYTE PTR [rax],al
   140015706:	add    BYTE PTR [rax],al
   140015708:	push   rsi
   140015709:	movabs al,ds:0xa03a000000000001
   140015712:	add    DWORD PTR [rax],eax
   140015714:	add    BYTE PTR [rax],al
   140015716:	add    BYTE PTR [rax],al
   140015718:	(bad)  
   140015719:	movabs al,ds:0xa020000000000001
   140015722:	add    DWORD PTR [rax],eax
   140015724:	add    BYTE PTR [rax],al
   140015726:	add    BYTE PTR [rax],al
   140015728:	fcomp  DWORD PTR [rdi+0x1]
   14001572e:	add    BYTE PTR [rax],al
   140015730:	pushf  
   140015731:	lahf   
   140015732:	add    DWORD PTR [rax],eax
   140015734:	add    BYTE PTR [rax],al
   140015736:	add    BYTE PTR [rax],al
   140015738:	ins    BYTE PTR es:[rdi],dx
   140015739:	lahf   
   14001573a:	add    DWORD PTR [rax],eax
   14001573c:	add    BYTE PTR [rax],al
   14001573e:	add    BYTE PTR [rax],al
   140015740:	cmp    bl,BYTE PTR [rdi+0x1]
   140015746:	add    BYTE PTR [rax],al
   140015748:	or     BYTE PTR [rdi+0x1],bl
   14001574e:	add    BYTE PTR [rax],al
   140015750:	ficomp DWORD PTR [rsi+0x1]
   140015756:	add    BYTE PTR [rax],al
   140015758:	mov    ah,0x9e
   14001575a:	add    DWORD PTR [rax],eax
   14001575c:	add    BYTE PTR [rax],al
   14001575e:	add    BYTE PTR [rax],al
   140015760:	xchg   edx,eax
   140015761:	sahf   
   140015762:	add    DWORD PTR [rax],eax
   140015764:	add    BYTE PTR [rax],al
   140015766:	add    BYTE PTR [rax],al
   140015768:	pop    rax
   140015769:	sahf   
   14001576a:	add    DWORD PTR [rax],eax
   14001576c:	add    BYTE PTR [rax],al
   14001576e:	add    BYTE PTR [rax],al
   140015770:	sbb    BYTE PTR [rsi+0x1],bl
   140015776:	add    BYTE PTR [rax],al
   140015778:	in     al,dx
   140015779:	popf   
   14001577a:	add    DWORD PTR [rax],eax
   14001577c:	add    BYTE PTR [rax],al
   14001577e:	add    BYTE PTR [rax],al
   140015780:	(bad)  
   140015781:	popf   
   140015782:	add    DWORD PTR [rax],eax
   140015784:	add    BYTE PTR [rax],al
   140015786:	add    BYTE PTR [rax],al
   140015788:	test   BYTE PTR [rbp+0x1],bl
   14001578e:	add    BYTE PTR [rax],al
   140015790:	and    al,0x9d
   140015792:	add    DWORD PTR [rax],eax
   140015794:	add    BYTE PTR [rax],al
   140015796:	add    BYTE PTR [rax],al
   140015798:	cli    
   140015799:	pushf  
   14001579a:	add    DWORD PTR [rax],eax
   14001579c:	add    BYTE PTR [rax],al
   14001579e:	add    BYTE PTR [rax],al
   1400157a0:	mov    dh,0x9c
   1400157a2:	add    DWORD PTR [rax],eax
   1400157a4:	add    BYTE PTR [rax],al
   1400157a6:	add    BYTE PTR [rax],al
   1400157a8:	pop    rdx
   1400157a9:	pushf  
   1400157aa:	add    DWORD PTR [rax],eax
   1400157ac:	add    BYTE PTR [rax],al
   1400157ae:	add    BYTE PTR [rax],al
   1400157b0:	cmp    bl,BYTE PTR [rcx+rax*1+0x0]
   1400157b7:	add    BYTE PTR [rsi],al
   1400157b9:	pushf  
   1400157ba:	add    DWORD PTR [rax],eax
   1400157bc:	add    BYTE PTR [rax],al
   1400157be:	add    BYTE PTR [rax],al
   1400157c0:	rcr    BYTE PTR [rbx+0x1],cl
   1400157c6:	add    BYTE PTR [rax],al
   1400157c8:	lods   al,BYTE PTR ds:[rsi]
   1400157c9:	fwait
   1400157ca:	add    DWORD PTR [rax],eax
   1400157cc:	add    BYTE PTR [rax],al
   1400157ce:	add    BYTE PTR [rax],al
   1400157d0:	js     0x14001576d
   1400157d2:	add    DWORD PTR [rax],eax
   1400157d4:	add    BYTE PTR [rax],al
   1400157d6:	add    BYTE PTR [rax],al
   1400157d8:	rex.W
   1400157d9:	fwait
   1400157da:	add    DWORD PTR [rax],eax
   1400157dc:	add    BYTE PTR [rax],al
   1400157de:	add    BYTE PTR [rax],al
   1400157e0:	and    BYTE PTR [rbx+0x1],bl
   1400157e6:	add    BYTE PTR [rax],al
   1400157e8:	(bad)  
   1400157e9:	(bad)  
   1400157ea:	add    DWORD PTR [rax],eax
   1400157ec:	add    BYTE PTR [rax],al
   1400157ee:	add    BYTE PTR [rax],al
   1400157f0:	fcomp  DWORD PTR [rdx+0x1]
   1400157f6:	add    BYTE PTR [rax],al
   1400157f8:	stos   BYTE PTR es:[rdi],al
   1400157f9:	(bad)  
   1400157fa:	add    DWORD PTR [rax],eax
   1400157fc:	add    BYTE PTR [rax],al
   1400157fe:	add    BYTE PTR [rax],al
   140015800:	push   0x19a
   140015805:	add    BYTE PTR [rax],al
   140015807:	add    BYTE PTR [rsi],ch
   140015809:	(bad)  
   14001580a:	add    DWORD PTR [rax],eax
   14001580c:	add    BYTE PTR [rax],al
   14001580e:	add    BYTE PTR [rax],al
   140015810:	(bad)  
   140015811:	(bad)  
   140015812:	add    DWORD PTR [rax],eax
   140015814:	add    BYTE PTR [rax],al
   140015816:	add    BYTE PTR [rax],al
   140015818:	ficomp WORD PTR [rcx+0x1]
   14001581e:	add    BYTE PTR [rax],al
   140015820:	scas   al,BYTE PTR es:[rdi]
   140015821:	cdq    
   140015822:	add    DWORD PTR [rax],eax
   140015824:	add    BYTE PTR [rax],al
   140015826:	add    BYTE PTR [rax],al
   140015828:	test   BYTE PTR [rcx+0x1],bl
   14001582e:	add    BYTE PTR [rax],al
   140015830:	push   0xffffffffffffff99
   140015832:	add    DWORD PTR [rax],eax
   140015834:	add    BYTE PTR [rax],al
   140015836:	add    BYTE PTR [rax],al
   140015838:	rex.X cdq 
   14001583a:	add    DWORD PTR [rax],eax
   14001583c:	add    BYTE PTR [rax],al
   14001583e:	add    BYTE PTR [rax],al
   140015840:	and    BYTE PTR [rcx+0x1],bl
   140015846:	add    BYTE PTR [rax],al
   140015848:	hlt    
   140015849:	cwde   
   14001584a:	add    DWORD PTR [rax],eax
   14001584c:	add    BYTE PTR [rax],al
   14001584e:	add    BYTE PTR [rax],al
   140015850:	mov    esi,0x198
   140015855:	add    BYTE PTR [rax],al
   140015857:	add    al,bh
   140015859:	push   0x1
   14001585e:	add    BYTE PTR [rax],al
   140015860:	mov    ds,WORD PTR [rax+0x1]
   140015866:	add    BYTE PTR [rax],al
   140015868:	(bad)  
   140015869:	push   0x1
   14001586e:	add    BYTE PTR [rax],al
   140015870:	xchg   edx,eax
   140015871:	push   0x1
   140015876:	add    BYTE PTR [rax],al
   140015878:	(bad)  
   140015879:	push   0x1
   14001587e:	add    BYTE PTR [rax],al
   140015880:	cs push 0x1
   140015886:	add    BYTE PTR [rax],al
   140015888:	repnz add DWORD PTR [eax],eax
   14001588c:	add    BYTE PTR [rax],al
   14001588e:	add    BYTE PTR [rax],al
   140015890:	mov    edx,0x167
   140015895:	add    BYTE PTR [rax],al
   140015897:	add    BYTE PTR [rdi+riz*2+0x1],al
   14001589e:	add    BYTE PTR [rax],al
   1400158a0:	pop    rsp
   1400158a1:	add    DWORD PTR [eax],eax
   1400158a4:	add    BYTE PTR [rax],al
   1400158a6:	add    BYTE PTR [rax],al
   1400158a8:	cmp    BYTE PTR [rdi+0x1],ah
   1400158ab:	add    BYTE PTR [rax],al
   1400158ad:	add    BYTE PTR [rax],al
   1400158af:	add    BYTE PTR [rdx],cl
   1400158b1:	add    DWORD PTR [eax],eax
   1400158b4:	add    BYTE PTR [rax],al
   1400158b6:	add    BYTE PTR [rax],al
   1400158b8:	in     al,0x66
   1400158ba:	add    DWORD PTR [rax],eax
   1400158bc:	add    BYTE PTR [rax],al
   1400158be:	add    BYTE PTR [rax],al
   1400158c0:	ret    0x166
   1400158c3:	add    BYTE PTR [rax],al
   1400158c5:	add    BYTE PTR [rax],al
   1400158c7:	add    BYTE PTR [rdx+0x166],bl
   1400158cd:	add    BYTE PTR [rax],al
   1400158cf:	add    BYTE PTR [rdx],dh
   1400158d1:	cwde   
   1400158d2:	add    DWORD PTR [rax],eax
   1400158d4:	add    BYTE PTR [rax],al
   1400158d6:	add    BYTE PTR [rax],al
   1400158d8:	(bad)  
   1400158d9:	cwde   
   1400158da:	add    DWORD PTR [rax],eax
   1400158dc:	add    BYTE PTR [rax],al
   1400158de:	add    BYTE PTR [rax],al
   1400158e0:	test   BYTE PTR [rdi+0x1],dl
   1400158e6:	add    BYTE PTR [rax],al
   1400158e8:	or     BYTE PTR [rdi+0x1],dl
   1400158ee:	add    BYTE PTR [rax],al
   1400158f0:	enter  0x196,0x0
   1400158f4:	add    BYTE PTR [rax],al
   1400158f6:	add    BYTE PTR [rax],al
   1400158f8:	mov    ss,WORD PTR [rsi+0x1]
   1400158fe:	add    BYTE PTR [rax],al
   140015900:	js     0x140015898
   140015902:	add    DWORD PTR [rax],eax
   140015904:	add    BYTE PTR [rax],al
   140015906:	add    BYTE PTR [rax],al
   140015908:	(bad)  
   140015909:	xchg   esi,eax
   14001590a:	add    DWORD PTR [rax],eax
   14001590c:	add    BYTE PTR [rax],al
   14001590e:	add    BYTE PTR [rax],al
   140015910:	rex.RX xchg esi,eax
   140015912:	add    DWORD PTR [rax],eax
   140015914:	add    BYTE PTR [rax],al
   140015916:	add    BYTE PTR [rax],al
   140015918:	cs xchg esi,eax
   14001591a:	add    DWORD PTR [rax],eax
   14001591c:	add    BYTE PTR [rax],al
   14001591e:	add    BYTE PTR [rax],al
   140015920:	sbb    BYTE PTR [rsi+0x1],dl
   140015926:	add    BYTE PTR [rax],al
   140015928:	add    BYTE PTR [rsi+0x1],dl
   14001592e:	add    BYTE PTR [rax],al
   140015930:	out    0x95,al
   140015932:	add    DWORD PTR [rax],eax
   140015934:	add    BYTE PTR [rax],al
   140015936:	add    BYTE PTR [rax],al
   140015938:	(bad)  
   140015939:	xchg   ebp,eax
   14001593a:	add    DWORD PTR [rax],eax
   14001593c:	add    BYTE PTR [rax],al
   14001593e:	add    BYTE PTR [rax],al
   140015940:	xchg   edx,eax
   140015941:	xchg   ebp,eax
   140015942:	add    DWORD PTR [rax],eax
   140015944:	add    BYTE PTR [rax],al
   140015946:	add    BYTE PTR [rax],al
   140015948:	push   0xffffffffffffff95
   14001594a:	add    DWORD PTR [rax],eax
   14001594c:	add    BYTE PTR [rax],al
   14001594e:	add    BYTE PTR [rax],al
   140015950:	cmp    dl,BYTE PTR [rbp+0x1]
   140015956:	add    BYTE PTR [rax],al
   140015958:	add    dl,BYTE PTR [rbp+0x1]
   14001595e:	add    BYTE PTR [rax],al
   140015960:	(bad)  
   140015961:	xchg   esp,eax
   140015962:	add    DWORD PTR [rax],eax
   140015964:	add    BYTE PTR [rax],al
   140015966:	add    BYTE PTR [rax],al
   140015968:	movabs al,ds:0x7000000000000194
   140015971:	xchg   esp,eax
   140015972:	add    DWORD PTR [rax],eax
   140015974:	add    BYTE PTR [rax],al
   140015976:	add    BYTE PTR [rax],al
   140015978:	rex xchg esp,eax
   14001597a:	add    DWORD PTR [rax],eax
   14001597c:	add    BYTE PTR [rax],al
   14001597e:	add    BYTE PTR [rax],al
   140015980:	sbb    BYTE PTR [rcx+rax*1+0x0],dl
   140015987:	add    dh,ah
   140015989:	xchg   ebx,eax
   14001598a:	add    DWORD PTR [rax],eax
   14001598c:	add    BYTE PTR [rax],al
   14001598e:	add    BYTE PTR [rax],al
   140015990:	mov    esp,0x193
   140015995:	add    BYTE PTR [rax],al
   140015997:	add    BYTE PTR [rsi-0x6d],bh
   14001599a:	add    DWORD PTR [rax],eax
   14001599c:	add    BYTE PTR [rax],al
   14001599e:	add    BYTE PTR [rax],al
   1400159a0:	push   rsp
   1400159a1:	xchg   ebx,eax
   1400159a2:	add    DWORD PTR [rax],eax
   1400159a4:	add    BYTE PTR [rax],al
   1400159a6:	add    BYTE PTR [rax],al
   1400159a8:	and    dl,BYTE PTR [rbx+0x1]
   1400159ae:	add    BYTE PTR [rax],al
   1400159b0:	fcom   DWORD PTR [rdx+0x1]
   1400159b6:	add    BYTE PTR [rax],al
   1400159b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400159b9:	xchg   edx,eax
   1400159ba:	add    DWORD PTR [rax],eax
   1400159bc:	add    BYTE PTR [rax],al
   1400159be:	add    BYTE PTR [rax],al
   1400159c0:	test   BYTE PTR [rdx+0x1],dl
   1400159c6:	add    BYTE PTR [rax],al
   1400159c8:	pop    rax
   1400159c9:	xchg   edx,eax
   1400159ca:	add    DWORD PTR [rax],eax
   1400159cc:	add    BYTE PTR [rax],al
   1400159ce:	add    BYTE PTR [rax],al
   1400159d0:	ss xchg edx,eax
   1400159d2:	add    DWORD PTR [rax],eax
   1400159d4:	add    BYTE PTR [rax],al
   1400159d6:	add    BYTE PTR [rax],al
   1400159d8:	or     BYTE PTR [rdx+0x1],dl
   1400159de:	add    BYTE PTR [rax],al
   1400159e0:	loopne 0x140015973
   1400159e2:	add    DWORD PTR [rax],eax
   1400159e4:	add    BYTE PTR [rax],al
   1400159e6:	add    BYTE PTR [rax],al
   1400159e8:	mov    dh,0x91
   1400159ea:	add    DWORD PTR [rax],eax
   1400159ec:	add    BYTE PTR [rax],al
   1400159ee:	add    BYTE PTR [rax],al
   1400159f0:	cwde   
   1400159f1:	xchg   ecx,eax
   1400159f2:	add    DWORD PTR [rax],eax
   1400159f4:	add    BYTE PTR [rax],al
   1400159f6:	add    BYTE PTR [rax],al
   1400159f8:	jb     0x14001598b
   1400159fa:	add    DWORD PTR [rax],eax
   1400159fc:	add    BYTE PTR [rax],al
   1400159fe:	add    BYTE PTR [rax],al
   140015a00:	rex.R xchg ecx,eax
   140015a02:	add    DWORD PTR [rax],eax
   140015a04:	add    BYTE PTR [rax],al
   140015a06:	add    BYTE PTR [rax],al
   140015a08:	cli    
   140015a09:	nop
   140015a0a:	add    DWORD PTR [rax],eax
   140015a0c:	add    BYTE PTR [rax],al
   140015a0e:	add    BYTE PTR [rax],al
   140015a10:	(bad)  
   140015a11:	nop
   140015a12:	add    DWORD PTR [rax],eax
   140015a14:	add    BYTE PTR [rax],al
   140015a16:	add    BYTE PTR [rax],al
   140015a18:	movabs ds:0x7800000000000190,al
   140015a21:	nop
   140015a22:	add    DWORD PTR [rax],eax
   140015a24:	add    BYTE PTR [rax],al
   140015a26:	add    BYTE PTR [rax],al
   140015a28:	pop    rdx
   140015a29:	nop
   140015a2a:	add    DWORD PTR [rax],eax
   140015a2c:	add    BYTE PTR [rax],al
   140015a2e:	add    BYTE PTR [rax],al
   140015a30:	xor    BYTE PTR [rax+0x1],dl
   140015a36:	add    BYTE PTR [rax],al
   140015a38:	add    BYTE PTR [rax+0x1],dl
   140015a3e:	add    BYTE PTR [rax],al
   140015a40:	ror    BYTE PTR [rdi+0x1],1
   140015a46:	add    BYTE PTR [rax],al
   140015a48:	movabs al,ds:0x700000000000018f
   140015a51:	pop    QWORD PTR [rcx]
   140015a53:	add    BYTE PTR [rax],al
   140015a55:	add    BYTE PTR [rax],al
   140015a57:	add    BYTE PTR [rax],dh
   140015a59:	pop    QWORD PTR [rcx]
   140015a5b:	add    BYTE PTR [rax],al
   140015a5d:	add    BYTE PTR [rax],al
   140015a5f:	add    BYTE PTR [rdi+rcx*4],al
   140015a62:	add    DWORD PTR [rax],eax
   140015a64:	add    BYTE PTR [rax],al
   140015a66:	add    BYTE PTR [rax],al
   140015a68:	ror    BYTE PTR [rsi+0x1],1
   140015a6e:	add    BYTE PTR [rax],al
   140015a70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015a71:	mov    es,WORD PTR [rcx]
   140015a73:	add    BYTE PTR [rax],al
   140015a75:	add    BYTE PTR [rax],al
   140015a77:	add    BYTE PTR [rax-0x72],ch
   140015a7a:	add    DWORD PTR [rax],eax
   140015a7c:	add    BYTE PTR [rax],al
   140015a7e:	add    BYTE PTR [rax],al
   140015a80:	mov    es,WORD PTR ds:[rcx]
   140015a83:	add    BYTE PTR [rax],al
   140015a85:	add    BYTE PTR [rax],al
   140015a87:	add    BYTE PTR [rsi+rcx*4],cl
   140015a8a:	add    DWORD PTR [rax],eax
   140015a8c:	add    BYTE PTR [rax],al
   140015a8e:	add    BYTE PTR [rax],al
   140015a90:	in     al,0x8d
   140015a92:	add    DWORD PTR [rax],eax
   140015a94:	add    BYTE PTR [rax],al
   140015a96:	add    BYTE PTR [rax],al
   140015a98:	test   al,0x8d
   140015a9a:	add    DWORD PTR [rax],eax
   140015a9c:	add    BYTE PTR [rax],al
   140015a9e:	add    BYTE PTR [rax],al
   140015aa0:	or     BYTE PTR [rbp+0x1],0x0
   140015aa7:	add    BYTE PTR [rax-0x73],dl
   140015aaa:	add    DWORD PTR [rax],eax
   140015aac:	add    BYTE PTR [rax],al
   140015aae:	add    BYTE PTR [rax],al
   140015ab0:	add    cl,BYTE PTR [rbp+0x1]
   140015ab6:	add    BYTE PTR [rax],al
   140015ab8:	stos   BYTE PTR es:[rdi],al
   140015ab9:	mov    WORD PTR [rcx],es
   140015abb:	add    BYTE PTR [rax],al
   140015abd:	add    BYTE PTR [rax],al
   140015abf:	add    BYTE PTR [rax-0x74],ch
   140015ac2:	add    DWORD PTR [rax],eax
   140015ac4:	add    BYTE PTR [rax],al
   140015ac6:	add    BYTE PTR [rax],al
   140015ac8:	sub    BYTE PTR [rcx+rax*1+0x0],cl
   140015acf:	add    dl,bl
   140015ad1:	mov    eax,DWORD PTR [rcx]
   140015ad3:	add    BYTE PTR [rax],al
   140015ad5:	add    BYTE PTR [rax],al
   140015ad7:	add    BYTE PTR [rdx-0x75],bh
   140015ada:	add    DWORD PTR [rax],eax
   140015adc:	add    BYTE PTR [rax],al
   140015ade:	add    BYTE PTR [rax],al
   140015ae0:	mov    r8d,DWORD PTR [rcx]
   140015ae3:	add    BYTE PTR [rax],al
   140015ae5:	add    BYTE PTR [rax],al
   140015ae7:	add    BYTE PTR [rsi],bl
   140015ae9:	mov    eax,DWORD PTR [rcx]
   140015aeb:	add    BYTE PTR [rax],al
   140015aed:	add    BYTE PTR [rax],al
   140015aef:	add    dh,dh
   140015af1:	mov    al,BYTE PTR [rcx]
   140015af3:	add    BYTE PTR [rax],al
   140015af5:	add    BYTE PTR [rax],al
   140015af7:	add    BYTE PTR [rax+0x18a],al
   140015afd:	add    BYTE PTR [rax],al
   140015aff:	add    BYTE PTR [rsi-0x76],cl
   140015b02:	add    DWORD PTR [rax],eax
   140015b04:	add    BYTE PTR [rax],al
   140015b06:	add    BYTE PTR [rax],al
   140015b08:	(bad)  
   140015b09:	mov    al,BYTE PTR [rcx]
   140015b0b:	add    BYTE PTR [rax],al
   140015b0d:	add    BYTE PTR [rax],al
   140015b0f:	add    dh,ch
   140015b11:	mov    DWORD PTR [rcx],eax
   140015b13:	add    BYTE PTR [rax],al
   140015b15:	add    BYTE PTR [rax],al
   140015b17:	add    BYTE PTR [rsi+0x189],dh
   140015b1d:	add    BYTE PTR [rax],al
   140015b1f:	add    BYTE PTR [rdx-0x77],bh
   140015b22:	add    DWORD PTR [rax],eax
   140015b24:	add    BYTE PTR [rax],al
   140015b26:	add    BYTE PTR [rax],al
   140015b28:	cmp    al,0x89
   140015b2a:	add    DWORD PTR [rax],eax
   140015b2c:	add    BYTE PTR [rax],al
   140015b2e:	add    BYTE PTR [rax],al
   140015b30:	(bad)  
   140015b31:	mov    DWORD PTR [rcx],eax
   140015b33:	add    BYTE PTR [rax],al
   140015b35:	add    BYTE PTR [rax],al
   140015b37:	add    al,al
   140015b39:	mov    BYTE PTR [rcx],al
   140015b3b:	add    BYTE PTR [rax],al
   140015b3d:	add    BYTE PTR [rax],al
   140015b3f:	add    BYTE PTR [rax+0x188],ah
   140015b45:	add    BYTE PTR [rax],al
   140015b47:	add    BYTE PTR [rax+rcx*4+0x1],bh
   140015b4b:	add    BYTE PTR [rax],al
   140015b4d:	add    BYTE PTR [rax],al
   140015b4f:	add    BYTE PTR [rax-0x78],cl
   140015b52:	add    DWORD PTR [rax],eax
   140015b54:	add    BYTE PTR [rax],al
   140015b56:	add    BYTE PTR [rax],al
   140015b58:	sub    al,0x88
   140015b5a:	add    DWORD PTR [rax],eax
   140015b5c:	add    BYTE PTR [rax],al
   140015b5e:	add    BYTE PTR [rax],al
   140015b60:	add    cl,BYTE PTR [rax+0x1]
   140015b66:	add    BYTE PTR [rax],al
   140015b68:	(bad)  
   140015b69:	xchg   DWORD PTR [rcx],eax
   140015b6b:	add    BYTE PTR [rax],al
   140015b6d:	add    BYTE PTR [rax],al
   140015b6f:	add    BYTE PTR [rdx+0x187],bl
   140015b75:	add    BYTE PTR [rax],al
   140015b77:	add    BYTE PTR [rdx-0x79],cl
   140015b7a:	add    DWORD PTR [rax],eax
   140015b7c:	add    BYTE PTR [rax],al
   140015b7e:	add    BYTE PTR [rax],al
   140015b80:	(bad)  
   140015b81:	xchg   DWORD PTR [rcx],eax
   140015b83:	add    BYTE PTR [rax],al
   140015b85:	add    BYTE PTR [rax],al
   140015b87:	add    ah,bl
   140015b89:	xchg   BYTE PTR [rcx],al
   140015b8b:	add    BYTE PTR [rax],al
   140015b8d:	add    BYTE PTR [rax],al
   140015b8f:	add    BYTE PTR [rdx+0x186],bl
   140015b95:	add    BYTE PTR [rax],al
   140015b97:	add    BYTE PTR [rdx-0x7a],ah
   140015b9a:	add    DWORD PTR [rax],eax
   140015b9c:	add    BYTE PTR [rax],al
   140015b9e:	add    BYTE PTR [rax],al
   140015ba0:	xor    al,BYTE PTR [rsi+0x1]
   140015ba6:	add    BYTE PTR [rax],al
   140015ba8:	or     BYTE PTR [rsi+0x1],al
   140015bae:	add    BYTE PTR [rax],al
   140015bb0:	(bad)  
   140015bb1:	test   DWORD PTR [rcx],eax
   140015bb3:	add    BYTE PTR [rax],al
   140015bb5:	add    BYTE PTR [rax],al
   140015bb7:	add    BYTE PTR [rsi+0x185],bl
   140015bbd:	add    BYTE PTR [rax],al
   140015bbf:	add    BYTE PTR [rbp+rax*4+0x1],ch
   140015bc3:	add    BYTE PTR [rax],al
   140015bc5:	add    BYTE PTR [rax],al
   140015bc7:	add    BYTE PTR [rax],bh
   140015bc9:	test   DWORD PTR [rcx],eax
   140015bcb:	add    BYTE PTR [rax],al
   140015bcd:	add    BYTE PTR [rax],al
   140015bcf:	add    BYTE PTR [rdx],al
   140015bd1:	test   DWORD PTR [rcx],eax
   140015bd3:	add    BYTE PTR [rax],al
   140015bd5:	add    BYTE PTR [rax],al
   140015bd7:	add    ah,al
   140015bd9:	test   BYTE PTR [rcx],al
   140015bdb:	add    BYTE PTR [rax],al
   140015bdd:	add    BYTE PTR [rax],al
   140015bdf:	add    BYTE PTR [rdx+0x184],cl
   140015be5:	add    BYTE PTR [rax],al
   140015be7:	add    BYTE PTR [rdx-0x7c],dl
   140015bea:	add    DWORD PTR [rax],eax
   140015bec:	add    BYTE PTR [rax],al
   140015bee:	add    BYTE PTR [rax],al
   140015bf0:	and    BYTE PTR [rcx+rax*1+0x0],al
   140015bf7:	add    dl,ah
   140015bf9:	add    DWORD PTR [rcx],0x0
   140015bfc:	add    BYTE PTR [rax],al
   140015bfe:	add    BYTE PTR [rax],al
   140015c00:	mov    eax,0x183
   140015c05:	add    BYTE PTR [rax],al
   140015c07:	add    BYTE PTR [rsi+0x183],al
   140015c0d:	add    BYTE PTR [rax],al
   140015c0f:	add    BYTE PTR [rdx-0x7d],cl
   140015c12:	add    DWORD PTR [rax],eax
   140015c14:	add    BYTE PTR [rax],al
   140015c16:	add    BYTE PTR [rax],al
   140015c18:	add    al,0x83
   140015c1a:	add    DWORD PTR [rax],eax
   140015c1c:	add    BYTE PTR [rax],al
   140015c1e:	add    BYTE PTR [rax],al
   140015c20:	xchg   BYTE PTR [rdx+0x1],al
   140015c26:	add    BYTE PTR [rax],al
   140015c28:	rex.R (bad) 
   140015c2a:	add    DWORD PTR [rax],eax
   140015c2c:	add    BYTE PTR [rax],al
   140015c2e:	add    BYTE PTR [rax],al
   140015c30:	hlt    
   140015c31:	add    DWORD PTR [rcx],0x0
   140015c37:	add    BYTE PTR [rcx+rax*4+0x1],dl
   140015c3e:	add    BYTE PTR [rax],al
   140015c40:	pop    rsp
   140015c41:	add    DWORD PTR [rcx],0x0
   140015c47:	add    BYTE PTR [rsi],dh
   140015c49:	add    DWORD PTR [rcx],0x0
   140015c4f:	add    BYTE PTR [rsi],cl
   140015c51:	add    DWORD PTR [rcx],0x0
   140015c57:	add    BYTE PTR [rax+0x180],bl
   140015c5d:	add    BYTE PTR [rax],al
   140015c5f:	add    BYTE PTR [rax+rax*4+0x1],bl
   140015c63:	add    BYTE PTR [rax],al
   140015c65:	add    BYTE PTR [rax],al
   140015c67:	add    BYTE PTR [rsi],ah
   140015c69:	add    BYTE PTR [rcx],0x0
   140015c6c:	add    BYTE PTR [rax],al
   140015c6e:	add    BYTE PTR [rax],al
   140015c70:	retf   0x17f
   140015c73:	add    BYTE PTR [rax],al
   140015c75:	add    BYTE PTR [rax],al
   140015c77:	add    BYTE PTR [rdx+0x17f],cl
   140015c7d:	add    BYTE PTR [rax],al
   140015c7f:	add    BYTE PTR [rdi+rdi*2+0x1],cl
   140015c83:	add    BYTE PTR [rax],al
   140015c85:	add    BYTE PTR [rax],al
   140015c87:	add    BYTE PTR [rdx],bl
   140015c89:	jg     0x140015c8c
   140015c8b:	add    BYTE PTR [rax],al
   140015c8d:	add    BYTE PTR [rax],al
   140015c8f:	add    dl,ch
   140015c91:	jle    0x140015c94
   140015c93:	add    BYTE PTR [rax],al
   140015c95:	add    BYTE PTR [rax],al
   140015c97:	add    dl,al
   140015c99:	jle    0x140015c9c
   140015c9b:	add    BYTE PTR [rax],al
   140015c9d:	add    BYTE PTR [rax],al
   140015c9f:	add    BYTE PTR [rsi+rdi*2+0x1],cl
   140015ca6:	add    BYTE PTR [rax],al
   140015ca8:	pop    rsp
   140015ca9:	jle    0x140015cac
   140015cab:	add    BYTE PTR [rax],al
   140015cad:	add    BYTE PTR [rax],al
   140015caf:	add    BYTE PTR [rsi+rdi*2],ah
   140015cb2:	add    DWORD PTR [rax],eax
   140015cb4:	add    BYTE PTR [rax],al
   140015cb6:	add    BYTE PTR [rax],al
   140015cb8:	out    0x7d,al
   140015cba:	add    DWORD PTR [rax],eax
   140015cbc:	add    BYTE PTR [rax],al
   140015cbe:	add    BYTE PTR [rax],al
   140015cc0:	movabs al,ds:0x620000000000017d
   140015cc9:	jge    0x140015ccc
   140015ccb:	add    BYTE PTR [rax],al
   140015ccd:	add    BYTE PTR [rax],al
   140015ccf:	add    BYTE PTR [rdi*2+0x1],dl
   140015cd6:	add    BYTE PTR [rax],al
   140015cd8:	ret    0x17c
   140015cdb:	add    BYTE PTR [rax],al
   140015cdd:	add    BYTE PTR [rax],al
   140015cdf:	add    BYTE PTR [rdx+0x17c],bl
   140015ce5:	add    BYTE PTR [rax],al
   140015ce7:	add    BYTE PTR [rsp+rdi*2+0x1],dh
   140015ceb:	add    BYTE PTR [rax],al
   140015ced:	add    BYTE PTR [rax],al
   140015cef:	add    BYTE PTR [rsi],bh
   140015cf1:	jl     0x140015cf4
   140015cf3:	add    BYTE PTR [rax],al
   140015cf5:	add    BYTE PTR [rax],al
   140015cf7:	add    BYTE PTR [rdx],bl
   140015cf9:	jl     0x140015cfc
   140015cfb:	add    BYTE PTR [rax],al
   140015cfd:	add    BYTE PTR [rax],al
   140015cff:	add    al,dh
   140015d01:	jnp    0x140015d04
   140015d03:	add    BYTE PTR [rax],al
   140015d05:	add    BYTE PTR [rax],al
   140015d07:	add    al,cl
   140015d09:	jnp    0x140015d0c
   140015d0b:	add    BYTE PTR [rax],al
   140015d0d:	add    BYTE PTR [rax],al
   140015d0f:	add    BYTE PTR [rsi+0x17b],cl
   140015d15:	add    BYTE PTR [rax],al
   140015d17:	add    BYTE PTR [rbx+rdi*2],bh
   140015d1a:	add    DWORD PTR [rax],eax
   140015d1c:	add    BYTE PTR [rax],al
   140015d1e:	add    BYTE PTR [rax],al
   140015d20:	add    BYTE PTR [rbx+0x1],bh
   140015d23:	add    BYTE PTR [rax],al
   140015d25:	add    BYTE PTR [rax],al
   140015d27:	add    dh,al
   140015d29:	jp     0x140015d2c
   140015d2b:	add    BYTE PTR [rax],al
   140015d2d:	add    BYTE PTR [rax],al
   140015d2f:	add    BYTE PTR [rdx+rdi*2+0x1],al
   140015d36:	add    BYTE PTR [rax],al
   140015d38:	rex.WR jp 0x140015d3c
   140015d3b:	add    BYTE PTR [rax],al
   140015d3d:	add    BYTE PTR [rax],al
   140015d3f:	add    BYTE PTR [rdx],bl
   140015d41:	jp     0x140015d44
   140015d43:	add    BYTE PTR [rax],al
   140015d45:	add    BYTE PTR [rax],al
   140015d47:	add    al,dh
   140015d49:	jns    0x140015d4c
   140015d4b:	add    BYTE PTR [rax],al
   140015d4d:	add    BYTE PTR [rax],al
   140015d4f:	add    BYTE PTR [rsi+0x179],dh
   140015d55:	add    BYTE PTR [rax],al
   140015d57:	add    BYTE PTR [rdx+0x79],bh
   140015d5a:	add    DWORD PTR [rax],eax
   140015d5c:	add    BYTE PTR [rax],al
   140015d5e:	add    BYTE PTR [rax],al
   140015d60:	rex.RX jns 0x140015d64
   140015d63:	add    BYTE PTR [rax],al
   140015d65:	add    BYTE PTR [rax],al
   140015d67:	add    ah,dh
   140015d69:	js     0x140015d6c
   140015d6b:	add    BYTE PTR [rax],al
   140015d6d:	add    BYTE PTR [rax],al
   140015d6f:	add    BYTE PTR [rsi+0x178],ch
   140015d75:	add    BYTE PTR [rax],al
   140015d77:	add    BYTE PTR [rdx+0x178],al
   140015d7d:	add    BYTE PTR [rax],al
   140015d7f:	add    BYTE PTR [rdx+0x78],cl
   140015d82:	add    DWORD PTR [rax],eax
   140015d84:	add    BYTE PTR [rax],al
   140015d86:	add    BYTE PTR [rax],al
   140015d88:	or     BYTE PTR [rax+0x1],bh
   140015d8b:	add    BYTE PTR [rax],al
   140015d8d:	add    BYTE PTR [rax],al
   140015d8f:	add    al,cl
   140015d91:	ja     0x140015d94
   140015d93:	add    BYTE PTR [rax],al
   140015d95:	add    BYTE PTR [rax],al
   140015d97:	add    BYTE PTR [rsi+0x177],al
   140015d9d:	add    BYTE PTR [rax],al
   140015d9f:	add    BYTE PTR [rsi],bh
   140015da1:	ja     0x140015da4
   140015da3:	add    BYTE PTR [rax],al
   140015da5:	add    BYTE PTR [rax],al
   140015da7:	add    BYTE PTR [rdx],al
   140015da9:	ja     0x140015dac
   140015dab:	add    BYTE PTR [rax],al
   140015dad:	add    BYTE PTR [rax],al
   140015daf:	add    dh,cl
   140015db1:	jbe    0x140015db4
   140015db3:	add    BYTE PTR [rax],al
   140015db5:	add    BYTE PTR [rax],al
   140015db7:	add    BYTE PTR [rax+0x176],dl
   140015dbd:	add    BYTE PTR [rax],al
   140015dbf:	add    BYTE PTR [rsi+rsi*2+0x1],dl
   140015dc3:	add    BYTE PTR [rax],al
   140015dc5:	add    BYTE PTR [rax],al
   140015dc7:	add    BYTE PTR [rax],bl
   140015dc9:	jbe    0x140015dcc
   140015dcb:	add    BYTE PTR [rax],al
   140015dcd:	add    BYTE PTR [rax],al
   140015dcf:	add    ah,bl
   140015dd1:	jne    0x140015dd4
   140015dd3:	add    BYTE PTR [rax],al
   140015dd5:	add    BYTE PTR [rax],al
   140015dd7:	add    BYTE PTR [rsi+0x175],bl
   140015ddd:	add    BYTE PTR [rax],al
   140015ddf:	add    BYTE PTR [rax+0x75],bl
   140015de2:	add    DWORD PTR [rax],eax
   140015de4:	add    BYTE PTR [rax],al
   140015de6:	add    BYTE PTR [rax],al
   140015de8:	(bad)  
   140015de9:	jne    0x140015dec
   140015deb:	add    BYTE PTR [rax],al
   140015ded:	add    BYTE PTR [rax],al
   140015def:	add    dh,dl
   140015df1:	je     0x140015df4
   140015df3:	add    BYTE PTR [rax],al
   140015df5:	add    BYTE PTR [rax],al
   140015df7:	add    BYTE PTR [rsp+rsi*2+0x1],bl
   140015dfe:	add    BYTE PTR [rax],al
   140015e00:	push   0x74
   140015e02:	add    DWORD PTR [rax],eax
   140015e04:	add    BYTE PTR [rax],al
   140015e06:	add    BYTE PTR [rax],al
   140015e08:	ss je  0x140015e0c
   140015e0b:	add    BYTE PTR [rax],al
   140015e0d:	add    BYTE PTR [rax],al
   140015e0f:	add    al,dh
   140015e11:	jae    0x140015e14
   140015e13:	add    BYTE PTR [rax],al
   140015e15:	add    BYTE PTR [rax],al
   140015e17:	add    BYTE PTR [rsi+0x173],bh
   140015e1d:	add    BYTE PTR [rax],al
   140015e1f:	add    BYTE PTR [rsi+0x73],bh
   140015e22:	add    DWORD PTR [rax],eax
   140015e24:	add    BYTE PTR [rax],al
   140015e26:	add    BYTE PTR [rax],al
   140015e28:	push   rsp
   140015e29:	jae    0x140015e2c
   140015e2b:	add    BYTE PTR [rax],al
   140015e2d:	add    BYTE PTR [rax],al
   140015e2f:	add    BYTE PTR [rdx],ah
   140015e31:	jae    0x140015e34
   140015e33:	add    BYTE PTR [rax],al
   140015e35:	add    BYTE PTR [rax],al
   140015e37:	add    al,bl
   140015e39:	jb     0x140015e3c
   140015e3b:	add    BYTE PTR [rax],al
   140015e3d:	add    BYTE PTR [rax],al
   140015e3f:	add    BYTE PTR [rdx+0x172],bl
   140015e45:	add    BYTE PTR [rax],al
   140015e47:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   140015e4b:	add    BYTE PTR [rax],al
   140015e4d:	add    BYTE PTR [rax],al
   140015e4f:	add    BYTE PTR [rdx+rsi*2],bh
   140015e52:	add    DWORD PTR [rax],eax
   140015e54:	add    BYTE PTR [rax],al
   140015e56:	add    BYTE PTR [rax],al
   140015e58:	add    dh,BYTE PTR [rdx+0x1]
   140015e5b:	add    BYTE PTR [rax],al
   140015e5d:	add    BYTE PTR [rax],al
   140015e5f:	add    dl,cl
   140015e61:	jno    0x140015e64
   140015e63:	add    BYTE PTR [rax],al
   140015e65:	add    BYTE PTR [rax],al
   140015e67:	add    BYTE PTR [rax+0x171],dl
   140015e6d:	add    BYTE PTR [rax],al
   140015e6f:	add    BYTE PTR [rdx+0x71],dl
   140015e72:	add    DWORD PTR [rax],eax
   140015e74:	add    BYTE PTR [rax],al
   140015e76:	add    BYTE PTR [rax],al
   140015e78:	and    BYTE PTR [rcx+0x1],dh
   140015e7b:	add    BYTE PTR [rax],al
   140015e7d:	add    BYTE PTR [rax],al
   140015e7f:	add    dl,ch
   140015e81:	jo     0x140015e84
   140015e83:	add    BYTE PTR [rax],al
   140015e85:	add    BYTE PTR [rax],al
   140015e87:	add    BYTE PTR [rsi+0x170],dh
   140015e8d:	add    BYTE PTR [rax],al
   140015e8f:	add    BYTE PTR [rdx+0x170],al
   140015e95:	add    BYTE PTR [rax],al
   140015e97:	add    BYTE PTR [rax+rsi*2+0x1],cl
   140015e9b:	add    BYTE PTR [rax],al
   140015e9d:	add    BYTE PTR [rax],al
   140015e9f:	add    BYTE PTR [rsi],cl
   140015ea1:	jo     0x140015ea4
   140015ea3:	add    BYTE PTR [rax],al
   140015ea5:	add    BYTE PTR [rax],al
   140015ea7:	add    ah,dl
   140015ea9:	outs   dx,DWORD PTR ds:[rsi]
   140015eaa:	add    DWORD PTR [rax],eax
   140015eac:	add    BYTE PTR [rax],al
   140015eae:	add    BYTE PTR [rax],al
   140015eb0:	pushf  
   140015eb1:	outs   dx,DWORD PTR ds:[rsi]
   140015eb2:	add    DWORD PTR [rax],eax
   140015eb4:	add    BYTE PTR [rax],al
   140015eb6:	add    BYTE PTR [rax],al
   140015eb8:	ins    BYTE PTR es:[rdi],dx
   140015eb9:	outs   dx,DWORD PTR ds:[rsi]
   140015eba:	add    DWORD PTR [rax],eax
   140015ebc:	add    BYTE PTR [rax],al
   140015ebe:	add    BYTE PTR [rax],al
   140015ec0:	rex.R outs dx,DWORD PTR ds:[rsi]
   140015ec2:	add    DWORD PTR [rax],eax
   140015ec4:	add    BYTE PTR [rax],al
   140015ec6:	add    BYTE PTR [rax],al
   140015ec8:	sbb    ch,BYTE PTR [rdi+0x1]
   140015ecb:	add    BYTE PTR [rax],al
   140015ecd:	add    BYTE PTR [rax],al
   140015ecf:	add    ah,bl
   140015ed1:	outs   dx,BYTE PTR ds:[rsi]
   140015ed2:	add    DWORD PTR [rax],eax
   140015ed4:	add    BYTE PTR [rax],al
   140015ed6:	add    BYTE PTR [rax],al
   140015ed8:	mov    dl,0x6e
   140015eda:	add    DWORD PTR [rax],eax
   140015edc:	add    BYTE PTR [rax],al
   140015ede:	add    BYTE PTR [rax],al
   140015ee0:	sub    BYTE PTR [rsi+0x1],0x0
   140015ee4:	add    BYTE PTR [rax],al
   140015ee6:	add    BYTE PTR [rax],al
   140015ee8:	push   rax
   140015ee9:	outs   dx,BYTE PTR ds:[rsi]
   140015eea:	add    DWORD PTR [rax],eax
   140015eec:	add    BYTE PTR [rax],al
   140015eee:	add    BYTE PTR [rax],al
   140015ef0:	adc    al,0x6e
   140015ef2:	add    DWORD PTR [rax],eax
   140015ef4:	add    BYTE PTR [rax],al
   140015ef6:	add    BYTE PTR [rax],al
   140015ef8:	out    0x6d,al
   140015efa:	add    DWORD PTR [rax],eax
   140015efc:	add    BYTE PTR [rax],al
   140015efe:	add    BYTE PTR [rax],al
   140015f00:	test   al,0x6d
   140015f02:	add    DWORD PTR [rax],eax
   140015f04:	add    BYTE PTR [rax],al
   140015f06:	add    BYTE PTR [rax],al
   140015f08:	jbe    0x140015f77
   140015f0a:	add    DWORD PTR [rax],eax
   140015f0c:	add    BYTE PTR [rax],al
   140015f0e:	add    BYTE PTR [rax],al
   140015f10:	pop    rdx
   140015f11:	ins    DWORD PTR es:[rdi],dx
   140015f12:	add    DWORD PTR [rax],eax
   140015f14:	add    BYTE PTR [rax],al
   140015f16:	add    BYTE PTR [rax],al
   140015f18:	xor    BYTE PTR [rbp+0x1],ch
   140015f1b:	add    BYTE PTR [rax],al
   140015f1d:	add    BYTE PTR [rax],al
   140015f1f:	add    al,ch
   140015f21:	ins    BYTE PTR es:[rdi],dx
   140015f22:	add    DWORD PTR [rax],eax
   140015f24:	add    BYTE PTR [rax],al
   140015f26:	add    BYTE PTR [rax],al
   140015f28:	lods   al,BYTE PTR ds:[rsi]
   140015f29:	ins    BYTE PTR es:[rdi],dx
   140015f2a:	add    DWORD PTR [rax],eax
   140015f2c:	add    BYTE PTR [rax],al
   140015f2e:	add    BYTE PTR [rax],al
   140015f30:	sub    BYTE PTR [rcx+rax*1+0x0],0x0
   140015f35:	add    BYTE PTR [rax],al
   140015f37:	add    BYTE PTR [rsi+0x6c],al
   140015f3a:	add    DWORD PTR [rax],eax
   140015f3c:	add    BYTE PTR [rax],al
   140015f3e:	add    BYTE PTR [rax],al
   140015f40:	sbb    BYTE PTR [rcx+rax*1+0x0],ch
   140015f44:	add    BYTE PTR [rax],al
   140015f46:	add    BYTE PTR [rax],al
   140015f48:	(bad)  
   140015f49:	imul   eax,DWORD PTR [rcx],0x0
   140015f4c:	add    BYTE PTR [rax],al
   140015f4e:	add    BYTE PTR [rax],al
   140015f50:	mov    esp,0x16b
   140015f55:	add    BYTE PTR [rax],al
   140015f57:	add    BYTE PTR [rbx+rbp*2+0x1],al
   140015f5e:	add    BYTE PTR [rax],al
   140015f60:	rex.WRX imul r8,QWORD PTR [rcx],0x0
   140015f64:	add    BYTE PTR [rax],al
   140015f66:	add    BYTE PTR [rax],al
   140015f68:	(bad)  
   140015f69:	imul   eax,DWORD PTR [rcx],0x0
   140015f6c:	add    BYTE PTR [rax],al
   140015f6e:	add    BYTE PTR [rax],al
   140015f70:	in     al,0x6a
   140015f72:	add    DWORD PTR [rax],eax
   140015f74:	add    BYTE PTR [rax],al
   140015f76:	add    BYTE PTR [rax],al
   140015f78:	mov    dl,0x6a
   140015f7a:	add    DWORD PTR [rax],eax
   140015f7c:	add    BYTE PTR [rax],al
   140015f7e:	add    BYTE PTR [rax],al
   140015f80:	jbe    0x140015fec
   140015f82:	add    DWORD PTR [rax],eax
   140015f84:	add    BYTE PTR [rax],al
   140015f86:	add    BYTE PTR [rax],al
   140015f88:	rex.RX push 0x1
   140015f8b:	add    BYTE PTR [rax],al
   140015f8d:	add    BYTE PTR [rax],al
   140015f8f:	add    BYTE PTR [rdx+rbp*2],dl
   140015f92:	add    DWORD PTR [rax],eax
   140015f94:	add    BYTE PTR [rax],al
   140015f96:	add    BYTE PTR [rax],al
   140015f98:	out    0x69,al
   140015f9a:	add    DWORD PTR [rax],eax
   140015f9c:	add    BYTE PTR [rax],al
   140015f9e:	add    BYTE PTR [rax],al
   140015fa0:	mov    dh,0x69
   140015fa2:	add    DWORD PTR [rax],eax
   140015fa4:	add    BYTE PTR [rax],al
   140015fa6:	add    BYTE PTR [rax],al
   140015fa8:	mov    ch,BYTE PTR [rcx+0x1]
   140015fab:	add    BYTE PTR [rax],al
   140015fad:	add    BYTE PTR [rax],al
   140015faf:	add    BYTE PTR [rsi+0x69],bl
   140015fb2:	add    DWORD PTR [rax],eax
   140015fb4:	add    BYTE PTR [rax],al
   140015fb6:	add    BYTE PTR [rax],al
   140015fb8:	fsubr  DWORD PTR [rsi+0x1]
   140015fbe:	add    BYTE PTR [rax],al
   140015fc0:	sub    ch,BYTE PTR [rcx+0x1]
   140015fc3:	add    BYTE PTR [rax],al
   140015fc5:	add    BYTE PTR [rax],al
   140015fc7:	add    BYTE PTR [rax+0x66],ah
   140015fca:	add    DWORD PTR [rax],eax
   140015fcc:	add    BYTE PTR [rax],al
   140015fce:	add    BYTE PTR [rax],al
   140015fd0:	cmp    ah,BYTE PTR [rsi+0x1]
   140015fd3:	add    BYTE PTR [rax],al
   140015fd5:	add    BYTE PTR [rax],al
   140015fd7:	add    BYTE PTR [rsi+riz*2],al
   140015fda:	add    DWORD PTR [rax],eax
   140015fdc:	add    BYTE PTR [rax],al
   140015fde:	add    BYTE PTR [rax],al
   140015fe0:	fisub  WORD PTR [rbp+0x1]
   140015fe3:	add    BYTE PTR [rax],al
   140015fe5:	add    BYTE PTR [rax],al
   140015fe7:	add    BYTE PTR [rax+0x165],ch
   140015fed:	add    BYTE PTR [rax],al
   140015fef:	add    BYTE PTR [rsi+0x165],cl
   140015ff5:	add    BYTE PTR [rax],al
   140015ff7:	add    BYTE PTR [rsi+0x65],dl
   140015ffa:	add    DWORD PTR [rax],eax
   140015ffc:	add    BYTE PTR [rax],al
   140015ffe:	add    BYTE PTR [rax],al
   140016000:	es add DWORD PTR gs:[rax],eax
   140016004:	add    BYTE PTR [rax],al
   140016006:	add    BYTE PTR [rax],al
   140016008:	add    BYTE PTR [rbp+0x1],ah
   14001600b:	add    BYTE PTR [rax],al
   14001600d:	add    BYTE PTR [rax],al
   14001600f:	add    ah,dl
   140016011:	add    DWORD PTR fs:[rax],eax
   140016014:	add    BYTE PTR [rax],al
   140016016:	add    BYTE PTR [rax],al
   140016018:	sahf   
   140016019:	add    DWORD PTR fs:[rax],eax
   14001601c:	add    BYTE PTR [rax],al
   14001601e:	add    BYTE PTR [rax],al
   140016020:	js     0x140016086
   140016022:	add    DWORD PTR [rax],eax
   140016024:	add    BYTE PTR [rax],al
   140016026:	add    BYTE PTR [rax],al
   140016028:	ss add DWORD PTR fs:[rax],eax
   14001602c:	add    BYTE PTR [rax],al
   14001602e:	add    BYTE PTR [rax],al
   140016030:	(bad)  
   140016031:	add    DWORD PTR fs:[rax],eax
   140016034:	add    BYTE PTR [rax],al
   140016036:	add    BYTE PTR [rax],al
   140016038:	fsub   QWORD PTR [rbx+0x1]
   14001603b:	add    BYTE PTR [rax],al
   14001603d:	add    BYTE PTR [rax],al
   14001603f:	add    BYTE PTR [rdx+0x163],ch
   140016045:	add    BYTE PTR [rax],al
   140016047:	add    BYTE PTR [rax+0x63],bl
   14001604a:	add    DWORD PTR [rax],eax
   14001604c:	add    BYTE PTR [rax],al
   14001604e:	add    BYTE PTR [rax],al
   140016050:	xor    BYTE PTR [rbx+0x1],ah
   140016053:	add    BYTE PTR [rax],al
   140016055:	add    BYTE PTR [rax],al
   140016057:	add    al,bh
   140016059:	(bad)  
   14001605b:	add    BYTE PTR [rax],al
   14001605d:	add    BYTE PTR [rax],al
   14001605f:	add    BYTE PTR [rax+0x162],ch
   140016065:	add    BYTE PTR [rax],al
   140016067:	add    BYTE PTR [rdx+0x162],al
   14001606d:	add    BYTE PTR [rax],al
   14001606f:	add    BYTE PTR [rdx+riz*2+0x1],dl
   140016073:	add    BYTE PTR [rax],al
   140016075:	add    BYTE PTR [rax],al
   140016077:	add    BYTE PTR [rsi],cl
   140016079:	(bad)  
   14001607b:	add    BYTE PTR [rax],al
   14001607d:	add    BYTE PTR [rax],al
   14001607f:	add    dl,dl
   140016081:	(bad)  
   140016082:	add    DWORD PTR [rax],eax
   140016084:	add    BYTE PTR [rax],al
   140016086:	add    BYTE PTR [rax],al
   140016088:	mov    esp,0x161
   14001608d:	add    BYTE PTR [rax],al
   14001608f:	add    BYTE PTR [rdx+0x161],dl
   140016095:	add    BYTE PTR [rax],al
   140016097:	add    BYTE PTR [rsi+0x61],bl
   14001609a:	add    DWORD PTR [rax],eax
   14001609c:	add    BYTE PTR [rax],al
   14001609e:	add    BYTE PTR [rax],al
   1400160a0:	mov    eax,0x1ad
   1400160a5:	add    BYTE PTR [rax],al
   1400160a7:	add    BYTE PTR [rax],dh
   1400160a9:	(bad)  
   1400160aa:	add    DWORD PTR [rax],eax
	...
   1400160b8:	adc    al,bl
   1400160ba:	add    DWORD PTR [rax],eax
   1400160bc:	add    BYTE PTR [rax],al
   1400160be:	add    BYTE PTR [rax],al
   1400160c0:	(bad)  
   1400160c1:	ret    0x1
   1400160c4:	add    BYTE PTR [rax],al
   1400160c6:	add    BYTE PTR [rax],al
   1400160c8:	mov    al,0xc2
   1400160ca:	add    DWORD PTR [rax],eax
   1400160cc:	add    BYTE PTR [rax],al
   1400160ce:	add    BYTE PTR [rax],al
   1400160d0:	test   dl,al
   1400160d2:	add    DWORD PTR [rax],eax
   1400160d4:	add    BYTE PTR [rax],al
   1400160d6:	add    BYTE PTR [rax],al
   1400160d8:	push   rax
   1400160d9:	ret    0x1
   1400160dc:	add    BYTE PTR [rax],al
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	or     al,0xc2
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	add    BYTE PTR [rax],al
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	out    0xc1,al
   1400160ea:	add    DWORD PTR [rax],eax
   1400160ec:	add    BYTE PTR [rax],al
   1400160ee:	add    BYTE PTR [rax],al
   1400160f0:	(bad)  
   1400160f1:	rol    DWORD PTR [rcx],0x0
   1400160f4:	add    BYTE PTR [rax],al
   1400160f6:	add    BYTE PTR [rax],al
   1400160f8:	mov    dl,0xc1
   1400160fa:	add    DWORD PTR [rax],eax
   1400160fc:	add    BYTE PTR [rax],al
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	rol    DWORD PTR ss:[rcx],0x0
   140016104:	add    BYTE PTR [rax],al
   140016106:	add    BYTE PTR [rax],al
   140016108:	push   rdx
   140016109:	rol    DWORD PTR [rcx],0x0
   14001610c:	add    BYTE PTR [rax],al
   14001610e:	add    BYTE PTR [rax],al
   140016110:	nop
   140016111:	rol    DWORD PTR [rcx],0x0
	...
   140016120:	(bad)  
   140016121:	cmc    
   140016122:	add    DWORD PTR [rax],eax
	...
   140016130:	or     edx,DWORD PTR [rsi]
   140016132:	(bad)  
   140016133:	jae    0x140016196
   140016135:	jbe    0x14001619c
   140016137:	push   rbx
   140016138:	je     0x14001619b
   14001613a:	je     0x1400161a1
   14001613c:	rex push rcx
   14001613e:	push   rbx
   14001613f:	jo     0x1400161ad
   140016141:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x51404072
   140016149:	rex.RB
   14001614a:	rex.X
   14001614b:	rex.B (bad) 
   14001614d:	push   r14
   14001614f:	push   rcx
   140016150:	rex.X jns 0x1400161c7
   140016153:	gs rex.B jb 0x1400161c9
   140016157:	(bad)  
   140016158:	jns    0x14001619a
   14001615a:	rex pop rax
   14001615c:	pop    rdx
   14001615d:	add    cl,al
   14001615f:	adc    eax,0x7365723f
   140016164:	je     0x1400161d5
   140016166:	jb     0x1400161cd
   140016168:	push   rbx
   140016169:	je     0x1400161cc
   14001616b:	je     0x1400161d2
   14001616d:	rex push rcx
   14001616f:	push   rbx
   140016170:	jo     0x1400161de
   140016172:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x51404072
   14001617a:	rex.RB
   14001617b:	rex.B
   14001617c:	pop    r15
   14001617e:	rex.WRX
   14001617f:	rex.B
   140016180:	rex.RB
   140016181:	rex.X push rsi
   140016183:	push   rcx
   140016184:	rex.X jns 0x1400161fb
   140016187:	gs rex.B jb 0x1400161fd
   14001618b:	(bad)  
   14001618c:	jns    0x1400161ce
   14001618e:	rex
   14001618f:	rex pop rdx
   140016191:	add    BYTE PTR [rax+0x70613f05],dh
   140016197:	jo     0x1400161fe
   140016199:	outs   dx,BYTE PTR ds:[rsi]
   14001619a:	fs rex push rcx
   14001619d:	push   rsp
   14001619e:	gs js  0x140016215
   1400161a1:	rex.RB
   1400161a2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   1400161ab:	pop    rax
   1400161ac:	rex.B
   1400161ad:	rex.RB
   1400161ae:	rex.X push rsi
   1400161b0:	push   rcx
   1400161b1:	push   rbx
   1400161b2:	je     0x140016226
   1400161b4:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400161bb:	add    al,al
   1400161bd:	add    DWORD PTR [rdi],edi
   1400161bf:	(bad)  
   1400161c0:	xor    DWORD PTR [rcx+0x44],edx
   1400161c3:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   1400161ca:	push   rbp
   1400161cb:	rex.RB
   1400161cc:	rex.B
   1400161cd:	rex.B
   1400161ce:	rex pop rax
   1400161d0:	pop    rdx
   1400161d1:	add    BYTE PTR [rip+0x6f6d3f11],ah        # 0x1af6ea0e8
   1400161d7:	fs gs ins BYTE PTR es:[rdi],dx
   1400161da:	rex push rcx
   1400161dc:	(bad)
   1400161e2:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400161e6:	gs ins DWORD PTR es:[rdi],dx
   1400161e8:	push   rsi
   1400161e9:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400161f0:	rex.X
   1400161f1:	push   r8
   1400161f3:	rex.RB
   1400161f4:	push   r14
   1400161f6:	push   rcx
   1400161f7:	(bad)
   1400161fd:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140016201:	gs ins DWORD PTR es:[rdi],dx
   140016203:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016205:	fs gs ins BYTE PTR es:[rdi],dx
   140016208:	rex
   140016209:	rex pop rax
   14001620b:	pop    rdx
   14001620c:	add    BYTE PTR [rax],al
   14001620e:	mov    dl,0x16
   140016210:	(bad)  
   140016211:	jae    0x140016278
   140016213:	ins    BYTE PTR es:[rdi],dx
   140016214:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016219:	outs   dx,BYTE PTR ds:[rsi]
   14001621a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001621c:	fs gs ins BYTE PTR es:[rdi],dx
   14001621f:	rex push rcx
   140016221:	(bad)
   140016227:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001622b:	gs ins DWORD PTR es:[rdi],dx
   14001622d:	push   rsi
   14001622e:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140016235:	rex.X
   140016236:	push   r8
   140016238:	rex.RB
   140016239:	push   r14
   14001623b:	push   rcx
   14001623c:	rex.WB je 0x1400162a4
   14001623f:	ins    DWORD PTR es:[rdi],dx
   140016240:	push   rbx
   140016241:	gs ins BYTE PTR es:[rdi],dx
   140016243:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016248:	outs   dx,BYTE PTR ds:[rsi]
   140016249:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001624b:	fs gs ins BYTE PTR es:[rdi],dx
   14001624e:	rex
   14001624f:	rex pop rax
   140016251:	pop    rdx
   140016252:	add    BYTE PTR [rax],al
   140016254:	js     0x14001625b
   140016256:	(bad)  
   140016257:	(bad)  
   140016258:	fs fs push rdi
   14001625b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x53514074
   140016263:	jo     0x1400162d1
   140016265:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x51404072
   14001626d:	rex.RB
   14001626e:	rex.B
   14001626f:	pop    r8
   140016271:	push   rax
   140016272:	rex.RB
   140016273:	push   r14
   140016275:	push   rcx
   140016276:	push   rdi
   140016277:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001627f:	pop    rdx
   140016280:	add    BYTE PTR [rax],al
   140016282:	(bad)  
   140016283:	add    DWORD PTR [rdi],edi
   140016285:	(bad)  
   140016286:	xor    BYTE PTR [rcx+0x53],dl
   140016289:	jo     0x1400162f7
   14001628b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x51404072
   140016293:	rex.RB
   140016294:	rex.B
   140016295:	rex.B
   140016296:	rex push rax
   140016298:	rex.RB
   140016299:	push   r14
   14001629b:	push   rcx
   14001629c:	push   rdi
   14001629d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400162a5:	pop    rdx
   1400162a6:	add    BYTE PTR [rax],al
   1400162a8:	jb     0x1400162af
   1400162aa:	(bad)  
   1400162ab:	(bad)  
   1400162ac:	fs fs push rdi
   1400162af:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x42514074
   1400162b7:	outs   dx,DWORD PTR ds:[rsi]
   1400162b8:	js     0x140016306
   1400162ba:	(bad)  
   1400162bb:	jns    0x14001632c
   1400162bd:	jne    0x140016333
   1400162bf:	rex
   1400162c0:	rex push rcx
   1400162c2:	rex.RB
   1400162c3:	rex.B
   1400162c4:	pop    r8
   1400162c6:	push   rax
   1400162c7:	rex.RB
   1400162c8:	push   r14
   1400162ca:	push   rcx
   1400162cb:	push   rdi
   1400162cc:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   1400162d4:	push   rsi
   1400162d5:	(bad)  
   1400162d6:	and    al,0x51
   1400162d8:	rex.RX ins BYTE PTR es:[rdi],dx
   1400162da:	(bad)  
   1400162db:	addr32 jae 0x14001631e
   1400162de:	push   rdi
   1400162df:	xor    al,0x41
   1400162e1:	ins    BYTE PTR es:[rdi],dx
   1400162e2:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400162e9:	rex.RX ins BYTE PTR es:[rdi],dx
   1400162eb:	(bad)  
   1400162ec:	addr32 rex push rcx
   1400162ef:	je     0x140016331
   1400162f1:	rex
   1400162f2:	rex
   1400162f3:	rex
   1400162f4:	rex pop rdx
   1400162f6:	add    BYTE PTR [rax],al
   1400162f8:	or     BYTE PTR [rcx],al
   1400162fa:	(bad)  
   1400162fb:	(bad)  
   1400162fc:	xor    BYTE PTR [rcx+0x53],dl
   1400162ff:	jo     0x14001636d
   140016301:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x51404072
   140016309:	rex.RB
   14001630a:	rex.B
   14001630b:	rex.B
   14001630c:	rex push rdi
   14001630e:	xor    al,0x4f
   140016310:	jb     0x14001637b
   140016312:	outs   dx,BYTE PTR gs:[rsi]
   140016314:	je     0x140016377
   140016316:	je     0x140016381
   140016318:	outs   dx,DWORD PTR ds:[rsi]
   140016319:	outs   dx,BYTE PTR ds:[rsi]
   14001631a:	rex push rcx
   14001631c:	je     0x14001635e
   14001631e:	rex push rax
   140016320:	rex.RB
   140016321:	push   r14
   140016323:	push   rcx
   140016324:	push   rdi
   140016325:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001632d:	pop    rdx
   14001632e:	add    BYTE PTR [rax],al
   140016330:	xchg   ecx,eax
   140016331:	add    DWORD PTR [rdi],edi
   140016333:	(bad)  
   140016334:	xor    BYTE PTR [rcx+0x56],dl
   140016337:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016339:	js     0x140016387
   14001633b:	(bad)  
   14001633c:	jns    0x1400163ad
   14001633e:	jne    0x1400163b4
   140016340:	rex
   140016341:	rex push rcx
   140016343:	rex.RB
   140016344:	rex.B
   140016345:	rex.B
   140016346:	rex push rax
   140016348:	rex.RB
   140016349:	push   r14
   14001634b:	push   rcx
   14001634c:	push   rdi
   14001634d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140016355:	pop    rdx
   140016356:	add    BYTE PTR [rax],al
   140016358:	cli    
   140016359:	add    BYTE PTR [rdi],bh
   14001635b:	(bad)  
   14001635c:	xor    BYTE PTR [rcx+0x53],dl
   14001635f:	push   0x6374726f
   140016364:	jne    0x1400163da
   140016366:	rex
   140016367:	rex push rcx
   140016369:	rex.RB
   14001636a:	rex.B
   14001636b:	rex.B
   14001636c:	rex
   14001636d:	rex.B
   14001636e:	rex.RB
   14001636f:	rex.X push rsi
   140016371:	push   rcx
   140016372:	rex.WXB
   140016373:	gs jns 0x1400163c9
   140016376:	gs jno 0x1400163ee
   140016379:	outs   dx,BYTE PTR gs:[rsi]
   14001637b:	movsxd esp,DWORD PTR [rbp+0x40]
   14001637e:	rex push rax
   140016380:	rex.RB
   140016381:	push   r14
   140016383:	push   rcx
   140016384:	push   rdi
   140016385:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x50404074
   14001638d:	rex.RB
   14001638e:	rex.X
   14001638f:	xor    r10b,BYTE PTR [rdi+0x34]
   140016393:	push   rbx
   140016394:	push   0x6374726f
   140016399:	jne    0x14001640f
   14001639b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001639d:	outs   dx,BYTE PTR ds:[rsi]
   14001639e:	je     0x140016405
   1400163a0:	js     0x140016416
   1400163a2:	rex push rcx
   1400163a4:	je     0x1400163e6
   1400163a6:	rex
   1400163a7:	rex pop rdx
   1400163a9:	add    dl,al
   1400163ab:	sbb    bh,BYTE PTR [rdi]
   1400163ad:	jae    0x140016414
   1400163af:	je     0x140016404
   1400163b1:	push   0x6374726f
   1400163b6:	jne    0x14001642c
   1400163b8:	rex push rcx
   1400163ba:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400163bf:	outs   dx,BYTE PTR ds:[rsi]
   1400163c0:	rex
   1400163c1:	rex push rcx
   1400163c3:	rex.RB
   1400163c4:	rex.B
   1400163c5:	pop    r8
   1400163c7:	rex.B
   1400163c8:	rex.RB
   1400163c9:	rex.X push rsi
   1400163cb:	push   rcx
   1400163cc:	rex.WXB
   1400163cd:	gs jns 0x140016423
   1400163d0:	gs jno 0x140016448
   1400163d3:	outs   dx,BYTE PTR gs:[rsi]
   1400163d5:	movsxd esp,DWORD PTR [rbp+0x40]
   1400163d8:	rex
   1400163d9:	rex pop rdx
   1400163db:	add    al,al
   1400163dd:	(bad)  
   1400163de:	(bad)  
   1400163df:	jae    0x140016446
   1400163e1:	je     0x140016427
   1400163e3:	(bad)  
   1400163e4:	je     0x140016447
   1400163e6:	rex push rcx
   1400163e8:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400163ed:	outs   dx,BYTE PTR ds:[rsi]
   1400163ee:	rex
   1400163ef:	rex push rcx
   1400163f1:	rex.RB
   1400163f2:	rex.B
   1400163f3:	pop    r8
   1400163f5:	rex.B
   1400163f6:	rex.RB
   1400163f7:	rex.X push rsi
   1400163f9:	push   rcx
   1400163fa:	push   rsi
   1400163fb:	(bad)  
   1400163fc:	jb     0x140016467
   1400163fe:	(bad)  
   1400163ff:	outs   dx,BYTE PTR ds:[rsi]
   140016400:	je     0x140016442
   140016402:	rex
   140016403:	rex pop rdx
   140016405:	add    BYTE PTR [rdx],dl
   140016407:	add    BYTE PTR [rdi],bh
   140016409:	(bad)  
   14001640a:	xor    BYTE PTR [rcx+0x41],dl
   14001640d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140016411:	outs   dx,BYTE PTR ds:[rsi]
   140016412:	rex
   140016413:	rex push rcx
   140016415:	rex.RB
   140016416:	rex.B
   140016417:	rex.B
   140016418:	rex
   140016419:	rex.B
   14001641a:	rex.RB
   14001641b:	rex.X push rsi
   14001641d:	push   rcx
   14001641e:	push   rbx
   14001641f:	je     0x140016493
   140016421:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140016428:	push   r14
   14001642a:	push   rcx
   14001642b:	rex.WRXB (bad) 
   14001642d:	push   0x65
   14001642f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016433:	rex pop rdx
   140016435:	add    BYTE PTR [rbx+0x65733f17],al
   14001643b:	je     0x140016480
   14001643d:	outs   dx,DWORD PTR ds:[rsi]
   14001643e:	outs   dx,BYTE PTR ds:[rsi]
   14001643f:	je     0x1400164a6
   140016441:	js     0x1400164b7
   140016443:	rex.WRB
   140016444:	outs   dx,BYTE PTR gs:[rsi]
   140016446:	jne    0x140016498
   140016448:	outs   dx,DWORD PTR ds:[rsi]
   140016449:	ins    BYTE PTR es:[rdi],dx
   14001644a:	imul   esp,DWORD PTR [rbx+0x79],0x69575140
   140016451:	fs addr32 gs je 0x140016496
   140016456:	rex push rcx
   140016458:	rex.RB
   140016459:	rex.B
   14001645a:	pop    r8
   14001645c:	push   rdi
   14001645d:	xor    al,0x43
   14001645f:	outs   dx,DWORD PTR ds:[rsi]
   140016460:	outs   dx,BYTE PTR ds:[rsi]
   140016461:	je     0x1400164c8
   140016463:	js     0x1400164d9
   140016465:	rex.WRB
   140016466:	outs   dx,BYTE PTR gs:[rsi]
   140016468:	jne    0x1400164ba
   14001646a:	outs   dx,DWORD PTR ds:[rsi]
   14001646b:	ins    BYTE PTR es:[rdi],dx
   14001646c:	imul   esp,DWORD PTR [rbx+0x79],0x40745140
   140016473:	rex
   140016474:	rex pop rdx
   140016476:	add    BYTE PTR [rax],al
   140016478:	jnp    0x14001647b
   14001647a:	(bad)  
   14001647b:	(bad)  
   14001647c:	xor    BYTE PTR [rcx+0x54],dl
   14001647f:	jb     0x1400164e6
   140016481:	gs push rsi
   140016483:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   14001648a:	rex.B
   14001648b:	rex.B
   14001648c:	rex push rax
   14001648e:	rex.RB
   14001648f:	push   r14
   140016491:	push   rcx
   140016492:	push   rdi
   140016493:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001649b:	pop    rdx
   14001649c:	add    BYTE PTR [rax],al
   14001649e:	loope  0x1400164bc
   1400164a0:	(bad)  
   1400164a1:	jae    0x140016512
   1400164a3:	jb     0x140016519
   1400164a5:	rex.X jns 0x1400164eb
   1400164a8:	outs   dx,DWORD PTR ds:[rsi]
   1400164a9:	ins    BYTE PTR es:[rdi],dx
   1400164aa:	jne    0x140016519
   1400164ac:	outs   dx,BYTE PTR ds:[rsi]
   1400164ad:	rex push rcx
   1400164af:	push   rsp
   1400164b0:	(bad)  
   1400164b1:	(bad)  
   1400164b2:	ins    BYTE PTR es:[rdi],dx
   1400164b3:	gs push rsi
   1400164b5:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400164bc:	rex.B
   1400164bd:	pop    r8
   1400164bf:	rex.W push rdi
   1400164c1:	xor    al,0x53
   1400164c3:	outs   dx,DWORD PTR ds:[rsi]
   1400164c4:	jb     0x14001653a
   1400164c6:	rex.WRXB jb 0x14001652d
   1400164c9:	gs jb  0x14001650c
   1400164cc:	push   rcx
   1400164cd:	je     0x14001650f
   1400164cf:	rex
   1400164d0:	rex pop rdx
   1400164d2:	add    BYTE PTR [rax],al
   1400164d4:	out    dx,al
   1400164d5:	sbb    bh,BYTE PTR [rdi]
   1400164d7:	jae    0x14001653e
   1400164d9:	je     0x14001652e
   1400164db:	outs   dx,DWORD PTR ds:[rsi]
   1400164dc:	jb     0x140016552
   1400164de:	imul   ebp,DWORD PTR [rsi+0x67],0x62616e45
   1400164e5:	ins    BYTE PTR es:[rdi],dx
   1400164e6:	gs fs rex push rcx
   1400164ea:	push   rsp
   1400164eb:	(bad)  
   1400164ec:	(bad)  
   1400164ed:	ins    BYTE PTR es:[rdi],dx
   1400164ee:	gs push rsi
   1400164f0:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400164f7:	rex.B
   1400164f8:	pop    r8
   1400164fa:	pop    rdi
   1400164fb:	rex.WRX
   1400164fc:	rex pop rdx
   1400164fe:	add    BYTE PTR [rax],al
   140016500:	retf   
   140016501:	sbb    bh,BYTE PTR [rdi]
   140016503:	jae    0x14001656a
   140016505:	je     0x14001655a
   140016507:	push   0x7247776f
   14001650c:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x6c626154
   140016514:	gs push rsi
   140016516:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   14001651d:	rex.B
   14001651e:	pop    r8
   140016520:	pop    rdi
   140016521:	rex.WRX
   140016522:	rex pop rdx
   140016524:	add    BYTE PTR [rax],al
   140016526:	sbb    bl,BYTE PTR [rbx]
   140016528:	(bad)  
   140016529:	jae    0x140016590
   14001652b:	je     0x140016580
   14001652d:	je     0x1400165a1
   14001652f:	gs je  0x140016595
   140016532:	push   0x7473614c
   140016537:	push   rbx
   140016538:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001653d:	outs   dx,BYTE PTR ds:[rsi]
   14001653e:	rex push rcx
   140016540:	rex.W
   140016541:	gs (bad) 
   140016543:	fs gs jb 0x14001659d
   140016547:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   14001654e:	rex.B
   14001654f:	pop    r8
   140016551:	pop    rdi
   140016552:	rex.WRX
   140016553:	rex pop rdx
   140016555:	add    bh,al
   140016557:	or     al,0x3f
   140016559:	push   0x7a69726f
   14001655e:	outs   dx,DWORD PTR ds:[rsi]
   14001655f:	outs   dx,BYTE PTR ds:[rsi]
   140016560:	je     0x1400165c3
   140016562:	ins    BYTE PTR es:[rdi],dx
   140016563:	rex.W
   140016564:	gs (bad) 
   140016566:	fs gs jb 0x1400165aa
   14001656a:	push   rcx
   14001656b:	push   rsp
   14001656c:	(bad)  
   14001656d:	(bad)  
   14001656e:	ins    BYTE PTR es:[rdi],dx
   14001656f:	gs push rsi
   140016571:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140016578:	rex.X
   140016579:	push   r8
   14001657b:	rex.RB
   14001657c:	push   r14
   14001657e:	push   rcx
   14001657f:	rex.W
   140016580:	gs (bad) 
   140016582:	fs gs jb 0x1400165dc
   140016586:	imul   esp,DWORD PTR [rbp+0x77],0x5a584040
   14001658d:	add    BYTE PTR [rdi+0x69683f0c],dl
   140016593:	fs gs rex push rcx
   140016597:	push   rdi
   140016598:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400165a0:	rex.RB
   1400165a1:	rex.B
   1400165a2:	pop    r8
   1400165a4:	pop    rax
   1400165a5:	pop    rdx
   1400165a6:	add    BYTE PTR [rax],al
   1400165a8:	leave  
   1400165a9:	and    BYTE PTR [rdi],bh
   1400165ab:	jbe    0x140016612
   1400165ad:	jb     0x140016623
   1400165af:	imul   esp,DWORD PTR [rbx+0x61],0x6165486c
   1400165b6:	fs gs jb 0x1400165fa
   1400165ba:	push   rcx
   1400165bb:	push   rsp
   1400165bc:	(bad)  
   1400165bd:	(bad)  
   1400165be:	ins    BYTE PTR es:[rdi],dx
   1400165bf:	gs push rsi
   1400165c1:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400165c8:	rex.X
   1400165c9:	push   r8
   1400165cb:	rex.RB
   1400165cc:	push   r14
   1400165ce:	push   rcx
   1400165cf:	rex.W
   1400165d0:	gs (bad) 
   1400165d2:	fs gs jb 0x14001662c
   1400165d6:	imul   esp,DWORD PTR [rbp+0x77],0x5a584040
   1400165dd:	add    BYTE PTR [rcx+rax*1+0x3f],ah
   1400165e1:	(bad)  
   1400165e2:	xor    BYTE PTR [rcx+0x54],dl
   1400165e5:	(bad)  
   1400165e6:	(bad)  
   1400165e7:	ins    BYTE PTR es:[rdi],dx
   1400165e8:	gs push rsi
   1400165ea:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400165f1:	rex.B
   1400165f2:	rex.B
   1400165f3:	rex push rax
   1400165f5:	rex.RB
   1400165f6:	push   r14
   1400165f8:	push   rcx
   1400165f9:	push   rdi
   1400165fa:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140016602:	pop    rdx
   140016603:	add    BYTE PTR [rbx],bl
   140016605:	sbb    bh,BYTE PTR [rdi]
   140016607:	jae    0x14001666e
   140016609:	je     0x14001665b
   14001660b:	ins    BYTE PTR es:[rdi],dx
   14001660c:	(bad)  
   14001660d:	movsxd esp,DWORD PTR [rbp+0x68]
   140016610:	outs   dx,DWORD PTR ds:[rsi]
   140016611:	ins    BYTE PTR es:[rdi],dx
   140016612:	fs gs jb 0x14001666a
   140016616:	gs js  0x14001668d
   140016619:	rex push rcx
   14001661b:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016623:	rex
   140016624:	rex push rcx
   140016626:	rex.RB
   140016627:	rex.B
   140016628:	pop    r8
   14001662a:	rex.B
   14001662b:	rex.RB
   14001662c:	rex.X push rsi
   14001662e:	push   rcx
   14001662f:	push   rbx
   140016630:	je     0x1400166a4
   140016632:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140016639:	add    dh,al
   14001663b:	add    BYTE PTR [rdi],bh
   14001663d:	(bad)  
   14001663e:	xor    BYTE PTR [rcx+0x4c],dl
   140016641:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140016648:	rex
   140016649:	rex push rcx
   14001664b:	rex.RB
   14001664c:	rex.B
   14001664d:	rex.B
   14001664e:	rex push rax
   140016650:	rex.RB
   140016651:	push   r14
   140016653:	push   rcx
   140016654:	push   rdi
   140016655:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001665d:	pop    rdx
   14001665e:	add    BYTE PTR [rax],al
   140016660:	xchg   esp,eax
   140016661:	add    DWORD PTR [rdi],edi
   140016663:	(bad)  
   140016664:	xor    BYTE PTR [rcx+0x57],dl
   140016667:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001666f:	rex.RB
   140016670:	rex.B
   140016671:	rex.B
   140016672:	rex push rax
   140016674:	rex.RB
   140016675:	push   r14
   140016677:	xor    BYTE PTR [rax+0x56],al
   14001667a:	(bad)  
   14001667b:	and    al,0x51
   14001667d:	rex.RX ins BYTE PTR es:[rdi],dx
   14001667f:	(bad)  
   140016680:	addr32 jae 0x1400166c3
   140016683:	push   rdi
   140016684:	xor    al,0x57
   140016686:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   14001668d:	jo     0x1400166f4
   14001668f:	rex push rcx
   140016691:	je     0x1400166d3
   140016693:	rex
   140016694:	rex
   140016695:	rex
   140016696:	rex pop rdx
   140016698:	add    BYTE PTR [rax],al
   14001669a:	sti    
   14001669b:	or     bh,BYTE PTR [rdi]
   14001669d:	gs jbe 0x140016705
   1400166a0:	outs   dx,BYTE PTR ds:[rsi]
   1400166a1:	je     0x1400166e3
   1400166a3:	push   rcx
   1400166a4:	push   rdi
   1400166a5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400166ad:	rex.RB
   1400166ae:	rex.B
   1400166af:	pop    r15
   1400166b1:	rex.WRX push rax
   1400166b3:	rex.RB
   1400166b4:	push   r14
   1400166b6:	push   rcx
   1400166b7:	rex.RB jbe 0x14001671f
   1400166ba:	outs   dx,BYTE PTR ds:[rsi]
   1400166bb:	je     0x1400166fd
   1400166bd:	rex
   1400166be:	rex pop rdx
   1400166c0:	add    BYTE PTR [rax],al
   1400166c2:	fistp  DWORD PTR [rbx]
   1400166c4:	(bad)  
   1400166c5:	jae    0x14001672c
   1400166c7:	je     0x14001671f
   1400166c9:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   1400166d0:	push   rcx
   1400166d1:	push   rdi
   1400166d2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400166da:	rex.RB
   1400166db:	rex.B
   1400166dc:	pop    r8
   1400166de:	pop    rdi
   1400166df:	rex.WRX
   1400166e0:	rex pop rdx
   1400166e2:	add    BYTE PTR [rax],al
   1400166e4:	ret    
   1400166e5:	sbb    al,0x3f
   1400166e7:	jae    0x140016752
   1400166e9:	jp     0x140016750
   1400166eb:	imul   rbp,QWORD PTR [rsi+0x74],0x69575140
   1400166f3:	fs addr32 gs je 0x140016738
   1400166f8:	rex push rbp
   1400166fa:	rex.RB
   1400166fb:	rex.X
   1400166fc:	rex.B (bad) 
   1400166fe:	push   r14
   140016700:	push   rcx
   140016701:	push   rbx
   140016702:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016709:	add    BYTE PTR [rdx],bl
   14001670b:	adc    DWORD PTR [rdi],edi
   14001670d:	ins    DWORD PTR es:[rdi],dx
   14001670e:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140016715:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001671c:	rex push rcx
   14001671e:	push   rdi
   14001671f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016727:	rex.RB
   140016728:	rex.X
   140016729:	rex.B (bad) 
   14001672b:	push   r14
   14001672d:	push   rcx
   14001672e:	push   rbx
   14001672f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016736:	add    BYTE PTR [rax],al
   140016738:	mov    BYTE PTR [rdi+rdi*1],cl
   14001673b:	push   0x68676965
   140016740:	je     0x140016788
   140016742:	outs   dx,DWORD PTR ds:[rsi]
   140016743:	jb     0x14001679c
   140016745:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   14001674d:	fs addr32 gs je 0x140016792
   140016752:	rex push rbp
   140016754:	rex.RB
   140016755:	rex.X
   140016756:	rex.B
   140016757:	rex.W
   140016758:	rex.W
   140016759:	rex pop rdx
   14001675b:	add    BYTE PTR [rsi+0xc],ah
   14001675e:	(bad)  
   14001675f:	push   0x65487361
   140016764:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001676b:	push   rdi
   14001676c:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   140016774:	fs addr32 gs je 0x1400167b9
   140016779:	rex push rbp
   14001677b:	rex.RB
   14001677c:	rex.X
   14001677d:	pop    r15
   14001677f:	rex.WRX pop rax
   140016781:	pop    rdx
   140016782:	add    BYTE PTR [rax],al
   140016784:	xchg   BYTE PTR [rcx],dl
   140016786:	(bad)  
   140016787:	ins    DWORD PTR es:[rdi],dx
   140016788:	outs   dx,DWORD PTR ds:[rsi]
   140016789:	jne    0x1400167fe
   14001678b:	gs push rax
   14001678d:	jb     0x1400167f4
   14001678f:	jae    0x140016804
   140016791:	rex.RB jbe 0x1400167f9
   140016794:	outs   dx,BYTE PTR ds:[rsi]
   140016795:	je     0x1400167d7
   140016797:	push   rcx
   140016798:	push   rdi
   140016799:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400167a1:	rex.RB
   1400167a2:	rex.B
   1400167a3:	pop    r8
   1400167a5:	push   rax
   1400167a6:	rex.RB
   1400167a7:	push   r14
   1400167a9:	push   rcx
   1400167aa:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400167ac:	jne    0x140016821
   1400167ae:	gs rex.RB jbe 0x140016817
   1400167b2:	outs   dx,BYTE PTR ds:[rsi]
   1400167b3:	je     0x1400167f5
   1400167b5:	rex
   1400167b6:	rex pop rdx
   1400167b8:	add    BYTE PTR [rax],al
   1400167ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400167bb:	adc    DWORD PTR [rdi],edi
   1400167bd:	ins    DWORD PTR es:[rdi],dx
   1400167be:	outs   dx,DWORD PTR ds:[rsi]
   1400167bf:	jne    0x140016834
   1400167c1:	gs push rdx
   1400167c3:	gs ins BYTE PTR es:[rdi],dx
   1400167c5:	gs (bad) 
   1400167c7:	jae    0x14001682e
   1400167c9:	rex.RB jbe 0x140016831
   1400167cc:	outs   dx,BYTE PTR ds:[rsi]
   1400167cd:	je     0x14001680f
   1400167cf:	push   rcx
   1400167d0:	push   rdi
   1400167d1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400167d9:	rex.RB
   1400167da:	rex.B
   1400167db:	pop    r8
   1400167dd:	push   rax
   1400167de:	rex.RB
   1400167df:	push   r14
   1400167e1:	push   rcx
   1400167e2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400167e4:	jne    0x140016859
   1400167e6:	gs rex.RB jbe 0x14001684f
   1400167ea:	outs   dx,BYTE PTR ds:[rsi]
   1400167eb:	je     0x14001682d
   1400167ed:	rex
   1400167ee:	rex pop rdx
   1400167f0:	add    BYTE PTR [rax],al
   1400167f2:	adc    DWORD PTR [rdi],r15d
   1400167f5:	ins    DWORD PTR es:[rdi],dx
   1400167f6:	outs   dx,DWORD PTR ds:[rsi]
   1400167f7:	jne    0x14001686c
   1400167f9:	rex.R outs dx,DWORD PTR gs:[rsi]
   1400167fc:	jne    0x140016860
   1400167fe:	ins    BYTE PTR es:[rdi],dx
   1400167ff:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140016802:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140016809:	je     0x14001684b
   14001680b:	push   rcx
   14001680c:	push   rdi
   14001680d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016815:	rex.RB
   140016816:	rex.B
   140016817:	pop    r8
   140016819:	push   rax
   14001681a:	rex.RB
   14001681b:	push   r14
   14001681d:	push   rcx
   14001681e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016820:	jne    0x140016895
   140016822:	gs rex.RB jbe 0x14001688b
   140016826:	outs   dx,BYTE PTR ds:[rsi]
   140016827:	je     0x140016869
   140016829:	rex
   14001682a:	rex pop rdx
   14001682c:	add    BYTE PTR [rax],al
   14001682e:	adc    DWORD PTR fs:[rdi],edi
   140016831:	ins    DWORD PTR es:[rdi],dx
   140016832:	outs   dx,DWORD PTR ds:[rsi]
   140016833:	jne    0x1400168a8
   140016835:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140016838:	jbe    0x14001689f
   14001683a:	rex.RB jbe 0x1400168a2
   14001683d:	outs   dx,BYTE PTR ds:[rsi]
   14001683e:	je     0x140016880
   140016840:	push   rcx
   140016841:	push   rdi
   140016842:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001684a:	rex.RB
   14001684b:	rex.B
   14001684c:	pop    r8
   14001684e:	push   rax
   14001684f:	rex.RB
   140016850:	push   r14
   140016852:	push   rcx
   140016853:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016855:	jne    0x1400168ca
   140016857:	gs rex.RB jbe 0x1400168c0
   14001685b:	outs   dx,BYTE PTR ds:[rsi]
   14001685c:	je     0x14001689e
   14001685e:	rex
   14001685f:	rex pop rdx
   140016861:	add    BYTE PTR [rcx+riz*1],dh
   140016864:	(bad)  
   140016865:	ja     0x1400168cf
   140016867:	gs gs ins BYTE PTR es:[rdi],dx
   14001686a:	rex.RB jbe 0x1400168d2
   14001686d:	outs   dx,BYTE PTR ds:[rsi]
   14001686e:	je     0x1400168b0
   140016870:	push   rcx
   140016871:	push   rdi
   140016872:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001687a:	rex.RB
   14001687b:	rex.B
   14001687c:	pop    r8
   14001687e:	push   rax
   14001687f:	rex.RB
   140016880:	push   r14
   140016882:	push   rcx
   140016883:	push   rdi
   140016884:	push   0x456c6565
   140016889:	jbe    0x1400168f0
   14001688b:	outs   dx,BYTE PTR ds:[rsi]
   14001688c:	je     0x1400168ce
   14001688e:	rex
   14001688f:	rex pop rdx
   140016891:	add    BYTE PTR [rcx+0xf],bl
   140016894:	(bad)  
   140016895:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140016899:	jb     0x140016900
   14001689b:	jae    0x140016910
   14001689d:	rex.RB jbe 0x140016905
   1400168a0:	outs   dx,BYTE PTR ds:[rsi]
   1400168a1:	je     0x1400168e3
   1400168a3:	push   rcx
   1400168a4:	push   rdi
   1400168a5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400168ad:	rex.RB
   1400168ae:	rex.B
   1400168af:	pop    r8
   1400168b1:	push   rax
   1400168b2:	rex.RB
   1400168b3:	push   r14
   1400168b5:	push   rcx
   1400168b6:	rex.WXB
   1400168b7:	gs jns 0x1400168ff
   1400168ba:	jbe    0x140016921
   1400168bc:	outs   dx,BYTE PTR ds:[rsi]
   1400168bd:	je     0x1400168ff
   1400168bf:	rex
   1400168c0:	rex pop rdx
   1400168c2:	add    BYTE PTR [rax],al
   1400168c4:	data16 (bad) 
   1400168c7:	imul   esp,DWORD PTR [rbp+0x79],0x52
   1400168cb:	gs ins BYTE PTR es:[rdi],dx
   1400168cd:	gs (bad) 
   1400168cf:	jae    0x140016936
   1400168d1:	rex.RB jbe 0x140016939
   1400168d4:	outs   dx,BYTE PTR ds:[rsi]
   1400168d5:	je     0x140016917
   1400168d7:	push   rcx
   1400168d8:	push   rdi
   1400168d9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400168e1:	rex.RB
   1400168e2:	rex.B
   1400168e3:	pop    r8
   1400168e5:	push   rax
   1400168e6:	rex.RB
   1400168e7:	push   r14
   1400168e9:	push   rcx
   1400168ea:	rex.WXB
   1400168eb:	gs jns 0x140016933
   1400168ee:	jbe    0x140016955
   1400168f0:	outs   dx,BYTE PTR ds:[rsi]
   1400168f1:	je     0x140016933
   1400168f3:	rex
   1400168f4:	rex pop rdx
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	xchg   ebx,eax
   1400168f9:	or     edi,DWORD PTR [rdi]
   1400168fb:	outs   dx,WORD PTR ds:[rsi]
   1400168fd:	movsxd esi,DWORD PTR [rbp+0x73]
   140016900:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016902:	rex.RB jbe 0x14001696a
   140016905:	outs   dx,BYTE PTR ds:[rsi]
   140016906:	je     0x140016948
   140016908:	push   rcx
   140016909:	push   rdi
   14001690a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016912:	rex.RB
   140016913:	rex.B
   140016914:	pop    r8
   140016916:	push   rax
   140016917:	rex.RB
   140016918:	push   r14
   14001691a:	push   rcx
   14001691b:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001691d:	movsxd esi,DWORD PTR [rbp+0x73]
   140016920:	rex.RB jbe 0x140016988
   140016923:	outs   dx,BYTE PTR ds:[rsi]
   140016924:	je     0x140016966
   140016926:	rex
   140016927:	rex pop rdx
   140016929:	add    BYTE PTR [rcx+0x6f663f0b],bh
   14001692f:	movsxd esi,DWORD PTR [rbp+0x73]
   140016932:	rex.WRXB jne 0x1400169a9
   140016935:	rex.RB jbe 0x14001699d
   140016938:	outs   dx,BYTE PTR ds:[rsi]
   140016939:	je     0x14001697b
   14001693b:	push   rcx
   14001693c:	push   rdi
   14001693d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016945:	rex.RB
   140016946:	rex.B
   140016947:	pop    r8
   140016949:	push   rax
   14001694a:	rex.RB
   14001694b:	push   r14
   14001694d:	push   rcx
   14001694e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140016950:	movsxd esi,DWORD PTR [rbp+0x73]
   140016953:	rex.RB jbe 0x1400169bb
   140016956:	outs   dx,BYTE PTR ds:[rsi]
   140016957:	je     0x140016999
   140016959:	rex
   14001695a:	rex pop rdx
   14001695c:	add    BYTE PTR [rax],al
   14001695e:	mov    ah,0xa
   140016960:	(bad)  
   140016961:	outs   dx,BYTE PTR gs:[rsi]
   140016963:	je     0x1400169ca
   140016965:	jb     0x1400169ac
   140016967:	jbe    0x1400169ce
   140016969:	outs   dx,BYTE PTR ds:[rsi]
   14001696a:	je     0x1400169ac
   14001696c:	push   rcx
   14001696d:	push   rdi
   14001696e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016976:	rex.RB
   140016977:	rex.B
   140016978:	pop    r8
   14001697a:	push   rax
   14001697b:	rex.RB
   14001697c:	push   r14
   14001697e:	push   rcx
   14001697f:	rex.RB jbe 0x1400169e7
   140016982:	outs   dx,BYTE PTR ds:[rsi]
   140016983:	je     0x1400169c5
   140016985:	rex
   140016986:	rex pop rdx
   140016988:	add    BYTE PTR [rax],al
   14001698a:	cdq    
   14001698b:	(bad)  
   14001698d:	ins    BYTE PTR es:[rdi],dx
   14001698e:	gs (bad) 
   140016990:	jbe    0x1400169f7
   140016992:	rex.RB jbe 0x1400169fa
   140016995:	outs   dx,BYTE PTR ds:[rsi]
   140016996:	je     0x1400169d8
   140016998:	push   rcx
   140016999:	push   rdi
   14001699a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400169a2:	rex.RB
   1400169a3:	rex.B
   1400169a4:	pop    r8
   1400169a6:	push   rax
   1400169a7:	rex.RB
   1400169a8:	push   r14
   1400169aa:	push   rcx
   1400169ab:	rex.RB jbe 0x140016a13
   1400169ae:	outs   dx,BYTE PTR ds:[rsi]
   1400169af:	je     0x1400169f1
   1400169b1:	rex
   1400169b2:	rex pop rdx
   1400169b4:	add    BYTE PTR [rax],al
   1400169b6:	js     0x1400169ca
   1400169b8:	(bad)  
   1400169b9:	jo     0x140016a1c
   1400169bb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400169c2:	je     0x140016a04
   1400169c4:	push   rcx
   1400169c5:	push   rdi
   1400169c6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400169ce:	rex.RB
   1400169cf:	rex.B
   1400169d0:	pop    r8
   1400169d2:	push   rax
   1400169d3:	rex.RB
   1400169d4:	push   r14
   1400169d6:	push   rcx
   1400169d7:	push   rax
   1400169d8:	(bad)  
   1400169d9:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400169e0:	je     0x140016a22
   1400169e2:	rex
   1400169e3:	rex pop rdx
   1400169e5:	add    BYTE PTR [rcx+0x6f6d3f11],bh
   1400169eb:	jbe    0x140016a52
   1400169ed:	rex.RB jbe 0x140016a55
   1400169f0:	outs   dx,BYTE PTR ds:[rsi]
   1400169f1:	je     0x140016a33
   1400169f3:	push   rcx
   1400169f4:	push   rdi
   1400169f5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400169fd:	rex.RB
   1400169fe:	rex.B
   1400169ff:	pop    r8
   140016a01:	push   rax
   140016a02:	rex.RB
   140016a03:	push   r14
   140016a05:	push   rcx
   140016a06:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016a08:	jbe    0x140016a6f
   140016a0a:	rex.RB jbe 0x140016a72
   140016a0d:	outs   dx,BYTE PTR ds:[rsi]
   140016a0e:	je     0x140016a50
   140016a10:	rex
   140016a11:	rex pop rdx
   140016a13:	add    BYTE PTR [rax+0x65723f15],ah
   140016a19:	jae    0x140016a84
   140016a1b:	jp     0x140016a82
   140016a1d:	rex.RB jbe 0x140016a85
   140016a20:	outs   dx,BYTE PTR ds:[rsi]
   140016a21:	je     0x140016a63
   140016a23:	push   rcx
   140016a24:	push   rdi
   140016a25:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016a2d:	rex.RB
   140016a2e:	rex.B
   140016a2f:	pop    r8
   140016a31:	push   rax
   140016a32:	rex.RB
   140016a33:	push   r14
   140016a35:	push   rcx
   140016a36:	push   rdx
   140016a37:	gs jae 0x140016aa3
   140016a3a:	jp     0x140016aa1
   140016a3c:	rex.RB jbe 0x140016aa4
   140016a3f:	outs   dx,BYTE PTR ds:[rsi]
   140016a40:	je     0x140016a82
   140016a42:	rex
   140016a43:	rex pop rdx
   140016a45:	add    BYTE PTR [rbx],dl
   140016a47:	(bad)  
   140016a48:	(bad)  
   140016a49:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140016a4d:	gs rex.RB jbe 0x140016ab6
   140016a51:	outs   dx,BYTE PTR ds:[rsi]
   140016a52:	je     0x140016a94
   140016a54:	push   rcx
   140016a55:	push   rdi
   140016a56:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016a5e:	rex.RB
   140016a5f:	rex.B
   140016a60:	pop    r8
   140016a62:	push   rax
   140016a63:	rex.RB
   140016a64:	push   r14
   140016a66:	push   rcx
   140016a67:	rex.XB ins BYTE PTR es:[rdi],dx
   140016a69:	outs   dx,DWORD PTR ds:[rsi]
   140016a6a:	jae    0x140016ad1
   140016a6c:	rex.RB jbe 0x140016ad4
   140016a6f:	outs   dx,BYTE PTR ds:[rsi]
   140016a70:	je     0x140016ab2
   140016a72:	rex
   140016a73:	rex pop rdx
   140016a75:	add    BYTE PTR [rdx+0x6f633f07],dl
   140016a7b:	outs   dx,BYTE PTR ds:[rsi]
   140016a7c:	je     0x140016ae3
   140016a7e:	js     0x140016af4
   140016a80:	rex.WRB
   140016a81:	outs   dx,BYTE PTR gs:[rsi]
   140016a83:	jne    0x140016aca
   140016a85:	jbe    0x140016aec
   140016a87:	outs   dx,BYTE PTR ds:[rsi]
   140016a88:	je     0x140016aca
   140016a8a:	push   rcx
   140016a8b:	push   rdi
   140016a8c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016a94:	rex.RB
   140016a95:	rex.B
   140016a96:	pop    r8
   140016a98:	push   rax
   140016a99:	rex.RB
   140016a9a:	push   r14
   140016a9c:	push   rcx
   140016a9d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016a9f:	outs   dx,BYTE PTR ds:[rsi]
   140016aa0:	je     0x140016b07
   140016aa2:	js     0x140016b18
   140016aa4:	rex.WRB
   140016aa5:	outs   dx,BYTE PTR gs:[rsi]
   140016aa7:	jne    0x140016aee
   140016aa9:	jbe    0x140016b10
   140016aab:	outs   dx,BYTE PTR ds:[rsi]
   140016aac:	je     0x140016aee
   140016aae:	rex
   140016aaf:	rex pop rdx
   140016ab1:	add    BYTE PTR [rax],dh
   140016ab3:	(bad)  
   140016ab4:	(bad)  
   140016ab5:	je     0x140016b18
   140016ab7:	(bad)  
   140016ab8:	ins    BYTE PTR es:[rdi],dx
   140016ab9:	gs je  0x140016b01
   140016abc:	jbe    0x140016b23
   140016abe:	outs   dx,BYTE PTR ds:[rsi]
   140016abf:	je     0x140016b01
   140016ac1:	push   rcx
   140016ac2:	push   rdi
   140016ac3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016acb:	rex.RB
   140016acc:	rex.B
   140016acd:	pop    r8
   140016acf:	push   rax
   140016ad0:	rex.RB
   140016ad1:	push   r14
   140016ad3:	push   rcx
   140016ad4:	push   rsp
   140016ad5:	(bad)  
   140016ad6:	(bad)  
   140016ad7:	ins    BYTE PTR es:[rdi],dx
   140016ad8:	gs je  0x140016b20
   140016adb:	jbe    0x140016b42
   140016add:	outs   dx,BYTE PTR ds:[rsi]
   140016ade:	je     0x140016b20
   140016ae0:	rex
   140016ae1:	rex pop rdx
   140016ae3:	add    bl,dl
   140016ae5:	add    al,0x3f
   140016ae7:	(bad)  
   140016ae8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140016aec:	outs   dx,BYTE PTR ds:[rsi]
   140016aed:	rex.RB jbe 0x140016b55
   140016af0:	outs   dx,BYTE PTR ds:[rsi]
   140016af1:	je     0x140016b33
   140016af3:	push   rcx
   140016af4:	push   rdi
   140016af5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016afd:	rex.RB
   140016afe:	rex.B
   140016aff:	pop    r8
   140016b01:	push   rax
   140016b02:	rex.RB
   140016b03:	push   r14
   140016b05:	push   rcx
   140016b06:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140016b0b:	outs   dx,BYTE PTR ds:[rsi]
   140016b0c:	rex.RB jbe 0x140016b74
   140016b0f:	outs   dx,BYTE PTR ds:[rsi]
   140016b10:	je     0x140016b52
   140016b12:	rex
   140016b13:	rex pop rdx
   140016b15:	add    BYTE PTR [rax],bl
   140016b17:	or     bh,BYTE PTR [rdi]
   140016b19:	fs jb  0x140016b7d
   140016b1c:	rex.RB outs dx,BYTE PTR ds:[esi]
   140016b1f:	je     0x140016b86
   140016b21:	jb     0x140016b68
   140016b23:	jbe    0x140016b8a
   140016b25:	outs   dx,BYTE PTR ds:[rsi]
   140016b26:	je     0x140016b68
   140016b28:	push   rcx
   140016b29:	push   rdi
   140016b2a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016b32:	rex.RB
   140016b33:	rex.B
   140016b34:	pop    r8
   140016b36:	push   rax
   140016b37:	rex.RB
   140016b38:	push   r14
   140016b3a:	push   rcx
   140016b3b:	rex.R jb 0x140016b9f
   140016b3e:	rex.RB outs dx,BYTE PTR ds:[esi]
   140016b41:	je     0x140016ba8
   140016b43:	jb     0x140016b8a
   140016b45:	jbe    0x140016bac
   140016b47:	outs   dx,BYTE PTR ds:[rsi]
   140016b48:	je     0x140016b8a
   140016b4a:	rex
   140016b4b:	rex pop rdx
   140016b4d:	add    BYTE PTR [rdx],dh
   140016b4f:	or     bh,BYTE PTR [rdi]
   140016b51:	fs jb  0x140016bb5
   140016b54:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140016b57:	jbe    0x140016bbe
   140016b59:	rex.RB jbe 0x140016bc1
   140016b5c:	outs   dx,BYTE PTR ds:[rsi]
   140016b5d:	je     0x140016b9f
   140016b5f:	push   rcx
   140016b60:	push   rdi
   140016b61:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016b69:	rex.RB
   140016b6a:	rex.B
   140016b6b:	pop    r8
   140016b6d:	push   rax
   140016b6e:	rex.RB
   140016b6f:	push   r14
   140016b71:	push   rcx
   140016b72:	rex.R jb 0x140016bd6
   140016b75:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140016b78:	jbe    0x140016bdf
   140016b7a:	rex.RB jbe 0x140016be2
   140016b7d:	outs   dx,BYTE PTR ds:[rsi]
   140016b7e:	je     0x140016bc0
   140016b80:	rex
   140016b81:	rex pop rdx
   140016b83:	add    BYTE PTR [rdx+rcx*1],ah
   140016b86:	(bad)  
   140016b87:	fs jb  0x140016beb
   140016b8a:	addr32 rex.WR
   140016b8c:	gs (bad) 
   140016b8e:	jbe    0x140016bf5
   140016b90:	rex.RB jbe 0x140016bf8
   140016b93:	outs   dx,BYTE PTR ds:[rsi]
   140016b94:	je     0x140016bd6
   140016b96:	push   rcx
   140016b97:	push   rdi
   140016b98:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016ba0:	rex.RB
   140016ba1:	rex.B
   140016ba2:	pop    r8
   140016ba4:	push   rax
   140016ba5:	rex.RB
   140016ba6:	push   r14
   140016ba8:	push   rcx
   140016ba9:	rex.R jb 0x140016c0d
   140016bac:	addr32 rex.WR
   140016bae:	gs (bad) 
   140016bb0:	jbe    0x140016c17
   140016bb2:	rex.RB jbe 0x140016c1a
   140016bb5:	outs   dx,BYTE PTR ds:[rsi]
   140016bb6:	je     0x140016bf8
   140016bb8:	rex
   140016bb9:	rex pop rdx
   140016bbb:	add    BYTE PTR [rbp+0xa],ch
   140016bbe:	(bad)  
   140016bbf:	fs jb  0x140016c31
   140016bc2:	jo     0x140016c09
   140016bc4:	jbe    0x140016c2b
   140016bc6:	outs   dx,BYTE PTR ds:[rsi]
   140016bc7:	je     0x140016c09
   140016bc9:	push   rcx
   140016bca:	push   rdi
   140016bcb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016bd3:	rex.RB
   140016bd4:	rex.B
   140016bd5:	pop    r8
   140016bd7:	push   rax
   140016bd8:	rex.RB
   140016bd9:	push   r14
   140016bdb:	push   rcx
   140016bdc:	rex.R jb 0x140016c4e
   140016bdf:	jo     0x140016c26
   140016be1:	jbe    0x140016c48
   140016be3:	outs   dx,BYTE PTR ds:[rsi]
   140016be4:	je     0x140016c26
   140016be6:	rex
   140016be7:	rex pop rdx
   140016be9:	add    BYTE PTR [rbp+0x1c],bl
   140016bec:	(bad)  
   140016bed:	jae    0x140016c57
   140016bef:	outs   dx,DWORD PTR ds:[rsi]
   140016bf0:	ja     0x140016c37
   140016bf2:	jbe    0x140016c59
   140016bf4:	outs   dx,BYTE PTR ds:[rsi]
   140016bf5:	je     0x140016c37
   140016bf7:	push   rcx
   140016bf8:	push   rdi
   140016bf9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016c01:	rex.RB
   140016c02:	rex.B
   140016c03:	pop    r8
   140016c05:	push   rax
   140016c06:	rex.RB
   140016c07:	push   r14
   140016c09:	push   rcx
   140016c0a:	push   rbx
   140016c0b:	push   0x7645776f
   140016c10:	outs   dx,BYTE PTR gs:[rsi]
   140016c12:	je     0x140016c54
   140016c14:	rex
   140016c15:	rex pop rdx
   140016c17:	add    BYTE PTR [rbp+0x69683f0c],ah
   140016c1d:	fs gs rex.RB jbe 0x140016c87
   140016c22:	outs   dx,BYTE PTR ds:[rsi]
   140016c23:	je     0x140016c65
   140016c25:	push   rcx
   140016c26:	push   rdi
   140016c27:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016c2f:	rex.RB
   140016c30:	rex.B
   140016c31:	pop    r8
   140016c33:	push   rax
   140016c34:	rex.RB
   140016c35:	push   r14
   140016c37:	push   rcx
   140016c38:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   140016c41:	rex
   140016c42:	rex
   140016c43:	rex pop rdx
   140016c45:	add    bh,al
   140016c47:	adc    DWORD PTR [rdi],edi
   140016c49:	outs   dx,BYTE PTR ds:[rsi]
   140016c4a:	(bad)  
   140016c4b:	je     0x140016cb6
   140016c4d:	jbe    0x140016cb4
   140016c4f:	rex.RB jbe 0x140016cb7
   140016c52:	outs   dx,BYTE PTR ds:[rsi]
   140016c53:	je     0x140016c95
   140016c55:	push   rcx
   140016c56:	push   rdi
   140016c57:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016c5f:	rex.RB
   140016c60:	rex.B
   140016c61:	pop    r15
   140016c63:	rex.WRX
   140016c64:	rex.B
   140016c65:	rex.RB
   140016c66:	rex.X push rsi
   140016c68:	push   rcx
   140016c69:	rex.X jns 0x140016ce0
   140016c6c:	gs rex.B jb 0x140016ce2
   140016c70:	(bad)  
   140016c71:	jns    0x140016cb3
   140016c73:	rex push rax
   140016c75:	rex.RB
   140016c76:	pop    r8
   140016c78:	push   rax
   140016c79:	rex.RB
   140016c7a:	rex.B
   140016c7b:	rex.WX
   140016c7c:	rex pop rdx
   140016c7e:	add    BYTE PTR [rax],al
   140016c80:	mov    WORD PTR [rsi],es
   140016c82:	(bad)  
   140016c83:	movsxd ebp,DWORD PTR [rax+0x61]
   140016c86:	outs   dx,BYTE PTR ds:[rsi]
   140016c87:	addr32 gs rex.RB jbe 0x140016cf1
   140016c8c:	outs   dx,BYTE PTR ds:[rsi]
   140016c8d:	je     0x140016ccf
   140016c8f:	push   rcx
   140016c90:	push   rdi
   140016c91:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016c99:	rex.RB
   140016c9a:	rex.B
   140016c9b:	pop    r8
   140016c9d:	push   rax
   140016c9e:	rex.RB
   140016c9f:	push   r14
   140016ca1:	push   rcx
   140016ca2:	rex.RB jbe 0x140016d0a
   140016ca5:	outs   dx,BYTE PTR ds:[rsi]
   140016ca6:	je     0x140016ce8
   140016ca8:	rex
   140016ca9:	rex pop rdx
   140016cab:	add    BYTE PTR [rcx+0xd],bh
   140016cae:	(bad)  
   140016caf:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   140016cb6:	je     0x140016d20
   140016cb8:	outs   dx,DWORD PTR ds:[rsi]
   140016cb9:	fs rex.RB jbe 0x140016d22
   140016cbd:	outs   dx,BYTE PTR ds:[rsi]
   140016cbe:	je     0x140016d00
   140016cc0:	push   rcx
   140016cc1:	push   rdi
   140016cc2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016cca:	rex.RB
   140016ccb:	rex.B
   140016ccc:	pop    r8
   140016cce:	push   rax
   140016ccf:	rex.RB
   140016cd0:	push   r14
   140016cd2:	push   rcx
   140016cd3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016cd5:	jo     0x140016d4c
   140016cd7:	je     0x140016d26
   140016cd9:	gs je  0x140016d44
   140016cdc:	outs   dx,DWORD PTR ds:[rsi]
   140016cdd:	fs rex.RB jbe 0x140016d46
   140016ce1:	outs   dx,BYTE PTR ds:[rsi]
   140016ce2:	je     0x140016d24
   140016ce4:	rex
   140016ce5:	rex pop rdx
   140016ce7:	add    BYTE PTR [rcx+0x6e693f0d],cl
   140016ced:	jo     0x140016d64
   140016cef:	je     0x140016d3e
   140016cf1:	gs je  0x140016d5c
   140016cf4:	outs   dx,DWORD PTR ds:[rsi]
   140016cf5:	fs push rcx
   140016cf7:	jne    0x140016d5e
   140016cf9:	jb     0x140016d74
   140016cfb:	rex push rcx
   140016cfd:	push   rdi
   140016cfe:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016d06:	rex.RB
   140016d07:	rex.X
   140016d08:	rex.B (bad) 
   140016d0a:	push   r14
   140016d0c:	push   rcx
   140016d0d:	push   rsi
   140016d0e:	(bad)  
   140016d0f:	jb     0x140016d7a
   140016d11:	(bad)  
   140016d12:	outs   dx,BYTE PTR ds:[rsi]
   140016d13:	je     0x140016d55
   140016d15:	rex push rdi
   140016d17:	xor    al,0x49
   140016d19:	outs   dx,BYTE PTR ds:[rsi]
   140016d1a:	jo     0x140016d91
   140016d1c:	je     0x140016d6b
   140016d1e:	gs je  0x140016d89
   140016d21:	outs   dx,DWORD PTR ds:[rsi]
   140016d22:	fs push rcx
   140016d24:	jne    0x140016d8b
   140016d26:	jb     0x140016da1
   140016d28:	rex push rcx
   140016d2a:	je     0x140016d6c
   140016d2c:	rex
   140016d2d:	rex pop rdx
   140016d2f:	add    BYTE PTR [rbx+rcx*1+0x636f663f],ah
   140016d36:	jne    0x140016dab
   140016d38:	rex.WRX
   140016d39:	gs js  0x140016db0
   140016d3c:	push   rax
   140016d3d:	jb     0x140016da4
   140016d3f:	jbe    0x140016d84
   140016d41:	push   0x40646c69
   140016d46:	push   rcx
   140016d47:	push   rdi
   140016d48:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016d50:	rex.RB
   140016d51:	rex.B
   140016d52:	pop    r15
   140016d54:	rex.WRX pop rdi
   140016d56:	rex.WRX
   140016d57:	rex pop rdx
   140016d59:	add    ah,al
   140016d5b:	or     DWORD PTR [rdi],edi
   140016d5d:	fs gs jbe 0x140016db5
   140016d61:	jns    0x140016dd3
   140016d63:	gs rex push rcx
   140016d66:	push   rdi
   140016d67:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016d6f:	rex.RB
   140016d70:	rex.X
   140016d71:	rex.B
   140016d72:	rex.W pop rax
   140016d74:	pop    rdx
   140016d75:	add    BYTE PTR [rdi+0x12],cl
   140016d78:	(bad)  
   140016d79:	jo     0x140016ddc
   140016d7b:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   140016d82:	outs   dx,BYTE PTR ds:[rsi]
   140016d83:	gs rex push rcx
   140016d86:	push   rdi
   140016d87:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016d8f:	rex.RB
   140016d90:	rex.X
   140016d91:	push   r8
   140016d93:	rex.RB
   140016d94:	push   r14
   140016d96:	push   rcx
   140016d97:	push   rax
   140016d98:	(bad)  
   140016d99:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   140016da0:	outs   dx,BYTE PTR ds:[rsi]
   140016da1:	gs rex
   140016da3:	rex pop rax
   140016da5:	pop    rdx
   140016da6:	add    BYTE PTR [rax],al
   140016da8:	fcom   DWORD PTR [rax]
   140016daa:	(bad)  
   140016dab:	ins    DWORD PTR es:[rdi],dx
   140016dac:	gs je  0x140016e21
   140016daf:	imul   esp,DWORD PTR [rbx+0x40],0x64695751
   140016db6:	addr32 gs je 0x140016dfa
   140016dba:	rex
   140016dbb:	rex.WRB
   140016dbc:	rex.RB
   140016dbd:	rex.X
   140016dbe:	rex.B
   140016dbf:	rex.W push rdi
   140016dc1:	xor    al,0x50
   140016dc3:	(bad)  
   140016dc4:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   140016dcb:	movsxd esp,DWORD PTR [rbp+0x4d]
   140016dce:	gs je  0x140016e43
   140016dd1:	imul   esp,DWORD PTR [rbx+0x40],0x69615051
   140016dd8:	outs   dx,BYTE PTR ds:[rsi]
   140016dd9:	je     0x140016e1f
   140016ddb:	gs jbe 0x140016e47
   140016dde:	movsxd esp,DWORD PTR [rbp+0x40]
   140016de1:	rex
   140016de2:	rex pop rdx
   140016de4:	add    BYTE PTR [rax],al
   140016de6:	rex.X or eax,0x696e693f
   140016dec:	je     0x140016e3e
   140016dee:	(bad)  
   140016def:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   140016df6:	push   rdi
   140016df7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016dff:	rex.RB
   140016e00:	rex.X
   140016e01:	pop    r8
   140016e03:	push   rax
   140016e04:	rex.RB
   140016e05:	push   r14
   140016e07:	push   rcx
   140016e08:	push   rax
   140016e09:	(bad)  
   140016e0a:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140016e11:	rex pop rdx
   140016e13:	add    al,dh
   140016e15:	adc    al,0x3f
   140016e17:	jb     0x140016e7e
   140016e19:	imul   esi,DWORD PTR fs:[rdx+0x65],0x64657463
   140016e21:	rex push rcx
   140016e23:	push   rdi
   140016e24:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016e2c:	rex.RB
   140016e2d:	rex.X
   140016e2e:	push   r8
   140016e30:	rex.RB
   140016e31:	push   r14
   140016e33:	push   rcx
   140016e34:	push   rax
   140016e35:	(bad)  
   140016e36:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   140016e3d:	movsxd esp,DWORD PTR [rbp+0x40]
   140016e40:	rex push rax
   140016e42:	rex.RB
   140016e43:	push   r14
   140016e45:	push   rcx
   140016e46:	push   rax
   140016e47:	outs   dx,DWORD PTR ds:[rsi]
   140016e48:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140016e4f:	add    BYTE PTR [rcx],bh
   140016e51:	sbb    al,0x3f
   140016e53:	jae    0x140016ebd
   140016e55:	(bad)  
   140016e56:	jb     0x140016ebd
   140016e58:	fs push rax
   140016e5a:	(bad)  
   140016e5b:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   140016e62:	push   rdi
   140016e63:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016e6b:	rex.RB
   140016e6c:	rex.X
   140016e6d:	push   r8
   140016e6f:	rex.RB
   140016e70:	push   r14
   140016e72:	push   rcx
   140016e73:	push   rax
   140016e74:	(bad)  
   140016e75:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140016e7c:	pop    rax
   140016e7d:	pop    rdx
   140016e7e:	add    BYTE PTR [rax],al
   140016e80:	xchg   ecx,eax
   140016e81:	adc    BYTE PTR [rdi],bh
   140016e83:	ins    DWORD PTR es:[rdi],dx
   140016e84:	gs je  0x140016ee8
   140016e87:	rex.WRXB (bad) 
   140016e89:	push   0x65
   140016e8b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140016e8f:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016e97:	rex
   140016e98:	rex push rbp
   140016e9a:	rex.RB
   140016e9b:	rex.X
   140016e9c:	push   r8
   140016e9e:	rex.RB
   140016e9f:	rex.X push rbp
   140016ea1:	push   rcx
   140016ea2:	rex.WRB
   140016ea3:	gs je  0x140016f07
   140016ea6:	rex.WRXB (bad) 
   140016ea8:	push   0x65
   140016eaa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016eae:	pop    rax
   140016eaf:	pop    rdx
   140016eb0:	add    BYTE PTR [rax],al
   140016eb2:	add    al,0x14
   140016eb4:	(bad)  
   140016eb5:	jno    0x140016f2b
   140016eb7:	pop    rdi
   140016eb8:	ins    DWORD PTR es:[rdi],dx
   140016eb9:	gs je  0x140016f1d
   140016ebc:	movsxd esp,DWORD PTR [rcx+0x73]
   140016ebf:	je     0x140016f01
   140016ec1:	push   rcx
   140016ec2:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016eca:	rex
   140016ecb:	rex push rbp
   140016ecd:	rex.RB
   140016ece:	rex.B
   140016ecf:	push   r8
   140016ed1:	rex.RB
   140016ed2:	pop    r8
   140016ed4:	push   rax
   140016ed5:	rex.RB
   140016ed6:	rex.X
   140016ed7:	rex.R
   140016ed8:	rex pop rdx
   140016eda:	add    BYTE PTR [rax],al
   140016edc:	jp     0x140016ef1
   140016ede:	(bad)  
   140016edf:	jno    0x140016f55
   140016ee1:	pop    rdi
   140016ee2:	ins    DWORD PTR es:[rdi],dx
   140016ee3:	gs je  0x140016f47
   140016ee6:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016ee9:	ins    BYTE PTR es:[rdi],dx
   140016eea:	rex push rcx
   140016eec:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016ef4:	rex
   140016ef5:	rex push rbp
   140016ef7:	rex.RB
   140016ef8:	rex.B
   140016ef9:	rex.B
   140016efa:	rex.W push rdi
   140016efc:	xor    al,0x43
   140016efe:	(bad)  
   140016eff:	ins    BYTE PTR es:[rdi],dx
   140016f00:	ins    BYTE PTR es:[rdi],dx
   140016f01:	rex push rcx
   140016f03:	rex.WRB
   140016f04:	gs je  0x140016f68
   140016f07:	rex.WRXB (bad) 
   140016f09:	push   0x65
   140016f0b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016f0f:	rex.W push rax
   140016f11:	rex.RB
   140016f12:	push   r8
   140016f14:	rex.RB
   140016f15:	pop    r8
   140016f17:	rex pop rdx
   140016f19:	add    dh,dl
   140016f1b:	or     bh,BYTE PTR [rdi]
   140016f1d:	gs jbe 0x140016f85
   140016f20:	outs   dx,BYTE PTR ds:[rsi]
   140016f21:	je     0x140016f63
   140016f23:	push   rcx
   140016f24:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016f2c:	rex
   140016f2d:	rex push rbp
   140016f2f:	rex.RB
   140016f30:	rex.B
   140016f31:	pop    r15
   140016f33:	rex.WRX push rax
   140016f35:	rex.RB
   140016f36:	push   r14
   140016f38:	push   rcx
   140016f39:	rex.RB jbe 0x140016fa1
   140016f3c:	outs   dx,BYTE PTR ds:[rsi]
   140016f3d:	je     0x140016f7f
   140016f3f:	rex
   140016f40:	rex pop rdx
   140016f42:	add    BYTE PTR [rax],al
   140016f44:	stos   DWORD PTR es:[rdi],eax
   140016f45:	sbb    al,0x3f
   140016f47:	jae    0x140016fb2
   140016f49:	jp     0x140016fb0
   140016f4b:	imul   rbp,QWORD PTR [rsi+0x74],0x694c5140
   140016f53:	outs   dx,BYTE PTR ds:[rsi]
   140016f54:	gs rex.RB
   140016f56:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   140016f5f:	(bad)  
   140016f60:	push   r14
   140016f62:	push   rcx
   140016f63:	push   rbx
   140016f64:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016f6b:	add    BYTE PTR [rsi],cl
   140016f6d:	adc    DWORD PTR [rdi],edi
   140016f6f:	ins    DWORD PTR es:[rdi],dx
   140016f70:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140016f77:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140016f7e:	rex push rcx
   140016f80:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016f88:	rex
   140016f89:	rex push rbp
   140016f8b:	rex.RB
   140016f8c:	rex.X
   140016f8d:	rex.B (bad) 
   140016f8f:	push   r14
   140016f91:	push   rcx
   140016f92:	push   rbx
   140016f93:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016f9a:	add    BYTE PTR [rax],al
   140016f9c:	ja     0x140016faf
   140016f9e:	(bad)  
   140016f9f:	ins    DWORD PTR es:[rdi],dx
   140016fa0:	outs   dx,DWORD PTR ds:[rsi]
   140016fa1:	jne    0x140017016
   140016fa3:	gs push rax
   140016fa5:	jb     0x14001700c
   140016fa7:	jae    0x14001701c
   140016fa9:	rex.RB jbe 0x140017011
   140016fac:	outs   dx,BYTE PTR ds:[rsi]
   140016fad:	je     0x140016fef
   140016faf:	push   rcx
   140016fb0:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016fb8:	rex
   140016fb9:	rex
   140016fba:	rex.WRB
   140016fbb:	rex.RB
   140016fbc:	rex.B
   140016fbd:	pop    r8
   140016fbf:	push   rax
   140016fc0:	rex.RB
   140016fc1:	push   r14
   140016fc3:	push   rcx
   140016fc4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016fc6:	jne    0x14001703b
   140016fc8:	gs rex.RB jbe 0x140017031
   140016fcc:	outs   dx,BYTE PTR ds:[rsi]
   140016fcd:	je     0x14001700f
   140016fcf:	rex
   140016fd0:	rex pop rdx
   140016fd2:	add    BYTE PTR [rax],al
   140016fd4:	xchg   ebp,eax
   140016fd5:	adc    DWORD PTR [rdi],edi
   140016fd7:	ins    DWORD PTR es:[rdi],dx
   140016fd8:	outs   dx,DWORD PTR ds:[rsi]
   140016fd9:	jne    0x14001704e
   140016fdb:	gs push rdx
   140016fdd:	gs ins BYTE PTR es:[rdi],dx
   140016fdf:	gs (bad) 
   140016fe1:	jae    0x140017048
   140016fe3:	rex.RB jbe 0x14001704b
   140016fe6:	outs   dx,BYTE PTR ds:[rsi]
   140016fe7:	je     0x140017029
   140016fe9:	push   rcx
   140016fea:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140016ff2:	rex
   140016ff3:	rex
   140016ff4:	rex.WRB
   140016ff5:	rex.RB
   140016ff6:	rex.B
   140016ff7:	pop    r8
   140016ff9:	push   rax
   140016ffa:	rex.RB
   140016ffb:	push   r14
   140016ffd:	push   rcx
   140016ffe:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017000:	jne    0x140017075
   140017002:	gs rex.RB jbe 0x14001706b
   140017006:	outs   dx,BYTE PTR ds:[rsi]
   140017007:	je     0x140017049
   140017009:	rex
   14001700a:	rex pop rdx
   14001700c:	add    BYTE PTR [rax],al
   14001700e:	(bad)  
   14001700f:	adc    DWORD PTR [rdi],edi
   140017011:	ins    DWORD PTR es:[rdi],dx
   140017012:	outs   dx,DWORD PTR ds:[rsi]
   140017013:	jne    0x140017088
   140017015:	rex.R outs dx,DWORD PTR gs:[rsi]
   140017018:	jne    0x14001707c
   14001701a:	ins    BYTE PTR es:[rdi],dx
   14001701b:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14001701e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140017025:	je     0x140017067
   140017027:	push   rcx
   140017028:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017030:	rex
   140017031:	rex
   140017032:	rex.WRB
   140017033:	rex.RB
   140017034:	rex.B
   140017035:	pop    r8
   140017037:	push   rax
   140017038:	rex.RB
   140017039:	push   r14
   14001703b:	push   rcx
   14001703c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001703e:	jne    0x1400170b3
   140017040:	gs rex.RB jbe 0x1400170a9
   140017044:	outs   dx,BYTE PTR ds:[rsi]
   140017045:	je     0x140017087
   140017047:	rex
   140017048:	rex pop rdx
   14001704a:	add    BYTE PTR [rax],al
   14001704c:	push   rbp
   14001704d:	adc    DWORD PTR [rdi],edi
   14001704f:	ins    DWORD PTR es:[rdi],dx
   140017050:	outs   dx,DWORD PTR ds:[rsi]
   140017051:	jne    0x1400170c6
   140017053:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140017056:	jbe    0x1400170bd
   140017058:	rex.RB jbe 0x1400170c0
   14001705b:	outs   dx,BYTE PTR ds:[rsi]
   14001705c:	je     0x14001709e
   14001705e:	push   rcx
   14001705f:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017067:	rex
   140017068:	rex
   140017069:	rex.WRB
   14001706a:	rex.RB
   14001706b:	rex.B
   14001706c:	pop    r8
   14001706e:	push   rax
   14001706f:	rex.RB
   140017070:	push   r14
   140017072:	push   rcx
   140017073:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017075:	jne    0x1400170ea
   140017077:	gs rex.RB jbe 0x1400170e0
   14001707b:	outs   dx,BYTE PTR ds:[rsi]
   14001707c:	je     0x1400170be
   14001707e:	rex
   14001707f:	rex pop rdx
   140017081:	add    BYTE PTR [rbp+0xf],cl
   140017084:	(bad)  
   140017085:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140017089:	jb     0x1400170f0
   14001708b:	jae    0x140017100
   14001708d:	rex.RB jbe 0x1400170f5
   140017090:	outs   dx,BYTE PTR ds:[rsi]
   140017091:	je     0x1400170d3
   140017093:	push   rcx
   140017094:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001709c:	rex
   14001709d:	rex
   14001709e:	rex.WRB
   14001709f:	rex.RB
   1400170a0:	rex.B
   1400170a1:	pop    r8
   1400170a3:	push   rax
   1400170a4:	rex.RB
   1400170a5:	push   r14
   1400170a7:	push   rcx
   1400170a8:	rex.WXB
   1400170a9:	gs jns 0x1400170f1
   1400170ac:	jbe    0x140017113
   1400170ae:	outs   dx,BYTE PTR ds:[rsi]
   1400170af:	je     0x1400170f1
   1400170b1:	rex
   1400170b2:	rex pop rdx
   1400170b4:	add    BYTE PTR [rax],al
   1400170b6:	lea    ecx,[rbx]
   1400170b8:	(bad)  
   1400170b9:	outs   dx,WORD PTR ds:[rsi]
   1400170bb:	movsxd esi,DWORD PTR [rbp+0x73]
   1400170be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400170c0:	rex.RB jbe 0x140017128
   1400170c3:	outs   dx,BYTE PTR ds:[rsi]
   1400170c4:	je     0x140017106
   1400170c6:	push   rcx
   1400170c7:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400170cf:	rex
   1400170d0:	rex
   1400170d1:	rex.WRB
   1400170d2:	rex.RB
   1400170d3:	rex.B
   1400170d4:	pop    r8
   1400170d6:	push   rax
   1400170d7:	rex.RB
   1400170d8:	push   r14
   1400170da:	push   rcx
   1400170db:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400170dd:	movsxd esi,DWORD PTR [rbp+0x73]
   1400170e0:	rex.RB jbe 0x140017148
   1400170e3:	outs   dx,BYTE PTR ds:[rsi]
   1400170e4:	je     0x140017126
   1400170e6:	rex
   1400170e7:	rex pop rdx
   1400170e9:	add    BYTE PTR [rdx+0x6f663f0b],dh
   1400170ef:	movsxd esi,DWORD PTR [rbp+0x73]
   1400170f2:	rex.WRXB jne 0x140017169
   1400170f5:	rex.RB jbe 0x14001715d
   1400170f8:	outs   dx,BYTE PTR ds:[rsi]
   1400170f9:	je     0x14001713b
   1400170fb:	push   rcx
   1400170fc:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017104:	rex
   140017105:	rex
   140017106:	rex.WRB
   140017107:	rex.RB
   140017108:	rex.B
   140017109:	pop    r8
   14001710b:	push   rax
   14001710c:	rex.RB
   14001710d:	push   r14
   14001710f:	push   rcx
   140017110:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140017112:	movsxd esi,DWORD PTR [rbp+0x73]
   140017115:	rex.RB jbe 0x14001717d
   140017118:	outs   dx,BYTE PTR ds:[rsi]
   140017119:	je     0x14001715b
   14001711b:	rex
   14001711c:	rex pop rdx
   14001711e:	add    BYTE PTR [rax],al
   140017120:	pop    rdi
   140017121:	adc    bh,BYTE PTR [rdi]
   140017123:	jo     0x140017186
   140017125:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001712c:	je     0x14001716e
   14001712e:	push   rcx
   14001712f:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017137:	rex
   140017138:	rex
   140017139:	rex.WRB
   14001713a:	rex.RB
   14001713b:	rex.B
   14001713c:	pop    r8
   14001713e:	push   rax
   14001713f:	rex.RB
   140017140:	push   r14
   140017142:	push   rcx
   140017143:	push   rax
   140017144:	(bad)  
   140017145:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001714c:	je     0x14001718e
   14001714e:	rex
   14001714f:	rex pop rdx
   140017151:	add    BYTE PTR [rdi+rax*1+0x6e6f633f],cl
   140017158:	je     0x1400171bf
   14001715a:	js     0x1400171d0
   14001715c:	rex.WRB
   14001715d:	outs   dx,BYTE PTR gs:[rsi]
   14001715f:	jne    0x1400171a6
   140017161:	jbe    0x1400171c8
   140017163:	outs   dx,BYTE PTR ds:[rsi]
   140017164:	je     0x1400171a6
   140017166:	push   rcx
   140017167:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001716f:	rex
   140017170:	rex
   140017171:	rex.WRB
   140017172:	rex.RB
   140017173:	rex.B
   140017174:	pop    r8
   140017176:	push   rax
   140017177:	rex.RB
   140017178:	push   r14
   14001717a:	push   rcx
   14001717b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001717d:	outs   dx,BYTE PTR ds:[rsi]
   14001717e:	je     0x1400171e5
   140017180:	js     0x1400171f6
   140017182:	rex.WRB
   140017183:	outs   dx,BYTE PTR gs:[rsi]
   140017185:	jne    0x1400171cc
   140017187:	jbe    0x1400171ee
   140017189:	outs   dx,BYTE PTR ds:[rsi]
   14001718a:	je     0x1400171cc
   14001718c:	rex
   14001718d:	rex pop rdx
   14001718f:	add    BYTE PTR [rip+0x72643f0a],dl        # 0x1b265b09f
   140017195:	(bad)  
   140017196:	rex.RB outs dx,BYTE PTR ds:[esi]
   140017199:	je     0x140017200
   14001719b:	jb     0x1400171e2
   14001719d:	jbe    0x140017204
   14001719f:	outs   dx,BYTE PTR ds:[rsi]
   1400171a0:	je     0x1400171e2
   1400171a2:	push   rcx
   1400171a3:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400171ab:	rex
   1400171ac:	rex
   1400171ad:	rex.WRB
   1400171ae:	rex.RB
   1400171af:	rex.B
   1400171b0:	pop    r8
   1400171b2:	push   rax
   1400171b3:	rex.RB
   1400171b4:	push   r14
   1400171b6:	push   rcx
   1400171b7:	rex.R jb 0x14001721b
   1400171ba:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400171bd:	je     0x140017224
   1400171bf:	jb     0x140017206
   1400171c1:	jbe    0x140017228
   1400171c3:	outs   dx,BYTE PTR ds:[rsi]
   1400171c4:	je     0x140017206
   1400171c6:	rex
   1400171c7:	rex pop rdx
   1400171c9:	add    BYTE PTR [rip+0x72643f0a],ch        # 0x1b265b0d9
   1400171cf:	(bad)  
   1400171d0:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400171d3:	jbe    0x14001723a
   1400171d5:	rex.RB jbe 0x14001723d
   1400171d8:	outs   dx,BYTE PTR ds:[rsi]
   1400171d9:	je     0x14001721b
   1400171db:	push   rcx
   1400171dc:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400171e4:	rex
   1400171e5:	rex
   1400171e6:	rex.WRB
   1400171e7:	rex.RB
   1400171e8:	rex.B
   1400171e9:	pop    r8
   1400171eb:	push   rax
   1400171ec:	rex.RB
   1400171ed:	push   r14
   1400171ef:	push   rcx
   1400171f0:	rex.R jb 0x140017254
   1400171f3:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400171f6:	jbe    0x14001725d
   1400171f8:	rex.RB jbe 0x140017260
   1400171fb:	outs   dx,BYTE PTR ds:[rsi]
   1400171fc:	je     0x14001723e
   1400171fe:	rex
   1400171ff:	rex pop rdx
   140017201:	add    BYTE PTR [rax],ah
   140017203:	or     bh,BYTE PTR [rdi]
   140017205:	fs jb  0x140017269
   140017208:	addr32 rex.WR
   14001720a:	gs (bad) 
   14001720c:	jbe    0x140017273
   14001720e:	rex.RB jbe 0x140017276
   140017211:	outs   dx,BYTE PTR ds:[rsi]
   140017212:	je     0x140017254
   140017214:	push   rcx
   140017215:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001721d:	rex
   14001721e:	rex
   14001721f:	rex.WRB
   140017220:	rex.RB
   140017221:	rex.B
   140017222:	pop    r8
   140017224:	push   rax
   140017225:	rex.RB
   140017226:	push   r14
   140017228:	push   rcx
   140017229:	rex.R jb 0x14001728d
   14001722c:	addr32 rex.WR
   14001722e:	gs (bad) 
   140017230:	jbe    0x140017297
   140017232:	rex.RB jbe 0x14001729a
   140017235:	outs   dx,BYTE PTR ds:[rsi]
   140017236:	je     0x140017278
   140017238:	rex
   140017239:	rex pop rdx
   14001723b:	add    BYTE PTR [rsi+0xa],ah
   14001723e:	(bad)  
   14001723f:	fs jb  0x1400172b1
   140017242:	jo     0x140017289
   140017244:	jbe    0x1400172ab
   140017246:	outs   dx,BYTE PTR ds:[rsi]
   140017247:	je     0x140017289
   140017249:	push   rcx
   14001724a:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017252:	rex
   140017253:	rex
   140017254:	rex.WRB
   140017255:	rex.RB
   140017256:	rex.B
   140017257:	pop    r8
   140017259:	push   rax
   14001725a:	rex.RB
   14001725b:	push   r14
   14001725d:	push   rcx
   14001725e:	rex.R jb 0x1400172d0
   140017261:	jo     0x1400172a8
   140017263:	jbe    0x1400172ca
   140017265:	outs   dx,BYTE PTR ds:[rsi]
   140017266:	je     0x1400172a8
   140017268:	rex
   140017269:	rex pop rdx
   14001726b:	add    BYTE PTR [rbp+0x6],bh
   14001726e:	(bad)  
   14001726f:	movsxd ebp,DWORD PTR [rax+0x61]
   140017272:	outs   dx,BYTE PTR ds:[rsi]
   140017273:	addr32 gs rex.RB jbe 0x1400172dd
   140017278:	outs   dx,BYTE PTR ds:[rsi]
   140017279:	je     0x1400172bb
   14001727b:	push   rcx
   14001727c:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140017284:	rex
   140017285:	rex
   140017286:	rex.WRB
   140017287:	rex.RB
   140017288:	rex.B
   140017289:	pop    r8
   14001728b:	push   rax
   14001728c:	rex.RB
   14001728d:	push   r14
   14001728f:	push   rcx
   140017290:	rex.RB jbe 0x1400172f8
   140017293:	outs   dx,BYTE PTR ds:[rsi]
   140017294:	je     0x1400172d6
   140017296:	rex
   140017297:	rex pop rdx
   140017299:	add    BYTE PTR [rsi+0xd],dh
   14001729c:	(bad)  
   14001729d:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   1400172a4:	je     0x14001730e
   1400172a6:	outs   dx,DWORD PTR ds:[rsi]
   1400172a7:	fs rex.RB jbe 0x140017310
   1400172ab:	outs   dx,BYTE PTR ds:[rsi]
   1400172ac:	je     0x1400172ee
   1400172ae:	push   rcx
   1400172af:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400172b7:	rex
   1400172b8:	rex
   1400172b9:	rex.WRB
   1400172ba:	rex.RB
   1400172bb:	rex.B
   1400172bc:	pop    r8
   1400172be:	push   rax
   1400172bf:	rex.RB
   1400172c0:	push   r14
   1400172c2:	push   rcx
   1400172c3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400172c5:	jo     0x14001733c
   1400172c7:	je     0x140017316
   1400172c9:	gs je  0x140017334
   1400172cc:	outs   dx,DWORD PTR ds:[rsi]
   1400172cd:	fs rex.RB jbe 0x140017336
   1400172d1:	outs   dx,BYTE PTR ds:[rsi]
   1400172d2:	je     0x140017314
   1400172d4:	rex
   1400172d5:	rex pop rdx
   1400172d7:	add    BYTE PTR [rbp+rcx*1+0x706e693f],al
   1400172de:	jne    0x140017354
   1400172e0:	rex.WRB
   1400172e1:	gs je  0x14001734c
   1400172e4:	outs   dx,DWORD PTR ds:[rsi]
   1400172e5:	fs push rcx
   1400172e7:	jne    0x14001734e
   1400172e9:	jb     0x140017364
   1400172eb:	rex push rcx
   1400172ed:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400172f5:	rex
   1400172f6:	rex push rbp
   1400172f8:	rex.RB
   1400172f9:	rex.X
   1400172fa:	rex.B (bad) 
   1400172fc:	push   r14
   1400172fe:	push   rcx
   1400172ff:	push   rsi
   140017300:	(bad)  
   140017301:	jb     0x14001736c
   140017303:	(bad)  
   140017304:	outs   dx,BYTE PTR ds:[rsi]
   140017305:	je     0x140017347
   140017307:	rex push rdi
   140017309:	xor    al,0x49
   14001730b:	outs   dx,BYTE PTR ds:[rsi]
   14001730c:	jo     0x140017383
   14001730e:	je     0x14001735d
   140017310:	gs je  0x14001737b
   140017313:	outs   dx,DWORD PTR ds:[rsi]
   140017314:	fs push rcx
   140017316:	jne    0x14001737d
   140017318:	jb     0x140017393
   14001731a:	rex push rcx
   14001731c:	je     0x14001735e
   14001731e:	rex
   14001731f:	rex pop rdx
   140017321:	add    BYTE PTR [rdi+0x656d3f10],bh
   140017327:	je     0x14001738a
   140017329:	rex.WRXB (bad) 
   14001732b:	push   0x65
   14001732d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140017331:	push   rsp
   140017332:	(bad)  
   140017333:	(bad)  
   140017334:	ins    BYTE PTR es:[rdi],dx
   140017335:	gs push rsi
   140017337:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   14001733e:	rex.X
   14001733f:	push   r8
   140017341:	rex.RB
   140017342:	rex.X push rbp
   140017344:	push   rcx
   140017345:	rex.WRB
   140017346:	gs je  0x1400173aa
   140017349:	rex.WRXB (bad) 
   14001734b:	push   0x65
   14001734d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017351:	pop    rax
   140017352:	pop    rdx
   140017353:	add    BYTE PTR [rdx],dh
   140017355:	adc    al,0x3f
   140017357:	jno    0x1400173cd
   140017359:	pop    rdi
   14001735a:	ins    DWORD PTR es:[rdi],dx
   14001735b:	gs je  0x1400173bf
   14001735e:	movsxd esp,DWORD PTR [rcx+0x73]
   140017361:	je     0x1400173a3
   140017363:	push   rcx
   140017364:	push   rsp
   140017365:	(bad)  
   140017366:	(bad)  
   140017367:	ins    BYTE PTR es:[rdi],dx
   140017368:	gs push rsi
   14001736a:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017371:	rex.B
   140017372:	push   r8
   140017374:	rex.RB
   140017375:	pop    r8
   140017377:	push   rax
   140017378:	rex.RB
   140017379:	rex.X
   14001737a:	rex.R
   14001737b:	rex pop rdx
   14001737d:	add    BYTE PTR [rax+0x74713f13],ch
   140017383:	pop    rdi
   140017384:	ins    DWORD PTR es:[rdi],dx
   140017385:	gs je  0x1400173e9
   140017388:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001738b:	ins    BYTE PTR es:[rdi],dx
   14001738c:	rex push rcx
   14001738e:	push   rsp
   14001738f:	(bad)  
   140017390:	(bad)  
   140017391:	ins    BYTE PTR es:[rdi],dx
   140017392:	gs push rsi
   140017394:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   14001739b:	rex.B
   14001739c:	rex.B
   14001739d:	rex.W push rdi
   14001739f:	xor    al,0x43
   1400173a1:	(bad)  
   1400173a2:	ins    BYTE PTR es:[rdi],dx
   1400173a3:	ins    BYTE PTR es:[rdi],dx
   1400173a4:	rex push rcx
   1400173a6:	rex.WRB
   1400173a7:	gs je  0x14001740b
   1400173aa:	rex.WRXB (bad) 
   1400173ac:	push   0x65
   1400173ae:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400173b2:	rex.W push rax
   1400173b4:	rex.RB
   1400173b5:	push   r8
   1400173b7:	rex.RB
   1400173b8:	pop    r8
   1400173ba:	rex pop rdx
   1400173bc:	add    BYTE PTR [rax],al
   1400173be:	mov    ecx,0x76653f0a
   1400173c3:	outs   dx,BYTE PTR gs:[rsi]
   1400173c5:	je     0x140017407
   1400173c7:	push   rcx
   1400173c8:	(bad)
   1400173ce:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400173d2:	gs ins DWORD PTR es:[rdi],dx
   1400173d4:	push   rsi
   1400173d5:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400173dc:	rex.B
   1400173dd:	pop    r15
   1400173df:	rex.WRX push rax
   1400173e1:	rex.RB
   1400173e2:	push   r14
   1400173e4:	push   rcx
   1400173e5:	rex.RB jbe 0x14001744d
   1400173e8:	outs   dx,BYTE PTR ds:[rsi]
   1400173e9:	je     0x14001742b
   1400173eb:	rex
   1400173ec:	rex pop rdx
   1400173ee:	add    BYTE PTR [rax],al
   1400173f0:	add    BYTE PTR [rbx],cl
   1400173f2:	(bad)  
   1400173f3:	gs jbe 0x14001745b
   1400173f6:	outs   dx,BYTE PTR ds:[rsi]
   1400173f7:	je     0x14001743f
   1400173f9:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x41514072
   140017401:	(bad)
   140017406:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14001740a:	jb     0x14001747b
   14001740c:	ins    BYTE PTR es:[rdi],dx
   14001740d:	ins    BYTE PTR es:[rdi],dx
   14001740e:	rex.B jb 0x140017476
   140017411:	(bad)  
   140017412:	rex
   140017413:	rex
   140017414:	rex.WRB
   140017415:	rex.RB
   140017416:	rex.B
   140017417:	pop    r15
   140017419:	rex.WRX push rax
   14001741b:	rex.RB
   14001741c:	push   r14
   14001741e:	push   rcx
   14001741f:	rex.WRXB (bad) 
   140017421:	push   0x65
   140017423:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017427:	push   rax
   140017428:	rex.RB
   140017429:	push   r14
   14001742b:	push   rcx
   14001742c:	rex.RB jbe 0x140017494
   14001742f:	outs   dx,BYTE PTR ds:[rsi]
   140017430:	je     0x140017472
   140017432:	rex
   140017433:	rex pop rdx
   140017435:	add    BYTE PTR [rcx+0x69743f1e],ah
   14001743b:	ins    DWORD PTR es:[rdi],dx
   14001743c:	gs jb  0x140017484
   14001743f:	jbe    0x1400174a6
   140017441:	outs   dx,BYTE PTR ds:[rsi]
   140017442:	je     0x140017484
   140017444:	push   rcx
   140017445:	push   rsp
   140017446:	(bad)  
   140017447:	(bad)  
   140017448:	ins    BYTE PTR es:[rdi],dx
   140017449:	gs push rsi
   14001744b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017452:	rex.B
   140017453:	pop    r8
   140017455:	push   rax
   140017456:	rex.RB
   140017457:	push   r14
   140017459:	push   rcx
   14001745a:	push   rsp
   14001745b:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140017462:	outs   dx,BYTE PTR ds:[rsi]
   140017463:	je     0x1400174a5
   140017465:	rex
   140017466:	rex pop rdx
   140017468:	add    BYTE PTR [rax],al
   14001746a:	nop
   14001746b:	sbb    al,0x3f
   14001746d:	jae    0x1400174d8
   14001746f:	jp     0x1400174d6
   140017471:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140017479:	jae    0x1400174ef
   14001747b:	jb     0x1400174de
   14001747d:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017481:	jb     0x1400174f2
   140017483:	ins    BYTE PTR es:[rdi],dx
   140017484:	ins    BYTE PTR es:[rdi],dx
   140017485:	rex.B jb 0x1400174ed
   140017488:	(bad)  
   140017489:	rex
   14001748a:	rex push rbp
   14001748c:	rex.RB
   14001748d:	rex.X
   14001748e:	rex.B (bad) 
   140017490:	push   r14
   140017492:	push   rcx
   140017493:	push   rbx
   140017494:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001749b:	add    BYTE PTR [rbx],al
   14001749d:	adc    DWORD PTR [rdi],edi
   14001749f:	ins    DWORD PTR es:[rdi],dx
   1400174a0:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400174a7:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400174ae:	rex push rcx
   1400174b0:	(bad)
   1400174b6:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400174ba:	jb     0x14001752b
   1400174bc:	ins    BYTE PTR es:[rdi],dx
   1400174bd:	ins    BYTE PTR es:[rdi],dx
   1400174be:	rex.B jb 0x140017526
   1400174c1:	(bad)  
   1400174c2:	rex
   1400174c3:	rex push rbp
   1400174c5:	rex.RB
   1400174c6:	rex.X
   1400174c7:	rex.B (bad) 
   1400174c9:	push   r14
   1400174cb:	push   rcx
   1400174cc:	push   rbx
   1400174cd:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400174d4:	add    BYTE PTR [rax],al
   1400174d6:	push   0x6f6d3f11
   1400174db:	jne    0x140017550
   1400174dd:	gs push rax
   1400174df:	jb     0x140017546
   1400174e1:	jae    0x140017556
   1400174e3:	rex.RB jbe 0x14001754b
   1400174e6:	outs   dx,BYTE PTR ds:[rsi]
   1400174e7:	je     0x140017529
   1400174e9:	push   rcx
   1400174ea:	(bad)
   1400174f0:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400174f4:	gs ins DWORD PTR es:[rdi],dx
   1400174f6:	push   rsi
   1400174f7:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400174fe:	rex.B
   1400174ff:	pop    r8
   140017501:	push   rax
   140017502:	rex.RB
   140017503:	push   r14
   140017505:	push   rcx
   140017506:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017508:	jne    0x14001757d
   14001750a:	gs rex.RB jbe 0x140017573
   14001750e:	outs   dx,BYTE PTR ds:[rsi]
   14001750f:	je     0x140017551
   140017511:	rex
   140017512:	rex pop rdx
   140017514:	add    BYTE PTR [rax],al
   140017516:	mov    BYTE PTR [rcx],dl
   140017518:	(bad)  
   140017519:	ins    DWORD PTR es:[rdi],dx
   14001751a:	outs   dx,DWORD PTR ds:[rsi]
   14001751b:	jne    0x140017590
   14001751d:	gs push rdx
   14001751f:	gs ins BYTE PTR es:[rdi],dx
   140017521:	gs (bad) 
   140017523:	jae    0x14001758a
   140017525:	rex.RB jbe 0x14001758d
   140017528:	outs   dx,BYTE PTR ds:[rsi]
   140017529:	je     0x14001756b
   14001752b:	push   rcx
   14001752c:	(bad)
   140017532:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017536:	gs ins DWORD PTR es:[rdi],dx
   140017538:	push   rsi
   140017539:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017540:	rex.B
   140017541:	pop    r8
   140017543:	push   rax
   140017544:	rex.RB
   140017545:	push   r14
   140017547:	push   rcx
   140017548:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001754a:	jne    0x1400175bf
   14001754c:	gs rex.RB jbe 0x1400175b5
   140017550:	outs   dx,BYTE PTR ds:[rsi]
   140017551:	je     0x140017593
   140017553:	rex
   140017554:	rex pop rdx
   140017556:	add    BYTE PTR [rax],al
   140017558:	(bad)  
   140017559:	adc    DWORD PTR [rdi],edi
   14001755b:	ins    DWORD PTR es:[rdi],dx
   14001755c:	outs   dx,DWORD PTR ds:[rsi]
   14001755d:	jne    0x1400175d2
   14001755f:	rex.R outs dx,DWORD PTR gs:[rsi]
   140017562:	jne    0x1400175c6
   140017564:	ins    BYTE PTR es:[rdi],dx
   140017565:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140017568:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   14001756f:	je     0x1400175b1
   140017571:	push   rcx
   140017572:	(bad)
   140017578:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001757c:	gs ins DWORD PTR es:[rdi],dx
   14001757e:	push   rsi
   14001757f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017586:	rex.B
   140017587:	pop    r8
   140017589:	push   rax
   14001758a:	rex.RB
   14001758b:	push   r14
   14001758d:	push   rcx
   14001758e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017590:	jne    0x140017605
   140017592:	gs rex.RB jbe 0x1400175fb
   140017596:	outs   dx,BYTE PTR ds:[rsi]
   140017597:	je     0x1400175d9
   140017599:	rex
   14001759a:	rex pop rdx
   14001759c:	add    BYTE PTR [rax],al
   14001759e:	adc    QWORD PTR [rdi],rdi
   1400175a1:	ins    DWORD PTR es:[rdi],dx
   1400175a2:	outs   dx,DWORD PTR ds:[rsi]
   1400175a3:	jne    0x140017618
   1400175a5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400175a8:	jbe    0x14001760f
   1400175aa:	rex.RB jbe 0x140017612
   1400175ad:	outs   dx,BYTE PTR ds:[rsi]
   1400175ae:	je     0x1400175f0
   1400175b0:	push   rcx
   1400175b1:	(bad)
   1400175b7:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400175bb:	gs ins DWORD PTR es:[rdi],dx
   1400175bd:	push   rsi
   1400175be:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400175c5:	rex.B
   1400175c6:	pop    r8
   1400175c8:	push   rax
   1400175c9:	rex.RB
   1400175ca:	push   r14
   1400175cc:	push   rcx
   1400175cd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400175cf:	jne    0x140017644
   1400175d1:	gs rex.RB jbe 0x14001763a
   1400175d5:	outs   dx,BYTE PTR ds:[rsi]
   1400175d6:	je     0x140017618
   1400175d8:	rex
   1400175d9:	rex pop rdx
   1400175db:	add    BYTE PTR [rip+0x68773f21],ah        # 0x1a878b502
   1400175e1:	gs gs ins BYTE PTR es:[rdi],dx
   1400175e4:	rex.RB jbe 0x14001764c
   1400175e7:	outs   dx,BYTE PTR ds:[rsi]
   1400175e8:	je     0x14001762a
   1400175ea:	push   rcx
   1400175eb:	(bad)
   1400175f1:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400175f5:	jb     0x140017666
   1400175f7:	ins    BYTE PTR es:[rdi],dx
   1400175f8:	ins    BYTE PTR es:[rdi],dx
   1400175f9:	rex.B jb 0x140017661
   1400175fc:	(bad)  
   1400175fd:	rex
   1400175fe:	rex
   1400175ff:	rex.WRB
   140017600:	rex.RB
   140017601:	rex.B
   140017602:	pop    r8
   140017604:	push   rax
   140017605:	rex.RB
   140017606:	push   r14
   140017608:	push   rcx
   140017609:	push   rdi
   14001760a:	push   0x456c6565
   14001760f:	jbe    0x140017676
   140017611:	outs   dx,BYTE PTR ds:[rsi]
   140017612:	je     0x140017654
   140017614:	rex
   140017615:	rex pop rdx
   140017617:	add    BYTE PTR [rsi],bh
   140017619:	(bad)  
   14001761b:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001761f:	jb     0x140017686
   140017621:	jae    0x140017696
   140017623:	rex.RB jbe 0x14001768b
   140017626:	outs   dx,BYTE PTR ds:[rsi]
   140017627:	je     0x140017669
   140017629:	push   rcx
   14001762a:	(bad)
   140017630:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017634:	gs ins DWORD PTR es:[rdi],dx
   140017636:	push   rsi
   140017637:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001763e:	rex.B
   14001763f:	pop    r8
   140017641:	push   rax
   140017642:	rex.RB
   140017643:	push   r14
   140017645:	push   rcx
   140017646:	rex.WXB
   140017647:	gs jns 0x14001768f
   14001764a:	jbe    0x1400176b1
   14001764c:	outs   dx,BYTE PTR ds:[rsi]
   14001764d:	je     0x14001768f
   14001764f:	rex
   140017650:	rex pop rdx
   140017652:	add    BYTE PTR [rax],al
   140017654:	or     DWORD PTR [rbx],0x636f663f
   14001765a:	jne    0x1400176cf
   14001765c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001765e:	rex.RB jbe 0x1400176c6
   140017661:	outs   dx,BYTE PTR ds:[rsi]
   140017662:	je     0x1400176a4
   140017664:	push   rcx
   140017665:	(bad)
   14001766b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001766f:	gs ins DWORD PTR es:[rdi],dx
   140017671:	push   rsi
   140017672:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017679:	rex.B
   14001767a:	pop    r8
   14001767c:	push   rax
   14001767d:	rex.RB
   14001767e:	push   r14
   140017680:	push   rcx
   140017681:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140017683:	movsxd esi,DWORD PTR [rbp+0x73]
   140017686:	rex.RB jbe 0x1400176ee
   140017689:	outs   dx,BYTE PTR ds:[rsi]
   14001768a:	je     0x1400176cc
   14001768c:	rex
   14001768d:	rex pop rdx
   14001768f:	add    BYTE PTR [rax+0x6f663f0b],ch
   140017695:	movsxd esi,DWORD PTR [rbp+0x73]
   140017698:	rex.WRXB jne 0x14001770f
   14001769b:	rex.RB jbe 0x140017703
   14001769e:	outs   dx,BYTE PTR ds:[rsi]
   14001769f:	je     0x1400176e1
   1400176a1:	push   rcx
   1400176a2:	(bad)
   1400176a8:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400176ac:	gs ins DWORD PTR es:[rdi],dx
   1400176ae:	push   rsi
   1400176af:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400176b6:	rex.B
   1400176b7:	pop    r8
   1400176b9:	push   rax
   1400176ba:	rex.RB
   1400176bb:	push   r14
   1400176bd:	push   rcx
   1400176be:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400176c0:	movsxd esi,DWORD PTR [rbp+0x73]
   1400176c3:	rex.RB jbe 0x14001772b
   1400176c6:	outs   dx,BYTE PTR ds:[rsi]
   1400176c7:	je     0x140017709
   1400176c9:	rex
   1400176ca:	rex pop rdx
   1400176cc:	add    BYTE PTR [rax],al
   1400176ce:	jb     0x1400176e2
   1400176d0:	(bad)  
   1400176d1:	jo     0x140017734
   1400176d3:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400176da:	je     0x14001771c
   1400176dc:	push   rcx
   1400176dd:	push   rsp
   1400176de:	(bad)  
   1400176df:	(bad)  
   1400176e0:	ins    BYTE PTR es:[rdi],dx
   1400176e1:	gs push rsi
   1400176e3:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400176ea:	rex.B
   1400176eb:	pop    r8
   1400176ed:	push   rax
   1400176ee:	rex.RB
   1400176ef:	push   r14
   1400176f1:	push   rcx
   1400176f2:	push   rax
   1400176f3:	(bad)  
   1400176f4:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400176fb:	je     0x14001773d
   1400176fd:	rex
   1400176fe:	rex pop rdx
   140017700:	add    BYTE PTR [rax],al
   140017702:	adc    DWORD PTR [rip+0x7365723f],0x69        # 0x1b366e948
   140017709:	jp     0x140017770
   14001770b:	rex.RB jbe 0x140017773
   14001770e:	outs   dx,BYTE PTR ds:[rsi]
   14001770f:	je     0x140017751
   140017711:	push   rcx
   140017712:	(bad)
   140017718:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001771c:	gs ins DWORD PTR es:[rdi],dx
   14001771e:	push   rsi
   14001771f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017726:	rex.B
   140017727:	pop    r8
   140017729:	push   rax
   14001772a:	rex.RB
   14001772b:	push   r14
   14001772d:	push   rcx
   14001772e:	push   rdx
   14001772f:	gs jae 0x14001779b
   140017732:	jp     0x140017799
   140017734:	rex.RB jbe 0x14001779c
   140017737:	outs   dx,BYTE PTR ds:[rsi]
   140017738:	je     0x14001777a
   14001773a:	rex
   14001773b:	rex pop rdx
   14001773d:	add    BYTE PTR [rdx+0x6f633f07],al
   140017743:	outs   dx,BYTE PTR ds:[rsi]
   140017744:	je     0x1400177ab
   140017746:	js     0x1400177bc
   140017748:	rex.WRB
   140017749:	outs   dx,BYTE PTR gs:[rsi]
   14001774b:	jne    0x140017792
   14001774d:	jbe    0x1400177b4
   14001774f:	outs   dx,BYTE PTR ds:[rsi]
   140017750:	je     0x140017792
   140017752:	push   rcx
   140017753:	(bad)
   140017759:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14001775d:	jb     0x1400177ce
   14001775f:	ins    BYTE PTR es:[rdi],dx
   140017760:	ins    BYTE PTR es:[rdi],dx
   140017761:	rex.B jb 0x1400177c9
   140017764:	(bad)  
   140017765:	rex
   140017766:	rex
   140017767:	rex.WRB
   140017768:	rex.RB
   140017769:	rex.B
   14001776a:	pop    r8
   14001776c:	push   rax
   14001776d:	rex.RB
   14001776e:	push   r14
   140017770:	push   rcx
   140017771:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017773:	outs   dx,BYTE PTR ds:[rsi]
   140017774:	je     0x1400177db
   140017776:	js     0x1400177ec
   140017778:	rex.WRB
   140017779:	outs   dx,BYTE PTR gs:[rsi]
   14001777b:	jne    0x1400177c2
   14001777d:	jbe    0x1400177e4
   14001777f:	outs   dx,BYTE PTR ds:[rsi]
   140017780:	je     0x1400177c2
   140017782:	rex
   140017783:	rex pop rdx
   140017785:	add    BYTE PTR [rsi],cl
   140017787:	or     bh,BYTE PTR [rdi]
   140017789:	fs jb  0x1400177ed
   14001778c:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001778f:	je     0x1400177f6
   140017791:	jb     0x1400177d8
   140017793:	jbe    0x1400177fa
   140017795:	outs   dx,BYTE PTR ds:[rsi]
   140017796:	je     0x1400177d8
   140017798:	push   rcx
   140017799:	(bad)
   14001779f:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400177a3:	gs ins DWORD PTR es:[rdi],dx
   1400177a5:	push   rsi
   1400177a6:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400177ad:	rex.B
   1400177ae:	pop    r8
   1400177b0:	push   rax
   1400177b1:	rex.RB
   1400177b2:	push   r14
   1400177b4:	push   rcx
   1400177b5:	rex.R jb 0x140017819
   1400177b8:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400177bb:	je     0x140017822
   1400177bd:	jb     0x140017804
   1400177bf:	jbe    0x140017826
   1400177c1:	outs   dx,BYTE PTR ds:[rsi]
   1400177c2:	je     0x140017804
   1400177c4:	rex
   1400177c5:	rex pop rdx
   1400177c7:	add    BYTE PTR [rsi],ah
   1400177c9:	or     bh,BYTE PTR [rdi]
   1400177cb:	fs jb  0x14001782f
   1400177ce:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400177d1:	jbe    0x140017838
   1400177d3:	rex.RB jbe 0x14001783b
   1400177d6:	outs   dx,BYTE PTR ds:[rsi]
   1400177d7:	je     0x140017819
   1400177d9:	push   rcx
   1400177da:	(bad)
   1400177e0:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400177e4:	gs ins DWORD PTR es:[rdi],dx
   1400177e6:	push   rsi
   1400177e7:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400177ee:	rex.B
   1400177ef:	pop    r8
   1400177f1:	push   rax
   1400177f2:	rex.RB
   1400177f3:	push   r14
   1400177f5:	push   rcx
   1400177f6:	rex.R jb 0x14001785a
   1400177f9:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400177fc:	jbe    0x140017863
   1400177fe:	rex.RB jbe 0x140017866
   140017801:	outs   dx,BYTE PTR ds:[rsi]
   140017802:	je     0x140017844
   140017804:	rex
   140017805:	rex pop rdx
   140017807:	add    BYTE PTR [rcx],bl
   140017809:	or     bh,BYTE PTR [rdi]
   14001780b:	fs jb  0x14001786f
   14001780e:	addr32 rex.WR
   140017810:	gs (bad) 
   140017812:	jbe    0x140017879
   140017814:	rex.RB jbe 0x14001787c
   140017817:	outs   dx,BYTE PTR ds:[rsi]
   140017818:	je     0x14001785a
   14001781a:	push   rcx
   14001781b:	(bad)
   140017821:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017825:	gs ins DWORD PTR es:[rdi],dx
   140017827:	push   rsi
   140017828:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001782f:	rex.B
   140017830:	pop    r8
   140017832:	push   rax
   140017833:	rex.RB
   140017834:	push   r14
   140017836:	push   rcx
   140017837:	rex.R jb 0x14001789b
   14001783a:	addr32 rex.WR
   14001783c:	gs (bad) 
   14001783e:	jbe    0x1400178a5
   140017840:	rex.RB jbe 0x1400178a8
   140017843:	outs   dx,BYTE PTR ds:[rsi]
   140017844:	je     0x140017886
   140017846:	rex
   140017847:	rex pop rdx
   140017849:	add    BYTE PTR [rdi+0xa],bl
   14001784c:	(bad)  
   14001784d:	fs jb  0x1400178bf
   140017850:	jo     0x140017897
   140017852:	jbe    0x1400178b9
   140017854:	outs   dx,BYTE PTR ds:[rsi]
   140017855:	je     0x140017897
   140017857:	push   rcx
   140017858:	(bad)
   14001785e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017862:	gs ins DWORD PTR es:[rdi],dx
   140017864:	push   rsi
   140017865:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001786c:	rex.B
   14001786d:	pop    r8
   14001786f:	push   rax
   140017870:	rex.RB
   140017871:	push   r14
   140017873:	push   rcx
   140017874:	rex.R jb 0x1400178e6
   140017877:	jo     0x1400178be
   140017879:	jbe    0x1400178e0
   14001787b:	outs   dx,BYTE PTR ds:[rsi]
   14001787c:	je     0x1400178be
   14001787e:	rex
   14001787f:	rex pop rdx
   140017881:	add    BYTE PTR [rcx+0x6],bh
   140017884:	(bad)  
   140017885:	movsxd ebp,DWORD PTR [rax+0x61]
   140017888:	outs   dx,BYTE PTR ds:[rsi]
   140017889:	addr32 gs rex.RB jbe 0x1400178f3
   14001788e:	outs   dx,BYTE PTR ds:[rsi]
   14001788f:	je     0x1400178d1
   140017891:	push   rcx
   140017892:	rex.RX jb 0x1400178f6
   140017895:	ins    DWORD PTR es:[rdi],dx
   140017896:	gs rex
   140017898:	rex
   140017899:	rex.WRB
   14001789a:	rex.RB
   14001789b:	rex.B
   14001789c:	pop    r8
   14001789e:	push   rax
   14001789f:	rex.RB
   1400178a0:	push   r14
   1400178a2:	push   rcx
   1400178a3:	rex.RB jbe 0x14001790b
   1400178a6:	outs   dx,BYTE PTR ds:[rsi]
   1400178a7:	je     0x1400178e9
   1400178a9:	rex
   1400178aa:	rex pop rdx
   1400178ac:	add    BYTE PTR [rax],al
   1400178ae:	outs   dx,DWORD PTR ds:[rsi]
   1400178af:	or     eax,0x706e693f
   1400178b4:	jne    0x14001792a
   1400178b6:	rex.WRB
   1400178b7:	gs je  0x140017922
   1400178ba:	outs   dx,DWORD PTR ds:[rsi]
   1400178bb:	fs rex.RB jbe 0x140017924
   1400178bf:	outs   dx,BYTE PTR ds:[rsi]
   1400178c0:	je     0x140017902
   1400178c2:	push   rcx
   1400178c3:	(bad)
   1400178c9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400178cd:	gs ins DWORD PTR es:[rdi],dx
   1400178cf:	push   rsi
   1400178d0:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400178d7:	rex.B
   1400178d8:	pop    r8
   1400178da:	push   rax
   1400178db:	rex.RB
   1400178dc:	push   r14
   1400178de:	push   rcx
   1400178df:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400178e1:	jo     0x140017958
   1400178e3:	je     0x140017932
   1400178e5:	gs je  0x140017950
   1400178e8:	outs   dx,DWORD PTR ds:[rsi]
   1400178e9:	fs rex.RB jbe 0x140017952
   1400178ed:	outs   dx,BYTE PTR ds:[rsi]
   1400178ee:	je     0x140017930
   1400178f0:	rex
   1400178f1:	rex pop rdx
   1400178f3:	add    BYTE PTR [rbp+rcx*1+0x3f],bh
   1400178f7:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   1400178fe:	je     0x140017968
   140017900:	outs   dx,DWORD PTR ds:[rsi]
   140017901:	fs push rcx
   140017903:	jne    0x14001796a
   140017905:	jb     0x140017980
   140017907:	rex push rcx
   140017909:	(bad)
   14001790f:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017913:	gs ins DWORD PTR es:[rdi],dx
   140017915:	push   rsi
   140017916:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   14001791d:	rex.X
   14001791e:	rex.B (bad) 
   140017920:	push   r14
   140017922:	push   rcx
   140017923:	push   rsi
   140017924:	(bad)  
   140017925:	jb     0x140017990
   140017927:	(bad)  
   140017928:	outs   dx,BYTE PTR ds:[rsi]
   140017929:	je     0x14001796b
   14001792b:	rex push rdi
   14001792d:	xor    al,0x49
   14001792f:	outs   dx,BYTE PTR ds:[rsi]
   140017930:	jo     0x1400179a7
   140017932:	je     0x140017981
   140017934:	gs je  0x14001799f
   140017937:	outs   dx,DWORD PTR ds:[rsi]
   140017938:	fs push rcx
   14001793a:	jne    0x1400179a1
   14001793c:	jb     0x1400179b7
   14001793e:	rex push rcx
   140017940:	je     0x140017982
   140017942:	rex
   140017943:	rex pop rdx
   140017945:	add    BYTE PTR [rax+0x6f663f0b],bl
   14001794b:	movsxd esi,DWORD PTR [rbp+0x73]
   14001794e:	rex.WRX
   14001794f:	gs js  0x1400179c6
   140017952:	push   rax
   140017953:	jb     0x1400179ba
   140017955:	jbe    0x14001799a
   140017957:	push   0x40646c69
   14001795c:	push   rcx
   14001795d:	(bad)
   140017963:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017967:	gs ins DWORD PTR es:[rdi],dx
   140017969:	push   rsi
   14001796a:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017971:	rex.B
   140017972:	pop    r15
   140017974:	rex.WRX pop rdi
   140017976:	rex.WRX
   140017977:	rex pop rdx
   140017979:	add    BYTE PTR [rax],ch
   14001797b:	sbb    al,0x3f
   14001797d:	jae    0x1400179e4
   14001797f:	je     0x1400179f6
   140017981:	jo     0x1400179d9
   140017983:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   14001798a:	rex push rcx
   14001798c:	(bad)
   140017992:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017996:	jb     0x140017a07
   140017998:	ins    BYTE PTR es:[rdi],dx
   140017999:	ins    BYTE PTR es:[rdi],dx
   14001799a:	rex.B jb 0x140017a02
   14001799d:	(bad)  
   14001799e:	rex
   14001799f:	rex push rbp
   1400179a1:	rex.RB
   1400179a2:	rex.B
   1400179a3:	pop    r8
   1400179a5:	push   rax
   1400179a6:	rex.RB
   1400179a7:	push   r14
   1400179a9:	push   rcx
   1400179aa:	push   rdi
   1400179ab:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400179b3:	pop    rdx
   1400179b4:	add    BYTE PTR [rax],al
   1400179b6:	jmp    0x1400179d8
   1400179b8:	(bad)  
   1400179b9:	jbe    0x140017a24
   1400179bb:	gs ja  0x140017a2e
   1400179be:	outs   dx,DWORD PTR ds:[rsi]
   1400179bf:	jb     0x140017a35
   1400179c1:	rex.RB jbe 0x140017a29
   1400179c4:	outs   dx,BYTE PTR ds:[rsi]
   1400179c5:	je     0x140017a07
   1400179c7:	push   rcx
   1400179c8:	(bad)
   1400179ce:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400179d2:	gs ins DWORD PTR es:[rdi],dx
   1400179d4:	push   rsi
   1400179d5:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400179dc:	rex.B
   1400179dd:	pop    r15
   1400179df:	rex.WRX push rax
   1400179e1:	rex.RB
   1400179e2:	push   r14
   1400179e4:	push   rcx
   1400179e5:	rex.RB jbe 0x140017a4d
   1400179e8:	outs   dx,BYTE PTR ds:[rsi]
   1400179e9:	je     0x140017a2b
   1400179eb:	rex
   1400179ec:	rex pop rdx
   1400179ee:	add    BYTE PTR [rax],al
   1400179f0:	rex.RB (bad) 
   1400179f2:	(bad)  
   1400179f3:	jae    0x140017a58
   1400179f5:	jb     0x140017a66
   1400179f7:	ins    BYTE PTR es:[rdi],dx
   1400179f8:	ins    BYTE PTR es:[rdi],dx
   1400179f9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400179fb:	outs   dx,BYTE PTR ds:[rsi]
   1400179fc:	je     0x140017a63
   1400179fe:	outs   dx,BYTE PTR ds:[rsi]
   1400179ff:	je     0x140017a74
   140017a01:	rex.X jns 0x140017a44
   140017a04:	push   rcx
   140017a05:	push   rsp
   140017a06:	(bad)  
   140017a07:	(bad)  
   140017a08:	ins    BYTE PTR es:[rdi],dx
   140017a09:	gs push rsi
   140017a0b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017a12:	rex.B
   140017a13:	pop    r8
   140017a15:	rex.W
   140017a16:	rex.W
   140017a17:	rex pop rdx
   140017a19:	add    bh,dh
   140017a1b:	and    BYTE PTR [rdi],bh
   140017a1d:	jbe    0x140017a88
   140017a1f:	gs ja  0x140017a92
   140017a22:	outs   dx,DWORD PTR ds:[rsi]
   140017a23:	jb     0x140017a99
   140017a25:	push   rbx
   140017a26:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140017a2d:	rex push rcx
   140017a2f:	push   rsp
   140017a30:	(bad)  
   140017a31:	(bad)  
   140017a32:	ins    BYTE PTR es:[rdi],dx
   140017a33:	gs push rsi
   140017a35:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017a3c:	rex.X
   140017a3d:	rex.B (bad) 
   140017a3f:	push   r14
   140017a41:	push   rcx
   140017a42:	push   rbx
   140017a43:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017a4a:	add    BYTE PTR [rax],al
   140017a4c:	xchg   edi,eax
   140017a4d:	sbb    DWORD PTR [rdi],edi
   140017a4f:	jae    0x140017ab6
   140017a51:	je     0x140017aa0
   140017a53:	outs   dx,DWORD PTR ds:[rsi]
   140017a54:	fs gs ins BYTE PTR es:[rdi],dx
   140017a57:	rex push rcx
   140017a59:	push   rsp
   140017a5a:	(bad)  
   140017a5b:	(bad)  
   140017a5c:	ins    BYTE PTR es:[rdi],dx
   140017a5d:	gs push rsi
   140017a5f:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017a66:	rex.B
   140017a67:	pop    r8
   140017a69:	push   rax
   140017a6a:	rex.RB
   140017a6b:	push   r14
   140017a6d:	push   rcx
   140017a6e:	(bad)
   140017a74:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017a78:	gs ins DWORD PTR es:[rdi],dx
   140017a7a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017a7c:	fs gs ins BYTE PTR es:[rdi],dx
   140017a7f:	rex
   140017a80:	rex
   140017a81:	rex pop rdx
   140017a83:	add    BYTE PTR [rdi+0x65733f1a],dh
   140017a89:	je     0x140017ade
   140017a8b:	gs ins BYTE PTR es:[rdi],dx
   140017a8d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140017a92:	outs   dx,BYTE PTR ds:[rsi]
   140017a93:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017a95:	fs gs ins BYTE PTR es:[rdi],dx
   140017a98:	rex push rcx
   140017a9a:	push   rsp
   140017a9b:	(bad)  
   140017a9c:	(bad)  
   140017a9d:	ins    BYTE PTR es:[rdi],dx
   140017a9e:	gs push rsi
   140017aa0:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017aa7:	rex.B
   140017aa8:	pop    r8
   140017aaa:	push   rax
   140017aab:	rex.RB
   140017aac:	push   r14
   140017aae:	push   rcx
   140017aaf:	rex.WB je 0x140017b17
   140017ab2:	ins    DWORD PTR es:[rdi],dx
   140017ab3:	push   rbx
   140017ab4:	gs ins BYTE PTR es:[rdi],dx
   140017ab6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140017abb:	outs   dx,BYTE PTR ds:[rsi]
   140017abc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017abe:	fs gs ins BYTE PTR es:[rdi],dx
   140017ac1:	rex
   140017ac2:	rex
   140017ac3:	rex pop rdx
   140017ac5:	add    BYTE PTR [rsi+0xf],ch
   140017ac8:	(bad)  
   140017ac9:	imul   esp,DWORD PTR [rbp+0x79],0x62
   140017acd:	outs   dx,DWORD PTR ds:[rsi]
   140017ace:	(bad)  
   140017acf:	jb     0x140017b35
   140017ad1:	push   rbx
   140017ad2:	gs (bad) 
   140017ad4:	jb     0x140017b39
   140017ad6:	push   0x62415140
   140017adb:	jae    0x140017b51
   140017add:	jb     0x140017b40
   140017adf:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017ae3:	gs ins DWORD PTR es:[rdi],dx
   140017ae5:	push   rsi
   140017ae6:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017aed:	rex.B
   140017aee:	pop    r8
   140017af0:	rex.B
   140017af1:	rex.RB
   140017af2:	rex.X push rsi
   140017af4:	push   rcx
   140017af5:	push   rbx
   140017af6:	je     0x140017b6a
   140017af8:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140017aff:	add    BYTE PTR [rcx],dl
   140017b01:	and    DWORD PTR [rdi],edi
   140017b03:	jbe    0x140017b6e
   140017b05:	jae    0x140017b7c
   140017b07:	(bad)  
   140017b08:	ins    BYTE PTR es:[rdi],dx
   140017b09:	push   rdx
   140017b0a:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   140017b0f:	push   rsp
   140017b10:	(bad)  
   140017b11:	(bad)  
   140017b12:	ins    BYTE PTR es:[rdi],dx
   140017b13:	gs push rsi
   140017b15:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017b1c:	rex.X
   140017b1d:	rex.B (bad) 
   140017b1f:	push   r14
   140017b21:	push   rcx
   140017b22:	push   rdx
   140017b23:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140017b28:	rex.B
   140017b29:	rex.RB
   140017b2a:	rex.X push rsi
   140017b2c:	push   rcx
   140017b2d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017b2f:	fs gs ins BYTE PTR es:[rdi],dx
   140017b32:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017b34:	fs gs js 0x140017b78
   140017b38:	rex
   140017b39:	rex pop rdx
   140017b3b:	add    BYTE PTR [rax+0x16],dl
   140017b3e:	(bad)  
   140017b3f:	jae    0x140017ba4
   140017b41:	jb     0x140017bb2
   140017b43:	ins    BYTE PTR es:[rdi],dx
   140017b44:	ins    BYTE PTR es:[rdi],dx
   140017b45:	push   rsp
   140017b46:	outs   dx,DWORD PTR ds:[rsi]
   140017b47:	rex push rcx
   140017b49:	push   rsp
   140017b4a:	(bad)  
   140017b4b:	(bad)  
   140017b4c:	ins    BYTE PTR es:[rdi],dx
   140017b4d:	gs push rsi
   140017b4f:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017b56:	rex.B
   140017b57:	pop    r8
   140017b59:	rex.B
   140017b5a:	rex.RB
   140017b5b:	rex.X push rsi
   140017b5d:	push   rcx
   140017b5e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017b60:	fs gs ins BYTE PTR es:[rdi],dx
   140017b63:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017b65:	fs gs js 0x140017ba9
   140017b69:	rex push rdi
   140017b6b:	xor    al,0x53
   140017b6d:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017b70:	ins    BYTE PTR es:[rdi],dx
   140017b71:	ins    BYTE PTR es:[rdi],dx
   140017b72:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140017b7a:	jae    0x140017bf0
   140017b7c:	jb     0x140017bdf
   140017b7e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017b82:	gs ins DWORD PTR es:[rdi],dx
   140017b84:	push   rsi
   140017b85:	imul   esp,DWORD PTR [rbp+0x77],0x5a404040
   140017b8c:	add    BYTE PTR [rax],al
   140017b8e:	(bad)  
   140017b8f:	or     eax,0x646e693f
   140017b94:	gs js  0x140017bd8
   140017b97:	je     0x140017bd9
   140017b99:	push   rcx
   140017b9a:	push   rsp
   140017b9b:	(bad)  
   140017b9c:	(bad)  
   140017b9d:	ins    BYTE PTR es:[rdi],dx
   140017b9e:	gs push rsi
   140017ba0:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017ba7:	rex.X
   140017ba8:	rex.B (bad) 
   140017baa:	push   r14
   140017bac:	push   rcx
   140017bad:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017baf:	fs gs ins BYTE PTR es:[rdi],dx
   140017bb2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017bb4:	fs gs js 0x140017bf8
   140017bb8:	rex
   140017bb9:	rex.B
   140017bba:	rex.RB
   140017bbb:	rex.X push rsi
   140017bbd:	push   rcx
   140017bbe:	push   rax
   140017bbf:	outs   dx,DWORD PTR ds:[rsi]
   140017bc0:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140017bc7:	add    ch,cl
   140017bc9:	sbb    al,0x3f
   140017bcb:	jae    0x140017c36
   140017bcd:	jp     0x140017c34
   140017bcf:	imul   rbp,QWORD PTR [rsi+0x74],0x52726f46
   140017bd7:	outs   dx,DWORD PTR ds:[rsi]
   140017bd8:	ja     0x140017c1a
   140017bda:	push   rcx
   140017bdb:	push   rsp
   140017bdc:	(bad)  
   140017bdd:	(bad)  
   140017bde:	ins    BYTE PTR es:[rdi],dx
   140017bdf:	gs push rsi
   140017be1:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017be8:	rex.X
   140017be9:	rex.B
   140017bea:	rex.W
   140017beb:	rex.W
   140017bec:	rex pop rdx
   140017bee:	add    BYTE PTR [rax],al
   140017bf0:	leave  
   140017bf1:	sbb    al,0x3f
   140017bf3:	jae    0x140017c5e
   140017bf5:	jp     0x140017c5c
   140017bf7:	imul   rbp,QWORD PTR [rsi+0x74],0x43726f46
   140017bff:	outs   dx,DWORD PTR ds:[rsi]
   140017c00:	ins    BYTE PTR es:[rdi],dx
   140017c01:	jne    0x140017c70
   140017c03:	outs   dx,BYTE PTR ds:[rsi]
   140017c04:	rex push rcx
   140017c06:	push   rsp
   140017c07:	(bad)  
   140017c08:	(bad)  
   140017c09:	ins    BYTE PTR es:[rdi],dx
   140017c0a:	gs push rsi
   140017c0c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017c13:	rex.X
   140017c14:	rex.B
   140017c15:	rex.W
   140017c16:	rex.W
   140017c17:	rex pop rdx
   140017c19:	add    BYTE PTR [rbp+rdx*1+0x3f],bl
   140017c1d:	jb     0x140017c84
   140017c1f:	jae    0x140017c86
   140017c21:	je     0x140017c63
   140017c23:	push   rcx
   140017c24:	(bad)
   140017c2a:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017c2e:	gs ins DWORD PTR es:[rdi],dx
   140017c30:	push   rsi
   140017c31:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017c38:	rex.B
   140017c39:	pop    r8
   140017c3b:	pop    rax
   140017c3c:	pop    rdx
   140017c3d:	add    BYTE PTR [rax+0x1a],ch
   140017c40:	(bad)  
   140017c41:	jae    0x140017ca8
   140017c43:	je     0x140017c97
   140017c45:	outs   dx,DWORD PTR ds:[rsi]
   140017c46:	outs   dx,DWORD PTR ds:[rsi]
   140017c47:	je     0x140017c92
   140017c49:	outs   dx,BYTE PTR ds:[rsi]
   140017c4a:	fs gs js 0x140017c8e
   140017c4e:	push   rcx
   140017c4f:	push   rsp
   140017c50:	(bad)  
   140017c51:	(bad)  
   140017c52:	ins    BYTE PTR es:[rdi],dx
   140017c53:	gs push rsi
   140017c55:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017c5c:	rex.B
   140017c5d:	pop    r8
   140017c5f:	rex.B
   140017c60:	rex.RB
   140017c61:	rex.X push rsi
   140017c63:	push   rcx
   140017c64:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017c66:	fs gs ins BYTE PTR es:[rdi],dx
   140017c69:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017c6b:	fs gs js 0x140017caf
   140017c6f:	rex
   140017c70:	rex pop rdx
   140017c72:	add    BYTE PTR [rax],al
   140017c74:	loop   0x140017c7f
   140017c76:	(bad)  
   140017c77:	outs   dx,DWORD PTR fs:[rsi]
   140017c79:	rex.WB je 0x140017ce1
   140017c7c:	ins    DWORD PTR es:[rdi],dx
   140017c7d:	jae    0x140017ccb
   140017c7f:	(bad)  
   140017c80:	jns    0x140017cf1
   140017c82:	jne    0x140017cf8
   140017c84:	rex push rcx
   140017c86:	push   rsp
   140017c87:	(bad)  
   140017c88:	(bad)  
   140017c89:	ins    BYTE PTR es:[rdi],dx
   140017c8a:	gs push rsi
   140017c8c:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017c93:	rex.B
   140017c94:	pop    r8
   140017c96:	pop    rax
   140017c97:	pop    rdx
   140017c98:	add    BYTE PTR [rax],al
   140017c9a:	jns    0x140017cb2
   140017c9c:	(bad)  
   140017c9d:	jae    0x140017d04
   140017c9f:	ins    BYTE PTR es:[rdi],dx
   140017ca0:	movsxd esi,DWORD PTR gs:[rcx+rax*2+0x6c]
   140017ca5:	ins    BYTE PTR es:[rdi],dx
   140017ca6:	rex push rcx
   140017ca8:	(bad)
   140017cae:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017cb2:	gs ins DWORD PTR es:[rdi],dx
   140017cb4:	push   rsi
   140017cb5:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140017cbc:	rex.B
   140017cbd:	pop    r8
   140017cbf:	pop    rax
   140017cc0:	pop    rdx
   140017cc1:	add    BYTE PTR [rax+0xa],bh
   140017cc4:	(bad)  
   140017cc5:	gs imul esi,DWORD PTR fs:[rax+rax*2+0x51],0x74736241
   140017ccf:	jb     0x140017d32
   140017cd1:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017cd5:	gs ins DWORD PTR es:[rdi],dx
   140017cd7:	push   rsi
   140017cd8:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017cdf:	rex.B
   140017ce0:	pop    r15
   140017ce2:	rex.WRX
   140017ce3:	rex.B
   140017ce4:	rex.RB
   140017ce5:	rex.X push rsi
   140017ce7:	push   rcx
   140017ce8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017cea:	fs gs ins BYTE PTR es:[rdi],dx
   140017ced:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017cef:	fs gs js 0x140017d33
   140017cf3:	rex push rdi
   140017cf5:	xor    al,0x45
   140017cf7:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x72],0x65676769
   140017d00:	jb     0x140017d42
   140017d02:	xor    DWORD PTR [rax+0x50],eax
   140017d05:	rex.RB
   140017d06:	push   r14
   140017d08:	push   rcx
   140017d09:	rex.RB jbe 0x140017d71
   140017d0c:	outs   dx,BYTE PTR ds:[rsi]
   140017d0d:	je     0x140017d4f
   140017d0f:	rex
   140017d10:	rex pop rdx
   140017d12:	add    BYTE PTR [rax],al
   140017d14:	xchg   esi,eax
   140017d15:	or     DWORD PTR [rdi],edi
   140017d17:	fs (bad) 
   140017d19:	je     0x140017d7c
   140017d1b:	rex.XB push 0x65676e61
   140017d21:	fs rex push rcx
   140017d24:	(bad)
   140017d2a:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017d2e:	gs ins DWORD PTR es:[rdi],dx
   140017d30:	push   rsi
   140017d31:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017d38:	rex.B
   140017d39:	pop    r8
   140017d3b:	rex.B
   140017d3c:	rex.RB
   140017d3d:	rex.X push rsi
   140017d3f:	push   rcx
   140017d40:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017d42:	fs gs ins BYTE PTR es:[rdi],dx
   140017d45:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017d47:	fs gs js 0x140017d8b
   140017d4b:	xor    BYTE PTR [rcx+0x45],al
   140017d4f:	rex.X push rsi
   140017d51:	(bad)  
   140017d52:	and    al,0x51
   140017d54:	push   rsi
   140017d55:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140017d5a:	rex
   140017d5b:	rex.W
   140017d5c:	rex
   140017d5d:	rex
   140017d5e:	rex pop rdx
   140017d60:	add    BYTE PTR [rax],al
   140017d62:	cld    
   140017d63:	adc    eax,0x776f723f
   140017d68:	jae    0x140017db3
   140017d6a:	outs   dx,BYTE PTR ds:[rsi]
   140017d6b:	jae    0x140017dd2
   140017d6d:	jb     0x140017de3
   140017d6f:	gs fs rex push rcx
   140017d73:	(bad)
   140017d79:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017d7d:	gs ins DWORD PTR es:[rdi],dx
   140017d7f:	push   rsi
   140017d80:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017d87:	rex.B
   140017d88:	pop    r8
   140017d8a:	rex.B
   140017d8b:	rex.RB
   140017d8c:	rex.X push rsi
   140017d8e:	push   rcx
   140017d8f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017d91:	fs gs ins BYTE PTR es:[rdi],dx
   140017d94:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017d96:	fs gs js 0x140017dda
   140017d9a:	rex
   140017d9b:	rex.W
   140017d9c:	rex.W
   140017d9d:	rex pop rdx
   140017d9f:	add    cl,bh
   140017da1:	adc    eax,0x776f723f
   140017da6:	jae    0x140017de9
   140017da8:	(bad)  
   140017da9:	outs   dx,DWORD PTR ds:[rsi]
   140017daa:	jne    0x140017e20
   140017dac:	push   rsp
   140017dad:	outs   dx,DWORD PTR ds:[rsi]
   140017dae:	rex.X
   140017daf:	gs push rdx
   140017db1:	gs ins DWORD PTR es:[rdi],dx
   140017db3:	outs   dx,DWORD PTR ds:[rsi]
   140017db4:	jbe    0x140017e1b
   140017db6:	fs rex push rcx
   140017db9:	(bad)
   140017dbf:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017dc3:	gs ins DWORD PTR es:[rdi],dx
   140017dc5:	push   rsi
   140017dc6:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017dcd:	rex.B
   140017dce:	pop    r8
   140017dd0:	rex.B
   140017dd1:	rex.RB
   140017dd2:	rex.X push rsi
   140017dd4:	push   rcx
   140017dd5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017dd7:	fs gs ins BYTE PTR es:[rdi],dx
   140017dda:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017ddc:	fs gs js 0x140017e20
   140017de0:	rex
   140017de1:	rex.W
   140017de2:	rex.W
   140017de3:	rex pop rdx
   140017de5:	add    BYTE PTR [rcx+0x65733f16],ch
   140017deb:	ins    BYTE PTR es:[rdi],dx
   140017dec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140017df1:	outs   dx,BYTE PTR ds:[rsi]
   140017df2:	rex.XB push 0x65676e61
   140017df8:	fs rex push rcx
   140017dfb:	push   rsp
   140017dfc:	(bad)  
   140017dfd:	(bad)  
   140017dfe:	ins    BYTE PTR es:[rdi],dx
   140017dff:	gs push rsi
   140017e01:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017e08:	rex.B
   140017e09:	pop    r8
   140017e0b:	rex.B
   140017e0c:	rex.RB
   140017e0d:	rex.X push rsi
   140017e0f:	push   rcx
   140017e10:	rex.WB je 0x140017e78
   140017e13:	ins    DWORD PTR es:[rdi],dx
   140017e14:	push   rbx
   140017e15:	gs ins BYTE PTR es:[rdi],dx
   140017e17:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140017e1c:	outs   dx,BYTE PTR ds:[rsi]
   140017e1d:	rex
   140017e1e:	xor    BYTE PTR [rax+0x5a],al
   140017e22:	add    BYTE PTR [rax],al
   140017e24:	icebp  
   140017e25:	(bad)  
   140017e26:	(bad)  
   140017e27:	movsxd esi,DWORD PTR [rbp+0x72]
   140017e2a:	jb     0x140017e91
   140017e2c:	outs   dx,BYTE PTR ds:[rsi]
   140017e2d:	je     0x140017e72
   140017e2f:	push   0x65676e61
   140017e34:	fs rex push rcx
   140017e37:	push   rsp
   140017e38:	(bad)  
   140017e39:	(bad)  
   140017e3a:	ins    BYTE PTR es:[rdi],dx
   140017e3b:	gs push rsi
   140017e3d:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017e44:	rex.B
   140017e45:	pop    r8
   140017e47:	rex.B
   140017e48:	rex.RB
   140017e49:	rex.X push rsi
   140017e4b:	push   rcx
   140017e4c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017e4e:	fs gs ins BYTE PTR es:[rdi],dx
   140017e51:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017e53:	fs gs js 0x140017e97
   140017e57:	xor    BYTE PTR [rax+0x5a],al
   140017e5b:	add    BYTE PTR [rdi+0x20],ch
   140017e5e:	(bad)  
   140017e5f:	jne    0x140017ed1
   140017e61:	fs (bad) 
   140017e63:	je     0x140017eca
   140017e65:	rex.RB
   140017e66:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x61746144
   140017e6f:	rex push rcx
   140017e71:	(bad)
   140017e77:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017e7b:	gs ins DWORD PTR es:[rdi],dx
   140017e7d:	push   rsi
   140017e7e:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017e85:	rex.B
   140017e86:	pop    r8
   140017e88:	pop    rax
   140017e89:	pop    rdx
   140017e8a:	add    BYTE PTR [rax],al
   140017e8c:	jo     0x140017eae
   140017e8e:	(bad)  
   140017e8f:	jne    0x140017f01
   140017e91:	fs (bad) 
   140017e93:	je     0x140017efa
   140017e95:	rex.RB
   140017e96:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x6d6f6547
   140017e9f:	gs je  0x140017f14
   140017ea2:	imul   esp,DWORD PTR [rbp+0x73],0x62415140
   140017ea9:	jae    0x140017f1f
   140017eab:	jb     0x140017f0e
   140017ead:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017eb1:	gs ins DWORD PTR es:[rdi],dx
   140017eb3:	push   rsi
   140017eb4:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017ebb:	rex.B
   140017ebc:	pop    r8
   140017ebe:	pop    rax
   140017ebf:	pop    rdx
   140017ec0:	add    BYTE PTR [rax],al
   140017ec2:	jge    0x140017ee4
   140017ec4:	(bad)  
   140017ec5:	jne    0x140017f37
   140017ec7:	fs (bad) 
   140017ec9:	je     0x140017f30
   140017ecb:	rex.RXB
   140017ecc:	outs   dx,DWORD PTR gs:[rsi]
   140017ece:	ins    DWORD PTR es:[rdi],dx
   140017ecf:	gs je  0x140017f44
   140017ed2:	imul   esp,DWORD PTR [rbp+0x73],0x61545140
   140017ed9:	(bad)  
   140017eda:	ins    BYTE PTR es:[rdi],dx
   140017edb:	gs push rsi
   140017edd:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017ee4:	rex.B
   140017ee5:	pop    r8
   140017ee7:	pop    rax
   140017ee8:	pop    rdx
   140017ee9:	add    al,bl
   140017eeb:	and    BYTE PTR [rdi],bh
   140017eed:	jbe    0x140017f54
   140017eef:	jb     0x140017f65
   140017ef1:	imul   esp,DWORD PTR [rbx+0x61],0x7263536c
   140017ef8:	outs   dx,DWORD PTR ds:[rsi]
   140017ef9:	ins    BYTE PTR es:[rdi],dx
   140017efa:	ins    BYTE PTR es:[rdi],dx
   140017efb:	(bad)  
   140017efd:	jb     0x140017f40
   140017eff:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140017f03:	outs   dx,BYTE PTR ds:[rsi]
   140017f04:	rex push rcx
   140017f06:	push   rsp
   140017f07:	(bad)  
   140017f08:	(bad)  
   140017f09:	ins    BYTE PTR es:[rdi],dx
   140017f0a:	gs push rsi
   140017f0c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017f13:	rex.B
   140017f14:	pop    r8
   140017f16:	rex.W
   140017f17:	rex pop rdx
   140017f19:	add    dh,dl
   140017f1b:	or     al,0x3f
   140017f1d:	push   0x7a69726f
   140017f22:	outs   dx,DWORD PTR ds:[rsi]
   140017f23:	outs   dx,BYTE PTR ds:[rsi]
   140017f24:	je     0x140017f87
   140017f26:	ins    BYTE PTR es:[rdi],dx
   140017f27:	push   rbx
   140017f28:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017f2b:	ins    BYTE PTR es:[rdi],dx
   140017f2c:	ins    BYTE PTR es:[rdi],dx
   140017f2d:	(bad)  
   140017f2f:	jb     0x140017f72
   140017f31:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140017f35:	outs   dx,BYTE PTR ds:[rsi]
   140017f36:	rex push rcx
   140017f38:	push   rsp
   140017f39:	(bad)  
   140017f3a:	(bad)  
   140017f3b:	ins    BYTE PTR es:[rdi],dx
   140017f3c:	gs push rsi
   140017f3e:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017f45:	rex.B
   140017f46:	pop    r8
   140017f48:	rex.W
   140017f49:	rex pop rdx
   140017f4b:	add    cl,bl
   140017f4d:	and    BYTE PTR [rdi],bh
   140017f4f:	jbe    0x140017fb6
   140017f51:	jb     0x140017fc7
   140017f53:	imul   esp,DWORD PTR [rbx+0x61],0x7263536c
   140017f5a:	outs   dx,DWORD PTR ds:[rsi]
   140017f5b:	ins    BYTE PTR es:[rdi],dx
   140017f5c:	ins    BYTE PTR es:[rdi],dx
   140017f5d:	(bad)  
   140017f5f:	jb     0x140017fb7
   140017f61:	(bad)  
   140017f62:	ins    BYTE PTR es:[rdi],dx
   140017f63:	jne    0x140017fca
   140017f65:	rex.XB push 0x65676e61
   140017f6b:	fs rex push rcx
   140017f6e:	(bad)
   140017f74:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017f78:	gs ins DWORD PTR es:[rdi],dx
   140017f7a:	push   rsi
   140017f7b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017f82:	rex.B
   140017f83:	pop    r8
   140017f85:	rex.W
   140017f86:	rex pop rdx
   140017f88:	add    BYTE PTR [rax],al
   140017f8a:	fmul   DWORD PTR [rdi+rdi*1]
   140017f8d:	push   0x7a69726f
   140017f92:	outs   dx,DWORD PTR ds:[rsi]
   140017f93:	outs   dx,BYTE PTR ds:[rsi]
   140017f94:	je     0x140017ff7
   140017f96:	ins    BYTE PTR es:[rdi],dx
   140017f97:	push   rbx
   140017f98:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017f9b:	ins    BYTE PTR es:[rdi],dx
   140017f9c:	ins    BYTE PTR es:[rdi],dx
   140017f9d:	(bad)  
   140017f9f:	jb     0x140017ff7
   140017fa1:	(bad)  
   140017fa2:	ins    BYTE PTR es:[rdi],dx
   140017fa3:	jne    0x14001800a
   140017fa5:	rex.XB push 0x65676e61
   140017fab:	fs rex push rcx
   140017fae:	(bad)
   140017fb4:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017fb8:	gs ins DWORD PTR es:[rdi],dx
   140017fba:	push   rsi
   140017fbb:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017fc2:	rex.B
   140017fc3:	pop    r8
   140017fc5:	rex.W
   140017fc6:	rex pop rdx
   140017fc8:	add    BYTE PTR [rax],al
   140017fca:	or     eax,DWORD PTR [rdi]
   140017fcc:	(bad)  
   140017fcd:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140017fd1:	gs rex.RB
   140017fd3:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x62415140
   140017fdc:	jae    0x140018052
   140017fde:	jb     0x140018041
   140017fe0:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140017fe4:	gs ins DWORD PTR es:[rdi],dx
   140017fe6:	push   rsi
   140017fe7:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140017fee:	rex.B
   140017fef:	pop    r8
   140017ff1:	push   rax
   140017ff2:	rex.RB
   140017ff3:	push   r14
   140017ff5:	push   rcx
   140017ff6:	push   rdi
   140017ff7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x57404074
   140017fff:	xor    al,0x45
   140018001:	outs   dx,BYTE PTR ds:[rsi]
   140018002:	fs rex.RB
   140018004:	imul   esi,DWORD PTR fs:[rax+rcx*2+0x69],0x5140746e
   14001800d:	(bad)
   140018013:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140018017:	gs ins DWORD PTR es:[rdi],dx
   140018019:	rex.R
   14001801a:	gs ins BYTE PTR es:[rdi],dx
   14001801c:	gs addr32 (bad) 
   14001801f:	je     0x140018086
   140018021:	rex
   140018022:	rex
   140018023:	rex pop rdx
   140018025:	add    BYTE PTR [rbx+0x7],bl
   140018028:	(bad)  
   140018029:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001802c:	ins    DWORD PTR es:[rdi],dx
   14001802d:	imul   esi,DWORD PTR [rsp+rax*2+0x61],0x51406174
   140018035:	(bad)
   14001803b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001803f:	gs ins DWORD PTR es:[rdi],dx
   140018041:	push   rsi
   140018042:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018049:	rex.B
   14001804a:	pop    r8
   14001804c:	push   rax
   14001804d:	rex.RB
   14001804e:	push   r14
   140018050:	push   rcx
   140018051:	push   rdi
   140018052:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001805a:	pop    rdx
   14001805b:	add    BYTE PTR [rbx+0x64653f0a],al
   140018061:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x74736544
   140018069:	jb     0x1400180da
   14001806b:	jns    0x1400180d2
   14001806d:	fs rex push rcx
   140018070:	(bad)
   140018076:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001807a:	gs ins DWORD PTR es:[rdi],dx
   14001807c:	push   rsi
   14001807d:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018084:	rex.B
   140018085:	pop    r8
   140018087:	push   rax
   140018088:	rex.RB
   140018089:	push   r14
   14001808b:	push   rcx
   14001808c:	rex.WRXB (bad) 
   14001808e:	push   0x65
   140018090:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018094:	rex pop rdx
   140018096:	add    BYTE PTR [rax],al
   140018098:	mov    al,0x11
   14001809a:	(bad)  
   14001809b:	ins    DWORD PTR es:[rdi],dx
   14001809c:	outs   dx,DWORD PTR ds:[rsi]
   14001809d:	jbe    0x140018104
   14001809f:	rex.XB jne 0x140018114
   1400180a2:	jae    0x140018113
   1400180a4:	jb     0x1400180e6
   1400180a6:	push   rcx
   1400180a7:	push   rsp
   1400180a8:	(bad)  
   1400180a9:	(bad)  
   1400180aa:	ins    BYTE PTR es:[rdi],dx
   1400180ab:	gs push rsi
   1400180ad:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400180b4:	rex.B
   1400180b5:	rex.B (bad) 
   1400180b7:	push   r14
   1400180b9:	push   rcx
   1400180ba:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400180bc:	fs gs ins BYTE PTR es:[rdi],dx
   1400180bf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400180c1:	fs gs js 0x140018105
   1400180c5:	rex push rdi
   1400180c7:	xor    al,0x43
   1400180c9:	jne    0x14001813d
   1400180cb:	jae    0x14001813c
   1400180cd:	jb     0x140018110
   1400180cf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400180d3:	outs   dx,BYTE PTR ds:[rsi]
   1400180d4:	rex push rcx
   1400180d6:	(bad)
   1400180dc:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400180e0:	gs ins DWORD PTR es:[rdi],dx
   1400180e2:	push   rsi
   1400180e3:	imul   esp,DWORD PTR [rbp+0x77],0x3f564040
   1400180ea:	and    al,0x51
   1400180ec:	rex.RX ins BYTE PTR es:[rdi],dx
   1400180ee:	(bad)  
   1400180ef:	addr32 jae 0x140018132
   1400180f2:	push   rdi
   1400180f3:	xor    al,0x4b
   1400180f5:	gs jns 0x14001815a
   1400180f8:	outs   dx,DWORD PTR ds:[rsi]
   1400180f9:	(bad)  
   1400180fa:	jb     0x140018160
   1400180fc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400180fe:	imul   esp,DWORD PTR fs:[rsi+0x69],0x51407265
   140018106:	je     0x140018148
   140018108:	rex
   140018109:	rex
   14001810a:	rex
   14001810b:	rex pop rdx
   14001810d:	add    ch,cl
   14001810f:	or     al,0x3f
   140018111:	push   0x7a69726f
   140018116:	outs   dx,DWORD PTR ds:[rsi]
   140018117:	outs   dx,BYTE PTR ds:[rsi]
   140018118:	je     0x14001817b
   14001811a:	ins    BYTE PTR es:[rdi],dx
   14001811b:	rex.WRXB
   14001811c:	data16 data16 jae 0x140018185
   140018120:	je     0x140018162
   140018122:	push   rcx
   140018123:	push   rsp
   140018124:	(bad)  
   140018125:	(bad)  
   140018126:	ins    BYTE PTR es:[rdi],dx
   140018127:	gs push rsi
   140018129:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018130:	rex.X
   140018131:	rex.B
   140018132:	rex.W pop rax
   140018134:	pop    rdx
   140018135:	add    bh,cl
   140018137:	and    BYTE PTR [rdi],bh
   140018139:	jbe    0x1400181a0
   14001813b:	jb     0x1400181b1
   14001813d:	imul   esp,DWORD PTR [rbx+0x61],0x66664f6c
   140018144:	jae    0x1400181ab
   140018146:	je     0x140018188
   140018148:	push   rcx
   140018149:	push   rsp
   14001814a:	(bad)  
   14001814b:	(bad)  
   14001814c:	ins    BYTE PTR es:[rdi],dx
   14001814d:	gs push rsi
   14001814f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018156:	rex.X
   140018157:	rex.B
   140018158:	rex.W pop rax
   14001815a:	pop    rdx
   14001815b:	add    BYTE PTR [rax+0xe],bl
   14001815e:	(bad)  
   14001815f:	imul   esi,DWORD PTR [rbx+0x49],0x7865646e
   140018166:	imul   rsp,QWORD PTR [rsp+riz*2+0x65],0x5451406e
   14001816f:	(bad)  
   140018170:	(bad)  
   140018171:	ins    BYTE PTR es:[rdi],dx
   140018172:	gs push rsi
   140018174:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001817b:	rex.X
   14001817c:	pop    r15
   14001817e:	rex.WRX
   14001817f:	rex.B
   140018180:	rex.RB
   140018181:	rex.X push rsi
   140018183:	push   rcx
   140018184:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018186:	fs gs ins BYTE PTR es:[rdi],dx
   140018189:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001818b:	fs gs js 0x1400181cf
   14001818f:	rex
   140018190:	rex pop rdx
   140018192:	add    BYTE PTR [rax],al
   140018194:	stos   DWORD PTR es:[rdi],eax
   140018195:	sbb    bh,BYTE PTR [rdi]
   140018197:	jae    0x1400181fe
   140018199:	je     0x1400181ee
   14001819b:	gs ins BYTE PTR es:[rdi],dx
   14001819d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400181a2:	outs   dx,BYTE PTR ds:[rsi]
   1400181a3:	rex push rcx
   1400181a5:	push   rsp
   1400181a6:	(bad)  
   1400181a7:	(bad)  
   1400181a8:	ins    BYTE PTR es:[rdi],dx
   1400181a9:	gs push rsi
   1400181ab:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400181b2:	rex.B
   1400181b3:	pop    r8
   1400181b5:	rex.B
   1400181b6:	rex.RB
   1400181b7:	rex.X push rsi
   1400181b9:	push   rcx
   1400181ba:	push   rdx
   1400181bb:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   1400181c0:	push   rsi
   1400181c1:	(bad)  
   1400181c2:	and    al,0x51
   1400181c4:	rex.RX ins BYTE PTR es:[rdi],dx
   1400181c6:	(bad)  
   1400181c7:	addr32 jae 0x14001820a
   1400181ca:	push   rdi
   1400181cb:	xor    al,0x53
   1400181cd:	gs ins BYTE PTR es:[rdi],dx
   1400181cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400181d4:	outs   dx,BYTE PTR ds:[rsi]
   1400181d5:	rex.RX ins BYTE PTR es:[rdi],dx
   1400181d7:	(bad)  
   1400181d8:	addr32 rex push rcx
   1400181db:	rex.WB je 0x140018243
   1400181de:	ins    DWORD PTR es:[rdi],dx
   1400181df:	push   rbx
   1400181e0:	gs ins BYTE PTR es:[rdi],dx
   1400181e2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400181e7:	outs   dx,BYTE PTR ds:[rsi]
   1400181e8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400181ea:	fs gs ins BYTE PTR es:[rdi],dx
   1400181ed:	rex
   1400181ee:	rex
   1400181ef:	rex
   1400181f0:	rex
   1400181f1:	rex pop rdx
   1400181f3:	add    BYTE PTR [rsi],dl
   1400181f5:	and    DWORD PTR [rdi],edi
   1400181f7:	jbe    0x140018262
   1400181f9:	jae    0x140018270
   1400181fb:	(bad)  
   1400181fc:	ins    BYTE PTR es:[rdi],dx
   1400181fd:	push   rdx
   1400181fe:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x53726f46
   140018207:	gs ins BYTE PTR es:[rdi],dx
   140018209:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001820e:	outs   dx,BYTE PTR ds:[rsi]
   14001820f:	rex push rcx
   140018211:	push   rsp
   140018212:	(bad)  
   140018213:	(bad)  
   140018214:	ins    BYTE PTR es:[rdi],dx
   140018215:	gs push rsi
   140018217:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001821e:	rex.X
   14001821f:	rex.B (bad) 
   140018221:	push   r14
   140018223:	push   rcx
   140018224:	push   rdx
   140018225:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x45414040
   14001822e:	rex.X push rsi
   140018230:	push   rcx
   140018231:	rex.WB je 0x140018299
   140018234:	ins    DWORD PTR es:[rdi],dx
   140018235:	push   rbx
   140018236:	gs ins BYTE PTR es:[rdi],dx
   140018238:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001823d:	outs   dx,BYTE PTR ds:[rsi]
   14001823e:	rex
   14001823f:	rex
   140018240:	rex pop rdx
   140018242:	add    BYTE PTR [rax],al
   140018244:	xchg   ebx,eax
   140018245:	(bad)  
   140018246:	(bad)  
   140018247:	jae    0x1400182ae
   140018249:	ins    BYTE PTR es:[rdi],dx
   14001824a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001824f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018251:	fs gs js 0x1400182ba
   140018255:	jae    0x140018297
   140018257:	push   rcx
   140018258:	push   rsp
   140018259:	(bad)  
   14001825a:	(bad)  
   14001825b:	ins    BYTE PTR es:[rdi],dx
   14001825c:	gs push rsi
   14001825e:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018265:	rex.X
   140018266:	rex.B (bad) 
   140018268:	push   r14
   14001826a:	(bad)  
   14001826b:	and    al,0x51
   14001826d:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   140018275:	outs   dx,DWORD PTR ds:[rsi]
   140018276:	fs gs ins BYTE PTR es:[rdi],dx
   140018279:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001827b:	fs gs js 0x1400182bf
   14001827f:	rex
   140018280:	rex
   140018281:	rex pop rax
   140018283:	pop    rdx
   140018284:	add    BYTE PTR [rax],al
   140018286:	scas   al,BYTE PTR es:[rdi]
   140018287:	(bad)  
   140018288:	(bad)  
   140018289:	jae    0x1400182f0
   14001828b:	ins    BYTE PTR es:[rdi],dx
   14001828c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018291:	outs   dx,BYTE PTR ds:[rsi]
   140018292:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018294:	ins    DWORD PTR es:[rdi],dx
   140018295:	ins    DWORD PTR es:[rdi],dx
   140018296:	(bad)  
   140018297:	outs   dx,BYTE PTR ds:[rsi]
   140018298:	fs rex push rcx
   14001829b:	(bad)
   1400182a1:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400182a5:	gs ins DWORD PTR es:[rdi],dx
   1400182a7:	push   rsi
   1400182a8:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400182af:	rex.X
   1400182b0:	rex.B (bad) 
   1400182b2:	push   r14
   1400182b4:	(bad)  
   1400182b5:	and    al,0x51
   1400182b7:	rex.RX ins BYTE PTR es:[rdi],dx
   1400182b9:	(bad)  
   1400182ba:	addr32 jae 0x1400182fd
   1400182bd:	push   rdi
   1400182be:	xor    al,0x53
   1400182c0:	gs ins BYTE PTR es:[rdi],dx
   1400182c2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400182c7:	outs   dx,BYTE PTR ds:[rsi]
   1400182c8:	rex.RX ins BYTE PTR es:[rdi],dx
   1400182ca:	(bad)  
   1400182cb:	addr32 rex push rcx
   1400182ce:	rex.WB je 0x140018336
   1400182d1:	ins    DWORD PTR es:[rdi],dx
   1400182d2:	push   rbx
   1400182d3:	gs ins BYTE PTR es:[rdi],dx
   1400182d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400182da:	outs   dx,BYTE PTR ds:[rsi]
   1400182db:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400182dd:	fs gs ins BYTE PTR es:[rdi],dx
   1400182e0:	rex
   1400182e1:	rex
   1400182e2:	rex
   1400182e3:	rex
   1400182e4:	rex.B
   1400182e5:	rex.RB
   1400182e6:	rex.X push rsi
   1400182e8:	push   rcx
   1400182e9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400182eb:	fs gs ins BYTE PTR es:[rdi],dx
   1400182ee:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400182f0:	fs gs js 0x140018334
   1400182f4:	rex push rax
   1400182f6:	rex.RB
   1400182f7:	rex.X push rsi
   1400182f9:	push   rcx
   1400182fa:	rex.RB jbe 0x140018362
   1400182fd:	outs   dx,BYTE PTR ds:[rsi]
   1400182fe:	je     0x140018340
   140018300:	rex
   140018301:	rex pop rdx
   140018303:	add    BYTE PTR [rax],ah
   140018305:	sbb    eax,0x6174733f
   14001830a:	jb     0x140018380
   14001830c:	rex.R jb 0x140018370
   14001830f:	addr32 rex push rcx
   140018312:	(bad)
   140018318:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001831c:	gs ins DWORD PTR es:[rdi],dx
   14001831e:	push   rsi
   14001831f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018326:	rex.B
   140018327:	pop    r8
   140018329:	push   rsi
   14001832a:	(bad)  
   14001832b:	and    al,0x51
   14001832d:	rex.RX ins BYTE PTR es:[rdi],dx
   14001832f:	(bad)  
   140018330:	addr32 jae 0x140018373
   140018333:	push   rdi
   140018334:	xor    al,0x44
   140018336:	jb     0x1400183a7
   140018338:	jo     0x14001837b
   14001833a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001833e:	outs   dx,BYTE PTR ds:[rsi]
   14001833f:	rex push rcx
   140018341:	je     0x140018383
   140018343:	rex
   140018344:	rex
   140018345:	rex
   140018346:	rex pop rdx
   140018348:	add    BYTE PTR [rax],al
   14001834a:	call   0x1a977c26f
   14001834f:	gs ja  0x1400183a1
   140018352:	jo     0x1400183c8
   140018354:	imul   ebp,DWORD PTR [rdi+0x6e],0x54514073
   14001835b:	(bad)  
   14001835c:	(bad)  
   14001835d:	ins    BYTE PTR es:[rdi],dx
   14001835e:	gs push rsi
   140018360:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018367:	rex.X
   140018368:	rex.B (bad) 
   14001836a:	push   r14
   14001836c:	push   rcx
   14001836d:	push   rbx
   14001836e:	je     0x1400183e9
   140018370:	ins    BYTE PTR es:[rdi],dx
   140018371:	gs rex.WRXB jo 0x1400183e9
   140018375:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   14001837c:	rex.WB je 0x1400183e4
   14001837f:	ins    DWORD PTR es:[rdi],dx
   140018380:	rex
   140018381:	rex pop rax
   140018383:	pop    rdx
   140018384:	add    BYTE PTR [rax],al
   140018386:	leave  
   140018387:	adc    BYTE PTR [rdi],bh
   140018389:	ins    DWORD PTR es:[rdi],dx
   14001838a:	gs je  0x1400183ee
   14001838d:	rex.WRXB (bad) 
   14001838f:	push   0x65
   140018391:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018395:	push   rsp
   140018396:	jb     0x1400183fd
   140018398:	gs push rsi
   14001839a:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400183a1:	rex.X
   1400183a2:	push   r8
   1400183a4:	rex.RB
   1400183a5:	rex.X push rbp
   1400183a7:	push   rcx
   1400183a8:	rex.WRB
   1400183a9:	gs je  0x14001840d
   1400183ac:	rex.WRXB (bad) 
   1400183ae:	push   0x65
   1400183b0:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400183b4:	pop    rax
   1400183b5:	pop    rdx
   1400183b6:	add    BYTE PTR [rax],al
   1400183b8:	cmp    al,0x14
   1400183ba:	(bad)  
   1400183bb:	jno    0x140018431
   1400183bd:	pop    rdi
   1400183be:	ins    DWORD PTR es:[rdi],dx
   1400183bf:	gs je  0x140018423
   1400183c2:	movsxd esp,DWORD PTR [rcx+0x73]
   1400183c5:	je     0x140018407
   1400183c7:	push   rcx
   1400183c8:	push   rsp
   1400183c9:	jb     0x140018430
   1400183cb:	gs push rsi
   1400183cd:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400183d4:	rex.B
   1400183d5:	push   r8
   1400183d7:	rex.RB
   1400183d8:	pop    r8
   1400183da:	push   rax
   1400183db:	rex.RB
   1400183dc:	rex.X
   1400183dd:	rex.R
   1400183de:	rex pop rdx
   1400183e0:	add    BYTE PTR [rax],al
   1400183e2:	mov    dl,0x13
   1400183e4:	(bad)  
   1400183e5:	jno    0x14001845b
   1400183e7:	pop    rdi
   1400183e8:	ins    DWORD PTR es:[rdi],dx
   1400183e9:	gs je  0x14001844d
   1400183ec:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400183ef:	ins    BYTE PTR es:[rdi],dx
   1400183f0:	rex push rcx
   1400183f2:	push   rsp
   1400183f3:	jb     0x14001845a
   1400183f5:	gs push rsi
   1400183f7:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400183fe:	rex.B
   1400183ff:	rex.B
   140018400:	rex.W push rdi
   140018402:	xor    al,0x43
   140018404:	(bad)  
   140018405:	ins    BYTE PTR es:[rdi],dx
   140018406:	ins    BYTE PTR es:[rdi],dx
   140018407:	rex push rcx
   140018409:	rex.WRB
   14001840a:	gs je  0x14001846e
   14001840d:	rex.WRXB (bad) 
   14001840f:	push   0x65
   140018411:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018415:	rex.W push rax
   140018417:	rex.RB
   140018418:	push   r8
   14001841a:	rex.RB
   14001841b:	pop    r8
   14001841d:	rex pop rdx
   14001841f:	add    BYTE PTR [rsi+rbx*1+0x6d69743f],ah
   140018426:	gs jb  0x14001846e
   140018429:	jbe    0x140018490
   14001842b:	outs   dx,BYTE PTR ds:[rsi]
   14001842c:	je     0x14001846e
   14001842e:	push   rcx
   14001842f:	push   rsp
   140018430:	jb     0x140018497
   140018432:	gs push rsi
   140018434:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001843b:	rex.B
   14001843c:	pop    r8
   14001843e:	push   rax
   14001843f:	rex.RB
   140018440:	push   r14
   140018442:	push   rcx
   140018443:	push   rsp
   140018444:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001844b:	outs   dx,BYTE PTR ds:[rsi]
   14001844c:	je     0x14001848e
   14001844e:	rex
   14001844f:	rex pop rdx
   140018451:	add    BYTE PTR [rbp+0x6f6d3f11],al
   140018457:	jne    0x1400184cc
   140018459:	gs push rax
   14001845b:	jb     0x1400184c2
   14001845d:	jae    0x1400184d2
   14001845f:	rex.RB jbe 0x1400184c7
   140018462:	outs   dx,BYTE PTR ds:[rsi]
   140018463:	je     0x1400184a5
   140018465:	push   rcx
   140018466:	push   rsp
   140018467:	jb     0x1400184ce
   140018469:	gs push rsi
   14001846b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018472:	rex.B
   140018473:	pop    r8
   140018475:	push   rax
   140018476:	rex.RB
   140018477:	push   r14
   140018479:	push   rcx
   14001847a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001847c:	jne    0x1400184f1
   14001847e:	gs rex.RB jbe 0x1400184e7
   140018482:	outs   dx,BYTE PTR ds:[rsi]
   140018483:	je     0x1400184c5
   140018485:	rex
   140018486:	rex pop rdx
   140018488:	add    BYTE PTR [rax],al
   14001848a:	movabs ds:0x526573756f6d3f11,eax
   140018493:	gs ins BYTE PTR es:[rdi],dx
   140018495:	gs (bad) 
   140018497:	jae    0x1400184fe
   140018499:	rex.RB jbe 0x140018501
   14001849c:	outs   dx,BYTE PTR ds:[rsi]
   14001849d:	je     0x1400184df
   14001849f:	push   rcx
   1400184a0:	push   rsp
   1400184a1:	jb     0x140018508
   1400184a3:	gs push rsi
   1400184a5:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400184ac:	rex.B
   1400184ad:	pop    r8
   1400184af:	push   rax
   1400184b0:	rex.RB
   1400184b1:	push   r14
   1400184b3:	push   rcx
   1400184b4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400184b6:	jne    0x14001852b
   1400184b8:	gs rex.RB jbe 0x140018521
   1400184bc:	outs   dx,BYTE PTR ds:[rsi]
   1400184bd:	je     0x1400184ff
   1400184bf:	rex
   1400184c0:	rex pop rdx
   1400184c2:	add    BYTE PTR [rax],al
   1400184c4:	rex.XB adc DWORD PTR [r15],edi
   1400184c7:	ins    DWORD PTR es:[rdi],dx
   1400184c8:	outs   dx,DWORD PTR ds:[rsi]
   1400184c9:	jne    0x14001853e
   1400184cb:	rex.R outs dx,DWORD PTR gs:[rsi]
   1400184ce:	jne    0x140018532
   1400184d0:	ins    BYTE PTR es:[rdi],dx
   1400184d1:	gs rex.XB ins BYTE PTR es:[rdi],dx
   1400184d4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   1400184db:	je     0x14001851d
   1400184dd:	push   rcx
   1400184de:	push   rsp
   1400184df:	jb     0x140018546
   1400184e1:	gs push rsi
   1400184e3:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400184ea:	rex.B
   1400184eb:	pop    r8
   1400184ed:	push   rax
   1400184ee:	rex.RB
   1400184ef:	push   r14
   1400184f1:	push   rcx
   1400184f2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400184f4:	jne    0x140018569
   1400184f6:	gs rex.RB jbe 0x14001855f
   1400184fa:	outs   dx,BYTE PTR ds:[rsi]
   1400184fb:	je     0x14001853d
   1400184fd:	rex
   1400184fe:	rex pop rdx
   140018500:	add    BYTE PTR [rax],al
   140018502:	movsxd edx,DWORD PTR [rcx]
   140018504:	(bad)  
   140018505:	ins    DWORD PTR es:[rdi],dx
   140018506:	outs   dx,DWORD PTR ds:[rsi]
   140018507:	jne    0x14001857c
   140018509:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14001850c:	jbe    0x140018573
   14001850e:	rex.RB jbe 0x140018576
   140018511:	outs   dx,BYTE PTR ds:[rsi]
   140018512:	je     0x140018554
   140018514:	push   rcx
   140018515:	push   rsp
   140018516:	jb     0x14001857d
   140018518:	gs push rsi
   14001851a:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018521:	rex.B
   140018522:	pop    r8
   140018524:	push   rax
   140018525:	rex.RB
   140018526:	push   r14
   140018528:	push   rcx
   140018529:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001852b:	jne    0x1400185a0
   14001852d:	gs rex.RB jbe 0x140018596
   140018531:	outs   dx,BYTE PTR ds:[rsi]
   140018532:	je     0x140018574
   140018534:	rex
   140018535:	rex pop rdx
   140018537:	add    BYTE PTR [rax+0xf],bl
   14001853a:	(bad)  
   14001853b:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001853f:	jb     0x1400185a6
   140018541:	jae    0x1400185b6
   140018543:	rex.RB jbe 0x1400185ab
   140018546:	outs   dx,BYTE PTR ds:[rsi]
   140018547:	je     0x140018589
   140018549:	push   rcx
   14001854a:	push   rsp
   14001854b:	jb     0x1400185b2
   14001854d:	gs push rsi
   14001854f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018556:	rex.B
   140018557:	pop    r8
   140018559:	push   rax
   14001855a:	rex.RB
   14001855b:	push   r14
   14001855d:	push   rcx
   14001855e:	rex.WXB
   14001855f:	gs jns 0x1400185a7
   140018562:	jbe    0x1400185c9
   140018564:	outs   dx,BYTE PTR ds:[rsi]
   140018565:	je     0x1400185a7
   140018567:	rex
   140018568:	rex pop rdx
   14001856a:	add    BYTE PTR [rax],al
   14001856c:	ja     0x140018580
   14001856e:	(bad)  
   14001856f:	jo     0x1400185d2
   140018571:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140018578:	je     0x1400185ba
   14001857a:	push   rcx
   14001857b:	push   rsp
   14001857c:	jb     0x1400185e3
   14001857e:	gs push rsi
   140018580:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018587:	rex.B
   140018588:	pop    r8
   14001858a:	push   rax
   14001858b:	rex.RB
   14001858c:	push   r14
   14001858e:	push   rcx
   14001858f:	push   rax
   140018590:	(bad)  
   140018591:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140018598:	je     0x1400185da
   14001859a:	rex
   14001859b:	rex pop rdx
   14001859d:	add    BYTE PTR [rcx],dh
   14001859f:	or     bh,BYTE PTR [rdi]
   1400185a1:	fs jb  0x140018605
   1400185a4:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400185a7:	jbe    0x14001860e
   1400185a9:	rex.RB jbe 0x140018611
   1400185ac:	outs   dx,BYTE PTR ds:[rsi]
   1400185ad:	je     0x1400185ef
   1400185af:	push   rcx
   1400185b0:	push   rsp
   1400185b1:	jb     0x140018618
   1400185b3:	gs push rsi
   1400185b5:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400185bc:	rex.B
   1400185bd:	pop    r8
   1400185bf:	push   rax
   1400185c0:	rex.RB
   1400185c1:	push   r14
   1400185c3:	push   rcx
   1400185c4:	rex.R jb 0x140018628
   1400185c7:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400185ca:	jbe    0x140018631
   1400185cc:	rex.RB jbe 0x140018634
   1400185cf:	outs   dx,BYTE PTR ds:[rsi]
   1400185d0:	je     0x140018612
   1400185d2:	rex
   1400185d3:	rex pop rdx
   1400185d5:	add    cl,dh
   1400185d7:	and    BYTE PTR [rdi],bh
   1400185d9:	jbe    0x140018644
   1400185db:	gs ja  0x14001864e
   1400185de:	outs   dx,DWORD PTR ds:[rsi]
   1400185df:	jb     0x140018655
   1400185e1:	rex.RB jbe 0x140018649
   1400185e4:	outs   dx,BYTE PTR ds:[rsi]
   1400185e5:	je     0x140018627
   1400185e7:	push   rcx
   1400185e8:	push   rsp
   1400185e9:	jb     0x140018650
   1400185eb:	gs push rsi
   1400185ed:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400185f4:	rex.B
   1400185f5:	pop    r15
   1400185f7:	rex.WRX push rax
   1400185f9:	rex.RB
   1400185fa:	push   r14
   1400185fc:	push   rcx
   1400185fd:	rex.RB jbe 0x140018665
   140018600:	outs   dx,BYTE PTR ds:[rsi]
   140018601:	je     0x140018643
   140018603:	rex
   140018604:	rex pop rdx
   140018606:	add    BYTE PTR [rax],al
   140018608:	rex.RXB (bad) 
   14001860a:	(bad)  
   14001860b:	jae    0x140018670
   14001860d:	jb     0x14001867e
   14001860f:	ins    BYTE PTR es:[rdi],dx
   140018610:	ins    BYTE PTR es:[rdi],dx
   140018611:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018613:	outs   dx,BYTE PTR ds:[rsi]
   140018614:	je     0x14001867b
   140018616:	outs   dx,BYTE PTR ds:[rsi]
   140018617:	je     0x14001868c
   140018619:	rex.X jns 0x14001865c
   14001861c:	push   rcx
   14001861d:	push   rsp
   14001861e:	jb     0x140018685
   140018620:	gs push rsi
   140018622:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018629:	rex.B
   14001862a:	pop    r8
   14001862c:	rex.W
   14001862d:	rex.W
   14001862e:	rex pop rdx
   140018630:	add    BYTE PTR [rax],al
   140018632:	clc    
   140018633:	and    BYTE PTR [rdi],bh
   140018635:	jbe    0x1400186a0
   140018637:	gs ja  0x1400186aa
   14001863a:	outs   dx,DWORD PTR ds:[rsi]
   14001863b:	jb     0x1400186b1
   14001863d:	push   rbx
   14001863e:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140018645:	rex push rcx
   140018647:	push   rsp
   140018648:	jb     0x1400186af
   14001864a:	gs push rsi
   14001864c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018653:	rex.X
   140018654:	rex.B (bad) 
   140018656:	push   r14
   140018658:	push   rcx
   140018659:	push   rbx
   14001865a:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140018661:	add    BYTE PTR [rcx+0x65733f19],bl
   140018667:	je     0x1400186b6
   140018669:	outs   dx,DWORD PTR ds:[rsi]
   14001866a:	fs gs ins BYTE PTR es:[rdi],dx
   14001866d:	rex push rcx
   14001866f:	push   rsp
   140018670:	jb     0x1400186d7
   140018672:	gs push rsi
   140018674:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   14001867b:	rex.B
   14001867c:	pop    r8
   14001867e:	push   rax
   14001867f:	rex.RB
   140018680:	push   r14
   140018682:	push   rcx
   140018683:	(bad)
   140018689:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001868d:	gs ins DWORD PTR es:[rdi],dx
   14001868f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018691:	fs gs ins BYTE PTR es:[rdi],dx
   140018694:	rex
   140018695:	rex
   140018696:	rex pop rdx
   140018698:	add    BYTE PTR [rax],al
   14001869a:	mov    eax,0x65733f1a
   14001869f:	je     0x1400186f4
   1400186a1:	gs ins BYTE PTR es:[rdi],dx
   1400186a3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400186a8:	outs   dx,BYTE PTR ds:[rsi]
   1400186a9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400186ab:	fs gs ins BYTE PTR es:[rdi],dx
   1400186ae:	rex push rcx
   1400186b0:	push   rsp
   1400186b1:	jb     0x140018718
   1400186b3:	gs push rsi
   1400186b5:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400186bc:	rex.B
   1400186bd:	pop    r8
   1400186bf:	push   rax
   1400186c0:	rex.RB
   1400186c1:	push   r14
   1400186c3:	push   rcx
   1400186c4:	rex.WB je 0x14001872c
   1400186c7:	ins    DWORD PTR es:[rdi],dx
   1400186c8:	push   rbx
   1400186c9:	gs ins BYTE PTR es:[rdi],dx
   1400186cb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400186d0:	outs   dx,BYTE PTR ds:[rsi]
   1400186d1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400186d3:	fs gs ins BYTE PTR es:[rdi],dx
   1400186d6:	rex
   1400186d7:	rex
   1400186d8:	rex pop rdx
   1400186da:	add    BYTE PTR [rax],al
   1400186dc:	outs   dx,DWORD PTR ds:[rsi]
   1400186dd:	(bad)  
   1400186df:	imul   esp,DWORD PTR [rbp+0x79],0x62
   1400186e3:	outs   dx,DWORD PTR ds:[rsi]
   1400186e4:	(bad)  
   1400186e5:	jb     0x14001874b
   1400186e7:	push   rbx
   1400186e8:	gs (bad) 
   1400186ea:	jb     0x14001874f
   1400186ec:	push   0x72545140
   1400186f1:	gs gs push rsi
   1400186f4:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400186fb:	rex.B
   1400186fc:	pop    r8
   1400186fe:	rex.B
   1400186ff:	rex.RB
   140018700:	rex.X push rsi
   140018702:	push   rcx
   140018703:	push   rbx
   140018704:	je     0x140018778
   140018706:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001870d:	add    BYTE PTR [rdx],dl
   14001870f:	and    DWORD PTR [rdi],edi
   140018711:	jbe    0x14001877c
   140018713:	jae    0x14001878a
   140018715:	(bad)  
   140018716:	ins    BYTE PTR es:[rdi],dx
   140018717:	push   rdx
   140018718:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001871d:	push   rsp
   14001871e:	jb     0x140018785
   140018720:	gs push rsi
   140018722:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140018729:	rex.X
   14001872a:	rex.B (bad) 
   14001872c:	push   r14
   14001872e:	push   rcx
   14001872f:	push   rdx
   140018730:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140018735:	rex.B
   140018736:	rex.RB
   140018737:	rex.X push rsi
   140018739:	push   rcx
   14001873a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001873c:	fs gs ins BYTE PTR es:[rdi],dx
   14001873f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018741:	fs gs js 0x140018785
   140018745:	rex
   140018746:	rex pop rdx
   140018748:	add    BYTE PTR [rax],al
   14001874a:	push   rcx
   14001874b:	(bad)  
   14001874c:	(bad)  
   14001874d:	jae    0x1400187b2
   14001874f:	jb     0x1400187c0
   140018751:	ins    BYTE PTR es:[rdi],dx
   140018752:	ins    BYTE PTR es:[rdi],dx
   140018753:	push   rsp
   140018754:	outs   dx,DWORD PTR ds:[rsi]
   140018755:	rex push rcx
   140018757:	push   rsp
   140018758:	jb     0x1400187bf
   14001875a:	gs push rsi
   14001875c:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140018763:	rex.B
   140018764:	pop    r8
   140018766:	rex.B
   140018767:	rex.RB
   140018768:	rex.X push rsi
   14001876a:	push   rcx
   14001876b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001876d:	fs gs ins BYTE PTR es:[rdi],dx
   140018770:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018772:	fs gs js 0x1400187b6
   140018776:	rex push rdi
   140018778:	xor    al,0x53
   14001877a:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001877d:	ins    BYTE PTR es:[rdi],dx
   14001877e:	ins    BYTE PTR es:[rdi],dx
   14001877f:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140018787:	jae    0x1400187fd
   140018789:	jb     0x1400187ec
   14001878b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001878f:	gs ins DWORD PTR es:[rdi],dx
   140018791:	push   rsi
   140018792:	imul   esp,DWORD PTR [rbp+0x77],0x5a404040
   140018799:	add    BYTE PTR [rax],ah
   14001879b:	or     eax,0x646e693f
   1400187a0:	gs js  0x1400187e4
   1400187a3:	je     0x1400187e5
   1400187a5:	push   rcx
   1400187a6:	push   rsp
   1400187a7:	jb     0x14001880e
   1400187a9:	gs push rsi
   1400187ab:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400187b2:	rex.X
   1400187b3:	rex.B (bad) 
   1400187b5:	push   r14
   1400187b7:	push   rcx
   1400187b8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400187ba:	fs gs ins BYTE PTR es:[rdi],dx
   1400187bd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400187bf:	fs gs js 0x140018803
   1400187c3:	rex
   1400187c4:	rex.B
   1400187c5:	rex.RB
   1400187c6:	rex.X push rsi
   1400187c8:	push   rcx
   1400187c9:	push   rax
   1400187ca:	outs   dx,DWORD PTR ds:[rsi]
   1400187cb:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400187d2:	add    BYTE PTR [rax],al
   1400187d4:	int3   
   1400187d5:	sbb    al,0x3f
   1400187d7:	jae    0x140018842
   1400187d9:	jp     0x140018840
   1400187db:	imul   rbp,QWORD PTR [rsi+0x74],0x52726f46
   1400187e3:	outs   dx,DWORD PTR ds:[rsi]
   1400187e4:	ja     0x140018826
   1400187e6:	push   rcx
   1400187e7:	(bad)
   1400187ed:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400187f1:	gs ins DWORD PTR es:[rdi],dx
   1400187f3:	push   rsi
   1400187f4:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400187fb:	rex.X
   1400187fc:	rex.B
   1400187fd:	rex.W
   1400187fe:	rex.W
   1400187ff:	rex pop rdx
   140018801:	add    dl,cl
   140018803:	sbb    al,0x3f
   140018805:	jae    0x140018870
   140018807:	jp     0x14001886e
   140018809:	imul   rbp,QWORD PTR [rsi+0x74],0x43726f46
   140018811:	outs   dx,DWORD PTR ds:[rsi]
   140018812:	ins    BYTE PTR es:[rdi],dx
   140018813:	jne    0x140018882
   140018815:	outs   dx,BYTE PTR ds:[rsi]
   140018816:	rex push rcx
   140018818:	push   rsp
   140018819:	jb     0x140018880
   14001881b:	gs push rsi
   14001881d:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018824:	rex.X
   140018825:	rex.B
   140018826:	rex.W
   140018827:	rex.W
   140018828:	rex pop rdx
   14001882a:	add    BYTE PTR [rax],al
   14001882c:	movsxd edx,DWORD PTR [rip+0x7365723f]        # 0x1b366fa71
   140018832:	gs je  0x140018875
   140018835:	push   rcx
   140018836:	push   rsp
   140018837:	jb     0x14001889e
   140018839:	gs push rsi
   14001883b:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140018842:	rex.B
   140018843:	pop    r8
   140018845:	pop    rax
   140018846:	pop    rdx
   140018847:	add    BYTE PTR [rcx+0x1a],ch
   14001884a:	(bad)  
   14001884b:	jae    0x1400188b2
   14001884d:	je     0x1400188a1
   14001884f:	outs   dx,DWORD PTR ds:[rsi]
   140018850:	outs   dx,DWORD PTR ds:[rsi]
   140018851:	je     0x14001889c
   140018853:	outs   dx,BYTE PTR ds:[rsi]
   140018854:	fs gs js 0x140018898
   140018858:	push   rcx
   140018859:	push   rsp
   14001885a:	jb     0x1400188c1
   14001885c:	gs push rsi
   14001885e:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140018865:	rex.B
   140018866:	pop    r8
   140018868:	rex.B
   140018869:	rex.RB
   14001886a:	rex.X push rsi
   14001886c:	push   rcx
   14001886d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001886f:	fs gs ins BYTE PTR es:[rdi],dx
   140018872:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018874:	fs gs js 0x1400188b8
   140018878:	rex
   140018879:	rex pop rdx
   14001887b:	add    bl,ah
   14001887d:	or     DWORD PTR [rdi],edi
   14001887f:	outs   dx,DWORD PTR fs:[rsi]
   140018881:	rex.WB je 0x1400188e9
   140018884:	ins    DWORD PTR es:[rdi],dx
   140018885:	jae    0x1400188d3
   140018887:	(bad)  
   140018888:	jns    0x1400188f9
   14001888a:	jne    0x140018900
   14001888c:	rex push rcx
   14001888e:	push   rsp
   14001888f:	jb     0x1400188f6
   140018891:	gs push rsi
   140018893:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   14001889a:	rex.B
   14001889b:	pop    r8
   14001889d:	pop    rax
   14001889e:	pop    rdx
   14001889f:	add    BYTE PTR [rdi+0x16],bh
   1400188a2:	(bad)  
   1400188a3:	jae    0x14001890a
   1400188a5:	ins    BYTE PTR es:[rdi],dx
   1400188a6:	movsxd esi,DWORD PTR gs:[rcx+rax*2+0x6c]
   1400188ab:	ins    BYTE PTR es:[rdi],dx
   1400188ac:	rex push rcx
   1400188ae:	push   rsp
   1400188af:	jb     0x140018916
   1400188b1:	gs push rsi
   1400188b3:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400188ba:	rex.B
   1400188bb:	pop    r8
   1400188bd:	pop    rax
   1400188be:	pop    rdx
   1400188bf:	add    BYTE PTR [rcx+0x61643f09],bl
   1400188c5:	je     0x140018928
   1400188c7:	rex.XB push 0x65676e61
   1400188cd:	fs rex push rcx
   1400188d0:	push   rsp
   1400188d1:	jb     0x140018938
   1400188d3:	gs push rsi
   1400188d5:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400188dc:	rex.B
   1400188dd:	pop    r8
   1400188df:	rex.B
   1400188e0:	rex.RB
   1400188e1:	rex.X push rsi
   1400188e3:	push   rcx
   1400188e4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400188e6:	fs gs ins BYTE PTR es:[rdi],dx
   1400188e9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400188eb:	fs gs js 0x14001892f
   1400188ef:	xor    BYTE PTR [rcx+0x45],al
   1400188f3:	rex.X push rsi
   1400188f5:	(bad)  
   1400188f6:	and    al,0x51
   1400188f8:	push   rsi
   1400188f9:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400188fe:	rex
   1400188ff:	rex.W
   140018900:	rex
   140018901:	rex
   140018902:	rex pop rdx
   140018904:	add    BYTE PTR [rax],al
   140018906:	add    BYTE PTR [rsi],dl
   140018908:	(bad)  
   140018909:	jb     0x14001897a
   14001890b:	ja     0x140018980
   14001890d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001890f:	jae    0x140018976
   140018911:	jb     0x140018987
   140018913:	gs fs rex push rcx
   140018917:	push   rsp
   140018918:	jb     0x14001897f
   14001891a:	gs push rsi
   14001891c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018923:	rex.B
   140018924:	pop    r8
   140018926:	rex.B
   140018927:	rex.RB
   140018928:	rex.X push rsi
   14001892a:	push   rcx
   14001892b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001892d:	fs gs ins BYTE PTR es:[rdi],dx
   140018930:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018932:	fs gs js 0x140018976
   140018936:	rex
   140018937:	rex.W
   140018938:	rex.W
   140018939:	rex pop rdx
   14001893b:	add    bl,bh
   14001893d:	adc    eax,0x776f723f
   140018942:	jae    0x140018985
   140018944:	(bad)  
   140018945:	outs   dx,DWORD PTR ds:[rsi]
   140018946:	jne    0x1400189bc
   140018948:	push   rsp
   140018949:	outs   dx,DWORD PTR ds:[rsi]
   14001894a:	rex.X
   14001894b:	gs push rdx
   14001894d:	gs ins DWORD PTR es:[rdi],dx
   14001894f:	outs   dx,DWORD PTR ds:[rsi]
   140018950:	jbe    0x1400189b7
   140018952:	fs rex push rcx
   140018955:	push   rsp
   140018956:	jb     0x1400189bd
   140018958:	gs push rsi
   14001895a:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018961:	rex.B
   140018962:	pop    r8
   140018964:	rex.B
   140018965:	rex.RB
   140018966:	rex.X push rsi
   140018968:	push   rcx
   140018969:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001896b:	fs gs ins BYTE PTR es:[rdi],dx
   14001896e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018970:	fs gs js 0x1400189b4
   140018974:	rex
   140018975:	rex.W
   140018976:	rex.W
   140018977:	rex pop rdx
   140018979:	add    BYTE PTR [rbx+0x65733f16],ch
   14001897f:	ins    BYTE PTR es:[rdi],dx
   140018980:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018985:	outs   dx,BYTE PTR ds:[rsi]
   140018986:	rex.XB push 0x65676e61
   14001898c:	fs rex push rcx
   14001898f:	push   rsp
   140018990:	jb     0x1400189f7
   140018992:	gs push rsi
   140018994:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14001899b:	rex.B
   14001899c:	pop    r8
   14001899e:	rex.B
   14001899f:	rex.RB
   1400189a0:	rex.X push rsi
   1400189a2:	push   rcx
   1400189a3:	rex.WB je 0x140018a0b
   1400189a6:	ins    DWORD PTR es:[rdi],dx
   1400189a7:	push   rbx
   1400189a8:	gs ins BYTE PTR es:[rdi],dx
   1400189aa:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400189af:	outs   dx,BYTE PTR ds:[rsi]
   1400189b0:	rex
   1400189b1:	xor    BYTE PTR [rax+0x5a],al
   1400189b5:	add    bl,dh
   1400189b7:	(bad)  
   1400189b8:	(bad)  
   1400189b9:	movsxd esi,DWORD PTR [rbp+0x72]
   1400189bc:	jb     0x140018a23
   1400189be:	outs   dx,BYTE PTR ds:[rsi]
   1400189bf:	je     0x140018a04
   1400189c1:	push   0x65676e61
   1400189c6:	fs rex push rcx
   1400189c9:	push   rsp
   1400189ca:	jb     0x140018a31
   1400189cc:	gs push rsi
   1400189ce:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400189d5:	rex.B
   1400189d6:	pop    r8
   1400189d8:	rex.B
   1400189d9:	rex.RB
   1400189da:	rex.X push rsi
   1400189dc:	push   rcx
   1400189dd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400189df:	fs gs ins BYTE PTR es:[rdi],dx
   1400189e2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400189e4:	fs gs js 0x140018a28
   1400189e8:	xor    BYTE PTR [rax+0x5a],al
   1400189ec:	add    BYTE PTR [rax],al
   1400189ee:	jle    0x140018a10
   1400189f0:	(bad)  
   1400189f1:	jne    0x140018a63
   1400189f3:	fs (bad) 
   1400189f5:	je     0x140018a5c
   1400189f7:	rex.RXB
   1400189f8:	outs   dx,DWORD PTR gs:[rsi]
   1400189fa:	ins    DWORD PTR es:[rdi],dx
   1400189fb:	gs je  0x140018a70
   1400189fe:	imul   esp,DWORD PTR [rbp+0x73],0x72545140
   140018a05:	gs gs push rsi
   140018a08:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018a0f:	rex.B
   140018a10:	pop    r8
   140018a12:	pop    rax
   140018a13:	pop    rdx
   140018a14:	add    BYTE PTR [rax],al
   140018a16:	xlat   BYTE PTR ds:[rbx]
   140018a17:	and    BYTE PTR [rdi],bh
   140018a19:	jbe    0x140018a80
   140018a1b:	jb     0x140018a91
   140018a1d:	imul   esp,DWORD PTR [rbx+0x61],0x7263536c
   140018a24:	outs   dx,DWORD PTR ds:[rsi]
   140018a25:	ins    BYTE PTR es:[rdi],dx
   140018a26:	ins    BYTE PTR es:[rdi],dx
   140018a27:	(bad)  
   140018a29:	jb     0x140018a6c
   140018a2b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140018a2f:	outs   dx,BYTE PTR ds:[rsi]
   140018a30:	rex push rcx
   140018a32:	(bad)
   140018a38:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140018a3c:	gs ins DWORD PTR es:[rdi],dx
   140018a3e:	push   rsi
   140018a3f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018a46:	rex.B
   140018a47:	pop    r8
   140018a49:	rex.W
   140018a4a:	rex pop rdx
   140018a4c:	add    BYTE PTR [rax],al
   140018a4e:	xlat   BYTE PTR ds:[rbx]
   140018a4f:	or     al,0x3f
   140018a51:	push   0x7a69726f
   140018a56:	outs   dx,DWORD PTR ds:[rsi]
   140018a57:	outs   dx,BYTE PTR ds:[rsi]
   140018a58:	je     0x140018abb
   140018a5a:	ins    BYTE PTR es:[rdi],dx
   140018a5b:	push   rbx
   140018a5c:	movsxd esi,DWORD PTR [rdx+0x6f]
   140018a5f:	ins    BYTE PTR es:[rdi],dx
   140018a60:	ins    BYTE PTR es:[rdi],dx
   140018a61:	(bad)  
   140018a63:	jb     0x140018aa6
   140018a65:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140018a69:	outs   dx,BYTE PTR ds:[rsi]
   140018a6a:	rex push rcx
   140018a6c:	push   rsp
   140018a6d:	jb     0x140018ad4
   140018a6f:	gs push rsi
   140018a71:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018a78:	rex.B
   140018a79:	pop    r8
   140018a7b:	rex.W
   140018a7c:	rex pop rdx
   140018a7e:	add    BYTE PTR [rax],al
   140018a80:	mov    dl,0x11
   140018a82:	(bad)  
   140018a83:	ins    DWORD PTR es:[rdi],dx
   140018a84:	outs   dx,DWORD PTR ds:[rsi]
   140018a85:	jbe    0x140018aec
   140018a87:	rex.XB jne 0x140018afc
   140018a8a:	jae    0x140018afb
   140018a8c:	jb     0x140018ace
   140018a8e:	push   rcx
   140018a8f:	push   rsp
   140018a90:	jb     0x140018af7
   140018a92:	gs push rsi
   140018a94:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018a9b:	rex.B
   140018a9c:	rex.B (bad) 
   140018a9e:	push   r14
   140018aa0:	push   rcx
   140018aa1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018aa3:	fs gs ins BYTE PTR es:[rdi],dx
   140018aa6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018aa8:	fs gs js 0x140018aec
   140018aac:	rex push rdi
   140018aae:	xor    al,0x43
   140018ab0:	jne    0x140018b24
   140018ab2:	jae    0x140018b23
   140018ab4:	jb     0x140018af7
   140018ab6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140018aba:	outs   dx,BYTE PTR ds:[rsi]
   140018abb:	rex push rcx
   140018abd:	(bad)
   140018ac3:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140018ac7:	gs ins DWORD PTR es:[rdi],dx
   140018ac9:	push   rsi
   140018aca:	imul   esp,DWORD PTR [rbp+0x77],0x3f564040
   140018ad1:	and    al,0x51
   140018ad3:	rex.RX ins BYTE PTR es:[rdi],dx
   140018ad5:	(bad)  
   140018ad6:	addr32 jae 0x140018b19
   140018ad9:	push   rdi
   140018ada:	xor    al,0x4b
   140018adc:	gs jns 0x140018b41
   140018adf:	outs   dx,DWORD PTR ds:[rsi]
   140018ae0:	(bad)  
   140018ae1:	jb     0x140018b47
   140018ae3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018ae5:	imul   esp,DWORD PTR fs:[rsi+0x69],0x51407265
   140018aed:	je     0x140018b2f
   140018aef:	rex
   140018af0:	rex
   140018af1:	rex
   140018af2:	rex pop rdx
   140018af4:	add    BYTE PTR [rax],al
   140018af6:	(bad)  
   140018af7:	or     al,0x3f
   140018af9:	push   0x7a69726f
   140018afe:	outs   dx,DWORD PTR ds:[rsi]
   140018aff:	outs   dx,BYTE PTR ds:[rsi]
   140018b00:	je     0x140018b63
   140018b02:	ins    BYTE PTR es:[rdi],dx
   140018b03:	rex.WRXB
   140018b04:	data16 data16 jae 0x140018b6d
   140018b08:	je     0x140018b4a
   140018b0a:	push   rcx
   140018b0b:	push   rsp
   140018b0c:	jb     0x140018b73
   140018b0e:	gs push rsi
   140018b10:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018b17:	rex.X
   140018b18:	rex.B
   140018b19:	rex.W pop rax
   140018b1b:	pop    rdx
   140018b1c:	add    BYTE PTR [rax],al
   140018b1e:	shl    BYTE PTR [rax],1
   140018b20:	(bad)  
   140018b21:	jbe    0x140018b88
   140018b23:	jb     0x140018b99
   140018b25:	imul   esp,DWORD PTR [rbx+0x61],0x66664f6c
   140018b2c:	jae    0x140018b93
   140018b2e:	je     0x140018b70
   140018b30:	push   rcx
   140018b31:	push   rsp
   140018b32:	jb     0x140018b99
   140018b34:	gs push rsi
   140018b36:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018b3d:	rex.X
   140018b3e:	rex.B
   140018b3f:	rex.W pop rax
   140018b41:	pop    rdx
   140018b42:	add    BYTE PTR [rax],al
   140018b44:	pop    rcx
   140018b45:	(bad)  
   140018b46:	(bad)  
   140018b47:	imul   esi,DWORD PTR [rbx+0x49],0x7865646e
   140018b4e:	imul   rsp,QWORD PTR [rsp+riz*2+0x65],0x5451406e
   140018b57:	jb     0x140018bbe
   140018b59:	gs push rsi
   140018b5b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018b62:	rex.X
   140018b63:	pop    r15
   140018b65:	rex.WRX
   140018b66:	rex.B
   140018b67:	rex.RB
   140018b68:	rex.X push rsi
   140018b6a:	push   rcx
   140018b6b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018b6d:	fs gs ins BYTE PTR es:[rdi],dx
   140018b70:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018b72:	fs gs js 0x140018bb6
   140018b76:	rex
   140018b77:	rex pop rdx
   140018b79:	add    BYTE PTR [rdx+rbx*1+0x7465733f],ch
   140018b80:	push   rbx
   140018b81:	gs ins BYTE PTR es:[rdi],dx
   140018b83:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018b88:	outs   dx,BYTE PTR ds:[rsi]
   140018b89:	rex push rcx
   140018b8b:	push   rsp
   140018b8c:	jb     0x140018bf3
   140018b8e:	gs push rsi
   140018b90:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018b97:	rex.B
   140018b98:	pop    r8
   140018b9a:	rex.B
   140018b9b:	rex.RB
   140018b9c:	rex.X push rsi
   140018b9e:	push   rcx
   140018b9f:	push   rdx
   140018ba0:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140018ba5:	push   rsi
   140018ba6:	(bad)  
   140018ba7:	and    al,0x51
   140018ba9:	rex.RX ins BYTE PTR es:[rdi],dx
   140018bab:	(bad)  
   140018bac:	addr32 jae 0x140018bef
   140018baf:	push   rdi
   140018bb0:	xor    al,0x53
   140018bb2:	gs ins BYTE PTR es:[rdi],dx
   140018bb4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018bb9:	outs   dx,BYTE PTR ds:[rsi]
   140018bba:	rex.RX ins BYTE PTR es:[rdi],dx
   140018bbc:	(bad)  
   140018bbd:	addr32 rex push rcx
   140018bc0:	rex.WB je 0x140018c28
   140018bc3:	ins    DWORD PTR es:[rdi],dx
   140018bc4:	push   rbx
   140018bc5:	gs ins BYTE PTR es:[rdi],dx
   140018bc7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018bcc:	outs   dx,BYTE PTR ds:[rsi]
   140018bcd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018bcf:	fs gs ins BYTE PTR es:[rdi],dx
   140018bd2:	rex
   140018bd3:	rex
   140018bd4:	rex
   140018bd5:	rex
   140018bd6:	rex pop rdx
   140018bd8:	add    BYTE PTR [rax],al
   140018bda:	(bad)  
   140018bdb:	and    DWORD PTR [rdi],edi
   140018bdd:	jbe    0x140018c48
   140018bdf:	jae    0x140018c56
   140018be1:	(bad)  
   140018be2:	ins    BYTE PTR es:[rdi],dx
   140018be3:	push   rdx
   140018be4:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x53726f46
   140018bed:	gs ins BYTE PTR es:[rdi],dx
   140018bef:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018bf4:	outs   dx,BYTE PTR ds:[rsi]
   140018bf5:	rex push rcx
   140018bf7:	push   rsp
   140018bf8:	jb     0x140018c5f
   140018bfa:	gs push rsi
   140018bfc:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018c03:	rex.X
   140018c04:	rex.B (bad) 
   140018c06:	push   r14
   140018c08:	push   rcx
   140018c09:	push   rdx
   140018c0a:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x45414040
   140018c13:	rex.X push rsi
   140018c15:	push   rcx
   140018c16:	rex.WB je 0x140018c7e
   140018c19:	ins    DWORD PTR es:[rdi],dx
   140018c1a:	push   rbx
   140018c1b:	gs ins BYTE PTR es:[rdi],dx
   140018c1d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018c22:	outs   dx,BYTE PTR ds:[rsi]
   140018c23:	rex
   140018c24:	rex
   140018c25:	rex pop rdx
   140018c27:	add    BYTE PTR [rsi+rdx*1+0x6c65733f],dl
   140018c2e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140018c33:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018c35:	fs gs js 0x140018c9e
   140018c39:	jae    0x140018c7b
   140018c3b:	push   rcx
   140018c3c:	push   rsp
   140018c3d:	jb     0x140018ca4
   140018c3f:	gs push rsi
   140018c41:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018c48:	rex.X
   140018c49:	rex.B (bad) 
   140018c4b:	push   r14
   140018c4d:	(bad)  
   140018c4e:	and    al,0x51
   140018c50:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   140018c58:	outs   dx,DWORD PTR ds:[rsi]
   140018c59:	fs gs ins BYTE PTR es:[rdi],dx
   140018c5c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018c5e:	fs gs js 0x140018ca2
   140018c62:	rex
   140018c63:	rex
   140018c64:	rex pop rax
   140018c66:	pop    rdx
   140018c67:	add    dh,ah
   140018c69:	and    BYTE PTR [rdi],bh
   140018c6b:	jbe    0x140018cd6
   140018c6d:	gs ja  0x140018cbf
   140018c70:	jo     0x140018ce6
   140018c72:	imul   ebp,DWORD PTR [rdi+0x6e],0x41514073
   140018c79:	(bad)
   140018c7e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140018c82:	gs ins DWORD PTR es:[rdi],dx
   140018c84:	push   rsi
   140018c85:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018c8c:	rex.X
   140018c8d:	rex.B (bad) 
   140018c8f:	push   r14
   140018c91:	push   rcx
   140018c92:	push   rbx
   140018c93:	je     0x140018d0e
   140018c95:	ins    BYTE PTR es:[rdi],dx
   140018c96:	gs rex.WRXB jo 0x140018d0e
   140018c9a:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   140018ca1:	rex.WB je 0x140018d09
   140018ca4:	ins    DWORD PTR es:[rdi],dx
   140018ca5:	rex
   140018ca6:	rex pop rax
   140018ca8:	pop    rdx
   140018ca9:	add    BYTE PTR [rdx+0xa],bl
   140018cac:	(bad)  
   140018cad:	fs jb  0x140018d11
   140018cb0:	ja     0x140018d04
   140018cb2:	outs   dx,DWORD PTR ds:[rsi]
   140018cb3:	ja     0x140018cf5
   140018cb5:	push   rcx
   140018cb6:	push   rsp
   140018cb7:	jb     0x140018d1e
   140018cb9:	gs push rsi
   140018cbb:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018cc2:	rex.X
   140018cc3:	pop    r8
   140018cc5:	push   rax
   140018cc6:	rex.RB
   140018cc7:	push   r14
   140018cc9:	push   rcx
   140018cca:	push   rax
   140018ccb:	(bad)  
   140018ccc:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140018cd3:	rex.B
   140018cd4:	rex.RB
   140018cd5:	rex.X push rsi
   140018cd7:	push   rcx
   140018cd8:	push   rbx
   140018cd9:	je     0x140018d54
   140018cdb:	ins    BYTE PTR es:[rdi],dx
   140018cdc:	gs rex.WRXB jo 0x140018d54
   140018ce0:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   140018ce7:	rex.WB je 0x140018d4f
   140018cea:	ins    DWORD PTR es:[rdi],dx
   140018ceb:	rex
   140018cec:	rex
   140018ced:	rex.B
   140018cee:	rex.RB
   140018cef:	rex.X push rsi
   140018cf1:	push   rcx
   140018cf2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018cf4:	fs gs ins BYTE PTR es:[rdi],dx
   140018cf7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018cf9:	fs gs js 0x140018d3d
   140018cfd:	rex
   140018cfe:	rex pop rdx
   140018d00:	add    BYTE PTR [rax],al
   140018d02:	or     r15b,BYTE PTR [rdi]
   140018d05:	fs jb  0x140018d69
   140018d08:	ja     0x140018d4c
   140018d0a:	jb     0x140018d6d
   140018d0c:	outs   dx,BYTE PTR ds:[rsi]
   140018d0d:	movsxd ebp,DWORD PTR [rax+0x65]
   140018d10:	jae    0x140018d52
   140018d12:	push   rcx
   140018d13:	push   rsp
   140018d14:	jb     0x140018d7b
   140018d16:	gs push rsi
   140018d18:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140018d1f:	rex.X
   140018d20:	pop    r8
   140018d22:	push   rax
   140018d23:	rex.RB
   140018d24:	push   r14
   140018d26:	push   rcx
   140018d27:	push   rax
   140018d28:	(bad)  
   140018d29:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140018d30:	rex.B
   140018d31:	rex.RB
   140018d32:	rex.X push rsi
   140018d34:	push   rcx
   140018d35:	push   rdx
   140018d36:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140018d3b:	rex.B
   140018d3c:	rex.RB
   140018d3d:	rex.X push rsi
   140018d3f:	push   rcx
   140018d40:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018d42:	fs gs ins BYTE PTR es:[rdi],dx
   140018d45:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018d47:	fs gs js 0x140018d8b
   140018d4b:	rex
   140018d4c:	rex pop rdx
   140018d4e:	add    BYTE PTR [rax],al
   140018d50:	push   rbx
   140018d51:	adc    BYTE PTR [rdi],bh
   140018d53:	ins    DWORD PTR es:[rdi],dx
   140018d54:	gs je  0x140018db8
   140018d57:	rex.WRXB (bad) 
   140018d59:	push   0x65
   140018d5b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018d5f:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018d64:	outs   dx,BYTE PTR ds:[rsi]
   140018d65:	rex
   140018d66:	rex push rbp
   140018d68:	rex.RB
   140018d69:	rex.X
   140018d6a:	push   r8
   140018d6c:	rex.RB
   140018d6d:	rex.X push rbp
   140018d6f:	push   rcx
   140018d70:	rex.WRB
   140018d71:	gs je  0x140018dd5
   140018d74:	rex.WRXB (bad) 
   140018d76:	push   0x65
   140018d78:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018d7c:	pop    rax
   140018d7d:	pop    rdx
   140018d7e:	add    BYTE PTR [rax],al
   140018d80:	(bad)  
   140018d81:	adc    edi,DWORD PTR [rdi]
   140018d83:	jno    0x140018df9
   140018d85:	pop    rdi
   140018d86:	ins    DWORD PTR es:[rdi],dx
   140018d87:	gs je  0x140018deb
   140018d8a:	movsxd esp,DWORD PTR [rcx+0x73]
   140018d8d:	je     0x140018dcf
   140018d8f:	push   rcx
   140018d90:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018d95:	outs   dx,BYTE PTR ds:[rsi]
   140018d96:	rex
   140018d97:	rex push rbp
   140018d99:	rex.RB
   140018d9a:	rex.B
   140018d9b:	push   r8
   140018d9d:	rex.RB
   140018d9e:	pop    r8
   140018da0:	push   rax
   140018da1:	rex.RB
   140018da2:	rex.X
   140018da3:	rex.R
   140018da4:	rex pop rdx
   140018da6:	add    BYTE PTR [rax],al
   140018da8:	cmp    al,0x13
   140018daa:	(bad)  
   140018dab:	jno    0x140018e21
   140018dad:	pop    rdi
   140018dae:	ins    DWORD PTR es:[rdi],dx
   140018daf:	gs je  0x140018e13
   140018db2:	movsxd esp,DWORD PTR [rcx+0x6c]
   140018db5:	ins    BYTE PTR es:[rdi],dx
   140018db6:	rex push rcx
   140018db8:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018dbd:	outs   dx,BYTE PTR ds:[rsi]
   140018dbe:	rex
   140018dbf:	rex push rbp
   140018dc1:	rex.RB
   140018dc2:	rex.B
   140018dc3:	rex.B
   140018dc4:	rex.W push rdi
   140018dc6:	xor    al,0x43
   140018dc8:	(bad)  
   140018dc9:	ins    BYTE PTR es:[rdi],dx
   140018dca:	ins    BYTE PTR es:[rdi],dx
   140018dcb:	rex push rcx
   140018dcd:	rex.WRB
   140018dce:	gs je  0x140018e32
   140018dd1:	rex.WRXB (bad) 
   140018dd3:	push   0x65
   140018dd5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018dd9:	rex.W push rax
   140018ddb:	rex.RB
   140018ddc:	push   r8
   140018dde:	rex.RB
   140018ddf:	pop    r8
   140018de1:	rex pop rdx
   140018de3:	add    BYTE PTR [rbp+0x76653f0a],bh
   140018de9:	outs   dx,BYTE PTR gs:[rsi]
   140018deb:	je     0x140018e2d
   140018ded:	push   rcx
   140018dee:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018df3:	outs   dx,BYTE PTR ds:[rsi]
   140018df4:	rex
   140018df5:	rex
   140018df6:	rex.WRB
   140018df7:	rex.RB
   140018df8:	rex.B
   140018df9:	pop    r15
   140018dfb:	rex.WRX push rax
   140018dfd:	rex.RB
   140018dfe:	push   r14
   140018e00:	push   rcx
   140018e01:	rex.RB jbe 0x140018e69
   140018e04:	outs   dx,BYTE PTR ds:[rsi]
   140018e05:	je     0x140018e47
   140018e07:	rex
   140018e08:	rex pop rdx
   140018e0a:	add    BYTE PTR [rax],al
   140018e0c:	scas   al,BYTE PTR es:[rdi]
   140018e0d:	adc    BYTE PTR [rdi],bh
   140018e0f:	ins    DWORD PTR es:[rdi],dx
   140018e10:	gs je  0x140018e74
   140018e13:	rex.WRXB (bad) 
   140018e15:	push   0x65
   140018e17:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018e1b:	push   rbx
   140018e1c:	push   0x6374726f
   140018e21:	jne    0x140018e97
   140018e23:	rex
   140018e24:	rex push rbp
   140018e26:	rex.RB
   140018e27:	rex.X
   140018e28:	push   r8
   140018e2a:	rex.RB
   140018e2b:	rex.X push rbp
   140018e2d:	push   rcx
   140018e2e:	rex.WRB
   140018e2f:	gs je  0x140018e93
   140018e32:	rex.WRXB (bad) 
   140018e34:	push   0x65
   140018e36:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018e3a:	pop    rax
   140018e3b:	pop    rdx
   140018e3c:	add    BYTE PTR [rax],al
   140018e3e:	and    DWORD PTR [rdi+rdi*1],edx
   140018e41:	jno    0x140018eb7
   140018e43:	pop    rdi
   140018e44:	ins    DWORD PTR es:[rdi],dx
   140018e45:	gs je  0x140018ea9
   140018e48:	movsxd esp,DWORD PTR [rcx+0x73]
   140018e4b:	je     0x140018e8d
   140018e4d:	push   rcx
   140018e4e:	push   rbx
   140018e4f:	push   0x6374726f
   140018e54:	jne    0x140018eca
   140018e56:	rex
   140018e57:	rex push rbp
   140018e59:	rex.RB
   140018e5a:	rex.B
   140018e5b:	push   r8
   140018e5d:	rex.RB
   140018e5e:	pop    r8
   140018e60:	push   rax
   140018e61:	rex.RB
   140018e62:	rex.X
   140018e63:	rex.R
   140018e64:	rex pop rdx
   140018e66:	add    BYTE PTR [rax],al
   140018e68:	xchg   edi,eax
   140018e69:	adc    edi,DWORD PTR [rdi]
   140018e6b:	jno    0x140018ee1
   140018e6d:	pop    rdi
   140018e6e:	ins    DWORD PTR es:[rdi],dx
   140018e6f:	gs je  0x140018ed3
   140018e72:	movsxd esp,DWORD PTR [rcx+0x6c]
   140018e75:	ins    BYTE PTR es:[rdi],dx
   140018e76:	rex push rcx
   140018e78:	push   rbx
   140018e79:	push   0x6374726f
   140018e7e:	jne    0x140018ef4
   140018e80:	rex
   140018e81:	rex push rbp
   140018e83:	rex.RB
   140018e84:	rex.B
   140018e85:	rex.B
   140018e86:	rex.W push rdi
   140018e88:	xor    al,0x43
   140018e8a:	(bad)  
   140018e8b:	ins    BYTE PTR es:[rdi],dx
   140018e8c:	ins    BYTE PTR es:[rdi],dx
   140018e8d:	rex push rcx
   140018e8f:	rex.WRB
   140018e90:	gs je  0x140018ef4
   140018e93:	rex.WRXB (bad) 
   140018e95:	push   0x65
   140018e97:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018e9b:	rex.W push rax
   140018e9d:	rex.RB
   140018e9e:	push   r8
   140018ea0:	rex.RB
   140018ea1:	pop    r8
   140018ea3:	rex pop rdx
   140018ea5:	add    al,ch
   140018ea7:	or     bh,BYTE PTR [rdi]
   140018ea9:	gs jbe 0x140018f11
   140018eac:	outs   dx,BYTE PTR ds:[rsi]
   140018ead:	je     0x140018eef
   140018eaf:	push   rcx
   140018eb0:	push   rbx
   140018eb1:	push   0x6374726f
   140018eb6:	jne    0x140018f2c
   140018eb8:	rex
   140018eb9:	rex
   140018eba:	rex.WRB
   140018ebb:	rex.RB
   140018ebc:	rex.B
   140018ebd:	pop    r15
   140018ebf:	rex.WRX push rax
   140018ec1:	rex.RB
   140018ec2:	push   r14
   140018ec4:	push   rcx
   140018ec5:	rex.RB jbe 0x140018f2d
   140018ec8:	outs   dx,BYTE PTR ds:[rsi]
   140018ec9:	je     0x140018f0b
   140018ecb:	rex
   140018ecc:	rex pop rdx
   140018ece:	add    BYTE PTR [rax],al
   140018ed0:	(bad)  
   140018ed1:	adc    BYTE PTR [rdi],bh
   140018ed3:	ins    DWORD PTR es:[rdi],dx
   140018ed4:	gs je  0x140018f38
   140018ed7:	rex.WRXB (bad) 
   140018ed9:	push   0x65
   140018edb:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018edf:	push   rsi
   140018ee0:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018ee2:	js     0x140018f30
   140018ee4:	(bad)  
   140018ee5:	jns    0x140018f56
   140018ee7:	jne    0x140018f5d
   140018ee9:	rex
   140018eea:	rex push rbp
   140018eec:	rex.RB
   140018eed:	rex.X
   140018eee:	push   r8
   140018ef0:	rex.RB
   140018ef1:	rex.X push rbp
   140018ef3:	push   rcx
   140018ef4:	rex.WRB
   140018ef5:	gs je  0x140018f59
   140018ef8:	rex.WRXB (bad) 
   140018efa:	push   0x65
   140018efc:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018f00:	pop    rax
   140018f01:	pop    rdx
   140018f02:	add    BYTE PTR [rax],al
   140018f04:	rex.B adc al,0x3f
   140018f07:	jno    0x140018f7d
   140018f09:	pop    rdi
   140018f0a:	ins    DWORD PTR es:[rdi],dx
   140018f0b:	gs je  0x140018f6f
   140018f0e:	movsxd esp,DWORD PTR [rcx+0x73]
   140018f11:	je     0x140018f53
   140018f13:	push   rcx
   140018f14:	push   rsi
   140018f15:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018f17:	js     0x140018f65
   140018f19:	(bad)  
   140018f1a:	jns    0x140018f8b
   140018f1c:	jne    0x140018f92
   140018f1e:	rex
   140018f1f:	rex push rbp
   140018f21:	rex.RB
   140018f22:	rex.B
   140018f23:	push   r8
   140018f25:	rex.RB
   140018f26:	pop    r8
   140018f28:	push   rax
   140018f29:	rex.RB
   140018f2a:	rex.X
   140018f2b:	rex.R
   140018f2c:	rex pop rdx
   140018f2e:	add    BYTE PTR [rax],al
   140018f30:	mov    bh,0x13
   140018f32:	(bad)  
   140018f33:	jno    0x140018fa9
   140018f35:	pop    rdi
   140018f36:	ins    DWORD PTR es:[rdi],dx
   140018f37:	gs je  0x140018f9b
   140018f3a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140018f3d:	ins    BYTE PTR es:[rdi],dx
   140018f3e:	rex push rcx
   140018f40:	push   rsi
   140018f41:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018f43:	js     0x140018f91
   140018f45:	(bad)  
   140018f46:	jns    0x140018fb7
   140018f48:	jne    0x140018fbe
   140018f4a:	rex
   140018f4b:	rex push rbp
   140018f4d:	rex.RB
   140018f4e:	rex.B
   140018f4f:	rex.B
   140018f50:	rex.W push rdi
   140018f52:	xor    al,0x43
   140018f54:	(bad)  
   140018f55:	ins    BYTE PTR es:[rdi],dx
   140018f56:	ins    BYTE PTR es:[rdi],dx
   140018f57:	rex push rcx
   140018f59:	rex.WRB
   140018f5a:	gs je  0x140018fbe
   140018f5d:	rex.WRXB (bad) 
   140018f5f:	push   0x65
   140018f61:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018f65:	rex.W push rax
   140018f67:	rex.RB
   140018f68:	push   r8
   140018f6a:	rex.RB
   140018f6b:	pop    r8
   140018f6d:	rex pop rdx
   140018f6f:	add    BYTE PTR [rdx+0x68633f06],ch
   140018f75:	imul   ebp,DWORD PTR [rsp+riz*2+0x45],0x746e6576
   140018f7d:	rex push rcx
   140018f7f:	rex.WR (bad) 
   140018f81:	jns    0x140018ff2
   140018f83:	jne    0x140018ff9
   140018f85:	rex
   140018f86:	rex
   140018f87:	rex.WRB
   140018f88:	rex.RB
   140018f89:	rex.B
   140018f8a:	pop    r8
   140018f8c:	push   rax
   140018f8d:	rex.RB
   140018f8e:	push   r14
   140018f90:	push   rcx
   140018f91:	rex.XB push 0x45646c69
   140018f97:	jbe    0x140018ffe
   140018f99:	outs   dx,BYTE PTR ds:[rsi]
   140018f9a:	je     0x140018fdc
   140018f9c:	rex
   140018f9d:	rex pop rdx
   140018f9f:	add    BYTE PTR [rbx],ch
   140018fa1:	add    eax,0x6464613f
   140018fa6:	rex.WB je 0x14001900e
   140018fa9:	ins    DWORD PTR es:[rdi],dx
   140018faa:	rex push rcx
   140018fac:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018fae:	js     0x140018ffc
   140018fb0:	(bad)  
   140018fb1:	jns    0x140019022
   140018fb3:	jne    0x140019029
   140018fb5:	rex
   140018fb6:	rex push rbp
   140018fb8:	rex.RB
   140018fb9:	rex.B
   140018fba:	pop    r8
   140018fbc:	push   rax
   140018fbd:	rex.RB
   140018fbe:	push   r14
   140018fc0:	push   rcx
   140018fc1:	rex.WR (bad) 
   140018fc3:	jns    0x140019034
   140018fc5:	jne    0x14001903b
   140018fc7:	rex.WB je 0x14001902f
   140018fca:	ins    DWORD PTR es:[rdi],dx
   140018fcb:	rex
   140018fcc:	rex
   140018fcd:	rex pop rdx
   140018fcf:	add    dl,dl
   140018fd1:	(bad)  
   140018fd2:	(bad)  
   140018fd3:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   140018fdb:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018fdd:	js     0x14001902b
   140018fdf:	(bad)  
   140018fe0:	jns    0x140019051
   140018fe2:	jne    0x140019058
   140018fe4:	rex
   140018fe5:	rex push rbp
   140018fe7:	rex.RB
   140018fe8:	rex.X
   140018fe9:	push   r8
   140018feb:	rex.RB
   140018fec:	push   r14
   140018fee:	push   rcx
   140018fef:	rex.WR (bad) 
   140018ff1:	jns    0x140019062
   140018ff3:	jne    0x140019069
   140018ff5:	rex.WB je 0x14001905d
   140018ff8:	ins    DWORD PTR es:[rdi],dx
   140018ff9:	rex
   140018ffa:	rex
   140018ffb:	rex.W
   140018ffc:	rex pop rdx
   140018ffe:	add    BYTE PTR [rax],al
   140019000:	xor    eax,0x61743f1e
   140019005:	imul   esp,DWORD PTR [rbp+0x41],0x74
   140019009:	rex push rcx
   14001900b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001900d:	js     0x14001905b
   14001900f:	(bad)  
   140019010:	jns    0x140019081
   140019012:	jne    0x140019088
   140019014:	rex
   140019015:	rex push rbp
   140019017:	rex.RB
   140019018:	rex.B
   140019019:	push   r8
   14001901b:	rex.RB
   14001901c:	push   r14
   14001901e:	push   rcx
   14001901f:	rex.WR (bad) 
   140019021:	jns    0x140019092
   140019023:	jne    0x140019099
   140019025:	rex.WB je 0x14001908d
   140019028:	ins    DWORD PTR es:[rdi],dx
   140019029:	rex
   14001902a:	rex
   14001902b:	rex.W
   14001902c:	rex pop rdx
   14001902e:	add    BYTE PTR [rax],al
   140019030:	(bad)  
   140019031:	or     eax,0x646e693f
   140019036:	gs js  0x140019088
   140019039:	rex push cx
   14001903c:	rex.WR (bad) 
   14001903e:	jns    0x1400190af
   140019040:	jne    0x1400190b6
   140019042:	rex
   140019043:	rex push rbp
   140019045:	rex.RB
   140019046:	rex.X
   140019047:	rex.B
   140019048:	rex.W push rax
   14001904a:	rex.RB
   14001904b:	push   r14
   14001904d:	push   rcx
   14001904e:	push   rdi
   14001904f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019057:	pop    rdx
   140019058:	add    BYTE PTR [rax],al
   14001905a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001905b:	(bad)  
   14001905c:	(bad)  
   14001905d:	movsxd ebp,DWORD PTR [rdi+0x75]
   140019060:	outs   dx,BYTE PTR ds:[rsi]
   140019061:	je     0x1400190a3
   140019063:	push   rcx
   140019064:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019066:	js     0x1400190b4
   140019068:	(bad)  
   140019069:	jns    0x1400190da
   14001906b:	jne    0x1400190e1
   14001906d:	rex
   14001906e:	rex push rbp
   140019070:	rex.RB
   140019071:	rex.X
   140019072:	rex.B
   140019073:	rex.W pop rax
   140019075:	pop    rdx
   140019076:	add    BYTE PTR [rax],al
   140019078:	xchg   edx,eax
   140019079:	sbb    al,0x3f
   14001907b:	jae    0x1400190e6
   14001907d:	jp     0x1400190e4
   14001907f:	imul   rbp,QWORD PTR [rsi+0x74],0x6f425140
   140019087:	js     0x1400190d5
   140019089:	(bad)  
   14001908a:	jns    0x1400190fb
   14001908c:	jne    0x140019102
   14001908e:	rex
   14001908f:	rex push rbp
   140019091:	rex.RB
   140019092:	rex.X
   140019093:	rex.B (bad) 
   140019095:	push   r14
   140019097:	push   rcx
   140019098:	push   rbx
   140019099:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400190a0:	add    BYTE PTR [rax],al
   1400190a2:	clc    
   1400190a3:	adc    BYTE PTR [rdi],bh
   1400190a5:	ins    DWORD PTR es:[rdi],dx
   1400190a6:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400190ad:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   1400190b4:	js     0x140019102
   1400190b6:	(bad)  
   1400190b7:	jns    0x140019128
   1400190b9:	jne    0x14001912f
   1400190bb:	rex
   1400190bc:	rex push rbp
   1400190be:	rex.RB
   1400190bf:	rex.X
   1400190c0:	rex.B (bad) 
   1400190c2:	push   r14
   1400190c4:	push   rcx
   1400190c5:	push   rbx
   1400190c6:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400190cd:	add    BYTE PTR [rax+rdx*1],ch
   1400190d0:	(bad)  
   1400190d1:	ins    DWORD PTR es:[rdi],dx
   1400190d2:	(bad)  
   1400190d3:	js     0x14001913e
   1400190d5:	ins    DWORD PTR es:[rdi],dx
   1400190d6:	jne    0x140019145
   1400190d8:	push   rbx
   1400190d9:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   1400190e0:	js     0x14001912e
   1400190e2:	(bad)  
   1400190e3:	jns    0x140019154
   1400190e5:	jne    0x14001915b
   1400190e7:	rex
   1400190e8:	rex push rbp
   1400190ea:	rex.RB
   1400190eb:	rex.X
   1400190ec:	rex.B (bad) 
   1400190ee:	push   r14
   1400190f0:	push   rcx
   1400190f1:	push   rbx
   1400190f2:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400190f9:	add    BYTE PTR [rbx],ah
   1400190fb:	or     edi,DWORD PTR [rdi]
   1400190fd:	gs js  0x140019170
   140019100:	(bad)  
   140019101:	outs   dx,BYTE PTR ds:[rsi]
   140019102:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   14001910a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001910e:	outs   dx,BYTE PTR ds:[rsi]
   14001910f:	jae    0x140019151
   140019111:	push   rcx
   140019112:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019114:	js     0x140019162
   140019116:	(bad)  
   140019117:	jns    0x140019188
   140019119:	jne    0x14001918f
   14001911b:	rex
   14001911c:	rex push rbp
   14001911e:	rex.RB
   14001911f:	rex.X
   140019120:	rex.B (bad) 
   140019122:	push   r14
   140019124:	(bad)  
   140019125:	and    al,0x51
   140019127:	rex.RX ins BYTE PTR es:[rdi],dx
   140019129:	(bad)  
   14001912a:	addr32 jae 0x14001916d
   14001912d:	push   rdi
   14001912e:	xor    al,0x4f
   140019130:	jb     0x14001919b
   140019132:	outs   dx,BYTE PTR gs:[rsi]
   140019134:	je     0x140019197
   140019136:	je     0x1400191a1
   140019138:	outs   dx,DWORD PTR ds:[rsi]
   140019139:	outs   dx,BYTE PTR ds:[rsi]
   14001913a:	rex push rcx
   14001913c:	je     0x14001917e
   14001913e:	rex
   14001913f:	rex
   140019140:	rex pop rax
   140019142:	pop    rdx
   140019143:	add    BYTE PTR [rdi+0x65733f18],cl
   140019149:	je     0x140019192
   14001914b:	outs   dx,DWORD PTR gs:[rsi]
   14001914d:	ins    DWORD PTR es:[rdi],dx
   14001914e:	gs je  0x1400191c3
   140019151:	jns    0x140019193
   140019153:	push   rcx
   140019154:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019156:	js     0x1400191a4
   140019158:	(bad)  
   140019159:	jns    0x1400191ca
   14001915b:	jne    0x1400191d1
   14001915d:	rex
   14001915e:	rex push rbp
   140019160:	rex.RB
   140019161:	rex.B
   140019162:	pop    r8
   140019164:	rex.B
   140019165:	rex.RB
   140019166:	rex.X push rsi
   140019168:	push   rcx
   140019169:	push   rdx
   14001916a:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001916f:	rex pop rdx
   140019171:	add    bl,bh
   140019173:	or     edi,DWORD PTR [rdi]
   140019175:	outs   dx,DWORD PTR gs:[esi]
   140019178:	ins    DWORD PTR es:[rdi],dx
   140019179:	gs je  0x1400191ee
   14001917c:	jns    0x1400191be
   14001917e:	push   rcx
   14001917f:	rex.WR (bad) 
   140019181:	jns    0x1400191f2
   140019183:	jne    0x1400191f9
   140019185:	rex
   140019186:	rex push rbp
   140019188:	rex.RB
   140019189:	rex.X
   14001918a:	rex.B (bad) 
   14001918c:	push   r14
   14001918e:	push   rcx
   14001918f:	push   rdx
   140019190:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140019195:	pop    rax
   140019196:	pop    rdx
   140019197:	add    BYTE PTR [rcx],dh
   140019199:	(bad)  
   14001919a:	(bad)  
   14001919b:	imul   esi,DWORD PTR [rbx+0x45],0x7974706d
   1400191a2:	rex push rcx
   1400191a4:	rex.WR (bad) 
   1400191a6:	jns    0x140019217
   1400191a8:	jne    0x14001921e
   1400191aa:	rex
   1400191ab:	rex push rbp
   1400191ad:	rex.RB
   1400191ae:	rex.X
   1400191af:	pop    r15
   1400191b1:	rex.WRX pop rax
   1400191b3:	pop    rdx
   1400191b4:	add    BYTE PTR [rax],al
   1400191b6:	pop    rdi
   1400191b7:	or     al,0x3f
   1400191b9:	push   0x65487361
   1400191be:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   1400191c5:	push   rdi
   1400191c6:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   1400191ce:	js     0x14001921c
   1400191d0:	(bad)  
   1400191d1:	jns    0x140019242
   1400191d3:	jne    0x140019249
   1400191d5:	rex
   1400191d6:	rex push rbp
   1400191d8:	rex.RB
   1400191d9:	rex.X
   1400191da:	pop    r15
   1400191dc:	rex.WRX pop rax
   1400191de:	pop    rdx
   1400191df:	add    BYTE PTR [rdi+0xc],bh
   1400191e2:	(bad)  
   1400191e3:	push   0x68676965
   1400191e8:	je     0x140019230
   1400191ea:	outs   dx,DWORD PTR ds:[rsi]
   1400191eb:	jb     0x140019244
   1400191ed:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   1400191f5:	js     0x140019243
   1400191f7:	(bad)  
   1400191f8:	jns    0x140019269
   1400191fa:	jne    0x140019270
   1400191fc:	rex
   1400191fd:	rex push rbp
   1400191ff:	rex.RB
   140019200:	rex.X
   140019201:	rex.B
   140019202:	rex.W
   140019203:	rex.W
   140019204:	rex pop rdx
   140019206:	add    BYTE PTR [rax],al
   140019208:	repz adc BYTE PTR [rdi],bh
   14001920b:	ins    DWORD PTR es:[rdi],dx
   14001920c:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   140019213:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   14001921b:	push   rdi
   14001921c:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   140019224:	js     0x140019272
   140019226:	(bad)  
   140019227:	jns    0x140019298
   140019229:	jne    0x14001929f
   14001922b:	rex
   14001922c:	rex push rbp
   14001922e:	rex.RB
   14001922f:	rex.X
   140019230:	rex.B
   140019231:	rex.W
   140019232:	rex.W
   140019233:	rex pop rdx
   140019235:	add    bl,ah
   140019237:	or     eax,0x766e693f
   14001923c:	(bad)  
   14001923d:	ins    BYTE PTR es:[rdi],dx
   14001923e:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x42514065
   140019246:	outs   dx,DWORD PTR ds:[rsi]
   140019247:	js     0x140019295
   140019249:	(bad)  
   14001924a:	jns    0x1400192bb
   14001924c:	jne    0x1400192c2
   14001924e:	rex
   14001924f:	rex push rbp
   140019251:	rex.RB
   140019252:	rex.B
   140019253:	pop    r8
   140019255:	pop    rax
   140019256:	pop    rdx
   140019257:	add    BYTE PTR [rax+0x21],al
   14001925a:	(bad)  
   14001925b:	ja     0x1400192c6
   14001925d:	fs addr32 gs je 0x1400192a2
   140019262:	push   rcx
   140019263:	rex.WR (bad) 
   140019265:	jns    0x1400192d6
   140019267:	jne    0x1400192dd
   140019269:	rex.WB je 0x1400192d1
   14001926c:	ins    DWORD PTR es:[rdi],dx
   14001926d:	rex
   14001926e:	rex push rbp
   140019270:	rex.RB
   140019271:	rex.B
   140019272:	push   r8
   140019274:	rex.RB
   140019275:	push   r14
   140019277:	push   rcx
   140019278:	push   rdi
   140019279:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   140019281:	pop    rdx
   140019282:	add    BYTE PTR [rax],al
   140019284:	xchg   BYTE PTR [rdi],cl
   140019286:	(bad)  
   140019287:	ins    BYTE PTR es:[rdi],dx
   140019288:	(bad)  
   140019289:	jns    0x1400192fa
   14001928b:	jne    0x140019301
   14001928d:	rex push rcx
   14001928f:	rex.WR (bad) 
   140019291:	jns    0x140019302
   140019293:	jne    0x140019309
   140019295:	rex
   140019296:	rex push rbp
   140019298:	rex.RB
   140019299:	rex.B
   14001929a:	push   r8
   14001929c:	rex.RB
   14001929d:	push   r14
   14001929f:	xor    DWORD PTR [rax+0x58],eax
   1400192a2:	pop    rdx
   1400192a3:	add    al,bh
   1400192a5:	sbb    al,0x3f
   1400192a7:	jae    0x140019319
   1400192a9:	(bad)  
   1400192aa:	movsxd esp,DWORD PTR [rbp+0x72]
   1400192ad:	rex.WB je 0x140019315
   1400192b0:	ins    DWORD PTR es:[rdi],dx
   1400192b1:	rex push rcx
   1400192b3:	rex.WR (bad) 
   1400192b5:	jns    0x140019326
   1400192b7:	jne    0x14001932d
   1400192b9:	rex.WB je 0x140019321
   1400192bc:	ins    DWORD PTR es:[rdi],dx
   1400192bd:	rex
   1400192be:	rex push rbp
   1400192c0:	rex.RB
   1400192c1:	rex.B
   1400192c2:	push   r8
   1400192c4:	rex.RB
   1400192c5:	push   r14
   1400192c7:	push   rcx
   1400192c8:	push   rbx
   1400192c9:	jo     0x14001932c
   1400192cb:	movsxd esp,DWORD PTR [rbp+0x72]
   1400192ce:	rex.WB je 0x140019336
   1400192d1:	ins    DWORD PTR es:[rdi],dx
   1400192d2:	rex
   1400192d3:	rex pop rax
   1400192d5:	pop    rdx
   1400192d6:	add    BYTE PTR [rax],al
   1400192d8:	xchg   ebp,eax
   1400192d9:	(bad)  
   1400192da:	(bad)  
   1400192db:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400192de:	je     0x140019352
   1400192e0:	outs   dx,DWORD PTR ds:[rsi]
   1400192e1:	ins    BYTE PTR es:[rdi],dx
   1400192e2:	push   rsp
   1400192e3:	jns    0x140019355
   1400192e5:	gs jae 0x140019328
   1400192e8:	push   rcx
   1400192e9:	rex.WR (bad) 
   1400192eb:	jns    0x14001935c
   1400192ed:	jne    0x140019363
   1400192ef:	rex
   1400192f0:	rex push rbp
   1400192f2:	rex.RB
   1400192f3:	rex.X
   1400192f4:	rex.B (bad) 
   1400192f6:	push   r14
   1400192f8:	(bad)  
   1400192f9:	and    al,0x51
   1400192fb:	rex.RX ins BYTE PTR es:[rdi],dx
   1400192fd:	(bad)  
   1400192fe:	addr32 jae 0x140019341
   140019301:	push   rdi
   140019302:	xor    al,0x43
   140019304:	outs   dx,DWORD PTR ds:[rsi]
   140019305:	outs   dx,BYTE PTR ds:[rsi]
   140019306:	je     0x14001937a
   140019308:	outs   dx,DWORD PTR ds:[rsi]
   140019309:	ins    BYTE PTR es:[rdi],dx
   14001930a:	push   rsp
   14001930b:	jns    0x14001937d
   14001930d:	gs rex push rcx
   140019310:	push   rbx
   140019311:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140019318:	movsxd edi,DWORD PTR [rcx+0x40]
   14001931b:	rex
   14001931c:	rex
   14001931d:	rex pop rax
   14001931f:	pop    rdx
   140019320:	add    BYTE PTR [rax],al
   140019322:	mov    bl,0x10
   140019324:	(bad)  
   140019325:	ins    DWORD PTR es:[rdi],dx
   140019326:	gs je  0x14001938a
   140019329:	rex.WRXB (bad) 
   14001932b:	push   0x65
   14001932d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019331:	push   rbx
   140019332:	jo     0x1400193a0
   140019334:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   14001933c:	rex.RB
   14001933d:	rex.X
   14001933e:	push   r8
   140019340:	rex.RB
   140019341:	rex.X push rbp
   140019343:	push   rcx
   140019344:	rex.WRB
   140019345:	gs je  0x1400193a9
   140019348:	rex.WRXB (bad) 
   14001934a:	push   0x65
   14001934c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019350:	pop    rax
   140019351:	pop    rdx
   140019352:	add    BYTE PTR [rax],al
   140019354:	es adc al,0x3f
   140019357:	jno    0x1400193cd
   140019359:	pop    rdi
   14001935a:	ins    DWORD PTR es:[rdi],dx
   14001935b:	gs je  0x1400193bf
   14001935e:	movsxd esp,DWORD PTR [rcx+0x73]
   140019361:	je     0x1400193a3
   140019363:	push   rcx
   140019364:	push   rbx
   140019365:	jo     0x1400193d3
   140019367:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   14001936f:	rex.RB
   140019370:	rex.B
   140019371:	push   r8
   140019373:	rex.RB
   140019374:	pop    r8
   140019376:	push   rax
   140019377:	rex.RB
   140019378:	rex.X
   140019379:	rex.R
   14001937a:	rex pop rdx
   14001937c:	add    BYTE PTR [rax],al
   14001937e:	pushf  
   14001937f:	adc    edi,DWORD PTR [rdi]
   140019381:	jno    0x1400193f7
   140019383:	pop    rdi
   140019384:	ins    DWORD PTR es:[rdi],dx
   140019385:	gs je  0x1400193e9
   140019388:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001938b:	ins    BYTE PTR es:[rdi],dx
   14001938c:	rex push rcx
   14001938e:	push   rbx
   14001938f:	jo     0x1400193fd
   140019391:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   140019399:	rex.RB
   14001939a:	rex.B
   14001939b:	rex.B
   14001939c:	rex.W push rdi
   14001939e:	xor    al,0x43
   1400193a0:	(bad)  
   1400193a1:	ins    BYTE PTR es:[rdi],dx
   1400193a2:	ins    BYTE PTR es:[rdi],dx
   1400193a3:	rex push rcx
   1400193a5:	rex.WRB
   1400193a6:	gs je  0x14001940a
   1400193a9:	rex.WRXB (bad) 
   1400193ab:	push   0x65
   1400193ad:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400193b1:	rex.W push rax
   1400193b3:	rex.RB
   1400193b4:	push   r8
   1400193b6:	rex.RB
   1400193b7:	pop    r8
   1400193b9:	rex pop rdx
   1400193bb:	add    ch,ch
   1400193bd:	or     bh,BYTE PTR [rdi]
   1400193bf:	gs jbe 0x140019427
   1400193c2:	outs   dx,BYTE PTR ds:[rsi]
   1400193c3:	je     0x140019405
   1400193c5:	push   rcx
   1400193c6:	push   rbx
   1400193c7:	jo     0x140019435
   1400193c9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x4d404072
   1400193d1:	rex.RB
   1400193d2:	rex.B
   1400193d3:	pop    r15
   1400193d5:	rex.WRX push rax
   1400193d7:	rex.RB
   1400193d8:	push   r14
   1400193da:	push   rcx
   1400193db:	rex.RB jbe 0x140019443
   1400193de:	outs   dx,BYTE PTR ds:[rsi]
   1400193df:	je     0x140019421
   1400193e1:	rex
   1400193e2:	rex pop rdx
   1400193e4:	add    BYTE PTR [rax],al
   1400193e6:	lods   eax,DWORD PTR ds:[rsi]
   1400193e7:	(bad)  
   1400193e8:	(bad)  
   1400193e9:	movsxd ebp,DWORD PTR [rax+0x69]
   1400193ec:	ins    BYTE PTR es:[rdi],dx
   1400193ed:	fs rex.RB jbe 0x140019456
   1400193f1:	outs   dx,BYTE PTR ds:[rsi]
   1400193f2:	je     0x140019434
   1400193f4:	push   rcx
   1400193f5:	push   rbx
   1400193f6:	jo     0x140019464
   1400193f8:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x4d404072
   140019400:	rex.RB
   140019401:	rex.B
   140019402:	pop    r8
   140019404:	push   rax
   140019405:	rex.RB
   140019406:	push   r14
   140019408:	push   rcx
   140019409:	rex.XB push 0x45646c69
   14001940f:	jbe    0x140019476
   140019411:	outs   dx,BYTE PTR ds:[rsi]
   140019412:	je     0x140019454
   140019414:	rex
   140019415:	rex pop rdx
   140019417:	add    BYTE PTR [rdx+0x69733f1c],bh
   14001941d:	jp     0x140019484
   14001941f:	imul   rbp,QWORD PTR [rsi+0x74],0x70535140
   140019427:	ins    BYTE PTR es:[rdi],dx
   140019428:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   140019430:	rex.RB
   140019431:	rex.X
   140019432:	rex.B (bad) 
   140019434:	push   r14
   140019436:	push   rcx
   140019437:	push   rbx
   140019438:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001943f:	add    BYTE PTR [rsi],dl
   140019441:	adc    DWORD PTR [rdi],edi
   140019443:	ins    DWORD PTR es:[rdi],dx
   140019444:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001944b:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140019452:	rex push rcx
   140019454:	push   rbx
   140019455:	jo     0x1400194c3
   140019457:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   14001945f:	rex.RB
   140019460:	rex.X
   140019461:	rex.B (bad) 
   140019463:	push   r14
   140019465:	push   rcx
   140019466:	push   rbx
   140019467:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001946e:	add    BYTE PTR [rax],al
   140019470:	pop    rcx
   140019471:	adc    bh,BYTE PTR [rdi]
   140019473:	jo     0x1400194d6
   140019475:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001947c:	je     0x1400194be
   14001947e:	push   rcx
   14001947f:	rex.RX jb 0x1400194e3
   140019482:	ins    DWORD PTR es:[rdi],dx
   140019483:	gs rex
   140019485:	rex
   140019486:	rex.WRB
   140019487:	rex.RB
   140019488:	rex.B
   140019489:	pop    r8
   14001948b:	push   rax
   14001948c:	rex.RB
   14001948d:	push   r14
   14001948f:	push   rcx
   140019490:	push   rax
   140019491:	(bad)  
   140019492:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140019499:	je     0x1400194db
   14001949b:	rex
   14001949c:	rex pop rdx
   14001949e:	add    BYTE PTR [rax],al
   1400194a0:	(bad)  
   1400194a1:	adc    eax,0x7365723f
   1400194a6:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   1400194ad:	je     0x1400194ef
   1400194af:	push   rcx
   1400194b0:	push   rbx
   1400194b1:	jo     0x14001951f
   1400194b3:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x4d404072
   1400194bb:	rex.RB
   1400194bc:	rex.B
   1400194bd:	pop    r8
   1400194bf:	push   rax
   1400194c0:	rex.RB
   1400194c1:	push   r14
   1400194c3:	push   rcx
   1400194c4:	push   rdx
   1400194c5:	gs jae 0x140019531
   1400194c8:	jp     0x14001952f
   1400194ca:	rex.RB jbe 0x140019532
   1400194cd:	outs   dx,BYTE PTR ds:[rsi]
   1400194ce:	je     0x140019510
   1400194d0:	rex
   1400194d1:	rex pop rdx
   1400194d3:	add    BYTE PTR [rbp+0x68633f06],al
   1400194d9:	(bad)  
   1400194da:	outs   dx,BYTE PTR ds:[rsi]
   1400194db:	addr32 gs rex.RB jbe 0x140019545
   1400194e0:	outs   dx,BYTE PTR ds:[rsi]
   1400194e1:	je     0x140019523
   1400194e3:	push   rcx
   1400194e4:	push   rbx
   1400194e5:	jo     0x140019553
   1400194e7:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x4d404072
   1400194ef:	rex.RB
   1400194f0:	rex.B
   1400194f1:	pop    r8
   1400194f3:	push   rax
   1400194f4:	rex.RB
   1400194f5:	push   r14
   1400194f7:	push   rcx
   1400194f8:	rex.RB jbe 0x140019560
   1400194fb:	outs   dx,BYTE PTR ds:[rsi]
   1400194fc:	je     0x14001953e
   1400194fe:	rex
   1400194ff:	rex pop rdx
   140019501:	add    bl,al
   140019503:	(bad)  
   140019504:	(bad)  
   140019505:	movsxd esi,DWORD PTR [rdx+0x65]
   140019508:	(bad)  
   140019509:	je     0x140019570
   14001950b:	rex.W (bad) 
   14001950d:	outs   dx,BYTE PTR ds:[rsi]
   14001950e:	fs ins BYTE PTR es:[rdi],dx
   140019510:	gs rex push rcx
   140019513:	push   rbx
   140019514:	jo     0x140019582
   140019516:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x4d404072
   14001951e:	rex.RB
   14001951f:	rex.B
   140019520:	push   r8
   140019522:	rex.RB
   140019523:	push   r14
   140019525:	push   rcx
   140019526:	push   rbx
   140019527:	jo     0x140019595
   140019529:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e614872
   140019531:	fs ins BYTE PTR es:[rdi],dx
   140019533:	gs rex
   140019535:	rex pop rax
   140019537:	pop    rdx
   140019538:	add    BYTE PTR [rax],al
   14001953a:	iret   
   14001953b:	adc    BYTE PTR [rdi],bh
   14001953d:	ins    DWORD PTR es:[rdi],dx
   14001953e:	gs je  0x1400195a2
   140019541:	rex.WRXB (bad) 
   140019543:	push   0x65
   140019545:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019549:	push   rdi
   14001954a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140019552:	rex.RB
   140019553:	rex.X
   140019554:	push   r8
   140019556:	rex.RB
   140019557:	rex.X push rbp
   140019559:	push   rcx
   14001955a:	rex.WRB
   14001955b:	gs je  0x1400195bf
   14001955e:	rex.WRXB (bad) 
   140019560:	push   0x65
   140019562:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019566:	pop    rax
   140019567:	pop    rdx
   140019568:	add    BYTE PTR [rax],al
   14001956a:	rex.X adc al,0x3f
   14001956d:	jno    0x1400195e3
   14001956f:	pop    rdi
   140019570:	ins    DWORD PTR es:[rdi],dx
   140019571:	gs je  0x1400195d5
   140019574:	movsxd esp,DWORD PTR [rcx+0x73]
   140019577:	je     0x1400195b9
   140019579:	push   rcx
   14001957a:	push   rdi
   14001957b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140019583:	rex.RB
   140019584:	rex.B
   140019585:	push   r8
   140019587:	rex.RB
   140019588:	pop    r8
   14001958a:	push   rax
   14001958b:	rex.RB
   14001958c:	rex.X
   14001958d:	rex.R
   14001958e:	rex pop rdx
   140019590:	add    BYTE PTR [rax],al
   140019592:	mov    eax,0x74713f13
   140019597:	pop    rdi
   140019598:	ins    DWORD PTR es:[rdi],dx
   140019599:	gs je  0x1400195fd
   14001959c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001959f:	ins    BYTE PTR es:[rdi],dx
   1400195a0:	rex push rcx
   1400195a2:	push   rdi
   1400195a3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400195ab:	rex.RB
   1400195ac:	rex.B
   1400195ad:	rex.B
   1400195ae:	rex.W push rdi
   1400195b0:	xor    al,0x43
   1400195b2:	(bad)  
   1400195b3:	ins    BYTE PTR es:[rdi],dx
   1400195b4:	ins    BYTE PTR es:[rdi],dx
   1400195b5:	rex push rcx
   1400195b7:	rex.WRB
   1400195b8:	gs je  0x14001961c
   1400195bb:	rex.WRXB (bad) 
   1400195bd:	push   0x65
   1400195bf:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400195c3:	rex.W push rax
   1400195c5:	rex.RB
   1400195c6:	push   r8
   1400195c8:	rex.RB
   1400195c9:	pop    r8
   1400195cb:	rex pop rdx
   1400195cd:	add    BYTE PTR [rdx],dl
   1400195cf:	add    bh,BYTE PTR [rdi]
   1400195d1:	(bad)  
   1400195d2:	xor    DWORD PTR [rcx+0x4c],edx
   1400195d5:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   1400195dc:	rex
   1400195dd:	rex push rbp
   1400195df:	rex.RB
   1400195e0:	rex.B
   1400195e1:	rex.B
   1400195e2:	rex pop rax
   1400195e4:	pop    rdx
   1400195e5:	add    BYTE PTR [rsi+0x2],bl
   1400195e8:	(bad)  
   1400195e9:	(bad)  
   1400195ea:	xor    DWORD PTR [rcx+0x54],edx
   1400195ed:	(bad)  
   1400195ee:	(bad)  
   1400195ef:	ins    BYTE PTR es:[rdi],dx
   1400195f0:	gs push rsi
   1400195f2:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400195f9:	rex.B
   1400195fa:	rex.B
   1400195fb:	rex pop rax
   1400195fd:	pop    rdx
   1400195fe:	add    BYTE PTR [rax],al
   140019600:	push   0x2
   140019602:	(bad)  
   140019603:	(bad)  
   140019604:	xor    DWORD PTR [rcx+0x54],edx
   140019607:	jb     0x14001966e
   140019609:	gs push rsi
   14001960b:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140019612:	rex.B
   140019613:	rex.B
   140019614:	rex pop rax
   140019616:	pop    rdx
   140019617:	add    BYTE PTR [rbx+0x313f3f01],ch
   14001961d:	push   rcx
   14001961e:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140019623:	outs   dx,BYTE PTR ds:[rsi]
   140019624:	rex
   140019625:	rex push rbp
   140019627:	rex.RB
   140019628:	rex.B
   140019629:	rex.B
   14001962a:	rex pop rax
   14001962c:	pop    rdx
   14001962d:	add    BYTE PTR [rcx],dh
   14001962f:	add    bh,BYTE PTR [rdi]
   140019631:	(bad)  
   140019632:	xor    DWORD PTR [rcx+0x53],edx
   140019635:	push   0x6374726f
   14001963a:	jne    0x1400196b0
   14001963c:	rex
   14001963d:	rex push rbp
   14001963f:	rex.RB
   140019640:	rex.B
   140019641:	rex.B
   140019642:	rex pop rax
   140019644:	pop    rdx
   140019645:	add    BYTE PTR [rbx+0x2],dh
   140019648:	(bad)  
   140019649:	(bad)  
   14001964a:	xor    DWORD PTR [rcx+0x56],edx
   14001964d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001964f:	js     0x14001969d
   140019651:	(bad)  
   140019652:	jns    0x1400196c3
   140019654:	jne    0x1400196ca
   140019656:	rex
   140019657:	rex push rbp
   140019659:	rex.RB
   14001965a:	rex.B
   14001965b:	rex.B
   14001965c:	rex pop rax
   14001965e:	pop    rdx
   14001965f:	add    BYTE PTR [rdi],dh
   140019661:	add    bh,BYTE PTR [rdi]
   140019663:	(bad)  
   140019664:	xor    DWORD PTR [rcx+0x53],edx
   140019667:	jo     0x1400196d5
   140019669:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x55404072
   140019671:	rex.RB
   140019672:	rex.B
   140019673:	rex.B
   140019674:	rex pop rax
   140019676:	pop    rdx
   140019677:	add    BYTE PTR [rdx+rax*1+0x3f],dh
   14001967b:	(bad)  
   14001967c:	xor    DWORD PTR [rcx+0x57],edx
   14001967f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140019687:	rex.RB
   140019688:	rex.B
   140019689:	rex.B
   14001968a:	rex pop rax
   14001968c:	pop    rdx
   14001968d:	add    BYTE PTR [rsi],al
   14001968f:	or     BYTE PTR [rdi],bh
   140019691:	movsxd esi,DWORD PTR [rbp+0x72]
   140019694:	jb     0x1400196fb
   140019696:	outs   dx,BYTE PTR ds:[rsi]
   140019697:	je     0x1400196e2
   140019699:	outs   dx,BYTE PTR ds:[rsi]
   14001969a:	fs gs js 0x1400196de
   14001969e:	push   rcx
   14001969f:	(bad)
   1400196a5:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400196a9:	gs ins DWORD PTR es:[rdi],dx
   1400196ab:	push   rsi
   1400196ac:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400196b3:	rex.X
   1400196b4:	rex.B (bad) 
   1400196b6:	push   r14
   1400196b8:	push   rcx
   1400196b9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400196bb:	fs gs ins BYTE PTR es:[rdi],dx
   1400196be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400196c0:	fs gs js 0x140019704
   1400196c4:	rex pop rax
   1400196c6:	pop    rdx
   1400196c7:	add    BYTE PTR [rbp+0x65733f17],dl
   1400196cd:	je     0x140019712
   1400196cf:	jne    0x140019743
   1400196d1:	jb     0x140019738
   1400196d3:	outs   dx,BYTE PTR ds:[rsi]
   1400196d4:	je     0x14001971f
   1400196d6:	outs   dx,BYTE PTR ds:[rsi]
   1400196d7:	fs gs js 0x14001971b
   1400196db:	push   rcx
   1400196dc:	(bad)
   1400196e2:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400196e6:	gs ins DWORD PTR es:[rdi],dx
   1400196e8:	push   rsi
   1400196e9:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400196f0:	rex.B
   1400196f1:	pop    r8
   1400196f3:	rex.B
   1400196f4:	rex.RB
   1400196f5:	rex.X push rsi
   1400196f7:	push   rcx
   1400196f8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400196fa:	fs gs ins BYTE PTR es:[rdi],dx
   1400196fd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400196ff:	fs gs js 0x140019743
   140019703:	rex
   140019704:	rex pop rdx
   140019706:	add    BYTE PTR [rax],al
   140019708:	sbb    DWORD PTR [rcx],esp
   14001970a:	(bad)  
   14001970b:	ja     0x14001976e
   14001970d:	jb     0x14001977d
   14001970f:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   140019716:	jae    0x14001978b
   140019718:	(bad)  
   140019719:	rex.X outs dx,DWORD PTR gs:[esi]
   14001971d:	js     0x14001975f
   14001971f:	rex push rbx
   140019721:	rex.B (bad) 
   140019723:	push   r15
   140019725:	xor    al,0x53
   140019727:	je     0x14001978a
   140019729:	outs   dx,BYTE PTR ds:[rsi]
   14001972a:	fs (bad) 
   14001972c:	jb     0x140019792
   14001972e:	rex.X jne 0x1400197a5
   140019731:	je     0x1400197a2
   140019733:	outs   dx,BYTE PTR ds:[rsi]
   140019734:	rex xor DWORD PTR [rax+0x50],eax
   140019738:	rex.RB
   140019739:	push   r14
   14001973b:	push   rcx
   14001973c:	push   rdi
   14001973d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   140019745:	rex.RB
   140019746:	rex.X push rsi
   140019748:	push   rcx
   140019749:	push   rbx
   14001974a:	je     0x1400197be
   14001974c:	imul   ebp,DWORD PTR [rsi+0x67],0x56314040
   140019753:	(bad)  
   140019754:	and    al,0x51
   140019756:	rex.RX ins BYTE PTR es:[rdi],dx
   140019758:	(bad)  
   140019759:	addr32 jae 0x14001979c
   14001975c:	push   rdi
   14001975d:	xor    al,0x53
   14001975f:	je     0x1400197c2
   140019761:	outs   dx,BYTE PTR ds:[rsi]
   140019762:	fs (bad) 
   140019764:	jb     0x1400197ca
   140019766:	rex.X jne 0x1400197dd
   140019769:	je     0x1400197da
   14001976b:	outs   dx,BYTE PTR ds:[rsi]
   14001976c:	rex push rcx
   14001976e:	rex.WRB
   14001976f:	gs jae 0x1400197e5
   140019772:	(bad)  
   140019773:	rex.X outs dx,DWORD PTR gs:[esi]
   140019777:	js     0x1400197b9
   140019779:	rex
   14001977a:	rex
   14001977b:	rex push rdi
   14001977d:	xor    al,0x32
   14001977f:	xor    DWORD PTR [rax+0x40],eax
   140019782:	pop    rdx
   140019783:	add    BYTE PTR [rdx],ch
   140019785:	or     al,0x3f
   140019787:	addr32 gs je 0x1400197df
   14001978b:	gs js  0x140019802
   14001978e:	rex push rcx
   140019790:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140019792:	jo     0x140019809
   140019794:	je     0x1400197da
   140019796:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   14001979d:	push   rbx
   14001979e:	rex.B (bad) 
   1400197a0:	push   r14
   1400197a2:	push   rcx
   1400197a3:	push   rbx
   1400197a4:	je     0x140019818
   1400197a6:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   1400197ad:	push   r14
   1400197af:	push   rcx
   1400197b0:	push   rdi
   1400197b1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   1400197b9:	rex.RB
   1400197ba:	rex.X push rsi
   1400197bc:	xor    al,BYTE PTR [rax+0x31]
   1400197bf:	push   rdi
   1400197c0:	xor    al,0x45
   1400197c2:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400197c5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400197c7:	fs gs rex push rcx
   1400197cb:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400197d3:	rex
   1400197d4:	rex xor DWORD PTR [rax+0x45],edx
   1400197d8:	pop    r15
   1400197da:	rex.WRX push rsi
   1400197dc:	(bad)  
   1400197dd:	and    al,0x51
   1400197df:	rex.RX ins BYTE PTR es:[rdi],dx
   1400197e1:	(bad)  
   1400197e2:	addr32 jae 0x140019825
   1400197e5:	push   rdi
   1400197e6:	xor    al,0x57
   1400197e8:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   1400197ef:	jo     0x140019856
   1400197f1:	rex push rcx
   1400197f3:	je     0x140019835
   1400197f5:	rex
   1400197f6:	rex
   1400197f7:	rex push rsi
   1400197f9:	(bad)  
   1400197fa:	and    al,0x51
   1400197fc:	rex.RX ins BYTE PTR es:[rdi],dx
   1400197fe:	(bad)  
   1400197ff:	addr32 jae 0x140019842
   140019802:	push   rdi
   140019803:	xor    al,0x49
   140019805:	outs   dx,BYTE PTR ds:[rsi]
   140019806:	jo     0x14001987d
   140019808:	je     0x140019857
   14001980a:	gs je  0x140019875
   14001980d:	outs   dx,DWORD PTR ds:[rsi]
   14001980e:	imul   rbp,QWORD PTR fs:[rsi+0x74],0x40745140
   140019817:	rex
   140019818:	rex
   140019819:	rex
   14001981a:	rex pop rdx
   14001981c:	add    BYTE PTR [rax],al
   14001981e:	sbb    DWORD PTR [rdx],eax
   140019820:	(bad)  
   140019821:	(bad)  
   140019822:	xor    DWORD PTR [rcx+0x4d],edx
   140019825:	outs   dx,BYTE PTR gs:[rsi]
   140019827:	jne    0x140019869
   140019829:	rex push rbp
   14001982b:	rex.RB
   14001982c:	rex.B
   14001982d:	rex.B
   14001982e:	rex pop rax
   140019830:	pop    rdx
   140019831:	add    BYTE PTR [rdi+0x61643f09],cl
   140019837:	je     0x14001989a
   140019839:	rex push rcx
   14001983b:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140019840:	outs   dx,BYTE PTR ds:[rsi]
   140019841:	rex
   140019842:	rex push rcx
   140019844:	rex.RB
   140019845:	rex.X
   140019846:	rex.B (bad) 
   140019848:	push   r14
   14001984a:	push   rcx
   14001984b:	push   rsi
   14001984c:	(bad)  
   14001984d:	jb     0x1400198b8
   14001984f:	(bad)  
   140019850:	outs   dx,BYTE PTR ds:[rsi]
   140019851:	je     0x140019893
   140019853:	rex pop rax
   140019855:	pop    rdx
   140019856:	add    BYTE PTR [rax],al
   140019858:	(bad)  
   140019859:	or     edi,DWORD PTR [rdi]
   14001985b:	gs js  0x1400198c3
   14001985e:	movsxd eax,DWORD PTR [rax+0x51]
   140019861:	rex.WRB
   140019862:	outs   dx,BYTE PTR gs:[rsi]
   140019864:	jne    0x1400198a6
   140019866:	rex push rcx
   140019868:	rex.RB
   140019869:	rex.B
   14001986a:	push   r8
   14001986c:	rex.RB
   14001986d:	push   r14
   14001986f:	push   rcx
   140019870:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140019875:	outs   dx,BYTE PTR ds:[rsi]
   140019876:	rex
   140019877:	rex
   140019878:	rex.B
   140019879:	rex.RB
   14001987a:	rex.X push rsi
   14001987c:	push   rcx
   14001987d:	push   rax
   14001987e:	outs   dx,DWORD PTR ds:[rsi]
   14001987f:	imul   ebp,DWORD PTR [rsi+0x74],0x45504040
   140019886:	push   r14
   140019888:	xor    al,BYTE PTR [rax+0x40]
   14001988b:	pop    rdx
   14001988c:	add    BYTE PTR [rax],al
   14001988e:	call   0x1a16ed7a2
   140019893:	jo     0x1400198e9
   140019895:	outs   dx,DWORD PTR ds:[rsi]
   140019896:	rex.RXB ins BYTE PTR es:[rdi],dx
   140019898:	outs   dx,DWORD PTR ds:[rsi]
   140019899:	(bad)
   14001989e:	push   rdi
   14001989f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400198a7:	rex.RB
   1400198a8:	rex.X
   1400198a9:	rex.B (bad) 
   1400198ab:	push   r14
   1400198ad:	push   rcx
   1400198ae:	push   rax
   1400198af:	outs   dx,DWORD PTR ds:[rsi]
   1400198b0:	imul   ebp,DWORD PTR [rsi+0x74],0x45414040
   1400198b7:	rex.X push rsi
   1400198b9:	xor    al,BYTE PTR [rax+0x40]
   1400198bc:	pop    rdx
   1400198bd:	add    cl,ch
   1400198bf:	and    BYTE PTR [rdi],bh
   1400198c1:	jbe    0x14001992c
   1400198c3:	gs ja  0x140019936
   1400198c6:	outs   dx,DWORD PTR ds:[rsi]
   1400198c7:	jb     0x14001993d
   1400198c9:	rex push rcx
   1400198cb:	(bad)
   1400198d1:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400198d5:	jb     0x140019946
   1400198d7:	ins    BYTE PTR es:[rdi],dx
   1400198d8:	ins    BYTE PTR es:[rdi],dx
   1400198d9:	rex.B jb 0x140019941
   1400198dc:	(bad)  
   1400198dd:	rex
   1400198de:	rex push rcx
   1400198e0:	rex.RB
   1400198e1:	rex.X
   1400198e2:	push   r8
   1400198e4:	rex.RB
   1400198e5:	push   r14
   1400198e7:	push   rcx
   1400198e8:	push   rdi
   1400198e9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   1400198f1:	pop    rdx
   1400198f2:	add    BYTE PTR [rax],al
   1400198f4:	adc    BYTE PTR [rip+0x6464613f],al        # 0x1a465fa39
   1400198fa:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400198ff:	outs   dx,BYTE PTR ds:[rsi]
   140019900:	rex push rcx
   140019902:	push   rdi
   140019903:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001990b:	rex.RB
   14001990c:	rex.B
   14001990d:	pop    r8
   14001990f:	push   rax
   140019910:	rex.RB
   140019911:	push   r14
   140019913:	push   rcx
   140019914:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140019919:	outs   dx,BYTE PTR ds:[rsi]
   14001991a:	rex
   14001991b:	rex
   14001991c:	rex pop rdx
   14001991e:	add    BYTE PTR [rax],al
   140019920:	rol    DWORD PTR [rax],cl
   140019922:	(bad)  
   140019923:	(bad)  
   140019924:	xor    BYTE PTR [rcx+0x4d],dl
   140019927:	outs   dx,BYTE PTR gs:[rsi]
   140019929:	jne    0x14001996b
   14001992b:	rex push rcx
   14001992d:	rex.RB
   14001992e:	rex.B
   14001992f:	rex.B
   140019930:	rex push rax
   140019932:	rex.RB
   140019933:	push   r14
   140019935:	push   rcx
   140019936:	push   rdi
   140019937:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001993f:	pop    rdx
   140019940:	add    BYTE PTR [rax],al
   140019942:	push   rsp
   140019943:	sbb    edi,DWORD PTR [rdi]
   140019945:	jae    0x1400199ac
   140019947:	je     0x14001999d
   140019949:	gs js  0x1400199c0
   14001994c:	rex push rcx
   14001994e:	rex.WR (bad) 
   140019950:	(bad)  
   140019951:	gs ins BYTE PTR es:[rdi],dx
   140019953:	rex
   140019954:	rex push rcx
   140019956:	rex.RB
   140019957:	rex.B
   140019958:	pop    r8
   14001995a:	rex.B
   14001995b:	rex.RB
   14001995c:	rex.X push rsi
   14001995e:	push   rcx
   14001995f:	push   rbx
   140019960:	je     0x1400199d4
   140019962:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140019969:	add    BYTE PTR [rip+0x78653f0b],dl        # 0x1b866d87a
   14001996f:	movsxd eax,DWORD PTR gs:[rax+0x51]
   140019973:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001997b:	push   rbp
   14001997c:	rex.RB
   14001997d:	rex.B
   14001997e:	rex.B
   14001997f:	rex.W pop rax
   140019981:	pop    rdx
   140019982:	add    BYTE PTR [rax],al
   140019984:	mov    WORD PTR [rdi],ss
   140019986:	(bad)  
   140019987:	jae    0x1400199ee
   140019989:	je     0x1400199ce
   14001998b:	jne    0x1400199ff
   14001998d:	jb     0x1400199f4
   14001998f:	outs   dx,BYTE PTR ds:[rsi]
   140019990:	je     0x1400199d5
   140019992:	gs ins BYTE PTR es:[rdi],dx
   140019994:	ins    BYTE PTR es:[rdi],dx
   140019995:	rex push rcx
   140019997:	push   rsp
   140019998:	(bad)  
   140019999:	(bad)  
   14001999a:	ins    BYTE PTR es:[rdi],dx
   14001999b:	gs push rdi
   14001999d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400199a5:	rex.RB
   1400199a6:	rex.B
   1400199a7:	pop    r8
   1400199a9:	rex.W
   1400199aa:	rex.W
   1400199ab:	rex pop rdx
   1400199ad:	add    BYTE PTR [rsi+0x18],bl
   1400199b0:	(bad)  
   1400199b1:	jae    0x140019a18
   1400199b3:	je     0x1400199fb
   1400199b5:	outs   dx,DWORD PTR ds:[rsi]
   1400199b6:	movsxd esi,DWORD PTR [rbp+0x73]
   1400199b9:	rex push rcx
   1400199bb:	push   rdi
   1400199bc:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400199c4:	rex.RB
   1400199c5:	rex.B
   1400199c6:	pop    r8
   1400199c8:	push   rdi
   1400199c9:	xor    al,0x46
   1400199cb:	outs   dx,DWORD PTR ds:[rsi]
   1400199cc:	movsxd esi,DWORD PTR [rbp+0x73]
   1400199cf:	push   rdx
   1400199d0:	gs (bad) 
   1400199d2:	jae    0x140019a43
   1400199d4:	outs   dx,BYTE PTR ds:[rsi]
   1400199d5:	rex push rcx
   1400199d7:	je     0x140019a19
   1400199d9:	rex
   1400199da:	rex pop rdx
   1400199dc:	add    BYTE PTR [rax],al
   1400199de:	jge    0x1400199f5
   1400199e0:	(bad)  
   1400199e1:	jb     0x140019a48
   1400199e3:	jae    0x140019a4e
   1400199e5:	jp     0x140019a4c
   1400199e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400199e9:	ins    BYTE PTR es:[rdi],dx
   1400199ea:	jne    0x140019a59
   1400199ec:	outs   dx,BYTE PTR ds:[rsi]
   1400199ed:	push   rsp
   1400199ee:	outs   dx,DWORD PTR ds:[rsi]
   1400199ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400199f1:	outs   dx,BYTE PTR ds:[rsi]
   1400199f2:	je     0x140019a59
   1400199f4:	outs   dx,BYTE PTR ds:[rsi]
   1400199f5:	je     0x140019a6a
   1400199f7:	rex push rcx
   1400199f9:	push   rsp
   1400199fa:	(bad)  
   1400199fb:	(bad)  
   1400199fc:	ins    BYTE PTR es:[rdi],dx
   1400199fd:	gs push rsi
   1400199ff:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140019a06:	rex.B
   140019a07:	pop    r8
   140019a09:	rex.W
   140019a0a:	rex pop rdx
   140019a0c:	add    BYTE PTR [rax],al
   140019a0e:	push   0x1
   140019a10:	(bad)  
   140019a11:	(bad)  
   140019a12:	xor    BYTE PTR [rcx+0x54],dl
   140019a15:	(bad)  
   140019a16:	(bad)  
   140019a17:	ins    BYTE PTR es:[rdi],dx
   140019a18:	gs push rdi
   140019a1a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019a22:	ins    DWORD PTR es:[rdi],dx
   140019a23:	rex
   140019a24:	rex push rcx
   140019a26:	rex.RB
   140019a27:	rex.B
   140019a28:	rex.B
   140019a29:	rex
   140019a2a:	rex.W
   140019a2b:	rex pop rdx
   140019a2d:	add    BYTE PTR [rbx],al
   140019a2f:	sbb    DWORD PTR [rdi],edi
   140019a31:	jae    0x140019a98
   140019a33:	je     0x140019a7e
   140019a35:	je     0x140019a9c
   140019a37:	ins    DWORD PTR es:[rdi],dx
   140019a38:	rex push rcx
   140019a3a:	push   rsp
   140019a3b:	(bad)  
   140019a3c:	(bad)  
   140019a3d:	ins    BYTE PTR es:[rdi],dx
   140019a3e:	gs push rdi
   140019a40:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019a48:	rex.RB
   140019a49:	rex.B
   140019a4a:	pop    r8
   140019a4c:	rex.W
   140019a4d:	rex.W push rax
   140019a4f:	rex.RB
   140019a50:	push   r14
   140019a52:	push   rcx
   140019a53:	push   rsp
   140019a54:	(bad)  
   140019a55:	(bad)  
   140019a56:	ins    BYTE PTR es:[rdi],dx
   140019a57:	gs push rdi
   140019a59:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019a61:	ins    DWORD PTR es:[rdi],dx
   140019a62:	rex
   140019a63:	rex
   140019a64:	rex pop rdx
   140019a66:	add    BYTE PTR [rax],al
   140019a68:	push   rbp
   140019a69:	sbb    BYTE PTR [rdi],bh
   140019a6b:	jae    0x140019ad2
   140019a6d:	je     0x140019ab5
   140019a6f:	ins    BYTE PTR es:[rdi],dx
   140019a70:	(bad)  
   140019a71:	addr32 jae 0x140019ab4
   140019a74:	push   rcx
   140019a75:	push   rsp
   140019a76:	(bad)  
   140019a77:	(bad)  
   140019a78:	ins    BYTE PTR es:[rdi],dx
   140019a79:	gs push rdi
   140019a7b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019a83:	ins    DWORD PTR es:[rdi],dx
   140019a84:	rex
   140019a85:	rex push rcx
   140019a87:	rex.RB
   140019a88:	rex.B
   140019a89:	pop    r8
   140019a8b:	push   rsi
   140019a8c:	(bad)  
   140019a8d:	and    al,0x51
   140019a8f:	rex.RX ins BYTE PTR es:[rdi],dx
   140019a91:	(bad)  
   140019a92:	addr32 jae 0x140019ad5
   140019a95:	push   rdi
   140019a96:	xor    al,0x49
   140019a98:	je     0x140019aff
   140019a9a:	ins    DWORD PTR es:[rdi],dx
   140019a9b:	rex.RX ins BYTE PTR es:[rdi],dx
   140019a9d:	(bad)  
   140019a9e:	addr32 rex push rcx
   140019aa1:	je     0x140019ae3
   140019aa3:	rex
   140019aa4:	rex
   140019aa5:	rex
   140019aa6:	rex pop rdx
   140019aa8:	add    BYTE PTR [rax],al
   140019aaa:	imul   eax,DWORD PTR [rcx],0x51303f3f
   140019ab0:	push   rsp
   140019ab1:	(bad)  
   140019ab2:	(bad)  
   140019ab3:	ins    BYTE PTR es:[rdi],dx
   140019ab4:	gs push rdi
   140019ab6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019abe:	ins    DWORD PTR es:[rdi],dx
   140019abf:	rex
   140019ac0:	rex push rcx
   140019ac2:	rex.RB
   140019ac3:	rex.B
   140019ac4:	rex.B
   140019ac5:	rex
   140019ac6:	rex.B
   140019ac7:	rex.RB
   140019ac8:	rex.X push rsi
   140019aca:	push   rcx
   140019acb:	push   rbx
   140019acc:	je     0x140019b40
   140019ace:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   140019ad5:	pop    rdx
   140019ad6:	add    BYTE PTR [rax],al
   140019ad8:	jno    0x140019af4
   140019ada:	(bad)  
   140019adb:	jae    0x140019b42
   140019add:	je     0x140019b31
   140019adf:	outs   dx,DWORD PTR ds:[rsi]
   140019ae0:	ja     0x140019b25
   140019ae2:	outs   dx,DWORD PTR ds:[rsi]
   140019ae3:	jne    0x140019b53
   140019ae5:	je     0x140019b27
   140019ae7:	push   rcx
   140019ae8:	push   rsp
   140019ae9:	(bad)  
   140019aea:	(bad)  
   140019aeb:	ins    BYTE PTR es:[rdi],dx
   140019aec:	gs push rdi
   140019aee:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019af6:	rex.RB
   140019af7:	rex.B
   140019af8:	pop    r8
   140019afa:	rex.W
   140019afb:	rex pop rdx
   140019afd:	add    bh,ah
   140019aff:	adc    eax,0x776f723f
   140019b04:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019b06:	jne    0x140019b76
   140019b08:	je     0x140019b4a
   140019b0a:	push   rcx
   140019b0b:	push   rsp
   140019b0c:	(bad)  
   140019b0d:	(bad)  
   140019b0e:	ins    BYTE PTR es:[rdi],dx
   140019b0f:	gs push rdi
   140019b11:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019b19:	rex.RB
   140019b1a:	rex.X
   140019b1b:	rex.B
   140019b1c:	rex.W pop rax
   140019b1e:	pop    rdx
   140019b1f:	add    BYTE PTR [rbx],al
   140019b21:	(bad)  
   140019b22:	(bad)  
   140019b23:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
   140019b27:	gs rex push rcx
   140019b2a:	push   rsp
   140019b2b:	(bad)  
   140019b2c:	(bad)  
   140019b2d:	ins    BYTE PTR es:[rdi],dx
   140019b2e:	gs push rdi
   140019b30:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019b38:	ins    DWORD PTR es:[rdi],dx
   140019b39:	rex
   140019b3a:	rex push rbp
   140019b3c:	rex.RB
   140019b3d:	rex.X
   140019b3e:	push   r8
   140019b40:	rex.RB
   140019b41:	push   r14
   140019b43:	xor    DWORD PTR [rax+0x58],eax
   140019b46:	pop    rdx
   140019b47:	add    BYTE PTR [rcx+rcx*1+0x7461643f],dl
   140019b4e:	(bad)  
   140019b4f:	rex push rcx
   140019b51:	push   rsp
   140019b52:	(bad)  
   140019b53:	(bad)  
   140019b54:	ins    BYTE PTR es:[rdi],dx
   140019b55:	gs push rdi
   140019b57:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019b5f:	ins    DWORD PTR es:[rdi],dx
   140019b60:	rex
   140019b61:	rex push rbp
   140019b63:	rex.RB
   140019b64:	rex.X
   140019b65:	rex.B (bad) 
   140019b67:	push   r14
   140019b69:	push   rcx
   140019b6a:	push   rsi
   140019b6b:	(bad)  
   140019b6c:	jb     0x140019bd7
   140019b6e:	(bad)  
   140019b6f:	outs   dx,BYTE PTR ds:[rsi]
   140019b70:	je     0x140019bb2
   140019b72:	rex
   140019b73:	rex.W
   140019b74:	rex pop rdx
   140019b76:	add    BYTE PTR [rax],al
   140019b78:	(bad)
   140019b7b:	jae    0x140019be2
   140019b7d:	je     0x140019bc3
   140019b7f:	(bad)  
   140019b80:	je     0x140019be3
   140019b82:	rex push rcx
   140019b84:	push   rsp
   140019b85:	(bad)  
   140019b86:	(bad)  
   140019b87:	ins    BYTE PTR es:[rdi],dx
   140019b88:	gs push rdi
   140019b8a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019b92:	ins    DWORD PTR es:[rdi],dx
   140019b93:	rex
   140019b94:	rex push rbp
   140019b96:	rex.RB
   140019b97:	rex.B
   140019b98:	pop    r8
   140019b9a:	rex.W
   140019b9b:	rex.B
   140019b9c:	rex.RB
   140019b9d:	rex.X push rsi
   140019b9f:	push   rcx
   140019ba0:	push   rsi
   140019ba1:	(bad)  
   140019ba2:	jb     0x140019c0d
   140019ba4:	(bad)  
   140019ba5:	outs   dx,BYTE PTR ds:[rsi]
   140019ba6:	je     0x140019be8
   140019ba8:	rex
   140019ba9:	rex pop rdx
   140019bab:	add    dh,dl
   140019bad:	add    bh,BYTE PTR [rdi]
   140019baf:	(bad)  
   140019bb0:	rex.WRB push r9
   140019bb2:	push   rsp
   140019bb3:	(bad)  
   140019bb4:	(bad)  
   140019bb5:	ins    BYTE PTR es:[rdi],dx
   140019bb6:	gs push rdi
   140019bb8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019bc0:	ins    DWORD PTR es:[rdi],dx
   140019bc1:	rex
   140019bc2:	rex push rbp
   140019bc4:	rex.RB
   140019bc5:	rex.X
   140019bc6:	pop    r15
   140019bc8:	rex.WRX
   140019bc9:	rex.B
   140019bca:	rex.RB
   140019bcb:	rex.X push rsi
   140019bcd:	xor    BYTE PTR [rax+0x40],al
   140019bd0:	pop    rdx
   140019bd1:	add    ah,ah
   140019bd3:	adc    al,0x3f
   140019bd5:	jb     0x140019c3c
   140019bd7:	(bad)  
   140019bd8:	fs rex push rcx
   140019bdb:	push   rsp
   140019bdc:	(bad)  
   140019bdd:	(bad)  
   140019bde:	ins    BYTE PTR es:[rdi],dx
   140019bdf:	gs push rdi
   140019be1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019be9:	ins    DWORD PTR es:[rdi],dx
   140019bea:	rex
   140019beb:	rex push rbp
   140019bed:	rex.RB
   140019bee:	rex.B
   140019bef:	pop    r8
   140019bf1:	rex.B
   140019bf2:	rex.RB
   140019bf3:	push   r14
   140019bf5:	push   rcx
   140019bf6:	rex.R (bad) 
   140019bf8:	je     0x140019c5b
   140019bfa:	push   rbx
   140019bfb:	je     0x140019c6f
   140019bfd:	gs (bad) 
   140019bff:	ins    DWORD PTR es:[rdi],dx
   140019c00:	rex
   140019c01:	rex
   140019c02:	rex pop rdx
   140019c04:	add    BYTE PTR [rax],al
   140019c06:	test   DWORD PTR [rcx],esp
   140019c08:	(bad)  
   140019c09:	ja     0x140019c7d
   140019c0b:	imul   esi,DWORD PTR [rbp+riz*2+0x40],0x62615451
   140019c13:	ins    BYTE PTR es:[rdi],dx
   140019c14:	gs push rdi
   140019c16:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019c1e:	ins    DWORD PTR es:[rdi],dx
   140019c1f:	rex
   140019c20:	rex push rbp
   140019c22:	rex.RB
   140019c23:	rex.X
   140019c24:	pop    r8
   140019c26:	rex.B
   140019c27:	rex.RB
   140019c28:	push   r14
   140019c2a:	push   rcx
   140019c2b:	rex.R (bad) 
   140019c2d:	je     0x140019c90
   140019c2f:	push   rbx
   140019c30:	je     0x140019ca4
   140019c32:	gs (bad) 
   140019c34:	ins    DWORD PTR es:[rdi],dx
   140019c35:	rex
   140019c36:	rex
   140019c37:	rex pop rdx
   140019c39:	add    BYTE PTR [rax+0x2],ah
   140019c3c:	(bad)  
   140019c3d:	(bad)  
   140019c3e:	xor    DWORD PTR [rcx+0x54],edx
   140019c41:	(bad)  
   140019c42:	(bad)  
   140019c43:	ins    BYTE PTR es:[rdi],dx
   140019c44:	gs push rdi
   140019c46:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140019c4e:	ins    DWORD PTR es:[rdi],dx
   140019c4f:	rex
   140019c50:	rex push rbp
   140019c52:	rex.RB
   140019c53:	rex.B
   140019c54:	rex.B
   140019c55:	rex pop rax
   140019c57:	pop    rdx
   140019c58:	add    BYTE PTR [rax],al
   140019c5a:	adc    ebx,DWORD PTR [rax]
   140019c5c:	(bad)  
   140019c5d:	jae    0x140019cc4
   140019c5f:	je     0x140019ca6
   140019c61:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x72],0x65676769
   140019c6a:	jb     0x140019cdf
   140019c6c:	rex push rcx
   140019c6e:	(bad)
   140019c74:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140019c78:	gs ins DWORD PTR es:[rdi],dx
   140019c7a:	push   rsi
   140019c7b:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140019c82:	rex.B
   140019c83:	pop    r8
   140019c85:	push   rsi
   140019c86:	(bad)  
   140019c87:	and    al,0x51
   140019c89:	rex.RX ins BYTE PTR es:[rdi],dx
   140019c8b:	(bad)  
   140019c8c:	addr32 jae 0x140019ccf
   140019c8f:	push   rdi
   140019c90:	xor    al,0x45
   140019c92:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x72],0x65676769
   140019c9b:	jb     0x140019cdd
   140019c9d:	push   rcx
   140019c9e:	(bad)
   140019ca4:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140019ca8:	gs ins DWORD PTR es:[rdi],dx
   140019caa:	push   rsi
   140019cab:	imul   esp,DWORD PTR [rbp+0x77],0x40404040
   140019cb2:	rex pop rdx
   140019cb4:	add    BYTE PTR [rax],al
   140019cb6:	(bad)  
   140019cb7:	sbb    BYTE PTR [rdi],bh
   140019cb9:	jae    0x140019d20
   140019cbb:	je     0x140019d05
   140019cbd:	outs   dx,DWORD PTR ds:[rsi]
   140019cbe:	jb     0x140019d29
   140019cc0:	jp     0x140019d31
   140019cc2:	outs   dx,BYTE PTR ds:[rsi]
   140019cc3:	je     0x140019d26
   140019cc5:	ins    BYTE PTR es:[rdi],dx
   140019cc6:	rex.W
   140019cc7:	gs (bad) 
   140019cc9:	fs gs jb 0x140019d19
   140019ccd:	(bad)  
   140019cce:	(bad)  
   140019ccf:	gs ins BYTE PTR es:[rdi],dx
   140019cd1:	jae    0x140019d13
   140019cd3:	push   rcx
   140019cd4:	push   rsp
   140019cd5:	(bad)  
   140019cd6:	(bad)  
   140019cd7:	ins    BYTE PTR es:[rdi],dx
   140019cd8:	gs push rdi
   140019cda:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019ce2:	rex.RB
   140019ce3:	rex.B
   140019ce4:	pop    r8
   140019ce6:	rex.B
   140019ce7:	rex.RB
   140019ce8:	rex.X push rsi
   140019cea:	push   rcx
   140019ceb:	push   rbx
   140019cec:	je     0x140019d60
   140019cee:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019cf5:	rex
   140019cf6:	rex
   140019cf7:	rex pop rdx
   140019cf9:	add    BYTE PTR [rax+0x17],ah
   140019cfc:	(bad)  
   140019cfd:	jae    0x140019d64
   140019cff:	je     0x140019d44
   140019d01:	outs   dx,DWORD PTR ds:[rsi]
   140019d02:	ins    BYTE PTR es:[rdi],dx
   140019d03:	jne    0x140019d72
   140019d05:	outs   dx,BYTE PTR ds:[rsi]
   140019d06:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019d08:	jne    0x140019d78
   140019d0a:	je     0x140019d4c
   140019d0c:	push   rcx
   140019d0d:	push   rsp
   140019d0e:	(bad)  
   140019d0f:	(bad)  
   140019d10:	ins    BYTE PTR es:[rdi],dx
   140019d11:	gs push rdi
   140019d13:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019d1b:	rex.RB
   140019d1c:	rex.B
   140019d1d:	pop    r8
   140019d1f:	rex.W
   140019d20:	rex pop rdx
   140019d22:	add    BYTE PTR [rax],al
   140019d24:	add    bl,BYTE PTR [rbx]
   140019d26:	(bad)  
   140019d27:	jae    0x140019d8e
   140019d29:	je     0x140019d7e
   140019d2b:	je     0x140019d8e
   140019d2d:	outs   dx,BYTE PTR ds:[rsi]
   140019d2e:	fs (bad) 
   140019d30:	jb     0x140019d96
   140019d32:	rex.X jne 0x140019da9
   140019d35:	je     0x140019da6
   140019d37:	outs   dx,BYTE PTR ds:[rsi]
   140019d38:	jae    0x140019d7a
   140019d3a:	push   rcx
   140019d3b:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019d43:	je     0x140019db9
   140019d45:	outs   dx,DWORD PTR ds:[rsi]
   140019d46:	outs   dx,BYTE PTR ds:[rsi]
   140019d47:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019d49:	js     0x140019d8b
   140019d4b:	rex push rcx
   140019d4d:	rex.RB
   140019d4e:	rex.B
   140019d4f:	pop    r8
   140019d51:	push   rsi
   140019d52:	(bad)  
   140019d53:	and    al,0x51
   140019d55:	rex.RX ins BYTE PTR es:[rdi],dx
   140019d57:	(bad)  
   140019d58:	addr32 jae 0x140019d9b
   140019d5b:	push   rdi
   140019d5c:	xor    al,0x53
   140019d5e:	je     0x140019dc1
   140019d60:	outs   dx,BYTE PTR ds:[rsi]
   140019d61:	fs (bad) 
   140019d63:	jb     0x140019dc9
   140019d65:	rex.X jne 0x140019ddc
   140019d68:	je     0x140019dd9
   140019d6a:	outs   dx,BYTE PTR ds:[rsi]
   140019d6b:	rex push rcx
   140019d6d:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019d75:	je     0x140019deb
   140019d77:	outs   dx,DWORD PTR ds:[rsi]
   140019d78:	outs   dx,BYTE PTR ds:[rsi]
   140019d79:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019d7b:	js     0x140019dbd
   140019d7d:	rex
   140019d7e:	rex
   140019d7f:	rex
   140019d80:	rex pop rdx
   140019d82:	add    BYTE PTR [rax],al
   140019d84:	mov    ebp,0x303f3f00
   140019d89:	push   rcx
   140019d8a:	rex.WR (bad) 
   140019d8c:	(bad)  
   140019d8d:	gs ins BYTE PTR es:[rdi],dx
   140019d8f:	rex
   140019d90:	rex push rcx
   140019d92:	rex.RB
   140019d93:	rex.B
   140019d94:	rex.B
   140019d95:	rex push rax
   140019d97:	rex.RB
   140019d98:	push   r14
   140019d9a:	push   rcx
   140019d9b:	push   rdi
   140019d9c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   140019da4:	(bad)  
   140019da5:	and    al,0x51
   140019da7:	rex.RX ins BYTE PTR es:[rdi],dx
   140019da9:	(bad)  
   140019daa:	addr32 jae 0x140019ded
   140019dad:	push   rdi
   140019dae:	xor    al,0x57
   140019db0:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140019db7:	jo     0x140019e1e
   140019db9:	rex push rcx
   140019dbb:	je     0x140019dfd
   140019dbd:	rex
   140019dbe:	rex
   140019dbf:	rex
   140019dc0:	rex pop rdx
   140019dc2:	add    BYTE PTR [rax],al
   140019dc4:	add    WORD PTR [rdi],di
   140019dc7:	(bad)  
   140019dc8:	xor    BYTE PTR [rcx+0x54],dl
   140019dcb:	(bad)  
   140019dcc:	(bad)  
   140019dcd:	ins    BYTE PTR es:[rdi],dx
   140019dce:	gs push rdi
   140019dd0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019dd8:	rex.RB
   140019dd9:	rex.B
   140019dda:	rex.B
   140019ddb:	rex push rax
   140019ddd:	rex.RB
   140019dde:	push   r14
   140019de0:	push   rcx
   140019de1:	push   rdi
   140019de2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019dea:	pop    rdx
   140019deb:	add    BYTE PTR [rdx],bh
   140019ded:	add    BYTE PTR [rdi],bh
   140019def:	(bad)  
   140019df0:	xor    BYTE PTR [rcx+0x44],dl
   140019df3:	imul   esp,DWORD PTR [rcx+0x6c],0x7542676f
   140019dfa:	je     0x140019e70
   140019dfc:	outs   dx,DWORD PTR ds:[rsi]
   140019dfd:	outs   dx,BYTE PTR ds:[rsi]
   140019dfe:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019e00:	js     0x140019e42
   140019e02:	rex push rcx
   140019e04:	rex.RB
   140019e05:	rex.B
   140019e06:	rex.B
   140019e07:	rex push rax
   140019e09:	rex.RB
   140019e0a:	push   r14
   140019e0c:	push   rcx
   140019e0d:	push   rdi
   140019e0e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019e16:	pop    rdx
   140019e17:	add    BYTE PTR [rcx],bh
   140019e19:	add    BYTE PTR [rdi],bh
   140019e1b:	(bad)  
   140019e1c:	xor    BYTE PTR [rcx+0x44],dl
   140019e1f:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   140019e26:	push   rcx
   140019e27:	rex.RB
   140019e28:	rex.B
   140019e29:	rex.B
   140019e2a:	rex push rax
   140019e2c:	rex.RB
   140019e2d:	push   r14
   140019e2f:	push   rcx
   140019e30:	push   rdi
   140019e31:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   140019e39:	(bad)  
   140019e3a:	and    al,0x51
   140019e3c:	rex.RX ins BYTE PTR es:[rdi],dx
   140019e3e:	(bad)  
   140019e3f:	addr32 jae 0x140019e82
   140019e42:	push   rdi
   140019e43:	xor    al,0x57
   140019e45:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140019e4c:	jo     0x140019eb3
   140019e4e:	rex push rcx
   140019e50:	je     0x140019e92
   140019e52:	rex
   140019e53:	rex
   140019e54:	rex
   140019e55:	rex pop rdx
   140019e57:	add    BYTE PTR [rbx],al
   140019e59:	or     edi,DWORD PTR [rdi]
   140019e5b:	gs jbe 0x140019ec3
   140019e5e:	outs   dx,BYTE PTR ds:[rsi]
   140019e5f:	je     0x140019ea7
   140019e61:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   140019e69:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   140019e70:	rex.WRB
   140019e71:	rex.RB
   140019e72:	rex.B
   140019e73:	pop    r15
   140019e75:	rex.WRX push rax
   140019e77:	rex.RB
   140019e78:	push   r14
   140019e7a:	push   rcx
   140019e7b:	rex.WRXB (bad) 
   140019e7d:	push   0x65
   140019e7f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019e83:	push   rax
   140019e84:	rex.RB
   140019e85:	push   r14
   140019e87:	push   rcx
   140019e88:	rex.RB jbe 0x140019ef0
   140019e8b:	outs   dx,BYTE PTR ds:[rsi]
   140019e8c:	je     0x140019ece
   140019e8e:	rex
   140019e8f:	rex pop rdx
   140019e91:	add    dl,dl
   140019e93:	sbb    edi,DWORD PTR [rdi]
   140019e95:	jae    0x140019efc
   140019e97:	je     0x140019eef
   140019e99:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   140019ea0:	push   rcx
   140019ea1:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019ea9:	push   rbp
   140019eaa:	rex.RB
   140019eab:	rex.B
   140019eac:	pop    r8
   140019eae:	pop    rdi
   140019eaf:	rex.WRX
   140019eb0:	rex pop rdx
   140019eb2:	add    BYTE PTR [rax],al
   140019eb4:	(bad)  
   140019eb5:	sbb    al,0x3f
   140019eb7:	jae    0x140019f22
   140019eb9:	jp     0x140019f20
   140019ebb:	imul   rbp,QWORD PTR [rsi+0x74],0x69445140
   140019ec3:	(bad)  
   140019ec4:	ins    BYTE PTR es:[rdi],dx
   140019ec5:	outs   dx,DWORD PTR ds:[rsi]
   140019ec6:	addr32 rex
   140019ec8:	rex push rbp
   140019eca:	rex.RB
   140019ecb:	rex.X
   140019ecc:	rex.B (bad) 
   140019ece:	push   r14
   140019ed0:	push   rcx
   140019ed1:	push   rbx
   140019ed2:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140019ed9:	add    BYTE PTR [rdx],cl
   140019edb:	adc    DWORD PTR [rdi],edi
   140019edd:	ins    DWORD PTR es:[rdi],dx
   140019ede:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140019ee5:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140019eec:	rex push rcx
   140019eee:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019ef6:	push   rbp
   140019ef7:	rex.RB
   140019ef8:	rex.X
   140019ef9:	rex.B (bad) 
   140019efb:	push   r14
   140019efd:	push   rcx
   140019efe:	push   rbx
   140019eff:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140019f06:	add    BYTE PTR [rax],al
   140019f08:	rex.RB (bad) 
   140019f0b:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140019f0f:	jb     0x140019f76
   140019f11:	jae    0x140019f86
   140019f13:	rex.RB jbe 0x140019f7b
   140019f16:	outs   dx,BYTE PTR ds:[rsi]
   140019f17:	je     0x140019f59
   140019f19:	push   rcx
   140019f1a:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019f22:	rex.WRB
   140019f23:	rex.RB
   140019f24:	rex.B
   140019f25:	pop    r8
   140019f27:	push   rax
   140019f28:	rex.RB
   140019f29:	push   r14
   140019f2b:	push   rcx
   140019f2c:	rex.WXB
   140019f2d:	gs jns 0x140019f75
   140019f30:	jbe    0x140019f97
   140019f32:	outs   dx,BYTE PTR ds:[rsi]
   140019f33:	je     0x140019f75
   140019f35:	rex
   140019f36:	rex pop rdx
   140019f38:	add    BYTE PTR [rax],al
   140019f3a:	mov    edx,DWORD PTR [rip+0x7365723f]        # 0x1b367117f
   140019f40:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   140019f47:	je     0x140019f89
   140019f49:	push   rcx
   140019f4a:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019f52:	rex.WRB
   140019f53:	rex.RB
   140019f54:	rex.B
   140019f55:	pop    r8
   140019f57:	push   rax
   140019f58:	rex.RB
   140019f59:	push   r14
   140019f5b:	push   rcx
   140019f5c:	push   rdx
   140019f5d:	gs jae 0x140019fc9
   140019f60:	jp     0x140019fc7
   140019f62:	rex.RB jbe 0x140019fca
   140019f65:	outs   dx,BYTE PTR ds:[rsi]
   140019f66:	je     0x140019fa8
   140019f68:	rex
   140019f69:	rex pop rdx
   140019f6b:	add    BYTE PTR [rip+0x6c633f07],cl        # 0x1ac64de78
   140019f71:	outs   dx,DWORD PTR ds:[rsi]
   140019f72:	jae    0x140019fd9
   140019f74:	rex.RB jbe 0x140019fdc
   140019f77:	outs   dx,BYTE PTR ds:[rsi]
   140019f78:	je     0x140019fba
   140019f7a:	push   rcx
   140019f7b:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019f83:	rex.WRB
   140019f84:	rex.RB
   140019f85:	rex.B
   140019f86:	pop    r8
   140019f88:	push   rax
   140019f89:	rex.RB
   140019f8a:	push   r14
   140019f8c:	push   rcx
   140019f8d:	rex.XB ins BYTE PTR es:[rdi],dx
   140019f8f:	outs   dx,DWORD PTR ds:[rsi]
   140019f90:	jae    0x140019ff7
   140019f92:	rex.RB jbe 0x140019ffa
   140019f95:	outs   dx,BYTE PTR ds:[rsi]
   140019f96:	je     0x140019fd8
   140019f98:	rex
   140019f99:	rex pop rdx
   140019f9b:	add    BYTE PTR [rbp+0x6f633f07],al
   140019fa1:	outs   dx,BYTE PTR ds:[rsi]
   140019fa2:	je     0x14001a009
   140019fa4:	js     0x14001a01a
   140019fa6:	rex.WRB
   140019fa7:	outs   dx,BYTE PTR gs:[rsi]
   140019fa9:	jne    0x140019ff0
   140019fab:	jbe    0x14001a012
   140019fad:	outs   dx,BYTE PTR ds:[rsi]
   140019fae:	je     0x140019ff0
   140019fb0:	push   rcx
   140019fb1:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019fb9:	rex.WRB
   140019fba:	rex.RB
   140019fbb:	rex.B
   140019fbc:	pop    r8
   140019fbe:	push   rax
   140019fbf:	rex.RB
   140019fc0:	push   r14
   140019fc2:	push   rcx
   140019fc3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019fc5:	outs   dx,BYTE PTR ds:[rsi]
   140019fc6:	je     0x14001a02d
   140019fc8:	js     0x14001a03e
   140019fca:	rex.WRB
   140019fcb:	outs   dx,BYTE PTR gs:[rsi]
   140019fcd:	jne    0x14001a014
   140019fcf:	jbe    0x14001a036
   140019fd1:	outs   dx,BYTE PTR ds:[rsi]
   140019fd2:	je     0x14001a014
   140019fd4:	rex
   140019fd5:	rex pop rdx
   140019fd7:	add    BYTE PTR [rbp+0x1c],cl
   140019fda:	(bad)  
   140019fdb:	jae    0x14001a045
   140019fdd:	outs   dx,DWORD PTR ds:[rsi]
   140019fde:	ja     0x14001a025
   140019fe0:	jbe    0x14001a047
   140019fe2:	outs   dx,BYTE PTR ds:[rsi]
   140019fe3:	je     0x14001a025
   140019fe5:	push   rcx
   140019fe6:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140019fee:	rex.WRB
   140019fef:	rex.RB
   140019ff0:	rex.B
   140019ff1:	pop    r8
   140019ff3:	push   rax
   140019ff4:	rex.RB
   140019ff5:	push   r14
   140019ff7:	push   rcx
   140019ff8:	push   rbx
   140019ff9:	push   0x7645776f
   140019ffe:	outs   dx,BYTE PTR gs:[rsi]
   14001a000:	je     0x14001a042
   14001a002:	rex
   14001a003:	rex pop rdx
   14001a005:	add    BYTE PTR [rsi],al
   14001a007:	adc    bh,BYTE PTR [rdi]
   14001a009:	outs   dx,DWORD PTR ds:[rsi]
   14001a00a:	jo     0x14001a071
   14001a00c:	outs   dx,BYTE PTR ds:[rsi]
   14001a00d:	rex push rcx
   14001a00f:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a017:	push   rbp
   14001a018:	rex.RB
   14001a019:	rex.B
   14001a01a:	pop    r8
   14001a01c:	pop    rax
   14001a01d:	pop    rdx
   14001a01e:	add    BYTE PTR [rax],al
   14001a020:	sti    
   14001a021:	or     DWORD PTR [rdi],edi
   14001a023:	outs   dx,DWORD PTR fs:[rsi]
   14001a025:	outs   dx,BYTE PTR ds:[rsi]
   14001a026:	gs rex push rcx
   14001a029:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a031:	push   rbp
   14001a032:	rex.RB
   14001a033:	rex.B
   14001a034:	pop    r8
   14001a036:	rex.W
   14001a037:	rex pop rdx
   14001a039:	add    BYTE PTR [rbp+0x63613f04],dh
   14001a03f:	movsxd esp,DWORD PTR [rbp+0x70]
   14001a042:	je     0x14001a084
   14001a044:	push   rcx
   14001a045:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a04d:	push   rbp
   14001a04e:	rex.RB
   14001a04f:	rex.B
   14001a050:	pop    r8
   14001a052:	pop    rax
   14001a053:	pop    rdx
   14001a054:	add    BYTE PTR [rax],al
   14001a056:	or     al,0x15
   14001a058:	(bad)  
   14001a059:	jb     0x14001a0c0
   14001a05b:	push   0x65
   14001a05d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a061:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a069:	push   rbp
   14001a06a:	rex.RB
   14001a06b:	rex.B
   14001a06c:	pop    r8
   14001a06e:	pop    rax
   14001a06f:	pop    rdx
   14001a070:	add    BYTE PTR [rax],al
   14001a072:	data16 adc BYTE PTR [rdi],bh
   14001a075:	ins    DWORD PTR es:[rdi],dx
   14001a076:	gs je  0x14001a0da
   14001a079:	rex.WRXB (bad) 
   14001a07b:	push   0x65
   14001a07d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a081:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001a089:	je     0x14001a0ff
   14001a08b:	outs   dx,DWORD PTR ds:[rsi]
   14001a08c:	outs   dx,BYTE PTR ds:[rsi]
   14001a08d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a08f:	js     0x14001a0d1
   14001a091:	rex push rbp
   14001a093:	rex.RB
   14001a094:	rex.X
   14001a095:	push   r8
   14001a097:	rex.RB
   14001a098:	rex.X push rbp
   14001a09a:	push   rcx
   14001a09b:	rex.WRB
   14001a09c:	gs je  0x14001a100
   14001a09f:	rex.WRXB (bad) 
   14001a0a1:	push   0x65
   14001a0a3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a0a7:	pop    rax
   14001a0a8:	pop    rdx
   14001a0a9:	add    cl,bl
   14001a0ab:	adc    edi,DWORD PTR [rdi]
   14001a0ad:	jno    0x14001a123
   14001a0af:	pop    rdi
   14001a0b0:	ins    DWORD PTR es:[rdi],dx
   14001a0b1:	gs je  0x14001a115
   14001a0b4:	movsxd esp,DWORD PTR [rcx+0x73]
   14001a0b7:	je     0x14001a0f9
   14001a0b9:	push   rcx
   14001a0ba:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001a0c2:	je     0x14001a138
   14001a0c4:	outs   dx,DWORD PTR ds:[rsi]
   14001a0c5:	outs   dx,BYTE PTR ds:[rsi]
   14001a0c6:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a0c8:	js     0x14001a10a
   14001a0ca:	rex push rbp
   14001a0cc:	rex.RB
   14001a0cd:	rex.B
   14001a0ce:	push   r8
   14001a0d0:	rex.RB
   14001a0d1:	pop    r8
   14001a0d3:	push   rax
   14001a0d4:	rex.RB
   14001a0d5:	rex.X
   14001a0d6:	rex.R
   14001a0d7:	rex pop rdx
   14001a0d9:	add    BYTE PTR [rdi+0x13],cl
   14001a0dc:	(bad)  
   14001a0dd:	jno    0x14001a153
   14001a0df:	pop    rdi
   14001a0e0:	ins    DWORD PTR es:[rdi],dx
   14001a0e1:	gs je  0x14001a145
   14001a0e4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a0e7:	ins    BYTE PTR es:[rdi],dx
   14001a0e8:	rex push rcx
   14001a0ea:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001a0f2:	je     0x14001a168
   14001a0f4:	outs   dx,DWORD PTR ds:[rsi]
   14001a0f5:	outs   dx,BYTE PTR ds:[rsi]
   14001a0f6:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a0f8:	js     0x14001a13a
   14001a0fa:	rex push rbp
   14001a0fc:	rex.RB
   14001a0fd:	rex.B
   14001a0fe:	rex.B
   14001a0ff:	rex.W push rdi
   14001a101:	xor    al,0x43
   14001a103:	(bad)  
   14001a104:	ins    BYTE PTR es:[rdi],dx
   14001a105:	ins    BYTE PTR es:[rdi],dx
   14001a106:	rex push rcx
   14001a108:	rex.WRB
   14001a109:	gs je  0x14001a16d
   14001a10c:	rex.WRXB (bad) 
   14001a10e:	push   0x65
   14001a110:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a114:	rex.W push rax
   14001a116:	rex.RB
   14001a117:	push   r8
   14001a119:	rex.RB
   14001a11a:	pop    r8
   14001a11c:	rex pop rdx
   14001a11e:	add    BYTE PTR [rax],al
   14001a120:	(bad)  
   14001a121:	or     bh,BYTE PTR [rdi]
   14001a123:	gs jbe 0x14001a18b
   14001a126:	outs   dx,BYTE PTR ds:[rsi]
   14001a127:	je     0x14001a169
   14001a129:	push   rcx
   14001a12a:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001a132:	je     0x14001a1a8
   14001a134:	outs   dx,DWORD PTR ds:[rsi]
   14001a135:	outs   dx,BYTE PTR ds:[rsi]
   14001a136:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a138:	js     0x14001a17a
   14001a13a:	rex
   14001a13b:	rex.WRB
   14001a13c:	rex.RB
   14001a13d:	rex.B
   14001a13e:	pop    r15
   14001a140:	rex.WRX push rax
   14001a142:	rex.RB
   14001a143:	push   r14
   14001a145:	push   rcx
   14001a146:	rex.RB jbe 0x14001a1ae
   14001a149:	outs   dx,BYTE PTR ds:[rsi]
   14001a14a:	je     0x14001a18c
   14001a14c:	rex
   14001a14d:	rex pop rdx
   14001a14f:	add    BYTE PTR [rsi+rax*1+0x3f],dh
   14001a153:	movsxd ebp,DWORD PTR [rax+0x61]
   14001a156:	outs   dx,BYTE PTR ds:[rsi]
   14001a157:	addr32 gs rex.RB jbe 0x14001a1c1
   14001a15c:	outs   dx,BYTE PTR ds:[rsi]
   14001a15d:	je     0x14001a19f
   14001a15f:	push   rcx
   14001a160:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001a168:	je     0x14001a1de
   14001a16a:	outs   dx,DWORD PTR ds:[rsi]
   14001a16b:	outs   dx,BYTE PTR ds:[rsi]
   14001a16c:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a16e:	js     0x14001a1b0
   14001a170:	rex
   14001a171:	rex.WRB
   14001a172:	rex.RB
   14001a173:	rex.B
   14001a174:	pop    r8
   14001a176:	push   rax
   14001a177:	rex.RB
   14001a178:	push   r14
   14001a17a:	push   rcx
   14001a17b:	rex.RB jbe 0x14001a1e3
   14001a17e:	outs   dx,BYTE PTR ds:[rsi]
   14001a17f:	je     0x14001a1c1
   14001a181:	rex
   14001a182:	rex pop rdx
   14001a184:	add    BYTE PTR [rax],al
   14001a186:	rcl    BYTE PTR [rax],0x3f
   14001a189:	ins    DWORD PTR es:[rdi],dx
   14001a18a:	gs je  0x14001a1ee
   14001a18d:	rex.WRXB (bad) 
   14001a18f:	push   0x65
   14001a191:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a195:	push   rsp
   14001a196:	(bad)  
   14001a197:	(bad)  
   14001a198:	ins    BYTE PTR es:[rdi],dx
   14001a199:	gs push rdi
   14001a19b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001a1a3:	rex.RB
   14001a1a4:	rex.X
   14001a1a5:	push   r8
   14001a1a7:	rex.RB
   14001a1a8:	rex.X push rbp
   14001a1aa:	push   rcx
   14001a1ab:	rex.WRB
   14001a1ac:	gs je  0x14001a210
   14001a1af:	rex.WRXB (bad) 
   14001a1b1:	push   0x65
   14001a1b3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a1b7:	pop    rax
   14001a1b8:	pop    rdx
   14001a1b9:	add    BYTE PTR [rbx],dh
   14001a1bb:	adc    al,0x3f
   14001a1bd:	jno    0x14001a233
   14001a1bf:	pop    rdi
   14001a1c0:	ins    DWORD PTR es:[rdi],dx
   14001a1c1:	gs je  0x14001a225
   14001a1c4:	movsxd esp,DWORD PTR [rcx+0x73]
   14001a1c7:	je     0x14001a209
   14001a1c9:	push   rcx
   14001a1ca:	push   rsp
   14001a1cb:	(bad)  
   14001a1cc:	(bad)  
   14001a1cd:	ins    BYTE PTR es:[rdi],dx
   14001a1ce:	gs push rdi
   14001a1d0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001a1d8:	rex.RB
   14001a1d9:	rex.B
   14001a1da:	push   r8
   14001a1dc:	rex.RB
   14001a1dd:	pop    r8
   14001a1df:	push   rax
   14001a1e0:	rex.RB
   14001a1e1:	rex.X
   14001a1e2:	rex.R
   14001a1e3:	rex pop rdx
   14001a1e5:	add    BYTE PTR [rcx+0x74713f13],ch
   14001a1eb:	pop    rdi
   14001a1ec:	ins    DWORD PTR es:[rdi],dx
   14001a1ed:	gs je  0x14001a251
   14001a1f0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a1f3:	ins    BYTE PTR es:[rdi],dx
   14001a1f4:	rex push rcx
   14001a1f6:	push   rsp
   14001a1f7:	(bad)  
   14001a1f8:	(bad)  
   14001a1f9:	ins    BYTE PTR es:[rdi],dx
   14001a1fa:	gs push rdi
   14001a1fc:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001a204:	rex.RB
   14001a205:	rex.B
   14001a206:	rex.B
   14001a207:	rex.W push rdi
   14001a209:	xor    al,0x43
   14001a20b:	(bad)  
   14001a20c:	ins    BYTE PTR es:[rdi],dx
   14001a20d:	ins    BYTE PTR es:[rdi],dx
   14001a20e:	rex push rcx
   14001a210:	rex.WRB
   14001a211:	gs je  0x14001a275
   14001a214:	rex.WRXB (bad) 
   14001a216:	push   0x65
   14001a218:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a21c:	rex.W push rax
   14001a21e:	rex.RB
   14001a21f:	push   r8
   14001a221:	rex.RB
   14001a222:	pop    r8
   14001a224:	rex pop rdx
   14001a226:	add    BYTE PTR [rax],al
   14001a228:	hlt    
   14001a229:	or     bh,BYTE PTR [rdi]
   14001a22b:	gs jbe 0x14001a293
   14001a22e:	outs   dx,BYTE PTR ds:[rsi]
   14001a22f:	je     0x14001a271
   14001a231:	push   rcx
   14001a232:	push   rsp
   14001a233:	(bad)  
   14001a234:	(bad)  
   14001a235:	ins    BYTE PTR es:[rdi],dx
   14001a236:	gs push rdi
   14001a238:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a240:	rex.RB
   14001a241:	rex.B
   14001a242:	pop    r15
   14001a244:	rex.WRX push rax
   14001a246:	rex.RB
   14001a247:	push   r14
   14001a249:	push   rcx
   14001a24a:	rex.RB jbe 0x14001a2b2
   14001a24d:	outs   dx,BYTE PTR ds:[rsi]
   14001a24e:	je     0x14001a290
   14001a250:	rex
   14001a251:	rex pop rdx
   14001a253:	add    BYTE PTR [rdx+0xa],ch
   14001a256:	(bad)  
   14001a257:	fs jb  0x14001a2c9
   14001a25a:	jo     0x14001a2a1
   14001a25c:	jbe    0x14001a2c3
   14001a25e:	outs   dx,BYTE PTR ds:[rsi]
   14001a25f:	je     0x14001a2a1
   14001a261:	push   rcx
   14001a262:	push   rsp
   14001a263:	(bad)  
   14001a264:	(bad)  
   14001a265:	ins    BYTE PTR es:[rdi],dx
   14001a266:	gs push rdi
   14001a268:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a270:	rex.RB
   14001a271:	rex.B
   14001a272:	pop    r8
   14001a274:	push   rax
   14001a275:	rex.RB
   14001a276:	push   r14
   14001a278:	push   rcx
   14001a279:	rex.R jb 0x14001a2eb
   14001a27c:	jo     0x14001a2c3
   14001a27e:	jbe    0x14001a2e5
   14001a280:	outs   dx,BYTE PTR ds:[rsi]
   14001a281:	je     0x14001a2c3
   14001a283:	rex
   14001a284:	rex pop rdx
   14001a286:	add    BYTE PTR [rax],al
   14001a288:	cwde   
   14001a289:	sbb    DWORD PTR [rdi],edi
   14001a28b:	jae    0x14001a2f2
   14001a28d:	je     0x14001a2dc
   14001a28f:	outs   dx,DWORD PTR ds:[rsi]
   14001a290:	fs gs ins BYTE PTR es:[rdi],dx
   14001a293:	rex push rcx
   14001a295:	push   rsp
   14001a296:	(bad)  
   14001a297:	(bad)  
   14001a298:	ins    BYTE PTR es:[rdi],dx
   14001a299:	gs push rdi
   14001a29b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x45404074
   14001a2a3:	rex.RB
   14001a2a4:	rex.B
   14001a2a5:	pop    r8
   14001a2a7:	push   rax
   14001a2a8:	rex.RB
   14001a2a9:	push   r14
   14001a2ab:	push   rcx
   14001a2ac:	(bad)
   14001a2b2:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001a2b6:	gs ins DWORD PTR es:[rdi],dx
   14001a2b8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a2ba:	fs gs ins BYTE PTR es:[rdi],dx
   14001a2bd:	rex
   14001a2be:	rex
   14001a2bf:	rex pop rdx
   14001a2c1:	add    ch,ah
   14001a2c3:	adc    BYTE PTR [rdi],bh
   14001a2c5:	ins    DWORD PTR es:[rdi],dx
   14001a2c6:	imul   ebp,DWORD PTR [rbp+0x65],0x65707954
   14001a2cd:	jae    0x14001a30f
   14001a2cf:	push   rcx
   14001a2d0:	push   rsp
   14001a2d1:	(bad)  
   14001a2d2:	(bad)  
   14001a2d3:	ins    BYTE PTR es:[rdi],dx
   14001a2d4:	gs push rdi
   14001a2d6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a2de:	rex.RB
   14001a2df:	rex.X
   14001a2e0:	rex.B (bad) 
   14001a2e2:	push   r14
   14001a2e4:	push   rcx
   14001a2e5:	push   rbx
   14001a2e6:	je     0x14001a35a
   14001a2e8:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001a2ef:	rex
   14001a2f0:	rex pop rax
   14001a2f2:	pop    rdx
   14001a2f3:	add    bh,bl
   14001a2f5:	adc    BYTE PTR [rdi],bh
   14001a2f7:	ins    DWORD PTR es:[rdi],dx
   14001a2f8:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001a2ff:	rex push rcx
   14001a301:	push   rsp
   14001a302:	(bad)  
   14001a303:	(bad)  
   14001a304:	ins    BYTE PTR es:[rdi],dx
   14001a305:	gs push rdi
   14001a307:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a30f:	rex.RB
   14001a310:	rex.X
   14001a311:	push   r8
   14001a313:	rex.RB
   14001a314:	push   r14
   14001a316:	push   rcx
   14001a317:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001a31f:	rex
   14001a320:	rex push rsi
   14001a322:	(bad)  
   14001a323:	and    al,0x51
   14001a325:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   14001a32d:	push   rsi
   14001a32e:	push   rcx
   14001a32f:	push   rsp
   14001a330:	(bad)  
   14001a331:	(bad)  
   14001a332:	ins    BYTE PTR es:[rdi],dx
   14001a333:	gs push rdi
   14001a335:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   14001a33d:	ins    DWORD PTR es:[rdi],dx
   14001a33e:	rex
   14001a33f:	rex
   14001a340:	rex
   14001a341:	rex
   14001a342:	rex pop rdx
   14001a344:	add    BYTE PTR [rax],al
   14001a346:	jb     0x14001a352
   14001a348:	(bad)  
   14001a349:	fs jb  0x14001a3bb
   14001a34c:	jo     0x14001a39b
   14001a34e:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001a355:	rex push rcx
   14001a357:	push   rsp
   14001a358:	(bad)  
   14001a359:	(bad)  
   14001a35a:	ins    BYTE PTR es:[rdi],dx
   14001a35b:	gs push rdi
   14001a35d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a365:	rex.RB
   14001a366:	rex.B
   14001a367:	pop    r15
   14001a369:	rex.WRX
   14001a36a:	rex.W
   14001a36b:	rex.W push rax
   14001a36d:	rex.RB
   14001a36e:	rex.X push rsi
   14001a370:	push   rcx
   14001a371:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001a379:	rex
   14001a37a:	rex push rdi
   14001a37c:	xor    al,0x44
   14001a37e:	jb     0x14001a3ef
   14001a380:	jo     0x14001a3c3
   14001a382:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001a386:	outs   dx,BYTE PTR ds:[rsi]
   14001a387:	rex push rcx
   14001a389:	je     0x14001a3cb
   14001a38b:	rex
   14001a38c:	rex pop rdx
   14001a38e:	add    BYTE PTR [rax],al
   14001a390:	lock sbb eax,0x7075733f
   14001a396:	jo     0x14001a407
   14001a398:	jb     0x14001a40e
   14001a39a:	gs fs rex.R jb 0x14001a40e
   14001a39f:	jo     0x14001a3e2
   14001a3a1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001a3a5:	outs   dx,BYTE PTR ds:[rsi]
   14001a3a6:	jae    0x14001a3e8
   14001a3a8:	push   rcx
   14001a3a9:	push   rsp
   14001a3aa:	(bad)  
   14001a3ab:	(bad)  
   14001a3ac:	ins    BYTE PTR es:[rdi],dx
   14001a3ad:	gs push rdi
   14001a3af:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001a3b7:	rex.RB
   14001a3b8:	rex.X
   14001a3b9:	rex.B (bad) 
   14001a3bb:	push   r14
   14001a3bd:	(bad)  
   14001a3be:	and    al,0x51
   14001a3c0:	rex.RX ins BYTE PTR es:[rdi],dx
   14001a3c2:	(bad)  
   14001a3c3:	addr32 jae 0x14001a406
   14001a3c6:	push   rdi
   14001a3c7:	xor    al,0x44
   14001a3c9:	jb     0x14001a43a
   14001a3cb:	jo     0x14001a40e
   14001a3cd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001a3d1:	outs   dx,BYTE PTR ds:[rsi]
   14001a3d2:	rex push rcx
   14001a3d4:	je     0x14001a416
   14001a3d6:	rex
   14001a3d7:	rex
   14001a3d8:	rex pop rax
   14001a3da:	pop    rdx
   14001a3db:	add    BYTE PTR [rdi+0x656d3f10],cl
   14001a3e1:	je     0x14001a444
   14001a3e3:	rex.WRXB (bad) 
   14001a3e5:	push   0x65
   14001a3e7:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a3eb:	rex.WR (bad) 
   14001a3ed:	(bad)  
   14001a3ee:	gs ins BYTE PTR es:[rdi],dx
   14001a3f0:	rex
   14001a3f1:	rex push rbp
   14001a3f3:	rex.RB
   14001a3f4:	rex.X
   14001a3f5:	push   r8
   14001a3f7:	rex.RB
   14001a3f8:	rex.X push rbp
   14001a3fa:	push   rcx
   14001a3fb:	rex.WRB
   14001a3fc:	gs je  0x14001a460
   14001a3ff:	rex.WRXB (bad) 
   14001a401:	push   0x65
   14001a403:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a407:	pop    rax
   14001a408:	pop    rdx
   14001a409:	add    BYTE PTR [rdx],al
   14001a40b:	adc    al,0x3f
   14001a40d:	jno    0x14001a483
   14001a40f:	pop    rdi
   14001a410:	ins    DWORD PTR es:[rdi],dx
   14001a411:	gs je  0x14001a475
   14001a414:	movsxd esp,DWORD PTR [rcx+0x73]
   14001a417:	je     0x14001a459
   14001a419:	push   rcx
   14001a41a:	rex.WR (bad) 
   14001a41c:	(bad)  
   14001a41d:	gs ins BYTE PTR es:[rdi],dx
   14001a41f:	rex
   14001a420:	rex push rbp
   14001a422:	rex.RB
   14001a423:	rex.B
   14001a424:	push   r8
   14001a426:	rex.RB
   14001a427:	pop    r8
   14001a429:	push   rax
   14001a42a:	rex.RB
   14001a42b:	rex.X
   14001a42c:	rex.R
   14001a42d:	rex pop rdx
   14001a42f:	add    BYTE PTR [rax+0x13],bh
   14001a432:	(bad)  
   14001a433:	jno    0x14001a4a9
   14001a435:	pop    rdi
   14001a436:	ins    DWORD PTR es:[rdi],dx
   14001a437:	gs je  0x14001a49b
   14001a43a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a43d:	ins    BYTE PTR es:[rdi],dx
   14001a43e:	rex push rcx
   14001a440:	rex.WR (bad) 
   14001a442:	(bad)  
   14001a443:	gs ins BYTE PTR es:[rdi],dx
   14001a445:	rex
   14001a446:	rex push rbp
   14001a448:	rex.RB
   14001a449:	rex.B
   14001a44a:	rex.B
   14001a44b:	rex.W push rdi
   14001a44d:	xor    al,0x43
   14001a44f:	(bad)  
   14001a450:	ins    BYTE PTR es:[rdi],dx
   14001a451:	ins    BYTE PTR es:[rdi],dx
   14001a452:	rex push rcx
   14001a454:	rex.WRB
   14001a455:	gs je  0x14001a4b9
   14001a458:	rex.WRXB (bad) 
   14001a45a:	push   0x65
   14001a45c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a460:	rex.W push rax
   14001a462:	rex.RB
   14001a463:	push   r8
   14001a465:	rex.RB
   14001a466:	pop    r8
   14001a468:	rex pop rdx
   14001a46a:	add    BYTE PTR [rax],al
   14001a46c:	(bad)  
   14001a46d:	or     bh,BYTE PTR [rdi]
   14001a46f:	gs jbe 0x14001a4d7
   14001a472:	outs   dx,BYTE PTR ds:[rsi]
   14001a473:	je     0x14001a4b5
   14001a475:	push   rcx
   14001a476:	rex.WR (bad) 
   14001a478:	(bad)  
   14001a479:	gs ins BYTE PTR es:[rdi],dx
   14001a47b:	rex
   14001a47c:	rex
   14001a47d:	rex.WRB
   14001a47e:	rex.RB
   14001a47f:	rex.B
   14001a480:	pop    r15
   14001a482:	rex.WRX push rax
   14001a484:	rex.RB
   14001a485:	push   r14
   14001a487:	push   rcx
   14001a488:	rex.RB jbe 0x14001a4f0
   14001a48b:	outs   dx,BYTE PTR ds:[rsi]
   14001a48c:	je     0x14001a4ce
   14001a48e:	rex
   14001a48f:	rex pop rdx
   14001a491:	add    BYTE PTR [rdx+0x69733f1c],ch
   14001a497:	jp     0x14001a4fe
   14001a499:	imul   rbp,QWORD PTR [rsi+0x74],0x614c5140
   14001a4a1:	(bad)  
   14001a4a2:	gs ins BYTE PTR es:[rdi],dx
   14001a4a4:	rex
   14001a4a5:	rex push rbp
   14001a4a7:	rex.RB
   14001a4a8:	rex.X
   14001a4a9:	rex.B (bad) 
   14001a4ab:	push   r14
   14001a4ad:	push   rcx
   14001a4ae:	push   rbx
   14001a4af:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a4b6:	add    BYTE PTR [rax],al
   14001a4b8:	or     eax,0x696d3f11
   14001a4bd:	outs   dx,BYTE PTR ds:[rsi]
   14001a4be:	imul   ebp,DWORD PTR [rbp+0x75],0x7a69536d
   14001a4c5:	imul   rbp,QWORD PTR gs:[rsi+0x74],0x614c5140
   14001a4ce:	(bad)  
   14001a4cf:	gs ins BYTE PTR es:[rdi],dx
   14001a4d1:	rex
   14001a4d2:	rex push rbp
   14001a4d4:	rex.RB
   14001a4d5:	rex.X
   14001a4d6:	rex.B (bad) 
   14001a4d8:	push   r14
   14001a4da:	push   rcx
   14001a4db:	push   rbx
   14001a4dc:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a4e3:	add    BYTE PTR [rbx+0x65683f0c],al
   14001a4e9:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001a4f0:	push   rdi
   14001a4f1:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   14001a4f9:	(bad)  
   14001a4fa:	gs ins BYTE PTR es:[rdi],dx
   14001a4fc:	rex
   14001a4fd:	rex push rbp
   14001a4ff:	rex.RB
   14001a500:	rex.X
   14001a501:	rex.B
   14001a502:	rex.W
   14001a503:	rex.W
   14001a504:	rex pop rdx
   14001a506:	add    BYTE PTR [rax],al
   14001a508:	jbe    0x14001a51b
   14001a50a:	(bad)  
   14001a50b:	ins    DWORD PTR es:[rdi],dx
   14001a50c:	outs   dx,DWORD PTR ds:[rsi]
   14001a50d:	jne    0x14001a582
   14001a50f:	gs push rax
   14001a511:	jb     0x14001a578
   14001a513:	jae    0x14001a588
   14001a515:	rex.RB jbe 0x14001a57d
   14001a518:	outs   dx,BYTE PTR ds:[rsi]
   14001a519:	je     0x14001a55b
   14001a51b:	push   rcx
   14001a51c:	rex.WR (bad) 
   14001a51e:	(bad)  
   14001a51f:	gs ins BYTE PTR es:[rdi],dx
   14001a521:	rex
   14001a522:	rex
   14001a523:	rex.WRB
   14001a524:	rex.RB
   14001a525:	rex.B
   14001a526:	pop    r8
   14001a528:	push   rax
   14001a529:	rex.RB
   14001a52a:	push   r14
   14001a52c:	push   rcx
   14001a52d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a52f:	jne    0x14001a5a4
   14001a531:	gs rex.RB jbe 0x14001a59a
   14001a535:	outs   dx,BYTE PTR ds:[rsi]
   14001a536:	je     0x14001a578
   14001a538:	rex
   14001a539:	rex pop rdx
   14001a53b:	add    BYTE PTR [rcx+rdx*1+0x756f6d3f],dl
   14001a542:	jae    0x14001a5a9
   14001a544:	push   rdx
   14001a545:	gs ins BYTE PTR es:[rdi],dx
   14001a547:	gs (bad) 
   14001a549:	jae    0x14001a5b0
   14001a54b:	rex.RB jbe 0x14001a5b3
   14001a54e:	outs   dx,BYTE PTR ds:[rsi]
   14001a54f:	je     0x14001a591
   14001a551:	push   rcx
   14001a552:	rex.WR (bad) 
   14001a554:	(bad)  
   14001a555:	gs ins BYTE PTR es:[rdi],dx
   14001a557:	rex
   14001a558:	rex
   14001a559:	rex.WRB
   14001a55a:	rex.RB
   14001a55b:	rex.B
   14001a55c:	pop    r8
   14001a55e:	push   rax
   14001a55f:	rex.RB
   14001a560:	push   r14
   14001a562:	push   rcx
   14001a563:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a565:	jne    0x14001a5da
   14001a567:	gs rex.RB jbe 0x14001a5d0
   14001a56b:	outs   dx,BYTE PTR ds:[rsi]
   14001a56c:	je     0x14001a5ae
   14001a56e:	rex
   14001a56f:	rex pop rdx
   14001a571:	add    BYTE PTR [rcx+rdx*1+0x3f],dl
   14001a575:	ins    DWORD PTR es:[rdi],dx
   14001a576:	outs   dx,DWORD PTR ds:[rsi]
   14001a577:	jne    0x14001a5ec
   14001a579:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14001a57c:	jbe    0x14001a5e3
   14001a57e:	rex.RB jbe 0x14001a5e6
   14001a581:	outs   dx,BYTE PTR ds:[rsi]
   14001a582:	je     0x14001a5c4
   14001a584:	push   rcx
   14001a585:	rex.WR (bad) 
   14001a587:	(bad)  
   14001a588:	gs ins BYTE PTR es:[rdi],dx
   14001a58a:	rex
   14001a58b:	rex
   14001a58c:	rex.WRB
   14001a58d:	rex.RB
   14001a58e:	rex.B
   14001a58f:	pop    r8
   14001a591:	push   rax
   14001a592:	rex.RB
   14001a593:	push   r14
   14001a595:	push   rcx
   14001a596:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a598:	jne    0x14001a60d
   14001a59a:	gs rex.RB jbe 0x14001a603
   14001a59e:	outs   dx,BYTE PTR ds:[rsi]
   14001a59f:	je     0x14001a5e1
   14001a5a1:	rex
   14001a5a2:	rex pop rdx
   14001a5a4:	add    BYTE PTR [rax],al
   14001a5a6:	rex.WR (bad) 
   14001a5a9:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001a5ad:	jb     0x14001a614
   14001a5af:	jae    0x14001a624
   14001a5b1:	rex.RB jbe 0x14001a619
   14001a5b4:	outs   dx,BYTE PTR ds:[rsi]
   14001a5b5:	je     0x14001a5f7
   14001a5b7:	push   rcx
   14001a5b8:	rex.WR (bad) 
   14001a5ba:	(bad)  
   14001a5bb:	gs ins BYTE PTR es:[rdi],dx
   14001a5bd:	rex
   14001a5be:	rex
   14001a5bf:	rex.WRB
   14001a5c0:	rex.RB
   14001a5c1:	rex.B
   14001a5c2:	pop    r8
   14001a5c4:	push   rax
   14001a5c5:	rex.RB
   14001a5c6:	push   r14
   14001a5c8:	push   rcx
   14001a5c9:	rex.WXB
   14001a5ca:	gs jns 0x14001a612
   14001a5cd:	jbe    0x14001a634
   14001a5cf:	outs   dx,BYTE PTR ds:[rsi]
   14001a5d0:	je     0x14001a612
   14001a5d2:	rex
   14001a5d3:	rex pop rdx
   14001a5d5:	add    BYTE PTR [rbx+rcx*1+0x636f663f],cl
   14001a5dc:	jne    0x14001a651
   14001a5de:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a5e0:	rex.RB jbe 0x14001a648
   14001a5e3:	outs   dx,BYTE PTR ds:[rsi]
   14001a5e4:	je     0x14001a626
   14001a5e6:	push   rcx
   14001a5e7:	rex.WR (bad) 
   14001a5e9:	(bad)  
   14001a5ea:	gs ins BYTE PTR es:[rdi],dx
   14001a5ec:	rex
   14001a5ed:	rex
   14001a5ee:	rex.WRB
   14001a5ef:	rex.RB
   14001a5f0:	rex.B
   14001a5f1:	pop    r8
   14001a5f3:	push   rax
   14001a5f4:	rex.RB
   14001a5f5:	push   r14
   14001a5f7:	push   rcx
   14001a5f8:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a5fa:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a5fd:	rex.RB jbe 0x14001a665
   14001a600:	outs   dx,BYTE PTR ds:[rsi]
   14001a601:	je     0x14001a643
   14001a603:	rex
   14001a604:	rex pop rdx
   14001a606:	add    BYTE PTR [rax],al
   14001a608:	mov    cl,0xb
   14001a60a:	(bad)  
   14001a60b:	outs   dx,WORD PTR ds:[rsi]
   14001a60d:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a610:	rex.WRXB jne 0x14001a687
   14001a613:	rex.RB jbe 0x14001a67b
   14001a616:	outs   dx,BYTE PTR ds:[rsi]
   14001a617:	je     0x14001a659
   14001a619:	push   rcx
   14001a61a:	rex.WR (bad) 
   14001a61c:	(bad)  
   14001a61d:	gs ins BYTE PTR es:[rdi],dx
   14001a61f:	rex
   14001a620:	rex
   14001a621:	rex.WRB
   14001a622:	rex.RB
   14001a623:	rex.B
   14001a624:	pop    r8
   14001a626:	push   rax
   14001a627:	rex.RB
   14001a628:	push   r14
   14001a62a:	push   rcx
   14001a62b:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a62d:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a630:	rex.RB jbe 0x14001a698
   14001a633:	outs   dx,BYTE PTR ds:[rsi]
   14001a634:	je     0x14001a676
   14001a636:	rex
   14001a637:	rex pop rdx
   14001a639:	add    BYTE PTR [rsi+0x12],bl
   14001a63c:	(bad)  
   14001a63d:	jo     0x14001a6a0
   14001a63f:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001a646:	je     0x14001a688
   14001a648:	push   rcx
   14001a649:	rex.WR (bad) 
   14001a64b:	(bad)  
   14001a64c:	gs ins BYTE PTR es:[rdi],dx
   14001a64e:	rex
   14001a64f:	rex
   14001a650:	rex.WRB
   14001a651:	rex.RB
   14001a652:	rex.B
   14001a653:	pop    r8
   14001a655:	push   rax
   14001a656:	rex.RB
   14001a657:	push   r14
   14001a659:	push   rcx
   14001a65a:	push   rax
   14001a65b:	(bad)  
   14001a65c:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001a663:	je     0x14001a6a5
   14001a665:	rex
   14001a666:	rex pop rdx
   14001a668:	add    BYTE PTR [rax],al
   14001a66a:	mov    eax,DWORD PTR [rdi]
   14001a66c:	(bad)  
   14001a66d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a670:	je     0x14001a6d7
   14001a672:	js     0x14001a6e8
   14001a674:	rex.WRB
   14001a675:	outs   dx,BYTE PTR gs:[rsi]
   14001a677:	jne    0x14001a6be
   14001a679:	jbe    0x14001a6e0
   14001a67b:	outs   dx,BYTE PTR ds:[rsi]
   14001a67c:	je     0x14001a6be
   14001a67e:	push   rcx
   14001a67f:	rex.WR (bad) 
   14001a681:	(bad)  
   14001a682:	gs ins BYTE PTR es:[rdi],dx
   14001a684:	rex
   14001a685:	rex
   14001a686:	rex.WRB
   14001a687:	rex.RB
   14001a688:	rex.B
   14001a689:	pop    r8
   14001a68b:	push   rax
   14001a68c:	rex.RB
   14001a68d:	push   r14
   14001a68f:	push   rcx
   14001a690:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a692:	outs   dx,BYTE PTR ds:[rsi]
   14001a693:	je     0x14001a6fa
   14001a695:	js     0x14001a70b
   14001a697:	rex.WRB
   14001a698:	outs   dx,BYTE PTR gs:[rsi]
   14001a69a:	jne    0x14001a6e1
   14001a69c:	jbe    0x14001a703
   14001a69e:	outs   dx,BYTE PTR ds:[rsi]
   14001a69f:	je     0x14001a6e1
   14001a6a1:	rex
   14001a6a2:	rex pop rdx
   14001a6a4:	add    BYTE PTR [rax],al
   14001a6a6:	jl     0x14001a6ae
   14001a6a8:	(bad)  
   14001a6a9:	movsxd ebp,DWORD PTR [rax+0x61]
   14001a6ac:	outs   dx,BYTE PTR ds:[rsi]
   14001a6ad:	addr32 gs rex.RB jbe 0x14001a717
   14001a6b2:	outs   dx,BYTE PTR ds:[rsi]
   14001a6b3:	je     0x14001a6f5
   14001a6b5:	push   rcx
   14001a6b6:	rex.WR (bad) 
   14001a6b8:	(bad)  
   14001a6b9:	gs ins BYTE PTR es:[rdi],dx
   14001a6bb:	rex
   14001a6bc:	rex
   14001a6bd:	rex.WRB
   14001a6be:	rex.RB
   14001a6bf:	rex.B
   14001a6c0:	pop    r8
   14001a6c2:	push   rax
   14001a6c3:	rex.RB
   14001a6c4:	push   r14
   14001a6c6:	push   rcx
   14001a6c7:	rex.RB jbe 0x14001a72f
   14001a6ca:	outs   dx,BYTE PTR ds:[rsi]
   14001a6cb:	je     0x14001a70d
   14001a6cd:	rex
   14001a6ce:	rex pop rdx
   14001a6d0:	add    BYTE PTR [rax],al
   14001a6d2:	sahf   
   14001a6d3:	or     edi,DWORD PTR [rdi]
   14001a6d5:	outs   dx,WORD PTR ds:[rsi]
   14001a6d7:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a6da:	rex.WRX
   14001a6db:	gs js  0x14001a752
   14001a6de:	push   rax
   14001a6df:	jb     0x14001a746
   14001a6e1:	jbe    0x14001a726
   14001a6e3:	push   0x40646c69
   14001a6e8:	push   rcx
   14001a6e9:	rex.WR (bad) 
   14001a6eb:	(bad)  
   14001a6ec:	gs ins BYTE PTR es:[rdi],dx
   14001a6ee:	rex
   14001a6ef:	rex
   14001a6f0:	rex.WRB
   14001a6f1:	rex.RB
   14001a6f2:	rex.B
   14001a6f3:	pop    r15
   14001a6f5:	rex.WRX pop rdi
   14001a6f7:	rex.WRX
   14001a6f8:	rex pop rdx
   14001a6fa:	add    BYTE PTR [rax],al
   14001a6fc:	rol    DWORD PTR [rcx],0x3f
   14001a6ff:	(bad)  
   14001a700:	xor    DWORD PTR [rcx+0x44],edx
   14001a703:	imul   esp,DWORD PTR [rcx+0x6c],0x7542676f
   14001a70a:	je     0x14001a780
   14001a70c:	outs   dx,DWORD PTR ds:[rsi]
   14001a70d:	outs   dx,BYTE PTR ds:[rsi]
   14001a70e:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a710:	js     0x14001a752
   14001a712:	rex push rbp
   14001a714:	rex.RB
   14001a715:	rex.B
   14001a716:	rex.B
   14001a717:	rex pop rax
   14001a719:	pop    rdx
   14001a71a:	add    BYTE PTR [rax],al
   14001a71c:	pop    rdi
   14001a71d:	add    bh,BYTE PTR [rdi]
   14001a71f:	(bad)  
   14001a720:	xor    DWORD PTR [rcx+0x54],edx
   14001a723:	(bad)  
   14001a724:	(bad)  
   14001a725:	ins    BYTE PTR es:[rdi],dx
   14001a726:	gs push rdi
   14001a728:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001a730:	rex.RB
   14001a731:	rex.B
   14001a732:	rex.B
   14001a733:	rex pop rax
   14001a735:	pop    rdx
   14001a736:	add    BYTE PTR [rax],al
   14001a738:	(bad)  
   14001a739:	add    bh,BYTE PTR [rdi]
   14001a73b:	(bad)  
   14001a73c:	xor    DWORD PTR [rcx+0x4c],edx
   14001a73f:	(bad)  
   14001a740:	(bad)  
   14001a741:	gs ins BYTE PTR es:[rdi],dx
   14001a743:	rex
   14001a744:	rex push rbp
   14001a746:	rex.RB
   14001a747:	rex.B
   14001a748:	rex.B
   14001a749:	rex pop rax
   14001a74b:	pop    rdx
   14001a74c:	add    BYTE PTR [rax],al
   14001a74e:	int    0xe
   14001a750:	(bad)  
   14001a751:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x61545140
   14001a759:	(bad)  
   14001a75a:	ins    BYTE PTR es:[rdi],dx
   14001a75b:	gs push rdi
   14001a75d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001a765:	rex.RB
   14001a766:	rex.X
   14001a767:	push   r8
   14001a769:	rex.RB
   14001a76a:	push   r14
   14001a76c:	push   rcx
   14001a76d:	push   rsp
   14001a76e:	(bad)  
   14001a76f:	(bad)  
   14001a770:	ins    BYTE PTR es:[rdi],dx
   14001a771:	gs push rdi
   14001a773:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   14001a77b:	ins    DWORD PTR es:[rdi],dx
   14001a77c:	rex
   14001a77d:	rex
   14001a77e:	rex.W
   14001a77f:	rex.W
   14001a780:	rex pop rdx
   14001a782:	add    BYTE PTR [rax],al
   14001a784:	jo     0x14001a787
   14001a786:	(bad)  
   14001a787:	(bad)  
   14001a788:	xor    BYTE PTR [rcx+0x54],dl
   14001a78b:	gs js  0x14001a802
   14001a78e:	rex.X jb 0x14001a800
   14001a791:	ja     0x14001a806
   14001a793:	gs jb  0x14001a7d6
   14001a796:	rex push rcx
   14001a798:	rex.RB
   14001a799:	rex.B
   14001a79a:	rex.B
   14001a79b:	rex push rax
   14001a79d:	rex.RB
   14001a79e:	push   r14
   14001a7a0:	push   rcx
   14001a7a1:	push   rdi
   14001a7a2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001a7aa:	pop    rdx
   14001a7ab:	add    ch,dh
   14001a7ad:	or     bh,BYTE PTR [rdi]
   14001a7af:	gs jbe 0x14001a817
   14001a7b2:	outs   dx,BYTE PTR ds:[rsi]
   14001a7b3:	je     0x14001a7f5
   14001a7b5:	push   rcx
   14001a7b6:	push   rsp
   14001a7b7:	gs js  0x14001a82e
   14001a7ba:	rex.X jb 0x14001a82c
   14001a7bd:	ja     0x14001a832
   14001a7bf:	gs jb  0x14001a802
   14001a7c2:	rex
   14001a7c3:	rex.WRB
   14001a7c4:	rex.RB
   14001a7c5:	rex.B
   14001a7c6:	pop    r15
   14001a7c8:	rex.WRX push rax
   14001a7ca:	rex.RB
   14001a7cb:	push   r14
   14001a7cd:	push   rcx
   14001a7ce:	rex.RB jbe 0x14001a836
   14001a7d1:	outs   dx,BYTE PTR ds:[rsi]
   14001a7d2:	je     0x14001a814
   14001a7d4:	rex
   14001a7d5:	rex pop rdx
   14001a7d7:	add    BYTE PTR [rdx+0x69743f1e],ah
   14001a7dd:	ins    DWORD PTR es:[rdi],dx
   14001a7de:	gs jb  0x14001a826
   14001a7e1:	jbe    0x14001a848
   14001a7e3:	outs   dx,BYTE PTR ds:[rsi]
   14001a7e4:	je     0x14001a826
   14001a7e6:	push   rcx
   14001a7e7:	push   rsp
   14001a7e8:	gs js  0x14001a85f
   14001a7eb:	rex.RB
   14001a7ec:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001a7f5:	pop    rax
   14001a7f6:	push   rax
   14001a7f7:	rex.RB
   14001a7f8:	push   r14
   14001a7fa:	push   rcx
   14001a7fb:	push   rsp
   14001a7fc:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001a803:	outs   dx,BYTE PTR ds:[rsi]
   14001a804:	je     0x14001a846
   14001a806:	rex
   14001a807:	rex pop rdx
   14001a809:	add    BYTE PTR [rdx+0x6f6d3f11],al
   14001a80f:	jne    0x14001a884
   14001a811:	gs push rax
   14001a813:	jb     0x14001a87a
   14001a815:	jae    0x14001a88a
   14001a817:	rex.RB jbe 0x14001a87f
   14001a81a:	outs   dx,BYTE PTR ds:[rsi]
   14001a81b:	je     0x14001a85d
   14001a81d:	push   rcx
   14001a81e:	push   rsp
   14001a81f:	gs js  0x14001a896
   14001a822:	rex.X jb 0x14001a894
   14001a825:	ja     0x14001a89a
   14001a827:	gs jb  0x14001a86a
   14001a82a:	rex
   14001a82b:	rex.WRB
   14001a82c:	rex.RB
   14001a82d:	rex.B
   14001a82e:	pop    r8
   14001a830:	push   rax
   14001a831:	rex.RB
   14001a832:	push   r14
   14001a834:	push   rcx
   14001a835:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a837:	jne    0x14001a8ac
   14001a839:	gs rex.RB jbe 0x14001a8a2
   14001a83d:	outs   dx,BYTE PTR ds:[rsi]
   14001a83e:	je     0x14001a880
   14001a840:	rex
   14001a841:	rex pop rdx
   14001a843:	add    BYTE PTR [rax+0x6f6d3f11],ah
   14001a849:	jne    0x14001a8be
   14001a84b:	gs push rdx
   14001a84d:	gs ins BYTE PTR es:[rdi],dx
   14001a84f:	gs (bad) 
   14001a851:	jae    0x14001a8b8
   14001a853:	rex.RB jbe 0x14001a8bb
   14001a856:	outs   dx,BYTE PTR ds:[rsi]
   14001a857:	je     0x14001a899
   14001a859:	push   rcx
   14001a85a:	push   rsp
   14001a85b:	gs js  0x14001a8d2
   14001a85e:	rex.X jb 0x14001a8d0
   14001a861:	ja     0x14001a8d6
   14001a863:	gs jb  0x14001a8a6
   14001a866:	rex
   14001a867:	rex.WRB
   14001a868:	rex.RB
   14001a869:	rex.B
   14001a86a:	pop    r8
   14001a86c:	push   rax
   14001a86d:	rex.RB
   14001a86e:	push   r14
   14001a870:	push   rcx
   14001a871:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a873:	jne    0x14001a8e8
   14001a875:	gs rex.RB jbe 0x14001a8de
   14001a879:	outs   dx,BYTE PTR ds:[rsi]
   14001a87a:	je     0x14001a8bc
   14001a87c:	rex
   14001a87d:	rex pop rdx
   14001a87f:	add    BYTE PTR [rdx+0x11],al
   14001a882:	(bad)  
   14001a883:	ins    DWORD PTR es:[rdi],dx
   14001a884:	outs   dx,DWORD PTR ds:[rsi]
   14001a885:	jne    0x14001a8fa
   14001a887:	rex.R outs dx,DWORD PTR gs:[rsi]
   14001a88a:	jne    0x14001a8ee
   14001a88c:	ins    BYTE PTR es:[rdi],dx
   14001a88d:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14001a890:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   14001a897:	je     0x14001a8d9
   14001a899:	push   rcx
   14001a89a:	push   rsp
   14001a89b:	gs js  0x14001a912
   14001a89e:	rex.RB
   14001a89f:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001a8a8:	pop    rax
   14001a8a9:	push   rax
   14001a8aa:	rex.RB
   14001a8ab:	push   r14
   14001a8ad:	push   rcx
   14001a8ae:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a8b0:	jne    0x14001a925
   14001a8b2:	gs rex.RB jbe 0x14001a91b
   14001a8b6:	outs   dx,BYTE PTR ds:[rsi]
   14001a8b7:	je     0x14001a8f9
   14001a8b9:	rex
   14001a8ba:	rex pop rdx
   14001a8bc:	add    BYTE PTR [rax],al
   14001a8be:	(bad)  
   14001a8bf:	adc    DWORD PTR [rdi],edi
   14001a8c1:	ins    DWORD PTR es:[rdi],dx
   14001a8c2:	outs   dx,DWORD PTR ds:[rsi]
   14001a8c3:	jne    0x14001a938
   14001a8c5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14001a8c8:	jbe    0x14001a92f
   14001a8ca:	rex.RB jbe 0x14001a932
   14001a8cd:	outs   dx,BYTE PTR ds:[rsi]
   14001a8ce:	je     0x14001a910
   14001a8d0:	push   rcx
   14001a8d1:	push   rsp
   14001a8d2:	gs js  0x14001a949
   14001a8d5:	rex.X jb 0x14001a947
   14001a8d8:	ja     0x14001a94d
   14001a8da:	gs jb  0x14001a91d
   14001a8dd:	rex
   14001a8de:	rex.WRB
   14001a8df:	rex.RB
   14001a8e0:	rex.B
   14001a8e1:	pop    r8
   14001a8e3:	push   rax
   14001a8e4:	rex.RB
   14001a8e5:	push   r14
   14001a8e7:	push   rcx
   14001a8e8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a8ea:	jne    0x14001a95f
   14001a8ec:	gs rex.RB jbe 0x14001a955
   14001a8f0:	outs   dx,BYTE PTR ds:[rsi]
   14001a8f1:	je     0x14001a933
   14001a8f3:	rex
   14001a8f4:	rex pop rdx
   14001a8f6:	add    BYTE PTR [rax],al
   14001a8f8:	xor    esp,DWORD PTR [rcx]
   14001a8fa:	(bad)  
   14001a8fb:	ja     0x14001a965
   14001a8fd:	gs gs ins BYTE PTR es:[rdi],dx
   14001a900:	rex.RB jbe 0x14001a968
   14001a903:	outs   dx,BYTE PTR ds:[rsi]
   14001a904:	je     0x14001a946
   14001a906:	push   rcx
   14001a907:	push   rsp
   14001a908:	gs js  0x14001a97f
   14001a90b:	rex.RB
   14001a90c:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001a915:	pop    rax
   14001a916:	push   rax
   14001a917:	rex.RB
   14001a918:	push   r14
   14001a91a:	push   rcx
   14001a91b:	push   rdi
   14001a91c:	push   0x456c6565
   14001a921:	jbe    0x14001a988
   14001a923:	outs   dx,BYTE PTR ds:[rsi]
   14001a924:	je     0x14001a966
   14001a926:	rex
   14001a927:	rex pop rdx
   14001a929:	add    BYTE PTR [rsi+0xf],dl
   14001a92c:	(bad)  
   14001a92d:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001a931:	jb     0x14001a998
   14001a933:	jae    0x14001a9a8
   14001a935:	rex.RB jbe 0x14001a99d
   14001a938:	outs   dx,BYTE PTR ds:[rsi]
   14001a939:	je     0x14001a97b
   14001a93b:	push   rcx
   14001a93c:	push   rsp
   14001a93d:	gs js  0x14001a9b4
   14001a940:	rex.X jb 0x14001a9b2
   14001a943:	ja     0x14001a9b8
   14001a945:	gs jb  0x14001a988
   14001a948:	rex
   14001a949:	rex.WRB
   14001a94a:	rex.RB
   14001a94b:	rex.B
   14001a94c:	pop    r8
   14001a94e:	push   rax
   14001a94f:	rex.RB
   14001a950:	push   r14
   14001a952:	push   rcx
   14001a953:	rex.WXB
   14001a954:	gs jns 0x14001a99c
   14001a957:	jbe    0x14001a9be
   14001a959:	outs   dx,BYTE PTR ds:[rsi]
   14001a95a:	je     0x14001a99c
   14001a95c:	rex
   14001a95d:	rex pop rdx
   14001a95f:	add    BYTE PTR [rbp+0xf],ah
   14001a962:	(bad)  
   14001a963:	imul   esp,DWORD PTR [rbp+0x79],0x52
   14001a967:	gs ins BYTE PTR es:[rdi],dx
   14001a969:	gs (bad) 
   14001a96b:	jae    0x14001a9d2
   14001a96d:	rex.RB jbe 0x14001a9d5
   14001a970:	outs   dx,BYTE PTR ds:[rsi]
   14001a971:	je     0x14001a9b3
   14001a973:	push   rcx
   14001a974:	push   rsp
   14001a975:	gs js  0x14001a9ec
   14001a978:	rex.RB
   14001a979:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001a982:	pop    rax
   14001a983:	push   rax
   14001a984:	rex.RB
   14001a985:	push   r14
   14001a987:	push   rcx
   14001a988:	rex.WXB
   14001a989:	gs jns 0x14001a9d1
   14001a98c:	jbe    0x14001a9f3
   14001a98e:	outs   dx,BYTE PTR ds:[rsi]
   14001a98f:	je     0x14001a9d1
   14001a991:	rex
   14001a992:	rex pop rdx
   14001a994:	add    BYTE PTR [rax],al
   14001a996:	xchg   edx,eax
   14001a997:	or     edi,DWORD PTR [rdi]
   14001a999:	outs   dx,WORD PTR ds:[rsi]
   14001a99b:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a99e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a9a0:	rex.RB jbe 0x14001aa08
   14001a9a3:	outs   dx,BYTE PTR ds:[rsi]
   14001a9a4:	je     0x14001a9e6
   14001a9a6:	push   rcx
   14001a9a7:	push   rsp
   14001a9a8:	gs js  0x14001aa1f
   14001a9ab:	rex.RB
   14001a9ac:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001a9b5:	pop    rax
   14001a9b6:	push   rax
   14001a9b7:	rex.RB
   14001a9b8:	push   r14
   14001a9ba:	push   rcx
   14001a9bb:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a9bd:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a9c0:	rex.RB jbe 0x14001aa28
   14001a9c3:	outs   dx,BYTE PTR ds:[rsi]
   14001a9c4:	je     0x14001aa06
   14001a9c6:	rex
   14001a9c7:	rex pop rdx
   14001a9c9:	add    BYTE PTR [rdi+0x6f663f0b],dh
   14001a9cf:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a9d2:	rex.WRXB jne 0x14001aa49
   14001a9d5:	rex.RB jbe 0x14001aa3d
   14001a9d8:	outs   dx,BYTE PTR ds:[rsi]
   14001a9d9:	je     0x14001aa1b
   14001a9db:	push   rcx
   14001a9dc:	push   rsp
   14001a9dd:	gs js  0x14001aa54
   14001a9e0:	rex.X jb 0x14001aa52
   14001a9e3:	ja     0x14001aa58
   14001a9e5:	gs jb  0x14001aa28
   14001a9e8:	rex
   14001a9e9:	rex.WRB
   14001a9ea:	rex.RB
   14001a9eb:	rex.B
   14001a9ec:	pop    r8
   14001a9ee:	push   rax
   14001a9ef:	rex.RB
   14001a9f0:	push   r14
   14001a9f2:	push   rcx
   14001a9f3:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a9f5:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a9f8:	rex.RB jbe 0x14001aa60
   14001a9fb:	outs   dx,BYTE PTR ds:[rsi]
   14001a9fc:	je     0x14001aa3e
   14001a9fe:	rex
   14001a9ff:	rex pop rdx
   14001aa01:	add    BYTE PTR [rbx+0x12],dh
   14001aa04:	(bad)  
   14001aa05:	jo     0x14001aa68
   14001aa07:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001aa0e:	je     0x14001aa50
   14001aa10:	push   rcx
   14001aa11:	push   rsp
   14001aa12:	gs js  0x14001aa89
   14001aa15:	rex.X jb 0x14001aa87
   14001aa18:	ja     0x14001aa8d
   14001aa1a:	gs jb  0x14001aa5d
   14001aa1d:	rex
   14001aa1e:	rex.WRB
   14001aa1f:	rex.RB
   14001aa20:	rex.B
   14001aa21:	pop    r8
   14001aa23:	push   rax
   14001aa24:	rex.RB
   14001aa25:	push   r14
   14001aa27:	push   rcx
   14001aa28:	push   rax
   14001aa29:	(bad)  
   14001aa2a:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001aa31:	je     0x14001aa73
   14001aa33:	rex
   14001aa34:	rex pop rdx
   14001aa36:	add    BYTE PTR [rax],al
   14001aa38:	lahf   
   14001aa39:	adc    eax,0x7365723f
   14001aa3e:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   14001aa45:	je     0x14001aa87
   14001aa47:	push   rcx
   14001aa48:	push   rsp
   14001aa49:	gs js  0x14001aac0
   14001aa4c:	rex.RB
   14001aa4d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001aa56:	pop    rax
   14001aa57:	push   rax
   14001aa58:	rex.RB
   14001aa59:	push   r14
   14001aa5b:	push   rcx
   14001aa5c:	push   rdx
   14001aa5d:	gs jae 0x14001aac9
   14001aa60:	jp     0x14001aac7
   14001aa62:	rex.RB jbe 0x14001aaca
   14001aa65:	outs   dx,BYTE PTR ds:[rsi]
   14001aa66:	je     0x14001aaa8
   14001aa68:	rex
   14001aa69:	rex pop rdx
   14001aa6b:	add    BYTE PTR [rdi],dl
   14001aa6d:	or     bh,BYTE PTR [rdi]
   14001aa6f:	fs jb  0x14001aad3
   14001aa72:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001aa75:	je     0x14001aadc
   14001aa77:	jb     0x14001aabe
   14001aa79:	jbe    0x14001aae0
   14001aa7b:	outs   dx,BYTE PTR ds:[rsi]
   14001aa7c:	je     0x14001aabe
   14001aa7e:	push   rcx
   14001aa7f:	push   rsp
   14001aa80:	gs js  0x14001aaf7
   14001aa83:	rex.RB
   14001aa84:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001aa8d:	pop    rax
   14001aa8e:	push   rax
   14001aa8f:	rex.RB
   14001aa90:	push   r14
   14001aa92:	push   rcx
   14001aa93:	rex.R jb 0x14001aaf7
   14001aa96:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001aa99:	je     0x14001ab00
   14001aa9b:	jb     0x14001aae2
   14001aa9d:	jbe    0x14001ab04
   14001aa9f:	outs   dx,BYTE PTR ds:[rsi]
   14001aaa0:	je     0x14001aae2
   14001aaa2:	rex
   14001aaa3:	rex pop rdx
   14001aaa5:	add    BYTE PTR [rax],dh
   14001aaa7:	or     bh,BYTE PTR [rdi]
   14001aaa9:	fs jb  0x14001ab0d
   14001aaac:	rex.WRB outs dx,DWORD PTR ds:[esi]
   14001aaaf:	jbe    0x14001ab16
   14001aab1:	rex.RB jbe 0x14001ab19
   14001aab4:	outs   dx,BYTE PTR ds:[rsi]
   14001aab5:	je     0x14001aaf7
   14001aab7:	push   rcx
   14001aab8:	push   rsp
   14001aab9:	gs js  0x14001ab30
   14001aabc:	rex.RB
   14001aabd:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001aac6:	pop    rax
   14001aac7:	push   rax
   14001aac8:	rex.RB
   14001aac9:	push   r14
   14001aacb:	push   rcx
   14001aacc:	rex.R jb 0x14001ab30
   14001aacf:	rex.WRB outs dx,DWORD PTR ds:[esi]
   14001aad2:	jbe    0x14001ab39
   14001aad4:	rex.RB jbe 0x14001ab3c
   14001aad7:	outs   dx,BYTE PTR ds:[rsi]
   14001aad8:	je     0x14001ab1a
   14001aada:	rex
   14001aadb:	rex pop rdx
   14001aadd:	add    BYTE PTR [rbx],ah
   14001aadf:	or     bh,BYTE PTR [rdi]
   14001aae1:	fs jb  0x14001ab45
   14001aae4:	addr32 rex.WR
   14001aae6:	gs (bad) 
   14001aae8:	jbe    0x14001ab4f
   14001aaea:	rex.RB jbe 0x14001ab52
   14001aaed:	outs   dx,BYTE PTR ds:[rsi]
   14001aaee:	je     0x14001ab30
   14001aaf0:	push   rcx
   14001aaf1:	push   rsp
   14001aaf2:	gs js  0x14001ab69
   14001aaf5:	rex.RB
   14001aaf6:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001aaff:	pop    rax
   14001ab00:	push   rax
   14001ab01:	rex.RB
   14001ab02:	push   r14
   14001ab04:	push   rcx
   14001ab05:	rex.R jb 0x14001ab69
   14001ab08:	addr32 rex.WR
   14001ab0a:	gs (bad) 
   14001ab0c:	jbe    0x14001ab73
   14001ab0e:	rex.RB jbe 0x14001ab76
   14001ab11:	outs   dx,BYTE PTR ds:[rsi]
   14001ab12:	je     0x14001ab54
   14001ab14:	rex
   14001ab15:	rex pop rdx
   14001ab17:	add    BYTE PTR [rbx+0xa],ch
   14001ab1a:	(bad)  
   14001ab1b:	fs jb  0x14001ab8d
   14001ab1e:	jo     0x14001ab65
   14001ab20:	jbe    0x14001ab87
   14001ab22:	outs   dx,BYTE PTR ds:[rsi]
   14001ab23:	je     0x14001ab65
   14001ab25:	push   rcx
   14001ab26:	push   rsp
   14001ab27:	gs js  0x14001ab9e
   14001ab2a:	rex.RB
   14001ab2b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001ab34:	pop    rax
   14001ab35:	push   rax
   14001ab36:	rex.RB
   14001ab37:	push   r14
   14001ab39:	push   rcx
   14001ab3a:	rex.R jb 0x14001abac
   14001ab3d:	jo     0x14001ab84
   14001ab3f:	jbe    0x14001aba6
   14001ab41:	outs   dx,BYTE PTR ds:[rsi]
   14001ab42:	je     0x14001ab84
   14001ab44:	rex
   14001ab45:	rex pop rdx
   14001ab47:	add    BYTE PTR [rbx+0x1c],bl
   14001ab4a:	(bad)  
   14001ab4b:	jae    0x14001abb5
   14001ab4d:	outs   dx,DWORD PTR ds:[rsi]
   14001ab4e:	ja     0x14001ab95
   14001ab50:	jbe    0x14001abb7
   14001ab52:	outs   dx,BYTE PTR ds:[rsi]
   14001ab53:	je     0x14001ab95
   14001ab55:	push   rcx
   14001ab56:	push   rsp
   14001ab57:	gs js  0x14001abce
   14001ab5a:	rex.RB
   14001ab5b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001ab64:	pop    rax
   14001ab65:	push   rax
   14001ab66:	rex.RB
   14001ab67:	push   r14
   14001ab69:	push   rcx
   14001ab6a:	push   rbx
   14001ab6b:	push   0x7645776f
   14001ab70:	outs   dx,BYTE PTR gs:[rsi]
   14001ab72:	je     0x14001abb4
   14001ab74:	rex
   14001ab75:	rex pop rdx
   14001ab77:	add    BYTE PTR [rax+0x68633f06],cl
   14001ab7d:	(bad)  
   14001ab7e:	outs   dx,BYTE PTR ds:[rsi]
   14001ab7f:	addr32 gs rex.RB jbe 0x14001abe9
   14001ab84:	outs   dx,BYTE PTR ds:[rsi]
   14001ab85:	je     0x14001abc7
   14001ab87:	push   rcx
   14001ab88:	push   rsp
   14001ab89:	gs js  0x14001ac00
   14001ab8c:	rex.RB
   14001ab8d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001ab96:	pop    rax
   14001ab97:	push   rax
   14001ab98:	rex.RB
   14001ab99:	push   r14
   14001ab9b:	push   rcx
   14001ab9c:	rex.RB jbe 0x14001ac04
   14001ab9f:	outs   dx,BYTE PTR ds:[rsi]
   14001aba0:	je     0x14001abe2
   14001aba2:	rex
   14001aba3:	rex pop rdx
   14001aba5:	add    BYTE PTR [rax+0xd],bh
   14001aba8:	(bad)  
   14001aba9:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   14001abb0:	je     0x14001ac1a
   14001abb2:	outs   dx,DWORD PTR ds:[rsi]
   14001abb3:	fs rex.RB jbe 0x14001ac1c
   14001abb7:	outs   dx,BYTE PTR ds:[rsi]
   14001abb8:	je     0x14001abfa
   14001abba:	push   rcx
   14001abbb:	push   rsp
   14001abbc:	gs js  0x14001ac33
   14001abbf:	rex.RB
   14001abc0:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001abc9:	pop    rax
   14001abca:	push   rax
   14001abcb:	rex.RB
   14001abcc:	push   r14
   14001abce:	push   rcx
   14001abcf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001abd1:	jo     0x14001ac48
   14001abd3:	je     0x14001ac22
   14001abd5:	gs je  0x14001ac40
   14001abd8:	outs   dx,DWORD PTR ds:[rsi]
   14001abd9:	fs rex.RB jbe 0x14001ac42
   14001abdd:	outs   dx,BYTE PTR ds:[rsi]
   14001abde:	je     0x14001ac20
   14001abe0:	rex
   14001abe1:	rex pop rdx
   14001abe3:	add    BYTE PTR [rax+0x6e693f0d],cl
   14001abe9:	jo     0x14001ac60
   14001abeb:	je     0x14001ac3a
   14001abed:	gs je  0x14001ac58
   14001abf0:	outs   dx,DWORD PTR ds:[rsi]
   14001abf1:	fs push rcx
   14001abf3:	jne    0x14001ac5a
   14001abf5:	jb     0x14001ac70
   14001abf7:	rex push rcx
   14001abf9:	push   rsp
   14001abfa:	gs js  0x14001ac71
   14001abfd:	rex.RB
   14001abfe:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   14001ac07:	(bad)  
   14001ac08:	push   r14
   14001ac0a:	push   rcx
   14001ac0b:	push   rsi
   14001ac0c:	(bad)  
   14001ac0d:	jb     0x14001ac78
   14001ac0f:	(bad)  
   14001ac10:	outs   dx,BYTE PTR ds:[rsi]
   14001ac11:	je     0x14001ac53
   14001ac13:	rex push rdi
   14001ac15:	xor    al,0x49
   14001ac17:	outs   dx,BYTE PTR ds:[rsi]
   14001ac18:	jo     0x14001ac8f
   14001ac1a:	je     0x14001ac69
   14001ac1c:	gs je  0x14001ac87
   14001ac1f:	outs   dx,DWORD PTR ds:[rsi]
   14001ac20:	fs push rcx
   14001ac22:	jne    0x14001ac89
   14001ac24:	jb     0x14001ac9f
   14001ac26:	rex push rcx
   14001ac28:	je     0x14001ac6a
   14001ac2a:	rex
   14001ac2b:	rex pop rdx
   14001ac2d:	add    BYTE PTR [rdx+0x6f663f0b],ah
   14001ac33:	movsxd esi,DWORD PTR [rbp+0x73]
   14001ac36:	rex.WRX
   14001ac37:	gs js  0x14001acae
   14001ac3a:	push   rax
   14001ac3b:	jb     0x14001aca2
   14001ac3d:	jbe    0x14001ac82
   14001ac3f:	push   0x40646c69
   14001ac44:	push   rcx
   14001ac45:	push   rsp
   14001ac46:	gs js  0x14001acbd
   14001ac49:	rex.X jb 0x14001acbb
   14001ac4c:	ja     0x14001acc1
   14001ac4e:	gs jb  0x14001ac91
   14001ac51:	rex
   14001ac52:	rex.WRB
   14001ac53:	rex.RB
   14001ac54:	rex.B
   14001ac55:	pop    r15
   14001ac57:	rex.WRX pop rdi
   14001ac59:	rex.WRX
   14001ac5a:	rex pop rdx
   14001ac5c:	add    BYTE PTR [rax],al
   14001ac5e:	in     al,dx
   14001ac5f:	and    BYTE PTR [rdi],bh
   14001ac61:	jbe    0x14001accc
   14001ac63:	gs ja  0x14001acd6
   14001ac66:	outs   dx,DWORD PTR ds:[rsi]
   14001ac67:	jb     0x14001acdd
   14001ac69:	rex.RB jbe 0x14001acd1
   14001ac6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ac6d:	je     0x14001acaf
   14001ac6f:	push   rcx
   14001ac70:	(bad)
   14001ac76:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14001ac7a:	jb     0x14001aceb
   14001ac7c:	ins    BYTE PTR es:[rdi],dx
   14001ac7d:	ins    BYTE PTR es:[rdi],dx
   14001ac7e:	rex.B jb 0x14001ace6
   14001ac81:	(bad)  
   14001ac82:	rex
   14001ac83:	rex
   14001ac84:	rex.WRB
   14001ac85:	rex.RB
   14001ac86:	rex.B
   14001ac87:	pop    r15
   14001ac89:	rex.WRX push rax
   14001ac8b:	rex.RB
   14001ac8c:	push   r14
   14001ac8e:	push   rcx
   14001ac8f:	rex.RB jbe 0x14001acf7
   14001ac92:	outs   dx,BYTE PTR ds:[rsi]
   14001ac93:	je     0x14001acd5
   14001ac95:	rex
   14001ac96:	rex pop rdx
   14001ac98:	add    BYTE PTR [rax],al
   14001ac9a:	rex.RX (bad) 
   14001ac9c:	(bad)  
   14001ac9d:	jae    0x14001ad02
   14001ac9f:	jb     0x14001ad10
   14001aca1:	ins    BYTE PTR es:[rdi],dx
   14001aca2:	ins    BYTE PTR es:[rdi],dx
   14001aca3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001aca5:	outs   dx,BYTE PTR ds:[rsi]
   14001aca6:	je     0x14001ad0d
   14001aca8:	outs   dx,BYTE PTR ds:[rsi]
   14001aca9:	je     0x14001ad1e
   14001acab:	rex.X jns 0x14001acee
   14001acae:	push   rcx
   14001acaf:	push   rsp
   14001acb0:	gs js  0x14001ad27
   14001acb3:	rex.RB
   14001acb4:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001acbd:	pop    rax
   14001acbe:	rex.W
   14001acbf:	rex.W
   14001acc0:	rex pop rdx
   14001acc2:	add    BYTE PTR [rax],al
   14001acc4:	hlt    
   14001acc5:	and    BYTE PTR [rdi],bh
   14001acc7:	jbe    0x14001ad32
   14001acc9:	gs ja  0x14001ad3c
   14001accc:	outs   dx,DWORD PTR ds:[rsi]
   14001accd:	jb     0x14001ad43
   14001accf:	push   rbx
   14001acd0:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001acd7:	rex push rcx
   14001acd9:	(bad)
   14001acdf:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14001ace3:	jb     0x14001ad54
   14001ace5:	ins    BYTE PTR es:[rdi],dx
   14001ace6:	ins    BYTE PTR es:[rdi],dx
   14001ace7:	rex.B jb 0x14001ad4f
   14001acea:	(bad)  
   14001aceb:	rex
   14001acec:	rex
   14001aced:	rex.WRB
   14001acee:	rex.RB
   14001acef:	rex.X
   14001acf0:	rex.B (bad) 
   14001acf2:	push   r14
   14001acf4:	push   rcx
   14001acf5:	push   rbx
   14001acf6:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001acfd:	add    BYTE PTR [rsi+0x6f6c3f0f],ch
   14001ad03:	(bad)  
   14001ad04:	fs push rdx
   14001ad06:	gs jae 0x14001ad78
   14001ad09:	jne    0x14001ad7d
   14001ad0b:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ad0e:	push   rcx
   14001ad0f:	push   rsp
   14001ad10:	gs js  0x14001ad87
   14001ad13:	rex.X jb 0x14001ad85
   14001ad16:	ja     0x14001ad8b
   14001ad18:	gs jb  0x14001ad5b
   14001ad1b:	rex push rbp
   14001ad1d:	rex.RB
   14001ad1e:	rex.B
   14001ad1f:	rex.B (bad) 
   14001ad21:	push   r14
   14001ad23:	push   rcx
   14001ad24:	push   rsi
   14001ad25:	(bad)  
   14001ad26:	jb     0x14001ad91
   14001ad28:	(bad)  
   14001ad29:	outs   dx,BYTE PTR ds:[rsi]
   14001ad2a:	je     0x14001ad6c
   14001ad2c:	rex
   14001ad2d:	rex.W
   14001ad2e:	rex.B
   14001ad2f:	rex.RB
   14001ad30:	rex.X push rsi
   14001ad32:	push   rcx
   14001ad33:	push   rbp
   14001ad34:	jb     0x14001ada2
   14001ad36:	rex
   14001ad37:	rex
   14001ad38:	rex pop rdx
   14001ad3a:	add    BYTE PTR [rax],al
   14001ad3c:	mov    DWORD PTR [rdi],0x6572633f
   14001ad42:	(bad)  
   14001ad43:	je     0x14001adaa
   14001ad45:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001ad4d:	rex.RX jb 0x14001adbf
   14001ad50:	ins    DWORD PTR es:[rdi],dx
   14001ad51:	push   rbx
   14001ad52:	gs ins BYTE PTR es:[rdi],dx
   14001ad54:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ad59:	outs   dx,BYTE PTR ds:[rsi]
   14001ad5a:	rex push rcx
   14001ad5c:	push   rsp
   14001ad5d:	gs js  0x14001add4
   14001ad60:	rex.RB
   14001ad61:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   14001ad6a:	push   rax
   14001ad6b:	rex.RB
   14001ad6c:	push   r14
   14001ad6e:	push   rcx
   14001ad6f:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001ad77:	rex
   14001ad78:	rex pop rax
   14001ad7a:	pop    rdx
   14001ad7b:	add    BYTE PTR [rsi+0x6],al
   14001ad7e:	(bad)  
   14001ad7f:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001ad82:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ad84:	jae    0x14001adeb
   14001ad86:	jb     0x14001adfc
   14001ad88:	rex.RX jb 0x14001adfa
   14001ad8b:	ins    DWORD PTR es:[rdi],dx
   14001ad8c:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001ad94:	rex push rcx
   14001ad96:	push   rsp
   14001ad97:	gs js  0x14001ae0e
   14001ad9a:	rex.RB
   14001ad9b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   14001ada4:	pop    rdi
   14001ada5:	rex.WRX push rax
   14001ada7:	rex.RB
   14001ada8:	rex.X push rsi
   14001adaa:	push   rcx
   14001adab:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001adb3:	rex
   14001adb4:	rex
   14001adb5:	rex pop rdx
   14001adb7:	add    BYTE PTR [rsi+0x6e693f0d],dl
   14001adbd:	jae    0x14001ae24
   14001adbf:	jb     0x14001ae35
   14001adc1:	rex.RX jb 0x14001ae33
   14001adc4:	ins    DWORD PTR es:[rdi],dx
   14001adc5:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001adcd:	rex push rcx
   14001adcf:	push   rsp
   14001add0:	gs js  0x14001ae47
   14001add3:	rex.RB
   14001add4:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001addd:	pop    rax
   14001adde:	push   rax
   14001addf:	rex.RB
   14001ade0:	rex.X push rsi
   14001ade2:	push   rcx
   14001ade3:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001adeb:	rex
   14001adec:	rex
   14001aded:	rex pop rdx
   14001adef:	add    cl,ch
   14001adf1:	or     DWORD PTR [rdi],edi
   14001adf3:	outs   dx,DWORD PTR fs:[rsi]
   14001adf5:	push   rbx
   14001adf6:	gs je  0x14001ae4d
   14001adf9:	gs js  0x14001ae70
   14001adfc:	rex.XB jne 0x14001ae71
   14001adff:	jae    0x14001ae70
   14001ae01:	jb     0x14001ae43
   14001ae03:	push   rcx
   14001ae04:	push   rsp
   14001ae05:	gs js  0x14001ae7c
   14001ae08:	rex.RB
   14001ae09:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14001ae12:	pop    rax
   14001ae13:	rex.B
   14001ae14:	rex.RB
   14001ae15:	rex.X push rsi
   14001ae17:	push   rcx
   14001ae18:	push   rsp
   14001ae19:	gs js  0x14001ae90
   14001ae1c:	rex.XB jne 0x14001ae91
   14001ae1f:	jae    0x14001ae90
   14001ae21:	jb     0x14001ae63
   14001ae23:	rex
   14001ae24:	rex pop rdx
   14001ae26:	add    BYTE PTR [rax],al
   14001ae28:	repz sbb bh,BYTE PTR [rdi]
   14001ae2b:	jae    0x14001ae92
   14001ae2d:	je     0x14001ae82
   14001ae2f:	outs   dx,DWORD PTR ds:[rsi]
   14001ae30:	jne    0x14001aea4
   14001ae32:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ae35:	push   rcx
   14001ae36:	push   rsp
   14001ae37:	gs js  0x14001aeae
   14001ae3a:	rex.X jb 0x14001aeac
   14001ae3d:	ja     0x14001aeb2
   14001ae3f:	gs jb  0x14001ae82
   14001ae42:	rex push rbp
   14001ae44:	rex.RB
   14001ae45:	rex.B
   14001ae46:	pop    r8
   14001ae48:	rex.B
   14001ae49:	rex.RB
   14001ae4a:	rex.X push rsi
   14001ae4c:	push   rcx
   14001ae4d:	push   rbp
   14001ae4e:	jb     0x14001aebc
   14001ae50:	rex
   14001ae51:	rex
   14001ae52:	rex pop rdx
   14001ae54:	add    BYTE PTR [rax],al
   14001ae56:	out    0x5,eax
   14001ae58:	(bad)  
   14001ae59:	(bad)  
   14001ae5b:	movsxd ebp,DWORD PTR [rbx+0x77]
   14001ae5e:	(bad)  
   14001ae5f:	jb     0x14001aec5
   14001ae61:	rex push rcx
   14001ae63:	push   rsp
   14001ae64:	gs js  0x14001aedb
   14001ae67:	rex.X jb 0x14001aed9
   14001ae6a:	ja     0x14001aedf
   14001ae6c:	gs jb  0x14001aeaf
   14001ae6f:	rex push rbp
   14001ae71:	rex.RB
   14001ae72:	rex.B
   14001ae73:	pop    r8
   14001ae75:	pop    rax
   14001ae76:	pop    rdx
   14001ae77:	add    al,ch
   14001ae79:	or     edi,DWORD PTR [rdi]
   14001ae7b:	outs   dx,WORD PTR ds:[rsi]
   14001ae7d:	jb     0x14001aef6
   14001ae7f:	(bad)  
   14001ae80:	jb     0x14001aee6
   14001ae82:	rex push rcx
   14001ae84:	push   rsp
   14001ae85:	gs js  0x14001aefc
   14001ae88:	rex.X jb 0x14001aefa
   14001ae8b:	ja     0x14001af00
   14001ae8d:	gs jb  0x14001aed0
   14001ae90:	rex push rbp
   14001ae92:	rex.RB
   14001ae93:	rex.B
   14001ae94:	pop    r8
   14001ae96:	pop    rax
   14001ae97:	pop    rdx
   14001ae98:	add    BYTE PTR [rax],al
   14001ae9a:	(bad)  
   14001ae9b:	or     al,0x3f
   14001ae9d:	push   0x40656d6f
   14001aea2:	push   rcx
   14001aea3:	push   rsp
   14001aea4:	gs js  0x14001af1b
   14001aea7:	rex.X jb 0x14001af19
   14001aeaa:	ja     0x14001af1f
   14001aeac:	gs jb  0x14001aeef
   14001aeaf:	rex push rbp
   14001aeb1:	rex.RB
   14001aeb2:	rex.B
   14001aeb3:	pop    r8
   14001aeb5:	pop    rax
   14001aeb6:	pop    rdx
   14001aeb7:	add    BYTE PTR [rsi],dl
   14001aeb9:	adc    eax,0x6c65723f
   14001aebe:	outs   dx,DWORD PTR ds:[rsi]
   14001aebf:	(bad)  
   14001aec0:	fs rex push rcx
   14001aec3:	push   rsp
   14001aec4:	gs js  0x14001af3b
   14001aec7:	rex.X jb 0x14001af39
   14001aeca:	ja     0x14001af3f
   14001aecc:	gs jb  0x14001af0f
   14001aecf:	rex push rbp
   14001aed1:	rex.RB
   14001aed2:	rex.B
   14001aed3:	pop    r8
   14001aed5:	pop    rax
   14001aed6:	pop    rdx
   14001aed7:	add    BYTE PTR [rdx+rax*1+0x3f],ah
   14001aedb:	(bad)  
   14001aedc:	xor    DWORD PTR [rcx+0x54],edx
   14001aedf:	gs js  0x14001af56
   14001aee2:	rex.X jb 0x14001af54
   14001aee5:	ja     0x14001af5a
   14001aee7:	gs jb  0x14001af2a
   14001aeea:	rex push rbp
   14001aeec:	rex.RB
   14001aeed:	rex.B
   14001aeee:	rex.B
   14001aeef:	rex pop rax
   14001aef1:	pop    rdx
   14001aef2:	add    BYTE PTR [rax],al
   14001aef4:	or     BYTE PTR [rip+0x6464613f],al        # 0x1a4661039
   14001aefa:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001aeff:	outs   dx,BYTE PTR ds:[rsi]
   14001af00:	rex push rcx
   14001af02:	rex.WRB
   14001af03:	outs   dx,BYTE PTR gs:[rsi]
   14001af05:	jne    0x14001af47
   14001af07:	rex push rcx
   14001af09:	rex.RB
   14001af0a:	rex.B
   14001af0b:	push   r8
   14001af0d:	rex.RB
   14001af0e:	push   r14
   14001af10:	push   rcx
   14001af11:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001af16:	outs   dx,BYTE PTR ds:[rsi]
   14001af17:	rex
   14001af18:	rex
   14001af19:	rex.B
   14001af1a:	rex.RB
   14001af1b:	rex.X push rsi
   14001af1d:	push   rcx
   14001af1e:	push   rbx
   14001af1f:	je     0x14001af93
   14001af21:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001af28:	add    BYTE PTR [rax],al
   14001af2a:	rol    DWORD PTR [rdi],cl
   14001af2c:	(bad)  
   14001af2d:	movsxd esi,DWORD PTR [rdx+0x65]
   14001af30:	(bad)  
   14001af31:	je     0x14001af98
   14001af33:	push   rbx
   14001af34:	je     0x14001af97
   14001af36:	outs   dx,BYTE PTR ds:[rsi]
   14001af37:	fs (bad) 
   14001af39:	jb     0x14001af9f
   14001af3b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001af3d:	outs   dx,BYTE PTR ds:[rsi]
   14001af3e:	je     0x14001afa5
   14001af40:	js     0x14001afb6
   14001af42:	rex.WRB
   14001af43:	outs   dx,BYTE PTR gs:[rsi]
   14001af45:	jne    0x14001af87
   14001af47:	push   rcx
   14001af48:	push   rsp
   14001af49:	gs js  0x14001afc0
   14001af4c:	rex.RB
   14001af4d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   14001af56:	push   rax
   14001af57:	rex.RB
   14001af58:	push   r14
   14001af5a:	push   rcx
   14001af5b:	rex.WRB
   14001af5c:	outs   dx,BYTE PTR gs:[rsi]
   14001af5e:	jne    0x14001afa0
   14001af60:	rex pop rax
   14001af62:	pop    rdx
   14001af63:	add    BYTE PTR [rax+0x5],ch
   14001af66:	(bad)  
   14001af67:	(bad)  
   14001af68:	fs fs push rsp
   14001af6b:	(bad)  
   14001af6c:	(bad)  
   14001af6d:	rex push rcx
   14001af6f:	push   rsp
   14001af70:	(bad)  
   14001af71:	(bad)  
   14001af72:	push   rdi
   14001af73:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001af7b:	rex.RB
   14001af7c:	rex.B
   14001af7d:	rex.B
   14001af7e:	rex.W push rax
   14001af80:	rex.RB
   14001af81:	push   r14
   14001af83:	push   rcx
   14001af84:	push   rdi
   14001af85:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   14001af8d:	rex.RB
   14001af8e:	rex.X push rsi
   14001af90:	push   rcx
   14001af91:	push   rbx
   14001af92:	je     0x14001b006
   14001af94:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001af9b:	add    BYTE PTR [rbx],bl
   14001af9d:	add    bh,BYTE PTR [rdi]
   14001af9f:	(bad)  
   14001afa0:	xor    DWORD PTR [rcx+0x4d],edx
   14001afa3:	gs jae 0x14001b019
   14001afa6:	(bad)  
   14001afa7:	rex.X outs dx,DWORD PTR gs:[esi]
   14001afab:	js     0x14001afed
   14001afad:	rex push rbp
   14001afaf:	rex.RB
   14001afb0:	rex.B
   14001afb1:	rex.B
   14001afb2:	rex pop rax
   14001afb4:	pop    rdx
   14001afb5:	add    BYTE PTR [rip+0x65733f1c],cl        # 0x1a574eed7
   14001afbb:	je     0x14001b014
   14001afbd:	imul   ebp,DWORD PTR [rsi+0x64],0x6954776f
   14001afc4:	je     0x14001b032
   14001afc6:	gs rex push rcx
   14001afc9:	rex.WRB
   14001afca:	gs jae 0x14001b040
   14001afcd:	(bad)  
   14001afce:	rex.X outs dx,DWORD PTR gs:[esi]
   14001afd2:	js     0x14001b014
   14001afd4:	rex push rcx
   14001afd6:	rex.RB
   14001afd7:	rex.B
   14001afd8:	pop    r8
   14001afda:	rex.B
   14001afdb:	rex.RB
   14001afdc:	rex.X push rsi
   14001afde:	push   rcx
   14001afdf:	push   rbx
   14001afe0:	je     0x14001b054
   14001afe2:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001afe9:	add    BYTE PTR [rdi+0x1b],dl
   14001afec:	(bad)  
   14001afed:	jae    0x14001b054
   14001afef:	je     0x14001b045
   14001aff1:	gs js  0x14001b068
   14001aff4:	rex push rcx
   14001aff6:	rex.WRB
   14001aff7:	gs jae 0x14001b06d
   14001affa:	(bad)  
   14001affb:	rex.X outs dx,DWORD PTR gs:[esi]
   14001afff:	js     0x14001b041
   14001b001:	rex push rcx
   14001b003:	rex.RB
   14001b004:	rex.B
   14001b005:	pop    r8
   14001b007:	rex.B
   14001b008:	rex.RB
   14001b009:	rex.X push rsi
   14001b00b:	push   rcx
   14001b00c:	push   rbx
   14001b00d:	je     0x14001b081
   14001b00f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b016:	add    BYTE PTR [rax],al
   14001b018:	(bad)  
   14001b019:	add    BYTE PTR [rdi],bh
   14001b01b:	(bad)  
   14001b01c:	xor    BYTE PTR [rcx+0x4d],dl
   14001b01f:	gs jae 0x14001b095
   14001b022:	(bad)  
   14001b023:	rex.X outs dx,DWORD PTR gs:[esi]
   14001b027:	js     0x14001b069
   14001b029:	rex push rcx
   14001b02b:	rex.RB
   14001b02c:	rex.B
   14001b02d:	rex.B
   14001b02e:	rex push rax
   14001b030:	rex.RB
   14001b031:	push   r14
   14001b033:	push   rcx
   14001b034:	push   rdi
   14001b035:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001b03d:	pop    rdx
   14001b03e:	add    BYTE PTR [rax],al
   14001b040:	(bad)  
   14001b041:	(bad)  
   14001b042:	(bad)  
   14001b043:	jae    0x14001b0a6
   14001b045:	jbe    0x14001b0ac
   14001b047:	rex.RXB
   14001b048:	outs   dx,DWORD PTR gs:[rsi]
   14001b04a:	ins    DWORD PTR es:[rdi],dx
   14001b04b:	gs je  0x14001b0c0
   14001b04e:	jns    0x14001b090
   14001b050:	push   rcx
   14001b051:	push   rdi
   14001b052:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001b05a:	rex.RB
   14001b05b:	rex.X
   14001b05c:	rex.B (bad) 
   14001b05e:	push   r14
   14001b060:	push   rcx
   14001b061:	rex.X jns 0x14001b0d8
   14001b064:	gs rex.B jb 0x14001b0da
   14001b068:	(bad)  
   14001b069:	jns    0x14001b0ab
   14001b06b:	rex pop rax
   14001b06d:	pop    rdx
   14001b06e:	add    BYTE PTR [rax],al
   14001b070:	mov    esp,0x65723f15
   14001b075:	jae    0x14001b0eb
   14001b077:	outs   dx,DWORD PTR ds:[rsi]
   14001b078:	jb     0x14001b0df
   14001b07a:	rex.RXB
   14001b07b:	outs   dx,DWORD PTR gs:[rsi]
   14001b07d:	ins    DWORD PTR es:[rdi],dx
   14001b07e:	gs je  0x14001b0f3
   14001b081:	jns    0x14001b0c3
   14001b083:	push   rcx
   14001b084:	push   rdi
   14001b085:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001b08d:	rex.RB
   14001b08e:	rex.B
   14001b08f:	pop    r15
   14001b091:	rex.WRX
   14001b092:	rex.B
   14001b093:	rex.RB
   14001b094:	rex.X push rsi
   14001b096:	push   rcx
   14001b097:	rex.X jns 0x14001b10e
   14001b09a:	gs rex.B jb 0x14001b110
   14001b09e:	(bad)  
   14001b09f:	jns    0x14001b0e1
   14001b0a1:	rex
   14001b0a2:	rex pop rdx
   14001b0a4:	add    BYTE PTR [rax],al
   14001b0a6:	rex.R (bad) 
   14001b0a8:	(bad)  
   14001b0a9:	jae    0x14001b110
   14001b0ab:	je     0x14001b0f0
   14001b0ad:	outs   dx,BYTE PTR gs:[rsi]
   14001b0af:	je     0x14001b123
   14001b0b1:	(bad)  
   14001b0b2:	ins    BYTE PTR es:[rdi],dx
   14001b0b3:	push   rdi
   14001b0b4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d514074
   14001b0bc:	(bad)  
   14001b0bd:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b0c4:	ja     0x14001b106
   14001b0c6:	rex push rcx
   14001b0c8:	rex.RB
   14001b0c9:	rex.B
   14001b0ca:	pop    r8
   14001b0cc:	push   rax
   14001b0cd:	rex.RB
   14001b0ce:	push   r14
   14001b0d0:	push   rcx
   14001b0d1:	push   rdi
   14001b0d2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001b0da:	pop    rdx
   14001b0db:	add    BYTE PTR [rdx+0x1],ah
   14001b0de:	(bad)  
   14001b0df:	(bad)  
   14001b0e0:	xor    BYTE PTR [rcx+0x54],dl
   14001b0e3:	(bad)  
   14001b0e4:	(bad)  
   14001b0e5:	push   rdi
   14001b0e6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001b0ee:	rex.RB
   14001b0ef:	rex.B
   14001b0f0:	rex.B
   14001b0f1:	rex push rax
   14001b0f3:	rex.RB
   14001b0f4:	push   r14
   14001b0f6:	push   rcx
   14001b0f7:	push   rdi
   14001b0f8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001b100:	pop    rdx
   14001b101:	add    BYTE PTR [rdx+0x19],dh
   14001b104:	(bad)  
   14001b105:	jae    0x14001b16c
   14001b107:	je     0x14001b156
   14001b109:	outs   dx,BYTE PTR gs:[rsi]
   14001b10b:	jne    0x14001b15f
   14001b10d:	outs   dx,DWORD PTR ds:[rsi]
   14001b10e:	ins    BYTE PTR es:[rdi],dx
   14001b10f:	gs rex push rcx
   14001b112:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001b117:	outs   dx,BYTE PTR ds:[rsi]
   14001b118:	rex
   14001b119:	rex push rcx
   14001b11b:	rex.RB
   14001b11c:	rex.B
   14001b11d:	pop    r8
   14001b11f:	push   rdi
   14001b120:	xor    al,0x4d
   14001b122:	outs   dx,BYTE PTR gs:[rsi]
   14001b124:	jne    0x14001b178
   14001b126:	outs   dx,DWORD PTR ds:[rsi]
   14001b127:	ins    BYTE PTR es:[rdi],dx
   14001b128:	rex xor DWORD PTR gs:[rax+0x40],eax
   14001b12d:	pop    rdx
   14001b12e:	add    BYTE PTR [rax],al
   14001b130:	or     DWORD PTR [rip+0x6464613f],eax        # 0x1a4661275
   14001b136:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001b13b:	outs   dx,BYTE PTR ds:[rsi]
   14001b13c:	rex push rcx
   14001b13e:	rex.WRB
   14001b13f:	outs   dx,BYTE PTR gs:[rsi]
   14001b141:	jne    0x14001b183
   14001b143:	rex push rcx
   14001b145:	rex.RB
   14001b146:	rex.B
   14001b147:	push   r8
   14001b149:	rex.RB
   14001b14a:	push   r14
   14001b14c:	push   rcx
   14001b14d:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001b152:	outs   dx,BYTE PTR ds:[rsi]
   14001b153:	rex
   14001b154:	rex
   14001b155:	rex.B
   14001b156:	rex.RB
   14001b157:	rex.X push rsi
   14001b159:	push   rcx
   14001b15a:	push   rbx
   14001b15b:	je     0x14001b1cf
   14001b15d:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001b164:	rex.X push rsi
   14001b166:	push   rcx
   14001b167:	rex.WRXB (bad) 
   14001b169:	push   0x65
   14001b16b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b16f:	push   rax
   14001b170:	rex.RB
   14001b171:	rex.X
   14001b172:	rex.R
   14001b173:	rex.B
   14001b174:	rex.RB
   14001b175:	rex.X push rsi
   14001b177:	push   rcx
   14001b178:	rex.WXB
   14001b179:	gs jns 0x14001b1cf
   14001b17c:	gs jno 0x14001b1f4
   14001b17f:	outs   dx,BYTE PTR gs:[rsi]
   14001b181:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b184:	rex
   14001b185:	rex pop rdx
   14001b187:	add    BYTE PTR [rcx+0x5],cl
   14001b18a:	(bad)  
   14001b18b:	(bad)  
   14001b18c:	fs fs rex.WRB
   14001b18f:	outs   dx,BYTE PTR gs:[rsi]
   14001b191:	jne    0x14001b1d3
   14001b193:	push   rcx
   14001b194:	rex.WRB
   14001b195:	outs   dx,BYTE PTR gs:[rsi]
   14001b197:	jne    0x14001b1db
   14001b199:	(bad)  
   14001b19a:	jb     0x14001b1dc
   14001b19c:	rex push rcx
   14001b19e:	rex.RB
   14001b19f:	rex.B
   14001b1a0:	push   r8
   14001b1a2:	rex.RB
   14001b1a3:	push   r14
   14001b1a5:	push   rcx
   14001b1a6:	rex.WRB
   14001b1a7:	outs   dx,BYTE PTR gs:[rsi]
   14001b1a9:	jne    0x14001b1eb
   14001b1ab:	rex
   14001b1ac:	rex.B
   14001b1ad:	rex.RB
   14001b1ae:	rex.X push rsi
   14001b1b0:	push   rcx
   14001b1b1:	push   rbx
   14001b1b2:	je     0x14001b226
   14001b1b4:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b1bb:	add    BYTE PTR [rdx+0x10],al
   14001b1be:	(bad)  
   14001b1bf:	ins    DWORD PTR es:[rdi],dx
   14001b1c0:	outs   dx,BYTE PTR gs:[rsi]
   14001b1c2:	jne    0x14001b206
   14001b1c4:	(bad)  
   14001b1c5:	jb     0x14001b207
   14001b1c7:	push   rcx
   14001b1c8:	rex.WRB (bad) 
   14001b1ca:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b1d1:	ja     0x14001b213
   14001b1d3:	rex push rcx
   14001b1d5:	rex.RB
   14001b1d6:	rex.X
   14001b1d7:	push   r8
   14001b1d9:	rex.RB
   14001b1da:	push   r14
   14001b1dc:	push   rcx
   14001b1dd:	rex.WRB
   14001b1de:	outs   dx,BYTE PTR gs:[rsi]
   14001b1e0:	jne    0x14001b224
   14001b1e2:	(bad)  
   14001b1e3:	jb     0x14001b225
   14001b1e5:	rex pop rax
   14001b1e7:	pop    rdx
   14001b1e8:	add    BYTE PTR [rax],al
   14001b1ea:	(bad)  
   14001b1eb:	add    BYTE PTR [rdi],bh
   14001b1ed:	(bad)  
   14001b1ee:	xor    BYTE PTR [rcx+0x4d],dl
   14001b1f1:	(bad)  
   14001b1f2:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b1f9:	ja     0x14001b23b
   14001b1fb:	rex push rcx
   14001b1fd:	rex.RB
   14001b1fe:	rex.B
   14001b1ff:	rex.B
   14001b200:	rex push rax
   14001b202:	rex.RB
   14001b203:	push   r14
   14001b205:	push   rcx
   14001b206:	push   rdi
   14001b207:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   14001b20f:	(bad)  
   14001b210:	and    al,0x51
   14001b212:	rex.RX ins BYTE PTR es:[rdi],dx
   14001b214:	(bad)  
   14001b215:	addr32 jae 0x14001b258
   14001b218:	push   rdi
   14001b219:	xor    al,0x57
   14001b21b:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   14001b222:	jo     0x14001b289
   14001b224:	rex push rcx
   14001b226:	je     0x14001b268
   14001b228:	rex
   14001b229:	rex
   14001b22a:	rex
   14001b22b:	rex pop rdx
   14001b22d:	add    cl,bl
   14001b22f:	or     bh,BYTE PTR [rdi]
   14001b231:	gs jbe 0x14001b299
   14001b234:	outs   dx,BYTE PTR ds:[rsi]
   14001b235:	je     0x14001b277
   14001b237:	push   rcx
   14001b238:	rex.WRB (bad) 
   14001b23a:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b241:	ja     0x14001b283
   14001b243:	rex
   14001b244:	rex.WRB
   14001b245:	rex.RB
   14001b246:	rex.B
   14001b247:	pop    r15
   14001b249:	rex.WRX push rax
   14001b24b:	rex.RB
   14001b24c:	push   r14
   14001b24e:	push   rcx
   14001b24f:	rex.RB jbe 0x14001b2b7
   14001b252:	outs   dx,BYTE PTR ds:[rsi]
   14001b253:	je     0x14001b295
   14001b255:	rex
   14001b256:	rex pop rdx
   14001b258:	add    BYTE PTR [rax],al
   14001b25a:	lea    eax,[rdi]
   14001b25c:	(bad)  
   14001b25d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b260:	je     0x14001b2c7
   14001b262:	js     0x14001b2d8
   14001b264:	rex.WRB
   14001b265:	outs   dx,BYTE PTR gs:[rsi]
   14001b267:	jne    0x14001b2ae
   14001b269:	jbe    0x14001b2d0
   14001b26b:	outs   dx,BYTE PTR ds:[rsi]
   14001b26c:	je     0x14001b2ae
   14001b26e:	push   rcx
   14001b26f:	rex.WRB (bad) 
   14001b271:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b278:	ja     0x14001b2ba
   14001b27a:	rex
   14001b27b:	rex.WRB
   14001b27c:	rex.RB
   14001b27d:	rex.B
   14001b27e:	pop    r8
   14001b280:	push   rax
   14001b281:	rex.RB
   14001b282:	push   r14
   14001b284:	push   rcx
   14001b285:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b287:	outs   dx,BYTE PTR ds:[rsi]
   14001b288:	je     0x14001b2ef
   14001b28a:	js     0x14001b300
   14001b28c:	rex.WRB
   14001b28d:	outs   dx,BYTE PTR gs:[rsi]
   14001b28f:	jne    0x14001b2d6
   14001b291:	jbe    0x14001b2f8
   14001b293:	outs   dx,BYTE PTR ds:[rsi]
   14001b294:	je     0x14001b2d6
   14001b296:	rex
   14001b297:	rex pop rdx
   14001b299:	add    cl,cl
   14001b29b:	(bad)  
   14001b29c:	(bad)  
   14001b29d:	movsxd esi,DWORD PTR [rdx+0x65]
   14001b2a0:	(bad)  
   14001b2a1:	je     0x14001b308
   14001b2a3:	push   rax
   14001b2a4:	outs   dx,DWORD PTR ds:[rsi]
   14001b2a5:	jo     0x14001b31c
   14001b2a7:	jo     0x14001b2f6
   14001b2a9:	outs   dx,BYTE PTR gs:[rsi]
   14001b2ab:	jne    0x14001b2ed
   14001b2ad:	push   rcx
   14001b2ae:	rex.WRB (bad) 
   14001b2b0:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b2b7:	ja     0x14001b2f9
   14001b2b9:	rex push rbp
   14001b2bb:	rex.RB
   14001b2bc:	rex.B
   14001b2bd:	push   r8
   14001b2bf:	rex.RB
   14001b2c0:	push   r14
   14001b2c2:	push   rcx
   14001b2c3:	rex.WRB
   14001b2c4:	outs   dx,BYTE PTR gs:[rsi]
   14001b2c6:	jne    0x14001b308
   14001b2c8:	rex pop rax
   14001b2ca:	pop    rdx
   14001b2cb:	add    BYTE PTR [rsi+0x656d3f10],bh
   14001b2d1:	je     0x14001b334
   14001b2d3:	rex.WRXB (bad) 
   14001b2d5:	push   0x65
   14001b2d7:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b2db:	push   rsp
   14001b2dc:	(bad)  
   14001b2dd:	(bad)  
   14001b2de:	push   rdi
   14001b2df:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b2e7:	rex.RB
   14001b2e8:	rex.X
   14001b2e9:	push   r8
   14001b2eb:	rex.RB
   14001b2ec:	rex.X push rbp
   14001b2ee:	push   rcx
   14001b2ef:	rex.WRB
   14001b2f0:	gs je  0x14001b354
   14001b2f3:	rex.WRXB (bad) 
   14001b2f5:	push   0x65
   14001b2f7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b2fb:	pop    rax
   14001b2fc:	pop    rdx
   14001b2fd:	add    BYTE PTR [rcx],dh
   14001b2ff:	adc    al,0x3f
   14001b301:	jno    0x14001b377
   14001b303:	pop    rdi
   14001b304:	ins    DWORD PTR es:[rdi],dx
   14001b305:	gs je  0x14001b369
   14001b308:	movsxd esp,DWORD PTR [rcx+0x73]
   14001b30b:	je     0x14001b34d
   14001b30d:	push   rcx
   14001b30e:	push   rsp
   14001b30f:	(bad)  
   14001b310:	(bad)  
   14001b311:	push   rdi
   14001b312:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b31a:	rex.RB
   14001b31b:	rex.B
   14001b31c:	push   r8
   14001b31e:	rex.RB
   14001b31f:	pop    r8
   14001b321:	push   rax
   14001b322:	rex.RB
   14001b323:	rex.X
   14001b324:	rex.R
   14001b325:	rex pop rdx
   14001b327:	add    BYTE PTR [rdi+0x74713f13],ah
   14001b32d:	pop    rdi
   14001b32e:	ins    DWORD PTR es:[rdi],dx
   14001b32f:	gs je  0x14001b393
   14001b332:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b335:	ins    BYTE PTR es:[rdi],dx
   14001b336:	rex push rcx
   14001b338:	push   rsp
   14001b339:	(bad)  
   14001b33a:	(bad)  
   14001b33b:	push   rdi
   14001b33c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b344:	rex.RB
   14001b345:	rex.B
   14001b346:	rex.B
   14001b347:	rex.W push rdi
   14001b349:	xor    al,0x43
   14001b34b:	(bad)  
   14001b34c:	ins    BYTE PTR es:[rdi],dx
   14001b34d:	ins    BYTE PTR es:[rdi],dx
   14001b34e:	rex push rcx
   14001b350:	rex.WRB
   14001b351:	gs je  0x14001b3b5
   14001b354:	rex.WRXB (bad) 
   14001b356:	push   0x65
   14001b358:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b35c:	rex.W push rax
   14001b35e:	rex.RB
   14001b35f:	push   r8
   14001b361:	rex.RB
   14001b362:	pop    r8
   14001b364:	rex pop rdx
   14001b366:	add    BYTE PTR [rax],al
   14001b368:	repz or bh,BYTE PTR [rdi]
   14001b36b:	gs jbe 0x14001b3d3
   14001b36e:	outs   dx,BYTE PTR ds:[rsi]
   14001b36f:	je     0x14001b3b1
   14001b371:	push   rcx
   14001b372:	push   rsp
   14001b373:	(bad)  
   14001b374:	(bad)  
   14001b375:	push   rdi
   14001b376:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b37e:	rex.RB
   14001b37f:	rex.B
   14001b380:	pop    r15
   14001b382:	rex.WRX push rax
   14001b384:	rex.RB
   14001b385:	push   r14
   14001b387:	push   rcx
   14001b388:	rex.RB jbe 0x14001b3f0
   14001b38b:	outs   dx,BYTE PTR ds:[rsi]
   14001b38c:	je     0x14001b3ce
   14001b38e:	rex
   14001b38f:	rex pop rdx
   14001b391:	add    BYTE PTR [rdi+0x69733f1c],bh
   14001b397:	jp     0x14001b3fe
   14001b399:	imul   rbp,QWORD PTR [rsi+0x74],0x61545140
   14001b3a1:	(bad)  
   14001b3a2:	push   rdi
   14001b3a3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b3ab:	rex.RB
   14001b3ac:	rex.X
   14001b3ad:	rex.B (bad) 
   14001b3af:	push   r14
   14001b3b1:	push   rcx
   14001b3b2:	push   rbx
   14001b3b3:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001b3ba:	add    BYTE PTR [rax],al
   14001b3bc:	sbb    BYTE PTR [rcx],dl
   14001b3be:	(bad)  
   14001b3bf:	ins    DWORD PTR es:[rdi],dx
   14001b3c0:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001b3c7:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001b3ce:	rex push rcx
   14001b3d0:	push   rsp
   14001b3d1:	(bad)  
   14001b3d2:	(bad)  
   14001b3d3:	push   rdi
   14001b3d4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b3dc:	rex.RB
   14001b3dd:	rex.X
   14001b3de:	rex.B (bad) 
   14001b3e0:	push   r14
   14001b3e2:	push   rcx
   14001b3e3:	push   rbx
   14001b3e4:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001b3eb:	add    BYTE PTR [rdi+0x65683f0c],al
   14001b3f1:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001b3f8:	push   rdi
   14001b3f9:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x61545140
   14001b401:	(bad)  
   14001b402:	push   rdi
   14001b403:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b40b:	rex.RB
   14001b40c:	rex.X
   14001b40d:	rex.B
   14001b40e:	rex.W
   14001b40f:	rex.W
   14001b410:	rex pop rdx
   14001b412:	add    BYTE PTR [rax],al
   14001b414:	gs or  al,0x3f
   14001b417:	push   0x65487361
   14001b41c:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001b423:	push   rdi
   14001b424:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x61545140
   14001b42c:	(bad)  
   14001b42d:	push   rdi
   14001b42e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b436:	rex.RB
   14001b437:	rex.X
   14001b438:	pop    r15
   14001b43a:	rex.WRX pop rax
   14001b43c:	pop    rdx
   14001b43d:	add    BYTE PTR [rbp+0xf],dl
   14001b440:	(bad)  
   14001b441:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001b445:	jb     0x14001b4ac
   14001b447:	jae    0x14001b4bc
   14001b449:	rex.RB jbe 0x14001b4b1
   14001b44c:	outs   dx,BYTE PTR ds:[rsi]
   14001b44d:	je     0x14001b48f
   14001b44f:	push   rcx
   14001b450:	push   rsp
   14001b451:	(bad)  
   14001b452:	(bad)  
   14001b453:	push   rdi
   14001b454:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b45c:	rex.RB
   14001b45d:	rex.B
   14001b45e:	pop    r8
   14001b460:	push   rax
   14001b461:	rex.RB
   14001b462:	push   r14
   14001b464:	push   rcx
   14001b465:	rex.WXB
   14001b466:	gs jns 0x14001b4ae
   14001b469:	jbe    0x14001b4d0
   14001b46b:	outs   dx,BYTE PTR ds:[rsi]
   14001b46c:	je     0x14001b4ae
   14001b46e:	rex
   14001b46f:	rex pop rdx
   14001b471:	add    BYTE PTR [rcx+0x12],dh
   14001b474:	(bad)  
   14001b475:	jo     0x14001b4d8
   14001b477:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001b47e:	je     0x14001b4c0
   14001b480:	push   rcx
   14001b481:	push   rsp
   14001b482:	(bad)  
   14001b483:	(bad)  
   14001b484:	push   rdi
   14001b485:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b48d:	rex.RB
   14001b48e:	rex.B
   14001b48f:	pop    r8
   14001b491:	push   rax
   14001b492:	rex.RB
   14001b493:	push   r14
   14001b495:	push   rcx
   14001b496:	push   rax
   14001b497:	(bad)  
   14001b498:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001b49f:	je     0x14001b4e1
   14001b4a1:	rex
   14001b4a2:	rex pop rdx
   14001b4a4:	add    BYTE PTR [rax],al
   14001b4a6:	sahf   
   14001b4a7:	adc    eax,0x7365723f
   14001b4ac:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   14001b4b3:	je     0x14001b4f5
   14001b4b5:	push   rcx
   14001b4b6:	push   rsp
   14001b4b7:	(bad)  
   14001b4b8:	(bad)  
   14001b4b9:	push   rdi
   14001b4ba:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b4c2:	rex.RB
   14001b4c3:	rex.B
   14001b4c4:	pop    r8
   14001b4c6:	push   rax
   14001b4c7:	rex.RB
   14001b4c8:	push   r14
   14001b4ca:	push   rcx
   14001b4cb:	push   rdx
   14001b4cc:	gs jae 0x14001b538
   14001b4cf:	jp     0x14001b536
   14001b4d1:	rex.RB jbe 0x14001b539
   14001b4d4:	outs   dx,BYTE PTR ds:[rsi]
   14001b4d5:	je     0x14001b517
   14001b4d7:	rex
   14001b4d8:	rex pop rdx
   14001b4da:	add    BYTE PTR [rax],al
   14001b4dc:	pop    rdx
   14001b4dd:	sbb    al,0x3f
   14001b4df:	jae    0x14001b549
   14001b4e1:	outs   dx,DWORD PTR ds:[rsi]
   14001b4e2:	ja     0x14001b529
   14001b4e4:	jbe    0x14001b54b
   14001b4e6:	outs   dx,BYTE PTR ds:[rsi]
   14001b4e7:	je     0x14001b529
   14001b4e9:	push   rcx
   14001b4ea:	push   rsp
   14001b4eb:	(bad)  
   14001b4ec:	(bad)  
   14001b4ed:	push   rdi
   14001b4ee:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b4f6:	rex.RB
   14001b4f7:	rex.B
   14001b4f8:	pop    r8
   14001b4fa:	push   rax
   14001b4fb:	rex.RB
   14001b4fc:	push   r14
   14001b4fe:	push   rcx
   14001b4ff:	push   rbx
   14001b500:	push   0x7645776f
   14001b505:	outs   dx,BYTE PTR gs:[rsi]
   14001b507:	je     0x14001b549
   14001b509:	rex
   14001b50a:	rex pop rdx
   14001b50c:	add    BYTE PTR [rax],al
   14001b50e:	xchg   DWORD PTR [rsi],eax
   14001b510:	(bad)  
   14001b511:	movsxd ebp,DWORD PTR [rax+0x61]
   14001b514:	outs   dx,BYTE PTR ds:[rsi]
   14001b515:	addr32 gs rex.RB jbe 0x14001b57f
   14001b51a:	outs   dx,BYTE PTR ds:[rsi]
   14001b51b:	je     0x14001b55d
   14001b51d:	push   rcx
   14001b51e:	push   rsp
   14001b51f:	(bad)  
   14001b520:	(bad)  
   14001b521:	push   rdi
   14001b522:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b52a:	rex.RB
   14001b52b:	rex.B
   14001b52c:	pop    r8
   14001b52e:	push   rax
   14001b52f:	rex.RB
   14001b530:	push   r14
   14001b532:	push   rcx
   14001b533:	rex.RB jbe 0x14001b59b
   14001b536:	outs   dx,BYTE PTR ds:[rsi]
   14001b537:	je     0x14001b579
   14001b539:	rex
   14001b53a:	rex pop rdx
   14001b53c:	add    BYTE PTR [rax],al
   14001b53e:	(bad)  
   14001b53f:	(bad)  
   14001b540:	(bad)  
   14001b541:	je     0x14001b5a4
   14001b543:	(bad)  
   14001b544:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b546:	jae    0x14001b5ad
   14001b548:	jb     0x14001b5be
   14001b54a:	gs fs rex push rcx
   14001b54e:	push   rsp
   14001b54f:	(bad)  
   14001b550:	(bad)  
   14001b551:	push   rdi
   14001b552:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b55a:	rex.RB
   14001b55b:	rex.B
   14001b55c:	pop    r8
   14001b55e:	rex.W
   14001b55f:	rex pop rdx
   14001b561:	add    BYTE PTR [rdi],bl
   14001b563:	(bad)  
   14001b564:	(bad)  
   14001b565:	je     0x14001b5c8
   14001b567:	(bad)
   14001b56c:	jbe    0x14001b5d3
   14001b56e:	fs rex push rcx
   14001b571:	push   rsp
   14001b572:	(bad)  
   14001b573:	(bad)  
   14001b574:	push   rdi
   14001b575:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001b57d:	rex.RB
   14001b57e:	rex.B
   14001b57f:	pop    r8
   14001b581:	rex.W
   14001b582:	rex pop rdx
   14001b584:	add    BYTE PTR [rax],al
   14001b586:	pop    rbp
   14001b587:	add    bh,BYTE PTR [rdi]
   14001b589:	(bad)  
   14001b58a:	xor    DWORD PTR [rcx+0x54],edx
   14001b58d:	(bad)  
   14001b58e:	(bad)  
   14001b58f:	push   rdi
   14001b590:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14001b598:	rex.RB
   14001b599:	rex.B
   14001b59a:	rex.B
   14001b59b:	rex pop rax
   14001b59d:	pop    rdx
   14001b59e:	add    BYTE PTR [rax],al
   14001b5a0:	(bad)  
   14001b5a1:	add    bh,BYTE PTR [rdi]
   14001b5a3:	(bad)  
   14001b5a4:	xor    DWORD PTR [rcx+0x4d],edx
   14001b5a7:	(bad)  
   14001b5a8:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b5af:	ja     0x14001b5f1
   14001b5b1:	rex push rbp
   14001b5b3:	rex.RB
   14001b5b4:	rex.B
   14001b5b5:	rex.B
   14001b5b6:	rex pop rax
   14001b5b8:	pop    rdx
   14001b5b9:	add    BYTE PTR [rsi+0x313f3f01],ch
   14001b5bf:	push   rcx
   14001b5c0:	rex.B jo 0x14001b633
   14001b5c3:	ins    BYTE PTR es:[rdi],dx
   14001b5c4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b5cb:	rex
   14001b5cc:	rex push rbp
   14001b5ce:	rex.RB
   14001b5cf:	rex.B
   14001b5d0:	rex.B
   14001b5d1:	rex pop rax
   14001b5d3:	pop    rdx
   14001b5d4:	add    BYTE PTR [rax],al
   14001b5d6:	adc    al,0xb
   14001b5d8:	(bad)  
   14001b5d9:	gs js  0x14001b641
   14001b5dc:	movsxd eax,DWORD PTR [rax+0x51]
   14001b5df:	rex.B jo 0x14001b652
   14001b5e2:	ins    BYTE PTR es:[rdi],dx
   14001b5e3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b5ea:	rex
   14001b5eb:	rex push rbx
   14001b5ed:	rex.B
   14001b5ee:	rex.W pop rax
   14001b5f0:	pop    rdx
   14001b5f1:	add    BYTE PTR [rsi+0x1c],al
   14001b5f4:	(bad)  
   14001b5f5:	jae    0x14001b65f
   14001b5f7:	outs   dx,DWORD PTR ds:[rsi]
   14001b5f8:	ja     0x14001b63a
   14001b5fa:	push   rcx
   14001b5fb:	push   rdi
   14001b5fc:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001b604:	rex.RB
   14001b605:	rex.B
   14001b606:	pop    r8
   14001b608:	pop    rax
   14001b609:	pop    rdx
   14001b60a:	add    BYTE PTR [rax],al
   14001b60c:	std    
   14001b60d:	sbb    edi,DWORD PTR [rdi]
   14001b60f:	jae    0x14001b676
   14001b611:	je     0x14001b66a
   14001b613:	imul   ebp,DWORD PTR [rsi+0x64],0x6349776f
   14001b61a:	outs   dx,DWORD PTR ds:[rsi]
   14001b61b:	outs   dx,BYTE PTR ds:[rsi]
   14001b61c:	rex push rcx
   14001b61e:	rex.B jo 0x14001b691
   14001b621:	ins    BYTE PTR es:[rdi],dx
   14001b622:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b629:	rex
   14001b62a:	rex push rbx
   14001b62c:	pop    r8
   14001b62e:	rex.B
   14001b62f:	rex.RB
   14001b630:	rex.X push rsi
   14001b632:	push   rcx
   14001b633:	movsxd rbp,DWORD PTR [r15+0x6e]
   14001b637:	rex
   14001b638:	rex
   14001b639:	rex pop rdx
   14001b63b:	add    BYTE PTR [rdi],dl
   14001b63d:	add    BYTE PTR [rdi],bh
   14001b63f:	(bad)  
   14001b640:	xor    BYTE PTR [rcx+0x41],dl
   14001b643:	jo     0x14001b6b5
   14001b645:	ins    BYTE PTR es:[rdi],dx
   14001b646:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b64d:	rex
   14001b64e:	rex push rcx
   14001b650:	rex.RB
   14001b651:	rex.B
   14001b652:	rex.B
   14001b653:	rex
   14001b654:	rex.B
   14001b655:	rex.RB
   14001b656:	rex.B
   14001b657:	rex.W push rax
   14001b659:	rex.RB
   14001b65a:	push   r8
   14001b65c:	rex.RB
   14001b65d:	rex.B
   14001b65e:	rex.R
   14001b65f:	rex.W
   14001b660:	rex pop rdx
   14001b662:	add    BYTE PTR [rax],al
   14001b664:	scas   al,BYTE PTR es:[rdi]
   14001b665:	sbb    eax,0x6174733f
   14001b66a:	je     0x14001b6d5
   14001b66c:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001b66f:	je     0x14001b6d2
   14001b671:	rex.WRXB (bad) 
   14001b673:	push   0x65
   14001b675:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b679:	push   rdi
   14001b67a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x32404074
   14001b682:	push   rbp
   14001b683:	push   rcx
   14001b684:	rex.WRB
   14001b685:	gs je  0x14001b6e9
   14001b688:	rex.WRXB (bad) 
   14001b68a:	push   0x65
   14001b68c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b690:	rex.X add al,bl
   14001b693:	adc    edi,DWORD PTR [rdi]
   14001b695:	jno    0x14001b70b
   14001b697:	pop    rdi
   14001b698:	ins    DWORD PTR es:[rdi],dx
   14001b699:	gs je  0x14001b6fd
   14001b69c:	movsxd esp,DWORD PTR [rcx+0x73]
   14001b69f:	je     0x14001b6e1
   14001b6a1:	push   rcx
   14001b6a2:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001b6aa:	push   rbp
   14001b6ab:	rex.RB
   14001b6ac:	rex.B
   14001b6ad:	push   r8
   14001b6af:	rex.RB
   14001b6b0:	pop    r8
   14001b6b2:	push   rax
   14001b6b3:	rex.RB
   14001b6b4:	rex.X
   14001b6b5:	rex.R
   14001b6b6:	rex pop rdx
   14001b6b8:	add    BYTE PTR [rax],al
   14001b6ba:	rex.WRX adc r15,QWORD PTR [rdi]
   14001b6bd:	jno    0x14001b733
   14001b6bf:	pop    rdi
   14001b6c0:	ins    DWORD PTR es:[rdi],dx
   14001b6c1:	gs je  0x14001b725
   14001b6c4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b6c7:	ins    BYTE PTR es:[rdi],dx
   14001b6c8:	rex push rcx
   14001b6ca:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001b6d2:	push   rbp
   14001b6d3:	rex.RB
   14001b6d4:	rex.B
   14001b6d5:	rex.B
   14001b6d6:	rex.W push rdi
   14001b6d8:	xor    al,0x43
   14001b6da:	(bad)  
   14001b6db:	ins    BYTE PTR es:[rdi],dx
   14001b6dc:	ins    BYTE PTR es:[rdi],dx
   14001b6dd:	rex push rcx
   14001b6df:	rex.WRB
   14001b6e0:	gs je  0x14001b744
   14001b6e3:	rex.WRXB (bad) 
   14001b6e5:	push   0x65
   14001b6e7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b6eb:	rex.W push rax
   14001b6ed:	rex.RB
   14001b6ee:	push   r8
   14001b6f0:	rex.RB
   14001b6f1:	pop    r8
   14001b6f3:	rex pop rdx
   14001b6f5:	add    BYTE PTR [rbx+0x1d],al
   14001b6f8:	(bad)  
   14001b6f9:	jae    0x14001b76f
   14001b6fb:	(bad)  
   14001b6fc:	je     0x14001b767
   14001b6fe:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001b701:	je     0x14001b764
   14001b703:	rex.WRXB (bad) 
   14001b705:	push   0x65
   14001b707:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b70b:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001b713:	xor    dl,BYTE PTR [rbp+0x51]
   14001b716:	rex.WRB
   14001b717:	gs je  0x14001b77b
   14001b71a:	rex.WRXB (bad) 
   14001b71c:	push   0x65
   14001b71e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b722:	rex.X add BYTE PTR [rsi],sil
   14001b725:	adc    al,0x3f
   14001b727:	jno    0x14001b79d
   14001b729:	pop    rdi
   14001b72a:	ins    DWORD PTR es:[rdi],dx
   14001b72b:	gs je  0x14001b78f
   14001b72e:	movsxd esp,DWORD PTR [rcx+0x73]
   14001b731:	je     0x14001b773
   14001b733:	push   rcx
   14001b734:	push   rsp
   14001b735:	gs js  0x14001b7ac
   14001b738:	rex.X jb 0x14001b7aa
   14001b73b:	ja     0x14001b7b0
   14001b73d:	gs jb  0x14001b780
   14001b740:	rex push rbp
   14001b742:	rex.RB
   14001b743:	rex.B
   14001b744:	push   r8
   14001b746:	rex.RB
   14001b747:	pop    r8
   14001b749:	push   rax
   14001b74a:	rex.RB
   14001b74b:	rex.X
   14001b74c:	rex.R
   14001b74d:	rex pop rdx
   14001b74f:	add    BYTE PTR [rbx+rdx*1+0x5f74713f],ch
   14001b756:	ins    DWORD PTR es:[rdi],dx
   14001b757:	gs je  0x14001b7bb
   14001b75a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b75d:	ins    BYTE PTR es:[rdi],dx
   14001b75e:	rex push rcx
   14001b760:	push   rsp
   14001b761:	gs js  0x14001b7d8
   14001b764:	rex.X jb 0x14001b7d6
   14001b767:	ja     0x14001b7dc
   14001b769:	gs jb  0x14001b7ac
   14001b76c:	rex push rbp
   14001b76e:	rex.RB
   14001b76f:	rex.B
   14001b770:	rex.B
   14001b771:	rex.W push rdi
   14001b773:	xor    al,0x43
   14001b775:	(bad)  
   14001b776:	ins    BYTE PTR es:[rdi],dx
   14001b777:	ins    BYTE PTR es:[rdi],dx
   14001b778:	rex push rcx
   14001b77a:	rex.WRB
   14001b77b:	gs je  0x14001b7df
   14001b77e:	rex.WRXB (bad) 
   14001b780:	push   0x65
   14001b782:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b786:	rex.W push rax
   14001b788:	rex.RB
   14001b789:	push   r8
   14001b78b:	rex.RB
   14001b78c:	pop    r8
   14001b78e:	rex pop rdx
   14001b790:	add    BYTE PTR [rax],al
   14001b792:	movabs ds:0x6369746174733f1d,al
   14001b79b:	rex.WRB
   14001b79c:	gs je  0x14001b800
   14001b79f:	rex.WRXB (bad) 
   14001b7a1:	push   0x65
   14001b7a3:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b7a7:	push   rsp
   14001b7a8:	gs js  0x14001b81f
   14001b7ab:	rex.X jb 0x14001b81d
   14001b7ae:	ja     0x14001b823
   14001b7b0:	gs jb  0x14001b7f3
   14001b7b3:	xor    dl,BYTE PTR [rbp+0x51]
   14001b7b7:	rex.WRB
   14001b7b8:	gs je  0x14001b81c
   14001b7bb:	rex.WRXB (bad) 
   14001b7bd:	push   0x65
   14001b7bf:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b7c3:	rex.X add BYTE PTR [rax],al
   14001b7c6:	(bad)  
   14001b7c7:	adc    al,0x3f
   14001b7c9:	jno    0x14001b83f
   14001b7cb:	pop    rdi
   14001b7cc:	ins    DWORD PTR es:[rdi],dx
   14001b7cd:	gs je  0x14001b831
   14001b7d0:	movsxd esp,DWORD PTR [rcx+0x73]
   14001b7d3:	je     0x14001b815
   14001b7d5:	push   rcx
   14001b7d6:	rex.WRB (bad) 
   14001b7d8:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b7df:	ja     0x14001b821
   14001b7e1:	rex push rbp
   14001b7e3:	rex.RB
   14001b7e4:	rex.B
   14001b7e5:	push   r8
   14001b7e7:	rex.RB
   14001b7e8:	pop    r8
   14001b7ea:	push   rax
   14001b7eb:	rex.RB
   14001b7ec:	rex.X
   14001b7ed:	rex.R
   14001b7ee:	rex pop rdx
   14001b7f0:	add    BYTE PTR [rax],al
   14001b7f2:	jge    0x14001b807
   14001b7f4:	(bad)  
   14001b7f5:	jno    0x14001b86b
   14001b7f7:	pop    rdi
   14001b7f8:	ins    DWORD PTR es:[rdi],dx
   14001b7f9:	gs je  0x14001b85d
   14001b7fc:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b7ff:	ins    BYTE PTR es:[rdi],dx
   14001b800:	rex push rcx
   14001b802:	rex.WRB (bad) 
   14001b804:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b80b:	ja     0x14001b84d
   14001b80d:	rex push rbp
   14001b80f:	rex.RB
   14001b810:	rex.B
   14001b811:	rex.B
   14001b812:	rex.W push rdi
   14001b814:	xor    al,0x43
   14001b816:	(bad)  
   14001b817:	ins    BYTE PTR es:[rdi],dx
   14001b818:	ins    BYTE PTR es:[rdi],dx
   14001b819:	rex push rcx
   14001b81b:	rex.WRB
   14001b81c:	gs je  0x14001b880
   14001b81f:	rex.WRXB (bad) 
   14001b821:	push   0x65
   14001b823:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b827:	rex.W push rax
   14001b829:	rex.RB
   14001b82a:	push   r8
   14001b82c:	rex.RB
   14001b82d:	pop    r8
   14001b82f:	rex pop rdx
   14001b831:	add    BYTE PTR [rdx+0x1d],dh
   14001b834:	(bad)  
   14001b835:	jae    0x14001b8ab
   14001b837:	(bad)  
   14001b838:	je     0x14001b8a3
   14001b83a:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001b83d:	je     0x14001b8a0
   14001b83f:	rex.WRXB (bad) 
   14001b841:	push   0x65
   14001b843:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b847:	rex.WRB (bad) 
   14001b849:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001b850:	ja     0x14001b892
   14001b852:	xor    dl,BYTE PTR [rbp+0x51]
   14001b856:	rex.WRB
   14001b857:	gs je  0x14001b8bb
   14001b85a:	rex.WRXB (bad) 
   14001b85c:	push   0x65
   14001b85e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b862:	rex.X add BYTE PTR [rcx+0x74],dl
   14001b866:	xor    eax,0x67646957
   14001b86b:	gs je  0x14001b8e1
   14001b86e:	cs fs ins BYTE PTR es:[rdi],dx
   14001b871:	ins    BYTE PTR es:[rdi],dx
   14001b872:	add    BYTE PTR [rax],al
   14001b874:	add    di,WORD PTR [rdi]
   14001b877:	(bad)  
   14001b878:	xor    DWORD PTR [rcx+0x46],edx
   14001b87b:	outs   dx,DWORD PTR ds:[rsi]
   14001b87c:	outs   dx,BYTE PTR ds:[rsi]
   14001b87d:	je     0x14001b8bf
   14001b87f:	rex push rcx
   14001b881:	rex.RB
   14001b882:	rex.B
   14001b883:	rex.B
   14001b884:	rex pop rax
   14001b886:	pop    rdx
   14001b887:	add    al,bh
   14001b889:	add    eax,0x51423f3f
   14001b88e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001b890:	outs   dx,BYTE PTR ds:[rsi]
   14001b891:	je     0x14001b8d3
   14001b893:	rex push rcx
   14001b895:	rex.RB
   14001b896:	rex.X
   14001b897:	rex.B (bad) 
   14001b899:	push   r14
   14001b89b:	push   rcx
   14001b89c:	push   rsi
   14001b89d:	(bad)  
   14001b89e:	jb     0x14001b909
   14001b8a0:	(bad)  
   14001b8a1:	outs   dx,BYTE PTR ds:[rsi]
   14001b8a2:	je     0x14001b8e4
   14001b8a4:	rex pop rax
   14001b8a6:	pop    rdx
   14001b8a7:	add    BYTE PTR [rcx+0x65733f56],bh
   14001b8ad:	je     0x14001b902
   14001b8af:	je     0x14001b92a
   14001b8b1:	ins    BYTE PTR es:[rdi],dx
   14001b8b2:	gs rex push rcx
   14001b8b5:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001b8b7:	outs   dx,BYTE PTR ds:[rsi]
   14001b8b8:	je     0x14001b8fa
   14001b8ba:	rex push rcx
   14001b8bc:	rex.RB
   14001b8bd:	rex.B
   14001b8be:	pop    r8
   14001b8c0:	push   rdi
   14001b8c1:	xor    al,0x53
   14001b8c3:	je     0x14001b93e
   14001b8c5:	ins    BYTE PTR es:[rdi],dx
   14001b8c6:	rex xor DWORD PTR gs:[rax+0x40],eax
   14001b8cb:	pop    rdx
   14001b8cc:	add    BYTE PTR [rax],al
   14001b8ce:	pushf  
   14001b8cf:	add    BYTE PTR [rdi],bh
   14001b8d1:	(bad)  
   14001b8d2:	xor    BYTE PTR [rcx+0x46],dl
   14001b8d5:	outs   dx,DWORD PTR ds:[rsi]
   14001b8d6:	outs   dx,BYTE PTR ds:[rsi]
   14001b8d7:	je     0x14001b919
   14001b8d9:	rex push rcx
   14001b8db:	rex.RB
   14001b8dc:	rex.B
   14001b8dd:	rex.B
   14001b8de:	rex pop rax
   14001b8e0:	pop    rdx
   14001b8e1:	add    BYTE PTR [rcx+0x313f3f03],dl
   14001b8e7:	push   rcx
   14001b8e8:	rex.WXB
   14001b8e9:	gs jns 0x14001b93f
   14001b8ec:	gs jno 0x14001b964
   14001b8ef:	outs   dx,BYTE PTR gs:[rsi]
   14001b8f1:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b8f4:	rex push rcx
   14001b8f6:	rex.RB
   14001b8f7:	rex.B
   14001b8f8:	rex.B
   14001b8f9:	rex pop rax
   14001b8fb:	pop    rdx
   14001b8fc:	add    BYTE PTR [rax],al
   14001b8fe:	add    BYTE PTR [rcx],al
   14001b900:	(bad)  
   14001b901:	(bad)  
   14001b902:	xor    BYTE PTR [rcx+0x4b],dl
   14001b905:	gs jns 0x14001b95b
   14001b908:	gs jno 0x14001b980
   14001b90b:	outs   dx,BYTE PTR gs:[rsi]
   14001b90d:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b910:	rex push rcx
   14001b912:	rex.RB
   14001b913:	rex.B
   14001b914:	rex.B
   14001b915:	rex push rdi
   14001b917:	xor    al,0x53
   14001b919:	je     0x14001b97c
   14001b91b:	outs   dx,BYTE PTR ds:[rsi]
   14001b91c:	fs (bad) 
   14001b91e:	jb     0x14001b984
   14001b920:	rex.WXB
   14001b921:	gs jns 0x14001b964
   14001b924:	xor    BYTE PTR [rax+0x40],al
   14001b927:	pop    rdx
   14001b928:	add    BYTE PTR [rax],al
   14001b92a:	inc    DWORD PTR [rax]
   14001b92c:	(bad)  
   14001b92d:	(bad)  
   14001b92e:	xor    BYTE PTR [rcx+0x4b],dl
   14001b931:	gs jns 0x14001b987
   14001b934:	gs jno 0x14001b9ac
   14001b937:	outs   dx,BYTE PTR gs:[rsi]
   14001b939:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b93c:	rex push rcx
   14001b93e:	rex.RB
   14001b93f:	rex.B
   14001b940:	rex.B
   14001b941:	rex
   14001b942:	rex.W
   14001b943:	rex.W
   14001b944:	rex.W
   14001b945:	rex.W
   14001b946:	rex pop rdx
   14001b948:	add    BYTE PTR [rax],al
   14001b94a:	jp     0x14001b94f
   14001b94c:	(bad)  
   14001b94d:	(bad)  
   14001b94e:	xor    DWORD PTR [rcx+0x49],edx
   14001b951:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b954:	rex
   14001b955:	rex push rcx
   14001b957:	rex.RB
   14001b958:	rex.B
   14001b959:	rex.B
   14001b95a:	rex pop rax
   14001b95c:	pop    rdx
   14001b95d:	add    al,cl
   14001b95f:	add    BYTE PTR [rdi],bh
   14001b961:	(bad)  
   14001b962:	xor    BYTE PTR [rcx+0x49],dl
   14001b965:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b968:	rex
   14001b969:	rex push rcx
   14001b96b:	rex.RB
   14001b96c:	rex.B
   14001b96d:	rex.B
   14001b96e:	rex
   14001b96f:	rex.B
   14001b970:	rex.RB
   14001b971:	rex.X push rsi
   14001b973:	push   rcx
   14001b974:	push   rbx
   14001b975:	je     0x14001b9e9
   14001b977:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b97e:	add    BYTE PTR [rax],al
   14001b980:	push   rcx
   14001b981:	je     0x14001b9b8
   14001b983:	rex.RXB jne 0x14001b9ef
   14001b986:	cs fs ins BYTE PTR es:[rdi],dx
   14001b989:	ins    BYTE PTR es:[rdi],dx
   14001b98a:	add    BYTE PTR [rax],al
   14001b98c:	mov    ebx,0x6f633f00
   14001b991:	outs   dx,BYTE PTR ds:[rsi]
   14001b992:	outs   dx,BYTE PTR ds:[rsi]
   14001b993:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001b998:	rex.R
   14001b999:	rex.X jne 0x14001ba0f
   14001b99c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b99e:	outs   dx,BYTE PTR ds:[rsi]
   14001b99f:	outs   dx,BYTE PTR ds:[rsi]
   14001b9a0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b9a5:	outs   dx,BYTE PTR ds:[rsi]
   14001b9a6:	rex
   14001b9a7:	rex push rcx
   14001b9a9:	rex.RB
   14001b9aa:	rex.B
   14001b9ab:	pop    r15
   14001b9ad:	rex.WRX
   14001b9ae:	rex.B
   14001b9af:	rex.RB
   14001b9b0:	rex.X push rsi
   14001b9b2:	push   rcx
   14001b9b3:	push   rbx
   14001b9b4:	je     0x14001ba28
   14001b9b6:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   14001b9bd:	xor    BYTE PTR [rax+0x45],dl
   14001b9c0:	push   r14
   14001b9c2:	push   rcx
   14001b9c3:	rex.WRXB (bad) 
   14001b9c5:	push   0x65
   14001b9c7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b9cb:	push   rax
   14001b9cc:	rex.RB
   14001b9cd:	rex.X
   14001b9ce:	rex.R
   14001b9cf:	rex pop rdx
   14001b9d1:	add    BYTE PTR [rsi+0x61623f00],ah
   14001b9d7:	jae    0x14001ba3e
   14001b9d9:	push   rbx
   14001b9da:	gs jb  0x14001ba53
   14001b9dd:	imul   esp,DWORD PTR [rbx+0x65],0x42445140
   14001b9e4:	jne    0x14001ba59
   14001b9e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b9e8:	outs   dx,BYTE PTR ds:[rsi]
   14001b9e9:	outs   dx,BYTE PTR ds:[rsi]
   14001b9ea:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b9ef:	outs   dx,BYTE PTR ds:[rsi]
   14001b9f0:	rex
   14001b9f1:	rex push rcx
   14001b9f3:	rex.RB
   14001b9f4:	rex.X
   14001b9f5:	rex.B (bad) 
   14001b9f7:	push   r14
   14001b9f9:	push   rcx
   14001b9fa:	push   rbx
   14001b9fb:	je     0x14001ba6f
   14001b9fd:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001ba04:	add    BYTE PTR [rax],al
   14001ba06:	xor    eax,DWORD PTR [rax]
   14001ba08:	(bad)  
   14001ba09:	(bad)  
   14001ba0a:	xor    DWORD PTR [rcx+0x44],edx
   14001ba0d:	rex.X jne 0x14001ba83
   14001ba10:	rex.RB jb 0x14001ba85
   14001ba13:	outs   dx,DWORD PTR ds:[rsi]
   14001ba14:	jb     0x14001ba56
   14001ba16:	rex push rcx
   14001ba18:	rex.RB
   14001ba19:	rex.B
   14001ba1a:	rex.B
   14001ba1b:	rex pop rax
   14001ba1d:	pop    rdx
   14001ba1e:	add    BYTE PTR [rax],al
   14001ba20:	and    al,0x1
   14001ba22:	(bad)  
   14001ba23:	ins    DWORD PTR es:[rdi],dx
   14001ba24:	gs jae 0x14001ba9a
   14001ba27:	(bad)  
   14001ba28:	addr32 gs rex push rcx
   14001ba2c:	rex.R
   14001ba2d:	rex.X jne 0x14001baa3
   14001ba30:	rex.RB jb 0x14001baa5
   14001ba33:	outs   dx,DWORD PTR ds:[rsi]
   14001ba34:	jb     0x14001ba76
   14001ba36:	rex push rcx
   14001ba38:	rex.RB
   14001ba39:	rex.X
   14001ba3a:	rex.B (bad) 
   14001ba3c:	push   r14
   14001ba3e:	push   rcx
   14001ba3f:	push   rbx
   14001ba40:	je     0x14001bab4
   14001ba42:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001ba49:	add    BYTE PTR [rsi],bl
   14001ba4b:	add    DWORD PTR [rdi],edi
   14001ba4d:	ins    BYTE PTR es:[rdi],dx
   14001ba4e:	(bad)  
   14001ba4f:	jae    0x14001bac5
   14001ba51:	rex.RB jb 0x14001bac6
   14001ba54:	outs   dx,DWORD PTR ds:[rsi]
   14001ba55:	jb     0x14001ba97
   14001ba57:	push   rcx
   14001ba58:	rex.R
   14001ba59:	rex.X jne 0x14001bacf
   14001ba5c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ba5e:	outs   dx,BYTE PTR ds:[rsi]
   14001ba5f:	outs   dx,BYTE PTR ds:[rsi]
   14001ba60:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ba65:	outs   dx,BYTE PTR ds:[rsi]
   14001ba66:	rex
   14001ba67:	rex push rcx
   14001ba69:	rex.RB
   14001ba6a:	rex.X
   14001ba6b:	rex.B (bad) 
   14001ba6d:	push   r14
   14001ba6f:	push   rcx
   14001ba70:	rex.R
   14001ba71:	rex.X jne 0x14001bae7
   14001ba74:	rex.RB jb 0x14001bae9
   14001ba77:	outs   dx,DWORD PTR ds:[rsi]
   14001ba78:	jb     0x14001baba
   14001ba7a:	rex pop rax
   14001ba7c:	pop    rdx
   14001ba7d:	add    dh,bh
   14001ba7f:	add    BYTE PTR [rdi],bh
   14001ba81:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   14001ba88:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ba8b:	push   rcx
   14001ba8c:	rex.R
   14001ba8d:	rex.X jne 0x14001bb03
   14001ba90:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ba92:	outs   dx,BYTE PTR ds:[rsi]
   14001ba93:	outs   dx,BYTE PTR ds:[rsi]
   14001ba94:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ba99:	outs   dx,BYTE PTR ds:[rsi]
   14001ba9a:	rex
   14001ba9b:	rex push rcx
   14001ba9d:	rex.RB
   14001ba9e:	rex.X
   14001ba9f:	push   r8
   14001baa1:	rex.RB
   14001baa2:	push   r14
   14001baa4:	push   rcx
   14001baa5:	rex.R
   14001baa6:	rex.X jne 0x14001bb1c
   14001baa9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001baab:	outs   dx,BYTE PTR ds:[rsi]
   14001baac:	outs   dx,BYTE PTR ds:[rsi]
   14001baad:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bab2:	outs   dx,BYTE PTR ds:[rsi]
   14001bab3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bab5:	je     0x14001bb1c
   14001bab7:	jb     0x14001bb1f
   14001bab9:	(bad)  
   14001baba:	movsxd esp,DWORD PTR [rbp+0x40]
   14001babd:	rex pop rax
   14001babf:	pop    rdx
   14001bac0:	add    BYTE PTR [rax],al
   14001bac2:	add    eax,0x73693f01
   14001bac7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bac9:	outs   dx,BYTE PTR ds:[rsi]
   14001baca:	outs   dx,BYTE PTR ds:[rsi]
   14001bacb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001bad0:	rex push rcx
   14001bad2:	rex.R
   14001bad3:	rex.X jne 0x14001bb49
   14001bad6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bad8:	outs   dx,BYTE PTR ds:[rsi]
   14001bad9:	outs   dx,BYTE PTR ds:[rsi]
   14001bada:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001badf:	outs   dx,BYTE PTR ds:[rsi]
   14001bae0:	rex
   14001bae1:	rex push rcx
   14001bae3:	rex.RB
   14001bae4:	rex.X
   14001bae5:	pop    r15
   14001bae7:	rex.WRX pop rax
   14001bae9:	pop    rdx
   14001baea:	add    BYTE PTR [rax],al
   14001baec:	or     BYTE PTR [rax],al
   14001baee:	(bad)  
   14001baef:	(bad)  
   14001baf0:	xor    BYTE PTR [rcx+0x44],dl
   14001baf3:	rex.X jne 0x14001bb69
   14001baf6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001baf8:	outs   dx,BYTE PTR ds:[rsi]
   14001baf9:	outs   dx,BYTE PTR ds:[rsi]
   14001bafa:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001baff:	outs   dx,BYTE PTR ds:[rsi]
   14001bb00:	rex
   14001bb01:	rex push rcx
   14001bb03:	rex.RB
   14001bb04:	rex.B
   14001bb05:	rex.B
   14001bb06:	rex
   14001bb07:	rex.B
   14001bb08:	rex.RB
   14001bb09:	rex.X push rsi
   14001bb0b:	xor    BYTE PTR [rax+0x40],al
   14001bb0e:	pop    rdx
   14001bb0f:	add    BYTE PTR [rax],dh
   14001bb11:	add    BYTE PTR [rdi],bh
   14001bb13:	(bad)  
   14001bb14:	xor    DWORD PTR [rcx+0x44],edx
   14001bb17:	rex.X jne 0x14001bb8d
   14001bb1a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bb1c:	outs   dx,BYTE PTR ds:[rsi]
   14001bb1d:	outs   dx,BYTE PTR ds:[rsi]
   14001bb1e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bb23:	outs   dx,BYTE PTR ds:[rsi]
   14001bb24:	rex
   14001bb25:	rex push rcx
   14001bb27:	rex.RB
   14001bb28:	rex.B
   14001bb29:	rex.B
   14001bb2a:	rex pop rax
   14001bb2c:	pop    rdx
   14001bb2d:	add    BYTE PTR [rdi],dh
   14001bb2f:	add    BYTE PTR [rdi],bh
   14001bb31:	(bad)  
   14001bb32:	xor    DWORD PTR [rcx+0x44],edx
   14001bb35:	rex.X jne 0x14001bbab
   14001bb38:	rex.WRXB (bad) 
   14001bb3a:	push   0x65
   14001bb3c:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14001bb40:	je     0x14001bbaa
   14001bb42:	rex
   14001bb43:	rex push rcx
   14001bb45:	rex.RB
   14001bb46:	rex.B
   14001bb47:	rex.B
   14001bb48:	rex pop rax
   14001bb4a:	pop    rdx
   14001bb4b:	add    BYTE PTR [rsi],dl
   14001bb4d:	add    BYTE PTR [rdi],bh
   14001bb4f:	(bad)  
   14001bb50:	xor    BYTE PTR [rcx+0x44],dl
   14001bb53:	rex.X jne 0x14001bbc9
   14001bb56:	rex.WRXB (bad) 
   14001bb58:	push   0x65
   14001bb5a:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14001bb5e:	je     0x14001bbc8
   14001bb60:	rex
   14001bb61:	rex push rcx
   14001bb63:	rex.RB
   14001bb64:	rex.B
   14001bb65:	rex.B
   14001bb66:	rex
   14001bb67:	rex.B
   14001bb68:	rex.RB
   14001bb69:	rex.X push rsi
   14001bb6b:	push   rcx
   14001bb6c:	push   rbx
   14001bb6d:	je     0x14001bbe1
   14001bb6f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001bb76:	add    BYTE PTR [rax],al
   14001bb78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bb79:	add    DWORD PTR [rdi],edi
   14001bb7b:	je     0x14001bbf6
   14001bb7d:	jo     0x14001bbe4
   14001bb7f:	push   rsp
   14001bb80:	outs   dx,DWORD PTR ds:[rsi]
   14001bb81:	push   rbx
   14001bb82:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14001bb89:	gs rex push rcx
   14001bb8c:	rex.R
   14001bb8d:	rex.X jne 0x14001bc03
   14001bb90:	rex.WRB
   14001bb91:	gs je  0x14001bbf5
   14001bb94:	push   rsp
   14001bb95:	jns    0x14001bc07
   14001bb97:	gs rex
   14001bb99:	rex push rbx
   14001bb9b:	push   r8
   14001bb9d:	rex.RB
   14001bb9e:	rex.X
   14001bb9f:	rex.R
   14001bba0:	rex.W
   14001bba1:	rex pop rdx
   14001bba3:	add    BYTE PTR [rsi+0x1],bl
   14001bba6:	(bad)  
   14001bba7:	jb     0x14001bc0e
   14001bba9:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14001bbb1:	push   rbx
   14001bbb2:	gs jb  0x14001bc2b
   14001bbb5:	imul   esp,DWORD PTR [rbx+0x65],0x656d614e
   14001bbbc:	jae    0x14001bbfe
   14001bbbe:	push   rcx
   14001bbbf:	rex.R
   14001bbc0:	rex.X jne 0x14001bc36
   14001bbc3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bbc5:	outs   dx,BYTE PTR ds:[rsi]
   14001bbc6:	outs   dx,BYTE PTR ds:[rsi]
   14001bbc7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bbcc:	outs   dx,BYTE PTR ds:[rsi]
   14001bbcd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bbcf:	je     0x14001bc36
   14001bbd1:	jb     0x14001bc39
   14001bbd3:	(bad)  
   14001bbd4:	movsxd esp,DWORD PTR [rbp+0x40]
   14001bbd7:	rex push rcx
   14001bbd9:	rex.RB
   14001bbda:	rex.X
   14001bbdb:	rex.B (bad) 
   14001bbdd:	push   r14
   14001bbdf:	(bad)  
   14001bbe0:	and    al,0x51
   14001bbe2:	rex.R
   14001bbe3:	rex.X jne 0x14001bc59
   14001bbe6:	push   rdx
   14001bbe7:	gs jo  0x14001bc56
   14001bbea:	jns    0x14001bc2c
   14001bbec:	push   rsi
   14001bbed:	push   rcx
   14001bbee:	push   rbx
   14001bbef:	je     0x14001bc63
   14001bbf1:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001bbf8:	rex
   14001bbf9:	rex
   14001bbfa:	rex
   14001bbfb:	rex pop rax
   14001bbfd:	pop    rdx
   14001bbfe:	add    BYTE PTR [rax],al
   14001bc00:	fwait
   14001bc01:	add    BYTE PTR [rdi],bh
   14001bc03:	(bad)  
   14001bc04:	jb     0x14001bc6d
   14001bc06:	jne    0x14001bc75
   14001bc08:	outs   dx,BYTE PTR gs:[rsi]
   14001bc0a:	je     0x14001bc60
   14001bc0c:	outs   dx,DWORD PTR ds:[rsi]
   14001bc0d:	push   rbx
   14001bc0e:	je     0x14001bc82
   14001bc10:	imul   ebp,DWORD PTR [rsi+0x67],0x42445140
   14001bc17:	jne    0x14001bc8c
   14001bc19:	push   rbp
   14001bc1a:	je     0x14001bc85
   14001bc1c:	ins    BYTE PTR es:[rdi],dx
   14001bc1d:	rex
   14001bc1e:	rex pop rcx
   14001bc20:	rex.B (bad) 
   14001bc22:	push   r14
   14001bc24:	push   rcx
   14001bc25:	push   rbx
   14001bc26:	je     0x14001bc9a
   14001bc28:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001bc2f:	rex.X push rsi
   14001bc31:	push   rcx
   14001bc32:	push   rsi
   14001bc33:	(bad)  
   14001bc34:	jb     0x14001bc9f
   14001bc36:	(bad)  
   14001bc37:	outs   dx,BYTE PTR ds:[rsi]
   14001bc38:	je     0x14001bc7a
   14001bc3a:	rex
   14001bc3b:	rex pop rdx
   14001bc3d:	add    BYTE PTR [rdx],ah
   14001bc3f:	add    DWORD PTR [rdi],edi
   14001bc41:	ins    DWORD PTR es:[rdi],dx
   14001bc42:	gs ins DWORD PTR es:[rdi],dx
   14001bc44:	(bad)  
   14001bc45:	gs jb  0x14001bc88
   14001bc48:	push   rcx
   14001bc49:	rex.R
   14001bc4a:	rex.X jne 0x14001bcc0
   14001bc4d:	rex.WRB
   14001bc4e:	gs jae 0x14001bcc4
   14001bc51:	(bad)  
   14001bc52:	addr32 gs rex
   14001bc55:	rex push rcx
   14001bc57:	rex.RB
   14001bc58:	rex.X
   14001bc59:	rex.B (bad) 
   14001bc5b:	push   r14
   14001bc5d:	push   rcx
   14001bc5e:	push   rbx
   14001bc5f:	je     0x14001bcd3
   14001bc61:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bc68:	add    BYTE PTR [rax],al
   14001bc6a:	inc    DWORD PTR [rax]
   14001bc6c:	(bad)  
   14001bc6d:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   14001bc74:	movsxd esp,DWORD PTR [rbp+0x40]
   14001bc77:	push   rcx
   14001bc78:	rex.R
   14001bc79:	rex.X jne 0x14001bcef
   14001bc7c:	rex.WRB
   14001bc7d:	gs jae 0x14001bcf3
   14001bc80:	(bad)  
   14001bc81:	addr32 gs rex
   14001bc84:	rex push rcx
   14001bc86:	rex.RB
   14001bc87:	rex.X
   14001bc88:	rex.B (bad) 
   14001bc8a:	push   r14
   14001bc8c:	push   rcx
   14001bc8d:	push   rbx
   14001bc8e:	je     0x14001bd02
   14001bc90:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bc97:	add    BYTE PTR [rsi],dh
   14001bc99:	add    DWORD PTR [rdi],edi
   14001bc9b:	jo     0x14001bcfe
   14001bc9d:	je     0x14001bd07
   14001bc9f:	rex push rcx
   14001bca1:	rex.R
   14001bca2:	rex.X jne 0x14001bd18
   14001bca5:	rex.WRB
   14001bca6:	gs jae 0x14001bd1c
   14001bca9:	(bad)  
   14001bcaa:	addr32 gs rex
   14001bcad:	rex push rcx
   14001bcaf:	rex.RB
   14001bcb0:	rex.X
   14001bcb1:	rex.B (bad) 
   14001bcb3:	push   r14
   14001bcb5:	push   rcx
   14001bcb6:	push   rbx
   14001bcb7:	je     0x14001bd2b
   14001bcb9:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bcc0:	add    BYTE PTR [rax],al
   14001bcc2:	add    WORD PTR [rdi],di
   14001bcc5:	jae    0x14001bd2c
   14001bcc7:	jb     0x14001bd3f
   14001bcc9:	imul   esp,DWORD PTR [rbx+0x65],0x42445140
   14001bcd0:	jne    0x14001bd45
   14001bcd2:	rex.WRB
   14001bcd3:	gs jae 0x14001bd49
   14001bcd6:	(bad)  
   14001bcd7:	addr32 gs rex
   14001bcda:	rex push rcx
   14001bcdc:	rex.RB
   14001bcdd:	rex.X
   14001bcde:	rex.B (bad) 
   14001bce0:	push   r14
   14001bce2:	push   rcx
   14001bce3:	push   rbx
   14001bce4:	je     0x14001bd58
   14001bce6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bced:	add    BYTE PTR [rsi+0x79743f01],ah
   14001bcf3:	jo     0x14001bd5a
   14001bcf5:	rex push rcx
   14001bcf7:	rex.R
   14001bcf8:	rex.X jne 0x14001bd6e
   14001bcfb:	rex.WRB
   14001bcfc:	gs jae 0x14001bd72
   14001bcff:	(bad)  
   14001bd00:	addr32 gs rex
   14001bd03:	rex push rcx
   14001bd05:	rex.RB
   14001bd06:	rex.X
   14001bd07:	rex.B (bad) 
   14001bd09:	push   r15
   14001bd0b:	xor    al,0x4d
   14001bd0d:	gs jae 0x14001bd83
   14001bd10:	(bad)  
   14001bd11:	addr32 gs push rsp
   14001bd14:	jns    0x14001bd86
   14001bd16:	rex xor DWORD PTR gs:[rax+0x58],eax
   14001bd1b:	pop    rdx
   14001bd1c:	add    BYTE PTR [rax],al
   14001bd1e:	pushf  
   14001bd1f:	add    BYTE PTR [rdi],bh
   14001bd21:	(bad)  
   14001bd22:	jb     0x14001bd8b
   14001bd24:	jne    0x14001bd93
   14001bd26:	outs   dx,BYTE PTR gs:[rsi]
   14001bd28:	je     0x14001bd9d
   14001bd2a:	rex push rcx
   14001bd2c:	rex.R
   14001bd2d:	rex.X jne 0x14001bda3
   14001bd30:	rex.WRB
   14001bd31:	gs jae 0x14001bda7
   14001bd34:	(bad)  
   14001bd35:	addr32 gs rex
   14001bd38:	rex push rcx
   14001bd3a:	rex.RB
   14001bd3b:	rex.X
   14001bd3c:	rex.B (bad) 
   14001bd3e:	push   r14
   14001bd40:	(bad)  
   14001bd41:	and    al,0x51
   14001bd43:	imul   r14,QWORD PTR [rbx+0x74],0x56515640
   14001bd4b:	(bad)  
   14001bd4c:	jb     0x14001bdb7
   14001bd4e:	(bad)  
   14001bd4f:	outs   dx,BYTE PTR ds:[rsi]
   14001bd50:	je     0x14001bd92
   14001bd52:	rex
   14001bd53:	rex
   14001bd54:	rex pop rax
   14001bd56:	pop    rdx
   14001bd57:	add    BYTE PTR [rip+0x313f3f00],dh        # 0x17140fc5d
   14001bd5d:	push   rcx
   14001bd5e:	rex.R
   14001bd5f:	rex.X jne 0x14001bdd5
   14001bd62:	rex.WRB
   14001bd63:	gs jae 0x14001bdd9
   14001bd66:	(bad)  
   14001bd67:	addr32 gs rex
   14001bd6a:	rex push rcx
   14001bd6c:	rex.RB
   14001bd6d:	rex.B
   14001bd6e:	rex.B
   14001bd6f:	rex pop rax
   14001bd71:	pop    rdx
   14001bd72:	add    BYTE PTR [rax],al
   14001bd74:	mov    dh,0x0
   14001bd76:	(bad)  
   14001bd77:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bd7a:	ins    BYTE PTR es:[rdi],dx
   14001bd7b:	push   rdi
   14001bd7c:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x626c6c61
   14001bd84:	(bad)  
   14001bd85:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001bd88:	push   rcx
   14001bd89:	rex.R
   14001bd8a:	rex.X jne 0x14001be00
   14001bd8d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bd8f:	outs   dx,BYTE PTR ds:[rsi]
   14001bd90:	outs   dx,BYTE PTR ds:[rsi]
   14001bd91:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bd96:	outs   dx,BYTE PTR ds:[rsi]
   14001bd97:	rex
   14001bd98:	rex push rcx
   14001bd9a:	rex.RB
   14001bd9b:	rex.X
   14001bd9c:	pop    r15
   14001bd9e:	rex.WRX
   14001bd9f:	rex.B
   14001bda0:	rex.RB
   14001bda1:	rex.X push rsi
   14001bda3:	push   rcx
   14001bda4:	rex.R
   14001bda5:	rex.X jne 0x14001be1b
   14001bda8:	rex.WRB
   14001bda9:	gs jae 0x14001be1f
   14001bdac:	(bad)  
   14001bdad:	addr32 gs rex
   14001bdb0:	rex push rax
   14001bdb2:	rex.RB
   14001bdb3:	push   r14
   14001bdb5:	push   rcx
   14001bdb6:	rex.WRXB (bad) 
   14001bdb8:	push   0x65
   14001bdba:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bdbe:	push   rax
   14001bdbf:	rex.RB
   14001bdc0:	rex.X
   14001bdc1:	rex.R
   14001bdc2:	rex.W
   14001bdc3:	rex pop rdx
   14001bdc5:	add    BYTE PTR [rdx+0x1],dh
   14001bdc8:	(bad)  
   14001bdc9:	jae    0x14001be30
   14001bdcb:	je     0x14001be0e
   14001bdcd:	jb     0x14001be36
   14001bdcf:	jne    0x14001be3e
   14001bdd1:	outs   dx,BYTE PTR gs:[rsi]
   14001bdd3:	je     0x14001be48
   14001bdd5:	rex push rcx
   14001bdd7:	rex.R
   14001bdd8:	rex.X jne 0x14001be4e
   14001bddb:	rex.WRB
   14001bddc:	gs jae 0x14001be52
   14001bddf:	(bad)  
   14001bde0:	addr32 gs rex
   14001bde3:	rex push rcx
   14001bde5:	rex.RB
   14001bde6:	rex.B
   14001bde7:	pop    r8
   14001bde9:	rex.B
   14001bdea:	rex.RB
   14001bdeb:	rex.X push rsi
   14001bded:	(bad)  
   14001bdee:	and    al,0x51
   14001bdf0:	imul   r14,QWORD PTR [rbx+0x74],0x56515640
   14001bdf8:	(bad)  
   14001bdf9:	jb     0x14001be64
   14001bdfb:	(bad)  
   14001bdfc:	outs   dx,BYTE PTR ds:[rsi]
   14001bdfd:	je     0x14001be3f
   14001bdff:	rex
   14001be00:	rex
   14001be01:	rex
   14001be02:	rex pop rdx
   14001be04:	add    BYTE PTR [rax],al
   14001be06:	int3   
   14001be07:	add    BYTE PTR [rdi],bh
   14001be09:	movsxd esi,DWORD PTR [rdx+0x65]
   14001be0c:	(bad)  
   14001be0d:	je     0x14001be74
   14001be0f:	rex.WRB
   14001be10:	gs je  0x14001be7b
   14001be13:	outs   dx,DWORD PTR ds:[rsi]
   14001be14:	fs rex.XB (bad) 
   14001be17:	ins    BYTE PTR es:[rdi],dx
   14001be18:	ins    BYTE PTR es:[rdi],dx
   14001be19:	rex push rcx
   14001be1b:	rex.R
   14001be1c:	rex.X jne 0x14001be92
   14001be1f:	rex.WRB
   14001be20:	gs jae 0x14001be96
   14001be23:	(bad)  
   14001be24:	addr32 gs rex
   14001be27:	rex push rbx
   14001be29:	rex.B (bad) 
   14001be2b:	push   r14
   14001be2d:	xor    DWORD PTR [rax+0x41],eax
   14001be30:	rex.RB
   14001be31:	rex.X push rsi
   14001be33:	push   rcx
   14001be34:	push   rbx
   14001be35:	je     0x14001bea9
   14001be37:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   14001be3e:	xor    BYTE PTR [rax+0x5a],al
   14001be41:	add    BYTE PTR [rax+rax*1],dh
   14001be44:	(bad)  
   14001be45:	(bad)  
   14001be46:	xor    DWORD PTR [rcx+0x44],edx
   14001be49:	rex.X jne 0x14001bebf
   14001be4c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001be4e:	je     0x14001beb5
   14001be50:	jb     0x14001beb8
   14001be52:	(bad)  
   14001be53:	movsxd esp,DWORD PTR [rbp+0x40]
   14001be56:	rex push rbp
   14001be58:	rex.RB
   14001be59:	rex.B
   14001be5a:	rex.B
   14001be5b:	rex pop rax
   14001be5d:	pop    rdx
   14001be5e:	add    BYTE PTR [rax],al
   14001be60:	sub    BYTE PTR [rcx],al
   14001be62:	(bad)  
   14001be63:	ins    DWORD PTR es:[rdi],dx
   14001be64:	gs je  0x14001bec8
   14001be67:	rex.WRXB (bad) 
   14001be69:	push   0x65
   14001be6b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001be6f:	rex.R
   14001be70:	rex.X jne 0x14001bee6
   14001be73:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001be75:	je     0x14001bedc
   14001be77:	jb     0x14001bedf
   14001be79:	(bad)  
   14001be7a:	movsxd esp,DWORD PTR [rbp+0x40]
   14001be7d:	rex push rbp
   14001be7f:	rex.RB
   14001be80:	rex.X
   14001be81:	push   r8
   14001be83:	rex.RB
   14001be84:	rex.X push rbp
   14001be86:	push   rcx
   14001be87:	rex.WRB
   14001be88:	gs je  0x14001beec
   14001be8b:	rex.WRXB (bad) 
   14001be8d:	push   0x65
   14001be8f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001be93:	pop    rax
   14001be94:	pop    rdx
   14001be95:	add    BYTE PTR [rcx],dl
   14001be97:	add    BYTE PTR [rdi],bh
   14001be99:	(bad)  
   14001be9a:	xor    BYTE PTR [rcx+0x44],dl
   14001be9d:	rex.X jne 0x14001bf13
   14001bea0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bea2:	je     0x14001bf09
   14001bea4:	jb     0x14001bf0c
   14001bea6:	(bad)  
   14001bea7:	movsxd esp,DWORD PTR [rbp+0x40]
   14001beaa:	rex push rcx
   14001beac:	rex.RB
   14001bead:	rex.B
   14001beae:	rex.B
   14001beaf:	rex
   14001beb0:	rex.B
   14001beb1:	rex.RB
   14001beb2:	rex.X push rsi
   14001beb4:	push   rcx
   14001beb5:	push   rbx
   14001beb6:	je     0x14001bf2a
   14001beb8:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   14001bebf:	rex.B
   14001bec0:	rex.RB
   14001bec1:	rex.X push rsi
   14001bec3:	push   rcx
   14001bec4:	rex.R
   14001bec5:	rex.X jne 0x14001bf3b
   14001bec8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001beca:	outs   dx,BYTE PTR ds:[rsi]
   14001becb:	outs   dx,BYTE PTR ds:[rsi]
   14001becc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bed1:	outs   dx,BYTE PTR ds:[rsi]
   14001bed2:	rex
   14001bed3:	rex push rax
   14001bed5:	rex.RB
   14001bed6:	push   r14
   14001bed8:	push   rcx
   14001bed9:	rex.WRXB (bad) 
   14001bedb:	push   0x65
   14001bedd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bee1:	rex pop rdx
   14001bee3:	add    BYTE PTR [rdi],cl
   14001bee5:	add    DWORD PTR [rdi],edi
   14001bee7:	imul   esi,DWORD PTR [rbx+0x56],0x64696c61
   14001beee:	rex push rcx
   14001bef0:	rex.R
   14001bef1:	rex.X jne 0x14001bf67
   14001bef4:	rex.RB jb 0x14001bf69
   14001bef7:	outs   dx,DWORD PTR ds:[rsi]
   14001bef8:	jb     0x14001bf3a
   14001befa:	rex push rcx
   14001befc:	rex.RB
   14001befd:	rex.X
   14001befe:	pop    r15
   14001bf00:	rex.WRX pop rax
   14001bf02:	pop    rdx
   14001bf03:	add    BYTE PTR [rsi],bh
   14001bf05:	add    DWORD PTR [rdi],edi
   14001bf07:	jno    0x14001bf4d
   14001bf09:	rex.X jne 0x14001bf7f
   14001bf0c:	push   rdx
   14001bf0d:	gs jo  0x14001bf7c
   14001bf10:	jns    0x14001bf58
   14001bf12:	imul   ebp,DWORD PTR [rsp+rbp*2+0x40],0x58415940
   14001bf1a:	rex.B
   14001bf1b:	rex.RB
   14001bf1c:	rex.X push rsi
   14001bf1e:	push   rcx
   14001bf1f:	rex.R
   14001bf20:	rex.X jne 0x14001bf96
   14001bf23:	rex.WRB
   14001bf24:	gs jae 0x14001bf9a
   14001bf27:	(bad)  
   14001bf28:	addr32 gs rex
   14001bf2b:	rex
   14001bf2c:	rex.B
   14001bf2d:	rex.RB
   14001bf2e:	push   r14
   14001bf30:	push   rcx
   14001bf31:	rex.R
   14001bf32:	rex.X jne 0x14001bfa8
   14001bf35:	rex.RB jb 0x14001bfaa
   14001bf38:	outs   dx,DWORD PTR ds:[rsi]
   14001bf39:	jb     0x14001bf7b
   14001bf3b:	rex
   14001bf3c:	rex.B
   14001bf3d:	rex.RB
   14001bf3e:	push   r14
   14001bf40:	push   rcx
   14001bf41:	push   rsi
   14001bf42:	(bad)  
   14001bf43:	jb     0x14001bfae
   14001bf45:	(bad)  
   14001bf46:	outs   dx,BYTE PTR ds:[rsi]
   14001bf47:	je     0x14001bf89
   14001bf49:	rex
   14001bf4a:	rex pop rdx
   14001bf4c:	add    BYTE PTR [rax],al
   14001bf4e:	adc    BYTE PTR [rax],al
   14001bf50:	(bad)  
   14001bf51:	(bad)  
   14001bf52:	xor    BYTE PTR [rcx+0x44],dl
   14001bf55:	rex.X jne 0x14001bfcb
   14001bf58:	rex.RB jb 0x14001bfcd
   14001bf5b:	outs   dx,DWORD PTR ds:[rsi]
   14001bf5c:	jb     0x14001bf9e
   14001bf5e:	rex push rcx
   14001bf60:	rex.RB
   14001bf61:	rex.B
   14001bf62:	rex.B
   14001bf63:	rex pop rax
   14001bf65:	pop    rdx
   14001bf66:	add    BYTE PTR [rax],al
   14001bf68:	or     al,0x0
   14001bf6a:	(bad)  
   14001bf6b:	(bad)  
   14001bf6c:	xor    BYTE PTR [rcx+0x44],dl
   14001bf6f:	rex.X jne 0x14001bfe5
   14001bf72:	rex.RB jb 0x14001bfe7
   14001bf75:	outs   dx,DWORD PTR ds:[rsi]
   14001bf76:	jb     0x14001bfb8
   14001bf78:	rex push rcx
   14001bf7a:	rex.RB
   14001bf7b:	rex.B
   14001bf7c:	rex.B
   14001bf7d:	rex
   14001bf7e:	rex.B
   14001bf7f:	rex.RB
   14001bf80:	rex.X push rsi
   14001bf82:	xor    BYTE PTR [rax+0x40],al
   14001bf85:	pop    rdx
   14001bf86:	add    BYTE PTR [rax],al
   14001bf88:	scas   eax,DWORD PTR es:[rdi]
   14001bf89:	add    BYTE PTR [rdi],bh
   14001bf8b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bf8e:	ins    BYTE PTR es:[rdi],dx
   14001bf8f:	rex push rcx
   14001bf91:	rex.R
   14001bf92:	rex.X jne 0x14001c008
   14001bf95:	(bad)
   14001bf9b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14001bf9f:	je     0x14001c006
   14001bfa1:	jb     0x14001c009
   14001bfa3:	(bad)  
   14001bfa4:	movsxd esp,DWORD PTR [rbp+0x40]
   14001bfa7:	rex push rcx
   14001bfa9:	rex.RB
   14001bfaa:	rex.B
   14001bfab:	rex.B (bad) 
   14001bfad:	push   r14
   14001bfaf:	push   rcx
   14001bfb0:	rex.R
   14001bfb1:	rex.X jne 0x14001c027
   14001bfb4:	rex.WRB
   14001bfb5:	gs jae 0x14001c02b
   14001bfb8:	(bad)  
   14001bfb9:	addr32 gs rex
   14001bfbc:	rex
   14001bfbd:	rex.B
   14001bfbe:	rex.RB
   14001bfbf:	rex.X push rsi
   14001bfc1:	push   rcx
   14001bfc2:	push   rbx
   14001bfc3:	je     0x14001c037
   14001bfc5:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001bfcc:	rex.X push rsi
   14001bfce:	push   rcx
   14001bfcf:	push   rsi
   14001bfd0:	(bad)  
   14001bfd1:	jb     0x14001c03c
   14001bfd3:	(bad)  
   14001bfd4:	outs   dx,BYTE PTR ds:[rsi]
   14001bfd5:	je     0x14001c017
   14001bfd7:	rex xor DWORD PTR [rcx],esi
   14001bfda:	xor    DWORD PTR [rcx],esi
   14001bfdc:	xor    DWORD PTR [rcx],esi
   14001bfde:	xor    DWORD PTR [rax+0x5a],eax
   14001bfe1:	add    BYTE PTR [rsi],ch
   14001bfe3:	add    DWORD PTR [rdi],edi
   14001bfe5:	outs   dx,BYTE PTR ds:[rsi]
   14001bfe6:	(bad)  
   14001bfe7:	ins    DWORD PTR es:[rdi],dx
   14001bfe8:	gs rex push rcx
   14001bfeb:	rex.R
   14001bfec:	rex.X jne 0x14001c062
   14001bfef:	rex.RB jb 0x14001c064
   14001bff2:	outs   dx,DWORD PTR ds:[rsi]
   14001bff3:	jb     0x14001c035
   14001bff5:	rex push rcx
   14001bff7:	rex.RB
   14001bff8:	rex.X
   14001bff9:	rex.B (bad) 
   14001bffb:	push   r14
   14001bffd:	push   rcx
   14001bffe:	push   rbx
   14001bfff:	je     0x14001c073
   14001c001:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001c008:	add    BYTE PTR [rax],al
   14001c00a:	sbb    eax,0x616c3f01
   14001c00f:	jae    0x14001c085
   14001c011:	rex.RB jb 0x14001c086
   14001c014:	outs   dx,DWORD PTR ds:[rsi]
   14001c015:	jb     0x14001c057
   14001c017:	push   rcx
   14001c018:	rex.R
   14001c019:	rex.X jne 0x14001c08f
   14001c01c:	(bad)
   14001c022:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14001c026:	je     0x14001c08d
   14001c028:	jb     0x14001c090
   14001c02a:	(bad)  
   14001c02b:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c02e:	rex push rcx
   14001c030:	rex.RB
   14001c031:	rex.X
   14001c032:	rex.B (bad) 
   14001c034:	push   r14
   14001c036:	push   rcx
   14001c037:	rex.R
   14001c038:	rex.X jne 0x14001c0ae
   14001c03b:	rex.RB jb 0x14001c0b0
   14001c03e:	outs   dx,DWORD PTR ds:[rsi]
   14001c03f:	jb     0x14001c081
   14001c041:	rex pop rax
   14001c043:	pop    rdx
   14001c044:	add    BYTE PTR [rax],al
   14001c046:	(bad)  
   14001c047:	add    DWORD PTR [rdi],edi
   14001c049:	imul   esi,DWORD PTR [rbx+0x56],0x64696c61
   14001c050:	rex push rcx
   14001c052:	rex.R
   14001c053:	rex.X jne 0x14001c0c9
   14001c056:	(bad)
   14001c05c:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14001c060:	je     0x14001c0c7
   14001c062:	jb     0x14001c0ca
   14001c064:	(bad)  
   14001c065:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c068:	rex push rcx
   14001c06a:	rex.RB
   14001c06b:	rex.X
   14001c06c:	pop    r15
   14001c06e:	rex.WRX pop rax
   14001c070:	pop    rdx
   14001c071:	add    BYTE PTR [rdi],dh
   14001c073:	add    DWORD PTR [rdi],edi
   14001c075:	jo     0x14001c0d8
   14001c077:	je     0x14001c0e1
   14001c079:	rex push rcx
   14001c07b:	rex.R
   14001c07c:	rex.X jne 0x14001c0f2
   14001c07f:	rex.WRXB (bad) 
   14001c081:	push   0x65
   14001c083:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14001c087:	je     0x14001c0f1
   14001c089:	rex
   14001c08a:	rex push rcx
   14001c08c:	rex.RB
   14001c08d:	rex.X
   14001c08e:	rex.B (bad) 
   14001c090:	push   r14
   14001c092:	push   rcx
   14001c093:	push   rbx
   14001c094:	je     0x14001c108
   14001c096:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001c09d:	add    BYTE PTR [rsi+0x6f633f00],bh
   14001c0a3:	outs   dx,BYTE PTR ds:[rsi]
   14001c0a4:	outs   dx,BYTE PTR ds:[rsi]
   14001c0a5:	movsxd esi,DWORD PTR gs:[rsp+rdx*2+0x6f]
   14001c0aa:	rex.X jne 0x14001c120
   14001c0ad:	rex push rcx
   14001c0af:	rex.R
   14001c0b0:	rex.X jne 0x14001c126
   14001c0b3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c0b5:	outs   dx,BYTE PTR ds:[rsi]
   14001c0b6:	outs   dx,BYTE PTR ds:[rsi]
   14001c0b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c0bc:	outs   dx,BYTE PTR ds:[rsi]
   14001c0bd:	rex
   14001c0be:	rex push rbx
   14001c0c0:	rex.B (bad) 
   14001c0c2:	push   r14
   14001c0c4:	xor    DWORD PTR [rax+0x41],eax
   14001c0c7:	rex.RB
   14001c0c8:	rex.X push rsi
   14001c0ca:	push   rcx
   14001c0cb:	push   rbx
   14001c0cc:	je     0x14001c140
   14001c0ce:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14001c0d5:	pop    rdx
   14001c0d6:	add    BYTE PTR [rax],al
   14001c0d8:	xchg   esp,eax
   14001c0d9:	add    DWORD PTR [rdi],edi
   14001c0db:	jae    0x14001c156
   14001c0dd:	jae    0x14001c153
   14001c0df:	gs ins DWORD PTR es:[rdi],dx
   14001c0e1:	rex.X jne 0x14001c157
   14001c0e4:	rex push rcx
   14001c0e6:	rex.R
   14001c0e7:	rex.X jne 0x14001c15d
   14001c0ea:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c0ec:	outs   dx,BYTE PTR ds:[rsi]
   14001c0ed:	outs   dx,BYTE PTR ds:[rsi]
   14001c0ee:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c0f3:	outs   dx,BYTE PTR ds:[rsi]
   14001c0f4:	rex
   14001c0f5:	rex push rbx
   14001c0f7:	rex.B (bad) 
   14001c0f9:	push   r14
   14001c0fb:	xor    DWORD PTR [rax+0x58],eax
   14001c0fe:	pop    rdx
   14001c0ff:	add    BYTE PTR [rax+0x1],dh
   14001c102:	(bad)  
   14001c103:	jae    0x14001c16a
   14001c105:	jae    0x14001c17a
   14001c107:	imul   ebp,DWORD PTR [rdi+0x6e],0x40737542
   14001c10e:	push   rcx
   14001c10f:	rex.R
   14001c110:	rex.X jne 0x14001c186
   14001c113:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c115:	outs   dx,BYTE PTR ds:[rsi]
   14001c116:	outs   dx,BYTE PTR ds:[rsi]
   14001c117:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c11c:	outs   dx,BYTE PTR ds:[rsi]
   14001c11d:	rex
   14001c11e:	rex push rbx
   14001c120:	rex.B (bad) 
   14001c122:	push   r14
   14001c124:	xor    DWORD PTR [rax+0x58],eax
   14001c127:	pop    rdx
   14001c128:	add    BYTE PTR [rax],al
   14001c12a:	push   rcx
   14001c12b:	je     0x14001c162
   14001c12d:	rex.R
   14001c12e:	rex.X jne 0x14001c1a4
   14001c131:	cs fs ins BYTE PTR es:[rdi],dx
   14001c134:	ins    BYTE PTR es:[rdi],dx
   14001c135:	add    BYTE PTR [rbx+0x0],dl
   14001c138:	(bad)  
   14001c139:	(bad)  
   14001c13a:	xor    DWORD PTR [rcx+0x44],edx
   14001c13d:	outs   dx,DWORD PTR ds:[rsi]
   14001c13e:	ins    DWORD PTR es:[rdi],dx
   14001c13f:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c141:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c144:	outs   dx,BYTE PTR gs:[rsi]
   14001c146:	je     0x14001c188
   14001c148:	rex push rcx
   14001c14a:	rex.RB
   14001c14b:	rex.B
   14001c14c:	rex.B
   14001c14d:	rex pop rax
   14001c14f:	pop    rdx
   14001c150:	add    BYTE PTR [rax],al
   14001c152:	jo     0x14001c155
   14001c154:	(bad)  
   14001c155:	jae    0x14001c1bc
   14001c157:	je     0x14001c19c
   14001c159:	outs   dx,DWORD PTR ds:[rsi]
   14001c15a:	outs   dx,BYTE PTR ds:[rsi]
   14001c15b:	je     0x14001c1c2
   14001c15d:	outs   dx,BYTE PTR ds:[rsi]
   14001c15e:	je     0x14001c1a0
   14001c160:	push   rcx
   14001c161:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c163:	ins    DWORD PTR es:[rdi],dx
   14001c164:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c166:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c169:	outs   dx,BYTE PTR gs:[rsi]
   14001c16b:	je     0x14001c1ad
   14001c16d:	rex push rcx
   14001c16f:	rex.RB
   14001c170:	rex.B
   14001c171:	pop    r15
   14001c173:	rex.WRX
   14001c174:	rex.B
   14001c175:	rex.RB
   14001c176:	rex.X push rsi
   14001c178:	push   rcx
   14001c179:	push   rbx
   14001c17a:	je     0x14001c1ee
   14001c17c:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001c183:	push   r14
   14001c185:	xor    al,BYTE PTR [rax+0x50]
   14001c188:	rex.RB
   14001c189:	rex.B
   14001c18a:	rex.W xor al,BYTE PTR [rax+0x5a]
   14001c18e:	add    BYTE PTR [rax],al
   14001c190:	or     eax,0x303f3f00
   14001c195:	push   rcx
   14001c196:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c198:	ins    DWORD PTR es:[rdi],dx
   14001c199:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c19b:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c19e:	outs   dx,BYTE PTR gs:[rsi]
   14001c1a0:	je     0x14001c1e2
   14001c1a2:	rex push rcx
   14001c1a4:	rex.RB
   14001c1a5:	rex.B
   14001c1a6:	rex.B
   14001c1a7:	rex
   14001c1a8:	rex.B
   14001c1a9:	rex.RB
   14001c1aa:	rex.X push rsi
   14001c1ac:	xor    BYTE PTR [rax+0x40],al
   14001c1af:	pop    rdx
   14001c1b0:	add    BYTE PTR [rax],al
   14001c1b2:	adc    BYTE PTR [rax],al
   14001c1b4:	(bad)  
   14001c1b5:	(bad)  
   14001c1b6:	xor    BYTE PTR [rcx+0x44],dl
   14001c1b9:	outs   dx,DWORD PTR ds:[rsi]
   14001c1ba:	ins    DWORD PTR es:[rdi],dx
   14001c1bb:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c1bd:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c1c0:	outs   dx,BYTE PTR gs:[rsi]
   14001c1c2:	je     0x14001c204
   14001c1c4:	rex push rcx
   14001c1c6:	rex.RB
   14001c1c7:	rex.B
   14001c1c8:	rex.B
   14001c1c9:	rex pop rax
   14001c1cb:	pop    rdx
   14001c1cc:	add    BYTE PTR [rax],al
   14001c1ce:	pop    rbx
   14001c1cf:	add    BYTE PTR [rdi],bh
   14001c1d1:	(bad)  
   14001c1d2:	xor    DWORD PTR [rcx+0x44],edx
   14001c1d5:	outs   dx,DWORD PTR ds:[rsi]
   14001c1d6:	ins    DWORD PTR es:[rdi],dx
   14001c1d7:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001c1d9:	fs gs rex
   14001c1dc:	rex push rcx
   14001c1de:	rex.RB
   14001c1df:	rex.B
   14001c1e0:	rex.B
   14001c1e1:	rex pop rax
   14001c1e3:	pop    rdx
   14001c1e4:	add    BYTE PTR [rax],al
   14001c1e6:	jne    0x14001c1e8
   14001c1e8:	(bad)  
   14001c1e9:	(bad)  
   14001c1ea:	xor    al,0x51
   14001c1ec:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c1ee:	ins    DWORD PTR es:[rdi],dx
   14001c1ef:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c1f1:	gs ins DWORD PTR es:[rdi],dx
   14001c1f3:	outs   dx,BYTE PTR gs:[rsi]
   14001c1f5:	je     0x14001c237
   14001c1f7:	rex push rcx
   14001c1f9:	rex.RB
   14001c1fa:	rex.B
   14001c1fb:	rex.B
   14001c1fc:	rex.B
   14001c1fd:	rex.RB
   14001c1fe:	push   r14
   14001c200:	xor    BYTE PTR [rax+0x41],al
   14001c203:	rex.RB
   14001c204:	rex.X push rsi
   14001c206:	xor    BYTE PTR [rax+0x40],al
   14001c209:	pop    rdx
   14001c20a:	add    BYTE PTR [rax],al
   14001c20c:	(bad)  
   14001c20d:	add    DWORD PTR [rdi],edi
   14001c20f:	outs   dx,BYTE PTR ds:[rsi]
   14001c210:	gs js  0x14001c287
   14001c213:	push   rbx
   14001c214:	imul   esp,DWORD PTR [rdx+0x6c],0x45676e69
   14001c21b:	ins    BYTE PTR es:[rdi],dx
   14001c21c:	gs ins DWORD PTR es:[rdi],dx
   14001c21e:	outs   dx,BYTE PTR gs:[rsi]
   14001c220:	je     0x14001c262
   14001c222:	push   rcx
   14001c223:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c225:	ins    DWORD PTR es:[rdi],dx
   14001c226:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001c228:	fs gs rex
   14001c22b:	rex push rcx
   14001c22d:	rex.RB
   14001c22e:	rex.X
   14001c22f:	rex.B (bad) 
   14001c231:	push   r14
   14001c233:	push   rcx
   14001c234:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c236:	ins    DWORD PTR es:[rdi],dx
   14001c237:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c239:	gs ins DWORD PTR es:[rdi],dx
   14001c23b:	outs   dx,BYTE PTR gs:[rsi]
   14001c23d:	je     0x14001c27f
   14001c23f:	rex
   14001c240:	rex.B
   14001c241:	rex.RB
   14001c242:	rex.X push rsi
   14001c244:	push   rcx
   14001c245:	push   rbx
   14001c246:	je     0x14001c2ba
   14001c248:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001c24f:	add    BYTE PTR [rbx+0x74613f00],ch
   14001c255:	je     0x14001c2c9
   14001c257:	imul   esp,DWORD PTR [rdx+0x75],0x51406574
   14001c25e:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c260:	ins    DWORD PTR es:[rdi],dx
   14001c261:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c263:	gs ins DWORD PTR es:[rdi],dx
   14001c265:	outs   dx,BYTE PTR gs:[rsi]
   14001c267:	je     0x14001c2a9
   14001c269:	rex push rcx
   14001c26b:	rex.RB
   14001c26c:	rex.X
   14001c26d:	rex.B (bad) 
   14001c26f:	push   r14
   14001c271:	push   rcx
   14001c272:	push   rbx
   14001c273:	je     0x14001c2e7
   14001c275:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001c27c:	rex.X push rsi
   14001c27e:	xor    al,BYTE PTR [rax+0x30]
   14001c281:	rex pop rdx
   14001c283:	add    BYTE PTR [rcx+rax*1+0x6761743f],bl
   14001c28a:	rex.WRX (bad) 
   14001c28c:	ins    DWORD PTR es:[rdi],dx
   14001c28d:	gs rex push rcx
   14001c290:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c292:	ins    DWORD PTR es:[rdi],dx
   14001c293:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c295:	gs ins DWORD PTR es:[rdi],dx
   14001c297:	outs   dx,BYTE PTR gs:[rsi]
   14001c299:	je     0x14001c2db
   14001c29b:	rex push rcx
   14001c29d:	rex.RB
   14001c29e:	rex.X
   14001c29f:	rex.B (bad) 
   14001c2a1:	push   r14
   14001c2a3:	push   rcx
   14001c2a4:	push   rbx
   14001c2a5:	je     0x14001c319
   14001c2a7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001c2ae:	add    BYTE PTR [rax],al
   14001c2b0:	or     eax,0x73693f01
   14001c2b5:	rex.WRX jne 0x14001c324
   14001c2b8:	ins    BYTE PTR es:[rdi],dx
   14001c2b9:	rex push rcx
   14001c2bb:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c2bd:	ins    DWORD PTR es:[rdi],dx
   14001c2be:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001c2c0:	fs gs rex
   14001c2c3:	rex push rcx
   14001c2c5:	rex.RB
   14001c2c6:	rex.X
   14001c2c7:	pop    r15
   14001c2c9:	rex.WRX pop rax
   14001c2cb:	pop    rdx
   14001c2cc:	add    BYTE PTR [rax],al
   14001c2ce:	jmp    0x1a96801d3
   14001c2d3:	jb     0x14001c348
   14001c2d5:	je     0x14001c31a
   14001c2d7:	push   0x45646c69
   14001c2dc:	ins    BYTE PTR es:[rdi],dx
   14001c2dd:	gs ins DWORD PTR es:[rdi],dx
   14001c2df:	outs   dx,BYTE PTR gs:[rsi]
   14001c2e1:	je     0x14001c323
   14001c2e3:	push   rcx
   14001c2e4:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c2e6:	ins    DWORD PTR es:[rdi],dx
   14001c2e7:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001c2e9:	fs gs rex
   14001c2ec:	rex push rcx
   14001c2ee:	rex.RB
   14001c2ef:	rex.X
   14001c2f0:	rex.B (bad) 
   14001c2f2:	push   r14
   14001c2f4:	push   rcx
   14001c2f5:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c2f7:	ins    DWORD PTR es:[rdi],dx
   14001c2f8:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c2fa:	gs ins DWORD PTR es:[rdi],dx
   14001c2fc:	outs   dx,BYTE PTR gs:[rsi]
   14001c2fe:	je     0x14001c340
   14001c300:	rex
   14001c301:	rex.B
   14001c302:	rex.RB
   14001c303:	rex.X push rsi
   14001c305:	push   rcx
   14001c306:	push   rbx
   14001c307:	je     0x14001c37b
   14001c309:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001c310:	add    BYTE PTR [rax],al
   14001c312:	rol    DWORD PTR [rax],cl
   14001c314:	(bad)  
   14001c315:	outs   dx,DWORD PTR fs:[rsi]
   14001c317:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c31a:	outs   dx,BYTE PTR gs:[rsi]
   14001c31c:	je     0x14001c363
   14001c31e:	ins    BYTE PTR es:[rdi],dx
   14001c31f:	gs ins DWORD PTR es:[rdi],dx
   14001c321:	outs   dx,BYTE PTR gs:[rsi]
   14001c323:	je     0x14001c365
   14001c325:	push   rcx
   14001c326:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c328:	ins    DWORD PTR es:[rdi],dx
   14001c329:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c32b:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001c32e:	outs   dx,BYTE PTR gs:[rsi]
   14001c330:	je     0x14001c372
   14001c332:	rex push rcx
   14001c334:	rex.RB
   14001c335:	rex.X
   14001c336:	rex.B (bad) 
   14001c338:	push   r14
   14001c33a:	push   rcx
   14001c33b:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001c33d:	ins    DWORD PTR es:[rdi],dx
   14001c33e:	rex.RB ins BYTE PTR es:[rdi],dx
   14001c340:	gs ins DWORD PTR es:[rdi],dx
   14001c342:	outs   dx,BYTE PTR gs:[rsi]
   14001c344:	je     0x14001c386
   14001c346:	rex pop rax
   14001c348:	pop    rdx
   14001c349:	add    BYTE PTR [rcx+0x74],dl
   14001c34c:	xor    eax,0x2e6c6d58
   14001c351:	fs ins BYTE PTR es:[rdi],dx
   14001c353:	ins    BYTE PTR es:[rdi],dx
   14001c354:	add    BYTE PTR [rax],al
   14001c356:	enter  0x3f06,0x61
   14001c35a:	jo     0x14001c3cc
   14001c35c:	outs   dx,BYTE PTR gs:[rsi]
   14001c35e:	fs rex push rcx
   14001c361:	push   rbx
   14001c362:	je     0x14001c3d6
   14001c364:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c36b:	rex.B
   14001c36c:	rex.B
   14001c36d:	rex.B
   14001c36e:	rex.RB
   14001c36f:	push   r14
   14001c371:	xor    DWORD PTR [rax+0x41],eax
   14001c374:	rex.RB
   14001c375:	rex.X push rsi
   14001c377:	xor    DWORD PTR [rax+0x40],eax
   14001c37a:	pop    rdx
   14001c37b:	add    BYTE PTR [rsi+0x303f3f01],cl
   14001c381:	push   rcx
   14001c382:	push   rbx
   14001c383:	je     0x14001c3f7
   14001c385:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c38c:	rex.B
   14001c38d:	rex.B
   14001c38e:	rex
   14001c38f:	rex.B
   14001c390:	rex.RB
   14001c391:	rex.X push rsi
   14001c393:	xor    BYTE PTR [rax+0x40],al
   14001c396:	pop    rdx
   14001c397:	add    BYTE PTR [rbp+0x5],dl
   14001c39a:	(bad)  
   14001c39b:	(bad)  
   14001c39c:	pop    rcx
   14001c39d:	push   rcx
   14001c39e:	push   rbx
   14001c39f:	je     0x14001c413
   14001c3a1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c3a8:	rex.B
   14001c3a9:	rex.B
   14001c3aa:	rex.B
   14001c3ab:	rex.RB
   14001c3ac:	push   r14
   14001c3ae:	xor    BYTE PTR [rax+0x56],al
   14001c3b1:	push   rcx
   14001c3b2:	rex.XB push 0x40407261
   14001c3b8:	rex pop rdx
   14001c3ba:	add    BYTE PTR [rax],al
   14001c3bc:	mov    ebx,DWORD PTR [rcx]
   14001c3be:	(bad)  
   14001c3bf:	je     0x14001c433
   14001c3c1:	rex push rcx
   14001c3c3:	rex.WRB
   14001c3c4:	gs je  0x14001c428
   14001c3c7:	rex.WRXB (bad) 
   14001c3c9:	push   0x65
   14001c3cb:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c3cf:	push   rcx
   14001c3d0:	rex.RB
   14001c3d1:	rex.X
   14001c3d2:	rex.B (bad) 
   14001c3d4:	push   r14
   14001c3d6:	push   rcx
   14001c3d7:	push   rbx
   14001c3d8:	je     0x14001c44c
   14001c3da:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001c3e1:	rex.X
   14001c3e2:	xor    BYTE PTR [rax+0x40],r9b
   14001c3e6:	pop    rdx
   14001c3e7:	add    BYTE PTR [rsi],cl
   14001c3e9:	add    bh,BYTE PTR [rdi]
   14001c3eb:	(bad)  
   14001c3ec:	xor    BYTE PTR [rcx+0x56],dl
   14001c3ef:	(bad)  
   14001c3f0:	jb     0x14001c45b
   14001c3f2:	(bad)  
   14001c3f3:	outs   dx,BYTE PTR ds:[rsi]
   14001c3f4:	je     0x14001c436
   14001c3f6:	rex push rcx
   14001c3f8:	rex.RB
   14001c3f9:	rex.B
   14001c3fa:	rex.B
   14001c3fb:	rex pop rax
   14001c3fd:	pop    rdx
   14001c3fe:	add    BYTE PTR [rax],al
   14001c400:	in     eax,0x1
   14001c402:	(bad)  
   14001c403:	(bad)  
   14001c404:	xor    BYTE PTR [rcx+0x56],dl
   14001c407:	(bad)  
   14001c408:	jb     0x14001c473
   14001c40a:	(bad)  
   14001c40b:	outs   dx,BYTE PTR ds:[rsi]
   14001c40c:	je     0x14001c44e
   14001c40e:	rex push rcx
   14001c410:	rex.RB
   14001c411:	rex.B
   14001c412:	rex.B
   14001c413:	rex
   14001c414:	rex.B
   14001c415:	rex.RB
   14001c416:	rex.X push rsi
   14001c418:	xor    BYTE PTR [rax+0x40],al
   14001c41b:	pop    rdx
   14001c41c:	add    BYTE PTR [rax],al
   14001c41e:	jmp    0x14001c422
   14001c420:	(bad)  
   14001c421:	(bad)  
   14001c422:	xor    DWORD PTR [rcx+0x56],edx
   14001c425:	(bad)  
   14001c426:	jb     0x14001c491
   14001c428:	(bad)  
   14001c429:	outs   dx,BYTE PTR ds:[rsi]
   14001c42a:	je     0x14001c46c
   14001c42c:	rex push rcx
   14001c42e:	rex.RB
   14001c42f:	rex.B
   14001c430:	rex.B
   14001c431:	rex pop rax
   14001c433:	pop    rdx
   14001c434:	add    BYTE PTR [rax],al
   14001c436:	pop    rax
   14001c437:	or     edi,DWORD PTR [rdi]
   14001c439:	gs jbe 0x14001c4a1
   14001c43c:	outs   dx,BYTE PTR ds:[rsi]
   14001c43d:	je     0x14001c47f
   14001c43f:	push   rcx
   14001c440:	rex.WRXB (bad) 
   14001c442:	push   0x65
   14001c444:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c448:	push   rbp
   14001c449:	rex.RB
   14001c44a:	rex.B
   14001c44b:	pop    r15
   14001c44d:	rex.WRX push rax
   14001c44f:	rex.RB
   14001c450:	push   r14
   14001c452:	push   rcx
   14001c453:	rex.RB jbe 0x14001c4bb
   14001c456:	outs   dx,BYTE PTR ds:[rsi]
   14001c457:	je     0x14001c499
   14001c459:	rex
   14001c45a:	rex pop rdx
   14001c45c:	add    BYTE PTR [rax],al
   14001c45e:	push   0xb
   14001c460:	(bad)  
   14001c461:	gs jbe 0x14001c4c9
   14001c464:	outs   dx,BYTE PTR ds:[rsi]
   14001c465:	je     0x14001c4ad
   14001c467:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x4f514072
   14001c46f:	(bad)  
   14001c470:	push   0x65
   14001c472:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c476:	push   rbp
   14001c477:	rex.RB
   14001c478:	rex.B
   14001c479:	pop    r15
   14001c47b:	rex.WRX push rax
   14001c47d:	rex.RB
   14001c47e:	push   r14
   14001c480:	xor    DWORD PTR [rax+0x50],eax
   14001c483:	rex.RB
   14001c484:	push   r14
   14001c486:	push   rcx
   14001c487:	rex.RB jbe 0x14001c4ef
   14001c48a:	outs   dx,BYTE PTR ds:[rsi]
   14001c48b:	je     0x14001c4cd
   14001c48d:	rex
   14001c48e:	rex pop rdx
   14001c490:	add    BYTE PTR [rax],al
   14001c492:	rex.WB sbb BYTE PTR [r15],dil
   14001c495:	je     0x14001c500
   14001c497:	ins    DWORD PTR es:[rdi],dx
   14001c498:	gs jb  0x14001c4e0
   14001c49b:	jbe    0x14001c502
   14001c49d:	outs   dx,BYTE PTR ds:[rsi]
   14001c49e:	je     0x14001c4e0
   14001c4a0:	push   rcx
   14001c4a1:	rex.WRXB (bad) 
   14001c4a3:	push   0x65
   14001c4a5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c4a9:	rex.WRB
   14001c4aa:	rex.RB
   14001c4ab:	rex.B
   14001c4ac:	pop    r8
   14001c4ae:	push   rax
   14001c4af:	rex.RB
   14001c4b0:	push   r14
   14001c4b2:	push   rcx
   14001c4b3:	push   rsp
   14001c4b4:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001c4bb:	outs   dx,BYTE PTR ds:[rsi]
   14001c4bc:	je     0x14001c4fe
   14001c4be:	rex
   14001c4bf:	rex pop rdx
   14001c4c1:	add    bh,ah
   14001c4c3:	(bad)  
   14001c4c4:	(bad)  
   14001c4c5:	movsxd ebp,DWORD PTR [rax+0x69]
   14001c4c8:	ins    BYTE PTR es:[rdi],dx
   14001c4c9:	fs rex.RB jbe 0x14001c532
   14001c4cd:	outs   dx,BYTE PTR ds:[rsi]
   14001c4ce:	je     0x14001c510
   14001c4d0:	push   rcx
   14001c4d1:	rex.WRXB (bad) 
   14001c4d3:	push   0x65
   14001c4d5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c4d9:	rex.WRB
   14001c4da:	rex.RB
   14001c4db:	rex.B
   14001c4dc:	pop    r8
   14001c4de:	push   rax
   14001c4df:	rex.RB
   14001c4e0:	push   r14
   14001c4e2:	push   rcx
   14001c4e3:	rex.XB push 0x45646c69
   14001c4e9:	jbe    0x14001c550
   14001c4eb:	outs   dx,BYTE PTR ds:[rsi]
   14001c4ec:	je     0x14001c52e
   14001c4ee:	rex
   14001c4ef:	rex pop rdx
   14001c4f1:	add    BYTE PTR [rsi+0x9],ah
   14001c4f4:	(bad)  
   14001c4f5:	movsxd esi,DWORD PTR [rbp+0x73]
   14001c4f8:	je     0x14001c569
   14001c4fa:	ins    DWORD PTR es:[rdi],dx
   14001c4fb:	rex.RB jbe 0x14001c563
   14001c4fe:	outs   dx,BYTE PTR ds:[rsi]
   14001c4ff:	je     0x14001c541
   14001c501:	push   rcx
   14001c502:	rex.WRXB (bad) 
   14001c504:	push   0x65
   14001c506:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c50a:	rex.WRB
   14001c50b:	rex.RB
   14001c50c:	rex.B
   14001c50d:	pop    r8
   14001c50f:	push   rax
   14001c510:	rex.RB
   14001c511:	push   r14
   14001c513:	push   rcx
   14001c514:	rex.RB jbe 0x14001c57c
   14001c517:	outs   dx,BYTE PTR ds:[rsi]
   14001c518:	je     0x14001c55a
   14001c51a:	rex
   14001c51b:	rex pop rdx
   14001c51d:	add    BYTE PTR [rbp+0x6f633f08],al
   14001c523:	outs   dx,BYTE PTR ds:[rsi]
   14001c524:	outs   dx,BYTE PTR ds:[rsi]
   14001c525:	movsxd esi,DWORD PTR gs:[rsi+rcx*2+0x6f]
   14001c52a:	je     0x14001c595
   14001c52c:	data16 jns 0x14001c56f
   14001c52f:	push   rcx
   14001c530:	rex.WRXB (bad) 
   14001c532:	push   0x65
   14001c534:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c538:	rex.WRB
   14001c539:	rex.RB
   14001c53a:	rex.B
   14001c53b:	pop    r8
   14001c53d:	rex.B
   14001c53e:	rex.RB
   14001c53f:	rex.X push rsi
   14001c541:	push   rcx
   14001c542:	rex.WRB
   14001c543:	gs je  0x14001c5a7
   14001c546:	rex.WRB
   14001c547:	gs je  0x14001c5b2
   14001c54a:	outs   dx,DWORD PTR ds:[rsi]
   14001c54b:	fs rex
   14001c54d:	rex
   14001c54e:	rex pop rdx
   14001c550:	add    BYTE PTR [rax],al
   14001c552:	jge    0x14001c55e
   14001c554:	(bad)  
   14001c555:	imul   esi,DWORD PTR fs:[rbx+0x63],0x656e6e6f
   14001c55d:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   14001c561:	je     0x14001c5cc
   14001c563:	data16 jns 0x14001c5a6
   14001c566:	push   rcx
   14001c567:	rex.WRXB (bad) 
   14001c569:	push   0x65
   14001c56b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c56f:	rex.WRB
   14001c570:	rex.RB
   14001c571:	rex.B
   14001c572:	pop    r8
   14001c574:	rex.B
   14001c575:	rex.RB
   14001c576:	rex.X push rsi
   14001c578:	push   rcx
   14001c579:	rex.WRB
   14001c57a:	gs je  0x14001c5de
   14001c57d:	rex.WRB
   14001c57e:	gs je  0x14001c5e9
   14001c581:	outs   dx,DWORD PTR ds:[rsi]
   14001c582:	fs rex
   14001c584:	rex
   14001c585:	rex pop rdx
   14001c587:	add    cl,bl
   14001c589:	(bad)  
   14001c58a:	(bad)  
   14001c58b:	jae    0x14001c5f6
   14001c58d:	(bad)  
   14001c58e:	ins    BYTE PTR es:[rdi],dx
   14001c58f:	imul   ebp,DWORD PTR [rsi+0x67],0x62415140
   14001c596:	jae    0x14001c60c
   14001c598:	jb     0x14001c5fb
   14001c59a:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c59e:	gs ins DWORD PTR es:[rdi],dx
   14001c5a0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c5a2:	fs gs ins BYTE PTR es:[rdi],dx
   14001c5a5:	rex
   14001c5a6:	rex push rbp
   14001c5a8:	rex.RB
   14001c5a9:	rex.X
   14001c5aa:	rex.B (bad) 
   14001c5ac:	push   r14
   14001c5ae:	push   rcx
   14001c5af:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c5b1:	fs gs ins BYTE PTR es:[rdi],dx
   14001c5b4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c5b6:	fs gs js 0x14001c5fa
   14001c5ba:	rex
   14001c5bb:	rex.W
   14001c5bc:	rex.W
   14001c5bd:	rex.B
   14001c5be:	rex.RB
   14001c5bf:	rex.X push rsi
   14001c5c1:	xor    al,BYTE PTR [rax+0x40]
   14001c5c4:	pop    rdx
   14001c5c5:	add    BYTE PTR [rsp+rcx*1+0x7361683f],bl
   14001c5cc:	rex.XB push 0x72646c69
   14001c5d2:	outs   dx,BYTE PTR gs:[rsi]
   14001c5d4:	rex push rcx
   14001c5d6:	(bad)
   14001c5dc:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c5e0:	gs ins DWORD PTR es:[rdi],dx
   14001c5e2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c5e4:	fs gs ins BYTE PTR es:[rdi],dx
   14001c5e7:	rex
   14001c5e8:	rex push rbp
   14001c5ea:	rex.RB
   14001c5eb:	rex.X
   14001c5ec:	pop    r15
   14001c5ee:	rex.WRX
   14001c5ef:	rex.B
   14001c5f0:	rex.RB
   14001c5f1:	rex.X push rsi
   14001c5f3:	push   rcx
   14001c5f4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c5f6:	fs gs ins BYTE PTR es:[rdi],dx
   14001c5f9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c5fb:	fs gs js 0x14001c63f
   14001c5ff:	rex
   14001c600:	rex pop rdx
   14001c602:	add    BYTE PTR [rax],al
   14001c604:	pop    rsi
   14001c605:	adc    eax,0x7465733f
   14001c60a:	rex.R (bad) 
   14001c60c:	je     0x14001c66f
   14001c60e:	rex push rcx
   14001c610:	(bad)
   14001c616:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c61a:	gs ins DWORD PTR es:[rdi],dx
   14001c61c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c61e:	fs gs ins BYTE PTR es:[rdi],dx
   14001c621:	rex
   14001c622:	rex push rbp
   14001c624:	rex.RB
   14001c625:	rex.B
   14001c626:	pop    r15
   14001c628:	rex.WRX
   14001c629:	rex.B
   14001c62a:	rex.RB
   14001c62b:	rex.X push rsi
   14001c62d:	push   rcx
   14001c62e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c630:	fs gs ins BYTE PTR es:[rdi],dx
   14001c633:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c635:	fs gs js 0x14001c679
   14001c639:	rex
   14001c63a:	rex.B
   14001c63b:	rex.RB
   14001c63c:	rex.X push rsi
   14001c63e:	push   rcx
   14001c63f:	push   rsi
   14001c640:	(bad)  
   14001c641:	jb     0x14001c6ac
   14001c643:	(bad)  
   14001c644:	outs   dx,BYTE PTR ds:[rsi]
   14001c645:	je     0x14001c687
   14001c647:	rex
   14001c648:	rex.W
   14001c649:	rex pop rdx
   14001c64b:	add    ch,al
   14001c64d:	adc    eax,0x7465733f
   14001c652:	rex.W
   14001c653:	gs (bad) 
   14001c655:	fs gs jb 0x14001c69d
   14001c659:	(bad)  
   14001c65a:	je     0x14001c6bd
   14001c65c:	rex push rcx
   14001c65e:	(bad)
   14001c664:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c668:	gs ins DWORD PTR es:[rdi],dx
   14001c66a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c66c:	fs gs ins BYTE PTR es:[rdi],dx
   14001c66f:	rex
   14001c670:	rex push rbp
   14001c672:	rex.RB
   14001c673:	rex.B
   14001c674:	pop    r15
   14001c676:	rex.WRX
   14001c677:	rex.W push rdi
   14001c679:	xor    al,0x4f
   14001c67b:	jb     0x14001c6e6
   14001c67d:	outs   dx,BYTE PTR gs:[rsi]
   14001c67f:	je     0x14001c6e2
   14001c681:	je     0x14001c6ec
   14001c683:	outs   dx,DWORD PTR ds:[rsi]
   14001c684:	outs   dx,BYTE PTR ds:[rsi]
   14001c685:	rex push rcx
   14001c687:	je     0x14001c6c9
   14001c689:	rex
   14001c68a:	rex.B
   14001c68b:	rex.RB
   14001c68c:	rex.X push rsi
   14001c68e:	push   rcx
   14001c68f:	push   rsi
   14001c690:	(bad)  
   14001c691:	jb     0x14001c6fc
   14001c693:	(bad)  
   14001c694:	outs   dx,BYTE PTR ds:[rsi]
   14001c695:	je     0x14001c6d7
   14001c697:	rex
   14001c698:	rex.W
   14001c699:	rex pop rdx
   14001c69b:	add    al,dh
   14001c69d:	(bad)  
   14001c69e:	(bad)  
   14001c69f:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x61746144
   14001c6a7:	rex push rcx
   14001c6a9:	(bad)
   14001c6af:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c6b3:	gs ins DWORD PTR es:[rdi],dx
   14001c6b5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c6b7:	fs gs ins BYTE PTR es:[rdi],dx
   14001c6ba:	rex
   14001c6bb:	rex push rbp
   14001c6bd:	rex.RB
   14001c6be:	rex.X
   14001c6bf:	rex.B (bad) 
   14001c6c1:	push   r14
   14001c6c3:	(bad)  
   14001c6c4:	and    al,0x51
   14001c6c6:	rex.WRB (bad) 
   14001c6c8:	jo     0x14001c70a
   14001c6ca:	rex.W push rsi
   14001c6cc:	push   rcx
   14001c6cd:	push   rsi
   14001c6ce:	(bad)  
   14001c6cf:	jb     0x14001c73a
   14001c6d1:	(bad)  
   14001c6d2:	outs   dx,BYTE PTR ds:[rsi]
   14001c6d3:	je     0x14001c715
   14001c6d5:	rex
   14001c6d6:	rex
   14001c6d7:	rex
   14001c6d8:	rex.B
   14001c6d9:	rex.RB
   14001c6da:	rex.X push rsi
   14001c6dc:	push   rcx
   14001c6dd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c6df:	fs gs ins BYTE PTR es:[rdi],dx
   14001c6e2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c6e4:	fs gs js 0x14001c728
   14001c6e8:	rex
   14001c6e9:	rex pop rdx
   14001c6eb:	add    dl,bl
   14001c6ed:	adc    eax,0x7465733f
   14001c6f2:	rex.WB je 0x14001c75a
   14001c6f5:	ins    DWORD PTR es:[rdi],dx
   14001c6f6:	rex.R (bad) 
   14001c6f8:	je     0x14001c75b
   14001c6fa:	rex push rcx
   14001c6fc:	(bad)
   14001c702:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c706:	gs ins DWORD PTR es:[rdi],dx
   14001c708:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c70a:	fs gs ins BYTE PTR es:[rdi],dx
   14001c70d:	rex
   14001c70e:	rex push rbp
   14001c710:	rex.RB
   14001c711:	rex.B
   14001c712:	pop    r15
   14001c714:	rex.WRX
   14001c715:	rex.B
   14001c716:	rex.RB
   14001c717:	rex.X push rsi
   14001c719:	push   rcx
   14001c71a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c71c:	fs gs ins BYTE PTR es:[rdi],dx
   14001c71f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c721:	fs gs js 0x14001c765
   14001c725:	rex
   14001c726:	rex.B
   14001c727:	rex.RB
   14001c728:	rex.X push rsi
   14001c72a:	(bad)  
   14001c72b:	and    al,0x51
   14001c72d:	rex.WRB (bad) 
   14001c72f:	jo     0x14001c771
   14001c731:	rex.W push rsi
   14001c733:	push   rcx
   14001c734:	push   rsi
   14001c735:	(bad)  
   14001c736:	jb     0x14001c7a1
   14001c738:	(bad)  
   14001c739:	outs   dx,BYTE PTR ds:[rsi]
   14001c73a:	je     0x14001c77c
   14001c73c:	rex
   14001c73d:	rex
   14001c73e:	rex
   14001c73f:	rex pop rdx
   14001c741:	add    BYTE PTR [rcx],ch
   14001c743:	adc    BYTE PTR [rdi],bh
   14001c745:	ins    DWORD PTR es:[rdi],dx
   14001c746:	imul   ebp,DWORD PTR [rbp+0x65],0x65707954
   14001c74d:	jae    0x14001c78f
   14001c74f:	push   rcx
   14001c750:	(bad)
   14001c756:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c75a:	gs ins DWORD PTR es:[rdi],dx
   14001c75c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c75e:	fs gs ins BYTE PTR es:[rdi],dx
   14001c761:	rex
   14001c762:	rex push rbp
   14001c764:	rex.RB
   14001c765:	rex.X
   14001c766:	rex.B (bad) 
   14001c768:	push   r14
   14001c76a:	push   rcx
   14001c76b:	push   rbx
   14001c76c:	je     0x14001c7e0
   14001c76e:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001c775:	rex
   14001c776:	rex pop rax
   14001c778:	pop    rdx
   14001c779:	add    BYTE PTR [rsi],bl
   14001c77b:	adc    BYTE PTR [rdi],bh
   14001c77d:	ins    DWORD PTR es:[rdi],dx
   14001c77e:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001c785:	rex push rcx
   14001c787:	(bad)
   14001c78d:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c791:	gs ins DWORD PTR es:[rdi],dx
   14001c793:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c795:	fs gs ins BYTE PTR es:[rdi],dx
   14001c798:	rex
   14001c799:	rex push rbp
   14001c79b:	rex.RB
   14001c79c:	rex.X
   14001c79d:	push   r8
   14001c79f:	rex.RB
   14001c7a0:	push   r14
   14001c7a2:	push   rcx
   14001c7a3:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001c7ab:	rex
   14001c7ac:	rex
   14001c7ad:	rex.B
   14001c7ae:	rex.RB
   14001c7af:	rex.X push rsi
   14001c7b1:	(bad)  
   14001c7b2:	and    al,0x51
   14001c7b4:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   14001c7bc:	outs   dx,DWORD PTR ds:[rsi]
   14001c7bd:	fs gs ins BYTE PTR es:[rdi],dx
   14001c7c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c7c2:	fs gs js 0x14001c806
   14001c7c6:	rex
   14001c7c7:	rex
   14001c7c8:	rex
   14001c7c9:	rex pop rdx
   14001c7cb:	add    BYTE PTR [rax+0x61633f07],cl
   14001c7d1:	outs   dx,BYTE PTR ds:[rsi]
   14001c7d2:	rex.R jb 0x14001c844
   14001c7d5:	jo     0x14001c824
   14001c7d7:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001c7de:	rex push rcx
   14001c7e0:	(bad)
   14001c7e6:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c7ea:	gs ins DWORD PTR es:[rdi],dx
   14001c7ec:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c7ee:	fs gs ins BYTE PTR es:[rdi],dx
   14001c7f1:	rex
   14001c7f2:	rex push rbp
   14001c7f4:	rex.RB
   14001c7f5:	rex.X
   14001c7f6:	pop    r15
   14001c7f8:	rex.WRX push rax
   14001c7fa:	rex.RB
   14001c7fb:	rex.X push rsi
   14001c7fd:	push   rcx
   14001c7fe:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001c806:	rex
   14001c807:	rex push rdi
   14001c809:	xor    al,0x44
   14001c80b:	jb     0x14001c87c
   14001c80d:	jo     0x14001c850
   14001c80f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001c813:	outs   dx,BYTE PTR ds:[rsi]
   14001c814:	rex push rcx
   14001c816:	je     0x14001c858
   14001c818:	rex
   14001c819:	rex.W
   14001c81a:	rex.W
   14001c81b:	rex.B
   14001c81c:	rex.RB
   14001c81d:	rex.X push rsi
   14001c81f:	push   rcx
   14001c820:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c822:	fs gs ins BYTE PTR es:[rdi],dx
   14001c825:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c827:	fs gs js 0x14001c86b
   14001c82b:	rex
   14001c82c:	rex pop rdx
   14001c82e:	add    BYTE PTR [rax],al
   14001c830:	xchg   esp,eax
   14001c831:	or     bh,BYTE PTR [rdi]
   14001c833:	fs jb  0x14001c8a5
   14001c836:	jo     0x14001c885
   14001c838:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001c83f:	rex push rcx
   14001c841:	(bad)
   14001c847:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c84b:	gs ins DWORD PTR es:[rdi],dx
   14001c84d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c84f:	fs gs ins BYTE PTR es:[rdi],dx
   14001c852:	rex
   14001c853:	rex push rbp
   14001c855:	rex.RB
   14001c856:	rex.B
   14001c857:	pop    r15
   14001c859:	rex.WRX push rax
   14001c85b:	rex.RB
   14001c85c:	rex.X push rsi
   14001c85e:	push   rcx
   14001c85f:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001c867:	rex
   14001c868:	rex push rdi
   14001c86a:	xor    al,0x44
   14001c86c:	jb     0x14001c8dd
   14001c86e:	jo     0x14001c8b1
   14001c870:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001c874:	outs   dx,BYTE PTR ds:[rsi]
   14001c875:	rex push rcx
   14001c877:	je     0x14001c8b9
   14001c879:	rex
   14001c87a:	rex.W
   14001c87b:	rex.W
   14001c87c:	rex.B
   14001c87d:	rex.RB
   14001c87e:	rex.X push rsi
   14001c880:	push   rcx
   14001c881:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c883:	fs gs ins BYTE PTR es:[rdi],dx
   14001c886:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c888:	fs gs js 0x14001c8cc
   14001c88c:	rex
   14001c88d:	rex pop rdx
   14001c88f:	add    bh,ah
   14001c891:	(bad)  
   14001c892:	(bad)  
   14001c893:	jae    0x14001c90a
   14001c895:	jo     0x14001c907
   14001c897:	outs   dx,DWORD PTR ds:[rsi]
   14001c898:	jb     0x14001c90e
   14001c89a:	gs fs rex.R jb 0x14001c90e
   14001c89f:	jo     0x14001c8e2
   14001c8a1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001c8a5:	outs   dx,BYTE PTR ds:[rsi]
   14001c8a6:	jae    0x14001c8e8
   14001c8a8:	push   rcx
   14001c8a9:	(bad)
   14001c8af:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c8b3:	gs ins DWORD PTR es:[rdi],dx
   14001c8b5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c8b7:	fs gs ins BYTE PTR es:[rdi],dx
   14001c8ba:	rex
   14001c8bb:	rex push rbp
   14001c8bd:	rex.RB
   14001c8be:	rex.X
   14001c8bf:	rex.B (bad) 
   14001c8c1:	push   r14
   14001c8c3:	(bad)  
   14001c8c4:	and    al,0x51
   14001c8c6:	rex.RX ins BYTE PTR es:[rdi],dx
   14001c8c8:	(bad)  
   14001c8c9:	addr32 jae 0x14001c90c
   14001c8cc:	push   rdi
   14001c8cd:	xor    al,0x44
   14001c8cf:	jb     0x14001c940
   14001c8d1:	jo     0x14001c914
   14001c8d3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001c8d7:	outs   dx,BYTE PTR ds:[rsi]
   14001c8d8:	rex push rcx
   14001c8da:	je     0x14001c91c
   14001c8dc:	rex
   14001c8dd:	rex
   14001c8de:	rex pop rax
   14001c8e0:	pop    rdx
   14001c8e1:	add    ch,ah
   14001c8e3:	(bad)  
   14001c8e4:	(bad)  
   14001c8e5:	jae    0x14001c95c
   14001c8e7:	jo     0x14001c959
   14001c8e9:	outs   dx,DWORD PTR ds:[rsi]
   14001c8ea:	jb     0x14001c960
   14001c8ec:	gs fs rex.R jb 0x14001c952
   14001c8f1:	movsxd esi,DWORD PTR [r9d+ebp*2+0x6f]
   14001c8f7:	outs   dx,BYTE PTR ds:[rsi]
   14001c8f8:	jae    0x14001c93a
   14001c8fa:	push   rcx
   14001c8fb:	(bad)
   14001c901:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c905:	gs ins DWORD PTR es:[rdi],dx
   14001c907:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c909:	fs gs ins BYTE PTR es:[rdi],dx
   14001c90c:	rex
   14001c90d:	rex push rbp
   14001c90f:	rex.RB
   14001c910:	rex.X
   14001c911:	rex.B (bad) 
   14001c913:	push   r14
   14001c915:	(bad)  
   14001c916:	and    al,0x51
   14001c918:	rex.RX ins BYTE PTR es:[rdi],dx
   14001c91a:	(bad)  
   14001c91b:	addr32 jae 0x14001c95e
   14001c91e:	push   rdi
   14001c91f:	xor    al,0x44
   14001c921:	jb     0x14001c992
   14001c923:	jo     0x14001c966
   14001c925:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001c929:	outs   dx,BYTE PTR ds:[rsi]
   14001c92a:	rex push rcx
   14001c92c:	je     0x14001c96e
   14001c92e:	rex
   14001c92f:	rex
   14001c930:	rex pop rax
   14001c932:	pop    rdx
   14001c933:	add    BYTE PTR [rsi+0xd],ah
   14001c936:	(bad)  
   14001c937:	imul   ebp,DWORD PTR [rsi+0x73],0x52747265
   14001c93e:	outs   dx,DWORD PTR ds:[rsi]
   14001c93f:	ja     0x14001c9b4
   14001c941:	rex push rcx
   14001c943:	(bad)
   14001c949:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c94d:	gs ins DWORD PTR es:[rdi],dx
   14001c94f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c951:	fs gs ins BYTE PTR es:[rdi],dx
   14001c954:	rex
   14001c955:	rex push rbp
   14001c957:	rex.RB
   14001c958:	rex.B
   14001c959:	pop    r15
   14001c95b:	rex.WRX
   14001c95c:	rex.W
   14001c95d:	rex.W
   14001c95e:	rex.B
   14001c95f:	rex.RB
   14001c960:	rex.X push rsi
   14001c962:	push   rcx
   14001c963:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c965:	fs gs ins BYTE PTR es:[rdi],dx
   14001c968:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c96a:	fs gs js 0x14001c9ae
   14001c96e:	rex
   14001c96f:	rex pop rdx
   14001c971:	add    BYTE PTR [rdi+0xd],bl
   14001c974:	(bad)  
   14001c975:	imul   ebp,DWORD PTR [rsi+0x73],0x43747265
   14001c97c:	outs   dx,DWORD PTR ds:[rsi]
   14001c97d:	ins    BYTE PTR es:[rdi],dx
   14001c97e:	jne    0x14001c9ed
   14001c980:	outs   dx,BYTE PTR ds:[rsi]
   14001c981:	jae    0x14001c9c3
   14001c983:	push   rcx
   14001c984:	(bad)
   14001c98a:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c98e:	gs ins DWORD PTR es:[rdi],dx
   14001c990:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c992:	fs gs ins BYTE PTR es:[rdi],dx
   14001c995:	rex
   14001c996:	rex push rbp
   14001c998:	rex.RB
   14001c999:	rex.B
   14001c99a:	pop    r15
   14001c99c:	rex.WRX
   14001c99d:	rex.W
   14001c99e:	rex.W
   14001c99f:	rex.B
   14001c9a0:	rex.RB
   14001c9a1:	rex.X push rsi
   14001c9a3:	push   rcx
   14001c9a4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c9a6:	fs gs ins BYTE PTR es:[rdi],dx
   14001c9a9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c9ab:	fs gs js 0x14001c9ef
   14001c9af:	rex
   14001c9b0:	rex pop rdx
   14001c9b2:	add    BYTE PTR [rax],al
   14001c9b4:	(bad)  
   14001c9b5:	adc    al,0x3f
   14001c9b7:	jb     0x14001ca1e
   14001c9b9:	ins    DWORD PTR es:[rdi],dx
   14001c9ba:	outs   dx,DWORD PTR ds:[rsi]
   14001c9bb:	jbe    0x14001ca22
   14001c9bd:	push   rdx
   14001c9be:	outs   dx,DWORD PTR ds:[rsi]
   14001c9bf:	ja     0x14001ca34
   14001c9c1:	rex push rcx
   14001c9c3:	(bad)
   14001c9c9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001c9cd:	gs ins DWORD PTR es:[rdi],dx
   14001c9cf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c9d1:	fs gs ins BYTE PTR es:[rdi],dx
   14001c9d4:	rex
   14001c9d5:	rex push rbp
   14001c9d7:	rex.RB
   14001c9d8:	rex.B
   14001c9d9:	pop    r15
   14001c9db:	rex.WRX
   14001c9dc:	rex.W
   14001c9dd:	rex.W
   14001c9de:	rex.B
   14001c9df:	rex.RB
   14001c9e0:	rex.X push rsi
   14001c9e2:	push   rcx
   14001c9e3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c9e5:	fs gs ins BYTE PTR es:[rdi],dx
   14001c9e8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c9ea:	fs gs js 0x14001ca2e
   14001c9ee:	rex
   14001c9ef:	rex pop rdx
   14001c9f1:	add    bl,ah
   14001c9f3:	adc    edi,DWORD PTR [rdi]
   14001c9f5:	jb     0x14001ca5c
   14001c9f7:	ins    DWORD PTR es:[rdi],dx
   14001c9f8:	outs   dx,DWORD PTR ds:[rsi]
   14001c9f9:	jbe    0x14001ca60
   14001c9fb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c9fd:	ins    BYTE PTR es:[rdi],dx
   14001c9fe:	jne    0x14001ca6d
   14001ca00:	outs   dx,BYTE PTR ds:[rsi]
   14001ca01:	jae    0x14001ca43
   14001ca03:	push   rcx
   14001ca04:	(bad)
   14001ca0a:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001ca0e:	gs ins DWORD PTR es:[rdi],dx
   14001ca10:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ca12:	fs gs ins BYTE PTR es:[rdi],dx
   14001ca15:	rex
   14001ca16:	rex push rbp
   14001ca18:	rex.RB
   14001ca19:	rex.B
   14001ca1a:	pop    r15
   14001ca1c:	rex.WRX
   14001ca1d:	rex.W
   14001ca1e:	rex.W
   14001ca1f:	rex.B
   14001ca20:	rex.RB
   14001ca21:	rex.X push rsi
   14001ca23:	push   rcx
   14001ca24:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ca26:	fs gs ins BYTE PTR es:[rdi],dx
   14001ca29:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ca2b:	fs gs js 0x14001ca6f
   14001ca2f:	rex
   14001ca30:	rex pop rdx
   14001ca32:	add    BYTE PTR [rax],al
   14001ca34:	pop    rax
   14001ca35:	adc    BYTE PTR [rdi],bh
   14001ca37:	ins    DWORD PTR es:[rdi],dx
   14001ca38:	outs   dx,DWORD PTR ds:[rsi]
   14001ca39:	jbe    0x14001caa0
   14001ca3b:	push   rdx
   14001ca3c:	outs   dx,DWORD PTR ds:[rsi]
   14001ca3d:	ja     0x14001cab2
   14001ca3f:	rex push rcx
   14001ca41:	(bad)
   14001ca47:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001ca4b:	gs ins DWORD PTR es:[rdi],dx
   14001ca4d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ca4f:	fs gs ins BYTE PTR es:[rdi],dx
   14001ca52:	rex
   14001ca53:	rex push rbp
   14001ca55:	rex.RB
   14001ca56:	rex.B
   14001ca57:	pop    r15
   14001ca59:	rex.WRX
   14001ca5a:	rex.B
   14001ca5b:	rex.RB
   14001ca5c:	rex.X push rsi
   14001ca5e:	push   rcx
   14001ca5f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ca61:	fs gs ins BYTE PTR es:[rdi],dx
   14001ca64:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ca66:	fs gs js 0x14001caaa
   14001ca6a:	rex
   14001ca6b:	rex.W
   14001ca6c:	rex.W xor BYTE PTR [rax+0x40],cl
   14001ca70:	pop    rdx
   14001ca71:	add    BYTE PTR [rcx+0x10],dl
   14001ca74:	(bad)  
   14001ca75:	ins    DWORD PTR es:[rdi],dx
   14001ca76:	outs   dx,DWORD PTR ds:[rsi]
   14001ca77:	jbe    0x14001cade
   14001ca79:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ca7b:	ins    BYTE PTR es:[rdi],dx
   14001ca7c:	jne    0x14001caeb
   14001ca7e:	outs   dx,BYTE PTR ds:[rsi]
   14001ca7f:	jae    0x14001cac1
   14001ca81:	push   rcx
   14001ca82:	(bad)
   14001ca88:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001ca8c:	gs ins DWORD PTR es:[rdi],dx
   14001ca8e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ca90:	fs gs ins BYTE PTR es:[rdi],dx
   14001ca93:	rex
   14001ca94:	rex push rbp
   14001ca96:	rex.RB
   14001ca97:	rex.B
   14001ca98:	pop    r15
   14001ca9a:	rex.WRX
   14001ca9b:	rex.B
   14001ca9c:	rex.RB
   14001ca9d:	rex.X push rsi
   14001ca9f:	push   rcx
   14001caa0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001caa2:	fs gs ins BYTE PTR es:[rdi],dx
   14001caa5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001caa7:	fs gs js 0x14001caeb
   14001caab:	rex
   14001caac:	rex.W
   14001caad:	rex.W xor BYTE PTR [rax+0x40],cl
   14001cab1:	pop    rdx
   14001cab2:	add    BYTE PTR [rax],al
   14001cab4:	pushf  
   14001cab5:	or     edi,DWORD PTR [rdi]
   14001cab7:	data16 gs je 0x14001cb1e
   14001cabb:	push   0x65726f4d
   14001cac0:	rex push rcx
   14001cac2:	(bad)
   14001cac8:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cacc:	gs ins DWORD PTR es:[rdi],dx
   14001cace:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cad0:	fs gs ins BYTE PTR es:[rdi],dx
   14001cad3:	rex
   14001cad4:	rex push rbp
   14001cad6:	rex.RB
   14001cad7:	rex.B
   14001cad8:	pop    r8
   14001cada:	rex.B
   14001cadb:	rex.RB
   14001cadc:	rex.X push rsi
   14001cade:	push   rcx
   14001cadf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cae1:	fs gs ins BYTE PTR es:[rdi],dx
   14001cae4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cae6:	fs gs js 0x14001cb2a
   14001caea:	rex
   14001caeb:	rex pop rdx
   14001caed:	add    BYTE PTR [rdi+rax*1+0x6e61633f],cl
   14001caf4:	rex.RX
   14001caf5:	gs je  0x14001cb5b
   14001caf8:	push   0x65726f4d
   14001cafd:	rex push rcx
   14001caff:	(bad)
   14001cb05:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cb09:	gs ins DWORD PTR es:[rdi],dx
   14001cb0b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cb0d:	fs gs ins BYTE PTR es:[rdi],dx
   14001cb10:	rex
   14001cb11:	rex push rbp
   14001cb13:	rex.RB
   14001cb14:	rex.X
   14001cb15:	pop    r15
   14001cb17:	rex.WRX
   14001cb18:	rex.B
   14001cb19:	rex.RB
   14001cb1a:	rex.X push rsi
   14001cb1c:	push   rcx
   14001cb1d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cb1f:	fs gs ins BYTE PTR es:[rdi],dx
   14001cb22:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cb24:	fs gs js 0x14001cb68
   14001cb28:	rex
   14001cb29:	rex pop rdx
   14001cb2b:	add    dh,ch
   14001cb2d:	or     edi,DWORD PTR [rdi]
   14001cb2f:	data16 ins BYTE PTR es:[rdi],dx
   14001cb31:	(bad)  
   14001cb32:	addr32 jae 0x14001cb75
   14001cb35:	push   rcx
   14001cb36:	(bad)
   14001cb3c:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cb40:	gs ins DWORD PTR es:[rdi],dx
   14001cb42:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cb44:	fs gs ins BYTE PTR es:[rdi],dx
   14001cb47:	rex
   14001cb48:	rex push rbp
   14001cb4a:	rex.RB
   14001cb4b:	rex.X
   14001cb4c:	rex.B (bad) 
   14001cb4e:	push   r14
   14001cb50:	(bad)  
   14001cb51:	and    al,0x51
   14001cb53:	rex.RX ins BYTE PTR es:[rdi],dx
   14001cb55:	(bad)  
   14001cb56:	addr32 jae 0x14001cb99
   14001cb59:	push   rdi
   14001cb5a:	xor    al,0x49
   14001cb5c:	je     0x14001cbc3
   14001cb5e:	ins    DWORD PTR es:[rdi],dx
   14001cb5f:	rex.RX ins BYTE PTR es:[rdi],dx
   14001cb61:	(bad)  
   14001cb62:	addr32 rex push rcx
   14001cb65:	je     0x14001cba7
   14001cb67:	rex
   14001cb68:	rex
   14001cb69:	rex
   14001cb6a:	rex.B
   14001cb6b:	rex.RB
   14001cb6c:	rex.X push rsi
   14001cb6e:	push   rcx
   14001cb6f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cb71:	fs gs ins BYTE PTR es:[rdi],dx
   14001cb74:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cb76:	fs gs js 0x14001cbba
   14001cb7a:	rex
   14001cb7b:	rex pop rdx
   14001cb7d:	add    BYTE PTR [rax],bl
   14001cb7f:	(bad)  
   14001cb80:	(bad)  
   14001cb81:	jae    0x14001cbf2
   14001cb83:	jb     0x14001cbf9
   14001cb85:	rex push rcx
   14001cb87:	(bad)
   14001cb8d:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cb91:	gs ins DWORD PTR es:[rdi],dx
   14001cb93:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cb95:	fs gs ins BYTE PTR es:[rdi],dx
   14001cb98:	rex
   14001cb99:	rex push rbp
   14001cb9b:	rex.RB
   14001cb9c:	rex.B
   14001cb9d:	pop    r8
   14001cb9f:	rex.W push rdi
   14001cba1:	xor    al,0x53
   14001cba3:	outs   dx,DWORD PTR ds:[rsi]
   14001cba4:	jb     0x14001cc1a
   14001cba6:	rex.WRXB jb 0x14001cc0d
   14001cba9:	gs jb  0x14001cbec
   14001cbac:	push   rcx
   14001cbad:	je     0x14001cbef
   14001cbaf:	rex
   14001cbb0:	rex pop rdx
   14001cbb2:	add    BYTE PTR [rax],al
   14001cbb4:	imul   eax,DWORD PTR [rdi],0x6475623f
   14001cbba:	fs jns 0x14001cbfd
   14001cbbd:	push   rcx
   14001cbbe:	(bad)
   14001cbc4:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cbc8:	gs ins DWORD PTR es:[rdi],dx
   14001cbca:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cbcc:	fs gs ins BYTE PTR es:[rdi],dx
   14001cbcf:	rex
   14001cbd0:	rex push rbp
   14001cbd2:	rex.RB
   14001cbd3:	rex.X
   14001cbd4:	rex.B (bad) 
   14001cbd6:	push   r14
   14001cbd8:	push   rcx
   14001cbd9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cbdb:	fs gs ins BYTE PTR es:[rdi],dx
   14001cbde:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cbe0:	fs gs js 0x14001cc24
   14001cbe4:	rex
   14001cbe5:	rex.B
   14001cbe6:	rex.RB
   14001cbe7:	rex.X push rsi
   14001cbe9:	xor    al,BYTE PTR [rax+0x40]
   14001cbec:	pop    rdx
   14001cbed:	add    BYTE PTR [rax+0x616d3f0f],ch
   14001cbf3:	je     0x14001cc58
   14001cbf5:	push   0x62415140
   14001cbfa:	jae    0x14001cc70
   14001cbfc:	jb     0x14001cc5f
   14001cbfe:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cc02:	gs ins DWORD PTR es:[rdi],dx
   14001cc04:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cc06:	fs gs ins BYTE PTR es:[rdi],dx
   14001cc09:	rex
   14001cc0a:	rex push rbp
   14001cc0c:	rex.RB
   14001cc0d:	rex.X
   14001cc0e:	rex.B (bad) 
   14001cc10:	push   r14
   14001cc12:	(bad)  
   14001cc13:	and    al,0x51
   14001cc15:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   14001cc1d:	outs   dx,DWORD PTR ds:[rsi]
   14001cc1e:	fs gs ins BYTE PTR es:[rdi],dx
   14001cc21:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cc23:	fs gs js 0x14001cc67
   14001cc27:	rex
   14001cc28:	rex
   14001cc29:	rex
   14001cc2a:	rex.B
   14001cc2b:	rex.RB
   14001cc2c:	rex.X push rsi
   14001cc2e:	push   rcx
   14001cc2f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cc31:	fs gs ins BYTE PTR es:[rdi],dx
   14001cc34:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cc36:	fs gs js 0x14001cc7a
   14001cc3a:	rex
   14001cc3b:	rex.W
   14001cc3c:	rex.B
   14001cc3d:	rex.RB
   14001cc3e:	rex.X push rsi
   14001cc40:	push   rcx
   14001cc41:	push   rsi
   14001cc42:	(bad)  
   14001cc43:	jb     0x14001ccae
   14001cc45:	(bad)  
   14001cc46:	outs   dx,BYTE PTR ds:[rsi]
   14001cc47:	je     0x14001cc89
   14001cc49:	rex
   14001cc4a:	rex.W push rsi
   14001cc4c:	(bad)  
   14001cc4d:	and    al,0x51
   14001cc4f:	rex.RX ins BYTE PTR es:[rdi],dx
   14001cc51:	(bad)  
   14001cc52:	addr32 jae 0x14001cc95
   14001cc55:	push   rdi
   14001cc56:	xor    al,0x4d
   14001cc58:	(bad)  
   14001cc59:	je     0x14001ccbe
   14001cc5b:	push   0x67616c46
   14001cc60:	rex push rcx
   14001cc62:	je     0x14001cca4
   14001cc64:	rex
   14001cc65:	rex
   14001cc66:	rex
   14001cc67:	rex pop rdx
   14001cc69:	add    BYTE PTR [rdi],ah
   14001cc6b:	(bad)  
   14001cc6c:	(bad)  
   14001cc6d:	jae    0x14001ccdf
   14001cc6f:	(bad)  
   14001cc70:	outs   dx,BYTE PTR ds:[rsi]
   14001cc71:	rex push rcx
   14001cc73:	(bad)
   14001cc79:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cc7d:	gs ins DWORD PTR es:[rdi],dx
   14001cc7f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cc81:	fs gs ins BYTE PTR es:[rdi],dx
   14001cc84:	rex
   14001cc85:	rex push rbp
   14001cc87:	rex.RB
   14001cc88:	rex.X
   14001cc89:	rex.B (bad) 
   14001cc8b:	push   r14
   14001cc8d:	push   rcx
   14001cc8e:	push   rbx
   14001cc8f:	imul   edi,DWORD PTR [rdx+0x65],0x45414040
   14001cc96:	rex.X push rsi
   14001cc98:	push   rcx
   14001cc99:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cc9b:	fs gs ins BYTE PTR es:[rdi],dx
   14001cc9e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cca0:	fs gs js 0x14001cce4
   14001cca4:	rex
   14001cca5:	rex pop rdx
   14001cca7:	add    BYTE PTR [rsp+rdx*1+0x6c6f723f],ch
   14001ccae:	gs rex.WRX (bad) 
   14001ccb1:	ins    DWORD PTR es:[rdi],dx
   14001ccb2:	gs jae 0x14001ccf5
   14001ccb5:	push   rcx
   14001ccb6:	(bad)
   14001ccbc:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001ccc0:	gs ins DWORD PTR es:[rdi],dx
   14001ccc2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ccc4:	fs gs ins BYTE PTR es:[rdi],dx
   14001ccc7:	rex
   14001ccc8:	rex push rbp
   14001ccca:	rex.RB
   14001cccb:	rex.X
   14001cccc:	rex.B (bad) 
   14001ccce:	push   r14
   14001ccd0:	(bad)  
   14001ccd1:	and    al,0x51
   14001ccd3:	rex.W (bad) 
   14001ccd5:	jae    0x14001cd3f
   14001ccd7:	rex
   14001ccd8:	rex.W push rsi
   14001ccda:	push   rcx
   14001ccdb:	rex.X jns 0x14001cd52
   14001ccde:	gs rex.B jb 0x14001cd54
   14001cce2:	(bad)  
   14001cce3:	jns    0x14001cd25
   14001cce5:	rex
   14001cce6:	rex
   14001cce7:	rex pop rax
   14001cce9:	pop    rdx
   14001ccea:	add    BYTE PTR [rax],al
   14001ccec:	ficom  WORD PTR [rdi]
   14001ccee:	(bad)  
   14001ccef:	jae    0x14001cd66
   14001ccf1:	(bad)  
   14001ccf2:	ins    DWORD PTR es:[rdi],dx
   14001ccf3:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x74736241
   14001ccfb:	jb     0x14001cd5e
   14001ccfd:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cd01:	gs ins DWORD PTR es:[rdi],dx
   14001cd03:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cd05:	fs gs ins BYTE PTR es:[rdi],dx
   14001cd08:	rex
   14001cd09:	rex push rbp
   14001cd0b:	rex.RB
   14001cd0c:	rex.B
   14001cd0d:	pop    r15
   14001cd0f:	rex.WRX pop rax
   14001cd11:	pop    rdx
   14001cd12:	add    BYTE PTR [rax],al
   14001cd14:	xchg   esi,eax
   14001cd15:	adc    al,0x3f
   14001cd17:	jb     0x14001cd7e
   14001cd19:	jbe    0x14001cd80
   14001cd1b:	jb     0x14001cd91
   14001cd1d:	rex push rcx
   14001cd1f:	(bad)
   14001cd25:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001cd29:	gs ins DWORD PTR es:[rdi],dx
   14001cd2b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cd2d:	fs gs ins BYTE PTR es:[rdi],dx
   14001cd30:	rex
   14001cd31:	rex push rbp
   14001cd33:	rex.RB
   14001cd34:	rex.B
   14001cd35:	pop    r8
   14001cd37:	pop    rax
   14001cd38:	pop    rdx
   14001cd39:	add    BYTE PTR [rax+0xc],bl
   14001cd3c:	(bad)  
   14001cd3d:	data16 jb 0x14001cdaf
   14001cd40:	ins    DWORD PTR es:[rdi],dx
   14001cd41:	push   rbp
   14001cd42:	je     0x14001cdaa
   14001cd44:	cmp    BYTE PTR [rax+0x51],al
   14001cd47:	push   rbx
   14001cd48:	je     0x14001cdbc
   14001cd4a:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001cd51:	(bad)  
   14001cd52:	push   r14
   14001cd54:	xor    DWORD PTR [rax+0x50],eax
   14001cd57:	rex.RB
   14001cd58:	rex.X
   14001cd59:	rex.R
   14001cd5a:	rex.W
   14001cd5b:	rex pop rdx
   14001cd5d:	add    BYTE PTR [rsi+0x2],ah
   14001cd60:	(bad)  
   14001cd61:	(bad)  
   14001cd62:	xor    DWORD PTR [rcx+0x42],edx
   14001cd65:	jns    0x14001cddb
   14001cd67:	gs rex.B jb 0x14001cddd
   14001cd6b:	(bad)  
   14001cd6c:	jns    0x14001cdae
   14001cd6e:	rex push rcx
   14001cd70:	rex.RB
   14001cd71:	rex.B
   14001cd72:	rex.B
   14001cd73:	rex pop rax
   14001cd75:	pop    rdx
   14001cd76:	add    BYTE PTR [rax],al
   14001cd78:	rol    BYTE PTR [rdx],1
   14001cd7a:	(bad)  
   14001cd7b:	(bad)  
   14001cd7c:	xor    DWORD PTR [rcx+0x53],edx
   14001cd7f:	je     0x14001cdf3
   14001cd81:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001cd88:	rex.B
   14001cd89:	rex.B
   14001cd8a:	rex pop rax
   14001cd8c:	pop    rdx
   14001cd8d:	add    BYTE PTR [rsi+rdx*1+0x7465733f],dh
   14001cd94:	push   rsi
   14001cd95:	(bad)  
   14001cd96:	ins    BYTE PTR es:[rdi],dx
   14001cd97:	jne    0x14001cdfe
   14001cd99:	rex push rcx
   14001cd9b:	push   rbx
   14001cd9c:	gs je  0x14001ce13
   14001cd9f:	imul   ebp,DWORD PTR [rsi+0x67],0x51404073
   14001cda6:	rex.RB
   14001cda7:	rex.B
   14001cda8:	pop    r8
   14001cdaa:	rex.B
   14001cdab:	rex.RB
   14001cdac:	rex.X push rsi
   14001cdae:	push   rcx
   14001cdaf:	push   rbx
   14001cdb0:	je     0x14001ce24
   14001cdb2:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001cdb9:	rex.X push rsi
   14001cdbb:	push   rcx
   14001cdbc:	push   rsi
   14001cdbd:	(bad)  
   14001cdbe:	jb     0x14001ce29
   14001cdc0:	(bad)  
   14001cdc1:	outs   dx,BYTE PTR ds:[rsi]
   14001cdc2:	je     0x14001ce04
   14001cdc4:	rex
   14001cdc5:	rex pop rdx
   14001cdc7:	add    dl,ch
   14001cdc9:	add    DWORD PTR [rdi],edi
   14001cdcb:	(bad)  
   14001cdcc:	xor    BYTE PTR [rcx+0x56],dl
   14001cdcf:	(bad)  
   14001cdd0:	jb     0x14001ce3b
   14001cdd2:	(bad)  
   14001cdd3:	outs   dx,BYTE PTR ds:[rsi]
   14001cdd4:	je     0x14001ce16
   14001cdd6:	rex push rcx
   14001cdd8:	rex.RB
   14001cdd9:	rex.B
   14001cdda:	rex.B
   14001cddb:	rex
   14001cddc:	rex.B
   14001cddd:	rex.RB
   14001cdde:	rex.X push rsi
   14001cde0:	push   rcx
   14001cde1:	rex.X jns 0x14001ce58
   14001cde4:	gs rex.B jb 0x14001ce5a
   14001cde8:	(bad)  
   14001cde9:	jns    0x14001ce2b
   14001cdeb:	rex
   14001cdec:	rex pop rdx
   14001cdee:	add    BYTE PTR [rax],al
   14001cdf0:	movsxd ebx,DWORD PTR [rax]
   14001cdf2:	(bad)  
   14001cdf3:	je     0x14001ce64
   14001cdf5:	rex.X jns 0x14001ce6c
   14001cdf8:	gs rex.B jb 0x14001ce6e
   14001cdfc:	(bad)  
   14001cdfd:	jns    0x14001ce3f
   14001cdff:	push   rcx
   14001ce00:	push   rsi
   14001ce01:	(bad)  
   14001ce02:	jb     0x14001ce6d
   14001ce04:	(bad)  
   14001ce05:	outs   dx,BYTE PTR ds:[rsi]
   14001ce06:	je     0x14001ce48
   14001ce08:	rex push rcx
   14001ce0a:	rex.RB
   14001ce0b:	rex.X
   14001ce0c:	rex.B (bad) 
   14001ce0e:	push   r14
   14001ce10:	push   rcx
   14001ce11:	rex.X jns 0x14001ce88
   14001ce14:	gs rex.B jb 0x14001ce8a
   14001ce18:	(bad)  
   14001ce19:	jns    0x14001ce5b
   14001ce1b:	rex pop rax
   14001ce1d:	pop    rdx
   14001ce1e:	add    BYTE PTR [rax],al
   14001ce20:	(bad)  
   14001ce21:	sbb    bh,BYTE PTR [rdi]
   14001ce23:	jbe    0x14001ce86
   14001ce25:	ins    BYTE PTR es:[rdi],dx
   14001ce26:	jne    0x14001ce8d
   14001ce28:	rex push rcx
   14001ce2a:	push   rbx
   14001ce2b:	gs je  0x14001cea2
   14001ce2e:	imul   ebp,DWORD PTR [rsi+0x67],0x51404073
   14001ce35:	rex.RB
   14001ce36:	rex.X
   14001ce37:	rex.B (bad) 
   14001ce39:	push   r14
   14001ce3b:	push   rcx
   14001ce3c:	push   rsi
   14001ce3d:	(bad)  
   14001ce3e:	jb     0x14001cea9
   14001ce40:	(bad)  
   14001ce41:	outs   dx,BYTE PTR ds:[rsi]
   14001ce42:	je     0x14001ce84
   14001ce44:	rex
   14001ce45:	rex.B
   14001ce46:	rex.RB
   14001ce47:	rex.X push rsi
   14001ce49:	push   rcx
   14001ce4a:	push   rbx
   14001ce4b:	je     0x14001cebf
   14001ce4d:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001ce54:	rex.X push rsi
   14001ce56:	xor    al,BYTE PTR [rax+0x40]
   14001ce59:	pop    rdx
   14001ce5a:	add    BYTE PTR [rax],al
   14001ce5c:	push   rdi
   14001ce5d:	add    BYTE PTR [rdi],bh
   14001ce5f:	(bad)  
   14001ce60:	xor    BYTE PTR [rcx+0x43],dl
   14001ce63:	push   0x40407261
   14001ce68:	push   rcx
   14001ce69:	rex.RB
   14001ce6a:	rex.B
   14001ce6b:	rex.B
   14001ce6c:	rex push rbp
   14001ce6e:	push   rcx
   14001ce6f:	rex.WR (bad) 
   14001ce71:	je     0x14001cedc
   14001ce73:	outs   dx,BYTE PTR ds:[rsi]
   14001ce74:	xor    DWORD PTR [rbx+0x68],eax
   14001ce77:	(bad)  
   14001ce78:	jb     0x14001ceba
   14001ce7a:	rex
   14001ce7b:	rex pop rdx
   14001ce7d:	add    BYTE PTR [rcx+0x6f743f18],dl
   14001ce83:	rex.W je 0x14001cef3
   14001ce86:	ins    BYTE PTR es:[rdi],dx
   14001ce87:	rex.RB jae 0x14001ceed
   14001ce8a:	(bad)  
   14001ce8b:	jo     0x14001cef2
   14001ce8d:	fs rex push rcx
   14001ce90:	push   rbx
   14001ce91:	je     0x14001cf05
   14001ce93:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ce9a:	rex.X
   14001ce9b:	rex.B (bad) 
   14001ce9d:	push   r14
   14001ce9f:	xor    DWORD PTR [rax+0x58],eax
   14001cea2:	pop    rdx
   14001cea3:	add    BYTE PTR [rsi+0x303f3f01],dl
   14001cea9:	push   rcx
   14001ceaa:	push   rbx
   14001ceab:	je     0x14001cf1f
   14001cead:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ceb4:	rex.B
   14001ceb5:	rex.B
   14001ceb6:	rex push rsi
   14001ceb8:	push   rcx
   14001ceb9:	rex.WR (bad) 
   14001cebb:	je     0x14001cf26
   14001cebd:	outs   dx,BYTE PTR ds:[rsi]
   14001cebe:	xor    DWORD PTR [rbx+0x74],edx
   14001cec1:	jb     0x14001cf2c
   14001cec3:	outs   dx,BYTE PTR ds:[rsi]
   14001cec4:	addr32 rex
   14001cec6:	rex
   14001cec7:	rex pop rdx
   14001cec9:	add    BYTE PTR [rdi+0x303f3f01],dl
   14001cecf:	push   rcx
   14001ced0:	push   rbx
   14001ced1:	je     0x14001cf45
   14001ced3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ceda:	rex.B
   14001cedb:	rex.B
   14001cedc:	rex pop rax
   14001cede:	pop    rdx
   14001cedf:	add    ch,ah
   14001cee1:	(bad)  
   14001cee2:	(bad)  
   14001cee3:	(bad)  
   14001cee4:	jb     0x14001cf4d
   14001cee6:	rex push rcx
   14001cee8:	push   rbx
   14001cee9:	je     0x14001cf5d
   14001ceeb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001cef2:	rex.X
   14001cef3:	rex.B (bad) 
   14001cef5:	push   r14
   14001cef7:	xor    DWORD PTR [rax+0x41],eax
   14001cefa:	rex.RB
   14001cefb:	rex.X push rsi
   14001cefd:	xor    DWORD PTR [rax+0x48],eax
   14001cf00:	push   rsi
   14001cf01:	push   rcx
   14001cf02:	rex.XB push 0x40407261
   14001cf08:	rex pop rdx
   14001cf0a:	add    BYTE PTR [rax],al
   14001cf0c:	rex.WX add dil,BYTE PTR [rdi]
   14001cf0f:	(bad)  
   14001cf10:	xor    DWORD PTR [rbx+0x6f],eax
   14001cf13:	outs   dx,BYTE PTR ds:[rsi]
   14001cf14:	outs   dx,BYTE PTR ds:[rsi]
   14001cf15:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001cf1a:	outs   dx,BYTE PTR ds:[rsi]
   14001cf1b:	rex push rcx
   14001cf1d:	rex.WRB
   14001cf1e:	gs je  0x14001cf82
   14001cf21:	rex.WRXB (bad) 
   14001cf23:	push   0x65
   14001cf25:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001cf29:	push   rcx
   14001cf2a:	rex.RB
   14001cf2b:	rex.B
   14001cf2c:	rex.B
   14001cf2d:	rex pop rax
   14001cf2f:	pop    rdx
   14001cf30:	add    BYTE PTR [rax],al
   14001cf32:	jg     0x14001cf3c
   14001cf34:	(bad)  
   14001cf35:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001cf38:	outs   dx,BYTE PTR ds:[rsi]
   14001cf39:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001cf3e:	rex.WRXB (bad) 
   14001cf40:	push   0x65
   14001cf42:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001cf46:	push   rbx
   14001cf47:	rex.B (bad) 
   14001cf49:	push   r14
   14001cf4b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001cf4d:	outs   dx,BYTE PTR ds:[rsi]
   14001cf4e:	outs   dx,BYTE PTR ds:[rsi]
   14001cf4f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001cf54:	outs   dx,BYTE PTR ds:[rsi]
   14001cf55:	rex push rcx
   14001cf57:	rex.WRB
   14001cf58:	gs je  0x14001cfbc
   14001cf5b:	rex.WRXB (bad) 
   14001cf5d:	push   0x65
   14001cf5f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001cf63:	push   rax
   14001cf64:	rex.RB
   14001cf65:	rex.X push rsi
   14001cf67:	xor    DWORD PTR [rax+0x50],eax
   14001cf6a:	rex.RB
   14001cf6b:	rex.X
   14001cf6c:	xor    BYTE PTR [rcx],r14b
   14001cf6f:	push   rdi
   14001cf70:	xor    al,0x43
   14001cf72:	outs   dx,DWORD PTR ds:[rsi]
   14001cf73:	outs   dx,BYTE PTR ds:[rsi]
   14001cf74:	outs   dx,BYTE PTR ds:[rsi]
   14001cf75:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001cf7a:	outs   dx,BYTE PTR ds:[rsi]
   14001cf7b:	push   rsp
   14001cf7c:	jns    0x14001cfee
   14001cf7e:	gs rex push rcx
   14001cf81:	je     0x14001cfc3
   14001cf83:	rex
   14001cf84:	rex pop rdx
   14001cf86:	add    BYTE PTR [rax],al
   14001cf88:	jle    0x14001cf8d
   14001cf8a:	(bad)  
   14001cf8b:	(bad)  
   14001cf8c:	xor    al,0x51
   14001cf8e:	push   rbx
   14001cf8f:	je     0x14001d003
   14001cf91:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001cf98:	rex.B
   14001cf99:	rex.B
   14001cf9a:	rex.B
   14001cf9b:	rex.RB
   14001cf9c:	push   r14
   14001cf9e:	xor    BYTE PTR [rax+0x41],al
   14001cfa1:	rex.RB
   14001cfa2:	rex.X push rsi
   14001cfa4:	xor    BYTE PTR [rax+0x40],al
   14001cfa7:	pop    rdx
   14001cfa8:	add    BYTE PTR [rax],al
   14001cfaa:	sbb    BYTE PTR [rcx],bl
   14001cfac:	(bad)  
   14001cfad:	je     0x14001d01e
   14001cfaf:	push   rbx
   14001cfb0:	je     0x14001d024
   14001cfb2:	imul   ebp,DWORD PTR [rsi+0x67],0x61565140
   14001cfb9:	jb     0x14001d024
   14001cfbb:	(bad)  
   14001cfbc:	outs   dx,BYTE PTR ds:[rsi]
   14001cfbd:	je     0x14001cfff
   14001cfbf:	rex push rcx
   14001cfc1:	rex.RB
   14001cfc2:	rex.X
   14001cfc3:	rex.B (bad) 
   14001cfc5:	push   r14
   14001cfc7:	push   rcx
   14001cfc8:	push   rbx
   14001cfc9:	je     0x14001d03d
   14001cfcb:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001cfd2:	add    BYTE PTR [rax],al
   14001cfd4:	jmp    0x14001cfdf
   14001cfd6:	(bad)  
   14001cfd7:	fs (bad) 
   14001cfd9:	je     0x14001d03c
   14001cfdb:	rex push rcx
   14001cfdd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001cfdf:	fs gs ins BYTE PTR es:[rdi],dx
   14001cfe2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001cfe4:	fs gs js 0x14001d028
   14001cfe8:	rex push rcx
   14001cfea:	rex.RB
   14001cfeb:	rex.X
   14001cfec:	rex.B (bad) 
   14001cfee:	push   r14
   14001cff0:	push   rcx
   14001cff1:	push   rsi
   14001cff2:	(bad)  
   14001cff3:	jb     0x14001d05e
   14001cff5:	(bad)  
   14001cff6:	outs   dx,BYTE PTR ds:[rsi]
   14001cff7:	je     0x14001d039
   14001cff9:	rex
   14001cffa:	rex.W
   14001cffb:	rex pop rdx
   14001cffd:	add    BYTE PTR [rip+0x6c633f08],cl        # 0x1ac650f0b
   14001d003:	gs (bad) 
   14001d005:	jb     0x14001d047
   14001d007:	push   rcx
   14001d008:	push   rbx
   14001d009:	je     0x14001d07d
   14001d00b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001d012:	rex.B
   14001d013:	pop    r8
   14001d015:	pop    rax
   14001d016:	pop    rdx
   14001d017:	add    bh,bh
   14001d019:	add    DWORD PTR [rdi],edi
   14001d01b:	(bad)  
   14001d01c:	xor    BYTE PTR [rcx+0x56],dl
   14001d01f:	(bad)  
   14001d020:	jb     0x14001d08b
   14001d022:	(bad)  
   14001d023:	outs   dx,BYTE PTR ds:[rsi]
   14001d024:	je     0x14001d066
   14001d026:	rex push rcx
   14001d028:	rex.RB
   14001d029:	rex.B
   14001d02a:	rex.B
   14001d02b:	rex
   14001d02c:	rex.B
   14001d02d:	rex.RB
   14001d02e:	rex.X push rsi
   14001d030:	push   rcx
   14001d031:	push   rbx
   14001d032:	je     0x14001d0a6
   14001d034:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001d03b:	add    BYTE PTR [rdx+0x4],ah
   14001d03e:	(bad)  
   14001d03f:	(bad)  
   14001d040:	cmp    BYTE PTR [rax+0x59],al
   14001d043:	pop    r15
   14001d045:	rex.WRX
   14001d046:	rex.B
   14001d047:	rex.RB
   14001d048:	rex.X push rsi
   14001d04a:	push   rcx
   14001d04b:	push   rbx
   14001d04c:	je     0x14001d0c0
   14001d04e:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14001d055:	pop    rdx
   14001d056:	add    BYTE PTR [rax],al
   14001d058:	mov    esp,0x61633f07
   14001d05d:	jae    0x14001d0d3
   14001d05f:	rex push rcx
   14001d061:	rex.WRB
   14001d062:	gs je  0x14001d0c6
   14001d065:	rex.WRXB (bad) 
   14001d067:	push   0x65
   14001d069:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d06d:	push   rcx
   14001d06e:	rex.RB
   14001d06f:	rex.X
   14001d070:	push   r8
   14001d072:	rex.RB
   14001d073:	push   r14
   14001d075:	push   rcx
   14001d076:	rex.WRXB (bad) 
   14001d078:	push   0x65
   14001d07a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d07e:	push   rax
   14001d07f:	rex.RB
   14001d080:	push   r14
   14001d082:	xor    al,BYTE PTR [rax+0x40]
   14001d085:	pop    rdx
   14001d086:	add    BYTE PTR [rax],al
   14001d088:	cmc    
   14001d089:	adc    eax,0x7465733f
   14001d08e:	imul   r13,QWORD PTR [r14+0x69],0x406c616d
   14001d096:	push   rcx
   14001d097:	push   rdx
   14001d098:	gs addr32 rex.RB js 0x14001d10d
   14001d09d:	rex
   14001d09e:	rex push rcx
   14001d0a0:	rex.RB
   14001d0a1:	rex.B
   14001d0a2:	pop    r8
   14001d0a4:	pop    rdi
   14001d0a5:	rex.WRX
   14001d0a6:	rex pop rdx
   14001d0a8:	add    BYTE PTR [rax],al
   14001d0aa:	popf   
   14001d0ab:	or     eax,0x766e693f
   14001d0b0:	outs   dx,DWORD PTR ds:[rsi]
   14001d0b1:	imul   esp,DWORD PTR [rbp+0x4d],0x65
   14001d0b5:	je     0x14001d11f
   14001d0b7:	outs   dx,DWORD PTR ds:[rsi]
   14001d0b8:	fs rex push rcx
   14001d0bb:	rex.WRB
   14001d0bc:	gs je  0x14001d120
   14001d0bf:	rex.WRXB (bad) 
   14001d0c1:	push   0x65
   14001d0c3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d0c7:	push   rbx
   14001d0c8:	pop    r15
   14001d0ca:	rex.WRX push rax
   14001d0cc:	rex.RB
   14001d0cd:	push   r14
   14001d0cf:	push   rcx
   14001d0d0:	rex.WRXB (bad) 
   14001d0d2:	push   0x65
   14001d0d4:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d0d8:	push   rax
   14001d0d9:	rex.RB
   14001d0da:	rex.X
   14001d0db:	rex.R push rdi
   14001d0dd:	xor    al,0x43
   14001d0df:	outs   dx,DWORD PTR ds:[rsi]
   14001d0e0:	outs   dx,BYTE PTR ds:[rsi]
   14001d0e1:	outs   dx,BYTE PTR ds:[rsi]
   14001d0e2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001d0e7:	outs   dx,BYTE PTR ds:[rsi]
   14001d0e8:	push   rsp
   14001d0e9:	jns    0x14001d15b
   14001d0eb:	gs rex push rcx
   14001d0ee:	je     0x14001d130
   14001d0f0:	rex push rsi
   14001d0f2:	push   rcx
   14001d0f3:	rex.RXB
   14001d0f4:	outs   dx,BYTE PTR gs:[rsi]
   14001d0f6:	gs jb  0x14001d162
   14001d0f9:	movsxd edx,DWORD PTR [rdx+0x65]
   14001d0fc:	je     0x14001d173
   14001d0fe:	jb     0x14001d16e
   14001d100:	rex.B jb 0x14001d16a
   14001d103:	jne    0x14001d172
   14001d105:	outs   dx,BYTE PTR gs:[rsi]
   14001d107:	je     0x14001d149
   14001d109:	rex push rsi
   14001d10b:	push   rcx
   14001d10c:	rex.RXB
   14001d10d:	outs   dx,BYTE PTR gs:[rsi]
   14001d10f:	gs jb  0x14001d17b
   14001d112:	movsxd eax,DWORD PTR [rcx+0x72]
   14001d115:	addr32 jne 0x14001d185
   14001d118:	outs   dx,BYTE PTR gs:[rsi]
   14001d11a:	je     0x14001d15c
   14001d11c:	xor    al,0x34
   14001d11f:	xor    al,0x34
   14001d121:	xor    al,0x34
   14001d123:	xor    al,0x34
   14001d125:	xor    al,0x40
   14001d127:	pop    rdx
   14001d128:	add    BYTE PTR [rax],al
   14001d12a:	add    al,0x2
   14001d12c:	(bad)  
   14001d12d:	(bad)  
   14001d12e:	xor    BYTE PTR [rcx+0x56],dl
   14001d131:	(bad)  
   14001d132:	jb     0x14001d19d
   14001d134:	(bad)  
   14001d135:	outs   dx,BYTE PTR ds:[rsi]
   14001d136:	je     0x14001d178
   14001d138:	rex push rcx
   14001d13a:	rex.RB
   14001d13b:	rex.B
   14001d13c:	rex.B
   14001d13d:	rex
   14001d13e:	rex.W
   14001d13f:	rex pop rdx
   14001d141:	add    BYTE PTR [rax+0x65733f15],dh
   14001d147:	je     0x14001d18f
   14001d149:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x73614372
   14001d151:	gs push rbx
   14001d153:	outs   dx,BYTE PTR gs:[rsi]
   14001d155:	jae    0x14001d1c0
   14001d157:	je     0x14001d1c2
   14001d159:	jbe    0x14001d1c4
   14001d15b:	je     0x14001d1d6
   14001d15d:	rex push rcx
   14001d15f:	push   rbx
   14001d160:	outs   dx,DWORD PTR ds:[rsi]
   14001d161:	jb     0x14001d1d7
   14001d163:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001d16c:	js     0x14001d1e7
   14001d16e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d170:	fs gs ins BYTE PTR es:[rdi],dx
   14001d173:	rex
   14001d174:	rex push rcx
   14001d176:	rex.RB
   14001d177:	rex.B
   14001d178:	pop    r8
   14001d17a:	push   rdi
   14001d17b:	xor    al,0x43
   14001d17d:	(bad)  
   14001d17e:	jae    0x14001d1e5
   14001d180:	push   rbx
   14001d181:	outs   dx,BYTE PTR gs:[rsi]
   14001d183:	jae    0x14001d1ee
   14001d185:	je     0x14001d1f0
   14001d187:	jbe    0x14001d1f2
   14001d189:	je     0x14001d204
   14001d18b:	rex push rcx
   14001d18d:	je     0x14001d1cf
   14001d18f:	rex
   14001d190:	rex pop rdx
   14001d192:	add    BYTE PTR [rax],al
   14001d194:	cdq    
   14001d195:	add    DWORD PTR [rdi],edi
   14001d197:	(bad)  
   14001d198:	xor    BYTE PTR [rcx+0x53],dl
   14001d19b:	je     0x14001d20f
   14001d19d:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d1a4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d1a6:	fs gs ins BYTE PTR es:[rdi],dx
   14001d1a9:	rex
   14001d1aa:	rex push rcx
   14001d1ac:	rex.RB
   14001d1ad:	rex.B
   14001d1ae:	rex.B
   14001d1af:	rex push rax
   14001d1b1:	rex.RB
   14001d1b2:	push   r14
   14001d1b4:	push   rcx
   14001d1b5:	rex.WRXB (bad) 
   14001d1b7:	push   0x65
   14001d1b9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d1bd:	rex pop rdx
   14001d1bf:	add    BYTE PTR [rdi+0x1],dl
   14001d1c2:	(bad)  
   14001d1c3:	(bad)  
   14001d1c4:	xor    BYTE PTR [rcx+0x52],dl
   14001d1c7:	gs addr32 rex.RB js 0x14001d23c
   14001d1cc:	rex
   14001d1cd:	rex push rcx
   14001d1cf:	rex.RB
   14001d1d0:	rex.B
   14001d1d1:	rex.B
   14001d1d2:	rex
   14001d1d3:	rex.B
   14001d1d4:	rex.RB
   14001d1d5:	rex.X push rsi
   14001d1d7:	push   rcx
   14001d1d8:	push   rbx
   14001d1d9:	je     0x14001d24d
   14001d1db:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   14001d1e2:	rex.XB (bad) 
   14001d1e4:	jae    0x14001d24b
   14001d1e6:	push   rbx
   14001d1e7:	outs   dx,BYTE PTR gs:[rsi]
   14001d1e9:	jae    0x14001d254
   14001d1eb:	je     0x14001d256
   14001d1ed:	jbe    0x14001d258
   14001d1ef:	je     0x14001d26a
   14001d1f1:	rex push rcx
   14001d1f3:	je     0x14001d235
   14001d1f5:	rex push rdi
   14001d1f7:	xor    al,0x50
   14001d1f9:	(bad)  
   14001d1fa:	je     0x14001d270
   14001d1fc:	gs jb  0x14001d26d
   14001d1ff:	push   rbx
   14001d200:	jns    0x14001d270
   14001d202:	je     0x14001d265
   14001d204:	js     0x14001d246
   14001d206:	xor    BYTE PTR [rax+0x40],al
   14001d209:	pop    rdx
   14001d20a:	add    BYTE PTR [rax],al
   14001d20c:	sti    
   14001d20d:	(bad)  
   14001d20f:	ins    DWORD PTR es:[rdi],dx
   14001d210:	gs je  0x14001d274
   14001d213:	rex.WRXB (bad) 
   14001d215:	push   0x65
   14001d217:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001d21b:	push   rbx
   14001d21c:	je     0x14001d290
   14001d21e:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d225:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d227:	fs gs ins BYTE PTR es:[rdi],dx
   14001d22a:	rex
   14001d22b:	rex push rbp
   14001d22d:	rex.RB
   14001d22e:	rex.X
   14001d22f:	push   r8
   14001d231:	rex.RB
   14001d232:	rex.X push rbp
   14001d234:	push   rcx
   14001d235:	rex.WRB
   14001d236:	gs je  0x14001d29a
   14001d239:	rex.WRXB (bad) 
   14001d23b:	push   0x65
   14001d23d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d241:	pop    rax
   14001d242:	pop    rdx
   14001d243:	add    dh,al
   14001d245:	adc    bh,BYTE PTR [rdi]
   14001d247:	jno    0x14001d2bd
   14001d249:	pop    rdi
   14001d24a:	ins    DWORD PTR es:[rdi],dx
   14001d24b:	gs je  0x14001d2af
   14001d24e:	movsxd esp,DWORD PTR [rcx+0x73]
   14001d251:	je     0x14001d293
   14001d253:	push   rcx
   14001d254:	push   rbx
   14001d255:	je     0x14001d2c9
   14001d257:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d25e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d260:	fs gs ins BYTE PTR es:[rdi],dx
   14001d263:	rex
   14001d264:	rex push rbp
   14001d266:	rex.RB
   14001d267:	rex.B
   14001d268:	push   r8
   14001d26a:	rex.RB
   14001d26b:	pop    r8
   14001d26d:	push   rax
   14001d26e:	rex.RB
   14001d26f:	rex.X
   14001d270:	rex.R
   14001d271:	rex pop rdx
   14001d273:	add    BYTE PTR [rdx+0x74713f12],cl
   14001d279:	pop    rdi
   14001d27a:	ins    DWORD PTR es:[rdi],dx
   14001d27b:	gs je  0x14001d2df
   14001d27e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001d281:	ins    BYTE PTR es:[rdi],dx
   14001d282:	rex push rcx
   14001d284:	push   rbx
   14001d285:	je     0x14001d2f9
   14001d287:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d28e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d290:	fs gs ins BYTE PTR es:[rdi],dx
   14001d293:	rex
   14001d294:	rex push rbp
   14001d296:	rex.RB
   14001d297:	rex.B
   14001d298:	rex.B
   14001d299:	rex.W push rdi
   14001d29b:	xor    al,0x43
   14001d29d:	(bad)  
   14001d29e:	ins    BYTE PTR es:[rdi],dx
   14001d29f:	ins    BYTE PTR es:[rdi],dx
   14001d2a0:	rex push rcx
   14001d2a2:	rex.WRB
   14001d2a3:	gs je  0x14001d307
   14001d2a6:	rex.WRXB (bad) 
   14001d2a8:	push   0x65
   14001d2aa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d2ae:	rex.W push rax
   14001d2b0:	rex.RB
   14001d2b1:	push   r8
   14001d2b3:	rex.RB
   14001d2b4:	pop    r8
   14001d2b6:	rex pop rdx
   14001d2b8:	add    BYTE PTR [rax],al
   14001d2ba:	out    dx,eax
   14001d2bb:	or     al,0x3f
   14001d2bd:	imul   ebp,DWORD PTR [rsi+0x64],0x51407865
   14001d2c4:	(bad)
   14001d2ca:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14001d2ce:	jae    0x14001d344
   14001d2d0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d2d2:	fs gs ins BYTE PTR es:[rdi],dx
   14001d2d5:	rex
   14001d2d6:	rex push rbp
   14001d2d8:	rex.RB
   14001d2d9:	rex.X
   14001d2da:	rex.B (bad) 
   14001d2dc:	push   r14
   14001d2de:	push   rcx
   14001d2df:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d2e1:	fs gs ins BYTE PTR es:[rdi],dx
   14001d2e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d2e6:	fs gs js 0x14001d32a
   14001d2ea:	rex
   14001d2eb:	rex.W
   14001d2ec:	rex.W
   14001d2ed:	rex.B
   14001d2ee:	rex.RB
   14001d2ef:	rex.X push rsi
   14001d2f1:	xor    al,BYTE PTR [rax+0x40]
   14001d2f4:	pop    rdx
   14001d2f5:	add    BYTE PTR [rdx],cl
   14001d2f7:	adc    DWORD PTR [rdi],edi
   14001d2f9:	jo     0x14001d35c
   14001d2fb:	jb     0x14001d362
   14001d2fd:	outs   dx,BYTE PTR ds:[rsi]
   14001d2fe:	je     0x14001d340
   14001d300:	push   rcx
   14001d301:	(bad)
   14001d307:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14001d30b:	jae    0x14001d381
   14001d30d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d30f:	fs gs ins BYTE PTR es:[rdi],dx
   14001d312:	rex
   14001d313:	rex
   14001d314:	rex.RB
   14001d315:	rex.RB
   14001d316:	rex.X
   14001d317:	rex.B (bad) 
   14001d319:	push   r14
   14001d31b:	push   rcx
   14001d31c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d31e:	fs gs ins BYTE PTR es:[rdi],dx
   14001d321:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d323:	fs gs js 0x14001d367
   14001d327:	rex
   14001d328:	rex.B
   14001d329:	rex.RB
   14001d32a:	rex.X push rsi
   14001d32c:	xor    al,BYTE PTR [rax+0x40]
   14001d32f:	pop    rdx
   14001d330:	add    BYTE PTR [rax],al
   14001d332:	loope  0x14001d34a
   14001d334:	(bad)  
   14001d335:	jae    0x14001d3a0
   14001d337:	(bad)  
   14001d338:	ins    BYTE PTR es:[rdi],dx
   14001d339:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   14001d340:	jb     0x14001d3ab
   14001d342:	outs   dx,BYTE PTR ds:[rsi]
   14001d343:	imul   r14,QWORD PTR [ebx+0x74],0x65646f4d
   14001d34c:	ins    BYTE PTR es:[rdi],dx
   14001d34d:	rex
   14001d34e:	rex push rbp
   14001d350:	rex.RB
   14001d351:	rex.X
   14001d352:	rex.B (bad) 
   14001d354:	push   r14
   14001d356:	push   rcx
   14001d357:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d359:	fs gs ins BYTE PTR es:[rdi],dx
   14001d35c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d35e:	fs gs js 0x14001d3a2
   14001d362:	rex
   14001d363:	rex.W
   14001d364:	rex.W
   14001d365:	rex.B
   14001d366:	rex.RB
   14001d367:	rex.X push rsi
   14001d369:	xor    al,BYTE PTR [rax+0x40]
   14001d36c:	pop    rdx
   14001d36d:	add    BYTE PTR [rbx+0x6f723f14],bh
   14001d373:	ja     0x14001d3b8
   14001d375:	outs   dx,DWORD PTR ds:[rsi]
   14001d376:	jne    0x14001d3e6
   14001d378:	je     0x14001d3ba
   14001d37a:	push   rcx
   14001d37b:	push   rbx
   14001d37c:	je     0x14001d3f0
   14001d37e:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d385:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d387:	fs gs ins BYTE PTR es:[rdi],dx
   14001d38a:	rex
   14001d38b:	rex push rbp
   14001d38d:	rex.RB
   14001d38e:	rex.X
   14001d38f:	rex.B
   14001d390:	rex.W
   14001d391:	rex.B
   14001d392:	rex.RB
   14001d393:	rex.X push rsi
   14001d395:	push   rcx
   14001d396:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d398:	fs gs ins BYTE PTR es:[rdi],dx
   14001d39b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d39d:	fs gs js 0x14001d3e1
   14001d3a1:	rex
   14001d3a2:	rex pop rdx
   14001d3a4:	add    BYTE PTR [rax],al
   14001d3a6:	rex.X or BYTE PTR [rdi],dil
   14001d3a9:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14001d3ac:	jne    0x14001d41b
   14001d3ae:	outs   dx,BYTE PTR ds:[rsi]
   14001d3af:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001d3b1:	jne    0x14001d421
   14001d3b3:	je     0x14001d3f5
   14001d3b5:	push   rcx
   14001d3b6:	(bad)
   14001d3bc:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14001d3c0:	jae    0x14001d436
   14001d3c2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d3c4:	fs gs ins BYTE PTR es:[rdi],dx
   14001d3c7:	rex
   14001d3c8:	rex
   14001d3c9:	rex.RB
   14001d3ca:	rex.RB
   14001d3cb:	rex.X
   14001d3cc:	rex.B
   14001d3cd:	rex.W
   14001d3ce:	rex.B
   14001d3cf:	rex.RB
   14001d3d0:	rex.X push rsi
   14001d3d2:	push   rcx
   14001d3d3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d3d5:	fs gs ins BYTE PTR es:[rdi],dx
   14001d3d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d3da:	fs gs js 0x14001d41e
   14001d3de:	rex
   14001d3df:	rex pop rdx
   14001d3e1:	add    BYTE PTR [rbp+0x61683f0c],bl
   14001d3e7:	jae    0x14001d42c
   14001d3e9:	push   0x72646c69
   14001d3ee:	outs   dx,BYTE PTR gs:[rsi]
   14001d3f0:	rex push rcx
   14001d3f2:	(bad)
   14001d3f8:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14001d3fc:	jae    0x14001d472
   14001d3fe:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d400:	fs gs ins BYTE PTR es:[rdi],dx
   14001d403:	rex
   14001d404:	rex
   14001d405:	rex.RB
   14001d406:	rex.RB
   14001d407:	rex.X
   14001d408:	pop    r15
   14001d40a:	rex.WRX
   14001d40b:	rex.B
   14001d40c:	rex.RB
   14001d40d:	rex.X push rsi
   14001d40f:	push   rcx
   14001d410:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d412:	fs gs ins BYTE PTR es:[rdi],dx
   14001d415:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d417:	fs gs js 0x14001d45b
   14001d41b:	rex
   14001d41c:	rex pop rdx
   14001d41e:	add    BYTE PTR [rax],al
   14001d420:	repz or DWORD PTR [rdi],edi
   14001d423:	fs (bad) 
   14001d425:	je     0x14001d488
   14001d427:	rex push rcx
   14001d429:	push   rbx
   14001d42a:	je     0x14001d49e
   14001d42c:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d433:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d435:	fs gs ins BYTE PTR es:[rdi],dx
   14001d438:	rex
   14001d439:	rex push rbp
   14001d43b:	rex.RB
   14001d43c:	rex.X
   14001d43d:	rex.B (bad) 
   14001d43f:	push   r14
   14001d441:	push   rcx
   14001d442:	push   rsi
   14001d443:	(bad)  
   14001d444:	jb     0x14001d4af
   14001d446:	(bad)  
   14001d447:	outs   dx,BYTE PTR ds:[rsi]
   14001d448:	je     0x14001d48a
   14001d44a:	rex
   14001d44b:	rex.B
   14001d44c:	rex.RB
   14001d44d:	rex.X push rsi
   14001d44f:	push   rcx
   14001d450:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d452:	fs gs ins BYTE PTR es:[rdi],dx
   14001d455:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d457:	fs gs js 0x14001d49b
   14001d45b:	rex
   14001d45c:	rex.W
   14001d45d:	rex pop rdx
   14001d45f:	add    BYTE PTR [rbp+rdx*1+0x3f],ah
   14001d463:	jae    0x14001d4ca
   14001d465:	je     0x14001d4ab
   14001d467:	(bad)  
   14001d468:	je     0x14001d4cb
   14001d46a:	rex push rcx
   14001d46c:	push   rbx
   14001d46d:	je     0x14001d4e1
   14001d46f:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d476:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d478:	fs gs ins BYTE PTR es:[rdi],dx
   14001d47b:	rex
   14001d47c:	rex push rbp
   14001d47e:	rex.RB
   14001d47f:	rex.B
   14001d480:	pop    r15
   14001d482:	rex.WRX
   14001d483:	rex.B
   14001d484:	rex.RB
   14001d485:	rex.X push rsi
   14001d487:	push   rcx
   14001d488:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d48a:	fs gs ins BYTE PTR es:[rdi],dx
   14001d48d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d48f:	fs gs js 0x14001d4d3
   14001d493:	rex
   14001d494:	rex.B
   14001d495:	rex.RB
   14001d496:	rex.X push rsi
   14001d498:	push   rcx
   14001d499:	push   rsi
   14001d49a:	(bad)  
   14001d49b:	jb     0x14001d506
   14001d49d:	(bad)  
   14001d49e:	outs   dx,BYTE PTR ds:[rsi]
   14001d49f:	je     0x14001d4e1
   14001d4a1:	rex
   14001d4a2:	rex.W
   14001d4a3:	rex pop rdx
   14001d4a5:	add    dh,cl
   14001d4a7:	or     al,0x3f
   14001d4a9:	push   0x65646165
   14001d4ae:	jb     0x14001d4f4
   14001d4b0:	(bad)  
   14001d4b1:	je     0x14001d514
   14001d4b3:	rex push rcx
   14001d4b5:	(bad)
   14001d4bb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001d4bf:	gs ins DWORD PTR es:[rdi],dx
   14001d4c1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d4c3:	fs gs ins BYTE PTR es:[rdi],dx
   14001d4c6:	rex
   14001d4c7:	rex push rbp
   14001d4c9:	rex.RB
   14001d4ca:	rex.X
   14001d4cb:	rex.B (bad) 
   14001d4cd:	push   r14
   14001d4cf:	push   rcx
   14001d4d0:	push   rsi
   14001d4d1:	(bad)  
   14001d4d2:	jb     0x14001d53d
   14001d4d4:	(bad)  
   14001d4d5:	outs   dx,BYTE PTR ds:[rsi]
   14001d4d6:	je     0x14001d518
   14001d4d8:	rex
   14001d4d9:	rex.W push rdi
   14001d4db:	xor    al,0x4f
   14001d4dd:	jb     0x14001d548
   14001d4df:	outs   dx,BYTE PTR gs:[rsi]
   14001d4e1:	je     0x14001d544
   14001d4e3:	je     0x14001d54e
   14001d4e5:	outs   dx,DWORD PTR ds:[rsi]
   14001d4e6:	outs   dx,BYTE PTR ds:[rsi]
   14001d4e7:	rex push rcx
   14001d4e9:	je     0x14001d52b
   14001d4eb:	rex
   14001d4ec:	rex.W
   14001d4ed:	rex pop rdx
   14001d4ef:	add    BYTE PTR [rbp+0x72643f0a],dl
   14001d4f5:	outs   dx,DWORD PTR ds:[rsi]
   14001d4f6:	jo     0x14001d545
   14001d4f8:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001d4ff:	rex push rcx
   14001d501:	(bad)
   14001d507:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14001d50b:	jae    0x14001d581
   14001d50d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d50f:	fs gs ins BYTE PTR es:[rdi],dx
   14001d512:	rex
   14001d513:	rex push rbp
   14001d515:	rex.RB
   14001d516:	rex.B
   14001d517:	pop    r15
   14001d519:	rex.WRX push rax
   14001d51b:	rex.RB
   14001d51c:	rex.X push rsi
   14001d51e:	push   rcx
   14001d51f:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001d527:	rex
   14001d528:	rex push rdi
   14001d52a:	xor    al,0x44
   14001d52c:	jb     0x14001d59d
   14001d52e:	jo     0x14001d571
   14001d530:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001d534:	outs   dx,BYTE PTR ds:[rsi]
   14001d535:	rex push rcx
   14001d537:	je     0x14001d579
   14001d539:	rex
   14001d53a:	rex.W
   14001d53b:	rex.W
   14001d53c:	rex.B
   14001d53d:	rex.RB
   14001d53e:	rex.X push rsi
   14001d540:	push   rcx
   14001d541:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d543:	fs gs ins BYTE PTR es:[rdi],dx
   14001d546:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d548:	fs gs js 0x14001d58c
   14001d54c:	rex
   14001d54d:	rex pop rdx
   14001d54f:	add    dl,ch
   14001d551:	(bad)  
   14001d552:	(bad)  
   14001d553:	jae    0x14001d5ca
   14001d555:	jo     0x14001d5c7
   14001d557:	outs   dx,DWORD PTR ds:[rsi]
   14001d558:	jb     0x14001d5ce
   14001d55a:	gs fs rex.R jb 0x14001d5ce
   14001d55f:	jo     0x14001d5a2
   14001d561:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001d565:	outs   dx,BYTE PTR ds:[rsi]
   14001d566:	jae    0x14001d5a8
   14001d568:	push   rcx
   14001d569:	push   rbx
   14001d56a:	je     0x14001d5de
   14001d56c:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d573:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d575:	fs gs ins BYTE PTR es:[rdi],dx
   14001d578:	rex
   14001d579:	rex push rbp
   14001d57b:	rex.RB
   14001d57c:	rex.X
   14001d57d:	rex.B (bad) 
   14001d57f:	push   r14
   14001d581:	(bad)  
   14001d582:	and    al,0x51
   14001d584:	rex.RX ins BYTE PTR es:[rdi],dx
   14001d586:	(bad)  
   14001d587:	addr32 jae 0x14001d5ca
   14001d58a:	push   rdi
   14001d58b:	xor    al,0x44
   14001d58d:	jb     0x14001d5fe
   14001d58f:	jo     0x14001d5d2
   14001d591:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001d595:	outs   dx,BYTE PTR ds:[rsi]
   14001d596:	rex push rcx
   14001d598:	je     0x14001d5da
   14001d59a:	rex
   14001d59b:	rex
   14001d59c:	rex pop rax
   14001d59e:	pop    rdx
   14001d59f:	add    BYTE PTR [rcx+0xd],ch
   14001d5a2:	(bad)  
   14001d5a3:	imul   ebp,DWORD PTR [rsi+0x73],0x52747265
   14001d5aa:	outs   dx,DWORD PTR ds:[rsi]
   14001d5ab:	ja     0x14001d620
   14001d5ad:	rex push rcx
   14001d5af:	push   rbx
   14001d5b0:	je     0x14001d624
   14001d5b2:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d5b9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d5bb:	fs gs ins BYTE PTR es:[rdi],dx
   14001d5be:	rex
   14001d5bf:	rex push rbp
   14001d5c1:	rex.RB
   14001d5c2:	rex.B
   14001d5c3:	pop    r15
   14001d5c5:	rex.WRX
   14001d5c6:	rex.W
   14001d5c7:	rex.W
   14001d5c8:	rex.B
   14001d5c9:	rex.RB
   14001d5ca:	rex.X push rsi
   14001d5cc:	push   rcx
   14001d5cd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d5cf:	fs gs ins BYTE PTR es:[rdi],dx
   14001d5d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d5d4:	fs gs js 0x14001d618
   14001d5d8:	rex
   14001d5d9:	rex pop rdx
   14001d5db:	add    BYTE PTR [rcx],dl
   14001d5dd:	adc    al,0x3f
   14001d5df:	jb     0x14001d646
   14001d5e1:	ins    DWORD PTR es:[rdi],dx
   14001d5e2:	outs   dx,DWORD PTR ds:[rsi]
   14001d5e3:	jbe    0x14001d64a
   14001d5e5:	push   rdx
   14001d5e6:	outs   dx,DWORD PTR ds:[rsi]
   14001d5e7:	ja     0x14001d65c
   14001d5e9:	rex push rcx
   14001d5eb:	push   rbx
   14001d5ec:	je     0x14001d660
   14001d5ee:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d5f5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d5f7:	fs gs ins BYTE PTR es:[rdi],dx
   14001d5fa:	rex
   14001d5fb:	rex push rbp
   14001d5fd:	rex.RB
   14001d5fe:	rex.B
   14001d5ff:	pop    r15
   14001d601:	rex.WRX
   14001d602:	rex.W
   14001d603:	rex.W
   14001d604:	rex.B
   14001d605:	rex.RB
   14001d606:	rex.X push rsi
   14001d608:	push   rcx
   14001d609:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d60b:	fs gs ins BYTE PTR es:[rdi],dx
   14001d60e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d610:	fs gs js 0x14001d654
   14001d614:	rex
   14001d615:	rex pop rdx
   14001d617:	add    bh,dh
   14001d619:	or     edi,DWORD PTR [rdi]
   14001d61b:	data16 ins BYTE PTR es:[rdi],dx
   14001d61d:	(bad)  
   14001d61e:	addr32 jae 0x14001d661
   14001d621:	push   rcx
   14001d622:	push   rbx
   14001d623:	je     0x14001d697
   14001d625:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d62c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d62e:	fs gs ins BYTE PTR es:[rdi],dx
   14001d631:	rex
   14001d632:	rex push rbp
   14001d634:	rex.RB
   14001d635:	rex.X
   14001d636:	rex.B (bad) 
   14001d638:	push   r14
   14001d63a:	(bad)  
   14001d63b:	and    al,0x51
   14001d63d:	rex.RX ins BYTE PTR es:[rdi],dx
   14001d63f:	(bad)  
   14001d640:	addr32 jae 0x14001d683
   14001d643:	push   rdi
   14001d644:	xor    al,0x49
   14001d646:	je     0x14001d6ad
   14001d648:	ins    DWORD PTR es:[rdi],dx
   14001d649:	rex.RX ins BYTE PTR es:[rdi],dx
   14001d64b:	(bad)  
   14001d64c:	addr32 rex push rcx
   14001d64f:	je     0x14001d691
   14001d651:	rex
   14001d652:	rex
   14001d653:	rex
   14001d654:	rex.B
   14001d655:	rex.RB
   14001d656:	rex.X push rsi
   14001d658:	push   rcx
   14001d659:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d65b:	fs gs ins BYTE PTR es:[rdi],dx
   14001d65e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d660:	fs gs js 0x14001d6a4
   14001d664:	rex
   14001d665:	rex pop rdx
   14001d667:	add    BYTE PTR [rbx],bl
   14001d669:	(bad)  
   14001d66a:	(bad)  
   14001d66b:	jae    0x14001d6dc
   14001d66d:	jb     0x14001d6e3
   14001d66f:	rex push rcx
   14001d671:	push   rbx
   14001d672:	je     0x14001d6e6
   14001d674:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d67b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d67d:	fs gs ins BYTE PTR es:[rdi],dx
   14001d680:	rex
   14001d681:	rex push rbp
   14001d683:	rex.RB
   14001d684:	rex.B
   14001d685:	pop    r8
   14001d687:	rex.W push rdi
   14001d689:	xor    al,0x53
   14001d68b:	outs   dx,DWORD PTR ds:[rsi]
   14001d68c:	jb     0x14001d702
   14001d68e:	rex.WRXB jb 0x14001d6f5
   14001d691:	gs jb  0x14001d6d4
   14001d694:	push   rcx
   14001d695:	je     0x14001d6d7
   14001d697:	rex
   14001d698:	rex pop rdx
   14001d69a:	add    BYTE PTR [rax],al
   14001d69c:	rol    DWORD PTR [rdx],1
   14001d69e:	(bad)  
   14001d69f:	(bad)  
   14001d6a0:	xor    DWORD PTR [rcx+0x53],edx
   14001d6a3:	je     0x14001d717
   14001d6a5:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d6ac:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001d6ae:	fs gs ins BYTE PTR es:[rdi],dx
   14001d6b1:	rex
   14001d6b2:	rex push rbp
   14001d6b4:	rex.RB
   14001d6b5:	rex.B
   14001d6b6:	rex.B
   14001d6b7:	rex pop rax
   14001d6b9:	pop    rdx
   14001d6ba:	add    BYTE PTR [rax],al
   14001d6bc:	mov    esp,0x313f3f02
   14001d6c1:	push   rcx
   14001d6c2:	push   rdx
   14001d6c3:	gs addr32 rex.RB js 0x14001d738
   14001d6c8:	rex
   14001d6c9:	rex push rcx
   14001d6cb:	rex.RB
   14001d6cc:	rex.B
   14001d6cd:	rex.B
   14001d6ce:	rex pop rax
   14001d6d0:	pop    rdx
   14001d6d1:	add    BYTE PTR [rdx],ah
   14001d6d3:	adc    DWORD PTR [rdi],edi
   14001d6d5:	jo     0x14001d738
   14001d6d7:	je     0x14001d741
   14001d6d9:	rex push rcx
   14001d6db:	push   rbp
   14001d6dc:	jb     0x14001d74a
   14001d6de:	rex
   14001d6df:	rex push rcx
   14001d6e1:	rex.RB
   14001d6e2:	rex.X
   14001d6e3:	rex.B (bad) 
   14001d6e5:	push   r14
   14001d6e7:	push   rcx
   14001d6e8:	push   rbx
   14001d6e9:	je     0x14001d75d
   14001d6eb:	imul   ebp,DWORD PTR [rsi+0x67],0x3f564040
   14001d6f2:	and    al,0x51
   14001d6f4:	rex.RX ins BYTE PTR es:[rdi],dx
   14001d6f6:	(bad)  
   14001d6f7:	addr32 jae 0x14001d73a
   14001d6fa:	push   rdi
   14001d6fb:	xor    al,0x43
   14001d6fd:	outs   dx,DWORD PTR ds:[rsi]
   14001d6fe:	ins    DWORD PTR es:[rdi],dx
   14001d6ff:	jo     0x14001d770
   14001d701:	outs   dx,BYTE PTR ds:[rsi]
   14001d702:	outs   dx,BYTE PTR gs:[rsi]
   14001d704:	je     0x14001d74c
   14001d706:	outs   dx,DWORD PTR ds:[rsi]
   14001d707:	jb     0x14001d776
   14001d709:	(bad)  
   14001d70a:	je     0x14001d780
   14001d70c:	imul   ebp,DWORD PTR [rsi+0x67],0x6974704f
   14001d713:	outs   dx,DWORD PTR ds:[rsi]
   14001d714:	outs   dx,BYTE PTR ds:[rsi]
   14001d715:	rex push rcx
   14001d717:	push   rbp
   14001d718:	jb     0x14001d786
   14001d71a:	rex
   14001d71b:	rex
   14001d71c:	rex
   14001d71d:	rex
   14001d71e:	rex pop rdx
   14001d720:	add    BYTE PTR [rax],al
   14001d722:	jmp    0x171411629
   14001d727:	push   rcx
   14001d728:	push   rbp
   14001d729:	jb     0x14001d797
   14001d72b:	rex
   14001d72c:	rex push rcx
   14001d72e:	rex.RB
   14001d72f:	rex.B
   14001d730:	rex.B
   14001d731:	rex pop rax
   14001d733:	pop    rdx
   14001d734:	add    BYTE PTR [rax],al
   14001d736:	fld    DWORD PTR [rcx]
   14001d738:	(bad)  
   14001d739:	(bad)  
   14001d73a:	xor    BYTE PTR [rcx+0x55],dl
   14001d73d:	jb     0x14001d7ab
   14001d73f:	rex
   14001d740:	rex push rcx
   14001d742:	rex.RB
   14001d743:	rex.B
   14001d744:	rex.B
   14001d745:	rex pop rax
   14001d747:	pop    rdx
   14001d748:	add    BYTE PTR [rax],al
   14001d74a:	(bad)  
   14001d74b:	add    al,0x3f
   14001d74d:	(bad)  
   14001d74e:	cmp    BYTE PTR [rcx+0x53],dl
   14001d751:	je     0x14001d7c5
   14001d753:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001d75a:	rex.X
   14001d75b:	pop    r15
   14001d75d:	rex.WRX push rsi
   14001d75f:	push   rcx
   14001d760:	rex.WR (bad) 
   14001d762:	je     0x14001d7cd
   14001d764:	outs   dx,BYTE PTR ds:[rsi]
   14001d765:	xor    DWORD PTR [rbx+0x74],edx
   14001d768:	jb     0x14001d7d3
   14001d76a:	outs   dx,BYTE PTR ds:[rsi]
   14001d76b:	addr32 rex
   14001d76d:	rex
   14001d76e:	rex pop rdx
   14001d770:	add    BYTE PTR [rax],al
   14001d772:	fist   DWORD PTR [rdi+rdi*1]
   14001d775:	jae    0x14001d7da
   14001d777:	push   0x40656d65
   14001d77c:	push   rcx
   14001d77d:	push   rbp
   14001d77e:	jb     0x14001d7ec
   14001d780:	rex
   14001d781:	rex push rcx
   14001d783:	rex.RB
   14001d784:	rex.X
   14001d785:	rex.B (bad) 
   14001d787:	push   r14
   14001d789:	push   rcx
   14001d78a:	push   rbx
   14001d78b:	je     0x14001d7ff
   14001d78d:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001d794:	add    BYTE PTR [rax],al
   14001d796:	rcl    DWORD PTR [rsi],1
   14001d798:	(bad)  
   14001d799:	jae    0x14001d803
   14001d79b:	(bad)  
   14001d79c:	jb     0x14001d803
   14001d79e:	fs pop rdi
   14001d7a0:	outs   dx,BYTE PTR ds:[rsi]
   14001d7a1:	jne    0x14001d80f
   14001d7a3:	ins    BYTE PTR es:[rdi],dx
   14001d7a4:	rex push rcx
   14001d7a6:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001d7ae:	rex
   14001d7af:	xor    dl,BYTE PTR [rbp+0x44]
   14001d7b3:	(bad)  
   14001d7b4:	je     0x14001d817
   14001d7b6:	rex xor DWORD PTR [rax+0x42],eax
   14001d7ba:	add    BYTE PTR [rax],al
   14001d7bc:	rex.WX add BYTE PTR [rdi],dil
   14001d7bf:	(bad)  
   14001d7c0:	xor    BYTE PTR [rcx+0x42],dl
   14001d7c3:	jns    0x14001d839
   14001d7c5:	gs rex.B jb 0x14001d83b
   14001d7c9:	(bad)  
   14001d7ca:	jns    0x14001d80c
   14001d7cc:	rex push rcx
   14001d7ce:	rex.RB
   14001d7cf:	rex.B
   14001d7d0:	rex.B
   14001d7d1:	rex pop rax
   14001d7d3:	pop    rdx
   14001d7d4:	add    BYTE PTR [rax],al
   14001d7d6:	add    BYTE PTR [r15],r15b
   14001d7d9:	(bad)  
   14001d7da:	xor    BYTE PTR [rcx+0x42],dl
   14001d7dd:	jns    0x14001d853
   14001d7df:	gs rex.B jb 0x14001d855
   14001d7e3:	(bad)  
   14001d7e4:	jns    0x14001d826
   14001d7e6:	rex push rcx
   14001d7e8:	rex.RB
   14001d7e9:	rex.B
   14001d7ea:	rex.B
   14001d7eb:	rex
   14001d7ec:	rex.B
   14001d7ed:	rex.RB
   14001d7ee:	rex.X push rsi
   14001d7f0:	xor    BYTE PTR [rax+0x40],al
   14001d7f3:	pop    rdx
   14001d7f4:	add    BYTE PTR [rax],al
   14001d7f6:	mov    DWORD PTR [rdx],ecx
   14001d7f8:	(bad)  
   14001d7f9:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   14001d801:	push   rcx
   14001d802:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001d80a:	rex
   14001d80b:	rex push rbx
   14001d80d:	pop    r8
   14001d80f:	push   rax
   14001d810:	rex.RB
   14001d811:	push   r13
   14001d813:	rex.R (bad) 
   14001d815:	je     0x14001d878
   14001d817:	rex xor DWORD PTR [rax+0x40],eax
   14001d81b:	pop    rdx
   14001d81c:	add    BYTE PTR [rax],al
   14001d81e:	xchg   esp,eax
   14001d81f:	adc    edi,DWORD PTR [rdi]
   14001d821:	jb     0x14001d888
   14001d823:	imul   esi,DWORD PTR [ebx+0x74],0x6f4e7265
   14001d82b:	jb     0x14001d89a
   14001d82d:	(bad)  
   14001d82e:	ins    BYTE PTR es:[rdi],dx
   14001d82f:	imul   edi,DWORD PTR [rdx+0x65],0x70795464
   14001d836:	gs rex push rcx
   14001d839:	rex.WRB
   14001d83a:	gs je  0x14001d89e
   14001d83d:	push   rsp
   14001d83e:	jns    0x14001d8b0
   14001d840:	gs rex
   14001d842:	rex push rbx
   14001d844:	rex.B
   14001d845:	rex.W
   14001d846:	rex.B
   14001d847:	rex.RB
   14001d848:	rex.X push rsi
   14001d84a:	push   rcx
   14001d84b:	rex.X jns 0x14001d8c2
   14001d84e:	gs rex.B jb 0x14001d8c4
   14001d852:	(bad)  
   14001d853:	jns    0x14001d895
   14001d855:	rex push rax
   14001d857:	ss pop r8
   14001d85a:	push   rax
   14001d85b:	rex.RB
   14001d85c:	pop    r8
   14001d85e:	rex pop rdx
   14001d860:	push   rax
   14001d861:	ss push r8
   14001d864:	rex.RB
   14001d865:	pop    r8
   14001d867:	xor    DWORD PTR [rax+0x45],edx
   14001d86a:	rex.X pop rax
   14001d86c:	rex pop rdx
   14001d86e:	rex.W push rsi
   14001d870:	(bad)  
   14001d871:	and    al,0x51
   14001d873:	rex.RX ins BYTE PTR es:[rdi],dx
   14001d875:	(bad)  
   14001d876:	addr32 jae 0x14001d8b9
   14001d879:	push   rdi
   14001d87a:	xor    al,0x54
   14001d87c:	jns    0x14001d8ee
   14001d87e:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14001d881:	(bad)  
   14001d882:	addr32 rex push rcx
   14001d885:	rex.WRB
   14001d886:	gs je  0x14001d8ea
   14001d889:	push   rsp
   14001d88a:	jns    0x14001d8fc
   14001d88c:	gs rex
   14001d88e:	rex
   14001d88f:	rex
   14001d890:	rex push rax
   14001d892:	rex.RB
   14001d893:	rex.X push rbp
   14001d895:	push   rcx
   14001d896:	rex.WRB
   14001d897:	gs je  0x14001d8fb
   14001d89a:	rex.WRXB (bad) 
   14001d89c:	push   0x65
   14001d89e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d8a2:	rex pop rdx
   14001d8a4:	add    BYTE PTR [rax],al
   14001d8a6:	push   rbx
   14001d8a7:	or     bh,BYTE PTR [rdi]
   14001d8a9:	fs gs je 0x14001d90e
   14001d8ad:	movsxd ebp,DWORD PTR [rax+0x40]
   14001d8b0:	push   rcx
   14001d8b1:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001d8b9:	rex
   14001d8ba:	rex push rcx
   14001d8bc:	rex.RB
   14001d8bd:	rex.B
   14001d8be:	push   r8
   14001d8c0:	rex.RB
   14001d8c1:	push   r13
   14001d8c3:	rex.R (bad) 
   14001d8c5:	je     0x14001d928
   14001d8c7:	rex xor DWORD PTR [rax+0x48],eax
   14001d8cb:	rex pop rdx
   14001d8cd:	add    BYTE PTR [rdi+0x6f6e3f10],ah
   14001d8d3:	jb     0x14001d942
   14001d8d5:	(bad)  
   14001d8d6:	ins    BYTE PTR es:[rdi],dx
   14001d8d7:	imul   edi,DWORD PTR [rdx+0x65],0x70795464
   14001d8de:	gs rex push rcx
   14001d8e1:	rex.WRB
   14001d8e2:	gs je  0x14001d946
   14001d8e5:	rex.WRXB (bad) 
   14001d8e7:	push   0x65
   14001d8e9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d8ed:	push   rbx
   14001d8ee:	rex.B (bad) 
   14001d8f0:	push   r14
   14001d8f2:	push   rcx
   14001d8f3:	rex.X jns 0x14001d96a
   14001d8f6:	gs rex.B jb 0x14001d96c
   14001d8fa:	(bad)  
   14001d8fb:	jns    0x14001d93d
   14001d8fd:	rex push rax
   14001d8ff:	rex.RB
   14001d900:	rex.X
   14001d901:	rex.R
   14001d902:	rex pop rdx
   14001d904:	add    BYTE PTR [rax],al
   14001d906:	pop    rbx
   14001d907:	or     bh,BYTE PTR [rdi]
   14001d909:	fs gs je 0x14001d96e
   14001d90d:	movsxd ebp,DWORD PTR [rax+0x5f]
   14001d910:	addr32 jb 0x14001d982
   14001d913:	ja     0x14001d955
   14001d915:	push   rcx
   14001d916:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001d91e:	rex
   14001d91f:	rex push rcx
   14001d921:	rex.RB
   14001d922:	rex.B
   14001d923:	push   r8
   14001d925:	rex.RB
   14001d926:	push   r13
   14001d928:	rex.R (bad) 
   14001d92a:	je     0x14001d98d
   14001d92c:	rex xor DWORD PTR [rax+0x50],eax
   14001d930:	rex.RB
   14001d931:	rex.B
   14001d932:	rex.W
   14001d933:	rex.W
   14001d934:	rex pop rdx
   14001d936:	add    BYTE PTR [rax],al
   14001d938:	and    cl,BYTE PTR [rdi+rdi*1]
   14001d93b:	data16 jb 0x14001d9ad
   14001d93e:	ins    DWORD PTR es:[rdi],dx
   14001d93f:	rex.WR (bad) 
   14001d941:	je     0x14001d9ac
   14001d943:	outs   dx,BYTE PTR ds:[rsi]
   14001d944:	xor    DWORD PTR [rax+0x51],eax
   14001d947:	push   rbx
   14001d948:	je     0x14001d9bc
   14001d94a:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001d951:	(bad)  
   14001d952:	push   r14
   14001d954:	xor    DWORD PTR [rax+0x50],eax
   14001d957:	rex.RB
   14001d958:	rex.X
   14001d959:	rex.R
   14001d95a:	rex.W
   14001d95b:	rex pop rdx
   14001d95d:	add    BYTE PTR [rsi],ah
   14001d95f:	sbb    bh,BYTE PTR [rdi]
   14001d961:	je     0x14001d9dc
   14001d963:	jo     0x14001d9ca
   14001d965:	rex push rcx
   14001d967:	rex.WRB
   14001d968:	gs je  0x14001d9cc
   14001d96b:	push   rsp
   14001d96c:	jns    0x14001d9de
   14001d96e:	gs rex
   14001d970:	rex push rbx
   14001d972:	rex.B
   14001d973:	rex.W
   14001d974:	rex.B
   14001d975:	rex.RB
   14001d976:	rex.X push rsi
   14001d978:	push   rcx
   14001d979:	rex.X jns 0x14001d9f0
   14001d97c:	gs rex.B jb 0x14001d9f2
   14001d980:	(bad)  
   14001d981:	jns    0x14001d9c3
   14001d983:	rex
   14001d984:	rex pop rdx
   14001d986:	add    BYTE PTR [rax],al
   14001d988:	or     BYTE PTR [rcx],dl
   14001d98a:	(bad)  
   14001d98b:	jo     0x14001d9ee
   14001d98d:	jb     0x14001d9f0
   14001d98f:	ins    DWORD PTR es:[rdi],dx
   14001d990:	gs je  0x14001d9f8
   14001d993:	jb     0x14001d9e9
   14001d995:	jns    0x14001da07
   14001d997:	gs jae 0x14001d9da
   14001d99a:	push   rcx
   14001d99b:	rex.WRB
   14001d99c:	gs je  0x14001da00
   14001d99f:	rex.WRB
   14001d9a0:	gs je  0x14001da0b
   14001d9a3:	outs   dx,DWORD PTR ds:[rsi]
   14001d9a4:	fs rex
   14001d9a6:	rex push rcx
   14001d9a8:	rex.RB
   14001d9a9:	rex.X
   14001d9aa:	rex.B (bad) 
   14001d9ac:	push   r14
   14001d9ae:	(bad)  
   14001d9af:	and    al,0x51
   14001d9b1:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   14001d9b9:	jns    0x14001da2f
   14001d9bb:	gs rex.B jb 0x14001da31
   14001d9bf:	(bad)  
   14001d9c0:	jns    0x14001da02
   14001d9c2:	rex
   14001d9c3:	rex
   14001d9c4:	rex pop rax
   14001d9c6:	pop    rdx
   14001d9c7:	add    dh,al
   14001d9c9:	(bad)  
   14001d9ca:	(bad)  
   14001d9cb:	(bad)  
   14001d9cc:	jo     0x14001da3e
   14001d9ce:	outs   dx,BYTE PTR gs:[rsi]
   14001d9d0:	fs rex push rcx
   14001d9d3:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001d9db:	rex
   14001d9dc:	rex push rcx
   14001d9de:	rex.RB
   14001d9df:	rex.B
   14001d9e0:	push   r8
   14001d9e2:	rex.RB
   14001d9e3:	push   r8
   14001d9e5:	rex.RB
   14001d9e6:	pop    r8
   14001d9e8:	pop    rax
   14001d9e9:	pop    rdx
   14001d9ea:	add    BYTE PTR [rax],al
   14001d9ec:	mov    WORD PTR [rsi],ss
   14001d9ee:	(bad)  
   14001d9ef:	jae    0x14001da56
   14001d9f1:	je     0x14001da46
   14001d9f3:	je     0x14001da67
   14001d9f5:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001d9fc:	rex push rcx
   14001d9fe:	push   rbx
   14001d9ff:	je     0x14001da73
   14001da01:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001da08:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001da0a:	fs gs ins BYTE PTR es:[rdi],dx
   14001da0d:	rex
   14001da0e:	rex push rcx
   14001da10:	rex.RB
   14001da11:	rex.B
   14001da12:	pop    r8
   14001da14:	rex.B
   14001da15:	rex.RB
   14001da16:	rex.X push rsi
   14001da18:	push   rcx
   14001da19:	push   rbx
   14001da1a:	je     0x14001da8e
   14001da1c:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001da23:	rex
   14001da24:	rex
   14001da25:	rex pop rdx
   14001da27:	add    cl,dh
   14001da29:	(bad)  
   14001da2a:	(bad)  
   14001da2b:	movsxd ebp,DWORD PTR [rax+0x6f]
   14001da2e:	jo     0x14001da70
   14001da30:	push   rcx
   14001da31:	push   rbx
   14001da32:	je     0x14001daa6
   14001da34:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001da3b:	rex.B
   14001da3c:	pop    r8
   14001da3e:	rex.W
   14001da3f:	rex pop rdx
   14001da41:	add    BYTE PTR [rbx+0x14],al
   14001da44:	(bad)  
   14001da45:	jb     0x14001daac
   14001da47:	jo     0x14001dab5
   14001da49:	(bad)  
   14001da4a:	movsxd esp,DWORD PTR [rbp+0x40]
   14001da4d:	push   rcx
   14001da4e:	push   rbx
   14001da4f:	je     0x14001dac3
   14001da51:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001da58:	rex.B
   14001da59:	rex.B
   14001da5a:	rex.B
   14001da5b:	rex.RB
   14001da5c:	push   r14
   14001da5e:	xor    DWORD PTR [rax+0x41],eax
   14001da61:	rex.RB
   14001da62:	rex.X push rsi
   14001da64:	xor    DWORD PTR [rax+0x30],eax
   14001da67:	push   rdi
   14001da68:	xor    al,0x43
   14001da6a:	(bad)  
   14001da6b:	jae    0x14001dad2
   14001da6d:	push   rbx
   14001da6e:	outs   dx,BYTE PTR gs:[rsi]
   14001da70:	jae    0x14001dadb
   14001da72:	je     0x14001dadd
   14001da74:	jbe    0x14001dadf
   14001da76:	je     0x14001daf1
   14001da78:	rex push rcx
   14001da7a:	je     0x14001dabc
   14001da7c:	rex
   14001da7d:	rex pop rdx
   14001da7f:	add    BYTE PTR [rbp+0x14],al
   14001da82:	(bad)  
   14001da83:	jb     0x14001daea
   14001da85:	jo     0x14001daf3
   14001da87:	(bad)  
   14001da88:	movsxd esp,DWORD PTR [rbp+0x40]
   14001da8b:	push   rcx
   14001da8c:	push   rbx
   14001da8d:	je     0x14001db01
   14001da8f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001da96:	rex.B
   14001da97:	rex.B
   14001da98:	rex.B
   14001da99:	rex.RB
   14001da9a:	push   r14
   14001da9c:	xor    DWORD PTR [rax+0x41],eax
   14001da9f:	rex.RB
   14001daa0:	rex.X push rsi
   14001daa2:	push   rcx
   14001daa3:	push   rdx
   14001daa4:	gs addr32 rex.RB js 0x14001db19
   14001daa9:	rex
   14001daaa:	rex
   14001daab:	rex.B
   14001daac:	rex.RB
   14001daad:	rex.X push rsi
   14001daaf:	xor    DWORD PTR [rax+0x40],eax
   14001dab2:	pop    rdx
   14001dab3:	add    dh,cl
   14001dab5:	(bad)  
   14001dab6:	(bad)  
   14001dab7:	(bad)  
   14001dab8:	jo     0x14001db2a
   14001daba:	outs   dx,BYTE PTR gs:[rsi]
   14001dabc:	fs rex push rcx
   14001dabf:	push   rbx
   14001dac0:	je     0x14001db34
   14001dac2:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001dac9:	rex.B
   14001daca:	rex.B
   14001dacb:	rex.B
   14001dacc:	rex.RB
   14001dacd:	push   r14
   14001dacf:	xor    DWORD PTR [rax+0x56],eax
   14001dad2:	push   rcx
   14001dad3:	rex.WR (bad) 
   14001dad5:	je     0x14001db40
   14001dad7:	outs   dx,BYTE PTR ds:[rsi]
   14001dad8:	xor    DWORD PTR [rbx+0x74],edx
   14001dadb:	jb     0x14001db46
   14001dadd:	outs   dx,BYTE PTR ds:[rsi]
   14001dade:	addr32 rex
   14001dae0:	rex
   14001dae1:	rex pop rdx
   14001dae3:	add    BYTE PTR [rsi],al
   14001dae5:	add    bh,BYTE PTR [rdi]
   14001dae7:	(bad)  
   14001dae8:	xor    BYTE PTR [rcx+0x56],dl
   14001daeb:	(bad)  
   14001daec:	jb     0x14001db57
   14001daee:	(bad)  
   14001daef:	outs   dx,BYTE PTR ds:[rsi]
   14001daf0:	je     0x14001db32
   14001daf2:	rex push rcx
   14001daf4:	rex.RB
   14001daf5:	rex.B
   14001daf6:	rex.B
   14001daf7:	rex
   14001daf8:	rex.W push rax
   14001dafa:	rex.RB
   14001dafb:	rex.X pop rax
   14001dafd:	rex.WB
   14001dafe:	rex pop rdx
   14001db00:	add    BYTE PTR [rax],al
   14001db02:	fisttp DWORD PTR [rax]
   14001db04:	(bad)  
   14001db05:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001db08:	jbe    0x14001db6f
   14001db0a:	jb     0x14001db80
   14001db0c:	rex push rcx
   14001db0e:	push   rsi
   14001db0f:	(bad)  
   14001db10:	jb     0x14001db7b
   14001db12:	(bad)  
   14001db13:	outs   dx,BYTE PTR ds:[rsi]
   14001db14:	je     0x14001db56
   14001db16:	rex push rcx
   14001db18:	rex.RB
   14001db19:	rex.B
   14001db1a:	pop    r15
   14001db1c:	rex.WRX
   14001db1d:	rex.W
   14001db1e:	rex pop rdx
   14001db20:	add    BYTE PTR [rax],al
   14001db22:	and    al,0x1a
   14001db24:	(bad)  
   14001db25:	je     0x14001dba0
   14001db27:	jo     0x14001db8e
   14001db29:	rex push rcx
   14001db2b:	rex.WRB
   14001db2c:	gs je  0x14001db90
   14001db2f:	push   rax
   14001db30:	jb     0x14001dba1
   14001db32:	jo     0x14001db99
   14001db34:	jb     0x14001dbaa
   14001db36:	jns    0x14001db78
   14001db38:	rex push rcx
   14001db3a:	rex.RB
   14001db3b:	rex.X
   14001db3c:	rex.B (bad) 
   14001db3e:	push   r15
   14001db40:	xor    al,0x54
   14001db42:	jns    0x14001dbb4
   14001db44:	gs rex push rcx
   14001db47:	push   rsi
   14001db48:	(bad)  
   14001db49:	jb     0x14001dbb4
   14001db4b:	(bad)  
   14001db4c:	outs   dx,BYTE PTR ds:[rsi]
   14001db4d:	je     0x14001db8f
   14001db4f:	rex pop rax
   14001db51:	pop    rdx
   14001db52:	add    BYTE PTR [rax],al
   14001db54:	in     al,0x6
   14001db56:	(bad)  
   14001db57:	(bad)  
   14001db58:	jb     0x14001dbc1
   14001db5a:	rex push rcx
   14001db5c:	push   rbx
   14001db5d:	je     0x14001dbd1
   14001db5f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001db66:	rex.X
   14001db67:	rex.B (bad) 
   14001db69:	push   r14
   14001db6b:	xor    DWORD PTR [rax+0x41],eax
   14001db6e:	rex.RB
   14001db6f:	rex.X push rsi
   14001db71:	xor    DWORD PTR [rax+0x30],eax
   14001db74:	rex pop rdx
   14001db76:	add    BYTE PTR [rax],al
   14001db78:	sbb    bh,BYTE PTR cs:[rdi]
   14001db7b:	je     0x14001dbf6
   14001db7d:	jo     0x14001dbe4
   14001db7f:	rex.WRX (bad) 
   14001db81:	ins    DWORD PTR es:[rdi],dx
   14001db82:	gs rex push rcx
   14001db85:	rex.WRB
   14001db86:	gs je  0x14001dbea
   14001db89:	push   rax
   14001db8a:	jb     0x14001dbfb
   14001db8c:	jo     0x14001dbf3
   14001db8e:	jb     0x14001dc04
   14001db90:	jns    0x14001dbd2
   14001db92:	rex push rcx
   14001db94:	rex.RB
   14001db95:	rex.X
   14001db96:	push   r8
   14001db98:	rex.RB
   14001db99:	rex.X
   14001db9a:	rex.R pop rax
   14001db9c:	pop    rdx
   14001db9d:	add    BYTE PTR [rcx+rdx*1+0x6f72703f],ah
   14001dba4:	jo     0x14001dc0b
   14001dba6:	jb     0x14001dc1c
   14001dba8:	jns    0x14001dbea
   14001dbaa:	push   rcx
   14001dbab:	rex.WRB
   14001dbac:	gs je  0x14001dc10
   14001dbaf:	rex.WRXB (bad) 
   14001dbb1:	push   0x65
   14001dbb3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001dbb7:	push   rcx
   14001dbb8:	rex.RB
   14001dbb9:	rex.X
   14001dbba:	rex.B (bad) 
   14001dbbc:	push   r14
   14001dbbe:	push   rcx
   14001dbbf:	rex.WRB
   14001dbc0:	gs je  0x14001dc24
   14001dbc3:	push   rax
   14001dbc4:	jb     0x14001dc35
   14001dbc6:	jo     0x14001dc2d
   14001dbc8:	jb     0x14001dc3e
   14001dbca:	jns    0x14001dc0c
   14001dbcc:	rex
   14001dbcd:	rex.W
   14001dbce:	rex pop rdx
   14001dbd0:	add    BYTE PTR [rax],al
   14001dbd2:	sbb    cl,BYTE PTR [rip+0x646e693f]        # 0x1a4704517
   14001dbd8:	gs js  0x14001dc2a
   14001dbdb:	push   ax
   14001dbdd:	jb     0x14001dc4e
   14001dbdf:	jo     0x14001dc46
   14001dbe1:	jb     0x14001dc57
   14001dbe3:	jns    0x14001dc25
   14001dbe5:	push   rcx
   14001dbe6:	rex.WRB
   14001dbe7:	gs je  0x14001dc4b
   14001dbea:	rex.WRXB (bad) 
   14001dbec:	push   0x65
   14001dbee:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001dbf2:	push   rcx
   14001dbf3:	rex.RB
   14001dbf4:	rex.X
   14001dbf5:	rex.B
   14001dbf6:	rex.W push rax
   14001dbf8:	rex.RB
   14001dbf9:	rex.X
   14001dbfa:	rex.R
   14001dbfb:	rex pop rdx
   14001dbfd:	add    bh,bl
   14001dbff:	add    al,0x3f
   14001dc01:	(bad)  
   14001dc02:	rex.X push rcx
   14001dc04:	rex.X jns 0x14001dc7b
   14001dc07:	gs rex.B jb 0x14001dc7d
   14001dc0b:	(bad)  
   14001dc0c:	jns    0x14001dc4e
   14001dc0e:	rex push rcx
   14001dc10:	rex.RB
   14001dc11:	rex.X
   14001dc12:	push   r8
   14001dc14:	rex.RB
   14001dc15:	rex.X
   14001dc16:	rex.R pop rax
   14001dc18:	pop    rdx
   14001dc19:	add    BYTE PTR [rsi+0x6f743f18],ah
   14001dc1f:	rex.WR (bad) 
   14001dc21:	je     0x14001dc8c
   14001dc23:	outs   dx,BYTE PTR ds:[rsi]
   14001dc24:	xor    DWORD PTR [rax+0x51],eax
   14001dc27:	push   rbx
   14001dc28:	je     0x14001dc9c
   14001dc2a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001dc31:	rex.X
   14001dc32:	rex.B (bad) 
   14001dc34:	push   r14
   14001dc36:	push   rcx
   14001dc37:	rex.X jns 0x14001dcae
   14001dc3a:	gs rex.B jb 0x14001dcb0
   14001dc3e:	(bad)  
   14001dc3f:	jns    0x14001dc81
   14001dc41:	rex pop rax
   14001dc43:	pop    rdx
   14001dc44:	add    BYTE PTR [rax],al
   14001dc46:	xchg   esi,eax
   14001dc47:	add    edi,DWORD PTR [rdi]
   14001dc49:	(bad)  
   14001dc4a:	xor    al,0x51
   14001dc4c:	push   rsi
   14001dc4d:	(bad)  
   14001dc4e:	jb     0x14001dcb9
   14001dc50:	(bad)  
   14001dc51:	outs   dx,BYTE PTR ds:[rsi]
   14001dc52:	je     0x14001dc94
   14001dc54:	rex push rcx
   14001dc56:	rex.RB
   14001dc57:	rex.B
   14001dc58:	rex.B
   14001dc59:	rex.B
   14001dc5a:	rex.RB
   14001dc5b:	push   r14
   14001dc5d:	xor    BYTE PTR [rax+0x41],al
   14001dc60:	rex.RB
   14001dc61:	rex.X push rsi
   14001dc63:	xor    BYTE PTR [rax+0x40],al
   14001dc66:	pop    rdx
   14001dc67:	add    BYTE PTR [rdi+0x61633f07],al
   14001dc6d:	outs   dx,BYTE PTR ds:[rsi]
   14001dc6e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001dc70:	outs   dx,BYTE PTR ds:[rsi]
   14001dc71:	jbe    0x14001dcd8
   14001dc73:	jb     0x14001dce9
   14001dc75:	rex push rcx
   14001dc77:	push   rsi
   14001dc78:	(bad)  
   14001dc79:	jb     0x14001dce4
   14001dc7b:	(bad)  
   14001dc7c:	outs   dx,BYTE PTR ds:[rsi]
   14001dc7d:	je     0x14001dcbf
   14001dc7f:	rex push rcx
   14001dc81:	rex.RB
   14001dc82:	rex.X
   14001dc83:	pop    r15
   14001dc85:	rex.WRX
   14001dc86:	rex.W
   14001dc87:	rex pop rdx
   14001dc89:	add    BYTE PTR [rcx],al
   14001dc8b:	or     edi,DWORD PTR [rdi]
   14001dc8d:	outs   dx,BYTE PTR gs:[rsi]
   14001dc8f:	fs jae 0x14001dce9
   14001dc92:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   14001dc9a:	gs rex.B jb 0x14001dd10
   14001dc9e:	(bad)  
   14001dc9f:	jns    0x14001dce1
   14001dca1:	rex push rcx
   14001dca3:	rex.RB
   14001dca4:	rex.X
   14001dca5:	pop    r15
   14001dca7:	rex.WRX
   14001dca8:	rex.R
   14001dca9:	rex pop rdx
   14001dcab:	add    BYTE PTR [rip+0x61703f11],al        # 0x1a1721bc2
   14001dcb1:	jb     0x14001dd14
   14001dcb3:	ins    DWORD PTR es:[rdi],dx
   14001dcb4:	gs je  0x14001dd1c
   14001dcb7:	jb     0x14001dd07
   14001dcb9:	(bad)  
   14001dcba:	ins    DWORD PTR es:[rdi],dx
   14001dcbb:	gs jae 0x14001dcfe
   14001dcbe:	push   rcx
   14001dcbf:	rex.WRB
   14001dcc0:	gs je  0x14001dd24
   14001dcc3:	rex.WRB
   14001dcc4:	gs je  0x14001dd2f
   14001dcc7:	outs   dx,DWORD PTR ds:[rsi]
   14001dcc8:	fs rex
   14001dcca:	rex push rcx
   14001dccc:	rex.RB
   14001dccd:	rex.X
   14001dcce:	rex.B (bad) 
   14001dcd0:	push   r14
   14001dcd2:	(bad)  
   14001dcd3:	and    al,0x51
   14001dcd5:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   14001dcdd:	jns    0x14001dd53
   14001dcdf:	gs rex.B jb 0x14001dd55
   14001dce3:	(bad)  
   14001dce4:	jns    0x14001dd26
   14001dce6:	rex
   14001dce7:	rex
   14001dce8:	rex pop rax
   14001dcea:	pop    rdx
   14001dceb:	add    BYTE PTR [rcx],al
   14001dced:	(bad)  
   14001dcee:	(bad)  
   14001dcef:	(bad)  
   14001dcf0:	je     0x14001dd32
   14001dcf2:	push   rcx
   14001dcf3:	push   rbx
   14001dcf4:	je     0x14001dd68
   14001dcf6:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001dcfd:	rex.X
   14001dcfe:	rex.B (bad) 
   14001dd00:	rex.X push rsi
   14001dd02:	push   rcx
   14001dd03:	rex.XB push 0x40407261
   14001dd09:	rex.W
   14001dd0a:	rex pop rdx
   14001dd0c:	add    BYTE PTR [rax],al
   14001dd0e:	outs   dx,DWORD PTR ds:[rsi]
   14001dd0f:	(bad)  
   14001dd10:	(bad)  
   14001dd11:	jae    0x14001dd87
   14001dd13:	(bad)  
   14001dd14:	jb     0x14001dd8a
   14001dd16:	jae    0x14001dd6f
   14001dd18:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001dd20:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001dd27:	rex.X
   14001dd28:	pop    r15
   14001dd2a:	rex.WRX
   14001dd2b:	rex.B
   14001dd2c:	rex.RB
   14001dd2d:	rex.X push rsi
   14001dd2f:	xor    DWORD PTR [rax+0x57],eax
   14001dd32:	xor    al,0x43
   14001dd34:	(bad)  
   14001dd35:	jae    0x14001dd9c
   14001dd37:	push   rbx
   14001dd38:	outs   dx,BYTE PTR gs:[rsi]
   14001dd3a:	jae    0x14001dda5
   14001dd3c:	je     0x14001dda7
   14001dd3e:	jbe    0x14001dda9
   14001dd40:	je     0x14001ddbb
   14001dd42:	rex push rcx
   14001dd44:	je     0x14001dd86
   14001dd46:	rex
   14001dd47:	rex pop rdx
   14001dd49:	add    BYTE PTR [rcx],ah
   14001dd4b:	or     al,0x3f
   14001dd4d:	data16 jb 0x14001ddbf
   14001dd50:	ins    DWORD PTR es:[rdi],dx
   14001dd51:	rex.WR (bad) 
   14001dd53:	je     0x14001ddbe
   14001dd55:	outs   dx,BYTE PTR ds:[rsi]
   14001dd56:	xor    DWORD PTR [rax+0x51],eax
   14001dd59:	push   rbx
   14001dd5a:	je     0x14001ddce
   14001dd5c:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001dd63:	(bad)  
   14001dd64:	push   r14
   14001dd66:	xor    DWORD PTR [rax+0x41],eax
   14001dd69:	rex.RB
   14001dd6a:	rex.X push rsi
   14001dd6c:	push   rcx
   14001dd6d:	rex.X jns 0x14001dde4
   14001dd70:	gs rex.B jb 0x14001dde6
   14001dd74:	(bad)  
   14001dd75:	jns    0x14001ddb7
   14001dd77:	rex
   14001dd78:	rex pop rdx
   14001dd7a:	add    BYTE PTR [rax],al
   14001dd7c:	adc    DWORD PTR [rax],edx
   14001dd7e:	(bad)  
   14001dd7f:	ins    DWORD PTR es:[rdi],dx
   14001dd80:	gs je  0x14001ddeb
   14001dd83:	outs   dx,DWORD PTR ds:[rsi]
   14001dd84:	fs push rbx
   14001dd86:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14001dd8d:	gs rex push rcx
   14001dd90:	rex.WRB
   14001dd91:	gs je  0x14001ddf5
   14001dd94:	rex.WRB
   14001dd95:	gs je  0x14001de00
   14001dd98:	outs   dx,DWORD PTR ds:[rsi]
   14001dd99:	fs rex
   14001dd9b:	rex push rcx
   14001dd9d:	rex.RB
   14001dd9e:	rex.X
   14001dd9f:	rex.B (bad) 
   14001dda1:	push   r14
   14001dda3:	push   rcx
   14001dda4:	rex.X jns 0x14001de1b
   14001dda7:	gs rex.B jb 0x14001de1d
   14001ddab:	(bad)  
   14001ddac:	jns    0x14001ddee
   14001ddae:	rex pop rax
   14001ddb0:	pop    rdx
   14001ddb1:	add    BYTE PTR [rbx],cl
   14001ddb3:	adc    BYTE PTR [rdi],bh
   14001ddb5:	ins    DWORD PTR es:[rdi],dx
   14001ddb6:	gs je  0x14001de21
   14001ddb9:	outs   dx,DWORD PTR ds:[rsi]
   14001ddba:	fs rex push rcx
   14001ddbd:	rex.WRB
   14001ddbe:	gs je  0x14001de22
   14001ddc1:	rex.WRXB (bad) 
   14001ddc3:	push   0x65
   14001ddc5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ddc9:	push   rcx
   14001ddca:	rex.RB
   14001ddcb:	rex.X
   14001ddcc:	rex.B (bad) 
   14001ddce:	push   r14
   14001ddd0:	push   rcx
   14001ddd1:	rex.WRB
   14001ddd2:	gs je  0x14001de36
   14001ddd5:	rex.WRB
   14001ddd6:	gs je  0x14001de41
   14001ddd9:	outs   dx,DWORD PTR ds:[rsi]
   14001ddda:	fs rex
   14001dddc:	rex
   14001dddd:	rex.W
   14001ddde:	rex pop rdx
   14001dde0:	add    BYTE PTR [rax],al
   14001dde2:	or     eax,0x656d3f10
   14001dde7:	je     0x14001de51
   14001dde9:	outs   dx,DWORD PTR ds:[rsi]
   14001ddea:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14001dded:	jne    0x14001de5d
   14001ddef:	je     0x14001de31
   14001ddf1:	push   rcx
   14001ddf2:	rex.WRB
   14001ddf3:	gs je  0x14001de57
   14001ddf6:	rex.WRXB (bad) 
   14001ddf8:	push   0x65
   14001ddfa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ddfe:	push   rcx
   14001ddff:	rex.RB
   14001de00:	rex.X
   14001de01:	rex.B
   14001de02:	rex.W pop rax
   14001de04:	pop    rdx
   14001de05:	add    BYTE PTR [rdx+0x6f743f18],bl
   14001de0b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001de0d:	je     0x14001de4f
   14001de0f:	push   rcx
   14001de10:	push   rsi
   14001de11:	(bad)  
   14001de12:	jb     0x14001de7d
   14001de14:	(bad)  
   14001de15:	outs   dx,BYTE PTR ds:[rsi]
   14001de16:	je     0x14001de58
   14001de18:	rex push rcx
   14001de1a:	rex.RB
   14001de1b:	rex.X
   14001de1c:	rex.B
   14001de1d:	rex.W push rax
   14001de1f:	rex.RB
   14001de20:	pop    r15
   14001de22:	rex.WRX
   14001de23:	rex pop rdx
   14001de25:	add    BYTE PTR [rbp+0x11],dh
   14001de28:	(bad)  
   14001de29:	jo     0x14001de9d
   14001de2b:	gs jo  0x14001de93
   14001de2e:	outs   dx,BYTE PTR ds:[rsi]
   14001de2f:	fs rex push rcx
   14001de32:	push   rbx
   14001de33:	je     0x14001dea7
   14001de35:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001de3c:	rex.B
   14001de3d:	rex.B
   14001de3e:	rex.B
   14001de3f:	rex.RB
   14001de40:	push   r14
   14001de42:	xor    DWORD PTR [rax+0x41],eax
   14001de45:	rex.RB
   14001de46:	rex.X push rsi
   14001de48:	xor    DWORD PTR [rax+0x40],eax
   14001de4b:	pop    rdx
   14001de4c:	add    BYTE PTR [rax],al
   14001de4e:	or     al,0x2
   14001de50:	(bad)  
   14001de51:	(bad)  
   14001de52:	xor    BYTE PTR [rcx+0x56],dl
   14001de55:	(bad)  
   14001de56:	jb     0x14001dec1
   14001de58:	(bad)  
   14001de59:	outs   dx,BYTE PTR ds:[rsi]
   14001de5a:	je     0x14001de9c
   14001de5c:	rex push rcx
   14001de5e:	rex.RB
   14001de5f:	rex.B
   14001de60:	rex.B
   14001de61:	rex push rsi
   14001de63:	push   rcx
   14001de64:	rex.WR (bad) 
   14001de66:	je     0x14001ded1
   14001de68:	outs   dx,BYTE PTR ds:[rsi]
   14001de69:	xor    DWORD PTR [rbx+0x74],edx
   14001de6c:	jb     0x14001ded7
   14001de6e:	outs   dx,BYTE PTR ds:[rsi]
   14001de6f:	addr32 rex
   14001de71:	rex
   14001de72:	rex pop rdx
   14001de74:	add    BYTE PTR [rax],al
   14001de76:	movups XMMWORD PTR [rdi],xmm7
   14001de79:	jo     0x14001dedc
   14001de7b:	jb     0x14001dee2
   14001de7d:	outs   dx,BYTE PTR ds:[rsi]
   14001de7e:	je     0x14001dec0
   14001de80:	push   rcx
   14001de81:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001de83:	fs gs ins BYTE PTR es:[rdi],dx
   14001de86:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001de88:	fs gs js 0x14001decc
   14001de8c:	rex push rcx
   14001de8e:	rex.RB
   14001de8f:	rex.X
   14001de90:	rex.B (bad) 
   14001de92:	push   r14
   14001de94:	xor    DWORD PTR [rax+0x58],eax
   14001de97:	pop    rdx
   14001de98:	add    BYTE PTR [rax],al
   14001de9a:	(bad)  
   14001de9b:	(bad)  
   14001de9c:	(bad)  
   14001de9d:	jae    0x14001df07
   14001de9f:	(bad)  
   14001dea0:	jb     0x14001df07
   14001dea2:	fs pop rdi
   14001dea4:	outs   dx,BYTE PTR ds:[rsi]
   14001dea5:	jne    0x14001df13
   14001dea7:	ins    BYTE PTR es:[rdi],dx
   14001dea8:	rex push rcx
   14001deaa:	rex.B jb 0x14001df1f
   14001dead:	(bad)  
   14001deae:	jns    0x14001def4
   14001deb0:	(bad)  
   14001deb1:	je     0x14001df14
   14001deb3:	rex
   14001deb4:	xor    dl,BYTE PTR [rcx+0x42]
   14001deb8:	push   rbp
   14001deb9:	xor    DWORD PTR [rax+0x42],eax
   14001debc:	add    BYTE PTR [rax],al
   14001debe:	adc    BYTE PTR [rdx],cl
   14001dec0:	(bad)  
   14001dec1:	fs gs (bad) 
   14001dec4:	ins    BYTE PTR es:[rdi],dx
   14001dec5:	ins    BYTE PTR es:[rdi],dx
   14001dec6:	outs   dx,DWORD PTR ds:[rsi]
   14001dec7:	movsxd esp,DWORD PTR [rcx+0x74]
   14001deca:	gs rex push rcx
   14001decd:	rex.B jb 0x14001df42
   14001ded0:	(bad)  
   14001ded1:	jns    0x14001df17
   14001ded3:	(bad)  
   14001ded4:	je     0x14001df37
   14001ded6:	rex
   14001ded7:	rex push rbx
   14001ded9:	pop    r8
   14001dedb:	push   rax
   14001dedc:	rex.RB
   14001dedd:	push   r13
   14001dedf:	xor    DWORD PTR [rax+0x5f],eax
   14001dee2:	rex.WXB xor QWORD PTR [r8+0x5a],rax
   14001dee6:	add    BYTE PTR [rax],al
   14001dee8:	fmul   QWORD PTR [rax]
   14001deea:	(bad)  
   14001deeb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001deee:	jbe    0x14001df55
   14001def0:	jb     0x14001df66
   14001def2:	rex push rcx
   14001def4:	push   rsi
   14001def5:	(bad)  
   14001def6:	jb     0x14001df61
   14001def8:	(bad)  
   14001def9:	outs   dx,BYTE PTR ds:[rsi]
   14001defa:	je     0x14001df3c
   14001defc:	rex push rcx
   14001defe:	rex.RB
   14001deff:	rex.X
   14001df00:	pop    r15
   14001df02:	rex.WRX
   14001df03:	rex.W push rax
   14001df05:	rex.RB
   14001df06:	pop    r8
   14001df08:	rex pop rdx
   14001df0a:	add    BYTE PTR [rax],al
   14001df0c:	(bad)  
   14001df0d:	or     BYTE PTR [rdi],bh
   14001df0f:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001df12:	jae    0x14001df88
   14001df14:	rex.R (bad) 
   14001df16:	je     0x14001df79
   14001df18:	rex push rcx
   14001df1a:	push   rsi
   14001df1b:	(bad)  
   14001df1c:	jb     0x14001df87
   14001df1e:	(bad)  
   14001df1f:	outs   dx,BYTE PTR ds:[rsi]
   14001df20:	je     0x14001df62
   14001df22:	rex push rcx
   14001df24:	rex.RB
   14001df25:	rex.X
   14001df26:	push   r8
   14001df28:	rex.RB
   14001df29:	rex.X pop rax
   14001df2b:	pop    rax
   14001df2c:	pop    rdx
   14001df2d:	add    BYTE PTR [rdx+0x73753f1a],al
   14001df33:	gs jb  0x14001df8a
   14001df36:	jns    0x14001dfa8
   14001df38:	gs rex push rcx
   14001df3b:	push   rsi
   14001df3c:	(bad)  
   14001df3d:	jb     0x14001dfa8
   14001df3f:	(bad)  
   14001df40:	outs   dx,BYTE PTR ds:[rsi]
   14001df41:	je     0x14001df83
   14001df43:	rex push rcx
   14001df45:	rex.RB
   14001df46:	rex.X
   14001df47:	rex.B
   14001df48:	rex.W pop rax
   14001df4a:	pop    rdx
   14001df4b:	add    BYTE PTR [rdi+0x6c613f06],ah
   14001df51:	ins    BYTE PTR es:[rdi],dx
   14001df52:	outs   dx,DWORD PTR ds:[rsi]
   14001df53:	movsxd esp,DWORD PTR [rcx+0x74]
   14001df56:	gs rex push rcx
   14001df59:	rex.B jb 0x14001dfce
   14001df5c:	(bad)  
   14001df5d:	jns    0x14001dfa3
   14001df5f:	(bad)  
   14001df60:	je     0x14001dfc3
   14001df62:	rex
   14001df63:	rex push rbx
   14001df65:	push   r8
   14001df67:	rex.RB
   14001df68:	push   r13
   14001df6a:	xor    DWORD PTR [rax+0x5f],eax
   14001df6d:	rex.WXB xor BYTE PTR [r8],sil
   14001df70:	push   rsi
   14001df71:	(bad)  
   14001df72:	and    al,0x51
   14001df74:	rex.RX ins BYTE PTR es:[rdi],dx
   14001df76:	(bad)  
   14001df77:	addr32 jae 0x14001dfba
   14001df7a:	push   rdi
   14001df7b:	xor    al,0x41
   14001df7d:	ins    BYTE PTR es:[rdi],dx
   14001df7e:	ins    BYTE PTR es:[rdi],dx
   14001df7f:	outs   dx,DWORD PTR ds:[rsi]
   14001df80:	movsxd esp,DWORD PTR [rcx+0x74]
   14001df83:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14001df8a:	outs   dx,DWORD PTR ds:[rsi]
   14001df8b:	outs   dx,BYTE PTR ds:[rsi]
   14001df8c:	rex push rcx
   14001df8e:	rex.B jb 0x14001e003
   14001df91:	(bad)  
   14001df92:	jns    0x14001dfd8
   14001df94:	(bad)  
   14001df95:	je     0x14001dff8
   14001df97:	rex
   14001df98:	rex
   14001df99:	rex
   14001df9a:	rex
   14001df9b:	rex pop rdx
   14001df9d:	add    BYTE PTR [rip+0x303f3f02],al        # 0x170411ea5
   14001dfa3:	push   rcx
   14001dfa4:	push   rsi
   14001dfa5:	(bad)  
   14001dfa6:	jb     0x14001e011
   14001dfa8:	(bad)  
   14001dfa9:	outs   dx,BYTE PTR ds:[rsi]
   14001dfaa:	je     0x14001dfec
   14001dfac:	rex push rcx
   14001dfae:	rex.RB
   14001dfaf:	rex.B
   14001dfb0:	rex.B
   14001dfb1:	rex
   14001dfb2:	rex.W push rax
   14001dfb4:	rex.RB
   14001dfb5:	rex.X pop rax
   14001dfb7:	rex pop rdx
   14001dfb9:	add    BYTE PTR [rip+0x303f3f00],ah        # 0x170411ebf
   14001dfbf:	push   rcx
   14001dfc0:	(bad)
   14001dfc6:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001dfca:	gs ins DWORD PTR es:[rdi],dx
   14001dfcc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001dfce:	fs gs ins BYTE PTR es:[rdi],dx
   14001dfd1:	rex
   14001dfd2:	rex push rcx
   14001dfd4:	rex.RB
   14001dfd5:	rex.B
   14001dfd6:	rex.B
   14001dfd7:	rex push rax
   14001dfd9:	rex.RB
   14001dfda:	push   r14
   14001dfdc:	push   rcx
   14001dfdd:	rex.WRXB (bad) 
   14001dfdf:	push   0x65
   14001dfe1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001dfe5:	rex pop rdx
   14001dfe7:	add    BYTE PTR [rsi+0x2],dh
   14001dfea:	(bad)  
   14001dfeb:	(bad)  
   14001dfec:	xor    DWORD PTR [rcx+0x44],edx
   14001dfef:	gs (bad) 
   14001dff1:	jne    0x14001e05a
   14001dff3:	rex
   14001dff4:	rex push rcx
   14001dff6:	rex.RB
   14001dff7:	rex.B
   14001dff8:	rex.B
   14001dff9:	rex pop rax
   14001dffb:	pop    rdx
   14001dffc:	add    BYTE PTR [rax],al
   14001dffe:	xor    eax,0x363f3f04
   14001e003:	push   rcx
   14001e004:	rex.R
   14001e005:	gs (bad) 
   14001e007:	jne    0x14001e070
   14001e009:	rex
   14001e00a:	rex push rcx
   14001e00c:	rex.RB
   14001e00d:	rex.B
   14001e00e:	rex.B
   14001e00f:	rex.B
   14001e010:	rex.RB
   14001e011:	push   r14
   14001e013:	xor    BYTE PTR [rax+0x41],al
   14001e016:	rex.RB
   14001e017:	rex.X push rsi
   14001e019:	push   rcx
   14001e01a:	push   rbx
   14001e01b:	je     0x14001e08f
   14001e01d:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001e024:	add    BYTE PTR [rax],al
   14001e026:	rex.B add al,0x3f
   14001e029:	(bad)  
   14001e02a:	ss push rcx
   14001e02c:	rex.R
   14001e02d:	gs (bad) 
   14001e02f:	jne    0x14001e098
   14001e031:	rex
   14001e032:	rex push rcx
   14001e034:	rex.RB
   14001e035:	rex.B
   14001e036:	rex.B
   14001e037:	rex.B
   14001e038:	rex.RB
   14001e039:	push   r14
   14001e03b:	xor    BYTE PTR [rax+0x50],al
   14001e03e:	rex.RB
   14001e03f:	rex.X
   14001e040:	rex.R
   14001e041:	rex pop rdx
   14001e043:	add    BYTE PTR [rbx],dl
   14001e045:	or     bh,BYTE PTR [rdi]
   14001e047:	fs gs (bad) 
   14001e04a:	jne    0x14001e0b3
   14001e04c:	rex push rcx
   14001e04e:	rex.WRB
   14001e04f:	gs jae 0x14001e0c5
   14001e052:	(bad)  
   14001e053:	rex.WR outs dx,DWORD PTR gs:[esi]
   14001e057:	addr32 addr32 gs jb 0x14001e09c
   14001e05c:	rex push rcx
   14001e05e:	rex.RB
   14001e05f:	rex.X
   14001e060:	rex.B (bad) 
   14001e062:	push   r14
   14001e064:	push   rcx
   14001e065:	rex.R
   14001e066:	gs (bad) 
   14001e068:	jne    0x14001e0d1
   14001e06a:	rex
   14001e06b:	rex pop rax
   14001e06d:	pop    rdx
   14001e06e:	add    BYTE PTR [rax],al
   14001e070:	or     al,0x1
   14001e072:	(bad)  
   14001e073:	(bad)  
   14001e074:	xor    BYTE PTR [rcx+0x4d],dl
   14001e077:	gs jae 0x14001e0ed
   14001e07a:	(bad)  
   14001e07b:	rex.WR outs dx,DWORD PTR gs:[esi]
   14001e07f:	addr32 addr32 gs jb 0x14001e0c4
   14001e084:	rex push rcx
   14001e086:	rex.RB
   14001e087:	rex.B
   14001e088:	rex.B
   14001e089:	rex push rax
   14001e08b:	rex.RB
   14001e08c:	rex.X
   14001e08d:	rex.R
   14001e08e:	rex.W xor BYTE PTR [rax+0x5a],al
   14001e092:	add    BYTE PTR [rax],al
   14001e094:	push   rsi
   14001e095:	add    bh,BYTE PTR [rdi]
   14001e097:	(bad)  
   14001e098:	xor    DWORD PTR [rcx+0x41],edx
   14001e09b:	(bad)
   14001e0a0:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001e0a4:	gs ins DWORD PTR es:[rdi],dx
   14001e0a6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e0a8:	fs gs ins BYTE PTR es:[rdi],dx
   14001e0ab:	rex
   14001e0ac:	rex push rbp
   14001e0ae:	rex.RB
   14001e0af:	rex.B
   14001e0b0:	rex.B
   14001e0b1:	rex pop rax
   14001e0b3:	pop    rdx
   14001e0b4:	add    BYTE PTR [rax],al
   14001e0b6:	icebp  
   14001e0b7:	or     bh,BYTE PTR [rdi]
   14001e0b9:	outs   dx,BYTE PTR gs:[rsi]
   14001e0bb:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14001e0be:	jae    0x14001e125
   14001e0c0:	jb     0x14001e136
   14001e0c2:	push   rdx
   14001e0c3:	outs   dx,DWORD PTR ds:[rsi]
   14001e0c4:	ja     0x14001e139
   14001e0c6:	rex push rcx
   14001e0c8:	(bad)
   14001e0ce:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001e0d2:	gs ins DWORD PTR es:[rdi],dx
   14001e0d4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e0d6:	fs gs ins BYTE PTR es:[rdi],dx
   14001e0d9:	rex
   14001e0da:	rex
   14001e0db:	rex.WB
   14001e0dc:	rex.RB
   14001e0dd:	rex.B
   14001e0de:	pop    r8
   14001e0e0:	pop    rax
   14001e0e1:	pop    rdx
   14001e0e2:	add    BYTE PTR [rax],al
   14001e0e4:	rex.WRX (bad) 
   14001e0e6:	(bad)  
   14001e0e7:	(bad)  
   14001e0e8:	imul   ebp,DWORD PTR gs:[esi+0x49],0x7265736e
   14001e0f1:	je     0x14001e145
   14001e0f3:	outs   dx,DWORD PTR ds:[rsi]
   14001e0f4:	ja     0x14001e169
   14001e0f6:	rex push rcx
   14001e0f8:	(bad)
   14001e0fe:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001e102:	gs ins DWORD PTR es:[rdi],dx
   14001e104:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e106:	fs gs ins BYTE PTR es:[rdi],dx
   14001e109:	rex
   14001e10a:	rex
   14001e10b:	rex.WB
   14001e10c:	rex.RB
   14001e10d:	rex.B
   14001e10e:	pop    r8
   14001e110:	rex.B
   14001e111:	rex.RB
   14001e112:	rex.X push rsi
   14001e114:	push   rcx
   14001e115:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e117:	fs gs ins BYTE PTR es:[rdi],dx
   14001e11a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e11c:	fs gs js 0x14001e160
   14001e120:	rex
   14001e121:	rex.W
   14001e122:	rex.W
   14001e123:	rex pop rdx
   14001e125:	add    bh,dh
   14001e127:	or     bh,BYTE PTR [rdi]
   14001e129:	outs   dx,BYTE PTR gs:[rsi]
   14001e12b:	fs push rdx
   14001e12d:	gs ins DWORD PTR es:[rdi],dx
   14001e12f:	outs   dx,DWORD PTR ds:[rsi]
   14001e130:	jbe    0x14001e197
   14001e132:	push   rdx
   14001e133:	outs   dx,DWORD PTR ds:[rsi]
   14001e134:	ja     0x14001e1a9
   14001e136:	rex push rcx
   14001e138:	(bad)
   14001e13e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001e142:	gs ins DWORD PTR es:[rdi],dx
   14001e144:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e146:	fs gs ins BYTE PTR es:[rdi],dx
   14001e149:	rex
   14001e14a:	rex
   14001e14b:	rex.WB
   14001e14c:	rex.RB
   14001e14d:	rex.B
   14001e14e:	pop    r8
   14001e150:	pop    rax
   14001e151:	pop    rdx
   14001e152:	add    BYTE PTR [rax],al
   14001e154:	push   rbp
   14001e155:	(bad)  
   14001e156:	(bad)  
   14001e157:	(bad)  
   14001e158:	imul   ebp,DWORD PTR gs:[esi+0x52],0x766f6d65
   14001e161:	gs push rdx
   14001e163:	outs   dx,DWORD PTR ds:[rsi]
   14001e164:	ja     0x14001e1d9
   14001e166:	rex push rcx
   14001e168:	(bad)
   14001e16e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001e172:	gs ins DWORD PTR es:[rdi],dx
   14001e174:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e176:	fs gs ins BYTE PTR es:[rdi],dx
   14001e179:	rex
   14001e17a:	rex
   14001e17b:	rex.WB
   14001e17c:	rex.RB
   14001e17d:	rex.B
   14001e17e:	pop    r8
   14001e180:	rex.B
   14001e181:	rex.RB
   14001e182:	rex.X push rsi
   14001e184:	push   rcx
   14001e185:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e187:	fs gs ins BYTE PTR es:[rdi],dx
   14001e18a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e18c:	fs gs js 0x14001e1d0
   14001e190:	rex
   14001e191:	rex.W
   14001e192:	rex.W
   14001e193:	rex pop rdx
   14001e195:	add    BYTE PTR [rsi],ch
   14001e197:	or     edi,DWORD PTR [rdi]
   14001e199:	gs jb  0x14001e1fd
   14001e19c:	jae    0x14001e203
   14001e19e:	rex push rcx
   14001e1a0:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001e1a8:	rex
   14001e1a9:	rex push rcx
   14001e1ab:	rex.RB
   14001e1ac:	rex.B
   14001e1ad:	push   r8
   14001e1af:	rex.RB
   14001e1b0:	push   r8
   14001e1b2:	rex.RB
   14001e1b3:	pop    r8
   14001e1b5:	push   rax
   14001e1b6:	rex.RB
   14001e1b7:	push   r8
   14001e1b9:	rex.RB
   14001e1ba:	pop    r8
   14001e1bc:	rex pop rdx
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	(bad)  
   14001e1c1:	(bad)  
   14001e1c2:	(bad)  
   14001e1c3:	jae    0x14001e235
   14001e1c5:	ins    BYTE PTR es:[rdi],dx
   14001e1c6:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   14001e1ce:	outs   dx,BYTE PTR ds:[rsi]
   14001e1cf:	addr32 rex
   14001e1d1:	rex push rcx
   14001e1d3:	rex.RB
   14001e1d4:	rex.X
   14001e1d5:	rex.B (bad) 
   14001e1d7:	push   r14
   14001e1d9:	push   rcx
   14001e1da:	push   rbx
   14001e1db:	je     0x14001e24f
   14001e1dd:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001e1e4:	rex
   14001e1e5:	rex push rsi
   14001e1e7:	push   rcx
   14001e1e8:	rex.XB push 0x40407261
   14001e1ee:	push   rdi
   14001e1ef:	xor    al,0x53
   14001e1f1:	jo     0x14001e25f
   14001e1f3:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   14001e1fb:	outs   dx,DWORD PTR ds:[rsi]
   14001e1fc:	jb     0x14001e23e
   14001e1fe:	xor    DWORD PTR [rax+0x57],eax
   14001e201:	xor    al,0x43
   14001e203:	(bad)  
   14001e204:	jae    0x14001e26b
   14001e206:	push   rbx
   14001e207:	outs   dx,BYTE PTR gs:[rsi]
   14001e209:	jae    0x14001e274
   14001e20b:	je     0x14001e276
   14001e20d:	jbe    0x14001e278
   14001e20f:	je     0x14001e28a
   14001e211:	rex push rcx
   14001e213:	je     0x14001e255
   14001e215:	rex
   14001e216:	rex pop rdx
   14001e218:	add    BYTE PTR [rax],al
   14001e21a:	jg     0x14001e21d
   14001e21c:	(bad)  
   14001e21d:	(bad)  
   14001e21e:	xor    BYTE PTR [rcx+0x53],dl
   14001e221:	outs   dx,DWORD PTR ds:[rsi]
   14001e222:	jb     0x14001e298
   14001e224:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e22d:	js     0x14001e2a8
   14001e22f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e231:	fs gs ins BYTE PTR es:[rdi],dx
   14001e234:	rex
   14001e235:	rex push rcx
   14001e237:	rex.RB
   14001e238:	rex.B
   14001e239:	rex.B
   14001e23a:	rex push rax
   14001e23c:	rex.RB
   14001e23d:	push   r14
   14001e23f:	push   rcx
   14001e240:	rex.WRXB (bad) 
   14001e242:	push   0x65
   14001e244:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001e248:	rex pop rdx
   14001e24a:	add    BYTE PTR [rax],al
   14001e24c:	cmc    
   14001e24d:	or     al,0x3f
   14001e24f:	imul   ebp,DWORD PTR [rsi+0x64],0x51407865
   14001e256:	push   rbx
   14001e257:	outs   dx,DWORD PTR ds:[rsi]
   14001e258:	jb     0x14001e2ce
   14001e25a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e263:	js     0x14001e2de
   14001e265:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e267:	fs gs ins BYTE PTR es:[rdi],dx
   14001e26a:	rex
   14001e26b:	rex push rbp
   14001e26d:	rex.RB
   14001e26e:	rex.X
   14001e26f:	rex.B (bad) 
   14001e271:	push   r14
   14001e273:	push   rcx
   14001e274:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e276:	fs gs ins BYTE PTR es:[rdi],dx
   14001e279:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e27b:	fs gs js 0x14001e2bf
   14001e27f:	rex
   14001e280:	rex.W
   14001e281:	rex.W
   14001e282:	rex.B
   14001e283:	rex.RB
   14001e284:	rex.X push rsi
   14001e286:	xor    al,BYTE PTR [rax+0x40]
   14001e289:	pop    rdx
   14001e28a:	add    BYTE PTR [rax],al
   14001e28c:	adc    dl,BYTE PTR [rcx]
   14001e28e:	(bad)  
   14001e28f:	jo     0x14001e2f2
   14001e291:	jb     0x14001e2f8
   14001e293:	outs   dx,BYTE PTR ds:[rsi]
   14001e294:	je     0x14001e2d6
   14001e296:	push   rcx
   14001e297:	push   rbx
   14001e298:	outs   dx,DWORD PTR ds:[rsi]
   14001e299:	jb     0x14001e30f
   14001e29b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e2a4:	js     0x14001e31f
   14001e2a6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e2a8:	fs gs ins BYTE PTR es:[rdi],dx
   14001e2ab:	rex
   14001e2ac:	rex push rbp
   14001e2ae:	rex.RB
   14001e2af:	rex.X
   14001e2b0:	rex.B (bad) 
   14001e2b2:	push   r14
   14001e2b4:	push   rcx
   14001e2b5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e2b7:	fs gs ins BYTE PTR es:[rdi],dx
   14001e2ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e2bc:	fs gs js 0x14001e300
   14001e2c0:	rex
   14001e2c1:	rex.B
   14001e2c2:	rex.RB
   14001e2c3:	rex.X push rsi
   14001e2c5:	xor    al,BYTE PTR [rax+0x40]
   14001e2c8:	pop    rdx
   14001e2c9:	add    al,ah
   14001e2cb:	(bad)  
   14001e2cc:	(bad)  
   14001e2cd:	jae    0x14001e338
   14001e2cf:	(bad)  
   14001e2d0:	ins    BYTE PTR es:[rdi],dx
   14001e2d1:	imul   ebp,DWORD PTR [rsi+0x67],0x6f535140
   14001e2d8:	jb     0x14001e34e
   14001e2da:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e2e3:	js     0x14001e35e
   14001e2e5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e2e7:	fs gs ins BYTE PTR es:[rdi],dx
   14001e2ea:	rex
   14001e2eb:	rex push rbp
   14001e2ed:	rex.RB
   14001e2ee:	rex.X
   14001e2ef:	rex.B (bad) 
   14001e2f1:	push   r14
   14001e2f3:	push   rcx
   14001e2f4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e2f6:	fs gs ins BYTE PTR es:[rdi],dx
   14001e2f9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e2fb:	fs gs js 0x14001e33f
   14001e2ff:	rex
   14001e300:	rex.W
   14001e301:	rex.W
   14001e302:	rex.B
   14001e303:	rex.RB
   14001e304:	rex.X push rsi
   14001e306:	xor    al,BYTE PTR [rax+0x40]
   14001e309:	pop    rdx
   14001e30a:	add    BYTE PTR [rax],al
   14001e30c:	mov    edx,0x6f723f14
   14001e311:	ja     0x14001e356
   14001e313:	outs   dx,DWORD PTR ds:[rsi]
   14001e314:	jne    0x14001e384
   14001e316:	je     0x14001e358
   14001e318:	push   rcx
   14001e319:	push   rbx
   14001e31a:	outs   dx,DWORD PTR ds:[rsi]
   14001e31b:	jb     0x14001e391
   14001e31d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e326:	js     0x14001e3a1
   14001e328:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e32a:	fs gs ins BYTE PTR es:[rdi],dx
   14001e32d:	rex
   14001e32e:	rex push rbp
   14001e330:	rex.RB
   14001e331:	rex.X
   14001e332:	rex.B
   14001e333:	rex.W
   14001e334:	rex.B
   14001e335:	rex.RB
   14001e336:	rex.X push rsi
   14001e338:	push   rcx
   14001e339:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e33b:	fs gs ins BYTE PTR es:[rdi],dx
   14001e33e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e340:	fs gs js 0x14001e384
   14001e344:	rex
   14001e345:	rex pop rdx
   14001e347:	add    BYTE PTR [rax+rcx*1+0x3f],al
   14001e34b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14001e34e:	jne    0x14001e3bd
   14001e350:	outs   dx,BYTE PTR ds:[rsi]
   14001e351:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001e353:	jne    0x14001e3c3
   14001e355:	je     0x14001e397
   14001e357:	push   rcx
   14001e358:	push   rbx
   14001e359:	outs   dx,DWORD PTR ds:[rsi]
   14001e35a:	jb     0x14001e3d0
   14001e35c:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e365:	js     0x14001e3e0
   14001e367:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e369:	fs gs ins BYTE PTR es:[rdi],dx
   14001e36c:	rex
   14001e36d:	rex push rbp
   14001e36f:	rex.RB
   14001e370:	rex.X
   14001e371:	rex.B
   14001e372:	rex.W
   14001e373:	rex.B
   14001e374:	rex.RB
   14001e375:	rex.X push rsi
   14001e377:	push   rcx
   14001e378:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e37a:	fs gs ins BYTE PTR es:[rdi],dx
   14001e37d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e37f:	fs gs js 0x14001e3c3
   14001e383:	rex
   14001e384:	rex pop rdx
   14001e386:	add    BYTE PTR [rax],al
   14001e388:	movabs al,ds:0x6968437361683f0c
   14001e391:	ins    BYTE PTR es:[rdi],dx
   14001e392:	fs jb  0x14001e3fa
   14001e395:	outs   dx,BYTE PTR ds:[rsi]
   14001e396:	rex push rcx
   14001e398:	push   rbx
   14001e399:	outs   dx,DWORD PTR ds:[rsi]
   14001e39a:	jb     0x14001e410
   14001e39c:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e3a5:	js     0x14001e420
   14001e3a7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e3a9:	fs gs ins BYTE PTR es:[rdi],dx
   14001e3ac:	rex
   14001e3ad:	rex push rbp
   14001e3af:	rex.RB
   14001e3b0:	rex.X
   14001e3b1:	pop    r15
   14001e3b3:	rex.WRX
   14001e3b4:	rex.B
   14001e3b5:	rex.RB
   14001e3b6:	rex.X push rsi
   14001e3b8:	push   rcx
   14001e3b9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e3bb:	fs gs ins BYTE PTR es:[rdi],dx
   14001e3be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e3c0:	fs gs js 0x14001e404
   14001e3c4:	rex
   14001e3c5:	rex pop rdx
   14001e3c7:	add    al,dh
   14001e3c9:	or     DWORD PTR [rdi],edi
   14001e3cb:	fs (bad) 
   14001e3cd:	je     0x14001e430
   14001e3cf:	rex push rcx
   14001e3d1:	push   rbx
   14001e3d2:	outs   dx,DWORD PTR ds:[rsi]
   14001e3d3:	jb     0x14001e449
   14001e3d5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e3de:	js     0x14001e459
   14001e3e0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e3e2:	fs gs ins BYTE PTR es:[rdi],dx
   14001e3e5:	rex
   14001e3e6:	rex push rbp
   14001e3e8:	rex.RB
   14001e3e9:	rex.X
   14001e3ea:	rex.B (bad) 
   14001e3ec:	push   r14
   14001e3ee:	push   rcx
   14001e3ef:	push   rsi
   14001e3f0:	(bad)  
   14001e3f1:	jb     0x14001e45c
   14001e3f3:	(bad)  
   14001e3f4:	outs   dx,BYTE PTR ds:[rsi]
   14001e3f5:	je     0x14001e437
   14001e3f7:	rex
   14001e3f8:	rex.B
   14001e3f9:	rex.RB
   14001e3fa:	rex.X push rsi
   14001e3fc:	push   rcx
   14001e3fd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e3ff:	fs gs ins BYTE PTR es:[rdi],dx
   14001e402:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e404:	fs gs js 0x14001e448
   14001e408:	rex
   14001e409:	rex.W
   14001e40a:	rex pop rdx
   14001e40c:	add    BYTE PTR [rax],al
   14001e40e:	movsxd edx,DWORD PTR [rip+0x7465733f]        # 0x1b4675753
   14001e414:	rex.R (bad) 
   14001e416:	je     0x14001e479
   14001e418:	rex push rcx
   14001e41a:	push   rbx
   14001e41b:	outs   dx,DWORD PTR ds:[rsi]
   14001e41c:	jb     0x14001e492
   14001e41e:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e427:	js     0x14001e4a2
   14001e429:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e42b:	fs gs ins BYTE PTR es:[rdi],dx
   14001e42e:	rex
   14001e42f:	rex push rbp
   14001e431:	rex.RB
   14001e432:	rex.B
   14001e433:	pop    r15
   14001e435:	rex.WRX
   14001e436:	rex.B
   14001e437:	rex.RB
   14001e438:	rex.X push rsi
   14001e43a:	push   rcx
   14001e43b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e43d:	fs gs ins BYTE PTR es:[rdi],dx
   14001e440:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e442:	fs gs js 0x14001e486
   14001e446:	rex
   14001e447:	rex.B
   14001e448:	rex.RB
   14001e449:	rex.X push rsi
   14001e44b:	push   rcx
   14001e44c:	push   rsi
   14001e44d:	(bad)  
   14001e44e:	jb     0x14001e4b9
   14001e450:	(bad)  
   14001e451:	outs   dx,BYTE PTR ds:[rsi]
   14001e452:	je     0x14001e494
   14001e454:	rex
   14001e455:	rex.W
   14001e456:	rex pop rdx
   14001e458:	add    BYTE PTR [rax],al
   14001e45a:	(bad)  
   14001e45b:	adc    eax,0x7465733f
   14001e460:	rex.W
   14001e461:	gs (bad) 
   14001e463:	fs gs jb 0x14001e4ab
   14001e467:	(bad)  
   14001e468:	je     0x14001e4cb
   14001e46a:	rex push rcx
   14001e46c:	push   rbx
   14001e46d:	outs   dx,DWORD PTR ds:[rsi]
   14001e46e:	jb     0x14001e4e4
   14001e470:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e479:	js     0x14001e4f4
   14001e47b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e47d:	fs gs ins BYTE PTR es:[rdi],dx
   14001e480:	rex
   14001e481:	rex push rbp
   14001e483:	rex.RB
   14001e484:	rex.B
   14001e485:	pop    r15
   14001e487:	rex.WRX
   14001e488:	rex.W push rdi
   14001e48a:	xor    al,0x4f
   14001e48c:	jb     0x14001e4f7
   14001e48e:	outs   dx,BYTE PTR gs:[rsi]
   14001e490:	je     0x14001e4f3
   14001e492:	je     0x14001e4fd
   14001e494:	outs   dx,DWORD PTR ds:[rsi]
   14001e495:	outs   dx,BYTE PTR ds:[rsi]
   14001e496:	rex push rcx
   14001e498:	je     0x14001e4da
   14001e49a:	rex
   14001e49b:	rex.B
   14001e49c:	rex.RB
   14001e49d:	rex.X push rsi
   14001e49f:	push   rcx
   14001e4a0:	push   rsi
   14001e4a1:	(bad)  
   14001e4a2:	jb     0x14001e50d
   14001e4a4:	(bad)  
   14001e4a5:	outs   dx,BYTE PTR ds:[rsi]
   14001e4a6:	je     0x14001e4e8
   14001e4a8:	rex
   14001e4a9:	rex.W
   14001e4aa:	rex pop rdx
   14001e4ac:	add    BYTE PTR [rax],al
   14001e4ae:	icebp  
   14001e4af:	(bad)  
   14001e4b0:	(bad)  
   14001e4b1:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x61746144
   14001e4b9:	rex push rcx
   14001e4bb:	(bad)
   14001e4c1:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001e4c5:	outs   dx,DWORD PTR ds:[rsi]
   14001e4c6:	js     0x14001e541
   14001e4c8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e4ca:	fs gs ins BYTE PTR es:[rdi],dx
   14001e4cd:	rex
   14001e4ce:	rex push rbp
   14001e4d0:	rex.RB
   14001e4d1:	rex.X
   14001e4d2:	rex.B (bad) 
   14001e4d4:	push   r14
   14001e4d6:	(bad)  
   14001e4d7:	and    al,0x51
   14001e4d9:	rex.WRB (bad) 
   14001e4db:	jo     0x14001e51d
   14001e4dd:	rex.W push rsi
   14001e4df:	push   rcx
   14001e4e0:	push   rsi
   14001e4e1:	(bad)  
   14001e4e2:	jb     0x14001e54d
   14001e4e4:	(bad)  
   14001e4e5:	outs   dx,BYTE PTR ds:[rsi]
   14001e4e6:	je     0x14001e528
   14001e4e8:	rex
   14001e4e9:	rex
   14001e4ea:	rex
   14001e4eb:	rex.B
   14001e4ec:	rex.RB
   14001e4ed:	rex.X push rsi
   14001e4ef:	push   rcx
   14001e4f0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e4f2:	fs gs ins BYTE PTR es:[rdi],dx
   14001e4f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e4f7:	fs gs js 0x14001e53b
   14001e4fb:	rex
   14001e4fc:	rex pop rdx
   14001e4fe:	add    BYTE PTR [rax],al
   14001e500:	fist   DWORD PTR [rip+0x7465733f]        # 0x1b4675845
   14001e506:	rex.WB je 0x14001e56e
   14001e509:	ins    DWORD PTR es:[rdi],dx
   14001e50a:	rex.R (bad) 
   14001e50c:	je     0x14001e56f
   14001e50e:	rex push rcx
   14001e510:	(bad)
   14001e516:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001e51a:	outs   dx,DWORD PTR ds:[rsi]
   14001e51b:	js     0x14001e596
   14001e51d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e51f:	fs gs ins BYTE PTR es:[rdi],dx
   14001e522:	rex
   14001e523:	rex push rbp
   14001e525:	rex.RB
   14001e526:	rex.B
   14001e527:	pop    r15
   14001e529:	rex.WRX
   14001e52a:	rex.B
   14001e52b:	rex.RB
   14001e52c:	rex.X push rsi
   14001e52e:	push   rcx
   14001e52f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e531:	fs gs ins BYTE PTR es:[rdi],dx
   14001e534:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e536:	fs gs js 0x14001e57a
   14001e53a:	rex
   14001e53b:	rex.B
   14001e53c:	rex.RB
   14001e53d:	rex.X push rsi
   14001e53f:	(bad)  
   14001e540:	and    al,0x51
   14001e542:	rex.WRB (bad) 
   14001e544:	jo     0x14001e586
   14001e546:	rex.W push rsi
   14001e548:	push   rcx
   14001e549:	push   rsi
   14001e54a:	(bad)  
   14001e54b:	jb     0x14001e5b6
   14001e54d:	(bad)  
   14001e54e:	outs   dx,BYTE PTR ds:[rsi]
   14001e54f:	je     0x14001e591
   14001e551:	rex
   14001e552:	rex
   14001e553:	rex
   14001e554:	rex pop rdx
   14001e556:	add    BYTE PTR [rax],al
   14001e558:	sub    edx,DWORD PTR [rax]
   14001e55a:	(bad)  
   14001e55b:	ins    DWORD PTR es:[rdi],dx
   14001e55c:	imul   ebp,DWORD PTR [rbp+0x65],0x65707954
   14001e563:	jae    0x14001e5a5
   14001e565:	push   rcx
   14001e566:	push   rbx
   14001e567:	outs   dx,DWORD PTR ds:[rsi]
   14001e568:	jb     0x14001e5de
   14001e56a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e573:	js     0x14001e5ee
   14001e575:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e577:	fs gs ins BYTE PTR es:[rdi],dx
   14001e57a:	rex
   14001e57b:	rex push rbp
   14001e57d:	rex.RB
   14001e57e:	rex.X
   14001e57f:	rex.B (bad) 
   14001e581:	push   r14
   14001e583:	push   rcx
   14001e584:	push   rbx
   14001e585:	je     0x14001e5f9
   14001e587:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001e58e:	rex
   14001e58f:	rex pop rax
   14001e591:	pop    rdx
   14001e592:	add    BYTE PTR [rax],al
   14001e594:	and    BYTE PTR [rax],dl
   14001e596:	(bad)  
   14001e597:	ins    DWORD PTR es:[rdi],dx
   14001e598:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001e59f:	rex push rcx
   14001e5a1:	push   rbx
   14001e5a2:	outs   dx,DWORD PTR ds:[rsi]
   14001e5a3:	jb     0x14001e619
   14001e5a5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e5ae:	js     0x14001e629
   14001e5b0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e5b2:	fs gs ins BYTE PTR es:[rdi],dx
   14001e5b5:	rex
   14001e5b6:	rex push rbp
   14001e5b8:	rex.RB
   14001e5b9:	rex.X
   14001e5ba:	push   r8
   14001e5bc:	rex.RB
   14001e5bd:	push   r14
   14001e5bf:	push   rcx
   14001e5c0:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001e5c8:	rex
   14001e5c9:	rex
   14001e5ca:	rex.B
   14001e5cb:	rex.RB
   14001e5cc:	rex.X push rsi
   14001e5ce:	(bad)  
   14001e5cf:	and    al,0x51
   14001e5d1:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   14001e5d9:	outs   dx,DWORD PTR ds:[rsi]
   14001e5da:	fs gs ins BYTE PTR es:[rdi],dx
   14001e5dd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e5df:	fs gs js 0x14001e623
   14001e5e3:	rex
   14001e5e4:	rex
   14001e5e5:	rex
   14001e5e6:	rex pop rdx
   14001e5e8:	add    BYTE PTR [rax],al
   14001e5ea:	mov    DWORD PTR [rdi],eax
   14001e5ec:	(bad)  
   14001e5ed:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001e5f0:	rex.R jb 0x14001e662
   14001e5f3:	jo     0x14001e642
   14001e5f5:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001e5fc:	rex push rcx
   14001e5fe:	(bad)
   14001e604:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001e608:	outs   dx,DWORD PTR ds:[rsi]
   14001e609:	js     0x14001e684
   14001e60b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e60d:	fs gs ins BYTE PTR es:[rdi],dx
   14001e610:	rex
   14001e611:	rex push rbp
   14001e613:	rex.RB
   14001e614:	rex.X
   14001e615:	pop    r15
   14001e617:	rex.WRX push rax
   14001e619:	rex.RB
   14001e61a:	rex.X push rsi
   14001e61c:	push   rcx
   14001e61d:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001e625:	rex
   14001e626:	rex push rdi
   14001e628:	xor    al,0x44
   14001e62a:	jb     0x14001e69b
   14001e62c:	jo     0x14001e66f
   14001e62e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001e632:	outs   dx,BYTE PTR ds:[rsi]
   14001e633:	rex push rcx
   14001e635:	je     0x14001e677
   14001e637:	rex
   14001e638:	rex.W
   14001e639:	rex.W
   14001e63a:	rex.B
   14001e63b:	rex.RB
   14001e63c:	rex.X push rsi
   14001e63e:	push   rcx
   14001e63f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e641:	fs gs ins BYTE PTR es:[rdi],dx
   14001e644:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e646:	fs gs js 0x14001e68a
   14001e64a:	rex
   14001e64b:	rex pop rdx
   14001e64d:	add    BYTE PTR [rcx+0x72643f0a],bl
   14001e653:	outs   dx,DWORD PTR ds:[rsi]
   14001e654:	jo     0x14001e6a3
   14001e656:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   14001e65d:	rex push rcx
   14001e65f:	push   rbx
   14001e660:	outs   dx,DWORD PTR ds:[rsi]
   14001e661:	jb     0x14001e6d7
   14001e663:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e66c:	js     0x14001e6e7
   14001e66e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e670:	fs gs ins BYTE PTR es:[rdi],dx
   14001e673:	rex
   14001e674:	rex push rbp
   14001e676:	rex.RB
   14001e677:	rex.B
   14001e678:	pop    r15
   14001e67a:	rex.WRX push rax
   14001e67c:	rex.RB
   14001e67d:	rex.X push rsi
   14001e67f:	push   rcx
   14001e680:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001e688:	rex
   14001e689:	rex push rdi
   14001e68b:	xor    al,0x44
   14001e68d:	jb     0x14001e6fe
   14001e68f:	jo     0x14001e6d2
   14001e691:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001e695:	outs   dx,BYTE PTR ds:[rsi]
   14001e696:	rex push rcx
   14001e698:	je     0x14001e6da
   14001e69a:	rex
   14001e69b:	rex.W
   14001e69c:	rex.W
   14001e69d:	rex.B
   14001e69e:	rex.RB
   14001e69f:	rex.X push rsi
   14001e6a1:	push   rcx
   14001e6a2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e6a4:	fs gs ins BYTE PTR es:[rdi],dx
   14001e6a7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e6a9:	fs gs js 0x14001e6ed
   14001e6ad:	rex
   14001e6ae:	rex pop rdx
   14001e6b0:	add    BYTE PTR [rax],al
   14001e6b2:	jmp    0x1b57525ce
   14001e6b7:	jo     0x14001e729
   14001e6b9:	outs   dx,DWORD PTR ds:[rsi]
   14001e6ba:	jb     0x14001e730
   14001e6bc:	gs fs rex.R jb 0x14001e730
   14001e6c1:	jo     0x14001e704
   14001e6c3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001e6c7:	outs   dx,BYTE PTR ds:[rsi]
   14001e6c8:	jae    0x14001e70a
   14001e6ca:	push   rcx
   14001e6cb:	push   rbx
   14001e6cc:	outs   dx,DWORD PTR ds:[rsi]
   14001e6cd:	jb     0x14001e743
   14001e6cf:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e6d8:	js     0x14001e753
   14001e6da:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e6dc:	fs gs ins BYTE PTR es:[rdi],dx
   14001e6df:	rex
   14001e6e0:	rex push rbp
   14001e6e2:	rex.RB
   14001e6e3:	rex.X
   14001e6e4:	rex.B (bad) 
   14001e6e6:	push   r14
   14001e6e8:	(bad)  
   14001e6e9:	and    al,0x51
   14001e6eb:	rex.RX ins BYTE PTR es:[rdi],dx
   14001e6ed:	(bad)  
   14001e6ee:	addr32 jae 0x14001e731
   14001e6f1:	push   rdi
   14001e6f2:	xor    al,0x44
   14001e6f4:	jb     0x14001e765
   14001e6f6:	jo     0x14001e739
   14001e6f8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001e6fc:	outs   dx,BYTE PTR ds:[rsi]
   14001e6fd:	rex push rcx
   14001e6ff:	je     0x14001e741
   14001e701:	rex
   14001e702:	rex
   14001e703:	rex pop rax
   14001e705:	pop    rdx
   14001e706:	add    BYTE PTR [rax],al
   14001e708:	out    0x17,al
   14001e70a:	(bad)  
   14001e70b:	jae    0x14001e782
   14001e70d:	jo     0x14001e77f
   14001e70f:	outs   dx,DWORD PTR ds:[rsi]
   14001e710:	jb     0x14001e786
   14001e712:	gs fs rex.R jb 0x14001e778
   14001e717:	movsxd esi,DWORD PTR [r9d+ebp*2+0x6f]
   14001e71d:	outs   dx,BYTE PTR ds:[rsi]
   14001e71e:	jae    0x14001e760
   14001e720:	push   rcx
   14001e721:	(bad)
   14001e727:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001e72b:	outs   dx,DWORD PTR ds:[rsi]
   14001e72c:	js     0x14001e7a7
   14001e72e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e730:	fs gs ins BYTE PTR es:[rdi],dx
   14001e733:	rex
   14001e734:	rex push rbp
   14001e736:	rex.RB
   14001e737:	rex.X
   14001e738:	rex.B (bad) 
   14001e73a:	push   r14
   14001e73c:	(bad)  
   14001e73d:	and    al,0x51
   14001e73f:	rex.RX ins BYTE PTR es:[rdi],dx
   14001e741:	(bad)  
   14001e742:	addr32 jae 0x14001e785
   14001e745:	push   rdi
   14001e746:	xor    al,0x44
   14001e748:	jb     0x14001e7b9
   14001e74a:	jo     0x14001e78d
   14001e74c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001e750:	outs   dx,BYTE PTR ds:[rsi]
   14001e751:	rex push rcx
   14001e753:	je     0x14001e795
   14001e755:	rex
   14001e756:	rex
   14001e757:	rex pop rax
   14001e759:	pop    rdx
   14001e75a:	add    BYTE PTR [rax],al
   14001e75c:	push   0x6e693f0d
   14001e761:	jae    0x14001e7c8
   14001e763:	jb     0x14001e7d9
   14001e765:	push   rdx
   14001e766:	outs   dx,DWORD PTR ds:[rsi]
   14001e767:	ja     0x14001e7dc
   14001e769:	rex push rcx
   14001e76b:	push   rbx
   14001e76c:	outs   dx,DWORD PTR ds:[rsi]
   14001e76d:	jb     0x14001e7e3
   14001e76f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e778:	js     0x14001e7f3
   14001e77a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e77c:	fs gs ins BYTE PTR es:[rdi],dx
   14001e77f:	rex
   14001e780:	rex push rbp
   14001e782:	rex.RB
   14001e783:	rex.B
   14001e784:	pop    r15
   14001e786:	rex.WRX
   14001e787:	rex.W
   14001e788:	rex.W
   14001e789:	rex.B
   14001e78a:	rex.RB
   14001e78b:	rex.X push rsi
   14001e78d:	push   rcx
   14001e78e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e790:	fs gs ins BYTE PTR es:[rdi],dx
   14001e793:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e795:	fs gs js 0x14001e7d9
   14001e799:	rex
   14001e79a:	rex pop rdx
   14001e79c:	add    BYTE PTR [rax],al
   14001e79e:	(bad)  
   14001e79f:	or     eax,0x736e693f
   14001e7a4:	gs jb  0x14001e81b
   14001e7a7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001e7a9:	ins    BYTE PTR es:[rdi],dx
   14001e7aa:	jne    0x14001e819
   14001e7ac:	outs   dx,BYTE PTR ds:[rsi]
   14001e7ad:	jae    0x14001e7ef
   14001e7af:	push   rcx
   14001e7b0:	push   rbx
   14001e7b1:	outs   dx,DWORD PTR ds:[rsi]
   14001e7b2:	jb     0x14001e828
   14001e7b4:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e7bd:	js     0x14001e838
   14001e7bf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e7c1:	fs gs ins BYTE PTR es:[rdi],dx
   14001e7c4:	rex
   14001e7c5:	rex push rbp
   14001e7c7:	rex.RB
   14001e7c8:	rex.B
   14001e7c9:	pop    r15
   14001e7cb:	rex.WRX
   14001e7cc:	rex.W
   14001e7cd:	rex.W
   14001e7ce:	rex.B
   14001e7cf:	rex.RB
   14001e7d0:	rex.X push rsi
   14001e7d2:	push   rcx
   14001e7d3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e7d5:	fs gs ins BYTE PTR es:[rdi],dx
   14001e7d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e7da:	fs gs js 0x14001e81e
   14001e7de:	rex
   14001e7df:	rex pop rdx
   14001e7e1:	add    BYTE PTR [rax],dl
   14001e7e3:	adc    al,0x3f
   14001e7e5:	jb     0x14001e84c
   14001e7e7:	ins    DWORD PTR es:[rdi],dx
   14001e7e8:	outs   dx,DWORD PTR ds:[rsi]
   14001e7e9:	jbe    0x14001e850
   14001e7eb:	push   rdx
   14001e7ec:	outs   dx,DWORD PTR ds:[rsi]
   14001e7ed:	ja     0x14001e862
   14001e7ef:	rex push rcx
   14001e7f1:	push   rbx
   14001e7f2:	outs   dx,DWORD PTR ds:[rsi]
   14001e7f3:	jb     0x14001e869
   14001e7f5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e7fe:	js     0x14001e879
   14001e800:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e802:	fs gs ins BYTE PTR es:[rdi],dx
   14001e805:	rex
   14001e806:	rex push rbp
   14001e808:	rex.RB
   14001e809:	rex.B
   14001e80a:	pop    r15
   14001e80c:	rex.WRX
   14001e80d:	rex.W
   14001e80e:	rex.W
   14001e80f:	rex.B
   14001e810:	rex.RB
   14001e811:	rex.X push rsi
   14001e813:	push   rcx
   14001e814:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e816:	fs gs ins BYTE PTR es:[rdi],dx
   14001e819:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e81b:	fs gs js 0x14001e85f
   14001e81f:	rex
   14001e820:	rex pop rdx
   14001e822:	add    BYTE PTR [rax],al
   14001e824:	in     eax,0x13
   14001e826:	(bad)  
   14001e827:	jb     0x14001e88e
   14001e829:	ins    DWORD PTR es:[rdi],dx
   14001e82a:	outs   dx,DWORD PTR ds:[rsi]
   14001e82b:	jbe    0x14001e892
   14001e82d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001e82f:	ins    BYTE PTR es:[rdi],dx
   14001e830:	jne    0x14001e89f
   14001e832:	outs   dx,BYTE PTR ds:[rsi]
   14001e833:	jae    0x14001e875
   14001e835:	push   rcx
   14001e836:	push   rbx
   14001e837:	outs   dx,DWORD PTR ds:[rsi]
   14001e838:	jb     0x14001e8ae
   14001e83a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e843:	js     0x14001e8be
   14001e845:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e847:	fs gs ins BYTE PTR es:[rdi],dx
   14001e84a:	rex
   14001e84b:	rex push rbp
   14001e84d:	rex.RB
   14001e84e:	rex.B
   14001e84f:	pop    r15
   14001e851:	rex.WRX
   14001e852:	rex.W
   14001e853:	rex.W
   14001e854:	rex.B
   14001e855:	rex.RB
   14001e856:	rex.X push rsi
   14001e858:	push   rcx
   14001e859:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e85b:	fs gs ins BYTE PTR es:[rdi],dx
   14001e85e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e860:	fs gs js 0x14001e8a4
   14001e864:	rex
   14001e865:	rex pop rdx
   14001e867:	add    BYTE PTR [rsi+0x65663f0b],bl
   14001e86d:	je     0x14001e8d2
   14001e86f:	push   0x65726f4d
   14001e874:	rex push rcx
   14001e876:	push   rbx
   14001e877:	outs   dx,DWORD PTR ds:[rsi]
   14001e878:	jb     0x14001e8ee
   14001e87a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e883:	js     0x14001e8fe
   14001e885:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e887:	fs gs ins BYTE PTR es:[rdi],dx
   14001e88a:	rex
   14001e88b:	rex push rbp
   14001e88d:	rex.RB
   14001e88e:	rex.B
   14001e88f:	pop    r8
   14001e891:	rex.B
   14001e892:	rex.RB
   14001e893:	rex.X push rsi
   14001e895:	push   rcx
   14001e896:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e898:	fs gs ins BYTE PTR es:[rdi],dx
   14001e89b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e89d:	fs gs js 0x14001e8e1
   14001e8a1:	rex
   14001e8a2:	rex pop rdx
   14001e8a4:	add    BYTE PTR [rax],al
   14001e8a6:	mov    es,WORD PTR [rdi]
   14001e8a8:	(bad)  
   14001e8a9:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001e8ac:	rex.RX
   14001e8ad:	gs je  0x14001e913
   14001e8b0:	push   0x65726f4d
   14001e8b5:	rex push rcx
   14001e8b7:	push   rbx
   14001e8b8:	outs   dx,DWORD PTR ds:[rsi]
   14001e8b9:	jb     0x14001e92f
   14001e8bb:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e8c4:	js     0x14001e93f
   14001e8c6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e8c8:	fs gs ins BYTE PTR es:[rdi],dx
   14001e8cb:	rex
   14001e8cc:	rex push rbp
   14001e8ce:	rex.RB
   14001e8cf:	rex.X
   14001e8d0:	pop    r15
   14001e8d2:	rex.WRX
   14001e8d3:	rex.B
   14001e8d4:	rex.RB
   14001e8d5:	rex.X push rsi
   14001e8d7:	push   rcx
   14001e8d8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e8da:	fs gs ins BYTE PTR es:[rdi],dx
   14001e8dd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e8df:	fs gs js 0x14001e923
   14001e8e3:	rex
   14001e8e4:	rex pop rdx
   14001e8e6:	add    BYTE PTR [rax],al
   14001e8e8:	test   BYTE PTR [rbx],0x3f
   14001e8eb:	data16 ins BYTE PTR es:[rdi],dx
   14001e8ed:	(bad)  
   14001e8ee:	addr32 jae 0x14001e931
   14001e8f1:	push   rcx
   14001e8f2:	push   rbx
   14001e8f3:	outs   dx,DWORD PTR ds:[rsi]
   14001e8f4:	jb     0x14001e96a
   14001e8f6:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e8ff:	js     0x14001e97a
   14001e901:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e903:	fs gs ins BYTE PTR es:[rdi],dx
   14001e906:	rex
   14001e907:	rex push rbp
   14001e909:	rex.RB
   14001e90a:	rex.X
   14001e90b:	rex.B (bad) 
   14001e90d:	push   r14
   14001e90f:	(bad)  
   14001e910:	and    al,0x51
   14001e912:	rex.RX ins BYTE PTR es:[rdi],dx
   14001e914:	(bad)  
   14001e915:	addr32 jae 0x14001e958
   14001e918:	push   rdi
   14001e919:	xor    al,0x49
   14001e91b:	je     0x14001e982
   14001e91d:	ins    DWORD PTR es:[rdi],dx
   14001e91e:	rex.RX ins BYTE PTR es:[rdi],dx
   14001e920:	(bad)  
   14001e921:	addr32 rex push rcx
   14001e924:	je     0x14001e966
   14001e926:	rex
   14001e927:	rex
   14001e928:	rex
   14001e929:	rex.B
   14001e92a:	rex.RB
   14001e92b:	rex.X push rsi
   14001e92d:	push   rcx
   14001e92e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e930:	fs gs ins BYTE PTR es:[rdi],dx
   14001e933:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e935:	fs gs js 0x14001e979
   14001e939:	rex
   14001e93a:	rex pop rdx
   14001e93c:	add    BYTE PTR [rax],al
   14001e93e:	sbb    dl,BYTE PTR [rdi]
   14001e940:	(bad)  
   14001e941:	jae    0x14001e9b2
   14001e943:	jb     0x14001e9b9
   14001e945:	rex push rcx
   14001e947:	push   rbx
   14001e948:	outs   dx,DWORD PTR ds:[rsi]
   14001e949:	jb     0x14001e9bf
   14001e94b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e954:	js     0x14001e9cf
   14001e956:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e958:	fs gs ins BYTE PTR es:[rdi],dx
   14001e95b:	rex
   14001e95c:	rex push rbp
   14001e95e:	rex.RB
   14001e95f:	rex.B
   14001e960:	pop    r8
   14001e962:	rex.W push rdi
   14001e964:	xor    al,0x53
   14001e966:	outs   dx,DWORD PTR ds:[rsi]
   14001e967:	jb     0x14001e9dd
   14001e969:	rex.WRXB jb 0x14001e9d0
   14001e96c:	gs jb  0x14001e9af
   14001e96f:	push   rcx
   14001e970:	je     0x14001e9b2
   14001e972:	rex
   14001e973:	rex pop rdx
   14001e975:	add    BYTE PTR [rbx+0x7],ch
   14001e978:	(bad)  
   14001e979:	(bad)  
   14001e97a:	jne    0x14001e9e0
   14001e97c:	fs jns 0x14001e9bf
   14001e97f:	push   rcx
   14001e980:	push   rbx
   14001e981:	outs   dx,DWORD PTR ds:[rsi]
   14001e982:	jb     0x14001e9f8
   14001e984:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e98d:	js     0x14001ea08
   14001e98f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e991:	fs gs ins BYTE PTR es:[rdi],dx
   14001e994:	rex
   14001e995:	rex push rbp
   14001e997:	rex.RB
   14001e998:	rex.X
   14001e999:	rex.B (bad) 
   14001e99b:	push   r14
   14001e99d:	push   rcx
   14001e99e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e9a0:	fs gs ins BYTE PTR es:[rdi],dx
   14001e9a3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e9a5:	fs gs js 0x14001e9e9
   14001e9a9:	rex
   14001e9aa:	rex.B
   14001e9ab:	rex.RB
   14001e9ac:	rex.X push rsi
   14001e9ae:	xor    al,BYTE PTR [rax+0x40]
   14001e9b1:	pop    rdx
   14001e9b2:	add    BYTE PTR [rax],al
   14001e9b4:	scas   al,BYTE PTR es:[rdi]
   14001e9b5:	(bad)  
   14001e9b7:	ins    DWORD PTR es:[rdi],dx
   14001e9b8:	(bad)  
   14001e9b9:	je     0x14001ea1e
   14001e9bb:	push   0x6f535140
   14001e9c0:	jb     0x14001ea36
   14001e9c2:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001e9cb:	js     0x14001ea46
   14001e9cd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e9cf:	fs gs ins BYTE PTR es:[rdi],dx
   14001e9d2:	rex
   14001e9d3:	rex push rbp
   14001e9d5:	rex.RB
   14001e9d6:	rex.X
   14001e9d7:	rex.B (bad) 
   14001e9d9:	push   r14
   14001e9db:	(bad)  
   14001e9dc:	and    al,0x51
   14001e9de:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   14001e9e6:	outs   dx,DWORD PTR ds:[rsi]
   14001e9e7:	fs gs ins BYTE PTR es:[rdi],dx
   14001e9ea:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e9ec:	fs gs js 0x14001ea30
   14001e9f0:	rex
   14001e9f1:	rex
   14001e9f2:	rex
   14001e9f3:	rex.B
   14001e9f4:	rex.RB
   14001e9f5:	rex.X push rsi
   14001e9f7:	push   rcx
   14001e9f8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001e9fa:	fs gs ins BYTE PTR es:[rdi],dx
   14001e9fd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e9ff:	fs gs js 0x14001ea43
   14001ea03:	rex
   14001ea04:	rex.W
   14001ea05:	rex.B
   14001ea06:	rex.RB
   14001ea07:	rex.X push rsi
   14001ea09:	push   rcx
   14001ea0a:	push   rsi
   14001ea0b:	(bad)  
   14001ea0c:	jb     0x14001ea77
   14001ea0e:	(bad)  
   14001ea0f:	outs   dx,BYTE PTR ds:[rsi]
   14001ea10:	je     0x14001ea52
   14001ea12:	rex
   14001ea13:	rex.W push rsi
   14001ea15:	(bad)  
   14001ea16:	and    al,0x51
   14001ea18:	rex.RX ins BYTE PTR es:[rdi],dx
   14001ea1a:	(bad)  
   14001ea1b:	addr32 jae 0x14001ea5e
   14001ea1e:	push   rdi
   14001ea1f:	xor    al,0x4d
   14001ea21:	(bad)  
   14001ea22:	je     0x14001ea87
   14001ea24:	push   0x67616c46
   14001ea29:	rex push rcx
   14001ea2b:	je     0x14001ea6d
   14001ea2d:	rex
   14001ea2e:	rex
   14001ea2f:	rex
   14001ea30:	rex pop rdx
   14001ea32:	add    BYTE PTR [rax],al
   14001ea34:	sub    DWORD PTR [rdi],edx
   14001ea36:	(bad)  
   14001ea37:	jae    0x14001eaa9
   14001ea39:	(bad)  
   14001ea3a:	outs   dx,BYTE PTR ds:[rsi]
   14001ea3b:	rex push rcx
   14001ea3d:	push   rbx
   14001ea3e:	outs   dx,DWORD PTR ds:[rsi]
   14001ea3f:	jb     0x14001eab5
   14001ea41:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001ea4a:	js     0x14001eac5
   14001ea4c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ea4e:	fs gs ins BYTE PTR es:[rdi],dx
   14001ea51:	rex
   14001ea52:	rex push rbp
   14001ea54:	rex.RB
   14001ea55:	rex.X
   14001ea56:	rex.B (bad) 
   14001ea58:	push   r14
   14001ea5a:	push   rcx
   14001ea5b:	push   rbx
   14001ea5c:	imul   edi,DWORD PTR [rdx+0x65],0x45414040
   14001ea63:	rex.X push rsi
   14001ea65:	push   rcx
   14001ea66:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ea68:	fs gs ins BYTE PTR es:[rdi],dx
   14001ea6b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ea6d:	fs gs js 0x14001eab1
   14001ea71:	rex
   14001ea72:	rex pop rdx
   14001ea74:	add    BYTE PTR [rax],al
   14001ea76:	fist   WORD PTR [rdi]
   14001ea78:	(bad)  
   14001ea79:	jae    0x14001eaf0
   14001ea7b:	(bad)  
   14001ea7c:	ins    DWORD PTR es:[rdi],dx
   14001ea7d:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x74736241
   14001ea85:	jb     0x14001eae8
   14001ea87:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001ea8b:	outs   dx,DWORD PTR ds:[rsi]
   14001ea8c:	js     0x14001eb07
   14001ea8e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ea90:	fs gs ins BYTE PTR es:[rdi],dx
   14001ea93:	rex
   14001ea94:	rex push rbp
   14001ea96:	rex.RB
   14001ea97:	rex.B
   14001ea98:	pop    r15
   14001ea9a:	rex.WRX pop rax
   14001ea9c:	pop    rdx
   14001ea9d:	add    BYTE PTR [rdi+0x65723f14],dl
   14001eaa3:	jbe    0x14001eb0a
   14001eaa5:	jb     0x14001eb1b
   14001eaa7:	rex push rcx
   14001eaa9:	(bad)
   14001eaaf:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001eab3:	outs   dx,DWORD PTR ds:[rsi]
   14001eab4:	js     0x14001eb2f
   14001eab6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eab8:	fs gs ins BYTE PTR es:[rdi],dx
   14001eabb:	rex
   14001eabc:	rex push rbp
   14001eabe:	rex.RB
   14001eabf:	rex.B
   14001eac0:	pop    r8
   14001eac2:	pop    rax
   14001eac3:	pop    rdx
   14001eac4:	add    BYTE PTR [rax],al
   14001eac6:	jnp    0x14001eade
   14001eac8:	(bad)  
   14001eac9:	jae    0x14001eb30
   14001eacb:	je     0x14001eb20
   14001eacd:	outs   dx,DWORD PTR ds:[rsi]
   14001eace:	jne    0x14001eb42
   14001ead0:	movsxd esp,DWORD PTR [rbp+0x4d]
   14001ead3:	outs   dx,DWORD PTR ds:[rsi]
   14001ead4:	fs gs ins BYTE PTR es:[rdi],dx
   14001ead7:	rex push rcx
   14001ead9:	push   rbx
   14001eada:	outs   dx,DWORD PTR ds:[rsi]
   14001eadb:	jb     0x14001eb51
   14001eadd:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001eae6:	js     0x14001eb61
   14001eae8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eaea:	fs gs ins BYTE PTR es:[rdi],dx
   14001eaed:	rex
   14001eaee:	rex push rbp
   14001eaf0:	rex.RB
   14001eaf1:	rex.B
   14001eaf2:	pop    r8
   14001eaf4:	push   rax
   14001eaf5:	rex.RB
   14001eaf6:	push   r14
   14001eaf8:	push   rcx
   14001eaf9:	(bad)
   14001eaff:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001eb03:	gs ins DWORD PTR es:[rdi],dx
   14001eb05:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eb07:	fs gs ins BYTE PTR es:[rdi],dx
   14001eb0a:	rex
   14001eb0b:	rex
   14001eb0c:	rex pop rdx
   14001eb0e:	add    BYTE PTR [rax],al
   14001eb10:	fwait
   14001eb11:	(bad)  
   14001eb13:	ins    DWORD PTR es:[rdi],dx
   14001eb14:	(bad)  
   14001eb15:	jo     0x14001eb6b
   14001eb17:	outs   dx,DWORD PTR ds:[rsi]
   14001eb18:	push   rbx
   14001eb19:	outs   dx,DWORD PTR ds:[rsi]
   14001eb1a:	jne    0x14001eb8e
   14001eb1c:	movsxd esp,DWORD PTR [rbp+0x40]
   14001eb1f:	push   rcx
   14001eb20:	push   rbx
   14001eb21:	outs   dx,DWORD PTR ds:[rsi]
   14001eb22:	jb     0x14001eb98
   14001eb24:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001eb2d:	js     0x14001eba8
   14001eb2f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eb31:	fs gs ins BYTE PTR es:[rdi],dx
   14001eb34:	rex
   14001eb35:	rex push rbp
   14001eb37:	rex.RB
   14001eb38:	rex.X
   14001eb39:	rex.B (bad) 
   14001eb3b:	push   r14
   14001eb3d:	push   rcx
   14001eb3e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eb40:	fs gs ins BYTE PTR es:[rdi],dx
   14001eb43:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001eb45:	fs gs js 0x14001eb89
   14001eb49:	rex
   14001eb4a:	rex.B
   14001eb4b:	rex.RB
   14001eb4c:	rex.X push rsi
   14001eb4e:	xor    al,BYTE PTR [rax+0x40]
   14001eb51:	pop    rdx
   14001eb52:	add    BYTE PTR [rax],al
   14001eb54:	xchg   ebx,eax
   14001eb55:	(bad)  
   14001eb57:	ins    DWORD PTR es:[rdi],dx
   14001eb58:	(bad)  
   14001eb59:	jo     0x14001eba1
   14001eb5b:	jb     0x14001ebcc
   14001eb5d:	ins    DWORD PTR es:[rdi],dx
   14001eb5e:	push   rbx
   14001eb5f:	outs   dx,DWORD PTR ds:[rsi]
   14001eb60:	jne    0x14001ebd4
   14001eb62:	movsxd esp,DWORD PTR [rbp+0x40]
   14001eb65:	push   rcx
   14001eb66:	push   rbx
   14001eb67:	outs   dx,DWORD PTR ds:[rsi]
   14001eb68:	jb     0x14001ebde
   14001eb6a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001eb73:	js     0x14001ebee
   14001eb75:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eb77:	fs gs ins BYTE PTR es:[rdi],dx
   14001eb7a:	rex
   14001eb7b:	rex push rbp
   14001eb7d:	rex.RB
   14001eb7e:	rex.X
   14001eb7f:	rex.B (bad) 
   14001eb81:	push   r14
   14001eb83:	push   rcx
   14001eb84:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eb86:	fs gs ins BYTE PTR es:[rdi],dx
   14001eb89:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001eb8b:	fs gs js 0x14001ebcf
   14001eb8f:	rex
   14001eb90:	rex.B
   14001eb91:	rex.RB
   14001eb92:	rex.X push rsi
   14001eb94:	xor    al,BYTE PTR [rax+0x40]
   14001eb97:	pop    rdx
   14001eb98:	add    BYTE PTR [rax],al
   14001eb9a:	cdq    
   14001eb9b:	(bad)  
   14001eb9d:	ins    DWORD PTR es:[rdi],dx
   14001eb9e:	(bad)  
   14001eb9f:	jo     0x14001ebf4
   14001eba1:	gs ins BYTE PTR es:[rdi],dx
   14001eba3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001eba8:	outs   dx,BYTE PTR ds:[rsi]
   14001eba9:	push   rsp
   14001ebaa:	outs   dx,DWORD PTR ds:[rsi]
   14001ebab:	push   rbx
   14001ebac:	outs   dx,DWORD PTR ds:[rsi]
   14001ebad:	jne    0x14001ec21
   14001ebaf:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ebb2:	push   rcx
   14001ebb3:	push   rbx
   14001ebb4:	outs   dx,DWORD PTR ds:[rsi]
   14001ebb5:	jb     0x14001ec2b
   14001ebb7:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001ebc0:	js     0x14001ec3b
   14001ebc2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ebc4:	fs gs ins BYTE PTR es:[rdi],dx
   14001ebc7:	rex
   14001ebc8:	rex push rbp
   14001ebca:	rex.RB
   14001ebcb:	rex.X
   14001ebcc:	rex.B (bad) 
   14001ebce:	push   r14
   14001ebd0:	push   rcx
   14001ebd1:	rex.WB je 0x14001ec39
   14001ebd4:	ins    DWORD PTR es:[rdi],dx
   14001ebd5:	push   rbx
   14001ebd6:	gs ins BYTE PTR es:[rdi],dx
   14001ebd8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ebdd:	outs   dx,BYTE PTR ds:[rsi]
   14001ebde:	rex
   14001ebdf:	rex
   14001ebe0:	rex.B
   14001ebe1:	rex.RB
   14001ebe2:	rex.X push rsi
   14001ebe4:	xor    al,BYTE PTR [rax+0x40]
   14001ebe7:	pop    rdx
   14001ebe8:	add    BYTE PTR [rax],al
   14001ebea:	xchg   esi,eax
   14001ebeb:	(bad)  
   14001ebed:	ins    DWORD PTR es:[rdi],dx
   14001ebee:	(bad)  
   14001ebef:	jo     0x14001ec44
   14001ebf1:	gs ins BYTE PTR es:[rdi],dx
   14001ebf3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ebf8:	outs   dx,BYTE PTR ds:[rsi]
   14001ebf9:	rex.RX jb 0x14001ec6b
   14001ebfc:	ins    DWORD PTR es:[rdi],dx
   14001ebfd:	push   rbx
   14001ebfe:	outs   dx,DWORD PTR ds:[rsi]
   14001ebff:	jne    0x14001ec73
   14001ec01:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ec04:	push   rcx
   14001ec05:	push   rbx
   14001ec06:	outs   dx,DWORD PTR ds:[rsi]
   14001ec07:	jb     0x14001ec7d
   14001ec09:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001ec12:	js     0x14001ec8d
   14001ec14:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ec16:	fs gs ins BYTE PTR es:[rdi],dx
   14001ec19:	rex
   14001ec1a:	rex push rbp
   14001ec1c:	rex.RB
   14001ec1d:	rex.X
   14001ec1e:	rex.B (bad) 
   14001ec20:	push   r14
   14001ec22:	push   rcx
   14001ec23:	rex.WB je 0x14001ec8b
   14001ec26:	ins    DWORD PTR es:[rdi],dx
   14001ec27:	push   rbx
   14001ec28:	gs ins BYTE PTR es:[rdi],dx
   14001ec2a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ec2f:	outs   dx,BYTE PTR ds:[rsi]
   14001ec30:	rex
   14001ec31:	rex
   14001ec32:	rex.B
   14001ec33:	rex.RB
   14001ec34:	rex.X push rsi
   14001ec36:	xor    al,BYTE PTR [rax+0x40]
   14001ec39:	pop    rdx
   14001ec3a:	add    BYTE PTR [rax],al
   14001ec3c:	(bad)  
   14001ec3d:	or     edi,DWORD PTR [rdi]
   14001ec3f:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x4172
   14001ec46:	movsxd esp,DWORD PTR [rbx+0x65]
   14001ec49:	jo     0x14001ecbf
   14001ec4b:	jae    0x14001ec9f
   14001ec4d:	outs   dx,DWORD PTR ds:[rsi]
   14001ec4e:	ja     0x14001ec90
   14001ec50:	push   rcx
   14001ec51:	push   rbx
   14001ec52:	outs   dx,DWORD PTR ds:[rsi]
   14001ec53:	jb     0x14001ecc9
   14001ec55:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001ec5e:	js     0x14001ecd9
   14001ec60:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ec62:	fs gs ins BYTE PTR es:[rdi],dx
   14001ec65:	rex
   14001ec66:	rex
   14001ec67:	rex.WRB
   14001ec68:	rex.RB
   14001ec69:	rex.X
   14001ec6a:	pop    r15
   14001ec6c:	rex.WRX
   14001ec6d:	rex.W
   14001ec6e:	rex.B
   14001ec6f:	rex.RB
   14001ec70:	rex.X push rsi
   14001ec72:	push   rcx
   14001ec73:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ec75:	fs gs ins BYTE PTR es:[rdi],dx
   14001ec78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ec7a:	fs gs js 0x14001ecbe
   14001ec7e:	rex
   14001ec7f:	rex pop rdx
   14001ec81:	add    bl,al
   14001ec83:	or     edi,DWORD PTR [rdi]
   14001ec85:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x4172
   14001ec8c:	movsxd esp,DWORD PTR [rbx+0x65]
   14001ec8f:	jo     0x14001ed05
   14001ec91:	jae    0x14001ecd6
   14001ec93:	outs   dx,DWORD PTR ds:[rsi]
   14001ec94:	ins    BYTE PTR es:[rdi],dx
   14001ec95:	jne    0x14001ed04
   14001ec97:	outs   dx,BYTE PTR ds:[rsi]
   14001ec98:	rex push rcx
   14001ec9a:	push   rbx
   14001ec9b:	outs   dx,DWORD PTR ds:[rsi]
   14001ec9c:	jb     0x14001ed12
   14001ec9e:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001eca7:	js     0x14001ed22
   14001eca9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ecab:	fs gs ins BYTE PTR es:[rdi],dx
   14001ecae:	rex
   14001ecaf:	rex
   14001ecb0:	rex.WRB
   14001ecb1:	rex.RB
   14001ecb2:	rex.X
   14001ecb3:	pop    r15
   14001ecb5:	rex.WRX
   14001ecb6:	rex.W
   14001ecb7:	rex.B
   14001ecb8:	rex.RB
   14001ecb9:	rex.X push rsi
   14001ecbb:	push   rcx
   14001ecbc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ecbe:	fs gs ins BYTE PTR es:[rdi],dx
   14001ecc1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ecc3:	fs gs js 0x14001ed07
   14001ecc7:	rex
   14001ecc8:	rex pop rdx
   14001ecca:	add    BYTE PTR [rax],al
   14001eccc:	retf   0x3f02
   14001eccf:	(bad)  
   14001ecd0:	xor    DWORD PTR [rcx+0x53],edx
   14001ecd3:	outs   dx,DWORD PTR ds:[rsi]
   14001ecd4:	jb     0x14001ed4a
   14001ecd6:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001ecdf:	js     0x14001ed5a
   14001ece1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ece3:	fs gs ins BYTE PTR es:[rdi],dx
   14001ece6:	rex
   14001ece7:	rex push rbp
   14001ece9:	rex.RB
   14001ecea:	rex.B
   14001eceb:	rex.B
   14001ecec:	rex pop rax
   14001ecee:	pop    rdx
   14001ecef:	add    BYTE PTR [rax+0x8],ah
   14001ecf2:	(bad)  
   14001ecf3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001ecf6:	jo     0x14001ed59
   14001ecf8:	jb     0x14001ed5f
   14001ecfa:	rex push rcx
   14001ecfc:	push   rbx
   14001ecfd:	je     0x14001ed71
   14001ecff:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ed06:	rex.X
   14001ed07:	rex.B
   14001ed08:	rex.W
   14001ed09:	rex.B
   14001ed0a:	rex.RB
   14001ed0b:	rex.X push rsi
   14001ed0d:	xor    DWORD PTR [rax+0x57],eax
   14001ed10:	xor    al,0x43
   14001ed12:	(bad)  
   14001ed13:	jae    0x14001ed7a
   14001ed15:	push   rbx
   14001ed16:	outs   dx,BYTE PTR gs:[rsi]
   14001ed18:	jae    0x14001ed83
   14001ed1a:	je     0x14001ed85
   14001ed1c:	jbe    0x14001ed87
   14001ed1e:	je     0x14001ed99
   14001ed20:	rex push rcx
   14001ed22:	je     0x14001ed64
   14001ed24:	rex
   14001ed25:	rex pop rdx
   14001ed27:	add    BYTE PTR [rcx+0x6f743f18],bl
   14001ed2d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001ed2f:	je     0x14001ed71
   14001ed31:	push   rcx
   14001ed32:	push   rbx
   14001ed33:	je     0x14001eda7
   14001ed35:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14001ed3c:	rex push rcx
   14001ed3e:	rex.RB
   14001ed3f:	rex.X
   14001ed40:	rex.B
   14001ed41:	rex.W push rax
   14001ed43:	rex.RB
   14001ed44:	pop    r15
   14001ed46:	rex.WRX
   14001ed47:	rex.W
   14001ed48:	rex pop rdx
   14001ed4a:	add    BYTE PTR [rax],al
   14001ed4c:	sbb    eax,0x696d3f10
   14001ed51:	fs push rdx
   14001ed53:	gs rex push cx
   14001ed57:	push   rbx
   14001ed58:	je     0x14001edcc
   14001ed5a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ed61:	rex.X
   14001ed62:	rex.B (bad) 
   14001ed64:	push   r14
   14001ed66:	push   rcx
   14001ed67:	push   rbx
   14001ed68:	je     0x14001eddc
   14001ed6a:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14001ed71:	rex
   14001ed72:	rex.W
   14001ed73:	rex.W
   14001ed74:	rex pop rdx
   14001ed76:	add    BYTE PTR [rax],al
   14001ed78:	jb     0x14001ed91
   14001ed7a:	(bad)  
   14001ed7b:	jae    0x14001edf1
   14001ed7d:	(bad)  
   14001ed7e:	jb     0x14001edf4
   14001ed80:	jae    0x14001edd9
   14001ed82:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001ed8a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ed91:	rex.X
   14001ed92:	pop    r15
   14001ed94:	rex.WRX push rsi
   14001ed96:	push   rcx
   14001ed97:	rex.WR (bad) 
   14001ed99:	je     0x14001ee04
   14001ed9b:	outs   dx,BYTE PTR ds:[rsi]
   14001ed9c:	xor    DWORD PTR [rbx+0x74],edx
   14001ed9f:	jb     0x14001ee0a
   14001eda1:	outs   dx,BYTE PTR ds:[rsi]
   14001eda2:	addr32 rex
   14001eda4:	rex push rdi
   14001eda6:	xor    al,0x43
   14001eda8:	(bad)  
   14001eda9:	jae    0x14001ee10
   14001edab:	push   rbx
   14001edac:	outs   dx,BYTE PTR gs:[rsi]
   14001edae:	jae    0x14001ee19
   14001edb0:	je     0x14001ee1b
   14001edb2:	jbe    0x14001ee1d
   14001edb4:	je     0x14001ee2f
   14001edb6:	rex push rcx
   14001edb8:	je     0x14001edfa
   14001edba:	rex
   14001edbb:	rex pop rdx
   14001edbd:	add    BYTE PTR [rdx],ah
   14001edbf:	(bad)  
   14001edc0:	(bad)  
   14001edc1:	jae    0x14001ee32
   14001edc3:	jne    0x14001ee37
   14001edc5:	movsxd esp,DWORD PTR [rbp+0x4d]
   14001edc8:	outs   dx,DWORD PTR ds:[rsi]
   14001edc9:	fs gs ins BYTE PTR es:[rdi],dx
   14001edcc:	rex push rcx
   14001edce:	(bad)
   14001edd4:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   14001edd8:	outs   dx,DWORD PTR ds:[rsi]
   14001edd9:	js     0x14001ee54
   14001eddb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001eddd:	fs gs ins BYTE PTR es:[rdi],dx
   14001ede0:	rex
   14001ede1:	rex push rcx
   14001ede3:	rex.RB
   14001ede4:	rex.X
   14001ede5:	push   r8
   14001ede7:	rex.RB
   14001ede8:	push   r14
   14001edea:	push   rcx
   14001edeb:	(bad)
   14001edf1:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001edf5:	gs ins DWORD PTR es:[rdi],dx
   14001edf7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001edf9:	fs gs ins BYTE PTR es:[rdi],dx
   14001edfc:	rex
   14001edfd:	rex pop rax
   14001edff:	pop    rdx
   14001ee00:	add    BYTE PTR [rax],al
   14001ee02:	(bad)  
   14001ee03:	sbb    bh,BYTE PTR [rdi]
   14001ee05:	je     0x14001ee80
   14001ee07:	jo     0x14001ee6e
   14001ee09:	rex.WRX (bad) 
   14001ee0b:	ins    DWORD PTR es:[rdi],dx
   14001ee0c:	gs rex push rcx
   14001ee0f:	rex.WRB
   14001ee10:	gs je  0x14001ee74
   14001ee13:	push   rsp
   14001ee14:	jns    0x14001ee86
   14001ee16:	gs rex
   14001ee18:	rex push rbx
   14001ee1a:	push   r8
   14001ee1c:	rex.RB
   14001ee1d:	rex.X
   14001ee1e:	rex.R
   14001ee1f:	rex.W
   14001ee20:	rex pop rdx
   14001ee22:	add    BYTE PTR [rax],al
   14001ee24:	rcl    BYTE PTR [rax],0x3f
   14001ee27:	outs   dx,BYTE PTR ds:[rsi]
   14001ee28:	jne    0x14001ee97
   14001ee2a:	(bad)  
   14001ee2b:	gs jb  0x14001ee6e
   14001ee2e:	push   rcx
   14001ee2f:	push   rbx
   14001ee30:	je     0x14001eea4
   14001ee32:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001ee39:	(bad)  
   14001ee3a:	push   r14
   14001ee3c:	xor    DWORD PTR [rax+0x48],eax
   14001ee3f:	rex.W
   14001ee40:	rex pop rdx
   14001ee42:	add    BYTE PTR [rax],al
   14001ee44:	jge    0x14001ee4e
   14001ee46:	(bad)  
   14001ee47:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001ee4a:	outs   dx,BYTE PTR ds:[rsi]
   14001ee4b:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001ee50:	rex.WRXB (bad) 
   14001ee52:	push   0x65
   14001ee54:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ee58:	push   rcx
   14001ee59:	rex.RB
   14001ee5a:	rex.X
   14001ee5b:	rex.B (bad) 
   14001ee5d:	push   r14
   14001ee5f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ee61:	outs   dx,BYTE PTR ds:[rsi]
   14001ee62:	outs   dx,BYTE PTR ds:[rsi]
   14001ee63:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ee68:	outs   dx,BYTE PTR ds:[rsi]
   14001ee69:	rex push rcx
   14001ee6b:	rex.WRB
   14001ee6c:	gs je  0x14001eed0
   14001ee6f:	rex.WRXB (bad) 
   14001ee71:	push   0x65
   14001ee73:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ee77:	push   rax
   14001ee78:	rex.RB
   14001ee79:	rex.X push rsi
   14001ee7b:	xor    DWORD PTR [rax+0x50],eax
   14001ee7e:	rex.RB
   14001ee7f:	rex.X
   14001ee80:	xor    DWORD PTR [rdi+0x34],r10d
   14001ee84:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ee86:	outs   dx,BYTE PTR ds:[rsi]
   14001ee87:	outs   dx,BYTE PTR ds:[rsi]
   14001ee88:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ee8d:	outs   dx,BYTE PTR ds:[rsi]
   14001ee8e:	push   rsp
   14001ee8f:	jns    0x14001ef01
   14001ee91:	gs rex push rcx
   14001ee94:	je     0x14001eed6
   14001ee96:	rex
   14001ee97:	rex pop rdx
   14001ee99:	add    BYTE PTR [rdi],dl
   14001ee9b:	or     al,0x3f
   14001ee9d:	data16 jb 0x14001ef0f
   14001eea0:	ins    DWORD PTR es:[rdi],dx
   14001eea1:	rex.B jae 0x14001ef07
   14001eea4:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   14001eeab:	gs jb  0x14001eeee
   14001eeae:	push   rcx
   14001eeaf:	push   rbx
   14001eeb0:	je     0x14001ef24
   14001eeb2:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   14001eeb9:	push   rax
   14001eeba:	rex.RB
   14001eebb:	push   r13
   14001eebd:	(bad)  
   14001eebe:	and    al,0x51
   14001eec0:	push   rsp
   14001eec1:	jns    0x14001ef33
   14001eec3:	gs fs rex.B jb 0x14001ef3a
   14001eec8:	(bad)  
   14001eec9:	jns    0x14001ef0f
   14001eecb:	(bad)  
   14001eecc:	je     0x14001ef2f
   14001eece:	rex
   14001eecf:	rex.RXB
   14001eed0:	rex
   14001eed1:	rex push rax
   14001eed3:	rex.RB
   14001eed4:	rex.X
   14001eed5:	rex.R
   14001eed6:	rex.W
   14001eed7:	rex pop rdx
   14001eed9:	add    bl,ah
   14001eedb:	(bad)  
   14001eedc:	(bad)  
   14001eedd:	(bad)  
   14001eede:	jb     0x14001ef47
   14001eee0:	rex push rcx
   14001eee2:	push   rbx
   14001eee3:	je     0x14001ef57
   14001eee5:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001eeec:	rex.X
   14001eeed:	rex.B (bad) 
   14001eeef:	push   r14
   14001eef1:	xor    DWORD PTR [rax+0x41],eax
   14001eef4:	rex.RB
   14001eef5:	rex.X push rsi
   14001eef7:	xor    DWORD PTR [rax+0x30],eax
   14001eefa:	xor    BYTE PTR [rax+0x5a],al
   14001eefd:	add    ch,al
   14001eeff:	add    bh,BYTE PTR [rdi]
   14001ef01:	(bad)  
   14001ef02:	xor    DWORD PTR [rcx+0x53],edx
   14001ef05:	gs je  0x14001ef7c
   14001ef08:	imul   ebp,DWORD PTR [rsi+0x67],0x55404073
   14001ef0f:	rex.RB
   14001ef10:	rex.B
   14001ef11:	rex.B
   14001ef12:	rex pop rax
   14001ef14:	pop    rdx
   14001ef15:	add    bh,ch
   14001ef17:	or     bh,BYTE PTR [rdi]
   14001ef19:	outs   dx,BYTE PTR gs:[rsi]
   14001ef1b:	fs rex.RXB jb 0x14001ef8e
   14001ef1f:	jne    0x14001ef91
   14001ef21:	rex push rcx
   14001ef23:	push   rbx
   14001ef24:	gs je  0x14001ef9b
   14001ef27:	imul   ebp,DWORD PTR [rsi+0x67],0x51404073
   14001ef2e:	rex.RB
   14001ef2f:	rex.B
   14001ef30:	pop    r8
   14001ef32:	pop    rax
   14001ef33:	pop    rdx
   14001ef34:	add    BYTE PTR [rax],al
   14001ef36:	rex.WR (bad) 
   14001ef38:	(bad)  
   14001ef39:	(bad)  
   14001ef3a:	imul   ebp,DWORD PTR gs:[esi+0x47],0x70756f72
   14001ef43:	rex push rcx
   14001ef45:	push   rbx
   14001ef46:	gs je  0x14001efbd
   14001ef49:	imul   ebp,DWORD PTR [rsi+0x67],0x51404073
   14001ef50:	rex.RB
   14001ef51:	rex.B
   14001ef52:	pop    r8
   14001ef54:	rex.B
   14001ef55:	rex.RB
   14001ef56:	rex.X push rsi
   14001ef58:	push   rcx
   14001ef59:	push   rbx
   14001ef5a:	je     0x14001efce
   14001ef5c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001ef63:	add    BYTE PTR [rdi+0x1],ch
   14001ef66:	(bad)  
   14001ef67:	(bad)  
   14001ef68:	xor    BYTE PTR [rcx+0x53],dl
   14001ef6b:	gs je  0x14001efe2
   14001ef6e:	imul   ebp,DWORD PTR [rsi+0x67],0x51404073
   14001ef75:	rex.RB
   14001ef76:	rex.B
   14001ef77:	rex.B
   14001ef78:	rex push rax
   14001ef7a:	rex.RB
   14001ef7b:	push   r14
   14001ef7d:	push   rcx
   14001ef7e:	rex.WRXB (bad) 
   14001ef80:	push   0x65
   14001ef82:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ef86:	rex pop rdx
   14001ef88:	add    BYTE PTR [rax],al
   14001ef8a:	(bad)  
   14001ef8b:	adc    eax,0x6c65733f
   14001ef90:	rex push cx
   14001ef93:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ef95:	jb     0x14001effc
   14001ef97:	rex.B jo 0x14001f00a
   14001ef9a:	ins    BYTE PTR es:[rdi],dx
   14001ef9b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001efa2:	rex
   14001efa3:	xor    BYTE PTR [rax+0x45],dl
   14001efa7:	push   r14
   14001efa9:	xor    DWORD PTR [rax+0x45],eax
   14001efac:	add    r10b,sil
   14001efaf:	(bad)  
   14001efb0:	(bad)  
   14001efb1:	(bad)  
   14001efb2:	jb     0x14001f01b
   14001efb4:	jne    0x14001f023
   14001efb6:	outs   dx,BYTE PTR gs:[rsi]
   14001efb8:	je     0x14001f02d
   14001efba:	rex push rcx
   14001efbc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001efbe:	jb     0x14001f025
   14001efc0:	rex.B jo 0x14001f033
   14001efc3:	ins    BYTE PTR es:[rdi],dx
   14001efc4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001efcb:	rex
   14001efcc:	rex push rbx
   14001efce:	rex.B (bad) 
   14001efd0:	push   r14
   14001efd2:	push   rcx
   14001efd3:	push   rbx
   14001efd4:	je     0x14001f048
   14001efd6:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001efdd:	rex
   14001efde:	rex pop rax
   14001efe0:	pop    rdx
   14001efe1:	add    BYTE PTR [rdx],ch
   14001efe3:	adc    eax,0x7465733f
   14001efe8:	rex.B jo 0x14001f05b
   14001efeb:	ins    BYTE PTR es:[rdi],dx
   14001efec:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001eff3:	rex.WRX (bad) 
   14001eff5:	ins    DWORD PTR es:[rdi],dx
   14001eff6:	gs rex push rcx
   14001eff9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001effb:	jb     0x14001f062
   14001effd:	rex.B jo 0x14001f070
   14001f000:	ins    BYTE PTR es:[rdi],dx
   14001f001:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001f008:	rex
   14001f009:	rex push rbx
   14001f00b:	pop    r8
   14001f00d:	rex.B
   14001f00e:	rex.RB
   14001f00f:	rex.X push rsi
   14001f011:	push   rcx
   14001f012:	push   rbx
   14001f013:	je     0x14001f087
   14001f015:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001f01c:	add    BYTE PTR [rax],al
   14001f01e:	(bad)  
   14001f01f:	(bad)  
   14001f020:	(bad)  
   14001f021:	jae    0x14001f088
   14001f023:	je     0x14001f074
   14001f025:	jb     0x14001f08e
   14001f027:	(bad)  
   14001f028:	outs   dx,BYTE PTR ds:[rsi]
   14001f029:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14001f030:	rex.WRX (bad) 
   14001f032:	ins    DWORD PTR es:[rdi],dx
   14001f033:	gs rex push rcx
   14001f036:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001f038:	jb     0x14001f09f
   14001f03a:	rex.B jo 0x14001f0ad
   14001f03d:	ins    BYTE PTR es:[rdi],dx
   14001f03e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001f045:	rex
   14001f046:	rex push rbx
   14001f048:	pop    r8
   14001f04a:	rex.B
   14001f04b:	rex.RB
   14001f04c:	rex.X push rsi
   14001f04e:	push   rcx
   14001f04f:	push   rbx
   14001f050:	je     0x14001f0c4
   14001f052:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001f059:	add    BYTE PTR [rbx],cl
   14001f05b:	adc    bh,BYTE PTR [rdi]
   14001f05d:	jno    0x14001f0b1
   14001f05f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65527265
   14001f068:	jae    0x14001f0d9
   14001f06a:	jne    0x14001f0de
   14001f06c:	movsxd esp,DWORD PTR [rbp+0x44]
   14001f06f:	(bad)  
   14001f070:	je     0x14001f0d3
   14001f072:	rex
   14001f073:	rex pop rcx
   14001f075:	pop    r15
   14001f077:	rex.WRX
   14001f078:	rex.W push rax
   14001f07a:	rex.RB
   14001f07b:	rex.X
   14001f07c:	xor    BYTE PTR [r8],r14b
   14001f07f:	rex pop rdx
   14001f081:	add    BYTE PTR [rsi],dl
   14001f083:	adc    bh,BYTE PTR [rdi]
   14001f085:	jno    0x14001f0dc
   14001f087:	outs   dx,BYTE PTR ds:[rsi]
   14001f088:	jb     0x14001f0ef
   14001f08a:	imul   esi,DWORD PTR [ebx+0x74],0x65527265
   14001f092:	jae    0x14001f103
   14001f094:	jne    0x14001f108
   14001f096:	movsxd esp,DWORD PTR [rbp+0x44]
   14001f099:	(bad)  
   14001f09a:	je     0x14001f0fd
   14001f09c:	rex
   14001f09d:	rex pop rcx
   14001f09f:	pop    r15
   14001f0a1:	rex.WRX
   14001f0a2:	rex.W push rax
   14001f0a4:	rex.RB
   14001f0a5:	rex.X
   14001f0a6:	xor    BYTE PTR [r8],r14b
   14001f0a9:	rex pop rdx
   14001f0ab:	add    BYTE PTR [rbx+0x79643f0a],ch
   14001f0b1:	outs   dx,BYTE PTR ds:[rsi]
   14001f0b2:	(bad)  
   14001f0b3:	ins    DWORD PTR es:[rdi],dx
   14001f0b4:	imul   esp,DWORD PTR [rbx+0x4d],0x4f617465
   14001f0bb:	(bad)  
   14001f0bc:	push   0x65
   14001f0be:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001f0c2:	rex.WRXB (bad) 
   14001f0c4:	push   0x65
   14001f0c6:	movsxd esi,DWORD PTR [rsp+rax*2+0x61]
   14001f0ca:	je     0x14001f12d
   14001f0cc:	rex
   14001f0cd:	rex push rcx
   14001f0cf:	rex.RB
   14001f0d0:	rex.X
   14001f0d1:	push   r8
   14001f0d3:	rex.RB
   14001f0d4:	push   r13
   14001f0d6:	push   rcx
   14001f0d7:	rex.WRB
   14001f0d8:	gs je  0x14001f13c
   14001f0db:	rex.WRXB (bad) 
   14001f0dd:	push   0x65
   14001f0df:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f0e3:	pop    rax
   14001f0e4:	pop    rdx
   14001f0e5:	add    BYTE PTR [rdx+0x74713f12],bl
   14001f0eb:	pop    rdi
   14001f0ec:	ins    DWORD PTR es:[rdi],dx
   14001f0ed:	gs je  0x14001f151
   14001f0f0:	movsxd esp,DWORD PTR [rcx+0x73]
   14001f0f3:	je     0x14001f135
   14001f0f5:	push   rcx
   14001f0f6:	(bad)
   14001f0fc:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001f100:	gs ins DWORD PTR es:[rdi],dx
   14001f102:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f104:	fs gs ins BYTE PTR es:[rdi],dx
   14001f107:	rex
   14001f108:	rex push rbp
   14001f10a:	rex.RB
   14001f10b:	rex.B
   14001f10c:	push   r8
   14001f10e:	rex.RB
   14001f10f:	pop    r8
   14001f111:	push   rax
   14001f112:	rex.RB
   14001f113:	rex.X
   14001f114:	rex.R
   14001f115:	rex pop rdx
   14001f117:	add    BYTE PTR [rcx+0x6],cl
   14001f11a:	(bad)  
   14001f11b:	(bad)  
   14001f11c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14001f120:	(bad)  
   14001f121:	je     0x14001f188
   14001f123:	rex push rcx
   14001f125:	rex.WRB
   14001f126:	gs je  0x14001f18a
   14001f129:	rex.WRXB (bad) 
   14001f12b:	push   0x65
   14001f12d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f131:	push   rbx
   14001f132:	pop    r8
   14001f134:	push   rax
   14001f135:	rex.RB
   14001f136:	push   r14
   14001f138:	push   rcx
   14001f139:	rex.WRXB (bad) 
   14001f13b:	push   0x65
   14001f13d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f141:	push   rax
   14001f142:	rex.RB
   14001f143:	rex.X push rbp
   14001f145:	xor    DWORD PTR [rax+0x48],eax
   14001f148:	push   rax
   14001f149:	rex.RB
   14001f14a:	push   r8
   14001f14c:	rex.RB
   14001f14d:	pop    r8
   14001f14f:	rex pop rdx
   14001f151:	add    BYTE PTR [rsi+0x12],bl
   14001f154:	(bad)  
   14001f155:	jno    0x14001f1cb
   14001f157:	pop    rdi
   14001f158:	ins    DWORD PTR es:[rdi],dx
   14001f159:	gs je  0x14001f1bd
   14001f15c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001f15f:	ins    BYTE PTR es:[rdi],dx
   14001f160:	rex push rcx
   14001f162:	(bad)
   14001f168:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001f16c:	gs ins DWORD PTR es:[rdi],dx
   14001f16e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f170:	fs gs ins BYTE PTR es:[rdi],dx
   14001f173:	rex
   14001f174:	rex push rbp
   14001f176:	rex.RB
   14001f177:	rex.B
   14001f178:	rex.B
   14001f179:	rex.W push rdi
   14001f17b:	xor    al,0x43
   14001f17d:	(bad)  
   14001f17e:	ins    BYTE PTR es:[rdi],dx
   14001f17f:	ins    BYTE PTR es:[rdi],dx
   14001f180:	rex push rcx
   14001f182:	rex.WRB
   14001f183:	gs je  0x14001f1e7
   14001f186:	rex.WRXB (bad) 
   14001f188:	push   0x65
   14001f18a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f18e:	rex.W push rax
   14001f190:	rex.RB
   14001f191:	push   r8
   14001f193:	rex.RB
   14001f194:	pop    r8
   14001f196:	rex pop rdx
   14001f198:	add    BYTE PTR [rax],al
   14001f19a:	xchg   BYTE PTR [rdi],dl
   14001f19c:	(bad)  
   14001f19d:	jae    0x14001f213
   14001f19f:	(bad)  
   14001f1a0:	je     0x14001f20b
   14001f1a2:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001f1a5:	je     0x14001f208
   14001f1a7:	rex.WRXB (bad) 
   14001f1a9:	push   0x65
   14001f1ab:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001f1af:	(bad)
   14001f1b5:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14001f1b9:	gs ins DWORD PTR es:[rdi],dx
   14001f1bb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f1bd:	fs gs ins BYTE PTR es:[rdi],dx
   14001f1c0:	rex
   14001f1c1:	xor    dl,BYTE PTR [rbp+0x51]
   14001f1c5:	rex.WRB
   14001f1c6:	gs je  0x14001f22a
   14001f1c9:	rex.WRXB (bad) 
   14001f1cb:	push   0x65
   14001f1cd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f1d1:	rex.X add BYTE PTR [rax],al
   14001f1d4:	ret    
   14001f1d5:	adc    bh,BYTE PTR [rdi]
   14001f1d7:	jno    0x14001f24d
   14001f1d9:	pop    rdi
   14001f1da:	ins    DWORD PTR es:[rdi],dx
   14001f1db:	gs je  0x14001f23f
   14001f1de:	movsxd esp,DWORD PTR [rcx+0x73]
   14001f1e1:	je     0x14001f223
   14001f1e3:	push   rcx
   14001f1e4:	push   rbx
   14001f1e5:	outs   dx,DWORD PTR ds:[rsi]
   14001f1e6:	jb     0x14001f25c
   14001f1e8:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001f1f1:	js     0x14001f26c
   14001f1f3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f1f5:	fs gs ins BYTE PTR es:[rdi],dx
   14001f1f8:	rex
   14001f1f9:	rex push rbp
   14001f1fb:	rex.RB
   14001f1fc:	rex.B
   14001f1fd:	push   r8
   14001f1ff:	rex.RB
   14001f200:	pop    r8
   14001f202:	push   rax
   14001f203:	rex.RB
   14001f204:	rex.X
   14001f205:	rex.R
   14001f206:	rex pop rdx
   14001f208:	add    BYTE PTR [rax],al
   14001f20a:	xchg   DWORD PTR [rdx],edx
   14001f20c:	(bad)  
   14001f20d:	jno    0x14001f283
   14001f20f:	pop    rdi
   14001f210:	ins    DWORD PTR es:[rdi],dx
   14001f211:	gs je  0x14001f275
   14001f214:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001f217:	ins    BYTE PTR es:[rdi],dx
   14001f218:	rex push rcx
   14001f21a:	push   rbx
   14001f21b:	outs   dx,DWORD PTR ds:[rsi]
   14001f21c:	jb     0x14001f292
   14001f21e:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001f227:	js     0x14001f2a2
   14001f229:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f22b:	fs gs ins BYTE PTR es:[rdi],dx
   14001f22e:	rex
   14001f22f:	rex push rbp
   14001f231:	rex.RB
   14001f232:	rex.B
   14001f233:	rex.B
   14001f234:	rex.W push rdi
   14001f236:	xor    al,0x43
   14001f238:	(bad)  
   14001f239:	ins    BYTE PTR es:[rdi],dx
   14001f23a:	ins    BYTE PTR es:[rdi],dx
   14001f23b:	rex push rcx
   14001f23d:	rex.WRB
   14001f23e:	gs je  0x14001f2a2
   14001f241:	rex.WRXB (bad) 
   14001f243:	push   0x65
   14001f245:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f249:	rex.W push rax
   14001f24b:	rex.RB
   14001f24c:	push   r8
   14001f24e:	rex.RB
   14001f24f:	pop    r8
   14001f251:	rex pop rdx
   14001f253:	add    BYTE PTR [rdx+0x74733f17],dh
   14001f259:	(bad)  
   14001f25a:	je     0x14001f2c5
   14001f25c:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001f25f:	je     0x14001f2c2
   14001f261:	rex.WRXB (bad) 
   14001f263:	push   0x65
   14001f265:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001f269:	push   rbx
   14001f26a:	outs   dx,DWORD PTR ds:[rsi]
   14001f26b:	jb     0x14001f2e1
   14001f26d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   14001f276:	js     0x14001f2f1
   14001f278:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001f27a:	fs gs ins BYTE PTR es:[rdi],dx
   14001f27d:	rex
   14001f27e:	xor    dl,BYTE PTR [rbp+0x51]
   14001f282:	rex.WRB
   14001f283:	gs je  0x14001f2e7
   14001f286:	rex.WRXB (bad) 
   14001f288:	push   0x65
   14001f28a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001f28e:	rex.X add BYTE PTR [rcx+0x74],dl
   14001f292:	xor    eax,0x65726f43
   14001f297:	cs fs ins BYTE PTR es:[rdi],dx
   14001f29a:	ins    BYTE PTR es:[rdi],dx
   14001f29b:	add    BYTE PTR [rcx],dl
   14001f29d:	add    BYTE PTR [rdi],bh
   14001f29f:	(bad)  
   14001f2a0:	xor    al,BYTE PTR [rax+0x59]
   14001f2a3:	push   r8
   14001f2a5:	rex.RB
   14001f2a6:	pop    r8
   14001f2a8:	pop    rdi
   14001f2a9:	rex.WXB
   14001f2aa:	rex pop rdx
   14001f2ac:	add    BYTE PTR [rax],al
   14001f2ae:	adc    eax,DWORD PTR [rax]
   14001f2b0:	(bad)  
   14001f2b1:	(bad)  
   14001f2b2:	xor    eax,DWORD PTR [rax+0x59]
   14001f2b5:	pop    r8
   14001f2b7:	push   rax
   14001f2b8:	rex.RB
   14001f2b9:	pop    r8
   14001f2bb:	rex pop rdx
   14001f2bd:	add    al,dh
   14001f2bf:	add    al,0x6d
   14001f2c1:	gs ins DWORD PTR es:[rdi],dx
   14001f2c3:	movsxd esi,DWORD PTR [rax+0x79]
   14001f2c6:	add    BYTE PTR [rax],al
   14001f2c8:	hlt    
   14001f2c9:	add    al,0x6d
   14001f2cb:	gs ins DWORD PTR es:[rdi],dx
   14001f2cd:	jae    0x14001f334
   14001f2cf:	je     0x14001f2d1
   14001f2d1:	add    BYTE PTR [rbp+0x53],cl
   14001f2d4:	push   rsi
   14001f2d5:	rex.XB push r10
   14001f2d7:	cmp    DWORD PTR [rax],esi
   14001f2d9:	cs fs ins BYTE PTR es:[rdi],dx
   14001f2dc:	ins    BYTE PTR es:[rdi],dx
   14001f2dd:	add    BYTE PTR [rcx+0x0],bl
   14001f2e0:	pop    rdi
   14001f2e1:	pop    rdi
   14001f2e2:	rex.XB pop r15
   14001f2e4:	jae    0x14001f356
   14001f2e6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001f2ea:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001f2f1:	ins    BYTE PTR es:[rdi],dx
   14001f2f2:	gs jb  0x14001f2f5
   14001f2f5:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   14001f2fc:	outs   dx,DWORD PTR ds:[rsi]
   14001f2fd:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001f300:	test   DWORD PTR [rax],eax
   14001f302:	pop    rdi
   14001f303:	pop    rdi
   14001f304:	fs ins BYTE PTR es:[rdi],dx
   14001f306:	ins    BYTE PTR es:[rdi],dx
   14001f307:	outs   dx,DWORD PTR ds:[rsi]
   14001f308:	outs   dx,BYTE PTR ds:[rsi]
   14001f309:	gs js  0x14001f375
   14001f30c:	je     0x14001f30e
   14001f30e:	(bad)  
   14001f30f:	add    DWORD PTR [rdi+0x65],ebx
   14001f312:	outs   dx,BYTE PTR ds:[rsi]
   14001f313:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001f316:	gs pop rdi
   14001f318:	jo     0x14001f389
   14001f31a:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   14001f321:	add    bl,BYTE PTR [rdi+0x6c]
   14001f324:	outs   dx,DWORD PTR ds:[rsi]
   14001f325:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001f328:	in     al,0x2
   14001f32a:	pop    rdi
   14001f32b:	outs   dx,DWORD PTR ds:[rsi]
   14001f32c:	outs   dx,BYTE PTR ds:[rsi]
   14001f32d:	gs js  0x14001f399
   14001f330:	je     0x14001f332
   14001f332:	sub    eax,0x65645f01
   14001f337:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001f33a:	gs pop rdi
   14001f33c:	jo     0x14001f3ad
   14001f33e:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   14001f345:	add    BYTE PTR [rdi+0x61],bl
   14001f348:	ins    DWORD PTR es:[rdi],dx
   14001f349:	jae    0x14001f3b2
   14001f34b:	pop    rdi
   14001f34c:	gs js  0x14001f3b8
   14001f34f:	je     0x14001f351
   14001f351:	add    BYTE PTR [rax+0x675f5f00],dl
   14001f357:	gs je  0x14001f3c7
   14001f35a:	(bad)  
   14001f35b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14001f362:	push   rbp
   14001f363:	add    BYTE PTR [rdi+0x58],bl
   14001f366:	movsxd esi,DWORD PTR [rax+0x74]
   14001f369:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   14001f372:	pop    rdi
   14001f373:	gs js  0x14001f3df
   14001f376:	je     0x14001f378
   14001f378:	in     al,dx
   14001f379:	add    DWORD PTR [rdi+0x69],ebx
   14001f37c:	jae    0x14001f3eb
   14001f37e:	(bad)
   14001f383:	add    BYTE PTR fs:[rax],al
   14001f386:	stc    
   14001f387:	add    BYTE PTR [rdi+0x63],bl
   14001f38a:	gs js  0x14001f3f6
   14001f38d:	je     0x14001f38f
   14001f38f:	add    BYTE PTR [rcx+0x69786504],dl
   14001f395:	je     0x14001f397
   14001f397:	add    al,bl
   14001f399:	add    BYTE PTR [rdi+0x61],bl
   14001f39c:	movsxd ebp,DWORD PTR [rbp+0x64]
   14001f39f:	ins    BYTE PTR es:[rdi],dx
   14001f3a0:	outs   dx,BYTE PTR ds:[rsi]
   14001f3a1:	add    dh,cl
   14001f3a3:	add    DWORD PTR [rdi+0x69],ebx
   14001f3a6:	outs   dx,BYTE PTR ds:[rsi]
   14001f3a7:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xcf006d72
   14001f3af:	add    DWORD PTR [rdi+0x69],ebx
   14001f3b2:	outs   dx,BYTE PTR ds:[rsi]
   14001f3b3:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   14001f3bb:	add    BYTE PTR [rcx],cl
   14001f3bd:	add    DWORD PTR [rdi+0x63],ebx
   14001f3c0:	outs   dx,DWORD PTR ds:[rsi]
   14001f3c1:	outs   dx,BYTE PTR ds:[rsi]
   14001f3c2:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14001f3c8:	gs (bad) 
   14001f3ca:	fs ins BYTE PTR es:[rdi],dx
   14001f3cc:	outs   dx,DWORD PTR ds:[rsi]
   14001f3cd:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001f3d0:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   14001f3d7:	gs je  0x14001f44f
   14001f3da:	jae    0x14001f441
   14001f3dc:	jb     0x14001f44b
   14001f3de:	(bad)  
   14001f3df:	je     0x14001f449
   14001f3e1:	gs jb  0x14001f456
   14001f3e4:	add    BYTE PTR [rax],al
   14001f3e6:	or     BYTE PTR [rcx],al
   14001f3e8:	pop    rdi
   14001f3e9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001f3ec:	ins    DWORD PTR es:[rdi],dx
   14001f3ed:	outs   dx,DWORD PTR ds:[rsi]
   14001f3ee:	fs add BYTE PTR gs:[rax],al
   14001f3f2:	(bad)
   14001f3f7:	outs   dx,DWORD PTR ds:[rsi]
   14001f3f8:	fs add BYTE PTR gs:[rax],al
   14001f3fc:	mov    esp,0x735f5f00
   14001f401:	gs je  0x14001f463
   14001f404:	(bad)  
   14001f405:	jo     0x14001f477
   14001f407:	pop    rdi
   14001f408:	je     0x14001f483
   14001f40a:	jo     0x14001f471
   14001f40c:	add    BYTE PTR [rax],al
   14001f40e:	rex.XB add BYTE PTR [r15],dil
   14001f411:	je     0x14001f478
   14001f413:	jb     0x14001f482
   14001f415:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14001f41c:	pop    rcx
   14001f41d:	pop    r8
   14001f41f:	pop    rax
   14001f420:	pop    rdx
   14001f421:	add    BYTE PTR [rax],bh
   14001f423:	add    BYTE PTR [rdi],bh
   14001f425:	pop    rdi
   14001f426:	je     0x14001f4a1
   14001f428:	jo     0x14001f48f
   14001f42a:	pop    rdi
   14001f42b:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14001f432:	outs   dx,DWORD PTR ds:[rsi]
   14001f433:	jb     0x14001f494
   14001f435:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14001f43c:	ins    BYTE PTR es:[rdi],dx
   14001f43d:	pop    rdi
   14001f43e:	ins    DWORD PTR es:[rdi],dx
   14001f43f:	gs je  0x14001f4aa
   14001f442:	outs   dx,DWORD PTR ds:[rsi]
   14001f443:	fs rex je 0x14001f4c0
   14001f447:	jo     0x14001f4ae
   14001f449:	pop    rdi
   14001f44a:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14001f451:	rex.RB
   14001f452:	rex.B
   14001f453:	pop    r8
   14001f455:	pop    rax
   14001f456:	pop    rdx
   14001f457:	add    al,al
   14001f459:	add    al,0x53
   14001f45b:	ins    BYTE PTR es:[rdi],dx
   14001f45c:	gs gs jo 0x14001f460
   14001f460:	imul   eax,DWORD PTR [rdx],0x53746547
   14001f466:	je     0x14001f4c9
   14001f468:	jb     0x14001f4de
   14001f46a:	jne    0x14001f4dc
   14001f46c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001f46e:	outs   dx,WORD PTR ds:[rsi]
   14001f470:	add    BYTE PTR [r11+0x74655304],sil
   14001f477:	push   rbp
   14001f478:	outs   dx,BYTE PTR ds:[rsi]
   14001f479:	push   0x6c646e61
   14001f47e:	gs fs rex.RB js 0x14001f4e6
   14001f483:	gs jo  0x14001f4fa
   14001f486:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001f48d:	gs jb  0x14001f490
   14001f490:	test   eax,0x65755103
   14001f495:	jb     0x14001f510
   14001f497:	push   rax
   14001f498:	gs jb  0x14001f501
   14001f49b:	outs   dx,DWORD PTR ds:[rsi]
   14001f49c:	jb     0x14001f50b
   14001f49e:	(bad)  
   14001f49f:	outs   dx,BYTE PTR ds:[rsi]
   14001f4a0:	movsxd esp,DWORD PTR [rbp+0x43]
   14001f4a3:	outs   dx,DWORD PTR ds:[rsi]
   14001f4a4:	jne    0x14001f514
   14001f4a6:	je     0x14001f50d
   14001f4a8:	jb     0x14001f4aa
   14001f4aa:	(bad)  
   14001f4ab:	add    al,BYTE PTR [rdi+0x65]
   14001f4ae:	je     0x14001f504
   14001f4b0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001f4b7:	je     0x14001f4b9
   14001f4b9:	add    bl,cl
   14001f4bb:	add    DWORD PTR [rdi+0x65],eax
   14001f4be:	je     0x14001f503
   14001f4c0:	jne    0x14001f534
   14001f4c2:	jb     0x14001f529
   14001f4c4:	outs   dx,BYTE PTR ds:[rsi]
   14001f4c5:	je     0x14001f51b
   14001f4c7:	push   0x64616572
   14001f4cc:	rex.WB
   14001f4cd:	add    BYTE PTR fs:[rax],al
   14001f4d0:	mov    DWORD PTR [rcx],0x43746547
   14001f4d6:	jne    0x14001f54a
   14001f4d8:	jb     0x14001f53f
   14001f4da:	outs   dx,BYTE PTR ds:[rsi]
   14001f4db:	je     0x14001f52d
   14001f4dd:	jb     0x14001f54e
   14001f4df:	movsxd esp,DWORD PTR [rbp+0x73]
   14001f4e2:	jae    0x14001f52d
   14001f4e4:	add    BYTE PTR fs:[rax+0x74654702],al
   14001f4eb:	push   rbx
   14001f4ec:	jns    0x14001f561
   14001f4ee:	je     0x14001f555
   14001f4f0:	ins    DWORD PTR es:[rdi],dx
   14001f4f1:	push   rsp
   14001f4f2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001f4f9:	ins    BYTE PTR es:[rdi],dx
   14001f4fa:	gs push rsp
   14001f4fc:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14001f503:	rex.WRX
   14001f504:	rex.RB
   14001f505:	xor    r14,QWORD PTR [rdx]
   14001f508:	cs fs ins BYTE PTR es:[rdi],dx
   14001f50b:	ins    BYTE PTR es:[rdi],dx
   14001f50c:	add    BYTE PTR [rax],al
   14001f50e:	(bad)  
   14001f50f:	add    BYTE PTR [rbx+0x6f],al
   14001f512:	ins    DWORD PTR es:[rdi],dx
   14001f513:	ins    DWORD PTR es:[rdi],dx
   14001f514:	(bad)  
   14001f515:	outs   dx,BYTE PTR ds:[rsi]
   14001f516:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14001f51f:	addr32 jbe 0x14001f579
   14001f522:	add    BYTE PTR [rax],al
   14001f524:	push   rbx
   14001f525:	rex.W
   14001f526:	rex.RB
   14001f527:	rex.WR
   14001f528:	xor    r14,QWORD PTR [rdx]
   14001f52b:	cs fs ins BYTE PTR es:[rdi],dx
   14001f52e:	ins    BYTE PTR es:[rdi],dx
   14001f52f:	add    BYTE PTR [rbx],ah
   14001f531:	add    BYTE PTR [rdi],bh
   14001f533:	(bad)  
   14001f534:	pop    rdi
   14001f535:	push   rsi
   14001f536:	rex pop rcx
   14001f538:	pop    r8
   14001f53a:	push   rax
   14001f53b:	rex.RB
   14001f53c:	pop    r8
   14001f53e:	rex pop rdx
   14001f540:	add    BYTE PTR [rax],al
   14001f542:	and    BYTE PTR [rip+0x65646957],al        # 0x1a5665e9f
   14001f548:	rex.XB push 0x6f547261
   14001f54e:	rex.WRB jne 0x14001f5bd
   14001f551:	je     0x14001f5bc
   14001f553:	rex.X jns 0x14001f5ca
   14001f556:	add    BYTE PTR gs:[rdx+0x3],cl
   14001f55a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001f55c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001f55f:	rex.RX jb 0x14001f5c7
   14001f562:	add    BYTE PTR gs:[rbp+0x74654701],cl
   14001f569:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001f56b:	ins    DWORD PTR es:[rdi],dx
   14001f56c:	ins    DWORD PTR es:[rdi],dx
   14001f56d:	(bad)  
   14001f56e:	outs   dx,BYTE PTR ds:[rsi]
   14001f56f:	fs
   14001f570:	rex.WR
   14001f571:	.byte 0x69
   14001f572:	outs   dx,BYTE PTR ds:[rsi]
   14001f573:	gs push rdi
	...

Disassembly of section .data:

0000000140020000 <.data>:
   140020000:	rex call 0x140034006
   140020006:	add    BYTE PTR [rax],al
   140020008:	loopne 0x140020034
   14002000a:	add    DWORD PTR [rax+0x1],eax
	...
   140020015:	add    BYTE PTR [rax],al
   140020017:	add    BYTE PTR [rsi],ch
   140020019:	(bad)  
   14002001a:	push   r14
   14002001c:	push   rcx
   14002001d:	rex.R
   14002001e:	rex.X jne 0x140020094
   140020021:	push   rsi
   140020022:	imul   esp,DWORD PTR [rbp+0x77],0x65646f4d
   140020029:	ins    BYTE PTR es:[rdi],dx
   14002002a:	rex
   14002002b:	add    BYTE PTR [rax],al
   14002002e:	add    BYTE PTR [rax],al
   140020030:	loopne 0x14002005c
   140020032:	add    DWORD PTR [rax+0x1],eax
	...
   14002003d:	add    BYTE PTR [rax],al
   14002003f:	add    BYTE PTR [rsi],ch
   140020041:	(bad)  
   140020042:	push   r14
   140020044:	push   rcx
   140020045:	rex.R
   140020046:	rex.X jne 0x1400200bc
   140020049:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002004b:	fs gs ins BYTE PTR es:[rdi],dx
   14002004e:	rex
   14002004f:	add    BYTE PTR [rax],al
   140020052:	add    BYTE PTR [rax],al
   140020054:	add    BYTE PTR [rax],al
   140020056:	add    BYTE PTR [rax],al
   140020058:	loopne 0x140020084
   14002005a:	add    DWORD PTR [rax+0x1],eax
	...
   140020065:	add    BYTE PTR [rax],al
   140020067:	add    BYTE PTR [rsi],ch
   140020069:	(bad)  
   14002006a:	push   r14
   14002006c:	push   rcx
   14002006d:	(bad)
   140020073:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140020077:	gs ins DWORD PTR es:[rdi],dx
   140020079:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002007b:	fs gs ins BYTE PTR es:[rdi],dx
   14002007e:	rex
   14002007f:	add    BYTE PTR [rax],al
   140020082:	add    BYTE PTR [rax],al
   140020084:	add    BYTE PTR [rax],al
   140020086:	add    BYTE PTR [rax],al
   140020088:	loopne 0x1400200b4
   14002008a:	add    DWORD PTR [rax+0x1],eax
	...
   140020095:	add    BYTE PTR [rax],al
   140020097:	add    BYTE PTR [rsi],ch
   140020099:	(bad)  
   14002009a:	push   r14
   14002009c:	push   rcx
   14002009d:	rex.WRXB (bad) 
   14002009f:	push   0x65
   1400200a1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400200a5:	add    BYTE PTR [rax],al
   1400200a7:	add    al,ah
   1400200a9:	sub    al,BYTE PTR [rcx]
   1400200ab:	rex add DWORD PTR [rax],eax
	...
   1400200b6:	add    BYTE PTR [rax],al
   1400200b8:	cs (bad) 
   1400200ba:	push   r14
   1400200bc:	push   rcx
   1400200bd:	rex.R
   1400200be:	rex.X jne 0x140020134
   1400200c1:	push   rsi
   1400200c2:	imul   esp,DWORD PTR [rbp+0x77],0x40407265
   1400200c9:	add    BYTE PTR [rax],al
   1400200cb:	add    BYTE PTR [rax],al
   1400200cd:	add    BYTE PTR [rax],al
   1400200cf:	add    al,ah
   1400200d1:	sub    al,BYTE PTR [rcx]
   1400200d3:	rex add DWORD PTR [rax],eax
	...
   1400200de:	add    BYTE PTR [rax],al
   1400200e0:	cs (bad) 
   1400200e2:	push   r14
   1400200e4:	push   rcx
   1400200e5:	push   rdi
   1400200e6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   1400200ee:	add    BYTE PTR [rax],al
   1400200f0:	loopne 0x14002011c
   1400200f2:	add    DWORD PTR [rax+0x1],eax
	...
   1400200fd:	add    BYTE PTR [rax],al
   1400200ff:	add    BYTE PTR [rsi],ch
   140020101:	(bad)  
   140020102:	push   r14
   140020104:	push   rcx
   140020105:	push   rax
   140020106:	(bad)  
   140020107:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   14002010e:	movsxd esp,DWORD PTR [rbp+0x40]
   140020111:	add    BYTE PTR [rax],al
   140020114:	add    BYTE PTR [rax],al
   140020116:	add    BYTE PTR [rax],al
   140020118:	loopne 0x140020144
   14002011a:	add    DWORD PTR [rax+0x1],eax
	...
   140020125:	add    BYTE PTR [rax],al
   140020127:	add    BYTE PTR [rsi],ch
   140020129:	(bad)  
   14002012a:	push   r14
   14002012c:	push   rcx
   14002012d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140020135:	rex
   140020136:	add    al,spl
   140020139:	sub    al,BYTE PTR [rcx]
   14002013b:	rex add DWORD PTR [rax],eax
	...
   140020146:	add    BYTE PTR [rax],al
   140020148:	cs (bad) 
   14002014a:	push   r14
   14002014c:	push   rcx
   14002014d:	push   rbx
   14002014e:	je     0x1400201c2
   140020150:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140020157:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020159:	fs gs ins BYTE PTR es:[rdi],dx
   14002015c:	rex
   14002015d:	add    BYTE PTR [rax],al
   140020160:	loopne 0x14002018c
   140020162:	add    DWORD PTR [rax+0x1],eax
	...
   14002016d:	add    BYTE PTR [rax],al
   14002016f:	add    BYTE PTR [rsi],ch
   140020171:	(bad)  
   140020172:	push   r14
   140020174:	push   rcx
   140020175:	(bad)
   14002017b:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14002017f:	jae    0x1400201f5
   140020181:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020183:	fs gs ins BYTE PTR es:[rdi],dx
   140020186:	rex
   140020187:	add    BYTE PTR [rax],al
   14002018a:	add    BYTE PTR [rax],al
   14002018c:	add    BYTE PTR [rax],al
   14002018e:	add    BYTE PTR [rax],al
   140020190:	loopne 0x1400201bc
   140020192:	add    DWORD PTR [rax+0x1],eax
	...
   14002019d:	add    BYTE PTR [rax],al
   14002019f:	add    BYTE PTR [rsi],ch
   1400201a1:	(bad)  
   1400201a2:	push   r14
   1400201a4:	push   rcx
   1400201a5:	push   rsp
   1400201a6:	(bad)  
   1400201a7:	(bad)  
   1400201a8:	ins    BYTE PTR es:[rdi],dx
   1400201a9:	gs push rsi
   1400201ab:	imul   esp,DWORD PTR [rbp+0x77],0x4040
   1400201b2:	add    BYTE PTR [rax],al
   1400201b4:	add    BYTE PTR [rax],al
   1400201b6:	add    BYTE PTR [rax],al
   1400201b8:	loopne 0x1400201e4
   1400201ba:	add    DWORD PTR [rax+0x1],eax
	...
   1400201c5:	add    BYTE PTR [rax],al
   1400201c7:	add    BYTE PTR [rsi],ch
   1400201c9:	(bad)  
   1400201ca:	push   r14
   1400201cc:	push   rcx
   1400201cd:	(bad)
   1400201d3:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400201d7:	gs ins DWORD PTR es:[rdi],dx
   1400201d9:	push   rsi
   1400201da:	imul   esp,DWORD PTR [rbp+0x77],0xe0004040
   1400201e1:	sub    al,BYTE PTR [rcx]
   1400201e3:	rex add DWORD PTR [rax],eax
	...
   1400201ee:	add    BYTE PTR [rax],al
   1400201f0:	cs (bad) 
   1400201f2:	push   r14
   1400201f4:	push   rcx
   1400201f5:	(bad)
   1400201fb:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400201ff:	jb     0x140020270
   140020201:	ins    BYTE PTR es:[rdi],dx
   140020202:	ins    BYTE PTR es:[rdi],dx
   140020203:	rex.B jb 0x14002026b
   140020206:	(bad)  
   140020207:	rex
   140020208:	add    BYTE PTR [rax],al
   14002020b:	add    BYTE PTR [rax],al
   14002020d:	add    BYTE PTR [rax],al
   14002020f:	add    al,ah
   140020211:	sub    al,BYTE PTR [rcx]
   140020213:	rex add DWORD PTR [rax],eax
	...
   14002021e:	add    BYTE PTR [rax],al
   140020220:	cs (bad) 
   140020222:	push   r14
   140020224:	push   rcx
   140020225:	rex.RX jb 0x140020289
   140020228:	ins    DWORD PTR es:[rdi],dx
   140020229:	gs rex
   14002022b:	add    BYTE PTR [rax],al
   14002022e:	add    BYTE PTR [rax],al
   140020230:	loopne 0x14002025c
   140020232:	add    DWORD PTR [rax+0x1],eax
	...
   14002023d:	add    BYTE PTR [rax],al
   14002023f:	add    BYTE PTR [rsi],ch
   140020241:	(bad)  
   140020242:	push   r14
   140020244:	push   rcx
   140020245:	push   rsp
   140020246:	jb     0x1400202ad
   140020248:	gs push rsi
   14002024a:	imul   esp,DWORD PTR [rbp+0x77],0xe0004040
   140020251:	sub    al,BYTE PTR [rcx]
   140020253:	rex add DWORD PTR [rax],eax
	...
   14002025e:	add    BYTE PTR [rax],al
   140020260:	cs (bad) 
   140020262:	push   r14
   140020264:	push   rcx
   140020265:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14002026a:	outs   dx,BYTE PTR ds:[rsi]
   14002026b:	rex
   14002026c:	add    BYTE PTR [rax],al
   14002026f:	add    al,ah
   140020271:	sub    al,BYTE PTR [rcx]
   140020273:	rex add DWORD PTR [rax],eax
	...
   14002027e:	add    BYTE PTR [rax],al
   140020280:	cs (bad) 
   140020282:	push   r14
   140020284:	push   rcx
   140020285:	push   rbx
   140020286:	push   0x6374726f
   14002028b:	jne    0x140020301
   14002028d:	rex
   14002028e:	add    al,spl
   140020291:	sub    al,BYTE PTR [rcx]
   140020293:	rex add DWORD PTR [rax],eax
	...
   14002029e:	add    BYTE PTR [rax],al
   1400202a0:	cs (bad) 
   1400202a2:	push   r14
   1400202a4:	push   rcx
   1400202a5:	push   rsi
   1400202a6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400202a8:	js     0x1400202f6
   1400202aa:	(bad)  
   1400202ab:	jns    0x14002031c
   1400202ad:	jne    0x140020323
   1400202af:	rex
   1400202b0:	add    BYTE PTR [rax],al
   1400202b3:	add    BYTE PTR [rax],al
   1400202b5:	add    BYTE PTR [rax],al
   1400202b7:	add    al,ah
   1400202b9:	sub    al,BYTE PTR [rcx]
   1400202bb:	rex add DWORD PTR [rax],eax
	...
   1400202c6:	add    BYTE PTR [rax],al
   1400202c8:	cs (bad) 
   1400202ca:	push   r14
   1400202cc:	push   rcx
   1400202cd:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400202cf:	js     0x14002031d
   1400202d1:	(bad)  
   1400202d2:	jns    0x140020343
   1400202d4:	jne    0x14002034a
   1400202d6:	rex
   1400202d7:	add    BYTE PTR [rax],al
   1400202da:	add    BYTE PTR [rax],al
   1400202dc:	add    BYTE PTR [rax],al
   1400202de:	add    BYTE PTR [rax],al
   1400202e0:	loopne 0x14002030c
   1400202e2:	add    DWORD PTR [rax+0x1],eax
	...
   1400202ed:	add    BYTE PTR [rax],al
   1400202ef:	add    BYTE PTR [rsi],ch
   1400202f1:	(bad)  
   1400202f2:	push   r14
   1400202f4:	push   rcx
   1400202f5:	rex.WR (bad) 
   1400202f7:	jns    0x140020368
   1400202f9:	jne    0x14002036f
   1400202fb:	rex
   1400202fc:	add    BYTE PTR [rax],al
   1400202ff:	add    al,ah
   140020301:	sub    al,BYTE PTR [rcx]
   140020303:	rex add DWORD PTR [rax],eax
	...
   14002030e:	add    BYTE PTR [rax],al
   140020310:	cs (bad) 
   140020312:	push   r14
   140020314:	push   rcx
   140020315:	rex.WR (bad) 
   140020317:	jns    0x140020388
   140020319:	jne    0x14002038f
   14002031b:	rex.WB je 0x140020383
   14002031e:	ins    DWORD PTR es:[rdi],dx
   14002031f:	rex
   140020320:	add    BYTE PTR [rax],al
   140020323:	add    BYTE PTR [rax],al
   140020325:	add    BYTE PTR [rax],al
   140020327:	add    al,ah
   140020329:	sub    al,BYTE PTR [rcx]
   14002032b:	rex add DWORD PTR [rax],eax
	...
   140020336:	add    BYTE PTR [rax],al
   140020338:	cs (bad) 
   14002033a:	push   r14
   14002033c:	push   rcx
   14002033d:	push   rbx
   14002033e:	jo     0x1400203ac
   140020340:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x404072
   140020348:	rex call 0x14003434e
   14002034e:	add    BYTE PTR [rax],al
   140020350:	rex call 0x140034356
   140020356:	add    BYTE PTR [rax],al
   140020358:	loopne 0x140020384
   14002035a:	add    DWORD PTR [rax+0x1],eax
	...
   140020365:	add    BYTE PTR [rax],al
   140020367:	add    BYTE PTR [rsi],ch
   140020369:	(bad)  
   14002036a:	push   r14
   14002036c:	push   rbx
   14002036d:	gs jb  0x1400203e6
   140020370:	imul   esp,DWORD PTR [rbx+0x65],0x6f725073
   140020377:	js     0x1400203f2
   140020379:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002037b:	fs gs ins BYTE PTR es:[rdi],dx
   14002037e:	rex
   14002037f:	add    BYTE PTR [rax],al
   140020382:	add    BYTE PTR [rax],al
   140020384:	add    BYTE PTR [rax],al
   140020386:	add    BYTE PTR [rax],al
   140020388:	loopne 0x1400203b4
   14002038a:	add    DWORD PTR [rax+0x1],eax
	...
   140020395:	add    BYTE PTR [rax],al
   140020397:	add    BYTE PTR [rsi],ch
   140020399:	(bad)  
   14002039a:	push   r14
   14002039c:	push   rcx
   14002039d:	push   rbx
   14002039e:	outs   dx,DWORD PTR ds:[rsi]
   14002039f:	jb     0x140020415
   1400203a1:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6f725072
   1400203aa:	js     0x140020425
   1400203ac:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400203ae:	fs gs ins BYTE PTR es:[rdi],dx
   1400203b1:	rex
   1400203b2:	add    BYTE PTR [rax],al
   1400203b5:	add    BYTE PTR [rax],al
   1400203b7:	add    al,ah
   1400203b9:	sub    al,BYTE PTR [rcx]
   1400203bb:	rex add DWORD PTR [rax],eax
	...
   1400203c6:	add    BYTE PTR [rax],al
   1400203c8:	cs (bad) 
   1400203ca:	push   r14
   1400203cc:	push   rcx
   1400203cd:	(bad)
   1400203d3:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   1400203d7:	outs   dx,DWORD PTR ds:[rsi]
   1400203d8:	js     0x140020453
   1400203da:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400203dc:	fs gs ins BYTE PTR es:[rdi],dx
   1400203df:	rex
   1400203e0:	add    BYTE PTR [rax],al
   1400203e3:	add    BYTE PTR [rax],al
   1400203e5:	add    BYTE PTR [rax],al
   1400203e7:	add    BYTE PTR [rax-0x18],al
   1400203ea:	add    BYTE PTR [rax+0x1],al
   1400203ed:	add    BYTE PTR [rax],al
   1400203ef:	add    al,ah
   1400203f1:	sub    al,BYTE PTR [rcx]
   1400203f3:	rex add DWORD PTR [rax],eax
	...
   1400203fe:	add    BYTE PTR [rax],al
   140020400:	cs (bad) 
   140020402:	push   r14
   140020404:	push   rcx
   140020405:	push   rsp
   140020406:	(bad)  
   140020407:	(bad)  
   140020408:	ins    BYTE PTR es:[rdi],dx
   140020409:	gs push rdi
   14002040b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140020413:	ins    DWORD PTR es:[rdi],dx
   140020414:	rex
   140020415:	add    BYTE PTR [rax],al
   140020418:	loopne 0x140020444
   14002041a:	add    DWORD PTR [rax+0x1],eax
	...
   140020425:	add    BYTE PTR [rax],al
   140020427:	add    BYTE PTR [rsi],ch
   140020429:	(bad)  
   14002042a:	push   r14
   14002042c:	push   rax
   14002042d:	jb     0x14002049e
   14002042f:	jo     0x140020496
   140020431:	jb     0x1400204a7
   140020433:	jns    0x140020479
   140020435:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   14002043c:	add    BYTE PTR [rax],al
   14002043e:	add    BYTE PTR [rax],al
   140020440:	loopne 0x14002046c
   140020442:	add    DWORD PTR [rax+0x1],eax
	...
   14002044d:	add    BYTE PTR [rax],al
   14002044f:	add    BYTE PTR [rsi],ch
   140020451:	(bad)  
   140020452:	push   r14
   140020454:	push   rcx
   140020455:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14002045d:	add    BYTE PTR [rax],al
   14002045f:	add    al,ah
   140020461:	sub    al,BYTE PTR [rcx]
   140020463:	rex add DWORD PTR [rax],eax
	...
   14002046e:	add    BYTE PTR [rax],al
   140020470:	cs (bad) 
   140020472:	push   r14
   140020474:	push   rcx
   140020475:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14002047d:	je     0x1400204f3
   14002047f:	outs   dx,DWORD PTR ds:[rsi]
   140020480:	outs   dx,BYTE PTR ds:[rsi]
   140020481:	rex.X outs dx,DWORD PTR ds:[rsi]
   140020483:	js     0x1400204c5
   140020485:	add    BYTE PTR [rax],al
   140020488:	loopne 0x1400204b4
   14002048a:	add    DWORD PTR [rax+0x1],eax
	...
   140020495:	add    BYTE PTR [rax],al
   140020497:	add    BYTE PTR [rsi],ch
   140020499:	(bad)  
   14002049a:	push   r14
   14002049c:	push   rcx
   14002049d:	push   rsp
   14002049e:	(bad)  
   14002049f:	(bad)  
   1400204a0:	ins    BYTE PTR es:[rdi],dx
   1400204a1:	gs push rdi
   1400204a3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   1400204ab:	add    BYTE PTR [rax],al
   1400204ad:	add    BYTE PTR [rax],al
   1400204af:	add    al,ah
   1400204b1:	sub    al,BYTE PTR [rcx]
   1400204b3:	rex add DWORD PTR [rax],eax
	...
   1400204be:	add    BYTE PTR [rax],al
   1400204c0:	cs (bad) 
   1400204c2:	push   r14
   1400204c4:	push   rcx
   1400204c5:	rex.WR (bad) 
   1400204c7:	(bad)  
   1400204c8:	gs ins BYTE PTR es:[rdi],dx
   1400204ca:	rex
   1400204cb:	add    BYTE PTR [rax],al
   1400204ce:	add    BYTE PTR [rax],al
   1400204d0:	rex call 0x1400344d6
   1400204d6:	add    BYTE PTR [rax],al
   1400204d8:	loopne 0x140020504
   1400204da:	add    DWORD PTR [rax+0x1],eax
	...
   1400204e5:	add    BYTE PTR [rax],al
   1400204e7:	add    BYTE PTR [rsi],ch
   1400204e9:	(bad)  
   1400204ea:	push   r14
   1400204ec:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400204ee:	addr32 push rsi
   1400204f0:	imul   esp,DWORD PTR [rbp+0x77],0x40407265
   1400204f7:	add    al,ah
   1400204f9:	sub    al,BYTE PTR [rcx]
   1400204fb:	rex add DWORD PTR [rax],eax
	...
   140020506:	add    BYTE PTR [rax],al
   140020508:	cs (bad) 
   14002050a:	push   r14
   14002050c:	push   rcx
   14002050d:	push   rsp
   14002050e:	gs js  0x140020585
   140020511:	rex.X jb 0x140020583
   140020514:	ja     0x140020589
   140020516:	gs jb  0x140020559
   140020519:	add    BYTE PTR [rax],al
   14002051c:	add    BYTE PTR [rax],al
   14002051e:	add    BYTE PTR [rax],al
   140020520:	loopne 0x14002054c
   140020522:	add    DWORD PTR [rax+0x1],eax
	...
   14002052d:	add    BYTE PTR [rax],al
   14002052f:	add    BYTE PTR [rsi],ch
   140020531:	(bad)  
   140020532:	push   r14
   140020534:	push   rcx
   140020535:	push   rsp
   140020536:	gs js  0x1400205ad
   140020539:	rex.RB
   14002053a:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0xe84000
   140020543:	rex add DWORD PTR [rax],eax
   140020546:	add    BYTE PTR [rax],al
   140020548:	loopne 0x140020574
   14002054a:	add    DWORD PTR [rax+0x1],eax
	...
   140020555:	add    BYTE PTR [rax],al
   140020557:	add    BYTE PTR [rsi],ch
   140020559:	(bad)  
   14002055a:	push   r14
   14002055c:	rex.WRB (bad) 
   14002055e:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   140020565:	ja     0x1400205a7
   140020567:	add    BYTE PTR [rax],al
   14002056a:	add    BYTE PTR [rax],al
   14002056c:	add    BYTE PTR [rax],al
   14002056e:	add    BYTE PTR [rax],al
   140020570:	loopne 0x14002059c
   140020572:	add    DWORD PTR [rax+0x1],eax
	...
   14002057d:	add    BYTE PTR [rax],al
   14002057f:	add    BYTE PTR [rsi],ch
   140020581:	(bad)  
   140020582:	push   r14
   140020584:	push   rcx
   140020585:	rex.WRB (bad) 
   140020587:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14002058e:	ja     0x1400205d0
   140020590:	add    BYTE PTR [rax],al
   140020593:	add    BYTE PTR [rax],al
   140020595:	add    BYTE PTR [rax],al
   140020597:	add    al,ah
   140020599:	sub    al,BYTE PTR [rcx]
   14002059b:	rex add DWORD PTR [rax],eax
	...
   1400205a6:	add    BYTE PTR [rax],al
   1400205a8:	cs (bad) 
   1400205aa:	push   r14
   1400205ac:	push   rcx
   1400205ad:	push   rsp
   1400205ae:	(bad)  
   1400205af:	(bad)  
   1400205b0:	push   rdi
   1400205b1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   1400205b9:	add    BYTE PTR [rax],al
   1400205bb:	add    BYTE PTR [rax],al
   1400205bd:	add    BYTE PTR [rax],al
   1400205bf:	add    BYTE PTR [rax-0x18],al
   1400205c2:	add    BYTE PTR [rax+0x1],al
   1400205c5:	add    BYTE PTR [rax],al
   1400205c7:	add    BYTE PTR [rax-0x18],al
   1400205ca:	add    BYTE PTR [rax+0x1],al
	...
   1400205d9:	and    al,BYTE PTR [rcx]
   1400205db:	rex add DWORD PTR [rax],eax
   1400205de:	add    BYTE PTR [rax],al
   1400205e0:	loopne 0x140020607
   1400205e2:	add    DWORD PTR [rax+0x1],eax
   1400205e5:	add    BYTE PTR [rax],al
   1400205e7:	add    BYTE PTR [rax+0x14000a8],al
	...
   1400205fd:	add    BYTE PTR [rax],al
   1400205ff:	add    BYTE PTR [rax-0x18],al
   140020602:	add    BYTE PTR [rax+0x1],al
	...
   140020611:	sub    BYTE PTR [rcx],al
   140020613:	rex add DWORD PTR [rax],eax
   140020616:	add    BYTE PTR [rax],al
   140020618:	sub    BYTE PTR [rax],0x1
   14002061b:	rex add DWORD PTR [rax],eax
   14002061e:	add    BYTE PTR [rax],al
   140020620:	adc    BYTE PTR [rbx+0x14000],ch
	...
   140020636:	add    BYTE PTR [rax],al
   140020638:	rex call 0x14003463e
	...
   140020646:	add    BYTE PTR [rax],al
   140020648:	loopne 0x140020672
   14002064a:	add    DWORD PTR [rax+0x1],eax
   14002064d:	add    BYTE PTR [rax],al
   14002064f:	add    BYTE PTR [rax],dl
   140020651:	sub    DWORD PTR [rcx],eax
   140020653:	rex add DWORD PTR [rax],eax
   140020656:	add    BYTE PTR [rax],al
   140020658:	sub    BYTE PTR [rax+rax*1+0x140],0x0
	...
   140020670:	rex call 0x140034676
	...
   14002067e:	add    BYTE PTR [rax],al
   140020680:	push   rax
   140020681:	sub    DWORD PTR [rcx],eax
   140020683:	rex add DWORD PTR [rax],eax
   140020686:	add    BYTE PTR [rax],al
   140020688:	js     0x1400206b3
   14002068a:	add    DWORD PTR [rax+0x1],eax
   14002068d:	add    BYTE PTR [rax],al
   14002068f:	add    BYTE PTR [rax+0x14000ac],al
	...
   1400206a5:	add    BYTE PTR [rax],al
   1400206a7:	add    BYTE PTR [rax-0x18],al
   1400206aa:	add    BYTE PTR [rax+0x1],al
	...
   1400206b5:	add    BYTE PTR [rax],al
   1400206b7:	add    BYTE PTR [rax+0x1400129],bh
   1400206bd:	add    BYTE PTR [rax],al
   1400206bf:	add    al,ah
   1400206c1:	sub    DWORD PTR [rcx],eax
   1400206c3:	rex add DWORD PTR [rax],eax
   1400206c6:	add    BYTE PTR [rax],al
   1400206c8:	sub    BYTE PTR [rax+rax*1+0x140],0x0
	...
   1400206e0:	rex call 0x1400346e6
	...
   1400206ee:	add    BYTE PTR [rax],al
   1400206f0:	and    BYTE PTR [rdx],ch
   1400206f2:	add    DWORD PTR [rax+0x1],eax
   1400206f5:	add    BYTE PTR [rax],al
   1400206f7:	add    BYTE PTR [rax+0x140012a],al
   1400206fd:	add    BYTE PTR [rax],al
   1400206ff:	add    BYTE PTR [rax+0x14000ad],dl
	...
   140020715:	add    BYTE PTR [rax],al
   140020717:	add    al,ah
   140020719:	sub    al,BYTE PTR [rcx]
   14002071b:	rex add DWORD PTR [rax],eax
	...
   140020726:	add    BYTE PTR [rax],al
   140020728:	cs (bad) 
   14002072a:	push   r14
   14002072c:	je     0x1400207a7
   14002072e:	jo     0x140020795
   140020730:	pop    rdi
   140020731:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140020738:	(bad)  
   140020739:	(bad)  
   14002073a:	(bad)  
   14002073b:	(bad)  
   14002073c:	(bad)  
   14002073d:	(bad)  
   14002073e:	(bad)  
   14002073f:	(bad)  
   140020740:	(bad)  
   140020741:	(bad)  
   140020742:	(bad)  
   140020743:	inc    DWORD PTR [rcx]
   140020745:	add    BYTE PTR [rax],al
   140020747:	add    BYTE PTR [rdx],dh
   140020749:	movabs ds:0x5dcd00002b992ddf,al
   140020752:	and    dl,dl
   140020754:	data16 (bad) 
   140020756:	(bad)  
   140020757:	inc    DWORD PTR [rax-0x18]
   14002075a:	add    BYTE PTR [rax+0x1],al
   14002075d:	add    BYTE PTR [rax],al
   14002075f:	add    BYTE PTR [rax-0x18],al
   140020762:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

0000000140021000 <.pdata>:
   140021000:	add    BYTE PTR [rax],dl
   140021002:	add    BYTE PTR [rax],al
   140021004:	stos   BYTE PTR es:[rdi],al
   140021005:	adc    BYTE PTR [rax],al
   140021007:	add    BYTE PTR [rax],cl
   140021009:	rex.RX add DWORD PTR [rax],r8d
   14002100c:	mov    al,0x10
   14002100e:	add    BYTE PTR [rax],al
   140021010:	movabs ds:0xb000014088000011,eax
   140021019:	adc    DWORD PTR [rax],eax
   14002101b:	add    cl,dl
   14002101d:	adc    al,BYTE PTR [rax]
   14002101f:	add    BYTE PTR [rax+rax*2+0x12e00001],dl
   140021026:	add    BYTE PTR [rax],al
   140021028:	sbb    BYTE PTR [rax+rax*1],dl
   14002102b:	add    BYTE PTR [rax+0x20000140],ah
   140021031:	adc    al,0x0
   140021033:	add    BYTE PTR [rdi-0x27ffffec],cl
   140021039:	rex add DWORD PTR [rax],eax
   14002103c:	(bad)  
   14002103d:	adc    al,0x0
   14002103f:	add    bh,bl
   140021041:	adc    eax,0x40bc0000
   140021046:	add    DWORD PTR [rax],eax
   140021048:	fist   WORD PTR [rip+0x15f00000]        # 0x155f2104e
   14002104e:	add    BYTE PTR [rax],al
   140021050:	lods   al,BYTE PTR ds:[rsi]
   140021051:	rex add DWORD PTR [rax],eax
   140021054:	lock adc eax,0x171e0000
   14002105a:	add    BYTE PTR [rax],al
   14002105c:	in     al,dx
   14002105d:	rex add DWORD PTR [rax],eax
   140021060:	and    BYTE PTR [rdi],dl
   140021062:	add    BYTE PTR [rax],al
   140021064:	and    eax,0xfc000018
   140021069:	rex add DWORD PTR [rax],eax
   14002106c:	xor    BYTE PTR [rax],bl
   14002106e:	add    BYTE PTR [rax],al
   140021070:	jno    0x14002108a
   140021072:	add    BYTE PTR [rax],al
   140021074:	mov    al,0x46
   140021076:	add    DWORD PTR [rax],eax
   140021078:	sbb    BYTE PTR [rax],0x0
   14002107b:	add    BYTE PTR [rdi+0x20000018],ch
   140021081:	add    QWORD PTR [rax],rax
   140021084:	mov    al,0x18
   140021086:	add    BYTE PTR [rax],al
   140021088:	xchg   esp,eax
   140021089:	and    al,0x0
   14002108b:	add    BYTE PTR [rcx+rax*2],cl
   14002108e:	add    DWORD PTR [rax],eax
   140021090:	movabs al,ds:0x20000024d0000024
   140021099:	add    QWORD PTR [rax],rax
   14002109c:	shl    BYTE PTR [rax+rax*1],1
   14002109f:	add    BYTE PTR [rax],al
   1400210a1:	and    eax,0x48200000
   1400210a6:	add    DWORD PTR [rax],eax
   1400210a8:	add    BYTE PTR [rip+0x25300000],ah        # 0x1653210ae
   1400210ae:	add    BYTE PTR [rax],al
   1400210b0:	and    BYTE PTR [rax+0x1],cl
   1400210b3:	add    BYTE PTR [rax],dh
   1400210b5:	and    eax,0x25600000
   1400210ba:	add    BYTE PTR [rax],al
   1400210bc:	and    BYTE PTR [rax+0x1],cl
   1400210bf:	add    BYTE PTR [rax+0x25],ah
   1400210c2:	add    BYTE PTR [rax],al
   1400210c4:	nop
   1400210c5:	and    eax,0x48200000
   1400210ca:	add    DWORD PTR [rax],eax
   1400210cc:	nop
   1400210cd:	and    eax,0x25c00000
   1400210d2:	add    BYTE PTR [rax],al
   1400210d4:	and    BYTE PTR [rax+0x1],cl
   1400210d7:	add    al,al
   1400210d9:	and    eax,0x25f00000
   1400210de:	add    BYTE PTR [rax],al
   1400210e0:	and    BYTE PTR [rax+0x1],cl
   1400210e3:	add    al,dh
   1400210e5:	and    eax,0x26200000
   1400210ea:	add    BYTE PTR [rax],al
   1400210ec:	and    BYTE PTR [rax+0x1],cl
   1400210ef:	add    BYTE PTR [rax],ah
   1400210f1:	add    BYTE PTR es:[rax],al
   1400210f4:	push   rax
   1400210f5:	add    BYTE PTR es:[rax],al
   1400210f8:	and    BYTE PTR [rax+0x1],cl
   1400210fb:	add    al,al
   1400210fd:	add    BYTE PTR es:[rax],al
   140021100:	adc    al,0x27
   140021102:	add    BYTE PTR [rax],al
   140021104:	and    BYTE PTR [rax+0x1],cl
   140021107:	add    BYTE PTR [rax],ah
   140021109:	(bad)  
   14002110a:	add    BYTE PTR [rax],al
   14002110c:	je     0x140021135
   14002110e:	add    BYTE PTR [rax],al
   140021110:	sub    BYTE PTR [rcx+0x1],al
   140021113:	add    BYTE PTR [rax-0x26ffffd9],al
   140021119:	sub    BYTE PTR [rax],al
   14002111b:	add    BYTE PTR [rsp+rax*2+0x1],bl
   14002111f:	add    al,ah
   140021121:	sub    BYTE PTR [rax],al
   140021123:	add    BYTE PTR [rcx],cl
   140021125:	sub    DWORD PTR [rax],eax
   140021127:	add    BYTE PTR [rax+0x41],bl
   14002112a:	add    DWORD PTR [rax],eax
   14002112c:	or     DWORD PTR [rcx],ebp
   14002112e:	add    BYTE PTR [rax],al
   140021130:	cmp    BYTE PTR [rcx],ch
   140021132:	add    BYTE PTR [rax],al
   140021134:	rex.R
   140021135:	add    DWORD PTR [r8],eax
   140021138:	cmp    BYTE PTR [rcx],ch
   14002113a:	add    BYTE PTR [rax],al
   14002113c:	push   rcx
   14002113d:	sub    DWORD PTR [rax],eax
   14002113f:	add    BYTE PTR [rcx+rax*2],dh
   140021142:	add    DWORD PTR [rax],eax
   140021144:	jo     0x14002116f
   140021146:	add    BYTE PTR [rax],al
   140021148:	lea    ebp,[rcx]
   14002114a:	add    BYTE PTR [rax],al
   14002114c:	sbb    BYTE PTR [rax+0x1],cl
   14002114f:	add    BYTE PTR [rbp-0x15ffffd7],cl
   140021155:	sub    DWORD PTR [rax],eax
   140021157:	add    BYTE PTR [rax+0x41],bh
   14002115a:	add    DWORD PTR [rax],eax
   14002115c:	(bad)  
   14002115d:	sub    DWORD PTR [rax],eax
   14002115f:	add    bh,ch
   140021161:	sub    DWORD PTR [rax],eax
   140021163:	add    BYTE PTR [rax+0x41],ch
   140021166:	add    DWORD PTR [rax],eax
   140021168:	lock sub DWORD PTR [rax],eax
   14002116b:	add    BYTE PTR [rcx],dl
   14002116d:	sub    al,BYTE PTR [rax]
   14002116f:	add    BYTE PTR [rcx+rax*2+0x2a110001],bh
   140021176:	add    BYTE PTR [rax],al
   140021178:	xor    DWORD PTR [rbx],ebp
   14002117a:	add    BYTE PTR [rax],al
   14002117c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002117d:	add    DWORD PTR [r8],eax
   140021180:	xor    DWORD PTR [rbx],ebp
   140021182:	add    BYTE PTR [rax],al
   140021184:	cmp    al,0x2b
   140021186:	add    BYTE PTR [rax],al
   140021188:	xchg   esp,eax
   140021189:	add    DWORD PTR [r8],eax
   14002118c:	rex sub eax,DWORD PTR [rax]
   14002118f:	add    BYTE PTR [rsi+0x2c],bh
   140021192:	add    BYTE PTR [rax],al
   140021194:	enter  0x141,0x0
   140021198:	sub    BYTE PTR [rax+rax*1],0x0
   14002119c:	jle    0x1400211cb
   14002119e:	add    BYTE PTR [rax],al
   1400211a0:	loopne 0x1400211e3
   1400211a2:	add    DWORD PTR [rax],eax
   1400211a4:	sub    BYTE PTR [rip+0x2d9a0000],0x0        # 0x16d9c11ab
   1400211ab:	add    BYTE PTR [rdi+rax*2],bh
   1400211ae:	add    DWORD PTR [rax],eax
   1400211b0:	(bad)  
   1400211b1:	sub    eax,0x2df70000
   1400211b6:	add    BYTE PTR [rax],al
   1400211b8:	add    al,0x42
   1400211ba:	add    DWORD PTR [rax],eax
   1400211bc:	imul   DWORD PTR [rip+0x2dfc0000]        # 0x16dfe11c2
   1400211c2:	add    BYTE PTR [rax],al
   1400211c4:	hlt    
   1400211c5:	add    DWORD PTR [r8],eax
   1400211c8:	add    BYTE PTR [rsi],ch
   1400211ca:	add    BYTE PTR [rax],al
   1400211cc:	imul   ebp,DWORD PTR [rdi],0x42180000
   1400211d2:	add    DWORD PTR [rax],eax
   1400211d4:	jo     0x140021205
   1400211d6:	add    BYTE PTR [rax],al
   1400211d8:	out    0x2f,al
   1400211da:	add    BYTE PTR [rax],al
   1400211dc:	jo     0x140021220
   1400211de:	add    DWORD PTR [rax],eax
   1400211e0:	out    0x2f,al
   1400211e2:	add    BYTE PTR [rax],al
   1400211e4:	cmp    al,0x31
   1400211e6:	add    BYTE PTR [rax],al
   1400211e8:	push   rsp
   1400211e9:	rex.X add DWORD PTR [rax],eax
   1400211ec:	cmp    al,0x31
   1400211ee:	add    BYTE PTR [rax],al
   1400211f0:	sbb    esi,DWORD PTR [rdx]
   1400211f2:	add    BYTE PTR [rax],al
   1400211f4:	cmp    al,0x42
   1400211f6:	add    DWORD PTR [rax],eax
   1400211f8:	sbb    esi,DWORD PTR [rdx]
   1400211fa:	add    BYTE PTR [rax],al
   1400211fc:	sub    BYTE PTR [rdx],dh
   1400211fe:	add    BYTE PTR [rax],al
   140021200:	sub    al,0x42
   140021202:	add    DWORD PTR [rax],eax
   140021204:	xor    BYTE PTR [rdx],dh
   140021206:	add    BYTE PTR [rax],al
   140021208:	xor    al,BYTE PTR [r8]
   14002120b:	add    al,cl
   14002120d:	rex.X add DWORD PTR [rax],eax
   140021210:	xor    al,BYTE PTR [r8]
   140021213:	add    BYTE PTR [rcx],dh
   140021215:	cmp    BYTE PTR [rax],al
   140021217:	add    BYTE PTR [rdx+rax*2+0x38310001],dh
   14002121e:	add    BYTE PTR [rax],al
   140021220:	xchg   edi,eax
   140021221:	cmp    eax,DWORD PTR [rax]
   140021223:	add    BYTE PTR [rax-0x68fffebe],ah
   140021229:	cmp    eax,DWORD PTR [rax]
   14002122b:	add    dh,cl
   14002122d:	cmp    eax,DWORD PTR [rax]
   14002122f:	add    BYTE PTR [rax-0x31fffebe],dl
   140021235:	cmp    eax,DWORD PTR [rax]
   140021237:	add    BYTE PTR [rcx],bh
   140021239:	cmp    al,0x0
   14002123b:	add    BYTE PTR [rax+0x40000142],al
   140021241:	cmp    al,0x0
   140021243:	add    ch,dl
   140021245:	add    BYTE PTR ds:[rax],al
   140021248:	fadd   DWORD PTR [rdx+0x1]
   14002124b:	add    al,ah
   14002124d:	add    BYTE PTR ds:[rax],al
   140021250:	in     eax,0x44
   140021252:	add    BYTE PTR [rax],al
   140021254:	call   0x13002139b
   140021259:	add    BYTE PTR [rax],r8b
   14002125c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002125d:	rex.RX add BYTE PTR [rax],r8b
   140021260:	adc    al,0x43
   140021262:	add    DWORD PTR [rax],eax
   140021264:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021265:	rex.RX add BYTE PTR [rax],r8b
   140021268:	add    dl,BYTE PTR [rdx+0x0]
   14002126b:	add    BYTE PTR [rax],al
   14002126d:	rex.XB add DWORD PTR [r8],eax
   140021270:	adc    BYTE PTR [rdx+0x0],dl
   140021273:	add    BYTE PTR [rdx+rdx*2+0x0],dl
   140021277:	add    BYTE PTR [rax+0x54000143],bl
   14002127d:	push   rdx
   14002127e:	add    BYTE PTR [rax],al
   140021280:	outs   dx,DWORD PTR ds:[rsi]
   140021281:	push   rdx
   140021282:	add    BYTE PTR [rax],al
   140021284:	test   BYTE PTR [rbx+0x1],al
   140021287:	add    BYTE PTR [rdi+0x52],ch
   14002128a:	add    BYTE PTR [rax],al
   14002128c:	leave  
   14002128d:	push   rbx
   14002128e:	add    BYTE PTR [rax],al
   140021290:	jo     0x1400212d5
   140021292:	add    DWORD PTR [rax],eax
   140021294:	leave  
   140021295:	push   rbx
   140021296:	add    BYTE PTR [rax],al
   140021298:	rex.WX push rbp
   14002129a:	add    BYTE PTR [rax],al
   14002129c:	pop    rsp
   14002129d:	rex.XB add DWORD PTR [r8],eax
   1400212a0:	rex.WX push rbp
   1400212a2:	add    BYTE PTR [rax],al
   1400212a4:	repnz push rsi
   1400212a6:	add    BYTE PTR [rax],al
   1400212a8:	rex.WR
   1400212a9:	rex.XB add DWORD PTR [r8],eax
   1400212ac:	repnz push rsi
   1400212ae:	add    BYTE PTR [rax],al
   1400212b0:	mov    bl,0x57
   1400212b2:	add    BYTE PTR [rax],al
   1400212b4:	cmp    al,0x43
   1400212b6:	add    DWORD PTR [rax],eax
   1400212b8:	mov    bl,0x57
   1400212ba:	add    BYTE PTR [rax],al
   1400212bc:	mov    edi,0x2c000057
   1400212c1:	rex.XB add DWORD PTR [r8],eax
   1400212c4:	rcl    BYTE PTR [rdi+0x0],0x0
   1400212c8:	jrcxz  0x140021321
   1400212ca:	add    BYTE PTR [rax],al
   1400212cc:	int3   
   1400212cd:	rex.XB add DWORD PTR [r8],eax
   1400212d0:	jrcxz  0x140021329
   1400212d2:	add    BYTE PTR [rax],al
   1400212d4:	(bad)  
   1400212d5:	pop    rcx
   1400212d6:	add    BYTE PTR [rax],al
   1400212d8:	mov    eax,0x60000143
   1400212dd:	pop    rcx
   1400212de:	add    BYTE PTR [rax],al
   1400212e0:	imul   ebx,DWORD PTR [rcx+0x0],0x0
   1400212e4:	test   al,0x43
   1400212e6:	add    DWORD PTR [rax],eax
   1400212e8:	jo     0x140021343
   1400212ea:	add    BYTE PTR [rax],al
   1400212ec:	popf   
   1400212ed:	pop    rdx
   1400212ee:	add    BYTE PTR [rax],al
   1400212f0:	sbb    BYTE PTR [rcx+rax*1+0x0],al
   1400212f4:	popf   
   1400212f5:	pop    rdx
   1400212f6:	add    BYTE PTR [rax],al
   1400212f8:	rex.WRX pop rbx
   1400212fa:	add    BYTE PTR [rax],al
   1400212fc:	cld    
   1400212fd:	rex.XB add DWORD PTR [r8],eax
   140021300:	rex.WRX pop rbx
   140021302:	add    BYTE PTR [rax],al
   140021304:	scas   al,BYTE PTR es:[rdi]
   140021305:	pop    rbx
   140021306:	add    BYTE PTR [rax],al
   140021308:	call   0xee021450
   14002130d:	pop    rbx
   14002130e:	add    BYTE PTR [rax],al
   140021310:	xor    BYTE PTR [rax+rax*1+0x0],bl
   140021314:	fadd   DWORD PTR [rbx+0x1]
   140021317:	add    BYTE PTR [rax],dh
   140021319:	pop    rsp
   14002131a:	add    BYTE PTR [rax],al
   14002131c:	fwait
   14002131d:	pop    rsp
   14002131e:	add    BYTE PTR [rax],al
   140021320:	sub    BYTE PTR [rcx+rax*1+0x0],al
   140021324:	movabs al,ds:0x800005dd100005c
   14002132d:	rex.RX add DWORD PTR [rax],r8d
   140021330:	lock pop rbp
   140021332:	add    BYTE PTR [rax],al
   140021334:	cmp    eax,0xb000005e
   140021339:	rex.RX add DWORD PTR [rax],r8d
   14002133c:	rex pop rsi
   14002133e:	add    BYTE PTR [rax],al
   140021340:	pop    si
   140021342:	add    BYTE PTR [rax],al
   140021344:	push   rsp
   140021345:	add    DWORD PTR [rax],r8d
   140021348:	pop    si
   14002134a:	add    BYTE PTR [rax],al
   14002134c:	test   al,0x5e
   14002134e:	add    BYTE PTR [rax],al
   140021350:	rex
   140021351:	add    DWORD PTR [rax],r8d
   140021354:	test   al,0x5e
   140021356:	add    BYTE PTR [rax],al
   140021358:	mov    edx,0x3000005e
   14002135d:	add    DWORD PTR [rax],r8d
   140021360:	loopne 0x1400213c0
   140021362:	add    BYTE PTR [rax],al
   140021364:	rcr    BYTE PTR [rdi+0x0],0x0
   140021368:	pop    rsp
   140021369:	add    DWORD PTR [rax],r8d
   14002136c:	rcr    BYTE PTR [rdi+0x0],0x0
   140021370:	or     eax,0xb0000060
   140021375:	rex.RX add DWORD PTR [rax],r8d
   140021378:	adc    BYTE PTR [rax+0x0],ah
   14002137b:	add    BYTE PTR [rbp+0x60],ch
   14002137e:	add    BYTE PTR [rax],al
   140021380:	and    BYTE PTR [rax+0x1],cl
   140021383:	add    BYTE PTR [rax+0x60],dh
   140021386:	add    BYTE PTR [rax],al
   140021388:	int    0x60
   14002138a:	add    BYTE PTR [rax],al
   14002138c:	and    BYTE PTR [rax+0x1],cl
   14002138f:	add    al,ah
   140021391:	(bad)  
   140021392:	add    BYTE PTR [rax],al
   140021394:	mov    eax,0x88000062
   140021399:	rex add DWORD PTR [rax],eax
   14002139c:	shl    BYTE PTR [rdx+0x0],0x0
   1400213a0:	retf   
   1400213a1:	(bad)  
   1400213a2:	add    BYTE PTR [rax],al
   1400213a4:	mov    esp,0xcb000141
   1400213a9:	(bad)  
   1400213aa:	add    BYTE PTR [rax],al
   1400213ac:	movsxd eax,DWORD PTR [r8]
   1400213af:	add    BYTE PTR [rsp+rax*2+0x63410001],ah
   1400213b6:	add    BYTE PTR [rax],al
   1400213b8:	out    dx,al
   1400213b9:	movsxd eax,DWORD PTR [rax]
   1400213bb:	add    BYTE PTR [rsp+rax*2+0x63ee0001],cl
   1400213c2:	add    BYTE PTR [rax],al
   1400213c4:	add    ah,BYTE PTR [rax+rax*1+0x0]
   1400213c8:	jl     0x14002140e
   1400213ca:	add    DWORD PTR [rax],eax
   1400213cc:	add    ah,BYTE PTR [rax+rax*1+0x0]
   1400213d0:	xor    al,0x64
   1400213d2:	add    BYTE PTR [rax],al
   1400213d4:	ins    BYTE PTR es:[rdi],dx
   1400213d5:	add    DWORD PTR [rax],r8d
   1400213d8:	rex
   1400213d9:	add    BYTE PTR fs:[rax],al
   1400213dc:	add    DWORD PTR [rbp+0x0],esp
   1400213df:	add    BYTE PTR [rdi+rax*2+0x1],al
   1400213e3:	add    BYTE PTR [rax],dl
   1400213e5:	add    BYTE PTR gs:[rax],al
   1400213e8:	test   DWORD PTR [rbp+0x0],esp
   1400213eb:	add    BYTE PTR [rax-0x6ffffeba],dh
   1400213f1:	add    BYTE PTR gs:[rax],al
   1400213f4:	test   eax,0xb8000066
   1400213f9:	add    DWORD PTR [rax],r8d
   1400213fc:	mov    al,0x66
   1400213fe:	add    BYTE PTR [rax],al
   140021400:	leave  
   140021401:	data16 add BYTE PTR [rax],al
   140021404:	lock add DWORD PTR [rax],r8d
   140021408:	leave  
   140021409:	data16 add BYTE PTR [rax],al
   14002140c:	pop    rsi
   14002140d:	add    BYTE PTR [eax],al
   140021410:	fadd   QWORD PTR [rcx+rax*1+0x0]
   140021414:	pop    rsi
   140021415:	add    BYTE PTR [eax],al
   140021418:	(bad)  
   140021419:	add    BYTE PTR [eax],al
   14002141c:	int3   
   14002141d:	add    DWORD PTR [rax],r8d
   140021420:	(bad)  
   140021421:	add    BYTE PTR [eax],al
   140021424:	hlt    
   140021425:	outs   dx,BYTE PTR ds:[rsi]
   140021426:	add    BYTE PTR [rax],al
   140021428:	cld    
   140021429:	add    DWORD PTR [rax],r8d
   14002142c:	add    BYTE PTR [rdi+0x0],ch
   14002142f:	add    BYTE PTR [rdx+0x6f],bl
   140021432:	add    BYTE PTR [rax],al
   140021434:	rex.WR
   140021435:	add    DWORD PTR [r8],r8d
   140021438:	pop    rdx
   140021439:	outs   dx,DWORD PTR ds:[rsi]
   14002143a:	add    BYTE PTR [rax],al
   14002143c:	fstp   TBYTE PTR [rcx+0x0]
   14002143f:	add    BYTE PTR [rax],ch
   140021441:	add    DWORD PTR [r8],r8d
   140021444:	fstp   TBYTE PTR [rcx+0x0]
   140021447:	add    ah,dh
   140021449:	jns    0x14002144b
   14002144b:	add    BYTE PTR [rax],bl
   14002144d:	add    DWORD PTR [r8],r8d
   140021450:	add    BYTE PTR [rdx+0x0],bh
   140021453:	add    cl,ch
   140021455:	jp     0x140021457
   140021457:	add    BYTE PTR [rax-0x16fffebb],cl
   14002145d:	jp     0x14002145f
   14002145f:	add    BYTE PTR [rdx-0x80],al
   140021462:	add    BYTE PTR [rax],al
   140021464:	ins    BYTE PTR es:[rdi],dx
   140021465:	add    DWORD PTR [r8],r8d
   140021468:	rex.X add BYTE PTR [rax],0x0
   14002146c:	xchg   DWORD PTR [rax+0x455c0000],eax
   140021472:	add    DWORD PTR [rax],eax
   140021474:	nop
   140021475:	add    BYTE PTR [rax],0x0
   140021478:	call   0x1600214fd
   14002147d:	add    QWORD PTR [rax],rax
   140021480:	lock add BYTE PTR [rax],0x0
   140021484:	(bad)  
   140021485:	add    DWORD PTR [rax],0x146b000
   14002148b:	add    BYTE PTR [rax],ah
   14002148d:	add    DWORD PTR [rax],0x813100
   140021493:	add    ah,ah
   140021495:	add    DWORD PTR [r8],r8d
   140021498:	xor    DWORD PTR [rcx-0x7ebc0000],eax
   14002149e:	add    BYTE PTR [rax],al
   1400214a0:	rol    BYTE PTR [rbp+0x1],1
   1400214a3:	add    BYTE PTR [rcx+rax*4+0x0],al
   1400214a7:	add    BYTE PTR [rdx+rax*4],bh
   1400214aa:	add    BYTE PTR [rax],al
   1400214ac:	mov    esp,0x3c000145
   1400214b1:	(bad)  
   1400214b2:	add    BYTE PTR [rax],al
   1400214b4:	rex.RXB (bad) 
   1400214b6:	add    BYTE PTR [rax],al
   1400214b8:	lods   al,BYTE PTR ds:[rsi]
   1400214b9:	add    DWORD PTR [r8],r8d
   1400214bc:	rex.RXB (bad) 
   1400214be:	add    BYTE PTR [rax],al
   1400214c0:	jae    0x140021444
   1400214c2:	add    BYTE PTR [rax],al
   1400214c4:	pushf  
   1400214c5:	add    DWORD PTR [r8],r8d
   1400214c8:	add    BYTE PTR [rdx-0x7d0b0000],0x0
   1400214cf:	add    BYTE PTR [rax+0x47],bl
   1400214d2:	add    DWORD PTR [rax],eax
   1400214d4:	add    BYTE PTR [rbx-0x7be30000],al
   1400214da:	add    BYTE PTR [rax],al
   1400214dc:	pop    rsp
   1400214dd:	add    DWORD PTR [rax],r8d
   1400214e0:	and    BYTE PTR [rax+rax*1+0x879600],al
   1400214e7:	add    al,dh
   1400214e9:	add    DWORD PTR [r8],r8d
   1400214ec:	movabs al,ds:0xb0000087c2000087
   1400214f5:	rex.RX add DWORD PTR [rax],r8d
   1400214f8:	rol    BYTE PTR [rdi-0x77bd0000],1
   1400214fe:	add    BYTE PTR [rax],al
   140021500:	sub    BYTE PTR [rcx+rax*1+0x0],al
   140021504:	push   rax
   140021505:	mov    BYTE PTR [rax],al
   140021507:	add    ch,bh
   140021509:	mov    DWORD PTR [rax],eax
   14002150b:	add    BYTE PTR [rax],cl
   14002150d:	rex.RX add DWORD PTR [rax],r8d
   140021510:	add    BYTE PTR [rdx-0x75d00000],cl
   140021516:	add    BYTE PTR [rax],al
   140021518:	and    BYTE PTR [rax+0x1],cl
   14002151b:	add    BYTE PTR [rax-0x76],al
   14002151e:	add    BYTE PTR [rax],al
   140021520:	or     DWORD PTR [rdx+0x46b00000],0x1
   140021527:	add    BYTE PTR [rax+0x4100008a],dl
   14002152d:	lea    eax,[rax]
   14002152f:	add    BYTE PTR [rsi+rax*2],bl
   140021532:	add    DWORD PTR [rax],eax
   140021534:	push   rax
   140021535:	lea    eax,[rax]
   140021537:	add    BYTE PTR [rax+0x2000008d],al
   14002153d:	add    QWORD PTR [rax],rax
   140021540:	or     BYTE PTR [rbp-0x71460000],0x0
   140021547:	add    al,cl
   140021549:	add    DWORD PTR [r8],eax
   14002154c:	ror    BYTE PTR [rsi-0x6ee60000],0x0
   140021553:	add    BYTE PTR [rax+0x46],ch
   140021556:	add    DWORD PTR [rax],eax
   140021558:	sbb    dl,BYTE PTR [rcx-0x6eb80000]
   14002155e:	add    BYTE PTR [rax],al
   140021560:	push   rsp
   140021561:	rex.RX add DWORD PTR [rax],r8d
   140021564:	xchg   rcx,rax
   140021566:	add    BYTE PTR [rax],al
   140021568:	mov    cl,0x91
   14002156a:	add    BYTE PTR [rax],al
   14002156c:	rex
   14002156d:	rex.RX add DWORD PTR [rax],r8d
   140021570:	mov    cl,0x91
   140021572:	add    BYTE PTR [rax],al
   140021574:	mov    bl,0x93
   140021576:	add    BYTE PTR [rax],al
   140021578:	xor    BYTE PTR [rsi+0x1],al
   14002157b:	add    al,al
   14002157d:	xchg   ebx,eax
   14002157e:	add    BYTE PTR [rax],al
   140021580:	lock xchg ebx,eax
   140021582:	add    BYTE PTR [rax],al
   140021584:	and    BYTE PTR [rax+0x1],cl
   140021587:	add    al,dh
   140021589:	xchg   ebx,eax
   14002158a:	add    BYTE PTR [rax],al
   14002158c:	and    BYTE PTR [rax+rax*1+0x1482000],dl
   140021593:	add    BYTE PTR [rax],ah
   140021595:	xchg   esp,eax
   140021596:	add    BYTE PTR [rax],al
   140021598:	push   rax
   140021599:	xchg   esp,eax
   14002159a:	add    BYTE PTR [rax],al
   14002159c:	and    BYTE PTR [rax+0x1],cl
   14002159f:	add    BYTE PTR [rax-0x3fffff6c],dl
   1400215a5:	xchg   esp,eax
   1400215a6:	add    BYTE PTR [rax],al
   1400215a8:	and    BYTE PTR [rax+0x1],cl
   1400215ab:	add    al,al
   1400215ad:	xchg   esp,eax
   1400215ae:	add    BYTE PTR [rax],al
   1400215b0:	hlt    
   1400215b1:	xchg   esp,eax
   1400215b2:	add    BYTE PTR [rax],al
   1400215b4:	movabs al,ds:0xce000094f4000146
   1400215bd:	xchg   ebp,eax
   1400215be:	add    BYTE PTR [rax],al
   1400215c0:	mov    BYTE PTR [rsi+0x1],al
   1400215c3:	add    dh,cl
   1400215c5:	xchg   ebp,eax
   1400215c6:	add    BYTE PTR [rax],al
   1400215c8:	loop   0x14002155f
   1400215ca:	add    BYTE PTR [rax],al
   1400215cc:	js     0x140021614
   1400215ce:	add    DWORD PTR [rax],eax
   1400215d0:	lock xchg ebp,eax
   1400215d2:	add    BYTE PTR [rax],al
   1400215d4:	sbb    eax,0xb0000096
   1400215d9:	rex.RX add DWORD PTR [rax],r8d
   1400215dc:	and    BYTE PTR [rsi-0x691d0000],dl
   1400215e2:	add    BYTE PTR [rax],al
   1400215e4:	mov    eax,0x146
   1400215e9:	xchg   edi,eax
   1400215ea:	add    BYTE PTR [rax],al
   1400215ec:	xor    BYTE PTR [rdi+0x48200000],dl
   1400215f2:	add    DWORD PTR [rax],eax
   1400215f4:	xor    BYTE PTR [rdi-0x67e40000],dl
   1400215fa:	add    BYTE PTR [rax],al
   1400215fc:	enter  0x146,0x0
   140021600:	and    BYTE PTR [rax-0x66570000],bl
   140021606:	add    BYTE PTR [rax],al
   140021608:	fadd   DWORD PTR [rsi+0x1]
   14002160b:	add    BYTE PTR [rax-0x26ffff67],dh
   140021611:	(bad)  
   140021612:	add    BYTE PTR [rax],al
   140021614:	sub    BYTE PTR [rcx+rax*1+0x0],al
   140021618:	loopne 0x1400215b4
   14002161a:	add    BYTE PTR [rax],al
   14002161c:	and    BYTE PTR [rax+rax*1+0x146e400],bl
   140021623:	add    BYTE PTR [rax],ah
   140021625:	pushf  
   140021626:	add    BYTE PTR [rax],al
   140021628:	(bad)  
   140021629:	movabs al,ds:0xa020000146ec0000
   140021632:	add    BYTE PTR [rax],al
   140021634:	push   rax
   140021635:	movabs al,ds:0xa070000148200000
   14002163e:	add    BYTE PTR [rax],al
   140021640:	movabs ds:0xb0000146b00000a0,al
   140021649:	movabs al,ds:0x48200000a0fd0000
   140021652:	add    DWORD PTR [rax],eax
   140021654:	add    BYTE PTR [rcx-0x5dd20000],ah
   14002165a:	add    BYTE PTR [rax],al
   14002165c:	xor    BYTE PTR [rdi+0x1],al
   14002165f:	add    BYTE PTR [rsi],ch
   140021661:	movabs ds:0x470c0000a8310000,al
   14002166a:	add    DWORD PTR [rax],eax
   14002166c:	xor    DWORD PTR [rax-0x57860000],ebp
   140021672:	add    BYTE PTR [rax],al
   140021674:	cld    
   140021675:	rex.RX add DWORD PTR [rax],r8d
   140021678:	sub    BYTE PTR [rax-0x56500000],0x0
   14002167f:	add    BYTE PTR [rax],bl
   140021681:	add    QWORD PTR [rax],rax
   140021684:	add    BYTE PTR [rdx-0x55900000],ch
   14002168a:	add    BYTE PTR [rax],al
   14002168c:	rex.R
   14002168d:	rex.RXB add DWORD PTR [r8],r8d
   140021690:	loopne 0x14002163c
   140021692:	add    BYTE PTR [rax],al
   140021694:	or     al,0xab
   140021696:	add    BYTE PTR [rax],al
   140021698:	cmp    al,0x47
   14002169a:	add    DWORD PTR [rax],eax
   14002169c:	adc    BYTE PTR [rbx-0x54970000],ch
   1400216a2:	add    BYTE PTR [rax],al
   1400216a4:	cmp    al,0x47
   1400216a6:	add    DWORD PTR [rax],eax
   1400216a8:	nop
   1400216a9:	stos   DWORD PTR es:[rdi],eax
   1400216aa:	add    BYTE PTR [rax],al
   1400216ac:	jmp    FWORD PTR [rbx+0x47440000]
   1400216b2:	add    DWORD PTR [rax],eax
   1400216b4:	nop
   1400216b5:	lods   eax,DWORD PTR ds:[rsi]
   1400216b6:	add    BYTE PTR [rax],al
   1400216b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400216b9:	lods   eax,DWORD PTR ds:[rsi]
   1400216ba:	add    BYTE PTR [rax],al
   1400216bc:	sbb    BYTE PTR [rax+0x1],cl
   1400216bf:	add    BYTE PTR [rax],al
   1400216c1:	scas   al,BYTE PTR es:[rdi]
   1400216c2:	add    BYTE PTR [rax],al
   1400216c4:	ins    BYTE PTR es:[rdi],dx
   1400216c5:	scas   al,BYTE PTR es:[rdi]
   1400216c6:	add    BYTE PTR [rax],al
   1400216c8:	rex.R
   1400216c9:	rex.RXB add DWORD PTR [r8],r8d
   1400216cc:	pop    rax
   1400216cd:	mov    eax,0xb8c10000
   1400216d2:	add    BYTE PTR [rax],al
   1400216d4:	pop    rax
   1400216d5:	rex.RXB add DWORD PTR [r8],r8d
   1400216d8:	fdivr  QWORD PTR [rax-0x46740000]
   1400216de:	add    BYTE PTR [rax],al
   1400216e0:	push   0xffffffff8c000147
   1400216e5:	mov    ecx,0xb9a30000
   1400216ea:	add    BYTE PTR [rax],al
   1400216ec:	sbb    BYTE PTR [rax+0x1],cl
   1400216ef:	add    BYTE PTR [rcx+rdi*4-0x45f70000],ah
   1400216f6:	add    BYTE PTR [rax],al
   1400216f8:	cmp    al,0x47
   1400216fa:	add    DWORD PTR [rax],eax
   1400216fc:	or     al,0xba
   1400216fe:	add    BYTE PTR [rax],al
   140021700:	adc    bh,BYTE PTR [rax+rax*1+0x1478800]
   140021707:	add    BYTE PTR [rsp+rdi*4],dl
   14002170a:	add    BYTE PTR [rax],al
   14002170c:	stc    
   14002170d:	mov    esp,0x48180000
   140021712:	add    DWORD PTR [rax],eax
   140021714:	cld    
   140021715:	mov    esp,0xbd0e0000
   14002171a:	add    BYTE PTR [rax],al
   14002171c:	sbb    BYTE PTR [rax+0x1],cl
   14002171f:	add    BYTE PTR [rax],dl
   140021721:	mov    ebp,0xbd5b0000
   140021726:	add    BYTE PTR [rax],al
   140021728:	rol    BYTE PTR [rdi+0x1],0x0
   14002172c:	pop    rsp
   14002172d:	mov    ebp,0xbdba0000
   140021732:	add    BYTE PTR [rax],al
   140021734:	lock rex.RXB add DWORD PTR [r8],r8d
   140021738:	(bad)  
   140021739:	mov    ebp,0xbe150000
   14002173e:	add    BYTE PTR [rax],al
   140021740:	sbb    BYTE PTR [rax+0x1],cl
   140021743:	add    BYTE PTR [rax],bl
   140021745:	mov    esi,0xbe300000
   14002174a:	add    BYTE PTR [rax],al
   14002174c:	sbb    BYTE PTR [rax+0x1],cl
   14002174f:	add    BYTE PTR [rax],bh
   140021751:	mov    esi,0xbe700000
   140021756:	add    BYTE PTR [rax],al
   140021758:	and    BYTE PTR [rax+0x1],cl
   14002175b:	add    BYTE PTR [rax-0x42],dh
   14002175e:	add    BYTE PTR [rax],al
   140021760:	test   al,0xbe
   140021762:	add    BYTE PTR [rax],al
   140021764:	and    BYTE PTR [rax+0x1],cl
   140021767:	add    BYTE PTR [rax],dh
   140021769:	mov    edi,0xbf710000
   14002176e:	add    BYTE PTR [rax],al
   140021770:	sub    al,0x48
   140021772:	add    DWORD PTR [rax],eax
   140021774:	test   BYTE PTR [rdi-0x3fc90000],bh
   14002177a:	add    BYTE PTR [rax],al
   14002177c:	rex.WR
   14002177d:	add    QWORD PTR [rax],rax
   140021780:	push   rax
   140021781:	rol    BYTE PTR [rax],0x0
   140021784:	loopne 0x140021746
   140021786:	add    BYTE PTR [rax],al
   140021788:	pop    rax
   140021789:	add    QWORD PTR [rax],rax
   14002178c:	loopne 0x14002174e
   14002178e:	add    BYTE PTR [rax],al
   140021790:	push   rbx
   140021791:	rol    DWORD PTR [rax],0x0
   140021794:	xchg   esp,eax
   140021795:	add    QWORD PTR [rax],rax
   140021798:	push   rbx
   140021799:	rol    DWORD PTR [rax],0x0
   14002179c:	add    ecx,0x0
   14002179f:	add    BYTE PTR [rax-0x7cfffeb8],al
   1400217a5:	rol    DWORD PTR [rax],0x0
   1400217a8:	out    dx,al
   1400217a9:	rol    DWORD PTR [rax],0x0
   1400217ac:	jo     0x1400217f6
   1400217ae:	add    DWORD PTR [rax],eax
   1400217b0:	add    dl,al
   1400217b2:	add    BYTE PTR [rax],al
   1400217b4:	sbb    edx,eax
   1400217b6:	add    BYTE PTR [rax],al
   1400217b8:	call   0x159021904
   1400217bd:	ret    0x0
   1400217c0:	xor    eax,0xe80000c2
   1400217c5:	rex.RXB add DWORD PTR [r8],r8d
   1400217c8:	xor    eax,0x740000c2
   1400217cd:	ret    0x0
   1400217d0:	call   0x1b402191c
   1400217d5:	ret    0x0
   1400217d8:	sahf   
   1400217d9:	ret    0x0
   1400217dc:	call   0xe0021928
   1400217e1:	ret    0x0
   1400217e4:	rol    edx,0x0
   1400217e7:	add    al,ch
   1400217e9:	rex.RXB add DWORD PTR [r8],r8d
   1400217ec:	rol    dl,1
   1400217ee:	add    BYTE PTR [rax],al
   1400217f0:	add    eax,ebx
   1400217f2:	add    BYTE PTR [rax],al
   1400217f4:	sbb    BYTE PTR [rax+0x1],cl
	...

Disassembly of section .rsrc:

0000000140022000 <.rsrc>:
	...
   140022008:	add    al,0x0
   14002200a:	add    BYTE PTR [rax],al
   14002200c:	add    BYTE PTR [rax],al
   14002200e:	add    eax,DWORD PTR [rax]
   140022010:	add    eax,DWORD PTR [rax]
   140022012:	add    BYTE PTR [rax],al
   140022014:	sub    BYTE PTR [rax],al
   140022016:	add    BYTE PTR [rax+0xe],al
   14002201c:	jo     0x14002201e
   14002201e:	add    BYTE PTR [rax+0x18],al
   140022024:	mov    BYTE PTR [rax],al
   140022026:	add    BYTE PTR [rax+0x0],al
   14002202c:	add    BYTE PTR [rax],al
   14002202e:	add    BYTE PTR [rax],al
   140022030:	add    al,0x0
   140022032:	add    BYTE PTR [rax],al
   140022034:	add    BYTE PTR [rax],al
   140022036:	(bad)  
   140022037:	add    BYTE PTR [rcx],al
   140022039:	add    BYTE PTR [rax],al
   14002203b:	add    BYTE PTR [rax+0x2800000],ah
   140022041:	add    BYTE PTR [rax],al
   140022043:	add    BYTE PTR [rax+0x3800000],bh
   140022049:	add    BYTE PTR [rax],al
   14002204b:	add    al,dl
   14002204d:	add    BYTE PTR [rax],al
   14002204f:	add    BYTE PTR [rax+rax*1],0x0
   140022053:	add    al,ch
   140022055:	add    BYTE PTR [rax],al
   140022057:	add    BYTE PTR [rip+0x0],0x1        # 0x14002205e
   14002205e:	add    BYTE PTR [rax+0x6],al
   140022064:	sbb    BYTE PTR [rcx],al
   140022066:	add    BYTE PTR [rax+0x7],al
   14002206c:	xor    BYTE PTR [rcx],al
   14002206e:	add    BYTE PTR [rax+0x0],al
   140022074:	add    BYTE PTR [rax],al
   140022076:	add    BYTE PTR [rax],al
   140022078:	add    al,0x0
   14002207a:	add    BYTE PTR [rax],al
   14002207c:	add    DWORD PTR [rax],eax
   14002207e:	add    BYTE PTR [rax],al
   140022080:	or     BYTE PTR [rdx],al
   140022082:	add    BYTE PTR [rax-0x7ffffeb8],al
	...
   140022090:	add    al,0x0
   140022092:	add    BYTE PTR [rax],al
   140022094:	add    BYTE PTR [rax],al
   140022096:	add    DWORD PTR [rax],eax
   140022098:	add    DWORD PTR [rax],eax
   14002209a:	add    BYTE PTR [rax],al
   14002209c:	(bad)  
   14002209d:	add    DWORD PTR [rax],eax
   14002209f:	add    BYTE PTR [rax],0x0
   1400220a2:	add    BYTE PTR [rax],al
   1400220a4:	add    BYTE PTR [rax],al
   1400220a6:	add    BYTE PTR [rax],al
   1400220a8:	add    al,0x0
   1400220aa:	add    BYTE PTR [rax],al
   1400220ac:	add    BYTE PTR [rax],al
   1400220ae:	add    DWORD PTR [rax],eax
   1400220b0:	or     DWORD PTR [rax+rax*1],eax
   1400220b3:	add    BYTE PTR [rax+0x1],bh
	...
   1400220be:	add    BYTE PTR [rax],al
   1400220c0:	add    al,0x0
   1400220c2:	add    BYTE PTR [rax],al
   1400220c4:	add    BYTE PTR [rax],al
   1400220c6:	add    DWORD PTR [rax],eax
   1400220c8:	or     DWORD PTR [rax+rax*1],eax
   1400220cb:	add    BYTE PTR [rax+0x1],cl
   1400220d1:	add    BYTE PTR [rax],al
   1400220d3:	add    BYTE PTR [rax],al
   1400220d5:	add    BYTE PTR [rax],al
   1400220d7:	add    BYTE PTR [rax+rax*1],al
   1400220da:	add    BYTE PTR [rax],al
   1400220dc:	add    BYTE PTR [rax],al
   1400220de:	add    DWORD PTR [rax],eax
   1400220e0:	or     DWORD PTR [rax+rax*1],eax
   1400220e3:	add    BYTE PTR [rax+0x1],bl
   1400220e9:	add    BYTE PTR [rax],al
   1400220eb:	add    BYTE PTR [rax],al
   1400220ed:	add    BYTE PTR [rax],al
   1400220ef:	add    BYTE PTR [rax+rax*1],al
   1400220f2:	add    BYTE PTR [rax],al
   1400220f4:	add    BYTE PTR [rax],al
   1400220f6:	add    DWORD PTR [rax],eax
   1400220f8:	or     DWORD PTR [rax+rax*1],eax
   1400220fb:	add    BYTE PTR [rax+0x1],ch
   140022101:	add    BYTE PTR [rax],al
   140022103:	add    BYTE PTR [rax],al
   140022105:	add    BYTE PTR [rax],al
   140022107:	add    BYTE PTR [rax+rax*1],al
   14002210a:	add    BYTE PTR [rax],al
   14002210c:	add    BYTE PTR [rax],al
   14002210e:	add    DWORD PTR [rax],eax
   140022110:	or     DWORD PTR [rax+rax*1],eax
   140022113:	add    BYTE PTR [rax+0x1],bh
   140022119:	add    BYTE PTR [rax],al
   14002211b:	add    BYTE PTR [rax],al
   14002211d:	add    BYTE PTR [rax],al
   14002211f:	add    BYTE PTR [rax+rax*1],al
   140022122:	add    BYTE PTR [rax],al
   140022124:	add    BYTE PTR [rax],al
   140022126:	add    DWORD PTR [rax],eax
   140022128:	or     DWORD PTR [rax+rax*1],eax
   14002212b:	add    al,cl
   14002212d:	add    DWORD PTR [rax],eax
	...
   140022137:	add    BYTE PTR [rax+rax*1],al
   14002213a:	add    BYTE PTR [rax],al
   14002213c:	add    BYTE PTR [rax],al
   14002213e:	add    DWORD PTR [rax],eax
   140022140:	or     DWORD PTR [rax+rax*1],eax
   140022143:	add    al,bl
   140022145:	add    DWORD PTR [rax],eax
	...
   14002214f:	add    BYTE PTR [rax+rax*1],al
   140022152:	add    BYTE PTR [rax],al
   140022154:	add    BYTE PTR [rax],al
   140022156:	add    DWORD PTR [rax],eax
   140022158:	or     DWORD PTR [rax+rax*1],eax
   14002215b:	add    al,ch
   14002215d:	add    DWORD PTR [rax],eax
	...
   140022167:	add    BYTE PTR [rax+rax*1],al
   14002216a:	add    BYTE PTR [rax],al
   14002216c:	add    BYTE PTR [rax],al
   14002216e:	add    DWORD PTR [rax],eax
   140022170:	or     DWORD PTR [rax+rax*1],eax
   140022173:	add    al,bh
   140022175:	add    DWORD PTR [rax],eax
   140022177:	add    BYTE PTR [rdx+riz*1],bl
   14002217a:	add    al,BYTE PTR [rax]
   14002217c:	mov    bh,0x21
   14002217e:	add    BYTE PTR [rax],al
   140022180:	in     al,0x4
   140022182:	add    BYTE PTR [rax],al
   140022184:	add    BYTE PTR [rax],al
   140022186:	add    BYTE PTR [rax],al
   140022188:	(bad)  
   140022189:	rex.XB add al,BYTE PTR [r8]
   14002218c:	sub    BYTE PTR [rax],cl
   14002218e:	add    DWORD PTR [rax],eax
   140022190:	in     al,0x4
   140022192:	add    BYTE PTR [rax],al
   140022194:	add    BYTE PTR [rax],al
   140022196:	add    BYTE PTR [rax],al
   140022198:	cld    
   140022199:	rex.WXB add rax,QWORD PTR [r8]
   14002219c:	sub    BYTE PTR [rdx+0x0],al
   14002219f:	add    ah,ah
   1400221a1:	add    al,0x0
   1400221a3:	add    BYTE PTR [rax],al
   1400221a5:	add    BYTE PTR [rax],al
   1400221a7:	add    BYTE PTR [rsi+rcx*4],ah
   1400221aa:	add    eax,DWORD PTR [rax]
   1400221ac:	test   al,0x25
   1400221ae:	add    BYTE PTR [rax],al
   1400221b0:	in     al,0x4
   1400221b2:	add    BYTE PTR [rax],al
   1400221b4:	add    BYTE PTR [rax],al
   1400221b6:	add    BYTE PTR [rax],al
   1400221b8:	int3   
   1400221b9:	mov    bl,0x3
   1400221bb:	add    BYTE PTR [rax-0x1bfffff0],ch
   1400221c1:	add    al,0x0
   1400221c3:	add    BYTE PTR [rax],al
   1400221c5:	add    BYTE PTR [rax],al
   1400221c7:	add    BYTE PTR [rsp+rax*8+0x3],dh
   1400221cb:	add    BYTE PTR [rax-0x1bfffff7],cl
   1400221d1:	add    al,0x0
   1400221d3:	add    BYTE PTR [rax],al
   1400221d5:	add    BYTE PTR [rax],al
   1400221d7:	add    ah,bh
   1400221d9:	int    0x3
   1400221db:	add    BYTE PTR [rax+0x4],ch
   1400221de:	add    BYTE PTR [rax],al
   1400221e0:	in     al,0x4
   1400221e2:	add    BYTE PTR [rax],al
   1400221e4:	add    BYTE PTR [rax],al
   1400221e6:	add    BYTE PTR [rax],al
   1400221e8:	rol    BYTE PTR fs:[rbx],cl
   1400221eb:	add    BYTE PTR [rax+0x0],ch
   1400221ee:	add    BYTE PTR [rax],al
   1400221f0:	in     al,0x4
   1400221f2:	add    BYTE PTR [rax],al
   1400221f4:	add    BYTE PTR [rax],al
   1400221f6:	add    BYTE PTR [rax],al
   1400221f8:	int3   
   1400221f9:	rol    BYTE PTR [rbx],cl
   1400221fb:	add    BYTE PTR [rdx+0x3],ch
   1400221fe:	add    BYTE PTR [rax],al
   140022200:	in     al,0x4
   140022202:	add    BYTE PTR [rax],al
   140022204:	add    BYTE PTR [rax],al
   140022206:	add    BYTE PTR [rax],al
   140022208:	or     DWORD PTR [rax],eax
   14002220a:	rex.WB add BYTE PTR [r8+rax*1+0x49],al
   14002220f:	add    BYTE PTR [rdi+0x0],bl
   140022212:	rex.WB add BYTE PTR [r11+0x0],al
   140022216:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14002221a:	xor    DWORD PTR [rax],eax
   14002221c:	mov    DWORD PTR [rax+0x4e],edx
   14002221f:	rex.RXB or eax,0xa1a0a
   140022225:	add    BYTE PTR [rax],al
   140022227:	or     eax,0x52444849
   14002222c:	add    BYTE PTR [rax],al
   14002222e:	add    DWORD PTR [rax],eax
   140022230:	add    BYTE PTR [rax],al
   140022232:	add    DWORD PTR [rax],eax
   140022234:	or     BYTE PTR [rsi],al
   140022236:	add    BYTE PTR [rax],al
   140022238:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14002223c:	data16 add BYTE PTR [rax],al
   14002223f:	and    DWORD PTR [rsi+0x49],edi
   140022242:	rex.R
   140022243:	push   r12
   140022245:	js     0x140022221
   140022247:	in     eax,dx
   140022248:	fnstsw WORD PTR [rcx-0x68]
   14002224b:	push   rbx
   14002224c:	(bad)  
   14002224d:	fld    QWORD PTR [rdi]
   14002224f:	lock out dx,eax
   140022251:	int    0x32
   140022253:	leave  
   140022254:	fs es ret 
   140022257:	sub    al,0xc
   140022259:	or     al,0xc3
   14002225b:	sub    bl,BYTE PTR [rbx+0x1516081b]
   140022261:	(bad)  
   140022262:	rex.R add al,0xa4
   140022265:	cs push rsp
   140022267:	(bad)  
   140022268:	fimul  DWORD PTR [rdx]
   14002226a:	outs   dx,BYTE PTR ds:[rsi]
   14002226b:	rex.RB retf 
   14002226d:	loop   0x1400221f1
   14002226f:	xor    BYTE PTR [rsi+0x6fad75be],0x5f
   140022276:	sub    ebp,DWORD PTR [rbp+0x79717df6]
   14002227c:	pop    rdi
   14002227d:	imul   ebx,DWORD PTR [rcx-0x54],0x5b
   140022281:	mov    cl,0x8a
   140022283:	or     esp,DWORD PTR [rdx+0x5a22c8a0]
   140022289:	push   rcx
   14002228a:	push   rcx
   14002228b:	rol    DWORD PTR [rip+0xffffffffac808ac5],0x3        # 0xec82ad57
   140022292:	ret    
   140022293:	or     al,0xb3
   140022295:	iret   
   140022296:	fs xchg edx,eax
   140022298:	rex.WB jb 0x14002227a
   14002229b:	(bad)  
   14002229c:	out    dx,al
   14002229d:	pop    rsp
   14002229e:	enter  0x9b84,0xed
   1400222a2:	and    al,0xb9
   1400222a4:	mul    DWORD PTR [rsi]
   1400222a6:	jl     0x1400222e7
   1400222a8:	iret   
   1400222a9:	xchg   ebx,eax
   1400222aa:	(bad)  
   1400222ab:	cwde   
   1400222ac:	leave  
   1400222ad:	rex.WB
   1400222ae:	rex.WRX
   1400222af:	cs stc 
   1400222b1:	std    
   1400222b2:	out    dx,al
   1400222b3:	cmp    edi,esp
   1400222b5:	sahf   
   1400222b6:	jnp    0x1400222c6
   1400222b8:	rex
   1400222b9:	rex.R
   1400222ba:	rex.R
   1400222bb:	rex.R
   1400222bc:	rex.R
   1400222bd:	rex.R
   1400222be:	rex.R
   1400222bf:	rex.R
   1400222c0:	rex.R
   1400222c1:	rex.R
   1400222c2:	rex.R
   1400222c3:	rex.R
   1400222c4:	rex.R
   1400222c5:	rex.R
   1400222c6:	rex.R
   1400222c7:	rex.R
   1400222c8:	rex.R
   1400222c9:	rex.R
   1400222ca:	rex.R
   1400222cb:	rex.R
   1400222cc:	rex.R
   1400222cd:	rex.R
   1400222ce:	rex.R
   1400222cf:	rex.R
   1400222d0:	rex.R
   1400222d1:	rex.R
   1400222d2:	rex.R
   1400222d3:	rex.R
   1400222d4:	rex.R
   1400222d5:	rex.R
   1400222d6:	rex.R
   1400222d7:	rex.R
   1400222d8:	rex.R
   1400222d9:	rex.R
   1400222da:	rex.R
   1400222db:	rex.R
   1400222dc:	rex.R
   1400222dd:	rex.R
   1400222de:	rex.R
   1400222df:	rex.R
   1400222e0:	rex.R
   1400222e1:	rex.R
   1400222e2:	rex.R
   1400222e3:	rex.R
   1400222e4:	rex.R
   1400222e5:	rex.R
   1400222e6:	rex.R
   1400222e7:	rex.R
   1400222e8:	rex.R
   1400222e9:	rex.R
   1400222ea:	rex.R
   1400222eb:	rex.R
   1400222ec:	rex.R
   1400222ed:	rex.R
   1400222ee:	rex.R
   1400222ef:	rex.R
   1400222f0:	rex.R
   1400222f1:	rex.R
   1400222f2:	rex.R
   1400222f3:	rex.R
   1400222f4:	rex.R
   1400222f5:	rex.R
   1400222f6:	rex.R
   1400222f7:	rex.R
   1400222f8:	rex.R
   1400222f9:	rex.R
   1400222fa:	rex.R
   1400222fb:	rex.R
   1400222fc:	rex.R
   1400222fd:	rex.R
   1400222fe:	rex.R
   1400222ff:	rex.R
   140022300:	rex.R
   140022301:	rex.R
   140022302:	rex.R
   140022303:	rex.R
   140022304:	rex.R
   140022305:	rex.R
   140022306:	rex.R
   140022307:	rex.R
   140022308:	rex.R
   140022309:	rex.R
   14002230a:	rex.R
   14002230b:	rex.R
   14002230c:	rex.R
   14002230d:	rex.R
   14002230e:	rex.R
   14002230f:	rex.R
   140022310:	rex.R
   140022311:	rex.R
   140022312:	rex.R
   140022313:	rex.R
   140022314:	rex.R
   140022315:	rex.R
   140022316:	rex.R
   140022317:	rex.R
   140022318:	rex.R
   140022319:	rex.R
   14002231a:	rex.R
   14002231b:	rex.R
   14002231c:	rex.R
   14002231d:	fs push 0xffffffffffffff92
   140022320:	rcl    DWORD PTR [rip+0x63a667e0],1        # 0x1a3a88b06
   140022326:	cwde   
   140022327:	ins    BYTE PTR es:[rdi],dx
   140022328:	je     0x14002232f
   14002232a:	mov    ss,WORD PTR [rbp-0x31d6fa0]
   140022330:	sbb    DWORD PTR [rcx+0x7f38e41e],edx
   140022336:	xchg   esi,eax
   140022337:	jbe    0x140022312
   140022339:	(bad)  
   14002233a:	add    al,0x92
   14002233c:	(bad)  
   14002233d:	fbld   TBYTE PTR [rbp+0x4a21cf28]
   140022343:	(bad)  
   140022344:	pop    rcx
   140022345:	jrcxz  0x140022336
   140022347:	mov    dl,0xc6
   140022349:	out    dx,eax
   14002234a:	je     0x1400223ad
   14002234c:	xor    edi,edx
   14002234e:	push   0xffffffffc06851a4
   140022353:	rex.WXB add BYTE PTR [r9+r12*1],bpl
   140022357:	jg     0x1400223b3
   140022359:	ret    0x439e
   14002235c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002235d:	xchg   edi,eax
   14002235e:	shl    BYTE PTR [rax+0xf],1
   140022361:	add    cl,BYTE PTR [rax]
   140022363:	mov    ah,0xff
   140022365:	test   eax,0xcbb49cf5
   14002236a:	mov    BYTE PTR [rax+rdx*1],0x1e
   14002236e:	clc    
   14002236f:	push   0xffffffffffffffd0
   140022371:	out    0x0,eax
   140022373:	jo     0x140022329
   140022375:	(bad)  
   140022376:	lods   al,BYTE PTR ds:[rsi]
   140022377:	(bad)  
   140022378:	adc    ah,BYTE PTR [rax]
   14002237a:	std    
   14002237b:	test   eax,0x7f6c1d81
   140022380:	clc    
   140022381:	add    BYTE PTR [rax+0x0],bh
   140022384:	js     0x1400223f7
   140022386:	and    al,0x9
   140022388:	call   0xf6ca2e67
   14002238d:	add    al,0xa0
   14002238f:	jne    0x140022367
   140022391:	mov    bh,0x41
   140022393:	or     esi,edi
   140022395:	cld    
   140022396:	mov    bl,0x96
   140022398:	mov    ?,WORD PTR [rbx-0x10cc2635]
   14002239e:	(bad)  
   14002239f:	movabs ds:0x656bd86f7aa4492b,eax
   1400223a8:	push   rax
   1400223a9:	(bad)  
   1400223aa:	mov    edi,0x25b1d0d
   1400223af:	mov    edx,0x4a6c8224
   1400223b4:	add    BYTE PTR [rdx-0x3f],bl
   1400223b7:	outs   dx,DWORD PTR ds:[rsi]
   1400223b8:	xchg   DWORD PTR [rdx-0x3a],esi
   1400223bb:	iret   
   1400223bc:	(bad)  
   1400223bd:	repz (bad) 
   1400223bf:	mov    cl,0xf7
   1400223c1:	cmp    BYTE PTR [rbx-0x1a],bh
   1400223c4:	rex.WRB (bad) 
   1400223c6:	mov    edx,0x9c614492
   1400223cb:	push   rax
   1400223cc:	pop    rdx
   1400223cd:	add    DWORD PTR [rcx],eax
   1400223cf:	sub    BYTE PTR [rcx-0x51],al
   1400223d2:	(bad)  
   1400223d3:	mov    esi,0x40921d04
   1400223d8:	mov    dh,0x24
   1400223da:	or     BYTE PTR [rax-0x3f],0xef
   1400223de:	add    al,0x50
   1400223e0:	xor    BYTE PTR [rcx+rcx*8-0x28],bh
   1400223e4:	mov    ebx,0xa7b8fb72
   1400223e9:	sbb    DWORD PTR [rbp+0x49],ebx
   1400223ec:	and    cl,BYTE PTR [rip+0xffffffffe871284e]        # 0x128734c40
   1400223f2:	rex.RXB mov DWORD PTR [r8+r12*4],0x92c00b4b
   1400223fa:	cld    
   1400223fb:	rex.WXB sbb BYTE PTR [r14],bpl
   1400223fe:	cmp    al,0xf8
   140022400:	lods   eax,DWORD PTR ds:[rsi]
   140022401:	push   rax
   140022402:	(bad)  
   140022403:	cld    
   140022404:	mov    ecx,0x7f0d3a00
   140022409:	jns    0x1400223d7
   14002240b:	(bad)  [rsi+0x327e0cbe]
   140022411:	sub    eax,0x1d43fb7b
   140022416:	pushf  
   140022417:	(bad)  
   140022418:	jne    0x140022466
   14002241a:	sub    dl,bl
   14002241c:	adc    eax,DWORD PTR [rax+0x68]
   14002241f:	lock pop rbx
   140022421:	movabs al,ds:0xee634bff3391ff04
   14002242a:	jbe    0x140022421
   14002242c:	sub    ebx,DWORD PTR [rax-0x76da8b96]
   140022432:	movabs ds:0xe071d15adef943b0,al
   14002243b:	sbb    dl,al
   14002243d:	and    DWORD PTR [rcx],ebx
   14002243f:	fs jb  0x140022459
   140022442:	and    BYTE PTR [rax+rdi*8],bh
   140022445:	rex.XB
   140022446:	fwait
   140022447:	std    
   140022448:	popf   
   140022449:	xchg   BYTE PTR [rdi+0x572ee634],bh
   14002244f:	inc    DWORD PTR [rdx+0x495d1b5f]
   140022455:	movabs ds:0x4802d90e250ec18,al
   14002245e:	xor    al,bh
   140022460:	sub    DWORD PTR [rbx-0x58],ebx
   140022463:	xchg   edi,eax
   140022464:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022465:	ret    
   140022466:	sbb    DWORD PTR [rdi-0x69],0x44
   14002246a:	nop
   14002246b:	mov    DWORD PTR [rcx],ecx
   14002246d:	add    cl,0x4f
   140022470:	fldenv [rsp+rdi*1]
   140022473:	clc    
   140022474:	rex.XB mov r11d,0x79bcba00
   14002247a:	es (bad) 
   14002247c:	lock push rbx
   14002247e:	mov    dh,0x51
   140022480:	sbb    DWORD PTR [rdi-0x29],0xffffffc0
   140022484:	(bad)  
   140022486:	repz rex.WR shl rax,0xa7
   14002248b:	ins    BYTE PTR es:[rdi],dx
   14002248c:	fsubr  DWORD PTR gs:[rsp+rdx*8+0x4c]
   140022491:	rex.WB add BYTE PTR [r14+rdi*2],cl
   140022495:	retf   0xba56
   140022498:	(bad)  
   140022499:	clc    
   14002249a:	imul   ecx,ecx,0xffffff84
   14002249d:	add    al,0xc0
   14002249f:	loopne 0x1400224c8
   1400224a1:	rex.WX adc rsi,QWORD PTR [rbx+0x3f060027]
   1400224a8:	push   rcx
   1400224a9:	sbb    bl,BYTE PTR [rcx-0x7cffec7]
   1400224af:	mov    edx,edx
   1400224b1:	int3   
   1400224b2:	lods   al,BYTE PTR ds:[rsi]
   1400224b3:	or     DWORD PTR [rax+0x3a44fc1],eax
   1400224b9:	xor    esp,DWORD PTR [rsi]
   1400224bb:	add    BYTE PTR [rsi],al
   1400224bd:	(bad)  
   1400224be:	xchg   ecx,eax
   1400224bf:	rex.WRX int3 
   1400224c1:	xchg   esi,eax
   1400224c2:	add    BYTE PTR [rax],bl
   1400224c4:	cld    
   1400224c5:	cmp    r14b,BYTE PTR [rdx]
   1400224c8:	push   rbx
   1400224c9:	add    ah,BYTE PTR [rax-0x10]
   1400224cc:	adc    ebp,ecx
   1400224ce:	int3   
   1400224cf:	sub    al,0x9
   1400224d1:	add    cl,0x4f
   1400224d4:	add    BYTE PTR fs:[rbx],dh
   1400224d7:	and    al,0x0
   1400224d9:	(bad)  
   1400224da:	(bad)  
   1400224db:	xchg   ecx,eax
   1400224dc:	mov    WORD PTR [r14+0x0],cs
   1400224e0:	or     al,0x7e
   1400224e2:	and    al,BYTE PTR [rbx]
   1400224e4:	sbb    DWORD PTR [rcx+0x44fc1800],ebx
   1400224ea:	(bad)  
   1400224eb:	xor    ebp,DWORD PTR [rdx]
   1400224ed:	add    DWORD PTR [rbx+rbx*2-0x3d],eax
   1400224f1:	pop    rcx
   1400224f3:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400224f5:	adc    esp,DWORD PTR [rbx]
   1400224f7:	adc    al,BYTE PTR [rax+0xc7e1ad6]
   1400224fd:	jle    0x140022521
   1400224ff:	add    ebx,DWORD PTR [rax]
   140022501:	fld    DWORD PTR [rdx]
   140022503:	loopne 0x14002249e
   140022505:	lahf   
   140022506:	enter  0x7a60,0x27
   14002250a:	xor    al,0xdd
   14002250d:	jp     0x14002257b
   14002250f:	cmp    BYTE PTR [rdx-0x607cd880],dh
   140022515:	rex.W
   140022516:	addr32 jp 0x140022547
   140022519:	or     bl,BYTE PTR [rdx]
   14002251b:	ds call 0x1b7fe3f38
   140022521:	(bad)  
   140022522:	imul   eax,ecx,0x5f
   140022525:	out    dx,al
   140022526:	sub    BYTE PTR [rbx+0x2f],al
   140022529:	addr32 ja 0x1400225a0
   14002252c:	int    0x29
   14002252e:	cmp    eax,0xb9b028fc
   140022533:	loope  0x1400224e9
   140022535:	cmp    BYTE PTR [rax-0x69],ah
   140022538:	ins    BYTE PTR es:[rdi],dx
   140022539:	jo     0x140022594
   14002253b:	jae    0x14002259e
   14002253d:	test   DWORD PTR [rip+0x4f00397e],edx        # 0x18f025ec1
   140022543:	rol    BYTE PTR [rbx],1
   140022545:	pop    rdi
   140022546:	mov    al,0xd
   140022548:	pop    rsi
   140022549:	fld    DWORD PTR [rdi+0x2a037f7a]
   14002254f:	jge    0x1400225a6
   140022551:	cmp    al,ch
   140022553:	stos   DWORD PTR es:[rdi],eax
   140022554:	mov    BYTE PTR [rcx+0x5f],0x35
   140022558:	jbe    0x14002250f
   14002255a:	out    dx,al
   14002255b:	test   r15d,r14d
   14002255e:	adc    cl,0x1f
   140022561:	xchg   DWORD PTR [rdx],esi
   140022563:	xchg   esp,eax
   140022564:	fisubr WORD PTR [rbx-0x26078fe]
   14002256a:	pop    rbp
   14002256b:	ret    
   14002256c:	xchg   edi,eax
   14002256d:	mov    ebp,?
   14002256f:	popf   
   140022570:	stos   DWORD PTR es:[rdi],eax
   140022571:	scas   eax,DWORD PTR es:[rdi]
   140022572:	cmp    ebp,ebx
   140022574:	cmp    DWORD PTR [rdi-0x60],0xffffffab
   140022578:	(bad)  
   140022579:	(bad)  
   14002257a:	sub    BYTE PTR [rax],bl
   14002257c:	mov    dl,BYTE PTR [rbx]
   14002257e:	repz (bad) 
   140022580:	loop   0x140022546
   140022582:	mov    esp,0x15b42881
   140022587:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022588:	in     al,dx
   140022589:	mov    ch,0xeb
   14002258b:	cld    
   14002258c:	or     eax,0x2b79aef8
   140022591:	mov    esi,0x9f01fe6b
   140022596:	ss jl  0x14002251a
   140022599:	lods   eax,DWORD PTR ds:[rsi]
   14002259a:	sub    eax,0xb8fe8ddb
   14002259f:	xchg   esp,eax
   1400225a0:	and    esp,esi
   1400225a2:	pop    rdx
   1400225a3:	test   DWORD PTR [rbp+rdi*2+0x1f],eax
   1400225a7:	cmc    
   1400225a8:	jb     0x140022549
   1400225aa:	jp     0x1400225a2
   1400225ac:	out    dx,eax
   1400225ad:	cmp    al,0x6a
   1400225af:	jrcxz  0x140022575
   1400225b1:	lods   eax,DWORD PTR ds:[rsi]
   1400225b2:	rex.RX (bad) 
   1400225b4:	test   BYTE PTR [rcx+rbp*8-0x13],dh
   1400225b8:	in     al,dx
   1400225b9:	xor    DWORD PTR [rcx],0xfce1e7c5
   1400225bf:	movabs ds:0x56fbdba651ddd073,al
   1400225c8:	js     0x1400225d9
   1400225ca:	(bad)  
   1400225cb:	pop    rbp
   1400225cc:	in     eax,dx
   1400225cd:	rex.RXB pop r8
   1400225cf:	pop    rbp
   1400225d0:	repz add DWORD PTR [rsi-0x4a],esi
   1400225d4:	out    dx,al
   1400225d5:	xor    edx,edi
   1400225d7:	xor    BYTE PTR [rax+0x14],dl
   1400225da:	out    dx,eax
   1400225db:	or     eax,0x80246d7b
   1400225e0:	or     al,BYTE PTR [rax]
   1400225e2:	or     eax,0xf308b650
   1400225e7:	loope  0x1400225b1
   1400225e9:	mov    es,ecx
   1400225eb:	movabs eax,ds:0xf0805dde85a5053b
   1400225f4:	imul   edi,esi,0xe
   1400225f7:	sbb    eax,0xfd375fdf
   1400225fc:	jae    0x14002258d
   1400225fe:	ret    
   1400225ff:	(bad)  
   140022600:	adc    esi,DWORD PTR gs:[rcx+0x5e]
   140022604:	rcr    DWORD PTR [rcx-0x70],1
   140022607:	or     al,0x58
   140022609:	jmp    0xc65402b7
   14002260e:	leave  
   14002260f:	adc    esi,DWORD PTR gs:[rcx]
   140022612:	mov    ecx,0x3636226c
   140022617:	jle    0x1400225a6
   140022619:	mov    edi,0x2d88bc57
   14002261e:	int    0x59
   140022620:	fwait
   140022621:	sub    DWORD PTR [ecx],ecx
   140022624:	rex.RX jne 0x140022628
   140022627:	lods   al,BYTE PTR ds:[rsi]
   140022628:	in     eax,dx
   140022629:	out    dx,eax
   14002262a:	ins    DWORD PTR es:[rdi],dx
   14002262b:	(bad)  
   14002262c:	cli    
   14002262d:	add    BYTE PTR [rdx+rdx*2-0x67d16349],ah
   140022634:	(bad)  
   140022635:	imul   ebp,DWORD PTR [rdx],0xffffffce
   140022638:	sub    al,bh
   14002263a:	mov    ecx,edx
   14002263c:	push   rbp
   14002263d:	cmp    DWORD PTR [rax+rbx*4-0x5],ebp
   140022641:	adc    al,0xc
   140022643:	cmp    edi,esi
   140022645:	adc    al,0x7c
   140022647:	push   rdx
   140022648:	mov    edi,0x99ee8f11
   14002264d:	pop    QWORD PTR [rbx-0x15bc9542]
   140022653:	push   rcx
   140022654:	push   0x2f
   140022656:	or     ebp,0xadd7d892
   14002265c:	mov    dh,0xad
   14002265e:	(bad)  
   14002265f:	lods   eax,DWORD PTR ds:[rsi]
   140022660:	rex.B scas eax,DWORD PTR es:[rdi]
   140022662:	and    ebp,esi
   140022664:	cmp    eax,0x91e856
   140022669:	ret    0x3d17
   14002266c:	push   rsp
   14002266d:	pop    rbx
   14002266e:	add    BYTE PTR [rdx+0x12],ch
   140022671:	enter  0x1278,0x24
   140022675:	pop    rsp
   140022676:	sar    BYTE PTR [rcx+0xc],cl
   140022679:	data16 je 0x14002263b
   14002267c:	(bad)  
   14002267d:	imul   ebp,DWORD PTR cs:[rsi+0x74d1d5d1],0x66
   140022685:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022686:	(bad)  
   140022687:	js     0x1400226c3
   140022689:	jg     0x1400226a9
   14002268b:	sahf   
   14002268c:	(bad)  
   14002268e:	sbb    al,0x96
   140022690:	push   rdi
   140022691:	scas   eax,DWORD PTR es:[rdi]
   140022692:	xchg   BYTE PTR [rdi+rbp*8-0x24670bca],ch
   140022699:	call   FWORD PTR [rsi]
   14002269b:	hlt    
   14002269c:	int    0xed
   14002269e:	popf   
   14002269f:	push   rax
   1400226a0:	cdq    
   1400226a1:	(bad)  
   1400226a2:	fdivr  st(1),st
   1400226a4:	(bad)  
   1400226a5:	mov    esp,0xaeb1f75f
   1400226aa:	cmc    
   1400226ab:	cmp    al,0xd6
   1400226ad:	sbb    BYTE PTR [rcx],bh
   1400226af:	or     BYTE PTR [rax-0x19737eda],ch
   1400226b5:	mov    al,0x38
   1400226b7:	jo     0x1400226b8
   1400226b9:	jno    0x140022672
   1400226bb:	jrcxz  0x140022669
   1400226bd:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400226bf:	sbb    DWORD PTR [rbp-0x6b],ebx
   1400226c2:	cwde   
   1400226c3:	pop    rsp
   1400226c4:	push   rsi
   1400226c5:	(bad)  
   1400226c6:	outs   dx,BYTE PTR ds:[rsi]
   1400226c7:	out    dx,eax
   1400226c8:	xor    eax,0x7baa703
   1400226cd:	jrcxz  0x14002271e
   1400226cf:	cmp    ebx,DWORD PTR [rdi+0x66dc9b40]
   1400226d5:	je     0x14002266c
   1400226d7:	enter  0x7a60,0xcd
   1400226db:	add    edx,eax
   1400226dd:	(bad)  
   1400226de:	cli    
   1400226df:	fwait
   1400226e0:	icebp  
   1400226e1:	or     eax,eax
   1400226e3:	ins    DWORD PTR es:[rdi],dx
   1400226e4:	int    0xc7
   1400226e6:	ret    
   1400226e7:	std    
   1400226e8:	out    dx,eax
   1400226e9:	retf   
   1400226ea:	mov    al,ah
   1400226ec:	sysexit 
   1400226ee:	stos   BYTE PTR es:[rdi],al
   1400226ef:	call   0x13fbc2310
   1400226f4:	mov    ebp,0x8cbab3c8
   1400226f9:	scas   al,BYTE PTR es:[rdi]
   1400226fa:	or     bl,BYTE PTR [rcx]
   1400226fc:	int3   
   1400226fd:	enter  0x819b,0x74
   140022701:	fisttp WORD PTR [rax]
   140022703:	xor    DWORD PTR [rbp+0x3c7cd6dc],edx
   140022709:	jle    0x140022707
   14002270b:	(bad)  
   14002270c:	xor    DWORD PTR [rax],edi
   14002270e:	inc    DWORD PTR [rbx+riz*4-0x55]
   140022712:	and    ah,BYTE PTR [rax+rbp*4+0x7b]
   140022716:	adc    BYTE PTR [rsi],bl
   140022718:	jmp    0xd61e669c
   14002271d:	sbb    al,0xa3
   14002271f:	stos   DWORD PTR es:[rdi],eax
   140022720:	rex.X (bad) 
   140022722:	shl    BYTE PTR [rbx],cl
   140022724:	add    DWORD PTR [rax-0x13],ebp
   140022727:	jge    0x1400226bf
   140022729:	xchg   ecx,eax
   14002272a:	or     eax,eax
   14002272c:	and    bl,BYTE PTR [rcx+0x70]
   14002272f:	ja     0x1400226d0
   140022731:	pop    rcx
   140022732:	call   0x1b4641424
   140022737:	push   rbp
   140022738:	xchg   edx,eax
   140022739:	jb     0x14002277d
   14002273b:	fiadd  WORD PTR [rax]
   14002273d:	cld    
   14002273e:	scas   al,BYTE PTR es:[rdi]
   14002273f:	iret   
   140022740:	ins    DWORD PTR es:[rdi],dx
   140022741:	xchg   BYTE PTR [rcx+rbp*4+0x20],bl
   140022745:	jae    0x140022777
   140022747:	cli    
   140022748:	jbe    0x14002272a
   14002274a:	mov    esp,?
   14002274c:	out    0x4d,al
   14002274e:	out    dx,eax
   14002274f:	jle    0x14002276e
   140022751:	xchg   BYTE PTR [rdi+0x32],dh
   140022754:	iret   
   140022755:	rex.W jg 0x14002278a
   140022758:	rex.RX (bad) 
   14002275a:	sahf   
   14002275b:	test   DWORD PTR [rdi+0x76],ebx
   14002275e:	mov    ebp,0x906ae8cc
   140022763:	mov    WORD PTR [r14+0xce3381d],?
   14002276a:	jne    0x14002277b
   14002276c:	ret    0xbbcf
   14002276f:	pop    rsp
   140022770:	stos   BYTE PTR es:[rdi],al
   140022771:	retf   
   140022772:	jnp    0x14002275d
   140022774:	xor    eax,0xf9437f52
   140022779:	and    al,0xf4
   14002277b:	jno    0x140022773
   14002277d:	(bad)  
   14002277e:	in     eax,0xbd
   140022780:	enter  0xb25c,0xe2
   140022784:	xor    bl,BYTE PTR [rsi+rbx*2+0x731d92ec]
   14002278b:	jp     0x1400227db
   14002278d:	rex.WRXB imul r10,QWORD PTR [r11-0x7aa82d47],0xffffffffc1bf1a2f
   140022798:	mov    bh,0xcd
   14002279a:	fbld   TBYTE PTR [rbx-0x61]
   14002279d:	ja     0x1400227de
   14002279f:	sub    bh,BYTE PTR [rdi+rax*1+0x466814d0]
   1400227a6:	rex.WXB shl BYTE PTR [r11-0x8],0x39
   1400227ab:	imul   ebp,DWORD PTR cs:[rsi],0xfffffff2
   1400227af:	sub    al,0x2e
   1400227b1:	xchg   esp,eax
   1400227b2:	cmp    ecx,edx
   1400227b4:	rcr    ch,1
   1400227b6:	push   rcx
   1400227b7:	xchg   BYTE PTR [rbx],dl
   1400227b9:	repz (bad) 
   1400227bb:	loop   0x140022811
   1400227bd:	mul    DWORD PTR [rax]
   1400227bf:	xchg   esp,eax
   1400227c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400227c1:	push   0xffffffffb24da176
   1400227c6:	(bad)  
   1400227c7:	rex.WRX scas rax,QWORD PTR es:[rdi]
   1400227c9:	jmp    0x17ef7e566
   1400227ce:	(bad)  [rdi]
   1400227d0:	setb   BYTE PTR [rcx+0x30120098]
   1400227d7:	test   eax,0x3a7a026c
   1400227dc:	retf   
   1400227dd:	xchg   ebx,eax
   1400227de:	jle    0x14002277d
   1400227e0:	(bad)  
   1400227e1:	movabs al,ds:0xd5eaf2c7de6aab17
   1400227ea:	jno    0x1400227b9
   1400227ec:	fld    TBYTE PTR [rdi+0x9]
   1400227ef:	js     0x1400227c1
   1400227f1:	adc    dh,al
   1400227f3:	movabs al,ds:0x2b16fa6abe10edaa
   1400227fc:	(bad)  
   1400227fd:	lods   eax,DWORD PTR ds:[rsi]
   1400227fe:	add    DWORD PTR [rax],eax
   140022800:	hlt    
   140022801:	int    0xed
   140022803:	lea    ecx,[rbx+0x3a]
   140022806:	pop    rcx
   140022808:	mov    eax,0x4ae1f3e2
   14002280d:	jb     0x140022853
   14002280f:	jg     0x140022881
   140022811:	dec    BYTE PTR [rcx+0xa325718]
   140022817:	out    dx,eax
   140022818:	sbb    al,0x5a
   14002281a:	stos   DWORD PTR es:[rdi],eax
   14002281b:	iret   
   14002281c:	shl    DWORD PTR [rbx+rdx*2],0x30
   140022820:	jp     0x14002286f
   140022822:	ror    BYTE PTR [rcx+riz*8+0x17e3e6b6],0x5d
   14002282a:	jle    0x1400227c2
   14002282c:	(bad)  
   14002282d:	imul   ecx,eax,0xffffff90
   140022830:	mov    cl,0xf2
   140022832:	sar    BYTE PTR [rdx],1
   140022834:	pop    rsp
   140022835:	imul   ebp
   140022837:	lods   eax,DWORD PTR ds:[rsi]
   140022838:	cwde   
   140022839:	mov    bh,0xfb
   14002283b:	outs   dx,DWORD PTR ds:[rsi]
   14002283c:	rex.WB fbstp TBYTE PTR [r11+rsi*4+0x4f0bb3c3]
   140022844:	in     al,dx
   140022845:	pop    rcx
   140022846:	test   BYTE PTR [rbx-0x42],ch
   140022849:	mov    ebp,0x57abcb15
   14002284e:	and    eax,0xb6bef67d
   140022853:	fist   DWORD PTR [rbp+0x7d1949b0]
   140022859:	gs xchg esi,eax
   14002285b:	adc    al,ah
   14002285d:	add    al,0x10
   14002285f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022860:	or     DWORD PTR [rbp+0x2e],ebx
   140022863:	rex.WX (bad) 
   140022865:	sub    al,0xeb
   140022867:	or     DWORD PTR [rsi-0x1c4f01e],esi
   14002286d:	sbb    edi,DWORD PTR [rdi-0x22]
   140022870:	cmc    
   140022871:	add    al,0xaa
   140022873:	fld    TBYTE PTR [rdx+0x52]
   140022876:	pop    rdx
   140022877:	mov    bh,0x3a
   140022879:	jg     0x1400228b8
   14002287b:	(bad)  
   14002287c:	jnp    0x140022875
   14002287e:	push   rbx
   14002287f:	mov    eax,0x6843fb7b
   140022884:	or     dh,BYTE PTR [rbx+rcx*1]
   140022887:	mov    edi,0x2e9cb74e
   14002288c:	mov    eax,0x4a4468a0
   140022891:	jmp    0x1400228d9
   140022893:	out    0xc6,al
   140022895:	add    al,0x10
   140022897:	(bad)  
   140022898:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022899:	(bad)
   14002289c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002289d:	(bad)  
   14002289e:	or     edx,DWORD PTR [rdi+0x63340a6f]
   1400228a4:	(bad)  
   1400228a5:	div    edi
   1400228a7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400228a8:	jge    0x140022904
   1400228aa:	jmp    0x140022832
   1400228ac:	cli    
   1400228ad:	rex.WRB cdqe 
   1400228af:	mov    ebp,0x6343ef5
   1400228b4:	(bad)  
   1400228b5:	test   BYTE PTR [rdi+0x63],bl
   1400228b8:	jb     0x140022893
   1400228ba:	rex.R pop rsi
   1400228bc:	(bad)  
   1400228bd:	cmp    al,0x86
   1400228bf:	xor    BYTE PTR [rcx],al
   1400228c1:	(bad)  
   1400228c5:	jae    0x140022897
   1400228c7:	rex.WB
   1400228c8:	lock (bad) 
   1400228ca:	std    
   1400228cb:	ss mov ecx,0x9f6cf70d
   1400228d1:	mov    ebp,DWORD PTR [rbp-0x62]
   1400228d4:	(bad)  
   1400228d5:	jne    0x140022880
   1400228d7:	jmp    0x1400228e7
   1400228d9:	iret   
   1400228da:	fdivr  QWORD PTR cs:[rbx-0x340fb003]
   1400228e1:	jle    0x140022884
   1400228e3:	repnz mov ebp,0xc431dd9c
   1400228e9:	jge    0x14002287d
   1400228eb:	cs jne 0x140022913
   1400228ee:	jrcxz  0x140022921
   1400228f0:	add    esp,eax
   1400228f2:	loope  0x1400228b6
   1400228f4:	loop   0x1400228e9
   1400228f6:	test   ebx,ecx
   1400228f8:	ds mov ebx,0x6e6c65ff
   1400228fe:	cli    
   1400228ff:	rex.WRX xlat BYTE PTR ds:[rbx]
   140022901:	cli    
   140022902:	outs   dx,BYTE PTR ds:[rsi]
   140022903:	outs   dx,BYTE PTR ds:[rsi]
   140022904:	cli    
   140022905:	(bad)  
   140022906:	iret   
   140022907:	(bad)  
   140022908:	js     0x14002294f
   14002290a:	mov    eax,0x91e298fc
   14002290f:	mov    edx,0xc38c97d6
   140022914:	add    al,0x10
   140022916:	rex.XB xchg r15d,eax
   140022918:	pushf  
   140022919:	(bad)  
   14002291a:	ret    0xc467
   14002291d:	sbb    eax,0xa9785d9e
   140022922:	repnz or eax,0xe2fdea43
   140022928:	adc    edi,0x19031784
   14002292e:	pop    rcx
   14002292f:	js     0x140022947
   140022931:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022932:	or     BYTE PTR [rdi],bl
   140022934:	and    ebx,DWORD PTR [rax+0x5d186200]
   14002293a:	xor    al,0x42
   14002293c:	mov    eax,0xfeecfc4f
   140022941:	xchg   edi,eax
   140022942:	adc    DWORD PTR [rax-0x242b79fd],edx
   140022948:	(bad)  
   140022949:	(bad)  
   14002294a:	lock ret 0xb17e
   14002294e:	push   rsi
   14002294f:	rex sahf 
   140022951:	(bad)  
   140022952:	gs stos BYTE PTR es:[rdi],al
   140022954:	xor    eax,0x987d280d
   140022959:	add    BYTE PTR [rdx+0x38],ah
   14002295c:	mov    ebp,0x72a154e0
   140022961:	mov    ebx,0xc3e2f75a
   140022966:	mov    edx,0x7dd6860d
   14002296b:	pop    rbp
   14002296c:	fld    QWORD PTR [rdi-0x3e]
   14002296f:	or     eax,DWORD PTR [rsi-0x3bcfa962]
   140022975:	sar    BYTE PTR [rdx+0x11383e93],1
   14002297b:	sub    BYTE PTR [rdx],cl
   14002297d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002297e:	(bad)
   140022981:	repz (bad) 
   140022983:	or     dl,BYTE PTR [rbp+0x5ad0fb7d]
   140022989:	ret    
   14002298a:	addr32 (bad) 
   14002298c:	add    eax,0xd65620e5
   140022991:	lods   al,BYTE PTR ds:[rsi]
   140022992:	ret    
   140022993:	xchg   esp,eax
   140022994:	outs   dx,BYTE PTR ds:[rsi]
   140022995:	push   rdi
   140022996:	and    eax,0x82f4f65c
   14002299b:	movabs eax,ds:0x6549879adf2f3d71
   1400229a4:	xchg   edi,eax
   1400229a5:	(bad)  
   1400229a6:	jl     0x140022a06
   1400229a8:	mov    cl,0xbd
   1400229aa:	sub    cl,ah
   1400229ac:	cmp    cl,BYTE PTR [rsi+rbp*1-0xcfcf0c2]
   1400229b3:	cli    
   1400229b4:	and    eax,0xdf9e0c75
   1400229b9:	mov    edi,0x450aab84
   1400229be:	rol    DWORD PTR [rax+rdx*1],0xc5
   1400229c2:	adc    bh,dh
   1400229c4:	leave  
   1400229c5:	mov    al,0x4b
   1400229c7:	mov    DWORD PTR [rdi-0x7c6be9a6],ebp
   1400229cd:	pop    rax
   1400229ce:	push   rbx
   1400229cf:	repz adc ecx,0xbc0007d5
   1400229d6:	jnp    0x140022a40
   1400229d8:	sbb    eax,0x97edd57e
   1400229dd:	or     DWORD PTR [rdi+0x63],esi
   1400229e0:	retf   0xba72
   1400229e3:	movabs al,ds:0xe6b2e105b31651dc
   1400229ec:	(bad)
   1400229f1:	rex (bad) 
   1400229f3:	mov    ecx,0xfd246785
   1400229f8:	sbb    cl,BYTE PTR [rbx+0x2a]
   1400229fb:	xchg   edi,eax
   1400229fc:	xor    DWORD PTR [rcx],eax
   1400229fe:	rex.R shr DWORD PTR [rsi],0x40
   140022a02:	adc    al,0xa7
   140022a04:	out    0xf,al
   140022a06:	(bad)  
   140022a07:	sub    dh,BYTE PTR [rdi+0xe2b79a5]
   140022a0d:	mov    ch,0xd5
   140022a0f:	sbb    bl,BYTE PTR [rbp+0x7d]
   140022a12:	add    dl,cl
   140022a14:	mov    ebp,0x3b3ddb06
   140022a19:	test   edx,ecx
   140022a1b:	(bad)  
   140022a1c:	int    0x3f
   140022a1e:	fld1   
   140022a20:	(bad)  
   140022a21:	push   rbx
   140022a22:	(bad)  
   140022a23:	xor    DWORD PTR [rcx],eax
   140022a25:	rex.R jno 0x1400229e4
   140022a28:	(bad)  
   140022a29:	repz repz rol DWORD PTR [rsi+0x7aae8c2f],cl
   140022a31:	(bad)  
   140022a32:	lahf   
   140022a33:	xor    eax,0x6e54297c
   140022a38:	sub    BYTE PTR [rbx-0x58aa2e51],0x34
   140022a3f:	movsxd eax,DWORD PTR [rdx]
   140022a41:	mov    BYTE PTR [rax-0x7e],al
   140022a44:	test   dh,bh
   140022a46:	mov    ecx,0xdd9509c7
   140022a4b:	fdivr  st,st(0)
   140022a4d:	xchg   ebp,eax
   140022a4e:	rcl    ebp,1
   140022a50:	out    dx,eax
   140022a51:	(bad)  
   140022a52:	push   rbx
   140022a53:	jrcxz  0x140022abb
   140022a55:	movabs eax,ds:0x7329f9f625c0372
   140022a5e:	adc    eax,DWORD PTR [rax+0x4]
   140022a61:	fstp   QWORD PTR [rip+0xffffffffe66b4265]        # 0x1266d6ccc
   140022a67:	stc    
   140022a68:	gs (bad) 
   140022a6a:	mov    dh,0xb5
   140022a6c:	in     al,dx
   140022a6d:	xor    al,0xba
   140022a6f:	cli    
   140022a70:	sbb    eax,0x7f9bbfc
   140022a75:	movabs eax,ds:0xf891607db97ec901
   140022a7e:	adc    eax,0xdffc66c9
   140022a83:	lea    esp,[rax-0x5ee091a1]
   140022a89:	jb     0x140022a66
   140022a8b:	cmp    eax,0xdab74cbb
   140022a90:	outs   dx,BYTE PTR ds:[rsi]
   140022a91:	jae    0x140022a33
   140022a93:	add    eax,0x13fbbcfb
   140022a98:	cs out 0xb0,eax
   140022a9b:	cmp    BYTE PTR [rbp+rbx*8-0x2f],dh
   140022a9f:	mov    ah,dh
   140022aa1:	mov    DWORD PTR [rax+rdx*1],0x37677741
   140022aa8:	movabs eax,ds:0x8f55d18765adb72
   140022ab1:	cmc    
   140022ab2:	fisubr DWORD PTR [rcx]
   140022ab4:	push   rsp
   140022ab5:	cs push rbp
   140022ab7:	mov    ecx,DWORD PTR [rsi+0x1313990]
   140022abd:	rex.R shr BYTE PTR [rip+0xffffffffb9508ba7],1        # 0xf952b66b
   140022ac4:	cmp    eax,0xaba30ade
   140022ac9:	scas   al,BYTE PTR es:[rdi]
   140022aca:	imul   ebp,DWORD PTR [rdi+0x50000b40],0xf652072e
   140022ad4:	(bad)  
   140022ad6:	mov    BYTE PTR [rax-0x57aa2e34],ah
   140022adc:	fcomp  QWORD PTR [rsi-0x7fd98caa]
   140022ae2:	or     ah,BYTE PTR [rsi]
   140022ae4:	add    dl,dl
   140022ae6:	rol    BYTE PTR [rax+rdx*1],0x81
   140022aea:	push   0xffffffffea74400b
   140022aef:	ins    DWORD PTR es:[rdi],dx
   140022af0:	mov    edx,0x57ac13ed
   140022af5:	cdq    
   140022af6:	or     DWORD PTR [rcx],0x20
   140022af9:	fwait
   140022afa:	jno    0x140022b22
   140022afc:	(bad)  
   140022afd:	add    al,0xa5
   140022aff:	cmp    DWORD PTR [rip+0xffffffffbd52e542],esp        # 0xfd551047
   140022b05:	fimul  DWORD PTR [rdi-0x56]
   140022b08:	mov    BYTE PTR [rsi+0x4c],cl
   140022b0b:	sub    dh,BYTE PTR [rbp-0x4202b8e9]
   140022b11:	pop    rdi
   140022b12:	test   bh,0xb5
   140022b15:	mov    ah,0x59
   140022b17:	(bad)  
   140022b19:	fidiv  WORD PTR [rax-0x228276b7]
   140022b1f:	jbe    0x140022b99
   140022b21:	jbe    0x140022ac4
   140022b23:	(bad)  
   140022b24:	pop    rdi
   140022b25:	lahf   
   140022b26:	(bad)  
   140022b27:	out    0x6e,eax
   140022b29:	adc    ebx,DWORD PTR [rdi+rdx*1-0x1f]
   140022b2d:	pop    rax
   140022b2e:	rol    DWORD PTR [rax+riz*4],0xc1
   140022b32:	gs int 0x15
   140022b35:	(bad)  
   140022b36:	add    ch,ah
   140022b38:	or     eax,0x681cd17a
   140022b3d:	xor    DWORD PTR [rdx+0x13449afa],edi
   140022b43:	sbb    bl,0xea
   140022b46:	mov    ?,edx
   140022b48:	sti    
   140022b49:	(bad)  
   140022b4a:	mov    dh,0x3a
   140022b4c:	int3   
   140022b4d:	clc    
   140022b4e:	neg    DWORD PTR [rbp-0x5a18a0cf]
   140022b54:	shl    ebx,0x51
   140022b57:	push   0x4f
   140022b59:	sub    al,0xa9
   140022b5b:	ds mov edi,0x737097f
   140022b61:	xor    r14,QWORD PTR [r14+0x1]
   140022b65:	xor    al,0xb8
   140022b67:	lods   eax,DWORD PTR ds:[rsi]
   140022b68:	stc    
   140022b69:	rex.X in eax,0x6a
   140022b6c:	(bad)  
   140022b6e:	mov    WORD PTR [rsi-0x5f21bb86],gs
   140022b74:	mov    bh,0xc3
   140022b76:	push   rdx
   140022b77:	jrcxz  0x140022bea
   140022b79:	(bad)  
   140022b7a:	or     ebx,DWORD PTR [rbx-0x335f4e28]
   140022b80:	rol    BYTE PTR [rax+riz*4],0xa1
   140022b84:	shl    dh,0x16
   140022b87:	sub    dl,bh
   140022b89:	shl    BYTE PTR fs:[rbx-0x67c65541],cl
   140022b90:	js     0x140022b8f
   140022b92:	(bad)  
   140022b94:	cmp    al,0xae
   140022b96:	adc    DWORD PTR [rax+0x340098c5],ebx
   140022b9c:	adc    al,0x8
   140022b9e:	mov    dh,0x0
   140022ba0:	jl     0x140022b54
   140022ba2:	iret   
   140022ba3:	call   0x14de77352
   140022ba8:	es pop rsi
   140022baa:	(bad)  
   140022bab:	stos   DWORD PTR es:[rdi],eax
   140022bac:	fs test ebx,ecx
   140022baf:	(bad)  
   140022bb0:	imul   esi,DWORD PTR [rbp+rdx*8+0x29],0x4d
   140022bb5:	cwde   
   140022bb6:	add    BYTE PTR [rax+rcx*4],dh
   140022bb9:	cs (bad) 
   140022bbb:	in     eax,dx
   140022bbc:	adc    ecx,DWORD PTR [rax]
   140022bbe:	xor    BYTE PTR [rip+0xffffffffdb8fd689],bh        # 0x11b92024d
   140022bc4:	mov    BYTE PTR [rdi+0x2f],ah
   140022bc7:	add    BYTE PTR es:[rip+0xffffffffab4704f6],cl        # 0xeb4930c4
   140022bce:	push   rbp
   140022bcf:	and    ah,BYTE PTR [rdi+0x58]
   140022bd2:	cmp    eax,0x44802689
   140022bd7:	rex.RXB out dx,eax
   140022bd9:	sub    DWORD PTR [rbx+0x30],esi
   140022bdc:	add    DWORD PTR [rax-0x50],ebp
   140022bdf:	pop    rbx
   140022be0:	add    al,0x13
   140022be2:	sbb    cl,0xbb
   140022be5:	add    BYTE PTR [rdx+0x416ee3f5],al
   140022beb:	(bad)  [rbx-0x177cbff7]
   140022bf1:	sbb    edi,ecx
   140022bf3:	cld    
   140022bf4:	pop    rbp
   140022bf5:	add    BYTE PTR [rcx+0x2d8949b],dh
   140022bfb:	enter  0x4c5e,0x0
   140022bff:	sbb    al,BYTE PTR [rdi+rdi*4-0x10]
   140022c03:	out    dx,ax
   140022c05:	add    cl,BYTE PTR [rax+0x20098fd6]
   140022c0b:	jnp    0x140022c3e
   140022c0d:	add    DWORD PTR [rax-0x50],ebp
   140022c10:	or     dh,BYTE PTR [rsi]
   140022c12:	jns    0x140022c59
   140022c14:	ja     0x140022bf9
   140022c16:	ror    DWORD PTR [rbx+0x760a55e8],1
   140022c1c:	add    DWORD PTR [rdx-0x797fece9],esi
   140022c22:	movabs al,ds:0x22f4389a272a141c
   140022c2b:	jp     0x140022c53
   140022c2d:	out    0x74,eax
   140022c2f:	(bad)  
   140022c31:	(bad)
   140022c34:	rex.B hlt 
   140022c36:	rex.WR sahf 
   140022c38:	and    ebx,DWORD PTR [rcx+0x1c9d377b]
   140022c3e:	sub    ecx,0x26d000cd
   140022c44:	cmp    BYTE PTR [rsi+0x40],dh
   140022c47:	out    0xc7,al
   140022c49:	add    al,0xa0
   140022c4b:	shr    DWORD PTR [rdi],0xb8
   140022c4e:	fwait
   140022c4f:	(bad)  
   140022c50:	fnstenv [rdi-0x6052ed2d]
   140022c56:	fst    DWORD PTR [rsi+0x38]
   140022c59:	movabs ds:0x16d1010d00261d4,al
   140022c62:	pop    rax
   140022c63:	(bad)  
   140022c64:	(bad)  
   140022c65:	mov    al,0x7a
   140022c67:	leave  
   140022c68:	adc    DWORD PTR [rax+rax*1-0x5e],ecx
   140022c6c:	push   rdi
   140022c6d:	bswap  eax
   140022c6f:	cld    
   140022c70:	cwde   
   140022c71:	add    BYTE PTR [rax+rcx*4],dh
   140022c74:	idiv   BYTE PTR [rcx+0x1d]
   140022c77:	(bad)  
   140022c79:	add    eax,0xd64018e0
   140022c7e:	(bad)  
   140022c80:	shl    al,1
   140022c82:	or     DWORD PTR [rsi+0x3d13950a],esi
   140022c88:	ret    
   140022c89:	(bad)  
   140022c8a:	(bad)
   140022c8d:	or     BYTE PTR [rbp+0xe3dfb33],dl
   140022c93:	and    al,0x8e
   140022c95:	or     DWORD PTR [rax+0x43],eax
   140022c98:	movabs ds:0x5d8013d99ca849bf,eax
   140022ca1:	mov    al,0x8b
   140022ca3:	ret    0x402e
   140022ca6:	mul    BYTE PTR [rdx+0x2]
   140022ca9:	rcl    al,1
   140022cab:	and    BYTE PTR [rax+0x73165c00],bl
   140022cb1:	fbstp  TBYTE PTR [rip+0x26716b97]        # 0x16673984e
   140022cb7:	pop    rsp
   140022cb8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140022cb9:	sub    eax,edx
   140022cbb:	ins    BYTE PTR es:[rdi],dx
   140022cbc:	cli    
   140022cbd:	stc    
   140022cbe:	or     eax,0x40098e24
   140022cc3:	rex.XB
   140022cc4:	rex.XB movabs al,ds:0xaae8d0bdb15ca851
   140022cce:	rex.RXB
   140022ccf:	fs xchg ebp,eax
   140022cd1:	lods   al,BYTE PTR ds:[rsi]
   140022cd2:	call   0xc1d0dcfb
   140022cd7:	pop    rcx
   140022cd8:	idiv   BYTE PTR [rax]
   140022cda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022cdb:	hlt    
   140022cdc:	(bad)  
   140022cdd:	add    dl,al
   140022cdf:	rcl    BYTE PTR [rax+rbp*2],1
   140022ce2:	(bad)  
   140022ce3:	fimul  DWORD PTR [rcx+0x27]
   140022ce6:	iret   
   140022ce7:	(bad)  
   140022ce8:	xor    ch,ch
   140022cea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022ceb:	rol    BYTE PTR [rdx+0x5b],0x27
   140022cef:	movabs eax,ds:0xcc8f935c92ea3d85
   140022cf8:	lea    ecx,[rcx]
   140022cfa:	rex
   140022cfb:	rex.XB push r8
   140022cfd:	(bad)  
   140022cfe:	or     ch,BYTE PTR [rdi]
   140022d00:	out    dx,eax
   140022d01:	push   rbp
   140022d02:	ins    BYTE PTR es:[rdi],dx
   140022d03:	(bad)  
   140022d04:	xor    bh,BYTE PTR [rdx+0x44a9afa]
   140022d0a:	jmp    0x140022d71
   140022d0c:	out    0x65,al
   140022d0e:	(bad)  
   140022d0f:	sub    BYTE PTR [rcx+0x4c],bh
   140022d12:	add    BYTE PTR [rcx],dl
   140022d14:	push   rsp
   140022d15:	cli    
   140022d16:	(bad)  
   140022d17:	or     dl,BYTE PTR [rbp-0x24ee30d5]
   140022d1d:	rex.WRXB and r13b,r11b
   140022d20:	rex.R xchg edi,eax
   140022d22:	cmp    DWORD PTR [rdi-0x54dfe89f],ebp
   140022d28:	xor    DWORD PTR [rcx],eax
   140022d2a:	rex.R mov al,0xdf
   140022d2d:	sub    edx,DWORD PTR [rsi+0x14b74400]
   140022d33:	rex.WXB (bad) 
   140022d35:	shr    DWORD PTR [rip+0x75fc6abe],1        # 0x1b5fe97f9
   140022d3b:	rex.RX push rdi
   140022d3d:	popf   
   140022d3e:	ror    BYTE PTR [rax+0x3822009],cl
   140022d44:	(bad)  
   140022d45:	sub    eax,0x728e9e80
   140022d4a:	movabs ds:0x156dec013449aeab,eax
   140022d53:	fist   DWORD PTR [rcx-0x78]
   140022d56:	xor    al,BYTE PTR [rbx]
   140022d58:	adc    eax,DWORD PTR [rax+0x4]
   140022d5b:	movabs ds:0xd574671d77f4fc3b,al
   140022d64:	xor    eax,0x2dedcbf5
   140022d69:	push   rsp
   140022d6a:	out    dx,al
   140022d6b:	rex.RXB iret 
   140022d6d:	outs   dx,BYTE PTR ds:[rsi]
   140022d6e:	movabs ds:0x76c11004c4694eab,eax
   140022d77:	iret   
   140022d78:	movabs eax,cs:0xb68cb74cfd5d0372
   140022d82:	rex.WRB mov r10b,0xa1
   140022d85:	lahf   
   140022d86:	stos   DWORD PTR es:[rdi],eax
   140022d87:	rex.WRXB ret 0xbce5
   140022d8b:	rex.B (bad) 
   140022d8d:	sub    bh,BYTE PTR [rsi+riz*8-0x24]
   140022d91:	(bad)  
   140022d92:	mov    WORD PTR [rdx-0x7d],ss
   140022d95:	or     DWORD PTR [rax],esp
   140022d97:	(bad)  
   140022d98:	(bad)  
   140022d99:	cmp    eax,0xc02685bb
   140022d9e:	in     al,0x5a
   140022da0:	pushf  
   140022da1:	call   0x128d60939
   140022da6:	(bad)  
   140022da7:	ja     0x140022d79
   140022da9:	(bad)  
   140022daa:	mov    bh,0xb7
   140022dac:	ror    BYTE PTR [rsi+0x47],1
   140022daf:	mov    ebx,0xaf08f75a
   140022db4:	lea    eax,[rax-0x67]
   140022db7:	or     DWORD PTR [rcx],0xb9368220
   140022dbd:	or     eax,0x8f75b3b
   140022dc2:	xchg   ebp,eax
   140022dc3:	sbb    eax,0x74621ee6
   140022dc8:	cmc    
   140022dc9:	cmp    edi,eax
   140022dcb:	mov    ebx,edi
   140022dcd:	adc    al,0xa1
   140022dcf:	jb     0x140022e0c
   140022dd1:	or     al,0x6e
   140022dd3:	(bad)  
   140022dd4:	fwait
   140022dd5:	jge    0x140022d58
   140022dd7:	xchg   ebp,eax
   140022dd8:	ins    BYTE PTR es:[rdi],dx
   140022dd9:	rol    BYTE PTR [rax+rdx*1],0xc5
   140022ddd:	(bad)  
   140022dde:	xchg   esi,eax
   140022ddf:	sbb    eax,0x28cee542
   140022de4:	cmp    ch,dl
   140022de6:	call   0x19a72a595
   140022deb:	sbb    DWORD PTR [rax+0x42],0xf3f041fa
   140022df2:	imul   edx,DWORD PTR [rcx],0x59
   140022df5:	movsxd eax,DWORD PTR [rcx+0x1fa6116b]
   140022dfb:	adc    eax,DWORD PTR [rax+0x14]
   140022dfe:	pop    rdi
   140022dff:	xor    eax,0x6e54237e
   140022e04:	mov    bl,bh
   140022e06:	and    al,0xe1
   140022e08:	in     eax,dx
   140022e09:	(bad)
   140022e0c:	ins    DWORD PTR es:[rdi],dx
   140022e0d:	retf   
   140022e0e:	(bad)  
   140022e0f:	loopne 0x140022e0d
   140022e11:	adc    eax,DWORD PTR [rbp-0x7218136]
   140022e17:	gs retf 0xe1ea
   140022e1b:	or     eax,0xc32e137a
   140022e20:	mov    ch,0x8
   140022e22:	ror    DWORD PTR [rdi-0x3075dff7],cl
   140022e28:	sbb    edi,DWORD PTR [rdi+0x6c129a16]
   140022e2e:	xchg   edi,eax
   140022e2f:	in     al,dx
   140022e30:	mov    eax,0xa35ce8a0
   140022e35:	stos   DWORD PTR es:[rdi],eax
   140022e36:	ltr    WORD PTR [rax]
   140022e39:	pop    rbp
   140022e3a:	xor    al,0x42
   140022e3c:	call   0xebeb888d
   140022e41:	ret    0xd69e
   140022e44:	mov    dl,BYTE PTR [rbp+rdx*8-0x77fedbbd]
   140022e4b:	out    dx,al
   140022e4c:	rol    BYTE PTR [rcx+rsi*8+0x63],1
   140022e50:	add    cl,BYTE PTR [rax+0x4eadb6a2]
   140022e56:	clc    
   140022e57:	xor    bl,al
   140022e59:	iret   
   140022e5a:	rex.WX (bad) 
   140022e5c:	sbb    DWORD PTR [rsi+0x35],edi
   140022e5f:	rex (bad) 
   140022e61:	test   BYTE PTR [rbx+0x2a168f3b],cl
   140022e67:	sti    
   140022e68:	jns    0x140022e2d
   140022e6a:	xchg   edi,eax
   140022e6b:	sub    DWORD PTR [rbp+0x240ab4b],ebp
   140022e71:	xor    BYTE PTR [rbx+0x2b],cl
   140022e74:	sub    bl,BYTE PTR [rbx-0xf3bfecf]
   140022e7a:	cdq    
   140022e7b:	(bad)  
   140022e7c:	and    ah,dh
   140022e7e:	jno    0x140022e76
   140022e80:	(bad)  
   140022e81:	enter  0xb3a2,0xc
   140022e85:	lods   eax,DWORD PTR ds:[rsi]
   140022e86:	sti    
   140022e87:	cdq    
   140022e88:	popf   
   140022e89:	xchg   BYTE PTR [rcx-0x43275181],ah
   140022e8f:	add    al,0xd1
   140022e91:	iret   
   140022e92:	sbb    eax,0xa00b4889
   140022e97:	rcl    BYTE PTR [rsi-0x70],1
   140022e9a:	mov    es,ebx
   140022e9c:	rex.X and DWORD PTR [rax+0x53586200],ebx
   140022ea3:	repz (bad) 
   140022ea5:	loope  0x140022e59
   140022ea7:	(bad)  
   140022ea8:	xchg   esi,eax
   140022ea9:	pop    rdi
   140022eaa:	or     eax,0x3c2ae0a7
   140022eaf:	leave  
   140022eb0:	mov    dl,0x49
   140022eb2:	fcom   QWORD PTR ss:[rax+0x3e]
   140022eb6:	rex.WB test al,0x6c
   140022eb9:	imul   edx,eax,0xffffff8b
   140022ebc:	iret   
   140022ebd:	sbb    edi,DWORD PTR [rdi+0x5a7d694a]
   140022ec3:	add    eax,0x9d112536
   140022ec8:	mov    ebp,0x263f148
   140022ecd:	mov    BYTE PTR [rcx-0x65],ah
   140022ed0:	out    0x47,eax
   140022ed2:	ins    BYTE PTR es:[rdi],dx
   140022ed3:	imul   esp
   140022ed5:	adc    al,0x2a
   140022ed7:	fcmovnu st,st(5)
   140022ed9:	push   rcx
   140022eda:	xchg   BYTE PTR [rbx-0x6f350386],bl
   140022ee0:	jp     0x140022f31
   140022ee2:	sub    DWORD PTR [rdi-0x48d02f6],edi
   140022ee8:	or     BYTE PTR [rbp+0x11fb575d],dl
   140022eee:	pop    rdx
   140022eef:	add    bl,BYTE PTR [rsi-0x3e58296c]
   140022ef5:	lahf   
   140022ef6:	clc    
   140022ef7:	sbb    cl,BYTE PTR [rbx]
   140022ef9:	mov    ebp,0x71d23d9d
   140022efe:	push   0x40130428
   140022f03:	sbb    al,0xde
   140022f05:	cmp    eax,0xecb84eb4
   140022f0a:	clc    
   140022f0b:	(bad)  
   140022f0c:	(bad)  
   140022f0d:	loop   0x140022ea6
   140022f0f:	pop    rbp
   140022f10:	(bad)  
   140022f11:	shl    DWORD PTR [rbp-0x7368e842],cl
   140022f17:	(bad)  
   140022f18:	push   rbp
   140022f19:	pop    rbp
   140022f1a:	(bad)  
   140022f1b:	or     BYTE PTR [rdi+0x657ab37f],dl
   140022f21:	retf   0x74eb
   140022f24:	rcl    BYTE PTR [rdi-0x63],1
   140022f27:	jo     0x140022ec2
   140022f29:	adc    bh,BYTE PTR [rbx+0x11]
   140022f2c:	xchg   ebx,eax
   140022f2d:	rex (bad) 
   140022f2f:	xor    DWORD PTR [rcx],eax
   140022f31:	(bad)
   140022f35:	cmp    ah,cl
   140022f37:	test   DWORD PTR [rdx+0x1],eax
   140022f3a:	(bad)  
   140022f3b:	pop    rdx
   140022f3c:	imul   DWORD PTR [rbx+0x71]
   140022f3f:	jge    0x140022ef8
   140022f41:	pop    rdi
   140022f42:	(bad)  
   140022f43:	xor    ch,BYTE PTR [rax]
   140022f45:	cmp    BYTE PTR [rcx-0x5c47da35],dh
   140022f4b:	test   DWORD PTR [rbp-0x3e],0xd355f5ef
   140022f52:	mov    bh,0xf8
   140022f54:	scas   al,BYTE PTR es:[rdi]
   140022f55:	stc    
   140022f56:	xchg   DWORD PTR [rdi+rdx*8+0x2557d2ab],edx
   140022f5d:	push   rsp
   140022f5e:	out    dx,al
   140022f5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022f60:	and    eax,0x2ebca417
   140022f65:	je     0x140022f6b
   140022f67:	adc    eax,DWORD PTR [rax+0x1c]
   140022f6a:	sbb    bh,ah
   140022f6c:	lea    ebx,[rax+0x56]
   140022f6f:	and    eax,0x2094567e
   140022f74:	loope  0x140022f70
   140022f76:	outs   dx,BYTE PTR ds:[rsi]
   140022f77:	mov    edi,0x7e0323c0
   140022f7c:	(bad)  
   140022f7d:	(bad)  
   140022f7e:	imul   edi,DWORD PTR [rdx+0x5ed4b05b],0xbdf43f82
   140022f88:	adc    esi,DWORD PTR [rdi-0x56de470a]
   140022f8e:	rex.R
   140022f8f:	repz ret 0x57fe
   140022f93:	rcl    BYTE PTR [rdx+0x3f],cl
   140022f96:	rcr    DWORD PTR [rcx-0x6b],1
   140022f99:	push   rdi
   140022f9a:	jbe    0x140022fb5
   140022f9c:	(bad)  
   140022f9d:	rol    ebp,1
   140022f9f:	and    edx,edx
   140022fa1:	push   rdx
   140022fa2:	(bad)  
   140022fa3:	add    bh,BYTE PTR [rax]
   140022fa5:	(bad)  
   140022fa6:	sub    cl,BYTE PTR [rsi+0x2f]
   140022fa9:	(bad)  
   140022faa:	pop    rsp
   140022fab:	xchg   BYTE PTR [rcx],cl
   140022fad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022fae:	(bad)  
   140022faf:	and    eax,0x4fd7e4b5
   140022fb4:	fadd   QWORD PTR [rbx-0x70b60b0f]
   140022fba:	loop   0x140022fa9
   140022fbc:	rex.XB stos DWORD PTR es:[rdi],eax
   140022fbe:	icebp  
   140022fbf:	rex.RX (bad) 
   140022fc1:	rex.WX in al,dx
   140022fc3:	adc    BYTE PTR [rcx+riz*8+0x47775428],bh
   140022fca:	sbb    esi,eax
   140022fcc:	ja     0x140022f8c
   140022fce:	adc    BYTE PTR [rdi+0x375925],dl
   140022fd4:	clc    
   140022fd5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022fd6:	jle    0x140022ffb
   140022fd8:	ss ss jle 0x140022f79
   140022fdc:	repnz movsxd eax,DWORD PTR [rdi]
   140022fdf:	sub    bh,dh
   140022fe1:	adc    eax,0xc240e404
   140022fe6:	sar    DWORD PTR [rbx+0x2d],cl
   140022fe9:	xchg   edx,eax
   140022fea:	add    eax,0x8d99f4f7
   140022fef:	retf   
   140022ff0:	cmp    bh,bh
   140022ff2:	adc    al,0x1f
   140022ff4:	(bad)  
   140022ff5:	jg     0x140022f7d
   140022ff7:	sbb    eax,0x868dd9e
   140022ffc:	xor    al,0x22
   140022ffe:	sub    BYTE PTR [rdi],al
   140023000:	loope  0x140022fb2
   140023002:	in     al,0x20
   140023004:	rex.RXB mov r10b,0x23
   140023007:	fist   WORD PTR [rsi+0xec91c8f]
   14002300d:	xchg   DWORD PTR [rip+0x17567907],esp        # 0x15758a91a
   140023013:	jb     0x140023041
   140023015:	cmp    DWORD PTR [rax+0x5a],esi
   140023018:	sbb    al,0xc8
   14002301a:	xchg   ecx,eax
   14002301b:	jb     0x14002300d
   14002301d:	jg     0x14002309a
   14002301f:	lahf   
   140023020:	rex.WRX retf 
   140023022:	out    0xc9,eax
   140023024:	(bad)  
   140023025:	rex.WR add BYTE PTR [rcx-0x56],r14b
   140023029:	ins    DWORD PTR es:[rdi],dx
   14002302a:	stos   DWORD PTR es:[rdi],eax
   14002302b:	ret    
   14002302c:	xchg   edx,eax
   14002302d:	or     ebx,0x70
   140023030:	rex.WRB fxch st(7)
   140023033:	xchg   ebx,eax
   140023034:	jp     0x140023053
   140023036:	fwait
   140023037:	fs (bad) 
   14002303b:	jrcxz  0x14002306d
   14002303d:	mov    esi,0xd0fc38f3
   140023042:	repnz and esi,DWORD PTR [rsi]
   140023045:	xor    al,0x6c
   140023047:	ret    0xa6e6
   14002304a:	sub    eax,0x7b65bef8
   14002304f:	pop    rsp
   140023050:	add    esp,DWORD PTR [rbp-0x7]
   140023053:	(bad)  
   140023054:	cmp    al,0xc
   140023056:	jo     0x14002304d
   140023058:	vpsubw xmm12,xmm10,XMMWORD PTR [rdi]
   14002305c:	loop   0x140023052
   14002305e:	(bad)  
   14002305f:	movabs eax,ds:0xde16ba4a606f3138
   140023068:	movabs al,ds:0xcfc76d267dee4f0f
   140023071:	(bad)  
   140023072:	ins    BYTE PTR es:[rdi],dx
   140023073:	ret    
   140023074:	(bad)  
   140023075:	iret   
   140023076:	cs or  al,0x70
   140023079:	cmc    
   14002307a:	adc    eax,0xff283f2a
   14002307f:	add    al,0xc
   140023081:	retf   0x213f
   140023084:	movabs eax,ds:0xbc33df75fc643232
   14002308d:	movabs eax,ds:0xe070bc0480260a29
   140023096:	adc    eax,0x1b3c2c8c
   14002309b:	cmp    eax,0xc669a99d
   1400230a0:	pshufw mm3,QWORD PTR [rip+0xffffffffe3ae0187],0x0        # 0x123b0322f
   1400230a8:	pop    rsp
   1400230a9:	add    DWORD PTR [rax],eax
   1400230ab:	push   0xffffffff80e0b409
   1400230b0:	scas   eax,DWORD PTR es:[rdi]
   1400230b1:	or     cl,BYTE PTR [rip+0xffffffffe4f846fe]        # 0x124fa77b5
   1400230b7:	ss js  0x1400230bc
   1400230ba:	(bad)  
   1400230bb:	in     al,0x5a
   1400230bd:	popf   
   1400230be:	mov    al,0x49
   1400230c0:	jbe    0x1400230d6
   1400230c2:	fimul  DWORD PTR [rdx]
   1400230c4:	push   rax
   1400230c5:	(bad)  
   1400230c6:	push   rbx
   1400230c7:	add    dh,BYTE PTR [rdi-0x60d2c0cb]
   1400230cd:	in     eax,dx
   1400230ce:	jmp    0x12bdaf65d
   1400230d3:	rex.WRB (bad) 
   1400230d6:	(bad)  
   1400230d7:	sub    eax,0x166e345f
   1400230dc:	rex.WRX add BYTE PTR [rdx],r12b
   1400230df:	and    al,0x48
   1400230e1:	jo     0x14002313c
   1400230e3:	jb     0x1400230b6
   1400230e5:	adc    al,0x68
   1400230e7:	(bad)  
   1400230e8:	in     eax,dx
   1400230e9:	cmp    eax,0x40130d33
   1400230ee:	add    bh,BYTE PTR [rcx+rax*8+0x36]
   1400230f2:	cld    
   1400230f3:	not    DWORD PTR gs:[rbx+0x7fe07478]
   1400230fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400230fb:	gs rex iret 
   1400230fe:	gs jne 0x1400230a2
   140023101:	scas   eax,DWORD PTR es:[rdi]
   140023102:	loopne 0x1400230c6
   140023104:	sbb    eax,0xbf50d8c9
   140023109:	or     DWORD PTR [rdi-0x12d483e4],ebp
   14002310f:	out    dx,eax
   140023110:	repz jno 0x140023110
   140023113:	rex.RX cld 
   140023115:	rex.X out 0x2b,eax
   140023118:	and    bh,BYTE PTR [rcx+0x56]
   14002311b:	(bad)  
   14002311c:	adc    eax,DWORD PTR [rax+0x14]
   14002311f:	sbb    al,0x4
   140023121:	rex.WR shl sil,1
   140023124:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023125:	out    dx,eax
   140023126:	mov    al,0x70
   140023128:	fistp  QWORD PTR [rdi]
   14002312a:	mov    WORD PTR [rsi+0x6eecca46],gs
   140023130:	fld    QWORD PTR [rdi+0x13ce7707]
   140023136:	mov    edx,0x5f5121e7
   14002313b:	(bad)  
   14002313c:	ins    DWORD PTR es:[rdi],dx
   14002313d:	adc    DWORD PTR [rsi+0x6a],ebx
   140023140:	rex.WRB push r12
   140023142:	(bad)  
   140023143:	out    dx,eax
   140023144:	(bad)  
   140023145:	mov    BYTE PTR [rdx-0x743fbff7],cl
   14002314b:	xchg   ebp,eax
   14002314c:	scas   eax,DWORD PTR es:[rdi]
   14002314d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002314e:	in     eax,0x5a
   140023150:	mov    ecx,0xaafa0ede
   140023155:	icebp  
   140023156:	mov    ebx,0x39a20f6d
   14002315b:	shl    BYTE PTR [rdx-0x6f360435],1
   140023161:	mov    cl,0xb4
   140023163:	(bad)  
   140023164:	sbb    eax,0xcba33f5d
   140023169:	push   0xffffffffffffffee
   14002316b:	fstp   QWORD PTR [rdx+0x2004c68c]
   140023171:	call   0xf08d6eff
   140023176:	mov    dh,0xf6
   140023178:	rex.XB movabs ds:0xb67302b7af6c21ab,eax
   140023182:	fisub  WORD PTR [rdi+0x597919fb]
   140023188:	(bad)  
   140023189:	cmp    ebp,DWORD PTR [rax-0x122e5492]
   14002318f:	std    
   140023190:	fadd   DWORD PTR [rdx]
   140023192:	mov    BYTE PTR [rsi+0x5f904009],cl
   140023198:	(bad)  
   140023199:	loopne 0x14002312a
   14002319b:	(bad)  
   14002319c:	mov    bh,BYTE PTR ds:[rdi+0x1c]
   1400231a0:	js     0x140023177
   1400231a2:	call   0x12bee5651
   1400231a7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400231a8:	sub    eax,0xbbfbf5b8
   1400231ad:	mov    cl,0x5f
   1400231af:	out    0xe0,eax
   1400231b1:	(bad)  
   1400231b2:	xchg   esp,eax
   1400231b3:	sti    
   1400231b4:	or     al,0x92
   1400231b6:	cdq    
   1400231b7:	pop    rcx
   1400231b8:	cdq    
   1400231b9:	test   al,0x3c
   1400231bb:	or     edx,DWORD PTR [rbx]
   1400231bd:	xor    al,0x1c
   1400231c0:	add    al,0x4c
   1400231c2:	(bad)  
   1400231c3:	or     al,0x19
   1400231c5:	mov    ebp,DWORD PTR [rdx]
   1400231c7:	(bad)  
   1400231c8:	movsxd esp,DWORD PTR [rdi-0x15]
   1400231cb:	(bad)  
   1400231cc:	int3   
   1400231cd:	in     al,dx
   1400231ce:	jno    0x140023233
   1400231d0:	rex.RX fdivr QWORD PTR [rsi+0x5781c2fa]
   1400231d7:	icebp  
   1400231d8:	in     al,dx
   1400231d9:	(bad)  
   1400231da:	xchg   edi,eax
   1400231db:	adc    BYTE PTR [rax],dl
   1400231dd:	pop    rax
   1400231de:	movabs eax,ds:0xd4ebad9d16461527
   1400231e7:	push   0x63a20176
   1400231ec:	or     esp,DWORD PTR [rax]
   1400231ee:	add    eax,0xbfcd4d6
   1400231f3:	xlat   BYTE PTR ds:[rbx]
   1400231f4:	outs   dx,BYTE PTR ds:[rsi]
   1400231f5:	mov    ecx,0xaf556f15
   1400231fa:	xor    bh,BYTE PTR [rdx-0x5aaced6]
   140023200:	stos   BYTE PTR es:[rdi],al
   140023201:	or     al,0xd
   140023203:	(bad)  
   140023204:	jnp    0x140023201
   140023206:	int3   
   140023207:	(bad)  
   140023208:	jne    0x1400231b7
   14002320a:	(bad)  
   14002320b:	sub    dl,BYTE PTR cs:[rdx]
   14002320e:	sbb    eax,0x348a4013
   140023213:	cli    
   140023214:	fwait
   140023215:	lock (bad) 
   140023217:	mov    ebx,0x5b6dc29f
   14002321c:	out    dx,eax
   14002321d:	rol    DWORD PTR [rdi-0xb],0x9f
   140023221:	jmp    0x1a230dc58
   140023226:	pop    rdx
   140023227:	stc    
   140023228:	xor    eax,0xd275b428
   14002322d:	std    
   14002322e:	jge    0x140023277
   140023230:	adc    eax,0xf054739d
   140023235:	sti    
   140023236:	add    ebp,ecx
   140023238:	rex.WRXB
   140023239:	rex.R jns 0x140023262
   14002323c:	fbstp  TBYTE PTR [rdx+0x2ec68dd]
   140023242:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023243:	fdiv   DWORD PTR [rdi]
   140023245:	rex.WRB inc r14
   140023248:	mov    ebp,0x6f427f4d
   14002324d:	subps  xmm3,XMMWORD PTR [esi+0x7a]
   140023252:	xor    DWORD PTR [rsi+0x14],eax
   140023255:	(bad)  
   140023256:	rex.RXB xchg r9d,eax
   140023258:	mov    DWORD PTR [rsi-0xd2488f3],esi
   14002325e:	jno    0x1400232b3
   140023260:	(bad)  
   140023261:	pop    rdi
   140023262:	(bad)  
   140023263:	out    dx,al
   140023264:	(bad)  
   140023265:	(bad)  
   140023266:	je     0x1400232e3
   140023268:	iret   
   140023269:	xchg   ecx,eax
   14002326a:	rex.RB
   14002326b:	jecxz  0x14002325c
   14002326e:	ds mov bl,0x3a
   140023271:	add    al,0x7f
   140023273:	and    BYTE PTR [rax],bl
   140023275:	ror    BYTE PTR [rbp-0x4c3d11f5],0x33
   14002327c:	(bad)  
   14002327d:	out    dx,al
   14002327e:	lock fmul QWORD PTR [rdi]
   140023281:	jmp    0x1400232c1
   140023283:	(bad)
   140023286:	or     QWORD PTR [r15+0x78],rcx
   14002328a:	repnz retf 
   14002328c:	jle    0x14002327a
   14002328e:	outs   dx,BYTE PTR ds:[rsi]
   14002328f:	fld    QWORD PTR [rdi-0x4f045223]
   140023295:	stos   DWORD PTR es:[rdi],eax
   140023296:	jne    0x1400232a7
   140023298:	jbe    0x140023250
   14002329a:	out    dx,al
   14002329b:	(bad)
   14002329e:	mov    ebp,0x2cd65d29
   1400232a3:	sbb    ebp,ecx
   1400232a5:	mov    cl,0x66
   1400232a7:	xchg   ebp,eax
   1400232a8:	(bad)  
   1400232a9:	(bad)  
   1400232aa:	mov    al,0x0
   1400232ac:	mov    al,0x2
   1400232ae:	enter  0x9001,0xb
   1400232b2:	movabs al,ds:0x37df138da8f94000
   1400232bb:	cli    
   1400232bc:	and    BYTE PTR [rdi+rsi*8-0x6be7b43d],ah
   1400232c3:	jg     0x1400232c7
   1400232c5:	(bad)  
   1400232c6:	sub    eax,0xf9a18e1c
   1400232cb:	(bad)  
   1400232cc:	jrcxz  0x140023286
   1400232ce:	(bad)  
   1400232d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400232d1:	pop    rax
   1400232d2:	in     al,dx
   1400232d3:	repnz (bad) 
   1400232d5:	(bad)  
   1400232d6:	cmp    al,0x80
   1400232d8:	lea    r11,[r11+0x5a3efed3]
   1400232df:	int    0xfe
   1400232e1:	xor    BYTE PTR [rax-0x7a2019e5],al
   1400232e8:	(bad)  
   1400232e9:	(bad)  
   1400232ea:	jle    0x1400232f7
   1400232ec:	mov    esi,0x7874b767
   1400232f1:	inc    BYTE PTR [rip+0xffffffff9159949b]        # 0xd15bc792
   1400232f7:	pop    rbp
   1400232f8:	jb     0x140023334
   1400232fa:	movabs ds:0xb62845ec4a07b3b7,eax
   140023303:	(bad)  
   140023304:	sbb    eax,0xc2b7cd1e
   140023309:	add    bl,BYTE PTR [rdi-0x5facb814]
   14002330f:	sbb    DWORD PTR [rbp-0x2bc78a93],esi
   140023315:	push   rsi
   140023316:	add    DWORD PTR [rbx-0x1027bc42],0xffffffab
   14002331d:	xor    al,0xac
   14002331f:	imul   edx,DWORD PTR [rbx-0x42790874],0x36
   140023326:	adc    al,BYTE PTR [rax+0x5]
   140023329:	add    BYTE PTR [rsi],0x0
   14002332c:	(bad)  
   14002332d:	add    BYTE PTR [rsi],bh
   14002332f:	add    BYTE PTR [rcx],al
   140023331:	add    BYTE PTR [rcx+0x0],al
   140023334:	jb     0x140023331
   140023336:	and    ebp,DWORD PTR [rbp-0x28]
   140023339:	add    cl,BYTE PTR [rax+0x33]
   14002333c:	sbb    DWORD PTR [rdx],esi
   14002333e:	ss (bad) 
   140023340:	jge    0x1400232c9
   140023342:	int    0x4d
   140023344:	fild   WORD PTR [rcx]
   140023346:	add    BYTE PTR [rdx+0x2c],dh
   140023349:	jbe    0x14002333f
   14002334b:	iret   
   14002334c:	cmp    eax,0xfd5d030e
   140023351:	rcr    ch,1
   140023353:	ror    DWORD PTR [rip+0x282539a5],1        # 0x168276cfe
   140023359:	mov    ch,0x97
   14002335b:	movabs al,ds:0xb1c8f9adb8674e4b
   140023364:	push   0xde1e06f
   140023369:	cli    
   14002336a:	loopne 0x1400232ff
   14002336c:	jge    0x140023316
   14002336e:	imul   ebp,DWORD PTR [rbx+0xf78543],0xdb2ddfe
   140023378:	(bad)  
   140023379:	(bad)  
   14002337a:	mov    ebp,0xd89b6e14
   14002337f:	(bad)  
   140023380:	loopne 0x14002335b
   140023382:	mov    ebp,0xdfd7e1a6
   140023387:	fisttp QWORD PTR [rsi]
   140023389:	pop    rdi
   14002338a:	mov    al,0x2d
   14002338c:	ins    DWORD PTR es:[rdi],dx
   14002338d:	lahf   
   14002338e:	cmp    eax,0x7347f056
   140023393:	rcl    BYTE PTR [rdi+0x2d],1
   140023396:	mov    ah,0x86
   140023398:	add    BYTE PTR [rip+0x67400986],ah        # 0x1a7423d24
   14002339e:	mov    esi,0x34b61b60
   1400233a3:	outs   dx,DWORD PTR ds:[rsi]
   1400233a4:	(bad)
   1400233a7:	lods   eax,DWORD PTR ds:[rsi]
   1400233a8:	adc    DWORD PTR [rdi+0x6038b4e3],ebx
   1400233ae:	xchg   edi,eax
   1400233af:	in     al,dx
   1400233b0:	mov    al,0x4a
   1400233b2:	(bad)  
   1400233b3:	js     0x140023337
   1400233b5:	lods   eax,DWORD PTR ds:[rsi]
   1400233b6:	lock rex.RX pop rax
   1400233b9:	rex.WRX stos QWORD PTR es:[rdi],rax
   1400233bb:	mov    dh,0xad
   1400233bd:	(bad)  
   1400233be:	mov    bh,0xf7
   1400233c0:	(bad)  
   1400233c1:	and    DWORD PTR [rdi+rcx*4+0x1e],edx
   1400233c5:	mov    ?,WORD PTR [rdx+0x4c]
   1400233c8:	out    dx,al
   1400233c9:	jp     0x1400233d0
   1400233cb:	sahf   
   1400233cc:	fcos   
   1400233ce:	iret   
   1400233cf:	mov    ah,0x7c
   1400233d1:	(bad)  
   1400233d2:	fs (bad) 
   1400233d4:	lahf   
   1400233d5:	hlt    
   1400233d6:	ret    
   1400233d7:	rex.B
   1400233d8:	rex adc ebp,DWORD PTR [rdx+0xd]
   1400233dc:	jp     0x1400233af
   1400233de:	sbb    BYTE PTR [rax+0x42],ch
   1400233e1:	popf   
   1400233e2:	mov    edi,0x3f06221
   1400233e7:	shl    dl,0xea
   1400233ea:	(bad)  
   1400233eb:	fcom   st(2)
   1400233ed:	cld    
   1400233ee:	mov    ebp,0x2e4cfbf0
   1400233f3:	mov    ebx,0xee2b2d3c
   1400233f8:	xor    al,bh
   1400233fa:	test   DWORD PTR [rax],ebx
   1400233fc:	xor    ch,BYTE PTR [rdx-0x34]
   1400233ff:	add    al,0x90
   140023401:	shl    DWORD PTR [rax+rcx*8+0x78],0x6c
   140023406:	iret   
   140023407:	rex.X loope 0x1400233e5
   14002340a:	pop    rbp
   14002340b:	ins    DWORD PTR es:[rdi],dx
   14002340c:	xchg   edx,eax
   14002340d:	or     eax,0x4b4d7bb3
   140023412:	jmp    0x13e0e81a4
   140023417:	test   BYTE PTR [rcx+0x30437d7d],ch
   14002341d:	add    DWORD PTR [rax+rdi*4+0x1f],esp
   140023421:	pop    rdx
   140023422:	jbe    0x140023404
   140023424:	lea    ebp,[rdx-0xf]
   140023427:	stc    
   140023428:	cmc    
   140023429:	rex.XB
   14002342a:	repnz rex.WRXB (bad) 
   14002342d:	fsub   st,st(2)
   14002342f:	xchg   ecx,eax
   140023430:	sub    DWORD PTR [rcx+0x485f830b],ebp
   140023436:	call   0x1489cd39b
   14002343b:	je     0x140023488
   14002343d:	or     BYTE PTR [rbx+rax*1],bl
   140023440:	enter  0x8b02,0x2a
   140023444:	(bad)  
   140023445:	jrcxz  0x140023403
   140023447:	ret    0x5133
   14002344a:	(bad)  
   14002344b:	(bad)  
   14002344c:	(bad)  
   14002344d:	sub    bh,BYTE PTR [rdi+0x73]
   140023450:	(bad)  
   140023451:	pop    rdi
   140023452:	(bad)  
   140023453:	rex.XB ret 
   140023455:	es (bad) 
   140023457:	sti    
   140023458:	sbb    eax,DWORD PTR [rbx+rbp*8+0x5fe0aa90]
   14002345f:	sti    
   140023460:	xchg   ebx,eax
   140023461:	int3   
   140023462:	fwait
   140023463:	pop    rdx
   140023464:	sbb    eax,0x43557a8d
   140023469:	rex.WXB fst QWORD PTR [r15-0xffce979]
   140023470:	rex.X sbb ebp,esi
   140023473:	(bad)  
   140023474:	add    al,0x5b
   140023476:	add    BYTE PTR [rcx-0x60],bl
   140023479:	and    eax,0x7dfcc1e0
   14002347e:	iret   
   14002347f:	or     edx,DWORD PTR [rdi+0x31b9b02f]
   140023485:	mov    ch,0xfb
   140023487:	xor    eax,0xe679e5c2
   14002348c:	rex.WRXB pop r12
   14002348e:	in     eax,dx
   14002348f:	addr32 push rbp
   140023491:	scas   eax,DWORD PTR es:[rdi]
   140023492:	jl     0x140023505
   140023494:	jrcxz  0x140023491
   140023496:	or     esp,DWORD PTR [rcx-0x71df7fdc]
   14002349c:	mov    esi,0x2b4ba7ec
   1400234a1:	or     BYTE PTR [rcx],0x20
   1400234a4:	rex.WXB lods al,BYTE PTR ds:[rsi]
   1400234a6:	stos   BYTE PTR es:[rdi],al
   1400234a7:	stc    
   1400234a8:	add    BYTE PTR [rdi+0x24],bl
   1400234ab:	jno    0x14002350a
   1400234ad:	jmp    QWORD PTR [rdx-0x2bcff46e]
   1400234b3:	cmp    eax,0xc72e128
   1400234b8:	inc    ah
   1400234ba:	(bad)  
   1400234bb:	jl     0x14002352f
   1400234bd:	lock cmc 
   1400234bf:	(bad)  
   1400234c0:	addr32 cld 
   1400234c2:	imul   edx,DWORD PTR [rcx],0xffffff80
   1400234c5:	sub    BYTE PTR es:[rcx],cl
   1400234c8:	ror    BYTE PTR [rdi],0x9d
   1400234cb:	scas   al,BYTE PTR es:[rdi]
   1400234cc:	sti    
   1400234cd:	xchg   DWORD PTR [rbx+0x2],esp
   1400234d0:	enter  0xf322,0x76
   1400234d4:	iret   
   1400234d5:	rex.RXB
   1400234d6:	fwait
   1400234d7:	sub    al,0x76
   1400234d9:	pop    rbp
   1400234da:	pop    rdi
   1400234db:	(bad)  
   1400234dc:	test   BYTE PTR [rcx],bh
   1400234de:	cmp    eax,0xd92ec3a7
   1400234e3:	jrcxz  0x140023513
   1400234e5:	ret    
   1400234e6:	loopne 0x140023537
   1400234e8:	fsub   QWORD PTR [rcx-0x720d471]
   1400234ee:	(bad)  
   1400234ef:	xchg   esi,eax
   1400234f0:	ud0    ecx,DWORD PTR [rsi]
   1400234f3:	movabs al,ds:0xf8991c369fc4ca11
   1400234fc:	movabs ds:0xaf64590063802b7b,eax
   140023505:	mov    bh,0x2
   140023507:	scas   eax,DWORD PTR es:[rdi]
   140023508:	push   rsp
   140023509:	mov    esi,0x97654985
   14002350e:	or     edx,DWORD PTR [rbp-0x38d31611]
   140023514:	xchg   ebp,eax
   140023515:	pop    rbp
   140023516:	(bad)  
   140023517:	movsxd esi,ecx
   140023519:	adc    edi,0x55373e62
   14002351f:	rcr    DWORD PTR [rdi+0x4649fd73],0x1f
   140023526:	mov    dh,0x94
   140023528:	or     bl,BYTE PTR [rdi-0x2f15e727]
   14002352e:	rex.RXB xchg r13d,eax
   140023530:	retf   
   140023531:	mov    esi,0x19feb99e
   140023536:	sub    BYTE PTR [rbx-0x635fa502],dh
   14002353c:	std    
   14002353d:	(bad)  [rax+0x300200b4]
   140023543:	loopne 0x1400235af
   140023545:	add    BYTE PTR [rbx+0x0],bl
   140023548:	pop    rcx
   140023549:	out    0xb9,al
   14002354b:	add    ecx,DWORD PTR [rbx-0x6e]
   14002354e:	mov    edx,0xb2daffcf
   140023553:	sub    esp,DWORD PTR [rbx-0x12]
   140023556:	leave  
   140023557:	(bad)  
   140023558:	xor    edi,DWORD PTR [rdi-0x1e]
   14002355b:	fiadd  DWORD PTR [rbx-0xaffa601]
   140023561:	add    BYTE PTR [rdx+0x43fd9ca1],bl
   140023567:	adc    eax,DWORD PTR [rax-0x12dff4aa]
   14002356d:	cwde   
   14002356e:	add    BYTE PTR [rdx-0x3a17c874],dh
   140023574:	pop    rdi
   140023575:	idiv   esi
   140023577:	pop    rbp
   140023578:	mov    eax,0x8392c3bc
   14002357d:	pop    rcx
   14002357e:	cmp    eax,0x3dfc46a7
   140023583:	cmp    DWORD PTR [rdi],0x71
   140023586:	xchg   esi,edx
   140023588:	push   rdi
   140023589:	mov    esi,0x75fc1ed9
   14002358e:	push   rax
   14002358f:	cli    
   140023590:	std    
   140023591:	sub    eax,0xcca15a00
   140023596:	sti    
   140023597:	paddsw mm0,QWORD PTR [rdx]
   14002359a:	jo     0x1400235ac
   14002359c:	nop
   14002359d:	xchg   edx,eax
   14002359e:	mul    DWORD PTR [rcx-0x23]
   1400235a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400235a2:	clc    
   1400235a3:	mov    eax,0xb2a173fe
   1400235a8:	jle    0x1400235e3
   1400235aa:	cmp    BYTE PTR [rdx],0x7f
   1400235ad:	mov    ebp,0xc1a42e6
   1400235b2:	inc    ah
   1400235b4:	push   rbp
   1400235b5:	jg     0x14002362f
   1400235b7:	(bad)  
   1400235b8:	stc    
   1400235b9:	xlat   BYTE PTR ds:[rbx]
   1400235ba:	mov    bh,0xad
   1400235bc:	jg     0x1400235cc
   1400235be:	rex.RXB (bad) 
   1400235c0:	cld    
   1400235c1:	push   0xfffffffffffffff0
   1400235c3:	jnp    0x1400235d6
   1400235c5:	cmp    eax,0x6382e801
   1400235ca:	add    BYTE PTR [rcx-0x16],bl
   1400235cd:	icebp  
   1400235ce:	cmp    eax,0x7baa710b
   1400235d3:	jo     0x1400235b1
   1400235d5:	fist   DWORD PTR [rbx+0x58bd06b7]
   1400235db:	pop    rbp
   1400235dc:	repz add DWORD PTR [rsi-0x56],ebx
   1400235e0:	pop    rsp
   1400235e1:	mov    bh,BYTE PTR [rbp-0x22]
   1400235e4:	add    eax,DWORD PTR [rdi-0x3]
   1400235e7:	(bad)  
   1400235e8:	pop    rax
   1400235e9:	or     esi,edi
   1400235eb:	push   0xfffffffff120787d
   1400235f0:	xor    DWORD PTR [rbx-0x5c14c33],ecx
   1400235f6:	(bad)  
   1400235f7:	xchg   esp,eax
   1400235f8:	add    DWORD PTR [rdi+0x2b47f6e6],edi
   1400235fe:	cmp    bl,BYTE PTR [rsi+0x7ffed5fd]
   140023604:	call   0x144507695
   140023609:	movabs ds:0xebe562f0aafa54e4,al
   140023612:	cwde   
   140023613:	shr    ch,cl
   140023615:	stos   BYTE PTR es:[rdi],al
   140023616:	test   al,0xcf
   140023618:	stos   DWORD PTR es:[rdi],eax
   140023619:	div    DWORD PTR [rdi]
   14002361b:	(bad)  
   14002361c:	imul   edx,ebp,0x6abd783b
   140023622:	rex.RB (bad) 
   140023624:	popf   
   140023625:	mov    DWORD PTR [rsi+0x134fe095],ecx
   14002362b:	sete   BYTE PTR [rbx-0x7ce2f842]
   140023632:	fild   WORD PTR [rdi]
   140023634:	in     eax,dx
   140023635:	mov    esi,0x94005b3f
   14002363a:	sbb    ch,BYTE PTR [rdi]
   14002363c:	(bad)  
   14002363d:	js     0x14002365c
   14002363f:	movabs ds:0xbf51fbb397a0468b,eax
   140023648:	stos   DWORD PTR es:[rdi],eax
   140023649:	hlt    
   14002364a:	push   rbp
   14002364b:	loope  0x1400235e2
   14002364d:	sub    DWORD PTR [rdi+0x62],0x79
   140023651:	cmc    
   140023652:	push   0xffffffffffffffb4
   140023654:	(bad)  
   140023655:	mov    ebp,0xc1835f11
   14002365a:	lahf   
   14002365b:	xor    al,0x1f
   14002365d:	xchg   esp,eax
   14002365e:	out    0x7e,al
   140023660:	push   0x7e0d5fb3
   140023665:	ret    
   140023666:	(bad)  
   140023667:	(bad)  
   140023668:	sub    ah,BYTE PTR [rsi]
   14002366a:	sub    BYTE PTR [rsi+riz*8],0x97
   14002366e:	std    
   14002366f:	js     0x1400236d3
   140023671:	iret   
   140023672:	rex.X cmp al,0x32
   140023675:	loopne 0x14002366e
   140023677:	xchg   DWORD PTR [rdi-0x4a],edi
   14002367a:	ret    
   14002367b:	mov    bl,0xb
   14002367d:	(bad)  
   14002367e:	push   rdi
   14002367f:	cs ret 
   140023681:	fcmovu st,st(2)
   140023683:	jg     0x140023646
   140023685:	(bad)  
   140023686:	movsxd eax,DWORD PTR [rcx]
   140023688:	or     eax,0xf84a7f06
   14002368d:	jno    0x140023633
   14002368f:	mov    ecx,0x38023eaf
   140023694:	cli    
   140023695:	fidivr DWORD PTR [rdi]
   140023697:	(bad)  
   140023698:	adc    spl,BYTE PTR [rax+0x2]
   14002369c:	enter  0x1b72,0x1b
   1400236a0:	mov    edi,0xebb57bc6
   1400236a5:	push   rcx
   1400236a6:	push   0x2f
   1400236a8:	ror    DWORD PTR [rbx-0x6c1c506b],0xfa
   1400236af:	lea    esi,[rcx-0x53]
   1400236b2:	push   rdi
   1400236b3:	enter  0x4fe0,0x19
   1400236b7:	jg     0x140023691
   1400236b9:	rex.XB or eax,0x6ec37e
   1400236bf:	or     al,ch
   1400236c1:	add    al,0x70
   1400236c3:	or     al,0x98
   1400236c5:	mov    ebx,0x6798b1f3
   1400236ca:	sti    
   1400236cb:	push   rax
   1400236cc:	or     al,0xfe
   1400236ce:	xchg   esp,eax
   1400236cf:	push   rdx
   1400236d0:	iret   
   1400236d1:	lock shl DWORD PTR [rax+0xfc1e187],0x30
   1400236d9:	add    DWORD PTR [rbx+rdx*1],ebx
   1400236dc:	adc    cl,BYTE PTR [rcx]
   1400236de:	(bad)  
   1400236df:	push   rcx
   1400236e0:	rex.RB out 0x1c,eax
   1400236e3:	mov    ch,0x80
   1400236e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400236e6:	(bad)  
   1400236e7:	adc    al,al
   1400236e9:	cmc    
   1400236ea:	jg     0x1400236a7
   1400236ec:	adc    ecx,DWORD PTR [rbx+0x36]
   1400236ef:	mov    esp,0xc947f46d
   1400236f4:	rex.R (bad) 
   1400236f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400236f7:	jbe    0x14002374c
   1400236f9:	pushf  
   1400236fa:	icebp  
   1400236fb:	and    edx,DWORD PTR [rbp-0x72]
   1400236fe:	mov    cl,al
   140023700:	lahf   
   140023701:	(bad)  
   140023702:	mov    edx,DWORD PTR [rdi]
   140023704:	(bad)  
   140023705:	(bad)  
   140023706:	sub    DWORD PTR [rax],eax
   140023708:	(bad)  
   140023709:	xchg   esp,eax
   14002370a:	xchg   ebx,eax
   14002370b:	lods   eax,DWORD PTR ds:[rsi]
   14002370c:	add    eax,0x1bc42cfa
   140023711:	(bad)  
   140023712:	add    BYTE PTR es:[rdx],bh
   140023715:	imul   r12,QWORD PTR [rbp+0x21],0x49
   14002371a:	add    ch,ah
   14002371c:	push   rsi
   14002371d:	ss adc al,0x45
   140023720:	pop    rbp
   140023721:	jne    0x1400236f8
   140023723:	push   rbp
   140023724:	mov    bl,0x97
   140023726:	cs pop rbp
   140023728:	jp     0x14002372f
   14002372a:	add    BYTE PTR [rdi],dl
   14002372c:	add    BYTE PTR [rbx],bh
   14002372e:	xchg   esp,eax
   14002372f:	xchg   ebp,eax
   140023730:	mov    cl,0xc3
   140023732:	adc    eax,DWORD PTR [rcx+0x9814961]
   140023738:	or     BYTE PTR [rsi],0x7b
   14002373b:	mov    edi,0xb43c63ee
   140023740:	repz mov cl,0xe
   140023743:	retf   
   140023744:	imul   ebx,DWORD PTR [rbx+0x2d],0x56
   140023748:	sub    al,0xfc
   14002374a:	cmc    
   14002374b:	rex.XB mov r8d,0x4645f872
   140023751:	push   rdi
   140023752:	(bad)  
   140023753:	and    ecx,DWORD PTR [rcx-0x6e]
   140023756:	sbb    DWORD PTR fs:[rdi],edi
   140023759:	jle    0x140023757
   14002375b:	jg     0x140023719
   14002375d:	icebp  
   14002375e:	(bad)  
   14002375f:	sbb    edi,DWORD PTR [rdi]
   140023761:	(bad)  
   140023762:	nop
   140023763:	pcmpgtw mm3,QWORD PTR [rcx+0x7c]
   140023767:	xor    eax,0x2268409
   14002376c:	rex.XB xchg r10d,eax
   14002376e:	add    BYTE PTR [rbx],dl
   140023770:	add    BYTE PTR [rbp-0x10],dh
   140023773:	pop    rsi
   140023774:	in     eax,dx
   140023775:	jp     0x1400237b3
   140023777:	clc    
   140023778:	jrcxz  0x140023736
   14002377a:	(bad)  
   14002377b:	rex.WB shl BYTE PTR [r14-0x4b],0xe2
   140023780:	mov    ecx,0xf2630f19
   140023785:	(bad)  
   140023787:	lea    ebp,[rsi+0x58b2465e]
   14002378d:	sub    al,0x96
   14002378f:	icebp  
   140023790:	jrcxz  0x140023759
   140023792:	(bad)  
   140023793:	mov    al,0x72
   140023795:	in     eax,0xca
   140023797:	stos   DWORD PTR es:[rdi],eax
   140023798:	add    DWORD PTR [rax-0x4e2fc7ff],edi
   14002379e:	rex.WXB (bad) 
   1400237a0:	pop    rax
   1400237a1:	adc    ah,BYTE PTR [rax-0x25]
   1400237a4:	mov    cs,WORD PTR [rsi-0x3822810e]
   1400237aa:	ror    BYTE PTR [rdi-0x32384240],0x39
   1400237b1:	cmp    al,0x1e
   1400237b3:	(bad)  
   1400237b4:	mov    ch,0x58
   1400237b6:	mov    cl,0x68
   1400237b8:	(bad)  
   1400237b9:	rex.XB add BYTE PTR [r8+0x69bd1fc5],al
   1400237c0:	je     0x1400237d7
   1400237c2:	movabs ds:0x89190d1704a9daea,eax
   1400237cb:	push   rbx
   1400237cc:	jp     0x14002376b
   1400237ce:	sub    BYTE PTR [rsi],0xee
   1400237d1:	(bad)  
   1400237d2:	je     0x140023801
   1400237d4:	in     al,dx
   1400237d5:	mov    WORD PTR [rsi-0x51],fs
   1400237d8:	(bad)  
   1400237d9:	push   rbp
   1400237da:	or     eax,0xbd55d835
   1400237df:	packssdw mm7,QWORD PTR [rsi-0x49e4e703]
   1400237e6:	jge    0x14002380d
   1400237e8:	mov    esp,0x4908aa98
   1400237ed:	xchg   edx,eax
   1400237ee:	sub    al,0x63
   1400237f0:	(bad)  
   1400237f1:	mov    ?,WORD PTR [rbp+0x55aad57f]
   1400237f7:	repnz fdiv DWORD PTR [rcx-0x94609d]
   1400237fe:	mov    cl,0x7
   140023800:	rex.RXB scas al,BYTE PTR es:[rdi]
   140023802:	adc    BYTE PTR [rax+0x3812effd],ah
   140023808:	adc    eax,0x89968c98
   14002380d:	rex.WB (bad) 
   14002380f:	int3   
   140023810:	movabs al,ds:0xffbc305b84df71b3
   140023819:	adc    BYTE PTR [rax-0x5c],bl
   14002381c:	enter  0xdb8d,0xfb
   140023820:	(bad)  
   140023821:	mov    edi,0x358d5515
   140023826:	pop    rax
   140023827:	mov    dl,0xe1
   140023829:	ins    DWORD PTR es:[rdi],dx
   14002382a:	int3   
   14002382b:	jnp    0x140023828
   14002382d:	sbb    esp,ebp
   14002382f:	stos   BYTE PTR es:[rdi],al
   140023830:	ficom  WORD PTR [rdi-0x206c54a]
   140023836:	fsubr  DWORD PTR [r10+rcx*2+0x5d]
   14002383b:	and    al,0x49
   14002383d:	mov    dl,0x8c
   14002383f:	(bad)  
   140023840:	cmp    eax,0xdfb7fefa
   140023845:	jle    0x140023802
   140023847:	in     eax,dx
   140023848:	movabs ds:0x715bd0250c5a2e8b,al
   140023851:	rex.WX xor BYTE PTR fs:[rax+0x17601273],spl
   140023859:	and    BYTE PTR [rdx],0x7a
   14002385c:	mov    edi,0xbaa3e3ee
   140023861:	add    ebp,DWORD PTR [rdx+0x12]
   140023864:	xor    BYTE PTR [rbx+0x77],dl
   140023867:	movabs al,ds:0xac7ccdfade197147
   140023870:	clc    
   140023871:	in     eax,dx
   140023872:	rex.X pushf 
   140023874:	xor    eax,0xc1a8d4e0
   140023879:	scas   eax,DWORD PTR es:[rdi]
   14002387a:	sub    dh,BYTE PTR [rbp+0x17]
   14002387d:	jrcxz  0x140023865
   14002387f:	xor    DWORD PTR [rdi-0x1d],edx
   140023882:	fwait
   140023883:	(bad)  
   140023884:	(bad)  
   140023885:	(bad)  
   140023886:	jge    0x14002389b
   140023888:	outs   dx,BYTE PTR ds:[rsi]
   140023889:	or     ebp,0xdaed9e9a
   14002388f:	data16 rex.WRX jge 0x14002389d
   140023893:	jle    0x140023894
   140023895:	xchg   ecx,eax
   140023896:	xchg   esi,eax
   140023897:	xchg   BYTE PTR [rcx+rcx*2],ah
   14002389a:	(bad)  
   14002389b:	jno    0x140023880
   14002389d:	(bad)  
   14002389e:	cmp    eax,0xeaf57ab8
   1400238a3:	jmp    0x140023845
   1400238a5:	ins    BYTE PTR es:[rdi],dx
   1400238a6:	(bad)  
   1400238a7:	(bad)  
   1400238a8:	jle    0x14002382f
   1400238aa:	rex xlat BYTE PTR ds:[rbx]
   1400238ac:	out    dx,al
   1400238ad:	add    BYTE PTR [rbx],dl
   1400238af:	add    BYTE PTR [rbp+0x65],al
   1400238b2:	mul    BYTE PTR [rax+rsi*1]
   1400238b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400238b6:	xlat   BYTE PTR ds:[rbx]
   1400238b7:	or     eax,edi
   1400238b9:	lock (bad) 
   1400238bb:	(bad)  
   1400238bc:	jno    0x14002389f
   1400238be:	loopne 0x140023933
   1400238c0:	test   edx,ecx
   1400238c2:	cmp    ebp,DWORD PTR [rcx+rdi*1-0x48]
   1400238c6:	out    dx,eax
   1400238c7:	repnz pop rbx
   1400238c9:	mov    al,0xf2
   1400238cb:	(bad)  
   1400238cc:	dec    BYTE PTR [rsi-0x6b3d036e]
   1400238d2:	xlat   BYTE PTR ds:[rbx]
   1400238d3:	outs   dx,DWORD PTR ds:[rsi]
   1400238d4:	(bad)
   1400238d7:	mov    ch,0x92
   1400238d9:	and    ch,0x82
   1400238dc:	or     ebp,DWORD PTR [rsi]
   1400238de:	js     0x1400238a0
   1400238e0:	or     al,0x49
   1400238e2:	or     BYTE PTR [rcx],0x80
   1400238e5:	(bad)  
   1400238e7:	imul   edx,DWORD PTR [rdx],0x38
   1400238ea:	mov    bl,0xff
   1400238ec:	push   rax
   1400238ed:	lods   al,BYTE PTR ds:[rsi]
   1400238ee:	mov    ebp,0x179479e7
   1400238f3:	jne    0x140023942
   1400238f5:	cli    
   1400238f6:	mov    ch,0x46
   1400238f8:	sbb    al,0x7f
   1400238fa:	sbb    bl,dh
   1400238fc:	std    
   1400238fd:	popf   
   1400238fe:	clc    
   1400238ff:	rex.X sub dl,cl
   140023902:	cwde   
   140023903:	cmp    DWORD PTR [rcx],ecx
   140023905:	sbb    BYTE PTR [rbp+0x1b354c00],dl
   14002390b:	mov    ah,BYTE PTR [rdx+0x33]
   14002390e:	pop    rbx
   14002390f:	adc    ch,al
   140023911:	push   rsi
   140023912:	pop    rax
   140023913:	mov    dl,BYTE PTR [rdi+0x66]
   140023916:	std    
   140023917:	(bad)  
   140023918:	fmul   st(6),st
   14002391a:	mov    esp,0xe0e6bd94
   14002391f:	sahf   
   140023920:	(bad)  
   140023921:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023922:	lods   eax,DWORD PTR ds:[rsi]
   140023923:	mov    esi,0x46024d66
   140023928:	(bad)  
   140023929:	add    dh,BYTE PTR [rdx]
   14002392b:	clc    
   14002392c:	xor    ecx,DWORD PTR [rcx+rbx*4-0x44e0f9fa]
   140023933:	neg    BYTE PTR [rsi+0x74]
   140023936:	sub    DWORD PTR [rax+0x4094236f],ecx
   14002393c:	xor    BYTE PTR [rax-0x3d4024f3],al
   140023942:	mov    es,WORD PTR [rbx+0x40fe07b]
   140023948:	shr    BYTE PTR [rbp+0x1c460ba8],1
   14002394e:	jg     0x14002396a
   140023950:	pop    rsp
   140023951:	cmp    DWORD PTR [rsi+0x5d],ecx
   140023954:	(bad)  
   140023955:	fisttp WORD PTR [rdx+0x78039f65]
   14002395b:	or     cl,BYTE PTR [rdi+0x2c]
   14002395e:	cwde   
   14002395f:	shl    DWORD PTR [rcx+0x60],1
   140023962:	mov    al,0x3d
   140023964:	or     DWORD PTR [rax-0x34],esp
   140023967:	cwde   
   140023968:	xor    edx,ebp
   14002396a:	(bad)  
   14002396b:	add    ebp,ebx
   14002396d:	(bad)  
   14002396e:	(bad)  
   14002396f:	lea    ecx,[rax+0x0]
   140023972:	movabs eax,ds:0x9c63f7436f33a273
   14002397b:	sbb    DWORD PTR [rdx+0x437ef0c0],edx
   140023981:	xor    cl,ah
   140023983:	mov    ah,0xb1
   140023985:	xor    DWORD PTR [rdi-0x61cd34d9],ebx
   14002398b:	stc    
   14002398c:	loopne 0x1400239c3
   14002398e:	cmp    al,0xf0
   140023990:	ficom  DWORD PTR [rbx]
   140023992:	fcomp  DWORD PTR [rdi-0x29]
   140023995:	jno    0x140023938
   140023997:	push   rsp
   140023998:	push   rdi
   140023999:	mov    ss,WORD PTR [rbx]
   14002399b:	(bad)  
   14002399c:	(bad)  
   14002399d:	mov    ecx,0xb84cf71a
   1400239a2:	sbb    DWORD PTR [rcx-0x72],edi
   1400239a5:	fcomp  QWORD PTR [rax+0x662a95af]
   1400239ab:	rex.WXB add dil,BYTE PTR [r10+0x76]
   1400239af:	add    edx,eax
   1400239b1:	outs   dx,DWORD PTR ds:[rsi]
   1400239b2:	test   BYTE PTR [rax],cl
   1400239b4:	rex mov ecx,0x8c329a4f
   1400239ba:	rcr    ebp,1
   1400239bc:	sbb    ebx,0xf3175dc6
   1400239c2:	cmp    DWORD PTR [rcx+0x39],eax
   1400239c5:	mov    BYTE PTR [rbx-0x2cff8661],bl
   1400239cb:	lahf   
   1400239cc:	mov    esi,0x7e0a8ef
   1400239d1:	adc    BYTE PTR [rsi],0x5f
   1400239d4:	sub    edi,esi
   1400239d6:	mov    dl,0x62
   1400239d8:	adc    esi,eax
   1400239da:	std    
   1400239db:	jns    0x1400239e7
   1400239dd:	push   0xffffffffffffff9b
   1400239df:	(bad)
   1400239e2:	adc    esp,DWORD PTR [rcx-0x5a]
   1400239e5:	out    dx,al
   1400239e6:	sbb    BYTE PTR [rsi],0x97
   1400239e9:	sbb    dl,ah
   1400239eb:	div    DWORD PTR [rax+0x69029940]
   1400239f1:	xchg   DWORD PTR [rdx],esi
   1400239f3:	sbb    eax,0x13a005d2
   1400239f8:	and    BYTE PTR [rdx],0x28
   1400239fb:	push   rbx
   1400239fc:	and    al,0x73
   1400239fe:	shl    DWORD PTR [rcx-0x7a],1
   140023a01:	xchg   esp,eax
   140023a02:	and    eax,0x2f193cac
   140023a07:	hlt    
   140023a08:	call   rdx
   140023a0a:	ss ja  0x1400239fb
   140023a0d:	fsubr  st(1),st
   140023a0f:	ja     0x1400239ef
   140023a11:	jns    0x1400239fa
   140023a13:	cmc    
   140023a14:	(bad)  
   140023a15:	mov    esp,ebp
   140023a17:	lock mov DWORD PTR [rax+rdx*1],esp
   140023a1b:	or     al,0xe0
   140023a1d:	mov    BYTE PTR [rip+0x12ddc777],0x88        # 0x152e0019b
   140023a24:	mov    ch,0x6
   140023a26:	pop    rdi
   140023a27:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023a28:	jmp    0x140023a87
   140023a2a:	jb     0x140023a6f
   140023a2c:	(bad)  
   140023a2d:	fistp  WORD PTR [rbp-0x4]
   140023a30:	mov    bl,0xd3
   140023a32:	cmp    dh,BYTE PTR [rsp+rax*1-0x1a69c000]
   140023a39:	loopne 0x140023a15
   140023a3b:	mov    ch,0x6b
   140023a3d:	(bad)  
   140023a3e:	push   0xffffffffa034096f
   140023a43:	movsxd ecx,DWORD PTR [rbx+0x20]
   140023a46:	in     eax,0x77
   140023a48:	adc    ebp,edx
   140023a4a:	fld    QWORD PTR [rip+0xffffffffda2fbd08]        # 0x11a31f758
   140023a50:	pcmpgtw mm4,QWORD PTR [rsi]
   140023a53:	xchg   esp,eax
   140023a54:	add    eax,0x9c04b4a
   140023a59:	and    eax,0x3d656839
   140023a5e:	xor    cl,BYTE PTR [rsi-0x8]
   140023a61:	sub    r10,QWORD PTR [r10]
   140023a64:	xchg   esp,eax
   140023a65:	rex.R outs dx,BYTE PTR ds:[rsi]
   140023a67:	mov    ebp,0xd6bbaeeb
   140023a6c:	fisubr DWORD PTR [rsi+rsi*1-0x1]
   140023a70:	in     eax,dx
   140023a71:	mov    bh,0xdf
   140023a73:	jle    0x140023a18
   140023a75:	(bad)  
   140023a76:	add    al,0xcc
   140023a78:	ds pop rcx
   140023a7a:	enter  0xcc4c,0xd0
   140023a7e:	sbb    eax,0x840123d0
   140023a83:	push   rsi
   140023a84:	ss mov ah,0xef
   140023a87:	out    dx,eax
   140023a88:	xchg   DWORD PTR [rdx+0x23849a46],esi
   140023a8e:	fld    QWORD PTR [rcx-0x675a4410]
   140023a94:	add    ah,cl
   140023a96:	rex.XB
   140023a97:	mov    DWORD PTR [rax+r12*2],0xedfde003
   140023a9f:	outs   dx,DWORD PTR ds:[rsi]
   140023aa0:	jg     0x140023a5d
   140023aa2:	fisub  DWORD PTR [rdx-0x4f]
   140023aa5:	add    al,0x67
   140023aa7:	iret   
   140023aa8:	sahf   
   140023aa9:	cmp    eax,0x71204995
   140023aae:	rex.RX (bad) 
   140023ab0:	add    DWORD PTR [rbx-0x7f95ffa5],esp
   140023ab6:	stos   DWORD PTR es:[rdi],eax
   140023ab7:	push   QWORD PTR [rsi+0x5223fb6]
   140023abd:	(bad)  
   140023abe:	adc    eax,DWORD PTR [rdx+0x133471]
   140023ac4:	add    bh,bl
   140023ac6:	sbb    eax,0x4ab1dc77
   140023acb:	xchg   edx,eax
   140023acc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023acd:	loopne 0x140023a7b
   140023acf:	pop    rcx
   140023ad0:	mov    bl,0xa6
   140023ad2:	xor    ecx,DWORD PTR [rcx]
   140023ad4:	and    al,0xce
   140023ad6:	enter  0xa024,0x57
   140023ada:	rex test DWORD PTR [rsi],ecx
   140023add:	(bad)  
   140023ade:	test   al,0x63
   140023ae0:	add    edx,ebp
   140023ae2:	js     0x140023a64
   140023ae4:	lods   eax,DWORD PTR ds:[rsi]
   140023ae5:	std    
   140023ae6:	movabs eax,ds:0x6a07534af734ccfe
   140023aef:	lock stos DWORD PTR es:[rdi],eax
   140023af1:	(bad)  
   140023af2:	jg     0x140023b2a
   140023af4:	sub    bh,bh
   140023af6:	jg     0x140023b46
   140023af8:	sub    bl,ah
   140023afa:	cmp    DWORD PTR [rip+0x1bcde6f3],eax        # 0x15bd021f3
   140023b00:	jae    0x140023add
   140023b02:	ins    DWORD PTR es:[rdi],dx
   140023b03:	mov    bh,0xcd
   140023b05:	rex.W
   140023b06:	rex.WR and BYTE PTR fs:[rsp+rcx*1+0x20],r15b
   140023b0c:	pop    rdx
   140023b0d:	lahf   
   140023b0e:	sbb    DWORD PTR [rax],eax
   140023b10:	ficomp WORD PTR [rsi-0x9]
   140023b13:	add    BYTE PTR [rsi+0x1a],cl
   140023b16:	fsubr  QWORD PTR [rbx]
   140023b18:	loop   0x140023b09
   140023b1a:	add    DWORD PTR [rcx+0x19],0xffffff83
   140023b1e:	cli    
   140023b1f:	fmul   QWORD PTR [rsi+riz*8-0xaedd09a]
   140023b26:	jmp    0xee863ae2
   140023b2b:	test   DWORD PTR gs:[rcx-0x61],edx
   140023b2f:	adc    ebp,DWORD PTR [rbx+0x6230c97e]
   140023b35:	rex.WR
   140023b36:	rex scas eax,DWORD PTR es:[rdi]
   140023b38:	(bad)  
   140023b39:	sbb    BYTE PTR [rdx-0x78402b57],0xde
   140023b40:	xchg   BYTE PTR [rbp-0x10bdf88a],ah
   140023b46:	(bad)  
   140023b47:	ss hlt 
   140023b49:	(bad)  
   140023b4a:	imul   edx,edx,0x2c009a14
   140023b50:	push   rax
   140023b51:	(bad)  
   140023b52:	fisttp WORD PTR [rsi-0x18521a70]
   140023b58:	int3   
   140023b59:	cdq    
   140023b5a:	mov    bl,0xa
   140023b5c:	add    BYTE PTR [rdx-0x6d],al
   140023b5f:	stos   BYTE PTR es:[rdi],al
   140023b61:	pop    rbx
   140023b62:	add    al,BYTE PTR [rip+0x7f515c9d]        # 0x1bf539805
   140023b68:	(bad)  
   140023b6a:	(bad)  
   140023b6b:	sub    dl,BYTE PTR [rsp+rdi*8]
   140023b6e:	add    BYTE PTR [rax-0x673e388d],dh
   140023b74:	or     DWORD PTR [rax],esp
   140023b76:	popf   
   140023b77:	mov    WORD PTR [rax+0x9],gs
   140023b7a:	call   0xed0a4158
   140023b7f:	pop    rsp
   140023b80:	push   0xfffffffff940b2f6
   140023b85:	add    bl,BYTE PTR [rcx]
   140023b87:	mov    esi,0x14450238
   140023b8c:	fiadd  WORD PTR [rdx-0x21a6bf4d]
   140023b92:	fimul  DWORD PTR [rsi-0x18521a50]
   140023b98:	int3   
   140023b99:	cdq    
   140023b9a:	cs pause 
   140023b9d:	mov    esi,0x12b1024
   140023ba2:	xor    al,0xd4
   140023ba4:	mov    bh,0x8
   140023ba6:	mov    edi,0x27a35376
   140023bab:	in     eax,dx
   140023bac:	(bad)  
   140023bad:	xor    dl,BYTE PTR [rsi]
   140023baf:	mov    ebp,0x13518093
   140023bb4:	adc    esp,0xd6d53f
   140023bba:	iret   
   140023bbb:	cli    
   140023bbc:	out    0x16,al
   140023bbe:	cli    
   140023bbf:	jg     0x140023b64
   140023bc1:	es adc eax,0xd7422d8d
   140023bc8:	mov    dh,0x47
   140023bca:	cmp    dl,BYTE PTR [rbx+0x7d2f2b80]
   140023bd0:	mov    bl,0xf7
   140023bd2:	(bad)  
   140023bd3:	fwait
   140023bd4:	pop    rbx
   140023bd5:	sar    DWORD PTR [rax+0x8],cl
   140023bd8:	jrcxz  0x140023b81
   140023bda:	adc    dh,BYTE PTR [eax]
   140023bdd:	(bad)  
   140023bde:	adc    BYTE PTR [rax-0x15],dl
   140023be1:	addr32 in al,dx
   140023be3:	repz addr32 xchg al,dl
   140023be7:	add    DWORD PTR [rax-0x53],0x9ed2aced
   140023bee:	add    al,0x9a
   140023bf0:	fwait
   140023bf1:	cmp    al,0xe8
   140023bf3:	push   rsp
   140023bf4:	sbb    BYTE PTR [rcx-0x2],bh
   140023bf7:	mov    edi,0xfc2ed733
   140023bfc:	loope  0x140023b9a
   140023bfe:	mov    ecx,0xc81dba39
   140023c03:	pop    rax
   140023c04:	hlt    
   140023c05:	rex.WX add spl,BYTE PTR [rsi-0x48]
   140023c09:	sbb    DWORD PTR [rax],ebp
   140023c0b:	hlt    
   140023c0c:	retf   0xd680
   140023c0f:	cli    
   140023c10:	jmp    0x151e9d491
   140023c15:	or     BYTE PTR [rcx-0x8],bh
   140023c18:	movabs eax,ds:0xb2856abeb7420374
   140023c21:	add    DWORD PTR [rsi+0x23],esp
   140023c24:	cmp    dl,0x39
   140023c27:	jae    0x140023c0f
   140023c29:	mov    esp,0x8fe3f8fb
   140023c2e:	(bad)  
   140023c2f:	adc    eax,0x8f0f060c
   140023c34:	stc    
   140023c35:	and    al,0x3b
   140023c37:	movsxd esi,DWORD PTR [rax-0x15c64952]
   140023c3d:	out    dx,eax
   140023c3e:	(bad)  [rsi+0x17]
   140023c41:	sub    al,0x16
   140023c43:	mov    cl,0x73
   140023c45:	mov    bl,bl
   140023c47:	lods   eax,DWORD PTR ds:[rsi]
   140023c48:	fist   WORD PTR [rax+riz*8+0x6331e878]
   140023c4f:	shr    BYTE PTR [rdi+rsi*1],1
   140023c52:	add    ecx,DWORD PTR [rcx+0x1a]
   140023c55:	(bad)  
   140023c56:	and    esi,ebx
   140023c58:	or     cl,BYTE PTR [rdi-0x20]
   140023c5b:	mov    dl,0xc6
   140023c5d:	out    dx,eax
   140023c5e:	add    ah,al
   140023c60:	outs   dx,BYTE PTR ds:[rsi]
   140023c61:	or     DWORD PTR [rdx+rbp*4],esp
   140023c64:	ds rex.RX (bad) 
   140023c67:	(bad)  
   140023c68:	(bad)  
   140023c69:	(bad)  
   140023c6a:	rex.XB xlat BYTE PTR ds:[rbx]
   140023c6c:	mov    dl,0x42
   140023c6e:	in     al,dx
   140023c6f:	scas   eax,DWORD PTR es:[rdi]
   140023c70:	test   al,0x4d
   140023c72:	clc    
   140023c73:	mov    ch,0x7b
   140023c75:	imul   DWORD PTR [rcx]
   140023c77:	(bad)  
   140023c78:	jmp    0x11d32026d
   140023c7d:	sub    eax,0x7acb301
   140023c82:	and    bl,dh
   140023c84:	xchg   ecx,eax
   140023c85:	jno    0x140023c16
   140023c87:	rcl    BYTE PTR [rsi-0x7f],1
   140023c8a:	mov    edx,0xfdb79dff
   140023c8f:	movabs eax,ds:0x93e4f025b87b88ee
   140023c98:	rex.WRXB (bad) 
   140023c9a:	movq   mm1,QWORD PTR [rcx]
   140023c9d:	sub    al,0xfc
   140023c9f:	jne    0x140023c83
   140023ca1:	rex.WB (bad) 
   140023ca3:	out    dx,eax
   140023ca4:	out    dx,al
   140023ca5:	(bad)  
   140023ca6:	cwde   
   140023ca7:	iret   
   140023ca8:	cmp    ecx,esp
   140023caa:	in     al,0x9e
   140023cac:	or     DWORD PTR [rdi+0x3e49716e],edi
   140023cb2:	retf   0x947b
   140023cb5:	and    al,0x5c
   140023cb7:	rex.WRX cmovns r14,QWORD PTR [rsi+0x4b32a204]
   140023cbf:	add    ah,BYTE PTR [rax+0x7dd5a1cc]
   140023cc5:	mov    ebx,DWORD PTR [rcx-0x633199fc]
   140023ccb:	stc    
   140023ccc:	rex.WRX js 0x140023d46
   140023ccf:	rex
   140023cd0:	sbb    DWORD PTR fs:[rsi-0x74916073],ebp
   140023cd7:	stc    
   140023cd8:	pushf  
   140023cd9:	adc    edi,esp
   140023cdb:	lahf   
   140023cdc:	pushf  
   140023cdd:	lock jmp 0x140023c6e
   140023ce0:	mov    esi,0x87ce8870
   140023ce5:	xor    DWORD PTR [rcx],esi
   140023ce7:	rex.WB and al,0x81
   140023cea:	test   al,0x89
   140023cec:	or     BYTE PTR [rcx],0x80
   140023cef:	rex.R and al,0x9a
   140023cf2:	add    al,0x9a
   140023cf4:	adc    BYTE PTR [rcx+0x4c],ah
   140023cf7:	and    BYTE PTR [rcx-0x61],dl
   140023cfa:	outs   dx,DWORD PTR ds:[rsi]
   140023cfb:	clc    
   140023cfc:	and    esi,esp
   140023cfe:	jae    0x140023d2e
   140023d00:	mov    edi,0xe5e42cf2
   140023d05:	cmp    edx,esp
   140023d07:	jle    0x140023d56
   140023d09:	xchg   r10,rax
   140023d0b:	jo     0x140023d02
   140023d0d:	xchg   esp,eax
   140023d0e:	push   rcx
   140023d0f:	(bad)  
   140023d10:	sbb    al,0xc9
   140023d12:	add    al,0x44
   140023d14:	rex.WXB add bpl,BYTE PTR [r11-0x2a]
   140023d18:	lods   al,BYTE PTR ds:[rsi]
   140023d19:	mov    ecx,0x1c96470e
   140023d1e:	push   rdi
   140023d1f:	rcr    DWORD PTR [esi],cl
   140023d22:	jle    0x140023d7e
   140023d24:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023d25:	xlat   BYTE PTR ds:[rbx]
   140023d26:	add    ah,BYTE PTR fs:[rax]
   140023d29:	push   rcx
   140023d2a:	icebp  
   140023d2b:	add    DWORD PTR es:[rbp+0x60],esi
   140023d2f:	lock jo 0x140023d44
   140023d32:	or     bh,ch
   140023d34:	(bad)  
   140023d35:	and    al,0xe2
   140023d37:	fwait
   140023d38:	int    0xbb
   140023d3a:	push   rcx
   140023d3b:	pop    rdi
   140023d3c:	(bad)  
   140023d3d:	jge    0x140023d5f
   140023d3f:	mov    al,0xb8
   140023d41:	and    al,0x1f
   140023d43:	ja     0x140023d21
   140023d45:	cmp    eax,0x9cd7ee31
   140023d4a:	je     0x140023d29
   140023d4c:	jns    0x140023d86
   140023d4e:	jne    0x140023da8
   140023d50:	pop    rdi
   140023d51:	movsxd ecx,DWORD PTR [rdi+0x2c569c66]
   140023d57:	sti    
   140023d58:	sbb    al,0xb3
   140023d5a:	addr32 int3 
   140023d5c:	(bad)  
   140023d5d:	sub    cl,BYTE PTR [rcx]
   140023d5f:	mov    WORD PTR [rdx],ds
   140023d61:	xor    eax,0x56abf7ea
   140023d66:	lods   eax,DWORD PTR ds:[rsi]
   140023d67:	(bad)  
   140023d68:	add    al,0x20
   140023d6a:	nop    DWORD PTR [rdi]
   140023d6d:	(bad)  
   140023d6e:	(bad)  
   140023d6f:	or     eax,DWORD PTR [rax+0x249e26d2]
   140023d75:	movabs al,ds:0x73399812dc381d5e
   140023d7e:	out    0x4a,al
   140023d80:	rcl    DWORD PTR [rsi-0x7fd24080],1
   140023d86:	(bad)  
   140023d87:	pop    rsi
   140023d88:	fst    QWORD PTR [rax]
   140023d8a:	repz jns 0x140023dc4
   140023d8d:	(bad)  
   140023d8e:	sbb    BYTE PTR [rbx+0x1f9ca66b],cl
   140023d94:	repz jns 0x140023d7e
   140023d97:	(bad)  
   140023d98:	sbb    DWORD PTR [rdi+rbx*8-0x1736cbc1],ecx
   140023d9f:	jrcxz  0x140023d39
   140023da1:	nop
   140023da2:	(bad)  
   140023da3:	pop    rdi
   140023da4:	call   QWORD PTR [rbx+rbp*1+0x9]
   140023da8:	pop    rax
   140023da9:	rex.RXB (bad) 
   140023dab:	(bad)  
   140023dac:	std    
   140023dad:	(bad)  
   140023dae:	cmc    
   140023daf:	jmp    0x140023d88
   140023db1:	pop    rdi
   140023db2:	or     DWORD PTR [rbp-0x7e],esp
   140023db5:	push   rsi
   140023db6:	pop    rsp
   140023db7:	push   rdi
   140023db8:	add    eax,0x59280098
   140023dbd:	icebp  
   140023dbe:	es xor eax,0x479ac0ee
   140023dc5:	(bad)  
   140023dc6:	jge    0x140023e3c
   140023dc8:	or     eax,0xebfc2e1b
   140023dce:	mov    ebx,0x5ec5b7f0
   140023dd3:	rex.WR (bad) 
   140023dd5:	(bad)  
   140023dd6:	jg     0x140023d91
   140023dd8:	(bad)  
   140023dd9:	(bad)  
   140023dda:	cmp    al,0x3e
   140023ddc:	add    eax,0x5e8fdde5
   140023de1:	cmp    ch,BYTE PTR [rdi+rbp*1]
   140023de4:	fisttp WORD PTR [rcx+0x1133dcdf]
   140023dea:	mov    ebx,DWORD PTR [rsi-0x48]
   140023ded:	or     eax,0xae79a74e
   140023df2:	inc    edi
   140023df4:	sub    ebx,DWORD PTR [rax]
   140023df6:	cmp    al,0x7a
   140023df8:	jo     0x140023e59
   140023dfa:	xchg   edx,eax
   140023dfb:	and    al,0xc8
   140023dfd:	mov    dl,0xac
   140023dff:	scas   al,BYTE PTR es:[rdi]
   140023e00:	test   eax,0x880dda11
   140023e05:	fmul   DWORD PTR [rdx]
   140023e07:	loopne 0x140023dad
   140023e09:	sbb    ecx,DWORD PTR [rdx+0x15]
   140023e0c:	lods   eax,DWORD PTR ds:[rsi]
   140023e0d:	fld    DWORD PTR [rdx+0x765f0dea]
   140023e13:	sub    BYTE PTR [rbp+0x53],bh
   140023e16:	cmc    
   140023e17:	(bad)  
   140023e18:	movabs eax,ds:0xfcb2ca94c18b283c
   140023e21:	(bad)  
   140023e22:	rcl    BYTE PTR [rdi],1
   140023e24:	mov    edi,esi
   140023e26:	data16 fwait
   140023e28:	(bad)  
   140023e29:	out    0x4e,al
   140023e2b:	(bad)  
   140023e2c:	xchg   esp,eax
   140023e2d:	imul   esp,DWORD PTR [rbx-0x1e],0x28306e7a
   140023e34:	movsxd edx,ebx
   140023e36:	(bad)  [eax+0x3c15676b]
   140023e3d:	sub    eax,0x59e8f43e
   140023e42:	(bad)  
   140023e43:	xor    ecx,edi
   140023e45:	cmp    eax,0xd3f0285e
   140023e4a:	jns    0x140023e7f
   140023e4c:	push   rax
   140023e4d:	mov    esp,0x67e5fc6
   140023e52:	(bad)  
   140023e53:	jge    0x140023ebf
   140023e55:	pop    rdx
   140023e56:	xchg   DWORD PTR [rbx+0x60c18286],ebx
   140023e5c:	jo     0x140023e47
   140023e5e:	shl    BYTE PTR [rbp+0x15c575ff],cl
   140023e64:	push   rdi
   140023e65:	cld    
   140023e66:	adc    eax,DWORD PTR [rax+0x2d]
   140023e69:	xchg   esp,eax
   140023e6a:	fs jmp 0x140023e30
   140023e6d:	xchg   ecx,eax
   140023e6e:	fstp   DWORD PTR [rdx+0x16b97e1]
   140023e74:	jo     0x140023edd
   140023e76:	and    BYTE PTR [rdx-0x63],cl
   140023e79:	lock jmp 0x140023e4a
   140023e7c:	loope  0x140023e4b
   140023e7e:	sti    
   140023e7f:	lock (bad) 
   140023e81:	nop
   140023e82:	add    esp,DWORD PTR [rbp-0x6e1bdf9b]
   140023e88:	(bad)  
   140023e89:	pop    rdi
   140023e8a:	(bad)
   140023e8d:	adc    eax,0xffffffb7
   140023e90:	pop    rdi
   140023e91:	pop    rcx
   140023e92:	int3   
   140023e93:	out    0x5a,eax
   140023e95:	sub    al,0x12
   140023e97:	rex.WRX sbb r15,QWORD PTR [rsi]
   140023e9a:	add    BYTE PTR [rdi-0xaefe0f3],ah
   140023ea0:	jns    0x140023ecf
   140023ea2:	sub    eax,0xf15cb85e
   140023ea7:	nop    DWORD PTR [rdx]
   140023eaa:	loope  0x140023e3e
   140023eac:	retf   
   140023ead:	rex.WRX (bad) 
   140023eaf:	sub    bh,al
   140023eb1:	gs pop rcx
   140023eb3:	(bad)  
   140023eb4:	mov    esi,0xf34bd2f4
   140023eb9:	es rex.WRXB sahf 
   140023ebc:	mov    esp,0xabd04a1c
   140023ec1:	inc    DWORD PTR [rdi]
   140023ec3:	xor    DWORD PTR [rdi-0x10],ecx
   140023ec6:	in     al,dx
   140023ec7:	add    dl,BYTE PTR [rax+0x2a]
   140023eca:	rex.RB jmp 0x140023edb
   140023ecd:	test   bh,cl
   140023ecf:	sbb    dh,ah
   140023ed1:	and    cl,BYTE PTR [rcx-0x6464decb]
   140023ed7:	mov    ebp,0xe3f271b8
   140023edc:	cmp    BYTE PTR [rbp+rbx*8-0x68],dl
   140023ee0:	xchg   edx,eax
   140023ee1:	mov    al,BYTE PTR [rdi]
   140023ee3:	xor    DWORD PTR [rdx],0x66
   140023ee6:	iret   
   140023ee7:	adc    dl,ch
   140023ee9:	xchg   ecx,eax
   140023eea:	call   0x18ecdd1d5
   140023eef:	(bad)  
   140023ef0:	jrcxz  0x140023ee5
   140023ef2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023ef3:	xchg   DWORD PTR [rdi-0x60981a07],ebx
   140023ef9:	jge    0x140023ef1
   140023efb:	jmp    QWORD PTR [rsi]
   140023efd:	rex.WRXB sahf 
   140023eff:	cld    
   140023f00:	es xchg esp,eax
   140023f02:	jrcxz  0x140023f1e
   140023f04:	add    dl,BYTE PTR [rbx]
   140023f07:	(bad)  
   140023f08:	cwde   
   140023f09:	add    BYTE PTR [rax],ch
   140023f0b:	(bad)  
   140023f0c:	mov    ah,0x66
   140023f0e:	or     DWORD PTR [rsi-0x1e0afeda],eax
   140023f14:	imul   edi,edi,0xffffff99
   140023f17:	mov    al,0x1d
   140023f19:	fisttp DWORD PTR [rsi]
   140023f1b:	(bad)  
   140023f1c:	ret    0x7b8
   140023f1f:	mov    cl,0xf3
   140023f21:	mov    DWORD PTR [rbx+0x20cbcc9],0xbcee2081
   140023f2b:	in     eax,dx
   140023f2c:	imul   ebp,DWORD PTR [rsp+rbx*2+0x43e0c9be],0xe0a45917
   140023f37:	pop    rdi
   140023f38:	mov    ah,0x68
   140023f3a:	rcl    DWORD PTR [rbx+0x53],1
   140023f3d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023f3e:	rex.WR pop rcx
   140023f40:	(bad)  
   140023f41:	mov    WORD PTR gs:[rip+0x1c3f9366],fs        # 0x15c41d2ae
   140023f48:	adc    eax,DWORD PTR [rax]
   140023f4a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023f4b:	rex.XB push 0xffffffff8fbf0812
   140023f51:	rex
   140023f52:	rex.WRB add al,0x7e
   140023f55:	and    al,0x99
   140023f57:	add    BYTE PTR [rax],al
   140023f59:	(bad)  
   140023f5a:	test   esi,0xc9795c2a
   140023f60:	pop    rsp
   140023f61:	jl     0x140023f15
   140023f63:	(bad)  
   140023f64:	jnp    0x140023f07
   140023f66:	repnz sti 
   140023f68:	sub    ebp,DWORD PTR [rdx+0x31]
   140023f6b:	imul   eax,edx,0xe2f258c3
   140023f71:	jp     0x140023f16
   140023f73:	(bad)  
   140023f74:	pop    rcx
   140023f75:	rex.R xchg ecx,eax
   140023f77:	(bad)  
   140023f78:	jg     0x140023f3b
   140023f7a:	(bad)  
   140023f7b:	add    eax,0x9b4da60b
   140023f80:	mov    dh,0x2
   140023f82:	retf   0xaac0
   140023f85:	(bad)  
   140023f86:	retf   0xd71
   140023f89:	rex.WRXB add BYTE PTR [r9],r11b
   140023f8c:	xor    DWORD PTR [rip+0xfffffffff84fb298],edx        # 0x13851f22a
   140023f92:	std    
   140023f93:	add    ecx,esp
   140023f95:	(bad)  
   140023f96:	jp     0x140023f41
   140023f98:	pop    rdi
   140023f99:	(bad)  
   140023f9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023f9b:	sbb    eax,0x55c7acac
   140023fa0:	xchg   edi,eax
   140023fa1:	cmp    eax,0xff53998c
   140023fa6:	xchg   BYTE PTR [rdx-0x6a8eca83],cl
   140023fac:	imul   ebp,DWORD PTR [rax+rsi*8-0x20],0x85bde77f
   140023fb4:	shl    DWORD PTR [rdi-0x23],1
   140023fb7:	or     DWORD PTR [rip+0xfffffffffa356d1f],0x58        # 0x13a37acdd
   140023fbe:	rex.RB adc al,0x29
   140023fc1:	clc    
   140023fc2:	out    0xcf,eax
   140023fc4:	lahf   
   140023fc5:	mov    edi,0x198cc660
   140023fca:	retf   
   140023fcb:	movabs eax,ds:0xb6a54ba502d412ac
   140023fd4:	scas   al,BYTE PTR es:[rdi]
   140023fd5:	(bad)  
   140023fd6:	sbb    esi,DWORD PTR fs:[rbx-0x4b]
   140023fda:	and    BYTE PTR [rsi],cl
   140023fdc:	add    dl,BYTE PTR [rdx+0x3a]
   140023fdf:	(bad)
   140023fe2:	sub    DWORD PTR [rcx+0x0],ecx
   140023fe5:	xor    BYTE PTR [rdx-0x284d37f7],0x36
   140023fec:	(bad)  
   140023fed:	stc    
   140023fee:	sbb    ebx,DWORD PTR [rdi+0x733f4e1]
   140023ff4:	loopne 0x140023f9d
   140023ff6:	xchg   edi,eax
   140023ff7:	(bad)  
   140023ff8:	ret    
   140023ff9:	sub    DWORD PTR [rbx-0x5],eax
   140023ffc:	movabs al,ds:0xcf8274bb4a11795b
   140024005:	out    0xc7,eax
   140024007:	cmp    ebp,0xabe6f8b5
   14002400d:	pop    rbp
   14002400e:	js     0x14002407f
   140024010:	int    0x66
   140024012:	lods   al,BYTE PTR ds:[rsi]
   140024013:	jl     0x140024080
   140024015:	adc    ebx,DWORD PTR [rdx+0x5a]
   140024018:	(bad)  
   140024019:	push   rsi
   14002401a:	(bad)  
   14002401b:	ror    BYTE PTR [rbx-0x6c],cl
   14002401e:	loopne 0x14002407f
   140024020:	js     0x140023ff5
   140024022:	rex.WRB (bad) 
   140024024:	lods   eax,DWORD PTR ds:[rsi]
   140024025:	adc    BYTE PTR [rdx],0xfc
   140024028:	int    0x50
   14002402a:	(bad)  
   14002402b:	(bad)  
   14002402c:	(bad)  
   14002402d:	cwde   
   14002402e:	mov    bl,dl
   140024030:	mov    dl,0x8a
   140024032:	imul   ecx,ecx,0x30
   140024035:	pop    rsi
   140024036:	(bad)  
   140024037:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024038:	je     0x140024045
   14002403a:	sbb    eax,0x1941b7fd
   14002403f:	std    
   140024040:	iret   
   140024041:	test   DWORD PTR [rdx],esi
   140024043:	ja     0x140024002
   140024045:	pop    rsp
   140024046:	xchg   esi,eax
   140024047:	in     eax,0x75
   140024049:	movabs eax,ds:0x1188333665c3364f
   140024052:	cld    
   140024053:	retf   
   140024054:	add    esp,edx
   140024056:	rex.XB imul edi,r10d,0x742009ab
   14002405d:	(bad)  
   14002405e:	xor    eax,0xa896b174
   140024063:	or     DWORD PTR [rax+0x232005d],eax
   140024069:	(bad)  
   14002406a:	xchg   DWORD PTR [rbp+0xfe0c122],ecx
   140024070:	or     eax,0x31f0fc
   140024075:	push   rbp
   140024076:	(bad)
   14002407a:	rex jp 0x1400240c7
   14002407d:	stc    
   14002407e:	(bad)  
   14002407f:	fldenv ss:[rsi]
   140024082:	and    eax,0x6991c16f
   140024088:	(bad)  
   140024089:	xchg   ecx,eax
   14002408a:	(bad)  
   14002408b:	cld    
   14002408c:	sbb    al,0x4
   14002408e:	and    al,0xca
   140024090:	adc    al,0x9
   140024092:	(bad)  
   140024093:	jg     0x140024041
   140024095:	data16 jg 0x1400240f4
   140024098:	or     DWORD PTR [rsi+0x6e940063],edx
   14002409e:	pop    rdx
   14002409f:	xor    eax,DWORD PTR [rax]
   1400240a1:	popf   
   1400240a2:	push   rax
   1400240a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400240a4:	add    dh,BYTE PTR [rdi-0x6d]
   1400240a7:	gs stc 
   1400240a9:	add    esp,DWORD PTR [rbx-0xeb167d5]
   1400240af:	mov    gs,WORD PTR [rcx+0x24]
   1400240b2:	adc    esp,edi
   1400240b4:	movabs eax,ds:0x16c015ef09ff23
   1400240bd:	sbb    DWORD PTR [rbp+0x4676805d],eax
   1400240c3:	add    eax,0x4004c03f
   1400240c8:	cli    
   1400240c9:	or     ebx,DWORD PTR [rdi+0x334c7821]
   1400240cf:	xor    bh,al
   1400240d1:	add    DWORD PTR [rsi],esp
   1400240d3:	add    dl,dl
   1400240d5:	rex.WRXB clc 
   1400240d7:	(bad)  
   1400240d8:	push   rsp
   1400240d9:	fst    QWORD PTR [rax]
   1400240db:	neg    BYTE PTR [rax+0x3f07465]
   1400240e1:	pushf  
   1400240e2:	or     BYTE PTR [rdx+rdi*8-0x30],al
   1400240e6:	ficomp DWORD PTR [rdx]
   1400240e8:	(bad)  
   1400240e9:	push   fs
   1400240eb:	rex.RB xchg r10d,eax
   1400240ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400240ee:	jae    0x1400240f1
   1400240f0:	in     al,0x43
   1400240f2:	cdq    
   1400240f3:	sbb    esp,DWORD PTR [rax-0x11513422]
   1400240f9:	ds add al,0x98
   1400240fc:	jnp    0x14002409a
   1400240fe:	sub    bh,BYTE PTR [rsp+rdi*2+0x23]
   140024102:	push   rdi
   140024103:	xchg   esi,eax
   140024104:	in     eax,0x79
   140024106:	icebp  
   140024107:	adc    al,0x34
   140024109:	rex.XB
   14002410a:	lock add ecx,DWORD PTR [rax+rax*1-0x5c]
   14002410f:	scas   eax,DWORD PTR es:[rdi]
   140024110:	lock frstor [rcx-0x387dafc3]
   140024117:	(bad)  
   140024118:	gs (bad) 
   14002411a:	push   rax
   14002411b:	(bad)  [rsi+rdx*8]
   14002411e:	int3   
   14002411f:	fcmovnb st,st(3)
   140024121:	xchg   esi,edx
   140024123:	rex.WB lods rax,QWORD PTR ds:[rsi]
   140024125:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024126:	cmp    bh,BYTE PTR [rax-0x3968a8e7]
   14002412c:	sub    al,0xc1
   14002412e:	wrmsr  
   140024130:	add    DWORD PTR [rax-0x6],edx
   140024133:	test   DWORD PTR [rsi+0x777e1013],ebp
   140024139:	movabs al,ds:0x8e8ec0776a77fdb7
   140024142:	imul   ebx,ecx,0xffffff99
   140024145:	xor    DWORD PTR [rcx],eax
   140024147:	add    BYTE PTR [rip+0x3755dc57],bl        # 0x177581da4
   14002414d:	rex.WX jne 0x140024104
   140024150:	call   FWORD PTR [rcx]
   140024152:	xchg   ebp,eax
   140024153:	cdq    
   140024154:	(bad)  
   140024155:	(bad)  
   140024156:	(bad)  
   140024157:	add    ah,BYTE PTR [rax]
   140024159:	jge    0x1400240e0
   14002415b:	mov    bh,0x0
   14002415d:	(bad)  
   14002415e:	add    BYTE PTR [rdi-0x1],dl
   140024161:	lods   eax,DWORD PTR ds:[rsi]
   140024162:	outs   dx,BYTE PTR ds:[rsi]
   140024163:	adc    DWORD PTR [rdi],ebx
   140024165:	sub    eax,edi
   140024167:	int    0x94
   140024169:	adc    ah,dl
   14002416b:	outs   dx,BYTE PTR ds:[rsi]
   14002416c:	mov    bh,BYTE PTR [rdx+0x4a107a55]
   140024172:	(bad)  
   140024173:	and    dh,BYTE PTR es:[rbx+0x4c03f05]
   14002417a:	rex cli 
   14002417c:	or     DWORD PTR [rbp+0x29],ebx
   14002417f:	sub    BYTE PTR [rax],dl
   140024181:	div    BYTE PTR [rbx-0x4b]
   140024184:	add    eax,0xad92b5a0
   140024189:	cdq    
   14002418a:	(bad)  
   14002418b:	ds mov ah,0x4e
   14002418e:	push   0xffffffffffffffd3
   140024190:	fild   WORD PTR [rsi]
   140024192:	in     eax,0xcc
   140024194:	(bad)  
   140024195:	and    edx,ecx
   140024197:	movabs al,ds:0x7d2002601f8319a6
   1400241a0:	push   0xffffffffd4aa020d
   1400241a5:	out    dx,al
   1400241a6:	cmp    BYTE PTR [rdx+0x46],0xcd
   1400241aa:	test   BYTE PTR [rbp+0x49b743a2],bl
   1400241b0:	push   rdi
   1400241b1:	fwait
   1400241b2:	push   QWORD PTR [rsi]
   1400241b4:	rex.R
   1400241b5:	rex.W add BYTE PTR [rsi+0xd],spl
   1400241b9:	jle    0x14002413b
   1400241bb:	or     DWORD PTR [rax-0x7a05ec0c],eax
   1400241c1:	or     eax,0xa05b32fd
   1400241c6:	jl     0x140024189
   1400241c8:	rex.XB iret 
   1400241ca:	cld    
   1400241cb:	or     ax,0xb57c
   1400241cf:	outs   dx,BYTE PTR ds:[rsi]
   1400241d0:	(bad)  
   1400241d1:	rex.XB ins DWORD PTR es:[rdi],dx
   1400241d3:	cli    
   1400241d4:	add    ecx,edx
   1400241d6:	and    al,ah
   1400241d8:	push   rcx
   1400241d9:	or     ebx,DWORD PTR [rax+rbx*4+0xfd5f839]
   1400241e0:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400241e2:	(bad)  
   1400241e3:	rex.WB jrcxz 0x1400241b5
   1400241e6:	lock sub eax,0x9dfcccac
   1400241ec:	or     al,0xad
   1400241ee:	movsxd ebp,eax
   1400241f0:	(bad)  
   1400241f1:	data16 (bad) 
   1400241f3:	xchg   esp,eax
   1400241f4:	fistp  DWORD PTR [rbx-0x434d3645]
   1400241fa:	es mov ah,0x80
   1400241fd:	fistp  WORD PTR [rdi]
   1400241ff:	cmp    al,0x6a
   140024201:	cmc    
   140024202:	fisub  WORD PTR [rdi]
   140024204:	lahf   
   140024205:	jl     0x140024279
   140024207:	dec    ah
   140024209:	cdq    
   14002420a:	xor    ebx,edi
   14002420c:	add    ecx,0x5b00fc1
   140024212:	rex cli 
   140024214:	xchg   edx,eax
   140024215:	and    edi,esp
   140024217:	int3   
   140024218:	in     al,dx
   140024219:	jge    0x140024219
   14002421b:	jo     0x140024287
   14002421d:	add    al,BYTE PTR [rax]
   14002421f:	xchg   esp,eax
   140024220:	mov    bl,0xbe
   140024222:	sbb    eax,0xd1381611
   140024227:	cmp    bl,dh
   140024229:	(bad)  
   14002422a:	xor    cl,BYTE PTR [rbx-0x10]
   14002422d:	add    ecx,DWORD PTR [rax+rax*1+0x64]
   140024231:	mov    eax,?
   140024233:	and    eax,0xb19743c4
   140024238:	(bad)  
   140024239:	test   BYTE PTR [rbx+0x4],bh
   14002423c:	rex.X scas eax,DWORD PTR es:[rdi]
   14002423e:	pop    rsi
   14002423f:	test   BYTE PTR [rdi+0x4cc9a472],ch
   140024245:	int    0xfe
   140024247:	push   rax
   140024248:	rex.WR add BYTE PTR [rsp+rdx*4-0x30],r12b
   14002424d:	(bad)  
   14002424e:	mov    ah,0xa4
   140024250:	icebp  
   140024251:	xor    esi,DWORD PTR [rbx-0x5924b75]
   140024257:	push   rcx
   140024258:	ficomp DWORD PTR [rbx+0x399b7ffd]
   14002425e:	jae    0x140024246
   140024260:	rex.WX cdqe 
   140024262:	sub    al,bh
   140024264:	add    DWORD PTR [rsi],esp
   140024266:	add    BYTE PTR [rdx],dh
   140024268:	xchg   DWORD PTR [rcx+rcx*1+0x7c],ecx
   14002426c:	lods   eax,DWORD PTR ds:[rsi]
   14002426d:	out    dx,al
   14002426e:	rex.WB (bad) 
   140024270:	add    al,0x10
   140024272:	or     al,0x6
   140024274:	in     eax,0x85
   140024276:	or     edx,DWORD PTR [rdi]
   140024278:	cs push 0xffffffffa037f66f
   14002427e:	jrcxz  0x1400242ca
   140024280:	xchg   BYTE PTR ds:[rsi],al
   140024283:	(bad)  
   140024284:	rol    BYTE PTR [rax+rax*2],0x94
   140024288:	mov    al,dh
   14002428a:	icebp  
   14002428b:	or     ch,BYTE PTR [rbp+0xb0f4f45]
   140024291:	(bad)  
   140024292:	xor    edx,0xffffffd3
   140024295:	rex.WRXB (bad) 
   140024297:	std    
   140024298:	(bad)  
   140024299:	hlt    
   14002429a:	jmp    0x1a8029a72
   14002429f:	test   dh,dh
   1400242a1:	rex.WX
   1400242a2:	xchg   BYTE PTR ds:[rip+0x4004c03f],al        # 0x1800702e8
   1400242a9:	xchg   esp,eax
   1400242aa:	sub    al,0xcd
   1400242ac:	fistp  DWORD PTR [rbx-0x5984e22b]
   1400242b2:	rex.WRX popf 
   1400242b4:	stos   BYTE PTR es:[rdi],al
   1400242b5:	scas   al,BYTE PTR es:[rdi]
   1400242b6:	fld    TBYTE PTR [rdi-0x515621d2]
   1400242bc:	loopne 0x140024329
   1400242be:	js     0x1400242b0
   1400242c0:	add    ecx,DWORD PTR [rax+rax*1+0x44]
   1400242c4:	movabs ds:0xb2ca386787fecfc2,al
   1400242cd:	sbb    al,0x5c
   1400242cf:	mov    esp,0x37e3f178
   1400242d4:	fdiv   QWORD PTR [rax-0x3d]
   1400242d7:	jb     0x1400242f5
   1400242d9:	jmp    0x137f8cac9
   1400242de:	movsxd ebp,DWORD PTR [rip+0x5d2995e3]        # 0x19d2bd8c7
   1400242e4:	and    ah,BYTE PTR [rdx+0x34e84e63]
   1400242ea:	loopne 0x140024308
   1400242ec:	sub    BYTE PTR [rbx],bh
   1400242ee:	sbb    eax,0x1e80117
   1400242f3:	loopne 0x140024309
   1400242f5:	pop    rcx
   1400242f6:	xchg   esi,eax
   1400242f7:	std    
   1400242f8:	scas   eax,DWORD PTR es:[rdi]
   1400242f9:	mov    esi,0x43eafa
   1400242fe:	rex.RX add BYTE PTR [rax],r15b
   140024301:	sbb    eax,0x30060c0
   140024306:	add    esp,esi
   140024308:	(bad)  
   140024309:	push   rax
   14002430a:	(bad)  
   14002430b:	movabs al,ds:0x868fddeacfedca18
   140024314:	fdivp  st(4),st
   140024316:	fs xor eax,0x651260f8
   14002431c:	sbb    ch,BYTE PTR [rbp+0x49d5d06d]
   140024322:	ror    BYTE PTR [r8+0x2e2a2311],cl
   140024329:	mov    ebp,0xd137d2f4
   14002432e:	mov    cl,0xb9
   140024330:	out    dx,eax
   140024331:	rex.XB (bad) 
   140024333:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024334:	mov    ebx,0xcfe6734d
   140024339:	test   BYTE PTR [rcx+0x17],cl
   14002433c:	rex.R
   14002433d:	adc    bx,dx
   140024340:	or     dh,BYTE PTR [rax+0xfdc8e2]
   140024346:	(bad)  
   140024347:	lods   al,BYTE PTR ds:[rsi]
   140024348:	rex or esp,DWORD PTR [rdx]
   14002434b:	outs   dx,DWORD PTR ds:[rsi]
   14002434c:	mov    ch,BYTE PTR [rdx-0x66]
   14002434f:	loopne 0x140024358
   140024351:	cmp    BYTE PTR [rsi],al
   140024353:	rex xchg esp,eax
   140024355:	mov    eax,ss
   140024357:	sar    DWORD PTR [rdi+0xb191c36],0x8
   14002435e:	mov    edi,0xa87d59cd
   140024363:	jnp    0x14002435b
   140024365:	cdq    
   140024366:	and    bh,al
   140024368:	add    DWORD PTR [rsi],esp
   14002436a:	add    BYTE PTR [rdx-0x43f97b9c],ah
   140024370:	(bad)  
   140024371:	fimul  DWORD PTR [rcx]
   140024373:	and    BYTE PTR [rax-0x65907e72],al
   140024379:	loopne 0x140024382
   14002437b:	cwde   
   14002437c:	add    BYTE PTR [rax-0x7e907abc],cl
   140024382:	scas   al,BYTE PTR es:[rdi]
   140024383:	(bad)  
   140024384:	cmp    eax,0x20098e80
   140024389:	hlt    
   14002438a:	adc    DWORD PTR [rsi],edi
   14002438c:	(bad)  
   14002438d:	enter  0xd1f0,0x7e
   140024391:	mov    es,WORD PTR [rcx]
   140024393:	adc    BYTE PTR [rcx+0x3033bf09],cl
   140024399:	cld    
   14002439a:	(bad)  
   14002439b:	rex.RX sbb ecx,r10d
   14002439e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002439f:	or     ebx,DWORD PTR [rbx]
   1400243a1:	(bad)  
   1400243a2:	cld    
   1400243a3:	movabs eax,ds:0x735b75a71288821f
   1400243ac:	cmp    BYTE PTR [rbx+0x6],dl
   1400243af:	jle    0x1400243a9
   1400243b1:	(bad)  
   1400243b2:	and    BYTE PTR [rdx],ah
   1400243b4:	xor    DWORD PTR [rcx+0x6b8831d6],esi
   1400243ba:	xchg   edi,eax
   1400243bb:	pop    rsi
   1400243bc:	movabs ds:0x98c73e7ec5793ffc,eax
   1400243c5:	push   rsi
   1400243c6:	(bad)  
   1400243c7:	add    BYTE PTR [rax],al
   1400243c9:	add    BYTE PTR [rax],al
   1400243cb:	rex.WB
   1400243cc:	rex.RB
   1400243cd:	rex.WRX
   1400243ce:	rex.R scas al,BYTE PTR es:[rdi]
   1400243d0:	rex.X (bad) 
   1400243d2:	(bad)  
   1400243d3:	push   rax
   1400243d4:	sub    BYTE PTR [rax],al
   1400243d6:	add    BYTE PTR [rax],al
   1400243d8:	add    BYTE PTR [rax],0x0
   1400243db:	add    BYTE PTR [rax],al
   1400243dd:	add    DWORD PTR [rax],eax
   1400243df:	add    BYTE PTR [rcx],al
   1400243e1:	add    BYTE PTR [rax],ah
   1400243e3:	add    BYTE PTR [rax],al
   1400243e5:	add    BYTE PTR [rax],al
   1400243e7:	add    BYTE PTR [rax],al
   1400243e9:	add    BYTE PTR [rcx],al
   1400243eb:	add    bh,dl
   1400243ed:	or     eax,0xdd70000
	...
   140024596:	add    BYTE PTR [rcx],al
   140024598:	add    BYTE PTR [rax],al
   14002459a:	add    BYTE PTR [rdx],al
   14002459c:	add    BYTE PTR [rax],al
   14002459e:	add    BYTE PTR [rax+rax*1],al
   1400245a1:	add    BYTE PTR [rax],al
   1400245a3:	(bad)  
   1400245a4:	add    BYTE PTR [rax],al
   1400245a6:	add    BYTE PTR [rax],cl
   1400245a8:	add    BYTE PTR [rax],al
   1400245aa:	add    BYTE PTR [rax],cl
   1400245ac:	add    BYTE PTR [rax],al
   1400245ae:	add    BYTE PTR [rdi],al
   1400245b0:	add    BYTE PTR [rax],al
   1400245b2:	add    BYTE PTR [rip+0x3000000],al        # 0x1430245b8
   1400245b8:	add    BYTE PTR [rax],al
   1400245ba:	add    BYTE PTR [rcx],al
   1400245bc:	add    BYTE PTR [rax],al
   1400245be:	add    BYTE PTR [rcx],al
	...
   140024790:	add    BYTE PTR [rax],al
   140024792:	add    BYTE PTR [rcx],al
   140024794:	add    BYTE PTR [rax],al
   140024796:	add    BYTE PTR [rdx],al
   140024798:	add    BYTE PTR [rax],al
   14002479a:	add    BYTE PTR [rax+rax*1],al
   14002479d:	add    BYTE PTR [rax],al
   14002479f:	or     BYTE PTR [rax],al
   1400247a1:	add    BYTE PTR [rax],al
   1400247a3:	or     al,0x0
   1400247a5:	add    BYTE PTR [rax],al
   1400247a7:	sldt   WORD PTR [rax]
   1400247aa:	add    BYTE PTR [rax],dl
   1400247ac:	add    BYTE PTR [rax],al
   1400247ae:	add    BYTE PTR [rip+0xa000000],cl        # 0x14a0247b4
   1400247b4:	add    BYTE PTR [rax],al
   1400247b6:	add    BYTE PTR [rsi],al
   1400247b8:	add    BYTE PTR [rax],al
   1400247ba:	add    BYTE PTR [rbx],al
   1400247bc:	add    BYTE PTR [rax],al
   1400247be:	add    BYTE PTR [rcx],al
   1400247c0:	add    BYTE PTR [rax],al
   1400247c2:	add    BYTE PTR [rcx],al
	...
   140024990:	add    BYTE PTR [rax],al
   140024992:	add    BYTE PTR [rcx],al
   140024994:	add    BYTE PTR [rax],al
   140024996:	add    BYTE PTR [rbx],al
   140024998:	add    BYTE PTR [rax],al
   14002499a:	add    BYTE PTR [rsi],al
   14002499c:	add    BYTE PTR [rax],al
   14002499e:	add    BYTE PTR [rax+rax*1],cl
   1400249a1:	add    BYTE PTR [rax],al
   1400249a3:	adc    al,0x0
   1400249a5:	add    BYTE PTR [rax],al
   1400249a7:	sbb    al,BYTE PTR [rax]
   1400249a9:	add    BYTE PTR [rax],al
   1400249ab:	sbb    eax,DWORD PTR [rax]
   1400249ad:	add    BYTE PTR [rax],al
   1400249af:	(bad)  
   1400249b0:	add    BYTE PTR [rax],al
   1400249b2:	add    BYTE PTR [rcx],dl
   1400249b4:	add    BYTE PTR [rax],al
   1400249b6:	add    BYTE PTR [rbx],cl
   1400249b8:	add    BYTE PTR [rax],al
   1400249ba:	add    BYTE PTR [rsi],al
   1400249bc:	add    BYTE PTR [rax],al
   1400249be:	add    BYTE PTR [rbx],al
   1400249c0:	add    BYTE PTR [rax],al
   1400249c2:	add    BYTE PTR [rdx],al
   1400249c4:	add    BYTE PTR [rax],al
   1400249c6:	add    BYTE PTR [rcx],al
	...
   140024b90:	add    BYTE PTR [rax],al
   140024b92:	add    BYTE PTR [rcx],al
   140024b94:	add    BYTE PTR [rax],al
   140024b96:	add    BYTE PTR [rbx],al
   140024b98:	add    BYTE PTR [rax],al
   140024b9a:	add    BYTE PTR [rax],cl
   140024b9c:	add    BYTE PTR [rax],al
   140024b9e:	add    BYTE PTR [rcx],dl
   140024ba0:	add    BYTE PTR [rax],al
   140024ba2:	add    BYTE PTR [rdi],bl
   140024ba4:	pop    rbp
   140024ba5:	pop    rbp
   140024ba6:	pop    rbp
   140024ba7:	cmp    al,0x0
   140024ba9:	add    BYTE PTR [rax],al
   140024bab:	sub    al,0x0
   140024bad:	add    BYTE PTR [rax],al
   140024baf:	add    BYTE PTR es:[rax],al
   140024bb2:	add    BYTE PTR [rip+0x14000000],bl        # 0x154024bb8
   140024bb8:	add    BYTE PTR [rax],al
   140024bba:	add    BYTE PTR [rax+rax*1],cl
   140024bbd:	add    BYTE PTR [rax],al
   140024bbf:	(bad)  
   140024bc0:	add    BYTE PTR [rax],al
   140024bc2:	add    BYTE PTR [rbx],al
   140024bc4:	add    BYTE PTR [rax],al
   140024bc6:	add    BYTE PTR [rdx],al
   140024bc8:	add    BYTE PTR [rax],al
   140024bca:	add    BYTE PTR [rcx],al
	...
   140024d8c:	add    BYTE PTR [rax],al
   140024d8e:	add    BYTE PTR [rcx],al
   140024d90:	add    BYTE PTR [rax],al
   140024d92:	add    BYTE PTR [rdx],al
   140024d94:	add    BYTE PTR [rax],al
   140024d96:	add    BYTE PTR [rax+rax*1],al
   140024d99:	add    BYTE PTR [rax],al
   140024d9b:	or     al,BYTE PTR [rax]
   140024d9d:	add    BYTE PTR [rax],al
   140024d9f:	(bad)  
   140024da0:	add    BYTE PTR [rax],al
   140024da2:	add    BYTE PTR [rdx],ch
   140024da4:	hlt    
   140024da5:	hlt    
   140024da6:	hlt    
   140024da7:	loopne 0x140024df2
   140024da9:	rex.WB
   140024daa:	rex.WB push r11
   140024dac:	add    BYTE PTR [rax],al
   140024dae:	add    BYTE PTR [rax],bh
   140024db0:	add    BYTE PTR [rax],al
   140024db2:	add    BYTE PTR [rax+rax*1],ch
   140024db5:	add    BYTE PTR [rax],al
   140024db7:	and    BYTE PTR [rax],al
   140024db9:	add    BYTE PTR [rax],al
   140024dbb:	adc    eax,0xc000000
   140024dc0:	add    BYTE PTR [rax],al
   140024dc2:	add    BYTE PTR [rdi],al
   140024dc4:	add    BYTE PTR [rax],al
   140024dc6:	add    BYTE PTR [rbx],al
   140024dc8:	add    BYTE PTR [rax],al
   140024dca:	add    BYTE PTR [rdx],al
   140024dcc:	add    BYTE PTR [rax],al
   140024dce:	add    BYTE PTR [rcx],al
	...
   140024f38:	add    BYTE PTR [rax],al
   140024f3a:	add    BYTE PTR [rcx],al
   140024f3c:	add    BYTE PTR [rax],al
   140024f3e:	add    BYTE PTR [rcx],al
   140024f40:	add    BYTE PTR [rax],al
   140024f42:	add    BYTE PTR [rcx],al
   140024f44:	add    BYTE PTR [rax],al
   140024f46:	add    BYTE PTR [rcx],al
   140024f48:	add    BYTE PTR [rax],al
   140024f4a:	add    BYTE PTR [rcx],al
   140024f4c:	add    BYTE PTR [rax],al
   140024f4e:	add    BYTE PTR [rdx],al
   140024f50:	add    BYTE PTR [rax],al
   140024f52:	add    BYTE PTR [rdx],al
   140024f54:	add    BYTE PTR [rax],al
   140024f56:	add    BYTE PTR [rdx],al
   140024f58:	add    BYTE PTR [rax],al
   140024f5a:	add    BYTE PTR [rdx],al
   140024f5c:	add    BYTE PTR [rax],al
   140024f5e:	add    BYTE PTR [rdx],al
   140024f60:	add    BYTE PTR [rax],al
   140024f62:	add    BYTE PTR [rdx],al
   140024f64:	add    BYTE PTR [rax],al
   140024f66:	add    BYTE PTR [rdx],al
   140024f68:	add    BYTE PTR [rax],al
   140024f6a:	add    BYTE PTR [rdx],al
   140024f6c:	add    BYTE PTR [rax],al
   140024f6e:	add    BYTE PTR [rdx],al
   140024f70:	add    BYTE PTR [rax],al
   140024f72:	add    BYTE PTR [rdx],al
   140024f74:	add    BYTE PTR [rax],al
   140024f76:	add    BYTE PTR [rdx],al
   140024f78:	add    BYTE PTR [rax],al
   140024f7a:	add    BYTE PTR [rdx],al
   140024f7c:	add    BYTE PTR [rax],al
   140024f7e:	add    BYTE PTR [rdx],al
   140024f80:	add    BYTE PTR [rax],al
   140024f82:	add    BYTE PTR [rdx],al
   140024f84:	add    BYTE PTR [rax],al
   140024f86:	add    BYTE PTR [rdx],al
   140024f88:	add    BYTE PTR [rax],al
   140024f8a:	add    BYTE PTR [rdx],al
   140024f8c:	add    BYTE PTR [rax],al
   140024f8e:	add    BYTE PTR [rdx],al
   140024f90:	add    BYTE PTR [rax],al
   140024f92:	add    BYTE PTR [rbx],al
   140024f94:	add    BYTE PTR [rax],al
   140024f96:	add    BYTE PTR [rsi],al
   140024f98:	add    BYTE PTR [rax],al
   140024f9a:	add    BYTE PTR [rax+rax*1],cl
   140024f9d:	add    BYTE PTR [rax],al
   140024f9f:	sbb    eax,DWORD PTR [rax]
   140024fa1:	add    BYTE PTR [rax],al
   140024fa3:	xor    al,0xff
   140024fa5:	(bad)  
   140024fa6:	(bad)  
   140024fa7:	push   rax
   140024fa9:	lock lock in al,0x40
   140024fad:	rex
   140024fae:	rex pop rdi
   140024fb0:	add    BYTE PTR [rax],al
   140024fb2:	add    BYTE PTR [rdi],bh
   140024fb4:	add    BYTE PTR [rax],al
   140024fb6:	add    BYTE PTR [rsi],ch
   140024fb8:	add    BYTE PTR [rax],al
   140024fba:	add    BYTE PTR [rcx],ah
   140024fbc:	add    BYTE PTR [rax],al
   140024fbe:	add    BYTE PTR [rip+0xc000000],dl        # 0x14c024fc4
   140024fc4:	add    BYTE PTR [rax],al
   140024fc6:	add    BYTE PTR [rdi],al
   140024fc8:	add    BYTE PTR [rax],al
   140024fca:	add    BYTE PTR [rbx],al
   140024fcc:	add    BYTE PTR [rax],al
   140024fce:	add    BYTE PTR [rdx],al
   140024fd0:	add    BYTE PTR [rax],al
   140024fd2:	add    BYTE PTR [rcx],al
	...
   140025130:	add    BYTE PTR [rax],al
   140025132:	add    BYTE PTR [rcx],al
   140025134:	add    BYTE PTR [rax],al
   140025136:	add    BYTE PTR [rcx],al
   140025138:	add    BYTE PTR [rax],al
   14002513a:	add    BYTE PTR [rdx],al
   14002513c:	add    BYTE PTR [rax],al
   14002513e:	add    BYTE PTR [rbx],al
   140025140:	add    BYTE PTR [rax],al
   140025142:	add    BYTE PTR [rax+rax*1],al
   140025145:	add    BYTE PTR [rax],al
   140025147:	add    al,0x0
   140025149:	add    BYTE PTR [rax],al
   14002514b:	add    eax,0x5000000
   140025150:	add    BYTE PTR [rax],al
   140025152:	add    BYTE PTR [rip+0x5000000],al        # 0x145025158
   140025158:	add    BYTE PTR [rax],al
   14002515a:	add    BYTE PTR [rip+0x5000000],al        # 0x145025160
   140025160:	add    BYTE PTR [rax],al
   140025162:	add    BYTE PTR [rip+0x5000000],al        # 0x145025168
   140025168:	add    BYTE PTR [rax],al
   14002516a:	add    BYTE PTR [rip+0x5000000],al        # 0x145025170
   140025170:	add    BYTE PTR [rax],al
   140025172:	add    BYTE PTR [rip+0x5000000],al        # 0x145025178
   140025178:	add    BYTE PTR [rax],al
   14002517a:	add    BYTE PTR [rip+0x5000000],al        # 0x145025180
   140025180:	add    BYTE PTR [rax],al
   140025182:	add    BYTE PTR [rip+0x5000000],al        # 0x145025188
   140025188:	add    BYTE PTR [rax],al
   14002518a:	add    BYTE PTR [rip+0x5000000],al        # 0x145025190
   140025190:	add    BYTE PTR [rax],al
   140025192:	add    BYTE PTR [rsi],al
   140025194:	add    BYTE PTR [rax],al
   140025196:	add    BYTE PTR [rcx],cl
   140025198:	add    BYTE PTR [rax],al
   14002519a:	add    BYTE PTR [rax],dl
   14002519c:	add    BYTE PTR [rax],al
   14002519e:	add    BYTE PTR [rdi],bl
   1400251a0:	add    BYTE PTR [rax],al
   1400251a2:	add    BYTE PTR [rbx],bh
   1400251a4:	(bad)  
   1400251a5:	(bad)  
   1400251a6:	(bad)  
   1400251a7:	(bad)  
   1400251a8:	(bad)  
   1400251a9:	(bad)  
   1400251aa:	(bad)  
   1400251ab:	(bad)  
   1400251ac:	in     al,dx
   1400251ad:	in     al,dx
   1400251ae:	in     al,dx
   1400251af:	in     eax,0x39
   1400251b1:	cmp    DWORD PTR [rcx],edi
   1400251b3:	add    BYTE PTR fs:[rax],al
   1400251b6:	add    BYTE PTR [rdx+0x0],al
   1400251b9:	add    BYTE PTR [rax],al
   1400251bb:	(bad)  
   1400251bc:	add    BYTE PTR [rax],al
   1400251be:	add    BYTE PTR [rcx],ah
   1400251c0:	add    BYTE PTR [rax],al
   1400251c2:	add    BYTE PTR [rip+0xc000000],dl        # 0x14c0251c8
   1400251c8:	add    BYTE PTR [rax],al
   1400251ca:	add    BYTE PTR [rdi],al
   1400251cc:	add    BYTE PTR [rax],al
   1400251ce:	add    BYTE PTR [rbx],al
   1400251d0:	add    BYTE PTR [rax],al
   1400251d2:	add    BYTE PTR [rdx],al
   1400251d4:	add    BYTE PTR [rax],al
   1400251d6:	add    BYTE PTR [rcx],al
	...
   14002532c:	add    BYTE PTR [rax],al
   14002532e:	add    BYTE PTR [rcx],al
   140025330:	add    BYTE PTR [rax],al
   140025332:	add    BYTE PTR [rcx],al
   140025334:	add    BYTE PTR [rax],al
   140025336:	add    BYTE PTR [rbx],al
   140025338:	add    BYTE PTR [rax],al
   14002533a:	add    BYTE PTR [rip+0x7000000],al        # 0x147025340
   140025340:	add    BYTE PTR [rax],al
   140025342:	add    BYTE PTR [rcx],cl
   140025344:	add    BYTE PTR [rax],al
   140025346:	add    BYTE PTR [rbx],cl
   140025348:	add    BYTE PTR [rax],al
   14002534a:	add    BYTE PTR [rax+rax*1],cl
   14002534d:	add    BYTE PTR [rax],al
   14002534f:	or     al,0x0
   140025351:	add    BYTE PTR [rax],al
   140025353:	or     al,0x0
   140025355:	add    BYTE PTR [rax],al
   140025357:	or     al,0x0
   140025359:	add    BYTE PTR [rax],al
   14002535b:	or     al,0x0
   14002535d:	add    BYTE PTR [rax],al
   14002535f:	or     al,0x0
   140025361:	add    BYTE PTR [rax],al
   140025363:	or     al,0x0
   140025365:	add    BYTE PTR [rax],al
   140025367:	or     al,0x0
   140025369:	add    BYTE PTR [rax],al
   14002536b:	or     al,0x0
   14002536d:	add    BYTE PTR [rax],al
   14002536f:	or     al,0x0
   140025371:	add    BYTE PTR [rax],al
   140025373:	or     al,0x0
   140025375:	add    BYTE PTR [rax],al
   140025377:	or     al,0x0
   140025379:	add    BYTE PTR [rax],al
   14002537b:	or     al,0x0
   14002537d:	add    BYTE PTR [rax],al
   14002537f:	or     al,0x0
   140025381:	add    BYTE PTR [rax],al
   140025383:	or     al,0x0
   140025385:	add    BYTE PTR [rax],al
   140025387:	or     al,0x0
   140025389:	add    BYTE PTR [rax],al
   14002538b:	or     al,0x0
   14002538d:	add    BYTE PTR [rax],al
   14002538f:	or     al,0x0
   140025391:	add    BYTE PTR [rax],al
   140025393:	or     eax,0x10000000
   140025398:	add    BYTE PTR [rax],al
   14002539a:	add    BYTE PTR [rsi],dl
   14002539c:	add    BYTE PTR [rax],al
   14002539e:	add    BYTE PTR [rip+0x41000000],ah        # 0x1810253a4
   1400253a4:	(bad)  
   1400253a5:	(bad)  
   1400253a6:	(bad)  
   1400253a7:	(bad)  
   1400253a8:	(bad)  
   1400253a9:	(bad)  
   1400253aa:	(bad)  
   1400253ab:	(bad)  
   1400253ac:	(bad)  
   1400253ad:	(bad)  
   1400253ae:	(bad)  
   1400253af:	(bad)  
   1400253b0:	in     eax,dx
   1400253b1:	in     eax,dx
   1400253b2:	in     eax,dx
   1400253b3:	call   0x1a73d8ef3
   1400253b8:	add    BYTE PTR [rax],al
   1400253ba:	add    BYTE PTR [rbx+0x0],al
   1400253bd:	add    BYTE PTR [rax],al
   1400253bf:	xor    BYTE PTR [rax],al
   1400253c1:	add    BYTE PTR [rax],al
   1400253c3:	and    DWORD PTR [rax],eax
   1400253c5:	add    BYTE PTR [rax],al
   1400253c7:	adc    eax,0xc000000
   1400253cc:	add    BYTE PTR [rax],al
   1400253ce:	add    BYTE PTR [rdi],al
   1400253d0:	add    BYTE PTR [rax],al
   1400253d2:	add    BYTE PTR [rbx],al
   1400253d4:	add    BYTE PTR [rax],al
   1400253d6:	add    BYTE PTR [rdx],al
   1400253d8:	add    BYTE PTR [rax],al
   1400253da:	add    BYTE PTR [rcx],al
	...
   14002552c:	add    BYTE PTR [rax],al
   14002552e:	add    BYTE PTR [rcx],al
   140025530:	add    BYTE PTR [rax],al
   140025532:	add    BYTE PTR [rbx],al
   140025534:	add    BYTE PTR [rax],al
   140025536:	add    BYTE PTR [rsi],al
   140025538:	add    BYTE PTR [rax],al
   14002553a:	add    BYTE PTR [rdx],cl
   14002553c:	add    BYTE PTR [rax],al
   14002553e:	add    BYTE PTR [rdi],cl
   140025540:	add    BYTE PTR [rax],al
   140025542:	add    BYTE PTR [rbx],dl
   140025544:	add    BYTE PTR [rax],al
   140025546:	add    BYTE PTR [rsi],dl
   140025548:	add    BYTE PTR [rax],al
   14002554a:	add    BYTE PTR [rax],bl
   14002554c:	add    BYTE PTR [rax],al
   14002554e:	add    BYTE PTR [rax],bl
   140025550:	add    BYTE PTR [rax],al
   140025552:	add    BYTE PTR [rcx],bl
   140025554:	add    BYTE PTR [rax],al
   140025556:	add    BYTE PTR [rcx],bl
   140025558:	add    BYTE PTR [rax],al
   14002555a:	add    BYTE PTR [rcx],bl
   14002555c:	add    BYTE PTR [rax],al
   14002555e:	add    BYTE PTR [rcx],bl
   140025560:	add    BYTE PTR [rax],al
   140025562:	add    BYTE PTR [rcx],bl
   140025564:	add    BYTE PTR [rax],al
   140025566:	add    BYTE PTR [rcx],bl
   140025568:	add    BYTE PTR [rax],al
   14002556a:	add    BYTE PTR [rcx],bl
   14002556c:	add    BYTE PTR [rax],al
   14002556e:	add    BYTE PTR [rcx],bl
   140025570:	add    BYTE PTR [rax],al
   140025572:	add    BYTE PTR [rcx],bl
   140025574:	add    BYTE PTR [rax],al
   140025576:	add    BYTE PTR [rcx],bl
   140025578:	add    BYTE PTR [rax],al
   14002557a:	add    BYTE PTR [rcx],bl
   14002557c:	add    BYTE PTR [rax],al
   14002557e:	add    BYTE PTR [rcx],bl
   140025580:	add    BYTE PTR [rax],al
   140025582:	add    BYTE PTR [rcx],bl
   140025584:	add    BYTE PTR [rax],al
   140025586:	add    BYTE PTR [rcx],bl
   140025588:	add    BYTE PTR [rax],al
   14002558a:	add    BYTE PTR [rcx],bl
   14002558c:	add    BYTE PTR [rax],al
   14002558e:	add    BYTE PTR [rcx],bl
   140025590:	add    BYTE PTR [rax],al
   140025592:	add    BYTE PTR [rdx],bl
   140025594:	add    BYTE PTR [rax],al
   140025596:	add    BYTE PTR [rax+rax*1],bl
   140025599:	add    BYTE PTR [rax],al
   14002559b:	and    al,BYTE PTR [rax]
   14002559d:	add    BYTE PTR [rax],al
   14002559f:	(bad)  
   1400255a0:	add    BYTE PTR [rax],al
   1400255a2:	add    BYTE PTR [rax-0x1],cl
   1400255a5:	(bad)  
   1400255a6:	(bad)  
   1400255a7:	(bad)  
   1400255a8:	(bad)  
   1400255a9:	(bad)  
   1400255aa:	(bad)  
   1400255ab:	jmp    rsp
   1400255ad:	(bad)  
   1400255ae:	fdivr  st,st(7)
   1400255b0:	(bad)  
   1400255b1:	(bad)  
   1400255b2:	(bad)  
   1400255b3:	(bad)  
   1400255b4:	(bad)  
   1400255b5:	(bad)  
   1400255b6:	(bad)  
   1400255b7:	out    0x37,al
   1400255b9:	(bad)  
   1400255ba:	(bad)  
   1400255bb:	add    BYTE PTR [eax],al
   1400255be:	add    BYTE PTR [rbx+0x0],al
   1400255c1:	add    BYTE PTR [rax],al
   1400255c3:	xor    BYTE PTR [rax],al
   1400255c5:	add    BYTE PTR [rax],al
   1400255c7:	and    DWORD PTR [rax],eax
   1400255c9:	add    BYTE PTR [rax],al
   1400255cb:	adc    eax,0xc000000
   1400255d0:	add    BYTE PTR [rax],al
   1400255d2:	add    BYTE PTR [rdi],al
   1400255d4:	add    BYTE PTR [rax],al
   1400255d6:	add    BYTE PTR [rbx],al
   1400255d8:	add    BYTE PTR [rax],al
   1400255da:	add    BYTE PTR [rdx],al
   1400255dc:	add    BYTE PTR [rax],al
   1400255de:	add    BYTE PTR [rcx],al
	...
   140025728:	add    BYTE PTR [rax],al
   14002572a:	add    BYTE PTR [rcx],al
   14002572c:	add    BYTE PTR [rax],al
   14002572e:	add    BYTE PTR [rdx],al
   140025730:	add    BYTE PTR [rax],al
   140025732:	add    BYTE PTR [rip+0xa000000],al        # 0x14a025738
   140025738:	add    BYTE PTR [rax],al
   14002573a:	add    BYTE PTR [rdx],dl
   14002573c:	add    BYTE PTR [rax],al
   14002573e:	add    BYTE PTR [rdx],bl
   140025740:	add    BYTE PTR [rax],al
   140025742:	add    BYTE PTR [rcx],ah
   140025744:	add    BYTE PTR [rax],al
   140025746:	add    BYTE PTR [rsi],ah
   140025748:	add    BYTE PTR [rax],al
   14002574a:	add    BYTE PTR [rcx],ch
   14002574c:	add    BYTE PTR [rax],al
   14002574e:	add    BYTE PTR [rdx],ch
   140025750:	add    BYTE PTR [rax],al
   140025752:	add    BYTE PTR [rbx],ch
   140025754:	add    BYTE PTR [rax],al
   140025756:	add    BYTE PTR [rbx],ch
   140025758:	add    BYTE PTR [rax],al
   14002575a:	add    BYTE PTR [rbx],ch
   14002575c:	add    BYTE PTR [rax],al
   14002575e:	add    BYTE PTR [rbx],ch
   140025760:	add    BYTE PTR [rax],al
   140025762:	add    BYTE PTR [rbx],ch
   140025764:	add    BYTE PTR [rax],al
   140025766:	add    BYTE PTR [rbx],ch
   140025768:	add    BYTE PTR [rax],al
   14002576a:	add    BYTE PTR [rbx],ch
   14002576c:	add    BYTE PTR [rax],al
   14002576e:	add    BYTE PTR [rbx],ch
   140025770:	add    BYTE PTR [rax],al
   140025772:	add    BYTE PTR [rbx],ch
   140025774:	add    BYTE PTR [rax],al
   140025776:	add    BYTE PTR [rbx],ch
   140025778:	add    BYTE PTR [rax],al
   14002577a:	add    BYTE PTR [rbx],ch
   14002577c:	add    BYTE PTR [rax],al
   14002577e:	add    BYTE PTR [rbx],ch
   140025780:	add    BYTE PTR [rax],al
   140025782:	add    BYTE PTR [rbx],ch
   140025784:	add    BYTE PTR [rax],al
   140025786:	add    BYTE PTR [rbx],ch
   140025788:	add    BYTE PTR [rax],al
   14002578a:	add    BYTE PTR [rbx],ch
   14002578c:	add    BYTE PTR [rax],al
   14002578e:	add    BYTE PTR [rbx],ch
   140025790:	add    BYTE PTR [rax],al
   140025792:	add    BYTE PTR [rax+rax*1],ch
   140025795:	add    BYTE PTR [rax],al
   140025797:	add    BYTE PTR cs:[rax],al
   14002579a:	add    BYTE PTR [rbx],dh
   14002579c:	add    BYTE PTR [rax],al
   14002579e:	add    BYTE PTR [rip+0x52000000],bh        # 0x1920257a4
   1400257a4:	(bad)  
   1400257a5:	(bad)  
   1400257a6:	(bad)  
   1400257a7:	(bad)  
   1400257a8:	(bad)  
   1400257a9:	(bad)  
   1400257aa:	(bad)  
   1400257ab:	jmp    FWORD PTR [rsi+0x26]
   1400257ae:	xor    edi,edi
   1400257b0:	jrcxz  0x140025787
   1400257b2:	xlat   BYTE PTR ds:[rbx]
   1400257b3:	(bad)  
   1400257b4:	(bad)  
   1400257b5:	(bad)  
   1400257b6:	(bad)  
   1400257b7:	(bad)  
   1400257b8:	in     al,dx
   1400257b9:	in     al,dx
   1400257ba:	in     al,dx
   1400257bb:	call   0x1a83e93fc
   1400257c0:	add    BYTE PTR [rax],al
   1400257c2:	add    BYTE PTR [rbx+0x0],al
   1400257c5:	add    BYTE PTR [rax],al
   1400257c7:	xor    BYTE PTR [rax],al
   1400257c9:	add    BYTE PTR [rax],al
   1400257cb:	and    DWORD PTR [rax],eax
   1400257cd:	add    BYTE PTR [rax],al
   1400257cf:	adc    eax,0xc000000
   1400257d4:	add    BYTE PTR [rax],al
   1400257d6:	add    BYTE PTR [rdi],al
   1400257d8:	add    BYTE PTR [rax],al
   1400257da:	add    BYTE PTR [rbx],al
   1400257dc:	add    BYTE PTR [rax],al
   1400257de:	add    BYTE PTR [rdx],al
   1400257e0:	add    BYTE PTR [rax],al
   1400257e2:	add    BYTE PTR [rcx],al
	...
   140025928:	add    BYTE PTR [rax],al
   14002592a:	add    BYTE PTR [rcx],al
   14002592c:	add    BYTE PTR [rax],al
   14002592e:	add    BYTE PTR [rbx],al
   140025930:	add    BYTE PTR [rax],al
   140025932:	add    BYTE PTR [rdi],al
   140025934:	add    BYTE PTR [rax],al
   140025936:	add    BYTE PTR [rdi],cl
   140025938:	add    BYTE PTR [rax],al
   14002593a:	add    BYTE PTR [rbx],bl
   14002593c:	add    BYTE PTR [rax],al
   14002593e:	add    BYTE PTR [rcx],ch
   140025940:	add    BYTE PTR [rax],al
   140025942:	add    BYTE PTR [rax+rax*1],dh
   140025945:	add    BYTE PTR [rax],al
   140025947:	cmp    eax,DWORD PTR [rax]
   140025949:	add    BYTE PTR [rax],al
   14002594b:	(bad)  
   14002594c:	add    BYTE PTR [rax],al
   14002594e:	add    BYTE PTR [rcx+0x0],al
   140025951:	add    BYTE PTR [rax],al
   140025953:	rex.X add BYTE PTR [rax],al
   140025956:	add    BYTE PTR [rdx+0x0],al
   140025959:	add    BYTE PTR [rax],al
   14002595b:	rex.X add BYTE PTR [rax],al
   14002595e:	add    BYTE PTR [rdx+0x0],al
   140025961:	add    BYTE PTR [rax],al
   140025963:	rex.X add BYTE PTR [rax],al
   140025966:	add    BYTE PTR [rdx+0x0],al
   140025969:	add    BYTE PTR [rax],al
   14002596b:	rex.X add BYTE PTR [rax],al
   14002596e:	add    BYTE PTR [rdx+0x0],al
   140025971:	add    BYTE PTR [rax],al
   140025973:	rex.X add BYTE PTR [rax],al
   140025976:	add    BYTE PTR [rdx+0x0],al
   140025979:	add    BYTE PTR [rax],al
   14002597b:	rex.X add BYTE PTR [rax],al
   14002597e:	add    BYTE PTR [rdx+0x0],al
   140025981:	add    BYTE PTR [rax],al
   140025983:	rex.X add BYTE PTR [rax],al
   140025986:	add    BYTE PTR [rdx+0x0],al
   140025989:	add    BYTE PTR [rax],al
   14002598b:	rex.X add BYTE PTR [rax],al
   14002598e:	add    BYTE PTR [rdx+0x0],al
   140025991:	add    BYTE PTR [rax],al
   140025993:	rex.X add BYTE PTR [rax],al
   140025996:	add    BYTE PTR [rbx+0x0],al
   140025999:	add    BYTE PTR [rax],al
   14002599b:	rex.RXB add BYTE PTR [r8],r8b
   14002599e:	add    BYTE PTR [rsi+0x0],cl
   1400259a1:	add    BYTE PTR [rax],al
   1400259a3:	pop    rdi
   1400259a4:	(bad)  
   1400259a5:	(bad)  
   1400259a6:	(bad)  
   1400259a7:	(bad)  
   1400259a8:	(bad)  
   1400259a9:	(bad)  
   1400259aa:	(bad)  
   1400259ab:	jmp    QWORD PTR [rcx+0x12]
   1400259ae:	(bad)  
   1400259af:	jmp    FWORD PTR [rsi+0x26]
   1400259b2:	xor    edi,edi
   1400259b4:	jrcxz  0x14002598b
   1400259b6:	xlat   BYTE PTR ds:[rbx]
   1400259b7:	(bad)  
   1400259b8:	(bad)  
   1400259b9:	(bad)  
   1400259ba:	(bad)  
   1400259bb:	(bad)  
   1400259bc:	in     al,dx
   1400259bd:	in     al,dx
   1400259be:	in     al,dx
   1400259bf:	call   0x1a83d94ff
   1400259c4:	add    BYTE PTR [rax],al
   1400259c6:	add    BYTE PTR [rbx+0x0],al
   1400259c9:	add    BYTE PTR [rax],al
   1400259cb:	xor    BYTE PTR [rax],al
   1400259cd:	add    BYTE PTR [rax],al
   1400259cf:	and    DWORD PTR [rax],eax
   1400259d1:	add    BYTE PTR [rax],al
   1400259d3:	adc    eax,0xc000000
   1400259d8:	add    BYTE PTR [rax],al
   1400259da:	add    BYTE PTR [rdi],al
   1400259dc:	add    BYTE PTR [rax],al
   1400259de:	add    BYTE PTR [rbx],al
   1400259e0:	add    BYTE PTR [rax],al
   1400259e2:	add    BYTE PTR [rdx],al
   1400259e4:	add    BYTE PTR [rax],al
   1400259e6:	add    BYTE PTR [rcx],al
	...
   140025b28:	add    BYTE PTR [rax],al
   140025b2a:	add    BYTE PTR [rcx],al
   140025b2c:	add    BYTE PTR [rax],al
   140025b2e:	add    BYTE PTR [rax+rax*1],al
   140025b31:	add    BYTE PTR [rax],al
   140025b33:	or     DWORD PTR [rax],eax
   140025b35:	add    BYTE PTR [rax],al
   140025b37:	adc    al,0x0
   140025b39:	add    BYTE PTR [rax],al
   140025b3b:	(bad)  
   140025b3c:	add    BYTE PTR [rax],al
   140025b3e:	add    BYTE PTR [rax+rax*1],bh
   140025b41:	add    BYTE PTR [rax],al
   140025b43:	rex.WR add BYTE PTR [rax],r8b
   140025b46:	add    BYTE PTR [rsi+0x0],dl
   140025b49:	add    BYTE PTR [rax],al
   140025b4b:	pop    rbx
   140025b4c:	add    BYTE PTR [rax],al
   140025b4e:	add    BYTE PTR [rbp+0x0],bl
   140025b51:	add    BYTE PTR [rax],al
   140025b53:	pop    rbp
   140025b54:	add    BYTE PTR [rax],al
   140025b56:	add    BYTE PTR [rsi+0x0],bl
   140025b59:	add    BYTE PTR [rax],al
   140025b5b:	pop    rsi
   140025b5c:	add    BYTE PTR [rax],al
   140025b5e:	add    BYTE PTR [rsi+0x0],bl
   140025b61:	add    BYTE PTR [rax],al
   140025b63:	pop    rsi
   140025b64:	add    BYTE PTR [rax],al
   140025b66:	add    BYTE PTR [rsi+0x0],bl
   140025b69:	add    BYTE PTR [rax],al
   140025b6b:	pop    rsi
   140025b6c:	add    BYTE PTR [rax],al
   140025b6e:	add    BYTE PTR [rsi+0x0],bl
   140025b71:	add    BYTE PTR [rax],al
   140025b73:	pop    rsi
   140025b74:	add    BYTE PTR [rax],al
   140025b76:	add    BYTE PTR [rsi+0x0],bl
   140025b79:	add    BYTE PTR [rax],al
   140025b7b:	pop    rsi
   140025b7c:	add    BYTE PTR [rax],al
   140025b7e:	add    BYTE PTR [rsi+0x0],bl
   140025b81:	add    BYTE PTR [rax],al
   140025b83:	pop    rsi
   140025b84:	add    BYTE PTR [rax],al
   140025b86:	add    BYTE PTR [rsi+0x0],bl
   140025b89:	add    BYTE PTR [rax],al
   140025b8b:	pop    rsi
   140025b8c:	add    BYTE PTR [rax],al
   140025b8e:	add    BYTE PTR [rsi+0x0],bl
   140025b91:	add    BYTE PTR [rax],al
   140025b93:	pop    rsi
   140025b94:	add    BYTE PTR [rax],al
   140025b96:	add    BYTE PTR [rdi+0x0],bl
   140025b99:	add    BYTE PTR [rax],al
   140025b9b:	(bad)  
   140025b9c:	add    BYTE PTR [rax],al
   140025b9e:	add    BYTE PTR [rbp+0x0],ah
   140025ba1:	add    BYTE PTR [rax],al
   140025ba3:	outs   dx,DWORD PTR ds:[rsi]
   140025ba4:	(bad)  
   140025ba5:	(bad)  
   140025ba6:	(bad)  
   140025ba7:	(bad)  
   140025ba8:	(bad)  
   140025ba9:	(bad)  
   140025baa:	(bad)  
   140025bab:	jmp    QWORD PTR [rcx+0x12]
   140025bae:	(bad)  
   140025baf:	jmp    QWORD PTR [rcx+0x12]
   140025bb2:	(bad)  
   140025bb3:	jmp    FWORD PTR [rsi+0x26]
   140025bb6:	xor    edi,edi
   140025bb8:	jrcxz  0x140025b8f
   140025bba:	xlat   BYTE PTR ds:[rbx]
   140025bbb:	(bad)  
   140025bbc:	(bad)  
   140025bbd:	(bad)  
   140025bbe:	(bad)  
   140025bbf:	(bad)  
   140025bc0:	in     al,dx
   140025bc1:	in     al,dx
   140025bc2:	in     al,dx
   140025bc3:	call   0x1a83d9703
   140025bc8:	add    BYTE PTR [rax],al
   140025bca:	add    BYTE PTR [rbx+0x0],al
   140025bcd:	add    BYTE PTR [rax],al
   140025bcf:	xor    BYTE PTR [rax],al
   140025bd1:	add    BYTE PTR [rax],al
   140025bd3:	and    DWORD PTR [rax],eax
   140025bd5:	add    BYTE PTR [rax],al
   140025bd7:	adc    eax,0xc000000
   140025bdc:	add    BYTE PTR [rax],al
   140025bde:	add    BYTE PTR [rdi],al
   140025be0:	add    BYTE PTR [rax],al
   140025be2:	add    BYTE PTR [rbx],al
   140025be4:	add    BYTE PTR [rax],al
   140025be6:	add    BYTE PTR [rcx],al
   140025be8:	add    BYTE PTR [rax],al
   140025bea:	add    BYTE PTR [rcx],al
	...
   140025d28:	add    BYTE PTR [rax],al
   140025d2a:	add    BYTE PTR [rcx],al
   140025d2c:	add    BYTE PTR [rax],al
   140025d2e:	add    BYTE PTR [rax+rax*1],al
   140025d31:	add    BYTE PTR [rax],al
   140025d33:	or     eax,DWORD PTR [rax]
   140025d35:	add    BYTE PTR [rax],al
   140025d37:	sbb    DWORD PTR [rax],eax
   140025d39:	add    BYTE PTR [rax],al
   140025d3b:	xor    bh,bh
   140025d3d:	(bad)  
   140025d3e:	(bad)  
   140025d3f:	(bad)  
   140025d40:	(bad)  
   140025d41:	(bad)  
   140025d42:	(bad)  
   140025d43:	(bad)  
   140025d44:	(bad)  
   140025d45:	(bad)  
   140025d46:	(bad)  
   140025d47:	(bad)  
   140025d48:	(bad)  
   140025d49:	(bad)  
   140025d4a:	(bad)  
   140025d4b:	(bad)  
   140025d4c:	(bad)  
   140025d4d:	(bad)  
   140025d4e:	(bad)  
   140025d4f:	(bad)  
   140025d50:	(bad)  
   140025d51:	(bad)  
   140025d52:	(bad)  
   140025d53:	(bad)  
   140025d54:	(bad)  
   140025d55:	(bad)  
   140025d56:	(bad)  
   140025d57:	(bad)  
   140025d58:	(bad)  
   140025d59:	(bad)  
   140025d5a:	(bad)  
   140025d5b:	(bad)  
   140025d5c:	(bad)  
   140025d5d:	(bad)  
   140025d5e:	(bad)  
   140025d5f:	(bad)  
   140025d60:	(bad)  
   140025d61:	(bad)  
   140025d62:	(bad)  
   140025d63:	(bad)  
   140025d64:	(bad)  
   140025d65:	(bad)  
   140025d66:	(bad)  
   140025d67:	(bad)  
   140025d68:	(bad)  
   140025d69:	(bad)  
   140025d6a:	(bad)  
   140025d6b:	(bad)  
   140025d6c:	(bad)  
   140025d6d:	(bad)  
   140025d6e:	(bad)  
   140025d6f:	(bad)  
   140025d70:	(bad)  
   140025d71:	(bad)  
   140025d72:	(bad)  
   140025d73:	(bad)  
   140025d74:	(bad)  
   140025d75:	(bad)  
   140025d76:	(bad)  
   140025d77:	(bad)  
   140025d78:	(bad)  
   140025d79:	(bad)  
   140025d7a:	(bad)  
   140025d7b:	(bad)  
   140025d7c:	(bad)  
   140025d7d:	(bad)  
   140025d7e:	(bad)  
   140025d7f:	(bad)  
   140025d80:	(bad)  
   140025d81:	(bad)  
   140025d82:	(bad)  
   140025d83:	(bad)  
   140025d84:	(bad)  
   140025d85:	(bad)  
   140025d86:	(bad)  
   140025d87:	(bad)  
   140025d88:	(bad)  
   140025d89:	(bad)  
   140025d8a:	(bad)  
   140025d8b:	(bad)  
   140025d8c:	(bad)  
   140025d8d:	(bad)  
   140025d8e:	(bad)  
   140025d8f:	(bad)  
   140025d90:	(bad)  
   140025d91:	(bad)  
   140025d92:	(bad)  
   140025d93:	(bad)  
   140025d94:	(bad)  
   140025d95:	(bad)  
   140025d96:	(bad)  
   140025d97:	(bad)  
   140025d98:	(bad)  
   140025d99:	(bad)  
   140025d9a:	(bad)  
   140025d9b:	(bad)  
   140025d9c:	(bad)  
   140025d9d:	(bad)  
   140025d9e:	(bad)  
   140025d9f:	(bad)  
   140025da0:	(bad)  
   140025da1:	(bad)  
   140025da2:	(bad)  
   140025da3:	(bad)  
   140025da4:	(bad)  
   140025da5:	(bad)  
   140025da6:	(bad)  
   140025da7:	(bad)  
   140025da8:	(bad)  
   140025da9:	(bad)  
   140025daa:	(bad)  
   140025dab:	jmp    QWORD PTR [rcx+0x12]
   140025dae:	(bad)  
   140025daf:	jmp    QWORD PTR [rcx+0x12]
   140025db2:	(bad)  
   140025db3:	jmp    QWORD PTR [rcx+0x12]
   140025db6:	(bad)  
   140025db7:	jmp    FWORD PTR [rsi+0x26]
   140025dba:	xor    edi,edi
   140025dbc:	jrcxz  0x140025d93
   140025dbe:	xlat   BYTE PTR ds:[rbx]
   140025dbf:	(bad)  
   140025dc0:	(bad)  
   140025dc1:	(bad)  
   140025dc2:	(bad)  
   140025dc3:	(bad)  
   140025dc4:	in     al,dx
   140025dc5:	in     al,dx
   140025dc6:	in     al,dx
   140025dc7:	call   0x1a83d9907
   140025dcc:	add    BYTE PTR [rax],al
   140025dce:	add    BYTE PTR [rbx+0x0],al
   140025dd1:	add    BYTE PTR [rax],al
   140025dd3:	xor    BYTE PTR [rax],al
   140025dd5:	add    BYTE PTR [rax],al
   140025dd7:	and    DWORD PTR [rax],eax
   140025dd9:	add    BYTE PTR [rax],al
   140025ddb:	adc    eax,0xc000000
   140025de0:	add    BYTE PTR [rax],al
   140025de2:	add    BYTE PTR [rdi],al
   140025de4:	add    BYTE PTR [rax],al
   140025de6:	add    BYTE PTR [rbx],al
   140025de8:	add    BYTE PTR [rax],al
   140025dea:	add    BYTE PTR [rcx],al
   140025dec:	add    BYTE PTR [rax],al
   140025dee:	add    BYTE PTR [rcx],al
	...
   140025f28:	add    BYTE PTR [rax],al
   140025f2a:	add    BYTE PTR [rdx],al
   140025f2c:	add    BYTE PTR [rax],al
   140025f2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c025f34
   140025f34:	add    BYTE PTR [rax],al
   140025f36:	add    BYTE PTR [rax+rax*1],bl
   140025f39:	add    BYTE PTR [rax],al
   140025f3b:	cmp    edi,edi
   140025f3d:	(bad)  
   140025f3e:	(bad)  
   140025f3f:	(bad)  
   140025f40:	(bad)  
   140025f41:	(bad)  
   140025f42:	(bad)  
   140025f43:	(bad)  
   140025f44:	(bad)  
   140025f45:	(bad)  
   140025f46:	(bad)  
   140025f47:	(bad)  
   140025f48:	(bad)  
   140025f49:	(bad)  
   140025f4a:	(bad)  
   140025f4b:	(bad)  
   140025f4c:	(bad)  
   140025f4d:	(bad)  
   140025f4e:	(bad)  
   140025f4f:	(bad)  
   140025f50:	(bad)  
   140025f51:	(bad)  
   140025f52:	(bad)  
   140025f53:	(bad)  
   140025f54:	(bad)  
   140025f55:	(bad)  
   140025f56:	(bad)  
   140025f57:	(bad)  
   140025f58:	(bad)  
   140025f59:	(bad)  
   140025f5a:	(bad)  
   140025f5b:	(bad)  
   140025f5c:	(bad)  
   140025f5d:	(bad)  
   140025f5e:	(bad)  
   140025f5f:	(bad)  
   140025f60:	(bad)  
   140025f61:	(bad)  
   140025f62:	(bad)  
   140025f63:	(bad)  
   140025f64:	(bad)  
   140025f65:	(bad)  
   140025f66:	(bad)  
   140025f67:	(bad)  
   140025f68:	(bad)  
   140025f69:	(bad)  
   140025f6a:	(bad)  
   140025f6b:	(bad)  
   140025f6c:	(bad)  
   140025f6d:	(bad)  
   140025f6e:	(bad)  
   140025f6f:	(bad)  
   140025f70:	(bad)  
   140025f71:	(bad)  
   140025f72:	(bad)  
   140025f73:	(bad)  
   140025f74:	(bad)  
   140025f75:	(bad)  
   140025f76:	(bad)  
   140025f77:	(bad)  
   140025f78:	(bad)  
   140025f79:	(bad)  
   140025f7a:	(bad)  
   140025f7b:	(bad)  
   140025f7c:	(bad)  
   140025f7d:	(bad)  
   140025f7e:	(bad)  
   140025f7f:	(bad)  
   140025f80:	(bad)  
   140025f81:	(bad)  
   140025f82:	(bad)  
   140025f83:	(bad)  
   140025f84:	(bad)  
   140025f85:	(bad)  
   140025f86:	(bad)  
   140025f87:	(bad)  
   140025f88:	(bad)  
   140025f89:	(bad)  
   140025f8a:	(bad)  
   140025f8b:	(bad)  
   140025f8c:	(bad)  
   140025f8d:	(bad)  
   140025f8e:	(bad)  
   140025f8f:	(bad)  
   140025f90:	(bad)  
   140025f91:	(bad)  
   140025f92:	(bad)  
   140025f93:	(bad)  
   140025f94:	(bad)  
   140025f95:	(bad)  
   140025f96:	(bad)  
   140025f97:	(bad)  
   140025f98:	(bad)  
   140025f99:	(bad)  
   140025f9a:	(bad)  
   140025f9b:	(bad)  
   140025f9c:	(bad)  
   140025f9d:	(bad)  
   140025f9e:	(bad)  
   140025f9f:	(bad)  
   140025fa0:	(bad)  
   140025fa1:	(bad)  
   140025fa2:	(bad)  
   140025fa3:	(bad)  
   140025fa4:	(bad)  
   140025fa5:	(bad)  
   140025fa6:	(bad)  
   140025fa7:	(bad)  
   140025fa8:	(bad)  
   140025fa9:	(bad)  
   140025faa:	(bad)  
   140025fab:	jmp    QWORD PTR [rcx+0x12]
   140025fae:	(bad)  
   140025faf:	jmp    QWORD PTR [rcx+0x12]
   140025fb2:	(bad)  
   140025fb3:	jmp    QWORD PTR [rcx+0x12]
   140025fb6:	(bad)  
   140025fb7:	jmp    QWORD PTR [rcx+0x12]
   140025fba:	(bad)  
   140025fbb:	jmp    FWORD PTR [rsi+0x26]
   140025fbe:	xor    edi,edi
   140025fc0:	jrcxz  0x140025f97
   140025fc2:	xlat   BYTE PTR ds:[rbx]
   140025fc3:	(bad)  
   140025fc4:	(bad)  
   140025fc5:	(bad)  
   140025fc6:	(bad)  
   140025fc7:	(bad)  
   140025fc8:	in     al,dx
   140025fc9:	in     al,dx
   140025fca:	in     al,dx
   140025fcb:	call   0x1a83d9b0b
   140025fd0:	add    BYTE PTR [rax],al
   140025fd2:	add    BYTE PTR [rbx+0x0],al
   140025fd5:	add    BYTE PTR [rax],al
   140025fd7:	xor    BYTE PTR [rax],al
   140025fd9:	add    BYTE PTR [rax],al
   140025fdb:	and    DWORD PTR [rax],eax
   140025fdd:	add    BYTE PTR [rax],al
   140025fdf:	adc    eax,0xc000000
   140025fe4:	add    BYTE PTR [rax],al
   140025fe6:	add    BYTE PTR [rsi],al
   140025fe8:	add    BYTE PTR [rax],al
   140025fea:	add    BYTE PTR [rbx],al
   140025fec:	add    BYTE PTR [rax],al
   140025fee:	add    BYTE PTR [rcx],al
	...
   140026124:	add    BYTE PTR [rax],al
   140026126:	add    BYTE PTR [rcx],al
   140026128:	add    BYTE PTR [rax],al
   14002612a:	add    BYTE PTR [rdx],al
   14002612c:	add    BYTE PTR [rax],al
   14002612e:	add    BYTE PTR [rip+0xd000000],al        # 0x14d026134
   140026134:	add    BYTE PTR [rax],al
   140026136:	add    BYTE PTR [rip+0x3c000000],bl        # 0x17c02613c
   14002613c:	(bad)  
   14002613d:	(bad)  
   14002613e:	(bad)  
   14002613f:	(bad)  
   140026140:	(bad)  
   140026141:	(bad)  
   140026142:	(bad)  
   140026143:	jmp    QWORD PTR [rcx+0x12]
   140026146:	(bad)  
   140026147:	jmp    QWORD PTR [rcx+0x12]
   14002614a:	(bad)  
   14002614b:	jmp    QWORD PTR [rcx+0x12]
   14002614e:	(bad)  
   14002614f:	jmp    QWORD PTR [rcx+0x12]
   140026152:	(bad)  
   140026153:	jmp    QWORD PTR [rcx+0x12]
   140026156:	(bad)  
   140026157:	jmp    QWORD PTR [rcx+0x12]
   14002615a:	(bad)  
   14002615b:	jmp    QWORD PTR [rcx+0x12]
   14002615e:	(bad)  
   14002615f:	jmp    QWORD PTR [rcx+0x12]
   140026162:	(bad)  
   140026163:	jmp    QWORD PTR [rcx+0x12]
   140026166:	(bad)  
   140026167:	jmp    QWORD PTR [rcx+0x12]
   14002616a:	(bad)  
   14002616b:	jmp    QWORD PTR [rcx+0x12]
   14002616e:	(bad)  
   14002616f:	jmp    QWORD PTR [rcx+0x12]
   140026172:	(bad)  
   140026173:	jmp    QWORD PTR [rcx+0x12]
   140026176:	(bad)  
   140026177:	jmp    QWORD PTR [rcx+0x12]
   14002617a:	(bad)  
   14002617b:	jmp    QWORD PTR [rcx+0x12]
   14002617e:	(bad)  
   14002617f:	jmp    QWORD PTR [rcx+0x12]
   140026182:	(bad)  
   140026183:	jmp    QWORD PTR [rcx+0x12]
   140026186:	(bad)  
   140026187:	jmp    QWORD PTR [rcx+0x12]
   14002618a:	(bad)  
   14002618b:	jmp    QWORD PTR [rcx+0x12]
   14002618e:	(bad)  
   14002618f:	jmp    QWORD PTR [rcx+0x12]
   140026192:	(bad)  
   140026193:	jmp    QWORD PTR [rcx+0x12]
   140026196:	(bad)  
   140026197:	jmp    QWORD PTR [rcx+0x12]
   14002619a:	(bad)  
   14002619b:	jmp    QWORD PTR [rcx+0x12]
   14002619e:	(bad)  
   14002619f:	jmp    QWORD PTR [rcx+0x12]
   1400261a2:	(bad)  
   1400261a3:	jmp    QWORD PTR [rcx+0x12]
   1400261a6:	(bad)  
   1400261a7:	jmp    QWORD PTR [rcx+0x12]
   1400261aa:	(bad)  
   1400261ab:	jmp    QWORD PTR [rcx+0x12]
   1400261ae:	(bad)  
   1400261af:	jmp    QWORD PTR [rcx+0x12]
   1400261b2:	(bad)  
   1400261b3:	jmp    QWORD PTR [rcx+0x12]
   1400261b6:	(bad)  
   1400261b7:	jmp    QWORD PTR [rcx+0x12]
   1400261ba:	(bad)  
   1400261bb:	jmp    QWORD PTR [rcx+0x12]
   1400261be:	(bad)  
   1400261bf:	jmp    FWORD PTR [rsi+0x26]
   1400261c2:	xor    edi,edi
   1400261c4:	jrcxz  0x14002619b
   1400261c6:	xlat   BYTE PTR ds:[rbx]
   1400261c7:	(bad)  
   1400261c8:	(bad)  
   1400261c9:	(bad)  
   1400261ca:	(bad)  
   1400261cb:	(bad)  
   1400261cc:	in     al,dx
   1400261cd:	in     al,dx
   1400261ce:	in     al,dx
   1400261cf:	call   0x1a83d9d0f
   1400261d4:	add    BYTE PTR [rax],al
   1400261d6:	add    BYTE PTR [rbx+0x0],al
   1400261d9:	add    BYTE PTR [rax],al
   1400261db:	(bad)  
   1400261dc:	add    BYTE PTR [rax],al
   1400261de:	add    BYTE PTR [rax],ah
   1400261e0:	add    BYTE PTR [rax],al
   1400261e2:	add    BYTE PTR [rax+rax*1],dl
   1400261e5:	add    BYTE PTR [rax],al
   1400261e7:	or     eax,DWORD PTR [rax]
   1400261e9:	add    BYTE PTR [rax],al
   1400261eb:	add    eax,0x2000000
   1400261f0:	add    BYTE PTR [rax],al
   1400261f2:	add    BYTE PTR [rcx],al
	...
   140026324:	add    BYTE PTR [rax],al
   140026326:	add    BYTE PTR [rcx],al
   140026328:	add    BYTE PTR [rax],al
   14002632a:	add    BYTE PTR [rbx],al
   14002632c:	add    BYTE PTR [rax],al
   14002632e:	add    BYTE PTR [rdi],al
   140026330:	add    BYTE PTR [rax],al
   140026332:	add    BYTE PTR [rdi],cl
   140026334:	add    BYTE PTR [rax],al
   140026336:	add    BYTE PTR [rax],ah
   140026338:	add    BYTE PTR [rax],al
   14002633a:	add    BYTE PTR [rsi],bh
   14002633c:	(bad)  
   14002633d:	(bad)  
   14002633e:	(bad)  
   14002633f:	(bad)  
   140026340:	(bad)  
   140026341:	(bad)  
   140026342:	(bad)  
   140026343:	jmp    QWORD PTR [rcx+0x12]
   140026346:	(bad)  
   140026347:	jmp    QWORD PTR [rcx+0x12]
   14002634a:	(bad)  
   14002634b:	jmp    QWORD PTR [rcx+0x12]
   14002634e:	(bad)  
   14002634f:	jmp    QWORD PTR [rcx+0x12]
   140026352:	(bad)  
   140026353:	jmp    QWORD PTR [rcx+0x12]
   140026356:	(bad)  
   140026357:	jmp    QWORD PTR [rcx+0x12]
   14002635a:	(bad)  
   14002635b:	jmp    QWORD PTR [rcx+0x12]
   14002635e:	(bad)  
   14002635f:	jmp    QWORD PTR [rcx+0x12]
   140026362:	(bad)  
   140026363:	jmp    QWORD PTR [rcx+0x12]
   140026366:	(bad)  
   140026367:	jmp    QWORD PTR [rcx+0x12]
   14002636a:	(bad)  
   14002636b:	jmp    QWORD PTR [rcx+0x12]
   14002636e:	(bad)  
   14002636f:	jmp    QWORD PTR [rcx+0x12]
   140026372:	(bad)  
   140026373:	jmp    QWORD PTR [rcx+0x12]
   140026376:	(bad)  
   140026377:	jmp    QWORD PTR [rcx+0x12]
   14002637a:	(bad)  
   14002637b:	jmp    QWORD PTR [rcx+0x12]
   14002637e:	(bad)  
   14002637f:	jmp    QWORD PTR [rcx+0x12]
   140026382:	(bad)  
   140026383:	jmp    QWORD PTR [rcx+0x12]
   140026386:	(bad)  
   140026387:	jmp    QWORD PTR [rcx+0x12]
   14002638a:	(bad)  
   14002638b:	jmp    QWORD PTR [rcx+0x12]
   14002638e:	(bad)  
   14002638f:	jmp    QWORD PTR [rcx+0x12]
   140026392:	(bad)  
   140026393:	jmp    QWORD PTR [rcx+0x12]
   140026396:	(bad)  
   140026397:	jmp    QWORD PTR [rcx+0x12]
   14002639a:	(bad)  
   14002639b:	jmp    QWORD PTR [rcx+0x12]
   14002639e:	(bad)  
   14002639f:	jmp    QWORD PTR [rcx+0x12]
   1400263a2:	(bad)  
   1400263a3:	jmp    QWORD PTR [rcx+0x12]
   1400263a6:	(bad)  
   1400263a7:	jmp    QWORD PTR [rcx+0x12]
   1400263aa:	(bad)  
   1400263ab:	jmp    QWORD PTR [rcx+0x12]
   1400263ae:	(bad)  
   1400263af:	jmp    QWORD PTR [rcx+0x12]
   1400263b2:	(bad)  
   1400263b3:	jmp    QWORD PTR [rcx+0x12]
   1400263b6:	(bad)  
   1400263b7:	jmp    QWORD PTR [rcx+0x12]
   1400263ba:	(bad)  
   1400263bb:	jmp    QWORD PTR [rcx+0x12]
   1400263be:	(bad)  
   1400263bf:	jmp    QWORD PTR [rcx+0x12]
   1400263c2:	(bad)  
   1400263c3:	jmp    FWORD PTR [rsi+0x26]
   1400263c6:	xor    edi,edi
   1400263c8:	jrcxz  0x14002639f
   1400263ca:	xlat   BYTE PTR ds:[rbx]
   1400263cb:	(bad)  
   1400263cc:	(bad)  
   1400263cd:	(bad)  
   1400263ce:	(bad)  
   1400263cf:	(bad)  
   1400263d0:	in     al,dx
   1400263d1:	in     al,dx
   1400263d2:	in     al,dx
   1400263d3:	call   0x1a83d9f13
   1400263d8:	add    BYTE PTR [rax],al
   1400263da:	add    BYTE PTR [rcx+0x0],al
   1400263dd:	add    BYTE PTR [rax],al
   1400263df:	sub    eax,0x1d000000
   1400263e4:	add    BYTE PTR [rax],al
   1400263e6:	add    BYTE PTR [rcx],dl
   1400263e8:	add    BYTE PTR [rax],al
   1400263ea:	add    BYTE PTR [rcx],cl
   1400263ec:	add    BYTE PTR [rax],al
   1400263ee:	add    BYTE PTR [rax+rax*1],al
   1400263f1:	add    BYTE PTR [rax],al
   1400263f3:	add    DWORD PTR [rax],eax
	...
   140026521:	add    BYTE PTR [rax],al
   140026523:	add    DWORD PTR [rax],eax
   140026525:	add    BYTE PTR [rax],al
   140026527:	add    al,BYTE PTR [rax]
   140026529:	add    BYTE PTR [rax],al
   14002652b:	add    al,0x0
   14002652d:	add    BYTE PTR [rax],al
   14002652f:	or     DWORD PTR [rax],eax
   140026531:	add    BYTE PTR [rax],al
   140026533:	adc    al,BYTE PTR [rax]
   140026535:	add    BYTE PTR [rax],al
   140026537:	and    al,0x0
   140026539:	add    BYTE PTR [rax],al
   14002653b:	rex.X (bad) 
   14002653d:	(bad)  
   14002653e:	(bad)  
   14002653f:	(bad)  
   140026540:	(bad)  
   140026541:	(bad)  
   140026542:	(bad)  
   140026543:	jmp    QWORD PTR [rcx+0x12]
   140026546:	(bad)  
   140026547:	jmp    QWORD PTR [rcx+0x12]
   14002654a:	(bad)  
   14002654b:	jmp    QWORD PTR [rcx+0x12]
   14002654e:	(bad)  
   14002654f:	jmp    QWORD PTR [rcx+0x12]
   140026552:	(bad)  
   140026553:	jmp    QWORD PTR [rcx+0x12]
   140026556:	(bad)  
   140026557:	jmp    QWORD PTR [rcx+0x12]
   14002655a:	(bad)  
   14002655b:	jmp    QWORD PTR [rcx+0x12]
   14002655e:	(bad)  
   14002655f:	jmp    FWORD PTR [rdi+0x26]
   140026562:	xor    edi,edi
   140026564:	mov    ch,0x90
   140026566:	xchg   esi,eax
   140026567:	jmp    rbp
   140026569:	fcomp  st(2)
   14002656b:	(bad)  
   14002656c:	stc    
   14002656d:	div    edi
   14002656f:	push   rbx
   140026571:	in     al,dx
   140026572:	in     eax,dx
   140026573:	call   rbp
   140026575:	rol    esp,0xff
   140026578:	cdq    
   140026579:	outs   dx,BYTE PTR ds:[esi]
   14002657b:	jmp    QWORD PTR [rdx+0x13]
   14002657e:	(bad)  
   14002657f:	jmp    QWORD PTR [rcx+0x12]
   140026582:	(bad)  
   140026583:	(bad)  
   140026584:	(bad)  
   140026585:	(bad)  
   140026586:	(bad)  
   140026587:	(bad)  
   140026588:	(bad)  
   140026589:	(bad)  
   14002658a:	(bad)  
   14002658b:	(bad)  
   14002658c:	(bad)  
   14002658d:	(bad)  
   14002658e:	(bad)  
   14002658f:	(bad)  
   140026590:	(bad)  
   140026591:	(bad)  
   140026592:	(bad)  
   140026593:	jmp    QWORD PTR [rcx+0x12]
   140026596:	(bad)  
   140026597:	jmp    QWORD PTR [rcx+0x12]
   14002659a:	(bad)  
   14002659b:	jmp    QWORD PTR [rcx+0x12]
   14002659e:	(bad)  
   14002659f:	jmp    QWORD PTR [rcx+0x12]
   1400265a2:	(bad)  
   1400265a3:	jmp    QWORD PTR [rcx+0x12]
   1400265a6:	(bad)  
   1400265a7:	jmp    QWORD PTR [rcx+0x12]
   1400265aa:	(bad)  
   1400265ab:	jmp    QWORD PTR [rcx+0x12]
   1400265ae:	(bad)  
   1400265af:	jmp    QWORD PTR [rcx+0x12]
   1400265b2:	(bad)  
   1400265b3:	jmp    QWORD PTR [rcx+0x12]
   1400265b6:	(bad)  
   1400265b7:	jmp    QWORD PTR [rcx+0x12]
   1400265ba:	(bad)  
   1400265bb:	jmp    QWORD PTR [rcx+0x12]
   1400265be:	(bad)  
   1400265bf:	jmp    QWORD PTR [rcx+0x12]
   1400265c2:	(bad)  
   1400265c3:	jmp    QWORD PTR [rcx+0x12]
   1400265c6:	(bad)  
   1400265c7:	jmp    FWORD PTR [rsi+0x26]
   1400265ca:	xor    edi,edi
   1400265cc:	jrcxz  0x1400265a3
   1400265ce:	xlat   BYTE PTR ds:[rbx]
   1400265cf:	(bad)  
   1400265d0:	(bad)  
   1400265d1:	(bad)  
   1400265d2:	(bad)  
   1400265d3:	(bad)  
   1400265d4:	in     eax,dx
   1400265d5:	in     eax,dx
   1400265d6:	in     eax,dx
   1400265d7:	call   0x1a53fa319
   1400265dc:	add    BYTE PTR [rax],al
   1400265de:	add    BYTE PTR [rax+rax*1],bh
   1400265e1:	add    BYTE PTR [rax],al
   1400265e3:	(bad)  
   1400265e4:	add    BYTE PTR [rax],al
   1400265e6:	add    BYTE PTR [rdi],dl
   1400265e8:	add    BYTE PTR [rax],al
   1400265ea:	add    BYTE PTR [rax+rax*1],cl
   1400265ed:	add    BYTE PTR [rax],al
   1400265ef:	add    eax,0x2000000
   1400265f4:	add    BYTE PTR [rax],al
   1400265f6:	add    BYTE PTR [rcx],al
	...
   14002671c:	add    BYTE PTR [rax],al
   14002671e:	add    BYTE PTR [rcx],al
   140026720:	add    BYTE PTR [rax],al
   140026722:	add    BYTE PTR [rdx],al
   140026724:	add    BYTE PTR [rax],al
   140026726:	add    BYTE PTR [rbx],al
   140026728:	add    BYTE PTR [rax],al
   14002672a:	add    BYTE PTR [rdi],al
   14002672c:	add    BYTE PTR [rax],al
   14002672e:	add    BYTE PTR [rsi],cl
   140026730:	add    BYTE PTR [rax],al
   140026732:	add    BYTE PTR [rcx],bl
   140026734:	add    BYTE PTR [rax],al
   140026736:	add    BYTE PTR [rbx],ch
   140026738:	add    BYTE PTR [rax],al
   14002673a:	add    BYTE PTR [rax-0x1],cl
   14002673d:	(bad)  
   14002673e:	(bad)  
   14002673f:	(bad)  
   140026740:	(bad)  
   140026741:	(bad)  
   140026742:	(bad)  
   140026743:	jmp    QWORD PTR [rcx+0x12]
   140026746:	(bad)  
   140026747:	jmp    QWORD PTR [rcx+0x12]
   14002674a:	(bad)  
   14002674b:	jmp    QWORD PTR [rcx+0x12]
   14002674e:	(bad)  
   14002674f:	jmp    QWORD PTR [rcx+0x12]
   140026752:	(bad)  
   140026753:	jmp    QWORD PTR [rcx+0x12]
   140026756:	(bad)  
   140026757:	jmp    QWORD PTR [rcx+0x12]
   14002675a:	(bad)  
   14002675b:	dec    DWORD PTR [rbp-0xa00a2ac]
   140026761:	lock icebp 
   140026763:	(bad)  
   140026764:	(bad)  
   140026765:	(bad)  
   140026766:	(bad)  
   140026767:	(bad)  
   140026768:	(bad)  
   140026769:	(bad)  
   14002676a:	(bad)  
   14002676b:	(bad)  
   14002676c:	(bad)  
   14002676d:	(bad)  
   14002676e:	(bad)  
   14002676f:	(bad)  
   140026770:	(bad)  
   140026771:	(bad)  
   140026772:	(bad)  
   140026773:	(bad)  
   140026774:	(bad)  
   140026775:	(bad)  
   140026776:	(bad)  
   140026777:	(bad)  
   140026778:	(bad)  
   140026779:	(bad)  
   14002677a:	(bad)  
   14002677b:	(bad)  
   14002677c:	fld    st(5)
   14002677e:	enter  0x6dff,0x24
   140026782:	(bad)  
   140026783:	(bad)  
   140026784:	(bad)  
   140026785:	(bad)  
   140026786:	(bad)  
   140026787:	(bad)  
   140026788:	(bad)  
   140026789:	(bad)  
   14002678a:	(bad)  
   14002678b:	(bad)  
   14002678c:	(bad)  
   14002678d:	(bad)  
   14002678e:	(bad)  
   14002678f:	(bad)  
   140026790:	(bad)  
   140026791:	(bad)  
   140026792:	(bad)  
   140026793:	jmp    QWORD PTR [rcx+0x12]
   140026796:	(bad)  
   140026797:	jmp    QWORD PTR [rcx+0x12]
   14002679a:	(bad)  
   14002679b:	jmp    QWORD PTR [rcx+0x12]
   14002679e:	(bad)  
   14002679f:	jmp    QWORD PTR [rcx+0x12]
   1400267a2:	(bad)  
   1400267a3:	jmp    QWORD PTR [rcx+0x12]
   1400267a6:	(bad)  
   1400267a7:	jmp    QWORD PTR [rcx+0x12]
   1400267aa:	(bad)  
   1400267ab:	jmp    QWORD PTR [rcx+0x12]
   1400267ae:	(bad)  
   1400267af:	jmp    QWORD PTR [rcx+0x12]
   1400267b2:	(bad)  
   1400267b3:	jmp    QWORD PTR [rcx+0x12]
   1400267b6:	(bad)  
   1400267b7:	jmp    QWORD PTR [rcx+0x12]
   1400267ba:	(bad)  
   1400267bb:	jmp    QWORD PTR [rcx+0x12]
   1400267be:	(bad)  
   1400267bf:	jmp    QWORD PTR [rcx+0x12]
   1400267c2:	(bad)  
   1400267c3:	jmp    QWORD PTR [rcx+0x12]
   1400267c6:	(bad)  
   1400267c7:	jmp    QWORD PTR [rcx+0x12]
   1400267ca:	(bad)  
   1400267cb:	jmp    FWORD PTR [rsi+0x26]
   1400267ce:	xor    edi,edi
   1400267d0:	jrcxz  0x1400267a7
   1400267d2:	xlat   BYTE PTR ds:[rbx]
   1400267d3:	(bad)  
   1400267d4:	(bad)  
   1400267d5:	(bad)  
   1400267d6:	(bad)  
   1400267d7:	(bad)  
   1400267d8:	in     eax,dx
   1400267d9:	in     eax,dx
   1400267da:	in     eax,dx
   1400267db:	out    0x42,eax
   1400267dd:	rex.X
   1400267de:	rex.X pop rsp
   1400267e0:	add    BYTE PTR [rax],al
   1400267e2:	add    BYTE PTR [rdx],dh
   1400267e4:	add    BYTE PTR [rax],al
   1400267e6:	add    BYTE PTR [rip+0xf000000],bl        # 0x14f0267ec
   1400267ec:	add    BYTE PTR [rax],al
   1400267ee:	add    BYTE PTR [rsi],al
   1400267f0:	add    BYTE PTR [rax],al
   1400267f2:	add    BYTE PTR [rdx],al
   1400267f4:	add    BYTE PTR [rax],al
   1400267f6:	add    BYTE PTR [rcx],al
	...
   140026918:	add    BYTE PTR [rax],al
   14002691a:	add    BYTE PTR [rcx],al
   14002691c:	add    BYTE PTR [rax],al
   14002691e:	add    BYTE PTR [rcx],al
   140026920:	add    BYTE PTR [rax],al
   140026922:	add    BYTE PTR [rbx],al
   140026924:	add    BYTE PTR [rax],al
   140026926:	add    BYTE PTR [rdi],al
   140026928:	add    BYTE PTR [rax],al
   14002692a:	add    BYTE PTR [rip+0x16000000],cl        # 0x156026930
   140026930:	add    BYTE PTR [rax],al
   140026932:	add    BYTE PTR [rbx],ah
   140026934:	add    BYTE PTR [rax],al
   140026936:	add    BYTE PTR [rsi],dh
   140026938:	add    BYTE PTR [rax],al
   14002693a:	add    BYTE PTR [rcx-0x1],dl
   14002693d:	(bad)  
   14002693e:	(bad)  
   14002693f:	(bad)  
   140026940:	(bad)  
   140026941:	(bad)  
   140026942:	(bad)  
   140026943:	jmp    QWORD PTR [rcx+0x12]
   140026946:	(bad)  
   140026947:	jmp    QWORD PTR [rcx+0x12]
   14002694a:	(bad)  
   14002694b:	jmp    QWORD PTR [rcx+0x12]
   14002694e:	(bad)  
   14002694f:	jmp    QWORD PTR [rcx+0x12]
   140026952:	(bad)  
   140026953:	jmp    QWORD PTR [rcx+0x12]
   140026956:	(bad)  
   140026957:	inc    DWORD PTR [rdi-0x300abb5]
   14002695d:	cli    
   14002695e:	sti    
   14002695f:	(bad)  
   140026960:	(bad)  
   140026961:	(bad)  
   140026962:	(bad)  
   140026963:	(bad)  
   140026964:	(bad)  
   140026965:	(bad)  
   140026966:	(bad)  
   140026967:	(bad)  
   140026968:	(bad)  
   140026969:	(bad)  
   14002696a:	(bad)  
   14002696b:	(bad)  
   14002696c:	(bad)  
   14002696d:	(bad)  
   14002696e:	(bad)  
   14002696f:	(bad)  
   140026970:	(bad)  
   140026971:	(bad)  
   140026972:	(bad)  
   140026973:	(bad)  
   140026974:	(bad)  
   140026975:	(bad)  
   140026976:	(bad)  
   140026977:	(bad)  
   140026978:	(bad)  
   140026979:	(bad)  
   14002697a:	(bad)  
   14002697b:	(bad)  
   14002697c:	(bad)  
   14002697d:	(bad)  
   14002697e:	(bad)  
   14002697f:	(bad)  
   140026980:	(bad)  
   140026982:	sar    edi,1
   140026984:	(bad)  
   140026985:	(bad)  
   140026986:	(bad)  
   140026987:	(bad)  
   140026988:	(bad)  
   140026989:	(bad)  
   14002698a:	(bad)  
   14002698b:	(bad)  
   14002698c:	(bad)  
   14002698d:	(bad)  
   14002698e:	(bad)  
   14002698f:	(bad)  
   140026990:	(bad)  
   140026991:	(bad)  
   140026992:	(bad)  
   140026993:	jmp    QWORD PTR [rcx+0x12]
   140026996:	(bad)  
   140026997:	jmp    QWORD PTR [rcx+0x12]
   14002699a:	(bad)  
   14002699b:	jmp    QWORD PTR [rcx+0x12]
   14002699e:	(bad)  
   14002699f:	jmp    QWORD PTR [rcx+0x12]
   1400269a2:	(bad)  
   1400269a3:	jmp    QWORD PTR [rcx+0x12]
   1400269a6:	(bad)  
   1400269a7:	jmp    QWORD PTR [rcx+0x12]
   1400269aa:	(bad)  
   1400269ab:	jmp    QWORD PTR [rcx+0x12]
   1400269ae:	(bad)  
   1400269af:	jmp    QWORD PTR [rcx+0x12]
   1400269b2:	(bad)  
   1400269b3:	jmp    QWORD PTR [rcx+0x12]
   1400269b6:	(bad)  
   1400269b7:	jmp    QWORD PTR [rcx+0x12]
   1400269ba:	(bad)  
   1400269bb:	jmp    QWORD PTR [rcx+0x12]
   1400269be:	(bad)  
   1400269bf:	jmp    QWORD PTR [rcx+0x12]
   1400269c2:	(bad)  
   1400269c3:	jmp    QWORD PTR [rcx+0x12]
   1400269c6:	(bad)  
   1400269c7:	jmp    QWORD PTR [rcx+0x12]
   1400269ca:	(bad)  
   1400269cb:	jmp    QWORD PTR [rcx+0x12]
   1400269ce:	(bad)  
   1400269cf:	jmp    FWORD PTR [rsi+0x26]
   1400269d2:	xor    edi,edi
   1400269d4:	jrcxz  0x1400269ab
   1400269d6:	xlat   BYTE PTR ds:[rbx]
   1400269d7:	(bad)  
   1400269d8:	(bad)  
   1400269d9:	(bad)  
   1400269da:	(bad)  
   1400269db:	push   rax
   1400269dd:	lock lock in eax,0x4e
   1400269e1:	rex.WRX
   1400269e2:	rex.WRX
   1400269e3:	rex.WRB add BYTE PTR [r8],r8b
   1400269e6:	add    BYTE PTR [rcx],ah
   1400269e8:	add    BYTE PTR [rax],al
   1400269ea:	add    BYTE PTR [rax],dl
   1400269ec:	add    BYTE PTR [rax],al
   1400269ee:	add    BYTE PTR [rsi],al
   1400269f0:	add    BYTE PTR [rax],al
   1400269f2:	add    BYTE PTR [rdx],al
   1400269f4:	add    BYTE PTR [rax],al
   1400269f6:	add    BYTE PTR [rcx],al
	...
   140026b14:	add    BYTE PTR [rax],al
   140026b16:	add    BYTE PTR [rcx],al
   140026b18:	add    BYTE PTR [rax],al
   140026b1a:	add    BYTE PTR [rdx],al
   140026b1c:	add    BYTE PTR [rax],al
   140026b1e:	add    BYTE PTR [rbx],al
   140026b20:	add    BYTE PTR [rax],al
   140026b22:	add    BYTE PTR [rdi],al
   140026b24:	add    BYTE PTR [rax],al
   140026b26:	add    BYTE PTR [rax+rax*1],cl
   140026b29:	add    BYTE PTR [rax],al
   140026b2b:	adc    eax,0x21000000
   140026b30:	add    BYTE PTR [rax],al
   140026b32:	add    BYTE PTR [rax],dh
   140026b34:	add    BYTE PTR [rax],al
   140026b36:	add    BYTE PTR [rbp+0x32],al
   140026b39:	xor    dh,BYTE PTR [rdx]
   140026b3b:	ins    BYTE PTR es:[rdi],dx
   140026b3c:	(bad)  
   140026b3d:	(bad)  
   140026b3e:	(bad)  
   140026b3f:	(bad)  
   140026b40:	(bad)  
   140026b41:	(bad)  
   140026b42:	(bad)  
   140026b43:	jmp    QWORD PTR [rcx+0x12]
   140026b46:	(bad)  
   140026b47:	jmp    QWORD PTR [rcx+0x12]
   140026b4a:	(bad)  
   140026b4b:	jmp    QWORD PTR [rcx+0x12]
   140026b4e:	(bad)  
   140026b4f:	jmp    QWORD PTR [rcx+0x12]
   140026b52:	(bad)  
   140026b53:	jmp    QWORD PTR [rbp+0x18]
   140026b56:	and    edi,edi
   140026b58:	in     al,dx
   140026b59:	jrcxz  0x140026b40
   140026b5b:	(bad)  
   140026b5c:	(bad)  
   140026b5d:	(bad)  
   140026b5e:	(bad)  
   140026b5f:	(bad)  
   140026b60:	(bad)  
   140026b61:	(bad)  
   140026b62:	(bad)  
   140026b63:	(bad)  
   140026b64:	(bad)  
   140026b65:	(bad)  
   140026b66:	(bad)  
   140026b67:	(bad)  
   140026b68:	(bad)  
   140026b69:	(bad)  
   140026b6a:	(bad)  
   140026b6b:	dec    ebp
   140026b6d:	mov    ah,0xb8
   140026b6f:	call   FWORD PTR [rcx-0x6b00929a]
   140026b75:	pop    rdi
   140026b76:	addr32 inc ebp
   140026b79:	test   eax,0xfefeffad
   140026b7e:	(bad)  
   140026b7f:	(bad)  
   140026b80:	(bad)  
   140026b81:	(bad)  
   140026b82:	(bad)  
   140026b83:	(bad)  
   140026b84:	(bad)  
   140026b85:	(bad)  
   140026b86:	(bad)  
   140026b87:	(bad)  
   140026b88:	(bad)  
   140026b89:	(bad)  
   140026b8a:	(bad)  
   140026b8b:	(bad)  
   140026b8c:	(bad)  
   140026b8d:	(bad)  
   140026b8e:	(bad)  
   140026b8f:	(bad)  
   140026b90:	(bad)  
   140026b91:	(bad)  
   140026b92:	(bad)  
   140026b93:	jmp    QWORD PTR [rcx+0x12]
   140026b96:	(bad)  
   140026b97:	jmp    QWORD PTR [rcx+0x12]
   140026b9a:	(bad)  
   140026b9b:	jmp    QWORD PTR [rcx+0x12]
   140026b9e:	(bad)  
   140026b9f:	jmp    QWORD PTR [rcx+0x12]
   140026ba2:	(bad)  
   140026ba3:	jmp    QWORD PTR [rcx+0x12]
   140026ba6:	(bad)  
   140026ba7:	jmp    QWORD PTR [rcx+0x12]
   140026baa:	(bad)  
   140026bab:	jmp    QWORD PTR [rcx+0x12]
   140026bae:	(bad)  
   140026baf:	jmp    QWORD PTR [rcx+0x12]
   140026bb2:	(bad)  
   140026bb3:	jmp    QWORD PTR [rcx+0x12]
   140026bb6:	(bad)  
   140026bb7:	jmp    QWORD PTR [rcx+0x12]
   140026bba:	(bad)  
   140026bbb:	jmp    QWORD PTR [rcx+0x12]
   140026bbe:	(bad)  
   140026bbf:	jmp    QWORD PTR [rcx+0x12]
   140026bc2:	(bad)  
   140026bc3:	jmp    QWORD PTR [rcx+0x12]
   140026bc6:	(bad)  
   140026bc7:	jmp    QWORD PTR [rcx+0x12]
   140026bca:	(bad)  
   140026bcb:	jmp    QWORD PTR [rcx+0x12]
   140026bce:	(bad)  
   140026bcf:	jmp    QWORD PTR [rcx+0x12]
   140026bd2:	(bad)  
   140026bd3:	jmp    FWORD PTR [rdi+0x26]
   140026bd6:	xor    edi,edi
   140026bd8:	in     al,0xd6
   140026bda:	fdivr  st,st(7)
   140026bdc:	(bad)  
   140026bdd:	(bad)  
   140026bde:	(bad)  
   140026bdf:	push   rdx
   140026be1:	repnz repnz fisubr WORD PTR [rax+0x68]
   140026be6:	push   0x35
   140026beb:	sldt   WORD PTR [rax]
   140026bee:	add    BYTE PTR [rip+0x2000000],al        # 0x142026bf4
   140026bf4:	add    BYTE PTR [rax],al
   140026bf6:	add    BYTE PTR [rcx],al
	...
   140026d0c:	add    BYTE PTR [rax],al
   140026d0e:	add    BYTE PTR [rcx],al
   140026d10:	add    BYTE PTR [rax],al
   140026d12:	add    BYTE PTR [rcx],al
   140026d14:	add    BYTE PTR [rax],al
   140026d16:	add    BYTE PTR [rdx],al
   140026d18:	add    BYTE PTR [rax],al
   140026d1a:	add    BYTE PTR [rbx],al
   140026d1c:	add    BYTE PTR [rax],al
   140026d1e:	add    BYTE PTR [rdi],al
   140026d20:	add    BYTE PTR [rax],al
   140026d22:	add    BYTE PTR [rax+rax*1],cl
   140026d25:	add    BYTE PTR [rax],al
   140026d27:	adc    eax,0x21000000
   140026d2c:	add    BYTE PTR [rax],al
   140026d2e:	add    BYTE PTR [rdi],ch
   140026d30:	add    BYTE PTR [rax],al
   140026d32:	add    BYTE PTR [rdx+0x37],al
   140026d35:	(bad)  
   140026d36:	(bad)  
   140026d37:	addr32 (bad) 
   140026d39:	(bad)  
   140026d3a:	(bad)  
   140026d3b:	out    0xff,al
   140026d3d:	(bad)  
   140026d3e:	(bad)  
   140026d3f:	(bad)  
   140026d40:	(bad)  
   140026d41:	(bad)  
   140026d42:	(bad)  
   140026d43:	jmp    QWORD PTR [rcx+0x12]
   140026d46:	(bad)  
   140026d47:	jmp    QWORD PTR [rcx+0x12]
   140026d4a:	(bad)  
   140026d4b:	jmp    QWORD PTR [rcx+0x12]
   140026d4e:	(bad)  
   140026d4f:	jmp    QWORD PTR [rcx+0x12]
   140026d52:	(bad)  
   140026d53:	call   FWORD PTR [rbx-0x8e97]
   140026d59:	(bad)  
   140026d5a:	(bad)  
   140026d5b:	(bad)  
   140026d5c:	(bad)  
   140026d5d:	(bad)  
   140026d5e:	(bad)  
   140026d5f:	(bad)  
   140026d60:	(bad)  
   140026d61:	(bad)  
   140026d62:	(bad)  
   140026d63:	(bad)  
   140026d64:	(bad)  
   140026d65:	(bad)  
   140026d66:	(bad)  
   140026d67:	jmp    FWORD PTR [rsi+0x61ff8c86]
   140026d6d:	adc    bl,BYTE PTR [rsi]
   140026d6f:	jmp    QWORD PTR [rcx+0x12]
   140026d72:	(bad)  
   140026d73:	jmp    QWORD PTR [rcx+0x12]
   140026d76:	(bad)  
   140026d77:	jmp    QWORD PTR [rcx+0x12]
   140026d7a:	(bad)  
   140026d7b:	jmp    QWORD PTR [rbx-0x838b]
   140026d81:	(bad)  
   140026d82:	(bad)  
   140026d83:	(bad)  
   140026d84:	(bad)  
   140026d85:	(bad)  
   140026d86:	(bad)  
   140026d87:	(bad)  
   140026d88:	(bad)  
   140026d89:	(bad)  
   140026d8a:	(bad)  
   140026d8b:	(bad)  
   140026d8c:	(bad)  
   140026d8d:	(bad)  
   140026d8e:	(bad)  
   140026d8f:	(bad)  
   140026d90:	(bad)  
   140026d91:	(bad)  
   140026d92:	(bad)  
   140026d93:	jmp    QWORD PTR [rcx+0x12]
   140026d96:	(bad)  
   140026d97:	jmp    QWORD PTR [rcx+0x12]
   140026d9a:	(bad)  
   140026d9b:	jmp    QWORD PTR [rcx+0x12]
   140026d9e:	(bad)  
   140026d9f:	jmp    QWORD PTR [rcx+0x12]
   140026da2:	(bad)  
   140026da3:	jmp    QWORD PTR [rcx+0x12]
   140026da6:	(bad)  
   140026da7:	jmp    QWORD PTR [rcx+0x12]
   140026daa:	(bad)  
   140026dab:	jmp    QWORD PTR [rcx+0x12]
   140026dae:	(bad)  
   140026daf:	jmp    QWORD PTR [rcx+0x12]
   140026db2:	(bad)  
   140026db3:	jmp    QWORD PTR [rcx+0x12]
   140026db6:	(bad)  
   140026db7:	jmp    QWORD PTR [rcx+0x12]
   140026dba:	(bad)  
   140026dbb:	jmp    QWORD PTR [rcx+0x12]
   140026dbe:	(bad)  
   140026dbf:	jmp    QWORD PTR [rcx+0x12]
   140026dc2:	(bad)  
   140026dc3:	jmp    QWORD PTR [rcx+0x12]
   140026dc6:	(bad)  
   140026dc7:	jmp    QWORD PTR [rcx+0x12]
   140026dca:	(bad)  
   140026dcb:	jmp    QWORD PTR [rcx+0x12]
   140026dce:	(bad)  
   140026dcf:	jmp    QWORD PTR [rcx+0x12]
   140026dd2:	(bad)  
   140026dd3:	jmp    FWORD PTR [rdi+0x26]
   140026dd6:	xor    edi,edi
   140026dd8:	in     al,0xd6
   140026dda:	fdivr  st,st(7)
   140026ddc:	(bad)  
   140026ddd:	(bad)  
   140026dde:	(bad)  
   140026ddf:	push   rbx
   140026de1:	repz repz fnsave [rdx+0x72]
   140026de6:	jb     0x140026e19
   140026de8:	add    BYTE PTR [rax],al
   140026dea:	add    BYTE PTR [rax+rax*1],cl
   140026ded:	add    BYTE PTR [rax],al
   140026def:	add    al,0x0
   140026df1:	add    BYTE PTR [rax],al
   140026df3:	add    DWORD PTR [rax],eax
	...
   140026e39:	add    BYTE PTR [rax],al
   140026e3b:	add    DWORD PTR [rax],eax
   140026e3d:	add    BYTE PTR [rax],al
   140026e3f:	add    DWORD PTR [rax],eax
   140026e41:	add    BYTE PTR [rax],al
   140026e43:	add    DWORD PTR [rax],eax
   140026e45:	add    BYTE PTR [rax],al
   140026e47:	add    DWORD PTR [rax],eax
   140026e49:	add    BYTE PTR [rax],al
   140026e4b:	add    DWORD PTR [rax],eax
   140026e4d:	add    BYTE PTR [rax],al
   140026e4f:	add    al,BYTE PTR [rax]
   140026e51:	add    BYTE PTR [rax],al
   140026e53:	add    al,BYTE PTR [rax]
   140026e55:	add    BYTE PTR [rax],al
   140026e57:	add    al,BYTE PTR [rax]
   140026e59:	add    BYTE PTR [rax],al
   140026e5b:	add    al,BYTE PTR [rax]
   140026e5d:	add    BYTE PTR [rax],al
   140026e5f:	add    al,BYTE PTR [rax]
   140026e61:	add    BYTE PTR [rax],al
   140026e63:	add    al,BYTE PTR [rax]
   140026e65:	add    BYTE PTR [rax],al
   140026e67:	add    al,BYTE PTR [rax]
   140026e69:	add    BYTE PTR [rax],al
   140026e6b:	add    al,BYTE PTR [rax]
   140026e6d:	add    BYTE PTR [rax],al
   140026e6f:	add    al,BYTE PTR [rax]
   140026e71:	add    BYTE PTR [rax],al
   140026e73:	add    al,BYTE PTR [rax]
   140026e75:	add    BYTE PTR [rax],al
   140026e77:	add    al,BYTE PTR [rax]
   140026e79:	add    BYTE PTR [rax],al
   140026e7b:	add    al,BYTE PTR [rax]
   140026e7d:	add    BYTE PTR [rax],al
   140026e7f:	add    al,BYTE PTR [rax]
   140026e81:	add    BYTE PTR [rax],al
   140026e83:	add    al,BYTE PTR [rax]
   140026e85:	add    BYTE PTR [rax],al
   140026e87:	add    al,BYTE PTR [rax]
   140026e89:	add    BYTE PTR [rax],al
   140026e8b:	add    al,BYTE PTR [rax]
   140026e8d:	add    BYTE PTR [rax],al
   140026e8f:	add    al,BYTE PTR [rax]
   140026e91:	add    BYTE PTR [rax],al
   140026e93:	add    al,BYTE PTR [rax]
   140026e95:	add    BYTE PTR [rax],al
   140026e97:	add    al,BYTE PTR [rax]
   140026e99:	add    BYTE PTR [rax],al
   140026e9b:	add    al,BYTE PTR [rax]
   140026e9d:	add    BYTE PTR [rax],al
   140026e9f:	add    al,BYTE PTR [rax]
   140026ea1:	add    BYTE PTR [rax],al
   140026ea3:	add    al,BYTE PTR [rax]
   140026ea5:	add    BYTE PTR [rax],al
   140026ea7:	add    al,BYTE PTR [rax]
   140026ea9:	add    BYTE PTR [rax],al
   140026eab:	add    al,BYTE PTR [rax]
   140026ead:	add    BYTE PTR [rax],al
   140026eaf:	add    al,BYTE PTR [rax]
   140026eb1:	add    BYTE PTR [rax],al
   140026eb3:	add    al,BYTE PTR [rax]
   140026eb5:	add    BYTE PTR [rax],al
   140026eb7:	add    al,BYTE PTR [rax]
   140026eb9:	add    BYTE PTR [rax],al
   140026ebb:	add    al,BYTE PTR [rax]
   140026ebd:	add    BYTE PTR [rax],al
   140026ebf:	add    al,BYTE PTR [rax]
   140026ec1:	add    BYTE PTR [rax],al
   140026ec3:	add    al,BYTE PTR [rax]
   140026ec5:	add    BYTE PTR [rax],al
   140026ec7:	add    al,BYTE PTR [rax]
   140026ec9:	add    BYTE PTR [rax],al
   140026ecb:	add    al,BYTE PTR [rax]
   140026ecd:	add    BYTE PTR [rax],al
   140026ecf:	add    al,BYTE PTR [rax]
   140026ed1:	add    BYTE PTR [rax],al
   140026ed3:	add    al,BYTE PTR [rax]
   140026ed5:	add    BYTE PTR [rax],al
   140026ed7:	add    al,BYTE PTR [rax]
   140026ed9:	add    BYTE PTR [rax],al
   140026edb:	add    al,BYTE PTR [rax]
   140026edd:	add    BYTE PTR [rax],al
   140026edf:	add    al,BYTE PTR [rax]
   140026ee1:	add    BYTE PTR [rax],al
   140026ee3:	add    al,BYTE PTR [rax]
   140026ee5:	add    BYTE PTR [rax],al
   140026ee7:	add    al,BYTE PTR [rax]
   140026ee9:	add    BYTE PTR [rax],al
   140026eeb:	add    al,BYTE PTR [rax]
   140026eed:	add    BYTE PTR [rax],al
   140026eef:	add    al,BYTE PTR [rax]
   140026ef1:	add    BYTE PTR [rax],al
   140026ef3:	add    al,BYTE PTR [rax]
   140026ef5:	add    BYTE PTR [rax],al
   140026ef7:	add    al,BYTE PTR [rax]
   140026ef9:	add    BYTE PTR [rax],al
   140026efb:	add    al,BYTE PTR [rax]
   140026efd:	add    BYTE PTR [rax],al
   140026eff:	add    al,BYTE PTR [rax]
   140026f01:	add    BYTE PTR [rax],al
   140026f03:	add    al,BYTE PTR [rax]
   140026f05:	add    BYTE PTR [rax],al
   140026f07:	add    al,BYTE PTR [rax]
   140026f09:	add    BYTE PTR [rax],al
   140026f0b:	add    al,BYTE PTR [rax]
   140026f0d:	add    BYTE PTR [rax],al
   140026f0f:	add    al,BYTE PTR [rax]
   140026f11:	add    BYTE PTR [rax],al
   140026f13:	add    eax,DWORD PTR [rax]
   140026f15:	add    BYTE PTR [rax],al
   140026f17:	add    al,0x0
   140026f19:	add    BYTE PTR [rax],al
   140026f1b:	(bad)  
   140026f1c:	add    BYTE PTR [rax],al
   140026f1e:	add    BYTE PTR [rip+0x15000000],cl        # 0x155026f24
   140026f24:	add    BYTE PTR [rax],al
   140026f26:	add    BYTE PTR [rcx],ah
   140026f28:	add    BYTE PTR [rax],al
   140026f2a:	add    BYTE PTR [rdi],ch
   140026f2c:	add    BYTE PTR [rax],al
   140026f2e:	add    BYTE PTR [rdx+0x34],al
   140026f31:	xor    al,0x34
   140026f33:	gs (bad) 
   140026f35:	(bad)  
   140026f36:	(bad)  
   140026f37:	in     eax,0xff
   140026f39:	(bad)  
   140026f3a:	(bad)  
   140026f3b:	(bad)  
   140026f3c:	(bad)  
   140026f3d:	(bad)  
   140026f3e:	(bad)  
   140026f3f:	(bad)  
   140026f40:	(bad)  
   140026f41:	(bad)  
   140026f42:	(bad)  
   140026f43:	jmp    QWORD PTR [rcx+0x12]
   140026f46:	(bad)  
   140026f47:	jmp    QWORD PTR [rcx+0x12]
   140026f4a:	(bad)  
   140026f4b:	jmp    QWORD PTR [rcx+0x12]
   140026f4e:	(bad)  
   140026f4f:	jmp    QWORD PTR [rcx+0x12]
   140026f52:	(bad)  
   140026f53:	dec    edx
   140026f55:	scas   eax,DWORD PTR es:[rdi]
   140026f56:	mov    bl,0xff
   140026f58:	(bad)  
   140026f59:	(bad)  
   140026f5a:	(bad)  
   140026f5b:	(bad)  
   140026f5c:	(bad)  
   140026f5d:	(bad)  
   140026f5e:	(bad)  
   140026f5f:	(bad)  
   140026f60:	(bad)  
   140026f61:	(bad)  
   140026f62:	(bad)  
   140026f63:	push   rcx
   140026f65:	jmp    0x140026f53
   140026f67:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   140026f6b:	jmp    QWORD PTR [rcx+0x12]
   140026f6e:	(bad)  
   140026f6f:	jmp    QWORD PTR [rcx+0x12]
   140026f72:	(bad)  
   140026f73:	jmp    QWORD PTR [rcx+0x12]
   140026f76:	(bad)  
   140026f77:	jmp    QWORD PTR [rcx+0x12]
   140026f7a:	(bad)  
   140026f7b:	jmp    QWORD PTR [rcx+0x12]
   140026f7e:	(bad)  
   140026f7f:	(bad)  
   140026f80:	fmulp  st(6),st
   140026f82:	sar    bh,1
   140026f84:	(bad)  
   140026f85:	(bad)  
   140026f86:	(bad)  
   140026f87:	(bad)  
   140026f88:	(bad)  
   140026f89:	(bad)  
   140026f8a:	(bad)  
   140026f8b:	(bad)  
   140026f8c:	(bad)  
   140026f8d:	(bad)  
   140026f8e:	(bad)  
   140026f8f:	(bad)  
   140026f90:	(bad)  
   140026f91:	(bad)  
   140026f92:	(bad)  
   140026f93:	jmp    QWORD PTR [rcx+0x12]
   140026f96:	(bad)  
   140026f97:	jmp    QWORD PTR [rcx+0x12]
   140026f9a:	(bad)  
   140026f9b:	jmp    QWORD PTR [rcx+0x12]
   140026f9e:	(bad)  
   140026f9f:	jmp    QWORD PTR [rcx+0x12]
   140026fa2:	(bad)  
   140026fa3:	jmp    QWORD PTR [rcx+0x12]
   140026fa6:	(bad)  
   140026fa7:	jmp    QWORD PTR [rcx+0x12]
   140026faa:	(bad)  
   140026fab:	jmp    QWORD PTR [rcx+0x12]
   140026fae:	(bad)  
   140026faf:	jmp    QWORD PTR [rcx+0x12]
   140026fb2:	(bad)  
   140026fb3:	jmp    QWORD PTR [rcx+0x12]
   140026fb6:	(bad)  
   140026fb7:	jmp    QWORD PTR [rcx+0x12]
   140026fba:	(bad)  
   140026fbb:	jmp    QWORD PTR [rcx+0x12]
   140026fbe:	(bad)  
   140026fbf:	jmp    QWORD PTR [rcx+0x12]
   140026fc2:	(bad)  
   140026fc3:	jmp    QWORD PTR [rcx+0x12]
   140026fc6:	(bad)  
   140026fc7:	jmp    QWORD PTR [rcx+0x12]
   140026fca:	(bad)  
   140026fcb:	jmp    QWORD PTR [rcx+0x12]
   140026fce:	(bad)  
   140026fcf:	jmp    FWORD PTR [rsi+0x26]
   140026fd2:	xor    edi,edi
   140026fd4:	jrcxz  0x140026fab
   140026fd6:	xlat   BYTE PTR ds:[rbx]
   140026fd7:	(bad)  
   140026fd8:	(bad)  
   140026fd9:	(bad)  
   140026fda:	(bad)  
   140026fdb:	push   rbx
   140026fdd:	repz repz loope 0x14002704a
   140026fe1:	imul   ebp,DWORD PTR [rcx+0x3c],0x13000000
   140026fe8:	add    BYTE PTR [rax],al
   140026fea:	add    BYTE PTR [rdi],al
   140026fec:	add    BYTE PTR [rax],al
   140026fee:	add    BYTE PTR [rdx],al
   140026ff0:	add    BYTE PTR [rax],al
   140026ff2:	add    BYTE PTR [rcx],al
	...
   140027030:	add    BYTE PTR [rax],al
   140027032:	add    BYTE PTR [rcx],al
   140027034:	add    BYTE PTR [rax],al
   140027036:	add    BYTE PTR [rcx],al
   140027038:	add    BYTE PTR [rax],al
   14002703a:	add    BYTE PTR [rdx],al
   14002703c:	add    BYTE PTR [rax],al
   14002703e:	add    BYTE PTR [rbx],al
   140027040:	add    BYTE PTR [rax],al
   140027042:	add    BYTE PTR [rax+rax*1],al
   140027045:	add    BYTE PTR [rax],al
   140027047:	add    al,0x0
   140027049:	add    BYTE PTR [rax],al
   14002704b:	add    eax,0x5000000
   140027050:	add    BYTE PTR [rax],al
   140027052:	add    BYTE PTR [rip+0x5000000],al        # 0x145027058
   140027058:	add    BYTE PTR [rax],al
   14002705a:	add    BYTE PTR [rip+0x5000000],al        # 0x145027060
   140027060:	add    BYTE PTR [rax],al
   140027062:	add    BYTE PTR [rip+0x5000000],al        # 0x145027068
   140027068:	add    BYTE PTR [rax],al
   14002706a:	add    BYTE PTR [rip+0x5000000],al        # 0x145027070
   140027070:	add    BYTE PTR [rax],al
   140027072:	add    BYTE PTR [rip+0x5000000],al        # 0x145027078
   140027078:	add    BYTE PTR [rax],al
   14002707a:	add    BYTE PTR [rip+0x5000000],al        # 0x145027080
   140027080:	add    BYTE PTR [rax],al
   140027082:	add    BYTE PTR [rip+0x5000000],al        # 0x145027088
   140027088:	add    BYTE PTR [rax],al
   14002708a:	add    BYTE PTR [rip+0x5000000],al        # 0x145027090
   140027090:	add    BYTE PTR [rax],al
   140027092:	add    BYTE PTR [rip+0x5000000],al        # 0x145027098
   140027098:	add    BYTE PTR [rax],al
   14002709a:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270a0
   1400270a0:	add    BYTE PTR [rax],al
   1400270a2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270a8
   1400270a8:	add    BYTE PTR [rax],al
   1400270aa:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270b0
   1400270b0:	add    BYTE PTR [rax],al
   1400270b2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270b8
   1400270b8:	add    BYTE PTR [rax],al
   1400270ba:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270c0
   1400270c0:	add    BYTE PTR [rax],al
   1400270c2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270c8
   1400270c8:	add    BYTE PTR [rax],al
   1400270ca:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270d0
   1400270d0:	add    BYTE PTR [rax],al
   1400270d2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270d8
   1400270d8:	add    BYTE PTR [rax],al
   1400270da:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270e0
   1400270e0:	add    BYTE PTR [rax],al
   1400270e2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270e8
   1400270e8:	add    BYTE PTR [rax],al
   1400270ea:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270f0
   1400270f0:	add    BYTE PTR [rax],al
   1400270f2:	add    BYTE PTR [rip+0x5000000],al        # 0x1450270f8
   1400270f8:	add    BYTE PTR [rax],al
   1400270fa:	add    BYTE PTR [rip+0x5000000],al        # 0x145027100
   140027100:	add    BYTE PTR [rax],al
   140027102:	add    BYTE PTR [rip+0x5000000],al        # 0x145027108
   140027108:	add    BYTE PTR [rax],al
   14002710a:	add    BYTE PTR [rip+0x5000000],al        # 0x145027110
   140027110:	add    BYTE PTR [rax],al
   140027112:	add    BYTE PTR [rdi],al
   140027114:	add    BYTE PTR [rax],al
   140027116:	add    BYTE PTR [rcx],cl
   140027118:	add    BYTE PTR [rax],al
   14002711a:	add    BYTE PTR [rsi],cl
   14002711c:	add    BYTE PTR [rax],al
   14002711e:	add    BYTE PTR [rsi],dl
   140027120:	add    BYTE PTR [rax],al
   140027122:	add    BYTE PTR [rcx],ah
   140027124:	add    BYTE PTR [rax],al
   140027126:	add    BYTE PTR [rdi],ch
   140027128:	add    BYTE PTR [rax],al
   14002712a:	add    BYTE PTR [rdx+0x36],al
   14002712d:	ss ss data16 (bad) 
   140027131:	(bad)  
   140027132:	(bad)  
   140027133:	out    0xff,al
   140027135:	(bad)  
   140027136:	(bad)  
   140027137:	(bad)  
   140027138:	(bad)  
   14002713a:	(bad)  
   14002713b:	(bad)  
   14002713c:	(bad)  
   14002713d:	(bad)  
   14002713e:	(bad)  
   14002713f:	(bad)  
   140027140:	(bad)  
   140027141:	(bad)  
   140027142:	(bad)  
   140027143:	jmp    QWORD PTR [rcx+0x12]
   140027146:	(bad)  
   140027147:	jmp    QWORD PTR [rcx+0x12]
   14002714a:	(bad)  
   14002714b:	jmp    QWORD PTR [rcx+0x12]
   14002714e:	(bad)  
   14002714f:	jmp    QWORD PTR [rcx+0x12]
   140027152:	(bad)  
   140027153:	(bad)  
   140027154:	jmp    0x140027136
   140027156:	loop   0x140027157
   140027158:	(bad)  
   140027159:	(bad)  
   14002715a:	(bad)  
   14002715b:	(bad)  
   14002715c:	(bad)  
   14002715d:	(bad)  
   14002715e:	(bad)  
   14002715f:	(bad)  
   140027160:	(bad)  
   140027161:	(bad)  
   140027162:	(bad)  
   140027163:	inc    edx
   140027165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027166:	test   eax,0x1e1261ff
   14002716b:	jmp    QWORD PTR [rcx+0x12]
   14002716e:	(bad)  
   14002716f:	jmp    QWORD PTR [rcx+0x12]
   140027172:	(bad)  
   140027173:	jmp    QWORD PTR [rcx+0x12]
   140027176:	(bad)  
   140027177:	jmp    QWORD PTR [rcx+0x12]
   14002717a:	(bad)  
   14002717b:	jmp    QWORD PTR [rcx+0x12]
   14002717e:	(bad)  
   14002717f:	jmp    FWORD PTR [rsi-0x737a]
   140027185:	(bad)  
   140027186:	(bad)  
   140027187:	(bad)  
   140027188:	(bad)  
   140027189:	(bad)  
   14002718a:	(bad)  
   14002718b:	(bad)  
   14002718c:	(bad)  
   14002718d:	(bad)  
   14002718e:	(bad)  
   14002718f:	(bad)  
   140027190:	(bad)  
   140027191:	(bad)  
   140027192:	(bad)  
   140027193:	jmp    QWORD PTR [rcx+0x12]
   140027196:	(bad)  
   140027197:	jmp    QWORD PTR [rcx+0x12]
   14002719a:	(bad)  
   14002719b:	jmp    QWORD PTR [rcx+0x12]
   14002719e:	(bad)  
   14002719f:	jmp    QWORD PTR [rcx+0x12]
   1400271a2:	(bad)  
   1400271a3:	jmp    QWORD PTR [rcx+0x12]
   1400271a6:	(bad)  
   1400271a7:	jmp    QWORD PTR [rcx+0x12]
   1400271aa:	(bad)  
   1400271ab:	jmp    QWORD PTR [rcx+0x12]
   1400271ae:	(bad)  
   1400271af:	jmp    QWORD PTR [rcx+0x12]
   1400271b2:	(bad)  
   1400271b3:	jmp    QWORD PTR [rcx+0x12]
   1400271b6:	(bad)  
   1400271b7:	jmp    QWORD PTR [rcx+0x12]
   1400271ba:	(bad)  
   1400271bb:	jmp    QWORD PTR [rcx+0x12]
   1400271be:	(bad)  
   1400271bf:	jmp    QWORD PTR [rcx+0x12]
   1400271c2:	(bad)  
   1400271c3:	jmp    QWORD PTR [rcx+0x12]
   1400271c6:	(bad)  
   1400271c7:	jmp    QWORD PTR [rcx+0x12]
   1400271ca:	(bad)  
   1400271cb:	jmp    FWORD PTR [rsi+0x26]
   1400271ce:	xor    edi,edi
   1400271d0:	jrcxz  0x1400271a7
   1400271d2:	xlat   BYTE PTR ds:[rbx]
   1400271d3:	(bad)  
   1400271d4:	(bad)  
   1400271d5:	(bad)  
   1400271d6:	(bad)  
   1400271d7:	push   rbx
   1400271d9:	repz repz loope 0x140027243
   1400271dd:	data16 data16 add BYTE PTR ds:[rax],al
   1400271e2:	add    BYTE PTR [rsi],dl
   1400271e4:	add    BYTE PTR [rax],al
   1400271e6:	add    BYTE PTR [rcx],cl
   1400271e8:	add    BYTE PTR [rax],al
   1400271ea:	add    BYTE PTR [rax+rax*1],al
   1400271ed:	add    BYTE PTR [rax],al
   1400271ef:	add    DWORD PTR [rax],eax
	...
   14002722d:	add    BYTE PTR [rax],al
   14002722f:	add    DWORD PTR [rax],eax
   140027231:	add    BYTE PTR [rax],al
   140027233:	add    DWORD PTR [rax],eax
   140027235:	add    BYTE PTR [rax],al
   140027237:	add    eax,DWORD PTR [rax]
   140027239:	add    BYTE PTR [rax],al
   14002723b:	add    eax,0x7000000
   140027240:	add    BYTE PTR [rax],al
   140027242:	add    BYTE PTR [rcx],cl
   140027244:	add    BYTE PTR [rax],al
   140027246:	add    BYTE PTR [rbx],cl
   140027248:	add    BYTE PTR [rax],al
   14002724a:	add    BYTE PTR [rax+rax*1],cl
   14002724d:	add    BYTE PTR [rax],al
   14002724f:	or     al,0x0
   140027251:	add    BYTE PTR [rax],al
   140027253:	or     al,0x0
   140027255:	add    BYTE PTR [rax],al
   140027257:	or     al,0x0
   140027259:	add    BYTE PTR [rax],al
   14002725b:	or     al,0x0
   14002725d:	add    BYTE PTR [rax],al
   14002725f:	or     al,0x0
   140027261:	add    BYTE PTR [rax],al
   140027263:	or     al,0x0
   140027265:	add    BYTE PTR [rax],al
   140027267:	or     al,0x0
   140027269:	add    BYTE PTR [rax],al
   14002726b:	or     al,0x0
   14002726d:	add    BYTE PTR [rax],al
   14002726f:	or     al,0x0
   140027271:	add    BYTE PTR [rax],al
   140027273:	or     al,0x0
   140027275:	add    BYTE PTR [rax],al
   140027277:	or     al,0x0
   140027279:	add    BYTE PTR [rax],al
   14002727b:	or     al,0x0
   14002727d:	add    BYTE PTR [rax],al
   14002727f:	or     al,0x0
   140027281:	add    BYTE PTR [rax],al
   140027283:	or     al,0x0
   140027285:	add    BYTE PTR [rax],al
   140027287:	or     al,0x0
   140027289:	add    BYTE PTR [rax],al
   14002728b:	or     al,0x0
   14002728d:	add    BYTE PTR [rax],al
   14002728f:	or     al,0x0
   140027291:	add    BYTE PTR [rax],al
   140027293:	or     al,0x0
   140027295:	add    BYTE PTR [rax],al
   140027297:	or     al,0x0
   140027299:	add    BYTE PTR [rax],al
   14002729b:	or     al,0x0
   14002729d:	add    BYTE PTR [rax],al
   14002729f:	or     al,0x0
   1400272a1:	add    BYTE PTR [rax],al
   1400272a3:	or     al,0x0
   1400272a5:	add    BYTE PTR [rax],al
   1400272a7:	or     al,0x0
   1400272a9:	add    BYTE PTR [rax],al
   1400272ab:	or     al,0x0
   1400272ad:	add    BYTE PTR [rax],al
   1400272af:	or     al,0x0
   1400272b1:	add    BYTE PTR [rax],al
   1400272b3:	or     al,0x0
   1400272b5:	add    BYTE PTR [rax],al
   1400272b7:	or     al,0x0
   1400272b9:	add    BYTE PTR [rax],al
   1400272bb:	or     al,0x0
   1400272bd:	add    BYTE PTR [rax],al
   1400272bf:	or     al,0x0
   1400272c1:	add    BYTE PTR [rax],al
   1400272c3:	or     al,0x0
   1400272c5:	add    BYTE PTR [rax],al
   1400272c7:	or     al,0x0
   1400272c9:	add    BYTE PTR [rax],al
   1400272cb:	or     al,0x0
   1400272cd:	add    BYTE PTR [rax],al
   1400272cf:	or     al,0x0
   1400272d1:	add    BYTE PTR [rax],al
   1400272d3:	or     al,0x0
   1400272d5:	add    BYTE PTR [rax],al
   1400272d7:	or     al,0x0
   1400272d9:	add    BYTE PTR [rax],al
   1400272db:	or     al,0x0
   1400272dd:	add    BYTE PTR [rax],al
   1400272df:	or     al,0x0
   1400272e1:	add    BYTE PTR [rax],al
   1400272e3:	or     al,0x0
   1400272e5:	add    BYTE PTR [rax],al
   1400272e7:	or     al,0x0
   1400272e9:	add    BYTE PTR [rax],al
   1400272eb:	or     al,0x0
   1400272ed:	add    BYTE PTR [rax],al
   1400272ef:	or     al,0x0
   1400272f1:	add    BYTE PTR [rax],al
   1400272f3:	or     al,0x0
   1400272f5:	add    BYTE PTR [rax],al
   1400272f7:	or     al,0x0
   1400272f9:	add    BYTE PTR [rax],al
   1400272fb:	or     al,0x0
   1400272fd:	add    BYTE PTR [rax],al
   1400272ff:	or     al,0x0
   140027301:	add    BYTE PTR [rax],al
   140027303:	or     al,0x0
   140027305:	add    BYTE PTR [rax],al
   140027307:	or     al,0x0
   140027309:	add    BYTE PTR [rax],al
   14002730b:	or     al,0x0
   14002730d:	add    BYTE PTR [rax],al
   14002730f:	or     eax,0xf000000
   140027314:	add    BYTE PTR [rax],al
   140027316:	add    BYTE PTR [rdx],dl
   140027318:	add    BYTE PTR [rax],al
   14002731a:	add    BYTE PTR [rax],bl
   14002731c:	add    BYTE PTR [rax],al
   14002731e:	add    BYTE PTR [rbx],ah
   140027320:	add    BYTE PTR [rax],al
   140027322:	add    BYTE PTR [rax],dh
   140027324:	add    BYTE PTR [rax],al
   140027326:	add    BYTE PTR [rdx+0x34],al
   140027329:	xor    al,0x34
   14002732b:	gs (bad) 
   14002732d:	(bad)  
   14002732e:	(bad)  
   14002732f:	in     eax,0xff
   140027331:	(bad)  
   140027332:	(bad)  
   140027333:	(bad)  
   140027334:	fucom  st(6)
   140027336:	fdivr  st,st(7)
   140027338:	outs   dx,BYTE PTR ds:[rsi]
   14002733a:	(bad)  
   14002733b:	(bad)  
   14002733c:	(bad)  
   14002733d:	(bad)  
   14002733e:	(bad)  
   14002733f:	(bad)  
   140027340:	(bad)  
   140027341:	(bad)  
   140027342:	(bad)  
   140027343:	jmp    QWORD PTR [rcx+0x12]
   140027346:	(bad)  
   140027347:	jmp    QWORD PTR [rcx+0x12]
   14002734a:	(bad)  
   14002734b:	jmp    QWORD PTR [rcx+0x12]
   14002734e:	(bad)  
   14002734f:	jmp    QWORD PTR [rcx+0x12]
   140027352:	(bad)  
   140027353:	(bad)  
   140027354:	clc    
   140027355:	hlt    
   140027356:	hlt    
   140027357:	(bad)  
   140027358:	(bad)  
   140027359:	(bad)  
   14002735a:	(bad)  
   14002735b:	(bad)  
   14002735c:	(bad)  
   14002735d:	(bad)  
   14002735e:	(bad)  
   14002735f:	(bad)  
   140027360:	(bad)  
   140027361:	(bad)  
   140027362:	(bad)  
   140027363:	push   QWORD PTR [rdx+0x61ff928c]
   140027369:	adc    bl,BYTE PTR [rsi]
   14002736b:	jmp    QWORD PTR [rcx+0x12]
   14002736e:	(bad)  
   14002736f:	jmp    QWORD PTR [rcx+0x12]
   140027372:	(bad)  
   140027373:	jmp    QWORD PTR [rcx+0x12]
   140027376:	(bad)  
   140027377:	jmp    QWORD PTR [rcx+0x12]
   14002737a:	(bad)  
   14002737b:	jmp    QWORD PTR [rcx+0x12]
   14002737e:	(bad)  
   14002737f:	call   FWORD PTR [rbx-0x8f98]
   140027385:	(bad)  
   140027386:	(bad)  
   140027387:	(bad)  
   140027388:	(bad)  
   140027389:	(bad)  
   14002738a:	(bad)  
   14002738b:	(bad)  
   14002738c:	(bad)  
   14002738d:	(bad)  
   14002738e:	(bad)  
   14002738f:	(bad)  
   140027390:	(bad)  
   140027391:	(bad)  
   140027392:	(bad)  
   140027393:	jmp    QWORD PTR [rcx+0x12]
   140027396:	(bad)  
   140027397:	jmp    QWORD PTR [rcx+0x12]
   14002739a:	(bad)  
   14002739b:	jmp    QWORD PTR [rcx+0x12]
   14002739e:	(bad)  
   14002739f:	jmp    QWORD PTR [rcx+0x12]
   1400273a2:	(bad)  
   1400273a3:	jmp    QWORD PTR [rcx+0x12]
   1400273a6:	(bad)  
   1400273a7:	jmp    QWORD PTR [rcx+0x12]
   1400273aa:	(bad)  
   1400273ab:	jmp    QWORD PTR [rcx+0x12]
   1400273ae:	(bad)  
   1400273af:	jmp    QWORD PTR [rcx+0x12]
   1400273b2:	(bad)  
   1400273b3:	jmp    QWORD PTR [rcx+0x12]
   1400273b6:	(bad)  
   1400273b7:	jmp    QWORD PTR [rcx+0x12]
   1400273ba:	(bad)  
   1400273bb:	jmp    QWORD PTR [rcx+0x12]
   1400273be:	(bad)  
   1400273bf:	jmp    QWORD PTR [rcx+0x12]
   1400273c2:	(bad)  
   1400273c3:	jmp    QWORD PTR [rcx+0x12]
   1400273c6:	(bad)  
   1400273c7:	jmp    FWORD PTR [rsi+0x26]
   1400273ca:	xor    edi,edi
   1400273cc:	jrcxz  0x1400273a3
   1400273ce:	xlat   BYTE PTR ds:[rbx]
   1400273cf:	(bad)  
   1400273d0:	(bad)  
   1400273d1:	(bad)  
   1400273d2:	(bad)  
   1400273d3:	push   rbx
   1400273d5:	repz repz loope 0x14002743f
   1400273d9:	data16 data16 (bad) 
   1400273dc:	add    BYTE PTR [rax],al
   1400273de:	add    BYTE PTR [rsi],dl
   1400273e0:	add    BYTE PTR [rax],al
   1400273e2:	add    BYTE PTR [rdx],cl
   1400273e4:	add    BYTE PTR [rax],al
   1400273e6:	add    BYTE PTR [rax+rax*1],al
   1400273e9:	add    BYTE PTR [rax],al
   1400273eb:	add    DWORD PTR [rax],eax
   1400273ed:	add    BYTE PTR [rax],al
   1400273ef:	add    DWORD PTR [rax],eax
	...
   14002742d:	add    BYTE PTR [rax],al
   14002742f:	add    DWORD PTR [rax],eax
   140027431:	add    BYTE PTR [rax],al
   140027433:	add    eax,DWORD PTR [rax]
   140027435:	add    BYTE PTR [rax],al
   140027437:	(bad)  
   140027438:	add    BYTE PTR [rax],al
   14002743a:	add    BYTE PTR [rdx],cl
   14002743c:	add    BYTE PTR [rax],al
   14002743e:	add    BYTE PTR [rdi],cl
   140027440:	add    BYTE PTR [rax],al
   140027442:	add    BYTE PTR [rbx],dl
   140027444:	add    BYTE PTR [rax],al
   140027446:	add    BYTE PTR [rsi],dl
   140027448:	add    BYTE PTR [rax],al
   14002744a:	add    BYTE PTR [rax],bl
   14002744c:	add    BYTE PTR [rax],al
   14002744e:	add    BYTE PTR [rax],bl
   140027450:	add    BYTE PTR [rax],al
   140027452:	add    BYTE PTR [rcx],bl
   140027454:	add    BYTE PTR [rax],al
   140027456:	add    BYTE PTR [rcx],bl
   140027458:	add    BYTE PTR [rax],al
   14002745a:	add    BYTE PTR [rcx],bl
   14002745c:	add    BYTE PTR [rax],al
   14002745e:	add    BYTE PTR [rcx],bl
   140027460:	add    BYTE PTR [rax],al
   140027462:	add    BYTE PTR [rcx],bl
   140027464:	add    BYTE PTR [rax],al
   140027466:	add    BYTE PTR [rcx],bl
   140027468:	add    BYTE PTR [rax],al
   14002746a:	add    BYTE PTR [rcx],bl
   14002746c:	add    BYTE PTR [rax],al
   14002746e:	add    BYTE PTR [rcx],bl
   140027470:	add    BYTE PTR [rax],al
   140027472:	add    BYTE PTR [rcx],bl
   140027474:	add    BYTE PTR [rax],al
   140027476:	add    BYTE PTR [rcx],bl
   140027478:	add    BYTE PTR [rax],al
   14002747a:	add    BYTE PTR [rcx],bl
   14002747c:	add    BYTE PTR [rax],al
   14002747e:	add    BYTE PTR [rcx],bl
   140027480:	add    BYTE PTR [rax],al
   140027482:	add    BYTE PTR [rcx],bl
   140027484:	add    BYTE PTR [rax],al
   140027486:	add    BYTE PTR [rcx],bl
   140027488:	add    BYTE PTR [rax],al
   14002748a:	add    BYTE PTR [rcx],bl
   14002748c:	add    BYTE PTR [rax],al
   14002748e:	add    BYTE PTR [rcx],bl
   140027490:	add    BYTE PTR [rax],al
   140027492:	add    BYTE PTR [rcx],bl
   140027494:	add    BYTE PTR [rax],al
   140027496:	add    BYTE PTR [rcx],bl
   140027498:	add    BYTE PTR [rax],al
   14002749a:	add    BYTE PTR [rcx],bl
   14002749c:	add    BYTE PTR [rax],al
   14002749e:	add    BYTE PTR [rcx],bl
   1400274a0:	add    BYTE PTR [rax],al
   1400274a2:	add    BYTE PTR [rcx],bl
   1400274a4:	add    BYTE PTR [rax],al
   1400274a6:	add    BYTE PTR [rcx],bl
   1400274a8:	add    BYTE PTR [rax],al
   1400274aa:	add    BYTE PTR [rcx],bl
   1400274ac:	add    BYTE PTR [rax],al
   1400274ae:	add    BYTE PTR [rcx],bl
   1400274b0:	add    BYTE PTR [rax],al
   1400274b2:	add    BYTE PTR [rcx],bl
   1400274b4:	add    BYTE PTR [rax],al
   1400274b6:	add    BYTE PTR [rcx],bl
   1400274b8:	add    BYTE PTR [rax],al
   1400274ba:	add    BYTE PTR [rcx],bl
   1400274bc:	add    BYTE PTR [rax],al
   1400274be:	add    BYTE PTR [rcx],bl
   1400274c0:	add    BYTE PTR [rax],al
   1400274c2:	add    BYTE PTR [rcx],bl
   1400274c4:	add    BYTE PTR [rax],al
   1400274c6:	add    BYTE PTR [rcx],bl
   1400274c8:	add    BYTE PTR [rax],al
   1400274ca:	add    BYTE PTR [rcx],bl
   1400274cc:	add    BYTE PTR [rax],al
   1400274ce:	add    BYTE PTR [rcx],bl
   1400274d0:	add    BYTE PTR [rax],al
   1400274d2:	add    BYTE PTR [rcx],bl
   1400274d4:	add    BYTE PTR [rax],al
   1400274d6:	add    BYTE PTR [rcx],bl
   1400274d8:	add    BYTE PTR [rax],al
   1400274da:	add    BYTE PTR [rcx],bl
   1400274dc:	add    BYTE PTR [rax],al
   1400274de:	add    BYTE PTR [rcx],bl
   1400274e0:	add    BYTE PTR [rax],al
   1400274e2:	add    BYTE PTR [rcx],bl
   1400274e4:	add    BYTE PTR [rax],al
   1400274e6:	add    BYTE PTR [rcx],bl
   1400274e8:	add    BYTE PTR [rax],al
   1400274ea:	add    BYTE PTR [rcx],bl
   1400274ec:	add    BYTE PTR [rax],al
   1400274ee:	add    BYTE PTR [rcx],bl
   1400274f0:	add    BYTE PTR [rax],al
   1400274f2:	add    BYTE PTR [rcx],bl
   1400274f4:	add    BYTE PTR [rax],al
   1400274f6:	add    BYTE PTR [rcx],bl
   1400274f8:	add    BYTE PTR [rax],al
   1400274fa:	add    BYTE PTR [rcx],bl
   1400274fc:	add    BYTE PTR [rax],al
   1400274fe:	add    BYTE PTR [rcx],bl
   140027500:	add    BYTE PTR [rax],al
   140027502:	add    BYTE PTR [rcx],bl
   140027504:	add    BYTE PTR [rax],al
   140027506:	add    BYTE PTR [rcx],bl
   140027508:	add    BYTE PTR [rax],al
   14002750a:	add    BYTE PTR [rcx],bl
   14002750c:	add    BYTE PTR [rax],al
   14002750e:	add    BYTE PTR [rdx],bl
   140027510:	add    BYTE PTR [rax],al
   140027512:	add    BYTE PTR [rax+rax*1],bl
   140027515:	add    BYTE PTR [rax],al
   140027517:	and    BYTE PTR [rax],al
   140027519:	add    BYTE PTR [rax],al
   14002751b:	sub    BYTE PTR [rax],al
   14002751d:	add    BYTE PTR [rax],al
   14002751f:	xor    eax,DWORD PTR [rax]
   140027521:	add    BYTE PTR [rax],al
   140027523:	rex.XB xor al,0x34
   140027526:	xor    al,0x66
   140027528:	(bad)  
   140027529:	(bad)  
   14002752a:	(bad)  
   14002752b:	in     eax,0xff
   14002752d:	(bad)  
   14002752e:	(bad)  
   14002752f:	(bad)  
   140027530:	fucom  st(6)
   140027532:	fdivr  st,st(7)
   140027534:	outs   dx,BYTE PTR ds:[rsi]
   140027536:	(bad)  
   140027537:	jmp    FWORD PTR [rcx]
   140027539:	pop    rsi
   14002753a:	add    eax,0xffffffff
   14002753f:	(bad)  
   140027540:	(bad)  
   140027541:	(bad)  
   140027542:	(bad)  
   140027543:	jmp    QWORD PTR [rcx+0x12]
   140027546:	(bad)  
   140027547:	jmp    QWORD PTR [rcx+0x12]
   14002754a:	(bad)  
   14002754b:	jmp    QWORD PTR [rcx+0x12]
   14002754e:	(bad)  
   14002754f:	jmp    QWORD PTR [rcx+0x12]
   140027552:	(bad)  
   140027553:	(bad)  
   140027554:	cld    
   140027555:	cli    
   140027556:	sti    
   140027557:	(bad)  
   140027558:	(bad)  
   140027559:	(bad)  
   14002755a:	(bad)  
   14002755b:	(bad)  
   14002755c:	(bad)  
   14002755d:	(bad)  
   14002755e:	(bad)  
   14002755f:	(bad)  
   140027560:	(bad)  
   140027561:	(bad)  
   140027562:	(bad)  
   140027563:	jmp    FWORD PTR [rcx+0x61ff847e]
   140027569:	adc    bl,BYTE PTR [rsi]
   14002756b:	jmp    QWORD PTR [rcx+0x12]
   14002756e:	(bad)  
   14002756f:	jmp    QWORD PTR [rcx+0x12]
   140027572:	(bad)  
   140027573:	jmp    QWORD PTR [rcx+0x12]
   140027576:	(bad)  
   140027577:	jmp    QWORD PTR [rcx+0x12]
   14002757a:	(bad)  
   14002757b:	jmp    QWORD PTR [rcx+0x12]
   14002757e:	(bad)  
   14002757f:	call   FWORD PTR [rbx-0x8f98]
   140027585:	(bad)  
   140027586:	(bad)  
   140027587:	(bad)  
   140027588:	(bad)  
   140027589:	(bad)  
   14002758a:	(bad)  
   14002758b:	(bad)  
   14002758c:	(bad)  
   14002758d:	(bad)  
   14002758e:	(bad)  
   14002758f:	(bad)  
   140027590:	(bad)  
   140027591:	(bad)  
   140027592:	(bad)  
   140027593:	jmp    QWORD PTR [rcx+0x12]
   140027596:	(bad)  
   140027597:	jmp    QWORD PTR [rcx+0x12]
   14002759a:	(bad)  
   14002759b:	jmp    QWORD PTR [rcx+0x12]
   14002759e:	(bad)  
   14002759f:	jmp    QWORD PTR [rcx+0x12]
   1400275a2:	(bad)  
   1400275a3:	jmp    QWORD PTR [rcx+0x12]
   1400275a6:	(bad)  
   1400275a7:	jmp    QWORD PTR [rcx+0x12]
   1400275aa:	(bad)  
   1400275ab:	jmp    QWORD PTR [rcx+0x12]
   1400275ae:	(bad)  
   1400275af:	jmp    QWORD PTR [rcx+0x12]
   1400275b2:	(bad)  
   1400275b3:	jmp    QWORD PTR [rcx+0x12]
   1400275b6:	(bad)  
   1400275b7:	jmp    QWORD PTR [rcx+0x12]
   1400275ba:	(bad)  
   1400275bb:	jmp    QWORD PTR [rcx+0x12]
   1400275be:	(bad)  
   1400275bf:	jmp    QWORD PTR [rcx+0x12]
   1400275c2:	(bad)  
   1400275c3:	jmp    FWORD PTR [rsi+0x26]
   1400275c6:	xor    edi,edi
   1400275c8:	jrcxz  0x14002759f
   1400275ca:	xlat   BYTE PTR ds:[rbx]
   1400275cb:	(bad)  
   1400275cc:	(bad)  
   1400275cd:	(bad)  
   1400275ce:	(bad)  
   1400275cf:	push   rbx
   1400275d1:	repz repz loope 0x14002763b
   1400275d5:	data16 data16 (bad) 
   1400275d8:	add    BYTE PTR [rax],al
   1400275da:	add    BYTE PTR [rsi],dl
   1400275dc:	add    BYTE PTR [rax],al
   1400275de:	add    BYTE PTR [rdx],cl
   1400275e0:	add    BYTE PTR [rax],al
   1400275e2:	add    BYTE PTR [rax+rax*1],al
   1400275e5:	add    BYTE PTR [rax],al
   1400275e7:	add    al,BYTE PTR [rax]
   1400275e9:	add    BYTE PTR [rax],al
   1400275eb:	add    DWORD PTR [rax],eax
	...
   140027629:	add    BYTE PTR [rax],al
   14002762b:	add    DWORD PTR [rax],eax
   14002762d:	add    BYTE PTR [rax],al
   14002762f:	add    al,BYTE PTR [rax]
   140027631:	add    BYTE PTR [rax],al
   140027633:	add    eax,0xa000000
   140027638:	add    BYTE PTR [rax],al
   14002763a:	add    BYTE PTR [rdx],dl
   14002763c:	add    BYTE PTR [rax],al
   14002763e:	add    BYTE PTR [rdx],bl
   140027640:	add    BYTE PTR [rax],al
   140027642:	add    BYTE PTR [rcx],ah
   140027644:	add    BYTE PTR [rax],al
   140027646:	add    BYTE PTR [rsi],ah
   140027648:	add    BYTE PTR [rax],al
   14002764a:	add    BYTE PTR [rcx],ch
   14002764c:	add    BYTE PTR [rax],al
   14002764e:	add    BYTE PTR [rdx],ch
   140027650:	add    BYTE PTR [rax],al
   140027652:	add    BYTE PTR [rbx],ch
   140027654:	add    BYTE PTR [rax],al
   140027656:	add    BYTE PTR [rbx],ch
   140027658:	add    BYTE PTR [rax],al
   14002765a:	add    BYTE PTR [rbx],ch
   14002765c:	add    BYTE PTR [rax],al
   14002765e:	add    BYTE PTR [rbx],ch
   140027660:	add    BYTE PTR [rax],al
   140027662:	add    BYTE PTR [rbx],ch
   140027664:	add    BYTE PTR [rax],al
   140027666:	add    BYTE PTR [rbx],ch
   140027668:	add    BYTE PTR [rax],al
   14002766a:	add    BYTE PTR [rbx],ch
   14002766c:	add    BYTE PTR [rax],al
   14002766e:	add    BYTE PTR [rbx],ch
   140027670:	add    BYTE PTR [rax],al
   140027672:	add    BYTE PTR [rbx],ch
   140027674:	add    BYTE PTR [rax],al
   140027676:	add    BYTE PTR [rbx],ch
   140027678:	add    BYTE PTR [rax],al
   14002767a:	add    BYTE PTR [rbx],ch
   14002767c:	add    BYTE PTR [rax],al
   14002767e:	add    BYTE PTR [rbx],ch
   140027680:	add    BYTE PTR [rax],al
   140027682:	add    BYTE PTR [rbx],ch
   140027684:	add    BYTE PTR [rax],al
   140027686:	add    BYTE PTR [rbx],ch
   140027688:	add    BYTE PTR [rax],al
   14002768a:	add    BYTE PTR [rbx],ch
   14002768c:	add    BYTE PTR [rax],al
   14002768e:	add    BYTE PTR [rbx],ch
   140027690:	add    BYTE PTR [rax],al
   140027692:	add    BYTE PTR [rbx],ch
   140027694:	add    BYTE PTR [rax],al
   140027696:	add    BYTE PTR [rbx],ch
   140027698:	add    BYTE PTR [rax],al
   14002769a:	add    BYTE PTR [rbx],ch
   14002769c:	add    BYTE PTR [rax],al
   14002769e:	add    BYTE PTR [rbx],ch
   1400276a0:	add    BYTE PTR [rax],al
   1400276a2:	add    BYTE PTR [rbx],ch
   1400276a4:	add    BYTE PTR [rax],al
   1400276a6:	add    BYTE PTR [rbx],ch
   1400276a8:	add    BYTE PTR [rax],al
   1400276aa:	add    BYTE PTR [rbx],ch
   1400276ac:	add    BYTE PTR [rax],al
   1400276ae:	add    BYTE PTR [rbx],ch
   1400276b0:	add    BYTE PTR [rax],al
   1400276b2:	add    BYTE PTR [rbx],ch
   1400276b4:	add    BYTE PTR [rax],al
   1400276b6:	add    BYTE PTR [rbx],ch
   1400276b8:	add    BYTE PTR [rax],al
   1400276ba:	add    BYTE PTR [rbx],ch
   1400276bc:	add    BYTE PTR [rax],al
   1400276be:	add    BYTE PTR [rbx],ch
   1400276c0:	add    BYTE PTR [rax],al
   1400276c2:	add    BYTE PTR [rbx],ch
   1400276c4:	add    BYTE PTR [rax],al
   1400276c6:	add    BYTE PTR [rbx],ch
   1400276c8:	add    BYTE PTR [rax],al
   1400276ca:	add    BYTE PTR [rbx],ch
   1400276cc:	add    BYTE PTR [rax],al
   1400276ce:	add    BYTE PTR [rbx],ch
   1400276d0:	add    BYTE PTR [rax],al
   1400276d2:	add    BYTE PTR [rbx],ch
   1400276d4:	add    BYTE PTR [rax],al
   1400276d6:	add    BYTE PTR [rbx],ch
   1400276d8:	add    BYTE PTR [rax],al
   1400276da:	add    BYTE PTR [rbx],ch
   1400276dc:	add    BYTE PTR [rax],al
   1400276de:	add    BYTE PTR [rbx],ch
   1400276e0:	add    BYTE PTR [rax],al
   1400276e2:	add    BYTE PTR [rbx],ch
   1400276e4:	add    BYTE PTR [rax],al
   1400276e6:	add    BYTE PTR [rbx],ch
   1400276e8:	add    BYTE PTR [rax],al
   1400276ea:	add    BYTE PTR [rbx],ch
   1400276ec:	add    BYTE PTR [rax],al
   1400276ee:	add    BYTE PTR [rbx],ch
   1400276f0:	add    BYTE PTR [rax],al
   1400276f2:	add    BYTE PTR [rbx],ch
   1400276f4:	add    BYTE PTR [rax],al
   1400276f6:	add    BYTE PTR [rbx],ch
   1400276f8:	add    BYTE PTR [rax],al
   1400276fa:	add    BYTE PTR [rbx],ch
   1400276fc:	add    BYTE PTR [rax],al
   1400276fe:	add    BYTE PTR [rbx],ch
   140027700:	add    BYTE PTR [rax],al
   140027702:	add    BYTE PTR [rbx],ch
   140027704:	add    BYTE PTR [rax],al
   140027706:	add    BYTE PTR [rbx],ch
   140027708:	add    BYTE PTR [rax],al
   14002770a:	add    BYTE PTR [rbx],ch
   14002770c:	add    BYTE PTR [rax],al
   14002770e:	add    BYTE PTR [rax+rax*1],ch
   140027711:	add    BYTE PTR [rax],al
   140027713:	add    BYTE PTR cs:[rax],al
   140027716:	add    BYTE PTR [rbx],dh
   140027718:	add    BYTE PTR [rax],al
   14002771a:	add    BYTE PTR [rbx],bh
   14002771c:	add    BYTE PTR [rax],al
   14002771e:	add    BYTE PTR [rax+0x33],cl
   140027721:	xor    esi,DWORD PTR [rbx]
   140027723:	push   0xffffffffe5eaeaea
   140027728:	(bad)  
   140027729:	(bad)  
   14002772a:	(bad)  
   14002772b:	(bad)  
   14002772c:	fucom  st(6)
   14002772e:	fdivr  st,st(7)
   140027730:	outs   dx,BYTE PTR ds:[rsi]
   140027732:	(bad)  
   140027733:	jmp    FWORD PTR [rcx]
   140027735:	pop    rsi
   140027736:	add    eax,0x55e29ff
   14002773b:	(bad)  
   14002773c:	(bad)  
   14002773d:	(bad)  
   14002773e:	(bad)  
   14002773f:	(bad)  
   140027740:	(bad)  
   140027741:	(bad)  
   140027742:	(bad)  
   140027743:	jmp    QWORD PTR [rcx+0x12]
   140027746:	(bad)  
   140027747:	jmp    QWORD PTR [rcx+0x12]
   14002774a:	(bad)  
   14002774b:	jmp    QWORD PTR [rcx+0x12]
   14002774e:	(bad)  
   14002774f:	jmp    QWORD PTR [rcx+0x12]
   140027752:	(bad)  
   140027753:	push   rbx
   140027755:	in     eax,dx
   140027756:	out    dx,al
   140027757:	(bad)  
   140027758:	(bad)  
   140027759:	(bad)  
   14002775a:	(bad)  
   14002775b:	(bad)  
   14002775c:	(bad)  
   14002775d:	(bad)  
   14002775e:	(bad)  
   14002775f:	(bad)  
   140027760:	(bad)  
   140027761:	(bad)  
   140027762:	(bad)  
   140027763:	(bad)  
   140027764:	mov    eax,0x61ff9a94
   140027769:	adc    bl,BYTE PTR [rsi]
   14002776b:	jmp    QWORD PTR [rcx+0x12]
   14002776e:	(bad)  
   14002776f:	jmp    QWORD PTR [rcx+0x12]
   140027772:	(bad)  
   140027773:	jmp    QWORD PTR [rcx+0x12]
   140027776:	(bad)  
   140027777:	jmp    QWORD PTR [rcx+0x12]
   14002777a:	(bad)  
   14002777b:	jmp    QWORD PTR [rcx+0x12]
   14002777e:	(bad)  
   14002777f:	jmp    FWORD PTR [rdx+rax*4-0x77]
   140027786:	(bad)  
   140027787:	(bad)  
   140027788:	(bad)  
   140027789:	(bad)  
   14002778a:	(bad)  
   14002778b:	(bad)  
   14002778c:	(bad)  
   14002778d:	(bad)  
   14002778e:	(bad)  
   14002778f:	(bad)  
   140027790:	(bad)  
   140027791:	(bad)  
   140027792:	(bad)  
   140027793:	jmp    QWORD PTR [rcx+0x12]
   140027796:	(bad)  
   140027797:	jmp    QWORD PTR [rcx+0x12]
   14002779a:	(bad)  
   14002779b:	jmp    QWORD PTR [rcx+0x12]
   14002779e:	(bad)  
   14002779f:	jmp    QWORD PTR [rcx+0x12]
   1400277a2:	(bad)  
   1400277a3:	jmp    QWORD PTR [rcx+0x12]
   1400277a6:	(bad)  
   1400277a7:	jmp    QWORD PTR [rcx+0x12]
   1400277aa:	(bad)  
   1400277ab:	jmp    QWORD PTR [rcx+0x12]
   1400277ae:	(bad)  
   1400277af:	jmp    QWORD PTR [rcx+0x12]
   1400277b2:	(bad)  
   1400277b3:	jmp    QWORD PTR [rcx+0x12]
   1400277b6:	(bad)  
   1400277b7:	jmp    QWORD PTR [rcx+0x12]
   1400277ba:	(bad)  
   1400277bb:	jmp    QWORD PTR [rcx+0x12]
   1400277be:	(bad)  
   1400277bf:	jmp    FWORD PTR [rsi+0x26]
   1400277c2:	xor    edi,edi
   1400277c4:	jrcxz  0x14002779b
   1400277c6:	xlat   BYTE PTR ds:[rbx]
   1400277c7:	(bad)  
   1400277c8:	(bad)  
   1400277c9:	(bad)  
   1400277ca:	(bad)  
   1400277cb:	push   rbx
   1400277cd:	repz repz loope 0x140027837
   1400277d1:	data16 data16 (bad) 
   1400277d4:	add    BYTE PTR [rax],al
   1400277d6:	add    BYTE PTR [rsi],dl
   1400277d8:	add    BYTE PTR [rax],al
   1400277da:	add    BYTE PTR [rdx],cl
   1400277dc:	add    BYTE PTR [rax],al
   1400277de:	add    BYTE PTR [rax+rax*1],al
   1400277e1:	add    BYTE PTR [rax],al
   1400277e3:	add    al,BYTE PTR [rax]
   1400277e5:	add    BYTE PTR [rax],al
   1400277e7:	add    DWORD PTR [rax],eax
	...
   140027829:	add    BYTE PTR [rax],al
   14002782b:	add    DWORD PTR [rax],eax
   14002782d:	add    BYTE PTR [rax],al
   14002782f:	add    eax,DWORD PTR [rax]
   140027831:	add    BYTE PTR [rax],al
   140027833:	(bad)  
   140027834:	add    BYTE PTR [rax],al
   140027836:	add    BYTE PTR [rdi],cl
   140027838:	add    BYTE PTR [rax],al
   14002783a:	add    BYTE PTR [rbx],bl
   14002783c:	add    BYTE PTR [rax],al
   14002783e:	add    BYTE PTR [rcx],ch
   140027840:	add    BYTE PTR [rax],al
   140027842:	add    BYTE PTR [rax+rax*1],dh
   140027845:	add    BYTE PTR [rax],al
   140027847:	cmp    eax,DWORD PTR [rax]
   140027849:	add    BYTE PTR [rax],al
   14002784b:	(bad)  
   14002784c:	add    BYTE PTR [rax],al
   14002784e:	add    BYTE PTR [rcx+0x0],al
   140027851:	add    BYTE PTR [rax],al
   140027853:	rex.X add BYTE PTR [rax],al
   140027856:	add    BYTE PTR [rdx+0x0],al
   140027859:	add    BYTE PTR [rax],al
   14002785b:	rex.X add BYTE PTR [rax],al
   14002785e:	add    BYTE PTR [rdx+0x0],al
   140027861:	add    BYTE PTR [rax],al
   140027863:	rex.X add BYTE PTR [rax],al
   140027866:	add    BYTE PTR [rdx+0x0],al
   140027869:	add    BYTE PTR [rax],al
   14002786b:	rex.X add BYTE PTR [rax],al
   14002786e:	add    BYTE PTR [rdx+0x0],al
   140027871:	add    BYTE PTR [rax],al
   140027873:	rex.X add BYTE PTR [rax],al
   140027876:	add    BYTE PTR [rdx+0x0],al
   140027879:	add    BYTE PTR [rax],al
   14002787b:	rex.X add BYTE PTR [rax],al
   14002787e:	add    BYTE PTR [rdx+0x0],al
   140027881:	add    BYTE PTR [rax],al
   140027883:	rex.X add BYTE PTR [rax],al
   140027886:	add    BYTE PTR [rdx+0x0],al
   140027889:	add    BYTE PTR [rax],al
   14002788b:	rex.X add BYTE PTR [rax],al
   14002788e:	add    BYTE PTR [rdx+0x0],al
   140027891:	add    BYTE PTR [rax],al
   140027893:	rex.X add BYTE PTR [rax],al
   140027896:	add    BYTE PTR [rdx+0x0],al
   140027899:	add    BYTE PTR [rax],al
   14002789b:	rex.X add BYTE PTR [rax],al
   14002789e:	add    BYTE PTR [rdx+0x0],al
   1400278a1:	add    BYTE PTR [rax],al
   1400278a3:	rex.X add BYTE PTR [rax],al
   1400278a6:	add    BYTE PTR [rdx+0x0],al
   1400278a9:	add    BYTE PTR [rax],al
   1400278ab:	rex.X add BYTE PTR [rax],al
   1400278ae:	add    BYTE PTR [rdx+0x0],al
   1400278b1:	add    BYTE PTR [rax],al
   1400278b3:	rex.X add BYTE PTR [rax],al
   1400278b6:	add    BYTE PTR [rdx+0x0],al
   1400278b9:	add    BYTE PTR [rax],al
   1400278bb:	rex.X add BYTE PTR [rax],al
   1400278be:	add    BYTE PTR [rdx+0x0],al
   1400278c1:	add    BYTE PTR [rax],al
   1400278c3:	rex.X add BYTE PTR [rax],al
   1400278c6:	add    BYTE PTR [rdx+0x0],al
   1400278c9:	add    BYTE PTR [rax],al
   1400278cb:	rex.X add BYTE PTR [rax],al
   1400278ce:	add    BYTE PTR [rdx+0x0],al
   1400278d1:	add    BYTE PTR [rax],al
   1400278d3:	rex.X add BYTE PTR [rax],al
   1400278d6:	add    BYTE PTR [rdx+0x0],al
   1400278d9:	add    BYTE PTR [rax],al
   1400278db:	rex.X add BYTE PTR [rax],al
   1400278de:	add    BYTE PTR [rdx+0x0],al
   1400278e1:	add    BYTE PTR [rax],al
   1400278e3:	rex.X add BYTE PTR [rax],al
   1400278e6:	add    BYTE PTR [rdx+0x0],al
   1400278e9:	add    BYTE PTR [rax],al
   1400278eb:	rex.X add BYTE PTR [rax],al
   1400278ee:	add    BYTE PTR [rdx+0x0],al
   1400278f1:	add    BYTE PTR [rax],al
   1400278f3:	rex.X add BYTE PTR [rax],al
   1400278f6:	add    BYTE PTR [rdx+0x0],al
   1400278f9:	add    BYTE PTR [rax],al
   1400278fb:	rex.X add BYTE PTR [rax],al
   1400278fe:	add    BYTE PTR [rdx+0x0],al
   140027901:	add    BYTE PTR [rax],al
   140027903:	rex.X add BYTE PTR [rax],al
   140027906:	add    BYTE PTR [rdx+0x0],al
   140027909:	add    BYTE PTR [rax],al
   14002790b:	rex.X add BYTE PTR [rax],al
   14002790e:	add    BYTE PTR [rbx+0x0],al
   140027911:	add    BYTE PTR [rax],al
   140027913:	add    BYTE PTR [rax],r8b
   140027916:	add    BYTE PTR [rcx+0x0],cl
   140027919:	add    BYTE PTR [rax],al
   14002791b:	push   rcx
   14002791c:	xor    dh,BYTE PTR [rdx]
   14002791e:	xor    ch,BYTE PTR [rcx+rbp*8-0x17]
   140027922:	jmp    0x14002790d
   140027927:	(bad)  
   140027928:	fucom  st(6)
   14002792a:	fdivr  st,st(7)
   14002792c:	outs   dx,BYTE PTR ds:[rsi]
   14002792e:	(bad)  
   14002792f:	jmp    FWORD PTR [rcx]
   140027931:	pop    rsi
   140027932:	add    eax,0x55e29ff
   140027937:	jmp    FWORD PTR [rcx]
   140027939:	pop    rsi
   14002793a:	add    eax,0xffffffff
   14002793f:	(bad)  
   140027940:	(bad)  
   140027941:	(bad)  
   140027942:	(bad)  
   140027943:	(bad)  
   140027944:	(bad)  
   140027945:	(bad)  
   140027946:	(bad)  
   140027947:	(bad)  
   140027948:	(bad)  
   140027949:	(bad)  
   14002794a:	(bad)  
   14002794b:	(bad)  
   14002794c:	(bad)  
   14002794d:	(bad)  
   14002794e:	(bad)  
   14002794f:	(bad)  
   140027950:	(bad)  
   140027951:	(bad)  
   140027952:	(bad)  
   140027953:	(bad)  
   140027954:	(bad)  
   140027955:	(bad)  
   140027956:	(bad)  
   140027957:	(bad)  
   140027958:	(bad)  
   140027959:	(bad)  
   14002795a:	(bad)  
   14002795b:	(bad)  
   14002795c:	(bad)  
   14002795d:	(bad)  
   14002795e:	(bad)  
   14002795f:	(bad)  
   140027960:	(bad)  
   140027961:	(bad)  
   140027962:	(bad)  
   140027963:	(bad)  
   140027964:	(bad)  
   140027965:	(bad)  
   140027966:	(bad)  
   140027967:	(bad)  
   140027968:	(bad)  
   140027969:	(bad)  
   14002796a:	(bad)  
   14002796b:	(bad)  
   14002796c:	(bad)  
   14002796d:	(bad)  
   14002796e:	(bad)  
   14002796f:	(bad)  
   140027970:	(bad)  
   140027971:	(bad)  
   140027972:	(bad)  
   140027973:	(bad)  
   140027974:	(bad)  
   140027975:	(bad)  
   140027976:	(bad)  
   140027977:	(bad)  
   140027978:	(bad)  
   140027979:	(bad)  
   14002797a:	(bad)  
   14002797b:	(bad)  
   14002797c:	(bad)  
   14002797d:	(bad)  
   14002797e:	(bad)  
   14002797f:	(bad)  
   140027980:	(bad)  
   140027981:	(bad)  
   140027982:	(bad)  
   140027983:	(bad)  
   140027984:	(bad)  
   140027985:	(bad)  
   140027986:	(bad)  
   140027987:	(bad)  
   140027988:	(bad)  
   140027989:	(bad)  
   14002798a:	(bad)  
   14002798b:	(bad)  
   14002798c:	(bad)  
   14002798d:	(bad)  
   14002798e:	(bad)  
   14002798f:	(bad)  
   140027990:	(bad)  
   140027991:	(bad)  
   140027992:	(bad)  
   140027993:	(bad)  
   140027994:	(bad)  
   140027995:	(bad)  
   140027996:	(bad)  
   140027997:	(bad)  
   140027998:	(bad)  
   140027999:	(bad)  
   14002799a:	(bad)  
   14002799b:	(bad)  
   14002799c:	(bad)  
   14002799d:	(bad)  
   14002799e:	(bad)  
   14002799f:	(bad)  
   1400279a0:	(bad)  
   1400279a1:	(bad)  
   1400279a2:	(bad)  
   1400279a3:	(bad)  
   1400279a4:	(bad)  
   1400279a5:	(bad)  
   1400279a6:	(bad)  
   1400279a7:	(bad)  
   1400279a8:	(bad)  
   1400279a9:	(bad)  
   1400279aa:	(bad)  
   1400279ab:	jmp    QWORD PTR [rcx+0x12]
   1400279ae:	(bad)  
   1400279af:	jmp    QWORD PTR [rcx+0x12]
   1400279b2:	(bad)  
   1400279b3:	jmp    QWORD PTR [rcx+0x12]
   1400279b6:	(bad)  
   1400279b7:	jmp    QWORD PTR [rcx+0x12]
   1400279ba:	(bad)  
   1400279bb:	jmp    FWORD PTR [rsi+0x26]
   1400279be:	xor    edi,edi
   1400279c0:	jrcxz  0x140027997
   1400279c2:	xlat   BYTE PTR ds:[rbx]
   1400279c3:	(bad)  
   1400279c4:	(bad)  
   1400279c5:	(bad)  
   1400279c6:	(bad)  
   1400279c7:	push   rbx
   1400279c9:	repz repz loope 0x140027a33
   1400279cd:	data16 data16 (bad) 
   1400279d0:	add    BYTE PTR [rax],al
   1400279d2:	add    BYTE PTR [rsi],dl
   1400279d4:	add    BYTE PTR [rax],al
   1400279d6:	add    BYTE PTR [rdx],cl
   1400279d8:	add    BYTE PTR [rax],al
   1400279da:	add    BYTE PTR [rax+rax*1],al
   1400279dd:	add    BYTE PTR [rax],al
   1400279df:	add    al,BYTE PTR [rax]
   1400279e1:	add    BYTE PTR [rax],al
   1400279e3:	add    DWORD PTR [rax],eax
	...
   140027a29:	add    BYTE PTR [rax],al
   140027a2b:	add    DWORD PTR [rax],eax
   140027a2d:	add    BYTE PTR [rax],al
   140027a2f:	add    al,0x0
   140027a31:	add    BYTE PTR [rax],al
   140027a33:	or     DWORD PTR [rax],eax
   140027a35:	add    BYTE PTR [rax],al
   140027a37:	adc    al,0x0
   140027a39:	add    BYTE PTR [rax],al
   140027a3b:	(bad)  
   140027a3c:	add    BYTE PTR [rax],al
   140027a3e:	add    BYTE PTR [rax+rax*1],bh
   140027a41:	add    BYTE PTR [rax],al
   140027a43:	rex.WR add BYTE PTR [rax],r8b
   140027a46:	add    BYTE PTR [rsi+0x0],dl
   140027a49:	add    BYTE PTR [rax],al
   140027a4b:	pop    rbx
   140027a4c:	add    BYTE PTR [rax],al
   140027a4e:	add    BYTE PTR [rbp+0x0],bl
   140027a51:	add    BYTE PTR [rax],al
   140027a53:	pop    rbp
   140027a54:	add    BYTE PTR [rax],al
   140027a56:	add    BYTE PTR [rsi+0x0],bl
   140027a59:	add    BYTE PTR [rax],al
   140027a5b:	pop    rsi
   140027a5c:	add    BYTE PTR [rax],al
   140027a5e:	add    BYTE PTR [rsi+0x0],bl
   140027a61:	add    BYTE PTR [rax],al
   140027a63:	pop    rsi
   140027a64:	add    BYTE PTR [rax],al
   140027a66:	add    BYTE PTR [rsi+0x0],bl
   140027a69:	add    BYTE PTR [rax],al
   140027a6b:	pop    rsi
   140027a6c:	add    BYTE PTR [rax],al
   140027a6e:	add    BYTE PTR [rsi+0x0],bl
   140027a71:	add    BYTE PTR [rax],al
   140027a73:	pop    rsi
   140027a74:	add    BYTE PTR [rax],al
   140027a76:	add    BYTE PTR [rsi+0x0],bl
   140027a79:	add    BYTE PTR [rax],al
   140027a7b:	pop    rsi
   140027a7c:	add    BYTE PTR [rax],al
   140027a7e:	add    BYTE PTR [rsi+0x0],bl
   140027a81:	add    BYTE PTR [rax],al
   140027a83:	pop    rsi
   140027a84:	add    BYTE PTR [rax],al
   140027a86:	add    BYTE PTR [rsi+0x0],bl
   140027a89:	add    BYTE PTR [rax],al
   140027a8b:	pop    rsi
   140027a8c:	add    BYTE PTR [rax],al
   140027a8e:	add    BYTE PTR [rsi+0x0],bl
   140027a91:	add    BYTE PTR [rax],al
   140027a93:	pop    rsi
   140027a94:	add    BYTE PTR [rax],al
   140027a96:	add    BYTE PTR [rsi+0x0],bl
   140027a99:	add    BYTE PTR [rax],al
   140027a9b:	pop    rsi
   140027a9c:	add    BYTE PTR [rax],al
   140027a9e:	add    BYTE PTR [rsi+0x0],bl
   140027aa1:	add    BYTE PTR [rax],al
   140027aa3:	pop    rsi
   140027aa4:	add    BYTE PTR [rax],al
   140027aa6:	add    BYTE PTR [rsi+0x0],bl
   140027aa9:	add    BYTE PTR [rax],al
   140027aab:	pop    rsi
   140027aac:	add    BYTE PTR [rax],al
   140027aae:	add    BYTE PTR [rsi+0x0],bl
   140027ab1:	add    BYTE PTR [rax],al
   140027ab3:	pop    rsi
   140027ab4:	add    BYTE PTR [rax],al
   140027ab6:	add    BYTE PTR [rsi+0x0],bl
   140027ab9:	add    BYTE PTR [rax],al
   140027abb:	pop    rsi
   140027abc:	add    BYTE PTR [rax],al
   140027abe:	add    BYTE PTR [rsi+0x0],bl
   140027ac1:	add    BYTE PTR [rax],al
   140027ac3:	pop    rsi
   140027ac4:	add    BYTE PTR [rax],al
   140027ac6:	add    BYTE PTR [rsi+0x0],bl
   140027ac9:	add    BYTE PTR [rax],al
   140027acb:	pop    rsi
   140027acc:	add    BYTE PTR [rax],al
   140027ace:	add    BYTE PTR [rsi+0x0],bl
   140027ad1:	add    BYTE PTR [rax],al
   140027ad3:	pop    rsi
   140027ad4:	add    BYTE PTR [rax],al
   140027ad6:	add    BYTE PTR [rsi+0x0],bl
   140027ad9:	add    BYTE PTR [rax],al
   140027adb:	pop    rsi
   140027adc:	add    BYTE PTR [rax],al
   140027ade:	add    BYTE PTR [rsi+0x0],bl
   140027ae1:	add    BYTE PTR [rax],al
   140027ae3:	pop    rsi
   140027ae4:	add    BYTE PTR [rax],al
   140027ae6:	add    BYTE PTR [rsi+0x0],bl
   140027ae9:	add    BYTE PTR [rax],al
   140027aeb:	pop    rsi
   140027aec:	add    BYTE PTR [rax],al
   140027aee:	add    BYTE PTR [rsi+0x0],bl
   140027af1:	add    BYTE PTR [rax],al
   140027af3:	pop    rsi
   140027af4:	add    BYTE PTR [rax],al
   140027af6:	add    BYTE PTR [rsi+0x0],bl
   140027af9:	add    BYTE PTR [rax],al
   140027afb:	pop    rsi
   140027afc:	add    BYTE PTR [rax],al
   140027afe:	add    BYTE PTR [rsi+0x0],bl
   140027b01:	add    BYTE PTR [rax],al
   140027b03:	pop    rsi
   140027b04:	add    BYTE PTR [rax],al
   140027b06:	add    BYTE PTR [rsi+0x0],bl
   140027b09:	add    BYTE PTR [rax],al
   140027b0b:	pop    rsi
   140027b0c:	add    BYTE PTR [rax],al
   140027b0e:	add    BYTE PTR [rsi+0x0],bl
   140027b11:	add    BYTE PTR [rax],al
   140027b13:	pop    rdi
   140027b14:	add    BYTE PTR [rax],al
   140027b16:	add    BYTE PTR [rdx+0x2e],ah
   140027b19:	cs cs jbe 0x140027b06
   140027b1d:	jmp    0x14002620b
   140027b22:	(bad)  
   140027b23:	(bad)  
   140027b24:	fucom  st(6)
   140027b26:	fdivr  st,st(7)
   140027b28:	outs   dx,BYTE PTR ds:[rsi]
   140027b2a:	(bad)  
   140027b2b:	jmp    FWORD PTR [rcx]
   140027b2d:	pop    rsi
   140027b2e:	add    eax,0x55e29ff
   140027b33:	jmp    FWORD PTR [rcx]
   140027b35:	pop    rsi
   140027b36:	add    eax,0x55e29ff
   140027b3b:	(bad)  
   140027b3c:	(bad)  
   140027b3d:	(bad)  
   140027b3e:	(bad)  
   140027b3f:	(bad)  
   140027b40:	(bad)  
   140027b41:	(bad)  
   140027b42:	(bad)  
   140027b43:	(bad)  
   140027b44:	(bad)  
   140027b45:	(bad)  
   140027b46:	(bad)  
   140027b47:	(bad)  
   140027b48:	(bad)  
   140027b49:	(bad)  
   140027b4a:	(bad)  
   140027b4b:	(bad)  
   140027b4c:	(bad)  
   140027b4d:	(bad)  
   140027b4e:	(bad)  
   140027b4f:	(bad)  
   140027b50:	(bad)  
   140027b51:	(bad)  
   140027b52:	(bad)  
   140027b53:	(bad)  
   140027b54:	(bad)  
   140027b55:	(bad)  
   140027b56:	(bad)  
   140027b57:	(bad)  
   140027b58:	(bad)  
   140027b59:	(bad)  
   140027b5a:	(bad)  
   140027b5b:	(bad)  
   140027b5c:	(bad)  
   140027b5d:	(bad)  
   140027b5e:	(bad)  
   140027b5f:	(bad)  
   140027b60:	(bad)  
   140027b61:	(bad)  
   140027b62:	(bad)  
   140027b63:	(bad)  
   140027b64:	(bad)  
   140027b65:	(bad)  
   140027b66:	(bad)  
   140027b67:	(bad)  
   140027b68:	(bad)  
   140027b69:	(bad)  
   140027b6a:	(bad)  
   140027b6b:	(bad)  
   140027b6c:	(bad)  
   140027b6d:	(bad)  
   140027b6e:	(bad)  
   140027b6f:	(bad)  
   140027b70:	(bad)  
   140027b71:	(bad)  
   140027b72:	(bad)  
   140027b73:	(bad)  
   140027b74:	(bad)  
   140027b75:	(bad)  
   140027b76:	(bad)  
   140027b77:	(bad)  
   140027b78:	(bad)  
   140027b79:	(bad)  
   140027b7a:	(bad)  
   140027b7b:	(bad)  
   140027b7c:	(bad)  
   140027b7d:	(bad)  
   140027b7e:	(bad)  
   140027b7f:	(bad)  
   140027b80:	(bad)  
   140027b81:	(bad)  
   140027b82:	(bad)  
   140027b83:	(bad)  
   140027b84:	(bad)  
   140027b85:	(bad)  
   140027b86:	(bad)  
   140027b87:	(bad)  
   140027b88:	(bad)  
   140027b89:	(bad)  
   140027b8a:	(bad)  
   140027b8b:	(bad)  
   140027b8c:	(bad)  
   140027b8d:	(bad)  
   140027b8e:	(bad)  
   140027b8f:	(bad)  
   140027b90:	(bad)  
   140027b91:	(bad)  
   140027b92:	(bad)  
   140027b93:	(bad)  
   140027b94:	(bad)  
   140027b95:	(bad)  
   140027b96:	(bad)  
   140027b97:	(bad)  
   140027b98:	(bad)  
   140027b99:	(bad)  
   140027b9a:	(bad)  
   140027b9b:	(bad)  
   140027b9c:	(bad)  
   140027b9d:	(bad)  
   140027b9e:	(bad)  
   140027b9f:	(bad)  
   140027ba0:	(bad)  
   140027ba1:	(bad)  
   140027ba2:	(bad)  
   140027ba3:	(bad)  
   140027ba4:	(bad)  
   140027ba5:	(bad)  
   140027ba6:	(bad)  
   140027ba7:	(bad)  
   140027ba8:	(bad)  
   140027ba9:	(bad)  
   140027baa:	(bad)  
   140027bab:	jmp    QWORD PTR [rcx+0x12]
   140027bae:	(bad)  
   140027baf:	jmp    QWORD PTR [rcx+0x12]
   140027bb2:	(bad)  
   140027bb3:	jmp    QWORD PTR [rcx+0x12]
   140027bb6:	(bad)  
   140027bb7:	jmp    FWORD PTR [rsi+0x26]
   140027bba:	xor    edi,edi
   140027bbc:	jrcxz  0x140027b93
   140027bbe:	xlat   BYTE PTR ds:[rbx]
   140027bbf:	(bad)  
   140027bc0:	(bad)  
   140027bc1:	(bad)  
   140027bc2:	(bad)  
   140027bc3:	push   rbx
   140027bc5:	repz repz loope 0x140027c2f
   140027bc9:	data16 data16 (bad) 
   140027bcc:	add    BYTE PTR [rax],al
   140027bce:	add    BYTE PTR [rsi],dl
   140027bd0:	add    BYTE PTR [rax],al
   140027bd2:	add    BYTE PTR [rdx],cl
   140027bd4:	add    BYTE PTR [rax],al
   140027bd6:	add    BYTE PTR [rax+rax*1],al
   140027bd9:	add    BYTE PTR [rax],al
   140027bdb:	add    al,BYTE PTR [rax]
   140027bdd:	add    BYTE PTR [rax],al
   140027bdf:	add    DWORD PTR [rax],eax
	...
   140027c29:	add    BYTE PTR [rax],al
   140027c2b:	add    DWORD PTR [rax],eax
   140027c2d:	add    BYTE PTR [rax],al
   140027c2f:	add    al,0x0
   140027c31:	add    BYTE PTR [rax],al
   140027c33:	or     eax,DWORD PTR [rax]
   140027c35:	add    BYTE PTR [rax],al
   140027c37:	sbb    DWORD PTR [rax],eax
   140027c39:	add    BYTE PTR [rax],al
   140027c3b:	xor    dl,BYTE PTR [rdx-0x33]
   140027c3e:	call   QWORD PTR [r10-0x33]
   140027c42:	call   QWORD PTR [r10-0x33]
   140027c46:	call   QWORD PTR [r10-0x33]
   140027c4a:	call   QWORD PTR [r10-0x33]
   140027c4e:	call   QWORD PTR [r10-0x33]
   140027c52:	call   QWORD PTR [r10-0x33]
   140027c56:	call   QWORD PTR [r10-0x33]
   140027c5a:	call   QWORD PTR [r10-0x33]
   140027c5e:	call   QWORD PTR [r10-0x33]
   140027c62:	call   QWORD PTR [r10-0x33]
   140027c66:	call   QWORD PTR [r10-0x33]
   140027c6a:	call   QWORD PTR [r10-0x33]
   140027c6e:	call   QWORD PTR [r10-0x33]
   140027c72:	call   QWORD PTR [r10-0x33]
   140027c76:	call   QWORD PTR [r10-0x33]
   140027c7a:	call   QWORD PTR [r10-0x33]
   140027c7e:	call   QWORD PTR [r10-0x33]
   140027c82:	call   QWORD PTR [r10-0x33]
   140027c86:	call   QWORD PTR [r10-0x33]
   140027c8a:	call   QWORD PTR [r10-0x33]
   140027c8e:	call   QWORD PTR [r10-0x33]
   140027c92:	call   QWORD PTR [r10-0x33]
   140027c96:	call   QWORD PTR [r10-0x33]
   140027c9a:	call   QWORD PTR [r10-0x33]
   140027c9e:	call   QWORD PTR [r10-0x33]
   140027ca2:	call   QWORD PTR [r10-0x33]
   140027ca6:	call   QWORD PTR [r10-0x33]
   140027caa:	call   QWORD PTR [r10-0x33]
   140027cae:	call   QWORD PTR [r10-0x33]
   140027cb2:	call   QWORD PTR [r10-0x33]
   140027cb6:	call   QWORD PTR [r10-0x33]
   140027cba:	call   QWORD PTR [r10-0x33]
   140027cbe:	call   QWORD PTR [r10-0x33]
   140027cc2:	call   QWORD PTR [r10-0x33]
   140027cc6:	call   QWORD PTR [r10-0x33]
   140027cca:	call   QWORD PTR [r10-0x33]
   140027cce:	call   QWORD PTR [r10-0x33]
   140027cd2:	call   QWORD PTR [r10-0x33]
   140027cd6:	call   QWORD PTR [r10-0x33]
   140027cda:	call   QWORD PTR [r10-0x33]
   140027cde:	call   QWORD PTR [r10-0x33]
   140027ce2:	call   QWORD PTR [r10-0x33]
   140027ce6:	call   QWORD PTR [r10-0x33]
   140027cea:	call   QWORD PTR [r10-0x33]
   140027cee:	call   QWORD PTR [r10-0x33]
   140027cf2:	call   QWORD PTR [r10-0x33]
   140027cf6:	call   QWORD PTR [r10-0x33]
   140027cfa:	call   QWORD PTR [r10-0x33]
   140027cfe:	call   QWORD PTR [r10-0x33]
   140027d02:	call   QWORD PTR [r10-0x33]
   140027d06:	call   QWORD PTR [r10-0x33]
   140027d0a:	call   QWORD PTR [r10-0x33]
   140027d0e:	call   QWORD PTR [r10-0x33]
   140027d12:	jmp    QWORD PTR [r8-0x2f]
   140027d16:	push   rcx
   140027d17:	jmp    rax
   140027d19:	neg    ch
   140027d1b:	(bad)  
   140027d1c:	(bad)  
   140027d1d:	(bad)  
   140027d1e:	(bad)  
   140027d1f:	(bad)  
   140027d20:	fucom  st(6)
   140027d22:	fdivr  st,st(7)
   140027d24:	outs   dx,BYTE PTR ds:[rsi]
   140027d26:	(bad)  
   140027d27:	jmp    FWORD PTR [rcx]
   140027d29:	pop    rsi
   140027d2a:	add    eax,0x55e29ff
   140027d2f:	jmp    FWORD PTR [rcx]
   140027d31:	pop    rsi
   140027d32:	add    eax,0x55e29ff
   140027d37:	jmp    FWORD PTR [rcx]
   140027d39:	pop    rsi
   140027d3a:	add    eax,0x55e29ff
   140027d3f:	jmp    FWORD PTR [rcx]
   140027d41:	pop    rsi
   140027d42:	add    eax,0x55e29ff
   140027d47:	jmp    FWORD PTR [rcx]
   140027d49:	pop    rsi
   140027d4a:	add    eax,0x55e29ff
   140027d4f:	jmp    FWORD PTR [rcx]
   140027d51:	pop    rsi
   140027d52:	add    eax,0x357d52ff
   140027d57:	(bad)  
   140027d58:	(bad)  
   140027d59:	(bad)  
   140027d5a:	(bad)  
   140027d5b:	(bad)  
   140027d5c:	(bad)  
   140027d5d:	(bad)  
   140027d5e:	(bad)  
   140027d5f:	(bad)  
   140027d60:	(bad)  
   140027d61:	(bad)  
   140027d62:	(bad)  
   140027d63:	(bad)  
   140027d64:	(bad)  
   140027d65:	(bad)  
   140027d66:	(bad)  
   140027d67:	(bad)  
   140027d68:	fucom  st(6)
   140027d6a:	fdivr  st,st(7)
   140027d6c:	rex.WRXB jp 0x140027da0
   140027d6f:	jmp    FWORD PTR [rcx]
   140027d71:	pop    rsi
   140027d72:	add    eax,0x55e29ff
   140027d77:	inc    DWORD PTR [rdx+rsi*2+0x24]
   140027d7b:	dec    edi
   140027d7d:	fcmovnb st,st(7)
   140027d7f:	(bad)  
   140027d80:	(bad)  
   140027d81:	(bad)  
   140027d82:	(bad)  
   140027d83:	(bad)  
   140027d84:	(bad)  
   140027d85:	(bad)  
   140027d86:	(bad)  
   140027d87:	(bad)  
   140027d88:	(bad)  
   140027d89:	(bad)  
   140027d8a:	(bad)  
   140027d8b:	(bad)  
   140027d8c:	(bad)  
   140027d8d:	(bad)  
   140027d8e:	(bad)  
   140027d8f:	(bad)  
   140027d90:	(bad)  
   140027d91:	(bad)  
   140027d92:	(bad)  
   140027d93:	jmp    FWORD PTR [rcx]
   140027d95:	pop    rsi
   140027d96:	add    eax,0x55e29ff
   140027d9b:	jmp    FWORD PTR [rcx]
   140027d9d:	pop    rsi
   140027d9e:	add    eax,0x55e29ff
   140027da3:	(bad)  
   140027da4:	(bad)  
   140027da5:	(bad)  
   140027da6:	(bad)  
   140027da7:	(bad)  
   140027da8:	(bad)  
   140027da9:	(bad)  
   140027daa:	(bad)  
   140027dab:	jmp    QWORD PTR [rcx+0x12]
   140027dae:	(bad)  
   140027daf:	jmp    QWORD PTR [rcx+0x12]
   140027db2:	(bad)  
   140027db3:	jmp    FWORD PTR [rsi+0x26]
   140027db6:	xor    edi,edi
   140027db8:	jrcxz  0x140027d8f
   140027dba:	xlat   BYTE PTR ds:[rbx]
   140027dbb:	(bad)  
   140027dbc:	(bad)  
   140027dbd:	(bad)  
   140027dbe:	(bad)  
   140027dbf:	push   rbx
   140027dc1:	repz repz loope 0x140027e2b
   140027dc5:	data16 data16 (bad) 
   140027dc8:	add    BYTE PTR [rax],al
   140027dca:	add    BYTE PTR [rsi],dl
   140027dcc:	add    BYTE PTR [rax],al
   140027dce:	add    BYTE PTR [rdx],cl
   140027dd0:	add    BYTE PTR [rax],al
   140027dd2:	add    BYTE PTR [rax+rax*1],al
   140027dd5:	add    BYTE PTR [rax],al
   140027dd7:	add    al,BYTE PTR [rax]
   140027dd9:	add    BYTE PTR [rax],al
   140027ddb:	add    DWORD PTR [rax],eax
	...
   140027e29:	add    BYTE PTR [rax],al
   140027e2b:	add    DWORD PTR [rax],eax
   140027e2d:	add    BYTE PTR [rax],al
   140027e2f:	add    eax,0xc000000
   140027e34:	add    BYTE PTR [rax],al
   140027e36:	add    BYTE PTR [rbx],bl
   140027e38:	add    BYTE PTR [rax],al
   140027e3a:	add    BYTE PTR [rax],bh
   140027e3c:	push   rdx
   140027e3d:	int    0x41
   140027e3f:	call   QWORD PTR [rdx-0x33]
   140027e42:	call   QWORD PTR [r10-0x33]
   140027e46:	call   QWORD PTR [r10-0x33]
   140027e4a:	call   QWORD PTR [r10-0x33]
   140027e4e:	call   QWORD PTR [r10-0x33]
   140027e52:	call   QWORD PTR [r10-0x33]
   140027e56:	call   QWORD PTR [r10-0x33]
   140027e5a:	call   QWORD PTR [r10-0x33]
   140027e5e:	call   QWORD PTR [r10-0x33]
   140027e62:	call   QWORD PTR [r10-0x33]
   140027e66:	call   QWORD PTR [r10-0x33]
   140027e6a:	call   QWORD PTR [r10-0x33]
   140027e6e:	call   QWORD PTR [r10-0x33]
   140027e72:	call   QWORD PTR [r10-0x33]
   140027e76:	call   QWORD PTR [r10-0x33]
   140027e7a:	call   QWORD PTR [r10-0x33]
   140027e7e:	call   QWORD PTR [r10-0x33]
   140027e82:	call   QWORD PTR [r10-0x33]
   140027e86:	call   QWORD PTR [r10-0x33]
   140027e8a:	call   QWORD PTR [r10-0x33]
   140027e8e:	call   QWORD PTR [r10-0x33]
   140027e92:	call   QWORD PTR [r10-0x33]
   140027e96:	call   QWORD PTR [r10-0x33]
   140027e9a:	call   QWORD PTR [r10-0x33]
   140027e9e:	call   QWORD PTR [r10-0x33]
   140027ea2:	call   QWORD PTR [r10-0x33]
   140027ea6:	call   QWORD PTR [r10-0x33]
   140027eaa:	call   QWORD PTR [r10-0x33]
   140027eae:	call   QWORD PTR [r10-0x33]
   140027eb2:	call   QWORD PTR [r10-0x33]
   140027eb6:	call   QWORD PTR [r10-0x33]
   140027eba:	call   QWORD PTR [r10-0x33]
   140027ebe:	call   QWORD PTR [r10-0x33]
   140027ec2:	call   QWORD PTR [r10-0x33]
   140027ec6:	call   QWORD PTR [r10-0x33]
   140027eca:	call   QWORD PTR [r10-0x33]
   140027ece:	call   QWORD PTR [r10-0x33]
   140027ed2:	call   QWORD PTR [r10-0x33]
   140027ed6:	call   QWORD PTR [r10-0x33]
   140027eda:	call   QWORD PTR [r10-0x33]
   140027ede:	call   QWORD PTR [r10-0x33]
   140027ee2:	call   QWORD PTR [r10-0x33]
   140027ee6:	call   QWORD PTR [r10-0x33]
   140027eea:	call   QWORD PTR [r10-0x33]
   140027eee:	call   QWORD PTR [r10-0x33]
   140027ef2:	call   QWORD PTR [r10-0x33]
   140027ef6:	call   QWORD PTR [r10-0x33]
   140027efa:	call   QWORD PTR [r10-0x33]
   140027efe:	call   QWORD PTR [r10-0x33]
   140027f02:	call   QWORD PTR [r10-0x33]
   140027f06:	call   QWORD PTR [r10-0x33]
   140027f0a:	call   QWORD PTR [r10-0x33]
   140027f0e:	jmp    QWORD PTR [r8-0x2f]
   140027f12:	push   rcx
   140027f13:	jmp    rax
   140027f15:	neg    ch
   140027f17:	(bad)  
   140027f18:	(bad)  
   140027f19:	(bad)  
   140027f1a:	(bad)  
   140027f1b:	(bad)  
   140027f1c:	fucom  st(6)
   140027f1e:	fdivr  st,st(7)
   140027f20:	outs   dx,BYTE PTR ds:[rsi]
   140027f22:	(bad)  
   140027f23:	jmp    FWORD PTR [rcx]
   140027f25:	pop    rsi
   140027f26:	add    eax,0x55e29ff
   140027f2b:	jmp    FWORD PTR [rcx]
   140027f2d:	pop    rsi
   140027f2e:	add    eax,0x55e29ff
   140027f33:	jmp    FWORD PTR [rcx]
   140027f35:	pop    rsi
   140027f36:	add    eax,0x55e29ff
   140027f3b:	jmp    FWORD PTR [rcx]
   140027f3d:	pop    rsi
   140027f3e:	add    eax,0x55e29ff
   140027f43:	jmp    FWORD PTR [rcx]
   140027f45:	pop    rsi
   140027f46:	add    eax,0x55e29ff
   140027f4b:	jmp    FWORD PTR [rcx]
   140027f4d:	pop    rsi
   140027f4e:	add    eax,0x55e29ff
   140027f53:	jmp    FWORD PTR [rcx]
   140027f55:	pop    rsi
   140027f56:	add    eax,0xa6c6b3ff
   140027f5b:	(bad)  
   140027f5c:	(bad)  
   140027f5d:	(bad)  
   140027f5e:	(bad)  
   140027f5f:	(bad)  
   140027f60:	(bad)  
   140027f61:	(bad)  
   140027f62:	(bad)  
   140027f63:	(bad)  
   140027f64:	(bad)  
   140027f65:	(bad)  
   140027f66:	(bad)  
   140027f67:	(bad)  
   140027f68:	(bad)  
   140027f69:	(bad)  
   140027f6a:	(bad)  
   140027f6b:	(bad)  
   140027f6c:	(bad)  
   140027f6d:	(bad)  
   140027f6e:	(bad)  
   140027f6f:	(bad)  
   140027f70:	fsubrp st(6),st
   140027f72:	fcos   
   140027f74:	fnsetpm(287 only) 
   140027f76:	(bad)  
   140027f77:	(bad)  
   140027f78:	cld    
   140027f79:	std    
   140027f7a:	cld    
   140027f7b:	(bad)  
   140027f7c:	(bad)  
   140027f7d:	(bad)  
   140027f7e:	(bad)  
   140027f7f:	(bad)  
   140027f80:	(bad)  
   140027f81:	(bad)  
   140027f82:	(bad)  
   140027f83:	(bad)  
   140027f84:	(bad)  
   140027f85:	(bad)  
   140027f86:	(bad)  
   140027f87:	(bad)  
   140027f88:	(bad)  
   140027f89:	(bad)  
   140027f8a:	(bad)  
   140027f8b:	(bad)  
   140027f8c:	(bad)  
   140027f8d:	(bad)  
   140027f8e:	(bad)  
   140027f8f:	(bad)  
   140027f90:	(bad)  
   140027f91:	(bad)  
   140027f92:	(bad)  
   140027f93:	jmp    FWORD PTR [rcx]
   140027f95:	pop    rsi
   140027f96:	add    eax,0x55e29ff
   140027f9b:	jmp    FWORD PTR [rcx]
   140027f9d:	pop    rsi
   140027f9e:	add    eax,0x55e29ff
   140027fa3:	(bad)  
   140027fa4:	(bad)  
   140027fa5:	(bad)  
   140027fa6:	(bad)  
   140027fa7:	(bad)  
   140027fa8:	(bad)  
   140027fa9:	(bad)  
   140027faa:	(bad)  
   140027fab:	jmp    QWORD PTR [rcx+0x12]
   140027fae:	(bad)  
   140027faf:	jmp    FWORD PTR [rsi+0x26]
   140027fb2:	xor    edi,edi
   140027fb4:	jrcxz  0x140027f8b
   140027fb6:	xlat   BYTE PTR ds:[rbx]
   140027fb7:	(bad)  
   140027fb8:	(bad)  
   140027fb9:	(bad)  
   140027fba:	(bad)  
   140027fbb:	push   rbx
   140027fbd:	repz repz loope 0x140028027
   140027fc1:	data16 data16 (bad) 
   140027fc4:	add    BYTE PTR [rax],al
   140027fc6:	add    BYTE PTR [rsi],dl
   140027fc8:	add    BYTE PTR [rax],al
   140027fca:	add    BYTE PTR [rdx],cl
   140027fcc:	add    BYTE PTR [rax],al
   140027fce:	add    BYTE PTR [rax+rax*1],al
   140027fd1:	add    BYTE PTR [rax],al
   140027fd3:	add    al,BYTE PTR [rax]
   140027fd5:	add    BYTE PTR [rax],al
   140027fd7:	add    DWORD PTR [rax],eax
	...
   140028029:	add    BYTE PTR [rax],al
   14002802b:	add    al,BYTE PTR [rax]
   14002802d:	add    BYTE PTR [rax],al
   14002802f:	add    eax,0xc000000
   140028034:	add    BYTE PTR [rax],al
   140028036:	add    BYTE PTR [rax+rax*1],bl
   140028039:	add    BYTE PTR [rax],al
   14002803b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002803e:	call   QWORD PTR [r10-0x33]
   140028042:	call   QWORD PTR [r10-0x33]
   140028046:	call   QWORD PTR [r10-0x33]
   14002804a:	call   QWORD PTR [r10-0x33]
   14002804e:	call   QWORD PTR [r10-0x33]
   140028052:	call   QWORD PTR [r10-0x33]
   140028056:	call   QWORD PTR [r10-0x33]
   14002805a:	call   QWORD PTR [r10-0x33]
   14002805e:	call   QWORD PTR [r10-0x33]
   140028062:	call   QWORD PTR [r10-0x33]
   140028066:	call   QWORD PTR [r10-0x33]
   14002806a:	call   QWORD PTR [r10-0x33]
   14002806e:	call   QWORD PTR [r10-0x33]
   140028072:	call   QWORD PTR [r10-0x33]
   140028076:	call   QWORD PTR [r10-0x33]
   14002807a:	call   QWORD PTR [r10-0x33]
   14002807e:	call   QWORD PTR [r10-0x33]
   140028082:	call   QWORD PTR [r10-0x33]
   140028086:	call   QWORD PTR [r10-0x33]
   14002808a:	call   QWORD PTR [r10-0x33]
   14002808e:	call   QWORD PTR [r10-0x33]
   140028092:	call   QWORD PTR [r10-0x33]
   140028096:	call   QWORD PTR [r10-0x33]
   14002809a:	call   QWORD PTR [r10-0x33]
   14002809e:	call   QWORD PTR [r10-0x33]
   1400280a2:	call   QWORD PTR [r10-0x33]
   1400280a6:	call   QWORD PTR [r10-0x33]
   1400280aa:	call   QWORD PTR [r10-0x33]
   1400280ae:	call   QWORD PTR [r10-0x33]
   1400280b2:	call   QWORD PTR [r10-0x33]
   1400280b6:	call   QWORD PTR [r10-0x33]
   1400280ba:	call   QWORD PTR [r10-0x33]
   1400280be:	call   QWORD PTR [r10-0x33]
   1400280c2:	call   QWORD PTR [r10-0x33]
   1400280c6:	call   QWORD PTR [r10-0x33]
   1400280ca:	call   QWORD PTR [r10-0x33]
   1400280ce:	call   QWORD PTR [r10-0x33]
   1400280d2:	call   QWORD PTR [r10-0x33]
   1400280d6:	call   QWORD PTR [r10-0x33]
   1400280da:	call   QWORD PTR [r10-0x33]
   1400280de:	call   QWORD PTR [r10-0x33]
   1400280e2:	call   QWORD PTR [r10-0x33]
   1400280e6:	call   QWORD PTR [r10-0x33]
   1400280ea:	call   QWORD PTR [r10-0x33]
   1400280ee:	call   QWORD PTR [r10-0x33]
   1400280f2:	call   QWORD PTR [r10-0x33]
   1400280f6:	call   QWORD PTR [r10-0x33]
   1400280fa:	call   QWORD PTR [r10-0x33]
   1400280fe:	call   QWORD PTR [r10-0x33]
   140028102:	call   QWORD PTR [r10-0x33]
   140028106:	call   QWORD PTR [r10-0x33]
   14002810a:	jmp    QWORD PTR [r8-0x2f]
   14002810e:	push   rcx
   14002810f:	jmp    rax
   140028111:	neg    ch
   140028113:	(bad)  
   140028114:	(bad)  
   140028115:	(bad)  
   140028116:	(bad)  
   140028117:	(bad)  
   140028118:	fucom  st(6)
   14002811a:	fdivr  st,st(7)
   14002811c:	outs   dx,BYTE PTR ds:[rsi]
   14002811e:	(bad)  
   14002811f:	jmp    FWORD PTR [rcx]
   140028121:	pop    rsi
   140028122:	add    eax,0x55e29ff
   140028127:	jmp    FWORD PTR [rcx]
   140028129:	pop    rsi
   14002812a:	add    eax,0x55e29ff
   14002812f:	jmp    FWORD PTR [rcx]
   140028131:	pop    rsi
   140028132:	add    eax,0x55e29ff
   140028137:	jmp    FWORD PTR [rcx]
   140028139:	pop    rsi
   14002813a:	add    eax,0x55e29ff
   14002813f:	jmp    FWORD PTR [rcx]
   140028141:	pop    rsi
   140028142:	add    eax,0x55e29ff
   140028147:	jmp    FWORD PTR [rcx]
   140028149:	pop    rsi
   14002814a:	add    eax,0x55e29ff
   14002814f:	jmp    FWORD PTR [rcx]
   140028151:	pop    rsi
   140028152:	add    eax,0x55e29ff
   140028157:	push   QWORD PTR [rsi+riz*2]
   14002815a:	adc    bh,bh
   14002815c:	int3   
   14002815d:	fadd   st,st(3)
   14002815f:	(bad)  
   140028160:	(bad)  
   140028161:	(bad)  
   140028162:	(bad)  
   140028163:	(bad)  
   140028164:	(bad)  
   140028165:	(bad)  
   140028166:	(bad)  
   140028167:	(bad)  
   140028168:	(bad)  
   140028169:	(bad)  
   14002816a:	(bad)  
   14002816b:	(bad)  
   14002816c:	(bad)  
   14002816d:	(bad)  
   14002816e:	(bad)  
   14002816f:	(bad)  
   140028170:	(bad)  
   140028171:	(bad)  
   140028172:	(bad)  
   140028173:	(bad)  
   140028174:	(bad)  
   140028175:	(bad)  
   140028176:	(bad)  
   140028177:	(bad)  
   140028178:	(bad)  
   140028179:	(bad)  
   14002817a:	(bad)  
   14002817b:	(bad)  
   14002817c:	(bad)  
   14002817d:	(bad)  
   14002817e:	(bad)  
   14002817f:	push   QWORD PTR [rcx-0x5b3c]
   140028185:	(bad)  
   140028186:	(bad)  
   140028187:	(bad)  
   140028188:	(bad)  
   140028189:	(bad)  
   14002818a:	(bad)  
   14002818b:	(bad)  
   14002818c:	(bad)  
   14002818d:	(bad)  
   14002818e:	(bad)  
   14002818f:	(bad)  
   140028190:	(bad)  
   140028191:	(bad)  
   140028192:	(bad)  
   140028193:	jmp    FWORD PTR [rcx]
   140028195:	pop    rsi
   140028196:	add    eax,0x55e29ff
   14002819b:	jmp    FWORD PTR [rcx]
   14002819d:	pop    rsi
   14002819e:	add    eax,0x55e29ff
   1400281a3:	(bad)  
   1400281a4:	(bad)  
   1400281a5:	(bad)  
   1400281a6:	(bad)  
   1400281a7:	(bad)  
   1400281a8:	(bad)  
   1400281a9:	(bad)  
   1400281aa:	(bad)  
   1400281ab:	jmp    FWORD PTR [rsi+0x26]
   1400281ae:	xor    edi,edi
   1400281b0:	jrcxz  0x140028187
   1400281b2:	xlat   BYTE PTR ds:[rbx]
   1400281b3:	(bad)  
   1400281b4:	(bad)  
   1400281b5:	(bad)  
   1400281b6:	(bad)  
   1400281b7:	push   rbx
   1400281b9:	repz repz loope 0x140028222
   1400281bd:	gs gs add BYTE PTR ds:[rax],al
   1400281c2:	add    BYTE PTR [rsi],dl
   1400281c4:	add    BYTE PTR [rax],al
   1400281c6:	add    BYTE PTR [rdx],cl
   1400281c8:	add    BYTE PTR [rax],al
   1400281ca:	add    BYTE PTR [rax+rax*1],al
   1400281cd:	add    BYTE PTR [rax],al
   1400281cf:	add    al,BYTE PTR [rax]
   1400281d1:	add    BYTE PTR [rax],al
   1400281d3:	add    DWORD PTR [rax],eax
	...
   140028229:	add    BYTE PTR [rax],al
   14002822b:	add    al,BYTE PTR [rax]
   14002822d:	add    BYTE PTR [rax],al
   14002822f:	add    eax,0xc000000
   140028234:	add    BYTE PTR [rax],al
   140028236:	add    BYTE PTR [rax+rax*1],bl
   140028239:	add    BYTE PTR [rax],al
   14002823b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002823e:	call   QWORD PTR [r10-0x33]
   140028242:	call   QWORD PTR [r10-0x33]
   140028246:	call   QWORD PTR [r10-0x33]
   14002824a:	call   QWORD PTR [r10-0x33]
   14002824e:	call   QWORD PTR [r10-0x33]
   140028252:	call   QWORD PTR [r10-0x33]
   140028256:	call   QWORD PTR [r10-0x33]
   14002825a:	call   QWORD PTR [r10-0x33]
   14002825e:	call   QWORD PTR [r10-0x33]
   140028262:	call   QWORD PTR [r10-0x33]
   140028266:	call   QWORD PTR [r10-0x33]
   14002826a:	call   QWORD PTR [r10-0x33]
   14002826e:	call   QWORD PTR [r10-0x33]
   140028272:	call   QWORD PTR [r10-0x33]
   140028276:	call   QWORD PTR [r10-0x33]
   14002827a:	call   QWORD PTR [r10-0x33]
   14002827e:	call   QWORD PTR [r10-0x33]
   140028282:	call   QWORD PTR [r10-0x33]
   140028286:	call   QWORD PTR [r10-0x33]
   14002828a:	call   QWORD PTR [r10-0x33]
   14002828e:	call   QWORD PTR [r10-0x33]
   140028292:	call   QWORD PTR [r10-0x33]
   140028296:	call   QWORD PTR [r10-0x33]
   14002829a:	call   QWORD PTR [r10-0x33]
   14002829e:	call   QWORD PTR [r10-0x33]
   1400282a2:	call   QWORD PTR [r10-0x33]
   1400282a6:	call   QWORD PTR [r10-0x33]
   1400282aa:	call   QWORD PTR [r10-0x33]
   1400282ae:	call   QWORD PTR [r10-0x33]
   1400282b2:	call   QWORD PTR [r10-0x33]
   1400282b6:	call   QWORD PTR [r10-0x33]
   1400282ba:	call   QWORD PTR [r10-0x33]
   1400282be:	call   QWORD PTR [r10-0x33]
   1400282c2:	call   QWORD PTR [r10-0x33]
   1400282c6:	call   QWORD PTR [r10-0x33]
   1400282ca:	call   QWORD PTR [r10-0x33]
   1400282ce:	call   QWORD PTR [r10-0x33]
   1400282d2:	call   QWORD PTR [r10-0x33]
   1400282d6:	call   QWORD PTR [r10-0x33]
   1400282da:	call   QWORD PTR [r10-0x33]
   1400282de:	call   QWORD PTR [r10-0x33]
   1400282e2:	call   QWORD PTR [r10-0x33]
   1400282e6:	call   QWORD PTR [r10-0x33]
   1400282ea:	call   QWORD PTR [r10-0x33]
   1400282ee:	call   QWORD PTR [r10-0x33]
   1400282f2:	call   QWORD PTR [r10-0x33]
   1400282f6:	call   QWORD PTR [r10-0x33]
   1400282fa:	call   QWORD PTR [r10-0x33]
   1400282fe:	call   QWORD PTR [r10-0x33]
   140028302:	call   QWORD PTR [r10-0x33]
   140028306:	jmp    QWORD PTR [r8-0x2f]
   14002830a:	push   rcx
   14002830b:	jmp    rax
   14002830d:	neg    ch
   14002830f:	(bad)  
   140028310:	(bad)  
   140028311:	(bad)  
   140028312:	(bad)  
   140028313:	(bad)  
   140028314:	fucom  st(6)
   140028316:	fdivr  st,st(7)
   140028318:	outs   dx,BYTE PTR ds:[rsi]
   14002831a:	(bad)  
   14002831b:	jmp    FWORD PTR [rcx]
   14002831d:	pop    rsi
   14002831e:	add    eax,0x55e29ff
   140028323:	jmp    FWORD PTR [rcx]
   140028325:	pop    rsi
   140028326:	add    eax,0x55e29ff
   14002832b:	jmp    FWORD PTR [rcx]
   14002832d:	pop    rsi
   14002832e:	add    eax,0x55e29ff
   140028333:	jmp    FWORD PTR [rcx]
   140028335:	pop    rsi
   140028336:	add    eax,0x55e29ff
   14002833b:	jmp    FWORD PTR [rcx]
   14002833d:	pop    rsi
   14002833e:	add    eax,0x55e29ff
   140028343:	jmp    FWORD PTR [rcx]
   140028345:	pop    rsi
   140028346:	add    eax,0x55e29ff
   14002834b:	jmp    FWORD PTR [rcx]
   14002834d:	pop    rsi
   14002834e:	add    eax,0x55e29ff
   140028353:	jmp    FWORD PTR [rcx]
   140028355:	pop    rsi
   140028356:	add    eax,0x55e29ff
   14002835b:	push   QWORD PTR [rax]
   14002835d:	movsxd ecx,DWORD PTR [rip+0xffffffff83af95ff]        # 0xc3b21962
   140028363:	push   rbx
   140028365:	div    cl
   140028367:	(bad)  
   140028368:	(bad)  
   140028369:	(bad)  
   14002836a:	(bad)  
   14002836b:	(bad)  
   14002836c:	(bad)  
   14002836d:	(bad)  
   14002836e:	(bad)  
   14002836f:	(bad)  
   140028370:	(bad)  
   140028371:	(bad)  
   140028372:	(bad)  
   140028373:	(bad)  
   140028374:	(bad)  
   140028375:	(bad)  
   140028376:	(bad)  
   140028377:	jmp    rbx
   140028379:	(bad)  
   14002837a:	(bad)  
   14002837c:	jp     0x140028319
   14002837e:	movsxd edi,edi
   140028380:	sub    bl,BYTE PTR [rdi+0x6]
   140028383:	(bad)  
   140028384:	(bad)  
   140028385:	(bad)  
   140028386:	(bad)  
   140028387:	(bad)  
   140028388:	(bad)  
   140028389:	(bad)  
   14002838a:	(bad)  
   14002838b:	(bad)  
   14002838c:	(bad)  
   14002838d:	(bad)  
   14002838e:	(bad)  
   14002838f:	(bad)  
   140028390:	(bad)  
   140028391:	(bad)  
   140028392:	(bad)  
   140028393:	jmp    FWORD PTR [rcx]
   140028395:	pop    rsi
   140028396:	add    eax,0x55e29ff
   14002839b:	jmp    FWORD PTR [rcx]
   14002839d:	pop    rsi
   14002839e:	add    eax,0x55e29ff
   1400283a3:	(bad)  
   1400283a4:	(bad)  
   1400283a5:	(bad)  
   1400283a6:	(bad)  
   1400283a7:	(bad)  
   1400283a8:	(bad)  
   1400283a9:	(bad)  
   1400283aa:	(bad)  
   1400283ab:	jmp    rsp
   1400283ad:	(bad)  
   1400283ae:	fdivr  st,st(7)
   1400283b0:	(bad)  
   1400283b1:	(bad)  
   1400283b2:	(bad)  
   1400283b3:	push   rcx
   1400283b5:	icebp  
   1400283b6:	icebp  
   1400283b7:	fistp  WORD PTR [rbp+0x5d]
   1400283ba:	pop    rbp
   1400283bb:	cmp    eax,0x16000000
   1400283c0:	add    BYTE PTR [rax],al
   1400283c2:	add    BYTE PTR [rdx],cl
   1400283c4:	add    BYTE PTR [rax],al
   1400283c6:	add    BYTE PTR [rax+rax*1],al
   1400283c9:	add    BYTE PTR [rax],al
   1400283cb:	add    al,BYTE PTR [rax]
   1400283cd:	add    BYTE PTR [rax],al
   1400283cf:	add    DWORD PTR [rax],eax
	...
   140028429:	add    BYTE PTR [rax],al
   14002842b:	add    al,BYTE PTR [rax]
   14002842d:	add    BYTE PTR [rax],al
   14002842f:	add    eax,0xc000000
   140028434:	add    BYTE PTR [rax],al
   140028436:	add    BYTE PTR [rax+rax*1],bl
   140028439:	add    BYTE PTR [rax],al
   14002843b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002843e:	call   QWORD PTR [r10-0x33]
   140028442:	call   QWORD PTR [r10-0x33]
   140028446:	call   QWORD PTR [r10-0x33]
   14002844a:	call   QWORD PTR [r10-0x33]
   14002844e:	call   QWORD PTR [r10-0x33]
   140028452:	call   QWORD PTR [r10-0x33]
   140028456:	call   QWORD PTR [r10-0x33]
   14002845a:	call   QWORD PTR [r10-0x33]
   14002845e:	call   QWORD PTR [r10-0x33]
   140028462:	call   QWORD PTR [r10-0x33]
   140028466:	call   QWORD PTR [r10-0x33]
   14002846a:	call   QWORD PTR [r10-0x33]
   14002846e:	call   QWORD PTR [r10-0x33]
   140028472:	call   QWORD PTR [r10-0x33]
   140028476:	call   QWORD PTR [r10-0x33]
   14002847a:	call   QWORD PTR [r10-0x33]
   14002847e:	call   QWORD PTR [r10-0x33]
   140028482:	call   QWORD PTR [r10-0x33]
   140028486:	call   QWORD PTR [r10-0x33]
   14002848a:	call   QWORD PTR [r10-0x33]
   14002848e:	call   QWORD PTR [r10-0x33]
   140028492:	call   QWORD PTR [r10-0x33]
   140028496:	call   QWORD PTR [r10-0x33]
   14002849a:	call   QWORD PTR [r10-0x33]
   14002849e:	call   QWORD PTR [r10-0x33]
   1400284a2:	call   QWORD PTR [r10-0x33]
   1400284a6:	call   QWORD PTR [r10-0x33]
   1400284aa:	call   QWORD PTR [r10-0x33]
   1400284ae:	call   QWORD PTR [r10-0x33]
   1400284b2:	call   QWORD PTR [r10-0x33]
   1400284b6:	call   QWORD PTR [r10-0x33]
   1400284ba:	call   QWORD PTR [r10-0x33]
   1400284be:	call   QWORD PTR [r10-0x33]
   1400284c2:	call   QWORD PTR [r10-0x33]
   1400284c6:	call   QWORD PTR [r10-0x33]
   1400284ca:	call   QWORD PTR [r10-0x33]
   1400284ce:	call   QWORD PTR [r10-0x33]
   1400284d2:	call   QWORD PTR [r10-0x33]
   1400284d6:	call   QWORD PTR [r10-0x33]
   1400284da:	call   QWORD PTR [r10-0x33]
   1400284de:	call   QWORD PTR [r10-0x33]
   1400284e2:	call   QWORD PTR [r10-0x33]
   1400284e6:	call   QWORD PTR [r10-0x33]
   1400284ea:	call   QWORD PTR [r10-0x33]
   1400284ee:	call   QWORD PTR [r10-0x33]
   1400284f2:	call   QWORD PTR [r10-0x33]
   1400284f6:	call   QWORD PTR [r10-0x33]
   1400284fa:	call   QWORD PTR [r10-0x33]
   1400284fe:	call   QWORD PTR [r10-0x33]
   140028502:	jmp    QWORD PTR [r8-0x2f]
   140028506:	push   rcx
   140028507:	jmp    rax
   140028509:	neg    ch
   14002850b:	(bad)  
   14002850c:	(bad)  
   14002850d:	(bad)  
   14002850e:	(bad)  
   14002850f:	(bad)  
   140028510:	fucom  st(6)
   140028512:	fdivr  st,st(7)
   140028514:	outs   dx,BYTE PTR ds:[rsi]
   140028516:	(bad)  
   140028517:	jmp    FWORD PTR [rcx]
   140028519:	pop    rsi
   14002851a:	add    eax,0x55e29ff
   14002851f:	jmp    FWORD PTR [rcx]
   140028521:	pop    rsi
   140028522:	add    eax,0x55e29ff
   140028527:	jmp    FWORD PTR [rcx]
   140028529:	pop    rsi
   14002852a:	add    eax,0x55e29ff
   14002852f:	jmp    FWORD PTR [rcx]
   140028531:	pop    rsi
   140028532:	add    eax,0x55e29ff
   140028537:	jmp    FWORD PTR [rcx]
   140028539:	pop    rsi
   14002853a:	add    eax,0x55e29ff
   14002853f:	jmp    FWORD PTR [rcx]
   140028541:	pop    rsi
   140028542:	add    eax,0x55e29ff
   140028547:	jmp    FWORD PTR [rcx]
   140028549:	pop    rsi
   14002854a:	add    eax,0x55e29ff
   14002854f:	jmp    FWORD PTR [rcx]
   140028551:	pop    rsi
   140028552:	add    eax,0x55e29ff
   140028557:	jmp    FWORD PTR [rcx]
   140028559:	pop    rsi
   14002855a:	add    eax,0x55e29ff
   14002855f:	jmp    FWORD PTR [rcx]
   140028561:	pop    rsi
   140028562:	add    eax,0xb622eff
   140028567:	call   FWORD PTR [rbx-0x7c]
   14002856a:	rex push QWORD PTR [rbp-0x69]
   14002856e:	pop    rsi
   14002856f:	push   QWORD PTR [rax-0x6c]
   140028572:	pop    rax
   140028573:	call   QWORD PTR [rax+0x7c]
   140028576:	xor    edi,edi
   140028578:	sub    DWORD PTR [rsi+0x5],ebx
   14002857b:	jmp    FWORD PTR [rcx]
   14002857d:	pop    rsi
   14002857e:	add    eax,0x55e29ff
   140028583:	(bad)  
   140028584:	(bad)  
   140028585:	(bad)  
   140028586:	(bad)  
   140028587:	(bad)  
   140028588:	(bad)  
   140028589:	(bad)  
   14002858a:	(bad)  
   14002858b:	(bad)  
   14002858c:	(bad)  
   14002858d:	(bad)  
   14002858e:	(bad)  
   14002858f:	(bad)  
   140028590:	(bad)  
   140028591:	(bad)  
   140028592:	(bad)  
   140028593:	jmp    FWORD PTR [rcx]
   140028595:	pop    rsi
   140028596:	add    eax,0x55e29ff
   14002859b:	jmp    FWORD PTR [rcx]
   14002859d:	pop    rsi
   14002859e:	add    eax,0x55e29ff
   1400285a3:	(bad)  
   1400285a4:	(bad)  
   1400285a5:	(bad)  
   1400285a6:	(bad)  
   1400285a7:	(bad)  
   1400285a8:	(bad)  
   1400285a9:	(bad)  
   1400285aa:	(bad)  
   1400285ab:	(bad)  
   1400285ac:	(bad)  
   1400285ad:	(bad)  
   1400285ae:	(bad)  
   1400285af:	push   rdx
   1400285b1:	repnz repnz loop 0x140028615
   1400285b5:	(bad)  
   1400285b6:	(bad)  
   1400285b7:	rex.X add BYTE PTR [rax],al
   1400285ba:	add    BYTE PTR [rax],bl
   1400285bc:	add    BYTE PTR [rax],al
   1400285be:	add    BYTE PTR [rdx],cl
   1400285c0:	add    BYTE PTR [rax],al
   1400285c2:	add    BYTE PTR [rip+0x2000000],al        # 0x1420285c8
   1400285c8:	add    BYTE PTR [rax],al
   1400285ca:	add    BYTE PTR [rcx],al
	...
   140028628:	add    BYTE PTR [rax],al
   14002862a:	add    BYTE PTR [rdx],al
   14002862c:	add    BYTE PTR [rax],al
   14002862e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c028634
   140028634:	add    BYTE PTR [rax],al
   140028636:	add    BYTE PTR [rax+rax*1],bl
   140028639:	add    BYTE PTR [rax],al
   14002863b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002863e:	call   QWORD PTR [r10-0x33]
   140028642:	call   QWORD PTR [r10-0x33]
   140028646:	call   QWORD PTR [r10-0x33]
   14002864a:	call   QWORD PTR [r10-0x33]
   14002864e:	call   QWORD PTR [r10-0x33]
   140028652:	call   QWORD PTR [r10-0x33]
   140028656:	call   QWORD PTR [r10-0x33]
   14002865a:	call   QWORD PTR [r10-0x33]
   14002865e:	call   QWORD PTR [r10-0x33]
   140028662:	call   QWORD PTR [r10-0x33]
   140028666:	call   QWORD PTR [r10-0x33]
   14002866a:	call   QWORD PTR [r10-0x33]
   14002866e:	call   QWORD PTR [r10-0x33]
   140028672:	call   QWORD PTR [r10-0x33]
   140028676:	call   QWORD PTR [r10-0x33]
   14002867a:	call   QWORD PTR [r10-0x33]
   14002867e:	call   QWORD PTR [r10-0x33]
   140028682:	call   QWORD PTR [r10-0x33]
   140028686:	call   QWORD PTR [r10-0x33]
   14002868a:	call   QWORD PTR [r10-0x33]
   14002868e:	call   QWORD PTR [r10-0x33]
   140028692:	call   QWORD PTR [r10-0x33]
   140028696:	call   QWORD PTR [r10-0x33]
   14002869a:	call   QWORD PTR [r10-0x33]
   14002869e:	call   QWORD PTR [r10-0x33]
   1400286a2:	call   QWORD PTR [r10-0x33]
   1400286a6:	call   QWORD PTR [r10-0x33]
   1400286aa:	call   QWORD PTR [r10-0x33]
   1400286ae:	call   QWORD PTR [r10-0x33]
   1400286b2:	call   QWORD PTR [r10-0x33]
   1400286b6:	call   QWORD PTR [r10-0x33]
   1400286ba:	call   QWORD PTR [r10-0x33]
   1400286be:	call   QWORD PTR [r10-0x33]
   1400286c2:	call   QWORD PTR [r10-0x33]
   1400286c6:	call   QWORD PTR [r10-0x33]
   1400286ca:	call   QWORD PTR [r10-0x33]
   1400286ce:	call   QWORD PTR [r10-0x33]
   1400286d2:	call   QWORD PTR [r10-0x33]
   1400286d6:	call   QWORD PTR [r10-0x33]
   1400286da:	call   QWORD PTR [r10-0x33]
   1400286de:	call   QWORD PTR [r10-0x33]
   1400286e2:	call   QWORD PTR [r10-0x33]
   1400286e6:	call   QWORD PTR [r10-0x33]
   1400286ea:	call   QWORD PTR [r10-0x33]
   1400286ee:	call   QWORD PTR [r10-0x33]
   1400286f2:	call   QWORD PTR [r10-0x33]
   1400286f6:	call   QWORD PTR [r10-0x33]
   1400286fa:	call   QWORD PTR [r10-0x33]
   1400286fe:	jmp    QWORD PTR [r9-0x2f]
   140028702:	push   rcx
   140028703:	jmp    rcx
   140028705:	neg    dh
   140028707:	(bad)  
   140028708:	(bad)  
   140028709:	(bad)  
   14002870a:	(bad)  
   14002870b:	(bad)  
   14002870c:	(bad)  
   14002870e:	(bad)  
   14002870f:	(bad)  
   140028710:	cmp    ebp,DWORD PTR [rbx+rbx*1-0x1]
   140028714:	sub    DWORD PTR [rsi+0x5],ebx
   140028717:	jmp    FWORD PTR [rcx]
   140028719:	pop    rsi
   14002871a:	add    eax,0x55e29ff
   14002871f:	jmp    FWORD PTR [rcx]
   140028721:	pop    rsi
   140028722:	add    eax,0x55e29ff
   140028727:	jmp    FWORD PTR [rcx]
   140028729:	pop    rsi
   14002872a:	add    eax,0x55e29ff
   14002872f:	jmp    FWORD PTR [rcx]
   140028731:	pop    rsi
   140028732:	add    eax,0x55e29ff
   140028737:	jmp    FWORD PTR [rcx]
   140028739:	pop    rsi
   14002873a:	add    eax,0x55e29ff
   14002873f:	jmp    FWORD PTR [rcx]
   140028741:	pop    rsi
   140028742:	add    eax,0x55e29ff
   140028747:	jmp    FWORD PTR [rcx]
   140028749:	pop    rsi
   14002874a:	add    eax,0x55e29ff
   14002874f:	jmp    FWORD PTR [rcx]
   140028751:	pop    rsi
   140028752:	add    eax,0x55e29ff
   140028757:	jmp    FWORD PTR [rcx]
   140028759:	pop    rsi
   14002875a:	add    eax,0x55e29ff
   14002875f:	jmp    FWORD PTR [rcx]
   140028761:	pop    rsi
   140028762:	add    eax,0x55e29ff
   140028767:	jmp    FWORD PTR [rcx]
   140028769:	pop    rsi
   14002876a:	add    eax,0x55e29ff
   14002876f:	jmp    FWORD PTR [rcx]
   140028771:	pop    rsi
   140028772:	add    eax,0x55e29ff
   140028777:	jmp    FWORD PTR [rcx]
   140028779:	pop    rsi
   14002877a:	add    eax,0x55e29ff
   14002877f:	jmp    FWORD PTR [rcx]
   140028781:	pop    rsi
   140028782:	add    eax,0xffffffff
   140028787:	(bad)  
   140028788:	(bad)  
   140028789:	(bad)  
   14002878a:	(bad)  
   14002878b:	(bad)  
   14002878c:	(bad)  
   14002878d:	(bad)  
   14002878e:	(bad)  
   14002878f:	(bad)  
   140028790:	(bad)  
   140028791:	(bad)  
   140028792:	(bad)  
   140028793:	jmp    FWORD PTR [rcx]
   140028795:	pop    rsi
   140028796:	add    eax,0x55e29ff
   14002879b:	jmp    FWORD PTR [rcx]
   14002879d:	pop    rsi
   14002879e:	add    eax,0x55e29ff
   1400287a3:	(bad)  
   1400287a4:	(bad)  
   1400287a5:	(bad)  
   1400287a6:	(bad)  
   1400287a7:	(bad)  
   1400287a8:	(bad)  
   1400287a9:	(bad)  
   1400287aa:	(bad)  
   1400287ab:	(bad)  
   1400287ac:	out    dx,eax
   1400287ad:	out    dx,eax
   1400287ae:	out    dx,eax
   1400287af:	loop   0x140028800
   1400287b1:	rex.WRXB
   1400287b2:	rex.WRXB
   1400287b3:	rex.W add BYTE PTR [rax],al
   1400287b6:	add    BYTE PTR [rip+0xd000000],bl        # 0x14d0287bc
   1400287bc:	add    BYTE PTR [rax],al
   1400287be:	add    BYTE PTR [rsi],al
   1400287c0:	add    BYTE PTR [rax],al
   1400287c2:	add    BYTE PTR [rdx],al
   1400287c4:	add    BYTE PTR [rax],al
   1400287c6:	add    BYTE PTR [rcx],al
	...
   140028828:	add    BYTE PTR [rax],al
   14002882a:	add    BYTE PTR [rdx],al
   14002882c:	add    BYTE PTR [rax],al
   14002882e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c028834
   140028834:	add    BYTE PTR [rax],al
   140028836:	add    BYTE PTR [rax+rax*1],bl
   140028839:	add    BYTE PTR [rax],al
   14002883b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002883e:	call   QWORD PTR [r10-0x33]
   140028842:	call   QWORD PTR [r10-0x33]
   140028846:	call   QWORD PTR [r10-0x33]
   14002884a:	call   QWORD PTR [r10-0x33]
   14002884e:	call   QWORD PTR [r10-0x33]
   140028852:	call   QWORD PTR [r10-0x33]
   140028856:	call   QWORD PTR [r10-0x33]
   14002885a:	call   QWORD PTR [r10-0x33]
   14002885e:	call   QWORD PTR [r10-0x33]
   140028862:	call   QWORD PTR [r10-0x33]
   140028866:	call   QWORD PTR [r10-0x33]
   14002886a:	call   QWORD PTR [r10-0x33]
   14002886e:	call   QWORD PTR [r10-0x33]
   140028872:	call   QWORD PTR [r10-0x33]
   140028876:	call   QWORD PTR [r10-0x33]
   14002887a:	call   QWORD PTR [r10-0x33]
   14002887e:	call   QWORD PTR [r10-0x33]
   140028882:	call   QWORD PTR [r10-0x33]
   140028886:	call   QWORD PTR [r10-0x33]
   14002888a:	call   QWORD PTR [r10-0x33]
   14002888e:	call   QWORD PTR [r10-0x33]
   140028892:	call   QWORD PTR [r10-0x33]
   140028896:	call   QWORD PTR [r10-0x33]
   14002889a:	call   QWORD PTR [r10-0x33]
   14002889e:	call   QWORD PTR [r10-0x33]
   1400288a2:	call   QWORD PTR [r10-0x33]
   1400288a6:	call   QWORD PTR [r10-0x33]
   1400288aa:	call   QWORD PTR [r10-0x33]
   1400288ae:	call   QWORD PTR [r10-0x33]
   1400288b2:	call   QWORD PTR [r10-0x33]
   1400288b6:	call   QWORD PTR [r10-0x33]
   1400288ba:	call   QWORD PTR [r10-0x33]
   1400288be:	call   QWORD PTR [r10-0x33]
   1400288c2:	call   QWORD PTR [r10-0x33]
   1400288c6:	call   QWORD PTR [r10-0x33]
   1400288ca:	call   QWORD PTR [r10-0x33]
   1400288ce:	call   QWORD PTR [r10-0x33]
   1400288d2:	call   QWORD PTR [r10-0x33]
   1400288d6:	call   QWORD PTR [r10-0x33]
   1400288da:	call   QWORD PTR [r10-0x33]
   1400288de:	call   QWORD PTR [r10-0x33]
   1400288e2:	call   QWORD PTR [r10-0x33]
   1400288e6:	call   QWORD PTR [r10-0x33]
   1400288ea:	call   QWORD PTR [r10-0x33]
   1400288ee:	call   QWORD PTR [r10-0x33]
   1400288f2:	call   QWORD PTR [r10-0x33]
   1400288f6:	call   QWORD PTR [r10-0x33]
   1400288fa:	call   QWORD PTR [r10-0x33]
   1400288fe:	jmp    QWORD PTR [r9-0x2f]
   140028902:	push   rcx
   140028903:	jmp    rcx
   140028905:	neg    dh
   140028907:	(bad)  
   140028908:	(bad)  
   140028909:	(bad)  
   14002890a:	(bad)  
   14002890b:	(bad)  
   14002890c:	(bad)  
   14002890e:	(bad)  
   14002890f:	(bad)  
   140028910:	cmp    ebp,DWORD PTR [rbx+rbx*1-0x1]
   140028914:	sub    DWORD PTR [rsi+0x5],ebx
   140028917:	jmp    FWORD PTR [rcx]
   140028919:	pop    rsi
   14002891a:	add    eax,0x55e29ff
   14002891f:	jmp    FWORD PTR [rcx]
   140028921:	pop    rsi
   140028922:	add    eax,0x55e29ff
   140028927:	jmp    FWORD PTR [rcx]
   140028929:	pop    rsi
   14002892a:	add    eax,0x55e29ff
   14002892f:	jmp    FWORD PTR [rcx]
   140028931:	pop    rsi
   140028932:	add    eax,0x55e29ff
   140028937:	jmp    FWORD PTR [rcx]
   140028939:	pop    rsi
   14002893a:	add    eax,0x55e29ff
   14002893f:	jmp    FWORD PTR [rcx]
   140028941:	pop    rsi
   140028942:	add    eax,0x55e29ff
   140028947:	jmp    FWORD PTR [rcx]
   140028949:	pop    rsi
   14002894a:	add    eax,0x55e29ff
   14002894f:	jmp    FWORD PTR [rcx]
   140028951:	pop    rsi
   140028952:	add    eax,0x55e29ff
   140028957:	jmp    FWORD PTR [rcx]
   140028959:	pop    rsi
   14002895a:	add    eax,0x55e29ff
   14002895f:	jmp    FWORD PTR [rcx]
   140028961:	pop    rsi
   140028962:	add    eax,0x55e29ff
   140028967:	jmp    FWORD PTR [rcx]
   140028969:	pop    rsi
   14002896a:	add    eax,0x55e29ff
   14002896f:	jmp    FWORD PTR [rcx]
   140028971:	pop    rsi
   140028972:	add    eax,0x55e29ff
   140028977:	jmp    FWORD PTR [rcx]
   140028979:	pop    rsi
   14002897a:	add    eax,0x55e29ff
   14002897f:	jmp    FWORD PTR [rcx]
   140028981:	pop    rsi
   140028982:	add    eax,0xffffffff
   140028987:	(bad)  
   140028988:	(bad)  
   140028989:	(bad)  
   14002898a:	(bad)  
   14002898b:	(bad)  
   14002898c:	(bad)  
   14002898d:	(bad)  
   14002898e:	(bad)  
   14002898f:	(bad)  
   140028990:	(bad)  
   140028991:	(bad)  
   140028992:	(bad)  
   140028993:	jmp    FWORD PTR [rcx]
   140028995:	pop    rsi
   140028996:	add    eax,0x55e29ff
   14002899b:	jmp    FWORD PTR [rcx]
   14002899d:	pop    rsi
   14002899e:	add    eax,0x55e29ff
   1400289a3:	(bad)  
   1400289a4:	(bad)  
   1400289a5:	(bad)  
   1400289a6:	(bad)  
   1400289a7:	(bad)  
   1400289a8:	(bad)  
   1400289a9:	(bad)  
   1400289aa:	(bad)  
   1400289ab:	inc    DWORD PTR [rsi+0x46]
   1400289ae:	rex.RX pop rsp
   1400289b0:	add    BYTE PTR [rax],al
   1400289b2:	add    BYTE PTR [rbx],ch
   1400289b4:	add    BYTE PTR [rax],al
   1400289b6:	add    BYTE PTR [rsi],dl
   1400289b8:	add    BYTE PTR [rax],al
   1400289ba:	add    BYTE PTR [rbx],cl
   1400289bc:	add    BYTE PTR [rax],al
   1400289be:	add    BYTE PTR [rax+rax*1],al
   1400289c1:	add    BYTE PTR [rax],al
   1400289c3:	add    al,BYTE PTR [rax]
   1400289c5:	add    BYTE PTR [rax],al
   1400289c7:	add    DWORD PTR [rax],eax
	...
   140028a29:	add    BYTE PTR [rax],al
   140028a2b:	add    al,BYTE PTR [rax]
   140028a2d:	add    BYTE PTR [rax],al
   140028a2f:	add    eax,0xc000000
   140028a34:	add    BYTE PTR [rax],al
   140028a36:	add    BYTE PTR [rax+rax*1],bl
   140028a39:	add    BYTE PTR [rax],al
   140028a3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140028a3e:	call   QWORD PTR [r10-0x33]
   140028a42:	call   QWORD PTR [r10-0x33]
   140028a46:	call   QWORD PTR [r10-0x33]
   140028a4a:	call   QWORD PTR [r10-0x33]
   140028a4e:	call   QWORD PTR [r10-0x33]
   140028a52:	call   QWORD PTR [r10-0x33]
   140028a56:	call   QWORD PTR [r10-0x33]
   140028a5a:	call   QWORD PTR [r10-0x33]
   140028a5e:	call   QWORD PTR [r10-0x33]
   140028a62:	call   QWORD PTR [r10-0x33]
   140028a66:	call   QWORD PTR [r10-0x33]
   140028a6a:	call   QWORD PTR [r10-0x33]
   140028a6e:	call   QWORD PTR [r10-0x33]
   140028a72:	call   QWORD PTR [r10-0x33]
   140028a76:	call   QWORD PTR [r10-0x33]
   140028a7a:	call   QWORD PTR [r10-0x33]
   140028a7e:	call   QWORD PTR [r10-0x33]
   140028a82:	call   QWORD PTR [r10-0x33]
   140028a86:	call   QWORD PTR [r10-0x33]
   140028a8a:	call   QWORD PTR [r10-0x33]
   140028a8e:	call   QWORD PTR [r10-0x33]
   140028a92:	call   QWORD PTR [r10-0x33]
   140028a96:	call   QWORD PTR [r10-0x33]
   140028a9a:	call   QWORD PTR [r10-0x33]
   140028a9e:	call   QWORD PTR [r10-0x33]
   140028aa2:	call   QWORD PTR [r10-0x33]
   140028aa6:	call   QWORD PTR [r10-0x33]
   140028aaa:	call   QWORD PTR [r10-0x33]
   140028aae:	call   QWORD PTR [r10-0x33]
   140028ab2:	call   QWORD PTR [r10-0x33]
   140028ab6:	call   QWORD PTR [r10-0x33]
   140028aba:	call   QWORD PTR [r10-0x33]
   140028abe:	call   QWORD PTR [r10-0x33]
   140028ac2:	call   QWORD PTR [r10-0x33]
   140028ac6:	call   QWORD PTR [r10-0x33]
   140028aca:	call   QWORD PTR [r10-0x33]
   140028ace:	call   QWORD PTR [r10-0x33]
   140028ad2:	call   QWORD PTR [r10-0x33]
   140028ad6:	call   QWORD PTR [r10-0x33]
   140028ada:	call   QWORD PTR [r10-0x33]
   140028ade:	call   QWORD PTR [r10-0x33]
   140028ae2:	call   QWORD PTR [r10-0x33]
   140028ae6:	call   QWORD PTR [r10-0x33]
   140028aea:	jmp    FWORD PTR [r15-0x2b]
   140028aee:	(bad)  
   140028aef:	(bad)  
   140028af0:	jg     0x140028acc
   140028af2:	jb     0x140028af3
   140028af4:	push   rdx
   140028af5:	int    0x41
   140028af7:	call   QWORD PTR [rdx-0x33]
   140028afa:	call   QWORD PTR [r10-0x33]
   140028afe:	call   QWORD PTR [r10-0x33]
   140028b02:	jmp    QWORD PTR [r8-0x2f]
   140028b06:	push   rcx
   140028b07:	jmp    rax
   140028b09:	neg    ch
   140028b0b:	(bad)  
   140028b0c:	(bad)  
   140028b0d:	(bad)  
   140028b0e:	(bad)  
   140028b0f:	(bad)  
   140028b10:	fucom  st(6)
   140028b12:	fdivr  st,st(7)
   140028b14:	cmp    eax,0x29ff1d6d
   140028b19:	pop    rsi
   140028b1a:	add    eax,0x55e29ff
   140028b1f:	jmp    FWORD PTR [rcx]
   140028b21:	pop    rsi
   140028b22:	add    eax,0x55e29ff
   140028b27:	jmp    FWORD PTR [rcx]
   140028b29:	pop    rsi
   140028b2a:	add    eax,0x55e29ff
   140028b2f:	jmp    FWORD PTR [rcx]
   140028b31:	pop    rsi
   140028b32:	add    eax,0x55e29ff
   140028b37:	jmp    FWORD PTR [rcx]
   140028b39:	pop    rsi
   140028b3a:	add    eax,0x55e29ff
   140028b3f:	jmp    FWORD PTR [rcx]
   140028b41:	pop    rsi
   140028b42:	add    eax,0x55e29ff
   140028b47:	jmp    FWORD PTR [rcx]
   140028b49:	pop    rsi
   140028b4a:	add    eax,0x55e29ff
   140028b4f:	jmp    FWORD PTR [rcx]
   140028b51:	pop    rsi
   140028b52:	add    eax,0x55e29ff
   140028b57:	jmp    FWORD PTR [rcx]
   140028b59:	pop    rsi
   140028b5a:	add    eax,0x55e29ff
   140028b5f:	jmp    FWORD PTR [rcx]
   140028b61:	pop    rsi
   140028b62:	add    eax,0x55e29ff
   140028b67:	jmp    FWORD PTR [rcx]
   140028b69:	pop    rsi
   140028b6a:	add    eax,0x55e29ff
   140028b6f:	jmp    FWORD PTR [rcx]
   140028b71:	pop    rsi
   140028b72:	add    eax,0x55e29ff
   140028b77:	jmp    FWORD PTR [rcx]
   140028b79:	pop    rsi
   140028b7a:	add    eax,0x55e29ff
   140028b7f:	jmp    FWORD PTR [rcx]
   140028b81:	pop    rsi
   140028b82:	add    eax,0xffffffff
   140028b87:	(bad)  
   140028b88:	(bad)  
   140028b89:	(bad)  
   140028b8a:	(bad)  
   140028b8b:	(bad)  
   140028b8c:	(bad)  
   140028b8d:	(bad)  
   140028b8e:	(bad)  
   140028b8f:	(bad)  
   140028b90:	(bad)  
   140028b91:	(bad)  
   140028b92:	(bad)  
   140028b93:	jmp    FWORD PTR [rcx]
   140028b95:	pop    rsi
   140028b96:	add    eax,0x55e29ff
   140028b9b:	jmp    FWORD PTR [rcx]
   140028b9d:	pop    rsi
   140028b9e:	add    eax,0x55e29ff
   140028ba3:	(bad)  
   140028ba4:	(bad)  
   140028ba5:	(bad)  
   140028ba6:	(bad)  
   140028ba7:	(bad)  
   140028ba8:	(bad)  
   140028ba9:	(bad)  
   140028baa:	(bad)  
   140028bab:	inc    DWORD PTR [rax]
   140028bad:	add    BYTE PTR [rax],al
   140028baf:	rex.W add BYTE PTR [rax],al
   140028bb2:	add    BYTE PTR [rdx],ch
   140028bb4:	add    BYTE PTR [rax],al
   140028bb6:	add    BYTE PTR [rdi],dl
   140028bb8:	add    BYTE PTR [rax],al
   140028bba:	add    BYTE PTR [rax+rax*1],cl
   140028bbd:	add    BYTE PTR [rax],al
   140028bbf:	(bad)  
   140028bc0:	add    BYTE PTR [rax],al
   140028bc2:	add    BYTE PTR [rbx],al
   140028bc4:	add    BYTE PTR [rax],al
   140028bc6:	add    BYTE PTR [rcx],al
	...
   140028c28:	add    BYTE PTR [rax],al
   140028c2a:	add    BYTE PTR [rdx],al
   140028c2c:	add    BYTE PTR [rax],al
   140028c2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c028c34
   140028c34:	add    BYTE PTR [rax],al
   140028c36:	add    BYTE PTR [rax+rax*1],bl
   140028c39:	add    BYTE PTR [rax],al
   140028c3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140028c3e:	call   QWORD PTR [r10-0x33]
   140028c42:	call   QWORD PTR [r10-0x33]
   140028c46:	call   QWORD PTR [r10-0x33]
   140028c4a:	call   QWORD PTR [r10-0x33]
   140028c4e:	call   QWORD PTR [r10-0x33]
   140028c52:	call   QWORD PTR [r10-0x33]
   140028c56:	call   QWORD PTR [r10-0x33]
   140028c5a:	call   QWORD PTR [r10-0x33]
   140028c5e:	call   QWORD PTR [r10-0x33]
   140028c62:	call   QWORD PTR [r10-0x33]
   140028c66:	call   QWORD PTR [r10-0x33]
   140028c6a:	call   QWORD PTR [r10-0x33]
   140028c6e:	call   QWORD PTR [r10-0x33]
   140028c72:	call   QWORD PTR [r10-0x33]
   140028c76:	call   QWORD PTR [r10-0x33]
   140028c7a:	call   QWORD PTR [r10-0x33]
   140028c7e:	call   QWORD PTR [r10-0x33]
   140028c82:	call   QWORD PTR [r10-0x33]
   140028c86:	call   QWORD PTR [r10-0x33]
   140028c8a:	call   QWORD PTR [r10-0x33]
   140028c8e:	call   QWORD PTR [r10-0x33]
   140028c92:	call   QWORD PTR [r10-0x33]
   140028c96:	call   QWORD PTR [r10-0x33]
   140028c9a:	call   QWORD PTR [r10-0x33]
   140028c9e:	call   QWORD PTR [r10-0x33]
   140028ca2:	call   QWORD PTR [r10-0x33]
   140028ca6:	call   QWORD PTR [r10-0x33]
   140028caa:	call   QWORD PTR [r10-0x33]
   140028cae:	call   QWORD PTR [r10-0x33]
   140028cb2:	call   QWORD PTR [r10-0x33]
   140028cb6:	call   QWORD PTR [r10-0x33]
   140028cba:	call   QWORD PTR [r10-0x33]
   140028cbe:	call   QWORD PTR [r10-0x33]
   140028cc2:	call   QWORD PTR [r10-0x33]
   140028cc6:	call   QWORD PTR [r10-0x33]
   140028cca:	call   QWORD PTR [r10-0x33]
   140028cce:	call   QWORD PTR [r10-0x33]
   140028cd2:	call   QWORD PTR [r10-0x33]
   140028cd6:	call   QWORD PTR [r10-0x33]
   140028cda:	call   QWORD PTR [r10-0x33]
   140028cde:	call   QWORD PTR [r10-0x33]
   140028ce2:	call   QWORD PTR [r10-0x33]
   140028ce6:	call   QWORD PTR [r11-0x33]
   140028cea:	rex.X (bad) 
   140028cec:	fdiv   st,st(4)
   140028cee:	(bad)  
   140028cef:	(bad)  
   140028cf0:	(bad)  
   140028cf1:	(bad)  
   140028cf2:	(bad)  
   140028cf3:	(bad)  
   140028cf4:	fdivrp st(6),st
   140028cf6:	(bad)  
   140028cf8:	xchg   edx,eax
   140028cf9:	fild   WORD PTR [rdi+0x43ce54ff]
   140028cff:	call   QWORD PTR [rdx-0x33]
   140028d02:	call   QWORD PTR [r10-0x33]
   140028d06:	jmp    QWORD PTR [r8-0x2f]
   140028d0a:	push   rcx
   140028d0b:	jmp    rax
   140028d0d:	neg    ch
   140028d0f:	(bad)  
   140028d10:	(bad)  
   140028d11:	(bad)  
   140028d12:	(bad)  
   140028d13:	(bad)  
   140028d14:	fucom  st(6)
   140028d16:	fdivr  st,st(7)
   140028d18:	cmp    eax,0x29ff1d6d
   140028d1d:	pop    rsi
   140028d1e:	add    eax,0x55e29ff
   140028d23:	jmp    FWORD PTR [rcx]
   140028d25:	pop    rsi
   140028d26:	add    eax,0x55e29ff
   140028d2b:	jmp    FWORD PTR [rcx]
   140028d2d:	pop    rsi
   140028d2e:	add    eax,0x55e29ff
   140028d33:	jmp    FWORD PTR [rcx]
   140028d35:	pop    rsi
   140028d36:	add    eax,0x55e29ff
   140028d3b:	jmp    FWORD PTR [rcx]
   140028d3d:	pop    rsi
   140028d3e:	add    eax,0x55e29ff
   140028d43:	jmp    FWORD PTR [rcx]
   140028d45:	pop    rsi
   140028d46:	add    eax,0x55e29ff
   140028d4b:	jmp    FWORD PTR [rcx]
   140028d4d:	pop    rsi
   140028d4e:	add    eax,0x55e29ff
   140028d53:	jmp    FWORD PTR [rcx]
   140028d55:	pop    rsi
   140028d56:	add    eax,0x55e29ff
   140028d5b:	jmp    FWORD PTR [rcx]
   140028d5d:	pop    rsi
   140028d5e:	add    eax,0x55e29ff
   140028d63:	jmp    FWORD PTR [rcx]
   140028d65:	pop    rsi
   140028d66:	add    eax,0x55e29ff
   140028d6b:	jmp    FWORD PTR [rcx]
   140028d6d:	pop    rsi
   140028d6e:	add    eax,0x55e29ff
   140028d73:	jmp    FWORD PTR [rcx]
   140028d75:	pop    rsi
   140028d76:	add    eax,0x55e29ff
   140028d7b:	jmp    FWORD PTR [rcx]
   140028d7d:	pop    rsi
   140028d7e:	add    eax,0x55e29ff
   140028d83:	(bad)  
   140028d84:	(bad)  
   140028d85:	(bad)  
   140028d86:	(bad)  
   140028d87:	(bad)  
   140028d88:	(bad)  
   140028d89:	(bad)  
   140028d8a:	(bad)  
   140028d8b:	(bad)  
   140028d8c:	(bad)  
   140028d8d:	(bad)  
   140028d8e:	(bad)  
   140028d8f:	(bad)  
   140028d90:	(bad)  
   140028d91:	(bad)  
   140028d92:	(bad)  
   140028d93:	jmp    FWORD PTR [rcx]
   140028d95:	pop    rsi
   140028d96:	add    eax,0x55e29ff
   140028d9b:	jmp    FWORD PTR [rcx]
   140028d9d:	pop    rsi
   140028d9e:	add    eax,0x55e29ff
   140028da3:	(bad)  
   140028da4:	(bad)  
   140028da5:	(bad)  
   140028da6:	(bad)  
   140028da7:	(bad)  
   140028da8:	(bad)  
   140028da9:	(bad)  
   140028daa:	(bad)  
   140028dab:	inc    DWORD PTR [rax]
   140028dad:	add    BYTE PTR [rax],al
   140028daf:	rex.WRB add BYTE PTR [r8],r8b
   140028db2:	add    BYTE PTR [rcx],dh
   140028db4:	add    BYTE PTR [rax],al
   140028db6:	add    BYTE PTR [rsi],bl
   140028db8:	add    BYTE PTR [rax],al
   140028dba:	add    BYTE PTR [rdx],dl
   140028dbc:	add    BYTE PTR [rax],al
   140028dbe:	add    BYTE PTR [rcx],cl
   140028dc0:	add    BYTE PTR [rax],al
   140028dc2:	add    BYTE PTR [rax+rax*1],al
   140028dc5:	add    BYTE PTR [rax],al
   140028dc7:	add    al,BYTE PTR [rax]
   140028dc9:	add    BYTE PTR [rax],al
   140028dcb:	add    DWORD PTR [rax],eax
	...
   140028e29:	add    BYTE PTR [rax],al
   140028e2b:	add    al,BYTE PTR [rax]
   140028e2d:	add    BYTE PTR [rax],al
   140028e2f:	add    eax,0xc000000
   140028e34:	add    BYTE PTR [rax],al
   140028e36:	add    BYTE PTR [rax+rax*1],bl
   140028e39:	add    BYTE PTR [rax],al
   140028e3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140028e3e:	call   QWORD PTR [r10-0x33]
   140028e42:	call   QWORD PTR [r10-0x33]
   140028e46:	call   QWORD PTR [r10-0x33]
   140028e4a:	call   QWORD PTR [r10-0x33]
   140028e4e:	call   QWORD PTR [r10-0x33]
   140028e52:	call   QWORD PTR [r10-0x33]
   140028e56:	call   QWORD PTR [r10-0x33]
   140028e5a:	call   QWORD PTR [r10-0x33]
   140028e5e:	call   QWORD PTR [r10-0x33]
   140028e62:	call   QWORD PTR [r10-0x33]
   140028e66:	call   QWORD PTR [r10-0x33]
   140028e6a:	call   QWORD PTR [r10-0x33]
   140028e6e:	call   QWORD PTR [r10-0x33]
   140028e72:	call   QWORD PTR [r10-0x33]
   140028e76:	call   QWORD PTR [r10-0x33]
   140028e7a:	call   QWORD PTR [r10-0x33]
   140028e7e:	call   QWORD PTR [r10-0x33]
   140028e82:	call   QWORD PTR [r10-0x33]
   140028e86:	call   QWORD PTR [r10-0x33]
   140028e8a:	call   QWORD PTR [r10-0x33]
   140028e8e:	call   QWORD PTR [r10-0x33]
   140028e92:	call   QWORD PTR [r10-0x33]
   140028e96:	call   QWORD PTR [r10-0x33]
   140028e9a:	call   QWORD PTR [r10-0x33]
   140028e9e:	call   QWORD PTR [r10-0x33]
   140028ea2:	call   QWORD PTR [r10-0x33]
   140028ea6:	call   QWORD PTR [r10-0x33]
   140028eaa:	call   QWORD PTR [r10-0x33]
   140028eae:	call   QWORD PTR [r10-0x33]
   140028eb2:	call   QWORD PTR [r10-0x33]
   140028eb6:	call   QWORD PTR [r10-0x33]
   140028eba:	call   QWORD PTR [r10-0x33]
   140028ebe:	call   QWORD PTR [r10-0x33]
   140028ec2:	call   QWORD PTR [r10-0x33]
   140028ec6:	call   QWORD PTR [r10-0x33]
   140028eca:	call   QWORD PTR [r10-0x33]
   140028ece:	call   QWORD PTR [r10-0x33]
   140028ed2:	call   QWORD PTR [r10-0x33]
   140028ed6:	call   QWORD PTR [r10-0x33]
   140028eda:	call   QWORD PTR [r10-0x33]
   140028ede:	call   QWORD PTR [r10-0x33]
   140028ee2:	call   QWORD PTR [r10-0x33]
   140028ee6:	call   QWORD PTR [r15-0x731f]
   140028eed:	(bad)  
   140028eee:	(bad)  
   140028eef:	(bad)  
   140028ef0:	(bad)  
   140028ef1:	(bad)  
   140028ef2:	(bad)  
   140028ef3:	(bad)  
   140028ef4:	(bad)  
   140028ef5:	(bad)  
   140028ef6:	(bad)  
   140028ef7:	(bad)  
   140028ef8:	(bad)  
   140028ef9:	(bad)  
   140028efa:	(bad)  
   140028efb:	(bad)  
   140028efc:	call   0xde0275f9
   140028f01:	jrcxz  0x140028e97
   140028f03:	call   FWORD PTR [rax-0x31]
   140028f06:	rex.W call QWORD PTR [rdx-0x33]
   140028f0a:	jmp    QWORD PTR [r8-0x2f]
   140028f0e:	push   rcx
   140028f0f:	jmp    rax
   140028f11:	neg    ch
   140028f13:	(bad)  
   140028f14:	(bad)  
   140028f15:	(bad)  
   140028f16:	(bad)  
   140028f17:	(bad)  
   140028f18:	fucom  st(6)
   140028f1a:	fdivr  st,st(7)
   140028f1c:	cmp    eax,0x29ff1d6d
   140028f21:	pop    rsi
   140028f22:	add    eax,0x55e29ff
   140028f27:	jmp    FWORD PTR [rcx]
   140028f29:	pop    rsi
   140028f2a:	add    eax,0x55e29ff
   140028f2f:	jmp    FWORD PTR [rcx]
   140028f31:	pop    rsi
   140028f32:	add    eax,0x55e29ff
   140028f37:	jmp    FWORD PTR [rcx]
   140028f39:	pop    rsi
   140028f3a:	add    eax,0x55e29ff
   140028f3f:	jmp    FWORD PTR [rcx]
   140028f41:	pop    rsi
   140028f42:	add    eax,0x55e29ff
   140028f47:	jmp    FWORD PTR [rcx]
   140028f49:	pop    rsi
   140028f4a:	add    eax,0x55e29ff
   140028f4f:	jmp    FWORD PTR [rcx]
   140028f51:	pop    rsi
   140028f52:	add    eax,0x55e29ff
   140028f57:	jmp    FWORD PTR [rcx]
   140028f59:	pop    rsi
   140028f5a:	add    eax,0x55e29ff
   140028f5f:	jmp    FWORD PTR [rcx]
   140028f61:	pop    rsi
   140028f62:	add    eax,0x55e29ff
   140028f67:	jmp    FWORD PTR [rcx]
   140028f69:	pop    rsi
   140028f6a:	add    eax,0x55e29ff
   140028f6f:	jmp    FWORD PTR [rcx]
   140028f71:	pop    rsi
   140028f72:	add    eax,0x55e29ff
   140028f77:	jmp    FWORD PTR [rcx]
   140028f79:	pop    rsi
   140028f7a:	add    eax,0x55e29ff
   140028f7f:	jmp    FWORD PTR [rcx]
   140028f81:	pop    rsi
   140028f82:	add    eax,0xffffffff
   140028f87:	(bad)  
   140028f88:	(bad)  
   140028f89:	(bad)  
   140028f8a:	(bad)  
   140028f8b:	(bad)  
   140028f8c:	(bad)  
   140028f8d:	(bad)  
   140028f8e:	(bad)  
   140028f8f:	(bad)  
   140028f90:	(bad)  
   140028f91:	(bad)  
   140028f92:	(bad)  
   140028f93:	jmp    FWORD PTR [rcx]
   140028f95:	pop    rsi
   140028f96:	add    eax,0x55e29ff
   140028f9b:	jmp    FWORD PTR [rcx]
   140028f9d:	pop    rsi
   140028f9e:	add    eax,0x55e29ff
   140028fa3:	(bad)  
   140028fa4:	(bad)  
   140028fa5:	(bad)  
   140028fa6:	(bad)  
   140028fa7:	(bad)  
   140028fa8:	(bad)  
   140028fa9:	(bad)  
   140028faa:	(bad)  
   140028fab:	inc    DWORD PTR [rax]
   140028fad:	add    BYTE PTR [rax],al
   140028faf:	pop    rcx
   140028fb0:	add    BYTE PTR [rax],al
   140028fb2:	add    BYTE PTR [rsi],bh
   140028fb4:	add    BYTE PTR [rax],al
   140028fb6:	add    BYTE PTR [rcx],ch
   140028fb8:	add    BYTE PTR [rax],al
   140028fba:	add    BYTE PTR [rdx],bl
   140028fbc:	add    BYTE PTR [rax],al
   140028fbe:	add    BYTE PTR [rdi],cl
   140028fc0:	add    BYTE PTR [rax],al
   140028fc2:	add    BYTE PTR [rdi],al
   140028fc4:	add    BYTE PTR [rax],al
   140028fc6:	add    BYTE PTR [rbx],al
   140028fc8:	add    BYTE PTR [rax],al
   140028fca:	add    BYTE PTR [rcx],al
	...
   140029028:	add    BYTE PTR [rax],al
   14002902a:	add    BYTE PTR [rdx],al
   14002902c:	add    BYTE PTR [rax],al
   14002902e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029034
   140029034:	add    BYTE PTR [rax],al
   140029036:	add    BYTE PTR [rax+rax*1],bl
   140029039:	add    BYTE PTR [rax],al
   14002903b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002903e:	call   QWORD PTR [r10-0x33]
   140029042:	call   QWORD PTR [r10-0x33]
   140029046:	call   QWORD PTR [r10-0x33]
   14002904a:	call   QWORD PTR [r10-0x33]
   14002904e:	call   QWORD PTR [r10-0x33]
   140029052:	call   QWORD PTR [r10-0x33]
   140029056:	call   QWORD PTR [r10-0x33]
   14002905a:	call   QWORD PTR [r10-0x33]
   14002905e:	call   QWORD PTR [r10-0x33]
   140029062:	call   QWORD PTR [r10-0x33]
   140029066:	call   QWORD PTR [r10-0x33]
   14002906a:	call   QWORD PTR [r10-0x33]
   14002906e:	call   QWORD PTR [r10-0x33]
   140029072:	call   QWORD PTR [r10-0x33]
   140029076:	call   QWORD PTR [r10-0x33]
   14002907a:	call   QWORD PTR [r10-0x33]
   14002907e:	call   QWORD PTR [r10-0x33]
   140029082:	call   QWORD PTR [r10-0x33]
   140029086:	call   QWORD PTR [r10-0x33]
   14002908a:	call   QWORD PTR [r10-0x33]
   14002908e:	call   QWORD PTR [r10-0x33]
   140029092:	call   QWORD PTR [r10-0x33]
   140029096:	call   QWORD PTR [r10-0x33]
   14002909a:	call   QWORD PTR [r10-0x33]
   14002909e:	call   QWORD PTR [r10-0x33]
   1400290a2:	call   QWORD PTR [r10-0x33]
   1400290a6:	call   QWORD PTR [r10-0x33]
   1400290aa:	call   QWORD PTR [r10-0x33]
   1400290ae:	call   QWORD PTR [r10-0x33]
   1400290b2:	call   QWORD PTR [r10-0x33]
   1400290b6:	call   QWORD PTR [r10-0x33]
   1400290ba:	call   QWORD PTR [r10-0x33]
   1400290be:	call   QWORD PTR [r10-0x33]
   1400290c2:	call   QWORD PTR [r10-0x33]
   1400290c6:	call   QWORD PTR [r10-0x33]
   1400290ca:	call   QWORD PTR [r10-0x33]
   1400290ce:	call   QWORD PTR [r10-0x33]
   1400290d2:	call   QWORD PTR [r10-0x33]
   1400290d6:	call   QWORD PTR [r10-0x33]
   1400290da:	call   QWORD PTR [r10-0x33]
   1400290de:	call   QWORD PTR [r10-0x33]
   1400290e2:	jmp    QWORD PTR [r8-0x2f]
   1400290e6:	push   rax
   1400290e7:	push   rdx
   1400290e9:	sti    
   1400290ea:	icebp  
   1400290eb:	(bad)  
   1400290ec:	(bad)  
   1400290ed:	(bad)  
   1400290ee:	(bad)  
   1400290ef:	(bad)  
   1400290f0:	(bad)  
   1400290f1:	(bad)  
   1400290f2:	(bad)  
   1400290f3:	(bad)  
   1400290f4:	(bad)  
   1400290f5:	(bad)  
   1400290f6:	(bad)  
   1400290f7:	(bad)  
   1400290f8:	(bad)  
   1400290f9:	(bad)  
   1400290fa:	(bad)  
   1400290fb:	(bad)  
   1400290fc:	(bad)  
   1400290fd:	(bad)  
   1400290fe:	(bad)  
   1400290ff:	(bad)  
   140029100:	(bad)  
   140029101:	(bad)  
   140029102:	(bad)  
   140029103:	jmp    rbx
   140029105:	mul    eax
   140029107:	call   QWORD PTR [rsi+rcx*8+0x43]
   14002910b:	call   QWORD PTR [rdx-0x33]
   14002910e:	jmp    QWORD PTR [r8-0x2f]
   140029112:	push   rcx
   140029113:	jmp    rax
   140029115:	neg    ch
   140029117:	(bad)  
   140029118:	(bad)  
   140029119:	(bad)  
   14002911a:	(bad)  
   14002911b:	(bad)  
   14002911c:	fucom  st(6)
   14002911e:	fdivr  st,st(7)
   140029120:	cmp    eax,0x29ff1d6d
   140029125:	pop    rsi
   140029126:	add    eax,0x55e29ff
   14002912b:	jmp    FWORD PTR [rcx]
   14002912d:	pop    rsi
   14002912e:	add    eax,0x55e29ff
   140029133:	jmp    FWORD PTR [rcx]
   140029135:	pop    rsi
   140029136:	add    eax,0x55e29ff
   14002913b:	jmp    FWORD PTR [rcx]
   14002913d:	pop    rsi
   14002913e:	add    eax,0x55e29ff
   140029143:	jmp    FWORD PTR [rcx]
   140029145:	pop    rsi
   140029146:	add    eax,0x55e29ff
   14002914b:	jmp    FWORD PTR [rcx]
   14002914d:	pop    rsi
   14002914e:	add    eax,0x55e29ff
   140029153:	jmp    FWORD PTR [rcx]
   140029155:	pop    rsi
   140029156:	add    eax,0x55e29ff
   14002915b:	jmp    FWORD PTR [rcx]
   14002915d:	pop    rsi
   14002915e:	add    eax,0x55e29ff
   140029163:	jmp    FWORD PTR [rcx]
   140029165:	pop    rsi
   140029166:	add    eax,0x55e29ff
   14002916b:	jmp    FWORD PTR [rcx]
   14002916d:	pop    rsi
   14002916e:	add    eax,0x55e29ff
   140029173:	jmp    FWORD PTR [rcx]
   140029175:	pop    rsi
   140029176:	add    eax,0x55e29ff
   14002917b:	jmp    FWORD PTR [rcx]
   14002917d:	pop    rsi
   14002917e:	add    eax,0x55e29ff
   140029183:	jmp    FWORD PTR [rcx]
   140029185:	pop    rsi
   140029186:	add    eax,0x55e29ff
   14002918b:	jmp    FWORD PTR [rcx]
   14002918d:	pop    rsi
   14002918e:	add    eax,0x55e29ff
   140029193:	jmp    FWORD PTR [rcx]
   140029195:	pop    rsi
   140029196:	add    eax,0x55e29ff
   14002919b:	jmp    FWORD PTR [rcx]
   14002919d:	pop    rsi
   14002919e:	add    eax,0x55e29ff
   1400291a3:	(bad)  
   1400291a4:	(bad)  
   1400291a5:	(bad)  
   1400291a6:	(bad)  
   1400291a7:	(bad)  
   1400291a8:	(bad)  
   1400291a9:	(bad)  
   1400291aa:	(bad)  
   1400291ab:	(bad)  
   1400291ac:	cmp    dl,BYTE PTR [rdx+0xb32d]
   1400291b2:	add    BYTE PTR [rdi+0x0],cl
   1400291b5:	add    BYTE PTR [rax],al
   1400291b7:	cmp    BYTE PTR [rax],al
   1400291b9:	add    BYTE PTR [rax],al
   1400291bb:	and    eax,0x16000000
   1400291c0:	add    BYTE PTR [rax],al
   1400291c2:	add    BYTE PTR [rbx],cl
   1400291c4:	add    BYTE PTR [rax],al
   1400291c6:	add    BYTE PTR [rip+0x2000000],al        # 0x1420291cc
   1400291cc:	add    BYTE PTR [rax],al
   1400291ce:	add    BYTE PTR [rcx],al
	...
   140029228:	add    BYTE PTR [rax],al
   14002922a:	add    BYTE PTR [rdx],al
   14002922c:	add    BYTE PTR [rax],al
   14002922e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029234
   140029234:	add    BYTE PTR [rax],al
   140029236:	add    BYTE PTR [rax+rax*1],bl
   140029239:	add    BYTE PTR [rax],al
   14002923b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002923e:	call   QWORD PTR [r10-0x33]
   140029242:	call   QWORD PTR [r10-0x33]
   140029246:	call   QWORD PTR [r10-0x33]
   14002924a:	call   QWORD PTR [r10-0x33]
   14002924e:	call   QWORD PTR [r10-0x33]
   140029252:	call   QWORD PTR [r10-0x33]
   140029256:	call   QWORD PTR [r10-0x33]
   14002925a:	call   QWORD PTR [r10-0x33]
   14002925e:	call   QWORD PTR [r10-0x33]
   140029262:	call   QWORD PTR [r10-0x33]
   140029266:	call   QWORD PTR [r10-0x33]
   14002926a:	call   QWORD PTR [r10-0x33]
   14002926e:	call   QWORD PTR [r10-0x33]
   140029272:	call   QWORD PTR [r10-0x33]
   140029276:	call   QWORD PTR [r10-0x33]
   14002927a:	call   QWORD PTR [r10-0x33]
   14002927e:	call   QWORD PTR [r10-0x33]
   140029282:	call   QWORD PTR [r10-0x33]
   140029286:	call   QWORD PTR [r10-0x33]
   14002928a:	call   QWORD PTR [r10-0x33]
   14002928e:	call   QWORD PTR [r10-0x33]
   140029292:	call   QWORD PTR [r10-0x33]
   140029296:	call   QWORD PTR [r10-0x33]
   14002929a:	call   QWORD PTR [r10-0x33]
   14002929e:	call   QWORD PTR [r10-0x33]
   1400292a2:	call   QWORD PTR [r10-0x33]
   1400292a6:	call   QWORD PTR [r10-0x33]
   1400292aa:	call   QWORD PTR [r10-0x33]
   1400292ae:	call   QWORD PTR [r10-0x33]
   1400292b2:	call   QWORD PTR [r10-0x33]
   1400292b6:	call   QWORD PTR [r10-0x33]
   1400292ba:	call   QWORD PTR [r10-0x33]
   1400292be:	call   QWORD PTR [r10-0x33]
   1400292c2:	call   QWORD PTR [r10-0x33]
   1400292c6:	call   QWORD PTR [r10-0x33]
   1400292ca:	call   QWORD PTR [r10-0x33]
   1400292ce:	call   QWORD PTR [r10-0x33]
   1400292d2:	call   QWORD PTR [r10-0x33]
   1400292d6:	call   QWORD PTR [r10-0x33]
   1400292da:	call   QWORD PTR [r10-0x33]
   1400292de:	call   QWORD PTR [r10-0x33]
   1400292e2:	rex.B (bad) 
   1400292e4:	mov    esp,0xffffb5ec
   1400292e9:	(bad)  
   1400292ea:	(bad)  
   1400292eb:	(bad)  
   1400292ec:	(bad)  
   1400292ed:	(bad)  
   1400292ee:	(bad)  
   1400292ef:	(bad)  
   1400292f0:	(bad)  
   1400292f1:	(bad)  
   1400292f2:	(bad)  
   1400292f3:	(bad)  
   1400292f4:	(bad)  
   1400292f5:	(bad)  
   1400292f6:	(bad)  
   1400292f7:	(bad)  
   1400292f8:	(bad)  
   1400292f9:	(bad)  
   1400292fa:	(bad)  
   1400292fb:	(bad)  
   1400292fc:	(bad)  
   1400292fd:	(bad)  
   1400292fe:	(bad)  
   1400292ff:	(bad)  
   140029300:	(bad)  
   140029301:	(bad)  
   140029302:	(bad)  
   140029303:	call   QWORD PTR [rsi+0x52ff8ce1]
   140029309:	int    0x41
   14002930b:	call   QWORD PTR [rdx-0x33]
   14002930e:	call   QWORD PTR [r10-0x33]
   140029312:	jmp    QWORD PTR [r8-0x2f]
   140029316:	push   rcx
   140029317:	jmp    rax
   140029319:	neg    ch
   14002931b:	(bad)  
   14002931c:	(bad)  
   14002931d:	(bad)  
   14002931e:	(bad)  
   14002931f:	(bad)  
   140029320:	fucom  st(6)
   140029322:	fdivr  st,st(7)
   140029324:	cmp    eax,0x29ff1d6d
   140029329:	pop    rsi
   14002932a:	add    eax,0x55e29ff
   14002932f:	jmp    FWORD PTR [rcx]
   140029331:	pop    rsi
   140029332:	add    eax,0x55e29ff
   140029337:	jmp    FWORD PTR [rcx]
   140029339:	pop    rsi
   14002933a:	add    eax,0x55e29ff
   14002933f:	jmp    FWORD PTR [rcx]
   140029341:	pop    rsi
   140029342:	add    eax,0x55e29ff
   140029347:	jmp    FWORD PTR [rcx]
   140029349:	pop    rsi
   14002934a:	add    eax,0x55e29ff
   14002934f:	jmp    FWORD PTR [rcx]
   140029351:	pop    rsi
   140029352:	add    eax,0x55e29ff
   140029357:	jmp    FWORD PTR [rcx]
   140029359:	pop    rsi
   14002935a:	add    eax,0x55e29ff
   14002935f:	jmp    FWORD PTR [rcx]
   140029361:	pop    rsi
   140029362:	add    eax,0x55e29ff
   140029367:	jmp    FWORD PTR [rcx]
   140029369:	pop    rsi
   14002936a:	add    eax,0x55e29ff
   14002936f:	jmp    FWORD PTR [rcx]
   140029371:	pop    rsi
   140029372:	add    eax,0x55e29ff
   140029377:	jmp    FWORD PTR [rcx]
   140029379:	pop    rsi
   14002937a:	add    eax,0x55e29ff
   14002937f:	jmp    FWORD PTR [rcx]
   140029381:	pop    rsi
   140029382:	add    eax,0x55e29ff
   140029387:	jmp    FWORD PTR [rcx]
   140029389:	pop    rsi
   14002938a:	add    eax,0x55e29ff
   14002938f:	jmp    FWORD PTR [rcx]
   140029391:	pop    rsi
   140029392:	add    eax,0x55e29ff
   140029397:	jmp    FWORD PTR [rcx]
   140029399:	pop    rsi
   14002939a:	add    eax,0x55e29ff
   14002939f:	jmp    FWORD PTR [rcx]
   1400293a1:	pop    rsi
   1400293a2:	add    eax,0xffffffff
   1400293a7:	(bad)  
   1400293a8:	(bad)  
   1400293a9:	(bad)  
   1400293aa:	(bad)  
   1400293ab:	call   QWORD PTR [rdx-0x33]
   1400293ae:	rex.B (bad) 
   1400293b0:	cmp    edx,DWORD PTR [rbx+0xb02e]
   1400293b6:	add    BYTE PTR [rdx+0x0],cl
   1400293b9:	add    BYTE PTR [rax],al
   1400293bb:	xor    al,BYTE PTR [rax]
   1400293bd:	add    BYTE PTR [rax],al
   1400293bf:	sbb    eax,0x10000000
   1400293c4:	add    BYTE PTR [rax],al
   1400293c6:	add    BYTE PTR [rdi],al
   1400293c8:	add    BYTE PTR [rax],al
   1400293ca:	add    BYTE PTR [rbx],al
   1400293cc:	add    BYTE PTR [rax],al
   1400293ce:	add    BYTE PTR [rcx],al
	...
   140029428:	add    BYTE PTR [rax],al
   14002942a:	add    BYTE PTR [rdx],al
   14002942c:	add    BYTE PTR [rax],al
   14002942e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029434
   140029434:	add    BYTE PTR [rax],al
   140029436:	add    BYTE PTR [rax+rax*1],bl
   140029439:	add    BYTE PTR [rax],al
   14002943b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002943e:	call   QWORD PTR [r10-0x33]
   140029442:	call   QWORD PTR [r10-0x33]
   140029446:	call   QWORD PTR [r10-0x33]
   14002944a:	call   QWORD PTR [r10-0x33]
   14002944e:	call   QWORD PTR [r10-0x33]
   140029452:	call   QWORD PTR [r10-0x33]
   140029456:	call   QWORD PTR [r10-0x33]
   14002945a:	call   QWORD PTR [r10-0x33]
   14002945e:	call   QWORD PTR [r10-0x33]
   140029462:	call   QWORD PTR [r10-0x33]
   140029466:	call   QWORD PTR [r10-0x33]
   14002946a:	call   QWORD PTR [r10-0x33]
   14002946e:	call   QWORD PTR [r10-0x33]
   140029472:	call   QWORD PTR [r10-0x33]
   140029476:	call   QWORD PTR [r10-0x33]
   14002947a:	call   QWORD PTR [r10-0x33]
   14002947e:	call   QWORD PTR [r10-0x33]
   140029482:	call   QWORD PTR [r10-0x33]
   140029486:	call   QWORD PTR [r10-0x33]
   14002948a:	call   QWORD PTR [r10-0x33]
   14002948e:	call   QWORD PTR [r10-0x33]
   140029492:	call   QWORD PTR [r10-0x33]
   140029496:	call   QWORD PTR [r10-0x33]
   14002949a:	call   QWORD PTR [r10-0x33]
   14002949e:	call   QWORD PTR [r10-0x33]
   1400294a2:	call   QWORD PTR [r10-0x33]
   1400294a6:	call   QWORD PTR [r10-0x33]
   1400294aa:	call   QWORD PTR [r10-0x33]
   1400294ae:	call   QWORD PTR [r10-0x33]
   1400294b2:	call   QWORD PTR [r10-0x33]
   1400294b6:	call   QWORD PTR [r10-0x33]
   1400294ba:	call   QWORD PTR [r10-0x33]
   1400294be:	call   QWORD PTR [r10-0x33]
   1400294c2:	call   QWORD PTR [r10-0x33]
   1400294c6:	call   QWORD PTR [r10-0x33]
   1400294ca:	call   QWORD PTR [r10-0x33]
   1400294ce:	call   QWORD PTR [r10-0x33]
   1400294d2:	call   QWORD PTR [r10-0x33]
   1400294d6:	call   QWORD PTR [r10-0x33]
   1400294da:	call   QWORD PTR [r10-0x33]
   1400294de:	push   QWORD PTR [r15-0x28]
   1400294e2:	imul   edi,edi,0xfffefffe
   1400294e8:	(bad)  
   1400294e9:	(bad)  
   1400294ea:	(bad)  
   1400294eb:	(bad)  
   1400294ec:	(bad)  
   1400294ed:	(bad)  
   1400294ee:	(bad)  
   1400294ef:	(bad)  
   1400294f0:	(bad)  
   1400294f1:	(bad)  
   1400294f2:	(bad)  
   1400294f3:	(bad)  
   1400294f4:	(bad)  
   1400294f5:	(bad)  
   1400294f6:	(bad)  
   1400294f7:	(bad)  
   1400294f8:	(bad)  
   1400294f9:	(bad)  
   1400294fa:	(bad)  
   1400294fb:	(bad)  
   1400294fc:	(bad)  
   1400294fd:	(bad)  
   1400294fe:	(bad)  
   1400294ff:	(bad)  
   140029500:	(bad)  
   140029502:	(bad)  
   140029503:	call   QWORD PTR [rbx-0x33]
   140029506:	rex.X call QWORD PTR [rdx-0x33]
   14002950a:	call   QWORD PTR [r10-0x33]
   14002950e:	call   QWORD PTR [r10-0x33]
   140029512:	call   QWORD PTR [r10-0x33]
   140029516:	jmp    QWORD PTR [r8-0x2f]
   14002951a:	push   rcx
   14002951b:	jmp    rax
   14002951d:	neg    ch
   14002951f:	(bad)  
   140029520:	(bad)  
   140029521:	(bad)  
   140029522:	(bad)  
   140029523:	(bad)  
   140029524:	fucom  st(6)
   140029526:	fdivr  st,st(7)
   140029528:	cmp    eax,0x29ff1d6d
   14002952d:	pop    rsi
   14002952e:	add    eax,0x55e29ff
   140029533:	jmp    FWORD PTR [rcx]
   140029535:	pop    rsi
   140029536:	add    eax,0x55e29ff
   14002953b:	(bad)  
   14002953c:	(bad)  
   14002953d:	(bad)  
   14002953e:	(bad)  
   14002953f:	(bad)  
   140029540:	(bad)  
   140029541:	(bad)  
   140029542:	(bad)  
   140029543:	(bad)  
   140029544:	(bad)  
   140029545:	(bad)  
   140029546:	(bad)  
   140029547:	(bad)  
   140029548:	(bad)  
   140029549:	(bad)  
   14002954a:	(bad)  
   14002954b:	(bad)  
   14002954c:	(bad)  
   14002954d:	(bad)  
   14002954e:	(bad)  
   14002954f:	(bad)  
   140029550:	(bad)  
   140029551:	(bad)  
   140029552:	(bad)  
   140029553:	(bad)  
   140029554:	(bad)  
   140029555:	(bad)  
   140029556:	(bad)  
   140029557:	(bad)  
   140029558:	(bad)  
   140029559:	(bad)  
   14002955a:	(bad)  
   14002955b:	(bad)  
   14002955c:	(bad)  
   14002955d:	(bad)  
   14002955e:	(bad)  
   14002955f:	(bad)  
   140029560:	(bad)  
   140029561:	(bad)  
   140029562:	(bad)  
   140029563:	(bad)  
   140029564:	(bad)  
   140029565:	(bad)  
   140029566:	(bad)  
   140029567:	(bad)  
   140029568:	(bad)  
   140029569:	(bad)  
   14002956a:	(bad)  
   14002956b:	(bad)  
   14002956c:	(bad)  
   14002956d:	(bad)  
   14002956e:	(bad)  
   14002956f:	(bad)  
   140029570:	(bad)  
   140029571:	(bad)  
   140029572:	(bad)  
   140029573:	(bad)  
   140029574:	(bad)  
   140029575:	(bad)  
   140029576:	(bad)  
   140029577:	(bad)  
   140029578:	(bad)  
   140029579:	(bad)  
   14002957a:	(bad)  
   14002957b:	(bad)  
   14002957c:	(bad)  
   14002957d:	(bad)  
   14002957e:	(bad)  
   14002957f:	(bad)  
   140029580:	(bad)  
   140029581:	(bad)  
   140029582:	(bad)  
   140029583:	(bad)  
   140029584:	(bad)  
   140029585:	(bad)  
   140029586:	(bad)  
   140029587:	(bad)  
   140029588:	(bad)  
   140029589:	(bad)  
   14002958a:	(bad)  
   14002958b:	(bad)  
   14002958c:	(bad)  
   14002958d:	(bad)  
   14002958e:	(bad)  
   14002958f:	(bad)  
   140029590:	(bad)  
   140029591:	(bad)  
   140029592:	(bad)  
   140029593:	(bad)  
   140029594:	(bad)  
   140029595:	(bad)  
   140029596:	(bad)  
   140029597:	(bad)  
   140029598:	(bad)  
   140029599:	(bad)  
   14002959a:	(bad)  
   14002959b:	(bad)  
   14002959c:	(bad)  
   14002959d:	(bad)  
   14002959e:	(bad)  
   14002959f:	(bad)  
   1400295a0:	(bad)  
   1400295a1:	(bad)  
   1400295a2:	(bad)  
   1400295a3:	(bad)  
   1400295a4:	(bad)  
   1400295a5:	(bad)  
   1400295a6:	(bad)  
   1400295a7:	(bad)  
   1400295a8:	(bad)  
   1400295a9:	(bad)  
   1400295aa:	(bad)  
   1400295ab:	call   QWORD PTR [rdx-0x33]
   1400295ae:	call   QWORD PTR [r10-0x33]
   1400295b2:	rex.B (bad) 
   1400295b4:	cmp    al,0x96
   1400295b6:	(bad)  
   1400295b7:	scas   al,BYTE PTR es:[rdi]
   1400295b8:	add    BYTE PTR [rax],al
   1400295ba:	add    BYTE PTR [rcx+0x0],al
   1400295bd:	add    BYTE PTR [rax],al
   1400295bf:	(bad)  
   1400295c0:	add    BYTE PTR [rax],al
   1400295c2:	add    BYTE PTR [rax+rax*1],dl
   1400295c5:	add    BYTE PTR [rax],al
   1400295c7:	or     DWORD PTR [rax],eax
   1400295c9:	add    BYTE PTR [rax],al
   1400295cb:	add    al,0x0
   1400295cd:	add    BYTE PTR [rax],al
   1400295cf:	add    DWORD PTR [rax],eax
	...
   140029629:	add    BYTE PTR [rax],al
   14002962b:	add    al,BYTE PTR [rax]
   14002962d:	add    BYTE PTR [rax],al
   14002962f:	add    eax,0xc000000
   140029634:	add    BYTE PTR [rax],al
   140029636:	add    BYTE PTR [rax+rax*1],bl
   140029639:	add    BYTE PTR [rax],al
   14002963b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002963e:	call   QWORD PTR [r10-0x33]
   140029642:	call   QWORD PTR [r10-0x33]
   140029646:	call   QWORD PTR [r10-0x33]
   14002964a:	call   QWORD PTR [r10-0x33]
   14002964e:	call   QWORD PTR [r10-0x33]
   140029652:	call   QWORD PTR [r10-0x33]
   140029656:	call   QWORD PTR [r10-0x33]
   14002965a:	call   QWORD PTR [r10-0x33]
   14002965e:	call   QWORD PTR [r10-0x33]
   140029662:	call   QWORD PTR [r10-0x33]
   140029666:	call   QWORD PTR [r10-0x33]
   14002966a:	call   QWORD PTR [r10-0x33]
   14002966e:	call   QWORD PTR [r10-0x33]
   140029672:	call   QWORD PTR [r10-0x33]
   140029676:	call   QWORD PTR [r10-0x33]
   14002967a:	call   QWORD PTR [r10-0x33]
   14002967e:	call   QWORD PTR [r10-0x33]
   140029682:	call   QWORD PTR [r10-0x33]
   140029686:	call   QWORD PTR [r10-0x33]
   14002968a:	call   QWORD PTR [r10-0x33]
   14002968e:	call   QWORD PTR [r10-0x33]
   140029692:	call   QWORD PTR [r10-0x33]
   140029696:	call   QWORD PTR [r10-0x33]
   14002969a:	call   QWORD PTR [r10-0x33]
   14002969e:	call   QWORD PTR [r10-0x33]
   1400296a2:	call   QWORD PTR [r10-0x33]
   1400296a6:	call   QWORD PTR [r10-0x33]
   1400296aa:	call   QWORD PTR [r10-0x33]
   1400296ae:	call   QWORD PTR [r10-0x33]
   1400296b2:	call   QWORD PTR [r10-0x33]
   1400296b6:	call   QWORD PTR [r10-0x33]
   1400296ba:	call   QWORD PTR [r10-0x33]
   1400296be:	call   QWORD PTR [r10-0x33]
   1400296c2:	call   QWORD PTR [r10-0x33]
   1400296c6:	call   QWORD PTR [r10-0x33]
   1400296ca:	call   QWORD PTR [r10-0x33]
   1400296ce:	call   QWORD PTR [r10-0x33]
   1400296d2:	call   QWORD PTR [r10-0x33]
   1400296d6:	call   QWORD PTR [r10-0x33]
   1400296da:	call   QWORD PTR [r14+rcx*8+0x43]
   1400296df:	(bad)  
   1400296e0:	fdivrp st(6),st
   1400296e2:	(bad)  
   1400296e4:	(bad)  
   1400296e5:	(bad)  
   1400296e6:	(bad)  
   1400296e7:	(bad)  
   1400296e8:	(bad)  
   1400296e9:	(bad)  
   1400296ea:	(bad)  
   1400296eb:	(bad)  
   1400296ec:	(bad)  
   1400296ed:	(bad)  
   1400296ee:	(bad)  
   1400296ef:	(bad)  
   1400296f0:	(bad)  
   1400296f1:	(bad)  
   1400296f2:	(bad)  
   1400296f3:	(bad)  
   1400296f4:	(bad)  
   1400296f5:	(bad)  
   1400296f6:	(bad)  
   1400296f7:	(bad)  
   1400296f8:	(bad)  
   1400296f9:	(bad)  
   1400296fa:	(bad)  
   1400296fb:	(bad)  
   1400296fc:	cld    
   1400296fd:	(bad)  
   1400296fe:	cld    
   1400296ff:	push   QWORD PTR [rdx-0x2a]
   140029702:	call   QWORD PTR fs:[rdx-0x33]
   140029706:	call   QWORD PTR [r10-0x33]
   14002970a:	call   QWORD PTR [r10-0x33]
   14002970e:	call   QWORD PTR [r10-0x33]
   140029712:	call   QWORD PTR [r10-0x33]
   140029716:	call   QWORD PTR [r10-0x33]
   14002971a:	jmp    QWORD PTR [r8-0x2f]
   14002971e:	push   rcx
   14002971f:	jmp    rax
   140029721:	neg    ch
   140029723:	(bad)  
   140029724:	(bad)  
   140029725:	(bad)  
   140029726:	(bad)  
   140029727:	(bad)  
   140029728:	fucom  st(6)
   14002972a:	fdivr  st,st(7)
   14002972c:	cmp    eax,0x29ff1d6d
   140029731:	pop    rsi
   140029732:	add    eax,0x55e29ff
   140029737:	jmp    FWORD PTR [rcx]
   140029739:	pop    rsi
   14002973a:	add    eax,0xffffffff
   14002973f:	(bad)  
   140029740:	(bad)  
   140029741:	(bad)  
   140029742:	(bad)  
   140029743:	(bad)  
   140029744:	(bad)  
   140029745:	(bad)  
   140029746:	(bad)  
   140029747:	(bad)  
   140029748:	(bad)  
   140029749:	(bad)  
   14002974a:	(bad)  
   14002974b:	(bad)  
   14002974c:	(bad)  
   14002974d:	(bad)  
   14002974e:	(bad)  
   14002974f:	(bad)  
   140029750:	(bad)  
   140029751:	(bad)  
   140029752:	(bad)  
   140029753:	(bad)  
   140029754:	(bad)  
   140029755:	(bad)  
   140029756:	(bad)  
   140029757:	(bad)  
   140029758:	(bad)  
   140029759:	(bad)  
   14002975a:	(bad)  
   14002975b:	(bad)  
   14002975c:	(bad)  
   14002975d:	(bad)  
   14002975e:	(bad)  
   14002975f:	(bad)  
   140029760:	(bad)  
   140029761:	(bad)  
   140029762:	(bad)  
   140029763:	(bad)  
   140029764:	(bad)  
   140029765:	(bad)  
   140029766:	(bad)  
   140029767:	(bad)  
   140029768:	(bad)  
   140029769:	(bad)  
   14002976a:	(bad)  
   14002976b:	(bad)  
   14002976c:	(bad)  
   14002976d:	(bad)  
   14002976e:	(bad)  
   14002976f:	(bad)  
   140029770:	(bad)  
   140029771:	(bad)  
   140029772:	(bad)  
   140029773:	(bad)  
   140029774:	(bad)  
   140029775:	(bad)  
   140029776:	(bad)  
   140029777:	(bad)  
   140029778:	(bad)  
   140029779:	(bad)  
   14002977a:	(bad)  
   14002977b:	(bad)  
   14002977c:	(bad)  
   14002977d:	(bad)  
   14002977e:	(bad)  
   14002977f:	(bad)  
   140029780:	(bad)  
   140029781:	(bad)  
   140029782:	(bad)  
   140029783:	(bad)  
   140029784:	(bad)  
   140029785:	(bad)  
   140029786:	(bad)  
   140029787:	(bad)  
   140029788:	(bad)  
   140029789:	(bad)  
   14002978a:	(bad)  
   14002978b:	(bad)  
   14002978c:	(bad)  
   14002978d:	(bad)  
   14002978e:	(bad)  
   14002978f:	(bad)  
   140029790:	(bad)  
   140029791:	(bad)  
   140029792:	(bad)  
   140029793:	(bad)  
   140029794:	(bad)  
   140029795:	(bad)  
   140029796:	(bad)  
   140029797:	(bad)  
   140029798:	(bad)  
   140029799:	(bad)  
   14002979a:	(bad)  
   14002979b:	(bad)  
   14002979c:	(bad)  
   14002979d:	(bad)  
   14002979e:	(bad)  
   14002979f:	(bad)  
   1400297a0:	(bad)  
   1400297a1:	(bad)  
   1400297a2:	(bad)  
   1400297a3:	(bad)  
   1400297a4:	(bad)  
   1400297a5:	(bad)  
   1400297a6:	(bad)  
   1400297a7:	(bad)  
   1400297a8:	(bad)  
   1400297a9:	(bad)  
   1400297aa:	(bad)  
   1400297ab:	call   QWORD PTR [rdx-0x33]
   1400297ae:	call   QWORD PTR [r10-0x33]
   1400297b2:	call   QWORD PTR [r10-0x33]
   1400297b6:	rex.B (bad) 
   1400297b8:	(bad)  
   1400297b9:	pushf  
   1400297ba:	xor    BYTE PTR [rdi+0x30000000],ah
   1400297c0:	add    BYTE PTR [rax],al
   1400297c2:	add    BYTE PTR [rax],bl
   1400297c4:	add    BYTE PTR [rax],al
   1400297c6:	add    BYTE PTR [rbx],cl
   1400297c8:	add    BYTE PTR [rax],al
   1400297ca:	add    BYTE PTR [rax+rax*1],al
   1400297cd:	add    BYTE PTR [rax],al
   1400297cf:	add    DWORD PTR [rax],eax
	...
   140029829:	add    BYTE PTR [rax],al
   14002982b:	add    al,BYTE PTR [rax]
   14002982d:	add    BYTE PTR [rax],al
   14002982f:	add    eax,0xc000000
   140029834:	add    BYTE PTR [rax],al
   140029836:	add    BYTE PTR [rax+rax*1],bl
   140029839:	add    BYTE PTR [rax],al
   14002983b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002983e:	call   QWORD PTR [r10-0x33]
   140029842:	call   QWORD PTR [r10-0x33]
   140029846:	call   QWORD PTR [r10-0x33]
   14002984a:	call   QWORD PTR [r10-0x33]
   14002984e:	call   QWORD PTR [r10-0x33]
   140029852:	call   QWORD PTR [r10-0x33]
   140029856:	call   QWORD PTR [r10-0x33]
   14002985a:	call   QWORD PTR [r10-0x33]
   14002985e:	call   QWORD PTR [r10-0x33]
   140029862:	call   QWORD PTR [r10-0x33]
   140029866:	call   QWORD PTR [r10-0x33]
   14002986a:	call   QWORD PTR [r10-0x33]
   14002986e:	call   QWORD PTR [r10-0x33]
   140029872:	call   QWORD PTR [r10-0x33]
   140029876:	call   QWORD PTR [r10-0x33]
   14002987a:	call   QWORD PTR [r10-0x33]
   14002987e:	call   QWORD PTR [r10-0x33]
   140029882:	call   QWORD PTR [r10-0x33]
   140029886:	call   QWORD PTR [r10-0x33]
   14002988a:	call   QWORD PTR [r10-0x33]
   14002988e:	call   QWORD PTR [r10-0x33]
   140029892:	call   QWORD PTR [r10-0x33]
   140029896:	call   QWORD PTR [r10-0x33]
   14002989a:	call   QWORD PTR [r10-0x33]
   14002989e:	call   QWORD PTR [r10-0x33]
   1400298a2:	call   QWORD PTR [r10-0x33]
   1400298a6:	call   QWORD PTR [r10-0x33]
   1400298aa:	call   QWORD PTR [r10-0x33]
   1400298ae:	call   QWORD PTR [r10-0x33]
   1400298b2:	call   QWORD PTR [r10-0x33]
   1400298b6:	call   QWORD PTR [r10-0x33]
   1400298ba:	call   QWORD PTR [r10-0x33]
   1400298be:	call   QWORD PTR [r10-0x33]
   1400298c2:	call   QWORD PTR [r10-0x33]
   1400298c6:	call   QWORD PTR [r10-0x33]
   1400298ca:	call   QWORD PTR [r10-0x33]
   1400298ce:	call   QWORD PTR [r10-0x33]
   1400298d2:	call   QWORD PTR [r10-0x33]
   1400298d6:	call   QWORD PTR [r10-0x33]
   1400298da:	call   FWORD PTR [r15-0x6a1d]
   1400298e1:	(bad)  
   1400298e2:	(bad)  
   1400298e3:	(bad)  
   1400298e4:	(bad)  
   1400298e5:	(bad)  
   1400298e6:	(bad)  
   1400298e7:	(bad)  
   1400298e8:	(bad)  
   1400298e9:	(bad)  
   1400298ea:	(bad)  
   1400298eb:	(bad)  
   1400298ec:	(bad)  
   1400298ed:	(bad)  
   1400298ee:	(bad)  
   1400298ef:	(bad)  
   1400298f0:	(bad)  
   1400298f1:	(bad)  
   1400298f2:	(bad)  
   1400298f3:	(bad)  
   1400298f4:	(bad)  
   1400298f5:	(bad)  
   1400298f6:	(bad)  
   1400298f7:	(bad)  
   1400298f8:	(bad)  
   1400298f9:	(bad)  
   1400298fa:	(bad)  
   1400298fb:	jmp    FWORD PTR [rsi+0x52ffa6e7]
   140029901:	int    0x41
   140029903:	call   QWORD PTR [rdx-0x33]
   140029906:	call   QWORD PTR [r10-0x33]
   14002990a:	call   QWORD PTR [r10-0x33]
   14002990e:	call   QWORD PTR [r10-0x33]
   140029912:	call   QWORD PTR [r10-0x33]
   140029916:	call   QWORD PTR [r10-0x33]
   14002991a:	call   QWORD PTR [r10-0x33]
   14002991e:	jmp    QWORD PTR [r8-0x2f]
   140029922:	push   rcx
   140029923:	jmp    rax
   140029925:	neg    ch
   140029927:	(bad)  
   140029928:	(bad)  
   140029929:	(bad)  
   14002992a:	(bad)  
   14002992b:	(bad)  
   14002992c:	fucom  st(6)
   14002992e:	fdivr  st,st(7)
   140029930:	cmp    eax,0x29ff1d6d
   140029935:	pop    rsi
   140029936:	add    eax,0x55e29ff
   14002993b:	(bad)  
   14002993c:	(bad)  
   14002993d:	(bad)  
   14002993e:	(bad)  
   14002993f:	(bad)  
   140029940:	(bad)  
   140029941:	(bad)  
   140029942:	(bad)  
   140029943:	call   QWORD PTR [rdx-0x33]
   140029946:	call   QWORD PTR [r10-0x33]
   14002994a:	call   QWORD PTR [r10-0x33]
   14002994e:	call   QWORD PTR [r10-0x33]
   140029952:	call   QWORD PTR [r10-0x33]
   140029956:	call   QWORD PTR [r10-0x33]
   14002995a:	call   QWORD PTR [r10-0x33]
   14002995e:	call   QWORD PTR [r10-0x33]
   140029962:	call   QWORD PTR [r10-0x33]
   140029966:	call   QWORD PTR [r10-0x33]
   14002996a:	call   QWORD PTR [r10-0x33]
   14002996e:	call   QWORD PTR [r10-0x33]
   140029972:	call   QWORD PTR [r10-0x33]
   140029976:	call   QWORD PTR [r10-0x33]
   14002997a:	call   QWORD PTR [r10-0x33]
   14002997e:	call   QWORD PTR [r10-0x33]
   140029982:	call   QWORD PTR [r10-0x33]
   140029986:	call   QWORD PTR [r10-0x33]
   14002998a:	call   QWORD PTR [r10-0x33]
   14002998e:	call   QWORD PTR [r10-0x33]
   140029992:	call   QWORD PTR [r10-0x33]
   140029996:	call   QWORD PTR [r10-0x33]
   14002999a:	call   QWORD PTR [r10-0x33]
   14002999e:	call   QWORD PTR [r10-0x33]
   1400299a2:	call   QWORD PTR [r10-0x33]
   1400299a6:	call   QWORD PTR [r10-0x33]
   1400299aa:	call   QWORD PTR [r10-0x33]
   1400299ae:	call   QWORD PTR [r10-0x33]
   1400299b2:	call   QWORD PTR [r10-0x33]
   1400299b6:	call   QWORD PTR [r10-0x33]
   1400299ba:	inc    DWORD PTR [r8]
   1400299bd:	add    BYTE PTR [rax],al
   1400299bf:	(bad)  
   1400299c0:	add    BYTE PTR [rax],al
   1400299c2:	add    BYTE PTR [rdx],bl
   1400299c4:	add    BYTE PTR [rax],al
   1400299c6:	add    BYTE PTR [rbx],cl
   1400299c8:	add    BYTE PTR [rax],al
   1400299ca:	add    BYTE PTR [rip+0x1000000],al        # 0x1410299d0
	...
   140029a28:	add    BYTE PTR [rax],al
   140029a2a:	add    BYTE PTR [rdx],al
   140029a2c:	add    BYTE PTR [rax],al
   140029a2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029a34
   140029a34:	add    BYTE PTR [rax],al
   140029a36:	add    BYTE PTR [rax+rax*1],bl
   140029a39:	add    BYTE PTR [rax],al
   140029a3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140029a3e:	call   QWORD PTR [r10-0x33]
   140029a42:	call   QWORD PTR [r10-0x33]
   140029a46:	call   QWORD PTR [r10-0x33]
   140029a4a:	call   QWORD PTR [r10-0x33]
   140029a4e:	call   QWORD PTR [r10-0x33]
   140029a52:	call   QWORD PTR [r10-0x33]
   140029a56:	call   QWORD PTR [r10-0x33]
   140029a5a:	call   QWORD PTR [r10-0x33]
   140029a5e:	call   QWORD PTR [r10-0x33]
   140029a62:	call   QWORD PTR [r10-0x33]
   140029a66:	call   QWORD PTR [r10-0x33]
   140029a6a:	call   QWORD PTR [r10-0x33]
   140029a6e:	call   QWORD PTR [r10-0x33]
   140029a72:	call   QWORD PTR [r10-0x33]
   140029a76:	call   QWORD PTR [r10-0x33]
   140029a7a:	call   QWORD PTR [r10-0x33]
   140029a7e:	call   QWORD PTR [r10-0x33]
   140029a82:	call   QWORD PTR [r10-0x33]
   140029a86:	call   QWORD PTR [r10-0x33]
   140029a8a:	call   QWORD PTR [r10-0x33]
   140029a8e:	call   QWORD PTR [r10-0x33]
   140029a92:	call   QWORD PTR [r10-0x33]
   140029a96:	call   QWORD PTR [r10-0x33]
   140029a9a:	call   QWORD PTR [r10-0x33]
   140029a9e:	call   QWORD PTR [r10-0x33]
   140029aa2:	call   QWORD PTR [r10-0x33]
   140029aa6:	call   QWORD PTR [r10-0x33]
   140029aaa:	call   QWORD PTR [r10-0x33]
   140029aae:	call   QWORD PTR [r10-0x33]
   140029ab2:	call   QWORD PTR [r10-0x33]
   140029ab6:	call   QWORD PTR [r10-0x33]
   140029aba:	call   QWORD PTR [r10-0x33]
   140029abe:	call   QWORD PTR [r10-0x33]
   140029ac2:	call   QWORD PTR [r10-0x33]
   140029ac6:	call   FWORD PTR [r9-0x31]
   140029aca:	rex.WB call QWORD PTR [r10-0x33]
   140029ace:	call   QWORD PTR [r10-0x33]
   140029ad2:	call   QWORD PTR [r10-0x33]
   140029ad6:	jmp    QWORD PTR [r10+rdx*8+0x54]
   140029adb:	push   rbp
   140029add:	cld    
   140029ade:	cmc    
   140029adf:	(bad)  
   140029ae0:	(bad)  
   140029ae1:	(bad)  
   140029ae2:	(bad)  
   140029ae3:	(bad)  
   140029ae4:	(bad)  
   140029ae5:	(bad)  
   140029ae6:	(bad)  
   140029ae7:	(bad)  
   140029ae8:	(bad)  
   140029ae9:	(bad)  
   140029aea:	(bad)  
   140029aeb:	(bad)  
   140029aec:	(bad)  
   140029aed:	(bad)  
   140029aee:	(bad)  
   140029aef:	(bad)  
   140029af0:	(bad)  
   140029af1:	(bad)  
   140029af2:	(bad)  
   140029af3:	(bad)  
   140029af4:	(bad)  
   140029af5:	(bad)  
   140029af6:	(bad)  
   140029af7:	(bad)  
   140029af8:	jmp    0x19a0281f6
   140029afd:	iret   
   140029afe:	rex.W call QWORD PTR [rdx-0x33]
   140029b02:	call   QWORD PTR [r10-0x33]
   140029b06:	call   QWORD PTR [r10-0x33]
   140029b0a:	call   QWORD PTR [r10-0x33]
   140029b0e:	call   QWORD PTR [r10-0x33]
   140029b12:	call   QWORD PTR [r10-0x33]
   140029b16:	call   QWORD PTR [r10-0x33]
   140029b1a:	call   QWORD PTR [r10-0x33]
   140029b1e:	call   QWORD PTR [r10-0x33]
   140029b22:	jmp    QWORD PTR [r8-0x2f]
   140029b26:	push   rcx
   140029b27:	jmp    rax
   140029b29:	neg    ch
   140029b2b:	(bad)  
   140029b2c:	(bad)  
   140029b2d:	(bad)  
   140029b2e:	(bad)  
   140029b2f:	(bad)  
   140029b30:	fucom  st(6)
   140029b32:	fdivr  st,st(7)
   140029b34:	cmp    eax,0x29ff1d6d
   140029b39:	pop    rsi
   140029b3a:	add    eax,0xffffffff
   140029b3f:	(bad)  
   140029b40:	(bad)  
   140029b41:	(bad)  
   140029b42:	(bad)  
   140029b43:	call   QWORD PTR [rdx-0x33]
   140029b46:	call   QWORD PTR [r10-0x33]
   140029b4a:	call   QWORD PTR [r10-0x33]
   140029b4e:	call   QWORD PTR [r10-0x33]
   140029b52:	call   QWORD PTR [r10-0x33]
   140029b56:	call   QWORD PTR [r10-0x33]
   140029b5a:	call   QWORD PTR [r10-0x33]
   140029b5e:	call   QWORD PTR [r10-0x33]
   140029b62:	call   QWORD PTR [r10-0x33]
   140029b66:	call   QWORD PTR [r10-0x33]
   140029b6a:	call   QWORD PTR [r10-0x33]
   140029b6e:	call   QWORD PTR [r10-0x33]
   140029b72:	call   QWORD PTR [r10-0x33]
   140029b76:	call   QWORD PTR [r10-0x33]
   140029b7a:	call   QWORD PTR [r10-0x33]
   140029b7e:	call   QWORD PTR [r10-0x33]
   140029b82:	call   QWORD PTR [r10-0x33]
   140029b86:	call   QWORD PTR [r10-0x33]
   140029b8a:	call   QWORD PTR [r10-0x33]
   140029b8e:	call   QWORD PTR [r10-0x33]
   140029b92:	call   QWORD PTR [r10-0x33]
   140029b96:	call   QWORD PTR [r10-0x33]
   140029b9a:	call   QWORD PTR [r10-0x33]
   140029b9e:	call   QWORD PTR [r10-0x33]
   140029ba2:	call   QWORD PTR [r10-0x33]
   140029ba6:	call   QWORD PTR [r10-0x33]
   140029baa:	call   QWORD PTR [r10-0x33]
   140029bae:	call   QWORD PTR [r10-0x33]
   140029bb2:	call   QWORD PTR [r10-0x33]
   140029bb6:	call   QWORD PTR [r10-0x33]
   140029bba:	inc    DWORD PTR [r8]
   140029bbd:	add    BYTE PTR [rax],al
   140029bbf:	cmp    al,BYTE PTR [rax]
   140029bc1:	add    BYTE PTR [rax],al
   140029bc3:	sbb    al,0x0
   140029bc5:	add    BYTE PTR [rax],al
   140029bc7:	or     al,0x0
   140029bc9:	add    BYTE PTR [rax],al
   140029bcb:	add    eax,0x2000000
	...
   140029c28:	add    BYTE PTR [rax],al
   140029c2a:	add    BYTE PTR [rdx],al
   140029c2c:	add    BYTE PTR [rax],al
   140029c2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029c34
   140029c34:	add    BYTE PTR [rax],al
   140029c36:	add    BYTE PTR [rax+rax*1],bl
   140029c39:	add    BYTE PTR [rax],al
   140029c3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140029c3e:	call   QWORD PTR [r10-0x33]
   140029c42:	call   QWORD PTR [r10-0x33]
   140029c46:	call   QWORD PTR [r10-0x33]
   140029c4a:	call   QWORD PTR [r10-0x33]
   140029c4e:	call   QWORD PTR [r10-0x33]
   140029c52:	call   QWORD PTR [r10-0x33]
   140029c56:	call   QWORD PTR [r10-0x33]
   140029c5a:	call   QWORD PTR [r10-0x33]
   140029c5e:	call   QWORD PTR [r10-0x33]
   140029c62:	call   QWORD PTR [r10-0x33]
   140029c66:	call   QWORD PTR [r10-0x33]
   140029c6a:	call   QWORD PTR [r10-0x33]
   140029c6e:	call   QWORD PTR [r10-0x33]
   140029c72:	call   QWORD PTR [r10-0x33]
   140029c76:	call   QWORD PTR [r10-0x33]
   140029c7a:	call   QWORD PTR [r10-0x33]
   140029c7e:	call   QWORD PTR [r10-0x33]
   140029c82:	call   QWORD PTR [r10-0x33]
   140029c86:	call   QWORD PTR [r10-0x33]
   140029c8a:	call   QWORD PTR [r10-0x33]
   140029c8e:	call   QWORD PTR [r10-0x33]
   140029c92:	call   QWORD PTR [r10-0x33]
   140029c96:	call   QWORD PTR [r10-0x33]
   140029c9a:	call   QWORD PTR [r10-0x33]
   140029c9e:	call   QWORD PTR [r10-0x33]
   140029ca2:	call   QWORD PTR [r10-0x33]
   140029ca6:	call   QWORD PTR [r10-0x33]
   140029caa:	call   FWORD PTR [r13-0x30]
   140029cae:	rex.WRB dec QWORD PTR [r14+rbx*8-0x164d007f]
   140029cb6:	stos   DWORD PTR es:[rdi],eax
   140029cb7:	call   rbx
   140029cb9:	repnz iret 
   140029cbb:	jmp    rdi
   140029cbd:	clc    
   140029cbe:	in     eax,0xff
   140029cc0:	cli    
   140029cc1:	(bad)  
   140029cc2:	cli    
   140029cc3:	(bad)  
   140029cc4:	(bad)  
   140029cc5:	(bad)  
   140029cc6:	(bad)  
   140029cc7:	(bad)  
   140029cc8:	(bad)  
   140029cc9:	(bad)  
   140029cca:	(bad)  
   140029ccb:	(bad)  
   140029ccc:	(bad)  
   140029ccd:	(bad)  
   140029cce:	(bad)  
   140029ccf:	(bad)  
   140029cd0:	sti    
   140029cd1:	(bad)  
   140029cd2:	sti    
   140029cd3:	jmp    rdi
   140029cd5:	clc    
   140029cd6:	in     al,0xff
   140029cd8:	in     eax,0xf7
   140029cda:	loop   0x140029cdb
   140029cdc:	(bad)  
   140029cdd:	(bad)  
   140029cde:	(bad)  
   140029cdf:	(bad)  
   140029ce0:	(bad)  
   140029ce1:	(bad)  
   140029ce2:	(bad)  
   140029ce3:	(bad)  
   140029ce4:	(bad)  
   140029ce5:	(bad)  
   140029ce6:	(bad)  
   140029ce7:	(bad)  
   140029ce8:	(bad)  
   140029ce9:	(bad)  
   140029cea:	(bad)  
   140029ceb:	(bad)  
   140029cec:	(bad)  
   140029ced:	(bad)  
   140029cee:	(bad)  
   140029cef:	(bad)  
   140029cf0:	(bad)  
   140029cf1:	(bad)  
   140029cf2:	(bad)  
   140029cf3:	(bad)  
   140029cf4:	(bad)  
   140029cf5:	(bad)  
   140029cf6:	(bad)  
   140029cf7:	inc    DWORD PTR [rbx+rbx*8-0x32ad0089]
   140029cfe:	call   QWORD PTR [r10-0x33]
   140029d02:	call   QWORD PTR [r10-0x33]
   140029d06:	call   QWORD PTR [r10-0x33]
   140029d0a:	call   QWORD PTR [r10-0x33]
   140029d0e:	call   QWORD PTR [r10-0x33]
   140029d12:	call   QWORD PTR [r10-0x33]
   140029d16:	call   QWORD PTR [r10-0x33]
   140029d1a:	call   QWORD PTR [r10-0x33]
   140029d1e:	call   QWORD PTR [r10-0x33]
   140029d22:	call   QWORD PTR [r10-0x33]
   140029d26:	jmp    QWORD PTR [r8-0x2f]
   140029d2a:	push   rcx
   140029d2b:	jmp    rax
   140029d2d:	neg    ch
   140029d2f:	(bad)  
   140029d30:	(bad)  
   140029d31:	(bad)  
   140029d32:	(bad)  
   140029d33:	(bad)  
   140029d34:	fucom  st(6)
   140029d36:	fdivr  st,st(7)
   140029d38:	cmp    eax,0xffff1d6d
   140029d3d:	(bad)  
   140029d3e:	(bad)  
   140029d3f:	(bad)  
   140029d40:	(bad)  
   140029d41:	(bad)  
   140029d42:	(bad)  
   140029d43:	call   QWORD PTR [rdx-0x33]
   140029d46:	jmp    QWORD PTR [r8-0x2f]
   140029d4a:	push   rcx
   140029d4b:	push   QWORD PTR [rbx-0x2a]
   140029d4e:	gs (bad) 
   140029d50:	jge    0x140029d2c
   140029d52:	jno    0x140029d53
   140029d54:	jge    0x140029d30
   140029d56:	jno    0x140029d57
   140029d58:	jo     0x140029d30
   140029d5a:	(bad)  
   140029d5b:	jmp    QWORD PTR [rbx-0x2e]
   140029d5e:	push   rsp
   140029d5f:	call   QWORD PTR [rdx-0x33]
   140029d62:	call   QWORD PTR [r10-0x33]
   140029d66:	call   QWORD PTR [r10-0x33]
   140029d6a:	call   QWORD PTR [r10-0x33]
   140029d6e:	call   QWORD PTR [r10-0x33]
   140029d72:	call   QWORD PTR [r10-0x33]
   140029d76:	call   QWORD PTR [r10-0x33]
   140029d7a:	call   QWORD PTR [r10-0x33]
   140029d7e:	call   QWORD PTR [r10-0x33]
   140029d82:	call   QWORD PTR [r10-0x33]
   140029d86:	call   QWORD PTR [r10-0x33]
   140029d8a:	call   QWORD PTR [r10-0x33]
   140029d8e:	call   QWORD PTR [r10-0x33]
   140029d92:	call   QWORD PTR [r10-0x33]
   140029d96:	call   QWORD PTR [r10-0x33]
   140029d9a:	call   QWORD PTR [r10-0x33]
   140029d9e:	call   QWORD PTR [r10-0x33]
   140029da2:	call   QWORD PTR [r10-0x33]
   140029da6:	call   QWORD PTR [r10-0x33]
   140029daa:	call   QWORD PTR [r10-0x33]
   140029dae:	call   QWORD PTR [r10-0x33]
   140029db2:	call   QWORD PTR [r10-0x33]
   140029db6:	call   QWORD PTR [r10-0x33]
   140029dba:	inc    DWORD PTR [r8]
   140029dbd:	add    BYTE PTR [rax],al
   140029dbf:	cmp    eax,DWORD PTR [rax]
   140029dc1:	add    BYTE PTR [rax],al
   140029dc3:	sbb    al,0x0
   140029dc5:	add    BYTE PTR [rax],al
   140029dc7:	or     al,0x0
   140029dc9:	add    BYTE PTR [rax],al
   140029dcb:	add    eax,0x2000000
	...
   140029e28:	add    BYTE PTR [rax],al
   140029e2a:	add    BYTE PTR [rdx],al
   140029e2c:	add    BYTE PTR [rax],al
   140029e2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c029e34
   140029e34:	add    BYTE PTR [rax],al
   140029e36:	add    BYTE PTR [rax+rax*1],bl
   140029e39:	add    BYTE PTR [rax],al
   140029e3b:	cmp    edx,DWORD PTR [rdx-0x33]
   140029e3e:	call   QWORD PTR [r10-0x33]
   140029e42:	call   QWORD PTR [r10-0x33]
   140029e46:	call   QWORD PTR [r10-0x33]
   140029e4a:	call   QWORD PTR [r10-0x33]
   140029e4e:	call   QWORD PTR [r10-0x33]
   140029e52:	call   QWORD PTR [r10-0x33]
   140029e56:	call   QWORD PTR [r10-0x33]
   140029e5a:	call   QWORD PTR [r10-0x33]
   140029e5e:	call   QWORD PTR [r10-0x33]
   140029e62:	call   QWORD PTR [r10-0x33]
   140029e66:	call   QWORD PTR [r10-0x33]
   140029e6a:	call   QWORD PTR [r10-0x33]
   140029e6e:	call   QWORD PTR [r10-0x33]
   140029e72:	call   QWORD PTR [r10-0x33]
   140029e76:	call   QWORD PTR [r10-0x33]
   140029e7a:	call   QWORD PTR [r10-0x33]
   140029e7e:	call   QWORD PTR [r10-0x33]
   140029e82:	call   QWORD PTR [r10-0x33]
   140029e86:	call   QWORD PTR [r10-0x33]
   140029e8a:	call   QWORD PTR [r10-0x33]
   140029e8e:	call   QWORD PTR [r10-0x33]
   140029e92:	call   QWORD PTR [r10-0x33]
   140029e96:	call   QWORD PTR [r10-0x33]
   140029e9a:	call   QWORD PTR [r10-0x33]
   140029e9e:	call   QWORD PTR [r10-0x33]
   140029ea2:	rex.B (bad) 
   140029ea4:	jp     0x140029e7f
   140029ea6:	ins    DWORD PTR es:[rdi],dx
   140029ea7:	dec    ecx
   140029ea9:	out    dx,eax
   140029eaa:	ret    
   140029eab:	(bad)  
   140029eac:	sti    
   140029ead:	(bad)  
   140029eae:	sti    
   140029eaf:	(bad)  
   140029eb0:	(bad)  
   140029eb1:	(bad)  
   140029eb2:	(bad)  
   140029eb3:	(bad)  
   140029eb4:	(bad)  
   140029eb5:	(bad)  
   140029eb6:	(bad)  
   140029eb7:	(bad)  
   140029eb8:	(bad)  
   140029eb9:	(bad)  
   140029eba:	(bad)  
   140029ebb:	(bad)  
   140029ebc:	(bad)  
   140029ebd:	(bad)  
   140029ebe:	(bad)  
   140029ebf:	(bad)  
   140029ec0:	(bad)  
   140029ec1:	(bad)  
   140029ec2:	(bad)  
   140029ec3:	(bad)  
   140029ec4:	(bad)  
   140029ec5:	(bad)  
   140029ec6:	(bad)  
   140029ec7:	(bad)  
   140029ec8:	(bad)  
   140029ec9:	(bad)  
   140029eca:	(bad)  
   140029ecb:	(bad)  
   140029ecc:	(bad)  
   140029ecd:	(bad)  
   140029ece:	(bad)  
   140029ecf:	(bad)  
   140029ed0:	(bad)  
   140029ed1:	(bad)  
   140029ed2:	(bad)  
   140029ed3:	(bad)  
   140029ed4:	(bad)  
   140029ed5:	(bad)  
   140029ed6:	(bad)  
   140029ed7:	(bad)  
   140029ed8:	(bad)  
   140029ed9:	(bad)  
   140029eda:	(bad)  
   140029edb:	(bad)  
   140029edc:	(bad)  
   140029edd:	(bad)  
   140029ede:	(bad)  
   140029edf:	(bad)  
   140029ee0:	(bad)  
   140029ee1:	(bad)  
   140029ee2:	(bad)  
   140029ee3:	(bad)  
   140029ee4:	(bad)  
   140029ee5:	(bad)  
   140029ee6:	(bad)  
   140029ee7:	(bad)  
   140029ee8:	(bad)  
   140029ee9:	(bad)  
   140029eea:	(bad)  
   140029eeb:	(bad)  
   140029eec:	(bad)  
   140029eed:	(bad)  
   140029eee:	(bad)  
   140029eef:	(bad)  
   140029ef0:	(bad)  
   140029ef1:	(bad)  
   140029ef2:	(bad)  
   140029ef3:	inc    ebp
   140029ef5:	out    dx,al
   140029ef6:	mov    edi,0x41cd52ff
   140029efb:	call   QWORD PTR [rdx-0x33]
   140029efe:	call   QWORD PTR [r10-0x33]
   140029f02:	call   QWORD PTR [r10-0x33]
   140029f06:	call   QWORD PTR [r10-0x33]
   140029f0a:	call   QWORD PTR [r10-0x33]
   140029f0e:	call   QWORD PTR [r10-0x33]
   140029f12:	call   QWORD PTR [r10-0x33]
   140029f16:	call   QWORD PTR [r10-0x33]
   140029f1a:	call   QWORD PTR [r10-0x33]
   140029f1e:	call   QWORD PTR [r10-0x33]
   140029f22:	call   QWORD PTR [r10-0x33]
   140029f26:	call   QWORD PTR [r10-0x33]
   140029f2a:	jmp    QWORD PTR [r9-0x2f]
   140029f2e:	push   rcx
   140029f2f:	jmp    rcx
   140029f31:	neg    dh
   140029f33:	(bad)  
   140029f34:	(bad)  
   140029f35:	(bad)  
   140029f36:	(bad)  
   140029f37:	(bad)  
   140029f38:	(bad)  
   140029f3a:	(bad)  
   140029f3b:	(bad)  
   140029f3c:	(bad)  
   140029f3d:	(bad)  
   140029f3e:	(bad)  
   140029f3f:	(bad)  
   140029f40:	(bad)  
   140029f41:	(bad)  
   140029f42:	(bad)  
   140029f43:	(bad)  
   140029f44:	jmp    0x140028642
   140029f49:	(bad)  
   140029f4a:	(bad)  
   140029f4b:	(bad)  
   140029f4c:	(bad)  
   140029f4d:	(bad)  
   140029f4e:	(bad)  
   140029f4f:	(bad)  
   140029f50:	(bad)  
   140029f51:	(bad)  
   140029f52:	(bad)  
   140029f53:	(bad)  
   140029f54:	(bad)  
   140029f55:	(bad)  
   140029f56:	(bad)  
   140029f57:	(bad)  
   140029f58:	(bad)  
   140029f59:	(bad)  
   140029f5a:	(bad)  
   140029f5b:	(bad)  
   140029f5c:	(bad)  
   140029f5d:	(bad)  
   140029f5e:	(bad)  
   140029f5f:	push   rsi
   140029f61:	cld    
   140029f62:	cmc    
   140029f63:	(bad)  
   140029f64:	fcomi  st,st(5)
   140029f66:	fdivr  st,st(7)
   140029f68:	mov    esi,0x6affb7ec
   140029f6d:	(bad)  
   140029f6e:	pop    rbx
   140029f6f:	call   QWORD PTR [rdx-0x33]
   140029f72:	call   QWORD PTR [r10-0x33]
   140029f76:	call   QWORD PTR [r10-0x33]
   140029f7a:	call   QWORD PTR [r10-0x33]
   140029f7e:	call   QWORD PTR [r10-0x33]
   140029f82:	call   QWORD PTR [r10-0x33]
   140029f86:	call   QWORD PTR [r10-0x33]
   140029f8a:	call   QWORD PTR [r10-0x33]
   140029f8e:	call   QWORD PTR [r10-0x33]
   140029f92:	call   QWORD PTR [r10-0x33]
   140029f96:	call   QWORD PTR [r10-0x33]
   140029f9a:	call   QWORD PTR [r10-0x33]
   140029f9e:	call   QWORD PTR [r10-0x33]
   140029fa2:	call   QWORD PTR [r10-0x33]
   140029fa6:	call   QWORD PTR [r10-0x33]
   140029faa:	call   QWORD PTR [r10-0x33]
   140029fae:	call   QWORD PTR [r10-0x33]
   140029fb2:	call   QWORD PTR [r10-0x33]
   140029fb6:	call   QWORD PTR [r10-0x33]
   140029fba:	inc    DWORD PTR [r8]
   140029fbd:	add    BYTE PTR [rax],al
   140029fbf:	cmp    eax,DWORD PTR [rax]
   140029fc1:	add    BYTE PTR [rax],al
   140029fc3:	sbb    al,0x0
   140029fc5:	add    BYTE PTR [rax],al
   140029fc7:	or     al,0x0
   140029fc9:	add    BYTE PTR [rax],al
   140029fcb:	add    eax,0x2000000
	...
   14002a028:	add    BYTE PTR [rax],al
   14002a02a:	add    BYTE PTR [rdx],al
   14002a02c:	add    BYTE PTR [rax],al
   14002a02e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02a034
   14002a034:	add    BYTE PTR [rax],al
   14002a036:	add    BYTE PTR [rax+rax*1],bl
   14002a039:	add    BYTE PTR [rax],al
   14002a03b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002a03e:	call   QWORD PTR [r10-0x33]
   14002a042:	call   QWORD PTR [r10-0x33]
   14002a046:	call   QWORD PTR [r10-0x33]
   14002a04a:	call   QWORD PTR [r10-0x33]
   14002a04e:	call   QWORD PTR [r10-0x33]
   14002a052:	call   QWORD PTR [r10-0x33]
   14002a056:	call   QWORD PTR [r10-0x33]
   14002a05a:	call   QWORD PTR [r10-0x33]
   14002a05e:	call   QWORD PTR [r10-0x33]
   14002a062:	call   QWORD PTR [r10-0x33]
   14002a066:	call   QWORD PTR [r10-0x33]
   14002a06a:	call   QWORD PTR [r10-0x33]
   14002a06e:	call   QWORD PTR [r10-0x33]
   14002a072:	call   QWORD PTR [r10-0x33]
   14002a076:	call   QWORD PTR [r10-0x33]
   14002a07a:	call   QWORD PTR [r10-0x33]
   14002a07e:	call   QWORD PTR [r10-0x33]
   14002a082:	call   QWORD PTR [r10-0x33]
   14002a086:	call   QWORD PTR [r10-0x33]
   14002a08a:	call   QWORD PTR [r10-0x33]
   14002a08e:	call   QWORD PTR [r10-0x33]
   14002a092:	call   QWORD PTR [r10-0x33]
   14002a096:	call   QWORD PTR [r10-0x33]
   14002a09a:	jmp    QWORD PTR [r10-0x2e]
   14002a09e:	push   rdx
   14002a09f:	inc    ebp
   14002a0a1:	out    dx,al
   14002a0a2:	mov    edi,0xffffffff
   14002a0a7:	(bad)  
   14002a0a8:	(bad)  
   14002a0a9:	(bad)  
   14002a0aa:	(bad)  
   14002a0ab:	(bad)  
   14002a0ac:	(bad)  
   14002a0ad:	(bad)  
   14002a0ae:	(bad)  
   14002a0af:	(bad)  
   14002a0b0:	(bad)  
   14002a0b1:	(bad)  
   14002a0b2:	(bad)  
   14002a0b3:	(bad)  
   14002a0b4:	(bad)  
   14002a0b5:	(bad)  
   14002a0b6:	(bad)  
   14002a0b7:	(bad)  
   14002a0b8:	(bad)  
   14002a0b9:	(bad)  
   14002a0ba:	(bad)  
   14002a0bb:	(bad)  
   14002a0bc:	(bad)  
   14002a0bd:	(bad)  
   14002a0be:	(bad)  
   14002a0bf:	(bad)  
   14002a0c0:	(bad)  
   14002a0c1:	(bad)  
   14002a0c2:	(bad)  
   14002a0c3:	(bad)  
   14002a0c4:	(bad)  
   14002a0c5:	(bad)  
   14002a0c6:	(bad)  
   14002a0c7:	(bad)  
   14002a0c8:	(bad)  
   14002a0c9:	(bad)  
   14002a0ca:	(bad)  
   14002a0cb:	(bad)  
   14002a0cc:	(bad)  
   14002a0cd:	(bad)  
   14002a0ce:	(bad)  
   14002a0cf:	(bad)  
   14002a0d0:	(bad)  
   14002a0d1:	(bad)  
   14002a0d2:	(bad)  
   14002a0d3:	(bad)  
   14002a0d4:	(bad)  
   14002a0d5:	(bad)  
   14002a0d6:	(bad)  
   14002a0d7:	(bad)  
   14002a0d8:	(bad)  
   14002a0d9:	(bad)  
   14002a0da:	(bad)  
   14002a0db:	(bad)  
   14002a0dc:	(bad)  
   14002a0dd:	(bad)  
   14002a0de:	(bad)  
   14002a0df:	(bad)  
   14002a0e0:	(bad)  
   14002a0e1:	(bad)  
   14002a0e2:	(bad)  
   14002a0e3:	(bad)  
   14002a0e4:	(bad)  
   14002a0e5:	(bad)  
   14002a0e6:	(bad)  
   14002a0e7:	(bad)  
   14002a0e8:	(bad)  
   14002a0e9:	(bad)  
   14002a0ea:	(bad)  
   14002a0eb:	(bad)  
   14002a0ec:	(bad)  
   14002a0ed:	(bad)  
   14002a0ee:	(bad)  
   14002a0ef:	(bad)  
   14002a0f0:	(bad)  
   14002a0f1:	(bad)  
   14002a0f2:	(bad)  
   14002a0f3:	(bad)  
   14002a0f4:	js     0x14002a0ce
   14002a0f6:	imul   edi,edi,0x52
   14002a0f9:	int    0x41
   14002a0fb:	call   QWORD PTR [rdx-0x33]
   14002a0fe:	call   QWORD PTR [r10-0x33]
   14002a102:	call   QWORD PTR [r10-0x33]
   14002a106:	call   QWORD PTR [r10-0x33]
   14002a10a:	call   QWORD PTR [r10-0x33]
   14002a10e:	call   QWORD PTR [r10-0x33]
   14002a112:	call   QWORD PTR [r10-0x33]
   14002a116:	call   QWORD PTR [r10-0x33]
   14002a11a:	call   QWORD PTR [r10-0x33]
   14002a11e:	call   QWORD PTR [r10-0x33]
   14002a122:	call   QWORD PTR [r10-0x33]
   14002a126:	call   QWORD PTR [r10-0x33]
   14002a12a:	call   QWORD PTR [r10-0x33]
   14002a12e:	jmp    QWORD PTR [r8-0x2f]
   14002a132:	push   rcx
   14002a133:	jmp    rax
   14002a135:	neg    ch
   14002a137:	(bad)  
   14002a138:	(bad)  
   14002a139:	(bad)  
   14002a13a:	(bad)  
   14002a13b:	(bad)  
   14002a13c:	(bad)  
   14002a13d:	(bad)  
   14002a13e:	(bad)  
   14002a13f:	(bad)  
   14002a140:	(bad)  
   14002a141:	(bad)  
   14002a142:	(bad)  
   14002a143:	(bad)  
   14002a144:	(bad)  
   14002a145:	(bad)  
   14002a146:	(bad)  
   14002a147:	(bad)  
   14002a148:	(bad)  
   14002a149:	(bad)  
   14002a14a:	(bad)  
   14002a14b:	(bad)  
   14002a14c:	(bad)  
   14002a14d:	(bad)  
   14002a14e:	(bad)  
   14002a14f:	(bad)  
   14002a150:	(bad)  
   14002a151:	(bad)  
   14002a152:	(bad)  
   14002a153:	(bad)  
   14002a154:	(bad)  
   14002a155:	(bad)  
   14002a156:	(bad)  
   14002a157:	(bad)  
   14002a158:	(bad)  
   14002a159:	(bad)  
   14002a15a:	(bad)  
   14002a15b:	(bad)  
   14002a15c:	(bad)  
   14002a15d:	(bad)  
   14002a15e:	(bad)  
   14002a15f:	(bad)  
   14002a160:	(bad)  
   14002a161:	(bad)  
   14002a162:	(bad)  
   14002a163:	(bad)  
   14002a164:	(bad)  
   14002a165:	(bad)  
   14002a166:	(bad)  
   14002a167:	(bad)  
   14002a168:	(bad)  
   14002a169:	(bad)  
   14002a16a:	(bad)  
   14002a16b:	push   QWORD PTR [rdi-0x28]
   14002a16e:	push   0xffffffffffffffff
   14002a170:	push   rdx
   14002a171:	int    0x41
   14002a173:	call   QWORD PTR [rdx-0x33]
   14002a176:	call   QWORD PTR [r10-0x33]
   14002a17a:	call   QWORD PTR [r10-0x33]
   14002a17e:	call   QWORD PTR [r10-0x33]
   14002a182:	call   QWORD PTR [r10-0x33]
   14002a186:	call   QWORD PTR [r10-0x33]
   14002a18a:	call   QWORD PTR [r10-0x33]
   14002a18e:	call   QWORD PTR [r10-0x33]
   14002a192:	call   QWORD PTR [r10-0x33]
   14002a196:	call   QWORD PTR [r10-0x33]
   14002a19a:	call   QWORD PTR [r10-0x33]
   14002a19e:	call   QWORD PTR [r10-0x33]
   14002a1a2:	call   QWORD PTR [r10-0x33]
   14002a1a6:	call   QWORD PTR [r10-0x33]
   14002a1aa:	call   QWORD PTR [r10-0x33]
   14002a1ae:	call   QWORD PTR [r10-0x33]
   14002a1b2:	call   QWORD PTR [r10-0x33]
   14002a1b6:	call   QWORD PTR [r10-0x33]
   14002a1ba:	inc    DWORD PTR [r8]
   14002a1bd:	add    BYTE PTR [rax],al
   14002a1bf:	cmp    eax,DWORD PTR [rax]
   14002a1c1:	add    BYTE PTR [rax],al
   14002a1c3:	sbb    al,0x0
   14002a1c5:	add    BYTE PTR [rax],al
   14002a1c7:	or     al,0x0
   14002a1c9:	add    BYTE PTR [rax],al
   14002a1cb:	add    eax,0x2000000
	...
   14002a228:	add    BYTE PTR [rax],al
   14002a22a:	add    BYTE PTR [rdx],al
   14002a22c:	add    BYTE PTR [rax],al
   14002a22e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02a234
   14002a234:	add    BYTE PTR [rax],al
   14002a236:	add    BYTE PTR [rax+rax*1],bl
   14002a239:	add    BYTE PTR [rax],al
   14002a23b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002a23e:	call   QWORD PTR [r10-0x33]
   14002a242:	call   QWORD PTR [r10-0x33]
   14002a246:	call   QWORD PTR [r10-0x33]
   14002a24a:	call   QWORD PTR [r10-0x33]
   14002a24e:	call   QWORD PTR [r10-0x33]
   14002a252:	call   QWORD PTR [r10-0x33]
   14002a256:	call   QWORD PTR [r10-0x33]
   14002a25a:	call   QWORD PTR [r10-0x33]
   14002a25e:	call   QWORD PTR [r10-0x33]
   14002a262:	call   QWORD PTR [r10-0x33]
   14002a266:	call   QWORD PTR [r10-0x33]
   14002a26a:	call   QWORD PTR [r10-0x33]
   14002a26e:	call   QWORD PTR [r10-0x33]
   14002a272:	call   QWORD PTR [r10-0x33]
   14002a276:	call   QWORD PTR [r10-0x33]
   14002a27a:	call   QWORD PTR [r10-0x33]
   14002a27e:	call   QWORD PTR [r10-0x33]
   14002a282:	call   QWORD PTR [r10-0x33]
   14002a286:	call   QWORD PTR [r10-0x33]
   14002a28a:	call   QWORD PTR [r10-0x33]
   14002a28e:	call   QWORD PTR [r10-0x33]
   14002a292:	call   QWORD PTR [r10-0x33]
   14002a296:	push   QWORD PTR [r8-0x2a]
   14002a29a:	(bad)  
   14002a29b:	(bad)  
   14002a29c:	jmp    0x14002a297
   14002a29e:	jmp    0x14002a2a2
   14002a2a3:	(bad)  
   14002a2a4:	(bad)  
   14002a2a5:	(bad)  
   14002a2a6:	(bad)  
   14002a2a7:	(bad)  
   14002a2a8:	(bad)  
   14002a2a9:	(bad)  
   14002a2aa:	(bad)  
   14002a2ab:	(bad)  
   14002a2ac:	(bad)  
   14002a2ad:	(bad)  
   14002a2ae:	(bad)  
   14002a2af:	(bad)  
   14002a2b0:	(bad)  
   14002a2b1:	(bad)  
   14002a2b2:	(bad)  
   14002a2b3:	(bad)  
   14002a2b4:	(bad)  
   14002a2b5:	(bad)  
   14002a2b6:	(bad)  
   14002a2b7:	(bad)  
   14002a2b8:	(bad)  
   14002a2b9:	(bad)  
   14002a2ba:	(bad)  
   14002a2bb:	(bad)  
   14002a2bc:	(bad)  
   14002a2bd:	(bad)  
   14002a2be:	(bad)  
   14002a2bf:	(bad)  
   14002a2c0:	(bad)  
   14002a2c1:	(bad)  
   14002a2c2:	(bad)  
   14002a2c3:	(bad)  
   14002a2c4:	(bad)  
   14002a2c5:	(bad)  
   14002a2c6:	(bad)  
   14002a2c7:	(bad)  
   14002a2c8:	(bad)  
   14002a2c9:	(bad)  
   14002a2ca:	(bad)  
   14002a2cb:	(bad)  
   14002a2cc:	(bad)  
   14002a2cd:	(bad)  
   14002a2ce:	(bad)  
   14002a2cf:	(bad)  
   14002a2d0:	(bad)  
   14002a2d1:	(bad)  
   14002a2d2:	(bad)  
   14002a2d3:	(bad)  
   14002a2d4:	(bad)  
   14002a2d5:	(bad)  
   14002a2d6:	(bad)  
   14002a2d7:	(bad)  
   14002a2d8:	(bad)  
   14002a2d9:	(bad)  
   14002a2da:	(bad)  
   14002a2db:	(bad)  
   14002a2dc:	(bad)  
   14002a2dd:	(bad)  
   14002a2de:	(bad)  
   14002a2df:	(bad)  
   14002a2e0:	(bad)  
   14002a2e1:	(bad)  
   14002a2e2:	(bad)  
   14002a2e3:	(bad)  
   14002a2e4:	(bad)  
   14002a2e5:	(bad)  
   14002a2e6:	(bad)  
   14002a2e7:	(bad)  
   14002a2e8:	(bad)  
   14002a2e9:	(bad)  
   14002a2ea:	(bad)  
   14002a2eb:	(bad)  
   14002a2ec:	(bad)  
   14002a2ed:	(bad)  
   14002a2ee:	(bad)  
   14002a2ef:	(bad)  
   14002a2f0:	(bad)  
   14002a2f1:	(bad)  
   14002a2f2:	(bad)  
   14002a2f3:	push   rcx
   14002a2f5:	sti    
   14002a2f6:	out    dx,eax
   14002a2f7:	(bad)  
   14002a2f8:	jge    0x14002a2d3
   14002a2fa:	jo     0x14002a2fb
   14002a2fc:	push   rdx
   14002a2fd:	int    0x41
   14002a2ff:	call   QWORD PTR [rdx-0x33]
   14002a302:	call   QWORD PTR [r10-0x33]
   14002a306:	call   QWORD PTR [r10-0x33]
   14002a30a:	call   QWORD PTR [r10-0x33]
   14002a30e:	call   QWORD PTR [r10-0x33]
   14002a312:	call   QWORD PTR [r10-0x33]
   14002a316:	call   QWORD PTR [r10-0x33]
   14002a31a:	call   QWORD PTR [r10-0x33]
   14002a31e:	call   QWORD PTR [r10-0x33]
   14002a322:	call   QWORD PTR [r10-0x33]
   14002a326:	call   QWORD PTR [r10-0x33]
   14002a32a:	call   QWORD PTR [r10-0x33]
   14002a32e:	call   QWORD PTR [r10-0x33]
   14002a332:	dec    DWORD PTR [r11-0x7f23]
   14002a339:	(bad)  
   14002a33a:	(bad)  
   14002a33b:	(bad)  
   14002a33c:	(bad)  
   14002a33d:	(bad)  
   14002a33e:	(bad)  
   14002a33f:	(bad)  
   14002a340:	(bad)  
   14002a341:	(bad)  
   14002a342:	(bad)  
   14002a343:	(bad)  
   14002a344:	(bad)  
   14002a345:	(bad)  
   14002a346:	(bad)  
   14002a347:	(bad)  
   14002a348:	(bad)  
   14002a349:	(bad)  
   14002a34a:	(bad)  
   14002a34b:	(bad)  
   14002a34c:	(bad)  
   14002a34d:	(bad)  
   14002a34e:	(bad)  
   14002a34f:	(bad)  
   14002a350:	(bad)  
   14002a351:	(bad)  
   14002a352:	(bad)  
   14002a353:	(bad)  
   14002a354:	(bad)  
   14002a355:	(bad)  
   14002a356:	(bad)  
   14002a357:	(bad)  
   14002a358:	(bad)  
   14002a359:	(bad)  
   14002a35a:	(bad)  
   14002a35b:	(bad)  
   14002a35c:	(bad)  
   14002a35d:	(bad)  
   14002a35e:	(bad)  
   14002a35f:	(bad)  
   14002a360:	(bad)  
   14002a361:	(bad)  
   14002a362:	(bad)  
   14002a363:	(bad)  
   14002a364:	(bad)  
   14002a365:	(bad)  
   14002a366:	(bad)  
   14002a367:	(bad)  
   14002a368:	(bad)  
   14002a369:	(bad)  
   14002a36a:	(bad)  
   14002a36b:	jmp    FWORD PTR [rsi-0x2b]
   14002a36e:	(bad)  
   14002a36f:	call   QWORD PTR [rdx-0x33]
   14002a372:	call   QWORD PTR [r10-0x33]
   14002a376:	call   QWORD PTR [r10-0x33]
   14002a37a:	call   QWORD PTR [r10-0x33]
   14002a37e:	call   QWORD PTR [r10-0x33]
   14002a382:	call   QWORD PTR [r10-0x33]
   14002a386:	call   QWORD PTR [r10-0x33]
   14002a38a:	call   QWORD PTR [r10-0x33]
   14002a38e:	call   QWORD PTR [r10-0x33]
   14002a392:	call   QWORD PTR [r10-0x33]
   14002a396:	call   QWORD PTR [r10-0x33]
   14002a39a:	call   QWORD PTR [r10-0x33]
   14002a39e:	call   QWORD PTR [r10-0x33]
   14002a3a2:	call   QWORD PTR [r10-0x33]
   14002a3a6:	call   QWORD PTR [r10-0x33]
   14002a3aa:	call   QWORD PTR [r10-0x33]
   14002a3ae:	call   QWORD PTR [r10-0x33]
   14002a3b2:	call   QWORD PTR [r10-0x33]
   14002a3b6:	call   QWORD PTR [r10-0x33]
   14002a3ba:	inc    DWORD PTR [r8]
   14002a3bd:	add    BYTE PTR [rax],al
   14002a3bf:	cmp    eax,DWORD PTR [rax]
   14002a3c1:	add    BYTE PTR [rax],al
   14002a3c3:	sbb    al,0x0
   14002a3c5:	add    BYTE PTR [rax],al
   14002a3c7:	or     al,0x0
   14002a3c9:	add    BYTE PTR [rax],al
   14002a3cb:	add    eax,0x2000000
	...
   14002a428:	add    BYTE PTR [rax],al
   14002a42a:	add    BYTE PTR [rdx],al
   14002a42c:	add    BYTE PTR [rax],al
   14002a42e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02a434
   14002a434:	add    BYTE PTR [rax],al
   14002a436:	add    BYTE PTR [rax+rax*1],bl
   14002a439:	add    BYTE PTR [rax],al
   14002a43b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002a43e:	call   QWORD PTR [r10-0x33]
   14002a442:	call   QWORD PTR [r10-0x33]
   14002a446:	call   QWORD PTR [r10-0x33]
   14002a44a:	call   QWORD PTR [r10-0x33]
   14002a44e:	call   QWORD PTR [r10-0x33]
   14002a452:	call   QWORD PTR [r10-0x33]
   14002a456:	call   QWORD PTR [r10-0x33]
   14002a45a:	call   QWORD PTR [r10-0x33]
   14002a45e:	call   QWORD PTR [r10-0x33]
   14002a462:	call   QWORD PTR [r10-0x33]
   14002a466:	call   QWORD PTR [r10-0x33]
   14002a46a:	call   QWORD PTR [r10-0x33]
   14002a46e:	call   QWORD PTR [r10-0x33]
   14002a472:	call   QWORD PTR [r10-0x33]
   14002a476:	call   QWORD PTR [r10-0x33]
   14002a47a:	call   QWORD PTR [r10-0x33]
   14002a47e:	call   QWORD PTR [r10-0x33]
   14002a482:	call   QWORD PTR [r10-0x33]
   14002a486:	call   QWORD PTR [r10-0x33]
   14002a48a:	call   QWORD PTR [r10-0x33]
   14002a48e:	call   QWORD PTR [r10-0x33]
   14002a492:	jmp    QWORD PTR [r10+rdx*8+0x54]
   14002a497:	(bad)  
   14002a498:	in     al,dx
   14002a499:	cli    
   14002a49a:	(bad)  
   14002a49b:	(bad)  
   14002a49c:	(bad)  
   14002a49d:	(bad)  
   14002a49e:	(bad)  
   14002a49f:	(bad)  
   14002a4a0:	(bad)  
   14002a4a1:	(bad)  
   14002a4a2:	(bad)  
   14002a4a3:	(bad)  
   14002a4a4:	(bad)  
   14002a4a5:	(bad)  
   14002a4a6:	(bad)  
   14002a4a7:	(bad)  
   14002a4a8:	(bad)  
   14002a4a9:	(bad)  
   14002a4aa:	(bad)  
   14002a4ab:	(bad)  
   14002a4ac:	(bad)  
   14002a4ad:	(bad)  
   14002a4ae:	(bad)  
   14002a4af:	(bad)  
   14002a4b0:	(bad)  
   14002a4b1:	(bad)  
   14002a4b2:	(bad)  
   14002a4b3:	(bad)  
   14002a4b4:	(bad)  
   14002a4b5:	(bad)  
   14002a4b6:	(bad)  
   14002a4b7:	(bad)  
   14002a4b8:	(bad)  
   14002a4b9:	(bad)  
   14002a4ba:	(bad)  
   14002a4bb:	(bad)  
   14002a4bc:	(bad)  
   14002a4bd:	(bad)  
   14002a4be:	(bad)  
   14002a4bf:	(bad)  
   14002a4c0:	(bad)  
   14002a4c1:	(bad)  
   14002a4c2:	(bad)  
   14002a4c3:	(bad)  
   14002a4c4:	(bad)  
   14002a4c5:	(bad)  
   14002a4c6:	(bad)  
   14002a4c7:	(bad)  
   14002a4c8:	(bad)  
   14002a4c9:	(bad)  
   14002a4ca:	(bad)  
   14002a4cb:	(bad)  
   14002a4cc:	(bad)  
   14002a4cd:	(bad)  
   14002a4ce:	(bad)  
   14002a4cf:	(bad)  
   14002a4d0:	(bad)  
   14002a4d1:	(bad)  
   14002a4d2:	(bad)  
   14002a4d3:	(bad)  
   14002a4d4:	(bad)  
   14002a4d5:	(bad)  
   14002a4d6:	(bad)  
   14002a4d7:	(bad)  
   14002a4d8:	(bad)  
   14002a4d9:	(bad)  
   14002a4da:	(bad)  
   14002a4db:	(bad)  
   14002a4dc:	(bad)  
   14002a4dd:	(bad)  
   14002a4de:	(bad)  
   14002a4df:	(bad)  
   14002a4e0:	(bad)  
   14002a4e1:	(bad)  
   14002a4e2:	(bad)  
   14002a4e3:	(bad)  
   14002a4e4:	(bad)  
   14002a4e5:	(bad)  
   14002a4e6:	(bad)  
   14002a4e7:	(bad)  
   14002a4e8:	(bad)  
   14002a4e9:	(bad)  
   14002a4ea:	(bad)  
   14002a4eb:	(bad)  
   14002a4ec:	(bad)  
   14002a4ed:	(bad)  
   14002a4ee:	(bad)  
   14002a4ef:	(bad)  
   14002a4f0:	(bad)  
   14002a4f1:	(bad)  
   14002a4f2:	(bad)  
   14002a4f3:	(bad)  
   14002a4f4:	(bad)  
   14002a4f5:	(bad)  
   14002a4f6:	(bad)  
   14002a4f7:	(bad)  
   14002a4f8:	stc    
   14002a4f9:	std    
   14002a4fa:	clc    
   14002a4fb:	(bad)  
   14002a4fc:	jns    0x14002a4d6
   14002a4fe:	ins    BYTE PTR es:[rdi],dx
   14002a4ff:	call   QWORD PTR [rdx-0x33]
   14002a502:	call   QWORD PTR [r10-0x33]
   14002a506:	call   QWORD PTR [r10-0x33]
   14002a50a:	call   QWORD PTR [r10-0x33]
   14002a50e:	call   QWORD PTR [r10-0x33]
   14002a512:	call   QWORD PTR [r10-0x33]
   14002a516:	call   QWORD PTR [r10-0x33]
   14002a51a:	call   QWORD PTR [r10-0x33]
   14002a51e:	call   QWORD PTR [r10-0x33]
   14002a522:	call   QWORD PTR [r10-0x33]
   14002a526:	call   QWORD PTR [r10-0x33]
   14002a52a:	call   QWORD PTR [r10-0x33]
   14002a52e:	call   QWORD PTR [r10-0x33]
   14002a532:	jmp    r8
   14002a535:	neg    ch
   14002a537:	(bad)  
   14002a538:	(bad)  
   14002a539:	(bad)  
   14002a53a:	(bad)  
   14002a53b:	(bad)  
   14002a53c:	(bad)  
   14002a53d:	(bad)  
   14002a53e:	(bad)  
   14002a53f:	(bad)  
   14002a540:	(bad)  
   14002a541:	(bad)  
   14002a542:	(bad)  
   14002a543:	(bad)  
   14002a544:	(bad)  
   14002a545:	(bad)  
   14002a546:	(bad)  
   14002a547:	(bad)  
   14002a548:	(bad)  
   14002a549:	(bad)  
   14002a54a:	(bad)  
   14002a54b:	(bad)  
   14002a54c:	(bad)  
   14002a54d:	(bad)  
   14002a54e:	(bad)  
   14002a54f:	(bad)  
   14002a550:	(bad)  
   14002a551:	(bad)  
   14002a552:	(bad)  
   14002a553:	(bad)  
   14002a554:	(bad)  
   14002a555:	(bad)  
   14002a556:	(bad)  
   14002a557:	(bad)  
   14002a558:	(bad)  
   14002a559:	(bad)  
   14002a55a:	(bad)  
   14002a55b:	(bad)  
   14002a55c:	(bad)  
   14002a55d:	(bad)  
   14002a55e:	(bad)  
   14002a55f:	(bad)  
   14002a560:	(bad)  
   14002a561:	(bad)  
   14002a562:	(bad)  
   14002a563:	(bad)  
   14002a564:	(bad)  
   14002a565:	(bad)  
   14002a566:	(bad)  
   14002a567:	(bad)  
   14002a568:	(bad)  
   14002a569:	(bad)  
   14002a56a:	(bad)  
   14002a56b:	jmp    QWORD PTR [rdx+rdx*8+0x54]
   14002a56f:	call   QWORD PTR [rdx-0x33]
   14002a572:	call   QWORD PTR [r10-0x33]
   14002a576:	call   QWORD PTR [r10-0x33]
   14002a57a:	call   QWORD PTR [r10-0x33]
   14002a57e:	call   QWORD PTR [r10-0x33]
   14002a582:	call   QWORD PTR [r10-0x33]
   14002a586:	call   QWORD PTR [r10-0x33]
   14002a58a:	call   QWORD PTR [r10-0x33]
   14002a58e:	call   QWORD PTR [r10-0x33]
   14002a592:	call   QWORD PTR [r10-0x33]
   14002a596:	call   QWORD PTR [r10-0x33]
   14002a59a:	call   QWORD PTR [r10-0x33]
   14002a59e:	call   QWORD PTR [r10-0x33]
   14002a5a2:	call   QWORD PTR [r10-0x33]
   14002a5a6:	call   QWORD PTR [r10-0x33]
   14002a5aa:	call   QWORD PTR [r10-0x33]
   14002a5ae:	call   QWORD PTR [r10-0x33]
   14002a5b2:	call   QWORD PTR [r10-0x33]
   14002a5b6:	call   QWORD PTR [r10-0x33]
   14002a5ba:	inc    DWORD PTR [r8]
   14002a5bd:	add    BYTE PTR [rax],al
   14002a5bf:	cmp    eax,DWORD PTR [rax]
   14002a5c1:	add    BYTE PTR [rax],al
   14002a5c3:	sbb    al,0x0
   14002a5c5:	add    BYTE PTR [rax],al
   14002a5c7:	or     al,0x0
   14002a5c9:	add    BYTE PTR [rax],al
   14002a5cb:	add    eax,0x2000000
	...
   14002a628:	add    BYTE PTR [rax],al
   14002a62a:	add    BYTE PTR [rdx],al
   14002a62c:	add    BYTE PTR [rax],al
   14002a62e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02a634
   14002a634:	add    BYTE PTR [rax],al
   14002a636:	add    BYTE PTR [rax+rax*1],bl
   14002a639:	add    BYTE PTR [rax],al
   14002a63b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002a63e:	call   QWORD PTR [r10-0x33]
   14002a642:	call   QWORD PTR [r10-0x33]
   14002a646:	call   QWORD PTR [r10-0x33]
   14002a64a:	call   QWORD PTR [r10-0x33]
   14002a64e:	call   QWORD PTR [r10-0x33]
   14002a652:	call   QWORD PTR [r10-0x33]
   14002a656:	call   QWORD PTR [r10-0x33]
   14002a65a:	call   QWORD PTR [r10-0x33]
   14002a65e:	call   QWORD PTR [r10-0x33]
   14002a662:	call   QWORD PTR [r10-0x33]
   14002a666:	call   QWORD PTR [r10-0x33]
   14002a66a:	call   QWORD PTR [r10-0x33]
   14002a66e:	call   QWORD PTR [r10-0x33]
   14002a672:	call   QWORD PTR [r10-0x33]
   14002a676:	call   QWORD PTR [r10-0x33]
   14002a67a:	call   QWORD PTR [r10-0x33]
   14002a67e:	call   QWORD PTR [r10-0x33]
   14002a682:	call   QWORD PTR [r10-0x33]
   14002a686:	call   QWORD PTR [r10-0x33]
   14002a68a:	call   QWORD PTR [r10-0x33]
   14002a68e:	call   QWORD PTR [r11-0x33]
   14002a692:	rex.X call rdi
   14002a695:	repz sar edi,cl
   14002a698:	(bad)  
   14002a699:	(bad)  
   14002a69a:	(bad)  
   14002a69b:	(bad)  
   14002a69c:	(bad)  
   14002a69d:	(bad)  
   14002a69e:	(bad)  
   14002a69f:	(bad)  
   14002a6a0:	(bad)  
   14002a6a1:	(bad)  
   14002a6a2:	(bad)  
   14002a6a3:	(bad)  
   14002a6a4:	(bad)  
   14002a6a5:	(bad)  
   14002a6a6:	(bad)  
   14002a6a7:	(bad)  
   14002a6a8:	(bad)  
   14002a6a9:	(bad)  
   14002a6aa:	(bad)  
   14002a6ab:	(bad)  
   14002a6ac:	(bad)  
   14002a6ad:	(bad)  
   14002a6ae:	(bad)  
   14002a6af:	(bad)  
   14002a6b0:	(bad)  
   14002a6b1:	(bad)  
   14002a6b2:	(bad)  
   14002a6b3:	(bad)  
   14002a6b4:	(bad)  
   14002a6b5:	(bad)  
   14002a6b6:	(bad)  
   14002a6b7:	(bad)  
   14002a6b8:	(bad)  
   14002a6b9:	(bad)  
   14002a6ba:	(bad)  
   14002a6bb:	(bad)  
   14002a6bc:	(bad)  
   14002a6bd:	(bad)  
   14002a6be:	(bad)  
   14002a6bf:	(bad)  
   14002a6c0:	(bad)  
   14002a6c1:	(bad)  
   14002a6c2:	(bad)  
   14002a6c3:	push   rsi
   14002a6c5:	cld    
   14002a6c6:	cmc    
   14002a6c7:	(bad)  
   14002a6c8:	call   0x12e028dc5
   14002a6cd:	cli    
   14002a6ce:	in     al,dx
   14002a6cf:	(bad)  
   14002a6d0:	sti    
   14002a6d1:	(bad)  
   14002a6d2:	sti    
   14002a6d3:	(bad)  
   14002a6d4:	(bad)  
   14002a6d5:	(bad)  
   14002a6d6:	(bad)  
   14002a6d7:	(bad)  
   14002a6d8:	(bad)  
   14002a6d9:	(bad)  
   14002a6da:	(bad)  
   14002a6db:	(bad)  
   14002a6dc:	(bad)  
   14002a6dd:	(bad)  
   14002a6de:	(bad)  
   14002a6df:	(bad)  
   14002a6e0:	(bad)  
   14002a6e1:	(bad)  
   14002a6e2:	(bad)  
   14002a6e3:	(bad)  
   14002a6e4:	(bad)  
   14002a6e5:	(bad)  
   14002a6e6:	(bad)  
   14002a6e7:	(bad)  
   14002a6e8:	(bad)  
   14002a6e9:	(bad)  
   14002a6ea:	(bad)  
   14002a6eb:	(bad)  
   14002a6ec:	(bad)  
   14002a6ed:	(bad)  
   14002a6ee:	(bad)  
   14002a6ef:	(bad)  
   14002a6f0:	(bad)  
   14002a6f1:	(bad)  
   14002a6f2:	(bad)  
   14002a6f3:	(bad)  
   14002a6f4:	(bad)  
   14002a6f5:	(bad)  
   14002a6f6:	(bad)  
   14002a6f7:	(bad)  
   14002a6f8:	(bad)  
   14002a6f9:	(bad)  
   14002a6fa:	(bad)  
   14002a6fb:	push   rcx
   14002a6fd:	sti    
   14002a6fe:	out    dx,eax
   14002a6ff:	jmp    QWORD PTR [rdx+rdx*8+0x55]
   14002a703:	call   QWORD PTR [rdx-0x33]
   14002a706:	call   QWORD PTR [r10-0x33]
   14002a70a:	call   QWORD PTR [r10-0x33]
   14002a70e:	call   QWORD PTR [r10-0x33]
   14002a712:	call   QWORD PTR [r10-0x33]
   14002a716:	call   QWORD PTR [r10-0x33]
   14002a71a:	call   QWORD PTR [r10-0x33]
   14002a71e:	call   QWORD PTR [r10-0x33]
   14002a722:	call   QWORD PTR [r10-0x33]
   14002a726:	call   QWORD PTR [r10-0x33]
   14002a72a:	call   QWORD PTR [r10-0x33]
   14002a72e:	jmp    FWORD PTR [r14-0x2b]
   14002a732:	(bad)  
   14002a733:	(bad)  
   14002a734:	(bad)  
   14002a735:	(bad)  
   14002a736:	(bad)  
   14002a737:	(bad)  
   14002a738:	(bad)  
   14002a739:	(bad)  
   14002a73a:	(bad)  
   14002a73b:	(bad)  
   14002a73c:	(bad)  
   14002a73d:	(bad)  
   14002a73e:	(bad)  
   14002a73f:	(bad)  
   14002a740:	(bad)  
   14002a741:	(bad)  
   14002a742:	(bad)  
   14002a743:	(bad)  
   14002a744:	(bad)  
   14002a745:	(bad)  
   14002a746:	(bad)  
   14002a747:	(bad)  
   14002a748:	(bad)  
   14002a749:	(bad)  
   14002a74a:	(bad)  
   14002a74b:	(bad)  
   14002a74c:	(bad)  
   14002a74d:	(bad)  
   14002a74e:	(bad)  
   14002a74f:	(bad)  
   14002a750:	(bad)  
   14002a751:	(bad)  
   14002a752:	(bad)  
   14002a753:	(bad)  
   14002a754:	(bad)  
   14002a755:	(bad)  
   14002a756:	(bad)  
   14002a757:	(bad)  
   14002a758:	(bad)  
   14002a759:	(bad)  
   14002a75a:	(bad)  
   14002a75b:	(bad)  
   14002a75c:	(bad)  
   14002a75d:	(bad)  
   14002a75e:	(bad)  
   14002a75f:	(bad)  
   14002a760:	(bad)  
   14002a761:	(bad)  
   14002a762:	(bad)  
   14002a763:	(bad)  
   14002a764:	(bad)  
   14002a765:	(bad)  
   14002a766:	(bad)  
   14002a767:	(bad)  
   14002a768:	(bad)  
   14002a769:	(bad)  
   14002a76a:	(bad)  
   14002a76b:	call   FWORD PTR [rdx-0x31]
   14002a76e:	rex.WX call QWORD PTR [rdx-0x33]
   14002a772:	call   QWORD PTR [r10-0x33]
   14002a776:	call   QWORD PTR [r10-0x33]
   14002a77a:	call   QWORD PTR [r10-0x33]
   14002a77e:	call   QWORD PTR [r10-0x33]
   14002a782:	call   QWORD PTR [r10-0x33]
   14002a786:	call   QWORD PTR [r10-0x33]
   14002a78a:	call   QWORD PTR [r10-0x33]
   14002a78e:	call   QWORD PTR [r10-0x33]
   14002a792:	call   QWORD PTR [r10-0x33]
   14002a796:	call   QWORD PTR [r10-0x33]
   14002a79a:	call   QWORD PTR [r10-0x33]
   14002a79e:	call   QWORD PTR [r10-0x33]
   14002a7a2:	call   QWORD PTR [r10-0x33]
   14002a7a6:	call   QWORD PTR [r10-0x33]
   14002a7aa:	call   QWORD PTR [r10-0x33]
   14002a7ae:	call   QWORD PTR [r10-0x33]
   14002a7b2:	call   QWORD PTR [r10-0x33]
   14002a7b6:	call   QWORD PTR [r10-0x33]
   14002a7ba:	inc    DWORD PTR [r8]
   14002a7bd:	add    BYTE PTR [rax],al
   14002a7bf:	cmp    eax,DWORD PTR [rax]
   14002a7c1:	add    BYTE PTR [rax],al
   14002a7c3:	sbb    al,0x0
   14002a7c5:	add    BYTE PTR [rax],al
   14002a7c7:	or     al,0x0
   14002a7c9:	add    BYTE PTR [rax],al
   14002a7cb:	add    eax,0x2000000
	...
   14002a828:	add    BYTE PTR [rax],al
   14002a82a:	add    BYTE PTR [rdx],al
   14002a82c:	add    BYTE PTR [rax],al
   14002a82e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02a834
   14002a834:	add    BYTE PTR [rax],al
   14002a836:	add    BYTE PTR [rax+rax*1],bl
   14002a839:	add    BYTE PTR [rax],al
   14002a83b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002a83e:	call   QWORD PTR [r10-0x33]
   14002a842:	call   QWORD PTR [r10-0x33]
   14002a846:	call   QWORD PTR [r10-0x33]
   14002a84a:	call   QWORD PTR [r10-0x33]
   14002a84e:	call   QWORD PTR [r10-0x33]
   14002a852:	call   QWORD PTR [r10-0x33]
   14002a856:	call   QWORD PTR [r10-0x33]
   14002a85a:	call   QWORD PTR [r10-0x33]
   14002a85e:	call   QWORD PTR [r10-0x33]
   14002a862:	call   QWORD PTR [r10-0x33]
   14002a866:	call   QWORD PTR [r10-0x33]
   14002a86a:	call   QWORD PTR [r10-0x33]
   14002a86e:	call   QWORD PTR [r10-0x33]
   14002a872:	call   QWORD PTR [r10-0x33]
   14002a876:	call   QWORD PTR [r10-0x33]
   14002a87a:	call   QWORD PTR [r10-0x33]
   14002a87e:	call   QWORD PTR [r10-0x33]
   14002a882:	call   QWORD PTR [r10-0x33]
   14002a886:	call   QWORD PTR [r10-0x33]
   14002a88a:	call   QWORD PTR [r10-0x33]
   14002a88e:	call   QWORD PTR [r14-0x731f]
   14002a895:	(bad)  
   14002a896:	(bad)  
   14002a897:	(bad)  
   14002a898:	(bad)  
   14002a899:	(bad)  
   14002a89a:	(bad)  
   14002a89b:	(bad)  
   14002a89c:	(bad)  
   14002a89d:	(bad)  
   14002a89e:	(bad)  
   14002a89f:	(bad)  
   14002a8a0:	(bad)  
   14002a8a1:	(bad)  
   14002a8a2:	(bad)  
   14002a8a3:	(bad)  
   14002a8a4:	(bad)  
   14002a8a5:	(bad)  
   14002a8a6:	(bad)  
   14002a8a7:	(bad)  
   14002a8a8:	(bad)  
   14002a8a9:	(bad)  
   14002a8aa:	(bad)  
   14002a8ab:	(bad)  
   14002a8ac:	(bad)  
   14002a8ad:	(bad)  
   14002a8ae:	(bad)  
   14002a8af:	(bad)  
   14002a8b0:	(bad)  
   14002a8b1:	(bad)  
   14002a8b2:	(bad)  
   14002a8b3:	(bad)  
   14002a8b4:	in     eax,dx
   14002a8b5:	cli    
   14002a8b6:	in     al,dx
   14002a8b7:	push   QWORD PTR [rax+0x7bffa8e8]
   14002a8bd:	fldcw  WORD PTR [rsi-0x1]
   14002a8c0:	push   rdi
   14002a8c1:	iret   
   14002a8c2:	rex.RXB call QWORD PTR [r10-0x33]
   14002a8c6:	call   QWORD PTR [r10-0x33]
   14002a8ca:	call   QWORD PTR [r10-0x33]
   14002a8ce:	call   QWORD PTR [r10-0x33]
   14002a8d2:	jmp    QWORD PTR [r11-0x2e]
   14002a8d6:	push   rsp
   14002a8d7:	call   QWORD PTR [rbx-0x36007620]
   14002a8dd:	out    dx,eax
   14002a8de:	ret    
   14002a8df:	(bad)  
   14002a8e0:	(bad)  
   14002a8e1:	(bad)  
   14002a8e2:	(bad)  
   14002a8e3:	(bad)  
   14002a8e4:	(bad)  
   14002a8e5:	(bad)  
   14002a8e6:	(bad)  
   14002a8e7:	(bad)  
   14002a8e8:	(bad)  
   14002a8e9:	(bad)  
   14002a8ea:	(bad)  
   14002a8eb:	(bad)  
   14002a8ec:	(bad)  
   14002a8ed:	(bad)  
   14002a8ee:	(bad)  
   14002a8ef:	(bad)  
   14002a8f0:	(bad)  
   14002a8f1:	(bad)  
   14002a8f2:	(bad)  
   14002a8f3:	(bad)  
   14002a8f4:	(bad)  
   14002a8f5:	(bad)  
   14002a8f6:	(bad)  
   14002a8f7:	(bad)  
   14002a8f8:	(bad)  
   14002a8f9:	(bad)  
   14002a8fa:	(bad)  
   14002a8fb:	(bad)  
   14002a8fc:	(bad)  
   14002a8fd:	(bad)  
   14002a8fe:	(bad)  
   14002a8ff:	inc    ebp
   14002a901:	out    dx,al
   14002a902:	sar    bh,0x52
   14002a905:	int    0x41
   14002a907:	call   QWORD PTR [rdx-0x33]
   14002a90a:	call   QWORD PTR [r10-0x33]
   14002a90e:	call   QWORD PTR [r10-0x33]
   14002a912:	call   QWORD PTR [r10-0x33]
   14002a916:	call   QWORD PTR [r10-0x33]
   14002a91a:	call   QWORD PTR [r10-0x33]
   14002a91e:	call   QWORD PTR [r10-0x33]
   14002a922:	call   QWORD PTR [r10-0x33]
   14002a926:	call   QWORD PTR [r10-0x33]
   14002a92a:	call   QWORD PTR [r10-0x33]
   14002a92e:	call   FWORD PTR [r15-0x691d]
   14002a935:	(bad)  
   14002a936:	(bad)  
   14002a937:	(bad)  
   14002a938:	(bad)  
   14002a939:	(bad)  
   14002a93a:	(bad)  
   14002a93b:	(bad)  
   14002a93c:	(bad)  
   14002a93d:	(bad)  
   14002a93e:	(bad)  
   14002a93f:	(bad)  
   14002a940:	(bad)  
   14002a941:	(bad)  
   14002a942:	(bad)  
   14002a943:	(bad)  
   14002a944:	(bad)  
   14002a945:	(bad)  
   14002a946:	(bad)  
   14002a947:	(bad)  
   14002a948:	(bad)  
   14002a949:	(bad)  
   14002a94a:	(bad)  
   14002a94b:	(bad)  
   14002a94c:	(bad)  
   14002a94d:	(bad)  
   14002a94e:	(bad)  
   14002a94f:	(bad)  
   14002a950:	fdivrp st(5),st
   14002a952:	(bad)  
   14002a954:	mov    edi,0xbaffb8ec
   14002a959:	jmp    0x14002a90e
   14002a95b:	inc    esp
   14002a95d:	out    dx,al
   14002a95e:	mov    esi,0xc4f0c9ff
   14002a963:	call   rcx
   14002a965:	repnz int3 
   14002a967:	(bad)  
   14002a968:	fxtract 
   14002a96a:	(bad)  
   14002a96b:	call   QWORD PTR [rbx-0x33]
   14002a96e:	rex.X call QWORD PTR [rdx-0x33]
   14002a972:	call   QWORD PTR [r10-0x33]
   14002a976:	call   QWORD PTR [r10-0x33]
   14002a97a:	call   QWORD PTR [r10-0x33]
   14002a97e:	call   QWORD PTR [r10-0x33]
   14002a982:	call   QWORD PTR [r10-0x33]
   14002a986:	call   QWORD PTR [r10-0x33]
   14002a98a:	call   QWORD PTR [r10-0x33]
   14002a98e:	call   QWORD PTR [r10-0x33]
   14002a992:	call   QWORD PTR [r10-0x33]
   14002a996:	call   QWORD PTR [r10-0x33]
   14002a99a:	call   QWORD PTR [r10-0x33]
   14002a99e:	call   QWORD PTR [r10-0x33]
   14002a9a2:	call   QWORD PTR [r10-0x33]
   14002a9a6:	call   QWORD PTR [r10-0x33]
   14002a9aa:	call   QWORD PTR [r10-0x33]
   14002a9ae:	call   QWORD PTR [r10-0x33]
   14002a9b2:	call   QWORD PTR [r10-0x33]
   14002a9b6:	call   QWORD PTR [r10-0x33]
   14002a9ba:	inc    DWORD PTR [r8]
   14002a9bd:	add    BYTE PTR [rax],al
   14002a9bf:	cmp    eax,DWORD PTR [rax]
   14002a9c1:	add    BYTE PTR [rax],al
   14002a9c3:	sbb    al,0x0
   14002a9c5:	add    BYTE PTR [rax],al
   14002a9c7:	or     al,0x0
   14002a9c9:	add    BYTE PTR [rax],al
   14002a9cb:	add    eax,0x2000000
	...
   14002aa28:	add    BYTE PTR [rax],al
   14002aa2a:	add    BYTE PTR [rdx],al
   14002aa2c:	add    BYTE PTR [rax],al
   14002aa2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02aa34
   14002aa34:	add    BYTE PTR [rax],al
   14002aa36:	add    BYTE PTR [rax+rax*1],bl
   14002aa39:	add    BYTE PTR [rax],al
   14002aa3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002aa3e:	call   QWORD PTR [r10-0x33]
   14002aa42:	call   QWORD PTR [r10-0x33]
   14002aa46:	call   QWORD PTR [r10-0x33]
   14002aa4a:	call   QWORD PTR [r10-0x33]
   14002aa4e:	call   QWORD PTR [r10-0x33]
   14002aa52:	call   QWORD PTR [r10-0x33]
   14002aa56:	call   QWORD PTR [r10-0x33]
   14002aa5a:	call   QWORD PTR [r10-0x33]
   14002aa5e:	call   QWORD PTR [r10-0x33]
   14002aa62:	call   QWORD PTR [r10-0x33]
   14002aa66:	call   QWORD PTR [r10-0x33]
   14002aa6a:	call   QWORD PTR [r10-0x33]
   14002aa6e:	call   QWORD PTR [r10-0x33]
   14002aa72:	call   QWORD PTR [r10-0x33]
   14002aa76:	call   QWORD PTR [r10-0x33]
   14002aa7a:	call   QWORD PTR [r10-0x33]
   14002aa7e:	call   QWORD PTR [r10-0x33]
   14002aa82:	call   QWORD PTR [r10-0x33]
   14002aa86:	call   QWORD PTR [r10-0x33]
   14002aa8a:	call   QWORD PTR [r13-0x32]
   14002aa8e:	rex.RB (bad) 
   14002aa90:	jmp    0x14002928e
   14002aa95:	(bad)  
   14002aa96:	(bad)  
   14002aa97:	(bad)  
   14002aa98:	(bad)  
   14002aa99:	(bad)  
   14002aa9a:	(bad)  
   14002aa9b:	(bad)  
   14002aa9c:	(bad)  
   14002aa9d:	(bad)  
   14002aa9e:	(bad)  
   14002aa9f:	(bad)  
   14002aaa0:	(bad)  
   14002aaa1:	(bad)  
   14002aaa2:	(bad)  
   14002aaa3:	(bad)  
   14002aaa4:	(bad)  
   14002aaa5:	(bad)  
   14002aaa6:	(bad)  
   14002aaa7:	(bad)  
   14002aaa8:	(bad)  
   14002aaa9:	(bad)  
   14002aaaa:	(bad)  
   14002aaab:	(bad)  
   14002aaac:	(bad)  
   14002aaad:	(bad)  
   14002aaae:	(bad)  
   14002aaaf:	push   QWORD PTR [rcx+rbp*8-0x30a60054]
   14002aab6:	rex.W call QWORD PTR [rdx-0x33]
   14002aaba:	call   QWORD PTR [r10-0x33]
   14002aabe:	call   QWORD PTR [r10-0x33]
   14002aac2:	call   QWORD PTR [r10-0x33]
   14002aac6:	call   QWORD PTR [r10-0x33]
   14002aaca:	call   QWORD PTR [r10-0x33]
   14002aace:	call   QWORD PTR [r10-0x33]
   14002aad2:	call   QWORD PTR [r10-0x33]
   14002aad6:	call   QWORD PTR [r10-0x33]
   14002aada:	call   QWORD PTR [r10-0x33]
   14002aade:	push   QWORD PTR [r13-0x29]
   14002aae2:	addr32 jmp rdi
   14002aae5:	clc    
   14002aae6:	in     al,0xff
   14002aae8:	(bad)  
   14002aae9:	(bad)  
   14002aaea:	(bad)  
   14002aaeb:	(bad)  
   14002aaec:	(bad)  
   14002aaed:	(bad)  
   14002aaee:	(bad)  
   14002aaef:	(bad)  
   14002aaf0:	(bad)  
   14002aaf1:	(bad)  
   14002aaf2:	(bad)  
   14002aaf3:	(bad)  
   14002aaf4:	(bad)  
   14002aaf5:	(bad)  
   14002aaf6:	(bad)  
   14002aaf7:	(bad)  
   14002aaf8:	(bad)  
   14002aaf9:	(bad)  
   14002aafa:	(bad)  
   14002aafb:	(bad)  
   14002aafc:	(bad)  
   14002aafd:	(bad)  
   14002aafe:	(bad)  
   14002aaff:	(bad)  
   14002ab00:	(bad)  
   14002ab01:	(bad)  
   14002ab02:	(bad)  
   14002ab03:	(bad)  
   14002ab04:	jnp    0x14002aadf
   14002ab06:	outs   dx,BYTE PTR ds:[rsi]
   14002ab07:	call   QWORD PTR [rdx-0x33]
   14002ab0a:	call   QWORD PTR [r10-0x33]
   14002ab0e:	call   QWORD PTR [r10-0x33]
   14002ab12:	call   QWORD PTR [r10-0x33]
   14002ab16:	call   QWORD PTR [r10-0x33]
   14002ab1a:	call   QWORD PTR [r10-0x33]
   14002ab1e:	call   QWORD PTR [r10-0x33]
   14002ab22:	call   QWORD PTR [r10-0x33]
   14002ab26:	call   QWORD PTR [r10-0x33]
   14002ab2a:	call   QWORD PTR [r10-0x33]
   14002ab2e:	rex.B (bad) 
   14002ab30:	mov    ebx,0xffffb4eb
   14002ab35:	(bad)  
   14002ab36:	(bad)  
   14002ab37:	(bad)  
   14002ab38:	(bad)  
   14002ab39:	(bad)  
   14002ab3a:	(bad)  
   14002ab3b:	(bad)  
   14002ab3c:	(bad)  
   14002ab3d:	(bad)  
   14002ab3e:	(bad)  
   14002ab3f:	(bad)  
   14002ab40:	(bad)  
   14002ab41:	(bad)  
   14002ab42:	(bad)  
   14002ab43:	(bad)  
   14002ab44:	(bad)  
   14002ab45:	(bad)  
   14002ab46:	(bad)  
   14002ab47:	(bad)  
   14002ab48:	(bad)  
   14002ab49:	(bad)  
   14002ab4a:	(bad)  
   14002ab4b:	jmp    QWORD PTR [rbp+riz*8-0x32ad0065]
   14002ab52:	call   QWORD PTR [r10-0x33]
   14002ab56:	call   QWORD PTR [r10-0x33]
   14002ab5a:	call   QWORD PTR [r10-0x33]
   14002ab5e:	call   QWORD PTR [r10-0x33]
   14002ab62:	call   QWORD PTR [r10-0x33]
   14002ab66:	call   QWORD PTR [r10-0x33]
   14002ab6a:	call   QWORD PTR [r10-0x33]
   14002ab6e:	call   QWORD PTR [r10-0x33]
   14002ab72:	call   QWORD PTR [r10-0x33]
   14002ab76:	call   QWORD PTR [r10-0x33]
   14002ab7a:	call   QWORD PTR [r10-0x33]
   14002ab7e:	call   QWORD PTR [r10-0x33]
   14002ab82:	call   QWORD PTR [r10-0x33]
   14002ab86:	call   QWORD PTR [r10-0x33]
   14002ab8a:	call   QWORD PTR [r10-0x33]
   14002ab8e:	call   QWORD PTR [r10-0x33]
   14002ab92:	call   QWORD PTR [r10-0x33]
   14002ab96:	call   QWORD PTR [r10-0x33]
   14002ab9a:	call   QWORD PTR [r10-0x33]
   14002ab9e:	call   QWORD PTR [r10-0x33]
   14002aba2:	call   QWORD PTR [r10-0x33]
   14002aba6:	call   QWORD PTR [r10-0x33]
   14002abaa:	call   QWORD PTR [r10-0x33]
   14002abae:	call   QWORD PTR [r10-0x33]
   14002abb2:	call   QWORD PTR [r10-0x33]
   14002abb6:	call   QWORD PTR [r10-0x33]
   14002abba:	inc    DWORD PTR [r8]
   14002abbd:	add    BYTE PTR [rax],al
   14002abbf:	cmp    eax,DWORD PTR [rax]
   14002abc1:	add    BYTE PTR [rax],al
   14002abc3:	sbb    al,0x0
   14002abc5:	add    BYTE PTR [rax],al
   14002abc7:	or     al,0x0
   14002abc9:	add    BYTE PTR [rax],al
   14002abcb:	add    eax,0x2000000
	...
   14002ac28:	add    BYTE PTR [rax],al
   14002ac2a:	add    BYTE PTR [rdx],al
   14002ac2c:	add    BYTE PTR [rax],al
   14002ac2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02ac34
   14002ac34:	add    BYTE PTR [rax],al
   14002ac36:	add    BYTE PTR [rax+rax*1],bl
   14002ac39:	add    BYTE PTR [rax],al
   14002ac3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002ac3e:	call   QWORD PTR [r10-0x33]
   14002ac42:	call   QWORD PTR [r10-0x33]
   14002ac46:	call   QWORD PTR [r10-0x33]
   14002ac4a:	call   QWORD PTR [r10-0x33]
   14002ac4e:	call   QWORD PTR [r10-0x33]
   14002ac52:	call   QWORD PTR [r10-0x33]
   14002ac56:	call   QWORD PTR [r10-0x33]
   14002ac5a:	call   QWORD PTR [r10-0x33]
   14002ac5e:	call   QWORD PTR [r10-0x33]
   14002ac62:	call   QWORD PTR [r10-0x33]
   14002ac66:	call   QWORD PTR [r10-0x33]
   14002ac6a:	call   QWORD PTR [r10-0x33]
   14002ac6e:	call   QWORD PTR [r10-0x33]
   14002ac72:	call   QWORD PTR [r10-0x33]
   14002ac76:	call   QWORD PTR [r10-0x33]
   14002ac7a:	call   QWORD PTR [r10-0x33]
   14002ac7e:	call   QWORD PTR [r10-0x33]
   14002ac82:	call   QWORD PTR [r10-0x33]
   14002ac86:	call   QWORD PTR [r10-0x33]
   14002ac8a:	dec    DWORD PTR [r10-0x8123]
   14002ac91:	(bad)  
   14002ac92:	(bad)  
   14002ac93:	(bad)  
   14002ac94:	(bad)  
   14002ac95:	(bad)  
   14002ac96:	(bad)  
   14002ac97:	(bad)  
   14002ac98:	(bad)  
   14002ac99:	(bad)  
   14002ac9a:	(bad)  
   14002ac9b:	(bad)  
   14002ac9c:	(bad)  
   14002ac9d:	(bad)  
   14002ac9e:	(bad)  
   14002ac9f:	(bad)  
   14002aca0:	(bad)  
   14002aca1:	(bad)  
   14002aca2:	(bad)  
   14002aca3:	(bad)  
   14002aca4:	(bad)  
   14002aca5:	(bad)  
   14002aca6:	(bad)  
   14002aca7:	(bad)  
   14002aca8:	(bad)  
   14002aca9:	(bad)  
   14002acaa:	(bad)  
   14002acab:	jmp    FWORD PTR [rbx+0x52ffa3e7]
   14002acb1:	int    0x41
   14002acb3:	call   QWORD PTR [rdx-0x33]
   14002acb6:	call   QWORD PTR [r10-0x33]
   14002acba:	call   QWORD PTR [r10-0x33]
   14002acbe:	call   QWORD PTR [r10-0x33]
   14002acc2:	call   QWORD PTR [r10-0x33]
   14002acc6:	call   QWORD PTR [r10-0x33]
   14002acca:	call   QWORD PTR [r10-0x33]
   14002acce:	call   QWORD PTR [r10-0x33]
   14002acd2:	call   QWORD PTR [r10-0x33]
   14002acd6:	call   QWORD PTR [r10-0x33]
   14002acda:	call   QWORD PTR [r10-0x33]
   14002acde:	call   QWORD PTR [r10-0x33]
   14002ace2:	jmp    QWORD PTR [r11-0x2e]
   14002ace6:	push   rsp
   14002ace7:	(bad)  
   14002ace8:	jmp    0x14002ace3
   14002acea:	jmp    0x14002acee
   14002acef:	(bad)  
   14002acf0:	(bad)  
   14002acf1:	(bad)  
   14002acf2:	(bad)  
   14002acf3:	(bad)  
   14002acf4:	(bad)  
   14002acf5:	(bad)  
   14002acf6:	(bad)  
   14002acf7:	(bad)  
   14002acf8:	(bad)  
   14002acf9:	(bad)  
   14002acfa:	(bad)  
   14002acfb:	(bad)  
   14002acfc:	(bad)  
   14002acfd:	(bad)  
   14002acfe:	(bad)  
   14002acff:	(bad)  
   14002ad00:	(bad)  
   14002ad01:	(bad)  
   14002ad02:	(bad)  
   14002ad03:	inc    edi
   14002ad05:	out    dx,eax
   14002ad06:	sar    edi,0x52
   14002ad09:	int    0x41
   14002ad0b:	call   QWORD PTR [rdx-0x33]
   14002ad0e:	call   QWORD PTR [r10-0x33]
   14002ad12:	call   QWORD PTR [r10-0x33]
   14002ad16:	call   QWORD PTR [r10-0x33]
   14002ad1a:	call   QWORD PTR [r10-0x33]
   14002ad1e:	call   QWORD PTR [r10-0x33]
   14002ad22:	call   QWORD PTR [r10-0x33]
   14002ad26:	call   QWORD PTR [r10-0x33]
   14002ad2a:	call   QWORD PTR [r10-0x33]
   14002ad2e:	call   r13
   14002ad31:	repz sar edi,1
   14002ad34:	(bad)  
   14002ad35:	(bad)  
   14002ad36:	(bad)  
   14002ad37:	(bad)  
   14002ad38:	(bad)  
   14002ad39:	(bad)  
   14002ad3a:	(bad)  
   14002ad3b:	(bad)  
   14002ad3c:	(bad)  
   14002ad3d:	(bad)  
   14002ad3e:	(bad)  
   14002ad3f:	(bad)  
   14002ad40:	(bad)  
   14002ad41:	(bad)  
   14002ad42:	(bad)  
   14002ad43:	(bad)  
   14002ad44:	(bad)  
   14002ad45:	(bad)  
   14002ad46:	(bad)  
   14002ad47:	(bad)  
   14002ad48:	(bad)  
   14002ad49:	(bad)  
   14002ad4a:	(bad)  
   14002ad4b:	call   FWORD PTR [rsi-0x2f]
   14002ad4e:	rex.WRX call QWORD PTR [rdx-0x33]
   14002ad52:	call   QWORD PTR [r10-0x33]
   14002ad56:	call   QWORD PTR [r10-0x33]
   14002ad5a:	call   QWORD PTR [r10-0x33]
   14002ad5e:	call   QWORD PTR [r10-0x33]
   14002ad62:	call   QWORD PTR [r10-0x33]
   14002ad66:	call   QWORD PTR [r10-0x33]
   14002ad6a:	call   QWORD PTR [r10-0x33]
   14002ad6e:	call   QWORD PTR [r10-0x33]
   14002ad72:	call   QWORD PTR [r10-0x33]
   14002ad76:	call   QWORD PTR [r10-0x33]
   14002ad7a:	call   QWORD PTR [r10-0x33]
   14002ad7e:	call   QWORD PTR [r10-0x33]
   14002ad82:	call   QWORD PTR [r10-0x33]
   14002ad86:	call   QWORD PTR [r10-0x33]
   14002ad8a:	call   QWORD PTR [r10-0x33]
   14002ad8e:	call   QWORD PTR [r10-0x33]
   14002ad92:	call   QWORD PTR [r10-0x33]
   14002ad96:	call   QWORD PTR [r10-0x33]
   14002ad9a:	call   QWORD PTR [r10-0x33]
   14002ad9e:	call   QWORD PTR [r10-0x33]
   14002ada2:	call   QWORD PTR [r10-0x33]
   14002ada6:	call   QWORD PTR [r10-0x33]
   14002adaa:	call   QWORD PTR [r10-0x33]
   14002adae:	call   QWORD PTR [r10-0x33]
   14002adb2:	call   QWORD PTR [r10-0x33]
   14002adb6:	call   QWORD PTR [r10-0x33]
   14002adba:	inc    DWORD PTR [r8]
   14002adbd:	add    BYTE PTR [rax],al
   14002adbf:	cmp    eax,DWORD PTR [rax]
   14002adc1:	add    BYTE PTR [rax],al
   14002adc3:	sbb    al,0x0
   14002adc5:	add    BYTE PTR [rax],al
   14002adc7:	or     al,0x0
   14002adc9:	add    BYTE PTR [rax],al
   14002adcb:	add    eax,0x2000000
	...
   14002ae28:	add    BYTE PTR [rax],al
   14002ae2a:	add    BYTE PTR [rdx],al
   14002ae2c:	add    BYTE PTR [rax],al
   14002ae2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02ae34
   14002ae34:	add    BYTE PTR [rax],al
   14002ae36:	add    BYTE PTR [rax+rax*1],bl
   14002ae39:	add    BYTE PTR [rax],al
   14002ae3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002ae3e:	call   QWORD PTR [r10-0x33]
   14002ae42:	call   QWORD PTR [r10-0x33]
   14002ae46:	call   QWORD PTR [r10-0x33]
   14002ae4a:	call   QWORD PTR [r10-0x33]
   14002ae4e:	call   QWORD PTR [r10-0x33]
   14002ae52:	call   QWORD PTR [r10-0x33]
   14002ae56:	call   QWORD PTR [r10-0x33]
   14002ae5a:	call   QWORD PTR [r10-0x33]
   14002ae5e:	call   QWORD PTR [r10-0x33]
   14002ae62:	call   QWORD PTR [r10-0x33]
   14002ae66:	call   QWORD PTR [r10-0x33]
   14002ae6a:	call   QWORD PTR [r10-0x33]
   14002ae6e:	call   QWORD PTR [r10-0x33]
   14002ae72:	call   QWORD PTR [r10-0x33]
   14002ae76:	call   QWORD PTR [r10-0x33]
   14002ae7a:	call   QWORD PTR [r10-0x33]
   14002ae7e:	call   QWORD PTR [r10-0x33]
   14002ae82:	call   QWORD PTR [r10-0x33]
   14002ae86:	call   QWORD PTR [r10-0x33]
   14002ae8a:	dec    r9d
   14002ae8d:	out    dx,eax
   14002ae8e:	ret    
   14002ae8f:	(bad)  
   14002ae90:	(bad)  
   14002ae91:	(bad)  
   14002ae92:	(bad)  
   14002ae93:	(bad)  
   14002ae94:	(bad)  
   14002ae95:	(bad)  
   14002ae96:	(bad)  
   14002ae97:	(bad)  
   14002ae98:	(bad)  
   14002ae99:	(bad)  
   14002ae9a:	(bad)  
   14002ae9b:	(bad)  
   14002ae9c:	(bad)  
   14002ae9d:	(bad)  
   14002ae9e:	(bad)  
   14002ae9f:	(bad)  
   14002aea0:	(bad)  
   14002aea1:	(bad)  
   14002aea2:	(bad)  
   14002aea3:	(bad)  
   14002aea4:	(bad)  
   14002aea5:	(bad)  
   14002aea6:	(bad)  
   14002aea7:	(bad)  
   14002aea8:	fdivrp st(6),st
   14002aeaa:	(bad)  
   14002aeac:	push   rsp
   14002aead:	(bad)  
   14002aeae:	rex.XB call QWORD PTR [r10-0x33]
   14002aeb2:	call   QWORD PTR [r10-0x33]
   14002aeb6:	call   QWORD PTR [r10-0x33]
   14002aeba:	call   QWORD PTR [r10-0x33]
   14002aebe:	call   QWORD PTR [r10-0x33]
   14002aec2:	call   QWORD PTR [r10-0x33]
   14002aec6:	call   QWORD PTR [r10-0x33]
   14002aeca:	call   QWORD PTR [r10-0x33]
   14002aece:	call   QWORD PTR [r10-0x33]
   14002aed2:	call   QWORD PTR [r10-0x33]
   14002aed6:	call   QWORD PTR [r10-0x33]
   14002aeda:	call   QWORD PTR [r10-0x33]
   14002aede:	call   QWORD PTR [r10-0x33]
   14002aee2:	call   QWORD PTR [r10-0x33]
   14002aee6:	inc    DWORD PTR [r14-0x8524]
   14002aeed:	(bad)  
   14002aeee:	(bad)  
   14002aeef:	(bad)  
   14002aef0:	(bad)  
   14002aef1:	(bad)  
   14002aef2:	(bad)  
   14002aef3:	(bad)  
   14002aef4:	(bad)  
   14002aef5:	(bad)  
   14002aef6:	(bad)  
   14002aef7:	(bad)  
   14002aef8:	(bad)  
   14002aef9:	(bad)  
   14002aefa:	(bad)  
   14002aefb:	(bad)  
   14002aefc:	(bad)  
   14002aefd:	(bad)  
   14002aefe:	(bad)  
   14002aeff:	(bad)  
   14002af00:	(bad)  
   14002af01:	(bad)  
   14002af02:	(bad)  
   14002af03:	(bad)  
   14002af04:	cld    
   14002af05:	(bad)  
   14002af06:	cld    
   14002af07:	jmp    QWORD PTR [rdx-0x2e]
   14002af0a:	push   rbx
   14002af0b:	call   QWORD PTR [rdx-0x33]
   14002af0e:	call   QWORD PTR [r10-0x33]
   14002af12:	call   QWORD PTR [r10-0x33]
   14002af16:	call   QWORD PTR [r10-0x33]
   14002af1a:	call   QWORD PTR [r10-0x33]
   14002af1e:	call   QWORD PTR [r10-0x33]
   14002af22:	call   QWORD PTR [r10-0x33]
   14002af26:	call   QWORD PTR [r10-0x33]
   14002af2a:	call   QWORD PTR [r10-0x33]
   14002af2e:	jmp    r12
   14002af31:	mul    ecx
   14002af33:	(bad)  
   14002af34:	(bad)  
   14002af35:	(bad)  
   14002af36:	(bad)  
   14002af37:	(bad)  
   14002af38:	(bad)  
   14002af39:	(bad)  
   14002af3a:	(bad)  
   14002af3b:	(bad)  
   14002af3c:	(bad)  
   14002af3d:	(bad)  
   14002af3e:	(bad)  
   14002af3f:	(bad)  
   14002af40:	(bad)  
   14002af41:	(bad)  
   14002af42:	(bad)  
   14002af43:	(bad)  
   14002af44:	(bad)  
   14002af45:	(bad)  
   14002af46:	(bad)  
   14002af47:	jmp    rbp
   14002af49:	mul    edx
   14002af4b:	call   QWORD PTR [rdx-0x33]
   14002af4e:	call   QWORD PTR [r10-0x33]
   14002af52:	call   QWORD PTR [r10-0x33]
   14002af56:	call   QWORD PTR [r10-0x33]
   14002af5a:	call   QWORD PTR [r10-0x33]
   14002af5e:	call   QWORD PTR [r10-0x33]
   14002af62:	call   QWORD PTR [r10-0x33]
   14002af66:	call   QWORD PTR [r10-0x33]
   14002af6a:	call   QWORD PTR [r10-0x33]
   14002af6e:	call   QWORD PTR [r10-0x33]
   14002af72:	call   QWORD PTR [r10-0x33]
   14002af76:	call   QWORD PTR [r10-0x33]
   14002af7a:	call   QWORD PTR [r10-0x33]
   14002af7e:	call   QWORD PTR [r10-0x33]
   14002af82:	call   QWORD PTR [r10-0x33]
   14002af86:	call   QWORD PTR [r10-0x33]
   14002af8a:	call   QWORD PTR [r10-0x33]
   14002af8e:	call   QWORD PTR [r10-0x33]
   14002af92:	call   QWORD PTR [r10-0x33]
   14002af96:	call   QWORD PTR [r10-0x33]
   14002af9a:	call   QWORD PTR [r10-0x33]
   14002af9e:	call   QWORD PTR [r10-0x33]
   14002afa2:	call   QWORD PTR [r10-0x33]
   14002afa6:	call   QWORD PTR [r10-0x33]
   14002afaa:	call   QWORD PTR [r10-0x33]
   14002afae:	call   QWORD PTR [r10-0x33]
   14002afb2:	call   QWORD PTR [r10-0x33]
   14002afb6:	call   QWORD PTR [r10-0x33]
   14002afba:	inc    DWORD PTR [r8]
   14002afbd:	add    BYTE PTR [rax],al
   14002afbf:	cmp    eax,DWORD PTR [rax]
   14002afc1:	add    BYTE PTR [rax],al
   14002afc3:	sbb    al,0x0
   14002afc5:	add    BYTE PTR [rax],al
   14002afc7:	or     al,0x0
   14002afc9:	add    BYTE PTR [rax],al
   14002afcb:	add    eax,0x2000000
	...
   14002b028:	add    BYTE PTR [rax],al
   14002b02a:	add    BYTE PTR [rdx],al
   14002b02c:	add    BYTE PTR [rax],al
   14002b02e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02b034
   14002b034:	add    BYTE PTR [rax],al
   14002b036:	add    BYTE PTR [rax+rax*1],bl
   14002b039:	add    BYTE PTR [rax],al
   14002b03b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002b03e:	call   QWORD PTR [r10-0x33]
   14002b042:	call   QWORD PTR [r10-0x33]
   14002b046:	call   QWORD PTR [r10-0x33]
   14002b04a:	call   QWORD PTR [r10-0x33]
   14002b04e:	call   QWORD PTR [r10-0x33]
   14002b052:	call   QWORD PTR [r10-0x33]
   14002b056:	call   QWORD PTR [r10-0x33]
   14002b05a:	call   QWORD PTR [r10-0x33]
   14002b05e:	call   QWORD PTR [r10-0x33]
   14002b062:	call   QWORD PTR [r10-0x33]
   14002b066:	call   QWORD PTR [r10-0x33]
   14002b06a:	call   QWORD PTR [r10-0x33]
   14002b06e:	call   QWORD PTR [r10-0x33]
   14002b072:	call   QWORD PTR [r10-0x33]
   14002b076:	call   QWORD PTR [r10-0x33]
   14002b07a:	call   QWORD PTR [r10-0x33]
   14002b07e:	call   QWORD PTR [r10-0x33]
   14002b082:	call   QWORD PTR [r10-0x33]
   14002b086:	call   QWORD PTR [r14-0x32]
   14002b08a:	rex.RB (bad) 
   14002b08c:	clc    
   14002b08d:	std    
   14002b08e:	idiv   edi
   14002b090:	(bad)  
   14002b091:	(bad)  
   14002b092:	(bad)  
   14002b093:	(bad)  
   14002b094:	(bad)  
   14002b095:	(bad)  
   14002b096:	(bad)  
   14002b097:	(bad)  
   14002b098:	(bad)  
   14002b099:	(bad)  
   14002b09a:	(bad)  
   14002b09b:	(bad)  
   14002b09c:	(bad)  
   14002b09d:	(bad)  
   14002b09e:	(bad)  
   14002b09f:	(bad)  
   14002b0a0:	(bad)  
   14002b0a1:	(bad)  
   14002b0a2:	(bad)  
   14002b0a3:	(bad)  
   14002b0a4:	(bad)  
   14002b0a5:	(bad)  
   14002b0a6:	(bad)  
   14002b0a7:	call   QWORD PTR [rcx+0x52ff86df]
   14002b0ad:	int    0x41
   14002b0af:	call   QWORD PTR [rdx-0x33]
   14002b0b2:	call   QWORD PTR [r10-0x33]
   14002b0b6:	call   QWORD PTR [r10-0x33]
   14002b0ba:	call   QWORD PTR [r10-0x33]
   14002b0be:	call   QWORD PTR [r10-0x33]
   14002b0c2:	call   QWORD PTR [r10-0x33]
   14002b0c6:	call   QWORD PTR [r10-0x33]
   14002b0ca:	call   QWORD PTR [r10-0x33]
   14002b0ce:	call   QWORD PTR [r10-0x33]
   14002b0d2:	call   QWORD PTR [r10-0x33]
   14002b0d6:	call   QWORD PTR [r10-0x33]
   14002b0da:	call   QWORD PTR [r10-0x33]
   14002b0de:	call   QWORD PTR [r10-0x33]
   14002b0e2:	call   QWORD PTR [r10-0x33]
   14002b0e6:	call   QWORD PTR [r11-0x33]
   14002b0ea:	rex.X jmp rbp
   14002b0ed:	mul    edx
   14002b0ef:	(bad)  
   14002b0f0:	(bad)  
   14002b0f1:	(bad)  
   14002b0f2:	(bad)  
   14002b0f3:	(bad)  
   14002b0f4:	(bad)  
   14002b0f5:	(bad)  
   14002b0f6:	(bad)  
   14002b0f7:	(bad)  
   14002b0f8:	(bad)  
   14002b0f9:	(bad)  
   14002b0fa:	(bad)  
   14002b0fb:	(bad)  
   14002b0fc:	(bad)  
   14002b0fd:	(bad)  
   14002b0fe:	(bad)  
   14002b0ff:	(bad)  
   14002b100:	(bad)  
   14002b101:	(bad)  
   14002b102:	(bad)  
   14002b103:	(bad)  
   14002b104:	(bad)  
   14002b105:	(bad)  
   14002b106:	(bad)  
   14002b107:	call   QWORD PTR [rdx+0x52ff87df]
   14002b10d:	int    0x41
   14002b10f:	call   QWORD PTR [rdx-0x33]
   14002b112:	call   QWORD PTR [r10-0x33]
   14002b116:	call   QWORD PTR [r10-0x33]
   14002b11a:	call   QWORD PTR [r10-0x33]
   14002b11e:	call   QWORD PTR [r10-0x33]
   14002b122:	call   QWORD PTR [r10-0x33]
   14002b126:	call   QWORD PTR [r10-0x33]
   14002b12a:	call   QWORD PTR [r10-0x33]
   14002b12e:	rex.B (bad) 
   14002b130:	jmp    0x14002b12b
   14002b132:	jmp    0x14002b136
   14002b137:	(bad)  
   14002b138:	(bad)  
   14002b139:	(bad)  
   14002b13a:	(bad)  
   14002b13b:	(bad)  
   14002b13c:	(bad)  
   14002b13d:	(bad)  
   14002b13e:	(bad)  
   14002b13f:	(bad)  
   14002b140:	(bad)  
   14002b141:	(bad)  
   14002b142:	(bad)  
   14002b143:	(bad)  
   14002b144:	(bad)  
   14002b145:	(bad)  
   14002b146:	(bad)  
   14002b147:	call   rsi
   14002b149:	repz sar bh,cl
   14002b14c:	push   rdx
   14002b14d:	int    0x41
   14002b14f:	call   QWORD PTR [rdx-0x33]
   14002b152:	call   QWORD PTR [r10-0x33]
   14002b156:	call   QWORD PTR [r10-0x33]
   14002b15a:	call   QWORD PTR [r10-0x33]
   14002b15e:	call   QWORD PTR [r10-0x33]
   14002b162:	call   QWORD PTR [r10-0x33]
   14002b166:	call   QWORD PTR [r10-0x33]
   14002b16a:	call   QWORD PTR [r10-0x33]
   14002b16e:	call   QWORD PTR [r10-0x33]
   14002b172:	call   QWORD PTR [r10-0x33]
   14002b176:	call   QWORD PTR [r10-0x33]
   14002b17a:	call   QWORD PTR [r10-0x33]
   14002b17e:	call   QWORD PTR [r10-0x33]
   14002b182:	call   QWORD PTR [r10-0x33]
   14002b186:	call   QWORD PTR [r10-0x33]
   14002b18a:	call   QWORD PTR [r10-0x33]
   14002b18e:	call   QWORD PTR [r10-0x33]
   14002b192:	call   QWORD PTR [r10-0x33]
   14002b196:	call   QWORD PTR [r10-0x33]
   14002b19a:	call   QWORD PTR [r10-0x33]
   14002b19e:	call   QWORD PTR [r10-0x33]
   14002b1a2:	call   QWORD PTR [r10-0x33]
   14002b1a6:	call   QWORD PTR [r10-0x33]
   14002b1aa:	call   QWORD PTR [r10-0x33]
   14002b1ae:	call   QWORD PTR [r10-0x33]
   14002b1b2:	call   QWORD PTR [r10-0x33]
   14002b1b6:	call   QWORD PTR [r10-0x33]
   14002b1ba:	inc    DWORD PTR [r8]
   14002b1bd:	add    BYTE PTR [rax],al
   14002b1bf:	cmp    eax,DWORD PTR [rax]
   14002b1c1:	add    BYTE PTR [rax],al
   14002b1c3:	sbb    al,0x0
   14002b1c5:	add    BYTE PTR [rax],al
   14002b1c7:	or     al,0x0
   14002b1c9:	add    BYTE PTR [rax],al
   14002b1cb:	add    eax,0x2000000
	...
   14002b228:	add    BYTE PTR [rax],al
   14002b22a:	add    BYTE PTR [rdx],al
   14002b22c:	add    BYTE PTR [rax],al
   14002b22e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02b234
   14002b234:	add    BYTE PTR [rax],al
   14002b236:	add    BYTE PTR [rax+rax*1],bl
   14002b239:	add    BYTE PTR [rax],al
   14002b23b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002b23e:	call   QWORD PTR [r10-0x33]
   14002b242:	call   QWORD PTR [r10-0x33]
   14002b246:	call   QWORD PTR [r10-0x33]
   14002b24a:	call   QWORD PTR [r10-0x33]
   14002b24e:	call   QWORD PTR [r10-0x33]
   14002b252:	call   QWORD PTR [r10-0x33]
   14002b256:	call   QWORD PTR [r10-0x33]
   14002b25a:	call   QWORD PTR [r10-0x33]
   14002b25e:	call   QWORD PTR [r10-0x33]
   14002b262:	call   QWORD PTR [r10-0x33]
   14002b266:	call   QWORD PTR [r10-0x33]
   14002b26a:	call   QWORD PTR [r10-0x33]
   14002b26e:	call   QWORD PTR [r10-0x33]
   14002b272:	call   QWORD PTR [r10-0x33]
   14002b276:	call   QWORD PTR [r10-0x33]
   14002b27a:	call   QWORD PTR [r10-0x33]
   14002b27e:	call   QWORD PTR [r10-0x33]
   14002b282:	call   QWORD PTR [r10-0x33]
   14002b286:	rex.B (bad) 
   14002b288:	jl     0x14002b263
   14002b28a:	outs   dx,DWORD PTR ds:[rsi]
   14002b28b:	(bad)  
   14002b28c:	(bad)  
   14002b28d:	(bad)  
   14002b28e:	(bad)  
   14002b28f:	(bad)  
   14002b290:	(bad)  
   14002b291:	(bad)  
   14002b292:	(bad)  
   14002b293:	(bad)  
   14002b294:	(bad)  
   14002b295:	(bad)  
   14002b296:	(bad)  
   14002b297:	(bad)  
   14002b298:	(bad)  
   14002b299:	(bad)  
   14002b29a:	(bad)  
   14002b29b:	(bad)  
   14002b29c:	(bad)  
   14002b29d:	(bad)  
   14002b29e:	(bad)  
   14002b29f:	(bad)  
   14002b2a0:	(bad)  
   14002b2a1:	(bad)  
   14002b2a2:	(bad)  
   14002b2a3:	push   rbx
   14002b2a5:	sti    
   14002b2a6:	bnd call QWORD PTR [rsi-0x32]
   14002b2aa:	rex.RB call QWORD PTR [r10-0x33]
   14002b2ae:	call   QWORD PTR [r10-0x33]
   14002b2b2:	call   QWORD PTR [r10-0x33]
   14002b2b6:	call   QWORD PTR [r10-0x33]
   14002b2ba:	call   QWORD PTR [r10-0x33]
   14002b2be:	call   QWORD PTR [r10-0x33]
   14002b2c2:	call   QWORD PTR [r10-0x33]
   14002b2c6:	call   QWORD PTR [r10-0x33]
   14002b2ca:	call   QWORD PTR [r10-0x33]
   14002b2ce:	call   QWORD PTR [r10-0x33]
   14002b2d2:	call   QWORD PTR [r10-0x33]
   14002b2d6:	call   QWORD PTR [r10-0x33]
   14002b2da:	call   QWORD PTR [r10-0x33]
   14002b2de:	call   QWORD PTR [r10-0x33]
   14002b2e2:	call   QWORD PTR [r10-0x33]
   14002b2e6:	call   QWORD PTR [r10-0x33]
   14002b2ea:	jmp    QWORD PTR [r10-0x661c]
   14002b2f1:	(bad)  
   14002b2f2:	(bad)  
   14002b2f3:	(bad)  
   14002b2f4:	(bad)  
   14002b2f5:	(bad)  
   14002b2f6:	(bad)  
   14002b2f7:	(bad)  
   14002b2f8:	(bad)  
   14002b2f9:	(bad)  
   14002b2fa:	(bad)  
   14002b2fb:	(bad)  
   14002b2fc:	(bad)  
   14002b2fd:	(bad)  
   14002b2fe:	(bad)  
   14002b2ff:	(bad)  
   14002b300:	(bad)  
   14002b301:	(bad)  
   14002b302:	(bad)  
   14002b303:	(bad)  
   14002b304:	(bad)  
   14002b305:	(bad)  
   14002b306:	(bad)  
   14002b307:	inc    ecx
   14002b309:	in     eax,dx
   14002b30a:	mov    ebx,0x41cd52ff
   14002b30f:	call   QWORD PTR [rdx-0x33]
   14002b312:	call   QWORD PTR [r10-0x33]
   14002b316:	call   QWORD PTR [r10-0x33]
   14002b31a:	call   QWORD PTR [r10-0x33]
   14002b31e:	call   QWORD PTR [r10-0x33]
   14002b322:	call   QWORD PTR [r10-0x33]
   14002b326:	call   QWORD PTR [r10-0x33]
   14002b32a:	call   QWORD PTR [r10-0x33]
   14002b32e:	push   r10
   14002b331:	sti    
   14002b332:	icebp  
   14002b333:	(bad)  
   14002b334:	(bad)  
   14002b335:	(bad)  
   14002b336:	(bad)  
   14002b337:	(bad)  
   14002b338:	(bad)  
   14002b339:	(bad)  
   14002b33a:	(bad)  
   14002b33b:	(bad)  
   14002b33c:	(bad)  
   14002b33d:	(bad)  
   14002b33e:	(bad)  
   14002b33f:	(bad)  
   14002b340:	(bad)  
   14002b341:	(bad)  
   14002b342:	(bad)  
   14002b343:	(bad)  
   14002b344:	(bad)  
   14002b345:	(bad)  
   14002b346:	(bad)  
   14002b347:	dec    esi
   14002b349:	icebp  
   14002b34a:	leave  
   14002b34b:	call   QWORD PTR [rdx-0x33]
   14002b34e:	call   QWORD PTR [r10-0x33]
   14002b352:	call   QWORD PTR [r10-0x33]
   14002b356:	call   QWORD PTR [r10-0x33]
   14002b35a:	call   QWORD PTR [r10-0x33]
   14002b35e:	call   QWORD PTR [r10-0x33]
   14002b362:	call   QWORD PTR [r10-0x33]
   14002b366:	call   QWORD PTR [r10-0x33]
   14002b36a:	call   QWORD PTR [r10-0x33]
   14002b36e:	call   QWORD PTR [r10-0x33]
   14002b372:	call   QWORD PTR [r10-0x33]
   14002b376:	call   QWORD PTR [r10-0x33]
   14002b37a:	call   QWORD PTR [r10-0x33]
   14002b37e:	call   QWORD PTR [r10-0x33]
   14002b382:	call   QWORD PTR [r10-0x33]
   14002b386:	call   QWORD PTR [r10-0x33]
   14002b38a:	call   QWORD PTR [r10-0x33]
   14002b38e:	call   QWORD PTR [r10-0x33]
   14002b392:	call   QWORD PTR [r10-0x33]
   14002b396:	call   QWORD PTR [r10-0x33]
   14002b39a:	call   QWORD PTR [r10-0x33]
   14002b39e:	call   QWORD PTR [r10-0x33]
   14002b3a2:	call   QWORD PTR [r10-0x33]
   14002b3a6:	call   QWORD PTR [r10-0x33]
   14002b3aa:	call   QWORD PTR [r10-0x33]
   14002b3ae:	call   QWORD PTR [r10-0x33]
   14002b3b2:	call   QWORD PTR [r10-0x33]
   14002b3b6:	call   QWORD PTR [r10-0x33]
   14002b3ba:	inc    DWORD PTR [r8]
   14002b3bd:	add    BYTE PTR [rax],al
   14002b3bf:	cmp    eax,DWORD PTR [rax]
   14002b3c1:	add    BYTE PTR [rax],al
   14002b3c3:	sbb    al,0x0
   14002b3c5:	add    BYTE PTR [rax],al
   14002b3c7:	or     al,0x0
   14002b3c9:	add    BYTE PTR [rax],al
   14002b3cb:	add    eax,0x2000000
	...
   14002b428:	add    BYTE PTR [rax],al
   14002b42a:	add    BYTE PTR [rdx],al
   14002b42c:	add    BYTE PTR [rax],al
   14002b42e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02b434
   14002b434:	add    BYTE PTR [rax],al
   14002b436:	add    BYTE PTR [rax+rax*1],bl
   14002b439:	add    BYTE PTR [rax],al
   14002b43b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002b43e:	call   QWORD PTR [r10-0x33]
   14002b442:	call   QWORD PTR [r10-0x33]
   14002b446:	call   QWORD PTR [r10-0x33]
   14002b44a:	call   QWORD PTR [r10-0x33]
   14002b44e:	call   QWORD PTR [r10-0x33]
   14002b452:	call   QWORD PTR [r10-0x33]
   14002b456:	call   QWORD PTR [r10-0x33]
   14002b45a:	call   QWORD PTR [r10-0x33]
   14002b45e:	call   QWORD PTR [r10-0x33]
   14002b462:	call   QWORD PTR [r10-0x33]
   14002b466:	call   QWORD PTR [r10-0x33]
   14002b46a:	call   QWORD PTR [r10-0x33]
   14002b46e:	call   QWORD PTR [r10-0x33]
   14002b472:	call   QWORD PTR [r10-0x33]
   14002b476:	call   QWORD PTR [r10-0x33]
   14002b47a:	call   QWORD PTR [r10-0x33]
   14002b47e:	call   QWORD PTR [r10-0x33]
   14002b482:	call   QWORD PTR [r10-0x33]
   14002b486:	call   FWORD PTR [r10+riz*8-0x6e]
   14002b48e:	(bad)  
   14002b48f:	(bad)  
   14002b490:	(bad)  
   14002b491:	(bad)  
   14002b492:	(bad)  
   14002b493:	(bad)  
   14002b494:	(bad)  
   14002b495:	(bad)  
   14002b496:	(bad)  
   14002b497:	(bad)  
   14002b498:	(bad)  
   14002b499:	(bad)  
   14002b49a:	(bad)  
   14002b49b:	(bad)  
   14002b49c:	(bad)  
   14002b49d:	(bad)  
   14002b49e:	(bad)  
   14002b49f:	(bad)  
   14002b4a0:	(bad)  
   14002b4a1:	(bad)  
   14002b4a2:	(bad)  
   14002b4a3:	dec    ecx
   14002b4a5:	lock (bad) 
   14002b4a7:	call   QWORD PTR [rdx-0x33]
   14002b4aa:	call   QWORD PTR [r10-0x33]
   14002b4ae:	call   QWORD PTR [r10-0x33]
   14002b4b2:	call   QWORD PTR [r10-0x33]
   14002b4b6:	call   QWORD PTR [r10-0x33]
   14002b4ba:	call   QWORD PTR [r10-0x33]
   14002b4be:	call   QWORD PTR [r10-0x33]
   14002b4c2:	call   QWORD PTR [r10-0x33]
   14002b4c6:	call   QWORD PTR [r10-0x33]
   14002b4ca:	call   QWORD PTR [r10-0x33]
   14002b4ce:	call   QWORD PTR [r10-0x33]
   14002b4d2:	call   QWORD PTR [r10-0x33]
   14002b4d6:	call   QWORD PTR [r10-0x33]
   14002b4da:	call   QWORD PTR [r10-0x33]
   14002b4de:	call   QWORD PTR [r10-0x33]
   14002b4e2:	call   QWORD PTR [r10-0x33]
   14002b4e6:	call   QWORD PTR [r10-0x33]
   14002b4ea:	push   QWORD PTR [r14-0x29]
   14002b4ee:	push   0xffffffffffffffff
   14002b4f3:	(bad)  
   14002b4f4:	(bad)  
   14002b4f5:	(bad)  
   14002b4f6:	(bad)  
   14002b4f7:	(bad)  
   14002b4f8:	(bad)  
   14002b4f9:	(bad)  
   14002b4fa:	(bad)  
   14002b4fb:	(bad)  
   14002b4fc:	(bad)  
   14002b4fd:	(bad)  
   14002b4fe:	(bad)  
   14002b4ff:	(bad)  
   14002b500:	(bad)  
   14002b501:	(bad)  
   14002b502:	(bad)  
   14002b503:	(bad)  
   14002b504:	(bad)  
   14002b505:	(bad)  
   14002b506:	(bad)  
   14002b507:	jmp    rsi
   14002b509:	clc    
   14002b50a:	jrcxz  0x14002b50b
   14002b50c:	push   rdx
   14002b50d:	int    0x41
   14002b50f:	call   QWORD PTR [rdx-0x33]
   14002b512:	call   QWORD PTR [r10-0x33]
   14002b516:	call   QWORD PTR [r10-0x33]
   14002b51a:	call   QWORD PTR [r10-0x33]
   14002b51e:	call   QWORD PTR [r10-0x33]
   14002b522:	call   QWORD PTR [r10-0x33]
   14002b526:	call   QWORD PTR [r10-0x33]
   14002b52a:	call   QWORD PTR [r10-0x33]
   14002b52e:	push   r13
   14002b531:	cld    
   14002b532:	cmc    
   14002b533:	(bad)  
   14002b534:	(bad)  
   14002b535:	(bad)  
   14002b536:	(bad)  
   14002b537:	(bad)  
   14002b538:	(bad)  
   14002b539:	(bad)  
   14002b53a:	(bad)  
   14002b53b:	(bad)  
   14002b53c:	(bad)  
   14002b53d:	(bad)  
   14002b53e:	(bad)  
   14002b53f:	(bad)  
   14002b540:	(bad)  
   14002b541:	(bad)  
   14002b542:	(bad)  
   14002b543:	(bad)  
   14002b544:	(bad)  
   14002b545:	(bad)  
   14002b546:	(bad)  
   14002b547:	inc    edi
   14002b549:	out    dx,eax
   14002b54a:	sar    edi,0x52
   14002b54d:	int    0x41
   14002b54f:	call   QWORD PTR [rdx-0x33]
   14002b552:	call   QWORD PTR [r10-0x33]
   14002b556:	call   QWORD PTR [r10-0x33]
   14002b55a:	call   QWORD PTR [r10-0x33]
   14002b55e:	call   QWORD PTR [r10-0x33]
   14002b562:	call   QWORD PTR [r10-0x33]
   14002b566:	call   QWORD PTR [r10-0x33]
   14002b56a:	call   QWORD PTR [r10-0x33]
   14002b56e:	call   QWORD PTR [r10-0x33]
   14002b572:	call   QWORD PTR [r10-0x33]
   14002b576:	call   QWORD PTR [r10-0x33]
   14002b57a:	call   QWORD PTR [r10-0x33]
   14002b57e:	call   QWORD PTR [r10-0x33]
   14002b582:	call   QWORD PTR [r10-0x33]
   14002b586:	call   QWORD PTR [r10-0x33]
   14002b58a:	call   QWORD PTR [r10-0x33]
   14002b58e:	call   QWORD PTR [r10-0x33]
   14002b592:	call   QWORD PTR [r10-0x33]
   14002b596:	call   QWORD PTR [r10-0x33]
   14002b59a:	call   QWORD PTR [r10-0x33]
   14002b59e:	call   QWORD PTR [r10-0x33]
   14002b5a2:	call   QWORD PTR [r10-0x33]
   14002b5a6:	call   QWORD PTR [r10-0x33]
   14002b5aa:	call   QWORD PTR [r10-0x33]
   14002b5ae:	call   QWORD PTR [r10-0x33]
   14002b5b2:	call   QWORD PTR [r10-0x33]
   14002b5b6:	call   QWORD PTR [r10-0x33]
   14002b5ba:	inc    DWORD PTR [r8]
   14002b5bd:	add    BYTE PTR [rax],al
   14002b5bf:	cmp    eax,DWORD PTR [rax]
   14002b5c1:	add    BYTE PTR [rax],al
   14002b5c3:	sbb    al,0x0
   14002b5c5:	add    BYTE PTR [rax],al
   14002b5c7:	or     al,0x0
   14002b5c9:	add    BYTE PTR [rax],al
   14002b5cb:	add    eax,0x2000000
	...
   14002b628:	add    BYTE PTR [rax],al
   14002b62a:	add    BYTE PTR [rdx],al
   14002b62c:	add    BYTE PTR [rax],al
   14002b62e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02b634
   14002b634:	add    BYTE PTR [rax],al
   14002b636:	add    BYTE PTR [rax+rax*1],bl
   14002b639:	add    BYTE PTR [rax],al
   14002b63b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002b63e:	call   QWORD PTR [r10-0x33]
   14002b642:	call   QWORD PTR [r10-0x33]
   14002b646:	call   QWORD PTR [r10-0x33]
   14002b64a:	call   QWORD PTR [r10-0x33]
   14002b64e:	call   QWORD PTR [r10-0x33]
   14002b652:	call   QWORD PTR [r10-0x33]
   14002b656:	call   QWORD PTR [r10-0x33]
   14002b65a:	call   QWORD PTR [r10-0x33]
   14002b65e:	call   QWORD PTR [r10-0x33]
   14002b662:	call   QWORD PTR [r10-0x33]
   14002b666:	call   QWORD PTR [r10-0x33]
   14002b66a:	call   QWORD PTR [r10-0x33]
   14002b66e:	call   QWORD PTR [r10-0x33]
   14002b672:	call   QWORD PTR [r10-0x33]
   14002b676:	call   QWORD PTR [r10-0x33]
   14002b67a:	call   QWORD PTR [r10-0x33]
   14002b67e:	call   QWORD PTR [r10-0x33]
   14002b682:	call   QWORD PTR [r10-0x33]
   14002b686:	rex.B (bad) 
   14002b688:	mov    eax,0xffffb1ea
   14002b68d:	(bad)  
   14002b68e:	(bad)  
   14002b68f:	(bad)  
   14002b690:	(bad)  
   14002b691:	(bad)  
   14002b692:	(bad)  
   14002b693:	(bad)  
   14002b694:	(bad)  
   14002b695:	(bad)  
   14002b696:	(bad)  
   14002b697:	(bad)  
   14002b698:	(bad)  
   14002b699:	(bad)  
   14002b69a:	(bad)  
   14002b69b:	(bad)  
   14002b69c:	(bad)  
   14002b69d:	(bad)  
   14002b69e:	(bad)  
   14002b69f:	(bad)  
   14002b6a0:	(bad)  
   14002b6a1:	(bad)  
   14002b6a2:	(bad)  
   14002b6a3:	jmp    QWORD PTR [rax+0x52ff97e4]
   14002b6a9:	int    0x41
   14002b6ab:	call   QWORD PTR [rdx-0x33]
   14002b6ae:	call   QWORD PTR [r10-0x33]
   14002b6b2:	call   QWORD PTR [r10-0x33]
   14002b6b6:	call   QWORD PTR [r10-0x33]
   14002b6ba:	call   QWORD PTR [r10-0x33]
   14002b6be:	call   QWORD PTR [r10-0x33]
   14002b6c2:	call   QWORD PTR [r10-0x33]
   14002b6c6:	call   QWORD PTR [r10-0x33]
   14002b6ca:	call   QWORD PTR [r10-0x33]
   14002b6ce:	call   QWORD PTR [r10-0x33]
   14002b6d2:	call   QWORD PTR [r10-0x33]
   14002b6d6:	call   QWORD PTR [r10-0x33]
   14002b6da:	call   QWORD PTR [r10-0x33]
   14002b6de:	call   QWORD PTR [r10-0x33]
   14002b6e2:	call   QWORD PTR [r10-0x33]
   14002b6e6:	call   QWORD PTR [r10-0x33]
   14002b6ea:	call   QWORD PTR [r13-0x32]
   14002b6ee:	rex.R push rsi
   14002b6f1:	cld    
   14002b6f2:	cmc    
   14002b6f3:	(bad)  
   14002b6f4:	(bad)  
   14002b6f5:	(bad)  
   14002b6f6:	(bad)  
   14002b6f7:	(bad)  
   14002b6f8:	(bad)  
   14002b6f9:	(bad)  
   14002b6fa:	(bad)  
   14002b6fb:	(bad)  
   14002b6fc:	(bad)  
   14002b6fd:	(bad)  
   14002b6fe:	(bad)  
   14002b6ff:	(bad)  
   14002b700:	(bad)  
   14002b701:	(bad)  
   14002b702:	(bad)  
   14002b703:	(bad)  
   14002b704:	(bad)  
   14002b705:	(bad)  
   14002b706:	(bad)  
   14002b707:	(bad)  
   14002b708:	(bad)  
   14002b709:	(bad)  
   14002b70a:	(bad)  
   14002b70b:	call   FWORD PTR [rcx-0x31]
   14002b70e:	rex.WB call QWORD PTR [r10-0x33]
   14002b712:	call   QWORD PTR [r10-0x33]
   14002b716:	call   QWORD PTR [r10-0x33]
   14002b71a:	call   QWORD PTR [r10-0x33]
   14002b71e:	call   QWORD PTR [r10-0x33]
   14002b722:	call   QWORD PTR [r10-0x33]
   14002b726:	call   QWORD PTR [r10-0x33]
   14002b72a:	call   QWORD PTR [r10-0x33]
   14002b72e:	push   r13
   14002b731:	cld    
   14002b732:	cmc    
   14002b733:	(bad)  
   14002b734:	(bad)  
   14002b735:	(bad)  
   14002b736:	(bad)  
   14002b737:	(bad)  
   14002b738:	(bad)  
   14002b739:	(bad)  
   14002b73a:	(bad)  
   14002b73b:	(bad)  
   14002b73c:	(bad)  
   14002b73d:	(bad)  
   14002b73e:	(bad)  
   14002b73f:	(bad)  
   14002b740:	(bad)  
   14002b741:	(bad)  
   14002b742:	(bad)  
   14002b743:	(bad)  
   14002b744:	(bad)  
   14002b745:	(bad)  
   14002b746:	(bad)  
   14002b747:	inc    ebp
   14002b749:	out    dx,al
   14002b74a:	mov    edi,0x41cd52ff
   14002b74f:	call   QWORD PTR [rdx-0x33]
   14002b752:	call   QWORD PTR [r10-0x33]
   14002b756:	call   QWORD PTR [r10-0x33]
   14002b75a:	call   QWORD PTR [r10-0x33]
   14002b75e:	call   QWORD PTR [r10-0x33]
   14002b762:	call   QWORD PTR [r10-0x33]
   14002b766:	call   QWORD PTR [r10-0x33]
   14002b76a:	call   QWORD PTR [r10-0x33]
   14002b76e:	call   QWORD PTR [r10-0x33]
   14002b772:	call   QWORD PTR [r10-0x33]
   14002b776:	call   QWORD PTR [r10-0x33]
   14002b77a:	call   QWORD PTR [r10-0x33]
   14002b77e:	call   QWORD PTR [r10-0x33]
   14002b782:	call   QWORD PTR [r10-0x33]
   14002b786:	call   QWORD PTR [r10-0x33]
   14002b78a:	call   QWORD PTR [r10-0x33]
   14002b78e:	call   QWORD PTR [r10-0x33]
   14002b792:	call   QWORD PTR [r10-0x33]
   14002b796:	call   QWORD PTR [r10-0x33]
   14002b79a:	call   QWORD PTR [r10-0x33]
   14002b79e:	call   QWORD PTR [r10-0x33]
   14002b7a2:	call   QWORD PTR [r10-0x33]
   14002b7a6:	call   QWORD PTR [r10-0x33]
   14002b7aa:	call   QWORD PTR [r10-0x33]
   14002b7ae:	call   QWORD PTR [r10-0x33]
   14002b7b2:	call   QWORD PTR [r10-0x33]
   14002b7b6:	call   QWORD PTR [r10-0x33]
   14002b7ba:	inc    DWORD PTR [r8]
   14002b7bd:	add    BYTE PTR [rax],al
   14002b7bf:	cmp    eax,DWORD PTR [rax]
   14002b7c1:	add    BYTE PTR [rax],al
   14002b7c3:	sbb    al,0x0
   14002b7c5:	add    BYTE PTR [rax],al
   14002b7c7:	or     al,0x0
   14002b7c9:	add    BYTE PTR [rax],al
   14002b7cb:	add    eax,0x2000000
	...
   14002b828:	add    BYTE PTR [rax],al
   14002b82a:	add    BYTE PTR [rdx],al
   14002b82c:	add    BYTE PTR [rax],al
   14002b82e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02b834
   14002b834:	add    BYTE PTR [rax],al
   14002b836:	add    BYTE PTR [rax+rax*1],bl
   14002b839:	add    BYTE PTR [rax],al
   14002b83b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002b83e:	call   QWORD PTR [r10-0x33]
   14002b842:	call   QWORD PTR [r10-0x33]
   14002b846:	call   QWORD PTR [r10-0x33]
   14002b84a:	call   QWORD PTR [r10-0x33]
   14002b84e:	call   QWORD PTR [r10-0x33]
   14002b852:	call   QWORD PTR [r10-0x33]
   14002b856:	call   QWORD PTR [r10-0x33]
   14002b85a:	call   QWORD PTR [r10-0x33]
   14002b85e:	call   QWORD PTR [r10-0x33]
   14002b862:	call   QWORD PTR [r10-0x33]
   14002b866:	call   QWORD PTR [r10-0x33]
   14002b86a:	call   QWORD PTR [r10-0x33]
   14002b86e:	call   QWORD PTR [r10-0x33]
   14002b872:	call   QWORD PTR [r10-0x33]
   14002b876:	call   QWORD PTR [r10-0x33]
   14002b87a:	call   QWORD PTR [r10-0x33]
   14002b87e:	call   QWORD PTR [r10-0x33]
   14002b882:	call   QWORD PTR [r10-0x33]
   14002b886:	call   r11
   14002b889:	repnz iret 
   14002b88b:	(bad)  
   14002b88c:	(bad)  
   14002b88d:	(bad)  
   14002b88e:	(bad)  
   14002b88f:	(bad)  
   14002b890:	(bad)  
   14002b891:	(bad)  
   14002b892:	(bad)  
   14002b893:	(bad)  
   14002b894:	(bad)  
   14002b895:	(bad)  
   14002b896:	(bad)  
   14002b897:	(bad)  
   14002b898:	(bad)  
   14002b899:	(bad)  
   14002b89a:	(bad)  
   14002b89b:	(bad)  
   14002b89c:	(bad)  
   14002b89d:	(bad)  
   14002b89e:	(bad)  
   14002b89f:	(bad)  
   14002b8a0:	(bad)  
   14002b8a1:	(bad)  
   14002b8a2:	(bad)  
   14002b8a3:	(bad)  
   14002b8a4:	jle    0x14002b880
   14002b8a6:	jno    0x14002b8a7
   14002b8a8:	push   rdx
   14002b8a9:	int    0x41
   14002b8ab:	call   QWORD PTR [rdx-0x33]
   14002b8ae:	call   QWORD PTR [r10-0x33]
   14002b8b2:	call   QWORD PTR [r10-0x33]
   14002b8b6:	call   QWORD PTR [r10-0x33]
   14002b8ba:	call   QWORD PTR [r10-0x33]
   14002b8be:	call   QWORD PTR [r10-0x33]
   14002b8c2:	call   QWORD PTR [r10-0x33]
   14002b8c6:	call   QWORD PTR [r10-0x33]
   14002b8ca:	call   QWORD PTR [r10-0x33]
   14002b8ce:	call   QWORD PTR [r10-0x33]
   14002b8d2:	call   QWORD PTR [r10-0x33]
   14002b8d6:	call   QWORD PTR [r10-0x33]
   14002b8da:	call   QWORD PTR [r10-0x33]
   14002b8de:	call   QWORD PTR [r10-0x33]
   14002b8e2:	call   QWORD PTR [r10-0x33]
   14002b8e6:	call   QWORD PTR [r10-0x33]
   14002b8ea:	call   QWORD PTR [r10-0x33]
   14002b8ee:	rex.B (bad) 
   14002b8f0:	fxtract 
   14002b8f2:	(bad)  
   14002b8f3:	(bad)  
   14002b8f4:	(bad)  
   14002b8f5:	(bad)  
   14002b8f6:	(bad)  
   14002b8f7:	(bad)  
   14002b8f8:	(bad)  
   14002b8f9:	(bad)  
   14002b8fa:	(bad)  
   14002b8fb:	(bad)  
   14002b8fc:	(bad)  
   14002b8fd:	(bad)  
   14002b8fe:	(bad)  
   14002b8ff:	(bad)  
   14002b900:	(bad)  
   14002b901:	(bad)  
   14002b902:	(bad)  
   14002b903:	(bad)  
   14002b904:	(bad)  
   14002b905:	(bad)  
   14002b906:	(bad)  
   14002b907:	(bad)  
   14002b908:	(bad)  
   14002b909:	(bad)  
   14002b90a:	(bad)  
   14002b90b:	push   QWORD PTR [rdi+rdx*8+0x66]
   14002b90f:	call   QWORD PTR [rdx-0x33]
   14002b912:	call   QWORD PTR [r10-0x33]
   14002b916:	call   QWORD PTR [r10-0x33]
   14002b91a:	call   QWORD PTR [r10-0x33]
   14002b91e:	call   QWORD PTR [r10-0x33]
   14002b922:	call   QWORD PTR [r10-0x33]
   14002b926:	call   QWORD PTR [r10-0x33]
   14002b92a:	call   QWORD PTR [r10-0x33]
   14002b92e:	push   r13
   14002b931:	cld    
   14002b932:	cmc    
   14002b933:	(bad)  
   14002b934:	(bad)  
   14002b935:	(bad)  
   14002b936:	(bad)  
   14002b937:	(bad)  
   14002b938:	(bad)  
   14002b939:	(bad)  
   14002b93a:	(bad)  
   14002b93b:	(bad)  
   14002b93c:	(bad)  
   14002b93d:	(bad)  
   14002b93e:	(bad)  
   14002b93f:	(bad)  
   14002b940:	(bad)  
   14002b941:	(bad)  
   14002b942:	(bad)  
   14002b943:	(bad)  
   14002b944:	(bad)  
   14002b945:	(bad)  
   14002b946:	(bad)  
   14002b947:	inc    ebp
   14002b949:	out    dx,al
   14002b94a:	mov    edi,0x41cd52ff
   14002b94f:	call   QWORD PTR [rdx-0x33]
   14002b952:	call   QWORD PTR [r10-0x33]
   14002b956:	call   QWORD PTR [r10-0x33]
   14002b95a:	call   QWORD PTR [r10-0x33]
   14002b95e:	call   QWORD PTR [r10-0x33]
   14002b962:	call   QWORD PTR [r10-0x33]
   14002b966:	call   QWORD PTR [r10-0x33]
   14002b96a:	call   QWORD PTR [r10-0x33]
   14002b96e:	call   QWORD PTR [r10-0x33]
   14002b972:	call   QWORD PTR [r10-0x33]
   14002b976:	call   QWORD PTR [r10-0x33]
   14002b97a:	call   QWORD PTR [r10-0x33]
   14002b97e:	call   QWORD PTR [r10-0x33]
   14002b982:	call   QWORD PTR [r10-0x33]
   14002b986:	call   QWORD PTR [r10-0x33]
   14002b98a:	call   QWORD PTR [r10-0x33]
   14002b98e:	call   QWORD PTR [r10-0x33]
   14002b992:	call   QWORD PTR [r10-0x33]
   14002b996:	call   QWORD PTR [r10-0x33]
   14002b99a:	call   QWORD PTR [r10-0x33]
   14002b99e:	call   QWORD PTR [r10-0x33]
   14002b9a2:	call   QWORD PTR [r10-0x33]
   14002b9a6:	call   QWORD PTR [r10-0x33]
   14002b9aa:	call   QWORD PTR [r10-0x33]
   14002b9ae:	call   QWORD PTR [r10-0x33]
   14002b9b2:	call   QWORD PTR [r10-0x33]
   14002b9b6:	call   QWORD PTR [r10-0x33]
   14002b9ba:	inc    DWORD PTR [r8]
   14002b9bd:	add    BYTE PTR [rax],al
   14002b9bf:	cmp    eax,DWORD PTR [rax]
   14002b9c1:	add    BYTE PTR [rax],al
   14002b9c3:	sbb    al,0x0
   14002b9c5:	add    BYTE PTR [rax],al
   14002b9c7:	or     al,0x0
   14002b9c9:	add    BYTE PTR [rax],al
   14002b9cb:	add    eax,0x2000000
	...
   14002ba28:	add    BYTE PTR [rax],al
   14002ba2a:	add    BYTE PTR [rdx],al
   14002ba2c:	add    BYTE PTR [rax],al
   14002ba2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02ba34
   14002ba34:	add    BYTE PTR [rax],al
   14002ba36:	add    BYTE PTR [rax+rax*1],bl
   14002ba39:	add    BYTE PTR [rax],al
   14002ba3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002ba3e:	call   QWORD PTR [r10-0x33]
   14002ba42:	call   QWORD PTR [r10-0x33]
   14002ba46:	call   QWORD PTR [r10-0x33]
   14002ba4a:	call   QWORD PTR [r10-0x33]
   14002ba4e:	call   QWORD PTR [r10-0x33]
   14002ba52:	call   QWORD PTR [r10-0x33]
   14002ba56:	call   QWORD PTR [r10-0x33]
   14002ba5a:	call   QWORD PTR [r10-0x33]
   14002ba5e:	call   QWORD PTR [r10-0x33]
   14002ba62:	call   QWORD PTR [r10-0x33]
   14002ba66:	call   QWORD PTR [r10-0x33]
   14002ba6a:	call   QWORD PTR [r10-0x33]
   14002ba6e:	call   QWORD PTR [r10-0x33]
   14002ba72:	call   QWORD PTR [r10-0x33]
   14002ba76:	call   QWORD PTR [r10-0x33]
   14002ba7a:	call   QWORD PTR [r10-0x33]
   14002ba7e:	call   QWORD PTR [r10-0x33]
   14002ba82:	call   QWORD PTR [r10-0x33]
   14002ba86:	rex.B (bad) 
   14002ba88:	out    dx,eax
   14002ba89:	cli    
   14002ba8a:	in     eax,dx
   14002ba8b:	(bad)  
   14002ba8c:	(bad)  
   14002ba8d:	(bad)  
   14002ba8e:	(bad)  
   14002ba8f:	(bad)  
   14002ba90:	(bad)  
   14002ba91:	(bad)  
   14002ba92:	(bad)  
   14002ba93:	(bad)  
   14002ba94:	(bad)  
   14002ba95:	(bad)  
   14002ba96:	(bad)  
   14002ba97:	(bad)  
   14002ba98:	(bad)  
   14002ba99:	(bad)  
   14002ba9a:	(bad)  
   14002ba9b:	(bad)  
   14002ba9c:	(bad)  
   14002ba9d:	(bad)  
   14002ba9e:	(bad)  
   14002ba9f:	(bad)  
   14002baa0:	(bad)  
   14002baa1:	(bad)  
   14002baa2:	(bad)  
   14002baa3:	jmp    FWORD PTR [rcx-0x2c]
   14002baa6:	pop    rdx
   14002baa7:	call   QWORD PTR [rdx-0x33]
   14002baaa:	call   QWORD PTR [r10-0x33]
   14002baae:	call   QWORD PTR [r10-0x33]
   14002bab2:	call   QWORD PTR [r10-0x33]
   14002bab6:	call   QWORD PTR [r10-0x33]
   14002baba:	call   QWORD PTR [r10-0x33]
   14002babe:	call   QWORD PTR [r10-0x33]
   14002bac2:	call   QWORD PTR [r10-0x33]
   14002bac6:	call   QWORD PTR [r10-0x33]
   14002baca:	call   QWORD PTR [r10-0x33]
   14002bace:	call   QWORD PTR [r10-0x33]
   14002bad2:	call   QWORD PTR [r10-0x33]
   14002bad6:	call   QWORD PTR [r10-0x33]
   14002bada:	call   QWORD PTR [r10-0x33]
   14002bade:	call   QWORD PTR [r10-0x33]
   14002bae2:	call   QWORD PTR [r10-0x33]
   14002bae6:	call   QWORD PTR [r10-0x33]
   14002baea:	call   QWORD PTR [r10-0x33]
   14002baee:	inc    r13d
   14002baf1:	out    dx,al
   14002baf2:	sar    bh,0xff
   14002baf5:	(bad)  
   14002baf6:	(bad)  
   14002baf7:	(bad)  
   14002baf8:	(bad)  
   14002baf9:	(bad)  
   14002bafa:	(bad)  
   14002bafb:	(bad)  
   14002bafc:	(bad)  
   14002bafd:	(bad)  
   14002bafe:	(bad)  
   14002baff:	(bad)  
   14002bb00:	(bad)  
   14002bb01:	(bad)  
   14002bb02:	(bad)  
   14002bb03:	(bad)  
   14002bb04:	(bad)  
   14002bb05:	(bad)  
   14002bb06:	(bad)  
   14002bb07:	(bad)  
   14002bb08:	(bad)  
   14002bb09:	(bad)  
   14002bb0a:	(bad)  
   14002bb0b:	inc    DWORD PTR [rsi+0x52ff7adc]
   14002bb11:	int    0x41
   14002bb13:	call   QWORD PTR [rdx-0x33]
   14002bb16:	call   QWORD PTR [r10-0x33]
   14002bb1a:	call   QWORD PTR [r10-0x33]
   14002bb1e:	call   QWORD PTR [r10-0x33]
   14002bb22:	call   QWORD PTR [r10-0x33]
   14002bb26:	call   QWORD PTR [r10-0x33]
   14002bb2a:	call   QWORD PTR [r10-0x33]
   14002bb2e:	push   r13
   14002bb31:	cld    
   14002bb32:	cmc    
   14002bb33:	(bad)  
   14002bb34:	(bad)  
   14002bb35:	(bad)  
   14002bb36:	(bad)  
   14002bb37:	(bad)  
   14002bb38:	(bad)  
   14002bb39:	(bad)  
   14002bb3a:	(bad)  
   14002bb3b:	(bad)  
   14002bb3c:	(bad)  
   14002bb3d:	(bad)  
   14002bb3e:	(bad)  
   14002bb3f:	(bad)  
   14002bb40:	(bad)  
   14002bb41:	(bad)  
   14002bb42:	(bad)  
   14002bb43:	(bad)  
   14002bb44:	(bad)  
   14002bb45:	(bad)  
   14002bb46:	(bad)  
   14002bb47:	inc    ebp
   14002bb49:	out    dx,al
   14002bb4a:	mov    edi,0x41cd52ff
   14002bb4f:	call   QWORD PTR [rdx-0x33]
   14002bb52:	call   QWORD PTR [r10-0x33]
   14002bb56:	call   QWORD PTR [r10-0x33]
   14002bb5a:	call   QWORD PTR [r10-0x33]
   14002bb5e:	call   QWORD PTR [r10-0x33]
   14002bb62:	call   QWORD PTR [r10-0x33]
   14002bb66:	call   QWORD PTR [r10-0x33]
   14002bb6a:	call   QWORD PTR [r10-0x33]
   14002bb6e:	call   QWORD PTR [r10-0x33]
   14002bb72:	call   QWORD PTR [r10-0x33]
   14002bb76:	call   QWORD PTR [r10-0x33]
   14002bb7a:	call   QWORD PTR [r10-0x33]
   14002bb7e:	call   QWORD PTR [r10-0x33]
   14002bb82:	call   QWORD PTR [r10-0x33]
   14002bb86:	call   QWORD PTR [r10-0x33]
   14002bb8a:	call   QWORD PTR [r10-0x33]
   14002bb8e:	call   QWORD PTR [r10-0x33]
   14002bb92:	call   QWORD PTR [r10-0x33]
   14002bb96:	call   QWORD PTR [r10-0x33]
   14002bb9a:	call   QWORD PTR [r10-0x33]
   14002bb9e:	call   QWORD PTR [r10-0x33]
   14002bba2:	call   QWORD PTR [r10-0x33]
   14002bba6:	call   QWORD PTR [r10-0x33]
   14002bbaa:	call   QWORD PTR [r10-0x33]
   14002bbae:	call   QWORD PTR [r10-0x33]
   14002bbb2:	call   QWORD PTR [r10-0x33]
   14002bbb6:	call   QWORD PTR [r10-0x33]
   14002bbba:	inc    DWORD PTR [r8]
   14002bbbd:	add    BYTE PTR [rax],al
   14002bbbf:	cmp    eax,DWORD PTR [rax]
   14002bbc1:	add    BYTE PTR [rax],al
   14002bbc3:	sbb    al,0x0
   14002bbc5:	add    BYTE PTR [rax],al
   14002bbc7:	or     al,0x0
   14002bbc9:	add    BYTE PTR [rax],al
   14002bbcb:	add    eax,0x2000000
	...
   14002bc28:	add    BYTE PTR [rax],al
   14002bc2a:	add    BYTE PTR [rdx],al
   14002bc2c:	add    BYTE PTR [rax],al
   14002bc2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02bc34
   14002bc34:	add    BYTE PTR [rax],al
   14002bc36:	add    BYTE PTR [rax+rax*1],bl
   14002bc39:	add    BYTE PTR [rax],al
   14002bc3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002bc3e:	call   QWORD PTR [r10-0x33]
   14002bc42:	call   QWORD PTR [r10-0x33]
   14002bc46:	call   QWORD PTR [r10-0x33]
   14002bc4a:	call   QWORD PTR [r10-0x33]
   14002bc4e:	call   QWORD PTR [r10-0x33]
   14002bc52:	call   QWORD PTR [r10-0x33]
   14002bc56:	call   QWORD PTR [r10-0x33]
   14002bc5a:	call   QWORD PTR [r10-0x33]
   14002bc5e:	call   QWORD PTR [r10-0x33]
   14002bc62:	call   QWORD PTR [r10-0x33]
   14002bc66:	call   QWORD PTR [r10-0x33]
   14002bc6a:	call   QWORD PTR [r10-0x33]
   14002bc6e:	call   QWORD PTR [r10-0x33]
   14002bc72:	call   QWORD PTR [r10-0x33]
   14002bc76:	call   QWORD PTR [r10-0x33]
   14002bc7a:	call   QWORD PTR [r10-0x33]
   14002bc7e:	call   QWORD PTR [r10-0x33]
   14002bc82:	call   QWORD PTR [r14+rcx*8+0x43]
   14002bc87:	(bad)  
   14002bc88:	(bad)  
   14002bc89:	(bad)  
   14002bc8a:	(bad)  
   14002bc8b:	(bad)  
   14002bc8c:	(bad)  
   14002bc8d:	(bad)  
   14002bc8e:	(bad)  
   14002bc8f:	(bad)  
   14002bc90:	(bad)  
   14002bc91:	(bad)  
   14002bc92:	(bad)  
   14002bc93:	(bad)  
   14002bc94:	(bad)  
   14002bc95:	(bad)  
   14002bc96:	(bad)  
   14002bc97:	(bad)  
   14002bc98:	(bad)  
   14002bc99:	(bad)  
   14002bc9a:	(bad)  
   14002bc9b:	(bad)  
   14002bc9c:	(bad)  
   14002bc9d:	(bad)  
   14002bc9e:	(bad)  
   14002bc9f:	(bad)  
   14002bca0:	(bad)  
   14002bca1:	(bad)  
   14002bca2:	(bad)  
   14002bca3:	call   QWORD PTR [rsi-0x32]
   14002bca6:	rex.RB call QWORD PTR [r10-0x33]
   14002bcaa:	call   QWORD PTR [r10-0x33]
   14002bcae:	call   QWORD PTR [r10-0x33]
   14002bcb2:	call   QWORD PTR [r10-0x33]
   14002bcb6:	call   QWORD PTR [r10-0x33]
   14002bcba:	call   QWORD PTR [r10-0x33]
   14002bcbe:	call   QWORD PTR [r10-0x33]
   14002bcc2:	call   QWORD PTR [r10-0x33]
   14002bcc6:	call   QWORD PTR [r10-0x33]
   14002bcca:	call   QWORD PTR [r10-0x33]
   14002bcce:	call   QWORD PTR [r10-0x33]
   14002bcd2:	call   QWORD PTR [r10-0x33]
   14002bcd6:	call   QWORD PTR [r10-0x33]
   14002bcda:	call   QWORD PTR [r10-0x33]
   14002bcde:	call   QWORD PTR [r10-0x33]
   14002bce2:	call   QWORD PTR [r10-0x33]
   14002bce6:	call   QWORD PTR [r10-0x33]
   14002bcea:	call   QWORD PTR [r10-0x33]
   14002bcee:	push   QWORD PTR [r8-0x5618]
   14002bcf5:	(bad)  
   14002bcf6:	(bad)  
   14002bcf7:	(bad)  
   14002bcf8:	(bad)  
   14002bcf9:	(bad)  
   14002bcfa:	(bad)  
   14002bcfb:	(bad)  
   14002bcfc:	(bad)  
   14002bcfd:	(bad)  
   14002bcfe:	(bad)  
   14002bcff:	(bad)  
   14002bd00:	(bad)  
   14002bd01:	(bad)  
   14002bd02:	(bad)  
   14002bd03:	(bad)  
   14002bd04:	(bad)  
   14002bd05:	(bad)  
   14002bd06:	(bad)  
   14002bd07:	(bad)  
   14002bd08:	(bad)  
   14002bd09:	(bad)  
   14002bd0a:	(bad)  
   14002bd0b:	call   QWORD PTR [rdi+0x52ff8ce1]
   14002bd11:	int    0x41
   14002bd13:	call   QWORD PTR [rdx-0x33]
   14002bd16:	call   QWORD PTR [r10-0x33]
   14002bd1a:	call   QWORD PTR [r10-0x33]
   14002bd1e:	call   QWORD PTR [r10-0x33]
   14002bd22:	call   QWORD PTR [r10-0x33]
   14002bd26:	call   QWORD PTR [r10-0x33]
   14002bd2a:	call   QWORD PTR [r10-0x33]
   14002bd2e:	push   r13
   14002bd31:	cld    
   14002bd32:	cmc    
   14002bd33:	(bad)  
   14002bd34:	(bad)  
   14002bd35:	(bad)  
   14002bd36:	(bad)  
   14002bd37:	(bad)  
   14002bd38:	(bad)  
   14002bd39:	(bad)  
   14002bd3a:	(bad)  
   14002bd3b:	(bad)  
   14002bd3c:	(bad)  
   14002bd3d:	(bad)  
   14002bd3e:	(bad)  
   14002bd3f:	(bad)  
   14002bd40:	(bad)  
   14002bd41:	(bad)  
   14002bd42:	(bad)  
   14002bd43:	(bad)  
   14002bd44:	(bad)  
   14002bd45:	(bad)  
   14002bd46:	(bad)  
   14002bd47:	inc    ebp
   14002bd49:	out    dx,al
   14002bd4a:	mov    edi,0x41cd52ff
   14002bd4f:	call   QWORD PTR [rdx-0x33]
   14002bd52:	call   QWORD PTR [r10-0x33]
   14002bd56:	call   QWORD PTR [r10-0x33]
   14002bd5a:	call   QWORD PTR [r10-0x33]
   14002bd5e:	call   QWORD PTR [r10-0x33]
   14002bd62:	call   QWORD PTR [r10-0x33]
   14002bd66:	call   QWORD PTR [r10-0x33]
   14002bd6a:	call   QWORD PTR [r10-0x33]
   14002bd6e:	call   QWORD PTR [r10-0x33]
   14002bd72:	call   QWORD PTR [r10-0x33]
   14002bd76:	call   QWORD PTR [r10-0x33]
   14002bd7a:	call   QWORD PTR [r10-0x33]
   14002bd7e:	call   QWORD PTR [r10-0x33]
   14002bd82:	call   QWORD PTR [r10-0x33]
   14002bd86:	call   QWORD PTR [r10-0x33]
   14002bd8a:	call   QWORD PTR [r10-0x33]
   14002bd8e:	call   QWORD PTR [r10-0x33]
   14002bd92:	call   QWORD PTR [r10-0x33]
   14002bd96:	call   QWORD PTR [r10-0x33]
   14002bd9a:	call   QWORD PTR [r10-0x33]
   14002bd9e:	call   QWORD PTR [r10-0x33]
   14002bda2:	call   QWORD PTR [r10-0x33]
   14002bda6:	call   QWORD PTR [r10-0x33]
   14002bdaa:	call   QWORD PTR [r10-0x33]
   14002bdae:	call   QWORD PTR [r10-0x33]
   14002bdb2:	call   QWORD PTR [r10-0x33]
   14002bdb6:	call   QWORD PTR [r10-0x33]
   14002bdba:	inc    DWORD PTR [r8]
   14002bdbd:	add    BYTE PTR [rax],al
   14002bdbf:	cmp    eax,DWORD PTR [rax]
   14002bdc1:	add    BYTE PTR [rax],al
   14002bdc3:	sbb    al,0x0
   14002bdc5:	add    BYTE PTR [rax],al
   14002bdc7:	or     al,0x0
   14002bdc9:	add    BYTE PTR [rax],al
   14002bdcb:	add    eax,0x2000000
	...
   14002be28:	add    BYTE PTR [rax],al
   14002be2a:	add    BYTE PTR [rdx],al
   14002be2c:	add    BYTE PTR [rax],al
   14002be2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02be34
   14002be34:	add    BYTE PTR [rax],al
   14002be36:	add    BYTE PTR [rax+rax*1],bl
   14002be39:	add    BYTE PTR [rax],al
   14002be3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002be3e:	call   QWORD PTR [r10-0x33]
   14002be42:	call   QWORD PTR [r10-0x33]
   14002be46:	call   QWORD PTR [r10-0x33]
   14002be4a:	call   QWORD PTR [r10-0x33]
   14002be4e:	call   QWORD PTR [r10-0x33]
   14002be52:	call   QWORD PTR [r10-0x33]
   14002be56:	call   QWORD PTR [r10-0x33]
   14002be5a:	call   QWORD PTR [r10-0x33]
   14002be5e:	call   QWORD PTR [r10-0x33]
   14002be62:	call   QWORD PTR [r10-0x33]
   14002be66:	call   QWORD PTR [r10-0x33]
   14002be6a:	call   QWORD PTR [r10-0x33]
   14002be6e:	call   QWORD PTR [r10-0x33]
   14002be72:	call   QWORD PTR [r10-0x33]
   14002be76:	call   QWORD PTR [r10-0x33]
   14002be7a:	call   QWORD PTR [r10-0x33]
   14002be7e:	call   QWORD PTR [r10-0x33]
   14002be82:	call   FWORD PTR [r11-0x30]
   14002be86:	rex.WXB (bad) 
   14002be88:	(bad)  
   14002be89:	(bad)  
   14002be8a:	(bad)  
   14002be8b:	(bad)  
   14002be8c:	(bad)  
   14002be8d:	(bad)  
   14002be8e:	(bad)  
   14002be8f:	(bad)  
   14002be90:	(bad)  
   14002be91:	(bad)  
   14002be92:	(bad)  
   14002be93:	(bad)  
   14002be94:	(bad)  
   14002be95:	(bad)  
   14002be96:	(bad)  
   14002be97:	(bad)  
   14002be98:	(bad)  
   14002be99:	(bad)  
   14002be9a:	(bad)  
   14002be9b:	(bad)  
   14002be9c:	(bad)  
   14002be9d:	(bad)  
   14002be9e:	(bad)  
   14002be9f:	push   rax
   14002bea1:	sti    
   14002bea2:	out    dx,eax
   14002bea3:	call   QWORD PTR [rdx-0x33]
   14002bea6:	call   QWORD PTR [r10-0x33]
   14002beaa:	call   QWORD PTR [r10-0x33]
   14002beae:	call   QWORD PTR [r10-0x33]
   14002beb2:	call   QWORD PTR [r10-0x33]
   14002beb6:	call   QWORD PTR [r10-0x33]
   14002beba:	call   QWORD PTR [r10-0x33]
   14002bebe:	call   QWORD PTR [r10-0x33]
   14002bec2:	call   QWORD PTR [r10-0x33]
   14002bec6:	call   QWORD PTR [r10-0x33]
   14002beca:	call   QWORD PTR [r10-0x33]
   14002bece:	call   QWORD PTR [r10-0x33]
   14002bed2:	call   QWORD PTR [r10-0x33]
   14002bed6:	call   QWORD PTR [r10-0x33]
   14002beda:	call   QWORD PTR [r10-0x33]
   14002bede:	call   QWORD PTR [r10-0x33]
   14002bee2:	call   QWORD PTR [r10-0x33]
   14002bee6:	call   QWORD PTR [r10-0x33]
   14002beea:	call   QWORD PTR [r10-0x33]
   14002beee:	jmp    QWORD PTR [r8-0x681c]
   14002bef5:	(bad)  
   14002bef6:	(bad)  
   14002bef7:	(bad)  
   14002bef8:	(bad)  
   14002bef9:	(bad)  
   14002befa:	(bad)  
   14002befb:	(bad)  
   14002befc:	(bad)  
   14002befd:	(bad)  
   14002befe:	(bad)  
   14002beff:	(bad)  
   14002bf00:	(bad)  
   14002bf01:	(bad)  
   14002bf02:	(bad)  
   14002bf03:	(bad)  
   14002bf04:	(bad)  
   14002bf05:	(bad)  
   14002bf06:	(bad)  
   14002bf07:	(bad)  
   14002bf08:	(bad)  
   14002bf09:	(bad)  
   14002bf0a:	(bad)  
   14002bf0b:	jmp    QWORD PTR [rsi+0x52ff9de5]
   14002bf11:	int    0x41
   14002bf13:	call   QWORD PTR [rdx-0x33]
   14002bf16:	call   QWORD PTR [r10-0x33]
   14002bf1a:	call   QWORD PTR [r10-0x33]
   14002bf1e:	call   QWORD PTR [r10-0x33]
   14002bf22:	call   QWORD PTR [r10-0x33]
   14002bf26:	call   QWORD PTR [r10-0x33]
   14002bf2a:	call   QWORD PTR [r10-0x33]
   14002bf2e:	push   r13
   14002bf31:	cld    
   14002bf32:	cmc    
   14002bf33:	(bad)  
   14002bf34:	(bad)  
   14002bf35:	(bad)  
   14002bf36:	(bad)  
   14002bf37:	(bad)  
   14002bf38:	(bad)  
   14002bf39:	(bad)  
   14002bf3a:	(bad)  
   14002bf3b:	(bad)  
   14002bf3c:	(bad)  
   14002bf3d:	(bad)  
   14002bf3e:	(bad)  
   14002bf3f:	(bad)  
   14002bf40:	(bad)  
   14002bf41:	(bad)  
   14002bf42:	(bad)  
   14002bf43:	(bad)  
   14002bf44:	(bad)  
   14002bf45:	(bad)  
   14002bf46:	(bad)  
   14002bf47:	inc    ebp
   14002bf49:	out    dx,al
   14002bf4a:	mov    edi,0x41cd52ff
   14002bf4f:	call   QWORD PTR [rdx-0x33]
   14002bf52:	call   QWORD PTR [r10-0x33]
   14002bf56:	call   QWORD PTR [r10-0x33]
   14002bf5a:	call   QWORD PTR [r10-0x33]
   14002bf5e:	call   QWORD PTR [r10-0x33]
   14002bf62:	call   QWORD PTR [r10-0x33]
   14002bf66:	call   QWORD PTR [r10-0x33]
   14002bf6a:	call   QWORD PTR [r10-0x33]
   14002bf6e:	call   QWORD PTR [r10-0x33]
   14002bf72:	call   QWORD PTR [r10-0x33]
   14002bf76:	call   QWORD PTR [r10-0x33]
   14002bf7a:	call   QWORD PTR [r10-0x33]
   14002bf7e:	call   QWORD PTR [r10-0x33]
   14002bf82:	call   QWORD PTR [r10-0x33]
   14002bf86:	call   QWORD PTR [r10-0x33]
   14002bf8a:	call   QWORD PTR [r10-0x33]
   14002bf8e:	call   QWORD PTR [r10-0x33]
   14002bf92:	call   QWORD PTR [r10-0x33]
   14002bf96:	call   QWORD PTR [r10-0x33]
   14002bf9a:	call   QWORD PTR [r10-0x33]
   14002bf9e:	call   QWORD PTR [r10-0x33]
   14002bfa2:	call   QWORD PTR [r10-0x33]
   14002bfa6:	call   QWORD PTR [r10-0x33]
   14002bfaa:	call   QWORD PTR [r10-0x33]
   14002bfae:	call   QWORD PTR [r10-0x33]
   14002bfb2:	call   QWORD PTR [r10-0x33]
   14002bfb6:	call   QWORD PTR [r10-0x33]
   14002bfba:	inc    DWORD PTR [r8]
   14002bfbd:	add    BYTE PTR [rax],al
   14002bfbf:	cmp    eax,DWORD PTR [rax]
   14002bfc1:	add    BYTE PTR [rax],al
   14002bfc3:	sbb    al,0x0
   14002bfc5:	add    BYTE PTR [rax],al
   14002bfc7:	or     al,0x0
   14002bfc9:	add    BYTE PTR [rax],al
   14002bfcb:	add    eax,0x2000000
	...
   14002c028:	add    BYTE PTR [rax],al
   14002c02a:	add    BYTE PTR [rdx],al
   14002c02c:	add    BYTE PTR [rax],al
   14002c02e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02c034
   14002c034:	add    BYTE PTR [rax],al
   14002c036:	add    BYTE PTR [rax+rax*1],bl
   14002c039:	add    BYTE PTR [rax],al
   14002c03b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002c03e:	call   QWORD PTR [r10-0x33]
   14002c042:	call   QWORD PTR [r10-0x33]
   14002c046:	call   QWORD PTR [r10-0x33]
   14002c04a:	call   QWORD PTR [r10-0x33]
   14002c04e:	call   QWORD PTR [r10-0x33]
   14002c052:	call   QWORD PTR [r10-0x33]
   14002c056:	call   QWORD PTR [r10-0x33]
   14002c05a:	call   QWORD PTR [r10-0x33]
   14002c05e:	call   QWORD PTR [r10-0x33]
   14002c062:	call   QWORD PTR [r10-0x33]
   14002c066:	call   QWORD PTR [r10-0x33]
   14002c06a:	call   QWORD PTR [r10-0x33]
   14002c06e:	call   QWORD PTR [r10-0x33]
   14002c072:	call   QWORD PTR [r10-0x33]
   14002c076:	call   QWORD PTR [r10-0x33]
   14002c07a:	call   QWORD PTR [r10-0x33]
   14002c07e:	call   QWORD PTR [r10-0x33]
   14002c082:	jmp    QWORD PTR [r10+rdx*8+0x54]
   14002c087:	(bad)  
   14002c088:	(bad)  
   14002c089:	(bad)  
   14002c08a:	(bad)  
   14002c08b:	(bad)  
   14002c08c:	(bad)  
   14002c08d:	(bad)  
   14002c08e:	(bad)  
   14002c08f:	(bad)  
   14002c090:	(bad)  
   14002c091:	(bad)  
   14002c092:	(bad)  
   14002c093:	(bad)  
   14002c094:	(bad)  
   14002c095:	(bad)  
   14002c096:	(bad)  
   14002c097:	(bad)  
   14002c098:	(bad)  
   14002c099:	(bad)  
   14002c09a:	(bad)  
   14002c09b:	(bad)  
   14002c09c:	(bad)  
   14002c09d:	(bad)  
   14002c09e:	(bad)  
   14002c09f:	(bad)  
   14002c0a0:	jmp    0x19302a79e
   14002c0a5:	int    0x41
   14002c0a7:	call   QWORD PTR [rdx-0x33]
   14002c0aa:	call   QWORD PTR [r10-0x33]
   14002c0ae:	call   QWORD PTR [r10-0x33]
   14002c0b2:	call   QWORD PTR [r10-0x33]
   14002c0b6:	call   QWORD PTR [r10-0x33]
   14002c0ba:	call   QWORD PTR [r10-0x33]
   14002c0be:	call   QWORD PTR [r10-0x33]
   14002c0c2:	call   QWORD PTR [r10-0x33]
   14002c0c6:	call   QWORD PTR [r10-0x33]
   14002c0ca:	call   QWORD PTR [r10-0x33]
   14002c0ce:	call   QWORD PTR [r10-0x33]
   14002c0d2:	call   QWORD PTR [r10-0x33]
   14002c0d6:	call   QWORD PTR [r10-0x33]
   14002c0da:	call   QWORD PTR [r10-0x33]
   14002c0de:	call   QWORD PTR [r10-0x33]
   14002c0e2:	call   QWORD PTR [r10-0x33]
   14002c0e6:	call   QWORD PTR [r10-0x33]
   14002c0ea:	call   QWORD PTR [r10-0x33]
   14002c0ee:	call   FWORD PTR [r10-0x6f1e]
   14002c0f5:	(bad)  
   14002c0f6:	(bad)  
   14002c0f7:	(bad)  
   14002c0f8:	(bad)  
   14002c0f9:	(bad)  
   14002c0fa:	(bad)  
   14002c0fb:	(bad)  
   14002c0fc:	(bad)  
   14002c0fd:	(bad)  
   14002c0fe:	(bad)  
   14002c0ff:	(bad)  
   14002c100:	(bad)  
   14002c101:	(bad)  
   14002c102:	(bad)  
   14002c103:	(bad)  
   14002c104:	(bad)  
   14002c105:	(bad)  
   14002c106:	(bad)  
   14002c107:	(bad)  
   14002c108:	(bad)  
   14002c109:	(bad)  
   14002c10a:	(bad)  
   14002c10b:	jmp    FWORD PTR [rsi+0x52ffa6e7]
   14002c111:	int    0x41
   14002c113:	call   QWORD PTR [rdx-0x33]
   14002c116:	call   QWORD PTR [r10-0x33]
   14002c11a:	call   QWORD PTR [r10-0x33]
   14002c11e:	call   QWORD PTR [r10-0x33]
   14002c122:	call   QWORD PTR [r10-0x33]
   14002c126:	call   QWORD PTR [r10-0x33]
   14002c12a:	call   QWORD PTR [r10-0x33]
   14002c12e:	push   r13
   14002c131:	cld    
   14002c132:	cmc    
   14002c133:	(bad)  
   14002c134:	(bad)  
   14002c135:	(bad)  
   14002c136:	(bad)  
   14002c137:	(bad)  
   14002c138:	(bad)  
   14002c139:	(bad)  
   14002c13a:	(bad)  
   14002c13b:	(bad)  
   14002c13c:	(bad)  
   14002c13d:	(bad)  
   14002c13e:	(bad)  
   14002c13f:	(bad)  
   14002c140:	(bad)  
   14002c141:	(bad)  
   14002c142:	(bad)  
   14002c143:	(bad)  
   14002c144:	(bad)  
   14002c145:	(bad)  
   14002c146:	(bad)  
   14002c147:	inc    ebp
   14002c149:	out    dx,al
   14002c14a:	mov    edi,0x41cd52ff
   14002c14f:	call   QWORD PTR [rdx-0x33]
   14002c152:	call   QWORD PTR [r10-0x33]
   14002c156:	call   QWORD PTR [r10-0x33]
   14002c15a:	call   QWORD PTR [r10-0x33]
   14002c15e:	call   QWORD PTR [r10-0x33]
   14002c162:	call   QWORD PTR [r10-0x33]
   14002c166:	call   QWORD PTR [r10-0x33]
   14002c16a:	call   QWORD PTR [r10-0x33]
   14002c16e:	call   QWORD PTR [r10-0x33]
   14002c172:	call   QWORD PTR [r10-0x33]
   14002c176:	call   QWORD PTR [r10-0x33]
   14002c17a:	call   QWORD PTR [r10-0x33]
   14002c17e:	call   QWORD PTR [r10-0x33]
   14002c182:	call   QWORD PTR [r10-0x33]
   14002c186:	call   QWORD PTR [r10-0x33]
   14002c18a:	call   QWORD PTR [r10-0x33]
   14002c18e:	call   QWORD PTR [r10-0x33]
   14002c192:	call   QWORD PTR [r10-0x33]
   14002c196:	call   QWORD PTR [r10-0x33]
   14002c19a:	call   QWORD PTR [r10-0x33]
   14002c19e:	call   QWORD PTR [r10-0x33]
   14002c1a2:	call   QWORD PTR [r10-0x33]
   14002c1a6:	call   QWORD PTR [r10-0x33]
   14002c1aa:	call   QWORD PTR [r10-0x33]
   14002c1ae:	call   QWORD PTR [r10-0x33]
   14002c1b2:	call   QWORD PTR [r10-0x33]
   14002c1b6:	call   QWORD PTR [r10-0x33]
   14002c1ba:	inc    DWORD PTR [r8]
   14002c1bd:	add    BYTE PTR [rax],al
   14002c1bf:	cmp    eax,DWORD PTR [rax]
   14002c1c1:	add    BYTE PTR [rax],al
   14002c1c3:	sbb    al,0x0
   14002c1c5:	add    BYTE PTR [rax],al
   14002c1c7:	or     al,0x0
   14002c1c9:	add    BYTE PTR [rax],al
   14002c1cb:	add    eax,0x2000000
	...
   14002c228:	add    BYTE PTR [rax],al
   14002c22a:	add    BYTE PTR [rdx],al
   14002c22c:	add    BYTE PTR [rax],al
   14002c22e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02c234
   14002c234:	add    BYTE PTR [rax],al
   14002c236:	add    BYTE PTR [rax+rax*1],bl
   14002c239:	add    BYTE PTR [rax],al
   14002c23b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002c23e:	call   QWORD PTR [r10-0x33]
   14002c242:	call   QWORD PTR [r10-0x33]
   14002c246:	call   QWORD PTR [r10-0x33]
   14002c24a:	call   QWORD PTR [r10-0x33]
   14002c24e:	call   QWORD PTR [r10-0x33]
   14002c252:	call   QWORD PTR [r10-0x33]
   14002c256:	call   QWORD PTR [r10-0x33]
   14002c25a:	call   QWORD PTR [r10-0x33]
   14002c25e:	call   QWORD PTR [r10-0x33]
   14002c262:	call   QWORD PTR [r10-0x33]
   14002c266:	call   QWORD PTR [r10-0x33]
   14002c26a:	call   QWORD PTR [r10-0x33]
   14002c26e:	call   QWORD PTR [r10-0x33]
   14002c272:	call   QWORD PTR [r10-0x33]
   14002c276:	call   QWORD PTR [r10-0x33]
   14002c27a:	call   QWORD PTR [r10-0x33]
   14002c27e:	call   QWORD PTR [r10-0x33]
   14002c282:	jmp    FWORD PTR [r11-0x2c]
   14002c286:	pop    rbp
   14002c287:	(bad)  
   14002c288:	(bad)  
   14002c289:	(bad)  
   14002c28a:	(bad)  
   14002c28b:	(bad)  
   14002c28c:	(bad)  
   14002c28d:	(bad)  
   14002c28e:	(bad)  
   14002c28f:	(bad)  
   14002c290:	(bad)  
   14002c291:	(bad)  
   14002c292:	(bad)  
   14002c293:	(bad)  
   14002c294:	(bad)  
   14002c295:	(bad)  
   14002c296:	(bad)  
   14002c297:	(bad)  
   14002c298:	(bad)  
   14002c299:	(bad)  
   14002c29a:	(bad)  
   14002c29b:	(bad)  
   14002c29c:	(bad)  
   14002c29d:	(bad)  
   14002c29e:	(bad)  
   14002c29f:	jmp    rbx
   14002c2a1:	mul    eax
   14002c2a3:	call   QWORD PTR [rdx-0x33]
   14002c2a6:	call   QWORD PTR [r10-0x33]
   14002c2aa:	call   QWORD PTR [r10-0x33]
   14002c2ae:	call   QWORD PTR [r10-0x33]
   14002c2b2:	call   QWORD PTR [r10-0x33]
   14002c2b6:	call   QWORD PTR [r10-0x33]
   14002c2ba:	call   QWORD PTR [r10-0x33]
   14002c2be:	call   QWORD PTR [r10-0x33]
   14002c2c2:	call   QWORD PTR [r10-0x33]
   14002c2c6:	call   QWORD PTR [r10-0x33]
   14002c2ca:	call   QWORD PTR [r10-0x33]
   14002c2ce:	call   QWORD PTR [r10-0x33]
   14002c2d2:	call   QWORD PTR [r10-0x33]
   14002c2d6:	call   QWORD PTR [r10-0x33]
   14002c2da:	call   QWORD PTR [r10-0x33]
   14002c2de:	call   QWORD PTR [r10-0x33]
   14002c2e2:	call   QWORD PTR [r10-0x33]
   14002c2e6:	call   QWORD PTR [r10-0x33]
   14002c2ea:	call   QWORD PTR [r10-0x33]
   14002c2ee:	call   QWORD PTR [r8+riz*8-0x77]
   14002c2f6:	(bad)  
   14002c2f7:	(bad)  
   14002c2f8:	(bad)  
   14002c2f9:	(bad)  
   14002c2fa:	(bad)  
   14002c2fb:	(bad)  
   14002c2fc:	(bad)  
   14002c2fd:	(bad)  
   14002c2fe:	(bad)  
   14002c2ff:	(bad)  
   14002c300:	(bad)  
   14002c301:	(bad)  
   14002c302:	(bad)  
   14002c303:	(bad)  
   14002c304:	(bad)  
   14002c305:	(bad)  
   14002c306:	(bad)  
   14002c307:	(bad)  
   14002c308:	(bad)  
   14002c309:	(bad)  
   14002c30a:	(bad)  
   14002c30b:	push   QWORD PTR [rbx+0x52fface9]
   14002c311:	int    0x41
   14002c313:	call   QWORD PTR [rdx-0x33]
   14002c316:	call   QWORD PTR [r10-0x33]
   14002c31a:	call   QWORD PTR [r10-0x33]
   14002c31e:	call   QWORD PTR [r10-0x33]
   14002c322:	call   QWORD PTR [r10-0x33]
   14002c326:	call   QWORD PTR [r10-0x33]
   14002c32a:	call   QWORD PTR [r10-0x33]
   14002c32e:	push   r13
   14002c331:	cld    
   14002c332:	cmc    
   14002c333:	(bad)  
   14002c334:	(bad)  
   14002c335:	(bad)  
   14002c336:	(bad)  
   14002c337:	(bad)  
   14002c338:	(bad)  
   14002c339:	(bad)  
   14002c33a:	(bad)  
   14002c33b:	(bad)  
   14002c33c:	(bad)  
   14002c33d:	(bad)  
   14002c33e:	(bad)  
   14002c33f:	(bad)  
   14002c340:	(bad)  
   14002c341:	(bad)  
   14002c342:	(bad)  
   14002c343:	(bad)  
   14002c344:	(bad)  
   14002c345:	(bad)  
   14002c346:	(bad)  
   14002c347:	inc    ebp
   14002c349:	out    dx,al
   14002c34a:	mov    edi,0x41cd52ff
   14002c34f:	call   QWORD PTR [rdx-0x33]
   14002c352:	call   QWORD PTR [r10-0x33]
   14002c356:	call   QWORD PTR [r10-0x33]
   14002c35a:	call   QWORD PTR [r10-0x33]
   14002c35e:	call   QWORD PTR [r10-0x33]
   14002c362:	call   QWORD PTR [r10-0x33]
   14002c366:	call   QWORD PTR [r10-0x33]
   14002c36a:	call   QWORD PTR [r10-0x33]
   14002c36e:	call   QWORD PTR [r10-0x33]
   14002c372:	call   QWORD PTR [r10-0x33]
   14002c376:	call   QWORD PTR [r10-0x33]
   14002c37a:	call   QWORD PTR [r10-0x33]
   14002c37e:	call   QWORD PTR [r10-0x33]
   14002c382:	call   QWORD PTR [r10-0x33]
   14002c386:	call   QWORD PTR [r10-0x33]
   14002c38a:	call   QWORD PTR [r10-0x33]
   14002c38e:	call   QWORD PTR [r10-0x33]
   14002c392:	call   QWORD PTR [r10-0x33]
   14002c396:	call   QWORD PTR [r10-0x33]
   14002c39a:	call   QWORD PTR [r10-0x33]
   14002c39e:	call   QWORD PTR [r10-0x33]
   14002c3a2:	call   QWORD PTR [r10-0x33]
   14002c3a6:	call   QWORD PTR [r10-0x33]
   14002c3aa:	call   QWORD PTR [r10-0x33]
   14002c3ae:	call   QWORD PTR [r10-0x33]
   14002c3b2:	call   QWORD PTR [r10-0x33]
   14002c3b6:	call   QWORD PTR [r10-0x33]
   14002c3ba:	inc    DWORD PTR [r8]
   14002c3bd:	add    BYTE PTR [rax],al
   14002c3bf:	cmp    eax,DWORD PTR [rax]
   14002c3c1:	add    BYTE PTR [rax],al
   14002c3c3:	sbb    al,0x0
   14002c3c5:	add    BYTE PTR [rax],al
   14002c3c7:	or     al,0x0
   14002c3c9:	add    BYTE PTR [rax],al
   14002c3cb:	add    eax,0x2000000
	...
   14002c428:	add    BYTE PTR [rax],al
   14002c42a:	add    BYTE PTR [rdx],al
   14002c42c:	add    BYTE PTR [rax],al
   14002c42e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02c434
   14002c434:	add    BYTE PTR [rax],al
   14002c436:	add    BYTE PTR [rax+rax*1],bl
   14002c439:	add    BYTE PTR [rax],al
   14002c43b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002c43e:	call   QWORD PTR [r10-0x33]
   14002c442:	call   QWORD PTR [r10-0x33]
   14002c446:	call   QWORD PTR [r10-0x33]
   14002c44a:	call   QWORD PTR [r10-0x33]
   14002c44e:	call   QWORD PTR [r10-0x33]
   14002c452:	call   QWORD PTR [r10-0x33]
   14002c456:	call   QWORD PTR [r10-0x33]
   14002c45a:	call   QWORD PTR [r10-0x33]
   14002c45e:	call   QWORD PTR [r10-0x33]
   14002c462:	call   QWORD PTR [r10-0x33]
   14002c466:	call   QWORD PTR [r10-0x33]
   14002c46a:	call   QWORD PTR [r10-0x33]
   14002c46e:	call   QWORD PTR [r10-0x33]
   14002c472:	call   QWORD PTR [r10-0x33]
   14002c476:	call   QWORD PTR [r10-0x33]
   14002c47a:	call   QWORD PTR [r10-0x33]
   14002c47e:	call   QWORD PTR [r10-0x33]
   14002c482:	push   QWORD PTR [r11-0x2a]
   14002c486:	gs (bad) 
   14002c488:	(bad)  
   14002c489:	(bad)  
   14002c48a:	(bad)  
   14002c48b:	(bad)  
   14002c48c:	(bad)  
   14002c48d:	(bad)  
   14002c48e:	(bad)  
   14002c48f:	(bad)  
   14002c490:	(bad)  
   14002c491:	(bad)  
   14002c492:	(bad)  
   14002c493:	(bad)  
   14002c494:	(bad)  
   14002c495:	(bad)  
   14002c496:	(bad)  
   14002c497:	(bad)  
   14002c498:	(bad)  
   14002c499:	(bad)  
   14002c49a:	(bad)  
   14002c49b:	(bad)  
   14002c49c:	(bad)  
   14002c49d:	(bad)  
   14002c49e:	(bad)  
   14002c49f:	(bad)  
   14002c4a0:	fdivrp st(5),st
   14002c4a2:	(bad)  
   14002c4a4:	push   rdx
   14002c4a5:	int    0x41
   14002c4a7:	call   QWORD PTR [rdx-0x33]
   14002c4aa:	call   QWORD PTR [r10-0x33]
   14002c4ae:	call   QWORD PTR [r10-0x33]
   14002c4b2:	call   QWORD PTR [r10-0x33]
   14002c4b6:	call   QWORD PTR [r10-0x33]
   14002c4ba:	call   QWORD PTR [r10-0x33]
   14002c4be:	call   QWORD PTR [r10-0x33]
   14002c4c2:	call   QWORD PTR [r10-0x33]
   14002c4c6:	call   QWORD PTR [r10-0x33]
   14002c4ca:	call   QWORD PTR [r10-0x33]
   14002c4ce:	call   QWORD PTR [r10-0x33]
   14002c4d2:	call   QWORD PTR [r10-0x33]
   14002c4d6:	call   QWORD PTR [r10-0x33]
   14002c4da:	call   QWORD PTR [r10-0x33]
   14002c4de:	call   QWORD PTR [r10-0x33]
   14002c4e2:	call   QWORD PTR [r10-0x33]
   14002c4e6:	call   QWORD PTR [r10-0x33]
   14002c4ea:	call   QWORD PTR [r10-0x33]
   14002c4ee:	dec    DWORD PTR [r14-0x7c22]
   14002c4f5:	(bad)  
   14002c4f6:	(bad)  
   14002c4f7:	(bad)  
   14002c4f8:	(bad)  
   14002c4f9:	(bad)  
   14002c4fa:	(bad)  
   14002c4fb:	(bad)  
   14002c4fc:	(bad)  
   14002c4fd:	(bad)  
   14002c4fe:	(bad)  
   14002c4ff:	(bad)  
   14002c500:	(bad)  
   14002c501:	(bad)  
   14002c502:	(bad)  
   14002c503:	(bad)  
   14002c504:	(bad)  
   14002c505:	(bad)  
   14002c506:	(bad)  
   14002c507:	(bad)  
   14002c508:	(bad)  
   14002c509:	(bad)  
   14002c50a:	(bad)  
   14002c50b:	(bad)  
   14002c50c:	mov    eax,0x52ffb1ea
   14002c511:	int    0x41
   14002c513:	call   QWORD PTR [rdx-0x33]
   14002c516:	call   QWORD PTR [r10-0x33]
   14002c51a:	call   QWORD PTR [r10-0x33]
   14002c51e:	call   QWORD PTR [r10-0x33]
   14002c522:	call   QWORD PTR [r10-0x33]
   14002c526:	call   QWORD PTR [r10-0x33]
   14002c52a:	call   QWORD PTR [r10-0x33]
   14002c52e:	push   r13
   14002c531:	cld    
   14002c532:	cmc    
   14002c533:	(bad)  
   14002c534:	(bad)  
   14002c535:	(bad)  
   14002c536:	(bad)  
   14002c537:	(bad)  
   14002c538:	(bad)  
   14002c539:	(bad)  
   14002c53a:	(bad)  
   14002c53b:	(bad)  
   14002c53c:	(bad)  
   14002c53d:	(bad)  
   14002c53e:	(bad)  
   14002c53f:	(bad)  
   14002c540:	(bad)  
   14002c541:	(bad)  
   14002c542:	(bad)  
   14002c543:	(bad)  
   14002c544:	(bad)  
   14002c545:	(bad)  
   14002c546:	(bad)  
   14002c547:	inc    ebp
   14002c549:	out    dx,al
   14002c54a:	mov    edi,0x41cd52ff
   14002c54f:	call   QWORD PTR [rdx-0x33]
   14002c552:	call   QWORD PTR [r10-0x33]
   14002c556:	call   QWORD PTR [r10-0x33]
   14002c55a:	call   QWORD PTR [r10-0x33]
   14002c55e:	call   QWORD PTR [r10-0x33]
   14002c562:	call   QWORD PTR [r10-0x33]
   14002c566:	call   QWORD PTR [r10-0x33]
   14002c56a:	call   QWORD PTR [r10-0x33]
   14002c56e:	call   QWORD PTR [r10-0x33]
   14002c572:	call   QWORD PTR [r10-0x33]
   14002c576:	call   QWORD PTR [r10-0x33]
   14002c57a:	call   QWORD PTR [r10-0x33]
   14002c57e:	call   QWORD PTR [r10-0x33]
   14002c582:	call   QWORD PTR [r10-0x33]
   14002c586:	call   QWORD PTR [r10-0x33]
   14002c58a:	call   QWORD PTR [r10-0x33]
   14002c58e:	call   QWORD PTR [r10-0x33]
   14002c592:	call   QWORD PTR [r10-0x33]
   14002c596:	call   QWORD PTR [r10-0x33]
   14002c59a:	call   QWORD PTR [r10-0x33]
   14002c59e:	call   QWORD PTR [r10-0x33]
   14002c5a2:	call   QWORD PTR [r10-0x33]
   14002c5a6:	call   QWORD PTR [r10-0x33]
   14002c5aa:	call   QWORD PTR [r10-0x33]
   14002c5ae:	call   QWORD PTR [r10-0x33]
   14002c5b2:	call   QWORD PTR [r10-0x33]
   14002c5b6:	call   QWORD PTR [r10-0x33]
   14002c5ba:	inc    DWORD PTR [r8]
   14002c5bd:	add    BYTE PTR [rax],al
   14002c5bf:	cmp    eax,DWORD PTR [rax]
   14002c5c1:	add    BYTE PTR [rax],al
   14002c5c3:	sbb    al,0x0
   14002c5c5:	add    BYTE PTR [rax],al
   14002c5c7:	or     al,0x0
   14002c5c9:	add    BYTE PTR [rax],al
   14002c5cb:	add    eax,0x2000000
	...
   14002c628:	add    BYTE PTR [rax],al
   14002c62a:	add    BYTE PTR [rdx],al
   14002c62c:	add    BYTE PTR [rax],al
   14002c62e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02c634
   14002c634:	add    BYTE PTR [rax],al
   14002c636:	add    BYTE PTR [rax+rax*1],bl
   14002c639:	add    BYTE PTR [rax],al
   14002c63b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002c63e:	call   QWORD PTR [r10-0x33]
   14002c642:	call   QWORD PTR [r10-0x33]
   14002c646:	call   QWORD PTR [r10-0x33]
   14002c64a:	call   QWORD PTR [r10-0x33]
   14002c64e:	call   QWORD PTR [r10-0x33]
   14002c652:	call   QWORD PTR [r10-0x33]
   14002c656:	call   QWORD PTR [r10-0x33]
   14002c65a:	call   QWORD PTR [r10-0x33]
   14002c65e:	call   QWORD PTR [r10-0x33]
   14002c662:	call   QWORD PTR [r10-0x33]
   14002c666:	call   QWORD PTR [r10-0x33]
   14002c66a:	call   QWORD PTR [r10-0x33]
   14002c66e:	call   QWORD PTR [r10-0x33]
   14002c672:	call   QWORD PTR [r10-0x33]
   14002c676:	call   QWORD PTR [r10-0x33]
   14002c67a:	call   QWORD PTR [r10-0x33]
   14002c67e:	call   QWORD PTR [r10-0x33]
   14002c682:	push   QWORD PTR [r13-0x29]
   14002c686:	push   0xffffffffffffffff
   14002c68b:	(bad)  
   14002c68c:	(bad)  
   14002c68d:	(bad)  
   14002c68e:	(bad)  
   14002c68f:	(bad)  
   14002c690:	(bad)  
   14002c691:	(bad)  
   14002c692:	(bad)  
   14002c693:	(bad)  
   14002c694:	(bad)  
   14002c695:	(bad)  
   14002c696:	(bad)  
   14002c697:	(bad)  
   14002c698:	(bad)  
   14002c699:	(bad)  
   14002c69a:	(bad)  
   14002c69b:	(bad)  
   14002c69c:	(bad)  
   14002c69d:	(bad)  
   14002c69e:	(bad)  
   14002c69f:	(bad)  
   14002c6a0:	fdivr  st(5),st
   14002c6a2:	fdivr  st,st(7)
   14002c6a4:	push   rdx
   14002c6a5:	int    0x41
   14002c6a7:	call   QWORD PTR [rdx-0x33]
   14002c6aa:	call   QWORD PTR [r10-0x33]
   14002c6ae:	call   QWORD PTR [r10-0x33]
   14002c6b2:	call   QWORD PTR [r10-0x33]
   14002c6b6:	call   QWORD PTR [r10-0x33]
   14002c6ba:	call   QWORD PTR [r10-0x33]
   14002c6be:	call   QWORD PTR [r10-0x33]
   14002c6c2:	call   QWORD PTR [r10-0x33]
   14002c6c6:	call   QWORD PTR [r10-0x33]
   14002c6ca:	call   QWORD PTR [r10-0x33]
   14002c6ce:	call   QWORD PTR [r10-0x33]
   14002c6d2:	call   QWORD PTR [r10-0x33]
   14002c6d6:	call   QWORD PTR [r10-0x33]
   14002c6da:	call   QWORD PTR [r10-0x33]
   14002c6de:	call   QWORD PTR [r10-0x33]
   14002c6e2:	call   QWORD PTR [r10-0x33]
   14002c6e6:	call   QWORD PTR [r10-0x33]
   14002c6ea:	call   QWORD PTR [r10-0x33]
   14002c6ee:	dec    DWORD PTR [r14+rbx*8-0x7f]
   14002c6f6:	(bad)  
   14002c6f7:	(bad)  
   14002c6f8:	(bad)  
   14002c6f9:	(bad)  
   14002c6fa:	(bad)  
   14002c6fb:	(bad)  
   14002c6fc:	(bad)  
   14002c6fd:	(bad)  
   14002c6fe:	(bad)  
   14002c6ff:	(bad)  
   14002c700:	(bad)  
   14002c701:	(bad)  
   14002c702:	(bad)  
   14002c703:	(bad)  
   14002c704:	(bad)  
   14002c705:	(bad)  
   14002c706:	(bad)  
   14002c707:	(bad)  
   14002c708:	(bad)  
   14002c709:	(bad)  
   14002c70a:	(bad)  
   14002c70b:	(bad)  
   14002c70c:	mov    edx,0x52ffb3eb
   14002c711:	int    0x41
   14002c713:	call   QWORD PTR [rdx-0x33]
   14002c716:	call   QWORD PTR [r10-0x33]
   14002c71a:	call   QWORD PTR [r10-0x33]
   14002c71e:	call   QWORD PTR [r10-0x33]
   14002c722:	call   QWORD PTR [r10-0x33]
   14002c726:	call   QWORD PTR [r10-0x33]
   14002c72a:	call   QWORD PTR [r10-0x33]
   14002c72e:	push   r13
   14002c731:	cld    
   14002c732:	cmc    
   14002c733:	(bad)  
   14002c734:	(bad)  
   14002c735:	(bad)  
   14002c736:	(bad)  
   14002c737:	(bad)  
   14002c738:	(bad)  
   14002c739:	(bad)  
   14002c73a:	(bad)  
   14002c73b:	(bad)  
   14002c73c:	(bad)  
   14002c73d:	(bad)  
   14002c73e:	(bad)  
   14002c73f:	(bad)  
   14002c740:	(bad)  
   14002c741:	(bad)  
   14002c742:	(bad)  
   14002c743:	(bad)  
   14002c744:	(bad)  
   14002c745:	(bad)  
   14002c746:	(bad)  
   14002c747:	inc    ebp
   14002c749:	out    dx,al
   14002c74a:	mov    edi,0x41cd52ff
   14002c74f:	call   QWORD PTR [rdx-0x33]
   14002c752:	call   QWORD PTR [r10-0x33]
   14002c756:	call   QWORD PTR [r10-0x33]
   14002c75a:	call   QWORD PTR [r10-0x33]
   14002c75e:	call   QWORD PTR [r10-0x33]
   14002c762:	call   QWORD PTR [r10-0x33]
   14002c766:	call   QWORD PTR [r10-0x33]
   14002c76a:	call   QWORD PTR [r10-0x33]
   14002c76e:	call   QWORD PTR [r10-0x33]
   14002c772:	call   QWORD PTR [r10-0x33]
   14002c776:	call   QWORD PTR [r10-0x33]
   14002c77a:	call   QWORD PTR [r10-0x33]
   14002c77e:	call   QWORD PTR [r10-0x33]
   14002c782:	call   QWORD PTR [r10-0x33]
   14002c786:	call   QWORD PTR [r10-0x33]
   14002c78a:	call   QWORD PTR [r10-0x33]
   14002c78e:	call   QWORD PTR [r10-0x33]
   14002c792:	call   QWORD PTR [r10-0x33]
   14002c796:	call   QWORD PTR [r10-0x33]
   14002c79a:	call   QWORD PTR [r10-0x33]
   14002c79e:	call   QWORD PTR [r10-0x33]
   14002c7a2:	call   QWORD PTR [r10-0x33]
   14002c7a6:	call   QWORD PTR [r10-0x33]
   14002c7aa:	call   QWORD PTR [r10-0x33]
   14002c7ae:	call   QWORD PTR [r10-0x33]
   14002c7b2:	call   QWORD PTR [r10-0x33]
   14002c7b6:	call   QWORD PTR [r10-0x33]
   14002c7ba:	inc    DWORD PTR [r8]
   14002c7bd:	add    BYTE PTR [rax],al
   14002c7bf:	cmp    eax,DWORD PTR [rax]
   14002c7c1:	add    BYTE PTR [rax],al
   14002c7c3:	sbb    al,0x0
   14002c7c5:	add    BYTE PTR [rax],al
   14002c7c7:	or     al,0x0
   14002c7c9:	add    BYTE PTR [rax],al
   14002c7cb:	add    eax,0x2000000
	...
   14002c828:	add    BYTE PTR [rax],al
   14002c82a:	add    BYTE PTR [rdx],al
   14002c82c:	add    BYTE PTR [rax],al
   14002c82e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02c834
   14002c834:	add    BYTE PTR [rax],al
   14002c836:	add    BYTE PTR [rax+rax*1],bl
   14002c839:	add    BYTE PTR [rax],al
   14002c83b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002c83e:	call   QWORD PTR [r10-0x33]
   14002c842:	call   QWORD PTR [r10-0x33]
   14002c846:	call   QWORD PTR [r10-0x33]
   14002c84a:	call   QWORD PTR [r10-0x33]
   14002c84e:	call   QWORD PTR [r10-0x33]
   14002c852:	call   QWORD PTR [r10-0x33]
   14002c856:	call   QWORD PTR [r10-0x33]
   14002c85a:	call   QWORD PTR [r10-0x33]
   14002c85e:	call   QWORD PTR [r10-0x33]
   14002c862:	call   QWORD PTR [r10-0x33]
   14002c866:	call   QWORD PTR [r10-0x33]
   14002c86a:	call   QWORD PTR [r10-0x33]
   14002c86e:	call   QWORD PTR [r10-0x33]
   14002c872:	call   QWORD PTR [r10-0x33]
   14002c876:	call   QWORD PTR [r10-0x33]
   14002c87a:	call   QWORD PTR [r10-0x33]
   14002c87e:	call   QWORD PTR [r10-0x33]
   14002c882:	jmp    FWORD PTR [r14-0x2b]
   14002c886:	(bad)  
   14002c887:	(bad)  
   14002c888:	(bad)  
   14002c889:	(bad)  
   14002c88a:	(bad)  
   14002c88b:	(bad)  
   14002c88c:	(bad)  
   14002c88d:	(bad)  
   14002c88e:	(bad)  
   14002c88f:	(bad)  
   14002c890:	(bad)  
   14002c891:	(bad)  
   14002c892:	(bad)  
   14002c893:	(bad)  
   14002c894:	(bad)  
   14002c895:	(bad)  
   14002c896:	(bad)  
   14002c897:	(bad)  
   14002c898:	(bad)  
   14002c899:	(bad)  
   14002c89a:	(bad)  
   14002c89b:	(bad)  
   14002c89c:	(bad)  
   14002c89d:	(bad)  
   14002c89e:	(bad)  
   14002c89f:	jmp    rcx
   14002c8a1:	neg    dh
   14002c8a3:	call   QWORD PTR [rdx-0x33]
   14002c8a6:	call   QWORD PTR [r10-0x33]
   14002c8aa:	call   QWORD PTR [r10-0x33]
   14002c8ae:	call   QWORD PTR [r10-0x33]
   14002c8b2:	call   QWORD PTR [r10-0x33]
   14002c8b6:	call   QWORD PTR [r10-0x33]
   14002c8ba:	call   QWORD PTR [r10-0x33]
   14002c8be:	call   QWORD PTR [r10-0x33]
   14002c8c2:	call   QWORD PTR [r10-0x33]
   14002c8c6:	call   QWORD PTR [r10-0x33]
   14002c8ca:	call   QWORD PTR [r10-0x33]
   14002c8ce:	call   QWORD PTR [r10-0x33]
   14002c8d2:	call   QWORD PTR [r10-0x33]
   14002c8d6:	call   QWORD PTR [r10-0x33]
   14002c8da:	call   QWORD PTR [r10-0x33]
   14002c8de:	call   QWORD PTR [r10-0x33]
   14002c8e2:	call   QWORD PTR [r10-0x33]
   14002c8e6:	call   QWORD PTR [r10-0x33]
   14002c8ea:	call   QWORD PTR [r10-0x33]
   14002c8ee:	call   QWORD PTR [r10-0x7720]
   14002c8f5:	(bad)  
   14002c8f6:	(bad)  
   14002c8f7:	(bad)  
   14002c8f8:	(bad)  
   14002c8f9:	(bad)  
   14002c8fa:	(bad)  
   14002c8fb:	(bad)  
   14002c8fc:	(bad)  
   14002c8fd:	(bad)  
   14002c8fe:	(bad)  
   14002c8ff:	(bad)  
   14002c900:	(bad)  
   14002c901:	(bad)  
   14002c902:	(bad)  
   14002c903:	(bad)  
   14002c904:	(bad)  
   14002c905:	(bad)  
   14002c906:	(bad)  
   14002c907:	(bad)  
   14002c908:	(bad)  
   14002c909:	(bad)  
   14002c90a:	(bad)  
   14002c90b:	push   QWORD PTR [rdx+0x52ffaae9]
   14002c911:	int    0x41
   14002c913:	call   QWORD PTR [rdx-0x33]
   14002c916:	call   QWORD PTR [r10-0x33]
   14002c91a:	call   QWORD PTR [r10-0x33]
   14002c91e:	call   QWORD PTR [r10-0x33]
   14002c922:	call   QWORD PTR [r10-0x33]
   14002c926:	call   QWORD PTR [r10-0x33]
   14002c92a:	call   QWORD PTR [r10-0x33]
   14002c92e:	push   r13
   14002c931:	cld    
   14002c932:	cmc    
   14002c933:	(bad)  
   14002c934:	(bad)  
   14002c935:	(bad)  
   14002c936:	(bad)  
   14002c937:	(bad)  
   14002c938:	(bad)  
   14002c939:	(bad)  
   14002c93a:	(bad)  
   14002c93b:	(bad)  
   14002c93c:	(bad)  
   14002c93d:	(bad)  
   14002c93e:	(bad)  
   14002c93f:	(bad)  
   14002c940:	(bad)  
   14002c941:	(bad)  
   14002c942:	(bad)  
   14002c943:	(bad)  
   14002c944:	(bad)  
   14002c945:	(bad)  
   14002c946:	(bad)  
   14002c947:	inc    ebp
   14002c949:	out    dx,al
   14002c94a:	mov    edi,0x41cd52ff
   14002c94f:	call   QWORD PTR [rdx-0x33]
   14002c952:	call   QWORD PTR [r10-0x33]
   14002c956:	call   QWORD PTR [r10-0x33]
   14002c95a:	call   QWORD PTR [r10-0x33]
   14002c95e:	call   QWORD PTR [r10-0x33]
   14002c962:	call   QWORD PTR [r10-0x33]
   14002c966:	call   QWORD PTR [r10-0x33]
   14002c96a:	call   QWORD PTR [r10-0x33]
   14002c96e:	call   QWORD PTR [r10-0x33]
   14002c972:	call   QWORD PTR [r10-0x33]
   14002c976:	call   QWORD PTR [r10-0x33]
   14002c97a:	call   QWORD PTR [r10-0x33]
   14002c97e:	call   QWORD PTR [r10-0x33]
   14002c982:	call   QWORD PTR [r10-0x33]
   14002c986:	call   QWORD PTR [r10-0x33]
   14002c98a:	call   QWORD PTR [r10-0x33]
   14002c98e:	call   QWORD PTR [r10-0x33]
   14002c992:	call   QWORD PTR [r10-0x33]
   14002c996:	call   QWORD PTR [r10-0x33]
   14002c99a:	call   QWORD PTR [r10-0x33]
   14002c99e:	call   QWORD PTR [r10-0x33]
   14002c9a2:	call   QWORD PTR [r10-0x33]
   14002c9a6:	call   QWORD PTR [r10-0x33]
   14002c9aa:	call   QWORD PTR [r10-0x33]
   14002c9ae:	call   QWORD PTR [r10-0x33]
   14002c9b2:	call   QWORD PTR [r10-0x33]
   14002c9b6:	call   QWORD PTR [r10-0x33]
   14002c9ba:	inc    DWORD PTR [r8]
   14002c9bd:	add    BYTE PTR [rax],al
   14002c9bf:	cmp    eax,DWORD PTR [rax]
   14002c9c1:	add    BYTE PTR [rax],al
   14002c9c3:	sbb    al,0x0
   14002c9c5:	add    BYTE PTR [rax],al
   14002c9c7:	or     al,0x0
   14002c9c9:	add    BYTE PTR [rax],al
   14002c9cb:	add    eax,0x2000000
	...
   14002ca28:	add    BYTE PTR [rax],al
   14002ca2a:	add    BYTE PTR [rdx],al
   14002ca2c:	add    BYTE PTR [rax],al
   14002ca2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02ca34
   14002ca34:	add    BYTE PTR [rax],al
   14002ca36:	add    BYTE PTR [rax+rax*1],bl
   14002ca39:	add    BYTE PTR [rax],al
   14002ca3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002ca3e:	call   QWORD PTR [r10-0x33]
   14002ca42:	call   QWORD PTR [r10-0x33]
   14002ca46:	call   QWORD PTR [r10-0x33]
   14002ca4a:	call   QWORD PTR [r10-0x33]
   14002ca4e:	call   QWORD PTR [r10-0x33]
   14002ca52:	call   QWORD PTR [r10-0x33]
   14002ca56:	call   QWORD PTR [r10-0x33]
   14002ca5a:	call   QWORD PTR [r10-0x33]
   14002ca5e:	call   QWORD PTR [r10-0x33]
   14002ca62:	call   QWORD PTR [r10-0x33]
   14002ca66:	call   QWORD PTR [r10-0x33]
   14002ca6a:	call   QWORD PTR [r10-0x33]
   14002ca6e:	call   QWORD PTR [r10-0x33]
   14002ca72:	call   QWORD PTR [r10-0x33]
   14002ca76:	call   QWORD PTR [r10-0x33]
   14002ca7a:	call   QWORD PTR [r10-0x33]
   14002ca7e:	call   QWORD PTR [r10-0x33]
   14002ca82:	jmp    QWORD PTR [r14-0x2d]
   14002ca86:	push   rdi
   14002ca87:	(bad)  
   14002ca88:	(bad)  
   14002ca89:	(bad)  
   14002ca8a:	(bad)  
   14002ca8b:	(bad)  
   14002ca8c:	(bad)  
   14002ca8d:	(bad)  
   14002ca8e:	(bad)  
   14002ca8f:	(bad)  
   14002ca90:	(bad)  
   14002ca91:	(bad)  
   14002ca92:	(bad)  
   14002ca93:	(bad)  
   14002ca94:	(bad)  
   14002ca95:	(bad)  
   14002ca96:	(bad)  
   14002ca97:	(bad)  
   14002ca98:	(bad)  
   14002ca99:	(bad)  
   14002ca9a:	(bad)  
   14002ca9b:	(bad)  
   14002ca9c:	(bad)  
   14002ca9d:	(bad)  
   14002ca9e:	(bad)  
   14002ca9f:	jmp    rdi
   14002caa1:	clc    
   14002caa2:	in     eax,0xff
   14002caa4:	push   rdx
   14002caa5:	int    0x41
   14002caa7:	call   QWORD PTR [rdx-0x33]
   14002caaa:	call   QWORD PTR [r10-0x33]
   14002caae:	call   QWORD PTR [r10-0x33]
   14002cab2:	call   QWORD PTR [r10-0x33]
   14002cab6:	call   QWORD PTR [r10-0x33]
   14002caba:	call   QWORD PTR [r10-0x33]
   14002cabe:	call   QWORD PTR [r10-0x33]
   14002cac2:	call   QWORD PTR [r10-0x33]
   14002cac6:	call   QWORD PTR [r10-0x33]
   14002caca:	call   QWORD PTR [r10-0x33]
   14002cace:	call   QWORD PTR [r10-0x33]
   14002cad2:	call   QWORD PTR [r10-0x33]
   14002cad6:	call   QWORD PTR [r10-0x33]
   14002cada:	call   QWORD PTR [r10-0x33]
   14002cade:	call   QWORD PTR [r10-0x33]
   14002cae2:	call   QWORD PTR [r10-0x33]
   14002cae6:	call   QWORD PTR [r10-0x33]
   14002caea:	call   QWORD PTR [r10-0x33]
   14002caee:	call   FWORD PTR [r9-0x711f]
   14002caf5:	(bad)  
   14002caf6:	(bad)  
   14002caf7:	(bad)  
   14002caf8:	(bad)  
   14002caf9:	(bad)  
   14002cafa:	(bad)  
   14002cafb:	(bad)  
   14002cafc:	(bad)  
   14002cafd:	(bad)  
   14002cafe:	(bad)  
   14002caff:	(bad)  
   14002cb00:	(bad)  
   14002cb01:	(bad)  
   14002cb02:	(bad)  
   14002cb03:	(bad)  
   14002cb04:	(bad)  
   14002cb05:	(bad)  
   14002cb06:	(bad)  
   14002cb07:	(bad)  
   14002cb08:	(bad)  
   14002cb09:	(bad)  
   14002cb0a:	(bad)  
   14002cb0b:	jmp    FWORD PTR [rdx+0x52ffa1e6]
   14002cb11:	int    0x41
   14002cb13:	call   QWORD PTR [rdx-0x33]
   14002cb16:	call   QWORD PTR [r10-0x33]
   14002cb1a:	call   QWORD PTR [r10-0x33]
   14002cb1e:	call   QWORD PTR [r10-0x33]
   14002cb22:	call   QWORD PTR [r10-0x33]
   14002cb26:	call   QWORD PTR [r10-0x33]
   14002cb2a:	call   QWORD PTR [r10-0x33]
   14002cb2e:	push   r13
   14002cb31:	cld    
   14002cb32:	cmc    
   14002cb33:	(bad)  
   14002cb34:	(bad)  
   14002cb35:	(bad)  
   14002cb36:	(bad)  
   14002cb37:	(bad)  
   14002cb38:	(bad)  
   14002cb39:	(bad)  
   14002cb3a:	(bad)  
   14002cb3b:	(bad)  
   14002cb3c:	(bad)  
   14002cb3d:	(bad)  
   14002cb3e:	(bad)  
   14002cb3f:	(bad)  
   14002cb40:	(bad)  
   14002cb41:	(bad)  
   14002cb42:	(bad)  
   14002cb43:	(bad)  
   14002cb44:	(bad)  
   14002cb45:	(bad)  
   14002cb46:	(bad)  
   14002cb47:	inc    ebp
   14002cb49:	out    dx,al
   14002cb4a:	mov    edi,0x41cd52ff
   14002cb4f:	call   QWORD PTR [rdx-0x33]
   14002cb52:	call   QWORD PTR [r10-0x33]
   14002cb56:	call   QWORD PTR [r10-0x33]
   14002cb5a:	call   QWORD PTR [r10-0x33]
   14002cb5e:	call   QWORD PTR [r10-0x33]
   14002cb62:	call   QWORD PTR [r10-0x33]
   14002cb66:	call   QWORD PTR [r10-0x33]
   14002cb6a:	call   QWORD PTR [r10-0x33]
   14002cb6e:	call   QWORD PTR [r10-0x33]
   14002cb72:	call   QWORD PTR [r10-0x33]
   14002cb76:	call   QWORD PTR [r10-0x33]
   14002cb7a:	call   QWORD PTR [r10-0x33]
   14002cb7e:	call   QWORD PTR [r10-0x33]
   14002cb82:	call   QWORD PTR [r10-0x33]
   14002cb86:	call   QWORD PTR [r10-0x33]
   14002cb8a:	call   QWORD PTR [r10-0x33]
   14002cb8e:	call   QWORD PTR [r10-0x33]
   14002cb92:	call   QWORD PTR [r10-0x33]
   14002cb96:	call   QWORD PTR [r10-0x33]
   14002cb9a:	call   QWORD PTR [r10-0x33]
   14002cb9e:	call   QWORD PTR [r10-0x33]
   14002cba2:	call   QWORD PTR [r10-0x33]
   14002cba6:	call   QWORD PTR [r10-0x33]
   14002cbaa:	call   QWORD PTR [r10-0x33]
   14002cbae:	call   QWORD PTR [r10-0x33]
   14002cbb2:	call   QWORD PTR [r10-0x33]
   14002cbb6:	call   QWORD PTR [r10-0x33]
   14002cbba:	inc    DWORD PTR [r8]
   14002cbbd:	add    BYTE PTR [rax],al
   14002cbbf:	cmp    eax,DWORD PTR [rax]
   14002cbc1:	add    BYTE PTR [rax],al
   14002cbc3:	sbb    al,0x0
   14002cbc5:	add    BYTE PTR [rax],al
   14002cbc7:	or     al,0x0
   14002cbc9:	add    BYTE PTR [rax],al
   14002cbcb:	add    eax,0x2000000
	...
   14002cc28:	add    BYTE PTR [rax],al
   14002cc2a:	add    BYTE PTR [rdx],al
   14002cc2c:	add    BYTE PTR [rax],al
   14002cc2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02cc34
   14002cc34:	add    BYTE PTR [rax],al
   14002cc36:	add    BYTE PTR [rax+rax*1],bl
   14002cc39:	add    BYTE PTR [rax],al
   14002cc3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002cc3e:	call   QWORD PTR [r10-0x33]
   14002cc42:	call   QWORD PTR [r10-0x33]
   14002cc46:	call   QWORD PTR [r10-0x33]
   14002cc4a:	call   QWORD PTR [r10-0x33]
   14002cc4e:	call   QWORD PTR [r10-0x33]
   14002cc52:	call   QWORD PTR [r10-0x33]
   14002cc56:	call   QWORD PTR [r10-0x33]
   14002cc5a:	call   QWORD PTR [r10-0x33]
   14002cc5e:	call   QWORD PTR [r10-0x33]
   14002cc62:	call   QWORD PTR [r10-0x33]
   14002cc66:	call   QWORD PTR [r10-0x33]
   14002cc6a:	call   QWORD PTR [r10-0x33]
   14002cc6e:	call   QWORD PTR [r10-0x33]
   14002cc72:	call   QWORD PTR [r10-0x33]
   14002cc76:	call   QWORD PTR [r10-0x33]
   14002cc7a:	call   QWORD PTR [r10-0x33]
   14002cc7e:	call   QWORD PTR [r10-0x33]
   14002cc82:	call   FWORD PTR [r14-0x2f]
   14002cc86:	rex.WRX (bad) 
   14002cc88:	(bad)  
   14002cc89:	(bad)  
   14002cc8a:	(bad)  
   14002cc8b:	(bad)  
   14002cc8c:	(bad)  
   14002cc8d:	(bad)  
   14002cc8e:	(bad)  
   14002cc8f:	(bad)  
   14002cc90:	(bad)  
   14002cc91:	(bad)  
   14002cc92:	(bad)  
   14002cc93:	(bad)  
   14002cc94:	(bad)  
   14002cc95:	(bad)  
   14002cc96:	(bad)  
   14002cc97:	(bad)  
   14002cc98:	(bad)  
   14002cc99:	(bad)  
   14002cc9a:	(bad)  
   14002cc9b:	(bad)  
   14002cc9c:	(bad)  
   14002cc9d:	(bad)  
   14002cc9e:	(bad)  
   14002cc9f:	(bad)  
   14002cca0:	in     eax,dx
   14002cca1:	cli    
   14002cca2:	in     al,dx
   14002cca3:	call   QWORD PTR [rdx-0x33]
   14002cca6:	call   QWORD PTR [r10-0x33]
   14002ccaa:	call   QWORD PTR [r10-0x33]
   14002ccae:	call   QWORD PTR [r10-0x33]
   14002ccb2:	call   QWORD PTR [r10-0x33]
   14002ccb6:	call   QWORD PTR [r10-0x33]
   14002ccba:	call   QWORD PTR [r10-0x33]
   14002ccbe:	call   QWORD PTR [r10-0x33]
   14002ccc2:	call   QWORD PTR [r10-0x33]
   14002ccc6:	call   QWORD PTR [r10-0x33]
   14002ccca:	call   QWORD PTR [r10-0x33]
   14002ccce:	call   QWORD PTR [r10-0x33]
   14002ccd2:	call   QWORD PTR [r10-0x33]
   14002ccd6:	call   QWORD PTR [r10-0x33]
   14002ccda:	call   QWORD PTR [r10-0x33]
   14002ccde:	call   QWORD PTR [r10-0x33]
   14002cce2:	call   QWORD PTR [r10-0x33]
   14002cce6:	call   QWORD PTR [r10-0x33]
   14002ccea:	call   QWORD PTR [r10-0x33]
   14002ccee:	call   FWORD PTR [r14-0x6b1d]
   14002ccf5:	(bad)  
   14002ccf6:	(bad)  
   14002ccf7:	(bad)  
   14002ccf8:	(bad)  
   14002ccf9:	(bad)  
   14002ccfa:	(bad)  
   14002ccfb:	(bad)  
   14002ccfc:	(bad)  
   14002ccfd:	(bad)  
   14002ccfe:	(bad)  
   14002ccff:	(bad)  
   14002cd00:	(bad)  
   14002cd01:	(bad)  
   14002cd02:	(bad)  
   14002cd03:	(bad)  
   14002cd04:	(bad)  
   14002cd05:	(bad)  
   14002cd06:	(bad)  
   14002cd07:	(bad)  
   14002cd08:	(bad)  
   14002cd09:	(bad)  
   14002cd0a:	(bad)  
   14002cd0b:	jmp    QWORD PTR [rdx+0x52ff99e4]
   14002cd11:	int    0x41
   14002cd13:	call   QWORD PTR [rdx-0x33]
   14002cd16:	call   QWORD PTR [r10-0x33]
   14002cd1a:	call   QWORD PTR [r10-0x33]
   14002cd1e:	call   QWORD PTR [r10-0x33]
   14002cd22:	call   QWORD PTR [r10-0x33]
   14002cd26:	call   QWORD PTR [r10-0x33]
   14002cd2a:	call   QWORD PTR [r10-0x33]
   14002cd2e:	push   r13
   14002cd31:	cld    
   14002cd32:	cmc    
   14002cd33:	(bad)  
   14002cd34:	(bad)  
   14002cd35:	(bad)  
   14002cd36:	(bad)  
   14002cd37:	(bad)  
   14002cd38:	(bad)  
   14002cd39:	(bad)  
   14002cd3a:	(bad)  
   14002cd3b:	(bad)  
   14002cd3c:	(bad)  
   14002cd3d:	(bad)  
   14002cd3e:	(bad)  
   14002cd3f:	(bad)  
   14002cd40:	(bad)  
   14002cd41:	(bad)  
   14002cd42:	(bad)  
   14002cd43:	(bad)  
   14002cd44:	(bad)  
   14002cd45:	(bad)  
   14002cd46:	(bad)  
   14002cd47:	inc    ebp
   14002cd49:	out    dx,al
   14002cd4a:	mov    edi,0x41cd52ff
   14002cd4f:	call   QWORD PTR [rdx-0x33]
   14002cd52:	call   QWORD PTR [r10-0x33]
   14002cd56:	call   QWORD PTR [r10-0x33]
   14002cd5a:	call   QWORD PTR [r10-0x33]
   14002cd5e:	call   QWORD PTR [r10-0x33]
   14002cd62:	call   QWORD PTR [r10-0x33]
   14002cd66:	call   QWORD PTR [r10-0x33]
   14002cd6a:	call   QWORD PTR [r10-0x33]
   14002cd6e:	call   QWORD PTR [r10-0x33]
   14002cd72:	call   QWORD PTR [r10-0x33]
   14002cd76:	call   QWORD PTR [r10-0x33]
   14002cd7a:	call   QWORD PTR [r10-0x33]
   14002cd7e:	call   QWORD PTR [r10-0x33]
   14002cd82:	call   QWORD PTR [r10-0x33]
   14002cd86:	call   QWORD PTR [r10-0x33]
   14002cd8a:	call   QWORD PTR [r10-0x33]
   14002cd8e:	call   QWORD PTR [r10-0x33]
   14002cd92:	call   QWORD PTR [r10-0x33]
   14002cd96:	call   QWORD PTR [r10-0x33]
   14002cd9a:	call   QWORD PTR [r10-0x33]
   14002cd9e:	call   QWORD PTR [r10-0x33]
   14002cda2:	call   QWORD PTR [r10-0x33]
   14002cda6:	call   QWORD PTR [r10-0x33]
   14002cdaa:	call   QWORD PTR [r10-0x33]
   14002cdae:	call   QWORD PTR [r10-0x33]
   14002cdb2:	call   QWORD PTR [r10-0x33]
   14002cdb6:	call   QWORD PTR [r10-0x33]
   14002cdba:	inc    DWORD PTR [r8]
   14002cdbd:	add    BYTE PTR [rax],al
   14002cdbf:	cmp    eax,DWORD PTR [rax]
   14002cdc1:	add    BYTE PTR [rax],al
   14002cdc3:	sbb    al,0x0
   14002cdc5:	add    BYTE PTR [rax],al
   14002cdc7:	or     al,0x0
   14002cdc9:	add    BYTE PTR [rax],al
   14002cdcb:	add    eax,0x2000000
	...
   14002ce28:	add    BYTE PTR [rax],al
   14002ce2a:	add    BYTE PTR [rdx],al
   14002ce2c:	add    BYTE PTR [rax],al
   14002ce2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02ce34
   14002ce34:	add    BYTE PTR [rax],al
   14002ce36:	add    BYTE PTR [rax+rax*1],bl
   14002ce39:	add    BYTE PTR [rax],al
   14002ce3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002ce3e:	call   QWORD PTR [r10-0x33]
   14002ce42:	call   QWORD PTR [r10-0x33]
   14002ce46:	call   QWORD PTR [r10-0x33]
   14002ce4a:	call   QWORD PTR [r10-0x33]
   14002ce4e:	call   QWORD PTR [r10-0x33]
   14002ce52:	call   QWORD PTR [r10-0x33]
   14002ce56:	call   QWORD PTR [r10-0x33]
   14002ce5a:	call   QWORD PTR [r10-0x33]
   14002ce5e:	call   QWORD PTR [r10-0x33]
   14002ce62:	call   QWORD PTR [r10-0x33]
   14002ce66:	call   QWORD PTR [r10-0x33]
   14002ce6a:	call   QWORD PTR [r10-0x33]
   14002ce6e:	call   QWORD PTR [r10-0x33]
   14002ce72:	call   QWORD PTR [r10-0x33]
   14002ce76:	call   QWORD PTR [r10-0x33]
   14002ce7a:	call   QWORD PTR [r10-0x33]
   14002ce7e:	call   QWORD PTR [r10-0x33]
   14002ce82:	call   QWORD PTR [r14-0x32]
   14002ce86:	rex.RB (bad) 
   14002ce88:	(bad)  
   14002ce89:	(bad)  
   14002ce8a:	(bad)  
   14002ce8b:	(bad)  
   14002ce8c:	(bad)  
   14002ce8d:	(bad)  
   14002ce8e:	(bad)  
   14002ce8f:	(bad)  
   14002ce90:	(bad)  
   14002ce91:	(bad)  
   14002ce92:	(bad)  
   14002ce93:	(bad)  
   14002ce94:	(bad)  
   14002ce95:	(bad)  
   14002ce96:	(bad)  
   14002ce97:	(bad)  
   14002ce98:	(bad)  
   14002ce99:	(bad)  
   14002ce9a:	(bad)  
   14002ce9b:	(bad)  
   14002ce9c:	(bad)  
   14002ce9d:	(bad)  
   14002ce9e:	(bad)  
   14002ce9f:	(bad)  
   14002cea0:	stc    
   14002cea1:	std    
   14002cea2:	clc    
   14002cea3:	call   QWORD PTR [rbx-0x33]
   14002cea6:	rex.X call QWORD PTR [rdx-0x33]
   14002ceaa:	call   QWORD PTR [r10-0x33]
   14002ceae:	call   QWORD PTR [r10-0x33]
   14002ceb2:	call   QWORD PTR [r10-0x33]
   14002ceb6:	call   QWORD PTR [r10-0x33]
   14002ceba:	call   QWORD PTR [r10-0x33]
   14002cebe:	call   QWORD PTR [r10-0x33]
   14002cec2:	call   QWORD PTR [r10-0x33]
   14002cec6:	call   QWORD PTR [r10-0x33]
   14002ceca:	call   QWORD PTR [r10-0x33]
   14002cece:	call   QWORD PTR [r10-0x33]
   14002ced2:	call   QWORD PTR [r10-0x33]
   14002ced6:	call   QWORD PTR [r10-0x33]
   14002ceda:	call   QWORD PTR [r10-0x33]
   14002cede:	call   QWORD PTR [r10-0x33]
   14002cee2:	call   QWORD PTR [r10-0x33]
   14002cee6:	call   QWORD PTR [r10-0x33]
   14002ceea:	call   QWORD PTR [r10-0x33]
   14002ceee:	jmp    FWORD PTR [r10-0x5d1a]
   14002cef5:	(bad)  
   14002cef6:	(bad)  
   14002cef7:	(bad)  
   14002cef8:	(bad)  
   14002cef9:	(bad)  
   14002cefa:	(bad)  
   14002cefb:	(bad)  
   14002cefc:	(bad)  
   14002cefd:	(bad)  
   14002cefe:	(bad)  
   14002ceff:	(bad)  
   14002cf00:	(bad)  
   14002cf01:	(bad)  
   14002cf02:	(bad)  
   14002cf03:	(bad)  
   14002cf04:	(bad)  
   14002cf05:	(bad)  
   14002cf06:	(bad)  
   14002cf07:	(bad)  
   14002cf08:	(bad)  
   14002cf09:	(bad)  
   14002cf0a:	(bad)  
   14002cf0b:	call   FWORD PTR [rbx+0x52ff91e2]
   14002cf11:	int    0x41
   14002cf13:	call   QWORD PTR [rdx-0x33]
   14002cf16:	call   QWORD PTR [r10-0x33]
   14002cf1a:	call   QWORD PTR [r10-0x33]
   14002cf1e:	call   QWORD PTR [r10-0x33]
   14002cf22:	call   QWORD PTR [r10-0x33]
   14002cf26:	call   QWORD PTR [r10-0x33]
   14002cf2a:	call   QWORD PTR [r10-0x33]
   14002cf2e:	push   r13
   14002cf31:	cld    
   14002cf32:	cmc    
   14002cf33:	(bad)  
   14002cf34:	(bad)  
   14002cf35:	(bad)  
   14002cf36:	(bad)  
   14002cf37:	(bad)  
   14002cf38:	(bad)  
   14002cf39:	(bad)  
   14002cf3a:	(bad)  
   14002cf3b:	(bad)  
   14002cf3c:	(bad)  
   14002cf3d:	(bad)  
   14002cf3e:	(bad)  
   14002cf3f:	(bad)  
   14002cf40:	(bad)  
   14002cf41:	(bad)  
   14002cf42:	(bad)  
   14002cf43:	(bad)  
   14002cf44:	(bad)  
   14002cf45:	(bad)  
   14002cf46:	(bad)  
   14002cf47:	inc    ebp
   14002cf49:	out    dx,al
   14002cf4a:	mov    edi,0x41cd52ff
   14002cf4f:	call   QWORD PTR [rdx-0x33]
   14002cf52:	call   QWORD PTR [r10-0x33]
   14002cf56:	call   QWORD PTR [r10-0x33]
   14002cf5a:	call   QWORD PTR [r10-0x33]
   14002cf5e:	call   QWORD PTR [r10-0x33]
   14002cf62:	call   QWORD PTR [r10-0x33]
   14002cf66:	call   QWORD PTR [r10-0x33]
   14002cf6a:	call   QWORD PTR [r10-0x33]
   14002cf6e:	call   QWORD PTR [r10-0x33]
   14002cf72:	call   QWORD PTR [r10-0x33]
   14002cf76:	call   QWORD PTR [r10-0x33]
   14002cf7a:	call   QWORD PTR [r10-0x33]
   14002cf7e:	call   QWORD PTR [r10-0x33]
   14002cf82:	call   QWORD PTR [r10-0x33]
   14002cf86:	call   QWORD PTR [r10-0x33]
   14002cf8a:	call   QWORD PTR [r10-0x33]
   14002cf8e:	call   QWORD PTR [r10-0x33]
   14002cf92:	call   QWORD PTR [r10-0x33]
   14002cf96:	call   QWORD PTR [r10-0x33]
   14002cf9a:	call   QWORD PTR [r10-0x33]
   14002cf9e:	call   QWORD PTR [r10-0x33]
   14002cfa2:	call   QWORD PTR [r10-0x33]
   14002cfa6:	call   QWORD PTR [r10-0x33]
   14002cfaa:	call   QWORD PTR [r10-0x33]
   14002cfae:	call   QWORD PTR [r10-0x33]
   14002cfb2:	call   QWORD PTR [r10-0x33]
   14002cfb6:	call   QWORD PTR [r10-0x33]
   14002cfba:	inc    DWORD PTR [r8]
   14002cfbd:	add    BYTE PTR [rax],al
   14002cfbf:	cmp    eax,DWORD PTR [rax]
   14002cfc1:	add    BYTE PTR [rax],al
   14002cfc3:	sbb    al,0x0
   14002cfc5:	add    BYTE PTR [rax],al
   14002cfc7:	or     al,0x0
   14002cfc9:	add    BYTE PTR [rax],al
   14002cfcb:	add    eax,0x2000000
	...
   14002d028:	add    BYTE PTR [rax],al
   14002d02a:	add    BYTE PTR [rdx],al
   14002d02c:	add    BYTE PTR [rax],al
   14002d02e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02d034
   14002d034:	add    BYTE PTR [rax],al
   14002d036:	add    BYTE PTR [rax+rax*1],bl
   14002d039:	add    BYTE PTR [rax],al
   14002d03b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002d03e:	call   QWORD PTR [r10-0x33]
   14002d042:	call   QWORD PTR [r10-0x33]
   14002d046:	call   QWORD PTR [r10-0x33]
   14002d04a:	call   QWORD PTR [r10-0x33]
   14002d04e:	call   QWORD PTR [r10-0x33]
   14002d052:	call   QWORD PTR [r10-0x33]
   14002d056:	call   QWORD PTR [r10-0x33]
   14002d05a:	call   QWORD PTR [r10-0x33]
   14002d05e:	call   QWORD PTR [r10-0x33]
   14002d062:	call   QWORD PTR [r10-0x33]
   14002d066:	call   QWORD PTR [r10-0x33]
   14002d06a:	call   QWORD PTR [r10-0x33]
   14002d06e:	call   QWORD PTR [r10-0x33]
   14002d072:	call   QWORD PTR [r10-0x33]
   14002d076:	call   QWORD PTR [r10-0x33]
   14002d07a:	call   QWORD PTR [r10-0x33]
   14002d07e:	call   QWORD PTR [r10-0x33]
   14002d082:	call   QWORD PTR [r10-0x33]
   14002d086:	push   r15
   14002d089:	std    
   14002d08a:	idiv   bh
   14002d08c:	(bad)  
   14002d08d:	(bad)  
   14002d08e:	(bad)  
   14002d08f:	(bad)  
   14002d090:	(bad)  
   14002d091:	(bad)  
   14002d092:	(bad)  
   14002d093:	(bad)  
   14002d094:	(bad)  
   14002d095:	(bad)  
   14002d096:	(bad)  
   14002d097:	(bad)  
   14002d098:	(bad)  
   14002d099:	(bad)  
   14002d09a:	(bad)  
   14002d09b:	(bad)  
   14002d09c:	(bad)  
   14002d09d:	(bad)  
   14002d09e:	(bad)  
   14002d09f:	(bad)  
   14002d0a0:	(bad)  
   14002d0a1:	(bad)  
   14002d0a2:	(bad)  
   14002d0a3:	jmp    QWORD PTR [rdx-0x2e]
   14002d0a6:	push   rdx
   14002d0a7:	call   QWORD PTR [rdx-0x33]
   14002d0aa:	call   QWORD PTR [r10-0x33]
   14002d0ae:	call   QWORD PTR [r10-0x33]
   14002d0b2:	call   QWORD PTR [r10-0x33]
   14002d0b6:	call   QWORD PTR [r10-0x33]
   14002d0ba:	call   QWORD PTR [r10-0x33]
   14002d0be:	call   QWORD PTR [r10-0x33]
   14002d0c2:	call   QWORD PTR [r10-0x33]
   14002d0c6:	call   QWORD PTR [r10-0x33]
   14002d0ca:	call   QWORD PTR [r10-0x33]
   14002d0ce:	call   QWORD PTR [r10-0x33]
   14002d0d2:	call   QWORD PTR [r10-0x33]
   14002d0d6:	call   QWORD PTR [r10-0x33]
   14002d0da:	call   QWORD PTR [r10-0x33]
   14002d0de:	call   QWORD PTR [r10-0x33]
   14002d0e2:	call   QWORD PTR [r10-0x33]
   14002d0e6:	call   QWORD PTR [r10-0x33]
   14002d0ea:	call   QWORD PTR [r10-0x33]
   14002d0ee:	rex.B (bad) 
   14002d0f0:	mov    edi,0xffffb8ec
   14002d0f5:	(bad)  
   14002d0f6:	(bad)  
   14002d0f7:	(bad)  
   14002d0f8:	(bad)  
   14002d0f9:	(bad)  
   14002d0fa:	(bad)  
   14002d0fb:	(bad)  
   14002d0fc:	(bad)  
   14002d0fd:	(bad)  
   14002d0fe:	(bad)  
   14002d0ff:	(bad)  
   14002d100:	(bad)  
   14002d101:	(bad)  
   14002d102:	(bad)  
   14002d103:	(bad)  
   14002d104:	(bad)  
   14002d105:	(bad)  
   14002d106:	(bad)  
   14002d107:	(bad)  
   14002d108:	(bad)  
   14002d109:	(bad)  
   14002d10a:	(bad)  
   14002d10b:	dec    DWORD PTR [rdi+0x52ff84df]
   14002d111:	int    0x41
   14002d113:	call   QWORD PTR [rdx-0x33]
   14002d116:	call   QWORD PTR [r10-0x33]
   14002d11a:	jmp    QWORD PTR [r13-0x1700621b]
   14002d121:	clc    
   14002d122:	out    0xff,al
   14002d124:	call   0x12902b821
   14002d129:	clc    
   14002d12a:	out    0xff,al
   14002d12c:	call   0x13f02b829
   14002d131:	(bad)  
   14002d132:	(bad)  
   14002d133:	(bad)  
   14002d134:	(bad)  
   14002d135:	(bad)  
   14002d136:	(bad)  
   14002d137:	(bad)  
   14002d138:	(bad)  
   14002d139:	(bad)  
   14002d13a:	(bad)  
   14002d13b:	(bad)  
   14002d13c:	(bad)  
   14002d13d:	(bad)  
   14002d13e:	(bad)  
   14002d13f:	(bad)  
   14002d140:	(bad)  
   14002d141:	(bad)  
   14002d142:	(bad)  
   14002d143:	(bad)  
   14002d144:	(bad)  
   14002d145:	(bad)  
   14002d146:	(bad)  
   14002d147:	(bad)  
   14002d148:	clc    
   14002d149:	std    
   14002d14a:	idiv   edi
   14002d14c:	call   0x12902b849
   14002d151:	clc    
   14002d152:	out    0xff,al
   14002d154:	call   0x12902b851
   14002d159:	clc    
   14002d15a:	out    0xff,al
   14002d15c:	call   0x12902b859
   14002d161:	clc    
   14002d162:	out    0xff,al
   14002d164:	call   0x12902b861
   14002d169:	clc    
   14002d16a:	out    0xff,al
   14002d16c:	pop    rax
   14002d16d:	iret   
   14002d16e:	rex.W call QWORD PTR [rdx-0x33]
   14002d172:	call   QWORD PTR [r10-0x33]
   14002d176:	call   QWORD PTR [r10-0x33]
   14002d17a:	call   QWORD PTR [r10-0x33]
   14002d17e:	call   QWORD PTR [r10-0x33]
   14002d182:	call   QWORD PTR [r10-0x33]
   14002d186:	call   QWORD PTR [r10-0x33]
   14002d18a:	call   QWORD PTR [r10-0x33]
   14002d18e:	call   QWORD PTR [r10-0x33]
   14002d192:	call   QWORD PTR [r10-0x33]
   14002d196:	call   QWORD PTR [r10-0x33]
   14002d19a:	call   QWORD PTR [r10-0x33]
   14002d19e:	call   QWORD PTR [r10-0x33]
   14002d1a2:	call   QWORD PTR [r10-0x33]
   14002d1a6:	call   QWORD PTR [r10-0x33]
   14002d1aa:	call   QWORD PTR [r10-0x33]
   14002d1ae:	call   QWORD PTR [r10-0x33]
   14002d1b2:	call   QWORD PTR [r10-0x33]
   14002d1b6:	call   QWORD PTR [r10-0x33]
   14002d1ba:	inc    DWORD PTR [r8]
   14002d1bd:	add    BYTE PTR [rax],al
   14002d1bf:	cmp    eax,DWORD PTR [rax]
   14002d1c1:	add    BYTE PTR [rax],al
   14002d1c3:	sbb    al,0x0
   14002d1c5:	add    BYTE PTR [rax],al
   14002d1c7:	or     al,0x0
   14002d1c9:	add    BYTE PTR [rax],al
   14002d1cb:	add    eax,0x2000000
	...
   14002d228:	add    BYTE PTR [rax],al
   14002d22a:	add    BYTE PTR [rdx],al
   14002d22c:	add    BYTE PTR [rax],al
   14002d22e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02d234
   14002d234:	add    BYTE PTR [rax],al
   14002d236:	add    BYTE PTR [rax+rax*1],bl
   14002d239:	add    BYTE PTR [rax],al
   14002d23b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002d23e:	call   QWORD PTR [r10-0x33]
   14002d242:	call   QWORD PTR [r10-0x33]
   14002d246:	call   QWORD PTR [r10-0x33]
   14002d24a:	call   QWORD PTR [r10-0x33]
   14002d24e:	call   QWORD PTR [r10-0x33]
   14002d252:	call   QWORD PTR [r10-0x33]
   14002d256:	call   QWORD PTR [r10-0x33]
   14002d25a:	call   QWORD PTR [r10-0x33]
   14002d25e:	call   QWORD PTR [r10-0x33]
   14002d262:	call   QWORD PTR [r10-0x33]
   14002d266:	call   QWORD PTR [r10-0x33]
   14002d26a:	call   QWORD PTR [r10-0x33]
   14002d26e:	call   QWORD PTR [r10-0x33]
   14002d272:	call   QWORD PTR [r10-0x33]
   14002d276:	call   QWORD PTR [r10-0x33]
   14002d27a:	call   QWORD PTR [r10-0x33]
   14002d27e:	call   QWORD PTR [r10-0x33]
   14002d282:	call   QWORD PTR [r10-0x33]
   14002d286:	rex.B (bad) 
   14002d288:	(bad)  
   14002d28a:	(bad)  
   14002d28c:	(bad)  
   14002d28d:	(bad)  
   14002d28e:	(bad)  
   14002d28f:	(bad)  
   14002d290:	(bad)  
   14002d291:	(bad)  
   14002d292:	(bad)  
   14002d293:	(bad)  
   14002d294:	(bad)  
   14002d295:	(bad)  
   14002d296:	(bad)  
   14002d297:	(bad)  
   14002d298:	(bad)  
   14002d299:	(bad)  
   14002d29a:	(bad)  
   14002d29b:	(bad)  
   14002d29c:	(bad)  
   14002d29d:	(bad)  
   14002d29e:	(bad)  
   14002d29f:	(bad)  
   14002d2a0:	(bad)  
   14002d2a1:	(bad)  
   14002d2a2:	(bad)  
   14002d2a3:	push   QWORD PTR [rdi-0x28]
   14002d2a6:	imul   edi,edi,0xff41cd52
   14002d2ac:	push   rdx
   14002d2ad:	int    0x41
   14002d2af:	call   QWORD PTR [rdx-0x33]
   14002d2b2:	call   QWORD PTR [r10-0x33]
   14002d2b6:	call   QWORD PTR [r10-0x33]
   14002d2ba:	call   QWORD PTR [r10-0x33]
   14002d2be:	call   QWORD PTR [r10-0x33]
   14002d2c2:	call   QWORD PTR [r10-0x33]
   14002d2c6:	call   QWORD PTR [r10-0x33]
   14002d2ca:	call   QWORD PTR [r10-0x33]
   14002d2ce:	call   QWORD PTR [r10-0x33]
   14002d2d2:	call   QWORD PTR [r10-0x33]
   14002d2d6:	call   QWORD PTR [r10-0x33]
   14002d2da:	call   QWORD PTR [r10-0x33]
   14002d2de:	call   QWORD PTR [r10-0x33]
   14002d2e2:	call   QWORD PTR [r10-0x33]
   14002d2e6:	call   QWORD PTR [r10-0x33]
   14002d2ea:	call   QWORD PTR [r10-0x33]
   14002d2ee:	call   r11
   14002d2f1:	repnz iret 
   14002d2f3:	(bad)  
   14002d2f4:	(bad)  
   14002d2f5:	(bad)  
   14002d2f6:	(bad)  
   14002d2f7:	(bad)  
   14002d2f8:	(bad)  
   14002d2f9:	(bad)  
   14002d2fa:	(bad)  
   14002d2fb:	(bad)  
   14002d2fc:	(bad)  
   14002d2fd:	(bad)  
   14002d2fe:	(bad)  
   14002d2ff:	(bad)  
   14002d300:	(bad)  
   14002d301:	(bad)  
   14002d302:	(bad)  
   14002d303:	(bad)  
   14002d304:	(bad)  
   14002d305:	(bad)  
   14002d306:	(bad)  
   14002d307:	(bad)  
   14002d308:	(bad)  
   14002d309:	(bad)  
   14002d30a:	(bad)  
   14002d30b:	push   QWORD PTR [rbp-0x29]
   14002d30e:	push   0x41cd52ff
   14002d313:	call   QWORD PTR [rdx-0x33]
   14002d316:	call   QWORD PTR [r10-0x33]
   14002d31a:	push   QWORD PTR [r10-0x5417]
   14002d321:	(bad)  
   14002d322:	(bad)  
   14002d323:	(bad)  
   14002d324:	(bad)  
   14002d325:	(bad)  
   14002d326:	(bad)  
   14002d327:	(bad)  
   14002d328:	(bad)  
   14002d329:	(bad)  
   14002d32a:	(bad)  
   14002d32b:	(bad)  
   14002d32c:	(bad)  
   14002d32d:	(bad)  
   14002d32e:	(bad)  
   14002d32f:	(bad)  
   14002d330:	(bad)  
   14002d331:	(bad)  
   14002d332:	(bad)  
   14002d333:	(bad)  
   14002d334:	(bad)  
   14002d335:	(bad)  
   14002d336:	(bad)  
   14002d337:	(bad)  
   14002d338:	(bad)  
   14002d339:	(bad)  
   14002d33a:	(bad)  
   14002d33b:	(bad)  
   14002d33c:	(bad)  
   14002d33d:	(bad)  
   14002d33e:	(bad)  
   14002d33f:	(bad)  
   14002d340:	(bad)  
   14002d341:	(bad)  
   14002d342:	(bad)  
   14002d343:	(bad)  
   14002d344:	(bad)  
   14002d345:	(bad)  
   14002d346:	(bad)  
   14002d347:	(bad)  
   14002d348:	(bad)  
   14002d349:	(bad)  
   14002d34a:	(bad)  
   14002d34b:	(bad)  
   14002d34c:	(bad)  
   14002d34d:	(bad)  
   14002d34e:	(bad)  
   14002d34f:	(bad)  
   14002d350:	(bad)  
   14002d351:	(bad)  
   14002d352:	(bad)  
   14002d353:	(bad)  
   14002d354:	(bad)  
   14002d355:	(bad)  
   14002d356:	(bad)  
   14002d357:	(bad)  
   14002d358:	(bad)  
   14002d359:	(bad)  
   14002d35a:	(bad)  
   14002d35b:	(bad)  
   14002d35c:	(bad)  
   14002d35d:	(bad)  
   14002d35e:	(bad)  
   14002d35f:	(bad)  
   14002d360:	(bad)  
   14002d361:	(bad)  
   14002d362:	(bad)  
   14002d363:	(bad)  
   14002d364:	(bad)  
   14002d365:	(bad)  
   14002d366:	(bad)  
   14002d367:	(bad)  
   14002d368:	(bad)  
   14002d369:	(bad)  
   14002d36a:	(bad)  
   14002d36b:	call   FWORD PTR [rcx-0x31]
   14002d36e:	rex.W call QWORD PTR [rdx-0x33]
   14002d372:	call   QWORD PTR [r10-0x33]
   14002d376:	call   QWORD PTR [r10-0x33]
   14002d37a:	call   QWORD PTR [r10-0x33]
   14002d37e:	call   QWORD PTR [r10-0x33]
   14002d382:	call   QWORD PTR [r10-0x33]
   14002d386:	call   QWORD PTR [r10-0x33]
   14002d38a:	call   QWORD PTR [r10-0x33]
   14002d38e:	call   QWORD PTR [r10-0x33]
   14002d392:	call   QWORD PTR [r10-0x33]
   14002d396:	call   QWORD PTR [r10-0x33]
   14002d39a:	call   QWORD PTR [r10-0x33]
   14002d39e:	call   QWORD PTR [r10-0x33]
   14002d3a2:	call   QWORD PTR [r10-0x33]
   14002d3a6:	call   QWORD PTR [r10-0x33]
   14002d3aa:	call   QWORD PTR [r10-0x33]
   14002d3ae:	call   QWORD PTR [r10-0x33]
   14002d3b2:	call   QWORD PTR [r10-0x33]
   14002d3b6:	call   QWORD PTR [r10-0x33]
   14002d3ba:	inc    DWORD PTR [r8]
   14002d3bd:	add    BYTE PTR [rax],al
   14002d3bf:	cmp    eax,DWORD PTR [rax]
   14002d3c1:	add    BYTE PTR [rax],al
   14002d3c3:	sbb    al,0x0
   14002d3c5:	add    BYTE PTR [rax],al
   14002d3c7:	or     al,0x0
   14002d3c9:	add    BYTE PTR [rax],al
   14002d3cb:	add    eax,0x2000000
	...
   14002d428:	add    BYTE PTR [rax],al
   14002d42a:	add    BYTE PTR [rdx],al
   14002d42c:	add    BYTE PTR [rax],al
   14002d42e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02d434
   14002d434:	add    BYTE PTR [rax],al
   14002d436:	add    BYTE PTR [rax+rax*1],bl
   14002d439:	add    BYTE PTR [rax],al
   14002d43b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002d43e:	call   QWORD PTR [r10-0x33]
   14002d442:	call   QWORD PTR [r10-0x33]
   14002d446:	call   QWORD PTR [r10-0x33]
   14002d44a:	call   QWORD PTR [r10-0x33]
   14002d44e:	call   QWORD PTR [r10-0x33]
   14002d452:	call   QWORD PTR [r10-0x33]
   14002d456:	call   QWORD PTR [r10-0x33]
   14002d45a:	call   QWORD PTR [r10-0x33]
   14002d45e:	call   QWORD PTR [r10-0x33]
   14002d462:	call   QWORD PTR [r10-0x33]
   14002d466:	call   QWORD PTR [r10-0x33]
   14002d46a:	call   QWORD PTR [r10-0x33]
   14002d46e:	call   QWORD PTR [r10-0x33]
   14002d472:	call   QWORD PTR [r10-0x33]
   14002d476:	call   QWORD PTR [r10-0x33]
   14002d47a:	call   QWORD PTR [r10-0x33]
   14002d47e:	call   QWORD PTR [r10-0x33]
   14002d482:	call   QWORD PTR [r10-0x33]
   14002d486:	inc    r9d
   14002d489:	in     eax,dx
   14002d48a:	mov    edx,0xffffffff
   14002d48f:	(bad)  
   14002d490:	(bad)  
   14002d491:	(bad)  
   14002d492:	(bad)  
   14002d493:	(bad)  
   14002d494:	(bad)  
   14002d495:	(bad)  
   14002d496:	(bad)  
   14002d497:	(bad)  
   14002d498:	(bad)  
   14002d499:	(bad)  
   14002d49a:	(bad)  
   14002d49b:	(bad)  
   14002d49c:	(bad)  
   14002d49d:	(bad)  
   14002d49e:	(bad)  
   14002d49f:	(bad)  
   14002d4a0:	(bad)  
   14002d4a1:	(bad)  
   14002d4a2:	(bad)  
   14002d4a3:	call   QWORD PTR [rax+0x52ff86df]
   14002d4a9:	int    0x41
   14002d4ab:	call   QWORD PTR [rdx-0x33]
   14002d4ae:	call   QWORD PTR [r10-0x33]
   14002d4b2:	call   QWORD PTR [r10-0x33]
   14002d4b6:	call   QWORD PTR [r10-0x33]
   14002d4ba:	call   QWORD PTR [r10-0x33]
   14002d4be:	call   QWORD PTR [r10-0x33]
   14002d4c2:	call   QWORD PTR [r10-0x33]
   14002d4c6:	call   QWORD PTR [r10-0x33]
   14002d4ca:	call   QWORD PTR [r10-0x33]
   14002d4ce:	call   QWORD PTR [r10-0x33]
   14002d4d2:	call   QWORD PTR [r10-0x33]
   14002d4d6:	call   QWORD PTR [r10-0x33]
   14002d4da:	call   QWORD PTR [r10-0x33]
   14002d4de:	call   QWORD PTR [r10-0x33]
   14002d4e2:	call   QWORD PTR [r10-0x33]
   14002d4e6:	call   QWORD PTR [r10-0x33]
   14002d4ea:	call   QWORD PTR [r10-0x33]
   14002d4ee:	rex.B (bad) 
   14002d4f0:	in     al,dx
   14002d4f1:	cli    
   14002d4f2:	(bad)  
   14002d4f3:	(bad)  
   14002d4f4:	(bad)  
   14002d4f5:	(bad)  
   14002d4f6:	(bad)  
   14002d4f7:	(bad)  
   14002d4f8:	(bad)  
   14002d4f9:	(bad)  
   14002d4fa:	(bad)  
   14002d4fb:	(bad)  
   14002d4fc:	(bad)  
   14002d4fd:	(bad)  
   14002d4fe:	(bad)  
   14002d4ff:	(bad)  
   14002d500:	(bad)  
   14002d501:	(bad)  
   14002d502:	(bad)  
   14002d503:	(bad)  
   14002d504:	(bad)  
   14002d505:	(bad)  
   14002d506:	(bad)  
   14002d507:	(bad)  
   14002d508:	(bad)  
   14002d509:	(bad)  
   14002d50a:	(bad)  
   14002d50b:	call   FWORD PTR [rbx-0x30]
   14002d50e:	rex.WXB call QWORD PTR [r10-0x33]
   14002d512:	call   QWORD PTR [r10-0x33]
   14002d516:	call   QWORD PTR [r10-0x33]
   14002d51a:	push   QWORD PTR [r10-0x5417]
   14002d521:	(bad)  
   14002d522:	(bad)  
   14002d523:	(bad)  
   14002d524:	(bad)  
   14002d525:	(bad)  
   14002d526:	(bad)  
   14002d527:	(bad)  
   14002d528:	(bad)  
   14002d529:	(bad)  
   14002d52a:	(bad)  
   14002d52b:	(bad)  
   14002d52c:	(bad)  
   14002d52d:	(bad)  
   14002d52e:	(bad)  
   14002d52f:	(bad)  
   14002d530:	(bad)  
   14002d531:	(bad)  
   14002d532:	(bad)  
   14002d533:	(bad)  
   14002d534:	(bad)  
   14002d535:	(bad)  
   14002d536:	(bad)  
   14002d537:	(bad)  
   14002d538:	(bad)  
   14002d539:	(bad)  
   14002d53a:	(bad)  
   14002d53b:	(bad)  
   14002d53c:	(bad)  
   14002d53d:	(bad)  
   14002d53e:	(bad)  
   14002d53f:	(bad)  
   14002d540:	(bad)  
   14002d541:	(bad)  
   14002d542:	(bad)  
   14002d543:	(bad)  
   14002d544:	(bad)  
   14002d545:	(bad)  
   14002d546:	(bad)  
   14002d547:	(bad)  
   14002d548:	(bad)  
   14002d549:	(bad)  
   14002d54a:	(bad)  
   14002d54b:	(bad)  
   14002d54c:	(bad)  
   14002d54d:	(bad)  
   14002d54e:	(bad)  
   14002d54f:	(bad)  
   14002d550:	(bad)  
   14002d551:	(bad)  
   14002d552:	(bad)  
   14002d553:	(bad)  
   14002d554:	(bad)  
   14002d555:	(bad)  
   14002d556:	(bad)  
   14002d557:	(bad)  
   14002d558:	(bad)  
   14002d559:	(bad)  
   14002d55a:	(bad)  
   14002d55b:	(bad)  
   14002d55c:	(bad)  
   14002d55d:	(bad)  
   14002d55e:	(bad)  
   14002d55f:	(bad)  
   14002d560:	(bad)  
   14002d561:	(bad)  
   14002d562:	(bad)  
   14002d563:	(bad)  
   14002d564:	(bad)  
   14002d565:	(bad)  
   14002d566:	(bad)  
   14002d567:	(bad)  
   14002d568:	(bad)  
   14002d569:	(bad)  
   14002d56a:	(bad)  
   14002d56b:	call   FWORD PTR [rcx-0x31]
   14002d56e:	rex.W call QWORD PTR [rdx-0x33]
   14002d572:	call   QWORD PTR [r10-0x33]
   14002d576:	call   QWORD PTR [r10-0x33]
   14002d57a:	call   QWORD PTR [r10-0x33]
   14002d57e:	call   QWORD PTR [r10-0x33]
   14002d582:	call   QWORD PTR [r10-0x33]
   14002d586:	call   QWORD PTR [r10-0x33]
   14002d58a:	call   QWORD PTR [r10-0x33]
   14002d58e:	call   QWORD PTR [r10-0x33]
   14002d592:	call   QWORD PTR [r10-0x33]
   14002d596:	call   QWORD PTR [r10-0x33]
   14002d59a:	call   QWORD PTR [r10-0x33]
   14002d59e:	call   QWORD PTR [r10-0x33]
   14002d5a2:	call   QWORD PTR [r10-0x33]
   14002d5a6:	call   QWORD PTR [r10-0x33]
   14002d5aa:	call   QWORD PTR [r10-0x33]
   14002d5ae:	call   QWORD PTR [r10-0x33]
   14002d5b2:	call   QWORD PTR [r10-0x33]
   14002d5b6:	call   QWORD PTR [r10-0x33]
   14002d5ba:	inc    DWORD PTR [r8]
   14002d5bd:	add    BYTE PTR [rax],al
   14002d5bf:	cmp    eax,DWORD PTR [rax]
   14002d5c1:	add    BYTE PTR [rax],al
   14002d5c3:	sbb    al,0x0
   14002d5c5:	add    BYTE PTR [rax],al
   14002d5c7:	or     al,0x0
   14002d5c9:	add    BYTE PTR [rax],al
   14002d5cb:	add    eax,0x2000000
	...
   14002d628:	add    BYTE PTR [rax],al
   14002d62a:	add    BYTE PTR [rdx],al
   14002d62c:	add    BYTE PTR [rax],al
   14002d62e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02d634
   14002d634:	add    BYTE PTR [rax],al
   14002d636:	add    BYTE PTR [rax+rax*1],bl
   14002d639:	add    BYTE PTR [rax],al
   14002d63b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002d63e:	call   QWORD PTR [r10-0x33]
   14002d642:	call   QWORD PTR [r10-0x33]
   14002d646:	call   QWORD PTR [r10-0x33]
   14002d64a:	call   QWORD PTR [r10-0x33]
   14002d64e:	call   QWORD PTR [r10-0x33]
   14002d652:	call   QWORD PTR [r10-0x33]
   14002d656:	call   QWORD PTR [r10-0x33]
   14002d65a:	call   QWORD PTR [r10-0x33]
   14002d65e:	call   QWORD PTR [r10-0x33]
   14002d662:	call   QWORD PTR [r10-0x33]
   14002d666:	call   QWORD PTR [r10-0x33]
   14002d66a:	call   QWORD PTR [r10-0x33]
   14002d66e:	call   QWORD PTR [r10-0x33]
   14002d672:	call   QWORD PTR [r10-0x33]
   14002d676:	call   QWORD PTR [r10-0x33]
   14002d67a:	call   QWORD PTR [r10-0x33]
   14002d67e:	call   QWORD PTR [r10-0x33]
   14002d682:	call   QWORD PTR [r10-0x33]
   14002d686:	jmp    QWORD PTR [r13-0x621b]
   14002d68d:	(bad)  
   14002d68e:	(bad)  
   14002d68f:	(bad)  
   14002d690:	(bad)  
   14002d691:	(bad)  
   14002d692:	(bad)  
   14002d693:	(bad)  
   14002d694:	(bad)  
   14002d695:	(bad)  
   14002d696:	(bad)  
   14002d697:	(bad)  
   14002d698:	(bad)  
   14002d699:	(bad)  
   14002d69a:	(bad)  
   14002d69b:	(bad)  
   14002d69c:	(bad)  
   14002d69d:	(bad)  
   14002d69e:	(bad)  
   14002d69f:	(bad)  
   14002d6a0:	(bad)  
   14002d6a1:	(bad)  
   14002d6a2:	(bad)  
   14002d6a3:	(bad)  
   14002d6a4:	mov    eax,0x52ffb2eb
   14002d6a9:	int    0x41
   14002d6ab:	call   QWORD PTR [rdx-0x33]
   14002d6ae:	call   QWORD PTR [r10-0x33]
   14002d6b2:	call   QWORD PTR [r10-0x33]
   14002d6b6:	call   QWORD PTR [r10-0x33]
   14002d6ba:	call   QWORD PTR [r10-0x33]
   14002d6be:	call   QWORD PTR [r10-0x33]
   14002d6c2:	call   QWORD PTR [r10-0x33]
   14002d6c6:	call   QWORD PTR [r10-0x33]
   14002d6ca:	call   QWORD PTR [r10-0x33]
   14002d6ce:	call   QWORD PTR [r10-0x33]
   14002d6d2:	call   QWORD PTR [r10-0x33]
   14002d6d6:	call   QWORD PTR [r10-0x33]
   14002d6da:	call   QWORD PTR [r10-0x33]
   14002d6de:	call   QWORD PTR [r10-0x33]
   14002d6e2:	call   QWORD PTR [r10-0x33]
   14002d6e6:	call   QWORD PTR [r10-0x33]
   14002d6ea:	jmp    QWORD PTR [r15-0x2d]
   14002d6ee:	pop    rax
   14002d6ef:	(bad)  
   14002d6f0:	(bad)  
   14002d6f1:	(bad)  
   14002d6f2:	(bad)  
   14002d6f3:	(bad)  
   14002d6f4:	(bad)  
   14002d6f5:	(bad)  
   14002d6f6:	(bad)  
   14002d6f7:	(bad)  
   14002d6f8:	(bad)  
   14002d6f9:	(bad)  
   14002d6fa:	(bad)  
   14002d6fb:	(bad)  
   14002d6fc:	(bad)  
   14002d6fd:	(bad)  
   14002d6fe:	(bad)  
   14002d6ff:	(bad)  
   14002d700:	(bad)  
   14002d701:	(bad)  
   14002d702:	(bad)  
   14002d703:	(bad)  
   14002d704:	(bad)  
   14002d705:	(bad)  
   14002d706:	(bad)  
   14002d707:	(bad)  
   14002d708:	in     al,dx
   14002d709:	cli    
   14002d70a:	(bad)  
   14002d70b:	call   QWORD PTR [rdx-0x33]
   14002d70e:	call   QWORD PTR [r10-0x33]
   14002d712:	call   QWORD PTR [r10-0x33]
   14002d716:	call   QWORD PTR [r10-0x33]
   14002d71a:	push   QWORD PTR [r10-0x5417]
   14002d721:	(bad)  
   14002d722:	(bad)  
   14002d723:	(bad)  
   14002d724:	(bad)  
   14002d725:	(bad)  
   14002d726:	(bad)  
   14002d727:	(bad)  
   14002d728:	(bad)  
   14002d729:	(bad)  
   14002d72a:	(bad)  
   14002d72b:	(bad)  
   14002d72c:	(bad)  
   14002d72d:	(bad)  
   14002d72e:	(bad)  
   14002d72f:	(bad)  
   14002d730:	(bad)  
   14002d731:	(bad)  
   14002d732:	(bad)  
   14002d733:	(bad)  
   14002d734:	(bad)  
   14002d735:	(bad)  
   14002d736:	(bad)  
   14002d737:	(bad)  
   14002d738:	(bad)  
   14002d739:	(bad)  
   14002d73a:	(bad)  
   14002d73b:	(bad)  
   14002d73c:	(bad)  
   14002d73d:	(bad)  
   14002d73e:	(bad)  
   14002d73f:	(bad)  
   14002d740:	(bad)  
   14002d741:	(bad)  
   14002d742:	(bad)  
   14002d743:	(bad)  
   14002d744:	(bad)  
   14002d745:	(bad)  
   14002d746:	(bad)  
   14002d747:	(bad)  
   14002d748:	(bad)  
   14002d749:	(bad)  
   14002d74a:	(bad)  
   14002d74b:	(bad)  
   14002d74c:	(bad)  
   14002d74d:	(bad)  
   14002d74e:	(bad)  
   14002d74f:	(bad)  
   14002d750:	(bad)  
   14002d751:	(bad)  
   14002d752:	(bad)  
   14002d753:	(bad)  
   14002d754:	(bad)  
   14002d755:	(bad)  
   14002d756:	(bad)  
   14002d757:	(bad)  
   14002d758:	(bad)  
   14002d759:	(bad)  
   14002d75a:	(bad)  
   14002d75b:	(bad)  
   14002d75c:	(bad)  
   14002d75d:	(bad)  
   14002d75e:	(bad)  
   14002d75f:	(bad)  
   14002d760:	(bad)  
   14002d761:	(bad)  
   14002d762:	(bad)  
   14002d763:	(bad)  
   14002d764:	(bad)  
   14002d765:	(bad)  
   14002d766:	(bad)  
   14002d767:	(bad)  
   14002d768:	(bad)  
   14002d769:	(bad)  
   14002d76a:	(bad)  
   14002d76b:	call   FWORD PTR [rcx-0x31]
   14002d76e:	rex.W call QWORD PTR [rdx-0x33]
   14002d772:	call   QWORD PTR [r10-0x33]
   14002d776:	call   QWORD PTR [r10-0x33]
   14002d77a:	call   QWORD PTR [r10-0x33]
   14002d77e:	call   QWORD PTR [r10-0x33]
   14002d782:	call   QWORD PTR [r10-0x33]
   14002d786:	call   QWORD PTR [r10-0x33]
   14002d78a:	call   QWORD PTR [r10-0x33]
   14002d78e:	call   QWORD PTR [r10-0x33]
   14002d792:	call   QWORD PTR [r10-0x33]
   14002d796:	call   QWORD PTR [r10-0x33]
   14002d79a:	call   QWORD PTR [r10-0x33]
   14002d79e:	call   QWORD PTR [r10-0x33]
   14002d7a2:	call   QWORD PTR [r10-0x33]
   14002d7a6:	call   QWORD PTR [r10-0x33]
   14002d7aa:	call   QWORD PTR [r10-0x33]
   14002d7ae:	call   QWORD PTR [r10-0x33]
   14002d7b2:	call   QWORD PTR [r10-0x33]
   14002d7b6:	call   QWORD PTR [r10-0x33]
   14002d7ba:	inc    DWORD PTR [r8]
   14002d7bd:	add    BYTE PTR [rax],al
   14002d7bf:	cmp    eax,DWORD PTR [rax]
   14002d7c1:	add    BYTE PTR [rax],al
   14002d7c3:	sbb    al,0x0
   14002d7c5:	add    BYTE PTR [rax],al
   14002d7c7:	or     al,0x0
   14002d7c9:	add    BYTE PTR [rax],al
   14002d7cb:	add    eax,0x2000000
	...
   14002d828:	add    BYTE PTR [rax],al
   14002d82a:	add    BYTE PTR [rdx],al
   14002d82c:	add    BYTE PTR [rax],al
   14002d82e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02d834
   14002d834:	add    BYTE PTR [rax],al
   14002d836:	add    BYTE PTR [rax+rax*1],bl
   14002d839:	add    BYTE PTR [rax],al
   14002d83b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002d83e:	call   QWORD PTR [r10-0x33]
   14002d842:	call   QWORD PTR [r10-0x33]
   14002d846:	call   QWORD PTR [r10-0x33]
   14002d84a:	call   QWORD PTR [r10-0x33]
   14002d84e:	call   QWORD PTR [r10-0x33]
   14002d852:	call   QWORD PTR [r10-0x33]
   14002d856:	call   QWORD PTR [r10-0x33]
   14002d85a:	call   QWORD PTR [r10-0x33]
   14002d85e:	call   QWORD PTR [r10-0x33]
   14002d862:	call   QWORD PTR [r10-0x33]
   14002d866:	call   QWORD PTR [r10-0x33]
   14002d86a:	call   QWORD PTR [r10-0x33]
   14002d86e:	call   QWORD PTR [r10-0x33]
   14002d872:	call   QWORD PTR [r10-0x33]
   14002d876:	call   QWORD PTR [r10-0x33]
   14002d87a:	call   QWORD PTR [r10-0x33]
   14002d87e:	call   QWORD PTR [r10-0x33]
   14002d882:	call   QWORD PTR [r10-0x33]
   14002d886:	dec    DWORD PTR [r9-0x8223]
   14002d88d:	(bad)  
   14002d88e:	(bad)  
   14002d88f:	(bad)  
   14002d890:	(bad)  
   14002d891:	(bad)  
   14002d892:	(bad)  
   14002d893:	(bad)  
   14002d894:	(bad)  
   14002d895:	(bad)  
   14002d896:	(bad)  
   14002d897:	(bad)  
   14002d898:	(bad)  
   14002d899:	(bad)  
   14002d89a:	(bad)  
   14002d89b:	(bad)  
   14002d89c:	(bad)  
   14002d89d:	(bad)  
   14002d89e:	(bad)  
   14002d89f:	(bad)  
   14002d8a0:	(bad)  
   14002d8a1:	(bad)  
   14002d8a2:	(bad)  
   14002d8a3:	jmp    rbx
   14002d8a5:	mul    eax
   14002d8a7:	call   QWORD PTR [rdx-0x33]
   14002d8aa:	call   QWORD PTR [r10-0x33]
   14002d8ae:	call   QWORD PTR [r10-0x33]
   14002d8b2:	call   QWORD PTR [r10-0x33]
   14002d8b6:	call   QWORD PTR [r10-0x33]
   14002d8ba:	call   QWORD PTR [r10-0x33]
   14002d8be:	call   QWORD PTR [r10-0x33]
   14002d8c2:	call   QWORD PTR [r10-0x33]
   14002d8c6:	call   QWORD PTR [r10-0x33]
   14002d8ca:	call   QWORD PTR [r10-0x33]
   14002d8ce:	call   QWORD PTR [r10-0x33]
   14002d8d2:	call   QWORD PTR [r10-0x33]
   14002d8d6:	call   QWORD PTR [r10-0x33]
   14002d8da:	call   QWORD PTR [r10-0x33]
   14002d8de:	call   QWORD PTR [r10-0x33]
   14002d8e2:	call   QWORD PTR [r10-0x33]
   14002d8e6:	call   QWORD PTR [r10-0x33]
   14002d8ea:	call   QWORD PTR [r8-0x7921]
   14002d8f1:	(bad)  
   14002d8f2:	(bad)  
   14002d8f3:	(bad)  
   14002d8f4:	(bad)  
   14002d8f5:	(bad)  
   14002d8f6:	(bad)  
   14002d8f7:	(bad)  
   14002d8f8:	(bad)  
   14002d8f9:	(bad)  
   14002d8fa:	(bad)  
   14002d8fb:	(bad)  
   14002d8fc:	(bad)  
   14002d8fd:	(bad)  
   14002d8fe:	(bad)  
   14002d8ff:	(bad)  
   14002d900:	(bad)  
   14002d901:	(bad)  
   14002d902:	(bad)  
   14002d903:	(bad)  
   14002d904:	(bad)  
   14002d905:	(bad)  
   14002d906:	(bad)  
   14002d907:	call   rcx
   14002d909:	repnz int3 
   14002d90b:	call   QWORD PTR [rdx-0x33]
   14002d90e:	call   QWORD PTR [r10-0x33]
   14002d912:	call   QWORD PTR [r10-0x33]
   14002d916:	call   QWORD PTR [r10-0x33]
   14002d91a:	push   QWORD PTR [r10-0x5417]
   14002d921:	(bad)  
   14002d922:	(bad)  
   14002d923:	(bad)  
   14002d924:	(bad)  
   14002d925:	(bad)  
   14002d926:	(bad)  
   14002d927:	(bad)  
   14002d928:	(bad)  
   14002d929:	(bad)  
   14002d92a:	(bad)  
   14002d92b:	(bad)  
   14002d92c:	(bad)  
   14002d92d:	(bad)  
   14002d92e:	(bad)  
   14002d92f:	(bad)  
   14002d930:	(bad)  
   14002d931:	(bad)  
   14002d932:	(bad)  
   14002d933:	(bad)  
   14002d934:	(bad)  
   14002d935:	(bad)  
   14002d936:	(bad)  
   14002d937:	(bad)  
   14002d938:	(bad)  
   14002d939:	(bad)  
   14002d93a:	(bad)  
   14002d93b:	(bad)  
   14002d93c:	(bad)  
   14002d93d:	(bad)  
   14002d93e:	(bad)  
   14002d93f:	(bad)  
   14002d940:	(bad)  
   14002d941:	(bad)  
   14002d942:	(bad)  
   14002d943:	(bad)  
   14002d944:	(bad)  
   14002d945:	(bad)  
   14002d946:	(bad)  
   14002d947:	(bad)  
   14002d948:	(bad)  
   14002d949:	(bad)  
   14002d94a:	(bad)  
   14002d94b:	(bad)  
   14002d94c:	(bad)  
   14002d94d:	(bad)  
   14002d94e:	(bad)  
   14002d94f:	(bad)  
   14002d950:	(bad)  
   14002d951:	(bad)  
   14002d952:	(bad)  
   14002d953:	(bad)  
   14002d954:	(bad)  
   14002d955:	(bad)  
   14002d956:	(bad)  
   14002d957:	(bad)  
   14002d958:	(bad)  
   14002d959:	(bad)  
   14002d95a:	(bad)  
   14002d95b:	(bad)  
   14002d95c:	(bad)  
   14002d95d:	(bad)  
   14002d95e:	(bad)  
   14002d95f:	(bad)  
   14002d960:	(bad)  
   14002d961:	(bad)  
   14002d962:	(bad)  
   14002d963:	(bad)  
   14002d964:	(bad)  
   14002d965:	(bad)  
   14002d966:	(bad)  
   14002d967:	(bad)  
   14002d968:	(bad)  
   14002d969:	(bad)  
   14002d96a:	(bad)  
   14002d96b:	call   FWORD PTR [rcx-0x31]
   14002d96e:	rex.W call QWORD PTR [rdx-0x33]
   14002d972:	call   QWORD PTR [r10-0x33]
   14002d976:	call   QWORD PTR [r10-0x33]
   14002d97a:	call   QWORD PTR [r10-0x33]
   14002d97e:	call   QWORD PTR [r10-0x33]
   14002d982:	call   QWORD PTR [r10-0x33]
   14002d986:	call   QWORD PTR [r10-0x33]
   14002d98a:	call   QWORD PTR [r10-0x33]
   14002d98e:	call   QWORD PTR [r10-0x33]
   14002d992:	call   QWORD PTR [r10-0x33]
   14002d996:	call   QWORD PTR [r10-0x33]
   14002d99a:	call   QWORD PTR [r10-0x33]
   14002d99e:	call   QWORD PTR [r10-0x33]
   14002d9a2:	call   QWORD PTR [r10-0x33]
   14002d9a6:	call   QWORD PTR [r10-0x33]
   14002d9aa:	call   QWORD PTR [r10-0x33]
   14002d9ae:	call   QWORD PTR [r10-0x33]
   14002d9b2:	call   QWORD PTR [r10-0x33]
   14002d9b6:	call   QWORD PTR [r10-0x33]
   14002d9ba:	inc    DWORD PTR [r8]
   14002d9bd:	add    BYTE PTR [rax],al
   14002d9bf:	cmp    eax,DWORD PTR [rax]
   14002d9c1:	add    BYTE PTR [rax],al
   14002d9c3:	sbb    al,0x0
   14002d9c5:	add    BYTE PTR [rax],al
   14002d9c7:	or     al,0x0
   14002d9c9:	add    BYTE PTR [rax],al
   14002d9cb:	add    eax,0x2000000
	...
   14002da28:	add    BYTE PTR [rax],al
   14002da2a:	add    BYTE PTR [rdx],al
   14002da2c:	add    BYTE PTR [rax],al
   14002da2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02da34
   14002da34:	add    BYTE PTR [rax],al
   14002da36:	add    BYTE PTR [rax+rax*1],bl
   14002da39:	add    BYTE PTR [rax],al
   14002da3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002da3e:	call   QWORD PTR [r10-0x33]
   14002da42:	call   QWORD PTR [r10-0x33]
   14002da46:	call   QWORD PTR [r10-0x33]
   14002da4a:	call   QWORD PTR [r10-0x33]
   14002da4e:	call   QWORD PTR [r10-0x33]
   14002da52:	call   QWORD PTR [r10-0x33]
   14002da56:	call   QWORD PTR [r10-0x33]
   14002da5a:	call   QWORD PTR [r10-0x33]
   14002da5e:	call   QWORD PTR [r10-0x33]
   14002da62:	call   QWORD PTR [r10-0x33]
   14002da66:	call   QWORD PTR [r10-0x33]
   14002da6a:	call   QWORD PTR [r10-0x33]
   14002da6e:	call   QWORD PTR [r10-0x33]
   14002da72:	call   QWORD PTR [r10-0x33]
   14002da76:	call   QWORD PTR [r10-0x33]
   14002da7a:	call   QWORD PTR [r10-0x33]
   14002da7e:	call   QWORD PTR [r10-0x33]
   14002da82:	call   QWORD PTR [r10-0x33]
   14002da86:	jmp    QWORD PTR [r9-0x2f]
   14002da8a:	push   rcx
   14002da8b:	(bad)  
   14002da8c:	(bad)  
   14002da8d:	(bad)  
   14002da8e:	(bad)  
   14002da8f:	(bad)  
   14002da90:	(bad)  
   14002da91:	(bad)  
   14002da92:	(bad)  
   14002da93:	(bad)  
   14002da94:	(bad)  
   14002da95:	(bad)  
   14002da96:	(bad)  
   14002da97:	(bad)  
   14002da98:	(bad)  
   14002da99:	(bad)  
   14002da9a:	(bad)  
   14002da9b:	(bad)  
   14002da9c:	(bad)  
   14002da9d:	(bad)  
   14002da9e:	(bad)  
   14002da9f:	(bad)  
   14002daa0:	(bad)  
   14002daa1:	(bad)  
   14002daa2:	(bad)  
   14002daa3:	(bad)  
   14002daa4:	(bad)  
   14002daa5:	(bad)  
   14002daa6:	(bad)  
   14002daa7:	jmp    FWORD PTR [rsi-0x2b]
   14002daaa:	(bad)  
   14002daab:	call   QWORD PTR [rdx-0x33]
   14002daae:	call   QWORD PTR [r10-0x33]
   14002dab2:	call   QWORD PTR [r10-0x33]
   14002dab6:	call   QWORD PTR [r10-0x33]
   14002daba:	call   QWORD PTR [r10-0x33]
   14002dabe:	call   QWORD PTR [r10-0x33]
   14002dac2:	call   QWORD PTR [r10-0x33]
   14002dac6:	call   QWORD PTR [r10-0x33]
   14002daca:	call   QWORD PTR [r10-0x33]
   14002dace:	call   QWORD PTR [r10-0x33]
   14002dad2:	call   QWORD PTR [r10-0x33]
   14002dad6:	call   QWORD PTR [r10-0x33]
   14002dada:	call   QWORD PTR [r10-0x33]
   14002dade:	call   QWORD PTR [r10-0x33]
   14002dae2:	call   QWORD PTR [r10-0x33]
   14002dae6:	call   QWORD PTR [r10-0x33]
   14002daea:	inc    r15d
   14002daed:	out    dx,eax
   14002daee:	sar    edi,0xff
   14002daf1:	(bad)  
   14002daf2:	(bad)  
   14002daf3:	(bad)  
   14002daf4:	(bad)  
   14002daf5:	(bad)  
   14002daf6:	(bad)  
   14002daf7:	(bad)  
   14002daf8:	(bad)  
   14002daf9:	(bad)  
   14002dafa:	(bad)  
   14002dafb:	(bad)  
   14002dafc:	(bad)  
   14002dafd:	(bad)  
   14002dafe:	(bad)  
   14002daff:	(bad)  
   14002db00:	(bad)  
   14002db01:	(bad)  
   14002db02:	(bad)  
   14002db03:	(bad)  
   14002db04:	(bad)  
   14002db05:	(bad)  
   14002db06:	(bad)  
   14002db07:	jmp    FWORD PTR [rcx+0x52ffa0e6]
   14002db0d:	int    0x41
   14002db0f:	call   QWORD PTR [rdx-0x33]
   14002db12:	call   QWORD PTR [r10-0x33]
   14002db16:	call   QWORD PTR [r10-0x33]
   14002db1a:	call   FWORD PTR [r9-0x2e00711f]
   14002db21:	repnz int3 
   14002db23:	call   rcx
   14002db25:	repnz int3 
   14002db27:	call   rcx
   14002db29:	repnz int3 
   14002db2b:	call   rcx
   14002db2d:	repnz int3 
   14002db2f:	(bad)  
   14002db30:	sti    
   14002db31:	(bad)  
   14002db32:	sti    
   14002db33:	(bad)  
   14002db34:	(bad)  
   14002db35:	(bad)  
   14002db36:	(bad)  
   14002db37:	(bad)  
   14002db38:	(bad)  
   14002db39:	(bad)  
   14002db3a:	(bad)  
   14002db3b:	(bad)  
   14002db3c:	(bad)  
   14002db3d:	(bad)  
   14002db3e:	(bad)  
   14002db3f:	(bad)  
   14002db40:	(bad)  
   14002db41:	(bad)  
   14002db42:	(bad)  
   14002db43:	(bad)  
   14002db44:	(bad)  
   14002db45:	(bad)  
   14002db46:	(bad)  
   14002db47:	(bad)  
   14002db48:	out    dx,eax
   14002db49:	cli    
   14002db4a:	out    dx,al
   14002db4b:	call   rcx
   14002db4d:	repnz int3 
   14002db4f:	call   rcx
   14002db51:	repnz int3 
   14002db53:	call   rcx
   14002db55:	repnz int3 
   14002db57:	call   rcx
   14002db59:	repnz int3 
   14002db5b:	call   rcx
   14002db5d:	repnz int3 
   14002db5f:	call   rcx
   14002db61:	repnz int3 
   14002db63:	call   rcx
   14002db65:	repnz int3 
   14002db67:	call   rcx
   14002db69:	repnz int3 
   14002db6b:	call   QWORD PTR [rdi-0x32]
   14002db6e:	rex.RX call QWORD PTR [rdx-0x33]
   14002db72:	call   QWORD PTR [r10-0x33]
   14002db76:	call   QWORD PTR [r10-0x33]
   14002db7a:	call   QWORD PTR [r10-0x33]
   14002db7e:	call   QWORD PTR [r10-0x33]
   14002db82:	call   QWORD PTR [r10-0x33]
   14002db86:	call   QWORD PTR [r10-0x33]
   14002db8a:	call   QWORD PTR [r10-0x33]
   14002db8e:	call   QWORD PTR [r10-0x33]
   14002db92:	call   QWORD PTR [r10-0x33]
   14002db96:	call   QWORD PTR [r10-0x33]
   14002db9a:	call   QWORD PTR [r10-0x33]
   14002db9e:	call   QWORD PTR [r10-0x33]
   14002dba2:	call   QWORD PTR [r10-0x33]
   14002dba6:	call   QWORD PTR [r10-0x33]
   14002dbaa:	call   QWORD PTR [r10-0x33]
   14002dbae:	call   QWORD PTR [r10-0x33]
   14002dbb2:	call   QWORD PTR [r10-0x33]
   14002dbb6:	call   QWORD PTR [r10-0x33]
   14002dbba:	inc    DWORD PTR [r8]
   14002dbbd:	add    BYTE PTR [rax],al
   14002dbbf:	cmp    eax,DWORD PTR [rax]
   14002dbc1:	add    BYTE PTR [rax],al
   14002dbc3:	sbb    al,0x0
   14002dbc5:	add    BYTE PTR [rax],al
   14002dbc7:	or     al,0x0
   14002dbc9:	add    BYTE PTR [rax],al
   14002dbcb:	add    eax,0x2000000
	...
   14002dc28:	add    BYTE PTR [rax],al
   14002dc2a:	add    BYTE PTR [rdx],al
   14002dc2c:	add    BYTE PTR [rax],al
   14002dc2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02dc34
   14002dc34:	add    BYTE PTR [rax],al
   14002dc36:	add    BYTE PTR [rax+rax*1],bl
   14002dc39:	add    BYTE PTR [rax],al
   14002dc3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002dc3e:	call   QWORD PTR [r10-0x33]
   14002dc42:	call   QWORD PTR [r10-0x33]
   14002dc46:	call   QWORD PTR [r10-0x33]
   14002dc4a:	call   QWORD PTR [r10-0x33]
   14002dc4e:	call   QWORD PTR [r10-0x33]
   14002dc52:	call   QWORD PTR [r10-0x33]
   14002dc56:	call   QWORD PTR [r10-0x33]
   14002dc5a:	call   QWORD PTR [r10-0x33]
   14002dc5e:	call   QWORD PTR [r10-0x33]
   14002dc62:	call   QWORD PTR [r10-0x33]
   14002dc66:	call   QWORD PTR [r10-0x33]
   14002dc6a:	call   QWORD PTR [r10-0x33]
   14002dc6e:	call   QWORD PTR [r10-0x33]
   14002dc72:	call   QWORD PTR [r10-0x33]
   14002dc76:	call   QWORD PTR [r10-0x33]
   14002dc7a:	call   QWORD PTR [r10-0x33]
   14002dc7e:	call   QWORD PTR [r10-0x33]
   14002dc82:	call   QWORD PTR [r10-0x33]
   14002dc86:	call   QWORD PTR [r10-0x33]
   14002dc8a:	rex.B (bad) 
   14002dc8c:	fdivrp st(6),st
   14002dc8e:	(bad)  
   14002dc90:	(bad)  
   14002dc91:	(bad)  
   14002dc92:	(bad)  
   14002dc93:	(bad)  
   14002dc94:	(bad)  
   14002dc95:	(bad)  
   14002dc96:	(bad)  
   14002dc97:	(bad)  
   14002dc98:	(bad)  
   14002dc99:	(bad)  
   14002dc9a:	(bad)  
   14002dc9b:	(bad)  
   14002dc9c:	(bad)  
   14002dc9d:	(bad)  
   14002dc9e:	(bad)  
   14002dc9f:	(bad)  
   14002dca0:	(bad)  
   14002dca1:	(bad)  
   14002dca2:	(bad)  
   14002dca3:	(bad)  
   14002dca4:	(bad)  
   14002dca5:	(bad)  
   14002dca6:	(bad)  
   14002dca7:	(bad)  
   14002dca8:	mov    eax,0x52ffb1ea
   14002dcad:	int    0x41
   14002dcaf:	call   QWORD PTR [rdx-0x33]
   14002dcb2:	call   QWORD PTR [r10-0x33]
   14002dcb6:	call   QWORD PTR [r10-0x33]
   14002dcba:	call   QWORD PTR [r10-0x33]
   14002dcbe:	call   QWORD PTR [r10-0x33]
   14002dcc2:	call   QWORD PTR [r10-0x33]
   14002dcc6:	call   QWORD PTR [r10-0x33]
   14002dcca:	call   QWORD PTR [r10-0x33]
   14002dcce:	call   QWORD PTR [r10-0x33]
   14002dcd2:	call   QWORD PTR [r10-0x33]
   14002dcd6:	call   QWORD PTR [r10-0x33]
   14002dcda:	call   QWORD PTR [r10-0x33]
   14002dcde:	call   QWORD PTR [r10-0x33]
   14002dce2:	call   QWORD PTR [r10-0x33]
   14002dce6:	jmp    QWORD PTR [r14-0x2d]
   14002dcea:	push   rdi
   14002dceb:	(bad)  
   14002dcec:	cld    
   14002dced:	(bad)  
   14002dcee:	cld    
   14002dcef:	(bad)  
   14002dcf0:	(bad)  
   14002dcf1:	(bad)  
   14002dcf2:	(bad)  
   14002dcf3:	(bad)  
   14002dcf4:	(bad)  
   14002dcf5:	(bad)  
   14002dcf6:	(bad)  
   14002dcf7:	(bad)  
   14002dcf8:	(bad)  
   14002dcf9:	(bad)  
   14002dcfa:	(bad)  
   14002dcfb:	(bad)  
   14002dcfc:	(bad)  
   14002dcfd:	(bad)  
   14002dcfe:	(bad)  
   14002dcff:	(bad)  
   14002dd00:	(bad)  
   14002dd01:	(bad)  
   14002dd02:	(bad)  
   14002dd03:	(bad)  
   14002dd04:	(bad)  
   14002dd05:	(bad)  
   14002dd06:	(bad)  
   14002dd07:	(bad)  
   14002dd08:	jns    0x14002dce2
   14002dd0a:	ins    BYTE PTR es:[rdi],dx
   14002dd0b:	call   QWORD PTR [rdx-0x33]
   14002dd0e:	call   QWORD PTR [r10-0x33]
   14002dd12:	call   QWORD PTR [r10-0x33]
   14002dd16:	call   QWORD PTR [r10-0x33]
   14002dd1a:	call   QWORD PTR [r10-0x33]
   14002dd1e:	call   QWORD PTR [r10-0x33]
   14002dd22:	call   QWORD PTR [r10-0x33]
   14002dd26:	call   QWORD PTR [r10-0x33]
   14002dd2a:	call   QWORD PTR [r10-0x33]
   14002dd2e:	rex.B (bad) 
   14002dd30:	out    dx,eax
   14002dd31:	cli    
   14002dd32:	out    dx,al
   14002dd33:	(bad)  
   14002dd34:	(bad)  
   14002dd35:	(bad)  
   14002dd36:	(bad)  
   14002dd37:	(bad)  
   14002dd38:	(bad)  
   14002dd39:	(bad)  
   14002dd3a:	(bad)  
   14002dd3b:	(bad)  
   14002dd3c:	(bad)  
   14002dd3d:	(bad)  
   14002dd3e:	(bad)  
   14002dd3f:	(bad)  
   14002dd40:	(bad)  
   14002dd41:	(bad)  
   14002dd42:	(bad)  
   14002dd43:	(bad)  
   14002dd44:	(bad)  
   14002dd45:	(bad)  
   14002dd46:	(bad)  
   14002dd47:	inc    ebp
   14002dd49:	out    dx,al
   14002dd4a:	mov    edi,0x41cd52ff
   14002dd4f:	call   QWORD PTR [rdx-0x33]
   14002dd52:	call   QWORD PTR [r10-0x33]
   14002dd56:	call   QWORD PTR [r10-0x33]
   14002dd5a:	call   QWORD PTR [r10-0x33]
   14002dd5e:	call   QWORD PTR [r10-0x33]
   14002dd62:	call   QWORD PTR [r10-0x33]
   14002dd66:	call   QWORD PTR [r10-0x33]
   14002dd6a:	call   QWORD PTR [r10-0x33]
   14002dd6e:	call   QWORD PTR [r10-0x33]
   14002dd72:	call   QWORD PTR [r10-0x33]
   14002dd76:	call   QWORD PTR [r10-0x33]
   14002dd7a:	call   QWORD PTR [r10-0x33]
   14002dd7e:	call   QWORD PTR [r10-0x33]
   14002dd82:	call   QWORD PTR [r10-0x33]
   14002dd86:	call   QWORD PTR [r10-0x33]
   14002dd8a:	call   QWORD PTR [r10-0x33]
   14002dd8e:	call   QWORD PTR [r10-0x33]
   14002dd92:	call   QWORD PTR [r10-0x33]
   14002dd96:	call   QWORD PTR [r10-0x33]
   14002dd9a:	call   QWORD PTR [r10-0x33]
   14002dd9e:	call   QWORD PTR [r10-0x33]
   14002dda2:	call   QWORD PTR [r10-0x33]
   14002dda6:	call   QWORD PTR [r10-0x33]
   14002ddaa:	call   QWORD PTR [r10-0x33]
   14002ddae:	call   QWORD PTR [r10-0x33]
   14002ddb2:	call   QWORD PTR [r10-0x33]
   14002ddb6:	call   QWORD PTR [r10-0x33]
   14002ddba:	inc    DWORD PTR [r8]
   14002ddbd:	add    BYTE PTR [rax],al
   14002ddbf:	cmp    eax,DWORD PTR [rax]
   14002ddc1:	add    BYTE PTR [rax],al
   14002ddc3:	sbb    al,0x0
   14002ddc5:	add    BYTE PTR [rax],al
   14002ddc7:	or     al,0x0
   14002ddc9:	add    BYTE PTR [rax],al
   14002ddcb:	add    eax,0x2000000
	...
   14002de28:	add    BYTE PTR [rax],al
   14002de2a:	add    BYTE PTR [rdx],al
   14002de2c:	add    BYTE PTR [rax],al
   14002de2e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02de34
   14002de34:	add    BYTE PTR [rax],al
   14002de36:	add    BYTE PTR [rax+rax*1],bl
   14002de39:	add    BYTE PTR [rax],al
   14002de3b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002de3e:	call   QWORD PTR [r10-0x33]
   14002de42:	call   QWORD PTR [r10-0x33]
   14002de46:	call   QWORD PTR [r10-0x33]
   14002de4a:	call   QWORD PTR [r10-0x33]
   14002de4e:	call   QWORD PTR [r10-0x33]
   14002de52:	call   QWORD PTR [r10-0x33]
   14002de56:	call   QWORD PTR [r10-0x33]
   14002de5a:	call   QWORD PTR [r10-0x33]
   14002de5e:	call   QWORD PTR [r10-0x33]
   14002de62:	call   QWORD PTR [r10-0x33]
   14002de66:	call   QWORD PTR [r10-0x33]
   14002de6a:	call   QWORD PTR [r10-0x33]
   14002de6e:	call   QWORD PTR [r10-0x33]
   14002de72:	call   QWORD PTR [r10-0x33]
   14002de76:	call   QWORD PTR [r10-0x33]
   14002de7a:	call   QWORD PTR [r10-0x33]
   14002de7e:	call   QWORD PTR [r10-0x33]
   14002de82:	call   QWORD PTR [r10-0x33]
   14002de86:	call   QWORD PTR [r10-0x33]
   14002de8a:	jmp    QWORD PTR [r11-0x651b]
   14002de91:	(bad)  
   14002de92:	(bad)  
   14002de93:	(bad)  
   14002de94:	(bad)  
   14002de95:	(bad)  
   14002de96:	(bad)  
   14002de97:	(bad)  
   14002de98:	(bad)  
   14002de99:	(bad)  
   14002de9a:	(bad)  
   14002de9b:	(bad)  
   14002de9c:	(bad)  
   14002de9d:	(bad)  
   14002de9e:	(bad)  
   14002de9f:	(bad)  
   14002dea0:	(bad)  
   14002dea1:	(bad)  
   14002dea2:	(bad)  
   14002dea3:	(bad)  
   14002dea4:	(bad)  
   14002dea5:	(bad)  
   14002dea6:	(bad)  
   14002dea7:	(bad)  
   14002dea8:	clc    
   14002dea9:	std    
   14002deaa:	idiv   edi
   14002deac:	rcr    DWORD PTR [eax-0x1],cl
   14002deb0:	push   rdx
   14002deb1:	int    0x41
   14002deb3:	call   QWORD PTR [rdx-0x33]
   14002deb6:	call   QWORD PTR [r10-0x33]
   14002deba:	call   QWORD PTR [r10-0x33]
   14002debe:	call   QWORD PTR [r10-0x33]
   14002dec2:	call   QWORD PTR [r10-0x33]
   14002dec6:	call   QWORD PTR [r10-0x33]
   14002deca:	call   QWORD PTR [r10-0x33]
   14002dece:	call   QWORD PTR [r10-0x33]
   14002ded2:	call   QWORD PTR [r10-0x33]
   14002ded6:	call   QWORD PTR [r10-0x33]
   14002deda:	call   QWORD PTR [r10-0x33]
   14002dede:	call   QWORD PTR [r10-0x33]
   14002dee2:	call   QWORD PTR [r10-0x33]
   14002dee6:	rex.B (bad) 
   14002dee8:	mov    eax,0xffffb1ea
   14002deed:	(bad)  
   14002deee:	(bad)  
   14002deef:	(bad)  
   14002def0:	(bad)  
   14002def1:	(bad)  
   14002def2:	(bad)  
   14002def3:	(bad)  
   14002def4:	(bad)  
   14002def5:	(bad)  
   14002def6:	(bad)  
   14002def7:	(bad)  
   14002def8:	(bad)  
   14002def9:	(bad)  
   14002defa:	(bad)  
   14002defb:	(bad)  
   14002defc:	(bad)  
   14002defd:	(bad)  
   14002defe:	(bad)  
   14002deff:	(bad)  
   14002df00:	(bad)  
   14002df01:	(bad)  
   14002df02:	(bad)  
   14002df03:	(bad)  
   14002df04:	jmp    0x14002deff
   14002df06:	jmp    0x182d0330a
   14002df0b:	call   QWORD PTR [rdx-0x33]
   14002df0e:	call   QWORD PTR [r10-0x33]
   14002df12:	call   QWORD PTR [r10-0x33]
   14002df16:	call   QWORD PTR [r10-0x33]
   14002df1a:	call   QWORD PTR [r10-0x33]
   14002df1e:	call   QWORD PTR [r10-0x33]
   14002df22:	call   QWORD PTR [r10-0x33]
   14002df26:	call   QWORD PTR [r10-0x33]
   14002df2a:	call   QWORD PTR [r10-0x33]
   14002df2e:	rex.B (bad) 
   14002df30:	out    dx,eax
   14002df31:	cli    
   14002df32:	out    dx,al
   14002df33:	(bad)  
   14002df34:	(bad)  
   14002df35:	(bad)  
   14002df36:	(bad)  
   14002df37:	(bad)  
   14002df38:	(bad)  
   14002df39:	(bad)  
   14002df3a:	(bad)  
   14002df3b:	(bad)  
   14002df3c:	(bad)  
   14002df3d:	(bad)  
   14002df3e:	(bad)  
   14002df3f:	(bad)  
   14002df40:	(bad)  
   14002df41:	(bad)  
   14002df42:	(bad)  
   14002df43:	(bad)  
   14002df44:	(bad)  
   14002df45:	(bad)  
   14002df46:	(bad)  
   14002df47:	inc    ebp
   14002df49:	out    dx,al
   14002df4a:	mov    edi,0x41cd52ff
   14002df4f:	call   QWORD PTR [rdx-0x33]
   14002df52:	call   QWORD PTR [r10-0x33]
   14002df56:	call   QWORD PTR [r10-0x33]
   14002df5a:	call   QWORD PTR [r10-0x33]
   14002df5e:	call   QWORD PTR [r10-0x33]
   14002df62:	call   QWORD PTR [r10-0x33]
   14002df66:	call   QWORD PTR [r10-0x33]
   14002df6a:	call   QWORD PTR [r10-0x33]
   14002df6e:	call   QWORD PTR [r10-0x33]
   14002df72:	call   QWORD PTR [r10-0x33]
   14002df76:	call   QWORD PTR [r10-0x33]
   14002df7a:	call   QWORD PTR [r10-0x33]
   14002df7e:	call   QWORD PTR [r10-0x33]
   14002df82:	call   QWORD PTR [r10-0x33]
   14002df86:	call   QWORD PTR [r10-0x33]
   14002df8a:	call   QWORD PTR [r10-0x33]
   14002df8e:	call   QWORD PTR [r10-0x33]
   14002df92:	call   QWORD PTR [r10-0x33]
   14002df96:	call   QWORD PTR [r10-0x33]
   14002df9a:	call   QWORD PTR [r10-0x33]
   14002df9e:	call   QWORD PTR [r10-0x33]
   14002dfa2:	call   QWORD PTR [r10-0x33]
   14002dfa6:	call   QWORD PTR [r10-0x33]
   14002dfaa:	call   QWORD PTR [r10-0x33]
   14002dfae:	call   QWORD PTR [r10-0x33]
   14002dfb2:	call   QWORD PTR [r10-0x33]
   14002dfb6:	call   QWORD PTR [r10-0x33]
   14002dfba:	inc    DWORD PTR [r8]
   14002dfbd:	add    BYTE PTR [rax],al
   14002dfbf:	cmp    eax,DWORD PTR [rax]
   14002dfc1:	add    BYTE PTR [rax],al
   14002dfc3:	sbb    al,0x0
   14002dfc5:	add    BYTE PTR [rax],al
   14002dfc7:	or     al,0x0
   14002dfc9:	add    BYTE PTR [rax],al
   14002dfcb:	add    eax,0x2000000
	...
   14002e028:	add    BYTE PTR [rax],al
   14002e02a:	add    BYTE PTR [rdx],al
   14002e02c:	add    BYTE PTR [rax],al
   14002e02e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02e034
   14002e034:	add    BYTE PTR [rax],al
   14002e036:	add    BYTE PTR [rax+rax*1],bl
   14002e039:	add    BYTE PTR [rax],al
   14002e03b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002e03e:	call   QWORD PTR [r10-0x33]
   14002e042:	call   QWORD PTR [r10-0x33]
   14002e046:	call   QWORD PTR [r10-0x33]
   14002e04a:	call   QWORD PTR [r10-0x33]
   14002e04e:	call   QWORD PTR [r10-0x33]
   14002e052:	call   QWORD PTR [r10-0x33]
   14002e056:	call   QWORD PTR [r10-0x33]
   14002e05a:	call   QWORD PTR [r10-0x33]
   14002e05e:	call   QWORD PTR [r10-0x33]
   14002e062:	call   QWORD PTR [r10-0x33]
   14002e066:	call   QWORD PTR [r10-0x33]
   14002e06a:	call   QWORD PTR [r10-0x33]
   14002e06e:	call   QWORD PTR [r10-0x33]
   14002e072:	call   QWORD PTR [r10-0x33]
   14002e076:	call   QWORD PTR [r10-0x33]
   14002e07a:	call   QWORD PTR [r10-0x33]
   14002e07e:	call   QWORD PTR [r10-0x33]
   14002e082:	call   QWORD PTR [r10-0x33]
   14002e086:	call   QWORD PTR [r10-0x33]
   14002e08a:	jmp    QWORD PTR [r13-0x2e]
   14002e08e:	push   rsi
   14002e08f:	(bad)  
   14002e090:	cld    
   14002e091:	(bad)  
   14002e092:	sti    
   14002e093:	(bad)  
   14002e094:	(bad)  
   14002e095:	(bad)  
   14002e096:	(bad)  
   14002e097:	(bad)  
   14002e098:	(bad)  
   14002e099:	(bad)  
   14002e09a:	(bad)  
   14002e09b:	(bad)  
   14002e09c:	(bad)  
   14002e09d:	(bad)  
   14002e09e:	(bad)  
   14002e09f:	(bad)  
   14002e0a0:	(bad)  
   14002e0a1:	(bad)  
   14002e0a2:	(bad)  
   14002e0a3:	(bad)  
   14002e0a4:	(bad)  
   14002e0a5:	(bad)  
   14002e0a6:	(bad)  
   14002e0a7:	(bad)  
   14002e0a8:	(bad)  
   14002e0a9:	(bad)  
   14002e0aa:	(bad)  
   14002e0ab:	(bad)  
   14002e0ac:	(bad)  
   14002e0ae:	(bad)  
   14002e0af:	call   FWORD PTR [rdx-0x31]
   14002e0b2:	rex.WX call QWORD PTR [rdx-0x33]
   14002e0b6:	call   QWORD PTR [r10-0x33]
   14002e0ba:	call   QWORD PTR [r10-0x33]
   14002e0be:	call   QWORD PTR [r10-0x33]
   14002e0c2:	call   QWORD PTR [r10-0x33]
   14002e0c6:	call   QWORD PTR [r10-0x33]
   14002e0ca:	call   QWORD PTR [r10-0x33]
   14002e0ce:	call   QWORD PTR [r10-0x33]
   14002e0d2:	call   QWORD PTR [r10-0x33]
   14002e0d6:	call   QWORD PTR [r10-0x33]
   14002e0da:	call   QWORD PTR [r10-0x33]
   14002e0de:	call   QWORD PTR [r10-0x33]
   14002e0e2:	dec    DWORD PTR [r14+rbx*8-0x1007f]
   14002e0ea:	(bad)  
   14002e0eb:	(bad)  
   14002e0ec:	(bad)  
   14002e0ed:	(bad)  
   14002e0ee:	(bad)  
   14002e0ef:	(bad)  
   14002e0f0:	(bad)  
   14002e0f1:	(bad)  
   14002e0f2:	(bad)  
   14002e0f3:	(bad)  
   14002e0f4:	(bad)  
   14002e0f5:	(bad)  
   14002e0f6:	(bad)  
   14002e0f7:	(bad)  
   14002e0f8:	(bad)  
   14002e0f9:	(bad)  
   14002e0fa:	(bad)  
   14002e0fb:	(bad)  
   14002e0fc:	(bad)  
   14002e0fd:	(bad)  
   14002e0fe:	(bad)  
   14002e0ff:	(bad)  
   14002e100:	(bad)  
   14002e101:	(bad)  
   14002e102:	(bad)  
   14002e103:	jmp    FWORD PTR [rdi+riz*8-0x32ad005c]
   14002e10a:	call   QWORD PTR [r10-0x33]
   14002e10e:	call   QWORD PTR [r10-0x33]
   14002e112:	call   QWORD PTR [r10-0x33]
   14002e116:	call   QWORD PTR [r10-0x33]
   14002e11a:	call   QWORD PTR [r10-0x33]
   14002e11e:	call   QWORD PTR [r10-0x33]
   14002e122:	call   QWORD PTR [r10-0x33]
   14002e126:	call   QWORD PTR [r10-0x33]
   14002e12a:	call   QWORD PTR [r10-0x33]
   14002e12e:	rex.B (bad) 
   14002e130:	out    dx,eax
   14002e131:	cli    
   14002e132:	out    dx,al
   14002e133:	(bad)  
   14002e134:	(bad)  
   14002e135:	(bad)  
   14002e136:	(bad)  
   14002e137:	(bad)  
   14002e138:	(bad)  
   14002e139:	(bad)  
   14002e13a:	(bad)  
   14002e13b:	(bad)  
   14002e13c:	(bad)  
   14002e13d:	(bad)  
   14002e13e:	(bad)  
   14002e13f:	(bad)  
   14002e140:	(bad)  
   14002e141:	(bad)  
   14002e142:	(bad)  
   14002e143:	(bad)  
   14002e144:	(bad)  
   14002e145:	(bad)  
   14002e146:	(bad)  
   14002e147:	inc    ebp
   14002e149:	out    dx,al
   14002e14a:	mov    edi,0x41cd52ff
   14002e14f:	call   QWORD PTR [rdx-0x33]
   14002e152:	call   QWORD PTR [r10-0x33]
   14002e156:	call   QWORD PTR [r10-0x33]
   14002e15a:	call   QWORD PTR [r10-0x33]
   14002e15e:	call   QWORD PTR [r10-0x33]
   14002e162:	call   QWORD PTR [r10-0x33]
   14002e166:	call   QWORD PTR [r10-0x33]
   14002e16a:	call   QWORD PTR [r10-0x33]
   14002e16e:	call   QWORD PTR [r10-0x33]
   14002e172:	call   QWORD PTR [r10-0x33]
   14002e176:	call   QWORD PTR [r10-0x33]
   14002e17a:	call   QWORD PTR [r10-0x33]
   14002e17e:	call   QWORD PTR [r10-0x33]
   14002e182:	call   QWORD PTR [r10-0x33]
   14002e186:	call   QWORD PTR [r10-0x33]
   14002e18a:	call   QWORD PTR [r10-0x33]
   14002e18e:	call   QWORD PTR [r10-0x33]
   14002e192:	call   QWORD PTR [r10-0x33]
   14002e196:	call   QWORD PTR [r10-0x33]
   14002e19a:	call   QWORD PTR [r10-0x33]
   14002e19e:	call   QWORD PTR [r10-0x33]
   14002e1a2:	call   QWORD PTR [r10-0x33]
   14002e1a6:	call   QWORD PTR [r10-0x33]
   14002e1aa:	call   QWORD PTR [r10-0x33]
   14002e1ae:	call   QWORD PTR [r10-0x33]
   14002e1b2:	call   QWORD PTR [r10-0x33]
   14002e1b6:	call   QWORD PTR [r10-0x33]
   14002e1ba:	inc    DWORD PTR [r8]
   14002e1bd:	add    BYTE PTR [rax],al
   14002e1bf:	cmp    eax,DWORD PTR [rax]
   14002e1c1:	add    BYTE PTR [rax],al
   14002e1c3:	sbb    al,0x0
   14002e1c5:	add    BYTE PTR [rax],al
   14002e1c7:	or     al,0x0
   14002e1c9:	add    BYTE PTR [rax],al
   14002e1cb:	add    eax,0x2000000
	...
   14002e228:	add    BYTE PTR [rax],al
   14002e22a:	add    BYTE PTR [rdx],al
   14002e22c:	add    BYTE PTR [rax],al
   14002e22e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02e234
   14002e234:	add    BYTE PTR [rax],al
   14002e236:	add    BYTE PTR [rax+rax*1],bl
   14002e239:	add    BYTE PTR [rax],al
   14002e23b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002e23e:	call   QWORD PTR [r10-0x33]
   14002e242:	call   QWORD PTR [r10-0x33]
   14002e246:	call   QWORD PTR [r10-0x33]
   14002e24a:	call   QWORD PTR [r10-0x33]
   14002e24e:	call   QWORD PTR [r10-0x33]
   14002e252:	call   QWORD PTR [r10-0x33]
   14002e256:	call   QWORD PTR [r10-0x33]
   14002e25a:	call   QWORD PTR [r10-0x33]
   14002e25e:	call   QWORD PTR [r10-0x33]
   14002e262:	call   QWORD PTR [r10-0x33]
   14002e266:	call   QWORD PTR [r10-0x33]
   14002e26a:	call   QWORD PTR [r10-0x33]
   14002e26e:	call   QWORD PTR [r10-0x33]
   14002e272:	call   QWORD PTR [r10-0x33]
   14002e276:	call   QWORD PTR [r10-0x33]
   14002e27a:	call   QWORD PTR [r10-0x33]
   14002e27e:	call   QWORD PTR [r10-0x33]
   14002e282:	call   QWORD PTR [r10-0x33]
   14002e286:	call   QWORD PTR [r10-0x33]
   14002e28a:	call   QWORD PTR [r10-0x33]
   14002e28e:	rex.B (bad) 
   14002e290:	mov    edi,0xffffb8ec
   14002e295:	(bad)  
   14002e296:	(bad)  
   14002e297:	(bad)  
   14002e298:	(bad)  
   14002e299:	(bad)  
   14002e29a:	(bad)  
   14002e29b:	(bad)  
   14002e29c:	(bad)  
   14002e29d:	(bad)  
   14002e29e:	(bad)  
   14002e29f:	(bad)  
   14002e2a0:	(bad)  
   14002e2a1:	(bad)  
   14002e2a2:	(bad)  
   14002e2a3:	(bad)  
   14002e2a4:	(bad)  
   14002e2a5:	(bad)  
   14002e2a6:	(bad)  
   14002e2a7:	(bad)  
   14002e2a8:	(bad)  
   14002e2a9:	(bad)  
   14002e2aa:	(bad)  
   14002e2ab:	(bad)  
   14002e2ac:	(bad)  
   14002e2ad:	(bad)  
   14002e2ae:	(bad)  
   14002e2af:	(bad)  
   14002e2b0:	fcomip st,st(6)
   14002e2b2:	fdiv   st(7),st
   14002e2b4:	jno    0x14002e28c
   14002e2b6:	movsxd edi,edi
   14002e2b8:	push   rdx
   14002e2b9:	int    0x41
   14002e2bb:	call   QWORD PTR [rdx-0x33]
   14002e2be:	call   QWORD PTR [r10-0x33]
   14002e2c2:	call   QWORD PTR [r10-0x33]
   14002e2c6:	call   QWORD PTR [r10-0x33]
   14002e2ca:	call   QWORD PTR [r10-0x33]
   14002e2ce:	call   QWORD PTR [r10-0x33]
   14002e2d2:	call   QWORD PTR [r10-0x33]
   14002e2d6:	call   QWORD PTR [r10-0x33]
   14002e2da:	call   QWORD PTR [r13-0x32]
   14002e2de:	rex.RB jmp QWORD PTR [r13+riz*8-0x1030065]
   14002e2e6:	cld    
   14002e2e7:	(bad)  
   14002e2e8:	(bad)  
   14002e2e9:	(bad)  
   14002e2ea:	(bad)  
   14002e2eb:	(bad)  
   14002e2ec:	(bad)  
   14002e2ed:	(bad)  
   14002e2ee:	(bad)  
   14002e2ef:	(bad)  
   14002e2f0:	(bad)  
   14002e2f1:	(bad)  
   14002e2f2:	(bad)  
   14002e2f3:	(bad)  
   14002e2f4:	(bad)  
   14002e2f5:	(bad)  
   14002e2f6:	(bad)  
   14002e2f7:	(bad)  
   14002e2f8:	(bad)  
   14002e2f9:	(bad)  
   14002e2fa:	(bad)  
   14002e2fb:	(bad)  
   14002e2fc:	(bad)  
   14002e2fd:	(bad)  
   14002e2fe:	(bad)  
   14002e2ff:	(bad)  
   14002e300:	cli    
   14002e301:	std    
   14002e302:	stc    
   14002e303:	jmp    QWORD PTR [rbx-0x2e]
   14002e306:	push   rsp
   14002e307:	call   QWORD PTR [rdx-0x33]
   14002e30a:	call   QWORD PTR [r10-0x33]
   14002e30e:	call   QWORD PTR [r10-0x33]
   14002e312:	call   QWORD PTR [r10-0x33]
   14002e316:	call   QWORD PTR [r10-0x33]
   14002e31a:	call   QWORD PTR [r10-0x33]
   14002e31e:	call   QWORD PTR [r10-0x33]
   14002e322:	call   QWORD PTR [r10-0x33]
   14002e326:	call   QWORD PTR [r10-0x33]
   14002e32a:	call   QWORD PTR [r10-0x33]
   14002e32e:	rex.B (bad) 
   14002e330:	out    dx,eax
   14002e331:	cli    
   14002e332:	out    dx,al
   14002e333:	(bad)  
   14002e334:	(bad)  
   14002e335:	(bad)  
   14002e336:	(bad)  
   14002e337:	(bad)  
   14002e338:	(bad)  
   14002e339:	(bad)  
   14002e33a:	(bad)  
   14002e33b:	(bad)  
   14002e33c:	(bad)  
   14002e33d:	(bad)  
   14002e33e:	(bad)  
   14002e33f:	(bad)  
   14002e340:	(bad)  
   14002e341:	(bad)  
   14002e342:	(bad)  
   14002e343:	(bad)  
   14002e344:	(bad)  
   14002e345:	(bad)  
   14002e346:	(bad)  
   14002e347:	inc    ebp
   14002e349:	out    dx,al
   14002e34a:	mov    edi,0x41cd52ff
   14002e34f:	call   QWORD PTR [rdx-0x33]
   14002e352:	call   QWORD PTR [r10-0x33]
   14002e356:	call   QWORD PTR [r10-0x33]
   14002e35a:	call   QWORD PTR [r10-0x33]
   14002e35e:	call   QWORD PTR [r10-0x33]
   14002e362:	call   QWORD PTR [r10-0x33]
   14002e366:	call   QWORD PTR [r10-0x33]
   14002e36a:	call   QWORD PTR [r10-0x33]
   14002e36e:	call   QWORD PTR [r10-0x33]
   14002e372:	call   QWORD PTR [r10-0x33]
   14002e376:	call   QWORD PTR [r10-0x33]
   14002e37a:	call   QWORD PTR [r10-0x33]
   14002e37e:	call   QWORD PTR [r10-0x33]
   14002e382:	call   QWORD PTR [r10-0x33]
   14002e386:	call   QWORD PTR [r10-0x33]
   14002e38a:	call   QWORD PTR [r10-0x33]
   14002e38e:	call   QWORD PTR [r10-0x33]
   14002e392:	call   QWORD PTR [r10-0x33]
   14002e396:	call   QWORD PTR [r10-0x33]
   14002e39a:	call   QWORD PTR [r10-0x33]
   14002e39e:	call   QWORD PTR [r10-0x33]
   14002e3a2:	call   QWORD PTR [r10-0x33]
   14002e3a6:	call   QWORD PTR [r10-0x33]
   14002e3aa:	call   QWORD PTR [r10-0x33]
   14002e3ae:	call   QWORD PTR [r10-0x33]
   14002e3b2:	call   QWORD PTR [r10-0x33]
   14002e3b6:	call   QWORD PTR [r10-0x33]
   14002e3ba:	inc    DWORD PTR [r8]
   14002e3bd:	add    BYTE PTR [rax],al
   14002e3bf:	cmp    eax,DWORD PTR [rax]
   14002e3c1:	add    BYTE PTR [rax],al
   14002e3c3:	sbb    al,0x0
   14002e3c5:	add    BYTE PTR [rax],al
   14002e3c7:	or     al,0x0
   14002e3c9:	add    BYTE PTR [rax],al
   14002e3cb:	add    eax,0x2000000
	...
   14002e428:	add    BYTE PTR [rax],al
   14002e42a:	add    BYTE PTR [rdx],al
   14002e42c:	add    BYTE PTR [rax],al
   14002e42e:	add    BYTE PTR [rip+0xc000000],al        # 0x14c02e434
   14002e434:	add    BYTE PTR [rax],al
   14002e436:	add    BYTE PTR [rax+rax*1],bl
   14002e439:	add    BYTE PTR [rax],al
   14002e43b:	cmp    edx,DWORD PTR [rdx-0x33]
   14002e43e:	call   QWORD PTR [r10-0x33]
   14002e442:	call   QWORD PTR [r10-0x33]
   14002e446:	call   QWORD PTR [r10-0x33]
   14002e44a:	call   QWORD PTR [r10-0x33]
   14002e44e:	call   QWORD PTR [r10-0x33]
   14002e452:	call   QWORD PTR [r10-0x33]
   14002e456:	call   QWORD PTR [r10-0x33]
   14002e45a:	call   QWORD PTR [r10-0x33]
   14002e45e:	call   QWORD PTR [r10-0x33]
   14002e462:	call   QWORD PTR [r10-0x33]
   14002e466:	call   QWORD PTR [r10-0x33]
   14002e46a:	call   QWORD PTR [r10-0x33]
   14002e46e:	call   QWORD PTR [r10-0x33]
   14002e472:	call   QWORD PTR [r10-0x33]
   14002e476:	call   QWORD PTR [r10-0x33]
   14002e47a:	call   QWORD PTR [r10-0x33]
   14002e47e:	call   QWORD PTR [r10-0x33]
   14002e482:	call   QWORD PTR [r10-0x33]
   14002e486:	call   QWORD PTR [r10-0x33]
   14002e48a:	call   QWORD PTR [r10-0x33]
   14002e48e:	jmp    FWORD PTR [r8-0x2d]
   14002e492:	pop    rdx
   14002e493:	(bad)  
   14002e494:	clc    
   14002e495:	std    
   14002e496:	clc    
   14002e497:	(bad)  
   14002e498:	(bad)  
   14002e499:	(bad)  
   14002e49a:	(bad)  
   14002e49b:	(bad)  
   14002e49c:	(bad)  
   14002e49d:	(bad)  
   14002e49e:	(bad)  
   14002e49f:	(bad)  
   14002e4a0:	(bad)  
   14002e4a1:	(bad)  
   14002e4a2:	(bad)  
   14002e4a3:	(bad)  
   14002e4a4:	(bad)  
   14002e4a5:	(bad)  
   14002e4a6:	(bad)  
   14002e4a7:	(bad)  
   14002e4a8:	(bad)  
   14002e4a9:	(bad)  
   14002e4aa:	(bad)  
   14002e4ab:	(bad)  
   14002e4ac:	(bad)  
   14002e4ad:	(bad)  
   14002e4ae:	(bad)  
   14002e4af:	(bad)  
   14002e4b0:	(bad)  
   14002e4b1:	(bad)  
   14002e4b2:	(bad)  
   14002e4b3:	(bad)  
   14002e4b4:	(bad)  
   14002e4b5:	(bad)  
   14002e4b6:	(bad)  
   14002e4b7:	call   rdx
   14002e4b9:	repnz int 0xff
   14002e4bc:	(bad)  
   14002e4bd:	loop   0x14002e44f
   14002e4bf:	push   QWORD PTR [rcx-0x2a]
   14002e4c2:	movsxd edi,edi
   14002e4c4:	(bad)  
   14002e4c6:	push   rbx
   14002e4c7:	call   QWORD PTR [rsi+rcx*8+0x43]
   14002e4cb:	call   FWORD PTR [rcx-0x31]
   14002e4ce:	rex.WB jmp FWORD PTR [r9-0x2c]
   14002e4d2:	pop    rdx
   14002e4d3:	inc    DWORD PTR [rax-0x4b008b26]
   14002e4d9:	jmp    0x13aefe48b
   14002e4de:	(bad)  
   14002e4df:	(bad)  
   14002e4e0:	(bad)  
   14002e4e1:	(bad)  
   14002e4e2:	(bad)  
   14002e4e3:	(bad)  
   14002e4e4:	(bad)  
   14002e4e5:	(bad)  
   14002e4e6:	(bad)  
   14002e4e7:	(bad)  
   14002e4e8:	(bad)  
   14002e4e9:	(bad)  
   14002e4ea:	(bad)  
   14002e4eb:	(bad)  
   14002e4ec:	(bad)  
   14002e4ed:	(bad)  
   14002e4ee:	(bad)  
   14002e4ef:	(bad)  
   14002e4f0:	(bad)  
   14002e4f1:	(bad)  
   14002e4f2:	(bad)  
   14002e4f3:	(bad)  
   14002e4f4:	(bad)  
   14002e4f5:	(bad)  
   14002e4f6:	(bad)  
   14002e4f7:	(bad)  
   14002e4f8:	(bad)  
   14002e4f9:	(bad)  
   14002e4fa:	(bad)  
   14002e4fb:	(bad)  
   14002e4fc:	(bad)  
   14002e4fd:	(bad)  
   14002e4fe:	(bad)  
   14002e4ff:	jmp    FWORD PTR [rdi+0x52ffa7e8]
   14002e505:	int    0x41
   14002e507:	call   QWORD PTR [rdx-0x33]
   14002e50a:	call   QWORD PTR [r10-0x33]
   14002e50e:	call   QWORD PTR [r10-0x33]
   14002e512:	call   QWORD PTR [r10-0x33]
   14002e516:	call   QWORD PTR [r10-0x33]
   14002e51a:	call   QWORD PTR [r10-0x33]
   14002e51e:	call   QWORD PTR [r10-0x33]
   14002e522:	call   QWORD PTR [r10-0x33]
   14002e526:	call   QWORD PTR [r10-0x33]
   14002e52a:	call   QWORD PTR [r10-0x33]
   14002e52e:	rex.B (bad) 
   14002e530:	out    dx,eax
   14002e531:	cli    
   14002e532:	out    dx,al
   14002e533:	(bad)  
   14002e534:	(bad)  
   14002e535:	(bad)  
   14002e536:	(bad)  
   14002e537:	(bad)  
   14002e538:	(bad)  
   14002e539:	(bad)  
   14002e53a:	(bad)  
   14002e53b:	(bad)  
   14002e53c:	(bad)  
   14002e53d:	(bad)  
   14002e53e:	(bad)  
   14002e53f:	(bad)  
   14002e540:	(bad)  
   14002e541:	(bad)  
   14002e542:	(bad)  
   14002e543:	(bad)  
   14002e544:	(bad)  
   14002e545:	(bad)  
   14002e546:	(bad)  
   14002e547:	inc    ebp
   14002e549:	out    dx,al
   14002e54a:	mov    edi,0x41cd52ff
   14002e54f:	call   QWORD PTR [rdx-0x33]
   14002e552:	call   QWORD PTR [r10-0x33]
   14002e556:	call   QWORD PTR [r10-0x33]
   14002e55a:	call   QWORD PTR [r10-0x33]
   14002e55e:	call   QWORD PTR [r10-0x33]
   14002e562:	call   QWORD PTR [r10-0x33]
   14002e566:	call   QWORD PTR [r10-0x33]
   14002e56a:	call   QWORD PTR [r10-0x33]
   14002e56e:	call   QWORD PTR [r10-0x33]
   14002e572:	call   QWORD PTR [r10-0x33]
   14002e576:	call   QWORD PTR [r10-0x33]
   14002e57a:	call   QWORD PTR [r10-0x33]
   14002e57e:	call   QWORD PTR [r10-0x33]
   14002e582:	call   QWORD PTR [r10-0x33]
   14002e586:	call   QWORD PTR [r10-0x33]
   14002e58a:	call   QWORD PTR [r10-0x33]
   14002e58e:	call   QWORD PTR [r10-0x33]
   14002e592:	call   QWORD PTR [r10-0x33]
   14002e596:	call   QWORD PTR [r10-0x33]
   14002e59a:	call   QWORD PTR [r10-0x33]
   14002e59e:	call   QWORD PTR [r10-0x33]
   14002e5a2:	call   QWORD PTR [r10-0x33]
   14002e5a6:	call   QWORD PTR [r10-0x33]
   14002e5aa:	call   QWORD PTR [r10-0x33]
   14002e5ae:	call   QWORD PTR [r10-0x33]
   14002e5b2:	call   QWORD PTR [r10-0x33]
   14002e5b6:	call   QWORD PTR [r10-0x33]
   14002e5ba:	inc    DWORD PTR [r8]
   14002e5bd:	add    BYTE PTR [rax],al
   14002e5bf:	cmp    eax,DWORD PTR [rax]
   14002e5c1:	add    BYTE PTR [rax],al
   14002e5c3:	sbb    al,0x0
   14002e5c5:	add    BYTE PTR [rax],al
   14002e5c7:	or     al,0x0
   14002e5c9:	add    BYTE PTR [rax],al
   14002e5cb:	add    eax,0x2000000
	...
   14002e628:	add    BYTE PTR [rax],al
   14002e62a:	add    BYTE PTR [rcx],al
   14002e62c:	add    BYTE PTR [rax],al
   14002e62e:	add    BYTE PTR [rip+0xb000000],al        # 0x14b02e634
   14002e634:	add    BYTE PTR [rax],al
   14002e636:	add    BYTE PTR [rbx],bl
   14002e638:	add    BYTE PTR [rax],al
   14002e63a:	add    BYTE PTR [rdx],bh
   14002e63c:	push   rdx
   14002e63d:	int    0x41
   14002e63f:	call   QWORD PTR [rdx-0x33]
   14002e642:	call   QWORD PTR [r10-0x33]
   14002e646:	call   QWORD PTR [r10-0x33]
   14002e64a:	call   QWORD PTR [r10-0x33]
   14002e64e:	call   QWORD PTR [r10-0x33]
   14002e652:	call   QWORD PTR [r10-0x33]
   14002e656:	call   QWORD PTR [r10-0x33]
   14002e65a:	call   QWORD PTR [r10-0x33]
   14002e65e:	call   QWORD PTR [r10-0x33]
   14002e662:	call   QWORD PTR [r10-0x33]
   14002e666:	call   QWORD PTR [r10-0x33]
   14002e66a:	call   QWORD PTR [r10-0x33]
   14002e66e:	call   QWORD PTR [r10-0x33]
   14002e672:	call   QWORD PTR [r10-0x33]
   14002e676:	call   QWORD PTR [r10-0x33]
   14002e67a:	call   QWORD PTR [r10-0x33]
   14002e67e:	call   QWORD PTR [r10-0x33]
   14002e682:	call   QWORD PTR [r10-0x33]
   14002e686:	call   QWORD PTR [r10-0x33]
   14002e68a:	call   QWORD PTR [r10-0x33]
   14002e68e:	call   QWORD PTR [r10-0x33]
   14002e692:	jmp    QWORD PTR [r8-0x681c]
   14002e699:	(bad)  
   14002e69a:	(bad)  
   14002e69b:	(bad)  
   14002e69c:	(bad)  
   14002e69d:	(bad)  
   14002e69e:	(bad)  
   14002e69f:	(bad)  
   14002e6a0:	(bad)  
   14002e6a1:	(bad)  
   14002e6a2:	(bad)  
   14002e6a3:	(bad)  
   14002e6a4:	(bad)  
   14002e6a5:	(bad)  
   14002e6a6:	(bad)  
   14002e6a7:	(bad)  
   14002e6a8:	(bad)  
   14002e6a9:	(bad)  
   14002e6aa:	(bad)  
   14002e6ab:	(bad)  
   14002e6ac:	(bad)  
   14002e6ad:	(bad)  
   14002e6ae:	(bad)  
   14002e6af:	(bad)  
   14002e6b0:	(bad)  
   14002e6b1:	(bad)  
   14002e6b2:	(bad)  
   14002e6b3:	(bad)  
   14002e6b4:	(bad)  
   14002e6b5:	(bad)  
   14002e6b6:	(bad)  
   14002e6b7:	(bad)  
   14002e6b8:	(bad)  
   14002e6b9:	(bad)  
   14002e6ba:	(bad)  
   14002e6bb:	(bad)  
   14002e6bc:	(bad)  
   14002e6bd:	(bad)  
   14002e6be:	(bad)  
   14002e6bf:	(bad)  
   14002e6c0:	(bad)  
   14002e6c1:	(bad)  
   14002e6c2:	(bad)  
   14002e6c3:	(bad)  
   14002e6c4:	(bad)  
   14002e6c5:	(bad)  
   14002e6c6:	(bad)  
   14002e6c7:	(bad)  
   14002e6c8:	(bad)  
   14002e6c9:	(bad)  
   14002e6ca:	(bad)  
   14002e6cb:	(bad)  
   14002e6cc:	(bad)  
   14002e6cd:	(bad)  
   14002e6ce:	(bad)  
   14002e6cf:	(bad)  
   14002e6d0:	(bad)  
   14002e6d1:	(bad)  
   14002e6d2:	(bad)  
   14002e6d3:	(bad)  
   14002e6d4:	(bad)  
   14002e6d5:	(bad)  
   14002e6d6:	(bad)  
   14002e6d7:	(bad)  
   14002e6d8:	(bad)  
   14002e6d9:	(bad)  
   14002e6da:	(bad)  
   14002e6db:	(bad)  
   14002e6dc:	(bad)  
   14002e6dd:	(bad)  
   14002e6de:	(bad)  
   14002e6df:	(bad)  
   14002e6e0:	(bad)  
   14002e6e1:	(bad)  
   14002e6e2:	(bad)  
   14002e6e3:	(bad)  
   14002e6e4:	(bad)  
   14002e6e5:	(bad)  
   14002e6e6:	(bad)  
   14002e6e7:	(bad)  
   14002e6e8:	(bad)  
   14002e6e9:	(bad)  
   14002e6ea:	(bad)  
   14002e6eb:	(bad)  
   14002e6ec:	(bad)  
   14002e6ed:	(bad)  
   14002e6ee:	(bad)  
   14002e6ef:	(bad)  
   14002e6f0:	(bad)  
   14002e6f1:	(bad)  
   14002e6f2:	(bad)  
   14002e6f3:	(bad)  
   14002e6f4:	(bad)  
   14002e6f5:	(bad)  
   14002e6f6:	(bad)  
   14002e6f7:	(bad)  
   14002e6f8:	(bad)  
   14002e6f9:	(bad)  
   14002e6fa:	(bad)  
   14002e6fb:	jmp    rdi
   14002e6fd:	clc    
   14002e6fe:	in     al,0xff
   14002e700:	pop    rcx
   14002e701:	iret   
   14002e702:	rex.WB call QWORD PTR [r10-0x33]
   14002e706:	call   QWORD PTR [r10-0x33]
   14002e70a:	call   QWORD PTR [r10-0x33]
   14002e70e:	call   QWORD PTR [r10-0x33]
   14002e712:	call   QWORD PTR [r10-0x33]
   14002e716:	call   QWORD PTR [r10-0x33]
   14002e71a:	call   QWORD PTR [r10-0x33]
   14002e71e:	call   QWORD PTR [r10-0x33]
   14002e722:	call   QWORD PTR [r10-0x33]
   14002e726:	call   QWORD PTR [r10-0x33]
   14002e72a:	call   QWORD PTR [r10-0x33]
   14002e72e:	rex.B (bad) 
   14002e730:	out    dx,eax
   14002e731:	cli    
   14002e732:	out    dx,al
   14002e733:	(bad)  
   14002e734:	(bad)  
   14002e735:	(bad)  
   14002e736:	(bad)  
   14002e737:	(bad)  
   14002e738:	(bad)  
   14002e739:	(bad)  
   14002e73a:	(bad)  
   14002e73b:	(bad)  
   14002e73c:	(bad)  
   14002e73d:	(bad)  
   14002e73e:	(bad)  
   14002e73f:	(bad)  
   14002e740:	(bad)  
   14002e741:	(bad)  
   14002e742:	(bad)  
   14002e743:	(bad)  
   14002e744:	(bad)  
   14002e745:	(bad)  
   14002e746:	(bad)  
   14002e747:	inc    ebp
   14002e749:	out    dx,al
   14002e74a:	mov    edi,0x41cd52ff
   14002e74f:	call   QWORD PTR [rdx-0x33]
   14002e752:	call   QWORD PTR [r10-0x33]
   14002e756:	call   QWORD PTR [r10-0x33]
   14002e75a:	call   QWORD PTR [r10-0x33]
   14002e75e:	call   QWORD PTR [r10-0x33]
   14002e762:	call   QWORD PTR [r10-0x33]
   14002e766:	call   QWORD PTR [r10-0x33]
   14002e76a:	call   QWORD PTR [r10-0x33]
   14002e76e:	call   QWORD PTR [r10-0x33]
   14002e772:	call   QWORD PTR [r10-0x33]
   14002e776:	call   QWORD PTR [r10-0x33]
   14002e77a:	call   QWORD PTR [r10-0x33]
   14002e77e:	call   QWORD PTR [r10-0x33]
   14002e782:	call   QWORD PTR [r10-0x33]
   14002e786:	call   QWORD PTR [r10-0x33]
   14002e78a:	call   QWORD PTR [r10-0x33]
   14002e78e:	call   QWORD PTR [r10-0x33]
   14002e792:	call   QWORD PTR [r10-0x33]
   14002e796:	call   QWORD PTR [r10-0x33]
   14002e79a:	call   QWORD PTR [r10-0x33]
   14002e79e:	call   QWORD PTR [r10-0x33]
   14002e7a2:	call   QWORD PTR [r10-0x33]
   14002e7a6:	call   QWORD PTR [r10-0x33]
   14002e7aa:	call   QWORD PTR [r10-0x33]
   14002e7ae:	call   QWORD PTR [r10-0x33]
   14002e7b2:	call   QWORD PTR [r10-0x33]
   14002e7b6:	call   QWORD PTR [r10-0x33]
   14002e7ba:	inc    DWORD PTR [r8]
   14002e7bd:	add    BYTE PTR [rax],al
   14002e7bf:	cmp    eax,DWORD PTR [rax]
   14002e7c1:	add    BYTE PTR [rax],al
   14002e7c3:	sbb    al,0x0
   14002e7c5:	add    BYTE PTR [rax],al
   14002e7c7:	or     al,0x0
   14002e7c9:	add    BYTE PTR [rax],al
   14002e7cb:	add    eax,0x2000000
	...
   14002e828:	add    BYTE PTR [rax],al
   14002e82a:	add    BYTE PTR [rcx],al
   14002e82c:	add    BYTE PTR [rax],al
   14002e82e:	add    BYTE PTR [rax+rax*1],al
   14002e831:	add    BYTE PTR [rax],al
   14002e833:	or     eax,DWORD PTR [rax]
   14002e835:	add    BYTE PTR [rax],al
   14002e837:	sbb    al,BYTE PTR [rax]
   14002e839:	add    BYTE PTR [rax],al
   14002e83b:	cmp    BYTE PTR [rdx-0x33],dl
   14002e83e:	call   QWORD PTR [r10-0x33]
   14002e842:	call   QWORD PTR [r10-0x33]
   14002e846:	call   QWORD PTR [r10-0x33]
   14002e84a:	call   QWORD PTR [r10-0x33]
   14002e84e:	call   QWORD PTR [r10-0x33]
   14002e852:	call   QWORD PTR [r10-0x33]
   14002e856:	call   QWORD PTR [r10-0x33]
   14002e85a:	call   QWORD PTR [r10-0x33]
   14002e85e:	call   QWORD PTR [r10-0x33]
   14002e862:	call   QWORD PTR [r10-0x33]
   14002e866:	call   QWORD PTR [r10-0x33]
   14002e86a:	call   QWORD PTR [r10-0x33]
   14002e86e:	call   QWORD PTR [r10-0x33]
   14002e872:	call   QWORD PTR [r10-0x33]
   14002e876:	call   QWORD PTR [r10-0x33]
   14002e87a:	call   QWORD PTR [r10-0x33]
   14002e87e:	call   QWORD PTR [r10-0x33]
   14002e882:	call   QWORD PTR [r10-0x33]
   14002e886:	call   QWORD PTR [r10-0x33]
   14002e88a:	call   QWORD PTR [r10-0x33]
   14002e88e:	call   QWORD PTR [r10-0x33]
   14002e892:	call   QWORD PTR [r11-0x33]
   14002e896:	rex.X inc esp
   14002e899:	out    dx,al
   14002e89a:	mov    esi,0xffffffff
   14002e89f:	(bad)  
   14002e8a0:	(bad)  
   14002e8a1:	(bad)  
   14002e8a2:	(bad)  
   14002e8a3:	(bad)  
   14002e8a4:	(bad)  
   14002e8a5:	(bad)  
   14002e8a6:	(bad)  
   14002e8a7:	(bad)  
   14002e8a8:	(bad)  
   14002e8a9:	(bad)  
   14002e8aa:	(bad)  
   14002e8ab:	(bad)  
   14002e8ac:	(bad)  
   14002e8ad:	(bad)  
   14002e8ae:	(bad)  
   14002e8af:	(bad)  
   14002e8b0:	(bad)  
   14002e8b1:	(bad)  
   14002e8b2:	(bad)  
   14002e8b3:	(bad)  
   14002e8b4:	(bad)  
   14002e8b5:	(bad)  
   14002e8b6:	(bad)  
   14002e8b7:	(bad)  
   14002e8b8:	(bad)  
   14002e8b9:	(bad)  
   14002e8ba:	(bad)  
   14002e8bb:	(bad)  
   14002e8bc:	(bad)  
   14002e8bd:	(bad)  
   14002e8be:	(bad)  
   14002e8bf:	(bad)  
   14002e8c0:	(bad)  
   14002e8c1:	(bad)  
   14002e8c2:	(bad)  
   14002e8c3:	(bad)  
   14002e8c4:	(bad)  
   14002e8c5:	(bad)  
   14002e8c6:	(bad)  
   14002e8c7:	(bad)  
   14002e8c8:	(bad)  
   14002e8c9:	(bad)  
   14002e8ca:	(bad)  
   14002e8cb:	(bad)  
   14002e8cc:	(bad)  
   14002e8cd:	(bad)  
   14002e8ce:	(bad)  
   14002e8cf:	(bad)  
   14002e8d0:	(bad)  
   14002e8d1:	(bad)  
   14002e8d2:	(bad)  
   14002e8d3:	(bad)  
   14002e8d4:	(bad)  
   14002e8d5:	(bad)  
   14002e8d6:	(bad)  
   14002e8d7:	(bad)  
   14002e8d8:	(bad)  
   14002e8d9:	(bad)  
   14002e8da:	(bad)  
   14002e8db:	(bad)  
   14002e8dc:	(bad)  
   14002e8dd:	(bad)  
   14002e8de:	(bad)  
   14002e8df:	(bad)  
   14002e8e0:	(bad)  
   14002e8e1:	(bad)  
   14002e8e2:	(bad)  
   14002e8e3:	(bad)  
   14002e8e4:	(bad)  
   14002e8e5:	(bad)  
   14002e8e6:	(bad)  
   14002e8e7:	(bad)  
   14002e8e8:	(bad)  
   14002e8e9:	(bad)  
   14002e8ea:	(bad)  
   14002e8eb:	(bad)  
   14002e8ec:	(bad)  
   14002e8ed:	(bad)  
   14002e8ee:	(bad)  
   14002e8ef:	(bad)  
   14002e8f0:	(bad)  
   14002e8f1:	(bad)  
   14002e8f2:	(bad)  
   14002e8f3:	(bad)  
   14002e8f4:	(bad)  
   14002e8f5:	(bad)  
   14002e8f6:	(bad)  
   14002e8f7:	push   rbp
   14002e8f9:	cld    
   14002e8fa:	cmc    
   14002e8fb:	push   QWORD PTR [rax-0x2a]
   14002e8fe:	(bad)  
   14002e8ff:	call   QWORD PTR [rdx-0x33]
   14002e902:	call   QWORD PTR [r10-0x33]
   14002e906:	call   QWORD PTR [r10-0x33]
   14002e90a:	call   QWORD PTR [r10-0x33]
   14002e90e:	call   QWORD PTR [r10-0x33]
   14002e912:	call   QWORD PTR [r10-0x33]
   14002e916:	call   QWORD PTR [r10-0x33]
   14002e91a:	call   QWORD PTR [r10-0x33]
   14002e91e:	call   QWORD PTR [r10-0x33]
   14002e922:	call   QWORD PTR [r10-0x33]
   14002e926:	call   QWORD PTR [r10-0x33]
   14002e92a:	call   QWORD PTR [r10-0x33]
   14002e92e:	rex.B (bad) 
   14002e930:	out    dx,eax
   14002e931:	cli    
   14002e932:	out    dx,al
   14002e933:	(bad)  
   14002e934:	(bad)  
   14002e935:	(bad)  
   14002e936:	(bad)  
   14002e937:	(bad)  
   14002e938:	(bad)  
   14002e939:	(bad)  
   14002e93a:	(bad)  
   14002e93b:	(bad)  
   14002e93c:	(bad)  
   14002e93d:	(bad)  
   14002e93e:	(bad)  
   14002e93f:	(bad)  
   14002e940:	(bad)  
   14002e941:	(bad)  
   14002e942:	(bad)  
   14002e943:	(bad)  
   14002e944:	(bad)  
   14002e945:	(bad)  
   14002e946:	(bad)  
   14002e947:	inc    ebp
   14002e949:	out    dx,al
   14002e94a:	mov    edi,0x41cd52ff
   14002e94f:	call   QWORD PTR [rdx-0x33]
   14002e952:	call   QWORD PTR [r10-0x33]
   14002e956:	call   QWORD PTR [r10-0x33]
   14002e95a:	call   QWORD PTR [r10-0x33]
   14002e95e:	call   QWORD PTR [r10-0x33]
   14002e962:	call   QWORD PTR [r10-0x33]
   14002e966:	call   QWORD PTR [r10-0x33]
   14002e96a:	call   QWORD PTR [r10-0x33]
   14002e96e:	call   QWORD PTR [r10-0x33]
   14002e972:	call   QWORD PTR [r10-0x33]
   14002e976:	call   QWORD PTR [r10-0x33]
   14002e97a:	call   QWORD PTR [r10-0x33]
   14002e97e:	call   QWORD PTR [r10-0x33]
   14002e982:	call   QWORD PTR [r10-0x33]
   14002e986:	call   QWORD PTR [r10-0x33]
   14002e98a:	call   QWORD PTR [r10-0x33]
   14002e98e:	call   QWORD PTR [r10-0x33]
   14002e992:	call   QWORD PTR [r10-0x33]
   14002e996:	call   QWORD PTR [r10-0x33]
   14002e99a:	call   QWORD PTR [r10-0x33]
   14002e99e:	call   QWORD PTR [r10-0x33]
   14002e9a2:	call   QWORD PTR [r10-0x33]
   14002e9a6:	call   QWORD PTR [r10-0x33]
   14002e9aa:	call   QWORD PTR [r10-0x33]
   14002e9ae:	call   QWORD PTR [r10-0x33]
   14002e9b2:	call   QWORD PTR [r10-0x33]
   14002e9b6:	call   QWORD PTR [r10-0x33]
   14002e9ba:	inc    DWORD PTR [r8]
   14002e9bd:	add    BYTE PTR [rax],al
   14002e9bf:	cmp    eax,DWORD PTR [rax]
   14002e9c1:	add    BYTE PTR [rax],al
   14002e9c3:	sbb    al,0x0
   14002e9c5:	add    BYTE PTR [rax],al
   14002e9c7:	or     al,0x0
   14002e9c9:	add    BYTE PTR [rax],al
   14002e9cb:	add    eax,0x2000000
	...
   14002ea28:	add    BYTE PTR [rax],al
   14002ea2a:	add    BYTE PTR [rcx],al
   14002ea2c:	add    BYTE PTR [rax],al
   14002ea2e:	add    BYTE PTR [rax+rax*1],al
   14002ea31:	add    BYTE PTR [rax],al
   14002ea33:	or     DWORD PTR [rax],eax
   14002ea35:	add    BYTE PTR [rax],al
   14002ea37:	(bad)  
   14002ea38:	add    BYTE PTR [rax],al
   14002ea3a:	add    BYTE PTR [rdx+rdx*2],dh
   14002ea3d:	int    0x41
   14002ea3f:	call   QWORD PTR [rdx-0x33]
   14002ea42:	call   QWORD PTR [r10-0x33]
   14002ea46:	call   QWORD PTR [r10-0x33]
   14002ea4a:	call   QWORD PTR [r10-0x33]
   14002ea4e:	call   QWORD PTR [r10-0x33]
   14002ea52:	call   QWORD PTR [r10-0x33]
   14002ea56:	call   QWORD PTR [r10-0x33]
   14002ea5a:	call   QWORD PTR [r10-0x33]
   14002ea5e:	call   QWORD PTR [r10-0x33]
   14002ea62:	call   QWORD PTR [r10-0x33]
   14002ea66:	call   QWORD PTR [r10-0x33]
   14002ea6a:	call   QWORD PTR [r10-0x33]
   14002ea6e:	call   QWORD PTR [r10-0x33]
   14002ea72:	call   QWORD PTR [r10-0x33]
   14002ea76:	call   QWORD PTR [r10-0x33]
   14002ea7a:	call   QWORD PTR [r10-0x33]
   14002ea7e:	call   QWORD PTR [r10-0x33]
   14002ea82:	call   QWORD PTR [r10-0x33]
   14002ea86:	call   QWORD PTR [r10-0x33]
   14002ea8a:	call   QWORD PTR [r10-0x33]
   14002ea8e:	call   QWORD PTR [r10-0x33]
   14002ea92:	call   QWORD PTR [r10-0x33]
   14002ea96:	call   QWORD PTR [r13-0x32]
   14002ea9a:	rex.RB (bad) 
   14002ea9c:	mov    edi,0xffffb9ed
   14002eaa1:	(bad)  
   14002eaa2:	(bad)  
   14002eaa3:	(bad)  
   14002eaa4:	(bad)  
   14002eaa5:	(bad)  
   14002eaa6:	(bad)  
   14002eaa7:	(bad)  
   14002eaa8:	(bad)  
   14002eaa9:	(bad)  
   14002eaaa:	(bad)  
   14002eaab:	(bad)  
   14002eaac:	(bad)  
   14002eaad:	(bad)  
   14002eaae:	(bad)  
   14002eaaf:	(bad)  
   14002eab0:	(bad)  
   14002eab1:	(bad)  
   14002eab2:	(bad)  
   14002eab3:	(bad)  
   14002eab4:	(bad)  
   14002eab5:	(bad)  
   14002eab6:	(bad)  
   14002eab7:	(bad)  
   14002eab8:	(bad)  
   14002eab9:	(bad)  
   14002eaba:	(bad)  
   14002eabb:	(bad)  
   14002eabc:	(bad)  
   14002eabd:	(bad)  
   14002eabe:	(bad)  
   14002eabf:	(bad)  
   14002eac0:	(bad)  
   14002eac1:	(bad)  
   14002eac2:	(bad)  
   14002eac3:	(bad)  
   14002eac4:	(bad)  
   14002eac5:	(bad)  
   14002eac6:	(bad)  
   14002eac7:	(bad)  
   14002eac8:	(bad)  
   14002eac9:	(bad)  
   14002eaca:	(bad)  
   14002eacb:	(bad)  
   14002eacc:	(bad)  
   14002eacd:	(bad)  
   14002eace:	(bad)  
   14002eacf:	(bad)  
   14002ead0:	(bad)  
   14002ead1:	(bad)  
   14002ead2:	(bad)  
   14002ead3:	(bad)  
   14002ead4:	(bad)  
   14002ead5:	(bad)  
   14002ead6:	(bad)  
   14002ead7:	(bad)  
   14002ead8:	(bad)  
   14002ead9:	(bad)  
   14002eada:	(bad)  
   14002eadb:	(bad)  
   14002eadc:	(bad)  
   14002eadd:	(bad)  
   14002eade:	(bad)  
   14002eadf:	(bad)  
   14002eae0:	(bad)  
   14002eae1:	(bad)  
   14002eae2:	(bad)  
   14002eae3:	(bad)  
   14002eae4:	(bad)  
   14002eae5:	(bad)  
   14002eae6:	(bad)  
   14002eae7:	(bad)  
   14002eae8:	(bad)  
   14002eae9:	(bad)  
   14002eaea:	(bad)  
   14002eaeb:	(bad)  
   14002eaec:	(bad)  
   14002eaed:	(bad)  
   14002eaee:	(bad)  
   14002eaef:	(bad)  
   14002eaf0:	(bad)  
   14002eaf1:	(bad)  
   14002eaf2:	(bad)  
   14002eaf3:	push   rax
   14002eaf5:	sti    
   14002eaf6:	out    dx,eax
   14002eaf7:	push   QWORD PTR [rbp-0x29]
   14002eafa:	push   0x41cd52ff
   14002eaff:	call   QWORD PTR [rdx-0x33]
   14002eb02:	call   QWORD PTR [r10-0x33]
   14002eb06:	call   QWORD PTR [r10-0x33]
   14002eb0a:	call   QWORD PTR [r10-0x33]
   14002eb0e:	call   QWORD PTR [r10-0x33]
   14002eb12:	call   QWORD PTR [r10-0x33]
   14002eb16:	call   QWORD PTR [r10-0x33]
   14002eb1a:	call   QWORD PTR [r10-0x33]
   14002eb1e:	call   QWORD PTR [r10-0x33]
   14002eb22:	call   QWORD PTR [r10-0x33]
   14002eb26:	call   QWORD PTR [r10-0x33]
   14002eb2a:	call   QWORD PTR [r10-0x33]
   14002eb2e:	rex.B (bad) 
   14002eb30:	out    dx,eax
   14002eb31:	cli    
   14002eb32:	out    dx,al
   14002eb33:	(bad)  
   14002eb34:	(bad)  
   14002eb35:	(bad)  
   14002eb36:	(bad)  
   14002eb37:	(bad)  
   14002eb38:	(bad)  
   14002eb39:	(bad)  
   14002eb3a:	(bad)  
   14002eb3b:	(bad)  
   14002eb3c:	(bad)  
   14002eb3d:	(bad)  
   14002eb3e:	(bad)  
   14002eb3f:	(bad)  
   14002eb40:	(bad)  
   14002eb41:	(bad)  
   14002eb42:	(bad)  
   14002eb43:	(bad)  
   14002eb44:	(bad)  
   14002eb45:	(bad)  
   14002eb46:	(bad)  
   14002eb47:	inc    ebp
   14002eb49:	out    dx,al
   14002eb4a:	mov    edi,0x41cd52ff
   14002eb4f:	call   QWORD PTR [rdx-0x33]
   14002eb52:	call   QWORD PTR [r10-0x33]
   14002eb56:	call   QWORD PTR [r10-0x33]
   14002eb5a:	call   QWORD PTR [r10-0x33]
   14002eb5e:	call   QWORD PTR [r10-0x33]
   14002eb62:	call   QWORD PTR [r10-0x33]
   14002eb66:	call   QWORD PTR [r10-0x33]
   14002eb6a:	call   QWORD PTR [r10-0x33]
   14002eb6e:	call   QWORD PTR [r10-0x33]
   14002eb72:	call   QWORD PTR [r10-0x33]
   14002eb76:	call   QWORD PTR [r10-0x33]
   14002eb7a:	call   QWORD PTR [r10-0x33]
   14002eb7e:	call   QWORD PTR [r10-0x33]
   14002eb82:	call   QWORD PTR [r10-0x33]
   14002eb86:	call   QWORD PTR [r10-0x33]
   14002eb8a:	call   QWORD PTR [r10-0x33]
   14002eb8e:	call   QWORD PTR [r10-0x33]
   14002eb92:	call   QWORD PTR [r10-0x33]
   14002eb96:	call   QWORD PTR [r10-0x33]
   14002eb9a:	call   QWORD PTR [r10-0x33]
   14002eb9e:	call   QWORD PTR [r10-0x33]
   14002eba2:	call   QWORD PTR [r10-0x33]
   14002eba6:	call   QWORD PTR [r10-0x33]
   14002ebaa:	call   QWORD PTR [r10-0x33]
   14002ebae:	call   QWORD PTR [r10-0x33]
   14002ebb2:	call   QWORD PTR [r10-0x33]
   14002ebb6:	call   QWORD PTR [r10-0x33]
   14002ebba:	inc    DWORD PTR [r8]
   14002ebbd:	add    BYTE PTR [rax],al
   14002ebbf:	cmp    eax,DWORD PTR [rax]
   14002ebc1:	add    BYTE PTR [rax],al
   14002ebc3:	sbb    al,0x0
   14002ebc5:	add    BYTE PTR [rax],al
   14002ebc7:	or     al,0x0
   14002ebc9:	add    BYTE PTR [rax],al
   14002ebcb:	add    eax,0x2000000
	...
   14002ec28:	add    BYTE PTR [rax],al
   14002ec2a:	add    BYTE PTR [rcx],al
   14002ec2c:	add    BYTE PTR [rax],al
   14002ec2e:	add    BYTE PTR [rbx],al
   14002ec30:	add    BYTE PTR [rax],al
   14002ec32:	add    BYTE PTR [rdi],al
   14002ec34:	add    BYTE PTR [rax],al
   14002ec36:	add    BYTE PTR [rbx],dl
   14002ec38:	add    BYTE PTR [rax],al
   14002ec3a:	add    BYTE PTR [rip+0xffffffffff41cd52],ch        # 0x13f44b992
   14002ec40:	push   rdx
   14002ec41:	int    0x41
   14002ec43:	call   QWORD PTR [rdx-0x33]
   14002ec46:	call   QWORD PTR [r10-0x33]
   14002ec4a:	call   QWORD PTR [r10-0x33]
   14002ec4e:	call   QWORD PTR [r10-0x33]
   14002ec52:	call   QWORD PTR [r10-0x33]
   14002ec56:	call   QWORD PTR [r10-0x33]
   14002ec5a:	call   QWORD PTR [r10-0x33]
   14002ec5e:	call   QWORD PTR [r10-0x33]
   14002ec62:	call   QWORD PTR [r10-0x33]
   14002ec66:	call   QWORD PTR [r10-0x33]
   14002ec6a:	call   QWORD PTR [r10-0x33]
   14002ec6e:	call   QWORD PTR [r10-0x33]
   14002ec72:	call   QWORD PTR [r10-0x33]
   14002ec76:	call   QWORD PTR [r10-0x33]
   14002ec7a:	call   QWORD PTR [r10-0x33]
   14002ec7e:	call   QWORD PTR [r10-0x33]
   14002ec82:	call   QWORD PTR [r10-0x33]
   14002ec86:	call   QWORD PTR [r10-0x33]
   14002ec8a:	call   QWORD PTR [r10-0x33]
   14002ec8e:	call   QWORD PTR [r10-0x33]
   14002ec92:	call   QWORD PTR [r10-0x33]
   14002ec96:	call   QWORD PTR [r10-0x33]
   14002ec9a:	call   QWORD PTR [r10-0x33]
   14002ec9e:	call   QWORD PTR [r11-0xc007620]
   14002eca5:	sti    
   14002eca6:	repnz (bad) 
   14002eca8:	(bad)  
   14002eca9:	(bad)  
   14002ecaa:	(bad)  
   14002ecab:	(bad)  
   14002ecac:	(bad)  
   14002ecad:	(bad)  
   14002ecae:	(bad)  
   14002ecaf:	(bad)  
   14002ecb0:	(bad)  
   14002ecb1:	(bad)  
   14002ecb2:	(bad)  
   14002ecb3:	(bad)  
   14002ecb4:	(bad)  
   14002ecb5:	(bad)  
   14002ecb6:	(bad)  
   14002ecb7:	(bad)  
   14002ecb8:	(bad)  
   14002ecb9:	(bad)  
   14002ecba:	(bad)  
   14002ecbb:	(bad)  
   14002ecbc:	(bad)  
   14002ecbd:	(bad)  
   14002ecbe:	(bad)  
   14002ecbf:	(bad)  
   14002ecc0:	(bad)  
   14002ecc1:	(bad)  
   14002ecc2:	(bad)  
   14002ecc3:	(bad)  
   14002ecc4:	(bad)  
   14002ecc5:	(bad)  
   14002ecc6:	(bad)  
   14002ecc7:	(bad)  
   14002ecc8:	(bad)  
   14002ecc9:	(bad)  
   14002ecca:	(bad)  
   14002eccb:	(bad)  
   14002eccc:	(bad)  
   14002eccd:	(bad)  
   14002ecce:	(bad)  
   14002eccf:	(bad)  
   14002ecd0:	(bad)  
   14002ecd1:	(bad)  
   14002ecd2:	(bad)  
   14002ecd3:	(bad)  
   14002ecd4:	(bad)  
   14002ecd5:	(bad)  
   14002ecd6:	(bad)  
   14002ecd7:	(bad)  
   14002ecd8:	(bad)  
   14002ecd9:	(bad)  
   14002ecda:	(bad)  
   14002ecdb:	(bad)  
   14002ecdc:	(bad)  
   14002ecdd:	(bad)  
   14002ecde:	(bad)  
   14002ecdf:	(bad)  
   14002ece0:	(bad)  
   14002ece1:	(bad)  
   14002ece2:	(bad)  
   14002ece3:	(bad)  
   14002ece4:	(bad)  
   14002ece5:	(bad)  
   14002ece6:	(bad)  
   14002ece7:	(bad)  
   14002ece8:	(bad)  
   14002ece9:	(bad)  
   14002ecea:	(bad)  
   14002eceb:	(bad)  
   14002ecec:	(bad)  
   14002eced:	(bad)  
   14002ecee:	(bad)  
   14002ecef:	dec    ecx
   14002ecf1:	lock (bad) 
   14002ecf3:	jmp    QWORD PTR [rbx-0x2e]
   14002ecf6:	push   rsp
   14002ecf7:	call   QWORD PTR [rdx-0x33]
   14002ecfa:	call   QWORD PTR [r10-0x33]
   14002ecfe:	call   QWORD PTR [r10-0x33]
   14002ed02:	call   QWORD PTR [r10-0x33]
   14002ed06:	call   QWORD PTR [r10-0x33]
   14002ed0a:	call   QWORD PTR [r10-0x33]
   14002ed0e:	call   QWORD PTR [r10-0x33]
   14002ed12:	call   QWORD PTR [r10-0x33]
   14002ed16:	call   QWORD PTR [r10-0x33]
   14002ed1a:	call   QWORD PTR [r10-0x33]
   14002ed1e:	call   QWORD PTR [r10-0x33]
   14002ed22:	call   QWORD PTR [r10-0x33]
   14002ed26:	call   QWORD PTR [r10-0x33]
   14002ed2a:	call   QWORD PTR [r10-0x33]
   14002ed2e:	jmp    QWORD PTR [r14-0x5100621b]
   14002ed35:	call   0x128b1ece0
   14002ed3a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ed3b:	jmp    FWORD PTR [rsi-0x51005918]
   14002ed41:	call   0x128b1ecec
   14002ed46:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ed47:	dec    DWORD PTR [rdi+0x52ff84df]
   14002ed4d:	int    0x41
   14002ed4f:	call   QWORD PTR [rdx-0x33]
   14002ed52:	call   QWORD PTR [r10-0x33]
   14002ed56:	call   QWORD PTR [r10-0x33]
   14002ed5a:	call   QWORD PTR [r10-0x33]
   14002ed5e:	call   QWORD PTR [r10-0x33]
   14002ed62:	call   QWORD PTR [r10-0x33]
   14002ed66:	call   QWORD PTR [r10-0x33]
   14002ed6a:	call   QWORD PTR [r10-0x33]
   14002ed6e:	call   QWORD PTR [r10-0x33]
   14002ed72:	call   QWORD PTR [r10-0x33]
   14002ed76:	call   QWORD PTR [r10-0x33]
   14002ed7a:	call   QWORD PTR [r10-0x33]
   14002ed7e:	call   QWORD PTR [r10-0x33]
   14002ed82:	call   QWORD PTR [r10-0x33]
   14002ed86:	call   QWORD PTR [r10-0x33]
   14002ed8a:	call   QWORD PTR [r10-0x33]
   14002ed8e:	call   QWORD PTR [r10-0x33]
   14002ed92:	call   QWORD PTR [r10-0x33]
   14002ed96:	call   QWORD PTR [r10-0x33]
   14002ed9a:	call   QWORD PTR [r10-0x33]
   14002ed9e:	call   QWORD PTR [r10-0x33]
   14002eda2:	call   QWORD PTR [r10-0x33]
   14002eda6:	call   QWORD PTR [r10-0x33]
   14002edaa:	call   QWORD PTR [r10-0x33]
   14002edae:	call   QWORD PTR [r10-0x33]
   14002edb2:	call   QWORD PTR [r10-0x33]
   14002edb6:	call   QWORD PTR [r10-0x33]
   14002edba:	inc    DWORD PTR [r8]
   14002edbd:	add    BYTE PTR [rax],al
   14002edbf:	cmp    eax,DWORD PTR [rax]
   14002edc1:	add    BYTE PTR [rax],al
   14002edc3:	sbb    al,0x0
   14002edc5:	add    BYTE PTR [rax],al
   14002edc7:	or     al,0x0
   14002edc9:	add    BYTE PTR [rax],al
   14002edcb:	add    eax,0x2000000
	...
   14002ee28:	add    BYTE PTR [rax],al
   14002ee2a:	add    BYTE PTR [rcx],al
   14002ee2c:	add    BYTE PTR [rax],al
   14002ee2e:	add    BYTE PTR [rdx],al
   14002ee30:	add    BYTE PTR [rax],al
   14002ee32:	add    BYTE PTR [rip+0xe000000],al        # 0x14e02ee38
   14002ee38:	add    BYTE PTR [rax],al
   14002ee3a:	add    BYTE PTR [rip+0xffffffffff41cd52],ah        # 0x13f44bb92
   14002ee40:	push   rdx
   14002ee41:	int    0x41
   14002ee43:	call   QWORD PTR [rdx-0x33]
   14002ee46:	call   QWORD PTR [r10-0x33]
   14002ee4a:	call   QWORD PTR [r10-0x33]
   14002ee4e:	call   QWORD PTR [r10-0x33]
   14002ee52:	call   QWORD PTR [r10-0x33]
   14002ee56:	call   QWORD PTR [r10-0x33]
   14002ee5a:	call   QWORD PTR [r10-0x33]
   14002ee5e:	call   QWORD PTR [r10-0x33]
   14002ee62:	call   QWORD PTR [r10-0x33]
   14002ee66:	call   QWORD PTR [r10-0x33]
   14002ee6a:	call   QWORD PTR [r10-0x33]
   14002ee6e:	call   QWORD PTR [r10-0x33]
   14002ee72:	call   QWORD PTR [r10-0x33]
   14002ee76:	call   QWORD PTR [r10-0x33]
   14002ee7a:	call   QWORD PTR [r10-0x33]
   14002ee7e:	call   QWORD PTR [r10-0x33]
   14002ee82:	call   QWORD PTR [r10-0x33]
   14002ee86:	call   QWORD PTR [r10-0x33]
   14002ee8a:	call   QWORD PTR [r10-0x33]
   14002ee8e:	call   QWORD PTR [r10-0x33]
   14002ee92:	call   QWORD PTR [r10-0x33]
   14002ee96:	call   QWORD PTR [r10-0x33]
   14002ee9a:	call   QWORD PTR [r10-0x33]
   14002ee9e:	call   QWORD PTR [r10-0x33]
   14002eea2:	call   FWORD PTR [r11-0x30]
   14002eea6:	rex.WXB jmp QWORD PTR [r10-0x1b00661c]
   14002eead:	mul    ecx
   14002eeaf:	(bad)  
   14002eeb0:	(bad)  
   14002eeb1:	(bad)  
   14002eeb2:	(bad)  
   14002eeb3:	(bad)  
   14002eeb4:	(bad)  
   14002eeb5:	(bad)  
   14002eeb6:	(bad)  
   14002eeb7:	(bad)  
   14002eeb8:	(bad)  
   14002eeb9:	(bad)  
   14002eeba:	(bad)  
   14002eebb:	(bad)  
   14002eebc:	(bad)  
   14002eebd:	(bad)  
   14002eebe:	(bad)  
   14002eebf:	(bad)  
   14002eec0:	(bad)  
   14002eec1:	(bad)  
   14002eec2:	(bad)  
   14002eec3:	(bad)  
   14002eec4:	(bad)  
   14002eec5:	(bad)  
   14002eec6:	(bad)  
   14002eec7:	(bad)  
   14002eec8:	(bad)  
   14002eec9:	(bad)  
   14002eeca:	(bad)  
   14002eecb:	(bad)  
   14002eecc:	(bad)  
   14002eecd:	(bad)  
   14002eece:	(bad)  
   14002eecf:	(bad)  
   14002eed0:	(bad)  
   14002eed1:	(bad)  
   14002eed2:	(bad)  
   14002eed3:	(bad)  
   14002eed4:	(bad)  
   14002eed5:	(bad)  
   14002eed6:	(bad)  
   14002eed7:	(bad)  
   14002eed8:	(bad)  
   14002eed9:	(bad)  
   14002eeda:	(bad)  
   14002eedb:	(bad)  
   14002eedc:	(bad)  
   14002eedd:	(bad)  
   14002eede:	(bad)  
   14002eedf:	(bad)  
   14002eee0:	(bad)  
   14002eee1:	(bad)  
   14002eee2:	(bad)  
   14002eee3:	(bad)  
   14002eee4:	stc    
   14002eee5:	std    
   14002eee6:	clc    
   14002eee7:	inc    esi
   14002eee9:	out    dx,eax
   14002eeea:	sar    bh,0x79
   14002eeed:	fsubr  DWORD PTR [rbx-0x1]
   14002eef0:	push   rdx
   14002eef1:	int    0x41
   14002eef3:	call   QWORD PTR [rdx-0x33]
   14002eef6:	call   QWORD PTR [r10-0x33]
   14002eefa:	call   QWORD PTR [r10-0x33]
   14002eefe:	call   QWORD PTR [r10-0x33]
   14002ef02:	call   QWORD PTR [r10-0x33]
   14002ef06:	call   QWORD PTR [r10-0x33]
   14002ef0a:	call   QWORD PTR [r10-0x33]
   14002ef0e:	call   QWORD PTR [r10-0x33]
   14002ef12:	call   QWORD PTR [r10-0x33]
   14002ef16:	call   QWORD PTR [r10-0x33]
   14002ef1a:	call   QWORD PTR [r10-0x33]
   14002ef1e:	call   QWORD PTR [r10-0x33]
   14002ef22:	call   QWORD PTR [r10-0x33]
   14002ef26:	call   QWORD PTR [r10-0x33]
   14002ef2a:	call   QWORD PTR [r10-0x33]
   14002ef2e:	call   QWORD PTR [r10-0x33]
   14002ef32:	call   QWORD PTR [r10-0x33]
   14002ef36:	call   QWORD PTR [r10-0x33]
   14002ef3a:	call   QWORD PTR [r10-0x33]
   14002ef3e:	call   QWORD PTR [r10-0x33]
   14002ef42:	call   QWORD PTR [r10-0x33]
   14002ef46:	call   QWORD PTR [r10-0x33]
   14002ef4a:	call   QWORD PTR [r10-0x33]
   14002ef4e:	call   QWORD PTR [r10-0x33]
   14002ef52:	call   QWORD PTR [r10-0x33]
   14002ef56:	call   QWORD PTR [r10-0x33]
   14002ef5a:	call   QWORD PTR [r10-0x33]
   14002ef5e:	call   QWORD PTR [r10-0x33]
   14002ef62:	call   QWORD PTR [r10-0x33]
   14002ef66:	call   QWORD PTR [r10-0x33]
   14002ef6a:	call   QWORD PTR [r10-0x33]
   14002ef6e:	call   QWORD PTR [r10-0x33]
   14002ef72:	call   QWORD PTR [r10-0x33]
   14002ef76:	call   QWORD PTR [r10-0x33]
   14002ef7a:	call   QWORD PTR [r10-0x33]
   14002ef7e:	call   QWORD PTR [r10-0x33]
   14002ef82:	call   QWORD PTR [r10-0x33]
   14002ef86:	call   QWORD PTR [r10-0x33]
   14002ef8a:	call   QWORD PTR [r10-0x33]
   14002ef8e:	call   QWORD PTR [r10-0x33]
   14002ef92:	call   QWORD PTR [r10-0x33]
   14002ef96:	call   QWORD PTR [r10-0x33]
   14002ef9a:	call   QWORD PTR [r10-0x33]
   14002ef9e:	call   QWORD PTR [r10-0x33]
   14002efa2:	call   QWORD PTR [r10-0x33]
   14002efa6:	call   QWORD PTR [r10-0x33]
   14002efaa:	call   QWORD PTR [r10-0x33]
   14002efae:	call   QWORD PTR [r10-0x33]
   14002efb2:	call   QWORD PTR [r10-0x33]
   14002efb6:	call   QWORD PTR [r10-0x33]
   14002efba:	inc    DWORD PTR [r8]
   14002efbd:	add    BYTE PTR [rax],al
   14002efbf:	cmp    eax,DWORD PTR [rax]
   14002efc1:	add    BYTE PTR [rax],al
   14002efc3:	sbb    al,0x0
   14002efc5:	add    BYTE PTR [rax],al
   14002efc7:	or     al,0x0
   14002efc9:	add    BYTE PTR [rax],al
   14002efcb:	add    eax,0x2000000
	...
   14002f02c:	add    BYTE PTR [rax],al
   14002f02e:	add    BYTE PTR [rcx],al
   14002f030:	add    BYTE PTR [rax],al
   14002f032:	add    BYTE PTR [rbx],al
   14002f034:	add    BYTE PTR [rax],al
   14002f036:	add    BYTE PTR [rcx],cl
   14002f038:	add    BYTE PTR [rax],al
   14002f03a:	add    BYTE PTR [rcx],bl
   14002f03c:	rex.RB stos DWORD PTR es:[rdi],eax
   14002f03e:	(bad)  
   14002f03f:	cdq    
   14002f040:	push   rdx
   14002f041:	int    0x41
   14002f043:	call   QWORD PTR [rdx-0x33]
   14002f046:	call   QWORD PTR [r10-0x33]
   14002f04a:	call   QWORD PTR [r10-0x33]
   14002f04e:	call   QWORD PTR [r10-0x33]
   14002f052:	call   QWORD PTR [r10-0x33]
   14002f056:	call   QWORD PTR [r10-0x33]
   14002f05a:	call   QWORD PTR [r10-0x33]
   14002f05e:	call   QWORD PTR [r10-0x33]
   14002f062:	call   QWORD PTR [r10-0x33]
   14002f066:	call   QWORD PTR [r10-0x33]
   14002f06a:	call   QWORD PTR [r10-0x33]
   14002f06e:	call   QWORD PTR [r10-0x33]
   14002f072:	call   QWORD PTR [r10-0x33]
   14002f076:	call   QWORD PTR [r10-0x33]
   14002f07a:	call   QWORD PTR [r10-0x33]
   14002f07e:	call   QWORD PTR [r10-0x33]
   14002f082:	call   QWORD PTR [r10-0x33]
   14002f086:	call   QWORD PTR [r10-0x33]
   14002f08a:	call   QWORD PTR [r10-0x33]
   14002f08e:	call   QWORD PTR [r10-0x33]
   14002f092:	call   QWORD PTR [r10-0x33]
   14002f096:	call   QWORD PTR [r10-0x33]
   14002f09a:	call   QWORD PTR [r10-0x33]
   14002f09e:	call   QWORD PTR [r10-0x33]
   14002f0a2:	call   QWORD PTR [r10-0x33]
   14002f0a6:	call   QWORD PTR [r10-0x33]
   14002f0aa:	call   QWORD PTR [r10-0x33]
   14002f0ae:	jmp    FWORD PTR [r15-0x2b]
   14002f0b2:	(bad)  
   14002f0b3:	call   FWORD PTR [rcx-0x4400711f]
   14002f0b9:	jmp    0x14002f06f
   14002f0bb:	call   rdx
   14002f0bd:	repnz int 0xff
   14002f0c0:	in     eax,0xf7
   14002f0c2:	loop   0x14002f0c3
   14002f0c4:	jmp    0x14002f0bf
   14002f0c6:	jmp    0x132ffe4ca
   14002f0cb:	push   rcx
   14002f0cd:	sti    
   14002f0ce:	out    dx,eax
   14002f0cf:	(bad)  
   14002f0d0:	call   0x11c02d7cd
   14002f0d5:	cmc    
   14002f0d6:	fdivr  st,st(7)
   14002f0d8:	(bad)  
   14002f0d9:	out    dx,eax
   14002f0da:	ret    0xabff
   14002f0dd:	out    0xa3,eax
   14002f0df:	inc    DWORD PTR [rsi+0x5bff7adc]
   14002f0e5:	ror    BYTE PTR [rbx-0x1],1
   14002f0e8:	push   rdx
   14002f0e9:	int    0x41
   14002f0eb:	call   QWORD PTR [rdx-0x33]
   14002f0ee:	call   QWORD PTR [r10-0x33]
   14002f0f2:	call   QWORD PTR [r10-0x33]
   14002f0f6:	call   QWORD PTR [r10-0x33]
   14002f0fa:	call   QWORD PTR [r10-0x33]
   14002f0fe:	call   QWORD PTR [r10-0x33]
   14002f102:	call   QWORD PTR [r10-0x33]
   14002f106:	call   QWORD PTR [r10-0x33]
   14002f10a:	call   QWORD PTR [r10-0x33]
   14002f10e:	call   QWORD PTR [r10-0x33]
   14002f112:	call   QWORD PTR [r10-0x33]
   14002f116:	call   QWORD PTR [r10-0x33]
   14002f11a:	call   QWORD PTR [r10-0x33]
   14002f11e:	call   QWORD PTR [r10-0x33]
   14002f122:	call   QWORD PTR [r10-0x33]
   14002f126:	call   QWORD PTR [r10-0x33]
   14002f12a:	call   QWORD PTR [r10-0x33]
   14002f12e:	call   QWORD PTR [r10-0x33]
   14002f132:	call   QWORD PTR [r10-0x33]
   14002f136:	call   QWORD PTR [r10-0x33]
   14002f13a:	call   QWORD PTR [r10-0x33]
   14002f13e:	call   QWORD PTR [r10-0x33]
   14002f142:	call   QWORD PTR [r10-0x33]
   14002f146:	call   QWORD PTR [r10-0x33]
   14002f14a:	call   QWORD PTR [r10-0x33]
   14002f14e:	call   QWORD PTR [r10-0x33]
   14002f152:	call   QWORD PTR [r10-0x33]
   14002f156:	call   QWORD PTR [r10-0x33]
   14002f15a:	call   QWORD PTR [r10-0x33]
   14002f15e:	call   QWORD PTR [r10-0x33]
   14002f162:	call   QWORD PTR [r10-0x33]
   14002f166:	call   QWORD PTR [r10-0x33]
   14002f16a:	call   QWORD PTR [r10-0x33]
   14002f16e:	call   QWORD PTR [r10-0x33]
   14002f172:	call   QWORD PTR [r10-0x33]
   14002f176:	call   QWORD PTR [r10-0x33]
   14002f17a:	call   QWORD PTR [r10-0x33]
   14002f17e:	call   QWORD PTR [r10-0x33]
   14002f182:	call   QWORD PTR [r10-0x33]
   14002f186:	call   QWORD PTR [r10-0x33]
   14002f18a:	call   QWORD PTR [r10-0x33]
   14002f18e:	call   QWORD PTR [r10-0x33]
   14002f192:	call   QWORD PTR [r10-0x33]
   14002f196:	call   QWORD PTR [r10-0x33]
   14002f19a:	call   QWORD PTR [r10-0x33]
   14002f19e:	call   QWORD PTR [r10-0x33]
   14002f1a2:	call   QWORD PTR [r10-0x33]
   14002f1a6:	call   QWORD PTR [r10-0x33]
   14002f1aa:	call   QWORD PTR [r10-0x33]
   14002f1ae:	call   QWORD PTR [r10-0x33]
   14002f1b2:	call   QWORD PTR [r10-0x33]
   14002f1b6:	call   QWORD PTR [r10-0x33]
   14002f1ba:	inc    DWORD PTR [r8]
   14002f1bd:	add    BYTE PTR [rax],al
   14002f1bf:	cmp    eax,DWORD PTR [rax]
   14002f1c1:	add    BYTE PTR [rax],al
   14002f1c3:	sbb    al,0x0
   14002f1c5:	add    BYTE PTR [rax],al
   14002f1c7:	or     al,0x0
   14002f1c9:	add    BYTE PTR [rax],al
   14002f1cb:	add    eax,0x2000000
	...
   14002f22c:	add    BYTE PTR [rax],al
   14002f22e:	add    BYTE PTR [rcx],al
   14002f230:	add    BYTE PTR [rax],al
   14002f232:	add    BYTE PTR [rdx],al
   14002f234:	add    BYTE PTR [rax],al
   14002f236:	add    BYTE PTR [rip+0xe000000],al        # 0x14e02f23c
   14002f23c:	add    BYTE PTR [rax],al
   14002f23e:	add    BYTE PTR [rdi],bl
   14002f240:	rex.R test eax,0xcd529c37
   14002f246:	call   QWORD PTR [r10-0x33]
   14002f24a:	call   QWORD PTR [r10-0x33]
   14002f24e:	call   QWORD PTR [r10-0x33]
   14002f252:	call   QWORD PTR [r10-0x33]
   14002f256:	call   QWORD PTR [r10-0x33]
   14002f25a:	call   QWORD PTR [r10-0x33]
   14002f25e:	call   QWORD PTR [r10-0x33]
   14002f262:	call   QWORD PTR [r10-0x33]
   14002f266:	call   QWORD PTR [r10-0x33]
   14002f26a:	call   QWORD PTR [r10-0x33]
   14002f26e:	call   QWORD PTR [r10-0x33]
   14002f272:	call   QWORD PTR [r10-0x33]
   14002f276:	call   QWORD PTR [r10-0x33]
   14002f27a:	call   QWORD PTR [r10-0x33]
   14002f27e:	call   QWORD PTR [r10-0x33]
   14002f282:	call   QWORD PTR [r10-0x33]
   14002f286:	call   QWORD PTR [r10-0x33]
   14002f28a:	call   QWORD PTR [r10-0x33]
   14002f28e:	call   QWORD PTR [r10-0x33]
   14002f292:	call   QWORD PTR [r10-0x33]
   14002f296:	call   QWORD PTR [r10-0x33]
   14002f29a:	call   QWORD PTR [r10-0x33]
   14002f29e:	call   QWORD PTR [r10-0x33]
   14002f2a2:	call   QWORD PTR [r10-0x33]
   14002f2a6:	call   QWORD PTR [r10-0x33]
   14002f2aa:	call   QWORD PTR [r10-0x33]
   14002f2ae:	call   QWORD PTR [r10-0x33]
   14002f2b2:	call   QWORD PTR [r10-0x33]
   14002f2b6:	call   QWORD PTR [r10-0x33]
   14002f2ba:	call   QWORD PTR [r10-0x33]
   14002f2be:	call   QWORD PTR [r10-0x33]
   14002f2c2:	call   QWORD PTR [r10-0x33]
   14002f2c6:	call   QWORD PTR [r10-0x33]
   14002f2ca:	call   QWORD PTR [r10-0x33]
   14002f2ce:	call   QWORD PTR [r10-0x33]
   14002f2d2:	call   QWORD PTR [r10-0x33]
   14002f2d6:	call   QWORD PTR [r10-0x33]
   14002f2da:	call   QWORD PTR [r10-0x33]
   14002f2de:	call   QWORD PTR [r10-0x33]
   14002f2e2:	call   QWORD PTR [r10-0x33]
   14002f2e6:	call   QWORD PTR [r10-0x33]
   14002f2ea:	call   QWORD PTR [r10-0x33]
   14002f2ee:	call   QWORD PTR [r10-0x33]
   14002f2f2:	call   QWORD PTR [r10-0x33]
   14002f2f6:	call   QWORD PTR [r10-0x33]
   14002f2fa:	call   QWORD PTR [r10-0x33]
   14002f2fe:	call   QWORD PTR [r10-0x33]
   14002f302:	call   QWORD PTR [r10-0x33]
   14002f306:	call   QWORD PTR [r10-0x33]
   14002f30a:	call   QWORD PTR [r10-0x33]
   14002f30e:	call   QWORD PTR [r10-0x33]
   14002f312:	call   QWORD PTR [r10-0x33]
   14002f316:	call   QWORD PTR [r10-0x33]
   14002f31a:	call   QWORD PTR [r10-0x33]
   14002f31e:	call   QWORD PTR [r10-0x33]
   14002f322:	call   QWORD PTR [r10-0x33]
   14002f326:	call   QWORD PTR [r10-0x33]
   14002f32a:	call   QWORD PTR [r10-0x33]
   14002f32e:	call   QWORD PTR [r10-0x33]
   14002f332:	call   QWORD PTR [r10-0x33]
   14002f336:	call   QWORD PTR [r10-0x33]
   14002f33a:	call   QWORD PTR [r10-0x33]
   14002f33e:	call   QWORD PTR [r10-0x33]
   14002f342:	call   QWORD PTR [r10-0x33]
   14002f346:	call   QWORD PTR [r10-0x33]
   14002f34a:	call   QWORD PTR [r10-0x33]
   14002f34e:	call   QWORD PTR [r10-0x33]
   14002f352:	call   QWORD PTR [r10-0x33]
   14002f356:	call   QWORD PTR [r10-0x33]
   14002f35a:	call   QWORD PTR [r10-0x33]
   14002f35e:	call   QWORD PTR [r10-0x33]
   14002f362:	call   QWORD PTR [r10-0x33]
   14002f366:	call   QWORD PTR [r10-0x33]
   14002f36a:	call   QWORD PTR [r10-0x33]
   14002f36e:	call   QWORD PTR [r10-0x33]
   14002f372:	call   QWORD PTR [r10-0x33]
   14002f376:	call   QWORD PTR [r10-0x33]
   14002f37a:	call   QWORD PTR [r10-0x33]
   14002f37e:	call   QWORD PTR [r10-0x33]
   14002f382:	call   QWORD PTR [r10-0x33]
   14002f386:	call   QWORD PTR [r10-0x33]
   14002f38a:	call   QWORD PTR [r10-0x33]
   14002f38e:	call   QWORD PTR [r10-0x33]
   14002f392:	call   QWORD PTR [r10-0x33]
   14002f396:	call   QWORD PTR [r10-0x33]
   14002f39a:	call   QWORD PTR [r10-0x33]
   14002f39e:	call   QWORD PTR [r10-0x33]
   14002f3a2:	call   QWORD PTR [r10-0x33]
   14002f3a6:	call   QWORD PTR [r10-0x33]
   14002f3aa:	call   QWORD PTR [r10-0x33]
   14002f3ae:	call   QWORD PTR [r10-0x33]
   14002f3b2:	call   QWORD PTR [r10-0x33]
   14002f3b6:	call   QWORD PTR [r10-0x33]
   14002f3ba:	inc    DWORD PTR [r8]
   14002f3bd:	add    BYTE PTR [rax],al
   14002f3bf:	cmp    eax,DWORD PTR [rax]
   14002f3c1:	add    BYTE PTR [rax],al
   14002f3c3:	sbb    al,0x0
   14002f3c5:	add    BYTE PTR [rax],al
   14002f3c7:	or     al,0x0
   14002f3c9:	add    BYTE PTR [rax],al
   14002f3cb:	add    eax,0x2000000
	...
   14002f430:	add    BYTE PTR [rax],al
   14002f432:	add    BYTE PTR [rcx],al
   14002f434:	add    BYTE PTR [rax],al
   14002f436:	add    BYTE PTR [rdx],al
   14002f438:	add    BYTE PTR [rax],al
   14002f43a:	add    BYTE PTR [rsi],al
   14002f43c:	add    BYTE PTR [rax],al
   14002f43e:	add    BYTE PTR [rdi],cl
   14002f440:	add    BYTE PTR [rax],al
   14002f442:	add    BYTE PTR [rax],ah
   14002f444:	rex.R test al,0x37
   14002f447:	pushf  
   14002f448:	push   rdx
   14002f449:	int    0x41
   14002f44b:	call   QWORD PTR [rdx-0x33]
   14002f44e:	call   QWORD PTR [r10-0x33]
   14002f452:	call   QWORD PTR [r10-0x33]
   14002f456:	call   QWORD PTR [r10-0x33]
   14002f45a:	call   QWORD PTR [r10-0x33]
   14002f45e:	call   QWORD PTR [r10-0x33]
   14002f462:	call   QWORD PTR [r10-0x33]
   14002f466:	call   QWORD PTR [r10-0x33]
   14002f46a:	call   QWORD PTR [r10-0x33]
   14002f46e:	call   QWORD PTR [r10-0x33]
   14002f472:	call   QWORD PTR [r10-0x33]
   14002f476:	call   QWORD PTR [r10-0x33]
   14002f47a:	call   QWORD PTR [r10-0x33]
   14002f47e:	call   QWORD PTR [r10-0x33]
   14002f482:	call   QWORD PTR [r10-0x33]
   14002f486:	call   QWORD PTR [r10-0x33]
   14002f48a:	call   QWORD PTR [r10-0x33]
   14002f48e:	call   QWORD PTR [r10-0x33]
   14002f492:	call   QWORD PTR [r10-0x33]
   14002f496:	call   QWORD PTR [r10-0x33]
   14002f49a:	call   QWORD PTR [r10-0x33]
   14002f49e:	call   QWORD PTR [r10-0x33]
   14002f4a2:	call   QWORD PTR [r10-0x33]
   14002f4a6:	call   QWORD PTR [r10-0x33]
   14002f4aa:	call   QWORD PTR [r10-0x33]
   14002f4ae:	call   QWORD PTR [r10-0x33]
   14002f4b2:	call   QWORD PTR [r10-0x33]
   14002f4b6:	call   QWORD PTR [r10-0x33]
   14002f4ba:	call   QWORD PTR [r10-0x33]
   14002f4be:	call   QWORD PTR [r10-0x33]
   14002f4c2:	call   QWORD PTR [r10-0x33]
   14002f4c6:	call   QWORD PTR [r10-0x33]
   14002f4ca:	call   QWORD PTR [r10-0x33]
   14002f4ce:	call   QWORD PTR [r10-0x33]
   14002f4d2:	call   QWORD PTR [r10-0x33]
   14002f4d6:	call   QWORD PTR [r10-0x33]
   14002f4da:	call   QWORD PTR [r10-0x33]
   14002f4de:	call   QWORD PTR [r10-0x33]
   14002f4e2:	call   QWORD PTR [r10-0x33]
   14002f4e6:	call   QWORD PTR [r10-0x33]
   14002f4ea:	call   QWORD PTR [r10-0x33]
   14002f4ee:	call   QWORD PTR [r10-0x33]
   14002f4f2:	call   QWORD PTR [r10-0x33]
   14002f4f6:	call   QWORD PTR [r10-0x33]
   14002f4fa:	call   QWORD PTR [r10-0x33]
   14002f4fe:	call   QWORD PTR [r10-0x33]
   14002f502:	call   QWORD PTR [r10-0x33]
   14002f506:	call   QWORD PTR [r10-0x33]
   14002f50a:	call   QWORD PTR [r10-0x33]
   14002f50e:	call   QWORD PTR [r10-0x33]
   14002f512:	call   QWORD PTR [r10-0x33]
   14002f516:	call   QWORD PTR [r10-0x33]
   14002f51a:	call   QWORD PTR [r10-0x33]
   14002f51e:	call   QWORD PTR [r10-0x33]
   14002f522:	call   QWORD PTR [r10-0x33]
   14002f526:	call   QWORD PTR [r10-0x33]
   14002f52a:	call   QWORD PTR [r10-0x33]
   14002f52e:	call   QWORD PTR [r10-0x33]
   14002f532:	call   QWORD PTR [r10-0x33]
   14002f536:	call   QWORD PTR [r10-0x33]
   14002f53a:	call   QWORD PTR [r10-0x33]
   14002f53e:	call   QWORD PTR [r10-0x33]
   14002f542:	call   QWORD PTR [r10-0x33]
   14002f546:	call   QWORD PTR [r10-0x33]
   14002f54a:	call   QWORD PTR [r10-0x33]
   14002f54e:	call   QWORD PTR [r10-0x33]
   14002f552:	call   QWORD PTR [r10-0x33]
   14002f556:	call   QWORD PTR [r10-0x33]
   14002f55a:	call   QWORD PTR [r10-0x33]
   14002f55e:	call   QWORD PTR [r10-0x33]
   14002f562:	call   QWORD PTR [r10-0x33]
   14002f566:	call   QWORD PTR [r10-0x33]
   14002f56a:	call   QWORD PTR [r10-0x33]
   14002f56e:	call   QWORD PTR [r10-0x33]
   14002f572:	call   QWORD PTR [r10-0x33]
   14002f576:	call   QWORD PTR [r10-0x33]
   14002f57a:	call   QWORD PTR [r10-0x33]
   14002f57e:	call   QWORD PTR [r10-0x33]
   14002f582:	call   QWORD PTR [r10-0x33]
   14002f586:	call   QWORD PTR [r10-0x33]
   14002f58a:	call   QWORD PTR [r10-0x33]
   14002f58e:	call   QWORD PTR [r10-0x33]
   14002f592:	call   QWORD PTR [r10-0x33]
   14002f596:	call   QWORD PTR [r10-0x33]
   14002f59a:	call   QWORD PTR [r10-0x33]
   14002f59e:	call   QWORD PTR [r10-0x33]
   14002f5a2:	call   QWORD PTR [r10-0x33]
   14002f5a6:	call   QWORD PTR [r10-0x33]
   14002f5aa:	call   QWORD PTR [r10-0x33]
   14002f5ae:	call   QWORD PTR [r10-0x33]
   14002f5b2:	call   QWORD PTR [r10-0x33]
   14002f5b6:	call   QWORD PTR [r10-0x33]
   14002f5ba:	inc    DWORD PTR [r8]
   14002f5bd:	add    BYTE PTR [rax],al
   14002f5bf:	cmp    eax,DWORD PTR [rax]
   14002f5c1:	add    BYTE PTR [rax],al
   14002f5c3:	sbb    al,0x0
   14002f5c5:	add    BYTE PTR [rax],al
   14002f5c7:	or     al,0x0
   14002f5c9:	add    BYTE PTR [rax],al
   14002f5cb:	add    eax,0x2000000
	...
   14002f634:	add    BYTE PTR [rax],al
   14002f636:	add    BYTE PTR [rcx],al
   14002f638:	add    BYTE PTR [rax],al
   14002f63a:	add    BYTE PTR [rdx],al
   14002f63c:	add    BYTE PTR [rax],al
   14002f63e:	add    BYTE PTR [rdi],al
   14002f640:	add    BYTE PTR [rax],al
   14002f642:	add    BYTE PTR [rdi],cl
   14002f644:	add    BYTE PTR [rax],al
   14002f646:	add    BYTE PTR [rax],ah
   14002f648:	rex.R test al,0x37
   14002f64b:	pushf  
   14002f64c:	push   rdx
   14002f64d:	int    0x41
   14002f64f:	call   QWORD PTR [rdx-0x33]
   14002f652:	call   QWORD PTR [r10-0x33]
   14002f656:	call   QWORD PTR [r10-0x33]
   14002f65a:	call   QWORD PTR [r10-0x33]
   14002f65e:	call   QWORD PTR [r10-0x33]
   14002f662:	call   QWORD PTR [r10-0x33]
   14002f666:	call   QWORD PTR [r10-0x33]
   14002f66a:	call   QWORD PTR [r10-0x33]
   14002f66e:	call   QWORD PTR [r10-0x33]
   14002f672:	call   QWORD PTR [r10-0x33]
   14002f676:	call   QWORD PTR [r10-0x33]
   14002f67a:	call   QWORD PTR [r10-0x33]
   14002f67e:	call   QWORD PTR [r10-0x33]
   14002f682:	call   QWORD PTR [r10-0x33]
   14002f686:	call   QWORD PTR [r10-0x33]
   14002f68a:	call   QWORD PTR [r10-0x33]
   14002f68e:	call   QWORD PTR [r10-0x33]
   14002f692:	call   QWORD PTR [r10-0x33]
   14002f696:	call   QWORD PTR [r10-0x33]
   14002f69a:	call   QWORD PTR [r10-0x33]
   14002f69e:	call   QWORD PTR [r10-0x33]
   14002f6a2:	call   QWORD PTR [r10-0x33]
   14002f6a6:	call   QWORD PTR [r10-0x33]
   14002f6aa:	call   QWORD PTR [r10-0x33]
   14002f6ae:	call   QWORD PTR [r10-0x33]
   14002f6b2:	call   QWORD PTR [r10-0x33]
   14002f6b6:	call   QWORD PTR [r10-0x33]
   14002f6ba:	call   QWORD PTR [r10-0x33]
   14002f6be:	call   QWORD PTR [r10-0x33]
   14002f6c2:	call   QWORD PTR [r10-0x33]
   14002f6c6:	call   QWORD PTR [r10-0x33]
   14002f6ca:	call   QWORD PTR [r10-0x33]
   14002f6ce:	call   QWORD PTR [r10-0x33]
   14002f6d2:	call   QWORD PTR [r10-0x33]
   14002f6d6:	call   QWORD PTR [r10-0x33]
   14002f6da:	call   QWORD PTR [r10-0x33]
   14002f6de:	call   QWORD PTR [r10-0x33]
   14002f6e2:	call   QWORD PTR [r10-0x33]
   14002f6e6:	call   QWORD PTR [r10-0x33]
   14002f6ea:	call   QWORD PTR [r10-0x33]
   14002f6ee:	call   QWORD PTR [r10-0x33]
   14002f6f2:	call   QWORD PTR [r10-0x33]
   14002f6f6:	call   QWORD PTR [r10-0x33]
   14002f6fa:	call   QWORD PTR [r10-0x33]
   14002f6fe:	call   QWORD PTR [r10-0x33]
   14002f702:	call   QWORD PTR [r10-0x33]
   14002f706:	call   QWORD PTR [r10-0x33]
   14002f70a:	call   QWORD PTR [r10-0x33]
   14002f70e:	call   QWORD PTR [r10-0x33]
   14002f712:	call   QWORD PTR [r10-0x33]
   14002f716:	call   QWORD PTR [r10-0x33]
   14002f71a:	call   QWORD PTR [r10-0x33]
   14002f71e:	call   QWORD PTR [r10-0x33]
   14002f722:	call   QWORD PTR [r10-0x33]
   14002f726:	call   QWORD PTR [r10-0x33]
   14002f72a:	call   QWORD PTR [r10-0x33]
   14002f72e:	call   QWORD PTR [r10-0x33]
   14002f732:	call   QWORD PTR [r10-0x33]
   14002f736:	call   QWORD PTR [r10-0x33]
   14002f73a:	call   QWORD PTR [r10-0x33]
   14002f73e:	call   QWORD PTR [r10-0x33]
   14002f742:	call   QWORD PTR [r10-0x33]
   14002f746:	call   QWORD PTR [r10-0x33]
   14002f74a:	call   QWORD PTR [r10-0x33]
   14002f74e:	call   QWORD PTR [r10-0x33]
   14002f752:	call   QWORD PTR [r10-0x33]
   14002f756:	call   QWORD PTR [r10-0x33]
   14002f75a:	call   QWORD PTR [r10-0x33]
   14002f75e:	call   QWORD PTR [r10-0x33]
   14002f762:	call   QWORD PTR [r10-0x33]
   14002f766:	call   QWORD PTR [r10-0x33]
   14002f76a:	call   QWORD PTR [r10-0x33]
   14002f76e:	call   QWORD PTR [r10-0x33]
   14002f772:	call   QWORD PTR [r10-0x33]
   14002f776:	call   QWORD PTR [r10-0x33]
   14002f77a:	call   QWORD PTR [r10-0x33]
   14002f77e:	call   QWORD PTR [r10-0x33]
   14002f782:	call   QWORD PTR [r10-0x33]
   14002f786:	call   QWORD PTR [r10-0x33]
   14002f78a:	call   QWORD PTR [r10-0x33]
   14002f78e:	call   QWORD PTR [r10-0x33]
   14002f792:	call   QWORD PTR [r10-0x33]
   14002f796:	call   QWORD PTR [r10-0x33]
   14002f79a:	call   QWORD PTR [r10-0x33]
   14002f79e:	call   QWORD PTR [r10-0x33]
   14002f7a2:	call   QWORD PTR [r10-0x33]
   14002f7a6:	call   QWORD PTR [r10-0x33]
   14002f7aa:	call   QWORD PTR [r10-0x33]
   14002f7ae:	call   QWORD PTR [r10-0x33]
   14002f7b2:	call   QWORD PTR [r10-0x33]
   14002f7b6:	call   QWORD PTR [r10-0x33]
   14002f7ba:	inc    DWORD PTR [r8]
   14002f7bd:	add    BYTE PTR [rax],al
   14002f7bf:	cmp    eax,DWORD PTR [rax]
   14002f7c1:	add    BYTE PTR [rax],al
   14002f7c3:	sbb    al,0x0
   14002f7c5:	add    BYTE PTR [rax],al
   14002f7c7:	or     al,0x0
   14002f7c9:	add    BYTE PTR [rax],al
   14002f7cb:	add    eax,0x2000000
	...
   14002f838:	add    BYTE PTR [rax],al
   14002f83a:	add    BYTE PTR [rcx],al
   14002f83c:	add    BYTE PTR [rax],al
   14002f83e:	add    BYTE PTR [rdx],al
   14002f840:	add    BYTE PTR [rax],al
   14002f842:	add    BYTE PTR [rdi],al
   14002f844:	add    BYTE PTR [rax],al
   14002f846:	add    BYTE PTR [rdi],cl
   14002f848:	add    BYTE PTR [rax],al
   14002f84a:	add    BYTE PTR [rax],ah
   14002f84c:	rex.R test al,0x37
   14002f84f:	pushf  
   14002f850:	push   rdx
   14002f851:	int    0x41
   14002f853:	call   QWORD PTR [rdx-0x33]
   14002f856:	call   QWORD PTR [r10-0x33]
   14002f85a:	call   QWORD PTR [r10-0x33]
   14002f85e:	call   QWORD PTR [r10-0x33]
   14002f862:	call   QWORD PTR [r10-0x33]
   14002f866:	call   QWORD PTR [r10-0x33]
   14002f86a:	call   QWORD PTR [r10-0x33]
   14002f86e:	call   QWORD PTR [r10-0x33]
   14002f872:	call   QWORD PTR [r10-0x33]
   14002f876:	call   QWORD PTR [r10-0x33]
   14002f87a:	call   QWORD PTR [r10-0x33]
   14002f87e:	call   QWORD PTR [r10-0x33]
   14002f882:	call   QWORD PTR [r10-0x33]
   14002f886:	call   QWORD PTR [r10-0x33]
   14002f88a:	call   QWORD PTR [r10-0x33]
   14002f88e:	call   QWORD PTR [r10-0x33]
   14002f892:	call   QWORD PTR [r10-0x33]
   14002f896:	call   QWORD PTR [r10-0x33]
   14002f89a:	call   QWORD PTR [r10-0x33]
   14002f89e:	call   QWORD PTR [r10-0x33]
   14002f8a2:	call   QWORD PTR [r10-0x33]
   14002f8a6:	call   QWORD PTR [r10-0x33]
   14002f8aa:	call   QWORD PTR [r10-0x33]
   14002f8ae:	call   QWORD PTR [r10-0x33]
   14002f8b2:	call   QWORD PTR [r10-0x33]
   14002f8b6:	call   QWORD PTR [r10-0x33]
   14002f8ba:	call   QWORD PTR [r10-0x33]
   14002f8be:	call   QWORD PTR [r10-0x33]
   14002f8c2:	call   QWORD PTR [r10-0x33]
   14002f8c6:	call   QWORD PTR [r10-0x33]
   14002f8ca:	call   QWORD PTR [r10-0x33]
   14002f8ce:	call   QWORD PTR [r10-0x33]
   14002f8d2:	call   QWORD PTR [r10-0x33]
   14002f8d6:	call   QWORD PTR [r10-0x33]
   14002f8da:	call   QWORD PTR [r10-0x33]
   14002f8de:	call   QWORD PTR [r10-0x33]
   14002f8e2:	call   QWORD PTR [r10-0x33]
   14002f8e6:	call   QWORD PTR [r10-0x33]
   14002f8ea:	call   QWORD PTR [r10-0x33]
   14002f8ee:	call   QWORD PTR [r10-0x33]
   14002f8f2:	call   QWORD PTR [r10-0x33]
   14002f8f6:	call   QWORD PTR [r10-0x33]
   14002f8fa:	call   QWORD PTR [r10-0x33]
   14002f8fe:	call   QWORD PTR [r10-0x33]
   14002f902:	call   QWORD PTR [r10-0x33]
   14002f906:	call   QWORD PTR [r10-0x33]
   14002f90a:	call   QWORD PTR [r10-0x33]
   14002f90e:	call   QWORD PTR [r10-0x33]
   14002f912:	call   QWORD PTR [r10-0x33]
   14002f916:	call   QWORD PTR [r10-0x33]
   14002f91a:	call   QWORD PTR [r10-0x33]
   14002f91e:	call   QWORD PTR [r10-0x33]
   14002f922:	call   QWORD PTR [r10-0x33]
   14002f926:	call   QWORD PTR [r10-0x33]
   14002f92a:	call   QWORD PTR [r10-0x33]
   14002f92e:	call   QWORD PTR [r10-0x33]
   14002f932:	call   QWORD PTR [r10-0x33]
   14002f936:	call   QWORD PTR [r10-0x33]
   14002f93a:	call   QWORD PTR [r10-0x33]
   14002f93e:	call   QWORD PTR [r10-0x33]
   14002f942:	call   QWORD PTR [r10-0x33]
   14002f946:	call   QWORD PTR [r10-0x33]
   14002f94a:	call   QWORD PTR [r10-0x33]
   14002f94e:	call   QWORD PTR [r10-0x33]
   14002f952:	call   QWORD PTR [r10-0x33]
   14002f956:	call   QWORD PTR [r10-0x33]
   14002f95a:	call   QWORD PTR [r10-0x33]
   14002f95e:	call   QWORD PTR [r10-0x33]
   14002f962:	call   QWORD PTR [r10-0x33]
   14002f966:	call   QWORD PTR [r10-0x33]
   14002f96a:	call   QWORD PTR [r10-0x33]
   14002f96e:	call   QWORD PTR [r10-0x33]
   14002f972:	call   QWORD PTR [r10-0x33]
   14002f976:	call   QWORD PTR [r10-0x33]
   14002f97a:	call   QWORD PTR [r10-0x33]
   14002f97e:	call   QWORD PTR [r10-0x33]
   14002f982:	call   QWORD PTR [r10-0x33]
   14002f986:	call   QWORD PTR [r10-0x33]
   14002f98a:	call   QWORD PTR [r10-0x33]
   14002f98e:	call   QWORD PTR [r10-0x33]
   14002f992:	call   QWORD PTR [r10-0x33]
   14002f996:	call   QWORD PTR [r10-0x33]
   14002f99a:	call   QWORD PTR [r10-0x33]
   14002f99e:	call   QWORD PTR [r10-0x33]
   14002f9a2:	call   QWORD PTR [r10-0x33]
   14002f9a6:	call   QWORD PTR [r10-0x33]
   14002f9aa:	call   QWORD PTR [r10-0x33]
   14002f9ae:	call   QWORD PTR [r10-0x33]
   14002f9b2:	call   QWORD PTR [r10-0x33]
   14002f9b6:	call   QWORD PTR [r10-0x33]
   14002f9ba:	inc    DWORD PTR [r8]
   14002f9bd:	add    BYTE PTR [rax],al
   14002f9bf:	cmp    eax,DWORD PTR [rax]
   14002f9c1:	add    BYTE PTR [rax],al
   14002f9c3:	sbb    al,0x0
   14002f9c5:	add    BYTE PTR [rax],al
   14002f9c7:	or     al,0x0
   14002f9c9:	add    BYTE PTR [rax],al
   14002f9cb:	add    eax,0x2000000
	...
   14002fa3c:	add    BYTE PTR [rax],al
   14002fa3e:	add    BYTE PTR [rcx],al
   14002fa40:	add    BYTE PTR [rax],al
   14002fa42:	add    BYTE PTR [rdx],al
   14002fa44:	add    BYTE PTR [rax],al
   14002fa46:	add    BYTE PTR [rdi],al
   14002fa48:	add    BYTE PTR [rax],al
   14002fa4a:	add    BYTE PTR [rdi],cl
   14002fa4c:	add    BYTE PTR [rax],al
   14002fa4e:	add    BYTE PTR [rax],ah
   14002fa50:	rex.R test al,0x37
   14002fa53:	pushf  
   14002fa54:	push   rdx
   14002fa55:	int    0x41
   14002fa57:	call   QWORD PTR [rdx-0x33]
   14002fa5a:	call   QWORD PTR [r10-0x33]
   14002fa5e:	call   QWORD PTR [r10-0x33]
   14002fa62:	call   QWORD PTR [r10-0x33]
   14002fa66:	call   QWORD PTR [r10-0x33]
   14002fa6a:	call   QWORD PTR [r10-0x33]
   14002fa6e:	call   QWORD PTR [r10-0x33]
   14002fa72:	call   QWORD PTR [r10-0x33]
   14002fa76:	call   QWORD PTR [r10-0x33]
   14002fa7a:	call   QWORD PTR [r10-0x33]
   14002fa7e:	call   QWORD PTR [r10-0x33]
   14002fa82:	call   QWORD PTR [r10-0x33]
   14002fa86:	call   QWORD PTR [r10-0x33]
   14002fa8a:	call   QWORD PTR [r10-0x33]
   14002fa8e:	call   QWORD PTR [r10-0x33]
   14002fa92:	call   QWORD PTR [r10-0x33]
   14002fa96:	call   QWORD PTR [r10-0x33]
   14002fa9a:	call   QWORD PTR [r10-0x33]
   14002fa9e:	call   QWORD PTR [r10-0x33]
   14002faa2:	call   QWORD PTR [r10-0x33]
   14002faa6:	call   QWORD PTR [r10-0x33]
   14002faaa:	call   QWORD PTR [r10-0x33]
   14002faae:	call   QWORD PTR [r10-0x33]
   14002fab2:	call   QWORD PTR [r10-0x33]
   14002fab6:	call   QWORD PTR [r10-0x33]
   14002faba:	call   QWORD PTR [r10-0x33]
   14002fabe:	call   QWORD PTR [r10-0x33]
   14002fac2:	call   QWORD PTR [r10-0x33]
   14002fac6:	call   QWORD PTR [r10-0x33]
   14002faca:	call   QWORD PTR [r10-0x33]
   14002face:	call   QWORD PTR [r10-0x33]
   14002fad2:	call   QWORD PTR [r10-0x33]
   14002fad6:	call   QWORD PTR [r10-0x33]
   14002fada:	call   QWORD PTR [r10-0x33]
   14002fade:	call   QWORD PTR [r10-0x33]
   14002fae2:	call   QWORD PTR [r10-0x33]
   14002fae6:	call   QWORD PTR [r10-0x33]
   14002faea:	call   QWORD PTR [r10-0x33]
   14002faee:	call   QWORD PTR [r10-0x33]
   14002faf2:	call   QWORD PTR [r10-0x33]
   14002faf6:	call   QWORD PTR [r10-0x33]
   14002fafa:	call   QWORD PTR [r10-0x33]
   14002fafe:	call   QWORD PTR [r10-0x33]
   14002fb02:	call   QWORD PTR [r10-0x33]
   14002fb06:	call   QWORD PTR [r10-0x33]
   14002fb0a:	call   QWORD PTR [r10-0x33]
   14002fb0e:	call   QWORD PTR [r10-0x33]
   14002fb12:	call   QWORD PTR [r10-0x33]
   14002fb16:	call   QWORD PTR [r10-0x33]
   14002fb1a:	call   QWORD PTR [r10-0x33]
   14002fb1e:	call   QWORD PTR [r10-0x33]
   14002fb22:	call   QWORD PTR [r10-0x33]
   14002fb26:	call   QWORD PTR [r10-0x33]
   14002fb2a:	call   QWORD PTR [r10-0x33]
   14002fb2e:	call   QWORD PTR [r10-0x33]
   14002fb32:	call   QWORD PTR [r10-0x33]
   14002fb36:	call   QWORD PTR [r10-0x33]
   14002fb3a:	call   QWORD PTR [r10-0x33]
   14002fb3e:	call   QWORD PTR [r10-0x33]
   14002fb42:	call   QWORD PTR [r10-0x33]
   14002fb46:	call   QWORD PTR [r10-0x33]
   14002fb4a:	call   QWORD PTR [r10-0x33]
   14002fb4e:	call   QWORD PTR [r10-0x33]
   14002fb52:	call   QWORD PTR [r10-0x33]
   14002fb56:	call   QWORD PTR [r10-0x33]
   14002fb5a:	call   QWORD PTR [r10-0x33]
   14002fb5e:	call   QWORD PTR [r10-0x33]
   14002fb62:	call   QWORD PTR [r10-0x33]
   14002fb66:	call   QWORD PTR [r10-0x33]
   14002fb6a:	call   QWORD PTR [r10-0x33]
   14002fb6e:	call   QWORD PTR [r10-0x33]
   14002fb72:	call   QWORD PTR [r10-0x33]
   14002fb76:	call   QWORD PTR [r10-0x33]
   14002fb7a:	call   QWORD PTR [r10-0x33]
   14002fb7e:	call   QWORD PTR [r10-0x33]
   14002fb82:	call   QWORD PTR [r10-0x33]
   14002fb86:	call   QWORD PTR [r10-0x33]
   14002fb8a:	call   QWORD PTR [r10-0x33]
   14002fb8e:	call   QWORD PTR [r10-0x33]
   14002fb92:	call   QWORD PTR [r10-0x33]
   14002fb96:	call   QWORD PTR [r10-0x33]
   14002fb9a:	call   QWORD PTR [r10-0x33]
   14002fb9e:	call   QWORD PTR [r10-0x33]
   14002fba2:	call   QWORD PTR [r10-0x33]
   14002fba6:	call   QWORD PTR [r10-0x33]
   14002fbaa:	call   QWORD PTR [r10-0x33]
   14002fbae:	call   QWORD PTR [r10-0x33]
   14002fbb2:	call   QWORD PTR [r10-0x33]
   14002fbb6:	call   QWORD PTR [r10-0x33]
   14002fbba:	inc    DWORD PTR [r8]
   14002fbbd:	add    BYTE PTR [rax],al
   14002fbbf:	cmp    eax,DWORD PTR [rax]
   14002fbc1:	add    BYTE PTR [rax],al
   14002fbc3:	sbb    al,0x0
   14002fbc5:	add    BYTE PTR [rax],al
   14002fbc7:	or     al,0x0
   14002fbc9:	add    BYTE PTR [rax],al
   14002fbcb:	add    eax,0x2000000
	...
   14002fc40:	add    BYTE PTR [rax],al
   14002fc42:	add    BYTE PTR [rcx],al
   14002fc44:	add    BYTE PTR [rax],al
   14002fc46:	add    BYTE PTR [rdx],al
   14002fc48:	add    BYTE PTR [rax],al
   14002fc4a:	add    BYTE PTR [rdi],al
   14002fc4c:	add    BYTE PTR [rax],al
   14002fc4e:	add    BYTE PTR [rdi],cl
   14002fc50:	add    BYTE PTR [rax],al
   14002fc52:	add    BYTE PTR [rax],ah
   14002fc54:	rex.R test al,0x37
   14002fc57:	pushf  
   14002fc58:	push   rdx
   14002fc59:	int    0x41
   14002fc5b:	call   QWORD PTR [rdx-0x33]
   14002fc5e:	call   QWORD PTR [r10-0x33]
   14002fc62:	call   QWORD PTR [r10-0x33]
   14002fc66:	call   QWORD PTR [r10-0x33]
   14002fc6a:	call   QWORD PTR [r10-0x33]
   14002fc6e:	call   QWORD PTR [r10-0x33]
   14002fc72:	call   QWORD PTR [r10-0x33]
   14002fc76:	call   QWORD PTR [r10-0x33]
   14002fc7a:	call   QWORD PTR [r10-0x33]
   14002fc7e:	call   QWORD PTR [r10-0x33]
   14002fc82:	call   QWORD PTR [r10-0x33]
   14002fc86:	call   QWORD PTR [r10-0x33]
   14002fc8a:	call   QWORD PTR [r10-0x33]
   14002fc8e:	call   QWORD PTR [r10-0x33]
   14002fc92:	call   QWORD PTR [r10-0x33]
   14002fc96:	call   QWORD PTR [r10-0x33]
   14002fc9a:	call   QWORD PTR [r10-0x33]
   14002fc9e:	call   QWORD PTR [r10-0x33]
   14002fca2:	call   QWORD PTR [r10-0x33]
   14002fca6:	call   QWORD PTR [r10-0x33]
   14002fcaa:	call   QWORD PTR [r10-0x33]
   14002fcae:	call   QWORD PTR [r10-0x33]
   14002fcb2:	call   QWORD PTR [r10-0x33]
   14002fcb6:	call   QWORD PTR [r10-0x33]
   14002fcba:	call   QWORD PTR [r10-0x33]
   14002fcbe:	call   QWORD PTR [r10-0x33]
   14002fcc2:	call   QWORD PTR [r10-0x33]
   14002fcc6:	call   QWORD PTR [r10-0x33]
   14002fcca:	call   QWORD PTR [r10-0x33]
   14002fcce:	call   QWORD PTR [r10-0x33]
   14002fcd2:	call   QWORD PTR [r10-0x33]
   14002fcd6:	call   QWORD PTR [r10-0x33]
   14002fcda:	call   QWORD PTR [r10-0x33]
   14002fcde:	call   QWORD PTR [r10-0x33]
   14002fce2:	call   QWORD PTR [r10-0x33]
   14002fce6:	call   QWORD PTR [r10-0x33]
   14002fcea:	call   QWORD PTR [r10-0x33]
   14002fcee:	call   QWORD PTR [r10-0x33]
   14002fcf2:	call   QWORD PTR [r10-0x33]
   14002fcf6:	call   QWORD PTR [r10-0x33]
   14002fcfa:	call   QWORD PTR [r10-0x33]
   14002fcfe:	call   QWORD PTR [r10-0x33]
   14002fd02:	call   QWORD PTR [r10-0x33]
   14002fd06:	call   QWORD PTR [r10-0x33]
   14002fd0a:	call   QWORD PTR [r10-0x33]
   14002fd0e:	call   QWORD PTR [r10-0x33]
   14002fd12:	call   QWORD PTR [r10-0x33]
   14002fd16:	call   QWORD PTR [r10-0x33]
   14002fd1a:	call   QWORD PTR [r10-0x33]
   14002fd1e:	call   QWORD PTR [r10-0x33]
   14002fd22:	call   QWORD PTR [r10-0x33]
   14002fd26:	call   QWORD PTR [r10-0x33]
   14002fd2a:	call   QWORD PTR [r10-0x33]
   14002fd2e:	call   QWORD PTR [r10-0x33]
   14002fd32:	call   QWORD PTR [r10-0x33]
   14002fd36:	call   QWORD PTR [r10-0x33]
   14002fd3a:	call   QWORD PTR [r10-0x33]
   14002fd3e:	call   QWORD PTR [r10-0x33]
   14002fd42:	call   QWORD PTR [r10-0x33]
   14002fd46:	call   QWORD PTR [r10-0x33]
   14002fd4a:	call   QWORD PTR [r10-0x33]
   14002fd4e:	call   QWORD PTR [r10-0x33]
   14002fd52:	call   QWORD PTR [r10-0x33]
   14002fd56:	call   QWORD PTR [r10-0x33]
   14002fd5a:	call   QWORD PTR [r10-0x33]
   14002fd5e:	call   QWORD PTR [r10-0x33]
   14002fd62:	call   QWORD PTR [r10-0x33]
   14002fd66:	call   QWORD PTR [r10-0x33]
   14002fd6a:	call   QWORD PTR [r10-0x33]
   14002fd6e:	call   QWORD PTR [r10-0x33]
   14002fd72:	call   QWORD PTR [r10-0x33]
   14002fd76:	call   QWORD PTR [r10-0x33]
   14002fd7a:	call   QWORD PTR [r10-0x33]
   14002fd7e:	call   QWORD PTR [r10-0x33]
   14002fd82:	call   QWORD PTR [r10-0x33]
   14002fd86:	call   QWORD PTR [r10-0x33]
   14002fd8a:	call   QWORD PTR [r10-0x33]
   14002fd8e:	call   QWORD PTR [r10-0x33]
   14002fd92:	call   QWORD PTR [r10-0x33]
   14002fd96:	call   QWORD PTR [r10-0x33]
   14002fd9a:	call   QWORD PTR [r10-0x33]
   14002fd9e:	call   QWORD PTR [r10-0x33]
   14002fda2:	call   QWORD PTR [r10-0x33]
   14002fda6:	call   QWORD PTR [r10-0x33]
   14002fdaa:	call   QWORD PTR [r10-0x33]
   14002fdae:	call   QWORD PTR [r10-0x33]
   14002fdb2:	call   QWORD PTR [r10-0x33]
   14002fdb6:	call   QWORD PTR [r10-0x33]
   14002fdba:	inc    DWORD PTR [r8]
   14002fdbd:	add    BYTE PTR [rax],al
   14002fdbf:	cmp    eax,DWORD PTR [rax]
   14002fdc1:	add    BYTE PTR [rax],al
   14002fdc3:	sbb    al,0x0
   14002fdc5:	add    BYTE PTR [rax],al
   14002fdc7:	or     al,0x0
   14002fdc9:	add    BYTE PTR [rax],al
   14002fdcb:	add    eax,0x2000000
	...
   14002fe44:	add    BYTE PTR [rax],al
   14002fe46:	add    BYTE PTR [rcx],al
   14002fe48:	add    BYTE PTR [rax],al
   14002fe4a:	add    BYTE PTR [rdx],al
   14002fe4c:	add    BYTE PTR [rax],al
   14002fe4e:	add    BYTE PTR [rdi],al
   14002fe50:	add    BYTE PTR [rax],al
   14002fe52:	add    BYTE PTR [rdi],cl
   14002fe54:	add    BYTE PTR [rax],al
   14002fe56:	add    BYTE PTR [rax],ah
   14002fe58:	rex.R test al,0x37
   14002fe5b:	pushf  
   14002fe5c:	push   rdx
   14002fe5d:	int    0x41
   14002fe5f:	call   QWORD PTR [rdx-0x33]
   14002fe62:	call   QWORD PTR [r10-0x33]
   14002fe66:	call   QWORD PTR [r10-0x33]
   14002fe6a:	call   QWORD PTR [r10-0x33]
   14002fe6e:	call   QWORD PTR [r10-0x33]
   14002fe72:	call   QWORD PTR [r10-0x33]
   14002fe76:	call   QWORD PTR [r10-0x33]
   14002fe7a:	call   QWORD PTR [r10-0x33]
   14002fe7e:	call   QWORD PTR [r10-0x33]
   14002fe82:	call   QWORD PTR [r10-0x33]
   14002fe86:	call   QWORD PTR [r10-0x33]
   14002fe8a:	call   QWORD PTR [r10-0x33]
   14002fe8e:	call   QWORD PTR [r10-0x33]
   14002fe92:	call   QWORD PTR [r10-0x33]
   14002fe96:	call   QWORD PTR [r10-0x33]
   14002fe9a:	call   QWORD PTR [r10-0x33]
   14002fe9e:	call   QWORD PTR [r10-0x33]
   14002fea2:	call   QWORD PTR [r10-0x33]
   14002fea6:	call   QWORD PTR [r10-0x33]
   14002feaa:	call   QWORD PTR [r10-0x33]
   14002feae:	call   QWORD PTR [r10-0x33]
   14002feb2:	call   QWORD PTR [r10-0x33]
   14002feb6:	call   QWORD PTR [r10-0x33]
   14002feba:	call   QWORD PTR [r10-0x33]
   14002febe:	call   QWORD PTR [r10-0x33]
   14002fec2:	call   QWORD PTR [r10-0x33]
   14002fec6:	call   QWORD PTR [r10-0x33]
   14002feca:	call   QWORD PTR [r10-0x33]
   14002fece:	call   QWORD PTR [r10-0x33]
   14002fed2:	call   QWORD PTR [r10-0x33]
   14002fed6:	call   QWORD PTR [r10-0x33]
   14002feda:	call   QWORD PTR [r10-0x33]
   14002fede:	call   QWORD PTR [r10-0x33]
   14002fee2:	call   QWORD PTR [r10-0x33]
   14002fee6:	call   QWORD PTR [r10-0x33]
   14002feea:	call   QWORD PTR [r10-0x33]
   14002feee:	call   QWORD PTR [r10-0x33]
   14002fef2:	call   QWORD PTR [r10-0x33]
   14002fef6:	call   QWORD PTR [r10-0x33]
   14002fefa:	call   QWORD PTR [r10-0x33]
   14002fefe:	call   QWORD PTR [r10-0x33]
   14002ff02:	call   QWORD PTR [r10-0x33]
   14002ff06:	call   QWORD PTR [r10-0x33]
   14002ff0a:	call   QWORD PTR [r10-0x33]
   14002ff0e:	call   QWORD PTR [r10-0x33]
   14002ff12:	call   QWORD PTR [r10-0x33]
   14002ff16:	call   QWORD PTR [r10-0x33]
   14002ff1a:	call   QWORD PTR [r10-0x33]
   14002ff1e:	call   QWORD PTR [r10-0x33]
   14002ff22:	call   QWORD PTR [r10-0x33]
   14002ff26:	call   QWORD PTR [r10-0x33]
   14002ff2a:	call   QWORD PTR [r10-0x33]
   14002ff2e:	call   QWORD PTR [r10-0x33]
   14002ff32:	call   QWORD PTR [r10-0x33]
   14002ff36:	call   QWORD PTR [r10-0x33]
   14002ff3a:	call   QWORD PTR [r10-0x33]
   14002ff3e:	call   QWORD PTR [r10-0x33]
   14002ff42:	call   QWORD PTR [r10-0x33]
   14002ff46:	call   QWORD PTR [r10-0x33]
   14002ff4a:	call   QWORD PTR [r10-0x33]
   14002ff4e:	call   QWORD PTR [r10-0x33]
   14002ff52:	call   QWORD PTR [r10-0x33]
   14002ff56:	call   QWORD PTR [r10-0x33]
   14002ff5a:	call   QWORD PTR [r10-0x33]
   14002ff5e:	call   QWORD PTR [r10-0x33]
   14002ff62:	call   QWORD PTR [r10-0x33]
   14002ff66:	call   QWORD PTR [r10-0x33]
   14002ff6a:	call   QWORD PTR [r10-0x33]
   14002ff6e:	call   QWORD PTR [r10-0x33]
   14002ff72:	call   QWORD PTR [r10-0x33]
   14002ff76:	call   QWORD PTR [r10-0x33]
   14002ff7a:	call   QWORD PTR [r10-0x33]
   14002ff7e:	call   QWORD PTR [r10-0x33]
   14002ff82:	call   QWORD PTR [r10-0x33]
   14002ff86:	call   QWORD PTR [r10-0x33]
   14002ff8a:	call   QWORD PTR [r10-0x33]
   14002ff8e:	call   QWORD PTR [r10-0x33]
   14002ff92:	call   QWORD PTR [r10-0x33]
   14002ff96:	call   QWORD PTR [r10-0x33]
   14002ff9a:	call   QWORD PTR [r10-0x33]
   14002ff9e:	call   QWORD PTR [r10-0x33]
   14002ffa2:	call   QWORD PTR [r10-0x33]
   14002ffa6:	call   QWORD PTR [r10-0x33]
   14002ffaa:	call   QWORD PTR [r10-0x33]
   14002ffae:	call   QWORD PTR [r10-0x33]
   14002ffb2:	call   QWORD PTR [r10-0x33]
   14002ffb6:	call   QWORD PTR [r10-0x33]
   14002ffba:	inc    DWORD PTR [r8]
   14002ffbd:	add    BYTE PTR [rax],al
   14002ffbf:	cmp    eax,DWORD PTR [rax]
   14002ffc1:	add    BYTE PTR [rax],al
   14002ffc3:	sbb    al,0x0
   14002ffc5:	add    BYTE PTR [rax],al
   14002ffc7:	or     al,0x0
   14002ffc9:	add    BYTE PTR [rax],al
   14002ffcb:	add    eax,0x2000000
	...
   140030048:	add    BYTE PTR [rax],al
   14003004a:	add    BYTE PTR [rcx],al
   14003004c:	add    BYTE PTR [rax],al
   14003004e:	add    BYTE PTR [rdx],al
   140030050:	add    BYTE PTR [rax],al
   140030052:	add    BYTE PTR [rdi],al
   140030054:	add    BYTE PTR [rax],al
   140030056:	add    BYTE PTR [rdi],cl
   140030058:	add    BYTE PTR [rax],al
   14003005a:	add    BYTE PTR [rax],ah
   14003005c:	rex.R test al,0x37
   14003005f:	pushf  
   140030060:	push   rdx
   140030061:	int    0x41
   140030063:	call   QWORD PTR [rdx-0x33]
   140030066:	call   QWORD PTR [r10-0x33]
   14003006a:	call   QWORD PTR [r10-0x33]
   14003006e:	call   QWORD PTR [r10-0x33]
   140030072:	call   QWORD PTR [r10-0x33]
   140030076:	call   QWORD PTR [r10-0x33]
   14003007a:	call   QWORD PTR [r10-0x33]
   14003007e:	call   QWORD PTR [r10-0x33]
   140030082:	call   QWORD PTR [r10-0x33]
   140030086:	call   QWORD PTR [r10-0x33]
   14003008a:	call   QWORD PTR [r10-0x33]
   14003008e:	call   QWORD PTR [r10-0x33]
   140030092:	call   QWORD PTR [r10-0x33]
   140030096:	call   QWORD PTR [r10-0x33]
   14003009a:	call   QWORD PTR [r10-0x33]
   14003009e:	call   QWORD PTR [r10-0x33]
   1400300a2:	call   QWORD PTR [r10-0x33]
   1400300a6:	call   QWORD PTR [r10-0x33]
   1400300aa:	call   QWORD PTR [r10-0x33]
   1400300ae:	call   QWORD PTR [r10-0x33]
   1400300b2:	call   QWORD PTR [r10-0x33]
   1400300b6:	call   QWORD PTR [r10-0x33]
   1400300ba:	call   QWORD PTR [r10-0x33]
   1400300be:	call   QWORD PTR [r10-0x33]
   1400300c2:	call   QWORD PTR [r10-0x33]
   1400300c6:	call   QWORD PTR [r10-0x33]
   1400300ca:	call   QWORD PTR [r10-0x33]
   1400300ce:	call   QWORD PTR [r10-0x33]
   1400300d2:	call   QWORD PTR [r10-0x33]
   1400300d6:	call   QWORD PTR [r10-0x33]
   1400300da:	call   QWORD PTR [r10-0x33]
   1400300de:	call   QWORD PTR [r10-0x33]
   1400300e2:	call   QWORD PTR [r10-0x33]
   1400300e6:	call   QWORD PTR [r10-0x33]
   1400300ea:	call   QWORD PTR [r10-0x33]
   1400300ee:	call   QWORD PTR [r10-0x33]
   1400300f2:	call   QWORD PTR [r10-0x33]
   1400300f6:	call   QWORD PTR [r10-0x33]
   1400300fa:	call   QWORD PTR [r10-0x33]
   1400300fe:	call   QWORD PTR [r10-0x33]
   140030102:	call   QWORD PTR [r10-0x33]
   140030106:	call   QWORD PTR [r10-0x33]
   14003010a:	call   QWORD PTR [r10-0x33]
   14003010e:	call   QWORD PTR [r10-0x33]
   140030112:	call   QWORD PTR [r10-0x33]
   140030116:	call   QWORD PTR [r10-0x33]
   14003011a:	call   QWORD PTR [r10-0x33]
   14003011e:	call   QWORD PTR [r10-0x33]
   140030122:	call   QWORD PTR [r10-0x33]
   140030126:	call   QWORD PTR [r10-0x33]
   14003012a:	call   QWORD PTR [r10-0x33]
   14003012e:	call   QWORD PTR [r10-0x33]
   140030132:	call   QWORD PTR [r10-0x33]
   140030136:	call   QWORD PTR [r10-0x33]
   14003013a:	call   QWORD PTR [r10-0x33]
   14003013e:	call   QWORD PTR [r10-0x33]
   140030142:	call   QWORD PTR [r10-0x33]
   140030146:	call   QWORD PTR [r10-0x33]
   14003014a:	call   QWORD PTR [r10-0x33]
   14003014e:	call   QWORD PTR [r10-0x33]
   140030152:	call   QWORD PTR [r10-0x33]
   140030156:	call   QWORD PTR [r10-0x33]
   14003015a:	call   QWORD PTR [r10-0x33]
   14003015e:	call   QWORD PTR [r10-0x33]
   140030162:	call   QWORD PTR [r10-0x33]
   140030166:	call   QWORD PTR [r10-0x33]
   14003016a:	call   QWORD PTR [r10-0x33]
   14003016e:	call   QWORD PTR [r10-0x33]
   140030172:	call   QWORD PTR [r10-0x33]
   140030176:	call   QWORD PTR [r10-0x33]
   14003017a:	call   QWORD PTR [r10-0x33]
   14003017e:	call   QWORD PTR [r10-0x33]
   140030182:	call   QWORD PTR [r10-0x33]
   140030186:	call   QWORD PTR [r10-0x33]
   14003018a:	call   QWORD PTR [r10-0x33]
   14003018e:	call   QWORD PTR [r10-0x33]
   140030192:	call   QWORD PTR [r10-0x33]
   140030196:	call   QWORD PTR [r10-0x33]
   14003019a:	call   QWORD PTR [r10-0x33]
   14003019e:	call   QWORD PTR [r10-0x33]
   1400301a2:	call   QWORD PTR [r10-0x33]
   1400301a6:	call   QWORD PTR [r10-0x33]
   1400301aa:	call   QWORD PTR [r10-0x33]
   1400301ae:	call   QWORD PTR [r10-0x33]
   1400301b2:	call   QWORD PTR [r10-0x33]
   1400301b6:	call   QWORD PTR [r10-0x33]
   1400301ba:	inc    DWORD PTR [r8]
   1400301bd:	add    BYTE PTR [rax],al
   1400301bf:	cmp    al,BYTE PTR [rax]
   1400301c1:	add    BYTE PTR [rax],al
   1400301c3:	sbb    eax,DWORD PTR [rax]
   1400301c5:	add    BYTE PTR [rax],al
   1400301c7:	or     al,0x0
   1400301c9:	add    BYTE PTR [rax],al
   1400301cb:	add    eax,0x1000000
	...
   14003024c:	add    BYTE PTR [rax],al
   14003024e:	add    BYTE PTR [rcx],al
   140030250:	add    BYTE PTR [rax],al
   140030252:	add    BYTE PTR [rdx],al
   140030254:	add    BYTE PTR [rax],al
   140030256:	add    BYTE PTR [rdi],al
   140030258:	add    BYTE PTR [rax],al
   14003025a:	add    BYTE PTR [rdi],cl
   14003025c:	add    BYTE PTR [rax],al
   14003025e:	add    BYTE PTR [rax],ah
   140030260:	rex.R test al,0x37
   140030263:	pushf  
   140030264:	push   rdx
   140030265:	int    0x41
   140030267:	call   QWORD PTR [rdx-0x33]
   14003026a:	call   QWORD PTR [r10-0x33]
   14003026e:	call   QWORD PTR [r10-0x33]
   140030272:	call   QWORD PTR [r10-0x33]
   140030276:	call   QWORD PTR [r10-0x33]
   14003027a:	call   QWORD PTR [r10-0x33]
   14003027e:	call   QWORD PTR [r10-0x33]
   140030282:	call   QWORD PTR [r10-0x33]
   140030286:	call   QWORD PTR [r10-0x33]
   14003028a:	call   QWORD PTR [r10-0x33]
   14003028e:	call   QWORD PTR [r10-0x33]
   140030292:	call   QWORD PTR [r10-0x33]
   140030296:	call   QWORD PTR [r10-0x33]
   14003029a:	call   QWORD PTR [r10-0x33]
   14003029e:	call   QWORD PTR [r10-0x33]
   1400302a2:	call   QWORD PTR [r10-0x33]
   1400302a6:	call   QWORD PTR [r10-0x33]
   1400302aa:	call   QWORD PTR [r10-0x33]
   1400302ae:	call   QWORD PTR [r10-0x33]
   1400302b2:	call   QWORD PTR [r10-0x33]
   1400302b6:	call   QWORD PTR [r10-0x33]
   1400302ba:	call   QWORD PTR [r10-0x33]
   1400302be:	call   QWORD PTR [r10-0x33]
   1400302c2:	call   QWORD PTR [r10-0x33]
   1400302c6:	call   QWORD PTR [r10-0x33]
   1400302ca:	call   QWORD PTR [r10-0x33]
   1400302ce:	call   QWORD PTR [r10-0x33]
   1400302d2:	call   QWORD PTR [r10-0x33]
   1400302d6:	call   QWORD PTR [r10-0x33]
   1400302da:	call   QWORD PTR [r10-0x33]
   1400302de:	call   QWORD PTR [r10-0x33]
   1400302e2:	call   QWORD PTR [r10-0x33]
   1400302e6:	call   QWORD PTR [r10-0x33]
   1400302ea:	call   QWORD PTR [r10-0x33]
   1400302ee:	call   QWORD PTR [r10-0x33]
   1400302f2:	call   QWORD PTR [r10-0x33]
   1400302f6:	call   QWORD PTR [r10-0x33]
   1400302fa:	call   QWORD PTR [r10-0x33]
   1400302fe:	call   QWORD PTR [r10-0x33]
   140030302:	call   QWORD PTR [r10-0x33]
   140030306:	call   QWORD PTR [r10-0x33]
   14003030a:	call   QWORD PTR [r10-0x33]
   14003030e:	call   QWORD PTR [r10-0x33]
   140030312:	call   QWORD PTR [r10-0x33]
   140030316:	call   QWORD PTR [r10-0x33]
   14003031a:	call   QWORD PTR [r10-0x33]
   14003031e:	call   QWORD PTR [r10-0x33]
   140030322:	call   QWORD PTR [r10-0x33]
   140030326:	call   QWORD PTR [r10-0x33]
   14003032a:	call   QWORD PTR [r10-0x33]
   14003032e:	call   QWORD PTR [r10-0x33]
   140030332:	call   QWORD PTR [r10-0x33]
   140030336:	call   QWORD PTR [r10-0x33]
   14003033a:	call   QWORD PTR [r10-0x33]
   14003033e:	call   QWORD PTR [r10-0x33]
   140030342:	call   QWORD PTR [r10-0x33]
   140030346:	call   QWORD PTR [r10-0x33]
   14003034a:	call   QWORD PTR [r10-0x33]
   14003034e:	call   QWORD PTR [r10-0x33]
   140030352:	call   QWORD PTR [r10-0x33]
   140030356:	call   QWORD PTR [r10-0x33]
   14003035a:	call   QWORD PTR [r10-0x33]
   14003035e:	call   QWORD PTR [r10-0x33]
   140030362:	call   QWORD PTR [r10-0x33]
   140030366:	call   QWORD PTR [r10-0x33]
   14003036a:	call   QWORD PTR [r10-0x33]
   14003036e:	call   QWORD PTR [r10-0x33]
   140030372:	call   QWORD PTR [r10-0x33]
   140030376:	call   QWORD PTR [r10-0x33]
   14003037a:	call   QWORD PTR [r10-0x33]
   14003037e:	call   QWORD PTR [r10-0x33]
   140030382:	call   QWORD PTR [r10-0x33]
   140030386:	call   QWORD PTR [r10-0x33]
   14003038a:	call   QWORD PTR [r10-0x33]
   14003038e:	call   QWORD PTR [r10-0x33]
   140030392:	call   QWORD PTR [r10-0x33]
   140030396:	call   QWORD PTR [r10-0x33]
   14003039a:	call   QWORD PTR [r10-0x33]
   14003039e:	call   QWORD PTR [r10-0x33]
   1400303a2:	call   QWORD PTR [r10-0x33]
   1400303a6:	call   QWORD PTR [r10-0x33]
   1400303aa:	call   QWORD PTR [r10-0x33]
   1400303ae:	call   QWORD PTR [r10-0x33]
   1400303b2:	call   QWORD PTR [r10-0x33]
   1400303b6:	call   QWORD PTR [r10-0x33]
   1400303ba:	inc    DWORD PTR [r8]
   1400303bd:	add    BYTE PTR [rax],al
   1400303bf:	(bad)  
   1400303c0:	add    BYTE PTR [rax],al
   1400303c2:	add    BYTE PTR [rdx],bl
   1400303c4:	add    BYTE PTR [rax],al
   1400303c6:	add    BYTE PTR [rbx],cl
   1400303c8:	add    BYTE PTR [rax],al
   1400303ca:	add    BYTE PTR [rax+rax*1],al
   1400303cd:	add    BYTE PTR [rax],al
   1400303cf:	add    DWORD PTR [rax],eax
	...
   140030451:	add    BYTE PTR [rax],al
   140030453:	add    DWORD PTR [rax],eax
   140030455:	add    BYTE PTR [rax],al
   140030457:	add    al,BYTE PTR [rax]
   140030459:	add    BYTE PTR [rax],al
   14003045b:	(bad)  
   14003045c:	add    BYTE PTR [rax],al
   14003045e:	add    BYTE PTR [rdi],cl
   140030460:	add    BYTE PTR [rax],al
   140030462:	add    BYTE PTR [rax],ah
   140030464:	rex.R test eax,0xcd529c37
   14003046a:	call   QWORD PTR [r10-0x33]
   14003046e:	call   QWORD PTR [r10-0x33]
   140030472:	call   QWORD PTR [r10-0x33]
   140030476:	call   QWORD PTR [r10-0x33]
   14003047a:	call   QWORD PTR [r10-0x33]
   14003047e:	call   QWORD PTR [r10-0x33]
   140030482:	call   QWORD PTR [r10-0x33]
   140030486:	call   QWORD PTR [r10-0x33]
   14003048a:	call   QWORD PTR [r10-0x33]
   14003048e:	call   QWORD PTR [r10-0x33]
   140030492:	call   QWORD PTR [r10-0x33]
   140030496:	call   QWORD PTR [r10-0x33]
   14003049a:	call   QWORD PTR [r10-0x33]
   14003049e:	call   QWORD PTR [r10-0x33]
   1400304a2:	call   QWORD PTR [r10-0x33]
   1400304a6:	call   QWORD PTR [r10-0x33]
   1400304aa:	call   QWORD PTR [r10-0x33]
   1400304ae:	call   QWORD PTR [r10-0x33]
   1400304b2:	call   QWORD PTR [r10-0x33]
   1400304b6:	call   QWORD PTR [r10-0x33]
   1400304ba:	call   QWORD PTR [r10-0x33]
   1400304be:	call   QWORD PTR [r10-0x33]
   1400304c2:	call   QWORD PTR [r10-0x33]
   1400304c6:	call   QWORD PTR [r10-0x33]
   1400304ca:	call   QWORD PTR [r10-0x33]
   1400304ce:	call   QWORD PTR [r10-0x33]
   1400304d2:	call   QWORD PTR [r10-0x33]
   1400304d6:	call   QWORD PTR [r10-0x33]
   1400304da:	call   QWORD PTR [r10-0x33]
   1400304de:	call   QWORD PTR [r10-0x33]
   1400304e2:	call   QWORD PTR [r10-0x33]
   1400304e6:	call   QWORD PTR [r10-0x33]
   1400304ea:	call   QWORD PTR [r10-0x33]
   1400304ee:	call   QWORD PTR [r10-0x33]
   1400304f2:	call   QWORD PTR [r10-0x33]
   1400304f6:	call   QWORD PTR [r10-0x33]
   1400304fa:	call   QWORD PTR [r10-0x33]
   1400304fe:	call   QWORD PTR [r10-0x33]
   140030502:	call   QWORD PTR [r10-0x33]
   140030506:	call   QWORD PTR [r10-0x33]
   14003050a:	call   QWORD PTR [r10-0x33]
   14003050e:	call   QWORD PTR [r10-0x33]
   140030512:	call   QWORD PTR [r10-0x33]
   140030516:	call   QWORD PTR [r10-0x33]
   14003051a:	call   QWORD PTR [r10-0x33]
   14003051e:	call   QWORD PTR [r10-0x33]
   140030522:	call   QWORD PTR [r10-0x33]
   140030526:	call   QWORD PTR [r10-0x33]
   14003052a:	call   QWORD PTR [r10-0x33]
   14003052e:	call   QWORD PTR [r10-0x33]
   140030532:	call   QWORD PTR [r10-0x33]
   140030536:	call   QWORD PTR [r10-0x33]
   14003053a:	call   QWORD PTR [r10-0x33]
   14003053e:	call   QWORD PTR [r10-0x33]
   140030542:	call   QWORD PTR [r10-0x33]
   140030546:	call   QWORD PTR [r10-0x33]
   14003054a:	call   QWORD PTR [r10-0x33]
   14003054e:	call   QWORD PTR [r10-0x33]
   140030552:	call   QWORD PTR [r10-0x33]
   140030556:	call   QWORD PTR [r10-0x33]
   14003055a:	call   QWORD PTR [r10-0x33]
   14003055e:	call   QWORD PTR [r10-0x33]
   140030562:	call   QWORD PTR [r10-0x33]
   140030566:	call   QWORD PTR [r10-0x33]
   14003056a:	call   QWORD PTR [r10-0x33]
   14003056e:	call   QWORD PTR [r10-0x33]
   140030572:	call   QWORD PTR [r10-0x33]
   140030576:	call   QWORD PTR [r10-0x33]
   14003057a:	call   QWORD PTR [r10-0x33]
   14003057e:	call   QWORD PTR [r10-0x33]
   140030582:	call   QWORD PTR [r10-0x33]
   140030586:	call   QWORD PTR [r10-0x33]
   14003058a:	call   QWORD PTR [r10-0x33]
   14003058e:	call   QWORD PTR [r10-0x33]
   140030592:	call   QWORD PTR [r10-0x33]
   140030596:	call   QWORD PTR [r10-0x33]
   14003059a:	call   QWORD PTR [r10-0x33]
   14003059e:	call   QWORD PTR [r10-0x33]
   1400305a2:	call   QWORD PTR [r10-0x33]
   1400305a6:	call   QWORD PTR [r10-0x33]
   1400305aa:	call   QWORD PTR [r10-0x33]
   1400305ae:	call   QWORD PTR [r10-0x33]
   1400305b2:	call   QWORD PTR [r10-0x33]
   1400305b6:	call   QWORD PTR [r10-0x33]
   1400305ba:	inc    DWORD PTR [r8]
   1400305bd:	add    BYTE PTR [rax],al
   1400305bf:	xor    eax,DWORD PTR [rax]
   1400305c1:	add    BYTE PTR [rax],al
   1400305c3:	(bad)  
   1400305c4:	add    BYTE PTR [rax],al
   1400305c6:	add    BYTE PTR [rcx],cl
   1400305c8:	add    BYTE PTR [rax],al
   1400305ca:	add    BYTE PTR [rax+rax*1],al
   1400305cd:	add    BYTE PTR [rax],al
   1400305cf:	add    DWORD PTR [rax],eax
	...
   140030655:	add    BYTE PTR [rax],al
   140030657:	add    DWORD PTR [rax],eax
   140030659:	add    BYTE PTR [rax],al
   14003065b:	add    al,BYTE PTR [rax]
   14003065d:	add    BYTE PTR [rax],al
   14003065f:	(bad)  
   140030660:	add    BYTE PTR [rax],al
   140030662:	add    BYTE PTR [rdi],cl
   140030664:	add    BYTE PTR [rax],al
   140030666:	add    BYTE PTR [rdi],bl
   140030668:	rex.R test eax,0xcd529b37
   14003066e:	call   QWORD PTR [r10-0x33]
   140030672:	call   QWORD PTR [r10-0x33]
   140030676:	call   QWORD PTR [r10-0x33]
   14003067a:	call   QWORD PTR [r10-0x33]
   14003067e:	call   QWORD PTR [r10-0x33]
   140030682:	call   QWORD PTR [r10-0x33]
   140030686:	call   QWORD PTR [r10-0x33]
   14003068a:	call   QWORD PTR [r10-0x33]
   14003068e:	call   QWORD PTR [r10-0x33]
   140030692:	call   QWORD PTR [r10-0x33]
   140030696:	call   QWORD PTR [r10-0x33]
   14003069a:	call   QWORD PTR [r10-0x33]
   14003069e:	call   QWORD PTR [r10-0x33]
   1400306a2:	call   QWORD PTR [r10-0x33]
   1400306a6:	call   QWORD PTR [r10-0x33]
   1400306aa:	call   QWORD PTR [r10-0x33]
   1400306ae:	call   QWORD PTR [r10-0x33]
   1400306b2:	call   QWORD PTR [r10-0x33]
   1400306b6:	call   QWORD PTR [r10-0x33]
   1400306ba:	call   QWORD PTR [r10-0x33]
   1400306be:	call   QWORD PTR [r10-0x33]
   1400306c2:	call   QWORD PTR [r10-0x33]
   1400306c6:	call   QWORD PTR [r10-0x33]
   1400306ca:	call   QWORD PTR [r10-0x33]
   1400306ce:	call   QWORD PTR [r10-0x33]
   1400306d2:	call   QWORD PTR [r10-0x33]
   1400306d6:	call   QWORD PTR [r10-0x33]
   1400306da:	call   QWORD PTR [r10-0x33]
   1400306de:	call   QWORD PTR [r10-0x33]
   1400306e2:	call   QWORD PTR [r10-0x33]
   1400306e6:	call   QWORD PTR [r10-0x33]
   1400306ea:	call   QWORD PTR [r10-0x33]
   1400306ee:	call   QWORD PTR [r10-0x33]
   1400306f2:	call   QWORD PTR [r10-0x33]
   1400306f6:	call   QWORD PTR [r10-0x33]
   1400306fa:	call   QWORD PTR [r10-0x33]
   1400306fe:	call   QWORD PTR [r10-0x33]
   140030702:	call   QWORD PTR [r10-0x33]
   140030706:	call   QWORD PTR [r10-0x33]
   14003070a:	call   QWORD PTR [r10-0x33]
   14003070e:	call   QWORD PTR [r10-0x33]
   140030712:	call   QWORD PTR [r10-0x33]
   140030716:	call   QWORD PTR [r10-0x33]
   14003071a:	call   QWORD PTR [r10-0x33]
   14003071e:	call   QWORD PTR [r10-0x33]
   140030722:	call   QWORD PTR [r10-0x33]
   140030726:	call   QWORD PTR [r10-0x33]
   14003072a:	call   QWORD PTR [r10-0x33]
   14003072e:	call   QWORD PTR [r10-0x33]
   140030732:	call   QWORD PTR [r10-0x33]
   140030736:	call   QWORD PTR [r10-0x33]
   14003073a:	call   QWORD PTR [r10-0x33]
   14003073e:	call   QWORD PTR [r10-0x33]
   140030742:	call   QWORD PTR [r10-0x33]
   140030746:	call   QWORD PTR [r10-0x33]
   14003074a:	call   QWORD PTR [r10-0x33]
   14003074e:	call   QWORD PTR [r10-0x33]
   140030752:	call   QWORD PTR [r10-0x33]
   140030756:	call   QWORD PTR [r10-0x33]
   14003075a:	call   QWORD PTR [r10-0x33]
   14003075e:	call   QWORD PTR [r10-0x33]
   140030762:	call   QWORD PTR [r10-0x33]
   140030766:	call   QWORD PTR [r10-0x33]
   14003076a:	call   QWORD PTR [r10-0x33]
   14003076e:	call   QWORD PTR [r10-0x33]
   140030772:	call   QWORD PTR [r10-0x33]
   140030776:	call   QWORD PTR [r10-0x33]
   14003077a:	call   QWORD PTR [r10-0x33]
   14003077e:	call   QWORD PTR [r10-0x33]
   140030782:	call   QWORD PTR [r10-0x33]
   140030786:	call   QWORD PTR [r10-0x33]
   14003078a:	call   QWORD PTR [r10-0x33]
   14003078e:	call   QWORD PTR [r10-0x33]
   140030792:	call   QWORD PTR [r10-0x33]
   140030796:	call   QWORD PTR [r10-0x33]
   14003079a:	call   QWORD PTR [r10-0x33]
   14003079e:	call   QWORD PTR [r10-0x33]
   1400307a2:	call   QWORD PTR [r10-0x33]
   1400307a6:	call   QWORD PTR [r10-0x33]
   1400307aa:	call   QWORD PTR [r10-0x33]
   1400307ae:	call   QWORD PTR [r10-0x33]
   1400307b2:	call   QWORD PTR [r10-0x33]
   1400307b6:	call   QWORD PTR [r10-0x33]
   1400307ba:	inc    DWORD PTR [r8]
   1400307bd:	add    BYTE PTR [rax],al
   1400307bf:	sub    al,0x0
   1400307c1:	add    BYTE PTR [rax],al
   1400307c3:	adc    eax,DWORD PTR [rax]
   1400307c5:	add    BYTE PTR [rax],al
   1400307c7:	(bad)  
   1400307c8:	add    BYTE PTR [rax],al
   1400307ca:	add    BYTE PTR [rbx],al
   1400307cc:	add    BYTE PTR [rax],al
   1400307ce:	add    BYTE PTR [rcx],al
	...
   140030858:	add    BYTE PTR [rax],al
   14003085a:	add    BYTE PTR [rcx],al
   14003085c:	add    BYTE PTR [rax],al
   14003085e:	add    BYTE PTR [rdx],al
   140030860:	add    BYTE PTR [rax],al
   140030862:	add    BYTE PTR [rdi],al
   140030864:	add    BYTE PTR [rax],al
   140030866:	add    BYTE PTR [rdi],cl
   140030868:	add    BYTE PTR [rax],al
   14003086a:	add    BYTE PTR [rsi],bl
   14003086c:	rex.RB stos DWORD PTR es:[rdi],eax
   14003086e:	(bad)  
   14003086f:	cdq    
   140030870:	push   rdx
   140030871:	int    0x41
   140030873:	call   QWORD PTR [rdx-0x33]
   140030876:	call   QWORD PTR [r10-0x33]
   14003087a:	call   QWORD PTR [r10-0x33]
   14003087e:	call   QWORD PTR [r10-0x33]
   140030882:	call   QWORD PTR [r10-0x33]
   140030886:	call   QWORD PTR [r10-0x33]
   14003088a:	call   QWORD PTR [r10-0x33]
   14003088e:	call   QWORD PTR [r10-0x33]
   140030892:	call   QWORD PTR [r10-0x33]
   140030896:	call   QWORD PTR [r10-0x33]
   14003089a:	call   QWORD PTR [r10-0x33]
   14003089e:	call   QWORD PTR [r10-0x33]
   1400308a2:	call   QWORD PTR [r10-0x33]
   1400308a6:	call   QWORD PTR [r10-0x33]
   1400308aa:	call   QWORD PTR [r10-0x33]
   1400308ae:	call   QWORD PTR [r10-0x33]
   1400308b2:	call   QWORD PTR [r10-0x33]
   1400308b6:	call   QWORD PTR [r10-0x33]
   1400308ba:	call   QWORD PTR [r10-0x33]
   1400308be:	call   QWORD PTR [r10-0x33]
   1400308c2:	call   QWORD PTR [r10-0x33]
   1400308c6:	call   QWORD PTR [r10-0x33]
   1400308ca:	call   QWORD PTR [r10-0x33]
   1400308ce:	call   QWORD PTR [r10-0x33]
   1400308d2:	call   QWORD PTR [r10-0x33]
   1400308d6:	call   QWORD PTR [r10-0x33]
   1400308da:	call   QWORD PTR [r10-0x33]
   1400308de:	call   QWORD PTR [r10-0x33]
   1400308e2:	call   QWORD PTR [r10-0x33]
   1400308e6:	call   QWORD PTR [r10-0x33]
   1400308ea:	call   QWORD PTR [r10-0x33]
   1400308ee:	call   QWORD PTR [r10-0x33]
   1400308f2:	call   QWORD PTR [r10-0x33]
   1400308f6:	call   QWORD PTR [r10-0x33]
   1400308fa:	call   QWORD PTR [r10-0x33]
   1400308fe:	call   QWORD PTR [r10-0x33]
   140030902:	call   QWORD PTR [r10-0x33]
   140030906:	call   QWORD PTR [r10-0x33]
   14003090a:	call   QWORD PTR [r10-0x33]
   14003090e:	call   QWORD PTR [r10-0x33]
   140030912:	call   QWORD PTR [r10-0x33]
   140030916:	call   QWORD PTR [r10-0x33]
   14003091a:	call   QWORD PTR [r10-0x33]
   14003091e:	call   QWORD PTR [r10-0x33]
   140030922:	call   QWORD PTR [r10-0x33]
   140030926:	call   QWORD PTR [r10-0x33]
   14003092a:	call   QWORD PTR [r10-0x33]
   14003092e:	call   QWORD PTR [r10-0x33]
   140030932:	call   QWORD PTR [r10-0x33]
   140030936:	call   QWORD PTR [r10-0x33]
   14003093a:	call   QWORD PTR [r10-0x33]
   14003093e:	call   QWORD PTR [r10-0x33]
   140030942:	call   QWORD PTR [r10-0x33]
   140030946:	call   QWORD PTR [r10-0x33]
   14003094a:	call   QWORD PTR [r10-0x33]
   14003094e:	call   QWORD PTR [r10-0x33]
   140030952:	call   QWORD PTR [r10-0x33]
   140030956:	call   QWORD PTR [r10-0x33]
   14003095a:	call   QWORD PTR [r10-0x33]
   14003095e:	call   QWORD PTR [r10-0x33]
   140030962:	call   QWORD PTR [r10-0x33]
   140030966:	call   QWORD PTR [r10-0x33]
   14003096a:	call   QWORD PTR [r10-0x33]
   14003096e:	call   QWORD PTR [r10-0x33]
   140030972:	call   QWORD PTR [r10-0x33]
   140030976:	call   QWORD PTR [r10-0x33]
   14003097a:	call   QWORD PTR [r10-0x33]
   14003097e:	call   QWORD PTR [r10-0x33]
   140030982:	call   QWORD PTR [r10-0x33]
   140030986:	call   QWORD PTR [r10-0x33]
   14003098a:	call   QWORD PTR [r10-0x33]
   14003098e:	call   QWORD PTR [r10-0x33]
   140030992:	call   QWORD PTR [r10-0x33]
   140030996:	call   QWORD PTR [r10-0x33]
   14003099a:	call   QWORD PTR [r10-0x33]
   14003099e:	call   QWORD PTR [r10-0x33]
   1400309a2:	call   QWORD PTR [r10-0x33]
   1400309a6:	call   QWORD PTR [r10-0x33]
   1400309aa:	call   QWORD PTR [r10-0x33]
   1400309ae:	call   QWORD PTR [r10-0x33]
   1400309b2:	call   QWORD PTR [r10-0x33]
   1400309b6:	call   QWORD PTR [r10-0x33]
   1400309ba:	inc    DWORD PTR [r8]
   1400309bd:	add    BYTE PTR [rax],al
   1400309bf:	and    eax,DWORD PTR [rax]
   1400309c1:	add    BYTE PTR [rax],al
   1400309c3:	(bad)  
   1400309c4:	add    BYTE PTR [rax],al
   1400309c6:	add    BYTE PTR [rip+0x2000000],al        # 0x1420309cc
   1400309cc:	add    BYTE PTR [rax],al
   1400309ce:	add    BYTE PTR [rcx],al
	...
   140030a5c:	add    BYTE PTR [rax],al
   140030a5e:	add    BYTE PTR [rcx],al
   140030a60:	add    BYTE PTR [rax],al
   140030a62:	add    BYTE PTR [rdx],al
   140030a64:	add    BYTE PTR [rax],al
   140030a66:	add    BYTE PTR [rsi],al
   140030a68:	add    BYTE PTR [rax],al
   140030a6a:	add    BYTE PTR [rip+0x1b000000],cl        # 0x15b030a70
   140030a70:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140030a72:	cmp    BYTE PTR [rbp-0xbe32ae],dl
   140030a78:	push   rdx
   140030a79:	int    0x41
   140030a7b:	call   QWORD PTR [rdx-0x33]
   140030a7e:	call   QWORD PTR [r10-0x33]
   140030a82:	call   QWORD PTR [r10-0x33]
   140030a86:	call   QWORD PTR [r10-0x33]
   140030a8a:	call   QWORD PTR [r10-0x33]
   140030a8e:	call   QWORD PTR [r10-0x33]
   140030a92:	call   QWORD PTR [r10-0x33]
   140030a96:	call   QWORD PTR [r10-0x33]
   140030a9a:	call   QWORD PTR [r10-0x33]
   140030a9e:	call   QWORD PTR [r10-0x33]
   140030aa2:	call   QWORD PTR [r10-0x33]
   140030aa6:	call   QWORD PTR [r10-0x33]
   140030aaa:	call   QWORD PTR [r10-0x33]
   140030aae:	call   QWORD PTR [r10-0x33]
   140030ab2:	call   QWORD PTR [r10-0x33]
   140030ab6:	call   QWORD PTR [r10-0x33]
   140030aba:	call   QWORD PTR [r10-0x33]
   140030abe:	call   QWORD PTR [r10-0x33]
   140030ac2:	call   QWORD PTR [r10-0x33]
   140030ac6:	call   QWORD PTR [r10-0x33]
   140030aca:	call   QWORD PTR [r10-0x33]
   140030ace:	call   QWORD PTR [r10-0x33]
   140030ad2:	call   QWORD PTR [r10-0x33]
   140030ad6:	call   QWORD PTR [r10-0x33]
   140030ada:	call   QWORD PTR [r10-0x33]
   140030ade:	call   QWORD PTR [r10-0x33]
   140030ae2:	call   QWORD PTR [r10-0x33]
   140030ae6:	call   QWORD PTR [r10-0x33]
   140030aea:	call   QWORD PTR [r10-0x33]
   140030aee:	call   QWORD PTR [r10-0x33]
   140030af2:	call   QWORD PTR [r10-0x33]
   140030af6:	call   QWORD PTR [r10-0x33]
   140030afa:	call   QWORD PTR [r10-0x33]
   140030afe:	call   QWORD PTR [r10-0x33]
   140030b02:	call   QWORD PTR [r10-0x33]
   140030b06:	call   QWORD PTR [r10-0x33]
   140030b0a:	call   QWORD PTR [r10-0x33]
   140030b0e:	call   QWORD PTR [r10-0x33]
   140030b12:	call   QWORD PTR [r10-0x33]
   140030b16:	call   QWORD PTR [r10-0x33]
   140030b1a:	call   QWORD PTR [r10-0x33]
   140030b1e:	call   QWORD PTR [r10-0x33]
   140030b22:	call   QWORD PTR [r10-0x33]
   140030b26:	call   QWORD PTR [r10-0x33]
   140030b2a:	call   QWORD PTR [r10-0x33]
   140030b2e:	call   QWORD PTR [r10-0x33]
   140030b32:	call   QWORD PTR [r10-0x33]
   140030b36:	call   QWORD PTR [r10-0x33]
   140030b3a:	call   QWORD PTR [r10-0x33]
   140030b3e:	call   QWORD PTR [r10-0x33]
   140030b42:	call   QWORD PTR [r10-0x33]
   140030b46:	call   QWORD PTR [r10-0x33]
   140030b4a:	call   QWORD PTR [r10-0x33]
   140030b4e:	call   QWORD PTR [r10-0x33]
   140030b52:	call   QWORD PTR [r10-0x33]
   140030b56:	call   QWORD PTR [r10-0x33]
   140030b5a:	call   QWORD PTR [r10-0x33]
   140030b5e:	call   QWORD PTR [r10-0x33]
   140030b62:	call   QWORD PTR [r10-0x33]
   140030b66:	call   QWORD PTR [r10-0x33]
   140030b6a:	call   QWORD PTR [r10-0x33]
   140030b6e:	call   QWORD PTR [r10-0x33]
   140030b72:	call   QWORD PTR [r10-0x33]
   140030b76:	call   QWORD PTR [r10-0x33]
   140030b7a:	call   QWORD PTR [r10-0x33]
   140030b7e:	call   QWORD PTR [r10-0x33]
   140030b82:	call   QWORD PTR [r10-0x33]
   140030b86:	call   QWORD PTR [r10-0x33]
   140030b8a:	call   QWORD PTR [r10-0x33]
   140030b8e:	call   QWORD PTR [r10-0x33]
   140030b92:	call   QWORD PTR [r10-0x33]
   140030b96:	call   QWORD PTR [r10-0x33]
   140030b9a:	call   QWORD PTR [r10-0x33]
   140030b9e:	call   QWORD PTR [r10-0x33]
   140030ba2:	call   QWORD PTR [r10-0x33]
   140030ba6:	call   QWORD PTR [r10-0x33]
   140030baa:	call   QWORD PTR [r10-0x33]
   140030bae:	call   QWORD PTR [r10-0x33]
   140030bb2:	call   QWORD PTR [r10-0x33]
   140030bb6:	call   QWORD PTR [r10-0x33]
   140030bba:	inc    DWORD PTR [r8]
   140030bbd:	add    BYTE PTR [rax],al
   140030bbf:	sbb    BYTE PTR [rax],al
   140030bc1:	add    BYTE PTR [rax],al
   140030bc3:	or     DWORD PTR [rax],eax
   140030bc5:	add    BYTE PTR [rax],al
   140030bc7:	add    eax,DWORD PTR [rax]
   140030bc9:	add    BYTE PTR [rax],al
   140030bcb:	add    DWORD PTR [rax],eax
	...
   140030c61:	add    BYTE PTR [rax],al
   140030c63:	add    DWORD PTR [rax],eax
   140030c65:	add    BYTE PTR [rax],al
   140030c67:	add    al,BYTE PTR [rax]
   140030c69:	add    BYTE PTR [rax],al
   140030c6b:	add    al,0x0
   140030c6d:	add    BYTE PTR [rax],al
   140030c6f:	or     al,BYTE PTR [rax]
   140030c71:	add    BYTE PTR [rax],al
   140030c73:	adc    al,BYTE PTR [rax]
   140030c75:	add    BYTE PTR [rax],al
   140030c77:	sbb    al,BYTE PTR [rax]
   140030c79:	add    BYTE PTR [rax],al
   140030c7b:	sbb    eax,0x1e000000
   140030c80:	add    BYTE PTR [rax],al
   140030c82:	add    BYTE PTR [rdi],bl
   140030c84:	add    BYTE PTR [rax],al
   140030c86:	add    BYTE PTR [rdi],bl
   140030c88:	add    BYTE PTR [rax],al
   140030c8a:	add    BYTE PTR [rdi],bl
   140030c8c:	add    BYTE PTR [rax],al
   140030c8e:	add    BYTE PTR [rdi],bl
   140030c90:	add    BYTE PTR [rax],al
   140030c92:	add    BYTE PTR [rdi],bl
   140030c94:	add    BYTE PTR [rax],al
   140030c96:	add    BYTE PTR [rdi],bl
   140030c98:	add    BYTE PTR [rax],al
   140030c9a:	add    BYTE PTR [rdi],bl
   140030c9c:	add    BYTE PTR [rax],al
   140030c9e:	add    BYTE PTR [rdi],bl
   140030ca0:	add    BYTE PTR [rax],al
   140030ca2:	add    BYTE PTR [rdi],bl
   140030ca4:	add    BYTE PTR [rax],al
   140030ca6:	add    BYTE PTR [rdi],bl
   140030ca8:	add    BYTE PTR [rax],al
   140030caa:	add    BYTE PTR [rdi],bl
   140030cac:	add    BYTE PTR [rax],al
   140030cae:	add    BYTE PTR [rdi],bl
   140030cb0:	add    BYTE PTR [rax],al
   140030cb2:	add    BYTE PTR [rdi],bl
   140030cb4:	add    BYTE PTR [rax],al
   140030cb6:	add    BYTE PTR [rdi],bl
   140030cb8:	add    BYTE PTR [rax],al
   140030cba:	add    BYTE PTR [rdi],bl
   140030cbc:	add    BYTE PTR [rax],al
   140030cbe:	add    BYTE PTR [rdi],bl
   140030cc0:	add    BYTE PTR [rax],al
   140030cc2:	add    BYTE PTR [rdi],bl
   140030cc4:	add    BYTE PTR [rax],al
   140030cc6:	add    BYTE PTR [rdi],bl
   140030cc8:	add    BYTE PTR [rax],al
   140030cca:	add    BYTE PTR [rdi],bl
   140030ccc:	add    BYTE PTR [rax],al
   140030cce:	add    BYTE PTR [rdi],bl
   140030cd0:	add    BYTE PTR [rax],al
   140030cd2:	add    BYTE PTR [rdi],bl
   140030cd4:	add    BYTE PTR [rax],al
   140030cd6:	add    BYTE PTR [rdi],bl
   140030cd8:	add    BYTE PTR [rax],al
   140030cda:	add    BYTE PTR [rdi],bl
   140030cdc:	add    BYTE PTR [rax],al
   140030cde:	add    BYTE PTR [rdi],bl
   140030ce0:	add    BYTE PTR [rax],al
   140030ce2:	add    BYTE PTR [rdi],bl
   140030ce4:	add    BYTE PTR [rax],al
   140030ce6:	add    BYTE PTR [rdi],bl
   140030ce8:	add    BYTE PTR [rax],al
   140030cea:	add    BYTE PTR [rdi],bl
   140030cec:	add    BYTE PTR [rax],al
   140030cee:	add    BYTE PTR [rdi],bl
   140030cf0:	add    BYTE PTR [rax],al
   140030cf2:	add    BYTE PTR [rdi],bl
   140030cf4:	add    BYTE PTR [rax],al
   140030cf6:	add    BYTE PTR [rdi],bl
   140030cf8:	add    BYTE PTR [rax],al
   140030cfa:	add    BYTE PTR [rdi],bl
   140030cfc:	add    BYTE PTR [rax],al
   140030cfe:	add    BYTE PTR [rdi],bl
   140030d00:	add    BYTE PTR [rax],al
   140030d02:	add    BYTE PTR [rdi],bl
   140030d04:	add    BYTE PTR [rax],al
   140030d06:	add    BYTE PTR [rdi],bl
   140030d08:	add    BYTE PTR [rax],al
   140030d0a:	add    BYTE PTR [rdi],bl
   140030d0c:	add    BYTE PTR [rax],al
   140030d0e:	add    BYTE PTR [rdi],bl
   140030d10:	add    BYTE PTR [rax],al
   140030d12:	add    BYTE PTR [rdi],bl
   140030d14:	add    BYTE PTR [rax],al
   140030d16:	add    BYTE PTR [rdi],bl
   140030d18:	add    BYTE PTR [rax],al
   140030d1a:	add    BYTE PTR [rdi],bl
   140030d1c:	add    BYTE PTR [rax],al
   140030d1e:	add    BYTE PTR [rdi],bl
   140030d20:	add    BYTE PTR [rax],al
   140030d22:	add    BYTE PTR [rdi],bl
   140030d24:	add    BYTE PTR [rax],al
   140030d26:	add    BYTE PTR [rdi],bl
   140030d28:	add    BYTE PTR [rax],al
   140030d2a:	add    BYTE PTR [rdi],bl
   140030d2c:	add    BYTE PTR [rax],al
   140030d2e:	add    BYTE PTR [rdi],bl
   140030d30:	add    BYTE PTR [rax],al
   140030d32:	add    BYTE PTR [rdi],bl
   140030d34:	add    BYTE PTR [rax],al
   140030d36:	add    BYTE PTR [rdi],bl
   140030d38:	add    BYTE PTR [rax],al
   140030d3a:	add    BYTE PTR [rdi],bl
   140030d3c:	add    BYTE PTR [rax],al
   140030d3e:	add    BYTE PTR [rdi],bl
   140030d40:	add    BYTE PTR [rax],al
   140030d42:	add    BYTE PTR [rdi],bl
   140030d44:	add    BYTE PTR [rax],al
   140030d46:	add    BYTE PTR [rdi],bl
   140030d48:	add    BYTE PTR [rax],al
   140030d4a:	add    BYTE PTR [rdi],bl
   140030d4c:	add    BYTE PTR [rax],al
   140030d4e:	add    BYTE PTR [rdi],bl
   140030d50:	add    BYTE PTR [rax],al
   140030d52:	add    BYTE PTR [rdi],bl
   140030d54:	add    BYTE PTR [rax],al
   140030d56:	add    BYTE PTR [rdi],bl
   140030d58:	add    BYTE PTR [rax],al
   140030d5a:	add    BYTE PTR [rdi],bl
   140030d5c:	add    BYTE PTR [rax],al
   140030d5e:	add    BYTE PTR [rdi],bl
   140030d60:	add    BYTE PTR [rax],al
   140030d62:	add    BYTE PTR [rdi],bl
   140030d64:	add    BYTE PTR [rax],al
   140030d66:	add    BYTE PTR [rdi],bl
   140030d68:	add    BYTE PTR [rax],al
   140030d6a:	add    BYTE PTR [rdi],bl
   140030d6c:	add    BYTE PTR [rax],al
   140030d6e:	add    BYTE PTR [rdi],bl
   140030d70:	add    BYTE PTR [rax],al
   140030d72:	add    BYTE PTR [rdi],bl
   140030d74:	add    BYTE PTR [rax],al
   140030d76:	add    BYTE PTR [rdi],bl
   140030d78:	add    BYTE PTR [rax],al
   140030d7a:	add    BYTE PTR [rdi],bl
   140030d7c:	add    BYTE PTR [rax],al
   140030d7e:	add    BYTE PTR [rdi],bl
   140030d80:	add    BYTE PTR [rax],al
   140030d82:	add    BYTE PTR [rdi],bl
   140030d84:	add    BYTE PTR [rax],al
   140030d86:	add    BYTE PTR [rdi],bl
   140030d88:	add    BYTE PTR [rax],al
   140030d8a:	add    BYTE PTR [rdi],bl
   140030d8c:	add    BYTE PTR [rax],al
   140030d8e:	add    BYTE PTR [rdi],bl
   140030d90:	add    BYTE PTR [rax],al
   140030d92:	add    BYTE PTR [rdi],bl
   140030d94:	add    BYTE PTR [rax],al
   140030d96:	add    BYTE PTR [rdi],bl
   140030d98:	add    BYTE PTR [rax],al
   140030d9a:	add    BYTE PTR [rdi],bl
   140030d9c:	add    BYTE PTR [rax],al
   140030d9e:	add    BYTE PTR [rdi],bl
   140030da0:	add    BYTE PTR [rax],al
   140030da2:	add    BYTE PTR [rdi],bl
   140030da4:	add    BYTE PTR [rax],al
   140030da6:	add    BYTE PTR [rdi],bl
   140030da8:	add    BYTE PTR [rax],al
   140030daa:	add    BYTE PTR [rdi],bl
   140030dac:	add    BYTE PTR [rax],al
   140030dae:	add    BYTE PTR [rdi],bl
   140030db0:	add    BYTE PTR [rax],al
   140030db2:	add    BYTE PTR [rip+0x1b000000],bl        # 0x15b030db8
   140030db8:	add    BYTE PTR [rax],al
   140030dba:	add    BYTE PTR [rip+0xb000000],dl        # 0x14b030dc0
   140030dc0:	add    BYTE PTR [rax],al
   140030dc2:	add    BYTE PTR [rax+rax*1],al
   140030dc5:	add    BYTE PTR [rax],al
   140030dc7:	add    DWORD PTR [rax],eax
   140030dc9:	add    BYTE PTR [rax],al
   140030dcb:	add    DWORD PTR [rax],eax
	...
   140030e65:	add    BYTE PTR [rax],al
   140030e67:	add    DWORD PTR [rax],eax
   140030e69:	add    BYTE PTR [rax],al
   140030e6b:	add    DWORD PTR [rax],eax
   140030e6d:	add    BYTE PTR [rax],al
   140030e6f:	add    eax,DWORD PTR [rax]
   140030e71:	add    BYTE PTR [rax],al
   140030e73:	add    eax,0x7000000
   140030e78:	add    BYTE PTR [rax],al
   140030e7a:	add    BYTE PTR [rax],cl
   140030e7c:	add    BYTE PTR [rax],al
   140030e7e:	add    BYTE PTR [rax],cl
   140030e80:	add    BYTE PTR [rax],al
   140030e82:	add    BYTE PTR [rcx],cl
   140030e84:	add    BYTE PTR [rax],al
   140030e86:	add    BYTE PTR [rcx],cl
   140030e88:	add    BYTE PTR [rax],al
   140030e8a:	add    BYTE PTR [rcx],cl
   140030e8c:	add    BYTE PTR [rax],al
   140030e8e:	add    BYTE PTR [rcx],cl
   140030e90:	add    BYTE PTR [rax],al
   140030e92:	add    BYTE PTR [rcx],cl
   140030e94:	add    BYTE PTR [rax],al
   140030e96:	add    BYTE PTR [rcx],cl
   140030e98:	add    BYTE PTR [rax],al
   140030e9a:	add    BYTE PTR [rcx],cl
   140030e9c:	add    BYTE PTR [rax],al
   140030e9e:	add    BYTE PTR [rcx],cl
   140030ea0:	add    BYTE PTR [rax],al
   140030ea2:	add    BYTE PTR [rcx],cl
   140030ea4:	add    BYTE PTR [rax],al
   140030ea6:	add    BYTE PTR [rcx],cl
   140030ea8:	add    BYTE PTR [rax],al
   140030eaa:	add    BYTE PTR [rcx],cl
   140030eac:	add    BYTE PTR [rax],al
   140030eae:	add    BYTE PTR [rcx],cl
   140030eb0:	add    BYTE PTR [rax],al
   140030eb2:	add    BYTE PTR [rcx],cl
   140030eb4:	add    BYTE PTR [rax],al
   140030eb6:	add    BYTE PTR [rcx],cl
   140030eb8:	add    BYTE PTR [rax],al
   140030eba:	add    BYTE PTR [rcx],cl
   140030ebc:	add    BYTE PTR [rax],al
   140030ebe:	add    BYTE PTR [rcx],cl
   140030ec0:	add    BYTE PTR [rax],al
   140030ec2:	add    BYTE PTR [rcx],cl
   140030ec4:	add    BYTE PTR [rax],al
   140030ec6:	add    BYTE PTR [rcx],cl
   140030ec8:	add    BYTE PTR [rax],al
   140030eca:	add    BYTE PTR [rcx],cl
   140030ecc:	add    BYTE PTR [rax],al
   140030ece:	add    BYTE PTR [rcx],cl
   140030ed0:	add    BYTE PTR [rax],al
   140030ed2:	add    BYTE PTR [rcx],cl
   140030ed4:	add    BYTE PTR [rax],al
   140030ed6:	add    BYTE PTR [rcx],cl
   140030ed8:	add    BYTE PTR [rax],al
   140030eda:	add    BYTE PTR [rcx],cl
   140030edc:	add    BYTE PTR [rax],al
   140030ede:	add    BYTE PTR [rcx],cl
   140030ee0:	add    BYTE PTR [rax],al
   140030ee2:	add    BYTE PTR [rcx],cl
   140030ee4:	add    BYTE PTR [rax],al
   140030ee6:	add    BYTE PTR [rcx],cl
   140030ee8:	add    BYTE PTR [rax],al
   140030eea:	add    BYTE PTR [rcx],cl
   140030eec:	add    BYTE PTR [rax],al
   140030eee:	add    BYTE PTR [rcx],cl
   140030ef0:	add    BYTE PTR [rax],al
   140030ef2:	add    BYTE PTR [rcx],cl
   140030ef4:	add    BYTE PTR [rax],al
   140030ef6:	add    BYTE PTR [rcx],cl
   140030ef8:	add    BYTE PTR [rax],al
   140030efa:	add    BYTE PTR [rcx],cl
   140030efc:	add    BYTE PTR [rax],al
   140030efe:	add    BYTE PTR [rcx],cl
   140030f00:	add    BYTE PTR [rax],al
   140030f02:	add    BYTE PTR [rcx],cl
   140030f04:	add    BYTE PTR [rax],al
   140030f06:	add    BYTE PTR [rcx],cl
   140030f08:	add    BYTE PTR [rax],al
   140030f0a:	add    BYTE PTR [rcx],cl
   140030f0c:	add    BYTE PTR [rax],al
   140030f0e:	add    BYTE PTR [rcx],cl
   140030f10:	add    BYTE PTR [rax],al
   140030f12:	add    BYTE PTR [rcx],cl
   140030f14:	add    BYTE PTR [rax],al
   140030f16:	add    BYTE PTR [rcx],cl
   140030f18:	add    BYTE PTR [rax],al
   140030f1a:	add    BYTE PTR [rcx],cl
   140030f1c:	add    BYTE PTR [rax],al
   140030f1e:	add    BYTE PTR [rcx],cl
   140030f20:	add    BYTE PTR [rax],al
   140030f22:	add    BYTE PTR [rcx],cl
   140030f24:	add    BYTE PTR [rax],al
   140030f26:	add    BYTE PTR [rcx],cl
   140030f28:	add    BYTE PTR [rax],al
   140030f2a:	add    BYTE PTR [rcx],cl
   140030f2c:	add    BYTE PTR [rax],al
   140030f2e:	add    BYTE PTR [rcx],cl
   140030f30:	add    BYTE PTR [rax],al
   140030f32:	add    BYTE PTR [rcx],cl
   140030f34:	add    BYTE PTR [rax],al
   140030f36:	add    BYTE PTR [rcx],cl
   140030f38:	add    BYTE PTR [rax],al
   140030f3a:	add    BYTE PTR [rcx],cl
   140030f3c:	add    BYTE PTR [rax],al
   140030f3e:	add    BYTE PTR [rcx],cl
   140030f40:	add    BYTE PTR [rax],al
   140030f42:	add    BYTE PTR [rcx],cl
   140030f44:	add    BYTE PTR [rax],al
   140030f46:	add    BYTE PTR [rcx],cl
   140030f48:	add    BYTE PTR [rax],al
   140030f4a:	add    BYTE PTR [rcx],cl
   140030f4c:	add    BYTE PTR [rax],al
   140030f4e:	add    BYTE PTR [rcx],cl
   140030f50:	add    BYTE PTR [rax],al
   140030f52:	add    BYTE PTR [rcx],cl
   140030f54:	add    BYTE PTR [rax],al
   140030f56:	add    BYTE PTR [rcx],cl
   140030f58:	add    BYTE PTR [rax],al
   140030f5a:	add    BYTE PTR [rcx],cl
   140030f5c:	add    BYTE PTR [rax],al
   140030f5e:	add    BYTE PTR [rcx],cl
   140030f60:	add    BYTE PTR [rax],al
   140030f62:	add    BYTE PTR [rcx],cl
   140030f64:	add    BYTE PTR [rax],al
   140030f66:	add    BYTE PTR [rcx],cl
   140030f68:	add    BYTE PTR [rax],al
   140030f6a:	add    BYTE PTR [rcx],cl
   140030f6c:	add    BYTE PTR [rax],al
   140030f6e:	add    BYTE PTR [rcx],cl
   140030f70:	add    BYTE PTR [rax],al
   140030f72:	add    BYTE PTR [rcx],cl
   140030f74:	add    BYTE PTR [rax],al
   140030f76:	add    BYTE PTR [rcx],cl
   140030f78:	add    BYTE PTR [rax],al
   140030f7a:	add    BYTE PTR [rcx],cl
   140030f7c:	add    BYTE PTR [rax],al
   140030f7e:	add    BYTE PTR [rcx],cl
   140030f80:	add    BYTE PTR [rax],al
   140030f82:	add    BYTE PTR [rcx],cl
   140030f84:	add    BYTE PTR [rax],al
   140030f86:	add    BYTE PTR [rcx],cl
   140030f88:	add    BYTE PTR [rax],al
   140030f8a:	add    BYTE PTR [rcx],cl
   140030f8c:	add    BYTE PTR [rax],al
   140030f8e:	add    BYTE PTR [rcx],cl
   140030f90:	add    BYTE PTR [rax],al
   140030f92:	add    BYTE PTR [rcx],cl
   140030f94:	add    BYTE PTR [rax],al
   140030f96:	add    BYTE PTR [rcx],cl
   140030f98:	add    BYTE PTR [rax],al
   140030f9a:	add    BYTE PTR [rcx],cl
   140030f9c:	add    BYTE PTR [rax],al
   140030f9e:	add    BYTE PTR [rcx],cl
   140030fa0:	add    BYTE PTR [rax],al
   140030fa2:	add    BYTE PTR [rcx],cl
   140030fa4:	add    BYTE PTR [rax],al
   140030fa6:	add    BYTE PTR [rcx],cl
   140030fa8:	add    BYTE PTR [rax],al
   140030faa:	add    BYTE PTR [rcx],cl
   140030fac:	add    BYTE PTR [rax],al
   140030fae:	add    BYTE PTR [rcx],cl
   140030fb0:	add    BYTE PTR [rax],al
   140030fb2:	add    BYTE PTR [rax],cl
   140030fb4:	add    BYTE PTR [rax],al
   140030fb6:	add    BYTE PTR [rax],cl
   140030fb8:	add    BYTE PTR [rax],al
   140030fba:	add    BYTE PTR [rsi],al
   140030fbc:	add    BYTE PTR [rax],al
   140030fbe:	add    BYTE PTR [rbx],al
   140030fc0:	add    BYTE PTR [rax],al
   140030fc2:	add    BYTE PTR [rcx],al
   140030fc4:	add    BYTE PTR [rax],al
   140030fc6:	add    BYTE PTR [rcx],al
	...
   14003106c:	add    BYTE PTR [rax],al
   14003106e:	add    BYTE PTR [rcx],al
   140031070:	add    BYTE PTR [rax],al
   140031072:	add    BYTE PTR [rcx],al
   140031074:	add    BYTE PTR [rax],al
   140031076:	add    BYTE PTR [rcx],al
   140031078:	add    BYTE PTR [rax],al
   14003107a:	add    BYTE PTR [rcx],al
   14003107c:	add    BYTE PTR [rax],al
   14003107e:	add    BYTE PTR [rcx],al
   140031080:	add    BYTE PTR [rax],al
   140031082:	add    BYTE PTR [rdx],al
   140031084:	add    BYTE PTR [rax],al
   140031086:	add    BYTE PTR [rdx],al
   140031088:	add    BYTE PTR [rax],al
   14003108a:	add    BYTE PTR [rdx],al
   14003108c:	add    BYTE PTR [rax],al
   14003108e:	add    BYTE PTR [rdx],al
   140031090:	add    BYTE PTR [rax],al
   140031092:	add    BYTE PTR [rdx],al
   140031094:	add    BYTE PTR [rax],al
   140031096:	add    BYTE PTR [rdx],al
   140031098:	add    BYTE PTR [rax],al
   14003109a:	add    BYTE PTR [rdx],al
   14003109c:	add    BYTE PTR [rax],al
   14003109e:	add    BYTE PTR [rdx],al
   1400310a0:	add    BYTE PTR [rax],al
   1400310a2:	add    BYTE PTR [rdx],al
   1400310a4:	add    BYTE PTR [rax],al
   1400310a6:	add    BYTE PTR [rdx],al
   1400310a8:	add    BYTE PTR [rax],al
   1400310aa:	add    BYTE PTR [rdx],al
   1400310ac:	add    BYTE PTR [rax],al
   1400310ae:	add    BYTE PTR [rdx],al
   1400310b0:	add    BYTE PTR [rax],al
   1400310b2:	add    BYTE PTR [rdx],al
   1400310b4:	add    BYTE PTR [rax],al
   1400310b6:	add    BYTE PTR [rdx],al
   1400310b8:	add    BYTE PTR [rax],al
   1400310ba:	add    BYTE PTR [rdx],al
   1400310bc:	add    BYTE PTR [rax],al
   1400310be:	add    BYTE PTR [rdx],al
   1400310c0:	add    BYTE PTR [rax],al
   1400310c2:	add    BYTE PTR [rdx],al
   1400310c4:	add    BYTE PTR [rax],al
   1400310c6:	add    BYTE PTR [rdx],al
   1400310c8:	add    BYTE PTR [rax],al
   1400310ca:	add    BYTE PTR [rdx],al
   1400310cc:	add    BYTE PTR [rax],al
   1400310ce:	add    BYTE PTR [rdx],al
   1400310d0:	add    BYTE PTR [rax],al
   1400310d2:	add    BYTE PTR [rdx],al
   1400310d4:	add    BYTE PTR [rax],al
   1400310d6:	add    BYTE PTR [rdx],al
   1400310d8:	add    BYTE PTR [rax],al
   1400310da:	add    BYTE PTR [rdx],al
   1400310dc:	add    BYTE PTR [rax],al
   1400310de:	add    BYTE PTR [rdx],al
   1400310e0:	add    BYTE PTR [rax],al
   1400310e2:	add    BYTE PTR [rdx],al
   1400310e4:	add    BYTE PTR [rax],al
   1400310e6:	add    BYTE PTR [rdx],al
   1400310e8:	add    BYTE PTR [rax],al
   1400310ea:	add    BYTE PTR [rdx],al
   1400310ec:	add    BYTE PTR [rax],al
   1400310ee:	add    BYTE PTR [rdx],al
   1400310f0:	add    BYTE PTR [rax],al
   1400310f2:	add    BYTE PTR [rdx],al
   1400310f4:	add    BYTE PTR [rax],al
   1400310f6:	add    BYTE PTR [rdx],al
   1400310f8:	add    BYTE PTR [rax],al
   1400310fa:	add    BYTE PTR [rdx],al
   1400310fc:	add    BYTE PTR [rax],al
   1400310fe:	add    BYTE PTR [rdx],al
   140031100:	add    BYTE PTR [rax],al
   140031102:	add    BYTE PTR [rdx],al
   140031104:	add    BYTE PTR [rax],al
   140031106:	add    BYTE PTR [rdx],al
   140031108:	add    BYTE PTR [rax],al
   14003110a:	add    BYTE PTR [rdx],al
   14003110c:	add    BYTE PTR [rax],al
   14003110e:	add    BYTE PTR [rdx],al
   140031110:	add    BYTE PTR [rax],al
   140031112:	add    BYTE PTR [rdx],al
   140031114:	add    BYTE PTR [rax],al
   140031116:	add    BYTE PTR [rdx],al
   140031118:	add    BYTE PTR [rax],al
   14003111a:	add    BYTE PTR [rdx],al
   14003111c:	add    BYTE PTR [rax],al
   14003111e:	add    BYTE PTR [rdx],al
   140031120:	add    BYTE PTR [rax],al
   140031122:	add    BYTE PTR [rdx],al
   140031124:	add    BYTE PTR [rax],al
   140031126:	add    BYTE PTR [rdx],al
   140031128:	add    BYTE PTR [rax],al
   14003112a:	add    BYTE PTR [rdx],al
   14003112c:	add    BYTE PTR [rax],al
   14003112e:	add    BYTE PTR [rdx],al
   140031130:	add    BYTE PTR [rax],al
   140031132:	add    BYTE PTR [rdx],al
   140031134:	add    BYTE PTR [rax],al
   140031136:	add    BYTE PTR [rdx],al
   140031138:	add    BYTE PTR [rax],al
   14003113a:	add    BYTE PTR [rdx],al
   14003113c:	add    BYTE PTR [rax],al
   14003113e:	add    BYTE PTR [rdx],al
   140031140:	add    BYTE PTR [rax],al
   140031142:	add    BYTE PTR [rdx],al
   140031144:	add    BYTE PTR [rax],al
   140031146:	add    BYTE PTR [rdx],al
   140031148:	add    BYTE PTR [rax],al
   14003114a:	add    BYTE PTR [rdx],al
   14003114c:	add    BYTE PTR [rax],al
   14003114e:	add    BYTE PTR [rdx],al
   140031150:	add    BYTE PTR [rax],al
   140031152:	add    BYTE PTR [rdx],al
   140031154:	add    BYTE PTR [rax],al
   140031156:	add    BYTE PTR [rdx],al
   140031158:	add    BYTE PTR [rax],al
   14003115a:	add    BYTE PTR [rdx],al
   14003115c:	add    BYTE PTR [rax],al
   14003115e:	add    BYTE PTR [rdx],al
   140031160:	add    BYTE PTR [rax],al
   140031162:	add    BYTE PTR [rdx],al
   140031164:	add    BYTE PTR [rax],al
   140031166:	add    BYTE PTR [rdx],al
   140031168:	add    BYTE PTR [rax],al
   14003116a:	add    BYTE PTR [rdx],al
   14003116c:	add    BYTE PTR [rax],al
   14003116e:	add    BYTE PTR [rdx],al
   140031170:	add    BYTE PTR [rax],al
   140031172:	add    BYTE PTR [rdx],al
   140031174:	add    BYTE PTR [rax],al
   140031176:	add    BYTE PTR [rdx],al
   140031178:	add    BYTE PTR [rax],al
   14003117a:	add    BYTE PTR [rdx],al
   14003117c:	add    BYTE PTR [rax],al
   14003117e:	add    BYTE PTR [rdx],al
   140031180:	add    BYTE PTR [rax],al
   140031182:	add    BYTE PTR [rdx],al
   140031184:	add    BYTE PTR [rax],al
   140031186:	add    BYTE PTR [rdx],al
   140031188:	add    BYTE PTR [rax],al
   14003118a:	add    BYTE PTR [rdx],al
   14003118c:	add    BYTE PTR [rax],al
   14003118e:	add    BYTE PTR [rdx],al
   140031190:	add    BYTE PTR [rax],al
   140031192:	add    BYTE PTR [rdx],al
   140031194:	add    BYTE PTR [rax],al
   140031196:	add    BYTE PTR [rdx],al
   140031198:	add    BYTE PTR [rax],al
   14003119a:	add    BYTE PTR [rdx],al
   14003119c:	add    BYTE PTR [rax],al
   14003119e:	add    BYTE PTR [rdx],al
   1400311a0:	add    BYTE PTR [rax],al
   1400311a2:	add    BYTE PTR [rdx],al
   1400311a4:	add    BYTE PTR [rax],al
   1400311a6:	add    BYTE PTR [rdx],al
   1400311a8:	add    BYTE PTR [rax],al
   1400311aa:	add    BYTE PTR [rdx],al
   1400311ac:	add    BYTE PTR [rax],al
   1400311ae:	add    BYTE PTR [rcx],al
   1400311b0:	add    BYTE PTR [rax],al
   1400311b2:	add    BYTE PTR [rcx],al
   1400311b4:	add    BYTE PTR [rax],al
   1400311b6:	add    BYTE PTR [rcx],al
   1400311b8:	add    BYTE PTR [rax],al
   1400311ba:	add    BYTE PTR [rcx],al
   1400311bc:	add    BYTE PTR [rax],al
   1400311be:	add    BYTE PTR [rcx],al
	...
   1400343fc:	(bad)  
   1400343fd:	(bad)  
   1400343fe:	(bad)  
   1400343ff:	(bad)  
   140034400:	(bad)  
   140034401:	(bad)  
   140034402:	(bad)  
   140034403:	(bad)  
   140034404:	(bad)  
   140034405:	(bad)  
   140034406:	(bad)  
   140034407:	(bad)  
   140034408:	cld    
   140034409:	add    BYTE PTR [rdi-0x1],bh
   14003440c:	(bad)  
   14003440d:	(bad)  
   14003440e:	(bad)  
   14003440f:	(bad)  
   140034410:	(bad)  
   140034411:	(bad)  
   140034412:	(bad)  
   140034413:	(bad)  
   140034414:	(bad)  
   140034415:	(bad)  
   140034416:	(bad)  
   140034417:	(bad)  
   140034418:	clc    
   140034419:	add    BYTE PTR [rdi],bh
   14003441b:	(bad)  
   14003441c:	(bad)  
   14003441d:	(bad)  
   14003441e:	(bad)  
   14003441f:	(bad)  
   140034420:	(bad)  
   140034421:	(bad)  
   140034422:	(bad)  
   140034423:	(bad)  
   140034424:	(bad)  
   140034425:	(bad)  
   140034426:	(bad)  
   140034427:	(bad)  
   140034428:	clc    
   140034429:	add    BYTE PTR [rdi],bl
   14003442b:	(bad)  
   14003442c:	(bad)  
   14003442d:	(bad)  
   14003442e:	(bad)  
   14003442f:	(bad)  
   140034430:	(bad)  
   140034431:	(bad)  
   140034432:	(bad)  
   140034433:	(bad)  
   140034434:	(bad)  
   140034435:	(bad)  
   140034436:	(bad)  
   140034437:	(bad)  
   140034438:	clc    
   140034439:	add    BYTE PTR [rdi],cl
   14003443b:	(bad)  
   14003443c:	(bad)  
   14003443d:	(bad)  
   14003443e:	(bad)  
   14003443f:	(bad)  
   140034440:	(bad)  
   140034441:	(bad)  
   140034442:	(bad)  
   140034443:	(bad)  
   140034444:	(bad)  
   140034445:	(bad)  
   140034446:	(bad)  
   140034447:	push   rax
   140034449:	add    BYTE PTR [rdi],al
   14003444b:	(bad)  
   14003444c:	(bad)  
   14003444d:	(bad)  
   14003444e:	(bad)  
   14003444f:	(bad)  
   140034450:	(bad)  
   140034451:	(bad)  
   140034452:	(bad)  
   140034453:	(bad)  
   140034454:	(bad)  
   140034455:	inc    BYTE PTR [rax]
   140034457:	add    BYTE PTR [rax],al
   140034459:	add    BYTE PTR [rbx],al
   14003445b:	(bad)  
   14003445c:	(bad)  
   14003445d:	(bad)  
   14003445e:	(bad)  
   14003445f:	(bad)  
   140034460:	(bad)  
   140034461:	(bad)  
   140034462:	(bad)  
   140034463:	(bad)  
   140034464:	(bad)  
   140034465:	clc    
   140034466:	add    BYTE PTR [rax],al
   140034468:	add    BYTE PTR [rax],al
   14003446a:	add    edi,edi
   14003446c:	(bad)  
   14003446d:	(bad)  
   14003446e:	(bad)  
   14003446f:	(bad)  
   140034470:	(bad)  
   140034471:	(bad)  
   140034472:	(bad)  
   140034473:	(bad)  
   140034474:	push   rax
   140034476:	add    BYTE PTR [rax],al
   140034478:	add    BYTE PTR [rax],al
   14003447a:	add    bh,bh
   14003447c:	(bad)  
   14003447d:	(bad)  
   14003447e:	(bad)  
   14003447f:	(bad)  
   140034480:	(bad)  
   140034481:	(bad)  
   140034482:	(bad)  
   140034483:	(bad)  
   140034484:	push   rax
   140034486:	add    BYTE PTR [rax],al
   140034488:	add    BYTE PTR [rax],al
   14003448a:	add    BYTE PTR [rdi-0x1],bh
   14003448d:	(bad)  
   14003448e:	(bad)  
   14003448f:	(bad)  
   140034490:	(bad)  
   140034491:	(bad)  
   140034492:	(bad)  
   140034493:	(bad)  
   140034494:	jmp    rax
   140034496:	add    BYTE PTR [rax],al
   140034498:	add    BYTE PTR [rax],al
   14003449a:	add    BYTE PTR [rdi],bh
   14003449c:	(bad)  
   14003449d:	(bad)  
   14003449e:	(bad)  
   14003449f:	(bad)  
   1400344a0:	(bad)  
   1400344a1:	(bad)  
   1400344a2:	(bad)  
   1400344a3:	(bad)  
   1400344a4:	jmp    rax
   1400344a6:	add    BYTE PTR [rax],al
   1400344a8:	add    BYTE PTR [rax],al
   1400344aa:	add    BYTE PTR [rdi],bl
   1400344ac:	(bad)  
   1400344ad:	(bad)  
   1400344ae:	(bad)  
   1400344af:	(bad)  
   1400344b0:	(bad)  
   1400344b1:	(bad)  
   1400344b2:	(bad)  
   1400344b3:	(bad)  
   1400344b4:	jmp    rax
   1400344b6:	add    BYTE PTR [rax],al
   1400344b8:	add    BYTE PTR [rax],al
   1400344ba:	add    BYTE PTR [rdi],cl
   1400344bc:	(bad)  
   1400344bd:	(bad)  
   1400344be:	(bad)  
   1400344bf:	(bad)  
   1400344c0:	(bad)  
   1400344c1:	(bad)  
   1400344c2:	(bad)  
   1400344c3:	(bad)  
   1400344c4:	jmp    rax
   1400344c6:	add    BYTE PTR [rax],al
   1400344c8:	add    BYTE PTR [rax],al
   1400344ca:	add    BYTE PTR [rdi],al
   1400344cc:	(bad)  
   1400344cd:	(bad)  
   1400344ce:	(bad)  
   1400344cf:	(bad)  
   1400344d0:	(bad)  
   1400344d1:	(bad)  
   1400344d2:	(bad)  
   1400344d3:	(bad)  
   1400344d4:	jmp    rax
   1400344d6:	add    BYTE PTR [rax],al
   1400344d8:	add    BYTE PTR [rax],al
   1400344da:	add    BYTE PTR [rdi],al
   1400344dc:	(bad)  
   1400344dd:	(bad)  
   1400344de:	(bad)  
   1400344df:	(bad)  
   1400344e0:	(bad)  
   1400344e1:	(bad)  
   1400344e2:	(bad)  
   1400344e3:	(bad)  
   1400344e4:	inc    eax
   1400344e6:	add    BYTE PTR [rax],al
   1400344e8:	add    BYTE PTR [rax],al
   1400344ea:	add    BYTE PTR [rbx],al
   1400344ec:	(bad)  
   1400344ed:	(bad)  
   1400344ee:	(bad)  
   1400344ef:	(bad)  
   1400344f0:	(bad)  
   1400344f1:	(bad)  
   1400344f2:	(bad)  
   1400344f3:	(bad)  
   1400344f4:	inc    eax
   1400344f6:	add    BYTE PTR [rax],al
   1400344f8:	add    BYTE PTR [rax],al
   1400344fa:	add    BYTE PTR [rbx],al
   1400344fc:	(bad)  
   1400344fd:	(bad)  
   1400344fe:	(bad)  
   1400344ff:	(bad)  
   140034500:	(bad)  
   140034501:	(bad)  
   140034502:	(bad)  
   140034503:	(bad)  
   140034504:	inc    DWORD PTR [rax+0x0]
   14003450a:	add    BYTE PTR [rcx],al
   14003450c:	(bad)  
   14003450d:	(bad)  
   14003450e:	(bad)  
   14003450f:	(bad)  
   140034510:	(bad)  
   140034511:	(bad)  
   140034512:	(bad)  
   140034513:	(bad)  
   140034514:	inc    DWORD PTR [rax]
   140034516:	add    BYTE PTR [rax],al
   140034518:	add    BYTE PTR [rax],al
   14003451a:	add    BYTE PTR [rcx],al
   14003451c:	(bad)  
   14003451d:	(bad)  
   14003451e:	(bad)  
   14003451f:	(bad)  
   140034520:	(bad)  
   140034521:	(bad)  
   140034522:	(bad)  
   140034523:	(bad)  
   140034524:	inc    BYTE PTR [rax]
   140034526:	add    BYTE PTR [rax],al
   140034528:	add    BYTE PTR [rax],al
   14003452a:	add    BYTE PTR [rcx],al
   14003452c:	(bad)  
   14003452d:	(bad)  
   14003452e:	(bad)  
   14003452f:	(bad)  
   140034530:	(bad)  
   140034531:	(bad)  
   140034532:	(bad)  
   140034533:	(bad)  
   140034534:	cld    
   140034535:	add    BYTE PTR [rax],al
   140034537:	add    BYTE PTR [rax],al
   140034539:	add    BYTE PTR [rax],al
   14003453b:	add    edi,edi
   14003453d:	(bad)  
   14003453e:	(bad)  
   14003453f:	(bad)  
   140034540:	(bad)  
   140034541:	(bad)  
   140034542:	(bad)  
   140034543:	push   rax
   140034545:	add    BYTE PTR [rax],al
   140034547:	add    BYTE PTR [rax],al
   140034549:	add    BYTE PTR [rax],al
   14003454b:	add    edi,edi
   14003454d:	inc    BYTE PTR [rax]
	...
   14003455b:	add    edi,edi
   14003455d:	clc    
	...
   14003456a:	add    BYTE PTR [rdi],al
   14003456c:	push   rax
	...
   14003457a:	add    BYTE PTR [rdi],al
   14003457c:	push   rax
	...
   14003458a:	add    BYTE PTR [rdi],cl
   14003458c:	jmp    rax
	...
   14003459a:	add    BYTE PTR [rdi],bl
   14003459c:	jmp    rax
	...
   1400345aa:	add    BYTE PTR [rdi],bh
   1400345ac:	jmp    rax
	...
   1400345ba:	add    BYTE PTR [rdi-0x1],bh
   1400345bd:	loopne 0x1400345bf
	...
   1400345cb:	(bad)  
   1400345cc:	jmp    rax
	...
   1400345da:	add    edi,edi
   1400345dc:	jmp    rax
	...
   1400345ea:	add    edi,edi
   1400345ec:	jmp    rax
	...
   1400345fa:	(bad)  
   1400345fb:	(bad)  
   1400345fc:	jmp    rax
	...
   14003460a:	ud0    edi,edi
   14003460d:	loopne 0x14003460f
	...
   140034617:	add    BYTE PTR [rax],al
   140034619:	add    BYTE PTR [rdi],bl
   14003461b:	(bad)  
   14003461c:	jmp    rax
	...
   14003462a:	(bad)  
   14003462b:	(bad)  
   14003462c:	jmp    rax
	...
   14003463a:	(bad)  
   14003463b:	(bad)  
   14003463c:	jmp    rax
	...
   14003464a:	ud0    edi,edi
   14003464d:	loopne 0x14003464f
	...
   140034657:	add    BYTE PTR [rax],al
   140034659:	add    BYTE PTR [rdi],cl
   14003465b:	(bad)  
   14003465c:	jmp    rax
	...
   14003466a:	(bad)  
   14003466b:	(bad)  
   14003466c:	jmp    rax
	...
   14003467a:	(bad)  
   14003467b:	(bad)  
   14003467c:	jmp    rax
	...
   14003468a:	(bad)  
   14003468b:	(bad)  
   14003468c:	jmp    rax
	...
   14003469a:	(bad)  
   14003469b:	(bad)  
   14003469c:	jmp    rax
	...
   1400346aa:	(bad)  
   1400346ab:	(bad)  
   1400346ac:	jmp    rax
	...
   1400346ba:	(bad)  
   1400346bb:	(bad)  
   1400346bc:	jmp    rax
	...
   1400346ca:	(bad)  
   1400346cb:	(bad)  
   1400346cc:	jmp    rax
	...
   1400346da:	(bad)  
   1400346db:	(bad)  
   1400346dc:	jmp    rax
	...
   1400346ea:	(bad)  
   1400346eb:	(bad)  
   1400346ec:	jmp    rax
	...
   1400346fa:	(bad)  
   1400346fb:	(bad)  
   1400346fc:	jmp    rax
	...
   14003470a:	(bad)  
   14003470b:	(bad)  
   14003470c:	jmp    rax
	...
   14003471a:	(bad)  
   14003471b:	(bad)  
   14003471c:	jmp    rax
	...
   14003472a:	(bad)  
   14003472b:	(bad)  
   14003472c:	jmp    rax
	...
   14003473a:	(bad)  
   14003473b:	(bad)  
   14003473c:	jmp    rax
	...
   14003474a:	(bad)  
   14003474b:	(bad)  
   14003474c:	jmp    rax
	...
   14003475a:	(bad)  
   14003475b:	(bad)  
   14003475c:	jmp    rax
	...
   14003476a:	(bad)  
   14003476b:	(bad)  
   14003476c:	jmp    rax
	...
   14003477a:	(bad)  
   14003477b:	(bad)  
   14003477c:	jmp    rax
	...
   14003478a:	(bad)  
   14003478b:	(bad)  
   14003478c:	jmp    rax
	...
   14003479a:	(bad)  
   14003479b:	(bad)  
   14003479c:	jmp    rax
	...
   1400347aa:	(bad)  
   1400347ab:	(bad)  
   1400347ac:	jmp    rax
	...
   1400347ba:	(bad)  
   1400347bb:	(bad)  
   1400347bc:	jmp    rax
	...
   1400347ca:	(bad)  
   1400347cb:	(bad)  
   1400347cc:	jmp    rax
	...
   1400347da:	(bad)  
   1400347db:	(bad)  
   1400347dc:	jmp    rax
	...
   1400347ea:	(bad)  
   1400347eb:	(bad)  
   1400347ec:	jmp    rax
	...
   1400347fa:	(bad)  
   1400347fb:	(bad)  
   1400347fc:	jmp    rax
	...
   14003480a:	(bad)  
   14003480b:	(bad)  
   14003480c:	jmp    rax
	...
   14003481a:	(bad)  
   14003481b:	(bad)  
   14003481c:	jmp    rax
	...
   14003482a:	(bad)  
   14003482b:	(bad)  
   14003482c:	jmp    rax
	...
   14003483a:	(bad)  
   14003483b:	(bad)  
   14003483c:	jmp    rax
	...
   14003484a:	(bad)  
   14003484b:	(bad)  
   14003484c:	jmp    rax
	...
   14003485a:	(bad)  
   14003485b:	(bad)  
   14003485c:	jmp    rax
	...
   14003486a:	(bad)  
   14003486b:	(bad)  
   14003486c:	jmp    rax
	...
   14003487a:	(bad)  
   14003487b:	(bad)  
   14003487c:	jmp    rax
	...
   14003488a:	(bad)  
   14003488b:	(bad)  
   14003488c:	jmp    rax
	...
   14003489a:	(bad)  
   14003489b:	(bad)  
   14003489c:	jmp    rax
	...
   1400348aa:	(bad)  
   1400348ab:	(bad)  
   1400348ac:	jmp    rax
	...
   1400348ba:	(bad)  
   1400348bb:	(bad)  
   1400348bc:	jmp    rax
	...
   1400348ca:	(bad)  
   1400348cb:	(bad)  
   1400348cc:	jmp    rax
	...
   1400348da:	(bad)  
   1400348db:	(bad)  
   1400348dc:	jmp    rax
	...
   1400348ea:	(bad)  
   1400348eb:	(bad)  
   1400348ec:	jmp    rax
	...
   1400348fa:	(bad)  
   1400348fb:	(bad)  
   1400348fc:	jmp    rax
	...
   14003490a:	(bad)  
   14003490b:	(bad)  
   14003490c:	jmp    rax
	...
   14003491a:	(bad)  
   14003491b:	(bad)  
   14003491c:	jmp    rax
	...
   14003492a:	(bad)  
   14003492b:	(bad)  
   14003492c:	jmp    rax
	...
   14003493a:	(bad)  
   14003493b:	(bad)  
   14003493c:	jmp    rax
	...
   14003494a:	(bad)  
   14003494b:	(bad)  
   14003494c:	jmp    rax
	...
   14003495a:	(bad)  
   14003495b:	(bad)  
   14003495c:	push   rax
	...
   14003496a:	(bad)  
   14003496b:	(bad)  
   14003496c:	push   rax
	...
   14003497a:	(bad)  
   14003497b:	(bad)  
   14003497c:	(bad)  
   14003497d:	clc    
	...
   14003498a:	(bad)  
   14003498b:	(bad)  
   14003498c:	(bad)  
   14003498d:	cld    
	...
   14003499a:	(bad)  
   14003499b:	(bad)  
   14003499c:	(bad)  
   14003499d:	inc    BYTE PTR [rax]
	...
   1400349a7:	add    BYTE PTR [rax],al
   1400349a9:	add    BYTE PTR [rdi],al
   1400349ab:	(bad)  
   1400349ac:	(bad)  
   1400349ad:	inc    DWORD PTR [rax]
	...
   1400349b7:	add    BYTE PTR [rax],al
   1400349b9:	add    BYTE PTR [rdi],al
   1400349bb:	(bad)  
   1400349bc:	(bad)  
   1400349bd:	inc    DWORD PTR [rax+0x0]
   1400349c3:	add    BYTE PTR [rax],al
   1400349c5:	add    BYTE PTR [rax],al
   1400349c7:	add    BYTE PTR [rax],al
   1400349c9:	add    BYTE PTR [rdi],al
   1400349cb:	(bad)  
   1400349cc:	(bad)  
   1400349cd:	inc    eax
	...
   1400349d7:	add    BYTE PTR [rax],al
   1400349d9:	add    BYTE PTR [rdi],al
   1400349db:	(bad)  
   1400349dc:	(bad)  
   1400349dd:	jmp    rax
	...
   1400349e7:	add    BYTE PTR [rax],al
   1400349e9:	add    BYTE PTR [rdi],al
   1400349eb:	(bad)  
   1400349ec:	(bad)  
   1400349ed:	push   rax
	...
   1400349f7:	add    BYTE PTR [rax],al
   1400349f9:	add    BYTE PTR [rdi],al
   1400349fb:	(bad)  
   1400349fc:	(bad)  
   1400349fd:	(bad)  
   1400349fe:	clc    
	...
   140034a07:	add    BYTE PTR [rax],al
   140034a09:	add    BYTE PTR [rdi],al
   140034a0b:	(bad)  
   140034a0c:	(bad)  
   140034a0d:	(bad)  
   140034a0e:	cld    
	...
   140034a17:	add    BYTE PTR [rax],al
   140034a19:	add    BYTE PTR [rdi],al
   140034a1b:	(bad)  
   140034a1c:	(bad)  
   140034a1d:	(bad)  
   140034a1e:	inc    BYTE PTR [rax]
	...
   140034a28:	add    BYTE PTR [rax],al
   140034a2a:	(bad)  
   140034a2b:	(bad)  
   140034a2c:	(bad)  
   140034a2d:	(bad)  
   140034a2e:	inc    DWORD PTR [rax]
	...
   140034a38:	add    BYTE PTR [rax],al
   140034a3a:	ud0    edi,edi
   140034a3d:	(bad)  
   140034a3e:	inc    DWORD PTR [rax+0x0]
   140034a44:	add    BYTE PTR [rax],al
   140034a46:	add    BYTE PTR [rax],al
   140034a48:	add    BYTE PTR [rax],al
   140034a4a:	ud0    edi,edi
   140034a4d:	(bad)  
   140034a4e:	inc    eax
	...
   140034a58:	add    BYTE PTR [rax],al
   140034a5a:	(bad)  
   140034a5b:	(bad)  
   140034a5c:	(bad)  
   140034a5d:	(bad)  
   140034a5e:	push   rax
	...
   140034a68:	add    BYTE PTR [rax],al
   140034a6a:	jg     0x140034a6b
   140034a6c:	(bad)  
   140034a6d:	(bad)  
   140034a6e:	(bad)  
   140034a6f:	(bad)  
   140034a70:	(bad)  
   140034a71:	(bad)  
   140034a72:	(bad)  
   140034a73:	(bad)  
   140034a74:	(bad)  
   140034a75:	(bad)  
   140034a76:	(bad)  
   140034a77:	(bad)  
   140034a78:	(bad)  
   140034a79:	(bad)  
   140034a7a:	(bad)  
   140034a7b:	(bad)  
   140034a7c:	(bad)  
   140034a7d:	(bad)  
   140034a7e:	(bad)  
   140034a7f:	(bad)  
   140034a80:	(bad)  
   140034a81:	(bad)  
   140034a82:	(bad)  
   140034a83:	(bad)  
   140034a84:	(bad)  
   140034a85:	(bad)  
   140034a86:	(bad)  
   140034a87:	(bad)  
   140034a88:	(bad)  
   140034a89:	(bad)  
   140034a8a:	(bad)  
   140034a8b:	(bad)  
   140034a8c:	(bad)  
   140034a8d:	(bad)  
   140034a8e:	(bad)  
   140034a8f:	(bad)  
   140034a90:	(bad)  
   140034a91:	(bad)  
   140034a92:	(bad)  
   140034a93:	(bad)  
   140034a94:	(bad)  
   140034a95:	(bad)  
   140034a96:	(bad)  
   140034a97:	(bad)  
   140034a98:	(bad)  
   140034a99:	(bad)  
   140034a9a:	(bad)  
   140034a9b:	(bad)  
   140034a9c:	(bad)  
   140034a9d:	(bad)  
   140034a9e:	(bad)  
   140034a9f:	(bad)  
   140034aa0:	(bad)  
   140034aa1:	(bad)  
   140034aa2:	(bad)  
   140034aa3:	(bad)  
   140034aa4:	(bad)  
   140034aa5:	(bad)  
   140034aa6:	(bad)  
   140034aa7:	(bad)  
   140034aa8:	(bad)  
   140034aa9:	(bad)  
   140034aaa:	(bad)  
   140034aab:	(bad)  
   140034aac:	(bad)  
   140034aad:	(bad)  
   140034aae:	(bad)  
   140034aaf:	(bad)  
   140034ab0:	(bad)  
   140034ab1:	(bad)  
   140034ab2:	(bad)  
   140034ab3:	(bad)  
   140034ab4:	(bad)  
   140034ab5:	(bad)  
   140034ab6:	(bad)  
   140034ab7:	(bad)  
   140034ab8:	(bad)  
   140034ab9:	(bad)  
   140034aba:	(bad)  
   140034abb:	(bad)  
   140034abc:	(bad)  
   140034abd:	(bad)  
   140034abe:	(bad)  
   140034abf:	(bad)  
   140034ac0:	(bad)  
   140034ac1:	(bad)  
   140034ac2:	(bad)  
   140034ac3:	(bad)  
   140034ac4:	(bad)  
   140034ac5:	(bad)  
   140034ac6:	(bad)  
   140034ac7:	(bad)  
   140034ac8:	(bad)  
   140034ac9:	(bad)  
   140034aca:	(bad)  
   140034acb:	(bad)  
   140034acc:	(bad)  
   140034acd:	(bad)  
   140034ace:	(bad)  
   140034acf:	(bad)  
   140034ad0:	(bad)  
   140034ad1:	(bad)  
   140034ad2:	(bad)  
   140034ad3:	(bad)  
   140034ad4:	(bad)  
   140034ad5:	(bad)  
   140034ad6:	(bad)  
   140034ad7:	(bad)  
   140034ad8:	(bad)  
   140034ad9:	(bad)  
   140034ada:	(bad)  
   140034adb:	(bad)  
   140034adc:	(bad)  
   140034add:	(bad)  
   140034ade:	(bad)  
   140034adf:	(bad)  
   140034ae0:	(bad)  
   140034ae1:	(bad)  
   140034ae2:	(bad)  
   140034ae3:	(bad)  
   140034ae4:	(bad)  
   140034ae5:	(bad)  
   140034ae6:	(bad)  
   140034ae7:	(bad)  
   140034ae8:	(bad)  
   140034ae9:	(bad)  
   140034aea:	(bad)  
   140034aeb:	(bad)  
   140034aec:	(bad)  
   140034aed:	(bad)  
   140034aee:	(bad)  
   140034aef:	(bad)  
   140034af0:	(bad)  
   140034af1:	(bad)  
   140034af2:	(bad)  
   140034af3:	(bad)  
   140034af4:	(bad)  
   140034af5:	(bad)  
   140034af6:	(bad)  
   140034af7:	(bad)  
   140034af8:	(bad)  
   140034af9:	(bad)  
   140034afa:	(bad)  
   140034afb:	(bad)  
   140034afc:	(bad)  
   140034afd:	(bad)  
   140034afe:	(bad)  
   140034aff:	(bad)  
   140034b00:	(bad)  
   140034b01:	(bad)  
   140034b02:	(bad)  
   140034b03:	(bad)  
   140034b04:	(bad)  
   140034b05:	(bad)  
   140034b06:	(bad)  
   140034b07:	(bad)  
   140034b08:	(bad)  
   140034b09:	(bad)  
   140034b0a:	(bad)  
   140034b0b:	(bad)  
   140034b0c:	(bad)  
   140034b0d:	(bad)  
   140034b0e:	(bad)  
   140034b0f:	(bad)  
   140034b10:	(bad)  
   140034b11:	(bad)  
   140034b12:	(bad)  
   140034b13:	(bad)  
   140034b14:	(bad)  
   140034b15:	(bad)  
   140034b16:	(bad)  
   140034b17:	(bad)  
   140034b18:	(bad)  
   140034b19:	(bad)  
   140034b1a:	(bad)  
   140034b1b:	(bad)  
   140034b1c:	(bad)  
   140034b1d:	(bad)  
   140034b1e:	(bad)  
   140034b1f:	(bad)  
   140034b20:	(bad)  
   140034b21:	(bad)  
   140034b22:	(bad)  
   140034b23:	(bad)  
   140034b24:	(bad)  
   140034b25:	(bad)  
   140034b26:	(bad)  
   140034b27:	(bad)  
   140034b28:	(bad)  
   140034b29:	(bad)  
   140034b2a:	(bad)  
   140034b2b:	(bad)  
   140034b2c:	(bad)  
   140034b2d:	(bad)  
   140034b2e:	(bad)  
   140034b2f:	(bad)  
   140034b30:	(bad)  
   140034b31:	(bad)  
   140034b32:	(bad)  
   140034b33:	(bad)  
   140034b34:	(bad)  
   140034b35:	(bad)  
   140034b36:	(bad)  
   140034b37:	(bad)  
   140034b38:	(bad)  
   140034b39:	(bad)  
   140034b3a:	(bad)  
   140034b3b:	(bad)  
   140034b3c:	(bad)  
   140034b3d:	(bad)  
   140034b3e:	(bad)  
   140034b3f:	(bad)  
   140034b40:	(bad)  
   140034b41:	(bad)  
   140034b42:	(bad)  
   140034b43:	(bad)  
   140034b44:	(bad)  
   140034b45:	(bad)  
   140034b46:	(bad)  
   140034b47:	(bad)  
   140034b48:	(bad)  
   140034b49:	(bad)  
   140034b4a:	(bad)  
   140034b4b:	(bad)  
   140034b4c:	(bad)  
   140034b4d:	(bad)  
   140034b4e:	(bad)  
   140034b4f:	(bad)  
   140034b50:	(bad)  
   140034b51:	(bad)  
   140034b52:	(bad)  
   140034b53:	(bad)  
   140034b54:	(bad)  
   140034b55:	(bad)  
   140034b56:	(bad)  
   140034b57:	(bad)  
   140034b58:	(bad)  
   140034b59:	(bad)  
   140034b5a:	(bad)  
   140034b5b:	(bad)  
   140034b5c:	(bad)  
   140034b5d:	(bad)  
   140034b5e:	(bad)  
   140034b5f:	(bad)  
   140034b60:	(bad)  
   140034b61:	(bad)  
   140034b62:	(bad)  
   140034b63:	(bad)  
   140034b64:	(bad)  
   140034b65:	(bad)  
   140034b66:	(bad)  
   140034b67:	(bad)  
   140034b68:	(bad)  
   140034b69:	(bad)  
   140034b6a:	(bad)  
   140034b6b:	(bad)  
   140034b6c:	(bad)  
   140034b6d:	(bad)  
   140034b6e:	(bad)  
   140034b6f:	(bad)  
   140034b70:	(bad)  
   140034b71:	(bad)  
   140034b72:	(bad)  
   140034b73:	(bad)  
   140034b74:	(bad)  
   140034b75:	(bad)  
   140034b76:	(bad)  
   140034b77:	(bad)  
   140034b78:	(bad)  
   140034b79:	(bad)  
   140034b7a:	(bad)  
   140034b7b:	(bad)  
   140034b7c:	(bad)  
   140034b7d:	(bad)  
   140034b7e:	(bad)  
   140034b7f:	(bad)  
   140034b80:	(bad)  
   140034b81:	(bad)  
   140034b82:	(bad)  
   140034b83:	(bad)  
   140034b84:	(bad)  
   140034b85:	(bad)  
   140034b86:	(bad)  
   140034b87:	(bad)  
   140034b88:	(bad)  
   140034b89:	(bad)  
   140034b8a:	(bad)  
   140034b8b:	(bad)  
   140034b8c:	(bad)  
   140034b8d:	(bad)  
   140034b8e:	(bad)  
   140034b8f:	(bad)  
   140034b90:	(bad)  
   140034b91:	(bad)  
   140034b92:	(bad)  
   140034b93:	(bad)  
   140034b94:	(bad)  
   140034b95:	(bad)  
   140034b96:	(bad)  
   140034b97:	(bad)  
   140034b98:	(bad)  
   140034b99:	(bad)  
   140034b9a:	(bad)  
   140034b9b:	(bad)  
   140034b9c:	(bad)  
   140034b9d:	(bad)  
   140034b9e:	(bad)  
   140034b9f:	(bad)  
   140034ba0:	(bad)  
   140034ba1:	(bad)  
   140034ba2:	(bad)  
   140034ba3:	(bad)  
   140034ba4:	(bad)  
   140034ba5:	(bad)  
   140034ba6:	(bad)  
   140034ba7:	(bad)  
   140034ba8:	(bad)  
   140034ba9:	(bad)  
   140034baa:	(bad)  
   140034bab:	(bad)  
   140034bac:	(bad)  
   140034bad:	(bad)  
   140034bae:	(bad)  
   140034baf:	(bad)  
   140034bb0:	(bad)  
   140034bb1:	(bad)  
   140034bb2:	(bad)  
   140034bb3:	(bad)  
   140034bb4:	(bad)  
   140034bb5:	(bad)  
   140034bb6:	(bad)  
   140034bb7:	(bad)  
   140034bb8:	(bad)  
   140034bb9:	(bad)  
   140034bba:	(bad)  
   140034bbb:	(bad)  
   140034bbc:	(bad)  
   140034bbd:	(bad)  
   140034bbe:	(bad)  
   140034bbf:	(bad)  
   140034bc0:	(bad)  
   140034bc1:	(bad)  
   140034bc2:	(bad)  
   140034bc3:	(bad)  
   140034bc4:	(bad)  
   140034bc5:	(bad)  
   140034bc6:	(bad)  
   140034bc7:	(bad)  
   140034bc8:	(bad)  
   140034bc9:	(bad)  
   140034bca:	(bad)  
   140034bcb:	(bad)  
   140034bcc:	(bad)  
   140034bcd:	(bad)  
   140034bce:	(bad)  
   140034bcf:	(bad)  
   140034bd0:	(bad)  
   140034bd1:	(bad)  
   140034bd2:	(bad)  
   140034bd3:	(bad)  
   140034bd4:	(bad)  
   140034bd5:	(bad)  
   140034bd6:	(bad)  
   140034bd7:	(bad)  
   140034bd8:	(bad)  
   140034bd9:	(bad)  
   140034bda:	(bad)  
   140034bdb:	(bad)  
   140034bdc:	(bad)  
   140034bdd:	(bad)  
   140034bde:	(bad)  
   140034bdf:	(bad)  
   140034be0:	(bad)  
   140034be1:	(bad)  
   140034be2:	(bad)  
   140034be3:	(bad)  
   140034be4:	(bad)  
   140034be5:	(bad)  
   140034be6:	(bad)  
   140034be7:	(bad)  
   140034be8:	(bad)  
   140034be9:	(bad)  
   140034bea:	(bad)  
   140034beb:	(bad)  
   140034bec:	(bad)  
   140034bed:	(bad)  
   140034bee:	(bad)  
   140034bef:	(bad)  
   140034bf0:	(bad)  
   140034bf1:	(bad)  
   140034bf2:	(bad)  
   140034bf3:	(bad)  
   140034bf4:	(bad)  
   140034bf5:	(bad)  
   140034bf6:	(bad)  
   140034bf7:	(bad)  
   140034bf8:	(bad)  
   140034bf9:	(bad)  
   140034bfa:	(bad)  
   140034bfb:	jmp    FWORD PTR [rax]
   140034bfd:	add    BYTE PTR [rax],al
   140034bff:	add    BYTE PTR [rax+0x0],al
   140034c02:	add    BYTE PTR [rax],al
   140034c04:	add    BYTE PTR [rax],0x0
   140034c07:	add    BYTE PTR [rcx],al
   140034c09:	add    BYTE PTR [rax],ah
   140034c0b:	add    BYTE PTR [rax],al
   140034c0d:	add    BYTE PTR [rax],al
   140034c0f:	add    BYTE PTR [rax],al
   140034c11:	add    BYTE PTR [rax],al
   140034c14:	xlat   BYTE PTR ds:[rbx]
   140034c15:	or     eax,0xdd70000
	...
   140034cf2:	add    BYTE PTR [rdx],al
   140034cf4:	add    BYTE PTR [rax],al
   140034cf6:	add    BYTE PTR [rcx],cl
   140034cf8:	add    BYTE PTR [rax],al
   140034cfa:	add    BYTE PTR [rsi],cl
   140034cfc:	add    BYTE PTR [rax],al
   140034cfe:	add    BYTE PTR [rbx],cl
   140034d00:	add    BYTE PTR [rax],al
   140034d02:	add    BYTE PTR [rip+0x1000000],al        # 0x141034d08
	...
   140034dec:	add    BYTE PTR [rax],al
   140034dee:	add    BYTE PTR [rcx],al
   140034df0:	add    BYTE PTR [rax],al
   140034df2:	add    BYTE PTR [rsi],al
   140034df4:	add    BYTE PTR [rax],al
   140034df6:	add    BYTE PTR [rsi],dl
   140034df8:	and    al,0x24
   140034dfa:	and    al,0x2c
   140034dfc:	add    BYTE PTR [rax],al
   140034dfe:	add    BYTE PTR [rcx],ah
   140034e00:	add    BYTE PTR [rax],al
   140034e02:	add    BYTE PTR [rcx],dl
   140034e04:	add    BYTE PTR [rax],al
   140034e06:	add    BYTE PTR [rip+0x1000000],al        # 0x141034e0c
	...
   140034ec0:	add    BYTE PTR [rax],al
   140034ec2:	add    BYTE PTR [rcx],al
   140034ec4:	add    BYTE PTR [rax],al
   140034ec6:	add    BYTE PTR [rcx],al
   140034ec8:	add    BYTE PTR [rax],al
   140034eca:	add    BYTE PTR [rcx],al
   140034ecc:	add    BYTE PTR [rax],al
   140034ece:	add    BYTE PTR [rcx],al
   140034ed0:	add    BYTE PTR [rax],al
   140034ed2:	add    BYTE PTR [rcx],al
   140034ed4:	add    BYTE PTR [rax],al
   140034ed6:	add    BYTE PTR [rcx],al
   140034ed8:	add    BYTE PTR [rax],al
   140034eda:	add    BYTE PTR [rcx],al
   140034edc:	add    BYTE PTR [rax],al
   140034ede:	add    BYTE PTR [rcx],al
   140034ee0:	add    BYTE PTR [rax],al
   140034ee2:	add    BYTE PTR [rcx],al
   140034ee4:	add    BYTE PTR [rax],al
   140034ee6:	add    BYTE PTR [rdx],al
   140034ee8:	add    BYTE PTR [rax],al
   140034eea:	add    BYTE PTR [rdx],al
   140034eec:	add    BYTE PTR [rax],al
   140034eee:	add    BYTE PTR [rbx],al
   140034ef0:	add    BYTE PTR [rax],al
   140034ef2:	add    BYTE PTR [rbx],cl
   140034ef4:	add    BYTE PTR [rax],al
   140034ef6:	add    BYTE PTR [rsi],ah
   140034ef8:	out    0xe6,al
   140034efa:	out    0xc8,al
   140034efc:	sbb    DWORD PTR [rcx],ebx
   140034efe:	sbb    DWORD PTR [rax+0x0],ecx
   140034f01:	add    BYTE PTR [rax],al
   140034f03:	sub    DWORD PTR [rax],eax
   140034f05:	add    BYTE PTR [rax],al
   140034f07:	adc    al,BYTE PTR [rax]
   140034f09:	add    BYTE PTR [rax],al
   140034f0b:	add    eax,0x1000000
	...
   140034fbc:	add    BYTE PTR [rax],al
   140034fbe:	add    BYTE PTR [rcx],al
   140034fc0:	add    BYTE PTR [rax],al
   140034fc2:	add    BYTE PTR [rbx],al
   140034fc4:	add    BYTE PTR [rax],al
   140034fc6:	add    BYTE PTR [rsi],al
   140034fc8:	add    BYTE PTR [rax],al
   140034fca:	add    BYTE PTR [rax],cl
   140034fcc:	add    BYTE PTR [rax],al
   140034fce:	add    BYTE PTR [rcx],cl
   140034fd0:	add    BYTE PTR [rax],al
   140034fd2:	add    BYTE PTR [rcx],cl
   140034fd4:	add    BYTE PTR [rax],al
   140034fd6:	add    BYTE PTR [rcx],cl
   140034fd8:	add    BYTE PTR [rax],al
   140034fda:	add    BYTE PTR [rcx],cl
   140034fdc:	add    BYTE PTR [rax],al
   140034fde:	add    BYTE PTR [rcx],cl
   140034fe0:	add    BYTE PTR [rax],al
   140034fe2:	add    BYTE PTR [rcx],cl
   140034fe4:	add    BYTE PTR [rax],al
   140034fe6:	add    BYTE PTR [rcx],cl
   140034fe8:	add    BYTE PTR [rax],al
   140034fea:	add    BYTE PTR [rcx],cl
   140034fec:	add    BYTE PTR [rax],al
   140034fee:	add    BYTE PTR [rax+rax*1],cl
   140034ff1:	add    BYTE PTR [rax],al
   140034ff3:	adc    eax,0x34000000
   140034ff8:	(bad)  
   140034ff9:	(bad)  
   140034ffa:	(bad)  
   140034ffb:	(bad)  
   140034ffc:	fcom   st(4)
   140034ffe:	(bad)  
   140034fff:	(bad)  
   140035000:	adc    edx,DWORD PTR [rbx]
   140035002:	adc    ecx,DWORD PTR [rdi+0x0]
   140035005:	add    BYTE PTR [rax],al
   140035007:	sub    al,BYTE PTR [rax]
   140035009:	add    BYTE PTR [rax],al
   14003500b:	adc    al,BYTE PTR [rax]
   14003500d:	add    BYTE PTR [rax],al
   14003500f:	add    eax,0x1000000
	...
   1400350b8:	add    BYTE PTR [rax],al
   1400350ba:	add    BYTE PTR [rcx],al
   1400350bc:	add    BYTE PTR [rax],al
   1400350be:	add    BYTE PTR [rbx],al
   1400350c0:	add    BYTE PTR [rax],al
   1400350c2:	add    BYTE PTR [rip+0x1b000000],cl        # 0x15b0350c8
   1400350c8:	add    BYTE PTR [rax],al
   1400350ca:	add    BYTE PTR [rax+rax*1],ah
   1400350cd:	add    BYTE PTR [rax],al
   1400350cf:	add    BYTE PTR es:[rax],al
   1400350d2:	add    BYTE PTR [rsi],ah
   1400350d4:	add    BYTE PTR [rax],al
   1400350d6:	add    BYTE PTR [rsi],ah
   1400350d8:	add    BYTE PTR [rax],al
   1400350da:	add    BYTE PTR [rsi],ah
   1400350dc:	add    BYTE PTR [rax],al
   1400350de:	add    BYTE PTR [rsi],ah
   1400350e0:	add    BYTE PTR [rax],al
   1400350e2:	add    BYTE PTR [rsi],ah
   1400350e4:	add    BYTE PTR [rax],al
   1400350e6:	add    BYTE PTR [rsi],ah
   1400350e8:	add    BYTE PTR [rax],al
   1400350ea:	add    BYTE PTR [rsi],ah
   1400350ec:	add    BYTE PTR [rax],al
   1400350ee:	add    BYTE PTR [rax],ch
   1400350f0:	add    BYTE PTR [rax],al
   1400350f2:	add    BYTE PTR [rdi],ch
   1400350f4:	add    BYTE PTR [rax],al
   1400350f6:	add    BYTE PTR [rcx-0x1],cl
   1400350f9:	(bad)  
   1400350fa:	(bad)  
   1400350fb:	dec    edi
   1400350fd:	mov    ecx,0xd1d4fabc
   140035102:	rcl    edi,1
   140035104:	adc    edx,DWORD PTR [rbx]
   140035106:	adc    edx,DWORD PTR [rax+0x0]
   140035109:	add    BYTE PTR [rax],al
   14003510b:	sub    al,BYTE PTR [rax]
   14003510d:	add    BYTE PTR [rax],al
   14003510f:	adc    al,BYTE PTR [rax]
   140035111:	add    BYTE PTR [rax],al
   140035113:	add    eax,0x1000000
	...
   1400351b8:	add    BYTE PTR [rax],al
   1400351ba:	add    BYTE PTR [rcx],al
   1400351bc:	add    BYTE PTR [rax],al
   1400351be:	add    BYTE PTR [rdi],al
   1400351c0:	add    BYTE PTR [rax],al
   1400351c2:	add    BYTE PTR [rsi],bl
   1400351c4:	add    BYTE PTR [rax],al
   1400351c6:	add    BYTE PTR [rsi],bh
   1400351c8:	add    BYTE PTR [rax],al
   1400351ca:	add    BYTE PTR [rcx+0x0],dl
   1400351cd:	add    BYTE PTR [rax],al
   1400351cf:	push   rsi
   1400351d0:	add    BYTE PTR [rax],al
   1400351d2:	add    BYTE PTR [rdi+0x0],dl
   1400351d5:	add    BYTE PTR [rax],al
   1400351d7:	push   rdi
   1400351d8:	add    BYTE PTR [rax],al
   1400351da:	add    BYTE PTR [rdi+0x0],dl
   1400351dd:	add    BYTE PTR [rax],al
   1400351df:	push   rdi
   1400351e0:	add    BYTE PTR [rax],al
   1400351e2:	add    BYTE PTR [rdi+0x0],dl
   1400351e5:	add    BYTE PTR [rax],al
   1400351e7:	push   rdi
   1400351e8:	add    BYTE PTR [rax],al
   1400351ea:	add    BYTE PTR [rdi+0x0],dl
   1400351ed:	add    BYTE PTR [rax],al
   1400351ef:	push   rdi
   1400351f0:	add    BYTE PTR [rax],al
   1400351f2:	add    BYTE PTR [rbx+0x0],bl
   1400351f5:	add    BYTE PTR [rax],al
   1400351f7:	imul   edi,edi,0x64ffffff
   1400351fd:	(bad)  
   1400351fe:	and    bh,bh
   140035200:	(bad)  
   140035201:	mov    eax,0xd5d9fbbb
   140035206:	(bad)  
   140035207:	ficom  DWORD PTR [rsi]
   140035209:	(bad)  
   14003520a:	(bad)  
   14003520b:	push   rax
   14003520c:	add    BYTE PTR [rax],al
   14003520e:	add    BYTE PTR [rdx],ch
   140035210:	add    BYTE PTR [rax],al
   140035212:	add    BYTE PTR [rdx],dl
   140035214:	add    BYTE PTR [rax],al
   140035216:	add    BYTE PTR [rip+0x1000000],al        # 0x14103521c
	...
   1400352b8:	add    BYTE PTR [rax],al
   1400352ba:	add    BYTE PTR [rdx],al
   1400352bc:	add    BYTE PTR [rax],al
   1400352be:	add    BYTE PTR [rax+rax*1],cl
   1400352c1:	add    BYTE PTR [rax],al
   1400352c3:	sub    eax,0xffffffff
   1400352c8:	(bad)  
   1400352c9:	(bad)  
   1400352ca:	(bad)  
   1400352cb:	(bad)  
   1400352cc:	(bad)  
   1400352cd:	(bad)  
   1400352ce:	(bad)  
   1400352cf:	(bad)  
   1400352d0:	(bad)  
   1400352d1:	(bad)  
   1400352d2:	(bad)  
   1400352d3:	(bad)  
   1400352d4:	(bad)  
   1400352d5:	(bad)  
   1400352d6:	(bad)  
   1400352d7:	(bad)  
   1400352d8:	(bad)  
   1400352d9:	(bad)  
   1400352da:	(bad)  
   1400352db:	(bad)  
   1400352dc:	(bad)  
   1400352dd:	(bad)  
   1400352de:	(bad)  
   1400352df:	(bad)  
   1400352e0:	(bad)  
   1400352e1:	(bad)  
   1400352e2:	(bad)  
   1400352e3:	(bad)  
   1400352e4:	(bad)  
   1400352e5:	(bad)  
   1400352e6:	(bad)  
   1400352e7:	(bad)  
   1400352e8:	(bad)  
   1400352e9:	(bad)  
   1400352ea:	(bad)  
   1400352eb:	(bad)  
   1400352ec:	(bad)  
   1400352ed:	(bad)  
   1400352ee:	(bad)  
   1400352ef:	(bad)  
   1400352f0:	(bad)  
   1400352f1:	(bad)  
   1400352f2:	(bad)  
   1400352f3:	(bad)  
   1400352f4:	(bad)  
   1400352f5:	(bad)  
   1400352f6:	(bad)  
   1400352f7:	(bad)  
   1400352f8:	(bad)  
   1400352f9:	(bad)  
   1400352fa:	(bad)  
   1400352fb:	jmp    QWORD PTR [rcx+0x12]
   1400352fe:	(bad)  
   1400352ff:	jmp    QWORD PTR [rbp+0x18]
   140035302:	and    edi,edi
   140035304:	(bad)  
   140035305:	mov    ecx,0xd3d6fabc
   14003530a:	rcl    edi,cl
   14003530c:	adc    edx,DWORD PTR [rbx]
   14003530e:	adc    edx,DWORD PTR [rax+0x0]
   140035311:	add    BYTE PTR [rax],al
   140035313:	sub    al,BYTE PTR [rax]
   140035315:	add    BYTE PTR [rax],al
   140035317:	adc    DWORD PTR [rax],eax
   140035319:	add    BYTE PTR [rax],al
   14003531b:	add    eax,0x1000000
	...
   1400353b8:	add    BYTE PTR [rax],al
   1400353ba:	add    BYTE PTR [rdx],al
   1400353bc:	add    BYTE PTR [rax],al
   1400353be:	add    BYTE PTR [rdi],cl
   1400353c0:	add    BYTE PTR [rax],al
   1400353c2:	add    BYTE PTR [rip+0xffffffffffffffff],dh        # 0x1400353c7
   1400353c8:	(bad)  
   1400353c9:	adc    bl,BYTE PTR [rsi]
   1400353cb:	jmp    QWORD PTR [rcx+0x12]
   1400353ce:	(bad)  
   1400353cf:	jmp    QWORD PTR [rcx+0x12]
   1400353d2:	(bad)  
   1400353d3:	jmp    QWORD PTR [rcx+0x12]
   1400353d6:	(bad)  
   1400353d7:	jmp    QWORD PTR [rcx+0x12]
   1400353da:	(bad)  
   1400353db:	jmp    QWORD PTR [rcx+0x12]
   1400353de:	(bad)  
   1400353df:	jmp    QWORD PTR [rcx+0x12]
   1400353e2:	(bad)  
   1400353e3:	jmp    QWORD PTR [rcx+0x12]
   1400353e6:	(bad)  
   1400353e7:	jmp    QWORD PTR [rcx+0x12]
   1400353ea:	(bad)  
   1400353eb:	jmp    QWORD PTR [rcx+0x12]
   1400353ee:	(bad)  
   1400353ef:	jmp    QWORD PTR [rcx+0x12]
   1400353f2:	(bad)  
   1400353f3:	jmp    QWORD PTR [rcx+0x12]
   1400353f6:	(bad)  
   1400353f7:	jmp    QWORD PTR [rcx+0x12]
   1400353fa:	(bad)  
   1400353fb:	jmp    QWORD PTR [rcx+0x12]
   1400353fe:	(bad)  
   1400353ff:	jmp    QWORD PTR [rcx+0x12]
   140035402:	(bad)  
   140035403:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   140035407:	dec    esi
   140035409:	mov    eax,0xd5d9fbbb
   14003540e:	(bad)  
   14003540f:	ficom  DWORD PTR [rsi]
   140035411:	(bad)  
   140035412:	(bad)  
   140035413:	push   rax
   140035414:	add    BYTE PTR [rax],al
   140035416:	add    BYTE PTR [rax],ch
   140035418:	add    BYTE PTR [rax],al
   14003541a:	add    BYTE PTR [rsi],cl
   14003541c:	add    BYTE PTR [rax],al
   14003541e:	add    BYTE PTR [rbx],al
	...
   1400354b4:	add    BYTE PTR [rax],al
   1400354b6:	add    BYTE PTR [rdx],al
   1400354b8:	add    BYTE PTR [rax],al
   1400354ba:	add    BYTE PTR [rdi],al
   1400354bc:	add    BYTE PTR [rax],al
   1400354be:	add    BYTE PTR [rax],bl
   1400354c0:	add    BYTE PTR [rax],al
   1400354c2:	add    BYTE PTR [rax-0x1],al
   1400354c5:	(bad)  
   1400354c6:	(bad)  
   1400354c7:	jmp    QWORD PTR [rcx+0x12]
   1400354ca:	(bad)  
   1400354cb:	jmp    QWORD PTR [rcx+0x12]
   1400354ce:	(bad)  
   1400354cf:	jmp    QWORD PTR [rcx+0x12]
   1400354d2:	(bad)  
   1400354d3:	dec    DWORD PTR [rbp-0x2000a2ac]
   1400354d9:	rcl    dl,1
   1400354db:	(bad)  
   1400354dc:	stc    
   1400354dd:	div    dh
   1400354df:	(bad)  
   1400354e0:	fcmovne st,st(1)
   1400354e2:	int3   
   1400354e3:	inc    DWORD PTR [rdx-0xb2bd]
   1400354e9:	(bad)  
   1400354ea:	(bad)  
   1400354eb:	(bad)  
   1400354ec:	(bad)  
   1400354ed:	(bad)  
   1400354ee:	(bad)  
   1400354ef:	jmp    QWORD PTR [rcx+0x12]
   1400354f2:	(bad)  
   1400354f3:	jmp    QWORD PTR [rcx+0x12]
   1400354f6:	(bad)  
   1400354f7:	jmp    QWORD PTR [rcx+0x12]
   1400354fa:	(bad)  
   1400354fb:	jmp    QWORD PTR [rcx+0x12]
   1400354fe:	(bad)  
   1400354ff:	jmp    QWORD PTR [rcx+0x12]
   140035502:	(bad)  
   140035503:	jmp    QWORD PTR [rcx+0x12]
   140035506:	(bad)  
   140035507:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   14003550b:	dec    esi
   14003550d:	mov    eax,0xd6dafbbb
   140035512:	(bad)  
   140035513:	fstp   DWORD PTR [rdx]
   140035515:	sbb    bl,BYTE PTR [rdx]
   140035517:	add    BYTE PTR [r8],r8b
   14003551a:	add    BYTE PTR [rdx],bl
   14003551c:	add    BYTE PTR [rax],al
   14003551e:	add    BYTE PTR [rsi],al
   140035520:	add    BYTE PTR [rax],al
   140035522:	add    BYTE PTR [rcx],al
	...
   1400355b0:	add    BYTE PTR [rax],al
   1400355b2:	add    BYTE PTR [rdx],al
   1400355b4:	add    BYTE PTR [rax],al
   1400355b6:	add    BYTE PTR [rip+0x12000000],al        # 0x1520355bc
   1400355bc:	add    BYTE PTR [rax],al
   1400355be:	add    BYTE PTR [rdi+rcx*1],ch
   1400355c1:	(bad)  
   1400355c2:	xorps  xmm7,xmm7
   1400355c5:	(bad)  
   1400355c6:	(bad)  
   1400355c7:	jmp    QWORD PTR [rcx+0x12]
   1400355ca:	(bad)  
   1400355cb:	jmp    QWORD PTR [rcx+0x12]
   1400355ce:	(bad)  
   1400355cf:	dec    DWORD PTR [rsi-0x100a1aa]
   1400355d5:	(bad)  
   1400355d6:	(bad)  
   1400355d7:	(bad)  
   1400355d8:	(bad)  
   1400355d9:	(bad)  
   1400355da:	(bad)  
   1400355db:	(bad)  
   1400355dc:	fmulp  st(5),st
   1400355de:	iret   
   1400355df:	(bad)  
   1400355e0:	fcmovb st,st(7)
   1400355e2:	retf   0xf7ff
   1400355e5:	repz hlt 
   1400355e7:	(bad)  
   1400355e8:	(bad)  
   1400355e9:	(bad)  
   1400355ea:	(bad)  
   1400355eb:	(bad)  
   1400355ec:	(bad)  
   1400355ed:	(bad)  
   1400355ee:	(bad)  
   1400355ef:	jmp    QWORD PTR [rcx+0x12]
   1400355f2:	(bad)  
   1400355f3:	jmp    QWORD PTR [rcx+0x12]
   1400355f6:	(bad)  
   1400355f7:	jmp    QWORD PTR [rcx+0x12]
   1400355fa:	(bad)  
   1400355fb:	jmp    QWORD PTR [rcx+0x12]
   1400355fe:	(bad)  
   1400355ff:	jmp    QWORD PTR [rcx+0x12]
   140035602:	(bad)  
   140035603:	jmp    QWORD PTR [rcx+0x12]
   140035606:	(bad)  
   140035607:	jmp    QWORD PTR [rcx+0x12]
   14003560a:	(bad)  
   14003560b:	jmp    QWORD PTR [rbp+0x18]
   14003560e:	and    edi,edi
   140035610:	iret   
   140035611:	mov    ecx,0xdbdefabc
   140035616:	fcmovne st,st(6)
   140035618:	sub    ebp,DWORD PTR [rbx]
   14003561a:	sub    esp,DWORD PTR [rax+rax*1]
   14003561d:	add    BYTE PTR [rax],al
   14003561f:	(bad)  
   140035620:	add    BYTE PTR [rax],al
   140035622:	add    BYTE PTR [rcx],al
	...
   140035640:	add    BYTE PTR [rax],al
   140035642:	add    BYTE PTR [rcx],al
   140035644:	add    BYTE PTR [rax],al
   140035646:	add    BYTE PTR [rcx],al
   140035648:	add    BYTE PTR [rax],al
   14003564a:	add    BYTE PTR [rcx],al
   14003564c:	add    BYTE PTR [rax],al
   14003564e:	add    BYTE PTR [rcx],al
   140035650:	add    BYTE PTR [rax],al
   140035652:	add    BYTE PTR [rcx],al
   140035654:	add    BYTE PTR [rax],al
   140035656:	add    BYTE PTR [rcx],al
   140035658:	add    BYTE PTR [rax],al
   14003565a:	add    BYTE PTR [rcx],al
   14003565c:	add    BYTE PTR [rax],al
   14003565e:	add    BYTE PTR [rcx],al
   140035660:	add    BYTE PTR [rax],al
   140035662:	add    BYTE PTR [rcx],al
   140035664:	add    BYTE PTR [rax],al
   140035666:	add    BYTE PTR [rcx],al
   140035668:	add    BYTE PTR [rax],al
   14003566a:	add    BYTE PTR [rcx],al
   14003566c:	add    BYTE PTR [rax],al
   14003566e:	add    BYTE PTR [rcx],al
   140035670:	add    BYTE PTR [rax],al
   140035672:	add    BYTE PTR [rcx],al
   140035674:	add    BYTE PTR [rax],al
   140035676:	add    BYTE PTR [rcx],al
   140035678:	add    BYTE PTR [rax],al
   14003567a:	add    BYTE PTR [rcx],al
   14003567c:	add    BYTE PTR [rax],al
   14003567e:	add    BYTE PTR [rcx],al
   140035680:	add    BYTE PTR [rax],al
   140035682:	add    BYTE PTR [rcx],al
   140035684:	add    BYTE PTR [rax],al
   140035686:	add    BYTE PTR [rcx],al
   140035688:	add    BYTE PTR [rax],al
   14003568a:	add    BYTE PTR [rcx],al
   14003568c:	add    BYTE PTR [rax],al
   14003568e:	add    BYTE PTR [rcx],al
   140035690:	add    BYTE PTR [rax],al
   140035692:	add    BYTE PTR [rcx],al
   140035694:	add    BYTE PTR [rax],al
   140035696:	add    BYTE PTR [rcx],al
   140035698:	add    BYTE PTR [rax],al
   14003569a:	add    BYTE PTR [rcx],al
   14003569c:	add    BYTE PTR [rax],al
   14003569e:	add    BYTE PTR [rcx],al
   1400356a0:	add    BYTE PTR [rax],al
   1400356a2:	add    BYTE PTR [rcx],al
   1400356a4:	add    BYTE PTR [rax],al
   1400356a6:	add    BYTE PTR [rdx],al
   1400356a8:	add    BYTE PTR [rax],al
   1400356aa:	add    BYTE PTR [rdx],al
   1400356ac:	add    BYTE PTR [rax],al
   1400356ae:	add    BYTE PTR [rdx],al
   1400356b0:	add    BYTE PTR [rax],al
   1400356b2:	add    BYTE PTR [rsi],al
   1400356b4:	add    BYTE PTR [rax],al
   1400356b6:	add    BYTE PTR [rdx],dl
   1400356b8:	add    BYTE PTR [rax],al
   1400356ba:	add    BYTE PTR [rdx],ch
   1400356bc:	adc    edx,DWORD PTR [rbx]
   1400356be:	adc    edx,DWORD PTR [rax-0x2e]
   1400356c1:	(bad)  
   1400356c2:	rcl    bh,1
   1400356c4:	(bad)  
   1400356c5:	(bad)  
   1400356c6:	(bad)  
   1400356c7:	jmp    QWORD PTR [rcx+0x12]
   1400356ca:	(bad)  
   1400356cb:	jmp    QWORD PTR [rcx+0x12]
   1400356ce:	(bad)  
   1400356cf:	call   rsi
   1400356d1:	ret    0xffc5
   1400356d4:	(bad)  
   1400356d5:	(bad)  
   1400356d6:	(bad)  
   1400356d7:	inc    esp
   1400356d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400356da:	stos   BYTE PTR es:[rdi],al
   1400356db:	jmp    QWORD PTR [rcx+0x12]
   1400356de:	(bad)  
   1400356df:	jmp    QWORD PTR [rcx+0x12]
   1400356e2:	(bad)  
   1400356e3:	(bad)  
   1400356e4:	mov    esp,0xffffa09b
   1400356e9:	(bad)  
   1400356ea:	(bad)  
   1400356eb:	(bad)  
   1400356ec:	(bad)  
   1400356ed:	(bad)  
   1400356ee:	(bad)  
   1400356ef:	jmp    QWORD PTR [rcx+0x12]
   1400356f2:	(bad)  
   1400356f3:	jmp    QWORD PTR [rcx+0x12]
   1400356f6:	(bad)  
   1400356f7:	jmp    QWORD PTR [rcx+0x12]
   1400356fa:	(bad)  
   1400356fb:	jmp    QWORD PTR [rcx+0x12]
   1400356fe:	(bad)  
   1400356ff:	jmp    QWORD PTR [rcx+0x12]
   140035702:	(bad)  
   140035703:	jmp    QWORD PTR [rcx+0x12]
   140035706:	(bad)  
   140035707:	jmp    QWORD PTR [rcx+0x12]
   14003570a:	(bad)  
   14003570b:	jmp    QWORD PTR [rbp+0x18]
   14003570e:	and    edi,edi
   140035710:	sar    BYTE PTR [rdx-0x201d0543],1
   140035716:	(bad)  
   140035718:	ss ss ss sbb eax,0x5000000
	...
   14003573c:	add    BYTE PTR [rax],al
   14003573e:	add    BYTE PTR [rcx],al
   140035740:	add    BYTE PTR [rax],al
   140035742:	add    BYTE PTR [rbx],al
   140035744:	add    BYTE PTR [rax],al
   140035746:	add    BYTE PTR [rsi],al
   140035748:	add    BYTE PTR [rax],al
   14003574a:	add    BYTE PTR [rax],cl
   14003574c:	add    BYTE PTR [rax],al
   14003574e:	add    BYTE PTR [rcx],cl
   140035750:	add    BYTE PTR [rax],al
   140035752:	add    BYTE PTR [rcx],cl
   140035754:	add    BYTE PTR [rax],al
   140035756:	add    BYTE PTR [rcx],cl
   140035758:	add    BYTE PTR [rax],al
   14003575a:	add    BYTE PTR [rcx],cl
   14003575c:	add    BYTE PTR [rax],al
   14003575e:	add    BYTE PTR [rcx],cl
   140035760:	add    BYTE PTR [rax],al
   140035762:	add    BYTE PTR [rcx],cl
   140035764:	add    BYTE PTR [rax],al
   140035766:	add    BYTE PTR [rcx],cl
   140035768:	add    BYTE PTR [rax],al
   14003576a:	add    BYTE PTR [rcx],cl
   14003576c:	add    BYTE PTR [rax],al
   14003576e:	add    BYTE PTR [rcx],cl
   140035770:	add    BYTE PTR [rax],al
   140035772:	add    BYTE PTR [rcx],cl
   140035774:	add    BYTE PTR [rax],al
   140035776:	add    BYTE PTR [rcx],cl
   140035778:	add    BYTE PTR [rax],al
   14003577a:	add    BYTE PTR [rcx],cl
   14003577c:	add    BYTE PTR [rax],al
   14003577e:	add    BYTE PTR [rcx],cl
   140035780:	add    BYTE PTR [rax],al
   140035782:	add    BYTE PTR [rcx],cl
   140035784:	add    BYTE PTR [rax],al
   140035786:	add    BYTE PTR [rcx],cl
   140035788:	add    BYTE PTR [rax],al
   14003578a:	add    BYTE PTR [rcx],cl
   14003578c:	add    BYTE PTR [rax],al
   14003578e:	add    BYTE PTR [rcx],cl
   140035790:	add    BYTE PTR [rax],al
   140035792:	add    BYTE PTR [rcx],cl
   140035794:	add    BYTE PTR [rax],al
   140035796:	add    BYTE PTR [rcx],cl
   140035798:	add    BYTE PTR [rax],al
   14003579a:	add    BYTE PTR [rcx],cl
   14003579c:	add    BYTE PTR [rax],al
   14003579e:	add    BYTE PTR [rcx],cl
   1400357a0:	add    BYTE PTR [rax],al
   1400357a2:	add    BYTE PTR [rcx],cl
   1400357a4:	add    BYTE PTR [rax],al
   1400357a6:	add    BYTE PTR [rcx],cl
   1400357a8:	add    BYTE PTR [rax],al
   1400357aa:	add    BYTE PTR [rdx],cl
   1400357ac:	add    BYTE PTR [rax],al
   1400357ae:	add    BYTE PTR [rax+rax*1],cl
   1400357b1:	add    BYTE PTR [rax],al
   1400357b3:	adc    eax,0x2b000000
   1400357b8:	adc    edx,DWORD PTR [rbx]
   1400357ba:	adc    ecx,DWORD PTR [rdi-0x2c]
   1400357bd:	(bad)  
   1400357be:	rcl    dh,cl
   1400357c0:	mov    esi,0xfff9b5cd
   1400357c5:	(bad)  
   1400357c6:	(bad)  
   1400357c7:	jmp    QWORD PTR [rcx+0x12]
   1400357ca:	(bad)  
   1400357cb:	jmp    QWORD PTR [rcx+0x12]
   1400357ce:	(bad)  
   1400357cf:	push   rcx
   1400357d1:	(bad)  
   1400357d2:	jmp    0x1400357d3
   1400357d4:	(bad)  
   1400357d5:	(bad)  
   1400357d6:	(bad)  
   1400357d7:	dec    DWORD PTR [rsi+0x61ff5e55]
   1400357dd:	adc    bl,BYTE PTR [rsi]
   1400357df:	jmp    QWORD PTR [rcx+0x12]
   1400357e2:	(bad)  
   1400357e3:	inc    DWORD PTR [rsi-0xacb6]
   1400357e9:	(bad)  
   1400357ea:	(bad)  
   1400357eb:	(bad)  
   1400357ec:	(bad)  
   1400357ed:	(bad)  
   1400357ee:	(bad)  
   1400357ef:	jmp    QWORD PTR [rcx+0x12]
   1400357f2:	(bad)  
   1400357f3:	jmp    QWORD PTR [rcx+0x12]
   1400357f6:	(bad)  
   1400357f7:	jmp    QWORD PTR [rcx+0x12]
   1400357fa:	(bad)  
   1400357fb:	jmp    QWORD PTR [rcx+0x12]
   1400357fe:	(bad)  
   1400357ff:	jmp    QWORD PTR [rcx+0x12]
   140035802:	(bad)  
   140035803:	jmp    QWORD PTR [rcx+0x12]
   140035806:	(bad)  
   140035807:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   14003580b:	dec    edi
   14003580d:	mov    ecx,0xdfe3fabc
   140035812:	(bad)  
   140035814:	sub    eax,0x272d2d
   140035819:	add    BYTE PTR [rax],al
   14003581b:	or     eax,DWORD PTR [rax]
   14003581d:	add    BYTE PTR [rax],al
   14003581f:	add    al,BYTE PTR [rax]
	...
   140035839:	add    BYTE PTR [rax],al
   14003583b:	add    DWORD PTR [rax],eax
   14003583d:	add    BYTE PTR [rax],al
   14003583f:	add    eax,DWORD PTR [rax]
   140035841:	add    BYTE PTR [rax],al
   140035843:	or     eax,0x1b000000
   140035848:	add    BYTE PTR [rax],al
   14003584a:	add    BYTE PTR [rax+rax*1],ah
   14003584d:	add    BYTE PTR [rax],al
   14003584f:	add    BYTE PTR es:[rax],al
   140035852:	add    BYTE PTR [rsi],ah
   140035854:	add    BYTE PTR [rax],al
   140035856:	add    BYTE PTR [rsi],ah
   140035858:	add    BYTE PTR [rax],al
   14003585a:	add    BYTE PTR [rsi],ah
   14003585c:	add    BYTE PTR [rax],al
   14003585e:	add    BYTE PTR [rsi],ah
   140035860:	add    BYTE PTR [rax],al
   140035862:	add    BYTE PTR [rsi],ah
   140035864:	add    BYTE PTR [rax],al
   140035866:	add    BYTE PTR [rsi],ah
   140035868:	add    BYTE PTR [rax],al
   14003586a:	add    BYTE PTR [rsi],ah
   14003586c:	add    BYTE PTR [rax],al
   14003586e:	add    BYTE PTR [rsi],ah
   140035870:	add    BYTE PTR [rax],al
   140035872:	add    BYTE PTR [rsi],ah
   140035874:	add    BYTE PTR [rax],al
   140035876:	add    BYTE PTR [rsi],ah
   140035878:	add    BYTE PTR [rax],al
   14003587a:	add    BYTE PTR [rsi],ah
   14003587c:	add    BYTE PTR [rax],al
   14003587e:	add    BYTE PTR [rsi],ah
   140035880:	add    BYTE PTR [rax],al
   140035882:	add    BYTE PTR [rsi],ah
   140035884:	add    BYTE PTR [rax],al
   140035886:	add    BYTE PTR [rsi],ah
   140035888:	add    BYTE PTR [rax],al
   14003588a:	add    BYTE PTR [rsi],ah
   14003588c:	add    BYTE PTR [rax],al
   14003588e:	add    BYTE PTR [rsi],ah
   140035890:	add    BYTE PTR [rax],al
   140035892:	add    BYTE PTR [rsi],ah
   140035894:	add    BYTE PTR [rax],al
   140035896:	add    BYTE PTR [rsi],ah
   140035898:	add    BYTE PTR [rax],al
   14003589a:	add    BYTE PTR [rsi],ah
   14003589c:	add    BYTE PTR [rax],al
   14003589e:	add    BYTE PTR [rsi],ah
   1400358a0:	add    BYTE PTR [rax],al
   1400358a2:	add    BYTE PTR [rsi],ah
   1400358a4:	add    BYTE PTR [rax],al
   1400358a6:	add    BYTE PTR [rsi],ah
   1400358a8:	add    BYTE PTR [rax],al
   1400358aa:	add    BYTE PTR [rdi],ah
   1400358ac:	add    BYTE PTR [rax],al
   1400358ae:	add    BYTE PTR [rdx],ch
   1400358b0:	add    BYTE PTR [rax],al
   1400358b2:	add    BYTE PTR [rsi],dh
   1400358b4:	adc    BYTE PTR [rax],dl
   1400358b6:	adc    BYTE PTR [rbx-0x2d],dl
   1400358b9:	(bad)  
   1400358ba:	rcl    dh,cl
   1400358bc:	ret    
   1400358bd:	sar    BYTE PTR [rcx+0xc622ffa],1
   1400358c3:	(bad)  
   1400358c4:	(bad)  
   1400358c5:	(bad)  
   1400358c6:	(bad)  
   1400358c7:	jmp    QWORD PTR [rcx+0x12]
   1400358ca:	(bad)  
   1400358cb:	jmp    QWORD PTR [rcx+0x12]
   1400358ce:	(bad)  
   1400358cf:	push   rsi
   1400358d1:	repnz repz (bad) 
   1400358d4:	(bad)  
   1400358d5:	(bad)  
   1400358d6:	(bad)  
   1400358d7:	dec    DWORD PTR [rcx+0x61ff564d]
   1400358dd:	adc    bl,BYTE PTR [rsi]
   1400358df:	jmp    QWORD PTR [rcx+0x12]
   1400358e2:	(bad)  
   1400358e3:	inc    DWORD PTR [rdx-0xb2bd]
   1400358e9:	(bad)  
   1400358ea:	(bad)  
   1400358eb:	(bad)  
   1400358ec:	(bad)  
   1400358ed:	(bad)  
   1400358ee:	(bad)  
   1400358ef:	jmp    QWORD PTR [rcx+0x12]
   1400358f2:	(bad)  
   1400358f3:	jmp    QWORD PTR [rcx+0x12]
   1400358f6:	(bad)  
   1400358f7:	jmp    QWORD PTR [rcx+0x12]
   1400358fa:	(bad)  
   1400358fb:	jmp    QWORD PTR [rcx+0x12]
   1400358fe:	(bad)  
   1400358ff:	jmp    QWORD PTR [rcx+0x12]
   140035902:	(bad)  
   140035903:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   140035907:	dec    edi
   140035909:	mov    ecx,0xdfe3fabc
   14003590e:	(bad)  
   140035910:	sub    al,0x2c
   140035912:	sub    al,0x28
   140035914:	add    BYTE PTR [rax],al
   140035916:	add    BYTE PTR [rip+0x3000000],cl        # 0x14303591c
	...
   140035938:	add    BYTE PTR [rax],al
   14003593a:	add    BYTE PTR [rcx],al
   14003593c:	add    BYTE PTR [rax],al
   14003593e:	add    BYTE PTR [rdi],al
   140035940:	add    BYTE PTR [rax],al
   140035942:	add    BYTE PTR [rsi],bl
   140035944:	add    BYTE PTR [rax],al
   140035946:	add    BYTE PTR [rsi],bh
   140035948:	add    BYTE PTR [rax],al
   14003594a:	add    BYTE PTR [rcx+0x0],dl
   14003594d:	add    BYTE PTR [rax],al
   14003594f:	push   rsi
   140035950:	add    BYTE PTR [rax],al
   140035952:	add    BYTE PTR [rdi+0x0],dl
   140035955:	add    BYTE PTR [rax],al
   140035957:	push   rdi
   140035958:	add    BYTE PTR [rax],al
   14003595a:	add    BYTE PTR [rdi+0x0],dl
   14003595d:	add    BYTE PTR [rax],al
   14003595f:	push   rdi
   140035960:	add    BYTE PTR [rax],al
   140035962:	add    BYTE PTR [rdi+0x0],dl
   140035965:	add    BYTE PTR [rax],al
   140035967:	push   rdi
   140035968:	add    BYTE PTR [rax],al
   14003596a:	add    BYTE PTR [rdi+0x0],dl
   14003596d:	add    BYTE PTR [rax],al
   14003596f:	push   rdi
   140035970:	add    BYTE PTR [rax],al
   140035972:	add    BYTE PTR [rdi+0x0],dl
   140035975:	add    BYTE PTR [rax],al
   140035977:	push   rdi
   140035978:	add    BYTE PTR [rax],al
   14003597a:	add    BYTE PTR [rdi+0x0],dl
   14003597d:	add    BYTE PTR [rax],al
   14003597f:	push   rdi
   140035980:	add    BYTE PTR [rax],al
   140035982:	add    BYTE PTR [rdi+0x0],dl
   140035985:	add    BYTE PTR [rax],al
   140035987:	push   rdi
   140035988:	add    BYTE PTR [rax],al
   14003598a:	add    BYTE PTR [rdi+0x0],dl
   14003598d:	add    BYTE PTR [rax],al
   14003598f:	push   rdi
   140035990:	add    BYTE PTR [rax],al
   140035992:	add    BYTE PTR [rdi+0x0],dl
   140035995:	add    BYTE PTR [rax],al
   140035997:	push   rdi
   140035998:	add    BYTE PTR [rax],al
   14003599a:	add    BYTE PTR [rdi+0x0],dl
   14003599d:	add    BYTE PTR [rax],al
   14003599f:	push   rdi
   1400359a0:	add    BYTE PTR [rax],al
   1400359a2:	add    BYTE PTR [rdi+0x0],dl
   1400359a5:	add    BYTE PTR [rax],al
   1400359a7:	push   rdi
   1400359a8:	add    BYTE PTR [rax],al
   1400359aa:	add    BYTE PTR [rdi+0x0],dl
   1400359ad:	add    BYTE PTR [rax],al
   1400359af:	pop    rcx
   1400359b0:	(bad)  
   1400359b1:	(bad)  
   1400359b2:	pcmpgtw mm2,mm1
   1400359b5:	(bad)  
   1400359b6:	iret   
   1400359b7:	fdivr  DWORD PTR [rdi+0x2efab5cd]
   1400359bd:	(bad)  
   1400359be:	or     edi,edi
   1400359c0:	sub    DWORD PTR [rsi+0x5],ebx
   1400359c3:	(bad)  
   1400359c4:	(bad)  
   1400359c5:	(bad)  
   1400359c6:	(bad)  
   1400359c7:	(bad)  
   1400359c8:	(bad)  
   1400359c9:	(bad)  
   1400359ca:	(bad)  
   1400359cb:	(bad)  
   1400359cc:	(bad)  
   1400359cd:	(bad)  
   1400359ce:	(bad)  
   1400359cf:	(bad)  
   1400359d0:	(bad)  
   1400359d1:	(bad)  
   1400359d2:	(bad)  
   1400359d3:	(bad)  
   1400359d4:	(bad)  
   1400359d5:	(bad)  
   1400359d6:	(bad)  
   1400359d7:	(bad)  
   1400359d8:	(bad)  
   1400359d9:	(bad)  
   1400359da:	(bad)  
   1400359db:	(bad)  
   1400359dc:	(bad)  
   1400359dd:	(bad)  
   1400359de:	(bad)  
   1400359df:	(bad)  
   1400359e0:	(bad)  
   1400359e1:	(bad)  
   1400359e2:	(bad)  
   1400359e3:	(bad)  
   1400359e4:	(bad)  
   1400359e5:	(bad)  
   1400359e6:	(bad)  
   1400359e7:	(bad)  
   1400359e8:	(bad)  
   1400359e9:	(bad)  
   1400359ea:	(bad)  
   1400359eb:	(bad)  
   1400359ec:	(bad)  
   1400359ed:	(bad)  
   1400359ee:	(bad)  
   1400359ef:	(bad)  
   1400359f0:	(bad)  
   1400359f1:	(bad)  
   1400359f2:	(bad)  
   1400359f3:	(bad)  
   1400359f4:	(bad)  
   1400359f5:	(bad)  
   1400359f6:	(bad)  
   1400359f7:	(bad)  
   1400359f8:	(bad)  
   1400359f9:	(bad)  
   1400359fa:	(bad)  
   1400359fb:	jmp    QWORD PTR [rcx+0x12]
   1400359fe:	(bad)  
   1400359ff:	jmp    QWORD PTR [rbp+0x18]
   140035a02:	and    edi,edi
   140035a04:	(bad)  
   140035a05:	mov    edx,0xdee2f9bd
   140035a0a:	fmulp  st(4),st
   140035a0c:	es es es (bad) 
   140035a10:	add    BYTE PTR [rax],al
   140035a12:	add    BYTE PTR [rip+0x3000000],cl        # 0x143035a18
	...
   140035a38:	add    BYTE PTR [rax],al
   140035a3a:	add    BYTE PTR [rcx],al
   140035a3c:	add    BYTE PTR [rax],al
   140035a3e:	add    BYTE PTR [rbx],cl
   140035a40:	add    BYTE PTR [rax],al
   140035a42:	add    BYTE PTR [rip+0xffffffffff41cd52],ch        # 0x13f45279a
   140035a48:	push   rdx
   140035a49:	int    0x41
   140035a4b:	call   QWORD PTR [rdx-0x33]
   140035a4e:	call   QWORD PTR [r10-0x33]
   140035a52:	call   QWORD PTR [r10-0x33]
   140035a56:	call   QWORD PTR [r10-0x33]
   140035a5a:	call   QWORD PTR [r10-0x33]
   140035a5e:	call   QWORD PTR [r10-0x33]
   140035a62:	call   QWORD PTR [r10-0x33]
   140035a66:	call   QWORD PTR [r10-0x33]
   140035a6a:	call   QWORD PTR [r10-0x33]
   140035a6e:	call   QWORD PTR [r10-0x33]
   140035a72:	call   QWORD PTR [r10-0x33]
   140035a76:	call   QWORD PTR [r10-0x33]
   140035a7a:	call   QWORD PTR [r10-0x33]
   140035a7e:	call   QWORD PTR [r10-0x33]
   140035a82:	call   QWORD PTR [r10-0x33]
   140035a86:	call   QWORD PTR [r10-0x33]
   140035a8a:	call   QWORD PTR [r10-0x33]
   140035a8e:	call   QWORD PTR [r10-0x33]
   140035a92:	call   QWORD PTR [r10-0x33]
   140035a96:	call   QWORD PTR [r10-0x33]
   140035a9a:	call   QWORD PTR [r10-0x33]
   140035a9e:	call   QWORD PTR [r10-0x33]
   140035aa2:	call   QWORD PTR [r10-0x33]
   140035aa6:	call   QWORD PTR [r10-0x33]
   140035aaa:	call   QWORD PTR [r13-0x32]
   140035aae:	rex.RB inc r15d
   140035ab1:	jmp    0x140035a74
   140035ab3:	inc    ebx
   140035ab5:	(bad)  
   140035ab6:	mov    ecx,0xc622fff
   140035abb:	jmp    FWORD PTR [rcx]
   140035abd:	pop    rsi
   140035abe:	add    eax,0x55e29ff
   140035ac3:	jmp    FWORD PTR [rcx]
   140035ac5:	pop    rsi
   140035ac6:	add    eax,0x55e29ff
   140035acb:	jmp    FWORD PTR [rcx]
   140035acd:	pop    rsi
   140035ace:	add    eax,0x79a88cff
   140035ad3:	(bad)  
   140035ad4:	(bad)  
   140035ad5:	(bad)  
   140035ad6:	(bad)  
   140035ad7:	(bad)  
   140035ad8:	clc    
   140035ad9:	cli    
   140035ada:	idiv   edi
   140035adc:	(bad)  
   140035add:	mov    bl,0x89
   140035adf:	call   QWORD PTR [rsi-0xa007b50]
   140035ae5:	div    ebx
   140035ae7:	(bad)  
   140035ae8:	(bad)  
   140035ae9:	(bad)  
   140035aea:	(bad)  
   140035aeb:	(bad)  
   140035aec:	(bad)  
   140035aed:	(bad)  
   140035aee:	(bad)  
   140035aef:	jmp    FWORD PTR [rcx]
   140035af1:	pop    rsi
   140035af2:	add    eax,0x55e29ff
   140035af7:	(bad)  
   140035af8:	(bad)  
   140035af9:	(bad)  
   140035afa:	(bad)  
   140035afb:	jmp    QWORD PTR [rdi+rdx*1+0x22]
   140035aff:	dec    edi
   140035b01:	mov    ecx,0xdfe3fabc
   140035b06:	(bad)  
   140035b08:	sub    al,0x2c
   140035b0a:	sub    al,0x28
   140035b0c:	add    BYTE PTR [rax],al
   140035b0e:	add    BYTE PTR [rip+0x3000000],cl        # 0x143035b14
	...
   140035b38:	add    BYTE PTR [rax],al
   140035b3a:	add    BYTE PTR [rcx],al
   140035b3c:	add    BYTE PTR [rax],al
   140035b3e:	add    BYTE PTR [rip+0x32000000],cl        # 0x172035b44
   140035b44:	push   rdx
   140035b45:	int    0x41
   140035b47:	call   QWORD PTR [rdx-0x33]
   140035b4a:	call   QWORD PTR [r10-0x33]
   140035b4e:	call   QWORD PTR [r10-0x33]
   140035b52:	call   QWORD PTR [r10-0x33]
   140035b56:	call   QWORD PTR [r10-0x33]
   140035b5a:	call   QWORD PTR [r10-0x33]
   140035b5e:	call   QWORD PTR [r10-0x33]
   140035b62:	call   QWORD PTR [r10-0x33]
   140035b66:	call   QWORD PTR [r10-0x33]
   140035b6a:	call   QWORD PTR [r10-0x33]
   140035b6e:	call   QWORD PTR [r10-0x33]
   140035b72:	call   QWORD PTR [r10-0x33]
   140035b76:	call   QWORD PTR [r10-0x33]
   140035b7a:	call   QWORD PTR [r10-0x33]
   140035b7e:	call   QWORD PTR [r10-0x33]
   140035b82:	call   QWORD PTR [r10-0x33]
   140035b86:	call   QWORD PTR [r10-0x33]
   140035b8a:	call   QWORD PTR [r10-0x33]
   140035b8e:	call   QWORD PTR [r10-0x33]
   140035b92:	call   QWORD PTR [r10-0x33]
   140035b96:	call   QWORD PTR [r10-0x33]
   140035b9a:	call   QWORD PTR [r10-0x33]
   140035b9e:	call   QWORD PTR [r10-0x33]
   140035ba2:	call   QWORD PTR [r10-0x33]
   140035ba6:	call   QWORD PTR [r13-0x32]
   140035baa:	rex.RB inc r15d
   140035bad:	jmp    0x140035b70
   140035baf:	inc    ebx
   140035bb1:	(bad)  
   140035bb2:	mov    ecx,0xc622fff
   140035bb7:	jmp    FWORD PTR [rcx]
   140035bb9:	pop    rsi
   140035bba:	add    eax,0x55e29ff
   140035bbf:	jmp    FWORD PTR [rcx]
   140035bc1:	pop    rsi
   140035bc2:	add    eax,0x55e29ff
   140035bc7:	jmp    FWORD PTR [rcx]
   140035bc9:	pop    rsi
   140035bca:	add    eax,0x55e29ff
   140035bcf:	jmp    FWORD PTR [rax+riz*2]
   140035bd2:	or     bh,bh
   140035bd4:	cdq    
   140035bd5:	mov    bl,0x88
   140035bd7:	(bad)  
   140035bd8:	sti    
   140035bd9:	cld    
   140035bda:	cli    
   140035bdb:	(bad)  
   140035bdc:	(bad)  
   140035bdd:	(bad)  
   140035bde:	(bad)  
   140035bdf:	push   rdi
   140035be1:	stc    
   140035be2:	idiv   bh
   140035be4:	xchg   ebp,eax
   140035be5:	scas   eax,DWORD PTR es:[rdi]
   140035be6:	cmp    edi,0xffffffff
   140035be9:	(bad)  
   140035bea:	(bad)  
   140035beb:	(bad)  
   140035bec:	(bad)  
   140035bed:	(bad)  
   140035bee:	(bad)  
   140035bef:	jmp    FWORD PTR [rcx]
   140035bf1:	pop    rsi
   140035bf2:	add    eax,0x55e29ff
   140035bf7:	(bad)  
   140035bf8:	(bad)  
   140035bf9:	(bad)  
   140035bfa:	(bad)  
   140035bfb:	dec    edi
   140035bfd:	mov    edx,0xdce0fabd
   140035c02:	fmul   st(5),st
   140035c04:	es es sub BYTE PTR es:[rax],al
   140035c09:	add    BYTE PTR [rax],al
   140035c0b:	or     eax,0x3000000
	...
   140035c38:	add    BYTE PTR [rax],al
   140035c3a:	add    BYTE PTR [rcx],al
   140035c3c:	add    BYTE PTR [rax],al
   140035c3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174035c44
   140035c44:	push   rdx
   140035c45:	int    0x41
   140035c47:	call   QWORD PTR [rdx-0x33]
   140035c4a:	call   QWORD PTR [r10-0x33]
   140035c4e:	call   QWORD PTR [r10-0x33]
   140035c52:	call   QWORD PTR [r10-0x33]
   140035c56:	call   QWORD PTR [r10-0x33]
   140035c5a:	call   QWORD PTR [r10-0x33]
   140035c5e:	call   QWORD PTR [r10-0x33]
   140035c62:	call   QWORD PTR [r10-0x33]
   140035c66:	call   QWORD PTR [r10-0x33]
   140035c6a:	call   QWORD PTR [r10-0x33]
   140035c6e:	call   QWORD PTR [r10-0x33]
   140035c72:	call   QWORD PTR [r10-0x33]
   140035c76:	call   QWORD PTR [r10-0x33]
   140035c7a:	call   QWORD PTR [r10-0x33]
   140035c7e:	call   QWORD PTR [r10-0x33]
   140035c82:	call   QWORD PTR [r10-0x33]
   140035c86:	call   QWORD PTR [r10-0x33]
   140035c8a:	call   QWORD PTR [r10-0x33]
   140035c8e:	call   QWORD PTR [r10-0x33]
   140035c92:	call   QWORD PTR [r10-0x33]
   140035c96:	call   QWORD PTR [r10-0x33]
   140035c9a:	call   QWORD PTR [r10-0x33]
   140035c9e:	call   QWORD PTR [r10-0x33]
   140035ca2:	call   QWORD PTR [r14-0x32]
   140035ca6:	rex.RB dec r8d
   140035ca9:	jmp    0x140035c6d
   140035cab:	(bad)  
   140035cac:	mov    edi,0x2effb4d1
   140035cb1:	(bad)  
   140035cb2:	or     edi,edi
   140035cb4:	sub    DWORD PTR [rsi+0x5],ebx
   140035cb7:	jmp    FWORD PTR [rcx]
   140035cb9:	pop    rsi
   140035cba:	add    eax,0x55e29ff
   140035cbf:	jmp    FWORD PTR [rcx]
   140035cc1:	pop    rsi
   140035cc2:	add    eax,0x55e29ff
   140035cc7:	jmp    FWORD PTR [rcx]
   140035cc9:	pop    rsi
   140035cca:	add    eax,0x55e29ff
   140035ccf:	jmp    FWORD PTR [rcx]
   140035cd1:	pop    rsi
   140035cd2:	add    eax,0x55e29ff
   140035cd7:	push   QWORD PTR [rax]
   140035cd9:	movsxd ecx,DWORD PTR [rip+0x2a7649ff]        # 0x16a79a6de
   140035cdf:	jmp    FWORD PTR [rip+0x29ff0a61]        # 0x16a026746
   140035ce5:	pop    rsi
   140035ce6:	add    eax,0xffffffff
   140035ceb:	(bad)  
   140035cec:	(bad)  
   140035ced:	(bad)  
   140035cee:	(bad)  
   140035cef:	jmp    FWORD PTR [rcx]
   140035cf1:	pop    rsi
   140035cf2:	add    eax,0x55e29ff
   140035cf7:	(bad)  
   140035cf8:	(bad)  
   140035cf9:	(bad)  
   140035cfa:	(bad)  
   140035cfb:	(bad)  
   140035cfc:	(bad)  
   140035cfe:	fnop   
   140035d00:	and    ah,BYTE PTR [rdx]
   140035d02:	and    ch,BYTE PTR [rip+0xe000000]        # 0x14e035d08
   140035d08:	add    BYTE PTR [rax],al
   140035d0a:	add    BYTE PTR [rax+rax*1],al
	...
   140035d39:	add    BYTE PTR [rax],al
   140035d3b:	add    DWORD PTR [rax],eax
   140035d3d:	add    BYTE PTR [rax],al
   140035d3f:	or     eax,0x34000000
   140035d44:	push   rdx
   140035d45:	int    0x41
   140035d47:	call   QWORD PTR [rdx-0x33]
   140035d4a:	call   QWORD PTR [r10-0x33]
   140035d4e:	call   QWORD PTR [r10-0x33]
   140035d52:	call   QWORD PTR [r10-0x33]
   140035d56:	call   QWORD PTR [r10-0x33]
   140035d5a:	call   QWORD PTR [r10-0x33]
   140035d5e:	call   QWORD PTR [r10-0x33]
   140035d62:	call   QWORD PTR [r10-0x33]
   140035d66:	call   QWORD PTR [r10-0x33]
   140035d6a:	call   QWORD PTR [r10-0x33]
   140035d6e:	call   QWORD PTR [r10-0x33]
   140035d72:	call   QWORD PTR [r10-0x33]
   140035d76:	call   QWORD PTR [r10-0x33]
   140035d7a:	call   QWORD PTR [r10-0x33]
   140035d7e:	call   QWORD PTR [r10-0x33]
   140035d82:	call   QWORD PTR [r10-0x33]
   140035d86:	call   QWORD PTR [r10-0x33]
   140035d8a:	call   QWORD PTR [r10-0x33]
   140035d8e:	call   QWORD PTR [r10-0x33]
   140035d92:	call   QWORD PTR [r10-0x33]
   140035d96:	call   QWORD PTR [r10-0x33]
   140035d9a:	jmp    QWORD PTR [r13-0x2e]
   140035d9e:	push   rsi
   140035d9f:	call   QWORD PTR [rdx-0x33]
   140035da2:	call   QWORD PTR [r14-0x32]
   140035da6:	rex.RB dec r8d
   140035da9:	jmp    0x140035d6d
   140035dab:	(bad)  
   140035dac:	mov    edi,0x2effb4d1
   140035db1:	(bad)  
   140035db2:	or     edi,edi
   140035db4:	sub    DWORD PTR [rsi+0x5],ebx
   140035db7:	jmp    FWORD PTR [rcx]
   140035db9:	pop    rsi
   140035dba:	add    eax,0x55e29ff
   140035dbf:	jmp    FWORD PTR [rcx]
   140035dc1:	pop    rsi
   140035dc2:	add    eax,0x55e29ff
   140035dc7:	jmp    FWORD PTR [rcx]
   140035dc9:	pop    rsi
   140035dca:	add    eax,0x55e29ff
   140035dcf:	jmp    FWORD PTR [rcx]
   140035dd1:	pop    rsi
   140035dd2:	add    eax,0x55e29ff
   140035dd7:	jmp    FWORD PTR [rcx]
   140035dd9:	pop    rsi
   140035dda:	add    eax,0x55e29ff
   140035ddf:	jmp    FWORD PTR [rcx]
   140035de1:	pop    rsi
   140035de2:	add    eax,0x55e29ff
   140035de7:	(bad)  
   140035de8:	(bad)  
   140035de9:	(bad)  
   140035dea:	(bad)  
   140035deb:	(bad)  
   140035dec:	(bad)  
   140035ded:	(bad)  
   140035dee:	(bad)  
   140035def:	jmp    FWORD PTR [rcx]
   140035df1:	pop    rsi
   140035df2:	add    eax,0x55e29ff
   140035df7:	(bad)  
   140035df8:	(bad)  
   140035df9:	(bad)  
   140035dfa:	(bad)  
   140035dfb:	call   FWORD PTR [rax]
   140035dfd:	sbb    BYTE PTR [rax],bl
   140035dff:	rex.WX add BYTE PTR [rax],al
   140035e02:	add    BYTE PTR [rax+rax*1],bl
   140035e05:	add    BYTE PTR [rax],al
   140035e07:	or     BYTE PTR [rax],al
   140035e09:	add    BYTE PTR [rax],al
   140035e0b:	add    DWORD PTR [rax],eax
	...
   140035e39:	add    BYTE PTR [rax],al
   140035e3b:	add    DWORD PTR [rax],eax
   140035e3d:	add    BYTE PTR [rax],al
   140035e3f:	or     eax,0x34000000
   140035e44:	push   rdx
   140035e45:	int    0x41
   140035e47:	call   QWORD PTR [rdx-0x33]
   140035e4a:	call   QWORD PTR [r10-0x33]
   140035e4e:	call   QWORD PTR [r10-0x33]
   140035e52:	call   QWORD PTR [r10-0x33]
   140035e56:	call   QWORD PTR [r10-0x33]
   140035e5a:	call   QWORD PTR [r10-0x33]
   140035e5e:	call   QWORD PTR [r10-0x33]
   140035e62:	call   QWORD PTR [r10-0x33]
   140035e66:	call   QWORD PTR [r10-0x33]
   140035e6a:	call   QWORD PTR [r10-0x33]
   140035e6e:	call   QWORD PTR [r10-0x33]
   140035e72:	call   QWORD PTR [r10-0x33]
   140035e76:	call   QWORD PTR [r10-0x33]
   140035e7a:	call   QWORD PTR [r10-0x33]
   140035e7e:	call   QWORD PTR [r10-0x33]
   140035e82:	call   QWORD PTR [r10-0x33]
   140035e86:	call   QWORD PTR [r10-0x33]
   140035e8a:	call   QWORD PTR [r10-0x33]
   140035e8e:	call   QWORD PTR [r10-0x33]
   140035e92:	call   QWORD PTR [r10-0x33]
   140035e96:	jmp    QWORD PTR [r10-0x2e]
   140035e9a:	push   rbx
   140035e9b:	push   rbp
   140035e9d:	cld    
   140035e9e:	hlt    
   140035e9f:	(bad)  
   140035ea0:	fdivrp st(5),st
   140035ea2:	(bad)  
   140035ea4:	xchg   edx,eax
   140035ea5:	fild   WORD PTR [rdi+0x47cf57ff]
   140035eab:	inc    edi
   140035ead:	jmp    0x140035e70
   140035eaf:	inc    ebx
   140035eb1:	(bad)  
   140035eb2:	mov    ecx,0xc622fff
   140035eb7:	jmp    FWORD PTR [rcx]
   140035eb9:	pop    rsi
   140035eba:	add    eax,0x55e29ff
   140035ebf:	jmp    FWORD PTR [rcx]
   140035ec1:	pop    rsi
   140035ec2:	add    eax,0x55e29ff
   140035ec7:	jmp    FWORD PTR [rcx]
   140035ec9:	pop    rsi
   140035eca:	add    eax,0x55e29ff
   140035ecf:	jmp    FWORD PTR [rcx]
   140035ed1:	pop    rsi
   140035ed2:	add    eax,0x55e29ff
   140035ed7:	jmp    FWORD PTR [rcx]
   140035ed9:	pop    rsi
   140035eda:	add    eax,0x55e29ff
   140035edf:	jmp    FWORD PTR [rcx]
   140035ee1:	pop    rsi
   140035ee2:	add    eax,0x55e29ff
   140035ee7:	(bad)  
   140035ee8:	(bad)  
   140035ee9:	(bad)  
   140035eea:	(bad)  
   140035eeb:	(bad)  
   140035eec:	(bad)  
   140035eed:	(bad)  
   140035eee:	(bad)  
   140035eef:	jmp    FWORD PTR [rcx]
   140035ef1:	pop    rsi
   140035ef2:	add    eax,0x55e29ff
   140035ef7:	(bad)  
   140035ef8:	(bad)  
   140035ef9:	(bad)  
   140035efa:	(bad)  
   140035efb:	inc    DWORD PTR [rax]
   140035efd:	add    BYTE PTR [rax],al
   140035eff:	rex.WRXB add BYTE PTR [r8],r8b
   140035f02:	add    BYTE PTR [rdi],ah
   140035f04:	add    BYTE PTR [rax],al
   140035f06:	add    BYTE PTR [rip+0x3000000],cl        # 0x143035f0c
	...
   140035f38:	add    BYTE PTR [rax],al
   140035f3a:	add    BYTE PTR [rcx],al
   140035f3c:	add    BYTE PTR [rax],al
   140035f3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174035f44
   140035f44:	push   rdx
   140035f45:	int    0x41
   140035f47:	call   QWORD PTR [rdx-0x33]
   140035f4a:	call   QWORD PTR [r10-0x33]
   140035f4e:	call   QWORD PTR [r10-0x33]
   140035f52:	call   QWORD PTR [r10-0x33]
   140035f56:	call   QWORD PTR [r10-0x33]
   140035f5a:	call   QWORD PTR [r10-0x33]
   140035f5e:	call   QWORD PTR [r10-0x33]
   140035f62:	call   QWORD PTR [r10-0x33]
   140035f66:	call   QWORD PTR [r10-0x33]
   140035f6a:	call   QWORD PTR [r10-0x33]
   140035f6e:	call   QWORD PTR [r10-0x33]
   140035f72:	call   QWORD PTR [r10-0x33]
   140035f76:	call   QWORD PTR [r10-0x33]
   140035f7a:	call   QWORD PTR [r10-0x33]
   140035f7e:	call   QWORD PTR [r10-0x33]
   140035f82:	call   QWORD PTR [r10-0x33]
   140035f86:	call   QWORD PTR [r10-0x33]
   140035f8a:	call   QWORD PTR [r10-0x33]
   140035f8e:	call   QWORD PTR [r10-0x33]
   140035f92:	call   QWORD PTR [r10-0x33]
   140035f96:	inc    r11d
   140035f99:	out    dx,al
   140035f9a:	mov    ebp,0xffffffff
   140035f9f:	(bad)  
   140035fa0:	(bad)  
   140035fa1:	(bad)  
   140035fa2:	(bad)  
   140035fa3:	(bad)  
   140035fa4:	(bad)  
   140035fa5:	(bad)  
   140035fa6:	(bad)  
   140035fa7:	dec    DWORD PTR [rax+0x55ff7cdc]
   140035fad:	(bad)  
   140035fae:	rex.RB inc r15d
   140035fb1:	jmp    0x140035f74
   140035fb3:	inc    ebx
   140035fb5:	(bad)  
   140035fb6:	mov    ecx,0xc622fff
   140035fbb:	jmp    FWORD PTR [rcx]
   140035fbd:	pop    rsi
   140035fbe:	add    eax,0x55e29ff
   140035fc3:	jmp    FWORD PTR [rcx]
   140035fc5:	pop    rsi
   140035fc6:	add    eax,0x55e29ff
   140035fcb:	jmp    FWORD PTR [rcx]
   140035fcd:	pop    rsi
   140035fce:	add    eax,0x55e29ff
   140035fd3:	jmp    FWORD PTR [rcx]
   140035fd5:	pop    rsi
   140035fd6:	add    eax,0x55e29ff
   140035fdb:	jmp    FWORD PTR [rcx]
   140035fdd:	pop    rsi
   140035fde:	add    eax,0x55e29ff
   140035fe3:	jmp    FWORD PTR [rcx]
   140035fe5:	pop    rsi
   140035fe6:	add    eax,0x55e29ff
   140035feb:	jmp    FWORD PTR [rcx]
   140035fed:	pop    rsi
   140035fee:	add    eax,0x55e29ff
   140035ff3:	jmp    FWORD PTR [rcx]
   140035ff5:	pop    rsi
   140035ff6:	add    eax,0xffffffff
   140035ffb:	(bad)  
   140035ffc:	cmp    dl,BYTE PTR [rdx+0xb32d]
   140036002:	add    BYTE PTR [rdi],bh
   140036004:	add    BYTE PTR [rax],al
   140036006:	add    BYTE PTR [rdx],bl
   140036008:	add    BYTE PTR [rax],al
   14003600a:	add    BYTE PTR [rsi],al
   14003600c:	add    BYTE PTR [rax],al
   14003600e:	add    BYTE PTR [rcx],al
	...
   140036038:	add    BYTE PTR [rax],al
   14003603a:	add    BYTE PTR [rcx],al
   14003603c:	add    BYTE PTR [rax],al
   14003603e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036044
   140036044:	push   rdx
   140036045:	int    0x41
   140036047:	call   QWORD PTR [rdx-0x33]
   14003604a:	call   QWORD PTR [r10-0x33]
   14003604e:	call   QWORD PTR [r10-0x33]
   140036052:	call   QWORD PTR [r10-0x33]
   140036056:	call   QWORD PTR [r10-0x33]
   14003605a:	call   QWORD PTR [r10-0x33]
   14003605e:	call   QWORD PTR [r10-0x33]
   140036062:	call   QWORD PTR [r10-0x33]
   140036066:	call   QWORD PTR [r10-0x33]
   14003606a:	call   QWORD PTR [r10-0x33]
   14003606e:	call   QWORD PTR [r10-0x33]
   140036072:	call   QWORD PTR [r10-0x33]
   140036076:	call   QWORD PTR [r10-0x33]
   14003607a:	call   QWORD PTR [r10-0x33]
   14003607e:	call   QWORD PTR [r10-0x33]
   140036082:	call   QWORD PTR [r10-0x33]
   140036086:	call   QWORD PTR [r10-0x33]
   14003608a:	call   QWORD PTR [r10-0x33]
   14003608e:	call   QWORD PTR [r10-0x33]
   140036092:	rex.B (bad) 
   140036094:	jge    0x14003606f
   140036096:	jo     0x140036097
   140036098:	(bad)  
   140036099:	(bad)  
   14003609a:	(bad)  
   14003609b:	(bad)  
   14003609c:	(bad)  
   14003609d:	(bad)  
   14003609e:	(bad)  
   14003609f:	(bad)  
   1400360a0:	(bad)  
   1400360a1:	(bad)  
   1400360a2:	(bad)  
   1400360a3:	call   rsp
   1400360a5:	repnz iret 
   1400360a7:	call   QWORD PTR [rbx-0x33]
   1400360aa:	rex.X call QWORD PTR [rdx-0x33]
   1400360ae:	call   QWORD PTR [r14-0x32]
   1400360b2:	rex.RB dec r8d
   1400360b5:	jmp    0x140036079
   1400360b7:	(bad)  
   1400360b8:	mov    esi,0x2effb4d1
   1400360bd:	(bad)  
   1400360be:	or     edi,edi
   1400360c0:	sub    DWORD PTR [rsi+0x5],ebx
   1400360c3:	(bad)  
   1400360c4:	(bad)  
   1400360c5:	(bad)  
   1400360c6:	(bad)  
   1400360c7:	(bad)  
   1400360c8:	(bad)  
   1400360c9:	(bad)  
   1400360ca:	(bad)  
   1400360cb:	(bad)  
   1400360cc:	(bad)  
   1400360cd:	(bad)  
   1400360ce:	(bad)  
   1400360cf:	(bad)  
   1400360d0:	(bad)  
   1400360d1:	(bad)  
   1400360d2:	(bad)  
   1400360d3:	(bad)  
   1400360d4:	(bad)  
   1400360d5:	(bad)  
   1400360d6:	(bad)  
   1400360d7:	(bad)  
   1400360d8:	(bad)  
   1400360d9:	(bad)  
   1400360da:	(bad)  
   1400360db:	(bad)  
   1400360dc:	(bad)  
   1400360dd:	(bad)  
   1400360de:	(bad)  
   1400360df:	(bad)  
   1400360e0:	(bad)  
   1400360e1:	(bad)  
   1400360e2:	(bad)  
   1400360e3:	(bad)  
   1400360e4:	(bad)  
   1400360e5:	(bad)  
   1400360e6:	(bad)  
   1400360e7:	(bad)  
   1400360e8:	(bad)  
   1400360e9:	(bad)  
   1400360ea:	(bad)  
   1400360eb:	(bad)  
   1400360ec:	(bad)  
   1400360ed:	(bad)  
   1400360ee:	(bad)  
   1400360ef:	(bad)  
   1400360f0:	(bad)  
   1400360f1:	(bad)  
   1400360f2:	(bad)  
   1400360f3:	(bad)  
   1400360f4:	(bad)  
   1400360f5:	(bad)  
   1400360f6:	(bad)  
   1400360f7:	(bad)  
   1400360f8:	(bad)  
   1400360f9:	(bad)  
   1400360fa:	(bad)  
   1400360fb:	call   QWORD PTR [rdx-0x33]
   1400360fe:	rex.B (bad) 
   140036100:	ds cdq 
   140036102:	(bad)  
   140036103:	stos   DWORD PTR es:[rdi],eax
   140036104:	add    BYTE PTR [rax],al
   140036106:	add    BYTE PTR [rdi],ah
   140036108:	add    BYTE PTR [rax],al
   14003610a:	add    BYTE PTR [rdx],cl
   14003610c:	add    BYTE PTR [rax],al
   14003610e:	add    BYTE PTR [rcx],al
	...
   140036138:	add    BYTE PTR [rax],al
   14003613a:	add    BYTE PTR [rcx],al
   14003613c:	add    BYTE PTR [rax],al
   14003613e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036144
   140036144:	push   rdx
   140036145:	int    0x41
   140036147:	call   QWORD PTR [rdx-0x33]
   14003614a:	call   QWORD PTR [r10-0x33]
   14003614e:	call   QWORD PTR [r10-0x33]
   140036152:	call   QWORD PTR [r10-0x33]
   140036156:	call   QWORD PTR [r10-0x33]
   14003615a:	call   QWORD PTR [r10-0x33]
   14003615e:	call   QWORD PTR [r10-0x33]
   140036162:	call   QWORD PTR [r10-0x33]
   140036166:	call   QWORD PTR [r10-0x33]
   14003616a:	call   QWORD PTR [r10-0x33]
   14003616e:	call   QWORD PTR [r10-0x33]
   140036172:	call   QWORD PTR [r10-0x33]
   140036176:	call   QWORD PTR [r10-0x33]
   14003617a:	call   QWORD PTR [r10-0x33]
   14003617e:	call   QWORD PTR [r10-0x33]
   140036182:	call   QWORD PTR [r10-0x33]
   140036186:	call   QWORD PTR [r10-0x33]
   14003618a:	call   QWORD PTR [r10-0x33]
   14003618e:	call   QWORD PTR [r14-0x32]
   140036192:	rex.RB jmp r12
   140036195:	mul    ecx
   140036197:	(bad)  
   140036198:	(bad)  
   140036199:	(bad)  
   14003619a:	(bad)  
   14003619b:	(bad)  
   14003619c:	(bad)  
   14003619d:	(bad)  
   14003619e:	(bad)  
   14003619f:	(bad)  
   1400361a0:	cli    
   1400361a1:	(bad)  
   1400361a2:	cli    
   1400361a3:	jmp    FWORD PTR [rbp+rdx*8+0x5e]
   1400361a7:	call   QWORD PTR [rdx-0x33]
   1400361aa:	call   QWORD PTR [r10-0x33]
   1400361ae:	call   QWORD PTR [r10-0x33]
   1400361b2:	call   QWORD PTR [r13-0x32]
   1400361b6:	rex.RB inc r15d
   1400361b9:	jmp    0x14003617c
   1400361bb:	inc    ebx
   1400361bd:	(bad)  
   1400361be:	mov    ecx,0xc622fff
   1400361c3:	(bad)  
   1400361c4:	(bad)  
   1400361c5:	(bad)  
   1400361c6:	(bad)  
   1400361c7:	call   QWORD PTR [rdx-0x33]
   1400361ca:	call   QWORD PTR [r10-0x33]
   1400361ce:	call   QWORD PTR [r10-0x33]
   1400361d2:	call   QWORD PTR [r10-0x33]
   1400361d6:	call   QWORD PTR [r10-0x33]
   1400361da:	call   QWORD PTR [r10-0x33]
   1400361de:	call   QWORD PTR [r10-0x33]
   1400361e2:	call   QWORD PTR [r10-0x33]
   1400361e6:	call   QWORD PTR [r10-0x33]
   1400361ea:	call   QWORD PTR [r10-0x33]
   1400361ee:	call   QWORD PTR [r10-0x33]
   1400361f2:	call   QWORD PTR [r10-0x33]
   1400361f6:	call   QWORD PTR [r10-0x33]
   1400361fa:	call   QWORD PTR [r10-0x33]
   1400361fe:	call   QWORD PTR [r10-0x33]
   140036202:	inc    DWORD PTR [r8]
   140036205:	add    BYTE PTR [rax],al
   140036207:	xor    BYTE PTR [rax],al
   140036209:	add    BYTE PTR [rax],al
   14003620b:	or     al,0x0
   14003620d:	add    BYTE PTR [rax],al
   14003620f:	add    DWORD PTR [rax],eax
	...
   140036239:	add    BYTE PTR [rax],al
   14003623b:	add    DWORD PTR [rax],eax
   14003623d:	add    BYTE PTR [rax],al
   14003623f:	or     eax,0x34000000
   140036244:	push   rdx
   140036245:	int    0x41
   140036247:	call   QWORD PTR [rdx-0x33]
   14003624a:	call   QWORD PTR [r10-0x33]
   14003624e:	call   QWORD PTR [r10-0x33]
   140036252:	call   QWORD PTR [r10-0x33]
   140036256:	call   QWORD PTR [r10-0x33]
   14003625a:	call   QWORD PTR [r10-0x33]
   14003625e:	call   QWORD PTR [r10-0x33]
   140036262:	call   QWORD PTR [r10-0x33]
   140036266:	call   QWORD PTR [r10-0x33]
   14003626a:	call   QWORD PTR [r10-0x33]
   14003626e:	call   QWORD PTR [r10-0x33]
   140036272:	call   QWORD PTR [r10-0x33]
   140036276:	push   QWORD PTR [r13-0x29]
   14003627a:	push   QWORD PTR [ebx-0x21005317]
   140036281:	cmc    
   140036282:	(bad)  
   140036284:	icebp  
   140036285:	sti    
   140036286:	lock (bad) 
   140036288:	(bad)  
   140036289:	(bad)  
   14003628a:	(bad)  
   14003628b:	(bad)  
   14003628c:	clc    
   14003628d:	std    
   14003628e:	clc    
   14003628f:	(bad)  
   140036290:	out    dx,eax
   140036291:	cli    
   140036292:	in     eax,dx
   140036293:	(bad)  
   140036294:	(bad)  
   140036295:	(bad)  
   140036296:	(bad)  
   140036297:	(bad)  
   140036298:	(bad)  
   140036299:	(bad)  
   14003629a:	(bad)  
   14003629b:	(bad)  
   14003629c:	(bad)  
   14003629d:	(bad)  
   14003629e:	(bad)  
   14003629f:	jmp    QWORD PTR [rdi+0x52ff9ee6]
   1400362a5:	int    0x41
   1400362a7:	call   QWORD PTR [rdx-0x33]
   1400362aa:	call   QWORD PTR [r10-0x33]
   1400362ae:	call   QWORD PTR [r10-0x33]
   1400362b2:	call   QWORD PTR [r10-0x33]
   1400362b6:	call   QWORD PTR [r14-0x32]
   1400362ba:	rex.RB dec r8d
   1400362bd:	jmp    0x140036281
   1400362bf:	(bad)  
   1400362c0:	mov    edi,0xffffb4d1
   1400362c5:	(bad)  
   1400362c6:	(bad)  
   1400362c7:	jmp    QWORD PTR [rdi-0x4400611a]
   1400362cd:	jmp    0x140036283
   1400362cf:	push   QWORD PTR [rdi-0x5e004f16]
   1400362d5:	in     al,0x98
   1400362d7:	dec    DWORD PTR [rbx+0x58ff80dd]
   1400362dd:	iret   
   1400362de:	rex.W call QWORD PTR [rdx-0x33]
   1400362e2:	call   QWORD PTR [r10-0x33]
   1400362e6:	call   QWORD PTR [r10-0x33]
   1400362ea:	call   QWORD PTR [r10-0x33]
   1400362ee:	call   QWORD PTR [r10-0x33]
   1400362f2:	call   QWORD PTR [r10-0x33]
   1400362f6:	call   QWORD PTR [r10-0x33]
   1400362fa:	call   QWORD PTR [r10-0x33]
   1400362fe:	call   QWORD PTR [r10-0x33]
   140036302:	inc    DWORD PTR [r8]
   140036305:	add    BYTE PTR [rax],al
   140036307:	xor    eax,DWORD PTR [rax]
   140036309:	add    BYTE PTR [rax],al
   14003630b:	or     eax,0x1000000
	...
   140036338:	add    BYTE PTR [rax],al
   14003633a:	add    BYTE PTR [rcx],al
   14003633c:	add    BYTE PTR [rax],al
   14003633e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036344
   140036344:	push   rdx
   140036345:	int    0x41
   140036347:	call   QWORD PTR [rdx-0x33]
   14003634a:	call   QWORD PTR [r10-0x33]
   14003634e:	call   QWORD PTR [r10-0x33]
   140036352:	call   QWORD PTR [r10-0x33]
   140036356:	call   QWORD PTR [r10-0x33]
   14003635a:	call   QWORD PTR [r10-0x33]
   14003635e:	call   QWORD PTR [r10-0x33]
   140036362:	call   QWORD PTR [r10-0x33]
   140036366:	call   QWORD PTR [r10-0x33]
   14003636a:	call   QWORD PTR [r10-0x33]
   14003636e:	call   QWORD PTR [r14-0x32]
   140036372:	rex.RB (bad) 
   140036374:	mov    edi,0xfeffb9ed
   140036379:	(bad)  
   14003637a:	(bad)  
   14003637b:	(bad)  
   14003637c:	(bad)  
   14003637d:	(bad)  
   14003637e:	(bad)  
   14003637f:	(bad)  
   140036380:	(bad)  
   140036381:	(bad)  
   140036382:	(bad)  
   140036383:	(bad)  
   140036384:	(bad)  
   140036385:	(bad)  
   140036386:	(bad)  
   140036387:	(bad)  
   140036388:	(bad)  
   140036389:	(bad)  
   14003638a:	(bad)  
   14003638b:	(bad)  
   14003638c:	(bad)  
   14003638d:	(bad)  
   14003638e:	(bad)  
   14003638f:	(bad)  
   140036390:	(bad)  
   140036391:	(bad)  
   140036392:	(bad)  
   140036393:	(bad)  
   140036394:	(bad)  
   140036395:	(bad)  
   140036396:	(bad)  
   140036397:	(bad)  
   140036398:	(bad)  
   140036399:	(bad)  
   14003639a:	(bad)  
   14003639b:	(bad)  
   14003639c:	(bad)  
   14003639d:	(bad)  
   14003639e:	(bad)  
   14003639f:	dec    DWORD PTR [rsi+0x52ff83de]
   1400363a5:	int    0x41
   1400363a7:	call   QWORD PTR [rdx-0x33]
   1400363aa:	call   QWORD PTR [r10-0x33]
   1400363ae:	call   QWORD PTR [r10-0x33]
   1400363b2:	call   QWORD PTR [r10-0x33]
   1400363b6:	call   QWORD PTR [r10-0x33]
   1400363ba:	call   QWORD PTR [r14-0x32]
   1400363be:	rex.RB (bad) 
   1400363c0:	fcomi  st,st(1)
   1400363c2:	xlat   BYTE PTR ds:[rbx]
   1400363c3:	(bad)  
   1400363c4:	(bad)  
   1400363c5:	(bad)  
   1400363c6:	(bad)  
   1400363c7:	(bad)  
   1400363c8:	(bad)  
   1400363c9:	(bad)  
   1400363ca:	(bad)  
   1400363cb:	(bad)  
   1400363cc:	(bad)  
   1400363cd:	(bad)  
   1400363ce:	(bad)  
   1400363cf:	(bad)  
   1400363d0:	(bad)  
   1400363d1:	(bad)  
   1400363d2:	(bad)  
   1400363d3:	(bad)  
   1400363d4:	(bad)  
   1400363d5:	(bad)  
   1400363d6:	(bad)  
   1400363d7:	(bad)  
   1400363d8:	(bad)  
   1400363d9:	(bad)  
   1400363da:	(bad)  
   1400363db:	jmp    QWORD PTR [rdx-0x2e]
   1400363de:	push   rbx
   1400363df:	call   QWORD PTR [rdx-0x33]
   1400363e2:	call   QWORD PTR [r10-0x33]
   1400363e6:	call   QWORD PTR [r10-0x33]
   1400363ea:	call   QWORD PTR [r10-0x33]
   1400363ee:	call   QWORD PTR [r10-0x33]
   1400363f2:	call   QWORD PTR [r10-0x33]
   1400363f6:	call   QWORD PTR [r10-0x33]
   1400363fa:	call   QWORD PTR [r10-0x33]
   1400363fe:	call   QWORD PTR [r10-0x33]
   140036402:	inc    DWORD PTR [r8]
   140036405:	add    BYTE PTR [rax],al
   140036407:	xor    al,0x0
   140036409:	add    BYTE PTR [rax],al
   14003640b:	or     eax,0x1000000
	...
   140036438:	add    BYTE PTR [rax],al
   14003643a:	add    BYTE PTR [rcx],al
   14003643c:	add    BYTE PTR [rax],al
   14003643e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036444
   140036444:	push   rdx
   140036445:	int    0x41
   140036447:	call   QWORD PTR [rdx-0x33]
   14003644a:	call   QWORD PTR [r10-0x33]
   14003644e:	call   QWORD PTR [r10-0x33]
   140036452:	call   QWORD PTR [r10-0x33]
   140036456:	call   QWORD PTR [r10-0x33]
   14003645a:	call   QWORD PTR [r10-0x33]
   14003645e:	call   QWORD PTR [r10-0x33]
   140036462:	call   QWORD PTR [r10-0x33]
   140036466:	call   QWORD PTR [r10-0x33]
   14003646a:	call   QWORD PTR [r10-0x33]
   14003646e:	inc    r15d
   140036471:	out    dx,eax
   140036472:	sar    edi,0xff
   140036475:	(bad)  
   140036476:	(bad)  
   140036477:	(bad)  
   140036478:	(bad)  
   140036479:	(bad)  
   14003647a:	(bad)  
   14003647b:	(bad)  
   14003647c:	(bad)  
   14003647d:	(bad)  
   14003647e:	(bad)  
   14003647f:	(bad)  
   140036480:	(bad)  
   140036481:	(bad)  
   140036482:	(bad)  
   140036483:	(bad)  
   140036484:	(bad)  
   140036485:	(bad)  
   140036486:	(bad)  
   140036487:	(bad)  
   140036488:	clc    
   140036489:	std    
   14003648a:	idiv   edi
   14003648c:	cli    
   14003648d:	std    
   14003648e:	stc    
   14003648f:	(bad)  
   140036490:	(bad)  
   140036491:	(bad)  
   140036492:	(bad)  
   140036493:	(bad)  
   140036494:	(bad)  
   140036495:	(bad)  
   140036496:	(bad)  
   140036497:	(bad)  
   140036498:	(bad)  
   140036499:	(bad)  
   14003649a:	(bad)  
   14003649b:	(bad)  
   14003649c:	(bad)  
   14003649d:	(bad)  
   14003649e:	(bad)  
   14003649f:	(bad)  
   1400364a0:	(bad)  
   1400364a1:	(bad)  
   1400364a2:	(bad)  
   1400364a3:	dec    DWORD PTR [rax+0x52ff7cdc]
   1400364a9:	int    0x41
   1400364ab:	call   QWORD PTR [rdx-0x33]
   1400364ae:	call   QWORD PTR [r10-0x33]
   1400364b2:	call   QWORD PTR [r10-0x33]
   1400364b6:	call   QWORD PTR [r10-0x33]
   1400364ba:	call   FWORD PTR [r9-0x31]
   1400364be:	rex.W push rdi
   1400364c1:	std    
   1400364c2:	idiv   bh
   1400364c4:	(bad)  
   1400364c5:	(bad)  
   1400364c6:	(bad)  
   1400364c7:	(bad)  
   1400364c8:	(bad)  
   1400364c9:	(bad)  
   1400364ca:	(bad)  
   1400364cb:	(bad)  
   1400364cc:	(bad)  
   1400364cd:	(bad)  
   1400364ce:	(bad)  
   1400364cf:	(bad)  
   1400364d0:	(bad)  
   1400364d1:	(bad)  
   1400364d2:	(bad)  
   1400364d3:	(bad)  
   1400364d4:	(bad)  
   1400364d5:	(bad)  
   1400364d6:	(bad)  
   1400364d7:	(bad)  
   1400364d8:	(bad)  
   1400364d9:	(bad)  
   1400364da:	(bad)  
   1400364db:	call   FWORD PTR [rcx-0x31]
   1400364de:	rex.W call QWORD PTR [rdx-0x33]
   1400364e2:	call   QWORD PTR [r10-0x33]
   1400364e6:	call   QWORD PTR [r10-0x33]
   1400364ea:	call   QWORD PTR [r10-0x33]
   1400364ee:	call   QWORD PTR [r10-0x33]
   1400364f2:	call   QWORD PTR [r10-0x33]
   1400364f6:	call   QWORD PTR [r10-0x33]
   1400364fa:	call   QWORD PTR [r10-0x33]
   1400364fe:	call   QWORD PTR [r10-0x33]
   140036502:	inc    DWORD PTR [r8]
   140036505:	add    BYTE PTR [rax],al
   140036507:	xor    al,0x0
   140036509:	add    BYTE PTR [rax],al
   14003650b:	or     eax,0x1000000
	...
   140036538:	add    BYTE PTR [rax],al
   14003653a:	add    BYTE PTR [rcx],al
   14003653c:	add    BYTE PTR [rax],al
   14003653e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036544
   140036544:	push   rdx
   140036545:	int    0x41
   140036547:	call   QWORD PTR [rdx-0x33]
   14003654a:	call   QWORD PTR [r10-0x33]
   14003654e:	call   QWORD PTR [r10-0x33]
   140036552:	call   QWORD PTR [r10-0x33]
   140036556:	call   QWORD PTR [r10-0x33]
   14003655a:	call   QWORD PTR [r10-0x33]
   14003655e:	call   QWORD PTR [r10-0x33]
   140036562:	call   QWORD PTR [r10-0x33]
   140036566:	call   QWORD PTR [r10-0x33]
   14003656a:	inc    DWORD PTR [r13-0x8624]
   140036571:	(bad)  
   140036572:	(bad)  
   140036573:	(bad)  
   140036574:	(bad)  
   140036575:	(bad)  
   140036576:	(bad)  
   140036577:	(bad)  
   140036578:	(bad)  
   140036579:	(bad)  
   14003657a:	(bad)  
   14003657b:	(bad)  
   14003657c:	out    dx,al
   14003657d:	cli    
   14003657e:	in     al,dx
   14003657f:	call   QWORD PTR [rbx+0x5eff89e0]
   140036585:	ror    BYTE PTR [rsi-0x1],1
   140036588:	push   rdx
   140036589:	int    0x41
   14003658b:	call   QWORD PTR [rdx-0x33]
   14003658e:	jmp    QWORD PTR [r14-0x2d]
   140036592:	push   rdi
   140036593:	jmp    QWORD PTR [rsi-0x500621b]
   140036599:	std    
   14003659a:	stc    
   14003659b:	(bad)  
   14003659c:	(bad)  
   14003659d:	(bad)  
   14003659e:	(bad)  
   14003659f:	(bad)  
   1400365a0:	(bad)  
   1400365a1:	(bad)  
   1400365a2:	(bad)  
   1400365a3:	push   rax
   1400365a5:	sti    
   1400365a6:	out    dx,eax
   1400365a7:	call   FWORD PTR [rax+rdx*8+0x4c]
   1400365ab:	call   QWORD PTR [rdx-0x33]
   1400365ae:	call   QWORD PTR [r10-0x33]
   1400365b2:	call   QWORD PTR [r10-0x33]
   1400365b6:	call   QWORD PTR [r10-0x33]
   1400365ba:	rex.B (bad) 
   1400365bc:	jge    0x140036597
   1400365be:	jo     0x1400365bf
   1400365c0:	(bad)  
   1400365c1:	(bad)  
   1400365c2:	(bad)  
   1400365c3:	(bad)  
   1400365c4:	(bad)  
   1400365c5:	(bad)  
   1400365c6:	(bad)  
   1400365c7:	(bad)  
   1400365c8:	(bad)  
   1400365c9:	(bad)  
   1400365ca:	(bad)  
   1400365cb:	(bad)  
   1400365cc:	mov    edx,0x8affb3eb
   1400365d1:	fnstsw WORD PTR [rdi-0x1]
   1400365d4:	mov    esi,ds
   1400365d6:	cmp    bh,0x94
   1400365d9:	loopne 0x140036565
   1400365db:	call   QWORD PTR [rdx-0x33]
   1400365de:	call   QWORD PTR [r10-0x33]
   1400365e2:	call   QWORD PTR [r10-0x33]
   1400365e6:	call   QWORD PTR [r10-0x33]
   1400365ea:	call   QWORD PTR [r10-0x33]
   1400365ee:	call   QWORD PTR [r10-0x33]
   1400365f2:	call   QWORD PTR [r10-0x33]
   1400365f6:	call   QWORD PTR [r10-0x33]
   1400365fa:	call   QWORD PTR [r10-0x33]
   1400365fe:	call   QWORD PTR [r10-0x33]
   140036602:	inc    DWORD PTR [r8]
   140036605:	add    BYTE PTR [rax],al
   140036607:	xor    al,0x0
   140036609:	add    BYTE PTR [rax],al
   14003660b:	or     eax,0x1000000
	...
   140036638:	add    BYTE PTR [rax],al
   14003663a:	add    BYTE PTR [rcx],al
   14003663c:	add    BYTE PTR [rax],al
   14003663e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036644
   140036644:	push   rdx
   140036645:	int    0x41
   140036647:	call   QWORD PTR [rdx-0x33]
   14003664a:	call   QWORD PTR [r10-0x33]
   14003664e:	call   QWORD PTR [r10-0x33]
   140036652:	call   QWORD PTR [r10-0x33]
   140036656:	call   QWORD PTR [r10-0x33]
   14003665a:	call   QWORD PTR [r10-0x33]
   14003665e:	call   QWORD PTR [r10-0x33]
   140036662:	call   QWORD PTR [r10-0x33]
   140036666:	call   QWORD PTR [r10-0x33]
   14003666a:	call   r8
   14003666d:	icebp  
   14003666e:	int3   
   14003666f:	(bad)  
   140036670:	(bad)  
   140036671:	(bad)  
   140036672:	(bad)  
   140036673:	(bad)  
   140036674:	(bad)  
   140036675:	(bad)  
   140036676:	(bad)  
   140036677:	push   rdi
   140036679:	std    
   14003667a:	idiv   bh
   14003667c:	ins    BYTE PTR es:[rdi],dx
   14003667d:	(bad)  
   14003667e:	pop    rbp
   14003667f:	call   QWORD PTR [rdx-0x33]
   140036682:	call   QWORD PTR [r10-0x33]
   140036686:	call   QWORD PTR [r10-0x33]
   14003668a:	call   QWORD PTR [r10-0x33]
   14003668e:	call   QWORD PTR [r10-0x33]
   140036692:	call   QWORD PTR [r10-0x33]
   140036696:	dec    DWORD PTR [r14+rbx*8-0x7f]
   14003669e:	(bad)  
   14003669f:	(bad)  
   1400366a0:	(bad)  
   1400366a1:	(bad)  
   1400366a2:	(bad)  
   1400366a3:	(bad)  
   1400366a4:	(bad)  
   1400366a5:	(bad)  
   1400366a6:	(bad)  
   1400366a7:	call   FWORD PTR [rbp+0x52ff94e3]
   1400366ad:	int    0x41
   1400366af:	call   QWORD PTR [rdx-0x33]
   1400366b2:	call   QWORD PTR [r10-0x33]
   1400366b6:	call   QWORD PTR [r10-0x33]
   1400366ba:	dec    DWORD PTR [r13-0x7d22]
   1400366c1:	(bad)  
   1400366c2:	(bad)  
   1400366c3:	(bad)  
   1400366c4:	(bad)  
   1400366c5:	(bad)  
   1400366c6:	(bad)  
   1400366c7:	(bad)  
   1400366c8:	clc    
   1400366c9:	std    
   1400366ca:	clc    
   1400366cb:	call   QWORD PTR [rbp-0x32]
   1400366ce:	rex.R call QWORD PTR [rdx-0x33]
   1400366d2:	call   QWORD PTR [r10-0x33]
   1400366d6:	call   QWORD PTR [r10-0x33]
   1400366da:	call   QWORD PTR [r10-0x33]
   1400366de:	call   QWORD PTR [r10-0x33]
   1400366e2:	call   QWORD PTR [r10-0x33]
   1400366e6:	call   QWORD PTR [r10-0x33]
   1400366ea:	call   QWORD PTR [r10-0x33]
   1400366ee:	call   QWORD PTR [r10-0x33]
   1400366f2:	call   QWORD PTR [r10-0x33]
   1400366f6:	call   QWORD PTR [r10-0x33]
   1400366fa:	call   QWORD PTR [r10-0x33]
   1400366fe:	call   QWORD PTR [r10-0x33]
   140036702:	inc    DWORD PTR [r8]
   140036705:	add    BYTE PTR [rax],al
   140036707:	xor    al,0x0
   140036709:	add    BYTE PTR [rax],al
   14003670b:	or     eax,0x1000000
	...
   140036738:	add    BYTE PTR [rax],al
   14003673a:	add    BYTE PTR [rcx],al
   14003673c:	add    BYTE PTR [rax],al
   14003673e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036744
   140036744:	push   rdx
   140036745:	int    0x41
   140036747:	call   QWORD PTR [rdx-0x33]
   14003674a:	call   QWORD PTR [r10-0x33]
   14003674e:	call   QWORD PTR [r10-0x33]
   140036752:	call   QWORD PTR [r10-0x33]
   140036756:	call   QWORD PTR [r10-0x33]
   14003675a:	call   QWORD PTR [r10-0x33]
   14003675e:	call   QWORD PTR [r10-0x33]
   140036762:	call   QWORD PTR [r10-0x33]
   140036766:	call   FWORD PTR [r13-0x30]
   14003676a:	rex.WRB (bad) 
   14003676c:	cld    
   14003676d:	(bad)  
   14003676e:	sti    
   14003676f:	(bad)  
   140036770:	(bad)  
   140036771:	(bad)  
   140036772:	(bad)  
   140036773:	(bad)  
   140036774:	(bad)  
   140036775:	(bad)  
   140036776:	(bad)  
   140036777:	push   QWORD PTR [rsi+0x52ffafea]
   14003677d:	int    0x41
   14003677f:	call   QWORD PTR [rdx-0x33]
   140036782:	call   QWORD PTR [r10-0x33]
   140036786:	call   QWORD PTR [r10-0x33]
   14003678a:	call   QWORD PTR [r10-0x33]
   14003678e:	call   QWORD PTR [r10-0x33]
   140036792:	call   QWORD PTR [r10-0x33]
   140036796:	call   QWORD PTR [r10-0x33]
   14003679a:	jmp    r10
   14003679d:	neg    edi
   14003679f:	(bad)  
   1400367a0:	(bad)  
   1400367a1:	(bad)  
   1400367a2:	(bad)  
   1400367a3:	(bad)  
   1400367a4:	(bad)  
   1400367a5:	(bad)  
   1400367a6:	(bad)  
   1400367a7:	dec    ebp
   1400367a9:	icebp  
   1400367aa:	leave  
   1400367ab:	call   QWORD PTR [rdx-0x33]
   1400367ae:	call   QWORD PTR [r10-0x33]
   1400367b2:	call   QWORD PTR [r10-0x33]
   1400367b6:	call   QWORD PTR [r10-0x33]
   1400367ba:	call   FWORD PTR [r10+riz*8-0x6e]
   1400367c2:	(bad)  
   1400367c3:	(bad)  
   1400367c4:	(bad)  
   1400367c5:	(bad)  
   1400367c6:	(bad)  
   1400367c7:	(bad)  
   1400367c8:	jmp    0x193034ec6
   1400367cd:	int    0x41
   1400367cf:	call   QWORD PTR [rdx-0x33]
   1400367d2:	call   QWORD PTR [r10-0x33]
   1400367d6:	call   QWORD PTR [r10-0x33]
   1400367da:	call   QWORD PTR [r10-0x33]
   1400367de:	call   QWORD PTR [r10-0x33]
   1400367e2:	call   QWORD PTR [r10-0x33]
   1400367e6:	call   QWORD PTR [r10-0x33]
   1400367ea:	call   QWORD PTR [r10-0x33]
   1400367ee:	call   QWORD PTR [r10-0x33]
   1400367f2:	call   QWORD PTR [r10-0x33]
   1400367f6:	call   QWORD PTR [r10-0x33]
   1400367fa:	call   QWORD PTR [r10-0x33]
   1400367fe:	call   QWORD PTR [r10-0x33]
   140036802:	inc    DWORD PTR [r8]
   140036805:	add    BYTE PTR [rax],al
   140036807:	xor    al,0x0
   140036809:	add    BYTE PTR [rax],al
   14003680b:	or     eax,0x1000000
	...
   140036838:	add    BYTE PTR [rax],al
   14003683a:	add    BYTE PTR [rcx],al
   14003683c:	add    BYTE PTR [rax],al
   14003683e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036844
   140036844:	push   rdx
   140036845:	int    0x41
   140036847:	call   QWORD PTR [rdx-0x33]
   14003684a:	call   QWORD PTR [r10-0x33]
   14003684e:	call   QWORD PTR [r10-0x33]
   140036852:	call   QWORD PTR [r10-0x33]
   140036856:	call   QWORD PTR [r10-0x33]
   14003685a:	call   QWORD PTR [r10-0x33]
   14003685e:	call   QWORD PTR [r10-0x33]
   140036862:	call   QWORD PTR [r10-0x33]
   140036866:	rex.B (bad) 
   140036868:	jg     0x140036844
   14003686a:	jb     0x14003686b
   14003686c:	(bad)  
   14003686d:	(bad)  
   14003686e:	(bad)  
   14003686f:	(bad)  
   140036870:	(bad)  
   140036871:	(bad)  
   140036872:	(bad)  
   140036873:	(bad)  
   140036874:	(bad)  
   140036875:	(bad)  
   140036876:	(bad)  
   140036877:	inc    DWORD PTR [rbx+0x52ff77db]
   14003687d:	int    0x41
   14003687f:	call   QWORD PTR [rdx-0x33]
   140036882:	call   QWORD PTR [r10-0x33]
   140036886:	call   QWORD PTR [r10-0x33]
   14003688a:	call   QWORD PTR [r10-0x33]
   14003688e:	call   QWORD PTR [r10-0x33]
   140036892:	call   QWORD PTR [r10-0x33]
   140036896:	call   QWORD PTR [r10-0x33]
   14003689a:	push   QWORD PTR [r8-0x5618]
   1400368a1:	(bad)  
   1400368a2:	(bad)  
   1400368a3:	(bad)  
   1400368a4:	(bad)  
   1400368a5:	(bad)  
   1400368a6:	(bad)  
   1400368a7:	push   rbx
   1400368a9:	sti    
   1400368aa:	bnd call QWORD PTR [rbx-0x33]
   1400368ae:	rex.X call QWORD PTR [rdx-0x33]
   1400368b2:	call   QWORD PTR [r10-0x33]
   1400368b6:	call   QWORD PTR [r10-0x33]
   1400368ba:	jmp    QWORD PTR [r13+riz*8-0x65]
   1400368c2:	(bad)  
   1400368c3:	(bad)  
   1400368c4:	(bad)  
   1400368c5:	(bad)  
   1400368c6:	(bad)  
   1400368c7:	jmp    rbx
   1400368c9:	mul    eax
   1400368cb:	call   QWORD PTR [rdx-0x33]
   1400368ce:	call   QWORD PTR [r10-0x33]
   1400368d2:	call   QWORD PTR [r10-0x33]
   1400368d6:	call   QWORD PTR [r10-0x33]
   1400368da:	call   QWORD PTR [r10-0x33]
   1400368de:	call   QWORD PTR [r10-0x33]
   1400368e2:	call   QWORD PTR [r10-0x33]
   1400368e6:	call   QWORD PTR [r10-0x33]
   1400368ea:	call   QWORD PTR [r10-0x33]
   1400368ee:	call   QWORD PTR [r10-0x33]
   1400368f2:	call   QWORD PTR [r10-0x33]
   1400368f6:	call   QWORD PTR [r10-0x33]
   1400368fa:	call   QWORD PTR [r10-0x33]
   1400368fe:	call   QWORD PTR [r10-0x33]
   140036902:	inc    DWORD PTR [r8]
   140036905:	add    BYTE PTR [rax],al
   140036907:	xor    al,0x0
   140036909:	add    BYTE PTR [rax],al
   14003690b:	or     eax,0x1000000
	...
   140036938:	add    BYTE PTR [rax],al
   14003693a:	add    BYTE PTR [rcx],al
   14003693c:	add    BYTE PTR [rax],al
   14003693e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036944
   140036944:	push   rdx
   140036945:	int    0x41
   140036947:	call   QWORD PTR [rdx-0x33]
   14003694a:	call   QWORD PTR [r10-0x33]
   14003694e:	call   QWORD PTR [r10-0x33]
   140036952:	call   QWORD PTR [r10-0x33]
   140036956:	call   QWORD PTR [r10-0x33]
   14003695a:	call   QWORD PTR [r10-0x33]
   14003695e:	call   QWORD PTR [r10-0x33]
   140036962:	call   QWORD PTR [r10-0x33]
   140036966:	call   FWORD PTR [r10-0x6f1e]
   14003696d:	(bad)  
   14003696e:	(bad)  
   14003696f:	(bad)  
   140036970:	(bad)  
   140036971:	(bad)  
   140036972:	(bad)  
   140036973:	(bad)  
   140036974:	(bad)  
   140036975:	(bad)  
   140036976:	(bad)  
   140036977:	jmp    QWORD PTR [rsi-0x2d]
   14003697a:	push   rdi
   14003697b:	call   QWORD PTR [rdx-0x33]
   14003697e:	call   QWORD PTR [r10-0x33]
   140036982:	call   QWORD PTR [r10-0x33]
   140036986:	call   QWORD PTR [r10-0x33]
   14003698a:	call   QWORD PTR [r10-0x33]
   14003698e:	call   QWORD PTR [r10-0x33]
   140036992:	call   QWORD PTR [r10-0x33]
   140036996:	call   QWORD PTR [r10-0x33]
   14003699a:	call   QWORD PTR [r9-0x7921]
   1400369a1:	(bad)  
   1400369a2:	(bad)  
   1400369a3:	(bad)  
   1400369a4:	(bad)  
   1400369a5:	(bad)  
   1400369a6:	(bad)  
   1400369a7:	(bad)  
   1400369a8:	(bad)  
   1400369a9:	(bad)  
   1400369aa:	(bad)  
   1400369ab:	jmp    QWORD PTR [rsi-0x2d]
   1400369ae:	push   rdi
   1400369af:	call   QWORD PTR [rdx-0x33]
   1400369b2:	call   QWORD PTR [r10-0x33]
   1400369b6:	call   QWORD PTR [r10-0x33]
   1400369ba:	jmp    QWORD PTR [r13+riz*8-0x65]
   1400369c2:	(bad)  
   1400369c3:	(bad)  
   1400369c4:	(bad)  
   1400369c5:	(bad)  
   1400369c6:	(bad)  
   1400369c7:	jmp    rdx
   1400369c9:	neg    edi
   1400369cb:	call   QWORD PTR [rdx-0x33]
   1400369ce:	call   QWORD PTR [r10-0x33]
   1400369d2:	call   QWORD PTR [r10-0x33]
   1400369d6:	call   QWORD PTR [r10-0x33]
   1400369da:	call   QWORD PTR [r10-0x33]
   1400369de:	call   QWORD PTR [r10-0x33]
   1400369e2:	call   QWORD PTR [r10-0x33]
   1400369e6:	call   QWORD PTR [r10-0x33]
   1400369ea:	call   QWORD PTR [r10-0x33]
   1400369ee:	call   QWORD PTR [r10-0x33]
   1400369f2:	call   QWORD PTR [r10-0x33]
   1400369f6:	call   QWORD PTR [r10-0x33]
   1400369fa:	call   QWORD PTR [r10-0x33]
   1400369fe:	call   QWORD PTR [r10-0x33]
   140036a02:	inc    DWORD PTR [r8]
   140036a05:	add    BYTE PTR [rax],al
   140036a07:	xor    al,0x0
   140036a09:	add    BYTE PTR [rax],al
   140036a0b:	or     eax,0x1000000
	...
   140036a38:	add    BYTE PTR [rax],al
   140036a3a:	add    BYTE PTR [rcx],al
   140036a3c:	add    BYTE PTR [rax],al
   140036a3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036a44
   140036a44:	push   rdx
   140036a45:	int    0x41
   140036a47:	call   QWORD PTR [rdx-0x33]
   140036a4a:	call   QWORD PTR [r10-0x33]
   140036a4e:	call   QWORD PTR [r10-0x33]
   140036a52:	call   QWORD PTR [r10-0x33]
   140036a56:	call   QWORD PTR [r10-0x33]
   140036a5a:	call   QWORD PTR [r10-0x33]
   140036a5e:	call   QWORD PTR [r10-0x33]
   140036a62:	call   QWORD PTR [r10-0x33]
   140036a66:	jmp    FWORD PTR [r15+riz*8-0x5c]
   140036a6e:	(bad)  
   140036a6f:	(bad)  
   140036a70:	(bad)  
   140036a71:	(bad)  
   140036a72:	(bad)  
   140036a73:	(bad)  
   140036a74:	(bad)  
   140036a75:	(bad)  
   140036a76:	(bad)  
   140036a77:	call   FWORD PTR [rcx-0x31]
   140036a7a:	rex.WB call QWORD PTR [r10-0x33]
   140036a7e:	call   QWORD PTR [r10-0x33]
   140036a82:	call   QWORD PTR [r10-0x33]
   140036a86:	call   QWORD PTR [r10-0x33]
   140036a8a:	call   QWORD PTR [r10-0x33]
   140036a8e:	call   QWORD PTR [r10-0x33]
   140036a92:	call   QWORD PTR [r10-0x33]
   140036a96:	call   QWORD PTR [r10-0x33]
   140036a9a:	rex.B (bad) 
   140036a9c:	jge    0x140036a78
   140036a9e:	jno    0x140036a9f
   140036aa0:	(bad)  
   140036aa1:	(bad)  
   140036aa2:	(bad)  
   140036aa3:	(bad)  
   140036aa4:	(bad)  
   140036aa5:	(bad)  
   140036aa6:	(bad)  
   140036aa7:	(bad)  
   140036aa8:	(bad)  
   140036aa9:	(bad)  
   140036aaa:	(bad)  
   140036aab:	push   QWORD PTR [rdx-0x2a]
   140036aae:	call   QWORD PTR fs:[rdx-0x33]
   140036ab2:	call   QWORD PTR [r10-0x33]
   140036ab6:	call   QWORD PTR [r10-0x33]
   140036aba:	jmp    QWORD PTR [r13+riz*8-0x65]
   140036ac2:	(bad)  
   140036ac3:	(bad)  
   140036ac4:	(bad)  
   140036ac5:	(bad)  
   140036ac6:	(bad)  
   140036ac7:	jmp    rdx
   140036ac9:	neg    edi
   140036acb:	call   QWORD PTR [rdx-0x33]
   140036ace:	call   QWORD PTR [r10-0x33]
   140036ad2:	call   QWORD PTR [r10-0x33]
   140036ad6:	call   QWORD PTR [r10-0x33]
   140036ada:	call   QWORD PTR [r10-0x33]
   140036ade:	call   QWORD PTR [r10-0x33]
   140036ae2:	call   QWORD PTR [r10-0x33]
   140036ae6:	call   QWORD PTR [r10-0x33]
   140036aea:	call   QWORD PTR [r10-0x33]
   140036aee:	call   QWORD PTR [r10-0x33]
   140036af2:	call   QWORD PTR [r10-0x33]
   140036af6:	call   QWORD PTR [r10-0x33]
   140036afa:	call   QWORD PTR [r10-0x33]
   140036afe:	call   QWORD PTR [r10-0x33]
   140036b02:	inc    DWORD PTR [r8]
   140036b05:	add    BYTE PTR [rax],al
   140036b07:	xor    al,0x0
   140036b09:	add    BYTE PTR [rax],al
   140036b0b:	or     eax,0x1000000
	...
   140036b38:	add    BYTE PTR [rax],al
   140036b3a:	add    BYTE PTR [rcx],al
   140036b3c:	add    BYTE PTR [rax],al
   140036b3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036b44
   140036b44:	push   rdx
   140036b45:	int    0x41
   140036b47:	call   QWORD PTR [rdx-0x33]
   140036b4a:	call   QWORD PTR [r10-0x33]
   140036b4e:	call   QWORD PTR [r10-0x33]
   140036b52:	call   QWORD PTR [r10-0x33]
   140036b56:	call   QWORD PTR [r10-0x33]
   140036b5a:	call   QWORD PTR [r10-0x33]
   140036b5e:	call   QWORD PTR [r10-0x33]
   140036b62:	call   QWORD PTR [r10-0x33]
   140036b66:	push   QWORD PTR [r9+rbp*8-0x54]
   140036b6e:	(bad)  
   140036b6f:	(bad)  
   140036b70:	(bad)  
   140036b71:	(bad)  
   140036b72:	(bad)  
   140036b73:	(bad)  
   140036b74:	cli    
   140036b75:	(bad)  
   140036b76:	cli    
   140036b77:	call   QWORD PTR [rdx-0x33]
   140036b7a:	call   QWORD PTR [r10-0x33]
   140036b7e:	call   QWORD PTR [r10-0x33]
   140036b82:	call   QWORD PTR [r10-0x33]
   140036b86:	call   QWORD PTR [r10-0x33]
   140036b8a:	call   QWORD PTR [r10-0x33]
   140036b8e:	call   QWORD PTR [r10-0x33]
   140036b92:	call   QWORD PTR [r10-0x33]
   140036b96:	call   QWORD PTR [r10-0x33]
   140036b9a:	push   QWORD PTR [r13-0x29]
   140036b9e:	addr32 (bad) 
   140036ba0:	(bad)  
   140036ba1:	(bad)  
   140036ba2:	(bad)  
   140036ba3:	(bad)  
   140036ba4:	(bad)  
   140036ba5:	(bad)  
   140036ba6:	(bad)  
   140036ba7:	(bad)  
   140036ba8:	(bad)  
   140036ba9:	(bad)  
   140036baa:	(bad)  
   140036bab:	(bad)  
   140036bac:	jnp    0x140036b87
   140036bae:	outs   dx,BYTE PTR ds:[rsi]
   140036baf:	call   QWORD PTR [rdx-0x33]
   140036bb2:	call   QWORD PTR [r10-0x33]
   140036bb6:	call   QWORD PTR [r10-0x33]
   140036bba:	jmp    QWORD PTR [r13+riz*8-0x65]
   140036bc2:	(bad)  
   140036bc3:	(bad)  
   140036bc4:	(bad)  
   140036bc5:	(bad)  
   140036bc6:	(bad)  
   140036bc7:	jmp    rdx
   140036bc9:	neg    edi
   140036bcb:	call   QWORD PTR [rdx-0x33]
   140036bce:	call   QWORD PTR [r10-0x33]
   140036bd2:	call   QWORD PTR [r10-0x33]
   140036bd6:	call   QWORD PTR [r10-0x33]
   140036bda:	call   QWORD PTR [r10-0x33]
   140036bde:	call   QWORD PTR [r10-0x33]
   140036be2:	call   QWORD PTR [r10-0x33]
   140036be6:	call   QWORD PTR [r10-0x33]
   140036bea:	call   QWORD PTR [r10-0x33]
   140036bee:	call   QWORD PTR [r10-0x33]
   140036bf2:	call   QWORD PTR [r10-0x33]
   140036bf6:	call   QWORD PTR [r10-0x33]
   140036bfa:	call   QWORD PTR [r10-0x33]
   140036bfe:	call   QWORD PTR [r10-0x33]
   140036c02:	inc    DWORD PTR [r8]
   140036c05:	add    BYTE PTR [rax],al
   140036c07:	xor    al,0x0
   140036c09:	add    BYTE PTR [rax],al
   140036c0b:	or     eax,0x1000000
	...
   140036c38:	add    BYTE PTR [rax],al
   140036c3a:	add    BYTE PTR [rcx],al
   140036c3c:	add    BYTE PTR [rax],al
   140036c3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036c44
   140036c44:	push   rdx
   140036c45:	int    0x41
   140036c47:	call   QWORD PTR [rdx-0x33]
   140036c4a:	call   QWORD PTR [r10-0x33]
   140036c4e:	call   QWORD PTR [r10-0x33]
   140036c52:	call   QWORD PTR [r10-0x33]
   140036c56:	call   QWORD PTR [r10-0x33]
   140036c5a:	call   QWORD PTR [r10-0x33]
   140036c5e:	call   QWORD PTR [r10-0x33]
   140036c62:	call   QWORD PTR [r10-0x33]
   140036c66:	rex.B (bad) 
   140036c68:	mov    edx,0xffffb3eb
   140036c6d:	(bad)  
   140036c6e:	(bad)  
   140036c6f:	(bad)  
   140036c70:	(bad)  
   140036c71:	(bad)  
   140036c72:	(bad)  
   140036c73:	(bad)  
   140036c74:	out    dx,eax
   140036c75:	cli    
   140036c76:	in     eax,dx
   140036c77:	call   QWORD PTR [rdx-0x33]
   140036c7a:	call   QWORD PTR [r10-0x33]
   140036c7e:	call   QWORD PTR [r10-0x33]
   140036c82:	call   QWORD PTR [r10-0x33]
   140036c86:	call   QWORD PTR [r10-0x33]
   140036c8a:	call   QWORD PTR [r10-0x33]
   140036c8e:	call   QWORD PTR [r10-0x33]
   140036c92:	call   QWORD PTR [r10-0x33]
   140036c96:	call   QWORD PTR [r10-0x33]
   140036c9a:	jmp    FWORD PTR [r15-0x2b]
   140036c9e:	(bad)  
   140036c9f:	(bad)  
   140036ca0:	(bad)  
   140036ca1:	(bad)  
   140036ca2:	(bad)  
   140036ca3:	(bad)  
   140036ca4:	(bad)  
   140036ca5:	(bad)  
   140036ca6:	(bad)  
   140036ca7:	(bad)  
   140036ca8:	(bad)  
   140036ca9:	(bad)  
   140036caa:	(bad)  
   140036cab:	inc    DWORD PTR [rbp+0x52ff79dc]
   140036cb1:	int    0x41
   140036cb3:	call   QWORD PTR [rdx-0x33]
   140036cb6:	call   QWORD PTR [r10-0x33]
   140036cba:	jmp    QWORD PTR [r13+riz*8-0x65]
   140036cc2:	(bad)  
   140036cc3:	(bad)  
   140036cc4:	(bad)  
   140036cc5:	(bad)  
   140036cc6:	(bad)  
   140036cc7:	jmp    rdx
   140036cc9:	neg    edi
   140036ccb:	call   QWORD PTR [rdx-0x33]
   140036cce:	call   QWORD PTR [r10-0x33]
   140036cd2:	call   QWORD PTR [r10-0x33]
   140036cd6:	call   QWORD PTR [r10-0x33]
   140036cda:	call   QWORD PTR [r10-0x33]
   140036cde:	call   QWORD PTR [r10-0x33]
   140036ce2:	call   QWORD PTR [r10-0x33]
   140036ce6:	call   QWORD PTR [r10-0x33]
   140036cea:	call   QWORD PTR [r10-0x33]
   140036cee:	call   QWORD PTR [r10-0x33]
   140036cf2:	call   QWORD PTR [r10-0x33]
   140036cf6:	call   QWORD PTR [r10-0x33]
   140036cfa:	call   QWORD PTR [r10-0x33]
   140036cfe:	call   QWORD PTR [r10-0x33]
   140036d02:	inc    DWORD PTR [r8]
   140036d05:	add    BYTE PTR [rax],al
   140036d07:	xor    al,0x0
   140036d09:	add    BYTE PTR [rax],al
   140036d0b:	or     eax,0x1000000
	...
   140036d38:	add    BYTE PTR [rax],al
   140036d3a:	add    BYTE PTR [rcx],al
   140036d3c:	add    BYTE PTR [rax],al
   140036d3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036d44
   140036d44:	push   rdx
   140036d45:	int    0x41
   140036d47:	call   QWORD PTR [rdx-0x33]
   140036d4a:	call   QWORD PTR [r10-0x33]
   140036d4e:	call   QWORD PTR [r10-0x33]
   140036d52:	call   QWORD PTR [r10-0x33]
   140036d56:	call   QWORD PTR [r10-0x33]
   140036d5a:	call   QWORD PTR [r10-0x33]
   140036d5e:	call   QWORD PTR [r10-0x33]
   140036d62:	call   QWORD PTR [r10-0x33]
   140036d66:	push   QWORD PTR [r9+rbp*8-0x53]
   140036d6e:	(bad)  
   140036d6f:	(bad)  
   140036d70:	(bad)  
   140036d71:	(bad)  
   140036d72:	(bad)  
   140036d73:	push   rcx
   140036d75:	sti    
   140036d76:	out    dx,eax
   140036d77:	call   QWORD PTR [rdx-0x33]
   140036d7a:	call   QWORD PTR [r10-0x33]
   140036d7e:	call   QWORD PTR [r10-0x33]
   140036d82:	call   QWORD PTR [r10-0x33]
   140036d86:	call   QWORD PTR [r10-0x33]
   140036d8a:	call   QWORD PTR [r10-0x33]
   140036d8e:	call   QWORD PTR [r10-0x33]
   140036d92:	call   QWORD PTR [r10-0x33]
   140036d96:	call   QWORD PTR [r10-0x33]
   140036d9a:	push   QWORD PTR [r11-0x29]
   140036d9e:	data16 (bad) 
   140036da0:	(bad)  
   140036da1:	(bad)  
   140036da2:	(bad)  
   140036da3:	(bad)  
   140036da4:	(bad)  
   140036da5:	(bad)  
   140036da6:	(bad)  
   140036da7:	(bad)  
   140036da8:	(bad)  
   140036da9:	(bad)  
   140036daa:	(bad)  
   140036dab:	inc    DWORD PTR [rax+0x52ff74da]
   140036db1:	int    0x41
   140036db3:	call   QWORD PTR [rdx-0x33]
   140036db6:	call   QWORD PTR [r10-0x33]
   140036dba:	jmp    QWORD PTR [r13+riz*8-0x65]
   140036dc2:	(bad)  
   140036dc3:	(bad)  
   140036dc4:	(bad)  
   140036dc5:	(bad)  
   140036dc6:	(bad)  
   140036dc7:	jmp    rdx
   140036dc9:	neg    edi
   140036dcb:	call   QWORD PTR [rdx-0x33]
   140036dce:	call   QWORD PTR [r10-0x33]
   140036dd2:	call   QWORD PTR [r10-0x33]
   140036dd6:	call   QWORD PTR [r10-0x33]
   140036dda:	call   QWORD PTR [r10-0x33]
   140036dde:	call   QWORD PTR [r10-0x33]
   140036de2:	call   QWORD PTR [r10-0x33]
   140036de6:	call   QWORD PTR [r10-0x33]
   140036dea:	call   QWORD PTR [r10-0x33]
   140036dee:	call   QWORD PTR [r10-0x33]
   140036df2:	call   QWORD PTR [r10-0x33]
   140036df6:	call   QWORD PTR [r10-0x33]
   140036dfa:	call   QWORD PTR [r10-0x33]
   140036dfe:	call   QWORD PTR [r10-0x33]
   140036e02:	inc    DWORD PTR [r8]
   140036e05:	add    BYTE PTR [rax],al
   140036e07:	xor    al,0x0
   140036e09:	add    BYTE PTR [rax],al
   140036e0b:	or     eax,0x1000000
	...
   140036e38:	add    BYTE PTR [rax],al
   140036e3a:	add    BYTE PTR [rcx],al
   140036e3c:	add    BYTE PTR [rax],al
   140036e3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036e44
   140036e44:	push   rdx
   140036e45:	int    0x41
   140036e47:	call   QWORD PTR [rdx-0x33]
   140036e4a:	call   QWORD PTR [r10-0x33]
   140036e4e:	call   QWORD PTR [r10-0x33]
   140036e52:	call   QWORD PTR [r10-0x33]
   140036e56:	call   QWORD PTR [r10-0x33]
   140036e5a:	call   QWORD PTR [r10-0x33]
   140036e5e:	call   QWORD PTR [r10-0x33]
   140036e62:	call   QWORD PTR [r10-0x33]
   140036e66:	jmp    FWORD PTR [r15+riz*8-0x5c]
   140036e6e:	(bad)  
   140036e6f:	(bad)  
   140036e70:	(bad)  
   140036e71:	(bad)  
   140036e72:	(bad)  
   140036e73:	(bad)  
   140036e74:	clc    
   140036e75:	std    
   140036e76:	clc    
   140036e77:	call   QWORD PTR [rdx-0x33]
   140036e7a:	call   QWORD PTR [r10-0x33]
   140036e7e:	call   QWORD PTR [r10-0x33]
   140036e82:	call   QWORD PTR [r10-0x33]
   140036e86:	call   QWORD PTR [r10-0x33]
   140036e8a:	call   QWORD PTR [r10-0x33]
   140036e8e:	call   QWORD PTR [r10-0x33]
   140036e92:	call   QWORD PTR [r10-0x33]
   140036e96:	call   QWORD PTR [r10-0x33]
   140036e9a:	rex.B (bad) 
   140036e9c:	jnp    0x140036e77
   140036e9e:	outs   dx,BYTE PTR ds:[rsi]
   140036e9f:	(bad)  
   140036ea0:	(bad)  
   140036ea1:	(bad)  
   140036ea2:	(bad)  
   140036ea3:	(bad)  
   140036ea4:	(bad)  
   140036ea5:	(bad)  
   140036ea6:	(bad)  
   140036ea7:	(bad)  
   140036ea8:	(bad)  
   140036ea9:	(bad)  
   140036eaa:	(bad)  
   140036eab:	(bad)  
   140036eac:	js     0x140036e86
   140036eae:	imul   edi,edi,0x52
   140036eb1:	int    0x41
   140036eb3:	call   QWORD PTR [rdx-0x33]
   140036eb6:	call   QWORD PTR [r10-0x33]
   140036eba:	jmp    QWORD PTR [r13+riz*8-0x65]
   140036ec2:	(bad)  
   140036ec3:	(bad)  
   140036ec4:	(bad)  
   140036ec5:	(bad)  
   140036ec6:	(bad)  
   140036ec7:	jmp    rdx
   140036ec9:	neg    edi
   140036ecb:	call   QWORD PTR [rdx-0x33]
   140036ece:	call   QWORD PTR [r10-0x33]
   140036ed2:	call   QWORD PTR [r10-0x33]
   140036ed6:	call   QWORD PTR [r10-0x33]
   140036eda:	call   QWORD PTR [r10-0x33]
   140036ede:	call   QWORD PTR [r10-0x33]
   140036ee2:	call   QWORD PTR [r10-0x33]
   140036ee6:	call   QWORD PTR [r10-0x33]
   140036eea:	call   QWORD PTR [r10-0x33]
   140036eee:	call   QWORD PTR [r10-0x33]
   140036ef2:	call   QWORD PTR [r10-0x33]
   140036ef6:	call   QWORD PTR [r10-0x33]
   140036efa:	call   QWORD PTR [r10-0x33]
   140036efe:	call   QWORD PTR [r10-0x33]
   140036f02:	inc    DWORD PTR [r8]
   140036f05:	add    BYTE PTR [rax],al
   140036f07:	xor    al,0x0
   140036f09:	add    BYTE PTR [rax],al
   140036f0b:	or     eax,0x1000000
	...
   140036f38:	add    BYTE PTR [rax],al
   140036f3a:	add    BYTE PTR [rcx],al
   140036f3c:	add    BYTE PTR [rax],al
   140036f3e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174036f44
   140036f44:	push   rdx
   140036f45:	int    0x41
   140036f47:	call   QWORD PTR [rdx-0x33]
   140036f4a:	call   QWORD PTR [r10-0x33]
   140036f4e:	call   QWORD PTR [r10-0x33]
   140036f52:	call   QWORD PTR [r10-0x33]
   140036f56:	call   QWORD PTR [r10-0x33]
   140036f5a:	call   QWORD PTR [r10-0x33]
   140036f5e:	call   QWORD PTR [r10-0x33]
   140036f62:	call   QWORD PTR [r10-0x33]
   140036f66:	call   FWORD PTR [r14-0x6b1d]
   140036f6d:	(bad)  
   140036f6e:	(bad)  
   140036f6f:	(bad)  
   140036f70:	(bad)  
   140036f71:	(bad)  
   140036f72:	(bad)  
   140036f73:	(bad)  
   140036f74:	(bad)  
   140036f75:	(bad)  
   140036f76:	(bad)  
   140036f77:	call   FWORD PTR [rsi-0x2f]
   140036f7a:	rex.WRX call QWORD PTR [rdx-0x33]
   140036f7e:	call   QWORD PTR [r10-0x33]
   140036f82:	call   QWORD PTR [r10-0x33]
   140036f86:	call   QWORD PTR [r10-0x33]
   140036f8a:	call   QWORD PTR [r10-0x33]
   140036f8e:	call   QWORD PTR [r10-0x33]
   140036f92:	call   QWORD PTR [r10-0x33]
   140036f96:	call   QWORD PTR [r10-0x33]
   140036f9a:	dec    DWORD PTR [r14-0x7c22]
   140036fa1:	(bad)  
   140036fa2:	(bad)  
   140036fa3:	(bad)  
   140036fa4:	(bad)  
   140036fa5:	(bad)  
   140036fa6:	(bad)  
   140036fa7:	(bad)  
   140036fa8:	(bad)  
   140036fa9:	(bad)  
   140036faa:	(bad)  
   140036fab:	jmp    FWORD PTR [rdx-0x2c]
   140036fae:	pop    rbx
   140036faf:	call   QWORD PTR [rdx-0x33]
   140036fb2:	call   r8
   140036fb5:	icebp  
   140036fb6:	retf   
   140036fb7:	push   rbx
   140036fb9:	cld    
   140036fba:	repnz (bad) 
   140036fbc:	stc    
   140036fbd:	std    
   140036fbe:	clc    
   140036fbf:	(bad)  
   140036fc0:	(bad)  
   140036fc1:	(bad)  
   140036fc2:	(bad)  
   140036fc3:	(bad)  
   140036fc4:	(bad)  
   140036fc5:	(bad)  
   140036fc6:	(bad)  
   140036fc7:	(bad)  
   140036fc8:	std    
   140036fc9:	(bad)  
   140036fca:	std    
   140036fcb:	push   rbx
   140036fcd:	cld    
   140036fce:	repnz push rbx
   140036fd1:	cld    
   140036fd2:	repnz push rbx
   140036fd5:	cld    
   140036fd6:	repnz push rbx
   140036fd9:	cld    
   140036fda:	bnd call QWORD PTR [rbp-0x32]
   140036fde:	rex.RB call QWORD PTR [r10-0x33]
   140036fe2:	call   QWORD PTR [r10-0x33]
   140036fe6:	call   QWORD PTR [r10-0x33]
   140036fea:	call   QWORD PTR [r10-0x33]
   140036fee:	call   QWORD PTR [r10-0x33]
   140036ff2:	call   QWORD PTR [r10-0x33]
   140036ff6:	call   QWORD PTR [r10-0x33]
   140036ffa:	call   QWORD PTR [r10-0x33]
   140036ffe:	call   QWORD PTR [r10-0x33]
   140037002:	inc    DWORD PTR [r8]
   140037005:	add    BYTE PTR [rax],al
   140037007:	xor    al,0x0
   140037009:	add    BYTE PTR [rax],al
   14003700b:	or     eax,0x1000000
	...
   140037038:	add    BYTE PTR [rax],al
   14003703a:	add    BYTE PTR [rcx],al
   14003703c:	add    BYTE PTR [rax],al
   14003703e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174037044
   140037044:	push   rdx
   140037045:	int    0x41
   140037047:	call   QWORD PTR [rdx-0x33]
   14003704a:	call   QWORD PTR [r10-0x33]
   14003704e:	call   QWORD PTR [r10-0x33]
   140037052:	call   QWORD PTR [r10-0x33]
   140037056:	call   QWORD PTR [r10-0x33]
   14003705a:	call   QWORD PTR [r10-0x33]
   14003705e:	call   QWORD PTR [r10-0x33]
   140037062:	call   QWORD PTR [r10-0x33]
   140037066:	inc    DWORD PTR [r11-0x8825]
   14003706d:	(bad)  
   14003706e:	(bad)  
   14003706f:	(bad)  
   140037070:	(bad)  
   140037071:	(bad)  
   140037072:	(bad)  
   140037073:	(bad)  
   140037074:	(bad)  
   140037075:	(bad)  
   140037076:	(bad)  
   140037077:	(bad)  
   140037078:	jnp    0x140037053
   14003707a:	outs   dx,BYTE PTR ds:[rsi]
   14003707b:	call   QWORD PTR [rdx-0x33]
   14003707e:	call   QWORD PTR [r10-0x33]
   140037082:	call   QWORD PTR [r10-0x33]
   140037086:	call   QWORD PTR [r10-0x33]
   14003708a:	call   QWORD PTR [r10-0x33]
   14003708e:	call   QWORD PTR [r10-0x33]
   140037092:	call   QWORD PTR [r10-0x33]
   140037096:	call   QWORD PTR [r10-0x33]
   14003709a:	jmp    FWORD PTR [r9-0x5f1a]
   1400370a1:	(bad)  
   1400370a2:	(bad)  
   1400370a3:	(bad)  
   1400370a4:	(bad)  
   1400370a5:	(bad)  
   1400370a6:	(bad)  
   1400370a7:	(bad)  
   1400370a8:	cli    
   1400370a9:	(bad)  
   1400370aa:	cli    
   1400370ab:	call   QWORD PTR [rsi+rcx*8+0x43]
   1400370af:	call   QWORD PTR [rdx-0x33]
   1400370b2:	rex.B (bad) 
   1400370b4:	fdiv   st,st(4)
   1400370b6:	(bad)  
   1400370b7:	(bad)  
   1400370b8:	(bad)  
   1400370b9:	(bad)  
   1400370ba:	(bad)  
   1400370bb:	(bad)  
   1400370bc:	(bad)  
   1400370bd:	(bad)  
   1400370be:	(bad)  
   1400370bf:	(bad)  
   1400370c0:	(bad)  
   1400370c1:	(bad)  
   1400370c2:	(bad)  
   1400370c3:	(bad)  
   1400370c4:	(bad)  
   1400370c5:	(bad)  
   1400370c6:	(bad)  
   1400370c7:	(bad)  
   1400370c8:	(bad)  
   1400370c9:	(bad)  
   1400370ca:	(bad)  
   1400370cb:	(bad)  
   1400370cc:	(bad)  
   1400370cd:	(bad)  
   1400370ce:	(bad)  
   1400370cf:	(bad)  
   1400370d0:	(bad)  
   1400370d1:	(bad)  
   1400370d2:	(bad)  
   1400370d3:	(bad)  
   1400370d4:	(bad)  
   1400370d5:	(bad)  
   1400370d6:	(bad)  
   1400370d7:	(bad)  
   1400370d8:	(bad)  
   1400370d9:	(bad)  
   1400370da:	(bad)  
   1400370db:	call   QWORD PTR [rbp-0x32]
   1400370de:	rex.RB call QWORD PTR [r10-0x33]
   1400370e2:	call   QWORD PTR [r10-0x33]
   1400370e6:	call   QWORD PTR [r10-0x33]
   1400370ea:	call   QWORD PTR [r10-0x33]
   1400370ee:	call   QWORD PTR [r10-0x33]
   1400370f2:	call   QWORD PTR [r10-0x33]
   1400370f6:	call   QWORD PTR [r10-0x33]
   1400370fa:	call   QWORD PTR [r10-0x33]
   1400370fe:	call   QWORD PTR [r10-0x33]
   140037102:	inc    DWORD PTR [r8]
   140037105:	add    BYTE PTR [rax],al
   140037107:	xor    al,0x0
   140037109:	add    BYTE PTR [rax],al
   14003710b:	or     eax,0x1000000
	...
   140037138:	add    BYTE PTR [rax],al
   14003713a:	add    BYTE PTR [rcx],al
   14003713c:	add    BYTE PTR [rax],al
   14003713e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174037144
   140037144:	push   rdx
   140037145:	int    0x41
   140037147:	call   QWORD PTR [rdx-0x33]
   14003714a:	call   QWORD PTR [r10-0x33]
   14003714e:	call   QWORD PTR [r10-0x33]
   140037152:	call   QWORD PTR [r10-0x33]
   140037156:	call   QWORD PTR [r10-0x33]
   14003715a:	call   QWORD PTR [r10-0x33]
   14003715e:	call   QWORD PTR [r10-0x33]
   140037162:	call   QWORD PTR [r10-0x33]
   140037166:	jmp    QWORD PTR [r11-0x2e]
   14003716a:	push   rsp
   14003716b:	(bad)  
   14003716c:	(bad)  
   14003716d:	(bad)  
   14003716e:	(bad)  
   14003716f:	(bad)  
   140037170:	(bad)  
   140037171:	(bad)  
   140037172:	(bad)  
   140037173:	(bad)  
   140037174:	(bad)  
   140037175:	(bad)  
   140037176:	(bad)  
   140037177:	jmp    QWORD PTR [rdi+0x52ff9fe6]
   14003717d:	int    0x41
   14003717f:	call   QWORD PTR [rdx-0x33]
   140037182:	call   QWORD PTR [r10-0x33]
   140037186:	call   QWORD PTR [r10-0x33]
   14003718a:	call   QWORD PTR [r10-0x33]
   14003718e:	call   QWORD PTR [r10-0x33]
   140037192:	call   QWORD PTR [r10-0x33]
   140037196:	call   QWORD PTR [r10-0x33]
   14003719a:	call   r13
   14003719d:	repz sar edi,1
   1400371a0:	(bad)  
   1400371a1:	(bad)  
   1400371a2:	(bad)  
   1400371a3:	(bad)  
   1400371a4:	(bad)  
   1400371a5:	(bad)  
   1400371a6:	(bad)  
   1400371a7:	(bad)  
   1400371a8:	fdivr  st(5),st
   1400371aa:	fcos   
   1400371ac:	push   rdx
   1400371ad:	int    0x41
   1400371af:	call   QWORD PTR [rdx-0x33]
   1400371b2:	inc    r15d
   1400371b5:	out    dx,eax
   1400371b6:	sar    edi,0xe8
   1400371b9:	clc    
   1400371ba:	out    0xff,al
   1400371bc:	repz sti 
   1400371be:	repnz (bad) 
   1400371c0:	(bad)  
   1400371c1:	(bad)  
   1400371c2:	(bad)  
   1400371c3:	(bad)  
   1400371c4:	(bad)  
   1400371c5:	(bad)  
   1400371c6:	(bad)  
   1400371c7:	(bad)  
   1400371c8:	sti    
   1400371c9:	(bad)  
   1400371ca:	sti    
   1400371cb:	(bad)  
   1400371cc:	call   0x1290358c9
   1400371d1:	clc    
   1400371d2:	out    0xff,al
   1400371d4:	call   0x1290358d1
   1400371d9:	clc    
   1400371da:	out    0xff,al
   1400371dc:	push   rbp
   1400371dd:	(bad)  
   1400371de:	rex.R call QWORD PTR [rdx-0x33]
   1400371e2:	call   QWORD PTR [r10-0x33]
   1400371e6:	call   QWORD PTR [r10-0x33]
   1400371ea:	call   QWORD PTR [r10-0x33]
   1400371ee:	call   QWORD PTR [r10-0x33]
   1400371f2:	call   QWORD PTR [r10-0x33]
   1400371f6:	call   QWORD PTR [r10-0x33]
   1400371fa:	call   QWORD PTR [r10-0x33]
   1400371fe:	call   QWORD PTR [r10-0x33]
   140037202:	inc    DWORD PTR [r8]
   140037205:	add    BYTE PTR [rax],al
   140037207:	xor    al,0x0
   140037209:	add    BYTE PTR [rax],al
   14003720b:	or     eax,0x1000000
	...
   140037238:	add    BYTE PTR [rax],al
   14003723a:	add    BYTE PTR [rcx],al
   14003723c:	add    BYTE PTR [rax],al
   14003723e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174037244
   140037244:	push   rdx
   140037245:	int    0x41
   140037247:	call   QWORD PTR [rdx-0x33]
   14003724a:	call   QWORD PTR [r10-0x33]
   14003724e:	call   QWORD PTR [r10-0x33]
   140037252:	call   QWORD PTR [r10-0x33]
   140037256:	call   QWORD PTR [r10-0x33]
   14003725a:	call   QWORD PTR [r10-0x33]
   14003725e:	call   QWORD PTR [r10-0x33]
   140037262:	call   QWORD PTR [r10-0x33]
   140037266:	call   QWORD PTR [r10-0x33]
   14003726a:	rex.B (bad) 
   14003726c:	(bad)  
   14003726e:	xlat   BYTE PTR ds:[rbx]
   14003726f:	(bad)  
   140037270:	(bad)  
   140037271:	(bad)  
   140037272:	(bad)  
   140037273:	(bad)  
   140037274:	(bad)  
   140037275:	(bad)  
   140037276:	(bad)  
   140037277:	(bad)  
   140037278:	jmp    0x140037273
   14003727a:	jmp    0x188d2cc7e
   14003727f:	call   QWORD PTR [rdx-0x33]
   140037282:	call   QWORD PTR [r10-0x33]
   140037286:	call   QWORD PTR [r10-0x33]
   14003728a:	call   QWORD PTR [r10-0x33]
   14003728e:	call   QWORD PTR [r10-0x33]
   140037292:	call   QWORD PTR [r10-0x33]
   140037296:	push   QWORD PTR [r9-0x2a]
   14003729a:	movsxd edi,edi
   14003729c:	(bad)  
   14003729d:	(bad)  
   14003729e:	(bad)  
   14003729f:	(bad)  
   1400372a0:	(bad)  
   1400372a1:	(bad)  
   1400372a2:	(bad)  
   1400372a3:	(bad)  
   1400372a4:	(bad)  
   1400372a5:	(bad)  
   1400372a6:	(bad)  
   1400372a7:	jmp    FWORD PTR [rax+0x52ffa0e6]
   1400372ad:	int    0x41
   1400372af:	call   QWORD PTR [rdx-0x33]
   1400372b2:	call   QWORD PTR [r10-0x33]
   1400372b6:	call   QWORD PTR [r10-0x33]
   1400372ba:	jmp    QWORD PTR [r9-0x671c]
   1400372c1:	(bad)  
   1400372c2:	(bad)  
   1400372c3:	(bad)  
   1400372c4:	(bad)  
   1400372c5:	(bad)  
   1400372c6:	(bad)  
   1400372c7:	jmp    rdx
   1400372c9:	neg    edi
   1400372cb:	call   QWORD PTR [rdx-0x33]
   1400372ce:	call   QWORD PTR [r10-0x33]
   1400372d2:	call   QWORD PTR [r10-0x33]
   1400372d6:	call   QWORD PTR [r10-0x33]
   1400372da:	call   QWORD PTR [r10-0x33]
   1400372de:	call   QWORD PTR [r10-0x33]
   1400372e2:	call   QWORD PTR [r10-0x33]
   1400372e6:	call   QWORD PTR [r10-0x33]
   1400372ea:	call   QWORD PTR [r10-0x33]
   1400372ee:	call   QWORD PTR [r10-0x33]
   1400372f2:	call   QWORD PTR [r10-0x33]
   1400372f6:	call   QWORD PTR [r10-0x33]
   1400372fa:	call   QWORD PTR [r10-0x33]
   1400372fe:	call   QWORD PTR [r10-0x33]
   140037302:	inc    DWORD PTR [r8]
   140037305:	add    BYTE PTR [rax],al
   140037307:	xor    al,0x0
   140037309:	add    BYTE PTR [rax],al
   14003730b:	or     eax,0x1000000
	...
   140037338:	add    BYTE PTR [rax],al
   14003733a:	add    BYTE PTR [rcx],al
   14003733c:	add    BYTE PTR [rax],al
   14003733e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174037344
   140037344:	push   rdx
   140037345:	int    0x41
   140037347:	call   QWORD PTR [rdx-0x33]
   14003734a:	call   QWORD PTR [r10-0x33]
   14003734e:	call   QWORD PTR [r10-0x33]
   140037352:	call   QWORD PTR [r10-0x33]
   140037356:	call   QWORD PTR [r10-0x33]
   14003735a:	call   QWORD PTR [r10-0x33]
   14003735e:	call   QWORD PTR [r10-0x33]
   140037362:	call   QWORD PTR [r10-0x33]
   140037366:	call   QWORD PTR [r10-0x33]
   14003736a:	call   FWORD PTR [r9-0x711f]
   140037371:	(bad)  
   140037372:	(bad)  
   140037373:	(bad)  
   140037374:	(bad)  
   140037375:	(bad)  
   140037376:	(bad)  
   140037377:	(bad)  
   140037378:	(bad)  
   140037379:	(bad)  
   14003737a:	(bad)  
   14003737b:	dec    eax
   14003737d:	out    dx,eax
   14003737e:	ret    
   14003737f:	call   FWORD PTR [rbx-0x30]
   140037382:	rex.WXB call QWORD PTR [r10-0x33]
   140037386:	call   QWORD PTR [r10-0x33]
   14003738a:	call   QWORD PTR [r10-0x33]
   14003738e:	call   QWORD PTR [r10-0x33]
   140037392:	jmp    FWORD PTR [r10-0x2c]
   140037396:	pop    rsp
   140037397:	jmp    rsp
   140037399:	mul    ecx
   14003739b:	(bad)  
   14003739c:	(bad)  
   14003739d:	(bad)  
   14003739e:	(bad)  
   14003739f:	(bad)  
   1400373a0:	(bad)  
   1400373a1:	(bad)  
   1400373a2:	(bad)  
   1400373a3:	(bad)  
   1400373a4:	cld    
   1400373a5:	(bad)  
   1400373a6:	cld    
   1400373a7:	jmp    FWORD PTR [rbx-0x2c]
   1400373aa:	pop    rbp
   1400373ab:	call   QWORD PTR [rdx-0x33]
   1400373ae:	call   QWORD PTR [r10-0x33]
   1400373b2:	call   QWORD PTR [r10-0x33]
   1400373b6:	call   QWORD PTR [r10-0x33]
   1400373ba:	jmp    QWORD PTR [r9-0x671c]
   1400373c1:	(bad)  
   1400373c2:	(bad)  
   1400373c3:	(bad)  
   1400373c4:	(bad)  
   1400373c5:	(bad)  
   1400373c6:	(bad)  
   1400373c7:	jmp    rdx
   1400373c9:	neg    edi
   1400373cb:	call   QWORD PTR [rdx-0x33]
   1400373ce:	call   QWORD PTR [r10-0x33]
   1400373d2:	call   QWORD PTR [r10-0x33]
   1400373d6:	call   QWORD PTR [r10-0x33]
   1400373da:	call   QWORD PTR [r10-0x33]
   1400373de:	call   QWORD PTR [r10-0x33]
   1400373e2:	call   QWORD PTR [r10-0x33]
   1400373e6:	call   QWORD PTR [r10-0x33]
   1400373ea:	call   QWORD PTR [r10-0x33]
   1400373ee:	call   QWORD PTR [r10-0x33]
   1400373f2:	call   QWORD PTR [r10-0x33]
   1400373f6:	call   QWORD PTR [r10-0x33]
   1400373fa:	call   QWORD PTR [r10-0x33]
   1400373fe:	call   QWORD PTR [r10-0x33]
   140037402:	inc    DWORD PTR [r8]
   140037405:	add    BYTE PTR [rax],al
   140037407:	xor    al,0x0
   140037409:	add    BYTE PTR [rax],al
   14003740b:	or     eax,0x1000000
	...
   140037438:	add    BYTE PTR [rax],al
   14003743a:	add    BYTE PTR [rcx],al
   14003743c:	add    BYTE PTR [rax],al
   14003743e:	add    BYTE PTR [rip+0x33000000],cl        # 0x173037444
   140037444:	push   rdx
   140037445:	int    0x41
   140037447:	call   QWORD PTR [rdx-0x33]
   14003744a:	call   QWORD PTR [r10-0x33]
   14003744e:	call   QWORD PTR [r10-0x33]
   140037452:	call   QWORD PTR [r10-0x33]
   140037456:	call   QWORD PTR [r10-0x33]
   14003745a:	call   QWORD PTR [r10-0x33]
   14003745e:	call   QWORD PTR [r10-0x33]
   140037462:	call   QWORD PTR [r10-0x33]
   140037466:	call   QWORD PTR [r10-0x33]
   14003746a:	call   QWORD PTR [r13-0x32]
   14003746e:	rex.RB jmp r11
   140037471:	mul    eax
   140037473:	(bad)  
   140037474:	(bad)  
   140037475:	(bad)  
   140037476:	(bad)  
   140037477:	(bad)  
   140037478:	(bad)  
   140037479:	(bad)  
   14003747a:	(bad)  
   14003747b:	(bad)  
   14003747c:	(bad)  
   14003747d:	(bad)  
   14003747e:	(bad)  
   14003747f:	push   rbx
   140037481:	sti    
   140037482:	repnz inc ebx
   140037485:	out    dx,al
   140037486:	mov    ebp,0xa4e7acff
   14003748b:	push   QWORD PTR [rcx-0x33005618]
   140037491:	lock (bad) 
   140037493:	(bad)  
   140037494:	cli    
   140037495:	(bad)  
   140037496:	cli    
   140037497:	(bad)  
   140037498:	(bad)  
   140037499:	(bad)  
   14003749a:	(bad)  
   14003749b:	(bad)  
   14003749c:	(bad)  
   14003749d:	(bad)  
   14003749e:	(bad)  
   14003749f:	(bad)  
   1400374a0:	(bad)  
   1400374a1:	(bad)  
   1400374a2:	(bad)  
   1400374a3:	push   QWORD PTR [rdi+0x52ffb0ea]
   1400374a9:	int    0x41
   1400374ab:	call   QWORD PTR [rdx-0x33]
   1400374ae:	call   QWORD PTR [r10-0x33]
   1400374b2:	call   QWORD PTR [r10-0x33]
   1400374b6:	call   QWORD PTR [r10-0x33]
   1400374ba:	jmp    QWORD PTR [r9-0x671c]
   1400374c1:	(bad)  
   1400374c2:	(bad)  
   1400374c3:	(bad)  
   1400374c4:	(bad)  
   1400374c5:	(bad)  
   1400374c6:	(bad)  
   1400374c7:	jmp    rdx
   1400374c9:	neg    edi
   1400374cb:	call   QWORD PTR [rdx-0x33]
   1400374ce:	call   QWORD PTR [r10-0x33]
   1400374d2:	call   QWORD PTR [r10-0x33]
   1400374d6:	call   QWORD PTR [r10-0x33]
   1400374da:	call   QWORD PTR [r10-0x33]
   1400374de:	call   QWORD PTR [r10-0x33]
   1400374e2:	call   QWORD PTR [r10-0x33]
   1400374e6:	call   QWORD PTR [r10-0x33]
   1400374ea:	call   QWORD PTR [r10-0x33]
   1400374ee:	call   QWORD PTR [r10-0x33]
   1400374f2:	call   QWORD PTR [r10-0x33]
   1400374f6:	call   QWORD PTR [r10-0x33]
   1400374fa:	call   QWORD PTR [r10-0x33]
   1400374fe:	call   QWORD PTR [r10-0x33]
   140037502:	inc    DWORD PTR [r8]
   140037505:	add    BYTE PTR [rax],al
   140037507:	xor    al,0x0
   140037509:	add    BYTE PTR [rax],al
   14003750b:	or     eax,0x1000000
	...
   140037538:	add    BYTE PTR [rax],al
   14003753a:	add    BYTE PTR [rcx],al
   14003753c:	add    BYTE PTR [rax],al
   14003753e:	add    BYTE PTR [rbx],cl
   140037540:	add    BYTE PTR [rax],al
   140037542:	add    BYTE PTR [rsi],ch
   140037544:	push   rdx
   140037545:	int    0x41
   140037547:	call   QWORD PTR [rdx-0x33]
   14003754a:	call   QWORD PTR [r10-0x33]
   14003754e:	call   QWORD PTR [r10-0x33]
   140037552:	call   QWORD PTR [r10-0x33]
   140037556:	call   QWORD PTR [r10-0x33]
   14003755a:	call   QWORD PTR [r10-0x33]
   14003755e:	call   QWORD PTR [r10-0x33]
   140037562:	call   QWORD PTR [r10-0x33]
   140037566:	call   QWORD PTR [r10-0x33]
   14003756a:	call   QWORD PTR [r10-0x33]
   14003756e:	jmp    FWORD PTR [r9-0x2c]
   140037572:	pop    rdx
   140037573:	(bad)  
   140037574:	in     eax,dx
   140037575:	cli    
   140037576:	in     al,dx
   140037577:	(bad)  
   140037578:	(bad)  
   140037579:	(bad)  
   14003757a:	(bad)  
   14003757b:	(bad)  
   14003757c:	(bad)  
   14003757d:	(bad)  
   14003757e:	(bad)  
   14003757f:	(bad)  
   140037580:	(bad)  
   140037581:	(bad)  
   140037582:	(bad)  
   140037583:	(bad)  
   140037584:	(bad)  
   140037585:	(bad)  
   140037586:	(bad)  
   140037587:	(bad)  
   140037588:	(bad)  
   140037589:	(bad)  
   14003758a:	(bad)  
   14003758b:	(bad)  
   14003758c:	(bad)  
   14003758d:	(bad)  
   14003758e:	(bad)  
   14003758f:	(bad)  
   140037590:	(bad)  
   140037591:	(bad)  
   140037592:	(bad)  
   140037593:	(bad)  
   140037594:	(bad)  
   140037595:	(bad)  
   140037596:	(bad)  
   140037597:	(bad)  
   140037598:	(bad)  
   140037599:	(bad)  
   14003759a:	(bad)  
   14003759b:	(bad)  
   14003759c:	(bad)  
   14003759d:	(bad)  
   14003759e:	(bad)  
   14003759f:	call   rcx
   1400375a1:	repnz int3 
   1400375a3:	call   QWORD PTR [rdi-0x31]
   1400375a6:	rex.RXB call QWORD PTR [r10-0x33]
   1400375aa:	call   QWORD PTR [r10-0x33]
   1400375ae:	call   QWORD PTR [r10-0x33]
   1400375b2:	call   QWORD PTR [r10-0x33]
   1400375b6:	call   QWORD PTR [r10-0x33]
   1400375ba:	jmp    QWORD PTR [r9-0x671c]
   1400375c1:	(bad)  
   1400375c2:	(bad)  
   1400375c3:	(bad)  
   1400375c4:	(bad)  
   1400375c5:	(bad)  
   1400375c6:	(bad)  
   1400375c7:	jmp    rdx
   1400375c9:	neg    edi
   1400375cb:	call   QWORD PTR [rdx-0x33]
   1400375ce:	call   QWORD PTR [r10-0x33]
   1400375d2:	call   QWORD PTR [r10-0x33]
   1400375d6:	call   QWORD PTR [r10-0x33]
   1400375da:	call   QWORD PTR [r10-0x33]
   1400375de:	call   QWORD PTR [r10-0x33]
   1400375e2:	call   QWORD PTR [r10-0x33]
   1400375e6:	call   QWORD PTR [r10-0x33]
   1400375ea:	call   QWORD PTR [r10-0x33]
   1400375ee:	call   QWORD PTR [r10-0x33]
   1400375f2:	call   QWORD PTR [r10-0x33]
   1400375f6:	call   QWORD PTR [r10-0x33]
   1400375fa:	call   QWORD PTR [r10-0x33]
   1400375fe:	call   QWORD PTR [r10-0x33]
   140037602:	inc    DWORD PTR [r8]
   140037605:	add    BYTE PTR [rax],al
   140037607:	xor    al,0x0
   140037609:	add    BYTE PTR [rax],al
   14003760b:	or     eax,0x1000000
	...
   140037638:	add    BYTE PTR [rax],al
   14003763a:	add    BYTE PTR [rcx],al
   14003763c:	add    BYTE PTR [rax],al
   14003763e:	add    BYTE PTR [rax],cl
   140037640:	add    BYTE PTR [rax],al
   140037642:	add    BYTE PTR [rdx+rdx*2],ah
   140037645:	int    0x41
   140037647:	call   QWORD PTR [rdx-0x33]
   14003764a:	call   QWORD PTR [r10-0x33]
   14003764e:	call   QWORD PTR [r10-0x33]
   140037652:	call   QWORD PTR [r10-0x33]
   140037656:	call   QWORD PTR [r10-0x33]
   14003765a:	call   QWORD PTR [r10-0x33]
   14003765e:	call   QWORD PTR [r10-0x33]
   140037662:	call   QWORD PTR [r10-0x33]
   140037666:	call   QWORD PTR [r10-0x33]
   14003766a:	call   QWORD PTR [r10-0x33]
   14003766e:	call   QWORD PTR [r10-0x33]
   140037672:	jmp    QWORD PTR [r8-0x2f]
   140037676:	push   rax
   140037677:	push   QWORD PTR [rsi-0x8005016]
   14003767d:	std    
   14003767e:	idiv   bh
   140037680:	(bad)  
   140037681:	(bad)  
   140037682:	(bad)  
   140037683:	(bad)  
   140037684:	(bad)  
   140037685:	(bad)  
   140037686:	(bad)  
   140037687:	(bad)  
   140037688:	(bad)  
   140037689:	(bad)  
   14003768a:	(bad)  
   14003768b:	(bad)  
   14003768c:	(bad)  
   14003768d:	(bad)  
   14003768e:	(bad)  
   14003768f:	(bad)  
   140037690:	(bad)  
   140037691:	(bad)  
   140037692:	(bad)  
   140037693:	(bad)  
   140037694:	(bad)  
   140037695:	(bad)  
   140037696:	(bad)  
   140037697:	(bad)  
   140037698:	in     eax,dx
   140037699:	cli    
   14003769a:	in     al,dx
   14003769b:	call   FWORD PTR [rsi+0x55ff94e3]
   1400376a1:	(bad)  
   1400376a2:	rex.RB call QWORD PTR [r10-0x33]
   1400376a6:	call   QWORD PTR [r10-0x33]
   1400376aa:	call   QWORD PTR [r10-0x33]
   1400376ae:	call   QWORD PTR [r10-0x33]
   1400376b2:	call   QWORD PTR [r10-0x33]
   1400376b6:	call   QWORD PTR [r10-0x33]
   1400376ba:	jmp    QWORD PTR [r15-0x2d]
   1400376be:	pop    rax
   1400376bf:	inc    DWORD PTR [rax-0x7f008b26]
   1400376c5:	fidiv  DWORD PTR [rdi+rdi*8+0x79]
   1400376c9:	fsubr  DWORD PTR [rbx-0x1]
   1400376cc:	push   rdx
   1400376cd:	int    0x41
   1400376cf:	call   QWORD PTR [rdx-0x33]
   1400376d2:	call   QWORD PTR [r10-0x33]
   1400376d6:	call   QWORD PTR [r10-0x33]
   1400376da:	call   QWORD PTR [r10-0x33]
   1400376de:	call   QWORD PTR [r10-0x33]
   1400376e2:	call   QWORD PTR [r10-0x33]
   1400376e6:	call   QWORD PTR [r10-0x33]
   1400376ea:	call   QWORD PTR [r10-0x33]
   1400376ee:	call   QWORD PTR [r10-0x33]
   1400376f2:	call   QWORD PTR [r10-0x33]
   1400376f6:	call   QWORD PTR [r10-0x33]
   1400376fa:	call   QWORD PTR [r10-0x33]
   1400376fe:	call   QWORD PTR [r10-0x33]
   140037702:	inc    DWORD PTR [r8]
   140037705:	add    BYTE PTR [rax],al
   140037707:	xor    al,0x0
   140037709:	add    BYTE PTR [rax],al
   14003770b:	or     eax,0x1000000
	...
   14003773c:	add    BYTE PTR [rax],al
   14003773e:	add    BYTE PTR [rax+rax*1],al
   140037741:	add    BYTE PTR [rax],al
   140037743:	adc    eax,0x9b36a944
   140037748:	push   rdx
   140037749:	int    0x41
   14003774b:	call   QWORD PTR [rdx-0x33]
   14003774e:	call   QWORD PTR [r10-0x33]
   140037752:	call   QWORD PTR [r10-0x33]
   140037756:	call   QWORD PTR [r10-0x33]
   14003775a:	call   QWORD PTR [r10-0x33]
   14003775e:	call   QWORD PTR [r10-0x33]
   140037762:	call   QWORD PTR [r10-0x33]
   140037766:	call   QWORD PTR [r10-0x33]
   14003776a:	call   QWORD PTR [r10-0x33]
   14003776e:	call   QWORD PTR [r10-0x33]
   140037772:	call   QWORD PTR [r10-0x33]
   140037776:	call   QWORD PTR [r10-0x33]
   14003777a:	call   QWORD PTR [r13-0x32]
   14003777e:	rex.RB (bad) 
   140037780:	jl     0x14003775b
   140037782:	outs   dx,DWORD PTR ds:[rsi]
   140037783:	call   QWORD PTR [rcx-0x61007921]
   140037789:	jrcxz  0x14003771f
   14003778b:	call   FWORD PTR [rbx-0x71006e1e]
   140037791:	fiadd  WORD PTR [rbx+0x63d671ff]
   140037797:	call   QWORD PTR [rdx-0x33]
   14003779a:	call   QWORD PTR [r10-0x33]
   14003779e:	call   QWORD PTR [r10-0x33]
   1400377a2:	call   QWORD PTR [r10-0x33]
   1400377a6:	call   QWORD PTR [r10-0x33]
   1400377aa:	call   QWORD PTR [r10-0x33]
   1400377ae:	call   QWORD PTR [r10-0x33]
   1400377b2:	call   QWORD PTR [r10-0x33]
   1400377b6:	call   QWORD PTR [r10-0x33]
   1400377ba:	call   QWORD PTR [r10-0x33]
   1400377be:	call   QWORD PTR [r10-0x33]
   1400377c2:	call   QWORD PTR [r10-0x33]
   1400377c6:	call   QWORD PTR [r10-0x33]
   1400377ca:	call   QWORD PTR [r10-0x33]
   1400377ce:	call   QWORD PTR [r10-0x33]
   1400377d2:	call   QWORD PTR [r10-0x33]
   1400377d6:	call   QWORD PTR [r10-0x33]
   1400377da:	call   QWORD PTR [r10-0x33]
   1400377de:	call   QWORD PTR [r10-0x33]
   1400377e2:	call   QWORD PTR [r10-0x33]
   1400377e6:	call   QWORD PTR [r10-0x33]
   1400377ea:	call   QWORD PTR [r10-0x33]
   1400377ee:	call   QWORD PTR [r10-0x33]
   1400377f2:	call   QWORD PTR [r10-0x33]
   1400377f6:	call   QWORD PTR [r10-0x33]
   1400377fa:	call   QWORD PTR [r10-0x33]
   1400377fe:	call   QWORD PTR [r10-0x33]
   140037802:	inc    DWORD PTR [r8]
   140037805:	add    BYTE PTR [rax],al
   140037807:	xor    al,0x0
   140037809:	add    BYTE PTR [rax],al
   14003780b:	or     eax,0x1000000
	...
   14003783c:	add    BYTE PTR [rax],al
   14003783e:	add    BYTE PTR [rdx],al
   140037840:	add    BYTE PTR [rax],al
   140037842:	add    BYTE PTR [rcx],cl
   140037844:	add    BYTE PTR [rax],al
   140037846:	add    BYTE PTR [rbx+rax*2],bl
   140037849:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003784a:	ss popf 
   14003784c:	push   rdx
   14003784d:	int    0x41
   14003784f:	call   QWORD PTR [rdx-0x33]
   140037852:	call   QWORD PTR [r10-0x33]
   140037856:	call   QWORD PTR [r10-0x33]
   14003785a:	call   QWORD PTR [r10-0x33]
   14003785e:	call   QWORD PTR [r10-0x33]
   140037862:	call   QWORD PTR [r10-0x33]
   140037866:	call   QWORD PTR [r10-0x33]
   14003786a:	call   QWORD PTR [r10-0x33]
   14003786e:	call   QWORD PTR [r10-0x33]
   140037872:	call   QWORD PTR [r10-0x33]
   140037876:	call   QWORD PTR [r10-0x33]
   14003787a:	call   QWORD PTR [r10-0x33]
   14003787e:	call   QWORD PTR [r10-0x33]
   140037882:	call   QWORD PTR [r10-0x33]
   140037886:	call   QWORD PTR [r10-0x33]
   14003788a:	call   QWORD PTR [r10-0x33]
   14003788e:	call   QWORD PTR [r10-0x33]
   140037892:	call   QWORD PTR [r10-0x33]
   140037896:	call   QWORD PTR [r10-0x33]
   14003789a:	call   QWORD PTR [r10-0x33]
   14003789e:	call   QWORD PTR [r10-0x33]
   1400378a2:	call   QWORD PTR [r10-0x33]
   1400378a6:	call   QWORD PTR [r10-0x33]
   1400378aa:	call   QWORD PTR [r10-0x33]
   1400378ae:	call   QWORD PTR [r10-0x33]
   1400378b2:	call   QWORD PTR [r10-0x33]
   1400378b6:	call   QWORD PTR [r10-0x33]
   1400378ba:	call   QWORD PTR [r10-0x33]
   1400378be:	call   QWORD PTR [r10-0x33]
   1400378c2:	call   QWORD PTR [r10-0x33]
   1400378c6:	call   QWORD PTR [r10-0x33]
   1400378ca:	call   QWORD PTR [r10-0x33]
   1400378ce:	call   QWORD PTR [r10-0x33]
   1400378d2:	call   QWORD PTR [r10-0x33]
   1400378d6:	call   QWORD PTR [r10-0x33]
   1400378da:	call   QWORD PTR [r10-0x33]
   1400378de:	call   QWORD PTR [r10-0x33]
   1400378e2:	call   QWORD PTR [r10-0x33]
   1400378e6:	call   QWORD PTR [r10-0x33]
   1400378ea:	call   QWORD PTR [r10-0x33]
   1400378ee:	call   QWORD PTR [r10-0x33]
   1400378f2:	call   QWORD PTR [r10-0x33]
   1400378f6:	call   QWORD PTR [r10-0x33]
   1400378fa:	call   QWORD PTR [r10-0x33]
   1400378fe:	call   QWORD PTR [r10-0x33]
   140037902:	inc    DWORD PTR [r8]
   140037905:	add    BYTE PTR [rax],al
   140037907:	xor    al,0x0
   140037909:	add    BYTE PTR [rax],al
   14003790b:	or     eax,0x1000000
	...
   140037940:	add    BYTE PTR [rax],al
   140037942:	add    BYTE PTR [rdx],al
   140037944:	add    BYTE PTR [rax],al
   140037946:	add    BYTE PTR [rdx],cl
   140037948:	add    BYTE PTR [rax],al
   14003794a:	add    BYTE PTR [rbx+rax*2],bl
   14003794d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003794e:	ss popf 
   140037950:	push   rdx
   140037951:	int    0x41
   140037953:	call   QWORD PTR [rdx-0x33]
   140037956:	call   QWORD PTR [r10-0x33]
   14003795a:	call   QWORD PTR [r10-0x33]
   14003795e:	call   QWORD PTR [r10-0x33]
   140037962:	call   QWORD PTR [r10-0x33]
   140037966:	call   QWORD PTR [r10-0x33]
   14003796a:	call   QWORD PTR [r10-0x33]
   14003796e:	call   QWORD PTR [r10-0x33]
   140037972:	call   QWORD PTR [r10-0x33]
   140037976:	call   QWORD PTR [r10-0x33]
   14003797a:	call   QWORD PTR [r10-0x33]
   14003797e:	call   QWORD PTR [r10-0x33]
   140037982:	call   QWORD PTR [r10-0x33]
   140037986:	call   QWORD PTR [r10-0x33]
   14003798a:	call   QWORD PTR [r10-0x33]
   14003798e:	call   QWORD PTR [r10-0x33]
   140037992:	call   QWORD PTR [r10-0x33]
   140037996:	call   QWORD PTR [r10-0x33]
   14003799a:	call   QWORD PTR [r10-0x33]
   14003799e:	call   QWORD PTR [r10-0x33]
   1400379a2:	call   QWORD PTR [r10-0x33]
   1400379a6:	call   QWORD PTR [r10-0x33]
   1400379aa:	call   QWORD PTR [r10-0x33]
   1400379ae:	call   QWORD PTR [r10-0x33]
   1400379b2:	call   QWORD PTR [r10-0x33]
   1400379b6:	call   QWORD PTR [r10-0x33]
   1400379ba:	call   QWORD PTR [r10-0x33]
   1400379be:	call   QWORD PTR [r10-0x33]
   1400379c2:	call   QWORD PTR [r10-0x33]
   1400379c6:	call   QWORD PTR [r10-0x33]
   1400379ca:	call   QWORD PTR [r10-0x33]
   1400379ce:	call   QWORD PTR [r10-0x33]
   1400379d2:	call   QWORD PTR [r10-0x33]
   1400379d6:	call   QWORD PTR [r10-0x33]
   1400379da:	call   QWORD PTR [r10-0x33]
   1400379de:	call   QWORD PTR [r10-0x33]
   1400379e2:	call   QWORD PTR [r10-0x33]
   1400379e6:	call   QWORD PTR [r10-0x33]
   1400379ea:	call   QWORD PTR [r10-0x33]
   1400379ee:	call   QWORD PTR [r10-0x33]
   1400379f2:	call   QWORD PTR [r10-0x33]
   1400379f6:	call   QWORD PTR [r10-0x33]
   1400379fa:	call   QWORD PTR [r10-0x33]
   1400379fe:	call   QWORD PTR [r10-0x33]
   140037a02:	inc    DWORD PTR [r8]
   140037a05:	add    BYTE PTR [rax],al
   140037a07:	xor    al,0x0
   140037a09:	add    BYTE PTR [rax],al
   140037a0b:	or     eax,0x1000000
	...
   140037a44:	add    BYTE PTR [rax],al
   140037a46:	add    BYTE PTR [rbx],al
   140037a48:	add    BYTE PTR [rax],al
   140037a4a:	add    BYTE PTR [rdx],cl
   140037a4c:	add    BYTE PTR [rax],al
   140037a4e:	add    BYTE PTR [rbx+rax*2],bl
   140037a51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140037a52:	ss popf 
   140037a54:	push   rdx
   140037a55:	int    0x41
   140037a57:	call   QWORD PTR [rdx-0x33]
   140037a5a:	call   QWORD PTR [r10-0x33]
   140037a5e:	call   QWORD PTR [r10-0x33]
   140037a62:	call   QWORD PTR [r10-0x33]
   140037a66:	call   QWORD PTR [r10-0x33]
   140037a6a:	call   QWORD PTR [r10-0x33]
   140037a6e:	call   QWORD PTR [r10-0x33]
   140037a72:	call   QWORD PTR [r10-0x33]
   140037a76:	call   QWORD PTR [r10-0x33]
   140037a7a:	call   QWORD PTR [r10-0x33]
   140037a7e:	call   QWORD PTR [r10-0x33]
   140037a82:	call   QWORD PTR [r10-0x33]
   140037a86:	call   QWORD PTR [r10-0x33]
   140037a8a:	call   QWORD PTR [r10-0x33]
   140037a8e:	call   QWORD PTR [r10-0x33]
   140037a92:	call   QWORD PTR [r10-0x33]
   140037a96:	call   QWORD PTR [r10-0x33]
   140037a9a:	call   QWORD PTR [r10-0x33]
   140037a9e:	call   QWORD PTR [r10-0x33]
   140037aa2:	call   QWORD PTR [r10-0x33]
   140037aa6:	call   QWORD PTR [r10-0x33]
   140037aaa:	call   QWORD PTR [r10-0x33]
   140037aae:	call   QWORD PTR [r10-0x33]
   140037ab2:	call   QWORD PTR [r10-0x33]
   140037ab6:	call   QWORD PTR [r10-0x33]
   140037aba:	call   QWORD PTR [r10-0x33]
   140037abe:	call   QWORD PTR [r10-0x33]
   140037ac2:	call   QWORD PTR [r10-0x33]
   140037ac6:	call   QWORD PTR [r10-0x33]
   140037aca:	call   QWORD PTR [r10-0x33]
   140037ace:	call   QWORD PTR [r10-0x33]
   140037ad2:	call   QWORD PTR [r10-0x33]
   140037ad6:	call   QWORD PTR [r10-0x33]
   140037ada:	call   QWORD PTR [r10-0x33]
   140037ade:	call   QWORD PTR [r10-0x33]
   140037ae2:	call   QWORD PTR [r10-0x33]
   140037ae6:	call   QWORD PTR [r10-0x33]
   140037aea:	call   QWORD PTR [r10-0x33]
   140037aee:	call   QWORD PTR [r10-0x33]
   140037af2:	call   QWORD PTR [r10-0x33]
   140037af6:	call   QWORD PTR [r10-0x33]
   140037afa:	call   QWORD PTR [r10-0x33]
   140037afe:	call   QWORD PTR [r10-0x33]
   140037b02:	inc    DWORD PTR [r8]
   140037b05:	add    BYTE PTR [rax],al
   140037b07:	xor    al,0x0
   140037b09:	add    BYTE PTR [rax],al
   140037b0b:	or     eax,0x1000000
	...
   140037b48:	add    BYTE PTR [rax],al
   140037b4a:	add    BYTE PTR [rbx],al
   140037b4c:	add    BYTE PTR [rax],al
   140037b4e:	add    BYTE PTR [rdx],cl
   140037b50:	add    BYTE PTR [rax],al
   140037b52:	add    BYTE PTR [rbx+rax*2],bl
   140037b55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140037b56:	ss popf 
   140037b58:	push   rdx
   140037b59:	int    0x41
   140037b5b:	call   QWORD PTR [rdx-0x33]
   140037b5e:	call   QWORD PTR [r10-0x33]
   140037b62:	call   QWORD PTR [r10-0x33]
   140037b66:	call   QWORD PTR [r10-0x33]
   140037b6a:	call   QWORD PTR [r10-0x33]
   140037b6e:	call   QWORD PTR [r10-0x33]
   140037b72:	call   QWORD PTR [r10-0x33]
   140037b76:	call   QWORD PTR [r10-0x33]
   140037b7a:	call   QWORD PTR [r10-0x33]
   140037b7e:	call   QWORD PTR [r10-0x33]
   140037b82:	call   QWORD PTR [r10-0x33]
   140037b86:	call   QWORD PTR [r10-0x33]
   140037b8a:	call   QWORD PTR [r10-0x33]
   140037b8e:	call   QWORD PTR [r10-0x33]
   140037b92:	call   QWORD PTR [r10-0x33]
   140037b96:	call   QWORD PTR [r10-0x33]
   140037b9a:	call   QWORD PTR [r10-0x33]
   140037b9e:	call   QWORD PTR [r10-0x33]
   140037ba2:	call   QWORD PTR [r10-0x33]
   140037ba6:	call   QWORD PTR [r10-0x33]
   140037baa:	call   QWORD PTR [r10-0x33]
   140037bae:	call   QWORD PTR [r10-0x33]
   140037bb2:	call   QWORD PTR [r10-0x33]
   140037bb6:	call   QWORD PTR [r10-0x33]
   140037bba:	call   QWORD PTR [r10-0x33]
   140037bbe:	call   QWORD PTR [r10-0x33]
   140037bc2:	call   QWORD PTR [r10-0x33]
   140037bc6:	call   QWORD PTR [r10-0x33]
   140037bca:	call   QWORD PTR [r10-0x33]
   140037bce:	call   QWORD PTR [r10-0x33]
   140037bd2:	call   QWORD PTR [r10-0x33]
   140037bd6:	call   QWORD PTR [r10-0x33]
   140037bda:	call   QWORD PTR [r10-0x33]
   140037bde:	call   QWORD PTR [r10-0x33]
   140037be2:	call   QWORD PTR [r10-0x33]
   140037be6:	call   QWORD PTR [r10-0x33]
   140037bea:	call   QWORD PTR [r10-0x33]
   140037bee:	call   QWORD PTR [r10-0x33]
   140037bf2:	call   QWORD PTR [r10-0x33]
   140037bf6:	call   QWORD PTR [r10-0x33]
   140037bfa:	call   QWORD PTR [r10-0x33]
   140037bfe:	call   QWORD PTR [r10-0x33]
   140037c02:	inc    DWORD PTR [r8]
   140037c05:	add    BYTE PTR [rax],al
   140037c07:	xor    al,BYTE PTR [rax]
   140037c09:	add    BYTE PTR [rax],al
   140037c0b:	or     al,0x0
   140037c0d:	add    BYTE PTR [rax],al
   140037c0f:	add    DWORD PTR [rax],eax
	...
   140037c4d:	add    BYTE PTR [rax],al
   140037c4f:	add    eax,DWORD PTR [rax]
   140037c51:	add    BYTE PTR [rax],al
   140037c53:	or     al,BYTE PTR [rax]
   140037c55:	add    BYTE PTR [rax],al
   140037c57:	sbb    al,0x43
   140037c59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140037c5a:	ss pushf 
   140037c5c:	push   rdx
   140037c5d:	int    0x41
   140037c5f:	call   QWORD PTR [rdx-0x33]
   140037c62:	call   QWORD PTR [r10-0x33]
   140037c66:	call   QWORD PTR [r10-0x33]
   140037c6a:	call   QWORD PTR [r10-0x33]
   140037c6e:	call   QWORD PTR [r10-0x33]
   140037c72:	call   QWORD PTR [r10-0x33]
   140037c76:	call   QWORD PTR [r10-0x33]
   140037c7a:	call   QWORD PTR [r10-0x33]
   140037c7e:	call   QWORD PTR [r10-0x33]
   140037c82:	call   QWORD PTR [r10-0x33]
   140037c86:	call   QWORD PTR [r10-0x33]
   140037c8a:	call   QWORD PTR [r10-0x33]
   140037c8e:	call   QWORD PTR [r10-0x33]
   140037c92:	call   QWORD PTR [r10-0x33]
   140037c96:	call   QWORD PTR [r10-0x33]
   140037c9a:	call   QWORD PTR [r10-0x33]
   140037c9e:	call   QWORD PTR [r10-0x33]
   140037ca2:	call   QWORD PTR [r10-0x33]
   140037ca6:	call   QWORD PTR [r10-0x33]
   140037caa:	call   QWORD PTR [r10-0x33]
   140037cae:	call   QWORD PTR [r10-0x33]
   140037cb2:	call   QWORD PTR [r10-0x33]
   140037cb6:	call   QWORD PTR [r10-0x33]
   140037cba:	call   QWORD PTR [r10-0x33]
   140037cbe:	call   QWORD PTR [r10-0x33]
   140037cc2:	call   QWORD PTR [r10-0x33]
   140037cc6:	call   QWORD PTR [r10-0x33]
   140037cca:	call   QWORD PTR [r10-0x33]
   140037cce:	call   QWORD PTR [r10-0x33]
   140037cd2:	call   QWORD PTR [r10-0x33]
   140037cd6:	call   QWORD PTR [r10-0x33]
   140037cda:	call   QWORD PTR [r10-0x33]
   140037cde:	call   QWORD PTR [r10-0x33]
   140037ce2:	call   QWORD PTR [r10-0x33]
   140037ce6:	call   QWORD PTR [r10-0x33]
   140037cea:	call   QWORD PTR [r10-0x33]
   140037cee:	call   QWORD PTR [r10-0x33]
   140037cf2:	call   QWORD PTR [r10-0x33]
   140037cf6:	call   QWORD PTR [r10-0x33]
   140037cfa:	call   QWORD PTR [r10-0x33]
   140037cfe:	call   QWORD PTR [r10-0x33]
   140037d02:	inc    DWORD PTR [r8]
   140037d05:	add    BYTE PTR [rax],al
   140037d07:	sub    DWORD PTR [rax],eax
   140037d09:	add    BYTE PTR [rax],al
   140037d0b:	or     al,BYTE PTR [rax]
   140037d0d:	add    BYTE PTR [rax],al
   140037d0f:	add    DWORD PTR [rax],eax
	...
   140037d51:	add    BYTE PTR [rax],al
   140037d53:	add    eax,DWORD PTR [rax]
   140037d55:	add    BYTE PTR [rax],al
   140037d57:	or     al,BYTE PTR [rax]
   140037d59:	add    BYTE PTR [rax],al
   140037d5b:	sbb    al,BYTE PTR [rbp-0x53]
   140037d5e:	(bad)  
   140037d5f:	xchg   edi,eax
   140037d60:	push   rdx
   140037d61:	int    0x41
   140037d63:	call   QWORD PTR [rdx-0x33]
   140037d66:	call   QWORD PTR [r10-0x33]
   140037d6a:	call   QWORD PTR [r10-0x33]
   140037d6e:	call   QWORD PTR [r10-0x33]
   140037d72:	call   QWORD PTR [r10-0x33]
   140037d76:	call   QWORD PTR [r10-0x33]
   140037d7a:	call   QWORD PTR [r10-0x33]
   140037d7e:	call   QWORD PTR [r10-0x33]
   140037d82:	call   QWORD PTR [r10-0x33]
   140037d86:	call   QWORD PTR [r10-0x33]
   140037d8a:	call   QWORD PTR [r10-0x33]
   140037d8e:	call   QWORD PTR [r10-0x33]
   140037d92:	call   QWORD PTR [r10-0x33]
   140037d96:	call   QWORD PTR [r10-0x33]
   140037d9a:	call   QWORD PTR [r10-0x33]
   140037d9e:	call   QWORD PTR [r10-0x33]
   140037da2:	call   QWORD PTR [r10-0x33]
   140037da6:	call   QWORD PTR [r10-0x33]
   140037daa:	call   QWORD PTR [r10-0x33]
   140037dae:	call   QWORD PTR [r10-0x33]
   140037db2:	call   QWORD PTR [r10-0x33]
   140037db6:	call   QWORD PTR [r10-0x33]
   140037dba:	call   QWORD PTR [r10-0x33]
   140037dbe:	call   QWORD PTR [r10-0x33]
   140037dc2:	call   QWORD PTR [r10-0x33]
   140037dc6:	call   QWORD PTR [r10-0x33]
   140037dca:	call   QWORD PTR [r10-0x33]
   140037dce:	call   QWORD PTR [r10-0x33]
   140037dd2:	call   QWORD PTR [r10-0x33]
   140037dd6:	call   QWORD PTR [r10-0x33]
   140037dda:	call   QWORD PTR [r10-0x33]
   140037dde:	call   QWORD PTR [r10-0x33]
   140037de2:	call   QWORD PTR [r10-0x33]
   140037de6:	call   QWORD PTR [r10-0x33]
   140037dea:	call   QWORD PTR [r10-0x33]
   140037dee:	call   QWORD PTR [r10-0x33]
   140037df2:	call   QWORD PTR [r10-0x33]
   140037df6:	call   QWORD PTR [r10-0x33]
   140037dfa:	call   QWORD PTR [r10-0x33]
   140037dfe:	call   QWORD PTR [r10-0x33]
   140037e02:	inc    DWORD PTR [r8]
   140037e05:	add    BYTE PTR [rax],al
   140037e07:	sbb    DWORD PTR [rax],eax
   140037e09:	add    BYTE PTR [rax],al
   140037e0b:	(bad)  
   140037e0c:	add    BYTE PTR [rax],al
   140037e0e:	add    BYTE PTR [rcx],al
	...
   140037e54:	add    BYTE PTR [rax],al
   140037e56:	add    BYTE PTR [rdx],al
   140037e58:	add    BYTE PTR [rax],al
   140037e5a:	add    BYTE PTR [rdi],al
   140037e5c:	add    BYTE PTR [rax],al
   140037e5e:	add    BYTE PTR [rax],dl
   140037e60:	add    BYTE PTR [rax],al
   140037e62:	add    BYTE PTR [rax],bl
   140037e64:	add    BYTE PTR [rax],al
   140037e66:	add    BYTE PTR [rbx],bl
   140037e68:	add    BYTE PTR [rax],al
   140037e6a:	add    BYTE PTR [rax+rax*1],bl
   140037e6d:	add    BYTE PTR [rax],al
   140037e6f:	sbb    eax,0x1d000000
   140037e74:	add    BYTE PTR [rax],al
   140037e76:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037e7c
   140037e7c:	add    BYTE PTR [rax],al
   140037e7e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037e84
   140037e84:	add    BYTE PTR [rax],al
   140037e86:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037e8c
   140037e8c:	add    BYTE PTR [rax],al
   140037e8e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037e94
   140037e94:	add    BYTE PTR [rax],al
   140037e96:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037e9c
   140037e9c:	add    BYTE PTR [rax],al
   140037e9e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ea4
   140037ea4:	add    BYTE PTR [rax],al
   140037ea6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037eac
   140037eac:	add    BYTE PTR [rax],al
   140037eae:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037eb4
   140037eb4:	add    BYTE PTR [rax],al
   140037eb6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ebc
   140037ebc:	add    BYTE PTR [rax],al
   140037ebe:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ec4
   140037ec4:	add    BYTE PTR [rax],al
   140037ec6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ecc
   140037ecc:	add    BYTE PTR [rax],al
   140037ece:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ed4
   140037ed4:	add    BYTE PTR [rax],al
   140037ed6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037edc
   140037edc:	add    BYTE PTR [rax],al
   140037ede:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ee4
   140037ee4:	add    BYTE PTR [rax],al
   140037ee6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037eec
   140037eec:	add    BYTE PTR [rax],al
   140037eee:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d037ef4
   140037ef4:	add    BYTE PTR [rax],al
   140037ef6:	add    BYTE PTR [rip+0x1b000000],bl        # 0x15b037efc
   140037efc:	add    BYTE PTR [rax],al
   140037efe:	add    BYTE PTR [rdx],bl
   140037f00:	add    BYTE PTR [rax],al
   140037f02:	add    BYTE PTR [rax+rax*1],dl
   140037f05:	add    BYTE PTR [rax],al
   140037f07:	or     DWORD PTR [rax],eax
   140037f09:	add    BYTE PTR [rax],al
   140037f0b:	add    al,BYTE PTR [rax]
	...
   140037f59:	add    BYTE PTR [rax],al
   140037f5b:	add    DWORD PTR [rax],eax
   140037f5d:	add    BYTE PTR [rax],al
   140037f5f:	add    eax,DWORD PTR [rax]
   140037f61:	add    BYTE PTR [rax],al
   140037f63:	add    al,0x0
   140037f65:	add    BYTE PTR [rax],al
   140037f67:	add    eax,0x5000000
   140037f6c:	add    BYTE PTR [rax],al
   140037f6e:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f74
   140037f74:	add    BYTE PTR [rax],al
   140037f76:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f7c
   140037f7c:	add    BYTE PTR [rax],al
   140037f7e:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f84
   140037f84:	add    BYTE PTR [rax],al
   140037f86:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f8c
   140037f8c:	add    BYTE PTR [rax],al
   140037f8e:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f94
   140037f94:	add    BYTE PTR [rax],al
   140037f96:	add    BYTE PTR [rip+0x5000000],al        # 0x145037f9c
   140037f9c:	add    BYTE PTR [rax],al
   140037f9e:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fa4
   140037fa4:	add    BYTE PTR [rax],al
   140037fa6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fac
   140037fac:	add    BYTE PTR [rax],al
   140037fae:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fb4
   140037fb4:	add    BYTE PTR [rax],al
   140037fb6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fbc
   140037fbc:	add    BYTE PTR [rax],al
   140037fbe:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fc4
   140037fc4:	add    BYTE PTR [rax],al
   140037fc6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fcc
   140037fcc:	add    BYTE PTR [rax],al
   140037fce:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fd4
   140037fd4:	add    BYTE PTR [rax],al
   140037fd6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fdc
   140037fdc:	add    BYTE PTR [rax],al
   140037fde:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fe4
   140037fe4:	add    BYTE PTR [rax],al
   140037fe6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037fec
   140037fec:	add    BYTE PTR [rax],al
   140037fee:	add    BYTE PTR [rip+0x5000000],al        # 0x145037ff4
   140037ff4:	add    BYTE PTR [rax],al
   140037ff6:	add    BYTE PTR [rip+0x5000000],al        # 0x145037ffc
   140037ffc:	add    BYTE PTR [rax],al
   140037ffe:	add    BYTE PTR [rip+0x4000000],al        # 0x144038004
   140038004:	add    BYTE PTR [rax],al
   140038006:	add    BYTE PTR [rdx],al
	...
   140038c24:	(bad)  
   140038c25:	(bad)  
   140038c26:	(bad)  
   140038c27:	(bad)  
   140038c28:	(bad)  
   140038c29:	jmp    rax
   140038c2b:	jg     0x140038c2c
   140038c2d:	(bad)  
   140038c2e:	(bad)  
   140038c2f:	(bad)  
   140038c30:	(bad)  
   140038c31:	inc    eax
   140038c33:	(bad)  
   140038c34:	(bad)  
   140038c35:	(bad)  
   140038c36:	(bad)  
   140038c37:	(bad)  
   140038c38:	inc    BYTE PTR [rax]
   140038c3a:	add    BYTE PTR [rdi],bl
   140038c3c:	(bad)  
   140038c3d:	(bad)  
   140038c3e:	(bad)  
   140038c3f:	(bad)  
   140038c40:	cld    
   140038c41:	add    BYTE PTR [rax],al
   140038c43:	ud0    edi,edi
   140038c46:	(bad)  
   140038c47:	(bad)  
   140038c48:	clc    
   140038c49:	add    BYTE PTR [rax],al
   140038c4b:	(bad)  
   140038c4c:	(bad)  
   140038c4d:	(bad)  
   140038c4e:	(bad)  
   140038c4f:	(bad)  
   140038c50:	clc    
   140038c51:	add    BYTE PTR [rax],al
   140038c53:	add    edi,edi
   140038c55:	(bad)  
   140038c56:	(bad)  
   140038c57:	(bad)  
   140038c58:	clc    
   140038c59:	add    BYTE PTR [rax],al
   140038c5b:	add    edi,edi
   140038c5d:	(bad)  
   140038c5e:	(bad)  
   140038c5f:	(bad)  
   140038c60:	clc    
   140038c61:	add    BYTE PTR [rax],al
   140038c63:	add    edi,edi
   140038c65:	(bad)  
   140038c66:	(bad)  
   140038c67:	push   rax
   140038c69:	add    BYTE PTR [rax],al
   140038c6b:	add    bh,bh
   140038c6d:	(bad)  
   140038c6e:	(bad)  
   140038c6f:	jmp    rax
   140038c71:	add    BYTE PTR [rax],al
   140038c73:	add    dh,bh
   140038c75:	add    BYTE PTR [rax],al
   140038c77:	add    BYTE PTR [rax],al
   140038c79:	add    BYTE PTR [rax],al
   140038c7b:	add    esp,edi
   140038c7d:	add    BYTE PTR [rax],al
   140038c7f:	add    BYTE PTR [rax],al
   140038c81:	add    BYTE PTR [rax],al
   140038c83:	add    eax,edi
   140038c85:	add    BYTE PTR [rax],al
   140038c87:	add    BYTE PTR [rax],al
   140038c89:	add    BYTE PTR [rax],al
   140038c8b:	add    edi,eax
   140038c8d:	add    BYTE PTR [rax],al
   140038c8f:	add    BYTE PTR [rax],al
   140038c91:	add    BYTE PTR [rax],al
   140038c93:	(bad)  
   140038c94:	clc    
   140038c95:	add    BYTE PTR [rax],al
   140038c97:	add    BYTE PTR [rax],al
   140038c99:	add    BYTE PTR [rax],al
   140038c9b:	psubb  mm0,QWORD PTR [rax]
   140038c9e:	add    BYTE PTR [rax],al
   140038ca0:	add    BYTE PTR [rax],al
   140038ca2:	add    BYTE PTR [rdi],bl
   140038ca4:	clc    
   140038ca5:	add    BYTE PTR [rax],al
   140038ca7:	add    BYTE PTR [rax],al
   140038ca9:	add    BYTE PTR [rax],al
   140038cab:	(bad)  
   140038cac:	clc    
   140038cad:	add    BYTE PTR [rax],al
   140038caf:	add    BYTE PTR [rax],al
   140038cb1:	add    BYTE PTR [rax],al
   140038cb3:	(bad)  
   140038cb4:	clc    
   140038cb5:	add    BYTE PTR [rax],al
   140038cb7:	add    BYTE PTR [rax],al
   140038cb9:	add    BYTE PTR [rax],al
   140038cbb:	(bad)  
   140038cbc:	clc    
   140038cbd:	add    BYTE PTR [rax],al
   140038cbf:	add    BYTE PTR [rax],al
   140038cc1:	add    BYTE PTR [rax],al
   140038cc3:	(bad)  
   140038cc4:	clc    
   140038cc5:	add    BYTE PTR [rax],al
   140038cc7:	add    BYTE PTR [rax],al
   140038cc9:	add    BYTE PTR [rax],al
   140038ccb:	(bad)  
   140038ccc:	clc    
   140038ccd:	add    BYTE PTR [rax],al
   140038ccf:	add    BYTE PTR [rax],al
   140038cd1:	add    BYTE PTR [rax],al
   140038cd3:	(bad)  
   140038cd4:	clc    
   140038cd5:	add    BYTE PTR [rax],al
   140038cd7:	add    BYTE PTR [rax],al
   140038cd9:	add    BYTE PTR [rax],al
   140038cdb:	(bad)  
   140038cdc:	clc    
   140038cdd:	add    BYTE PTR [rax],al
   140038cdf:	add    BYTE PTR [rax],al
   140038ce1:	add    BYTE PTR [rax],al
   140038ce3:	(bad)  
   140038ce4:	clc    
   140038ce5:	add    BYTE PTR [rax],al
   140038ce7:	add    BYTE PTR [rax],al
   140038ce9:	add    BYTE PTR [rax],al
   140038ceb:	(bad)  
   140038cec:	clc    
   140038ced:	add    BYTE PTR [rax],al
   140038cef:	add    BYTE PTR [rax],al
   140038cf1:	add    BYTE PTR [rax],al
   140038cf3:	(bad)  
   140038cf4:	clc    
   140038cf5:	add    BYTE PTR [rax],al
   140038cf7:	add    BYTE PTR [rax],al
   140038cf9:	add    BYTE PTR [rax],al
   140038cfb:	(bad)  
   140038cfc:	clc    
   140038cfd:	add    BYTE PTR [rax],al
   140038cff:	add    BYTE PTR [rax],al
   140038d01:	add    BYTE PTR [rax],al
   140038d03:	(bad)  
   140038d04:	clc    
   140038d05:	add    BYTE PTR [rax],al
   140038d07:	add    BYTE PTR [rax],al
   140038d09:	add    BYTE PTR [rax],al
   140038d0b:	(bad)  
   140038d0c:	clc    
   140038d0d:	add    BYTE PTR [rax],al
   140038d0f:	add    BYTE PTR [rax],al
   140038d11:	add    BYTE PTR [rax],al
   140038d13:	(bad)  
   140038d14:	clc    
   140038d15:	add    BYTE PTR [rax],al
   140038d17:	add    BYTE PTR [rax],al
   140038d19:	add    BYTE PTR [rax],al
   140038d1b:	(bad)  
   140038d1c:	clc    
   140038d1d:	add    BYTE PTR [rax],al
   140038d1f:	add    BYTE PTR [rax],al
   140038d21:	add    BYTE PTR [rax],al
   140038d23:	(bad)  
   140038d24:	clc    
   140038d25:	add    BYTE PTR [rax],al
   140038d27:	add    BYTE PTR [rax],al
   140038d29:	add    BYTE PTR [rax],al
   140038d2b:	(bad)  
   140038d2c:	clc    
   140038d2d:	add    BYTE PTR [rax],al
   140038d2f:	add    BYTE PTR [rax],al
   140038d31:	add    BYTE PTR [rax],al
   140038d33:	(bad)  
   140038d34:	clc    
   140038d35:	add    BYTE PTR [rax],al
   140038d37:	add    BYTE PTR [rax],al
   140038d39:	add    BYTE PTR [rax],al
   140038d3b:	(bad)  
   140038d3c:	clc    
   140038d3d:	add    BYTE PTR [rax],al
   140038d3f:	add    BYTE PTR [rax],al
   140038d41:	add    BYTE PTR [rax],al
   140038d43:	(bad)  
   140038d44:	clc    
   140038d45:	add    BYTE PTR [rax],al
   140038d47:	add    BYTE PTR [rax],al
   140038d49:	add    BYTE PTR [rax],al
   140038d4b:	(bad)  
   140038d4c:	clc    
   140038d4d:	add    BYTE PTR [rax],al
   140038d4f:	add    BYTE PTR [rax],al
   140038d51:	add    BYTE PTR [rax],al
   140038d53:	(bad)  
   140038d54:	clc    
   140038d55:	add    BYTE PTR [rax],al
   140038d57:	add    BYTE PTR [rax],al
   140038d59:	add    BYTE PTR [rax],al
   140038d5b:	(bad)  
   140038d5c:	clc    
   140038d5d:	add    BYTE PTR [rax],al
   140038d5f:	add    BYTE PTR [rax],al
   140038d61:	add    BYTE PTR [rax],al
   140038d63:	(bad)  
   140038d64:	clc    
   140038d65:	add    BYTE PTR [rax],al
   140038d67:	add    BYTE PTR [rax],al
   140038d69:	add    BYTE PTR [rax],al
   140038d6b:	(bad)  
   140038d6c:	clc    
   140038d6d:	add    BYTE PTR [rax],al
   140038d6f:	add    BYTE PTR [rax],al
   140038d71:	add    BYTE PTR [rax],al
   140038d73:	(bad)  
   140038d74:	clc    
   140038d75:	add    BYTE PTR [rax],al
   140038d77:	add    BYTE PTR [rax],al
   140038d79:	add    BYTE PTR [rax],al
   140038d7b:	(bad)  
   140038d7c:	cld    
   140038d7d:	add    BYTE PTR [rax],al
   140038d7f:	add    BYTE PTR [rax],al
   140038d81:	add    BYTE PTR [rax],al
   140038d83:	(bad)  
   140038d84:	cld    
   140038d85:	add    BYTE PTR [rax],al
   140038d87:	add    BYTE PTR [rax],al
   140038d89:	add    BYTE PTR [rax],al
   140038d8b:	(bad)  
   140038d8c:	inc    BYTE PTR [rax]
   140038d8e:	add    BYTE PTR [rax],al
   140038d90:	add    BYTE PTR [rax],al
   140038d92:	add    BYTE PTR [rdi],bl
   140038d94:	inc    DWORD PTR [rax]
   140038d96:	add    BYTE PTR [rax],al
   140038d98:	add    BYTE PTR [rax],al
   140038d9a:	add    BYTE PTR [rdi],bl
   140038d9c:	inc    DWORD PTR [rax+0x0]
   140038da2:	add    BYTE PTR [rdi],bl
   140038da4:	inc    eax
   140038da6:	add    BYTE PTR [rax],al
   140038da8:	add    BYTE PTR [rax],al
   140038daa:	add    BYTE PTR [rdi],bl
   140038dac:	jmp    rax
   140038dae:	add    BYTE PTR [rax],al
   140038db0:	add    BYTE PTR [rax],al
   140038db2:	add    BYTE PTR [rdi],bl
   140038db4:	push   rax
   140038db6:	add    BYTE PTR [rax],al
   140038db8:	add    BYTE PTR [rax],al
   140038dba:	add    BYTE PTR [rdi],bh
   140038dbc:	(bad)  
   140038dbd:	clc    
   140038dbe:	add    BYTE PTR [rax],al
   140038dc0:	add    BYTE PTR [rax],al
   140038dc2:	add    BYTE PTR [rdi-0x1],bh
   140038dc5:	(bad)  
   140038dc6:	(bad)  
   140038dc7:	(bad)  
   140038dc8:	(bad)  
   140038dc9:	(bad)  
   140038dca:	(bad)  
   140038dcb:	(bad)  
   140038dcc:	(bad)  
   140038dcd:	(bad)  
   140038dce:	(bad)  
   140038dcf:	(bad)  
   140038dd0:	(bad)  
   140038dd1:	(bad)  
   140038dd2:	(bad)  
   140038dd3:	(bad)  
   140038dd4:	(bad)  
   140038dd5:	(bad)  
   140038dd6:	(bad)  
   140038dd7:	(bad)  
   140038dd8:	(bad)  
   140038dd9:	(bad)  
   140038dda:	(bad)  
   140038ddb:	(bad)  
   140038ddc:	(bad)  
   140038ddd:	(bad)  
   140038dde:	(bad)  
   140038ddf:	(bad)  
   140038de0:	(bad)  
   140038de1:	(bad)  
   140038de2:	(bad)  
   140038de3:	(bad)  
   140038de4:	(bad)  
   140038de5:	(bad)  
   140038de6:	(bad)  
   140038de7:	(bad)  
   140038de8:	(bad)  
   140038de9:	(bad)  
   140038dea:	(bad)  
   140038deb:	(bad)  
   140038dec:	(bad)  
   140038ded:	(bad)  
   140038dee:	(bad)  
   140038def:	(bad)  
   140038df0:	(bad)  
   140038df1:	(bad)  
   140038df2:	(bad)  
   140038df3:	(bad)  
   140038df4:	(bad)  
   140038df5:	(bad)  
   140038df6:	(bad)  
   140038df7:	(bad)  
   140038df8:	(bad)  
   140038df9:	(bad)  
   140038dfa:	(bad)  
   140038dfb:	(bad)  
   140038dfc:	(bad)  
   140038dfd:	(bad)  
   140038dfe:	(bad)  
   140038dff:	(bad)  
   140038e00:	(bad)  
   140038e01:	(bad)  
   140038e02:	(bad)  
   140038e03:	(bad)  
   140038e04:	(bad)  
   140038e05:	(bad)  
   140038e06:	(bad)  
   140038e07:	(bad)  
   140038e08:	(bad)  
   140038e09:	(bad)  
   140038e0a:	(bad)  
   140038e0b:	(bad)  
   140038e0c:	(bad)  
   140038e0d:	(bad)  
   140038e0e:	(bad)  
   140038e0f:	(bad)  
   140038e10:	(bad)  
   140038e11:	(bad)  
   140038e12:	(bad)  
   140038e13:	(bad)  
   140038e14:	(bad)  
   140038e15:	(bad)  
   140038e16:	(bad)  
   140038e17:	(bad)  
   140038e18:	(bad)  
   140038e19:	(bad)  
   140038e1a:	(bad)  
   140038e1b:	(bad)  
   140038e1c:	(bad)  
   140038e1d:	(bad)  
   140038e1e:	(bad)  
   140038e1f:	(bad)  
   140038e20:	(bad)  
   140038e21:	(bad)  
   140038e22:	(bad)  
   140038e23:	jmp    FWORD PTR [rax]
   140038e25:	add    BYTE PTR [rax],al
   140038e27:	add    BYTE PTR [rax],dh
   140038e29:	add    BYTE PTR [rax],al
   140038e2b:	add    BYTE PTR [rax+0x0],ah
   140038e2e:	add    BYTE PTR [rax],al
   140038e30:	add    DWORD PTR [rax],eax
   140038e32:	and    BYTE PTR [rax],al
   140038e34:	add    BYTE PTR [rax],al
   140038e36:	add    BYTE PTR [rax],al
   140038e38:	add    BYTE PTR [rax+rax*1],ah
   140038e3b:	add    bh,dl
   140038e3d:	or     eax,0xdd70000
	...
   140038e9e:	add    BYTE PTR [rcx],al
   140038ea0:	add    BYTE PTR [rax],al
   140038ea2:	add    BYTE PTR [rdx],al
   140038ea4:	add    BYTE PTR [rax],al
   140038ea6:	add    BYTE PTR [rax+rax*1],al
   140038ea9:	add    BYTE PTR [rax],al
   140038eab:	(bad)  
   140038eac:	add    BYTE PTR [rax],al
   140038eae:	add    BYTE PTR [rsi],al
   140038eb0:	add    BYTE PTR [rax],al
   140038eb2:	add    BYTE PTR [rdi],al
   140038eb4:	add    BYTE PTR [rax],al
   140038eb6:	add    BYTE PTR [rdi],al
   140038eb8:	add    BYTE PTR [rax],al
   140038eba:	add    BYTE PTR [rdi],al
   140038ebc:	add    BYTE PTR [rax],al
   140038ebe:	add    BYTE PTR [rdi],al
   140038ec0:	add    BYTE PTR [rax],al
   140038ec2:	add    BYTE PTR [rdi],al
   140038ec4:	add    BYTE PTR [rax],al
   140038ec6:	add    BYTE PTR [rdi],al
   140038ec8:	add    BYTE PTR [rax],al
   140038eca:	add    BYTE PTR [rdi],al
   140038ecc:	add    BYTE PTR [rax],al
   140038ece:	add    BYTE PTR [rdi],al
   140038ed0:	add    BYTE PTR [rax],al
   140038ed2:	add    BYTE PTR [rdi],al
   140038ed4:	add    BYTE PTR [rax],al
   140038ed6:	add    BYTE PTR [rax],cl
   140038ed8:	add    BYTE PTR [rax],al
   140038eda:	add    BYTE PTR [rsi],cl
   140038edc:	add    BYTE PTR [rax],al
   140038ede:	add    BYTE PTR [rip+0xffffffffbfdbdbdc],ah        # 0xffdf6ac0
   140038ee4:	ror    ebp,1
   140038ee6:	(bad)  
   140038ee7:	(bad)
   140038eea:	sbb    DWORD PTR [rcx+0x0],edx
   140038eed:	add    BYTE PTR [rax],al
   140038eef:	xor    DWORD PTR [rax],eax
   140038ef1:	add    BYTE PTR [rax],al
   140038ef3:	sbb    BYTE PTR [rax],al
   140038ef5:	add    BYTE PTR [rax],al
   140038ef7:	or     al,BYTE PTR [rax]
   140038ef9:	add    BYTE PTR [rax],al
   140038efb:	add    eax,DWORD PTR [rax]
   140038efd:	add    BYTE PTR [rax],al
   140038eff:	add    DWORD PTR [rax],eax
	...
   140038f5d:	add    BYTE PTR [rax],al
   140038f5f:	add    al,BYTE PTR [rax]
   140038f61:	add    BYTE PTR [rax],al
   140038f63:	or     BYTE PTR [rax],al
   140038f65:	add    BYTE PTR [rax],al
   140038f67:	adc    al,BYTE PTR [rax]
   140038f69:	add    BYTE PTR [rax],al
   140038f6b:	sbb    DWORD PTR [rax],eax
   140038f6d:	add    BYTE PTR [rax],al
   140038f6f:	sbb    al,0x0
   140038f71:	add    BYTE PTR [rax],al
   140038f73:	sbb    eax,0x1d000000
   140038f78:	add    BYTE PTR [rax],al
   140038f7a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d038f80
   140038f80:	add    BYTE PTR [rax],al
   140038f82:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d038f88
   140038f88:	add    BYTE PTR [rax],al
   140038f8a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d038f90
   140038f90:	add    BYTE PTR [rax],al
   140038f92:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e038f98
   140038f98:	add    BYTE PTR [rax],al
   140038f9a:	add    BYTE PTR [rax+rax*1],ah
   140038f9d:	add    BYTE PTR [rax],al
   140038f9f:	cmp    dl,bl
   140038fa1:	rcl    dl,1
   140038fa3:	leave  
   140038fa4:	div    esp
   140038fa6:	hlt    
   140038fa7:	(bad)  
   140038fa8:	jrcxz  0x140038f89
   140038faa:	(bad)  
   140038fac:	rex.X
   140038fad:	rex.X
   140038fae:	rex.X push 0x38000000
   140038fb4:	add    BYTE PTR [rax],al
   140038fb6:	add    BYTE PTR [rsi],bl
   140038fb8:	add    BYTE PTR [rax],al
   140038fba:	add    BYTE PTR [rip+0x4000000],cl        # 0x144038fc0
   140038fc0:	add    BYTE PTR [rax],al
   140038fc2:	add    BYTE PTR [rcx],al
	...
   140039018:	add    BYTE PTR [rax],al
   14003901a:	add    BYTE PTR [rcx],al
   14003901c:	add    BYTE PTR [rax],al
   14003901e:	add    BYTE PTR [rip+0x14000000],al        # 0x154039024
   140039024:	add    BYTE PTR [rax],al
   140039026:	add    BYTE PTR [rax+rax*1],ch
   140039029:	add    BYTE PTR [rax],al
   14003902b:	(bad)  
   14003902c:	add    BYTE PTR [rax],al
   14003902e:	add    BYTE PTR [rsi+0x0],al
   140039031:	add    BYTE PTR [rax],al
   140039033:	rex.RXB add BYTE PTR [r8],r8b
   140039036:	add    BYTE PTR [rdi+0x0],al
   140039039:	add    BYTE PTR [rax],al
   14003903b:	rex.RXB add BYTE PTR [r8],r8b
   14003903e:	add    BYTE PTR [rdi+0x0],al
   140039041:	add    BYTE PTR [rax],al
   140039043:	rex.RXB add BYTE PTR [r8],r8b
   140039046:	add    BYTE PTR [rdi+0x0],al
   140039049:	add    BYTE PTR [rax],al
   14003904b:	rex.RXB add BYTE PTR [r8],r8b
   14003904e:	add    BYTE PTR [rdi+0x0],al
   140039051:	add    BYTE PTR [rax],al
   140039053:	rex.RXB add BYTE PTR [r8],r8b
   140039056:	add    BYTE PTR [rdi+0x0],al
   140039059:	add    BYTE PTR [rax],al
   14003905b:	rex.WR add BYTE PTR [rax],r8b
   14003905e:	add    BYTE PTR [rcx-0x34],bl
   140039061:	retf   0xd0cc
   140039064:	mov    ah,0x8f
   140039066:	xchg   esp,eax
   140039067:	jmp    FWORD PTR [rdx-0xc02787f]
   14003906d:	icebp  
   14003906e:	icebp  
   14003906f:	idiv   DWORD PTR [rsp+rdi*2+0x7c]
   140039073:	xchg   BYTE PTR [rax],al
   140039075:	add    BYTE PTR [rax],al
   140039077:	(bad)  
   140039078:	add    BYTE PTR [rax],al
   14003907a:	add    BYTE PTR [rax+rax*1],ah
   14003907d:	add    BYTE PTR [rax],al
   14003907f:	adc    BYTE PTR [rax],al
   140039081:	add    BYTE PTR [rax],al
   140039083:	(bad)  
   140039084:	add    BYTE PTR [rax],al
   140039086:	add    BYTE PTR [rdx],al
   140039088:	add    BYTE PTR [rax],al
   14003908a:	add    BYTE PTR [rcx],al
	...
   1400390d8:	add    BYTE PTR [rax],al
   1400390da:	add    BYTE PTR [rcx],al
   1400390dc:	add    BYTE PTR [rax],al
   1400390de:	add    BYTE PTR [rcx],cl
   1400390e0:	add    BYTE PTR [rax],al
   1400390e2:	add    BYTE PTR [rdx],ah
   1400390e4:	mov    ebp,0xc79dbdba
   1400390e9:	ret    
   1400390ea:	(bad)
   1400390ed:	mov    edi,0xbfc3cdc1
   1400390f2:	ror    ebp,0xc3
   1400390f5:	mov    edi,0xbfc3cdc1
   1400390fa:	ror    ebp,0xc3
   1400390fd:	mov    edi,0xbfc3cdc1
   140039102:	ror    ebp,0xc3
   140039105:	mov    edi,0xbfc3cdc1
   14003910a:	ror    ebp,0xc3
   14003910d:	mov    edi,0xbfc3cdc1
   140039112:	ror    ebp,0xc3
   140039115:	mov    edi,0xbec4cdc1
   14003911a:	ror    dh,0xc2
   14003911d:	mov    ebp,0xe8ebd0bf
   140039122:	jmp    0xd2914518
   140039127:	jmp    QWORD PTR [rcx+0x12]
   14003912a:	(bad)  
   14003912b:	call   QWORD PTR [rcx-0xb009ca6]
   140039131:	icebp  
   140039132:	icebp  
   140039133:	sti    
   140039134:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140039135:	movabs ds:0x47000000a5a3,eax
   14003913e:	add    BYTE PTR [rdx],ch
   140039140:	add    BYTE PTR [rax],al
   140039142:	add    BYTE PTR [rax+rax*1],dl
   140039145:	add    BYTE PTR [rax],al
   140039147:	or     BYTE PTR [rax],al
   140039149:	add    BYTE PTR [rax],al
   14003914b:	add    al,BYTE PTR [rax]
	...
   140039199:	add    BYTE PTR [rax],al
   14003919b:	add    al,BYTE PTR [rax]
   14003919d:	add    BYTE PTR [rax],al
   14003919f:	or     al,0x0
   1400391a1:	add    BYTE PTR [rax],al
   1400391a3:	sub    al,0xe1
   1400391a5:	fstp   st(5)
   1400391a7:	fadd   st(2),st
   1400391a9:	movabs ds:0x6196ff696196ffa8,eax
   1400391b2:	imul   edi,edi,0xff696196
   1400391b8:	xchg   esi,eax
   1400391b9:	(bad)  
   1400391ba:	imul   edi,edi,0xff696196
   1400391c0:	xchg   esi,eax
   1400391c1:	(bad)  
   1400391c2:	imul   edi,edi,0xff696196
   1400391c8:	xchg   esi,eax
   1400391c9:	(bad)  
   1400391ca:	imul   edi,edi,0xff696196
   1400391d0:	xchg   esi,eax
   1400391d1:	(bad)  
   1400391d2:	imul   edi,edi,0xff696196
   1400391d8:	xchg   esi,eax
   1400391d9:	(bad)  
   1400391da:	imul   edi,edi,0xff696196
   1400391e0:	xchg   esi,eax
   1400391e1:	(bad)  
   1400391e2:	imul   edi,edi,0xff453b7c
   1400391e8:	(bad)  
   1400391e9:	adc    bl,BYTE PTR [rsi]
   1400391eb:	jmp    QWORD PTR [rcx+0x12]
   1400391ee:	(bad)  
   1400391ef:	(bad)  
   1400391f0:	jp     0x140039229
   1400391f2:	jmp    r15
   1400391f5:	fsubrp st(0),st
   1400391f7:	sti    
   1400391f8:	enter  0xc5c5,0xca
   1400391fc:	adc    eax,0x531515
   140039201:	add    BYTE PTR [rax],al
   140039203:	(bad)  
   140039204:	add    BYTE PTR [rax],al
   140039206:	add    BYTE PTR [rip+0x7000000],dl        # 0x14703920c
	...
   140039250:	add    BYTE PTR [rax],al
   140039252:	add    BYTE PTR [rcx],al
   140039254:	add    BYTE PTR [rax],al
   140039256:	add    BYTE PTR [rdx],al
   140039258:	add    BYTE PTR [rax],al
   14003925a:	add    BYTE PTR [rsi],al
   14003925c:	add    BYTE PTR [rax],al
   14003925e:	add    BYTE PTR [rax+rax*1],dl
   140039261:	add    BYTE PTR [rax],al
   140039263:	(bad)  
   140039264:	(bad)  
   140039266:	fcmovu st,st(6)
   140039268:	movabs ds:0x61ff1e1261ff7c75,eax
   140039271:	adc    bl,BYTE PTR [rsi]
   140039273:	jmp    QWORD PTR [rcx+0x12]
   140039276:	(bad)  
   140039277:	jmp    QWORD PTR [rcx+0x12]
   14003927a:	(bad)  
   14003927b:	jmp    QWORD PTR [rcx+0x12]
   14003927e:	(bad)  
   14003927f:	jmp    QWORD PTR [rcx+0x12]
   140039282:	(bad)  
   140039283:	jmp    QWORD PTR [rcx+0x12]
   140039286:	(bad)  
   140039287:	jmp    QWORD PTR [rcx+0x12]
   14003928a:	(bad)  
   14003928b:	jmp    QWORD PTR [rcx+0x12]
   14003928e:	(bad)  
   14003928f:	jmp    QWORD PTR [rcx+0x12]
   140039292:	(bad)  
   140039293:	jmp    QWORD PTR [rcx+0x12]
   140039296:	(bad)  
   140039297:	jmp    QWORD PTR [rcx+0x12]
   14003929a:	(bad)  
   14003929b:	jmp    QWORD PTR [rcx+0x12]
   14003929e:	(bad)  
   14003929f:	jmp    QWORD PTR [rcx+0x12]
   1400392a2:	(bad)  
   1400392a3:	jmp    QWORD PTR [rcx+0x12]
   1400392a6:	(bad)  
   1400392a7:	jmp    QWORD PTR [rcx+0x12]
   1400392aa:	(bad)  
   1400392ab:	jmp    QWORD PTR [rcx+0x12]
   1400392ae:	(bad)  
   1400392af:	jmp    QWORD PTR [rcx+0x12]
   1400392b2:	(bad)  
   1400392b3:	jmp    FWORD PTR [rcx+0x1e]
   1400392b6:	sub    edi,edi
   1400392b8:	(bad)  
   1400392b9:	mov    eax,0xe1e5fbbb
   1400392be:	loope  0x1400392a7
   1400392c0:	rex.WRB
   1400392c1:	rex.WRB
   1400392c2:	movsxd r8,DWORD PTR [r8]
   1400392c5:	add    BYTE PTR [rax],al
   1400392c7:	sub    DWORD PTR [rax],eax
   1400392c9:	add    BYTE PTR [rax],al
   1400392cb:	(bad)  
	...
   1400392e0:	add    BYTE PTR [rax],al
   1400392e2:	add    BYTE PTR [rcx],al
   1400392e4:	add    BYTE PTR [rax],al
   1400392e6:	add    BYTE PTR [rcx],al
   1400392e8:	add    BYTE PTR [rax],al
   1400392ea:	add    BYTE PTR [rcx],al
   1400392ec:	add    BYTE PTR [rax],al
   1400392ee:	add    BYTE PTR [rcx],al
   1400392f0:	add    BYTE PTR [rax],al
   1400392f2:	add    BYTE PTR [rcx],al
   1400392f4:	add    BYTE PTR [rax],al
   1400392f6:	add    BYTE PTR [rcx],al
   1400392f8:	add    BYTE PTR [rax],al
   1400392fa:	add    BYTE PTR [rcx],al
   1400392fc:	add    BYTE PTR [rax],al
   1400392fe:	add    BYTE PTR [rcx],al
   140039300:	add    BYTE PTR [rax],al
   140039302:	add    BYTE PTR [rcx],al
   140039304:	add    BYTE PTR [rax],al
   140039306:	add    BYTE PTR [rcx],al
   140039308:	add    BYTE PTR [rax],al
   14003930a:	add    BYTE PTR [rdx],al
   14003930c:	add    BYTE PTR [rax],al
   14003930e:	add    BYTE PTR [rdx],al
   140039310:	add    BYTE PTR [rax],al
   140039312:	add    BYTE PTR [rbx],al
   140039314:	add    BYTE PTR [rax],al
   140039316:	add    BYTE PTR [rdi],al
   140039318:	add    BYTE PTR [rax],al
   14003931a:	add    BYTE PTR [rdx],dl
   14003931c:	add    BYTE PTR [rax],al
   14003931e:	add    BYTE PTR [rax],ch
   140039320:	add    BYTE PTR [rax],al
   140039322:	add    BYTE PTR [rbp-0x1a],cl
   140039325:	loope  0x140039309
   140039327:	(bad)  
   140039328:	movabs ds:0x61ff1e1261ff7c75,eax
   140039331:	adc    bl,BYTE PTR [rsi]
   140039333:	jmp    QWORD PTR [rcx+0x12]
   140039336:	(bad)  
   140039337:	jmp    QWORD PTR [rcx+0x12]
   14003933a:	(bad)  
   14003933b:	jmp    QWORD PTR [rcx+0x12]
   14003933e:	(bad)  
   14003933f:	jmp    QWORD PTR [rcx+0x12]
   140039342:	(bad)  
   140039343:	jmp    QWORD PTR [rcx+0x12]
   140039346:	(bad)  
   140039347:	jmp    QWORD PTR [rcx+0x12]
   14003934a:	(bad)  
   14003934b:	jmp    QWORD PTR [rcx+0x12]
   14003934e:	(bad)  
   14003934f:	jmp    QWORD PTR [rcx+0x12]
   140039352:	(bad)  
   140039353:	jmp    QWORD PTR [rcx+0x12]
   140039356:	(bad)  
   140039357:	jmp    QWORD PTR [rcx+0x12]
   14003935a:	(bad)  
   14003935b:	jmp    QWORD PTR [rcx+0x12]
   14003935e:	(bad)  
   14003935f:	jmp    QWORD PTR [rcx+0x12]
   140039362:	(bad)  
   140039363:	jmp    QWORD PTR [rcx+0x12]
   140039366:	(bad)  
   140039367:	jmp    QWORD PTR [rcx+0x12]
   14003936a:	(bad)  
   14003936b:	jmp    QWORD PTR [rcx+0x12]
   14003936e:	(bad)  
   14003936f:	jmp    QWORD PTR [rcx+0x12]
   140039372:	(bad)  
   140039373:	jmp    QWORD PTR [rcx+0x12]
   140039376:	(bad)  
   140039377:	jmp    QWORD PTR [rdx+0x14]
   14003937a:	and    bh,bh
   14003937c:	mov    cl,0x8b
   14003937e:	xchg   ecx,eax
   14003937f:	std    
   140039380:	repz lock lock hlt 
   140039384:	xchg   edi,eax
   140039385:	xchg   edi,eax
   140039386:	xchg   edi,eax
   140039387:	(bad)  
   140039388:	add    BYTE PTR [rax],al
   14003938a:	add    BYTE PTR [rdx],dl
	...
   14003939c:	add    BYTE PTR [rax],al
   14003939e:	add    BYTE PTR [rcx],al
   1400393a0:	add    BYTE PTR [rax],al
   1400393a2:	add    BYTE PTR [rbx],al
   1400393a4:	add    BYTE PTR [rax],al
   1400393a6:	add    BYTE PTR [rsi],al
   1400393a8:	add    BYTE PTR [rax],al
   1400393aa:	add    BYTE PTR [rax],cl
   1400393ac:	add    BYTE PTR [rax],al
   1400393ae:	add    BYTE PTR [rcx],cl
   1400393b0:	add    BYTE PTR [rax],al
   1400393b2:	add    BYTE PTR [rcx],cl
   1400393b4:	add    BYTE PTR [rax],al
   1400393b6:	add    BYTE PTR [rcx],cl
   1400393b8:	add    BYTE PTR [rax],al
   1400393ba:	add    BYTE PTR [rcx],cl
   1400393bc:	add    BYTE PTR [rax],al
   1400393be:	add    BYTE PTR [rcx],cl
   1400393c0:	add    BYTE PTR [rax],al
   1400393c2:	add    BYTE PTR [rcx],cl
   1400393c4:	add    BYTE PTR [rax],al
   1400393c6:	add    BYTE PTR [rcx],cl
   1400393c8:	add    BYTE PTR [rax],al
   1400393ca:	add    BYTE PTR [rcx],cl
   1400393cc:	add    BYTE PTR [rax],al
   1400393ce:	add    BYTE PTR [rdx],cl
   1400393d0:	add    BYTE PTR [rax],al
   1400393d2:	add    BYTE PTR [rsi],cl
   1400393d4:	add    BYTE PTR [rax],al
   1400393d6:	add    BYTE PTR [rax],bl
   1400393d8:	add    BYTE PTR [rax],al
   1400393da:	add    BYTE PTR [rip+0x4a030303],ch        # 0x18a0696e3
   1400393e0:	scas   al,BYTE PTR es:[rdi]
   1400393e1:	mov    al,0xad
   1400393e3:	mov    dl,0xf9
   1400393e5:	div    dh
   1400393e7:	(bad)  
   1400393e8:	movabs ds:0x61ff1e1261ff7c75,eax
   1400393f1:	adc    bl,BYTE PTR [rsi]
   1400393f3:	jmp    QWORD PTR [rcx+0x12]
   1400393f6:	(bad)  
   1400393f7:	jmp    QWORD PTR [rcx+0x12]
   1400393fa:	(bad)  
   1400393fb:	jmp    QWORD PTR [rcx+0x12]
   1400393fe:	(bad)  
   1400393ff:	jmp    QWORD PTR [rcx+0x12]
   140039402:	(bad)  
   140039403:	jmp    QWORD PTR [rcx+0x12]
   140039406:	(bad)  
   140039407:	jmp    QWORD PTR [rcx+0x12]
   14003940a:	(bad)  
   14003940b:	jmp    QWORD PTR [rcx+0x12]
   14003940e:	(bad)  
   14003940f:	jmp    QWORD PTR [rcx+0x12]
   140039412:	(bad)  
   140039413:	jmp    QWORD PTR [rcx+0x12]
   140039416:	(bad)  
   140039417:	jmp    QWORD PTR [rcx+0x12]
   14003941a:	(bad)  
   14003941b:	jmp    QWORD PTR [rcx+0x12]
   14003941e:	(bad)  
   14003941f:	jmp    QWORD PTR [rcx+0x12]
   140039422:	(bad)  
   140039423:	jmp    QWORD PTR [rcx+0x12]
   140039426:	(bad)  
   140039427:	jmp    QWORD PTR [rcx+0x12]
   14003942a:	(bad)  
   14003942b:	jmp    QWORD PTR [rcx+0x12]
   14003942e:	(bad)  
   14003942f:	jmp    QWORD PTR [rcx+0x12]
   140039432:	(bad)  
   140039433:	jmp    QWORD PTR [rcx+0x12]
   140039436:	(bad)  
   140039437:	jmp    QWORD PTR [rcx+0x12]
   14003943a:	(bad)  
   14003943b:	dec    DWORD PTR [rdi-0x8009fa8]
   140039441:	cmc    
   140039442:	cmc    
   140039443:	cli    
   140039444:	rcl    al,1
   140039446:	rol    BYTE PTR [rcx+0xd000000],1
	...
   140039458:	add    BYTE PTR [rax],al
   14003945a:	add    BYTE PTR [rcx],al
   14003945c:	add    BYTE PTR [rax],al
   14003945e:	add    BYTE PTR [rbx],al
   140039460:	add    BYTE PTR [rax],al
   140039462:	add    BYTE PTR [rip+0x1b000000],cl        # 0x15b039468
   140039468:	add    BYTE PTR [rax],al
   14003946a:	add    BYTE PTR [rax+rax*1],ah
   14003946d:	add    BYTE PTR [rax],al
   14003946f:	add    BYTE PTR es:[rax],al
   140039472:	add    BYTE PTR [rsi],ah
   140039474:	add    BYTE PTR [rax],al
   140039476:	add    BYTE PTR [rsi],ah
   140039478:	add    BYTE PTR [rax],al
   14003947a:	add    BYTE PTR [rsi],ah
   14003947c:	add    BYTE PTR [rax],al
   14003947e:	add    BYTE PTR [rsi],ah
   140039480:	add    BYTE PTR [rax],al
   140039482:	add    BYTE PTR [rsi],ah
   140039484:	add    BYTE PTR [rax],al
   140039486:	add    BYTE PTR [rsi],ah
   140039488:	add    BYTE PTR [rax],al
   14003948a:	add    BYTE PTR [rsi],ah
   14003948c:	add    BYTE PTR [rax],al
   14003948e:	add    BYTE PTR [rdi],ah
   140039490:	add    BYTE PTR [rax],al
   140039492:	add    BYTE PTR [rax+rax*1],ch
   140039495:	add    BYTE PTR [rax],al
   140039497:	cmp    bl,BYTE PTR [rdi]
   140039499:	(bad)  
   14003949a:	(bad)  
   14003949b:	pop    rdx
   14003949c:	iret   
   14003949d:	ror    esi,1
   14003949f:	rcr    ecx,cl
   1400394a1:	loope  0x140039476
   1400394a3:	stc    
   1400394a4:	icebp  
   1400394a5:	lock out dx,al
   1400394a7:	(bad)  
   1400394a8:	movabs ds:0x61ff1e1261ff7c75,eax
   1400394b1:	adc    bl,BYTE PTR [rsi]
   1400394b3:	jmp    QWORD PTR [rcx+0x12]
   1400394b6:	(bad)  
   1400394b7:	jmp    QWORD PTR [rcx+0x12]
   1400394ba:	(bad)  
   1400394bb:	jmp    QWORD PTR [rcx+0x12]
   1400394be:	(bad)  
   1400394bf:	jmp    QWORD PTR [rcx+0x12]
   1400394c2:	(bad)  
   1400394c3:	jmp    QWORD PTR [rcx+0x12]
   1400394c6:	(bad)  
   1400394c7:	jmp    QWORD PTR [rcx+0x12]
   1400394ca:	(bad)  
   1400394cb:	jmp    QWORD PTR [rcx+0x12]
   1400394ce:	(bad)  
   1400394cf:	jmp    QWORD PTR [rcx+0x12]
   1400394d2:	(bad)  
   1400394d3:	jmp    QWORD PTR [rcx+0x12]
   1400394d6:	(bad)  
   1400394d7:	jmp    QWORD PTR [rcx+0x12]
   1400394da:	(bad)  
   1400394db:	jmp    QWORD PTR [rcx+0x12]
   1400394de:	(bad)  
   1400394df:	jmp    QWORD PTR [rcx+0x12]
   1400394e2:	(bad)  
   1400394e3:	jmp    QWORD PTR [rcx+0x12]
   1400394e6:	(bad)  
   1400394e7:	jmp    QWORD PTR [rcx+0x12]
   1400394ea:	(bad)  
   1400394eb:	jmp    QWORD PTR [rcx+0x12]
   1400394ee:	(bad)  
   1400394ef:	jmp    QWORD PTR [rcx+0x12]
   1400394f2:	(bad)  
   1400394f3:	jmp    QWORD PTR [rdx+0x13]
   1400394f6:	(bad)  
   1400394f7:	jmp    FWORD PTR [rdx-0x902777d]
   1400394fd:	hlt    
   1400394fe:	hlt    
   1400394ff:	cmc    
   140039500:	stos   BYTE PTR es:[rdi],al
   140039501:	stos   BYTE PTR es:[rdi],al
   140039502:	stos   BYTE PTR es:[rdi],al
   140039503:	add    BYTE PTR fs:[rax],al
   140039506:	add    BYTE PTR [rax+rax*1],dl
   140039509:	add    BYTE PTR [rax],al
   14003950b:	(bad)  
	...
   140039518:	add    BYTE PTR [rax],al
   14003951a:	add    BYTE PTR [rcx],al
   14003951c:	add    BYTE PTR [rax],al
   14003951e:	add    BYTE PTR [rdi],al
   140039520:	add    BYTE PTR [rax],al
   140039522:	add    BYTE PTR [rsi],bl
   140039524:	add    BYTE PTR [rax],al
   140039526:	add    BYTE PTR [rsi],bh
   140039528:	add    BYTE PTR [rax],al
   14003952a:	add    BYTE PTR [rcx+0x0],dl
   14003952d:	add    BYTE PTR [rax],al
   14003952f:	push   rsi
   140039530:	add    BYTE PTR [rax],al
   140039532:	add    BYTE PTR [rdi+0x0],dl
   140039535:	add    BYTE PTR [rax],al
   140039537:	push   rdi
   140039538:	add    BYTE PTR [rax],al
   14003953a:	add    BYTE PTR [rdi+0x0],dl
   14003953d:	add    BYTE PTR [rax],al
   14003953f:	push   rdi
   140039540:	add    BYTE PTR [rax],al
   140039542:	add    BYTE PTR [rdi+0x0],dl
   140039545:	add    BYTE PTR [rax],al
   140039547:	push   rdi
   140039548:	add    BYTE PTR [rax],al
   14003954a:	add    BYTE PTR [rdi+0x0],dl
   14003954d:	add    BYTE PTR [rax],al
   14003954f:	push   rdi
   140039550:	add    BYTE PTR [rax],al
   140039552:	add    BYTE PTR [rbx+0x4a],bl
   140039555:	rex.WX
   140039556:	rex.WX jp 0x14003953e
   140039559:	out    0xe2,eax
   14003955b:	in     al,dx
   14003955c:	mov    ah,0xc6
   14003955e:	test   eax,0xe6431fb
   140039563:	(bad)  
   140039564:	in     eax,dx
   140039565:	in     al,dx
   140039566:	jmp    0xc4823f69
   14003956b:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003956f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039573:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039577:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003957b:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003957f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039583:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039587:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003958b:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003958f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039593:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   140039597:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003959b:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003959f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   1400395a3:	jmp    QWORD PTR [rdi+0x1a]
   1400395a6:	jmp    QWORD PTR es:[rcx+0x12]
   1400395aa:	(bad)  
   1400395ab:	jmp    QWORD PTR [rcx+0x12]
   1400395ae:	(bad)  
   1400395af:	jmp    FWORD PTR [rax+0x1d]
   1400395b2:	sub    edi,edi
   1400395b4:	int    0xb5
   1400395b6:	mov    edx,0xe7e7ebfa
   1400395bb:	loop   0x140039632
   1400395bd:	jne    0x140039634
   1400395bf:	rex.X add BYTE PTR [rax],al
   1400395c2:	add    BYTE PTR [rbx],dl
   1400395c4:	add    BYTE PTR [rax],al
   1400395c6:	add    BYTE PTR [rsi],al
   1400395c8:	add    BYTE PTR [rax],al
   1400395ca:	add    BYTE PTR [rdx],al
	...
   1400395d8:	add    BYTE PTR [rax],al
   1400395da:	add    BYTE PTR [rcx],al
   1400395dc:	add    BYTE PTR [rax],al
   1400395de:	add    BYTE PTR [rbx],cl
   1400395e0:	add    BYTE PTR [rax],al
   1400395e2:	add    BYTE PTR [rip+0xffffffffff41cd52],ch        # 0x13f45633a
   1400395e8:	push   rdx
   1400395e9:	int    0x41
   1400395eb:	call   QWORD PTR [rdx-0x33]
   1400395ee:	call   QWORD PTR [r10-0x33]
   1400395f2:	call   QWORD PTR [r10-0x33]
   1400395f6:	call   QWORD PTR [r10-0x33]
   1400395fa:	call   QWORD PTR [r10-0x33]
   1400395fe:	call   QWORD PTR [r10-0x33]
   140039602:	call   QWORD PTR [r10-0x33]
   140039606:	call   QWORD PTR [r10-0x33]
   14003960a:	call   QWORD PTR [r10-0x33]
   14003960e:	inc    DWORD PTR [r9-0x10008a25]
   140039615:	imul   esp
   140039617:	dec    DWORD PTR [rcx+0x29ff76a8]
   14003961d:	pop    rsi
   14003961e:	add    eax,0x55e29ff
   140039623:	jmp    rdx
   140039625:	call   0x131f89607
   14003962a:	icebp  
   14003962b:	push   rsp
   14003962d:	icebp  
   14003962e:	icebp  
   14003962f:	push   rsp
   140039631:	icebp  
   140039632:	icebp  
   140039633:	push   rsp
   140039635:	icebp  
   140039636:	icebp  
   140039637:	push   rsp
   140039639:	icebp  
   14003963a:	icebp  
   14003963b:	push   rsp
   14003963d:	icebp  
   14003963e:	icebp  
   14003963f:	push   rsp
   140039641:	icebp  
   140039642:	icebp  
   140039643:	push   rsp
   140039645:	icebp  
   140039646:	icebp  
   140039647:	push   rsp
   140039649:	icebp  
   14003964a:	icebp  
   14003964b:	push   rsp
   14003964d:	icebp  
   14003964e:	icebp  
   14003964f:	push   rsp
   140039651:	icebp  
   140039652:	icebp  
   140039653:	push   rsp
   140039655:	icebp  
   140039656:	icebp  
   140039657:	push   rsp
   140039659:	icebp  
   14003965a:	icebp  
   14003965b:	push   rbp
   14003965d:	repnz icebp 
   14003965f:	(bad)  
   140039660:	sti    
   140039661:	cli    
   140039662:	cli    
   140039663:	push   QWORD PTR [rbx+0x61ff928d]
   140039669:	adc    bl,BYTE PTR [rsi]
   14003966b:	push   QWORD PTR [rdi+0x33]
   14003966e:	notrack jmp rsi
   140039671:	fcmovnu st,st(5)
   140039673:	clc    
   140039674:	fstp   st(2)
   140039676:	fidivr DWORD PTR [rdi+0x2a373737]
   14003967c:	add    BYTE PTR [rax],al
   14003967e:	add    BYTE PTR [rdi],cl
   140039680:	add    BYTE PTR [rax],al
   140039682:	add    BYTE PTR [rip+0x2000000],al        # 0x142039688
	...
   140039698:	add    BYTE PTR [rax],al
   14003969a:	add    BYTE PTR [rcx],al
   14003969c:	add    BYTE PTR [rax],al
   14003969e:	add    BYTE PTR [rip+0x32000000],cl        # 0x1720396a4
   1400396a4:	push   rdx
   1400396a5:	int    0x41
   1400396a7:	call   QWORD PTR [rdx-0x33]
   1400396aa:	call   QWORD PTR [r10-0x33]
   1400396ae:	call   QWORD PTR [r10-0x33]
   1400396b2:	call   QWORD PTR [r10-0x33]
   1400396b6:	call   QWORD PTR [r10-0x33]
   1400396ba:	call   QWORD PTR [r10-0x33]
   1400396be:	call   QWORD PTR [r10-0x33]
   1400396c2:	call   QWORD PTR [r10-0x33]
   1400396c6:	call   QWORD PTR [r10-0x33]
   1400396ca:	call   QWORD PTR [r15-0x12007321]
   1400396d1:	hlt    
   1400396d2:	jmp    0x1400396d3
   1400396d4:	movsxd ecx,DWORD PTR [rdx+0x5e29ff49]
   1400396da:	add    eax,0x55e29ff
   1400396df:	jmp    FWORD PTR [rcx]
   1400396e1:	pop    rsi
   1400396e2:	add    eax,0x55e29ff
   1400396e7:	jmp    FWORD PTR [rcx]
   1400396e9:	pop    rsi
   1400396ea:	add    eax,0x55e29ff
   1400396ef:	jmp    FWORD PTR [rcx]
   1400396f1:	pop    rsi
   1400396f2:	add    eax,0x55e29ff
   1400396f7:	jmp    FWORD PTR [rcx]
   1400396f9:	pop    rsi
   1400396fa:	add    eax,0x55e29ff
   1400396ff:	jmp    FWORD PTR [rcx]
   140039701:	pop    rsi
   140039702:	add    eax,0x55e29ff
   140039707:	jmp    FWORD PTR [rcx]
   140039709:	pop    rsi
   14003970a:	add    eax,0x55e29ff
   14003970f:	jmp    FWORD PTR [rcx]
   140039711:	pop    rsi
   140039712:	add    eax,0x55e29ff
   140039717:	jmp    FWORD PTR [rcx]
   140039719:	pop    rsi
   14003971a:	add    eax,0x55e29ff
   14003971f:	jmp    rbx
   140039721:	call   0xcdb79603
   140039726:	xchg   edx,eax
   140039727:	dec    DWORD PTR [rbp-0xa00a2ac]
   14003972d:	icebp  
   14003972e:	icebp  
   14003972f:	cli    
   140039730:	retf   0xcac8
   140039733:	cwde   
   140039734:	add    BYTE PTR [rax],al
   140039736:	add    BYTE PTR [rip+0xc000000],bl        # 0x14c03973c
   14003973c:	add    BYTE PTR [rax],al
   14003973e:	add    BYTE PTR [rbx],al
   140039740:	add    BYTE PTR [rax],al
   140039742:	add    BYTE PTR [rcx],al
	...
   140039758:	add    BYTE PTR [rax],al
   14003975a:	add    BYTE PTR [rcx],al
   14003975c:	add    BYTE PTR [rax],al
   14003975e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039764
   140039764:	push   rdx
   140039765:	int    0x41
   140039767:	call   QWORD PTR [rdx-0x33]
   14003976a:	call   QWORD PTR [r10-0x33]
   14003976e:	call   QWORD PTR [r10-0x33]
   140039772:	call   QWORD PTR [r10-0x33]
   140039776:	call   QWORD PTR [r10-0x33]
   14003977a:	call   QWORD PTR [r10-0x33]
   14003977e:	call   QWORD PTR [r10-0x33]
   140039782:	call   QWORD PTR [r15-0x31]
   140039786:	rex.RXB (bad) 
   140039788:	mov    esi,0xdaffb7e9
   14003978d:	out    0xd5,eax
   14003978f:	inc    DWORD PTR [rsi+0x73]
   140039792:	jmp    FWORD PTR es:[rcx]
   140039795:	pop    rsi
   140039796:	add    eax,0x55e29ff
   14003979b:	jmp    FWORD PTR [rcx]
   14003979d:	pop    rsi
   14003979e:	add    eax,0x55e29ff
   1400397a3:	jmp    FWORD PTR [rcx]
   1400397a5:	pop    rsi
   1400397a6:	add    eax,0x55e29ff
   1400397ab:	jmp    FWORD PTR [rcx]
   1400397ad:	pop    rsi
   1400397ae:	add    eax,0x55e29ff
   1400397b3:	jmp    FWORD PTR [rcx]
   1400397b5:	pop    rsi
   1400397b6:	add    eax,0x55e29ff
   1400397bb:	jmp    FWORD PTR [rcx]
   1400397bd:	pop    rsi
   1400397be:	add    eax,0x55e29ff
   1400397c3:	jmp    FWORD PTR [rcx]
   1400397c5:	pop    rsi
   1400397c6:	add    eax,0x55e29ff
   1400397cb:	jmp    FWORD PTR [rcx]
   1400397cd:	pop    rsi
   1400397ce:	add    eax,0x55e29ff
   1400397d3:	jmp    FWORD PTR [rcx]
   1400397d5:	pop    rsi
   1400397d6:	add    eax,0x55e29ff
   1400397db:	jmp    FWORD PTR [rcx]
   1400397dd:	pop    rsi
   1400397de:	add    eax,0xdde7e2ff
   1400397e3:	jmp    rsi
   1400397e5:	fcmovnu st,st(4)
   1400397e7:	push   rbx
   1400397e9:	icebp  
   1400397ea:	icebp  
   1400397eb:	test   DWORD PTR [rbp+0x778d8d],0x240000
   1400397f5:	add    BYTE PTR [rax],al
   1400397f7:	or     eax,0x4000000
	...
   140039818:	add    BYTE PTR [rax],al
   14003981a:	add    BYTE PTR [rcx],al
   14003981c:	add    BYTE PTR [rax],al
   14003981e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039824
   140039824:	push   rdx
   140039825:	int    0x41
   140039827:	call   QWORD PTR [rdx-0x33]
   14003982a:	call   QWORD PTR [r10-0x33]
   14003982e:	call   QWORD PTR [r10-0x33]
   140039832:	call   QWORD PTR [r10-0x33]
   140039836:	call   QWORD PTR [r10-0x33]
   14003983a:	call   QWORD PTR [r10-0x33]
   14003983e:	call   QWORD PTR [r14+rcx*8+0x43]
   140039843:	call   rsi
   140039845:	repnz sar bh,cl
   140039848:	fsub   st,st(4)
   14003984a:	sar    bh,cl
   14003984c:	xor    DWORD PTR [rdi+rcx*1-0x1],esp
   140039850:	sub    DWORD PTR [rsi+0x5],ebx
   140039853:	jmp    FWORD PTR [rcx]
   140039855:	pop    rsi
   140039856:	add    eax,0x55e29ff
   14003985b:	jmp    FWORD PTR [rcx]
   14003985d:	pop    rsi
   14003985e:	add    eax,0x55e29ff
   140039863:	jmp    FWORD PTR [rcx]
   140039865:	pop    rsi
   140039866:	add    eax,0x55e29ff
   14003986b:	jmp    FWORD PTR [rcx]
   14003986d:	pop    rsi
   14003986e:	add    eax,0x55e29ff
   140039873:	jmp    FWORD PTR [rcx]
   140039875:	pop    rsi
   140039876:	add    eax,0x55e29ff
   14003987b:	jmp    FWORD PTR [rcx]
   14003987d:	pop    rsi
   14003987e:	add    eax,0x55e29ff
   140039883:	jmp    FWORD PTR [rcx]
   140039885:	pop    rsi
   140039886:	add    eax,0x55e29ff
   14003988b:	jmp    FWORD PTR [rcx]
   14003988d:	pop    rsi
   14003988e:	add    eax,0x55e29ff
   140039893:	jmp    FWORD PTR [rcx]
   140039895:	pop    rsi
   140039896:	add    eax,0x55e29ff
   14003989b:	jmp    FWORD PTR [rcx]
   14003989d:	pop    rsi
   14003989e:	add    eax,0xdde9e3ff
   1400398a3:	(bad)  
   1400398a4:	in     al,dx
   1400398a5:	bnd call 0x18fa4f3aa
   1400398ab:	rol    DWORD PTR [rax],0x0
   1400398ae:	add    BYTE PTR [rsi+0x0],cl
   1400398b1:	add    BYTE PTR [rax],al
   1400398b3:	(bad)  
   1400398b4:	add    BYTE PTR [rax],al
   1400398b6:	add    BYTE PTR [rsi],cl
   1400398b8:	add    BYTE PTR [rax],al
   1400398ba:	add    BYTE PTR [rbx],al
	...
   1400398d8:	add    BYTE PTR [rax],al
   1400398da:	add    BYTE PTR [rcx],al
   1400398dc:	add    BYTE PTR [rax],al
   1400398de:	add    BYTE PTR [rip+0x34000000],cl        # 0x1740398e4
   1400398e4:	push   rdx
   1400398e5:	int    0x41
   1400398e7:	call   QWORD PTR [rdx-0x33]
   1400398ea:	call   QWORD PTR [r10-0x33]
   1400398ee:	call   QWORD PTR [r10-0x33]
   1400398f2:	call   QWORD PTR [r10-0x33]
   1400398f6:	call   QWORD PTR [r10-0x33]
   1400398fa:	call   QWORD PTR [r10-0x33]
   1400398fe:	call   QWORD PTR [r10-0x33]
   140039902:	push   QWORD PTR [r9-0x2a]
   140039906:	movsxd edi,edi
   140039908:	out    0xf4,al
   14003990a:	jrcxz  0x14003990b
   14003990c:	stos   BYTE PTR es:[rdi],al
   14003990d:	ret    0xff9d
   140039910:	sub    eax,0x29ff0a61
   140039915:	pop    rsi
   140039916:	add    eax,0x55e29ff
   14003991b:	jmp    FWORD PTR [rcx]
   14003991d:	pop    rsi
   14003991e:	add    eax,0x55e29ff
   140039923:	jmp    FWORD PTR [rcx]
   140039925:	pop    rsi
   140039926:	add    eax,0x55e29ff
   14003992b:	jmp    FWORD PTR [rcx]
   14003992d:	pop    rsi
   14003992e:	add    eax,0x55e29ff
   140039933:	jmp    FWORD PTR [rcx]
   140039935:	pop    rsi
   140039936:	add    eax,0x55e29ff
   14003993b:	jmp    FWORD PTR [rcx]
   14003993d:	pop    rsi
   14003993e:	add    eax,0x55e29ff
   140039943:	jmp    FWORD PTR [rcx]
   140039945:	pop    rsi
   140039946:	add    eax,0x55e29ff
   14003994b:	jmp    FWORD PTR [rcx]
   14003994d:	pop    rsi
   14003994e:	add    eax,0x55e29ff
   140039953:	jmp    FWORD PTR [rcx]
   140039955:	pop    rsi
   140039956:	add    eax,0x55e29ff
   14003995b:	jmp    FWORD PTR [rcx]
   14003995d:	pop    rsi
   14003995e:	add    eax,0xc4daccff
   140039963:	jmp    FWORD PTR [rdi+0x52ffa7e8]
   140039969:	int    0x41
   14003996b:	(bad)  
   14003996c:	cmp    dl,BYTE PTR [rbx+0xb22d]
   140039972:	add    BYTE PTR [rsi],bh
   140039974:	add    BYTE PTR [rax],al
   140039976:	add    BYTE PTR [rdx],bl
   140039978:	add    BYTE PTR [rax],al
   14003997a:	add    BYTE PTR [rsi],al
   14003997c:	add    BYTE PTR [rax],al
   14003997e:	add    BYTE PTR [rcx],al
	...
   140039998:	add    BYTE PTR [rax],al
   14003999a:	add    BYTE PTR [rcx],al
   14003999c:	add    BYTE PTR [rax],al
   14003999e:	add    BYTE PTR [rip+0x34000000],cl        # 0x1740399a4
   1400399a4:	push   rdx
   1400399a5:	int    0x41
   1400399a7:	call   QWORD PTR [rdx-0x33]
   1400399aa:	call   QWORD PTR [r10-0x33]
   1400399ae:	call   QWORD PTR [r10-0x33]
   1400399b2:	call   QWORD PTR [r10-0x33]
   1400399b6:	call   QWORD PTR [r10-0x33]
   1400399ba:	call   QWORD PTR [r10-0x33]
   1400399be:	call   QWORD PTR [r10-0x33]
   1400399c2:	call   QWORD PTR [r10-0x33]
   1400399c6:	call   FWORD PTR [r14-0x2f]
   1400399ca:	rex.WRX dec rsi
   1400399cd:	in     eax,dx
   1400399ce:	leave  
   1400399cf:	dec    esi
   1400399d1:	faddp  st(7),st
   1400399d3:	(bad)  
   1400399d4:	cmp    eax,0x29ff1d6d
   1400399d9:	pop    rsi
   1400399da:	add    eax,0x55e29ff
   1400399df:	jmp    FWORD PTR [rcx]
   1400399e1:	pop    rsi
   1400399e2:	add    eax,0x55e29ff
   1400399e7:	jmp    FWORD PTR [rcx]
   1400399e9:	pop    rsi
   1400399ea:	add    eax,0x55e29ff
   1400399ef:	jmp    FWORD PTR [rcx]
   1400399f1:	pop    rsi
   1400399f2:	add    eax,0x55e29ff
   1400399f7:	jmp    FWORD PTR [rcx]
   1400399f9:	pop    rsi
   1400399fa:	add    eax,0x55e29ff
   1400399ff:	jmp    FWORD PTR [rcx]
   140039a01:	pop    rsi
   140039a02:	add    eax,0x55e29ff
   140039a07:	jmp    FWORD PTR [rcx]
   140039a09:	pop    rsi
   140039a0a:	add    eax,0x55e29ff
   140039a0f:	jmp    FWORD PTR [rcx]
   140039a11:	pop    rsi
   140039a12:	add    eax,0x55e29ff
   140039a17:	jmp    FWORD PTR [rcx]
   140039a19:	pop    rsi
   140039a1a:	add    eax,0x55e29ff
   140039a1f:	push   QWORD PTR [rbx-0x53005838]
   140039a25:	out    0xa3,eax
   140039a27:	call   QWORD PTR [rdx-0x33]
   140039a2a:	call   QWORD PTR [r10-0x33]
   140039a2e:	rex.B (bad) 
   140039a30:	ds cdq 
   140039a32:	(bad)  
   140039a33:	stos   DWORD PTR es:[rdi],eax
   140039a34:	add    BYTE PTR [rax],al
   140039a36:	add    BYTE PTR [rdi],ah
   140039a38:	add    BYTE PTR [rax],al
   140039a3a:	add    BYTE PTR [rdx],cl
   140039a3c:	add    BYTE PTR [rax],al
   140039a3e:	add    BYTE PTR [rcx],al
	...
   140039a58:	add    BYTE PTR [rax],al
   140039a5a:	add    BYTE PTR [rcx],al
   140039a5c:	add    BYTE PTR [rax],al
   140039a5e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039a64
   140039a64:	push   rdx
   140039a65:	int    0x41
   140039a67:	call   QWORD PTR [rdx-0x33]
   140039a6a:	call   QWORD PTR [r10-0x33]
   140039a6e:	call   QWORD PTR [r10-0x33]
   140039a72:	call   QWORD PTR [r10-0x33]
   140039a76:	call   QWORD PTR [r10-0x33]
   140039a7a:	call   QWORD PTR [r10-0x33]
   140039a7e:	call   QWORD PTR [r10-0x33]
   140039a82:	call   QWORD PTR [r10-0x33]
   140039a86:	call   QWORD PTR [r11-0x33]
   140039a8a:	rex.X dec DWORD PTR [rdi-0x18007b22]
   140039a91:	mul    ah
   140039a93:	(bad)  
   140039a94:	out    dx,al
   140039a95:	bnd jmp 0x140039a97
   140039a98:	push   rsp
   140039a99:	jle    0x140039ad2
   140039a9b:	jmp    FWORD PTR [rcx]
   140039a9d:	pop    rsi
   140039a9e:	add    eax,0x55e29ff
   140039aa3:	inc    DWORD PTR [rax-0x5d009561]
   140039aa9:	mov    ecx,0xb89dff92
   140039aae:	(bad)  
   140039aaf:	call   FWORD PTR [rax+rdi*4-0x47630074]
   140039ab6:	mov    edi,?
   140039ab8:	pushf  
   140039ab9:	mov    eax,0xb89cff8c
   140039abe:	mov    edi,?
   140039ac0:	pushf  
   140039ac1:	mov    eax,0xb89dff8c
   140039ac6:	mov    edi,?
   140039ac8:	lahf   
   140039ac9:	mov    ecx,0xb9a2ff90
   140039ace:	xchg   edx,eax
   140039acf:	jmp    QWORD PTR [rdx-0x5d006d47]
   140039ad5:	mov    ecx,0xb9a2ff92
   140039ada:	xchg   edx,eax
   140039adb:	call   FWORD PTR [rax+rdi*4-0x18220074]
   140039ae2:	xlat   BYTE PTR ds:[rbx]
   140039ae3:	jmp    FWORD PTR [rdi+riz*8-0x32ad005d]
   140039aea:	call   QWORD PTR [r10-0x33]
   140039aee:	call   QWORD PTR [r10-0x33]
   140039af2:	inc    DWORD PTR [r8]
   140039af5:	add    BYTE PTR [rax],al
   140039af7:	xor    BYTE PTR [rax],al
   140039af9:	add    BYTE PTR [rax],al
   140039afb:	or     al,0x0
   140039afd:	add    BYTE PTR [rax],al
   140039aff:	add    DWORD PTR [rax],eax
	...
   140039b19:	add    BYTE PTR [rax],al
   140039b1b:	add    DWORD PTR [rax],eax
   140039b1d:	add    BYTE PTR [rax],al
   140039b1f:	or     eax,0x34000000
   140039b24:	push   rdx
   140039b25:	int    0x41
   140039b27:	call   QWORD PTR [rdx-0x33]
   140039b2a:	call   QWORD PTR [r10-0x33]
   140039b2e:	call   QWORD PTR [r10-0x33]
   140039b32:	call   QWORD PTR [r10-0x33]
   140039b36:	call   QWORD PTR [r10-0x33]
   140039b3a:	call   QWORD PTR [r10-0x33]
   140039b3e:	call   QWORD PTR [r10-0x33]
   140039b42:	call   QWORD PTR [r10-0x33]
   140039b46:	rex.B (bad) 
   140039b48:	mov    esp,0xffffb5ec
   140039b4d:	(bad)  
   140039b4e:	(bad)  
   140039b4f:	(bad)  
   140039b50:	(bad)  
   140039b51:	(bad)  
   140039b52:	(bad)  
   140039b53:	(bad)  
   140039b54:	(bad)  
   140039b55:	(bad)  
   140039b56:	(bad)  
   140039b57:	(bad)  
   140039b58:	clc    
   140039b59:	stc    
   140039b5a:	idiv   bh
   140039b5c:	jns    0x140039af8
   140039b5e:	(bad)  
   140039b5f:	jmp    FWORD PTR [rcx]
   140039b61:	pop    rsi
   140039b62:	add    eax,0xcaddd1ff
   140039b67:	(bad)  
   140039b68:	(bad)  
   140039b69:	(bad)  
   140039b6a:	(bad)  
   140039b6b:	dec    esp
   140039b6d:	lock (bad) 
   140039b6f:	call   QWORD PTR [rdi-0x6800721f]
   140039b75:	loope  0x140039b04
   140039b77:	call   QWORD PTR [rdi-0x6800721f]
   140039b7d:	loope  0x140039b0c
   140039b7f:	call   QWORD PTR [rdi-0x3a00721f]
   140039b85:	out    dx,al
   140039b86:	mov    edi,0xffffffff
   140039b8b:	(bad)  
   140039b8c:	std    
   140039b8d:	(bad)  
   140039b8e:	std    
   140039b8f:	push   rdx
   140039b91:	sti    
   140039b92:	lock push rbp
   140039b95:	cld    
   140039b96:	hlt    
   140039b97:	(bad)  
   140039b98:	cld    
   140039b99:	(bad)  
   140039b9a:	sti    
   140039b9b:	call   QWORD PTR [rdi-0x6800721f]
   140039ba1:	loope  0x140039b30
   140039ba3:	push   QWORD PTR [rsi-0x29]
   140039ba6:	push   0x41cd52ff
   140039bab:	call   QWORD PTR [rdx-0x33]
   140039bae:	call   QWORD PTR [r10-0x33]
   140039bb2:	inc    DWORD PTR [r8]
   140039bb5:	add    BYTE PTR [rax],al
   140039bb7:	xor    eax,DWORD PTR [rax]
   140039bb9:	add    BYTE PTR [rax],al
   140039bbb:	or     eax,0x1000000
	...
   140039bd8:	add    BYTE PTR [rax],al
   140039bda:	add    BYTE PTR [rcx],al
   140039bdc:	add    BYTE PTR [rax],al
   140039bde:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039be4
   140039be4:	push   rdx
   140039be5:	int    0x41
   140039be7:	call   QWORD PTR [rdx-0x33]
   140039bea:	call   QWORD PTR [r10-0x33]
   140039bee:	call   QWORD PTR [r10-0x33]
   140039bf2:	call   QWORD PTR [r10-0x33]
   140039bf6:	call   QWORD PTR [r10-0x33]
   140039bfa:	call   QWORD PTR [r10-0x33]
   140039bfe:	call   QWORD PTR [r10-0x33]
   140039c02:	dec    DWORD PTR [r8-0x8223]
   140039c09:	(bad)  
   140039c0a:	(bad)  
   140039c0b:	(bad)  
   140039c0c:	(bad)  
   140039c0d:	(bad)  
   140039c0e:	(bad)  
   140039c0f:	(bad)  
   140039c10:	jmp    0xd403830e
   140039c15:	loopne 0x140039ba0
   140039c17:	dec    DWORD PTR [rdx-0x15008123]
   140039c1d:	cmc    
   140039c1e:	out    0xff,eax
   140039c20:	lods   al,BYTE PTR ds:[rsi]
   140039c21:	ret    0xff9e
   140039c24:	(bad)  
   140039c25:	(bad)  
   140039c27:	(bad)  
   140039c28:	(bad)  
   140039c29:	(bad)  
   140039c2a:	(bad)  
   140039c2b:	(bad)  
   140039c2c:	(bad)  
   140039c2d:	(bad)  
   140039c2e:	(bad)  
   140039c2f:	inc    DWORD PTR [rcx+0x52ff74db]
   140039c35:	int    0x41
   140039c37:	call   QWORD PTR [rdx-0x33]
   140039c3a:	call   QWORD PTR [r10-0x33]
   140039c3e:	call   QWORD PTR [r10-0x33]
   140039c42:	call   r13
   140039c45:	repz sar edi,1
   140039c48:	(bad)  
   140039c49:	(bad)  
   140039c4a:	(bad)  
   140039c4b:	call   QWORD PTR [rax+riz*8-0x32ad0077]
   140039c52:	call   QWORD PTR [r10-0x33]
   140039c56:	call   QWORD PTR [r10-0x33]
   140039c5a:	call   QWORD PTR [r10-0x33]
   140039c5e:	call   QWORD PTR [r10-0x33]
   140039c62:	call   QWORD PTR [r10-0x33]
   140039c66:	call   QWORD PTR [r10-0x33]
   140039c6a:	call   QWORD PTR [r10-0x33]
   140039c6e:	call   QWORD PTR [r10-0x33]
   140039c72:	inc    DWORD PTR [r8]
   140039c75:	add    BYTE PTR [rax],al
   140039c77:	xor    al,0x0
   140039c79:	add    BYTE PTR [rax],al
   140039c7b:	or     eax,0x1000000
	...
   140039c98:	add    BYTE PTR [rax],al
   140039c9a:	add    BYTE PTR [rcx],al
   140039c9c:	add    BYTE PTR [rax],al
   140039c9e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039ca4
   140039ca4:	push   rdx
   140039ca5:	int    0x41
   140039ca7:	call   QWORD PTR [rdx-0x33]
   140039caa:	call   QWORD PTR [r10-0x33]
   140039cae:	call   QWORD PTR [r10-0x33]
   140039cb2:	call   QWORD PTR [r10-0x33]
   140039cb6:	call   QWORD PTR [r10-0x33]
   140039cba:	call   QWORD PTR [r10-0x33]
   140039cbe:	call   QWORD PTR [r10-0x33]
   140039cc2:	call   r9
   140039cc5:	repnz int3 
   140039cc7:	(bad)  
   140039cc8:	(bad)  
   140039cc9:	(bad)  
   140039cca:	(bad)  
   140039ccb:	(bad)  
   140039ccc:	stc    
   140039ccd:	std    
   140039cce:	clc    
   140039ccf:	jmp    QWORD PTR [rdi-0x2d]
   140039cd2:	pop    rax
   140039cd3:	call   QWORD PTR [rdx-0x33]
   140039cd6:	call   QWORD PTR [r10-0x33]
   140039cda:	call   FWORD PTR [r15-0x2f]
   140039cde:	rex.WRXB call r8
   140039ce1:	out    dx,al
   140039ce2:	retf   
   140039ce3:	(bad)  
   140039ce4:	(bad)  
   140039ce5:	(bad)  
   140039ce6:	(bad)  
   140039ce7:	(bad)  
   140039ce8:	stc    
   140039ce9:	std    
   140039cea:	stc    
   140039ceb:	(bad)  
   140039cec:	(bad)  
   140039ced:	(bad)  
   140039cee:	(bad)  
   140039cef:	call   rbx
   140039cf1:	repnz iret 
   140039cf3:	call   QWORD PTR [rdx-0x33]
   140039cf6:	call   QWORD PTR [r10-0x33]
   140039cfa:	call   QWORD PTR [r10-0x33]
   140039cfe:	call   QWORD PTR [r10-0x33]
   140039d02:	rex.B (bad) 
   140039d04:	jmp    0x140039cff
   140039d06:	jmp    0x140039d0a
   140039d0b:	push   QWORD PTR [rcx-0x2a]
   140039d0e:	movsxd edi,edi
   140039d10:	push   rdx
   140039d11:	int    0x41
   140039d13:	call   QWORD PTR [rdx-0x33]
   140039d16:	call   QWORD PTR [r10-0x33]
   140039d1a:	call   QWORD PTR [r10-0x33]
   140039d1e:	call   QWORD PTR [r10-0x33]
   140039d22:	call   QWORD PTR [r10-0x33]
   140039d26:	call   QWORD PTR [r10-0x33]
   140039d2a:	call   QWORD PTR [r10-0x33]
   140039d2e:	call   QWORD PTR [r10-0x33]
   140039d32:	inc    DWORD PTR [r8]
   140039d35:	add    BYTE PTR [rax],al
   140039d37:	xor    al,0x0
   140039d39:	add    BYTE PTR [rax],al
   140039d3b:	or     eax,0x1000000
	...
   140039d58:	add    BYTE PTR [rax],al
   140039d5a:	add    BYTE PTR [rcx],al
   140039d5c:	add    BYTE PTR [rax],al
   140039d5e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039d64
   140039d64:	push   rdx
   140039d65:	int    0x41
   140039d67:	call   QWORD PTR [rdx-0x33]
   140039d6a:	call   QWORD PTR [r10-0x33]
   140039d6e:	call   QWORD PTR [r10-0x33]
   140039d72:	call   QWORD PTR [r10-0x33]
   140039d76:	call   QWORD PTR [r10-0x33]
   140039d7a:	call   QWORD PTR [r10-0x33]
   140039d7e:	call   QWORD PTR [r15-0x31]
   140039d82:	rex.RXB (bad) 
   140039d84:	cld    
   140039d85:	(bad)  
   140039d86:	sti    
   140039d87:	(bad)  
   140039d88:	(bad)  
   140039d89:	(bad)  
   140039d8a:	(bad)  
   140039d8b:	inc    ebp
   140039d8d:	out    dx,al
   140039d8e:	sar    bh,0x52
   140039d91:	int    0x41
   140039d93:	call   QWORD PTR [rdx-0x33]
   140039d96:	call   QWORD PTR [r10-0x33]
   140039d9a:	call   QWORD PTR [r10-0x33]
   140039d9e:	call   QWORD PTR [r13-0x32]
   140039da2:	rex.R push QWORD PTR [rdx-0x26005518]
   140039da9:	hlt    
   140039daa:	(bad)  
   140039dab:	(bad)  
   140039dac:	(bad)  
   140039dad:	(bad)  
   140039dae:	(bad)  
   140039daf:	(bad)  
   140039db0:	cli    
   140039db1:	std    
   140039db2:	stc    
   140039db3:	call   QWORD PTR [rsi-0x32]
   140039db6:	rex.RB call QWORD PTR [r10-0x33]
   140039dba:	call   QWORD PTR [r10-0x33]
   140039dbe:	call   QWORD PTR [r10-0x33]
   140039dc2:	rex.B (bad) 
   140039dc4:	clc    
   140039dc5:	std    
   140039dc6:	idiv   edi
   140039dc8:	(bad)  
   140039dc9:	(bad)  
   140039dca:	(bad)  
   140039dcb:	jmp    QWORD PTR [rax-0x2f]
   140039dce:	push   rax
   140039dcf:	call   QWORD PTR [rdx-0x33]
   140039dd2:	call   QWORD PTR [r10-0x33]
   140039dd6:	call   QWORD PTR [r10-0x33]
   140039dda:	call   QWORD PTR [r10-0x33]
   140039dde:	call   QWORD PTR [r10-0x33]
   140039de2:	call   QWORD PTR [r10-0x33]
   140039de6:	call   QWORD PTR [r10-0x33]
   140039dea:	call   QWORD PTR [r10-0x33]
   140039dee:	call   QWORD PTR [r10-0x33]
   140039df2:	inc    DWORD PTR [r8]
   140039df5:	add    BYTE PTR [rax],al
   140039df7:	xor    al,0x0
   140039df9:	add    BYTE PTR [rax],al
   140039dfb:	or     eax,0x1000000
	...
   140039e18:	add    BYTE PTR [rax],al
   140039e1a:	add    BYTE PTR [rcx],al
   140039e1c:	add    BYTE PTR [rax],al
   140039e1e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039e24
   140039e24:	push   rdx
   140039e25:	int    0x41
   140039e27:	call   QWORD PTR [rdx-0x33]
   140039e2a:	call   QWORD PTR [r10-0x33]
   140039e2e:	call   QWORD PTR [r10-0x33]
   140039e32:	call   QWORD PTR [r10-0x33]
   140039e36:	call   QWORD PTR [r10-0x33]
   140039e3a:	call   QWORD PTR [r10-0x33]
   140039e3e:	push   QWORD PTR [r9-0x2a]
   140039e42:	movsxd edi,edi
   140039e44:	(bad)  
   140039e45:	(bad)  
   140039e46:	(bad)  
   140039e47:	(bad)  
   140039e48:	(bad)  
   140039e49:	(bad)  
   140039e4a:	(bad)  
   140039e4b:	jmp    QWORD PTR [rbx+0x52ff9ae5]
   140039e51:	int    0x41
   140039e53:	call   QWORD PTR [rdx-0x33]
   140039e56:	call   QWORD PTR [r10-0x33]
   140039e5a:	call   QWORD PTR [r10-0x33]
   140039e5e:	call   QWORD PTR [r10-0x33]
   140039e62:	call   QWORD PTR [r10-0x33]
   140039e66:	jmp    QWORD PTR [r10-0x661c]
   140039e6d:	(bad)  
   140039e6e:	(bad)  
   140039e6f:	(bad)  
   140039e70:	(bad)  
   140039e71:	(bad)  
   140039e72:	(bad)  
   140039e73:	push   QWORD PTR [rbx-0x2a]
   140039e76:	call   QWORD PTR gs:[rdx-0x33]
   140039e7a:	call   QWORD PTR [r10-0x33]
   140039e7e:	call   QWORD PTR [r11-0x33]
   140039e82:	rex.X (bad) 
   140039e84:	(bad)  
   140039e85:	(bad)  
   140039e86:	(bad)  
   140039e87:	(bad)  
   140039e88:	(bad)  
   140039e89:	(bad)  
   140039e8a:	(bad)  
   140039e8b:	call   QWORD PTR [rsi+rcx*8+0x43]
   140039e8f:	call   QWORD PTR [rdx-0x33]
   140039e92:	call   QWORD PTR [r10-0x33]
   140039e96:	call   QWORD PTR [r10-0x33]
   140039e9a:	call   QWORD PTR [r10-0x33]
   140039e9e:	call   QWORD PTR [r10-0x33]
   140039ea2:	call   QWORD PTR [r10-0x33]
   140039ea6:	call   QWORD PTR [r10-0x33]
   140039eaa:	call   QWORD PTR [r10-0x33]
   140039eae:	call   QWORD PTR [r10-0x33]
   140039eb2:	inc    DWORD PTR [r8]
   140039eb5:	add    BYTE PTR [rax],al
   140039eb7:	xor    al,0x0
   140039eb9:	add    BYTE PTR [rax],al
   140039ebb:	or     eax,0x1000000
	...
   140039ed8:	add    BYTE PTR [rax],al
   140039eda:	add    BYTE PTR [rcx],al
   140039edc:	add    BYTE PTR [rax],al
   140039ede:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039ee4
   140039ee4:	push   rdx
   140039ee5:	int    0x41
   140039ee7:	call   QWORD PTR [rdx-0x33]
   140039eea:	call   QWORD PTR [r10-0x33]
   140039eee:	call   QWORD PTR [r10-0x33]
   140039ef2:	call   QWORD PTR [r10-0x33]
   140039ef6:	call   QWORD PTR [r10-0x33]
   140039efa:	call   QWORD PTR [r10-0x33]
   140039efe:	inc    DWORD PTR [r10-0x8925]
   140039f05:	(bad)  
   140039f06:	(bad)  
   140039f07:	(bad)  
   140039f08:	(bad)  
   140039f09:	(bad)  
   140039f0a:	(bad)  
   140039f0b:	call   QWORD PTR [rsi+0x52ff8ce1]
   140039f11:	int    0x41
   140039f13:	call   QWORD PTR [rdx-0x33]
   140039f16:	call   QWORD PTR [r10-0x33]
   140039f1a:	call   QWORD PTR [r10-0x33]
   140039f1e:	call   QWORD PTR [r10-0x33]
   140039f22:	call   QWORD PTR [r10-0x33]
   140039f26:	call   QWORD PTR [r8-0x7921]
   140039f2d:	(bad)  
   140039f2e:	(bad)  
   140039f2f:	(bad)  
   140039f30:	(bad)  
   140039f31:	(bad)  
   140039f32:	(bad)  
   140039f33:	(bad)  
   140039f34:	jg     0x140039f10
   140039f36:	jb     0x140039f37
   140039f38:	push   rdx
   140039f39:	int    0x41
   140039f3b:	call   QWORD PTR [rdx-0x33]
   140039f3e:	call   QWORD PTR [r11-0x33]
   140039f42:	rex.X (bad) 
   140039f44:	(bad)  
   140039f45:	(bad)  
   140039f46:	(bad)  
   140039f47:	(bad)  
   140039f48:	(bad)  
   140039f49:	(bad)  
   140039f4a:	(bad)  
   140039f4b:	call   QWORD PTR [rdx-0x33]
   140039f4e:	call   QWORD PTR [r10-0x33]
   140039f52:	call   QWORD PTR [r10-0x33]
   140039f56:	call   QWORD PTR [r10-0x33]
   140039f5a:	call   QWORD PTR [r10-0x33]
   140039f5e:	call   QWORD PTR [r10-0x33]
   140039f62:	call   QWORD PTR [r10-0x33]
   140039f66:	call   QWORD PTR [r10-0x33]
   140039f6a:	call   QWORD PTR [r10-0x33]
   140039f6e:	call   QWORD PTR [r10-0x33]
   140039f72:	inc    DWORD PTR [r8]
   140039f75:	add    BYTE PTR [rax],al
   140039f77:	xor    al,0x0
   140039f79:	add    BYTE PTR [rax],al
   140039f7b:	or     eax,0x1000000
	...
   140039f98:	add    BYTE PTR [rax],al
   140039f9a:	add    BYTE PTR [rcx],al
   140039f9c:	add    BYTE PTR [rax],al
   140039f9e:	add    BYTE PTR [rip+0x34000000],cl        # 0x174039fa4
   140039fa4:	push   rdx
   140039fa5:	int    0x41
   140039fa7:	call   QWORD PTR [rdx-0x33]
   140039faa:	call   QWORD PTR [r10-0x33]
   140039fae:	call   QWORD PTR [r10-0x33]
   140039fb2:	call   QWORD PTR [r10-0x33]
   140039fb6:	call   QWORD PTR [r10-0x33]
   140039fba:	call   QWORD PTR [r10-0x33]
   140039fbe:	dec    DWORD PTR [r10-0x8123]
   140039fc5:	(bad)  
   140039fc6:	(bad)  
   140039fc7:	(bad)  
   140039fc8:	(bad)  
   140039fc9:	(bad)  
   140039fca:	(bad)  
   140039fcb:	dec    DWORD PTR [rdx+0x52ff7edd]
   140039fd1:	int    0x41
   140039fd3:	call   QWORD PTR [rdx-0x33]
   140039fd6:	call   QWORD PTR [r10-0x33]
   140039fda:	call   QWORD PTR [r10-0x33]
   140039fde:	call   QWORD PTR [r10-0x33]
   140039fe2:	call   QWORD PTR [r10-0x33]
   140039fe6:	inc    DWORD PTR [r11+rbx*8-0x89]
   140039fee:	(bad)  
   140039fef:	(bad)  
   140039ff0:	(bad)  
   140039ff1:	(bad)  
   140039ff2:	(bad)  
   140039ff3:	dec    DWORD PTR [rdx+0x52ff7edd]
   140039ff9:	int    0x41
   140039ffb:	call   QWORD PTR [rdx-0x33]
   140039ffe:	call   QWORD PTR [r11-0x33]
   14003a002:	rex.X (bad) 
   14003a004:	(bad)  
   14003a005:	(bad)  
   14003a006:	(bad)  
   14003a007:	(bad)  
   14003a008:	(bad)  
   14003a009:	(bad)  
   14003a00a:	(bad)  
   14003a00b:	call   QWORD PTR [rdx-0x33]
   14003a00e:	call   QWORD PTR [r10-0x33]
   14003a012:	call   QWORD PTR [r10-0x33]
   14003a016:	call   QWORD PTR [r10-0x33]
   14003a01a:	call   QWORD PTR [r10-0x33]
   14003a01e:	call   QWORD PTR [r10-0x33]
   14003a022:	call   QWORD PTR [r10-0x33]
   14003a026:	call   QWORD PTR [r10-0x33]
   14003a02a:	call   QWORD PTR [r10-0x33]
   14003a02e:	call   QWORD PTR [r10-0x33]
   14003a032:	inc    DWORD PTR [r8]
   14003a035:	add    BYTE PTR [rax],al
   14003a037:	xor    al,0x0
   14003a039:	add    BYTE PTR [rax],al
   14003a03b:	or     eax,0x1000000
	...
   14003a058:	add    BYTE PTR [rax],al
   14003a05a:	add    BYTE PTR [rcx],al
   14003a05c:	add    BYTE PTR [rax],al
   14003a05e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403a064
   14003a064:	push   rdx
   14003a065:	int    0x41
   14003a067:	call   QWORD PTR [rdx-0x33]
   14003a06a:	call   QWORD PTR [r10-0x33]
   14003a06e:	call   QWORD PTR [r10-0x33]
   14003a072:	call   QWORD PTR [r10-0x33]
   14003a076:	call   QWORD PTR [r10-0x33]
   14003a07a:	call   QWORD PTR [r10-0x33]
   14003a07e:	dec    DWORD PTR [r9-0x8223]
   14003a085:	(bad)  
   14003a086:	(bad)  
   14003a087:	(bad)  
   14003a088:	(bad)  
   14003a089:	(bad)  
   14003a08a:	(bad)  
   14003a08b:	dec    DWORD PTR [rdx+0x52ff7fdd]
   14003a091:	int    0x41
   14003a093:	call   QWORD PTR [rdx-0x33]
   14003a096:	call   QWORD PTR [r10-0x33]
   14003a09a:	call   QWORD PTR [r10-0x33]
   14003a09e:	call   QWORD PTR [r10-0x33]
   14003a0a2:	call   QWORD PTR [r10-0x33]
   14003a0a6:	inc    DWORD PTR [r14-0x8524]
   14003a0ad:	(bad)  
   14003a0ae:	(bad)  
   14003a0af:	(bad)  
   14003a0b0:	(bad)  
   14003a0b1:	(bad)  
   14003a0b2:	(bad)  
   14003a0b3:	dec    DWORD PTR [rdx+0x52ff7edd]
   14003a0b9:	int    0x41
   14003a0bb:	call   QWORD PTR [rdx-0x33]
   14003a0be:	call   QWORD PTR [r11-0x33]
   14003a0c2:	rex.X (bad) 
   14003a0c4:	(bad)  
   14003a0c5:	(bad)  
   14003a0c6:	(bad)  
   14003a0c7:	(bad)  
   14003a0c8:	(bad)  
   14003a0c9:	(bad)  
   14003a0ca:	(bad)  
   14003a0cb:	call   QWORD PTR [rdx-0x33]
   14003a0ce:	call   QWORD PTR [r10-0x33]
   14003a0d2:	call   QWORD PTR [r10-0x33]
   14003a0d6:	call   QWORD PTR [r10-0x33]
   14003a0da:	call   QWORD PTR [r10-0x33]
   14003a0de:	call   QWORD PTR [r10-0x33]
   14003a0e2:	call   QWORD PTR [r10-0x33]
   14003a0e6:	call   QWORD PTR [r10-0x33]
   14003a0ea:	call   QWORD PTR [r10-0x33]
   14003a0ee:	call   QWORD PTR [r10-0x33]
   14003a0f2:	inc    DWORD PTR [r8]
   14003a0f5:	add    BYTE PTR [rax],al
   14003a0f7:	xor    al,0x0
   14003a0f9:	add    BYTE PTR [rax],al
   14003a0fb:	or     eax,0x1000000
	...
   14003a118:	add    BYTE PTR [rax],al
   14003a11a:	add    BYTE PTR [rcx],al
   14003a11c:	add    BYTE PTR [rax],al
   14003a11e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403a124
   14003a124:	push   rdx
   14003a125:	int    0x41
   14003a127:	call   QWORD PTR [rdx-0x33]
   14003a12a:	call   QWORD PTR [r10-0x33]
   14003a12e:	call   QWORD PTR [r10-0x33]
   14003a132:	call   QWORD PTR [r10-0x33]
   14003a136:	call   QWORD PTR [r10-0x33]
   14003a13a:	call   QWORD PTR [r10-0x33]
   14003a13e:	inc    DWORD PTR [r9-0x8b25]
   14003a145:	(bad)  
   14003a146:	(bad)  
   14003a147:	(bad)  
   14003a148:	(bad)  
   14003a149:	(bad)  
   14003a14a:	(bad)  
   14003a14b:	call   FWORD PTR [rax+0x52ff8ee1]
   14003a151:	int    0x41
   14003a153:	call   QWORD PTR [rdx-0x33]
   14003a156:	call   QWORD PTR [r10-0x33]
   14003a15a:	call   QWORD PTR [r10-0x33]
   14003a15e:	call   QWORD PTR [r10-0x33]
   14003a162:	call   QWORD PTR [r10-0x33]
   14003a166:	call   QWORD PTR [r10-0x7821]
   14003a16d:	(bad)  
   14003a16e:	(bad)  
   14003a16f:	(bad)  
   14003a170:	(bad)  
   14003a171:	(bad)  
   14003a172:	(bad)  
   14003a173:	inc    DWORD PTR [rcx+0x52ff75db]
   14003a179:	int    0x41
   14003a17b:	call   QWORD PTR [rdx-0x33]
   14003a17e:	call   QWORD PTR [r10-0x33]
   14003a182:	rex.B (bad) 
   14003a184:	(bad)  
   14003a185:	(bad)  
   14003a186:	(bad)  
   14003a187:	(bad)  
   14003a188:	(bad)  
   14003a189:	(bad)  
   14003a18a:	(bad)  
   14003a18b:	call   QWORD PTR [rdx-0x33]
   14003a18e:	call   QWORD PTR [r10-0x33]
   14003a192:	call   QWORD PTR [r10-0x33]
   14003a196:	call   QWORD PTR [r10-0x33]
   14003a19a:	call   QWORD PTR [r10-0x33]
   14003a19e:	call   QWORD PTR [r10-0x33]
   14003a1a2:	call   QWORD PTR [r10-0x33]
   14003a1a6:	call   QWORD PTR [r10-0x33]
   14003a1aa:	call   QWORD PTR [r10-0x33]
   14003a1ae:	call   QWORD PTR [r10-0x33]
   14003a1b2:	inc    DWORD PTR [r8]
   14003a1b5:	add    BYTE PTR [rax],al
   14003a1b7:	xor    al,0x0
   14003a1b9:	add    BYTE PTR [rax],al
   14003a1bb:	or     eax,0x1000000
	...
   14003a1d8:	add    BYTE PTR [rax],al
   14003a1da:	add    BYTE PTR [rcx],al
   14003a1dc:	add    BYTE PTR [rax],al
   14003a1de:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403a1e4
   14003a1e4:	push   rdx
   14003a1e5:	int    0x41
   14003a1e7:	call   QWORD PTR [rdx-0x33]
   14003a1ea:	call   QWORD PTR [r10-0x33]
   14003a1ee:	call   QWORD PTR [r10-0x33]
   14003a1f2:	call   QWORD PTR [r10-0x33]
   14003a1f6:	call   QWORD PTR [r10-0x33]
   14003a1fa:	call   QWORD PTR [r10-0x33]
   14003a1fe:	jmp    FWORD PTR [r13-0x2b]
   14003a202:	pop    rdi
   14003a203:	(bad)  
   14003a204:	(bad)  
   14003a205:	(bad)  
   14003a206:	(bad)  
   14003a207:	(bad)  
   14003a208:	(bad)  
   14003a209:	(bad)  
   14003a20a:	(bad)  
   14003a20b:	jmp    QWORD PTR [rsi+0x52ff9de5]
   14003a211:	int    0x41
   14003a213:	call   QWORD PTR [rdx-0x33]
   14003a216:	call   QWORD PTR [r10-0x33]
   14003a21a:	call   QWORD PTR [r10-0x33]
   14003a21e:	call   QWORD PTR [r10-0x33]
   14003a222:	call   QWORD PTR [r10-0x33]
   14003a226:	jmp    QWORD PTR [r9-0x681c]
   14003a22d:	(bad)  
   14003a22e:	(bad)  
   14003a22f:	(bad)  
   14003a230:	(bad)  
   14003a231:	(bad)  
   14003a232:	(bad)  
   14003a233:	jmp    FWORD PTR [rsi-0x2b]
   14003a236:	(bad)  
   14003a237:	call   QWORD PTR [rdx-0x33]
   14003a23a:	rex.B (bad) 
   14003a23c:	(bad)  
   14003a23d:	(bad)  
   14003a23e:	(bad)  
   14003a23f:	(bad)  
   14003a240:	(bad)  
   14003a241:	(bad)  
   14003a242:	(bad)  
   14003a243:	(bad)  
   14003a244:	(bad)  
   14003a245:	(bad)  
   14003a246:	(bad)  
   14003a247:	(bad)  
   14003a248:	(bad)  
   14003a249:	(bad)  
   14003a24a:	(bad)  
   14003a24b:	(bad)  
   14003a24c:	(bad)  
   14003a24d:	(bad)  
   14003a24e:	(bad)  
   14003a24f:	(bad)  
   14003a250:	(bad)  
   14003a251:	(bad)  
   14003a252:	(bad)  
   14003a253:	(bad)  
   14003a254:	(bad)  
   14003a255:	(bad)  
   14003a256:	(bad)  
   14003a257:	(bad)  
   14003a258:	(bad)  
   14003a259:	(bad)  
   14003a25a:	(bad)  
   14003a25b:	call   QWORD PTR [rdx-0x33]
   14003a25e:	call   QWORD PTR [r10-0x33]
   14003a262:	call   QWORD PTR [r10-0x33]
   14003a266:	call   QWORD PTR [r10-0x33]
   14003a26a:	call   QWORD PTR [r10-0x33]
   14003a26e:	call   QWORD PTR [r10-0x33]
   14003a272:	inc    DWORD PTR [r8]
   14003a275:	add    BYTE PTR [rax],al
   14003a277:	xor    al,0x0
   14003a279:	add    BYTE PTR [rax],al
   14003a27b:	or     eax,0x1000000
	...
   14003a298:	add    BYTE PTR [rax],al
   14003a29a:	add    BYTE PTR [rcx],al
   14003a29c:	add    BYTE PTR [rax],al
   14003a29e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403a2a4
   14003a2a4:	push   rdx
   14003a2a5:	int    0x41
   14003a2a7:	call   QWORD PTR [rdx-0x33]
   14003a2aa:	call   QWORD PTR [r10-0x33]
   14003a2ae:	call   QWORD PTR [r10-0x33]
   14003a2b2:	call   QWORD PTR [r10-0x33]
   14003a2b6:	call   QWORD PTR [r10-0x33]
   14003a2ba:	call   QWORD PTR [r10-0x33]
   14003a2be:	call   QWORD PTR [r13-0x32]
   14003a2c2:	rex.RB (bad) 
   14003a2c4:	stc    
   14003a2c5:	std    
   14003a2c6:	clc    
   14003a2c7:	(bad)  
   14003a2c8:	(bad)  
   14003a2c9:	(bad)  
   14003a2ca:	(bad)  
   14003a2cb:	dec    ebx
   14003a2cd:	lock (bad) 
   14003a2cf:	call   QWORD PTR [rdx-0x33]
   14003a2d2:	call   QWORD PTR [r10-0x33]
   14003a2d6:	call   QWORD PTR [r10-0x33]
   14003a2da:	call   QWORD PTR [r10-0x33]
   14003a2de:	call   QWORD PTR [r10-0x33]
   14003a2e2:	call   QWORD PTR [r10-0x33]
   14003a2e6:	inc    r13d
   14003a2e9:	out    dx,al
   14003a2ea:	sar    bh,0xff
   14003a2ed:	(bad)  
   14003a2ee:	(bad)  
   14003a2ef:	(bad)  
   14003a2f0:	cli    
   14003a2f1:	(bad)  
   14003a2f2:	cli    
   14003a2f3:	call   QWORD PTR [rsi-0x32]
   14003a2f6:	rex.RB call QWORD PTR [r10-0x33]
   14003a2fa:	rex.B (bad) 
   14003a2fc:	(bad)  
   14003a2fd:	(bad)  
   14003a2fe:	(bad)  
   14003a2ff:	(bad)  
   14003a300:	(bad)  
   14003a301:	(bad)  
   14003a302:	(bad)  
   14003a303:	(bad)  
   14003a304:	(bad)  
   14003a305:	(bad)  
   14003a306:	(bad)  
   14003a307:	(bad)  
   14003a308:	(bad)  
   14003a309:	(bad)  
   14003a30a:	(bad)  
   14003a30b:	(bad)  
   14003a30c:	(bad)  
   14003a30d:	(bad)  
   14003a30e:	(bad)  
   14003a30f:	(bad)  
   14003a310:	(bad)  
   14003a311:	(bad)  
   14003a312:	(bad)  
   14003a313:	(bad)  
   14003a314:	(bad)  
   14003a315:	(bad)  
   14003a316:	(bad)  
   14003a317:	(bad)  
   14003a318:	(bad)  
   14003a319:	(bad)  
   14003a31a:	(bad)  
   14003a31b:	call   QWORD PTR [rdx-0x33]
   14003a31e:	call   QWORD PTR [r10-0x33]
   14003a322:	call   QWORD PTR [r10-0x33]
   14003a326:	call   QWORD PTR [r10-0x33]
   14003a32a:	call   QWORD PTR [r10-0x33]
   14003a32e:	call   QWORD PTR [r10-0x33]
   14003a332:	inc    DWORD PTR [r8]
   14003a335:	add    BYTE PTR [rax],al
   14003a337:	xor    al,0x0
   14003a339:	add    BYTE PTR [rax],al
   14003a33b:	or     eax,0x1000000
	...
   14003a358:	add    BYTE PTR [rax],al
   14003a35a:	add    BYTE PTR [rcx],al
   14003a35c:	add    BYTE PTR [rax],al
   14003a35e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403a364
   14003a364:	push   rdx
   14003a365:	int    0x41
   14003a367:	call   QWORD PTR [rdx-0x33]
   14003a36a:	call   QWORD PTR [r10-0x33]
   14003a36e:	call   QWORD PTR [r10-0x33]
   14003a372:	call   QWORD PTR [r10-0x33]
   14003a376:	call   QWORD PTR [r10-0x33]
   14003a37a:	call   QWORD PTR [r10-0x33]
   14003a37e:	call   QWORD PTR [r10-0x33]
   14003a382:	dec    r10d
   14003a385:	lock (bad) 
   14003a389:	(bad)  
   14003a38a:	(bad)  
   14003a38b:	(bad)  
   14003a38c:	cld    
   14003a38d:	(bad)  
   14003a38e:	sti    
   14003a38f:	jmp    FWORD PTR [rsp+rdx*8+0x5d]
   14003a393:	call   QWORD PTR [rdx-0x33]
   14003a396:	call   QWORD PTR [r10-0x33]
   14003a39a:	call   QWORD PTR [r10-0x33]
   14003a39e:	call   QWORD PTR [r10-0x33]
   14003a3a2:	jmp    QWORD PTR [r14-0x2d]
   14003a3a6:	push   rdi
   14003a3a7:	(bad)  
   14003a3a8:	stc    
   14003a3a9:	std    
   14003a3aa:	clc    
   14003a3ab:	(bad)  
   14003a3ac:	(bad)  
   14003a3ad:	(bad)  
   14003a3ae:	(bad)  
   14003a3af:	dec    ebp
   14003a3b1:	icebp  
   14003a3b2:	leave  
   14003a3b3:	call   QWORD PTR [rdx-0x33]
   14003a3b6:	call   QWORD PTR [r10-0x33]
   14003a3ba:	call   QWORD PTR [r10-0x33]
   14003a3be:	call   QWORD PTR [r10-0x33]
   14003a3c2:	rex.B (bad) 
   14003a3c4:	(bad)  
   14003a3c5:	(bad)  
   14003a3c6:	(bad)  
   14003a3c7:	(bad)  
   14003a3c8:	(bad)  
   14003a3c9:	(bad)  
   14003a3ca:	(bad)  
   14003a3cb:	call   QWORD PTR [rdx-0x33]
   14003a3ce:	call   QWORD PTR [r10-0x33]
   14003a3d2:	call   QWORD PTR [r10-0x33]
   14003a3d6:	call   QWORD PTR [r10-0x33]
   14003a3da:	call   QWORD PTR [r10-0x33]
   14003a3de:	call   QWORD PTR [r10-0x33]
   14003a3e2:	call   QWORD PTR [r10-0x33]
   14003a3e6:	call   QWORD PTR [r10-0x33]
   14003a3ea:	call   QWORD PTR [r10-0x33]
   14003a3ee:	call   QWORD PTR [r10-0x33]
   14003a3f2:	inc    DWORD PTR [r8]
   14003a3f5:	add    BYTE PTR [rax],al
   14003a3f7:	xor    al,0x0
   14003a3f9:	add    BYTE PTR [rax],al
   14003a3fb:	or     eax,0x1000000
	...
   14003a418:	add    BYTE PTR [rax],al
   14003a41a:	add    BYTE PTR [rcx],al
   14003a41c:	add    BYTE PTR [rax],al
   14003a41e:	add    BYTE PTR [rip+0x33000000],cl        # 0x17303a424
   14003a424:	push   rdx
   14003a425:	int    0x41
   14003a427:	call   QWORD PTR [rdx-0x33]
   14003a42a:	call   QWORD PTR [r10-0x33]
   14003a42e:	call   QWORD PTR [r10-0x33]
   14003a432:	call   QWORD PTR [r10-0x33]
   14003a436:	call   QWORD PTR [r10-0x33]
   14003a43a:	call   QWORD PTR [r10-0x33]
   14003a43e:	call   QWORD PTR [r10-0x33]
   14003a442:	rex.B (bad) 
   14003a444:	jg     0x14003a420
   14003a446:	jb     0x14003a447
   14003a448:	(bad)  
   14003a449:	(bad)  
   14003a44a:	(bad)  
   14003a44b:	(bad)  
   14003a44c:	(bad)  
   14003a44d:	(bad)  
   14003a44e:	(bad)  
   14003a44f:	(bad)  
   14003a450:	(bad)  
   14003a451:	stc    
   14003a452:	call   0xc4e33456
   14003a457:	jmp    FWORD PTR [rax-0x2d]
   14003a45a:	pop    rcx
   14003a45b:	jmp    QWORD PTR [rsi-0x2d]
   14003a45e:	push   rdi
   14003a45f:	dec    DWORD PTR [rsi+rbx*8-0x7190080]
   14003a466:	jrcxz  0x14003a467
   14003a468:	(bad)  
   14003a469:	(bad)  
   14003a46a:	(bad)  
   14003a46b:	(bad)  
   14003a46c:	(bad)  
   14003a46d:	(bad)  
   14003a46e:	(bad)  
   14003a46f:	inc    DWORD PTR [rbx+rbx*8-0x32ad0089]
   14003a476:	call   QWORD PTR [r10-0x33]
   14003a47a:	call   QWORD PTR [r10-0x33]
   14003a47e:	call   QWORD PTR [r10-0x33]
   14003a482:	rex.B (bad) 
   14003a484:	(bad)  
   14003a485:	(bad)  
   14003a486:	(bad)  
   14003a487:	(bad)  
   14003a488:	(bad)  
   14003a489:	(bad)  
   14003a48a:	(bad)  
   14003a48b:	call   QWORD PTR [rdx-0x33]
   14003a48e:	call   QWORD PTR [r10-0x33]
   14003a492:	call   QWORD PTR [r10-0x33]
   14003a496:	call   QWORD PTR [r10-0x33]
   14003a49a:	call   QWORD PTR [r10-0x33]
   14003a49e:	call   QWORD PTR [r10-0x33]
   14003a4a2:	call   QWORD PTR [r10-0x33]
   14003a4a6:	call   QWORD PTR [r10-0x33]
   14003a4aa:	call   QWORD PTR [r10-0x33]
   14003a4ae:	call   QWORD PTR [r10-0x33]
   14003a4b2:	inc    DWORD PTR [r8]
   14003a4b5:	add    BYTE PTR [rax],al
   14003a4b7:	xor    al,0x0
   14003a4b9:	add    BYTE PTR [rax],al
   14003a4bb:	or     eax,0x1000000
	...
   14003a4d8:	add    BYTE PTR [rax],al
   14003a4da:	add    BYTE PTR [rcx],al
   14003a4dc:	add    BYTE PTR [rax],al
   14003a4de:	add    BYTE PTR [rbx],cl
   14003a4e0:	add    BYTE PTR [rax],al
   14003a4e2:	add    BYTE PTR [rsi],ch
   14003a4e4:	push   rdx
   14003a4e5:	int    0x41
   14003a4e7:	call   QWORD PTR [rdx-0x33]
   14003a4ea:	call   QWORD PTR [r10-0x33]
   14003a4ee:	call   QWORD PTR [r10-0x33]
   14003a4f2:	call   QWORD PTR [r10-0x33]
   14003a4f6:	call   QWORD PTR [r10-0x33]
   14003a4fa:	call   QWORD PTR [r10-0x33]
   14003a4fe:	call   QWORD PTR [r10-0x33]
   14003a502:	call   QWORD PTR [r10-0x33]
   14003a506:	push   QWORD PTR [r11-0x5317]
   14003a50d:	(bad)  
   14003a50e:	(bad)  
   14003a50f:	(bad)  
   14003a510:	(bad)  
   14003a511:	(bad)  
   14003a512:	(bad)  
   14003a513:	(bad)  
   14003a514:	(bad)  
   14003a515:	(bad)  
   14003a516:	(bad)  
   14003a517:	(bad)  
   14003a518:	(bad)  
   14003a519:	(bad)  
   14003a51a:	(bad)  
   14003a51b:	(bad)  
   14003a51c:	(bad)  
   14003a51d:	(bad)  
   14003a51e:	(bad)  
   14003a51f:	(bad)  
   14003a520:	(bad)  
   14003a521:	(bad)  
   14003a522:	(bad)  
   14003a523:	(bad)  
   14003a524:	(bad)  
   14003a525:	(bad)  
   14003a526:	(bad)  
   14003a527:	(bad)  
   14003a528:	(bad)  
   14003a529:	(bad)  
   14003a52a:	(bad)  
   14003a52b:	(bad)  
   14003a52c:	mov    edx,0x52ffb3eb
   14003a531:	int    0x41
   14003a533:	call   QWORD PTR [rdx-0x33]
   14003a536:	call   QWORD PTR [r10-0x33]
   14003a53a:	call   QWORD PTR [r10-0x33]
   14003a53e:	call   QWORD PTR [r10-0x33]
   14003a542:	rex.B (bad) 
   14003a544:	(bad)  
   14003a545:	(bad)  
   14003a546:	(bad)  
   14003a547:	(bad)  
   14003a548:	(bad)  
   14003a549:	(bad)  
   14003a54a:	(bad)  
   14003a54b:	call   QWORD PTR [rdx-0x33]
   14003a54e:	call   QWORD PTR [r10-0x33]
   14003a552:	call   QWORD PTR [r10-0x33]
   14003a556:	call   QWORD PTR [r10-0x33]
   14003a55a:	call   QWORD PTR [r10-0x33]
   14003a55e:	call   QWORD PTR [r10-0x33]
   14003a562:	call   QWORD PTR [r10-0x33]
   14003a566:	call   QWORD PTR [r10-0x33]
   14003a56a:	call   QWORD PTR [r10-0x33]
   14003a56e:	call   QWORD PTR [r10-0x33]
   14003a572:	inc    DWORD PTR [r8]
   14003a575:	add    BYTE PTR [rax],al
   14003a577:	xor    al,0x0
   14003a579:	add    BYTE PTR [rax],al
   14003a57b:	or     eax,0x1000000
	...
   14003a598:	add    BYTE PTR [rax],al
   14003a59a:	add    BYTE PTR [rcx],al
   14003a59c:	add    BYTE PTR [rax],al
   14003a59e:	add    BYTE PTR [rax],cl
   14003a5a0:	add    BYTE PTR [rax],al
   14003a5a2:	add    BYTE PTR [rdx+rdx*2],ah
   14003a5a5:	int    0x41
   14003a5a7:	call   QWORD PTR [rdx-0x33]
   14003a5aa:	call   QWORD PTR [r10-0x33]
   14003a5ae:	call   QWORD PTR [r10-0x33]
   14003a5b2:	call   QWORD PTR [r10-0x33]
   14003a5b6:	call   QWORD PTR [r10-0x33]
   14003a5ba:	call   QWORD PTR [r10-0x33]
   14003a5be:	call   QWORD PTR [r10-0x33]
   14003a5c2:	call   QWORD PTR [r10-0x33]
   14003a5c6:	call   QWORD PTR [r11-0x33]
   14003a5ca:	rex.X dec DWORD PTR [rsi-0x25007c22]
   14003a5d1:	hlt    
   14003a5d2:	xlat   BYTE PTR ds:[rbx]
   14003a5d3:	(bad)  
   14003a5d4:	(bad)  
   14003a5d5:	(bad)  
   14003a5d6:	(bad)  
   14003a5d7:	(bad)  
   14003a5d8:	(bad)  
   14003a5d9:	(bad)  
   14003a5da:	(bad)  
   14003a5db:	(bad)  
   14003a5dc:	(bad)  
   14003a5dd:	(bad)  
   14003a5de:	(bad)  
   14003a5df:	(bad)  
   14003a5e0:	(bad)  
   14003a5e1:	(bad)  
   14003a5e2:	(bad)  
   14003a5e3:	(bad)  
   14003a5e4:	fdivr  st(5),st
   14003a5e6:	fcos   
   14003a5e8:	xchg   ebx,eax
   14003a5e9:	loopne 0x14003a574
   14003a5eb:	call   QWORD PTR [rbx-0x33]
   14003a5ee:	rex.X call QWORD PTR [rdx-0x33]
   14003a5f2:	call   QWORD PTR [r10-0x33]
   14003a5f6:	call   QWORD PTR [r10-0x33]
   14003a5fa:	call   QWORD PTR [r10-0x33]
   14003a5fe:	call   QWORD PTR [r10-0x33]
   14003a602:	rex.B (bad) 
   14003a604:	(bad)  
   14003a605:	(bad)  
   14003a606:	(bad)  
   14003a607:	(bad)  
   14003a608:	(bad)  
   14003a609:	(bad)  
   14003a60a:	(bad)  
   14003a60b:	call   QWORD PTR [rdx-0x33]
   14003a60e:	call   QWORD PTR [r10-0x33]
   14003a612:	call   QWORD PTR [r10-0x33]
   14003a616:	call   QWORD PTR [r10-0x33]
   14003a61a:	call   QWORD PTR [r10-0x33]
   14003a61e:	call   QWORD PTR [r10-0x33]
   14003a622:	call   QWORD PTR [r10-0x33]
   14003a626:	call   QWORD PTR [r10-0x33]
   14003a62a:	call   QWORD PTR [r10-0x33]
   14003a62e:	call   QWORD PTR [r10-0x33]
   14003a632:	inc    DWORD PTR [r8]
   14003a635:	add    BYTE PTR [rax],al
   14003a637:	xor    al,0x0
   14003a639:	add    BYTE PTR [rax],al
   14003a63b:	or     eax,0x1000000
	...
   14003a65c:	add    BYTE PTR [rax],al
   14003a65e:	add    BYTE PTR [rax+rax*1],al
   14003a661:	add    BYTE PTR [rax],al
   14003a663:	adc    eax,0x9b36a944
   14003a668:	push   rdx
   14003a669:	int    0x41
   14003a66b:	call   QWORD PTR [rdx-0x33]
   14003a66e:	call   QWORD PTR [r10-0x33]
   14003a672:	call   QWORD PTR [r10-0x33]
   14003a676:	call   QWORD PTR [r10-0x33]
   14003a67a:	call   QWORD PTR [r10-0x33]
   14003a67e:	call   QWORD PTR [r10-0x33]
   14003a682:	call   QWORD PTR [r10-0x33]
   14003a686:	call   QWORD PTR [r10-0x33]
   14003a68a:	call   QWORD PTR [r10-0x33]
   14003a68e:	call   QWORD PTR [r10-0x33]
   14003a692:	call   FWORD PTR [r9-0x31]
   14003a696:	rex.WB jmp QWORD PTR [r14-0x2d]
   14003a69a:	push   rdi
   14003a69b:	jmp    QWORD PTR [rdi-0x2d]
   14003a69e:	pop    rax
   14003a69f:	call   FWORD PTR [rcx-0x31]
   14003a6a2:	rex.WB call QWORD PTR [r10-0x33]
   14003a6a6:	call   QWORD PTR [r10-0x33]
   14003a6aa:	call   QWORD PTR [r10-0x33]
   14003a6ae:	call   QWORD PTR [r10-0x33]
   14003a6b2:	call   QWORD PTR [r10-0x33]
   14003a6b6:	call   QWORD PTR [r10-0x33]
   14003a6ba:	call   QWORD PTR [r10-0x33]
   14003a6be:	call   QWORD PTR [r10-0x33]
   14003a6c2:	call   QWORD PTR [r10-0x33]
   14003a6c6:	call   QWORD PTR [r10-0x33]
   14003a6ca:	call   QWORD PTR [r10-0x33]
   14003a6ce:	call   QWORD PTR [r10-0x33]
   14003a6d2:	call   QWORD PTR [r10-0x33]
   14003a6d6:	call   QWORD PTR [r10-0x33]
   14003a6da:	call   QWORD PTR [r10-0x33]
   14003a6de:	call   QWORD PTR [r10-0x33]
   14003a6e2:	call   QWORD PTR [r10-0x33]
   14003a6e6:	call   QWORD PTR [r10-0x33]
   14003a6ea:	call   QWORD PTR [r10-0x33]
   14003a6ee:	call   QWORD PTR [r10-0x33]
   14003a6f2:	inc    DWORD PTR [r8]
   14003a6f5:	add    BYTE PTR [rax],al
   14003a6f7:	xor    al,0x0
   14003a6f9:	add    BYTE PTR [rax],al
   14003a6fb:	or     eax,0x1000000
	...
   14003a71c:	add    BYTE PTR [rax],al
   14003a71e:	add    BYTE PTR [rdx],al
   14003a720:	add    BYTE PTR [rax],al
   14003a722:	add    BYTE PTR [rcx],cl
   14003a724:	add    BYTE PTR [rax],al
   14003a726:	add    BYTE PTR [rbx+rax*2],bl
   14003a729:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a72a:	ss popf 
   14003a72c:	push   rdx
   14003a72d:	int    0x41
   14003a72f:	call   QWORD PTR [rdx-0x33]
   14003a732:	call   QWORD PTR [r10-0x33]
   14003a736:	call   QWORD PTR [r10-0x33]
   14003a73a:	call   QWORD PTR [r10-0x33]
   14003a73e:	call   QWORD PTR [r10-0x33]
   14003a742:	call   QWORD PTR [r10-0x33]
   14003a746:	call   QWORD PTR [r10-0x33]
   14003a74a:	call   QWORD PTR [r10-0x33]
   14003a74e:	call   QWORD PTR [r10-0x33]
   14003a752:	call   QWORD PTR [r10-0x33]
   14003a756:	call   QWORD PTR [r10-0x33]
   14003a75a:	call   QWORD PTR [r10-0x33]
   14003a75e:	call   QWORD PTR [r10-0x33]
   14003a762:	call   QWORD PTR [r10-0x33]
   14003a766:	call   QWORD PTR [r10-0x33]
   14003a76a:	call   QWORD PTR [r10-0x33]
   14003a76e:	call   QWORD PTR [r10-0x33]
   14003a772:	call   QWORD PTR [r10-0x33]
   14003a776:	call   QWORD PTR [r10-0x33]
   14003a77a:	call   QWORD PTR [r10-0x33]
   14003a77e:	call   QWORD PTR [r10-0x33]
   14003a782:	call   QWORD PTR [r10-0x33]
   14003a786:	call   QWORD PTR [r10-0x33]
   14003a78a:	call   QWORD PTR [r10-0x33]
   14003a78e:	call   QWORD PTR [r10-0x33]
   14003a792:	call   QWORD PTR [r10-0x33]
   14003a796:	call   QWORD PTR [r10-0x33]
   14003a79a:	call   QWORD PTR [r10-0x33]
   14003a79e:	call   QWORD PTR [r10-0x33]
   14003a7a2:	call   QWORD PTR [r10-0x33]
   14003a7a6:	call   QWORD PTR [r10-0x33]
   14003a7aa:	call   QWORD PTR [r10-0x33]
   14003a7ae:	call   QWORD PTR [r10-0x33]
   14003a7b2:	inc    DWORD PTR [r8]
   14003a7b5:	add    BYTE PTR [rax],al
   14003a7b7:	xor    al,0x0
   14003a7b9:	add    BYTE PTR [rax],al
   14003a7bb:	or     eax,0x1000000
	...
   14003a7e0:	add    BYTE PTR [rax],al
   14003a7e2:	add    BYTE PTR [rdx],al
   14003a7e4:	add    BYTE PTR [rax],al
   14003a7e6:	add    BYTE PTR [rdx],cl
   14003a7e8:	add    BYTE PTR [rax],al
   14003a7ea:	add    BYTE PTR [rbx+rax*2],bl
   14003a7ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a7ee:	ss popf 
   14003a7f0:	push   rdx
   14003a7f1:	int    0x41
   14003a7f3:	call   QWORD PTR [rdx-0x33]
   14003a7f6:	call   QWORD PTR [r10-0x33]
   14003a7fa:	call   QWORD PTR [r10-0x33]
   14003a7fe:	call   QWORD PTR [r10-0x33]
   14003a802:	call   QWORD PTR [r10-0x33]
   14003a806:	call   QWORD PTR [r10-0x33]
   14003a80a:	call   QWORD PTR [r10-0x33]
   14003a80e:	call   QWORD PTR [r10-0x33]
   14003a812:	call   QWORD PTR [r10-0x33]
   14003a816:	call   QWORD PTR [r10-0x33]
   14003a81a:	call   QWORD PTR [r10-0x33]
   14003a81e:	call   QWORD PTR [r10-0x33]
   14003a822:	call   QWORD PTR [r10-0x33]
   14003a826:	call   QWORD PTR [r10-0x33]
   14003a82a:	call   QWORD PTR [r10-0x33]
   14003a82e:	call   QWORD PTR [r10-0x33]
   14003a832:	call   QWORD PTR [r10-0x33]
   14003a836:	call   QWORD PTR [r10-0x33]
   14003a83a:	call   QWORD PTR [r10-0x33]
   14003a83e:	call   QWORD PTR [r10-0x33]
   14003a842:	call   QWORD PTR [r10-0x33]
   14003a846:	call   QWORD PTR [r10-0x33]
   14003a84a:	call   QWORD PTR [r10-0x33]
   14003a84e:	call   QWORD PTR [r10-0x33]
   14003a852:	call   QWORD PTR [r10-0x33]
   14003a856:	call   QWORD PTR [r10-0x33]
   14003a85a:	call   QWORD PTR [r10-0x33]
   14003a85e:	call   QWORD PTR [r10-0x33]
   14003a862:	call   QWORD PTR [r10-0x33]
   14003a866:	call   QWORD PTR [r10-0x33]
   14003a86a:	call   QWORD PTR [r10-0x33]
   14003a86e:	call   QWORD PTR [r10-0x33]
   14003a872:	inc    DWORD PTR [r8]
   14003a875:	add    BYTE PTR [rax],al
   14003a877:	xor    al,0x0
   14003a879:	add    BYTE PTR [rax],al
   14003a87b:	or     eax,0x1000000
	...
   14003a8a4:	add    BYTE PTR [rax],al
   14003a8a6:	add    BYTE PTR [rbx],al
   14003a8a8:	add    BYTE PTR [rax],al
   14003a8aa:	add    BYTE PTR [rdx],cl
   14003a8ac:	add    BYTE PTR [rax],al
   14003a8ae:	add    BYTE PTR [rbx+rax*2],bl
   14003a8b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a8b2:	ss popf 
   14003a8b4:	push   rdx
   14003a8b5:	int    0x41
   14003a8b7:	call   QWORD PTR [rdx-0x33]
   14003a8ba:	call   QWORD PTR [r10-0x33]
   14003a8be:	call   QWORD PTR [r10-0x33]
   14003a8c2:	call   QWORD PTR [r10-0x33]
   14003a8c6:	call   QWORD PTR [r10-0x33]
   14003a8ca:	call   QWORD PTR [r10-0x33]
   14003a8ce:	call   QWORD PTR [r10-0x33]
   14003a8d2:	call   QWORD PTR [r10-0x33]
   14003a8d6:	call   QWORD PTR [r10-0x33]
   14003a8da:	call   QWORD PTR [r10-0x33]
   14003a8de:	call   QWORD PTR [r10-0x33]
   14003a8e2:	call   QWORD PTR [r10-0x33]
   14003a8e6:	call   QWORD PTR [r10-0x33]
   14003a8ea:	call   QWORD PTR [r10-0x33]
   14003a8ee:	call   QWORD PTR [r10-0x33]
   14003a8f2:	call   QWORD PTR [r10-0x33]
   14003a8f6:	call   QWORD PTR [r10-0x33]
   14003a8fa:	call   QWORD PTR [r10-0x33]
   14003a8fe:	call   QWORD PTR [r10-0x33]
   14003a902:	call   QWORD PTR [r10-0x33]
   14003a906:	call   QWORD PTR [r10-0x33]
   14003a90a:	call   QWORD PTR [r10-0x33]
   14003a90e:	call   QWORD PTR [r10-0x33]
   14003a912:	call   QWORD PTR [r10-0x33]
   14003a916:	call   QWORD PTR [r10-0x33]
   14003a91a:	call   QWORD PTR [r10-0x33]
   14003a91e:	call   QWORD PTR [r10-0x33]
   14003a922:	call   QWORD PTR [r10-0x33]
   14003a926:	call   QWORD PTR [r10-0x33]
   14003a92a:	call   QWORD PTR [r10-0x33]
   14003a92e:	call   QWORD PTR [r10-0x33]
   14003a932:	inc    DWORD PTR [r8]
   14003a935:	add    BYTE PTR [rax],al
   14003a937:	xor    al,BYTE PTR [rax]
   14003a939:	add    BYTE PTR [rax],al
   14003a93b:	or     al,0x0
   14003a93d:	add    BYTE PTR [rax],al
   14003a93f:	add    DWORD PTR [rax],eax
	...
   14003a969:	add    BYTE PTR [rax],al
   14003a96b:	add    eax,DWORD PTR [rax]
   14003a96d:	add    BYTE PTR [rax],al
   14003a96f:	or     al,BYTE PTR [rax]
   14003a971:	add    BYTE PTR [rax],al
   14003a973:	sbb    al,0x43
   14003a975:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a976:	ss pushf 
   14003a978:	push   rdx
   14003a979:	int    0x41
   14003a97b:	call   QWORD PTR [rdx-0x33]
   14003a97e:	call   QWORD PTR [r10-0x33]
   14003a982:	call   QWORD PTR [r10-0x33]
   14003a986:	call   QWORD PTR [r10-0x33]
   14003a98a:	call   QWORD PTR [r10-0x33]
   14003a98e:	call   QWORD PTR [r10-0x33]
   14003a992:	call   QWORD PTR [r10-0x33]
   14003a996:	call   QWORD PTR [r10-0x33]
   14003a99a:	call   QWORD PTR [r10-0x33]
   14003a99e:	call   QWORD PTR [r10-0x33]
   14003a9a2:	call   QWORD PTR [r10-0x33]
   14003a9a6:	call   QWORD PTR [r10-0x33]
   14003a9aa:	call   QWORD PTR [r10-0x33]
   14003a9ae:	call   QWORD PTR [r10-0x33]
   14003a9b2:	call   QWORD PTR [r10-0x33]
   14003a9b6:	call   QWORD PTR [r10-0x33]
   14003a9ba:	call   QWORD PTR [r10-0x33]
   14003a9be:	call   QWORD PTR [r10-0x33]
   14003a9c2:	call   QWORD PTR [r10-0x33]
   14003a9c6:	call   QWORD PTR [r10-0x33]
   14003a9ca:	call   QWORD PTR [r10-0x33]
   14003a9ce:	call   QWORD PTR [r10-0x33]
   14003a9d2:	call   QWORD PTR [r10-0x33]
   14003a9d6:	call   QWORD PTR [r10-0x33]
   14003a9da:	call   QWORD PTR [r10-0x33]
   14003a9de:	call   QWORD PTR [r10-0x33]
   14003a9e2:	call   QWORD PTR [r10-0x33]
   14003a9e6:	call   QWORD PTR [r10-0x33]
   14003a9ea:	call   QWORD PTR [r10-0x33]
   14003a9ee:	call   QWORD PTR [r10-0x33]
   14003a9f2:	inc    DWORD PTR [r8]
   14003a9f5:	add    BYTE PTR [rax],al
   14003a9f7:	sub    DWORD PTR [rax],eax
   14003a9f9:	add    BYTE PTR [rax],al
   14003a9fb:	or     al,BYTE PTR [rax]
   14003a9fd:	add    BYTE PTR [rax],al
   14003a9ff:	add    DWORD PTR [rax],eax
	...
   14003aa2d:	add    BYTE PTR [rax],al
   14003aa2f:	add    eax,DWORD PTR [rax]
   14003aa31:	add    BYTE PTR [rax],al
   14003aa33:	or     al,BYTE PTR [rax]
   14003aa35:	add    BYTE PTR [rax],al
   14003aa37:	sbb    al,BYTE PTR [rbp-0x53]
   14003aa3a:	(bad)  
   14003aa3b:	xchg   edi,eax
   14003aa3c:	push   rdx
   14003aa3d:	int    0x41
   14003aa3f:	call   QWORD PTR [rdx-0x33]
   14003aa42:	call   QWORD PTR [r10-0x33]
   14003aa46:	call   QWORD PTR [r10-0x33]
   14003aa4a:	call   QWORD PTR [r10-0x33]
   14003aa4e:	call   QWORD PTR [r10-0x33]
   14003aa52:	call   QWORD PTR [r10-0x33]
   14003aa56:	call   QWORD PTR [r10-0x33]
   14003aa5a:	call   QWORD PTR [r10-0x33]
   14003aa5e:	call   QWORD PTR [r10-0x33]
   14003aa62:	call   QWORD PTR [r10-0x33]
   14003aa66:	call   QWORD PTR [r10-0x33]
   14003aa6a:	call   QWORD PTR [r10-0x33]
   14003aa6e:	call   QWORD PTR [r10-0x33]
   14003aa72:	call   QWORD PTR [r10-0x33]
   14003aa76:	call   QWORD PTR [r10-0x33]
   14003aa7a:	call   QWORD PTR [r10-0x33]
   14003aa7e:	call   QWORD PTR [r10-0x33]
   14003aa82:	call   QWORD PTR [r10-0x33]
   14003aa86:	call   QWORD PTR [r10-0x33]
   14003aa8a:	call   QWORD PTR [r10-0x33]
   14003aa8e:	call   QWORD PTR [r10-0x33]
   14003aa92:	call   QWORD PTR [r10-0x33]
   14003aa96:	call   QWORD PTR [r10-0x33]
   14003aa9a:	call   QWORD PTR [r10-0x33]
   14003aa9e:	call   QWORD PTR [r10-0x33]
   14003aaa2:	call   QWORD PTR [r10-0x33]
   14003aaa6:	call   QWORD PTR [r10-0x33]
   14003aaaa:	call   QWORD PTR [r10-0x33]
   14003aaae:	call   QWORD PTR [r10-0x33]
   14003aab2:	inc    DWORD PTR [r8]
   14003aab5:	add    BYTE PTR [rax],al
   14003aab7:	sbb    DWORD PTR [rax],eax
   14003aab9:	add    BYTE PTR [rax],al
   14003aabb:	(bad)  
   14003aabc:	add    BYTE PTR [rax],al
   14003aabe:	add    BYTE PTR [rcx],al
	...
   14003aaf0:	add    BYTE PTR [rax],al
   14003aaf2:	add    BYTE PTR [rdx],al
   14003aaf4:	add    BYTE PTR [rax],al
   14003aaf6:	add    BYTE PTR [rdi],al
   14003aaf8:	add    BYTE PTR [rax],al
   14003aafa:	add    BYTE PTR [rax],dl
   14003aafc:	add    BYTE PTR [rax],al
   14003aafe:	add    BYTE PTR [rax],bl
   14003ab00:	add    BYTE PTR [rax],al
   14003ab02:	add    BYTE PTR [rbx],bl
   14003ab04:	add    BYTE PTR [rax],al
   14003ab06:	add    BYTE PTR [rax+rax*1],bl
   14003ab09:	add    BYTE PTR [rax],al
   14003ab0b:	sbb    eax,0x1d000000
   14003ab10:	add    BYTE PTR [rax],al
   14003ab12:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab18
   14003ab18:	add    BYTE PTR [rax],al
   14003ab1a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab20
   14003ab20:	add    BYTE PTR [rax],al
   14003ab22:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab28
   14003ab28:	add    BYTE PTR [rax],al
   14003ab2a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab30
   14003ab30:	add    BYTE PTR [rax],al
   14003ab32:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab38
   14003ab38:	add    BYTE PTR [rax],al
   14003ab3a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab40
   14003ab40:	add    BYTE PTR [rax],al
   14003ab42:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab48
   14003ab48:	add    BYTE PTR [rax],al
   14003ab4a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab50
   14003ab50:	add    BYTE PTR [rax],al
   14003ab52:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab58
   14003ab58:	add    BYTE PTR [rax],al
   14003ab5a:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab60
   14003ab60:	add    BYTE PTR [rax],al
   14003ab62:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03ab68
   14003ab68:	add    BYTE PTR [rax],al
   14003ab6a:	add    BYTE PTR [rbx],bl
   14003ab6c:	add    BYTE PTR [rax],al
   14003ab6e:	add    BYTE PTR [rdx],bl
   14003ab70:	add    BYTE PTR [rax],al
   14003ab72:	add    BYTE PTR [rax+rax*1],dl
   14003ab75:	add    BYTE PTR [rax],al
   14003ab77:	or     DWORD PTR [rax],eax
   14003ab79:	add    BYTE PTR [rax],al
   14003ab7b:	add    al,BYTE PTR [rax]
	...
   14003abb5:	add    BYTE PTR [rax],al
   14003abb7:	add    DWORD PTR [rax],eax
   14003abb9:	add    BYTE PTR [rax],al
   14003abbb:	add    eax,DWORD PTR [rax]
   14003abbd:	add    BYTE PTR [rax],al
   14003abbf:	add    al,0x0
   14003abc1:	add    BYTE PTR [rax],al
   14003abc3:	add    eax,0x5000000
   14003abc8:	add    BYTE PTR [rax],al
   14003abca:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abd0
   14003abd0:	add    BYTE PTR [rax],al
   14003abd2:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abd8
   14003abd8:	add    BYTE PTR [rax],al
   14003abda:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abe0
   14003abe0:	add    BYTE PTR [rax],al
   14003abe2:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abe8
   14003abe8:	add    BYTE PTR [rax],al
   14003abea:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abf0
   14003abf0:	add    BYTE PTR [rax],al
   14003abf2:	add    BYTE PTR [rip+0x5000000],al        # 0x14503abf8
   14003abf8:	add    BYTE PTR [rax],al
   14003abfa:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac00
   14003ac00:	add    BYTE PTR [rax],al
   14003ac02:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac08
   14003ac08:	add    BYTE PTR [rax],al
   14003ac0a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac10
   14003ac10:	add    BYTE PTR [rax],al
   14003ac12:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac18
   14003ac18:	add    BYTE PTR [rax],al
   14003ac1a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac20
   14003ac20:	add    BYTE PTR [rax],al
   14003ac22:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac28
   14003ac28:	add    BYTE PTR [rax],al
   14003ac2a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503ac30
   14003ac30:	add    BYTE PTR [rax],al
   14003ac32:	add    BYTE PTR [rax+rax*1],al
   14003ac35:	add    BYTE PTR [rax],al
   14003ac37:	add    al,BYTE PTR [rax]
	...
   14003b249:	add    BYTE PTR [rax],al
   14003b24b:	add    bh,bh
   14003b24d:	push   rax
   14003b24f:	add    BYTE PTR [rax],al
   14003b251:	(bad)  
   14003b252:	add    BYTE PTR [rax],al
   14003b254:	(bad)  
   14003b255:	push   rax
   14003b257:	add    BYTE PTR [rax],al
   14003b259:	add    eax,DWORD PTR [rax]
   14003b25b:	add    bh,bh
   14003b25d:	jmp    rax
   14003b25f:	add    BYTE PTR [rax],al
   14003b261:	add    BYTE PTR [rax],al
   14003b263:	add    bh,bh
   14003b265:	jmp    rax
   14003b267:	add    BYTE PTR [rax],al
   14003b269:	add    BYTE PTR [rax],al
   14003b26b:	add    bh,bh
   14003b26d:	jmp    rax
   14003b26f:	add    BYTE PTR [rax],al
   14003b271:	add    BYTE PTR [rax],al
   14003b273:	add    bh,bh
   14003b275:	inc    DWORD PTR [rax+0x0]
   14003b27b:	add    al,bh
   14003b27d:	add    BYTE PTR [rax],al
   14003b27f:	add    BYTE PTR [rax],al
   14003b281:	add    BYTE PTR [rax],al
   14003b283:	add    al,dh
   14003b285:	add    BYTE PTR [rax],al
   14003b287:	add    BYTE PTR [rax],al
   14003b289:	add    BYTE PTR [rax],al
   14003b28b:	add    al,ah
   14003b28d:	add    BYTE PTR [rax],al
   14003b28f:	add    BYTE PTR [rax],al
   14003b291:	add    BYTE PTR [rax],al
   14003b293:	add    al,ah
   14003b295:	add    BYTE PTR [rax],al
   14003b297:	add    BYTE PTR [rax],al
   14003b299:	add    BYTE PTR [rax],al
   14003b29b:	add    al,ah
   14003b29d:	add    BYTE PTR [rax],al
   14003b29f:	add    BYTE PTR [rax],al
   14003b2a1:	add    DWORD PTR [rax],eax
   14003b2a3:	add    al,ah
   14003b2a5:	add    BYTE PTR [rax],al
   14003b2a7:	add    BYTE PTR [rax],al
   14003b2a9:	add    eax,DWORD PTR [rax]
   14003b2ab:	add    al,ah
   14003b2ad:	add    BYTE PTR [rax],al
   14003b2af:	add    BYTE PTR [rax],al
   14003b2b1:	sldt   WORD PTR [rax]
   14003b2b4:	loopne 0x14003b2b6
   14003b2b6:	add    BYTE PTR [rax],al
   14003b2b8:	add    BYTE PTR [rdi],cl
   14003b2ba:	add    BYTE PTR [rax],al
   14003b2bc:	loopne 0x14003b2be
   14003b2be:	add    BYTE PTR [rax],al
   14003b2c0:	add    BYTE PTR [rdi],al
   14003b2c2:	add    BYTE PTR [rax],al
   14003b2c4:	loopne 0x14003b2c6
   14003b2c6:	add    BYTE PTR [rax],al
   14003b2c8:	add    BYTE PTR [rdi],al
   14003b2ca:	add    BYTE PTR [rax],al
   14003b2cc:	loopne 0x14003b2ce
   14003b2ce:	add    BYTE PTR [rax],al
   14003b2d0:	add    BYTE PTR [rdi],al
   14003b2d2:	add    BYTE PTR [rax],al
   14003b2d4:	loopne 0x14003b2d6
   14003b2d6:	add    BYTE PTR [rax],al
   14003b2d8:	add    BYTE PTR [rdi],al
   14003b2da:	add    BYTE PTR [rax],al
   14003b2dc:	loopne 0x14003b2de
   14003b2de:	add    BYTE PTR [rax],al
   14003b2e0:	add    BYTE PTR [rdi],al
   14003b2e2:	add    BYTE PTR [rax],al
   14003b2e4:	loopne 0x14003b2e6
   14003b2e6:	add    BYTE PTR [rax],al
   14003b2e8:	add    BYTE PTR [rdi],al
   14003b2ea:	add    BYTE PTR [rax],al
   14003b2ec:	loopne 0x14003b2ee
   14003b2ee:	add    BYTE PTR [rax],al
   14003b2f0:	add    BYTE PTR [rdi],al
   14003b2f2:	add    BYTE PTR [rax],al
   14003b2f4:	loopne 0x14003b2f6
   14003b2f6:	add    BYTE PTR [rax],al
   14003b2f8:	add    BYTE PTR [rdi],al
   14003b2fa:	add    BYTE PTR [rax],al
   14003b2fc:	loopne 0x14003b2fe
   14003b2fe:	add    BYTE PTR [rax],al
   14003b300:	add    BYTE PTR [rdi],al
   14003b302:	add    BYTE PTR [rax],al
   14003b304:	loopne 0x14003b306
   14003b306:	add    BYTE PTR [rax],al
   14003b308:	add    BYTE PTR [rdi],al
   14003b30a:	add    BYTE PTR [rax],al
   14003b30c:	loopne 0x14003b30e
   14003b30e:	add    BYTE PTR [rax],al
   14003b310:	add    BYTE PTR [rdi],al
   14003b312:	add    BYTE PTR [rax],al
   14003b314:	loopne 0x14003b316
   14003b316:	add    BYTE PTR [rax],al
   14003b318:	add    BYTE PTR [rdi],al
   14003b31a:	add    BYTE PTR [rax],al
   14003b31c:	loopne 0x14003b31e
   14003b31e:	add    BYTE PTR [rax],al
   14003b320:	add    BYTE PTR [rdi],al
   14003b322:	add    BYTE PTR [rax],al
   14003b324:	loopne 0x14003b326
   14003b326:	add    BYTE PTR [rax],al
   14003b328:	add    BYTE PTR [rdi],al
   14003b32a:	add    BYTE PTR [rax],al
   14003b32c:	loopne 0x14003b32e
   14003b32e:	add    BYTE PTR [rax],al
   14003b330:	add    BYTE PTR [rdi],al
   14003b332:	add    BYTE PTR [rax],al
   14003b334:	loopne 0x14003b336
   14003b336:	add    BYTE PTR [rax],al
   14003b338:	add    BYTE PTR [rdi],al
   14003b33a:	add    BYTE PTR [rax],al
   14003b33c:	loopne 0x14003b33e
   14003b33e:	add    BYTE PTR [rax],al
   14003b340:	add    BYTE PTR [rdi],al
   14003b342:	add    BYTE PTR [rax],al
   14003b344:	loopne 0x14003b346
   14003b346:	add    BYTE PTR [rax],al
   14003b348:	add    BYTE PTR [rdi],al
   14003b34a:	add    BYTE PTR [rax],al
   14003b34c:	lock add BYTE PTR [rax],al
   14003b34f:	add    BYTE PTR [rax],al
   14003b351:	(bad)  
   14003b352:	add    BYTE PTR [rax],al
   14003b354:	lock add BYTE PTR [rax],al
   14003b357:	add    BYTE PTR [rax],al
   14003b359:	(bad)  
   14003b35a:	add    BYTE PTR [rax],al
   14003b35c:	clc    
   14003b35d:	add    BYTE PTR [rax],al
   14003b35f:	add    BYTE PTR [rax],al
   14003b361:	(bad)  
   14003b362:	add    BYTE PTR [rax],al
   14003b364:	cld    
   14003b365:	add    BYTE PTR [rax],al
   14003b367:	add    BYTE PTR [rax],al
   14003b369:	(bad)  
   14003b36a:	add    BYTE PTR [rax],al
   14003b36c:	inc    BYTE PTR [rax]
   14003b36e:	add    BYTE PTR [rax],al
   14003b370:	add    BYTE PTR [rdi],al
   14003b372:	add    BYTE PTR [rax],al
   14003b374:	inc    DWORD PTR [rax]
   14003b376:	add    BYTE PTR [rax],al
   14003b378:	add    BYTE PTR [rdi],al
   14003b37a:	add    BYTE PTR [rax],al
   14003b37c:	inc    DWORD PTR [rax+0xf000000]
   14003b382:	add    BYTE PTR [rax],al
   14003b384:	inc    eax
   14003b386:	add    BYTE PTR [rax],al
   14003b388:	add    BYTE PTR [rdi],bl
   14003b38a:	add    BYTE PTR [rax],al
   14003b38c:	(bad)  
   14003b38d:	(bad)  
   14003b38e:	(bad)  
   14003b38f:	(bad)  
   14003b390:	(bad)  
   14003b391:	inc    DWORD PTR [rax]
   14003b393:	add    bh,bh
   14003b395:	(bad)  
   14003b396:	(bad)  
   14003b397:	(bad)  
   14003b398:	(bad)  
   14003b399:	inc    DWORD PTR [rax]
   14003b39b:	add    bh,bh
   14003b39d:	(bad)  
   14003b39e:	(bad)  
   14003b39f:	(bad)  
   14003b3a0:	(bad)  
   14003b3a1:	inc    DWORD PTR [rax]
   14003b3a3:	add    bh,bh
   14003b3a5:	(bad)  
   14003b3a6:	(bad)  
   14003b3a7:	(bad)  
   14003b3a8:	(bad)  
   14003b3a9:	inc    DWORD PTR [rax]
   14003b3ab:	add    bh,bh
   14003b3ad:	(bad)  
   14003b3ae:	(bad)  
   14003b3af:	(bad)  
   14003b3b0:	(bad)  
   14003b3b1:	inc    DWORD PTR [rax]
   14003b3b3:	add    bh,bh
   14003b3b5:	(bad)  
   14003b3b6:	(bad)  
   14003b3b7:	(bad)  
   14003b3b8:	(bad)  
   14003b3b9:	inc    DWORD PTR [rax]
   14003b3bb:	add    bh,bh
   14003b3bd:	(bad)  
   14003b3be:	(bad)  
   14003b3bf:	(bad)  
   14003b3c0:	(bad)  
   14003b3c1:	inc    DWORD PTR [rax]
   14003b3c3:	add    bh,bh
   14003b3c5:	(bad)  
   14003b3c6:	(bad)  
   14003b3c7:	(bad)  
   14003b3c8:	(bad)  
   14003b3c9:	inc    DWORD PTR [rax]
   14003b3cb:	add    BYTE PTR [rax],ch
   14003b3cd:	add    BYTE PTR [rax],al
   14003b3cf:	add    BYTE PTR [rax],ah
   14003b3d1:	add    BYTE PTR [rax],al
   14003b3d3:	add    BYTE PTR [rax+0x0],al
   14003b3d6:	add    BYTE PTR [rax],al
   14003b3d8:	add    DWORD PTR [rax],eax
   14003b3da:	and    BYTE PTR [rax],al
   14003b3dc:	add    BYTE PTR [rax],al
   14003b3de:	add    BYTE PTR [rax],al
   14003b3e0:	add    BYTE PTR [rax],dl
   14003b3e2:	add    BYTE PTR [rax],al
   14003b3e4:	xlat   BYTE PTR ds:[rbx]
   14003b3e5:	or     eax,0xdd70000
	...
   14003b42e:	add    BYTE PTR [rcx],al
   14003b430:	add    BYTE PTR [rax],al
   14003b432:	add    BYTE PTR [rbx],al
   14003b434:	add    BYTE PTR [rax],al
   14003b436:	add    BYTE PTR [rip+0x7000000],al        # 0x14703b43c
   14003b43c:	add    BYTE PTR [rax],al
   14003b43e:	add    BYTE PTR [rax],cl
   14003b440:	add    BYTE PTR [rax],al
   14003b442:	add    BYTE PTR [rax],cl
   14003b444:	add    BYTE PTR [rax],al
   14003b446:	add    BYTE PTR [rax],cl
   14003b448:	add    BYTE PTR [rax],al
   14003b44a:	add    BYTE PTR [rax],cl
   14003b44c:	add    BYTE PTR [rax],al
   14003b44e:	add    BYTE PTR [rcx],cl
   14003b450:	add    BYTE PTR [rax],al
   14003b452:	add    BYTE PTR [rax+rax*1],cl
   14003b455:	add    BYTE PTR [rax],al
   14003b457:	(bad)  
   14003b458:	xchg   edi,eax
   14003b459:	xchg   edi,eax
   14003b45a:	xchg   edi,eax
   14003b45b:	pop    rcx
   14003b45c:	mov    ecx,DWORD PTR [rbx+0x698b]
   14003b462:	add    BYTE PTR [rdx],dh
   14003b464:	add    BYTE PTR [rax],al
   14003b466:	add    BYTE PTR [rbx],bl
   14003b468:	add    BYTE PTR [rax],al
   14003b46a:	add    BYTE PTR [rdx],cl
   14003b46c:	add    BYTE PTR [rax],al
   14003b46e:	add    BYTE PTR [rbx],al
   14003b470:	add    BYTE PTR [rax],al
   14003b472:	add    BYTE PTR [rcx],al
	...
   14003b4ac:	add    BYTE PTR [rax],al
   14003b4ae:	add    BYTE PTR [rbx],al
   14003b4b0:	add    BYTE PTR [rax],al
   14003b4b2:	add    BYTE PTR [rdx],cl
   14003b4b4:	add    BYTE PTR [rax],al
   14003b4b6:	add    BYTE PTR [rsi],dl
   14003b4b8:	add    BYTE PTR [rax],al
   14003b4ba:	add    BYTE PTR [rdi],bl
   14003b4bc:	add    BYTE PTR [rax],al
   14003b4be:	add    BYTE PTR [rbx],ah
   14003b4c0:	add    BYTE PTR [rax],al
   14003b4c2:	add    BYTE PTR [rbx],ah
   14003b4c4:	add    BYTE PTR [rax],al
   14003b4c6:	add    BYTE PTR [rbx],ah
   14003b4c8:	add    BYTE PTR [rax],al
   14003b4ca:	add    BYTE PTR [rbx],ah
   14003b4cc:	add    BYTE PTR [rax],al
   14003b4ce:	add    BYTE PTR [rax+rax*1],ah
   14003b4d1:	add    BYTE PTR [rax],al
   14003b4d3:	add    BYTE PTR es:[rax],al
   14003b4d6:	add    BYTE PTR [rdx],dh
   14003b4d8:	mov    cs,WORD PTR [rsi-0xd0a8572]
   14003b4de:	repnz cli 
   14003b4e0:	jg     0x14003b55d
   14003b4e2:	jge    0x14003b465
   14003b4e4:	add    BYTE PTR [rax],al
   14003b4e6:	add    BYTE PTR [rax],bh
   14003b4e8:	add    BYTE PTR [rax],al
   14003b4ea:	add    BYTE PTR [rax+rax*1],bl
   14003b4ed:	add    BYTE PTR [rax],al
   14003b4ef:	or     eax,DWORD PTR [rax]
   14003b4f1:	add    BYTE PTR [rax],al
   14003b4f3:	add    eax,DWORD PTR [rax]
	...
   14003b529:	add    BYTE PTR [rax],al
   14003b52b:	add    DWORD PTR [rax],eax
   14003b52d:	add    BYTE PTR [rax],al
   14003b52f:	(bad)  
   14003b530:	add    BYTE PTR [rax],al
   14003b532:	add    BYTE PTR [rcx],bl
   14003b534:	add    BYTE PTR [rax],al
   14003b536:	add    BYTE PTR [rip+0x49000000],dh        # 0x18903b53c
   14003b53c:	add    BYTE PTR [rax],al
   14003b53e:	add    BYTE PTR [rdi+0x0],cl
   14003b541:	add    BYTE PTR [rax],al
   14003b543:	push   rcx
   14003b544:	add    BYTE PTR [rax],al
   14003b546:	add    BYTE PTR [rcx+0x0],dl
   14003b549:	add    BYTE PTR [rax],al
   14003b54b:	push   rcx
   14003b54c:	add    BYTE PTR [rax],al
   14003b54e:	add    BYTE PTR [rcx+0x0],dl
   14003b551:	add    BYTE PTR [rax],al
   14003b553:	push   rdx
   14003b554:	add    BYTE PTR [rax],al
   14003b556:	add    BYTE PTR [rcx+0x78],bl
   14003b559:	js     0x14003b5d3
   14003b55b:	xchg   ecx,eax
   14003b55c:	mov    al,0x8d
   14003b55e:	xchg   edx,eax
   14003b55f:	stc    
   14003b560:	rol    cl,cl
   14003b562:	ret    
   14003b563:	repz (bad) 
   14003b565:	jle    0x14003b4e7
   14003b567:	mov    al,BYTE PTR [rax]
   14003b569:	add    BYTE PTR [rax],al
   14003b56b:	cmp    al,BYTE PTR [rax]
   14003b56d:	add    BYTE PTR [rax],al
   14003b56f:	sbb    eax,0xa000000
	...
   14003b580:	add    BYTE PTR [rax],al
   14003b582:	add    BYTE PTR [rcx],al
   14003b584:	add    BYTE PTR [rax],al
   14003b586:	add    BYTE PTR [rcx],al
   14003b588:	add    BYTE PTR [rax],al
   14003b58a:	add    BYTE PTR [rcx],al
   14003b58c:	add    BYTE PTR [rax],al
   14003b58e:	add    BYTE PTR [rcx],al
   14003b590:	add    BYTE PTR [rax],al
   14003b592:	add    BYTE PTR [rcx],al
   14003b594:	add    BYTE PTR [rax],al
   14003b596:	add    BYTE PTR [rcx],al
   14003b598:	add    BYTE PTR [rax],al
   14003b59a:	add    BYTE PTR [rcx],al
   14003b59c:	add    BYTE PTR [rax],al
   14003b59e:	add    BYTE PTR [rcx],al
   14003b5a0:	add    BYTE PTR [rax],al
   14003b5a2:	add    BYTE PTR [rdx],al
   14003b5a4:	add    BYTE PTR [rax],al
   14003b5a6:	add    BYTE PTR [rdx],al
   14003b5a8:	add    BYTE PTR [rax],al
   14003b5aa:	add    BYTE PTR [rbx],al
   14003b5ac:	add    BYTE PTR [rax],al
   14003b5ae:	add    BYTE PTR [rax+rax*1],cl
   14003b5b1:	add    BYTE PTR [rax],al
   14003b5b3:	sub    dh,dl
   14003b5b5:	(bad)  
   14003b5b6:	iret   
   14003b5b7:	iret   
   14003b5b8:	(bad)  
   14003b5b9:	mov    esi,0xbbccecc0
   14003b5be:	mov    ebp,0xbdbbcbec
   14003b5c3:	in     eax,dx
   14003b5c4:	retf   
   14003b5c5:	mov    ebx,0xbbcbedbd
   14003b5ca:	mov    ebp,0xbdbbcbed
   14003b5cf:	in     eax,dx
   14003b5d0:	int3   
   14003b5d1:	mov    esp,0xbbcbedbd
   14003b5d6:	mov    ebp,0xc1bfceed
   14003b5db:	out    dx,eax
   14003b5dc:	xchg   esi,eax
   14003b5dd:	(bad)  
   14003b5de:	push   0xfffffffffffffffc
   14003b5e0:	push   0xffffffffd1ff281c
   14003b5e5:	rol    dl,0xf3
   14003b5e8:	xchg   BYTE PTR [rsp+rax*4+0x8d],al
   14003b5ef:	cmp    DWORD PTR [rax],eax
   14003b5f1:	add    BYTE PTR [rax],al
   14003b5f3:	sbb    al,BYTE PTR [rax]
	...
   14003b5fd:	add    BYTE PTR [rax],al
   14003b5ff:	add    DWORD PTR [rax],eax
   14003b601:	add    BYTE PTR [rax],al
   14003b603:	add    eax,DWORD PTR [rax]
   14003b605:	add    BYTE PTR [rax],al
   14003b607:	(bad)  
   14003b608:	add    BYTE PTR [rax],al
   14003b60a:	add    BYTE PTR [rax],cl
   14003b60c:	add    BYTE PTR [rax],al
   14003b60e:	add    BYTE PTR [rcx],cl
   14003b610:	add    BYTE PTR [rax],al
   14003b612:	add    BYTE PTR [rcx],cl
   14003b614:	add    BYTE PTR [rax],al
   14003b616:	add    BYTE PTR [rcx],cl
   14003b618:	add    BYTE PTR [rax],al
   14003b61a:	add    BYTE PTR [rcx],cl
   14003b61c:	add    BYTE PTR [rax],al
   14003b61e:	add    BYTE PTR [rcx],cl
   14003b620:	add    BYTE PTR [rax],al
   14003b622:	add    BYTE PTR [rcx],cl
   14003b624:	add    BYTE PTR [rax],al
   14003b626:	add    BYTE PTR [rdx],cl
   14003b628:	add    BYTE PTR [rax],al
   14003b62a:	add    BYTE PTR [rax+rax*1],cl
   14003b62d:	add    BYTE PTR [rax],al
   14003b62f:	sbb    BYTE PTR [rax],al
   14003b631:	add    BYTE PTR [rax],al
   14003b633:	cmp    esi,edx
   14003b635:	int    0xce
   14003b637:	loopne 0x14003b69e
   14003b639:	sbb    BYTE PTR [rbx],ah
   14003b63b:	jmp    QWORD PTR [rcx+0x12]
   14003b63e:	(bad)  
   14003b63f:	jmp    QWORD PTR [rcx+0x12]
   14003b642:	(bad)  
   14003b643:	jmp    QWORD PTR [rcx+0x12]
   14003b646:	(bad)  
   14003b647:	jmp    QWORD PTR [rcx+0x12]
   14003b64a:	(bad)  
   14003b64b:	jmp    QWORD PTR [rcx+0x12]
   14003b64e:	(bad)  
   14003b64f:	jmp    QWORD PTR [rcx+0x12]
   14003b652:	(bad)  
   14003b653:	jmp    QWORD PTR [rcx+0x12]
   14003b656:	(bad)  
   14003b657:	jmp    QWORD PTR [rcx+0x12]
   14003b65a:	(bad)  
   14003b65b:	jmp    QWORD PTR [rcx+0x12]
   14003b65e:	(bad)  
   14003b65f:	jmp    QWORD PTR [rcx+0x12]
   14003b662:	(bad)  
   14003b663:	jmp    QWORD PTR [rbp+0x19]
   14003b666:	and    al,0xff
   14003b668:	int    0xb8
   14003b66a:	mov    ebx,0x919195f4
   14003b66f:	mov    es,WORD PTR [rax]
   14003b671:	add    BYTE PTR [rax],al
   14003b673:	sub    al,BYTE PTR [rax]
   14003b675:	add    BYTE PTR [rax],al
   14003b677:	add    BYTE PTR [rax],al
   14003b679:	add    BYTE PTR [rax],al
   14003b67b:	add    DWORD PTR [rax],eax
   14003b67d:	add    BYTE PTR [rax],al
   14003b67f:	add    eax,DWORD PTR [rax]
   14003b681:	add    BYTE PTR [rax],al
   14003b683:	or     eax,0x1b000000
   14003b688:	add    BYTE PTR [rax],al
   14003b68a:	add    BYTE PTR [rax+rax*1],ah
   14003b68d:	add    BYTE PTR [rax],al
   14003b68f:	add    BYTE PTR es:[rax],al
   14003b692:	add    BYTE PTR [rsi],ah
   14003b694:	add    BYTE PTR [rax],al
   14003b696:	add    BYTE PTR [rsi],ah
   14003b698:	add    BYTE PTR [rax],al
   14003b69a:	add    BYTE PTR [rsi],ah
   14003b69c:	add    BYTE PTR [rax],al
   14003b69e:	add    BYTE PTR [rsi],ah
   14003b6a0:	add    BYTE PTR [rax],al
   14003b6a2:	add    BYTE PTR [rsi],ah
   14003b6a4:	add    BYTE PTR [rax],al
   14003b6a6:	add    BYTE PTR [rdi],ah
   14003b6a8:	add    BYTE PTR [rax],al
   14003b6aa:	add    BYTE PTR [rcx],ch
   14003b6ac:	add    BYTE PTR [rax],al
   14003b6ae:	add    BYTE PTR [rsi],dh
   14003b6b0:	add    BYTE PTR [rax],al
   14003b6b2:	add    BYTE PTR [rdx-0x1f],dl
   14003b6b5:	fcomp  st(1)
   14003b6b7:	lock sbb BYTE PTR gs:[rbx],ah
   14003b6bb:	jmp    QWORD PTR [rcx+0x12]
   14003b6be:	(bad)  
   14003b6bf:	jmp    QWORD PTR [rcx+0x12]
   14003b6c2:	(bad)  
   14003b6c3:	jmp    QWORD PTR [rcx+0x12]
   14003b6c6:	(bad)  
   14003b6c7:	jmp    QWORD PTR [rcx+0x12]
   14003b6ca:	(bad)  
   14003b6cb:	jmp    QWORD PTR [rcx+0x12]
   14003b6ce:	(bad)  
   14003b6cf:	jmp    QWORD PTR [rcx+0x12]
   14003b6d2:	(bad)  
   14003b6d3:	jmp    QWORD PTR [rcx+0x12]
   14003b6d6:	(bad)  
   14003b6d7:	jmp    QWORD PTR [rcx+0x12]
   14003b6da:	(bad)  
   14003b6db:	jmp    QWORD PTR [rcx+0x12]
   14003b6de:	(bad)  
   14003b6df:	jmp    QWORD PTR [rcx+0x12]
   14003b6e2:	(bad)  
   14003b6e3:	jmp    QWORD PTR [rcx+0x12]
   14003b6e6:	(bad)  
   14003b6e7:	jmp    QWORD PTR [rbp+0x19]
   14003b6ea:	and    al,0xff
   14003b6ec:	sar    BYTE PTR [rsi-0x4c4a0d3e],cl
   14003b6f2:	mov    bl,0x73
   14003b6f4:	add    BYTE PTR [rax],al
   14003b6f6:	add    BYTE PTR [rax],al
   14003b6f8:	add    BYTE PTR [rax],al
   14003b6fa:	add    BYTE PTR [rcx],al
   14003b6fc:	add    BYTE PTR [rax],al
   14003b6fe:	add    BYTE PTR [rdi],al
   14003b700:	add    BYTE PTR [rax],al
   14003b702:	add    BYTE PTR [rsi],bl
   14003b704:	add    BYTE PTR [rax],al
   14003b706:	add    BYTE PTR [rsi],bh
   14003b708:	add    BYTE PTR [rax],al
   14003b70a:	add    BYTE PTR [rcx+0x0],dl
   14003b70d:	add    BYTE PTR [rax],al
   14003b70f:	push   rsi
   14003b710:	add    BYTE PTR [rax],al
   14003b712:	add    BYTE PTR [rdi+0x0],dl
   14003b715:	add    BYTE PTR [rax],al
   14003b717:	push   rdi
   14003b718:	add    BYTE PTR [rax],al
   14003b71a:	add    BYTE PTR [rdi+0x0],dl
   14003b71d:	add    BYTE PTR [rax],al
   14003b71f:	push   rdi
   14003b720:	add    BYTE PTR [rax],al
   14003b722:	add    BYTE PTR [rdi+0x0],dl
   14003b725:	add    BYTE PTR [rax],al
   14003b727:	push   rdi
   14003b728:	add    BYTE PTR [rax],al
   14003b72a:	add    BYTE PTR [rcx+0x0],bl
   14003b72d:	add    BYTE PTR [rax],al
   14003b72f:	(bad)  
   14003b730:	lods   al,BYTE PTR ds:[rsi]
   14003b731:	mov    al,0xa9
   14003b733:	mov    edi,0xfee7e6ee
   14003b738:	sbb    BYTE PTR gs:[rbx],ah
   14003b73b:	jmp    QWORD PTR [rcx+0x12]
   14003b73e:	(bad)  
   14003b73f:	jmp    QWORD PTR [rcx+0x12]
   14003b742:	(bad)  
   14003b743:	jmp    QWORD PTR [rcx+0x12]
   14003b746:	(bad)  
   14003b747:	jmp    QWORD PTR [rcx+0x12]
   14003b74a:	(bad)  
   14003b74b:	jmp    QWORD PTR [rcx+0x12]
   14003b74e:	(bad)  
   14003b74f:	jmp    QWORD PTR [rcx+0x12]
   14003b752:	(bad)  
   14003b753:	jmp    QWORD PTR [rcx+0x12]
   14003b756:	(bad)  
   14003b757:	jmp    QWORD PTR [rcx+0x12]
   14003b75a:	(bad)  
   14003b75b:	jmp    QWORD PTR [rcx+0x12]
   14003b75e:	(bad)  
   14003b75f:	jmp    QWORD PTR [rcx+0x12]
   14003b762:	(bad)  
   14003b763:	jmp    QWORD PTR [rcx+0x12]
   14003b766:	(bad)  
   14003b767:	push   QWORD PTR [rbx+0x2d]
   14003b76a:	cmp    bh,bh
   14003b76c:	(bad)  
   14003b76e:	(bad)  
   14003b76f:	jmp    0x14003b708
   14003b771:	xchg   edi,eax
   14003b772:	xchg   edi,eax
   14003b773:	add    BYTE PTR [r8],r8b
   14003b776:	add    BYTE PTR [rax],al
   14003b778:	add    BYTE PTR [rax],al
   14003b77a:	add    BYTE PTR [rcx],al
   14003b77c:	add    BYTE PTR [rax],al
   14003b77e:	add    BYTE PTR [rbx],cl
   14003b780:	add    BYTE PTR [rax],al
   14003b782:	add    BYTE PTR [rip+0xffffffffff41cd52],ch        # 0x13f4584da
   14003b788:	push   rdx
   14003b789:	int    0x41
   14003b78b:	call   QWORD PTR [rdx-0x33]
   14003b78e:	call   QWORD PTR [r10-0x33]
   14003b792:	call   QWORD PTR [r10-0x33]
   14003b796:	call   QWORD PTR [r10-0x33]
   14003b79a:	call   QWORD PTR [r10-0x33]
   14003b79e:	call   QWORD PTR [r10-0x33]
   14003b7a2:	call   QWORD PTR [r10-0x33]
   14003b7a6:	call   QWORD PTR [r10-0x33]
   14003b7aa:	jmp    QWORD PTR [r14-0x62006221]
   14003b7b1:	mov    ebx,0xe0e3ff8e
   14003b7b6:	(bad)  
   14003b7b8:	sbb    BYTE PTR gs:[rbx],ah
   14003b7bb:	jmp    QWORD PTR [rcx+0x12]
   14003b7be:	(bad)  
   14003b7bf:	jmp    QWORD PTR [rcx+0x12]
   14003b7c2:	(bad)  
   14003b7c3:	jmp    QWORD PTR [rcx+0x12]
   14003b7c6:	(bad)  
   14003b7c7:	jmp    QWORD PTR [rcx+0x12]
   14003b7ca:	(bad)  
   14003b7cb:	jmp    QWORD PTR [rcx+0x12]
   14003b7ce:	(bad)  
   14003b7cf:	jmp    QWORD PTR [rcx+0x12]
   14003b7d2:	(bad)  
   14003b7d3:	jmp    QWORD PTR [rcx+0x12]
   14003b7d6:	(bad)  
   14003b7d7:	jmp    QWORD PTR [rcx+0x12]
   14003b7da:	(bad)  
   14003b7db:	jmp    QWORD PTR [rcx+0x12]
   14003b7de:	(bad)  
   14003b7df:	jmp    QWORD PTR [rcx+0x12]
   14003b7e2:	(bad)  
   14003b7e3:	push   QWORD PTR [rsi+rbp*1+0x38]
   14003b7e7:	(bad)  
   14003b7e8:	(bad)  
   14003b7ea:	(bad)  
   14003b7eb:	(bad)  
   14003b7ec:	(bad)  
   14003b7ed:	(bad)  
   14003b7ee:	(bad)  
   14003b7ef:	rex.WB add BYTE PTR [r8],al
   14003b7f2:	add    BYTE PTR [rax],dl
   14003b7f4:	add    BYTE PTR [rax],al
   14003b7f6:	add    BYTE PTR [rax],al
   14003b7f8:	add    BYTE PTR [rax],al
   14003b7fa:	add    BYTE PTR [rcx],al
   14003b7fc:	add    BYTE PTR [rax],al
   14003b7fe:	add    BYTE PTR [rip+0x32000000],cl        # 0x17203b804
   14003b804:	push   rdx
   14003b805:	int    0x41
   14003b807:	call   QWORD PTR [rdx-0x33]
   14003b80a:	call   QWORD PTR [r10-0x33]
   14003b80e:	call   QWORD PTR [r10-0x33]
   14003b812:	call   QWORD PTR [r10-0x33]
   14003b816:	call   QWORD PTR [r10-0x33]
   14003b81a:	call   QWORD PTR [r10-0x33]
   14003b81e:	call   QWORD PTR [r10-0x33]
   14003b822:	call   QWORD PTR [r11-0x33]
   14003b826:	rex.X jmp FWORD PTR [rsi-0x6e00591f]
   14003b82d:	mov    dl,0x80
   14003b82f:	jmp    FWORD PTR [rcx]
   14003b831:	pop    rsi
   14003b832:	add    eax,0xbfd3caff
   14003b837:	jmp    rdi
   14003b839:	in     al,0xe0
   14003b83b:	jmp    rdi
   14003b83d:	in     al,0xe0
   14003b83f:	jmp    rdi
   14003b841:	in     al,0xe0
   14003b843:	jmp    rdi
   14003b845:	in     al,0xe0
   14003b847:	jmp    rdi
   14003b849:	in     al,0xe0
   14003b84b:	jmp    rdi
   14003b84d:	in     al,0xe0
   14003b84f:	jmp    rdi
   14003b851:	in     al,0xe0
   14003b853:	jmp    rdi
   14003b855:	in     al,0xe0
   14003b857:	push   rax
   14003b859:	in     al,dx
   14003b85a:	jmp    0x14003b85a
   14003b85c:	lods   al,BYTE PTR ds:[rsi]
   14003b85d:	test   BYTE PTR [rdx+0x3e3377fc],cl
   14003b863:	(bad)  
   14003b864:	(bad)  
   14003b866:	xlat   BYTE PTR ds:[rbx]
   14003b867:	jmp    0x1877b2fe3
   14003b86c:	add    BYTE PTR [rax],al
   14003b86e:	add    BYTE PTR [rcx],dl
   14003b870:	add    BYTE PTR [rax],al
   14003b872:	add    BYTE PTR [rip+0x0],al        # 0x14003b878
   14003b878:	add    BYTE PTR [rax],al
   14003b87a:	add    BYTE PTR [rcx],al
   14003b87c:	add    BYTE PTR [rax],al
   14003b87e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403b884
   14003b884:	push   rdx
   14003b885:	int    0x41
   14003b887:	call   QWORD PTR [rdx-0x33]
   14003b88a:	call   QWORD PTR [r10-0x33]
   14003b88e:	call   QWORD PTR [r10-0x33]
   14003b892:	call   QWORD PTR [r10-0x33]
   14003b896:	call   QWORD PTR [r10-0x33]
   14003b89a:	call   QWORD PTR [r10-0x33]
   14003b89e:	call   QWORD PTR [r11-0x33]
   14003b8a2:	rex.X push QWORD PTR [rcx-0x6c00571e]
   14003b8a9:	mov    dl,0x81
   14003b8ab:	jmp    FWORD PTR [rcx]
   14003b8ad:	pop    rsi
   14003b8ae:	add    eax,0x55e29ff
   14003b8b3:	jmp    FWORD PTR [rcx]
   14003b8b5:	pop    rsi
   14003b8b6:	add    eax,0x55e29ff
   14003b8bb:	jmp    FWORD PTR [rcx]
   14003b8bd:	pop    rsi
   14003b8be:	add    eax,0x55e29ff
   14003b8c3:	jmp    FWORD PTR [rcx]
   14003b8c5:	pop    rsi
   14003b8c6:	add    eax,0x55e29ff
   14003b8cb:	jmp    FWORD PTR [rcx]
   14003b8cd:	pop    rsi
   14003b8ce:	add    eax,0x55e29ff
   14003b8d3:	jmp    FWORD PTR [rcx]
   14003b8d5:	pop    rsi
   14003b8d6:	add    eax,0x79a88cff
   14003b8db:	inc    esp
   14003b8dd:	stos   BYTE PTR es:[rdi],al
   14003b8de:	lods   eax,DWORD PTR ds:[rsi]
   14003b8df:	(bad)  
   14003b8e0:	loopne 0x14003b8b7
   14003b8e2:	xlat   BYTE PTR ds:[rbx]
   14003b8e3:	in     eax,dx
   14003b8e4:	gs gs gs push rbx
   14003b8e8:	add    BYTE PTR [rax],al
   14003b8ea:	add    BYTE PTR [rsi],dl
   14003b8ec:	add    BYTE PTR [rax],al
   14003b8ee:	add    BYTE PTR [rsi],al
   14003b8f0:	add    BYTE PTR [rax],al
   14003b8f2:	add    BYTE PTR [rdx],al
   14003b8f4:	add    BYTE PTR [rax],al
   14003b8f6:	add    BYTE PTR [rax],al
   14003b8f8:	add    BYTE PTR [rax],al
   14003b8fa:	add    BYTE PTR [rcx],al
   14003b8fc:	add    BYTE PTR [rax],al
   14003b8fe:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403b904
   14003b904:	push   rdx
   14003b905:	int    0x41
   14003b907:	call   QWORD PTR [rdx-0x33]
   14003b90a:	call   QWORD PTR [r10-0x33]
   14003b90e:	call   QWORD PTR [r10-0x33]
   14003b912:	call   QWORD PTR [r10-0x33]
   14003b916:	call   QWORD PTR [r10-0x33]
   14003b91a:	call   QWORD PTR [r10-0x33]
   14003b91e:	push   QWORD PTR [r11+riz*8-0x52720055]
   14003b926:	jnp    0x14003b927
   14003b928:	sub    DWORD PTR [rsi+0x5],ebx
   14003b92b:	jmp    FWORD PTR [rcx]
   14003b92d:	pop    rsi
   14003b92e:	add    eax,0x55e29ff
   14003b933:	jmp    FWORD PTR [rcx]
   14003b935:	pop    rsi
   14003b936:	add    eax,0x55e29ff
   14003b93b:	jmp    FWORD PTR [rcx]
   14003b93d:	pop    rsi
   14003b93e:	add    eax,0x55e29ff
   14003b943:	jmp    FWORD PTR [rcx]
   14003b945:	pop    rsi
   14003b946:	add    eax,0x55e29ff
   14003b94b:	jmp    FWORD PTR [rcx]
   14003b94d:	pop    rsi
   14003b94e:	add    eax,0x55e29ff
   14003b953:	jmp    FWORD PTR [rcx]
   14003b955:	pop    rsi
   14003b956:	add    eax,0x79a88cff
   14003b95b:	(bad)  
   14003b95c:	in     eax,dx
   14003b95d:	out    dx,eax
   14003b95e:	call   0x18ba71162
   14003b963:	mov    eax,0x31000000
   14003b968:	add    BYTE PTR [rax],al
   14003b96a:	add    BYTE PTR [rsi],cl
   14003b96c:	add    BYTE PTR [rax],al
   14003b96e:	add    BYTE PTR [rbx],al
	...
   14003b978:	add    BYTE PTR [rax],al
   14003b97a:	add    BYTE PTR [rcx],al
   14003b97c:	add    BYTE PTR [rax],al
   14003b97e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403b984
   14003b984:	push   rdx
   14003b985:	int    0x41
   14003b987:	call   QWORD PTR [rdx-0x33]
   14003b98a:	call   QWORD PTR [r10-0x33]
   14003b98e:	call   QWORD PTR [r10-0x33]
   14003b992:	call   QWORD PTR [r10-0x33]
   14003b996:	call   QWORD PTR [r10-0x33]
   14003b99a:	call   FWORD PTR [r13-0xe006c1d]
   14003b9a1:	stc    
   14003b9a2:	out    dx,eax
   14003b9a3:	call   rsp
   14003b9a5:	(bad)  
   14003b9a7:	push   QWORD PTR [rdx]
   14003b9a9:	gs adc bh,bh
   14003b9ac:	sub    DWORD PTR [rsi+0x5],ebx
   14003b9af:	jmp    FWORD PTR [rcx]
   14003b9b1:	pop    rsi
   14003b9b2:	add    eax,0x55e29ff
   14003b9b7:	jmp    FWORD PTR [rcx]
   14003b9b9:	pop    rsi
   14003b9ba:	add    eax,0x55e29ff
   14003b9bf:	jmp    FWORD PTR [rcx]
   14003b9c1:	pop    rsi
   14003b9c2:	add    eax,0x55e29ff
   14003b9c7:	jmp    FWORD PTR [rcx]
   14003b9c9:	pop    rsi
   14003b9ca:	add    eax,0x55e29ff
   14003b9cf:	jmp    FWORD PTR [rcx]
   14003b9d1:	pop    rsi
   14003b9d2:	add    eax,0x55e29ff
   14003b9d7:	(bad)  
   14003b9d8:	jns    0x14003b974
   14003b9da:	movsxd edi,edi
   14003b9dc:	test   eax,0x52ff9fe1
   14003b9e1:	int    0x41
   14003b9e3:	inc    DWORD PTR [rax]
   14003b9e5:	add    BYTE PTR [rax],al
   14003b9e7:	xor    al,BYTE PTR [rax]
   14003b9e9:	add    BYTE PTR [rax],al
   14003b9eb:	or     eax,0x1000000
	...
   14003b9f8:	add    BYTE PTR [rax],al
   14003b9fa:	add    BYTE PTR [rcx],al
   14003b9fc:	add    BYTE PTR [rax],al
   14003b9fe:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403ba04
   14003ba04:	push   rdx
   14003ba05:	int    0x41
   14003ba07:	call   QWORD PTR [rdx-0x33]
   14003ba0a:	call   QWORD PTR [r10-0x33]
   14003ba0e:	call   QWORD PTR [r10-0x33]
   14003ba12:	call   QWORD PTR [r10-0x33]
   14003ba16:	dec    DWORD PTR [r14+rbx*8-0x80]
   14003ba1e:	(bad)  
   14003ba1f:	push   rdx
   14003ba21:	sti    
   14003ba22:	icebp  
   14003ba23:	(bad)  
   14003ba24:	mov    eax,0xcdffb0e9
   14003ba29:	faddp  st(5),st
   14003ba2b:	push   QWORD PTR [rsi+riz*2]
   14003ba2e:	adc    bh,bh
   14003ba30:	sub    DWORD PTR [rsi+0x5],ebx
   14003ba33:	push   QWORD PTR [rbx]
   14003ba35:	adc    di,di
   14003ba38:	(bad)  
   14003ba39:	imul   edx,DWORD PTR [rsi],0x166937ff
   14003ba3f:	push   QWORD PTR [rdi]
   14003ba41:	imul   edx,DWORD PTR [rsi],0x166937ff
   14003ba47:	push   QWORD PTR [rdi]
   14003ba49:	imul   edx,DWORD PTR [rsi],0x166937ff
   14003ba4f:	push   QWORD PTR [rdi]
   14003ba51:	imul   edx,DWORD PTR [rsi],0x166937ff
   14003ba57:	jmp    FWORD PTR [rcx+rdx*4+0x53]
   14003ba5b:	jmp    QWORD PTR [rax+0x52ff96de]
   14003ba61:	int    0x41
   14003ba63:	inc    DWORD PTR [rax]
   14003ba65:	add    BYTE PTR [rax],al
   14003ba67:	xor    eax,DWORD PTR [rax]
   14003ba69:	add    BYTE PTR [rax],al
   14003ba6b:	or     eax,0x1000000
	...
   14003ba78:	add    BYTE PTR [rax],al
   14003ba7a:	add    BYTE PTR [rcx],al
   14003ba7c:	add    BYTE PTR [rax],al
   14003ba7e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403ba84
   14003ba84:	push   rdx
   14003ba85:	int    0x41
   14003ba87:	call   QWORD PTR [rdx-0x33]
   14003ba8a:	call   QWORD PTR [r10-0x33]
   14003ba8e:	call   QWORD PTR [r10-0x33]
   14003ba92:	call   QWORD PTR [r10-0x33]
   14003ba96:	call   r12
   14003ba99:	repnz iret 
   14003ba9b:	(bad)  
   14003ba9c:	(bad)  
   14003ba9d:	(bad)  
   14003ba9e:	(bad)  
   14003ba9f:	(bad)  
   14003baa0:	jp     0x14003ba7b
   14003baa2:	ins    DWORD PTR es:[rdi],dx
   14003baa3:	call   QWORD PTR [rdx-0x33]
   14003baa6:	rex.B (bad) 
   14003baa8:	jnp    0x14003ba81
   14003baaa:	outs   dx,BYTE PTR ds:[rsi]
   14003baab:	dec    ebx
   14003baad:	faddp  st(3),st
   14003baaf:	push   QWORD PTR [rsi]
   14003bab1:	push   0xffffffffdacdff15
   14003bab6:	(bad)  
   14003bab7:	inc    ebx
   14003bab9:	in     eax,0xbc
   14003babb:	inc    edx
   14003babd:	in     al,0xba
   14003babf:	(bad)  
   14003bac0:	call   0x12d039fb4
   14003bac5:	lock call 0xfbe97dca
   14003bacb:	inc    edx
   14003bacd:	in     al,0xba
   14003bacf:	inc    edx
   14003bad1:	in     al,0xba
   14003bad3:	inc    edx
   14003bad5:	in     al,0xba
   14003bad7:	inc    edx
   14003bad9:	in     al,0xba
   14003badb:	inc    DWORD PTR [rsi+0x52ff7ada]
   14003bae1:	int    0x41
   14003bae3:	inc    DWORD PTR [rax]
   14003bae5:	add    BYTE PTR [rax],al
   14003bae7:	xor    al,0x0
   14003bae9:	add    BYTE PTR [rax],al
   14003baeb:	or     eax,0x1000000
	...
   14003baf8:	add    BYTE PTR [rax],al
   14003bafa:	add    BYTE PTR [rcx],al
   14003bafc:	add    BYTE PTR [rax],al
   14003bafe:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403bb04
   14003bb04:	push   rdx
   14003bb05:	int    0x41
   14003bb07:	call   QWORD PTR [rdx-0x33]
   14003bb0a:	call   QWORD PTR [r10-0x33]
   14003bb0e:	call   QWORD PTR [r10-0x33]
   14003bb12:	call   QWORD PTR [r10-0x33]
   14003bb16:	rex.B (bad) 
   14003bb18:	out    dx,al
   14003bb19:	cli    
   14003bb1a:	in     al,dx
   14003bb1b:	(bad)  
   14003bb1c:	(bad)  
   14003bb1e:	(bad)  
   14003bb20:	push   rdx
   14003bb21:	int    0x41
   14003bb23:	call   QWORD PTR [rdx-0x33]
   14003bb26:	call   QWORD PTR [r10-0x33]
   14003bb2a:	push   QWORD PTR [r15-0x29]
   14003bb2e:	push   0xffffffffffffffff
   14003bb30:	(bad)  
   14003bb31:	jrcxz  0x14003bb02
   14003bb33:	(bad)  
   14003bb34:	(bad)  
   14003bb36:	fcos   
   14003bb38:	movsxd edx,edx
   14003bb3a:	push   rbx
   14003bb3b:	call   QWORD PTR [rdx-0x33]
   14003bb3e:	push   r15
   14003bb41:	std    
   14003bb42:	idiv   bh
   14003bb44:	icebp  
   14003bb45:	sti    
   14003bb46:	lock call QWORD PTR [rdx-0x33]
   14003bb4a:	call   QWORD PTR [r10-0x33]
   14003bb4e:	call   QWORD PTR [r10-0x33]
   14003bb52:	call   QWORD PTR [r10-0x33]
   14003bb56:	call   QWORD PTR [r10-0x33]
   14003bb5a:	call   QWORD PTR [r10-0x33]
   14003bb5e:	call   QWORD PTR [r10-0x33]
   14003bb62:	inc    DWORD PTR [r8]
   14003bb65:	add    BYTE PTR [rax],al
   14003bb67:	xor    al,0x0
   14003bb69:	add    BYTE PTR [rax],al
   14003bb6b:	or     eax,0x1000000
	...
   14003bb78:	add    BYTE PTR [rax],al
   14003bb7a:	add    BYTE PTR [rcx],al
   14003bb7c:	add    BYTE PTR [rax],al
   14003bb7e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403bb84
   14003bb84:	push   rdx
   14003bb85:	int    0x41
   14003bb87:	call   QWORD PTR [rdx-0x33]
   14003bb8a:	call   QWORD PTR [r10-0x33]
   14003bb8e:	call   QWORD PTR [r10-0x33]
   14003bb92:	call   QWORD PTR [r14+rcx*8+0x43]
   14003bb97:	(bad)  
   14003bb98:	std    
   14003bb99:	(bad)  
   14003bb9a:	std    
   14003bb9b:	dec    ebx
   14003bb9d:	lock (bad) 
   14003bb9f:	call   QWORD PTR [rdx-0x33]
   14003bba2:	call   QWORD PTR [r10-0x33]
   14003bba6:	call   QWORD PTR [r10-0x33]
   14003bbaa:	call   QWORD PTR [r10-0x33]
   14003bbae:	rex.B (bad) 
   14003bbb0:	mov    ebp,0xfaffb6eb
   14003bbb5:	sti    
   14003bbb6:	stc    
   14003bbb7:	push   QWORD PTR [rdx-0x2a]
   14003bbba:	call   QWORD PTR gs:[rdx-0x33]
   14003bbbe:	push   r15
   14003bbc1:	std    
   14003bbc2:	idiv   bh
   14003bbc4:	icebp  
   14003bbc5:	sti    
   14003bbc6:	out    dx,eax
   14003bbc7:	call   QWORD PTR [rdx-0x33]
   14003bbca:	call   QWORD PTR [r10-0x33]
   14003bbce:	call   QWORD PTR [r10-0x33]
   14003bbd2:	call   QWORD PTR [r10-0x33]
   14003bbd6:	call   QWORD PTR [r10-0x33]
   14003bbda:	call   QWORD PTR [r10-0x33]
   14003bbde:	call   QWORD PTR [r10-0x33]
   14003bbe2:	inc    DWORD PTR [r8]
   14003bbe5:	add    BYTE PTR [rax],al
   14003bbe7:	xor    al,0x0
   14003bbe9:	add    BYTE PTR [rax],al
   14003bbeb:	or     eax,0x1000000
	...
   14003bbf8:	add    BYTE PTR [rax],al
   14003bbfa:	add    BYTE PTR [rcx],al
   14003bbfc:	add    BYTE PTR [rax],al
   14003bbfe:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403bc04
   14003bc04:	push   rdx
   14003bc05:	int    0x41
   14003bc07:	call   QWORD PTR [rdx-0x33]
   14003bc0a:	call   QWORD PTR [r10-0x33]
   14003bc0e:	call   QWORD PTR [r10-0x33]
   14003bc12:	call   QWORD PTR [r11-0x33]
   14003bc16:	rex.X (bad) 
   14003bc18:	sti    
   14003bc19:	(bad)  
   14003bc1a:	sti    
   14003bc1b:	dec    esp
   14003bc1d:	lock (bad) 
   14003bc1f:	call   QWORD PTR [rdx-0x33]
   14003bc22:	call   QWORD PTR [r10-0x33]
   14003bc26:	call   QWORD PTR [r10-0x33]
   14003bc2a:	call   QWORD PTR [r10-0x33]
   14003bc2e:	jmp    FWORD PTR [r15-0x5818]
   14003bc35:	(bad)  
   14003bc36:	(bad)  
   14003bc37:	jmp    FWORD PTR [rbp+rdx*8+0x5e]
   14003bc3b:	(bad)  
   14003bc3c:	mov    edx,0xfcffb3eb
   14003bc41:	(bad)  
   14003bc42:	sti    
   14003bc43:	(bad)  
   14003bc44:	cli    
   14003bc45:	std    
   14003bc46:	stc    
   14003bc47:	(bad)  
   14003bc48:	mov    edx,0xbaffb3eb
   14003bc4d:	jmp    0x14003bc02
   14003bc4f:	call   QWORD PTR [rdx-0x33]
   14003bc52:	call   QWORD PTR [r10-0x33]
   14003bc56:	call   QWORD PTR [r10-0x33]
   14003bc5a:	call   QWORD PTR [r10-0x33]
   14003bc5e:	call   QWORD PTR [r10-0x33]
   14003bc62:	inc    DWORD PTR [r8]
   14003bc65:	add    BYTE PTR [rax],al
   14003bc67:	xor    al,0x0
   14003bc69:	add    BYTE PTR [rax],al
   14003bc6b:	or     eax,0x1000000
	...
   14003bc78:	add    BYTE PTR [rax],al
   14003bc7a:	add    BYTE PTR [rcx],al
   14003bc7c:	add    BYTE PTR [rax],al
   14003bc7e:	add    BYTE PTR [rip+0x34000000],cl        # 0x17403bc84
   14003bc84:	push   rdx
   14003bc85:	int    0x41
   14003bc87:	call   QWORD PTR [rdx-0x33]
   14003bc8a:	call   QWORD PTR [r10-0x33]
   14003bc8e:	call   QWORD PTR [r10-0x33]
   14003bc92:	call   QWORD PTR [r10-0x33]
   14003bc96:	rex.B (bad) 
   14003bc98:	(bad)  
   14003bc99:	stc    
   14003bc9a:	call   0x11dfa9d9e
   14003bc9f:	call   QWORD PTR [rdx-0x33]
   14003bca2:	call   QWORD PTR [r10-0x33]
   14003bca6:	call   QWORD PTR [r10-0x33]
   14003bcaa:	call   QWORD PTR [r10-0x33]
   14003bcae:	inc    r10d
   14003bcb1:	in     eax,dx
   14003bcb2:	mov    esp,0xffffffff
   14003bcb7:	call   FWORD PTR [rcx-0x31]
   14003bcba:	rex.W (bad) 
   14003bcbc:	(bad)  
   14003bcbd:	(bad)  
   14003bcbe:	(bad)  
   14003bcbf:	(bad)  
   14003bcc0:	(bad)  
   14003bcc1:	(bad)  
   14003bcc2:	(bad)  
   14003bcc3:	(bad)  
   14003bcc4:	(bad)  
   14003bcc5:	(bad)  
   14003bcc6:	(bad)  
   14003bcc7:	(bad)  
   14003bcc8:	(bad)  
   14003bcc9:	(bad)  
   14003bcca:	(bad)  
   14003bccb:	(bad)  
   14003bccc:	(bad)  
   14003bccd:	(bad)  
   14003bcce:	(bad)  
   14003bccf:	call   QWORD PTR [rdx-0x33]
   14003bcd2:	call   QWORD PTR [r10-0x33]
   14003bcd6:	call   QWORD PTR [r10-0x33]
   14003bcda:	call   QWORD PTR [r10-0x33]
   14003bcde:	call   QWORD PTR [r10-0x33]
   14003bce2:	inc    DWORD PTR [r8]
   14003bce5:	add    BYTE PTR [rax],al
   14003bce7:	xor    al,0x0
   14003bce9:	add    BYTE PTR [rax],al
   14003bceb:	or     eax,0x1000000
	...
   14003bcf8:	add    BYTE PTR [rax],al
   14003bcfa:	add    BYTE PTR [rcx],al
   14003bcfc:	add    BYTE PTR [rax],al
   14003bcfe:	add    BYTE PTR [rip+0x33000000],cl        # 0x17303bd04
   14003bd04:	push   rdx
   14003bd05:	int    0x41
   14003bd07:	call   QWORD PTR [rdx-0x33]
   14003bd0a:	call   QWORD PTR [r10-0x33]
   14003bd0e:	call   QWORD PTR [r10-0x33]
   14003bd12:	call   QWORD PTR [r10-0x33]
   14003bd16:	dec    r10d
   14003bd19:	lock (bad) 
   14003bd1d:	(bad)  
   14003bd1e:	(bad)  
   14003bd1f:	jmp    FWORD PTR [rdi-0x2b]
   14003bd22:	(bad)  
   14003bd23:	call   QWORD PTR [rdx-0x33]
   14003bd26:	call   QWORD PTR [r10-0x33]
   14003bd2a:	call   FWORD PTR [r11-0x30]
   14003bd2e:	rex.WXB push r11
   14003bd31:	cld    
   14003bd32:	bnd jmp rsi
   14003bd35:	clc    
   14003bd36:	jrcxz  0x14003bd37
   14003bd38:	push   rdx
   14003bd39:	int    0x41
   14003bd3b:	call   QWORD PTR [rdx-0x33]
   14003bd3e:	rex.B (bad) 
   14003bd40:	(bad)  
   14003bd41:	(bad)  
   14003bd42:	(bad)  
   14003bd43:	(bad)  
   14003bd44:	(bad)  
   14003bd45:	(bad)  
   14003bd46:	(bad)  
   14003bd47:	call   QWORD PTR [rdx-0x33]
   14003bd4a:	call   QWORD PTR [r10-0x33]
   14003bd4e:	call   QWORD PTR [r10-0x33]
   14003bd52:	call   QWORD PTR [r10-0x33]
   14003bd56:	call   QWORD PTR [r10-0x33]
   14003bd5a:	call   QWORD PTR [r10-0x33]
   14003bd5e:	call   QWORD PTR [r10-0x33]
   14003bd62:	inc    DWORD PTR [r8]
   14003bd65:	add    BYTE PTR [rax],al
   14003bd67:	xor    al,0x0
   14003bd69:	add    BYTE PTR [rax],al
   14003bd6b:	or     eax,0x1000000
	...
   14003bd78:	add    BYTE PTR [rax],al
   14003bd7a:	add    BYTE PTR [rcx],al
   14003bd7c:	add    BYTE PTR [rax],al
   14003bd7e:	add    BYTE PTR [rbx],cl
   14003bd80:	add    BYTE PTR [rax],al
   14003bd82:	add    BYTE PTR [rsi],ch
   14003bd84:	push   rdx
   14003bd85:	int    0x41
   14003bd87:	call   QWORD PTR [rdx-0x33]
   14003bd8a:	call   QWORD PTR [r10-0x33]
   14003bd8e:	call   QWORD PTR [r10-0x33]
   14003bd92:	call   QWORD PTR [r10-0x33]
   14003bd96:	rex.B (bad) 
   14003bd98:	jnp    0x14003bd73
   14003bd9a:	outs   dx,BYTE PTR ds:[rsi]
   14003bd9b:	(bad)  
   14003bd9c:	std    
   14003bd9d:	(bad)  
   14003bd9e:	std    
   14003bd9f:	(bad)  
   14003bda0:	in     al,dx
   14003bda1:	cli    
   14003bda2:	(bad)  
   14003bda3:	push   QWORD PTR [rax-0x55005618]
   14003bda9:	out    0xa2,al
   14003bdab:	jmp    rax
   14003bdad:	neg    ch
   14003bdaf:	(bad)  
   14003bdb0:	(bad)  
   14003bdb1:	(bad)  
   14003bdb2:	(bad)  
   14003bdb3:	call   QWORD PTR [rsi+0x52ff8ce1]
   14003bdb9:	int    0x41
   14003bdbb:	call   QWORD PTR [rdx-0x33]
   14003bdbe:	rex.B (bad) 
   14003bdc0:	(bad)  
   14003bdc1:	(bad)  
   14003bdc2:	(bad)  
   14003bdc3:	(bad)  
   14003bdc4:	(bad)  
   14003bdc5:	(bad)  
   14003bdc6:	(bad)  
   14003bdc7:	call   QWORD PTR [rdx-0x33]
   14003bdca:	call   QWORD PTR [r10-0x33]
   14003bdce:	call   QWORD PTR [r10-0x33]
   14003bdd2:	call   QWORD PTR [r10-0x33]
   14003bdd6:	call   QWORD PTR [r10-0x33]
   14003bdda:	call   QWORD PTR [r10-0x33]
   14003bdde:	call   QWORD PTR [r10-0x33]
   14003bde2:	inc    DWORD PTR [r8]
   14003bde5:	add    BYTE PTR [rax],al
   14003bde7:	xor    al,0x0
   14003bde9:	add    BYTE PTR [rax],al
   14003bdeb:	or     eax,0x1000000
	...
   14003bdf8:	add    BYTE PTR [rax],al
   14003bdfa:	add    BYTE PTR [rcx],al
   14003bdfc:	add    BYTE PTR [rax],al
   14003bdfe:	add    BYTE PTR [rax],cl
   14003be00:	add    BYTE PTR [rax],al
   14003be02:	add    BYTE PTR [rdx+rdx*2],ah
   14003be05:	int    0x41
   14003be07:	call   QWORD PTR [rdx-0x33]
   14003be0a:	call   QWORD PTR [r10-0x33]
   14003be0e:	call   QWORD PTR [r10-0x33]
   14003be12:	call   QWORD PTR [r10-0x33]
   14003be16:	call   QWORD PTR [r10-0x33]
   14003be1a:	dec    DWORD PTR [r9-0x1d008223]
   14003be21:	neg    edi
   14003be23:	(bad)  
   14003be24:	(bad)  
   14003be25:	(bad)  
   14003be26:	(bad)  
   14003be27:	(bad)  
   14003be28:	(bad)  
   14003be29:	(bad)  
   14003be2a:	(bad)  
   14003be2b:	(bad)  
   14003be2c:	jmp    0x14003be27
   14003be2e:	jmp    0xd4e75d32
   14003be33:	call   QWORD PTR [rdx-0x33]
   14003be36:	call   QWORD PTR [r10-0x33]
   14003be3a:	call   QWORD PTR [r10-0x33]
   14003be3e:	rex.B (bad) 
   14003be40:	(bad)  
   14003be41:	(bad)  
   14003be42:	(bad)  
   14003be43:	(bad)  
   14003be44:	(bad)  
   14003be45:	(bad)  
   14003be46:	(bad)  
   14003be47:	call   QWORD PTR [rdx-0x33]
   14003be4a:	call   QWORD PTR [r10-0x33]
   14003be4e:	call   QWORD PTR [r10-0x33]
   14003be52:	call   QWORD PTR [r10-0x33]
   14003be56:	call   QWORD PTR [r10-0x33]
   14003be5a:	call   QWORD PTR [r10-0x33]
   14003be5e:	call   QWORD PTR [r10-0x33]
   14003be62:	inc    DWORD PTR [r8]
   14003be65:	add    BYTE PTR [rax],al
   14003be67:	xor    al,0x0
   14003be69:	add    BYTE PTR [rax],al
   14003be6b:	or     eax,0x1000000
	...
   14003be7c:	add    BYTE PTR [rax],al
   14003be7e:	add    BYTE PTR [rax+rax*1],al
   14003be81:	add    BYTE PTR [rax],al
   14003be83:	adc    eax,0x9b36a944
   14003be88:	push   rdx
   14003be89:	int    0x41
   14003be8b:	call   QWORD PTR [rdx-0x33]
   14003be8e:	call   QWORD PTR [r10-0x33]
   14003be92:	call   QWORD PTR [r10-0x33]
   14003be96:	call   QWORD PTR [r10-0x33]
   14003be9a:	call   QWORD PTR [r10-0x33]
   14003be9e:	call   QWORD PTR [r10-0x33]
   14003bea2:	call   QWORD PTR [r15-0x32]
   14003bea6:	rex.RX call FWORD PTR [rax-0x31]
   14003beaa:	rex.W call QWORD PTR [rdx-0x33]
   14003beae:	call   QWORD PTR [r10-0x33]
   14003beb2:	call   QWORD PTR [r10-0x33]
   14003beb6:	call   QWORD PTR [r10-0x33]
   14003beba:	call   QWORD PTR [r10-0x33]
   14003bebe:	call   QWORD PTR [r10-0x33]
   14003bec2:	call   QWORD PTR [r10-0x33]
   14003bec6:	call   QWORD PTR [r10-0x33]
   14003beca:	call   QWORD PTR [r10-0x33]
   14003bece:	call   QWORD PTR [r10-0x33]
   14003bed2:	call   QWORD PTR [r10-0x33]
   14003bed6:	call   QWORD PTR [r10-0x33]
   14003beda:	call   QWORD PTR [r10-0x33]
   14003bede:	call   QWORD PTR [r10-0x33]
   14003bee2:	inc    DWORD PTR [r8]
   14003bee5:	add    BYTE PTR [rax],al
   14003bee7:	xor    al,0x0
   14003bee9:	add    BYTE PTR [rax],al
   14003beeb:	or     eax,0x1000000
	...
   14003befc:	add    BYTE PTR [rax],al
   14003befe:	add    BYTE PTR [rdx],al
   14003bf00:	add    BYTE PTR [rax],al
   14003bf02:	add    BYTE PTR [rcx],cl
   14003bf04:	add    BYTE PTR [rax],al
   14003bf06:	add    BYTE PTR [rbx+rax*2],bl
   14003bf09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003bf0a:	ss popf 
   14003bf0c:	push   rdx
   14003bf0d:	int    0x41
   14003bf0f:	call   QWORD PTR [rdx-0x33]
   14003bf12:	call   QWORD PTR [r10-0x33]
   14003bf16:	call   QWORD PTR [r10-0x33]
   14003bf1a:	call   QWORD PTR [r10-0x33]
   14003bf1e:	call   QWORD PTR [r10-0x33]
   14003bf22:	call   QWORD PTR [r10-0x33]
   14003bf26:	call   QWORD PTR [r10-0x33]
   14003bf2a:	call   QWORD PTR [r10-0x33]
   14003bf2e:	call   QWORD PTR [r10-0x33]
   14003bf32:	call   QWORD PTR [r10-0x33]
   14003bf36:	call   QWORD PTR [r10-0x33]
   14003bf3a:	call   QWORD PTR [r10-0x33]
   14003bf3e:	call   QWORD PTR [r10-0x33]
   14003bf42:	call   QWORD PTR [r10-0x33]
   14003bf46:	call   QWORD PTR [r10-0x33]
   14003bf4a:	call   QWORD PTR [r10-0x33]
   14003bf4e:	call   QWORD PTR [r10-0x33]
   14003bf52:	call   QWORD PTR [r10-0x33]
   14003bf56:	call   QWORD PTR [r10-0x33]
   14003bf5a:	call   QWORD PTR [r10-0x33]
   14003bf5e:	call   QWORD PTR [r10-0x33]
   14003bf62:	inc    DWORD PTR [r8]
   14003bf65:	add    BYTE PTR [rax],al
   14003bf67:	xor    al,BYTE PTR [rax]
   14003bf69:	add    BYTE PTR [rax],al
   14003bf6b:	or     al,0x0
   14003bf6d:	add    BYTE PTR [rax],al
   14003bf6f:	add    DWORD PTR [rax],eax
	...
   14003bf81:	add    BYTE PTR [rax],al
   14003bf83:	add    al,BYTE PTR [rax]
   14003bf85:	add    BYTE PTR [rax],al
   14003bf87:	or     al,BYTE PTR [rax]
   14003bf89:	add    BYTE PTR [rax],al
   14003bf8b:	sbb    al,0x43
   14003bf8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003bf8e:	ss pushf 
   14003bf90:	push   rdx
   14003bf91:	int    0x41
   14003bf93:	call   QWORD PTR [rdx-0x33]
   14003bf96:	call   QWORD PTR [r10-0x33]
   14003bf9a:	call   QWORD PTR [r10-0x33]
   14003bf9e:	call   QWORD PTR [r10-0x33]
   14003bfa2:	call   QWORD PTR [r10-0x33]
   14003bfa6:	call   QWORD PTR [r10-0x33]
   14003bfaa:	call   QWORD PTR [r10-0x33]
   14003bfae:	call   QWORD PTR [r10-0x33]
   14003bfb2:	call   QWORD PTR [r10-0x33]
   14003bfb6:	call   QWORD PTR [r10-0x33]
   14003bfba:	call   QWORD PTR [r10-0x33]
   14003bfbe:	call   QWORD PTR [r10-0x33]
   14003bfc2:	call   QWORD PTR [r10-0x33]
   14003bfc6:	call   QWORD PTR [r10-0x33]
   14003bfca:	call   QWORD PTR [r10-0x33]
   14003bfce:	call   QWORD PTR [r10-0x33]
   14003bfd2:	call   QWORD PTR [r10-0x33]
   14003bfd6:	call   QWORD PTR [r10-0x33]
   14003bfda:	call   QWORD PTR [r10-0x33]
   14003bfde:	call   QWORD PTR [r10-0x33]
   14003bfe2:	inc    DWORD PTR [r8]
   14003bfe5:	add    BYTE PTR [rax],al
   14003bfe7:	sub    DWORD PTR [rax],eax
   14003bfe9:	add    BYTE PTR [rax],al
   14003bfeb:	or     al,BYTE PTR [rax]
   14003bfed:	add    BYTE PTR [rax],al
   14003bfef:	add    DWORD PTR [rax],eax
	...
   14003c005:	add    BYTE PTR [rax],al
   14003c007:	add    eax,DWORD PTR [rax]
   14003c009:	add    BYTE PTR [rax],al
   14003c00b:	or     al,BYTE PTR [rax]
   14003c00d:	add    BYTE PTR [rax],al
   14003c00f:	sbb    al,BYTE PTR [rbp-0x53]
   14003c012:	(bad)  
   14003c013:	xchg   edi,eax
   14003c014:	push   rdx
   14003c015:	int    0x41
   14003c017:	call   QWORD PTR [rdx-0x33]
   14003c01a:	call   QWORD PTR [r10-0x33]
   14003c01e:	call   QWORD PTR [r10-0x33]
   14003c022:	call   QWORD PTR [r10-0x33]
   14003c026:	call   QWORD PTR [r10-0x33]
   14003c02a:	call   QWORD PTR [r10-0x33]
   14003c02e:	call   QWORD PTR [r10-0x33]
   14003c032:	call   QWORD PTR [r10-0x33]
   14003c036:	call   QWORD PTR [r10-0x33]
   14003c03a:	call   QWORD PTR [r10-0x33]
   14003c03e:	call   QWORD PTR [r10-0x33]
   14003c042:	call   QWORD PTR [r10-0x33]
   14003c046:	call   QWORD PTR [r10-0x33]
   14003c04a:	call   QWORD PTR [r10-0x33]
   14003c04e:	call   QWORD PTR [r10-0x33]
   14003c052:	call   QWORD PTR [r10-0x33]
   14003c056:	call   QWORD PTR [r10-0x33]
   14003c05a:	call   QWORD PTR [r10-0x33]
   14003c05e:	call   QWORD PTR [r10-0x33]
   14003c062:	inc    DWORD PTR [r8]
   14003c065:	add    BYTE PTR [rax],al
   14003c067:	sbb    DWORD PTR [rax],eax
   14003c069:	add    BYTE PTR [rax],al
   14003c06b:	(bad)  
   14003c06c:	add    BYTE PTR [rax],al
   14003c06e:	add    BYTE PTR [rcx],al
	...
   14003c088:	add    BYTE PTR [rax],al
   14003c08a:	add    BYTE PTR [rdx],al
   14003c08c:	add    BYTE PTR [rax],al
   14003c08e:	add    BYTE PTR [rdi],al
   14003c090:	add    BYTE PTR [rax],al
   14003c092:	add    BYTE PTR [rax],dl
   14003c094:	add    BYTE PTR [rax],al
   14003c096:	add    BYTE PTR [rax],bl
   14003c098:	add    BYTE PTR [rax],al
   14003c09a:	add    BYTE PTR [rbx],bl
   14003c09c:	add    BYTE PTR [rax],al
   14003c09e:	add    BYTE PTR [rax+rax*1],bl
   14003c0a1:	add    BYTE PTR [rax],al
   14003c0a3:	sbb    eax,0x1d000000
   14003c0a8:	add    BYTE PTR [rax],al
   14003c0aa:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0b0
   14003c0b0:	add    BYTE PTR [rax],al
   14003c0b2:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0b8
   14003c0b8:	add    BYTE PTR [rax],al
   14003c0ba:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0c0
   14003c0c0:	add    BYTE PTR [rax],al
   14003c0c2:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0c8
   14003c0c8:	add    BYTE PTR [rax],al
   14003c0ca:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0d0
   14003c0d0:	add    BYTE PTR [rax],al
   14003c0d2:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d03c0d8
   14003c0d8:	add    BYTE PTR [rax],al
   14003c0da:	add    BYTE PTR [rbx],bl
   14003c0dc:	add    BYTE PTR [rax],al
   14003c0de:	add    BYTE PTR [rdx],bl
   14003c0e0:	add    BYTE PTR [rax],al
   14003c0e2:	add    BYTE PTR [rax+rax*1],dl
   14003c0e5:	add    BYTE PTR [rax],al
   14003c0e7:	or     DWORD PTR [rax],eax
   14003c0e9:	add    BYTE PTR [rax],al
   14003c0eb:	add    al,BYTE PTR [rax]
	...
   14003c10d:	add    BYTE PTR [rax],al
   14003c10f:	add    DWORD PTR [rax],eax
   14003c111:	add    BYTE PTR [rax],al
   14003c113:	add    eax,DWORD PTR [rax]
   14003c115:	add    BYTE PTR [rax],al
   14003c117:	add    al,0x0
   14003c119:	add    BYTE PTR [rax],al
   14003c11b:	add    eax,0x5000000
   14003c120:	add    BYTE PTR [rax],al
   14003c122:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c128
   14003c128:	add    BYTE PTR [rax],al
   14003c12a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c130
   14003c130:	add    BYTE PTR [rax],al
   14003c132:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c138
   14003c138:	add    BYTE PTR [rax],al
   14003c13a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c140
   14003c140:	add    BYTE PTR [rax],al
   14003c142:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c148
   14003c148:	add    BYTE PTR [rax],al
   14003c14a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c150
   14003c150:	add    BYTE PTR [rax],al
   14003c152:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c158
   14003c158:	add    BYTE PTR [rax],al
   14003c15a:	add    BYTE PTR [rip+0x5000000],al        # 0x14503c160
   14003c160:	add    BYTE PTR [rax],al
   14003c162:	add    BYTE PTR [rax+rax*1],al
   14003c165:	add    BYTE PTR [rax],al
   14003c167:	add    al,BYTE PTR [rax]
	...
   14003c3f1:	add    BYTE PTR [rax],al
   14003c3f3:	add    bh,bh
   14003c3f5:	cld    
   14003c3f6:	add    BYTE PTR [rax],al
   14003c3f8:	(bad)  
   14003c3f9:	cld    
   14003c3fa:	add    BYTE PTR [rax],al
   14003c3fc:	(bad)  
   14003c3fd:	clc    
   14003c3fe:	add    BYTE PTR [rax],al
   14003c400:	loopne 0x14003c402
   14003c402:	add    BYTE PTR [rax],al
   14003c404:	rol    BYTE PTR [rax],0x0
   14003c407:	add    BYTE PTR [rax-0x80000000],al
   14003c40d:	add    BYTE PTR [rax],al
   14003c40f:	add    BYTE PTR [rax-0x80000000],al
   14003c415:	add    BYTE PTR [rax],al
   14003c417:	add    BYTE PTR [rax-0x80000000],al
   14003c41d:	add    BYTE PTR [rax],al
   14003c41f:	add    DWORD PTR [rax-0x7fff0000],eax
   14003c425:	add    BYTE PTR [rax],al
   14003c427:	add    DWORD PTR [rax-0x7fff0000],eax
   14003c42d:	add    BYTE PTR [rax],al
   14003c42f:	add    DWORD PTR [rax-0x7fff0000],eax
   14003c435:	add    BYTE PTR [rax],al
   14003c437:	add    DWORD PTR [rax-0x7fff0000],eax
   14003c43d:	add    BYTE PTR [rax],al
   14003c43f:	add    DWORD PTR [rax-0x7fff0000],eax
   14003c445:	add    BYTE PTR [rax],al
   14003c447:	add    eax,eax
   14003c449:	add    BYTE PTR [rax],al
   14003c44b:	add    eax,eax
   14003c44d:	add    BYTE PTR [rax],al
   14003c44f:	add    eax,esp
   14003c451:	add    BYTE PTR [rax],al
   14003c453:	add    eax,esi
   14003c455:	add    BYTE PTR [rax],al
   14003c457:	add    eax,edi
   14003c459:	add    BYTE PTR [rax],al
   14003c45b:	add    edi,esp
   14003c45d:	add    BYTE PTR [rax],al
   14003c45f:	(bad)  
   14003c460:	(bad)  
   14003c461:	(bad)  
   14003c462:	(bad)  
   14003c463:	(bad)  
   14003c464:	(bad)  
   14003c465:	(bad)  
   14003c466:	(bad)  
   14003c467:	(bad)  
   14003c468:	(bad)  
   14003c469:	(bad)  
   14003c46a:	(bad)  
   14003c46b:	(bad)  
   14003c46c:	(bad)  
   14003c46d:	(bad)  
   14003c46e:	(bad)  
   14003c46f:	(bad)  
   14003c470:	(bad)  
   14003c471:	(bad)  
   14003c472:	(bad)  
   14003c473:	jmp    FWORD PTR [rax]
   14003c475:	add    BYTE PTR [rax],al
   14003c477:	add    BYTE PTR [rax],bl
   14003c479:	add    BYTE PTR [rax],al
   14003c47b:	add    BYTE PTR [rax],dh
   14003c47d:	add    BYTE PTR [rax],al
   14003c47f:	add    BYTE PTR [rcx],al
   14003c481:	add    BYTE PTR [rax],ah
   14003c483:	add    BYTE PTR [rax],al
   14003c485:	add    BYTE PTR [rax],al
   14003c487:	add    BYTE PTR [rax],al
   14003c489:	or     DWORD PTR [rax],eax
   14003c48b:	add    bh,dl
   14003c48d:	or     eax,0xdd70000
	...
   14003c4e2:	add    BYTE PTR [rax],al
   14003c4e4:	stc    
   14003c4e5:	idiv   cl
   14003c4e7:	push   rbp
   14003c4e8:	in     eax,0xd8
   14003c4ea:	(bad)  [rdi+0x7ffffff]
	...
   14003c528:	repnz in al,dx
   14003c52a:	in     al,dx
   14003c52b:	push   rcx
   14003c52c:	in     al,dx
   14003c52d:	in     al,0xe4
   14003c52f:	(bad)  
   14003c530:	in     al,dx
   14003c531:	in     al,0xe4
   14003c533:	(bad)  
   14003c534:	in     al,dx
   14003c535:	in     al,0xe4
   14003c537:	(bad)  
   14003c538:	in     al,dx
   14003c539:	in     al,0xe4
   14003c53b:	(bad)  
   14003c53c:	in     al,dx
   14003c53d:	in     al,0xe4
   14003c53f:	(bad)  
   14003c540:	in     al,dx
   14003c541:	in     al,0xe4
   14003c543:	(bad)  
   14003c544:	repz out dx,al
   14003c546:	out    dx,al
   14003c547:	xchg   esi,eax
   14003c548:	sahf   
   14003c549:	ins    DWORD PTR es:[rdi],dx
   14003c54a:	je     0x14003c54a
   14003c54c:	fadd   st,st(5)
   14003c54e:	(bad)  
   14003c54f:	leave  
   14003c550:	div    dh
   14003c552:	neg    BYTE PTR [rbx]
	...
   14003c588:	(bad)  
   14003c589:	rol    bl,0xd6
   14003c58c:	jbe    0x14003c5c0
   14003c58e:	cmp    al,0xff
   14003c590:	jbe    0x14003c5c4
   14003c592:	cmp    al,0xff
   14003c594:	jbe    0x14003c5c8
   14003c596:	cmp    al,0xff
   14003c598:	jbe    0x14003c5cc
   14003c59a:	cmp    al,0xff
   14003c59c:	jbe    0x14003c5d0
   14003c59e:	cmp    al,0xff
   14003c5a0:	jbe    0x14003c5d4
   14003c5a2:	cmp    al,0xff
   14003c5a4:	jbe    0x14003c5d8
   14003c5a6:	cmp    al,0xff
   14003c5a8:	sbb    ah,BYTE PTR [esi]
   14003c5ab:	jmp    QWORD PTR [rdi+0x1b]
   14003c5ae:	(bad)  
   14003c5af:	inc    ebp
   14003c5b1:	stos   BYTE PTR es:[rdi],al
   14003c5b2:	lods   eax,DWORD PTR ds:[rsi]
   14003c5b3:	fucom  st(5)
   14003c5b5:	fcmovu st,st(6)
   14003c5b7:	add    BYTE PTR [r8],r8b
	...
   14003c5e2:	add    BYTE PTR [rax],al
   14003c5e4:	lock div eax
   14003c5e7:	and    edx,edx
   14003c5e9:	mov    ebp,0x1261ecbf
   14003c5ee:	(bad)  
   14003c5ef:	jmp    QWORD PTR [rcx+0x12]
   14003c5f2:	(bad)  
   14003c5f3:	jmp    QWORD PTR [rcx+0x12]
   14003c5f6:	(bad)  
   14003c5f7:	jmp    QWORD PTR [rcx+0x12]
   14003c5fa:	(bad)  
   14003c5fb:	jmp    QWORD PTR [rcx+0x12]
   14003c5fe:	(bad)  
   14003c5ff:	jmp    QWORD PTR [rcx+0x12]
   14003c602:	(bad)  
   14003c603:	jmp    QWORD PTR [rcx+0x12]
   14003c606:	(bad)  
   14003c607:	jmp    QWORD PTR [rcx+0x12]
   14003c60a:	(bad)  
   14003c60b:	jmp    QWORD PTR [rcx+0x12]
   14003c60e:	(bad)  
   14003c60f:	jmp    QWORD PTR [rcx+0x12]
   14003c612:	(bad)  
   14003c613:	call   rbp
   14003c615:	mov    edi,0xffffe6c3
   14003c61a:	jmp    FWORD PTR [rcx]
	...
   14003c640:	loopne 0x14003c62c
   14003c642:	fisttp QWORD PTR [rdx-0x4f]
   14003c645:	ret    
   14003c646:	movabs ds:0x2d226cf5c2c2d2da,eax
   14003c64f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c653:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c657:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c65b:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c65f:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c663:	jmp    FWORD PTR [rdx+riz*1+0x2d]
   14003c667:	jmp    QWORD PTR [rbx+0x16]
   14003c66a:	and    bh,bh
   14003c66c:	movsxd edx,DWORD PTR [rip+0xffffffff97baff21]        # 0xd7bec593
   14003c672:	pushf  
   14003c673:	loope  0x14003c65a
   14003c675:	(bad)  
   14003c676:	fsub   DWORD PTR [rdx+0x0]
	...
   14003c685:	add    BYTE PTR [rax],al
   14003c687:	add    BYTE PTR [rdx-0x33],dl
   14003c68a:	call   QWORD PTR [r10-0x33]
   14003c68e:	call   QWORD PTR [r10-0x33]
   14003c692:	call   QWORD PTR [r10-0x33]
   14003c696:	call   QWORD PTR [r10-0x33]
   14003c69a:	call   QWORD PTR [r13-0x7b007528]
   14003c6a1:	stos   BYTE PTR es:[rdi],al
   14003c6a2:	jo     0x14003c6a3
   14003c6a4:	sub    DWORD PTR [rsi+0x5],ebx
   14003c6a7:	jmp    QWORD PTR [rbp-0x4f006b4b]
   14003c6ad:	mov    ebx,0xbbb0ffa0
   14003c6b2:	movabs al,ds:0xa0bbb0ffa0bbb0ff
   14003c6bb:	push   QWORD PTR [rax-0x4f005f45]
   14003c6c1:	mov    ebx,0xd8d8ffa0
   14003c6c6:	(bad)  
   14003c6c7:	sti    
   14003c6c8:	xchg   ebp,eax
   14003c6c9:	(bad)  
   14003c6ca:	push   0xffffffffbcb9d0ff
   14003c6cf:	(bad)  
   14003c6d0:	out    dx,eax
   14003c6d1:	in     al,0xea
   14003c6d3:	xor    BYTE PTR [rax],al
	...
   14003c6e5:	add    BYTE PTR [rax],al
   14003c6e7:	add    BYTE PTR [rdx-0x33],dl
   14003c6ea:	call   QWORD PTR [r10-0x33]
   14003c6ee:	call   QWORD PTR [r10-0x33]
   14003c6f2:	call   QWORD PTR [r11-0x33]
   14003c6f6:	rex.X push QWORD PTR [rax+0x5fffa7dd]
   14003c6fd:	mov    al,BYTE PTR [rsi-0x1]
   14003c700:	sub    DWORD PTR [rsi+0x5],ebx
   14003c703:	jmp    FWORD PTR [rcx]
   14003c705:	pop    rsi
   14003c706:	add    eax,0x55e29ff
   14003c70b:	jmp    FWORD PTR [rcx]
   14003c70d:	pop    rsi
   14003c70e:	add    eax,0x55e29ff
   14003c713:	jmp    FWORD PTR [rcx]
   14003c715:	pop    rsi
   14003c716:	add    eax,0x55e29ff
   14003c71b:	jmp    FWORD PTR [rcx]
   14003c71d:	pop    rsi
   14003c71e:	add    eax,0x55e29ff
   14003c723:	call   FWORD PTR [rbp-0x2400734c]
   14003c729:	fcmovbe st,st(2)
   14003c72b:	in     al,dx
   14003c72c:	(bad)  
   14003c72d:	(bad)  
   14003c72e:	call   QWORD PTR [rax]
	...
   14003c748:	push   rdx
   14003c749:	int    0x41
   14003c74b:	call   QWORD PTR [rdx-0x33]
   14003c74e:	call   QWORD PTR [r10-0x33]
   14003c752:	call   QWORD PTR [r10-0x33]
   14003c756:	inc    DWORD PTR [r8-0x5e008d2a]
   14003c75d:	ret    0xff92
   14003c760:	cs (bad) 
   14003c762:	or     edi,edi
   14003c764:	sub    DWORD PTR [rsi+0x5],ebx
   14003c767:	jmp    FWORD PTR [rcx]
   14003c769:	pop    rsi
   14003c76a:	add    eax,0x55e29ff
   14003c76f:	jmp    FWORD PTR [rcx]
   14003c771:	pop    rsi
   14003c772:	add    eax,0x55e29ff
   14003c777:	jmp    FWORD PTR [rcx]
   14003c779:	pop    rsi
   14003c77a:	add    eax,0x55e29ff
   14003c77f:	jmp    FWORD PTR [rcx]
   14003c781:	pop    rsi
   14003c782:	add    eax,0x659d7bff
   14003c787:	inc    DWORD PTR [rax+0x52ff73da]
   14003c78d:	int    0x40
   14003c78f:	jg     0x14003c791
	...
   14003c7a5:	add    BYTE PTR [rax],al
   14003c7a7:	add    BYTE PTR [rdx-0x33],dl
   14003c7aa:	call   QWORD PTR [r10-0x33]
   14003c7ae:	call   QWORD PTR [r10-0x33]
   14003c7b2:	call   QWORD PTR [r10-0x33]
   14003c7b6:	jmp    FWORD PTR [r13-0x2b]
   14003c7ba:	pop    rdi
   14003c7bb:	(bad)  
   14003c7bc:	fpatan 
   14003c7be:	(bad)  
   14003c7bf:	dec    esi
   14003c7c1:	fcmovnb st,st(6)
   14003c7c3:	(bad)  
   14003c7c4:	cmp    eax,0xc4ff1d6d
   14003c7c9:	sar    DWORD PTR [rdx-0x6c345e01],cl
   14003c7cf:	call   FWORD PTR [rcx-0x66007437]
   14003c7d5:	leave  
   14003c7d6:	mov    edi,edi
   14003c7d8:	mov    cl,0xd0
   14003c7da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003c7db:	inc    edi
   14003c7dd:	(bad)  
   14003c7de:	mov    esi,0xbfd6c8ff
   14003c7e3:	jmp    QWORD PTR [rbp+0x70ff99d0]
   14003c7e9:	(bad)  
   14003c7ea:	(bad)  
   14003c7eb:	call   QWORD PTR [rdx-0x33]
   14003c7ee:	inc    DWORD PTR [r8]
	...
   14003c805:	add    BYTE PTR [rax],al
   14003c807:	add    BYTE PTR [rdx-0x33],dl
   14003c80a:	call   QWORD PTR [r10-0x33]
   14003c80e:	call   QWORD PTR [r10-0x33]
   14003c812:	call   QWORD PTR [r10-0x33]
   14003c816:	dec    r14d
   14003c819:	icebp  
   14003c81a:	leave  
   14003c81b:	call   rsi
   14003c81d:	repz sar bh,cl
   14003c820:	je     0x14003c7f9
   14003c822:	push   QWORD PTR [ebp-0x26005425]
   14003c829:	out    0xd3,eax
   14003c82b:	call   rsp
   14003c82d:	repz sar bh,1
   14003c830:	push   rdx
   14003c831:	int    0x41
   14003c833:	call   QWORD PTR [rdx-0x33]
   14003c836:	rex.B (bad) 
   14003c838:	out    dx,al
   14003c839:	cli    
   14003c83a:	in     al,dx
   14003c83b:	jmp    FWORD PTR [rbp-0x2b]
   14003c83e:	pop    rdi
   14003c83f:	call   QWORD PTR [rdx-0x33]
   14003c842:	call   QWORD PTR [r10-0x33]
   14003c846:	call   QWORD PTR [r10-0x33]
   14003c84a:	call   QWORD PTR [r10-0x33]
   14003c84e:	inc    DWORD PTR [r8]
	...
   14003c865:	add    BYTE PTR [rax],al
   14003c867:	add    BYTE PTR [rdx-0x33],dl
   14003c86a:	call   QWORD PTR [r10-0x33]
   14003c86e:	call   QWORD PTR [r10-0x33]
   14003c872:	call   QWORD PTR [r15-0x31]
   14003c876:	rex.RXB (bad) 
   14003c878:	(bad)  
   14003c879:	(bad)  
   14003c87a:	(bad)  
   14003c87b:	inc    DWORD PTR [rsi+0x52ff7adc]
   14003c881:	int    0x41
   14003c883:	call   QWORD PTR [rbx-0x33]
   14003c886:	rex.X jmp QWORD PTR [rcx-0x100661d]
   14003c88d:	(bad)  
   14003c88e:	(bad)  
   14003c88f:	call   FWORD PTR [rbx-0x30]
   14003c892:	rex.WXB call QWORD PTR [r11-0x33]
   14003c896:	rex.X (bad) 
   14003c898:	std    
   14003c899:	(bad)  
   14003c89a:	std    
   14003c89b:	call   FWORD PTR [rax-0x31]
   14003c89e:	rex.W call QWORD PTR [rdx-0x33]
   14003c8a2:	call   QWORD PTR [r10-0x33]
   14003c8a6:	call   QWORD PTR [r10-0x33]
   14003c8aa:	call   QWORD PTR [r10-0x33]
   14003c8ae:	inc    DWORD PTR [r8]
	...
   14003c8c5:	add    BYTE PTR [rax],al
   14003c8c7:	add    BYTE PTR [rdx-0x33],dl
   14003c8ca:	call   QWORD PTR [r10-0x33]
   14003c8ce:	call   QWORD PTR [r10-0x33]
   14003c8d2:	jmp    QWORD PTR [r15-0x2d]
   14003c8d6:	pop    rax
   14003c8d7:	(bad)  
   14003c8d8:	(bad)  
   14003c8d9:	(bad)  
   14003c8da:	(bad)  
   14003c8db:	push   QWORD PTR [rcx-0x2a]
   14003c8de:	movsxd edi,edi
   14003c8e0:	push   rdx
   14003c8e1:	int    0x41
   14003c8e3:	call   QWORD PTR [rdx-0x33]
   14003c8e6:	jmp    FWORD PTR [r14-0x2b]
   14003c8ea:	(bad)  
   14003c8eb:	(bad)  
   14003c8ec:	(bad)  
   14003c8ed:	(bad)  
   14003c8ee:	(bad)  
   14003c8ef:	jmp    FWORD PTR [rbx-0x2c]
   14003c8f2:	pop    rbp
   14003c8f3:	call   QWORD PTR [rbx-0x33]
   14003c8f6:	rex.X (bad) 
   14003c8f8:	(bad)  
   14003c8f9:	(bad)  
   14003c8fa:	(bad)  
   14003c8fb:	call   QWORD PTR [rdx-0x33]
   14003c8fe:	call   QWORD PTR [r10-0x33]
   14003c902:	call   QWORD PTR [r10-0x33]
   14003c906:	call   QWORD PTR [r10-0x33]
   14003c90a:	call   QWORD PTR [r10-0x33]
   14003c90e:	inc    DWORD PTR [r8]
	...
   14003c925:	add    BYTE PTR [rax],al
   14003c927:	add    BYTE PTR [rdx-0x33],dl
   14003c92a:	call   QWORD PTR [r10-0x33]
   14003c92e:	call   QWORD PTR [r10-0x33]
   14003c932:	jmp    QWORD PTR [r14-0x2d]
   14003c936:	push   rdi
   14003c937:	(bad)  
   14003c938:	(bad)  
   14003c939:	(bad)  
   14003c93a:	(bad)  
   14003c93b:	push   QWORD PTR [rcx-0x2a]
   14003c93e:	movsxd edi,edi
   14003c940:	push   rdx
   14003c941:	int    0x41
   14003c943:	call   QWORD PTR [rdx-0x33]
   14003c946:	jmp    FWORD PTR [r14-0x2b]
   14003c94a:	(bad)  
   14003c94b:	(bad)  
   14003c94c:	(bad)  
   14003c94d:	(bad)  
   14003c94e:	(bad)  
   14003c94f:	jmp    QWORD PTR [rdi-0x2d]
   14003c952:	pop    rax
   14003c953:	call   QWORD PTR [rdx-0x33]
   14003c956:	rex.B (bad) 
   14003c958:	(bad)  
   14003c959:	(bad)  
   14003c95a:	(bad)  
   14003c95b:	call   QWORD PTR [rdx-0x33]
   14003c95e:	call   QWORD PTR [r10-0x33]
   14003c962:	call   QWORD PTR [r10-0x33]
   14003c966:	call   QWORD PTR [r10-0x33]
   14003c96a:	call   QWORD PTR [r10-0x33]
   14003c96e:	inc    DWORD PTR [r8]
	...
   14003c985:	add    BYTE PTR [rax],al
   14003c987:	add    BYTE PTR [rdx-0x33],dl
   14003c98a:	call   QWORD PTR [r10-0x33]
   14003c98e:	call   QWORD PTR [r10-0x33]
   14003c992:	call   QWORD PTR [r14-0x32]
   14003c996:	rex.RB (bad) 
   14003c998:	std    
   14003c999:	(bad)  
   14003c99a:	std    
   14003c99b:	dec    DWORD PTR [rax+0x52ff7ddd]
   14003c9a1:	int    0x41
   14003c9a3:	call   QWORD PTR [rdx-0x33]
   14003c9a6:	inc    DWORD PTR [r14-0x1008524]
   14003c9ad:	(bad)  
   14003c9ae:	(bad)  
   14003c9af:	call   QWORD PTR [rdi-0x32]
   14003c9b2:	rex.RX (bad) 
   14003c9b4:	(bad)  
   14003c9b5:	(bad)  
   14003c9b6:	(bad)  
   14003c9b7:	(bad)  
   14003c9b8:	(bad)  
   14003c9b9:	(bad)  
   14003c9ba:	(bad)  
   14003c9bb:	(bad)  
   14003c9bc:	(bad)  
   14003c9bd:	(bad)  
   14003c9be:	(bad)  
   14003c9bf:	(bad)  
   14003c9c0:	(bad)  
   14003c9c1:	(bad)  
   14003c9c2:	(bad)  
   14003c9c3:	call   QWORD PTR [rdx-0x33]
   14003c9c6:	call   QWORD PTR [r10-0x33]
   14003c9ca:	call   QWORD PTR [r10-0x33]
   14003c9ce:	inc    DWORD PTR [r8]
	...
   14003c9e5:	add    BYTE PTR [rax],al
   14003c9e7:	add    BYTE PTR [rdx-0x33],dl
   14003c9ea:	call   QWORD PTR [r10-0x33]
   14003c9ee:	call   QWORD PTR [r10-0x33]
   14003c9f2:	call   QWORD PTR [r10-0x33]
   14003c9f6:	dec    r10d
   14003c9f9:	lock (bad) 
   14003c9fd:	hlt    
   14003c9fe:	(bad)  
   14003c9ff:	jmp    FWORD PTR [rbx-0x2c]
   14003ca02:	pop    rbp
   14003ca03:	jmp    FWORD PTR [rdx-0x2c]
   14003ca06:	pop    rbx
   14003ca07:	call   rsi
   14003ca09:	repz sar bh,cl
   14003ca0c:	int3   
   14003ca0d:	lock (bad) 
   14003ca0f:	call   QWORD PTR [rdx-0x33]
   14003ca12:	call   QWORD PTR [r10-0x33]
   14003ca16:	rex.B (bad) 
   14003ca18:	(bad)  
   14003ca19:	(bad)  
   14003ca1a:	(bad)  
   14003ca1b:	call   QWORD PTR [rdx-0x33]
   14003ca1e:	call   QWORD PTR [r10-0x33]
   14003ca22:	call   QWORD PTR [r10-0x33]
   14003ca26:	call   QWORD PTR [r10-0x33]
   14003ca2a:	call   QWORD PTR [r10-0x33]
   14003ca2e:	inc    DWORD PTR [r8]
	...
   14003ca45:	add    BYTE PTR [rax],al
   14003ca47:	add    BYTE PTR [rdx-0x33],dl
   14003ca4a:	call   QWORD PTR [r10-0x33]
   14003ca4e:	call   QWORD PTR [r10-0x33]
   14003ca52:	call   QWORD PTR [r10-0x33]
   14003ca56:	jmp    FWORD PTR [r11-0x2c]
   14003ca5a:	pop    rbp
   14003ca5b:	(bad)  
   14003ca5c:	fdiv   st,st(4)
   14003ca5e:	(bad)  
   14003ca5f:	(bad)  
   14003ca60:	sti    
   14003ca61:	(bad)  
   14003ca62:	sti    
   14003ca63:	(bad)  
   14003ca64:	cld    
   14003ca65:	(bad)  
   14003ca66:	sti    
   14003ca67:	(bad)  
   14003ca68:	(bad)  
   14003ca6a:	(bad)  
   14003ca6b:	jmp    FWORD PTR [rsp+rdx*8+0x5d]
   14003ca6f:	call   QWORD PTR [rdx-0x33]
   14003ca72:	call   QWORD PTR [r10-0x33]
   14003ca76:	rex.B (bad) 
   14003ca78:	(bad)  
   14003ca79:	(bad)  
   14003ca7a:	(bad)  
   14003ca7b:	call   QWORD PTR [rdx-0x33]
   14003ca7e:	call   QWORD PTR [r10-0x33]
   14003ca82:	call   QWORD PTR [r10-0x33]
   14003ca86:	call   QWORD PTR [r10-0x33]
   14003ca8a:	call   QWORD PTR [r10-0x33]
   14003ca8e:	inc    DWORD PTR [r8]
	...
   14003caa5:	add    BYTE PTR [rax],al
   14003caa7:	add    BYTE PTR [rdx-0x33],dl
   14003caaa:	rex.X adc BYTE PTR [rdx-0x33],0x41
   14003caaf:	call   QWORD PTR [rdx-0x33]
   14003cab2:	call   QWORD PTR [r10-0x33]
   14003cab6:	call   QWORD PTR [r10-0x33]
   14003caba:	call   QWORD PTR [r10-0x33]
   14003cabe:	call   QWORD PTR [r13-0x32]
   14003cac2:	rex.RB call QWORD PTR [r13-0x32]
   14003cac6:	rex.RB call QWORD PTR [r10-0x33]
   14003caca:	call   QWORD PTR [r10-0x33]
   14003cace:	call   QWORD PTR [r10-0x33]
   14003cad2:	call   QWORD PTR [r10-0x33]
   14003cad6:	call   QWORD PTR [r10-0x33]
   14003cada:	call   QWORD PTR [r10-0x33]
   14003cade:	call   QWORD PTR [r10-0x33]
   14003cae2:	call   QWORD PTR [r10-0x33]
   14003cae6:	call   QWORD PTR [r10-0x33]
   14003caea:	call   QWORD PTR [r10-0x33]
   14003caee:	inc    DWORD PTR [r8]
	...
   14003cb09:	add    BYTE PTR [rax],al
   14003cb0b:	add    BYTE PTR [rdx-0x33],dl
   14003cb0e:	rex.X adc BYTE PTR [rdx-0x33],0x41
   14003cb13:	call   QWORD PTR [rdx-0x33]
   14003cb16:	call   QWORD PTR [r10-0x33]
   14003cb1a:	call   QWORD PTR [r10-0x33]
   14003cb1e:	call   QWORD PTR [r10-0x33]
   14003cb22:	call   QWORD PTR [r10-0x33]
   14003cb26:	call   QWORD PTR [r10-0x33]
   14003cb2a:	call   QWORD PTR [r10-0x33]
   14003cb2e:	call   QWORD PTR [r10-0x33]
   14003cb32:	call   QWORD PTR [r10-0x33]
   14003cb36:	call   QWORD PTR [r10-0x33]
   14003cb3a:	call   QWORD PTR [r10-0x33]
   14003cb3e:	call   QWORD PTR [r10-0x33]
   14003cb42:	call   QWORD PTR [r10-0x33]
   14003cb46:	call   QWORD PTR [r10-0x33]
   14003cb4a:	call   QWORD PTR [r10-0x33]
   14003cb4e:	inc    DWORD PTR [r8]
	...
   14003cb6d:	add    BYTE PTR [rax],al
   14003cb6f:	add    BYTE PTR [rdx-0x33],dl
   14003cb72:	rex.X adc BYTE PTR [rdx-0x33],0x41
   14003cb77:	call   QWORD PTR [rdx-0x33]
   14003cb7a:	call   QWORD PTR [r10-0x33]
   14003cb7e:	call   QWORD PTR [r10-0x33]
   14003cb82:	call   QWORD PTR [r10-0x33]
   14003cb86:	call   QWORD PTR [r10-0x33]
   14003cb8a:	call   QWORD PTR [r10-0x33]
   14003cb8e:	call   QWORD PTR [r10-0x33]
   14003cb92:	call   QWORD PTR [r10-0x33]
   14003cb96:	call   QWORD PTR [r10-0x33]
   14003cb9a:	call   QWORD PTR [r10-0x33]
   14003cb9e:	call   QWORD PTR [r10-0x33]
   14003cba2:	call   QWORD PTR [r10-0x33]
   14003cba6:	call   QWORD PTR [r10-0x33]
   14003cbaa:	call   QWORD PTR [r10-0x33]
   14003cbae:	inc    DWORD PTR [r8]
	...
   14003cd99:	add    BYTE PTR [rax],al
   14003cd9b:	add    bh,bh
   14003cd9d:	inc    edi
   14003cd9f:	add    bh,bh
   14003cda1:	loopne 0x14003cda6
   14003cda3:	add    bh,bh
   14003cda5:	loopne 0x14003cda8
   14003cda7:	add    bh,bh
   14003cda9:	rol    BYTE PTR [rax],0x0
   14003cdac:	inc    DWORD PTR [rax+0xe00001]
   14003cdb2:	add    eax,DWORD PTR [rax]
   14003cdb4:	loopne 0x14003cdb6
   14003cdb6:	(bad)  
   14003cdb7:	add    al,ah
   14003cdb9:	add    BYTE PTR [rdi],al
   14003cdbb:	add    al,ah
   14003cdbd:	add    BYTE PTR [rdi],al
   14003cdbf:	add    al,ah
   14003cdc1:	add    BYTE PTR [rdi],al
   14003cdc3:	add    al,ah
   14003cdc5:	add    BYTE PTR [rdi],al
   14003cdc7:	add    al,ah
   14003cdc9:	add    BYTE PTR [rdi],al
   14003cdcb:	add    al,ah
   14003cdcd:	add    BYTE PTR [rdi],al
   14003cdcf:	add    al,ah
   14003cdd1:	add    BYTE PTR [rdi],al
   14003cdd3:	add    al,ah
   14003cdd5:	add    BYTE PTR [rdi],al
   14003cdd7:	add    al,ah
   14003cdd9:	add    BYTE PTR [rdi],al
   14003cddb:	add    al,ah
   14003cddd:	add    BYTE PTR [rdi],al
   14003cddf:	add    al,dh
   14003cde1:	add    BYTE PTR [rdi],al
   14003cde3:	add    al,bh
   14003cde5:	add    BYTE PTR [rdi],al
   14003cde7:	add    bh,bh
   14003cde9:	(bad)  
   14003cdea:	inc    DWORD PTR [rax]
   14003cdec:	(bad)  
   14003cded:	(bad)  
   14003cdee:	inc    DWORD PTR [rax]
   14003cdf0:	(bad)  
   14003cdf1:	(bad)  
   14003cdf2:	inc    DWORD PTR [rax]
   14003cdf4:	(bad)  
   14003cdf5:	(bad)  
   14003cdf6:	inc    DWORD PTR [rax]
   14003cdf8:	(bad)  
   14003cdf9:	(bad)  
   14003cdfa:	inc    DWORD PTR [rax]
   14003cdfc:	sub    BYTE PTR [rax],al
   14003cdfe:	add    BYTE PTR [rax],al
   14003ce00:	adc    BYTE PTR [rax],al
   14003ce02:	add    BYTE PTR [rax],al
   14003ce04:	and    BYTE PTR [rax],al
   14003ce06:	add    BYTE PTR [rax],al
   14003ce08:	add    DWORD PTR [rax],eax
   14003ce0a:	and    BYTE PTR [rax],al
   14003ce0c:	add    BYTE PTR [rax],al
   14003ce0e:	add    BYTE PTR [rax],al
   14003ce10:	add    BYTE PTR [rax+rax*1],al
   14003ce13:	add    bh,dl
   14003ce15:	or     eax,0xdd70000
	...
   14003ce3e:	add    BYTE PTR [rax],al
   14003ce40:	(bad)  
   14003ce41:	(bad)  
   14003ce42:	push   QWORD PTR [rdi+rdi*8]
   14003ce45:	(bad)  
   14003ce46:	inc    DWORD PTR [rdi+rdi*8-0x1]
   14003ce4a:	inc    DWORD PTR [rdi+rdi*8-0x1]
   14003ce4e:	inc    DWORD PTR [rdi+rdi*8-0x1]
   14003ce52:	inc    DWORD PTR [rdi+rdi*8-0x1]
   14003ce56:	call   FWORD PTR [rbx-0x49]
   14003ce59:	xchg   esp,eax
   14003ce5a:	cdq    
   14003ce5b:	out    dx,al
   14003ce5c:	xlat   BYTE PTR ds:[rbx]
   14003ce5d:	(bad)  
   14003ce5e:	(bad)  
   14003ce5f:	mov    es,WORD PTR [rax]
	...
   14003ce7d:	add    BYTE PTR [rax],al
   14003ce7f:	add    al,cl
   14003ce81:	lods   eax,DWORD PTR ds:[rsi]
   14003ce82:	mov    cl,0xc4
   14003ce84:	add    DWORD PTR [rcx+0x4b],0x4b4181ff
   14003ce8b:	inc    DWORD PTR [rcx-0x7e00b4bf]
   14003ce91:	rex.B
   14003ce92:	rex.WXB inc QWORD PTR [r9+0x6bff4b41]
   14003ce99:	and    DWORD PTR [rdi+rdi*8],ebp
   14003ce9c:	xchg   DWORD PTR [rbp+rdx*2-0xd],ecx
   14003cea0:	fcmovnb st,st(7)
   14003cea2:	retf   
   14003cea3:	jg     0x14003cea5
	...
   14003ceb9:	add    BYTE PTR [rax],al
   14003cebb:	add    bh,bh
   14003cebd:	(bad)  
   14003cebe:	inc    DWORD PTR [rdi]
   14003cec0:	(bad)
   14003cec3:	(bad)  [rcx+0x12]
   14003cec6:	(bad)  
   14003cec7:	jmp    QWORD PTR [rcx+0x12]
   14003ceca:	(bad)  
   14003cecb:	jmp    QWORD PTR [rcx+0x12]
   14003cece:	(bad)  
   14003cecf:	jmp    QWORD PTR [rcx+0x12]
   14003ced2:	(bad)  
   14003ced3:	jmp    QWORD PTR [rcx+0x12]
   14003ced6:	(bad)  
   14003ced7:	jmp    QWORD PTR [rcx+0x12]
   14003ceda:	(bad)  
   14003cedb:	jmp    QWORD PTR [rcx+0x12]
   14003cede:	(bad)  
   14003cedf:	jmp    QWORD PTR [rsi+0xec807a]
   14003cee5:	add    BYTE PTR [rax],al
   14003cee7:	add    BYTE PTR [rdx-0x33],dl
   14003ceea:	call   QWORD PTR [r10-0x33]
   14003ceee:	call   QWORD PTR [r10-0x33]
   14003cef2:	call   QWORD PTR [r10-0x33]
   14003cef6:	call   QWORD PTR [r13-0x32]
   14003cefa:	rex.R jmp QWORD PTR [rbp-0x4800652d]
   14003cf01:	stos   DWORD PTR es:[rdi],eax
   14003cf02:	movabs al,ds:0x1e1261ff1e1261ff
   14003cf0b:	jmp    QWORD PTR [rcx+0x12]
   14003cf0e:	(bad)  
   14003cf0f:	jmp    QWORD PTR [rcx+0x12]
   14003cf12:	(bad)  
   14003cf13:	jmp    QWORD PTR [rcx+0x12]
   14003cf16:	(bad)  
   14003cf17:	jmp    QWORD PTR [rcx+0x12]
   14003cf1a:	(bad)  
   14003cf1b:	push   QWORD PTR [rsi+0x32]
   14003cf1e:	cmp    al,0xfc
   14003cf20:	xlat   BYTE PTR ds:[rbx]
   14003cf21:	rol    esp,0xa5
   14003cf24:	add    BYTE PTR [rax],al
   14003cf26:	add    BYTE PTR [rax],al
   14003cf28:	push   rdx
   14003cf29:	int    0x41
   14003cf2b:	call   QWORD PTR [rdx-0x33]
   14003cf2e:	call   QWORD PTR [r10-0x33]
   14003cf32:	call   QWORD PTR [r11-0x33]
   14003cf36:	rex.X jmp QWORD PTR [rcx+0x41ff96d3]
   14003cf3d:	jno    0x14003cf5f
   14003cf3f:	jmp    FWORD PTR [rdx-0x40006648]
   14003cf45:	(bad)  
   14003cf46:	mov    cl,0xff
   14003cf48:	mov    edi,0xbfffb1c6
   14003cf4d:	(bad)  
   14003cf4e:	mov    cl,0xff
   14003cf50:	mov    edi,0xcbffb1c6
   14003cf55:	sar    BYTE PTR [rdi-0x7e825a01],1
   14003cf5b:	dec    ch
   14003cf5d:	sar    DWORD PTR [rax+rdi*4+0x2ffffff],0x0
   14003cf65:	add    BYTE PTR [rax],al
   14003cf67:	add    BYTE PTR [rdx-0x33],dl
   14003cf6a:	call   QWORD PTR [r10-0x33]
   14003cf6e:	call   QWORD PTR [r10-0x33]
   14003cf72:	jmp    FWORD PTR [r13+0x49ffa3da]
   14003cf79:	ja     0x14003cfa6
   14003cf7b:	jmp    FWORD PTR [rcx]
   14003cf7d:	pop    rsi
   14003cf7e:	add    eax,0x55e29ff
   14003cf83:	jmp    FWORD PTR [rcx]
   14003cf85:	pop    rsi
   14003cf86:	add    eax,0x55e29ff
   14003cf8b:	jmp    FWORD PTR [rcx]
   14003cf8d:	pop    rsi
   14003cf8e:	add    eax,0x55e29ff
   14003cf93:	call   FWORD PTR [rdx-0x7d]
   14003cf96:	notrack call rdx
   14003cf99:	fadd   st(7),st
   14003cf9b:	call   QWORD PTR [rsi-0x32]
   14003cf9e:	rex.RB fild WORD PTR [r8]
   14003cfa1:	add    BYTE PTR [rax],al
   14003cfa3:	add    BYTE PTR [rax],al
   14003cfa5:	add    BYTE PTR [rax],al
   14003cfa7:	add    BYTE PTR [rdx-0x33],dl
   14003cfaa:	call   QWORD PTR [r10-0x33]
   14003cfae:	call   QWORD PTR [r10-0x33]
   14003cfb2:	call   r15
   14003cfb5:	out    dx,al
   14003cfb6:	sar    edi,cl
   14003cfb8:	jl     0x14003cf5d
   14003cfba:	jmp    FWORD PTR [ecx]
   14003cfbd:	pop    rsi
   14003cfbe:	add    eax,0x55e29ff
   14003cfc3:	jmp    FWORD PTR [rcx]
   14003cfc5:	pop    rsi
   14003cfc6:	add    eax,0x55e29ff
   14003cfcb:	jmp    FWORD PTR [rcx]
   14003cfcd:	pop    rsi
   14003cfce:	add    eax,0x55e29ff
   14003cfd3:	dec    DWORD PTR [rdx+0x78]
   14003cfd6:	sub    al,0xff
   14003cfd8:	mov    dl,dh
   14003cfda:	jge    0x14003cfdb
   14003cfdc:	push   rdx
   14003cfdd:	int    0x41
   14003cfdf:	inc    DWORD PTR [rax]
   14003cfe1:	add    BYTE PTR [rax],al
   14003cfe3:	add    BYTE PTR [rax],al
   14003cfe5:	add    BYTE PTR [rax],al
   14003cfe7:	add    BYTE PTR [rdx-0x33],dl
   14003cfea:	call   QWORD PTR [r10-0x33]
   14003cfee:	call   QWORD PTR [r10-0x33]
   14003cff2:	rex.B (bad) 
   14003cff4:	fcomip st,st(6)
   14003cff6:	fdiv   st(7),st
   14003cff8:	test   bl,dl
   14003cffa:	ja     0x14003cffb
   14003cffc:	ins    BYTE PTR es:[rdi],dx
   14003cffd:	xchg   edi,eax
   14003cffe:	push   rbp
   14003cfff:	jmp    FWORD PTR [rbp-0x66005f3c]
   14003d005:	leave  
   14003d006:	mov    edi,edi
   14003d008:	cdq    
   14003d009:	leave  
   14003d00a:	mov    edi,edi
   14003d00c:	retf   0xc1d7
   14003d00f:	call   FWORD PTR [rcx-0x62007437]
   14003d015:	retf   
   14003d016:	nop
   14003d017:	push   QWORD PTR [rbp-0x2d]
   14003d01a:	call   QWORD PTR [edx-0x33]
   14003d01e:	inc    DWORD PTR [r8]
   14003d021:	add    BYTE PTR [rax],al
   14003d023:	add    BYTE PTR [rax],al
   14003d025:	add    BYTE PTR [rax],al
   14003d027:	add    BYTE PTR [rdx-0x33],dl
   14003d02a:	call   QWORD PTR [r10-0x33]
   14003d02e:	call   QWORD PTR [r10-0x33]
   14003d032:	jmp    r8
   14003d035:	neg    ch
   14003d037:	call   QWORD PTR [rdx-0x33]
   14003d03a:	dec    DWORD PTR [r10-0x2a00812c]
   14003d041:	in     al,0xcf
   14003d043:	call   QWORD PTR [rdx-0x33]
   14003d046:	call   QWORD PTR [r11-0x33]
   14003d04a:	rex.X (bad) 
   14003d04c:	(bad)  
   14003d04d:	(bad)  
   14003d04e:	(bad)  
   14003d04f:	call   QWORD PTR [rdx-0x33]
   14003d052:	call   QWORD PTR [r10-0x33]
   14003d056:	call   QWORD PTR [r10-0x33]
   14003d05a:	call   QWORD PTR [r10-0x33]
   14003d05e:	inc    DWORD PTR [r8]
   14003d061:	add    BYTE PTR [rax],al
   14003d063:	add    BYTE PTR [rax],al
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rdx-0x33],dl
   14003d06a:	call   QWORD PTR [r10-0x33]
   14003d06e:	call   QWORD PTR [r10-0x33]
   14003d072:	rex.B (bad) 
   14003d074:	fdivr  st(5),st
   14003d076:	fdivr  st,st(7)
   14003d078:	(bad)  
   14003d079:	rcl    DWORD PTR [rax-0x1],1
   14003d07c:	pop    rdi
   14003d07d:	ror    DWORD PTR [rdi-0x1],1
   14003d080:	loop   0x14003d079
   14003d082:	(bad)  
   14003d084:	push   rdx
   14003d085:	int    0x41
   14003d087:	(bad)  
   14003d088:	(bad)  
   14003d089:	(bad)  
   14003d08a:	(bad)  
   14003d08b:	(bad)  
   14003d08c:	(bad)  
   14003d08d:	(bad)  
   14003d08e:	(bad)  
   14003d08f:	(bad)  
   14003d090:	(bad)  
   14003d091:	(bad)  
   14003d092:	(bad)  
   14003d093:	push   QWORD PTR [rcx-0x2a]
   14003d096:	movsxd edi,edi
   14003d098:	push   rdx
   14003d099:	int    0x41
   14003d09b:	call   QWORD PTR [rdx-0x33]
   14003d09e:	inc    DWORD PTR [r8]
   14003d0a1:	add    BYTE PTR [rax],al
   14003d0a3:	add    BYTE PTR [rax],al
   14003d0a5:	add    BYTE PTR [rax],al
   14003d0a7:	add    BYTE PTR [rdx-0x33],dl
   14003d0aa:	fist   WORD PTR [r10-0x33]
   14003d0ae:	call   QWORD PTR [r10-0x33]
   14003d0b2:	inc    DWORD PTR [r15-0x1c008424]
   14003d0b9:	mul    eax
   14003d0bb:	jmp    rdx
   14003d0bd:	neg    edi
   14003d0bf:	dec    DWORD PTR [rax+0x52ff7cdc]
   14003d0c5:	int    0x41
   14003d0c7:	call   QWORD PTR [rdx-0x33]
   14003d0ca:	rex.B (bad) 
   14003d0cc:	(bad)  
   14003d0cd:	(bad)  
   14003d0ce:	(bad)  
   14003d0cf:	call   QWORD PTR [rdx-0x33]
   14003d0d2:	call   QWORD PTR [r10-0x33]
   14003d0d6:	call   QWORD PTR [r10-0x33]
   14003d0da:	call   QWORD PTR [r10-0x33]
   14003d0de:	inc    DWORD PTR [r8]
   14003d0e1:	add    BYTE PTR [rax],al
   14003d0e3:	add    BYTE PTR [rax],al
   14003d0e5:	add    BYTE PTR [rax],al
   14003d0e7:	add    BYTE PTR [rbp-0x34],dl
   14003d0ea:	rex.R (bad) 
   14003d0ec:	push   rdx
   14003d0ed:	int    0x41
   14003d0ef:	fst    QWORD PTR [rdx-0x33]
   14003d0f2:	call   QWORD PTR [r10-0x33]
   14003d0f6:	call   QWORD PTR [r10-0x33]
   14003d0fa:	call   QWORD PTR [r10-0x33]
   14003d0fe:	call   QWORD PTR [r10-0x33]
   14003d102:	call   QWORD PTR [r10-0x33]
   14003d106:	call   QWORD PTR [r10-0x33]
   14003d10a:	call   QWORD PTR [r10-0x33]
   14003d10e:	call   QWORD PTR [r10-0x33]
   14003d112:	call   QWORD PTR [r10-0x33]
   14003d116:	call   QWORD PTR [r10-0x33]
   14003d11a:	call   QWORD PTR [r10-0x33]
   14003d11e:	inc    DWORD PTR [r8]
	...
   14003d129:	add    BYTE PTR [rax],al
   14003d12b:	add    BYTE PTR [rbp-0x34],dl
   14003d12e:	rex.R (bad) 
   14003d130:	push   rdx
   14003d131:	int    0x41
   14003d133:	fst    QWORD PTR [rdx-0x33]
   14003d136:	call   QWORD PTR [r10-0x33]
   14003d13a:	call   QWORD PTR [r10-0x33]
   14003d13e:	call   QWORD PTR [r10-0x33]
   14003d142:	call   QWORD PTR [r10-0x33]
   14003d146:	call   QWORD PTR [r10-0x33]
   14003d14a:	call   QWORD PTR [r10-0x33]
   14003d14e:	call   QWORD PTR [r10-0x33]
   14003d152:	call   QWORD PTR [r10-0x33]
   14003d156:	call   QWORD PTR [r10-0x33]
   14003d15a:	call   QWORD PTR [r10-0x33]
   14003d15e:	inc    DWORD PTR [r8]
	...
   14003d221:	add    BYTE PTR [rax],al
   14003d223:	add    dh,bh
   14003d225:	add    DWORD PTR [rax],eax
   14003d227:	add    dh,bh
   14003d229:	add    BYTE PTR [rax],al
   14003d22b:	add    ah,bh
   14003d22d:	add    BYTE PTR [rax],al
   14003d22f:	add    BYTE PTR [rax-0x80000000],al
   14003d235:	add    BYTE PTR [rax],al
   14003d237:	add    BYTE PTR [rax-0x7fffffff],al
   14003d23d:	add    DWORD PTR [rax],eax
   14003d23f:	add    BYTE PTR [rax-0x7fffffff],al
   14003d245:	add    DWORD PTR [rax],eax
   14003d247:	add    BYTE PTR [rax-0x7fffffff],al
   14003d24d:	add    DWORD PTR [rax],eax
   14003d24f:	add    BYTE PTR [rax-0x3fffffff],al
   14003d255:	add    DWORD PTR [rax],eax
   14003d257:	add    bh,bh
   14003d259:	inc    DWORD PTR [rax]
   14003d25b:	add    bh,bh
   14003d25d:	inc    DWORD PTR [rax]
   14003d25f:	add    bh,bh
   14003d261:	inc    DWORD PTR [rax]
   14003d263:	add    BYTE PTR [rax],al
   14003d265:	add    BYTE PTR [rcx],al
   14003d267:	add    BYTE PTR [rdi],al
   14003d269:	add    BYTE PTR [rax],al
   14003d26b:	add    BYTE PTR [rax],al
   14003d26d:	add    BYTE PTR [rcx],al
   14003d26f:	add    BYTE PTR [rax],ah
   14003d271:	add    BYTE PTR [rdi+0x1000021],dh
   14003d277:	add    BYTE PTR [rax+0x1000080],al
   14003d27d:	add    BYTE PTR [rax],ah
   14003d27f:	add    BYTE PTR [rax],ch
   14003d281:	or     BYTE PTR [rcx],al
   14003d283:	add    BYTE PTR [rdx],al
   14003d285:	add    BYTE PTR [rax+0x40],al
   14003d288:	add    BYTE PTR [rax],al
   14003d28a:	add    DWORD PTR [rax],eax
   14003d28c:	and    BYTE PTR [rax],al
   14003d28e:	sub    BYTE PTR [rdx+0x0],al
   14003d291:	add    BYTE PTR [rbx],al
   14003d293:	add    BYTE PTR [rax],dh
   14003d295:	xor    BYTE PTR [rax],al
   14003d297:	add    BYTE PTR [rcx],al
   14003d299:	add    BYTE PTR [rax],ah
   14003d29b:	add    BYTE PTR [rax+0x4000025],ch
   14003d2a1:	add    BYTE PTR [rax],ah
   14003d2a3:	and    BYTE PTR [rax],al
   14003d2a5:	add    BYTE PTR [rcx],al
   14003d2a7:	add    BYTE PTR [rax],ah
   14003d2a9:	add    BYTE PTR [rax+0x5000010],ch
   14003d2af:	add    BYTE PTR [rax],bl
   14003d2b1:	sbb    BYTE PTR [rax],al
   14003d2b3:	add    BYTE PTR [rcx],al
   14003d2b5:	add    BYTE PTR [rax],ah
   14003d2b7:	add    BYTE PTR [rax+0x6000009],cl
   14003d2bd:	add    BYTE PTR [rax],dl
   14003d2bf:	adc    BYTE PTR [rax],al
   14003d2c1:	add    BYTE PTR [rcx],al
   14003d2c3:	add    BYTE PTR [rax],ah
   14003d2c5:	add    BYTE PTR [rax+0x4],ch
   14003d2c8:	add    BYTE PTR [rax],al
   14003d2ca:	(bad)  
   14003d2cb:	add    BYTE PTR [rcx+riz*2],bh
   14003d2ce:	jae    0x14003d343
   14003d2d0:	gs ins DWORD PTR es:[rdi],dx
   14003d2d2:	(bad)  
   14003d2d3:	ins    BYTE PTR es:[rdi],dx
   14003d2d4:	jns    0x14003d2f6
   14003d2d6:	js     0x14003d345
   14003d2d8:	ins    BYTE PTR es:[rdi],dx
   14003d2d9:	outs   dx,BYTE PTR ds:[rsi]
   14003d2da:	jae    0x14003d319
   14003d2dc:	and    dh,BYTE PTR [rbp+0x72]
   14003d2df:	outs   dx,BYTE PTR ds:[rsi]
   14003d2e0:	cmp    dh,BYTE PTR [rbx+0x63]
   14003d2e3:	push   0x73616d65
   14003d2e8:	sub    eax,0x7263696d
   14003d2ed:	outs   dx,DWORD PTR ds:[rsi]
   14003d2ee:	jae    0x14003d35f
   14003d2f0:	data16 je 0x14003d320
   14003d2f3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003d2f6:	cmp    ah,BYTE PTR [rcx+0x73]
   14003d2f9:	ins    DWORD PTR es:[rdi],dx
   14003d2fa:	cs jbe 0x14003d32e
   14003d2fd:	and    ah,BYTE PTR [rax]
   14003d2ff:	ins    DWORD PTR es:[rdi],dx
   14003d300:	(bad)  
   14003d301:	outs   dx,BYTE PTR ds:[rsi]
   14003d302:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14003d309:	jb     0x14003d37e
   14003d30b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14003d312:	xor    BYTE PTR [rdx],ah
   14003d314:	ds or  eax,0x3c20200a
   14003d31a:	je     0x14003d38e
   14003d31c:	jne    0x14003d391
   14003d31e:	je     0x14003d369
   14003d320:	outs   dx,BYTE PTR ds:[rsi]
   14003d321:	outs   dx,WORD PTR ds:[rsi]
   14003d323:	and    BYTE PTR [rax+0x6d],bh
   14003d326:	ins    BYTE PTR es:[rdi],dx
   14003d327:	outs   dx,BYTE PTR ds:[rsi]
   14003d328:	jae    0x14003d367
   14003d32a:	and    dh,BYTE PTR [rbp+0x72]
   14003d32d:	outs   dx,BYTE PTR ds:[rsi]
   14003d32e:	cmp    dh,BYTE PTR [rbx+0x63]
   14003d331:	push   0x73616d65
   14003d336:	sub    eax,0x7263696d
   14003d33b:	outs   dx,DWORD PTR ds:[rsi]
   14003d33c:	jae    0x14003d3ad
   14003d33e:	data16 je 0x14003d36e
   14003d341:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003d344:	cmp    ah,BYTE PTR [rcx+0x73]
   14003d347:	ins    DWORD PTR es:[rdi],dx
   14003d348:	cs jbe 0x14003d37e
   14003d34b:	and    bh,BYTE PTR [rsi]
   14003d34d:	or     eax,0x2020200a
   14003d352:	and    BYTE PTR [rbx+rsi*2],bh
   14003d355:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14003d359:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14003d361:	and    BYTE PTR [rax],ah
   14003d363:	and    BYTE PTR [rax],ah
   14003d365:	cmp    al,0x72
   14003d367:	gs jno 0x14003d3df
   14003d36a:	gs jae 0x14003d3e1
   14003d36d:	gs fs push rax
   14003d370:	jb     0x14003d3db
   14003d372:	jbe    0x14003d3dd
   14003d374:	ins    BYTE PTR es:[rdi],dx
   14003d375:	gs addr32 gs jae 0x14003d3b8
   14003d37a:	or     eax,0x2020200a
   14003d37f:	and    BYTE PTR [rax],ah
   14003d381:	and    BYTE PTR [rax],ah
   14003d383:	and    BYTE PTR [rdx+rsi*2],bh
   14003d386:	gs jno 0x14003d3fe
   14003d389:	gs jae 0x14003d400
   14003d38c:	gs fs rex.RB js 0x14003d3f6
   14003d391:	movsxd esi,DWORD PTR [rbp+0x74]
   14003d394:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14003d39b:	ins    BYTE PTR es:[rdi],dx
   14003d39c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003d3a0:	gs ins BYTE PTR es:[rdi],dx
   14003d3a2:	cmp    eax,0x49736122
   14003d3a7:	outs   dx,BYTE PTR ds:[rsi]
   14003d3a8:	jbe    0x14003d419
   14003d3aa:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14003d3ae:	and    BYTE PTR [rbp+0x69],dh
   14003d3b1:	movsxd esp,DWORD PTR [r11+0x65]
   14003d3b5:	jae    0x14003d42a
   14003d3b7:	cmp    eax,0x6c616622
   14003d3bc:	jae    0x14003d423
   14003d3be:	and    bh,BYTE PTR [rsi]
   14003d3c0:	cmp    al,0x2f
   14003d3c2:	jb     0x14003d429
   14003d3c4:	jno    0x14003d43b
   14003d3c6:	gs jae 0x14003d43d
   14003d3c9:	gs fs rex.RB js 0x14003d433
   14003d3ce:	movsxd esi,DWORD PTR [rbp+0x74]
   14003d3d1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14003d3d8:	ins    BYTE PTR es:[rdi],dx
   14003d3d9:	ds or  eax,0x2020200a
   14003d3df:	and    BYTE PTR [rax],ah
   14003d3e1:	and    BYTE PTR [rdi+rbp*1],bh
   14003d3e4:	jb     0x14003d44b
   14003d3e6:	jno    0x14003d45d
   14003d3e8:	gs jae 0x14003d45f
   14003d3eb:	gs fs push rax
   14003d3ee:	jb     0x14003d459
   14003d3f0:	jbe    0x14003d45b
   14003d3f2:	ins    BYTE PTR es:[rdi],dx
   14003d3f3:	gs addr32 gs jae 0x14003d436
   14003d3f8:	or     eax,0x2020200a
   14003d3fd:	and    BYTE PTR [rdi+rbp*1],bh
   14003d400:	jae    0x14003d467
   14003d402:	movsxd esi,DWORD PTR [rbp+0x72]
   14003d405:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14003d40d:	cmp    al,0x2f
   14003d40f:	je     0x14003d483
   14003d411:	jne    0x14003d486
   14003d413:	je     0x14003d45e
   14003d415:	outs   dx,BYTE PTR ds:[rsi]
   14003d416:	outs   dx,WORD PTR ds:[rsi]
   14003d418:	ds or  eax,0x3c20200a
   14003d41e:	fs gs jo 0x14003d487
   14003d422:	outs   dx,BYTE PTR ds:[rsi]
   14003d423:	fs outs dx,BYTE PTR gs:[rsi]
   14003d426:	movsxd edi,DWORD PTR [rcx+0x3e]
   14003d429:	or     eax,0x2020200a
   14003d42e:	and    BYTE PTR [rsp+riz*2],bh
   14003d431:	gs jo  0x14003d499
   14003d434:	outs   dx,BYTE PTR ds:[rsi]
   14003d435:	fs outs dx,BYTE PTR gs:[rsi]
   14003d438:	je     0x14003d47b
   14003d43a:	jae    0x14003d4af
   14003d43c:	gs ins DWORD PTR es:[rdi],dx
   14003d43e:	(bad)  
   14003d43f:	ins    BYTE PTR es:[rdi],dx
   14003d440:	jns    0x14003d480
   14003d442:	or     eax,0x2020200a
   14003d447:	and    BYTE PTR [rax],ah
   14003d449:	and    BYTE PTR [rcx+riz*2],bh
   14003d44c:	jae    0x14003d4c1
   14003d44e:	gs ins DWORD PTR es:[rdi],dx
   14003d450:	(bad)  
   14003d451:	ins    BYTE PTR es:[rdi],dx
   14003d452:	jns    0x14003d49d
   14003d454:	fs outs dx,BYTE PTR gs:[rsi]
   14003d457:	je     0x14003d4c2
   14003d459:	je     0x14003d4d4
   14003d45b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14003d45f:	gs cmp eax,0x6e697722
   14003d465:	xor    esi,DWORD PTR [rdx]
   14003d467:	and    ah,BYTE PTR [rax]
   14003d469:	outs   dx,BYTE PTR ds:[rsi]
   14003d46a:	(bad)  
   14003d46b:	ins    DWORD PTR es:[rdi],dx
   14003d46c:	gs cmp eax,0x63694d22
   14003d472:	jb     0x14003d4e3
   14003d474:	jae    0x14003d4e5
   14003d476:	data16 je 0x14003d4a7
   14003d479:	push   rdi
   14003d47a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14003d481:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003d483:	ins    DWORD PTR es:[rdi],dx
   14003d484:	ins    DWORD PTR es:[rdi],dx
   14003d485:	outs   dx,DWORD PTR ds:[rsi]
   14003d486:	outs   dx,BYTE PTR ds:[rsi]
   14003d487:	sub    eax,0x746e6f43
   14003d48c:	jb     0x14003d4fd
   14003d48e:	ins    BYTE PTR es:[rdi],dx
   14003d48f:	jae    0x14003d4b3
   14003d491:	and    BYTE PTR [rsi+0x65],dh
   14003d494:	jb     0x14003d509
   14003d496:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14003d49d:	xor    BYTE PTR [rsi],ch
   14003d49f:	xor    BYTE PTR [rsi],ch
   14003d4a1:	xor    BYTE PTR [rdx],ah
   14003d4a3:	and    BYTE PTR [rax+0x75],dh
   14003d4a6:	(bad)  
   14003d4a7:	ins    BYTE PTR es:[rdi],dx
   14003d4a8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14003d4af:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14003d4b3:	and    dh,BYTE PTR [rsi]
   14003d4b5:	xor    eax,0x36623539
   14003d4ba:	xor    al,0x31
   14003d4bc:	xor    al,0x34
   14003d4be:	movsxd esp,DWORD PTR [rbx+0x66]
   14003d4c1:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14003d4c5:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14003d4c9:	addr32 jne 0x14003d52d
   14003d4cc:	addr32 gs cmp eax,0x20222a22
   14003d4d3:	jo     0x14003d547
   14003d4d5:	outs   dx,DWORD PTR ds:[rsi]
   14003d4d6:	movsxd esp,DWORD PTR [rbp+0x73]
   14003d4d9:	jae    0x14003d54a
   14003d4db:	jb     0x14003d51e
   14003d4dd:	jb     0x14003d542
   14003d4df:	push   0x63657469
   14003d4e4:	je     0x14003d55b
   14003d4e6:	jb     0x14003d54d
   14003d4e8:	cmp    eax,0x3e222a22
   14003d4ed:	cmp    al,0x2f
   14003d4ef:	(bad)  
   14003d4f0:	jae    0x14003d565
   14003d4f2:	gs ins DWORD PTR es:[rdi],dx
   14003d4f4:	(bad)  
   14003d4f5:	ins    BYTE PTR es:[rdi],dx
   14003d4f6:	jns    0x14003d541
   14003d4f8:	fs outs dx,BYTE PTR gs:[rsi]
   14003d4fb:	je     0x14003d566
   14003d4fd:	je     0x14003d578
   14003d4ff:	ds or  eax,0x2020200a
   14003d505:	and    BYTE PTR [rdi+rbp*1],bh
   14003d508:	fs gs jo 0x14003d571
   14003d50c:	outs   dx,BYTE PTR ds:[rsi]
   14003d50d:	fs outs dx,BYTE PTR gs:[rsi]
   14003d510:	je     0x14003d553
   14003d512:	jae    0x14003d587
   14003d514:	gs ins DWORD PTR es:[rdi],dx
   14003d516:	(bad)  
   14003d517:	ins    BYTE PTR es:[rdi],dx
   14003d518:	jns    0x14003d558
   14003d51a:	or     eax,0x3c20200a
   14003d51f:	(bad)  
   14003d520:	fs gs jo 0x14003d589
   14003d524:	outs   dx,BYTE PTR ds:[rsi]
   14003d525:	fs outs dx,BYTE PTR gs:[rsi]
   14003d528:	movsxd edi,DWORD PTR [rcx+0x3e]
   14003d52b:	or     eax,0x3c20200a
   14003d530:	fs gs jo 0x14003d599
   14003d534:	outs   dx,BYTE PTR ds:[rsi]
   14003d535:	fs outs dx,BYTE PTR gs:[rsi]
   14003d538:	movsxd edi,DWORD PTR [rcx+0x3e]
   14003d53b:	or     eax,0x2020200a
   14003d540:	and    BYTE PTR [rsp+riz*2],bh
   14003d543:	gs jo  0x14003d5ab
   14003d546:	outs   dx,BYTE PTR ds:[rsi]
   14003d547:	fs outs dx,BYTE PTR gs:[rsi]
   14003d54a:	je     0x14003d58d
   14003d54c:	jae    0x14003d5c1
   14003d54e:	gs ins DWORD PTR es:[rdi],dx
   14003d550:	(bad)  
   14003d551:	ins    BYTE PTR es:[rdi],dx
   14003d552:	jns    0x14003d592
   14003d554:	or     eax,0x2020200a
   14003d559:	and    BYTE PTR [rax],ah
   14003d55b:	and    BYTE PTR [rcx+riz*2],bh
   14003d55e:	jae    0x14003d5d3
   14003d560:	gs ins DWORD PTR es:[rdi],dx
   14003d562:	(bad)  
   14003d563:	ins    BYTE PTR es:[rdi],dx
   14003d564:	jns    0x14003d5af
   14003d566:	fs outs dx,BYTE PTR gs:[rsi]
   14003d569:	je     0x14003d5d4
   14003d56b:	je     0x14003d5e6
   14003d56d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14003d571:	gs cmp eax,0x6e697722
   14003d577:	xor    esi,DWORD PTR [rdx]
   14003d579:	and    ah,BYTE PTR [rax]
   14003d57b:	outs   dx,BYTE PTR ds:[rsi]
   14003d57c:	(bad)  
   14003d57d:	ins    DWORD PTR es:[rdi],dx
   14003d57e:	gs cmp eax,0x63694d22
   14003d584:	jb     0x14003d5f5
   14003d586:	jae    0x14003d5f7
   14003d588:	data16 je 0x14003d5b9
   14003d58b:	push   rsi
   14003d58c:	rex.XB cmp DWORD PTR [r8],esi
   14003d58f:	cs rex.XB push r10
   14003d592:	push   rsp
   14003d593:	and    ah,BYTE PTR [rax]
   14003d595:	jbe    0x14003d5fc
   14003d597:	jb     0x14003d60c
   14003d599:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14003d5a0:	xor    BYTE PTR [rsi],ch
   14003d5a2:	xor    dh,BYTE PTR [rcx]
   14003d5a4:	xor    BYTE PTR [rdx],dh
   14003d5a6:	xor    ch,BYTE PTR [rsi]
   14003d5a8:	cmp    BYTE PTR [rdx],ah
   14003d5aa:	and    BYTE PTR [rax+0x72],dh
   14003d5ad:	outs   dx,DWORD PTR ds:[rsi]
   14003d5ae:	movsxd esp,DWORD PTR [rbp+0x73]
   14003d5b1:	jae    0x14003d622
   14003d5b3:	jb     0x14003d5f6
   14003d5b5:	jb     0x14003d61a
   14003d5b7:	push   0x63657469
   14003d5bc:	je     0x14003d633
   14003d5be:	jb     0x14003d625
   14003d5c0:	cmp    eax,0x646d6122
   14003d5c5:	ss xor al,0x22
   14003d5c8:	and    BYTE PTR [rax+0x75],dh
   14003d5cb:	(bad)  
   14003d5cc:	ins    BYTE PTR es:[rdi],dx
   14003d5cd:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14003d5d4:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14003d5d8:	and    dh,BYTE PTR [rcx]
   14003d5da:	movsxd di,DWORD PTR [rax]
   14003d5dd:	(bad)  
   14003d5df:	(bad)  
   14003d5e0:	cmp    DWORD PTR [rcx+0x31],esp
   14003d5e3:	xor    DWORD PTR gs:[rax],edi
   14003d5e6:	xor    esp,DWORD PTR gs:[rdx+0x22]
   14003d5ea:	ds cmp al,0x2f
   14003d5ed:	(bad)  
   14003d5ee:	jae    0x14003d663
   14003d5f0:	gs ins DWORD PTR es:[rdi],dx
   14003d5f2:	(bad)  
   14003d5f3:	ins    BYTE PTR es:[rdi],dx
   14003d5f4:	jns    0x14003d63f
   14003d5f6:	fs outs dx,BYTE PTR gs:[rsi]
   14003d5f9:	je     0x14003d664
   14003d5fb:	je     0x14003d676
   14003d5fd:	ds or  eax,0x2020200a
   14003d603:	and    BYTE PTR [rdi+rbp*1],bh
   14003d606:	fs gs jo 0x14003d66f
   14003d60a:	outs   dx,BYTE PTR ds:[rsi]
   14003d60b:	fs outs dx,BYTE PTR gs:[rsi]
   14003d60e:	je     0x14003d651
   14003d610:	jae    0x14003d685
   14003d612:	gs ins DWORD PTR es:[rdi],dx
   14003d614:	(bad)  
   14003d615:	ins    BYTE PTR es:[rdi],dx
   14003d616:	jns    0x14003d656
   14003d618:	or     eax,0x3c20200a
   14003d61d:	(bad)  
   14003d61e:	fs gs jo 0x14003d687
   14003d622:	outs   dx,BYTE PTR ds:[rsi]
   14003d623:	fs outs dx,BYTE PTR gs:[rsi]
   14003d626:	movsxd edi,DWORD PTR [rcx+0x3e]
   14003d629:	or     eax,0x612f3c0a
   14003d62e:	jae    0x14003d6a3
   14003d630:	gs ins DWORD PTR es:[rdi],dx
   14003d632:	(bad)  
   14003d633:	ins    BYTE PTR es:[rdi],dx
   14003d634:	jns    0x14003d674
   14003d636:	push   rax
   14003d637:	rex.B

Disassembly of section .reloc:

000000014003e000 <.reloc>:
   14003e000:	add    al,ah
   14003e002:	add    BYTE PTR [rax],al
   14003e004:	push   rax
   14003e005:	add    DWORD PTR [rax],eax
   14003e007:	add    al,bl
   14003e009:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e00a:	loopne 0x14003dfb3
   14003e00c:	call   0x138abd0b8
   14003e011:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e012:	add    BYTE PTR [rax-0x57ef57f8],ch
   14003e018:	sub    BYTE PTR [rax-0x57af57d0],ch
   14003e01e:	pop    rax
   14003e01f:	test   al,0x60
   14003e021:	test   al,0x68
   14003e023:	test   al,0x70
   14003e025:	test   al,0x78
   14003e027:	test   al,0x80
   14003e029:	test   al,0x88
   14003e02b:	test   al,0x90
   14003e02d:	test   al,0x98
   14003e02f:	test   al,0xa0
   14003e031:	test   al,0xa8
   14003e033:	test   al,0xb0
   14003e035:	test   al,0xb8
   14003e037:	test   al,0xc0
   14003e039:	test   al,0xc8
   14003e03b:	test   al,0xd0
   14003e03d:	test   al,0xd8
   14003e03f:	test   al,0xe0
   14003e041:	test   al,0xe8
   14003e043:	test   al,0xf0
   14003e045:	test   al,0xf8
   14003e047:	test   al,0x0
   14003e049:	test   eax,0xa910a908
   14003e04e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14003e054:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14003e05a:	test   rax,0xffffffffa958a950
   14003e060:	(bad)  
   14003e061:	test   eax,0xa970a968
   14003e066:	js     0x14003e011
   14003e068:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14003e06f:	test   eax,0xa9a8a9a0
   14003e074:	mov    al,0xa9
   14003e076:	mov    eax,0x78ac70a9
   14003e07b:	lods   al,BYTE PTR ds:[rsi]
   14003e07c:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14003e084:	movabs al,ds:0xc0acb8acb0aca8ac
   14003e08d:	lods   al,BYTE PTR ds:[rsi]
   14003e08e:	enter  0xd0ac,0xac
   14003e092:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14003e099:	lods   al,BYTE PTR ds:[rsi]
   14003e09a:	clc    
   14003e09b:	lods   al,BYTE PTR ds:[rsi]
   14003e09c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14003e0a2:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14003e0a8:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14003e0ae:	lods   rax,QWORD PTR ds:[rsi]
   14003e0b0:	push   rax
   14003e0b1:	lods   eax,DWORD PTR ds:[rsi]
   14003e0b2:	pop    rax
   14003e0b3:	lods   eax,DWORD PTR ds:[rsi]
   14003e0b4:	(bad)  
   14003e0b5:	lods   eax,DWORD PTR ds:[rsi]
   14003e0b6:	push   0x78ad70ad
   14003e0bb:	lods   eax,DWORD PTR ds:[rsi]
   14003e0bc:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14003e0c3:	lods   eax,DWORD PTR ds:[rsi]
   14003e0c4:	movabs al,ds:0xc0adb8adb0ada8ad
   14003e0cd:	lods   eax,DWORD PTR ds:[rsi]
   14003e0ce:	enter  0xd0ad,0xad
   14003e0d2:	fsubr  DWORD PTR [rbp-0x52175220]
   14003e0d8:	lock lods eax,DWORD PTR ds:[rsi]
   14003e0da:	clc    
   14003e0db:	lods   eax,DWORD PTR ds:[rsi]
   14003e0dc:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14003e0e2:	sbb    BYTE PTR [rsi-0x51a751b0],ch
   14003e0e8:	(bad)  
   14003e0e9:	scas   al,BYTE PTR es:[rdi]
   14003e0ea:	push   0x78ae70ae
   14003e0ef:	scas   al,BYTE PTR es:[rdi]
   14003e0f0:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14003e0f7:	scas   al,BYTE PTR es:[rdi]
   14003e0f8:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14003e101:	scas   al,BYTE PTR es:[rdi]
   14003e102:	enter  0xd0ae,0xae
   14003e106:	fsubr  DWORD PTR [rsi-0x51175120]
   14003e10c:	lock scas al,BYTE PTR es:[rdi]
   14003e10e:	clc    
   14003e10f:	scas   al,BYTE PTR es:[rdi]
   14003e110:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14003e116:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14003e11c:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14003e122:	scas   rax,QWORD PTR es:[rdi]
   14003e124:	push   rax
   14003e125:	scas   eax,DWORD PTR es:[rdi]
   14003e126:	pop    rax
   14003e127:	scas   eax,DWORD PTR es:[rdi]
   14003e128:	(bad)  
   14003e129:	scas   eax,DWORD PTR es:[rdi]
   14003e12a:	push   0x78af70af
   14003e12f:	scas   eax,DWORD PTR es:[rdi]
   14003e130:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14003e137:	scas   eax,DWORD PTR es:[rdi]
   14003e138:	movabs al,ds:0xc0afb8afb0afa8af
   14003e141:	scas   eax,DWORD PTR es:[rdi]
   14003e142:	enter  0xd0af,0xaf
   14003e146:	fsubr  DWORD PTR [rdi-0x50175020]
   14003e14c:	lock scas eax,DWORD PTR es:[rdi]
   14003e14e:	clc    
   14003e14f:	scas   eax,DWORD PTR es:[rdi]
   14003e150:	add    al,dh
   14003e152:	add    BYTE PTR [rax],al
   14003e154:	cmp    BYTE PTR [rbx],al
   14003e156:	add    BYTE PTR [rax],al
   14003e158:	add    BYTE PTR [rax-0x5fe75ff0],ah
   14003e15e:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14003e164:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14003e16a:	push   rax
   14003e16b:	movabs al,ds:0xa070a068a060a058
   14003e174:	js     0x14003e116
   14003e176:	and    BYTE PTR [rax-0x5f6f5f78],0xa0
   14003e17d:	movabs al,ds:0xa0c0a0b8a0b0a0a8
   14003e186:	enter  0xd0a0,0xa0
   14003e18a:	fsub   DWORD PTR [rax-0x5f175f20]
   14003e190:	lock movabs al,ds:0xa110a108a100a0f8
   14003e19a:	sbb    BYTE PTR [rcx-0x5ebf5ee0],ah
   14003e1a0:	movabs rax,ds:0xa168a160a158a150
   14003e1aa:	jo     0x14003e14d
   14003e1ac:	js     0x14003e14f
   14003e1ae:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14003e1b5:	movabs eax,ds:0xa1e8a1e0a1d8a1d0
   14003e1be:	lock movabs eax,ds:0xa210a208a200a1f8
   14003e1c8:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14003e1ce:	jo     0x14003e172
   14003e1d0:	js     0x14003e174
   14003e1d2:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14003e1d9:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14003e1e2:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14003e1e9:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   14003e1f2:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14003e1f8:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14003e1fe:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14003e204:	movabs ds:0xa368a360a358a350,rax
   14003e20e:	jo     0x14003e1b3
   14003e210:	js     0x14003e1b5
   14003e212:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14003e219:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14003e222:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   14003e229:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   14003e232:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14003e239:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e23a:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14003e241:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e242:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e244:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e246:	push   rax
   14003e247:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e248:	pop    rax
   14003e249:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e24a:	(bad)  
   14003e24b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e24c:	push   0x78a470a4
   14003e251:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e252:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14003e25a:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14003e263:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e264:	enter  0xd0a4,0xa4
   14003e268:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14003e26f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e270:	clc    
   14003e271:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e272:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14003e278:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14003e27e:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14003e284:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14003e286:	push   rax
   14003e287:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e288:	pop    rax
   14003e289:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e28a:	(bad)  
   14003e28b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e28c:	push   0x78a570a5
   14003e291:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e292:	shl    BYTE PTR [rbp-0x5a2f5a38],0xd8
   14003e299:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e29a:	loopne 0x14003e241
   14003e29c:	call   0x138a9d346
   14003e2a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e2a2:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14003e2a8:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14003e2ae:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14003e2b4:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2b6:	push   rax
   14003e2b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2b8:	pop    rax
   14003e2b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2ba:	(bad)  
   14003e2bb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2bc:	push   0x78a670a6
   14003e2c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2c2:	and    BYTE PTR [rsi-0x596f5978],0x98
   14003e2c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2ca:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14003e2d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2d4:	enter  0xd0a6,0xa6
   14003e2d8:	fsub   DWORD PTR [rsi-0x59175920]
   14003e2de:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2e0:	clc    
   14003e2e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e2e2:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14003e2e8:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14003e2ee:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14003e2f4:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14003e2f6:	push   rax
   14003e2f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e2f8:	pop    rax
   14003e2f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e2fa:	(bad)  
   14003e2fb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e2fc:	push   0x78a770a7
   14003e301:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e302:	and    BYTE PTR [rdi-0x586f5878],0x98
   14003e309:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e30a:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14003e313:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e314:	enter  0xd0a7,0xa7
   14003e318:	fsub   DWORD PTR [rdi-0x58175820]
   14003e31e:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e320:	clc    
   14003e321:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e322:	add    BYTE PTR [rax-0x57ef57f8],ch
   14003e328:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14003e32e:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14003e334:	rex.W test al,0x50
   14003e337:	test   al,0x58
   14003e339:	test   al,0x60
   14003e33b:	test   al,0x68
   14003e33d:	test   al,0x70
   14003e33f:	test   al,0x78
   14003e341:	test   al,0x80
   14003e343:	test   al,0x88
   14003e345:	test   al,0x90
   14003e347:	test   al,0x98
   14003e349:	test   al,0xa0
   14003e34b:	test   al,0xa8
   14003e34d:	test   al,0xb0
   14003e34f:	test   al,0xb8
   14003e351:	test   al,0xc0
   14003e353:	test   al,0xc8
   14003e355:	test   al,0xd0
   14003e357:	test   al,0xd8
   14003e359:	test   al,0xe0
   14003e35b:	test   al,0xe8
   14003e35d:	test   al,0xf0
   14003e35f:	test   al,0xf8
   14003e361:	test   al,0x0
   14003e363:	test   eax,0xa910a908
   14003e368:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14003e36e:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14003e374:	test   rax,0xffffffffa958a950
   14003e37a:	(bad)  
   14003e37b:	test   eax,0xa970a968
   14003e380:	js     0x14003e32b
   14003e382:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14003e389:	test   eax,0xa9a8a9a0
   14003e38e:	mov    al,0xa9
   14003e390:	mov    eax,0xc8a9c0a9
   14003e395:	test   eax,0xa9d8a9d0
   14003e39a:	loopne 0x14003e345
   14003e39c:	call   0x138add44a
   14003e3a1:	test   eax,0xaa08aa00
   14003e3a6:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14003e3ac:	sub    BYTE PTR [rdx-0x55b755c0],ch
   14003e3b2:	push   rax
   14003e3b3:	stos   BYTE PTR es:[rdi],al
   14003e3b4:	pop    rax
   14003e3b5:	stos   BYTE PTR es:[rdi],al
   14003e3b6:	(bad)  
   14003e3b7:	stos   BYTE PTR es:[rdi],al
   14003e3b8:	push   0x78aa70aa
   14003e3bd:	stos   BYTE PTR es:[rdi],al
   14003e3be:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14003e3c5:	stos   BYTE PTR es:[rdi],al
   14003e3c6:	movabs al,ds:0xc0aab8aab0aaa8aa
   14003e3cf:	stos   BYTE PTR es:[rdi],al
   14003e3d0:	enter  0xd0aa,0xaa
   14003e3d4:	fsubr  DWORD PTR [rdx-0x55175520]
   14003e3da:	lock stos BYTE PTR es:[rdi],al
   14003e3dc:	clc    
   14003e3dd:	stos   BYTE PTR es:[rdi],al
   14003e3de:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14003e3e4:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14003e3ea:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14003e3f0:	stos   QWORD PTR es:[rdi],rax
   14003e3f2:	push   rax
   14003e3f3:	stos   DWORD PTR es:[rdi],eax
   14003e3f4:	pop    rax
   14003e3f5:	stos   DWORD PTR es:[rdi],eax
   14003e3f6:	(bad)  
   14003e3f7:	stos   DWORD PTR es:[rdi],eax
   14003e3f8:	push   0x78ab70ab
   14003e3fd:	stos   DWORD PTR es:[rdi],eax
   14003e3fe:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14003e405:	stos   DWORD PTR es:[rdi],eax
   14003e406:	movabs al,ds:0xc0abb8abb0aba8ab
   14003e40f:	stos   DWORD PTR es:[rdi],eax
   14003e410:	enter  0xd0ab,0xab
   14003e414:	fsubr  DWORD PTR [rbx-0x54175420]
   14003e41a:	adc    BYTE PTR [rax+rbx*1+0x28ac20ac],ch
   14003e421:	lods   al,BYTE PTR ds:[rsi]
   14003e422:	xor    BYTE PTR [rax+rdi*1+0x48ac40ac],ch
   14003e429:	lods   al,BYTE PTR ds:[rsi]
   14003e42a:	push   rax
   14003e42b:	lods   al,BYTE PTR ds:[rsi]
   14003e42c:	pop    rax
   14003e42d:	lods   al,BYTE PTR ds:[rsi]
   14003e42e:	(bad)  
   14003e42f:	lods   al,BYTE PTR ds:[rsi]
   14003e430:	push   0x78ac70ac
   14003e435:	lods   al,BYTE PTR ds:[rsi]
   14003e436:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14003e43e:	movabs al,ds:0xc0acb8acb0aca8ac
   14003e447:	lods   al,BYTE PTR ds:[rsi]
   14003e448:	enter  0xd0ac,0xac
   14003e44c:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14003e453:	lods   al,BYTE PTR ds:[rsi]
   14003e454:	clc    
   14003e455:	lods   al,BYTE PTR ds:[rsi]
   14003e456:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14003e45c:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14003e462:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14003e468:	lods   rax,QWORD PTR ds:[rsi]
   14003e46a:	push   rax
   14003e46b:	lods   eax,DWORD PTR ds:[rsi]
   14003e46c:	pop    rax
   14003e46d:	lods   eax,DWORD PTR ds:[rsi]
   14003e46e:	(bad)  
   14003e46f:	lods   eax,DWORD PTR ds:[rsi]
   14003e470:	push   0x78ad70ad
   14003e475:	lods   eax,DWORD PTR ds:[rsi]
   14003e476:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14003e47d:	lods   eax,DWORD PTR ds:[rsi]
   14003e47e:	movabs al,ds:0xadb8adb0ada8ad
   14003e487:	add    BYTE PTR [rax],al
   14003e489:	add    BYTE PTR [rcx],al
   14003e48b:	add    BYTE PTR [rax+0x3],dh
   14003e48e:	add    BYTE PTR [rax],al
   14003e490:	push   rax
   14003e491:	movabs al,ds:0xa070a068a060a058
   14003e49a:	js     0x14003e43c
   14003e49c:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14003e4a3:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14003e4ac:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   14003e4b3:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   14003e4bc:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14003e4c2:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   14003e4c8:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14003e4ce:	movabs rax,ds:0xa168a160a158a150
   14003e4d8:	jo     0x14003e47b
   14003e4da:	js     0x14003e47d
   14003e4dc:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14003e4e3:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14003e4ec:	push   rax
   14003e4ed:	movabs ds:0xa370a368a360a358,eax
   14003e4f6:	js     0x14003e49b
   14003e4f8:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14003e4ff:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14003e508:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   14003e50f:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   14003e518:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14003e51f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e520:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14003e527:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e528:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e52a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e52c:	push   rax
   14003e52d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e52e:	pop    rax
   14003e52f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e530:	(bad)  
   14003e531:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e532:	push   0x78a470a4
   14003e537:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e538:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14003e540:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14003e549:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e54a:	enter  0xd0a4,0xa4
   14003e54e:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14003e555:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e556:	clc    
   14003e557:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e558:	adc    BYTE PTR [rbp-0x5adf5ae8],ah
   14003e55e:	sub    BYTE PTR [rbp-0x5ac75ad0],ah
   14003e564:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e566:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14003e568:	shl    BYTE PTR [rbp-0x5a2f5a38],0xd8
   14003e56f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e570:	loopne 0x14003e517
   14003e572:	call   0x138a9d61c
   14003e577:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e578:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14003e57e:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14003e584:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14003e58a:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e58c:	push   rax
   14003e58d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e58e:	pop    rax
   14003e58f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e590:	(bad)  
   14003e591:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e592:	push   0x78a670a6
   14003e597:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e598:	and    BYTE PTR [rsi-0x596f5978],0x98
   14003e59f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e5a0:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14003e5a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e5aa:	enter  0xd0a6,0xa6
   14003e5ae:	fsub   DWORD PTR [rsi-0x59175920]
   14003e5b4:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e5b6:	clc    
   14003e5b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e5b8:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14003e5be:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14003e5c4:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14003e5ca:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14003e5cc:	push   rax
   14003e5cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5ce:	pop    rax
   14003e5cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5d0:	(bad)  
   14003e5d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5d2:	push   0x78a770a7
   14003e5d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5d8:	and    BYTE PTR [rdi-0x586f5878],0x98
   14003e5df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5e0:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14003e5e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5ea:	enter  0xd0a7,0xa7
   14003e5ee:	fsub   DWORD PTR [rdi-0x58175820]
   14003e5f4:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5f6:	clc    
   14003e5f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e5f8:	add    BYTE PTR [rax-0x57ef57f8],ch
   14003e5fe:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14003e604:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14003e60a:	rex.W test al,0x50
   14003e60d:	test   al,0x58
   14003e60f:	test   al,0x60
   14003e611:	test   al,0x68
   14003e613:	test   al,0x70
   14003e615:	test   al,0x78
   14003e617:	test   al,0x80
   14003e619:	test   al,0x88
   14003e61b:	test   al,0x90
   14003e61d:	test   al,0x98
   14003e61f:	test   al,0xa0
   14003e621:	test   al,0xa8
   14003e623:	test   al,0xb0
   14003e625:	test   al,0xb8
   14003e627:	test   al,0xc0
   14003e629:	test   al,0xc8
   14003e62b:	test   al,0xd0
   14003e62d:	test   al,0xd8
   14003e62f:	test   al,0xe0
   14003e631:	test   al,0xe8
   14003e633:	test   al,0xf0
   14003e635:	test   al,0xf8
   14003e637:	test   al,0x0
   14003e639:	test   eax,0xa910a908
   14003e63e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14003e644:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14003e64a:	test   rax,0xffffffffa958a950
   14003e650:	(bad)  
   14003e651:	test   eax,0xa970a968
   14003e656:	js     0x14003e601
   14003e658:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14003e65f:	test   eax,0xa9a8a9a0
   14003e664:	mov    al,0xa9
   14003e666:	mov    eax,0xc8a9c0a9
   14003e66b:	test   eax,0xa9d8a9d0
   14003e670:	loopne 0x14003e61b
   14003e672:	call   0x138add720
   14003e677:	test   eax,0xaa08aa00
   14003e67c:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14003e682:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14003e688:	stos   BYTE PTR es:[rdi],al
   14003e68a:	rex.W stos BYTE PTR es:[rdi],al
   14003e68c:	push   rax
   14003e68d:	stos   BYTE PTR es:[rdi],al
   14003e68e:	pop    rax
   14003e68f:	stos   BYTE PTR es:[rdi],al
   14003e690:	(bad)  
   14003e691:	stos   BYTE PTR es:[rdi],al
   14003e692:	push   0x78aa70aa
   14003e697:	stos   BYTE PTR es:[rdi],al
   14003e698:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14003e69f:	stos   BYTE PTR es:[rdi],al
   14003e6a0:	movabs al,ds:0xc0aab8aab0aaa8aa
   14003e6a9:	stos   BYTE PTR es:[rdi],al
   14003e6aa:	enter  0xd0aa,0xaa
   14003e6ae:	fsubr  DWORD PTR [rdx-0x55175520]
   14003e6b4:	lock stos BYTE PTR es:[rdi],al
   14003e6b6:	clc    
   14003e6b7:	stos   BYTE PTR es:[rdi],al
   14003e6b8:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14003e6be:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14003e6c4:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14003e6ca:	stos   QWORD PTR es:[rdi],rax
   14003e6cc:	push   rax
   14003e6cd:	stos   DWORD PTR es:[rdi],eax
   14003e6ce:	pop    rax
   14003e6cf:	stos   DWORD PTR es:[rdi],eax
   14003e6d0:	(bad)  
   14003e6d1:	stos   DWORD PTR es:[rdi],eax
   14003e6d2:	push   0x78ab70ab
   14003e6d7:	stos   DWORD PTR es:[rdi],eax
   14003e6d8:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14003e6df:	stos   DWORD PTR es:[rdi],eax
   14003e6e0:	movabs al,ds:0xc0abb8abb0aba8ab
   14003e6e9:	stos   DWORD PTR es:[rdi],eax
   14003e6ea:	enter  0xd0ab,0xab
   14003e6ee:	fsubr  DWORD PTR [rbx-0x54175420]
   14003e6f4:	lock stos DWORD PTR es:[rdi],eax
   14003e6f6:	clc    
   14003e6f7:	stos   DWORD PTR es:[rdi],eax
   14003e6f8:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14003e6ff:	lods   al,BYTE PTR ds:[rsi]
   14003e700:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14003e707:	lods   al,BYTE PTR ds:[rsi]
   14003e708:	lods   al,BYTE PTR ds:[rsi]
   14003e70a:	rex.W lods al,BYTE PTR ds:[rsi]
   14003e70c:	push   rax
   14003e70d:	lods   al,BYTE PTR ds:[rsi]
   14003e70e:	pop    rax
   14003e70f:	lods   al,BYTE PTR ds:[rsi]
   14003e710:	(bad)  
   14003e711:	lods   al,BYTE PTR ds:[rsi]
   14003e712:	push   0x78ac70ac
   14003e717:	lods   al,BYTE PTR ds:[rsi]
   14003e718:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14003e720:	movabs al,ds:0xc0acb8acb0aca8ac
   14003e729:	lods   al,BYTE PTR ds:[rsi]
   14003e72a:	enter  0xd0ac,0xac
   14003e72e:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14003e735:	lods   al,BYTE PTR ds:[rsi]
   14003e736:	clc    
   14003e737:	lods   al,BYTE PTR ds:[rsi]
   14003e738:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14003e73e:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14003e744:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14003e74a:	lods   rax,QWORD PTR ds:[rsi]
   14003e74c:	push   rax
   14003e74d:	lods   eax,DWORD PTR ds:[rsi]
   14003e74e:	pop    rax
   14003e74f:	lods   eax,DWORD PTR ds:[rsi]
   14003e750:	(bad)  
   14003e751:	lods   eax,DWORD PTR ds:[rsi]
   14003e752:	push   0x78ad70ad
   14003e757:	lods   eax,DWORD PTR ds:[rsi]
   14003e758:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14003e75f:	lods   eax,DWORD PTR ds:[rsi]
   14003e760:	movabs al,ds:0xc0adb8adb0ada8ad
   14003e769:	lods   eax,DWORD PTR ds:[rsi]
   14003e76a:	enter  0xd0ad,0xad
   14003e76e:	fsubr  DWORD PTR [rbp-0x52175220]
   14003e774:	lock lods eax,DWORD PTR ds:[rsi]
   14003e776:	clc    
   14003e777:	lods   eax,DWORD PTR ds:[rsi]
   14003e778:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14003e77e:	and    BYTE PTR [rsi-0x51cf51d8],ch
   14003e784:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   14003e78a:	push   rax
   14003e78b:	scas   al,BYTE PTR es:[rdi]
   14003e78c:	pop    rax
   14003e78d:	scas   al,BYTE PTR es:[rdi]
   14003e78e:	(bad)  
   14003e78f:	scas   al,BYTE PTR es:[rdi]
   14003e790:	push   0x78ae70ae
   14003e795:	scas   al,BYTE PTR es:[rdi]
   14003e796:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14003e79d:	scas   al,BYTE PTR es:[rdi]
   14003e79e:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14003e7a7:	scas   al,BYTE PTR es:[rdi]
   14003e7a8:	enter  0xd0ae,0xae
   14003e7ac:	fsubr  DWORD PTR [rsi-0x51175120]
   14003e7b2:	lock scas al,BYTE PTR es:[rdi]
   14003e7b4:	clc    
   14003e7b5:	scas   al,BYTE PTR es:[rdi]
   14003e7b6:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14003e7bc:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14003e7c2:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14003e7c8:	scas   rax,QWORD PTR es:[rdi]
   14003e7ca:	push   rax
   14003e7cb:	scas   eax,DWORD PTR es:[rdi]
   14003e7cc:	pop    rax
   14003e7cd:	scas   eax,DWORD PTR es:[rdi]
   14003e7ce:	(bad)  
   14003e7cf:	scas   eax,DWORD PTR es:[rdi]
   14003e7d0:	push   0x78af70af
   14003e7d5:	scas   eax,DWORD PTR es:[rdi]
   14003e7d6:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14003e7dd:	scas   eax,DWORD PTR es:[rdi]
   14003e7de:	movabs al,ds:0xc0afb8afb0afa8af
   14003e7e7:	scas   eax,DWORD PTR es:[rdi]
   14003e7e8:	enter  0xd0af,0xaf
   14003e7ec:	fsubr  DWORD PTR [rdi-0x50175020]
   14003e7f2:	lock scas eax,DWORD PTR es:[rdi]
   14003e7f4:	clc    
   14003e7f5:	scas   eax,DWORD PTR es:[rdi]
   14003e7f6:	add    BYTE PTR [rax],al
   14003e7f8:	add    BYTE PTR [rax],dl
   14003e7fa:	add    DWORD PTR [rax],eax
   14003e7fc:	clc    
   14003e7fd:	add    BYTE PTR [rax],al
   14003e7ff:	add    BYTE PTR [rax],al
   14003e801:	movabs al,ds:0xa020a018a010a008
   14003e80a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14003e810:	nop
   14003e811:	movabs eax,ds:0xa1b0a1a8a1a0a198
   14003e81a:	mov    eax,0xc8a1c0a1
   14003e81f:	movabs eax,ds:0xa1e8a1e0a1d8a1d0
   14003e828:	lock movabs eax,ds:0xa210a208a200a1f8
   14003e832:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14003e838:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14003e83e:	rex.W movabs ds:0xa268a260a258a250,al
   14003e848:	jo     0x14003e7ec
   14003e84a:	js     0x14003e7ee
   14003e84c:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14003e853:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14003e85c:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14003e863:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   14003e86c:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14003e872:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14003e878:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14003e87e:	movabs ds:0xa3c8a3c0a3b8a3b0,rax
   14003e888:	shl    BYTE PTR [rbx-0x5c1f5c28],1
   14003e88e:	call   0x138a7d936
   14003e893:	movabs ds:0xa418a410a408a400,eax
   14003e89c:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14003e8a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8a4:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8a6:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8a8:	push   rax
   14003e8a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8aa:	pop    rax
   14003e8ab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8ac:	(bad)  
   14003e8ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8ae:	push   0x78a470a4
   14003e8b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8b4:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14003e8bc:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14003e8c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8c6:	enter  0xd0a4,0xa4
   14003e8ca:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14003e8d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8d2:	clc    
   14003e8d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8d4:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14003e8da:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14003e8e0:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14003e8e6:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14003e8e8:	push   rax
   14003e8e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e8ea:	pop    rax
   14003e8eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e8ec:	(bad)  
   14003e8ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e8ee:	add    BYTE PTR [rax],al
   14003e8f0:	add    BYTE PTR [rax],ah
   14003e8f2:	add    DWORD PTR [rax],eax
   14003e8f4:	or     al,0x0
   14003e8f6:	add    BYTE PTR [rax],al
   14003e8f8:	fsubr  DWORD PTR [rdx+0xaae0]
   14003e8fe:	add    al,BYTE PTR [rax]
   14003e900:	cwde   
   14003e901:	add    BYTE PTR [rax],al
   14003e903:	add    BYTE PTR [rax],al
   14003e905:	movabs al,ds:0xa088a058a030a008
   14003e90e:	test   al,0xa0
   14003e910:	shl    BYTE PTR [rax-0x5ee75f10],1
   14003e916:	cmp    BYTE PTR [rcx-0x5e6f5ea0],ah
   14003e91c:	mov    eax,0x10a1e0a1
   14003e921:	movabs ds:0xa290a270a250a230,al
   14003e92a:	mov    eax,0xa2e0a2
   14003e92f:	movabs ds:0xa358a350a348a328,eax
   14003e938:	mov    BYTE PTR [rbx-0x5c175c48],ah
   14003e93e:	lock movabs ds:0xa488a460a440a418,eax
   14003e948:	mov    al,0xa4
   14003e94a:	shl    BYTE PTR [rax+rbx*8+0x20a4f8a4],1
   14003e951:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e952:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e954:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14003e956:	jo     0x14003e8fd
   14003e958:	cwde   
   14003e959:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e95a:	shl    BYTE PTR [rbp-0x5a275a38],0xe0
   14003e961:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e962:	call   0x150a9ea0c
   14003e967:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e968:	sbb    BYTE PTR [rsi-0x59c759e0],ah
   14003e96e:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e970:	push   rax
   14003e971:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e972:	pop    rax
   14003e973:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e974:	jo     0x14003e91c
   14003e976:	and    BYTE PTR [rsi-0x596f5978],0xa8
   14003e97d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e97e:	mov    eax,0xc8a6c0a6
   14003e983:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e984:	loopne 0x14003e92c
   14003e986:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e988:	clc    
   14003e989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e98a:	add    BYTE PTR [rdi-0x58a758e8],ah
   14003e990:	(bad)  
   14003e991:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
