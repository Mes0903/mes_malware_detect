
647df4453044059c24cfcc2e37824159f29474bdc0b5755ae1a832d019aba289.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x3c825]        # 0x43d840
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x3c826]        # 0x43d850
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x3c829]        # 0x43d860
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x3c7ec]        # 0x43d830
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x3c4bf]        # 0x43d510
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x3c7c1]        # 0x43d820
  40105f:	mov    DWORD PTR [rip+0x40fa3],edx        # 0x442008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42fc58
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x422e60
  401081:	mov    rdx,QWORD PTR [rip+0x3c528]        # 0x43d5b0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x3c50e]        # 0x43d5a0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x3c594]        # 0x43d630
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x3c4ab]        # 0x43d550
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x422a40
  4010af:	mov    rax,QWORD PTR [rip+0x3c3ea]        # 0x43d4a0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42fc58
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x21c19]        # 0x422d40
  401127:	call   0x422d30
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x3c4f5]        # 0x43d660
  40116b:	lea    r8,[rip+0x40ea6]        # 0x442018
  401172:	lea    rdx,[rip+0x40ea7]        # 0x442020
  401179:	lea    rcx,[rip+0x40ea8]        # 0x442028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x40e78],eax        # 0x442000
  401188:	lea    rax,[rip+0x40e71]        # 0x442000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x3c485]        # 0x43d620
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42fc70
  4011a3:	mov    DWORD PTR [rip+0x40e67],eax        # 0x442010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x3c65a]        # 0x43d820
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x3c38b]        # 0x43d580
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x43ce6]        # 0x444ee8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x3c367]        # 0x43d590
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x40dba],0x1        # 0x442004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x3c28c]        # 0x43d4f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x423050
  40127d:	lea    rcx,[rip+0x2236c]        # 0x4235f0
  401284:	call   QWORD PTR [rip+0x43c56]        # 0x444ee0
  40128a:	mov    rdx,QWORD PTR [rip+0x3c2df]        # 0x43d570
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x423500
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42fca0
  4012a5:	call   0x422e40
  4012aa:	mov    rax,QWORD PTR [rip+0x3c25f]        # 0x43d510
  4012b1:	mov    QWORD PTR [rip+0x423f0],rax        # 0x4436a8
  4012b8:	mov    rax,QWORD PTR [rip+0x3c281]        # 0x43d540
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x42389],rax        # 0x4436a0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2fcca],eax        # 0x431000
  401336:	mov    r12d,DWORD PTR [rip+0x40ceb]        # 0x442028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42fb50
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x40cc2]        # 0x442020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42fad8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42fb50
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42fb40
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x40c6a],rbp        # 0x442020
  4013b6:	call   0x422a10
  4013bb:	mov    rax,QWORD PTR [rip+0x3c15e]        # 0x43d520
  4013c2:	mov    rdx,QWORD PTR [rip+0x40c4f]        # 0x442018
  4013c9:	mov    ecx,DWORD PTR [rip+0x40c59]        # 0x442028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x40c3c]        # 0x442018
  4013dc:	mov    rdx,QWORD PTR [rip+0x40c3d]        # 0x442020
  4013e3:	call   0x430150
  4013e8:	mov    ecx,DWORD PTR [rip+0x40c1a]        # 0x442008
  4013ee:	mov    DWORD PTR [rip+0x40c18],eax        # 0x44200c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x40c02]        # 0x442004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42fc40
  40140b:	mov    eax,DWORD PTR [rip+0x40bfb]        # 0x44200c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3c159]        # 0x43d590
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42fc48
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3c18d]        # 0x43d5f0
  401463:	mov    rcx,QWORD PTR [rip+0x3c176]        # 0x43d5e0
  40146a:	call   0x42fc28
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x439b7]        # 0x444e50
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3c169]        # 0x43d610
  4014a7:	mov    rcx,QWORD PTR [rip+0x3c152]        # 0x43d600
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42fc28
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42fbe0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3c345]        # 0x43d820
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x422a50
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3c315]        # 0x43d820
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x422a50
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,r8
  401539:	mov    rsi,r9
  40153c:	call   QWORD PTR [rip+0x43a0e]        # 0x444f50
  401542:	lea    rcx,[rax+0x30]
  401546:	mov    r8,rsi
  401549:	mov    rdx,rbx
  40154c:	add    rsp,0x28
  401550:	pop    rbx
  401551:	pop    rsi
  401552:	jmp    0x424060
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	sub    rsp,0x38
  401564:	mov    QWORD PTR [rsp+0x48],rdx
  401569:	lea    rdx,[rsp+0x48]
  40156e:	mov    QWORD PTR [rsp+0x50],r8
  401573:	mov    QWORD PTR [rsp+0x58],r9
  401578:	mov    QWORD PTR [rsp+0x28],rdx
  40157d:	call   0x4272e0
  401582:	add    rsp,0x38
  401586:	ret    
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x38
  401594:	mov    QWORD PTR [rsp+0x50],r8
  401599:	lea    r8,[rsp+0x50]
  40159e:	mov    QWORD PTR [rsp+0x58],r9
  4015a3:	mov    QWORD PTR [rsp+0x28],r8
  4015a8:	call   0x424060
  4015ad:	add    rsp,0x38
  4015b1:	ret    
  4015b2:	nop    DWORD PTR [rax+0x0]
  4015b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015c0:	mov    rcx,QWORD PTR [rcx]
  4015c3:	mov    r8,QWORD PTR [rdx]
  4015c6:	mov    eax,DWORD PTR [rcx+0x4]
  4015c9:	mov    edx,DWORD PTR [r8+0x4]
  4015cd:	cmp    eax,edx
  4015cf:	je     0x4015d4
  4015d1:	sub    eax,edx
  4015d3:	ret    
  4015d4:	mov    rdx,QWORD PTR [r8+0x8]
  4015d8:	mov    rcx,QWORD PTR [rcx+0x8]
  4015dc:	jmp    0x42faf8
  4015e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015f0:	push   r12
  4015f2:	push   rbp
  4015f3:	push   rdi
  4015f4:	push   rsi
  4015f5:	push   rbx
  4015f6:	sub    rsp,0x440
  4015fd:	mov    ebx,edx
  4015ff:	mov    rsi,rcx
  401602:	mov    rdi,r8
  401605:	mov    rbp,r9
  401608:	lea    r12,[rsp+0x40]
  40160d:	call   0x4226b0
  401612:	lea    rax,[rip+0x2fab7]        # 0x4310d0
  401619:	mov    DWORD PTR [rsp+0x28],0x400
  401621:	mov    QWORD PTR [rsp+0x20],r12
  401626:	mov    r9,rbp
  401629:	mov    r8,rdi
  40162c:	mov    edx,ebx
  40162e:	mov    QWORD PTR [rsp+0x30],rax
  401633:	mov    rcx,rsi
  401636:	call   0x4226a8
  40163b:	cmp    ebx,DWORD PTR [rip+0x2fa93]        # 0x4310d4
  401641:	jg     0x40165f
  401643:	mov    rdx,QWORD PTR [rip+0x40a06]        # 0x442050
  40164a:	mov    rcx,r12
  40164d:	call   0x42fba8
  401652:	mov    rcx,QWORD PTR [rip+0x409f7]        # 0x442050
  401659:	call   0x42fbd0
  40165e:	nop
  40165f:	add    rsp,0x440
  401666:	pop    rbx
  401667:	pop    rsi
  401668:	pop    rdi
  401669:	pop    rbp
  40166a:	pop    r12
  40166c:	ret    
  40166d:	nop    DWORD PTR [rax]
  401670:	sub    rsp,0x38
  401674:	mov    QWORD PTR [rsp+0x58],r9
  401679:	lea    r9,[rsp+0x58]
  40167e:	mov    QWORD PTR [rsp+0x28],r9
  401683:	call   0x427320
  401688:	add    rsp,0x38
  40168c:	ret    
  40168d:	nop    DWORD PTR [rax]
  401690:	push   r13
  401692:	push   r12
  401694:	push   rbp
  401695:	push   rdi
  401696:	push   rsi
  401697:	push   rbx
  401698:	sub    rsp,0x38
  40169c:	test   rcx,rcx
  40169f:	mov    QWORD PTR [rsp+0x28],0x0
  4016a8:	je     0x4017be
  4016ae:	mov    rax,QWORD PTR [rcx+0x28]
  4016b2:	test   rax,rax
  4016b5:	je     0x4017be
  4016bb:	mov    r8d,DWORD PTR [rax+0x38]
  4016bf:	mov    eax,r8d
  4016c2:	and    eax,0xfffffffd
  4016c5:	cmp    eax,0x29
  4016c8:	je     0x4016d9
  4016ca:	cmp    r8d,0x2d
  4016ce:	mov    eax,0xffffffea
  4016d3:	jne    0x401780
  4016d9:	mov    rsi,rdx
  4016dc:	mov    rdx,QWORD PTR [rcx]
  4016df:	mov    rbx,rcx
  4016e2:	lea    rcx,[rip+0x3091f]        # 0x432008
  4016e9:	call   0x401560
  4016ee:	cmp    QWORD PTR [rbx+0x90],0x0
  4016f6:	je     0x401790
  4016fc:	lea    r13,[rsp+0x28]
  401701:	xor    edx,edx
  401703:	mov    r8,rsi
  401706:	mov    rcx,rbx
  401709:	mov    r9,r13
  40170c:	call   0x422028
  401711:	test   eax,eax
  401713:	mov    r12d,eax
  401716:	js     0x4017b0
  40171c:	mov    rdx,QWORD PTR [rsp+0x28]
  401721:	xor    esi,esi
  401723:	xor    ebx,ebx
  401725:	lea    rbp,[rip+0x308d4]        # 0x432000
  40172c:	lea    rdi,[rip+0x308cf]        # 0x432002
  401733:	mov    eax,DWORD PTR [rdx+0x8]
  401736:	test   eax,eax
  401738:	jle    0x401775
  40173a:	nop    WORD PTR [rax+rax*1+0x0]
  401740:	mov    rax,QWORD PTR [rdx]
  401743:	cmp    DWORD PTR [rdx+0xc],ebx
  401746:	lea    rcx,[rip+0x30918]        # 0x432065
  40174d:	mov    rdx,rdi
  401750:	mov    r8,QWORD PTR [rax+rsi*1]
  401754:	cmove  rdx,rbp
  401758:	add    ebx,0x1
  40175b:	add    rsi,0x8
  40175f:	mov    r9,QWORD PTR [r8+0x8]
  401763:	mov    r8,QWORD PTR [r8]
  401766:	call   0x401560
  40176b:	mov    rdx,QWORD PTR [rsp+0x28]
  401770:	cmp    DWORD PTR [rdx+0x8],ebx
  401773:	jg     0x401740
  401775:	mov    rcx,r13
  401778:	call   0x422030
  40177d:	mov    eax,r12d
  401780:	add    rsp,0x38
  401784:	pop    rbx
  401785:	pop    rsi
  401786:	pop    rdi
  401787:	pop    rbp
  401788:	pop    r12
  40178a:	pop    r13
  40178c:	ret    
  40178d:	nop    DWORD PTR [rax]
  401790:	lea    rcx,[rip+0x30891]        # 0x432028
  401797:	mov    r12d,0xffffffd8
  40179d:	lea    r13,[rsp+0x28]
  4017a2:	call   0x401560
  4017a7:	jmp    0x401775
  4017a9:	nop    DWORD PTR [rax+0x0]
  4017b0:	lea    rcx,[rip+0x30898]        # 0x43204f
  4017b7:	call   0x401560
  4017bc:	jmp    0x401775
  4017be:	mov    eax,0xffffffea
  4017c3:	jmp    0x401780
  4017c5:	nop
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	push   r13
  4017d2:	push   r12
  4017d4:	push   rbp
  4017d5:	push   rdi
  4017d6:	push   rsi
  4017d7:	push   rbx
  4017d8:	sub    rsp,0x38
  4017dc:	test   rcx,rcx
  4017df:	mov    QWORD PTR [rsp+0x28],0x0
  4017e8:	je     0x4018fe
  4017ee:	mov    rax,QWORD PTR [rcx+0x38]
  4017f2:	test   rax,rax
  4017f5:	je     0x4018fe
  4017fb:	mov    r8d,DWORD PTR [rax+0x38]
  4017ff:	mov    eax,r8d
  401802:	and    eax,0xfffffffd
  401805:	cmp    eax,0x28
  401808:	je     0x401819
  40180a:	cmp    r8d,0x2c
  40180e:	mov    eax,0xffffffea
  401813:	jne    0x4018c0
  401819:	mov    rsi,rdx
  40181c:	mov    rdx,QWORD PTR [rcx]
  40181f:	mov    rbx,rcx
  401822:	lea    rcx,[rip+0x30848]        # 0x432071
  401829:	call   0x401560
  40182e:	cmp    QWORD PTR [rbx+0x90],0x0
  401836:	je     0x4018d0
  40183c:	lea    r13,[rsp+0x28]
  401841:	xor    edx,edx
  401843:	mov    r8,rsi
  401846:	mov    rcx,rbx
  401849:	mov    r9,r13
  40184c:	call   0x422020
  401851:	test   eax,eax
  401853:	mov    r12d,eax
  401856:	js     0x4018f0
  40185c:	mov    rdx,QWORD PTR [rsp+0x28]
  401861:	xor    esi,esi
  401863:	xor    ebx,ebx
  401865:	lea    rbp,[rip+0x30794]        # 0x432000
  40186c:	lea    rdi,[rip+0x3078f]        # 0x432002
  401873:	mov    eax,DWORD PTR [rdx+0x8]
  401876:	test   eax,eax
  401878:	jle    0x4018b5
  40187a:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	mov    rax,QWORD PTR [rdx]
  401883:	cmp    DWORD PTR [rdx+0xc],ebx
  401886:	lea    rcx,[rip+0x307d8]        # 0x432065
  40188d:	mov    rdx,rdi
  401890:	mov    r8,QWORD PTR [rax+rsi*1]
  401894:	cmove  rdx,rbp
  401898:	add    ebx,0x1
  40189b:	add    rsi,0x8
  40189f:	mov    r9,QWORD PTR [r8+0x8]
  4018a3:	mov    r8,QWORD PTR [r8]
  4018a6:	call   0x401560
  4018ab:	mov    rdx,QWORD PTR [rsp+0x28]
  4018b0:	cmp    DWORD PTR [rdx+0x8],ebx
  4018b3:	jg     0x401880
  4018b5:	mov    rcx,r13
  4018b8:	call   0x422030
  4018bd:	mov    eax,r12d
  4018c0:	add    rsp,0x38
  4018c4:	pop    rbx
  4018c5:	pop    rsi
  4018c6:	pop    rdi
  4018c7:	pop    rbp
  4018c8:	pop    r12
  4018ca:	pop    r13
  4018cc:	ret    
  4018cd:	nop    DWORD PTR [rax]
  4018d0:	lea    rcx,[rip+0x307b9]        # 0x432090
  4018d7:	mov    r12d,0xffffffd8
  4018dd:	lea    r13,[rsp+0x28]
  4018e2:	call   0x401560
  4018e7:	jmp    0x4018b5
  4018e9:	nop    DWORD PTR [rax+0x0]
  4018f0:	lea    rcx,[rip+0x307be]        # 0x4320b5
  4018f7:	call   0x401560
  4018fc:	jmp    0x4018b5
  4018fe:	mov    eax,0xffffffea
  401903:	jmp    0x4018c0
  401905:	nop
  401906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401910:	push   r15
  401912:	push   r14
  401914:	push   r13
  401916:	push   r12
  401918:	push   rbp
  401919:	push   rdi
  40191a:	push   rsi
  40191b:	push   rbx
  40191c:	sub    rsp,0x58
  401920:	mov    DWORD PTR [rip+0x4070e],0x0        # 0x442038
  40192a:	mov    QWORD PTR [rsp+0x40],rcx
  40192f:	mov    QWORD PTR [rsp+0x48],rdx
  401934:	call   QWORD PTR [rip+0x434be]        # 0x444df8
  40193a:	lea    rdx,[rip+0x406f7]        # 0x442038
  401941:	mov    rcx,rax
  401944:	call   QWORD PTR [rip+0x43856]        # 0x4451a0
  40194a:	test   rax,rax
  40194d:	mov    r12,rax
  401950:	je     0x401a9a
  401956:	mov    eax,DWORD PTR [rip+0x406dc]        # 0x442038
  40195c:	test   eax,eax
  40195e:	jle    0x401a9a
  401964:	mov    rdi,QWORD PTR [rip+0x435ad]        # 0x444f18
  40196b:	mov    rbp,r12
  40196e:	xor    esi,esi
  401970:	xor    ebx,ebx
  401972:	mov    QWORD PTR [rsp+0x38],0x0
  40197b:	mov    QWORD PTR [rsp+0x30],0x0
  401984:	xor    edx,edx
  401986:	mov    DWORD PTR [rsp+0x28],0x0
  40198e:	mov    QWORD PTR [rsp+0x20],0x0
  401997:	mov    r9d,0xffffffff
  40199d:	mov    r8,QWORD PTR [rbp+0x0]
  4019a1:	mov    ecx,0xfde9
  4019a6:	add    ebx,0x1
  4019a9:	call   rdi
  4019ab:	add    esi,eax
  4019ad:	mov    eax,DWORD PTR [rip+0x40685]        # 0x442038
  4019b3:	add    rbp,0x8
  4019b7:	cmp    ebx,eax
  4019b9:	jl     0x401972
  4019bb:	add    eax,0x1
  4019be:	movsxd rdx,esi
  4019c1:	cdqe   
  4019c3:	lea    rcx,[rdx+rax*8]
  4019c7:	call   0x422670
  4019cc:	mov    rbp,rax
  4019cf:	mov    QWORD PTR [rip+0x4066a],rax        # 0x442040
  4019d6:	mov    eax,DWORD PTR [rip+0x4065c]        # 0x442038
  4019dc:	lea    r13d,[rax+0x1]
  4019e0:	movsxd r13,r13d
  4019e3:	shl    r13,0x3
  4019e7:	test   rbp,rbp
  4019ea:	je     0x401ab0
  4019f0:	test   eax,eax
  4019f2:	jle    0x401aab
  4019f8:	mov    rdx,rbp
  4019fb:	xor    r15d,r15d
  4019fe:	xor    ebx,ebx
  401a00:	xor    r14d,r14d
  401a03:	jmp    0x401a0c
  401a05:	mov    rdx,QWORD PTR [rip+0x40634]        # 0x442040
  401a0c:	movsxd rax,ebx
  401a0f:	mov    r9d,0xffffffff
  401a15:	mov    ecx,0xfde9
  401a1a:	add    rax,r13
  401a1d:	add    r14d,0x1
  401a21:	add    rax,rbp
  401a24:	mov    QWORD PTR [rdx+r15*1],rax
  401a28:	mov    edx,esi
  401a2a:	mov    r8,QWORD PTR [r12+r15*1]
  401a2e:	sub    edx,ebx
  401a30:	mov    QWORD PTR [rsp+0x38],0x0
  401a39:	mov    QWORD PTR [rsp+0x30],0x0
  401a42:	mov    DWORD PTR [rsp+0x28],edx
  401a46:	mov    QWORD PTR [rsp+0x20],rax
  401a4b:	xor    edx,edx
  401a4d:	add    r15,0x8
  401a51:	call   rdi
  401a53:	add    ebx,eax
  401a55:	cmp    r14d,DWORD PTR [rip+0x405dc]        # 0x442038
  401a5c:	jl     0x401a05
  401a5e:	mov    rbp,QWORD PTR [rip+0x405db]        # 0x442040
  401a65:	movsxd r11,r14d
  401a68:	shl    r11,0x3
  401a6c:	mov    QWORD PTR [rbp+r11*1+0x0],0x0
  401a75:	mov    rcx,r12
  401a78:	call   QWORD PTR [rip+0x43412]        # 0x444e90
  401a7e:	mov    eax,DWORD PTR [rip+0x405b4]        # 0x442038
  401a84:	mov    rdi,QWORD PTR [rsp+0x40]
  401a89:	mov    rsi,QWORD PTR [rsp+0x48]
  401a8e:	mov    DWORD PTR [rdi],eax
  401a90:	mov    rax,QWORD PTR [rip+0x405a9]        # 0x442040
  401a97:	mov    QWORD PTR [rsi],rax
  401a9a:	add    rsp,0x58
  401a9e:	pop    rbx
  401a9f:	pop    rsi
  401aa0:	pop    rdi
  401aa1:	pop    rbp
  401aa2:	pop    r12
  401aa4:	pop    r13
  401aa6:	pop    r14
  401aa8:	pop    r15
  401aaa:	ret    
  401aab:	xor    r11d,r11d
  401aae:	jmp    0x401a6c
  401ab0:	mov    rax,QWORD PTR [rip+0x433d9]        # 0x444e90
  401ab7:	mov    rcx,r12
  401aba:	add    rsp,0x58
  401abe:	pop    rbx
  401abf:	pop    rsi
  401ac0:	pop    rdi
  401ac1:	pop    rbp
  401ac2:	pop    r12
  401ac4:	pop    r13
  401ac6:	pop    r14
  401ac8:	pop    r15
  401aca:	rex.W jmp rax
  401acd:	nop    DWORD PTR [rax]
  401ad0:	push   rdi
  401ad1:	push   rsi
  401ad2:	push   rbx
  401ad3:	sub    rsp,0x2c0
  401ada:	lea    rsi,[rip+0x30657]        # 0x432138
  401ae1:	mov    ecx,0x4f
  401ae6:	lea    rbx,[rsp+0x40]
  401aeb:	mov    rdi,rbx
  401aee:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  401af1:	movzx  eax,WORD PTR [rsi]
  401af4:	mov    WORD PTR [rdi],ax
  401af7:	jmp    0x401b0c
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	mov    ecx,0x2d7e
  401b05:	mov    BYTE PTR [rax+0x2],0x2d
  401b09:	mov    WORD PTR [rax],cx
  401b0c:	lea    rdx,[rip+0x305ee]        # 0x432101
  401b13:	mov    rcx,rbx
  401b16:	call   0x42fab8
  401b1b:	test   rax,rax
  401b1e:	jne    0x401b00
  401b20:	jmp    0x401b3c
  401b22:	movabs rsi,0x666e6f632d676b70
  401b2c:	mov    edx,0x6769
  401b31:	mov    BYTE PTR [rax+0xa],0x20
  401b35:	mov    QWORD PTR [rax],rsi
  401b38:	mov    WORD PTR [rax+0x8],dx
  401b3c:	lea    rdx,[rip+0x305c2]        # 0x432105
  401b43:	mov    rcx,rbx
  401b46:	call   0x42fab8
  401b4b:	test   rax,rax
  401b4e:	jne    0x401b22
  401b50:	lea    rdx,[rip+0x305ba]        # 0x432111
  401b57:	mov    rcx,rbx
  401b5a:	call   0x42fab0
  401b5f:	lea    r9,[rip+0x305ad]        # 0x432113
  401b66:	lea    r8,[rip+0x305a9]        # 0x432116
  401b6d:	xor    ecx,ecx
  401b6f:	mov    edx,0x20
  401b74:	mov    QWORD PTR [rsp+0x38],rax
  401b79:	call   0x4226c0
  401b7e:	mov    rax,QWORD PTR [rsp+0x38]
  401b83:	test   rax,rax
  401b86:	je     0x401bca
  401b88:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	mov    QWORD PTR [rsp+0x28],rax
  401b95:	lea    rax,[rip+0x30577]        # 0x432113
  401b9c:	lea    r8,[rip+0x30586]        # 0x432129
  401ba3:	xor    ecx,ecx
  401ba5:	mov    edx,0x20
  401baa:	mov    QWORD PTR [rsp+0x20],rax
  401baf:	mov    r9,rax
  401bb2:	call   0x4226c0
  401bb7:	lea    rdx,[rip+0x30553]        # 0x432111
  401bbe:	xor    ecx,ecx
  401bc0:	call   0x42fab0
  401bc5:	test   rax,rax
  401bc8:	jne    0x401b90
  401bca:	add    rsp,0x2c0
  401bd1:	pop    rbx
  401bd2:	pop    rsi
  401bd3:	pop    rdi
  401bd4:	ret    
  401bd5:	nop
  401bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401be0:	sub    rsp,0x38
  401be4:	lea    r8,[rip+0x307c7]        # 0x4323b2
  401beb:	mov    edx,0x10
  401bf0:	mov    QWORD PTR [rsp+0x58],r9
  401bf5:	lea    r9,[rsp+0x58]
  401bfa:	mov    QWORD PTR [rsp+0x28],r9
  401bff:	call   0x427320
  401c04:	add    rsp,0x38
  401c08:	ret    
  401c09:	nop    DWORD PTR [rax+0x0]
  401c10:	lea    r8,[rip+0x3079e]        # 0x4323b5
  401c17:	lea    rdx,[rip+0x3079f]        # 0x4323bd
  401c1e:	lea    rcx,[rip+0x41a8b]        # 0x4436b0
  401c25:	xor    r9d,r9d
  401c28:	jmp    0x422808
  401c2d:	nop    DWORD PTR [rax]
  401c30:	sub    rsp,0x28
  401c34:	lea    rcx,[rip+0x41a7d]        # 0x4436b8
  401c3b:	call   0x422820
  401c40:	lea    rcx,[rip+0x41a69]        # 0x4436b0
  401c47:	call   0x422820
  401c4c:	lea    rcx,[rip+0x41a6d]        # 0x4436c0
  401c53:	call   0x422820
  401c58:	lea    rcx,[rip+0x41a69]        # 0x4436c8
  401c5f:	call   0x422820
  401c64:	lea    rcx,[rip+0x41a65]        # 0x4436d0
  401c6b:	add    rsp,0x28
  401c6f:	jmp    0x422820
  401c74:	xchg   ax,ax
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c80:	mov    rax,QWORD PTR [rip+0x43251]        # 0x444ed8
  401c87:	lea    rcx,[rip+0x30735]        # 0x4323c3
  401c8e:	rex.W jmp rax
  401c91:	nop    DWORD PTR [rax+rax*1+0x0]
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	mov    QWORD PTR [rip+0x403a1],rcx        # 0x442048
  401ca7:	ret    
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	push   rbx
  401cb1:	sub    rsp,0x20
  401cb5:	mov    rax,QWORD PTR [rip+0x4038c]        # 0x442048
  401cbc:	mov    ebx,ecx
  401cbe:	test   rax,rax
  401cc1:	je     0x401cc5
  401cc3:	call   rax
  401cc5:	mov    ecx,ebx
  401cc7:	call   0x42fbe0
  401ccc:	nop
  401ccd:	nop    DWORD PTR [rax]
  401cd0:	push   r15
  401cd2:	push   r14
  401cd4:	push   r13
  401cd6:	push   r12
  401cd8:	push   rbp
  401cd9:	push   rdi
  401cda:	push   rsi
  401cdb:	push   rbx
  401cdc:	sub    rsp,0x4c8
  401ce3:	xor    eax,eax
  401ce5:	cmp    QWORD PTR [rip+0x40363],0x0        # 0x442050
  401ced:	mov    QWORD PTR [rsp+0x510],rcx
  401cf5:	je     0x401d10
  401cf7:	add    rsp,0x4c8
  401cfe:	pop    rbx
  401cff:	pop    rsi
  401d00:	pop    rdi
  401d01:	pop    rbp
  401d02:	pop    r12
  401d04:	pop    r13
  401d06:	pop    r14
  401d08:	pop    r15
  401d0a:	ret    
  401d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d10:	lea    rbx,[rsp+0x78]
  401d15:	mov    rcx,rbx
  401d18:	call   QWORD PTR [rip+0x432aa]        # 0x444fc8
  401d1e:	mov    rcx,rbx
  401d21:	call   QWORD PTR [rip+0x43289]        # 0x444fb0
  401d27:	mov    r12,rax
  401d2a:	mov    rax,QWORD PTR [rsp+0x510]
  401d32:	test   rax,rax
  401d35:	je     0x4020b0
  401d3b:	cmp    BYTE PTR [rax],0x0
  401d3e:	je     0x4020b0
  401d44:	xor    ebx,ebx
  401d46:	xor    r15d,r15d
  401d49:	lea    r14,[rsp+0x70]
  401d4e:	lea    r13,[rsp+0x68]
  401d53:	lea    rbp,[rsp+0xc0]
  401d5b:	jmp    0x401db8
  401d5d:	nop    DWORD PTR [rax]
  401d60:	mov    rcx,QWORD PTR [rsp+0x70]
  401d65:	mov    r8d,0xa
  401d6b:	mov    rdx,rbp
  401d6e:	call   0x42faa8
  401d73:	mov    DWORD PTR [rip+0x2f35b],eax        # 0x4310d4
  401d79:	mov    rax,QWORD PTR [rsp+0xc0]
  401d81:	cmp    BYTE PTR [rax],0x0
  401d84:	jne    0x4020f4
  401d8a:	mov    rcx,QWORD PTR [rsp+0x70]
  401d8f:	call   0x422770
  401d94:	mov    rcx,QWORD PTR [rsp+0x68]
  401d99:	call   0x422770
  401d9e:	mov    rax,QWORD PTR [rsp+0x510]
  401da6:	test   rax,rax
  401da9:	je     0x401eb5
  401daf:	cmp    BYTE PTR [rax],0x0
  401db2:	je     0x401eb5
  401db8:	lea    r8,[rip+0x3060f]        # 0x4323ce
  401dbf:	lea    rdx,[rip+0x3060a]        # 0x4323d0
  401dc6:	lea    rcx,[rsp+0x510]
  401dce:	xor    r9d,r9d
  401dd1:	mov    QWORD PTR [rsp+0x28],r14
  401dd6:	mov    QWORD PTR [rsp+0x20],r13
  401ddb:	call   0x422630
  401de0:	test   eax,eax
  401de2:	mov    r10d,eax
  401de5:	js     0x401e70
  401deb:	mov    rax,QWORD PTR [rsp+0x510]
  401df3:	cmp    BYTE PTR [rax],0x0
  401df6:	je     0x401e04
  401df8:	add    rax,0x1
  401dfc:	mov    QWORD PTR [rsp+0x510],rax
  401e04:	mov    r9,QWORD PTR [rsp+0x68]
  401e09:	lea    rdi,[rip+0x305fb]        # 0x43240b
  401e10:	mov    ecx,0x5
  401e15:	add    ebx,0x1
  401e18:	mov    rsi,r9
  401e1b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e1d:	je     0x401e50
  401e1f:	lea    rdi,[rip+0x305ea]        # 0x432410
  401e26:	mov    rsi,r9
  401e29:	mov    ecx,0x6
  401e2e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e30:	je     0x401d60
  401e36:	lea    r8,[rip+0x305f4]        # 0x432431
  401e3d:	mov    edx,0x10
  401e42:	xor    ecx,ecx
  401e44:	call   0x4226c0
  401e49:	jmp    0x401d8a
  401e4e:	xchg   ax,ax
  401e50:	mov    rcx,r15
  401e53:	call   0x422770
  401e58:	mov    r15,QWORD PTR [rsp+0x70]
  401e5d:	xor    ecx,ecx
  401e5f:	mov    QWORD PTR [rsp+0x70],0x0
  401e68:	jmp    0x401d8f
  401e6d:	nop    DWORD PTR [rax]
  401e70:	test   ebx,ebx
  401e72:	je     0x401eb5
  401e74:	lea    rbx,[rsp+0x80]
  401e7c:	lea    rdi,[rsp+0x80]
  401e84:	xor    eax,eax
  401e86:	mov    ecx,0x8
  401e8b:	mov    r8d,0x40
  401e91:	rep stos QWORD PTR es:[rdi],rax
  401e94:	mov    rdx,rbx
  401e97:	mov    ecx,r10d
  401e9a:	call   0x422570
  401e9f:	lea    r8,[rip+0x30532]        # 0x4323d8
  401ea6:	mov    r9,rbx
  401ea9:	mov    edx,0x10
  401eae:	xor    ecx,ecx
  401eb0:	call   0x4226c0
  401eb5:	xor    edx,edx
  401eb7:	mov    r8d,0x1
  401ebd:	mov    rcx,rbp
  401ec0:	lea    rbx,[rip+0x304fd]        # 0x4323c4
  401ec7:	call   0x422860
  401ecc:	test   r15,r15
  401ecf:	cmovne rbx,r15
  401ed3:	mov    rsi,QWORD PTR [rip+0x3ba36]        # 0x43d910
  401eda:	nop    WORD PTR [rax+rax*1+0x0]
  401ee0:	movsx  edx,BYTE PTR [rbx]
  401ee3:	test   edx,edx
  401ee5:	je     0x401fb0
  401eeb:	cmp    edx,0x25
  401eee:	jne    0x401f30
  401ef0:	movsx  edx,BYTE PTR [rbx+0x1]
  401ef4:	lea    rdi,[rbx+0x2]
  401ef8:	test   edx,edx
  401efa:	je     0x401fb0
  401f00:	cmp    dl,0x70
  401f03:	je     0x401f93
  401f09:	cmp    dl,0x74
  401f0c:	je     0x401f44
  401f0e:	cmp    dl,0x25
  401f11:	mov    rbx,rdi
  401f14:	jne    0x401ee0
  401f16:	mov    r8d,0x1
  401f1c:	mov    rcx,rbp
  401f1f:	mov    rbx,rdi
  401f22:	call   0x422870
  401f27:	jmp    0x401ee0
  401f29:	nop    DWORD PTR [rax+0x0]
  401f30:	mov    r8d,0x1
  401f36:	mov    rcx,rbp
  401f39:	add    rbx,0x1
  401f3d:	call   0x422870
  401f42:	jmp    0x401ee0
  401f44:	mov    ecx,DWORD PTR [r12]
  401f48:	mov    edx,DWORD PTR [r12+0x10]
  401f4d:	mov    rbx,rdi
  401f50:	mov    eax,DWORD PTR [r12+0x14]
  401f55:	mov    DWORD PTR [rsp+0x38],ecx
  401f59:	mov    ecx,DWORD PTR [r12+0x4]
  401f5e:	lea    r9d,[rdx+0x1]
  401f62:	lea    r8d,[rax+0x76c]
  401f69:	lea    rdx,[rip+0x304e2]        # 0x432452
  401f70:	mov    DWORD PTR [rsp+0x30],ecx
  401f74:	mov    ecx,DWORD PTR [r12+0x8]
  401f79:	mov    DWORD PTR [rsp+0x28],ecx
  401f7d:	mov    ecx,DWORD PTR [r12+0xc]
  401f82:	mov    DWORD PTR [rsp+0x20],ecx
  401f86:	mov    rcx,rbp
  401f89:	call   0x422858
  401f8e:	jmp    0x401ee0
  401f93:	lea    rdx,[rip+0x304b5]        # 0x43244f
  401f9a:	mov    r8,rsi
  401f9d:	mov    rcx,rbp
  401fa0:	mov    rbx,rdi
  401fa3:	call   0x422858
  401fa8:	jmp    0x401ee0
  401fad:	nop    DWORD PTR [rax]
  401fb0:	mov    rcx,r15
  401fb3:	call   0x422770
  401fb8:	mov    eax,DWORD PTR [rsp+0xcc]
  401fbf:	cmp    DWORD PTR [rsp+0xc8],eax
  401fc6:	jae    0x4020d7
  401fcc:	mov    rcx,QWORD PTR [rsp+0xc0]
  401fd4:	lea    rdx,[rip+0x304be]        # 0x432499
  401fdb:	call   0x42fbc0
  401fe0:	test   rax,rax
  401fe3:	mov    QWORD PTR [rip+0x40066],rax        # 0x442050
  401fea:	je     0x402071
  401ff0:	lea    rcx,[rip+0xfffffffffffff5f9]        # 0x4015f0
  401ff7:	call   0x422690
  401ffc:	mov    rax,QWORD PTR [rsp+0xc0]
  402004:	mov    r9,QWORD PTR [rip+0x3b905]        # 0x43d910
  40200b:	lea    r8,[rip+0x304ae]        # 0x4324c0
  402012:	mov    edx,0x20
  402017:	xor    ecx,ecx
  402019:	mov    QWORD PTR [rsp+0x50],rax
  40201e:	mov    eax,DWORD PTR [r12]
  402022:	mov    DWORD PTR [rsp+0x48],eax
  402026:	mov    eax,DWORD PTR [r12+0x4]
  40202b:	mov    DWORD PTR [rsp+0x40],eax
  40202f:	mov    eax,DWORD PTR [r12+0x8]
  402034:	mov    DWORD PTR [rsp+0x38],eax
  402038:	mov    eax,DWORD PTR [r12+0xc]
  40203d:	mov    DWORD PTR [rsp+0x30],eax
  402041:	mov    eax,DWORD PTR [r12+0x10]
  402046:	add    eax,0x1
  402049:	mov    DWORD PTR [rsp+0x28],eax
  40204d:	mov    eax,DWORD PTR [r12+0x14]
  402052:	add    eax,0x76c
  402057:	mov    DWORD PTR [rsp+0x20],eax
  40205b:	call   0x4226c0
  402060:	xor    edx,edx
  402062:	mov    rcx,rbp
  402065:	call   0x422868
  40206a:	xor    eax,eax
  40206c:	jmp    0x401cf7
  402071:	mov    rsi,QWORD PTR [rip+0x42f18]        # 0x444f90
  402078:	call   rsi
  40207a:	mov    eax,DWORD PTR [rax]
  40207c:	neg    eax
  40207e:	mov    ebx,eax
  402080:	call   rsi
  402082:	mov    ecx,DWORD PTR [rax]
  402084:	call   0x42fae8
  402089:	mov    r9,QWORD PTR [rsp+0xc0]
  402091:	lea    r8,[rip+0x30408]        # 0x4324a0
  402098:	mov    QWORD PTR [rsp+0x20],rax
  40209d:	mov    edx,0x10
  4020a2:	xor    ecx,ecx
  4020a4:	call   0x4226c0
  4020a9:	mov    eax,ebx
  4020ab:	jmp    0x401cf7
  4020b0:	lea    rbp,[rsp+0xc0]
  4020b8:	mov    r8d,0x1
  4020be:	xor    edx,edx
  4020c0:	xor    r15d,r15d
  4020c3:	lea    rbx,[rip+0x302fa]        # 0x4323c4
  4020ca:	mov    rcx,rbp
  4020cd:	call   0x422860
  4020d2:	jmp    0x401ed3
  4020d7:	lea    r8,[rip+0x30392]        # 0x432470
  4020de:	mov    edx,0x10
  4020e3:	xor    ecx,ecx
  4020e5:	call   0x4226c0
  4020ea:	mov    eax,0xfffffff4
  4020ef:	jmp    0x401cf7
  4020f4:	lea    r8,[rip+0x3031b]        # 0x432416
  4020fb:	xor    ecx,ecx
  4020fd:	mov    edx,0x8
  402102:	call   0x4226c0
  402107:	mov    ecx,0x1
  40210c:	call   0x401cb0
  402111:	nop
  402112:	nop    DWORD PTR [rax+0x0]
  402116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x38
  402130:	xor    edi,edi
  402132:	xor    ebx,ebx
  402134:	mov    ebp,ecx
  402136:	jmp    0x402143
  402138:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	add    edi,0x1
  402143:	mov    rcx,rbx
  402146:	call   0x4223a0
  40214b:	test   rax,rax
  40214e:	mov    rbx,rax
  402151:	jne    0x402140
  402153:	mov    r12d,edi
  402156:	mov    edx,0x8
  40215b:	mov    rcx,r12
  40215e:	call   0x422840
  402163:	test   rax,rax
  402166:	mov    QWORD PTR [rsp+0x20],rax
  40216b:	je     0x4023a4
  402171:	xor    esi,esi
  402173:	jmp    0x402183
  402175:	mov    rdx,QWORD PTR [rsp+0x20]
  40217a:	mov    eax,esi
  40217c:	add    esi,0x1
  40217f:	mov    QWORD PTR [rdx+rax*8],rbx
  402183:	mov    rcx,rbx
  402186:	call   0x4223a0
  40218b:	test   rax,rax
  40218e:	mov    rbx,rax
  402191:	jne    0x402175
  402193:	cmp    esi,edi
  402195:	jne    0x4023c1
  40219b:	mov    rcx,QWORD PTR [rsp+0x20]
  4021a0:	lea    r9,[rip+0xfffffffffffff419]        # 0x4015c0
  4021a7:	mov    r8d,0x8
  4021ad:	mov    rdx,r12
  4021b0:	call   0x42fb20
  4021b5:	lea    rax,[rip+0x3034b]        # 0x432507
  4021bc:	lea    rdx,[rip+0x3034d]        # 0x432510
  4021c3:	test   ebp,ebp
  4021c5:	lea    rcx,[rip+0x3036c]        # 0x432538
  4021cc:	cmovne rdx,rax
  4021d0:	call   0x401560
  4021d5:	test   esi,esi
  4021d7:	je     0x40236f
  4021dd:	mov    rdi,QWORD PTR [rsp+0x20]
  4021e2:	lea    eax,[rsi-0x1]
  4021e5:	lea    r13,[rip+0x3032d]        # 0x432519
  4021ec:	lea    rsi,[rip+0x30328]        # 0x43251b
  4021f3:	lea    r12,[rip+0x30323]        # 0x43251d
  4021fa:	lea    rax,[rdi+rax*8+0x8]
  4021ff:	mov    r14,rdi
  402202:	mov    QWORD PTR [rsp+0x28],rax
  402207:	nop    WORD PTR [rax+rax*1+0x0]
  402210:	mov    rdi,QWORD PTR [r14]
  402213:	xor    r15d,r15d
  402216:	test   ebp,ebp
  402218:	mov    ebx,DWORD PTR [rdi]
  40221a:	jne    0x402320
  402220:	mov    rcx,r15
  402223:	call   0x422460
  402228:	test   rax,rax
  40222b:	mov    r15,rax
  40222e:	je     0x402360
  402234:	cmp    ebx,DWORD PTR [rax+0x14]
  402237:	jne    0x402220
  402239:	mov    rcx,rax
  40223c:	call   0x422470
  402241:	test   eax,eax
  402243:	je     0x402220
  402245:	mov    eax,DWORD PTR [rdi+0x4]
  402248:	mov    edx,0x3f
  40224d:	cmp    eax,0x4
  402250:	ja     0x40225d
  402252:	lea    rdx,[rip+0x31b60]        # 0x433db9
  402259:	movsx  edx,BYTE PTR [rdx+rax*1]
  40225d:	lea    rcx,[rip+0x303ce]        # 0x432632
  402264:	call   0x401560
  402269:	test   BYTE PTR [r15+0x19],0x10
  40226e:	mov    rcx,rsi
  402271:	cmovne rcx,r13
  402275:	call   0x401560
  40227a:	test   BYTE PTR [r15+0x19],0x20
  40227f:	mov    rcx,rsi
  402282:	cmovne rcx,r12
  402286:	call   0x401560
  40228b:	test   BYTE PTR [r15+0x19],0x2
  402290:	lea    rcx,[rip+0x30288]        # 0x43251f
  402297:	cmove  rcx,rsi
  40229b:	call   0x401560
  4022a0:	test   BYTE PTR [r15+0x18],0x1
  4022a5:	lea    rcx,[rip+0x30275]        # 0x432521
  4022ac:	cmove  rcx,rsi
  4022b0:	call   0x401560
  4022b5:	test   BYTE PTR [r15+0x18],0x2
  4022ba:	lea    rcx,[rip+0x30262]        # 0x432523
  4022c1:	cmove  rcx,rsi
  4022c5:	call   0x401560
  4022ca:	mov    rax,QWORD PTR [r15+0x8]
  4022ce:	mov    rdx,QWORD PTR [r15]
  4022d1:	lea    r8,[rip+0x300eb]        # 0x4323c3
  4022d8:	lea    rcx,[rip+0x30357]        # 0x432636
  4022df:	test   rax,rax
  4022e2:	cmovne r8,rax
  4022e6:	call   0x401560
  4022eb:	mov    rbx,QWORD PTR [rdi+0x8]
  4022ef:	mov    rcx,QWORD PTR [r15]
  4022f2:	mov    rdx,rbx
  4022f5:	call   0x42faf8
  4022fa:	test   eax,eax
  4022fc:	jne    0x402390
  402302:	lea    rcx,[rip+0x30343]        # 0x43264c
  402309:	call   0x401560
  40230e:	test   ebp,ebp
  402310:	mov    ebx,DWORD PTR [rdi]
  402312:	je     0x402220
  402318:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	mov    rcx,r15
  402323:	call   0x422460
  402328:	test   rax,rax
  40232b:	mov    r15,rax
  40232e:	je     0x402360
  402330:	cmp    ebx,DWORD PTR [r15+0x14]
  402334:	jne    0x402320
  402336:	mov    rcx,r15
  402339:	call   0x422468
  40233e:	test   eax,eax
  402340:	jne    0x402245
  402346:	mov    rcx,r15
  402349:	call   0x422460
  40234e:	test   rax,rax
  402351:	mov    r15,rax
  402354:	jne    0x402330
  402356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402360:	add    r14,0x8
  402364:	cmp    r14,QWORD PTR [rsp+0x28]
  402369:	jne    0x402210
  40236f:	mov    rcx,QWORD PTR [rsp+0x20]
  402374:	add    rsp,0x38
  402378:	pop    rbx
  402379:	pop    rsi
  40237a:	pop    rdi
  40237b:	pop    rbp
  40237c:	pop    r12
  40237e:	pop    r13
  402380:	pop    r14
  402382:	pop    r15
  402384:	jmp    0x422770
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	lea    rcx,[rip+0x302a9]        # 0x432640
  402397:	mov    rdx,rbx
  40239a:	call   0x401560
  40239f:	jmp    0x402302
  4023a4:	lea    r8,[rip+0x3017a]        # 0x432525
  4023ab:	xor    ecx,ecx
  4023ad:	mov    edx,0x10
  4023b2:	call   0x4226c0
  4023b7:	mov    ecx,0x1
  4023bc:	call   0x401cb0
  4023c1:	call   0x42fff0
  4023c6:	nop
  4023c7:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	push   rdi
  4023d1:	push   rsi
  4023d2:	push   rbx
  4023d3:	sub    rsp,0x70
  4023d7:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4023dc:	movaps XMMWORD PTR [rsp+0x60],xmm7
  4023e1:	mov    rsi,rdx
  4023e4:	lea    rdx,[rsp+0x48]
  4023e9:	mov    rdi,rcx
  4023ec:	mov    rcx,rsi
  4023ef:	mov    ebx,r8d
  4023f2:	movapd xmm6,xmm3
  4023f6:	movsd  xmm7,QWORD PTR [rsp+0xb0]
  4023ff:	call   0x422548
  402404:	mov    rax,QWORD PTR [rsp+0x48]
  402409:	cmp    BYTE PTR [rax],0x0
  40240c:	jne    0x4024b9
  402412:	ucomisd xmm6,xmm0
  402416:	ja     0x4024b0
  40241c:	ucomisd xmm0,xmm7
  402420:	ja     0x4024b0
  402426:	cmp    ebx,0x400
  40242c:	je     0x402460
  40242e:	add    ebx,0xffffff80
  402431:	jne    0x402447
  402433:	cvttsd2si eax,xmm0
  402437:	pxor   xmm1,xmm1
  40243b:	cvtsi2sd xmm1,eax
  40243f:	ucomisd xmm1,xmm0
  402443:	jp     0x40247f
  402445:	jne    0x40247f
  402447:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40244c:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  402451:	add    rsp,0x70
  402455:	pop    rbx
  402456:	pop    rsi
  402457:	pop    rdi
  402458:	ret    
  402459:	nop    DWORD PTR [rax+0x0]
  402460:	cvttsd2si rax,xmm0
  402465:	pxor   xmm1,xmm1
  402469:	cvtsi2sd xmm1,rax
  40246e:	ucomisd xmm1,xmm0
  402472:	jp     0x402476
  402474:	je     0x402447
  402476:	lea    r8,[rip+0x30283]        # 0x432700
  40247d:	jmp    0x402486
  40247f:	lea    r8,[rip+0x302a2]        # 0x432728
  402486:	movsd  QWORD PTR [rsp+0x30],xmm7
  40248c:	xor    ecx,ecx
  40248e:	mov    QWORD PTR [rsp+0x20],rsi
  402493:	movsd  QWORD PTR [rsp+0x28],xmm6
  402499:	mov    r9,rdi
  40249c:	mov    edx,0x8
  4024a1:	call   0x4226c0
  4024a6:	mov    ecx,0x1
  4024ab:	call   0x401cb0
  4024b0:	lea    r8,[rip+0x30211]        # 0x4326c8
  4024b7:	jmp    0x402486
  4024b9:	lea    r8,[rip+0x301e0]        # 0x4326a0
  4024c0:	jmp    0x402486
  4024c2:	nop    DWORD PTR [rax+0x0]
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	push   rdi
  4024d1:	push   rsi
  4024d2:	push   rbx
  4024d3:	sub    rsp,0x30
  4024d7:	mov    rdi,rcx
  4024da:	lea    rcx,[rsp+0x28]
  4024df:	mov    rbx,rdx
  4024e2:	mov    esi,r8d
  4024e5:	call   0x4225e8
  4024ea:	test   eax,eax
  4024ec:	js     0x4024fb
  4024ee:	mov    rax,QWORD PTR [rsp+0x28]
  4024f3:	add    rsp,0x30
  4024f7:	pop    rbx
  4024f8:	pop    rsi
  4024f9:	pop    rdi
  4024fa:	ret    
  4024fb:	mov    r8d,esi
  4024fe:	mov    rdx,rbx
  402501:	mov    rcx,rdi
  402504:	call   0x430025
  402509:	nop
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	push   r13
  402512:	push   r12
  402514:	push   rbp
  402515:	push   rdi
  402516:	push   rsi
  402517:	push   rbx
  402518:	sub    rsp,0x68
  40251c:	mov    rax,QWORD PTR [rcx]
  40251f:	mov    r12d,DWORD PTR [rsp+0xc0]
  402527:	mov    rbx,rcx
  40252a:	mov    rdi,rdx
  40252d:	mov    ebp,r8d
  402530:	mov    esi,r9d
  402533:	test   rax,rax
  402536:	je     0x4025e0
  40253c:	test   r12d,r12d
  40253f:	jne    0x402600
  402545:	mov    ecx,0x1
  40254a:	lea    r12,[rsp+0x20]
  40254f:	jmp    0x402561
  402551:	add    rbx,0x28
  402555:	mov    rax,QWORD PTR [rbx]
  402558:	test   rax,rax
  40255b:	je     0x4025e0
  402561:	mov    r8d,DWORD PTR [rbx+0x8]
  402565:	mov    edx,r8d
  402568:	and    edx,ebp
  40256a:	cmp    edx,ebp
  40256c:	jne    0x402551
  40256e:	test   r8d,esi
  402571:	jne    0x402551
  402573:	test   ecx,ecx
  402575:	jne    0x4026a4
  40257b:	mov    r8d,0x40
  402581:	mov    rdx,rax
  402584:	mov    rcx,r12
  402587:	call   0x422558
  40258c:	cmp    QWORD PTR [rbx+0x20],0x0
  402591:	je     0x4025ba
  402593:	lea    rdx,[rip+0x2fa68]        # 0x432002
  40259a:	mov    r8d,0x40
  4025a0:	mov    rcx,r12
  4025a3:	call   0x422568
  4025a8:	mov    rdx,QWORD PTR [rbx+0x20]
  4025ac:	mov    r8d,0x40
  4025b2:	mov    rcx,r12
  4025b5:	call   0x422568
  4025ba:	mov    r8,QWORD PTR [rbx+0x18]
  4025be:	lea    rcx,[rip+0x30185]        # 0x43274a
  4025c5:	add    rbx,0x28
  4025c9:	mov    rdx,r12
  4025cc:	call   0x401560
  4025d1:	mov    rax,QWORD PTR [rbx]
  4025d4:	xor    ecx,ecx
  4025d6:	test   rax,rax
  4025d9:	jne    0x402561
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	lea    rcx,[rip+0x30065]        # 0x43264c
  4025e7:	call   0x401560
  4025ec:	nop
  4025ed:	add    rsp,0x68
  4025f1:	pop    rbx
  4025f2:	pop    rsi
  4025f3:	pop    rdi
  4025f4:	pop    rbp
  4025f5:	pop    r12
  4025f7:	pop    r13
  4025f9:	ret    
  4025fa:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    r8d,0x1
  402606:	lea    r13,[rsp+0x20]
  40260b:	jmp    0x40261c
  40260d:	nop    DWORD PTR [rax]
  402610:	add    rbx,0x28
  402614:	mov    rax,QWORD PTR [rbx]
  402617:	test   rax,rax
  40261a:	je     0x4025e0
  40261c:	mov    edx,DWORD PTR [rbx+0x8]
  40261f:	mov    ecx,edx
  402621:	and    ecx,ebp
  402623:	cmp    ecx,ebp
  402625:	jne    0x402610
  402627:	test   edx,r12d
  40262a:	je     0x402610
  40262c:	test   edx,esi
  40262e:	jne    0x402610
  402630:	test   r8d,r8d
  402633:	jne    0x402690
  402635:	mov    r8d,0x40
  40263b:	mov    rdx,rax
  40263e:	mov    rcx,r13
  402641:	call   0x422558
  402646:	cmp    QWORD PTR [rbx+0x20],0x0
  40264b:	je     0x402674
  40264d:	lea    rdx,[rip+0x2f9ae]        # 0x432002
  402654:	mov    r8d,0x40
  40265a:	mov    rcx,r13
  40265d:	call   0x422568
  402662:	mov    rdx,QWORD PTR [rbx+0x20]
  402666:	mov    r8d,0x40
  40266c:	mov    rcx,r13
  40266f:	call   0x422568
  402674:	mov    r8,QWORD PTR [rbx+0x18]
  402678:	lea    rcx,[rip+0x300cb]        # 0x43274a
  40267f:	mov    rdx,r13
  402682:	call   0x401560
  402687:	xor    r8d,r8d
  40268a:	jmp    0x402610
  40268c:	nop    DWORD PTR [rax+0x0]
  402690:	lea    rcx,[rip+0x300bf]        # 0x432756
  402697:	mov    rdx,rdi
  40269a:	call   0x401560
  40269f:	mov    rax,QWORD PTR [rbx]
  4026a2:	jmp    0x402635
  4026a4:	lea    rcx,[rip+0x300ab]        # 0x432756
  4026ab:	mov    rdx,rdi
  4026ae:	call   0x401560
  4026b3:	mov    rax,QWORD PTR [rbx]
  4026b6:	jmp    0x40257b
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	push   r15
  4026c2:	push   r14
  4026c4:	push   r13
  4026c6:	push   r12
  4026c8:	push   rbp
  4026c9:	push   rdi
  4026ca:	push   rsi
  4026cb:	push   rbx
  4026cc:	sub    rsp,0xc8
  4026d3:	cmp    QWORD PTR [rcx+0x10],0x0
  4026d8:	mov    QWORD PTR [rsp+0x110],rcx
  4026e0:	mov    ebp,edx
  4026e2:	je     0x40270d
  4026e4:	lea    rcx,[rsp+0x110]
  4026ec:	mov    r8d,edx
  4026ef:	xor    r9d,r9d
  4026f2:	xor    edx,edx
  4026f4:	call   0x422600
  4026f9:	lea    rcx,[rip+0x2ff4c]        # 0x43264c
  402700:	call   0x401560
  402705:	mov    rcx,QWORD PTR [rsp+0x110]
  40270d:	lea    rax,[rsp+0x80]
  402715:	mov    QWORD PTR [rsp+0x28],0x0
  40271e:	mov    QWORD PTR [rsp+0x48],rax
  402723:	lea    rax,[rsp+0x88]
  40272b:	mov    QWORD PTR [rsp+0x50],rax
  402730:	lea    rax,[rsp+0x90]
  402738:	mov    QWORD PTR [rsp+0x58],rax
  40273d:	lea    rax,[rsp+0x98]
  402745:	mov    QWORD PTR [rsp+0x60],rax
  40274a:	lea    rax,[rsp+0xa0]
  402752:	mov    QWORD PTR [rsp+0x68],rax
  402757:	lea    rax,[rsp+0xa8]
  40275f:	mov    QWORD PTR [rsp+0x70],rax
  402764:	mov    rdx,QWORD PTR [rsp+0x28]
  402769:	call   0x422650
  40276e:	test   rax,rax
  402771:	mov    QWORD PTR [rsp+0x28],rax
  402776:	je     0x402ad7
  40277c:	cmp    QWORD PTR [rax+0x10],0x0
  402781:	mov    QWORD PTR [rsp+0x80],rax
  402789:	mov    rcx,rax
  40278c:	je     0x4027b4
  40278e:	mov    rcx,QWORD PTR [rsp+0x48]
  402793:	xor    r9d,r9d
  402796:	mov    r8d,ebp
  402799:	xor    edx,edx
  40279b:	call   0x422600
  4027a0:	lea    rcx,[rip+0x2fea5]        # 0x43264c
  4027a7:	call   0x401560
  4027ac:	mov    rcx,QWORD PTR [rsp+0x80]
  4027b4:	lea    rax,[rsp+0xb0]
  4027bc:	mov    QWORD PTR [rsp+0x30],0x0
  4027c5:	mov    QWORD PTR [rsp+0x40],rax
  4027ca:	mov    rdx,QWORD PTR [rsp+0x30]
  4027cf:	call   0x422650
  4027d4:	test   rax,rax
  4027d7:	mov    QWORD PTR [rsp+0x30],rax
  4027dc:	je     0x402aca
  4027e2:	cmp    QWORD PTR [rax+0x10],0x0
  4027e7:	mov    QWORD PTR [rsp+0x88],rax
  4027ef:	mov    rcx,rax
  4027f2:	je     0x40281a
  4027f4:	mov    rcx,QWORD PTR [rsp+0x50]
  4027f9:	xor    r9d,r9d
  4027fc:	mov    r8d,ebp
  4027ff:	xor    edx,edx
  402801:	call   0x422600
  402806:	lea    rcx,[rip+0x2fe3f]        # 0x43264c
  40280d:	call   0x401560
  402812:	mov    rcx,QWORD PTR [rsp+0x88]
  40281a:	lea    rsi,[rsp+0xb8]
  402822:	mov    QWORD PTR [rsp+0x38],0x0
  40282b:	mov    rdx,QWORD PTR [rsp+0x38]
  402830:	call   0x422650
  402835:	test   rax,rax
  402838:	mov    QWORD PTR [rsp+0x38],rax
  40283d:	je     0x402abd
  402843:	cmp    QWORD PTR [rax+0x10],0x0
  402848:	mov    QWORD PTR [rsp+0x90],rax
  402850:	mov    rcx,rax
  402853:	je     0x40287b
  402855:	mov    rcx,QWORD PTR [rsp+0x58]
  40285a:	xor    r9d,r9d
  40285d:	mov    r8d,ebp
  402860:	xor    edx,edx
  402862:	call   0x422600
  402867:	lea    rcx,[rip+0x2fdde]        # 0x43264c
  40286e:	call   0x401560
  402873:	mov    rcx,QWORD PTR [rsp+0x90]
  40287b:	xor    r12d,r12d
  40287e:	mov    rdx,r12
  402881:	call   0x422650
  402886:	test   rax,rax
  402889:	mov    r12,rax
  40288c:	je     0x402ab0
  402892:	cmp    QWORD PTR [r12+0x10],0x0
  402898:	mov    QWORD PTR [rsp+0x98],r12
  4028a0:	mov    rcx,r12
  4028a3:	je     0x4028cb
  4028a5:	mov    rcx,QWORD PTR [rsp+0x60]
  4028aa:	xor    r9d,r9d
  4028ad:	mov    r8d,ebp
  4028b0:	xor    edx,edx
  4028b2:	call   0x422600
  4028b7:	lea    rcx,[rip+0x2fd8e]        # 0x43264c
  4028be:	call   0x401560
  4028c3:	mov    rcx,QWORD PTR [rsp+0x98]
  4028cb:	xor    r13d,r13d
  4028ce:	mov    QWORD PTR [rsp+0x78],r12
  4028d3:	mov    r15,QWORD PTR [rsp+0x40]
  4028d8:	mov    rdx,r13
  4028db:	call   0x422650
  4028e0:	test   rax,rax
  4028e3:	mov    r13,rax
  4028e6:	je     0x402a9e
  4028ec:	cmp    QWORD PTR [r13+0x10],0x0
  4028f1:	mov    QWORD PTR [rsp+0xa0],r13
  4028f9:	mov    rcx,r13
  4028fc:	je     0x402924
  4028fe:	mov    rcx,QWORD PTR [rsp+0x68]
  402903:	xor    r9d,r9d
  402906:	mov    r8d,ebp
  402909:	xor    edx,edx
  40290b:	call   0x422600
  402910:	lea    rcx,[rip+0x2fd35]        # 0x43264c
  402917:	call   0x401560
  40291c:	mov    rcx,QWORD PTR [rsp+0xa0]
  402924:	xor    r14d,r14d
  402927:	mov    rdx,r14
  40292a:	call   0x422650
  40292f:	test   rax,rax
  402932:	mov    r14,rax
  402935:	je     0x402a82
  40293b:	cmp    QWORD PTR [r14+0x10],0x0
  402940:	mov    QWORD PTR [rsp+0xa8],r14
  402948:	mov    rcx,r14
  40294b:	je     0x402973
  40294d:	mov    rcx,QWORD PTR [rsp+0x70]
  402952:	xor    r9d,r9d
  402955:	mov    r8d,ebp
  402958:	xor    edx,edx
  40295a:	call   0x422600
  40295f:	lea    rcx,[rip+0x2fce6]        # 0x43264c
  402966:	call   0x401560
  40296b:	mov    rcx,QWORD PTR [rsp+0xa8]
  402973:	xor    r12d,r12d
  402976:	mov    rdx,r12
  402979:	call   0x422650
  40297e:	test   rax,rax
  402981:	mov    r12,rax
  402984:	je     0x402a66
  40298a:	cmp    QWORD PTR [r12+0x10],0x0
  402990:	mov    QWORD PTR [rsp+0xb0],r12
  402998:	mov    rcx,r12
  40299b:	je     0x4029c1
  40299d:	xor    r9d,r9d
  4029a0:	mov    r8d,ebp
  4029a3:	xor    edx,edx
  4029a5:	mov    rcx,r15
  4029a8:	call   0x422600
  4029ad:	lea    rcx,[rip+0x2fc98]        # 0x43264c
  4029b4:	call   0x401560
  4029b9:	mov    rcx,QWORD PTR [rsp+0xb0]
  4029c1:	xor    edi,edi
  4029c3:	mov    rdx,rdi
  4029c6:	call   0x422650
  4029cb:	test   rax,rax
  4029ce:	mov    rdi,rax
  4029d1:	je     0x402a4a
  4029d3:	cmp    QWORD PTR [rdi+0x10],0x0
  4029d8:	mov    QWORD PTR [rsp+0xb8],rdi
  4029e0:	mov    rcx,rdi
  4029e3:	je     0x402a09
  4029e5:	xor    r9d,r9d
  4029e8:	mov    r8d,ebp
  4029eb:	xor    edx,edx
  4029ed:	mov    rcx,rsi
  4029f0:	call   0x422600
  4029f5:	lea    rcx,[rip+0x2fc50]        # 0x43264c
  4029fc:	call   0x401560
  402a01:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a09:	xor    ebx,ebx
  402a0b:	jmp    0x402a22
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rcx,rbx
  402a13:	mov    edx,ebp
  402a15:	call   0x4026c0
  402a1a:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a22:	mov    rdx,rbx
  402a25:	call   0x422650
  402a2a:	test   rax,rax
  402a2d:	mov    rbx,rax
  402a30:	jne    0x402a10
  402a32:	mov    rcx,QWORD PTR [rsp+0xb0]
  402a3a:	mov    rdx,rdi
  402a3d:	call   0x422650
  402a42:	test   rax,rax
  402a45:	mov    rdi,rax
  402a48:	jne    0x4029d3
  402a4a:	mov    rcx,QWORD PTR [rsp+0xa8]
  402a52:	mov    rdx,r12
  402a55:	call   0x422650
  402a5a:	test   rax,rax
  402a5d:	mov    r12,rax
  402a60:	jne    0x40298a
  402a66:	mov    rcx,QWORD PTR [rsp+0xa0]
  402a6e:	mov    rdx,r14
  402a71:	call   0x422650
  402a76:	test   rax,rax
  402a79:	mov    r14,rax
  402a7c:	jne    0x40293b
  402a82:	mov    rcx,QWORD PTR [rsp+0x98]
  402a8a:	mov    rdx,r13
  402a8d:	call   0x422650
  402a92:	test   rax,rax
  402a95:	mov    r13,rax
  402a98:	jne    0x4028ec
  402a9e:	mov    r12,QWORD PTR [rsp+0x78]
  402aa3:	mov    rcx,QWORD PTR [rsp+0x90]
  402aab:	jmp    0x40287e
  402ab0:	mov    rcx,QWORD PTR [rsp+0x88]
  402ab8:	jmp    0x40282b
  402abd:	mov    rcx,QWORD PTR [rsp+0x80]
  402ac5:	jmp    0x4027ca
  402aca:	mov    rcx,QWORD PTR [rsp+0x110]
  402ad2:	jmp    0x402764
  402ad7:	add    rsp,0xc8
  402ade:	pop    rbx
  402adf:	pop    rsi
  402ae0:	pop    rdi
  402ae1:	pop    rbp
  402ae2:	pop    r12
  402ae4:	pop    r13
  402ae6:	pop    r14
  402ae8:	pop    r15
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	push   rdi
  402af1:	push   rsi
  402af2:	push   rbx
  402af3:	sub    rsp,0xa0
  402afa:	mov    rdi,rcx
  402afd:	call   0x422468
  402b02:	mov    rdx,QWORD PTR [rdi+0x8]
  402b06:	lea    r9,[rip+0x2f8b6]        # 0x4323c3
  402b0d:	mov    r8,QWORD PTR [rdi]
  402b10:	lea    rcx,[rip+0x2fc53]        # 0x43276a
  402b17:	test   rdx,rdx
  402b1a:	cmovne r9,rdx
  402b1e:	test   eax,eax
  402b20:	lea    rdx,[rip+0x2fc3b]        # 0x432762
  402b27:	lea    rax,[rip+0x2fc2c]        # 0x43275a
  402b2e:	cmovne rdx,rax
  402b32:	call   0x401560
  402b37:	cmp    DWORD PTR [rdi+0x10],0x1
  402b3b:	jbe    0x402d00
  402b41:	mov    rbx,QWORD PTR [rdi+0x20]
  402b45:	test   rbx,rbx
  402b48:	je     0x402b86
  402b4a:	lea    rcx,[rip+0x2fc62]        # 0x4327b3
  402b51:	call   0x401560
  402b56:	mov    edx,DWORD PTR [rbx]
  402b58:	test   edx,edx
  402b5a:	je     0x402b7a
  402b5c:	nop    DWORD PTR [rax+0x0]
  402b60:	mov    r8d,DWORD PTR [rbx+0x4]
  402b64:	lea    rcx,[rip+0x2fc62]        # 0x4327cd
  402b6b:	add    rbx,0x8
  402b6f:	call   0x401560
  402b74:	mov    edx,DWORD PTR [rbx]
  402b76:	test   edx,edx
  402b78:	jne    0x402b60
  402b7a:	lea    rcx,[rip+0x2facb]        # 0x43264c
  402b81:	call   0x401560
  402b86:	mov    rbx,QWORD PTR [rdi+0x28]
  402b8a:	test   rbx,rbx
  402b8d:	je     0x402bcd
  402b8f:	lea    rcx,[rip+0x2fc3e]        # 0x4327d4
  402b96:	call   0x401560
  402b9b:	mov    ecx,DWORD PTR [rbx]
  402b9d:	cmp    ecx,0xffffffff
  402ba0:	je     0x402bc1
  402ba2:	call   0x422700
  402ba7:	lea    rcx,[rip+0x2fc43]        # 0x4327f1
  402bae:	add    rbx,0x4
  402bb2:	mov    rdx,rax
  402bb5:	call   0x401560
  402bba:	mov    ecx,DWORD PTR [rbx]
  402bbc:	cmp    ecx,0xffffffff
  402bbf:	jne    0x402ba2
  402bc1:	lea    rcx,[rip+0x2fa84]        # 0x43264c
  402bc8:	call   0x401560
  402bcd:	mov    rsi,QWORD PTR [rdi+0x30]
  402bd1:	test   rsi,rsi
  402bd4:	je     0x402c2b
  402bd6:	lea    rcx,[rip+0x2fc18]        # 0x4327f5
  402bdd:	lea    rbx,[rsp+0x20]
  402be2:	call   0x401560
  402be7:	mov    r9d,DWORD PTR [rsi]
  402bea:	test   r9d,r9d
  402bed:	je     0x402c1f
  402bef:	nop
  402bf0:	lea    r8,[rip+0x2f7bb]        # 0x4323b2
  402bf7:	mov    edx,0x10
  402bfc:	mov    rcx,rbx
  402bff:	add    rsi,0x4
  402c03:	call   0x401be0
  402c08:	lea    rcx,[rip+0x2fbe2]        # 0x4327f1
  402c0f:	mov    rdx,rbx
  402c12:	call   0x401560
  402c17:	mov    r9d,DWORD PTR [rsi]
  402c1a:	test   r9d,r9d
  402c1d:	jne    0x402bf0
  402c1f:	lea    rcx,[rip+0x2fa26]        # 0x43264c
  402c26:	call   0x401560
  402c2b:	mov    rbx,QWORD PTR [rdi+0x38]
  402c2f:	test   rbx,rbx
  402c32:	je     0x402c7b
  402c34:	lea    rcx,[rip+0x2fbd6]        # 0x432811
  402c3b:	call   0x401560
  402c40:	mov    ecx,DWORD PTR [rbx]
  402c42:	cmp    ecx,0xffffffff
  402c45:	je     0x402c6f
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	call   0x4226f0
  402c55:	lea    rcx,[rip+0x2fb95]        # 0x4327f1
  402c5c:	add    rbx,0x4
  402c60:	mov    rdx,rax
  402c63:	call   0x401560
  402c68:	mov    ecx,DWORD PTR [rbx]
  402c6a:	cmp    ecx,0xffffffff
  402c6d:	jne    0x402c50
  402c6f:	lea    rcx,[rip+0x2f9d6]        # 0x43264c
  402c76:	call   0x401560
  402c7b:	mov    rsi,QWORD PTR [rdi+0x40]
  402c7f:	test   rsi,rsi
  402c82:	je     0x402cd7
  402c84:	lea    rcx,[rip+0x2fba5]        # 0x432830
  402c8b:	lea    rbx,[rsp+0x20]
  402c90:	call   0x401560
  402c95:	mov    r9,QWORD PTR [rsi]
  402c98:	test   r9,r9
  402c9b:	je     0x402ccb
  402c9d:	nop    DWORD PTR [rax]
  402ca0:	xor    r8d,r8d
  402ca3:	mov    edx,0x80
  402ca8:	mov    rcx,rbx
  402cab:	call   0x422740
  402cb0:	lea    rcx,[rip+0x2fb3a]        # 0x4327f1
  402cb7:	add    rsi,0x8
  402cbb:	mov    rdx,rbx
  402cbe:	call   0x401560
  402cc3:	mov    r9,QWORD PTR [rsi]
  402cc6:	test   r9,r9
  402cc9:	jne    0x402ca0
  402ccb:	lea    rcx,[rip+0x2f97a]        # 0x43264c
  402cd2:	call   0x401560
  402cd7:	mov    rcx,QWORD PTR [rdi+0x50]
  402cdb:	test   rcx,rcx
  402cde:	je     0x402ceb
  402ce0:	mov    edx,0x3
  402ce5:	call   0x4026c0
  402cea:	nop
  402ceb:	add    rsp,0xa0
  402cf2:	pop    rbx
  402cf3:	pop    rsi
  402cf4:	pop    rdi
  402cf5:	ret    
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	lea    rcx,[rip+0x2fa70]        # 0x432777
  402d07:	call   0x401560
  402d0c:	mov    eax,DWORD PTR [rdi+0x18]
  402d0f:	and    eax,0x3000
  402d14:	cmp    eax,0x2000
  402d19:	je     0x402d62
  402d1b:	cmp    eax,0x3000
  402d20:	je     0x402d54
  402d22:	cmp    eax,0x1000
  402d27:	je     0x402d46
  402d29:	lea    rcx,[rip+0x2fa80]        # 0x4327b0
  402d30:	call   0x401560
  402d35:	lea    rcx,[rip+0x2f910]        # 0x43264c
  402d3c:	call   0x401560
  402d41:	jmp    0x402b41
  402d46:	lea    rcx,[rip+0x2fa57]        # 0x4327a4
  402d4d:	call   0x401560
  402d52:	jmp    0x402d35
  402d54:	lea    rcx,[rip+0x2fa39]        # 0x432794
  402d5b:	call   0x401560
  402d60:	jmp    0x402d35
  402d62:	lea    rcx,[rip+0x2fa41]        # 0x4327aa
  402d69:	call   0x401560
  402d6e:	jmp    0x402d35
  402d70:	push   r13
  402d72:	push   r12
  402d74:	push   rbp
  402d75:	push   rdi
  402d76:	push   rsi
  402d77:	push   rbx
  402d78:	sub    rsp,0x38
  402d7c:	test   rcx,rcx
  402d7f:	je     0x402ec7
  402d85:	test   edx,edx
  402d87:	mov    edi,edx
  402d89:	mov    rbp,rcx
  402d8c:	jne    0x402db0
  402d8e:	call   0x422370
  402d93:	mov    rbx,rax
  402d96:	test   rbx,rbx
  402d99:	je     0x402dbd
  402d9b:	mov    rcx,rbx
  402d9e:	add    rsp,0x38
  402da2:	pop    rbx
  402da3:	pop    rsi
  402da4:	pop    rdi
  402da5:	pop    rbp
  402da6:	pop    r12
  402da8:	pop    r13
  402daa:	jmp    0x402af0
  402daf:	nop
  402db0:	call   0x422360
  402db5:	mov    rbx,rax
  402db8:	test   rbx,rbx
  402dbb:	jne    0x402d9b
  402dbd:	mov    rcx,rbp
  402dc0:	xor    r12d,r12d
  402dc3:	call   0x4223a8
  402dc8:	test   rax,rax
  402dcb:	mov    r13,rax
  402dce:	je     0x402ea5
  402dd4:	test   edi,edi
  402dd6:	mov    esi,DWORD PTR [r13+0x0]
  402dda:	jne    0x402e20
  402ddc:	nop    DWORD PTR [rax+0x0]
  402de0:	mov    rcx,rbx
  402de3:	call   0x422460
  402de8:	test   rax,rax
  402deb:	mov    rbx,rax
  402dee:	je     0x402e70
  402df4:	cmp    esi,DWORD PTR [rax+0x14]
  402df7:	jne    0x402de0
  402df9:	mov    rcx,rax
  402dfc:	call   0x422470
  402e01:	test   eax,eax
  402e03:	je     0x402de0
  402e05:	mov    rcx,rbx
  402e08:	mov    r12d,0x1
  402e0e:	call   0x402af0
  402e13:	test   edi,edi
  402e15:	mov    esi,DWORD PTR [r13+0x0]
  402e19:	je     0x402de0
  402e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	mov    rcx,rbx
  402e23:	call   0x422460
  402e28:	test   rax,rax
  402e2b:	mov    rbx,rax
  402e2e:	je     0x402e51
  402e30:	cmp    esi,DWORD PTR [rbx+0x14]
  402e33:	jne    0x402e20
  402e35:	mov    rcx,rbx
  402e38:	call   0x422468
  402e3d:	test   eax,eax
  402e3f:	jne    0x402e05
  402e41:	mov    rcx,rbx
  402e44:	call   0x422460
  402e49:	test   rax,rax
  402e4c:	mov    rbx,rax
  402e4f:	jne    0x402e30
  402e51:	test   r12d,r12d
  402e54:	lea    rax,[rip+0x2f9f4]        # 0x43284f
  402e5b:	je     0x402e7c
  402e5d:	add    rsp,0x38
  402e61:	pop    rbx
  402e62:	pop    rsi
  402e63:	pop    rdi
  402e64:	pop    rbp
  402e65:	pop    r12
  402e67:	pop    r13
  402e69:	ret    
  402e6a:	nop    WORD PTR [rax+rax*1+0x0]
  402e70:	test   r12d,r12d
  402e73:	lea    rax,[rip+0x2f9de]        # 0x432858
  402e7a:	jne    0x402e98
  402e7c:	lea    r8,[rip+0x2f9fd]        # 0x432880
  402e83:	mov    QWORD PTR [rsp+0x20],rax
  402e88:	mov    r9,rbp
  402e8b:	mov    edx,0x10
  402e90:	xor    ecx,ecx
  402e92:	call   0x4226c0
  402e97:	nop
  402e98:	add    rsp,0x38
  402e9c:	pop    rbx
  402e9d:	pop    rsi
  402e9e:	pop    rdi
  402e9f:	pop    rbp
  402ea0:	pop    r12
  402ea2:	pop    r13
  402ea4:	ret    
  402ea5:	lea    r8,[rip+0x2fa5c]        # 0x432908
  402eac:	mov    r9,rbp
  402eaf:	mov    edx,0x10
  402eb4:	xor    ecx,ecx
  402eb6:	add    rsp,0x38
  402eba:	pop    rbx
  402ebb:	pop    rsi
  402ebc:	pop    rdi
  402ebd:	pop    rbp
  402ebe:	pop    r12
  402ec0:	pop    r13
  402ec2:	jmp    0x4226c0
  402ec7:	lea    r8,[rip+0x2f993]        # 0x432861
  402ece:	mov    edx,0x10
  402ed3:	add    rsp,0x38
  402ed7:	pop    rbx
  402ed8:	pop    rsi
  402ed9:	pop    rdi
  402eda:	pop    rbp
  402edb:	pop    r12
  402edd:	pop    r13
  402edf:	jmp    0x4226c0
  402ee4:	xchg   ax,ax
  402ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ef0:	push   r15
  402ef2:	push   r14
  402ef4:	push   r13
  402ef6:	push   r12
  402ef8:	push   rbp
  402ef9:	push   rdi
  402efa:	push   rsi
  402efb:	push   rbx
  402efc:	sub    rsp,0x98
  402f03:	mov    rbp,rdx
  402f06:	mov    QWORD PTR [rsp+0xe0],rcx
  402f0e:	mov    edx,0x3a
  402f13:	mov    rcx,rbp
  402f16:	mov    r13,r8
  402f19:	mov    rsi,r9
  402f1c:	call   0x42fb00
  402f21:	test   rax,rax
  402f24:	mov    r14,rax
  402f27:	je     0x403220
  402f2d:	mov    edi,eax
  402f2f:	sub    edi,ebp
  402f31:	mov    r12,QWORD PTR [rsi]
  402f34:	test   r12,r12
  402f37:	je     0x4033a0
  402f3d:	movsxd rdi,edi
  402f40:	mov    rbx,rsi
  402f43:	mov    r15,r12
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	mov    r8,rdi
  402f53:	mov    rdx,r15
  402f56:	mov    rcx,rbp
  402f59:	call   0x42fac8
  402f5e:	test   eax,eax
  402f60:	jne    0x402f73
  402f62:	mov    rcx,r15
  402f65:	call   0x42fad8
  402f6a:	cmp    rax,rdi
  402f6d:	je     0x402ff1
  402f73:	add    rbx,0x28
  402f77:	mov    r15,QWORD PTR [rbx]
  402f7a:	test   r15,r15
  402f7d:	jne    0x402f50
  402f7f:	cmp    BYTE PTR [rbp+0x0],0x6e
  402f83:	je     0x4032f0
  402f89:	test   BYTE PTR [rbx+0x8],0x2
  402f8d:	lea    rax,[rip+0x2f99d]        # 0x432931
  402f94:	cmovne r13,rax
  402f98:	test   r12,r12
  402f9b:	je     0x402fd1
  402f9d:	mov    rbx,rsi
  402fa0:	lea    rsi,[rip+0x2f98e]        # 0x432935
  402fa7:	mov    rdi,r12
  402faa:	mov    ecx,0x7
  402faf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fb1:	jne    0x402fc5
  402fb3:	mov    rcx,r12
  402fb6:	call   0x42fad8
  402fbb:	cmp    rax,0x7
  402fbf:	je     0x4033a8
  402fc5:	add    rbx,0x28
  402fc9:	mov    r12,QWORD PTR [rbx]
  402fcc:	test   r12,r12
  402fcf:	jne    0x402fa0
  402fd1:	lea    r8,[rip+0x2f965]        # 0x43293d
  402fd8:	mov    r9,rbp
  402fdb:	mov    edx,0x10
  402fe0:	xor    ecx,ecx
  402fe2:	call   0x4226c0
  402fe7:	mov    eax,0xffffffea
  402fec:	jmp    0x40316d
  402ff1:	mov    edx,DWORD PTR [rbx+0x8]
  402ff4:	test   dl,0x2
  402ff7:	jne    0x4032e0
  402ffd:	test   r13,r13
  403000:	mov    edx,DWORD PTR [rbx+0x8]
  403003:	jne    0x40300e
  403005:	test   dl,0x1
  403008:	jne    0x403377
  40300e:	test   dh,0xc0
  403011:	jne    0x403090
  403013:	mov    eax,edx
  403015:	and    dh,0x80
  403018:	mov    rsi,QWORD PTR [rbx+0x10]
  40301c:	jne    0x4030a7
  403022:	test   al,0x8
  403024:	jne    0x40313f
  40302a:	test   BYTE PTR [rbx+0x8],0x82
  40302e:	jne    0x403181
  403034:	test   ah,0x4
  403037:	jne    0x403230
  40303d:	test   eax,0x10000
  403042:	jne    0x403291
  403048:	test   ah,0x1
  40304b:	jne    0x4031e8
  403051:	test   eax,0x20000
  403056:	jne    0x4032b3
  40305c:	mov    r9,QWORD PTR [rbx+0x10]
  403060:	test   r9,r9
  403063:	je     0x403161
  403069:	mov    r8,r13
  40306c:	mov    rdx,rbp
  40306f:	mov    rcx,QWORD PTR [rsp+0xe0]
  403077:	call   r9
  40307a:	test   eax,eax
  40307c:	mov    esi,eax
  40307e:	js     0x4033b6
  403084:	mov    eax,DWORD PTR [rbx+0x8]
  403087:	jmp    0x403161
  40308c:	nop    DWORD PTR [rax+0x0]
  403090:	mov    rsi,QWORD PTR [rsp+0xe0]
  403098:	mov    eax,edx
  40309a:	add    rsi,QWORD PTR [rbx+0x10]
  40309e:	and    dh,0x80
  4030a1:	je     0x403022
  4030a7:	mov    eax,DWORD PTR [rsi+0x8]
  4030aa:	mov    rcx,QWORD PTR [rsi]
  4030ad:	lea    edi,[rax+0x1]
  4030b0:	cmp    edi,0x7fffffe
  4030b6:	jg     0x403465
  4030bc:	movsxd rdx,edi
  4030bf:	mov    r8d,0x10
  4030c5:	call   0x4225b8
  4030ca:	test   rax,rax
  4030cd:	mov    r12,rax
  4030d0:	je     0x40341f
  4030d6:	mov    edx,DWORD PTR [rsi+0x8]
  4030d9:	mov    r8d,edi
  4030dc:	sub    r8d,edx
  4030df:	shl    edx,0x4
  4030e2:	shl    r8d,0x4
  4030e6:	movsxd rcx,edx
  4030e9:	xor    edx,edx
  4030eb:	add    rcx,rax
  4030ee:	movsxd r8,r8d
  4030f1:	call   0x42fb30
  4030f6:	lea    rax,[r14+0x1]
  4030fa:	lea    rcx,[rip+0x2f2c2]        # 0x4323c3
  403101:	test   r14,r14
  403104:	mov    DWORD PTR [rsi+0x8],edi
  403107:	mov    QWORD PTR [rsi],r12
  40310a:	cmovne rcx,rax
  40310e:	call   0x422578
  403113:	test   rax,rax
  403116:	je     0x403401
  40311c:	movsxd rdx,DWORD PTR [rsi+0x8]
  403120:	mov    rcx,QWORD PTR [rsi]
  403123:	shl    rdx,0x4
  403127:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40312c:	mov    rax,QWORD PTR [rsi]
  40312f:	lea    rsi,[rax+rdx*1-0x8]
  403134:	mov    eax,DWORD PTR [rbx+0x8]
  403137:	test   al,0x8
  403139:	je     0x40302a
  40313f:	mov    rcx,r13
  403142:	call   0x422578
  403147:	mov    rcx,rsi
  40314a:	mov    rdi,rax
  40314d:	call   0x422768
  403152:	test   rdi,rdi
  403155:	je     0x403401
  40315b:	mov    eax,DWORD PTR [rbx+0x8]
  40315e:	mov    QWORD PTR [rsi],rdi
  403161:	test   ah,0x8
  403164:	jne    0x403418
  40316a:	and    eax,0x1
  40316d:	add    rsp,0x98
  403174:	pop    rbx
  403175:	pop    rsi
  403176:	pop    rdi
  403177:	pop    rbp
  403178:	pop    r12
  40317a:	pop    r13
  40317c:	pop    r14
  40317e:	pop    r15
  403180:	ret    
  403181:	lea    rdx,[rsp+0x50]
  403186:	mov    rcx,r13
  403189:	call   0x422548
  40318e:	mov    rax,QWORD PTR [rsp+0x50]
  403193:	cmp    BYTE PTR [rax],0x0
  403196:	jne    0x403530
  40319c:	movsd  xmm1,QWORD PTR [rip+0x30c44]        # 0x433de8
  4031a4:	ucomisd xmm1,xmm0
  4031a8:	ja     0x40353c
  4031ae:	ucomisd xmm0,QWORD PTR [rip+0x30c3a]        # 0x433df0
  4031b6:	ja     0x40353c
  4031bc:	cvttsd2si rax,xmm0
  4031c1:	pxor   xmm1,xmm1
  4031c5:	cvtsi2sd xmm1,rax
  4031ca:	ucomisd xmm0,xmm1
  4031ce:	jp     0x403424
  4031d4:	jne    0x403424
  4031da:	cvttsd2si eax,xmm0
  4031de:	mov    DWORD PTR [rsi],eax
  4031e0:	mov    eax,DWORD PTR [rbx+0x8]
  4031e3:	jmp    0x403161
  4031e8:	lea    rdx,[rsp+0x50]
  4031ed:	mov    rcx,r13
  4031f0:	call   0x422548
  4031f5:	mov    rax,QWORD PTR [rsp+0x50]
  4031fa:	cmp    BYTE PTR [rax],0x0
  4031fd:	jne    0x4034e8
  403203:	pxor   xmm2,xmm2
  403207:	mov    eax,DWORD PTR [rbx+0x8]
  40320a:	cvtsd2ss xmm2,xmm0
  40320e:	movss  DWORD PTR [rsi],xmm2
  403212:	jmp    0x403161
  403217:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	mov    rcx,rbp
  403223:	call   0x42fad8
  403228:	mov    edi,eax
  40322a:	jmp    0x402f31
  40322f:	nop
  403230:	lea    rdx,[rsp+0x50]
  403235:	mov    rcx,r13
  403238:	call   0x422548
  40323d:	mov    rax,QWORD PTR [rsp+0x50]
  403242:	cmp    BYTE PTR [rax],0x0
  403245:	jne    0x403524
  40324b:	movsd  xmm1,QWORD PTR [rip+0x30ba5]        # 0x433df8
  403253:	ucomisd xmm1,xmm0
  403257:	ja     0x403518
  40325d:	ucomisd xmm0,QWORD PTR [rip+0x30b9b]        # 0x433e00
  403265:	ja     0x403518
  40326b:	cvttsd2si rax,xmm0
  403270:	pxor   xmm1,xmm1
  403274:	cvtsi2sd xmm1,rax
  403279:	ucomisd xmm0,xmm1
  40327d:	jp     0x403493
  403283:	jne    0x403493
  403289:	mov    QWORD PTR [rsi],rax
  40328c:	jmp    0x403084
  403291:	lea    rcx,[rsp+0x50]
  403296:	mov    r8d,0x1
  40329c:	mov    rdx,r13
  40329f:	call   0x4225e8
  4032a4:	test   eax,eax
  4032a6:	js     0x403482
  4032ac:	mov    rax,QWORD PTR [rsp+0x50]
  4032b1:	jmp    0x403289
  4032b3:	lea    rdx,[rsp+0x50]
  4032b8:	mov    rcx,r13
  4032bb:	call   0x422548
  4032c0:	mov    rax,QWORD PTR [rsp+0x50]
  4032c5:	cmp    BYTE PTR [rax],0x0
  4032c8:	jne    0x4034b8
  4032ce:	movsd  QWORD PTR [rsi],xmm0
  4032d2:	mov    eax,DWORD PTR [rbx+0x8]
  4032d5:	jmp    0x403161
  4032da:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	lea    r13,[rip+0x2f64a]        # 0x432931
  4032e7:	jmp    0x40300e
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	cmp    BYTE PTR [rbp+0x1],0x6f
  4032f4:	jne    0x402f89
  4032fa:	lea    r15,[rbp+0x2]
  4032fe:	mov    edx,0x3a
  403303:	mov    rcx,r15
  403306:	call   0x42fb00
  40330b:	test   rax,rax
  40330e:	je     0x40340b
  403314:	sub    eax,r15d
  403317:	test   r12,r12
  40331a:	je     0x402fd1
  403320:	cdqe   
  403322:	mov    rbx,rsi
  403325:	mov    rdi,r12
  403328:	mov    QWORD PTR [rsp+0x48],rax
  40332d:	jmp    0x403340
  40332f:	nop
  403330:	add    rbx,0x28
  403334:	mov    rdi,QWORD PTR [rbx]
  403337:	test   rdi,rdi
  40333a:	je     0x402f98
  403340:	mov    r8,QWORD PTR [rsp+0x48]
  403345:	mov    rdx,rdi
  403348:	mov    rcx,r15
  40334b:	call   0x42fac8
  403350:	test   eax,eax
  403352:	jne    0x403330
  403354:	mov    rcx,rdi
  403357:	call   0x42fad8
  40335c:	cmp    rax,QWORD PTR [rsp+0x48]
  403361:	jne    0x403330
  403363:	test   BYTE PTR [rbx+0x8],0x2
  403367:	lea    rax,[rip+0x2f5c5]        # 0x432933
  40336e:	cmovne r13,rax
  403372:	jmp    0x402ffd
  403377:	lea    r8,[rip+0x2f5da]        # 0x432958
  40337e:	mov    r9,rbp
  403381:	mov    edx,0x10
  403386:	xor    ecx,ecx
  403388:	call   0x4226c0
  40338d:	mov    eax,0xffffffea
  403392:	jmp    0x40316d
  403397:	nop    WORD PTR [rax+rax*1+0x0]
  4033a0:	mov    rbx,rsi
  4033a3:	jmp    0x402f7f
  4033a8:	test   r12,r12
  4033ab:	jne    0x402ffd
  4033b1:	jmp    0x402fd1
  4033b6:	lea    rbx,[rsp+0x50]
  4033bb:	lea    rdi,[rsp+0x50]
  4033c0:	xor    eax,eax
  4033c2:	mov    ecx,0x8
  4033c7:	mov    r8d,0x40
  4033cd:	rep stos QWORD PTR es:[rdi],rax
  4033d0:	mov    rdx,rbx
  4033d3:	mov    ecx,esi
  4033d5:	call   0x422570
  4033da:	lea    r8,[rip+0x2f5af]        # 0x432990
  4033e1:	mov    QWORD PTR [rsp+0x28],rbx
  4033e6:	mov    QWORD PTR [rsp+0x20],rbp
  4033eb:	mov    r9,r13
  4033ee:	mov    edx,0x10
  4033f3:	xor    ecx,ecx
  4033f5:	call   0x4226c0
  4033fa:	mov    eax,esi
  4033fc:	jmp    0x40316d
  403401:	mov    eax,0xfffffff4
  403406:	jmp    0x40316d
  40340b:	mov    rcx,r15
  40340e:	call   0x42fad8
  403413:	jmp    0x403317
  403418:	xor    ecx,ecx
  40341a:	call   0x401cb0
  40341f:	call   0x430066
  403424:	lea    r8,[rip+0x2f2d5]        # 0x432700
  40342b:	movsd  xmm3,QWORD PTR [rip+0x309bd]        # 0x433df0
  403433:	movsd  xmm4,QWORD PTR [rip+0x309ad]        # 0x433de8
  40343b:	movsd  QWORD PTR [rsp+0x30],xmm3
  403441:	movsd  QWORD PTR [rsp+0x28],xmm4
  403447:	mov    QWORD PTR [rsp+0x20],r13
  40344c:	mov    r9,rbp
  40344f:	xor    ecx,ecx
  403451:	mov    edx,0x8
  403456:	call   0x4226c0
  40345b:	mov    ecx,0x1
  403460:	call   0x401cb0
  403465:	lea    r8,[rip+0x2f50e]        # 0x43297a
  40346c:	xor    ecx,ecx
  40346e:	mov    edx,0x10
  403473:	call   0x4226c0
  403478:	mov    ecx,0x1
  40347d:	call   0x401cb0
  403482:	mov    r8d,0x1
  403488:	mov    rdx,r13
  40348b:	mov    rcx,rbp
  40348e:	call   0x430025
  403493:	lea    r8,[rip+0x2f266]        # 0x432700
  40349a:	movsd  xmm5,QWORD PTR [rip+0x3095e]        # 0x433e00
  4034a2:	movsd  xmm3,QWORD PTR [rip+0x3094e]        # 0x433df8
  4034aa:	movsd  QWORD PTR [rsp+0x30],xmm5
  4034b0:	movsd  QWORD PTR [rsp+0x28],xmm3
  4034b6:	jmp    0x403447
  4034b8:	movsd  xmm3,QWORD PTR [rip+0x30948]        # 0x433e08
  4034c0:	mov    QWORD PTR [rsp+0x20],r13
  4034c5:	movsd  xmm4,QWORD PTR [rip+0x30943]        # 0x433e10
  4034cd:	mov    r9,rbp
  4034d0:	movsd  QWORD PTR [rsp+0x30],xmm3
  4034d6:	lea    r8,[rip+0x2f1c3]        # 0x4326a0
  4034dd:	movsd  QWORD PTR [rsp+0x28],xmm4
  4034e3:	jmp    0x40344f
  4034e8:	movsd  xmm4,QWORD PTR [rip+0x30918]        # 0x433e08
  4034f0:	mov    QWORD PTR [rsp+0x20],r13
  4034f5:	movsd  xmm5,QWORD PTR [rip+0x30913]        # 0x433e10
  4034fd:	mov    r9,rbp
  403500:	movsd  QWORD PTR [rsp+0x30],xmm4
  403506:	lea    r8,[rip+0x2f193]        # 0x4326a0
  40350d:	movsd  QWORD PTR [rsp+0x28],xmm5
  403513:	jmp    0x40344f
  403518:	lea    r8,[rip+0x2f1a9]        # 0x4326c8
  40351f:	jmp    0x40349a
  403524:	lea    r8,[rip+0x2f175]        # 0x4326a0
  40352b:	jmp    0x40349a
  403530:	lea    r8,[rip+0x2f169]        # 0x4326a0
  403537:	jmp    0x40342b
  40353c:	lea    r8,[rip+0x2f185]        # 0x4326c8
  403543:	jmp    0x40342b
  403548:	nop    DWORD PTR [rax+rax*1+0x0]
  403550:	push   r12
  403552:	push   rbp
  403553:	push   rdi
  403554:	push   rsi
  403555:	push   rbx
  403556:	sub    rsp,0x20
  40355a:	mov    rax,QWORD PTR [rip+0x3eadf]        # 0x442040
  403561:	mov    rdi,QWORD PTR [rsp+0x70]
  403566:	mov    rbx,rcx
  403569:	mov    DWORD PTR [rsp+0x58],edx
  40356d:	mov    QWORD PTR [rsp+0x60],r8
  403572:	mov    rsi,r9
  403575:	test   rax,rax
  403578:	je     0x4036a8
  40357e:	mov    ecx,DWORD PTR [rip+0x3eab4]        # 0x442038
  403584:	mov    QWORD PTR [rsp+0x60],rax
  403589:	mov    DWORD PTR [rsp+0x58],ecx
  40358d:	test   rdi,rdi
  403590:	je     0x403630
  403596:	mov    r12d,0x1
  40359c:	mov    eax,0x1
  4035a1:	cmp    eax,ecx
  4035a3:	jge    0x4035d4
  4035a5:	mov    r8,QWORD PTR [rsp+0x60]
  4035aa:	lea    ebp,[rax+0x1]
  4035ad:	test   r12d,r12d
  4035b0:	cdqe   
  4035b2:	lea    r10,[rax*8+0x0]
  4035ba:	mov    rdx,QWORD PTR [r8+rax*8]
  4035be:	je     0x4035c5
  4035c0:	cmp    BYTE PTR [rdx],0x2d
  4035c3:	je     0x4035e0
  4035c5:	mov    rcx,rbx
  4035c8:	call   rdi
  4035ca:	mov    ecx,DWORD PTR [rsp+0x58]
  4035ce:	mov    eax,ebp
  4035d0:	cmp    eax,ecx
  4035d2:	jl     0x4035a5
  4035d4:	add    rsp,0x20
  4035d8:	pop    rbx
  4035d9:	pop    rsi
  4035da:	pop    rdi
  4035db:	pop    rbp
  4035dc:	pop    r12
  4035de:	ret    
  4035df:	nop
  4035e0:	movzx  eax,BYTE PTR [rdx+0x1]
  4035e4:	test   al,al
  4035e6:	je     0x4035c5
  4035e8:	cmp    al,0x2d
  4035ea:	jne    0x4035f2
  4035ec:	cmp    BYTE PTR [rdx+0x2],0x0
  4035f0:	je     0x403620
  4035f2:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  4035f7:	add    rdx,0x1
  4035fb:	mov    r9,rsi
  4035fe:	mov    rcx,rbx
  403601:	call   0x402ef0
  403606:	test   eax,eax
  403608:	js     0x4036c0
  40360e:	add    eax,ebp
  403610:	mov    ecx,DWORD PTR [rsp+0x58]
  403614:	mov    r12d,0x1
  40361a:	jmp    0x4035a1
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    eax,ebp
  403622:	xor    r12d,r12d
  403625:	jmp    0x4035a1
  40362a:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	mov    edx,0x1
  403635:	mov    eax,0x1
  40363a:	jmp    0x403643
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	movsxd rax,edi
  403643:	cmp    eax,ecx
  403645:	jge    0x4035d4
  403647:	mov    r8,QWORD PTR [rsp+0x60]
  40364c:	test   edx,edx
  40364e:	lea    edi,[rax+0x1]
  403651:	lea    r10,[rax*8+0x0]
  403659:	mov    rax,QWORD PTR [r8+rax*8]
  40365d:	je     0x403640
  40365f:	cmp    BYTE PTR [rax],0x2d
  403662:	mov    edx,0x1
  403667:	jne    0x403640
  403669:	movzx  r9d,BYTE PTR [rax+0x1]
  40366e:	test   r9b,r9b
  403671:	je     0x403640
  403673:	cmp    r9b,0x2d
  403677:	jne    0x40367f
  403679:	cmp    BYTE PTR [rax+0x2],0x0
  40367d:	je     0x4036a4
  40367f:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  403684:	lea    rdx,[rax+0x1]
  403688:	mov    r9,rsi
  40368b:	mov    rcx,rbx
  40368e:	call   0x402ef0
  403693:	test   eax,eax
  403695:	js     0x4036c0
  403697:	add    edi,eax
  403699:	mov    ecx,DWORD PTR [rsp+0x58]
  40369d:	mov    edx,0x1
  4036a2:	jmp    0x403640
  4036a4:	xor    edx,edx
  4036a6:	jmp    0x403640
  4036a8:	lea    rcx,[rsp+0x58]
  4036ad:	lea    rdx,[rsp+0x60]
  4036b2:	call   0x401910
  4036b7:	mov    ecx,DWORD PTR [rsp+0x58]
  4036bb:	jmp    0x40358d
  4036c0:	mov    ecx,0x1
  4036c5:	call   0x401cb0
  4036ca:	nop
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4036d0:	push   r15
  4036d2:	push   r14
  4036d4:	push   r13
  4036d6:	push   r12
  4036d8:	push   rbp
  4036d9:	push   rdi
  4036da:	push   rsi
  4036db:	push   rbx
  4036dc:	sub    rsp,0xe8
  4036e3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4036eb:	movaps XMMWORD PTR [rsp+0xb0],xmm7
  4036f3:	movaps XMMWORD PTR [rsp+0xc0],xmm8
  4036fc:	movaps XMMWORD PTR [rsp+0xd0],xmm9
  403705:	lea    r8,[rip+0x2f2b4]        # 0x4329c0
  40370c:	xor    ebp,ebp
  40370e:	xor    r12d,r12d
  403711:	mov    rdi,rdx
  403714:	mov    r15,rcx
  403717:	xor    ecx,ecx
  403719:	mov    rax,QWORD PTR [rdx]
  40371c:	mov    rdx,QWORD PTR [rdx+0x8]
  403720:	mov    QWORD PTR [rsp+0x20],rdx
  403725:	mov    r9,QWORD PTR [rax]
  403728:	mov    edx,0x30
  40372d:	call   0x4226c0
  403732:	mov    eax,DWORD PTR [rdi+0x18]
  403735:	test   eax,eax
  403737:	jle    0x403aa0
  40373d:	lea    rax,[rsp+0x60]
  403742:	movsd  xmm9,QWORD PTR [rip+0x306ad]        # 0x433df8
  40374b:	movsd  xmm8,QWORD PTR [rip+0x306ac]        # 0x433e00
  403754:	mov    QWORD PTR [rsp+0x40],rax
  403759:	movsd  xmm7,QWORD PTR [rip+0x30687]        # 0x433de8
  403761:	movsd  xmm6,QWORD PTR [rip+0x30687]        # 0x433df0
  403769:	jmp    0x4037f7
  40376e:	xchg   ax,ax
  403770:	mov    rsi,r15
  403773:	mov    eax,edx
  403775:	add    rsi,QWORD PTR [rbx+0x10]
  403779:	and    dh,0x80
  40377c:	jne    0x403863
  403782:	test   al,0x8
  403784:	jne    0x40393d
  40378a:	test   BYTE PTR [rbx+0x8],0x82
  40378e:	jne    0x403964
  403794:	test   ah,0x4
  403797:	jne    0x4039c0
  40379d:	test   eax,0x10000
  4037a2:	jne    0x403a20
  4037a8:	test   ah,0x1
  4037ab:	jne    0x403a42
  4037b1:	test   eax,0x20000
  4037b6:	jne    0x403a71
  4037bc:	mov    r9,QWORD PTR [rbx+0x10]
  4037c0:	test   r9,r9
  4037c3:	je     0x4037dc
  4037c5:	mov    r8,r13
  4037c8:	mov    rdx,r14
  4037cb:	mov    rcx,r15
  4037ce:	call   r9
  4037d1:	test   eax,eax
  4037d3:	js     0x403b28
  4037d9:	mov    eax,DWORD PTR [rbx+0x8]
  4037dc:	test   ah,0x8
  4037df:	jne    0x403b81
  4037e5:	add    r12d,0x1
  4037e9:	add    rbp,0x18
  4037ed:	cmp    DWORD PTR [rdi+0x18],r12d
  4037f1:	jle    0x403aa0
  4037f7:	mov    rcx,QWORD PTR [rdi]
  4037fa:	mov    rbx,rbp
  4037fd:	add    rbx,QWORD PTR [rdi+0x10]
  403801:	mov    eax,DWORD PTR [rcx+0x10]
  403804:	mov    rdx,QWORD PTR [rbx]
  403807:	test   eax,eax
  403809:	je     0x403814
  40380b:	test   DWORD PTR [rdx+0x8],eax
  40380e:	je     0x403af0
  403814:	mov    rax,QWORD PTR [rbx+0x10]
  403818:	mov    r9,QWORD PTR [rbx+0x8]
  40381c:	lea    r8,[rip+0x2f29d]        # 0x432ac0
  403823:	xor    ecx,ecx
  403825:	mov    QWORD PTR [rsp+0x28],rax
  40382a:	mov    rax,QWORD PTR [rdx+0x18]
  40382e:	mov    edx,0x30
  403833:	mov    QWORD PTR [rsp+0x20],rax
  403838:	call   0x4226c0
  40383d:	mov    r13,QWORD PTR [rbx+0x10]
  403841:	mov    r14,QWORD PTR [rbx+0x8]
  403845:	mov    rbx,QWORD PTR [rbx]
  403848:	mov    edx,DWORD PTR [rbx+0x8]
  40384b:	test   dh,0xc0
  40384e:	jne    0x403770
  403854:	mov    eax,edx
  403856:	and    dh,0x80
  403859:	mov    rsi,QWORD PTR [rbx+0x10]
  40385d:	je     0x403782
  403863:	mov    rcx,r14
  403866:	mov    edx,0x3a
  40386b:	call   0x42fb00
  403870:	mov    r10,rax
  403873:	mov    eax,DWORD PTR [rsi+0x8]
  403876:	mov    rcx,QWORD PTR [rsi]
  403879:	lea    r9d,[rax+0x1]
  40387d:	cmp    r9d,0x7fffffe
  403884:	jg     0x403c09
  40388a:	movsxd rdx,r9d
  40388d:	mov    r8d,0x10
  403893:	mov    QWORD PTR [rsp+0x50],r10
  403898:	mov    DWORD PTR [rsp+0x48],r9d
  40389d:	call   0x4225b8
  4038a2:	test   rax,rax
  4038a5:	mov    r9d,DWORD PTR [rsp+0x48]
  4038aa:	mov    r10,QWORD PTR [rsp+0x50]
  4038af:	je     0x403ca3
  4038b5:	mov    ecx,DWORD PTR [rsi+0x8]
  4038b8:	mov    r8d,r9d
  4038bb:	xor    edx,edx
  4038bd:	mov    QWORD PTR [rsp+0x58],r10
  4038c2:	mov    DWORD PTR [rsp+0x50],r9d
  4038c7:	mov    QWORD PTR [rsp+0x48],rax
  4038cc:	sub    r8d,ecx
  4038cf:	shl    ecx,0x4
  4038d2:	shl    r8d,0x4
  4038d6:	movsxd rcx,ecx
  4038d9:	add    rcx,rax
  4038dc:	movsxd r8,r8d
  4038df:	call   0x42fb30
  4038e4:	mov    r10,QWORD PTR [rsp+0x58]
  4038e9:	mov    r9d,DWORD PTR [rsp+0x50]
  4038ee:	lea    rax,[rip+0x2eace]        # 0x4323c3
  4038f5:	mov    r11,QWORD PTR [rsp+0x48]
  4038fa:	lea    rcx,[r10+0x1]
  4038fe:	test   r10,r10
  403901:	mov    DWORD PTR [rsi+0x8],r9d
  403905:	mov    QWORD PTR [rsi],r11
  403908:	cmove  rcx,rax
  40390c:	call   0x422578
  403911:	test   rax,rax
  403914:	je     0x403b75
  40391a:	movsxd rdx,DWORD PTR [rsi+0x8]
  40391e:	mov    rcx,QWORD PTR [rsi]
  403921:	shl    rdx,0x4
  403925:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40392a:	mov    rax,QWORD PTR [rsi]
  40392d:	lea    rsi,[rax+rdx*1-0x8]
  403932:	mov    eax,DWORD PTR [rbx+0x8]
  403935:	test   al,0x8
  403937:	je     0x40378a
  40393d:	mov    rcx,r13
  403940:	call   0x422578
  403945:	mov    rcx,rsi
  403948:	mov    r13,rax
  40394b:	call   0x422768
  403950:	test   r13,r13
  403953:	je     0x403b75
  403959:	mov    QWORD PTR [rsi],r13
  40395c:	mov    eax,DWORD PTR [rbx+0x8]
  40395f:	jmp    0x4037dc
  403964:	mov    rdx,QWORD PTR [rsp+0x40]
  403969:	mov    rcx,r13
  40396c:	call   0x422548
  403971:	mov    rax,QWORD PTR [rsp+0x60]
  403976:	cmp    BYTE PTR [rax],0x0
  403979:	jne    0x403c00
  40397f:	ucomisd xmm7,xmm0
  403983:	ja     0x403bc9
  403989:	ucomisd xmm0,xmm6
  40398d:	ja     0x403bc9
  403993:	cvttsd2si rax,xmm0
  403998:	pxor   xmm1,xmm1
  40399c:	cvtsi2sd xmm1,rax
  4039a1:	ucomisd xmm0,xmm1
  4039a5:	jp     0x403bf7
  4039ab:	jne    0x403bf7
  4039b1:	cvttsd2si eax,xmm0
  4039b5:	mov    DWORD PTR [rsi],eax
  4039b7:	mov    eax,DWORD PTR [rbx+0x8]
  4039ba:	jmp    0x4037dc
  4039bf:	nop
  4039c0:	mov    rdx,QWORD PTR [rsp+0x40]
  4039c5:	mov    rcx,r13
  4039c8:	call   0x422548
  4039cd:	mov    rax,QWORD PTR [rsp+0x60]
  4039d2:	cmp    BYTE PTR [rax],0x0
  4039d5:	jne    0x403bee
  4039db:	ucomisd xmm9,xmm0
  4039e0:	ja     0x403b88
  4039e6:	ucomisd xmm0,xmm8
  4039eb:	ja     0x403b88
  4039f1:	cvttsd2si rax,xmm0
  4039f6:	pxor   xmm1,xmm1
  4039fa:	cvtsi2sd xmm1,rax
  4039ff:	ucomisd xmm0,xmm1
  403a03:	jp     0x403c26
  403a09:	jne    0x403c26
  403a0f:	mov    QWORD PTR [rsi],rax
  403a12:	jmp    0x4037d9
  403a17:	nop    WORD PTR [rax+rax*1+0x0]
  403a20:	mov    rcx,QWORD PTR [rsp+0x40]
  403a25:	mov    r8d,0x1
  403a2b:	mov    rdx,r13
  403a2e:	call   0x4225e8
  403a33:	test   eax,eax
  403a35:	js     0x403c92
  403a3b:	mov    rax,QWORD PTR [rsp+0x60]
  403a40:	jmp    0x403a0f
  403a42:	mov    rdx,QWORD PTR [rsp+0x40]
  403a47:	mov    rcx,r13
  403a4a:	call   0x422548
  403a4f:	mov    rax,QWORD PTR [rsp+0x60]
  403a54:	cmp    BYTE PTR [rax],0x0
  403a57:	jne    0x403c62
  403a5d:	pxor   xmm2,xmm2
  403a61:	mov    eax,DWORD PTR [rbx+0x8]
  403a64:	cvtsd2ss xmm2,xmm0
  403a68:	movss  DWORD PTR [rsi],xmm2
  403a6c:	jmp    0x4037dc
  403a71:	mov    rdx,QWORD PTR [rsp+0x40]
  403a76:	mov    rcx,r13
  403a79:	call   0x422548
  403a7e:	mov    rax,QWORD PTR [rsp+0x60]
  403a83:	cmp    BYTE PTR [rax],0x0
  403a86:	jne    0x403c32
  403a8c:	movsd  QWORD PTR [rsi],xmm0
  403a90:	mov    eax,DWORD PTR [rbx+0x8]
  403a93:	jmp    0x4037dc
  403a98:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	lea    r8,[rip+0x2ef41]        # 0x4329e8
  403aa7:	mov    edx,0x30
  403aac:	xor    ecx,ecx
  403aae:	call   0x4226c0
  403ab3:	xor    eax,eax
  403ab5:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  403abd:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
  403ac5:	movaps xmm8,XMMWORD PTR [rsp+0xc0]
  403ace:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
  403ad7:	add    rsp,0xe8
  403ade:	pop    rbx
  403adf:	pop    rsi
  403ae0:	pop    rdi
  403ae1:	pop    rbp
  403ae2:	pop    r12
  403ae4:	pop    r13
  403ae6:	pop    r14
  403ae8:	pop    r15
  403aea:	ret    
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  403af0:	mov    rax,QWORD PTR [rdi+0x8]
  403af4:	mov    r9,QWORD PTR [rbx+0x8]
  403af8:	lea    r8,[rip+0x2ef19]        # 0x432a18
  403aff:	mov    QWORD PTR [rsp+0x30],rax
  403b04:	mov    rax,QWORD PTR [rcx]
  403b07:	xor    ecx,ecx
  403b09:	mov    QWORD PTR [rsp+0x28],rax
  403b0e:	mov    rax,QWORD PTR [rdx+0x18]
  403b12:	mov    edx,0x10
  403b17:	mov    QWORD PTR [rsp+0x20],rax
  403b1c:	call   0x4226c0
  403b21:	mov    eax,0xffffffea
  403b26:	jmp    0x403ab5
  403b28:	lea    rsi,[rsp+0x60]
  403b2d:	lea    rdi,[rsp+0x60]
  403b32:	mov    ebx,eax
  403b34:	mov    ecx,0x8
  403b39:	xor    eax,eax
  403b3b:	mov    r8d,0x40
  403b41:	rep stos QWORD PTR es:[rdi],rax
  403b44:	mov    rdx,rsi
  403b47:	mov    ecx,ebx
  403b49:	call   0x422570
  403b4e:	lea    r8,[rip+0x2ee3b]        # 0x432990
  403b55:	mov    QWORD PTR [rsp+0x28],rsi
  403b5a:	mov    QWORD PTR [rsp+0x20],r14
  403b5f:	mov    r9,r13
  403b62:	mov    edx,0x10
  403b67:	xor    ecx,ecx
  403b69:	call   0x4226c0
  403b6e:	mov    eax,ebx
  403b70:	jmp    0x403ab5
  403b75:	mov    ebx,0xfffffff4
  403b7a:	mov    eax,ebx
  403b7c:	jmp    0x403ab5
  403b81:	xor    ecx,ecx
  403b83:	call   0x401cb0
  403b88:	lea    r8,[rip+0x2eb39]        # 0x4326c8
  403b8f:	movsd  xmm5,QWORD PTR [rip+0x30269]        # 0x433e00
  403b97:	movsd  xmm3,QWORD PTR [rip+0x30259]        # 0x433df8
  403b9f:	movsd  QWORD PTR [rsp+0x30],xmm5
  403ba5:	movsd  QWORD PTR [rsp+0x28],xmm3
  403bab:	mov    QWORD PTR [rsp+0x20],r13
  403bb0:	mov    r9,r14
  403bb3:	xor    ecx,ecx
  403bb5:	mov    edx,0x8
  403bba:	call   0x4226c0
  403bbf:	mov    ecx,0x1
  403bc4:	call   0x401cb0
  403bc9:	lea    r8,[rip+0x2eaf8]        # 0x4326c8
  403bd0:	movsd  xmm3,QWORD PTR [rip+0x30218]        # 0x433df0
  403bd8:	movsd  xmm4,QWORD PTR [rip+0x30208]        # 0x433de8
  403be0:	movsd  QWORD PTR [rsp+0x30],xmm3
  403be6:	movsd  QWORD PTR [rsp+0x28],xmm4
  403bec:	jmp    0x403bab
  403bee:	lea    r8,[rip+0x2eaab]        # 0x4326a0
  403bf5:	jmp    0x403b8f
  403bf7:	lea    r8,[rip+0x2eb02]        # 0x432700
  403bfe:	jmp    0x403bd0
  403c00:	lea    r8,[rip+0x2ea99]        # 0x4326a0
  403c07:	jmp    0x403bd0
  403c09:	lea    r8,[rip+0x2ed6a]        # 0x43297a
  403c10:	xor    ecx,ecx
  403c12:	mov    edx,0x10
  403c17:	call   0x4226c0
  403c1c:	mov    ecx,0x1
  403c21:	call   0x401cb0
  403c26:	lea    r8,[rip+0x2ead3]        # 0x432700
  403c2d:	jmp    0x403b8f
  403c32:	movsd  xmm3,QWORD PTR [rip+0x301ce]        # 0x433e08
  403c3a:	mov    QWORD PTR [rsp+0x20],r13
  403c3f:	movsd  xmm4,QWORD PTR [rip+0x301c9]        # 0x433e10
  403c47:	mov    r9,r14
  403c4a:	movsd  QWORD PTR [rsp+0x30],xmm3
  403c50:	lea    r8,[rip+0x2ea49]        # 0x4326a0
  403c57:	movsd  QWORD PTR [rsp+0x28],xmm4
  403c5d:	jmp    0x403bb3
  403c62:	movsd  xmm4,QWORD PTR [rip+0x3019e]        # 0x433e08
  403c6a:	mov    QWORD PTR [rsp+0x20],r13
  403c6f:	movsd  xmm5,QWORD PTR [rip+0x30199]        # 0x433e10
  403c77:	mov    r9,r14
  403c7a:	movsd  QWORD PTR [rsp+0x30],xmm4
  403c80:	lea    r8,[rip+0x2ea19]        # 0x4326a0
  403c87:	movsd  QWORD PTR [rsp+0x28],xmm5
  403c8d:	jmp    0x403bb3
  403c92:	mov    r8d,0x1
  403c98:	mov    rdx,r13
  403c9b:	mov    rcx,r14
  403c9e:	call   0x430025
  403ca3:	call   0x430066
  403ca8:	nop
  403ca9:	nop    DWORD PTR [rax+0x0]
  403cb0:	push   r15
  403cb2:	push   r14
  403cb4:	push   r13
  403cb6:	push   r12
  403cb8:	push   rbp
  403cb9:	push   rdi
  403cba:	push   rsi
  403cbb:	push   rbx
  403cbc:	sub    rsp,0x48
  403cc0:	cmp    ecx,0x1
  403cc3:	jle    0x403d90
  403cc9:	mov    QWORD PTR [rsp+0x30],r9
  403cce:	mov    QWORD PTR [rsp+0x28],r8
  403cd3:	mov    r14,rdx
  403cd6:	mov    r13d,ecx
  403cd9:	mov    esi,0x1
  403cde:	jmp    0x403cec
  403ce0:	add    esi,0x1
  403ce3:	cmp    r13d,esi
  403ce6:	jle    0x403d90
  403cec:	movsxd rax,esi
  403cef:	mov    r12,QWORD PTR [r14+rax*8]
  403cf3:	cmp    BYTE PTR [r12],0x2d
  403cf8:	jne    0x403ce0
  403cfa:	lea    rbp,[r12+0x1]
  403cff:	mov    edx,0x3a
  403d04:	mov    rcx,rbp
  403d07:	call   0x42fb00
  403d0c:	test   rax,rax
  403d0f:	je     0x403dc4
  403d15:	sub    eax,ebp
  403d17:	mov    rbx,QWORD PTR [rsp+0x28]
  403d1c:	mov    rdx,QWORD PTR [rbx]
  403d1f:	test   rdx,rdx
  403d22:	mov    QWORD PTR [rsp+0x38],rdx
  403d27:	je     0x403d5b
  403d29:	movsxd rdi,eax
  403d2c:	mov    r15,rdx
  403d2f:	nop
  403d30:	mov    r8,rdi
  403d33:	mov    rdx,r15
  403d36:	mov    rcx,rbp
  403d39:	call   0x42fac8
  403d3e:	test   eax,eax
  403d40:	jne    0x403d4f
  403d42:	mov    rcx,r15
  403d45:	call   0x42fad8
  403d4a:	cmp    rax,rdi
  403d4d:	je     0x403da3
  403d4f:	add    rbx,0x28
  403d53:	mov    r15,QWORD PTR [rbx]
  403d56:	test   r15,r15
  403d59:	jne    0x403d30
  403d5b:	cmp    BYTE PTR [r12+0x1],0x6e
  403d61:	je     0x403dd1
  403d63:	mov    rdx,QWORD PTR [rsp+0x30]
  403d68:	mov    rcx,rbp
  403d6b:	call   0x42faf8
  403d70:	test   eax,eax
  403d72:	je     0x403e60
  403d78:	add    esi,0x1
  403d7b:	add    esi,0x1
  403d7e:	cmp    r13d,esi
  403d81:	jg     0x403cec
  403d87:	nop    WORD PTR [rax+rax*1+0x0]
  403d90:	xor    eax,eax
  403d92:	add    rsp,0x48
  403d96:	pop    rbx
  403d97:	pop    rsi
  403d98:	pop    rdi
  403d99:	pop    rbp
  403d9a:	pop    r12
  403d9c:	pop    r13
  403d9e:	pop    r14
  403da0:	pop    r15
  403da2:	ret    
  403da3:	mov    rdx,r15
  403da6:	mov    rcx,QWORD PTR [rsp+0x30]
  403dab:	call   0x42faf8
  403db0:	test   eax,eax
  403db2:	je     0x403e60
  403db8:	test   BYTE PTR [rbx+0x8],0x1
  403dbc:	je     0x403ce0
  403dc2:	jmp    0x403d78
  403dc4:	mov    rcx,rbp
  403dc7:	call   0x42fad8
  403dcc:	jmp    0x403d17
  403dd1:	cmp    BYTE PTR [r12+0x2],0x6f
  403dd7:	jne    0x403d63
  403dd9:	add    r12,0x3
  403ddd:	mov    edx,0x3a
  403de2:	mov    rcx,r12
  403de5:	call   0x42fb00
  403dea:	test   rax,rax
  403ded:	je     0x403e67
  403def:	mov    edi,eax
  403df1:	sub    edi,r12d
  403df4:	cmp    QWORD PTR [rsp+0x38],0x0
  403dfa:	je     0x403d63
  403e00:	movsxd rdi,edi
  403e03:	mov    rbx,QWORD PTR [rsp+0x28]
  403e08:	jmp    0x403e25
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	add    rbx,0x28
  403e14:	mov    rax,QWORD PTR [rbx]
  403e17:	test   rax,rax
  403e1a:	mov    QWORD PTR [rsp+0x38],rax
  403e1f:	je     0x403d63
  403e25:	mov    rdx,QWORD PTR [rsp+0x38]
  403e2a:	mov    r8,rdi
  403e2d:	mov    rcx,r12
  403e30:	call   0x42fac8
  403e35:	test   eax,eax
  403e37:	jne    0x403e10
  403e39:	mov    rcx,QWORD PTR [rsp+0x38]
  403e3e:	call   0x42fad8
  403e43:	cmp    rax,rdi
  403e46:	jne    0x403e10
  403e48:	mov    rdx,QWORD PTR [rsp+0x38]
  403e4d:	test   rdx,rdx
  403e50:	jne    0x403da6
  403e56:	jmp    0x403d63
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e60:	mov    eax,esi
  403e62:	jmp    0x403d92
  403e67:	mov    rcx,r12
  403e6a:	call   0x42fad8
  403e6f:	mov    edi,eax
  403e71:	jmp    0x403df4
  403e73:	nop    DWORD PTR [rax]
  403e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e80:	push   r13
  403e82:	push   r12
  403e84:	push   rbp
  403e85:	push   rdi
  403e86:	push   rsi
  403e87:	push   rbx
  403e88:	sub    rsp,0xe8
  403e8f:	lea    rdi,[rip+0x2ec55]        # 0x432aeb
  403e96:	mov    rbx,rdx
  403e99:	mov    rbp,r8
  403e9c:	mov    rsi,rbx
  403e9f:	call   0x422350
  403ea4:	mov    QWORD PTR [rsp+0x30],rax
  403ea9:	call   0x422218
  403eae:	mov    QWORD PTR [rsp+0x38],rax
  403eb3:	call   0x4224a8
  403eb8:	mov    ecx,0x6
  403ebd:	mov    QWORD PTR [rsp+0x40],rax
  403ec2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ec4:	je     0x404142
  403eca:	lea    rdi,[rip+0x2ec20]        # 0x432af1
  403ed1:	mov    ecx,0x7
  403ed6:	mov    rsi,rbx
  403ed9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403edb:	je     0x404142
  403ee1:	mov    edx,0x3a
  403ee6:	mov    rcx,rbx
  403ee9:	call   0x42fb00
  403eee:	test   rax,rax
  403ef1:	je     0x404320
  403ef7:	sub    rax,rbx
  403efa:	lea    r12,[rsp+0x60]
  403eff:	mov    edx,0x80
  403f04:	lea    r8,[rax+0x1]
  403f08:	lea    rdi,[rsp+0x30]
  403f0d:	mov    rcx,r12
  403f10:	cmp    r8,0x80
  403f17:	cmova  r8,rdx
  403f1b:	mov    rdx,rbx
  403f1e:	call   0x422558
  403f23:	xor    r9d,r9d
  403f26:	xor    r8d,r8d
  403f29:	mov    DWORD PTR [rsp+0x20],0x3
  403f31:	mov    rdx,r12
  403f34:	mov    rcx,rdi
  403f37:	call   0x422638
  403f3c:	test   rax,rax
  403f3f:	je     0x403f4c
  403f41:	mov    ecx,DWORD PTR [rax+0x30]
  403f44:	test   ecx,ecx
  403f46:	jne    0x4040a1
  403f4c:	movzx  eax,BYTE PTR [rbx]
  403f4f:	cmp    al,0x61
  403f51:	sete   cl
  403f54:	cmp    al,0x76
  403f56:	sete   dl
  403f59:	or     cl,dl
  403f5b:	jne    0x404073
  403f61:	cmp    al,0x73
  403f63:	je     0x404073
  403f69:	lea    rcx,[rsp+0x38]
  403f6e:	xor    r9d,r9d
  403f71:	xor    r8d,r8d
  403f74:	mov    DWORD PTR [rsp+0x20],0x3
  403f7c:	mov    rdx,rbx
  403f7f:	call   0x422638
  403f84:	test   rax,rax
  403f87:	je     0x403f98
  403f89:	mov    r9d,DWORD PTR [rax+0x30]
  403f8d:	xor    edi,edi
  403f8f:	test   r9d,r9d
  403f92:	jne    0x4041c5
  403f98:	call   0x422510
  403f9d:	lea    rcx,[rsp+0x48]
  403fa2:	xor    r9d,r9d
  403fa5:	xor    r8d,r8d
  403fa8:	mov    DWORD PTR [rsp+0x20],0x3
  403fb0:	mov    rdx,rbx
  403fb3:	mov    QWORD PTR [rsp+0x48],rax
  403fb8:	call   0x422638
  403fbd:	test   rax,rax
  403fc0:	mov    r13,rax
  403fc3:	je     0x403fd0
  403fc5:	mov    eax,DWORD PTR [rax+0x30]
  403fc8:	test   eax,eax
  403fca:	jne    0x404240
  403fd0:	call   0x4224d8
  403fd5:	lea    rcx,[rsp+0x50]
  403fda:	xor    r9d,r9d
  403fdd:	xor    r8d,r8d
  403fe0:	mov    DWORD PTR [rsp+0x20],0x3
  403fe8:	mov    rdx,rbx
  403feb:	mov    QWORD PTR [rsp+0x50],rax
  403ff0:	call   0x422638
  403ff5:	test   rax,rax
  403ff8:	mov    rdi,rax
  403ffb:	je     0x404170
  404001:	mov    r12d,DWORD PTR [rax+0x30]
  404005:	test   r12d,r12d
  404008:	je     0x404170
  40400e:	call   0x4224e8
  404013:	xor    r9d,r9d
  404016:	mov    r8,rbp
  404019:	mov    rdx,rbx
  40401c:	mov    rcx,rax
  40401f:	mov    QWORD PTR [rsp+0x58],rax
  404024:	call   0x422620
  404029:	lea    rcx,[rsp+0x58]
  40402e:	mov    r12d,eax
  404031:	call   0x4224e0
  404036:	test   r12d,r12d
  404039:	js     0x404350
  40403f:	mov    esi,DWORD PTR [rdi+0x14]
  404042:	xor    r9d,r9d
  404045:	test   esi,esi
  404047:	jne    0x40405c
  404049:	movzx  eax,BYTE PTR [rbp+0x0]
  40404d:	sub    eax,0x2b
  404050:	and    eax,0xfffffffd
  404053:	cmp    al,0x1
  404055:	sbb    r9d,r9d
  404058:	and    r9d,0x20
  40405c:	lea    rcx,[rip+0x3f655]        # 0x4436b8
  404063:	mov    r8,rbp
  404066:	mov    rdx,rbx
  404069:	call   0x422808
  40406e:	jmp    0x404107
  404073:	lea    rdx,[rbx+0x1]
  404077:	xor    r9d,r9d
  40407a:	xor    r8d,r8d
  40407d:	mov    DWORD PTR [rsp+0x20],0x2
  404085:	mov    rcx,rdi
  404088:	call   0x422638
  40408d:	test   rax,rax
  404090:	je     0x403f69
  404096:	mov    edx,DWORD PTR [rax+0x30]
  404099:	test   edx,edx
  40409b:	je     0x403f69
  4040a1:	mov    eax,DWORD PTR [rax+0x14]
  4040a4:	xor    r9d,r9d
  4040a7:	test   eax,eax
  4040a9:	je     0x404151
  4040af:	lea    rcx,[rip+0x3f612]        # 0x4436c8
  4040b6:	mov    r8,rbp
  4040b9:	mov    rdx,rbx
  4040bc:	call   0x422808
  4040c1:	lea    rcx,[rsp+0x38]
  4040c6:	xor    r9d,r9d
  4040c9:	xor    r8d,r8d
  4040cc:	mov    DWORD PTR [rsp+0x20],0x3
  4040d4:	mov    rdx,rbx
  4040d7:	call   0x422638
  4040dc:	test   rax,rax
  4040df:	je     0x4040f3
  4040e1:	mov    r8d,DWORD PTR [rax+0x30]
  4040e5:	mov    edi,0x1
  4040ea:	test   r8d,r8d
  4040ed:	jne    0x4041c5
  4040f3:	call   0x422510
  4040f8:	mov    QWORD PTR [rsp+0x48],rax
  4040fd:	call   0x4224d8
  404102:	mov    QWORD PTR [rsp+0x50],rax
  404107:	lea    rcx,[rsp+0x40]
  40410c:	xor    r9d,r9d
  40410f:	xor    r8d,r8d
  404112:	mov    rdx,rbx
  404115:	mov    DWORD PTR [rsp+0x20],0x3
  40411d:	call   0x422638
  404122:	xor    edx,edx
  404124:	test   rax,rax
  404127:	je     0x404130
  404129:	mov    edx,DWORD PTR [rax+0x30]
  40412c:	test   edx,edx
  40412e:	jne    0x4041a0
  404130:	mov    eax,edx
  404132:	add    rsp,0xe8
  404139:	pop    rbx
  40413a:	pop    rsi
  40413b:	pop    rdi
  40413c:	pop    rbp
  40413d:	pop    r12
  40413f:	pop    r13
  404141:	ret    
  404142:	mov    ecx,0x30
  404147:	call   0x422680
  40414c:	jmp    0x403ee1
  404151:	movzx  eax,BYTE PTR [rbp+0x0]
  404155:	sub    eax,0x2b
  404158:	and    eax,0xfffffffd
  40415b:	cmp    al,0x1
  40415d:	sbb    r9d,r9d
  404160:	and    r9d,0x20
  404164:	jmp    0x4040af
  404169:	nop    DWORD PTR [rax+0x0]
  404170:	lea    rcx,[rsp+0x40]
  404175:	xor    r9d,r9d
  404178:	xor    r8d,r8d
  40417b:	mov    rdx,rbx
  40417e:	mov    DWORD PTR [rsp+0x20],0x3
  404186:	call   0x422638
  40418b:	test   rax,rax
  40418e:	mov    edx,0xabafb008
  404193:	je     0x404130
  404195:	mov    ecx,DWORD PTR [rax+0x30]
  404198:	test   ecx,ecx
  40419a:	je     0x404130
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    r10d,DWORD PTR [rax+0x14]
  4041a4:	xor    r9d,r9d
  4041a7:	test   r10d,r10d
  4041aa:	je     0x404220
  4041ac:	lea    rcx,[rip+0x3f51d]        # 0x4436d0
  4041b3:	mov    rdx,rbx
  4041b6:	mov    r8,rbp
  4041b9:	call   0x422808
  4041be:	xor    edx,edx
  4041c0:	jmp    0x404130
  4041c5:	mov    r11d,DWORD PTR [rax+0x14]
  4041c9:	xor    r9d,r9d
  4041cc:	test   r11d,r11d
  4041cf:	jne    0x4041e4
  4041d1:	movzx  eax,BYTE PTR [rbp+0x0]
  4041d5:	sub    eax,0x2b
  4041d8:	and    eax,0xfffffffd
  4041db:	cmp    al,0x1
  4041dd:	sbb    r9d,r9d
  4041e0:	and    r9d,0x20
  4041e4:	lea    rcx,[rip+0x3f4d5]        # 0x4436c0
  4041eb:	mov    r8,rbp
  4041ee:	mov    rdx,rbx
  4041f1:	call   0x422808
  4041f6:	test   edi,edi
  4041f8:	je     0x4040f3
  4041fe:	lea    r8,[rip+0x2e8f3]        # 0x432af8
  404205:	mov    r9,rbx
  404208:	mov    edx,0x28
  40420d:	xor    ecx,ecx
  40420f:	call   0x4226c0
  404214:	jmp    0x4040f3
  404219:	nop    DWORD PTR [rax+0x0]
  404220:	movzx  eax,BYTE PTR [rbp+0x0]
  404224:	sub    eax,0x2b
  404227:	and    eax,0xfffffffd
  40422a:	cmp    al,0x1
  40422c:	sbb    r9d,r9d
  40422f:	and    r9d,0x20
  404233:	jmp    0x4041ac
  404238:	nop    DWORD PTR [rax+rax*1+0x0]
  404240:	call   0x422520
  404245:	xor    r9d,r9d
  404248:	mov    rsi,rax
  40424b:	mov    r8,rbp
  40424e:	mov    rdx,rbx
  404251:	mov    rcx,rax
  404254:	lea    rdi,[rip+0x2e979]        # 0x432bd4
  40425b:	call   0x422620
  404260:	mov    rcx,rsi
  404263:	mov    r12d,eax
  404266:	mov    rsi,rbx
  404269:	call   0x422518
  40426e:	mov    ecx,0x5
  404273:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404275:	je     0x404330
  40427b:	lea    rdi,[rip+0x2e8a7]        # 0x432b29
  404282:	mov    ecx,0x5
  404287:	mov    rsi,rbx
  40428a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40428c:	je     0x404330
  404292:	lea    rdi,[rip+0x2e895]        # 0x432b2e
  404299:	mov    ecx,0x5
  40429e:	mov    rsi,rbx
  4042a1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042a3:	je     0x404330
  4042a9:	lea    rdi,[rip+0x2e883]        # 0x432b33
  4042b0:	mov    ecx,0x5
  4042b5:	mov    rsi,rbx
  4042b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042ba:	je     0x404330
  4042bc:	lea    rdi,[rip+0x2e875]        # 0x432b38
  4042c3:	mov    ecx,0xb
  4042c8:	mov    rsi,rbx
  4042cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042cd:	je     0x404330
  4042cf:	lea    rdi,[rip+0x2e86d]        # 0x432b43
  4042d6:	mov    ecx,0xb
  4042db:	mov    rsi,rbx
  4042de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042e0:	je     0x404330
  4042e2:	test   r12d,r12d
  4042e5:	js     0x404350
  4042e7:	mov    r13d,DWORD PTR [r13+0x14]
  4042eb:	xor    r9d,r9d
  4042ee:	test   r13d,r13d
  4042f1:	jne    0x404306
  4042f3:	movzx  eax,BYTE PTR [rbp+0x0]
  4042f7:	sub    eax,0x2b
  4042fa:	and    eax,0xfffffffd
  4042fd:	cmp    al,0x1
  4042ff:	sbb    r9d,r9d
  404302:	and    r9d,0x20
  404306:	lea    rcx,[rip+0x3f3a3]        # 0x4436b0
  40430d:	mov    r8,rbp
  404310:	mov    rdx,rbx
  404313:	call   0x422808
  404318:	jmp    0x4040fd
  40431d:	nop    DWORD PTR [rax]
  404320:	mov    rcx,rbx
  404323:	call   0x42fad8
  404328:	add    rax,rbx
  40432b:	jmp    0x403ef7
  404330:	lea    r8,[rip+0x2e819]        # 0x432b50
  404337:	mov    edx,0x10
  40433c:	xor    ecx,ecx
  40433e:	call   0x4226c0
  404343:	mov    edx,0xffffffea
  404348:	jmp    0x404130
  40434d:	nop    DWORD PTR [rax]
  404350:	lea    r8,[rip+0x2e863]        # 0x432bba
  404357:	mov    edx,0x10
  40435c:	mov    r9,rbx
  40435f:	xor    ecx,ecx
  404361:	call   0x4226c0
  404366:	mov    edx,r12d
  404369:	jmp    0x404130
  40436e:	xchg   ax,ax
  404370:	push   r13
  404372:	push   r12
  404374:	push   rbp
  404375:	push   rdi
  404376:	push   rsi
  404377:	push   rbx
  404378:	sub    rsp,0x28
  40437c:	mov    edx,DWORD PTR [rcx+0x50]
  40437f:	xor    ebp,ebp
  404381:	xor    edi,edi
  404383:	mov    r12,rcx
  404386:	test   edx,edx
  404388:	jle    0x40442d
  40438e:	xchg   ax,ax
  404390:	mov    rsi,rbp
  404393:	add    rsi,QWORD PTR [r12+0x48]
  404398:	xor    ebx,ebx
  40439a:	xor    r13d,r13d
  40439d:	mov    eax,DWORD PTR [rsi+0x10]
  4043a0:	test   eax,eax
  4043a2:	jle    0x404412
  4043a4:	mov    rcx,rbx
  4043a7:	add    rcx,QWORD PTR [rsi+0x8]
  4043ab:	add    r13d,0x1
  4043af:	add    rcx,0x10
  4043b3:	call   0x422768
  4043b8:	mov    rcx,rbx
  4043bb:	add    rcx,QWORD PTR [rsi+0x8]
  4043bf:	add    rcx,0x20
  4043c3:	call   0x422820
  4043c8:	mov    rcx,rbx
  4043cb:	add    rcx,QWORD PTR [rsi+0x8]
  4043cf:	add    rcx,0x28
  4043d3:	call   0x422820
  4043d8:	mov    rcx,rbx
  4043db:	add    rcx,QWORD PTR [rsi+0x8]
  4043df:	add    rcx,0x30
  4043e3:	call   0x422820
  4043e8:	mov    rax,rbx
  4043eb:	add    rax,QWORD PTR [rsi+0x8]
  4043ef:	lea    rcx,[rax+0x38]
  4043f3:	call   0x422820
  4043f8:	mov    rax,rbx
  4043fb:	add    rax,QWORD PTR [rsi+0x8]
  4043ff:	add    rbx,0x48
  404403:	lea    rcx,[rax+0x40]
  404407:	call   0x422820
  40440c:	cmp    DWORD PTR [rsi+0x10],r13d
  404410:	jg     0x4043a4
  404412:	lea    rcx,[rsi+0x8]
  404416:	add    edi,0x1
  404419:	add    rbp,0x18
  40441d:	call   0x422768
  404422:	cmp    DWORD PTR [r12+0x50],edi
  404427:	jg     0x404390
  40442d:	lea    rcx,[r12+0x48]
  404432:	call   0x422768
  404437:	lea    rcx,[r12+0x68]
  40443c:	call   0x422768
  404441:	lea    rcx,[r12+0x10]
  404446:	call   0x422768
  40444b:	lea    rcx,[rip+0x3f266]        # 0x4436b8
  404452:	call   0x422820
  404457:	lea    rcx,[rip+0x3f252]        # 0x4436b0
  40445e:	call   0x422820
  404463:	lea    rcx,[rip+0x3f256]        # 0x4436c0
  40446a:	call   0x422820
  40446f:	lea    rcx,[rip+0x3f252]        # 0x4436c8
  404476:	call   0x422820
  40447b:	lea    rcx,[rip+0x3f24e]        # 0x4436d0
  404482:	add    rsp,0x28
  404486:	pop    rbx
  404487:	pop    rsi
  404488:	pop    rdi
  404489:	pop    rbp
  40448a:	pop    r12
  40448c:	pop    r13
  40448e:	jmp    0x422820
  404493:	nop    DWORD PTR [rax]
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	push   r15
  4044a2:	push   r14
  4044a4:	push   r13
  4044a6:	push   r12
  4044a8:	push   rbp
  4044a9:	push   rdi
  4044aa:	push   rsi
  4044ab:	push   rbx
  4044ac:	sub    rsp,0x78
  4044b0:	mov    rax,QWORD PTR [rip+0x3db89]        # 0x442040
  4044b7:	mov    r12,QWORD PTR [rsp+0xe0]
  4044bf:	mov    rbx,rcx
  4044c2:	mov    DWORD PTR [rsp+0xc8],edx
  4044c9:	mov    QWORD PTR [rsp+0xd0],r8
  4044d1:	mov    QWORD PTR [rsp+0xd8],r9
  4044d9:	test   rax,rax
  4044dc:	je     0x404d70
  4044e2:	mov    edx,DWORD PTR [rip+0x3db50]        # 0x442038
  4044e8:	mov    QWORD PTR [rsp+0xd0],rax
  4044f0:	mov    DWORD PTR [rsp+0xc8],edx
  4044f7:	lea    rdi,[rbx+0x8]
  4044fb:	mov    rcx,rbx
  4044fe:	lea    rax,[rbx+0xa8]
  404505:	mov    QWORD PTR [rbx],0x0
  40450c:	and    rdi,0xfffffffffffffff8
  404510:	mov    QWORD PTR [rsp+0x58],rax
  404515:	xor    eax,eax
  404517:	sub    rcx,rdi
  40451a:	mov    QWORD PTR [rbx+0x98],0x0
  404525:	add    ecx,0xa0
  40452b:	shr    ecx,0x3
  40452e:	rep stos QWORD PTR es:[rdi],rax
  404531:	movsxd rax,DWORD PTR [rsp+0xe8]
  404539:	cmp    rax,0x5555554
  40453f:	mov    DWORD PTR [rbx+0x50],eax
  404542:	jbe    0x404560
  404544:	mov    QWORD PTR [rbx+0x48],0x0
  40454c:	mov    ecx,0x1
  404551:	call   0x401cb0
  404556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404560:	lea    rcx,[rax+rax*2]
  404564:	shl    rcx,0x3
  404568:	call   0x422670
  40456d:	test   rax,rax
  404570:	mov    QWORD PTR [rbx+0x48],rax
  404574:	je     0x40454c
  404576:	mov    edx,DWORD PTR [rbx+0x50]
  404579:	test   edx,edx
  40457b:	jle    0x4045a1
  40457d:	sub    edx,0x1
  404580:	lea    r8,[rdx+rdx*2+0x3]
  404585:	xor    edx,edx
  404587:	shl    r8,0x3
  40458b:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	lea    rcx,[r12+rdx*1]
  404594:	mov    QWORD PTR [rax+rdx*1],rcx
  404598:	add    rdx,0x18
  40459c:	cmp    rdx,r8
  40459f:	jne    0x404590
  4045a1:	lea    rax,[rip+0x2f828]        # 0x433dd0
  4045a8:	lea    r8,[rip+0x2de06]        # 0x4323b5
  4045af:	lea    rdx,[rip+0x2de07]        # 0x4323bd
  4045b6:	xor    r9d,r9d
  4045b9:	mov    ebp,0x1
  4045be:	mov    QWORD PTR [rbx],rax
  4045c1:	lea    rax,[rip+0x2ddfb]        # 0x4323c3
  4045c8:	mov    QWORD PTR [rbx+0x8],rax
  4045cc:	lea    rax,[rip+0x3f0dd]        # 0x4436b0
  4045d3:	mov    rcx,rax
  4045d6:	mov    QWORD PTR [rsp+0x50],rax
  4045db:	call   0x422808
  4045e0:	lea    r8,[rip+0x2e5f2]        # 0x432bd9
  4045e7:	mov    edx,0x30
  4045ec:	xor    ecx,ecx
  4045ee:	call   0x4226c0
  4045f3:	lea    rax,[rbx+0x58]
  4045f7:	mov    DWORD PTR [rsp+0x6c],0xfffffffe
  4045ff:	mov    rsi,rax
  404602:	mov    QWORD PTR [rsp+0x48],rax
  404607:	lea    rax,[rbx+0x60]
  40460b:	and    rax,0xfffffffffffffff8
  40460f:	mov    rdi,rax
  404612:	mov    QWORD PTR [rsp+0x60],rax
  404617:	mov    rax,rsi
  40461a:	sub    rax,rdi
  40461d:	add    eax,0x48
  404620:	and    eax,0xfffffff8
  404623:	mov    DWORD PTR [rsp+0x68],eax
  404627:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404637:	jge    0x40480b
  40463d:	lea    eax,[rbp+0x1]
  404640:	mov    rdx,QWORD PTR [rsp+0xd0]
  404648:	lea    r8,[rip+0x2e5a6]        # 0x432bf5
  40464f:	xor    ecx,ecx
  404651:	mov    DWORD PTR [rsp+0x30],eax
  404655:	movsxd rax,ebp
  404658:	lea    rsi,[rax*8+0x0]
  404660:	mov    QWORD PTR [rsp+0x38],rsi
  404665:	mov    rsi,QWORD PTR [rdx+rax*8]
  404669:	mov    edx,0x30
  40466e:	mov    r9,rsi
  404671:	call   0x4226c0
  404676:	cmp    BYTE PTR [rsi],0x2d
  404679:	je     0x404860
  40467f:	mov    r13,QWORD PTR [rbx+0x48]
  404683:	mov    eax,DWORD PTR [r13+0x10]
  404687:	mov    rcx,QWORD PTR [r13+0x8]
  40468b:	lea    edi,[rax+0x1]
  40468e:	cmp    edi,0x1c71c70
  404694:	jg     0x404e66
  40469a:	movsxd rbp,edi
  40469d:	mov    r8d,0x48
  4046a3:	mov    rdx,rbp
  4046a6:	call   0x4225b8
  4046ab:	test   rax,rax
  4046ae:	mov    r14,rax
  4046b1:	je     0x404e7e
  4046b7:	mov    eax,DWORD PTR [r13+0x10]
  4046bb:	mov    edx,edi
  4046bd:	sub    edx,eax
  4046bf:	lea    ecx,[rax+rax*8]
  4046c2:	lea    r8d,[rdx+rdx*8]
  4046c6:	xor    edx,edx
  4046c8:	shl    ecx,0x3
  4046cb:	shl    r8d,0x3
  4046cf:	movsxd rcx,ecx
  4046d2:	add    rcx,r14
  4046d5:	movsxd r8,r8d
  4046d8:	call   0x42fb30
  4046dd:	lea    rax,[rbp+rbp*8+0x0]
  4046e2:	mov    DWORD PTR [r13+0x10],edi
  4046e6:	mov    rdx,QWORD PTR [rbx+0x58]
  4046ea:	mov    QWORD PTR [r13+0x8],r14
  4046ee:	mov    rdi,QWORD PTR [rsp+0x50]
  4046f3:	lea    r8,[rip+0x2dcbb]        # 0x4323b5
  4046fa:	lea    rax,[r14+rax*8-0x48]
  4046ff:	xor    r9d,r9d
  404702:	mov    QWORD PTR [rax],rdx
  404705:	mov    rdx,QWORD PTR [rbx+0x60]
  404709:	mov    rcx,rdi
  40470c:	mov    QWORD PTR [rax+0x8],rdx
  404710:	mov    rdx,QWORD PTR [rbx+0x68]
  404714:	mov    QWORD PTR [rax+0x10],rdx
  404718:	mov    rdx,QWORD PTR [rbx+0x70]
  40471c:	mov    QWORD PTR [rax+0x18],rdx
  404720:	mov    rdx,QWORD PTR [rbx+0x78]
  404724:	mov    QWORD PTR [rax+0x20],rdx
  404728:	mov    rdx,QWORD PTR [rbx+0x80]
  40472f:	mov    QWORD PTR [rax+0x28],rdx
  404733:	mov    rdx,QWORD PTR [rbx+0x88]
  40473a:	mov    QWORD PTR [rax+0x8],rsi
  40473e:	mov    QWORD PTR [rax+0x30],rdx
  404742:	mov    rdx,QWORD PTR [r13+0x0]
  404746:	mov    QWORD PTR [rax],rdx
  404749:	mov    rdx,QWORD PTR [rdi]
  40474c:	mov    QWORD PTR [rax+0x38],rdx
  404750:	mov    rdx,QWORD PTR [rip+0x3ef61]        # 0x4436b8
  404757:	mov    QWORD PTR [rax+0x40],rdx
  40475b:	mov    rdx,QWORD PTR [rip+0x3ef66]        # 0x4436c8
  404762:	mov    QWORD PTR [rip+0x3ef5b],0x0        # 0x4436c8
  40476d:	mov    QWORD PTR [rax+0x20],rdx
  404771:	mov    rdx,QWORD PTR [rip+0x3ef48]        # 0x4436c0
  404778:	mov    QWORD PTR [rip+0x3ef3d],0x0        # 0x4436c0
  404783:	mov    QWORD PTR [rax+0x28],rdx
  404787:	mov    rdx,QWORD PTR [rip+0x3ef42]        # 0x4436d0
  40478e:	mov    QWORD PTR [rip+0x3ef37],0x0        # 0x4436d0
  404799:	mov    QWORD PTR [rax+0x30],rdx
  40479d:	lea    rdx,[rip+0x2dc19]        # 0x4323bd
  4047a4:	mov    QWORD PTR [rdi],0x0
  4047ab:	mov    QWORD PTR [rip+0x3ef02],0x0        # 0x4436b8
  4047b6:	call   0x422808
  4047bb:	mov    rax,QWORD PTR [rsp+0x48]
  4047c0:	lea    r8,[rip+0x2e446]        # 0x432c0d
  4047c7:	mov    edx,0x30
  4047cc:	mov    QWORD PTR [rax],0x0
  4047d3:	mov    rax,QWORD PTR [rsp+0x58]
  4047d8:	mov    QWORD PTR [rax-0x10],0x0
  4047e0:	mov    ecx,DWORD PTR [rsp+0x68]
  4047e4:	xor    eax,eax
  4047e6:	mov    rdi,QWORD PTR [rsp+0x60]
  4047eb:	shr    ecx,0x3
  4047ee:	rep stos QWORD PTR es:[rdi],rax
  4047f1:	mov    r9,QWORD PTR [r12]
  4047f5:	call   0x4226c0
  4047fa:	mov    ebp,DWORD PTR [rsp+0x30]
  4047fe:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404805:	jl     0x40463d
  40480b:	mov    eax,DWORD PTR [rbx+0x70]
  40480e:	test   eax,eax
  404810:	jne    0x404820
  404812:	cmp    QWORD PTR [rip+0x3eeae],0x0        # 0x4436c8
  40481a:	je     0x404d4f
  404820:	lea    r8,[rip+0x2e531]        # 0x432d58
  404827:	mov    edx,0x18
  40482c:	xor    ecx,ecx
  40482e:	call   0x4226c0
  404833:	lea    r8,[rip+0x2e556]        # 0x432d90
  40483a:	mov    edx,0x30
  40483f:	xor    ecx,ecx
  404841:	call   0x4226c0
  404846:	xor    eax,eax
  404848:	add    rsp,0x78
  40484c:	pop    rbx
  40484d:	pop    rsi
  40484e:	pop    rdi
  40484f:	pop    rbp
  404850:	pop    r12
  404852:	pop    r13
  404854:	pop    r14
  404856:	pop    r15
  404858:	ret    
  404859:	nop    DWORD PTR [rax+0x0]
  404860:	movzx  eax,BYTE PTR [rsi+0x1]
  404864:	cmp    al,0x2d
  404866:	mov    BYTE PTR [rsp+0x47],al
  40486a:	je     0x4049b0
  404870:	cmp    BYTE PTR [rsp+0x47],0x0
  404875:	je     0x40467f
  40487b:	mov    eax,DWORD PTR [rsp+0x6c]
  40487f:	add    eax,0x1
  404882:	cmp    eax,DWORD PTR [rsp+0x30]
  404886:	je     0x40467f
  40488c:	mov    edx,DWORD PTR [rsp+0xe8]
  404893:	lea    rdi,[rsi+0x1]
  404897:	test   edx,edx
  404899:	jle    0x4048e7
  40489b:	xor    r13d,r13d
  40489e:	mov    QWORD PTR [rsp+0xc0],rbx
  4048a6:	mov    r15,r12
  4048a9:	mov    ebx,r13d
  4048ac:	mov    r13d,DWORD PTR [rsp+0xe8]
  4048b4:	mov    rcx,QWORD PTR [r15+0x8]
  4048b8:	mov    r14,r15
  4048bb:	sub    r14,r12
  4048be:	test   rcx,rcx
  4048c1:	je     0x4048d3
  4048c3:	mov    rdx,rdi
  4048c6:	call   0x42faf8
  4048cb:	test   eax,eax
  4048cd:	je     0x4049d0
  4048d3:	add    ebx,0x1
  4048d6:	add    r15,0x18
  4048da:	cmp    ebx,r13d
  4048dd:	jne    0x4048b4
  4048df:	mov    rbx,QWORD PTR [rsp+0xc0]
  4048e7:	mov    edx,0x3a
  4048ec:	mov    rcx,rdi
  4048ef:	call   0x42fb00
  4048f4:	test   rax,rax
  4048f7:	je     0x404d42
  4048fd:	sub    eax,edi
  4048ff:	mov    rcx,QWORD PTR [rsp+0xd8]
  404907:	mov    r15,QWORD PTR [rcx]
  40490a:	test   r15,r15
  40490d:	je     0x404944
  40490f:	movsxd r13,eax
  404912:	mov    r14,rcx
  404915:	mov    r8,r13
  404918:	mov    rdx,r15
  40491b:	mov    rcx,rdi
  40491e:	call   0x42fac8
  404923:	test   eax,eax
  404925:	jne    0x404938
  404927:	mov    rcx,r15
  40492a:	call   0x42fad8
  40492f:	cmp    rax,r13
  404932:	je     0x404b91
  404938:	add    r14,0x28
  40493c:	mov    r15,QWORD PTR [r14]
  40493f:	test   r15,r15
  404942:	jne    0x404915
  404944:	mov    rcx,QWORD PTR [rsp+0x38]
  404949:	mov    rax,QWORD PTR [rsp+0xd0]
  404951:	mov    r8,QWORD PTR [rax+rcx*1+0x8]
  404956:	lea    r14,[rcx+0x8]
  40495a:	movzx  eax,BYTE PTR [rsp+0x47]
  40495f:	test   r8,r8
  404962:	je     0x404cba
  404968:	xor    ecx,ecx
  40496a:	mov    rdx,rdi
  40496d:	call   0x403e80
  404972:	test   eax,eax
  404974:	js     0x404cab
  40497a:	mov    rax,QWORD PTR [rsp+0xd0]
  404982:	mov    rsi,QWORD PTR [rsp+0x38]
  404987:	lea    r8,[rip+0x2e31a]        # 0x432ca8
  40498e:	mov    r9,rdi
  404991:	mov    edx,0x30
  404996:	xor    ecx,ecx
  404998:	add    ebp,0x2
  40499b:	mov    rax,QWORD PTR [rax+rsi*1+0x8]
  4049a0:	mov    QWORD PTR [rsp+0x20],rax
  4049a5:	call   0x4226c0
  4049aa:	jmp    0x404630
  4049af:	nop
  4049b0:	cmp    BYTE PTR [rsi+0x2],0x0
  4049b4:	jne    0x40487b
  4049ba:	mov    eax,DWORD PTR [rsp+0x30]
  4049be:	mov    DWORD PTR [rsp+0x6c],eax
  4049c2:	mov    ebp,eax
  4049c4:	jmp    0x404630
  4049c9:	nop    DWORD PTR [rax+0x0]
  4049d0:	mov    r13d,ebx
  4049d3:	mov    rbx,QWORD PTR [rsp+0xc0]
  4049db:	test   r13d,r13d
  4049de:	js     0x4048e7
  4049e4:	mov    rax,QWORD PTR [rsp+0xd0]
  4049ec:	mov    rsi,QWORD PTR [rsp+0x38]
  4049f1:	mov    rsi,QWORD PTR [rax+rsi*1+0x8]
  4049f6:	test   rsi,rsi
  4049f9:	je     0x404d8a
  4049ff:	add    r14,QWORD PTR [rbx+0x48]
  404a03:	mov    eax,DWORD PTR [r14+0x10]
  404a07:	mov    rcx,QWORD PTR [r14+0x8]
  404a0b:	lea    r13d,[rax+0x1]
  404a0f:	cmp    r13d,0x1c71c70
  404a16:	jg     0x404e66
  404a1c:	movsxd rdi,r13d
  404a1f:	mov    r8d,0x48
  404a25:	mov    rdx,rdi
  404a28:	call   0x4225b8
  404a2d:	test   rax,rax
  404a30:	mov    r9,rax
  404a33:	je     0x404e7e
  404a39:	mov    eax,DWORD PTR [r14+0x10]
  404a3d:	mov    edx,r13d
  404a40:	mov    QWORD PTR [rsp+0x30],r9
  404a45:	add    ebp,0x2
  404a48:	sub    edx,eax
  404a4a:	lea    ecx,[rax+rax*8]
  404a4d:	lea    r8d,[rdx+rdx*8]
  404a51:	xor    edx,edx
  404a53:	shl    ecx,0x3
  404a56:	shl    r8d,0x3
  404a5a:	movsxd rcx,ecx
  404a5d:	add    rcx,r9
  404a60:	movsxd r8,r8d
  404a63:	call   0x42fb30
  404a68:	mov    r9,QWORD PTR [rsp+0x30]
  404a6d:	lea    rax,[rdi+rdi*8]
  404a71:	mov    DWORD PTR [r14+0x10],r13d
  404a75:	mov    rdx,QWORD PTR [rbx+0x58]
  404a79:	mov    rdi,QWORD PTR [rsp+0x50]
  404a7e:	lea    r8,[rip+0x2d930]        # 0x4323b5
  404a85:	lea    rax,[r9+rax*8-0x48]
  404a8a:	mov    QWORD PTR [r14+0x8],r9
  404a8e:	xor    r9d,r9d
  404a91:	mov    rcx,rdi
  404a94:	mov    QWORD PTR [rax],rdx
  404a97:	mov    rdx,QWORD PTR [rbx+0x60]
  404a9b:	mov    QWORD PTR [rax+0x8],rdx
  404a9f:	mov    rdx,QWORD PTR [rbx+0x68]
  404aa3:	mov    QWORD PTR [rax+0x10],rdx
  404aa7:	mov    rdx,QWORD PTR [rbx+0x70]
  404aab:	mov    QWORD PTR [rax+0x18],rdx
  404aaf:	mov    rdx,QWORD PTR [rbx+0x78]
  404ab3:	mov    QWORD PTR [rax+0x20],rdx
  404ab7:	mov    rdx,QWORD PTR [rbx+0x80]
  404abe:	mov    QWORD PTR [rax+0x28],rdx
  404ac2:	mov    rdx,QWORD PTR [rbx+0x88]
  404ac9:	mov    QWORD PTR [rax+0x8],rsi
  404acd:	mov    QWORD PTR [rax+0x30],rdx
  404ad1:	mov    rdx,QWORD PTR [r14]
  404ad4:	mov    QWORD PTR [rax],rdx
  404ad7:	mov    rdx,QWORD PTR [rdi]
  404ada:	mov    QWORD PTR [rax+0x38],rdx
  404ade:	mov    rdx,QWORD PTR [rip+0x3ebd3]        # 0x4436b8
  404ae5:	mov    QWORD PTR [rax+0x40],rdx
  404ae9:	mov    rdx,QWORD PTR [rip+0x3ebd8]        # 0x4436c8
  404af0:	mov    QWORD PTR [rip+0x3ebcd],0x0        # 0x4436c8
  404afb:	mov    QWORD PTR [rax+0x20],rdx
  404aff:	mov    rdx,QWORD PTR [rip+0x3ebba]        # 0x4436c0
  404b06:	mov    QWORD PTR [rip+0x3ebaf],0x0        # 0x4436c0
  404b11:	mov    QWORD PTR [rax+0x28],rdx
  404b15:	mov    rdx,QWORD PTR [rip+0x3ebb4]        # 0x4436d0
  404b1c:	mov    QWORD PTR [rax+0x30],rdx
  404b20:	lea    rdx,[rip+0x2d896]        # 0x4323bd
  404b27:	mov    QWORD PTR [rip+0x3eb9e],0x0        # 0x4436d0
  404b32:	mov    QWORD PTR [rdi],0x0
  404b39:	mov    QWORD PTR [rip+0x3eb74],0x0        # 0x4436b8
  404b44:	call   0x422808
  404b49:	mov    rax,QWORD PTR [rsp+0x48]
  404b4e:	lea    r8,[rip+0x2e0f3]        # 0x432c48
  404b55:	mov    edx,0x30
  404b5a:	mov    QWORD PTR [rax],0x0
  404b61:	mov    rax,QWORD PTR [rsp+0x58]
  404b66:	mov    QWORD PTR [rax-0x10],0x0
  404b6e:	mov    ecx,DWORD PTR [rsp+0x68]
  404b72:	xor    eax,eax
  404b74:	mov    rdi,QWORD PTR [rsp+0x60]
  404b79:	shr    ecx,0x3
  404b7c:	rep stos QWORD PTR es:[rdi],rax
  404b7f:	mov    QWORD PTR [rsp+0x20],rsi
  404b84:	mov    r9,QWORD PTR [r15]
  404b87:	call   0x4226c0
  404b8c:	jmp    0x404630
  404b91:	mov    eax,DWORD PTR [r14+0x8]
  404b95:	test   ah,0x8
  404b98:	jne    0x404c81
  404b9e:	test   al,0x1
  404ba0:	je     0x404c9f
  404ba6:	lea    esi,[rbp+0x2]
  404ba9:	mov    rdx,QWORD PTR [rsp+0xd0]
  404bb1:	mov    DWORD PTR [rsp+0x30],esi
  404bb5:	mov    rsi,QWORD PTR [rsp+0x38]
  404bba:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404bbf:	test   rbp,rbp
  404bc2:	je     0x404d8a
  404bc8:	mov    r15,QWORD PTR [rsp+0x48]
  404bcd:	test   ah,0xe0
  404bd0:	cmove  r15,rbx
  404bd4:	mov    eax,DWORD PTR [r15+0x18]
  404bd8:	mov    rcx,QWORD PTR [r15+0x10]
  404bdc:	lea    esi,[rax+0x1]
  404bdf:	cmp    esi,0x5555554
  404be5:	jg     0x404e66
  404beb:	movsxd rax,esi
  404bee:	mov    r8d,0x18
  404bf4:	mov    rdx,rax
  404bf7:	mov    QWORD PTR [rsp+0x38],rax
  404bfc:	call   0x4225b8
  404c01:	test   rax,rax
  404c04:	mov    r13,rax
  404c07:	je     0x404e7e
  404c0d:	mov    eax,DWORD PTR [r15+0x18]
  404c11:	mov    edx,esi
  404c13:	sub    edx,eax
  404c15:	lea    ecx,[rax+rax*2]
  404c18:	lea    r8d,[rdx+rdx*2]
  404c1c:	xor    edx,edx
  404c1e:	shl    ecx,0x3
  404c21:	shl    r8d,0x3
  404c25:	movsxd rcx,ecx
  404c28:	add    rcx,r13
  404c2b:	movsxd r8,r8d
  404c2e:	call   0x42fb30
  404c33:	mov    rax,QWORD PTR [rsp+0x38]
  404c38:	mov    DWORD PTR [r15+0x18],esi
  404c3c:	lea    r8,[rip+0x2e02d]        # 0x432c70
  404c43:	mov    QWORD PTR [r15+0x10],r13
  404c47:	mov    edx,0x30
  404c4c:	xor    ecx,ecx
  404c4e:	lea    rax,[rax+rax*2]
  404c52:	lea    rax,[r13+rax*8-0x18]
  404c57:	mov    QWORD PTR [rax+0x10],rbp
  404c5b:	mov    QWORD PTR [rax],r14
  404c5e:	mov    QWORD PTR [rax+0x8],rdi
  404c62:	mov    QWORD PTR [rsp+0x28],rbp
  404c67:	mov    rax,QWORD PTR [r14+0x18]
  404c6b:	mov    QWORD PTR [rsp+0x20],rax
  404c70:	mov    r9,QWORD PTR [r14]
  404c73:	call   0x4226c0
  404c78:	mov    ebp,DWORD PTR [rsp+0x30]
  404c7c:	jmp    0x404630
  404c81:	lea    esi,[rbp+0x2]
  404c84:	mov    rdx,QWORD PTR [rsp+0xd0]
  404c8c:	mov    DWORD PTR [rsp+0x30],esi
  404c90:	mov    rsi,QWORD PTR [rsp+0x38]
  404c95:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404c9a:	jmp    0x404bc8
  404c9f:	lea    rbp,[rip+0x2dc8b]        # 0x432931
  404ca6:	jmp    0x404bc8
  404cab:	cmp    eax,0xabafb008
  404cb0:	jne    0x404e90
  404cb6:	movzx  eax,BYTE PTR [rsi+0x1]
  404cba:	cmp    al,0x6e
  404cbc:	jne    0x404d22
  404cbe:	cmp    BYTE PTR [rsi+0x2],0x6f
  404cc2:	jne    0x404d22
  404cc4:	lea    rbp,[rsi+0x3]
  404cc8:	mov    edx,0x3a
  404ccd:	mov    rcx,rbp
  404cd0:	call   0x42fb00
  404cd5:	test   rax,rax
  404cd8:	je     0x404e83
  404cde:	sub    eax,ebp
  404ce0:	mov    rsi,QWORD PTR [rsp+0xd8]
  404ce8:	mov    r13,QWORD PTR [rsi]
  404ceb:	test   r13,r13
  404cee:	je     0x404d22
  404cf0:	movsxd r14,eax
  404cf3:	mov    r8,r14
  404cf6:	mov    rdx,r13
  404cf9:	mov    rcx,rbp
  404cfc:	call   0x42fac8
  404d01:	test   eax,eax
  404d03:	jne    0x404d16
  404d05:	mov    rcx,r13
  404d08:	call   0x42fad8
  404d0d:	cmp    rax,r14
  404d10:	je     0x404daa
  404d16:	add    rsi,0x28
  404d1a:	mov    r13,QWORD PTR [rsi]
  404d1d:	test   r13,r13
  404d20:	jne    0x404cf3
  404d22:	lea    r8,[rip+0x2e00e]        # 0x432d37
  404d29:	mov    r9,rdi
  404d2c:	mov    edx,0x10
  404d31:	xor    ecx,ecx
  404d33:	call   0x4226c0
  404d38:	mov    eax,0xabafb008
  404d3d:	jmp    0x404848
  404d42:	mov    rcx,rdi
  404d45:	call   0x42fad8
  404d4a:	jmp    0x4048ff
  404d4f:	cmp    QWORD PTR [rip+0x3e969],0x0        # 0x4436c0
  404d57:	jne    0x404820
  404d5d:	cmp    QWORD PTR [rip+0x3e96b],0x0        # 0x4436d0
  404d65:	jne    0x404820
  404d6b:	jmp    0x404833
  404d70:	lea    rdx,[rsp+0xd0]
  404d78:	lea    rcx,[rsp+0xc8]
  404d80:	call   0x401910
  404d85:	jmp    0x4044f7
  404d8a:	lea    r8,[rip+0x2de8f]        # 0x432c20
  404d91:	mov    r9,rdi
  404d94:	mov    edx,0x10
  404d99:	xor    ecx,ecx
  404d9b:	call   0x4226c0
  404da0:	mov    eax,0xffffffea
  404da5:	jmp    0x404848
  404daa:	mov    eax,DWORD PTR [rsi+0x8]
  404dad:	test   al,0x2
  404daf:	je     0x404d22
  404db5:	mov    r13,QWORD PTR [rsp+0x48]
  404dba:	test   ah,0xe0
  404dbd:	cmove  r13,rbx
  404dc1:	mov    eax,DWORD PTR [r13+0x18]
  404dc5:	mov    rcx,QWORD PTR [r13+0x10]
  404dc9:	lea    ebp,[rax+0x1]
  404dcc:	cmp    ebp,0x5555554
  404dd2:	jg     0x404e66
  404dd8:	movsxd r15,ebp
  404ddb:	mov    r8d,0x18
  404de1:	mov    rdx,r15
  404de4:	call   0x4225b8
  404de9:	test   rax,rax
  404dec:	mov    r14,rax
  404def:	je     0x404e7e
  404df5:	mov    eax,DWORD PTR [r13+0x18]
  404df9:	mov    edx,ebp
  404dfb:	sub    edx,eax
  404dfd:	lea    ecx,[rax+rax*2]
  404e00:	lea    r8d,[rdx+rdx*2]
  404e04:	xor    edx,edx
  404e06:	shl    ecx,0x3
  404e09:	shl    r8d,0x3
  404e0d:	movsxd rcx,ecx
  404e10:	add    rcx,r14
  404e13:	movsxd r8,r8d
  404e16:	call   0x42fb30
  404e1b:	lea    rax,[r15+r15*2]
  404e1f:	mov    DWORD PTR [r13+0x18],ebp
  404e23:	mov    QWORD PTR [r13+0x10],r14
  404e27:	lea    r8,[rip+0x2deda]        # 0x432d08
  404e2e:	mov    edx,0x30
  404e33:	xor    ecx,ecx
  404e35:	lea    rax,[r14+rax*8-0x18]
  404e3a:	mov    QWORD PTR [rax+0x8],rdi
  404e3e:	lea    rdi,[rip+0x2daee]        # 0x432933
  404e45:	mov    QWORD PTR [rax],rsi
  404e48:	mov    QWORD PTR [rax+0x10],rdi
  404e4c:	mov    rax,QWORD PTR [rsi+0x18]
  404e50:	mov    QWORD PTR [rsp+0x20],rax
  404e55:	mov    r9,QWORD PTR [rsi]
  404e58:	call   0x4226c0
  404e5d:	mov    ebp,DWORD PTR [rsp+0x30]
  404e61:	jmp    0x404630
  404e66:	lea    r8,[rip+0x2db0d]        # 0x43297a
  404e6d:	mov    edx,0x10
  404e72:	xor    ecx,ecx
  404e74:	call   0x4226c0
  404e79:	jmp    0x40454c
  404e7e:	call   0x430066
  404e83:	mov    rcx,rbp
  404e86:	call   0x42fad8
  404e8b:	jmp    0x404ce0
  404e90:	mov    r13,rdi
  404e93:	mov    edi,eax
  404e95:	mov    rax,QWORD PTR [rsp+0xd0]
  404e9d:	lea    r8,[rip+0x2de34]        # 0x432cd8
  404ea4:	mov    r9,r13
  404ea7:	mov    edx,0x10
  404eac:	xor    ecx,ecx
  404eae:	mov    rax,QWORD PTR [rax+r14*1]
  404eb2:	mov    QWORD PTR [rsp+0x20],rax
  404eb7:	call   0x4226c0
  404ebc:	mov    eax,edi
  404ebe:	jmp    0x404848
  404ec3:	nop    DWORD PTR [rax]
  404ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ed0:	push   rbx
  404ed1:	sub    rsp,0x30
  404ed5:	mov    rbx,r8
  404ed8:	call   0x422730
  404edd:	lea    rcx,[rsp+0x2c]
  404ee2:	mov    rdx,rbx
  404ee5:	mov    DWORD PTR [rsp+0x2c],eax
  404ee9:	call   0x4225f8
  404eee:	test   eax,eax
  404ef0:	js     0x404efd
  404ef2:	mov    ecx,DWORD PTR [rsp+0x2c]
  404ef6:	call   0x4227c8
  404efb:	xor    eax,eax
  404efd:	add    rsp,0x30
  404f01:	pop    rbx
  404f02:	ret    
  404f03:	nop    DWORD PTR [rax]
  404f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f10:	push   rbp
  404f11:	push   rdi
  404f12:	push   rsi
  404f13:	push   rbx
  404f14:	sub    rsp,0xc8
  404f1b:	lea    rsi,[rip+0x2c11e]        # 0x431040
  404f22:	mov    ecx,0x12
  404f27:	lea    rbp,[rsp+0x30]
  404f2c:	mov    rbx,r8
  404f2f:	mov    rdi,rbp
  404f32:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404f35:	call   0x4226a0
  404f3a:	lea    rdx,[rip+0x2de74]        # 0x432db5
  404f41:	mov    esi,eax
  404f43:	mov    rcx,rbx
  404f46:	call   0x42fab8
  404f4b:	mov    ecx,esi
  404f4d:	or     esi,0x1
  404f50:	mov    QWORD PTR [rsp+0x28],rax
  404f55:	and    ecx,0xfffffffe
  404f58:	test   rax,rax
  404f5b:	cmove  ecx,esi
  404f5e:	call   0x422688
  404f63:	mov    rax,QWORD PTR [rsp+0x28]
  404f68:	cmp    rax,rbx
  404f6b:	je     0x405080
  404f71:	test   rax,rax
  404f74:	je     0x404f7f
  404f76:	cmp    BYTE PTR [rbx],0x0
  404f79:	je     0x40506c
  404f7f:	mov    rcx,QWORD PTR [rsp+0x30]
  404f84:	mov    rdx,rbx
  404f87:	call   0x42faf8
  404f8c:	test   eax,eax
  404f8e:	je     0x4050c0
  404f94:	mov    rcx,QWORD PTR [rsp+0x40]
  404f99:	mov    rdx,rbx
  404f9c:	call   0x42faf8
  404fa1:	test   eax,eax
  404fa3:	je     0x4050c4
  404fa9:	mov    rcx,QWORD PTR [rsp+0x50]
  404fae:	mov    rdx,rbx
  404fb1:	call   0x42faf8
  404fb6:	test   eax,eax
  404fb8:	je     0x4050d0
  404fbe:	mov    rcx,QWORD PTR [rsp+0x60]
  404fc3:	mov    rdx,rbx
  404fc6:	call   0x42faf8
  404fcb:	test   eax,eax
  404fcd:	je     0x4050e0
  404fd3:	mov    rcx,QWORD PTR [rsp+0x70]
  404fd8:	mov    rdx,rbx
  404fdb:	call   0x42faf8
  404fe0:	test   eax,eax
  404fe2:	je     0x4050f0
  404fe8:	mov    rcx,QWORD PTR [rsp+0x80]
  404ff0:	mov    rdx,rbx
  404ff3:	call   0x42faf8
  404ff8:	test   eax,eax
  404ffa:	je     0x405100
  405000:	mov    rcx,QWORD PTR [rsp+0x90]
  405008:	mov    rdx,rbx
  40500b:	call   0x42faf8
  405010:	test   eax,eax
  405012:	je     0x405093
  405014:	mov    rcx,QWORD PTR [rsp+0xa0]
  40501c:	mov    rdx,rbx
  40501f:	call   0x42faf8
  405024:	test   eax,eax
  405026:	je     0x405110
  40502c:	mov    rcx,QWORD PTR [rsp+0xb0]
  405034:	mov    rdx,rbx
  405037:	call   0x42faf8
  40503c:	test   eax,eax
  40503e:	je     0x405120
  405044:	lea    rdx,[rsp+0x28]
  405049:	mov    rcx,rbx
  40504c:	mov    r8d,0xa
  405052:	call   0x42faa8
  405057:	mov    ecx,eax
  405059:	mov    rax,QWORD PTR [rsp+0x28]
  40505e:	cmp    BYTE PTR [rax],0x0
  405061:	jne    0x40512a
  405067:	call   0x422680
  40506c:	xor    eax,eax
  40506e:	add    rsp,0xc8
  405075:	pop    rbx
  405076:	pop    rsi
  405077:	pop    rdi
  405078:	pop    rbp
  405079:	ret    
  40507a:	nop    WORD PTR [rax+rax*1+0x0]
  405080:	xor    eax,eax
  405082:	cmp    BYTE PTR [rbx+0x6],0x2b
  405086:	sete   al
  405089:	lea    rbx,[rbx+rax*1+0x6]
  40508e:	jmp    0x404f76
  405093:	mov    eax,0x6
  405098:	nop    DWORD PTR [rax+rax*1+0x0]
  4050a0:	shl    rax,0x4
  4050a4:	mov    ecx,DWORD PTR [rsp+rax*1+0x38]
  4050a8:	call   0x422680
  4050ad:	xor    eax,eax
  4050af:	add    rsp,0xc8
  4050b6:	pop    rbx
  4050b7:	pop    rsi
  4050b8:	pop    rdi
  4050b9:	pop    rbp
  4050ba:	ret    
  4050bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050c0:	xor    eax,eax
  4050c2:	jmp    0x4050a0
  4050c4:	mov    eax,0x1
  4050c9:	jmp    0x4050a0
  4050cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	mov    eax,0x2
  4050d5:	jmp    0x4050a0
  4050d7:	nop    WORD PTR [rax+rax*1+0x0]
  4050e0:	mov    eax,0x3
  4050e5:	jmp    0x4050a0
  4050e7:	nop    WORD PTR [rax+rax*1+0x0]
  4050f0:	mov    eax,0x4
  4050f5:	jmp    0x4050a0
  4050f7:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	mov    eax,0x5
  405105:	jmp    0x4050a0
  405107:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	mov    eax,0x7
  405115:	jmp    0x4050a0
  405117:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    eax,0x8
  405125:	jmp    0x4050a0
  40512a:	mov    r9,rbx
  40512d:	lea    r8,[rip+0x2dc94]        # 0x432dc8
  405134:	lea    rbx,[rsp+0xc0]
  40513c:	mov    edx,0x8
  405141:	xor    ecx,ecx
  405143:	call   0x4226c0
  405148:	mov    r9,QWORD PTR [rbp+0x0]
  40514c:	lea    r8,[rip+0x2dc69]        # 0x432dbc
  405153:	xor    ecx,ecx
  405155:	mov    edx,0x8
  40515a:	add    rbp,0x10
  40515e:	call   0x4226c0
  405163:	cmp    rbp,rbx
  405166:	jne    0x405148
  405168:	mov    ecx,0x1
  40516d:	call   0x401cb0
  405172:	nop
  405173:	nop    DWORD PTR [rax]
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	push   r15
  405182:	push   r14
  405184:	push   r13
  405186:	push   r12
  405188:	push   rbp
  405189:	push   rdi
  40518a:	push   rsi
  40518b:	push   rbx
  40518c:	sub    rsp,0x38
  405190:	lea    r9,[rip+0x2dc9c]        # 0x432e33
  405197:	mov    r13,r8
  40519a:	mov    r14d,ecx
  40519d:	mov    rsi,rdx
  4051a0:	call   0x403cb0
  4051a5:	cmp    QWORD PTR [r13+0x0],0x0
  4051aa:	je     0x4051ce
  4051ac:	mov    rdx,r13
  4051af:	nop
  4051b0:	mov    ecx,DWORD PTR [rdx+0x8]
  4051b3:	test   ch,0x20
  4051b6:	je     0x4051c4
  4051b8:	and    ecx,0xc0000
  4051be:	je     0x4053d7
  4051c4:	add    rdx,0x28
  4051c8:	cmp    QWORD PTR [rdx],0x0
  4051cc:	jne    0x4051b0
  4051ce:	test   eax,eax
  4051d0:	je     0x4053b5
  4051d6:	cdqe   
  4051d8:	mov    r8,QWORD PTR [rsi+rax*8+0x8]
  4051dd:	test   r8,r8
  4051e0:	je     0x4051f0
  4051e2:	lea    rdx,[rip+0x2dc4a]        # 0x432e33
  4051e9:	xor    ecx,ecx
  4051eb:	call   0x404f10
  4051f0:	lea    r9,[rip+0x2dc6b]        # 0x432e62
  4051f7:	mov    r8,r13
  4051fa:	mov    rdx,rsi
  4051fd:	mov    ecx,r14d
  405200:	call   0x403cb0
  405205:	lea    rcx,[rip+0x2dc5d]        # 0x432e69
  40520c:	mov    ebx,eax
  40520e:	call   0x42fb80
  405213:	test   rax,rax
  405216:	jne    0x405250
  405218:	test   ebx,ebx
  40521a:	jne    0x405250
  40521c:	lea    r9,[rip+0x2dc69]        # 0x432e8c
  405223:	mov    r8,r13
  405226:	mov    rdx,rsi
  405229:	mov    ecx,r14d
  40522c:	call   0x403cb0
  405231:	test   eax,eax
  405233:	je     0x40523f
  405235:	mov    DWORD PTR [rip+0x3cdf1],0x1        # 0x442030
  40523f:	add    rsp,0x38
  405243:	pop    rbx
  405244:	pop    rsi
  405245:	pop    rdi
  405246:	pop    rbp
  405247:	pop    r12
  405249:	pop    r13
  40524b:	pop    r14
  40524d:	pop    r15
  40524f:	ret    
  405250:	mov    rcx,rax
  405253:	call   0x401cd0
  405258:	mov    rcx,QWORD PTR [rip+0x3cdf1]        # 0x442050
  40525f:	test   rcx,rcx
  405262:	je     0x40521c
  405264:	lea    rdx,[rip+0x2dc07]        # 0x432e72
  40526b:	call   0x401590
  405270:	test   r14d,r14d
  405273:	jle    0x4052fd
  405279:	lea    edi,[r14-0x1]
  40527d:	xor    ebx,ebx
  40527f:	mov    r12d,0xa
  405285:	mov    rbp,rdi
  405288:	add    rdi,0x1
  40528c:	nop    DWORD PTR [rax+0x0]
  405290:	mov    r15,QWORD PTR [rsi+rbx*8]
  405294:	movzx  eax,BYTE PTR [r15]
  405298:	test   al,al
  40529a:	je     0x4052ce
  40529c:	mov    rdx,r15
  40529f:	nop
  4052a0:	lea    ecx,[rax-0x2b]
  4052a3:	cmp    cl,0xf
  4052a6:	lea    ecx,[rax-0x40]
  4052a9:	seta   r8b
  4052ad:	cmp    cl,0x1a
  4052b0:	seta   cl
  4052b3:	test   r8b,cl
  4052b6:	je     0x4052c3
  4052b8:	cmp    al,0x5f
  4052ba:	je     0x4052c3
  4052bc:	sub    eax,0x61
  4052bf:	cmp    al,0x19
  4052c1:	ja     0x405310
  4052c3:	add    rdx,0x1
  4052c7:	movzx  eax,BYTE PTR [rdx]
  4052ca:	test   al,al
  4052cc:	jne    0x4052a0
  4052ce:	mov    rdx,QWORD PTR [rip+0x3cd7b]        # 0x442050
  4052d5:	mov    rcx,r15
  4052d8:	call   0x42fba8
  4052dd:	mov    rdx,QWORD PTR [rip+0x3cd6c]        # 0x442050
  4052e4:	cmp    ebp,ebx
  4052e6:	mov    ecx,0x20
  4052eb:	cmovle ecx,r12d
  4052ef:	add    rbx,0x1
  4052f3:	call   0x42fbb0
  4052f8:	cmp    rbx,rdi
  4052fb:	jne    0x405290
  4052fd:	mov    rcx,QWORD PTR [rip+0x3cd4c]        # 0x442050
  405304:	call   0x42fbd0
  405309:	jmp    0x40521c
  40530e:	xchg   ax,ax
  405310:	mov    rdx,QWORD PTR [rip+0x3cd39]        # 0x442050
  405317:	mov    ecx,0x22
  40531c:	call   0x42fbb0
  405321:	movzx  r8d,BYTE PTR [r15]
  405325:	test   r8b,r8b
  405328:	jne    0x405350
  40532a:	jmp    0x405385
  40532c:	nop    DWORD PTR [rax+0x0]
  405330:	mov    rcx,QWORD PTR [rip+0x3cd19]        # 0x442050
  405337:	lea    rdx,[rip+0x2db47]        # 0x432e85
  40533e:	call   0x401590
  405343:	add    r15,0x1
  405347:	movzx  r8d,BYTE PTR [r15]
  40534b:	test   r8b,r8b
  40534e:	je     0x405385
  405350:	lea    eax,[r8-0x22]
  405354:	test   al,0xfd
  405356:	je     0x4053a0
  405358:	lea    eax,[r8-0x5c]
  40535c:	test   al,0xfb
  40535e:	je     0x4053a0
  405360:	lea    eax,[r8-0x20]
  405364:	cmp    al,0x5e
  405366:	ja     0x405330
  405368:	mov    rdx,QWORD PTR [rip+0x3cce1]        # 0x442050
  40536f:	movzx  ecx,r8b
  405373:	add    r15,0x1
  405377:	call   0x42fbb0
  40537c:	movzx  r8d,BYTE PTR [r15]
  405380:	test   r8b,r8b
  405383:	jne    0x405350
  405385:	mov    rdx,QWORD PTR [rip+0x3ccc4]        # 0x442050
  40538c:	mov    ecx,0x22
  405391:	call   0x42fbb0
  405396:	jmp    0x4052dd
  40539b:	nop    DWORD PTR [rax+rax*1+0x0]
  4053a0:	mov    rcx,QWORD PTR [rip+0x3cca9]        # 0x442050
  4053a7:	lea    rdx,[rip+0x2dad3]        # 0x432e81
  4053ae:	call   0x401590
  4053b3:	jmp    0x405343
  4053b5:	lea    r9,[rip+0x2daa4]        # 0x432e60
  4053bc:	mov    r8,r13
  4053bf:	mov    rdx,rsi
  4053c2:	mov    ecx,r14d
  4053c5:	call   0x403cb0
  4053ca:	test   eax,eax
  4053cc:	je     0x4051f0
  4053d2:	jmp    0x4051d6
  4053d7:	lea    rax,[rip+0x2cd18]        # 0x4320f6
  4053de:	lea    r9,[rip+0x2da5b]        # 0x432e40
  4053e5:	lea    r8,[rip+0x2ccec]        # 0x4320d8
  4053ec:	xor    edx,edx
  4053ee:	xor    ecx,ecx
  4053f0:	mov    DWORD PTR [rsp+0x28],0x1ee
  4053f8:	mov    QWORD PTR [rsp+0x20],rax
  4053fd:	call   0x4226c0
  405402:	call   0x42fbf8
  405407:	nop
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	xor    ecx,ecx
  405412:	jmp    0x401cd0
  405417:	nop    WORD PTR [rax+rax*1+0x0]
  405420:	push   rbx
  405421:	sub    rsp,0x30
  405425:	mov    rbx,r8
  405428:	lea    rdx,[rsp+0x28]
  40542d:	mov    r8d,0xa
  405433:	mov    rcx,rbx
  405436:	call   0x42faa8
  40543b:	movsxd rcx,eax
  40543e:	mov    rax,QWORD PTR [rsp+0x28]
  405443:	cmp    BYTE PTR [rax],0x0
  405446:	jne    0x405455
  405448:	call   0x422660
  40544d:	xor    eax,eax
  40544f:	add    rsp,0x30
  405453:	pop    rbx
  405454:	ret    
  405455:	lea    r8,[rip+0x2da3c]        # 0x432e98
  40545c:	xor    ecx,ecx
  40545e:	mov    r9,rbx
  405461:	mov    edx,0x8
  405466:	call   0x4226c0
  40546b:	mov    ecx,0x1
  405470:	call   0x401cb0
  405475:	nop
  405476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405480:	sub    rsp,0x28
  405484:	lea    r8,[rip+0x2da2d]        # 0x432eb8
  40548b:	xor    ecx,ecx
  40548d:	mov    r9,rdx
  405490:	mov    edx,0x18
  405495:	call   0x4226c0
  40549a:	xor    eax,eax
  40549c:	add    rsp,0x28
  4054a0:	ret    
  4054a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rdi
  4054b1:	push   rsi
  4054b2:	push   rbx
  4054b3:	sub    rsp,0xb0
  4054ba:	mov    r8d,0x80
  4054c0:	lea    rbx,[rsp+0x30]
  4054c5:	mov    esi,edx
  4054c7:	mov    rdi,rcx
  4054ca:	mov    ecx,esi
  4054cc:	mov    rdx,rbx
  4054cf:	call   0x422570
  4054d4:	test   eax,eax
  4054d6:	js     0x405500
  4054d8:	lea    r8,[rip+0x2d9f9]        # 0x432ed8
  4054df:	mov    QWORD PTR [rsp+0x20],rbx
  4054e4:	mov    r9,rdi
  4054e7:	mov    edx,0x10
  4054ec:	xor    ecx,ecx
  4054ee:	call   0x4226c0
  4054f3:	nop
  4054f4:	add    rsp,0xb0
  4054fb:	pop    rbx
  4054fc:	pop    rsi
  4054fd:	pop    rdi
  4054fe:	ret    
  4054ff:	nop
  405500:	neg    esi
  405502:	mov    ecx,esi
  405504:	call   0x42fae8
  405509:	mov    rbx,rax
  40550c:	jmp    0x4054d8
  40550e:	xchg   ax,ax
  405510:	push   rdi
  405511:	push   rsi
  405512:	push   rbx
  405513:	sub    rsp,0x70
  405517:	lea    r9,[rip+0x2d9c2]        # 0x432ee0
  40551e:	call   0x403cb0
  405523:	or     eax,DWORD PTR [rip+0x3cb07]        # 0x442030
  405529:	je     0x405533
  40552b:	add    rsp,0x70
  40552f:	pop    rbx
  405530:	pop    rsi
  405531:	pop    rdi
  405532:	ret    
  405533:	mov    r9,QWORD PTR [rip+0x383d6]        # 0x43d910
  40553a:	lea    r8,[rip+0x2d9a7]        # 0x432ee8
  405541:	xor    ecx,ecx
  405543:	mov    edx,0x20
  405548:	lea    rbx,[rip+0x2cbe9]        # 0x432138
  40554f:	call   0x4226c0
  405554:	mov    rax,QWORD PTR [rip+0x383a5]        # 0x43d900
  40555b:	lea    r8,[rip+0x2d99e]        # 0x432f00
  405562:	xor    ecx,ecx
  405564:	mov    edx,0x20
  405569:	mov    DWORD PTR [rsp+0x20],0x7e0
  405571:	mov    rsi,rbx
  405574:	mov    r9d,DWORD PTR [rax]
  405577:	call   0x4226c0
  40557c:	lea    r8,[rip+0x2d0c9]        # 0x43264c
  405583:	xor    ecx,ecx
  405585:	mov    edx,0x20
  40558a:	call   0x4226c0
  40558f:	lea    rax,[rip+0x2d9a6]        # 0x432f3c
  405596:	lea    r9,[rip+0x2cb76]        # 0x432113
  40559d:	lea    r8,[rip+0x2d987]        # 0x432f2b
  4055a4:	xor    ecx,ecx
  4055a6:	mov    edx,0x20
  4055ab:	mov    QWORD PTR [rsp+0x20],rax
  4055b0:	call   0x4226c0
  4055b5:	lea    r9,[rip+0x2cb57]        # 0x432113
  4055bc:	lea    r8,[rip+0x2d98d]        # 0x432f50
  4055c3:	xor    ecx,ecx
  4055c5:	mov    edx,0x20
  4055ca:	call   0x4226c0
  4055cf:	call   0x422530
  4055d4:	mov    ecx,0x27a
  4055d9:	mov    rdi,rax
  4055dc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4055de:	je     0x405619
  4055e0:	mov    edx,DWORD PTR [rip+0x3ca4e]        # 0x442034
  4055e6:	test   edx,edx
  4055e8:	je     0x405c60
  4055ee:	mov    QWORD PTR [rsp+0x28],rax
  4055f3:	lea    rax,[rip+0x2dc2c]        # 0x433226
  4055fa:	lea    r9,[rip+0x2cb12]        # 0x432113
  405601:	lea    r8,[rip+0x2dc03]        # 0x43320b
  405608:	mov    edx,0x20
  40560d:	xor    ecx,ecx
  40560f:	mov    QWORD PTR [rsp+0x20],rax
  405614:	call   0x4226c0
  405619:	call   0x4223e0
  40561e:	mov    rsi,rbx
  405621:	mov    ecx,0x27a
  405626:	mov    rdi,rax
  405629:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40562b:	je     0x405666
  40562d:	mov    edi,DWORD PTR [rip+0x3ca01]        # 0x442034
  405633:	test   edi,edi
  405635:	je     0x405cd0
  40563b:	mov    QWORD PTR [rsp+0x28],rax
  405640:	lea    rax,[rip+0x2dbe6]        # 0x43322d
  405647:	lea    r9,[rip+0x2cac5]        # 0x432113
  40564e:	lea    r8,[rip+0x2dbb6]        # 0x43320b
  405655:	mov    edx,0x20
  40565a:	xor    ecx,ecx
  40565c:	mov    QWORD PTR [rsp+0x20],rax
  405661:	call   0x4226c0
  405666:	call   0x422230
  40566b:	mov    rsi,rbx
  40566e:	mov    ecx,0x27a
  405673:	mov    rdi,rax
  405676:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405678:	je     0x4056b3
  40567a:	mov    esi,DWORD PTR [rip+0x3c9b4]        # 0x442034
  405680:	test   esi,esi
  405682:	je     0x405bf0
  405688:	mov    QWORD PTR [rsp+0x28],rax
  40568d:	lea    rax,[rip+0x2dba1]        # 0x433235
  405694:	lea    r9,[rip+0x2ca78]        # 0x432113
  40569b:	lea    r8,[rip+0x2db69]        # 0x43320b
  4056a2:	mov    edx,0x20
  4056a7:	xor    ecx,ecx
  4056a9:	mov    QWORD PTR [rsp+0x20],rax
  4056ae:	call   0x4226c0
  4056b3:	call   0x422038
  4056b8:	mov    rsi,rbx
  4056bb:	mov    ecx,0x27a
  4056c0:	mov    rdi,rax
  4056c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4056c5:	je     0x405702
  4056c7:	mov    r11d,DWORD PTR [rip+0x3c966]        # 0x442034
  4056ce:	test   r11d,r11d
  4056d1:	je     0x405c93
  4056d7:	mov    QWORD PTR [rsp+0x28],rax
  4056dc:	lea    rax,[rip+0x2db5b]        # 0x43323e
  4056e3:	lea    r9,[rip+0x2ca29]        # 0x432113
  4056ea:	lea    r8,[rip+0x2db1a]        # 0x43320b
  4056f1:	mov    edx,0x20
  4056f6:	xor    ecx,ecx
  4056f8:	mov    QWORD PTR [rsp+0x20],rax
  4056fd:	call   0x4226c0
  405702:	call   0x422110
  405707:	mov    rsi,rbx
  40570a:	mov    ecx,0x27a
  40570f:	mov    rdi,rax
  405712:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405714:	je     0x405751
  405716:	mov    r10d,DWORD PTR [rip+0x3c917]        # 0x442034
  40571d:	test   r10d,r10d
  405720:	je     0x405c23
  405726:	mov    QWORD PTR [rsp+0x28],rax
  40572b:	lea    rax,[rip+0x2db15]        # 0x433247
  405732:	lea    r9,[rip+0x2c9da]        # 0x432113
  405739:	lea    r8,[rip+0x2dacb]        # 0x43320b
  405740:	mov    edx,0x20
  405745:	xor    ecx,ecx
  405747:	mov    QWORD PTR [rsp+0x20],rax
  40574c:	call   0x4226c0
  405751:	call   0x4224b0
  405756:	mov    rsi,rbx
  405759:	mov    ecx,0x27a
  40575e:	mov    rdi,rax
  405761:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405763:	je     0x4057a0
  405765:	mov    r9d,DWORD PTR [rip+0x3c8c8]        # 0x442034
  40576c:	test   r9d,r9d
  40576f:	je     0x405d03
  405775:	mov    QWORD PTR [rsp+0x28],rax
  40577a:	lea    rax,[rip+0x2dacf]        # 0x433250
  405781:	lea    r9,[rip+0x2c98b]        # 0x432113
  405788:	lea    r8,[rip+0x2da7c]        # 0x43320b
  40578f:	mov    edx,0x20
  405794:	xor    ecx,ecx
  405796:	mov    QWORD PTR [rsp+0x20],rax
  40579b:	call   0x4226c0
  4057a0:	call   0x4224f8
  4057a5:	mov    rsi,rbx
  4057a8:	mov    ecx,0x27a
  4057ad:	mov    rdi,rax
  4057b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4057b2:	je     0x4057ef
  4057b4:	mov    r8d,DWORD PTR [rip+0x3c879]        # 0x442034
  4057bb:	test   r8d,r8d
  4057be:	je     0x405d40
  4057c4:	mov    QWORD PTR [rsp+0x28],rax
  4057c9:	lea    rax,[rip+0x2da8b]        # 0x43325b
  4057d0:	lea    r9,[rip+0x2c93c]        # 0x432113
  4057d7:	lea    r8,[rip+0x2da2d]        # 0x43320b
  4057de:	mov    edx,0x20
  4057e3:	xor    ecx,ecx
  4057e5:	mov    QWORD PTR [rsp+0x20],rax
  4057ea:	call   0x4226c0
  4057ef:	call   0x4224d0
  4057f4:	mov    rsi,rbx
  4057f7:	mov    ecx,0x27a
  4057fc:	mov    rdi,rax
  4057ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405801:	jne    0x405b75
  405807:	call   0x4224c0
  40580c:	mov    rsi,rbx
  40580f:	mov    ecx,0x27a
  405814:	mov    rdi,rax
  405817:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405819:	je     0x405854
  40581b:	mov    edx,DWORD PTR [rip+0x3c813]        # 0x442034
  405821:	test   edx,edx
  405823:	je     0x405bb3
  405829:	mov    QWORD PTR [rsp+0x28],rax
  40582e:	lea    rax,[rip+0x2da39]        # 0x43326e
  405835:	lea    r9,[rip+0x2c8d7]        # 0x432113
  40583c:	lea    r8,[rip+0x2d9c8]        # 0x43320b
  405843:	mov    edx,0x20
  405848:	xor    ecx,ecx
  40584a:	mov    QWORD PTR [rsp+0x20],rax
  40584f:	call   0x4226c0
  405854:	call   0x422528
  405859:	movzx  edx,al
  40585c:	lea    r9,[rip+0x2c8b0]        # 0x432113
  405863:	lea    r8,[rip+0x2da0e]        # 0x433278
  40586a:	mov    DWORD PTR [rsp+0x50],edx
  40586e:	movzx  edx,ah
  405871:	shr    eax,0x10
  405874:	mov    DWORD PTR [rsp+0x40],eax
  405878:	lea    rax,[rip+0x2d9a7]        # 0x433226
  40587f:	xor    ecx,ecx
  405881:	mov    DWORD PTR [rsp+0x48],edx
  405885:	mov    DWORD PTR [rsp+0x38],0x64
  40588d:	mov    edx,0x20
  405892:	mov    QWORD PTR [rsp+0x20],rax
  405897:	mov    DWORD PTR [rsp+0x30],0x1f
  40589f:	mov    DWORD PTR [rsp+0x28],0x36
  4058a7:	call   0x4226c0
  4058ac:	call   0x422320
  4058b1:	movzx  edx,al
  4058b4:	lea    r9,[rip+0x2c858]        # 0x432113
  4058bb:	lea    r8,[rip+0x2d9b6]        # 0x433278
  4058c2:	mov    DWORD PTR [rsp+0x50],edx
  4058c6:	movzx  edx,ah
  4058c9:	shr    eax,0x10
  4058cc:	mov    DWORD PTR [rsp+0x40],eax
  4058d0:	lea    rax,[rip+0x2d956]        # 0x43322d
  4058d7:	xor    ecx,ecx
  4058d9:	mov    DWORD PTR [rsp+0x48],edx
  4058dd:	mov    DWORD PTR [rsp+0x38],0x64
  4058e5:	mov    edx,0x20
  4058ea:	mov    QWORD PTR [rsp+0x20],rax
  4058ef:	mov    DWORD PTR [rsp+0x30],0x3c
  4058f7:	mov    DWORD PTR [rsp+0x28],0x38
  4058ff:	call   0x4226c0
  405904:	call   0x4221d8
  405909:	movzx  edx,al
  40590c:	lea    r9,[rip+0x2c800]        # 0x432113
  405913:	lea    r8,[rip+0x2d95e]        # 0x433278
  40591a:	mov    DWORD PTR [rsp+0x50],edx
  40591e:	movzx  edx,ah
  405921:	shr    eax,0x10
  405924:	mov    DWORD PTR [rsp+0x40],eax
  405928:	lea    rax,[rip+0x2d906]        # 0x433235
  40592f:	xor    ecx,ecx
  405931:	mov    DWORD PTR [rsp+0x48],edx
  405935:	mov    DWORD PTR [rsp+0x38],0x65
  40593d:	mov    edx,0x20
  405942:	mov    QWORD PTR [rsp+0x20],rax
  405947:	mov    DWORD PTR [rsp+0x30],0x28
  40594f:	mov    DWORD PTR [rsp+0x28],0x38
  405957:	call   0x4226c0
  40595c:	call   0x422010
  405961:	movzx  edx,al
  405964:	lea    r9,[rip+0x2c7a8]        # 0x432113
  40596b:	lea    r8,[rip+0x2d906]        # 0x433278
  405972:	mov    DWORD PTR [rsp+0x50],edx
  405976:	movzx  edx,ah
  405979:	shr    eax,0x10
  40597c:	mov    DWORD PTR [rsp+0x40],eax
  405980:	lea    rax,[rip+0x2d8b7]        # 0x43323e
  405987:	xor    ecx,ecx
  405989:	mov    DWORD PTR [rsp+0x48],edx
  40598d:	mov    DWORD PTR [rsp+0x38],0x64
  405995:	mov    edx,0x20
  40599a:	mov    QWORD PTR [rsp+0x20],rax
  40599f:	mov    DWORD PTR [rsp+0x30],0x4
  4059a7:	mov    DWORD PTR [rsp+0x28],0x38
  4059af:	call   0x4226c0
  4059b4:	call   0x422060
  4059b9:	movzx  edx,al
  4059bc:	lea    r9,[rip+0x2c750]        # 0x432113
  4059c3:	lea    r8,[rip+0x2d8ae]        # 0x433278
  4059ca:	mov    DWORD PTR [rsp+0x50],edx
  4059ce:	movzx  edx,ah
  4059d1:	shr    eax,0x10
  4059d4:	mov    DWORD PTR [rsp+0x40],eax
  4059d8:	lea    rax,[rip+0x2d868]        # 0x433247
  4059df:	xor    ecx,ecx
  4059e1:	mov    DWORD PTR [rsp+0x48],edx
  4059e5:	mov    DWORD PTR [rsp+0x38],0x65
  4059ed:	mov    edx,0x20
  4059f2:	mov    QWORD PTR [rsp+0x20],rax
  4059f7:	mov    DWORD PTR [rsp+0x30],0x28
  4059ff:	mov    DWORD PTR [rsp+0x28],0x5
  405a07:	call   0x4226c0
  405a0c:	call   0x4224a0
  405a11:	movzx  edx,al
  405a14:	lea    r9,[rip+0x2c6f8]        # 0x432113
  405a1b:	lea    r8,[rip+0x2d856]        # 0x433278
  405a22:	mov    DWORD PTR [rsp+0x50],edx
  405a26:	movzx  edx,ah
  405a29:	shr    eax,0x10
  405a2c:	mov    DWORD PTR [rsp+0x40],eax
  405a30:	lea    rax,[rip+0x2d819]        # 0x433250
  405a37:	xor    ecx,ecx
  405a39:	mov    DWORD PTR [rsp+0x48],edx
  405a3d:	mov    DWORD PTR [rsp+0x38],0x0
  405a45:	mov    edx,0x20
  405a4a:	mov    QWORD PTR [rsp+0x20],rax
  405a4f:	mov    DWORD PTR [rsp+0x30],0x1
  405a57:	mov    DWORD PTR [rsp+0x28],0x2
  405a5f:	call   0x4226c0
  405a64:	call   0x4224f0
  405a69:	movzx  edx,al
  405a6c:	lea    r9,[rip+0x2c6a0]        # 0x432113
  405a73:	lea    r8,[rip+0x2d7fe]        # 0x433278
  405a7a:	mov    DWORD PTR [rsp+0x50],edx
  405a7e:	movzx  edx,ah
  405a81:	shr    eax,0x10
  405a84:	mov    DWORD PTR [rsp+0x40],eax
  405a88:	lea    rax,[rip+0x2d7cc]        # 0x43325b
  405a8f:	xor    ecx,ecx
  405a91:	mov    DWORD PTR [rsp+0x48],edx
  405a95:	mov    DWORD PTR [rsp+0x38],0x65
  405a9d:	mov    edx,0x20
  405aa2:	mov    QWORD PTR [rsp+0x20],rax
  405aa7:	mov    DWORD PTR [rsp+0x30],0x1
  405aaf:	mov    DWORD PTR [rsp+0x28],0x3
  405ab7:	call   0x4226c0
  405abc:	call   0x4224c8
  405ac1:	movzx  edx,al
  405ac4:	lea    r9,[rip+0x2c648]        # 0x432113
  405acb:	lea    r8,[rip+0x2d7a6]        # 0x433278
  405ad2:	mov    DWORD PTR [rsp+0x50],edx
  405ad6:	movzx  edx,ah
  405ad9:	shr    eax,0x10
  405adc:	mov    DWORD PTR [rsp+0x40],eax
  405ae0:	lea    rax,[rip+0x2d77c]        # 0x433263
  405ae7:	xor    ecx,ecx
  405ae9:	mov    DWORD PTR [rsp+0x48],edx
  405aed:	mov    DWORD PTR [rsp+0x38],0x65
  405af5:	mov    edx,0x20
  405afa:	mov    QWORD PTR [rsp+0x20],rax
  405aff:	mov    DWORD PTR [rsp+0x30],0x2
  405b07:	mov    DWORD PTR [rsp+0x28],0x1
  405b0f:	call   0x4226c0
  405b14:	call   0x4224b8
  405b19:	movzx  edx,al
  405b1c:	lea    r9,[rip+0x2c5f0]        # 0x432113
  405b23:	lea    r8,[rip+0x2d74e]        # 0x433278
  405b2a:	mov    DWORD PTR [rsp+0x50],edx
  405b2e:	movzx  edx,ah
  405b31:	shr    eax,0x10
  405b34:	mov    DWORD PTR [rsp+0x40],eax
  405b38:	lea    rax,[rip+0x2d72f]        # 0x43326e
  405b3f:	mov    DWORD PTR [rsp+0x48],edx
  405b43:	mov    DWORD PTR [rsp+0x38],0x64
  405b4b:	mov    DWORD PTR [rsp+0x30],0x3
  405b53:	mov    edx,0x20
  405b58:	mov    DWORD PTR [rsp+0x28],0x35
  405b60:	mov    QWORD PTR [rsp+0x20],rax
  405b65:	xor    ecx,ecx
  405b67:	call   0x4226c0
  405b6c:	nop
  405b6d:	add    rsp,0x70
  405b71:	pop    rbx
  405b72:	pop    rsi
  405b73:	pop    rdi
  405b74:	ret    
  405b75:	mov    ecx,DWORD PTR [rip+0x3c4b9]        # 0x442034
  405b7b:	test   ecx,ecx
  405b7d:	je     0x405d73
  405b83:	mov    QWORD PTR [rsp+0x28],rax
  405b88:	lea    rax,[rip+0x2d6d4]        # 0x433263
  405b8f:	lea    r9,[rip+0x2c57d]        # 0x432113
  405b96:	lea    r8,[rip+0x2d66e]        # 0x43320b
  405b9d:	mov    edx,0x20
  405ba2:	xor    ecx,ecx
  405ba4:	mov    QWORD PTR [rsp+0x20],rax
  405ba9:	call   0x4226c0
  405bae:	jmp    0x405807
  405bb3:	lea    r9,[rip+0x2c559]        # 0x432113
  405bba:	lea    r8,[rip+0x2d61f]        # 0x4331e0
  405bc1:	mov    edx,0x20
  405bc6:	xor    ecx,ecx
  405bc8:	mov    QWORD PTR [rsp+0x68],rax
  405bcd:	call   0x4226c0
  405bd2:	mov    DWORD PTR [rip+0x3c458],0x1        # 0x442034
  405bdc:	mov    rax,QWORD PTR [rsp+0x68]
  405be1:	jmp    0x405829
  405be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bf0:	lea    r9,[rip+0x2c51c]        # 0x432113
  405bf7:	lea    r8,[rip+0x2d5e2]        # 0x4331e0
  405bfe:	mov    edx,0x20
  405c03:	xor    ecx,ecx
  405c05:	mov    QWORD PTR [rsp+0x68],rax
  405c0a:	call   0x4226c0
  405c0f:	mov    DWORD PTR [rip+0x3c41b],0x1        # 0x442034
  405c19:	mov    rax,QWORD PTR [rsp+0x68]
  405c1e:	jmp    0x405688
  405c23:	lea    r9,[rip+0x2c4e9]        # 0x432113
  405c2a:	lea    r8,[rip+0x2d5af]        # 0x4331e0
  405c31:	mov    edx,0x20
  405c36:	xor    ecx,ecx
  405c38:	mov    QWORD PTR [rsp+0x68],rax
  405c3d:	call   0x4226c0
  405c42:	mov    DWORD PTR [rip+0x3c3e8],0x1        # 0x442034
  405c4c:	mov    rax,QWORD PTR [rsp+0x68]
  405c51:	jmp    0x405726
  405c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c60:	lea    r9,[rip+0x2c4ac]        # 0x432113
  405c67:	lea    r8,[rip+0x2d572]        # 0x4331e0
  405c6e:	mov    edx,0x20
  405c73:	xor    ecx,ecx
  405c75:	mov    QWORD PTR [rsp+0x68],rax
  405c7a:	call   0x4226c0
  405c7f:	mov    DWORD PTR [rip+0x3c3ab],0x1        # 0x442034
  405c89:	mov    rax,QWORD PTR [rsp+0x68]
  405c8e:	jmp    0x4055ee
  405c93:	lea    r9,[rip+0x2c479]        # 0x432113
  405c9a:	lea    r8,[rip+0x2d53f]        # 0x4331e0
  405ca1:	mov    edx,0x20
  405ca6:	xor    ecx,ecx
  405ca8:	mov    QWORD PTR [rsp+0x68],rax
  405cad:	call   0x4226c0
  405cb2:	mov    DWORD PTR [rip+0x3c378],0x1        # 0x442034
  405cbc:	mov    rax,QWORD PTR [rsp+0x68]
  405cc1:	jmp    0x4056d7
  405cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cd0:	lea    r9,[rip+0x2c43c]        # 0x432113
  405cd7:	lea    r8,[rip+0x2d502]        # 0x4331e0
  405cde:	mov    edx,0x20
  405ce3:	xor    ecx,ecx
  405ce5:	mov    QWORD PTR [rsp+0x68],rax
  405cea:	call   0x4226c0
  405cef:	mov    DWORD PTR [rip+0x3c33b],0x1        # 0x442034
  405cf9:	mov    rax,QWORD PTR [rsp+0x68]
  405cfe:	jmp    0x40563b
  405d03:	lea    r9,[rip+0x2c409]        # 0x432113
  405d0a:	lea    r8,[rip+0x2d4cf]        # 0x4331e0
  405d11:	mov    edx,0x20
  405d16:	xor    ecx,ecx
  405d18:	mov    QWORD PTR [rsp+0x68],rax
  405d1d:	call   0x4226c0
  405d22:	mov    DWORD PTR [rip+0x3c308],0x1        # 0x442034
  405d2c:	mov    rax,QWORD PTR [rsp+0x68]
  405d31:	jmp    0x405775
  405d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d40:	lea    r9,[rip+0x2c3cc]        # 0x432113
  405d47:	lea    r8,[rip+0x2d492]        # 0x4331e0
  405d4e:	mov    edx,0x20
  405d53:	xor    ecx,ecx
  405d55:	mov    QWORD PTR [rsp+0x68],rax
  405d5a:	call   0x4226c0
  405d5f:	mov    DWORD PTR [rip+0x3c2cb],0x1        # 0x442034
  405d69:	mov    rax,QWORD PTR [rsp+0x68]
  405d6e:	jmp    0x4057c4
  405d73:	lea    r9,[rip+0x2c399]        # 0x432113
  405d7a:	lea    r8,[rip+0x2d45f]        # 0x4331e0
  405d81:	mov    edx,0x20
  405d86:	xor    ecx,ecx
  405d88:	mov    QWORD PTR [rsp+0x68],rax
  405d8d:	call   0x4226c0
  405d92:	mov    DWORD PTR [rip+0x3c298],0x1        # 0x442034
  405d9c:	mov    rax,QWORD PTR [rsp+0x68]
  405da1:	jmp    0x405b83
  405da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405db0:	sub    rsp,0x68
  405db4:	lea    rcx,[rip+0xffffffffffffb775]        # 0x401530
  405dbb:	call   0x422690
  405dc0:	mov    r9,QWORD PTR [rip+0x37b49]        # 0x43d910
  405dc7:	lea    r8,[rip+0x2d11a]        # 0x432ee8
  405dce:	xor    ecx,ecx
  405dd0:	mov    edx,0x20
  405dd5:	call   0x4226c0
  405dda:	mov    rax,QWORD PTR [rip+0x37b1f]        # 0x43d900
  405de1:	lea    r8,[rip+0x2d118]        # 0x432f00
  405de8:	xor    ecx,ecx
  405dea:	mov    DWORD PTR [rsp+0x20],0x7e0
  405df2:	mov    edx,0x20
  405df7:	mov    r9d,DWORD PTR [rax]
  405dfa:	call   0x4226c0
  405dff:	lea    r8,[rip+0x2c846]        # 0x43264c
  405e06:	xor    ecx,ecx
  405e08:	mov    edx,0x20
  405e0d:	call   0x4226c0
  405e12:	lea    rax,[rip+0x2d123]        # 0x432f3c
  405e19:	lea    r9,[rip+0x2c5a3]        # 0x4323c3
  405e20:	lea    r8,[rip+0x2d104]        # 0x432f2b
  405e27:	xor    ecx,ecx
  405e29:	mov    edx,0x20
  405e2e:	mov    QWORD PTR [rsp+0x20],rax
  405e33:	call   0x4226c0
  405e38:	lea    r9,[rip+0x2c584]        # 0x4323c3
  405e3f:	lea    r8,[rip+0x2d10a]        # 0x432f50
  405e46:	xor    ecx,ecx
  405e48:	mov    edx,0x20
  405e4d:	call   0x4226c0
  405e52:	call   0x422528
  405e57:	movzx  edx,al
  405e5a:	lea    r9,[rip+0x2c562]        # 0x4323c3
  405e61:	lea    r8,[rip+0x2d410]        # 0x433278
  405e68:	mov    DWORD PTR [rsp+0x50],edx
  405e6c:	movzx  edx,ah
  405e6f:	shr    eax,0x10
  405e72:	mov    DWORD PTR [rsp+0x40],eax
  405e76:	lea    rax,[rip+0x2d3a9]        # 0x433226
  405e7d:	xor    ecx,ecx
  405e7f:	mov    DWORD PTR [rsp+0x48],edx
  405e83:	mov    DWORD PTR [rsp+0x38],0x64
  405e8b:	mov    edx,0x20
  405e90:	mov    QWORD PTR [rsp+0x20],rax
  405e95:	mov    DWORD PTR [rsp+0x30],0x1f
  405e9d:	mov    DWORD PTR [rsp+0x28],0x36
  405ea5:	call   0x4226c0
  405eaa:	call   0x422320
  405eaf:	movzx  edx,al
  405eb2:	lea    r9,[rip+0x2c50a]        # 0x4323c3
  405eb9:	lea    r8,[rip+0x2d3b8]        # 0x433278
  405ec0:	mov    DWORD PTR [rsp+0x50],edx
  405ec4:	movzx  edx,ah
  405ec7:	shr    eax,0x10
  405eca:	mov    DWORD PTR [rsp+0x40],eax
  405ece:	lea    rax,[rip+0x2d358]        # 0x43322d
  405ed5:	xor    ecx,ecx
  405ed7:	mov    DWORD PTR [rsp+0x48],edx
  405edb:	mov    DWORD PTR [rsp+0x38],0x64
  405ee3:	mov    edx,0x20
  405ee8:	mov    QWORD PTR [rsp+0x20],rax
  405eed:	mov    DWORD PTR [rsp+0x30],0x3c
  405ef5:	mov    DWORD PTR [rsp+0x28],0x38
  405efd:	call   0x4226c0
  405f02:	call   0x4221d8
  405f07:	movzx  edx,al
  405f0a:	lea    r9,[rip+0x2c4b2]        # 0x4323c3
  405f11:	lea    r8,[rip+0x2d360]        # 0x433278
  405f18:	mov    DWORD PTR [rsp+0x50],edx
  405f1c:	movzx  edx,ah
  405f1f:	shr    eax,0x10
  405f22:	mov    DWORD PTR [rsp+0x40],eax
  405f26:	lea    rax,[rip+0x2d308]        # 0x433235
  405f2d:	xor    ecx,ecx
  405f2f:	mov    DWORD PTR [rsp+0x48],edx
  405f33:	mov    DWORD PTR [rsp+0x38],0x65
  405f3b:	mov    edx,0x20
  405f40:	mov    QWORD PTR [rsp+0x20],rax
  405f45:	mov    DWORD PTR [rsp+0x30],0x28
  405f4d:	mov    DWORD PTR [rsp+0x28],0x38
  405f55:	call   0x4226c0
  405f5a:	call   0x422010
  405f5f:	movzx  edx,al
  405f62:	lea    r9,[rip+0x2c45a]        # 0x4323c3
  405f69:	lea    r8,[rip+0x2d308]        # 0x433278
  405f70:	mov    DWORD PTR [rsp+0x50],edx
  405f74:	movzx  edx,ah
  405f77:	shr    eax,0x10
  405f7a:	mov    DWORD PTR [rsp+0x40],eax
  405f7e:	lea    rax,[rip+0x2d2b9]        # 0x43323e
  405f85:	xor    ecx,ecx
  405f87:	mov    DWORD PTR [rsp+0x48],edx
  405f8b:	mov    DWORD PTR [rsp+0x38],0x64
  405f93:	mov    edx,0x20
  405f98:	mov    QWORD PTR [rsp+0x20],rax
  405f9d:	mov    DWORD PTR [rsp+0x30],0x4
  405fa5:	mov    DWORD PTR [rsp+0x28],0x38
  405fad:	call   0x4226c0
  405fb2:	call   0x422060
  405fb7:	movzx  edx,al
  405fba:	lea    r9,[rip+0x2c402]        # 0x4323c3
  405fc1:	lea    r8,[rip+0x2d2b0]        # 0x433278
  405fc8:	mov    DWORD PTR [rsp+0x50],edx
  405fcc:	movzx  edx,ah
  405fcf:	shr    eax,0x10
  405fd2:	mov    DWORD PTR [rsp+0x40],eax
  405fd6:	lea    rax,[rip+0x2d26a]        # 0x433247
  405fdd:	mov    DWORD PTR [rsp+0x48],edx
  405fe1:	xor    ecx,ecx
  405fe3:	mov    edx,0x20
  405fe8:	mov    DWORD PTR [rsp+0x38],0x65
  405ff0:	mov    QWORD PTR [rsp+0x20],rax
  405ff5:	mov    DWORD PTR [rsp+0x30],0x28
  405ffd:	mov    DWORD PTR [rsp+0x28],0x5
  406005:	call   0x4226c0
  40600a:	call   0x4224a0
  40600f:	movzx  edx,al
  406012:	lea    r9,[rip+0x2c3aa]        # 0x4323c3
  406019:	lea    r8,[rip+0x2d258]        # 0x433278
  406020:	mov    DWORD PTR [rsp+0x50],edx
  406024:	movzx  edx,ah
  406027:	shr    eax,0x10
  40602a:	mov    DWORD PTR [rsp+0x40],eax
  40602e:	lea    rax,[rip+0x2d21b]        # 0x433250
  406035:	xor    ecx,ecx
  406037:	mov    DWORD PTR [rsp+0x48],edx
  40603b:	mov    DWORD PTR [rsp+0x38],0x0
  406043:	mov    edx,0x20
  406048:	mov    QWORD PTR [rsp+0x20],rax
  40604d:	mov    DWORD PTR [rsp+0x30],0x1
  406055:	mov    DWORD PTR [rsp+0x28],0x2
  40605d:	call   0x4226c0
  406062:	call   0x4224f0
  406067:	movzx  edx,al
  40606a:	lea    r9,[rip+0x2c352]        # 0x4323c3
  406071:	lea    r8,[rip+0x2d200]        # 0x433278
  406078:	mov    DWORD PTR [rsp+0x50],edx
  40607c:	movzx  edx,ah
  40607f:	shr    eax,0x10
  406082:	mov    DWORD PTR [rsp+0x40],eax
  406086:	lea    rax,[rip+0x2d1ce]        # 0x43325b
  40608d:	xor    ecx,ecx
  40608f:	mov    DWORD PTR [rsp+0x48],edx
  406093:	mov    DWORD PTR [rsp+0x38],0x65
  40609b:	mov    edx,0x20
  4060a0:	mov    QWORD PTR [rsp+0x20],rax
  4060a5:	mov    DWORD PTR [rsp+0x30],0x1
  4060ad:	mov    DWORD PTR [rsp+0x28],0x3
  4060b5:	call   0x4226c0
  4060ba:	call   0x4224c8
  4060bf:	movzx  edx,al
  4060c2:	lea    r9,[rip+0x2c2fa]        # 0x4323c3
  4060c9:	lea    r8,[rip+0x2d1a8]        # 0x433278
  4060d0:	mov    DWORD PTR [rsp+0x50],edx
  4060d4:	movzx  edx,ah
  4060d7:	shr    eax,0x10
  4060da:	mov    DWORD PTR [rsp+0x40],eax
  4060de:	lea    rax,[rip+0x2d17e]        # 0x433263
  4060e5:	xor    ecx,ecx
  4060e7:	mov    DWORD PTR [rsp+0x48],edx
  4060eb:	mov    DWORD PTR [rsp+0x38],0x65
  4060f3:	mov    edx,0x20
  4060f8:	mov    QWORD PTR [rsp+0x20],rax
  4060fd:	mov    DWORD PTR [rsp+0x30],0x2
  406105:	mov    DWORD PTR [rsp+0x28],0x1
  40610d:	call   0x4226c0
  406112:	call   0x4224b8
  406117:	movzx  edx,al
  40611a:	lea    r9,[rip+0x2c2a2]        # 0x4323c3
  406121:	lea    r8,[rip+0x2d150]        # 0x433278
  406128:	mov    DWORD PTR [rsp+0x50],edx
  40612c:	movzx  edx,ah
  40612f:	shr    eax,0x10
  406132:	mov    DWORD PTR [rsp+0x40],eax
  406136:	lea    rax,[rip+0x2d131]        # 0x43326e
  40613d:	mov    DWORD PTR [rsp+0x48],edx
  406141:	mov    DWORD PTR [rsp+0x38],0x64
  406149:	mov    DWORD PTR [rsp+0x30],0x3
  406151:	mov    edx,0x20
  406156:	mov    QWORD PTR [rsp+0x20],rax
  40615b:	mov    DWORD PTR [rsp+0x28],0x35
  406163:	xor    ecx,ecx
  406165:	call   0x4226c0
  40616a:	xor    eax,eax
  40616c:	add    rsp,0x68
  406170:	ret    
  406171:	nop    DWORD PTR [rax+rax*1+0x0]
  406176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406180:	sub    rsp,0x28
  406184:	lea    rcx,[rip+0xffffffffffffb3a5]        # 0x401530
  40618b:	call   0x422690
  406190:	call   0x401ad0
  406195:	xor    eax,eax
  406197:	add    rsp,0x28
  40619b:	ret    
  40619c:	nop    DWORD PTR [rax+0x0]
  4061a0:	sub    rsp,0x28
  4061a4:	mov    r9,QWORD PTR [rip+0x37765]        # 0x43d910
  4061ab:	lea    rcx,[rip+0x2d0ee]        # 0x4332a0
  4061b2:	mov    r8,r9
  4061b5:	mov    rdx,r9
  4061b8:	call   0x401560
  4061bd:	xor    eax,eax
  4061bf:	add    rsp,0x28
  4061c3:	ret    
  4061c4:	xchg   ax,ax
  4061c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061d0:	push   r15
  4061d2:	push   r14
  4061d4:	push   r13
  4061d6:	push   r12
  4061d8:	push   rbp
  4061d9:	push   rdi
  4061da:	push   rsi
  4061db:	push   rbx
  4061dc:	sub    rsp,0x38
  4061e0:	lea    rdx,[rip+0x2d306]        # 0x4334ed
  4061e7:	lea    rcx,[rip+0x2d312]        # 0x433500
  4061ee:	lea    rbp,[rip+0x2d2f2]        # 0x4334e7
  4061f5:	lea    r14,[rip+0x2be06]        # 0x432002
  4061fc:	call   0x401560
  406201:	xor    edi,edi
  406203:	xor    ebx,ebx
  406205:	xor    r12d,r12d
  406208:	xor    r13d,r13d
  40620b:	mov    rcx,r13
  40620e:	call   0x422298
  406213:	test   rax,rax
  406216:	mov    r13,rax
  406219:	je     0x406260
  40621b:	test   rbx,rbx
  40621e:	mov    rsi,QWORD PTR [r13+0x0]
  406222:	je     0x406233
  406224:	mov    rdx,rbx
  406227:	mov    rcx,rsi
  40622a:	call   0x42faf8
  40622f:	test   eax,eax
  406231:	jns    0x40620b
  406233:	mov    rdx,rbp
  406236:	mov    rcx,rsi
  406239:	call   0x42faf8
  40623e:	test   eax,eax
  406240:	jle    0x40620b
  406242:	mov    rcx,r13
  406245:	mov    rdi,QWORD PTR [r13+0x8]
  406249:	mov    rbx,rsi
  40624c:	call   0x422298
  406251:	test   rax,rax
  406254:	mov    r12d,0x1
  40625a:	mov    r13,rax
  40625d:	jne    0x40621b
  40625f:	nop
  406260:	xor    r15d,r15d
  406263:	mov    rcx,r15
  406266:	call   0x4222a8
  40626b:	test   rax,rax
  40626e:	mov    r15,rax
  406271:	je     0x4062a2
  406273:	test   rbx,rbx
  406276:	mov    rsi,QWORD PTR [r15]
  406279:	je     0x4062f0
  40627b:	mov    rdx,rbx
  40627e:	mov    rcx,rsi
  406281:	call   0x42faf8
  406286:	test   eax,eax
  406288:	js     0x4062f0
  40628a:	jne    0x406263
  40628c:	mov    rcx,r15
  40628f:	mov    r13d,0x1
  406295:	call   0x4222a8
  40629a:	test   rax,rax
  40629d:	mov    r15,rax
  4062a0:	jne    0x406273
  4062a2:	test   rbx,rbx
  4062a5:	je     0x406312
  4062a7:	test   rdi,rdi
  4062aa:	lea    r8,[rip+0x2d23a]        # 0x4334eb
  4062b1:	lea    rdx,[rip+0x2c26b]        # 0x432523
  4062b8:	cmove  rdi,r14
  4062bc:	test   r12d,r12d
  4062bf:	lea    rcx,[rip+0x2d272]        # 0x433538
  4062c6:	cmove  r8,r14
  4062ca:	test   r13d,r13d
  4062cd:	mov    QWORD PTR [rsp+0x20],rdi
  4062d2:	cmove  rdx,r14
  4062d6:	mov    r9,rbx
  4062d9:	mov    rbp,rbx
  4062dc:	call   0x401560
  4062e1:	jmp    0x406201
  4062e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062f0:	mov    rdx,rbp
  4062f3:	mov    rcx,rsi
  4062f6:	call   0x42faf8
  4062fb:	test   eax,eax
  4062fd:	jle    0x406263
  406303:	mov    rdi,QWORD PTR [r15+0x8]
  406307:	mov    rbx,rsi
  40630a:	xor    r12d,r12d
  40630d:	jmp    0x40628c
  406312:	xor    eax,eax
  406314:	add    rsp,0x38
  406318:	pop    rbx
  406319:	pop    rsi
  40631a:	pop    rdi
  40631b:	pop    rbp
  40631c:	pop    r12
  40631e:	pop    r13
  406320:	pop    r14
  406322:	pop    r15
  406324:	ret    
  406325:	nop
  406326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406330:	push   r15
  406332:	push   r14
  406334:	push   r13
  406336:	push   r12
  406338:	push   rbp
  406339:	push   rdi
  40633a:	push   rsi
  40633b:	push   rbx
  40633c:	sub    rsp,0x38
  406340:	lea    rdx,[rip+0x2d201]        # 0x433548
  406347:	lea    rcx,[rip+0x2d1b2]        # 0x433500
  40634e:	lea    rbp,[rip+0x2d192]        # 0x4334e7
  406355:	lea    r14,[rip+0x2bca6]        # 0x432002
  40635c:	call   0x401560
  406361:	xor    edi,edi
  406363:	xor    ebx,ebx
  406365:	xor    r12d,r12d
  406368:	xor    r13d,r13d
  40636b:	nop    DWORD PTR [rax+rax*1+0x0]
  406370:	mov    rcx,r13
  406373:	call   0x422298
  406378:	test   rax,rax
  40637b:	mov    r13,rax
  40637e:	je     0x4063e0
  406380:	mov    rax,QWORD PTR [r13+0x38]
  406384:	test   rax,rax
  406387:	je     0x406370
  406389:	mov    eax,DWORD PTR [rax+0x38]
  40638c:	sub    eax,0x28
  40638f:	cmp    eax,0x5
  406392:	ja     0x406370
  406394:	test   rbx,rbx
  406397:	mov    rsi,QWORD PTR [r13+0x0]
  40639b:	je     0x4063ac
  40639d:	mov    rdx,rbx
  4063a0:	mov    rcx,rsi
  4063a3:	call   0x42faf8
  4063a8:	test   eax,eax
  4063aa:	jns    0x406370
  4063ac:	mov    rdx,rbp
  4063af:	mov    rcx,rsi
  4063b2:	call   0x42faf8
  4063b7:	test   eax,eax
  4063b9:	jle    0x406370
  4063bb:	mov    rcx,r13
  4063be:	mov    rdi,QWORD PTR [r13+0x8]
  4063c2:	mov    rbx,rsi
  4063c5:	call   0x422298
  4063ca:	test   rax,rax
  4063cd:	mov    r12d,0x1
  4063d3:	mov    r13,rax
  4063d6:	jne    0x406380
  4063d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063e0:	xor    r15d,r15d
  4063e3:	mov    rcx,r15
  4063e6:	call   0x4222a8
  4063eb:	test   rax,rax
  4063ee:	mov    r15,rax
  4063f1:	je     0x406436
  4063f3:	mov    rax,QWORD PTR [r15+0x28]
  4063f7:	test   rax,rax
  4063fa:	je     0x4063e3
  4063fc:	mov    eax,DWORD PTR [rax+0x38]
  4063ff:	sub    eax,0x28
  406402:	cmp    eax,0x5
  406405:	ja     0x4063e3
  406407:	test   rbx,rbx
  40640a:	je     0x406480
  40640c:	mov    rsi,QWORD PTR [r15]
  40640f:	mov    rdx,rbx
  406412:	mov    rcx,rsi
  406415:	call   0x42faf8
  40641a:	test   eax,eax
  40641c:	js     0x406483
  40641e:	jne    0x4063e3
  406420:	mov    rcx,r15
  406423:	mov    r13d,0x1
  406429:	call   0x4222a8
  40642e:	test   rax,rax
  406431:	mov    r15,rax
  406434:	jne    0x4063f3
  406436:	test   rbx,rbx
  406439:	je     0x4064a5
  40643b:	test   rdi,rdi
  40643e:	lea    r8,[rip+0x2d0a6]        # 0x4334eb
  406445:	lea    rdx,[rip+0x2c0d7]        # 0x432523
  40644c:	cmove  rdi,r14
  406450:	test   r12d,r12d
  406453:	lea    rcx,[rip+0x2d0de]        # 0x433538
  40645a:	cmove  r8,r14
  40645e:	test   r13d,r13d
  406461:	mov    QWORD PTR [rsp+0x20],rdi
  406466:	cmove  rdx,r14
  40646a:	mov    r9,rbx
  40646d:	mov    rbp,rbx
  406470:	call   0x401560
  406475:	jmp    0x406361
  40647a:	nop    WORD PTR [rax+rax*1+0x0]
  406480:	mov    rsi,QWORD PTR [r15]
  406483:	mov    rdx,rbp
  406486:	mov    rcx,rsi
  406489:	call   0x42faf8
  40648e:	test   eax,eax
  406490:	jle    0x4063e3
  406496:	mov    rdi,QWORD PTR [r15+0x8]
  40649a:	mov    rbx,rsi
  40649d:	xor    r12d,r12d
  4064a0:	jmp    0x406420
  4064a5:	xor    eax,eax
  4064a7:	add    rsp,0x38
  4064ab:	pop    rbx
  4064ac:	pop    rsi
  4064ad:	pop    rdi
  4064ae:	pop    rbp
  4064af:	pop    r12
  4064b1:	pop    r13
  4064b3:	pop    r14
  4064b5:	pop    r15
  4064b7:	ret    
  4064b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c0:	push   r15
  4064c2:	push   r14
  4064c4:	push   r13
  4064c6:	push   r12
  4064c8:	push   rbp
  4064c9:	push   rdi
  4064ca:	push   rsi
  4064cb:	push   rbx
  4064cc:	sub    rsp,0x28
  4064d0:	xor    edi,edi
  4064d2:	xor    ebx,ebx
  4064d4:	jmp    0x4064e3
  4064d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064e0:	add    edi,0x1
  4064e3:	mov    rcx,rbx
  4064e6:	call   0x4223a0
  4064eb:	test   rax,rax
  4064ee:	mov    rbx,rax
  4064f1:	jne    0x4064e0
  4064f3:	mov    r12d,edi
  4064f6:	mov    edx,0x8
  4064fb:	mov    rcx,r12
  4064fe:	call   0x422840
  406503:	test   rax,rax
  406506:	mov    rbp,rax
  406509:	je     0x4067e2
  40650f:	xor    esi,esi
  406511:	jmp    0x40651d
  406513:	mov    eax,esi
  406515:	add    esi,0x1
  406518:	mov    QWORD PTR [rbp+rax*8+0x0],rbx
  40651d:	mov    rcx,rbx
  406520:	call   0x4223a0
  406525:	test   rax,rax
  406528:	mov    rbx,rax
  40652b:	jne    0x406513
  40652d:	cmp    esi,edi
  40652f:	jne    0x4067dd
  406535:	lea    r9,[rip+0xffffffffffffb084]        # 0x4015c0
  40653c:	mov    r8d,0x8
  406542:	mov    rdx,r12
  406545:	mov    rcx,rbp
  406548:	call   0x42fb20
  40654d:	lea    rcx,[rip+0x2d004]        # 0x433558
  406554:	call   0x401560
  406559:	test   esi,esi
  40655b:	je     0x4065a1
  40655d:	lea    eax,[rsi-0x1]
  406560:	lea    r15,[rip+0x2bfbc]        # 0x432523
  406567:	lea    r13,[rip+0x2bfad]        # 0x43251b
  40656e:	mov    rdi,rbp
  406571:	lea    r12,[rbp+rax*8+0x8]
  406576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406580:	mov    rsi,QWORD PTR [rdi]
  406583:	lea    rdx,[rip+0x2d0bb]        # 0x433645
  40658a:	mov    rcx,QWORD PTR [rsi+0x8]
  40658e:	call   0x42fab8
  406593:	test   rax,rax
  406596:	je     0x4065bc
  406598:	add    rdi,0x8
  40659c:	cmp    rdi,r12
  40659f:	jne    0x406580
  4065a1:	mov    rcx,rbp
  4065a4:	call   0x422770
  4065a9:	xor    eax,eax
  4065ab:	add    rsp,0x28
  4065af:	pop    rbx
  4065b0:	pop    rsi
  4065b1:	pop    rdi
  4065b2:	pop    rbp
  4065b3:	pop    r12
  4065b5:	pop    r13
  4065b7:	pop    r14
  4065b9:	pop    r15
  4065bb:	ret    
  4065bc:	lea    rcx,[rip+0x2ba3f]        # 0x432002
  4065c3:	call   0x401560
  4065c8:	mov    ecx,DWORD PTR [rsi]
  4065ca:	call   0x422378
  4065cf:	mov    rcx,r13
  4065d2:	test   rax,rax
  4065d5:	cmovne rcx,r15
  4065d9:	call   0x401560
  4065de:	mov    ecx,DWORD PTR [rsi]
  4065e0:	call   0x422368
  4065e5:	lea    rcx,[rip+0x2ceff]        # 0x4334eb
  4065ec:	test   rax,rax
  4065ef:	cmove  rcx,r13
  4065f3:	call   0x401560
  4065f8:	mov    eax,DWORD PTR [rsi+0x4]
  4065fb:	mov    edx,0x3f
  406600:	cmp    eax,0x4
  406603:	jbe    0x4067cd
  406609:	lea    rcx,[rip+0x2d041]        # 0x433651
  406610:	call   0x401560
  406615:	test   BYTE PTR [rsi+0x18],0x1
  406619:	lea    rcx,[rip+0x2cf31]        # 0x433551
  406620:	cmove  rcx,r13
  406624:	call   0x401560
  406629:	test   BYTE PTR [rsi+0x18],0x2
  40662d:	lea    rcx,[rip+0x2cf1f]        # 0x433553
  406634:	cmove  rcx,r13
  406638:	call   0x401560
  40663d:	test   BYTE PTR [rsi+0x18],0x4
  406641:	lea    rcx,[rip+0x2bed5]        # 0x43251d
  406648:	cmove  rcx,r13
  40664c:	call   0x401560
  406651:	mov    rax,QWORD PTR [rsi+0x10]
  406655:	mov    rdx,QWORD PTR [rsi+0x8]
  406659:	lea    r8,[rip+0x2bd63]        # 0x4323c3
  406660:	lea    rcx,[rip+0x2bfcf]        # 0x432636
  406667:	test   rax,rax
  40666a:	cmovne r8,rax
  40666e:	xor    r14d,r14d
  406671:	call   0x401560
  406676:	mov    ebx,DWORD PTR [rsi]
  406678:	nop    DWORD PTR [rax+rax*1+0x0]
  406680:	mov    rcx,r14
  406683:	call   0x422460
  406688:	test   rax,rax
  40668b:	mov    r14,rax
  40668e:	je     0x40671d
  406694:	cmp    ebx,DWORD PTR [r14+0x14]
  406698:	jne    0x406680
  40669a:	mov    rcx,r14
  40669d:	call   0x422470
  4066a2:	test   eax,eax
  4066a4:	je     0x406680
  4066a6:	mov    rdx,QWORD PTR [rsi+0x8]
  4066aa:	mov    rcx,QWORD PTR [r14]
  4066ad:	call   0x42faf8
  4066b2:	test   eax,eax
  4066b4:	je     0x406676
  4066b6:	lea    rdx,[rip+0x2c19b]        # 0x432858
  4066bd:	lea    rcx,[rip+0x2cf90]        # 0x433654
  4066c4:	xor    r14d,r14d
  4066c7:	mov    ebx,DWORD PTR [rsi]
  4066c9:	call   0x401560
  4066ce:	xchg   ax,ax
  4066d0:	mov    rcx,r14
  4066d3:	call   0x422460
  4066d8:	test   rax,rax
  4066db:	mov    r14,rax
  4066de:	je     0x406711
  4066e0:	cmp    ebx,DWORD PTR [r14+0x14]
  4066e4:	jne    0x4066d0
  4066e6:	mov    rcx,r14
  4066e9:	call   0x422470
  4066ee:	test   eax,eax
  4066f0:	je     0x4066d0
  4066f2:	mov    rdx,QWORD PTR [r14]
  4066f5:	lea    rcx,[rip+0x2cf5f]        # 0x43365b
  4066fc:	call   0x401560
  406701:	mov    rcx,r14
  406704:	call   0x422460
  406709:	test   rax,rax
  40670c:	mov    r14,rax
  40670f:	jne    0x4066e0
  406711:	lea    rcx,[rip+0x2cf47]        # 0x43365f
  406718:	call   0x401560
  40671d:	xor    r14d,r14d
  406720:	mov    ebx,DWORD PTR [rsi]
  406722:	mov    rcx,r14
  406725:	call   0x422460
  40672a:	test   rax,rax
  40672d:	mov    r14,rax
  406730:	je     0x4067bc
  406736:	cmp    ebx,DWORD PTR [r14+0x14]
  40673a:	jne    0x406722
  40673c:	mov    rcx,r14
  40673f:	call   0x422468
  406744:	test   eax,eax
  406746:	je     0x406722
  406748:	mov    rdx,QWORD PTR [rsi+0x8]
  40674c:	mov    rcx,QWORD PTR [r14]
  40674f:	call   0x42faf8
  406754:	test   eax,eax
  406756:	je     0x406720
  406758:	lea    rdx,[rip+0x2c0f0]        # 0x43284f
  40675f:	lea    rcx,[rip+0x2ceee]        # 0x433654
  406766:	xor    ebx,ebx
  406768:	mov    esi,DWORD PTR [rsi]
  40676a:	call   0x401560
  40676f:	nop
  406770:	mov    rcx,rbx
  406773:	call   0x422460
  406778:	test   rax,rax
  40677b:	mov    rbx,rax
  40677e:	je     0x4067b0
  406780:	cmp    esi,DWORD PTR [rbx+0x14]
  406783:	jne    0x406770
  406785:	mov    rcx,rbx
  406788:	call   0x422468
  40678d:	test   eax,eax
  40678f:	je     0x406770
  406791:	mov    rdx,QWORD PTR [rbx]
  406794:	lea    rcx,[rip+0x2cec0]        # 0x43365b
  40679b:	call   0x401560
  4067a0:	mov    rcx,rbx
  4067a3:	call   0x422460
  4067a8:	test   rax,rax
  4067ab:	mov    rbx,rax
  4067ae:	jne    0x406780
  4067b0:	lea    rcx,[rip+0x2cea8]        # 0x43365f
  4067b7:	call   0x401560
  4067bc:	lea    rcx,[rip+0x2be89]        # 0x43264c
  4067c3:	call   0x401560
  4067c8:	jmp    0x406598
  4067cd:	lea    rdx,[rip+0x2d5e5]        # 0x433db9
  4067d4:	movsx  edx,BYTE PTR [rdx+rax*1]
  4067d8:	jmp    0x406609
  4067dd:	call   0x42fff0
  4067e2:	lea    r8,[rip+0x2bd3c]        # 0x432525
  4067e9:	xor    ecx,ecx
  4067eb:	mov    edx,0x10
  4067f0:	call   0x4226c0
  4067f5:	mov    ecx,0x1
  4067fa:	call   0x401cb0
  4067ff:	nop
  406800:	sub    rsp,0x28
  406804:	xor    ecx,ecx
  406806:	call   0x402120
  40680b:	xor    eax,eax
  40680d:	add    rsp,0x28
  406811:	ret    
  406812:	nop    DWORD PTR [rax+0x0]
  406816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406820:	sub    rsp,0x28
  406824:	mov    ecx,0x1
  406829:	call   0x402120
  40682e:	xor    eax,eax
  406830:	add    rsp,0x28
  406834:	ret    
  406835:	nop
  406836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406840:	push   rbx
  406841:	sub    rsp,0x20
  406845:	lea    rcx,[rip+0x2ce15]        # 0x433661
  40684c:	xor    ebx,ebx
  40684e:	call   0x401560
  406853:	jmp    0x406864
  406855:	mov    rdx,QWORD PTR [rbx]
  406858:	lea    rcx,[rip+0x2bef7]        # 0x432756
  40685f:	call   0x401560
  406864:	mov    rcx,rbx
  406867:	call   0x422480
  40686c:	test   rax,rax
  40686f:	mov    rbx,rax
  406872:	jne    0x406855
  406874:	lea    rcx,[rip+0x2bdd1]        # 0x43264c
  40687b:	call   0x401560
  406880:	xor    eax,eax
  406882:	add    rsp,0x20
  406886:	pop    rbx
  406887:	ret    
  406888:	nop    DWORD PTR [rax+rax*1+0x0]
  406890:	push   rbx
  406891:	sub    rsp,0x30
  406895:	lea    rcx,[rip+0x2cddc]        # 0x433678
  40689c:	mov    QWORD PTR [rsp+0x28],0x0
  4068a5:	lea    rbx,[rsp+0x28]
  4068aa:	call   0x401560
  4068af:	jmp    0x4068c0
  4068b1:	lea    rcx,[rip+0x2cde2]        # 0x43369a
  4068b8:	mov    rdx,rax
  4068bb:	call   0x401560
  4068c0:	xor    edx,edx
  4068c2:	mov    rcx,rbx
  4068c5:	call   0x4221a8
  4068ca:	test   rax,rax
  4068cd:	jne    0x4068b1
  4068cf:	lea    rcx,[rip+0x2cdca]        # 0x4336a0
  4068d6:	call   0x401560
  4068db:	jmp    0x4068ef
  4068dd:	nop    DWORD PTR [rax]
  4068e0:	lea    rcx,[rip+0x2cdb3]        # 0x43369a
  4068e7:	mov    rdx,rax
  4068ea:	call   0x401560
  4068ef:	mov    edx,0x1
  4068f4:	mov    rcx,rbx
  4068f7:	call   0x4221a8
  4068fc:	test   rax,rax
  4068ff:	jne    0x4068e0
  406901:	add    rsp,0x30
  406905:	pop    rbx
  406906:	ret    
  406907:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	push   r15
  406912:	push   r14
  406914:	push   r13
  406916:	push   r12
  406918:	push   rbp
  406919:	push   rdi
  40691a:	push   rsi
  40691b:	push   rbx
  40691c:	sub    rsp,0x88
  406923:	lea    rcx,[rip+0x2cd86]        # 0x4336b0
  40692a:	xor    r12d,r12d
  40692d:	lea    r14,[rsp+0x40]
  406932:	call   0x401560
  406937:	mov    rcx,r12
  40693a:	lea    rbp,[r14+0x3c]
  40693e:	call   0x422088
  406943:	test   rax,rax
  406946:	mov    r12,rax
  406949:	je     0x406a5a
  40694f:	nop
  406950:	mov    rsi,QWORD PTR [r12+0x10]
  406955:	xor    r13d,r13d
  406958:	mov    rdi,r14
  40695b:	test   rsi,rsi
  40695e:	je     0x406a98
  406964:	mov    rbx,rdi
  406967:	jmp    0x40699e
  406969:	nop    DWORD PTR [rax+0x0]
  406970:	cmp    rbx,rbp
  406973:	jae    0x4069b4
  406975:	mov    edx,r15d
  406978:	mov    rcx,rsi
  40697b:	add    rbx,0x1
  40697f:	call   0x422070
  406984:	mov    edx,eax
  406986:	mov    eax,0x3f
  40698b:	cmp    edx,0x4
  40698e:	ja     0x40699b
  406990:	lea    rax,[rip+0x2d422]        # 0x433db9
  406997:	movzx  eax,BYTE PTR [rax+rdx*1]
  40699b:	mov    BYTE PTR [rbx-0x1],al
  40699e:	mov    r15d,ebx
  4069a1:	mov    rcx,rsi
  4069a4:	sub    r15d,edi
  4069a7:	mov    edx,r15d
  4069aa:	call   0x422078
  4069af:	test   rax,rax
  4069b2:	jne    0x406970
  4069b4:	test   r15d,r15d
  4069b7:	jne    0x4069de
  4069b9:	mov    rdi,rbx
  4069bc:	add    rbx,0x1
  4069c0:	test   r13d,r13d
  4069c3:	je     0x406a9f
  4069c9:	mov    eax,DWORD PTR [r12+0x28]
  4069ce:	and    eax,0x2
  4069d1:	cmp    eax,0x1
  4069d4:	sbb    eax,eax
  4069d6:	and    eax,0x2e
  4069d9:	add    eax,0x4e
  4069dc:	mov    BYTE PTR [rdi],al
  4069de:	cmp    r13d,0x1
  4069e2:	jne    0x406a70
  4069e8:	mov    BYTE PTR [rbx],0x0
  4069eb:	cmp    QWORD PTR [r12+0x60],0x1
  4069f1:	mov    eax,DWORD PTR [r12+0x28]
  4069f6:	mov    r9,QWORD PTR [r12]
  4069fa:	mov    r10,QWORD PTR [r12+0x8]
  4069ff:	mov    QWORD PTR [rsp+0x28],r14
  406a04:	mov    edx,eax
  406a06:	sbb    r8d,r8d
  406a09:	mov    QWORD PTR [rsp+0x20],r9
  406a0e:	and    edx,0x4
  406a11:	and    r8d,0xffffffeb
  406a15:	mov    QWORD PTR [rsp+0x30],r10
  406a1a:	cmp    edx,0x1
  406a1d:	lea    r9d,[r8+0x43]
  406a21:	sbb    ecx,ecx
  406a23:	and    eax,0x30000
  406a28:	and    ecx,0xffffffdb
  406a2b:	cmp    eax,0x1
  406a2e:	sbb    edx,edx
  406a30:	lea    r8d,[rcx+0x53]
  406a34:	lea    rcx,[rip+0x2cd47]        # 0x433782
  406a3b:	and    edx,0xffffffda
  406a3e:	add    edx,0x54
  406a41:	call   0x401560
  406a46:	mov    rcx,r12
  406a49:	call   0x422088
  406a4e:	test   rax,rax
  406a51:	mov    r12,rax
  406a54:	jne    0x406950
  406a5a:	xor    eax,eax
  406a5c:	add    rsp,0x88
  406a63:	pop    rbx
  406a64:	pop    rsi
  406a65:	pop    rdi
  406a66:	pop    rbp
  406a67:	pop    r12
  406a69:	pop    r13
  406a6b:	pop    r14
  406a6d:	pop    r15
  406a6f:	ret    
  406a70:	mov    BYTE PTR [rbx],0x2d
  406a73:	mov    BYTE PTR [rbx+0x1],0x3e
  406a77:	mov    r13d,0x1
  406a7d:	mov    rsi,QWORD PTR [r12+0x18]
  406a82:	lea    rdi,[rbx+0x2]
  406a86:	test   rsi,rsi
  406a89:	jne    0x406964
  406a8f:	add    rbx,0x3
  406a93:	jmp    0x4069c9
  406a98:	lea    rbx,[r14+0x1]
  406a9c:	mov    rdi,r14
  406a9f:	mov    eax,DWORD PTR [r12+0x28]
  406aa4:	and    eax,0x1
  406aa7:	cmp    eax,0x1
  406aaa:	sbb    eax,eax
  406aac:	and    eax,0x2e
  406aaf:	add    eax,0x4e
  406ab2:	jmp    0x4069dc
  406ab7:	nop    WORD PTR [rax+rax*1+0x0]
  406ac0:	push   rsi
  406ac1:	push   rbx
  406ac2:	sub    rsp,0x48
  406ac6:	lea    rdx,[rip+0x2cccd]        # 0x43379a
  406acd:	lea    rcx,[rip+0x2cccb]        # 0x43379f
  406ad4:	xor    ebx,ebx
  406ad6:	lea    rsi,[rsp+0x38]
  406adb:	call   0x401560
  406ae0:	jmp    0x406b0b
  406ae2:	mov    r10,QWORD PTR [rsp+0x38]
  406ae7:	mov    rdx,rax
  406aea:	add    ebx,0x1
  406aed:	movzx  ecx,BYTE PTR [r10+0x2]
  406af2:	movzx  r9d,BYTE PTR [r10+0x1]
  406af7:	movzx  r8d,BYTE PTR [r10]
  406afb:	mov    DWORD PTR [rsp+0x20],ecx
  406aff:	lea    rcx,[rip+0x2cca8]        # 0x4337ae
  406b06:	call   0x401560
  406b0b:	mov    rdx,rsi
  406b0e:	mov    ecx,ebx
  406b10:	call   0x422720
  406b15:	test   rax,rax
  406b18:	jne    0x406ae2
  406b1a:	add    rsp,0x48
  406b1e:	pop    rbx
  406b1f:	pop    rsi
  406b20:	ret    
  406b21:	nop    DWORD PTR [rax+rax*1+0x0]
  406b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b30:	push   r15
  406b32:	push   r14
  406b34:	push   r13
  406b36:	push   r12
  406b38:	push   rbp
  406b39:	push   rdi
  406b3a:	push   rsi
  406b3b:	push   rbx
  406b3c:	sub    rsp,0x68
  406b40:	lea    rcx,[rip+0x2cc81]        # 0x4337c8
  406b47:	xor    ebx,ebx
  406b49:	call   0x401560
  406b4e:	jmp    0x406bfa
  406b53:	mov    rcx,rbx
  406b56:	call   0x4225c8
  406b5b:	mov    rcx,rbx
  406b5e:	mov    r13d,eax
  406b61:	call   0x422760
  406b66:	movzx  edx,BYTE PTR [rbx+0xb]
  406b6a:	mov    DWORD PTR [rsp+0x5c],eax
  406b6e:	mov    ecx,r13d
  406b71:	movzx  r15d,BYTE PTR [rbx+0x8]
  406b76:	mov    r14,QWORD PTR [rbx]
  406b79:	mov    eax,edx
  406b7b:	and    eax,0x4
  406b7e:	cmp    al,0x1
  406b80:	mov    eax,edx
  406b82:	sbb    r12d,r12d
  406b85:	and    eax,0x2
  406b88:	and    r12d,0xffffffec
  406b8c:	add    r12d,0x42
  406b90:	cmp    al,0x1
  406b92:	sbb    ebp,ebp
  406b94:	and    edx,0x8
  406b97:	and    ebp,0xffffffde
  406b9a:	add    ebp,0x50
  406b9d:	cmp    dl,0x1
  406ba0:	sbb    edi,edi
  406ba2:	and    edi,0xffffffe6
  406ba5:	call   0x422500
  406baa:	add    edi,0x48
  406bad:	cmp    eax,0x1
  406bb0:	mov    ecx,r13d
  406bb3:	sbb    esi,esi
  406bb5:	and    esi,0xffffffdf
  406bb8:	call   0x422508
  406bbd:	add    esi,0x4f
  406bc0:	mov    r8d,DWORD PTR [rsp+0x5c]
  406bc5:	cmp    eax,0x1
  406bc8:	sbb    edx,edx
  406bca:	lea    rcx,[rip+0x2ccf7]        # 0x4338c8
  406bd1:	mov    DWORD PTR [rsp+0x38],r15d
  406bd6:	and    edx,0xffffffe5
  406bd9:	mov    QWORD PTR [rsp+0x30],r14
  406bde:	mov    DWORD PTR [rsp+0x28],r12d
  406be3:	mov    DWORD PTR [rsp+0x40],r8d
  406be8:	add    edx,0x49
  406beb:	mov    DWORD PTR [rsp+0x20],ebp
  406bef:	mov    r9d,edi
  406bf2:	mov    r8d,esi
  406bf5:	call   0x401560
  406bfa:	mov    rcx,rbx
  406bfd:	call   0x4225c0
  406c02:	test   rax,rax
  406c05:	mov    rbx,rax
  406c08:	jne    0x406b53
  406c0e:	xor    eax,eax
  406c10:	add    rsp,0x68
  406c14:	pop    rbx
  406c15:	pop    rsi
  406c16:	pop    rdi
  406c17:	pop    rbp
  406c18:	pop    r12
  406c1a:	pop    r13
  406c1c:	pop    r14
  406c1e:	pop    r15
  406c20:	ret    
  406c21:	nop    DWORD PTR [rax+rax*1+0x0]
  406c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c30:	push   r14
  406c32:	push   r13
  406c34:	push   r12
  406c36:	push   rbp
  406c37:	push   rdi
  406c38:	push   rsi
  406c39:	push   rbx
  406c3a:	sub    rsp,0x30
  406c3e:	lea    rcx,[rip+0x2ccb3]        # 0x4338f8
  406c45:	xor    ebx,ebx
  406c47:	mov    edi,0x1
  406c4c:	call   0x401560
  406c51:	mov    ecx,ebx
  406c53:	mov    rsi,rdi
  406c56:	shl    rsi,cl
  406c59:	mov    rcx,rsi
  406c5c:	call   0x422738
  406c61:	test   rax,rax
  406c64:	mov    QWORD PTR [rsp+0x28],rax
  406c69:	je     0x406c87
  406c6b:	mov    rcx,rsi
  406c6e:	call   0x422758
  406c73:	mov    rdx,QWORD PTR [rsp+0x28]
  406c78:	lea    rcx,[rip+0x2ccaa]        # 0x433929
  406c7f:	mov    r8,rax
  406c82:	call   0x401560
  406c87:	add    ebx,0x1
  406c8a:	cmp    ebx,0x3f
  406c8d:	jne    0x406c51
  406c8f:	lea    rcx,[rip+0x2cca2]        # 0x433938
  406c96:	lea    r14,[rsp+0x28]
  406c9b:	lea    r13,[rsp+0x20]
  406ca0:	lea    rbp,[rip+0x2cc4b]        # 0x4338f2
  406ca7:	lea    rdi,[rip+0x2b715]        # 0x4323c3
  406cae:	xor    r12d,r12d
  406cb1:	call   0x401560
  406cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cc0:	mov    r8,r14
  406cc3:	mov    rdx,r13
  406cc6:	mov    ecx,r12d
  406cc9:	call   0x4226e0
  406cce:	test   eax,eax
  406cd0:	jne    0x406d47
  406cd2:	mov    rdx,QWORD PTR [rsp+0x28]
  406cd7:	test   rdx,rdx
  406cda:	je     0x406d3e
  406cdc:	lea    rcx,[rip+0x2cc8e]        # 0x433971
  406ce3:	mov    esi,0x40
  406ce8:	mov    ebx,0x1
  406ced:	call   0x401560
  406cf2:	jmp    0x406cfc
  406cf4:	add    rbx,rbx
  406cf7:	sub    esi,0x1
  406cfa:	je     0x406d32
  406cfc:	test   QWORD PTR [rsp+0x20],rbx
  406d01:	je     0x406cf4
  406d03:	mov    rcx,rbx
  406d06:	call   0x422738
  406d0b:	mov    r8,rax
  406d0e:	lea    rax,[rbx-0x1]
  406d12:	test   QWORD PTR [rsp+0x20],rax
  406d17:	mov    rdx,rdi
  406d1a:	lea    rcx,[rip+0x2cc57]        # 0x433978
  406d21:	cmovne rdx,rbp
  406d25:	add    rbx,rbx
  406d28:	call   0x401560
  406d2d:	sub    esi,0x1
  406d30:	jne    0x406cfc
  406d32:	lea    rcx,[rip+0x2b913]        # 0x43264c
  406d39:	call   0x401560
  406d3e:	add    r12d,0x1
  406d42:	jmp    0x406cc0
  406d47:	xor    eax,eax
  406d49:	add    rsp,0x30
  406d4d:	pop    rbx
  406d4e:	pop    rsi
  406d4f:	pop    rdi
  406d50:	pop    rbp
  406d51:	pop    r12
  406d53:	pop    r13
  406d55:	pop    r14
  406d57:	ret    
  406d58:	nop    DWORD PTR [rax+rax*1+0x0]
  406d60:	push   rsi
  406d61:	push   rbx
  406d62:	sub    rsp,0xa8
  406d69:	mov    ebx,0xffffffff
  406d6e:	lea    rsi,[rsp+0x20]
  406d73:	mov    r8d,ebx
  406d76:	mov    edx,0x80
  406d7b:	mov    rcx,rsi
  406d7e:	call   0x4226e8
  406d83:	lea    rcx,[rip+0x2b9cc]        # 0x432756
  406d8a:	mov    rdx,rax
  406d8d:	add    ebx,0x1
  406d90:	call   0x401560
  406d95:	cmp    ebx,0xa
  406d98:	jne    0x406d73
  406d9a:	xor    eax,eax
  406d9c:	add    rsp,0xa8
  406da3:	pop    rbx
  406da4:	pop    rsi
  406da5:	ret    
  406da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406db0:	push   rbp
  406db1:	push   rdi
  406db2:	push   rsi
  406db3:	push   rbx
  406db4:	sub    rsp,0x38
  406db8:	lea    rcx,[rip+0xffffffffffffa771]        # 0x401530
  406dbf:	mov    rbx,r8
  406dc2:	call   0x422690
  406dc7:	lea    rcx,[rip+0x2b5f5]        # 0x4323c3
  406dce:	test   rbx,rbx
  406dd1:	cmovne rcx,rbx
  406dd5:	call   0x422578
  406dda:	test   rax,rax
  406ddd:	mov    rbx,rax
  406de0:	mov    QWORD PTR [rsp+0x28],rax
  406de5:	je     0x407228
  406deb:	mov    edx,0x3d
  406df0:	mov    rcx,rax
  406df3:	call   0x42fb00
  406df8:	test   rax,rax
  406dfb:	je     0x4070b3
  406e01:	lea    rbp,[rax+0x1]
  406e05:	mov    BYTE PTR [rax],0x0
  406e08:	cmp    BYTE PTR [rbx],0x0
  406e0b:	je     0x406fe0
  406e11:	lea    rdi,[rip+0x2cb65]        # 0x43397d
  406e18:	mov    ecx,0x8
  406e1d:	mov    rsi,rbx
  406e20:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e22:	je     0x407000
  406e28:	lea    rdi,[rip+0x2cb56]        # 0x433985
  406e2f:	mov    ecx,0x8
  406e34:	mov    rsi,rbx
  406e37:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e39:	je     0x407010
  406e3f:	lea    rdi,[rip+0x2cb47]        # 0x43398d
  406e46:	mov    ecx,0x8
  406e4b:	mov    rsi,rbx
  406e4e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e50:	je     0x4070c0
  406e56:	lea    rdi,[rip+0x2cb7c]        # 0x4339d9
  406e5d:	mov    ecx,0x6
  406e62:	mov    rsi,rbx
  406e65:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e67:	je     0x407020
  406e6d:	lea    rdi,[rip+0x2cbed]        # 0x433a61
  406e74:	mov    ecx,0x7
  406e79:	mov    rsi,rbx
  406e7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e7e:	jne    0x406fe0
  406e84:	mov    rcx,rbp
  406e87:	call   0x422108
  406e8c:	test   rbp,rbp
  406e8f:	mov    rsi,rax
  406e92:	je     0x407232
  406e98:	test   rax,rax
  406e9b:	je     0x40720d
  406ea1:	mov    rdx,QWORD PTR [rax]
  406ea4:	lea    rcx,[rip+0x2cbee]        # 0x433a99
  406eab:	call   0x401560
  406eb0:	mov    rdx,QWORD PTR [rsi+0x8]
  406eb4:	test   rdx,rdx
  406eb7:	je     0x406ec5
  406eb9:	lea    rcx,[rip+0x2c7da]        # 0x43369a
  406ec0:	call   0x401560
  406ec5:	test   BYTE PTR [rsi+0x28],0x4
  406ec9:	jne    0x4071e1
  406ecf:	lea    rcx,[rip+0x2cbf1]        # 0x433ac7
  406ed6:	xor    ebx,ebx
  406ed8:	call   0x401560
  406edd:	mov    rcx,QWORD PTR [rsi+0x10]
  406ee1:	call   0x422080
  406ee6:	test   eax,eax
  406ee8:	mov    ebp,eax
  406eea:	jle    0x406f2b
  406eec:	nop    DWORD PTR [rax+0x0]
  406ef0:	mov    rcx,QWORD PTR [rsi+0x10]
  406ef4:	mov    edx,ebx
  406ef6:	call   0x422070
  406efb:	mov    ecx,eax
  406efd:	call   0x422718
  406f02:	mov    rcx,QWORD PTR [rsi+0x10]
  406f06:	mov    edx,ebx
  406f08:	mov    rdi,rax
  406f0b:	call   0x422078
  406f10:	lea    rcx,[rip+0x2cbbd]        # 0x433ad4
  406f17:	mov    edx,ebx
  406f19:	mov    r8,rax
  406f1c:	mov    r9,rdi
  406f1f:	add    ebx,0x1
  406f22:	call   0x401560
  406f27:	cmp    ebx,ebp
  406f29:	jne    0x406ef0
  406f2b:	test   BYTE PTR [rsi+0x28],0x1
  406f2f:	jne    0x4071d0
  406f35:	test   ebp,ebp
  406f37:	je     0x4071a4
  406f3d:	lea    rcx,[rip+0x2cbf6]        # 0x433b3a
  406f44:	xor    ebx,ebx
  406f46:	call   0x401560
  406f4b:	mov    rcx,QWORD PTR [rsi+0x18]
  406f4f:	call   0x422080
  406f54:	test   eax,eax
  406f56:	mov    ebp,eax
  406f58:	jle    0x406f9b
  406f5a:	nop    WORD PTR [rax+rax*1+0x0]
  406f60:	mov    rcx,QWORD PTR [rsi+0x18]
  406f64:	mov    edx,ebx
  406f66:	call   0x422070
  406f6b:	mov    ecx,eax
  406f6d:	call   0x422718
  406f72:	mov    rcx,QWORD PTR [rsi+0x18]
  406f76:	mov    edx,ebx
  406f78:	mov    rdi,rax
  406f7b:	call   0x422078
  406f80:	lea    rcx,[rip+0x2cb4d]        # 0x433ad4
  406f87:	mov    edx,ebx
  406f89:	mov    r8,rax
  406f8c:	mov    r9,rdi
  406f8f:	add    ebx,0x1
  406f92:	call   0x401560
  406f97:	cmp    ebx,ebp
  406f99:	jne    0x406f60
  406f9b:	test   BYTE PTR [rsi+0x28],0x2
  406f9f:	jne    0x4071b5
  406fa5:	test   ebp,ebp
  406fa7:	je     0x407193
  406fad:	mov    rcx,QWORD PTR [rsi+0x20]
  406fb1:	test   rcx,rcx
  406fb4:	je     0x406fc0
  406fb6:	mov    edx,0x10018
  406fbb:	call   0x4026c0
  406fc0:	test   DWORD PTR [rsi+0x28],0x30000
  406fc7:	je     0x406feb
  406fc9:	lea    rcx,[rip+0x2cb98]        # 0x433b68
  406fd0:	call   0x401560
  406fd5:	jmp    0x406feb
  406fd7:	nop    WORD PTR [rax+rax*1+0x0]
  406fe0:	mov    rdx,rbp
  406fe3:	mov    rcx,rbx
  406fe6:	call   0x40e930
  406feb:	lea    rcx,[rsp+0x28]
  406ff0:	call   0x422768
  406ff5:	xor    eax,eax
  406ff7:	add    rsp,0x38
  406ffb:	pop    rbx
  406ffc:	pop    rsi
  406ffd:	pop    rdi
  406ffe:	pop    rbp
  406fff:	ret    
  407000:	xor    edx,edx
  407002:	mov    rcx,rbp
  407005:	call   0x402d70
  40700a:	jmp    0x406feb
  40700c:	nop    DWORD PTR [rax+0x0]
  407010:	mov    edx,0x1
  407015:	mov    rcx,rbp
  407018:	call   0x402d70
  40701d:	jmp    0x406feb
  40701f:	nop
  407020:	xor    r8d,r8d
  407023:	xor    edx,edx
  407025:	mov    rcx,rbp
  407028:	call   0x4222b8
  40702d:	test   rax,rax
  407030:	mov    rbx,rax
  407033:	je     0x4071f2
  407039:	mov    rdx,QWORD PTR [rax]
  40703c:	mov    r8,QWORD PTR [rax+0x8]
  407040:	lea    rcx,[rip+0x2c998]        # 0x4339df
  407047:	call   0x401560
  40704c:	mov    rdx,QWORD PTR [rbx+0x18]
  407050:	test   rdx,rdx
  407053:	je     0x407061
  407055:	lea    rcx,[rip+0x2c961]        # 0x4339bd
  40705c:	call   0x401560
  407061:	mov    rdx,QWORD PTR [rbx+0x10]
  407065:	test   rdx,rdx
  407068:	je     0x407076
  40706a:	lea    rcx,[rip+0x2c97e]        # 0x4339ef
  407071:	call   0x401560
  407076:	mov    ecx,DWORD PTR [rbx+0x24]
  407079:	test   ecx,ecx
  40707b:	jne    0x407170
  407081:	mov    ecx,DWORD PTR [rbx+0x20]
  407084:	test   ecx,ecx
  407086:	jne    0x407143
  40708c:	mov    ecx,DWORD PTR [rbx+0x28]
  40708f:	test   ecx,ecx
  407091:	jne    0x407120
  407097:	mov    rcx,QWORD PTR [rbx+0x38]
  40709b:	test   rcx,rcx
  40709e:	je     0x406feb
  4070a4:	mov    edx,0x1
  4070a9:	call   0x4026c0
  4070ae:	jmp    0x406feb
  4070b3:	xor    ebp,ebp
  4070b5:	jmp    0x406e08
  4070ba:	nop    WORD PTR [rax+rax*1+0x0]
  4070c0:	mov    rcx,rbp
  4070c3:	call   0x4222e8
  4070c8:	test   rax,rax
  4070cb:	mov    rbx,rax
  4070ce:	je     0x4071f2
  4070d4:	mov    rdx,QWORD PTR [rax]
  4070d7:	mov    r8,QWORD PTR [rax+0x8]
  4070db:	lea    rcx,[rip+0x2c8c9]        # 0x4339ab
  4070e2:	call   0x401560
  4070e7:	mov    rdx,QWORD PTR [rbx+0x18]
  4070eb:	test   rdx,rdx
  4070ee:	je     0x4070fc
  4070f0:	lea    rcx,[rip+0x2c8c6]        # 0x4339bd
  4070f7:	call   0x401560
  4070fc:	mov    rcx,QWORD PTR [rbx+0x28]
  407100:	test   rcx,rcx
  407103:	je     0x406feb
  407109:	mov    edx,0x2
  40710e:	call   0x4026c0
  407113:	jmp    0x406feb
  407118:	nop    DWORD PTR [rax+rax*1+0x0]
  407120:	call   0x4223b0
  407125:	test   rax,rax
  407128:	je     0x407097
  40712e:	mov    rdx,QWORD PTR [rax+0x8]
  407132:	lea    rcx,[rip+0x2c907]        # 0x433a40
  407139:	call   0x401560
  40713e:	jmp    0x407097
  407143:	call   0x4223b0
  407148:	test   rax,rax
  40714b:	je     0x40708c
  407151:	mov    rdx,QWORD PTR [rax+0x8]
  407155:	lea    rcx,[rip+0x2c8c5]        # 0x433a21
  40715c:	call   0x401560
  407161:	jmp    0x40708c
  407166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407170:	call   0x4223b0
  407175:	test   rax,rax
  407178:	je     0x407081
  40717e:	mov    rdx,QWORD PTR [rax+0x8]
  407182:	lea    rcx,[rip+0x2c87a]        # 0x433a03
  407189:	call   0x401560
  40718e:	jmp    0x407081
  407193:	lea    rcx,[rip+0x2c9ae]        # 0x433b48
  40719a:	call   0x401560
  40719f:	jmp    0x406fad
  4071a4:	lea    rcx,[rip+0x2c971]        # 0x433b1c
  4071ab:	call   0x401560
  4071b0:	jmp    0x406f3d
  4071b5:	lea    rcx,[rip+0x2c934]        # 0x433af0
  4071bc:	call   0x401560
  4071c1:	jmp    0x406fad
  4071c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071d0:	lea    rcx,[rip+0x2c919]        # 0x433af0
  4071d7:	call   0x401560
  4071dc:	jmp    0x406f3d
  4071e1:	lea    rcx,[rip+0x2c8c0]        # 0x433aa8
  4071e8:	call   0x401560
  4071ed:	jmp    0x406ecf
  4071f2:	lea    r8,[rip+0x2c79c]        # 0x433995
  4071f9:	mov    r9,rbp
  4071fc:	mov    edx,0x10
  407201:	xor    ecx,ecx
  407203:	call   0x4226c0
  407208:	jmp    0x406feb
  40720d:	lea    r8,[rip+0x2c86f]        # 0x433a83
  407214:	mov    r9,rbp
  407217:	mov    edx,0x10
  40721c:	xor    ecx,ecx
  40721e:	call   0x4226c0
  407223:	jmp    0x406feb
  407228:	mov    eax,0xfffffff4
  40722d:	jmp    0x406ff7
  407232:	lea    r8,[rip+0x2c82f]        # 0x433a68
  407239:	mov    edx,0x10
  40723e:	xor    ecx,ecx
  407240:	call   0x4226c0
  407245:	jmp    0x406feb
  40724a:	nop    WORD PTR [rax+rax*1+0x0]
  407250:	push   rbx
  407251:	sub    rsp,0x20
  407255:	call   0x42fb88
  40725a:	lea    ecx,[rax-0x61]
  40725d:	mov    edx,eax
  40725f:	xor    eax,0x20
  407262:	cmp    ecx,0x19
  407265:	cmova  eax,edx
  407268:	xor    ebx,ebx
  40726a:	cmp    eax,0x59
  40726d:	sete   bl
  407270:	cmp    edx,0xffffffff
  407273:	je     0x40728f
  407275:	cmp    edx,0xa
  407278:	jne    0x407285
  40727a:	jmp    0x40728f
  40727c:	nop    DWORD PTR [rax+0x0]
  407280:	cmp    eax,0xa
  407283:	je     0x40728f
  407285:	call   0x42fb88
  40728a:	cmp    eax,0xffffffff
  40728d:	jne    0x407280
  40728f:	mov    eax,ebx
  407291:	add    rsp,0x20
  407295:	pop    rbx
  407296:	ret    
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	push   r14
  4072a2:	push   r13
  4072a4:	push   r12
  4072a6:	push   rbp
  4072a7:	push   rdi
  4072a8:	push   rsi
  4072a9:	push   rbx
  4072aa:	sub    rsp,0x170
  4072b1:	mov    r12,QWORD PTR [rsp+0x1d0]
  4072b9:	mov    rsi,rcx
  4072bc:	lea    rcx,[rip+0x2c8f1]        # 0x433bb4
  4072c3:	mov    ebx,r9d
  4072c6:	mov    rdi,rdx
  4072c9:	mov    rbp,r8
  4072cc:	call   0x42fb80
  4072d1:	lea    rcx,[rip+0x2c8eb]        # 0x433bc3
  4072d8:	mov    r13,rax
  4072db:	mov    QWORD PTR [rsp+0x40],rax
  4072e0:	call   0x42fb80
  4072e5:	mov    QWORD PTR [rsp+0x48],rax
  4072ea:	lea    rax,[rip+0x2c8d7]        # 0x433bc8
  4072f1:	test   ebx,ebx
  4072f3:	mov    QWORD PTR [rsp+0x50],rax
  4072f8:	jne    0x407510
  4072fe:	lea    r14,[rsp+0x60]
  407303:	xor    ecx,ecx
  407305:	mov    QWORD PTR [rsp+0x50],0x0
  40730e:	call   QWORD PTR [rip+0x3db1c]        # 0x444e30
  407314:	mov    r8d,0x103
  40731a:	mov    rdx,r14
  40731d:	mov    rcx,rax
  407320:	call   QWORD PTR [rip+0x3db02]        # 0x444e28
  407326:	test   eax,eax
  407328:	jne    0x407412
  40732e:	mov    rbx,r13
  407331:	xor    r13d,r13d
  407334:	lea    r14,[rsp+0x40]
  407339:	test   rbx,rbx
  40733c:	je     0x4073ec
  407342:	cmp    r13d,0x1
  407346:	je     0x4074b0
  40734c:	lea    rax,[rip+0x2b070]        # 0x4323c3
  407353:	lea    r8,[rip+0x2c8d8]        # 0x433c32
  40735a:	mov    r9,rbx
  40735d:	mov    rdx,rdi
  407360:	mov    rcx,rsi
  407363:	mov    QWORD PTR [rsp+0x28],rbp
  407368:	mov    QWORD PTR [rsp+0x20],rax
  40736d:	call   0x401670
  407372:	lea    rdx,[rip+0x2c898]        # 0x433c11
  407379:	mov    rcx,rsi
  40737c:	call   0x42fbc0
  407381:	test   rax,rax
  407384:	sete   dl
  407387:	jne    0x4073ce
  407389:	test   r12,r12
  40738c:	lea    rcx,[rip+0x2b030]        # 0x4323c3
  407393:	je     0x4073ce
  407395:	lea    r8,[rip+0x2c882]        # 0x433c1e
  40739c:	mov    QWORD PTR [rsp+0x20],rcx
  4073a1:	mov    r9,rbx
  4073a4:	mov    rdx,rdi
  4073a7:	mov    rcx,rsi
  4073aa:	mov    QWORD PTR [rsp+0x30],rbp
  4073af:	mov    QWORD PTR [rsp+0x28],r12
  4073b4:	call   0x401670
  4073b9:	lea    rdx,[rip+0x2c851]        # 0x433c11
  4073c0:	mov    rcx,rsi
  4073c3:	call   0x42fbc0
  4073c8:	test   rax,rax
  4073cb:	sete   dl
  4073ce:	add    r13d,0x1
  4073d2:	add    r14,0x8
  4073d6:	test   dl,dl
  4073d8:	je     0x407400
  4073da:	cmp    r13d,0x2
  4073de:	jg     0x407400
  4073e0:	mov    rbx,QWORD PTR [r14]
  4073e3:	test   rbx,rbx
  4073e6:	jne    0x407342
  4073ec:	mov    edx,0x1
  4073f1:	xor    eax,eax
  4073f3:	add    r13d,0x1
  4073f7:	add    r14,0x8
  4073fb:	test   dl,dl
  4073fd:	jne    0x4073da
  4073ff:	nop
  407400:	add    rsp,0x170
  407407:	pop    rbx
  407408:	pop    rsi
  407409:	pop    rdi
  40740a:	pop    rbp
  40740b:	pop    r12
  40740d:	pop    r13
  40740f:	pop    r14
  407411:	ret    
  407412:	mov    r11,r14
  407415:	mov    edx,DWORD PTR [r11]
  407418:	add    r11,0x4
  40741c:	lea    eax,[rdx-0x1010101]
  407422:	not    edx
  407424:	and    eax,edx
  407426:	and    eax,0x80808080
  40742b:	je     0x407415
  40742d:	mov    edx,eax
  40742f:	mov    r10,r14
  407432:	shr    edx,0x10
  407435:	test   eax,0x8080
  40743a:	cmove  eax,edx
  40743d:	lea    rdx,[r11+0x2]
  407441:	cmove  r11,rdx
  407445:	add    al,al
  407447:	sbb    r11,0x3
  40744b:	sub    r11,r14
  40744e:	jmp    0x407454
  407450:	add    r10,0x1
  407454:	lea    rax,[r14+r11*1]
  407458:	cmp    r10,rax
  40745b:	jae    0x407532
  407461:	cmp    BYTE PTR [r10],0x5c
  407465:	jne    0x407450
  407467:	mov    BYTE PTR [r10],0x2f
  40746b:	mov    r11,r14
  40746e:	mov    eax,DWORD PTR [r11]
  407471:	add    r11,0x4
  407475:	lea    ebx,[rax-0x1010101]
  40747b:	not    eax
  40747d:	and    ebx,eax
  40747f:	and    ebx,0x80808080
  407485:	je     0x40746e
  407487:	mov    eax,ebx
  407489:	shr    eax,0x10
  40748c:	test   ebx,0x8080
  407492:	cmove  ebx,eax
  407495:	lea    rax,[r11+0x2]
  407499:	cmove  r11,rax
  40749d:	add    bl,bl
  40749f:	sbb    r11,0x3
  4074a3:	sub    r11,r14
  4074a6:	jmp    0x407450
  4074a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	lea    rax,[rip+0x2c6f4]        # 0x433bab
  4074b7:	lea    r8,[rip+0x2c774]        # 0x433c32
  4074be:	mov    r9,rbx
  4074c1:	mov    rdx,rdi
  4074c4:	mov    rcx,rsi
  4074c7:	mov    QWORD PTR [rsp+0x28],rbp
  4074cc:	mov    QWORD PTR [rsp+0x20],rax
  4074d1:	call   0x401670
  4074d6:	lea    rdx,[rip+0x2c734]        # 0x433c11
  4074dd:	mov    rcx,rsi
  4074e0:	call   0x42fbc0
  4074e5:	test   rax,rax
  4074e8:	sete   dl
  4074eb:	jne    0x4073ce
  4074f1:	test   r12,r12
  4074f4:	lea    rcx,[rip+0x2c6b0]        # 0x433bab
  4074fb:	jne    0x407395
  407501:	jmp    0x4073ce
  407506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407510:	mov    rdx,rbp
  407513:	mov    rcx,rsi
  407516:	mov    r8,rdi
  407519:	call   0x422558
  40751e:	lea    rdx,[rip+0x2c6ec]        # 0x433c11
  407525:	mov    rcx,rsi
  407528:	call   0x42fbc0
  40752d:	jmp    0x407400
  407532:	mov    edx,0x2f
  407537:	mov    rcx,r14
  40753a:	call   0x42fac0
  40753f:	test   rax,rax
  407542:	je     0x40732e
  407548:	mov    BYTE PTR [rax],0x0
  40754b:	mov    rdx,r14
  40754e:	mov    ecx,DWORD PTR [rdx]
  407550:	add    rdx,0x4
  407554:	lea    eax,[rcx-0x1010101]
  40755a:	not    ecx
  40755c:	and    eax,ecx
  40755e:	and    eax,0x80808080
  407563:	je     0x40754e
  407565:	mov    ecx,eax
  407567:	shr    ecx,0x10
  40756a:	test   eax,0x8080
  40756f:	cmove  eax,ecx
  407572:	lea    rcx,[rdx+0x2]
  407576:	cmove  rdx,rcx
  40757a:	add    al,al
  40757c:	mov    rax,r14
  40757f:	sbb    rdx,0x3
  407583:	mov    rcx,r14
  407586:	sub    rax,rdx
  407589:	lea    rdx,[rip+0x2c683]        # 0x433c13
  407590:	lea    r8,[rax+0x103]
  407597:	call   0x42fad0
  40759c:	mov    QWORD PTR [rsp+0x50],r14
  4075a1:	jmp    0x40732e
  4075a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075b0:	push   rsi
  4075b1:	push   rbx
  4075b2:	sub    rsp,0x38
  4075b6:	mov    rbx,rcx
  4075b9:	mov    rsi,r8
  4075bc:	call   0x422210
  4075c1:	test   eax,eax
  4075c3:	js     0x4075d0
  4075c5:	add    rsp,0x38
  4075c9:	pop    rbx
  4075ca:	pop    rsi
  4075cb:	ret    
  4075cc:	nop    DWORD PTR [rax+0x0]
  4075d0:	lea    r8,[rip+0x2c671]        # 0x433c48
  4075d7:	mov    r9,rsi
  4075da:	mov    edx,0x10
  4075df:	mov    rcx,rbx
  4075e2:	mov    DWORD PTR [rsp+0x2c],eax
  4075e6:	call   0x4226c0
  4075eb:	mov    eax,DWORD PTR [rsp+0x2c]
  4075ef:	add    rsp,0x38
  4075f3:	pop    rbx
  4075f4:	pop    rsi
  4075f5:	ret    
  4075f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407600:	push   r15
  407602:	push   r14
  407604:	push   r13
  407606:	push   r12
  407608:	push   rbp
  407609:	push   rdi
  40760a:	push   rsi
  40760b:	push   rbx
  40760c:	sub    rsp,0x68
  407610:	cmp    QWORD PTR [r8+0x10],0x1
  407615:	mov    rbp,QWORD PTR [rsp+0xd0]
  40761d:	mov    r13,rcx
  407620:	mov    DWORD PTR [rsp+0xb8],edx
  407627:	mov    rsi,r8
  40762a:	mov    r12,r9
  40762d:	mov    QWORD PTR [rsp+0x50],0x0
  407636:	sbb    r15d,r15d
  407639:	not    r15d
  40763c:	add    r15d,0xa
  407640:	cmp    QWORD PTR [r8+0x10],0x1
  407645:	sbb    r14d,r14d
  407648:	not    r14d
  40764b:	add    r14d,0x22
  40764f:	cmp    QWORD PTR [r8+0x10],0x1
  407654:	sbb    edi,edi
  407656:	not    edi
  407658:	add    edi,0x12
  40765b:	cmp    QWORD PTR [r8+0x10],0x1
  407660:	sbb    ebx,ebx
  407662:	not    ebx
  407664:	call   0x422350
  407669:	add    ebx,0x2
  40766c:	test   rbp,rbp
  40766f:	mov    QWORD PTR [rsp+0x58],rax
  407674:	je     0x407840
  40767a:	mov    rax,QWORD PTR [r12+0x8]
  40767f:	mov    eax,DWORD PTR [rax+0xc]
  407682:	cmp    eax,0x1
  407685:	je     0x4077e1
  40768b:	cmp    eax,0x3
  40768e:	je     0x4077d4
  407694:	test   eax,eax
  407696:	cmovne edi,ebx
  407699:	cmp    eax,0x1
  40769c:	sbb    eax,eax
  40769e:	and    eax,0x76
  4076a1:	mov    BYTE PTR [rsp+0x4b],al
  4076a5:	lea    rax,[rsp+0x58]
  4076aa:	xor    ebx,ebx
  4076ac:	mov    QWORD PTR [rsp+0x30],rax
  4076b1:	lea    rax,[rsp+0x50]
  4076b6:	mov    QWORD PTR [rsp+0x38],rax
  4076bb:	lea    rax,[rbp+0x50]
  4076bf:	mov    QWORD PTR [rsp+0x40],rax
  4076c4:	lea    rdx,[rip+0x2acf8]        # 0x4323c3
  4076cb:	mov    r8,rbx
  4076ce:	mov    r9d,0x2
  4076d4:	mov    rcx,r13
  4076d7:	call   0x422818
  4076dc:	test   rax,rax
  4076df:	mov    rbx,rax
  4076e2:	je     0x407860
  4076e8:	mov    r15,QWORD PTR [rbx]
  4076eb:	mov    edx,0x3a
  4076f0:	mov    rcx,r15
  4076f3:	call   0x42fb00
  4076f8:	test   rax,rax
  4076fb:	mov    r14,rax
  4076fe:	je     0x40772a
  407700:	lea    r15,[rax+0x1]
  407704:	mov    rdx,r12
  407707:	mov    rcx,rsi
  40770a:	mov    r8,r15
  40770d:	call   0x422210
  407712:	test   eax,eax
  407714:	js     0x4077b0
  40771a:	test   eax,eax
  40771c:	je     0x4076c4
  40771e:	cmp    eax,0x1
  407721:	jne    0x4077a0
  407723:	mov    BYTE PTR [r14],0x0
  407727:	mov    r15,QWORD PTR [rbx]
  40772a:	mov    rcx,QWORD PTR [rsp+0x30]
  40772f:	xor    r8d,r8d
  407732:	mov    DWORD PTR [rsp+0x20],0x2
  40773a:	mov    r9d,edi
  40773d:	mov    rdx,r15
  407740:	call   0x422638
  407745:	test   rax,rax
  407748:	jne    0x40777a
  40774a:	test   rbp,rbp
  40774d:	je     0x40777a
  40774f:	cmp    QWORD PTR [rbp+0x50],0x0
  407754:	je     0x4077f0
  40775a:	mov    DWORD PTR [rsp+0x20],0x2
  407762:	mov    rcx,QWORD PTR [rsp+0x40]
  407767:	xor    r8d,r8d
  40776a:	mov    rdx,QWORD PTR [rbx]
  40776d:	mov    r9d,edi
  407770:	call   0x422638
  407775:	test   rax,rax
  407778:	je     0x4077f0
  40777a:	mov    r8,QWORD PTR [rbx+0x8]
  40777e:	mov    rdx,QWORD PTR [rbx]
  407781:	xor    r9d,r9d
  407784:	mov    rcx,QWORD PTR [rsp+0x38]
  407789:	call   0x422808
  40778e:	test   r14,r14
  407791:	je     0x4076c4
  407797:	mov    BYTE PTR [r14],0x3a
  40779b:	jmp    0x4076c4
  4077a0:	mov    ecx,0x1
  4077a5:	call   0x401cb0
  4077aa:	nop    WORD PTR [rax+rax*1+0x0]
  4077b0:	lea    r8,[rip+0x2c491]        # 0x433c48
  4077b7:	mov    r9,r15
  4077ba:	mov    edx,0x10
  4077bf:	mov    rcx,rsi
  4077c2:	mov    DWORD PTR [rsp+0x4c],eax
  4077c6:	call   0x4226c0
  4077cb:	mov    eax,DWORD PTR [rsp+0x4c]
  4077cf:	jmp    0x40771a
  4077d4:	mov    edi,r14d
  4077d7:	mov    BYTE PTR [rsp+0x4b],0x73
  4077dc:	jmp    0x4076a5
  4077e1:	mov    edi,r15d
  4077e4:	mov    BYTE PTR [rsp+0x4b],0x61
  4077e9:	jmp    0x4076a5
  4077ee:	xchg   ax,ax
  4077f0:	mov    rax,QWORD PTR [rbx]
  4077f3:	movzx  edx,BYTE PTR [rsp+0x4b]
  4077f8:	cmp    dl,BYTE PTR [rax]
  4077fa:	jne    0x40778e
  4077fc:	mov    rcx,QWORD PTR [rsp+0x30]
  407801:	lea    rdx,[rax+0x1]
  407805:	xor    r8d,r8d
  407808:	mov    DWORD PTR [rsp+0x20],0x2
  407810:	mov    r9d,edi
  407813:	call   0x422638
  407818:	test   rax,rax
  40781b:	je     0x40778e
  407821:	mov    rax,QWORD PTR [rbx]
  407824:	mov    r8,QWORD PTR [rbx+0x8]
  407828:	xor    r9d,r9d
  40782b:	mov    rcx,QWORD PTR [rsp+0x38]
  407830:	lea    rdx,[rax+0x1]
  407834:	call   0x422808
  407839:	jmp    0x40778e
  40783e:	xchg   ax,ax
  407840:	cmp    QWORD PTR [rsi+0x10],0x0
  407845:	mov    ecx,DWORD PTR [rsp+0xb8]
  40784c:	je     0x407876
  40784e:	call   0x422368
  407853:	mov    rbp,rax
  407856:	jmp    0x40767a
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    rax,QWORD PTR [rsp+0x50]
  407865:	add    rsp,0x68
  407869:	pop    rbx
  40786a:	pop    rsi
  40786b:	pop    rdi
  40786c:	pop    rbp
  40786d:	pop    r12
  40786f:	pop    r13
  407871:	pop    r14
  407873:	pop    r15
  407875:	ret    
  407876:	call   0x422378
  40787b:	mov    rbp,rax
  40787e:	jmp    0x40767a
  407883:	nop    DWORD PTR [rax]
  407886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407890:	push   r12
  407892:	push   rbp
  407893:	push   rdi
  407894:	push   rsi
  407895:	push   rbx
  407896:	sub    rsp,0x30
  40789a:	mov    eax,DWORD PTR [rcx+0x2c]
  40789d:	test   eax,eax
  40789f:	je     0x407935
  4078a5:	cmp    rax,0xffffffe
  4078ab:	mov    r12,rdx
  4078ae:	mov    rsi,rcx
  4078b1:	jbe    0x4078d3
  4078b3:	lea    r8,[rip+0x2c3ae]        # 0x433c68
  4078ba:	mov    edx,0x10
  4078bf:	xor    ecx,ecx
  4078c1:	call   0x4226c0
  4078c6:	xor    eax,eax
  4078c8:	add    rsp,0x30
  4078cc:	pop    rbx
  4078cd:	pop    rsi
  4078ce:	pop    rdi
  4078cf:	pop    rbp
  4078d0:	pop    r12
  4078d2:	ret    
  4078d3:	lea    rcx,[rax*8+0x0]
  4078db:	call   0x422670
  4078e0:	test   rax,rax
  4078e3:	mov    rbp,rax
  4078e6:	je     0x4078b3
  4078e8:	mov    eax,DWORD PTR [rsi+0x2c]
  4078eb:	xor    ebx,ebx
  4078ed:	xor    edi,edi
  4078ef:	test   eax,eax
  4078f1:	je     0x407927
  4078f3:	mov    rax,QWORD PTR [rsi+0x30]
  4078f7:	mov    r8,rsi
  4078fa:	mov    rcx,r12
  4078fd:	add    edi,0x1
  407900:	mov    r9,QWORD PTR [rax+rbx*1]
  407904:	mov    rax,QWORD PTR [r9+0x8]
  407908:	mov    edx,DWORD PTR [rax+0x38]
  40790b:	mov    QWORD PTR [rsp+0x20],0x0
  407914:	call   0x407600
  407919:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40791e:	add    rbx,0x8
  407922:	cmp    edi,DWORD PTR [rsi+0x2c]
  407925:	jb     0x4078f3
  407927:	mov    rax,rbp
  40792a:	add    rsp,0x30
  40792e:	pop    rbx
  40792f:	pop    rsi
  407930:	pop    rdi
  407931:	pop    rbp
  407932:	pop    r12
  407934:	ret    
  407935:	xor    eax,eax
  407937:	add    rsp,0x30
  40793b:	pop    rbx
  40793c:	pop    rsi
  40793d:	pop    rdi
  40793e:	pop    rbp
  40793f:	pop    r12
  407941:	ret    
  407942:	nop    DWORD PTR [rax+0x0]
  407946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407950:	push   rbp
  407951:	push   rdi
  407952:	push   rsi
  407953:	push   rbx
  407954:	sub    rsp,0x28
  407958:	mov    eax,0x7fffffff
  40795d:	mov    ebx,edx
  40795f:	cdq    
  407960:	mov    rbp,r8
  407963:	idiv   ebx
  407965:	mov    esi,r9d
  407968:	cmp    eax,r9d
  40796b:	jle    0x4079c2
  40796d:	cmp    r9d,DWORD PTR [r8]
  407970:	mov    rax,rcx
  407973:	jg     0x407980
  407975:	add    rsp,0x28
  407979:	pop    rbx
  40797a:	pop    rsi
  40797b:	pop    rdi
  40797c:	pop    rbp
  40797d:	ret    
  40797e:	xchg   ax,ax
  407980:	movsxd rdx,r9d
  407983:	movsxd r8,ebx
  407986:	call   0x4225b8
  40798b:	test   rax,rax
  40798e:	mov    rdi,rax
  407991:	je     0x4079df
  407993:	mov    ecx,DWORD PTR [rbp+0x0]
  407996:	mov    r8d,esi
  407999:	xor    edx,edx
  40799b:	sub    r8d,ecx
  40799e:	imul   ecx,ebx
  4079a1:	imul   r8d,ebx
  4079a5:	movsxd rcx,ecx
  4079a8:	add    rcx,rax
  4079ab:	movsxd r8,r8d
  4079ae:	call   0x42fb30
  4079b3:	mov    rax,rdi
  4079b6:	mov    DWORD PTR [rbp+0x0],esi
  4079b9:	add    rsp,0x28
  4079bd:	pop    rbx
  4079be:	pop    rsi
  4079bf:	pop    rdi
  4079c0:	pop    rbp
  4079c1:	ret    
  4079c2:	lea    r8,[rip+0x2afb1]        # 0x43297a
  4079c9:	xor    ecx,ecx
  4079cb:	mov    edx,0x10
  4079d0:	call   0x4226c0
  4079d5:	mov    ecx,0x1
  4079da:	call   0x401cb0
  4079df:	call   0x430066
  4079e4:	nop
  4079e5:	nop
  4079e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079f0:	push   rdi
  4079f1:	push   rsi
  4079f2:	push   rbx
  4079f3:	sub    rsp,0x60
  4079f7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4079fc:	movaps XMMWORD PTR [rsp+0x50],xmm7
  407a01:	lea    rdx,[rip+0x2c28c]        # 0x433c94
  407a08:	xor    r9d,r9d
  407a0b:	xor    r8d,r8d
  407a0e:	mov    rbx,rcx
  407a11:	mov    rcx,QWORD PTR [rcx+0x60]
  407a15:	call   0x422818
  407a1a:	xor    r8d,r8d
  407a1d:	mov    rsi,rax
  407a20:	mov    edx,0x5
  407a25:	mov    rcx,rbx
  407a28:	call   0x422258
  407a2d:	test   rsi,rsi
  407a30:	je     0x407a40
  407a32:	mov    r8,QWORD PTR [rsi+0x8]
  407a36:	cmp    BYTE PTR [r8],0x0
  407a3a:	jne    0x407ad2
  407a40:	pxor   xmm6,xmm6
  407a44:	test   rax,rax
  407a47:	jne    0x407b40
  407a4d:	movsd  xmm7,QWORD PTR [rip+0x2c3db]        # 0x433e30
  407a55:	movapd xmm0,xmm6
  407a59:	divsd  xmm0,xmm7
  407a5d:	addsd  xmm0,QWORD PTR [rip+0x2c3d3]        # 0x433e38
  407a65:	call   0x423e20
  407a6a:	mulsd  xmm7,xmm0
  407a6e:	subsd  xmm6,xmm7
  407a72:	movsd  xmm7,QWORD PTR [rip+0x2c3c6]        # 0x433e40
  407a7a:	movapd xmm0,xmm6
  407a7e:	divsd  xmm0,xmm7
  407a82:	call   0x423fd0
  407a87:	mulsd  xmm7,xmm0
  407a8b:	movapd xmm0,xmm6
  407a8f:	movsd  xmm1,QWORD PTR [rip+0x2c3b9]        # 0x433e50
  407a97:	subsd  xmm0,xmm7
  407a9b:	andpd  xmm0,xmm1
  407a9f:	ucomisd xmm0,QWORD PTR [rip+0x2c3b9]        # 0x433e60
  407aa7:	jbe    0x407abc
  407aa9:	lea    r8,[rip+0x2c1f0]        # 0x433ca0
  407ab0:	mov    edx,0x18
  407ab5:	xor    ecx,ecx
  407ab7:	call   0x4226c0
  407abc:	movapd xmm0,xmm6
  407ac0:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407ac5:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  407aca:	add    rsp,0x60
  407ace:	pop    rbx
  407acf:	pop    rsi
  407ad0:	pop    rdi
  407ad1:	ret    
  407ad2:	lea    rdi,[rip+0x2ae5a]        # 0x432933
  407ad9:	mov    ecx,0x2
  407ade:	mov    rsi,r8
  407ae1:	pxor   xmm6,xmm6
  407ae5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ae7:	seta   cl
  407aea:	setb   dl
  407aed:	cmp    cl,dl
  407aef:	je     0x407a44
  407af5:	lea    rdx,[rsp+0x38]
  407afa:	mov    rcx,r8
  407afd:	mov    QWORD PTR [rsp+0x28],rax
  407b02:	call   0x422548
  407b07:	mov    rdx,QWORD PTR [rsp+0x38]
  407b0c:	movapd xmm6,xmm0
  407b10:	mov    rax,QWORD PTR [rsp+0x28]
  407b15:	cmp    BYTE PTR [rdx],0x0
  407b18:	jne    0x407a40
  407b1e:	pxor   xmm0,xmm0
  407b22:	mov    ecx,0x0
  407b27:	ucomisd xmm6,xmm0
  407b2b:	setnp  dl
  407b2e:	cmovne edx,ecx
  407b31:	test   dl,dl
  407b33:	jne    0x407a44
  407b39:	jmp    0x407a4d
  407b3e:	xchg   ax,ax
  407b40:	mov    rcx,rax
  407b43:	call   0x4227f8
  407b48:	movsd  xmm6,QWORD PTR [rip+0x2c2d0]        # 0x433e20
  407b50:	xorpd  xmm6,xmm0
  407b54:	jmp    0x407a4d
  407b59:	nop    DWORD PTR [rax+0x0]
  407b60:	push   r13
  407b62:	push   r12
  407b64:	push   rbp
  407b65:	push   rdi
  407b66:	push   rsi
  407b67:	push   rbx
  407b68:	sub    rsp,0x58
  407b6c:	mov    rbx,r8
  407b6f:	mov    QWORD PTR [rsp+0x40],0x0
  407b78:	mov    QWORD PTR [rsp+0x48],0x0
  407b81:	call   0x422698
  407b86:	mov    ecx,0x10
  407b8b:	mov    r12d,eax
  407b8e:	call   0x422680
  407b93:	test   rbx,rbx
  407b96:	je     0x407cf0
  407b9c:	mov    rcx,rbx
  407b9f:	call   0x422578
  407ba4:	test   rax,rax
  407ba7:	mov    QWORD PTR [rsp+0x40],rax
  407bac:	je     0x407d06
  407bb2:	mov    edx,0x2c
  407bb7:	mov    rcx,rax
  407bba:	call   0x42fb00
  407bbf:	test   rax,rax
  407bc2:	je     0x407cfc
  407bc8:	cmp    BYTE PTR [rax+0x1],0x0
  407bcc:	mov    BYTE PTR [rax],0x0
  407bcf:	lea    rbp,[rsp+0x48]
  407bd4:	jne    0x407cb0
  407bda:	xor    ebx,ebx
  407bdc:	mov    r13d,0x6
  407be2:	mov    rcx,rbx
  407be5:	call   0x422058
  407bea:	test   rax,rax
  407bed:	mov    rbx,rax
  407bf0:	je     0x407c40
  407bf2:	mov    rdx,QWORD PTR [rax]
  407bf5:	lea    rdi,[rip+0x2c1b7]        # 0x433db3
  407bfc:	mov    rcx,r13
  407bff:	mov    rsi,rdx
  407c02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407c04:	je     0x407be2
  407c06:	mov    rcx,QWORD PTR [rsp+0x40]
  407c0b:	test   rcx,rcx
  407c0e:	je     0x407c19
  407c10:	call   0x422668
  407c15:	test   eax,eax
  407c17:	je     0x407be2
  407c19:	mov    rdx,QWORD PTR [rsp+0x48]
  407c1e:	mov    rcx,rbx
  407c21:	call   0x401690
  407c26:	mov    rcx,rbx
  407c29:	call   0x422058
  407c2e:	test   rax,rax
  407c31:	mov    rbx,rax
  407c34:	jne    0x407bf2
  407c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c40:	mov    rcx,rbx
  407c43:	call   0x422050
  407c48:	test   rax,rax
  407c4b:	mov    rbx,rax
  407c4e:	je     0x407c83
  407c50:	mov    rcx,QWORD PTR [rsp+0x40]
  407c55:	test   rcx,rcx
  407c58:	je     0x407c66
  407c5a:	mov    rdx,QWORD PTR [rax]
  407c5d:	call   0x422668
  407c62:	test   eax,eax
  407c64:	je     0x407c40
  407c66:	mov    rdx,QWORD PTR [rsp+0x48]
  407c6b:	mov    rcx,rbx
  407c6e:	call   0x401690
  407c73:	mov    rcx,rbx
  407c76:	call   0x422050
  407c7b:	test   rax,rax
  407c7e:	mov    rbx,rax
  407c81:	jne    0x407c50
  407c83:	xor    ebx,ebx
  407c85:	mov    rcx,rbp
  407c88:	call   0x422820
  407c8d:	mov    rcx,QWORD PTR [rsp+0x40]
  407c92:	call   0x422770
  407c97:	mov    ecx,r12d
  407c9a:	call   0x422680
  407c9f:	mov    eax,ebx
  407ca1:	add    rsp,0x58
  407ca5:	pop    rbx
  407ca6:	pop    rsi
  407ca7:	pop    rdi
  407ca8:	pop    rbp
  407ca9:	pop    r12
  407cab:	pop    r13
  407cad:	ret    
  407cae:	xchg   ax,ax
  407cb0:	lea    rdx,[rax+0x1]
  407cb4:	lea    r9,[rip+0x2a713]        # 0x4323ce
  407cbb:	lea    r8,[rip+0x2a70e]        # 0x4323d0
  407cc2:	mov    DWORD PTR [rsp+0x20],0x0
  407cca:	mov    rcx,rbp
  407ccd:	call   0x422810
  407cd2:	test   eax,eax
  407cd4:	jns    0x407bda
  407cda:	lea    rcx,[rsp+0x40]
  407cdf:	mov    DWORD PTR [rsp+0x3c],eax
  407ce3:	call   0x422768
  407ce8:	mov    eax,DWORD PTR [rsp+0x3c]
  407cec:	mov    ebx,eax
  407cee:	jmp    0x407c85
  407cf0:	lea    rcx,[rip+0x2c059]        # 0x433d50
  407cf7:	call   0x401560
  407cfc:	lea    rbp,[rsp+0x48]
  407d01:	jmp    0x407bda
  407d06:	mov    ebx,0xfffffff4
  407d0b:	lea    rbp,[rsp+0x48]
  407d10:	jmp    0x407c85
  407d15:	nop
  407d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d20:	push   rdi
  407d21:	push   rsi
  407d22:	push   rbx
  407d23:	sub    rsp,0x50
  407d27:	mov    rbx,r8
  407d2a:	mov    QWORD PTR [rsp+0x40],0x0
  407d33:	mov    QWORD PTR [rsp+0x48],0x0
  407d3c:	call   0x422698
  407d41:	mov    ecx,0x10
  407d46:	mov    edi,eax
  407d48:	call   0x422680
  407d4d:	test   rbx,rbx
  407d50:	je     0x407e90
  407d56:	mov    rcx,rbx
  407d59:	call   0x422578
  407d5e:	test   rax,rax
  407d61:	mov    QWORD PTR [rsp+0x40],rax
  407d66:	je     0x407ea6
  407d6c:	mov    edx,0x2c
  407d71:	mov    rcx,rax
  407d74:	call   0x42fb00
  407d79:	test   rax,rax
  407d7c:	je     0x407e9c
  407d82:	cmp    BYTE PTR [rax+0x1],0x0
  407d86:	mov    BYTE PTR [rax],0x0
  407d89:	lea    rsi,[rsp+0x48]
  407d8e:	jne    0x407e50
  407d94:	xor    ebx,ebx
  407d96:	mov    rcx,rbx
  407d99:	call   0x422048
  407d9e:	test   rax,rax
  407da1:	mov    rbx,rax
  407da4:	je     0x407de0
  407da6:	mov    rcx,QWORD PTR [rsp+0x40]
  407dab:	test   rcx,rcx
  407dae:	je     0x407dbc
  407db0:	mov    rdx,QWORD PTR [rax]
  407db3:	call   0x422668
  407db8:	test   eax,eax
  407dba:	je     0x407d96
  407dbc:	mov    rdx,QWORD PTR [rsp+0x48]
  407dc1:	mov    rcx,rbx
  407dc4:	call   0x4017d0
  407dc9:	mov    rcx,rbx
  407dcc:	call   0x422048
  407dd1:	test   rax,rax
  407dd4:	mov    rbx,rax
  407dd7:	jne    0x407da6
  407dd9:	nop    DWORD PTR [rax+0x0]
  407de0:	mov    rcx,rbx
  407de3:	call   0x422040
  407de8:	test   rax,rax
  407deb:	mov    rbx,rax
  407dee:	je     0x407e23
  407df0:	mov    rcx,QWORD PTR [rsp+0x40]
  407df5:	test   rcx,rcx
  407df8:	je     0x407e06
  407dfa:	mov    rdx,QWORD PTR [rax]
  407dfd:	call   0x422668
  407e02:	test   eax,eax
  407e04:	je     0x407de0
  407e06:	mov    rdx,QWORD PTR [rsp+0x48]
  407e0b:	mov    rcx,rbx
  407e0e:	call   0x4017d0
  407e13:	mov    rcx,rbx
  407e16:	call   0x422040
  407e1b:	test   rax,rax
  407e1e:	mov    rbx,rax
  407e21:	jne    0x407df0
  407e23:	xor    ebx,ebx
  407e25:	mov    rcx,rsi
  407e28:	call   0x422820
  407e2d:	mov    rcx,QWORD PTR [rsp+0x40]
  407e32:	call   0x422770
  407e37:	mov    ecx,edi
  407e39:	call   0x422680
  407e3e:	mov    eax,ebx
  407e40:	add    rsp,0x50
  407e44:	pop    rbx
  407e45:	pop    rsi
  407e46:	pop    rdi
  407e47:	ret    
  407e48:	nop    DWORD PTR [rax+rax*1+0x0]
  407e50:	lea    rdx,[rax+0x1]
  407e54:	lea    r9,[rip+0x2a573]        # 0x4323ce
  407e5b:	lea    r8,[rip+0x2a56e]        # 0x4323d0
  407e62:	mov    DWORD PTR [rsp+0x20],0x0
  407e6a:	mov    rcx,rsi
  407e6d:	call   0x422810
  407e72:	test   eax,eax
  407e74:	jns    0x407d94
  407e7a:	lea    rcx,[rsp+0x40]
  407e7f:	mov    DWORD PTR [rsp+0x3c],eax
  407e83:	call   0x422768
  407e88:	mov    eax,DWORD PTR [rsp+0x3c]
  407e8c:	mov    ebx,eax
  407e8e:	jmp    0x407e25
  407e90:	lea    rcx,[rip+0x2beb9]        # 0x433d50
  407e97:	call   0x401560
  407e9c:	lea    rsi,[rsp+0x48]
  407ea1:	jmp    0x407d94
  407ea6:	mov    ebx,0xfffffff4
  407eab:	lea    rsi,[rsp+0x48]
  407eb0:	jmp    0x407e25
  407eb5:	nop
  407eb6:	nop
  407eb7:	nop
  407eb8:	nop
  407eb9:	nop
  407eba:	nop
  407ebb:	nop
  407ebc:	nop
  407ebd:	nop
  407ebe:	nop
  407ebf:	nop
  407ec0:	sub    rsp,0x38
  407ec4:	lea    r8,[rip+0x2bfb5]        # 0x433e80
  407ecb:	xor    ecx,ecx
  407ecd:	mov    r9,rdx
  407ed0:	mov    QWORD PTR [rsp+0x20],rdx
  407ed5:	mov    edx,0x10
  407eda:	call   0x4226c0
  407edf:	mov    eax,0xffffffea
  407ee4:	add    rsp,0x38
  407ee8:	ret    
  407ee9:	nop    DWORD PTR [rax+0x0]
  407ef0:	sub    rsp,0x38
  407ef4:	mov    QWORD PTR [rsp+0x48],rdx
  407ef9:	lea    rdx,[rsp+0x48]
  407efe:	mov    QWORD PTR [rsp+0x50],r8
  407f03:	mov    QWORD PTR [rsp+0x58],r9
  407f08:	mov    QWORD PTR [rsp+0x28],rdx
  407f0d:	call   0x4272e0
  407f12:	add    rsp,0x38
  407f16:	ret    
  407f17:	nop    WORD PTR [rax+rax*1+0x0]
  407f20:	sub    rsp,0x28
  407f24:	lea    rcx,[rip+0x2c005]        # 0x433f30
  407f2b:	call   0x407ef0
  407f30:	lea    rdx,[rip+0x2c019]        # 0x433f50
  407f37:	lea    rcx,[rip+0x2c018]        # 0x433f56
  407f3e:	call   0x407ef0
  407f43:	lea    rcx,[rip+0x2c010]        # 0x433f5a
  407f4a:	call   0x407ef0
  407f4f:	xor    eax,eax
  407f51:	add    rsp,0x28
  407f55:	ret    
  407f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f60:	push   rsi
  407f61:	push   rbx
  407f62:	sub    rsp,0x28
  407f66:	mov    eax,DWORD PTR [rcx+0x120]
  407f6c:	mov    edx,0x8
  407f71:	mov    rbx,rcx
  407f74:	mov    rcx,QWORD PTR [rcx+0x118]
  407f7b:	mov    rsi,r8
  407f7e:	lea    r8,[rbx+0x120]
  407f85:	lea    r9d,[rax+0x1]
  407f89:	call   0x407950
  407f8e:	movsxd rdx,DWORD PTR [rbx+0x120]
  407f95:	mov    QWORD PTR [rbx+0x118],rax
  407f9c:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  407fa1:	xor    eax,eax
  407fa3:	add    rsp,0x28
  407fa7:	pop    rbx
  407fa8:	pop    rsi
  407fa9:	ret    
  407faa:	nop    WORD PTR [rax+rax*1+0x0]
  407fb0:	lea    r9,[rip+0x2fb09]        # 0x437ac0
  407fb7:	lea    rdx,[rip+0x2bf9e]        # 0x433f5c
  407fbe:	jmp    0x402ef0
  407fc3:	nop    DWORD PTR [rax]
  407fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fd0:	lea    r9,[rip+0x2fae9]        # 0x437ac0
  407fd7:	lea    rdx,[rip+0x2bf86]        # 0x433f64
  407fde:	jmp    0x402ef0
  407fe3:	nop    DWORD PTR [rax]
  407fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ff0:	lea    r9,[rip+0x2fac9]        # 0x437ac0
  407ff7:	lea    rdx,[rip+0x2bf6e]        # 0x433f6c
  407ffe:	jmp    0x402ef0
  408003:	nop    DWORD PTR [rax]
  408006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408010:	lea    r9,[rip+0x2faa9]        # 0x437ac0
  408017:	lea    rdx,[rip+0x2bf56]        # 0x433f74
  40801e:	jmp    0x402ef0
  408023:	nop    DWORD PTR [rax]
  408026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408030:	lea    r9,[rip+0x2fa89]        # 0x437ac0
  408037:	lea    rdx,[rip+0x2bf3e]        # 0x433f7c
  40803e:	jmp    0x402ef0
  408043:	nop    DWORD PTR [rax]
  408046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408050:	lea    r9,[rip+0x2fa69]        # 0x437ac0
  408057:	lea    rdx,[rip+0x2bf27]        # 0x433f85
  40805e:	jmp    0x402ef0
  408063:	nop    DWORD PTR [rax]
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	lea    r9,[rip+0x2fa49]        # 0x437ac0
  408077:	lea    rdx,[rip+0x2bf0b]        # 0x433f89
  40807e:	jmp    0x402ef0
  408083:	nop    DWORD PTR [rax]
  408086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408090:	lea    r9,[rip+0x2fa29]        # 0x437ac0
  408097:	lea    rdx,[rip+0x2bef4]        # 0x433f92
  40809e:	jmp    0x402ef0
  4080a3:	nop    DWORD PTR [rax]
  4080a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080b0:	lea    r9,[rip+0x2fa09]        # 0x437ac0
  4080b7:	lea    rdx,[rip+0x2bedd]        # 0x433f9b
  4080be:	jmp    0x402ef0
  4080c3:	nop    DWORD PTR [rax]
  4080c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080d0:	lea    r9,[rip+0x2f9e9]        # 0x437ac0
  4080d7:	lea    rdx,[rip+0x2bec6]        # 0x433fa4
  4080de:	jmp    0x402ef0
  4080e3:	nop    DWORD PTR [rax]
  4080e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080f0:	push   rbp
  4080f1:	push   rdi
  4080f2:	push   rsi
  4080f3:	push   rbx
  4080f4:	sub    rsp,0x28
  4080f8:	mov    rbx,QWORD PTR [rip+0x35771]        # 0x43d870
  4080ff:	mov    rsi,QWORD PTR [rip+0x3568a]        # 0x43d790
  408106:	mov    edx,0x8
  40810b:	mov    rbp,r8
  40810e:	mov    eax,DWORD PTR [rbx]
  408110:	mov    rcx,QWORD PTR [rsi]
  408113:	mov    r8,rbx
  408116:	lea    r9d,[rax+0x1]
  40811a:	call   0x407950
  40811f:	movsxd rdx,DWORD PTR [rbx]
  408122:	mov    ecx,0x40
  408127:	mov    QWORD PTR [rsi],rax
  40812a:	lea    rdi,[rax+rdx*8-0x8]
  40812f:	call   0x422670
  408134:	test   rax,rax
  408137:	mov    QWORD PTR [rdi],rax
  40813a:	je     0x408182
  40813c:	movsxd rcx,DWORD PTR [rbx]
  40813f:	mov    rdx,QWORD PTR [rsi]
  408142:	mov    rdi,QWORD PTR [rdx+rcx*8-0x8]
  408147:	mov    rax,rcx
  40814a:	mov    rcx,rbp
  40814d:	sub    eax,0x1
  408150:	mov    DWORD PTR [rdi],eax
  408152:	call   0x422578
  408157:	movsxd rdx,DWORD PTR [rbx]
  40815a:	mov    QWORD PTR [rdi+0x8],rax
  40815e:	mov    rax,QWORD PTR [rsi]
  408161:	mov    rax,QWORD PTR [rax+rdx*8-0x8]
  408166:	cmp    QWORD PTR [rax+0x8],0x0
  40816b:	je     0x408182
  40816d:	mov    DWORD PTR [rip+0x39f25],0x1        # 0x44209c
  408177:	xor    eax,eax
  408179:	add    rsp,0x28
  40817d:	pop    rbx
  40817e:	pop    rsi
  40817f:	pop    rdi
  408180:	pop    rbp
  408181:	ret    
  408182:	mov    eax,0xfffffff4
  408187:	jmp    0x408179
  408189:	nop    DWORD PTR [rax+0x0]
  408190:	push   rdi
  408191:	push   rsi
  408192:	push   rbx
  408193:	add    rsp,0xffffffffffffff80
  408197:	lea    rdi,[rip+0x2be15]        # 0x433fb3
  40819e:	mov    ecx,0x2
  4081a3:	lea    rax,[rip+0x2be03]        # 0x433fad
  4081aa:	mov    rsi,r8
  4081ad:	mov    QWORD PTR [rsp+0x38],0x0
  4081b6:	mov    rbx,r8
  4081b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4081bb:	mov    r9,QWORD PTR [rip+0x3563e]        # 0x43d800
  4081c2:	lea    rcx,[rsp+0x38]
  4081c7:	mov    QWORD PTR [rsp+0x20],0x0
  4081d0:	cmove  rbx,rax
  4081d4:	mov    r8d,0x2
  4081da:	mov    rdx,rbx
  4081dd:	call   0x422188
  4081e2:	test   eax,eax
  4081e4:	mov    esi,eax
  4081e6:	js     0x408201
  4081e8:	mov    rax,QWORD PTR [rip+0x35731]        # 0x43d920
  4081ef:	mov    rdx,QWORD PTR [rsp+0x38]
  4081f4:	mov    QWORD PTR [rax],rdx
  4081f7:	xor    eax,eax
  4081f9:	sub    rsp,0xffffffffffffff80
  4081fd:	pop    rbx
  4081fe:	pop    rsi
  4081ff:	pop    rdi
  408200:	ret    
  408201:	lea    rdi,[rsp+0x40]
  408206:	xor    eax,eax
  408208:	mov    ecx,0x8
  40820d:	mov    r8d,0x40
  408213:	rep stos QWORD PTR es:[rdi],rax
  408216:	lea    rdi,[rsp+0x40]
  40821b:	mov    ecx,esi
  40821d:	mov    rdx,rdi
  408220:	call   0x422570
  408225:	lea    r8,[rip+0x2bd8c]        # 0x433fb8
  40822c:	mov    QWORD PTR [rsp+0x20],rdi
  408231:	mov    r9,rbx
  408234:	mov    edx,0x10
  408239:	xor    ecx,ecx
  40823b:	call   0x4226c0
  408240:	mov    eax,esi
  408242:	jmp    0x4081f9
  408244:	xchg   ax,ax
  408246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408250:	push   rbx
  408251:	sub    rsp,0x20
  408255:	mov    rcx,QWORD PTR [rip+0x3b484]        # 0x4436e0
  40825c:	mov    rbx,r8
  40825f:	call   0x422770
  408264:	mov    rcx,rbx
  408267:	call   0x422578
  40826c:	mov    QWORD PTR [rip+0x3b46d],rax        # 0x4436e0
  408273:	xor    eax,eax
  408275:	add    rsp,0x20
  408279:	pop    rbx
  40827a:	ret    
  40827b:	nop    DWORD PTR [rax+rax*1+0x0]
  408280:	push   rbx
  408281:	sub    rsp,0x20
  408285:	mov    rcx,QWORD PTR [rip+0x3b44c]        # 0x4436d8
  40828c:	mov    rbx,r8
  40828f:	call   0x422770
  408294:	mov    rcx,rbx
  408297:	call   0x422578
  40829c:	mov    QWORD PTR [rip+0x3b435],rax        # 0x4436d8
  4082a3:	xor    eax,eax
  4082a5:	add    rsp,0x20
  4082a9:	pop    rbx
  4082aa:	ret    
  4082ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4082b0:	sub    rsp,0x38
  4082b4:	mov    QWORD PTR [rsp+0x58],r9
  4082b9:	lea    r9,[rsp+0x58]
  4082be:	mov    QWORD PTR [rsp+0x28],r9
  4082c3:	call   0x427320
  4082c8:	add    rsp,0x38
  4082cc:	ret    
  4082cd:	nop    DWORD PTR [rax]
  4082d0:	push   r15
  4082d2:	push   r14
  4082d4:	push   r13
  4082d6:	push   r12
  4082d8:	push   rbp
  4082d9:	push   rdi
  4082da:	push   rsi
  4082db:	push   rbx
  4082dc:	sub    rsp,0x468
  4082e3:	xor    edi,edi
  4082e5:	mov    r12,rcx
  4082e8:	lea    rcx,[rip+0x2bcf9]        # 0x433fe8
  4082ef:	mov    rsi,rdx
  4082f2:	mov    rbp,r8
  4082f5:	lea    r14,[rsp+0x50]
  4082fa:	call   0x42fb80
  4082ff:	lea    rcx,[rip+0x2bcf1]        # 0x433ff7
  408306:	mov    rbx,rax
  408309:	mov    QWORD PTR [rsp+0x50],rax
  40830e:	mov    r15,rbx
  408311:	call   0x42fb80
  408316:	mov    rdx,QWORD PTR [rip+0x354e3]        # 0x43d800
  40831d:	mov    QWORD PTR [rsp+0x58],rax
  408322:	lea    rax,[rip+0x2bcd7]        # 0x434000
  408329:	mov    QWORD PTR [rsp+0x60],rax
  40832e:	mov    eax,0xffffffff
  408333:	mov    QWORD PTR [rsp+0x48],rdx
  408338:	mov    r13,rdx
  40833b:	test   r15,r15
  40833e:	je     0x408417
  408344:	test   rsi,rsi
  408347:	je     0x4083c0
  408349:	cmp    edi,0x1
  40834c:	je     0x408440
  408352:	lea    rbx,[rsp+0x70]
  408357:	lea    rax,[rip+0x2bc80]        # 0x433fde
  40835e:	lea    r8,[rip+0x2bcf5]        # 0x43405a
  408365:	mov    r9,r15
  408368:	mov    edx,0x3e8
  40836d:	mov    QWORD PTR [rsp+0x30],r12
  408372:	mov    rcx,rbx
  408375:	mov    QWORD PTR [rsp+0x28],rsi
  40837a:	mov    QWORD PTR [rsp+0x20],rax
  40837f:	call   0x4082b0
  408384:	mov    QWORD PTR [rsp+0x20],0x0
  40838d:	mov    r9,r13
  408390:	mov    r8d,0x1
  408396:	mov    rdx,rbx
  408399:	mov    rcx,rbp
  40839c:	call   0x422188
  4083a1:	test   eax,eax
  4083a3:	js     0x4084a5
  4083a9:	add    rsp,0x468
  4083b0:	pop    rbx
  4083b1:	pop    rsi
  4083b2:	pop    rdi
  4083b3:	pop    rbp
  4083b4:	pop    r12
  4083b6:	pop    r13
  4083b8:	pop    r14
  4083ba:	pop    r15
  4083bc:	ret    
  4083bd:	nop    DWORD PTR [rax]
  4083c0:	cmp    edi,0x1
  4083c3:	lea    rax,[rip+0x2bc14]        # 0x433fde
  4083ca:	lea    rbx,[rsp+0x70]
  4083cf:	je     0x408499
  4083d5:	lea    r8,[rip+0x2bc6d]        # 0x434049
  4083dc:	mov    r9,r15
  4083df:	mov    edx,0x3e8
  4083e4:	mov    rcx,rbx
  4083e7:	mov    QWORD PTR [rsp+0x28],r12
  4083ec:	mov    QWORD PTR [rsp+0x20],rax
  4083f1:	call   0x4082b0
  4083f6:	mov    r9,QWORD PTR [rip+0x35403]        # 0x43d800
  4083fd:	mov    QWORD PTR [rsp+0x20],0x0
  408406:	mov    r8d,0x1
  40840c:	mov    rdx,rbx
  40840f:	mov    rcx,rbp
  408412:	call   0x422188
  408417:	mov    edx,eax
  408419:	add    edi,0x1
  40841c:	add    r14,0x8
  408420:	shr    edx,0x1f
  408423:	test   dl,dl
  408425:	je     0x4083a9
  408427:	cmp    edi,0x2
  40842a:	ja     0x4083a9
  408430:	mov    r15,QWORD PTR [r14]
  408433:	jmp    0x40833b
  408438:	nop    DWORD PTR [rax+rax*1+0x0]
  408440:	lea    rbx,[rsp+0x70]
  408445:	lea    rax,[rip+0x2bb93]        # 0x433fdf
  40844c:	lea    r8,[rip+0x2bc07]        # 0x43405a
  408453:	mov    r9,r15
  408456:	mov    edx,0x3e8
  40845b:	mov    QWORD PTR [rsp+0x30],r12
  408460:	mov    rcx,rbx
  408463:	mov    QWORD PTR [rsp+0x28],rsi
  408468:	mov    QWORD PTR [rsp+0x20],rax
  40846d:	call   0x4082b0
  408472:	mov    r9,QWORD PTR [rsp+0x48]
  408477:	mov    QWORD PTR [rsp+0x20],0x0
  408480:	mov    r8d,0x1
  408486:	mov    rdx,rbx
  408489:	mov    rcx,rbp
  40848c:	call   0x422188
  408491:	test   eax,eax
  408493:	jns    0x4083a9
  408499:	lea    rax,[rip+0x2bb3f]        # 0x433fdf
  4084a0:	jmp    0x4083d5
  4084a5:	lea    rax,[rip+0x2bb32]        # 0x433fde
  4084ac:	jmp    0x4083d5
  4084b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4084b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084c0:	sub    rsp,0x38
  4084c4:	mov    QWORD PTR [rsp+0x50],r8
  4084c9:	lea    r8,[rsp+0x50]
  4084ce:	mov    QWORD PTR [rsp+0x58],r9
  4084d3:	mov    QWORD PTR [rsp+0x28],r8
  4084d8:	call   0x427290
  4084dd:	add    rsp,0x38
  4084e1:	ret    
  4084e2:	nop    DWORD PTR [rax+0x0]
  4084e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084f0:	push   r12
  4084f2:	push   rbp
  4084f3:	push   rdi
  4084f4:	push   rsi
  4084f5:	push   rbx
  4084f6:	sub    rsp,0x40
  4084fa:	mov    eax,DWORD PTR [rcx+0x108]
  408500:	mov    edx,0x14
  408505:	mov    rbx,rcx
  408508:	mov    rcx,QWORD PTR [rcx+0x100]
  40850f:	mov    rsi,r8
  408512:	lea    r8,[rbx+0x108]
  408519:	lea    r9d,[rax+0x1]
  40851d:	call   0x407950
  408522:	movsxd rdx,DWORD PTR [rbx+0x108]
  408529:	mov    QWORD PTR [rbx+0x100],rax
  408530:	mov    rcx,rsi
  408533:	lea    rdx,[rdx+rdx*4]
  408537:	lea    rbx,[rax+rdx*4-0x14]
  40853c:	lea    rdx,[rip+0x2bb2b]        # 0x43406e
  408543:	lea    r12,[rbx+0x10]
  408547:	lea    rbp,[rbx+0xc]
  40854b:	lea    rdi,[rbx+0x8]
  40854f:	mov    QWORD PTR [rsp+0x20],r12
  408554:	mov    r9,rbp
  408557:	mov    r8,rdi
  40855a:	call   0x4084c0
  40855f:	mov    edx,eax
  408561:	and    edx,0xfffffffd
  408564:	cmp    edx,0x1
  408567:	jne    0x408573
  408569:	cmp    DWORD PTR [rbx+0x8],0xffffffff
  40856d:	je     0x408630
  408573:	lea    rdx,[rip+0x2bafd]        # 0x434077
  40857a:	lea    r9,[rbx+0x4]
  40857e:	mov    QWORD PTR [rsp+0x30],r12
  408583:	mov    QWORD PTR [rsp+0x28],rbp
  408588:	mov    QWORD PTR [rsp+0x20],rdi
  40858d:	mov    r8,rbx
  408590:	mov    rcx,rsi
  408593:	call   0x4084c0
  408598:	lea    edx,[rax-0x3]
  40859b:	and    edx,0xfffffffd
  40859e:	jne    0x4086c2
  4085a4:	cmp    eax,0x5
  4085a7:	je     0x4085b7
  4085a9:	mov    DWORD PTR [rbx+0x10],0xffffffff
  4085b0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4085b7:	mov    r9d,DWORD PTR [rbx]
  4085ba:	test   r9d,r9d
  4085bd:	js     0x408652
  4085c3:	mov    rax,QWORD PTR [rip+0x352b6]        # 0x43d880
  4085ca:	cmp    r9d,DWORD PTR [rax]
  4085cd:	jge    0x408652
  4085d3:	mov    eax,DWORD PTR [rbx+0x4]
  4085d6:	test   eax,eax
  4085d8:	js     0x408694
  4085de:	mov    rcx,QWORD PTR [rip+0x351fb]        # 0x43d7e0
  4085e5:	movsxd rdx,r9d
  4085e8:	mov    rcx,QWORD PTR [rcx]
  4085eb:	mov    rdx,QWORD PTR [rcx+rdx*8]
  4085ef:	cmp    eax,DWORD PTR [rdx+0x48]
  4085f2:	jge    0x408694
  4085f8:	mov    rcx,QWORD PTR [rdx]
  4085fb:	movsxd rdx,eax
  4085fe:	mov    rcx,QWORD PTR [rcx+0x30]
  408602:	mov    rdx,QWORD PTR [rcx+rdx*8]
  408606:	mov    rcx,QWORD PTR [rdx+0x8]
  40860a:	cmp    DWORD PTR [rcx+0xc],0x1
  40860e:	jne    0x4086b5
  408614:	mov    edx,DWORD PTR [rbx+0x8]
  408617:	test   edx,edx
  408619:	js     0x40866f
  40861b:	cmp    edx,DWORD PTR [rcx+0x1d4]
  408621:	jge    0x40866f
  408623:	xor    eax,eax
  408625:	add    rsp,0x40
  408629:	pop    rbx
  40862a:	pop    rsi
  40862b:	pop    rdi
  40862c:	pop    rbp
  40862d:	pop    r12
  40862f:	ret    
  408630:	cmp    eax,0x1
  408633:	mov    DWORD PTR [rbx+0x4],0xffffffff
  40863a:	mov    DWORD PTR [rbx],0xffffffff
  408640:	jne    0x408623
  408642:	mov    DWORD PTR [rbx+0x10],0xffffffff
  408649:	mov    DWORD PTR [rbx+0xc],0xffffffff
  408650:	jmp    0x408623
  408652:	lea    r8,[rip+0x2ba7f]        # 0x4340d8
  408659:	xor    ecx,ecx
  40865b:	mov    edx,0x8
  408660:	call   0x4226c0
  408665:	mov    ecx,0x1
  40866a:	call   0x401cb0
  40866f:	lea    r8,[rip+0x2baf2]        # 0x434168
  408676:	mov    DWORD PTR [rsp+0x28],edx
  40867a:	xor    ecx,ecx
  40867c:	mov    DWORD PTR [rsp+0x20],eax
  408680:	mov    edx,0x8
  408685:	call   0x4226c0
  40868a:	mov    ecx,0x1
  40868f:	call   0x401cb0
  408694:	lea    r8,[rip+0x2ba65]        # 0x434100
  40869b:	mov    DWORD PTR [rsp+0x20],eax
  40869f:	xor    ecx,ecx
  4086a1:	mov    edx,0x8
  4086a6:	call   0x4226c0
  4086ab:	mov    ecx,0x1
  4086b0:	call   0x401cb0
  4086b5:	mov    DWORD PTR [rsp+0x20],eax
  4086b9:	lea    r8,[rip+0x2ba78]        # 0x434138
  4086c0:	jmp    0x40869f
  4086c2:	lea    r8,[rip+0x2b9bf]        # 0x434088
  4086c9:	xor    ecx,ecx
  4086cb:	mov    edx,0x8
  4086d0:	call   0x4226c0
  4086d5:	mov    ecx,0x1
  4086da:	call   0x401cb0
  4086df:	nop
  4086e0:	push   rsi
  4086e1:	push   rbx
  4086e2:	sub    rsp,0x448
  4086e9:	mov    r8d,0x1
  4086ef:	lea    rsi,[rsp+0x28]
  4086f4:	mov    rdx,rcx
  4086f7:	mov    rbx,rcx
  4086fa:	mov    QWORD PTR [rsp+0x28],0x0
  408703:	mov    QWORD PTR [rsp+0x30],0x0
  40870c:	mov    rcx,rsi
  40870f:	call   0x422190
  408714:	test   eax,eax
  408716:	js     0x40878e
  408718:	lea    rcx,[rsp+0x30]
  40871d:	call   0x422180
  408722:	test   eax,eax
  408724:	js     0x4087ac
  40872a:	lea    rbx,[rsp+0x40]
  40872f:	jmp    0x40873e
  408731:	mov    rcx,QWORD PTR [rsp+0x30]
  408736:	mov    rdx,rbx
  408739:	call   0x422148
  40873e:	mov    rcx,QWORD PTR [rsp+0x28]
  408743:	mov    r8d,0x400
  408749:	mov    rdx,rbx
  40874c:	call   0x422168
  408751:	test   eax,eax
  408753:	mov    r8d,eax
  408756:	jg     0x408731
  408758:	mov    rcx,QWORD PTR [rsp+0x30]
  40875d:	xor    edx,edx
  40875f:	call   0x422150
  408764:	mov    rcx,rsi
  408767:	call   0x4221b0
  40876c:	mov    rcx,QWORD PTR [rsp+0x30]
  408771:	lea    rdx,[rsp+0x38]
  408776:	call   0x4221b8
  40877b:	test   eax,eax
  40877d:	js     0x4087a8
  40877f:	mov    rax,QWORD PTR [rsp+0x38]
  408784:	add    rsp,0x448
  40878b:	pop    rbx
  40878c:	pop    rsi
  40878d:	ret    
  40878e:	lea    r8,[rip+0x2b9fd]        # 0x434192
  408795:	mov    r9,rbx
  408798:	mov    edx,0x10
  40879d:	xor    ecx,ecx
  40879f:	call   0x4226c0
  4087a4:	xor    eax,eax
  4087a6:	jmp    0x408784
  4087a8:	xor    eax,eax
  4087aa:	jmp    0x408784
  4087ac:	mov    rcx,rsi
  4087af:	call   0x4221b0
  4087b4:	xor    eax,eax
  4087b6:	jmp    0x408784
  4087b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4087c0:	push   rbp
  4087c1:	push   rdi
  4087c2:	push   rsi
  4087c3:	push   rbx
  4087c4:	sub    rsp,0x28
  4087c8:	mov    rcx,r8
  4087cb:	call   0x4086e0
  4087d0:	test   rax,rax
  4087d3:	mov    rdi,rax
  4087d6:	je     0x408850
  4087d8:	mov    rbx,QWORD PTR [rip+0x35091]        # 0x43d870
  4087df:	mov    rsi,QWORD PTR [rip+0x34faa]        # 0x43d790
  4087e6:	mov    edx,0x8
  4087eb:	mov    eax,DWORD PTR [rbx]
  4087ed:	mov    rcx,QWORD PTR [rsi]
  4087f0:	mov    r8,rbx
  4087f3:	lea    r9d,[rax+0x1]
  4087f7:	call   0x407950
  4087fc:	movsxd rdx,DWORD PTR [rbx]
  4087ff:	mov    ecx,0x40
  408804:	mov    QWORD PTR [rsi],rax
  408807:	lea    rbp,[rax+rdx*8-0x8]
  40880c:	call   0x422670
  408811:	test   rax,rax
  408814:	mov    QWORD PTR [rbp+0x0],rax
  408818:	je     0x408857
  40881a:	movsxd rcx,DWORD PTR [rbx]
  40881d:	mov    rax,QWORD PTR [rsi]
  408820:	mov    DWORD PTR [rip+0x39872],0x1        # 0x44209c
  40882a:	mov    rax,QWORD PTR [rax+rcx*8-0x8]
  40882f:	mov    rdx,rcx
  408832:	sub    edx,0x1
  408835:	mov    DWORD PTR [rax],edx
  408837:	mov    QWORD PTR [rax+0x8],rdi
  40883b:	xor    eax,eax
  40883d:	add    rsp,0x28
  408841:	pop    rbx
  408842:	pop    rsi
  408843:	pop    rdi
  408844:	pop    rbp
  408845:	ret    
  408846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408850:	mov    eax,0xffffffea
  408855:	jmp    0x40883d
  408857:	mov    eax,0xfffffff4
  40885c:	jmp    0x40883d
  40885e:	xchg   ax,ax
  408860:	sub    rsp,0x38
  408864:	mov    QWORD PTR [rsp+0x50],r8
  408869:	lea    r8,[rsp+0x50]
  40886e:	mov    QWORD PTR [rsp+0x58],r9
  408873:	mov    QWORD PTR [rsp+0x28],r8
  408878:	call   0x424060
  40887d:	add    rsp,0x38
  408881:	ret    
  408882:	nop    DWORD PTR [rax+0x0]
  408886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408890:	push   r12
  408892:	push   rbp
  408893:	push   rdi
  408894:	push   rsi
  408895:	push   rbx
  408896:	sub    rsp,0x20
  40889a:	lea    rbp,[rip+0x2f21f]        # 0x437ac0
  4088a1:	mov    r12,rcx
  4088a4:	mov    eax,DWORD PTR [rbp+0x8]
  4088a7:	mov    rdi,r12
  4088aa:	add    rdi,QWORD PTR [rbp+0x10]
  4088ae:	test   ah,0x80
  4088b1:	je     0x408993
  4088b7:	mov    edx,DWORD PTR [rdi+0x8]
  4088ba:	xor    ebx,ebx
  4088bc:	xor    esi,esi
  4088be:	test   edx,edx
  4088c0:	jg     0x4088d0
  4088c2:	jmp    0x4088fc
  4088c4:	add    esi,0x1
  4088c7:	add    rbx,0x10
  4088cb:	cmp    DWORD PTR [rdi+0x8],esi
  4088ce:	jle    0x4088fc
  4088d0:	mov    rcx,rbx
  4088d3:	add    rcx,QWORD PTR [rdi]
  4088d6:	call   0x422768
  4088db:	test   BYTE PTR [rbp+0x8],0x8
  4088df:	je     0x4088c4
  4088e1:	mov    rax,rbx
  4088e4:	add    rax,QWORD PTR [rdi]
  4088e7:	add    esi,0x1
  4088ea:	add    rbx,0x10
  4088ee:	lea    rcx,[rax+0x8]
  4088f2:	call   0x422768
  4088f7:	cmp    DWORD PTR [rdi+0x8],esi
  4088fa:	jg     0x4088d0
  4088fc:	mov    rcx,rdi
  4088ff:	call   0x422768
  408904:	mov    DWORD PTR [rdi+0x8],0x0
  40890b:	add    rbp,0x28
  40890f:	cmp    QWORD PTR [rbp+0x0],0x0
  408914:	jne    0x4088a4
  408916:	mov    eax,DWORD PTR [r12+0xf8]
  40891e:	xor    esi,esi
  408920:	xor    ebx,ebx
  408922:	test   eax,eax
  408924:	jle    0x408955
  408926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408930:	mov    rcx,rsi
  408933:	add    rcx,QWORD PTR [r12+0xf0]
  40893b:	add    ebx,0x1
  40893e:	add    rsi,0x20
  408942:	add    rcx,0x18
  408946:	call   0x422768
  40894b:	cmp    DWORD PTR [r12+0xf8],ebx
  408953:	jg     0x408930
  408955:	lea    rcx,[r12+0xf0]
  40895d:	call   0x422768
  408962:	lea    rcx,[r12+0x100]
  40896a:	call   0x422768
  40896f:	lea    rcx,[r12+0x160]
  408977:	call   0x422768
  40897c:	lea    rcx,[r12+0x118]
  408984:	add    rsp,0x20
  408988:	pop    rbx
  408989:	pop    rsi
  40898a:	pop    rdi
  40898b:	pop    rbp
  40898c:	pop    r12
  40898e:	jmp    0x422768
  408993:	and    eax,0x4008
  408998:	cmp    eax,0x4008
  40899d:	jne    0x40890b
  4089a3:	mov    rcx,rdi
  4089a6:	call   0x422768
  4089ab:	jmp    0x40890b
  4089b0:	push   rsi
  4089b1:	push   rbx
  4089b2:	sub    rsp,0x28
  4089b6:	mov    edx,0x18
  4089bb:	mov    rsi,r8
  4089be:	lea    r8,[rip+0x2b7eb]        # 0x4341b0
  4089c5:	mov    rbx,rcx
  4089c8:	xor    ecx,ecx
  4089ca:	call   0x4226c0
  4089cf:	lea    rdx,[rip+0x2b805]        # 0x4341db
  4089d6:	mov    r8,rsi
  4089d9:	mov    rcx,rbx
  4089dc:	add    rsp,0x28
  4089e0:	pop    rbx
  4089e1:	pop    rsi
  4089e2:	jmp    0x403e80
  4089e7:	nop    WORD PTR [rax+rax*1+0x0]
  4089f0:	push   rsi
  4089f1:	push   rbx
  4089f2:	sub    rsp,0x28
  4089f6:	mov    edx,0x18
  4089fb:	mov    rsi,r8
  4089fe:	lea    r8,[rip+0x2b7e3]        # 0x4341e8
  408a05:	mov    rbx,rcx
  408a08:	xor    ecx,ecx
  408a0a:	call   0x4226c0
  408a0f:	lea    rdx,[rip+0x2b7fc]        # 0x434212
  408a16:	mov    r8,rsi
  408a19:	mov    rcx,rbx
  408a1c:	add    rsp,0x28
  408a20:	pop    rbx
  408a21:	pop    rsi
  408a22:	jmp    0x403e80
  408a27:	nop    WORD PTR [rax+rax*1+0x0]
  408a30:	push   r13
  408a32:	push   r12
  408a34:	push   rbp
  408a35:	push   rdi
  408a36:	push   rsi
  408a37:	push   rbx
  408a38:	sub    rsp,0x28
  408a3c:	lea    rdi,[rip+0x2b805]        # 0x434248
  408a43:	mov    rbx,rcx
  408a46:	mov    rsi,r8
  408a49:	mov    ecx,0x4
  408a4e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408a50:	mov    rbp,r8
  408a53:	jne    0x408b10
  408a59:	lea    r12,[rip+0x2b7ed]        # 0x43424d
  408a60:	add    rbp,0x4
  408a64:	mov    ecx,0x4
  408a69:	mov    rsi,rbp
  408a6c:	mov    rdi,r12
  408a6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408a71:	je     0x4091d1
  408a77:	lea    r12,[rip+0x2b9c9]        # 0x434447
  408a7e:	mov    ecx,0x5
  408a83:	mov    rsi,rbp
  408a86:	mov    rdi,r12
  408a89:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408a8b:	je     0x409412
  408a91:	lea    r13,[rip+0x2b859]        # 0x4342f1
  408a98:	mov    ecx,0x4
  408a9d:	mov    rsi,rbp
  408aa0:	xor    r12d,r12d
  408aa3:	mov    rdi,r13
  408aa6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408aa8:	jne    0x408b7f
  408aae:	lea    r9,[rip+0x2f00b]        # 0x437ac0
  408ab5:	lea    r8,[rip+0x2b839]        # 0x4342f5
  408abc:	lea    rdx,[rip+0x2b4a1]        # 0x433f64
  408ac3:	mov    rcx,rbx
  408ac6:	call   0x402ef0
  408acb:	lea    r9,[rip+0x2efee]        # 0x437ac0
  408ad2:	lea    r8,[rip+0x2b827]        # 0x434300
  408ad9:	lea    rdx,[rip+0x2b47c]        # 0x433f5c
  408ae0:	mov    rcx,rbx
  408ae3:	call   0x402ef0
  408ae8:	lea    r9,[rip+0x2efd1]        # 0x437ac0
  408aef:	lea    rdx,[rip+0x2b80e]        # 0x434304
  408af6:	mov    r8,r13
  408af9:	mov    rcx,rbx
  408afc:	call   0x402ef0
  408b01:	jmp    0x408e45
  408b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b10:	lea    rdi,[rip+0x2b73a]        # 0x434251
  408b17:	mov    ecx,0x5
  408b1c:	mov    rsi,r8
  408b1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408b21:	jne    0x408cc0
  408b27:	add    rbp,0x5
  408b2b:	mov    r12d,0x1
  408b31:	lea    r13,[rip+0x2b715]        # 0x43424d
  408b38:	mov    ecx,0x4
  408b3d:	mov    rsi,rbp
  408b40:	mov    rdi,r13
  408b43:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408b45:	je     0x409524
  408b4b:	lea    r13,[rip+0x2b8f5]        # 0x434447
  408b52:	mov    ecx,0x5
  408b57:	mov    rsi,rbp
  408b5a:	mov    rdi,r13
  408b5d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408b5f:	je     0x40946a
  408b65:	lea    r13,[rip+0x2b785]        # 0x4342f1
  408b6c:	mov    ecx,0x4
  408b71:	mov    rsi,rbp
  408b74:	mov    rdi,r13
  408b77:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408b79:	je     0x408de9
  408b7f:	lea    r8,[rip+0x2b7ab]        # 0x434331
  408b86:	mov    ecx,0x2
  408b8b:	mov    rsi,rbp
  408b8e:	mov    rdi,r8
  408b91:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408b93:	jne    0x40934f
  408b99:	lea    r9,[rip+0x2ef20]        # 0x437ac0
  408ba0:	lea    rdx,[rip+0x2b75d]        # 0x434304
  408ba7:	mov    rcx,rbx
  408baa:	lea    rdi,[rip+0x2b785]        # 0x434336
  408bb1:	mov    rsi,rbp
  408bb4:	call   0x402ef0
  408bb9:	lea    rax,[rip+0x2b668]        # 0x434228
  408bc0:	lea    r8,[rip+0x2b659]        # 0x434220
  408bc7:	test   r12d,r12d
  408bca:	lea    rdx,[rip+0x2b763]        # 0x434334
  408bd1:	lea    r9,[rip+0x2eee8]        # 0x437ac0
  408bd8:	mov    rcx,rbx
  408bdb:	cmovne r8,rax
  408bdf:	call   0x402ef0
  408be4:	mov    ecx,0x4
  408be9:	lea    r8,[rip+0x2b648]        # 0x434238
  408bf0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408bf2:	seta   dl
  408bf5:	setb   al
  408bf8:	cmp    dl,al
  408bfa:	jne    0x408dc0
  408c00:	lea    r9,[rip+0x2eeb9]        # 0x437ac0
  408c07:	lea    rdx,[rip+0x2b72d]        # 0x43433b
  408c0e:	mov    rcx,rbx
  408c11:	call   0x402ef0
  408c16:	lea    rax,[rip+0x2d353]        # 0x435f70
  408c1d:	lea    r9,[rip+0x2ee9c]        # 0x437ac0
  408c24:	lea    rdx,[rip+0x2b718]        # 0x434343
  408c2b:	mov    rcx,rbx
  408c2e:	mov    r8,QWORD PTR [rax+r12*8]
  408c32:	call   0x402ef0
  408c37:	lea    r9,[rip+0x2ee82]        # 0x437ac0
  408c3e:	lea    r8,[rip+0x2b6e6]        # 0x43432b
  408c45:	lea    rdx,[rip+0x2b655]        # 0x4342a1
  408c4c:	mov    rcx,rbx
  408c4f:	call   0x402ef0
  408c54:	lea    r9,[rip+0x2ee65]        # 0x437ac0
  408c5b:	lea    r8,[rip+0x2b642]        # 0x4342a4
  408c62:	lea    rdx,[rip+0x2b63d]        # 0x4342a6
  408c69:	mov    rcx,rbx
  408c6c:	call   0x402ef0
  408c71:	mov    rax,QWORD PTR [rbx]
  408c74:	mov    r8d,0x10
  408c7a:	lea    rcx,[rax+0x20]
  408c7e:	mov    rax,QWORD PTR [rip+0x34a4b]        # 0x43d6d0
  408c85:	mov    rdx,QWORD PTR [rax]
  408c88:	call   0x422828
  408c8d:	mov    rax,QWORD PTR [rip+0x34b0c]        # 0x43d7a0
  408c94:	mov    rcx,QWORD PTR [rbx]
  408c97:	mov    r8d,0x10
  408c9d:	mov    rdx,QWORD PTR [rax]
  408ca0:	add    rcx,0x28
  408ca4:	call   0x422828
  408ca9:	xor    eax,eax
  408cab:	add    rsp,0x28
  408caf:	pop    rbx
  408cb0:	pop    rsi
  408cb1:	pop    rdi
  408cb2:	pop    rbp
  408cb3:	pop    r12
  408cb5:	pop    r13
  408cb7:	ret    
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	lea    rdi,[rip+0x2b590]        # 0x434257
  408cc7:	mov    ecx,0x5
  408ccc:	mov    rsi,r8
  408ccf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408cd1:	je     0x408dda
  408cd7:	mov    rax,QWORD PTR [rip+0x34ba2]        # 0x43d880
  408cde:	mov    eax,DWORD PTR [rax]
  408ce0:	test   eax,eax
  408ce2:	jle    0x408d78
  408ce8:	mov    rdx,QWORD PTR [rip+0x34af1]        # 0x43d7e0
  408cef:	sub    eax,0x1
  408cf2:	mov    r9,QWORD PTR [rdx]
  408cf5:	lea    r11,[r9+rax*8+0x8]
  408cfa:	nop    WORD PTR [rax+rax*1+0x0]
  408d00:	mov    rdx,QWORD PTR [r9]
  408d03:	mov    eax,DWORD PTR [rdx+0x48]
  408d06:	test   eax,eax
  408d08:	jle    0x408d6f
  408d0a:	mov    rdx,QWORD PTR [rdx]
  408d0d:	sub    eax,0x1
  408d10:	mov    r10,QWORD PTR [rdx+0x30]
  408d14:	lea    r8,[r10+rax*8+0x8]
  408d19:	nop    DWORD PTR [rax+0x0]
  408d20:	mov    rax,QWORD PTR [r10]
  408d23:	mov    rax,QWORD PTR [rax+0x8]
  408d27:	mov    edx,DWORD PTR [rax+0xc]
  408d2a:	test   edx,edx
  408d2c:	jne    0x408d66
  408d2e:	mov    ecx,DWORD PTR [rax+0x84]
  408d34:	test   ecx,ecx
  408d36:	je     0x408d66
  408d38:	imul   eax,DWORD PTR [rax+0x88],0x3e8
  408d42:	cdq    
  408d43:	idiv   ecx
  408d45:	cmp    eax,0x61a8
  408d4a:	je     0x408f66
  408d50:	cmp    eax,0x5da8
  408d55:	je     0x40912b
  408d5b:	cmp    eax,0x7512
  408d60:	je     0x40912b
  408d66:	add    r10,0x8
  408d6a:	cmp    r10,r8
  408d6d:	jne    0x408d20
  408d6f:	add    r9,0x8
  408d73:	cmp    r9,r11
  408d76:	jne    0x408d00
  408d78:	lea    r8,[rip+0x2b5e1]        # 0x434360
  408d7f:	mov    edx,0x8
  408d84:	xor    ecx,ecx
  408d86:	call   0x4226c0
  408d8b:	lea    r8,[rip+0x2b60e]        # 0x4343a0
  408d92:	mov    edx,0x8
  408d97:	xor    ecx,ecx
  408d99:	call   0x4226c0
  408d9e:	lea    r8,[rip+0x2b633]        # 0x4343d8
  408da5:	xor    ecx,ecx
  408da7:	mov    edx,0x8
  408dac:	call   0x4226c0
  408db1:	mov    ecx,0x1
  408db6:	call   0x401cb0
  408dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	lea    r8,[rip+0x2b469]        # 0x434230
  408dc7:	lea    rax,[rip+0x2b472]        # 0x434240
  408dce:	test   r12d,r12d
  408dd1:	cmove  r8,rax
  408dd5:	jmp    0x408c00
  408dda:	add    rbp,0x5
  408dde:	mov    r12d,0x2
  408de4:	jmp    0x408b31
  408de9:	lea    r9,[rip+0x2ecd0]        # 0x437ac0
  408df0:	lea    r8,[rip+0x2b4fe]        # 0x4342f5
  408df7:	lea    rdx,[rip+0x2b166]        # 0x433f64
  408dfe:	mov    rcx,rbx
  408e01:	call   0x402ef0
  408e06:	lea    r9,[rip+0x2ecb3]        # 0x437ac0
  408e0d:	lea    r8,[rip+0x2b4ec]        # 0x434300
  408e14:	lea    rdx,[rip+0x2b141]        # 0x433f5c
  408e1b:	mov    rcx,rbx
  408e1e:	call   0x402ef0
  408e23:	lea    r9,[rip+0x2ec96]        # 0x437ac0
  408e2a:	lea    rdx,[rip+0x2b4d3]        # 0x434304
  408e31:	mov    r8,r13
  408e34:	mov    rcx,rbx
  408e37:	call   0x402ef0
  408e3c:	test   r12d,r12d
  408e3f:	jne    0x40916a
  408e45:	lea    r9,[rip+0x2ec74]        # 0x437ac0
  408e4c:	lea    r8,[rip+0x2b3cd]        # 0x434220
  408e53:	lea    rdx,[rip+0x2b4da]        # 0x434334
  408e5a:	mov    rcx,rbx
  408e5d:	call   0x402ef0
  408e62:	lea    r9,[rip+0x2ec57]        # 0x437ac0
  408e69:	lea    r8,[rip+0x2b593]        # 0x434403
  408e70:	lea    rdx,[rip+0x2b4cc]        # 0x434343
  408e77:	mov    rcx,rbx
  408e7a:	call   0x402ef0
  408e7f:	lea    r8,[rip+0x2b3ba]        # 0x434240
  408e86:	lea    r9,[rip+0x2ec33]        # 0x437ac0
  408e8d:	lea    rdx,[rip+0x2b4a7]        # 0x43433b
  408e94:	mov    rcx,rbx
  408e97:	call   0x402ef0
  408e9c:	lea    r8,[rip+0x2b37a]        # 0x43421d
  408ea3:	lea    rdx,[rip+0x2b3b3]        # 0x43425d
  408eaa:	xor    ecx,ecx
  408eac:	call   0x403e80
  408eb1:	lea    r8,[rip+0x2b44e]        # 0x434306
  408eb8:	lea    rdx,[rip+0x2b3a8]        # 0x434267
  408ebf:	xor    ecx,ecx
  408ec1:	call   0x403e80
  408ec6:	lea    r8,[rip+0x2b441]        # 0x43430e
  408ecd:	lea    rdx,[rip+0x2b397]        # 0x43426b
  408ed4:	xor    ecx,ecx
  408ed6:	call   0x403e80
  408edb:	lea    r8,[rip+0x2b3f7]        # 0x4342d9
  408ee2:	lea    rdx,[rip+0x2b38c]        # 0x434275
  408ee9:	xor    ecx,ecx
  408eeb:	call   0x403e80
  408ef0:	lea    r8,[rip+0x2b3e4]        # 0x4342db
  408ef7:	lea    rdx,[rip+0x2b388]        # 0x434286
  408efe:	xor    ecx,ecx
  408f00:	call   0x403e80
  408f05:	lea    r8,[rip+0x2b40a]        # 0x434316
  408f0c:	lea    rdx,[rip+0x2b39b]        # 0x4342ae
  408f13:	xor    ecx,ecx
  408f15:	call   0x403e80
  408f1a:	lea    r8,[rip+0x2b3fa]        # 0x43431b
  408f21:	lea    rdx,[rip+0x2b399]        # 0x4342c1
  408f28:	xor    ecx,ecx
  408f2a:	call   0x403e80
  408f2f:	lea    r8,[rip+0x2b3ee]        # 0x434324
  408f36:	lea    rdx,[rip+0x2b35a]        # 0x434297
  408f3d:	xor    ecx,ecx
  408f3f:	call   0x403e80
  408f44:	lea    r9,[rip+0x2eb75]        # 0x437ac0
  408f4b:	lea    r8,[rip+0x2b3d9]        # 0x43432b
  408f52:	lea    rdx,[rip+0x2b348]        # 0x4342a1
  408f59:	mov    rcx,rbx
  408f5c:	call   0x402ef0
  408f61:	jmp    0x408c71
  408f66:	lea    r9,[rip+0x2b4b8]        # 0x434425
  408f6d:	lea    r8,[rip+0x2b4b5]        # 0x434429
  408f74:	lea    r12,[rip+0x2b2d2]        # 0x43424d
  408f7b:	xor    ecx,ecx
  408f7d:	mov    edx,0x20
  408f82:	mov    rsi,rbp
  408f85:	call   0x4226c0
  408f8a:	mov    rdi,r12
  408f8d:	mov    ecx,0x4
  408f92:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408f94:	je     0x4091d1
  408f9a:	lea    r13,[rip+0x2b4a6]        # 0x434447
  408fa1:	mov    ecx,0x5
  408fa6:	mov    rsi,rbp
  408fa9:	xor    r12d,r12d
  408fac:	mov    rdi,r13
  408faf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408fb1:	jne    0x408b65
  408fb7:	lea    r9,[rip+0x2eb02]        # 0x437ac0
  408fbe:	lea    r8,[rip+0x2b330]        # 0x4342f5
  408fc5:	lea    rdx,[rip+0x2af98]        # 0x433f64
  408fcc:	mov    rcx,rbx
  408fcf:	call   0x402ef0
  408fd4:	lea    r9,[rip+0x2eae5]        # 0x437ac0
  408fdb:	lea    r8,[rip+0x2b43f]        # 0x434421
  408fe2:	lea    rdx,[rip+0x2af73]        # 0x433f5c
  408fe9:	mov    rcx,rbx
  408fec:	call   0x402ef0
  408ff1:	lea    r9,[rip+0x2eac8]        # 0x437ac0
  408ff8:	lea    rdx,[rip+0x2b305]        # 0x434304
  408fff:	mov    r8,r13
  409002:	mov    rcx,rbx
  409005:	call   0x402ef0
  40900a:	lea    r9,[rip+0x2eaaf]        # 0x437ac0
  409011:	lea    r8,[rip+0x2b3f6]        # 0x43440e
  409018:	lea    rdx,[rip+0x2b315]        # 0x434334
  40901f:	mov    rcx,rbx
  409022:	call   0x402ef0
  409027:	lea    r9,[rip+0x2ea92]        # 0x437ac0
  40902e:	lea    r8,[rip+0x2b3ce]        # 0x434403
  409035:	lea    rdx,[rip+0x2b307]        # 0x434343
  40903c:	mov    rcx,rbx
  40903f:	call   0x402ef0
  409044:	lea    r8,[rip+0x2b1f5]        # 0x434240
  40904b:	lea    r9,[rip+0x2ea6e]        # 0x437ac0
  409052:	lea    rdx,[rip+0x2b2e2]        # 0x43433b
  409059:	mov    rcx,rbx
  40905c:	call   0x402ef0
  409061:	lea    r8,[rip+0x2b1b5]        # 0x43421d
  409068:	lea    rdx,[rip+0x2b1ee]        # 0x43425d
  40906f:	xor    ecx,ecx
  409071:	call   0x403e80
  409076:	lea    r8,[rip+0x2b24c]        # 0x4342c9
  40907d:	lea    rdx,[rip+0x2b1e3]        # 0x434267
  409084:	xor    ecx,ecx
  409086:	call   0x403e80
  40908b:	lea    r8,[rip+0x2b23f]        # 0x4342d1
  409092:	lea    rdx,[rip+0x2b1d2]        # 0x43426b
  409099:	xor    ecx,ecx
  40909b:	call   0x403e80
  4090a0:	lea    r8,[rip+0x2b232]        # 0x4342d9
  4090a7:	lea    rdx,[rip+0x2b1c7]        # 0x434275
  4090ae:	xor    ecx,ecx
  4090b0:	call   0x403e80
  4090b5:	lea    r8,[rip+0x2b21f]        # 0x4342db
  4090bc:	lea    rdx,[rip+0x2b1c3]        # 0x434286
  4090c3:	xor    ecx,ecx
  4090c5:	call   0x403e80
  4090ca:	lea    r8,[rip+0x2b212]        # 0x4342e3
  4090d1:	lea    rdx,[rip+0x2b20d]        # 0x4342e5
  4090d8:	xor    ecx,ecx
  4090da:	call   0x403e80
  4090df:	lea    r8,[rip+0x2b1aa]        # 0x434290
  4090e6:	lea    rdx,[rip+0x2b1aa]        # 0x434297
  4090ed:	xor    ecx,ecx
  4090ef:	call   0x403e80
  4090f4:	lea    r9,[rip+0x2e9c5]        # 0x437ac0
  4090fb:	lea    r8,[rip+0x2b199]        # 0x43429b
  409102:	lea    rdx,[rip+0x2b198]        # 0x4342a1
  409109:	mov    rcx,rbx
  40910c:	call   0x402ef0
  409111:	lea    r8,[rip+0x2b191]        # 0x4342a9
  409118:	lea    rdx,[rip+0x2b18f]        # 0x4342ae
  40911f:	xor    ecx,ecx
  409121:	call   0x403e80
  409126:	jmp    0x408c71
  40912b:	lea    r9,[rip+0x2b310]        # 0x434442
  409132:	lea    r8,[rip+0x2b2f0]        # 0x434429
  409139:	lea    r12,[rip+0x2b10d]        # 0x43424d
  409140:	xor    ecx,ecx
  409142:	mov    edx,0x20
  409147:	mov    rsi,rbp
  40914a:	call   0x4226c0
  40914f:	mov    rdi,r12
  409152:	mov    ecx,0x4
  409157:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409159:	je     0x40936f
  40915f:	mov    r12d,0x1
  409165:	jmp    0x408b4b
  40916a:	lea    r9,[rip+0x2e94f]        # 0x437ac0
  409171:	lea    r8,[rip+0x2b0b0]        # 0x434228
  409178:	lea    rdx,[rip+0x2b1b5]        # 0x434334
  40917f:	mov    rcx,rbx
  409182:	call   0x402ef0
  409187:	lea    rax,[rip+0x2cde2]        # 0x435f70
  40918e:	lea    r9,[rip+0x2e92b]        # 0x437ac0
  409195:	lea    rdx,[rip+0x2b1a7]        # 0x434343
  40919c:	mov    rcx,rbx
  40919f:	mov    r8,QWORD PTR [rax+r12*8]
  4091a3:	call   0x402ef0
  4091a8:	lea    r8,[rip+0x2b091]        # 0x434240
  4091af:	lea    r9,[rip+0x2e90a]        # 0x437ac0
  4091b6:	lea    rdx,[rip+0x2b17e]        # 0x43433b
  4091bd:	mov    rcx,rbx
  4091c0:	call   0x402ef0
  4091c5:	lea    r8,[rip+0x2b04e]        # 0x43421a
  4091cc:	jmp    0x408ea3
  4091d1:	lea    r9,[rip+0x2e8e8]        # 0x437ac0
  4091d8:	lea    r8,[rip+0x2b237]        # 0x434416
  4091df:	lea    rdx,[rip+0x2ad7e]        # 0x433f64
  4091e6:	mov    rcx,rbx
  4091e9:	call   0x402ef0
  4091ee:	lea    r9,[rip+0x2e8cb]        # 0x437ac0
  4091f5:	lea    r8,[rip+0x2b225]        # 0x434421
  4091fc:	lea    rdx,[rip+0x2ad59]        # 0x433f5c
  409203:	mov    rcx,rbx
  409206:	call   0x402ef0
  40920b:	lea    r9,[rip+0x2e8ae]        # 0x437ac0
  409212:	lea    rdx,[rip+0x2b0eb]        # 0x434304
  409219:	mov    r8,r12
  40921c:	mov    rcx,rbx
  40921f:	call   0x402ef0
  409224:	lea    r9,[rip+0x2e895]        # 0x437ac0
  40922b:	lea    r8,[rip+0x2b1c9]        # 0x4343fb
  409232:	lea    rdx,[rip+0x2b0fb]        # 0x434334
  409239:	mov    rcx,rbx
  40923c:	call   0x402ef0
  409241:	lea    r8,[rip+0x2b1bb]        # 0x434403
  409248:	lea    r9,[rip+0x2e871]        # 0x437ac0
  40924f:	lea    rdx,[rip+0x2b0ed]        # 0x434343
  409256:	mov    rcx,rbx
  409259:	call   0x402ef0
  40925e:	lea    r8,[rip+0x2afb8]        # 0x43421d
  409265:	lea    rdx,[rip+0x2aff1]        # 0x43425d
  40926c:	xor    ecx,ecx
  40926e:	call   0x403e80
  409273:	lea    r8,[rip+0x2afe5]        # 0x43425f
  40927a:	lea    rdx,[rip+0x2afe6]        # 0x434267
  409281:	xor    ecx,ecx
  409283:	call   0x403e80
  409288:	lea    r8,[rip+0x2afd0]        # 0x43425f
  40928f:	lea    rdx,[rip+0x2afd5]        # 0x43426b
  409296:	xor    ecx,ecx
  409298:	call   0x403e80
  40929d:	lea    r8,[rip+0x2afbb]        # 0x43425f
  4092a4:	lea    rdx,[rip+0x2afca]        # 0x434275
  4092ab:	xor    ecx,ecx
  4092ad:	call   0x403e80
  4092b2:	lea    r8,[rip+0x2afc6]        # 0x43427f
  4092b9:	lea    rdx,[rip+0x2afc6]        # 0x434286
  4092c0:	xor    ecx,ecx
  4092c2:	call   0x403e80
  4092c7:	lea    r8,[rip+0x2afc2]        # 0x434290
  4092ce:	lea    rdx,[rip+0x2afc2]        # 0x434297
  4092d5:	xor    ecx,ecx
  4092d7:	call   0x403e80
  4092dc:	lea    r9,[rip+0x2e7dd]        # 0x437ac0
  4092e3:	lea    r8,[rip+0x2afb1]        # 0x43429b
  4092ea:	lea    rdx,[rip+0x2afb0]        # 0x4342a1
  4092f1:	mov    rcx,rbx
  4092f4:	call   0x402ef0
  4092f9:	lea    r9,[rip+0x2e7c0]        # 0x437ac0
  409300:	lea    r8,[rip+0x2af9d]        # 0x4342a4
  409307:	lea    rdx,[rip+0x2af98]        # 0x4342a6
  40930e:	mov    rcx,rbx
  409311:	call   0x402ef0
  409316:	lea    r8,[rip+0x2af8c]        # 0x4342a9
  40931d:	lea    rdx,[rip+0x2af8a]        # 0x4342ae
  409324:	xor    ecx,ecx
  409326:	call   0x403e80
  40932b:	lea    r8,[rip+0x2af87]        # 0x4342b9
  409332:	lea    rdx,[rip+0x2af88]        # 0x4342c1
  409339:	xor    ecx,ecx
  40933b:	call   0x403e80
  409340:	mov    DWORD PTR [rbx+0x140],0x3ee147ae
  40934a:	jmp    0x408c71
  40934f:	lea    r8,[rip+0x2afef]        # 0x434345
  409356:	mov    r9,rbp
  409359:	mov    edx,0x10
  40935e:	xor    ecx,ecx
  409360:	call   0x4226c0
  409365:	mov    eax,0xffffffea
  40936a:	jmp    0x408cab
  40936f:	lea    r9,[rip+0x2e74a]        # 0x437ac0
  409376:	lea    r8,[rip+0x2b099]        # 0x434416
  40937d:	lea    rdx,[rip+0x2abe0]        # 0x433f64
  409384:	mov    rcx,rbx
  409387:	call   0x402ef0
  40938c:	lea    r9,[rip+0x2e72d]        # 0x437ac0
  409393:	lea    r8,[rip+0x2b087]        # 0x434421
  40939a:	lea    rdx,[rip+0x2abbb]        # 0x433f5c
  4093a1:	mov    rcx,rbx
  4093a4:	call   0x402ef0
  4093a9:	lea    r9,[rip+0x2e710]        # 0x437ac0
  4093b0:	lea    rdx,[rip+0x2af4d]        # 0x434304
  4093b7:	mov    r8,r12
  4093ba:	mov    rcx,rbx
  4093bd:	mov    r12d,0x1
  4093c3:	call   0x402ef0
  4093c8:	lea    r9,[rip+0x2e6f1]        # 0x437ac0
  4093cf:	lea    r8,[rip+0x2b030]        # 0x434406
  4093d6:	lea    rdx,[rip+0x2af57]        # 0x434334
  4093dd:	mov    rcx,rbx
  4093e0:	call   0x402ef0
  4093e5:	lea    rax,[rip+0x2cb84]        # 0x435f70
  4093ec:	lea    r9,[rip+0x2e6cd]        # 0x437ac0
  4093f3:	lea    rdx,[rip+0x2af49]        # 0x434343
  4093fa:	mov    rcx,rbx
  4093fd:	mov    r8,QWORD PTR [rax+r12*8]
  409401:	call   0x402ef0
  409406:	lea    r8,[rip+0x2ae0d]        # 0x43421a
  40940d:	jmp    0x409265
  409412:	lea    r9,[rip+0x2e6a7]        # 0x437ac0
  409419:	lea    r8,[rip+0x2aed5]        # 0x4342f5
  409420:	lea    rdx,[rip+0x2ab3d]        # 0x433f64
  409427:	mov    rcx,rbx
  40942a:	call   0x402ef0
  40942f:	lea    r9,[rip+0x2e68a]        # 0x437ac0
  409436:	lea    r8,[rip+0x2afe4]        # 0x434421
  40943d:	lea    rdx,[rip+0x2ab18]        # 0x433f5c
  409444:	mov    rcx,rbx
  409447:	call   0x402ef0
  40944c:	lea    r9,[rip+0x2e66d]        # 0x437ac0
  409453:	lea    rdx,[rip+0x2aeaa]        # 0x434304
  40945a:	mov    r8,r12
  40945d:	mov    rcx,rbx
  409460:	call   0x402ef0
  409465:	jmp    0x40900a
  40946a:	lea    r9,[rip+0x2e64f]        # 0x437ac0
  409471:	lea    r8,[rip+0x2ae7d]        # 0x4342f5
  409478:	lea    rdx,[rip+0x2aae5]        # 0x433f64
  40947f:	mov    rcx,rbx
  409482:	call   0x402ef0
  409487:	lea    r9,[rip+0x2e632]        # 0x437ac0
  40948e:	lea    r8,[rip+0x2af8c]        # 0x434421
  409495:	lea    rdx,[rip+0x2aac0]        # 0x433f5c
  40949c:	mov    rcx,rbx
  40949f:	call   0x402ef0
  4094a4:	lea    r9,[rip+0x2e615]        # 0x437ac0
  4094ab:	lea    rdx,[rip+0x2ae52]        # 0x434304
  4094b2:	mov    r8,r13
  4094b5:	mov    rcx,rbx
  4094b8:	call   0x402ef0
  4094bd:	lea    r9,[rip+0x2e5fc]        # 0x437ac0
  4094c4:	lea    r8,[rip+0x2af81]        # 0x43444c
  4094cb:	lea    rdx,[rip+0x2ae62]        # 0x434334
  4094d2:	mov    rcx,rbx
  4094d5:	call   0x402ef0
  4094da:	lea    rax,[rip+0x2ca8f]        # 0x435f70
  4094e1:	lea    r9,[rip+0x2e5d8]        # 0x437ac0
  4094e8:	lea    rdx,[rip+0x2ae54]        # 0x434343
  4094ef:	mov    rcx,rbx
  4094f2:	mov    r8,QWORD PTR [rax+r12*8]
  4094f6:	call   0x402ef0
  4094fb:	lea    r8,[rip+0x2ad3e]        # 0x434240
  409502:	lea    r9,[rip+0x2e5b7]        # 0x437ac0
  409509:	lea    rdx,[rip+0x2ae2b]        # 0x43433b
  409510:	mov    rcx,rbx
  409513:	call   0x402ef0
  409518:	lea    r8,[rip+0x2acfb]        # 0x43421a
  40951f:	jmp    0x409068
  409524:	lea    r9,[rip+0x2e595]        # 0x437ac0
  40952b:	lea    r8,[rip+0x2aee4]        # 0x434416
  409532:	lea    rdx,[rip+0x2aa2b]        # 0x433f64
  409539:	mov    rcx,rbx
  40953c:	call   0x402ef0
  409541:	lea    r9,[rip+0x2e578]        # 0x437ac0
  409548:	lea    r8,[rip+0x2aed2]        # 0x434421
  40954f:	lea    rdx,[rip+0x2aa06]        # 0x433f5c
  409556:	mov    rcx,rbx
  409559:	call   0x402ef0
  40955e:	lea    r9,[rip+0x2e55b]        # 0x437ac0
  409565:	lea    rdx,[rip+0x2ad98]        # 0x434304
  40956c:	mov    r8,r13
  40956f:	mov    rcx,rbx
  409572:	call   0x402ef0
  409577:	jmp    0x4093c8
  40957c:	nop    DWORD PTR [rax+0x0]
  409580:	push   r12
  409582:	push   rbp
  409583:	push   rdi
  409584:	push   rsi
  409585:	push   rbx
  409586:	sub    rsp,0x40
  40958a:	lea    rbx,[rsp+0x30]
  40958f:	mov    r12,r8
  409592:	mov    rdi,rcx
  409595:	mov    r8d,0x10
  40959b:	mov    rbp,rdx
  40959e:	mov    rdx,r12
  4095a1:	mov    rcx,rbx
  4095a4:	call   0x422558
  4095a9:	mov    edx,0x3a
  4095ae:	mov    rcx,rbx
  4095b1:	call   0x42fb00
  4095b6:	test   rax,rax
  4095b9:	mov    rsi,rax
  4095bc:	je     0x40964d
  4095c2:	movsd  xmm1,QWORD PTR [rip+0x2fee6]        # 0x4394b0
  4095ca:	mov    BYTE PTR [rax],0x0
  4095cd:	mov    rdx,rbx
  4095d0:	pxor   xmm3,xmm3
  4095d4:	mov    rcx,rbp
  4095d7:	movsd  QWORD PTR [rsp+0x20],xmm1
  4095dd:	mov    r8d,0x80
  4095e3:	call   0x4023d0
  4095e8:	cvttsd2si ebx,xmm0
  4095ec:	mov    rcx,QWORD PTR [rdi+0x160]
  4095f3:	lea    r8,[rdi+0x168]
  4095fa:	mov    edx,0x4
  4095ff:	lea    r9d,[rbx+0x1]
  409603:	movsxd rbx,ebx
  409606:	call   0x407950
  40960b:	movsd  xmm2,QWORD PTR [rip+0x2fead]        # 0x4394c0
  409613:	lea    rdx,[rsi+0x1]
  409617:	pxor   xmm3,xmm3
  40961b:	mov    QWORD PTR [rdi+0x160],rax
  409622:	movsd  QWORD PTR [rsp+0x20],xmm2
  409628:	mov    r8d,0x80
  40962e:	mov    rcx,rbp
  409631:	lea    rbx,[rax+rbx*4]
  409635:	call   0x4023d0
  40963a:	cvttsd2si eax,xmm0
  40963e:	mov    DWORD PTR [rbx],eax
  409640:	xor    eax,eax
  409642:	add    rsp,0x40
  409646:	pop    rbx
  409647:	pop    rsi
  409648:	pop    rdi
  409649:	pop    rbp
  40964a:	pop    r12
  40964c:	ret    
  40964d:	lea    r8,[rip+0x2ae04]        # 0x434458
  409654:	xor    ecx,ecx
  409656:	mov    QWORD PTR [rsp+0x20],rbp
  40965b:	mov    r9,r12
  40965e:	mov    edx,0x8
  409663:	call   0x4226c0
  409668:	mov    ecx,0x1
  40966d:	call   0x401cb0
  409672:	nop
  409673:	nop    DWORD PTR [rax]
  409676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409680:	push   rdi
  409681:	push   rsi
  409682:	push   rbx
  409683:	sub    rsp,0x20
  409687:	mov    rax,rdx
  40968a:	mov    rdi,r8
  40968d:	mov    rsi,rcx
  409690:	movsx  r8d,BYTE PTR [rax]
  409694:	lea    rdx,[rdx+0x1]
  409698:	lea    rcx,[rip+0x2adff]        # 0x43449e
  40969f:	call   0x422878
  4096a4:	lea    r9,[rip+0x2e415]        # 0x437ac0
  4096ab:	mov    rbx,rax
  4096ae:	mov    r8,rdi
  4096b1:	mov    rdx,rax
  4096b4:	mov    rcx,rsi
  4096b7:	call   0x402ef0
  4096bc:	mov    rcx,rbx
  4096bf:	mov    esi,eax
  4096c1:	call   0x422770
  4096c6:	mov    eax,esi
  4096c8:	add    rsp,0x20
  4096cc:	pop    rbx
  4096cd:	pop    rsi
  4096ce:	pop    rdi
  4096cf:	ret    
  4096d0:	push   rdi
  4096d1:	push   rsi
  4096d2:	push   rbx
  4096d3:	sub    rsp,0x20
  4096d7:	mov    rdi,rcx
  4096da:	lea    rcx,[rip+0x2adc3]        # 0x4344a4
  4096e1:	mov    rdx,r8
  4096e4:	mov    rsi,r8
  4096e7:	call   0x422878
  4096ec:	lea    r9,[rip+0x2e3cd]        # 0x437ac0
  4096f3:	lea    rdx,[rip+0x2adb6]        # 0x4344b0
  4096fa:	mov    r8,rax
  4096fd:	mov    rcx,rdi
  409700:	mov    rbx,rax
  409703:	call   0x402ef0
  409708:	test   eax,eax
  40970a:	js     0x409725
  40970c:	mov    rcx,QWORD PTR [rdi]
  40970f:	lea    rdx,[rip+0x2ada5]        # 0x4344bb
  409716:	xor    r9d,r9d
  409719:	mov    r8,rsi
  40971c:	add    rcx,0x20
  409720:	call   0x422808
  409725:	mov    rcx,rbx
  409728:	call   0x422770
  40972d:	xor    eax,eax
  40972f:	add    rsp,0x20
  409733:	pop    rbx
  409734:	pop    rsi
  409735:	pop    rdi
  409736:	ret    
  409737:	nop    WORD PTR [rax+rax*1+0x0]
  409740:	push   rdi
  409741:	push   rsi
  409742:	push   rbx
  409743:	sub    rsp,0xe0
  40974a:	mov    rbx,rdx
  40974d:	mov    rdi,rcx
  409750:	mov    rdx,r8
  409753:	mov    rcx,rbx
  409756:	xor    r8d,r8d
  409759:	lea    rsi,[rsp+0x60]
  40975e:	call   0x4024d0
  409763:	pxor   xmm0,xmm0
  409767:	lea    rcx,[rsp+0x28]
  40976c:	cvtsi2sd xmm0,rax
  409771:	divsd  xmm0,QWORD PTR [rip+0x2fd4f]        # 0x4394c8
  409779:	cvttsd2si rax,xmm0
  40977e:	mov    QWORD PTR [rsp+0x28],rax
  409783:	call   QWORD PTR [rip+0x3b817]        # 0x444fa0
  409789:	mov    rdx,QWORD PTR [rax]
  40978c:	lea    r9,[rsp+0x30]
  409791:	lea    r8,[rip+0x2ad30]        # 0x4344c8
  409798:	mov    rcx,rsi
  40979b:	mov    QWORD PTR [rsp+0x30],rdx
  4097a0:	mov    rdx,QWORD PTR [rax+0x8]
  4097a4:	mov    QWORD PTR [rsp+0x38],rdx
  4097a9:	mov    rdx,QWORD PTR [rax+0x10]
  4097ad:	mov    QWORD PTR [rsp+0x40],rdx
  4097b2:	mov    rdx,QWORD PTR [rax+0x18]
  4097b6:	mov    QWORD PTR [rsp+0x48],rdx
  4097bb:	mov    eax,DWORD PTR [rax+0x20]
  4097be:	mov    edx,0x80
  4097c3:	mov    DWORD PTR [rsp+0x50],eax
  4097c7:	call   0x42fae0
  4097cc:	test   rax,rax
  4097cf:	mov    r10d,0xffffffff
  4097d5:	je     0x409809
  4097d7:	lea    r9,[rip+0x2e2e2]        # 0x437ac0
  4097de:	lea    rdx,[rip+0x2ad05]        # 0x4344ea
  4097e5:	mov    r8,rsi
  4097e8:	mov    rcx,rdi
  4097eb:	call   0x402ef0
  4097f0:	lea    r8,[rip+0x2ad01]        # 0x4344f8
  4097f7:	mov    r9,rbx
  4097fa:	mov    edx,0x18
  4097ff:	xor    ecx,ecx
  409801:	call   0x4226c0
  409806:	xor    r10d,r10d
  409809:	mov    eax,r10d
  40980c:	add    rsp,0xe0
  409813:	pop    rbx
  409814:	pop    rsi
  409815:	pop    rdi
  409816:	ret    
  409817:	nop    WORD PTR [rax+rax*1+0x0]
  409820:	push   r15
  409822:	push   r14
  409824:	push   r13
  409826:	push   r12
  409828:	push   rbp
  409829:	push   rdi
  40982a:	push   rsi
  40982b:	push   rbx
  40982c:	sub    rsp,0x68
  409830:	cmp    BYTE PTR [r8],0x2d
  409834:	mov    rbx,rcx
  409837:	mov    r13,r8
  40983a:	mov    DWORD PTR [rsp+0x30],0x0
  409842:	je     0x409bf0
  409848:	mov    rcx,r13
  40984b:	call   0x422578
  409850:	test   rax,rax
  409853:	mov    rsi,rax
  409856:	mov    QWORD PTR [rsp+0x50],rax
  40985b:	je     0x409cab
  409861:	mov    edx,0x2c
  409866:	mov    rcx,rax
  409869:	call   0x42fb00
  40986e:	test   rax,rax
  409871:	mov    QWORD PTR [rsp+0x48],rax
  409876:	je     0x409b50
  40987c:	lea    rdx,[rsp+0x48]
  409881:	lea    rcx,[rax+0x1]
  409885:	xor    r8d,r8d
  409888:	mov    BYTE PTR [rax],0x0
  40988b:	call   0x42faa8
  409890:	mov    ebp,eax
  409892:	mov    rax,QWORD PTR [rip+0x33fe7]        # 0x43d880
  409899:	cmp    ebp,DWORD PTR [rax]
  40989b:	jge    0x409cb5
  4098a1:	mov    eax,ebp
  4098a3:	shr    eax,0x1f
  4098a6:	test   al,al
  4098a8:	jne    0x409cb5
  4098ae:	mov    r8,QWORD PTR [rsp+0x48]
  4098b3:	cmp    BYTE PTR [r8],0x0
  4098b7:	jne    0x409ab0
  4098bd:	mov    rsi,QWORD PTR [rip+0x33f1c]        # 0x43d7e0
  4098c4:	movsxd r14,ebp
  4098c7:	lea    r15,[r14*8+0x0]
  4098cf:	mov    rax,QWORD PTR [rsi]
  4098d2:	mov    rax,QWORD PTR [rax+r14*8]
  4098d6:	mov    edx,DWORD PTR [rax+0x48]
  4098d9:	test   edx,edx
  4098db:	jle    0x409c9c
  4098e1:	xor    r12d,r12d
  4098e4:	xor    edi,edi
  4098e6:	jmp    0x40990e
  4098e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4098f0:	mov    rax,QWORD PTR [rsi]
  4098f3:	add    edi,0x1
  4098f6:	add    r12,0x8
  4098fa:	mov    rax,QWORD PTR [rax+r15*1]
  4098fe:	mov    edx,DWORD PTR [rax+0x48]
  409901:	cmp    edx,edi
  409903:	jle    0x409b40
  409909:	mov    r8,QWORD PTR [rsp+0x48]
  40990e:	mov    rcx,QWORD PTR [rax]
  409911:	mov    rax,QWORD PTR [rcx+0x30]
  409915:	mov    rdx,QWORD PTR [rax+r12*1]
  409919:	call   0x4075b0
  40991e:	cmp    eax,0x1
  409921:	jne    0x4098f0
  409923:	mov    rax,QWORD PTR [rsi]
  409926:	mov    DWORD PTR [rsp+0x28],edi
  40992a:	mov    rax,QWORD PTR [rax+r14*8]
  40992e:	mov    edx,DWORD PTR [rax+0x48]
  409931:	cmp    edi,edx
  409933:	je     0x409d01
  409939:	mov    rsi,QWORD PTR [rsp+0x50]
  40993e:	cmp    BYTE PTR [rsi],0x5b
  409941:	je     0x409b66
  409947:	mov    edx,0x3f
  40994c:	mov    rcx,rsi
  40994f:	call   0x42fb00
  409954:	test   rax,rax
  409957:	mov    QWORD PTR [rsp+0x38],rax
  40995c:	je     0x409966
  40995e:	mov    BYTE PTR [rax],0x0
  409961:	mov    rsi,QWORD PTR [rsp+0x50]
  409966:	lea    rdx,[rsp+0x58]
  40996b:	xor    r8d,r8d
  40996e:	mov    rcx,rsi
  409971:	call   0x42faa8
  409976:	mov    edi,eax
  409978:	mov    rax,QWORD PTR [rip+0x33f01]        # 0x43d880
  40997f:	cmp    edi,DWORD PTR [rax]
  409981:	jge    0x409cd5
  409987:	mov    eax,edi
  409989:	shr    eax,0x1f
  40998c:	test   al,al
  40998e:	jne    0x409cd5
  409994:	mov    ecx,DWORD PTR [rsp+0x30]
  409998:	test   ecx,ecx
  40999a:	jne    0x409ac0
  4099a0:	mov    rsi,QWORD PTR [rip+0x33e39]        # 0x43d7e0
  4099a7:	movsxd rax,edi
  4099aa:	lea    r12,[rax*8+0x0]
  4099b2:	mov    rdx,QWORD PTR [rsi]
  4099b5:	mov    rax,QWORD PTR [rdx+rax*8]
  4099b9:	mov    edx,DWORD PTR [rax+0x48]
  4099bc:	test   edx,edx
  4099be:	jle    0x409a6f
  4099c4:	lea    rcx,[rbx+0xf8]
  4099cb:	xor    r15d,r15d
  4099ce:	xor    r14d,r14d
  4099d1:	cmp    ebp,0xffffffff
  4099d4:	mov    QWORD PTR [rsp+0x30],rcx
  4099d9:	je     0x409c01
  4099df:	nop
  4099e0:	mov    r8,QWORD PTR [rsp+0x58]
  4099e5:	mov    rcx,QWORD PTR [rax]
  4099e8:	xor    r11d,r11d
  4099eb:	mov    rax,QWORD PTR [rcx+0x30]
  4099ef:	cmp    BYTE PTR [r8],0x3a
  4099f3:	mov    rdx,QWORD PTR [rax+r15*8]
  4099f7:	sete   r11b
  4099fb:	add    r8,r11
  4099fe:	call   0x4075b0
  409a03:	test   eax,eax
  409a05:	jle    0x409a52
  409a07:	mov    eax,DWORD PTR [rbx+0xf8]
  409a0d:	mov    rcx,QWORD PTR [rbx+0xf0]
  409a14:	mov    edx,0x20
  409a19:	mov    r8,QWORD PTR [rsp+0x30]
  409a1e:	lea    r9d,[rax+0x1]
  409a22:	call   0x407950
  409a27:	movsxd rdx,DWORD PTR [rbx+0xf8]
  409a2e:	mov    QWORD PTR [rbx+0xf0],rax
  409a35:	shl    rdx,0x5
  409a39:	lea    r14,[rax+rdx*1-0x20]
  409a3e:	mov    eax,DWORD PTR [rsp+0x28]
  409a42:	mov    DWORD PTR [r14+0x4],edi
  409a46:	mov    DWORD PTR [r14+0x8],r15d
  409a4a:	mov    DWORD PTR [r14+0xc],ebp
  409a4e:	mov    DWORD PTR [r14+0x10],eax
  409a52:	mov    rax,QWORD PTR [rsi]
  409a55:	lea    edx,[r15+0x1]
  409a59:	add    r15,0x1
  409a5d:	mov    rax,QWORD PTR [rax+r12*1]
  409a61:	cmp    DWORD PTR [rax+0x48],edx
  409a64:	jg     0x4099e0
  409a6a:	test   r14,r14
  409a6d:	jne    0x409a91
  409a6f:	cmp    QWORD PTR [rsp+0x38],0x0
  409a75:	je     0x409ce1
  409a7b:	lea    r8,[rip+0x2ab5e]        # 0x4345e0
  409a82:	mov    r9,r13
  409a85:	mov    edx,0x28
  409a8a:	xor    ecx,ecx
  409a8c:	call   0x4226c0
  409a91:	lea    rcx,[rsp+0x50]
  409a96:	call   0x422768
  409a9b:	xor    eax,eax
  409a9d:	add    rsp,0x68
  409aa1:	pop    rbx
  409aa2:	pop    rsi
  409aa3:	pop    rdi
  409aa4:	pop    rbp
  409aa5:	pop    r12
  409aa7:	pop    r13
  409aa9:	pop    r14
  409aab:	pop    r15
  409aad:	ret    
  409aae:	xchg   ax,ax
  409ab0:	add    r8,0x1
  409ab4:	mov    QWORD PTR [rsp+0x48],r8
  409ab9:	jmp    0x4098bd
  409abe:	xchg   ax,ax
  409ac0:	mov    eax,DWORD PTR [rbx+0xf8]
  409ac6:	test   eax,eax
  409ac8:	jle    0x409a6f
  409aca:	movsxd r13,edi
  409acd:	xor    ebp,ebp
  409acf:	xor    esi,esi
  409ad1:	shl    r13,0x3
  409ad5:	mov    r14,QWORD PTR [rip+0x33d04]        # 0x43d7e0
  409adc:	jmp    0x409aeb
  409ade:	xchg   ax,ax
  409ae0:	add    esi,0x1
  409ae3:	add    rbp,0x20
  409ae7:	cmp    esi,eax
  409ae9:	jge    0x409a91
  409aeb:	mov    r12,rbp
  409aee:	add    r12,QWORD PTR [rbx+0xf0]
  409af5:	cmp    DWORD PTR [r12+0x4],edi
  409afa:	jne    0x409ae0
  409afc:	mov    rdx,QWORD PTR [r14]
  409aff:	mov    rax,QWORD PTR [rsp+0x58]
  409b04:	xor    r8d,r8d
  409b07:	movsxd r9,DWORD PTR [r12+0x8]
  409b0c:	mov    rdx,QWORD PTR [rdx+r13*1]
  409b10:	cmp    BYTE PTR [rax],0x3a
  409b13:	mov    rcx,QWORD PTR [rdx]
  409b16:	sete   r8b
  409b1a:	add    r8,rax
  409b1d:	mov    rdx,QWORD PTR [rcx+0x30]
  409b21:	mov    rdx,QWORD PTR [rdx+r9*8]
  409b25:	call   0x4075b0
  409b2a:	test   eax,eax
  409b2c:	jle    0x409b36
  409b2e:	mov    DWORD PTR [r12],0x1
  409b36:	mov    eax,DWORD PTR [rbx+0xf8]
  409b3c:	jmp    0x409ae0
  409b3e:	xchg   ax,ax
  409b40:	mov    DWORD PTR [rsp+0x28],0x0
  409b48:	jmp    0x409931
  409b4d:	nop    DWORD PTR [rax]
  409b50:	cmp    BYTE PTR [rsi],0x5b
  409b53:	mov    DWORD PTR [rsp+0x28],0x0
  409b5b:	mov    ebp,0xffffffff
  409b60:	jne    0x409947
  409b66:	mov    eax,DWORD PTR [rbx+0xf8]
  409b6c:	mov    rcx,QWORD PTR [rbx+0xf0]
  409b73:	lea    r8,[rbx+0xf8]
  409b7a:	add    rsi,0x1
  409b7e:	mov    edx,0x20
  409b83:	mov    QWORD PTR [rsp+0x58],rsi
  409b88:	lea    r9d,[rax+0x1]
  409b8c:	call   0x407950
  409b91:	movsxd rdx,DWORD PTR [rbx+0xf8]
  409b98:	mov    QWORD PTR [rbx+0xf0],rax
  409b9f:	lea    rcx,[rsp+0x58]
  409ba4:	shl    rdx,0x5
  409ba8:	lea    rbx,[rax+rdx*1-0x20]
  409bad:	lea    rdx,[rip+0x2a9e5]        # 0x434599
  409bb4:	call   0x4226d8
  409bb9:	test   rax,rax
  409bbc:	mov    QWORD PTR [rbx+0x18],rax
  409bc0:	jne    0x409a91
  409bc6:	mov    r9,QWORD PTR [rsp+0x50]
  409bcb:	lea    r8,[rip+0x2a9ce]        # 0x4345a0
  409bd2:	xor    ecx,ecx
  409bd4:	mov    edx,0x10
  409bd9:	call   0x4226c0
  409bde:	mov    ecx,0x1
  409be3:	call   0x401cb0
  409be8:	nop    DWORD PTR [rax+rax*1+0x0]
  409bf0:	add    r13,0x1
  409bf4:	mov    DWORD PTR [rsp+0x30],0x1
  409bfc:	jmp    0x409848
  409c01:	xor    ebp,ebp
  409c03:	mov    QWORD PTR [rsp+0x28],rcx
  409c08:	nop    DWORD PTR [rax+rax*1+0x0]
  409c10:	mov    r8,QWORD PTR [rsp+0x58]
  409c15:	mov    rcx,QWORD PTR [rax]
  409c18:	xor    r11d,r11d
  409c1b:	mov    rax,QWORD PTR [rcx+0x30]
  409c1f:	cmp    BYTE PTR [r8],0x3a
  409c23:	mov    rdx,QWORD PTR [rax+rbp*1]
  409c27:	sete   r11b
  409c2b:	add    r8,r11
  409c2e:	call   0x4075b0
  409c33:	test   eax,eax
  409c35:	jle    0x409c7e
  409c37:	mov    eax,DWORD PTR [rbx+0xf8]
  409c3d:	mov    rcx,QWORD PTR [rbx+0xf0]
  409c44:	mov    edx,0x20
  409c49:	mov    r8,QWORD PTR [rsp+0x28]
  409c4e:	lea    r9d,[rax+0x1]
  409c52:	call   0x407950
  409c57:	movsxd rdx,DWORD PTR [rbx+0xf8]
  409c5e:	mov    QWORD PTR [rbx+0xf0],rax
  409c65:	shl    rdx,0x5
  409c69:	lea    r14,[rax+rdx*1-0x20]
  409c6e:	mov    DWORD PTR [r14+0x4],edi
  409c72:	mov    DWORD PTR [r14+0x8],r15d
  409c76:	mov    DWORD PTR [r14+0xc],edi
  409c7a:	mov    DWORD PTR [r14+0x10],r15d
  409c7e:	mov    rax,QWORD PTR [rsi]
  409c81:	add    r15d,0x1
  409c85:	add    rbp,0x8
  409c89:	mov    rax,QWORD PTR [rax+r12*1]
  409c8d:	cmp    DWORD PTR [rax+0x48],r15d
  409c91:	jg     0x409c10
  409c97:	jmp    0x409a6a
  409c9c:	xor    edi,edi
  409c9e:	mov    DWORD PTR [rsp+0x28],0x0
  409ca6:	jmp    0x409931
  409cab:	mov    eax,0xfffffff4
  409cb0:	jmp    0x409a9d
  409cb5:	lea    r8,[rip+0x2a87d]        # 0x434539
  409cbc:	mov    r9d,ebp
  409cbf:	xor    ecx,ecx
  409cc1:	mov    edx,0x8
  409cc6:	call   0x4226c0
  409ccb:	mov    ecx,0x1
  409cd0:	call   0x401cb0
  409cd5:	mov    r9d,edi
  409cd8:	lea    r8,[rip+0x2a8e1]        # 0x4345c0
  409cdf:	jmp    0x409cbf
  409ce1:	lea    r8,[rip+0x2a928]        # 0x434610
  409ce8:	mov    r9,r13
  409ceb:	xor    ecx,ecx
  409ced:	mov    edx,0x8
  409cf2:	call   0x4226c0
  409cf7:	mov    ecx,0x1
  409cfc:	call   0x401cb0
  409d01:	mov    r9,r13
  409d04:	lea    r8,[rip+0x2a84d]        # 0x434558
  409d0b:	jmp    0x409ceb
  409d0d:	nop    DWORD PTR [rax]
  409d10:	push   rbp
  409d11:	push   rdi
  409d12:	push   rsi
  409d13:	push   rbx
  409d14:	sub    rsp,0x28
  409d18:	lea    rdi,[rip+0x2a9e8]        # 0x434707
  409d1f:	mov    rbp,rcx
  409d22:	mov    rsi,rdx
  409d25:	mov    ecx,0x3
  409d2a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409d2c:	mov    rbx,r8
  409d2f:	je     0x409da0
  409d31:	lea    rdi,[rip+0x2a9d2]        # 0x43470a
  409d38:	mov    ecx,0x2
  409d3d:	mov    rsi,rdx
  409d40:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409d42:	je     0x409d60
  409d44:	mov    rcx,QWORD PTR [rbp+0x0]
  409d48:	xor    r9d,r9d
  409d4b:	add    rcx,0x20
  409d4f:	call   0x422808
  409d54:	xor    eax,eax
  409d56:	add    rsp,0x28
  409d5a:	pop    rbx
  409d5b:	pop    rsi
  409d5c:	pop    rdi
  409d5d:	pop    rbp
  409d5e:	ret    
  409d5f:	nop
  409d60:	lea    r8,[rip+0x2a9a9]        # 0x434710
  409d67:	xor    ecx,ecx
  409d69:	mov    edx,0x18
  409d6e:	call   0x4226c0
  409d73:	mov    rcx,QWORD PTR [rbp+0x0]
  409d77:	lea    rdx,[rip+0x2a4e9]        # 0x434267
  409d7e:	xor    r9d,r9d
  409d81:	mov    r8,rbx
  409d84:	add    rcx,0x20
  409d88:	call   0x422808
  409d8d:	xor    eax,eax
  409d8f:	add    rsp,0x28
  409d93:	pop    rbx
  409d94:	pop    rsi
  409d95:	pop    rdi
  409d96:	pop    rbp
  409d97:	ret    
  409d98:	nop    DWORD PTR [rax+rax*1+0x0]
  409da0:	mov    rcx,QWORD PTR [rbp+0x0]
  409da4:	lea    rdx,[rip+0x2a4ec]        # 0x434297
  409dab:	xor    r9d,r9d
  409dae:	add    rcx,0x20
  409db2:	call   0x422808
  409db7:	xor    eax,eax
  409db9:	add    rsp,0x28
  409dbd:	pop    rbx
  409dbe:	pop    rsi
  409dbf:	pop    rdi
  409dc0:	pop    rbp
  409dc1:	ret    
  409dc2:	nop    DWORD PTR [rax+0x0]
  409dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dd0:	push   rbp
  409dd1:	push   rdi
  409dd2:	push   rsi
  409dd3:	push   rbx
  409dd4:	sub    rsp,0x28
  409dd8:	lea    rdi,[rip+0x2a95b]        # 0x43473a
  409ddf:	mov    rbp,rcx
  409de2:	mov    rsi,rdx
  409de5:	mov    ecx,0x8
  409dea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409dec:	mov    rbx,r8
  409def:	je     0x409e10
  409df1:	mov    rcx,QWORD PTR [rbp+0x0]
  409df5:	xor    r9d,r9d
  409df8:	add    rcx,0x20
  409dfc:	call   0x422808
  409e01:	xor    eax,eax
  409e03:	add    rsp,0x28
  409e07:	pop    rbx
  409e08:	pop    rsi
  409e09:	pop    rdi
  409e0a:	pop    rbp
  409e0b:	ret    
  409e0c:	nop    DWORD PTR [rax+0x0]
  409e10:	lea    r8,[rip+0x2a931]        # 0x434748
  409e17:	xor    ecx,ecx
  409e19:	mov    edx,0x18
  409e1e:	call   0x4226c0
  409e23:	mov    rcx,QWORD PTR [rbp+0x0]
  409e27:	lea    rdx,[rip+0x2a956]        # 0x434784
  409e2e:	xor    r9d,r9d
  409e31:	mov    r8,rbx
  409e34:	add    rcx,0x20
  409e38:	call   0x422808
  409e3d:	xor    eax,eax
  409e3f:	add    rsp,0x28
  409e43:	pop    rbx
  409e44:	pop    rsi
  409e45:	pop    rdi
  409e46:	pop    rbp
  409e47:	ret    
  409e48:	nop    DWORD PTR [rax+rax*1+0x0]
  409e50:	push   rbx
  409e51:	sub    rsp,0x70
  409e55:	xor    ecx,ecx
  409e57:	call   QWORD PTR [rip+0x3b16b]        # 0x444fc8
  409e5d:	lea    rcx,[rsp+0x38]
  409e62:	mov    QWORD PTR [rsp+0x38],rax
  409e67:	call   QWORD PTR [rip+0x3b143]        # 0x444fb0
  409e6d:	test   rax,rax
  409e70:	je     0x409ebf
  409e72:	mov    edx,DWORD PTR [rax]
  409e74:	mov    r9d,DWORD PTR [rax+0x8]
  409e78:	lea    rbx,[rsp+0x40]
  409e7d:	lea    r8,[rip+0x2a96c]        # 0x4347f0
  409e84:	mov    rcx,rbx
  409e87:	mov    DWORD PTR [rsp+0x28],edx
  409e8b:	mov    eax,DWORD PTR [rax+0x4]
  409e8e:	mov    edx,0x28
  409e93:	mov    DWORD PTR [rsp+0x20],eax
  409e97:	call   0x4082b0
  409e9c:	mov    rcx,QWORD PTR [rip+0x39835]        # 0x4436d8
  409ea3:	call   0x422770
  409ea8:	mov    rcx,rbx
  409eab:	call   0x422578
  409eb0:	mov    QWORD PTR [rip+0x39821],rax        # 0x4436d8
  409eb7:	xor    eax,eax
  409eb9:	add    rsp,0x70
  409ebd:	pop    rbx
  409ebe:	ret    
  409ebf:	call   QWORD PTR [rip+0x3b0cb]        # 0x444f90
  409ec5:	mov    ecx,DWORD PTR [rax]
  409ec7:	call   0x42fae8
  409ecc:	lea    r8,[rip+0x2a8fd]        # 0x4347d0
  409ed3:	xor    ecx,ecx
  409ed5:	mov    r9,rax
  409ed8:	mov    edx,0x8
  409edd:	call   0x4226c0
  409ee2:	mov    ecx,0x1
  409ee7:	call   0x401cb0
  409eec:	nop
  409eed:	nop    DWORD PTR [rax]
  409ef0:	push   rdi
  409ef1:	push   rsi
  409ef2:	push   rbx
  409ef3:	sub    rsp,0x20
  409ef7:	mov    r8d,DWORD PTR [rip+0x381b2]        # 0x4420b0
  409efe:	mov    rbx,rcx
  409f01:	test   r8d,r8d
  409f04:	jne    0x409f30
  409f06:	call   0x4221a0
  409f0b:	test   rax,rax
  409f0e:	je     0x409f23
  409f10:	lea    rdi,[rip+0x2a91b]        # 0x434832
  409f17:	mov    ecx,0x5
  409f1c:	mov    rsi,rax
  409f1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409f21:	je     0x409f60
  409f23:	add    rsp,0x20
  409f27:	pop    rbx
  409f28:	pop    rsi
  409f29:	pop    rdi
  409f2a:	ret    
  409f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f30:	mov    ecx,DWORD PTR [rip+0x38176]        # 0x4420ac
  409f36:	test   ecx,ecx
  409f38:	je     0x409f23
  409f3a:	call   QWORD PTR [rip+0x3b010]        # 0x444f50
  409f40:	lea    rdx,[rip+0x2a8c1]        # 0x434808
  409f47:	lea    rcx,[rax+0x60]
  409f4b:	call   0x408860
  409f50:	mov    ecx,0x1
  409f55:	call   0x401cb0
  409f5a:	nop    WORD PTR [rax+rax*1+0x0]
  409f60:	xor    edx,edx
  409f62:	mov    rcx,rbx
  409f65:	call   0x4221c8
  409f6a:	test   eax,eax
  409f6c:	jne    0x409f23
  409f6e:	mov    edx,DWORD PTR [rip+0x27190]        # 0x431104
  409f74:	test   edx,edx
  409f76:	je     0x409fcf
  409f78:	mov    eax,DWORD PTR [rip+0x3812e]        # 0x4420ac
  409f7e:	test   eax,eax
  409f80:	jne    0x409fcf
  409f82:	mov    rsi,QWORD PTR [rip+0x3afc7]        # 0x444f50
  409f89:	call   rsi
  409f8b:	lea    rdx,[rip+0x2a8a6]        # 0x434838
  409f92:	lea    rcx,[rax+0x60]
  409f96:	mov    r8,rbx
  409f99:	call   0x408860
  409f9e:	call   rsi
  409fa0:	lea    rcx,[rax+0x60]
  409fa4:	call   0x42fbd0
  409fa9:	call   0x420b50
  409fae:	xor    edx,edx
  409fb0:	mov    ecx,0x2
  409fb5:	call   0x42fb08
  409fba:	call   0x407250
  409fbf:	test   eax,eax
  409fc1:	je     0x409fef
  409fc3:	add    rsp,0x20
  409fc7:	pop    rbx
  409fc8:	pop    rsi
  409fc9:	pop    rdi
  409fca:	jmp    0x420b70
  409fcf:	lea    r8,[rip+0x2a8aa]        # 0x434880
  409fd6:	xor    ecx,ecx
  409fd8:	mov    r9,rbx
  409fdb:	mov    edx,0x8
  409fe0:	call   0x4226c0
  409fe5:	mov    ecx,0x1
  409fea:	call   0x401cb0
  409fef:	lea    r8,[rip+0x2a86f]        # 0x434865
  409ff6:	xor    ecx,ecx
  409ff8:	mov    edx,0x8
  409ffd:	call   0x4226c0
  40a002:	mov    ecx,0x1
  40a007:	call   0x401cb0
  40a00c:	nop
  40a00d:	nop    DWORD PTR [rax]
  40a010:	push   r15
  40a012:	push   r14
  40a014:	push   r13
  40a016:	push   r12
  40a018:	push   rbp
  40a019:	push   rdi
  40a01a:	push   rsi
  40a01b:	push   rbx
  40a01c:	sub    rsp,0xc48
  40a023:	movzx  r13d,BYTE PTR [rdx]
  40a027:	mov    eax,DWORD PTR [rcx+0x30]
  40a02a:	mov    r14,rcx
  40a02d:	mov    rbp,r8
  40a030:	mov    BYTE PTR [rsp+0x851],0x0
  40a038:	test   eax,eax
  40a03a:	mov    BYTE PTR [rsp+0x850],r13b
  40a042:	jle    0x40a363
  40a048:	mov    rdx,QWORD PTR [rcx+0x28]
  40a04c:	sub    eax,0x1
  40a04f:	lea    rsi,[rsp+0x850]
  40a057:	shl    rax,0x4
  40a05b:	xor    r12d,r12d
  40a05e:	lea    rbx,[rdx+0x8]
  40a062:	lea    rdi,[rdx+rax*1+0x18]
  40a067:	nop    WORD PTR [rax+rax*1+0x0]
  40a070:	mov    rcx,QWORD PTR [rbx-0x8]
  40a074:	mov    rdx,rsi
  40a077:	call   0x42faf8
  40a07c:	test   eax,eax
  40a07e:	jne    0x40a083
  40a080:	mov    r12,QWORD PTR [rbx]
  40a083:	add    rbx,0x10
  40a087:	cmp    rbx,rdi
  40a08a:	jne    0x40a070
  40a08c:	lea    r15,[rsp+0x70]
  40a091:	xor    r9d,r9d
  40a094:	cmp    r13b,0x66
  40a098:	sete   r9b
  40a09c:	mov    QWORD PTR [rsp+0x20],r12
  40a0a1:	mov    r8,rbp
  40a0a4:	mov    edx,0x3e8
  40a0a9:	mov    rcx,r15
  40a0ac:	call   0x4072a0
  40a0b1:	test   rax,rax
  40a0b4:	mov    r12,rax
  40a0b7:	je     0x40a390
  40a0bd:	lea    rax,[rsp+0x60]
  40a0c2:	lea    rbx,[rsp+0x460]
  40a0ca:	lea    rbp,[rsp+0x850]
  40a0d2:	mov    r13d,0x7
  40a0d8:	mov    QWORD PTR [rsp+0x48],rax
  40a0dd:	lea    rax,[rsp+0x68]
  40a0e2:	mov    QWORD PTR [rsp+0x50],rax
  40a0e7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0f0:	mov    r8,r12
  40a0f3:	mov    edx,0x3e8
  40a0f8:	mov    rcx,rbx
  40a0fb:	call   0x42fbc8
  40a100:	test   rax,rax
  40a103:	je     0x40a345
  40a109:	lea    rdx,[rip+0x2a7f0]        # 0x434900
  40a110:	mov    rcx,rbx
  40a113:	call   0x42faf0
  40a118:	test   rax,rax
  40a11b:	je     0x40a0f0
  40a11d:	mov    r8d,0x3e8
  40a123:	mov    rdx,rbx
  40a126:	mov    rcx,rbp
  40a129:	call   0x422558
  40a12e:	mov    r8,QWORD PTR [rsp+0x48]
  40a133:	lea    rdx,[rip+0x2a7ca]        # 0x434904
  40a13a:	mov    rcx,rbp
  40a13d:	call   0x422540
  40a142:	test   rax,rax
  40a145:	je     0x40a36b
  40a14b:	mov    r8,QWORD PTR [rsp+0x50]
  40a150:	mov    rcx,QWORD PTR [rsp+0x60]
  40a155:	lea    rdx,[rip+0x2a7c4]        # 0x434920
  40a15c:	call   0x422540
  40a161:	test   rax,rax
  40a164:	je     0x40a36b
  40a16a:	mov    rax,QWORD PTR [rsp+0x60]
  40a16f:	lea    r8,[rip+0x2a7b2]        # 0x434928
  40a176:	xor    ecx,ecx
  40a178:	mov    QWORD PTR [rsp+0x20],rbp
  40a17d:	mov    r9,r15
  40a180:	mov    edx,0x30
  40a185:	lea    rdi,[rip+0x2a7bb]        # 0x434947
  40a18c:	mov    rsi,rbp
  40a18f:	mov    QWORD PTR [rsp+0x28],rax
  40a194:	call   0x4226c0
  40a199:	mov    rcx,r13
  40a19c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a19e:	je     0x40a200
  40a1a0:	lea    rdi,[rip+0x2a7a7]        # 0x43494e
  40a1a7:	mov    rsi,rbp
  40a1aa:	mov    rcx,r13
  40a1ad:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a1af:	je     0x40a220
  40a1b1:	lea    rdi,[rip+0x2a79d]        # 0x434955
  40a1b8:	mov    rsi,rbp
  40a1bb:	mov    rcx,r13
  40a1be:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a1c0:	je     0x40a325
  40a1c6:	lea    rdi,[rip+0x2a78f]        # 0x43495c
  40a1cd:	mov    rsi,rbp
  40a1d0:	mov    rcx,r13
  40a1d3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a1d5:	jne    0x40a240
  40a1d7:	mov    r8,QWORD PTR [rsp+0x60]
  40a1dc:	lea    r9,[rip+0x2d8dd]        # 0x437ac0
  40a1e3:	lea    rdx,[rip+0x29d82]        # 0x433f6c
  40a1ea:	mov    rcx,r14
  40a1ed:	call   0x402ef0
  40a1f2:	jmp    0x40a0f0
  40a1f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a200:	mov    r8,QWORD PTR [rsp+0x60]
  40a205:	lea    r9,[rip+0x2d8b4]        # 0x437ac0
  40a20c:	lea    rdx,[rip+0x29d49]        # 0x433f5c
  40a213:	mov    rcx,r14
  40a216:	call   0x402ef0
  40a21b:	jmp    0x40a0f0
  40a220:	mov    r8,QWORD PTR [rsp+0x60]
  40a225:	lea    r9,[rip+0x2d894]        # 0x437ac0
  40a22c:	lea    rdx,[rip+0x29d31]        # 0x433f64
  40a233:	mov    rcx,r14
  40a236:	call   0x402ef0
  40a23b:	jmp    0x40a0f0
  40a240:	mov    rax,QWORD PTR [rip+0x33489]        # 0x43d6d0
  40a247:	mov    r8,QWORD PTR [rsp+0x60]
  40a24c:	xor    ecx,ecx
  40a24e:	mov    rdx,rbp
  40a251:	mov    r9,QWORD PTR [rax]
  40a254:	mov    rax,QWORD PTR [rip+0x33545]        # 0x43d7a0
  40a25b:	mov    rdi,QWORD PTR [rax]
  40a25e:	mov    rax,QWORD PTR [rip+0x3346b]        # 0x43d6d0
  40a265:	mov    QWORD PTR [rsp+0x58],r9
  40a26a:	mov    QWORD PTR [rax],0x0
  40a271:	mov    rax,QWORD PTR [rip+0x33528]        # 0x43d7a0
  40a278:	mov    QWORD PTR [rax],0x0
  40a27f:	call   0x403e80
  40a284:	mov    esi,eax
  40a286:	mov    rax,QWORD PTR [r14]
  40a289:	xor    r8d,r8d
  40a28c:	lea    rcx,[rax+0x20]
  40a290:	mov    rax,QWORD PTR [rip+0x33439]        # 0x43d6d0
  40a297:	mov    rdx,QWORD PTR [rax]
  40a29a:	call   0x422828
  40a29f:	mov    rax,QWORD PTR [r14]
  40a2a2:	xor    r8d,r8d
  40a2a5:	lea    rcx,[rax+0x28]
  40a2a9:	mov    rax,QWORD PTR [rip+0x334f0]        # 0x43d7a0
  40a2b0:	mov    rdx,QWORD PTR [rax]
  40a2b3:	call   0x422828
  40a2b8:	mov    rcx,QWORD PTR [rip+0x33411]        # 0x43d6d0
  40a2bf:	call   0x422820
  40a2c4:	mov    rcx,QWORD PTR [rip+0x334d5]        # 0x43d7a0
  40a2cb:	call   0x422820
  40a2d0:	mov    rax,QWORD PTR [rip+0x333f9]        # 0x43d6d0
  40a2d7:	mov    r9,QWORD PTR [rsp+0x58]
  40a2dc:	test   esi,esi
  40a2de:	mov    QWORD PTR [rax],r9
  40a2e1:	mov    rax,QWORD PTR [rip+0x334b8]        # 0x43d7a0
  40a2e8:	mov    QWORD PTR [rax],rdi
  40a2eb:	jns    0x40a0f0
  40a2f1:	mov    rax,QWORD PTR [rsp+0x60]
  40a2f6:	lea    r8,[rip+0x2a66b]        # 0x434968
  40a2fd:	xor    ecx,ecx
  40a2ff:	mov    QWORD PTR [rsp+0x28],rbp
  40a304:	mov    QWORD PTR [rsp+0x20],rbx
  40a309:	mov    r9,r15
  40a30c:	mov    edx,0x8
  40a311:	mov    QWORD PTR [rsp+0x30],rax
  40a316:	call   0x4226c0
  40a31b:	mov    ecx,0x1
  40a320:	call   0x401cb0
  40a325:	mov    r8,QWORD PTR [rsp+0x60]
  40a32a:	lea    r9,[rip+0x2d78f]        # 0x437ac0
  40a331:	lea    rdx,[rip+0x29c3c]        # 0x433f74
  40a338:	mov    rcx,r14
  40a33b:	call   0x402ef0
  40a340:	jmp    0x40a0f0
  40a345:	mov    rcx,r12
  40a348:	call   0x42fbd8
  40a34d:	xor    eax,eax
  40a34f:	add    rsp,0xc48
  40a356:	pop    rbx
  40a357:	pop    rsi
  40a358:	pop    rdi
  40a359:	pop    rbp
  40a35a:	pop    r12
  40a35c:	pop    r13
  40a35e:	pop    r14
  40a360:	pop    r15
  40a362:	ret    
  40a363:	xor    r12d,r12d
  40a366:	jmp    0x40a08c
  40a36b:	lea    r8,[rip+0x2a594]        # 0x434906
  40a372:	mov    QWORD PTR [rsp+0x20],rbx
  40a377:	mov    r9,r15
  40a37a:	mov    edx,0x8
  40a37f:	xor    ecx,ecx
  40a381:	call   0x4226c0
  40a386:	mov    ecx,0x1
  40a38b:	call   0x401cb0
  40a390:	lea    rdi,[rip+0x2a50d]        # 0x4348a4
  40a397:	mov    ecx,0x10
  40a39c:	mov    rsi,rbp
  40a39f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a3a1:	jne    0x40a3b8
  40a3a3:	lea    r8,[rip+0x2a50e]        # 0x4348b8
  40a3aa:	mov    edx,0x8
  40a3af:	xor    ecx,ecx
  40a3b1:	call   0x4226c0
  40a3b6:	jmp    0x40a386
  40a3b8:	lea    r8,[rip+0x2a521]        # 0x4348e0
  40a3bf:	mov    r9,rbp
  40a3c2:	mov    edx,0x8
  40a3c7:	xor    ecx,ecx
  40a3c9:	call   0x4226c0
  40a3ce:	jmp    0x40a386
  40a3d0:	push   rbp
  40a3d1:	push   rdi
  40a3d2:	push   rsi
  40a3d3:	push   rbx
  40a3d4:	sub    rsp,0x28
  40a3d8:	lea    rdi,[rip+0x2a5c6]        # 0x4349a5
  40a3df:	mov    rbx,rcx
  40a3e2:	mov    rsi,rdx
  40a3e5:	mov    ecx,0x7
  40a3ea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a3ec:	mov    rbp,r8
  40a3ef:	je     0x40a430
  40a3f1:	lea    rcx,[rip+0x2a5eb]        # 0x4349e3
  40a3f8:	add    rdx,0x6
  40a3fc:	call   0x422878
  40a401:	lea    r9,[rip+0x2d6b8]        # 0x437ac0
  40a408:	mov    rdi,rax
  40a40b:	mov    r8,rbp
  40a40e:	mov    rdx,rax
  40a411:	mov    rcx,rbx
  40a414:	call   0x402ef0
  40a419:	mov    rcx,rdi
  40a41c:	mov    ebx,eax
  40a41e:	call   0x422770
  40a423:	mov    eax,ebx
  40a425:	add    rsp,0x28
  40a429:	pop    rbx
  40a42a:	pop    rsi
  40a42b:	pop    rdi
  40a42c:	pop    rbp
  40a42d:	ret    
  40a42e:	xchg   ax,ax
  40a430:	lea    r8,[rip+0x2a579]        # 0x4349b0
  40a437:	xor    ecx,ecx
  40a439:	mov    edx,0x18
  40a43e:	call   0x4226c0
  40a443:	lea    r9,[rip+0x2d676]        # 0x437ac0
  40a44a:	lea    rdx,[rip+0x2a58e]        # 0x4349df
  40a451:	mov    r8,rbp
  40a454:	mov    rcx,rbx
  40a457:	add    rsp,0x28
  40a45b:	pop    rbx
  40a45c:	pop    rsi
  40a45d:	pop    rdi
  40a45e:	pop    rbp
  40a45f:	jmp    0x402ef0
  40a464:	xchg   ax,ax
  40a466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a470:	push   rbx
  40a471:	sub    rsp,0x30
  40a475:	lea    rdx,[rip+0x2a56b]        # 0x4349e7
  40a47c:	mov    rcx,r8
  40a47f:	mov    rbx,r8
  40a482:	call   0x422580
  40a487:	test   eax,eax
  40a489:	jne    0x40a4a0
  40a48b:	mov    DWORD PTR [rip+0x26c7b],0x1        # 0x431110
  40a495:	xor    eax,eax
  40a497:	add    rsp,0x30
  40a49b:	pop    rbx
  40a49c:	ret    
  40a49d:	nop    DWORD PTR [rax]
  40a4a0:	lea    rdx,[rip+0x2a544]        # 0x4349eb
  40a4a7:	mov    rcx,rbx
  40a4aa:	call   0x422580
  40a4af:	test   eax,eax
  40a4b1:	jne    0x40a4c5
  40a4b3:	xor    eax,eax
  40a4b5:	mov    DWORD PTR [rip+0x26c51],0x2        # 0x431110
  40a4bf:	add    rsp,0x30
  40a4c3:	pop    rbx
  40a4c4:	ret    
  40a4c5:	lea    rdx,[rip+0x2a523]        # 0x4349ef
  40a4cc:	mov    rcx,rbx
  40a4cf:	call   0x422580
  40a4d4:	test   eax,eax
  40a4d6:	jne    0x40a4e4
  40a4d8:	mov    DWORD PTR [rip+0x26c2e],0x0        # 0x431110
  40a4e2:	jmp    0x40a495
  40a4e4:	lea    rdx,[rip+0x2a510]        # 0x4349fb
  40a4eb:	mov    rcx,rbx
  40a4ee:	call   0x422580
  40a4f3:	test   eax,eax
  40a4f5:	jne    0x40a503
  40a4f7:	mov    DWORD PTR [rip+0x26c0f],0xff        # 0x431110
  40a501:	jmp    0x40a495
  40a503:	cmp    DWORD PTR [rip+0x26c06],0xffffffff        # 0x431110
  40a50a:	jne    0x40a495
  40a50c:	movsd  xmm1,QWORD PTR [rip+0x2efbc]        # 0x4394d0
  40a514:	lea    rcx,[rip+0x2a4e5]        # 0x434a00
  40a51b:	mov    r8d,0x80
  40a521:	movsd  xmm3,QWORD PTR [rip+0x2efaf]        # 0x4394d8
  40a529:	mov    rdx,rbx
  40a52c:	movsd  QWORD PTR [rsp+0x20],xmm1
  40a532:	call   0x4023d0
  40a537:	cvttsd2si eax,xmm0
  40a53b:	mov    DWORD PTR [rip+0x26bcf],eax        # 0x431110
  40a541:	xor    eax,eax
  40a543:	add    rsp,0x30
  40a547:	pop    rbx
  40a548:	ret    
  40a549:	nop    DWORD PTR [rax+0x0]
  40a550:	push   rdi
  40a551:	push   rsi
  40a552:	push   rbx
  40a553:	sub    rsp,0x40
  40a557:	mov    rbx,rcx
  40a55a:	mov    esi,edx
  40a55c:	call   0x422370
  40a561:	test   rax,rax
  40a564:	je     0x40a580
  40a566:	cmp    DWORD PTR [rax+0x10],esi
  40a569:	jne    0x40a5fc
  40a56f:	add    rsp,0x40
  40a573:	pop    rbx
  40a574:	pop    rsi
  40a575:	pop    rdi
  40a576:	ret    
  40a577:	nop    WORD PTR [rax+rax*1+0x0]
  40a580:	mov    rcx,rbx
  40a583:	call   0x4223a8
  40a588:	test   rax,rax
  40a58b:	mov    rdi,rax
  40a58e:	je     0x40a5d3
  40a590:	mov    ecx,DWORD PTR [rax]
  40a592:	call   0x422378
  40a597:	test   rax,rax
  40a59a:	je     0x40a5d3
  40a59c:	mov    rdx,QWORD PTR [rdi+0x8]
  40a5a0:	lea    r9,[rip+0x2a45f]        # 0x434a06
  40a5a7:	lea    r8,[rip+0x2a462]        # 0x434a10
  40a5ae:	xor    ecx,ecx
  40a5b0:	mov    QWORD PTR [rsp+0x38],rax
  40a5b5:	mov    QWORD PTR [rsp+0x28],rdx
  40a5ba:	mov    rdx,QWORD PTR [rax]
  40a5bd:	mov    QWORD PTR [rsp+0x20],rdx
  40a5c2:	mov    edx,0x28
  40a5c7:	call   0x4226c0
  40a5cc:	mov    rax,QWORD PTR [rsp+0x38]
  40a5d1:	jmp    0x40a566
  40a5d3:	lea    r9,[rip+0x2a42c]        # 0x434a06
  40a5da:	lea    r8,[rip+0x2a466]        # 0x434a47
  40a5e1:	mov    QWORD PTR [rsp+0x20],rbx
  40a5e6:	xor    ecx,ecx
  40a5e8:	mov    edx,0x8
  40a5ed:	call   0x4226c0
  40a5f2:	mov    ecx,0x1
  40a5f7:	call   0x401cb0
  40a5fc:	mov    QWORD PTR [rsp+0x20],rbx
  40a601:	lea    r9,[rip+0x2a3fe]        # 0x434a06
  40a608:	lea    r8,[rip+0x2a422]        # 0x434a31
  40a60f:	jmp    0x40a5e6
  40a611:	nop    DWORD PTR [rax+rax*1+0x0]
  40a616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a620:	push   r14
  40a622:	push   r13
  40a624:	push   r12
  40a626:	push   rbp
  40a627:	push   rdi
  40a628:	push   rsi
  40a629:	push   rbx
  40a62a:	sub    rsp,0x40
  40a62e:	mov    eax,DWORD PTR [rdx]
  40a630:	xor    ebx,ebx
  40a632:	xor    r12d,r12d
  40a635:	xor    edi,edi
  40a637:	mov    r14,rcx
  40a63a:	mov    rsi,rdx
  40a63d:	mov    r13,r8
  40a640:	mov    rbp,r9
  40a643:	test   eax,eax
  40a645:	jg     0x40a663
  40a647:	jmp    0x40a703
  40a64c:	nop    DWORD PTR [rax+0x0]
  40a650:	mov    rax,QWORD PTR [r14]
  40a653:	mov    r12,QWORD PTR [rax+rbx*1+0x8]
  40a658:	add    edi,0x1
  40a65b:	add    rbx,0x10
  40a65f:	cmp    edi,DWORD PTR [rsi]
  40a661:	jge    0x40a690
  40a663:	mov    rax,QWORD PTR [r14]
  40a666:	mov    rdx,QWORD PTR [rbp+0x10]
  40a66a:	mov    rcx,r13
  40a66d:	mov    r8,QWORD PTR [rax+rbx*1]
  40a671:	call   0x4075b0
  40a676:	cmp    eax,0x0
  40a679:	jg     0x40a650
  40a67b:	je     0x40a658
  40a67d:	mov    ecx,0x1
  40a682:	call   0x401cb0
  40a687:	nop    WORD PTR [rax+rax*1+0x0]
  40a690:	test   r12,r12
  40a693:	je     0x40a703
  40a695:	lea    rdi,[rip+0x2a3bc]        # 0x434a58
  40a69c:	mov    ecx,0x5
  40a6a1:	mov    rsi,r12
  40a6a4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a6a6:	jne    0x40a6c1
  40a6a8:	mov    DWORD PTR [rbp+0x160],0x1
  40a6b2:	add    rsp,0x40
  40a6b6:	pop    rbx
  40a6b7:	pop    rsi
  40a6b8:	pop    rdi
  40a6b9:	pop    rbp
  40a6ba:	pop    r12
  40a6bc:	pop    r13
  40a6be:	pop    r14
  40a6c0:	ret    
  40a6c1:	mov    rax,QWORD PTR [rbp+0x10]
  40a6c5:	mov    rcx,r12
  40a6c8:	mov    rax,QWORD PTR [rax+0x8]
  40a6cc:	mov    ebx,DWORD PTR [rax+0xc]
  40a6cf:	call   0x422360
  40a6d4:	test   rax,rax
  40a6d7:	je     0x40a740
  40a6d9:	cmp    ebx,DWORD PTR [rax+0x10]
  40a6dc:	jne    0x40a7ba
  40a6e2:	mov    rdx,QWORD PTR [rbp+0x10]
  40a6e6:	mov    QWORD PTR [rbp+0x50],rax
  40a6ea:	mov    eax,DWORD PTR [rax+0x14]
  40a6ed:	mov    rdx,QWORD PTR [rdx+0x8]
  40a6f1:	mov    DWORD PTR [rdx+0x38],eax
  40a6f4:	add    rsp,0x40
  40a6f8:	pop    rbx
  40a6f9:	pop    rsi
  40a6fa:	pop    rdi
  40a6fb:	pop    rbp
  40a6fc:	pop    r12
  40a6fe:	pop    r13
  40a700:	pop    r14
  40a702:	ret    
  40a703:	mov    rax,QWORD PTR [rbp+0x10]
  40a707:	mov    rcx,QWORD PTR [r13+0x10]
  40a70b:	lea    r8,[r13+0x38]
  40a70f:	xor    r9d,r9d
  40a712:	xor    edx,edx
  40a714:	mov    rbx,QWORD PTR [rax+0x8]
  40a718:	mov    eax,DWORD PTR [rbx+0xc]
  40a71b:	mov    DWORD PTR [rsp+0x20],eax
  40a71f:	call   0x4222c0
  40a724:	mov    DWORD PTR [rbx+0x38],eax
  40a727:	mov    rax,QWORD PTR [rbp+0x10]
  40a72b:	mov    rax,QWORD PTR [rax+0x8]
  40a72f:	mov    ecx,DWORD PTR [rax+0x38]
  40a732:	call   0x422368
  40a737:	mov    QWORD PTR [rbp+0x50],rax
  40a73b:	jmp    0x40a6b2
  40a740:	mov    rcx,r12
  40a743:	call   0x4223a8
  40a748:	test   rax,rax
  40a74b:	mov    rsi,rax
  40a74e:	je     0x40a796
  40a750:	mov    ecx,DWORD PTR [rax]
  40a752:	call   0x422368
  40a757:	test   rax,rax
  40a75a:	je     0x40a796
  40a75c:	mov    rdx,QWORD PTR [rsi+0x8]
  40a760:	lea    r9,[rip+0x2a2f6]        # 0x434a5d
  40a767:	lea    r8,[rip+0x2a2a2]        # 0x434a10
  40a76e:	xor    ecx,ecx
  40a770:	mov    QWORD PTR [rsp+0x38],rax
  40a775:	mov    QWORD PTR [rsp+0x28],rdx
  40a77a:	mov    rdx,QWORD PTR [rax]
  40a77d:	mov    QWORD PTR [rsp+0x20],rdx
  40a782:	mov    edx,0x28
  40a787:	call   0x4226c0
  40a78c:	mov    rax,QWORD PTR [rsp+0x38]
  40a791:	jmp    0x40a6d9
  40a796:	lea    r9,[rip+0x2a2c0]        # 0x434a5d
  40a79d:	lea    r8,[rip+0x2a2a3]        # 0x434a47
  40a7a4:	mov    QWORD PTR [rsp+0x20],r12
  40a7a9:	mov    edx,0x8
  40a7ae:	xor    ecx,ecx
  40a7b0:	call   0x4226c0
  40a7b5:	jmp    0x40a67d
  40a7ba:	mov    QWORD PTR [rsp+0x20],r12
  40a7bf:	lea    r9,[rip+0x2a297]        # 0x434a5d
  40a7c6:	lea    r8,[rip+0x2a264]        # 0x434a31
  40a7cd:	jmp    0x40a7a9
  40a7cf:	nop
  40a7d0:	push   r15
  40a7d2:	push   r14
  40a7d4:	push   r13
  40a7d6:	push   r12
  40a7d8:	push   rbp
  40a7d9:	push   rdi
  40a7da:	push   rsi
  40a7db:	push   rbx
  40a7dc:	sub    rsp,0x78
  40a7e0:	movaps XMMWORD PTR [rsp+0x60],xmm6
  40a7e5:	mov    rsi,rdx
  40a7e8:	mov    rbx,rcx
  40a7eb:	xor    edx,edx
  40a7ed:	mov    rcx,rsi
  40a7f0:	mov    r15d,r8d
  40a7f3:	mov    DWORD PTR [rsp+0xd8],r9d
  40a7fb:	call   0x4221f8
  40a800:	mov    rdi,rax
  40a803:	mov    eax,DWORD PTR [rsi+0x2c]
  40a806:	test   rdi,rdi
  40a809:	lea    ebp,[rax-0x1]
  40a80c:	je     0x40b004
  40a812:	cmp    ebp,DWORD PTR [rbx+0x168]
  40a818:	jae    0x40a829
  40a81a:	mov    rdx,QWORD PTR [rbx+0x160]
  40a821:	mov    eax,ebp
  40a823:	mov    eax,DWORD PTR [rdx+rax*4]
  40a826:	mov    DWORD PTR [rdi+0x4],eax
  40a829:	mov    r14,QWORD PTR [rip+0x33080]        # 0x43d8b0
  40a830:	mov    r13,QWORD PTR [rip+0x330a9]        # 0x43d8e0
  40a837:	mov    edx,0x8
  40a83c:	mov    eax,DWORD PTR [r14]
  40a83f:	mov    rcx,QWORD PTR [r13+0x0]
  40a843:	mov    r8,r14
  40a846:	lea    r9d,[rax+0x1]
  40a84a:	call   0x407950
  40a84f:	mov    ecx,0x1d8
  40a854:	mov    QWORD PTR [r13+0x0],rax
  40a858:	call   0x422670
  40a85d:	test   rax,rax
  40a860:	mov    r12,rax
  40a863:	je     0x40af92
  40a869:	movsxd rdx,DWORD PTR [r14]
  40a86c:	mov    rax,QWORD PTR [r13+0x0]
  40a870:	lea    rcx,[rbx+0x28]
  40a874:	mov    r9,r12
  40a877:	mov    r8,rsi
  40a87a:	mov    QWORD PTR [rax+rdx*8-0x8],r12
  40a87f:	mov    rax,QWORD PTR [rip+0x3301a]        # 0x43d8a0
  40a886:	lea    rdx,[rbx+0x30]
  40a88a:	mov    DWORD PTR [r12+0x4],ebp
  40a88f:	mov    QWORD PTR [r12+0x10],rdi
  40a894:	mov    eax,DWORD PTR [rax]
  40a896:	sub    eax,0x1
  40a899:	mov    DWORD PTR [r12],eax
  40a89d:	mov    rax,QWORD PTR [rdi+0x8]
  40a8a1:	mov    DWORD PTR [rax+0xc],r15d
  40a8a5:	call   0x40a620
  40a8aa:	mov    rcx,QWORD PTR [r12+0x50]
  40a8af:	call   0x4223f0
  40a8b4:	test   rax,rax
  40a8b7:	mov    QWORD PTR [r12+0x48],rax
  40a8bc:	je     0x40b021
  40a8c2:	mov    DWORD PTR [rax+0xc],r15d
  40a8c6:	mov    rax,QWORD PTR [r12+0x50]
  40a8cb:	test   rax,rax
  40a8ce:	je     0x40af9c
  40a8d4:	mov    rcx,QWORD PTR [rbx]
  40a8d7:	mov    edx,DWORD PTR [rax+0x14]
  40a8da:	mov    r9,rdi
  40a8dd:	mov    r8,rsi
  40a8e0:	mov    QWORD PTR [rsp+0x48],0x0
  40a8e9:	mov    rcx,QWORD PTR [rcx+0x20]
  40a8ed:	mov    QWORD PTR [rsp+0x20],rax
  40a8f2:	call   0x407600
  40a8f7:	mov    ebp,DWORD PTR [rbx+0x268]
  40a8fd:	mov    QWORD PTR [r12+0x128],rax
  40a905:	test   ebp,ebp
  40a907:	jle    0x40aa5e
  40a90d:	xor    r13d,r13d
  40a910:	xor    ebp,ebp
  40a912:	jmp    0x40a930
  40a914:	mov    rax,QWORD PTR [rbx+0x260]
  40a91b:	mov    rbp,QWORD PTR [rax+r14*1+0x8]
  40a920:	lea    eax,[r13+0x1]
  40a924:	add    r13,0x1
  40a928:	cmp    DWORD PTR [rbx+0x268],eax
  40a92e:	jle    0x40a968
  40a930:	mov    rax,QWORD PTR [rbx+0x260]
  40a937:	mov    r14,r13
  40a93a:	mov    rdx,rdi
  40a93d:	shl    r14,0x4
  40a941:	mov    rcx,rsi
  40a944:	mov    r8,QWORD PTR [rax+r14*1]
  40a948:	call   0x4075b0
  40a94d:	cmp    eax,0x0
  40a950:	jg     0x40a914
  40a952:	jne    0x40af92
  40a958:	lea    eax,[r13+0x1]
  40a95c:	add    r13,0x1
  40a960:	cmp    DWORD PTR [rbx+0x268],eax
  40a966:	jg     0x40a930
  40a968:	test   rbp,rbp
  40a96b:	je     0x40aa5e
  40a971:	lea    rax,[rsp+0x48]
  40a976:	mov    rcx,rbp
  40a979:	mov    r8,rax
  40a97c:	mov    QWORD PTR [rsp+0x38],rax
  40a981:	mov    rax,QWORD PTR [r12+0x50]
  40a986:	mov    rdx,QWORD PTR [rax]
  40a989:	call   0x4082d0
  40a98e:	test   eax,eax
  40a990:	jne    0x40af6b
  40a996:	lea    rax,[r12+0x128]
  40a99e:	mov    rbp,QWORD PTR [rsp+0x48]
  40a9a3:	lea    r14,[rsp+0x50]
  40a9a8:	lea    r13,[rsp+0x58]
  40a9ad:	mov    QWORD PTR [rsp+0x30],rax
  40a9b2:	mov    rcx,r14
  40a9b5:	call   0x422180
  40a9ba:	test   eax,eax
  40a9bc:	jns    0x40a9d4
  40a9be:	jmp    0x40b03e
  40a9c3:	cmp    al,0xa
  40a9c5:	je     0x40a9e0
  40a9c7:	mov    rcx,QWORD PTR [rsp+0x50]
  40a9cc:	movsx  edx,al
  40a9cf:	call   0x422150
  40a9d4:	mov    rcx,rbp
  40a9d7:	call   0x422170
  40a9dc:	test   al,al
  40a9de:	jne    0x40a9c3
  40a9e0:	mov    rcx,QWORD PTR [rsp+0x50]
  40a9e5:	xor    edx,edx
  40a9e7:	call   0x422150
  40a9ec:	mov    rcx,QWORD PTR [rsp+0x50]
  40a9f1:	mov    rdx,r13
  40a9f4:	call   0x4221b8
  40a9f9:	mov    rbp,QWORD PTR [rsp+0x58]
  40a9fe:	movzx  eax,BYTE PTR [rbp+0x0]
  40aa02:	cmp    al,0x23
  40aa04:	je     0x40aa3a
  40aa06:	test   al,al
  40aa08:	je     0x40aa3a
  40aa0a:	mov    edx,0x3d
  40aa0f:	mov    rcx,rbp
  40aa12:	call   0x42fb00
  40aa17:	test   rax,rax
  40aa1a:	je     0x40b047
  40aa20:	mov    rcx,QWORD PTR [rsp+0x30]
  40aa25:	lea    r8,[rax+0x1]
  40aa29:	mov    BYTE PTR [rax],0x0
  40aa2c:	mov    r9d,0x10
  40aa32:	mov    rdx,rbp
  40aa35:	call   0x422808
  40aa3a:	mov    rcx,rbp
  40aa3d:	call   0x422770
  40aa42:	mov    rbp,QWORD PTR [rsp+0x48]
  40aa47:	mov    r11d,DWORD PTR [rbp+0x54]
  40aa4b:	test   r11d,r11d
  40aa4e:	je     0x40a9b2
  40aa54:	mov    rcx,QWORD PTR [rsp+0x38]
  40aa59:	call   0x4221b0
  40aa5e:	mov    r10d,DWORD PTR [rbx+0x188]
  40aa65:	movabs rax,0x7fffffffffffffff
  40aa6f:	xor    ebp,ebp
  40aa71:	mov    QWORD PTR [r12+0x58],rax
  40aa76:	test   r10d,r10d
  40aa79:	jg     0x40aaa2
  40aa7b:	jmp    0x40ab07
  40aa80:	mov    rax,QWORD PTR [rbx+0x180]
  40aa87:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40aa8c:	mov    QWORD PTR [r12+0x58],rax
  40aa91:	mov    eax,DWORD PTR [rbx+0x188]
  40aa97:	lea    edx,[rbp+0x1]
  40aa9a:	add    rbp,0x1
  40aa9e:	cmp    eax,edx
  40aaa0:	jle    0x40aad0
  40aaa2:	mov    rax,QWORD PTR [rbx+0x180]
  40aaa9:	mov    r13,rbp
  40aaac:	mov    rdx,rdi
  40aaaf:	shl    r13,0x4
  40aab3:	mov    rcx,rsi
  40aab6:	mov    r8,QWORD PTR [rax+r13*1]
  40aaba:	call   0x4075b0
  40aabf:	cmp    eax,0x0
  40aac2:	jg     0x40aa80
  40aac4:	je     0x40aa91
  40aac6:	jmp    0x40af92
  40aacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad0:	test   eax,eax
  40aad2:	jle    0x40ab07
  40aad4:	test   r15d,r15d
  40aad7:	mov    r8,QWORD PTR [rbx+0x180]
  40aade:	setne  r9b
  40aae2:	je     0x40af13
  40aae8:	mov    rdx,QWORD PTR [r8]
  40aaeb:	cmp    BYTE PTR [rdx],0x0
  40aaee:	jne    0x40af13
  40aaf4:	lea    r8,[rip+0x2a005]        # 0x434b00
  40aafb:	mov    edx,0x18
  40ab00:	xor    ecx,ecx
  40ab02:	call   0x4226c0
  40ab07:	mov    r9d,DWORD PTR [rbx+0x288]
  40ab0e:	xor    ebp,ebp
  40ab10:	mov    DWORD PTR [r12+0x174],0xffffffff
  40ab1c:	test   r9d,r9d
  40ab1f:	jg     0x40ab46
  40ab21:	jmp    0x40ab7d
  40ab23:	mov    rax,QWORD PTR [rbx+0x280]
  40ab2a:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40ab2f:	mov    DWORD PTR [r12+0x174],eax
  40ab37:	lea    eax,[rbp+0x1]
  40ab3a:	add    rbp,0x1
  40ab3e:	cmp    DWORD PTR [rbx+0x288],eax
  40ab44:	jle    0x40ab7d
  40ab46:	mov    rax,QWORD PTR [rbx+0x280]
  40ab4d:	mov    r13,rbp
  40ab50:	mov    rdx,rdi
  40ab53:	shl    r13,0x4
  40ab57:	mov    rcx,rsi
  40ab5a:	mov    r8,QWORD PTR [rax+r13*1]
  40ab5e:	call   0x4075b0
  40ab63:	cmp    eax,0x0
  40ab66:	jg     0x40ab23
  40ab68:	jne    0x40af92
  40ab6e:	lea    eax,[rbp+0x1]
  40ab71:	add    rbp,0x1
  40ab75:	cmp    DWORD PTR [rbx+0x288],eax
  40ab7b:	jg     0x40ab46
  40ab7d:	mov    r8d,DWORD PTR [rbx+0x198]
  40ab84:	xor    r13d,r13d
  40ab87:	xor    ebp,ebp
  40ab89:	test   r8d,r8d
  40ab8c:	jg     0x40abaf
  40ab8e:	jmp    0x40ac90
  40ab93:	mov    rax,QWORD PTR [rbx+0x190]
  40ab9a:	mov    rbp,QWORD PTR [rax+r14*1+0x8]
  40ab9f:	lea    eax,[r13+0x1]
  40aba3:	add    r13,0x1
  40aba7:	cmp    DWORD PTR [rbx+0x198],eax
  40abad:	jle    0x40abe7
  40abaf:	mov    rax,QWORD PTR [rbx+0x190]
  40abb6:	mov    r14,r13
  40abb9:	mov    rdx,rdi
  40abbc:	shl    r14,0x4
  40abc0:	mov    rcx,rsi
  40abc3:	mov    r8,QWORD PTR [rax+r14*1]
  40abc7:	call   0x4075b0
  40abcc:	cmp    eax,0x0
  40abcf:	jg     0x40ab93
  40abd1:	jne    0x40af92
  40abd7:	lea    eax,[r13+0x1]
  40abdb:	add    r13,0x1
  40abdf:	cmp    DWORD PTR [rbx+0x198],eax
  40abe5:	jg     0x40abaf
  40abe7:	test   rbp,rbp
  40abea:	je     0x40ac90
  40abf0:	lea    rax,[r12+0x148]
  40abf8:	xor    r13d,r13d
  40abfb:	mov    QWORD PTR [rsp+0x30],rax
  40ac00:	jmp    0x40ac70
  40ac02:	lea    rdx,[rax+0x1]
  40ac06:	mov    QWORD PTR [rsp+0x58],rdx
  40ac0b:	mov    BYTE PTR [rax],0x0
  40ac0e:	mov    edx,0x3d
  40ac13:	mov    rcx,rbp
  40ac16:	call   0x42fb00
  40ac1b:	test   rax,rax
  40ac1e:	je     0x40af42
  40ac24:	lea    r14,[rax+0x1]
  40ac28:	mov    BYTE PTR [rax],0x0
  40ac2b:	mov    rcx,rbp
  40ac2e:	call   0x422488
  40ac33:	test   rax,rax
  40ac36:	mov    r15,rax
  40ac39:	je     0x40afe4
  40ac3f:	test   r13,r13
  40ac42:	je     0x40af50
  40ac48:	mov    QWORD PTR [r13+0x18],rax
  40ac4c:	mov    rax,QWORD PTR [r15+0x8]
  40ac50:	mov    rcx,QWORD PTR [rsp+0x30]
  40ac55:	xor    r9d,r9d
  40ac58:	mov    r8,r14
  40ac5b:	mov    rdx,QWORD PTR [rax]
  40ac5e:	call   0x422808
  40ac63:	mov    rbp,QWORD PTR [rsp+0x58]
  40ac68:	test   rbp,rbp
  40ac6b:	je     0x40ac90
  40ac6d:	mov    r13,r15
  40ac70:	mov    edx,0x2c
  40ac75:	mov    rcx,rbp
  40ac78:	call   0x42fb00
  40ac7d:	test   rax,rax
  40ac80:	jne    0x40ac02
  40ac82:	mov    QWORD PTR [rsp+0x58],0x0
  40ac8b:	jmp    0x40ac0e
  40ac8d:	nop    DWORD PTR [rax]
  40ac90:	mov    ecx,DWORD PTR [rbx+0x1a8]
  40ac96:	xor    ebp,ebp
  40ac98:	xor    r14d,r14d
  40ac9b:	test   ecx,ecx
  40ac9d:	jg     0x40acbf
  40ac9f:	jmp    0x40ad2c
  40aca4:	mov    rax,QWORD PTR [rbx+0x1a0]
  40acab:	mov    r14,QWORD PTR [rax+r13*1+0x8]
  40acb0:	lea    eax,[rbp+0x1]
  40acb3:	add    rbp,0x1
  40acb7:	cmp    DWORD PTR [rbx+0x1a8],eax
  40acbd:	jle    0x40acf6
  40acbf:	mov    rax,QWORD PTR [rbx+0x1a0]
  40acc6:	mov    r13,rbp
  40acc9:	mov    rdx,rdi
  40accc:	shl    r13,0x4
  40acd0:	mov    rcx,rsi
  40acd3:	mov    r8,QWORD PTR [rax+r13*1]
  40acd7:	call   0x4075b0
  40acdc:	cmp    eax,0x0
  40acdf:	jg     0x40aca4
  40ace1:	jne    0x40af92
  40ace7:	lea    eax,[rbp+0x1]
  40acea:	add    rbp,0x1
  40acee:	cmp    DWORD PTR [rbx+0x1a8],eax
  40acf4:	jg     0x40acbf
  40acf6:	test   r14,r14
  40acf9:	je     0x40ad2c
  40acfb:	lea    rdx,[rsp+0x58]
  40ad00:	xor    r8d,r8d
  40ad03:	mov    rcx,r14
  40ad06:	call   0x42faa8
  40ad0b:	mov    rdx,QWORD PTR [rsp+0x58]
  40ad10:	cmp    BYTE PTR [rdx],0x0
  40ad13:	je     0x40ad18
  40ad15:	mov    eax,DWORD PTR [r14]
  40ad18:	mov    rdx,QWORD PTR [r12+0x10]
  40ad1d:	mov    rcx,QWORD PTR [r12+0x48]
  40ad22:	mov    rdx,QWORD PTR [rdx+0x8]
  40ad26:	mov    DWORD PTR [rcx+0x3c],eax
  40ad29:	mov    DWORD PTR [rdx+0x3c],eax
  40ad2c:	mov    edx,DWORD PTR [rbx+0x1c8]
  40ad32:	xor    ebp,ebp
  40ad34:	movsd  xmm6,QWORD PTR [rip+0x2e79c]        # 0x4394d8
  40ad3c:	test   edx,edx
  40ad3e:	jg     0x40ad5f
  40ad40:	jmp    0x40adb8
  40ad42:	mov    rax,QWORD PTR [rbx+0x1c0]
  40ad49:	movsd  xmm6,QWORD PTR [rax+r13*1+0x8]
  40ad50:	lea    eax,[rbp+0x1]
  40ad53:	add    rbp,0x1
  40ad57:	cmp    DWORD PTR [rbx+0x1c8],eax
  40ad5d:	jle    0x40ad96
  40ad5f:	mov    rax,QWORD PTR [rbx+0x1c0]
  40ad66:	mov    r13,rbp
  40ad69:	mov    rdx,rdi
  40ad6c:	shl    r13,0x4
  40ad70:	mov    rcx,rsi
  40ad73:	mov    r8,QWORD PTR [rax+r13*1]
  40ad77:	call   0x4075b0
  40ad7c:	cmp    eax,0x0
  40ad7f:	jg     0x40ad42
  40ad81:	jne    0x40af92
  40ad87:	lea    eax,[rbp+0x1]
  40ad8a:	add    rbp,0x1
  40ad8e:	cmp    DWORD PTR [rbx+0x1c8],eax
  40ad94:	jg     0x40ad5f
  40ad96:	ucomisd xmm6,QWORD PTR [rip+0x2e71a]        # 0x4394b8
  40ad9e:	jb     0x40adb8
  40ada0:	mulsd  xmm6,QWORD PTR [rip+0x2e738]        # 0x4394e0
  40ada8:	mov    rdx,QWORD PTR [r12+0x48]
  40adad:	or     DWORD PTR [rdx+0x70],0x2
  40adb1:	cvttsd2si eax,xmm6
  40adb5:	mov    DWORD PTR [rdx+0x68],eax
  40adb8:	mov    eax,DWORD PTR [rbx+0x338]
  40adbe:	xor    ebp,ebp
  40adc0:	test   eax,eax
  40adc2:	jg     0x40adf3
  40adc4:	jmp    0x40ae2a
  40adc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40add0:	mov    rax,QWORD PTR [rbx+0x330]
  40add7:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40addc:	mov    QWORD PTR [r12+0x178],rax
  40ade4:	lea    eax,[rbp+0x1]
  40ade7:	add    rbp,0x1
  40adeb:	cmp    DWORD PTR [rbx+0x338],eax
  40adf1:	jle    0x40ae2a
  40adf3:	mov    rax,QWORD PTR [rbx+0x330]
  40adfa:	mov    r13,rbp
  40adfd:	mov    rdx,rdi
  40ae00:	shl    r13,0x4
  40ae04:	mov    rcx,rsi
  40ae07:	mov    r8,QWORD PTR [rax+r13*1]
  40ae0b:	call   0x4075b0
  40ae10:	cmp    eax,0x0
  40ae13:	jg     0x40add0
  40ae15:	jne    0x40af92
  40ae1b:	lea    eax,[rbp+0x1]
  40ae1e:	add    rbp,0x1
  40ae22:	cmp    DWORD PTR [rbx+0x338],eax
  40ae28:	jg     0x40adf3
  40ae2a:	mov    rcx,QWORD PTR [r12+0x178]
  40ae32:	call   0x422578
  40ae37:	mov    QWORD PTR [r12+0x178],rax
  40ae3f:	mov    rax,QWORD PTR [rsi+0x10]
  40ae43:	test   BYTE PTR [rax+0x2c],0x40
  40ae47:	jne    0x40af5a
  40ae4d:	mov    rax,QWORD PTR [rbx]
  40ae50:	lea    rcx,[r12+0x130]
  40ae58:	xor    r8d,r8d
  40ae5b:	lea    rsi,[r12+0x138]
  40ae63:	mov    rdx,QWORD PTR [rax+0x38]
  40ae67:	call   0x422828
  40ae6c:	mov    rax,QWORD PTR [rbx]
  40ae6f:	xor    r8d,r8d
  40ae72:	mov    rcx,rsi
  40ae75:	mov    rdx,QWORD PTR [rax+0x40]
  40ae79:	call   0x422828
  40ae7e:	mov    rax,QWORD PTR [r12+0x50]
  40ae83:	test   rax,rax
  40ae86:	je     0x40ae99
  40ae88:	mov    ecx,DWORD PTR [rax+0x14]
  40ae8b:	call   0x422438
  40ae90:	cmp    eax,0x18
  40ae93:	je     0x40afc6
  40ae99:	mov    rax,QWORD PTR [rbx]
  40ae9c:	lea    rcx,[r12+0x140]
  40aea4:	xor    r8d,r8d
  40aea7:	mov    rdx,QWORD PTR [rax+0x30]
  40aeab:	call   0x422828
  40aeb0:	movsxd rax,DWORD PTR [rsp+0xd8]
  40aeb8:	test   eax,eax
  40aeba:	mov    DWORD PTR [r12+0x8],eax
  40aebf:	js     0x40aeeb
  40aec1:	mov    rdx,QWORD PTR [rip+0x32928]        # 0x43d7f0
  40aec8:	mov    rdx,QWORD PTR [rdx]
  40aecb:	lea    rax,[rdx+rax*8]
  40aecf:	mov    rdx,QWORD PTR [rax]
  40aed2:	mov    QWORD PTR [r12+0x20],rdx
  40aed7:	mov    rax,QWORD PTR [rax]
  40aeda:	mov    DWORD PTR [rax+0x10],0x0
  40aee1:	mov    rdx,QWORD PTR [rax+0x8]
  40aee5:	mov    eax,DWORD PTR [rax+0x14]
  40aee8:	mov    DWORD PTR [rdx+0x54],eax
  40aeeb:	movabs rax,0x8000000000000000
  40aef5:	movaps xmm6,XMMWORD PTR [rsp+0x60]
  40aefa:	mov    QWORD PTR [r12+0x38],rax
  40aeff:	mov    rax,r12
  40af02:	add    rsp,0x78
  40af06:	pop    rbx
  40af07:	pop    rsi
  40af08:	pop    rdi
  40af09:	pop    rbp
  40af0a:	pop    r12
  40af0c:	pop    r13
  40af0e:	pop    r14
  40af10:	pop    r15
  40af12:	ret    
  40af13:	lea    ecx,[rax-0x1]
  40af16:	xor    eax,eax
  40af18:	shl    rcx,0x4
  40af1c:	jmp    0x40af38
  40af1e:	xchg   ax,ax
  40af20:	mov    rdx,QWORD PTR [r8+rax*1+0x10]
  40af25:	cmp    BYTE PTR [rdx],0x0
  40af28:	sete   dl
  40af2b:	add    rax,0x10
  40af2f:	test   dl,r9b
  40af32:	jne    0x40aaf4
  40af38:	cmp    rax,rcx
  40af3b:	jne    0x40af20
  40af3d:	jmp    0x40ab07
  40af42:	xor    r14d,r14d
  40af45:	jmp    0x40ac2b
  40af4a:	nop    WORD PTR [rax+rax*1+0x0]
  40af50:	mov    QWORD PTR [r12+0x40],rax
  40af55:	jmp    0x40ac4c
  40af5a:	mov    rax,QWORD PTR [r12+0x48]
  40af5f:	or     DWORD PTR [rax+0x70],0x400000
  40af66:	jmp    0x40ae4d
  40af6b:	mov    eax,DWORD PTR [r12+0x4]
  40af70:	lea    r8,[rip+0x29c11]        # 0x434b88
  40af77:	mov    r9,rbp
  40af7a:	mov    edx,0x8
  40af7f:	xor    ecx,ecx
  40af81:	mov    DWORD PTR [rsp+0x28],eax
  40af85:	mov    eax,DWORD PTR [r12]
  40af89:	mov    DWORD PTR [rsp+0x20],eax
  40af8d:	call   0x4226c0
  40af92:	mov    ecx,0x1
  40af97:	call   0x401cb0
  40af9c:	mov    rax,QWORD PTR [rbx]
  40af9f:	mov    r9,rdi
  40afa2:	mov    r8,rsi
  40afa5:	xor    edx,edx
  40afa7:	mov    rcx,QWORD PTR [rax+0x20]
  40afab:	mov    QWORD PTR [rsp+0x20],0x0
  40afb4:	call   0x407600
  40afb9:	mov    QWORD PTR [r12+0x128],rax
  40afc1:	jmp    0x40aa5e
  40afc6:	lea    r8,[rip+0x29b9e]        # 0x434b6b
  40afcd:	lea    rdx,[rip+0x29b9a]        # 0x434b6e
  40afd4:	xor    r9d,r9d
  40afd7:	mov    rcx,rsi
  40afda:	call   0x422808
  40afdf:	jmp    0x40ae99
  40afe4:	lea    r8,[rip+0x29b63]        # 0x434b4e
  40afeb:	xor    ecx,ecx
  40afed:	mov    r9,rbp
  40aff0:	mov    edx,0x8
  40aff5:	call   0x4226c0
  40affa:	mov    ecx,0x1
  40afff:	call   0x401cb0
  40b004:	lea    r8,[rip+0x29a5a]        # 0x434a65
  40b00b:	xor    ecx,ecx
  40b00d:	mov    edx,0x8
  40b012:	call   0x4226c0
  40b017:	mov    ecx,0x1
  40b01c:	call   0x401cb0
  40b021:	lea    r8,[rip+0x29a58]        # 0x434a80
  40b028:	xor    ecx,ecx
  40b02a:	mov    edx,0x10
  40b02f:	call   0x4226c0
  40b034:	mov    ecx,0x1
  40b039:	call   0x401cb0
  40b03e:	lea    r8,[rip+0x29a63]        # 0x434aa8
  40b045:	jmp    0x40b00b
  40b047:	lea    r8,[rip+0x29a8a]        # 0x434ad8
  40b04e:	jmp    0x40b00b
  40b050:	push   r15
  40b052:	push   r14
  40b054:	push   r13
  40b056:	push   r12
  40b058:	push   rbp
  40b059:	push   rdi
  40b05a:	push   rsi
  40b05b:	push   rbx
  40b05c:	sub    rsp,0x28
  40b060:	xor    esi,esi
  40b062:	mov    rbx,rcx
  40b065:	mov    r9d,r8d
  40b068:	mov    r8d,0x3
  40b06e:	mov    rbp,rdx
  40b071:	call   0x40a7d0
  40b076:	mov    ecx,DWORD PTR [rbx+0x278]
  40b07c:	mov    r14,QWORD PTR [rax+0x48]
  40b080:	mov    r13,rax
  40b083:	mov    r12,QWORD PTR [rax+0x10]
  40b087:	test   ecx,ecx
  40b089:	mov    DWORD PTR [r14+0xc],0x3
  40b091:	jg     0x40b0b6
  40b093:	jmp    0x40b0e4
  40b095:	mov    rax,QWORD PTR [rbx+0x270]
  40b09c:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40b0a0:	mov    DWORD PTR [r13+0x170],eax
  40b0a7:	lea    eax,[rsi+0x1]
  40b0aa:	add    rsi,0x1
  40b0ae:	cmp    eax,DWORD PTR [rbx+0x278]
  40b0b4:	jge    0x40b0e4
  40b0b6:	mov    rax,QWORD PTR [rbx+0x270]
  40b0bd:	mov    rdi,rsi
  40b0c0:	mov    rdx,r12
  40b0c3:	shl    rdi,0x4
  40b0c7:	mov    rcx,rbp
  40b0ca:	mov    r8,QWORD PTR [rax+rdi*1]
  40b0ce:	call   0x4075b0
  40b0d3:	cmp    eax,0x0
  40b0d6:	jg     0x40b095
  40b0d8:	je     0x40b0a7
  40b0da:	mov    ecx,0x1
  40b0df:	call   0x401cb0
  40b0e4:	mov    edx,DWORD PTR [r13+0x160]
  40b0eb:	test   edx,edx
  40b0ed:	jne    0x40b161
  40b0ef:	mov    eax,DWORD PTR [rbx+0x70]
  40b0f2:	test   eax,eax
  40b0f4:	jle    0x40b161
  40b0f6:	xor    esi,esi
  40b0f8:	xor    r15d,r15d
  40b0fb:	jmp    0x40b115
  40b0fd:	nop    DWORD PTR [rax]
  40b100:	mov    rax,QWORD PTR [rbx+0x68]
  40b104:	mov    r15,QWORD PTR [rax+rdi*1+0x8]
  40b109:	lea    eax,[rsi+0x1]
  40b10c:	add    rsi,0x1
  40b110:	cmp    DWORD PTR [rbx+0x70],eax
  40b113:	jle    0x40b142
  40b115:	mov    rax,QWORD PTR [rbx+0x68]
  40b119:	mov    rdi,rsi
  40b11c:	mov    rdx,r12
  40b11f:	shl    rdi,0x4
  40b123:	mov    rcx,rbp
  40b126:	mov    r8,QWORD PTR [rax+rdi*1]
  40b12a:	call   0x4075b0
  40b12f:	cmp    eax,0x0
  40b132:	jg     0x40b100
  40b134:	jne    0x40b0da
  40b136:	lea    eax,[rsi+0x1]
  40b139:	add    rsi,0x1
  40b13d:	cmp    DWORD PTR [rbx+0x70],eax
  40b140:	jg     0x40b115
  40b142:	test   r15,r15
  40b145:	je     0x40b161
  40b147:	lea    rdx,[r14+0x98]
  40b14e:	lea    rcx,[r14+0x94]
  40b155:	mov    r8,r15
  40b158:	call   0x4225d8
  40b15d:	test   eax,eax
  40b15f:	js     0x40b175
  40b161:	mov    rax,r13
  40b164:	add    rsp,0x28
  40b168:	pop    rbx
  40b169:	pop    rsi
  40b16a:	pop    rdi
  40b16b:	pop    rbp
  40b16c:	pop    r12
  40b16e:	pop    r13
  40b170:	pop    r14
  40b172:	pop    r15
  40b174:	ret    
  40b175:	lea    r8,[rip+0x29a4c]        # 0x434bc8
  40b17c:	mov    r9,r15
  40b17f:	mov    edx,0x8
  40b184:	xor    ecx,ecx
  40b186:	call   0x4226c0
  40b18b:	jmp    0x40b0da
  40b190:	sub    rsp,0x38
  40b194:	lea    rdx,[rip+0x29a46]        # 0x434be1
  40b19b:	mov    QWORD PTR [rsp+0x50],r8
  40b1a0:	lea    r8,[rsp+0x50]
  40b1a5:	mov    QWORD PTR [rsp+0x58],r9
  40b1aa:	mov    QWORD PTR [rsp+0x28],r8
  40b1af:	call   0x427290
  40b1b4:	add    rsp,0x38
  40b1b8:	ret    
  40b1b9:	nop    DWORD PTR [rax+0x0]
  40b1c0:	push   r15
  40b1c2:	push   r14
  40b1c4:	push   r13
  40b1c6:	push   r12
  40b1c8:	push   rbp
  40b1c9:	push   rdi
  40b1ca:	push   rsi
  40b1cb:	push   rbx
  40b1cc:	sub    rsp,0x58
  40b1d0:	mov    r12,rcx
  40b1d3:	mov    rcx,r8
  40b1d6:	mov    r13,rdx
  40b1d9:	mov    rbx,r8
  40b1dc:	call   0x422750
  40b1e1:	test   rax,rax
  40b1e4:	mov    r14,rax
  40b1e7:	je     0x40b360
  40b1ed:	lea    rbp,[rsp+0x30]
  40b1f2:	lea    r8,[rip+0x29a0d]        # 0x434c06
  40b1f9:	mov    r9,rax
  40b1fc:	mov    edx,0x20
  40b201:	mov    rcx,rbp
  40b204:	call   0x4082b0
  40b209:	mov    rdi,QWORD PTR [rip+0x324c0]        # 0x43d6d0
  40b210:	mov    rsi,QWORD PTR [rip+0x32589]        # 0x43d7a0
  40b217:	xor    ecx,ecx
  40b219:	mov    r8,rbp
  40b21c:	mov    rdx,r13
  40b21f:	mov    rbx,QWORD PTR [rdi]
  40b222:	mov    r15,QWORD PTR [rsi]
  40b225:	mov    QWORD PTR [rdi],0x0
  40b22c:	mov    QWORD PTR [rsi],0x0
  40b233:	call   0x403e80
  40b238:	mov    DWORD PTR [rsp+0x2c],eax
  40b23c:	mov    rax,QWORD PTR [r12]
  40b240:	xor    r8d,r8d
  40b243:	mov    rdx,QWORD PTR [rdi]
  40b246:	lea    rcx,[rax+0x20]
  40b24a:	call   0x422828
  40b24f:	mov    rax,QWORD PTR [r12]
  40b253:	mov    rdx,QWORD PTR [rsi]
  40b256:	xor    r8d,r8d
  40b259:	lea    rcx,[rax+0x28]
  40b25d:	call   0x422828
  40b262:	mov    rcx,rdi
  40b265:	call   0x422820
  40b26a:	mov    rcx,rsi
  40b26d:	call   0x422820
  40b272:	mov    eax,DWORD PTR [rsp+0x2c]
  40b276:	mov    QWORD PTR [rdi],rbx
  40b279:	mov    QWORD PTR [rsi],r15
  40b27c:	test   eax,eax
  40b27e:	js     0x40b31e
  40b284:	mov    rcx,r14
  40b287:	call   0x422748
  40b28c:	lea    r8,[rip+0x29978]        # 0x434c0b
  40b293:	mov    r9d,eax
  40b296:	mov    edx,0x20
  40b29b:	mov    rcx,rbp
  40b29e:	call   0x4082b0
  40b2a3:	mov    edx,0x3a
  40b2a8:	mov    rcx,r13
  40b2ab:	call   0x42fb00
  40b2b0:	test   rax,rax
  40b2b3:	mov    rdi,rax
  40b2b6:	je     0x40b330
  40b2b8:	mov    rcx,rax
  40b2bb:	call   0x42fad8
  40b2c0:	lea    ebx,[rax+0x3]
  40b2c3:	movsxd rbx,ebx
  40b2c6:	mov    rcx,rbx
  40b2c9:	call   0x422670
  40b2ce:	test   rax,rax
  40b2d1:	mov    rsi,rax
  40b2d4:	je     0x40b380
  40b2da:	lea    rdx,[rip+0x28fc5]        # 0x4342a6
  40b2e1:	mov    r8d,0x3
  40b2e7:	mov    rcx,rax
  40b2ea:	call   0x422558
  40b2ef:	mov    r8,rbx
  40b2f2:	mov    rdx,rdi
  40b2f5:	mov    rcx,rsi
  40b2f8:	call   0x422568
  40b2fd:	lea    r9,[rip+0x2c7bc]        # 0x437ac0
  40b304:	mov    r8,rbp
  40b307:	mov    rdx,rsi
  40b30a:	mov    rcx,r12
  40b30d:	call   0x402ef0
  40b312:	mov    rcx,rsi
  40b315:	mov    ebx,eax
  40b317:	call   0x422770
  40b31c:	mov    eax,ebx
  40b31e:	add    rsp,0x58
  40b322:	pop    rbx
  40b323:	pop    rsi
  40b324:	pop    rdi
  40b325:	pop    rbp
  40b326:	pop    r12
  40b328:	pop    r13
  40b32a:	pop    r14
  40b32c:	pop    r15
  40b32e:	ret    
  40b32f:	nop
  40b330:	mov    ecx,0x3
  40b335:	call   0x422670
  40b33a:	test   rax,rax
  40b33d:	mov    rsi,rax
  40b340:	je     0x40b380
  40b342:	lea    rdx,[rip+0x28f5d]        # 0x4342a6
  40b349:	mov    r8d,0x3
  40b34f:	mov    rcx,rsi
  40b352:	call   0x422558
  40b357:	jmp    0x40b2fd
  40b359:	nop    DWORD PTR [rax+0x0]
  40b360:	lea    r8,[rip+0x29883]        # 0x434bea
  40b367:	mov    r9,rbx
  40b36a:	mov    edx,0x10
  40b36f:	xor    ecx,ecx
  40b371:	call   0x4226c0
  40b376:	mov    eax,0xffffffea
  40b37b:	jmp    0x40b31e
  40b37d:	nop    DWORD PTR [rax]
  40b380:	mov    eax,0xfffffff4
  40b385:	jmp    0x40b31e
  40b387:	nop    WORD PTR [rax+rax*1+0x0]
  40b390:	push   r15
  40b392:	push   r14
  40b394:	push   r13
  40b396:	push   r12
  40b398:	push   rbp
  40b399:	push   rdi
  40b39a:	push   rsi
  40b39b:	push   rbx
  40b39c:	sub    rsp,0x78
  40b3a0:	movaps XMMWORD PTR [rsp+0x60],xmm6
  40b3a5:	mov    rsi,rdx
  40b3a8:	mov    rbx,rcx
  40b3ab:	xor    edx,edx
  40b3ad:	mov    rcx,rsi
  40b3b0:	mov    DWORD PTR [rsp+0xd0],r8d
  40b3b8:	call   0x4221f8
  40b3bd:	mov    rdi,rax
  40b3c0:	mov    eax,DWORD PTR [rsi+0x2c]
  40b3c3:	test   rdi,rdi
  40b3c6:	lea    ebp,[rax-0x1]
  40b3c9:	je     0x40bbb4
  40b3cf:	cmp    ebp,DWORD PTR [rbx+0x168]
  40b3d5:	jae    0x40b3e6
  40b3d7:	mov    rdx,QWORD PTR [rbx+0x160]
  40b3de:	mov    eax,ebp
  40b3e0:	mov    eax,DWORD PTR [rdx+rax*4]
  40b3e3:	mov    DWORD PTR [rdi+0x4],eax
  40b3e6:	mov    r14,QWORD PTR [rip+0x324c3]        # 0x43d8b0
  40b3ed:	mov    r13,QWORD PTR [rip+0x324ec]        # 0x43d8e0
  40b3f4:	mov    edx,0x8
  40b3f9:	mov    eax,DWORD PTR [r14]
  40b3fc:	mov    rcx,QWORD PTR [r13+0x0]
  40b400:	mov    r8,r14
  40b403:	lea    r9d,[rax+0x1]
  40b407:	call   0x407950
  40b40c:	mov    ecx,0x1d8
  40b411:	mov    QWORD PTR [r13+0x0],rax
  40b415:	call   0x422670
  40b41a:	test   rax,rax
  40b41d:	mov    r12,rax
  40b420:	je     0x40bb42
  40b426:	movsxd rdx,DWORD PTR [r14]
  40b429:	mov    rax,QWORD PTR [r13+0x0]
  40b42d:	lea    rcx,[rbx+0x28]
  40b431:	mov    r9,r12
  40b434:	mov    r8,rsi
  40b437:	mov    QWORD PTR [rax+rdx*8-0x8],r12
  40b43c:	mov    rax,QWORD PTR [rip+0x3245d]        # 0x43d8a0
  40b443:	lea    rdx,[rbx+0x30]
  40b447:	mov    DWORD PTR [r12+0x4],ebp
  40b44c:	mov    QWORD PTR [r12+0x10],rdi
  40b451:	mov    eax,DWORD PTR [rax]
  40b453:	sub    eax,0x1
  40b456:	mov    DWORD PTR [r12],eax
  40b45a:	mov    rax,QWORD PTR [rdi+0x8]
  40b45e:	mov    DWORD PTR [rax+0xc],0x4
  40b465:	call   0x40a620
  40b46a:	mov    rcx,QWORD PTR [r12+0x50]
  40b46f:	call   0x4223f0
  40b474:	test   rax,rax
  40b477:	mov    QWORD PTR [r12+0x48],rax
  40b47c:	je     0x40bbd1
  40b482:	mov    DWORD PTR [rax+0xc],0x4
  40b489:	mov    rax,QWORD PTR [r12+0x50]
  40b48e:	test   rax,rax
  40b491:	je     0x40bb4c
  40b497:	mov    rcx,QWORD PTR [rbx]
  40b49a:	mov    edx,DWORD PTR [rax+0x14]
  40b49d:	mov    r9,rdi
  40b4a0:	mov    r8,rsi
  40b4a3:	mov    QWORD PTR [rsp+0x48],0x0
  40b4ac:	mov    rcx,QWORD PTR [rcx+0x20]
  40b4b0:	mov    QWORD PTR [rsp+0x20],rax
  40b4b5:	call   0x407600
  40b4ba:	mov    ebp,DWORD PTR [rbx+0x268]
  40b4c0:	mov    QWORD PTR [r12+0x128],rax
  40b4c8:	test   ebp,ebp
  40b4ca:	jle    0x40b62a
  40b4d0:	xor    ebp,ebp
  40b4d2:	xor    r13d,r13d
  40b4d5:	jmp    0x40b4fb
  40b4d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b4e0:	mov    rax,QWORD PTR [rbx+0x260]
  40b4e7:	mov    r13,QWORD PTR [rax+r14*1+0x8]
  40b4ec:	lea    eax,[rbp+0x1]
  40b4ef:	add    rbp,0x1
  40b4f3:	cmp    DWORD PTR [rbx+0x268],eax
  40b4f9:	jle    0x40b532
  40b4fb:	mov    rax,QWORD PTR [rbx+0x260]
  40b502:	mov    r14,rbp
  40b505:	mov    rdx,rdi
  40b508:	shl    r14,0x4
  40b50c:	mov    rcx,rsi
  40b50f:	mov    r8,QWORD PTR [rax+r14*1]
  40b513:	call   0x4075b0
  40b518:	cmp    eax,0x0
  40b51b:	jg     0x40b4e0
  40b51d:	jne    0x40bb42
  40b523:	lea    eax,[rbp+0x1]
  40b526:	add    rbp,0x1
  40b52a:	cmp    DWORD PTR [rbx+0x268],eax
  40b530:	jg     0x40b4fb
  40b532:	test   r13,r13
  40b535:	je     0x40b62a
  40b53b:	lea    rax,[rsp+0x48]
  40b540:	mov    rcx,r13
  40b543:	mov    r8,rax
  40b546:	mov    QWORD PTR [rsp+0x38],rax
  40b54b:	mov    rax,QWORD PTR [r12+0x50]
  40b550:	mov    rdx,QWORD PTR [rax]
  40b553:	call   0x4082d0
  40b558:	test   eax,eax
  40b55a:	jne    0x40bb1b
  40b560:	mov    rbp,QWORD PTR [rsp+0x48]
  40b565:	lea    r14,[rsp+0x50]
  40b56a:	lea    r13,[rsp+0x58]
  40b56f:	lea    r15,[r12+0x128]
  40b577:	nop    WORD PTR [rax+rax*1+0x0]
  40b580:	mov    rcx,r14
  40b583:	call   0x422180
  40b588:	test   eax,eax
  40b58a:	jns    0x40b5a2
  40b58c:	jmp    0x40bbee
  40b591:	cmp    al,0xa
  40b593:	je     0x40b5ae
  40b595:	mov    rcx,QWORD PTR [rsp+0x50]
  40b59a:	movsx  edx,al
  40b59d:	call   0x422150
  40b5a2:	mov    rcx,rbp
  40b5a5:	call   0x422170
  40b5aa:	test   al,al
  40b5ac:	jne    0x40b591
  40b5ae:	mov    rcx,QWORD PTR [rsp+0x50]
  40b5b3:	xor    edx,edx
  40b5b5:	call   0x422150
  40b5ba:	mov    rcx,QWORD PTR [rsp+0x50]
  40b5bf:	mov    rdx,r13
  40b5c2:	call   0x4221b8
  40b5c7:	mov    rbp,QWORD PTR [rsp+0x58]
  40b5cc:	movzx  eax,BYTE PTR [rbp+0x0]
  40b5d0:	cmp    al,0x23
  40b5d2:	je     0x40b606
  40b5d4:	test   al,al
  40b5d6:	je     0x40b606
  40b5d8:	mov    edx,0x3d
  40b5dd:	mov    rcx,rbp
  40b5e0:	call   0x42fb00
  40b5e5:	test   rax,rax
  40b5e8:	je     0x40bbf7
  40b5ee:	lea    r8,[rax+0x1]
  40b5f2:	mov    BYTE PTR [rax],0x0
  40b5f5:	mov    r9d,0x10
  40b5fb:	mov    rdx,rbp
  40b5fe:	mov    rcx,r15
  40b601:	call   0x422808
  40b606:	mov    rcx,rbp
  40b609:	call   0x422770
  40b60e:	mov    rbp,QWORD PTR [rsp+0x48]
  40b613:	mov    r11d,DWORD PTR [rbp+0x54]
  40b617:	test   r11d,r11d
  40b61a:	je     0x40b580
  40b620:	mov    rcx,QWORD PTR [rsp+0x38]
  40b625:	call   0x4221b0
  40b62a:	mov    r10d,DWORD PTR [rbx+0x188]
  40b631:	movabs rax,0x7fffffffffffffff
  40b63b:	xor    ebp,ebp
  40b63d:	mov    QWORD PTR [r12+0x58],rax
  40b642:	test   r10d,r10d
  40b645:	jg     0x40b672
  40b647:	jmp    0x40b6e3
  40b64c:	nop    DWORD PTR [rax+0x0]
  40b650:	mov    rax,QWORD PTR [rbx+0x180]
  40b657:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40b65c:	mov    QWORD PTR [r12+0x58],rax
  40b661:	mov    eax,DWORD PTR [rbx+0x188]
  40b667:	lea    edx,[rbp+0x1]
  40b66a:	add    rbp,0x1
  40b66e:	cmp    eax,edx
  40b670:	jle    0x40b6a0
  40b672:	mov    rax,QWORD PTR [rbx+0x180]
  40b679:	mov    r13,rbp
  40b67c:	mov    rdx,rdi
  40b67f:	shl    r13,0x4
  40b683:	mov    rcx,rsi
  40b686:	mov    r8,QWORD PTR [rax+r13*1]
  40b68a:	call   0x4075b0
  40b68f:	cmp    eax,0x0
  40b692:	jg     0x40b650
  40b694:	je     0x40b661
  40b696:	jmp    0x40bb42
  40b69b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6a0:	test   eax,eax
  40b6a2:	jle    0x40b6e3
  40b6a4:	mov    rdx,QWORD PTR [rbx+0x180]
  40b6ab:	mov    rcx,QWORD PTR [rdx]
  40b6ae:	cmp    BYTE PTR [rcx],0x0
  40b6b1:	je     0x40b6d0
  40b6b3:	lea    ecx,[rax-0x1]
  40b6b6:	xor    eax,eax
  40b6b8:	shl    rcx,0x4
  40b6bc:	cmp    rax,rcx
  40b6bf:	je     0x40b6e3
  40b6c1:	mov    r8,QWORD PTR [rdx+rax*1+0x10]
  40b6c6:	add    rax,0x10
  40b6ca:	cmp    BYTE PTR [r8],0x0
  40b6ce:	jne    0x40b6bc
  40b6d0:	lea    r8,[rip+0x29429]        # 0x434b00
  40b6d7:	mov    edx,0x18
  40b6dc:	xor    ecx,ecx
  40b6de:	call   0x4226c0
  40b6e3:	mov    r9d,DWORD PTR [rbx+0x288]
  40b6ea:	xor    ebp,ebp
  40b6ec:	mov    DWORD PTR [r12+0x174],0xffffffff
  40b6f8:	test   r9d,r9d
  40b6fb:	jg     0x40b723
  40b6fd:	jmp    0x40b75a
  40b6ff:	nop
  40b700:	mov    rax,QWORD PTR [rbx+0x280]
  40b707:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40b70c:	mov    DWORD PTR [r12+0x174],eax
  40b714:	lea    eax,[rbp+0x1]
  40b717:	add    rbp,0x1
  40b71b:	cmp    DWORD PTR [rbx+0x288],eax
  40b721:	jle    0x40b75a
  40b723:	mov    rax,QWORD PTR [rbx+0x280]
  40b72a:	mov    r13,rbp
  40b72d:	mov    rdx,rdi
  40b730:	shl    r13,0x4
  40b734:	mov    rcx,rsi
  40b737:	mov    r8,QWORD PTR [rax+r13*1]
  40b73b:	call   0x4075b0
  40b740:	cmp    eax,0x0
  40b743:	jg     0x40b700
  40b745:	jne    0x40bb42
  40b74b:	lea    eax,[rbp+0x1]
  40b74e:	add    rbp,0x1
  40b752:	cmp    DWORD PTR [rbx+0x288],eax
  40b758:	jg     0x40b723
  40b75a:	mov    r8d,DWORD PTR [rbx+0x198]
  40b761:	xor    r13d,r13d
  40b764:	xor    ebp,ebp
  40b766:	test   r8d,r8d
  40b769:	jg     0x40b78c
  40b76b:	jmp    0x40b870
  40b770:	mov    rax,QWORD PTR [rbx+0x190]
  40b777:	mov    rbp,QWORD PTR [rax+r14*1+0x8]
  40b77c:	lea    eax,[r13+0x1]
  40b780:	add    r13,0x1
  40b784:	cmp    DWORD PTR [rbx+0x198],eax
  40b78a:	jle    0x40b7c4
  40b78c:	mov    rax,QWORD PTR [rbx+0x190]
  40b793:	mov    r14,r13
  40b796:	mov    rdx,rdi
  40b799:	shl    r14,0x4
  40b79d:	mov    rcx,rsi
  40b7a0:	mov    r8,QWORD PTR [rax+r14*1]
  40b7a4:	call   0x4075b0
  40b7a9:	cmp    eax,0x0
  40b7ac:	jg     0x40b770
  40b7ae:	jne    0x40bb42
  40b7b4:	lea    eax,[r13+0x1]
  40b7b8:	add    r13,0x1
  40b7bc:	cmp    DWORD PTR [rbx+0x198],eax
  40b7c2:	jg     0x40b78c
  40b7c4:	test   rbp,rbp
  40b7c7:	je     0x40b870
  40b7cd:	lea    rax,[r12+0x148]
  40b7d5:	xor    r13d,r13d
  40b7d8:	mov    QWORD PTR [rsp+0x38],rax
  40b7dd:	jmp    0x40b84e
  40b7df:	nop
  40b7e0:	lea    rdx,[rax+0x1]
  40b7e4:	mov    QWORD PTR [rsp+0x58],rdx
  40b7e9:	mov    BYTE PTR [rax],0x0
  40b7ec:	mov    edx,0x3d
  40b7f1:	mov    rcx,rbp
  40b7f4:	call   0x42fb00
  40b7f9:	test   rax,rax
  40b7fc:	je     0x40baf5
  40b802:	lea    r15,[rax+0x1]
  40b806:	mov    BYTE PTR [rax],0x0
  40b809:	mov    rcx,rbp
  40b80c:	call   0x422488
  40b811:	test   rax,rax
  40b814:	mov    r14,rax
  40b817:	je     0x40bb94
  40b81d:	test   r13,r13
  40b820:	je     0x40bb00
  40b826:	mov    QWORD PTR [r13+0x18],rax
  40b82a:	mov    rax,QWORD PTR [r14+0x8]
  40b82e:	mov    rcx,QWORD PTR [rsp+0x38]
  40b833:	xor    r9d,r9d
  40b836:	mov    r8,r15
  40b839:	mov    rdx,QWORD PTR [rax]
  40b83c:	call   0x422808
  40b841:	mov    rbp,QWORD PTR [rsp+0x58]
  40b846:	test   rbp,rbp
  40b849:	je     0x40b870
  40b84b:	mov    r13,r14
  40b84e:	mov    edx,0x2c
  40b853:	mov    rcx,rbp
  40b856:	call   0x42fb00
  40b85b:	test   rax,rax
  40b85e:	jne    0x40b7e0
  40b860:	mov    QWORD PTR [rsp+0x58],0x0
  40b869:	jmp    0x40b7ec
  40b86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b870:	mov    ecx,DWORD PTR [rbx+0x1a8]
  40b876:	xor    ebp,ebp
  40b878:	xor    r14d,r14d
  40b87b:	test   ecx,ecx
  40b87d:	jg     0x40b89f
  40b87f:	jmp    0x40b90c
  40b884:	mov    rax,QWORD PTR [rbx+0x1a0]
  40b88b:	mov    r14,QWORD PTR [rax+r13*1+0x8]
  40b890:	lea    eax,[rbp+0x1]
  40b893:	add    rbp,0x1
  40b897:	cmp    DWORD PTR [rbx+0x1a8],eax
  40b89d:	jle    0x40b8d6
  40b89f:	mov    rax,QWORD PTR [rbx+0x1a0]
  40b8a6:	mov    r13,rbp
  40b8a9:	mov    rdx,rdi
  40b8ac:	shl    r13,0x4
  40b8b0:	mov    rcx,rsi
  40b8b3:	mov    r8,QWORD PTR [rax+r13*1]
  40b8b7:	call   0x4075b0
  40b8bc:	cmp    eax,0x0
  40b8bf:	jg     0x40b884
  40b8c1:	jne    0x40bb42
  40b8c7:	lea    eax,[rbp+0x1]
  40b8ca:	add    rbp,0x1
  40b8ce:	cmp    DWORD PTR [rbx+0x1a8],eax
  40b8d4:	jg     0x40b89f
  40b8d6:	test   r14,r14
  40b8d9:	je     0x40b90c
  40b8db:	lea    rdx,[rsp+0x58]
  40b8e0:	xor    r8d,r8d
  40b8e3:	mov    rcx,r14
  40b8e6:	call   0x42faa8
  40b8eb:	mov    rdx,QWORD PTR [rsp+0x58]
  40b8f0:	cmp    BYTE PTR [rdx],0x0
  40b8f3:	je     0x40b8f8
  40b8f5:	mov    eax,DWORD PTR [r14]
  40b8f8:	mov    rdx,QWORD PTR [r12+0x10]
  40b8fd:	mov    rcx,QWORD PTR [r12+0x48]
  40b902:	mov    rdx,QWORD PTR [rdx+0x8]
  40b906:	mov    DWORD PTR [rcx+0x3c],eax
  40b909:	mov    DWORD PTR [rdx+0x3c],eax
  40b90c:	mov    edx,DWORD PTR [rbx+0x1c8]
  40b912:	xor    ebp,ebp
  40b914:	movsd  xmm6,QWORD PTR [rip+0x2dbbc]        # 0x4394d8
  40b91c:	test   edx,edx
  40b91e:	jg     0x40b93f
  40b920:	jmp    0x40b998
  40b922:	mov    rax,QWORD PTR [rbx+0x1c0]
  40b929:	movsd  xmm6,QWORD PTR [rax+r13*1+0x8]
  40b930:	lea    eax,[rbp+0x1]
  40b933:	add    rbp,0x1
  40b937:	cmp    DWORD PTR [rbx+0x1c8],eax
  40b93d:	jle    0x40b976
  40b93f:	mov    rax,QWORD PTR [rbx+0x1c0]
  40b946:	mov    r13,rbp
  40b949:	mov    rdx,rdi
  40b94c:	shl    r13,0x4
  40b950:	mov    rcx,rsi
  40b953:	mov    r8,QWORD PTR [rax+r13*1]
  40b957:	call   0x4075b0
  40b95c:	cmp    eax,0x0
  40b95f:	jg     0x40b922
  40b961:	jne    0x40bb42
  40b967:	lea    eax,[rbp+0x1]
  40b96a:	add    rbp,0x1
  40b96e:	cmp    DWORD PTR [rbx+0x1c8],eax
  40b974:	jg     0x40b93f
  40b976:	ucomisd xmm6,QWORD PTR [rip+0x2db3a]        # 0x4394b8
  40b97e:	jb     0x40b998
  40b980:	mulsd  xmm6,QWORD PTR [rip+0x2db58]        # 0x4394e0
  40b988:	mov    rdx,QWORD PTR [r12+0x48]
  40b98d:	or     DWORD PTR [rdx+0x70],0x2
  40b991:	cvttsd2si eax,xmm6
  40b995:	mov    DWORD PTR [rdx+0x68],eax
  40b998:	mov    eax,DWORD PTR [rbx+0x338]
  40b99e:	xor    ebp,ebp
  40b9a0:	test   eax,eax
  40b9a2:	jg     0x40b9d3
  40b9a4:	jmp    0x40ba0a
  40b9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9b0:	mov    rax,QWORD PTR [rbx+0x330]
  40b9b7:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40b9bc:	mov    QWORD PTR [r12+0x178],rax
  40b9c4:	lea    eax,[rbp+0x1]
  40b9c7:	add    rbp,0x1
  40b9cb:	cmp    DWORD PTR [rbx+0x338],eax
  40b9d1:	jle    0x40ba0a
  40b9d3:	mov    rax,QWORD PTR [rbx+0x330]
  40b9da:	mov    r13,rbp
  40b9dd:	mov    rdx,rdi
  40b9e0:	shl    r13,0x4
  40b9e4:	mov    rcx,rsi
  40b9e7:	mov    r8,QWORD PTR [rax+r13*1]
  40b9eb:	call   0x4075b0
  40b9f0:	cmp    eax,0x0
  40b9f3:	jg     0x40b9b0
  40b9f5:	jne    0x40bb42
  40b9fb:	lea    eax,[rbp+0x1]
  40b9fe:	add    rbp,0x1
  40ba02:	cmp    DWORD PTR [rbx+0x338],eax
  40ba08:	jg     0x40b9d3
  40ba0a:	mov    rcx,QWORD PTR [r12+0x178]
  40ba12:	call   0x422578
  40ba17:	mov    QWORD PTR [r12+0x178],rax
  40ba1f:	mov    rax,QWORD PTR [rsi+0x10]
  40ba23:	test   BYTE PTR [rax+0x2c],0x40
  40ba27:	jne    0x40bb0a
  40ba2d:	mov    rax,QWORD PTR [rbx]
  40ba30:	lea    rcx,[r12+0x130]
  40ba38:	xor    r8d,r8d
  40ba3b:	lea    rsi,[r12+0x138]
  40ba43:	mov    rdx,QWORD PTR [rax+0x38]
  40ba47:	call   0x422828
  40ba4c:	mov    rax,QWORD PTR [rbx]
  40ba4f:	xor    r8d,r8d
  40ba52:	mov    rcx,rsi
  40ba55:	mov    rdx,QWORD PTR [rax+0x40]
  40ba59:	call   0x422828
  40ba5e:	mov    rax,QWORD PTR [r12+0x50]
  40ba63:	test   rax,rax
  40ba66:	je     0x40ba79
  40ba68:	mov    ecx,DWORD PTR [rax+0x14]
  40ba6b:	call   0x422438
  40ba70:	cmp    eax,0x18
  40ba73:	je     0x40bb76
  40ba79:	mov    rax,QWORD PTR [rbx]
  40ba7c:	lea    rcx,[r12+0x140]
  40ba84:	xor    r8d,r8d
  40ba87:	mov    rdx,QWORD PTR [rax+0x30]
  40ba8b:	call   0x422828
  40ba90:	mov    eax,DWORD PTR [rsp+0xd0]
  40ba97:	test   eax,eax
  40ba99:	mov    DWORD PTR [r12+0x8],eax
  40ba9e:	js     0x40bacd
  40baa0:	movsxd r15,eax
  40baa3:	mov    rax,QWORD PTR [rip+0x31d46]        # 0x43d7f0
  40baaa:	mov    rax,QWORD PTR [rax]
  40baad:	lea    rax,[rax+r15*8]
  40bab1:	mov    rdx,QWORD PTR [rax]
  40bab4:	mov    QWORD PTR [r12+0x20],rdx
  40bab9:	mov    rax,QWORD PTR [rax]
  40babc:	mov    DWORD PTR [rax+0x10],0x0
  40bac3:	mov    rdx,QWORD PTR [rax+0x8]
  40bac7:	mov    eax,DWORD PTR [rax+0x14]
  40baca:	mov    DWORD PTR [rdx+0x54],eax
  40bacd:	movabs rax,0x8000000000000000
  40bad7:	movaps xmm6,XMMWORD PTR [rsp+0x60]
  40badc:	mov    QWORD PTR [r12+0x38],rax
  40bae1:	mov    rax,r12
  40bae4:	add    rsp,0x78
  40bae8:	pop    rbx
  40bae9:	pop    rsi
  40baea:	pop    rdi
  40baeb:	pop    rbp
  40baec:	pop    r12
  40baee:	pop    r13
  40baf0:	pop    r14
  40baf2:	pop    r15
  40baf4:	ret    
  40baf5:	xor    r15d,r15d
  40baf8:	jmp    0x40b809
  40bafd:	nop    DWORD PTR [rax]
  40bb00:	mov    QWORD PTR [r12+0x40],rax
  40bb05:	jmp    0x40b82a
  40bb0a:	mov    rax,QWORD PTR [r12+0x48]
  40bb0f:	or     DWORD PTR [rax+0x70],0x400000
  40bb16:	jmp    0x40ba2d
  40bb1b:	mov    eax,DWORD PTR [r12+0x4]
  40bb20:	lea    r8,[rip+0x29061]        # 0x434b88
  40bb27:	mov    r9,r13
  40bb2a:	mov    edx,0x8
  40bb2f:	xor    ecx,ecx
  40bb31:	mov    DWORD PTR [rsp+0x28],eax
  40bb35:	mov    eax,DWORD PTR [r12]
  40bb39:	mov    DWORD PTR [rsp+0x20],eax
  40bb3d:	call   0x4226c0
  40bb42:	mov    ecx,0x1
  40bb47:	call   0x401cb0
  40bb4c:	mov    rax,QWORD PTR [rbx]
  40bb4f:	mov    r9,rdi
  40bb52:	mov    r8,rsi
  40bb55:	xor    edx,edx
  40bb57:	mov    rcx,QWORD PTR [rax+0x20]
  40bb5b:	mov    QWORD PTR [rsp+0x20],0x0
  40bb64:	call   0x407600
  40bb69:	mov    QWORD PTR [r12+0x128],rax
  40bb71:	jmp    0x40b62a
  40bb76:	lea    r8,[rip+0x28fee]        # 0x434b6b
  40bb7d:	lea    rdx,[rip+0x28fea]        # 0x434b6e
  40bb84:	xor    r9d,r9d
  40bb87:	mov    rcx,rsi
  40bb8a:	call   0x422808
  40bb8f:	jmp    0x40ba79
  40bb94:	lea    r8,[rip+0x28fb3]        # 0x434b4e
  40bb9b:	xor    ecx,ecx
  40bb9d:	mov    r9,rbp
  40bba0:	mov    edx,0x8
  40bba5:	call   0x4226c0
  40bbaa:	mov    ecx,0x1
  40bbaf:	call   0x401cb0
  40bbb4:	lea    r8,[rip+0x28eaa]        # 0x434a65
  40bbbb:	xor    ecx,ecx
  40bbbd:	mov    edx,0x8
  40bbc2:	call   0x4226c0
  40bbc7:	mov    ecx,0x1
  40bbcc:	call   0x401cb0
  40bbd1:	lea    r8,[rip+0x28ea8]        # 0x434a80
  40bbd8:	xor    ecx,ecx
  40bbda:	mov    edx,0x10
  40bbdf:	call   0x4226c0
  40bbe4:	mov    ecx,0x1
  40bbe9:	call   0x401cb0
  40bbee:	lea    r8,[rip+0x28eb3]        # 0x434aa8
  40bbf5:	jmp    0x40bbbb
  40bbf7:	lea    r8,[rip+0x28eda]        # 0x434ad8
  40bbfe:	jmp    0x40bbbb
  40bc00:	push   r15
  40bc02:	push   r14
  40bc04:	push   r13
  40bc06:	push   r12
  40bc08:	push   rbp
  40bc09:	push   rdi
  40bc0a:	push   rsi
  40bc0b:	push   rbx
  40bc0c:	sub    rsp,0x38
  40bc10:	xor    edi,edi
  40bc12:	mov    rbx,rcx
  40bc15:	mov    r9d,r8d
  40bc18:	mov    r8d,0x1
  40bc1e:	mov    rsi,rdx
  40bc21:	call   0x40a7d0
  40bc26:	mov    r15d,DWORD PTR [rbx+0x2a8]
  40bc2d:	mov    r14,QWORD PTR [rax+0x48]
  40bc31:	mov    r12,rax
  40bc34:	mov    rbp,QWORD PTR [rax+0x10]
  40bc38:	test   r15d,r15d
  40bc3b:	mov    DWORD PTR [r14+0xc],0x1
  40bc43:	jg     0x40bc73
  40bc45:	jmp    0x40bca1
  40bc47:	nop    WORD PTR [rax+rax*1+0x0]
  40bc50:	mov    rax,QWORD PTR [rbx+0x2a0]
  40bc57:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40bc5c:	mov    QWORD PTR [r12+0x120],rax
  40bc64:	lea    eax,[rdi+0x1]
  40bc67:	add    rdi,0x1
  40bc6b:	cmp    DWORD PTR [rbx+0x2a8],eax
  40bc71:	jle    0x40bca1
  40bc73:	mov    rax,QWORD PTR [rbx+0x2a0]
  40bc7a:	mov    r13,rdi
  40bc7d:	mov    rdx,rbp
  40bc80:	shl    r13,0x4
  40bc84:	mov    rcx,rsi
  40bc87:	mov    r8,QWORD PTR [rax+r13*1]
  40bc8b:	call   0x4075b0
  40bc90:	cmp    eax,0x0
  40bc93:	jg     0x40bc50
  40bc95:	je     0x40bc64
  40bc97:	mov    ecx,0x1
  40bc9c:	call   0x401cb0
  40bca1:	mov    r13d,DWORD PTR [rbx+0x298]
  40bca8:	xor    edi,edi
  40bcaa:	test   r13d,r13d
  40bcad:	jg     0x40bcd4
  40bcaf:	jmp    0x40bd07
  40bcb1:	mov    rax,QWORD PTR [rbx+0x290]
  40bcb8:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40bcbd:	mov    QWORD PTR [r12+0x118],rax
  40bcc5:	lea    eax,[rdi+0x1]
  40bcc8:	add    rdi,0x1
  40bccc:	cmp    DWORD PTR [rbx+0x298],eax
  40bcd2:	jle    0x40bd07
  40bcd4:	mov    rax,QWORD PTR [rbx+0x290]
  40bcdb:	mov    r13,rdi
  40bcde:	mov    rdx,rbp
  40bce1:	shl    r13,0x4
  40bce5:	mov    rcx,rsi
  40bce8:	mov    r8,QWORD PTR [rax+r13*1]
  40bcec:	call   0x4075b0
  40bcf1:	cmp    eax,0x0
  40bcf4:	jg     0x40bcb1
  40bcf6:	jne    0x40bc97
  40bcf8:	lea    eax,[rdi+0x1]
  40bcfb:	add    rdi,0x1
  40bcff:	cmp    DWORD PTR [rbx+0x298],eax
  40bd05:	jg     0x40bcd4
  40bd07:	mov    r11d,DWORD PTR [r12+0x160]
  40bd0f:	test   r11d,r11d
  40bd12:	jne    0x40bfd0
  40bd18:	mov    r10d,DWORD PTR [rbx+0x40]
  40bd1c:	xor    edi,edi
  40bd1e:	test   r10d,r10d
  40bd21:	jg     0x40c022
  40bd27:	nop    WORD PTR [rax+rax*1+0x0]
  40bd30:	mov    r9d,DWORD PTR [rbx+0x1b8]
  40bd37:	xor    edi,edi
  40bd39:	xor    r15d,r15d
  40bd3c:	test   r9d,r9d
  40bd3f:	jg     0x40bd5e
  40bd41:	jmp    0x40bdb2
  40bd43:	mov    rax,QWORD PTR [rbx+0x1b0]
  40bd4a:	mov    r15,QWORD PTR [rax+r13*1+0x8]
  40bd4f:	lea    eax,[rdi+0x1]
  40bd52:	add    rdi,0x1
  40bd56:	cmp    DWORD PTR [rbx+0x1b8],eax
  40bd5c:	jle    0x40bd95
  40bd5e:	mov    rax,QWORD PTR [rbx+0x1b0]
  40bd65:	mov    r13,rdi
  40bd68:	mov    rdx,rbp
  40bd6b:	shl    r13,0x4
  40bd6f:	mov    rcx,rsi
  40bd72:	mov    r8,QWORD PTR [rax+r13*1]
  40bd76:	call   0x4075b0
  40bd7b:	cmp    eax,0x0
  40bd7e:	jg     0x40bd43
  40bd80:	jne    0x40bc97
  40bd86:	lea    eax,[rdi+0x1]
  40bd89:	add    rdi,0x1
  40bd8d:	cmp    DWORD PTR [rbx+0x1b8],eax
  40bd93:	jg     0x40bd5e
  40bd95:	test   r15,r15
  40bd98:	je     0x40bdb2
  40bd9a:	mov    rcx,r15
  40bd9d:	call   0x4226f8
  40bda2:	cmp    eax,0xffffffff
  40bda5:	mov    DWORD PTR [r14+0x1d8],eax
  40bdac:	je     0x40c0be
  40bdb2:	mov    r8d,DWORD PTR [rbx+0x50]
  40bdb6:	xor    edi,edi
  40bdb8:	test   r8d,r8d
  40bdbb:	jg     0x40bddc
  40bdbd:	jmp    0x40be0d
  40bdbf:	nop
  40bdc0:	mov    rax,QWORD PTR [rbx+0x48]
  40bdc4:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40bdc9:	mov    DWORD PTR [r14+0x1d0],eax
  40bdd0:	lea    eax,[rdi+0x1]
  40bdd3:	add    rdi,0x1
  40bdd7:	cmp    DWORD PTR [rbx+0x50],eax
  40bdda:	jle    0x40be0d
  40bddc:	mov    rax,QWORD PTR [rbx+0x48]
  40bde0:	mov    r13,rdi
  40bde3:	mov    rdx,rbp
  40bde6:	shl    r13,0x4
  40bdea:	mov    rcx,rsi
  40bded:	mov    r8,QWORD PTR [rax+r13*1]
  40bdf1:	call   0x4075b0
  40bdf6:	cmp    eax,0x0
  40bdf9:	jg     0x40bdc0
  40bdfb:	jne    0x40bc97
  40be01:	lea    eax,[rdi+0x1]
  40be04:	add    rdi,0x1
  40be08:	cmp    DWORD PTR [rbx+0x50],eax
  40be0b:	jg     0x40bddc
  40be0d:	mov    ecx,DWORD PTR [rbx+0x318]
  40be13:	xor    edi,edi
  40be15:	test   ecx,ecx
  40be17:	jg     0x40be43
  40be19:	jmp    0x40be7a
  40be1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40be20:	mov    rax,QWORD PTR [rbx+0x310]
  40be27:	mov    rax,QWORD PTR [rax+r13*1+0x8]
  40be2c:	mov    QWORD PTR [r12+0x150],rax
  40be34:	lea    eax,[rdi+0x1]
  40be37:	add    rdi,0x1
  40be3b:	cmp    DWORD PTR [rbx+0x318],eax
  40be41:	jle    0x40be7a
  40be43:	mov    rax,QWORD PTR [rbx+0x310]
  40be4a:	mov    r13,rdi
  40be4d:	mov    rdx,rbp
  40be50:	shl    r13,0x4
  40be54:	mov    rcx,rsi
  40be57:	mov    r8,QWORD PTR [rax+r13*1]
  40be5b:	call   0x4075b0
  40be60:	cmp    eax,0x0
  40be63:	jg     0x40be20
  40be65:	jne    0x40bc97
  40be6b:	lea    eax,[rdi+0x1]
  40be6e:	add    rdi,0x1
  40be72:	cmp    DWORD PTR [rbx+0x318],eax
  40be78:	jg     0x40be43
  40be7a:	mov    rcx,QWORD PTR [r12+0x150]
  40be82:	call   0x422578
  40be87:	mov    rcx,QWORD PTR [r12+0x120]
  40be8f:	mov    QWORD PTR [r12+0x150],rax
  40be97:	mov    rax,QWORD PTR [r12+0x10]
  40be9c:	test   rcx,rcx
  40be9f:	je     0x40c07d
  40bea5:	cmp    QWORD PTR [r12+0x118],0x0
  40beae:	jne    0x40c0d9
  40beb4:	call   0x4086e0
  40beb9:	test   rax,rax
  40bebc:	mov    QWORD PTR [r12+0x110],rax
  40bec4:	je     0x40bc97
  40beca:	mov    edx,DWORD PTR [rbx+0x108]
  40bed0:	xor    edi,edi
  40bed2:	xor    esi,esi
  40bed4:	lea    r13,[r12+0xe8]
  40bedc:	mov    r14,QWORD PTR [rip+0x3190d]        # 0x43d7f0
  40bee3:	test   edx,edx
  40bee5:	jg     0x40bf05
  40bee7:	jmp    0x40bfc0
  40beec:	nop    DWORD PTR [rax+0x0]
  40bef0:	cmp    eax,DWORD PTR [r12]
  40bef4:	je     0x40bf17
  40bef6:	add    esi,0x1
  40bef9:	add    rdi,0x14
  40befd:	cmp    esi,edx
  40beff:	jge    0x40bfc0
  40bf05:	mov    rbp,rdi
  40bf08:	add    rbp,QWORD PTR [rbx+0x100]
  40bf0f:	mov    eax,DWORD PTR [rbp+0xc]
  40bf12:	cmp    eax,0xffffffff
  40bf15:	jne    0x40bef0
  40bf17:	mov    eax,DWORD PTR [rbp+0x10]
  40bf1a:	cmp    eax,0xffffffff
  40bf1d:	je     0x40bf28
  40bf1f:	mov    rcx,QWORD PTR [r12+0x10]
  40bf24:	cmp    eax,DWORD PTR [rcx]
  40bf26:	jne    0x40bef6
  40bf28:	cmp    DWORD PTR [rbp+0x8],0xffffffff
  40bf2c:	je     0x40bf60
  40bf2e:	movsxd rax,DWORD PTR [r12+0x8]
  40bf33:	test   eax,eax
  40bf35:	js     0x40c050
  40bf3b:	mov    rcx,QWORD PTR [r14]
  40bf3e:	mov    rax,QWORD PTR [rcx+rax*8]
  40bf42:	test   rax,rax
  40bf45:	je     0x40bf60
  40bf47:	mov    ecx,DWORD PTR [rbp+0x0]
  40bf4a:	cmp    DWORD PTR [rax],ecx
  40bf4c:	jne    0x40bef6
  40bf4e:	mov    rax,QWORD PTR [rax+0x8]
  40bf52:	mov    ecx,DWORD PTR [rbp+0x4]
  40bf55:	cmp    DWORD PTR [rax],ecx
  40bf57:	jne    0x40bef6
  40bf59:	nop    DWORD PTR [rax+0x0]
  40bf60:	mov    eax,DWORD PTR [r12+0xf0]
  40bf68:	mov    r8d,0x4
  40bf6e:	mov    rcx,r13
  40bf71:	lea    edx,[rax+0x1]
  40bf74:	movsxd rdx,edx
  40bf77:	call   0x4225a8
  40bf7c:	test   eax,eax
  40bf7e:	js     0x40bc97
  40bf84:	movsxd rax,DWORD PTR [r12+0xf0]
  40bf8c:	mov    rdx,QWORD PTR [r12+0xe8]
  40bf94:	add    esi,0x1
  40bf97:	add    rdi,0x14
  40bf9b:	lea    ecx,[rax+0x1]
  40bf9e:	mov    DWORD PTR [r12+0xf0],ecx
  40bfa6:	mov    ecx,DWORD PTR [rbp+0x8]
  40bfa9:	mov    DWORD PTR [rdx+rax*4],ecx
  40bfac:	mov    edx,DWORD PTR [rbx+0x108]
  40bfb2:	cmp    esi,edx
  40bfb4:	jl     0x40bf05
  40bfba:	nop    WORD PTR [rax+rax*1+0x0]
  40bfc0:	mov    eax,DWORD PTR [r12+0x160]
  40bfc8:	test   eax,eax
  40bfca:	je     0x40bfee
  40bfcc:	nop    DWORD PTR [rax+0x0]
  40bfd0:	cmp    QWORD PTR [r12+0x120],0x0
  40bfd9:	jne    0x40c0b1
  40bfdf:	cmp    QWORD PTR [r12+0x118],0x0
  40bfe8:	jne    0x40c0b1
  40bfee:	mov    rax,r12
  40bff1:	add    rsp,0x38
  40bff5:	pop    rbx
  40bff6:	pop    rsi
  40bff7:	pop    rdi
  40bff8:	pop    rbp
  40bff9:	pop    r12
  40bffb:	pop    r13
  40bffd:	pop    r14
  40bfff:	pop    r15
  40c001:	ret    
  40c002:	mov    rax,QWORD PTR [rbx+0x38]
  40c006:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40c00b:	mov    DWORD PTR [r14+0x1d4],eax
  40c012:	lea    eax,[rdi+0x1]
  40c015:	add    rdi,0x1
  40c019:	cmp    DWORD PTR [rbx+0x40],eax
  40c01c:	jle    0x40bd30
  40c022:	mov    rax,QWORD PTR [rbx+0x38]
  40c026:	mov    r13,rdi
  40c029:	mov    rdx,rbp
  40c02c:	shl    r13,0x4
  40c030:	mov    rcx,rsi
  40c033:	mov    r8,QWORD PTR [rax+r13*1]
  40c037:	call   0x4075b0
  40c03c:	cmp    eax,0x0
  40c03f:	jg     0x40c002
  40c041:	je     0x40c012
  40c043:	jmp    0x40bc97
  40c048:	nop    DWORD PTR [rax+rax*1+0x0]
  40c050:	mov    rax,QWORD PTR [r12+0x10]
  40c055:	lea    r8,[rip+0x28c1c]        # 0x434c78
  40c05c:	mov    edx,0x8
  40c061:	xor    ecx,ecx
  40c063:	mov    eax,DWORD PTR [rax]
  40c065:	mov    DWORD PTR [rsp+0x20],eax
  40c069:	mov    r9d,DWORD PTR [r12]
  40c06d:	call   0x4226c0
  40c072:	mov    edx,DWORD PTR [rbx+0x108]
  40c078:	jmp    0x40bef6
  40c07d:	mov    rcx,QWORD PTR [r12+0x118]
  40c085:	test   rcx,rcx
  40c088:	je     0x40c094
  40c08a:	call   0x422578
  40c08f:	jmp    0x40beb9
  40c094:	mov    rax,QWORD PTR [rax+0x8]
  40c098:	lea    rcx,[rip+0x28b74]        # 0x434c13
  40c09f:	mov    edx,DWORD PTR [rax+0xc]
  40c0a2:	lea    rax,[rip+0x28b65]        # 0x434c0e
  40c0a9:	test   edx,edx
  40c0ab:	cmove  rcx,rax
  40c0af:	jmp    0x40c08a
  40c0b1:	mov    edx,0x1
  40c0b6:	mov    rcx,r12
  40c0b9:	call   0x430090
  40c0be:	lea    r8,[rip+0x28b54]        # 0x434c19
  40c0c5:	mov    r9,r15
  40c0c8:	mov    edx,0x8
  40c0cd:	xor    ecx,ecx
  40c0cf:	call   0x4226c0
  40c0d4:	jmp    0x40bc97
  40c0d9:	mov    eax,DWORD PTR [rax]
  40c0db:	lea    r8,[rip+0x28b56]        # 0x434c38
  40c0e2:	xor    ecx,ecx
  40c0e4:	mov    edx,0x10
  40c0e9:	mov    DWORD PTR [rsp+0x20],eax
  40c0ed:	mov    rax,QWORD PTR [rip+0x317ac]        # 0x43d8a0
  40c0f4:	mov    r9d,DWORD PTR [rax]
  40c0f7:	call   0x4226c0
  40c0fc:	mov    ecx,0x1
  40c101:	call   0x401cb0
  40c106:	nop
  40c107:	nop    WORD PTR [rax+rax*1+0x0]
  40c110:	push   r15
  40c112:	push   r14
  40c114:	push   r13
  40c116:	push   r12
  40c118:	push   rbp
  40c119:	push   rdi
  40c11a:	push   rsi
  40c11b:	push   rbx
  40c11c:	sub    rsp,0xb8
  40c123:	mov    r15,rcx
  40c126:	mov    rcx,QWORD PTR [rcx+0x20]
  40c12a:	mov    QWORD PTR [rsp+0x108],rdx
  40c132:	mov    QWORD PTR [rsp+0x98],0x0
  40c13e:	test   rcx,rcx
  40c141:	je     0x40d280
  40c147:	call   0x4222e8
  40c14c:	test   rax,rax
  40c14f:	mov    rbx,rax
  40c152:	je     0x40d9ea
  40c158:	mov    rsi,QWORD PTR [rsp+0x108]
  40c160:	lea    rdi,[rip+0x27e4c]        # 0x433fb3
  40c167:	mov    ecx,0x2
  40c16c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c16e:	seta   al
  40c171:	setb   dl
  40c174:	sub    eax,edx
  40c176:	movsx  eax,al
  40c179:	test   eax,eax
  40c17b:	jne    0x40c951
  40c181:	lea    rdx,[rip+0x27e25]        # 0x433fad
  40c188:	mov    QWORD PTR [rsp+0x108],rdx
  40c190:	and    DWORD PTR [rip+0x24f6e],eax        # 0x431104
  40c196:	call   0x422248
  40c19b:	test   rax,rax
  40c19e:	mov    QWORD PTR [rsp+0x88],rax
  40c1a6:	je     0x40d9ce
  40c1ac:	movsxd rax,DWORD PTR [r15+0x50]
  40c1b0:	test   eax,eax
  40c1b2:	jne    0x40d34d
  40c1b8:	test   rbx,rbx
  40c1bb:	setne  sil
  40c1bf:	je     0x40c27f
  40c1c5:	mov    edi,DWORD PTR [r15+0x40]
  40c1c9:	test   edi,edi
  40c1cb:	je     0x40c221
  40c1cd:	cmp    QWORD PTR [rbx+0x28],0x0
  40c1d2:	je     0x40c27f
  40c1d8:	lea    rcx,[rbx+0x28]
  40c1dc:	lea    rdx,[rip+0x28b01]        # 0x434ce4
  40c1e3:	xor    r9d,r9d
  40c1e6:	xor    r8d,r8d
  40c1e9:	mov    DWORD PTR [rsp+0x20],0x2
  40c1f1:	call   0x422638
  40c1f6:	test   rax,rax
  40c1f9:	je     0x40c221
  40c1fb:	movsxd rax,DWORD PTR [r15+0x40]
  40c1ff:	mov    rdx,QWORD PTR [r15]
  40c202:	xor    r9d,r9d
  40c205:	lea    rcx,[rdx+0x28]
  40c209:	lea    rdx,[rip+0x28ad4]        # 0x434ce4
  40c210:	shl    rax,0x4
  40c214:	add    rax,QWORD PTR [r15+0x38]
  40c218:	movsxd r8,DWORD PTR [rax-0x8]
  40c21c:	call   0x422800
  40c221:	test   sil,sil
  40c224:	je     0x40c27f
  40c226:	mov    r11d,DWORD PTR [r15+0x60]
  40c22a:	test   r11d,r11d
  40c22d:	je     0x40c27f
  40c22f:	cmp    QWORD PTR [rbx+0x28],0x0
  40c234:	je     0x40c27f
  40c236:	lea    rcx,[rbx+0x28]
  40c23a:	lea    rdx,[rip+0x28aac]        # 0x434ced
  40c241:	xor    r9d,r9d
  40c244:	xor    r8d,r8d
  40c247:	mov    DWORD PTR [rsp+0x20],0x2
  40c24f:	call   0x422638
  40c254:	test   rax,rax
  40c257:	je     0x40c27f
  40c259:	movsxd rax,DWORD PTR [r15+0x60]
  40c25d:	mov    rdx,QWORD PTR [r15]
  40c260:	xor    r9d,r9d
  40c263:	lea    rcx,[rdx+0x28]
  40c267:	lea    rdx,[rip+0x28a7f]        # 0x434ced
  40c26e:	shl    rax,0x4
  40c272:	add    rax,QWORD PTR [r15+0x58]
  40c276:	mov    r8,QWORD PTR [rax-0x8]
  40c27a:	call   0x422808
  40c27f:	movsxd rax,DWORD PTR [r15+0x70]
  40c283:	test   eax,eax
  40c285:	jne    0x40d326
  40c28b:	movsxd rax,DWORD PTR [r15+0x80]
  40c292:	test   eax,eax
  40c294:	jne    0x40d2d1
  40c29a:	mov    eax,DWORD PTR [r15+0x30]
  40c29e:	test   eax,eax
  40c2a0:	jle    0x40d2ff
  40c2a6:	mov    rdx,QWORD PTR [r15+0x28]
  40c2aa:	lea    ecx,[rax-0x1]
  40c2ad:	lea    rbp,[rip+0x28a5b]        # 0x434d0f
  40c2b4:	xor    r13d,r13d
  40c2b7:	mov    r11d,0x2
  40c2bd:	shl    rcx,0x4
  40c2c1:	lea    r8,[rdx+0x8]
  40c2c5:	lea    r10,[rdx+rcx*1+0x18]
  40c2ca:	mov    r9,r8
  40c2cd:	nop    DWORD PTR [rax]
  40c2d0:	mov    rsi,QWORD PTR [r9-0x8]
  40c2d4:	mov    rdi,rbp
  40c2d7:	mov    rcx,r11
  40c2da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2dc:	jne    0x40c2e1
  40c2de:	mov    r13,QWORD PTR [r9]
  40c2e1:	add    r9,0x10
  40c2e5:	cmp    r9,r10
  40c2e8:	jne    0x40c2d0
  40c2ea:	lea    r11,[rip+0x28a20]        # 0x434d11
  40c2f1:	xor    r14d,r14d
  40c2f4:	mov    r9d,0x2
  40c2fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c300:	mov    rsi,QWORD PTR [r8-0x8]
  40c304:	mov    rdi,r11
  40c307:	mov    rcx,r9
  40c30a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c30c:	jne    0x40c311
  40c30e:	mov    r14,QWORD PTR [r8]
  40c311:	add    r8,0x10
  40c315:	cmp    r8,r10
  40c318:	jne    0x40c300
  40c31a:	lea    r11,[rip+0x28013]        # 0x434334
  40c321:	mov    r9,rdx
  40c324:	xor    r10d,r10d
  40c327:	xor    ebp,ebp
  40c329:	mov    r8d,0x2
  40c32f:	nop
  40c330:	mov    rsi,QWORD PTR [r9]
  40c333:	mov    rdi,r11
  40c336:	mov    rcx,r8
  40c339:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c33b:	jne    0x40c341
  40c33d:	mov    rbp,QWORD PTR [r9+0x8]
  40c341:	add    r10d,0x1
  40c345:	add    r9,0x10
  40c349:	cmp    r10d,eax
  40c34c:	jl     0x40c330
  40c34e:	lea    r10,[rip+0x289be]        # 0x434d13
  40c355:	xor    r9d,r9d
  40c358:	xor    r12d,r12d
  40c35b:	mov    r8d,0x2
  40c361:	mov    rsi,QWORD PTR [rdx]
  40c364:	mov    rdi,r10
  40c367:	mov    rcx,r8
  40c36a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c36c:	jne    0x40c372
  40c36e:	mov    r12,QWORD PTR [rdx+0x8]
  40c372:	add    r9d,0x1
  40c376:	add    rdx,0x10
  40c37a:	cmp    r9d,eax
  40c37d:	jl     0x40c361
  40c37f:	test   r13,r13
  40c382:	mov    rdi,QWORD PTR [rsp+0x88]
  40c38a:	je     0x40d374
  40c390:	xor    edx,edx
  40c392:	mov    rcx,r13
  40c395:	call   0x40a550
  40c39a:	mov    eax,DWORD PTR [rax+0x14]
  40c39d:	test   r14,r14
  40c3a0:	mov    rsi,QWORD PTR [rsp+0x88]
  40c3a8:	mov    DWORD PTR [rdi+0x478],eax
  40c3ae:	je     0x40d388
  40c3b4:	mov    edx,0x1
  40c3b9:	mov    rcx,r14
  40c3bc:	call   0x40a550
  40c3c1:	mov    rdi,QWORD PTR [rsp+0x88]
  40c3c9:	mov    eax,DWORD PTR [rax+0x14]
  40c3cc:	test   rbp,rbp
  40c3cf:	mov    DWORD PTR [rsi+0x47c],eax
  40c3d5:	je     0x40d287
  40c3db:	mov    edx,0x3
  40c3e0:	mov    rcx,rbp
  40c3e3:	call   0x40a550
  40c3e8:	mov    rsi,QWORD PTR [rsp+0x88]
  40c3f0:	mov    eax,DWORD PTR [rax+0x14]
  40c3f3:	mov    DWORD PTR [rdi+0x480],eax
  40c3f9:	xor    eax,eax
  40c3fb:	test   r12,r12
  40c3fe:	je     0x40c410
  40c400:	mov    edx,0x2
  40c405:	mov    rcx,r12
  40c408:	call   0x40a550
  40c40d:	mov    eax,DWORD PTR [rax+0x14]
  40c410:	test   r13,r13
  40c413:	mov    DWORD PTR [rsi+0x598],eax
  40c419:	je     0x40c435
  40c41b:	xor    edx,edx
  40c41d:	mov    rcx,r13
  40c420:	call   0x40a550
  40c425:	mov    rcx,QWORD PTR [rsp+0x88]
  40c42d:	mov    rdx,rax
  40c430:	call   0x4222c8
  40c435:	test   r14,r14
  40c438:	je     0x40c457
  40c43a:	mov    edx,0x1
  40c43f:	mov    rcx,r14
  40c442:	call   0x40a550
  40c447:	mov    rcx,QWORD PTR [rsp+0x88]
  40c44f:	mov    rdx,rax
  40c452:	call   0x4222e0
  40c457:	test   rbp,rbp
  40c45a:	je     0x40c479
  40c45c:	mov    edx,0x3
  40c461:	mov    rcx,rbp
  40c464:	call   0x40a550
  40c469:	mov    rcx,QWORD PTR [rsp+0x88]
  40c471:	mov    rdx,rax
  40c474:	call   0x4222d0
  40c479:	test   r12,r12
  40c47c:	je     0x40c49b
  40c47e:	mov    edx,0x2
  40c483:	mov    rcx,r12
  40c486:	call   0x40a550
  40c48b:	mov    rcx,QWORD PTR [rsp+0x88]
  40c493:	mov    rdx,rax
  40c496:	call   0x4222d8
  40c49b:	mov    rdx,QWORD PTR [rip+0x3135e]        # 0x43d800
  40c4a2:	mov    rax,QWORD PTR [rsp+0x88]
  40c4aa:	xor    r8d,r8d
  40c4ad:	mov    r9,QWORD PTR [rdx]
  40c4b0:	mov    r10,QWORD PTR [rdx+0x8]
  40c4b4:	lea    rdx,[rip+0x2885a]        # 0x434d15
  40c4bb:	or     DWORD PTR [rax+0x454],0x4
  40c4c2:	mov    QWORD PTR [rax+0x4b0],r9
  40c4c9:	mov    QWORD PTR [rax+0x4b8],r10
  40c4d0:	mov    r9d,0x1
  40c4d6:	mov    rax,QWORD PTR [r15]
  40c4d9:	mov    rcx,QWORD PTR [rax+0x28]
  40c4dd:	call   0x422818
  40c4e2:	test   rax,rax
  40c4e5:	mov    rax,QWORD PTR [r15]
  40c4e8:	je     0x40d859
  40c4ee:	lea    rdx,[rsp+0x88]
  40c4f6:	lea    r9,[rax+0x28]
  40c4fa:	mov    r8,rbx
  40c4fd:	mov    rcx,rdx
  40c500:	mov    QWORD PTR [rsp+0x48],rdx
  40c505:	mov    rdx,QWORD PTR [rsp+0x108]
  40c50d:	call   0x4221f0
  40c512:	test   eax,eax
  40c514:	js     0x40d99a
  40c51a:	mov    rax,QWORD PTR [r15]
  40c51d:	mov    rdx,QWORD PTR [rax+0x20]
  40c521:	lea    rcx,[rax+0x28]
  40c525:	call   0x420bb0
  40c52a:	mov    rax,QWORD PTR [r15]
  40c52d:	mov    rcx,QWORD PTR [rax+0x28]
  40c531:	call   0x420c00
  40c536:	mov    rbx,QWORD PTR [rsp+0x88]
  40c53e:	mov    r10d,DWORD PTR [rbx+0x2c]
  40c542:	test   r10d,r10d
  40c545:	je     0x40c5ed
  40c54b:	xor    r13d,r13d
  40c54e:	xor    r12d,r12d
  40c551:	mov    r9d,DWORD PTR [r15+0x30]
  40c555:	mov    rax,QWORD PTR [rbx+0x30]
  40c559:	test   r9d,r9d
  40c55c:	mov    rbp,QWORD PTR [rax+r13*1]
  40c560:	jle    0x40c940
  40c566:	xor    esi,esi
  40c568:	xor    r14d,r14d
  40c56b:	jmp    0x40c586
  40c56d:	nop    DWORD PTR [rax]
  40c570:	mov    rax,QWORD PTR [r15+0x28]
  40c574:	mov    r14,QWORD PTR [rax+rdi*1+0x8]
  40c579:	lea    eax,[rsi+0x1]
  40c57c:	add    rsi,0x1
  40c580:	cmp    eax,DWORD PTR [r15+0x30]
  40c584:	jge    0x40c5b1
  40c586:	mov    rax,QWORD PTR [r15+0x28]
  40c58a:	mov    rdi,rsi
  40c58d:	mov    rdx,rbp
  40c590:	shl    rdi,0x4
  40c594:	mov    rcx,rbx
  40c597:	mov    r8,QWORD PTR [rax+rdi*1]
  40c59b:	call   0x4075b0
  40c5a0:	cmp    eax,0x0
  40c5a3:	jg     0x40c570
  40c5a5:	je     0x40c579
  40c5a7:	mov    ecx,0x1
  40c5ac:	call   0x401cb0
  40c5b1:	test   r14,r14
  40c5b4:	je     0x40c940
  40c5ba:	mov    rax,QWORD PTR [rbp+0x8]
  40c5be:	mov    rcx,r14
  40c5c1:	mov    edx,DWORD PTR [rax+0xc]
  40c5c4:	call   0x40a550
  40c5c9:	mov    rdx,QWORD PTR [rbp+0x8]
  40c5cd:	mov    eax,DWORD PTR [rax+0x14]
  40c5d0:	mov    DWORD PTR [rdx+0x38],eax
  40c5d3:	mov    rbx,QWORD PTR [rsp+0x88]
  40c5db:	add    r12d,0x1
  40c5df:	add    r13,0x8
  40c5e3:	cmp    r12d,DWORD PTR [rbx+0x2c]
  40c5e7:	jb     0x40c551
  40c5ed:	mov    rax,QWORD PTR [r15]
  40c5f0:	mov    rcx,rbx
  40c5f3:	mov    rdx,QWORD PTR [rax+0x20]
  40c5f7:	call   0x407890
  40c5fc:	mov    rcx,QWORD PTR [rsp+0x88]
  40c604:	mov    rdx,rax
  40c607:	mov    QWORD PTR [rsp+0x90],rax
  40c60f:	mov    ebx,DWORD PTR [rcx+0x2c]
  40c612:	mov    DWORD PTR [rsp+0x7c],ebx
  40c616:	call   0x422228
  40c61b:	test   eax,eax
  40c61d:	mov    rbp,QWORD PTR [rsp+0x88]
  40c625:	js     0x40d3d6
  40c62b:	mov    rdx,QWORD PTR [r15+0x10]
  40c62f:	movabs rax,0x8000000000000000
  40c639:	cmp    rdx,rax
  40c63c:	je     0x40d291
  40c642:	mov    rax,QWORD PTR [rbp+0x440]
  40c649:	test   rax,rax
  40c64c:	jle    0x40d42a
  40c652:	add    rax,rdx
  40c655:	mov    QWORD PTR [r15+0x8],rax
  40c659:	mov    QWORD PTR [rsp+0x70],rax
  40c65e:	mov    ecx,DWORD PTR [r15+0x18]
  40c662:	test   ecx,ecx
  40c664:	je     0x40c99b
  40c66a:	mov    r9,QWORD PTR [rsp+0x70]
  40c66f:	mov    rax,QWORD PTR [rbp+0x8]
  40c673:	test   BYTE PTR [rax+0x13],0x4
  40c677:	jne    0x40c6ce
  40c679:	mov    edx,DWORD PTR [rbp+0x2c]
  40c67c:	test   edx,edx
  40c67e:	je     0x40d8e8
  40c684:	mov    rax,QWORD PTR [rbp+0x30]
  40c688:	sub    edx,0x1
  40c68b:	mov    r8d,0x1
  40c691:	lea    r9,[rax+rdx*8+0x8]
  40c696:	xor    edx,edx
  40c698:	nop    DWORD PTR [rax+rax*1+0x0]
  40c6a0:	mov    rcx,QWORD PTR [rax]
  40c6a3:	mov    rcx,QWORD PTR [rcx+0x8]
  40c6a7:	mov    ecx,DWORD PTR [rcx+0xd4]
  40c6ad:	test   ecx,ecx
  40c6af:	cmovne edx,r8d
  40c6b3:	add    rax,0x8
  40c6b7:	cmp    rax,r9
  40c6ba:	jne    0x40c6a0
  40c6bc:	mov    rax,QWORD PTR [rsp+0x70]
  40c6c1:	test   edx,edx
  40c6c3:	lea    r9,[rax-0x1fd82]
  40c6ca:	cmove  r9,rax
  40c6ce:	mov    DWORD PTR [rsp+0x28],0x0
  40c6d6:	mov    QWORD PTR [rsp+0x20],r9
  40c6db:	movabs r8,0x8000000000000000
  40c6e5:	mov    edx,0xffffffff
  40c6ea:	mov    rcx,rbp
  40c6ed:	call   0x4221e0
  40c6f2:	test   eax,eax
  40c6f4:	js     0x40d7fc
  40c6fa:	mov    rbp,QWORD PTR [rsp+0x88]
  40c702:	mov    eax,DWORD PTR [rbp+0x2c]
  40c705:	test   eax,eax
  40c707:	je     0x40d8f2
  40c70d:	lea    rax,[rsp+0xa8]
  40c715:	mov    QWORD PTR [rsp+0x50],0x0
  40c71e:	mov    DWORD PTR [rsp+0x48],0x0
  40c726:	mov    QWORD PTR [rsp+0x68],rax
  40c72b:	mov    rax,QWORD PTR [rbp+0x30]
  40c72f:	mov    rbx,QWORD PTR [rsp+0x50]
  40c734:	mov    ecx,0x190
  40c739:	mov    rbx,QWORD PTR [rax+rbx*1]
  40c73d:	mov    rdi,QWORD PTR [rbx+0x8]
  40c741:	call   0x422670
  40c746:	lea    rdx,[rip+0x28659]        # 0x434da6
  40c74d:	mov    r12,rax
  40c750:	xor    r9d,r9d
  40c753:	xor    r8d,r8d
  40c756:	mov    DWORD PTR [rsp+0x20],0x0
  40c75e:	mov    rcx,rdi
  40c761:	call   0x422638
  40c766:	test   r12,r12
  40c769:	mov    QWORD PTR [rsp+0x58],rax
  40c76e:	je     0x40c5a7
  40c774:	mov    rax,QWORD PTR [rip+0x31115]        # 0x43d890
  40c77b:	mov    edx,0x8
  40c780:	xor    esi,esi
  40c782:	mov    r9d,DWORD PTR [rax]
  40c785:	mov    r8,rax
  40c788:	mov    rax,QWORD PTR [rip+0x31061]        # 0x43d7f0
  40c78f:	mov    rcx,QWORD PTR [rax]
  40c792:	add    r9d,0x1
  40c796:	call   0x407950
  40c79b:	mov    rdx,QWORD PTR [rip+0x3104e]        # 0x43d7f0
  40c7a2:	movsd  xmm1,QWORD PTR [rip+0x2cd3e]        # 0x4394e8
  40c7aa:	mov    QWORD PTR [rdx],rax
  40c7ad:	mov    rdx,QWORD PTR [rip+0x310dc]        # 0x43d890
  40c7b4:	movsxd rdx,DWORD PTR [rdx]
  40c7b7:	mov    QWORD PTR [rax+rdx*8-0x8],r12
  40c7bc:	mov    rax,QWORD PTR [rip+0x310bd]        # 0x43d880
  40c7c3:	mov    QWORD PTR [r12+0x8],rbx
  40c7c8:	mov    DWORD PTR [r12+0x10],0x1
  40c7d1:	mov    QWORD PTR [rsp+0x60],rax
  40c7d6:	mov    eax,DWORD PTR [rax]
  40c7d8:	mov    DWORD PTR [r12],eax
  40c7dc:	mov    eax,DWORD PTR [r15+0xa8]
  40c7e3:	mov    DWORD PTR [rbx+0x54],0x30
  40c7ea:	movsd  QWORD PTR [r12+0x78],xmm1
  40c7f1:	test   eax,eax
  40c7f3:	jg     0x40c825
  40c7f5:	jmp    0x40c85d
  40c7f7:	nop    WORD PTR [rax+rax*1+0x0]
  40c800:	mov    rax,QWORD PTR [r15+0xa0]
  40c807:	movsd  xmm0,QWORD PTR [rax+r13*1+0x8]
  40c80e:	lea    eax,[rsi+0x1]
  40c811:	add    rsi,0x1
  40c815:	cmp    DWORD PTR [r15+0xa8],eax
  40c81c:	movsd  QWORD PTR [r12+0x78],xmm0
  40c823:	jle    0x40c85d
  40c825:	mov    rax,QWORD PTR [r15+0xa0]
  40c82c:	mov    r13,rsi
  40c82f:	mov    rdx,rbx
  40c832:	shl    r13,0x4
  40c836:	mov    rcx,rbp
  40c839:	mov    r8,QWORD PTR [rax+r13*1]
  40c83d:	call   0x4075b0
  40c842:	cmp    eax,0x0
  40c845:	jg     0x40c800
  40c847:	jne    0x40c5a7
  40c84d:	lea    eax,[rsi+0x1]
  40c850:	add    rsi,0x1
  40c854:	cmp    DWORD PTR [r15+0xa8],eax
  40c85b:	jg     0x40c825
  40c85d:	mov    eax,DWORD PTR [r15+0xe8]
  40c864:	xor    esi,esi
  40c866:	mov    DWORD PTR [r12+0xa0],0x1
  40c872:	test   eax,eax
  40c874:	jg     0x40c8a4
  40c876:	jmp    0x40c8dc
  40c878:	nop    DWORD PTR [rax+rax*1+0x0]
  40c880:	mov    rax,QWORD PTR [r15+0xe0]
  40c887:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40c88c:	mov    DWORD PTR [r12+0xa0],eax
  40c894:	lea    eax,[rsi+0x1]
  40c897:	add    rsi,0x1
  40c89b:	cmp    DWORD PTR [r15+0xe8],eax
  40c8a2:	jle    0x40c8dc
  40c8a4:	mov    rax,QWORD PTR [r15+0xe0]
  40c8ab:	mov    r13,rsi
  40c8ae:	mov    rdx,rbx
  40c8b1:	shl    r13,0x4
  40c8b5:	mov    rcx,rbp
  40c8b8:	mov    r8,QWORD PTR [rax+r13*1]
  40c8bc:	call   0x4075b0
  40c8c1:	cmp    eax,0x0
  40c8c4:	jg     0x40c880
  40c8c6:	jne    0x40c5a7
  40c8cc:	lea    eax,[rsi+0x1]
  40c8cf:	add    rsi,0x1
  40c8d3:	cmp    DWORD PTR [r15+0xe8],eax
  40c8da:	jg     0x40c8a4
  40c8dc:	mov    eax,DWORD PTR [r15+0x1a8]
  40c8e3:	xor    r14d,r14d
  40c8e6:	xor    esi,esi
  40c8e8:	test   eax,eax
  40c8ea:	jg     0x40c912
  40c8ec:	jmp    0x40c9fb
  40c8f1:	mov    rax,QWORD PTR [r15+0x1a0]
  40c8f8:	mov    rsi,QWORD PTR [rax+r13*1+0x8]
  40c8fd:	lea    eax,[r14+0x1]
  40c901:	add    r14,0x1
  40c905:	cmp    DWORD PTR [r15+0x1a8],eax
  40c90c:	jle    0x40c9d0
  40c912:	mov    rax,QWORD PTR [r15+0x1a0]
  40c919:	mov    r13,r14
  40c91c:	mov    rdx,rbx
  40c91f:	shl    r13,0x4
  40c923:	mov    rcx,rbp
  40c926:	mov    r8,QWORD PTR [rax+r13*1]
  40c92a:	call   0x4075b0
  40c92f:	cmp    eax,0x0
  40c932:	jg     0x40c8f1
  40c934:	je     0x40c8fd
  40c936:	jmp    0x40c5a7
  40c93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c940:	mov    rax,QWORD PTR [rbp+0x8]
  40c944:	mov    ecx,DWORD PTR [rax+0x38]
  40c947:	call   0x422378
  40c94c:	jmp    0x40c5d3
  40c951:	mov    rsi,QWORD PTR [rsp+0x108]
  40c959:	lea    rdi,[rip+0x2764d]        # 0x433fad
  40c960:	mov    ecx,0x5
  40c965:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c967:	seta   al
  40c96a:	setb   dl
  40c96d:	sub    eax,edx
  40c96f:	movsx  eax,al
  40c972:	test   eax,eax
  40c974:	je     0x40c190
  40c97a:	mov    rsi,QWORD PTR [rsp+0x108]
  40c982:	lea    rdi,[rip+0x28344]        # 0x434ccd
  40c989:	mov    ecx,0xb
  40c98e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c990:	setne  al
  40c993:	movzx  eax,al
  40c996:	jmp    0x40c190
  40c99b:	mov    rbx,QWORD PTR [rsp+0x70]
  40c9a0:	mov    rax,QWORD PTR [rbp+0x438]
  40c9a7:	movabs rcx,0x8000000000000000
  40c9b1:	lea    rdx,[rbx+rax*1]
  40c9b5:	cmp    rax,rcx
  40c9b8:	cmove  rdx,rbx
  40c9bc:	mov    QWORD PTR [rsp+0x70],rdx
  40c9c1:	mov    r9,rdx
  40c9c4:	jmp    0x40c66f
  40c9c9:	nop    DWORD PTR [rax+0x0]
  40c9d0:	test   rsi,rsi
  40c9d3:	je     0x40c9fb
  40c9d5:	mov    rdx,QWORD PTR [rsp+0x68]
  40c9da:	xor    r8d,r8d
  40c9dd:	mov    rcx,rsi
  40c9e0:	call   0x42faa8
  40c9e5:	mov    rdx,QWORD PTR [rsp+0xa8]
  40c9ed:	cmp    BYTE PTR [rdx],0x0
  40c9f0:	je     0x40c9f4
  40c9f2:	mov    eax,DWORD PTR [rsi]
  40c9f4:	mov    rdx,QWORD PTR [rbx+0x8]
  40c9f8:	mov    DWORD PTR [rdx+0x3c],eax
  40c9fb:	mov    r14d,DWORD PTR [r15+0x30]
  40c9ff:	test   r14d,r14d
  40ca02:	jle    0x40d1c3
  40ca08:	xor    r14d,r14d
  40ca0b:	xor    esi,esi
  40ca0d:	jmp    0x40ca27
  40ca0f:	nop
  40ca10:	mov    rax,QWORD PTR [r15+0x28]
  40ca14:	mov    rsi,QWORD PTR [rax+r13*1+0x8]
  40ca19:	lea    eax,[r14+0x1]
  40ca1d:	add    r14,0x1
  40ca21:	cmp    DWORD PTR [r15+0x30],eax
  40ca25:	jle    0x40ca5a
  40ca27:	mov    rax,QWORD PTR [r15+0x28]
  40ca2b:	mov    r13,r14
  40ca2e:	mov    rdx,rbx
  40ca31:	shl    r13,0x4
  40ca35:	mov    rcx,rbp
  40ca38:	mov    r8,QWORD PTR [rax+r13*1]
  40ca3c:	call   0x4075b0
  40ca41:	cmp    eax,0x0
  40ca44:	jg     0x40ca10
  40ca46:	jne    0x40c5a7
  40ca4c:	lea    eax,[r14+0x1]
  40ca50:	add    r14,0x1
  40ca54:	cmp    DWORD PTR [r15+0x30],eax
  40ca58:	jg     0x40ca27
  40ca5a:	test   rsi,rsi
  40ca5d:	je     0x40d1c3
  40ca63:	mov    rax,QWORD PTR [rbx+0x8]
  40ca67:	mov    rcx,rsi
  40ca6a:	mov    edx,DWORD PTR [rax+0xc]
  40ca6d:	call   0x40a550
  40ca72:	mov    rdx,QWORD PTR [rbx+0x8]
  40ca76:	mov    ecx,DWORD PTR [rax+0x14]
  40ca79:	mov    DWORD PTR [rdx+0x38],ecx
  40ca7c:	mov    rdx,QWORD PTR [r12+0x8]
  40ca81:	mov    rcx,QWORD PTR [r15]
  40ca84:	mov    r9,rbx
  40ca87:	mov    QWORD PTR [r12+0x28],rax
  40ca8c:	mov    r8,rbp
  40ca8f:	xor    esi,esi
  40ca91:	mov    rdx,QWORD PTR [rdx+0x8]
  40ca95:	mov    rcx,QWORD PTR [rcx+0x20]
  40ca99:	mov    edx,DWORD PTR [rdx+0x38]
  40ca9c:	mov    QWORD PTR [rsp+0x20],rax
  40caa1:	call   0x407600
  40caa6:	mov    r13d,DWORD PTR [r15+0x2b8]
  40caad:	mov    QWORD PTR [r12+0x88],rax
  40cab5:	mov    DWORD PTR [r12+0x12c],0xffffffff
  40cac1:	test   r13d,r13d
  40cac4:	jg     0x40caf4
  40cac6:	jmp    0x40cb2c
  40cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	mov    rax,QWORD PTR [r15+0x2b0]
  40cad7:	mov    eax,DWORD PTR [rax+r13*1+0x8]
  40cadc:	mov    DWORD PTR [r12+0x12c],eax
  40cae4:	lea    eax,[rsi+0x1]
  40cae7:	add    rsi,0x1
  40caeb:	cmp    eax,DWORD PTR [r15+0x2b8]
  40caf2:	jge    0x40cb2c
  40caf4:	mov    rax,QWORD PTR [r15+0x2b0]
  40cafb:	mov    r13,rsi
  40cafe:	mov    rdx,rbx
  40cb01:	shl    r13,0x4
  40cb05:	mov    rcx,rbp
  40cb08:	mov    r8,QWORD PTR [rax+r13*1]
  40cb0c:	call   0x4075b0
  40cb11:	cmp    eax,0x0
  40cb14:	jg     0x40cad0
  40cb16:	jne    0x40c5a7
  40cb1c:	lea    eax,[rsi+0x1]
  40cb1f:	add    rsi,0x1
  40cb23:	cmp    eax,DWORD PTR [r15+0x2b8]
  40cb2a:	jl     0x40caf4
  40cb2c:	mov    r11d,DWORD PTR [r15+0x328]
  40cb33:	xor    r14d,r14d
  40cb36:	xor    esi,esi
  40cb38:	test   r11d,r11d
  40cb3b:	jg     0x40cb5f
  40cb3d:	jmp    0x40d3b1
  40cb42:	mov    rax,QWORD PTR [r15+0x320]
  40cb49:	mov    rsi,QWORD PTR [rax+r13*1+0x8]
  40cb4e:	lea    eax,[r14+0x1]
  40cb52:	add    r14,0x1
  40cb56:	cmp    DWORD PTR [r15+0x328],eax
  40cb5d:	jle    0x40cb90
  40cb5f:	mov    rax,QWORD PTR [r15+0x320]
  40cb66:	mov    r13,r14
  40cb69:	mov    rdx,rbx
  40cb6c:	shl    r13,0x4
  40cb70:	mov    rcx,rbp
  40cb73:	mov    r8,QWORD PTR [rax+r13*1]
  40cb77:	call   0x4075b0
  40cb7c:	cmp    eax,0x0
  40cb7f:	jg     0x40cb42
  40cb81:	je     0x40cb4e
  40cb83:	jmp    0x40c5a7
  40cb88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	test   rsi,rsi
  40cb93:	mov    DWORD PTR [r12+0x14],0xfffffff0
  40cb9c:	je     0x40cbbb
  40cb9e:	mov    rdx,QWORD PTR [rsp+0x58]
  40cba3:	lea    r9,[r12+0x14]
  40cba8:	mov    r8,rsi
  40cbab:	mov    rcx,rdi
  40cbae:	call   0x422640
  40cbb3:	test   eax,eax
  40cbb5:	js     0x40d9fa
  40cbbb:	mov    rcx,QWORD PTR [r12+0x28]
  40cbc0:	movabs rax,0x8000000000000000
  40cbca:	mov    QWORD PTR [r12+0x70],rax
  40cbcf:	call   0x4223f0
  40cbd4:	test   rax,rax
  40cbd7:	mov    QWORD PTR [r12+0x20],rax
  40cbdc:	je     0x40d979
  40cbe2:	mov    rdx,rdi
  40cbe5:	mov    rcx,rax
  40cbe8:	call   0x4223d8
  40cbed:	test   eax,eax
  40cbef:	js     0x40d991
  40cbf5:	mov    eax,DWORD PTR [rdi+0xc]
  40cbf8:	add    eax,0x1
  40cbfb:	cmp    eax,0x5
  40cbfe:	ja     0x40d1d4
  40cc04:	lea    rdx,[rip+0x28495]        # 0x4350a0
  40cc0b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cc0f:	add    rax,rdx
  40cc12:	jmp    rax
  40cc14:	mov    rcx,r12
  40cc17:	call   0x420c50
  40cc1c:	mov    rax,QWORD PTR [r12+0x20]
  40cc21:	mov    edx,DWORD PTR [rax+0x1d8]
  40cc27:	mov    DWORD PTR [r12+0xb0],edx
  40cc2f:	mov    edx,DWORD PTR [rax+0x1d0]
  40cc35:	mov    DWORD PTR [r12+0xb4],edx
  40cc3d:	mov    edx,DWORD PTR [rax+0x1d4]
  40cc43:	mov    rax,QWORD PTR [rax+0x1f0]
  40cc4a:	mov    DWORD PTR [r12+0xb8],edx
  40cc52:	mov    QWORD PTR [r12+0xc0],rax
  40cc5a:	add    DWORD PTR [rsp+0x48],0x1
  40cc5f:	add    QWORD PTR [rsp+0x50],0x8
  40cc65:	mov    eax,DWORD PTR [rsp+0x48]
  40cc69:	cmp    eax,DWORD PTR [rbp+0x2c]
  40cc6c:	jb     0x40c72b
  40cc72:	mov    rbp,QWORD PTR [rsp+0x88]
  40cc7a:	mov    rdi,QWORD PTR [rsp+0x60]
  40cc7f:	mov    r8,QWORD PTR [rsp+0x108]
  40cc87:	mov    edx,DWORD PTR [rdi]
  40cc89:	xor    r9d,r9d
  40cc8c:	mov    rcx,rbp
  40cc8f:	call   0x4222f8
  40cc94:	mov    rbx,QWORD PTR [rip+0x30b45]        # 0x43d7e0
  40cc9b:	mov    eax,DWORD PTR [rdi]
  40cc9d:	mov    r8,rdi
  40cca0:	mov    edx,0x8
  40cca5:	mov    rcx,QWORD PTR [rbx]
  40cca8:	lea    r9d,[rax+0x1]
  40ccac:	call   0x407950
  40ccb1:	mov    ecx,0x58
  40ccb6:	mov    QWORD PTR [rbx],rax
  40ccb9:	call   0x422670
  40ccbe:	test   rax,rax
  40ccc1:	mov    rsi,rax
  40ccc4:	je     0x40c5a7
  40ccca:	movsxd rdx,DWORD PTR [rdi]
  40cccd:	mov    rax,QWORD PTR [rbx]
  40ccd0:	mov    rbp,QWORD PTR [rip+0x30bb9]        # 0x43d890
  40ccd7:	mov    r11d,DWORD PTR [rip+0x35396]        # 0x442074
  40ccde:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  40cce3:	mov    rcx,QWORD PTR [rsp+0x88]
  40cceb:	mov    eax,DWORD PTR [rbp+0x0]
  40ccee:	mov    rdx,QWORD PTR [r15+0x88]
  40ccf5:	mov    r8d,DWORD PTR [rcx+0x2c]
  40ccf9:	mov    QWORD PTR [rsi],rcx
  40ccfc:	mov    QWORD PTR [rsi+0x18],rdx
  40cd00:	sub    eax,r8d
  40cd03:	test   r11d,r11d
  40cd06:	mov    DWORD PTR [rsi+0x10],eax
  40cd09:	mov    rax,QWORD PTR [r15+0x8]
  40cd0d:	mov    QWORD PTR [rsi+0x30],rax
  40cd11:	mov    rax,QWORD PTR [r15+0x128]
  40cd18:	mov    QWORD PTR [rsi+0x40],rax
  40cd1c:	mov    rax,QWORD PTR [rsp+0x70]
  40cd21:	je     0x40cd35
  40cd23:	mov    r10d,DWORD PTR [rip+0x35346]        # 0x442070
  40cd2a:	xor    eax,eax
  40cd2c:	test   r10d,r10d
  40cd2f:	jne    0x40d8c6
  40cd35:	sub    rdx,rax
  40cd38:	mov    eax,DWORD PTR [r15+0x90]
  40cd3f:	lea    rdi,[rsp+0xa8]
  40cd47:	mov    QWORD PTR [rsi+0x20],rdx
  40cd4b:	mov    DWORD PTR [rsi+0x48],r8d
  40cd4f:	xor    ebx,ebx
  40cd51:	mov    DWORD PTR [rsi+0x50],eax
  40cd54:	mov    eax,DWORD PTR [r15+0x94]
  40cd5b:	mov    DWORD PTR [rsi+0x54],eax
  40cd5e:	mov    rax,QWORD PTR [r15]
  40cd61:	mov    r12,QWORD PTR [rax+0x20]
  40cd65:	mov    QWORD PTR [rsp+0xa8],0x0
  40cd71:	lea    rdx,[rip+0x27266]        # 0x433fde
  40cd78:	mov    r8,rbx
  40cd7b:	mov    r9d,0x2
  40cd81:	mov    rcx,r12
  40cd84:	call   0x422818
  40cd89:	test   rax,rax
  40cd8c:	mov    rbx,rax
  40cd8f:	je     0x40d467
  40cd95:	mov    r14,QWORD PTR [rbx]
  40cd98:	mov    edx,0x3a
  40cd9d:	mov    rcx,r14
  40cda0:	call   0x42fb00
  40cda5:	test   rax,rax
  40cda8:	mov    r13,rax
  40cdab:	je     0x40d3bf
  40cdb1:	mov    BYTE PTR [rax],0x0
  40cdb4:	mov    r8,QWORD PTR [rbx+0x8]
  40cdb8:	xor    r9d,r9d
  40cdbb:	mov    rdx,QWORD PTR [rbx]
  40cdbe:	mov    rcx,rdi
  40cdc1:	call   0x422808
  40cdc6:	mov    BYTE PTR [r13+0x0],0x3a
  40cdcb:	jmp    0x40cd71
  40cdcd:	cmp    QWORD PTR [r12+0x28],0x0
  40cdd3:	je     0x40d835
  40cdd9:	mov    r14d,DWORD PTR [r15+0x2c8]
  40cde0:	xor    esi,esi
  40cde2:	test   r14d,r14d
  40cde5:	jg     0x40ce13
  40cde7:	jmp    0x40ce4b
  40cde9:	nop    DWORD PTR [rax+0x0]
  40cdf0:	mov    rax,QWORD PTR [r15+0x2c0]
  40cdf7:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40cdfb:	mov    DWORD PTR [r12+0xc8],eax
  40ce03:	lea    eax,[rsi+0x1]
  40ce06:	add    rsi,0x1
  40ce0a:	cmp    DWORD PTR [r15+0x2c8],eax
  40ce11:	jle    0x40ce4b
  40ce13:	mov    rax,QWORD PTR [r15+0x2c0]
  40ce1a:	mov    rdi,rsi
  40ce1d:	mov    rdx,rbx
  40ce20:	shl    rdi,0x4
  40ce24:	mov    rcx,rbp
  40ce27:	mov    r8,QWORD PTR [rax+rdi*1]
  40ce2b:	call   0x4075b0
  40ce30:	cmp    eax,0x0
  40ce33:	jg     0x40cdf0
  40ce35:	jne    0x40c5a7
  40ce3b:	lea    eax,[rsi+0x1]
  40ce3e:	add    rsi,0x1
  40ce42:	cmp    DWORD PTR [r15+0x2c8],eax
  40ce49:	jg     0x40ce13
  40ce4b:	mov    r13d,DWORD PTR [r15+0x2d8]
  40ce52:	xor    esi,esi
  40ce54:	xor    edi,edi
  40ce56:	test   r13d,r13d
  40ce59:	jg     0x40ce7c
  40ce5b:	jmp    0x40cc5a
  40ce60:	mov    rax,QWORD PTR [r15+0x2d0]
  40ce67:	mov    rdi,QWORD PTR [rax+r13*1+0x8]
  40ce6c:	lea    eax,[rsi+0x1]
  40ce6f:	add    rsi,0x1
  40ce73:	cmp    DWORD PTR [r15+0x2d8],eax
  40ce7a:	jle    0x40ceb4
  40ce7c:	mov    rax,QWORD PTR [r15+0x2d0]
  40ce83:	mov    r13,rsi
  40ce86:	mov    rdx,rbx
  40ce89:	shl    r13,0x4
  40ce8d:	mov    rcx,rbp
  40ce90:	mov    r8,QWORD PTR [rax+r13*1]
  40ce94:	call   0x4075b0
  40ce99:	cmp    eax,0x0
  40ce9c:	jg     0x40ce60
  40ce9e:	jne    0x40c5a7
  40cea4:	lea    eax,[rsi+0x1]
  40cea7:	add    rsi,0x1
  40ceab:	cmp    DWORD PTR [r15+0x2d8],eax
  40ceb2:	jg     0x40ce7c
  40ceb4:	test   rdi,rdi
  40ceb7:	je     0x40cc5a
  40cebd:	mov    rax,QWORD PTR [r12+0x20]
  40cec2:	mov    r8,rdi
  40cec5:	lea    rdx,[rax+0x98]
  40cecc:	lea    rcx,[rax+0x94]
  40ced3:	call   0x4225d8
  40ced8:	test   eax,eax
  40ceda:	jns    0x40cc5a
  40cee0:	mov    r9,rdi
  40cee3:	lea    r8,[rip+0x27f92]        # 0x434e7c
  40ceea:	jmp    0x40d910
  40ceef:	nop
  40cef0:	mov    eax,DWORD PTR [r15+0x308]
  40cef7:	xor    esi,esi
  40cef9:	mov    DWORD PTR [r12+0x9c],0x7fffffff
  40cf05:	test   eax,eax
  40cf07:	jg     0x40cf37
  40cf09:	jmp    0x40cc14
  40cf0e:	xchg   ax,ax
  40cf10:	mov    rax,QWORD PTR [r15+0x300]
  40cf17:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40cf1b:	mov    DWORD PTR [r12+0x9c],eax
  40cf23:	lea    eax,[rsi+0x1]
  40cf26:	add    rsi,0x1
  40cf2a:	cmp    DWORD PTR [r15+0x308],eax
  40cf31:	jle    0x40cc14
  40cf37:	mov    rax,QWORD PTR [r15+0x300]
  40cf3e:	mov    rdi,rsi
  40cf41:	mov    rdx,rbx
  40cf44:	shl    rdi,0x4
  40cf48:	mov    rcx,rbp
  40cf4b:	mov    r8,QWORD PTR [rax+rdi*1]
  40cf4f:	call   0x4075b0
  40cf54:	cmp    eax,0x0
  40cf57:	jg     0x40cf10
  40cf59:	je     0x40cf23
  40cf5b:	jmp    0x40c5a7
  40cf60:	cmp    QWORD PTR [r12+0x28],0x0
  40cf66:	je     0x40d847
  40cf6c:	mov    rcx,rdi
  40cf6f:	call   0x422478
  40cf74:	test   eax,eax
  40cf76:	je     0x40cf7f
  40cf78:	or     DWORD PTR [rdi+0x70],0x4000
  40cf7f:	mov    rax,QWORD PTR [r12+0x20]
  40cf84:	mov    r10d,DWORD PTR [r15+0x60]
  40cf88:	mov    edx,DWORD PTR [rax+0x98]
  40cf8e:	test   r10d,r10d
  40cf91:	mov    DWORD PTR [r12+0xa4],edx
  40cf99:	mov    edx,DWORD PTR [rax+0x94]
  40cf9f:	mov    eax,DWORD PTR [rax+0xa8]
  40cfa5:	mov    DWORD PTR [r12+0xa8],edx
  40cfad:	mov    DWORD PTR [r12+0xac],eax
  40cfb5:	jle    0x40d025
  40cfb7:	xor    esi,esi
  40cfb9:	xor    edi,edi
  40cfbb:	jmp    0x40cfd6
  40cfbd:	nop    DWORD PTR [rax]
  40cfc0:	mov    rax,QWORD PTR [r15+0x58]
  40cfc4:	mov    rdi,QWORD PTR [rax+r13*1+0x8]
  40cfc9:	lea    eax,[rsi+0x1]
  40cfcc:	add    rsi,0x1
  40cfd0:	cmp    eax,DWORD PTR [r15+0x60]
  40cfd4:	jge    0x40d008
  40cfd6:	mov    rax,QWORD PTR [r15+0x58]
  40cfda:	mov    r13,rsi
  40cfdd:	mov    rdx,rbx
  40cfe0:	shl    r13,0x4
  40cfe4:	mov    rcx,rbp
  40cfe7:	mov    r8,QWORD PTR [rax+r13*1]
  40cfeb:	call   0x4075b0
  40cff0:	cmp    eax,0x0
  40cff3:	jg     0x40cfc0
  40cff5:	jne    0x40c5a7
  40cffb:	lea    eax,[rsi+0x1]
  40cffe:	add    rsi,0x1
  40d002:	cmp    eax,DWORD PTR [r15+0x60]
  40d006:	jl     0x40cfd6
  40d008:	test   rdi,rdi
  40d00b:	je     0x40d025
  40d00d:	lea    rcx,[r12+0x90]
  40d015:	mov    rdx,rdi
  40d018:	call   0x4225e0
  40d01d:	test   eax,eax
  40d01f:	js     0x40d9b3
  40d025:	mov    r9d,DWORD PTR [r15+0x248]
  40d02c:	xor    esi,esi
  40d02e:	mov    DWORD PTR [r12+0x98],0xffffffff
  40d03a:	test   r9d,r9d
  40d03d:	jg     0x40d064
  40d03f:	jmp    0x40d09c
  40d041:	mov    rax,QWORD PTR [r15+0x240]
  40d048:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40d04c:	mov    DWORD PTR [r12+0x98],eax
  40d054:	lea    eax,[rsi+0x1]
  40d057:	add    rsi,0x1
  40d05b:	cmp    DWORD PTR [r15+0x248],eax
  40d062:	jle    0x40d09c
  40d064:	mov    rax,QWORD PTR [r15+0x240]
  40d06b:	mov    rdi,rsi
  40d06e:	mov    rdx,rbx
  40d071:	shl    rdi,0x4
  40d075:	mov    rcx,rbp
  40d078:	mov    r8,QWORD PTR [rax+rdi*1]
  40d07c:	call   0x4075b0
  40d081:	cmp    eax,0x0
  40d084:	jg     0x40d041
  40d086:	jne    0x40c5a7
  40d08c:	lea    eax,[rsi+0x1]
  40d08f:	add    rsi,0x1
  40d093:	cmp    DWORD PTR [r15+0x248],eax
  40d09a:	jg     0x40d064
  40d09c:	mov    r8d,DWORD PTR [r15+0xc8]
  40d0a3:	xor    esi,esi
  40d0a5:	xor    r14d,r14d
  40d0a8:	test   r8d,r8d
  40d0ab:	jg     0x40d0cc
  40d0ad:	jmp    0x40d12c
  40d0af:	nop
  40d0b0:	mov    rax,QWORD PTR [r15+0xc0]
  40d0b7:	mov    r14,QWORD PTR [rax+rdi*1+0x8]
  40d0bc:	lea    eax,[rsi+0x1]
  40d0bf:	add    rsi,0x1
  40d0c3:	cmp    eax,DWORD PTR [r15+0xc8]
  40d0ca:	jge    0x40d104
  40d0cc:	mov    rax,QWORD PTR [r15+0xc0]
  40d0d3:	mov    rdi,rsi
  40d0d6:	mov    rdx,rbx
  40d0d9:	shl    rdi,0x4
  40d0dd:	mov    rcx,rbp
  40d0e0:	mov    r8,QWORD PTR [rax+rdi*1]
  40d0e4:	call   0x4075b0
  40d0e9:	cmp    eax,0x0
  40d0ec:	jg     0x40d0b0
  40d0ee:	jne    0x40c5a7
  40d0f4:	lea    eax,[rsi+0x1]
  40d0f7:	add    rsi,0x1
  40d0fb:	cmp    eax,DWORD PTR [r15+0xc8]
  40d102:	jl     0x40d0cc
  40d104:	test   r14,r14
  40d107:	je     0x40d12c
  40d109:	lea    rdi,[rip+0x27d2e]        # 0x434e3e
  40d110:	mov    rsi,r14
  40d113:	mov    ecx,0x5
  40d118:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d11a:	jne    0x40d1d9
  40d120:	mov    DWORD PTR [r12+0x130],0x0
  40d12c:	mov    ecx,DWORD PTR [r15+0xd8]
  40d133:	xor    esi,esi
  40d135:	xor    edi,edi
  40d137:	test   ecx,ecx
  40d139:	jg     0x40d15c
  40d13b:	jmp    0x40d1b2
  40d13d:	nop    DWORD PTR [rax]
  40d140:	mov    rax,QWORD PTR [r15+0xd0]
  40d147:	mov    rdi,QWORD PTR [rax+r13*1+0x8]
  40d14c:	lea    eax,[rsi+0x1]
  40d14f:	add    rsi,0x1
  40d153:	cmp    eax,DWORD PTR [r15+0xd8]
  40d15a:	jge    0x40d194
  40d15c:	mov    rax,QWORD PTR [r15+0xd0]
  40d163:	mov    r13,rsi
  40d166:	mov    rdx,rbx
  40d169:	shl    r13,0x4
  40d16d:	mov    rcx,rbp
  40d170:	mov    r8,QWORD PTR [rax+r13*1]
  40d174:	call   0x4075b0
  40d179:	cmp    eax,0x0
  40d17c:	jg     0x40d140
  40d17e:	jne    0x40c5a7
  40d184:	lea    eax,[rsi+0x1]
  40d187:	add    rsi,0x1
  40d18b:	cmp    eax,DWORD PTR [r15+0xd8]
  40d192:	jl     0x40d15c
  40d194:	test   rdi,rdi
  40d197:	je     0x40d1b2
  40d199:	mov    rcx,rdi
  40d19c:	call   0x422578
  40d1a1:	test   rax,rax
  40d1a4:	mov    QWORD PTR [r12+0x138],rax
  40d1ac:	je     0x40c5a7
  40d1b2:	mov    DWORD PTR [r12+0x168],0xffffffff
  40d1be:	jmp    0x40cc5a
  40d1c3:	mov    rax,QWORD PTR [rbx+0x8]
  40d1c7:	mov    ecx,DWORD PTR [rax+0x38]
  40d1ca:	call   0x422378
  40d1cf:	jmp    0x40ca7c
  40d1d4:	call   0x42fbf8
  40d1d9:	lea    rdi,[rip+0x27c63]        # 0x434e43
  40d1e0:	mov    rsi,r14
  40d1e3:	mov    ecx,0x5
  40d1e8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d1ea:	je     0x40d392
  40d1f0:	lea    rax,[rip+0x26d59]        # 0x433f50
  40d1f7:	mov    ecx,0x6
  40d1fc:	mov    rdi,r14
  40d1ff:	mov    rsi,rax
  40d202:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d204:	je     0x40d456
  40d20a:	mov    edx,DWORD PTR [r12+0x130]
  40d212:	test   edx,edx
  40d214:	jne    0x40d12c
  40d21a:	lea    r8,[rip+0x27c27]        # 0x434e48
  40d221:	mov    r9,r14
  40d224:	mov    edx,0x8
  40d229:	xor    ecx,ecx
  40d22b:	mov    QWORD PTR [rsp+0x48],rax
  40d230:	call   0x4226c0
  40d235:	lea    r8,[rip+0x27c27]        # 0x434e63
  40d23c:	mov    edx,0x8
  40d241:	xor    ecx,ecx
  40d243:	call   0x4226c0
  40d248:	mov    rax,QWORD PTR [rsp+0x48]
  40d24d:	lea    r8,[rip+0x27c24]        # 0x434e78
  40d254:	mov    edx,0x8
  40d259:	xor    ecx,ecx
  40d25b:	mov    r9,rax
  40d25e:	call   0x4226c0
  40d263:	lea    r8,[rip+0x26cf0]        # 0x433f5a
  40d26a:	xor    ecx,ecx
  40d26c:	mov    edx,0x8
  40d271:	call   0x4226c0
  40d276:	mov    ecx,0x1
  40d27b:	call   0x401cb0
  40d280:	xor    ebx,ebx
  40d282:	jmp    0x40c158
  40d287:	mov    rsi,rdi
  40d28a:	xor    eax,eax
  40d28c:	jmp    0x40c3f3
  40d291:	mov    rax,QWORD PTR [r15+0x8]
  40d295:	movabs rdx,0x8000000000000000
  40d29f:	cmp    rax,rdx
  40d2a2:	jne    0x40d420
  40d2a8:	mov    edx,DWORD PTR [r15+0x18]
  40d2ac:	test   edx,edx
  40d2ae:	jne    0x40d3a3
  40d2b4:	mov    rdx,QWORD PTR [rbp+0x438]
  40d2bb:	cmp    rdx,rax
  40d2be:	mov    eax,0x0
  40d2c3:	cmovne rax,rdx
  40d2c7:	mov    QWORD PTR [rsp+0x70],rax
  40d2cc:	jmp    0x40c702
  40d2d1:	shl    rax,0x4
  40d2d5:	add    rax,QWORD PTR [r15+0x78]
  40d2d9:	mov    rdx,QWORD PTR [r15]
  40d2dc:	xor    r9d,r9d
  40d2df:	lea    rcx,[rdx+0x28]
  40d2e3:	lea    rdx,[rip+0x27a18]        # 0x434d02
  40d2ea:	mov    r8,QWORD PTR [rax-0x8]
  40d2ee:	call   0x422808
  40d2f3:	mov    eax,DWORD PTR [r15+0x30]
  40d2f7:	test   eax,eax
  40d2f9:	jg     0x40c2a6
  40d2ff:	mov    rsi,QWORD PTR [rsp+0x88]
  40d307:	xor    r14d,r14d
  40d30a:	xor    r12d,r12d
  40d30d:	xor    r13d,r13d
  40d310:	xor    ebp,ebp
  40d312:	xor    eax,eax
  40d314:	mov    DWORD PTR [rsi+0x478],0x0
  40d31e:	mov    rdi,rsi
  40d321:	jmp    0x40c3cc
  40d326:	shl    rax,0x4
  40d32a:	add    rax,QWORD PTR [r15+0x68]
  40d32e:	mov    rdx,QWORD PTR [r15]
  40d331:	xor    r9d,r9d
  40d334:	lea    rcx,[rdx+0x28]
  40d338:	lea    rdx,[rip+0x279b8]        # 0x434cf7
  40d33f:	mov    r8,QWORD PTR [rax-0x8]
  40d343:	call   0x422808
  40d348:	jmp    0x40c28b
  40d34d:	shl    rax,0x4
  40d351:	add    rax,QWORD PTR [r15+0x48]
  40d355:	mov    rdx,QWORD PTR [r15]
  40d358:	xor    r9d,r9d
  40d35b:	lea    rcx,[rdx+0x28]
  40d35f:	lea    rdx,[rip+0x27972]        # 0x434cd8
  40d366:	movsxd r8,DWORD PTR [rax-0x8]
  40d36a:	call   0x422800
  40d36f:	jmp    0x40c1b8
  40d374:	xor    eax,eax
  40d376:	test   r14,r14
  40d379:	mov    rsi,rdi
  40d37c:	mov    DWORD PTR [rdi+0x478],eax
  40d382:	jne    0x40c3b4
  40d388:	mov    rdi,rsi
  40d38b:	xor    eax,eax
  40d38d:	jmp    0x40c3cc
  40d392:	mov    DWORD PTR [r12+0x130],0x1
  40d39e:	jmp    0x40d12c
  40d3a3:	mov    QWORD PTR [rsp+0x70],0x0
  40d3ac:	jmp    0x40c702
  40d3b1:	mov    DWORD PTR [r12+0x14],0xfffffff0
  40d3ba:	jmp    0x40cbbb
  40d3bf:	mov    r8,QWORD PTR [rbx+0x8]
  40d3c3:	xor    r9d,r9d
  40d3c6:	mov    rdx,r14
  40d3c9:	mov    rcx,rdi
  40d3cc:	call   0x422808
  40d3d1:	jmp    0x40cd71
  40d3d6:	mov    r9,QWORD PTR [rsp+0x108]
  40d3de:	lea    r8,[rip+0x27943]        # 0x434d28
  40d3e5:	xor    ecx,ecx
  40d3e7:	mov    edx,0x8
  40d3ec:	call   0x4226c0
  40d3f1:	mov    rbp,QWORD PTR [rsp+0x88]
  40d3f9:	mov    r8d,DWORD PTR [rbp+0x2c]
  40d3fd:	test   r8d,r8d
  40d400:	jne    0x40c62b
  40d406:	mov    rcx,QWORD PTR [rsp+0x48]
  40d40b:	call   0x422238
  40d410:	mov    ecx,0x1
  40d415:	call   0x401cb0
  40d41a:	nop    WORD PTR [rax+rax*1+0x0]
  40d420:	mov    QWORD PTR [rsp+0x70],rax
  40d425:	jmp    0x40c65e
  40d42a:	mov    r9,QWORD PTR [rsp+0x108]
  40d432:	lea    r8,[rip+0x27917]        # 0x434d50
  40d439:	mov    edx,0x18
  40d43e:	xor    ecx,ecx
  40d440:	call   0x4226c0
  40d445:	mov    rax,QWORD PTR [r15+0x8]
  40d449:	mov    rbp,QWORD PTR [rsp+0x88]
  40d451:	jmp    0x40d295
  40d456:	mov    DWORD PTR [r12+0x130],0x3
  40d462:	jmp    0x40d12c
  40d467:	mov    r12d,DWORD PTR [rsi+0x10]
  40d46b:	cmp    r12d,DWORD PTR [rbp+0x0]
  40d46f:	mov    rcx,QWORD PTR [rsp+0xa8]
  40d477:	mov    QWORD PTR [rsp+0x98],rcx
  40d47f:	jge    0x40d4f3
  40d481:	mov    rsi,QWORD PTR [rip+0x30368]        # 0x43d7f0
  40d488:	movsxd rbx,r12d
  40d48b:	lea    rdi,[rsp+0x98]
  40d493:	shl    rbx,0x3
  40d497:	xor    r13d,r13d
  40d49a:	jmp    0x40d4b2
  40d49c:	nop    DWORD PTR [rax+0x0]
  40d4a0:	mov    rdx,QWORD PTR [r13+0x0]
  40d4a4:	xor    r9d,r9d
  40d4a7:	xor    r8d,r8d
  40d4aa:	mov    rcx,rdi
  40d4ad:	call   0x422808
  40d4b2:	mov    rax,QWORD PTR [rsi]
  40d4b5:	lea    rdx,[rip+0x26b22]        # 0x433fde
  40d4bc:	mov    r8,r13
  40d4bf:	mov    r9d,0x2
  40d4c5:	mov    rax,QWORD PTR [rax+rbx*1]
  40d4c9:	mov    rcx,QWORD PTR [rax+0x88]
  40d4d0:	call   0x422818
  40d4d5:	test   rax,rax
  40d4d8:	mov    r13,rax
  40d4db:	jne    0x40d4a0
  40d4dd:	add    r12d,0x1
  40d4e1:	add    rbx,0x8
  40d4e5:	cmp    DWORD PTR [rbp+0x0],r12d
  40d4e9:	jg     0x40d497
  40d4eb:	mov    rcx,QWORD PTR [rsp+0x98]
  40d4f3:	xor    ebx,ebx
  40d4f5:	lea    rbp,[rip+0x26ae2]        # 0x433fde
  40d4fc:	lea    rdi,[rsp+0xa0]
  40d504:	lea    rsi,[rsp+0xa8]
  40d50c:	mov    r13,QWORD PTR [rsp+0x108]
  40d514:	mov    r14,QWORD PTR [rsp+0x60]
  40d519:	jmp    0x40d5c3
  40d51e:	xchg   ax,ax
  40d520:	call   0x422350
  40d525:	mov    DWORD PTR [rsp+0x20],0x3
  40d52d:	mov    rdx,QWORD PTR [rbx]
  40d530:	xor    r9d,r9d
  40d533:	xor    r8d,r8d
  40d536:	mov    rcx,rdi
  40d539:	mov    QWORD PTR [rsp+0xa0],rax
  40d541:	call   0x422638
  40d546:	mov    r12,rax
  40d549:	call   0x422218
  40d54e:	mov    DWORD PTR [rsp+0x20],0x3
  40d556:	mov    QWORD PTR [rsp+0xa8],rax
  40d55e:	xor    r9d,r9d
  40d561:	mov    rdx,QWORD PTR [rbx]
  40d564:	xor    r8d,r8d
  40d567:	mov    rcx,rsi
  40d56a:	call   0x422638
  40d56f:	test   rax,rax
  40d572:	jne    0x40d5bb
  40d574:	test   r12,r12
  40d577:	je     0x40d5bb
  40d579:	test   BYTE PTR [r12+0x30],0x2
  40d57f:	je     0x40d926
  40d585:	mov    eax,DWORD PTR [r14]
  40d588:	lea    r8,[rip+0x27961]        # 0x434ef0
  40d58f:	lea    edx,[rax-0x1]
  40d592:	mov    rax,QWORD PTR [r12+0x8]
  40d597:	mov    QWORD PTR [rsp+0x30],r13
  40d59c:	mov    DWORD PTR [rsp+0x28],edx
  40d5a0:	mov    edx,0x18
  40d5a5:	test   rax,rax
  40d5a8:	cmove  rax,rbp
  40d5ac:	xor    ecx,ecx
  40d5ae:	mov    QWORD PTR [rsp+0x20],rax
  40d5b3:	mov    r9,QWORD PTR [rbx]
  40d5b6:	call   0x4226c0
  40d5bb:	mov    rcx,QWORD PTR [rsp+0x98]
  40d5c3:	lea    rdx,[rip+0x26a14]        # 0x433fde
  40d5ca:	mov    r8,rbx
  40d5cd:	mov    r9d,0x2
  40d5d3:	call   0x422818
  40d5d8:	test   rax,rax
  40d5db:	mov    rbx,rax
  40d5de:	jne    0x40d520
  40d5e4:	lea    rcx,[rsp+0x98]
  40d5ec:	call   0x422820
  40d5f1:	mov    edx,DWORD PTR [r15+0xb8]
  40d5f8:	test   edx,edx
  40d5fa:	jle    0x40d71f
  40d600:	mov    rcx,QWORD PTR [rsp+0x88]
  40d608:	mov    rbp,QWORD PTR [rip+0x301f1]        # 0x43d800
  40d60f:	lea    r12,[rsp+0xa8]
  40d617:	xor    edi,edi
  40d619:	mov    eax,DWORD PTR [rcx+0x2c]
  40d61c:	test   eax,eax
  40d61e:	je     0x40d70e
  40d624:	mov    r13,rdi
  40d627:	xor    ebx,ebx
  40d629:	shl    r13,0x4
  40d62d:	jmp    0x40d64a
  40d62f:	nop
  40d630:	mov    rcx,QWORD PTR [rsp+0x88]
  40d638:	lea    edx,[rbx+0x1]
  40d63b:	add    rbx,0x1
  40d63f:	mov    eax,DWORD PTR [rcx+0x2c]
  40d642:	cmp    edx,eax
  40d644:	jae    0x40d707
  40d64a:	mov    rax,QWORD PTR [rcx+0x30]
  40d64e:	mov    r14,QWORD PTR [rax+rbx*8]
  40d652:	mov    rax,QWORD PTR [r15+0xb0]
  40d659:	mov    r8,QWORD PTR [rax+r13*1]
  40d65d:	mov    rdx,r14
  40d660:	call   0x4075b0
  40d665:	cmp    eax,0x1
  40d668:	jne    0x40d630
  40d66a:	mov    rax,QWORD PTR [r15+0xb0]
  40d671:	mov    rsi,QWORD PTR [rax+r13*1+0x8]
  40d676:	mov    QWORD PTR [rsp+0xa8],0x0
  40d682:	mov    rax,QWORD PTR [r14+0x8]
  40d686:	mov    r9d,DWORD PTR [rax+0x80]
  40d68d:	test   r9d,r9d
  40d690:	je     0x40d7d2
  40d696:	cmp    BYTE PTR [rsi],0x0
  40d699:	je     0x40d780
  40d69f:	mov    rcx,rsi
  40d6a2:	call   0x409ef0
  40d6a7:	mov    QWORD PTR [rsp+0x20],0x0
  40d6b0:	mov    r9,rbp
  40d6b3:	mov    r8d,0x2
  40d6b9:	mov    rdx,rsi
  40d6bc:	mov    rcx,r12
  40d6bf:	call   0x422188
  40d6c4:	test   eax,eax
  40d6c6:	js     0x40d906
  40d6cc:	mov    rax,QWORD PTR [r14+0x8]
  40d6d0:	mov    rcx,QWORD PTR [rsp+0xa8]
  40d6d8:	mov    rdx,QWORD PTR [rax+0x78]
  40d6dc:	mov    r8d,DWORD PTR [rax+0x80]
  40d6e3:	call   0x422148
  40d6e8:	mov    rcx,QWORD PTR [rsp+0xa8]
  40d6f0:	call   0x422198
  40d6f5:	mov    rcx,QWORD PTR [rsp+0xa8]
  40d6fd:	call   0x4221c0
  40d702:	jmp    0x40d630
  40d707:	mov    edx,DWORD PTR [r15+0xb8]
  40d70e:	lea    r8d,[rdi+0x1]
  40d712:	add    rdi,0x1
  40d716:	cmp    r8d,edx
  40d719:	jl     0x40d61c
  40d71f:	mov    r8d,DWORD PTR [rsp+0x7c]
  40d724:	test   r8d,r8d
  40d727:	jle    0x40d753
  40d729:	mov    eax,DWORD PTR [rsp+0x7c]
  40d72d:	xor    ebx,ebx
  40d72f:	sub    eax,0x1
  40d732:	lea    rsi,[rax*8+0x8]
  40d73a:	mov    rcx,rbx
  40d73d:	add    rcx,QWORD PTR [rsp+0x90]
  40d745:	add    rbx,0x8
  40d749:	call   0x422820
  40d74e:	cmp    rbx,rsi
  40d751:	jne    0x40d73a
  40d753:	lea    rcx,[rsp+0x90]
  40d75b:	call   0x422768
  40d760:	xor    eax,eax
  40d762:	mov    DWORD PTR [rip+0x34930],0x1        # 0x44209c
  40d76c:	add    rsp,0xb8
  40d773:	pop    rbx
  40d774:	pop    rsi
  40d775:	pop    rdi
  40d776:	pop    rbp
  40d777:	pop    r12
  40d779:	pop    r13
  40d77b:	pop    r14
  40d77d:	pop    r15
  40d77f:	ret    
  40d780:	mov    rcx,QWORD PTR [r14+0x60]
  40d784:	lea    rdx,[rip+0x2789d]        # 0x435028
  40d78b:	xor    r9d,r9d
  40d78e:	xor    r8d,r8d
  40d791:	call   0x422818
  40d796:	test   rax,rax
  40d799:	je     0x40d79f
  40d79b:	mov    rsi,QWORD PTR [rax+0x8]
  40d79f:	cmp    BYTE PTR [rsi],0x0
  40d7a2:	jne    0x40d69f
  40d7a8:	mov    rax,QWORD PTR [rsp+0x60]
  40d7ad:	mov    edx,DWORD PTR [r14]
  40d7b0:	lea    r8,[rip+0x27881]        # 0x435038
  40d7b7:	xor    ecx,ecx
  40d7b9:	mov    eax,DWORD PTR [rax]
  40d7bb:	mov    DWORD PTR [rsp+0x20],edx
  40d7bf:	mov    edx,0x8
  40d7c4:	lea    r9d,[rax-0x1]
  40d7c8:	call   0x4226c0
  40d7cd:	jmp    0x40c5a7
  40d7d2:	mov    rax,QWORD PTR [rsp+0x60]
  40d7d7:	mov    edx,DWORD PTR [r14]
  40d7da:	lea    r8,[rip+0x2781f]        # 0x435000
  40d7e1:	xor    ecx,ecx
  40d7e3:	mov    eax,DWORD PTR [rax]
  40d7e5:	mov    DWORD PTR [rsp+0x20],edx
  40d7e9:	mov    edx,0x18
  40d7ee:	lea    r9d,[rax-0x1]
  40d7f2:	call   0x4226c0
  40d7f7:	jmp    0x40d630
  40d7fc:	pxor   xmm0,xmm0
  40d800:	mov    r9,QWORD PTR [rsp+0x108]
  40d808:	lea    r8,[rip+0x27571]        # 0x434d80
  40d80f:	mov    edx,0x18
  40d814:	xor    ecx,ecx
  40d816:	cvtsi2sd xmm0,QWORD PTR [rsp+0x70]
  40d81d:	divsd  xmm0,QWORD PTR [rip+0x2bca3]        # 0x4394c8
  40d825:	movsd  QWORD PTR [rsp+0x20],xmm0
  40d82b:	call   0x4226c0
  40d830:	jmp    0x40c6fa
  40d835:	mov    ecx,DWORD PTR [rdi+0x38]
  40d838:	call   0x422378
  40d83d:	mov    QWORD PTR [r12+0x28],rax
  40d842:	jmp    0x40cdd9
  40d847:	mov    ecx,DWORD PTR [rdi+0x38]
  40d84a:	call   0x422378
  40d84f:	mov    QWORD PTR [r12+0x28],rax
  40d854:	jmp    0x40cf6c
  40d859:	lea    rcx,[rax+0x28]
  40d85d:	lea    r8,[rip+0x26a7f]        # 0x4342e3
  40d864:	lea    rdx,[rip+0x274aa]        # 0x434d15
  40d86b:	mov    r9d,0x10
  40d871:	call   0x422808
  40d876:	lea    rdx,[rsp+0x88]
  40d87e:	mov    rax,QWORD PTR [r15]
  40d881:	mov    r8,rbx
  40d884:	mov    rcx,rdx
  40d887:	mov    QWORD PTR [rsp+0x48],rdx
  40d88c:	mov    rdx,QWORD PTR [rsp+0x108]
  40d894:	lea    r9,[rax+0x28]
  40d898:	call   0x4221f0
  40d89d:	test   eax,eax
  40d89f:	js     0x40d99a
  40d8a5:	mov    rax,QWORD PTR [r15]
  40d8a8:	lea    rdx,[rip+0x27466]        # 0x434d15
  40d8af:	mov    r9d,0x1
  40d8b5:	xor    r8d,r8d
  40d8b8:	lea    rcx,[rax+0x28]
  40d8bc:	call   0x422808
  40d8c1:	jmp    0x40c51a
  40d8c6:	mov    rax,QWORD PTR [rcx+0x438]
  40d8cd:	movabs rcx,0x8000000000000000
  40d8d7:	cmp    rax,rcx
  40d8da:	mov    ecx,0x0
  40d8df:	cmove  rax,rcx
  40d8e3:	jmp    0x40cd35
  40d8e8:	mov    r9,QWORD PTR [rsp+0x70]
  40d8ed:	jmp    0x40c6ce
  40d8f2:	mov    rax,QWORD PTR [rip+0x2ff87]        # 0x43d880
  40d8f9:	mov    QWORD PTR [rsp+0x60],rax
  40d8fe:	mov    rdi,rax
  40d901:	jmp    0x40cc7f
  40d906:	lea    r8,[rip+0x2776b]        # 0x435078
  40d90d:	mov    r9,rsi
  40d910:	xor    ecx,ecx
  40d912:	mov    edx,0x8
  40d917:	call   0x4226c0
  40d91c:	mov    ecx,0x1
  40d921:	call   0x401cb0
  40d926:	mov    rax,QWORD PTR [rsp+0x60]
  40d92b:	lea    rcx,[rip+0x266ac]        # 0x433fde
  40d932:	lea    r8,[rip+0x2755f]        # 0x434e98
  40d939:	mov    edx,DWORD PTR [rax]
  40d93b:	mov    rax,QWORD PTR [r12+0x8]
  40d940:	sub    edx,0x1
  40d943:	test   rax,rax
  40d946:	cmove  rax,rcx
  40d94a:	mov    rcx,QWORD PTR [rsp+0x108]
  40d952:	mov    DWORD PTR [rsp+0x28],edx
  40d956:	mov    QWORD PTR [rsp+0x20],rax
  40d95b:	mov    edx,0x10
  40d960:	mov    QWORD PTR [rsp+0x30],rcx
  40d965:	mov    r9,QWORD PTR [rbx]
  40d968:	xor    ecx,ecx
  40d96a:	call   0x4226c0
  40d96f:	mov    ecx,0x1
  40d974:	call   0x401cb0
  40d979:	lea    r8,[rip+0x27450]        # 0x434dd0
  40d980:	mov    edx,0x10
  40d985:	xor    ecx,ecx
  40d987:	call   0x4226c0
  40d98c:	jmp    0x40c5a7
  40d991:	lea    r8,[rip+0x27460]        # 0x434df8
  40d998:	jmp    0x40d980
  40d99a:	mov    rcx,QWORD PTR [rsp+0x108]
  40d9a2:	mov    edx,eax
  40d9a4:	call   0x4054b0
  40d9a9:	mov    ecx,0x1
  40d9ae:	call   0x401cb0
  40d9b3:	lea    r8,[rip+0x27467]        # 0x434e21
  40d9ba:	mov    r9,rdi
  40d9bd:	mov    edx,0x10
  40d9c2:	xor    ecx,ecx
  40d9c4:	call   0x4226c0
  40d9c9:	jmp    0x40c5a7
  40d9ce:	mov    rcx,QWORD PTR [rsp+0x108]
  40d9d6:	mov    edx,0xfffffff4
  40d9db:	call   0x4054b0
  40d9e0:	mov    ecx,0x1
  40d9e5:	call   0x401cb0
  40d9ea:	mov    r9,QWORD PTR [r15+0x20]
  40d9ee:	lea    r8,[rip+0x272bc]        # 0x434cb1
  40d9f5:	jmp    0x40d910
  40d9fa:	mov    r9,rsi
  40d9fd:	lea    r8,[rip+0x273ad]        # 0x434db1
  40da04:	jmp    0x40d9bd
  40da06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da10:	push   r15
  40da12:	push   r14
  40da14:	push   r13
  40da16:	push   r12
  40da18:	push   rbp
  40da19:	push   rdi
  40da1a:	push   rsi
  40da1b:	push   rbx
  40da1c:	sub    rsp,0x478
  40da23:	movaps XMMWORD PTR [rsp+0x460],xmm6
  40da2b:	xor    esi,esi
  40da2d:	xor    r15d,r15d
  40da30:	mov    rbx,rcx
  40da33:	mov    r9d,r8d
  40da36:	xor    r8d,r8d
  40da39:	mov    rbp,rdx
  40da3c:	call   0x40a7d0
  40da41:	mov    r13,rax
  40da44:	mov    r12,QWORD PTR [rax+0x10]
  40da48:	mov    r14,QWORD PTR [rax+0x48]
  40da4c:	mov    eax,DWORD PTR [rbx+0x60]
  40da4f:	test   eax,eax
  40da51:	jg     0x40da6a
  40da53:	jmp    0x40dace
  40da55:	mov    rax,QWORD PTR [rbx+0x58]
  40da59:	mov    r15,QWORD PTR [rax+rdi*1+0x8]
  40da5e:	lea    eax,[rsi+0x1]
  40da61:	add    rsi,0x1
  40da65:	cmp    DWORD PTR [rbx+0x60],eax
  40da68:	jle    0x40da95
  40da6a:	mov    rax,QWORD PTR [rbx+0x58]
  40da6e:	mov    rdi,rsi
  40da71:	mov    rdx,r12
  40da74:	shl    rdi,0x4
  40da78:	mov    rcx,rbp
  40da7b:	mov    r8,QWORD PTR [rax+rdi*1]
  40da7f:	call   0x4075b0
  40da84:	cmp    eax,0x0
  40da87:	jg     0x40da55
  40da89:	je     0x40da5e
  40da8b:	mov    ecx,0x1
  40da90:	call   0x401cb0
  40da95:	test   r15,r15
  40da98:	je     0x40dace
  40da9a:	lea    rcx,[r13+0x80]
  40daa1:	mov    rdx,r15
  40daa4:	call   0x4225e0
  40daa9:	test   eax,eax
  40daab:	js     0x40e791
  40dab1:	mov    eax,DWORD PTR [rip+0x23659]        # 0x431110
  40dab7:	test   eax,eax
  40dab9:	jne    0x40dace
  40dabb:	lea    r8,[rip+0x27626]        # 0x4350e8
  40dac2:	mov    edx,0x10
  40dac7:	xor    ecx,ecx
  40dac9:	call   0x4226c0
  40dace:	mov    r15d,DWORD PTR [rbx+0x1f8]
  40dad5:	xor    esi,esi
  40dad7:	xor    edi,edi
  40dad9:	test   r15d,r15d
  40dadc:	jg     0x40dafe
  40dade:	jmp    0x40db8c
  40dae3:	mov    rax,QWORD PTR [rbx+0x1f0]
  40daea:	mov    rdi,QWORD PTR [rax+r15*1+0x8]
  40daef:	lea    eax,[rsi+0x1]
  40daf2:	add    rsi,0x1
  40daf6:	cmp    DWORD PTR [rbx+0x1f8],eax
  40dafc:	jle    0x40db35
  40dafe:	mov    rax,QWORD PTR [rbx+0x1f0]
  40db05:	mov    r15,rsi
  40db08:	mov    rdx,r12
  40db0b:	shl    r15,0x4
  40db0f:	mov    rcx,rbp
  40db12:	mov    r8,QWORD PTR [rax+r15*1]
  40db16:	call   0x4075b0
  40db1b:	cmp    eax,0x0
  40db1e:	jg     0x40dae3
  40db20:	jne    0x40da8b
  40db26:	lea    eax,[rsi+0x1]
  40db29:	add    rsi,0x1
  40db2d:	cmp    DWORD PTR [rbx+0x1f8],eax
  40db33:	jg     0x40dafe
  40db35:	test   rdi,rdi
  40db38:	je     0x40db8c
  40db3a:	lea    rax,[rsp+0x60]
  40db3f:	xor    r9d,r9d
  40db42:	mov    QWORD PTR [rsp+0x20],0x0
  40db4b:	mov    r8d,0xff
  40db51:	mov    rdx,rdi
  40db54:	mov    rcx,rax
  40db57:	call   0x4225f0
  40db5c:	test   eax,eax
  40db5e:	js     0x40e79d
  40db64:	mov    r11d,DWORD PTR [rsp+0x60]
  40db69:	test   r11d,r11d
  40db6c:	jle    0x40e79d
  40db72:	mov    r10d,DWORD PTR [rsp+0x64]
  40db77:	test   r10d,r10d
  40db7a:	jle    0x40e79d
  40db80:	mov    rax,QWORD PTR [rsp+0x60]
  40db85:	mov    QWORD PTR [r13+0x94],rax
  40db8c:	mov    r9d,DWORD PTR [rbx+0x2a8]
  40db93:	xor    esi,esi
  40db95:	test   r9d,r9d
  40db98:	jg     0x40dbc2
  40db9a:	jmp    0x40dbf9
  40db9c:	nop    DWORD PTR [rax+0x0]
  40dba0:	mov    rax,QWORD PTR [rbx+0x2a0]
  40dba7:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  40dbac:	mov    QWORD PTR [r13+0x120],rax
  40dbb3:	lea    eax,[rsi+0x1]
  40dbb6:	add    rsi,0x1
  40dbba:	cmp    DWORD PTR [rbx+0x2a8],eax
  40dbc0:	jle    0x40dbf9
  40dbc2:	mov    rax,QWORD PTR [rbx+0x2a0]
  40dbc9:	mov    rdi,rsi
  40dbcc:	mov    rdx,r12
  40dbcf:	shl    rdi,0x4
  40dbd3:	mov    rcx,rbp
  40dbd6:	mov    r8,QWORD PTR [rax+rdi*1]
  40dbda:	call   0x4075b0
  40dbdf:	cmp    eax,0x0
  40dbe2:	jg     0x40dba0
  40dbe4:	jne    0x40da8b
  40dbea:	lea    eax,[rsi+0x1]
  40dbed:	add    rsi,0x1
  40dbf1:	cmp    DWORD PTR [rbx+0x2a8],eax
  40dbf7:	jg     0x40dbc2
  40dbf9:	mov    r8d,DWORD PTR [rbx+0x298]
  40dc00:	xor    esi,esi
  40dc02:	test   r8d,r8d
  40dc05:	jg     0x40dc32
  40dc07:	jmp    0x40dc69
  40dc09:	nop    DWORD PTR [rax+0x0]
  40dc10:	mov    rax,QWORD PTR [rbx+0x290]
  40dc17:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  40dc1c:	mov    QWORD PTR [r13+0x118],rax
  40dc23:	lea    eax,[rsi+0x1]
  40dc26:	add    rsi,0x1
  40dc2a:	cmp    DWORD PTR [rbx+0x298],eax
  40dc30:	jle    0x40dc69
  40dc32:	mov    rax,QWORD PTR [rbx+0x290]
  40dc39:	mov    rdi,rsi
  40dc3c:	mov    rdx,r12
  40dc3f:	shl    rdi,0x4
  40dc43:	mov    rcx,rbp
  40dc46:	mov    r8,QWORD PTR [rax+rdi*1]
  40dc4a:	call   0x4075b0
  40dc4f:	cmp    eax,0x0
  40dc52:	jg     0x40dc10
  40dc54:	jne    0x40da8b
  40dc5a:	lea    eax,[rsi+0x1]
  40dc5d:	add    rsi,0x1
  40dc61:	cmp    DWORD PTR [rbx+0x298],eax
  40dc67:	jg     0x40dc32
  40dc69:	mov    ecx,DWORD PTR [r13+0x160]
  40dc70:	test   ecx,ecx
  40dc72:	jne    0x40e1b0
  40dc78:	mov    eax,DWORD PTR [rbx+0x70]
  40dc7b:	test   eax,eax
  40dc7d:	jle    0x40dcf9
  40dc7f:	xor    esi,esi
  40dc81:	xor    r15d,r15d
  40dc84:	jmp    0x40dca5
  40dc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc90:	mov    rax,QWORD PTR [rbx+0x68]
  40dc94:	mov    r15,QWORD PTR [rax+rdi*1+0x8]
  40dc99:	lea    eax,[rsi+0x1]
  40dc9c:	add    rsi,0x1
  40dca0:	cmp    DWORD PTR [rbx+0x70],eax
  40dca3:	jle    0x40dcd6
  40dca5:	mov    rax,QWORD PTR [rbx+0x68]
  40dca9:	mov    rdi,rsi
  40dcac:	mov    rdx,r12
  40dcaf:	shl    rdi,0x4
  40dcb3:	mov    rcx,rbp
  40dcb6:	mov    r8,QWORD PTR [rax+rdi*1]
  40dcba:	call   0x4075b0
  40dcbf:	cmp    eax,0x0
  40dcc2:	jg     0x40dc90
  40dcc4:	jne    0x40da8b
  40dcca:	lea    eax,[rsi+0x1]
  40dccd:	add    rsi,0x1
  40dcd1:	cmp    DWORD PTR [rbx+0x70],eax
  40dcd4:	jg     0x40dca5
  40dcd6:	test   r15,r15
  40dcd9:	je     0x40dcf9
  40dcdb:	lea    rdx,[r14+0x98]
  40dce2:	lea    rcx,[r14+0x94]
  40dce9:	mov    r8,r15
  40dcec:	call   0x4225d8
  40dcf1:	test   eax,eax
  40dcf3:	js     0x40e727
  40dcf9:	mov    eax,DWORD PTR [rip+0x34361]        # 0x442060
  40dcff:	mov    DWORD PTR [r14+0x374],eax
  40dd06:	mov    eax,DWORD PTR [rbx+0x80]
  40dd0c:	test   eax,eax
  40dd0e:	jle    0x40dd93
  40dd14:	xor    esi,esi
  40dd16:	xor    r15d,r15d
  40dd19:	jmp    0x40dd38
  40dd1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd20:	mov    rax,QWORD PTR [rbx+0x78]
  40dd24:	mov    r15,QWORD PTR [rax+rdi*1+0x8]
  40dd29:	lea    eax,[rsi+0x1]
  40dd2c:	add    rsi,0x1
  40dd30:	cmp    DWORD PTR [rbx+0x80],eax
  40dd36:	jle    0x40dd6c
  40dd38:	mov    rax,QWORD PTR [rbx+0x78]
  40dd3c:	mov    rdi,rsi
  40dd3f:	mov    rdx,r12
  40dd42:	shl    rdi,0x4
  40dd46:	mov    rcx,rbp
  40dd49:	mov    r8,QWORD PTR [rax+rdi*1]
  40dd4d:	call   0x4075b0
  40dd52:	cmp    eax,0x0
  40dd55:	jg     0x40dd20
  40dd57:	jne    0x40da8b
  40dd5d:	lea    eax,[rsi+0x1]
  40dd60:	add    rsi,0x1
  40dd64:	cmp    DWORD PTR [rbx+0x80],eax
  40dd6a:	jg     0x40dd38
  40dd6c:	test   r15,r15
  40dd6f:	je     0x40dd93
  40dd71:	cmp    BYTE PTR [r15],0x2b
  40dd75:	je     0x40e63f
  40dd7b:	mov    rcx,r15
  40dd7e:	call   0x422708
  40dd83:	cmp    eax,0xffffffff
  40dd86:	mov    DWORD PTR [r14+0xa8],eax
  40dd8d:	je     0x40e779
  40dd93:	mov    rax,QWORD PTR [r14+0x108]
  40dd9a:	mov    QWORD PTR [r12+0x58],rax
  40dd9f:	mov    eax,DWORD PTR [rip+0x3430f]        # 0x4420b4
  40dda5:	test   eax,eax
  40dda7:	je     0x40ddb4
  40dda9:	mov    DWORD PTR [r14+0xa4],0x0
  40ddb4:	mov    eax,DWORD PTR [rbx+0x218]
  40ddba:	xor    edi,edi
  40ddbc:	xor    esi,esi
  40ddbe:	test   eax,eax
  40ddc0:	jg     0x40ddeb
  40ddc2:	jmp    0x40de92
  40ddc7:	nop    WORD PTR [rax+rax*1+0x0]
  40ddd0:	mov    rax,QWORD PTR [rbx+0x210]
  40ddd7:	mov    rsi,QWORD PTR [rax+r15*1+0x8]
  40dddc:	lea    eax,[rdi+0x1]
  40dddf:	add    rdi,0x1
  40dde3:	cmp    DWORD PTR [rbx+0x218],eax
  40dde9:	jle    0x40de22
  40ddeb:	mov    rax,QWORD PTR [rbx+0x210]
  40ddf2:	mov    r15,rdi
  40ddf5:	mov    rdx,r12
  40ddf8:	shl    r15,0x4
  40ddfc:	mov    rcx,rbp
  40ddff:	mov    r8,QWORD PTR [rax+r15*1]
  40de03:	call   0x4075b0
  40de08:	cmp    eax,0x0
  40de0b:	jg     0x40ddd0
  40de0d:	jne    0x40da8b
  40de13:	lea    eax,[rdi+0x1]
  40de16:	add    rdi,0x1
  40de1a:	cmp    DWORD PTR [rbx+0x218],eax
  40de20:	jg     0x40ddeb
  40de22:	test   rsi,rsi
  40de25:	mov    QWORD PTR [rsp+0x30],rsi
  40de2a:	je     0x40de92
  40de2c:	mov    ecx,0x80
  40de31:	call   0x422670
  40de36:	test   rax,rax
  40de39:	mov    r15,rax
  40de3c:	mov    QWORD PTR [r14+0x158],rax
  40de43:	je     0x40e785
  40de49:	mov    rcx,rsi
  40de4c:	xor    edi,edi
  40de4e:	call   0x42fbf0
  40de53:	mov    WORD PTR [r15],ax
  40de57:	nop    WORD PTR [rax+rax*1+0x0]
  40de60:	mov    edx,0x2c
  40de65:	mov    rcx,rsi
  40de68:	call   0x42fb00
  40de6d:	test   rax,rax
  40de70:	je     0x40e6d0
  40de76:	lea    rsi,[rax+0x1]
  40de7a:	mov    rcx,rsi
  40de7d:	call   0x42fbf0
  40de82:	mov    WORD PTR [r15+rdi*2+0x2],ax
  40de88:	add    rdi,0x1
  40de8c:	cmp    rdi,0x3f
  40de90:	jne    0x40de60
  40de92:	mov    eax,DWORD PTR [rbx+0x238]
  40de98:	xor    edi,edi
  40de9a:	xor    esi,esi
  40de9c:	test   eax,eax
  40de9e:	jg     0x40dec0
  40dea0:	jmp    0x40df62
  40dea5:	mov    rax,QWORD PTR [rbx+0x230]
  40deac:	mov    rsi,QWORD PTR [rax+r15*1+0x8]
  40deb1:	lea    eax,[rdi+0x1]
  40deb4:	add    rdi,0x1
  40deb8:	cmp    DWORD PTR [rbx+0x238],eax
  40debe:	jle    0x40def7
  40dec0:	mov    rax,QWORD PTR [rbx+0x230]
  40dec7:	mov    r15,rdi
  40deca:	mov    rdx,r12
  40decd:	shl    r15,0x4
  40ded1:	mov    rcx,rbp
  40ded4:	mov    r8,QWORD PTR [rax+r15*1]
  40ded8:	call   0x4075b0
  40dedd:	cmp    eax,0x0
  40dee0:	jg     0x40dea5
  40dee2:	jne    0x40da8b
  40dee8:	lea    eax,[rdi+0x1]
  40deeb:	add    rdi,0x1
  40deef:	cmp    DWORD PTR [rbx+0x238],eax
  40def5:	jg     0x40dec0
  40def7:	test   rsi,rsi
  40defa:	mov    QWORD PTR [rsp+0x30],rsi
  40deff:	je     0x40df62
  40df01:	mov    ecx,0x80
  40df06:	call   0x422670
  40df0b:	test   rax,rax
  40df0e:	mov    r15,rax
  40df11:	je     0x40e785
  40df17:	mov    rdx,rax
  40df1a:	mov    rcx,r14
  40df1d:	xor    edi,edi
  40df1f:	call   0x422458
  40df24:	mov    rcx,rsi
  40df27:	call   0x42fbf0
  40df2c:	mov    WORD PTR [r15],ax
  40df30:	mov    edx,0x2c
  40df35:	mov    rcx,rsi
  40df38:	call   0x42fb00
  40df3d:	test   rax,rax
  40df40:	je     0x40e6d0
  40df46:	lea    rsi,[rax+0x1]
  40df4a:	mov    rcx,rsi
  40df4d:	call   0x42fbf0
  40df52:	mov    WORD PTR [r15+rdi*2+0x2],ax
  40df58:	add    rdi,0x1
  40df5c:	cmp    rdi,0x3f
  40df60:	jne    0x40df30
  40df62:	mov    eax,DWORD PTR [rbx+0x228]
  40df68:	xor    edi,edi
  40df6a:	xor    esi,esi
  40df6c:	test   eax,eax
  40df6e:	jg     0x40df90
  40df70:	jmp    0x40e032
  40df75:	mov    rax,QWORD PTR [rbx+0x220]
  40df7c:	mov    rsi,QWORD PTR [rax+r15*1+0x8]
  40df81:	lea    eax,[rdi+0x1]
  40df84:	add    rdi,0x1
  40df88:	cmp    DWORD PTR [rbx+0x228],eax
  40df8e:	jle    0x40dfc7
  40df90:	mov    rax,QWORD PTR [rbx+0x220]
  40df97:	mov    r15,rdi
  40df9a:	mov    rdx,r12
  40df9d:	shl    r15,0x4
  40dfa1:	mov    rcx,rbp
  40dfa4:	mov    r8,QWORD PTR [rax+r15*1]
  40dfa8:	call   0x4075b0
  40dfad:	cmp    eax,0x0
  40dfb0:	jg     0x40df75
  40dfb2:	jne    0x40da8b
  40dfb8:	lea    eax,[rdi+0x1]
  40dfbb:	add    rdi,0x1
  40dfbf:	cmp    DWORD PTR [rbx+0x228],eax
  40dfc5:	jg     0x40df90
  40dfc7:	test   rsi,rsi
  40dfca:	mov    QWORD PTR [rsp+0x30],rsi
  40dfcf:	je     0x40e032
  40dfd1:	mov    ecx,0x80
  40dfd6:	call   0x422670
  40dfdb:	test   rax,rax
  40dfde:	mov    r15,rax
  40dfe1:	mov    QWORD PTR [r14+0x160],rax
  40dfe8:	je     0x40e71e
  40dfee:	mov    rcx,rsi
  40dff1:	xor    edi,edi
  40dff3:	call   0x42fbf0
  40dff8:	mov    WORD PTR [r15],ax
  40dffc:	nop    DWORD PTR [rax+0x0]
  40e000:	mov    edx,0x2c
  40e005:	mov    rcx,rsi
  40e008:	call   0x42fb00
  40e00d:	test   rax,rax
  40e010:	je     0x40e6d0
  40e016:	lea    rsi,[rax+0x1]
  40e01a:	mov    rcx,rsi
  40e01d:	call   0x42fbf0
  40e022:	mov    WORD PTR [r15+rdi*2+0x2],ax
  40e028:	add    rdi,0x1
  40e02c:	cmp    rdi,0x3f
  40e030:	jne    0x40e000
  40e032:	mov    r15d,DWORD PTR [rbx+0x208]
  40e039:	xor    edi,edi
  40e03b:	xor    esi,esi
  40e03d:	test   r15d,r15d
  40e040:	jg     0x40e06b
  40e042:	jmp    0x40e266
  40e047:	nop    WORD PTR [rax+rax*1+0x0]
  40e050:	mov    rax,QWORD PTR [rbx+0x200]
  40e057:	mov    rsi,QWORD PTR [rax+r15*1+0x8]
  40e05c:	lea    eax,[rdi+0x1]
  40e05f:	add    rdi,0x1
  40e063:	cmp    DWORD PTR [rbx+0x208],eax
  40e069:	jle    0x40e0a2
  40e06b:	mov    rax,QWORD PTR [rbx+0x200]
  40e072:	mov    r15,rdi
  40e075:	mov    rdx,r12
  40e078:	shl    r15,0x4
  40e07c:	mov    rcx,rbp
  40e07f:	mov    r8,QWORD PTR [rax+r15*1]
  40e083:	call   0x4075b0
  40e088:	cmp    eax,0x0
  40e08b:	jg     0x40e050
  40e08d:	jne    0x40da8b
  40e093:	lea    eax,[rdi+0x1]
  40e096:	add    rdi,0x1
  40e09a:	cmp    DWORD PTR [rbx+0x208],eax
  40e0a0:	jg     0x40e06b
  40e0a2:	test   rsi,rsi
  40e0a5:	je     0x40e266
  40e0ab:	lea    rax,[rsp+0x60]
  40e0b0:	mov    edi,0x1
  40e0b5:	xor    r15d,r15d
  40e0b8:	movsd  xmm6,QWORD PTR [rip+0x2b430]        # 0x4394f0
  40e0c0:	mov    QWORD PTR [rsp+0x30],rax
  40e0c5:	lea    rax,[rsp+0x5c]
  40e0ca:	mov    QWORD PTR [rsp+0x40],rax
  40e0cf:	lea    rax,[rsp+0x58]
  40e0d4:	mov    QWORD PTR [rsp+0x38],rax
  40e0d9:	jmp    0x40e115
  40e0db:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0e0:	mov    DWORD PTR [rax+0x8],edx
  40e0e3:	mov    DWORD PTR [rax+0xc],0x3f800000
  40e0ea:	mov    edx,0x2f
  40e0ef:	mov    rcx,rsi
  40e0f2:	call   0x42fb00
  40e0f7:	test   rax,rax
  40e0fa:	je     0x40e270
  40e100:	add    r15,0x10
  40e104:	add    rdi,0x1
  40e108:	add    rax,0x1
  40e10c:	mov    rsi,rax
  40e10f:	je     0x40e270
  40e115:	mov    rax,QWORD PTR [rsp+0x30]
  40e11a:	mov    r9,QWORD PTR [rsp+0x40]
  40e11f:	lea    rdx,[rip+0x26abb]        # 0x434be1
  40e126:	mov    r8,QWORD PTR [rsp+0x38]
  40e12b:	mov    rcx,rsi
  40e12e:	mov    QWORD PTR [rsp+0x20],rax
  40e133:	call   0x40b190
  40e138:	cmp    eax,0x3
  40e13b:	jne    0x40e6fd
  40e141:	mov    rcx,QWORD PTR [r14+0x258]
  40e148:	mov    r8d,0x10
  40e14e:	mov    rdx,rdi
  40e151:	mov    DWORD PTR [rsp+0x4c],edi
  40e155:	call   0x4225b8
  40e15a:	test   rax,rax
  40e15d:	mov    QWORD PTR [r14+0x258],rax
  40e164:	je     0x40e715
  40e16a:	mov    edx,DWORD PTR [rsp+0x58]
  40e16e:	add    rax,r15
  40e171:	mov    DWORD PTR [rax],edx
  40e173:	mov    edx,DWORD PTR [rsp+0x5c]
  40e177:	mov    DWORD PTR [rax+0x4],edx
  40e17a:	mov    edx,DWORD PTR [rsp+0x60]
  40e17e:	test   edx,edx
  40e180:	jg     0x40e0e0
  40e186:	pxor   xmm0,xmm0
  40e18a:	neg    edx
  40e18c:	mov    DWORD PTR [rax+0x8],0x0
  40e193:	pxor   xmm1,xmm1
  40e197:	cvtsi2sd xmm0,edx
  40e19b:	divsd  xmm0,xmm6
  40e19f:	cvtsd2ss xmm1,xmm0
  40e1a3:	movss  DWORD PTR [rax+0xc],xmm1
  40e1a8:	jmp    0x40e0ea
  40e1ad:	nop    DWORD PTR [rax]
  40e1b0:	mov    edx,DWORD PTR [rbx+0x278]
  40e1b6:	xor    esi,esi
  40e1b8:	test   edx,edx
  40e1ba:	jg     0x40e1e1
  40e1bc:	jmp    0x40e22b
  40e1be:	xchg   ax,ax
  40e1c0:	mov    rax,QWORD PTR [rbx+0x270]
  40e1c7:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40e1cb:	mov    DWORD PTR [r13+0x170],eax
  40e1d2:	lea    eax,[rsi+0x1]
  40e1d5:	add    rsi,0x1
  40e1d9:	cmp    DWORD PTR [rbx+0x278],eax
  40e1df:	jle    0x40e220
  40e1e1:	mov    rax,QWORD PTR [rbx+0x270]
  40e1e8:	mov    rdi,rsi
  40e1eb:	mov    rdx,r12
  40e1ee:	shl    rdi,0x4
  40e1f2:	mov    rcx,rbp
  40e1f5:	mov    r8,QWORD PTR [rax+rdi*1]
  40e1f9:	call   0x4075b0
  40e1fe:	cmp    eax,0x0
  40e201:	jg     0x40e1c0
  40e203:	jne    0x40da8b
  40e209:	lea    eax,[rsi+0x1]
  40e20c:	add    rsi,0x1
  40e210:	cmp    DWORD PTR [rbx+0x278],eax
  40e216:	jg     0x40e1e1
  40e218:	nop    DWORD PTR [rax+rax*1+0x0]
  40e220:	mov    eax,DWORD PTR [r13+0x160]
  40e227:	test   eax,eax
  40e229:	je     0x40e247
  40e22b:	cmp    QWORD PTR [r13+0x120],0x0
  40e233:	jne    0x40e76f
  40e239:	cmp    QWORD PTR [r13+0x118],0x0
  40e241:	jne    0x40e76f
  40e247:	movaps xmm6,XMMWORD PTR [rsp+0x460]
  40e24f:	mov    rax,r13
  40e252:	add    rsp,0x478
  40e259:	pop    rbx
  40e25a:	pop    rsi
  40e25b:	pop    rdi
  40e25c:	pop    rbp
  40e25d:	pop    r12
  40e25f:	pop    r13
  40e261:	pop    r14
  40e263:	pop    r15
  40e265:	ret    
  40e266:	mov    DWORD PTR [rsp+0x4c],0x0
  40e26e:	xchg   ax,ax
  40e270:	mov    esi,DWORD PTR [rip+0x33e32]        # 0x4420a8
  40e276:	mov    eax,DWORD PTR [rsp+0x4c]
  40e27a:	test   esi,esi
  40e27c:	mov    DWORD PTR [r14+0x250],eax
  40e283:	je     0x40e28d
  40e285:	or     DWORD PTR [r14+0x70],0x8000
  40e28d:	mov    r11d,DWORD PTR [rbx+0x2e8]
  40e294:	test   r11d,r11d
  40e297:	jle    0x40e6f6
  40e29d:	xor    esi,esi
  40e29f:	xor    edi,edi
  40e2a1:	jmp    0x40e2be
  40e2a3:	mov    rax,QWORD PTR [rbx+0x2e0]
  40e2aa:	mov    edi,DWORD PTR [rax+r15*1+0x8]
  40e2af:	lea    eax,[rsi+0x1]
  40e2b2:	add    rsi,0x1
  40e2b6:	cmp    DWORD PTR [rbx+0x2e8],eax
  40e2bc:	jle    0x40e2f5
  40e2be:	mov    rax,QWORD PTR [rbx+0x2e0]
  40e2c5:	mov    r15,rsi
  40e2c8:	mov    rdx,r12
  40e2cb:	shl    r15,0x4
  40e2cf:	mov    rcx,rbp
  40e2d2:	mov    r8,QWORD PTR [rax+r15*1]
  40e2d6:	call   0x4075b0
  40e2db:	cmp    eax,0x0
  40e2de:	jg     0x40e2a3
  40e2e0:	jne    0x40da8b
  40e2e6:	lea    eax,[rsi+0x1]
  40e2e9:	add    rsi,0x1
  40e2ed:	cmp    DWORD PTR [rbx+0x2e8],eax
  40e2f3:	jg     0x40e2be
  40e2f5:	test   edi,edi
  40e2f7:	mov    esi,edi
  40e2f9:	je     0x40e310
  40e2fb:	test   dil,0x1
  40e2ff:	jne    0x40e5cd
  40e305:	mov    esi,edi
  40e307:	and    edi,0x2
  40e30a:	jne    0x40e5a0
  40e310:	mov    r10d,DWORD PTR [rbx+0x2f8]
  40e317:	xor    edi,edi
  40e319:	test   r10d,r10d
  40e31c:	jg     0x40e342
  40e31e:	jmp    0x40e379
  40e320:	mov    rax,QWORD PTR [rbx+0x2f0]
  40e327:	mov    rax,QWORD PTR [rax+r15*1+0x8]
  40e32c:	mov    QWORD PTR [r13+0xf8],rax
  40e333:	lea    eax,[rdi+0x1]
  40e336:	add    rdi,0x1
  40e33a:	cmp    eax,DWORD PTR [rbx+0x2f8]
  40e340:	jge    0x40e379
  40e342:	mov    rax,QWORD PTR [rbx+0x2f0]
  40e349:	mov    r15,rdi
  40e34c:	mov    rdx,r12
  40e34f:	shl    r15,0x4
  40e353:	mov    rcx,rbp
  40e356:	mov    r8,QWORD PTR [rax+r15*1]
  40e35a:	call   0x4075b0
  40e35f:	cmp    eax,0x0
  40e362:	jg     0x40e320
  40e364:	jne    0x40da8b
  40e36a:	lea    eax,[rdi+0x1]
  40e36d:	add    rdi,0x1
  40e371:	cmp    eax,DWORD PTR [rbx+0x2f8]
  40e377:	jl     0x40e342
  40e379:	mov    rcx,QWORD PTR [r13+0xf8]
  40e380:	test   rcx,rcx
  40e383:	je     0x40e62b
  40e389:	call   0x422578
  40e38e:	test   rax,rax
  40e391:	mov    QWORD PTR [r13+0xf8],rax
  40e398:	je     0x40da8b
  40e39e:	test   esi,esi
  40e3a0:	je     0x40e3fc
  40e3a2:	mov    r9,rax
  40e3a5:	mov    ecx,DWORD PTR [rsp+0x4c]
  40e3a9:	lea    rax,[rsp+0x60]
  40e3ae:	lea    r8,[rip+0x26e9f]        # 0x435254
  40e3b5:	mov    edx,0x400
  40e3ba:	lea    rdi,[rip+0x26e9d]        # 0x43525e
  40e3c1:	mov    QWORD PTR [rsp+0x30],rax
  40e3c6:	mov    DWORD PTR [rsp+0x20],ecx
  40e3ca:	mov    rcx,rax
  40e3cd:	call   0x4082b0
  40e3d2:	mov    rax,QWORD PTR [r13+0x50]
  40e3d6:	mov    ecx,0x8
  40e3db:	mov    rsi,QWORD PTR [rax]
  40e3de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e3e0:	je     0x40e664
  40e3e6:	mov    eax,DWORD PTR [r14+0x70]
  40e3ea:	test   ah,0x4
  40e3ed:	jne    0x40e6ad
  40e3f3:	test   ah,0x2
  40e3f6:	jne    0x40e687
  40e3fc:	mov    r9d,DWORD PTR [rbx+0x1d8]
  40e403:	xor    esi,esi
  40e405:	test   r9d,r9d
  40e408:	jg     0x40e432
  40e40a:	jmp    0x40e469
  40e40c:	nop    DWORD PTR [rax+0x0]
  40e410:	mov    rax,QWORD PTR [rbx+0x1d0]
  40e417:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  40e41c:	mov    QWORD PTR [r13+0xb0],rax
  40e423:	lea    eax,[rsi+0x1]
  40e426:	add    rsi,0x1
  40e42a:	cmp    eax,DWORD PTR [rbx+0x1d8]
  40e430:	jge    0x40e469
  40e432:	mov    rax,QWORD PTR [rbx+0x1d0]
  40e439:	mov    rdi,rsi
  40e43c:	mov    rdx,r12
  40e43f:	shl    rdi,0x4
  40e443:	mov    rcx,rbp
  40e446:	mov    r8,QWORD PTR [rax+rdi*1]
  40e44a:	call   0x4075b0
  40e44f:	cmp    eax,0x0
  40e452:	jg     0x40e410
  40e454:	jne    0x40da8b
  40e45a:	lea    eax,[rsi+0x1]
  40e45d:	add    rsi,0x1
  40e461:	cmp    eax,DWORD PTR [rbx+0x1d8]
  40e467:	jl     0x40e432
  40e469:	mov    rcx,QWORD PTR [r13+0xb0]
  40e470:	test   rcx,rcx
  40e473:	je     0x40e481
  40e475:	call   0x422578
  40e47a:	mov    QWORD PTR [r13+0xb0],rax
  40e481:	mov    r8d,DWORD PTR [rbx+0x1e8]
  40e488:	xor    esi,esi
  40e48a:	test   r8d,r8d
  40e48d:	jg     0x40e4b2
  40e48f:	jmp    0x40e4e9
  40e491:	mov    rax,QWORD PTR [rbx+0x1e0]
  40e498:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40e49c:	mov    DWORD PTR [r13+0x88],eax
  40e4a3:	lea    eax,[rsi+0x1]
  40e4a6:	add    rsi,0x1
  40e4aa:	cmp    DWORD PTR [rbx+0x1e8],eax
  40e4b0:	jle    0x40e4e9
  40e4b2:	mov    rax,QWORD PTR [rbx+0x1e0]
  40e4b9:	mov    rdi,rsi
  40e4bc:	mov    rdx,r12
  40e4bf:	shl    rdi,0x4
  40e4c3:	mov    rcx,rbp
  40e4c6:	mov    r8,QWORD PTR [rax+rdi*1]
  40e4ca:	call   0x4075b0
  40e4cf:	cmp    eax,0x0
  40e4d2:	jg     0x40e491
  40e4d4:	jne    0x40da8b
  40e4da:	lea    eax,[rsi+0x1]
  40e4dd:	add    rsi,0x1
  40e4e1:	cmp    DWORD PTR [rbx+0x1e8],eax
  40e4e7:	jg     0x40e4b2
  40e4e9:	mov    ecx,DWORD PTR [rbx+0x248]
  40e4ef:	xor    esi,esi
  40e4f1:	mov    DWORD PTR [r13+0x8c],0xffffffff
  40e4fc:	test   ecx,ecx
  40e4fe:	jg     0x40e523
  40e500:	jmp    0x40e55a
  40e502:	mov    rax,QWORD PTR [rbx+0x240]
  40e509:	mov    eax,DWORD PTR [rax+rdi*1+0x8]
  40e50d:	mov    DWORD PTR [r13+0x8c],eax
  40e514:	lea    eax,[rsi+0x1]
  40e517:	add    rsi,0x1
  40e51b:	cmp    DWORD PTR [rbx+0x248],eax
  40e521:	jle    0x40e55a
  40e523:	mov    rax,QWORD PTR [rbx+0x240]
  40e52a:	mov    rdi,rsi
  40e52d:	mov    rdx,r12
  40e530:	shl    rdi,0x4
  40e534:	mov    rcx,rbp
  40e537:	mov    r8,QWORD PTR [rax+rdi*1]
  40e53b:	call   0x4075b0
  40e540:	cmp    eax,0x0
  40e543:	jg     0x40e502
  40e545:	jne    0x40da8b
  40e54b:	lea    eax,[rsi+0x1]
  40e54e:	add    rsi,0x1
  40e552:	cmp    DWORD PTR [rbx+0x248],eax
  40e558:	jg     0x40e523
  40e55a:	mov    rcx,QWORD PTR [r13+0x120]
  40e561:	mov    rax,QWORD PTR [r13+0x10]
  40e565:	test   rcx,rcx
  40e568:	je     0x40e5fa
  40e56e:	cmp    QWORD PTR [r13+0x118],0x0
  40e576:	jne    0x40e742
  40e57c:	call   0x4086e0
  40e581:	test   rax,rax
  40e584:	mov    QWORD PTR [r13+0x110],rax
  40e58b:	jne    0x40e220
  40e591:	jmp    0x40da8b
  40e596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5a0:	or     DWORD PTR [r14+0x70],0x400
  40e5a8:	lea    rcx,[r13+0x128]
  40e5af:	lea    r8,[rip+0x26c97]        # 0x43524d
  40e5b6:	lea    rdx,[rip+0x26c8a]        # 0x435247
  40e5bd:	mov    r9d,0x20
  40e5c3:	call   0x422808
  40e5c8:	jmp    0x40e310
  40e5cd:	or     DWORD PTR [r14+0x70],0x200
  40e5d5:	lea    rcx,[r13+0x128]
  40e5dc:	lea    r8,[rip+0x26c5d]        # 0x435240
  40e5e3:	lea    rdx,[rip+0x26c5d]        # 0x435247
  40e5ea:	mov    r9d,0x20
  40e5f0:	call   0x422808
  40e5f5:	jmp    0x40e305
  40e5fa:	mov    rcx,QWORD PTR [r13+0x118]
  40e601:	test   rcx,rcx
  40e604:	jne    0x40e621
  40e606:	mov    rax,QWORD PTR [rax+0x8]
  40e60a:	lea    rcx,[rip+0x26602]        # 0x434c13
  40e611:	mov    edx,DWORD PTR [rax+0xc]
  40e614:	lea    rax,[rip+0x265f3]        # 0x434c0e
  40e61b:	test   edx,edx
  40e61d:	cmove  rcx,rax
  40e621:	call   0x422578
  40e626:	jmp    0x40e581
  40e62b:	test   esi,esi
  40e62d:	je     0x40e3fc
  40e633:	lea    r9,[rip+0x26a7e]        # 0x4350b8
  40e63a:	jmp    0x40e3a5
  40e63f:	mov    DWORD PTR [r13+0x180],0x1
  40e64a:	cmp    BYTE PTR [r15+0x1],0x0
  40e64f:	je     0x40dd93
  40e655:	add    r15,0x1
  40e659:	jne    0x40dd7b
  40e65f:	jmp    0x40dd93
  40e664:	mov    r8,QWORD PTR [rsp+0x30]
  40e669:	lea    rcx,[r13+0x128]
  40e670:	lea    rdx,[rip+0x26bef]        # 0x435266
  40e677:	mov    r9d,0x10
  40e67d:	call   0x422808
  40e682:	jmp    0x40e3fc
  40e687:	mov    rcx,QWORD PTR [rsp+0x30]
  40e68c:	lea    rdx,[rip+0x26c0e]        # 0x4352a1
  40e693:	call   0x4227d0
  40e698:	test   rax,rax
  40e69b:	je     0x40e7a9
  40e6a1:	mov    QWORD PTR [r13+0x100],rax
  40e6a8:	jmp    0x40e3fc
  40e6ad:	mov    rcx,QWORD PTR [rsp+0x30]
  40e6b2:	call   0x4086e0
  40e6b7:	test   rax,rax
  40e6ba:	je     0x40e7dd
  40e6c0:	mov    QWORD PTR [r14+0x2f0],rax
  40e6c7:	mov    eax,DWORD PTR [r14+0x70]
  40e6cb:	jmp    0x40e3f3
  40e6d0:	mov    r9,QWORD PTR [rsp+0x30]
  40e6d5:	lea    r8,[rip+0x26abc]        # 0x435198
  40e6dc:	xor    ecx,ecx
  40e6de:	mov    DWORD PTR [rsp+0x20],edi
  40e6e2:	mov    edx,0x8
  40e6e7:	call   0x4226c0
  40e6ec:	mov    ecx,0x1
  40e6f1:	call   0x401cb0
  40e6f6:	xor    esi,esi
  40e6f8:	jmp    0x40e310
  40e6fd:	lea    r8,[rip+0x26af1]        # 0x4351f5
  40e704:	mov    edx,0x8
  40e709:	xor    ecx,ecx
  40e70b:	call   0x4226c0
  40e710:	jmp    0x40da8b
  40e715:	lea    r8,[rip+0x26af4]        # 0x435210
  40e71c:	jmp    0x40e704
  40e71e:	lea    r8,[rip+0x26aa3]        # 0x4351c8
  40e725:	jmp    0x40e704
  40e727:	lea    r8,[rip+0x2649a]        # 0x434bc8
  40e72e:	mov    r9,r15
  40e731:	mov    edx,0x8
  40e736:	xor    ecx,ecx
  40e738:	call   0x4226c0
  40e73d:	jmp    0x40da8b
  40e742:	mov    eax,DWORD PTR [rax]
  40e744:	lea    r8,[rip+0x264ed]        # 0x434c38
  40e74b:	xor    ecx,ecx
  40e74d:	mov    edx,0x10
  40e752:	mov    DWORD PTR [rsp+0x20],eax
  40e756:	mov    rax,QWORD PTR [rip+0x2f143]        # 0x43d8a0
  40e75d:	mov    r9d,DWORD PTR [rax]
  40e760:	call   0x4226c0
  40e765:	mov    ecx,0x1
  40e76a:	call   0x401cb0
  40e76f:	xor    edx,edx
  40e771:	mov    rcx,r13
  40e774:	call   0x430090
  40e779:	mov    r9,r15
  40e77c:	lea    r8,[rip+0x269bd]        # 0x435140
  40e783:	jmp    0x40e731
  40e785:	lea    r8,[rip+0x269dc]        # 0x435168
  40e78c:	jmp    0x40e704
  40e791:	mov    r9,r15
  40e794:	lea    r8,[rip+0x26929]        # 0x4350c4
  40e79b:	jmp    0x40e731
  40e79d:	mov    r9,rdi
  40e7a0:	lea    r8,[rip+0x26979]        # 0x435120
  40e7a7:	jmp    0x40e731
  40e7a9:	call   QWORD PTR [rip+0x367e1]        # 0x444f90
  40e7af:	mov    ecx,DWORD PTR [rax]
  40e7b1:	call   0x42fae8
  40e7b6:	mov    r9,QWORD PTR [rsp+0x30]
  40e7bb:	lea    r8,[rip+0x26ae6]        # 0x4352a8
  40e7c2:	xor    ecx,ecx
  40e7c4:	mov    QWORD PTR [rsp+0x20],rax
  40e7c9:	mov    edx,0x8
  40e7ce:	call   0x4226c0
  40e7d3:	mov    ecx,0x1
  40e7d8:	call   0x401cb0
  40e7dd:	mov    r9,QWORD PTR [rsp+0x30]
  40e7e2:	lea    r8,[rip+0x26a87]        # 0x435270
  40e7e9:	jmp    0x40e731
  40e7ee:	xchg   ax,ax
  40e7f0:	push   rbx
  40e7f1:	sub    rsp,0x50
  40e7f5:	mov    rbx,rcx
  40e7f8:	mov    rcx,rdx
  40e7fb:	mov    rdx,r8
  40e7fe:	mov    eax,DWORD PTR [rbx+0x28]
  40e801:	test   eax,eax
  40e803:	je     0x40e890
  40e809:	cmp    eax,0x1
  40e80c:	jne    0x40e870
  40e80e:	mov    r8d,0xffffffff
  40e814:	call   0x40bc00
  40e819:	mov    edx,DWORD PTR [rax+0x160]
  40e81f:	mov    DWORD PTR [rax+0x8],0xffffffff
  40e826:	mov    QWORD PTR [rax+0x108],rbx
  40e82d:	mov    QWORD PTR [rbx+0x8],rax
  40e831:	test   edx,edx
  40e833:	jne    0x40e8e9
  40e839:	cmp    QWORD PTR [rax+0x110],0x0
  40e841:	je     0x40e85f
  40e843:	mov    rdx,QWORD PTR [rax+0x118]
  40e84a:	test   rdx,rdx
  40e84d:	jne    0x40e8a0
  40e84f:	mov    rdx,QWORD PTR [rax+0x120]
  40e856:	test   rdx,rdx
  40e859:	jne    0x40e910
  40e85f:	lea    rcx,[rbx+0x20]
  40e863:	add    rsp,0x50
  40e867:	pop    rbx
  40e868:	jmp    0x4220a0
  40e86d:	nop    DWORD PTR [rax]
  40e870:	lea    r8,[rip+0x26a89]        # 0x435300
  40e877:	xor    ecx,ecx
  40e879:	mov    edx,0x8
  40e87e:	call   0x4226c0
  40e883:	mov    ecx,0x1
  40e888:	call   0x401cb0
  40e88d:	nop    DWORD PTR [rax]
  40e890:	mov    r8d,0xffffffff
  40e896:	call   0x40da10
  40e89b:	jmp    0x40e819
  40e8a0:	mov    r8d,DWORD PTR [rax+0x4]
  40e8a4:	mov    ecx,DWORD PTR [rax]
  40e8a6:	lea    r9,[rip+0x25db7]        # 0x434664
  40e8ad:	lea    rax,[rip+0x26a37]        # 0x4352eb
  40e8b4:	mov    DWORD PTR [rsp+0x38],r8d
  40e8b9:	lea    r8,[rip+0x26b08]        # 0x4353c8
  40e8c0:	mov    DWORD PTR [rsp+0x30],ecx
  40e8c4:	mov    QWORD PTR [rsp+0x20],rdx
  40e8c9:	xor    ecx,ecx
  40e8cb:	mov    QWORD PTR [rsp+0x40],rax
  40e8d0:	mov    QWORD PTR [rsp+0x28],rax
  40e8d5:	mov    edx,0x10
  40e8da:	call   0x4226c0
  40e8df:	mov    ecx,0x1
  40e8e4:	call   0x401cb0
  40e8e9:	mov    edx,DWORD PTR [rax+0x4]
  40e8ec:	lea    r8,[rip+0x26a45]        # 0x435338
  40e8f3:	xor    ecx,ecx
  40e8f5:	mov    DWORD PTR [rsp+0x20],edx
  40e8f9:	mov    r9d,DWORD PTR [rax]
  40e8fc:	mov    edx,0x10
  40e901:	call   0x4226c0
  40e906:	mov    ecx,0x1
  40e90b:	call   0x401cb0
  40e910:	mov    r8d,DWORD PTR [rax+0x4]
  40e914:	mov    ecx,DWORD PTR [rax]
  40e916:	lea    r9,[rip+0x25d53]        # 0x434670
  40e91d:	lea    rax,[rip+0x269b8]        # 0x4352dc
  40e924:	jmp    0x40e8b4
  40e926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e930:	push   rdi
  40e931:	push   rsi
  40e932:	sub    rsp,0x38
  40e936:	test   rcx,rcx
  40e939:	mov    r9,rcx
  40e93c:	je     0x40ebe3
  40e942:	cmp    BYTE PTR [rcx],0x0
  40e945:	je     0x40ebe3
  40e94b:	lea    rdi,[rip+0x26b29]        # 0x43547b
  40e952:	mov    ecx,0x5
  40e957:	mov    rsi,r9
  40e95a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e95c:	je     0x40ed30
  40e962:	lea    rdi,[rip+0x26b17]        # 0x435480
  40e969:	mov    ecx,0x5
  40e96e:	mov    rsi,r9
  40e971:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e973:	mov    edi,0x1
  40e978:	seta   dl
  40e97b:	setb   al
  40e97e:	cmp    dl,al
  40e980:	jne    0x40ebd0
  40e986:	lea    r8,[rip+0x26b13]        # 0x4354a0
  40e98d:	xor    ecx,ecx
  40e98f:	mov    edx,0x20
  40e994:	call   0x4226c0
  40e999:	mov    r9,QWORD PTR [rip+0x2ef70]        # 0x43d910
  40e9a0:	lea    r8,[rip+0x26b21]        # 0x4354c8
  40e9a7:	xor    ecx,ecx
  40e9a9:	mov    edx,0x20
  40e9ae:	call   0x4226c0
  40e9b3:	lea    r8,[rip+0x255a0]        # 0x433f5a
  40e9ba:	xor    ecx,ecx
  40e9bc:	mov    edx,0x20
  40e9c1:	call   0x4226c0
  40e9c6:	mov    rdx,QWORD PTR [rip+0x2ef43]        # 0x43d910
  40e9cd:	lea    rcx,[rip+0x26b4c]        # 0x435520
  40e9d4:	call   0x407ef0
  40e9d9:	lea    rdx,[rip+0x26c30]        # 0x435610
  40e9e0:	lea    rcx,[rip+0x290d9]        # 0x437ac0
  40e9e7:	xor    r9d,r9d
  40e9ea:	mov    r8d,0x800
  40e9f0:	mov    DWORD PTR [rsp+0x20],0x0
  40e9f8:	call   0x402510
  40e9fd:	lea    rdx,[rip+0x26c3c]        # 0x435640
  40ea04:	lea    rcx,[rip+0x290b5]        # 0x437ac0
  40ea0b:	xor    r8d,r8d
  40ea0e:	mov    r9d,0xe804
  40ea14:	mov    DWORD PTR [rsp+0x20],0x0
  40ea1c:	call   0x402510
  40ea21:	lea    rdx,[rip+0x26c57]        # 0x43567f
  40ea28:	lea    rcx,[rip+0x29091]        # 0x437ac0
  40ea2f:	mov    r9d,0xe800
  40ea35:	mov    r8d,0x4
  40ea3b:	mov    DWORD PTR [rsp+0x20],0x0
  40ea43:	call   0x402510
  40ea48:	lea    rdx,[rip+0x26c49]        # 0x435698
  40ea4f:	lea    rcx,[rip+0x2906a]        # 0x437ac0
  40ea56:	xor    r8d,r8d
  40ea59:	mov    r9d,0xa34
  40ea5f:	mov    DWORD PTR [rsp+0x20],0xe000
  40ea67:	call   0x402510
  40ea6c:	lea    rdx,[rip+0x26c3c]        # 0x4356af
  40ea73:	lea    rcx,[rip+0x29046]        # 0x437ac0
  40ea7a:	mov    r9d,0x230
  40ea80:	mov    r8d,0x4
  40ea86:	mov    DWORD PTR [rsp+0x20],0xe000
  40ea8e:	call   0x402510
  40ea93:	lea    rdx,[rip+0x26c30]        # 0x4356ca
  40ea9a:	lea    rcx,[rip+0x2901f]        # 0x437ac0
  40eaa1:	mov    r9d,0x24
  40eaa7:	mov    r8d,0x10
  40eaad:	mov    DWORD PTR [rsp+0x20],0x0
  40eab5:	call   0x402510
  40eaba:	lea    rdx,[rip+0x26c18]        # 0x4356d9
  40eac1:	lea    rcx,[rip+0x28ff8]        # 0x437ac0
  40eac8:	mov    r9d,0x20
  40eace:	mov    r8d,0x14
  40ead4:	mov    DWORD PTR [rsp+0x20],0x0
  40eadc:	call   0x402510
  40eae1:	lea    rdx,[rip+0x26c09]        # 0x4356f1
  40eae8:	lea    rcx,[rip+0x28fd1]        # 0x437ac0
  40eaef:	mov    r9d,0x14
  40eaf5:	mov    r8d,0x20
  40eafb:	mov    DWORD PTR [rsp+0x20],0x0
  40eb03:	call   0x402510
  40eb08:	lea    rdx,[rip+0x26bf1]        # 0x435700
  40eb0f:	lea    rcx,[rip+0x28faa]        # 0x437ac0
  40eb16:	mov    r9d,0x10
  40eb1c:	mov    r8d,0x24
  40eb22:	mov    DWORD PTR [rsp+0x20],0x0
  40eb2a:	call   0x402510
  40eb2f:	lea    rdx,[rip+0x26be2]        # 0x435718
  40eb36:	lea    rcx,[rip+0x28f83]        # 0x437ac0
  40eb3d:	xor    r9d,r9d
  40eb40:	mov    r8d,0x200
  40eb46:	mov    DWORD PTR [rsp+0x20],0x0
  40eb4e:	call   0x402510
  40eb53:	lea    rcx,[rip+0x25400]        # 0x433f5a
  40eb5a:	call   0x407ef0
  40eb5f:	test   edi,edi
  40eb61:	je     0x40ed37
  40eb67:	call   0x422350
  40eb6c:	mov    edx,0x3
  40eb71:	mov    rcx,rax
  40eb74:	call   0x4026c0
  40eb79:	call   0x422218
  40eb7e:	mov    edx,0x3
  40eb83:	mov    rcx,rax
  40eb86:	call   0x4026c0
  40eb8b:	call   0x422510
  40eb90:	mov    edx,0x3
  40eb95:	mov    rcx,rax
  40eb98:	call   0x4026c0
  40eb9d:	call   0x4224d8
  40eba2:	mov    edx,0x8
  40eba7:	mov    rcx,rax
  40ebaa:	call   0x4026c0
  40ebaf:	call   0x422100
  40ebb4:	mov    edx,0x10018
  40ebb9:	mov    rcx,rax
  40ebbc:	add    rsp,0x38
  40ebc0:	pop    rsi
  40ebc1:	pop    rdi
  40ebc2:	jmp    0x4026c0
  40ebc7:	nop    WORD PTR [rax+rax*1+0x0]
  40ebd0:	lea    r8,[rip+0x268ae]        # 0x435485
  40ebd7:	mov    edx,0x10
  40ebdc:	xor    ecx,ecx
  40ebde:	call   0x4226c0
  40ebe3:	lea    r8,[rip+0x268b6]        # 0x4354a0
  40ebea:	xor    ecx,ecx
  40ebec:	mov    edx,0x20
  40ebf1:	call   0x4226c0
  40ebf6:	mov    r9,QWORD PTR [rip+0x2ed13]        # 0x43d910
  40ebfd:	lea    r8,[rip+0x268c4]        # 0x4354c8
  40ec04:	xor    ecx,ecx
  40ec06:	mov    edx,0x20
  40ec0b:	call   0x4226c0
  40ec10:	lea    r8,[rip+0x25343]        # 0x433f5a
  40ec17:	xor    ecx,ecx
  40ec19:	mov    edx,0x20
  40ec1e:	call   0x4226c0
  40ec23:	mov    rdx,QWORD PTR [rip+0x2ece6]        # 0x43d910
  40ec2a:	lea    rcx,[rip+0x268ef]        # 0x435520
  40ec31:	call   0x407ef0
  40ec36:	lea    rdx,[rip+0x269d3]        # 0x435610
  40ec3d:	lea    rcx,[rip+0x28e7c]        # 0x437ac0
  40ec44:	xor    r9d,r9d
  40ec47:	mov    DWORD PTR [rsp+0x20],0x0
  40ec4f:	mov    r8d,0x800
  40ec55:	call   0x402510
  40ec5a:	lea    rdx,[rip+0x269df]        # 0x435640
  40ec61:	lea    rcx,[rip+0x28e58]        # 0x437ac0
  40ec68:	xor    r8d,r8d
  40ec6b:	mov    DWORD PTR [rsp+0x20],0x0
  40ec73:	mov    r9d,0xe804
  40ec79:	call   0x402510
  40ec7e:	lea    rdx,[rip+0x26a13]        # 0x435698
  40ec85:	lea    rcx,[rip+0x28e34]        # 0x437ac0
  40ec8c:	xor    r8d,r8d
  40ec8f:	mov    DWORD PTR [rsp+0x20],0xe000
  40ec97:	mov    r9d,0xa34
  40ec9d:	call   0x402510
  40eca2:	lea    rdx,[rip+0x26a21]        # 0x4356ca
  40eca9:	lea    rcx,[rip+0x28e10]        # 0x437ac0
  40ecb0:	mov    DWORD PTR [rsp+0x20],0x0
  40ecb8:	mov    r9d,0x24
  40ecbe:	mov    r8d,0x10
  40ecc4:	call   0x402510
  40ecc9:	lea    rdx,[rip+0x26a21]        # 0x4356f1
  40ecd0:	lea    rcx,[rip+0x28de9]        # 0x437ac0
  40ecd7:	mov    DWORD PTR [rsp+0x20],0x0
  40ecdf:	mov    r9d,0x14
  40ece5:	mov    r8d,0x20
  40eceb:	call   0x402510
  40ecf0:	lea    rdx,[rip+0x26a21]        # 0x435718
  40ecf7:	lea    rcx,[rip+0x28dc2]        # 0x437ac0
  40ecfe:	mov    DWORD PTR [rsp+0x20],0x0
  40ed06:	xor    r9d,r9d
  40ed09:	mov    r8d,0x200
  40ed0f:	call   0x402510
  40ed14:	lea    rcx,[rip+0x2523f]        # 0x433f5a
  40ed1b:	add    rsp,0x38
  40ed1f:	pop    rsi
  40ed20:	pop    rdi
  40ed21:	jmp    0x407ef0
  40ed26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed30:	xor    edi,edi
  40ed32:	jmp    0x40e986
  40ed37:	add    rsp,0x38
  40ed3b:	pop    rsi
  40ed3c:	pop    rdi
  40ed3d:	ret    
  40ed3e:	xchg   ax,ax
  40ed40:	sub    rsp,0x28
  40ed44:	lea    r8,[rip+0x26755]        # 0x4354a0
  40ed4b:	xor    ecx,ecx
  40ed4d:	mov    edx,0x20
  40ed52:	call   0x4226c0
  40ed57:	mov    r9,QWORD PTR [rip+0x2ebb2]        # 0x43d910
  40ed5e:	lea    r8,[rip+0x26763]        # 0x4354c8
  40ed65:	xor    ecx,ecx
  40ed67:	mov    edx,0x20
  40ed6c:	call   0x4226c0
  40ed71:	lea    r8,[rip+0x251e2]        # 0x433f5a
  40ed78:	mov    edx,0x20
  40ed7d:	xor    ecx,ecx
  40ed7f:	add    rsp,0x28
  40ed83:	jmp    0x4226c0
  40ed88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed90:	push   r15
  40ed92:	push   r14
  40ed94:	push   r13
  40ed96:	push   r12
  40ed98:	push   rbp
  40ed99:	push   rdi
  40ed9a:	push   rsi
  40ed9b:	push   rbx
  40ed9c:	sub    rsp,0x5e8
  40eda3:	movaps XMMWORD PTR [rsp+0x5d0],xmm6
  40edab:	xor    eax,eax
  40edad:	lea    r9,[rip+0x28d0c]        # 0x437ac0
  40edb4:	lea    rdi,[rsp+0xf0]
  40edbc:	mov    r10d,ecx
  40edbf:	mov    ecx,0x14
  40edc4:	mov    r8,rdx
  40edc7:	mov    edx,r10d
  40edca:	mov    rsi,rdi
  40edcd:	mov    QWORD PTR [rsp+0x48],rdi
  40edd2:	rep stos QWORD PTR es:[rdi],rax
  40edd5:	lea    rax,[rip+0x2a664]        # 0x439440
  40eddc:	mov    DWORD PTR [rsp+0x28],0x2
  40ede4:	mov    rcx,rsi
  40ede7:	mov    QWORD PTR [rsp+0x20],rax
  40edec:	call   0x4044a0
  40edf1:	test   eax,eax
  40edf3:	mov    edi,eax
  40edf5:	js     0x40ef67
  40edfb:	mov    rdx,QWORD PTR [rsp+0x48]
  40ee00:	xor    ecx,ecx
  40ee02:	call   0x4036d0
  40ee07:	test   eax,eax
  40ee09:	mov    edi,eax
  40ee0b:	js     0x40efd1
  40ee11:	mov    rbp,QWORD PTR [rsp+0x138]
  40ee19:	mov    r9d,DWORD PTR [rbp+0x28]
  40ee1d:	test   r9d,r9d
  40ee20:	jle    0x40efee
  40ee26:	xor    ebx,ebx
  40ee28:	xor    esi,esi
  40ee2a:	lea    r13,[rsp+0x290]
  40ee32:	xor    r15d,r15d
  40ee35:	mov    r12d,0x68
  40ee3b:	jmp    0x40ee94
  40ee3d:	nop    DWORD PTR [rax]
  40ee40:	lea    r8,[rip+0x26960]        # 0x4357a7
  40ee47:	xor    ecx,ecx
  40ee49:	mov    edx,0x30
  40ee4e:	call   0x4226c0
  40ee53:	mov    rdx,QWORD PTR [r14+0x8]
  40ee57:	mov    rcx,r13
  40ee5a:	call   0x40c110
  40ee5f:	mov    rcx,r13
  40ee62:	mov    edi,eax
  40ee64:	call   0x408890
  40ee69:	test   edi,edi
  40ee6b:	js     0x410000
  40ee71:	lea    r8,[rip+0x26968]        # 0x4357e0
  40ee78:	xor    ecx,ecx
  40ee7a:	mov    edx,0x30
  40ee7f:	add    esi,0x1
  40ee82:	add    rbx,0x48
  40ee86:	call   0x4226c0
  40ee8b:	cmp    esi,DWORD PTR [rbp+0x28]
  40ee8e:	jge    0x40efee
  40ee94:	mov    rax,r15
  40ee97:	mov    rdi,r13
  40ee9a:	mov    rcx,r12
  40ee9d:	mov    r14,rbx
  40eea0:	add    r14,QWORD PTR [rbp+0x20]
  40eea4:	rep stos QWORD PTR es:[rdi],rax
  40eea7:	movabs rax,0x7fffffffffffffff
  40eeb1:	mov    rcx,r13
  40eeb4:	mov    DWORD PTR [rsp+0x3d4],0x3f333333
  40eebf:	mov    QWORD PTR [rsp+0x3c0],rax
  40eec7:	movabs rax,0x8000000000000000
  40eed1:	mov    QWORD PTR [rsp+0x3c8],0xffffffffffffffff
  40eedd:	mov    QWORD PTR [rsp+0x298],rax
  40eee5:	mov    QWORD PTR [rsp+0x2a0],rax
  40eeed:	mov    rdx,r14
  40eef0:	movabs rax,0x7fffffffffffffff
  40eefa:	mov    DWORD PTR [rsp+0x3b4],0x7fffffff
  40ef05:	mov    DWORD PTR [rsp+0x324],0x1
  40ef10:	mov    QWORD PTR [rsp+0x3b8],rax
  40ef18:	mov    QWORD PTR [rsp+0x290],r14
  40ef20:	call   0x4036d0
  40ef25:	mov    edi,eax
  40ef27:	mov    rax,QWORD PTR [r14+0x8]
  40ef2b:	lea    r9,[rip+0x26845]        # 0x435777
  40ef32:	test   edi,edi
  40ef34:	mov    QWORD PTR [rsp+0x20],rax
  40ef39:	jns    0x40ee40
  40ef3f:	lea    r8,[rip+0x2683a]        # 0x435780
  40ef46:	mov    edx,0x10
  40ef4b:	xor    ecx,ecx
  40ef4d:	call   0x4226c0
  40ef52:	lea    r8,[rip+0x268a6]        # 0x4357ff
  40ef59:	mov    edx,0x8
  40ef5e:	xor    ecx,ecx
  40ef60:	call   0x4226c0
  40ef65:	jmp    0x40ef82
  40ef67:	lea    r8,[rip+0x267c2]        # 0x435730
  40ef6e:	lea    r13,[rsp+0x290]
  40ef76:	mov    edx,0x8
  40ef7b:	xor    ecx,ecx
  40ef7d:	call   0x4226c0
  40ef82:	mov    rcx,QWORD PTR [rsp+0x48]
  40ef87:	call   0x404370
  40ef8c:	mov    r8d,0x80
  40ef92:	mov    rdx,r13
  40ef95:	mov    ecx,edi
  40ef97:	call   0x422570
  40ef9c:	lea    r8,[rip+0x24fb3]        # 0x433f56
  40efa3:	mov    r9,r13
  40efa6:	mov    edx,0x8
  40efab:	xor    ecx,ecx
  40efad:	call   0x4226c0
  40efb2:	nop
  40efb3:	movaps xmm6,XMMWORD PTR [rsp+0x5d0]
  40efbb:	mov    eax,edi
  40efbd:	add    rsp,0x5e8
  40efc4:	pop    rbx
  40efc5:	pop    rsi
  40efc6:	pop    rdi
  40efc7:	pop    rbp
  40efc8:	pop    r12
  40efca:	pop    r13
  40efcc:	pop    r14
  40efce:	pop    r15
  40efd0:	ret    
  40efd1:	lea    r8,[rip+0x26780]        # 0x435758
  40efd8:	mov    edx,0x8
  40efdd:	xor    ecx,ecx
  40efdf:	lea    r13,[rsp+0x290]
  40efe7:	call   0x4226c0
  40efec:	jmp    0x40ef82
  40efee:	mov    rax,QWORD PTR [rip+0x2e87b]        # 0x43d870
  40eff5:	mov    r8d,DWORD PTR [rax]
  40eff8:	test   r8d,r8d
  40effb:	jle    0x4110a8
  40f001:	xor    ebx,ebx
  40f003:	xor    esi,esi
  40f005:	mov    rbp,QWORD PTR [rip+0x2e784]        # 0x43d790
  40f00c:	jmp    0x40f024
  40f00e:	xchg   ax,ax
  40f010:	mov    rax,QWORD PTR [rip+0x2e859]        # 0x43d870
  40f017:	add    esi,0x1
  40f01a:	add    rbx,0x8
  40f01e:	mov    eax,DWORD PTR [rax]
  40f020:	cmp    esi,eax
  40f022:	jge    0x40f057
  40f024:	mov    rax,QWORD PTR [rbp+0x0]
  40f028:	mov    rcx,QWORD PTR [rax+rbx*1]
  40f02c:	call   0x4129b0
  40f031:	test   eax,eax
  40f033:	jns    0x40f010
  40f035:	lea    r8,[rip+0x267e4]        # 0x435820
  40f03c:	mov    edx,0x8
  40f041:	xor    ecx,ecx
  40f043:	mov    edi,eax
  40f045:	lea    r13,[rsp+0x290]
  40f04d:	call   0x4226c0
  40f052:	jmp    0x40ef82
  40f057:	mov    rdi,QWORD PTR [rsp+0x138]
  40f05f:	mov    r9d,DWORD PTR [rdi+0x10]
  40f063:	mov    QWORD PTR [rsp+0x70],rdi
  40f068:	test   r9d,r9d
  40f06b:	jle    0x410cfb
  40f071:	mov    rax,QWORD PTR [rip+0x2e788]        # 0x43d800
  40f078:	lea    r13,[rsp+0x290]
  40f080:	mov    QWORD PTR [rsp+0x78],0x0
  40f089:	mov    DWORD PTR [rsp+0x94],0x0
  40f094:	mov    r14,r13
  40f097:	mov    QWORD PTR [rsp+0x88],rax
  40f09f:	mov    rax,QWORD PTR [rsp+0x70]
  40f0a4:	mov    rsi,QWORD PTR [rsp+0x78]
  40f0a9:	mov    ecx,0x68
  40f0ae:	mov    rdi,r14
  40f0b1:	movabs rbx,0x7fffffffffffffff
  40f0bb:	add    rsi,QWORD PTR [rax+0x8]
  40f0bf:	xor    eax,eax
  40f0c1:	rep stos QWORD PTR es:[rdi],rax
  40f0c4:	movabs rax,0x8000000000000000
  40f0ce:	mov    rcx,r14
  40f0d1:	mov    QWORD PTR [rsp+0x3c0],rbx
  40f0d9:	mov    DWORD PTR [rsp+0x3d4],0x3f333333
  40f0e4:	mov    QWORD PTR [rsp+0x298],rax
  40f0ec:	mov    rdx,rsi
  40f0ef:	mov    QWORD PTR [rsp+0x2a0],rax
  40f0f7:	mov    QWORD PTR [rsp+0x3b8],rbx
  40f0ff:	mov    QWORD PTR [rsp+0x3c8],0xffffffffffffffff
  40f10b:	mov    DWORD PTR [rsp+0x3b4],0x7fffffff
  40f116:	mov    DWORD PTR [rsp+0x324],0x1
  40f121:	mov    QWORD PTR [rsp+0x290],rsi
  40f129:	call   0x4036d0
  40f12e:	test   eax,eax
  40f130:	js     0x411137
  40f136:	mov    rax,QWORD PTR [rsi+0x8]
  40f13a:	lea    r9,[rip+0x26704]        # 0x435845
  40f141:	lea    r8,[rip+0x2665f]        # 0x4357a7
  40f148:	xor    ecx,ecx
  40f14a:	mov    edx,0x30
  40f14f:	mov    QWORD PTR [rsp+0x20],rax
  40f154:	call   0x4226c0
  40f159:	mov    rax,QWORD PTR [rsi+0x8]
  40f15d:	mov    QWORD PTR [rsp+0xb0],0x0
  40f169:	mov    QWORD PTR [rsp+0x50],rax
  40f16e:	mov    rax,QWORD PTR [rsp+0x3c0]
  40f176:	cmp    rax,rbx
  40f179:	je     0x40f1bb
  40f17b:	cmp    QWORD PTR [rsp+0x3b8],rbx
  40f183:	jne    0x410177
  40f189:	mov    rdx,QWORD PTR [rsp+0x298]
  40f191:	movabs rcx,0x8000000000000000
  40f19b:	cmp    rdx,rcx
  40f19e:	mov    ecx,0x0
  40f1a3:	cmove  rdx,rcx
  40f1a7:	cmp    rax,rdx
  40f1aa:	jle    0x411531
  40f1b0:	sub    rax,rdx
  40f1b3:	mov    QWORD PTR [rsp+0x3b8],rax
  40f1bb:	mov    rax,QWORD PTR [rip+0x2e6de]        # 0x43d8a0
  40f1c2:	mov    edx,0x8
  40f1c7:	mov    r9d,DWORD PTR [rax]
  40f1ca:	mov    r8,rax
  40f1cd:	mov    rax,QWORD PTR [rip+0x2e6fc]        # 0x43d8d0
  40f1d4:	mov    rcx,QWORD PTR [rax]
  40f1d7:	add    r9d,0x1
  40f1db:	call   0x407950
  40f1e0:	mov    rdi,QWORD PTR [rip+0x2e6e9]        # 0x43d8d0
  40f1e7:	mov    ecx,0x38
  40f1ec:	mov    QWORD PTR [rdi],rax
  40f1ef:	call   0x422670
  40f1f4:	test   rax,rax
  40f1f7:	mov    QWORD PTR [rsp+0x58],rax
  40f1fc:	je     0x40f4c7
  40f202:	mov    rdi,rax
  40f205:	mov    rax,QWORD PTR [rip+0x2e694]        # 0x43d8a0
  40f20c:	xor    r8d,r8d
  40f20f:	movsxd rdx,DWORD PTR [rax]
  40f212:	mov    rax,QWORD PTR [rip+0x2e6b7]        # 0x43d8d0
  40f219:	mov    rax,QWORD PTR [rax]
  40f21c:	mov    QWORD PTR [rax+rdx*8-0x8],rdi
  40f221:	mov    rax,QWORD PTR [rip+0x2e688]        # 0x43d8b0
  40f228:	mov    eax,DWORD PTR [rax]
  40f22a:	mov    DWORD PTR [rdi+0x10],eax
  40f22d:	mov    rax,QWORD PTR [rsp+0x3b8]
  40f235:	mov    QWORD PTR [rdi+0x18],rax
  40f239:	mov    rax,QWORD PTR [rsp+0x298]
  40f241:	mov    QWORD PTR [rdi+0x20],rax
  40f245:	mov    rax,QWORD PTR [rsp+0x3c8]
  40f24d:	mov    QWORD PTR [rdi+0x28],rax
  40f251:	mov    eax,DWORD PTR [rsp+0x3d8]
  40f258:	mov    DWORD PTR [rdi+0x30],eax
  40f25b:	lea    rax,[rdi+0x8]
  40f25f:	lea    rdi,[rip+0x24d4d]        # 0x433fb3
  40f266:	mov    rcx,rax
  40f269:	mov    QWORD PTR [rsp+0x80],rax
  40f271:	mov    rax,QWORD PTR [rsp+0x290]
  40f279:	mov    rdx,QWORD PTR [rax+0x28]
  40f27d:	call   0x422828
  40f282:	mov    rsi,QWORD PTR [rsp+0x50]
  40f287:	mov    ecx,0x2
  40f28c:	lea    rax,[rip+0x24d1a]        # 0x433fad
  40f293:	mov    r8,QWORD PTR [rsp+0x2b0]
  40f29b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f29d:	cmovne rax,QWORD PTR [rsp+0x50]
  40f2a3:	lea    rcx,[rsp+0xa8]
  40f2ab:	xor    edx,edx
  40f2ad:	mov    r9,rax
  40f2b0:	mov    QWORD PTR [rsp+0x50],rax
  40f2b5:	call   0x422240
  40f2ba:	mov    rdx,QWORD PTR [rsp+0xa8]
  40f2c2:	test   rdx,rdx
  40f2c5:	je     0x410ea7
  40f2cb:	mov    rax,QWORD PTR [rsp+0x58]
  40f2d0:	movabs rcx,0x7fffffffffffffff
  40f2da:	mov    QWORD PTR [rax],rdx
  40f2dd:	mov    rax,QWORD PTR [rsp+0x3b8]
  40f2e5:	cmp    rax,rcx
  40f2e8:	je     0x40f2f1
  40f2ea:	mov    QWORD PTR [rdx+0x440],rax
  40f2f1:	mov    rax,QWORD PTR [rip+0x2e508]        # 0x43d800
  40f2f8:	xor    edi,edi
  40f2fa:	xor    r13d,r13d
  40f2fd:	mov    rbx,QWORD PTR [rdx+0x10]
  40f301:	mov    r12d,edi
  40f304:	mov    r9,QWORD PTR [rax]
  40f307:	mov    r10,QWORD PTR [rax+0x8]
  40f30b:	mov    rax,QWORD PTR [rip+0x2e55e]        # 0x43d870
  40f312:	mov    QWORD PTR [rdx+0x4b0],r9
  40f319:	mov    QWORD PTR [rdx+0x4b8],r10
  40f320:	mov    eax,DWORD PTR [rax]
  40f322:	test   eax,eax
  40f324:	jle    0x40f3da
  40f32a:	nop    WORD PTR [rax+rax*1+0x0]
  40f330:	mov    rdi,QWORD PTR [rip+0x2e459]        # 0x43d790
  40f337:	mov    rdx,QWORD PTR [rdi]
  40f33a:	mov    rdi,QWORD PTR [rdx+r13*1]
  40f33e:	mov    edx,DWORD PTR [rdi+0x38]
  40f341:	test   edx,edx
  40f343:	jle    0x40f3c9
  40f349:	xor    ebp,ebp
  40f34b:	xor    esi,esi
  40f34d:	mov    r15,rdi
  40f350:	mov    r8d,edx
  40f353:	jmp    0x40f361
  40f355:	add    esi,0x1
  40f358:	add    rbp,0x8
  40f35c:	cmp    esi,r8d
  40f35f:	jge    0x40f3c0
  40f361:	mov    rax,QWORD PTR [r15+0x30]
  40f365:	mov    rcx,QWORD PTR [rax+rbp*1]
  40f369:	mov    rax,QWORD PTR [rcx+0x20]
  40f36d:	test   rax,rax
  40f370:	je     0x40f355
  40f372:	cmp    QWORD PTR [rax],0x0
  40f376:	jne    0x40f355
  40f378:	mov    eax,DWORD PTR [rcx+0x28]
  40f37b:	cmp    eax,0x1
  40f37e:	je     0x40f830
  40f384:	cmp    eax,0x3
  40f387:	je     0x40f820
  40f38d:	test   eax,eax
  40f38f:	jne    0x40f39c
  40f391:	mov    DWORD PTR [rsp+0x3dc],0x1
  40f39c:	mov    r8,QWORD PTR [rsp+0xa8]
  40f3a4:	mov    rdx,r14
  40f3a7:	add    esi,0x1
  40f3aa:	add    rbp,0x8
  40f3ae:	call   0x40e7f0
  40f3b3:	mov    r8d,DWORD PTR [r15+0x38]
  40f3b7:	cmp    esi,r8d
  40f3ba:	jl     0x40f361
  40f3bc:	nop    DWORD PTR [rax+0x0]
  40f3c0:	mov    rax,QWORD PTR [rip+0x2e4a9]        # 0x43d870
  40f3c7:	mov    eax,DWORD PTR [rax]
  40f3c9:	add    r12d,0x1
  40f3cd:	add    r13,0x8
  40f3d1:	cmp    r12d,eax
  40f3d4:	jl     0x40f330
  40f3da:	mov    rsi,QWORD PTR [rbx]
  40f3dd:	lea    rbp,[rip+0x264e3]        # 0x4358c7
  40f3e4:	mov    ecx,0x4
  40f3e9:	mov    rdi,rbp
  40f3ec:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f3ee:	je     0x4102aa
  40f3f4:	mov    eax,DWORD PTR [rsp+0x388]
  40f3fb:	cmp    eax,0x0
  40f3fe:	je     0x410038
  40f404:	mov    edi,0x0
  40f409:	mov    ebp,0x0
  40f40e:	jle    0x40f534
  40f414:	mov    r13,rdi
  40f417:	mov    QWORD PTR [rsp+0x40],r14
  40f41c:	nop    DWORD PTR [rax+0x0]
  40f420:	mov    rbx,r13
  40f423:	add    rbx,QWORD PTR [rsp+0x380]
  40f42b:	mov    r11d,DWORD PTR [rbx]
  40f42e:	test   r11d,r11d
  40f431:	jne    0x40f520
  40f437:	mov    r15,QWORD PTR [rbx+0x18]
  40f43b:	test   r15,r15
  40f43e:	je     0x40f857
  40f444:	mov    rax,QWORD PTR [rip+0x2e425]        # 0x43d870
  40f44b:	mov    eax,DWORD PTR [rax]
  40f44d:	test   eax,eax
  40f44f:	jle    0x40f4b1
  40f451:	mov    rdi,QWORD PTR [rip+0x2e338]        # 0x43d790
  40f458:	sub    eax,0x1
  40f45b:	mov    r12,QWORD PTR [rdi]
  40f45e:	lea    r14,[r12+rax*8+0x8]
  40f463:	mov    rdx,QWORD PTR [r12]
  40f467:	mov    eax,DWORD PTR [rdx+0x38]
  40f46a:	test   eax,eax
  40f46c:	jle    0x40f4a8
  40f46e:	mov    rbx,QWORD PTR [rdx+0x30]
  40f472:	sub    eax,0x1
  40f475:	lea    rsi,[rbx+rax*8+0x8]
  40f47a:	nop    WORD PTR [rax+rax*1+0x0]
  40f480:	mov    rdi,QWORD PTR [rbx]
  40f483:	mov    rax,QWORD PTR [rdi+0x20]
  40f487:	test   rax,rax
  40f48a:	je     0x40f49f
  40f48c:	mov    rcx,QWORD PTR [rax]
  40f48f:	mov    rdx,r15
  40f492:	call   0x42faf8
  40f497:	test   eax,eax
  40f499:	je     0x40f7f0
  40f49f:	add    rbx,0x8
  40f4a3:	cmp    rbx,rsi
  40f4a6:	jne    0x40f480
  40f4a8:	add    r12,0x8
  40f4ac:	cmp    r12,r14
  40f4af:	jne    0x40f463
  40f4b1:	lea    r8,[rip+0x26a08]        # 0x435ec0
  40f4b8:	mov    r9,r15
  40f4bb:	mov    edx,0x8
  40f4c0:	xor    ecx,ecx
  40f4c2:	call   0x4226c0
  40f4c7:	mov    ecx,0x1
  40f4cc:	call   0x401cb0
  40f4d1:	mov    rdx,QWORD PTR [rsp+0xa8]
  40f4d9:	mov    rcx,QWORD PTR [rsp+0x40]
  40f4de:	call   0x40b050
  40f4e3:	test   rax,rax
  40f4e6:	je     0x40f515
  40f4e8:	mov    rsi,QWORD PTR [rip+0x2e2f1]        # 0x43d7e0
  40f4ef:	movsxd rcx,DWORD PTR [rbx+0xc]
  40f4f3:	mov    rdx,QWORD PTR [rsi]
  40f4f6:	mov    rsi,QWORD PTR [rip+0x2e2f3]        # 0x43d7f0
  40f4fd:	mov    rcx,QWORD PTR [rdx+rcx*8]
  40f501:	mov    edx,DWORD PTR [rbx+0x10]
  40f504:	add    edx,DWORD PTR [rcx+0x10]
  40f507:	mov    rcx,QWORD PTR [rsi]
  40f50a:	movsxd rdx,edx
  40f50d:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40f511:	mov    QWORD PTR [rax+0x20],rdx
  40f515:	mov    eax,DWORD PTR [rsp+0x388]
  40f51c:	nop    DWORD PTR [rax+0x0]
  40f520:	add    ebp,0x1
  40f523:	add    r13,0x20
  40f527:	cmp    ebp,eax
  40f529:	jl     0x40f420
  40f52f:	mov    r14,QWORD PTR [rsp+0x40]
  40f534:	mov    edi,DWORD PTR [rsp+0x3b0]
  40f53b:	test   edi,edi
  40f53d:	jle    0x40f678
  40f543:	lea    rdi,[rsp+0x190]
  40f54b:	xor    ebx,ebx
  40f54d:	xor    esi,esi
  40f54f:	mov    r13,rdi
  40f552:	mov    rdi,QWORD PTR [rsp+0x88]
  40f55a:	nop    WORD PTR [rax+rax*1+0x0]
  40f560:	mov    rax,QWORD PTR [rsp+0x3a8]
  40f568:	mov    r9,rdi
  40f56b:	mov    r8d,0x1
  40f571:	mov    rcx,r13
  40f574:	mov    rdx,QWORD PTR [rax+rbx*1]
  40f578:	mov    QWORD PTR [rsp+0x20],0x0
  40f581:	call   0x422188
  40f586:	test   eax,eax
  40f588:	js     0x411330
  40f58e:	mov    rcx,QWORD PTR [rsp+0x190]
  40f596:	call   0x422158
  40f59b:	test   rax,rax
  40f59e:	mov    r12,rax
  40f5a1:	jle    0x411318
  40f5a7:	mov    rcx,rax
  40f5aa:	call   0x422678
  40f5af:	test   rax,rax
  40f5b2:	mov    r15,rax
  40f5b5:	je     0x411300
  40f5bb:	mov    rcx,QWORD PTR [rsp+0x190]
  40f5c3:	mov    r8d,r12d
  40f5c6:	mov    rdx,rax
  40f5c9:	call   0x422168
  40f5ce:	mov    rdx,QWORD PTR [rsp+0xa8]
  40f5d6:	mov    r8d,0xffffffff
  40f5dc:	mov    rcx,r14
  40f5df:	call   0x40b390
  40f5e4:	mov    DWORD PTR [rax+0x160],0x1
  40f5ee:	mov    DWORD PTR [rax+0x158],0x1
  40f5f8:	mov    rcx,rax
  40f5fb:	mov    rax,rbx
  40f5fe:	add    rax,QWORD PTR [rsp+0x3a8]
  40f606:	mov    rbp,QWORD PTR [rcx+0x10]
  40f60a:	mov    rdx,QWORD PTR [rax]
  40f60d:	mov    QWORD PTR [rcx+0x168],rdx
  40f614:	mov    rdx,QWORD PTR [rbp+0x8]
  40f618:	mov    QWORD PTR [rdx+0x78],r15
  40f61c:	mov    DWORD PTR [rdx+0x80],r12d
  40f623:	mov    edx,0x2f
  40f628:	mov    r12,QWORD PTR [rax]
  40f62b:	mov    rcx,r12
  40f62e:	call   0x42fac0
  40f633:	test   rax,rax
  40f636:	je     0x40f643
  40f638:	cmp    BYTE PTR [rax],0x0
  40f63b:	lea    rdx,[rax+0x1]
  40f63f:	cmovne r12,rdx
  40f643:	lea    rcx,[rbp+0x60]
  40f647:	lea    rdx,[rip+0x259da]        # 0x435028
  40f64e:	mov    r9d,0x10
  40f654:	mov    r8,r12
  40f657:	add    esi,0x1
  40f65a:	add    rbx,0x8
  40f65e:	call   0x422808
  40f663:	mov    rcx,r13
  40f666:	call   0x4221b0
  40f66b:	cmp    esi,DWORD PTR [rsp+0x3b0]
  40f672:	jl     0x40f560
  40f678:	mov    rax,QWORD PTR [rip+0x2e231]        # 0x43d8b0
  40f67f:	mov    rcx,QWORD PTR [rsp+0xa8]
  40f687:	mov    eax,DWORD PTR [rax]
  40f689:	mov    edx,DWORD PTR [rcx+0x2c]
  40f68c:	mov    edi,eax
  40f68e:	sub    edi,edx
  40f690:	cmp    eax,edi
  40f692:	jle    0x40f75f
  40f698:	mov    rbx,QWORD PTR [rip+0x2e241]        # 0x43d8e0
  40f69f:	movsxd rsi,edi
  40f6a2:	shl    rsi,0x3
  40f6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f6b0:	mov    rdx,QWORD PTR [rbx]
  40f6b3:	mov    rbp,QWORD PTR [rdx+rsi*1]
  40f6b7:	mov    r9d,DWORD PTR [rbp+0x160]
  40f6be:	test   r9d,r9d
  40f6c1:	jne    0x40f6cd
  40f6c3:	cmp    QWORD PTR [rbp+0x168],0x0
  40f6cb:	je     0x40f745
  40f6cd:	mov    rax,QWORD PTR [rsp+0x290]
  40f6d5:	lea    rdx,[rip+0x25b6b]        # 0x435247
  40f6dc:	xor    r8d,r8d
  40f6df:	mov    r9d,0x2
  40f6e5:	mov    rcx,QWORD PTR [rax+0x20]
  40f6e9:	call   0x422818
  40f6ee:	test   rax,rax
  40f6f1:	mov    r12,rax
  40f6f4:	je     0x40f73c
  40f6f6:	mov    rax,QWORD PTR [rax]
  40f6f9:	cmp    BYTE PTR [rax+0x5],0x0
  40f6fd:	je     0x40f718
  40f6ff:	mov    rdx,QWORD PTR [rbp+0x10]
  40f703:	mov    rcx,QWORD PTR [rsp+0xa8]
  40f70b:	lea    r8,[rax+0x6]
  40f70f:	call   0x4075b0
  40f714:	test   eax,eax
  40f716:	je     0x40f73c
  40f718:	mov    rax,QWORD PTR [rbp+0x10]
  40f71c:	mov    r8,QWORD PTR [r12+0x8]
  40f721:	lea    rdx,[rip+0x25b1f]        # 0x435247
  40f728:	xor    r9d,r9d
  40f72b:	mov    rcx,QWORD PTR [rax+0x8]
  40f72f:	call   0x422620
  40f734:	test   eax,eax
  40f736:	js     0x40f4c7
  40f73c:	mov    rax,QWORD PTR [rip+0x2e16d]        # 0x43d8b0
  40f743:	mov    eax,DWORD PTR [rax]
  40f745:	add    edi,0x1
  40f748:	add    rsi,0x8
  40f74c:	cmp    edi,eax
  40f74e:	jl     0x40f6b0
  40f754:	mov    rcx,QWORD PTR [rsp+0xa8]
  40f75c:	mov    edx,DWORD PTR [rcx+0x2c]
  40f75f:	test   edx,edx
  40f761:	jne    0x40f771
  40f763:	mov    rax,QWORD PTR [rcx+0x10]
  40f767:	test   BYTE PTR [rax+0x2d],0x10
  40f76b:	je     0x41154c
  40f771:	mov    rax,QWORD PTR [rsp+0x290]
  40f779:	lea    rdi,[rsp+0x190]
  40f781:	xor    ebp,ebp
  40f783:	mov    rsi,QWORD PTR [rax+0x20]
  40f787:	mov    QWORD PTR [rsp+0x190],0x0
  40f793:	lea    rdx,[rip+0x24844]        # 0x433fde
  40f79a:	mov    r8,rbp
  40f79d:	mov    r9d,0x2
  40f7a3:	mov    rcx,rsi
  40f7a6:	call   0x422818
  40f7ab:	test   rax,rax
  40f7ae:	mov    rbp,rax
  40f7b1:	je     0x40f905
  40f7b7:	mov    r12,QWORD PTR [rbp+0x0]
  40f7bb:	mov    edx,0x3a
  40f7c0:	mov    rcx,r12
  40f7c3:	call   0x42fb00
  40f7c8:	test   rax,rax
  40f7cb:	mov    rbx,rax
  40f7ce:	je     0x40f840
  40f7d0:	mov    BYTE PTR [rax],0x0
  40f7d3:	mov    r8,QWORD PTR [rbp+0x8]
  40f7d7:	xor    r9d,r9d
  40f7da:	mov    rdx,QWORD PTR [rbp+0x0]
  40f7de:	mov    rcx,rdi
  40f7e1:	call   0x422808
  40f7e6:	mov    BYTE PTR [rbx],0x3a
  40f7e9:	jmp    0x40f793
  40f7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7f0:	mov    r8,QWORD PTR [rsp+0xa8]
  40f7f8:	mov    rdx,QWORD PTR [rsp+0x40]
  40f7fd:	mov    rcx,rdi
  40f800:	add    ebp,0x1
  40f803:	add    r13,0x20
  40f807:	call   0x40e7f0
  40f80c:	mov    eax,DWORD PTR [rsp+0x388]
  40f813:	cmp    ebp,eax
  40f815:	jl     0x40f420
  40f81b:	jmp    0x40f52f
  40f820:	mov    DWORD PTR [rsp+0x3e4],0x1
  40f82b:	jmp    0x40f39c
  40f830:	mov    DWORD PTR [rsp+0x3e0],0x1
  40f83b:	jmp    0x40f39c
  40f840:	mov    r8,QWORD PTR [rbp+0x8]
  40f844:	xor    r9d,r9d
  40f847:	mov    rdx,r12
  40f84a:	mov    rcx,rdi
  40f84d:	call   0x422808
  40f852:	jmp    0x40f793
  40f857:	mov    rsi,QWORD PTR [rip+0x2df82]        # 0x43d7e0
  40f85e:	movsxd r8,DWORD PTR [rbx+0x4]
  40f862:	mov    ecx,DWORD PTR [rbx+0x8]
  40f865:	mov    rdx,QWORD PTR [rsi]
  40f868:	mov    rsi,QWORD PTR [rip+0x2df81]        # 0x43d7f0
  40f86f:	mov    r9,r8
  40f872:	mov    rdx,QWORD PTR [rdx+r8*8]
  40f876:	mov    r8d,DWORD PTR [rdx+0x10]
  40f87a:	mov    rdx,QWORD PTR [rsi]
  40f87d:	add    r8d,ecx
  40f880:	movsxd r10,r8d
  40f883:	mov    rdx,QWORD PTR [rdx+r10*8]
  40f887:	mov    r10d,DWORD PTR [rsp+0x3e4]
  40f88f:	mov    rdx,QWORD PTR [rdx+0x8]
  40f893:	test   r10d,r10d
  40f896:	mov    rdx,QWORD PTR [rdx+0x8]
  40f89a:	mov    edx,DWORD PTR [rdx+0xc]
  40f89d:	je     0x40f8a8
  40f89f:	cmp    edx,0x3
  40f8a2:	je     0x40f520
  40f8a8:	mov    r15d,DWORD PTR [rsp+0x3e0]
  40f8b0:	test   r15d,r15d
  40f8b3:	je     0x40f8be
  40f8b5:	cmp    edx,0x1
  40f8b8:	je     0x40f520
  40f8be:	mov    r14d,DWORD PTR [rsp+0x3dc]
  40f8c6:	test   r14d,r14d
  40f8c9:	je     0x40f8d3
  40f8cb:	test   edx,edx
  40f8cd:	je     0x40f520
  40f8d3:	mov    r12d,DWORD PTR [rsp+0x3e8]
  40f8db:	test   r12d,r12d
  40f8de:	je     0x40f8e9
  40f8e0:	cmp    edx,0x2
  40f8e3:	je     0x40f520
  40f8e9:	add    edx,0x1
  40f8ec:	cmp    edx,0x5
  40f8ef:	ja     0x41083e
  40f8f5:	lea    rax,[rip+0x2663c]        # 0x435f38
  40f8fc:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40f900:	add    rax,rdx
  40f903:	jmp    rax
  40f905:	mov    rax,QWORD PTR [rsp+0x58]
  40f90a:	mov    rcx,QWORD PTR [rsp+0x190]
  40f912:	mov    ebp,DWORD PTR [rax+0x10]
  40f915:	mov    rax,QWORD PTR [rip+0x2df94]        # 0x43d8b0
  40f91c:	mov    QWORD PTR [rsp+0xb0],rcx
  40f924:	cmp    ebp,DWORD PTR [rax]
  40f926:	jge    0x40f99c
  40f928:	mov    rbx,QWORD PTR [rip+0x2dfb1]        # 0x43d8e0
  40f92f:	movsxd rsi,ebp
  40f932:	lea    rdi,[rsp+0xb0]
  40f93a:	shl    rsi,0x3
  40f93e:	xchg   ax,ax
  40f940:	xor    r12d,r12d
  40f943:	jmp    0x40f957
  40f945:	mov    rdx,QWORD PTR [r12]
  40f949:	xor    r9d,r9d
  40f94c:	xor    r8d,r8d
  40f94f:	mov    rcx,rdi
  40f952:	call   0x422808
  40f957:	mov    rax,QWORD PTR [rbx]
  40f95a:	lea    rdx,[rip+0x2467d]        # 0x433fde
  40f961:	mov    r8,r12
  40f964:	mov    r9d,0x2
  40f96a:	mov    rax,QWORD PTR [rax+rsi*1]
  40f96e:	mov    rcx,QWORD PTR [rax+0x128]
  40f975:	call   0x422818
  40f97a:	test   rax,rax
  40f97d:	mov    r12,rax
  40f980:	jne    0x40f945
  40f982:	mov    rax,QWORD PTR [rip+0x2df27]        # 0x43d8b0
  40f989:	add    ebp,0x1
  40f98c:	add    rsi,0x8
  40f990:	cmp    ebp,DWORD PTR [rax]
  40f992:	jl     0x40f940
  40f994:	mov    rcx,QWORD PTR [rsp+0xb0]
  40f99c:	xor    ebx,ebx
  40f99e:	lea    r12,[rsp+0xc0]
  40f9a6:	lea    rbp,[rsp+0x190]
  40f9ae:	mov    r13d,0xd
  40f9b4:	mov    r15,QWORD PTR [rsp+0x50]
  40f9b9:	mov    QWORD PTR [rsp+0x60],r14
  40f9be:	jmp    0x40fa86
  40f9c3:	call   0x422350
  40f9c8:	mov    DWORD PTR [rsp+0x20],0x3
  40f9d0:	mov    QWORD PTR [rsp+0xc0],rax
  40f9d8:	xor    r9d,r9d
  40f9db:	mov    rdx,QWORD PTR [rbx]
  40f9de:	xor    r8d,r8d
  40f9e1:	mov    rcx,r12
  40f9e4:	call   0x422638
  40f9e9:	mov    r14,rax
  40f9ec:	call   0x422218
  40f9f1:	mov    DWORD PTR [rsp+0x20],0x3
  40f9f9:	mov    QWORD PTR [rsp+0x190],rax
  40fa01:	xor    r9d,r9d
  40fa04:	mov    rdx,QWORD PTR [rbx]
  40fa07:	xor    r8d,r8d
  40fa0a:	mov    rcx,rbp
  40fa0d:	call   0x422638
  40fa12:	test   rax,rax
  40fa15:	jne    0x40fa7e
  40fa17:	test   r14,r14
  40fa1a:	je     0x40fa7e
  40fa1c:	test   BYTE PTR [r14+0x30],0x1
  40fa21:	je     0x411677
  40fa27:	mov    r9,QWORD PTR [rbx]
  40fa2a:	lea    rdi,[rip+0x24a8a]        # 0x4344bb
  40fa31:	mov    rcx,r13
  40fa34:	mov    rsi,r9
  40fa37:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fa39:	je     0x40fa7e
  40fa3b:	mov    rax,QWORD PTR [rip+0x2de5e]        # 0x43d8a0
  40fa42:	lea    rcx,[rip+0x24595]        # 0x433fde
  40fa49:	lea    r8,[rip+0x26110]        # 0x435b60
  40fa50:	mov    eax,DWORD PTR [rax]
  40fa52:	lea    edx,[rax-0x1]
  40fa55:	mov    DWORD PTR [rsp+0x40],eax
  40fa59:	mov    rax,QWORD PTR [r14+0x8]
  40fa5d:	mov    QWORD PTR [rsp+0x30],r15
  40fa62:	mov    DWORD PTR [rsp+0x28],edx
  40fa66:	mov    edx,0x18
  40fa6b:	test   rax,rax
  40fa6e:	cmove  rax,rcx
  40fa72:	xor    ecx,ecx
  40fa74:	mov    QWORD PTR [rsp+0x20],rax
  40fa79:	call   0x4226c0
  40fa7e:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fa86:	lea    rdx,[rip+0x24551]        # 0x433fde
  40fa8d:	mov    r8,rbx
  40fa90:	mov    r9d,0x2
  40fa96:	call   0x422818
  40fa9b:	test   rax,rax
  40fa9e:	mov    rbx,rax
  40faa1:	jne    0x40f9c3
  40faa7:	lea    rcx,[rsp+0xb0]
  40faaf:	mov    r14,QWORD PTR [rsp+0x60]
  40fab4:	call   0x422820
  40fab9:	mov    rax,QWORD PTR [rsp+0x58]
  40fabe:	mov    ecx,DWORD PTR [rax+0x10]
  40fac1:	mov    rax,QWORD PTR [rip+0x2dde8]        # 0x43d8b0
  40fac8:	mov    edx,DWORD PTR [rax]
  40faca:	cmp    ecx,edx
  40facc:	jge    0x40fb35
  40face:	mov    rbx,QWORD PTR [rip+0x2de0b]        # 0x43d8e0
  40fad5:	sub    edx,0x1
  40fad8:	movsxd r9,ecx
  40fadb:	sub    edx,ecx
  40fadd:	lea    rdx,[r9+rdx*1+0x1]
  40fae2:	mov    r8,QWORD PTR [rbx]
  40fae5:	mov    rbx,QWORD PTR [rip+0x2dd04]        # 0x43d7f0
  40faec:	mov    r10,QWORD PTR [rbx]
  40faef:	lea    rax,[r8+r9*8]
  40faf3:	lea    r9,[r8+rdx*8]
  40faf7:	nop    WORD PTR [rax+rax*1+0x0]
  40fb00:	mov    rdx,QWORD PTR [rax]
  40fb03:	mov    r8d,DWORD PTR [rdx+0x160]
  40fb0a:	test   r8d,r8d
  40fb0d:	sete   cl
  40fb10:	movzx  r8d,cl
  40fb14:	test   cl,cl
  40fb16:	mov    DWORD PTR [rdx+0x18],r8d
  40fb1a:	je     0x40fb2c
  40fb1c:	movsxd rdx,DWORD PTR [rdx+0x8]
  40fb20:	test   edx,edx
  40fb22:	js     0x40fb2c
  40fb24:	mov    rdx,QWORD PTR [r10+rdx*8]
  40fb28:	or     DWORD PTR [rdx+0x18],0x1
  40fb2c:	add    rax,0x8
  40fb30:	cmp    rax,r9
  40fb33:	jne    0x40fb00
  40fb35:	mov    rcx,QWORD PTR [rsp+0xa8]
  40fb3d:	mov    rdx,QWORD PTR [rcx+0x10]
  40fb41:	mov    eax,DWORD PTR [rdx+0x2c]
  40fb44:	test   al,0x2
  40fb46:	jne    0x410554
  40fb4c:	test   ah,0x10
  40fb4f:	jne    0x40fb5f
  40fb51:	mov    ecx,DWORD PTR [rip+0x32545]        # 0x44209c
  40fb57:	test   ecx,ecx
  40fb59:	je     0x411649
  40fb5f:	test   al,0x1
  40fb61:	je     0x4104fb
  40fb67:	mov    rsi,QWORD PTR [rdx]
  40fb6a:	lea    rdi,[rip+0x26132]        # 0x435ca3
  40fb71:	mov    ecx,0x7
  40fb76:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fb78:	je     0x410700
  40fb7e:	movss  xmm0,DWORD PTR [rsp+0x3d0]
  40fb87:	ucomiss xmm0,DWORD PTR [rip+0x2996a]        # 0x4394f8
  40fb8e:	movss  xmm6,DWORD PTR [rip+0x29966]        # 0x4394fc
  40fb96:	jp     0x4104d6
  40fb9c:	jne    0x4104d6
  40fba2:	mulss  xmm6,DWORD PTR [rsp+0x3d4]
  40fbab:	mov    rdx,QWORD PTR [rsp+0xa8]
  40fbb3:	cvttss2si eax,xmm6
  40fbb7:	mov    DWORD PTR [rdx+0x450],eax
  40fbbd:	mov    eax,DWORD PTR [rsp+0x4e8]
  40fbc4:	test   eax,eax
  40fbc6:	jle    0x41111c
  40fbcc:	lea    rax,[rsp+0xc0]
  40fbd4:	xor    r13d,r13d
  40fbd7:	mov    DWORD PTR [rsp+0x40],0x0
  40fbdf:	mov    QWORD PTR [rsp+0x98],r14
  40fbe7:	mov    QWORD PTR [rsp+0x68],rax
  40fbec:	mov    rax,QWORD PTR [rip+0x2dc8d]        # 0x43d880
  40fbf3:	mov    QWORD PTR [rsp+0x60],rax
  40fbf8:	mov    rax,QWORD PTR [rsp+0x4e0]
  40fc00:	mov    rdx,QWORD PTR [rsp+0x68]
  40fc05:	xor    r8d,r8d
  40fc08:	mov    rcx,QWORD PTR [rax+r13*1+0x8]
  40fc0d:	call   0x42faa8
  40fc12:	mov    rsi,QWORD PTR [rsp+0x60]
  40fc17:	cmp    eax,DWORD PTR [rsi]
  40fc19:	jge    0x4115c6
  40fc1f:	xor    r14d,r14d
  40fc22:	test   eax,eax
  40fc24:	js     0x40fc39
  40fc26:	mov    rsi,QWORD PTR [rip+0x2dbb3]        # 0x43d7e0
  40fc2d:	cdqe   
  40fc2f:	mov    rdx,QWORD PTR [rsi]
  40fc32:	mov    rax,QWORD PTR [rdx+rax*8]
  40fc36:	mov    r14,QWORD PTR [rax]
  40fc39:	mov    r9,QWORD PTR [rsp+0xc0]
  40fc41:	mov    rax,QWORD PTR [rsp+0x4e0]
  40fc49:	mov    rbx,QWORD PTR [rsp+0xa8]
  40fc51:	cmp    BYTE PTR [r9],0x0
  40fc55:	mov    rbp,QWORD PTR [rax+r13*1]
  40fc59:	je     0x40fca7
  40fc5b:	movzx  esi,BYTE PTR [r9+0x1]
  40fc60:	test   sil,sil
  40fc63:	je     0x40fca7
  40fc65:	cmp    sil,0x67
  40fc69:	je     0x410629
  40fc6f:	jle    0x4105e0
  40fc75:	cmp    sil,0x70
  40fc79:	je     0x410602
  40fc7f:	cmp    sil,0x73
  40fc83:	jne    0x4105e6
  40fc89:	movzx  eax,BYTE PTR [r9+0x2]
  40fc8e:	test   al,al
  40fc90:	je     0x41078a
  40fc96:	cmp    al,0x3a
  40fc98:	jne    0x411521
  40fc9e:	lea    r12,[r9+0x3]
  40fca2:	xor    r11d,r11d
  40fca5:	jmp    0x40fcb2
  40fca7:	xor    r11d,r11d
  40fcaa:	xor    r12d,r12d
  40fcad:	mov    esi,0x67
  40fcb2:	movzx  r15d,BYTE PTR [rbp+0x0]
  40fcb7:	test   r15b,r15b
  40fcba:	je     0x40fd26
  40fcbc:	cmp    r15b,0x67
  40fcc0:	je     0x40fd26
  40fcc2:	jle    0x4106a2
  40fcc8:	cmp    r15b,0x70
  40fccc:	je     0x4106b1
  40fcd2:	cmp    r15b,0x73
  40fcd6:	jne    0x4106a8
  40fcdc:	movzx  eax,BYTE PTR [rbp+0x1]
  40fce0:	test   al,al
  40fce2:	je     0x410799
  40fce8:	cmp    al,0x3a
  40fcea:	jne    0x411640
  40fcf0:	test   r14,r14
  40fcf3:	lea    rdi,[rbp+0x2]
  40fcf7:	je     0x41064f
  40fcfd:	cmp    sil,0x67
  40fd01:	je     0x411629
  40fd07:	cmp    sil,0x73
  40fd0b:	mov    BYTE PTR [rsp+0x50],0x1
  40fd10:	sete   dl
  40fd13:	xor    r8d,r8d
  40fd16:	xor    r9d,r9d
  40fd19:	mov    DWORD PTR [rsp+0x3a0],0x1
  40fd24:	jmp    0x40fd5a
  40fd26:	test   r14,r14
  40fd29:	je     0x410634
  40fd2f:	cmp    sil,0x73
  40fd33:	mov    BYTE PTR [rsp+0x50],0x0
  40fd38:	mov    r15d,0x67
  40fd3e:	sete   cl
  40fd41:	xor    r8d,r8d
  40fd44:	xor    edi,edi
  40fd46:	mov    edx,ecx
  40fd48:	xor    r9d,r9d
  40fd4b:	mov    DWORD PTR [rsp+0x39c],0x1
  40fd56:	test   cl,cl
  40fd58:	jne    0x40fd19
  40fd5a:	test   r8b,r8b
  40fd5d:	jne    0x410028
  40fd63:	cmp    sil,0x63
  40fd67:	je     0x410028
  40fd6d:	cmp    sil,0x67
  40fd71:	je     0x410696
  40fd77:	jle    0x4101c0
  40fd7d:	cmp    sil,0x70
  40fd81:	je     0x41066c
  40fd87:	cmp    sil,0x73
  40fd8b:	jne    0x41065f
  40fd91:	cmp    r15b,0x67
  40fd95:	je     0x410774
  40fd9b:	jle    0x410252
  40fda1:	cmp    r15b,0x70
  40fda5:	je     0x410740
  40fdab:	cmp    r15b,0x73
  40fdaf:	jne    0x410222
  40fdb5:	test   dl,dl
  40fdb7:	jne    0x410721
  40fdbd:	mov    QWORD PTR [rsp+0x80],0x0
  40fdc9:	xor    esi,esi
  40fdcb:	cmp    BYTE PTR [rsp+0x50],0x0
  40fdd0:	je     0x41028f
  40fdd6:	mov    eax,DWORD PTR [rbx+0x2c]
  40fdd9:	test   eax,eax
  40fddb:	je     0x40fe5b
  40fddd:	xor    r12d,r12d
  40fde0:	xor    ebp,ebp
  40fde2:	jmp    0x40fe0a
  40fde4:	mov    rax,QWORD PTR [rbx+0x30]
  40fde8:	mov    rdx,QWORD PTR [rsi]
  40fdeb:	mov    r8d,0x10
  40fdf1:	mov    rcx,QWORD PTR [rax+r12*1]
  40fdf5:	add    rcx,0x60
  40fdf9:	call   0x422828
  40fdfe:	add    ebp,0x1
  40fe01:	add    r12,0x8
  40fe05:	cmp    ebp,DWORD PTR [rbx+0x2c]
  40fe08:	jae    0x40fe5b
  40fe0a:	mov    rax,QWORD PTR [rbx+0x30]
  40fe0e:	mov    r8,rdi
  40fe11:	mov    rcx,rbx
  40fe14:	mov    rdx,QWORD PTR [rax+r12*1]
  40fe18:	call   0x4075b0
  40fe1d:	cmp    eax,0x0
  40fe20:	jg     0x40fde4
  40fe22:	je     0x40fdfe
  40fe24:	jmp    0x40f4c7
  40fe29:	nop    DWORD PTR [rax+0x0]
  40fe30:	cmp    r15b,0x67
  40fe34:	je     0x410634
  40fe3a:	cmp    BYTE PTR [rbp+0x0],0x0
  40fe3e:	je     0x41063a
  40fe44:	cmp    r15b,0x63
  40fe48:	je     0x40fe50
  40fe4a:	cmp    BYTE PTR [rbp+0x0],0x0
  40fe4e:	jne    0x40fe5b
  40fe50:	mov    DWORD PTR [rsp+0x3a4],0x1
  40fe5b:	add    DWORD PTR [rsp+0x40],0x1
  40fe60:	add    r13,0x10
  40fe64:	mov    eax,DWORD PTR [rsp+0x40]
  40fe68:	cmp    eax,DWORD PTR [rsp+0x4e8]
  40fe6f:	jl     0x40fbf8
  40fe75:	mov    r14,QWORD PTR [rsp+0x98]
  40fe7d:	mov    rax,QWORD PTR [rsp+0x60]
  40fe82:	mov    r9d,DWORD PTR [rsp+0x3b4]
  40fe8a:	mov    ecx,DWORD PTR [rax]
  40fe8c:	cmp    r9d,ecx
  40fe8f:	jl     0x410ec4
  40fe95:	cmp    r9d,0x7fffffff
  40fe9c:	jne    0x4115ba
  40fea2:	test   ecx,ecx
  40fea4:	mov    DWORD PTR [rsp+0x3b4],0xffffffff
  40feaf:	jle    0x40fef8
  40feb1:	mov    rax,QWORD PTR [rip+0x2d928]        # 0x43d7e0
  40feb8:	mov    rdx,QWORD PTR [rax]
  40febb:	mov    rax,QWORD PTR [rdx]
  40febe:	mov    rax,QWORD PTR [rax]
  40fec1:	mov    eax,DWORD PTR [rax+0x48c]
  40fec7:	test   eax,eax
  40fec9:	jne    0x410eb8
  40fecf:	add    rdx,0x8
  40fed3:	xor    eax,eax
  40fed5:	jmp    0x40fef1
  40fed7:	mov    r8,QWORD PTR [rdx]
  40feda:	add    rdx,0x8
  40fede:	mov    r8,QWORD PTR [r8]
  40fee1:	mov    r15d,DWORD PTR [r8+0x48c]
  40fee8:	test   r15d,r15d
  40feeb:	jne    0x410eba
  40fef1:	add    eax,0x1
  40fef4:	cmp    eax,ecx
  40fef6:	jne    0x40fed7
  40fef8:	mov    eax,DWORD PTR [rsp+0x39c]
  40feff:	test   eax,eax
  40ff01:	jne    0x40ff12
  40ff03:	mov    rax,QWORD PTR [rsp+0x60]
  40ff08:	mov    edi,DWORD PTR [rax]
  40ff0a:	test   edi,edi
  40ff0c:	jne    0x411236
  40ff12:	mov    esi,DWORD PTR [rsp+0x3a0]
  40ff19:	test   esi,esi
  40ff1b:	jne    0x410ba4
  40ff21:	mov    rax,QWORD PTR [rsp+0x58]
  40ff26:	mov    edi,DWORD PTR [rax+0x10]
  40ff29:	mov    rax,QWORD PTR [rip+0x2d980]        # 0x43d8b0
  40ff30:	mov    eax,DWORD PTR [rax]
  40ff32:	cmp    edi,eax
  40ff34:	jge    0x410ba4
  40ff3a:	movsxd rsi,edi
  40ff3d:	mov    rbx,QWORD PTR [rip+0x2d99c]        # 0x43d8e0
  40ff44:	mov    rbp,QWORD PTR [rip+0x2d8a5]        # 0x43d7f0
  40ff4b:	shl    rsi,0x3
  40ff4f:	jmp    0x40ff69
  40ff51:	mov    rax,QWORD PTR [rip+0x2d958]        # 0x43d8b0
  40ff58:	mov    eax,DWORD PTR [rax]
  40ff5a:	add    edi,0x1
  40ff5d:	add    rsi,0x8
  40ff61:	cmp    edi,eax
  40ff63:	jge    0x410ba4
  40ff69:	mov    rdx,QWORD PTR [rbx]
  40ff6c:	mov    rcx,QWORD PTR [rdx+rsi*1]
  40ff70:	movsxd rdx,DWORD PTR [rcx+0x8]
  40ff74:	test   edx,edx
  40ff76:	js     0x40ff5a
  40ff78:	mov    rax,QWORD PTR [rbp+0x0]
  40ff7c:	mov    rcx,QWORD PTR [rcx+0x10]
  40ff80:	mov    r8d,0x10
  40ff86:	mov    r12,QWORD PTR [rax+rdx*8]
  40ff8a:	add    rcx,0x60
  40ff8e:	mov    rax,QWORD PTR [r12+0x8]
  40ff93:	mov    rdx,QWORD PTR [rax+0x60]
  40ff97:	call   0x422828
  40ff9c:	mov    rax,QWORD PTR [rbx]
  40ff9f:	mov    rax,QWORD PTR [rax+rsi*1]
  40ffa3:	mov    r11d,DWORD PTR [rax+0x160]
  40ffaa:	test   r11d,r11d
  40ffad:	jne    0x40ff51
  40ffaf:	mov    rcx,QWORD PTR [rax+0x10]
  40ffb3:	lea    rdx,[rip+0x24aa3]        # 0x434a5d
  40ffba:	xor    r9d,r9d
  40ffbd:	xor    r8d,r8d
  40ffc0:	add    rcx,0x60
  40ffc4:	call   0x422808
  40ffc9:	mov    r10d,DWORD PTR [r12+0xa0]
  40ffd1:	test   r10d,r10d
  40ffd4:	je     0x40ff51
  40ffda:	mov    rax,QWORD PTR [rbx]
  40ffdd:	lea    rdx,[rip+0x25e44]        # 0x435e28
  40ffe4:	xor    r9d,r9d
  40ffe7:	xor    r8d,r8d
  40ffea:	mov    rax,QWORD PTR [rax+rsi*1]
  40ffee:	mov    rcx,QWORD PTR [rax+0x10]
  40fff2:	add    rcx,0x60
  40fff6:	call   0x422808
  40fffb:	jmp    0x40ff51
  410000:	mov    rax,QWORD PTR [r14+0x8]
  410004:	lea    r9,[rip+0x2576c]        # 0x435777
  41000b:	lea    r8,[rip+0x257ae]        # 0x4357c0
  410012:	mov    edx,0x10
  410017:	xor    ecx,ecx
  410019:	mov    QWORD PTR [rsp+0x20],rax
  41001e:	call   0x4226c0
  410023:	jmp    0x40ef52
  410028:	mov    DWORD PTR [rsp+0x3a4],0x1
  410033:	jmp    0x40fd6d
  410038:	mov    esi,DWORD PTR [rsp+0x3dc]
  41003f:	test   esi,esi
  410041:	je     0x410a68
  410047:	mov    r8d,DWORD PTR [rsp+0x3e0]
  41004f:	test   r8d,r8d
  410052:	je     0x4109bb
  410058:	mov    edx,DWORD PTR [rsp+0x2c0]
  41005f:	test   edx,edx
  410061:	jle    0x4110d8
  410067:	mov    rcx,QWORD PTR [rsp+0x2b8]
  41006f:	sub    edx,0x1
  410072:	lea    r8,[rip+0x242bb]        # 0x434334
  410079:	shl    rdx,0x4
  41007d:	xor    ebx,ebx
  41007f:	lea    rax,[rcx+0x8]
  410083:	lea    r9,[rcx+rdx*1+0x18]
  410088:	mov    edx,0x2
  41008d:	nop    DWORD PTR [rax]
  410090:	mov    rsi,QWORD PTR [rax-0x8]
  410094:	mov    rdi,r8
  410097:	mov    rcx,rdx
  41009a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41009c:	jne    0x4100a1
  41009e:	mov    rbx,QWORD PTR [rax]
  4100a1:	add    rax,0x10
  4100a5:	cmp    rax,r9
  4100a8:	jne    0x410090
  4100aa:	mov    ecx,DWORD PTR [rsp+0x3e4]
  4100b1:	test   ecx,ecx
  4100b3:	je     0x4108bb
  4100b9:	mov    r15d,DWORD PTR [rsp+0x3e8]
  4100c1:	test   r15d,r15d
  4100c4:	jne    0x40f534
  4100ca:	mov    rax,QWORD PTR [rsp+0xa8]
  4100d2:	mov    r8,QWORD PTR [rsp+0x50]
  4100d7:	xor    r9d,r9d
  4100da:	xor    edx,edx
  4100dc:	mov    rcx,QWORD PTR [rax+0x10]
  4100e0:	mov    DWORD PTR [rsp+0x20],0x2
  4100e8:	call   0x4222c0
  4100ed:	test   eax,eax
  4100ef:	mov    r12d,eax
  4100f2:	je     0x40f534
  4100f8:	mov    rdi,QWORD PTR [rip+0x2d791]        # 0x43d890
  4100ff:	mov    edx,DWORD PTR [rdi]
  410101:	test   edx,edx
  410103:	jle    0x40f534
  410109:	xor    ebp,ebp
  41010b:	xor    esi,esi
  41010d:	mov    rbx,QWORD PTR [rip+0x2d6dc]        # 0x43d7f0
  410114:	jmp    0x41012f
  410116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410120:	add    esi,0x1
  410123:	add    rbp,0x8
  410127:	cmp    esi,edx
  410129:	jge    0x40f534
  41012f:	mov    rax,QWORD PTR [rbx]
  410132:	mov    rax,QWORD PTR [rax+rbp*1]
  410136:	mov    rax,QWORD PTR [rax+0x8]
  41013a:	mov    rax,QWORD PTR [rax+0x8]
  41013e:	cmp    DWORD PTR [rax+0xc],0x2
  410142:	jne    0x410120
  410144:	cmp    r12d,DWORD PTR [rax+0x38]
  410148:	jne    0x410120
  41014a:	mov    rdx,QWORD PTR [rsp+0xa8]
  410152:	mov    r9d,esi
  410155:	mov    r8d,0x2
  41015b:	mov    rcx,r14
  41015e:	call   0x40a7d0
  410163:	mov    r13d,DWORD PTR [rax+0x160]
  41016a:	test   r13d,r13d
  41016d:	je     0x4107ee
  410173:	mov    edx,DWORD PTR [rdi]
  410175:	jmp    0x410120
  410177:	lea    r8,[rip+0x256f2]        # 0x435870
  41017e:	xor    ecx,ecx
  410180:	mov    edx,0x18
  410185:	mov    QWORD PTR [rsp+0x3c0],rbx
  41018d:	call   0x4226c0
  410192:	mov    rax,QWORD PTR [rsp+0x3c0]
  41019a:	cmp    rax,rbx
  41019d:	je     0x40f1bb
  4101a3:	cmp    QWORD PTR [rsp+0x3b8],rbx
  4101ab:	jne    0x40f1bb
  4101b1:	jmp    0x40f189
  4101b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101c0:	cmp    sil,0x63
  4101c4:	jne    0x41065f
  4101ca:	test   r11d,r11d
  4101cd:	js     0x411596
  4101d3:	cmp    r11d,DWORD PTR [r14+0x48c]
  4101da:	jae    0x411596
  4101e0:	mov    rax,QWORD PTR [r14+0x490]
  4101e7:	mov    rsi,QWORD PTR [rax+r11*8]
  4101eb:	add    rsi,0x20
  4101ef:	cmp    r15b,0x67
  4101f3:	je     0x410776
  4101f9:	jle    0x41021c
  4101fb:	cmp    r15b,0x70
  4101ff:	je     0x410742
  410205:	cmp    r15b,0x73
  410209:	jne    0x410222
  41020b:	mov    QWORD PTR [rsp+0x80],0x0
  410217:	jmp    0x40fdcb
  41021c:	cmp    r15b,0x63
  410220:	je     0x41025a
  410222:	mov    DWORD PTR [rsp+0x28],0x204
  41022a:	lea    rax,[rip+0x25b6a]        # 0x435d9b
  410231:	lea    r9,[rip+0x240a1]        # 0x4342d9
  410238:	lea    r8,[rip+0x25b3e]        # 0x435d7d
  41023f:	xor    edx,edx
  410241:	xor    ecx,ecx
  410243:	mov    QWORD PTR [rsp+0x20],rax
  410248:	call   0x4226c0
  41024d:	call   0x42fbf8
  410252:	cmp    r15b,0x63
  410256:	jne    0x410222
  410258:	xor    esi,esi
  41025a:	test   r9d,r9d
  41025d:	js     0x4116f4
  410263:	cmp    r9d,DWORD PTR [rbx+0x48c]
  41026a:	jae    0x4116f4
  410270:	mov    rax,QWORD PTR [rbx+0x490]
  410277:	mov    r15,QWORD PTR [rax+r9*8]
  41027b:	lea    rax,[r15+0x20]
  41027f:	mov    QWORD PTR [rsp+0x80],rax
  410287:	test   dl,dl
  410289:	jne    0x410579
  41028f:	mov    rdx,QWORD PTR [rsi]
  410292:	mov    rcx,QWORD PTR [rsp+0x80]
  41029a:	mov    r8d,0x10
  4102a0:	call   0x422828
  4102a5:	jmp    0x40fe5b
  4102aa:	mov    rcx,QWORD PTR [rsp+0x50]
  4102af:	lea    rdx,[rip+0x25615]        # 0x4358cb
  4102b6:	xor    r8d,r8d
  4102b9:	call   0x422550
  4102be:	test   eax,eax
  4102c0:	jne    0x410e82
  4102c6:	mov    rsi,QWORD PTR [rbx]
  4102c9:	mov    ecx,0x4
  4102ce:	mov    rdi,rbp
  4102d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4102d3:	jne    0x40f3f4
  4102d9:	mov    ecx,DWORD PTR [rip+0x31dc1]        # 0x4420a0
  4102df:	test   ecx,ecx
  4102e1:	jne    0x40f3f4
  4102e7:	mov    rcx,QWORD PTR [rsp+0x50]
  4102ec:	lea    rdx,[rip+0x255d8]        # 0x4358cb
  4102f3:	xor    r8d,r8d
  4102f6:	call   0x422550
  4102fb:	test   eax,eax
  4102fd:	je     0x40f3f4
  410303:	mov    r12,QWORD PTR [rsp+0xa8]
  41030b:	call   0x422248
  410310:	mov    rsi,QWORD PTR [rip+0x2d4e9]        # 0x43d800
  410317:	mov    QWORD PTR [rsp+0xc0],rax
  41031f:	xor    r9d,r9d
  410322:	mov    rdx,QWORD PTR [rsp+0x50]
  410327:	xor    r8d,r8d
  41032a:	mov    rcx,QWORD PTR [rsi]
  41032d:	mov    rbx,QWORD PTR [rsi+0x8]
  410331:	mov    QWORD PTR [rax+0x4b0],rcx
  410338:	mov    QWORD PTR [rax+0x4b8],rbx
  41033f:	lea    rax,[rsp+0xc0]
  410347:	mov    rcx,rax
  41034a:	mov    QWORD PTR [rsp+0x68],rax
  41034f:	call   0x4221f0
  410354:	test   eax,eax
  410356:	js     0x410ea7
  41035c:	mov    rax,QWORD PTR [rsp+0xc0]
  410364:	xor    ebp,ebp
  410366:	lea    r13,[rsp+0x190]
  41036e:	mov    edx,DWORD PTR [rax+0x2c]
  410371:	test   edx,edx
  410373:	jne    0x410475
  410379:	jmp    0x41137e
  41037e:	xchg   ax,ax
  410380:	mov    r9d,0xffffffff
  410386:	mov    rdx,r12
  410389:	mov    rcx,r14
  41038c:	call   0x40a7d0
  410391:	mov    rdi,QWORD PTR [rax+0x10]
  410395:	mov    rdx,rbx
  410398:	mov    rsi,rax
  41039b:	mov    rcx,QWORD PTR [rdi+0x8]
  41039f:	call   0x422348
  4103a4:	mov    rax,QWORD PTR [rsp+0xc0]
  4103ac:	mov    rax,QWORD PTR [rax+0x30]
  4103b0:	mov    rcx,QWORD PTR [rax+r15*1]
  4103b4:	call   0x422260
  4103b9:	test   rax,rax
  4103bc:	mov    r15,rax
  4103bf:	je     0x410408
  4103c1:	lea    r9,[rip+0x25542]        # 0x43590a
  4103c8:	lea    r8,[rip+0x24535]        # 0x434904
  4103cf:	mov    rdx,rax
  4103d2:	mov    rcx,r13
  4103d5:	mov    DWORD PTR [rsp+0x20],0x0
  4103dd:	mov    QWORD PTR [rsp+0x190],0x0
  4103e9:	call   0x422810
  4103ee:	mov    rcx,QWORD PTR [rdi+0x8]
  4103f2:	mov    r8d,0x1
  4103f8:	mov    rdx,r13
  4103fb:	call   0x422610
  410400:	mov    rcx,r13
  410403:	call   0x422820
  410408:	mov    rdx,QWORD PTR [rdi+0x8]
  41040c:	mov    eax,DWORD PTR [rdx+0xc]
  41040f:	cmp    eax,0x1
  410412:	je     0x410e60
  410418:	test   eax,eax
  41041a:	jne    0x41042a
  41041c:	mov    eax,DWORD PTR [rsi+0x160]
  410422:	test   eax,eax
  410424:	je     0x4110df
  41042a:	mov    rcx,QWORD PTR [rsi+0x48]
  41042e:	call   0x4223d8
  410433:	test   r15,r15
  410436:	je     0x41045d
  410438:	lea    rcx,[rsi+0x128]
  41043f:	lea    r9,[rip+0x254c4]        # 0x43590a
  410446:	lea    r8,[rip+0x244b7]        # 0x434904
  41044d:	mov    DWORD PTR [rsp+0x20],0x0
  410455:	mov    rdx,r15
  410458:	call   0x422810
  41045d:	mov    rax,QWORD PTR [rsp+0xc0]
  410465:	lea    edx,[rbp+0x1]
  410468:	add    rbp,0x1
  41046c:	cmp    DWORD PTR [rax+0x2c],edx
  41046f:	jbe    0x41137e
  410475:	mov    rax,QWORD PTR [rax+0x30]
  410479:	lea    r15,[rbp*8+0x0]
  410481:	mov    rax,QWORD PTR [rax+rbp*8]
  410485:	mov    rax,QWORD PTR [rax+0x8]
  410489:	mov    ecx,DWORD PTR [rax+0x38]
  41048c:	call   0x422368
  410491:	test   rax,rax
  410494:	mov    rbx,rax
  410497:	je     0x411348
  41049d:	mov    r8d,DWORD PTR [rax+0x10]
  4104a1:	cmp    r8d,0x1
  4104a5:	je     0x4110fa
  4104ab:	test   r8d,r8d
  4104ae:	jne    0x410380
  4104b4:	mov    r8,QWORD PTR [rax]
  4104b7:	lea    r9,[rip+0x27602]        # 0x437ac0
  4104be:	lea    rdx,[rip+0x23a9f]        # 0x433f64
  4104c5:	mov    rcx,r14
  4104c8:	call   0x402ef0
  4104cd:	mov    r8d,DWORD PTR [rbx+0x10]
  4104d1:	jmp    0x410380
  4104d6:	mulss  xmm0,xmm6
  4104da:	mov    rcx,QWORD PTR [rsp+0x80]
  4104e2:	lea    rdx,[rip+0x257c1]        # 0x435caa
  4104e9:	xor    r9d,r9d
  4104ec:	cvttss2si r8,xmm0
  4104f1:	call   0x422800
  4104f6:	jmp    0x40fba2
  4104fb:	mov    rsi,QWORD PTR [rsp+0x50]
  410500:	mov    rcx,rsi
  410503:	call   0x409ef0
  410508:	mov    rax,QWORD PTR [rsp+0xa8]
  410510:	mov    rdi,QWORD PTR [rsp+0x80]
  410518:	mov    r8d,0x2
  41051e:	mov    rdx,rsi
  410521:	lea    rcx,[rax+0x20]
  410525:	lea    r9,[rax+0x4b0]
  41052c:	mov    QWORD PTR [rsp+0x20],rdi
  410531:	call   0x422188
  410536:	test   eax,eax
  410538:	jns    0x40fb7e
  41053e:	mov    rcx,QWORD PTR [rsp+0x50]
  410543:	mov    edx,eax
  410545:	call   0x4054b0
  41054a:	mov    ecx,0x1
  41054f:	call   0x401cb0
  410554:	add    rcx,0x38
  410558:	call   0x4222f0
  41055d:	test   eax,eax
  41055f:	mov    rax,QWORD PTR [rsp+0xa8]
  410567:	je     0x411705
  41056d:	mov    rdx,QWORD PTR [rax+0x10]
  410571:	mov    eax,DWORD PTR [rdx+0x2c]
  410574:	jmp    0x40fb4c
  410579:	mov    eax,DWORD PTR [r14+0x2c]
  41057d:	test   eax,eax
  41057f:	je     0x4105c7
  410581:	xor    r15d,r15d
  410584:	xor    ebp,ebp
  410586:	jmp    0x4105a3
  410588:	nop    DWORD PTR [rax+rax*1+0x0]
  410590:	jne    0x40f4c7
  410596:	add    ebp,0x1
  410599:	add    r15,0x8
  41059d:	cmp    ebp,DWORD PTR [r14+0x2c]
  4105a1:	jae    0x4105c7
  4105a3:	mov    rax,QWORD PTR [r14+0x30]
  4105a7:	mov    r8,r12
  4105aa:	mov    rcx,r14
  4105ad:	mov    rdx,QWORD PTR [rax+r15*1]
  4105b1:	call   0x4075b0
  4105b6:	cmp    eax,0x0
  4105b9:	jle    0x410590
  4105bb:	mov    rax,QWORD PTR [r14+0x30]
  4105bf:	mov    rsi,QWORD PTR [rax+r15*1]
  4105c3:	add    rsi,0x60
  4105c7:	test   rsi,rsi
  4105ca:	jne    0x40fdcb
  4105d0:	mov    r9,r12
  4105d3:	lea    r8,[rip+0x257ce]        # 0x435da8
  4105da:	jmp    0x40f4bb
  4105df:	nop
  4105e0:	cmp    sil,0x63
  4105e4:	je     0x410602
  4105e6:	movsx  r9d,sil
  4105ea:	lea    r8,[rip+0x25727]        # 0x435d18
  4105f1:	mov    edx,0x8
  4105f6:	xor    ecx,ecx
  4105f8:	call   0x4226c0
  4105fd:	jmp    0x40f4c7
  410602:	xor    r11d,r11d
  410605:	xor    r12d,r12d
  410608:	cmp    BYTE PTR [r9+0x2],0x3a
  41060d:	jne    0x40fcb2
  410613:	lea    rcx,[r9+0x3]
  410617:	xor    r8d,r8d
  41061a:	xor    edx,edx
  41061c:	call   0x42faa8
  410621:	movsxd r11,eax
  410624:	jmp    0x40fcb2
  410629:	xor    r11d,r11d
  41062c:	xor    r12d,r12d
  41062f:	jmp    0x40fcb2
  410634:	mov    r15d,0x67
  41063a:	mov    DWORD PTR [rsp+0x39c],0x1
  410645:	cmp    BYTE PTR [rbp+0x0],0x0
  410649:	jne    0x41080a
  41064f:	mov    DWORD PTR [rsp+0x3a0],0x1
  41065a:	jmp    0x40fe44
  41065f:	mov    DWORD PTR [rsp+0x28],0x203
  410667:	jmp    0x41022a
  41066c:	test   r11d,r11d
  41066f:	js     0x4116ea
  410675:	cmp    r11d,DWORD PTR [r14+0x46c]
  41067c:	jae    0x4116ea
  410682:	mov    rax,QWORD PTR [r14+0x470]
  410689:	mov    rsi,QWORD PTR [rax+r11*8]
  41068d:	add    rsi,0x20
  410691:	jmp    0x4101ef
  410696:	lea    rsi,[r14+0x498]
  41069d:	jmp    0x4101ef
  4106a2:	cmp    r15b,0x63
  4106a6:	je     0x4106b1
  4106a8:	movsx  r9d,r15b
  4106ac:	jmp    0x4105ea
  4106b1:	xor    r9d,r9d
  4106b4:	cmp    BYTE PTR [rbp+0x1],0x3a
  4106b8:	je     0x411177
  4106be:	test   r14,r14
  4106c1:	je     0x40fe30
  4106c7:	cmp    r15b,0x67
  4106cb:	mov    BYTE PTR [rsp+0x50],0x0
  4106d0:	sete   al
  4106d3:	cmp    sil,0x73
  4106d7:	sete   dl
  4106da:	cmp    r15b,0x63
  4106de:	sete   r8b
  4106e2:	xor    edi,edi
  4106e4:	test   al,al
  4106e6:	mov    ecx,edx
  4106e8:	jne    0x40fd4b
  4106ee:	cmp    sil,0x67
  4106f2:	jne    0x40fd56
  4106f8:	jmp    0x40fd4b
  4106fd:	nop    DWORD PTR [rax]
  410700:	mov    rcx,QWORD PTR [rsp+0x50]
  410705:	call   0x4222f0
  41070a:	test   eax,eax
  41070c:	jne    0x40fb7e
  410712:	mov    rcx,QWORD PTR [rsp+0x50]
  410717:	call   0x409ef0
  41071c:	jmp    0x40fb7e
  410721:	mov    eax,DWORD PTR [r14+0x2c]
  410725:	test   eax,eax
  410727:	je     0x4105d0
  41072d:	mov    QWORD PTR [rsp+0x80],0x0
  410739:	xor    esi,esi
  41073b:	jmp    0x410581
  410740:	xor    esi,esi
  410742:	test   r9d,r9d
  410745:	js     0x411666
  41074b:	cmp    r9d,DWORD PTR [rbx+0x46c]
  410752:	jae    0x411666
  410758:	mov    rax,QWORD PTR [rbx+0x470]
  41075f:	mov    r15,QWORD PTR [rax+r9*8]
  410763:	lea    rax,[r15+0x20]
  410767:	mov    QWORD PTR [rsp+0x80],rax
  41076f:	jmp    0x410287
  410774:	xor    esi,esi
  410776:	lea    rax,[rbx+0x498]
  41077d:	mov    QWORD PTR [rsp+0x80],rax
  410785:	jmp    0x410287
  41078a:	xor    r11d,r11d
  41078d:	lea    r12,[rip+0x2384a]        # 0x433fde
  410794:	jmp    0x40fcb2
  410799:	test   r14,r14
  41079c:	je     0x41064f
  4107a2:	cmp    sil,0x73
  4107a6:	mov    ecx,0x1
  4107ab:	mov    BYTE PTR [rsp+0x50],0x1
  4107b0:	sete   dl
  4107b3:	lea    rdi,[rip+0x23824]        # 0x433fde
  4107ba:	xor    r8d,r8d
  4107bd:	xor    r9d,r9d
  4107c0:	jmp    0x4106ee
  4107c5:	mov    rdx,QWORD PTR [rsp+0xa8]
  4107cd:	mov    rcx,QWORD PTR [rsp+0x40]
  4107d2:	mov    r9d,r8d
  4107d5:	mov    r8d,0x2
  4107db:	call   0x40a7d0
  4107e0:	mov    edi,DWORD PTR [rax+0x160]
  4107e6:	test   edi,edi
  4107e8:	jne    0x40f4e8
  4107ee:	call   0x4300f7
  4107f3:	mov    rdx,QWORD PTR [rsp+0xa8]
  4107fb:	mov    rcx,QWORD PTR [rsp+0x40]
  410800:	call   0x40bc00
  410805:	jmp    0x40f4e3
  41080a:	cmp    r15b,0x63
  41080e:	jne    0x40fe5b
  410814:	jmp    0x40fe50
  410819:	mov    rdx,QWORD PTR [rsp+0xa8]
  410821:	mov    rcx,QWORD PTR [rsp+0x40]
  410826:	call   0x40da10
  41082b:	jmp    0x40f4e3
  410830:	mov    esi,DWORD PTR [rip+0x3185e]        # 0x442094
  410836:	test   esi,esi
  410838:	jne    0x4112c2
  41083e:	cmp    DWORD PTR [rip+0x31853],0x1        # 0x442098
  410845:	lea    r8,[rip+0x2513c]        # 0x435988
  41084c:	mov    DWORD PTR [rsp+0x20],ecx
  410850:	sbb    edx,edx
  410852:	xor    ecx,ecx
  410854:	and    edx,0xfffffff0
  410857:	add    edx,0x18
  41085a:	call   0x4226c0
  41085f:	mov    r10d,DWORD PTR [rip+0x31832]        # 0x442098
  410866:	test   r10d,r10d
  410869:	jne    0x40f515
  41086f:	lea    r8,[rip+0x25142]        # 0x4359b8
  410876:	mov    edx,0x8
  41087b:	xor    ecx,ecx
  41087d:	call   0x4226c0
  410882:	jmp    0x40f4c7
  410887:	nop    WORD PTR [rax+rax*1+0x0]
  410890:	mov    rdx,QWORD PTR [rsp+0xa8]
  410898:	mov    rcx,QWORD PTR [rsp+0x40]
  41089d:	call   0x40b390
  4108a2:	mov    DWORD PTR [rax+0x160],0x1
  4108ac:	mov    DWORD PTR [rax+0x158],0x1
  4108b6:	jmp    0x40f4e8
  4108bb:	mov    rax,QWORD PTR [rsp+0xa8]
  4108c3:	mov    rax,QWORD PTR [rax+0x10]
  4108c7:	mov    ecx,DWORD PTR [rax+0x28]
  4108ca:	call   0x422368
  4108cf:	test   rbx,rbx
  4108d2:	setne  sil
  4108d6:	test   rax,rax
  4108d9:	jne    0x4108e4
  4108db:	test   sil,sil
  4108de:	je     0x4100b9
  4108e4:	mov    rdi,QWORD PTR [rip+0x2cfa5]        # 0x43d890
  4108eb:	mov    edx,DWORD PTR [rdi]
  4108ed:	test   edx,edx
  4108ef:	jle    0x4100b9
  4108f5:	xor    r12d,r12d
  4108f8:	xor    ebp,ebp
  4108fa:	mov    rbx,QWORD PTR [rip+0x2ceef]        # 0x43d7f0
  410901:	jmp    0x410912
  410903:	add    ebp,0x1
  410906:	add    r12,0x8
  41090a:	cmp    ebp,edx
  41090c:	jge    0x4100b9
  410912:	mov    rax,QWORD PTR [rbx]
  410915:	mov    rax,QWORD PTR [rax+r12*1]
  410919:	mov    rax,QWORD PTR [rax+0x8]
  41091d:	mov    rax,QWORD PTR [rax+0x8]
  410921:	cmp    DWORD PTR [rax+0xc],0x3
  410925:	jne    0x410903
  410927:	mov    ecx,DWORD PTR [rax+0x38]
  41092a:	call   0x4223b0
  41092f:	mov    r13,rax
  410932:	mov    rax,QWORD PTR [rsp+0xa8]
  41093a:	mov    rax,QWORD PTR [rax+0x10]
  41093e:	mov    ecx,DWORD PTR [rax+0x28]
  410941:	call   0x422368
  410946:	test   rax,rax
  410949:	je     0x410997
  41094b:	mov    ecx,DWORD PTR [rax+0x14]
  41094e:	call   0x4223b0
  410953:	test   r13,r13
  410956:	je     0x4110d1
  41095c:	mov    edx,DWORD PTR [r13+0x18]
  410960:	and    edx,0x30000
  410966:	test   rax,rax
  410969:	je     0x41099e
  41096b:	mov    eax,DWORD PTR [rax+0x18]
  41096e:	mov    ecx,eax
  410970:	and    ecx,0x30000
  410976:	test   sil,sil
  410979:	jne    0x4109a3
  41097b:	test   ecx,edx
  41097d:	jne    0x4109a3
  41097f:	test   r13,r13
  410982:	je     0x410990
  410984:	mov    edx,DWORD PTR [r13+0x18]
  410988:	test   edx,edx
  41098a:	je     0x4109a3
  41098c:	test   eax,eax
  41098e:	je     0x4109a3
  410990:	mov    edx,DWORD PTR [rdi]
  410992:	jmp    0x410903
  410997:	xor    eax,eax
  410999:	test   r13,r13
  41099c:	jne    0x41095c
  41099e:	test   sil,sil
  4109a1:	je     0x410990
  4109a3:	mov    rdx,QWORD PTR [rsp+0xa8]
  4109ab:	mov    r8d,ebp
  4109ae:	mov    rcx,r14
  4109b1:	call   0x40b050
  4109b6:	jmp    0x4100b9
  4109bb:	mov    rax,QWORD PTR [rsp+0xa8]
  4109c3:	mov    r8,QWORD PTR [rsp+0x50]
  4109c8:	xor    r9d,r9d
  4109cb:	xor    edx,edx
  4109cd:	mov    rcx,QWORD PTR [rax+0x10]
  4109d1:	mov    DWORD PTR [rsp+0x20],0x1
  4109d9:	call   0x4222c0
  4109de:	test   eax,eax
  4109e0:	je     0x410058
  4109e6:	mov    rdi,QWORD PTR [rip+0x2cea3]        # 0x43d890
  4109ed:	mov    r11d,DWORD PTR [rdi]
  4109f0:	test   r11d,r11d
  4109f3:	jle    0x410058
  4109f9:	mov    rbx,QWORD PTR [rip+0x2cdf0]        # 0x43d7f0
  410a00:	xor    edx,edx
  410a02:	mov    r8d,0xffffffff
  410a08:	xor    ecx,ecx
  410a0a:	mov    rsi,QWORD PTR [rbx]
  410a0d:	mov    ebx,0x5f5e100
  410a12:	mov    rax,QWORD PTR [rsi+rdx*8]
  410a16:	mov    rax,QWORD PTR [rax+0x8]
  410a1a:	mov    r9,QWORD PTR [rax+0x8]
  410a1e:	mov    eax,DWORD PTR [rax+0x110]
  410a24:	test   eax,eax
  410a26:	cmovne eax,ebx
  410a29:	add    eax,DWORD PTR [r9+0x1d4]
  410a30:	cmp    eax,ecx
  410a32:	jle    0x410a40
  410a34:	cmp    DWORD PTR [r9+0xc],0x1
  410a39:	cmove  r8d,edx
  410a3d:	cmove  ecx,eax
  410a40:	add    rdx,0x1
  410a44:	cmp    r11d,edx
  410a47:	jg     0x410a12
  410a49:	cmp    r8d,0xffffffff
  410a4d:	je     0x410058
  410a53:	mov    rdx,QWORD PTR [rsp+0xa8]
  410a5b:	mov    rcx,r14
  410a5e:	call   0x40bc00
  410a63:	jmp    0x410058
  410a68:	mov    rax,QWORD PTR [rsp+0xa8]
  410a70:	mov    r8,QWORD PTR [rsp+0x50]
  410a75:	xor    r9d,r9d
  410a78:	xor    edx,edx
  410a7a:	mov    rcx,QWORD PTR [rax+0x10]
  410a7e:	mov    DWORD PTR [rsp+0x20],0x0
  410a86:	call   0x4222c0
  410a8b:	test   eax,eax
  410a8d:	je     0x410047
  410a93:	mov    rax,QWORD PTR [rsp+0xa8]
  410a9b:	xor    r8d,r8d
  410a9e:	mov    rcx,QWORD PTR [rax+0x10]
  410aa2:	mov    edx,DWORD PTR [rcx+0x24]
  410aa5:	call   0x4221e8
  410aaa:	mov    rdi,QWORD PTR [rip+0x2cddf]        # 0x43d890
  410ab1:	mov    r9d,DWORD PTR [rdi]
  410ab4:	test   r9d,r9d
  410ab7:	jle    0x410047
  410abd:	mov    rbx,QWORD PTR [rip+0x2cd2c]        # 0x43d7f0
  410ac4:	xor    ecx,ecx
  410ac6:	xor    r10d,r10d
  410ac9:	cmp    eax,0x43495041
  410ace:	mov    r8d,0xffffffff
  410ad4:	mov    ebp,0x5f5e100
  410ad9:	mov    rsi,QWORD PTR [rbx]
  410adc:	je     0x410b50
  410ade:	mov    r12d,0x1
  410ae4:	mov    rax,QWORD PTR [rsi+rcx*8]
  410ae8:	mov    r11,QWORD PTR [rax+0x8]
  410aec:	mov    rdx,QWORD PTR [r11+0x8]
  410af0:	mov    eax,DWORD PTR [rdx+0x94]
  410af6:	imul   eax,DWORD PTR [rdx+0x98]
  410afd:	mov    ebx,eax
  410aff:	mov    eax,DWORD PTR [r11+0x110]
  410b06:	test   eax,eax
  410b08:	cmovne eax,ebp
  410b0b:	add    eax,ebx
  410b0d:	test   BYTE PTR [r11+0x51],0x4
  410b12:	cmovne eax,r12d
  410b16:	cmp    eax,r10d
  410b19:	jle    0x410b28
  410b1b:	mov    ebx,DWORD PTR [rdx+0xc]
  410b1e:	test   ebx,ebx
  410b20:	cmove  r8d,ecx
  410b24:	cmove  r10d,eax
  410b28:	add    rcx,0x1
  410b2c:	cmp    r9d,ecx
  410b2f:	jg     0x410ae4
  410b31:	cmp    r8d,0xffffffff
  410b35:	je     0x410047
  410b3b:	mov    rdx,QWORD PTR [rsp+0xa8]
  410b43:	mov    rcx,r14
  410b46:	call   0x40da10
  410b4b:	jmp    0x410047
  410b50:	mov    rax,QWORD PTR [rsi+rcx*8]
  410b54:	mov    rdx,QWORD PTR [rax+0x8]
  410b58:	mov    r11,QWORD PTR [rdx+0x8]
  410b5c:	mov    eax,DWORD PTR [r11+0x94]
  410b63:	imul   eax,DWORD PTR [r11+0x98]
  410b6b:	mov    ebx,eax
  410b6d:	mov    eax,DWORD PTR [rdx+0x110]
  410b73:	test   eax,eax
  410b75:	cmovne eax,ebp
  410b78:	add    eax,ebx
  410b7a:	cmp    eax,r10d
  410b7d:	jle    0x410b99
  410b7f:	mov    r11d,DWORD PTR [r11+0xc]
  410b83:	test   r11d,r11d
  410b86:	jne    0x410b99
  410b88:	mov    edx,DWORD PTR [rdx+0x50]
  410b8b:	and    edx,0x400
  410b91:	cmovne r8d,ecx
  410b95:	cmovne r10d,eax
  410b99:	add    rcx,0x1
  410b9d:	cmp    r9d,ecx
  410ba0:	jg     0x410b50
  410ba2:	jmp    0x410b31
  410ba4:	mov    ebx,DWORD PTR [rsp+0x408]
  410bab:	test   ebx,ebx
  410bad:	jle    0x410cb4
  410bb3:	lea    rax,[rsp+0xb8]
  410bbb:	mov    r12,QWORD PTR [rip+0x2cd1e]        # 0x43d8e0
  410bc2:	xor    r15d,r15d
  410bc5:	mov    DWORD PTR [rsp+0x58],0x0
  410bcd:	mov    QWORD PTR [rsp+0x98],r14
  410bd5:	mov    QWORD PTR [rsp+0x68],rax
  410bda:	lea    rax,[rsp+0xc0]
  410be2:	mov    QWORD PTR [rsp+0x60],rax
  410be7:	lea    rax,[rsp+0x190]
  410bef:	mov    QWORD PTR [rsp+0x80],rax
  410bf7:	mov    rax,QWORD PTR [rsp+0x400]
  410bff:	mov    edx,0x3d
  410c04:	mov    rbx,QWORD PTR [rax+r15*1+0x8]
  410c09:	mov    rcx,rbx
  410c0c:	call   0x42fb00
  410c11:	test   rax,rax
  410c14:	je     0x4115eb
  410c1a:	mov    BYTE PTR [rax],0x0
  410c1d:	lea    r13,[rax+0x1]
  410c21:	mov    rax,QWORD PTR [rsp+0x400]
  410c29:	lea    rdi,[rip+0x251ea]        # 0x435e1a
  410c30:	mov    ecx,0xe
  410c35:	lea    rdx,[rax+r15*1]
  410c39:	mov    rsi,QWORD PTR [rdx+0x8]
  410c3d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410c3f:	jne    0x410c58
  410c41:	lea    rdi,[rip+0x25211]        # 0x435e59
  410c48:	mov    ecx,0x4
  410c4d:	mov    rsi,r13
  410c50:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410c52:	je     0x411197
  410c58:	mov    r9,QWORD PTR [rdx]
  410c5b:	movzx  ebx,BYTE PTR [r9]
  410c5f:	test   bl,bl
  410c61:	jne    0x410d46
  410c67:	mov    rsi,QWORD PTR [rsp+0xa8]
  410c6f:	lea    rcx,[rsi+0x498]
  410c76:	cmp    BYTE PTR [r13+0x0],0x0
  410c7b:	mov    rdx,QWORD PTR [rax+r15*1+0x8]
  410c80:	mov    r8d,0x0
  410c86:	cmovne r8,r13
  410c8a:	xor    r9d,r9d
  410c8d:	call   0x422808
  410c92:	add    DWORD PTR [rsp+0x58],0x1
  410c97:	add    r15,0x10
  410c9b:	mov    eax,DWORD PTR [rsp+0x58]
  410c9f:	cmp    eax,DWORD PTR [rsp+0x408]
  410ca6:	jl     0x410bf7
  410cac:	mov    r14,QWORD PTR [rsp+0x98]
  410cb4:	mov    rcx,r14
  410cb7:	call   0x408890
  410cbc:	lea    r8,[rip+0x24b1d]        # 0x4357e0
  410cc3:	xor    ecx,ecx
  410cc5:	mov    edx,0x30
  410cca:	call   0x4226c0
  410ccf:	mov    rsi,QWORD PTR [rsp+0x70]
  410cd4:	add    DWORD PTR [rsp+0x94],0x1
  410cdc:	mov    eax,DWORD PTR [rsp+0x94]
  410ce3:	add    QWORD PTR [rsp+0x78],0x48
  410ce9:	cmp    eax,DWORD PTR [rsi+0x10]
  410cec:	jl     0x40f09f
  410cf2:	mov    rax,QWORD PTR [rip+0x2cb77]        # 0x43d870
  410cf9:	mov    eax,DWORD PTR [rax]
  410cfb:	test   eax,eax
  410cfd:	jle    0x4110c0
  410d03:	xor    esi,esi
  410d05:	xor    ebx,ebx
  410d07:	mov    rbp,QWORD PTR [rip+0x2ca82]        # 0x43d790
  410d0e:	jmp    0x410d1f
  410d10:	add    ebx,0x1
  410d13:	add    rsi,0x8
  410d17:	cmp    ebx,eax
  410d19:	jge    0x4110c0
  410d1f:	mov    rdx,QWORD PTR [rbp+0x0]
  410d23:	mov    rcx,QWORD PTR [rdx+rsi*1]
  410d27:	cmp    QWORD PTR [rcx+0x10],0x0
  410d2c:	jne    0x410d10
  410d2e:	call   0x412f50
  410d33:	test   eax,eax
  410d35:	js     0x4116c8
  410d3b:	mov    rax,QWORD PTR [rip+0x2cb2e]        # 0x43d870
  410d42:	mov    eax,DWORD PTR [rax]
  410d44:	jmp    0x410d10
  410d46:	cmp    bl,0x67
  410d49:	je     0x410c67
  410d4f:	jle    0x4111f4
  410d55:	cmp    bl,0x70
  410d58:	je     0x411209
  410d5e:	cmp    bl,0x73
  410d61:	jne    0x4111f9
  410d67:	movzx  eax,BYTE PTR [r9+0x1]
  410d6c:	test   al,al
  410d6e:	je     0x41149b
  410d74:	cmp    al,0x3a
  410d76:	jne    0x411619
  410d7c:	lea    rax,[r9+0x2]
  410d80:	mov    QWORD PTR [rsp+0x50],rax
  410d85:	mov    rcx,QWORD PTR [rsp+0xa8]
  410d8d:	xor    ebp,ebp
  410d8f:	mov    eax,DWORD PTR [rcx+0x2c]
  410d92:	test   eax,eax
  410d94:	jne    0x410e1a
  410d9a:	jmp    0x410c92
  410d9f:	nop
  410da0:	mov    rax,QWORD PTR [rsp+0x400]
  410da8:	cmp    BYTE PTR [r13+0x0],0x0
  410dad:	mov    r8d,0x0
  410db3:	lea    rdi,[rip+0x2506e]        # 0x435e28
  410dba:	mov    rdx,QWORD PTR [rax+r15*1+0x8]
  410dbf:	mov    rax,QWORD PTR [rsp+0xa8]
  410dc7:	cmovne r8,r13
  410dcb:	xor    r9d,r9d
  410dce:	mov    rax,QWORD PTR [rax+0x30]
  410dd2:	mov    rcx,QWORD PTR [rax+rbp*8]
  410dd6:	add    rcx,0x60
  410dda:	call   0x422808
  410ddf:	mov    rax,QWORD PTR [rsp+0x400]
  410de7:	mov    ecx,0x7
  410dec:	mov    rsi,QWORD PTR [rax+r15*1+0x8]
  410df1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410df3:	jne    0x410e00
  410df5:	mov    DWORD PTR [r14+0x90],0x1
  410e00:	mov    rcx,QWORD PTR [rsp+0xa8]
  410e08:	add    ebx,0x1
  410e0b:	add    rbp,0x1
  410e0f:	mov    eax,DWORD PTR [rcx+0x2c]
  410e12:	cmp    eax,ebx
  410e14:	jbe    0x410c92
  410e1a:	mov    rsi,QWORD PTR [rip+0x2ca8f]        # 0x43d8b0
  410e21:	mov    r8,QWORD PTR [rsp+0x50]
  410e26:	mov    ebx,ebp
  410e28:	mov    edi,DWORD PTR [rsi]
  410e2a:	mov    esi,edi
  410e2c:	mov    DWORD PTR [rsp+0x40],edi
  410e30:	sub    esi,eax
  410e32:	mov    rax,QWORD PTR [r12]
  410e36:	lea    edx,[rsi+rbp*1]
  410e39:	mov    r14,QWORD PTR [rax+rdx*8]
  410e3d:	mov    rax,QWORD PTR [rcx+0x30]
  410e41:	mov    rdx,QWORD PTR [rax+rbp*8]
  410e45:	call   0x4075b0
  410e4a:	cmp    eax,0x0
  410e4d:	jg     0x410da0
  410e53:	je     0x410e00
  410e55:	jmp    0x40f4c7
  410e5a:	nop    WORD PTR [rax+rax*1+0x0]
  410e60:	mov    eax,DWORD PTR [rsi+0x160]
  410e66:	test   eax,eax
  410e68:	jne    0x41042a
  410e6e:	mov    rdx,rbx
  410e71:	mov    rcx,rdi
  410e74:	call   0x412740
  410e79:	mov    rdx,QWORD PTR [rdi+0x8]
  410e7d:	jmp    0x41042a
  410e82:	lea    r9,[rip+0x26c37]        # 0x437ac0
  410e89:	lea    r8,[rip+0x24a41]        # 0x4358d1
  410e90:	lea    rdx,[rip+0x23653]        # 0x4344ea
  410e97:	mov    rcx,r14
  410e9a:	call   0x402ef0
  410e9f:	test   eax,eax
  410ea1:	jns    0x4102c6
  410ea7:	mov    edx,eax
  410ea9:	mov    rcx,QWORD PTR [rsp+0x50]
  410eae:	call   0x4054b0
  410eb3:	jmp    0x40f4c7
  410eb8:	xor    eax,eax
  410eba:	mov    DWORD PTR [rsp+0x3b4],eax
  410ec1:	mov    r9d,eax
  410ec4:	test   r9d,r9d
  410ec7:	js     0x40fef8
  410ecd:	mov    rdx,QWORD PTR [rip+0x2c90c]        # 0x43d7e0
  410ed4:	mov    eax,DWORD PTR [rsp+0x3a4]
  410edb:	mov    r8d,0x8
  410ee1:	mov    r12,QWORD PTR [rsp+0x58]
  410ee6:	mov    rdx,QWORD PTR [rdx]
  410ee9:	mov    DWORD PTR [rsp+0x80],eax
  410ef0:	movsxd rax,r9d
  410ef3:	mov    rdi,QWORD PTR [r12]
  410ef7:	mov    rax,QWORD PTR [rdx+rax*8]
  410efb:	mov    rcx,QWORD PTR [rdi+0x490]
  410f02:	mov    rbp,QWORD PTR [rax]
  410f05:	mov    QWORD PTR [rsp+0x50],rax
  410f0a:	mov    edx,DWORD PTR [rbp+0x48c]
  410f10:	add    edx,DWORD PTR [rdi+0x48c]
  410f16:	call   0x4225b0
  410f1b:	test   rax,rax
  410f1e:	je     0x40fef8
  410f24:	mov    QWORD PTR [rdi+0x490],rax
  410f2b:	mov    eax,DWORD PTR [rbp+0x48c]
  410f31:	test   eax,eax
  410f33:	mov    DWORD PTR [rsp+0x40],eax
  410f37:	je     0x40fef8
  410f3d:	xor    esi,esi
  410f3f:	mov    QWORD PTR [rsp+0x68],r14
  410f44:	jmp    0x41101a
  410f49:	nop    DWORD PTR [rax+0x0]
  410f50:	movabs rdx,0xf424000000000
  410f5a:	mov    r8,r15
  410f5d:	or     rdx,0x1
  410f61:	call   0x422588
  410f66:	cmp    r14,QWORD PTR [rbx+0x18]
  410f6a:	mov    r15,rax
  410f6d:	jg     0x411009
  410f73:	cmp    rax,r13
  410f76:	je     0x411084
  410f7c:	lea    rax,[r14+rax*1]
  410f80:	cmp    QWORD PTR [rbx+0x10],rax
  410f84:	jg     0x41112d
  410f8a:	mov    ecx,0x28
  410f8f:	call   0x422670
  410f94:	test   rax,rax
  410f97:	mov    r13,rax
  410f9a:	je     0x41112d
  410fa0:	mov    eax,DWORD PTR [rbx]
  410fa2:	mov    ecx,0x0
  410fa7:	mov    DWORD PTR [r13+0x0],eax
  410fab:	mov    rax,QWORD PTR [rbx+0x4]
  410faf:	mov    QWORD PTR [r13+0x4],rax
  410fb3:	mov    rax,QWORD PTR [rbx+0x10]
  410fb7:	sub    rax,r14
  410fba:	cmovs  rax,rcx
  410fbe:	mov    QWORD PTR [r13+0x10],rax
  410fc2:	mov    rax,QWORD PTR [rbx+0x18]
  410fc6:	sub    rax,r14
  410fc9:	mov    r14d,DWORD PTR [rsp+0x80]
  410fd1:	cmp    r15,rax
  410fd4:	cmovle rax,r15
  410fd8:	test   r14d,r14d
  410fdb:	mov    QWORD PTR [r13+0x18],rax
  410fdf:	je     0x411093
  410fe5:	mov    eax,DWORD PTR [rdi+0x48c]
  410feb:	mov    rdx,QWORD PTR [rdi+0x490]
  410ff2:	lea    ecx,[rax+0x1]
  410ff5:	mov    DWORD PTR [rdi+0x48c],ecx
  410ffb:	mov    QWORD PTR [rdx+rax*8],r13
  410fff:	mov    eax,DWORD PTR [rbp+0x48c]
  411005:	mov    DWORD PTR [rsp+0x40],eax
  411009:	lea    eax,[rsi+0x1]
  41100c:	add    rsi,0x1
  411010:	cmp    eax,DWORD PTR [rsp+0x40]
  411014:	jae    0x41112d
  41101a:	mov    rax,QWORD PTR [rbp+0x490]
  411021:	mov    rcx,QWORD PTR [r12+0x20]
  411026:	movabs rdx,0xf424000000000
  411030:	movabs r13,0x7fffffffffffffff
  41103a:	mov    rbx,QWORD PTR [rax+rsi*8]
  41103e:	movabs rax,0x8000000000000000
  411048:	cmp    rcx,rax
  41104b:	mov    eax,0x0
  411050:	cmove  rcx,rax
  411054:	mov    rax,QWORD PTR [rsp+0x50]
  411059:	or     rdx,0x1
  41105d:	mov    r15,QWORD PTR [rbx+0x4]
  411061:	sub    rcx,QWORD PTR [rax+0x20]
  411065:	mov    r8,r15
  411068:	call   0x422588
  41106d:	mov    rcx,QWORD PTR [r12+0x18]
  411072:	mov    r14,rax
  411075:	cmp    rcx,r13
  411078:	jne    0x410f50
  41107e:	cmp    rax,QWORD PTR [rbx+0x18]
  411082:	jg     0x411009
  411084:	movabs r15,0x7fffffffffffffff
  41108e:	jmp    0x410f8a
  411093:	mov    rdx,QWORD PTR [rbx+0x20]
  411097:	lea    rcx,[r13+0x20]
  41109b:	xor    r8d,r8d
  41109e:	call   0x422828
  4110a3:	jmp    0x410fe5
  4110a8:	mov    rax,QWORD PTR [rsp+0x138]
  4110b0:	mov    edx,DWORD PTR [rax+0x10]
  4110b3:	mov    QWORD PTR [rsp+0x70],rax
  4110b8:	test   edx,edx
  4110ba:	jg     0x40f071
  4110c0:	mov    rcx,QWORD PTR [rsp+0x48]
  4110c5:	xor    edi,edi
  4110c7:	call   0x404370
  4110cc:	jmp    0x40efb3
  4110d1:	xor    edx,edx
  4110d3:	jmp    0x410966
  4110d8:	xor    ebx,ebx
  4110da:	jmp    0x4100aa
  4110df:	mov    r9d,DWORD PTR [rdx+0xa8]
  4110e6:	mov    r8,rbx
  4110e9:	mov    rcx,rdi
  4110ec:	call   0x412140
  4110f1:	mov    rdx,QWORD PTR [rdi+0x8]
  4110f5:	jmp    0x41042a
  4110fa:	mov    r8,QWORD PTR [rax]
  4110fd:	lea    r9,[rip+0x269bc]        # 0x437ac0
  411104:	lea    rdx,[rip+0x22e51]        # 0x433f5c
  41110b:	mov    rcx,r14
  41110e:	call   0x402ef0
  411113:	mov    r8d,DWORD PTR [rbx+0x10]
  411117:	jmp    0x410380
  41111c:	mov    rax,QWORD PTR [rip+0x2c75d]        # 0x43d880
  411123:	mov    QWORD PTR [rsp+0x60],rax
  411128:	jmp    0x40fe82
  41112d:	mov    r14,QWORD PTR [rsp+0x68]
  411132:	jmp    0x40fef8
  411137:	mov    edi,eax
  411139:	mov    rax,QWORD PTR [rsi+0x8]
  41113d:	lea    r9,[rip+0x24701]        # 0x435845
  411144:	lea    r8,[rip+0x24635]        # 0x435780
  41114b:	xor    ecx,ecx
  41114d:	mov    edx,0x10
  411152:	mov    r13,r14
  411155:	mov    QWORD PTR [rsp+0x20],rax
  41115a:	call   0x4226c0
  41115f:	lea    r8,[rip+0x246e6]        # 0x43584c
  411166:	mov    edx,0x8
  41116b:	xor    ecx,ecx
  41116d:	call   0x4226c0
  411172:	jmp    0x40ef82
  411177:	lea    rcx,[rbp+0x2]
  41117b:	xor    r8d,r8d
  41117e:	xor    edx,edx
  411180:	mov    DWORD PTR [rsp+0x50],r11d
  411185:	call   0x42faa8
  41118a:	movsxd r11,DWORD PTR [rsp+0x50]
  41118f:	movsxd r9,eax
  411192:	jmp    0x4106be
  411197:	xor    ecx,ecx
  411199:	call   QWORD PTR [rip+0x33e29]        # 0x444fc8
  41119f:	mov    rdx,QWORD PTR [rsp+0x68]
  4111a4:	mov    QWORD PTR [rsp+0xb8],rax
  4111ac:	mov    rcx,QWORD PTR [rsp+0x60]
  4111b1:	call   QWORD PTR [rip+0x20069]        # 0x431220
  4111b7:	test   eax,eax
  4111b9:	jne    0x4111e3
  4111bb:	mov    rsi,QWORD PTR [rsp+0x80]
  4111c3:	mov    r9,QWORD PTR [rsp+0x60]
  4111c8:	lea    r8,[rip+0x24d54]        # 0x435f23
  4111cf:	mov    edx,0x100
  4111d4:	mov    rcx,rsi
  4111d7:	call   0x42fae0
  4111dc:	test   rax,rax
  4111df:	cmovne r13,rsi
  4111e3:	mov    rax,QWORD PTR [rsp+0x400]
  4111eb:	lea    rdx,[rax+r15*1]
  4111ef:	jmp    0x410c58
  4111f4:	cmp    bl,0x63
  4111f7:	je     0x411209
  4111f9:	movsx  r9d,bl
  4111fd:	lea    r8,[rip+0x24b14]        # 0x435d18
  411204:	jmp    0x4105f1
  411209:	cmp    BYTE PTR [r9+0x1],0x3a
  41120e:	je     0x4114dc
  411214:	cmp    bl,0x63
  411217:	je     0x4114ac
  41121d:	cmp    bl,0x67
  411220:	je     0x410c67
  411226:	mov    r9,QWORD PTR [rax+r15*1]
  41122a:	lea    r8,[rip+0x24ac7]        # 0x435cf8
  411231:	jmp    0x40f4bb
  411236:	mov    rax,QWORD PTR [rip+0x2c5a3]        # 0x43d7e0
  41123d:	mov    r8d,0x10
  411243:	mov    rax,QWORD PTR [rax]
  411246:	mov    rax,QWORD PTR [rax]
  411249:	mov    rax,QWORD PTR [rax]
  41124c:	mov    rdx,QWORD PTR [rax+0x498]
  411253:	mov    rax,QWORD PTR [rsp+0xa8]
  41125b:	lea    rcx,[rax+0x498]
  411262:	call   0x422828
  411267:	movabs rax,0x7fffffffffffffff
  411271:	cmp    QWORD PTR [rsp+0x3b8],rax
  411279:	je     0x41129c
  41127b:	mov    rax,QWORD PTR [rsp+0xa8]
  411283:	lea    rdx,[rip+0x24b87]        # 0x435e11
  41128a:	xor    r9d,r9d
  41128d:	xor    r8d,r8d
  411290:	lea    rcx,[rax+0x498]
  411297:	call   0x422808
  41129c:	mov    rax,QWORD PTR [rsp+0xa8]
  4112a4:	lea    rdx,[rip+0x24b6f]        # 0x435e1a
  4112ab:	xor    r9d,r9d
  4112ae:	xor    r8d,r8d
  4112b1:	lea    rcx,[rax+0x498]
  4112b8:	call   0x422808
  4112bd:	jmp    0x40ff12
  4112c2:	mov    rdx,QWORD PTR [rsp+0xa8]
  4112ca:	mov    rcx,QWORD PTR [rsp+0x40]
  4112cf:	mov    r9d,r8d
  4112d2:	mov    r8d,0xffffffff
  4112d8:	call   0x40a7d0
  4112dd:	mov    r11d,DWORD PTR [rax+0x160]
  4112e4:	test   r11d,r11d
  4112e7:	jne    0x40f4e8
  4112ed:	lea    r8,[rip+0x24654]        # 0x435948
  4112f4:	jmp    0x410876
  4112f9:	nop    DWORD PTR [rax+0x0]
  411300:	mov    rax,QWORD PTR [rsp+0x3a8]
  411308:	lea    r8,[rip+0x24799]        # 0x435aa8
  41130f:	mov    r9,QWORD PTR [rax+rbx*1]
  411313:	jmp    0x40f4bb
  411318:	mov    rax,QWORD PTR [rsp+0x3a8]
  411320:	lea    r8,[rip+0x24751]        # 0x435a78
  411327:	mov    r9,QWORD PTR [rax+rbx*1]
  41132b:	jmp    0x40f4bb
  411330:	mov    rax,QWORD PTR [rsp+0x3a8]
  411338:	lea    r8,[rip+0x24711]        # 0x435a50
  41133f:	mov    r9,QWORD PTR [rax+rbx*1]
  411343:	jmp    0x40f4bb
  411348:	mov    rax,QWORD PTR [rsp+0xc0]
  411350:	lea    r8,[rip+0x24591]        # 0x4358e8
  411357:	mov    edx,0x10
  41135c:	mov    rcx,r12
  41135f:	mov    rax,QWORD PTR [rax+0x30]
  411363:	mov    rax,QWORD PTR [rax+r15*1]
  411367:	mov    rax,QWORD PTR [rax+0x8]
  41136b:	mov    r9d,DWORD PTR [rax+0x38]
  41136f:	call   0x4226c0
  411374:	mov    edx,0xffffffea
  411379:	jmp    0x410ea9
  41137e:	mov    rcx,QWORD PTR [rsp+0x68]
  411383:	call   0x422238
  411388:	mov    rax,QWORD PTR [rip+0x2c521]        # 0x43d8b0
  41138f:	mov    rcx,QWORD PTR [rsp+0xa8]
  411397:	mov    eax,DWORD PTR [rax]
  411399:	mov    edx,DWORD PTR [rcx+0x2c]
  41139c:	mov    ebp,eax
  41139e:	sub    ebp,edx
  4113a0:	cmp    eax,ebp
  4113a2:	jle    0x4115d5
  4113a8:	mov    rbx,QWORD PTR [rip+0x2c531]        # 0x43d8e0
  4113af:	mov    rdi,QWORD PTR [rip+0x2c4da]        # 0x43d890
  4113b6:	movsxd r12,ebp
  4113b9:	mov    r13,QWORD PTR [rip+0x2c430]        # 0x43d7f0
  4113c0:	shl    r12,0x3
  4113c4:	mov    r8d,DWORD PTR [rdi]
  4113c7:	mov    rax,QWORD PTR [rbx]
  4113ca:	test   r8d,r8d
  4113cd:	mov    r15,QWORD PTR [rax+r12*1]
  4113d1:	jle    0x41141d
  4113d3:	mov    rax,QWORD PTR [r13+0x0]
  4113d7:	mov    r10,QWORD PTR [r15+0x10]
  4113db:	mov    rsi,QWORD PTR [rax]
  4113de:	mov    rdx,QWORD PTR [r10+0x8]
  4113e2:	mov    r9d,DWORD PTR [rdx+0xc]
  4113e6:	mov    rdx,QWORD PTR [rsi+0x8]
  4113ea:	mov    rdx,QWORD PTR [rdx+0x8]
  4113ee:	cmp    DWORD PTR [rdx+0xc],r9d
  4113f2:	je     0x41143f
  4113f4:	add    rax,0x8
  4113f8:	xor    edx,edx
  4113fa:	jmp    0x411415
  4113fc:	nop    DWORD PTR [rax+0x0]
  411400:	mov    rsi,QWORD PTR [rax]
  411403:	add    rax,0x8
  411407:	mov    rcx,QWORD PTR [rsi+0x8]
  41140b:	mov    rcx,QWORD PTR [rcx+0x8]
  41140f:	cmp    DWORD PTR [rcx+0xc],r9d
  411413:	je     0x411441
  411415:	add    edx,0x1
  411418:	cmp    edx,r8d
  41141b:	jne    0x411400
  41141d:	cmp    QWORD PTR [r15+0x20],0x0
  411422:	je     0x4115fa
  411428:	mov    rax,QWORD PTR [rip+0x2c481]        # 0x43d8b0
  41142f:	add    ebp,0x1
  411432:	add    r12,0x8
  411436:	cmp    ebp,DWORD PTR [rax]
  411438:	jl     0x4113c4
  41143a:	jmp    0x40f534
  41143f:	xor    edx,edx
  411441:	cmp    r9d,0x1
  411445:	mov    QWORD PTR [r15+0x20],rsi
  411449:	mov    DWORD PTR [r15+0x8],edx
  41144d:	je     0x411482
  41144f:	mov    rax,QWORD PTR [r10+0x8]
  411453:	mov    eax,DWORD PTR [rax+0xc]
  411456:	test   eax,eax
  411458:	je     0x41146d
  41145a:	mov    rax,QWORD PTR [rsi+0x8]
  41145e:	mov    edx,DWORD PTR [rsi+0x14]
  411461:	mov    DWORD PTR [rsi+0x10],0x0
  411468:	mov    DWORD PTR [rax+0x54],edx
  41146b:	jmp    0x41141d
  41146d:	lea    rcx,[rip+0x2379a]        # 0x434c0e
  411474:	call   0x422578
  411479:	mov    QWORD PTR [r15+0x110],rax
  411480:	jmp    0x41145a
  411482:	lea    rcx,[rip+0x2378a]        # 0x434c13
  411489:	call   0x422578
  41148e:	mov    r10,QWORD PTR [r15+0x10]
  411492:	mov    QWORD PTR [r15+0x110],rax
  411499:	jmp    0x41144f
  41149b:	lea    rax,[rip+0x22b3c]        # 0x433fde
  4114a2:	mov    QWORD PTR [rsp+0x50],rax
  4114a7:	jmp    0x410d85
  4114ac:	xor    r9d,r9d
  4114af:	mov    rax,QWORD PTR [rsp+0xa8]
  4114b7:	cmp    r9d,DWORD PTR [rax+0x48c]
  4114be:	jae    0x411515
  4114c0:	mov    rax,QWORD PTR [rax+0x490]
  4114c7:	mov    rcx,QWORD PTR [rax+r9*8]
  4114cb:	mov    rax,QWORD PTR [rsp+0x400]
  4114d3:	add    rcx,0x20
  4114d7:	jmp    0x410c76
  4114dc:	lea    rcx,[r9+0x2]
  4114e0:	xor    r8d,r8d
  4114e3:	xor    edx,edx
  4114e5:	call   0x42faa8
  4114ea:	cmp    bl,0x63
  4114ed:	movsxd r9,eax
  4114f0:	je     0x411510
  4114f2:	cmp    bl,0x67
  4114f5:	mov    rax,QWORD PTR [rsp+0x400]
  4114fd:	jne    0x411226
  411503:	jmp    0x410c67
  411508:	nop    DWORD PTR [rax+rax*1+0x0]
  411510:	test   r9d,r9d
  411513:	jns    0x4114af
  411515:	lea    r8,[rip+0x24944]        # 0x435e60
  41151c:	jmp    0x4105f1
  411521:	add    r9,0x2
  411525:	lea    r8,[rip+0x247cc]        # 0x435cf8
  41152c:	jmp    0x40f4bb
  411531:	lea    r8,[rip+0x24368]        # 0x4358a0
  411538:	mov    edx,0x10
  41153d:	call   0x4226c0
  411542:	mov    ecx,0x1
  411547:	call   0x401cb0
  41154c:	mov    rax,QWORD PTR [rip+0x2c34d]        # 0x43d8a0
  411553:	lea    r8,[rcx+0x38]
  411557:	mov    r9d,0x1
  41155d:	mov    eax,DWORD PTR [rax]
  41155f:	lea    edx,[rax-0x1]
  411562:	mov    DWORD PTR [rsp+0x40],eax
  411566:	call   0x4222f8
  41156b:	mov    rax,QWORD PTR [rip+0x2c32e]        # 0x43d8a0
  411572:	lea    r8,[rip+0x2455f]        # 0x435ad8
  411579:	xor    ecx,ecx
  41157b:	mov    edx,0x10
  411580:	mov    r9d,DWORD PTR [rax]
  411583:	sub    r9d,0x1
  411587:	call   0x4226c0
  41158c:	mov    ecx,0x1
  411591:	call   0x401cb0
  411596:	lea    r9,[rip+0x24796]        # 0x435d33
  41159d:	mov    DWORD PTR [rsp+0x20],r11d
  4115a2:	lea    r8,[rip+0x24797]        # 0x435d40
  4115a9:	mov    edx,0x8
  4115ae:	xor    ecx,ecx
  4115b0:	call   0x4226c0
  4115b5:	jmp    0x40f4c7
  4115ba:	lea    r8,[rip+0x2481f]        # 0x435de0
  4115c1:	jmp    0x4105f1
  4115c6:	mov    r9d,eax
  4115c9:	lea    r8,[rip+0x246e8]        # 0x435cb8
  4115d0:	jmp    0x4105f1
  4115d5:	mov    r8d,DWORD PTR [rsp+0x3b0]
  4115dd:	test   r8d,r8d
  4115e0:	jg     0x40f543
  4115e6:	jmp    0x40f75f
  4115eb:	mov    r9,rbx
  4115ee:	lea    r8,[rip+0x2483b]        # 0x435e30
  4115f5:	jmp    0x40f4bb
  4115fa:	mov    rax,QWORD PTR [r15+0x10]
  4115fe:	mov    rax,QWORD PTR [rax+0x8]
  411602:	mov    ecx,DWORD PTR [rax+0xc]
  411605:	call   0x422718
  41160a:	lea    r8,[rip+0x242ff]        # 0x435910
  411611:	mov    r9,rax
  411614:	jmp    0x40f4bb
  411619:	add    r9,0x1
  41161d:	lea    r8,[rip+0x246d4]        # 0x435cf8
  411624:	jmp    0x40f4bb
  411629:	xor    edx,edx
  41162b:	xor    r8d,r8d
  41162e:	mov    ecx,0x1
  411633:	mov    BYTE PTR [rsp+0x50],0x1
  411638:	xor    r9d,r9d
  41163b:	jmp    0x40fd4b
  411640:	lea    r9,[rbp+0x1]
  411644:	jmp    0x411525
  411649:	lea    r8,[rip+0x24620]        # 0x435c70
  411650:	xor    ecx,ecx
  411652:	mov    edx,0x10
  411657:	call   0x4226c0
  41165c:	mov    ecx,0x1
  411661:	call   0x401cb0
  411666:	mov    DWORD PTR [rsp+0x20],r9d
  41166b:	lea    r9,[rip+0x24703]        # 0x435d75
  411672:	jmp    0x4115a2
  411677:	mov    rax,QWORD PTR [rip+0x2c222]        # 0x43d8a0
  41167e:	lea    rcx,[rip+0x22959]        # 0x433fde
  411685:	mov    rsi,QWORD PTR [rsp+0x50]
  41168a:	lea    r8,[rip+0x24477]        # 0x435b08
  411691:	mov    edx,DWORD PTR [rax]
  411693:	mov    rax,QWORD PTR [r14+0x8]
  411697:	mov    QWORD PTR [rsp+0x30],rsi
  41169c:	sub    edx,0x1
  41169f:	test   rax,rax
  4116a2:	cmove  rax,rcx
  4116a6:	mov    DWORD PTR [rsp+0x28],edx
  4116aa:	xor    ecx,ecx
  4116ac:	mov    QWORD PTR [rsp+0x20],rax
  4116b1:	mov    r9,QWORD PTR [rbx]
  4116b4:	mov    edx,0x10
  4116b9:	call   0x4226c0
  4116be:	mov    ecx,0x1
  4116c3:	call   0x401cb0
  4116c8:	lea    r8,[rip+0x247c9]        # 0x435e98
  4116cf:	mov    edx,0x8
  4116d4:	xor    ecx,ecx
  4116d6:	mov    edi,eax
  4116d8:	lea    r13,[rsp+0x290]
  4116e0:	call   0x4226c0
  4116e5:	jmp    0x40ef82
  4116ea:	mov    DWORD PTR [rsp+0x20],r11d
  4116ef:	jmp    0x41166b
  4116f4:	mov    DWORD PTR [rsp+0x20],r9d
  4116f9:	lea    r9,[rip+0x24633]        # 0x435d33
  411700:	jmp    0x4115a2
  411705:	lea    rcx,[rax+0x38]
  411709:	mov    edx,0xffffffea
  41170e:	call   0x4054b0
  411713:	mov    ecx,0x1
  411718:	call   0x401cb0
  41171d:	nop
  41171e:	nop
  41171f:	nop
  411720:	sub    rsp,0x38
  411724:	mov    QWORD PTR [rsp+0x58],r9
  411729:	lea    r9,[rsp+0x58]
  41172e:	mov    QWORD PTR [rsp+0x28],r9
  411733:	call   0x427320
  411738:	add    rsp,0x38
  41173c:	ret    
  41173d:	nop    DWORD PTR [rax]
  411740:	push   r13
  411742:	push   r12
  411744:	push   rbp
  411745:	push   rdi
  411746:	push   rsi
  411747:	push   rbx
  411748:	sub    rsp,0x28
  41174c:	mov    rax,QWORD PTR [r8]
  41174f:	lea    rsi,[rip+0x27daa]        # 0x439500
  411756:	mov    rbx,rdx
  411759:	mov    r12,rcx
  41175c:	mov    edx,DWORD PTR [r9]
  41175f:	mov    rdi,r8
  411762:	mov    rbp,r9
  411765:	mov    rcx,QWORD PTR [rax+0x30]
  411769:	mov    r13,QWORD PTR [rax+0x50]
  41176d:	call   0x422070
  411772:	test   eax,eax
  411774:	lea    rax,[rip+0x27d8a]        # 0x439505
  41177b:	cmovne rsi,rax
  41177f:	movabs rax,0x7fffffffffffffff
  411789:	cmp    rbx,rax
  41178c:	jne    0x4117b0
  41178e:	movabs rax,0x8000000000000000
  411798:	xor    r10d,r10d
  41179b:	cmp    r12,rax
  41179e:	jne    0x4117b0
  4117a0:	mov    eax,r10d
  4117a3:	add    rsp,0x28
  4117a7:	pop    rbx
  4117a8:	pop    rsi
  4117a9:	pop    rdi
  4117aa:	pop    rbp
  4117ab:	pop    r12
  4117ad:	pop    r13
  4117af:	ret    
  4117b0:	mov    rcx,rsi
  4117b3:	call   0x422108
  4117b8:	test   rax,rax
  4117bb:	je     0x4118c8
  4117c1:	mov    r8,QWORD PTR [rsp+0x80]
  4117c9:	mov    rcx,r13
  4117cc:	mov    rdx,rax
  4117cf:	call   0x4220f0
  4117d4:	test   rax,rax
  4117d7:	mov    r13,rax
  4117da:	je     0x4118e9
  4117e0:	movabs rax,0x7fffffffffffffff
  4117ea:	cmp    rbx,rax
  4117ed:	je     0x411870
  4117f3:	lea    rdx,[rip+0x27d4b]        # 0x439545
  4117fa:	mov    r8,rbx
  4117fd:	mov    r9d,0x1
  411803:	mov    rcx,r13
  411806:	call   0x422608
  41180b:	test   eax,eax
  41180d:	mov    ebx,eax
  41180f:	js     0x411820
  411811:	movabs rax,0x8000000000000000
  41181b:	cmp    r12,rax
  41181e:	jne    0x41187f
  411820:	test   ebx,ebx
  411822:	js     0x4118a0
  411824:	xor    edx,edx
  411826:	mov    rcx,r13
  411829:	call   0x4220a8
  41182e:	test   eax,eax
  411830:	mov    r10d,eax
  411833:	js     0x4117a0
  411839:	mov    edx,DWORD PTR [rbp+0x0]
  41183c:	mov    rcx,QWORD PTR [rdi]
  41183f:	xor    r9d,r9d
  411842:	mov    r8,r13
  411845:	call   0x422098
  41184a:	test   eax,eax
  41184c:	js     0x4118c0
  41184e:	xor    r10d,r10d
  411851:	mov    QWORD PTR [rdi],r13
  411854:	mov    DWORD PTR [rbp+0x0],0x0
  41185b:	mov    eax,r10d
  41185e:	add    rsp,0x28
  411862:	pop    rbx
  411863:	pop    rsi
  411864:	pop    rdi
  411865:	pop    rbp
  411866:	pop    r12
  411868:	pop    r13
  41186a:	ret    
  41186b:	nop    DWORD PTR [rax+rax*1+0x0]
  411870:	movabs rax,0x8000000000000000
  41187a:	cmp    r12,rax
  41187d:	je     0x411824
  41187f:	lea    rdx,[rip+0x27cc9]        # 0x43954f
  411886:	mov    r9d,0x1
  41188c:	mov    r8,r12
  41188f:	mov    rcx,r13
  411892:	call   0x422608
  411897:	mov    ebx,eax
  411899:	jmp    0x411820
  41189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4118a0:	lea    r8,[rip+0x27cb1]        # 0x439558
  4118a7:	mov    r9,rsi
  4118aa:	mov    edx,0x10
  4118af:	mov    rcx,r13
  4118b2:	call   0x4226c0
  4118b7:	mov    r10d,ebx
  4118ba:	jmp    0x4117a0
  4118bf:	nop
  4118c0:	mov    r10d,eax
  4118c3:	jmp    0x4117a0
  4118c8:	lea    r8,[rip+0x27c41]        # 0x439510
  4118cf:	mov    r9,rsi
  4118d2:	mov    edx,0x10
  4118d7:	xor    ecx,ecx
  4118d9:	call   0x4226c0
  4118de:	mov    r10d,0xb3b6b908
  4118e4:	jmp    0x4117a0
  4118e9:	mov    r10d,0xfffffff4
  4118ef:	jmp    0x4117a0
  4118f4:	xchg   ax,ax
  4118f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411900:	sub    rsp,0x38
  411904:	mov    edx,0x10
  411909:	mov    QWORD PTR [rsp+0x58],r9
  41190e:	lea    r9,[rsp+0x58]
  411913:	mov    QWORD PTR [rsp+0x28],r9
  411918:	call   0x427320
  41191d:	add    rsp,0x38
  411921:	ret    
  411922:	nop    DWORD PTR [rax+0x0]
  411926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411930:	sub    rsp,0x38
  411934:	mov    edx,0xff
  411939:	mov    QWORD PTR [rsp+0x58],r9
  41193e:	lea    r9,[rsp+0x58]
  411943:	mov    QWORD PTR [rsp+0x28],r9
  411948:	call   0x427320
  41194d:	add    rsp,0x38
  411951:	ret    
  411952:	nop    DWORD PTR [rax+0x0]
  411956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411960:	push   r15
  411962:	push   r14
  411964:	push   r13
  411966:	push   r12
  411968:	push   rbp
  411969:	push   rdi
  41196a:	push   rsi
  41196b:	push   rbx
  41196c:	sub    rsp,0x588
  411973:	mov    rsi,QWORD PTR [rdx+0x8]
  411977:	mov    r12,rdx
  41197a:	mov    rdx,QWORD PTR [rip+0x2bf4f]        # 0x43d8d0
  411981:	mov    r13,rcx
  411984:	lea    rbp,[rsp+0x80]
  41198c:	movsxd rcx,DWORD PTR [rsi]
  41198f:	mov    rdi,QWORD PTR [rsi+0x48]
  411993:	mov    rdx,QWORD PTR [rdx]
  411996:	mov    r14,QWORD PTR [rdx+rcx*8]
  41199a:	mov    edx,DWORD PTR [rsi+0x4]
  41199d:	mov    QWORD PTR [rsp+0x50],r8
  4119a2:	lea    r8,[rip+0x27bcf]        # 0x439578
  4119a9:	mov    DWORD PTR [rsp+0x4c],r9d
  4119ae:	mov    r9d,ecx
  4119b1:	mov    rcx,rbp
  4119b4:	mov    DWORD PTR [rsp+0x20],edx
  4119b8:	mov    edx,0xff
  4119bd:	call   0x411930
  4119c2:	mov    rbx,QWORD PTR [r13+0x0]
  4119c6:	lea    rcx,[rip+0x27bbf]        # 0x43958c
  4119cd:	call   0x422108
  4119d2:	xor    r9d,r9d
  4119d5:	mov    QWORD PTR [rsp+0x28],rbx
  4119da:	mov    QWORD PTR [rsp+0x20],0x0
  4119e3:	mov    r8,rbp
  4119e6:	mov    rdx,rax
  4119e9:	mov    rcx,r12
  4119ec:	call   0x4220e0
  4119f1:	test   eax,eax
  4119f3:	js     0x411da0
  4119f9:	mov    rcx,QWORD PTR [r12]
  4119fd:	lea    rdx,[rip+0x27b94]        # 0x439598
  411a04:	mov    r9d,0x1
  411a0a:	mov    r8d,0x1
  411a10:	call   0x422608
  411a15:	test   eax,eax
  411a17:	js     0x411da0
  411a1d:	mov    r11d,DWORD PTR [rsi+0xf0]
  411a24:	test   r11d,r11d
  411a27:	jne    0x411f53
  411a2d:	mov    ecx,DWORD PTR [rdi+0x1d4]
  411a33:	test   ecx,ecx
  411a35:	je     0x411a45
  411a37:	cmp    QWORD PTR [rdi+0x1f0],0x0
  411a3f:	je     0x412090
  411a45:	mov    rdx,QWORD PTR [rsi+0x48]
  411a49:	mov    ecx,DWORD PTR [rdx+0x1d8]
  411a4f:	cmp    ecx,0xffffffff
  411a52:	jne    0x4120a1
  411a58:	mov    rax,QWORD PTR [rsi+0x50]
  411a5c:	test   rax,rax
  411a5f:	je     0x412124
  411a65:	cmp    QWORD PTR [rax+0x38],0x0
  411a6a:	je     0x412124
  411a70:	lea    rcx,[rsp+0x68]
  411a75:	mov    QWORD PTR [rsp+0x68],0x0
  411a7e:	call   0x422180
  411a83:	test   eax,eax
  411a85:	js     0x41212b
  411a8b:	mov    rax,QWORD PTR [rsi+0x50]
  411a8f:	mov    rbx,QWORD PTR [rax+0x38]
  411a93:	mov    ecx,DWORD PTR [rbx]
  411a95:	cmp    ecx,0xffffffff
  411a98:	je     0x411ac4
  411a9a:	nop    WORD PTR [rax+rax*1+0x0]
  411aa0:	call   0x4226f0
  411aa5:	mov    rcx,QWORD PTR [rsp+0x68]
  411aaa:	lea    rdx,[rip+0x27b51]        # 0x439602
  411ab1:	add    rbx,0x4
  411ab5:	mov    r8,rax
  411ab8:	call   0x422178
  411abd:	mov    ecx,DWORD PTR [rbx]
  411abf:	cmp    ecx,0xffffffff
  411ac2:	jne    0x411aa0
  411ac4:	lea    rbx,[rsp+0x180]
  411acc:	mov    rcx,QWORD PTR [rsp+0x68]
  411ad1:	mov    rdx,rbx
  411ad4:	call   0x4221b8
  411ad9:	mov    rdx,QWORD PTR [rsp+0x180]
  411ae1:	cdqe   
  411ae3:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
  411ae8:	mov    rax,QWORD PTR [rsp+0x180]
  411af0:	mov    rdx,QWORD PTR [rsi+0x48]
  411af4:	mov    r9d,DWORD PTR [rdx+0x1d0]
  411afb:	mov    QWORD PTR [rsp+0x58],rax
  411b00:	test   r9d,r9d
  411b03:	jne    0x4120f0
  411b09:	mov    rax,QWORD PTR [rsi+0x50]
  411b0d:	test   rax,rax
  411b10:	je     0x41211d
  411b16:	cmp    QWORD PTR [rax+0x30],0x0
  411b1b:	je     0x41211d
  411b21:	lea    rcx,[rsp+0x70]
  411b26:	mov    QWORD PTR [rsp+0x70],0x0
  411b2f:	call   0x422180
  411b34:	test   eax,eax
  411b36:	js     0x41212b
  411b3c:	mov    rax,QWORD PTR [rsi+0x50]
  411b40:	lea    rbx,[rsp+0x180]
  411b48:	mov    rdi,QWORD PTR [rax+0x30]
  411b4c:	mov    r9d,DWORD PTR [rdi]
  411b4f:	test   r9d,r9d
  411b52:	je     0x411b88
  411b54:	lea    r8,[rip+0x27aab]        # 0x439606
  411b5b:	mov    edx,0x10
  411b60:	mov    rcx,rbx
  411b63:	add    rdi,0x4
  411b67:	call   0x411900
  411b6c:	mov    rcx,QWORD PTR [rsp+0x70]
  411b71:	lea    rdx,[rip+0x27a8a]        # 0x439602
  411b78:	mov    r8,rbx
  411b7b:	call   0x422178
  411b80:	mov    r9d,DWORD PTR [rdi]
  411b83:	test   r9d,r9d
  411b86:	jne    0x411b54
  411b88:	mov    rcx,QWORD PTR [rsp+0x70]
  411b8d:	mov    rdx,rbx
  411b90:	call   0x4221b8
  411b95:	mov    rdx,QWORD PTR [rsp+0x180]
  411b9d:	cdqe   
  411b9f:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
  411ba4:	mov    rax,QWORD PTR [rsp+0x180]
  411bac:	mov    rdx,QWORD PTR [rsi+0x48]
  411bb0:	mov    r9,QWORD PTR [rdx+0x1f0]
  411bb7:	mov    QWORD PTR [rsp+0x60],rax
  411bbc:	test   r9,r9
  411bbf:	jne    0x4120c0
  411bc5:	mov    rdx,QWORD PTR [rsi+0x50]
  411bc9:	test   rdx,rdx
  411bcc:	je     0x411db4
  411bd2:	cmp    QWORD PTR [rdx+0x40],0x0
  411bd7:	je     0x411db4
  411bdd:	lea    rcx,[rsp+0x78]
  411be2:	mov    QWORD PTR [rsp+0x78],0x0
  411beb:	call   0x422180
  411bf0:	test   eax,eax
  411bf2:	js     0x41212b
  411bf8:	mov    rax,QWORD PTR [rsi+0x50]
  411bfc:	lea    rbx,[rsp+0x180]
  411c04:	mov    rdi,QWORD PTR [rax+0x40]
  411c08:	mov    r9,QWORD PTR [rdi]
  411c0b:	test   r9,r9
  411c0e:	je     0x411c44
  411c10:	lea    r8,[rip+0x27994]        # 0x4395ab
  411c17:	mov    edx,0x10
  411c1c:	mov    rcx,rbx
  411c1f:	add    rdi,0x8
  411c23:	call   0x411900
  411c28:	mov    rcx,QWORD PTR [rsp+0x78]
  411c2d:	lea    rdx,[rip+0x279ce]        # 0x439602
  411c34:	mov    r8,rbx
  411c37:	call   0x422178
  411c3c:	mov    r9,QWORD PTR [rdi]
  411c3f:	test   r9,r9
  411c42:	jne    0x411c10
  411c44:	mov    rcx,QWORD PTR [rsp+0x78]
  411c49:	mov    rdx,rbx
  411c4c:	call   0x4221b8
  411c51:	mov    rdx,QWORD PTR [rsp+0x180]
  411c59:	cdqe   
  411c5b:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
  411c60:	mov    rax,QWORD PTR [rsp+0x180]
  411c68:	cmp    QWORD PTR [rsp+0x60],0x0
  411c6e:	mov    QWORD PTR [rsp+0x70],rax
  411c73:	mov    r9,QWORD PTR [rsp+0x58]
  411c78:	jne    0x411de0
  411c7e:	test   r9,r9
  411c81:	jne    0x411de0
  411c87:	test   rax,rax
  411c8a:	je     0x411ee2
  411c90:	mov    BYTE PTR [rsp+0x180],0x0
  411c98:	jmp    0x411e1f
  411c9d:	nop    DWORD PTR [rax]
  411ca0:	lea    rbx,[rsp+0x180]
  411ca8:	lea    r8,[rip+0x279be]        # 0x43966d
  411caf:	mov    edx,0x100
  411cb4:	mov    rcx,rbx
  411cb7:	call   0x411720
  411cbc:	lea    r8,[rip+0x279ad]        # 0x439670
  411cc3:	mov    r9,rbx
  411cc6:	mov    edx,0x20
  411ccb:	xor    ecx,ecx
  411ccd:	call   0x4226c0
  411cd2:	mov    rdi,QWORD PTR [r13+0x0]
  411cd6:	lea    rcx,[rip+0x279ca]        # 0x4396a7
  411cdd:	call   0x422108
  411ce2:	lea    rcx,[rsp+0x78]
  411ce7:	lea    r8,[rip+0x279b9]        # 0x4396a7
  411cee:	mov    QWORD PTR [rsp+0x28],rdi
  411cf3:	mov    QWORD PTR [rsp+0x20],0x0
  411cfc:	mov    r9,rbx
  411cff:	mov    rdx,rax
  411d02:	call   0x4220e0
  411d07:	test   eax,eax
  411d09:	js     0x411da0
  411d0f:	mov    r8,QWORD PTR [rsp+0x78]
  411d14:	mov    edx,DWORD PTR [rsp+0x4c]
  411d18:	xor    r9d,r9d
  411d1b:	mov    rcx,QWORD PTR [rsp+0x50]
  411d20:	call   0x422098
  411d25:	test   eax,eax
  411d27:	js     0x411da0
  411d29:	mov    rax,QWORD PTR [rsp+0x78]
  411d2e:	mov    DWORD PTR [rsp+0x4c],0x0
  411d36:	mov    QWORD PTR [rsp+0x50],rax
  411d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d40:	mov    eax,DWORD PTR [rsi+0x4]
  411d43:	lea    r8,[rip+0x27962]        # 0x4396ac
  411d4a:	mov    edx,0xff
  411d4f:	mov    rcx,rbp
  411d52:	mov    DWORD PTR [rsp+0x20],eax
  411d56:	mov    r9d,DWORD PTR [rsi]
  411d59:	call   0x411930
  411d5e:	mov    rdx,QWORD PTR [r14+0x18]
  411d62:	mov    rcx,QWORD PTR [r14+0x20]
  411d66:	lea    r9,[rsp+0x4c]
  411d6b:	lea    r8,[rsp+0x50]
  411d70:	mov    QWORD PTR [rsp+0x20],rbp
  411d75:	call   0x411740
  411d7a:	test   eax,eax
  411d7c:	js     0x411da0
  411d7e:	mov    edx,DWORD PTR [rsp+0x4c]
  411d82:	mov    r8,QWORD PTR [r12]
  411d86:	xor    r9d,r9d
  411d89:	mov    rcx,QWORD PTR [rsp+0x50]
  411d8e:	call   0x422098
  411d93:	mov    edx,0x0
  411d98:	test   eax,eax
  411d9a:	cmovg  eax,edx
  411d9d:	nop    DWORD PTR [rax]
  411da0:	add    rsp,0x588
  411da7:	pop    rbx
  411da8:	pop    rsi
  411da9:	pop    rdi
  411daa:	pop    rbp
  411dab:	pop    r12
  411dad:	pop    r13
  411daf:	pop    r14
  411db1:	pop    r15
  411db3:	ret    
  411db4:	test   rax,rax
  411db7:	mov    QWORD PTR [rsp+0x70],0x0
  411dc0:	mov    r9,QWORD PTR [rsp+0x58]
  411dc5:	jne    0x411dd0
  411dc7:	test   r9,r9
  411dca:	je     0x411ee2
  411dd0:	lea    rbx,[rsp+0x180]
  411dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  411de0:	test   r9,r9
  411de3:	mov    BYTE PTR [rsp+0x180],0x0
  411deb:	je     0x411e01
  411ded:	lea    r8,[rip+0x27815]        # 0x439609
  411df4:	mov    edx,0x100
  411df9:	mov    rcx,rbx
  411dfc:	call   0x422560
  411e01:	mov    r9,QWORD PTR [rsp+0x60]
  411e06:	test   r9,r9
  411e09:	je     0x411e1f
  411e0b:	lea    r8,[rip+0x27807]        # 0x439619
  411e12:	mov    edx,0x100
  411e17:	mov    rcx,rbx
  411e1a:	call   0x422560
  411e1f:	mov    r9,QWORD PTR [rsp+0x70]
  411e24:	test   r9,r9
  411e27:	je     0x411e3d
  411e29:	lea    r8,[rip+0x277fa]        # 0x43962a
  411e30:	mov    edx,0x100
  411e35:	mov    rcx,rbx
  411e38:	call   0x422560
  411e3d:	lea    rcx,[rsp+0x58]
  411e42:	call   0x422768
  411e47:	lea    rcx,[rsp+0x60]
  411e4c:	call   0x422768
  411e51:	lea    rcx,[rsp+0x70]
  411e56:	call   0x422768
  411e5b:	mov    eax,DWORD PTR [rsi+0x4]
  411e5e:	lea    r8,[rip+0x277db]        # 0x439640
  411e65:	mov    edx,0xff
  411e6a:	mov    rcx,rbp
  411e6d:	mov    DWORD PTR [rsp+0x20],eax
  411e71:	mov    r9d,DWORD PTR [rsi]
  411e74:	call   0x411930
  411e79:	mov    rdi,QWORD PTR [r13+0x0]
  411e7d:	lea    rcx,[rip+0x277e1]        # 0x439665
  411e84:	call   0x422108
  411e89:	lea    rcx,[rsp+0x78]
  411e8e:	mov    QWORD PTR [rsp+0x28],rdi
  411e93:	mov    QWORD PTR [rsp+0x20],0x0
  411e9c:	mov    r9,rbx
  411e9f:	mov    r8,rbp
  411ea2:	mov    rdx,rax
  411ea5:	call   0x4220e0
  411eaa:	test   eax,eax
  411eac:	js     0x411da0
  411eb2:	mov    r8,QWORD PTR [rsp+0x78]
  411eb7:	mov    edx,DWORD PTR [rsp+0x4c]
  411ebb:	xor    r9d,r9d
  411ebe:	mov    rcx,QWORD PTR [rsp+0x50]
  411ec3:	call   0x422098
  411ec8:	test   eax,eax
  411eca:	js     0x411da0
  411ed0:	mov    rax,QWORD PTR [rsp+0x78]
  411ed5:	mov    DWORD PTR [rsp+0x4c],0x0
  411edd:	mov    QWORD PTR [rsp+0x50],rax
  411ee2:	mov    r9,QWORD PTR [rsi+0x150]
  411ee9:	test   r9,r9
  411eec:	je     0x411d40
  411ef2:	mov    r10d,DWORD PTR [r14+0x30]
  411ef6:	test   r10d,r10d
  411ef9:	je     0x411d40
  411eff:	mov    rax,QWORD PTR [r14]
  411f02:	mov    ecx,DWORD PTR [rax+0x2c]
  411f05:	test   ecx,ecx
  411f07:	je     0x411d40
  411f0d:	mov    rdx,QWORD PTR [rax+0x30]
  411f11:	mov    rax,QWORD PTR [rdx]
  411f14:	mov    rax,QWORD PTR [rax+0x8]
  411f18:	mov    r8d,DWORD PTR [rax+0xc]
  411f1c:	test   r8d,r8d
  411f1f:	je     0x411ca0
  411f25:	sub    ecx,0x1
  411f28:	lea    rax,[rdx+0x8]
  411f2c:	lea    rcx,[rdx+rcx*8+0x8]
  411f31:	jmp    0x411f49
  411f33:	mov    rdx,QWORD PTR [rax]
  411f36:	add    rax,0x8
  411f3a:	mov    rdx,QWORD PTR [rdx+0x8]
  411f3e:	mov    edx,DWORD PTR [rdx+0xc]
  411f41:	test   edx,edx
  411f43:	je     0x411ca0
  411f49:	cmp    rax,rcx
  411f4c:	jne    0x411f33
  411f4e:	jmp    0x411d40
  411f53:	lea    rbx,[rsp+0x180]
  411f5b:	mov    r8d,0x2000
  411f61:	mov    edx,0x100
  411f66:	xor    r15d,r15d
  411f69:	mov    rcx,rbx
  411f6c:	call   0x422860
  411f71:	mov    ecx,DWORD PTR [rsi+0xf0]
  411f77:	call   0x422728
  411f7c:	lea    rdx,[rip+0x27628]        # 0x4395ab
  411f83:	mov    r8,rax
  411f86:	mov    rcx,rbx
  411f89:	call   0x422858
  411f8e:	mov    ecx,DWORD PTR [rsi+0xf0]
  411f94:	xor    eax,eax
  411f96:	test   ecx,ecx
  411f98:	jle    0x411fe0
  411f9a:	nop    WORD PTR [rax+rax*1+0x0]
  411fa0:	mov    rdx,QWORD PTR [rsi+0xe8]
  411fa7:	mov    r9d,DWORD PTR [rdx+rax*1]
  411fab:	cmp    r9d,0xffffffff
  411faf:	je     0x411fd3
  411fb1:	lea    rdx,[rip+0x27641]        # 0x4395f9
  411fb8:	mov    rcx,rbx
  411fbb:	mov    r8d,r15d
  411fbe:	mov    QWORD PTR [rsp+0x38],rax
  411fc3:	call   0x422858
  411fc8:	mov    ecx,DWORD PTR [rsi+0xf0]
  411fce:	mov    rax,QWORD PTR [rsp+0x38]
  411fd3:	add    r15d,0x1
  411fd7:	add    rax,0x4
  411fdb:	cmp    r15d,ecx
  411fde:	jl     0x411fa0
  411fe0:	mov    r9,QWORD PTR [rsp+0x180]
  411fe8:	lea    r8,[rip+0x275c9]        # 0x4395b8
  411fef:	mov    edx,0x20
  411ff4:	xor    ecx,ecx
  411ff6:	call   0x4226c0
  411ffb:	mov    r9,QWORD PTR [rsp+0x180]
  412003:	lea    rcx,[rip+0x275eb]        # 0x4395f5
  41200a:	mov    r15,QWORD PTR [r13+0x0]
  41200e:	mov    QWORD PTR [rsp+0x38],r9
  412013:	call   0x422108
  412018:	mov    r9,QWORD PTR [rsp+0x38]
  41201d:	lea    rcx,[rsp+0x78]
  412022:	lea    r8,[rip+0x275cc]        # 0x4395f5
  412029:	mov    QWORD PTR [rsp+0x28],r15
  41202e:	mov    QWORD PTR [rsp+0x20],0x0
  412037:	mov    rdx,rax
  41203a:	call   0x4220e0
  41203f:	test   eax,eax
  412041:	js     0x411da0
  412047:	mov    r8,QWORD PTR [rsp+0x78]
  41204c:	mov    edx,DWORD PTR [rsp+0x4c]
  412050:	xor    r9d,r9d
  412053:	mov    rcx,QWORD PTR [rsp+0x50]
  412058:	call   0x422098
  41205d:	test   eax,eax
  41205f:	js     0x411da0
  412065:	mov    rax,QWORD PTR [rsp+0x78]
  41206a:	xor    edx,edx
  41206c:	mov    rcx,rbx
  41206f:	mov    DWORD PTR [rsp+0x4c],0x0
  412077:	mov    QWORD PTR [rsp+0x50],rax
  41207c:	call   0x422868
  412081:	jmp    0x411a2d
  412086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412090:	call   0x422728
  412095:	mov    QWORD PTR [rdi+0x1f0],rax
  41209c:	jmp    0x411a45
  4120a1:	call   0x4226f0
  4120a6:	mov    rcx,rax
  4120a9:	call   0x422578
  4120ae:	mov    rdx,QWORD PTR [rsi+0x48]
  4120b2:	jmp    0x411af4
  4120b7:	nop    WORD PTR [rax+rax*1+0x0]
  4120c0:	lea    rbx,[rsp+0x180]
  4120c8:	lea    r8,[rip+0x274dc]        # 0x4395ab
  4120cf:	mov    edx,0x10
  4120d4:	mov    rcx,rbx
  4120d7:	call   0x411900
  4120dc:	mov    rcx,rbx
  4120df:	call   0x422578
  4120e4:	jmp    0x411c68
  4120e9:	nop    DWORD PTR [rax+0x0]
  4120f0:	lea    rbx,[rsp+0x180]
  4120f8:	lea    r8,[rip+0x27507]        # 0x439606
  4120ff:	mov    edx,0x10
  412104:	mov    rcx,rbx
  412107:	call   0x411900
  41210c:	mov    rcx,rbx
  41210f:	call   0x422578
  412114:	mov    rdx,QWORD PTR [rsi+0x48]
  412118:	jmp    0x411bb0
  41211d:	xor    eax,eax
  41211f:	jmp    0x411bb0
  412124:	xor    eax,eax
  412126:	jmp    0x411af4
  41212b:	mov    ecx,0x1
  412130:	call   0x401cb0
  412135:	nop
  412136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412140:	push   r12
  412142:	push   rbp
  412143:	push   rdi
  412144:	push   rsi
  412145:	push   rbx
  412146:	sub    rsp,0x30
  41214a:	test   r8,r8
  41214d:	mov    rdi,rdx
  412150:	mov    r12,r8
  412153:	mov    esi,r9d
  412156:	je     0x4121d0
  412158:	mov    rbx,QWORD PTR [r8+0x28]
  41215c:	test   rbx,rbx
  41215f:	je     0x4121d0
  412161:	mov    ecx,r9d
  412164:	call   0x4225d0
  412169:	test   rax,rax
  41216c:	je     0x412260
  412172:	movzx  ebp,BYTE PTR [rax+0x8]
  412176:	xor    ebp,0x1
  412179:	and    ebp,0x1
  41217c:	mov    eax,DWORD PTR [rdi+0x2fc]
  412182:	test   eax,eax
  412184:	js     0x412230
  41218a:	mov    edx,DWORD PTR [rbx]
  41218c:	cmp    edx,0xffffffff
  41218f:	je     0x4121dd
  412191:	mov    edi,0xffffffff
  412196:	jmp    0x4121ab
  412198:	nop    DWORD PTR [rax+rax*1+0x0]
  4121a0:	add    rbx,0x4
  4121a4:	mov    edx,DWORD PTR [rbx]
  4121a6:	cmp    edx,0xffffffff
  4121a9:	je     0x4121e0
  4121ab:	mov    ecx,edi
  4121ad:	mov    QWORD PTR [rsp+0x20],0x0
  4121b6:	mov    r9d,ebp
  4121b9:	mov    r8d,esi
  4121bc:	call   0x422380
  4121c1:	cmp    DWORD PTR [rbx],esi
  4121c3:	mov    edi,eax
  4121c5:	jne    0x4121a0
  4121c7:	cmp    esi,0xffffffff
  4121ca:	je     0x412250
  4121d0:	mov    eax,esi
  4121d2:	add    rsp,0x30
  4121d6:	pop    rbx
  4121d7:	pop    rsi
  4121d8:	pop    rdi
  4121d9:	pop    rbp
  4121da:	pop    r12
  4121dc:	ret    
  4121dd:	mov    edi,edx
  4121df:	nop
  4121e0:	cmp    esi,0xffffffff
  4121e3:	je     0x412250
  4121e5:	mov    ecx,edi
  4121e7:	call   0x422700
  4121ec:	mov    rbx,QWORD PTR [r12]
  4121f0:	mov    ecx,esi
  4121f2:	mov    rbp,rax
  4121f5:	call   0x422700
  4121fa:	lea    r8,[rip+0x274cf]        # 0x4396d0
  412201:	mov    r9,rax
  412204:	mov    QWORD PTR [rsp+0x28],rbp
  412209:	mov    QWORD PTR [rsp+0x20],rbx
  41220e:	mov    edx,0x18
  412213:	xor    ecx,ecx
  412215:	call   0x4226c0
  41221a:	mov    eax,edi
  41221c:	add    rsp,0x30
  412220:	pop    rbx
  412221:	pop    rsi
  412222:	pop    rdi
  412223:	pop    rbp
  412224:	pop    r12
  412226:	ret    
  412227:	nop    WORD PTR [rax+rax*1+0x0]
  412230:	mov    eax,DWORD PTR [rdi+0x38]
  412233:	cmp    eax,0x8
  412236:	je     0x412267
  412238:	cmp    eax,0xa
  41223b:	lea    rax,[rip+0x27b9e]        # 0x439de0
  412242:	cmove  rbx,rax
  412246:	jmp    0x41218a
  41224b:	nop    DWORD PTR [rax+rax*1+0x0]
  412250:	mov    eax,edi
  412252:	add    rsp,0x30
  412256:	pop    rbx
  412257:	pop    rsi
  412258:	pop    rdi
  412259:	pop    rbp
  41225a:	pop    r12
  41225c:	ret    
  41225d:	nop    DWORD PTR [rax]
  412260:	xor    ebp,ebp
  412262:	jmp    0x41217c
  412267:	lea    rbx,[rip+0x27b92]        # 0x439e00
  41226e:	jmp    0x41218a
  412273:	nop    DWORD PTR [rax]
  412276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412280:	push   r14
  412282:	push   r13
  412284:	push   r12
  412286:	push   rbp
  412287:	push   rdi
  412288:	push   rsi
  412289:	push   rbx
  41228a:	sub    rsp,0x270
  412291:	mov    rsi,QWORD PTR [rdx+0x8]
  412295:	mov    rbp,rdx
  412298:	mov    rdx,QWORD PTR [rip+0x2b631]        # 0x43d8d0
  41229f:	mov    r13,rcx
  4122a2:	lea    rdi,[rsp+0x70]
  4122a7:	movsxd rcx,DWORD PTR [rsi]
  4122aa:	mov    rbx,QWORD PTR [rsi+0x48]
  4122ae:	mov    rdx,QWORD PTR [rdx]
  4122b1:	mov    r12,QWORD PTR [rdx+rcx*8]
  4122b5:	mov    edx,DWORD PTR [rsi+0x4]
  4122b8:	mov    QWORD PTR [rsp+0x38],r8
  4122bd:	lea    r8,[rip+0x272b4]        # 0x439578
  4122c4:	mov    DWORD PTR [rsp+0x34],r9d
  4122c9:	mov    r9d,ecx
  4122cc:	mov    rcx,rdi
  4122cf:	mov    DWORD PTR [rsp+0x20],edx
  4122d3:	mov    edx,0xff
  4122d8:	call   0x411930
  4122dd:	mov    r14,QWORD PTR [r13+0x0]
  4122e1:	lea    rcx,[rip+0x27433]        # 0x43971b
  4122e8:	call   0x422108
  4122ed:	xor    r9d,r9d
  4122f0:	mov    QWORD PTR [rsp+0x28],r14
  4122f5:	mov    QWORD PTR [rsp+0x20],0x0
  4122fe:	mov    r8,rdi
  412301:	mov    rdx,rax
  412304:	mov    rcx,rbp
  412307:	call   0x4220e0
  41230c:	test   eax,eax
  41230e:	js     0x4125a5
  412314:	mov    r9d,DWORD PTR [rbx+0x94]
  41231b:	mov    eax,DWORD PTR [rbx+0x98]
  412321:	test   r9d,r9d
  412324:	jne    0x41232e
  412326:	test   eax,eax
  412328:	je     0x41241d
  41232e:	lea    r14,[rsp+0x170]
  412336:	lea    r8,[rip+0x273e9]        # 0x439726
  41233d:	mov    DWORD PTR [rsp+0x20],eax
  412341:	mov    edx,0xff
  412346:	xor    ebx,ebx
  412348:	mov    rcx,r14
  41234b:	call   0x411930
  412350:	jmp    0x412372
  412352:	mov    rax,QWORD PTR [rbx+0x8]
  412356:	lea    r8,[rip+0x273cf]        # 0x43972c
  41235d:	mov    edx,0xff
  412362:	mov    rcx,r14
  412365:	mov    QWORD PTR [rsp+0x20],rax
  41236a:	mov    r9,QWORD PTR [rbx]
  41236d:	call   0x422560
  412372:	mov    rcx,QWORD PTR [rsi+0x130]
  412379:	lea    rdx,[rip+0x273b3]        # 0x439733
  412380:	mov    r8,rbx
  412383:	mov    r9d,0x2
  412389:	call   0x422818
  41238e:	test   rax,rax
  412391:	mov    rbx,rax
  412394:	jne    0x412352
  412396:	mov    eax,DWORD PTR [rsi+0x4]
  412399:	lea    r8,[rip+0x27398]        # 0x439738
  4123a0:	mov    edx,0xff
  4123a5:	mov    rcx,rdi
  4123a8:	mov    DWORD PTR [rsp+0x20],eax
  4123ac:	mov    r9d,DWORD PTR [rsi]
  4123af:	call   0x411930
  4123b4:	mov    rbx,QWORD PTR [r13+0x0]
  4123b8:	lea    rcx,[rip+0x27398]        # 0x439757
  4123bf:	call   0x422108
  4123c4:	lea    rcx,[rsp+0x50]
  4123c9:	mov    QWORD PTR [rsp+0x28],rbx
  4123ce:	mov    QWORD PTR [rsp+0x20],0x0
  4123d7:	mov    r9,r14
  4123da:	mov    r8,rdi
  4123dd:	mov    rdx,rax
  4123e0:	call   0x4220e0
  4123e5:	test   eax,eax
  4123e7:	js     0x4125a5
  4123ed:	mov    r8,QWORD PTR [rsp+0x50]
  4123f2:	mov    edx,DWORD PTR [rsp+0x34]
  4123f6:	xor    r9d,r9d
  4123f9:	mov    rcx,QWORD PTR [rsp+0x38]
  4123fe:	call   0x422098
  412403:	test   eax,eax
  412405:	js     0x4125a5
  41240b:	mov    rax,QWORD PTR [rsp+0x50]
  412410:	mov    DWORD PTR [rsp+0x34],0x0
  412418:	mov    QWORD PTR [rsp+0x38],rax
  41241d:	mov    rcx,QWORD PTR [rsi+0x128]
  412424:	lea    rdx,[rip+0x27332]        # 0x43975d
  41242b:	xor    r9d,r9d
  41242e:	xor    r8d,r8d
  412431:	call   0x422818
  412436:	test   rax,rax
  412439:	je     0x412452
  41243b:	mov    rcx,QWORD PTR [rsi+0x48]
  41243f:	mov    r8,QWORD PTR [rax+0x8]
  412443:	lea    rdx,[rip+0x27313]        # 0x43975d
  41244a:	xor    r9d,r9d
  41244d:	call   0x422620
  412452:	mov    ecx,DWORD PTR [rsi+0x180]
  412458:	test   ecx,ecx
  41245a:	je     0x4125c0
  412460:	mov    rax,QWORD PTR [rsi+0x108]
  412467:	test   rax,rax
  41246a:	je     0x41247e
  41246c:	mov    rax,QWORD PTR [rax+0x10]
  412470:	mov    edx,0xffffffff
  412475:	mov    rcx,QWORD PTR [rax+0x10]
  412479:	call   0x4220b0
  41247e:	mov    rax,QWORD PTR [rsi+0x48]
  412482:	mov    ecx,DWORD PTR [rax+0xa8]
  412488:	cmp    ecx,0xffffffff
  41248b:	je     0x4126fb
  412491:	call   0x422700
  412496:	mov    rcx,rax
  412499:	call   0x422578
  41249e:	test   rax,rax
  4124a1:	mov    QWORD PTR [rsp+0x40],rax
  4124a6:	je     0x412546
  4124ac:	mov    eax,DWORD PTR [rsi+0x4]
  4124af:	lea    r8,[rip+0x272b2]        # 0x439768
  4124b6:	mov    edx,0xff
  4124bb:	mov    rcx,rdi
  4124be:	mov    DWORD PTR [rsp+0x20],eax
  4124c2:	mov    r9d,DWORD PTR [rsi]
  4124c5:	call   0x411930
  4124ca:	mov    rbx,QWORD PTR [rsp+0x40]
  4124cf:	mov    r13,QWORD PTR [r13+0x0]
  4124d3:	lea    rcx,[rip+0x272b3]        # 0x43978d
  4124da:	call   0x422108
  4124df:	lea    rcx,[rsp+0x48]
  4124e4:	lea    r8,[rip+0x272a2]        # 0x43978d
  4124eb:	mov    r9,rbx
  4124ee:	mov    rdx,rax
  4124f1:	mov    QWORD PTR [rsp+0x28],r13
  4124f6:	mov    QWORD PTR [rsp+0x20],0x0
  4124ff:	call   0x4220e0
  412504:	lea    rcx,[rsp+0x40]
  412509:	mov    ebx,eax
  41250b:	call   0x422768
  412510:	test   ebx,ebx
  412512:	mov    eax,ebx
  412514:	js     0x4125a5
  41251a:	mov    r8,QWORD PTR [rsp+0x48]
  41251f:	mov    edx,DWORD PTR [rsp+0x34]
  412523:	xor    r9d,r9d
  412526:	mov    rcx,QWORD PTR [rsp+0x38]
  41252b:	call   0x422098
  412530:	test   eax,eax
  412532:	js     0x4125a5
  412534:	mov    rax,QWORD PTR [rsp+0x48]
  412539:	mov    DWORD PTR [rsp+0x34],0x0
  412541:	mov    QWORD PTR [rsp+0x38],rax
  412546:	mov    eax,DWORD PTR [rsi+0x4]
  412549:	lea    r8,[rip+0x2715c]        # 0x4396ac
  412550:	mov    edx,0xff
  412555:	mov    rcx,rdi
  412558:	mov    DWORD PTR [rsp+0x20],eax
  41255c:	mov    r9d,DWORD PTR [rsi]
  41255f:	call   0x411930
  412564:	mov    rdx,QWORD PTR [r12+0x18]
  412569:	mov    rcx,QWORD PTR [r12+0x20]
  41256e:	lea    r9,[rsp+0x34]
  412573:	lea    r8,[rsp+0x38]
  412578:	mov    QWORD PTR [rsp+0x20],rdi
  41257d:	call   0x411740
  412582:	test   eax,eax
  412584:	js     0x4125a5
  412586:	mov    edx,DWORD PTR [rsp+0x34]
  41258a:	mov    r8,QWORD PTR [rbp+0x0]
  41258e:	xor    r9d,r9d
  412591:	mov    rcx,QWORD PTR [rsp+0x38]
  412596:	call   0x422098
  41259b:	mov    edx,0x0
  4125a0:	test   eax,eax
  4125a2:	cmovg  eax,edx
  4125a5:	add    rsp,0x270
  4125ac:	pop    rbx
  4125ad:	pop    rsi
  4125ae:	pop    rdi
  4125af:	pop    rbp
  4125b0:	pop    r12
  4125b2:	pop    r13
  4125b4:	pop    r14
  4125b6:	ret    
  4125b7:	nop    WORD PTR [rax+rax*1+0x0]
  4125c0:	mov    rdx,QWORD PTR [rsi+0x48]
  4125c4:	mov    r14d,DWORD PTR [rdx+0xa8]
  4125cb:	cmp    r14d,0xffffffff
  4125cf:	jne    0x412670
  4125d5:	mov    rax,QWORD PTR [rsi+0x50]
  4125d9:	test   rax,rax
  4125dc:	je     0x4126fb
  4125e2:	cmp    QWORD PTR [rax+0x28],0x0
  4125e7:	je     0x4126fb
  4125ed:	lea    rcx,[rsp+0x40]
  4125f2:	mov    QWORD PTR [rsp+0x40],0x0
  4125fb:	call   0x422180
  412600:	test   eax,eax
  412602:	js     0x412735
  412608:	mov    rax,QWORD PTR [rsi+0x50]
  41260c:	mov    rbx,QWORD PTR [rax+0x28]
  412610:	mov    rax,QWORD PTR [rsi+0x48]
  412614:	mov    edx,DWORD PTR [rax+0x2fc]
  41261a:	test   edx,edx
  41261c:	jns    0x41263d
  41261e:	jmp    0x412687
  412620:	call   0x422700
  412625:	mov    rcx,QWORD PTR [rsp+0x40]
  41262a:	lea    rdx,[rip+0x26fd1]        # 0x439602
  412631:	mov    r8,rax
  412634:	add    rbx,0x4
  412638:	call   0x422178
  41263d:	mov    ecx,DWORD PTR [rbx]
  41263f:	cmp    ecx,0xffffffff
  412642:	jne    0x412620
  412644:	mov    rcx,QWORD PTR [rsp+0x40]
  412649:	lea    rdx,[rsp+0x48]
  41264e:	call   0x4221b8
  412653:	mov    rdx,QWORD PTR [rsp+0x48]
  412658:	cdqe   
  41265a:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
  41265f:	mov    rax,QWORD PTR [rsp+0x48]
  412664:	jmp    0x41249e
  412669:	nop    DWORD PTR [rax+0x0]
  412670:	mov    rcx,QWORD PTR [rsi+0x10]
  412674:	mov    r8,QWORD PTR [rsi+0x50]
  412678:	mov    r9d,r14d
  41267b:	call   0x412140
  412680:	mov    ecx,eax
  412682:	jmp    0x412491
  412687:	mov    eax,DWORD PTR [rax+0x38]
  41268a:	cmp    eax,0x8
  41268d:	je     0x412709
  41268f:	cmp    eax,0xa
  412692:	jne    0x41263d
  412694:	lea    rbx,[rsp+0x170]
  41269c:	mov    DWORD PTR [rsp+0x170],0xc
  4126a7:	mov    DWORD PTR [rsp+0x174],0xd
  4126b2:	mov    DWORD PTR [rsp+0x178],0xe
  4126bd:	mov    DWORD PTR [rsp+0x17c],0x0
  4126c8:	mov    DWORD PTR [rsp+0x180],0x4
  4126d3:	mov    DWORD PTR [rsp+0x184],0x5
  4126de:	mov    DWORD PTR [rsp+0x188],0x1e
  4126e9:	mov    DWORD PTR [rsp+0x18c],r14d
  4126f1:	mov    ecx,0xc
  4126f6:	jmp    0x412620
  4126fb:	mov    QWORD PTR [rsp+0x40],0x0
  412704:	jmp    0x412546
  412709:	mov    DWORD PTR [rsp+0x50],0xc
  412711:	mov    DWORD PTR [rsp+0x54],0xd
  412719:	lea    rbx,[rsp+0x50]
  41271e:	mov    DWORD PTR [rsp+0x58],0x0
  412726:	mov    DWORD PTR [rsp+0x5c],0x4
  41272e:	mov    DWORD PTR [rsp+0x60],r14d
  412733:	jmp    0x4126f1
  412735:	mov    ecx,0x1
  41273a:	call   0x401cb0
  41273f:	nop
  412740:	push   rbp
  412741:	push   rdi
  412742:	push   rsi
  412743:	push   rbx
  412744:	sub    rsp,0x38
  412748:	test   rdx,rdx
  41274b:	je     0x4127fc
  412751:	mov    rax,QWORD PTR [rdx+0x38]
  412755:	test   rax,rax
  412758:	je     0x4127fc
  41275e:	mov    r8d,DWORD PTR [rax]
  412761:	cmp    r8d,0xffffffff
  412765:	je     0x412830
  41276b:	mov    r9,QWORD PTR [rcx+0x8]
  41276f:	mov    r9d,DWORD PTR [r9+0x1d8]
  412776:	cmp    r8d,r9d
  412779:	jne    0x412785
  41277b:	jmp    0x4127fc
  41277d:	nop    DWORD PTR [rax]
  412780:	cmp    r8d,r9d
  412783:	je     0x4127fc
  412785:	add    rax,0x4
  412789:	mov    r8d,DWORD PTR [rax]
  41278c:	cmp    r8d,0xffffffff
  412790:	jne    0x412780
  412792:	mov    eax,DWORD PTR [rdx+0x18]
  412795:	mov    rbx,rdx
  412798:	mov    rsi,rcx
  41279b:	test   eax,eax
  41279d:	js     0x412805
  41279f:	mov    ecx,r9d
  4127a2:	call   0x4226f0
  4127a7:	test   rax,rax
  4127aa:	je     0x4127ec
  4127ac:	mov    rax,QWORD PTR [rbx+0x38]
  4127b0:	mov    ecx,DWORD PTR [rax]
  4127b2:	call   0x4226f0
  4127b7:	mov    rbp,rax
  4127ba:	mov    rax,QWORD PTR [rsi+0x8]
  4127be:	mov    rdi,QWORD PTR [rbx]
  4127c1:	mov    ecx,DWORD PTR [rax+0x1d8]
  4127c7:	call   0x4226f0
  4127cc:	lea    r8,[rip+0x26fed]        # 0x4397c0
  4127d3:	mov    r9,rax
  4127d6:	mov    QWORD PTR [rsp+0x28],rbp
  4127db:	mov    QWORD PTR [rsp+0x20],rdi
  4127e0:	mov    edx,0x18
  4127e5:	xor    ecx,ecx
  4127e7:	call   0x4226c0
  4127ec:	mov    rax,QWORD PTR [rbx+0x38]
  4127f0:	mov    edx,DWORD PTR [rax]
  4127f2:	mov    rax,QWORD PTR [rsi+0x8]
  4127f6:	mov    DWORD PTR [rax+0x1d8],edx
  4127fc:	add    rsp,0x38
  412800:	pop    rbx
  412801:	pop    rsi
  412802:	pop    rdi
  412803:	pop    rbp
  412804:	ret    
  412805:	mov    ecx,r9d
  412808:	call   0x4226f0
  41280d:	mov    rdi,rax
  412810:	mov    rax,QWORD PTR [rbx+0x38]
  412814:	mov    ecx,DWORD PTR [rax]
  412816:	call   0x4226f0
  41281b:	cmp    rdi,rax
  41281e:	ja     0x412840
  412820:	mov    rax,QWORD PTR [rsi+0x8]
  412824:	mov    r9d,DWORD PTR [rax+0x1d8]
  41282b:	jmp    0x41279f
  412830:	mov    rax,QWORD PTR [rcx+0x8]
  412834:	mov    r9d,DWORD PTR [rax+0x1d8]
  41283b:	jmp    0x412792
  412840:	lea    r8,[rip+0x26f51]        # 0x439798
  412847:	mov    edx,0x10
  41284c:	xor    ecx,ecx
  41284e:	call   0x4226c0
  412853:	jmp    0x412820
  412855:	nop
  412856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412860:	push   r12
  412862:	push   rbp
  412863:	push   rdi
  412864:	push   rsi
  412865:	push   rbx
  412866:	sub    rsp,0x20
  41286a:	mov    rsi,rcx
  41286d:	mov    ecx,0x40
  412872:	mov    rbp,rdx
  412875:	call   0x422670
  41287a:	test   rax,rax
  41287d:	mov    rbx,rax
  412880:	je     0x41299f
  412886:	mov    rdi,QWORD PTR [rip+0x2afe3]        # 0x43d870
  41288d:	mov    rcx,QWORD PTR [rbx+0x30]
  412891:	lea    r8,[rbx+0x38]
  412895:	mov    edx,0x8
  41289a:	mov    eax,DWORD PTR [rdi]
  41289c:	mov    DWORD PTR [rbx],eax
  41289e:	mov    eax,DWORD PTR [rbx+0x38]
  4128a1:	lea    r9d,[rax+0x1]
  4128a5:	call   0x407950
  4128aa:	mov    ecx,0x30
  4128af:	mov    r12,rax
  4128b2:	mov    QWORD PTR [rbx+0x30],rax
  4128b6:	call   0x422670
  4128bb:	test   rax,rax
  4128be:	mov    QWORD PTR [r12],rax
  4128c2:	je     0x41299f
  4128c8:	mov    rax,QWORD PTR [rbx+0x30]
  4128cc:	mov    rcx,QWORD PTR [rbx+0x20]
  4128d0:	lea    r8,[rbx+0x28]
  4128d4:	mov    rdx,QWORD PTR [rax]
  4128d7:	mov    QWORD PTR [rdx+0x8],rbp
  4128db:	mov    rdx,QWORD PTR [rax]
  4128de:	mov    QWORD PTR [rdx+0x10],rbx
  4128e2:	mov    rax,QWORD PTR [rax]
  4128e5:	mov    edx,0x8
  4128ea:	mov    QWORD PTR [rbp+0x108],rax
  4128f1:	mov    eax,DWORD PTR [rbx+0x28]
  4128f4:	lea    r9d,[rax+0x1]
  4128f8:	call   0x407950
  4128fd:	mov    ecx,0x20
  412902:	mov    rbp,rax
  412905:	mov    QWORD PTR [rbx+0x20],rax
  412909:	call   0x422670
  41290e:	test   rax,rax
  412911:	mov    QWORD PTR [rbp+0x0],rax
  412915:	je     0x41299f
  41291b:	mov    rax,QWORD PTR [rbx+0x20]
  41291f:	mov    rcx,QWORD PTR [rsi+0x120]
  412926:	lea    r8,[rsi+0x128]
  41292d:	mov    rdx,QWORD PTR [rax]
  412930:	mov    QWORD PTR [rdx+0x8],rsi
  412934:	mov    rax,QWORD PTR [rax]
  412937:	mov    edx,0x8
  41293c:	mov    QWORD PTR [rax+0x10],rbx
  412940:	mov    eax,DWORD PTR [rsi+0x128]
  412946:	lea    r9d,[rax+0x1]
  41294a:	call   0x407950
  41294f:	mov    rdx,QWORD PTR [rbx+0x20]
  412953:	mov    QWORD PTR [rsi+0x120],rax
  41295a:	mov    r8,rdi
  41295d:	mov    rcx,QWORD PTR [rdx]
  412960:	movsxd rdx,DWORD PTR [rsi+0x128]
  412967:	mov    rsi,QWORD PTR [rip+0x2ae22]        # 0x43d790
  41296e:	mov    QWORD PTR [rax+rdx*8-0x8],rcx
  412973:	mov    eax,DWORD PTR [rdi]
  412975:	mov    edx,0x8
  41297a:	mov    rcx,QWORD PTR [rsi]
  41297d:	lea    r9d,[rax+0x1]
  412981:	call   0x407950
  412986:	movsxd rdx,DWORD PTR [rdi]
  412989:	mov    QWORD PTR [rsi],rax
  41298c:	mov    QWORD PTR [rax+rdx*8-0x8],rbx
  412991:	mov    rax,rbx
  412994:	add    rsp,0x20
  412998:	pop    rbx
  412999:	pop    rsi
  41299a:	pop    rdi
  41299b:	pop    rbp
  41299c:	pop    r12
  41299e:	ret    
  41299f:	mov    ecx,0x1
  4129a4:	call   0x401cb0
  4129a9:	nop
  4129aa:	nop    WORD PTR [rax+rax*1+0x0]
  4129b0:	push   r15
  4129b2:	push   r14
  4129b4:	push   r13
  4129b6:	push   r12
  4129b8:	push   rbp
  4129b9:	push   rdi
  4129ba:	push   rsi
  4129bb:	push   rbx
  4129bc:	sub    rsp,0x78
  4129c0:	mov    rbx,rcx
  4129c3:	call   0x4220f8
  4129c8:	test   rax,rax
  4129cb:	mov    QWORD PTR [rsp+0x60],rax
  4129d0:	je     0x412d72
  4129d6:	lea    rdi,[rsp+0x50]
  4129db:	mov    rdx,QWORD PTR [rbx+0x8]
  4129df:	lea    r9,[rsp+0x58]
  4129e4:	mov    rcx,rax
  4129e7:	mov    r8,rdi
  4129ea:	mov    QWORD PTR [rsp+0x48],rdi
  4129ef:	call   0x4220d0
  4129f4:	test   eax,eax
  4129f6:	mov    DWORD PTR [rsp+0x44],eax
  4129fa:	js     0x412ccf
  412a00:	mov    rdi,QWORD PTR [rsp+0x50]
  412a05:	test   rdi,rdi
  412a08:	je     0x412c21
  412a0e:	lea    rax,[rsp+0x68]
  412a13:	mov    r12,QWORD PTR [rip+0x2adc6]        # 0x43d7e0
  412a1a:	mov    QWORD PTR [rsp+0x30],rax
  412a1f:	mov    rax,QWORD PTR [rip+0x2adca]        # 0x43d7f0
  412a26:	mov    QWORD PTR [rsp+0x38],rax
  412a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  412a30:	mov    rax,QWORD PTR [rdi+0x8]
  412a34:	mov    edx,DWORD PTR [rdi+0x10]
  412a37:	mov    rcx,QWORD PTR [rax+0x18]
  412a3b:	call   0x422070
  412a40:	cmp    eax,0x1
  412a43:	mov    r14d,eax
  412a46:	ja     0x412dc3
  412a4c:	mov    rcx,QWORD PTR [rdi]
  412a4f:	test   rcx,rcx
  412a52:	je     0x412b20
  412a58:	mov    rdx,QWORD PTR [rsp+0x30]
  412a5d:	xor    r8d,r8d
  412a60:	call   0x42faa8
  412a65:	test   eax,eax
  412a67:	js     0x412dae
  412a6d:	mov    rsi,QWORD PTR [rip+0x2ae0c]        # 0x43d880
  412a74:	cmp    eax,DWORD PTR [rsi]
  412a76:	jge    0x412dae
  412a7c:	movsxd r15,eax
  412a7f:	mov    rax,QWORD PTR [r12]
  412a83:	mov    rax,QWORD PTR [rax+r15*8]
  412a87:	mov    r13,QWORD PTR [rax]
  412a8a:	mov    ecx,DWORD PTR [r13+0x2c]
  412a8e:	test   ecx,ecx
  412a90:	je     0x412aec
  412a92:	xor    esi,esi
  412a94:	mov    rax,QWORD PTR [r13+0x30]
  412a98:	lea    rbp,[rsi*8+0x0]
  412aa0:	mov    rdx,QWORD PTR [rax+rsi*8]
  412aa4:	mov    rax,QWORD PTR [rdx+0x8]
  412aa8:	mov    eax,DWORD PTR [rax+0xc]
  412aab:	cmp    r14d,eax
  412aae:	je     0x412aba
  412ab0:	test   r14d,r14d
  412ab3:	jne    0x412ae1
  412ab5:	cmp    eax,0x3
  412ab8:	jne    0x412ae1
  412aba:	mov    rax,QWORD PTR [rsp+0x68]
  412abf:	xor    r8d,r8d
  412ac2:	mov    rcx,r13
  412ac5:	cmp    BYTE PTR [rax],0x3a
  412ac8:	sete   r8b
  412acc:	add    r8,rax
  412acf:	call   0x4075b0
  412ad4:	cmp    eax,0x1
  412ad7:	je     0x412d00
  412add:	mov    ecx,DWORD PTR [r13+0x2c]
  412ae1:	lea    eax,[rsi+0x1]
  412ae4:	add    rsi,0x1
  412ae8:	cmp    eax,ecx
  412aea:	jb     0x412a94
  412aec:	mov    rax,QWORD PTR [rbx+0x8]
  412af0:	mov    r9,QWORD PTR [rsp+0x68]
  412af5:	lea    r8,[rip+0x26d84]        # 0x439880
  412afc:	xor    ecx,ecx
  412afe:	mov    edx,0x8
  412b03:	mov    QWORD PTR [rsp+0x20],rax
  412b08:	call   0x4226c0
  412b0d:	mov    ecx,0x1
  412b12:	call   0x401cb0
  412b17:	nop    WORD PTR [rax+rax*1+0x0]
  412b20:	mov    rax,QWORD PTR [rip+0x2ad69]        # 0x43d890
  412b27:	mov    r8d,DWORD PTR [rax]
  412b2a:	cmp    r8d,0x0
  412b2e:	jle    0x412d40
  412b34:	mov    rax,QWORD PTR [rsp+0x38]
  412b39:	xor    ecx,ecx
  412b3b:	mov    rax,QWORD PTR [rax]
  412b3e:	jmp    0x412b50
  412b40:	add    ecx,0x1
  412b43:	add    rax,0x8
  412b47:	cmp    ecx,r8d
  412b4a:	je     0x412d80
  412b50:	mov    rsi,QWORD PTR [rax]
  412b53:	mov    rdx,QWORD PTR [rsi+0x20]
  412b57:	cmp    r14d,DWORD PTR [rdx+0xc]
  412b5b:	jne    0x412b40
  412b5d:	mov    edx,DWORD PTR [rsi+0x10]
  412b60:	test   edx,edx
  412b62:	je     0x412b40
  412b64:	mov    rax,QWORD PTR [rsi+0x8]
  412b68:	or     DWORD PTR [rsi+0x18],0x2
  412b6c:	lea    r8,[rbx+0x28]
  412b70:	mov    DWORD PTR [rsi+0x10],0x0
  412b77:	mov    rcx,QWORD PTR [rbx+0x20]
  412b7b:	mov    edx,0x8
  412b80:	mov    DWORD PTR [rax+0x54],0xfffffff0
  412b87:	mov    eax,DWORD PTR [rbx+0x28]
  412b8a:	lea    r9d,[rax+0x1]
  412b8e:	call   0x407950
  412b93:	movsxd rdx,DWORD PTR [rbx+0x28]
  412b97:	mov    QWORD PTR [rbx+0x20],rax
  412b9b:	mov    ecx,0x20
  412ba0:	lea    rbp,[rax+rdx*8-0x8]
  412ba5:	call   0x422670
  412baa:	test   rax,rax
  412bad:	mov    QWORD PTR [rbp+0x0],rax
  412bb1:	je     0x412da4
  412bb7:	movsxd rdx,DWORD PTR [rbx+0x28]
  412bbb:	mov    rax,QWORD PTR [rbx+0x20]
  412bbf:	lea    r8,[rsi+0x128]
  412bc6:	mov    rcx,QWORD PTR [rsi+0x120]
  412bcd:	lea    rax,[rax+rdx*8-0x8]
  412bd2:	mov    rdx,QWORD PTR [rax]
  412bd5:	mov    QWORD PTR [rdx+0x8],rsi
  412bd9:	mov    rax,QWORD PTR [rax]
  412bdc:	mov    edx,0x8
  412be1:	mov    QWORD PTR [rax+0x10],rbx
  412be5:	mov    eax,DWORD PTR [rsi+0x128]
  412beb:	lea    r9d,[rax+0x1]
  412bef:	call   0x407950
  412bf4:	movsxd rcx,DWORD PTR [rbx+0x28]
  412bf8:	mov    rdx,QWORD PTR [rbx+0x20]
  412bfc:	mov    QWORD PTR [rsi+0x120],rax
  412c03:	mov    rcx,QWORD PTR [rdx+rcx*8-0x8]
  412c08:	movsxd rdx,DWORD PTR [rsi+0x128]
  412c0f:	mov    QWORD PTR [rax+rdx*8-0x8],rcx
  412c14:	mov    rdi,QWORD PTR [rdi+0x18]
  412c18:	test   rdi,rdi
  412c1b:	jne    0x412a30
  412c21:	mov    rsi,QWORD PTR [rsp+0x58]
  412c26:	test   rsi,rsi
  412c29:	je     0x412ccf
  412c2f:	mov    r9d,DWORD PTR [rbx+0x38]
  412c33:	mov    rcx,QWORD PTR [rbx+0x30]
  412c37:	lea    rdi,[rbx+0x38]
  412c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  412c40:	add    r9d,0x1
  412c44:	mov    r8,rdi
  412c47:	mov    edx,0x8
  412c4c:	call   0x407950
  412c51:	movsxd rdx,DWORD PTR [rbx+0x38]
  412c55:	mov    QWORD PTR [rbx+0x30],rax
  412c59:	mov    ecx,0x30
  412c5e:	lea    rbp,[rax+rdx*8-0x8]
  412c63:	call   0x422670
  412c68:	movsxd rdx,DWORD PTR [rbx+0x38]
  412c6c:	mov    QWORD PTR [rbp+0x0],rax
  412c70:	mov    rax,QWORD PTR [rbx+0x30]
  412c74:	lea    rax,[rax+rdx*8-0x8]
  412c79:	mov    rdx,QWORD PTR [rax]
  412c7c:	test   rdx,rdx
  412c7f:	je     0x412da4
  412c85:	mov    QWORD PTR [rdx+0x10],rbx
  412c89:	mov    rdx,QWORD PTR [rax]
  412c8c:	mov    QWORD PTR [rdx+0x20],rsi
  412c90:	mov    rbp,QWORD PTR [rax]
  412c93:	mov    rax,QWORD PTR [rsi+0x8]
  412c97:	mov    edx,DWORD PTR [rsi+0x10]
  412c9a:	mov    rcx,QWORD PTR [rax+0x30]
  412c9e:	call   0x422070
  412ca3:	mov    DWORD PTR [rbp+0x28],eax
  412ca6:	movsxd rax,DWORD PTR [rbx+0x38]
  412caa:	mov    rcx,QWORD PTR [rbx+0x30]
  412cae:	mov    rsi,QWORD PTR [rsi+0x18]
  412cb2:	mov    r9,rax
  412cb5:	mov    rax,QWORD PTR [rcx+rax*8-0x8]
  412cba:	test   rsi,rsi
  412cbd:	mov    rax,QWORD PTR [rax+0x20]
  412cc1:	mov    QWORD PTR [rax+0x18],0x0
  412cc9:	jne    0x412c40
  412ccf:	mov    rcx,QWORD PTR [rsp+0x48]
  412cd4:	call   0x4220a0
  412cd9:	lea    rcx,[rsp+0x60]
  412cde:	call   0x4220d8
  412ce3:	mov    eax,DWORD PTR [rsp+0x44]
  412ce7:	add    rsp,0x78
  412ceb:	pop    rbx
  412cec:	pop    rsi
  412ced:	pop    rdi
  412cee:	pop    rbp
  412cef:	pop    r12
  412cf1:	pop    r13
  412cf3:	pop    r14
  412cf5:	pop    r15
  412cf7:	ret    
  412cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  412d00:	mov    rax,QWORD PTR [r13+0x30]
  412d04:	mov    rcx,QWORD PTR [rax+rbp*1]
  412d08:	test   rcx,rcx
  412d0b:	je     0x412aec
  412d11:	mov    rax,QWORD PTR [r12]
  412d15:	mov    rsi,QWORD PTR [rip+0x2aad4]        # 0x43d7f0
  412d1c:	mov    rdx,QWORD PTR [rax+r15*8]
  412d20:	mov    eax,DWORD PTR [rcx]
  412d22:	add    eax,DWORD PTR [rdx+0x10]
  412d25:	mov    rdx,QWORD PTR [rsi]
  412d28:	cdqe   
  412d2a:	mov    rsi,QWORD PTR [rdx+rax*8]
  412d2e:	test   rsi,rsi
  412d31:	jne    0x412b64
  412d37:	jmp    0x412d42
  412d39:	nop    DWORD PTR [rax+0x0]
  412d40:	je     0x412d80
  412d42:	lea    rax,[rip+0x26bf0]        # 0x439939
  412d49:	lea    r9,[rip+0x26bc7]        # 0x439917
  412d50:	lea    r8,[rip+0x26bc4]        # 0x43991b
  412d57:	xor    edx,edx
  412d59:	xor    ecx,ecx
  412d5b:	mov    DWORD PTR [rsp+0x28],0x114
  412d63:	mov    QWORD PTR [rsp+0x20],rax
  412d68:	call   0x4226c0
  412d6d:	call   0x42fbf8
  412d72:	mov    eax,0xfffffff4
  412d77:	jmp    0x412ce7
  412d7c:	nop    DWORD PTR [rax+0x0]
  412d80:	mov    rax,QWORD PTR [rdi+0x8]
  412d84:	lea    r8,[rip+0x26b45]        # 0x4398d0
  412d8b:	mov    r9d,DWORD PTR [rdi+0x10]
  412d8f:	mov    rax,QWORD PTR [rax+0x10]
  412d93:	mov    QWORD PTR [rsp+0x20],rax
  412d98:	mov    edx,0x8
  412d9d:	xor    ecx,ecx
  412d9f:	call   0x4226c0
  412da4:	mov    ecx,0x1
  412da9:	call   0x401cb0
  412dae:	mov    rdx,QWORD PTR [rbx+0x8]
  412db2:	mov    r9d,eax
  412db5:	lea    r8,[rip+0x26a8c]        # 0x439848
  412dbc:	mov    QWORD PTR [rsp+0x20],rdx
  412dc1:	jmp    0x412d98
  412dc3:	lea    r8,[rip+0x26a46]        # 0x439810
  412dca:	xor    ecx,ecx
  412dcc:	mov    edx,0x8
  412dd1:	call   0x4226c0
  412dd6:	mov    ecx,0x1
  412ddb:	call   0x401cb0
  412de0:	nop
  412de1:	nop    DWORD PTR [rax+rax*1+0x0]
  412de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412df0:	push   r14
  412df2:	push   r13
  412df4:	push   r12
  412df6:	push   rbp
  412df7:	push   rdi
  412df8:	push   rsi
  412df9:	push   rbx
  412dfa:	sub    rsp,0x40
  412dfe:	lea    rbp,[rdx+0x18]
  412e02:	mov    rbx,r8
  412e05:	mov    r12,rcx
  412e08:	mov    rdi,rdx
  412e0b:	mov    rcx,rbp
  412e0e:	call   0x422768
  412e13:	mov    rsi,QWORD PTR [rbx+0x8]
  412e17:	lea    rcx,[rsp+0x38]
  412e1c:	mov    r14,QWORD PTR [rsi+0x30]
  412e20:	mov    r13d,DWORD PTR [rsi+0x44]
  412e24:	call   0x422180
  412e29:	test   eax,eax
  412e2b:	js     0x412f3b
  412e31:	mov    rax,QWORD PTR [rsi+0x8]
  412e35:	mov    rcx,QWORD PTR [rsp+0x38]
  412e3a:	lea    rdx,[rip+0x2682c]        # 0x43966d
  412e41:	mov    r8,QWORD PTR [rax]
  412e44:	call   0x422178
  412e49:	cmp    r13d,0x1
  412e4d:	jle    0x412e6e
  412e4f:	mov    edx,DWORD PTR [rbx+0x10]
  412e52:	mov    rcx,r14
  412e55:	call   0x422078
  412e5a:	mov    rcx,QWORD PTR [rsp+0x38]
  412e5f:	lea    rdx,[rip+0x26ae3]        # 0x439949
  412e66:	mov    r8,rax
  412e69:	call   0x422178
  412e6e:	mov    rcx,QWORD PTR [rsp+0x38]
  412e73:	xor    edx,edx
  412e75:	call   0x422150
  412e7a:	mov    rcx,QWORD PTR [rsp+0x38]
  412e7f:	mov    rdx,rbp
  412e82:	call   0x4221b8
  412e87:	cmp    QWORD PTR [rdi+0x8],0x0
  412e8c:	je     0x412f24
  412e92:	mov    rax,QWORD PTR [rbx+0x8]
  412e96:	mov    edx,DWORD PTR [rbx+0x10]
  412e99:	mov    rcx,QWORD PTR [rax+0x30]
  412e9d:	call   0x422070
  412ea2:	test   eax,eax
  412ea4:	je     0x412f00
  412ea6:	cmp    eax,0x1
  412ea9:	jne    0x412ed0
  412eab:	mov    r9d,DWORD PTR [rbx+0x10]
  412eaf:	mov    r8,QWORD PTR [rbx+0x8]
  412eb3:	lea    rcx,[r12+0x10]
  412eb8:	mov    rdx,rdi
  412ebb:	call   0x411960
  412ec0:	add    rsp,0x40
  412ec4:	pop    rbx
  412ec5:	pop    rsi
  412ec6:	pop    rdi
  412ec7:	pop    rbp
  412ec8:	pop    r12
  412eca:	pop    r13
  412ecc:	pop    r14
  412ece:	ret    
  412ecf:	nop
  412ed0:	lea    rax,[rip+0x26a62]        # 0x439939
  412ed7:	lea    r9,[rip+0x26a96]        # 0x439974
  412ede:	lea    r8,[rip+0x26a36]        # 0x43991b
  412ee5:	xor    edx,edx
  412ee7:	xor    ecx,ecx
  412ee9:	mov    DWORD PTR [rsp+0x28],0x292
  412ef1:	mov    QWORD PTR [rsp+0x20],rax
  412ef6:	call   0x4226c0
  412efb:	call   0x42fbf8
  412f00:	mov    r9d,DWORD PTR [rbx+0x10]
  412f04:	mov    r8,QWORD PTR [rbx+0x8]
  412f08:	lea    rcx,[r12+0x10]
  412f0d:	mov    rdx,rdi
  412f10:	call   0x412280
  412f15:	add    rsp,0x40
  412f19:	pop    rbx
  412f1a:	pop    rsi
  412f1b:	pop    rdi
  412f1c:	pop    rbp
  412f1d:	pop    r12
  412f1f:	pop    r13
  412f21:	pop    r14
  412f23:	ret    
  412f24:	mov    r9,QWORD PTR [rdi+0x18]
  412f28:	lea    r8,[rip+0x26a21]        # 0x439950
  412f2f:	mov    edx,0x8
  412f34:	xor    ecx,ecx
  412f36:	call   0x4226c0
  412f3b:	mov    ecx,0x1
  412f40:	call   0x401cb0
  412f45:	nop
  412f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f50:	push   r15
  412f52:	push   r14
  412f54:	push   r13
  412f56:	push   r12
  412f58:	push   rbp
  412f59:	push   rdi
  412f5a:	push   rsi
  412f5b:	push   rbx
  412f5c:	sub    rsp,0x6d8
  412f63:	movaps XMMWORD PTR [rsp+0x6b0],xmm6
  412f6b:	movaps XMMWORD PTR [rsp+0x6c0],xmm7
  412f73:	mov    rbx,rcx
  412f76:	mov    rsi,QWORD PTR [rcx+0x8]
  412f7a:	test   rsi,rsi
  412f7d:	jne    0x4132e0
  412f83:	mov    rax,QWORD PTR [rcx+0x30]
  412f87:	lea    rcx,[rcx+0x10]
  412f8b:	mov    rax,QWORD PTR [rax]
  412f8e:	mov    rax,QWORD PTR [rax+0x8]
  412f92:	mov    rdi,QWORD PTR [rax+0x110]
  412f99:	call   0x4220d8
  412f9e:	call   0x4220f8
  412fa3:	test   rax,rax
  412fa6:	mov    QWORD PTR [rbx+0x10],rax
  412faa:	je     0x414119
  412fb0:	mov    rax,QWORD PTR [rbx+0x30]
  412fb4:	xor    esi,esi
  412fb6:	lea    r15,[rsp+0x2b0]
  412fbe:	mov    rax,QWORD PTR [rax]
  412fc1:	mov    rbp,QWORD PTR [rax+0x8]
  412fc5:	mov    BYTE PTR [rsp+0x2b0],0x0
  412fcd:	jmp    0x412ff0
  412fcf:	nop
  412fd0:	mov    rax,QWORD PTR [rsi+0x8]
  412fd4:	lea    r8,[rip+0x269a0]        # 0x43997b
  412fdb:	mov    edx,0x200
  412fe0:	mov    rcx,r15
  412fe3:	mov    QWORD PTR [rsp+0x20],rax
  412fe8:	mov    r9,QWORD PTR [rsi]
  412feb:	call   0x422560
  412ff0:	mov    rcx,QWORD PTR [rbp+0x130]
  412ff7:	lea    rdx,[rip+0x26735]        # 0x439733
  412ffe:	mov    r8,rsi
  413001:	mov    r9d,0x2
  413007:	call   0x422818
  41300c:	test   rax,rax
  41300f:	mov    rsi,rax
  413012:	jne    0x412fd0
  413014:	cmp    BYTE PTR [rsp+0x2b0],0x0
  41301c:	je     0x41305e
  41301e:	mov    rdx,r15
  413021:	mov    ecx,DWORD PTR [rdx]
  413023:	add    rdx,0x4
  413027:	lea    eax,[rcx-0x1010101]
  41302d:	not    ecx
  41302f:	and    eax,ecx
  413031:	and    eax,0x80808080
  413036:	je     0x413021
  413038:	mov    ecx,eax
  41303a:	shr    ecx,0x10
  41303d:	test   eax,0x8080
  413042:	cmove  eax,ecx
  413045:	lea    rcx,[rdx+0x2]
  413049:	cmove  rdx,rcx
  41304d:	add    al,al
  41304f:	sbb    rdx,0x3
  413053:	sub    rdx,r15
  413056:	mov    BYTE PTR [rsp+rdx*1+0x2af],0x0
  41305e:	mov    r12,QWORD PTR [rbx+0x10]
  413062:	mov    rcx,r15
  413065:	call   0x422578
  41306a:	mov    QWORD PTR [r12+0x18],rax
  41306f:	mov    BYTE PTR [rsp+0x2b0],0x0
  413077:	jmp    0x4130a0
  413079:	nop    DWORD PTR [rax+0x0]
  413080:	mov    rax,QWORD PTR [rsi+0x8]
  413084:	lea    r8,[rip+0x268f0]        # 0x43997b
  41308b:	mov    edx,0x200
  413090:	mov    rcx,r15
  413093:	mov    QWORD PTR [rsp+0x20],rax
  413098:	mov    r9,QWORD PTR [rsi]
  41309b:	call   0x422560
  4130a0:	mov    rcx,QWORD PTR [rbp+0x138]
  4130a7:	lea    rdx,[rip+0x26685]        # 0x439733
  4130ae:	mov    r8,rsi
  4130b1:	mov    r9d,0x2
  4130b7:	call   0x422818
  4130bc:	test   rax,rax
  4130bf:	mov    rsi,rax
  4130c2:	jne    0x413080
  4130c4:	cmp    BYTE PTR [rsp+0x2b0],0x0
  4130cc:	je     0x41310e
  4130ce:	mov    rdx,r15
  4130d1:	mov    ecx,DWORD PTR [rdx]
  4130d3:	add    rdx,0x4
  4130d7:	lea    eax,[rcx-0x1010101]
  4130dd:	not    ecx
  4130df:	and    eax,ecx
  4130e1:	and    eax,0x80808080
  4130e6:	je     0x4130d1
  4130e8:	mov    ecx,eax
  4130ea:	shr    ecx,0x10
  4130ed:	test   eax,0x8080
  4130f2:	cmove  eax,ecx
  4130f5:	lea    rcx,[rdx+0x2]
  4130f9:	cmove  rdx,rcx
  4130fd:	add    al,al
  4130ff:	sbb    rdx,0x3
  413103:	sub    rdx,r15
  413106:	mov    BYTE PTR [rsp+rdx*1+0x2af],0x0
  41310e:	mov    rcx,QWORD PTR [rbx+0x10]
  413112:	lea    rdx,[rip+0x26869]        # 0x439982
  413119:	xor    r9d,r9d
  41311c:	mov    r8,r15
  41311f:	call   0x422620
  413124:	mov    BYTE PTR [rsp+0x2b0],0x0
  41312c:	jmp    0x413150
  41312e:	xchg   ax,ax
  413130:	mov    rax,QWORD PTR [rsi+0x8]
  413134:	lea    r8,[rip+0x26840]        # 0x43997b
  41313b:	mov    edx,0x200
  413140:	mov    rcx,r15
  413143:	mov    QWORD PTR [rsp+0x20],rax
  413148:	mov    r9,QWORD PTR [rsi]
  41314b:	call   0x422560
  413150:	mov    rax,QWORD PTR [rbx+0x30]
  413154:	lea    rdx,[rip+0x265d8]        # 0x439733
  41315b:	mov    r8,rsi
  41315e:	mov    r9d,0x2
  413164:	mov    rax,QWORD PTR [rax]
  413167:	mov    rax,QWORD PTR [rax+0x8]
  41316b:	mov    rcx,QWORD PTR [rax+0x140]
  413172:	call   0x422818
  413177:	test   rax,rax
  41317a:	mov    rsi,rax
  41317d:	jne    0x413130
  41317f:	cmp    BYTE PTR [rsp+0x2b0],0x0
  413187:	je     0x4131c9
  413189:	mov    rdx,r15
  41318c:	mov    ecx,DWORD PTR [rdx]
  41318e:	add    rdx,0x4
  413192:	lea    eax,[rcx-0x1010101]
  413198:	not    ecx
  41319a:	and    eax,ecx
  41319c:	and    eax,0x80808080
  4131a1:	je     0x41318c
  4131a3:	mov    ecx,eax
  4131a5:	shr    ecx,0x10
  4131a8:	test   eax,0x8080
  4131ad:	cmove  eax,ecx
  4131b0:	lea    rcx,[rdx+0x2]
  4131b4:	cmove  rdx,rcx
  4131b8:	add    al,al
  4131ba:	sbb    rdx,0x3
  4131be:	sub    rdx,r15
  4131c1:	mov    BYTE PTR [rsp+rdx*1+0x2af],0x0
  4131c9:	mov    rsi,QWORD PTR [rbx+0x10]
  4131cd:	mov    rcx,r15
  4131d0:	call   0x422578
  4131d5:	mov    rcx,QWORD PTR [rbp+0x128]
  4131dc:	lea    rdx,[rip+0x267b2]        # 0x439995
  4131e3:	xor    r9d,r9d
  4131e6:	xor    r8d,r8d
  4131e9:	mov    QWORD PTR [rsi+0x20],rax
  4131ed:	call   0x422818
  4131f2:	test   rax,rax
  4131f5:	je     0x41320e
  4131f7:	mov    rcx,QWORD PTR [rbx+0x10]
  4131fb:	mov    r8,QWORD PTR [rax+0x8]
  4131ff:	lea    rdx,[rip+0x2678f]        # 0x439995
  413206:	xor    r9d,r9d
  413209:	call   0x422620
  41320e:	lea    rax,[rsp+0x98]
  413216:	lea    rdx,[rsp+0x90]
  41321e:	mov    rcx,QWORD PTR [rbx+0x10]
  413222:	mov    QWORD PTR [rsp+0x58],rdx
  413227:	mov    r8,rdx
  41322a:	mov    r9,rax
  41322d:	mov    rdx,rdi
  413230:	mov    QWORD PTR [rsp+0x60],rax
  413235:	call   0x4220d0
  41323a:	test   eax,eax
  41323c:	js     0x4132b9
  41323e:	mov    r14,QWORD PTR [rsp+0x90]
  413246:	mov    rax,QWORD PTR [rsp+0x98]
  41324e:	test   r14,r14
  413251:	je     0x4143f3
  413257:	cmp    QWORD PTR [r14+0x18],0x0
  41325c:	jne    0x413f80
  413262:	test   rax,rax
  413265:	je     0x41441b
  41326b:	cmp    QWORD PTR [rax+0x18],0x0
  413270:	je     0x413343
  413276:	lea    rdx,[rip+0x266f9]        # 0x439976
  41327d:	cmp    QWORD PTR [r14+0x18],0x0
  413282:	lea    rcx,[rip+0x266f0]        # 0x439979
  413289:	lea    rax,[rip+0x266e6]        # 0x439976
  413290:	cmove  rax,rcx
  413294:	lea    r8,[rip+0x26705]        # 0x4399a0
  41329b:	mov    QWORD PTR [rsp+0x28],rdx
  4132a0:	mov    QWORD PTR [rsp+0x20],rax
  4132a5:	mov    r9,rdi
  4132a8:	mov    edx,0x10
  4132ad:	xor    ecx,ecx
  4132af:	call   0x4226c0
  4132b4:	mov    eax,0xffffffea
  4132b9:	movaps xmm6,XMMWORD PTR [rsp+0x6b0]
  4132c1:	movaps xmm7,XMMWORD PTR [rsp+0x6c0]
  4132c9:	add    rsp,0x6d8
  4132d0:	pop    rbx
  4132d1:	pop    rsi
  4132d2:	pop    rdi
  4132d3:	pop    rbp
  4132d4:	pop    r12
  4132d6:	pop    r13
  4132d8:	pop    r14
  4132da:	pop    r15
  4132dc:	ret    
  4132dd:	nop    DWORD PTR [rax]
  4132e0:	lea    rcx,[rcx+0x10]
  4132e4:	call   0x4220d8
  4132e9:	call   0x4220f8
  4132ee:	test   rax,rax
  4132f1:	mov    QWORD PTR [rbx+0x10],rax
  4132f5:	je     0x414119
  4132fb:	lea    rdx,[rsp+0x90]
  413303:	lea    rdi,[rsp+0x98]
  41330b:	mov    rcx,rax
  41330e:	mov    QWORD PTR [rsp+0x58],rdx
  413313:	mov    r8,rdx
  413316:	mov    r9,rdi
  413319:	mov    rdx,rsi
  41331c:	mov    QWORD PTR [rsp+0x60],rdi
  413321:	call   0x4220d0
  413326:	test   eax,eax
  413328:	js     0x4132b9
  41332a:	mov    r14,QWORD PTR [rsp+0x90]
  413332:	lea    r15,[rsp+0x2b0]
  41333a:	test   r14,r14
  41333d:	je     0x41383d
  413343:	movsd  xmm7,QWORD PTR [rip+0x26ad5]        # 0x439e20
  41334b:	xor    ebp,ebp
  41334d:	movsd  xmm6,QWORD PTR [rip+0x26adb]        # 0x439e30
  413355:	mov    rax,QWORD PTR [rbx+0x20]
  413359:	mov    rsi,QWORD PTR [rax+rbp*1]
  41335d:	lea    rdi,[rsi+0x18]
  413361:	mov    rcx,rdi
  413364:	call   0x422768
  413369:	mov    r13,QWORD PTR [r14+0x8]
  41336d:	mov    rcx,r15
  413370:	mov    rax,QWORD PTR [r13+0x18]
  413374:	mov    r12d,DWORD PTR [r13+0x2c]
  413378:	mov    QWORD PTR [rsp+0x50],rax
  41337d:	call   0x422180
  413382:	test   eax,eax
  413384:	js     0x414440
  41338a:	mov    rax,QWORD PTR [r13+0x8]
  41338e:	mov    rcx,QWORD PTR [rsp+0x2b0]
  413396:	lea    rdx,[rip+0x262d0]        # 0x43966d
  41339d:	mov    r8,QWORD PTR [rax]
  4133a0:	call   0x422178
  4133a5:	cmp    r12d,0x1
  4133a9:	jle    0x4133d0
  4133ab:	mov    edx,DWORD PTR [r14+0x10]
  4133af:	mov    rcx,QWORD PTR [rsp+0x50]
  4133b4:	call   0x422078
  4133b9:	mov    rcx,QWORD PTR [rsp+0x2b0]
  4133c1:	lea    rdx,[rip+0x26581]        # 0x439949
  4133c8:	mov    r8,rax
  4133cb:	call   0x422178
  4133d0:	mov    rcx,QWORD PTR [rsp+0x2b0]
  4133d8:	xor    edx,edx
  4133da:	call   0x422150
  4133df:	mov    rcx,QWORD PTR [rsp+0x2b0]
  4133e7:	mov    rdx,rdi
  4133ea:	call   0x4221b8
  4133ef:	mov    rax,QWORD PTR [rsi+0x8]
  4133f3:	cmp    QWORD PTR [rax+0x28],0x0
  4133f8:	je     0x4143ac
  4133fe:	mov    rax,QWORD PTR [r14+0x8]
  413402:	mov    edx,DWORD PTR [r14+0x10]
  413406:	mov    rcx,QWORD PTR [rax+0x18]
  41340a:	call   0x422070
  41340f:	test   eax,eax
  413411:	je     0x413932
  413417:	cmp    eax,0x1
  41341a:	jne    0x413902
  413420:	lea    rcx,[rip+0x26807]        # 0x439c2e
  413427:	call   0x422108
  41342c:	mov    r13,QWORD PTR [rsi+0x8]
  413430:	mov    rdi,rax
  413433:	mov    rax,QWORD PTR [rip+0x2a3a6]        # 0x43d7e0
  41343a:	movsxd rdx,DWORD PTR [r13+0x0]
  41343e:	mov    rax,QWORD PTR [rax]
  413441:	mov    rax,QWORD PTR [rax+rdx*8]
  413445:	mov    DWORD PTR [rsp+0x8c],0x0
  413450:	mov    QWORD PTR [rsp+0x50],rax
  413455:	mov    rax,QWORD PTR [r13+0x20]
  413459:	cmp    DWORD PTR [rax+0xc],0x1
  41345d:	jne    0x41403b
  413463:	xor    edx,edx
  413465:	mov    r8d,0x1
  41346b:	mov    rcx,r15
  41346e:	call   0x422860
  413473:	mov    rax,QWORD PTR [r13+0x20]
  413477:	mov    ecx,DWORD PTR [rax+0x1d8]
  41347d:	call   0x4226f0
  413482:	mov    rdx,QWORD PTR [r13+0x20]
  413486:	mov    r8d,0x1
  41348c:	mov    rcx,r15
  41348f:	mov    r9d,DWORD PTR [rdx+0x1d0]
  413496:	lea    rdx,[rip+0x267cb]        # 0x439c68
  41349d:	mov    QWORD PTR [rsp+0x28],rax
  4134a2:	mov    DWORD PTR [rsp+0x20],r9d
  4134a7:	call   0x422858
  4134ac:	mov    rax,QWORD PTR [r13+0x20]
  4134b0:	mov    r8,QWORD PTR [rax+0x1f0]
  4134b7:	test   r8,r8
  4134ba:	je     0x413c80
  4134c0:	lea    rdx,[rip+0x267ce]        # 0x439c95
  4134c7:	mov    rcx,r15
  4134ca:	call   0x422858
  4134cf:	mov    rax,QWORD PTR [r13+0x8]
  4134d3:	lea    r12,[rsp+0xb0]
  4134db:	mov    r9d,DWORD PTR [rbx]
  4134de:	lea    r8,[rip+0x2667b]        # 0x439b60
  4134e5:	mov    edx,0xff
  4134ea:	mov    rcx,r12
  4134ed:	mov    eax,DWORD PTR [rax]
  4134ef:	mov    DWORD PTR [rsp+0x28],eax
  4134f3:	mov    eax,DWORD PTR [r13+0x0]
  4134f7:	mov    DWORD PTR [rsp+0x20],eax
  4134fb:	call   0x411930
  413500:	mov    rax,QWORD PTR [rbx+0x10]
  413504:	mov    r9,QWORD PTR [rsp+0x2b0]
  41350c:	mov    r8,r12
  41350f:	mov    QWORD PTR [rsp+0x20],0x0
  413518:	mov    rdx,rdi
  41351b:	mov    rcx,rsi
  41351e:	mov    QWORD PTR [rsp+0x28],rax
  413523:	call   0x4220e0
  413528:	test   eax,eax
  41352a:	js     0x413824
  413530:	mov    rax,QWORD PTR [rsi]
  413533:	mov    QWORD PTR [rsp+0xa0],rax
  41353b:	mov    rax,QWORD PTR [rip+0x2a13e]        # 0x43d680
  413542:	mov    r9d,DWORD PTR [rax]
  413545:	test   r9d,r9d
  413548:	jle    0x413663
  41354e:	lea    rdi,[rsp+0x1b0]
  413556:	xor    eax,eax
  413558:	mov    ecx,0x20
  41355d:	lea    r8,[rip+0x26755]        # 0x439cb9
  413564:	mov    edx,0x100
  413569:	rep stos QWORD PTR es:[rdi],rax
  41356c:	lea    rdi,[rsp+0x1b0]
  413574:	mov    rcx,rdi
  413577:	call   0x422560
  41357c:	mov    rax,QWORD PTR [rip+0x2a0ed]        # 0x43d670
  413583:	pxor   xmm0,xmm0
  413587:	cvtss2sd xmm0,DWORD PTR [rax]
  41358b:	ucomisd xmm0,QWORD PTR [rip+0x268b5]        # 0x439e48
  413593:	jp     0x413d30
  413599:	jne    0x413d30
  41359f:	mov    esi,DWORD PTR [rbx+0x18]
  4135a2:	test   esi,esi
  4135a4:	je     0x413d10
  4135aa:	lea    r8,[rip+0x26737]        # 0x439ce8
  4135b1:	xor    ecx,ecx
  4135b3:	mov    r9,rdi
  4135b6:	mov    edx,0x20
  4135bb:	call   0x4226c0
  4135c0:	mov    rax,QWORD PTR [r13+0x8]
  4135c4:	mov    r9d,DWORD PTR [rbx]
  4135c7:	lea    r8,[rip+0x2675a]        # 0x439d28
  4135ce:	mov    edx,0xff
  4135d3:	mov    rcx,r12
  4135d6:	mov    eax,DWORD PTR [rax]
  4135d8:	mov    DWORD PTR [rsp+0x30],eax
  4135dc:	mov    eax,DWORD PTR [r13+0x0]
  4135e0:	mov    DWORD PTR [rsp+0x28],eax
  4135e4:	lea    rax,[rip+0x26760]        # 0x439d4b
  4135eb:	mov    QWORD PTR [rsp+0x20],rax
  4135f0:	call   0x411930
  4135f5:	mov    rsi,QWORD PTR [rbx+0x10]
  4135f9:	lea    rcx,[rip+0x2674b]        # 0x439d4b
  413600:	call   0x422108
  413605:	lea    rcx,[rsp+0xa8]
  41360d:	mov    QWORD PTR [rsp+0x28],rsi
  413612:	mov    QWORD PTR [rsp+0x20],0x0
  41361b:	mov    r9,rdi
  41361e:	mov    r8,r12
  413621:	mov    rdx,rax
  413624:	call   0x4220e0
  413629:	test   eax,eax
  41362b:	js     0x413824
  413631:	mov    r8,QWORD PTR [rsp+0xa8]
  413639:	mov    rcx,QWORD PTR [rsp+0xa0]
  413641:	xor    r9d,r9d
  413644:	xor    edx,edx
  413646:	call   0x422098
  41364b:	test   eax,eax
  41364d:	js     0x413824
  413653:	mov    rax,QWORD PTR [rsp+0xa8]
  41365b:	mov    QWORD PTR [rsp+0xa0],rax
  413663:	mov    rsi,QWORD PTR [rip+0x2a026]        # 0x43d690
  41366a:	cmp    DWORD PTR [rsi],0x100
  413670:	je     0x413777
  413676:	lea    r8,[rip+0x266db]        # 0x439d58
  41367d:	xor    ecx,ecx
  41367f:	mov    edx,0x18
  413684:	call   0x4226c0
  413689:	pxor   xmm0,xmm0
  41368d:	lea    r8,[rip+0x26704]        # 0x439d98
  413694:	mov    edx,0x100
  413699:	cvtsi2sd xmm0,DWORD PTR [rsi]
  41369d:	mulsd  xmm0,QWORD PTR [rip+0x267ab]        # 0x439e50
  4136a5:	lea    rsi,[rsp+0x1b0]
  4136ad:	mov    rcx,rsi
  4136b0:	movq   r9,xmm0
  4136b5:	movapd xmm3,xmm0
  4136b9:	call   0x411720
  4136be:	lea    r8,[rip+0x266db]        # 0x439da0
  4136c5:	xor    ecx,ecx
  4136c7:	mov    r9,rsi
  4136ca:	mov    edx,0x20
  4136cf:	call   0x4226c0
  4136d4:	mov    rax,QWORD PTR [r13+0x8]
  4136d8:	mov    r9d,DWORD PTR [rbx]
  4136db:	lea    r8,[rip+0x26646]        # 0x439d28
  4136e2:	mov    edx,0xff
  4136e7:	mov    rcx,r12
  4136ea:	mov    eax,DWORD PTR [rax]
  4136ec:	mov    DWORD PTR [rsp+0x30],eax
  4136f0:	mov    eax,DWORD PTR [r13+0x0]
  4136f4:	mov    DWORD PTR [rsp+0x28],eax
  4136f8:	lea    rax,[rip+0x266d9]        # 0x439dd8
  4136ff:	mov    QWORD PTR [rsp+0x20],rax
  413704:	call   0x411930
  413709:	mov    rdi,QWORD PTR [rbx+0x10]
  41370d:	lea    rcx,[rip+0x266c4]        # 0x439dd8
  413714:	call   0x422108
  413719:	lea    rcx,[rsp+0xa8]
  413721:	mov    QWORD PTR [rsp+0x28],rdi
  413726:	mov    QWORD PTR [rsp+0x20],0x0
  41372f:	mov    r9,rsi
  413732:	mov    r8,r12
  413735:	mov    rdx,rax
  413738:	call   0x4220e0
  41373d:	test   eax,eax
  41373f:	js     0x413824
  413745:	mov    r8,QWORD PTR [rsp+0xa8]
  41374d:	mov    rcx,QWORD PTR [rsp+0xa0]
  413755:	xor    r9d,r9d
  413758:	xor    edx,edx
  41375a:	call   0x422098
  41375f:	test   eax,eax
  413761:	js     0x413824
  413767:	mov    rax,QWORD PTR [rsp+0xa8]
  41376f:	mov    QWORD PTR [rsp+0xa0],rax
  413777:	mov    rax,QWORD PTR [r13+0x8]
  41377b:	lea    r8,[rip+0x26490]        # 0x439c12
  413782:	mov    edx,0xff
  413787:	mov    rcx,r12
  41378a:	mov    eax,DWORD PTR [rax]
  41378c:	mov    DWORD PTR [rsp+0x20],eax
  413790:	mov    r9d,DWORD PTR [r13+0x0]
  413794:	call   0x411930
  413799:	mov    rax,QWORD PTR [rip+0x29f50]        # 0x43d6f0
  4137a0:	mov    r11d,DWORD PTR [rax]
  4137a3:	mov    rax,QWORD PTR [rsp+0x50]
  4137a8:	test   r11d,r11d
  4137ab:	jne    0x413f20
  4137b1:	mov    rcx,QWORD PTR [rax+0x30]
  4137b5:	xor    r8d,r8d
  4137b8:	mov    rdx,QWORD PTR [rax+0x40]
  4137bc:	movabs rax,0x8000000000000000
  4137c6:	cmp    rcx,rax
  4137c9:	je     0x4137e5
  4137cb:	mov    rax,QWORD PTR [rsp+0x50]
  4137d0:	movabs rcx,0x8000000000000000
  4137da:	mov    r10d,DWORD PTR [rax+0x54]
  4137de:	test   r10d,r10d
  4137e1:	cmovne rcx,r8
  4137e5:	mov    QWORD PTR [rsp+0x20],r12
  4137ea:	lea    r9,[rsp+0x8c]
  4137f2:	lea    r8,[rsp+0xa0]
  4137fa:	call   0x411740
  4137ff:	test   eax,eax
  413801:	js     0x413824
  413803:	mov    r9d,DWORD PTR [r14+0x10]
  413807:	mov    r8,QWORD PTR [r14+0x8]
  41380b:	xor    edx,edx
  41380d:	mov    rcx,QWORD PTR [rsp+0xa0]
  413815:	call   0x422098
  41381a:	mov    edx,0x0
  41381f:	test   eax,eax
  413821:	cmovg  eax,edx
  413824:	test   eax,eax
  413826:	js     0x414123
  41382c:	mov    r14,QWORD PTR [r14+0x18]
  413830:	add    rbp,0x8
  413834:	test   r14,r14
  413837:	jne    0x413355
  41383d:	mov    rcx,QWORD PTR [rsp+0x58]
  413842:	xor    edi,edi
  413844:	call   0x4220a0
  413849:	mov    rsi,QWORD PTR [rsp+0x98]
  413851:	test   rsi,rsi
  413854:	je     0x413880
  413856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413860:	mov    rax,QWORD PTR [rbx+0x30]
  413864:	mov    r8,rsi
  413867:	mov    rcx,rbx
  41386a:	mov    rdx,QWORD PTR [rax+rdi*1]
  41386e:	add    rdi,0x8
  413872:	call   0x412df0
  413877:	mov    rsi,QWORD PTR [rsi+0x18]
  41387b:	test   rsi,rsi
  41387e:	jne    0x413860
  413880:	mov    rcx,QWORD PTR [rsp+0x60]
  413885:	call   0x4220a0
  41388a:	mov    rcx,QWORD PTR [rbx+0x10]
  41388e:	xor    edx,edx
  413890:	call   0x4220e8
  413895:	test   eax,eax
  413897:	js     0x4132b9
  41389d:	mov    ecx,DWORD PTR [rbx+0x38]
  4138a0:	xor    edi,edi
  4138a2:	xor    esi,esi
  4138a4:	mov    DWORD PTR [rbx+0x18],0x1
  4138ab:	test   ecx,ecx
  4138ad:	jg     0x4138c3
  4138af:	jmp    0x414034
  4138b4:	add    esi,0x1
  4138b7:	add    rdi,0x8
  4138bb:	cmp    esi,ecx
  4138bd:	jge    0x414034
  4138c3:	mov    rax,QWORD PTR [rbx+0x30]
  4138c7:	mov    rax,QWORD PTR [rax+rdi*1]
  4138cb:	mov    rax,QWORD PTR [rax+0x8]
  4138cf:	test   rax,rax
  4138d2:	je     0x4138b4
  4138d4:	mov    rdx,QWORD PTR [rax+0x50]
  4138d8:	cmp    DWORD PTR [rdx+0x10],0x1
  4138dc:	jne    0x4138b4
  4138de:	test   BYTE PTR [rdx+0x1a],0x1
  4138e2:	jne    0x4138b4
  4138e4:	mov    rdx,QWORD PTR [rax+0x48]
  4138e8:	mov    rax,QWORD PTR [rax+0x108]
  4138ef:	mov    edx,DWORD PTR [rdx+0x1dc]
  4138f5:	mov    rcx,QWORD PTR [rax]
  4138f8:	call   0x422130
  4138fd:	mov    ecx,DWORD PTR [rbx+0x38]
  413900:	jmp    0x4138b4
  413902:	lea    rax,[rip+0x26030]        # 0x439939
  413909:	lea    r9,[rip+0x26064]        # 0x439974
  413910:	lea    r8,[rip+0x26004]        # 0x43991b
  413917:	xor    edx,edx
  413919:	xor    ecx,ecx
  41391b:	mov    DWORD PTR [rsp+0x28],0x3b6
  413923:	mov    QWORD PTR [rsp+0x20],rax
  413928:	call   0x4226c0
  41392d:	call   0x42fbf8
  413932:	lea    rcx,[rip+0x26163]        # 0x439a9c
  413939:	call   0x422108
  41393e:	mov    r13,QWORD PTR [rsi+0x8]
  413942:	mov    QWORD PTR [rsp+0x68],rax
  413947:	mov    rax,QWORD PTR [rip+0x29e92]        # 0x43d7e0
  41394e:	movsxd rdx,DWORD PTR [r13+0x0]
  413952:	mov    edi,DWORD PTR [r13+0x90]
  413959:	mov    rax,QWORD PTR [rax]
  41395c:	test   edi,edi
  41395e:	mov    r12,QWORD PTR [rax+rdx*8]
  413962:	je     0x413c10
  413968:	mov    eax,DWORD PTR [r13+0x94]
  41396f:	mov    rdx,QWORD PTR [r13+0x20]
  413973:	mov    DWORD PTR [rsp+0x8c],0x0
  41397e:	mov    DWORD PTR [rsp+0x50],eax
  413982:	mov    eax,DWORD PTR [rdx+0xc]
  413985:	cmp    eax,0x1
  413988:	je     0x4143d6
  41398e:	mov    ecx,DWORD PTR [rsp+0x50]
  413992:	mov    DWORD PTR [rsp+0x74],edi
  413996:	mov    DWORD PTR [rsp+0x70],ecx
  41399a:	cmp    eax,0x3
  41399d:	je     0x413fa5
  4139a3:	mov    rax,QWORD PTR [r13+0x8]
  4139a7:	mov    r11d,DWORD PTR [rax+0x58]
  4139ab:	test   r11d,r11d
  4139ae:	je     0x413c60
  4139b4:	mov    r9d,DWORD PTR [rax+0x5c]
  4139b8:	test   r9d,r9d
  4139bb:	jne    0x4139c3
  4139bd:	mov    r9b,0x1
  4139c0:	xor    r11d,r11d
  4139c3:	xor    edx,edx
  4139c5:	mov    r8d,0x1
  4139cb:	mov    rcx,r15
  4139ce:	mov    DWORD PTR [rsp+0x7c],r11d
  4139d3:	mov    DWORD PTR [rsp+0x78],r9d
  4139d8:	call   0x422860
  4139dd:	mov    rax,QWORD PTR [r13+0x20]
  4139e1:	mov    r9d,DWORD PTR [rsp+0x78]
  4139e6:	mov    r11d,DWORD PTR [rsp+0x7c]
  4139eb:	mov    eax,DWORD PTR [rax+0x70]
  4139ee:	and    eax,0x800000
  4139f3:	cmp    eax,0x1
  4139f6:	sbb    eax,eax
  4139f8:	and    eax,0xfff80000
  4139fd:	add    eax,0x80002
  413a02:	cmp    QWORD PTR [r13+0x160],0x0
  413a0a:	je     0x413f73
  413a10:	mov    ecx,DWORD PTR [r13+0x16c]
  413a17:	mov    edx,DWORD PTR [r13+0xa4]
  413a1e:	mov    r8d,DWORD PTR [r13+0xa8]
  413a25:	mov    DWORD PTR [rsp+0x48],eax
  413a29:	mov    eax,DWORD PTR [rsp+0x74]
  413a2d:	mov    DWORD PTR [rsp+0x40],r9d
  413a32:	mov    DWORD PTR [rsp+0x20],ecx
  413a36:	mov    rcx,r15
  413a39:	mov    r9d,edx
  413a3c:	lea    rdx,[rip+0x260b5]        # 0x439af8
  413a43:	mov    DWORD PTR [rsp+0x38],r11d
  413a48:	mov    DWORD PTR [rsp+0x30],eax
  413a4c:	mov    eax,DWORD PTR [rsp+0x70]
  413a50:	mov    DWORD PTR [rsp+0x28],eax
  413a54:	call   0x422858
  413a59:	test   edi,edi
  413a5b:	je     0x413a69
  413a5d:	mov    eax,DWORD PTR [rsp+0x50]
  413a61:	test   eax,eax
  413a63:	jne    0x413ca0
  413a69:	mov    rax,QWORD PTR [r13+0x8]
  413a6d:	lea    rdi,[rsp+0x1b0]
  413a75:	mov    r9d,DWORD PTR [rbx]
  413a78:	lea    r8,[rip+0x260e1]        # 0x439b60
  413a7f:	mov    edx,0xff
  413a84:	mov    rcx,rdi
  413a87:	mov    eax,DWORD PTR [rax]
  413a89:	mov    DWORD PTR [rsp+0x28],eax
  413a8d:	mov    eax,DWORD PTR [r13+0x0]
  413a91:	mov    DWORD PTR [rsp+0x20],eax
  413a95:	call   0x411930
  413a9a:	mov    rax,QWORD PTR [rbx+0x10]
  413a9e:	mov    r9,QWORD PTR [rsp+0x2b0]
  413aa6:	mov    r8,rdi
  413aa9:	mov    rdx,QWORD PTR [rsp+0x68]
  413aae:	mov    QWORD PTR [rsp+0x20],0x0
  413ab7:	mov    rcx,rsi
  413aba:	mov    QWORD PTR [rsp+0x28],rax
  413abf:	call   0x4220e0
  413ac4:	test   eax,eax
  413ac6:	js     0x413824
  413acc:	mov    rax,QWORD PTR [rsi]
  413acf:	mov    QWORD PTR [rsp+0xa0],rax
  413ad7:	mov    eax,DWORD PTR [r13+0xa0]
  413ade:	test   eax,eax
  413ae0:	jne    0x413d52
  413ae6:	mov    eax,DWORD PTR [r13+0x90]
  413aed:	test   eax,eax
  413aef:	jne    0x413e80
  413af5:	mov    rax,QWORD PTR [rip+0x29c34]        # 0x43d730
  413afc:	mov    eax,DWORD PTR [rax]
  413afe:	test   eax,eax
  413b00:	je     0x413b9a
  413b06:	mov    rax,QWORD PTR [r13+0x8]
  413b0a:	lea    r8,[rip+0x260d7]        # 0x439be8
  413b11:	mov    edx,0xff
  413b16:	mov    rcx,rdi
  413b19:	mov    eax,DWORD PTR [rax]
  413b1b:	mov    DWORD PTR [rsp+0x20],eax
  413b1f:	mov    r9d,DWORD PTR [r13+0x0]
  413b23:	call   0x411930
  413b28:	mov    rsi,QWORD PTR [rbx+0x10]
  413b2c:	lea    rcx,[rip+0x260d9]        # 0x439c0c
  413b33:	call   0x422108
  413b38:	lea    rcx,[rsp+0xb0]
  413b40:	lea    r9,[rip+0x25bec]        # 0x439733
  413b47:	mov    QWORD PTR [rsp+0x28],rsi
  413b4c:	mov    QWORD PTR [rsp+0x20],0x0
  413b55:	mov    r8,rdi
  413b58:	mov    rdx,rax
  413b5b:	call   0x4220e0
  413b60:	test   eax,eax
  413b62:	js     0x413824
  413b68:	mov    r8,QWORD PTR [rsp+0xb0]
  413b70:	mov    rcx,QWORD PTR [rsp+0xa0]
  413b78:	xor    r9d,r9d
  413b7b:	xor    edx,edx
  413b7d:	call   0x422098
  413b82:	test   eax,eax
  413b84:	js     0x413824
  413b8a:	mov    rax,QWORD PTR [rsp+0xb0]
  413b92:	mov    QWORD PTR [rsp+0xa0],rax
  413b9a:	mov    rax,QWORD PTR [r13+0x8]
  413b9e:	lea    r8,[rip+0x2606d]        # 0x439c12
  413ba5:	mov    edx,0xff
  413baa:	mov    rcx,rdi
  413bad:	mov    eax,DWORD PTR [rax]
  413baf:	mov    DWORD PTR [rsp+0x20],eax
  413bb3:	mov    r9d,DWORD PTR [r13+0x0]
  413bb7:	call   0x411930
  413bbc:	mov    rax,QWORD PTR [rip+0x29b2d]        # 0x43d6f0
  413bc3:	mov    r13d,DWORD PTR [rax]
  413bc6:	test   r13d,r13d
  413bc9:	jne    0x413cc0
  413bcf:	mov    rcx,QWORD PTR [r12+0x30]
  413bd4:	xor    r8d,r8d
  413bd7:	movabs rax,0x8000000000000000
  413be1:	mov    rdx,QWORD PTR [r12+0x40]
  413be6:	cmp    rcx,rax
  413be9:	je     0x413c01
  413beb:	mov    r12d,DWORD PTR [r12+0x54]
  413bf0:	movabs rcx,0x8000000000000000
  413bfa:	test   r12d,r12d
  413bfd:	cmovne rcx,r8
  413c01:	mov    QWORD PTR [rsp+0x20],rdi
  413c06:	jmp    0x4137ea
  413c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  413c10:	mov    rdx,QWORD PTR [r13+0x8]
  413c14:	mov    eax,DWORD PTR [rdx+0x30]
  413c17:	mov    DWORD PTR [rsp+0x70],eax
  413c1b:	mov    eax,DWORD PTR [rdx+0x34]
  413c1e:	mov    DWORD PTR [rsp+0x8c],0x0
  413c29:	mov    DWORD PTR [rsp+0x74],eax
  413c2d:	mov    rax,QWORD PTR [r13+0x20]
  413c31:	cmp    DWORD PTR [rax+0xc],0x1
  413c35:	je     0x4143d6
  413c3b:	mov    rcx,QWORD PTR [r12]
  413c3f:	xor    r8d,r8d
  413c42:	call   0x4222b0
  413c47:	mov    rdx,QWORD PTR [r13+0x20]
  413c4b:	mov    edi,eax
  413c4d:	shr    rax,0x20
  413c51:	mov    QWORD PTR [rsp+0x50],rax
  413c56:	mov    eax,DWORD PTR [rdx+0xc]
  413c59:	jmp    0x41399a
  413c5e:	xchg   ax,ax
  413c60:	mov    rax,QWORD PTR [r13+0x20]
  413c64:	mov    r11d,DWORD PTR [rax+0x108]
  413c6b:	mov    r9d,DWORD PTR [rax+0x10c]
  413c72:	jmp    0x4139b8
  413c77:	nop    WORD PTR [rax+rax*1+0x0]
  413c80:	mov    r8d,DWORD PTR [rax+0x1d4]
  413c87:	lea    rdx,[rip+0x2601e]        # 0x439cac
  413c8e:	mov    rcx,r15
  413c91:	call   0x422858
  413c96:	jmp    0x4134cf
  413c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  413ca0:	mov    r9d,DWORD PTR [rsp+0x50]
  413ca5:	lea    rdx,[rip+0x25e9e]        # 0x439b4a
  413cac:	mov    r8d,edi
  413caf:	mov    rcx,r15
  413cb2:	call   0x422858
  413cb7:	jmp    0x413a69
  413cbc:	nop    DWORD PTR [rax+0x0]
  413cc0:	mov    rax,QWORD PTR [r12+0x30]
  413cc5:	movabs rdx,0x8000000000000000
  413ccf:	cmp    rax,rdx
  413cd2:	je     0x414140
  413cd8:	mov    rcx,QWORD PTR [rip+0x29c71]        # 0x43d950
  413cdf:	mov    r8d,DWORD PTR [rcx]
  413ce2:	test   r8d,r8d
  413ce5:	jne    0x414058
  413ceb:	mov    rcx,QWORD PTR [r12]
  413cef:	mov    r8,rax
  413cf2:	mov    rcx,QWORD PTR [rcx+0x438]
  413cf9:	cmp    rcx,rdx
  413cfc:	je     0x414058
  413d02:	add    r8,rcx
  413d05:	mov    rcx,rax
  413d08:	jmp    0x413bd7
  413d0d:	nop    DWORD PTR [rax]
  413d10:	lea    r8,[rip+0x25fbd]        # 0x439cd4
  413d17:	mov    edx,0x100
  413d1c:	mov    rcx,rdi
  413d1f:	call   0x422560
  413d24:	jmp    0x4135aa
  413d29:	nop    DWORD PTR [rax+0x0]
  413d30:	movapd xmm3,xmm0
  413d34:	movq   r9,xmm0
  413d39:	lea    r8,[rip+0x25f82]        # 0x439cc2
  413d40:	mov    edx,0x100
  413d45:	mov    rcx,rdi
  413d48:	call   0x422560
  413d4d:	jmp    0x41359f
  413d52:	mov    rcx,QWORD PTR [r13+0x8]
  413d56:	call   0x4079f0
  413d5b:	movapd xmm1,xmm0
  413d5f:	subsd  xmm1,QWORD PTR [rip+0x260b1]        # 0x439e18
  413d67:	andpd  xmm1,xmm7
  413d6b:	ucomisd xmm6,xmm1
  413d6f:	ja     0x4141d5
  413d75:	movapd xmm1,xmm0
  413d79:	subsd  xmm1,QWORD PTR [rip+0x260b7]        # 0x439e38
  413d81:	andpd  xmm1,xmm7
  413d85:	ucomisd xmm6,xmm1
  413d89:	ja     0x414268
  413d8f:	movapd xmm1,xmm0
  413d93:	subsd  xmm1,QWORD PTR [rip+0x260a5]        # 0x439e40
  413d9b:	andpd  xmm1,xmm7
  413d9f:	ucomisd xmm6,xmm1
  413da3:	ja     0x414372
  413da9:	movapd xmm1,xmm0
  413dad:	andpd  xmm1,xmm7
  413db1:	ucomisd xmm1,xmm6
  413db5:	jbe    0x413ae6
  413dbb:	lea    rsi,[rsp+0xb0]
  413dc3:	movq   r9,xmm0
  413dc8:	lea    r8,[rip+0x25dd5]        # 0x439ba4
  413dcf:	movapd xmm3,xmm0
  413dd3:	mov    edx,0x40
  413dd8:	mov    rcx,rsi
  413ddb:	call   0x411720
  413de0:	mov    rax,QWORD PTR [rsp+0xa0]
  413de8:	lea    rcx,[rip+0x25dbf]        # 0x439bae
  413def:	mov    rdx,QWORD PTR [rax+0x50]
  413df3:	mov    QWORD PTR [rsp+0x50],rdx
  413df8:	call   0x422108
  413dfd:	mov    rdx,QWORD PTR [rsp+0x50]
  413e02:	lea    rcx,[rsp+0xa8]
  413e0a:	lea    r8,[rip+0x25d9d]        # 0x439bae
  413e11:	mov    QWORD PTR [rsp+0x20],0x0
  413e1a:	mov    r9,rsi
  413e1d:	mov    QWORD PTR [rsp+0x28],rdx
  413e22:	mov    rdx,rax
  413e25:	call   0x4220e0
  413e2a:	test   eax,eax
  413e2c:	js     0x413824
  413e32:	mov    r8,QWORD PTR [rsp+0xa8]
  413e3a:	mov    edx,DWORD PTR [rsp+0x8c]
  413e41:	xor    r9d,r9d
  413e44:	mov    rcx,QWORD PTR [rsp+0xa0]
  413e4c:	call   0x422098
  413e51:	test   eax,eax
  413e53:	js     0x413824
  413e59:	mov    rax,QWORD PTR [rsp+0xa8]
  413e61:	mov    DWORD PTR [rsp+0x8c],0x0
  413e6c:	mov    QWORD PTR [rsp+0xa0],rax
  413e74:	jmp    0x413ae6
  413e79:	nop    DWORD PTR [rax+0x0]
  413e80:	mov    rax,QWORD PTR [r13+0x8]
  413e84:	lea    r8,[rip+0x25d2d]        # 0x439bb8
  413e8b:	mov    edx,0xff
  413e90:	mov    rcx,rdi
  413e93:	mov    eax,DWORD PTR [rax]
  413e95:	mov    DWORD PTR [rsp+0x20],eax
  413e99:	mov    r9d,DWORD PTR [r13+0x0]
  413e9d:	call   0x411930
  413ea2:	mov    rsi,QWORD PTR [rbx+0x10]
  413ea6:	lea    rcx,[rip+0x25d31]        # 0x439bde
  413ead:	call   0x422108
  413eb2:	lea    rcx,[rsp+0xb0]
  413eba:	lea    r9,[rip+0x25d24]        # 0x439be5
  413ec1:	mov    QWORD PTR [rsp+0x28],rsi
  413ec6:	mov    QWORD PTR [rsp+0x20],0x0
  413ecf:	mov    r8,rdi
  413ed2:	mov    rdx,rax
  413ed5:	call   0x4220e0
  413eda:	test   eax,eax
  413edc:	js     0x413824
  413ee2:	mov    r8,QWORD PTR [rsp+0xb0]
  413eea:	mov    rcx,QWORD PTR [rsp+0xa0]
  413ef2:	xor    r9d,r9d
  413ef5:	xor    edx,edx
  413ef7:	call   0x422098
  413efc:	test   eax,eax
  413efe:	js     0x413824
  413f04:	mov    rax,QWORD PTR [rsp+0xb0]
  413f0c:	mov    QWORD PTR [rsp+0xa0],rax
  413f14:	jmp    0x413af5
  413f19:	nop    DWORD PTR [rax+0x0]
  413f20:	mov    rax,QWORD PTR [rax+0x30]
  413f24:	movabs rdx,0x8000000000000000
  413f2e:	cmp    rax,rdx
  413f31:	je     0x414160
  413f37:	mov    rcx,QWORD PTR [rip+0x29a12]        # 0x43d950
  413f3e:	mov    ecx,DWORD PTR [rcx]
  413f40:	test   ecx,ecx
  413f42:	jne    0x414065
  413f48:	mov    rdi,QWORD PTR [rsp+0x50]
  413f4d:	mov    r8,rax
  413f50:	mov    rcx,QWORD PTR [rdi]
  413f53:	mov    rcx,QWORD PTR [rcx+0x438]
  413f5a:	cmp    rcx,rdx
  413f5d:	je     0x414065
  413f63:	add    r8,rcx
  413f66:	mov    rcx,rax
  413f69:	mov    rax,QWORD PTR [rsp+0x50]
  413f6e:	jmp    0x4137b8
  413f73:	mov    ecx,DWORD PTR [r13+0xac]
  413f7a:	jmp    0x413a17
  413f7f:	nop
  413f80:	test   rax,rax
  413f83:	je     0x414182
  413f89:	cmp    QWORD PTR [rax+0x18],0x0
  413f8e:	lea    rdx,[rip+0x259e4]        # 0x439979
  413f95:	lea    rax,[rip+0x259da]        # 0x439976
  413f9c:	cmovne rdx,rax
  413fa0:	jmp    0x41327d
  413fa5:	mov    rax,QWORD PTR [rip+0x29834]        # 0x43d7e0
  413fac:	movsxd rcx,DWORD PTR [r13+0x0]
  413fb0:	mov    r11d,DWORD PTR [rdx+0x94]
  413fb7:	mov    rax,QWORD PTR [rax]
  413fba:	mov    rax,QWORD PTR [rax+rcx*8]
  413fbe:	mov    r10,QWORD PTR [rax]
  413fc1:	mov    eax,DWORD PTR [rdx+0x98]
  413fc7:	test   eax,eax
  413fc9:	je     0x414080
  413fcf:	test   r11d,r11d
  413fd2:	je     0x414080
  413fd8:	mov    DWORD PTR [r13+0xa8],r11d
  413fdf:	mov    DWORD PTR [r13+0x110],r11d
  413fe6:	mov    DWORD PTR [r13+0xa4],eax
  413fed:	mov    DWORD PTR [r13+0x114],eax
  413ff4:	mov    DWORD PTR [rdx+0xa8],0x1e
  413ffe:	mov    DWORD PTR [r13+0xac],0x1e
  414009:	call   0x4227c0
  41400e:	test   rax,rax
  414011:	mov    QWORD PTR [r13+0x108],rax
  414018:	je     0x414436
  41401e:	movabs rax,0x8000000000000000
  414028:	mov    QWORD PTR [r13+0xf8],rax
  41402f:	jmp    0x4139a3
  414034:	xor    eax,eax
  414036:	jmp    0x4132b9
  41403b:	lea    r8,[rip+0x25bf6]        # 0x439c38
  414042:	mov    edx,0x10
  414047:	xor    ecx,ecx
  414049:	call   0x4226c0
  41404e:	mov    eax,0xffffffea
  414053:	jmp    0x413824
  414058:	mov    rdx,QWORD PTR [r12+0x40]
  41405d:	mov    r8,rax
  414060:	jmp    0x413beb
  414065:	mov    rdi,QWORD PTR [rsp+0x50]
  41406a:	mov    r8,rax
  41406d:	mov    rdx,QWORD PTR [rdi+0x40]
  414071:	jmp    0x4137cb
  414076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414080:	mov    ecx,DWORD PTR [r10+0x2c]
  414084:	test   ecx,ecx
  414086:	je     0x414195
  41408c:	mov    rdx,QWORD PTR [r10+0x30]
  414090:	sub    ecx,0x1
  414093:	lea    r9,[rdx+rcx*8+0x8]
  414098:	nop    DWORD PTR [rax+rax*1+0x0]
  4140a0:	mov    rcx,QWORD PTR [rdx]
  4140a3:	mov    rcx,QWORD PTR [rcx+0x8]
  4140a7:	mov    r8d,DWORD PTR [rcx+0xc]
  4140ab:	test   r8d,r8d
  4140ae:	jne    0x4140c9
  4140b0:	mov    r8d,DWORD PTR [rcx+0x94]
  4140b7:	mov    ecx,DWORD PTR [rcx+0x98]
  4140bd:	cmp    r11d,r8d
  4140c0:	cmovl  r11d,r8d
  4140c4:	cmp    eax,ecx
  4140c6:	cmovl  eax,ecx
  4140c9:	add    rdx,0x8
  4140cd:	cmp    rdx,r9
  4140d0:	jne    0x4140a0
  4140d2:	test   eax,eax
  4140d4:	je     0x414195
  4140da:	test   r11d,r11d
  4140dd:	je     0x414195
  4140e3:	lea    r8,[rip+0x259ee]        # 0x439ad8
  4140ea:	mov    DWORD PTR [rsp+0x20],eax
  4140ee:	mov    r9d,r11d
  4140f1:	mov    edx,0x20
  4140f6:	mov    rcx,r10
  4140f9:	mov    DWORD PTR [rsp+0x7c],eax
  4140fd:	mov    DWORD PTR [rsp+0x78],r11d
  414102:	call   0x4226c0
  414107:	mov    rdx,QWORD PTR [r13+0x20]
  41410b:	mov    eax,DWORD PTR [rsp+0x7c]
  41410f:	mov    r11d,DWORD PTR [rsp+0x78]
  414114:	jmp    0x413fd8
  414119:	mov    eax,0xfffffff4
  41411e:	jmp    0x4132b9
  414123:	mov    esi,eax
  414125:	mov    rcx,QWORD PTR [rsp+0x58]
  41412a:	call   0x4220a0
  41412f:	mov    rcx,QWORD PTR [rsp+0x60]
  414134:	call   0x4220a0
  414139:	mov    eax,esi
  41413b:	jmp    0x4132b9
  414140:	mov    rdx,QWORD PTR [rip+0x29809]        # 0x43d950
  414147:	mov    r9d,DWORD PTR [rdx]
  41414a:	test   r9d,r9d
  41414d:	je     0x4141b4
  41414f:	mov    rdx,QWORD PTR [r12+0x40]
  414154:	mov    rcx,rax
  414157:	jmp    0x413c01
  41415c:	nop    DWORD PTR [rax+0x0]
  414160:	mov    rdx,QWORD PTR [rip+0x297e9]        # 0x43d950
  414167:	mov    edx,DWORD PTR [rdx]
  414169:	test   edx,edx
  41416b:	je     0x414349
  414171:	mov    rdi,QWORD PTR [rsp+0x50]
  414176:	mov    rcx,rax
  414179:	mov    rdx,QWORD PTR [rdi+0x40]
  41417d:	jmp    0x4137e5
  414182:	lea    rdx,[rip+0x257eb]        # 0x439974
  414189:	lea    rax,[rip+0x257e6]        # 0x439976
  414190:	jmp    0x413294
  414195:	cmp    r11d,0x2d0
  41419c:	mov    edx,0x2d0
  4141a1:	cmovl  r11d,edx
  4141a5:	cmp    eax,0x240
  4141aa:	mov    dl,0x40
  4141ac:	cmovl  eax,edx
  4141af:	jmp    0x4140e3
  4141b4:	mov    rdx,QWORD PTR [r12]
  4141b8:	xor    r8d,r8d
  4141bb:	mov    rcx,QWORD PTR [rdx+0x438]
  4141c2:	cmp    rcx,rax
  4141c5:	jne    0x413d02
  4141cb:	mov    rdx,QWORD PTR [r12+0x40]
  4141d0:	jmp    0x413c01
  4141d5:	mov    rax,QWORD PTR [rsp+0xa0]
  4141dd:	lea    rcx,[rip+0x2599d]        # 0x439b81
  4141e4:	mov    rsi,QWORD PTR [rax+0x50]
  4141e8:	call   0x422108
  4141ed:	lea    rcx,[rsp+0xb0]
  4141f5:	lea    r9,[rip+0x2598f]        # 0x439b8b
  4141fc:	mov    QWORD PTR [rsp+0x20],0x0
  414205:	mov    QWORD PTR [rsp+0x28],rsi
  41420a:	lea    r8,[rip+0x25970]        # 0x439b81
  414211:	mov    rdx,rax
  414214:	call   0x4220e0
  414219:	test   eax,eax
  41421b:	js     0x413824
  414221:	mov    r8,QWORD PTR [rsp+0xb0]
  414229:	mov    edx,DWORD PTR [rsp+0x8c]
  414230:	xor    r9d,r9d
  414233:	mov    rcx,QWORD PTR [rsp+0xa0]
  41423b:	call   0x422098
  414240:	test   eax,eax
  414242:	js     0x413824
  414248:	mov    rax,QWORD PTR [rsp+0xb0]
  414250:	mov    DWORD PTR [rsp+0x8c],0x0
  41425b:	mov    QWORD PTR [rsp+0xa0],rax
  414263:	jmp    0x413ae6
  414268:	mov    rax,QWORD PTR [rsp+0xa0]
  414270:	lea    rcx,[rip+0x2591a]        # 0x439b91
  414277:	lea    rsi,[rsp+0xb0]
  41427f:	mov    rdx,QWORD PTR [rax+0x50]
  414283:	mov    QWORD PTR [rsp+0x50],rdx
  414288:	call   0x422108
  41428d:	mov    rdx,QWORD PTR [rsp+0x50]
  414292:	lea    r8,[rip+0x258f8]        # 0x439b91
  414299:	xor    r9d,r9d
  41429c:	mov    QWORD PTR [rsp+0x20],0x0
  4142a5:	mov    rcx,rsi
  4142a8:	mov    QWORD PTR [rsp+0x28],rdx
  4142ad:	mov    rdx,rax
  4142b0:	call   0x4220e0
  4142b5:	test   eax,eax
  4142b7:	js     0x413824
  4142bd:	mov    r8,QWORD PTR [rsp+0xb0]
  4142c5:	mov    edx,DWORD PTR [rsp+0x8c]
  4142cc:	xor    r9d,r9d
  4142cf:	mov    rcx,QWORD PTR [rsp+0xa0]
  4142d7:	call   0x422098
  4142dc:	test   eax,eax
  4142de:	js     0x413824
  4142e4:	mov    rax,QWORD PTR [rsp+0xb0]
  4142ec:	lea    rcx,[rip+0x258a4]        # 0x439b97
  4142f3:	mov    DWORD PTR [rsp+0x8c],0x0
  4142fe:	mov    QWORD PTR [rsp+0xa0],rax
  414306:	mov    rdx,QWORD PTR [rax+0x50]
  41430a:	mov    QWORD PTR [rsp+0x50],rdx
  41430f:	call   0x422108
  414314:	mov    rdx,QWORD PTR [rsp+0x50]
  414319:	lea    r8,[rip+0x25877]        # 0x439b97
  414320:	xor    r9d,r9d
  414323:	mov    QWORD PTR [rsp+0x20],0x0
  41432c:	mov    rcx,rsi
  41432f:	mov    QWORD PTR [rsp+0x28],rdx
  414334:	mov    rdx,rax
  414337:	call   0x4220e0
  41433c:	test   eax,eax
  41433e:	jns    0x414221
  414344:	jmp    0x413824
  414349:	mov    rdi,QWORD PTR [rsp+0x50]
  41434e:	xor    r8d,r8d
  414351:	mov    rdx,QWORD PTR [rdi]
  414354:	mov    rcx,QWORD PTR [rdx+0x438]
  41435b:	cmp    rcx,rax
  41435e:	jne    0x413f63
  414364:	mov    rax,QWORD PTR [rsp+0x50]
  414369:	mov    rdx,QWORD PTR [rax+0x40]
  41436d:	jmp    0x4137e5
  414372:	mov    rax,QWORD PTR [rsp+0xa0]
  41437a:	lea    rcx,[rip+0x25800]        # 0x439b81
  414381:	mov    rsi,QWORD PTR [rax+0x50]
  414385:	call   0x422108
  41438a:	lea    rcx,[rsp+0xb0]
  414392:	mov    QWORD PTR [rsp+0x20],0x0
  41439b:	lea    r9,[rip+0x257fb]        # 0x439b9d
  4143a2:	mov    QWORD PTR [rsp+0x28],rsi
  4143a7:	jmp    0x41420a
  4143ac:	mov    rdx,QWORD PTR [rax+0x8]
  4143b0:	lea    r8,[rip+0x256b1]        # 0x439a68
  4143b7:	xor    ecx,ecx
  4143b9:	mov    esi,0xbcbabb08
  4143be:	mov    edx,DWORD PTR [rdx]
  4143c0:	mov    DWORD PTR [rsp+0x20],edx
  4143c4:	mov    r9d,DWORD PTR [rax]
  4143c7:	mov    edx,0x10
  4143cc:	call   0x4226c0
  4143d1:	jmp    0x414125
  4143d6:	lea    r8,[rip+0x256cb]        # 0x439aa8
  4143dd:	mov    edx,0x10
  4143e2:	xor    ecx,ecx
  4143e4:	call   0x4226c0
  4143e9:	mov    eax,0xffffffea
  4143ee:	jmp    0x413824
  4143f3:	test   rax,rax
  4143f6:	je     0x414427
  4143f8:	cmp    QWORD PTR [rax+0x18],0x0
  4143fd:	lea    rdx,[rip+0x25575]        # 0x439979
  414404:	lea    rax,[rip+0x2556b]        # 0x439976
  41440b:	cmovne rdx,rax
  41440f:	lea    rax,[rip+0x2555e]        # 0x439974
  414416:	jmp    0x413294
  41441b:	lea    rdx,[rip+0x25552]        # 0x439974
  414422:	jmp    0x41327d
  414427:	lea    rdx,[rip+0x25546]        # 0x439974
  41442e:	mov    rax,rdx
  414431:	jmp    0x413294
  414436:	mov    eax,0xfffffff4
  41443b:	jmp    0x413824
  414440:	mov    ecx,0x1
  414445:	call   0x401cb0
  41444a:	nop
  41444b:	nop    DWORD PTR [rax+rax*1+0x0]
  414450:	mov    r8d,DWORD PTR [rcx+0x28]
  414454:	test   r8d,r8d
  414457:	jle    0x414487
  414459:	mov    rcx,QWORD PTR [rcx+0x20]
  41445d:	mov    rax,QWORD PTR [rcx]
  414460:	cmp    QWORD PTR [rax+0x8],rdx
  414464:	je     0x414490
  414466:	sub    r8d,0x1
  41446a:	lea    rax,[rcx+0x8]
  41446e:	lea    r8,[rcx+r8*8+0x8]
  414473:	jmp    0x414482
  414475:	mov    rcx,QWORD PTR [rax]
  414478:	add    rax,0x8
  41447c:	cmp    QWORD PTR [rcx+0x8],rdx
  414480:	je     0x414490
  414482:	cmp    rax,r8
  414485:	jne    0x414475
  414487:	xor    eax,eax
  414489:	ret    
  41448a:	nop    WORD PTR [rax+rax*1+0x0]
  414490:	mov    eax,0x1
  414495:	ret    
  414496:	nop
  414497:	nop
  414498:	nop
  414499:	nop
  41449a:	nop
  41449b:	nop
  41449c:	nop
  41449d:	nop
  41449e:	nop
  41449f:	nop
  4144a0:	mov    edx,DWORD PTR [rip+0x2dd8e]        # 0x442234
  4144a6:	mov    eax,DWORD PTR [rip+0x2dd84]        # 0x442230
  4144ac:	cmp    edx,eax
  4144ae:	setg   al
  4144b1:	movzx  eax,al
  4144b4:	ret    
  4144b5:	nop
  4144b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144c0:	mov    rax,QWORD PTR [rdx]
  4144c3:	cmp    QWORD PTR [rcx],rax
  4144c6:	mov    edx,0xffffffff
  4144cb:	setg   al
  4144ce:	movzx  eax,al
  4144d1:	cmovl  eax,edx
  4144d4:	ret    
  4144d5:	nop
  4144d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144e0:	ret    
  4144e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4144e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144f0:	push   r15
  4144f2:	push   r14
  4144f4:	push   r13
  4144f6:	push   r12
  4144f8:	push   rbp
  4144f9:	push   rdi
  4144fa:	push   rsi
  4144fb:	push   rbx
  4144fc:	sub    rsp,0x78
  414500:	mov    rax,QWORD PTR [rip+0x29209]        # 0x43d710
  414507:	mov    r14d,ecx
  41450a:	mov    r10d,DWORD PTR [rax]
  41450d:	test   r10d,r10d
  414510:	jne    0x4148ec
  414516:	mov    r9d,DWORD PTR [rip+0x2f1cb]        # 0x4436e8
  41451d:	test   r9d,r9d
  414520:	jle    0x414947
  414526:	lea    r12,[rip+0x2f1c3]        # 0x4436f0
  41452d:	lea    r13,[rip+0x2f1b4]        # 0x4436e8
  414534:	xor    edi,edi
  414536:	xor    ebp,ebp
  414538:	nop    DWORD PTR [rax+rax*1+0x0]
  414540:	mov    rax,QWORD PTR [r12]
  414544:	xor    esi,esi
  414546:	xor    r15d,r15d
  414549:	mov    rbx,QWORD PTR [rax+rdi*1]
  41454d:	lea    rcx,[rbx+0x10]
  414551:	call   0x4220d8
  414556:	mov    r8d,DWORD PTR [rbx+0x28]
  41455a:	test   r8d,r8d
  41455d:	jle    0x41458b
  41455f:	nop
  414560:	mov    rax,QWORD PTR [rbx+0x20]
  414564:	add    r15d,0x1
  414568:	mov    rcx,QWORD PTR [rax+rsi*1]
  41456c:	add    rcx,0x18
  414570:	call   0x422768
  414575:	mov    rcx,rsi
  414578:	add    rcx,QWORD PTR [rbx+0x20]
  41457c:	add    rsi,0x8
  414580:	call   0x422768
  414585:	cmp    DWORD PTR [rbx+0x28],r15d
  414589:	jg     0x414560
  41458b:	lea    rcx,[rbx+0x20]
  41458f:	xor    esi,esi
  414591:	xor    r15d,r15d
  414594:	call   0x422768
  414599:	mov    ecx,DWORD PTR [rbx+0x38]
  41459c:	test   ecx,ecx
  41459e:	jle    0x4145cb
  4145a0:	mov    rax,QWORD PTR [rbx+0x30]
  4145a4:	add    r15d,0x1
  4145a8:	mov    rcx,QWORD PTR [rax+rsi*1]
  4145ac:	add    rcx,0x18
  4145b0:	call   0x422768
  4145b5:	mov    rcx,rsi
  4145b8:	add    rcx,QWORD PTR [rbx+0x30]
  4145bc:	add    rsi,0x8
  4145c0:	call   0x422768
  4145c5:	cmp    DWORD PTR [rbx+0x38],r15d
  4145c9:	jg     0x4145a0
  4145cb:	lea    rcx,[rbx+0x30]
  4145cf:	add    ebp,0x1
  4145d2:	call   0x422768
  4145d7:	lea    rcx,[rbx+0x8]
  4145db:	call   0x422768
  4145e0:	mov    rcx,rdi
  4145e3:	add    rcx,QWORD PTR [r12]
  4145e7:	add    rdi,0x8
  4145eb:	call   0x422768
  4145f0:	cmp    DWORD PTR [r13+0x0],ebp
  4145f4:	jg     0x414540
  4145fa:	mov    rcx,r12
  4145fd:	xor    esi,esi
  4145ff:	xor    ebp,ebp
  414601:	call   0x422768
  414606:	lea    rcx,[rip+0x2dc33]        # 0x442240
  41460d:	call   0x422768
  414612:	mov    eax,DWORD PTR [rip+0x2daa8]        # 0x4420c0
  414618:	test   eax,eax
  41461a:	jg     0x414651
  41461c:	jmp    0x414683
  41461e:	xchg   ax,ax
  414620:	mov    rcx,rdi
  414623:	call   0x422220
  414628:	lea    rcx,[rbx+0x8]
  41462c:	call   0x422820
  414631:	mov    rcx,rsi
  414634:	add    rcx,QWORD PTR [rip+0x2da8d]        # 0x4420c8
  41463b:	call   0x422768
  414640:	mov    eax,DWORD PTR [rip+0x2da7a]        # 0x4420c0
  414646:	add    ebp,0x1
  414649:	add    rsi,0x8
  41464d:	cmp    ebp,eax
  41464f:	jge    0x414683
  414651:	mov    rdx,QWORD PTR [rip+0x2da70]        # 0x4420c8
  414658:	mov    rbx,QWORD PTR [rdx+rsi*1]
  41465c:	test   rbx,rbx
  41465f:	je     0x414646
  414661:	mov    rdi,QWORD PTR [rbx]
  414664:	test   rdi,rdi
  414667:	je     0x414620
  414669:	mov    rax,QWORD PTR [rdi+0x10]
  41466d:	test   rax,rax
  414670:	je     0x414620
  414672:	test   BYTE PTR [rax+0x2c],0x1
  414676:	jne    0x414620
  414678:	lea    rcx,[rdi+0x20]
  41467c:	call   0x4221b0
  414681:	jmp    0x414620
  414683:	mov    eax,DWORD PTR [rip+0x2da47]        # 0x4420d0
  414689:	xor    edi,edi
  41468b:	xor    ebp,ebp
  41468d:	test   eax,eax
  41468f:	jle    0x41475c
  414695:	mov    rdx,QWORD PTR [rip+0x2da3c]        # 0x4420d8
  41469c:	mov    rsi,QWORD PTR [rdx+rdi*1]
  4146a0:	test   rsi,rsi
  4146a3:	je     0x41474d
  4146a9:	mov    rcx,QWORD PTR [rsi+0x40]
  4146ad:	test   rcx,rcx
  4146b0:	je     0x4146c3
  4146b2:	mov    rbx,QWORD PTR [rcx+0x18]
  4146b6:	call   0x422498
  4146bb:	test   rbx,rbx
  4146be:	mov    rcx,rbx
  4146c1:	jne    0x4146b2
  4146c3:	lea    rcx,[rsi+0x60]
  4146c7:	mov    QWORD PTR [rsi+0x40],0x0
  4146cf:	call   0x4227b0
  4146d4:	lea    rcx,[rsi+0x68]
  4146d8:	call   0x4227b0
  4146dd:	mov    rcx,QWORD PTR [rsi+0x188]
  4146e4:	call   0x422400
  4146e9:	lea    rcx,[rsi+0xb0]
  4146f0:	call   0x422768
  4146f5:	mov    rcx,QWORD PTR [rsi+0xb8]
  4146fc:	call   0x4227e8
  414701:	lea    rcx,[rsi+0x110]
  414708:	call   0x422768
  41470d:	lea    rcx,[rsi+0xf8]
  414714:	call   0x422768
  414719:	lea    rcx,[rsi+0xe8]
  414720:	call   0x422768
  414725:	lea    rcx,[rsi+0x48]
  414729:	mov    DWORD PTR [rsi+0xf0],0x0
  414733:	call   0x422358
  414738:	mov    rcx,rdi
  41473b:	add    rcx,QWORD PTR [rip+0x2d996]        # 0x4420d8
  414742:	call   0x422768
  414747:	mov    eax,DWORD PTR [rip+0x2d983]        # 0x4420d0
  41474d:	add    ebp,0x1
  414750:	add    rdi,0x8
  414754:	cmp    ebp,eax
  414756:	jl     0x414695
  41475c:	mov    edx,DWORD PTR [rip+0x2d97e]        # 0x4420e0
  414762:	xor    ebx,ebx
  414764:	xor    esi,esi
  414766:	test   edx,edx
  414768:	jle    0x41479e
  41476a:	nop    WORD PTR [rax+rax*1+0x0]
  414770:	mov    rax,QWORD PTR [rip+0x2d971]        # 0x4420e8
  414777:	add    esi,0x1
  41477a:	mov    rcx,QWORD PTR [rax+rbx*1]
  41477e:	call   0x422238
  414783:	mov    rcx,rbx
  414786:	add    rcx,QWORD PTR [rip+0x2d95b]        # 0x4420e8
  41478d:	add    rbx,0x8
  414791:	call   0x422768
  414796:	cmp    DWORD PTR [rip+0x2d944],esi        # 0x4420e0
  41479c:	jg     0x414770
  41479e:	mov    eax,DWORD PTR [rip+0x2d94c]        # 0x4420f0
  4147a4:	xor    esi,esi
  4147a6:	xor    edi,edi
  4147a8:	test   eax,eax
  4147aa:	jle    0x414830
  4147b0:	mov    rax,QWORD PTR [rip+0x2d941]        # 0x4420f8
  4147b7:	add    edi,0x1
  4147ba:	mov    rbx,QWORD PTR [rax+rsi*1]
  4147be:	lea    rcx,[rbx+0x30]
  4147c2:	call   0x4227b0
  4147c7:	lea    rcx,[rbx+0x38]
  4147cb:	call   0x4227b0
  4147d0:	lea    rcx,[rbx+0x88]
  4147d7:	call   0x422820
  4147dc:	lea    rcx,[rbx+0xd8]
  4147e3:	call   0x422310
  4147e8:	lea    rcx,[rbx+0x108]
  4147ef:	call   0x4227b0
  4147f4:	lea    rcx,[rbx+0x120]
  4147fb:	call   0x422768
  414800:	lea    rcx,[rbx+0x138]
  414807:	call   0x422768
  41480c:	lea    rcx,[rbx+0x20]
  414810:	call   0x422358
  414815:	mov    rcx,rsi
  414818:	add    rcx,QWORD PTR [rip+0x2d8d9]        # 0x4420f8
  41481f:	add    rsi,0x8
  414823:	call   0x422768
  414828:	cmp    DWORD PTR [rip+0x2d8c2],edi        # 0x4420f0
  41482e:	jg     0x4147b0
  414830:	mov    rcx,QWORD PTR [rip+0x2da39]        # 0x442270
  414837:	test   rcx,rcx
  41483a:	je     0x414841
  41483c:	call   0x42fbd8
  414841:	mov    rcx,QWORD PTR [rip+0x29138]        # 0x43d980
  414848:	call   0x422768
  41484d:	lea    rcx,[rip+0x2d8a4]        # 0x4420f8
  414854:	call   0x422768
  414859:	lea    rcx,[rip+0x2d888]        # 0x4420e8
  414860:	call   0x422768
  414865:	lea    rcx,[rip+0x2d86c]        # 0x4420d8
  41486c:	call   0x422768
  414871:	lea    rcx,[rip+0x2d850]        # 0x4420c8
  414878:	call   0x422768
  41487d:	call   0x401c30
  414882:	call   0x422208
  414887:	mov    eax,DWORD PTR [rip+0x2d9ab]        # 0x442238
  41488d:	test   eax,eax
  41488f:	jne    0x414953
  414895:	test   r14d,r14d
  414898:	je     0x4148b7
  41489a:	mov    eax,DWORD PTR [rip+0x2d990]        # 0x442230
  4148a0:	test   eax,eax
  4148a2:	je     0x4148b7
  4148a4:	lea    r8,[rip+0x25614]        # 0x439ebf
  4148ab:	mov    edx,0x20
  4148b0:	xor    ecx,ecx
  4148b2:	call   0x4226c0
  4148b7:	lea    r9,[rip+0x25615]        # 0x439ed3
  4148be:	lea    r8,[rip+0x2560f]        # 0x439ed4
  4148c5:	mov    edx,0xfffffff8
  4148ca:	xor    ecx,ecx
  4148cc:	call   0x4226c0
  4148d1:	mov    DWORD PTR [rip+0x2d951],0x1        # 0x44222c
  4148db:	add    rsp,0x78
  4148df:	pop    rbx
  4148e0:	pop    rsi
  4148e1:	pop    rdi
  4148e2:	pop    rbp
  4148e3:	pop    r12
  4148e5:	pop    r13
  4148e7:	pop    r14
  4148e9:	pop    r15
  4148eb:	ret    
  4148ec:	call   QWORD PTR [rip+0x30516]        # 0x444e08
  4148f2:	lea    rdx,[rsp+0x20]
  4148f7:	mov    r8d,0x48
  4148fd:	mov    rcx,rax
  414900:	mov    DWORD PTR [rsp+0x20],0x48
  414908:	call   0x422888
  41490d:	mov    r9,QWORD PTR [rsp+0x60]
  414912:	lea    r8,[rip+0x25567]        # 0x439e80
  414919:	mov    edx,0x20
  41491e:	lea    rax,[r9+0x3ff]
  414925:	test   r9,r9
  414928:	cmovs  r9,rax
  41492c:	xor    ecx,ecx
  41492e:	shr    r9,0xa
  414932:	call   0x4226c0
  414937:	mov    r9d,DWORD PTR [rip+0x2edaa]        # 0x4436e8
  41493e:	test   r9d,r9d
  414941:	jg     0x414526
  414947:	lea    r12,[rip+0x2eda2]        # 0x4436f0
  41494e:	jmp    0x4145fa
  414953:	mov    r9d,DWORD PTR [rip+0x2d8de]        # 0x442238
  41495a:	lea    r8,[rip+0x25537]        # 0x439e98
  414961:	mov    edx,0x20
  414966:	xor    ecx,ecx
  414968:	call   0x4226c0
  41496d:	jmp    0x4148b7
  414972:	nop    DWORD PTR [rax+0x0]
  414976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414980:	mov    rax,QWORD PTR [rcx+0x58]
  414984:	mov    r9,QWORD PTR [rax+0x158]
  41498b:	test   r9,r9
  41498e:	je     0x41499b
  414990:	mov    eax,DWORD PTR [rax+0x168]
  414996:	cmp    DWORD PTR [rdx+0x74],eax
  414999:	je     0x4149a0
  41499b:	jmp    0x4223b8
  4149a0:	rex.WB jmp r9
  4149a3:	nop    DWORD PTR [rax]
  4149a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149b0:	push   r12
  4149b2:	push   rbp
  4149b3:	push   rdi
  4149b4:	push   rsi
  4149b5:	push   rbx
  4149b6:	sub    rsp,0x30
  4149ba:	mov    rsi,QWORD PTR [rcx+0x58]
  4149be:	mov    rdi,rcx
  4149c1:	mov    ecx,DWORD PTR [rdx]
  4149c3:	mov    rbp,rdx
  4149c6:	cmp    ecx,0xffffffff
  4149c9:	je     0x414a27
  4149cb:	mov    rbx,QWORD PTR [rip+0x28dfe]        # 0x43d7d0
  4149d2:	call   0x4225d0
  4149d7:	test   BYTE PTR [rax+0xb],0x8
  4149db:	je     0x414aca
  4149e1:	cmp    QWORD PTR [rbx],0x0
  4149e5:	mov    r10d,DWORD PTR [rbp+0x0]
  4149e9:	je     0x414a1b
  4149eb:	cmp    r10d,DWORD PTR [rbx+0x14]
  4149ef:	je     0x414a34
  4149f1:	xor    r8d,r8d
  4149f4:	jmp    0x414a06
  4149f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a00:	cmp    r10d,DWORD PTR [r9+0x14]
  414a04:	je     0x414a40
  414a06:	add    r8d,0x1
  414a0a:	movsxd rax,r8d
  414a0d:	lea    r9,[rax+rax*2]
  414a11:	lea    r9,[rbx+r9*8]
  414a15:	cmp    QWORD PTR [r9],0x0
  414a19:	jne    0x414a00
  414a1b:	add    rbp,0x4
  414a1f:	mov    ecx,DWORD PTR [rbp+0x0]
  414a22:	cmp    ecx,0xffffffff
  414a25:	jne    0x4149d2
  414a27:	mov    eax,ecx
  414a29:	add    rsp,0x30
  414a2d:	pop    rbx
  414a2e:	pop    rsi
  414a2f:	pop    rdi
  414a30:	pop    rbp
  414a31:	pop    r12
  414a33:	ret    
  414a34:	xor    eax,eax
  414a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a40:	mov    edx,DWORD PTR [rsi+0x140]
  414a46:	test   edx,edx
  414a48:	je     0x414a54
  414a4a:	lea    rcx,[rax+rax*2]
  414a4e:	cmp    edx,DWORD PTR [rbx+rcx*8+0x10]
  414a52:	jne    0x414a1b
  414a54:	mov    edx,DWORD PTR [rsi+0x130]
  414a5a:	cmp    edx,0x1
  414a5d:	je     0x414a69
  414a5f:	lea    rcx,[rax+rax*2]
  414a63:	cmp    edx,DWORD PTR [rbx+rcx*8+0x10]
  414a67:	jne    0x414a1b
  414a69:	lea    rax,[rax+rax*2]
  414a6d:	mov    rcx,rdi
  414a70:	lea    r12,[rbx+rax*8]
  414a74:	call   QWORD PTR [r12+0x8]
  414a79:	test   eax,eax
  414a7b:	mov    eax,DWORD PTR [r12+0x10]
  414a80:	jns    0x414abb
  414a82:	cmp    DWORD PTR [rsi+0x130],eax
  414a88:	jne    0x414a1b
  414a8a:	mov    rax,QWORD PTR [rsi+0x8]
  414a8e:	lea    r8,[rip+0x25443]        # 0x439ed8
  414a95:	mov    edx,0x8
  414a9a:	xor    ecx,ecx
  414a9c:	mov    eax,DWORD PTR [rax]
  414a9e:	mov    DWORD PTR [rsp+0x28],eax
  414aa2:	mov    eax,DWORD PTR [rsi]
  414aa4:	mov    DWORD PTR [rsp+0x20],eax
  414aa8:	mov    r9,QWORD PTR [r12]
  414aac:	call   0x4226c0
  414ab1:	mov    eax,0xffffffff
  414ab6:	jmp    0x414a29
  414abb:	mov    DWORD PTR [rsi+0x140],eax
  414ac1:	mov    eax,DWORD PTR [rbp+0x0]
  414ac4:	mov    DWORD PTR [rsi+0x168],eax
  414aca:	mov    ecx,DWORD PTR [rbp+0x0]
  414acd:	jmp    0x414a27
  414ad2:	nop    DWORD PTR [rax+0x0]
  414ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ae0:	sub    rsp,0x38
  414ae4:	mov    QWORD PTR [rsp+0x58],r9
  414ae9:	lea    r9,[rsp+0x58]
  414aee:	mov    QWORD PTR [rsp+0x28],r9
  414af3:	call   0x427320
  414af8:	add    rsp,0x38
  414afc:	ret    
  414afd:	nop    DWORD PTR [rax]
  414b00:	sub    rsp,0x38
  414b04:	mov    QWORD PTR [rsp+0x50],r8
  414b09:	lea    r8,[rsp+0x50]
  414b0e:	mov    QWORD PTR [rsp+0x58],r9
  414b13:	mov    QWORD PTR [rsp+0x28],r8
  414b18:	call   0x427290
  414b1d:	add    rsp,0x38
  414b21:	ret    
  414b22:	nop    DWORD PTR [rax+0x0]
  414b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b30:	sub    rsp,0x38
  414b34:	mov    QWORD PTR [rsp+0x50],r8
  414b39:	lea    r8,[rsp+0x50]
  414b3e:	mov    QWORD PTR [rsp+0x58],r9
  414b43:	mov    QWORD PTR [rsp+0x28],r8
  414b48:	call   0x424060
  414b4d:	add    rsp,0x38
  414b51:	ret    
  414b52:	nop    DWORD PTR [rax+0x0]
  414b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b60:	push   rdi
  414b61:	push   rsi
  414b62:	push   rbx
  414b63:	sub    rsp,0x30
  414b67:	mov    rsi,rcx
  414b6a:	mov    rcx,QWORD PTR [rip+0x2d6ff]        # 0x442270
  414b71:	mov    ebx,edx
  414b73:	test   rcx,rcx
  414b76:	je     0x414db0
  414b7c:	mov    rdi,QWORD PTR [rsi+0x48]
  414b80:	mov    eax,DWORD PTR [rdi+0xc]
  414b83:	test   eax,eax
  414b85:	je     0x414b90
  414b87:	add    rsp,0x30
  414b8b:	pop    rbx
  414b8c:	pop    rsi
  414b8d:	pop    rdi
  414b8e:	ret    
  414b8f:	nop
  414b90:	pxor   xmm0,xmm0
  414b94:	mov    rax,QWORD PTR [rsi+0x10]
  414b98:	lea    rdx,[rip+0x2538b]        # 0x439f2a
  414b9f:	cvtsi2ss xmm0,DWORD PTR [rsi+0x1b0]
  414ba7:	mov    r8d,DWORD PTR [rax+0x48]
  414bab:	divss  xmm0,DWORD PTR [rip+0x27775]        # 0x43c328
  414bb3:	cvtss2sd xmm0,xmm0
  414bb7:	movapd xmm3,xmm0
  414bbb:	movq   r9,xmm0
  414bc0:	call   0x414b30
  414bc5:	mov    rax,QWORD PTR [rsi+0x1b8]
  414bcc:	test   rax,rax
  414bcf:	js     0x414bdb
  414bd1:	test   BYTE PTR [rdi+0x71],0x80
  414bd5:	jne    0x414d01
  414bdb:	mov    rcx,QWORD PTR [rip+0x2d68e]        # 0x442270
  414be2:	lea    rdx,[rip+0x25363]        # 0x439f4c
  414be9:	mov    r8d,ebx
  414bec:	call   0x414b30
  414bf1:	mov    rcx,QWORD PTR [rsi+0x10]
  414bf5:	call   0x422270
  414bfa:	mov    rdx,QWORD PTR [rsi+0x10]
  414bfe:	pxor   xmm1,xmm1
  414c02:	pxor   xmm2,xmm2
  414c06:	pxor   xmm0,xmm0
  414c0a:	cvtsi2sd xmm1,DWORD PTR [rdx+0x30]
  414c0f:	cvtsi2sd xmm2,DWORD PTR [rdx+0x34]
  414c14:	divsd  xmm1,xmm2
  414c18:	cvtsi2sd xmm0,rax
  414c1d:	mov    rax,QWORD PTR [rsi+0x190]
  414c24:	test   rax,rax
  414c27:	mulsd  xmm1,xmm0
  414c2b:	movsd  xmm0,QWORD PTR [rip+0x276ed]        # 0x43c320
  414c33:	maxsd  xmm0,xmm1
  414c37:	movapd xmm1,xmm0
  414c3b:	js     0x414d85
  414c41:	pxor   xmm4,xmm4
  414c45:	cvtsi2sd xmm4,rax
  414c4a:	shl    rax,0x3
  414c4e:	mulsd  xmm4,QWORD PTR [rip+0x276f2]        # 0x43c348
  414c56:	mov    rcx,QWORD PTR [rip+0x2d613]        # 0x442270
  414c5d:	test   rax,rax
  414c60:	js     0x414d70
  414c66:	pxor   xmm0,xmm0
  414c6a:	cvtsi2sd xmm0,rax
  414c6f:	divsd  xmm0,xmm1
  414c73:	shl    ebx,0x3
  414c76:	movq   r8,xmm4
  414c7b:	movq   r9,xmm1
  414c80:	lea    rdx,[rip+0x252d9]        # 0x439f60
  414c87:	movsd  xmm3,QWORD PTR [rip+0x276c1]        # 0x43c350
  414c8f:	pxor   xmm2,xmm2
  414c93:	pxor   xmm5,xmm5
  414c97:	divsd  xmm0,xmm3
  414c9b:	movsd  QWORD PTR [rsp+0x28],xmm0
  414ca1:	pxor   xmm0,xmm0
  414ca5:	cvtsi2sd xmm5,DWORD PTR [rdi+0x88]
  414cad:	cvtsi2sd xmm2,DWORD PTR [rdi+0x84]
  414cb5:	divsd  xmm2,xmm5
  414cb9:	cvtsi2sd xmm0,ebx
  414cbd:	divsd  xmm0,xmm2
  414cc1:	movapd xmm2,xmm4
  414cc5:	divsd  xmm0,xmm3
  414cc9:	movapd xmm3,xmm1
  414ccd:	movsd  QWORD PTR [rsp+0x20],xmm0
  414cd3:	call   0x414b30
  414cd8:	mov    ecx,DWORD PTR [rsi+0x1b4]
  414cde:	call   0x422710
  414ce3:	mov    rcx,QWORD PTR [rip+0x2d586]        # 0x442270
  414cea:	lea    rdx,[rip+0x252b2]        # 0x439fa3
  414cf1:	movsx  r8d,al
  414cf5:	add    rsp,0x30
  414cf9:	pop    rbx
  414cfa:	pop    rsi
  414cfb:	pop    rdi
  414cfc:	jmp    0x414b30
  414d01:	pxor   xmm0,xmm0
  414d05:	pxor   xmm1,xmm1
  414d09:	movsd  xmm2,QWORD PTR [rip+0x2761f]        # 0x43c330
  414d11:	cvtsi2sd xmm0,rax
  414d16:	mov    eax,DWORD PTR [rdi+0x94]
  414d1c:	imul   eax,DWORD PTR [rdi+0x98]
  414d23:	cvtsi2sd xmm1,eax
  414d27:	mulsd  xmm1,xmm2
  414d2b:	mulsd  xmm1,xmm2
  414d2f:	divsd  xmm0,xmm1
  414d33:	call   0x427380
  414d38:	mulsd  xmm0,QWORD PTR [rip+0x275f8]        # 0x43c338
  414d40:	mov    rcx,QWORD PTR [rip+0x2d529]        # 0x442270
  414d47:	lea    rdx,[rip+0x251f1]        # 0x439f3f
  414d4e:	divsd  xmm0,QWORD PTR [rip+0x275ea]        # 0x43c340
  414d56:	movapd xmm2,xmm0
  414d5a:	movq   r8,xmm0
  414d5f:	call   0x414b30
  414d64:	jmp    0x414bdb
  414d69:	nop    DWORD PTR [rax+0x0]
  414d70:	pxor   xmm0,xmm0
  414d74:	shr    rax,1
  414d77:	cvtsi2sd xmm0,rax
  414d7c:	addsd  xmm0,xmm0
  414d80:	jmp    0x414c6f
  414d85:	mov    rdx,rax
  414d88:	mov    rcx,rax
  414d8b:	pxor   xmm4,xmm4
  414d8f:	shr    rdx,1
  414d92:	and    ecx,0x1
  414d95:	or     rdx,rcx
  414d98:	cvtsi2sd xmm4,rdx
  414d9d:	addsd  xmm4,xmm4
  414da1:	jmp    0x414c4a
  414da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414db0:	mov    rax,QWORD PTR [rip+0x28bc9]        # 0x43d980
  414db7:	lea    rdx,[rip+0x25164]        # 0x439f22
  414dbe:	mov    rcx,QWORD PTR [rax]
  414dc1:	call   0x42fbc0
  414dc6:	test   rax,rax
  414dc9:	mov    rcx,rax
  414dcc:	mov    QWORD PTR [rip+0x2d49d],rax        # 0x442270
  414dd3:	jne    0x414b7c
  414dd9:	lea    rcx,[rip+0x25144]        # 0x439f24
  414de0:	call   0x42fb28
  414de5:	mov    ecx,0x1
  414dea:	call   0x401cb0
  414def:	nop
  414df0:	sub    rsp,0x78
  414df4:	call   QWORD PTR [rip+0x3000e]        # 0x444e08
  414dfa:	lea    rcx,[rsp+0x60]
  414dff:	lea    rdx,[rsp+0x30]
  414e04:	lea    r9,[rsp+0x50]
  414e09:	lea    r8,[rsp+0x40]
  414e0e:	mov    QWORD PTR [rsp+0x20],rcx
  414e13:	mov    rcx,rax
  414e16:	call   QWORD PTR [rip+0x3002c]        # 0x444e48
  414e1c:	mov    ecx,DWORD PTR [rsp+0x64]
  414e20:	mov    eax,DWORD PTR [rsp+0x60]
  414e24:	movabs rdx,0x6666666666666667
  414e2e:	shl    rcx,0x20
  414e32:	or     rcx,rax
  414e35:	mov    rax,rcx
  414e38:	sar    rcx,0x3f
  414e3c:	imul   rdx
  414e3f:	sar    rdx,0x2
  414e43:	mov    rax,rdx
  414e46:	sub    rax,rcx
  414e49:	add    rsp,0x78
  414e4d:	ret    
  414e4e:	xchg   ax,ax
  414e50:	sub    rsp,0x28
  414e54:	mov    DWORD PTR [rip+0x2d3de],ecx        # 0x442238
  414e5a:	mov    eax,DWORD PTR [rip+0x2d3d4]        # 0x442234
  414e60:	add    eax,0x1
  414e63:	mov    DWORD PTR [rip+0x2d3cb],eax        # 0x442234
  414e69:	mov    eax,DWORD PTR [rip+0x2d3c5]        # 0x442234
  414e6f:	cmp    eax,0x3
  414e72:	jg     0x414e79
  414e74:	add    rsp,0x28
  414e78:	ret    
  414e79:	call   0x430120
  414e7e:	nop
  414e7f:	nop
  414e80:	push   r15
  414e82:	push   r14
  414e84:	push   r13
  414e86:	push   r12
  414e88:	push   rbp
  414e89:	push   rdi
  414e8a:	push   rsi
  414e8b:	push   rbx
  414e8c:	sub    rsp,0x908
  414e93:	movaps XMMWORD PTR [rsp+0x870],xmm6
  414e9b:	movaps XMMWORD PTR [rsp+0x880],xmm7
  414ea3:	movaps XMMWORD PTR [rsp+0x890],xmm8
  414eac:	movaps XMMWORD PTR [rsp+0x8a0],xmm9
  414eb5:	movaps XMMWORD PTR [rsp+0x8b0],xmm10
  414ebe:	movaps XMMWORD PTR [rsp+0x8c0],xmm11
  414ec7:	movaps XMMWORD PTR [rsp+0x8d0],xmm12
  414ed0:	movaps XMMWORD PTR [rsp+0x8e0],xmm13
  414ed9:	movaps XMMWORD PTR [rsp+0x8f0],xmm14
  414ee2:	mov    rax,QWORD PTR [rip+0x2d1df]        # 0x4420c8
  414ee9:	mov    DWORD PTR [rsp+0x950],ecx
  414ef0:	mov    QWORD PTR [rsp+0x958],rdx
  414ef8:	mov    QWORD PTR [rsp+0x960],r8
  414f00:	mov    rax,QWORD PTR [rax]
  414f03:	mov    rbx,QWORD PTR [rax]
  414f06:	mov    rcx,QWORD PTR [rbx+0x20]
  414f0a:	call   0x422158
  414f0f:	test   rax,rax
  414f12:	mov    QWORD PTR [rsp+0x50],rax
  414f17:	jle    0x416311
  414f1d:	lea    rax,[rsp+0x470]
  414f25:	xor    edx,edx
  414f27:	mov    r8d,0x1
  414f2d:	mov    BYTE PTR [rsp+0x70],0x0
  414f32:	mov    rcx,rax
  414f35:	mov    QWORD PTR [rsp+0x48],rax
  414f3a:	call   0x422860
  414f3f:	mov    eax,DWORD PTR [rip+0x2d18b]        # 0x4420d0
  414f45:	test   eax,eax
  414f47:	jle    0x41634a
  414f4d:	movabs rax,0x8000000000000000
  414f57:	xor    ebp,ebp
  414f59:	xor    r13d,r13d
  414f5c:	mov    QWORD PTR [rsp+0x40],rax
  414f61:	xor    edi,edi
  414f63:	lea    rbx,[rsp+0x70]
  414f68:	movss  xmm7,DWORD PTR [rip+0x273e8]        # 0x43c358
  414f70:	movss  xmm8,DWORD PTR [rip+0x273af]        # 0x43c328
  414f79:	movsd  xmm9,QWORD PTR [rip+0x273fe]        # 0x43c380
  414f82:	jmp    0x41501c
  414f87:	nop    WORD PTR [rax+rax*1+0x0]
  414f90:	mov    r15d,DWORD PTR [r12+0xc]
  414f95:	test   r15d,r15d
  414f98:	je     0x415485
  414f9e:	mov    r13d,0x1
  414fa4:	mov    rcx,QWORD PTR [rsi+0x10]
  414fa8:	call   0x422270
  414fad:	movabs rdx,0x8000000000000000
  414fb7:	cmp    rax,rdx
  414fba:	je     0x414ff3
  414fbc:	mov    r14,QWORD PTR [rsi+0x10]
  414fc0:	movabs r12,0xf424000000000
  414fca:	mov    r15,r12
  414fcd:	or     r15,0x1
  414fd1:	mov    rcx,r14
  414fd4:	call   0x422270
  414fd9:	mov    rdx,QWORD PTR [r14+0x30]
  414fdd:	mov    r8,r15
  414fe0:	mov    rcx,rax
  414fe3:	call   0x422588
  414fe8:	cmp    rax,QWORD PTR [rsp+0x40]
  414fed:	jge    0x415460
  414ff3:	mov    r12d,DWORD PTR [rsp+0x950]
  414ffb:	test   r12d,r12d
  414ffe:	je     0x415009
  415000:	mov    eax,DWORD PTR [rsi+0x70]
  415003:	add    DWORD PTR [rip+0x2d257],eax        # 0x442260
  415009:	add    edi,0x1
  41500c:	add    rbp,0x8
  415010:	cmp    edi,DWORD PTR [rip+0x2d0ba]        # 0x4420d0
  415016:	jge    0x415504
  41501c:	mov    rax,QWORD PTR [rip+0x2d0b5]        # 0x4420d8
  415023:	movaps xmm6,xmm7
  415026:	mov    rsi,QWORD PTR [rax+rbp*1]
  41502a:	mov    eax,DWORD PTR [rsi+0x160]
  415030:	mov    r12,QWORD PTR [rsi+0x48]
  415034:	test   eax,eax
  415036:	jne    0x415049
  415038:	pxor   xmm6,xmm6
  41503c:	cvtsi2ss xmm6,DWORD PTR [rsi+0x1b0]
  415044:	divss  xmm6,xmm8
  415049:	test   r13d,r13d
  41504c:	jne    0x414f90
  415052:	mov    eax,DWORD PTR [r12+0xc]
  415057:	test   eax,eax
  415059:	jne    0x414fa4
  41505f:	mov    rax,QWORD PTR [rsp+0x960]
  415067:	sub    rax,QWORD PTR [rsp+0x958]
  41506f:	pxor   xmm0,xmm0
  415073:	cvtsi2sd xmm0,rax
  415078:	mov    eax,DWORD PTR [rsi+0x1c]
  41507b:	mov    DWORD PTR [rsp+0x58],eax
  41507f:	divsd  xmm0,QWORD PTR [rip+0x272e1]        # 0x43c368
  415087:	cvtsd2ss xmm0,xmm0
  41508b:	ucomiss xmm0,DWORD PTR [rip+0x272de]        # 0x43c370
  415092:	jbe    0x4159f0
  415098:	pxor   xmm10,xmm10
  41509d:	xor    r8d,r8d
  4150a0:	cvtsi2ss xmm10,eax
  4150a5:	divss  xmm10,xmm0
  4150aa:	movsd  xmm0,QWORD PTR [rip+0x272c6]        # 0x43c378
  4150b2:	cvtss2sd xmm10,xmm10
  4150b7:	ucomisd xmm0,xmm10
  4150bc:	seta   r8b
  4150c0:	pxor   xmm11,xmm11
  4150c5:	mov    rcx,rbx
  4150c8:	cvtss2sd xmm11,xmm6
  4150cd:	mov    edx,DWORD PTR [rcx]
  4150cf:	add    rcx,0x4
  4150d3:	lea    eax,[rdx-0x1010101]
  4150d9:	not    edx
  4150db:	and    eax,edx
  4150dd:	and    eax,0x80808080
  4150e2:	je     0x4150cd
  4150e4:	mov    edx,eax
  4150e6:	mov    r14d,DWORD PTR [rsp+0x58]
  4150eb:	mov    DWORD PTR [rsp+0x20],r8d
  4150f0:	shr    edx,0x10
  4150f3:	test   eax,0x8080
  4150f8:	lea    r8,[rip+0x24efa]        # 0x439ff9
  4150ff:	cmove  eax,edx
  415102:	lea    rdx,[rcx+0x2]
  415106:	movsd  QWORD PTR [rsp+0x30],xmm11
  41510d:	movsd  QWORD PTR [rsp+0x28],xmm10
  415114:	mov    r9d,r14d
  415117:	cmove  rcx,rdx
  41511b:	add    al,al
  41511d:	mov    edx,0x400
  415122:	sbb    rcx,0x3
  415126:	sub    rcx,rbx
  415129:	sub    rdx,rcx
  41512c:	add    rcx,rbx
  41512f:	call   0x414ae0
  415134:	mov    r8d,r14d
  415137:	mov    r14,QWORD PTR [rsp+0x48]
  41513c:	lea    rdx,[rip+0x24ed3]        # 0x43a016
  415143:	mov    rcx,r14
  415146:	call   0x422858
  41514b:	movapd xmm2,xmm10
  415150:	movq   r8,xmm10
  415155:	lea    rdx,[rip+0x24ec4]        # 0x43a020
  41515c:	mov    rcx,r14
  41515f:	call   0x422858
  415164:	mov    r9d,DWORD PTR [rsi+0x4]
  415168:	movsd  QWORD PTR [rsp+0x20],xmm11
  41516f:	mov    r8d,DWORD PTR [rsi]
  415172:	lea    rdx,[rip+0x24e6b]        # 0x439fe4
  415179:	mov    rcx,r14
  41517c:	call   0x422858
  415181:	mov    r14d,DWORD PTR [rsp+0x950]
  415189:	test   r14d,r14d
  41518c:	jne    0x415996
  415192:	mov    rax,QWORD PTR [rip+0x28797]        # 0x43d930
  415199:	mov    r13d,DWORD PTR [rax]
  41519c:	test   r13d,r13d
  41519f:	je     0x415242
  4151a5:	cvtss2si eax,xmm6
  4151a9:	cmp    eax,0x33
  4151ac:	ja     0x4151bb
  4151ae:	lea    rdx,[rip+0x2cf8b]        # 0x442140
  4151b5:	cdqe   
  4151b7:	add    DWORD PTR [rdx+rax*4],0x1
  4151bb:	lea    r15,[rip+0x2cf7e]        # 0x442140
  4151c2:	lea    r14,[rip+0x2cff7]        # 0x4421c0
  4151c9:	mov    r13d,0x400
  4151cf:	nop
  4151d0:	mov    eax,DWORD PTR [r15]
  4151d3:	pxor   xmm0,xmm0
  4151d7:	add    eax,0x1
  4151da:	cvtsi2sd xmm0,eax
  4151de:	call   0x4274e0
  4151e3:	cvtsd2ss xmm0,xmm0
  4151e7:	cvtss2si r9d,xmm0
  4151ec:	mov    rcx,rbx
  4151ef:	mov    edx,DWORD PTR [rcx]
  4151f1:	add    rcx,0x4
  4151f5:	lea    eax,[rdx-0x1010101]
  4151fb:	not    edx
  4151fd:	and    eax,edx
  4151ff:	and    eax,0x80808080
  415204:	je     0x4151ef
  415206:	mov    edx,eax
  415208:	lea    r8,[rip+0x24e1d]        # 0x43a02c
  41520f:	shr    edx,0x10
  415212:	test   eax,0x8080
  415217:	cmove  eax,edx
  41521a:	lea    rdx,[rcx+0x2]
  41521e:	cmove  rcx,rdx
  415222:	add    al,al
  415224:	mov    rdx,r13
  415227:	sbb    rcx,0x3
  41522b:	add    r15,0x4
  41522f:	sub    rcx,rbx
  415232:	sub    rdx,rcx
  415235:	add    rcx,rbx
  415238:	call   0x414ae0
  41523d:	cmp    r15,r14
  415240:	jne    0x4151d0
  415242:	test   BYTE PTR [r12+0x71],0x80
  415248:	mov    r13d,0x1
  41524e:	je     0x414fa4
  415254:	mov    eax,DWORD PTR [rsp+0x950]
  41525b:	or     eax,DWORD PTR [rsi+0x1b4]
  415261:	je     0x414fa4
  415267:	mov    BYTE PTR [rsp+0x60],0x59
  41526c:	mov    BYTE PTR [rsp+0x61],0x55
  415271:	mov    rcx,rbx
  415274:	mov    BYTE PTR [rsp+0x62],0x56
  415279:	mov    edx,DWORD PTR [rcx]
  41527b:	add    rcx,0x4
  41527f:	lea    eax,[rdx-0x1010101]
  415285:	not    edx
  415287:	and    eax,edx
  415289:	and    eax,0x80808080
  41528e:	je     0x415279
  415290:	mov    edx,eax
  415292:	lea    r8,[rip+0x24d96]        # 0x43a02f
  415299:	mov    r13d,0x59
  41529f:	shr    edx,0x10
  4152a2:	test   eax,0x8080
  4152a7:	mov    r15d,0x400
  4152ad:	cmove  eax,edx
  4152b0:	lea    rdx,[rcx+0x2]
  4152b4:	pxor   xmm11,xmm11
  4152b9:	cmove  rcx,rdx
  4152bd:	add    al,al
  4152bf:	mov    edx,0x400
  4152c4:	sbb    rcx,0x3
  4152c8:	xor    r14d,r14d
  4152cb:	sub    rcx,rbx
  4152ce:	movapd xmm10,xmm11
  4152d3:	sub    rdx,rcx
  4152d6:	add    rcx,rbx
  4152d9:	call   0x414ae0
  4152de:	mov    DWORD PTR [rsp+0x5c],edi
  4152e2:	mov    rdi,r14
  4152e5:	mov    r14,r12
  4152e8:	mov    r12d,DWORD PTR [rsp+0x950]
  4152f0:	movsd  xmm12,QWORD PTR [rip+0x27037]        # 0x43c330
  4152f9:	movsd  xmm6,QWORD PTR [rip+0x27037]        # 0x43c338
  415301:	movsd  xmm13,QWORD PTR [rip+0x27036]        # 0x43c340
  41530a:	test   r12d,r12d
  41530d:	je     0x41542b
  415313:	mov    rax,QWORD PTR [r14+rdi*8+0x328]
  41531b:	test   rax,rax
  41531e:	js     0x41632c
  415324:	pxor   xmm0,xmm0
  415328:	cvtsi2sd xmm0,rax
  41532d:	mov    eax,DWORD PTR [r14+0x94]
  415334:	pxor   xmm1,xmm1
  415338:	imul   eax,DWORD PTR [r14+0x98]
  415340:	cvtsi2sd xmm1,eax
  415344:	mulsd  xmm1,xmm12
  415349:	movapd xmm2,xmm1
  41534d:	pxor   xmm1,xmm1
  415351:	mulsd  xmm2,xmm12
  415356:	cvtsi2sd xmm1,DWORD PTR [rsp+0x58]
  41535c:	mulsd  xmm1,xmm2
  415360:	test   rdi,rdi
  415363:	je     0x41536a
  415365:	mulsd  xmm1,xmm9
  41536a:	addsd  xmm10,xmm0
  41536f:	divsd  xmm0,xmm1
  415373:	addsd  xmm11,xmm1
  415378:	call   0x427380
  41537d:	mulsd  xmm0,xmm6
  415381:	mov    rcx,rbx
  415384:	divsd  xmm0,xmm13
  415389:	movapd xmm14,xmm0
  41538e:	mov    edx,DWORD PTR [rcx]
  415390:	add    rcx,0x4
  415394:	lea    eax,[rdx-0x1010101]
  41539a:	not    edx
  41539c:	and    eax,edx
  41539e:	and    eax,0x80808080
  4153a3:	je     0x41538e
  4153a5:	mov    edx,eax
  4153a7:	lea    r8,[rip+0x24c87]        # 0x43a035
  4153ae:	movsd  QWORD PTR [rsp+0x20],xmm14
  4153b5:	shr    edx,0x10
  4153b8:	test   eax,0x8080
  4153bd:	movsx  r9d,r13b
  4153c1:	cmove  eax,edx
  4153c4:	lea    rdx,[rcx+0x2]
  4153c8:	cmove  rcx,rdx
  4153cc:	add    al,al
  4153ce:	mov    rdx,r15
  4153d1:	sbb    rcx,0x3
  4153d5:	or     r13d,0x20
  4153d9:	add    rdi,0x1
  4153dd:	sub    rcx,rbx
  4153e0:	sub    rdx,rcx
  4153e3:	add    rcx,rbx
  4153e6:	call   0x414ae0
  4153eb:	movsx  eax,r13b
  4153ef:	mov    r9d,DWORD PTR [rsi+0x4]
  4153f3:	mov    rcx,QWORD PTR [rsp+0x48]
  4153f8:	movsd  QWORD PTR [rsp+0x28],xmm14
  4153ff:	mov    DWORD PTR [rsp+0x20],eax
  415403:	mov    r8d,DWORD PTR [rsi]
  415406:	lea    rdx,[rip+0x24c32]        # 0x43a03f
  41540d:	call   0x422858
  415412:	cmp    rdi,0x3
  415416:	je     0x4161d8
  41541c:	test   r12d,r12d
  41541f:	movzx  r13d,BYTE PTR [rsp+rdi*1+0x60]
  415425:	jne    0x415313
  41542b:	mov    eax,DWORD PTR [r14+0x94]
  415432:	pxor   xmm1,xmm1
  415436:	imul   eax,DWORD PTR [r14+0x98]
  41543e:	pxor   xmm0,xmm0
  415442:	cvtsi2sd xmm0,QWORD PTR [rsi+rdi*8+0x1b8]
  41544c:	cvtsi2sd xmm1,eax
  415450:	mulsd  xmm1,xmm12
  415455:	mulsd  xmm1,xmm12
  41545a:	jmp    0x415360
  41545f:	nop
  415460:	mov    r14,QWORD PTR [rsi+0x10]
  415464:	mov    rcx,r14
  415467:	call   0x422270
  41546c:	mov    rdx,QWORD PTR [r14+0x30]
  415470:	mov    r8,r15
  415473:	mov    rcx,rax
  415476:	call   0x422588
  41547b:	mov    QWORD PTR [rsp+0x40],rax
  415480:	jmp    0x414ff3
  415485:	cvtss2sd xmm6,xmm6
  415489:	mov    rcx,rbx
  41548c:	mov    edx,DWORD PTR [rcx]
  41548e:	add    rcx,0x4
  415492:	lea    eax,[rdx-0x1010101]
  415498:	not    edx
  41549a:	and    eax,edx
  41549c:	and    eax,0x80808080
  4154a1:	je     0x41548c
  4154a3:	mov    edx,eax
  4154a5:	movq   r9,xmm6
  4154aa:	lea    r8,[rip+0x24b2a]        # 0x439fdb
  4154b1:	shr    edx,0x10
  4154b4:	test   eax,0x8080
  4154b9:	cmove  eax,edx
  4154bc:	lea    rdx,[rcx+0x2]
  4154c0:	movapd xmm3,xmm6
  4154c4:	cmove  rcx,rdx
  4154c8:	add    al,al
  4154ca:	mov    edx,0x400
  4154cf:	sbb    rcx,0x3
  4154d3:	sub    rcx,rbx
  4154d6:	sub    rdx,rcx
  4154d9:	add    rcx,rbx
  4154dc:	call   0x414ae0
  4154e1:	mov    r9d,DWORD PTR [rsi+0x4]
  4154e5:	mov    rcx,QWORD PTR [rsp+0x48]
  4154ea:	movsd  QWORD PTR [rsp+0x20],xmm6
  4154f0:	mov    r8d,DWORD PTR [rsi]
  4154f3:	lea    rdx,[rip+0x24aea]        # 0x439fe4
  4154fa:	call   0x422858
  4154ff:	jmp    0x414f9e
  415504:	mov    r10,QWORD PTR [rsp+0x40]
  415509:	movabs rdx,0x431bde82d7b634db
  415513:	mov    r8d,0x88888889
  415519:	mov    rax,r10
  41551c:	mov    rcx,r10
  41551f:	sar    rax,0x3f
  415523:	xor    rcx,rax
  415526:	sub    rcx,rax
  415529:	mov    rax,rcx
  41552c:	imul   rdx
  41552f:	mov    rax,rcx
  415532:	sar    rax,0x3f
  415536:	mov    rdi,rdx
  415539:	sar    rdi,0x12
  41553d:	sub    rdi,rax
  415540:	imul   rax,rdi,0xf4240
  415547:	sub    rcx,rax
  41554a:	mov    eax,edi
  41554c:	imul   r8d
  41554f:	mov    eax,edi
  415551:	mov    r12d,ecx
  415554:	sar    eax,0x1f
  415557:	lea    esi,[rdx+rdi*1]
  41555a:	sar    esi,0x5
  41555d:	sub    esi,eax
  41555f:	imul   eax,esi,0x3c
  415562:	sub    edi,eax
  415564:	mov    eax,esi
  415566:	imul   r8d
  415569:	mov    eax,esi
  41556b:	sar    eax,0x1f
  41556e:	lea    ebp,[rdx+rsi*1]
  415571:	mov    edx,0x68db8bad
  415576:	sar    ebp,0x5
  415579:	sub    ebp,eax
  41557b:	imul   eax,ebp,0x3c
  41557e:	sub    esi,eax
  415580:	test   r10,r10
  415583:	mov    eax,ecx
  415585:	setne  r8b
  415589:	sar    ecx,0x1f
  41558c:	imul   edx
  41558e:	sar    edx,0xc
  415591:	sub    edx,ecx
  415593:	test   r8b,r8b
  415596:	mov    r13d,edx
  415599:	je     0x415a00
  41559f:	mov    rax,QWORD PTR [rsp+0x50]
  4155a4:	test   rax,rax
  4155a7:	js     0x415a00
  4155ad:	pxor   xmm0,xmm0
  4155b1:	shl    rax,0x3
  4155b5:	pxor   xmm6,xmm6
  4155b9:	cvtsi2sd xmm0,QWORD PTR [rsp+0x40]
  4155c0:	divsd  xmm0,QWORD PTR [rip+0x26d88]        # 0x43c350
  4155c8:	cvtsi2sd xmm6,rax
  4155cd:	divsd  xmm6,xmm0
  4155d1:	mov    rcx,rbx
  4155d4:	mov    edx,DWORD PTR [rcx]
  4155d6:	add    rcx,0x4
  4155da:	lea    eax,[rdx-0x1010101]
  4155e0:	not    edx
  4155e2:	and    eax,edx
  4155e4:	and    eax,0x80808080
  4155e9:	je     0x4155d4
  4155eb:	mov    edx,eax
  4155ed:	lea    r8,[rip+0x24a9c]        # 0x43a090
  4155f4:	shr    edx,0x10
  4155f7:	test   eax,0x8080
  4155fc:	cmove  eax,edx
  4155ff:	lea    rdx,[rcx+0x2]
  415603:	cmove  rcx,rdx
  415607:	add    al,al
  415609:	mov    edx,0x400
  41560e:	sbb    rcx,0x3
  415612:	sub    rcx,rbx
  415615:	pxor   xmm0,xmm0
  415619:	sub    rdx,rcx
  41561c:	add    rcx,rbx
  41561f:	cvtsi2sd xmm0,QWORD PTR [rsp+0x50]
  415626:	mulsd  xmm0,QWORD PTR [rip+0x26d1a]        # 0x43c348
  41562e:	movapd xmm3,xmm0
  415632:	movq   r9,xmm0
  415637:	call   0x414ae0
  41563c:	cmp    QWORD PTR [rsp+0x40],0x0
  415642:	js     0x4162bd
  415648:	mov    rcx,rbx
  41564b:	mov    edx,DWORD PTR [rcx]
  41564d:	add    rcx,0x4
  415651:	lea    eax,[rdx-0x1010101]
  415657:	not    edx
  415659:	and    eax,edx
  41565b:	and    eax,0x80808080
  415660:	je     0x41564b
  415662:	mov    edx,eax
  415664:	lea    r8,[rip+0x24a3a]        # 0x43a0a5
  41566b:	mov    DWORD PTR [rsp+0x30],r13d
  415670:	shr    edx,0x10
  415673:	test   eax,0x8080
  415678:	mov    DWORD PTR [rsp+0x28],edi
  41567c:	cmove  eax,edx
  41567f:	lea    rdx,[rcx+0x2]
  415683:	mov    DWORD PTR [rsp+0x20],esi
  415687:	mov    r9d,ebp
  41568a:	cmove  rcx,rdx
  41568e:	add    al,al
  415690:	mov    edx,0x400
  415695:	sbb    rcx,0x3
  415699:	sub    rcx,rbx
  41569c:	sub    rdx,rcx
  41569f:	add    rcx,rbx
  4156a2:	call   0x414ae0
  4156a7:	pxor   xmm0,xmm0
  4156ab:	mov    rcx,rbx
  4156ae:	ucomisd xmm0,xmm6
  4156b2:	ja     0x415ac9
  4156b8:	mov    edx,DWORD PTR [rcx]
  4156ba:	add    rcx,0x4
  4156be:	lea    eax,[rdx-0x1010101]
  4156c4:	not    edx
  4156c6:	and    eax,edx
  4156c8:	and    eax,0x80808080
  4156cd:	je     0x4156b8
  4156cf:	mov    edx,eax
  4156d1:	movapd xmm3,xmm6
  4156d5:	shr    edx,0x10
  4156d8:	test   eax,0x8080
  4156dd:	movq   r9,xmm6
  4156e2:	cmove  eax,edx
  4156e5:	lea    rdx,[rcx+0x2]
  4156e9:	lea    r8,[rip+0x249e3]        # 0x43a0d3
  4156f0:	cmove  rcx,rdx
  4156f4:	add    al,al
  4156f6:	mov    edx,0x400
  4156fb:	sbb    rcx,0x3
  4156ff:	sub    rcx,rbx
  415702:	sub    rdx,rcx
  415705:	add    rcx,rbx
  415708:	call   0x414ae0
  41570d:	mov    rcx,QWORD PTR [rsp+0x48]
  415712:	movapd xmm2,xmm6
  415716:	movq   r8,xmm6
  41571b:	lea    rdx,[rip+0x249c6]        # 0x43a0e8
  415722:	call   0x422858
  415727:	cmp    QWORD PTR [rsp+0x50],0x0
  41572d:	js     0x415b35
  415733:	mov    r8,QWORD PTR [rsp+0x50]
  415738:	mov    rcx,QWORD PTR [rsp+0x48]
  41573d:	lea    rdx,[rip+0x249ca]        # 0x43a10e
  415744:	call   0x422858
  415749:	mov    r14,QWORD PTR [rsp+0x48]
  41574e:	mov    r8,QWORD PTR [rsp+0x40]
  415753:	lea    rdx,[rip+0x249c5]        # 0x43a11f
  41575a:	mov    rcx,r14
  41575d:	call   0x422858
  415762:	lea    rdx,[rip+0x249c8]        # 0x43a131
  415769:	mov    r9d,esi
  41576c:	mov    r8d,ebp
  41576f:	mov    DWORD PTR [rsp+0x28],r12d
  415774:	mov    DWORD PTR [rsp+0x20],edi
  415778:	mov    rcx,r14
  41577b:	call   0x422858
  415780:	mov    r9d,DWORD PTR [rip+0x2cadd]        # 0x442264
  415787:	mov    r8d,DWORD PTR [rip+0x2cad2]        # 0x442260
  41578e:	test   r9d,r9d
  415791:	jne    0x415798
  415793:	test   r8d,r8d
  415796:	je     0x4157f3
  415798:	mov    rcx,rbx
  41579b:	mov    edx,DWORD PTR [rcx]
  41579d:	add    rcx,0x4
  4157a1:	lea    eax,[rdx-0x1010101]
  4157a7:	not    edx
  4157a9:	and    eax,edx
  4157ab:	and    eax,0x80808080
  4157b0:	je     0x41579b
  4157b2:	mov    edx,eax
  4157b4:	mov    DWORD PTR [rsp+0x20],r8d
  4157b9:	lea    r8,[rip+0x2498f]        # 0x43a14f
  4157c0:	shr    edx,0x10
  4157c3:	test   eax,0x8080
  4157c8:	cmove  eax,edx
  4157cb:	lea    rdx,[rcx+0x2]
  4157cf:	cmove  rcx,rdx
  4157d3:	add    al,al
  4157d5:	mov    edx,0x400
  4157da:	sbb    rcx,0x3
  4157de:	sub    rcx,rbx
  4157e1:	sub    rdx,rcx
  4157e4:	add    rcx,rbx
  4157e7:	call   0x414ae0
  4157ec:	mov    r8d,DWORD PTR [rip+0x2ca71]        # 0x442264
  4157f3:	mov    rdi,QWORD PTR [rsp+0x48]
  4157f8:	lea    rdx,[rip+0x24960]        # 0x43a15f
  4157ff:	mov    rcx,rdi
  415802:	call   0x422858
  415807:	mov    r8d,DWORD PTR [rip+0x2ca52]        # 0x442260
  41580e:	lea    rdx,[rip+0x24959]        # 0x43a16e
  415815:	mov    rcx,rdi
  415818:	call   0x422858
  41581d:	mov    rax,QWORD PTR [rip+0x280cc]        # 0x43d8f0
  415824:	mov    eax,DWORD PTR [rax]
  415826:	mov    edi,eax
  415828:	or     edi,DWORD PTR [rsp+0x950]
  41582f:	je     0x415876
  415831:	cmp    DWORD PTR [rsp+0x950],0x1
  415839:	sbb    esi,esi
  41583b:	and    esi,0x3
  41583e:	add    esi,0xa
  415841:	cmp    eax,0x1
  415844:	je     0x416283
  41584a:	lea    r8,[rip+0x2492d]        # 0x43a17e
  415851:	mov    DWORD PTR [rsp+0x20],esi
  415855:	mov    r9,rbx
  415858:	mov    edx,0x20
  41585d:	xor    ecx,ecx
  41585f:	call   0x4226c0
  415864:	mov    rdi,QWORD PTR [rip+0x2f6e5]        # 0x444f50
  41586b:	call   rdi
  41586d:	lea    rcx,[rax+0x60]
  415871:	call   0x42fbd0
  415876:	cmp    QWORD PTR [rip+0x2c882],0x0        # 0x442100
  41587e:	je     0x41626f
  415884:	mov    edi,DWORD PTR [rsp+0x950]
  41588b:	test   edi,edi
  41588d:	je     0x415b80
  415893:	mov    rdi,QWORD PTR [rsp+0x48]
  415898:	lea    r8,[rip+0x24b10]        # 0x43a3af
  41589f:	lea    rdx,[rip+0x24b0d]        # 0x43a3b3
  4158a6:	mov    rcx,rdi
  4158a9:	call   0x422858
  4158ae:	mov    eax,DWORD PTR [rsp+0x47c]
  4158b5:	mov    r8d,DWORD PTR [rsp+0x478]
  4158bd:	mov    rdx,QWORD PTR [rsp+0x470]
  4158c5:	mov    rcx,QWORD PTR [rip+0x2c834]        # 0x442100
  4158cc:	sub    eax,0x1
  4158cf:	cmp    eax,r8d
  4158d2:	cmovbe r8d,eax
  4158d6:	call   0x422148
  4158db:	mov    rcx,QWORD PTR [rip+0x2c81e]        # 0x442100
  4158e2:	call   0x422198
  4158e7:	mov    rcx,rdi
  4158ea:	xor    edx,edx
  4158ec:	call   0x422868
  4158f1:	lea    rcx,[rip+0x2c808]        # 0x442100
  4158f8:	call   0x4221b0
  4158fd:	mov    edx,DWORD PTR [rip+0x2c7cd]        # 0x4420d0
  415903:	test   edx,edx
  415905:	jle    0x416439
  41590b:	mov    rax,QWORD PTR [rip+0x2c7c6]        # 0x4420d8
  415912:	sub    edx,0x1
  415915:	mov    r12d,0x1
  41591b:	xor    r13d,r13d
  41591e:	xor    ebx,ebx
  415920:	xor    r9d,r9d
  415923:	xor    edi,edi
  415925:	xor    ebp,ebp
  415927:	xor    esi,esi
  415929:	lea    r10,[rax+rdx*8+0x8]
  41592e:	xor    r8d,r8d
  415931:	jmp    0x41597b
  415933:	cmp    ecx,0x3
  415936:	je     0x415b70
  41593c:	test   ecx,ecx
  41593e:	mov    rcx,QWORD PTR [r11+0x190]
  415945:	je     0x415b60
  41594b:	add    r9,rcx
  41594e:	movsxd r11,DWORD PTR [rdx+0x80]
  415955:	mov    edx,DWORD PTR [rdx+0x70]
  415958:	add    r13,rcx
  41595b:	and    edx,0x600
  415961:	add    rbx,r11
  415964:	cmp    edx,0x200
  41596a:	cmovne r12d,r8d
  41596e:	add    rax,0x8
  415972:	cmp    rax,r10
  415975:	je     0x415c42
  41597b:	mov    r11,QWORD PTR [rax]
  41597e:	mov    rdx,QWORD PTR [r11+0x48]
  415982:	mov    ecx,DWORD PTR [rdx+0xc]
  415985:	cmp    ecx,0x1
  415988:	jne    0x415933
  41598a:	mov    rcx,QWORD PTR [r11+0x190]
  415991:	add    rbp,rcx
  415994:	jmp    0x41594e
  415996:	mov    rcx,rbx
  415999:	mov    edx,DWORD PTR [rcx]
  41599b:	add    rcx,0x4
  41599f:	lea    eax,[rdx-0x1010101]
  4159a5:	not    edx
  4159a7:	and    eax,edx
  4159a9:	and    eax,0x80808080
  4159ae:	je     0x415999
  4159b0:	mov    edx,eax
  4159b2:	lea    r8,[rip+0x24671]        # 0x43a02a
  4159b9:	shr    edx,0x10
  4159bc:	test   eax,0x8080
  4159c1:	cmove  eax,edx
  4159c4:	lea    rdx,[rcx+0x2]
  4159c8:	cmove  rcx,rdx
  4159cc:	add    al,al
  4159ce:	mov    edx,0x400
  4159d3:	sbb    rcx,0x3
  4159d7:	sub    rcx,rbx
  4159da:	sub    rdx,rcx
  4159dd:	add    rcx,rbx
  4159e0:	call   0x414ae0
  4159e5:	jmp    0x415192
  4159ea:	nop    WORD PTR [rax+rax*1+0x0]
  4159f0:	mov    r8d,0x1
  4159f6:	pxor   xmm10,xmm10
  4159fb:	jmp    0x4150c0
  415a00:	cmp    QWORD PTR [rsp+0x50],0x0
  415a06:	jns    0x415b4b
  415a0c:	mov    rcx,rbx
  415a0f:	mov    edx,DWORD PTR [rcx]
  415a11:	add    rcx,0x4
  415a15:	lea    eax,[rdx-0x1010101]
  415a1b:	not    edx
  415a1d:	and    eax,edx
  415a1f:	and    eax,0x80808080
  415a24:	je     0x415a0f
  415a26:	mov    edx,eax
  415a28:	lea    r8,[rip+0x24652]        # 0x43a081
  415a2f:	shr    edx,0x10
  415a32:	test   eax,0x8080
  415a37:	cmove  eax,edx
  415a3a:	lea    rdx,[rcx+0x2]
  415a3e:	cmove  rcx,rdx
  415a42:	add    al,al
  415a44:	mov    edx,0x400
  415a49:	sbb    rcx,0x3
  415a4d:	sub    rcx,rbx
  415a50:	sub    rdx,rcx
  415a53:	add    rcx,rbx
  415a56:	call   0x414ae0
  415a5b:	cmp    QWORD PTR [rsp+0x40],0x0
  415a61:	mov    rax,rbx
  415a64:	js     0x4162b5
  415a6a:	mov    ecx,DWORD PTR [rax]
  415a6c:	add    rax,0x4
  415a70:	lea    edx,[rcx-0x1010101]
  415a76:	not    ecx
  415a78:	and    edx,ecx
  415a7a:	and    edx,0x80808080
  415a80:	je     0x415a6a
  415a82:	mov    ecx,edx
  415a84:	lea    r8,[rip+0x2461a]        # 0x43a0a5
  415a8b:	mov    DWORD PTR [rsp+0x30],r13d
  415a90:	shr    ecx,0x10
  415a93:	test   edx,0x8080
  415a99:	mov    DWORD PTR [rsp+0x28],edi
  415a9d:	cmove  edx,ecx
  415aa0:	lea    rcx,[rax+0x2]
  415aa4:	mov    DWORD PTR [rsp+0x20],esi
  415aa8:	mov    r9d,ebp
  415aab:	cmove  rax,rcx
  415aaf:	add    dl,dl
  415ab1:	mov    edx,0x400
  415ab6:	sbb    rax,0x3
  415aba:	sub    rax,rbx
  415abd:	lea    rcx,[rbx+rax*1]
  415ac1:	sub    rdx,rax
  415ac4:	call   0x414ae0
  415ac9:	mov    rcx,rbx
  415acc:	mov    edx,DWORD PTR [rcx]
  415ace:	add    rcx,0x4
  415ad2:	lea    eax,[rdx-0x1010101]
  415ad8:	not    edx
  415ada:	and    eax,edx
  415adc:	and    eax,0x80808080
  415ae1:	je     0x415acc
  415ae3:	mov    edx,eax
  415ae5:	lea    r8,[rip+0x245ce]        # 0x43a0ba
  415aec:	shr    edx,0x10
  415aef:	test   eax,0x8080
  415af4:	cmove  eax,edx
  415af7:	lea    rdx,[rcx+0x2]
  415afb:	cmove  rcx,rdx
  415aff:	add    al,al
  415b01:	mov    edx,0x400
  415b06:	sbb    rcx,0x3
  415b0a:	sub    rcx,rbx
  415b0d:	sub    rdx,rcx
  415b10:	add    rcx,rbx
  415b13:	call   0x414ae0
  415b18:	mov    rcx,QWORD PTR [rsp+0x48]
  415b1d:	lea    rdx,[rip+0x245a2]        # 0x43a0c6
  415b24:	call   0x422858
  415b29:	cmp    QWORD PTR [rsp+0x50],0x0
  415b2f:	jns    0x415733
  415b35:	mov    rcx,QWORD PTR [rsp+0x48]
  415b3a:	lea    rdx,[rip+0x245bd]        # 0x43a0fe
  415b41:	call   0x422858
  415b46:	jmp    0x415749
  415b4b:	movsd  xmm6,QWORD PTR [rip+0x2680d]        # 0x43c360
  415b53:	jmp    0x4155d1
  415b58:	nop    DWORD PTR [rax+rax*1+0x0]
  415b60:	add    rsi,rcx
  415b63:	jmp    0x41594e
  415b68:	nop    DWORD PTR [rax+rax*1+0x0]
  415b70:	mov    rcx,QWORD PTR [r11+0x190]
  415b77:	add    rdi,rcx
  415b7a:	jmp    0x41594e
  415b7f:	nop
  415b80:	mov    rdi,QWORD PTR [rsp+0x48]
  415b85:	lea    r8,[rip+0x24834]        # 0x43a3c0
  415b8c:	lea    rdx,[rip+0x24820]        # 0x43a3b3
  415b93:	mov    rcx,rdi
  415b96:	call   0x422858
  415b9b:	mov    eax,DWORD PTR [rsp+0x47c]
  415ba2:	mov    r8d,DWORD PTR [rsp+0x478]
  415baa:	mov    rdx,QWORD PTR [rsp+0x470]
  415bb2:	mov    rcx,QWORD PTR [rip+0x2c547]        # 0x442100
  415bb9:	sub    eax,0x1
  415bbc:	cmp    eax,r8d
  415bbf:	cmovbe r8d,eax
  415bc3:	call   0x422148
  415bc8:	mov    rcx,QWORD PTR [rip+0x2c531]        # 0x442100
  415bcf:	call   0x422198
  415bd4:	xor    edx,edx
  415bd6:	mov    rcx,rdi
  415bd9:	call   0x422868
  415bde:	nop
  415bdf:	movaps xmm6,XMMWORD PTR [rsp+0x870]
  415be7:	movaps xmm7,XMMWORD PTR [rsp+0x880]
  415bef:	movaps xmm8,XMMWORD PTR [rsp+0x890]
  415bf8:	movaps xmm9,XMMWORD PTR [rsp+0x8a0]
  415c01:	movaps xmm10,XMMWORD PTR [rsp+0x8b0]
  415c0a:	movaps xmm11,XMMWORD PTR [rsp+0x8c0]
  415c13:	movaps xmm12,XMMWORD PTR [rsp+0x8d0]
  415c1c:	movaps xmm13,XMMWORD PTR [rsp+0x8e0]
  415c25:	movaps xmm14,XMMWORD PTR [rsp+0x8f0]
  415c2e:	add    rsp,0x908
  415c35:	pop    rbx
  415c36:	pop    rsi
  415c37:	pop    rdi
  415c38:	pop    rbp
  415c39:	pop    r12
  415c3b:	pop    r13
  415c3d:	pop    r14
  415c3f:	pop    r15
  415c41:	ret    
  415c42:	test   r13,r13
  415c45:	mov    DWORD PTR [rsp+0x48],r12d
  415c4a:	je     0x415c5f
  415c4c:	mov    rax,QWORD PTR [rsp+0x50]
  415c51:	test   rax,rax
  415c54:	jle    0x415c5f
  415c56:	cmp    rax,r13
  415c59:	jae    0x4160b1
  415c5f:	test   rsi,rsi
  415c62:	js     0x4163d8
  415c68:	pxor   xmm1,xmm1
  415c6c:	cvtsi2sd xmm1,rsi
  415c71:	movsd  xmm0,QWORD PTR [rip+0x266cf]        # 0x43c348
  415c79:	test   rbx,rbx
  415c7c:	mulsd  xmm1,xmm0
  415c80:	js     0x4163b7
  415c86:	pxor   xmm2,xmm2
  415c8a:	cvtsi2sd xmm2,rbx
  415c8f:	mulsd  xmm2,xmm0
  415c93:	test   r9,r9
  415c96:	movsd  QWORD PTR [rsp+0x38],xmm2
  415c9c:	js     0x41641a
  415ca2:	pxor   xmm2,xmm2
  415ca6:	cvtsi2sd xmm2,r9
  415cab:	mulsd  xmm2,xmm0
  415caf:	test   rdi,rdi
  415cb2:	movsd  QWORD PTR [rsp+0x30],xmm2
  415cb8:	js     0x4163f9
  415cbe:	pxor   xmm2,xmm2
  415cc2:	cvtsi2sd xmm2,rdi
  415cc7:	mulsd  xmm2,xmm0
  415ccb:	test   rbp,rbp
  415cce:	movsd  QWORD PTR [rsp+0x28],xmm2
  415cd4:	js     0x416396
  415cda:	pxor   xmm2,xmm2
  415cde:	cvtsi2sd xmm2,rbp
  415ce3:	mulsd  xmm0,xmm2
  415ce7:	add    rdi,rbp
  415cea:	movq   r9,xmm1
  415cef:	movapd xmm3,xmm1
  415cf3:	lea    r8,[rip+0x2448e]        # 0x43a188
  415cfa:	add    rsi,rdi
  415cfd:	mov    edx,0x20
  415d02:	xor    ecx,ecx
  415d04:	add    r13,rsi
  415d07:	movsd  QWORD PTR [rsp+0x20],xmm0
  415d0d:	call   0x4226c0
  415d12:	lea    rax,[r13+rbx*1+0x0]
  415d17:	mov    QWORD PTR [rsp+0x40],rax
  415d1c:	lea    r8,[rip+0x244d6]        # 0x43a1f9
  415d23:	mov    edx,0x20
  415d28:	xor    ecx,ecx
  415d2a:	call   0x4226c0
  415d2f:	lea    r8,[rip+0x244cb]        # 0x43a201
  415d36:	xor    ecx,ecx
  415d38:	mov    edx,0x20
  415d3d:	xor    r15d,r15d
  415d40:	xor    r14d,r14d
  415d43:	call   0x4226c0
  415d48:	mov    ebx,DWORD PTR [rip+0x2c392]        # 0x4420e0
  415d4e:	test   ebx,ebx
  415d50:	jle    0x415eb0
  415d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d60:	mov    rax,QWORD PTR [rip+0x2c381]        # 0x4420e8
  415d67:	lea    r8,[rip+0x24495]        # 0x43a203
  415d6e:	xor    ecx,ecx
  415d70:	mov    r9d,r14d
  415d73:	mov    edx,0x28
  415d78:	xor    ebp,ebp
  415d7a:	xor    r12d,r12d
  415d7d:	mov    rdi,QWORD PTR [rax+r15*1]
  415d81:	mov    rax,QWORD PTR [rdi]
  415d84:	add    rax,0x38
  415d88:	mov    QWORD PTR [rsp+0x20],rax
  415d8d:	call   0x4226c0
  415d92:	mov    r10d,DWORD PTR [rdi+0x48]
  415d96:	test   r10d,r10d
  415d99:	jle    0x415e80
  415d9f:	xor    esi,esi
  415da1:	jmp    0x415dc2
  415da3:	lea    r8,[rip+0x24457]        # 0x43a201
  415daa:	xor    ecx,ecx
  415dac:	mov    edx,0x28
  415db1:	add    esi,0x1
  415db4:	call   0x4226c0
  415db9:	cmp    esi,DWORD PTR [rdi+0x48]
  415dbc:	jge    0x415e80
  415dc2:	mov    eax,DWORD PTR [rdi+0x10]
  415dc5:	mov    rdx,QWORD PTR [rip+0x2c32c]        # 0x4420f8
  415dcc:	add    eax,esi
  415dce:	cdqe   
  415dd0:	mov    rbx,QWORD PTR [rdx+rax*8]
  415dd4:	mov    rax,QWORD PTR [rbx+0x20]
  415dd8:	add    r12,QWORD PTR [rbx+0x170]
  415ddf:	add    rbp,QWORD PTR [rbx+0x178]
  415de6:	mov    r13d,DWORD PTR [rax+0xc]
  415dea:	mov    ecx,r13d
  415ded:	call   0x422718
  415df2:	lea    r8,[rip+0x24420]        # 0x43a219
  415df9:	xor    ecx,ecx
  415dfb:	mov    QWORD PTR [rsp+0x28],rax
  415e00:	mov    r9d,r14d
  415e03:	mov    edx,0x28
  415e08:	mov    DWORD PTR [rsp+0x20],esi
  415e0c:	call   0x4226c0
  415e11:	mov    rax,QWORD PTR [rbx+0x170]
  415e18:	mov    r9,QWORD PTR [rbx+0x178]
  415e1f:	lea    r8,[rip+0x24412]        # 0x43a238
  415e26:	xor    ecx,ecx
  415e28:	mov    edx,0x28
  415e2d:	mov    QWORD PTR [rsp+0x20],rax
  415e32:	call   0x4226c0
  415e37:	mov    r9d,DWORD PTR [rbx+0x18]
  415e3b:	test   r9d,r9d
  415e3e:	je     0x415da3
  415e44:	mov    r9,QWORD PTR [rbx+0x180]
  415e4b:	lea    r8,[rip+0x24407]        # 0x43a259
  415e52:	xor    ecx,ecx
  415e54:	mov    edx,0x28
  415e59:	call   0x4226c0
  415e5e:	cmp    r13d,0x1
  415e62:	je     0x416073
  415e68:	lea    r8,[rip+0x2440e]        # 0x43a27d
  415e6f:	mov    edx,0x28
  415e74:	xor    ecx,ecx
  415e76:	call   0x4226c0
  415e7b:	jmp    0x415da3
  415e80:	lea    r8,[rip+0x243f9]        # 0x43a280
  415e87:	xor    ecx,ecx
  415e89:	mov    QWORD PTR [rsp+0x20],r12
  415e8e:	mov    r9,rbp
  415e91:	mov    edx,0x28
  415e96:	add    r14d,0x1
  415e9a:	call   0x4226c0
  415e9f:	add    r15,0x8
  415ea3:	cmp    r14d,DWORD PTR [rip+0x2c236]        # 0x4420e0
  415eaa:	jl     0x415d60
  415eb0:	mov    r11d,DWORD PTR [rip+0x2c209]        # 0x4420c0
  415eb7:	xor    r15d,r15d
  415eba:	xor    r14d,r14d
  415ebd:	test   r11d,r11d
  415ec0:	jle    0x416030
  415ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ed0:	mov    rax,QWORD PTR [rip+0x2c1f1]        # 0x4420c8
  415ed7:	lea    r8,[rip+0x243ce]        # 0x43a2ac
  415ede:	xor    ecx,ecx
  415ee0:	mov    r9d,r14d
  415ee3:	mov    edx,0x28
  415ee8:	xor    ebp,ebp
  415eea:	xor    r12d,r12d
  415eed:	mov    rdi,QWORD PTR [rax+r15*1]
  415ef1:	mov    rax,QWORD PTR [rdi]
  415ef4:	add    rax,0x38
  415ef8:	mov    QWORD PTR [rsp+0x20],rax
  415efd:	call   0x4226c0
  415f02:	mov    rax,QWORD PTR [rdi]
  415f05:	mov    r8d,DWORD PTR [rax+0x2c]
  415f09:	test   r8d,r8d
  415f0c:	je     0x416000
  415f12:	xor    esi,esi
  415f14:	jmp    0x415f68
  415f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f20:	mov    rax,QWORD PTR [rbx+0x190]
  415f27:	mov    r9,QWORD PTR [rbx+0x198]
  415f2e:	lea    r8,[rip+0x243c3]        # 0x43a2f8
  415f35:	xor    ecx,ecx
  415f37:	mov    edx,0x28
  415f3c:	add    esi,0x1
  415f3f:	mov    QWORD PTR [rsp+0x20],rax
  415f44:	call   0x4226c0
  415f49:	lea    r8,[rip+0x242b1]        # 0x43a201
  415f50:	xor    ecx,ecx
  415f52:	mov    edx,0x28
  415f57:	call   0x4226c0
  415f5c:	mov    rax,QWORD PTR [rdi]
  415f5f:	cmp    esi,DWORD PTR [rax+0x2c]
  415f62:	jae    0x416000
  415f68:	mov    eax,DWORD PTR [rdi+0x10]
  415f6b:	mov    rdx,QWORD PTR [rip+0x2c166]        # 0x4420d8
  415f72:	add    eax,esi
  415f74:	cdqe   
  415f76:	mov    rbx,QWORD PTR [rdx+rax*8]
  415f7a:	mov    rax,QWORD PTR [rbx+0x48]
  415f7e:	add    r12,QWORD PTR [rbx+0x190]
  415f85:	add    rbp,QWORD PTR [rbx+0x198]
  415f8c:	mov    r13d,DWORD PTR [rax+0xc]
  415f90:	mov    ecx,r13d
  415f93:	call   0x422718
  415f98:	lea    r8,[rip+0x24324]        # 0x43a2c3
  415f9f:	xor    ecx,ecx
  415fa1:	mov    QWORD PTR [rsp+0x28],rax
  415fa6:	mov    DWORD PTR [rsp+0x20],esi
  415faa:	mov    r9d,r14d
  415fad:	mov    edx,0x28
  415fb2:	call   0x4226c0
  415fb7:	mov    ecx,DWORD PTR [rbx+0x18]
  415fba:	test   ecx,ecx
  415fbc:	je     0x415f20
  415fc2:	mov    r9,QWORD PTR [rbx+0x1a0]
  415fc9:	lea    r8,[rip+0x24311]        # 0x43a2e1
  415fd0:	xor    ecx,ecx
  415fd2:	mov    edx,0x28
  415fd7:	call   0x4226c0
  415fdc:	cmp    r13d,0x1
  415fe0:	je     0x416092
  415fe6:	lea    r8,[rip+0x24290]        # 0x43a27d
  415fed:	mov    edx,0x28
  415ff2:	xor    ecx,ecx
  415ff4:	call   0x4226c0
  415ff9:	jmp    0x415f20
  415ffe:	xchg   ax,ax
  416000:	lea    r8,[rip+0x24319]        # 0x43a320
  416007:	xor    ecx,ecx
  416009:	mov    QWORD PTR [rsp+0x20],r12
  41600e:	mov    r9,rbp
  416011:	mov    edx,0x28
  416016:	add    r14d,0x1
  41601a:	call   0x4226c0
  41601f:	add    r15,0x8
  416023:	cmp    r14d,DWORD PTR [rip+0x2c096]        # 0x4420c0
  41602a:	jl     0x415ed0
  416030:	cmp    QWORD PTR [rsp+0x40],0x0
  416036:	jne    0x415bdf
  41603c:	lea    r8,[rip+0x2430d]        # 0x43a350
  416043:	mov    edx,0x18
  416048:	xor    ecx,ecx
  41604a:	call   0x4226c0
  41604f:	mov    edx,DWORD PTR [rsp+0x48]
  416053:	test   edx,edx
  416055:	jne    0x41637e
  41605b:	lea    r8,[rip+0x2431e]        # 0x43a380
  416062:	mov    edx,0x18
  416067:	xor    ecx,ecx
  416069:	call   0x4226c0
  41606e:	jmp    0x415bdf
  416073:	mov    r9,QWORD PTR [rbx+0x188]
  41607a:	lea    r8,[rip+0x241ec]        # 0x43a26d
  416081:	mov    edx,0x28
  416086:	xor    ecx,ecx
  416088:	call   0x4226c0
  41608d:	jmp    0x415e68
  416092:	mov    r9,QWORD PTR [rbx+0x1a8]
  416099:	lea    r8,[rip+0x241cd]        # 0x43a26d
  4160a0:	mov    edx,0x28
  4160a5:	xor    ecx,ecx
  4160a7:	call   0x4226c0
  4160ac:	jmp    0x415fe6
  4160b1:	mov    rdx,rax
  4160b4:	sub    rdx,r13
  4160b7:	js     0x4164a5
  4160bd:	pxor   xmm0,xmm0
  4160c1:	cvtsi2sd xmm0,rdx
  4160c6:	pxor   xmm1,xmm1
  4160ca:	lea    rax,[rbp+rdi*1+0x0]
  4160cf:	mulsd  xmm0,QWORD PTR [rip+0x262b1]        # 0x43c388
  4160d7:	add    rax,rsi
  4160da:	pxor   xmm6,xmm6
  4160de:	cvtsi2sd xmm1,r13
  4160e3:	add    r13,rax
  4160e6:	lea    rax,[r13+rbx*1+0x0]
  4160eb:	test   rsi,rsi
  4160ee:	mov    QWORD PTR [rsp+0x40],rax
  4160f3:	divsd  xmm0,xmm1
  4160f7:	cvtsd2ss xmm6,xmm0
  4160fb:	js     0x41651e
  416101:	pxor   xmm1,xmm1
  416105:	cvtsi2sd xmm1,rsi
  41610a:	movsd  xmm0,QWORD PTR [rip+0x26236]        # 0x43c348
  416112:	test   rbx,rbx
  416115:	mulsd  xmm1,xmm0
  416119:	js     0x416500
  41611f:	pxor   xmm2,xmm2
  416123:	cvtsi2sd xmm2,rbx
  416128:	mulsd  xmm2,xmm0
  41612c:	test   r9,r9
  41612f:	movsd  QWORD PTR [rsp+0x38],xmm2
  416135:	js     0x4164e1
  41613b:	pxor   xmm2,xmm2
  41613f:	cvtsi2sd xmm2,r9
  416144:	mulsd  xmm2,xmm0
  416148:	test   rdi,rdi
  41614b:	movsd  QWORD PTR [rsp+0x30],xmm2
  416151:	js     0x4164c3
  416157:	pxor   xmm2,xmm2
  41615b:	cvtsi2sd xmm2,rdi
  416160:	mulsd  xmm2,xmm0
  416164:	test   rbp,rbp
  416167:	movsd  QWORD PTR [rsp+0x28],xmm2
  41616d:	js     0x416487
  416173:	pxor   xmm2,xmm2
  416177:	cvtsi2sd xmm2,rbp
  41617c:	mulsd  xmm0,xmm2
  416180:	movapd xmm3,xmm1
  416184:	movq   r9,xmm1
  416189:	lea    r8,[rip+0x23ff8]        # 0x43a188
  416190:	xor    ecx,ecx
  416192:	mov    edx,0x20
  416197:	movsd  QWORD PTR [rsp+0x20],xmm0
  41619d:	call   0x4226c0
  4161a2:	ucomiss xmm6,DWORD PTR [rip+0x261e7]        # 0x43c390
  4161a9:	jb     0x415d1c
  4161af:	pxor   xmm0,xmm0
  4161b3:	lea    r8,[rip+0x2403a]        # 0x43a1f4
  4161ba:	mov    edx,0x20
  4161bf:	xor    ecx,ecx
  4161c1:	cvtss2sd xmm0,xmm6
  4161c5:	movapd xmm3,xmm0
  4161c9:	movq   r9,xmm0
  4161ce:	call   0x4226c0
  4161d3:	jmp    0x415d2f
  4161d8:	movapd xmm0,xmm10
  4161dd:	mov    edi,DWORD PTR [rsp+0x5c]
  4161e1:	divsd  xmm0,xmm11
  4161e6:	call   0x427380
  4161eb:	mulsd  xmm6,xmm0
  4161ef:	mov    rcx,rbx
  4161f2:	divsd  xmm6,xmm13
  4161f7:	mov    edx,DWORD PTR [rcx]
  4161f9:	add    rcx,0x4
  4161fd:	lea    eax,[rdx-0x1010101]
  416203:	not    edx
  416205:	and    eax,edx
  416207:	and    eax,0x80808080
  41620c:	je     0x4161f7
  41620e:	mov    edx,eax
  416210:	movq   r9,xmm6
  416215:	lea    r8,[rip+0x23e3f]        # 0x43a05b
  41621c:	shr    edx,0x10
  41621f:	test   eax,0x8080
  416224:	cmove  eax,edx
  416227:	lea    rdx,[rcx+0x2]
  41622b:	movapd xmm3,xmm6
  41622f:	cmove  rcx,rdx
  416233:	add    al,al
  416235:	mov    edx,0x400
  41623a:	sbb    rcx,0x3
  41623e:	sub    rcx,rbx
  416241:	sub    rdx,rcx
  416244:	add    rcx,rbx
  416247:	call   0x414ae0
  41624c:	mov    r9d,DWORD PTR [rsi+0x4]
  416250:	mov    rcx,QWORD PTR [rsp+0x48]
  416255:	movsd  QWORD PTR [rsp+0x20],xmm6
  41625b:	mov    r8d,DWORD PTR [rsi]
  41625e:	lea    rdx,[rip+0x23dff]        # 0x43a064
  416265:	call   0x422858
  41626a:	jmp    0x414f9e
  41626f:	mov    esi,DWORD PTR [rsp+0x950]
  416276:	test   esi,esi
  416278:	jne    0x4158fd
  41627e:	jmp    0x415bdf
  416283:	call   0x422698
  416288:	cmp    eax,0x1f
  41628b:	jg     0x41584a
  416291:	mov    rdi,QWORD PTR [rip+0x2ecb8]        # 0x444f50
  416298:	call   rdi
  41629a:	lea    rdx,[rip+0x23edd]        # 0x43a17e
  4162a1:	lea    rcx,[rax+0x60]
  4162a5:	mov    r9d,esi
  4162a8:	mov    r8,rbx
  4162ab:	call   0x414b30
  4162b0:	jmp    0x41586b
  4162b5:	movsd  xmm6,QWORD PTR [rip+0x260a3]        # 0x43c360
  4162bd:	mov    rcx,rbx
  4162c0:	mov    edx,DWORD PTR [rcx]
  4162c2:	add    rcx,0x4
  4162c6:	lea    eax,[rdx-0x1010101]
  4162cc:	not    edx
  4162ce:	and    eax,edx
  4162d0:	and    eax,0x80808080
  4162d5:	je     0x4162c0
  4162d7:	mov    edx,eax
  4162d9:	lea    r8,[rip+0x23dc3]        # 0x43a0a3
  4162e0:	shr    edx,0x10
  4162e3:	test   eax,0x8080
  4162e8:	cmove  eax,edx
  4162eb:	lea    rdx,[rcx+0x2]
  4162ef:	cmove  rcx,rdx
  4162f3:	add    al,al
  4162f5:	mov    edx,0x400
  4162fa:	sbb    rcx,0x3
  4162fe:	sub    rcx,rbx
  416301:	sub    rdx,rcx
  416304:	add    rcx,rbx
  416307:	call   0x414ae0
  41630c:	jmp    0x415648
  416311:	mov    rcx,QWORD PTR [rbx+0x20]
  416315:	mov    r8d,0x1
  41631b:	xor    edx,edx
  41631d:	call   0x422160
  416322:	mov    QWORD PTR [rsp+0x50],rax
  416327:	jmp    0x414f1d
  41632c:	mov    rdx,rax
  41632f:	pxor   xmm0,xmm0
  416333:	shr    rdx,1
  416336:	and    eax,0x1
  416339:	or     rdx,rax
  41633c:	cvtsi2sd xmm0,rdx
  416341:	addsd  xmm0,xmm0
  416345:	jmp    0x41532d
  41634a:	movabs rax,0x8000000000000000
  416354:	mov    r13d,0xffffffb3
  41635a:	mov    esi,0xffffffe0
  41635f:	mov    ebp,0xfff7320a
  416364:	mov    edi,0xffffffea
  416369:	mov    r12d,0xfff42980
  41636f:	mov    QWORD PTR [rsp+0x40],rax
  416374:	lea    rbx,[rsp+0x70]
  416379:	jmp    0x41559f
  41637e:	lea    r8,[rip+0x23e7c]        # 0x43a201
  416385:	mov    edx,0x18
  41638a:	xor    ecx,ecx
  41638c:	call   0x4226c0
  416391:	jmp    0x415bdf
  416396:	mov    rax,rbp
  416399:	mov    rdx,rbp
  41639c:	pxor   xmm2,xmm2
  4163a0:	shr    rax,1
  4163a3:	and    edx,0x1
  4163a6:	or     rax,rdx
  4163a9:	cvtsi2sd xmm2,rax
  4163ae:	addsd  xmm2,xmm2
  4163b2:	jmp    0x415ce3
  4163b7:	mov    rax,rbx
  4163ba:	mov    rdx,rbx
  4163bd:	pxor   xmm2,xmm2
  4163c1:	shr    rax,1
  4163c4:	and    edx,0x1
  4163c7:	or     rax,rdx
  4163ca:	cvtsi2sd xmm2,rax
  4163cf:	addsd  xmm2,xmm2
  4163d3:	jmp    0x415c8f
  4163d8:	mov    rax,rsi
  4163db:	mov    rdx,rsi
  4163de:	pxor   xmm1,xmm1
  4163e2:	shr    rax,1
  4163e5:	and    edx,0x1
  4163e8:	or     rax,rdx
  4163eb:	cvtsi2sd xmm1,rax
  4163f0:	addsd  xmm1,xmm1
  4163f4:	jmp    0x415c71
  4163f9:	mov    rax,rdi
  4163fc:	mov    rdx,rdi
  4163ff:	pxor   xmm2,xmm2
  416403:	shr    rax,1
  416406:	and    edx,0x1
  416409:	or     rax,rdx
  41640c:	cvtsi2sd xmm2,rax
  416411:	addsd  xmm2,xmm2
  416415:	jmp    0x415cc7
  41641a:	mov    rax,r9
  41641d:	pxor   xmm2,xmm2
  416421:	shr    rax,1
  416424:	and    r9d,0x1
  416428:	or     rax,r9
  41642b:	cvtsi2sd xmm2,rax
  416430:	addsd  xmm2,xmm2
  416434:	jmp    0x415cab
  416439:	pxor   xmm0,xmm0
  41643d:	lea    r8,[rip+0x23d44]        # 0x43a188
  416444:	mov    edx,0x20
  416449:	xor    ecx,ecx
  41644b:	movsd  QWORD PTR [rsp+0x38],xmm0
  416451:	movapd xmm3,xmm0
  416455:	movsd  QWORD PTR [rsp+0x30],xmm0
  41645b:	movq   r9,xmm0
  416460:	movsd  QWORD PTR [rsp+0x28],xmm0
  416466:	movsd  QWORD PTR [rsp+0x20],xmm0
  41646c:	call   0x4226c0
  416471:	mov    QWORD PTR [rsp+0x40],0x0
  41647a:	mov    DWORD PTR [rsp+0x48],0x1
  416482:	jmp    0x415d1c
  416487:	mov    rax,rbp
  41648a:	pxor   xmm2,xmm2
  41648e:	shr    rax,1
  416491:	and    ebp,0x1
  416494:	or     rax,rbp
  416497:	cvtsi2sd xmm2,rax
  41649c:	addsd  xmm2,xmm2
  4164a0:	jmp    0x41617c
  4164a5:	mov    rax,rdx
  4164a8:	pxor   xmm0,xmm0
  4164ac:	shr    rax,1
  4164af:	and    edx,0x1
  4164b2:	or     rax,rdx
  4164b5:	cvtsi2sd xmm0,rax
  4164ba:	addsd  xmm0,xmm0
  4164be:	jmp    0x4160c6
  4164c3:	mov    rax,rdi
  4164c6:	pxor   xmm2,xmm2
  4164ca:	shr    rax,1
  4164cd:	and    edi,0x1
  4164d0:	or     rax,rdi
  4164d3:	cvtsi2sd xmm2,rax
  4164d8:	addsd  xmm2,xmm2
  4164dc:	jmp    0x416160
  4164e1:	mov    rax,r9
  4164e4:	pxor   xmm2,xmm2
  4164e8:	shr    rax,1
  4164eb:	and    r9d,0x1
  4164ef:	or     rax,r9
  4164f2:	cvtsi2sd xmm2,rax
  4164f7:	addsd  xmm2,xmm2
  4164fb:	jmp    0x416144
  416500:	mov    rax,rbx
  416503:	pxor   xmm2,xmm2
  416507:	shr    rax,1
  41650a:	and    ebx,0x1
  41650d:	or     rax,rbx
  416510:	cvtsi2sd xmm2,rax
  416515:	addsd  xmm2,xmm2
  416519:	jmp    0x416128
  41651e:	mov    rax,rsi
  416521:	pxor   xmm1,xmm1
  416525:	shr    rax,1
  416528:	and    esi,0x1
  41652b:	or     rax,rsi
  41652e:	cvtsi2sd xmm1,rax
  416533:	addsd  xmm1,xmm1
  416537:	jmp    0x41610a
  41653c:	nop    DWORD PTR [rax+0x0]
  416540:	sub    rsp,0x38
  416544:	lea    rcx,[rip+0x23e7e]        # 0x43a3c9
  41654b:	mov    QWORD PTR [rsp+0x48],rdx
  416550:	lea    rdx,[rsp+0x48]
  416555:	mov    QWORD PTR [rsp+0x50],r8
  41655a:	mov    QWORD PTR [rsp+0x58],r9
  41655f:	mov    QWORD PTR [rsp+0x28],rdx
  416564:	call   0x4272e0
  416569:	add    rsp,0x38
  41656d:	ret    
  41656e:	xchg   ax,ax
  416570:	push   rbp
  416571:	push   rdi
  416572:	mov    eax,0x4048
  416577:	push   rsi
  416578:	push   rbx
  416579:	call   0x423de0
  41657e:	sub    rsp,rax
  416581:	movsxd rcx,DWORD PTR [rip+0x2bb38]        # 0x4420c0
  416588:	cmp    rcx,0xffffffe
  41658f:	jbe    0x4165a4
  416591:	mov    QWORD PTR [rsp+0x38],0x0
  41659a:	mov    ecx,0x1
  41659f:	call   0x401cb0
  4165a4:	shl    rcx,0x3
  4165a8:	call   0x422678
  4165ad:	test   rax,rax
  4165b0:	mov    QWORD PTR [rsp+0x38],rax
  4165b5:	je     0x41659a
  4165b7:	mov    eax,DWORD PTR [rip+0x2bb03]        # 0x4420c0
  4165bd:	test   eax,eax
  4165bf:	jle    0x41661d
  4165c1:	sub    eax,0x1
  4165c4:	lea    rbx,[rip+0x23e07]        # 0x43a3d2
  4165cb:	xor    r11d,r11d
  4165ce:	lea    rbp,[rax*8+0x8]
  4165d6:	mov    edx,0x4
  4165db:	xor    eax,eax
  4165dd:	nop    DWORD PTR [rax]
  4165e0:	mov    rcx,QWORD PTR [rip+0x2bae1]        # 0x4420c8
  4165e7:	mov    rdi,rbx
  4165ea:	mov    r8,QWORD PTR [rcx+rax*1]
  4165ee:	mov    rcx,rdx
  4165f1:	mov    r8,QWORD PTR [r8]
  4165f4:	mov    r9,QWORD PTR [r8+0x10]
  4165f8:	mov    rsi,QWORD PTR [r9]
  4165fb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4165fd:	jne    0x41660f
  4165ff:	mov    rcx,QWORD PTR [rsp+0x38]
  416604:	movsxd r9,r11d
  416607:	add    r11d,0x1
  41660b:	mov    QWORD PTR [rcx+r9*8],r8
  41660f:	add    rax,0x8
  416613:	cmp    rax,rbp
  416616:	jne    0x4165e0
  416618:	test   r11d,r11d
  41661b:	jne    0x416634
  41661d:	lea    rcx,[rsp+0x38]
  416622:	call   0x422768
  416627:	nop
  416628:	add    rsp,0x4048
  41662f:	pop    rbx
  416630:	pop    rsi
  416631:	pop    rdi
  416632:	pop    rbp
  416633:	ret    
  416634:	lea    rsi,[rsp+0x40]
  416639:	mov    rcx,QWORD PTR [rsp+0x38]
  41663e:	mov    edx,r11d
  416641:	mov    r9d,0x4000
  416647:	mov    r8,rsi
  41664a:	call   0x422278
  41664f:	mov    rbx,QWORD PTR [rip+0x272ea]        # 0x43d940
  416656:	mov    rdx,QWORD PTR [rbx]
  416659:	test   rdx,rdx
  41665c:	je     0x4166c9
  41665e:	lea    rdi,[rsp+0x30]
  416663:	lea    r9,[rip+0x25c26]        # 0x43c290
  41666a:	mov    QWORD PTR [rsp+0x20],0x0
  416673:	mov    r8d,0x2
  416679:	mov    rcx,rdi
  41667c:	call   0x422188
  416681:	test   eax,eax
  416683:	js     0x4166ae
  416685:	mov    rcx,QWORD PTR [rsp+0x30]
  41668a:	lea    rdx,[rip+0x23d63]        # 0x43a3f4
  416691:	mov    r8,rsi
  416694:	call   0x422178
  416699:	mov    rcx,rdi
  41669c:	call   0x4221b0
  4166a1:	mov    rcx,rbx
  4166a4:	call   0x422768
  4166a9:	jmp    0x41661d
  4166ae:	mov    r9,QWORD PTR [rbx]
  4166b1:	lea    r8,[rip+0x23d1e]        # 0x43a3d6
  4166b8:	mov    edx,0x10
  4166bd:	xor    ecx,ecx
  4166bf:	call   0x4226c0
  4166c4:	jmp    0x41661d
  4166c9:	lea    rcx,[rip+0x23cf9]        # 0x43a3c9
  4166d0:	mov    rdx,rsi
  4166d3:	call   0x416540
  4166d8:	call   QWORD PTR [rip+0x2e872]        # 0x444f50
  4166de:	lea    rcx,[rax+0x30]
  4166e2:	call   0x42fbd0
  4166e7:	jmp    0x41661d
  4166ec:	nop    DWORD PTR [rax+0x0]
  4166f0:	sub    rsp,0x78
  4166f4:	mov    rax,QWORD PTR [rip+0x27025]        # 0x43d720
  4166fb:	mov    QWORD PTR [rsp+0x88],rdx
  416703:	mov    QWORD PTR [rsp+0x90],r8
  41670b:	mov    QWORD PTR [rsp+0x98],r9
  416713:	mov    eax,DWORD PTR [rax]
  416715:	test   eax,eax
  416717:	je     0x416771
  416719:	call   QWORD PTR [rip+0x2e6e9]        # 0x444e08
  41671f:	lea    rcx,[rsp+0x60]
  416724:	lea    rdx,[rsp+0x30]
  416729:	lea    r9,[rsp+0x50]
  41672e:	lea    r8,[rsp+0x40]
  416733:	mov    QWORD PTR [rsp+0x20],rcx
  416738:	mov    rcx,rax
  41673b:	call   QWORD PTR [rip+0x2e707]        # 0x444e48
  416741:	mov    ecx,DWORD PTR [rsp+0x64]
  416745:	mov    eax,DWORD PTR [rsp+0x60]
  416749:	movabs rdx,0x6666666666666667
  416753:	shl    rcx,0x20
  416757:	or     rcx,rax
  41675a:	mov    rax,rcx
  41675d:	sar    rcx,0x3f
  416761:	imul   rdx
  416764:	sar    rdx,0x2
  416768:	sub    rdx,rcx
  41676b:	mov    DWORD PTR [rip+0x2bad7],edx        # 0x442248
  416771:	add    rsp,0x78
  416775:	ret    
  416776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416780:	push   rdi
  416781:	push   rsi
  416782:	push   rbx
  416783:	sub    rsp,0x460
  41678a:	mov    rax,QWORD PTR [rip+0x26f8f]        # 0x43d720
  416791:	mov    QWORD PTR [rsp+0x488],rdx
  416799:	mov    QWORD PTR [rsp+0x490],r8
  4167a1:	mov    QWORD PTR [rsp+0x498],r9
  4167a9:	mov    eax,DWORD PTR [rax]
  4167ab:	test   eax,eax
  4167ad:	jne    0x4167c0
  4167af:	add    rsp,0x460
  4167b6:	pop    rbx
  4167b7:	pop    rsi
  4167b8:	pop    rdi
  4167b9:	ret    
  4167ba:	nop    WORD PTR [rax+rax*1+0x0]
  4167c0:	lea    rsi,[rsp+0x60]
  4167c5:	mov    rdi,rcx
  4167c8:	call   QWORD PTR [rip+0x2e63a]        # 0x444e08
  4167ce:	lea    rdx,[rsp+0x30]
  4167d3:	lea    r9,[rsp+0x50]
  4167d8:	mov    QWORD PTR [rsp+0x20],rsi
  4167dd:	lea    r8,[rsp+0x40]
  4167e2:	mov    rcx,rax
  4167e5:	call   QWORD PTR [rip+0x2e65d]        # 0x444e48
  4167eb:	mov    r9d,DWORD PTR [rsp+0x64]
  4167f0:	mov    eax,DWORD PTR [rsp+0x60]
  4167f4:	movabs rdx,0x6666666666666667
  4167fe:	shl    r9,0x20
  416802:	or     r9,rax
  416805:	mov    rax,r9
  416808:	sar    r9,0x3f
  41680c:	imul   rdx
  41680f:	sar    rdx,0x2
  416813:	mov    rbx,rdx
  416816:	sub    rbx,r9
  416819:	test   rdi,rdi
  41681c:	je     0x416860
  41681e:	lea    r9,[rsp+0x488]
  416826:	mov    r8,rdi
  416829:	mov    edx,0x400
  41682e:	mov    rcx,rsi
  416831:	mov    QWORD PTR [rsp+0x50],r9
  416836:	call   0x427320
  41683b:	movsxd rax,DWORD PTR [rip+0x2ba06]        # 0x442248
  416842:	mov    r9,rbx
  416845:	lea    r8,[rip+0x23bb0]        # 0x43a3fc
  41684c:	mov    QWORD PTR [rsp+0x20],rsi
  416851:	mov    edx,0x20
  416856:	xor    ecx,ecx
  416858:	sub    r9,rax
  41685b:	call   0x4226c0
  416860:	mov    DWORD PTR [rip+0x2b9e2],ebx        # 0x442248
  416866:	add    rsp,0x460
  41686d:	pop    rbx
  41686e:	pop    rsi
  41686f:	pop    rdi
  416870:	ret    
  416871:	nop    DWORD PTR [rax+rax*1+0x0]
  416876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416880:	push   rsi
  416881:	push   rbx
  416882:	sub    rsp,0x468
  416889:	mov    rax,QWORD PTR [rip+0x26e90]        # 0x43d720
  416890:	mov    QWORD PTR [rsp+0x488],rdx
  416898:	mov    QWORD PTR [rsp+0x490],r8
  4168a0:	mov    QWORD PTR [rsp+0x498],r9
  4168a8:	mov    eax,DWORD PTR [rax]
  4168aa:	test   eax,eax
  4168ac:	je     0x416954
  4168b2:	lea    rsi,[rsp+0x60]
  4168b7:	call   QWORD PTR [rip+0x2e54b]        # 0x444e08
  4168bd:	lea    rdx,[rsp+0x30]
  4168c2:	lea    r9,[rsp+0x50]
  4168c7:	lea    r8,[rsp+0x40]
  4168cc:	mov    rcx,rax
  4168cf:	mov    QWORD PTR [rsp+0x20],rsi
  4168d4:	call   QWORD PTR [rip+0x2e56e]        # 0x444e48
  4168da:	mov    r8d,DWORD PTR [rsp+0x64]
  4168df:	mov    eax,DWORD PTR [rsp+0x60]
  4168e3:	movabs rdx,0x6666666666666667
  4168ed:	lea    r9,[rsp+0x488]
  4168f5:	mov    rcx,rsi
  4168f8:	mov    QWORD PTR [rsp+0x50],r9
  4168fd:	shl    r8,0x20
  416901:	or     r8,rax
  416904:	mov    rax,r8
  416907:	sar    r8,0x3f
  41690b:	imul   rdx
  41690e:	sar    rdx,0x2
  416912:	mov    rbx,rdx
  416915:	mov    edx,0x400
  41691a:	sub    rbx,r8
  41691d:	lea    r8,[rip+0x23aea]        # 0x43a40e
  416924:	call   0x427320
  416929:	movsxd rax,DWORD PTR [rip+0x2b918]        # 0x442248
  416930:	mov    r9,rbx
  416933:	lea    r8,[rip+0x23ac2]        # 0x43a3fc
  41693a:	mov    QWORD PTR [rsp+0x20],rsi
  41693f:	mov    edx,0x20
  416944:	xor    ecx,ecx
  416946:	sub    r9,rax
  416949:	call   0x4226c0
  41694e:	mov    DWORD PTR [rip+0x2b8f4],ebx        # 0x442248
  416954:	add    rsp,0x468
  41695b:	pop    rbx
  41695c:	pop    rsi
  41695d:	ret    
  41695e:	xchg   ax,ax
  416960:	push   rbx
  416961:	sub    rsp,0x20
  416965:	lea    r8,[rip+0x23ab1]        # 0x43a41d
  41696c:	mov    edx,0x30
  416971:	mov    ebx,ecx
  416973:	mov    r9d,ecx
  416976:	xor    ecx,ecx
  416978:	call   0x4226c0
  41697d:	cmp    ebx,0x6
  416980:	ja     0x416994
  416982:	mov    eax,0x1
  416987:	mov    ecx,ebx
  416989:	shl    rax,cl
  41698c:	test   al,0x64
  41698e:	jne    0x4169b2
  416990:	test   al,0x3
  416992:	jne    0x416a10
  416994:	lea    r8,[rip+0x23aa5]        # 0x43a440
  41699b:	mov    r9d,ebx
  41699e:	mov    edx,0x10
  4169a3:	xor    ecx,ecx
  4169a5:	call   0x4226c0
  4169aa:	xor    eax,eax
  4169ac:	add    rsp,0x20
  4169b0:	pop    rbx
  4169b1:	ret    
  4169b2:	mov    DWORD PTR [rip+0x2b87c],0xf        # 0x442238
  4169bc:	mov    eax,DWORD PTR [rip+0x2b872]        # 0x442234
  4169c2:	add    eax,0x1
  4169c5:	mov    DWORD PTR [rip+0x2b869],eax        # 0x442234
  4169cb:	mov    eax,DWORD PTR [rip+0x2b863]        # 0x442234
  4169d1:	cmp    eax,0x3
  4169d4:	jg     0x416a34
  4169d6:	mov    eax,DWORD PTR [rip+0x2b850]        # 0x44222c
  4169dc:	test   eax,eax
  4169de:	jne    0x4169fe
  4169e0:	mov    rbx,QWORD PTR [rip+0x2e501]        # 0x444ee8
  4169e7:	nop    WORD PTR [rax+rax*1+0x0]
  4169f0:	xor    ecx,ecx
  4169f2:	call   rbx
  4169f4:	mov    eax,DWORD PTR [rip+0x2b832]        # 0x44222c
  4169fa:	test   eax,eax
  4169fc:	je     0x4169f0
  4169fe:	mov    eax,0x1
  416a03:	add    rsp,0x20
  416a07:	pop    rbx
  416a08:	ret    
  416a09:	nop    DWORD PTR [rax+0x0]
  416a10:	mov    DWORD PTR [rip+0x2b81e],0x2        # 0x442238
  416a1a:	mov    eax,DWORD PTR [rip+0x2b814]        # 0x442234
  416a20:	add    eax,0x1
  416a23:	mov    DWORD PTR [rip+0x2b80b],eax        # 0x442234
  416a29:	mov    eax,DWORD PTR [rip+0x2b805]        # 0x442234
  416a2f:	cmp    eax,0x3
  416a32:	jle    0x4169fe
  416a34:	call   0x430120
  416a39:	nop
  416a3a:	nop    WORD PTR [rax+rax*1+0x0]
  416a40:	push   rbp
  416a41:	push   rdi
  416a42:	push   rsi
  416a43:	push   rbx
  416a44:	sub    rsp,0x28
  416a48:	mov    rsi,QWORD PTR [rcx+0x108]
  416a4f:	test   rsi,rsi
  416a52:	je     0x416b2c
  416a58:	mov    rbx,rcx
  416a5b:	mov    rdi,QWORD PTR [rcx+0x100]
  416a62:	mov    rcx,rsi
  416a65:	call   0x422778
  416a6a:	mov    rcx,QWORD PTR [rbx+0x20]
  416a6e:	mov    rax,QWORD PTR [rbx+0x108]
  416a75:	mov    edx,DWORD PTR [rcx+0x94]
  416a7b:	test   edx,edx
  416a7d:	je     0x416b40
  416a83:	mov    DWORD PTR [rax+0x68],edx
  416a86:	mov    edx,DWORD PTR [rcx+0x98]
  416a8c:	test   edx,edx
  416a8e:	je     0x416b35
  416a94:	mov    DWORD PTR [rax+0x6c],edx
  416a97:	mov    DWORD PTR [rax+0x74],0x1e
  416a9e:	mov    edx,0x20
  416aa3:	mov    rcx,rsi
  416aa6:	call   0x4227a0
  416aab:	test   eax,eax
  416aad:	js     0x416b60
  416ab3:	mov    r8d,DWORD PTR [rsi+0x6c]
  416ab7:	mov    rcx,QWORD PTR [rsi]
  416aba:	xor    edx,edx
  416abc:	imul   r8d,DWORD PTR [rsi+0x40]
  416ac1:	xor    esi,esi
  416ac3:	movsxd r8,r8d
  416ac6:	call   0x42fb30
  416acb:	mov    rbp,QWORD PTR [rbx+0x108]
  416ad2:	mov    eax,DWORD PTR [rbx+0x128]
  416ad8:	mov    QWORD PTR [rbp+0xc8],rdi
  416adf:	mov    QWORD PTR [rbx+0xf8],rdi
  416ae6:	xor    edi,edi
  416ae8:	test   eax,eax
  416aea:	jle    0x416b1b
  416aec:	nop    DWORD PTR [rax+0x0]
  416af0:	mov    rax,QWORD PTR [rbx+0x120]
  416af7:	mov    r8d,0xc
  416afd:	mov    rdx,rbp
  416b00:	add    esi,0x1
  416b03:	mov    rax,QWORD PTR [rax+rdi*1]
  416b07:	add    rdi,0x8
  416b0b:	mov    rcx,QWORD PTR [rax]
  416b0e:	call   0x422120
  416b13:	cmp    esi,DWORD PTR [rbx+0x128]
  416b19:	jl     0x416af0
  416b1b:	movabs rax,0x7fffffffffffffff
  416b25:	mov    QWORD PTR [rbx+0x100],rax
  416b2c:	add    rsp,0x28
  416b30:	pop    rbx
  416b31:	pop    rsi
  416b32:	pop    rdi
  416b33:	pop    rbp
  416b34:	ret    
  416b35:	mov    edx,DWORD PTR [rbx+0x114]
  416b3b:	jmp    0x416a94
  416b40:	mov    edx,DWORD PTR [rbx+0x110]
  416b46:	mov    DWORD PTR [rax+0x68],edx
  416b49:	mov    edx,DWORD PTR [rcx+0x98]
  416b4f:	test   edx,edx
  416b51:	jne    0x416a94
  416b57:	jmp    0x416b35
  416b59:	nop    DWORD PTR [rax+0x0]
  416b60:	mov    rcx,QWORD PTR [rbx+0x20]
  416b64:	lea    r8,[rip+0x238fd]        # 0x43a468
  416b6b:	mov    edx,0x10
  416b70:	add    rsp,0x28
  416b74:	pop    rbx
  416b75:	pop    rsi
  416b76:	pop    rdi
  416b77:	pop    rbp
  416b78:	jmp    0x4226c0
  416b7d:	nop    DWORD PTR [rax]
  416b80:	push   r15
  416b82:	push   r14
  416b84:	mov    eax,0x1318
  416b89:	push   r13
  416b8b:	push   r12
  416b8d:	push   rbp
  416b8e:	push   rdi
  416b8f:	push   rsi
  416b90:	push   rbx
  416b91:	call   0x423de0
  416b96:	sub    rsp,rax
  416b99:	movaps XMMWORD PTR [rsp+0x1300],xmm6
  416ba1:	mov    ebp,DWORD PTR [rip+0x2b68d]        # 0x442234
  416ba7:	test   ebp,ebp
  416ba9:	jne    0x4173aa
  416baf:	mov    rax,rcx
  416bb2:	sub    rax,QWORD PTR [rip+0x2b667]        # 0x442220
  416bb9:	cmp    rax,0x1869f
  416bbf:	jle    0x416bd0
  416bc1:	mov    r10d,DWORD PTR [rip+0x2b6a0]        # 0x442268
  416bc8:	test   r10d,r10d
  416bcb:	je     0x416bf0
  416bcd:	nop    DWORD PTR [rax]
  416bd0:	movaps xmm6,XMMWORD PTR [rsp+0x1300]
  416bd8:	mov    eax,ebp
  416bda:	add    rsp,0x1318
  416be1:	pop    rbx
  416be2:	pop    rsi
  416be3:	pop    rdi
  416be4:	pop    rbp
  416be5:	pop    r12
  416be7:	pop    r13
  416be9:	pop    r14
  416beb:	pop    r15
  416bed:	ret    
  416bee:	xchg   ax,ax
  416bf0:	cmp    QWORD PTR [rip+0x2b620],0x0        # 0x442218
  416bf8:	mov    rbx,rcx
  416bfb:	je     0x417409
  416c01:	mov    eax,DWORD PTR [rip+0x2b609]        # 0x442210
  416c07:	test   eax,eax
  416c09:	je     0x4171f0
  416c0f:	lea    rax,[rsp+0x300]
  416c17:	xor    r9d,r9d
  416c1a:	xor    r8d,r8d
  416c1d:	xor    edx,edx
  416c1f:	mov    QWORD PTR [rsp+0x28],0x0
  416c28:	mov    rcx,QWORD PTR [rip+0x2b5e9]        # 0x442218
  416c2f:	mov    QWORD PTR [rsp+0x20],rax
  416c34:	call   QWORD PTR [rip+0x2e266]        # 0x444ea0
  416c3a:	test   eax,eax
  416c3c:	je     0x4173fd
  416c42:	mov    r9d,DWORD PTR [rsp+0x300]
  416c4a:	test   r9d,r9d
  416c4d:	je     0x4173fd
  416c53:	lea    rdx,[rsp+0x100]
  416c5b:	mov    r8d,0x1
  416c61:	xor    ecx,ecx
  416c63:	call   0x42fa70
  416c68:	movzx  eax,BYTE PTR [rsp+0x100]
  416c70:	mov    DWORD PTR [rsp+0x4c],eax
  416c74:	cmp    eax,0x71
  416c77:	mov    QWORD PTR [rip+0x2b5a2],rbx        # 0x442220
  416c7e:	je     0x4173aa
  416c84:	mov    ebx,eax
  416c86:	and    ebx,0xffffffdf
  416c89:	cmp    eax,0x2b
  416c8c:	je     0x4171a5
  416c92:	cmp    DWORD PTR [rsp+0x4c],0x2d
  416c97:	je     0x416f40
  416c9d:	cmp    DWORD PTR [rsp+0x4c],0x73
  416ca2:	jne    0x41743f
  416ca8:	mov    rax,QWORD PTR [rip+0x26c81]        # 0x43d930
  416caf:	xor    DWORD PTR [rax],0x1
  416cb2:	cmp    ebx,0x44
  416cb5:	jne    0x416e77
  416cbb:	mov    DWORD PTR [rsp+0xc0],0x0
  416cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416cd0:	mov    rsi,QWORD PTR [rip+0x2e1c9]        # 0x444ea0
  416cd7:	lea    r15,[rsp+0x100]
  416cdf:	lea    rdi,[rsp+0x200]
  416ce7:	lea    r12,[rsp+0x80]
  416cef:	xor    r13d,r13d
  416cf2:	movsxd r14,r13d
  416cf5:	mov    ebx,r13d
  416cf8:	jmp    0x416d6d
  416cfa:	nop    WORD PTR [rax+rax*1+0x0]
  416d00:	xor    r9d,r9d
  416d03:	xor    r8d,r8d
  416d06:	xor    edx,edx
  416d08:	mov    QWORD PTR [rsp+0x28],0x0
  416d11:	mov    QWORD PTR [rsp+0x20],rdi
  416d16:	mov    rcx,QWORD PTR [rip+0x2b4fb]        # 0x442218
  416d1d:	call   rsi
  416d1f:	test   eax,eax
  416d21:	je     0x416ea0
  416d27:	mov    eax,DWORD PTR [rsp+0x200]
  416d2e:	test   eax,eax
  416d30:	je     0x416ea0
  416d36:	xor    ecx,ecx
  416d38:	mov    r8d,0x1
  416d3e:	mov    rdx,r12
  416d41:	call   0x42fa70
  416d46:	movzx  eax,BYTE PTR [rsp+0x80]
  416d4e:	cmp    eax,0xa
  416d51:	je     0x416da0
  416d53:	cmp    eax,0xd
  416d56:	je     0x416f02
  416d5c:	cmp    ebx,0x1e
  416d5f:	ja     0x416f02
  416d65:	test   eax,eax
  416d67:	jg     0x416ef1
  416d6d:	cmp    QWORD PTR [rip+0x2b4a3],0x0        # 0x442218
  416d75:	je     0x416ec0
  416d7b:	mov    eax,DWORD PTR [rip+0x2b48f]        # 0x442210
  416d81:	test   eax,eax
  416d83:	jne    0x416d00
  416d89:	call   0x42fa68
  416d8e:	test   eax,eax
  416d90:	je     0x416ea0
  416d96:	call   0x42fa60
  416d9b:	cmp    eax,0xa
  416d9e:	jne    0x416d53
  416da0:	mov    BYTE PTR [rsp+r14*1+0x300],0x0
  416da9:	lea    rcx,[rsp+0x300]
  416db1:	lea    r8,[rsp+0xc0]
  416db9:	lea    rdx,[rip+0x2387a]        # 0x43a63a
  416dc0:	call   0x414b00
  416dc5:	cmp    eax,0x1
  416dc8:	je     0x4171e0
  416dce:	mov    r13,QWORD PTR [rip+0x2e17b]        # 0x444f50
  416dd5:	call   r13
  416dd8:	lea    rdx,[rip+0x23840]        # 0x43a61f
  416ddf:	lea    rcx,[rax+0x60]
  416de3:	call   0x414b30
  416de8:	mov    ebx,DWORD PTR [rsp+0xc0]
  416def:	mov    edx,DWORD PTR [rip+0x2b2fb]        # 0x4420f0
  416df5:	test   edx,edx
  416df7:	jle    0x416e2a
  416df9:	mov    rax,QWORD PTR [rip+0x2b2f8]        # 0x4420f8
  416e00:	sub    edx,0x1
  416e03:	lea    rcx,[rax+rdx*8+0x8]
  416e08:	nop    DWORD PTR [rax+rax*1+0x0]
  416e10:	mov    rdx,QWORD PTR [rax]
  416e13:	add    rax,0x8
  416e17:	cmp    rax,rcx
  416e1a:	mov    rdx,QWORD PTR [rdx+0x8]
  416e1e:	mov    rdx,QWORD PTR [rdx+0x8]
  416e22:	mov    DWORD PTR [rdx+0x304],ebx
  416e28:	jne    0x416e10
  416e2a:	mov    edx,DWORD PTR [rip+0x2b2a0]        # 0x4420d0
  416e30:	test   edx,edx
  416e32:	jle    0x416e59
  416e34:	mov    rax,QWORD PTR [rip+0x2b29d]        # 0x4420d8
  416e3b:	sub    edx,0x1
  416e3e:	lea    rcx,[rax+rdx*8+0x8]
  416e43:	mov    rdx,QWORD PTR [rax]
  416e46:	add    rax,0x8
  416e4a:	cmp    rax,rcx
  416e4d:	mov    rdx,QWORD PTR [rdx+0x48]
  416e51:	mov    DWORD PTR [rdx+0x304],ebx
  416e57:	jne    0x416e43
  416e59:	test   ebx,ebx
  416e5b:	jne    0x416f20
  416e61:	call   r13
  416e64:	lea    rdx,[rip+0x237d2]        # 0x43a63d
  416e6b:	lea    rcx,[rax+0x60]
  416e6f:	mov    r8d,ebx
  416e72:	call   0x414b30
  416e77:	cmp    DWORD PTR [rsp+0x4c],0x3f
  416e7c:	jne    0x416bd0
  416e82:	call   QWORD PTR [rip+0x2e0c8]        # 0x444f50
  416e88:	lea    rdx,[rip+0x237b9]        # 0x43a648
  416e8f:	lea    rcx,[rax+0x60]
  416e93:	call   0x414b30
  416e98:	jmp    0x416bd0
  416e9d:	nop    DWORD PTR [rax]
  416ea0:	cmp    r13,0x1e
  416ea4:	jbe    0x416d6d
  416eaa:	mov    BYTE PTR [rsp+r14*1+0x300],0x0
  416eb3:	jmp    0x416dce
  416eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  416ec0:	mov    ecx,0xfffffff6
  416ec5:	call   QWORD PTR [rip+0x2df8d]        # 0x444e58
  416ecb:	mov    rdx,r15
  416ece:	mov    QWORD PTR [rip+0x2b343],rax        # 0x442218
  416ed5:	mov    rcx,rax
  416ed8:	call   QWORD PTR [rip+0x2df22]        # 0x444e00
  416ede:	test   eax,eax
  416ee0:	sete   al
  416ee3:	movzx  eax,al
  416ee6:	mov    DWORD PTR [rip+0x2b324],eax        # 0x442210
  416eec:	jmp    0x416d81
  416ef1:	mov    BYTE PTR [rsp+r13*1+0x300],al
  416ef9:	add    r13,0x1
  416efd:	jmp    0x416cf2
  416f02:	test   eax,eax
  416f04:	mov    BYTE PTR [rsp+r14*1+0x300],0x0
  416f0d:	jg     0x416da9
  416f13:	jmp    0x416dce
  416f18:	nop    DWORD PTR [rax+rax*1+0x0]
  416f20:	mov    ecx,0x30
  416f25:	call   0x422680
  416f2a:	mov    ebx,DWORD PTR [rsp+0xc0]
  416f31:	jmp    0x416e61
  416f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f40:	call   0x422698
  416f45:	lea    ecx,[rax-0xa]
  416f48:	call   0x422680
  416f4d:	cmp    ebx,0x43
  416f50:	jne    0x4170d5
  416f56:	lea    rdi,[rsp+0x200]
  416f5e:	xor    eax,eax
  416f60:	mov    ecx,0x20
  416f65:	mov    r13,QWORD PTR [rip+0x2dfe4]        # 0x444f50
  416f6c:	lea    r12,[rsp+0x80]
  416f74:	xor    r14d,r14d
  416f77:	mov    QWORD PTR [rsp+0x58],rdi
  416f7c:	rep stos QWORD PTR es:[rdi],rax
  416f7f:	call   r13
  416f82:	lea    rdx,[rip+0x23507]        # 0x43a490
  416f89:	lea    rcx,[rax+0x60]
  416f8d:	lea    rdi,[rsp+0x100]
  416f95:	call   0x414b30
  416f9a:	lea    rax,[rsp+0x300]
  416fa2:	mov    rsi,QWORD PTR [rip+0x2def7]        # 0x444ea0
  416fa9:	mov    QWORD PTR [rsp+0x50],rax
  416fae:	lea    rax,[rsp+0xc0]
  416fb6:	mov    QWORD PTR [rsp+0x60],rax
  416fbb:	movsxd r15,r14d
  416fbe:	mov    ebx,r14d
  416fc1:	jmp    0x417033
  416fc3:	xor    r9d,r9d
  416fc6:	xor    r8d,r8d
  416fc9:	xor    edx,edx
  416fcb:	mov    QWORD PTR [rsp+0x28],0x0
  416fd4:	mov    QWORD PTR [rsp+0x20],rdi
  416fd9:	mov    rcx,QWORD PTR [rip+0x2b238]        # 0x442218
  416fe0:	call   rsi
  416fe2:	test   eax,eax
  416fe4:	je     0x417140
  416fea:	mov    edx,DWORD PTR [rsp+0x100]
  416ff1:	test   edx,edx
  416ff3:	je     0x417140
  416ff9:	xor    ecx,ecx
  416ffb:	mov    r8d,0x1
  417001:	mov    rdx,r12
  417004:	call   0x42fa70
  417009:	movzx  eax,BYTE PTR [rsp+0x80]
  417011:	cmp    eax,0xa
  417014:	je     0x417066
  417016:	cmp    eax,0xd
  417019:	je     0x4171c0
  41701f:	cmp    ebx,0xffe
  417025:	ja     0x4171c0
  41702b:	test   eax,eax
  41702d:	jg     0x417193
  417033:	cmp    QWORD PTR [rip+0x2b1dd],0x0        # 0x442218
  41703b:	je     0x417160
  417041:	mov    eax,DWORD PTR [rip+0x2b1c9]        # 0x442210
  417047:	test   eax,eax
  417049:	jne    0x416fc3
  41704f:	call   0x42fa68
  417054:	test   eax,eax
  417056:	je     0x417140
  41705c:	call   0x42fa60
  417061:	cmp    eax,0xa
  417064:	jne    0x417016
  417066:	mov    BYTE PTR [rsp+r15*1+0x300],0x0
  41706f:	mov    rax,QWORD PTR [rsp+0x58]
  417074:	lea    r12,[rsp+0x80]
  41707c:	lea    rsi,[rsp+0x100]
  417084:	mov    rcx,QWORD PTR [rsp+0x50]
  417089:	lea    r9,[rsp+0x78]
  41708e:	lea    rdx,[rip+0x2343a]        # 0x43a4cf
  417095:	mov    QWORD PTR [rsp+0x20],rsi
  41709a:	mov    r8,r12
  41709d:	mov    QWORD PTR [rsp+0x28],rax
  4170a2:	call   0x414b00
  4170a7:	cmp    eax,0x2
  4170aa:	mov    r9d,eax
  4170ad:	jg     0x417240
  4170b3:	mov    rax,QWORD PTR [rsp+0x50]
  4170b8:	lea    r8,[rip+0x23511]        # 0x43a5d0
  4170bf:	mov    edx,0x10
  4170c4:	xor    ecx,ecx
  4170c6:	mov    QWORD PTR [rsp+0x20],rax
  4170cb:	call   0x4226c0
  4170d0:	jmp    0x416e77
  4170d5:	cmp    ebx,0x44
  4170d8:	jne    0x416e77
  4170de:	cmp    DWORD PTR [rsp+0x4c],0x44
  4170e3:	mov    DWORD PTR [rsp+0xc0],0x0
  4170ee:	jne    0x416cd0
  4170f4:	mov    rax,QWORD PTR [rip+0x2affd]        # 0x4420f8
  4170fb:	mov    rax,QWORD PTR [rax]
  4170fe:	mov    rax,QWORD PTR [rax+0x8]
  417102:	mov    rax,QWORD PTR [rax+0x8]
  417106:	mov    ebx,DWORD PTR [rax+0x304]
  41710c:	add    ebx,ebx
  41710e:	test   ebx,ebx
  417110:	mov    DWORD PTR [rsp+0xc0],ebx
  417117:	jne    0x417210
  41711d:	mov    DWORD PTR [rsp+0xc0],0x1
  417128:	mov    bl,0x1
  41712a:	mov    r13,QWORD PTR [rip+0x2de1f]        # 0x444f50
  417131:	jmp    0x416def
  417136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417140:	cmp    r14,0xffe
  417147:	jbe    0x417033
  41714d:	mov    BYTE PTR [rsp+r15*1+0x300],0x0
  417156:	xor    r9d,r9d
  417159:	jmp    0x4170b3
  41715e:	xchg   ax,ax
  417160:	mov    ecx,0xfffffff6
  417165:	call   QWORD PTR [rip+0x2dced]        # 0x444e58
  41716b:	mov    rdx,QWORD PTR [rsp+0x60]
  417170:	mov    QWORD PTR [rip+0x2b0a1],rax        # 0x442218
  417177:	mov    rcx,rax
  41717a:	call   QWORD PTR [rip+0x2dc80]        # 0x444e00
  417180:	test   eax,eax
  417182:	sete   al
  417185:	movzx  eax,al
  417188:	mov    DWORD PTR [rip+0x2b082],eax        # 0x442210
  41718e:	jmp    0x417047
  417193:	mov    rbx,QWORD PTR [rsp+0x50]
  417198:	mov    BYTE PTR [rbx+r14*1],al
  41719c:	add    r14,0x1
  4171a0:	jmp    0x416fbb
  4171a5:	call   0x422698
  4171aa:	lea    ecx,[rax+0xa]
  4171ad:	call   0x422680
  4171b2:	jmp    0x416f4d
  4171b7:	nop    WORD PTR [rax+rax*1+0x0]
  4171c0:	test   eax,eax
  4171c2:	mov    BYTE PTR [rsp+r15*1+0x300],0x0
  4171cb:	jg     0x41706f
  4171d1:	xor    r9d,r9d
  4171d4:	jmp    0x4170b3
  4171d9:	nop    DWORD PTR [rax+0x0]
  4171e0:	mov    r13,QWORD PTR [rip+0x2dd69]        # 0x444f50
  4171e7:	jmp    0x416de8
  4171ec:	nop    DWORD PTR [rax+0x0]
  4171f0:	call   0x42fa68
  4171f5:	test   eax,eax
  4171f7:	je     0x4173fd
  4171fd:	call   0x42fa60
  417202:	mov    DWORD PTR [rsp+0x4c],eax
  417206:	jmp    0x416c74
  41720b:	nop    DWORD PTR [rax+rax*1+0x0]
  417210:	test   ebx,0x6040
  417216:	je     0x417498
  41721c:	nop    DWORD PTR [rax+0x0]
  417220:	add    ebx,ebx
  417222:	test   ebx,0x6040
  417228:	jne    0x417220
  41722a:	mov    DWORD PTR [rsp+0xc0],ebx
  417231:	mov    r13,QWORD PTR [rip+0x2dd18]        # 0x444f50
  417238:	jmp    0x416def
  41723d:	nop    DWORD PTR [rax]
  417240:	mov    rax,QWORD PTR [rsp+0x58]
  417245:	movsd  xmm0,QWORD PTR [rsp+0x78]
  41724b:	lea    r8,[rip+0x2329e]        # 0x43a4f0
  417252:	xor    ecx,ecx
  417254:	mov    QWORD PTR [rsp+0x28],rsi
  417259:	movsd  QWORD PTR [rsp+0x20],xmm0
  41725f:	mov    r9,r12
  417262:	mov    edx,0x30
  417267:	mov    QWORD PTR [rsp+0x30],rax
  41726c:	call   0x4226c0
  417271:	mov    eax,DWORD PTR [rip+0x2c471]        # 0x4436e8
  417277:	test   eax,eax
  417279:	jle    0x416e77
  41727f:	cmp    DWORD PTR [rsp+0x4c],0x63
  417284:	lea    rcx,[rsp+0xc0]
  41728c:	lea    r15,[rip+0x2c45d]        # 0x4436f0
  417293:	mov    DWORD PTR [rsp+0x6c],ebp
  417297:	pxor   xmm6,xmm6
  41729b:	sete   BYTE PTR [rsp+0x60]
  4172a0:	movzx  edi,BYTE PTR [rsp+0x60]
  4172a5:	xor    r14d,r14d
  4172a8:	mov    QWORD PTR [rsp+0x60],rcx
  4172ad:	mov    rbp,r14
  4172b0:	xor    ebx,ebx
  4172b2:	mov    r14,r12
  4172b5:	mov    r12,rsi
  4172b8:	movzx  ecx,dil
  4172bc:	mov    esi,edi
  4172be:	mov    DWORD PTR [rsp+0x68],ecx
  4172c2:	mov    rcx,r15
  4172c5:	mov    r15,r13
  4172c8:	mov    r13,rcx
  4172cb:	jmp    0x41730e
  4172cd:	nop    DWORD PTR [rax]
  4172d0:	mov    r9,QWORD PTR [rsp+0x58]
  4172d5:	movsd  QWORD PTR [rsp+0x28],xmm0
  4172db:	mov    DWORD PTR [rsp+0x20],0x0
  4172e3:	mov    r8,r12
  4172e6:	mov    rdx,r14
  4172e9:	call   0x4220c8
  4172ee:	test   eax,eax
  4172f0:	mov    r9d,eax
  4172f3:	js     0x4173bd
  4172f9:	mov    eax,DWORD PTR [rip+0x2c3e9]        # 0x4436e8
  4172ff:	add    ebx,0x1
  417302:	add    rbp,0x8
  417306:	cmp    ebx,eax
  417308:	jge    0x4173b4
  41730e:	mov    rdx,QWORD PTR [r13+0x0]
  417312:	mov    rdx,QWORD PTR [rdx+rbp*1]
  417316:	mov    rcx,QWORD PTR [rdx+0x10]
  41731a:	test   rcx,rcx
  41731d:	je     0x4172ff
  41731f:	movsd  xmm0,QWORD PTR [rsp+0x78]
  417325:	ucomisd xmm6,xmm0
  417329:	ja     0x417350
  41732b:	test   sil,sil
  41732e:	je     0x4172d0
  417330:	call   r15
  417333:	lea    rdx,[rip+0x2321e]        # 0x43a558
  41733a:	lea    rcx,[rax+0x60]
  41733e:	call   0x414b30
  417343:	mov    eax,DWORD PTR [rip+0x2c39f]        # 0x4436e8
  417349:	jmp    0x4172ff
  41734b:	nop    DWORD PTR [rax+rax*1+0x0]
  417350:	mov    eax,DWORD PTR [rsp+0x68]
  417354:	mov    r9,QWORD PTR [rsp+0x58]
  417359:	mov    r8,r12
  41735c:	mov    rdx,r14
  41735f:	mov    DWORD PTR [rsp+0x28],0x1000
  417367:	mov    DWORD PTR [rsp+0x30],eax
  41736b:	mov    rax,QWORD PTR [rsp+0x50]
  417370:	mov    QWORD PTR [rsp+0x20],rax
  417375:	call   0x4220b8
  41737a:	mov    edi,eax
  41737c:	call   r15
  41737f:	lea    rcx,[rax+0x60]
  417383:	mov    rax,QWORD PTR [rsp+0x50]
  417388:	lea    rdx,[rip+0x23199]        # 0x43a528
  41738f:	mov    r9d,edi
  417392:	mov    r8d,ebx
  417395:	mov    QWORD PTR [rsp+0x20],rax
  41739a:	call   0x414b30
  41739f:	mov    eax,DWORD PTR [rip+0x2c343]        # 0x4436e8
  4173a5:	jmp    0x4172ff
  4173aa:	mov    ebp,0xabb6a7bb
  4173af:	jmp    0x416bd0
  4173b4:	mov    ebp,DWORD PTR [rsp+0x6c]
  4173b8:	jmp    0x416e77
  4173bd:	mov    rdi,QWORD PTR [rsp+0x60]
  4173c2:	xor    eax,eax
  4173c4:	mov    ecx,0x8
  4173c9:	mov    r8d,0x40
  4173cf:	rep stos QWORD PTR es:[rdi],rax
  4173d2:	mov    rdi,QWORD PTR [rsp+0x60]
  4173d7:	mov    ecx,r9d
  4173da:	mov    rdx,rdi
  4173dd:	call   0x422570
  4173e2:	call   r15
  4173e5:	lea    rdx,[rip+0x231bc]        # 0x43a5a8
  4173ec:	lea    rcx,[rax+0x60]
  4173f0:	mov    r8,rdi
  4173f3:	call   0x414b30
  4173f8:	jmp    0x4172f9
  4173fd:	mov    QWORD PTR [rip+0x2ae1c],rbx        # 0x442220
  417404:	jmp    0x416bd0
  417409:	mov    ecx,0xfffffff6
  41740e:	call   QWORD PTR [rip+0x2da44]        # 0x444e58
  417414:	lea    rdx,[rsp+0x200]
  41741c:	mov    QWORD PTR [rip+0x2adf5],rax        # 0x442218
  417423:	mov    rcx,rax
  417426:	call   QWORD PTR [rip+0x2d9d4]        # 0x444e00
  41742c:	test   eax,eax
  41742e:	sete   al
  417431:	movzx  eax,al
  417434:	mov    DWORD PTR [rip+0x2add6],eax        # 0x442210
  41743a:	jmp    0x416c07
  41743f:	cmp    DWORD PTR [rsp+0x4c],0x68
  417444:	jne    0x416f4d
  41744a:	mov    rax,QWORD PTR [rip+0x262ef]        # 0x43d740
  417451:	mov    rdx,QWORD PTR [rip+0x262f8]        # 0x43d750
  417458:	mov    r8d,DWORD PTR [rax]
  41745b:	test   r8d,r8d
  41745e:	je     0x417480
  417460:	mov    DWORD PTR [rdx],0x0
  417466:	mov    DWORD PTR [rax],0x0
  41746c:	mov    ecx,0x30
  417471:	call   0x422680
  417476:	jmp    0x416cb2
  41747b:	nop    DWORD PTR [rax+rax*1+0x0]
  417480:	mov    ecx,DWORD PTR [rdx]
  417482:	test   ecx,ecx
  417484:	je     0x417490
  417486:	mov    DWORD PTR [rax],0x1
  41748c:	jmp    0x41746c
  41748e:	xchg   ax,ax
  417490:	mov    DWORD PTR [rdx],0x1
  417496:	jmp    0x41746c
  417498:	mov    r13,QWORD PTR [rip+0x2dab1]        # 0x444f50
  41749f:	jmp    0x416def
  4174a4:	xchg   ax,ax
  4174a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4174b0:	push   r15
  4174b2:	push   r14
  4174b4:	push   r13
  4174b6:	push   r12
  4174b8:	push   rbp
  4174b9:	push   rdi
  4174ba:	push   rsi
  4174bb:	push   rbx
  4174bc:	sub    rsp,0x118
  4174c3:	mov    rax,QWORD PTR [rcx+0x30]
  4174c7:	mov    rbx,rcx
  4174ca:	mov    rbp,rdx
  4174cd:	mov    r13,r8
  4174d0:	test   rax,rax
  4174d3:	je     0x4179c6
  4174d9:	cmp    QWORD PTR [rbx+0x38],0x0
  4174de:	mov    rdi,rax
  4174e1:	je     0x417990
  4174e7:	mov    rax,QWORD PTR [rbx+0x8]
  4174eb:	mov    rcx,QWORD PTR [rbx+0x50]
  4174ef:	movabs rdx,0xf424000000001
  4174f9:	mov    r8,QWORD PTR [rax+0x30]
  4174fd:	call   0x422588
  417502:	xor    ecx,ecx
  417504:	mov    QWORD PTR [rbp+0x10],rax
  417508:	call   0x4166f0
  41750d:	mov    rcx,QWORD PTR [rbx+0x20]
  417511:	mov    r9,rbp
  417514:	mov    r8,r13
  417517:	mov    rdx,rdi
  41751a:	call   0x4223c0
  41751f:	mov    esi,eax
  417521:	mov    rax,QWORD PTR [rbx+0x8]
  417525:	mov    edx,DWORD PTR [rbx]
  417527:	lea    rcx,[rip+0x2326c]        # 0x43a79a
  41752e:	mov    r8d,DWORD PTR [rax]
  417531:	call   0x416780
  417536:	mov    rax,QWORD PTR [rbx+0x8]
  41753a:	mov    rcx,QWORD PTR [rbx+0x20]
  41753e:	mov    rdx,QWORD PTR [rax+0x8]
  417542:	mov    r9d,DWORD PTR [rcx+0xd4]
  417549:	mov    eax,DWORD PTR [rdx+0xd4]
  41754f:	cmp    eax,r9d
  417552:	jge    0x417573
  417554:	cmp    DWORD PTR [rcx+0x38],0x1c
  417558:	je     0x417830
  41755e:	lea    r8,[rip+0x2324b]        # 0x43a7b0
  417565:	mov    DWORD PTR [rsp+0x20],eax
  417569:	mov    edx,0x18
  41756e:	call   0x4226c0
  417573:	mov    eax,DWORD PTR [r13+0x0]
  417577:	mov    r12d,esi
  41757a:	shr    r12d,0x1f
  41757e:	test   eax,eax
  417580:	setne  dl
  417583:	test   r12b,r12b
  417586:	jne    0x4177d0
  41758c:	test   dl,dl
  41758e:	jne    0x4177d0
  417594:	test   esi,esi
  417596:	js     0x4175f6
  417598:	test   dl,dl
  41759a:	je     0x4175f6
  41759c:	mov    rdx,QWORD PTR [rbx+0x20]
  4175a0:	mov    r9d,DWORD PTR [rdi+0x68]
  4175a4:	mov    ecx,DWORD PTR [rdx+0x94]
  4175aa:	cmp    ecx,r9d
  4175ad:	je     0x417930
  4175b3:	mov    r11d,DWORD PTR [rdx+0xa8]
  4175ba:	mov    r10d,DWORD PTR [rdx+0x98]
  4175c1:	mov    r8d,DWORD PTR [rdi+0x6c]
  4175c5:	mov    edx,DWORD PTR [rdi+0x74]
  4175c8:	mov    DWORD PTR [rsp+0x20],r8d
  4175cd:	lea    r8,[rip+0x232b4]        # 0x43a888
  4175d4:	mov    DWORD PTR [rsp+0x30],ecx
  4175d8:	mov    DWORD PTR [rsp+0x28],edx
  4175dc:	mov    DWORD PTR [rsp+0x40],r11d
  4175e1:	mov    edx,0x30
  4175e6:	mov    DWORD PTR [rsp+0x38],r10d
  4175eb:	xor    ecx,ecx
  4175ed:	call   0x4226c0
  4175f2:	mov    eax,DWORD PTR [r13+0x0]
  4175f6:	test   eax,eax
  4175f8:	je     0x417810
  4175fe:	test   r12b,r12b
  417601:	jne    0x417810
  417607:	mov    eax,DWORD PTR [rbx+0x98]
  41760d:	test   eax,eax
  41760f:	js     0x417617
  417611:	mov    DWORD PTR [rdi+0x18c],eax
  417617:	mov    r8,QWORD PTR [rbx+0x160]
  41761e:	add    QWORD PTR [rbx+0x180],0x1
  417626:	mov    eax,DWORD PTR [rdi+0x74]
  417629:	test   r8,r8
  41762c:	je     0x41763a
  41762e:	cmp    eax,DWORD PTR [rbx+0x168]
  417634:	je     0x41795f
  41763a:	mov    DWORD PTR [rbx+0x16c],eax
  417640:	mov    rcx,rdi
  417643:	call   0x4227a8
  417648:	mov    r14,rax
  41764b:	movabs rax,0x8000000000000000
  417655:	cmp    r14,rax
  417658:	je     0x4179b0
  41765e:	mov    r12,QWORD PTR [rbx+0x8]
  417662:	movabs r8,0xf424000000001
  41766c:	mov    QWORD PTR [rdi+0xc8],r14
  417673:	mov    rcx,r14
  417676:	mov    rdx,QWORD PTR [r12+0x30]
  41767b:	call   0x422588
  417680:	mov    QWORD PTR [rbx+0x60],rax
  417684:	mov    QWORD PTR [rbx+0x58],rax
  417688:	mov    rax,QWORD PTR [rip+0x26071]        # 0x43d700
  41768f:	mov    r10d,DWORD PTR [rax]
  417692:	test   r10d,r10d
  417695:	jne    0x417c26
  41769b:	mov    r9d,DWORD PTR [r12+0x58]
  4176a0:	mov    DWORD PTR [rbp+0x20],0x0
  4176a7:	test   r9d,r9d
  4176aa:	je     0x4176b8
  4176ac:	mov    rax,QWORD PTR [r12+0x58]
  4176b1:	mov    QWORD PTR [rdi+0xc0],rax
  4176b8:	mov    eax,DWORD PTR [rdi+0x68]
  4176bb:	cmp    DWORD PTR [rbx+0xa8],eax
  4176c1:	je     0x417840
  4176c7:	mov    ecx,DWORD PTR [rdi+0x74]
  4176ca:	call   0x422700
  4176cf:	mov    r12d,DWORD PTR [rdi+0x6c]
  4176d3:	mov    ebp,DWORD PTR [rdi+0x68]
  4176d6:	mov    r13,rax
  4176d9:	mov    ecx,DWORD PTR [rbx+0xac]
  4176df:	call   0x422700
  4176e4:	mov    QWORD PTR [rsp+0x50],r13
  4176e9:	mov    DWORD PTR [rsp+0x48],r12d
  4176ee:	lea    r8,[rip+0x232db]        # 0x43a9d0
  4176f5:	mov    DWORD PTR [rsp+0x40],ebp
  4176f9:	mov    QWORD PTR [rsp+0x38],rax
  4176fe:	mov    edx,0x20
  417703:	mov    eax,DWORD PTR [rbx+0xa4]
  417709:	xor    ecx,ecx
  41770b:	xor    ebp,ebp
  41770d:	xor    r12d,r12d
  417710:	lea    r13,[rip+0x2bfd9]        # 0x4436f0
  417717:	mov    DWORD PTR [rsp+0x30],eax
  41771b:	mov    eax,DWORD PTR [rbx+0xa8]
  417721:	mov    DWORD PTR [rsp+0x28],eax
  417725:	mov    rax,QWORD PTR [rbx+0x8]
  417729:	mov    eax,DWORD PTR [rax]
  41772b:	mov    DWORD PTR [rsp+0x20],eax
  41772f:	mov    r9d,DWORD PTR [rbx]
  417732:	call   0x4226c0
  417737:	mov    eax,DWORD PTR [rdi+0x68]
  41773a:	mov    edx,DWORD PTR [rip+0x2bfa8]        # 0x4436e8
  417740:	mov    DWORD PTR [rbx+0xa8],eax
  417746:	mov    eax,DWORD PTR [rdi+0x6c]
  417749:	test   edx,edx
  41774b:	mov    DWORD PTR [rbx+0xa4],eax
  417751:	mov    eax,DWORD PTR [rdi+0x74]
  417754:	mov    DWORD PTR [rbx+0xac],eax
  41775a:	jg     0x41777a
  417760:	jmp    0x417860
  417765:	add    r12d,0x1
  417769:	add    rbp,0x8
  41776d:	cmp    DWORD PTR [rip+0x2bf74],r12d        # 0x4436e8
  417774:	jle    0x417860
  41777a:	mov    rax,QWORD PTR [r13+0x0]
  41777e:	mov    rdx,rbx
  417781:	mov    rcx,QWORD PTR [rax+rbp*1]
  417785:	call   0x414450
  41778a:	test   eax,eax
  41778c:	je     0x417765
  41778e:	mov    r8d,DWORD PTR [rbx+0x12c]
  417795:	test   r8d,r8d
  417798:	je     0x417765
  41779a:	mov    rax,QWORD PTR [r13+0x0]
  41779e:	mov    rcx,QWORD PTR [rax+rbp*1]
  4177a2:	call   0x412f50
  4177a7:	test   eax,eax
  4177a9:	jns    0x417765
  4177ab:	lea    r8,[rip+0x231ce]        # 0x43a980
  4177b2:	mov    edx,0x8
  4177b7:	xor    ecx,ecx
  4177b9:	call   0x4226c0
  4177be:	mov    ecx,0x1
  4177c3:	call   0x401cb0
  4177c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4177d0:	lea    rcx,[rip+0x2aa79]        # 0x442250
  4177d7:	mov    r8d,r12d
  4177da:	and    r8d,0x1
  4177de:	add    QWORD PTR [rcx+r8*8],0x1
  4177e3:	test   r12b,r12b
  4177e6:	je     0x417594
  4177ec:	mov    rcx,QWORD PTR [rip+0x25f8d]        # 0x43d780
  4177f3:	mov    r11d,DWORD PTR [rcx]
  4177f6:	test   r11d,r11d
  4177f9:	jne    0x4177be
  4177fb:	test   esi,esi
  4177fd:	js     0x417810
  4177ff:	test   dl,dl
  417801:	jne    0x41759c
  417807:	nop    WORD PTR [rax+rax*1+0x0]
  417810:	mov    eax,esi
  417812:	add    rsp,0x118
  417819:	pop    rbx
  41781a:	pop    rsi
  41781b:	pop    rdi
  41781c:	pop    rbp
  41781d:	pop    r12
  41781f:	pop    r13
  417821:	pop    r14
  417823:	pop    r15
  417825:	ret    
  417826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417830:	mov    DWORD PTR [rdx+0xd4],r9d
  417837:	jmp    0x417573
  41783c:	nop    DWORD PTR [rax+0x0]
  417840:	mov    eax,DWORD PTR [rdi+0x6c]
  417843:	cmp    DWORD PTR [rbx+0xa4],eax
  417849:	mov    ecx,DWORD PTR [rdi+0x74]
  41784c:	jne    0x4176ca
  417852:	cmp    DWORD PTR [rbx+0xac],ecx
  417858:	jne    0x4176ca
  41785e:	xchg   ax,ax
  417860:	call   0x422340
  417865:	lea    r8,[rip+0x230fc]        # 0x43a968
  41786c:	mov    rdx,rdi
  41786f:	mov    rcx,rax
  417872:	xor    r12d,r12d
  417875:	xor    ebp,ebp
  417877:	call   0x422628
  41787c:	mov    edx,DWORD PTR [rbx+0x128]
  417882:	mov    r13,rax
  417885:	test   edx,edx
  417887:	mov    r8d,edx
  41788a:	jg     0x4178e6
  41788c:	jmp    0x417916
  417891:	mov    rsi,QWORD PTR [rbx+0x38]
  417895:	mov    rdx,rdi
  417898:	mov    rcx,rsi
  41789b:	call   0x422780
  4178a0:	test   eax,eax
  4178a2:	js     0x417970
  4178a8:	mov    rax,QWORD PTR [rbx+0x120]
  4178af:	mov    r8d,0x4
  4178b5:	mov    rdx,rsi
  4178b8:	mov    rax,QWORD PTR [rax+r12*1]
  4178bc:	mov    rcx,QWORD PTR [rax]
  4178bf:	call   0x422120
  4178c4:	cmp    eax,0xdfb9b0bb
  4178c9:	je     0x417910
  4178cb:	test   eax,eax
  4178cd:	js     0x4179ea
  4178d3:	mov    r8d,DWORD PTR [rbx+0x128]
  4178da:	add    ebp,0x1
  4178dd:	add    r12,0x8
  4178e1:	cmp    r8d,ebp
  4178e4:	jle    0x417914
  4178e6:	mov    ecx,DWORD PTR [r13+0x0]
  4178ea:	test   ecx,ecx
  4178ec:	jne    0x4178fa
  4178ee:	mov    rax,QWORD PTR [rbx+0x8]
  4178f2:	mov    rax,QWORD PTR [rax+0x58]
  4178f6:	mov    QWORD PTR [r13+0x0],rax
  4178fa:	sub    r8d,0x1
  4178fe:	cmp    r8d,ebp
  417901:	jg     0x417891
  417903:	mov    rsi,rdi
  417906:	jmp    0x4178a8
  417908:	nop    DWORD PTR [rax+rax*1+0x0]
  417910:	xor    eax,eax
  417912:	jmp    0x4178d3
  417914:	mov    esi,eax
  417916:	mov    rcx,QWORD PTR [rbx+0x38]
  41791a:	call   0x422778
  41791f:	mov    rcx,rdi
  417922:	call   0x422778
  417927:	jmp    0x417810
  41792c:	nop    DWORD PTR [rax+0x0]
  417930:	mov    r10d,DWORD PTR [rdx+0x98]
  417937:	mov    r8d,DWORD PTR [rdi+0x6c]
  41793b:	mov    r11d,DWORD PTR [rdx+0xa8]
  417942:	mov    edx,DWORD PTR [rdi+0x74]
  417945:	cmp    r10d,r8d
  417948:	jne    0x4175c8
  41794e:	cmp    r11d,edx
  417951:	je     0x4175f6
  417957:	mov    r8d,r10d
  41795a:	jmp    0x4175c8
  41795f:	mov    rcx,QWORD PTR [rbx+0x20]
  417963:	mov    rdx,rdi
  417966:	call   r8
  417969:	test   eax,eax
  41796b:	jns    0x4179e2
  41796d:	nop    DWORD PTR [rax]
  417970:	mov    rcx,QWORD PTR [rbx+0x38]
  417974:	mov    DWORD PTR [rsp+0x60],eax
  417978:	call   0x422778
  41797d:	mov    rcx,rdi
  417980:	call   0x422778
  417985:	mov    eax,DWORD PTR [rsp+0x60]
  417989:	jmp    0x417812
  41798e:	xchg   ax,ax
  417990:	call   0x4227c0
  417995:	test   rax,rax
  417998:	mov    QWORD PTR [rbx+0x38],rax
  41799c:	je     0x4179d8
  41799e:	mov    rdi,QWORD PTR [rbx+0x30]
  4179a2:	jmp    0x4174e7
  4179a7:	nop    WORD PTR [rax+rax*1+0x0]
  4179b0:	mov    rax,QWORD PTR [rip+0x25d49]        # 0x43d700
  4179b7:	mov    eax,DWORD PTR [rax]
  4179b9:	test   eax,eax
  4179bb:	jne    0x417a36
  4179bd:	mov    r12,QWORD PTR [rbx+0x8]
  4179c1:	jmp    0x41769b
  4179c6:	call   0x4227c0
  4179cb:	test   rax,rax
  4179ce:	mov    QWORD PTR [rbx+0x30],rax
  4179d2:	jne    0x4174d9
  4179d8:	mov    eax,0xfffffff4
  4179dd:	jmp    0x417812
  4179e2:	mov    eax,DWORD PTR [rdi+0x74]
  4179e5:	jmp    0x41763a
  4179ea:	lea    rbx,[rsp+0xd0]
  4179f2:	lea    rdi,[rsp+0xd0]
  4179fa:	mov    esi,eax
  4179fc:	mov    ecx,0x8
  417a01:	xor    eax,eax
  417a03:	mov    r8d,0x40
  417a09:	rep stos QWORD PTR es:[rdi],rax
  417a0c:	mov    rdx,rbx
  417a0f:	mov    ecx,esi
  417a11:	call   0x422570
  417a16:	lea    r8,[rip+0x22f83]        # 0x43a9a0
  417a1d:	xor    ecx,ecx
  417a1f:	mov    r9,rbx
  417a22:	mov    edx,0x8
  417a27:	call   0x4226c0
  417a2c:	mov    ecx,0x1
  417a31:	call   0x401cb0
  417a36:	mov    rax,QWORD PTR [rbx+0x8]
  417a3a:	lea    r13,[rsp+0xb0]
  417a42:	lea    r8,[rip+0x22e77]        # 0x43a8c0
  417a49:	mov    QWORD PTR [rsp+0xb0],0x0
  417a55:	mov    QWORD PTR [rsp+0xb8],0x0
  417a61:	mov    rcx,r13
  417a64:	mov    QWORD PTR [rsp+0xc0],0x0
  417a70:	mov    edx,DWORD PTR [rax+0x34]
  417a73:	mov    eax,DWORD PTR [rax+0x30]
  417a76:	mov    QWORD PTR [rsp+0xc8],0x0
  417a82:	mov    DWORD PTR [rsp+0x60],eax
  417a86:	mov    eax,DWORD PTR [rdi+0x7c]
  417a89:	mov    DWORD PTR [rsp+0x64],edx
  417a8d:	mov    edx,0x20
  417a92:	mov    DWORD PTR [rsp+0x68],eax
  417a96:	mov    eax,DWORD PTR [rdi+0x78]
  417a99:	mov    DWORD PTR [rsp+0x6c],eax
  417a9d:	call   0x414ae0
  417aa2:	mov    rax,QWORD PTR [rdi+0xc8]
  417aa9:	movabs rcx,0x8000000000000000
  417ab3:	mov    rdx,QWORD PTR [rbx+0x8]
  417ab7:	mov    QWORD PTR [rsp+0x90],0x0
  417ac3:	mov    QWORD PTR [rsp+0x98],0x0
  417acf:	mov    QWORD PTR [rsp+0xa0],0x0
  417adb:	mov    QWORD PTR [rsp+0xa8],0x0
  417ae7:	cmp    rax,rcx
  417aea:	je     0x417bec
  417af0:	pxor   xmm0,xmm0
  417af4:	lea    r12,[rsp+0x90]
  417afc:	lea    r8,[rip+0x22dc3]        # 0x43a8c6
  417b03:	pxor   xmm1,xmm1
  417b07:	mov    rcx,r12
  417b0a:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  417b0f:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  417b14:	divsd  xmm0,xmm1
  417b18:	mov    edx,0x20
  417b1d:	movapd xmm1,xmm0
  417b21:	pxor   xmm0,xmm0
  417b25:	cvtsi2sd xmm0,rax
  417b2a:	mulsd  xmm0,xmm1
  417b2e:	movapd xmm3,xmm0
  417b32:	movq   r9,xmm0
  417b37:	call   0x414ae0
  417b3c:	mov    r9,QWORD PTR [rdi+0xc8]
  417b43:	movabs rax,0x8000000000000000
  417b4d:	mov    QWORD PTR [rsp+0x70],0x0
  417b56:	mov    QWORD PTR [rsp+0x78],0x0
  417b5f:	mov    QWORD PTR [rsp+0x80],0x0
  417b6b:	lea    r15,[rsp+0x70]
  417b70:	mov    QWORD PTR [rsp+0x88],0x0
  417b7c:	cmp    r9,rax
  417b7f:	je     0x417c0d
  417b85:	lea    r8,[rip+0x22d3f]        # 0x43a8cb
  417b8c:	mov    edx,0x20
  417b91:	mov    rcx,r15
  417b94:	call   0x414ae0
  417b99:	mov    edx,DWORD PTR [rsp+0x64]
  417b9d:	mov    rax,QWORD PTR [rbx+0x8]
  417ba1:	lea    r8,[rip+0x22d28]        # 0x43a8d0
  417ba8:	mov    QWORD PTR [rsp+0x38],r13
  417bad:	mov    QWORD PTR [rsp+0x30],r14
  417bb2:	xor    ecx,ecx
  417bb4:	mov    QWORD PTR [rsp+0x28],r12
  417bb9:	mov    QWORD PTR [rsp+0x20],r15
  417bbe:	mov    DWORD PTR [rsp+0x58],edx
  417bc2:	mov    edx,DWORD PTR [rsp+0x60]
  417bc6:	mov    DWORD PTR [rsp+0x50],edx
  417bca:	mov    edx,DWORD PTR [rsp+0x68]
  417bce:	mov    DWORD PTR [rsp+0x48],edx
  417bd2:	mov    edx,DWORD PTR [rsp+0x6c]
  417bd6:	mov    DWORD PTR [rsp+0x40],edx
  417bda:	mov    r9d,DWORD PTR [rax]
  417bdd:	mov    edx,0x20
  417be2:	call   0x4226c0
  417be7:	jmp    0x4179bd
  417bec:	lea    r12,[rsp+0x90]
  417bf4:	lea    r8,[rip+0x22cc5]        # 0x43a8c0
  417bfb:	mov    edx,0x20
  417c00:	mov    rcx,r12
  417c03:	call   0x414ae0
  417c08:	jmp    0x417b3c
  417c0d:	lea    r8,[rip+0x22cac]        # 0x43a8c0
  417c14:	mov    edx,0x20
  417c19:	mov    rcx,r15
  417c1c:	call   0x414ae0
  417c21:	jmp    0x417b99
  417c26:	mov    eax,DWORD PTR [r12+0x34]
  417c2b:	pxor   xmm0,xmm0
  417c2f:	pxor   xmm1,xmm1
  417c33:	lea    r13,[rsp+0xb0]
  417c3b:	lea    r8,[rip+0x22c84]        # 0x43a8c6
  417c42:	mov    edx,0x20
  417c47:	mov    QWORD PTR [rsp+0xb0],0x0
  417c53:	mov    DWORD PTR [rsp+0x64],eax
  417c57:	mov    eax,DWORD PTR [r12+0x30]
  417c5c:	mov    rcx,r13
  417c5f:	cvtsi2sd xmm1,DWORD PTR [rsp+0x64]
  417c65:	mov    QWORD PTR [rsp+0xb8],0x0
  417c71:	mov    QWORD PTR [rsp+0xc0],0x0
  417c7d:	mov    QWORD PTR [rsp+0xc8],0x0
  417c89:	mov    DWORD PTR [rsp+0x60],eax
  417c8d:	mov    eax,DWORD PTR [rdi+0x7c]
  417c90:	cvtsi2sd xmm0,DWORD PTR [rsp+0x60]
  417c96:	divsd  xmm0,xmm1
  417c9a:	mov    DWORD PTR [rsp+0x68],eax
  417c9e:	mov    eax,DWORD PTR [rdi+0x78]
  417ca1:	mov    DWORD PTR [rsp+0x6c],eax
  417ca5:	movapd xmm1,xmm0
  417ca9:	pxor   xmm0,xmm0
  417cad:	cvtsi2sd xmm0,r14
  417cb2:	mulsd  xmm0,xmm1
  417cb6:	movapd xmm3,xmm0
  417cba:	movq   r9,xmm0
  417cbf:	call   0x414ae0
  417cc4:	jmp    0x417aa2
  417cc9:	nop    DWORD PTR [rax+0x0]
  417cd0:	push   r15
  417cd2:	push   r14
  417cd4:	push   r13
  417cd6:	push   r12
  417cd8:	push   rbp
  417cd9:	push   rdi
  417cda:	push   rsi
  417cdb:	push   rbx
  417cdc:	sub    rsp,0x1c8
  417ce3:	mov    rax,QWORD PTR [rcx+0x30]
  417ce7:	mov    rbp,QWORD PTR [rcx+0x20]
  417ceb:	mov    rbx,rcx
  417cee:	mov    r14,rdx
  417cf1:	mov    rsi,r8
  417cf4:	test   rax,rax
  417cf7:	je     0x4181e0
  417cfd:	cmp    QWORD PTR [rbx+0x38],0x0
  417d02:	mov    r12,rax
  417d05:	je     0x4181c0
  417d0b:	xor    ecx,ecx
  417d0d:	call   0x4166f0
  417d12:	mov    r9,r14
  417d15:	mov    r8,rsi
  417d18:	mov    rdx,r12
  417d1b:	mov    rcx,rbp
  417d1e:	call   0x4223d0
  417d23:	mov    r13d,eax
  417d26:	mov    rax,QWORD PTR [rbx+0x8]
  417d2a:	mov    edx,DWORD PTR [rbx]
  417d2c:	lea    rcx,[rip+0x22cec]        # 0x43aa1f
  417d33:	mov    r8d,DWORD PTR [rax]
  417d36:	call   0x416780
  417d3b:	test   r13d,r13d
  417d3e:	js     0x417e0a
  417d44:	movsxd r9,DWORD PTR [rbp+0x1d0]
  417d4b:	test   r9d,r9d
  417d4e:	jle    0x417df0
  417d54:	mov    ecx,DWORD PTR [rsi]
  417d56:	test   ecx,ecx
  417d58:	je     0x417e1f
  417d5e:	movsxd rax,DWORD PTR [r12+0x70]
  417d63:	add    QWORD PTR [rip+0x2a4e5],0x1        # 0x442250
  417d6b:	add    QWORD PTR [rbx+0x188],rax
  417d72:	add    QWORD PTR [rbx+0x180],0x1
  417d7a:	imul   rax,rax,0xf4240
  417d81:	cqo    
  417d83:	idiv   r9
  417d86:	add    QWORD PTR [rbx+0x58],rax
  417d8a:	add    QWORD PTR [rbx+0x48],rax
  417d8e:	mov    eax,DWORD PTR [r12+0x74]
  417d93:	cmp    DWORD PTR [rbx+0xb0],eax
  417d99:	je     0x417fd3
  417d9f:	mov    rsi,QWORD PTR [rbx+0x20]
  417da3:	cmp    QWORD PTR [rsi+0x1f0],0x0
  417dab:	jne    0x417e40
  417db1:	mov    ecx,DWORD PTR [rsi+0x1d4]
  417db7:	cmp    ecx,DWORD PTR [rbx+0x9c]
  417dbd:	jle    0x418200
  417dc3:	mov    rax,QWORD PTR [rbx+0x8]
  417dc7:	mov    r9d,DWORD PTR [rbx]
  417dca:	lea    r8,[rip+0x22cb7]        # 0x43aa88
  417dd1:	mov    edx,0x8
  417dd6:	xor    ecx,ecx
  417dd8:	mov    eax,DWORD PTR [rax]
  417dda:	mov    DWORD PTR [rsp+0x20],eax
  417dde:	call   0x4226c0
  417de3:	mov    ecx,0x1
  417de8:	call   0x401cb0
  417ded:	nop    DWORD PTR [rax]
  417df0:	lea    r8,[rip+0x22c3b]        # 0x43aa32
  417df7:	mov    edx,0x10
  417dfc:	mov    rcx,rbp
  417dff:	mov    r13d,0xbebbb1b7
  417e05:	call   0x4226c0
  417e0a:	mov    rax,QWORD PTR [rip+0x2596f]        # 0x43d780
  417e11:	add    QWORD PTR [rip+0x2a43f],0x1        # 0x442258
  417e19:	mov    eax,DWORD PTR [rax]
  417e1b:	test   eax,eax
  417e1d:	jne    0x417de3
  417e1f:	mov    eax,r13d
  417e22:	add    rsp,0x1c8
  417e29:	pop    rbx
  417e2a:	pop    rsi
  417e2b:	pop    rdi
  417e2c:	pop    rbp
  417e2d:	pop    r12
  417e2f:	pop    r13
  417e31:	pop    r14
  417e33:	pop    r15
  417e35:	ret    
  417e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e40:	lea    rdi,[rsp+0xc0]
  417e48:	mov    rax,QWORD PTR [rbp+0x1f0]
  417e4f:	lea    rsi,[rsp+0x80]
  417e57:	mov    r9,QWORD PTR [rbx+0xc0]
  417e5e:	mov    r8d,DWORD PTR [rbx+0xb8]
  417e65:	mov    edx,0x40
  417e6a:	mov    rcx,rsi
  417e6d:	mov    QWORD PTR [r12+0x1c8],rax
  417e75:	call   0x422740
  417e7a:	mov    r9,QWORD PTR [r12+0x1c8]
  417e82:	mov    r8d,DWORD PTR [rbp+0x1d4]
  417e89:	mov    edx,0x40
  417e8e:	mov    rcx,rdi
  417e91:	call   0x422740
  417e96:	mov    r10d,DWORD PTR [rbp+0x1d4]
  417e9d:	mov    ecx,DWORD PTR [r12+0x74]
  417ea2:	mov    DWORD PTR [rsp+0x7c],r10d
  417ea7:	call   0x4226f0
  417eac:	mov    r8d,DWORD PTR [r12+0x1c4]
  417eb4:	mov    ecx,DWORD PTR [rbx+0xb0]
  417eba:	mov    r15d,DWORD PTR [rbx+0xb8]
  417ec1:	mov    QWORD PTR [rsp+0x70],rax
  417ec6:	mov    DWORD PTR [rsp+0x78],r8d
  417ecb:	call   0x4226f0
  417ed0:	mov    QWORD PTR [rsp+0x30],rax
  417ed5:	mov    eax,DWORD PTR [rbx+0xb4]
  417edb:	mov    edx,0x20
  417ee0:	mov    r9,QWORD PTR [rsp+0x70]
  417ee5:	mov    r8d,DWORD PTR [rsp+0x78]
  417eea:	xor    ecx,ecx
  417eec:	mov    r10d,DWORD PTR [rsp+0x7c]
  417ef1:	mov    QWORD PTR [rsp+0x60],rdi
  417ef6:	xor    edi,edi
  417ef8:	mov    DWORD PTR [rsp+0x28],eax
  417efc:	mov    rax,QWORD PTR [rbx+0x8]
  417f00:	mov    QWORD PTR [rsp+0x50],r9
  417f05:	mov    DWORD PTR [rsp+0x48],r8d
  417f0a:	lea    r8,[rip+0x22bb7]        # 0x43aac8
  417f11:	mov    QWORD PTR [rsp+0x40],rsi
  417f16:	mov    DWORD PTR [rsp+0x38],r15d
  417f1b:	xor    esi,esi
  417f1d:	mov    DWORD PTR [rsp+0x58],r10d
  417f22:	mov    eax,DWORD PTR [rax]
  417f24:	lea    r15,[rip+0x2b7c5]        # 0x4436f0
  417f2b:	mov    r9d,DWORD PTR [rbx]
  417f2e:	mov    DWORD PTR [rsp+0x20],eax
  417f32:	call   0x4226c0
  417f37:	mov    eax,DWORD PTR [r12+0x74]
  417f3c:	mov    edx,DWORD PTR [rip+0x2b7a6]        # 0x4436e8
  417f42:	mov    DWORD PTR [rbx+0xb0],eax
  417f48:	mov    eax,DWORD PTR [r12+0x1c4]
  417f50:	test   edx,edx
  417f52:	mov    DWORD PTR [rbx+0xb4],eax
  417f58:	mov    rax,QWORD PTR [r12+0x1c8]
  417f60:	mov    QWORD PTR [rbx+0xc0],rax
  417f67:	mov    eax,DWORD PTR [rbp+0x1d4]
  417f6d:	mov    DWORD PTR [rbx+0xb8],eax
  417f73:	jg     0x417f93
  417f79:	jmp    0x418010
  417f7e:	xchg   ax,ax
  417f80:	add    edi,0x1
  417f83:	add    rsi,0x8
  417f87:	cmp    DWORD PTR [rip+0x2b75b],edi        # 0x4436e8
  417f8d:	jle    0x418010
  417f93:	mov    rax,QWORD PTR [r15]
  417f96:	mov    rdx,rbx
  417f99:	mov    rcx,QWORD PTR [rax+rsi*1]
  417f9d:	call   0x414450
  417fa2:	test   eax,eax
  417fa4:	je     0x417f80
  417fa6:	mov    rax,QWORD PTR [r15]
  417fa9:	mov    rcx,QWORD PTR [rax+rsi*1]
  417fad:	call   0x412f50
  417fb2:	test   eax,eax
  417fb4:	jns    0x417f80
  417fb6:	lea    r8,[rip+0x229c3]        # 0x43a980
  417fbd:	xor    ecx,ecx
  417fbf:	mov    edx,0x8
  417fc4:	call   0x4226c0
  417fc9:	mov    ecx,0x1
  417fce:	call   0x401cb0
  417fd3:	mov    eax,DWORD PTR [rbp+0x1d4]
  417fd9:	cmp    DWORD PTR [rbx+0xb8],eax
  417fdf:	jne    0x417d9f
  417fe5:	mov    rax,QWORD PTR [r12+0x1c8]
  417fed:	cmp    QWORD PTR [rbx+0xc0],rax
  417ff4:	jne    0x417d9f
  417ffa:	mov    eax,DWORD PTR [r12+0x1c4]
  418002:	cmp    DWORD PTR [rbx+0xb4],eax
  418008:	jne    0x417d9f
  41800e:	xchg   ax,ax
  418010:	mov    rsi,QWORD PTR [r12+0xc8]
  418018:	movabs rax,0x8000000000000000
  418022:	cmp    rsi,rax
  418025:	je     0x418124
  41802b:	mov    rdx,QWORD PTR [rbp+0x84]
  418032:	mov    rcx,rsi
  418035:	movabs r8,0xf424000000001
  41803f:	call   0x422588
  418044:	mov    rcx,QWORD PTR [rbp+0x84]
  41804b:	mov    QWORD PTR [rbx+0x58],rax
  41804f:	mov    rdx,rsi
  418052:	mov    QWORD PTR [rbx+0x60],rax
  418056:	mov    QWORD PTR [rbx+0x48],rax
  41805a:	mov    QWORD PTR [rbx+0x50],rax
  41805e:	movabs rax,0x8000000000000000
  418068:	cmp    rdx,rax
  41806b:	mov    QWORD PTR [r14+0x8],rax
  41806f:	jne    0x418153
  418075:	mov    r8d,DWORD PTR [rbx+0x128]
  41807c:	test   r8d,r8d
  41807f:	jle    0x418190
  418085:	xor    esi,esi
  418087:	jmp    0x4180e6
  418089:	nop    DWORD PTR [rax+0x0]
  418090:	mov    rbp,QWORD PTR [rbx+0x38]
  418094:	mov    rdx,r12
  418097:	mov    rcx,rbp
  41809a:	call   0x422780
  41809f:	test   eax,eax
  4180a1:	js     0x4180f4
  4180a3:	mov    rax,QWORD PTR [rbx+0x120]
  4180aa:	mov    r8d,0x4
  4180b0:	mov    rdx,rbp
  4180b3:	mov    rax,QWORD PTR [rax+rsi*8]
  4180b7:	mov    rcx,QWORD PTR [rax]
  4180ba:	call   0x422120
  4180bf:	cmp    eax,0xdfb9b0bb
  4180c4:	je     0x4180cf
  4180c6:	mov    edx,eax
  4180c8:	shr    edx,0x1f
  4180cb:	test   dl,dl
  4180cd:	jne    0x4180f4
  4180cf:	mov    r8d,DWORD PTR [rbx+0x128]
  4180d6:	lea    eax,[rsi+0x1]
  4180d9:	add    rsi,0x1
  4180dd:	cmp    eax,r8d
  4180e0:	jge    0x418190
  4180e6:	sub    r8d,0x1
  4180ea:	cmp    r8d,esi
  4180ed:	jg     0x418090
  4180ef:	mov    rbp,r12
  4180f2:	jmp    0x4180a3
  4180f4:	mov    rcx,QWORD PTR [rbx+0x38]
  4180f8:	mov    DWORD PTR [rsp+0x78],eax
  4180fc:	movabs rax,0x8000000000000000
  418106:	mov    QWORD PTR [r12+0xc8],rax
  41810e:	call   0x422778
  418113:	mov    rcx,r12
  418116:	call   0x422778
  41811b:	mov    eax,DWORD PTR [rsp+0x78]
  41811f:	jmp    0x417e22
  418124:	mov    rdx,QWORD PTR [r12+0xd0]
  41812c:	cmp    rdx,rsi
  41812f:	je     0x41825e
  418135:	mov    rax,QWORD PTR [rbx+0x8]
  418139:	mov    QWORD PTR [r12+0xc8],rdx
  418141:	mov    rcx,QWORD PTR [rax+0x30]
  418145:	movabs rax,0x8000000000000000
  41814f:	mov    QWORD PTR [r14+0x8],rax
  418153:	mov    r8d,DWORD PTR [rbp+0x1d0]
  41815a:	mov    r9d,DWORD PTR [r12+0x70]
  41815f:	shl    r8,0x20
  418163:	mov    rax,r8
  418166:	or     r8,0x1
  41816a:	or     rax,0x1
  41816e:	mov    QWORD PTR [rsp+0x28],rax
  418173:	lea    rax,[rbx+0x70]
  418177:	mov    QWORD PTR [rsp+0x20],rax
  41817c:	call   0x422590
  418181:	mov    QWORD PTR [r12+0xc8],rax
  418189:	jmp    0x418075
  41818e:	xchg   ax,ax
  418190:	mov    rcx,QWORD PTR [rbx+0x38]
  418194:	movabs rax,0x8000000000000000
  41819e:	mov    QWORD PTR [r12+0xc8],rax
  4181a6:	call   0x422778
  4181ab:	mov    rcx,r12
  4181ae:	call   0x422778
  4181b3:	mov    eax,r13d
  4181b6:	jmp    0x417e22
  4181bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4181c0:	call   0x4227c0
  4181c5:	test   rax,rax
  4181c8:	mov    QWORD PTR [rbx+0x38],rax
  4181cc:	je     0x4181f2
  4181ce:	mov    r12,QWORD PTR [rbx+0x30]
  4181d2:	jmp    0x417d0b
  4181d7:	nop    WORD PTR [rax+rax*1+0x0]
  4181e0:	call   0x4227c0
  4181e5:	test   rax,rax
  4181e8:	mov    QWORD PTR [rbx+0x30],rax
  4181ec:	jne    0x417cfd
  4181f2:	mov    eax,0xfffffff4
  4181f7:	jmp    0x417e22
  4181fc:	nop    DWORD PTR [rax+0x0]
  418200:	call   0x422728
  418205:	test   rax,rax
  418208:	mov    QWORD PTR [rsi+0x1f0],rax
  41820f:	je     0x417dc3
  418215:	lea    rdi,[rsp+0xc0]
  41821d:	mov    r8d,DWORD PTR [rsi+0x1d4]
  418224:	mov    r9,rax
  418227:	mov    edx,0x100
  41822c:	mov    rcx,rdi
  41822f:	call   0x422740
  418234:	mov    rax,QWORD PTR [rbx+0x8]
  418238:	mov    QWORD PTR [rsp+0x28],rdi
  41823d:	lea    r8,[rip+0x2280c]        # 0x43aa50
  418244:	mov    r9d,DWORD PTR [rbx]
  418247:	mov    edx,0x18
  41824c:	xor    ecx,ecx
  41824e:	mov    eax,DWORD PTR [rax]
  418250:	mov    DWORD PTR [rsp+0x20],eax
  418254:	call   0x4226c0
  418259:	jmp    0x417e48
  41825e:	mov    rdx,QWORD PTR [r14+0x8]
  418262:	cmp    rdx,rsi
  418265:	jne    0x418135
  41826b:	mov    rdx,QWORD PTR [rbx+0x50]
  41826f:	movabs rcx,0xf424000000001
  418279:	mov    QWORD PTR [r12+0xc8],rdx
  418281:	jmp    0x41805e
  418286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418290:	push   r15
  418292:	push   r14
  418294:	push   r13
  418296:	push   r12
  418298:	push   rbp
  418299:	push   rdi
  41829a:	push   rsi
  41829b:	push   rbx
  41829c:	sub    rsp,0x128
  4182a3:	mov    r10d,DWORD PTR [r8+0x18]
  4182a7:	mov    rsi,QWORD PTR [r8+0x40]
  4182ab:	mov    r15,rcx
  4182ae:	mov    rbx,rdx
  4182b1:	mov    rdi,r8
  4182b4:	test   r10d,r10d
  4182b7:	je     0x418724
  4182bd:	mov    rax,QWORD PTR [r8+0x10]
  4182c1:	mov    rbp,QWORD PTR [r8+0x48]
  4182c5:	mov    r12,QWORD PTR [rax+0x8]
  4182c9:	mov    r9d,DWORD PTR [r12+0x80]
  4182d1:	test   r9d,r9d
  4182d4:	jne    0x4182e8
  4182d6:	mov    rax,QWORD PTR [rdi+0x48]
  4182da:	mov    eax,DWORD PTR [rax+0x80]
  4182e0:	test   eax,eax
  4182e2:	jne    0x418ad3
  4182e8:	mov    eax,DWORD PTR [rbp+0xc]
  4182eb:	test   eax,eax
  4182ed:	jne    0x418734
  4182f3:	mov    rax,QWORD PTR [rip+0x25676]        # 0x43d970
  4182fa:	cmp    DWORD PTR [rax],0xff
  418300:	je     0x418b29
  418306:	cmp    QWORD PTR [rbp+0x10],0x0
  41830b:	je     0x418c99
  418311:	xor    r8d,r8d
  418314:	mov    edx,0x8
  418319:	mov    rcx,rbx
  41831c:	call   0x422428
  418321:	test   rax,rax
  418324:	je     0x418d70
  41832a:	mov    edx,DWORD PTR [rax]
  41832c:	mov    DWORD PTR [rdi+0x1b0],edx
  418332:	movzx  edx,BYTE PTR [rax+0x4]
  418336:	mov    DWORD PTR [rdi+0x1b4],edx
  41833c:	cmp    BYTE PTR [rax+0x5],0x0
  418340:	jne    0x418b4b
  418346:	mov    QWORD PTR [rdi+0x1b8],0xffffffffffffffff
  418351:	movzx  edx,BYTE PTR [rax+0x5]
  418355:	cmp    edx,0x1
  418358:	jle    0x418cdd
  41835e:	mov    rdx,QWORD PTR [rax+0x10]
  418362:	mov    QWORD PTR [rdi+0x1c0],rdx
  418369:	movzx  edx,BYTE PTR [rax+0x5]
  41836d:	cmp    edx,0x2
  418370:	jle    0x418cb5
  418376:	mov    rdx,QWORD PTR [rax+0x18]
  41837a:	mov    QWORD PTR [rdi+0x1c8],rdx
  418381:	movzx  edx,BYTE PTR [rax+0x5]
  418385:	cmp    edx,0x3
  418388:	jle    0x418ccd
  41838e:	mov    rax,QWORD PTR [rax+0x20]
  418392:	mov    QWORD PTR [rdi+0x1d0],rax
  418399:	test   rsi,rsi
  41839c:	je     0x418760
  4183a2:	mov    rcx,rbx
  4183a5:	lea    r13,[rsp+0xd8]
  4183ad:	lea    r12,[rsp+0xe0]
  4183b5:	call   0x422410
  4183ba:	jmp    0x418538
  4183bf:	nop
  4183c0:	mov    rax,QWORD PTR [rbx+0x18]
  4183c4:	cmp    QWORD PTR [rsp+0xd8],rax
  4183cc:	je     0x41849c
  4183d2:	cmp    QWORD PTR [rsp+0x100],0x0
  4183db:	je     0x41849c
  4183e1:	mov    eax,DWORD PTR [rsp+0xe0]
  4183e8:	lea    ecx,[rax+0x20]
  4183eb:	movsxd rcx,ecx
  4183ee:	call   0x422678
  4183f3:	test   rax,rax
  4183f6:	je     0x418810
  4183fc:	movsxd r14,DWORD PTR [rsp+0xe0]
  418404:	mov    rdx,QWORD PTR [rsp+0xd8]
  41840c:	mov    rcx,rax
  41840f:	mov    r8,r14
  418412:	call   0x42fb40
  418417:	lea    r8,[rax+r14*1]
  41841b:	mov    QWORD PTR [rsp+0xd8],rax
  418423:	mov    QWORD PTR [rsp+0xc0],0x0
  41842f:	mov    QWORD PTR [r8],0x0
  418436:	mov    QWORD PTR [r8+0x8],0x0
  41843e:	mov    QWORD PTR [r8+0x10],0x0
  418446:	mov    QWORD PTR [r8+0x18],0x0
  41844e:	mov    rcx,rbx
  418451:	mov    QWORD PTR [rbx+0x30],0x0
  418459:	mov    DWORD PTR [rbx+0x38],0x0
  418460:	call   0x422448
  418465:	mov    edx,DWORD PTR [rsp+0xe0]
  41846c:	mov    rcx,QWORD PTR [rsp+0xd8]
  418474:	lea    r8,[rip+0xa3cd]        # 0x422848
  41847b:	xor    r9d,r9d
  41847e:	mov    DWORD PTR [rsp+0x20],0x0
  418486:	call   0x422850
  41848b:	test   rax,rax
  41848e:	mov    QWORD PTR [rsp+0xc0],rax
  418496:	je     0x41871a
  41849c:	mov    rax,QWORD PTR [rsp+0xc0]
  4184a4:	mov    rsi,QWORD PTR [rsi+0x18]
  4184a8:	mov    QWORD PTR [rbx],rax
  4184ab:	mov    rax,QWORD PTR [rsp+0xc8]
  4184b3:	test   rsi,rsi
  4184b6:	mov    QWORD PTR [rbx+0x8],rax
  4184ba:	mov    rax,QWORD PTR [rsp+0xd0]
  4184c2:	mov    QWORD PTR [rbx+0x10],rax
  4184c6:	mov    rax,QWORD PTR [rsp+0xd8]
  4184ce:	mov    QWORD PTR [rbx+0x18],rax
  4184d2:	mov    rax,QWORD PTR [rsp+0xe0]
  4184da:	mov    QWORD PTR [rbx+0x20],rax
  4184de:	mov    rax,QWORD PTR [rsp+0xe8]
  4184e6:	mov    QWORD PTR [rbx+0x28],rax
  4184ea:	mov    rax,QWORD PTR [rsp+0xf0]
  4184f2:	mov    QWORD PTR [rbx+0x30],rax
  4184f6:	mov    rax,QWORD PTR [rsp+0xf8]
  4184fe:	mov    QWORD PTR [rbx+0x38],rax
  418502:	mov    rax,QWORD PTR [rsp+0x100]
  41850a:	mov    QWORD PTR [rbx+0x40],rax
  41850e:	mov    rax,QWORD PTR [rsp+0x108]
  418516:	mov    QWORD PTR [rbx+0x48],rax
  41851a:	mov    rax,QWORD PTR [rsp+0x110]
  418522:	mov    QWORD PTR [rbx+0x50],rax
  418526:	mov    rax,QWORD PTR [rsp+0x118]
  41852e:	mov    QWORD PTR [rbx+0x58],rax
  418532:	je     0x418760
  418538:	mov    rax,QWORD PTR [rbx]
  41853b:	mov    rcx,QWORD PTR [rdi+0x148]
  418542:	xor    r9d,r9d
  418545:	xor    r8d,r8d
  418548:	mov    QWORD PTR [rsp+0xc0],rax
  418550:	mov    rax,QWORD PTR [rbx+0x8]
  418554:	mov    QWORD PTR [rsp+0xc8],rax
  41855c:	mov    rax,QWORD PTR [rbx+0x10]
  418560:	mov    QWORD PTR [rsp+0xd0],rax
  418568:	mov    rax,QWORD PTR [rbx+0x18]
  41856c:	mov    QWORD PTR [rsp+0xd8],rax
  418574:	mov    rax,QWORD PTR [rbx+0x20]
  418578:	mov    QWORD PTR [rsp+0xe0],rax
  418580:	mov    rax,QWORD PTR [rbx+0x28]
  418584:	mov    QWORD PTR [rsp+0xe8],rax
  41858c:	mov    rax,QWORD PTR [rbx+0x30]
  418590:	mov    QWORD PTR [rsp+0xf0],rax
  418598:	mov    rax,QWORD PTR [rbx+0x38]
  41859c:	mov    QWORD PTR [rsp+0xf8],rax
  4185a4:	mov    rax,QWORD PTR [rbx+0x40]
  4185a8:	mov    QWORD PTR [rsp+0x100],rax
  4185b0:	mov    rax,QWORD PTR [rbx+0x48]
  4185b4:	mov    QWORD PTR [rsp+0x108],rax
  4185bc:	mov    rax,QWORD PTR [rbx+0x50]
  4185c0:	mov    QWORD PTR [rsp+0x110],rax
  4185c8:	mov    rax,QWORD PTR [rbx+0x58]
  4185cc:	mov    QWORD PTR [rsp+0x118],rax
  4185d4:	mov    rax,QWORD PTR [rsi+0x8]
  4185d8:	mov    rdx,QWORD PTR [rax]
  4185db:	call   0x422818
  4185e0:	mov    edx,DWORD PTR [rbx+0x28]
  4185e3:	mov    r9d,DWORD PTR [rbx+0x20]
  4185e7:	mov    rcx,QWORD PTR [rbx+0x18]
  4185eb:	and    edx,0x1
  4185ee:	test   rax,rax
  4185f1:	je     0x418801
  4185f7:	mov    r8,QWORD PTR [rax+0x8]
  4185fb:	mov    DWORD PTR [rsp+0x38],edx
  4185ff:	mov    DWORD PTR [rsp+0x30],r9d
  418604:	mov    rdx,rbp
  418607:	mov    QWORD PTR [rsp+0x28],rcx
  41860c:	mov    QWORD PTR [rsp+0x20],r12
  418611:	mov    r9,r13
  418614:	mov    rcx,rsi
  418617:	call   0x422490
  41861c:	cmp    eax,0x0
  41861f:	je     0x4183c0
  418625:	jg     0x41844e
  41862b:	mov    rdx,QWORD PTR [rbx]
  41862e:	mov    QWORD PTR [rsp+0xc0],rdx
  418636:	mov    rdx,QWORD PTR [rbx+0x8]
  41863a:	mov    QWORD PTR [rsp+0xc8],rdx
  418642:	mov    rdx,QWORD PTR [rbx+0x10]
  418646:	mov    QWORD PTR [rsp+0xd0],rdx
  41864e:	mov    rdx,QWORD PTR [rbx+0x18]
  418652:	mov    QWORD PTR [rsp+0xd8],rdx
  41865a:	mov    rdx,QWORD PTR [rbx+0x20]
  41865e:	mov    QWORD PTR [rsp+0xe0],rdx
  418666:	mov    rdx,QWORD PTR [rbx+0x28]
  41866a:	mov    QWORD PTR [rsp+0xe8],rdx
  418672:	mov    rdx,QWORD PTR [rbx+0x30]
  418676:	mov    QWORD PTR [rsp+0xf0],rdx
  41867e:	mov    rdx,QWORD PTR [rbx+0x38]
  418682:	mov    QWORD PTR [rsp+0xf8],rdx
  41868a:	mov    rdx,QWORD PTR [rbx+0x40]
  41868e:	mov    QWORD PTR [rsp+0x100],rdx
  418696:	mov    rdx,QWORD PTR [rbx+0x48]
  41869a:	mov    QWORD PTR [rsp+0x108],rdx
  4186a2:	mov    rdx,QWORD PTR [rbx+0x50]
  4186a6:	mov    QWORD PTR [rsp+0x110],rdx
  4186ae:	mov    rdx,QWORD PTR [rbx+0x58]
  4186b2:	mov    QWORD PTR [rsp+0x118],rdx
  4186ba:	mov    rcx,QWORD PTR [rbp+0x10]
  4186be:	lea    rdx,[rip+0x22466]        # 0x43ab2b
  4186c5:	test   rcx,rcx
  4186c8:	je     0x4186cd
  4186ca:	mov    rdx,QWORD PTR [rcx]
  4186cd:	mov    rcx,QWORD PTR [rsi+0x8]
  4186d1:	mov    QWORD PTR [rsp+0x28],rdx
  4186d6:	lea    r8,[rip+0x22453]        # 0x43ab30
  4186dd:	mov    edx,DWORD PTR [rbx+0x24]
  4186e0:	mov    DWORD PTR [rsp+0x5c],eax
  4186e4:	mov    DWORD PTR [rsp+0x20],edx
  4186e8:	mov    r9,QWORD PTR [rcx]
  4186eb:	mov    edx,0x10
  4186f0:	xor    ecx,ecx
  4186f2:	call   0x4226c0
  4186f7:	mov    eax,DWORD PTR [rsp+0x5c]
  4186fb:	lea    rcx,[rip+0x217d1]        # 0x439ed3
  418702:	mov    edx,eax
  418704:	call   0x4054b0
  418709:	mov    rax,QWORD PTR [rip+0x25070]        # 0x43d780
  418710:	mov    ecx,DWORD PTR [rax]
  418712:	test   ecx,ecx
  418714:	je     0x41849c
  41871a:	mov    ecx,0x1
  41871f:	call   0x401cb0
  418724:	mov    rax,QWORD PTR [r8+0x10]
  418728:	mov    rbp,QWORD PTR [rax+0x8]
  41872c:	mov    r12,rbp
  41872f:	jmp    0x4182c9
  418734:	cmp    eax,0x1
  418737:	je     0x41881a
  41873d:	movsxd rdx,DWORD PTR [rdi+0x1c]
  418741:	cmp    rdx,QWORD PTR [rdi+0x58]
  418745:	mov    rax,rdx
  418748:	jge    0x4187e4
  41874e:	add    eax,0x1
  418751:	test   rsi,rsi
  418754:	mov    DWORD PTR [rdi+0x1c],eax
  418757:	jne    0x4183a2
  41875d:	nop    DWORD PTR [rax]
  418760:	mov    rax,QWORD PTR [r15+0x10]
  418764:	test   BYTE PTR [rax+0x2c],0x80
  418768:	jne    0x418844
  41876e:	mov    r9,QWORD PTR [rbx+0x10]
  418772:	movabs rsi,0x8000000000000000
  41877c:	cmp    r9,rsi
  41877f:	je     0x4187a0
  418781:	mov    rax,QWORD PTR [rbx+0x8]
  418785:	cmp    rax,rsi
  418788:	je     0x418793
  41878a:	cmp    r9,rax
  41878d:	jg     0x418b5b
  418793:	mov    eax,DWORD PTR [rbp+0xc]
  418796:	cmp    eax,0x1
  418799:	jbe    0x418d61
  41879f:	nop
  4187a0:	movsxd rax,DWORD PTR [rbx+0x20]
  4187a4:	mov    QWORD PTR [rdi+0x38],r9
  4187a8:	add    QWORD PTR [rdi+0x190],rax
  4187af:	add    QWORD PTR [rdi+0x198],0x1
  4187b7:	mov    rsi,rax
  4187ba:	mov    eax,DWORD PTR [rdi+0x4]
  4187bd:	mov    DWORD PTR [rbx+0x24],eax
  4187c0:	mov    rax,QWORD PTR [rip+0x24f39]        # 0x43d700
  4187c7:	mov    eax,DWORD PTR [rax]
  4187c9:	test   eax,eax
  4187cb:	jne    0x41884d
  4187d1:	mov    rdx,rbx
  4187d4:	mov    rcx,r15
  4187d7:	call   0x4222a0
  4187dc:	test   eax,eax
  4187de:	js     0x418a7b
  4187e4:	mov    rcx,rbx
  4187e7:	call   0x422448
  4187ec:	nop
  4187ed:	add    rsp,0x128
  4187f4:	pop    rbx
  4187f5:	pop    rsi
  4187f6:	pop    rdi
  4187f7:	pop    rbp
  4187f8:	pop    r12
  4187fa:	pop    r13
  4187fc:	pop    r14
  4187fe:	pop    r15
  418800:	ret    
  418801:	xor    r8d,r8d
  418804:	jmp    0x4185fb
  418809:	nop    DWORD PTR [rax+0x0]
  418810:	mov    eax,0xfffffff4
  418815:	jmp    0x41862b
  41881a:	mov    rax,QWORD PTR [rip+0x24e5f]        # 0x43d680
  418821:	mov    r8d,DWORD PTR [rax]
  418824:	test   r8d,r8d
  418827:	jns    0x41873d
  41882d:	movabs rax,0x8000000000000000
  418837:	mov    QWORD PTR [rbx+0x10],rax
  41883b:	mov    QWORD PTR [rbx+0x8],rax
  41883f:	jmp    0x41873d
  418844:	mov    r9,QWORD PTR [rbx+0x10]
  418848:	jmp    0x4187a0
  41884d:	movabs rdx,0x8000000000000000
  418857:	mov    rax,QWORD PTR [rdi+0x10]
  41885b:	mov    QWORD PTR [rsp+0xc0],0x0
  418867:	cmp    r9,rdx
  41886a:	mov    QWORD PTR [rsp+0xc8],0x0
  418876:	mov    QWORD PTR [rsp+0xd0],0x0
  418882:	mov    QWORD PTR [rsp+0xd8],0x0
  41888e:	je     0x418ced
  418894:	pxor   xmm0,xmm0
  418898:	lea    r12,[rsp+0xc0]
  4188a0:	lea    r8,[rip+0x2201f]        # 0x43a8c6
  4188a7:	pxor   xmm1,xmm1
  4188ab:	mov    edx,0x20
  4188b0:	mov    rcx,r12
  4188b3:	cvtsi2sd xmm0,DWORD PTR [rax+0x30]
  4188b8:	cvtsi2sd xmm1,DWORD PTR [rax+0x34]
  4188bd:	divsd  xmm0,xmm1
  4188c1:	movapd xmm1,xmm0
  4188c5:	pxor   xmm0,xmm0
  4188c9:	cvtsi2sd xmm0,r9
  4188ce:	mulsd  xmm0,xmm1
  4188d2:	movapd xmm3,xmm0
  4188d6:	movq   r9,xmm0
  4188db:	call   0x414ae0
  4188e0:	mov    r9,QWORD PTR [rbx+0x10]
  4188e4:	movabs rax,0x8000000000000000
  4188ee:	mov    QWORD PTR [rsp+0xa0],0x0
  4188fa:	mov    QWORD PTR [rsp+0xa8],0x0
  418906:	mov    QWORD PTR [rsp+0xb0],0x0
  418912:	lea    r13,[rsp+0xa0]
  41891a:	mov    QWORD PTR [rsp+0xb8],0x0
  418926:	cmp    r9,rax
  418929:	je     0x418d48
  41892f:	lea    r8,[rip+0x21f95]        # 0x43a8cb
  418936:	mov    edx,0x20
  41893b:	mov    rcx,r13
  41893e:	call   0x414ae0
  418943:	mov    rax,QWORD PTR [rbx+0x8]
  418947:	movabs rcx,0x8000000000000000
  418951:	mov    rdx,QWORD PTR [rdi+0x10]
  418955:	mov    QWORD PTR [rsp+0x80],0x0
  418961:	mov    QWORD PTR [rsp+0x88],0x0
  41896d:	mov    QWORD PTR [rsp+0x90],0x0
  418979:	mov    QWORD PTR [rsp+0x98],0x0
  418985:	cmp    rax,rcx
  418988:	je     0x418d27
  41898e:	pxor   xmm0,xmm0
  418992:	lea    r14,[rsp+0x80]
  41899a:	lea    r8,[rip+0x21f25]        # 0x43a8c6
  4189a1:	pxor   xmm1,xmm1
  4189a5:	mov    rcx,r14
  4189a8:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  4189ad:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  4189b2:	divsd  xmm0,xmm1
  4189b6:	mov    edx,0x20
  4189bb:	movapd xmm1,xmm0
  4189bf:	pxor   xmm0,xmm0
  4189c3:	cvtsi2sd xmm0,rax
  4189c8:	mulsd  xmm0,xmm1
  4189cc:	movapd xmm3,xmm0
  4189d0:	movq   r9,xmm0
  4189d5:	call   0x414ae0
  4189da:	mov    r9,QWORD PTR [rbx+0x8]
  4189de:	movabs rax,0x8000000000000000
  4189e8:	mov    QWORD PTR [rsp+0x60],0x0
  4189f1:	mov    QWORD PTR [rsp+0x68],0x0
  4189fa:	mov    QWORD PTR [rsp+0x70],0x0
  418a03:	lea    rbp,[rsp+0x60]
  418a08:	mov    QWORD PTR [rsp+0x78],0x0
  418a11:	cmp    r9,rax
  418a14:	je     0x418d0e
  418a1a:	lea    r8,[rip+0x21eaa]        # 0x43a8cb
  418a21:	mov    edx,0x20
  418a26:	mov    rcx,rbp
  418a29:	call   0x414ae0
  418a2e:	mov    rax,QWORD PTR [rdi+0x48]
  418a32:	mov    ecx,DWORD PTR [rax+0xc]
  418a35:	call   0x422718
  418a3a:	lea    r8,[rip+0x2221f]        # 0x43ac60
  418a41:	xor    ecx,ecx
  418a43:	mov    r9,rax
  418a46:	mov    edx,0x20
  418a4b:	mov    DWORD PTR [rsp+0x40],esi
  418a4f:	mov    QWORD PTR [rsp+0x38],r12
  418a54:	mov    QWORD PTR [rsp+0x30],r13
  418a59:	mov    QWORD PTR [rsp+0x28],r14
  418a5e:	mov    QWORD PTR [rsp+0x20],rbp
  418a63:	call   0x4226c0
  418a68:	mov    rdx,rbx
  418a6b:	mov    rcx,r15
  418a6e:	call   0x4222a0
  418a73:	test   eax,eax
  418a75:	jns    0x4187e4
  418a7b:	lea    rcx,[rip+0x2222e]        # 0x43acb0
  418a82:	mov    edx,eax
  418a84:	call   0x4054b0
  418a89:	mov    edx,DWORD PTR [rip+0x29641]        # 0x4420d0
  418a8f:	mov    DWORD PTR [rip+0x2978f],0x1        # 0x442228
  418a99:	test   edx,edx
  418a9b:	jle    0x4187e4
  418aa1:	mov    rax,QWORD PTR [rip+0x29630]        # 0x4420d8
  418aa8:	sub    edx,0x1
  418aab:	lea    r8,[rax+rdx*8+0x8]
  418ab0:	mov    rdx,QWORD PTR [rax]
  418ab3:	xor    ecx,ecx
  418ab5:	cmp    rdi,rdx
  418ab8:	sete   cl
  418abb:	add    rax,0x8
  418abf:	lea    ecx,[rcx+rcx*1+0x1]
  418ac3:	or     DWORD PTR [rdx+0x158],ecx
  418ac9:	cmp    rax,r8
  418acc:	jne    0x418ab0
  418ace:	jmp    0x4187e4
  418ad3:	add    eax,0x20
  418ad6:	movsxd rcx,eax
  418ad9:	call   0x422670
  418ade:	mov    QWORD PTR [r12+0x78],rax
  418ae3:	mov    rax,QWORD PTR [rdi+0x10]
  418ae7:	mov    rax,QWORD PTR [rax+0x8]
  418aeb:	mov    rcx,QWORD PTR [rax+0x78]
  418aef:	test   rcx,rcx
  418af2:	je     0x4182e8
  418af8:	mov    rax,QWORD PTR [rdi+0x48]
  418afc:	movsxd r8,DWORD PTR [rax+0x80]
  418b03:	mov    rdx,QWORD PTR [rax+0x78]
  418b07:	call   0x42fb40
  418b0c:	mov    rax,QWORD PTR [rdi+0x48]
  418b10:	mov    edx,DWORD PTR [rax+0x80]
  418b16:	mov    rax,QWORD PTR [rdi+0x10]
  418b1a:	mov    rax,QWORD PTR [rax+0x8]
  418b1e:	mov    DWORD PTR [rax+0x80],edx
  418b24:	jmp    0x4182e8
  418b29:	cmp    QWORD PTR [rbp+0x10],0x0
  418b2e:	movabs rax,0x8000000000000000
  418b38:	mov    QWORD PTR [rbx+0x10],rax
  418b3c:	mov    QWORD PTR [rbx+0x8],rax
  418b40:	jne    0x418311
  418b46:	jmp    0x418c99
  418b4b:	mov    rdx,QWORD PTR [rax+0x8]
  418b4f:	mov    QWORD PTR [rdi+0x1b8],rdx
  418b56:	jmp    0x418351
  418b5b:	mov    rdx,QWORD PTR [rdi+0x10]
  418b5f:	lea    r8,[rip+0x2200a]        # 0x43ab70
  418b66:	mov    rcx,r15
  418b69:	mov    edx,DWORD PTR [rdx]
  418b6b:	mov    QWORD PTR [rsp+0x20],rax
  418b70:	mov    DWORD PTR [rsp+0x30],edx
  418b74:	mov    edx,DWORD PTR [rdi]
  418b76:	mov    DWORD PTR [rsp+0x28],edx
  418b7a:	mov    edx,0x18
  418b7f:	call   0x4226c0
  418b84:	mov    rdx,QWORD PTR [rbx+0x8]
  418b88:	mov    rax,QWORD PTR [rbx+0x10]
  418b8c:	mov    rcx,QWORD PTR [rdi+0x38]
  418b90:	cmp    rax,rdx
  418b93:	lea    r9,[rdx+rax*1]
  418b97:	mov    r10,rdx
  418b9a:	lea    r8,[rcx+0x1]
  418b9e:	cmovle r10,rax
  418ba2:	lea    r9,[rcx+r9*1+0x1]
  418ba7:	cmp    r10,r8
  418baa:	cmovg  r10,r8
  418bae:	sub    r9,r10
  418bb1:	cmp    rax,rdx
  418bb4:	cmovl  rax,rdx
  418bb8:	cmp    rax,r8
  418bbb:	cmovl  rax,r8
  418bbf:	sub    r9,rax
  418bc2:	mov    eax,DWORD PTR [rbp+0xc]
  418bc5:	mov    QWORD PTR [rbx+0x10],r9
  418bc9:	mov    QWORD PTR [rbx+0x8],r9
  418bcd:	cmp    eax,0x1
  418bd0:	ja     0x4187a0
  418bd6:	cmp    r9,rsi
  418bd9:	je     0x4187a0
  418bdf:	movabs rdx,0x8000000000000000
  418be9:	cmp    rcx,rdx
  418bec:	je     0x4187a0
  418bf2:	mov    rdx,QWORD PTR [r15+0x10]
  418bf6:	mov    esi,DWORD PTR [rdx+0x2c]
  418bf9:	shr    esi,0x11
  418bfc:	xor    esi,0x1
  418bff:	and    esi,0x1
  418c02:	add    rsi,rcx
  418c05:	cmp    r9,rsi
  418c08:	jge    0x4187a0
  418c0e:	mov    rdx,rsi
  418c11:	sub    rdx,r9
  418c14:	cmp    rdx,0x2
  418c18:	jg     0x418db5
  418c1e:	test   al,0x1
  418c20:	mov    ebp,0x30
  418c25:	je     0x418db5
  418c2b:	mov    rax,QWORD PTR [rdi+0x10]
  418c2f:	mov    QWORD PTR [rsp+0x30],r9
  418c34:	lea    r8,[rip+0x21f7d]        # 0x43abb8
  418c3b:	mov    QWORD PTR [rsp+0x28],rcx
  418c40:	mov    r9d,DWORD PTR [rdi]
  418c43:	mov    edx,ebp
  418c45:	mov    rcx,r15
  418c48:	mov    eax,DWORD PTR [rax]
  418c4a:	mov    DWORD PTR [rsp+0x20],eax
  418c4e:	call   0x4226c0
  418c53:	mov    rax,QWORD PTR [rip+0x24b26]        # 0x43d780
  418c5a:	mov    edx,DWORD PTR [rax]
  418c5c:	test   edx,edx
  418c5e:	jne    0x418dbf
  418c64:	lea    r8,[rip+0x21fa5]        # 0x43ac10
  418c6b:	mov    r9,rsi
  418c6e:	mov    edx,ebp
  418c70:	mov    rcx,r15
  418c73:	call   0x4226c0
  418c78:	mov    rax,QWORD PTR [rbx+0x8]
  418c7c:	cmp    rax,QWORD PTR [rbx+0x10]
  418c80:	jl     0x418c8d
  418c82:	cmp    rsi,rax
  418c85:	cmovge rax,rsi
  418c89:	mov    QWORD PTR [rbx+0x8],rax
  418c8d:	mov    QWORD PTR [rbx+0x10],rsi
  418c91:	mov    r9,rsi
  418c94:	jmp    0x4187a0
  418c99:	movsxd rdx,DWORD PTR [rdi+0x1c]
  418c9d:	cmp    QWORD PTR [rdi+0x58],rdx
  418ca1:	mov    rax,rdx
  418ca4:	jle    0x4187e4
  418caa:	add    eax,0x1
  418cad:	mov    DWORD PTR [rdi+0x1c],eax
  418cb0:	jmp    0x418311
  418cb5:	mov    QWORD PTR [rdi+0x1c8],0xffffffffffffffff
  418cc0:	movzx  edx,BYTE PTR [rax+0x5]
  418cc4:	cmp    edx,0x3
  418cc7:	jg     0x41838e
  418ccd:	mov    QWORD PTR [rdi+0x1d0],0xffffffffffffffff
  418cd8:	jmp    0x418399
  418cdd:	mov    QWORD PTR [rdi+0x1c0],0xffffffffffffffff
  418ce8:	jmp    0x418369
  418ced:	lea    r12,[rsp+0xc0]
  418cf5:	lea    r8,[rip+0x21bc4]        # 0x43a8c0
  418cfc:	mov    edx,0x20
  418d01:	mov    rcx,r12
  418d04:	call   0x414ae0
  418d09:	jmp    0x4188e0
  418d0e:	lea    r8,[rip+0x21bab]        # 0x43a8c0
  418d15:	mov    edx,0x20
  418d1a:	mov    rcx,rbp
  418d1d:	call   0x414ae0
  418d22:	jmp    0x418a2e
  418d27:	lea    r14,[rsp+0x80]
  418d2f:	lea    r8,[rip+0x21b8a]        # 0x43a8c0
  418d36:	mov    edx,0x20
  418d3b:	mov    rcx,r14
  418d3e:	call   0x414ae0
  418d43:	jmp    0x4189da
  418d48:	lea    r8,[rip+0x21b71]        # 0x43a8c0
  418d4f:	mov    edx,0x20
  418d54:	mov    rcx,r13
  418d57:	call   0x414ae0
  418d5c:	jmp    0x418943
  418d61:	mov    rcx,QWORD PTR [rdi+0x38]
  418d65:	jmp    0x418bdf
  418d6a:	nop    WORD PTR [rax+rax*1+0x0]
  418d70:	mov    DWORD PTR [rdi+0x1b0],0xffffffff
  418d7a:	mov    DWORD PTR [rdi+0x1b4],0x0
  418d84:	mov    QWORD PTR [rdi+0x1b8],0xffffffffffffffff
  418d8f:	mov    QWORD PTR [rdi+0x1c0],0xffffffffffffffff
  418d9a:	mov    QWORD PTR [rdi+0x1c8],0xffffffffffffffff
  418da5:	mov    QWORD PTR [rdi+0x1d0],0xffffffffffffffff
  418db0:	jmp    0x418399
  418db5:	mov    ebp,0x18
  418dba:	jmp    0x418c2b
  418dbf:	lea    r8,[rip+0x21e3d]        # 0x43ac03
  418dc6:	mov    edx,0x8
  418dcb:	xor    ecx,ecx
  418dcd:	call   0x4226c0
  418dd2:	jmp    0x41871a
  418dd7:	nop    WORD PTR [rax+rax*1+0x0]
  418de0:	push   r15
  418de2:	push   r14
  418de4:	push   r13
  418de6:	push   r12
  418de8:	push   rbp
  418de9:	push   rdi
  418dea:	push   rsi
  418deb:	push   rbx
  418dec:	sub    rsp,0x108
  418df3:	lea    rax,[rsp+0x80]
  418dfb:	mov    rbx,rcx
  418dfe:	mov    rcx,QWORD PTR [rcx+0x20]
  418e02:	mov    r9,rdx
  418e05:	mov    rdi,rdx
  418e08:	mov    rsi,r8
  418e0b:	mov    rdx,rax
  418e0e:	mov    QWORD PTR [rsp+0x50],rax
  418e13:	call   0x4223c8
  418e18:	mov    r15d,eax
  418e1b:	shr    eax,0x1f
  418e1e:	mov    ebp,DWORD PTR [rsi]
  418e20:	test   al,al
  418e22:	jne    0x418e50
  418e24:	test   ebp,ebp
  418e26:	jne    0x418e50
  418e28:	mov    eax,DWORD PTR [rdi+0x20]
  418e2b:	test   eax,eax
  418e2d:	je     0x4192fc
  418e33:	mov    eax,r15d
  418e36:	add    rsp,0x108
  418e3d:	pop    rbx
  418e3e:	pop    rsi
  418e3f:	pop    rdi
  418e40:	pop    rbp
  418e41:	pop    r12
  418e43:	pop    r13
  418e45:	pop    r14
  418e47:	pop    r15
  418e49:	ret    
  418e4a:	nop    WORD PTR [rax+rax*1+0x0]
  418e50:	lea    rdx,[rip+0x293f9]        # 0x442250
  418e57:	mov    ecx,eax
  418e59:	and    ecx,0x1
  418e5c:	add    QWORD PTR [rdx+rcx*8],0x1
  418e61:	test   al,al
  418e63:	jne    0x4192e0
  418e69:	test   ebp,ebp
  418e6b:	je     0x418e28
  418e6d:	mov    r14d,DWORD PTR [rbx+0xc8]
  418e74:	test   r14d,r14d
  418e77:	jne    0x419360
  418e7d:	mov    rdi,QWORD PTR [rbx+0x108]
  418e84:	test   rdi,rdi
  418e87:	je     0x4190c7
  418e8d:	mov    rax,QWORD PTR [rbx+0x8]
  418e91:	mov    rbp,QWORD PTR [rsp+0x98]
  418e99:	movabs r12,0xf424000000000
  418ea3:	mov    rdx,r12
  418ea6:	or     rdx,0x1
  418eaa:	mov    rsi,QWORD PTR [rax+0x30]
  418eae:	mov    eax,DWORD PTR [rsp+0x84]
  418eb5:	mov    r8,rsi
  418eb8:	imul   rax,rax,0x3e8
  418ebf:	lea    rcx,[rbp+rax*1+0x0]
  418ec4:	call   0x422588
  418ec9:	mov    QWORD PTR [rsp+0x68],rax
  418ece:	mov    eax,DWORD PTR [rsp+0x88]
  418ed5:	mov    rdx,r12
  418ed8:	or     rdx,0x1
  418edc:	mov    r8,rsi
  418edf:	imul   rax,rax,0x3e8
  418ee6:	lea    rcx,[rbp+rax*1+0x0]
  418eeb:	call   0x422588
  418ef0:	mov    rcx,rdi
  418ef3:	mov    QWORD PTR [rsp+0x70],rax
  418ef8:	mov    esi,DWORD PTR [rsp+0x8c]
  418eff:	call   0x422778
  418f04:	mov    rcx,QWORD PTR [rbx+0x20]
  418f08:	mov    rax,QWORD PTR [rbx+0x108]
  418f0f:	mov    edx,DWORD PTR [rcx+0x94]
  418f15:	test   edx,edx
  418f17:	jne    0x418f1f
  418f19:	mov    edx,DWORD PTR [rbx+0x110]
  418f1f:	mov    DWORD PTR [rax+0x68],edx
  418f22:	mov    edx,DWORD PTR [rcx+0x98]
  418f28:	test   edx,edx
  418f2a:	jne    0x418f32
  418f2c:	mov    edx,DWORD PTR [rbx+0x114]
  418f32:	mov    DWORD PTR [rax+0x6c],edx
  418f35:	mov    DWORD PTR [rax+0x74],0x1e
  418f3c:	mov    edx,0x20
  418f41:	mov    rcx,rdi
  418f44:	call   0x4227a0
  418f49:	test   eax,eax
  418f4b:	js     0x419678
  418f51:	mov    r8d,DWORD PTR [rdi+0x6c]
  418f55:	mov    rcx,QWORD PTR [rdi]
  418f58:	xor    edx,edx
  418f5a:	imul   r8d,DWORD PTR [rdi+0x40]
  418f5f:	movsxd r8,r8d
  418f62:	call   0x42fb30
  418f67:	mov    rax,QWORD PTR [rdi]
  418f6a:	test   esi,esi
  418f6c:	mov    QWORD PTR [rsp+0x60],rax
  418f71:	mov    eax,DWORD PTR [rdi+0x40]
  418f74:	mov    DWORD PTR [rsp+0x58],eax
  418f78:	jle    0x419066
  418f7e:	lea    eax,[rsi-0x1]
  418f81:	movsxd rsi,DWORD PTR [rsp+0x58]
  418f86:	xor    ebp,ebp
  418f88:	lea    rax,[rax*8+0x8]
  418f90:	mov    r12,rax
  418f93:	mov    rax,QWORD PTR [rsp+0x90]
  418f9b:	mov    r11d,DWORD PTR [rdi+0x6c]
  418f9f:	mov    edx,DWORD PTR [rdi+0x68]
  418fa2:	mov    r10,QWORD PTR [rax+rbp*1]
  418fa6:	cmp    DWORD PTR [r10+0x78],0x1
  418fab:	jne    0x4194c0
  418fb1:	mov    r9d,DWORD PTR [r10]
  418fb4:	test   r9d,r9d
  418fb7:	js     0x419470
  418fbd:	mov    ecx,DWORD PTR [r10+0x8]
  418fc1:	mov    r8d,DWORD PTR [r10+0xc]
  418fc5:	lea    eax,[r9+rcx*1]
  418fc9:	cmp    edx,eax
  418fcb:	mov    eax,DWORD PTR [r10+0x4]
  418fcf:	jl     0x419480
  418fd5:	test   eax,eax
  418fd7:	js     0x419480
  418fdd:	lea    r13d,[rax+r8*1]
  418fe1:	cmp    r11d,r13d
  418fe4:	jl     0x419480
  418fea:	imul   eax,DWORD PTR [rsp+0x58]
  418fef:	mov    r11,QWORD PTR [r10+0x20]
  418ff3:	lea    r13d,[rax+r9*4]
  418ff7:	mov    r9,QWORD PTR [r10+0x18]
  418ffb:	movsxd r13,r13d
  418ffe:	add    r13,QWORD PTR [rsp+0x60]
  419003:	test   r8d,r8d
  419006:	jle    0x419059
  419008:	xor    r14d,r14d
  41900b:	nop    DWORD PTR [rax+rax*1+0x0]
  419010:	test   ecx,ecx
  419012:	mov    rax,r9
  419015:	mov    rdx,r13
  419018:	jle    0x419046
  41901a:	nop    WORD PTR [rax+rax*1+0x0]
  419020:	add    rax,0x1
  419024:	movzx  ecx,BYTE PTR [rax-0x1]
  419028:	add    rdx,0x4
  41902c:	mov    r8d,eax
  41902f:	sub    r8d,r9d
  419032:	mov    ecx,DWORD PTR [r11+rcx*4]
  419036:	mov    DWORD PTR [rdx-0x4],ecx
  419039:	mov    ecx,DWORD PTR [r10+0x8]
  41903d:	cmp    r8d,ecx
  419040:	jl     0x419020
  419042:	mov    r8d,DWORD PTR [r10+0xc]
  419046:	movsxd rax,DWORD PTR [r10+0x58]
  41904a:	add    r14d,0x1
  41904e:	add    r13,rsi
  419051:	add    r9,rax
  419054:	cmp    r14d,r8d
  419057:	jl     0x419010
  419059:	add    rbp,0x8
  41905d:	cmp    rbp,r12
  419060:	jne    0x418f93
  419066:	mov    r12d,DWORD PTR [rbx+0x128]
  41906d:	mov    rax,QWORD PTR [rsp+0x68]
  419072:	xor    edi,edi
  419074:	mov    rbp,QWORD PTR [rbx+0x108]
  41907b:	xor    esi,esi
  41907d:	test   r12d,r12d
  419080:	mov    QWORD PTR [rbp+0xc8],rax
  419087:	mov    QWORD PTR [rbx+0xf8],rax
  41908e:	jle    0x4190bb
  419090:	mov    rax,QWORD PTR [rbx+0x120]
  419097:	mov    r8d,0xc
  41909d:	mov    rdx,rbp
  4190a0:	add    esi,0x1
  4190a3:	mov    rax,QWORD PTR [rax+rdi*1]
  4190a7:	add    rdi,0x8
  4190ab:	mov    rcx,QWORD PTR [rax]
  4190ae:	call   0x422120
  4190b3:	cmp    esi,DWORD PTR [rbx+0x128]
  4190b9:	jl     0x419090
  4190bb:	mov    rax,QWORD PTR [rsp+0x70]
  4190c0:	mov    QWORD PTR [rbx+0x100],rax
  4190c7:	mov    r11d,DWORD PTR [rsp+0x8c]
  4190cf:	test   r11d,r11d
  4190d2:	je     0x4194ea
  4190d8:	mov    r8d,DWORD PTR [rip+0x28ff1]        # 0x4420d0
  4190df:	add    QWORD PTR [rbx+0x180],0x1
  4190e7:	test   r8d,r8d
  4190ea:	jle    0x4194ea
  4190f0:	lea    rax,[rsp+0xa0]
  4190f8:	xor    esi,esi
  4190fa:	movabs r14,0xf424000000000
  419104:	mov    DWORD PTR [rsp+0x7c],r15d
  419109:	mov    QWORD PTR [rsp+0x58],rax
  41910e:	jmp    0x419120
  419110:	lea    eax,[rsi+0x1]
  419113:	add    rsi,0x1
  419117:	cmp    eax,r8d
  41911a:	jge    0x4194e5
  419120:	mov    rax,QWORD PTR [rip+0x28fb1]        # 0x4420d8
  419127:	movsxd rcx,DWORD PTR [rbx]
  41912a:	mov    r15,QWORD PTR [rax+rsi*8]
  41912e:	mov    rax,QWORD PTR [rip+0x28f93]        # 0x4420c8
  419135:	movsxd rdx,DWORD PTR [r15]
  419138:	mov    rdx,QWORD PTR [rax+rdx*8]
  41913c:	mov    rax,QWORD PTR [rip+0x28fa5]        # 0x4420e8
  419143:	mov    rcx,QWORD PTR [rax+rcx*8]
  419147:	mov    rax,QWORD PTR [rbx+0x8]
  41914b:	mov    eax,DWORD PTR [rax]
  41914d:	add    eax,DWORD PTR [rcx+0x10]
  419150:	cmp    DWORD PTR [r15+0x8],eax
  419154:	jne    0x419110
  419156:	mov    r10d,DWORD PTR [r15+0x158]
  41915d:	test   r10d,r10d
  419160:	jne    0x419110
  419162:	mov    rax,QWORD PTR [rdx+0x20]
  419166:	movabs rcx,0x8000000000000000
  419170:	cmp    rax,rcx
  419173:	je     0x41917b
  419175:	cmp    rax,QWORD PTR [rbx+0x60]
  419179:	jg     0x419110
  41917b:	mov    ecx,DWORD PTR [r15+0x18]
  41917f:	test   ecx,ecx
  419181:	je     0x419110
  419183:	mov    rcx,QWORD PTR [r15+0x50]
  419187:	cmp    DWORD PTR [rcx+0x10],0x3
  41918b:	jne    0x419110
  41918d:	mov    r13,QWORD PTR [rsp+0x98]
  419195:	mov    rdi,QWORD PTR [rdx]
  419198:	movabs rcx,0x8000000000000000
  4191a2:	cmp    r13,rcx
  4191a5:	mov    QWORD PTR [rsp+0x60],rdi
  4191aa:	je     0x4196ab
  4191b0:	cmp    QWORD PTR [rip+0x29088],0x0        # 0x442240
  4191b8:	mov    rbp,rdx
  4191bb:	mov    r12,QWORD PTR [r15+0x48]
  4191bf:	mov    rdx,r13
  4191c2:	je     0x4196e0
  4191c8:	xor    edi,edi
  4191ca:	cmp    DWORD PTR [r12+0x38],0x17001
  4191d3:	movabs rcx,0x8000000000000000
  4191dd:	mov    QWORD PTR [rsp+0x150],rbx
  4191e5:	mov    QWORD PTR [rsp+0x70],rsi
  4191ea:	mov    rbx,rbp
  4191ed:	sete   dil
  4191f1:	add    edi,0x1
  4191f4:	mov    DWORD PTR [rsp+0x68],edi
  4191f8:	mov    rdi,rdx
  4191fb:	sub    rdx,rax
  4191fe:	cmp    rax,rcx
  419201:	cmove  rdx,rdi
  419205:	xor    edi,edi
  419207:	mov    r13,rdx
  41920a:	nop    WORD PTR [rax+rax*1+0x0]
  419210:	mov    r8,QWORD PTR [r12+0x84]
  419218:	mov    rdx,r14
  41921b:	mov    rcx,r13
  41921e:	or     rdx,0x1
  419222:	mov    ebp,DWORD PTR [rsp+0x8c]
  419229:	call   0x422588
  41922e:	mov    r8,QWORD PTR [rbx+0x18]
  419232:	movabs rdx,0x7fffffffffffffff
  41923c:	mov    QWORD PTR [r15+0x28],rax
  419240:	cmp    r8,rdx
  419243:	je     0x419540
  419249:	mov    rdx,QWORD PTR [r15+0x48]
  41924d:	sub    rax,QWORD PTR [r15+0x30]
  419251:	mov    r9,r14
  419254:	or     r9,0x1
  419258:	mov    rdx,QWORD PTR [rdx+0x84]
  41925f:	mov    rcx,rax
  419262:	call   0x422838
  419267:	test   eax,eax
  419269:	js     0x419540
  41926f:	movsxd rdx,DWORD PTR [r15]
  419272:	mov    rax,QWORD PTR [rip+0x28e4f]        # 0x4420c8
  419279:	mov    rsi,QWORD PTR [rsp+0x70]
  41927e:	mov    rbx,QWORD PTR [rsp+0x150]
  419286:	mov    rdi,QWORD PTR [rax+rdx*8]
  41928a:	or     DWORD PTR [r15+0x158],0x1
  419292:	mov    r8d,DWORD PTR [rdi+0x30]
  419296:	test   r8d,r8d
  419299:	je     0x4192d0
  41929b:	mov    rax,QWORD PTR [r15+0x48]
  41929f:	mov    rcx,QWORD PTR [r15+0x28]
  4192a3:	movabs r8,0xf424000000000
  4192ad:	sub    rcx,QWORD PTR [r15+0x30]
  4192b1:	or     r8,0x1
  4192b5:	mov    rdx,QWORD PTR [rax+0x84]
  4192bc:	call   0x422588
  4192c1:	mov    rdx,QWORD PTR [rdi+0x18]
  4192c5:	cmp    rax,rdx
  4192c8:	cmovg  rax,rdx
  4192cc:	mov    QWORD PTR [rdi+0x18],rax
  4192d0:	mov    r8d,DWORD PTR [rip+0x28df9]        # 0x4420d0
  4192d7:	jmp    0x419110
  4192dc:	nop    DWORD PTR [rax+0x0]
  4192e0:	mov    rax,QWORD PTR [rip+0x24499]        # 0x43d780
  4192e7:	mov    eax,DWORD PTR [rax]
  4192e9:	test   eax,eax
  4192eb:	jne    0x4196d1
  4192f1:	mov    eax,DWORD PTR [rdi+0x20]
  4192f4:	test   eax,eax
  4192f6:	jne    0x418e33
  4192fc:	movabs rax,0x7fffffffffffffff
  419306:	cmp    QWORD PTR [rbx+0x100],rax
  41930d:	je     0x419317
  41930f:	mov    rcx,rbx
  419312:	call   0x416a40
  419317:	mov    eax,DWORD PTR [rbx+0x128]
  41931d:	test   eax,eax
  41931f:	jle    0x418e33
  419325:	xor    edi,edi
  419327:	xor    esi,esi
  419329:	nop    DWORD PTR [rax+0x0]
  419330:	mov    rax,QWORD PTR [rbx+0x120]
  419337:	xor    edx,edx
  419339:	add    esi,0x1
  41933c:	mov    rax,QWORD PTR [rax+rdi*1]
  419340:	add    rdi,0x8
  419344:	mov    rcx,QWORD PTR [rax]
  419347:	call   0x422128
  41934c:	cmp    esi,DWORD PTR [rbx+0x128]
  419352:	jl     0x419330
  419354:	jmp    0x418e33
  419359:	nop    DWORD PTR [rax+0x0]
  419360:	mov    edi,DWORD PTR [rbx+0xd0]
  419366:	mov    r12d,0x1
  41936c:	test   edi,edi
  41936e:	je     0x4193a5
  419370:	mov    rcx,QWORD PTR [rsp+0x98]
  419378:	sub    rcx,QWORD PTR [rbx+0xf0]
  41937f:	mov    r8d,0xf4240
  419385:	mov    edx,0x3e8
  41938a:	call   0x422598
  41938f:	mov    r9d,DWORD PTR [rbx+0xe0]
  419396:	mov    r13,rax
  419399:	mov    r12d,eax
  41939c:	cmp    eax,r9d
  41939f:	jb     0x4194f9
  4193a5:	mov    DWORD PTR [rbx+0xd0],ebp
  4193ab:	mov    DWORD PTR [rsi],edi
  4193ad:	test   r12d,r12d
  4193b0:	mov    rdi,QWORD PTR [rsp+0x80]
  4193b8:	movzx  r11d,WORD PTR [rbx+0xd8]
  4193c0:	mov    r10d,DWORD PTR [rbx+0xdc]
  4193c7:	mov    r9d,DWORD PTR [rbx+0xe0]
  4193ce:	mov    r8d,DWORD PTR [rbx+0xe4]
  4193d5:	mov    eax,DWORD PTR [rbx+0xd4]
  4193db:	mov    QWORD PTR [rbx+0xd8],rdi
  4193e2:	mov    rdi,QWORD PTR [rsp+0x88]
  4193ea:	mov    rcx,QWORD PTR [rbx+0xe8]
  4193f1:	mov    rdx,QWORD PTR [rbx+0xf0]
  4193f8:	mov    DWORD PTR [rbx+0xd4],r15d
  4193ff:	mov    WORD PTR [rsp+0x80],r11w
  419408:	mov    r15d,eax
  41940b:	mov    QWORD PTR [rbx+0xe0],rdi
  419412:	mov    rdi,QWORD PTR [rsp+0x90]
  41941a:	mov    DWORD PTR [rsp+0x84],r10d
  419422:	mov    DWORD PTR [rsp+0x88],r9d
  41942a:	mov    DWORD PTR [rsp+0x8c],r8d
  419432:	mov    QWORD PTR [rsp+0x90],rcx
  41943a:	mov    QWORD PTR [rbx+0xe8],rdi
  419441:	mov    rdi,QWORD PTR [rsp+0x98]
  419449:	mov    QWORD PTR [rsp+0x98],rdx
  419451:	mov    QWORD PTR [rbx+0xf0],rdi
  419458:	jle    0x4194ea
  41945e:	mov    r13d,DWORD PTR [rsi]
  419461:	test   r13d,r13d
  419464:	je     0x418e33
  41946a:	jmp    0x418e7d
  41946f:	nop
  419470:	mov    eax,DWORD PTR [r10+0x4]
  419474:	mov    r8d,DWORD PTR [r10+0xc]
  419478:	mov    ecx,DWORD PTR [r10+0x8]
  41947c:	nop    DWORD PTR [rax+0x0]
  419480:	mov    DWORD PTR [rsp+0x30],r8d
  419485:	lea    r8,[rip+0x218a4]        # 0x43ad30
  41948c:	mov    DWORD PTR [rsp+0x38],edx
  419490:	mov    DWORD PTR [rsp+0x28],ecx
  419494:	mov    DWORD PTR [rsp+0x40],r11d
  419499:	xor    ecx,ecx
  41949b:	mov    DWORD PTR [rsp+0x20],eax
  41949f:	mov    edx,0x18
  4194a4:	add    rbp,0x8
  4194a8:	call   0x4226c0
  4194ad:	cmp    rbp,r12
  4194b0:	jne    0x418f93
  4194b6:	jmp    0x419066
  4194bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4194c0:	lea    r8,[rip+0x21849]        # 0x43ad10
  4194c7:	xor    ecx,ecx
  4194c9:	mov    edx,0x18
  4194ce:	add    rbp,0x8
  4194d2:	call   0x4226c0
  4194d7:	cmp    rbp,r12
  4194da:	jne    0x418f93
  4194e0:	jmp    0x419066
  4194e5:	mov    r15d,DWORD PTR [rsp+0x7c]
  4194ea:	mov    rcx,QWORD PTR [rsp+0x50]
  4194ef:	call   0x422310
  4194f4:	jmp    0x418e33
  4194f9:	test   eax,eax
  4194fb:	lea    rdx,[rip+0x209d1]        # 0x439ed3
  419502:	lea    rax,[rip+0x217c4]        # 0x43accd
  419509:	mov    rcx,QWORD PTR [rbx+0x20]
  41950d:	lea    r8,[rip+0x217cc]        # 0x43ace0
  419514:	mov    DWORD PTR [rsp+0x20],r13d
  419519:	cmovg  rax,rdx
  41951d:	mov    edx,0x30
  419522:	mov    QWORD PTR [rsp+0x28],rax
  419527:	call   0x4226c0
  41952c:	mov    DWORD PTR [rbx+0xe0],r13d
  419533:	mov    edi,DWORD PTR [rbx+0xd0]
  419539:	mov    ebp,DWORD PTR [rsi]
  41953b:	jmp    0x4193a5
  419540:	mov    ecx,DWORD PTR [rsp+0x84]
  419547:	mov    r8,r14
  41954a:	movabs rdx,0x3e800000001
  419554:	or     r8,0x1
  419558:	mov    rbx,rcx
  41955b:	call   0x422588
  419560:	sub    DWORD PTR [rsp+0x88],ebx
  419567:	add    rax,r13
  41956a:	cmp    edi,0x1
  41956d:	mov    QWORD PTR [rsp+0x98],rax
  419575:	mov    DWORD PTR [rsp+0x84],0x0
  419580:	je     0x41974e
  419586:	add    QWORD PTR [r15+0x1a0],0x1
  41958e:	mov    r9,QWORD PTR [rsp+0x50]
  419593:	mov    r8d,0x100000
  419599:	mov    rdx,QWORD PTR [rip+0x28ca0]        # 0x442240
  4195a0:	mov    rcx,r12
  4195a3:	call   0x422390
  4195a8:	mov    ebx,eax
  4195aa:	test   ebx,ebx
  4195ac:	js     0x419745
  4195b2:	mov    rcx,QWORD PTR [rsp+0x58]
  4195b7:	call   0x422430
  4195bc:	mov    rax,QWORD PTR [r15+0x10]
  4195c0:	mov    rdx,QWORD PTR [rip+0x28c79]        # 0x442240
  4195c7:	mov    rcx,QWORD PTR [rsp+0x98]
  4195cf:	mov    DWORD PTR [rsp+0xc0],ebx
  4195d6:	mov    rsi,QWORD PTR [rax+0x30]
  4195da:	mov    QWORD PTR [rsp+0xb8],rdx
  4195e2:	mov    rdx,r14
  4195e5:	or     rdx,0x1
  4195e9:	mov    r8,rsi
  4195ec:	call   0x422588
  4195f1:	mov    ecx,DWORD PTR [rsp+0x88]
  4195f8:	mov    r8,rsi
  4195fb:	movabs rdx,0x3e800000001
  419605:	mov    rbx,rax
  419608:	mov    QWORD PTR [rsp+0xa8],rax
  419610:	mov    rbp,rcx
  419613:	call   0x422588
  419618:	cmp    DWORD PTR [r12+0x38],0x17001
  419621:	mov    DWORD PTR [rsp+0xdc],eax
  419628:	je     0x419660
  41962a:	mov    rdx,QWORD PTR [rsp+0x58]
  41962f:	mov    rcx,QWORD PTR [rsp+0x60]
  419634:	mov    r8,r15
  419637:	mov    QWORD PTR [rsp+0xb0],rbx
  41963f:	add    edi,0x1
  419642:	call   0x418290
  419647:	cmp    edi,DWORD PTR [rsp+0x68]
  41964b:	je     0x419692
  41964d:	movsxd rdx,DWORD PTR [r15]
  419650:	mov    rax,QWORD PTR [rip+0x28a71]        # 0x4420c8
  419657:	mov    rbx,QWORD PTR [rax+rdx*8]
  41965b:	jmp    0x419210
  419660:	test   edi,edi
  419662:	je     0x419718
  419668:	imul   eax,ebp,0x5a
  41966b:	add    rbx,rax
  41966e:	mov    QWORD PTR [rsp+0xa8],rbx
  419676:	jmp    0x41962a
  419678:	mov    rcx,QWORD PTR [rbx+0x20]
  41967c:	lea    r8,[rip+0x20de5]        # 0x43a468
  419683:	mov    edx,0x10
  419688:	call   0x4226c0
  41968d:	jmp    0x4190c7
  419692:	mov    rsi,QWORD PTR [rsp+0x70]
  419697:	mov    rbx,QWORD PTR [rsp+0x150]
  41969f:	mov    r8d,DWORD PTR [rip+0x28a2a]        # 0x4420d0
  4196a6:	jmp    0x419110
  4196ab:	lea    r8,[rip+0x216b6]        # 0x43ad68
  4196b2:	xor    ecx,ecx
  4196b4:	mov    edx,0x10
  4196b9:	call   0x4226c0
  4196be:	mov    rax,QWORD PTR [rip+0x240bb]        # 0x43d780
  4196c5:	mov    r9d,DWORD PTR [rax]
  4196c8:	test   r9d,r9d
  4196cb:	je     0x4192d0
  4196d1:	mov    ecx,0x1
  4196d6:	call   0x401cb0
  4196db:	nop    DWORD PTR [rax+rax*1+0x0]
  4196e0:	mov    ecx,0x100000
  4196e5:	call   0x422678
  4196ea:	test   rax,rax
  4196ed:	mov    QWORD PTR [rip+0x28b4c],rax        # 0x442240
  4196f4:	je     0x419730
  4196f6:	movsxd rdx,DWORD PTR [r15]
  4196f9:	mov    rax,QWORD PTR [rip+0x289c8]        # 0x4420c8
  419700:	mov    rdi,QWORD PTR [rsp+0x98]
  419708:	mov    rbp,QWORD PTR [rax+rdx*8]
  41970c:	mov    rdx,rdi
  41970f:	mov    rax,QWORD PTR [rbp+0x20]
  419713:	jmp    0x4191c8
  419718:	imul   eax,DWORD PTR [rsp+0x84],0x5a
  419720:	add    rbx,rax
  419723:	mov    QWORD PTR [rsp+0xa8],rbx
  41972b:	jmp    0x41962a
  419730:	lea    r8,[rip+0x21659]        # 0x43ad90
  419737:	mov    edx,0x8
  41973c:	xor    ecx,ecx
  41973e:	call   0x4226c0
  419743:	jmp    0x4196d1
  419745:	lea    r8,[rip+0x21665]        # 0x43adb1
  41974c:	jmp    0x419737
  41974e:	add    QWORD PTR [r15+0x1a0],0x1
  419756:	mov    r9,QWORD PTR [rsp+0x50]
  41975b:	mov    r8d,0x100000
  419761:	mov    rdx,QWORD PTR [rip+0x28ad8]        # 0x442240
  419768:	mov    rcx,r12
  41976b:	mov    DWORD PTR [rsp+0x8c],0x0
  419776:	call   0x422390
  41977b:	mov    DWORD PTR [rsp+0x8c],ebp
  419782:	mov    ebx,eax
  419784:	jmp    0x4195aa
  419789:	nop    DWORD PTR [rax+0x0]
  419790:	push   r12
  419792:	push   rbp
  419793:	push   rdi
  419794:	push   rsi
  419795:	push   rbx
  419796:	sub    rsp,0xe0
  41979d:	mov    r8d,DWORD PTR [rcx+0x80]
  4197a4:	mov    rbx,rcx
  4197a7:	mov    DWORD PTR [rsp+0x3c],0x0
  4197af:	test   r8d,r8d
  4197b2:	jne    0x4197db
  4197b4:	mov    rcx,QWORD PTR [rcx+0x8]
  4197b8:	xor    eax,eax
  4197ba:	mov    edx,DWORD PTR [rcx+0x68]
  4197bd:	test   edx,edx
  4197bf:	jne    0x419890
  4197c5:	mov    QWORD PTR [rbx+0x50],rax
  4197c9:	mov    QWORD PTR [rbx+0x60],0x0
  4197d1:	mov    DWORD PTR [rbx+0x80],0x1
  4197db:	movabs rax,0x8000000000000000
  4197e5:	cmp    QWORD PTR [rbx+0x48],rax
  4197e9:	je     0x419ad0
  4197ef:	movabs rax,0x8000000000000000
  4197f9:	cmp    QWORD PTR [rbx+0x58],rax
  4197fd:	je     0x419aec
  419803:	lea    rsi,[rsp+0x80]
  41980b:	lea    rdi,[rsp+0x3c]
  419810:	movabs rbp,0x8000000000000000
  41981a:	mov    rcx,rsi
  41981d:	call   0x422430
  419822:	mov    QWORD PTR [rsp+0x98],0x0
  41982e:	mov    DWORD PTR [rsp+0xa0],0x0
  419839:	xor    eax,eax
  41983b:	mov    rdx,QWORD PTR [rbx+0x58]
  41983f:	test   eax,eax
  419841:	mov    QWORD PTR [rbx+0x60],rdx
  419845:	mov    rdx,QWORD PTR [rbx+0x48]
  419849:	mov    QWORD PTR [rbx+0x50],rdx
  41984d:	je     0x419860
  41984f:	mov    eax,DWORD PTR ds:0x20
  419856:	ud2    
  419858:	nop    DWORD PTR [rax+rax*1+0x0]
  419860:	mov    rax,QWORD PTR [rbx+0x20]
  419864:	mov    eax,DWORD PTR [rax+0xc]
  419867:	cmp    eax,0x1
  41986a:	je     0x419ab0
  419870:	cmp    eax,0x3
  419873:	je     0x419991
  419879:	test   eax,eax
  41987b:	je     0x4198d0
  41987d:	mov    eax,0xffffffff
  419882:	add    rsp,0xe0
  419889:	pop    rbx
  41988a:	pop    rsi
  41988b:	pop    rdi
  41988c:	pop    rbp
  41988d:	pop    r12
  41988f:	ret    
  419890:	pxor   xmm1,xmm1
  419894:	mov    rax,QWORD PTR [rbx+0x20]
  419898:	pxor   xmm2,xmm2
  41989c:	pxor   xmm0,xmm0
  4198a0:	cvtsi2sd xmm1,edx
  4198a4:	cvtsi2sd xmm2,DWORD PTR [rcx+0x6c]
  4198a9:	imul   eax,DWORD PTR [rax+0xd4],0xfff0bdc0
  4198b3:	cvtsi2sd xmm0,eax
  4198b7:	divsd  xmm1,xmm2
  4198bb:	divsd  xmm0,xmm1
  4198bf:	cvttsd2si rax,xmm0
  4198c4:	jmp    0x4197c5
  4198c9:	nop    DWORD PTR [rax+0x0]
  4198d0:	mov    rcx,rbx
  4198d3:	mov    r8,rdi
  4198d6:	mov    rdx,rsi
  4198d9:	call   0x4174b0
  4198de:	movsxd rcx,DWORD PTR [rsp+0xbc]
  4198e6:	mov    r12d,eax
  4198e9:	test   ecx,ecx
  4198eb:	jne    0x419b00
  4198f1:	mov    rdx,QWORD PTR [rbx+0x20]
  4198f5:	xor    eax,eax
  4198f7:	mov    ecx,DWORD PTR [rdx+0x3f0]
  4198fd:	test   ecx,ecx
  4198ff:	je     0x419910
  419901:	mov    edx,DWORD PTR [rdx+0x3f4]
  419907:	test   edx,edx
  419909:	jne    0x419bc0
  41990f:	nop
  419910:	movabs rcx,0x8000000000000000
  41991a:	mov    QWORD PTR [rbx+0x48],rcx
  41991e:	mov    r11d,DWORD PTR [rsp+0x3c]
  419923:	test   r11d,r11d
  419926:	je     0x4199a2
  419928:	cdqe   
  41992a:	add    QWORD PTR [rbx+0x58],rax
  41992e:	test   r12d,r12d
  419931:	jns    0x4199a7
  419933:	lea    rsi,[rsp+0x40]
  419938:	lea    rdi,[rsp+0x40]
  41993d:	xor    eax,eax
  41993f:	mov    ecx,0x8
  419944:	mov    r8d,0x40
  41994a:	rep stos QWORD PTR es:[rdi],rax
  41994d:	mov    rdx,rsi
  419950:	mov    ecx,r12d
  419953:	call   0x422570
  419958:	mov    rax,QWORD PTR [rbx+0x8]
  41995c:	mov    QWORD PTR [rsp+0x28],rsi
  419961:	lea    r8,[rip+0x21468]        # 0x43add0
  419968:	mov    r9d,DWORD PTR [rbx]
  41996b:	xor    ecx,ecx
  41996d:	mov    edx,0x10
  419972:	mov    eax,DWORD PTR [rax]
  419974:	mov    DWORD PTR [rsp+0x20],eax
  419978:	call   0x4226c0
  41997d:	mov    rax,QWORD PTR [rip+0x23dfc]        # 0x43d780
  419984:	mov    r10d,DWORD PTR [rax]
  419987:	test   r10d,r10d
  41998a:	je     0x4199cb
  41998c:	jmp    0x419a3b
  419991:	mov    r8,rdi
  419994:	mov    rdx,rsi
  419997:	mov    rcx,rbx
  41999a:	call   0x418de0
  41999f:	mov    r12d,eax
  4199a2:	test   r12d,r12d
  4199a5:	js     0x419933
  4199a7:	mov    r9d,DWORD PTR [rsp+0x3c]
  4199ac:	movabs rax,0x8000000000000000
  4199b6:	mov    QWORD PTR [rsp+0x88],rax
  4199be:	mov    QWORD PTR [rsp+0x90],rax
  4199c6:	test   r9d,r9d
  4199c9:	je     0x419a45
  4199cb:	mov    ecx,DWORD PTR [rbx+0x18]
  4199ce:	test   ecx,ecx
  4199d0:	je     0x419a70
  4199d6:	mov    eax,DWORD PTR [rsp+0x3c]
  4199da:	test   eax,eax
  4199dc:	jne    0x419882
  4199e2:	mov    edx,DWORD PTR [rbx+0x128]
  4199e8:	test   edx,edx
  4199ea:	jle    0x419a9b
  4199f0:	xor    esi,esi
  4199f2:	xor    edi,edi
  4199f4:	jmp    0x419a0f
  4199f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a00:	add    edi,0x1
  419a03:	add    rsi,0x8
  419a07:	cmp    edi,DWORD PTR [rbx+0x128]
  419a0d:	jge    0x419a60
  419a0f:	mov    rax,QWORD PTR [rbx+0x120]
  419a16:	xor    edx,edx
  419a18:	mov    rax,QWORD PTR [rax+rsi*1]
  419a1c:	mov    rcx,QWORD PTR [rax]
  419a1f:	call   0x422128
  419a24:	test   eax,eax
  419a26:	jns    0x419a00
  419a28:	lea    r8,[rip+0x213c9]        # 0x43adf8
  419a2f:	mov    edx,0x8
  419a34:	xor    ecx,ecx
  419a36:	call   0x4226c0
  419a3b:	mov    ecx,0x1
  419a40:	call   0x401cb0
  419a45:	mov    r8d,DWORD PTR [rbx+0x18]
  419a49:	test   r8d,r8d
  419a4c:	je     0x419a70
  419a4e:	mov    eax,DWORD PTR [rsp+0xa0]
  419a55:	test   eax,eax
  419a57:	jg     0x41983b
  419a5d:	jmp    0x4199e2
  419a5f:	nop
  419a60:	mov    eax,DWORD PTR [rbx+0x18]
  419a63:	test   eax,eax
  419a65:	jne    0x419a9b
  419a67:	nop    WORD PTR [rax+rax*1+0x0]
  419a70:	mov    rdx,QWORD PTR [rbx+0x20]
  419a74:	mov    rsi,QWORD PTR [rbx+0x48]
  419a78:	mov    eax,DWORD PTR [rdx+0xc]
  419a7b:	mov    QWORD PTR [rbx+0x50],rsi
  419a7f:	test   eax,eax
  419a81:	je     0x419b60
  419a87:	cmp    eax,0x1
  419a8a:	je     0x419b35
  419a90:	mov    rax,rsi
  419a93:	mov    QWORD PTR [rbx+0x60],rsi
  419a97:	mov    QWORD PTR [rbx+0x58],rax
  419a9b:	mov    eax,DWORD PTR [rsp+0x3c]
  419a9f:	add    rsp,0xe0
  419aa6:	pop    rbx
  419aa7:	pop    rsi
  419aa8:	pop    rdi
  419aa9:	pop    rbp
  419aaa:	pop    r12
  419aac:	ret    
  419aad:	nop    DWORD PTR [rax]
  419ab0:	mov    r8,rdi
  419ab3:	mov    rdx,rsi
  419ab6:	mov    rcx,rbx
  419ab9:	call   0x417cd0
  419abe:	mov    r12d,eax
  419ac1:	jmp    0x4199a2
  419ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ad0:	mov    rax,QWORD PTR [rbx+0x50]
  419ad4:	mov    QWORD PTR [rbx+0x48],rax
  419ad8:	movabs rax,0x8000000000000000
  419ae2:	cmp    QWORD PTR [rbx+0x58],rax
  419ae6:	jne    0x419803
  419aec:	mov    rax,QWORD PTR [rbx+0x60]
  419af0:	mov    QWORD PTR [rbx+0x58],rax
  419af4:	jmp    0x419803
  419af9:	nop    DWORD PTR [rax+0x0]
  419b00:	mov    rax,QWORD PTR [rbx+0x8]
  419b04:	movabs r8,0xf424000000001
  419b0e:	mov    rdx,QWORD PTR [rax+0x30]
  419b12:	call   0x422588
  419b17:	test   eax,eax
  419b19:	je     0x419910
  419b1f:	cmp    QWORD PTR [rbx+0x50],rbp
  419b23:	je     0x419910
  419b29:	movsxd rdx,eax
  419b2c:	add    QWORD PTR [rbx+0x48],rdx
  419b30:	jmp    0x41991e
  419b35:	movsxd rax,DWORD PTR [rdx+0x1dc]
  419b3c:	movsxd rcx,DWORD PTR [rdx+0x1d0]
  419b43:	imul   rax,rax,0xf4240
  419b4a:	cqo    
  419b4c:	idiv   rcx
  419b4f:	add    rax,rsi
  419b52:	mov    QWORD PTR [rbx+0x48],rax
  419b56:	jmp    0x419a93
  419b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b60:	mov    eax,DWORD PTR [rbx+0x90]
  419b66:	test   eax,eax
  419b68:	je     0x419bb0
  419b6a:	mov    r12d,DWORD PTR [rbx+0x94]
  419b71:	mov    rdi,rax
  419b74:	movabs rbp,0xf424000000001
  419b7e:	shl    rdi,0x20
  419b82:	mov    rdx,rbp
  419b85:	mov    rcx,rsi
  419b88:	mov    r8,r12
  419b8b:	or     r8,rdi
  419b8e:	call   0x422588
  419b93:	mov    rdx,r12
  419b96:	lea    rcx,[rax+0x1]
  419b9a:	mov    r8,rbp
  419b9d:	or     rdx,rdi
  419ba0:	call   0x422588
  419ba5:	mov    QWORD PTR [rbx+0x48],rax
  419ba9:	jmp    0x419a93
  419bae:	xchg   ax,ax
  419bb0:	mov    eax,DWORD PTR ds:0x3c
  419bb7:	ud2    
  419bb9:	nop    DWORD PTR [rax+0x0]
  419bc0:	mov    rcx,QWORD PTR [rbx+0x8]
  419bc4:	call   0x422268
  419bc9:	test   rax,rax
  419bcc:	je     0x419c16
  419bce:	mov    rcx,QWORD PTR [rbx+0x8]
  419bd2:	call   0x422268
  419bd7:	mov    rdx,QWORD PTR [rbx+0x20]
  419bdb:	mov    ecx,DWORD PTR [rax+0x2c]
  419bde:	mov    r8d,DWORD PTR [rdx+0x8c]
  419be5:	add    ecx,0x1
  419be8:	movsxd rax,DWORD PTR [rdx+0x3f4]
  419bef:	movsxd rcx,ecx
  419bf2:	imul   rax,rax,0xf4240
  419bf9:	imul   rax,rcx
  419bfd:	movsxd rcx,DWORD PTR [rdx+0x3f0]
  419c04:	cqo    
  419c06:	idiv   rcx
  419c09:	movsxd rcx,r8d
  419c0c:	cqo    
  419c0e:	idiv   rcx
  419c11:	jmp    0x419b17
  419c16:	mov    rdx,QWORD PTR [rbx+0x20]
  419c1a:	mov    ecx,DWORD PTR [rdx+0x8c]
  419c20:	mov    r8d,ecx
  419c23:	jmp    0x419be8
  419c25:	nop
  419c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c30:	push   r15
  419c32:	push   r14
  419c34:	push   r13
  419c36:	push   r12
  419c38:	push   rbp
  419c39:	push   rdi
  419c3a:	push   rsi
  419c3b:	push   rbx
  419c3c:	sub    rsp,0x288
  419c43:	movaps XMMWORD PTR [rsp+0x220],xmm6
  419c4b:	movaps XMMWORD PTR [rsp+0x230],xmm7
  419c53:	movaps XMMWORD PTR [rsp+0x240],xmm8
  419c5c:	movaps XMMWORD PTR [rsp+0x250],xmm9
  419c65:	movaps XMMWORD PTR [rsp+0x260],xmm10
  419c6e:	movaps XMMWORD PTR [rsp+0x270],xmm11
  419c77:	mov    rbx,rdx
  419c7a:	movapd xmm9,xmm3
  419c7f:	mov    rax,QWORD PTR [rdx+0x10]
  419c83:	mov    r12,QWORD PTR [rdx+0x48]
  419c87:	mov    QWORD PTR [rsp+0x2d0],rcx
  419c8f:	mov    QWORD PTR [rsp+0x2e0],r8
  419c97:	mov    rax,QWORD PTR [rax+0x8]
  419c9b:	mov    QWORD PTR [rsp+0x50],rax
  419ca0:	mov    rax,QWORD PTR [rdx+0x108]
  419ca7:	mov    rdx,QWORD PTR [rax]
  419caa:	movsxd rax,DWORD PTR [rbx+0x8]
  419cae:	test   eax,eax
  419cb0:	js     0x419f20
  419cb6:	mov    rcx,QWORD PTR [rip+0x2843b]        # 0x4420f8
  419cbd:	mov    rbp,QWORD PTR [rcx+rax*8]
  419cc1:	mov    rax,QWORD PTR [rdx+0x20]
  419cc5:	mov    rdx,QWORD PTR [rax]
  419cc8:	mov    eax,DWORD PTR [rdx+0xa4]
  419cce:	test   eax,eax
  419cd0:	jle    0x419f10
  419cd6:	mov    edx,DWORD PTR [rdx+0xa8]
  419cdc:	test   edx,edx
  419cde:	jle    0x419f10
  419ce4:	pxor   xmm0,xmm0
  419ce8:	pxor   xmm1,xmm1
  419cec:	pxor   xmm2,xmm2
  419cf0:	cvtsi2sd xmm0,eax
  419cf4:	cvtsi2sd xmm1,edx
  419cf8:	cvtsi2sd xmm2,DWORD PTR [r12+0x88]
  419d02:	movsd  xmm8,QWORD PTR [rip+0x22695]        # 0x43c3a0
  419d0b:	divsd  xmm0,xmm1
  419d0f:	pxor   xmm1,xmm1
  419d13:	cvtsi2sd xmm1,DWORD PTR [r12+0x84]
  419d1d:	divsd  xmm1,xmm2
  419d21:	mulsd  xmm0,xmm1
  419d25:	divsd  xmm8,xmm0
  419d2a:	test   rbp,rbp
  419d2d:	je     0x419dac
  419d2f:	mov    rdx,QWORD PTR [rbp+0x8]
  419d33:	movabs rax,0x8000000000000000
  419d3d:	cmp    QWORD PTR [rdx+0x38],rax
  419d41:	je     0x419dac
  419d43:	cmp    QWORD PTR [rdx+0xf0],rax
  419d4a:	je     0x419dac
  419d4c:	mov    eax,DWORD PTR [rbx+0x80]
  419d52:	test   eax,eax
  419d54:	je     0x419dac
  419d56:	pxor   xmm0,xmm0
  419d5a:	pxor   xmm1,xmm1
  419d5e:	pxor   xmm2,xmm2
  419d62:	cvtsi2sd xmm0,eax
  419d66:	cvtsi2sd xmm1,DWORD PTR [rbx+0x84]
  419d6e:	cvtsi2sd xmm2,DWORD PTR [r12+0x88]
  419d78:	divsd  xmm0,xmm1
  419d7c:	pxor   xmm1,xmm1
  419d80:	cvtsi2sd xmm1,DWORD PTR [r12+0x84]
  419d8a:	divsd  xmm1,xmm2
  419d8e:	mulsd  xmm0,xmm1
  419d92:	movsd  xmm1,QWORD PTR [rip+0x22606]        # 0x43c3a0
  419d9a:	divsd  xmm1,xmm0
  419d9e:	movapd xmm0,xmm1
  419da2:	minsd  xmm0,xmm8
  419da7:	movapd xmm8,xmm0
  419dac:	cmp    QWORD PTR [rbx+0x120],0x0
  419db4:	je     0x41aee0
  419dba:	cmp    QWORD PTR [rsp+0x2e0],0x0
  419dc3:	je     0x41afe0
  419dc9:	pxor   xmm0,xmm0
  419dcd:	movapd xmm6,xmm9
  419dd2:	mov    rax,QWORD PTR [rip+0x23b97]        # 0x43d970
  419dd9:	cvtsi2sd xmm0,QWORD PTR [rbx+0x28]
  419ddf:	subsd  xmm6,xmm0
  419de3:	mov    esi,DWORD PTR [rax]
  419de5:	movapd xmm7,xmm6
  419de9:	cmp    esi,0xffffffff
  419dec:	addsd  xmm7,xmm8
  419df1:	je     0x419f41
  419df7:	pxor   xmm10,xmm10
  419dfc:	ucomisd xmm10,xmm6
  419e01:	ja     0x419f82
  419e07:	cmp    esi,0x2
  419e0a:	je     0x41aec0
  419e10:	jg     0x419ea4
  419e16:	test   esi,esi
  419e18:	je     0x41a003
  419e1e:	cmp    esi,0x1
  419e21:	jne    0x41ae0d
  419e27:	mov    edi,DWORD PTR [rbx+0x1c]
  419e2a:	mov    rax,QWORD PTR [rip+0x2398f]        # 0x43d7c0
  419e31:	movss  xmm0,DWORD PTR [rax]
  419e35:	ucomiss xmm0,DWORD PTR [rip+0x22554]        # 0x43c390
  419e3c:	jp     0x419e40
  419e3e:	je     0x419e52
  419e40:	cvtss2sd xmm0,xmm0
  419e44:	ucomisd xmm0,xmm7
  419e48:	jbe    0x419e52
  419e4a:	test   edi,edi
  419e4c:	jne    0x41aeb0
  419e52:	movsd  xmm0,QWORD PTR [rip+0x22576]        # 0x43c3d0
  419e5a:	ucomisd xmm0,xmm7
  419e5e:	ja     0x41aeb0
  419e64:	movsd  xmm0,QWORD PTR [rip+0x2256c]        # 0x43c3d8
  419e6c:	ucomisd xmm7,xmm0
  419e70:	jbe    0x41b033
  419e76:	ucomisd xmm6,xmm0
  419e7a:	cvtsd2ss xmm7,xmm7
  419e7e:	cvtss2si esi,xmm7
  419e82:	jbe    0x41b0c4
  419e88:	subsd  xmm6,QWORD PTR [rip+0x22550]        # 0x43c3e0
  419e90:	pxor   xmm0,xmm0
  419e94:	movsxd rdx,esi
  419e97:	cvtsd2ss xmm0,xmm6
  419e9b:	cvtss2si eax,xmm0
  419e9f:	jmp    0x41a018
  419ea4:	cmp    esi,0xfe
  419eaa:	jne    0x41ae01
  419eb0:	mov    edi,DWORD PTR [rbx+0x1c]
  419eb3:	test   edi,edi
  419eb5:	jne    0x419e2a
  419ebb:	movapd xmm0,xmm7
  419ebf:	subsd  xmm0,xmm8
  419ec4:	ucomisd xmm0,QWORD PTR [rip+0x224fc]        # 0x43c3c8
  419ecc:	jb     0x419e2a
  419ed2:	cvtsd2ss xmm0,xmm0
  419ed6:	cvtss2si r9d,xmm0
  419edb:	lea    r8,[rip+0x20f86]        # 0x43ae68
  419ee2:	mov    edx,0x30
  419ee7:	xor    ecx,ecx
  419ee9:	movapd xmm7,xmm8
  419eee:	movapd xmm6,xmm10
  419ef3:	call   0x4226c0
  419ef8:	cvtsd2si eax,xmm9
  419efd:	mov    edi,DWORD PTR [rbx+0x1c]
  419f00:	cdqe   
  419f02:	mov    QWORD PTR [rbx+0x28],rax
  419f06:	jmp    0x419e2a
  419f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  419f10:	pxor   xmm8,xmm8
  419f15:	jmp    0x419d2a
  419f1a:	nop    WORD PTR [rax+rax*1+0x0]
  419f20:	mov    rax,QWORD PTR [rdx+0x20]
  419f24:	xor    ebp,ebp
  419f26:	pxor   xmm8,xmm8
  419f2b:	mov    rdx,QWORD PTR [rax]
  419f2e:	mov    eax,DWORD PTR [rdx+0xa4]
  419f34:	test   eax,eax
  419f36:	jg     0x419cd6
  419f3c:	jmp    0x419dac
  419f41:	mov    rax,QWORD PTR [rsp+0x2d0]
  419f49:	lea    rdi,[rip+0x20ecb]        # 0x43ae1b
  419f50:	mov    ecx,0x4
  419f55:	mov    rax,QWORD PTR [rax+0x10]
  419f59:	mov    rsi,QWORD PTR [rax]
  419f5c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419f5e:	je     0x41ae90
  419f64:	mov    eax,DWORD PTR [rax+0x2c]
  419f67:	test   ah,0x4
  419f6a:	je     0x41b03f
  419f70:	and    eax,0x80
  419f75:	cmp    eax,0x1
  419f78:	sbb    esi,esi
  419f7a:	and    esi,0x2
  419f7d:	jmp    0x419df7
  419f82:	ucomisd xmm7,xmm10
  419f87:	jbe    0x419e07
  419f8d:	test   esi,esi
  419f8f:	je     0x419e07
  419f95:	cmp    esi,0xff
  419f9b:	je     0x419e07
  419fa1:	movsd  xmm1,QWORD PTR [rip+0x22417]        # 0x43c3c0
  419fa9:	movapd xmm11,xmm8
  419fae:	movsd  xmm0,QWORD PTR [rip+0x223fa]        # 0x43c3b0
  419fb6:	ucomisd xmm1,xmm6
  419fba:	xorpd  xmm0,xmm6
  419fbe:	minsd  xmm11,xmm0
  419fc3:	movapd xmm3,xmm0
  419fc7:	movq   r9,xmm0
  419fcc:	ja     0x41b0ac
  419fd2:	lea    r8,[rip+0x20e67]        # 0x43ae40
  419fd9:	mov    edx,0x30
  419fde:	xor    ecx,ecx
  419fe0:	call   0x4226c0
  419fe5:	addsd  xmm9,xmm11
  419fea:	subsd  xmm8,xmm11
  419fef:	addsd  xmm6,xmm11
  419ff4:	jmp    0x419e07
  419ff9:	ucomisd xmm7,QWORD PTR [rip+0x223df]        # 0x43c3e0
  41a001:	jbe    0x41a00e
  41a003:	cvtsd2si eax,xmm9
  41a008:	cdqe   
  41a00a:	mov    QWORD PTR [rbx+0x28],rax
  41a00e:	mov    edi,DWORD PTR [rbx+0x1c]
  41a011:	mov    edx,0x1
  41a016:	xor    eax,eax
  41a018:	mov    rsi,QWORD PTR [rbx+0x58]
  41a01c:	movsxd rcx,edi
  41a01f:	mov    r8d,0x8
  41a025:	sub    rsi,rcx
  41a028:	lea    rcx,[rbx+0x78]
  41a02c:	cmp    rsi,rdx
  41a02f:	cmovg  rsi,rdx
  41a033:	lea    rdx,[rbx+0x74]
  41a037:	cmp    esi,eax
  41a039:	cmovle eax,esi
  41a03c:	mov    r14d,eax
  41a03f:	mov    DWORD PTR [rsp+0x4c],eax
  41a043:	call   0x42fb38
  41a048:	test   r14d,r14d
  41a04b:	mov    DWORD PTR [rbx+0x74],r14d
  41a04f:	jne    0x41acf0
  41a055:	mov    r15d,DWORD PTR [rbx+0x70]
  41a059:	test   r15d,r15d
  41a05c:	jne    0x41ae51
  41a062:	xor    eax,eax
  41a064:	xor    edx,edx
  41a066:	cmp    esi,DWORD PTR [rsp+0x4c]
  41a06a:	setg   dl
  41a06d:	add    eax,edx
  41a06f:	cmp    esi,eax
  41a071:	jle    0x41acc0
  41a077:	pxor   xmm1,xmm1
  41a07b:	mov    rax,QWORD PTR [rip+0x236ee]        # 0x43d770
  41a082:	movss  xmm0,DWORD PTR [rip+0x2235e]        # 0x43c3e8
  41a08a:	cvtsi2ss xmm1,esi
  41a08e:	mulss  xmm0,DWORD PTR [rax]
  41a092:	ucomiss xmm1,xmm0
  41a095:	ja     0x41b010
  41a09b:	mov    r14d,DWORD PTR [rsp+0x4c]
  41a0a0:	xor    eax,eax
  41a0a2:	test   r14d,r14d
  41a0a5:	jne    0x41ae40
  41a0ab:	mov    edi,esi
  41a0ad:	lea    r9d,[rsi-0x1]
  41a0b1:	lea    r8,[rip+0x20e62]        # 0x43af1a
  41a0b8:	sub    edi,eax
  41a0ba:	xor    ecx,ecx
  41a0bc:	mov    eax,edi
  41a0be:	sub    eax,edx
  41a0c0:	mov    edx,0x28
  41a0c5:	add    DWORD PTR [rip+0x28199],eax        # 0x442264
  41a0cb:	call   0x4226c0
  41a0d0:	cmp    QWORD PTR [rsp+0x2e0],0x0
  41a0d9:	setne  BYTE PTR [rsp+0x6f]
  41a0de:	xor    eax,eax
  41a0e0:	cmp    esi,DWORD PTR [rsp+0x4c]
  41a0e4:	movzx  edi,BYTE PTR [rsp+0x6f]
  41a0e9:	sete   al
  41a0ec:	and    eax,edi
  41a0ee:	mov    DWORD PTR [rbx+0x70],eax
  41a0f1:	movsd  xmm8,QWORD PTR [rip+0x222a6]        # 0x43c3a0
  41a0fa:	lea    r15,[rsp+0x1c0]
  41a102:	mov    DWORD PTR [rsp+0x68],esi
  41a106:	pxor   xmm9,xmm9
  41a10b:	xor    r14d,r14d
  41a10e:	movapd xmm10,xmm8
  41a113:	xor    r13d,r13d
  41a116:	movsd  xmm7,QWORD PTR [rip+0x2227a]        # 0x43c398
  41a11e:	xchg   ax,ax
  41a120:	mov    rcx,r15
  41a123:	call   0x422430
  41a128:	cmp    DWORD PTR [rsp+0x4c],r13d
  41a12d:	mov    QWORD PTR [rsp+0x1d8],0x0
  41a139:	mov    DWORD PTR [rsp+0x1e0],0x0
  41a144:	jle    0x41a560
  41a14a:	mov    rbp,QWORD PTR [rbx+0x68]
  41a14e:	test   rbp,rbp
  41a151:	je     0x41a560
  41a157:	movsxd rdx,DWORD PTR [rbx]
  41a15a:	mov    rax,QWORD PTR [rip+0x27f67]        # 0x4420c8
  41a161:	mov    rcx,QWORD PTR [rbx+0x28]
  41a165:	mov    rax,QWORD PTR [rax+rdx*8]
  41a169:	mov    QWORD PTR [rbp+0xc8],rcx
  41a170:	mov    r8,QWORD PTR [rax+0x18]
  41a174:	movabs rax,0x7fffffffffffffff
  41a17e:	cmp    r8,rax
  41a181:	je     0x41a257
  41a187:	mov    rax,QWORD PTR [rbx+0x48]
  41a18b:	sub    rcx,QWORD PTR [rbx+0x30]
  41a18f:	movabs rsi,0xf424000000000
  41a199:	mov    r9,rsi
  41a19c:	or     r9,0x1
  41a1a0:	mov    rdx,QWORD PTR [rax+0x84]
  41a1a7:	call   0x422838
  41a1ac:	test   eax,eax
  41a1ae:	js     0x41a250
  41a1b4:	movsxd rdx,DWORD PTR [rbx]
  41a1b7:	mov    rax,QWORD PTR [rip+0x27f0a]        # 0x4420c8
  41a1be:	mov    rdi,QWORD PTR [rax+rdx*8]
  41a1c2:	or     DWORD PTR [rbx+0x158],0x1
  41a1c9:	mov    ebp,DWORD PTR [rdi+0x30]
  41a1cc:	test   ebp,ebp
  41a1ce:	je     0x41a1fe
  41a1d0:	mov    rax,QWORD PTR [rbx+0x48]
  41a1d4:	mov    rcx,QWORD PTR [rbx+0x28]
  41a1d8:	or     rsi,0x1
  41a1dc:	sub    rcx,QWORD PTR [rbx+0x30]
  41a1e0:	mov    r8,rsi
  41a1e3:	mov    rdx,QWORD PTR [rax+0x84]
  41a1ea:	call   0x422588
  41a1ef:	mov    rdx,QWORD PTR [rdi+0x18]
  41a1f3:	cmp    rax,rdx
  41a1f6:	cmovg  rax,rdx
  41a1fa:	mov    QWORD PTR [rdi+0x18],rax
  41a1fe:	movaps xmm6,XMMWORD PTR [rsp+0x220]
  41a206:	movaps xmm7,XMMWORD PTR [rsp+0x230]
  41a20e:	movaps xmm8,XMMWORD PTR [rsp+0x240]
  41a217:	movaps xmm9,XMMWORD PTR [rsp+0x250]
  41a220:	movaps xmm10,XMMWORD PTR [rsp+0x260]
  41a229:	movaps xmm11,XMMWORD PTR [rsp+0x270]
  41a232:	add    rsp,0x288
  41a239:	pop    rbx
  41a23a:	pop    rsi
  41a23b:	pop    rdi
  41a23c:	pop    rbp
  41a23d:	pop    r12
  41a23f:	pop    r13
  41a241:	pop    r14
  41a243:	pop    r15
  41a245:	ret    
  41a246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a250:	mov    rcx,QWORD PTR [rbp+0xc8]
  41a257:	mov    rax,QWORD PTR [rsp+0x2d0]
  41a25f:	mov    rax,QWORD PTR [rax+0x10]
  41a263:	test   BYTE PTR [rax+0x2c],0x20
  41a267:	je     0x41a278
  41a269:	mov    rax,QWORD PTR [r12+0x10]
  41a26e:	cmp    DWORD PTR [rax+0x14],0xe
  41a272:	je     0x41a733
  41a278:	test   DWORD PTR [r12+0x70],0x20040000
  41a281:	je     0x41a299
  41a283:	mov    esi,DWORD PTR [rbx+0x8c]
  41a289:	test   esi,esi
  41a28b:	js     0x41a299
  41a28d:	setne  al
  41a290:	movzx  eax,al
  41a293:	mov    DWORD PTR [rbp+0x18c],eax
  41a299:	mov    r11d,DWORD PTR [rbp+0x188]
  41a2a0:	test   r11d,r11d
  41a2a3:	je     0x41a580
  41a2a9:	mov    rax,QWORD PTR [r12+0x10]
  41a2ae:	cmp    DWORD PTR [rax+0x14],0x8
  41a2b2:	je     0x41ac12
  41a2b8:	cmp    DWORD PTR [rbp+0x18c],0x1
  41a2bf:	mov    rdi,QWORD PTR [rsp+0x50]
  41a2c4:	sbb    eax,eax
  41a2c6:	not    eax
  41a2c8:	add    eax,0x5
  41a2cb:	mov    DWORD PTR [rdi+0x1cc],eax
  41a2d1:	mov    eax,DWORD PTR [r12+0x68]
  41a2d6:	movapd xmm6,xmm7
  41a2da:	mov    DWORD PTR [rbp+0x7c],0x0
  41a2e1:	mov    DWORD PTR [rbp+0xe8],eax
  41a2e7:	movabs rax,0x8000000000000000
  41a2f1:	cmp    rcx,rax
  41a2f4:	je     0x41a323
  41a2f6:	pxor   xmm0,xmm0
  41a2fa:	pxor   xmm1,xmm1
  41a2fe:	pxor   xmm6,xmm6
  41a302:	cvtsi2sd xmm0,DWORD PTR [r12+0x84]
  41a30c:	cvtsi2sd xmm1,DWORD PTR [r12+0x88]
  41a316:	divsd  xmm0,xmm1
  41a31a:	cvtsi2sd xmm6,rcx
  41a31f:	mulsd  xmm6,xmm0
  41a323:	mov    eax,DWORD PTR [rbx+0xac]
  41a329:	cmp    eax,DWORD PTR [rbx+0xa8]
  41a32f:	jge    0x41a4e0
  41a335:	mov    r8,QWORD PTR [rbx+0xa0]
  41a33c:	movsxd rdx,eax
  41a33f:	cmp    QWORD PTR [r8+rdx*8],rcx
  41a343:	jg     0x41a4e0
  41a349:	add    eax,0x1
  41a34c:	mov    DWORD PTR [rbx+0xac],eax
  41a352:	movapd xmm3,xmm6
  41a356:	movq   r9,xmm6
  41a35b:	lea    r8,[rip+0x20bcc]        # 0x43af2e
  41a362:	mov    DWORD PTR [rbp+0x7c],0x1
  41a369:	mov    edx,0x30
  41a36e:	xor    ecx,ecx
  41a370:	call   0x4226c0
  41a375:	xor    ecx,ecx
  41a377:	call   0x4166f0
  41a37c:	mov    rax,QWORD PTR [rip+0x2337d]        # 0x43d700
  41a383:	mov    r10d,DWORD PTR [rax]
  41a386:	test   r10d,r10d
  41a389:	jne    0x41a594
  41a38f:	add    QWORD PTR [rbx+0x1a0],0x1
  41a397:	lea    r9,[rsp+0x7c]
  41a39c:	mov    r8,rbp
  41a39f:	mov    rdx,r15
  41a3a2:	mov    rcx,r12
  41a3a5:	call   0x422388
  41a3aa:	mov    r8d,DWORD PTR [rbx+0x4]
  41a3ae:	mov    edx,DWORD PTR [rbx]
  41a3b0:	lea    rcx,[rip+0x20bdf]        # 0x43af96
  41a3b7:	mov    esi,eax
  41a3b9:	call   0x416780
  41a3be:	test   esi,esi
  41a3c0:	js     0x41b0df
  41a3c6:	mov    r9d,DWORD PTR [rsp+0x7c]
  41a3cb:	test   r9d,r9d
  41a3ce:	je     0x41a468
  41a3d4:	mov    rax,QWORD PTR [rip+0x23325]        # 0x43d700
  41a3db:	mov    r8d,DWORD PTR [rax]
  41a3de:	test   r8d,r8d
  41a3e1:	jne    0x41a9e0
  41a3e7:	movabs rax,0x8000000000000000
  41a3f1:	cmp    QWORD PTR [rsp+0x1c8],rax
  41a3f9:	je     0x41ac30
  41a3ff:	mov    rax,QWORD PTR [rbx+0x10]
  41a403:	mov    rdx,QWORD PTR [r12+0x84]
  41a40b:	mov    rcx,r15
  41a40e:	mov    r8,QWORD PTR [rax+0x30]
  41a412:	call   0x422418
  41a417:	mov    rax,QWORD PTR [rip+0x232e2]        # 0x43d700
  41a41e:	mov    ecx,DWORD PTR [rax]
  41a420:	test   ecx,ecx
  41a422:	jne    0x41a7b0
  41a428:	mov    rcx,QWORD PTR [rsp+0x2d0]
  41a430:	mov    r8,rbx
  41a433:	mov    rdx,r15
  41a436:	mov    r14d,DWORD PTR [rsp+0x1e0]
  41a43e:	call   0x418290
  41a443:	mov    rcx,QWORD PTR [rbx+0x100]
  41a44a:	test   rcx,rcx
  41a44d:	je     0x41a468
  41a44f:	mov    r8,QWORD PTR [r12+0x2e8]
  41a457:	test   r8,r8
  41a45a:	je     0x41a468
  41a45c:	lea    rdx,[rip+0x1fa71]        # 0x439ed4
  41a463:	call   0x414b30
  41a468:	add    QWORD PTR [rbx+0x28],0x1
  41a46d:	add    DWORD PTR [rbx+0x1c],0x1
  41a471:	test   r14d,r14d
  41a474:	je     0x41a48e
  41a476:	mov    rax,QWORD PTR [rip+0x23503]        # 0x43d980
  41a47d:	cmp    QWORD PTR [rax],0x0
  41a481:	je     0x41a48e
  41a483:	mov    edx,r14d
  41a486:	mov    rcx,rbx
  41a489:	call   0x414b60
  41a48e:	add    r13d,0x1
  41a492:	cmp    r13d,DWORD PTR [rsp+0x68]
  41a497:	jne    0x41a120
  41a49d:	mov    rcx,QWORD PTR [rbx+0x68]
  41a4a1:	test   rcx,rcx
  41a4a4:	je     0x41b0ce
  41a4aa:	call   0x422778
  41a4af:	cmp    BYTE PTR [rsp+0x6f],0x0
  41a4b4:	je     0x41ae9a
  41a4ba:	mov    rcx,QWORD PTR [rbx+0x68]
  41a4be:	test   rcx,rcx
  41a4c1:	je     0x41ae9a
  41a4c7:	mov    rdx,QWORD PTR [rsp+0x2e0]
  41a4cf:	call   0x422780
  41a4d4:	jmp    0x41a1fe
  41a4d9:	nop    DWORD PTR [rax+0x0]
  41a4e0:	mov    rcx,QWORD PTR [rbx+0xb8]
  41a4e7:	test   rcx,rcx
  41a4ea:	je     0x41a700
  41a4f0:	movsd  QWORD PTR [rbx+0xe0],xmm6
  41a4f8:	lea    rdx,[rbx+0xc0]
  41a4ff:	xor    r8d,r8d
  41a502:	call   0x4227f0
  41a507:	ucomisd xmm0,xmm9
  41a50c:	jp     0x41a514
  41a50e:	je     0x41a6e0
  41a514:	movsd  xmm1,QWORD PTR [rbx+0xe0]
  41a51c:	movsd  xmm0,QWORD PTR [rbx+0xc0]
  41a524:	movsd  QWORD PTR [rbx+0xd8],xmm1
  41a52c:	movsd  xmm1,QWORD PTR [rbx+0xc8]
  41a534:	movsd  QWORD PTR [rbx+0xd0],xmm0
  41a53c:	addsd  xmm0,xmm8
  41a541:	addsd  xmm1,xmm8
  41a546:	movsd  QWORD PTR [rbx+0xc0],xmm0
  41a54e:	movsd  QWORD PTR [rbx+0xc8],xmm1
  41a556:	jmp    0x41a352
  41a55b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a560:	cmp    QWORD PTR [rsp+0x2e0],0x0
  41a569:	je     0x41a1fe
  41a56f:	mov    rbp,QWORD PTR [rsp+0x2e0]
  41a577:	jmp    0x41a157
  41a57c:	nop    DWORD PTR [rax+0x0]
  41a580:	mov    rax,QWORD PTR [rsp+0x50]
  41a585:	mov    DWORD PTR [rax+0x1cc],0x1
  41a58f:	jmp    0x41a2d1
  41a594:	mov    rax,QWORD PTR [rbp+0xc8]
  41a59b:	movabs rdx,0x8000000000000000
  41a5a5:	mov    esi,DWORD PTR [r12+0x88]
  41a5ad:	mov    edi,DWORD PTR [r12+0x84]
  41a5b5:	mov    QWORD PTR [rsp+0xa0],0x0
  41a5c1:	mov    QWORD PTR [rsp+0xa8],0x0
  41a5cd:	mov    QWORD PTR [rsp+0xb0],0x0
  41a5d9:	cmp    rax,rdx
  41a5dc:	mov    QWORD PTR [rsp+0xb8],0x0
  41a5e8:	je     0x41ac90
  41a5ee:	pxor   xmm0,xmm0
  41a5f2:	lea    r8,[rip+0x202cd]        # 0x43a8c6
  41a5f9:	mov    edx,0x20
  41a5fe:	pxor   xmm1,xmm1
  41a602:	cvtsi2sd xmm0,edi
  41a606:	cvtsi2sd xmm1,esi
  41a60a:	divsd  xmm0,xmm1
  41a60e:	pxor   xmm1,xmm1
  41a612:	cvtsi2sd xmm1,rax
  41a617:	lea    rax,[rsp+0xa0]
  41a61f:	mov    rcx,rax
  41a622:	mov    QWORD PTR [rsp+0x58],rax
  41a627:	mulsd  xmm0,xmm1
  41a62b:	movapd xmm3,xmm0
  41a62f:	movq   r9,xmm0
  41a634:	call   0x414ae0
  41a639:	mov    r9,QWORD PTR [rbp+0xc8]
  41a640:	movabs rax,0x8000000000000000
  41a64a:	mov    QWORD PTR [rsp+0x80],0x0
  41a656:	mov    QWORD PTR [rsp+0x88],0x0
  41a662:	mov    QWORD PTR [rsp+0x90],0x0
  41a66e:	lea    r10,[rsp+0x80]
  41a676:	mov    QWORD PTR [rsp+0x98],0x0
  41a682:	cmp    r9,rax
  41a685:	je     0x41ac64
  41a68b:	lea    r8,[rip+0x20239]        # 0x43a8cb
  41a692:	mov    rcx,r10
  41a695:	mov    edx,0x20
  41a69a:	mov    QWORD PTR [rsp+0x60],r10
  41a69f:	call   0x414ae0
  41a6a4:	mov    r10,QWORD PTR [rsp+0x60]
  41a6a9:	mov    rax,QWORD PTR [rsp+0x58]
  41a6ae:	lea    r8,[rip+0x2089b]        # 0x43af50
  41a6b5:	mov    DWORD PTR [rsp+0x30],esi
  41a6b9:	mov    DWORD PTR [rsp+0x28],edi
  41a6bd:	mov    r9,r10
  41a6c0:	mov    edx,0x20
  41a6c5:	xor    ecx,ecx
  41a6c7:	mov    QWORD PTR [rsp+0x20],rax
  41a6cc:	call   0x4226c0
  41a6d1:	jmp    0x41a38f
  41a6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a6e0:	movsd  xmm0,QWORD PTR [rbx+0xc0]
  41a6e8:	addsd  xmm0,xmm10
  41a6ed:	movsd  QWORD PTR [rbx+0xc0],xmm0
  41a6f5:	jmp    0x41a375
  41a6fa:	nop    WORD PTR [rax+rax*1+0x0]
  41a700:	mov    rsi,QWORD PTR [rbx+0xb0]
  41a707:	test   rsi,rsi
  41a70a:	je     0x41a375
  41a710:	lea    rdi,[rip+0x20810]        # 0x43af27
  41a717:	mov    ecx,0x6
  41a71c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a71e:	jne    0x41a375
  41a724:	cmp    DWORD PTR [rbp+0x78],0x1
  41a728:	jne    0x41a375
  41a72e:	jmp    0x41a352
  41a733:	mov    edi,DWORD PTR [rbp+0x188]
  41a739:	test   edi,edi
  41a73b:	je     0x41ac50
  41a741:	cmp    DWORD PTR [rbp+0x18c],0x1
  41a748:	mov    rdi,QWORD PTR [rsp+0x50]
  41a74d:	sbb    eax,eax
  41a74f:	not    eax
  41a751:	add    eax,0x5
  41a754:	mov    DWORD PTR [rdi+0x1cc],eax
  41a75a:	mov    rax,QWORD PTR [rbx+0x10]
  41a75e:	mov    rdx,QWORD PTR [r12+0x84]
  41a766:	mov    QWORD PTR [rsp+0x1d8],rbp
  41a76e:	mov    DWORD PTR [rsp+0x1e0],0x60
  41a779:	mov    r8,QWORD PTR [rax+0x30]
  41a77d:	call   0x422588
  41a782:	mov    rcx,QWORD PTR [rsp+0x2d0]
  41a78a:	mov    r8,rbx
  41a78d:	mov    rdx,r15
  41a790:	mov    QWORD PTR [rsp+0x1c8],rax
  41a798:	or     DWORD PTR [rsp+0x1e8],0x1
  41a7a0:	call   0x418290
  41a7a5:	jmp    0x41a468
  41a7aa:	nop    WORD PTR [rax+rax*1+0x0]
  41a7b0:	mov    rax,QWORD PTR [rsp+0x1d0]
  41a7b8:	movabs rcx,0x8000000000000000
  41a7c2:	mov    rdx,QWORD PTR [rbx+0x10]
  41a7c6:	mov    QWORD PTR [rsp+0x1a0],0x0
  41a7d2:	mov    QWORD PTR [rsp+0x1a8],0x0
  41a7de:	mov    QWORD PTR [rsp+0x1b0],0x0
  41a7ea:	mov    QWORD PTR [rsp+0x1b8],0x0
  41a7f6:	cmp    rax,rcx
  41a7f9:	je     0x41ade0
  41a7ff:	pxor   xmm0,xmm0
  41a803:	lea    rbp,[rsp+0x1a0]
  41a80b:	lea    r8,[rip+0x200b4]        # 0x43a8c6
  41a812:	pxor   xmm1,xmm1
  41a816:	mov    rcx,rbp
  41a819:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41a81e:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  41a823:	divsd  xmm0,xmm1
  41a827:	mov    edx,0x20
  41a82c:	pxor   xmm1,xmm1
  41a830:	cvtsi2sd xmm1,rax
  41a835:	mulsd  xmm0,xmm1
  41a839:	movapd xmm3,xmm0
  41a83d:	movq   r9,xmm0
  41a842:	call   0x414ae0
  41a847:	mov    r9,QWORD PTR [rsp+0x1d0]
  41a84f:	movabs rax,0x8000000000000000
  41a859:	mov    QWORD PTR [rsp+0x180],0x0
  41a865:	mov    QWORD PTR [rsp+0x188],0x0
  41a871:	mov    QWORD PTR [rsp+0x190],0x0
  41a87d:	lea    rdi,[rsp+0x180]
  41a885:	mov    QWORD PTR [rsp+0x198],0x0
  41a891:	cmp    r9,rax
  41a894:	je     0x41adc1
  41a89a:	lea    r8,[rip+0x2002a]        # 0x43a8cb
  41a8a1:	mov    edx,0x20
  41a8a6:	mov    rcx,rdi
  41a8a9:	call   0x414ae0
  41a8ae:	mov    rax,QWORD PTR [rsp+0x1c8]
  41a8b6:	movabs rcx,0x8000000000000000
  41a8c0:	mov    rdx,QWORD PTR [rbx+0x10]
  41a8c4:	mov    QWORD PTR [rsp+0x160],0x0
  41a8d0:	mov    QWORD PTR [rsp+0x168],0x0
  41a8dc:	mov    QWORD PTR [rsp+0x170],0x0
  41a8e8:	mov    QWORD PTR [rsp+0x178],0x0
  41a8f4:	cmp    rax,rcx
  41a8f7:	je     0x41ada0
  41a8fd:	pxor   xmm0,xmm0
  41a901:	lea    rsi,[rsp+0x160]
  41a909:	lea    r8,[rip+0x1ffb6]        # 0x43a8c6
  41a910:	pxor   xmm1,xmm1
  41a914:	mov    rcx,rsi
  41a917:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41a91c:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  41a921:	divsd  xmm0,xmm1
  41a925:	mov    edx,0x20
  41a92a:	pxor   xmm1,xmm1
  41a92e:	cvtsi2sd xmm1,rax
  41a933:	mulsd  xmm0,xmm1
  41a937:	movapd xmm3,xmm0
  41a93b:	movq   r9,xmm0
  41a940:	call   0x414ae0
  41a945:	mov    r9,QWORD PTR [rsp+0x1c8]
  41a94d:	movabs rax,0x8000000000000000
  41a957:	mov    QWORD PTR [rsp+0x140],0x0
  41a963:	mov    QWORD PTR [rsp+0x148],0x0
  41a96f:	mov    QWORD PTR [rsp+0x150],0x0
  41a97b:	lea    r14,[rsp+0x140]
  41a983:	mov    QWORD PTR [rsp+0x158],0x0
  41a98f:	cmp    r9,rax
  41a992:	je     0x41ad81
  41a998:	lea    r8,[rip+0x1ff2c]        # 0x43a8cb
  41a99f:	mov    edx,0x20
  41a9a4:	mov    rcx,r14
  41a9a7:	call   0x414ae0
  41a9ac:	lea    r8,[rip+0x2060d]        # 0x43afc0
  41a9b3:	mov    QWORD PTR [rsp+0x30],rbp
  41a9b8:	mov    QWORD PTR [rsp+0x28],rdi
  41a9bd:	mov    QWORD PTR [rsp+0x20],rsi
  41a9c2:	mov    r9,r14
  41a9c5:	mov    edx,0x20
  41a9ca:	xor    ecx,ecx
  41a9cc:	call   0x4226c0
  41a9d1:	jmp    0x41a428
  41a9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9e0:	mov    rax,QWORD PTR [rsp+0x1d0]
  41a9e8:	movabs rdx,0x8000000000000000
  41a9f2:	mov    QWORD PTR [rsp+0x120],0x0
  41a9fe:	mov    QWORD PTR [rsp+0x128],0x0
  41aa0a:	mov    QWORD PTR [rsp+0x130],0x0
  41aa16:	mov    QWORD PTR [rsp+0x138],0x0
  41aa22:	cmp    rax,rdx
  41aa25:	je     0x41ad60
  41aa2b:	pxor   xmm0,xmm0
  41aa2f:	lea    rbp,[rsp+0x120]
  41aa37:	lea    r8,[rip+0x1fe88]        # 0x43a8c6
  41aa3e:	pxor   xmm1,xmm1
  41aa42:	mov    edx,0x20
  41aa47:	mov    rcx,rbp
  41aa4a:	cvtsi2sd xmm0,DWORD PTR [r12+0x84]
  41aa54:	cvtsi2sd xmm1,DWORD PTR [r12+0x88]
  41aa5e:	divsd  xmm0,xmm1
  41aa62:	pxor   xmm1,xmm1
  41aa66:	cvtsi2sd xmm1,rax
  41aa6b:	mulsd  xmm0,xmm1
  41aa6f:	movapd xmm3,xmm0
  41aa73:	movq   r9,xmm0
  41aa78:	call   0x414ae0
  41aa7d:	mov    r9,QWORD PTR [rsp+0x1d0]
  41aa85:	movabs rax,0x8000000000000000
  41aa8f:	mov    QWORD PTR [rsp+0x100],0x0
  41aa9b:	mov    QWORD PTR [rsp+0x108],0x0
  41aaa7:	mov    QWORD PTR [rsp+0x110],0x0
  41aab3:	lea    rdi,[rsp+0x100]
  41aabb:	mov    QWORD PTR [rsp+0x118],0x0
  41aac7:	cmp    r9,rax
  41aaca:	je     0x41ad41
  41aad0:	lea    r8,[rip+0x1fdf4]        # 0x43a8cb
  41aad7:	mov    edx,0x20
  41aadc:	mov    rcx,rdi
  41aadf:	call   0x414ae0
  41aae4:	mov    rax,QWORD PTR [rsp+0x1c8]
  41aaec:	movabs rdx,0x8000000000000000
  41aaf6:	mov    QWORD PTR [rsp+0xe0],0x0
  41ab02:	mov    QWORD PTR [rsp+0xe8],0x0
  41ab0e:	mov    QWORD PTR [rsp+0xf0],0x0
  41ab1a:	mov    QWORD PTR [rsp+0xf8],0x0
  41ab26:	cmp    rax,rdx
  41ab29:	je     0x41ad20
  41ab2f:	pxor   xmm0,xmm0
  41ab33:	lea    rsi,[rsp+0xe0]
  41ab3b:	lea    r8,[rip+0x1fd84]        # 0x43a8c6
  41ab42:	pxor   xmm1,xmm1
  41ab46:	mov    edx,0x20
  41ab4b:	mov    rcx,rsi
  41ab4e:	cvtsi2sd xmm0,DWORD PTR [r12+0x84]
  41ab58:	cvtsi2sd xmm1,DWORD PTR [r12+0x88]
  41ab62:	divsd  xmm0,xmm1
  41ab66:	pxor   xmm1,xmm1
  41ab6a:	cvtsi2sd xmm1,rax
  41ab6f:	mulsd  xmm0,xmm1
  41ab73:	movapd xmm3,xmm0
  41ab77:	movq   r9,xmm0
  41ab7c:	call   0x414ae0
  41ab81:	mov    r9,QWORD PTR [rsp+0x1c8]
  41ab89:	movabs rax,0x8000000000000000
  41ab93:	mov    QWORD PTR [rsp+0xc0],0x0
  41ab9f:	mov    QWORD PTR [rsp+0xc8],0x0
  41abab:	mov    QWORD PTR [rsp+0xd0],0x0
  41abb7:	lea    r14,[rsp+0xc0]
  41abbf:	mov    QWORD PTR [rsp+0xd8],0x0
  41abcb:	cmp    r9,rax
  41abce:	je     0x41ad05
  41abd4:	lea    r8,[rip+0x1fcf0]        # 0x43a8cb
  41abdb:	mov    edx,0x20
  41abe0:	mov    rcx,r14
  41abe3:	call   0x414ae0
  41abe8:	lea    r8,[rip+0x203d1]        # 0x43afc0
  41abef:	mov    QWORD PTR [rsp+0x30],rbp
  41abf4:	mov    QWORD PTR [rsp+0x28],rdi
  41abf9:	mov    QWORD PTR [rsp+0x20],rsi
  41abfe:	mov    r9,r14
  41ac01:	mov    edx,0x20
  41ac06:	xor    ecx,ecx
  41ac08:	call   0x4226c0
  41ac0d:	jmp    0x41a3e7
  41ac12:	cmp    DWORD PTR [rbp+0x18c],0x1
  41ac19:	mov    rdi,QWORD PTR [rsp+0x50]
  41ac1e:	sbb    eax,eax
  41ac20:	not    eax
  41ac22:	add    eax,0x3
  41ac25:	mov    DWORD PTR [rdi+0x1cc],eax
  41ac2b:	jmp    0x41a2d1
  41ac30:	mov    rax,QWORD PTR [r12+0x10]
  41ac35:	test   BYTE PTR [rax+0x18],0x20
  41ac39:	jne    0x41a3ff
  41ac3f:	mov    rax,QWORD PTR [rbx+0x28]
  41ac43:	mov    QWORD PTR [rsp+0x1c8],rax
  41ac4b:	jmp    0x41a3ff
  41ac50:	mov    rax,QWORD PTR [rsp+0x50]
  41ac55:	mov    DWORD PTR [rax+0x1cc],0x1
  41ac5f:	jmp    0x41a75a
  41ac64:	lea    r8,[rip+0x1fc55]        # 0x43a8c0
  41ac6b:	mov    rcx,r10
  41ac6e:	mov    edx,0x20
  41ac73:	mov    QWORD PTR [rsp+0x60],r10
  41ac78:	call   0x414ae0
  41ac7d:	mov    r10,QWORD PTR [rsp+0x60]
  41ac82:	jmp    0x41a6a9
  41ac87:	nop    WORD PTR [rax+rax*1+0x0]
  41ac90:	lea    rax,[rsp+0xa0]
  41ac98:	lea    r8,[rip+0x1fc21]        # 0x43a8c0
  41ac9f:	mov    edx,0x20
  41aca4:	mov    rcx,rax
  41aca7:	mov    QWORD PTR [rsp+0x58],rax
  41acac:	call   0x414ae0
  41acb1:	jmp    0x41a639
  41acb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acc0:	cmp    QWORD PTR [rsp+0x2e0],0x0
  41acc9:	setne  BYTE PTR [rsp+0x6f]
  41acce:	xor    eax,eax
  41acd0:	cmp    esi,DWORD PTR [rsp+0x4c]
  41acd4:	movzx  edi,BYTE PTR [rsp+0x6f]
  41acd9:	sete   al
  41acdc:	and    eax,edi
  41acde:	test   esi,esi
  41ace0:	mov    DWORD PTR [rbx+0x70],eax
  41ace3:	jg     0x41a0f1
  41ace9:	jmp    0x41a49d
  41acee:	xchg   ax,ax
  41acf0:	mov    edx,DWORD PTR [rbx+0x70]
  41acf3:	mov    eax,0x1
  41acf8:	test   edx,edx
  41acfa:	jne    0x41a064
  41ad00:	jmp    0x41a062
  41ad05:	lea    r8,[rip+0x1fbb4]        # 0x43a8c0
  41ad0c:	mov    edx,0x20
  41ad11:	mov    rcx,r14
  41ad14:	call   0x414ae0
  41ad19:	jmp    0x41abe8
  41ad1e:	xchg   ax,ax
  41ad20:	lea    rsi,[rsp+0xe0]
  41ad28:	lea    r8,[rip+0x1fb91]        # 0x43a8c0
  41ad2f:	mov    edx,0x20
  41ad34:	mov    rcx,rsi
  41ad37:	call   0x414ae0
  41ad3c:	jmp    0x41ab81
  41ad41:	lea    r8,[rip+0x1fb78]        # 0x43a8c0
  41ad48:	mov    edx,0x20
  41ad4d:	mov    rcx,rdi
  41ad50:	call   0x414ae0
  41ad55:	jmp    0x41aae4
  41ad5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ad60:	lea    rbp,[rsp+0x120]
  41ad68:	lea    r8,[rip+0x1fb51]        # 0x43a8c0
  41ad6f:	mov    edx,0x20
  41ad74:	mov    rcx,rbp
  41ad77:	call   0x414ae0
  41ad7c:	jmp    0x41aa7d
  41ad81:	lea    r8,[rip+0x1fb38]        # 0x43a8c0
  41ad88:	mov    edx,0x20
  41ad8d:	mov    rcx,r14
  41ad90:	call   0x414ae0
  41ad95:	jmp    0x41a9ac
  41ad9a:	nop    WORD PTR [rax+rax*1+0x0]
  41ada0:	lea    rsi,[rsp+0x160]
  41ada8:	lea    r8,[rip+0x1fb11]        # 0x43a8c0
  41adaf:	mov    edx,0x20
  41adb4:	mov    rcx,rsi
  41adb7:	call   0x414ae0
  41adbc:	jmp    0x41a945
  41adc1:	lea    r8,[rip+0x1faf8]        # 0x43a8c0
  41adc8:	mov    edx,0x20
  41adcd:	mov    rcx,rdi
  41add0:	call   0x414ae0
  41add5:	jmp    0x41a8ae
  41adda:	nop    WORD PTR [rax+rax*1+0x0]
  41ade0:	lea    rbp,[rsp+0x1a0]
  41ade8:	lea    r8,[rip+0x1fad1]        # 0x43a8c0
  41adef:	mov    edx,0x20
  41adf4:	mov    rcx,rbp
  41adf7:	call   0x414ae0
  41adfc:	jmp    0x41a847
  41ae01:	cmp    esi,0xff
  41ae07:	je     0x41a003
  41ae0d:	lea    rax,[rip+0x20097]        # 0x43aeab
  41ae14:	lea    r9,[rip+0x20070]        # 0x43ae8b
  41ae1b:	lea    r8,[rip+0x2006b]        # 0x43ae8d
  41ae22:	xor    edx,edx
  41ae24:	xor    ecx,ecx
  41ae26:	mov    DWORD PTR [rsp+0x28],0x426
  41ae2e:	mov    QWORD PTR [rsp+0x20],rax
  41ae33:	call   0x4226c0
  41ae38:	call   0x42fbf8
  41ae3d:	nop    DWORD PTR [rax]
  41ae40:	mov    r13d,DWORD PTR [rbx+0x70]
  41ae44:	xor    eax,eax
  41ae46:	test   r13d,r13d
  41ae49:	setne  al
  41ae4c:	jmp    0x41a0ab
  41ae51:	mov    rax,QWORD PTR [rbx+0x68]
  41ae55:	lea    r8,[rip+0x2005c]        # 0x43aeb8
  41ae5c:	mov    r9d,edi
  41ae5f:	mov    edx,0x28
  41ae64:	xor    ecx,ecx
  41ae66:	add    DWORD PTR [rip+0x273f3],0x1        # 0x442260
  41ae6d:	mov    rax,QWORD PTR [rax+0xc8]
  41ae74:	mov    QWORD PTR [rsp+0x28],rax
  41ae79:	mov    rax,QWORD PTR [rbx+0x10]
  41ae7d:	mov    eax,DWORD PTR [rax]
  41ae7f:	mov    DWORD PTR [rsp+0x20],eax
  41ae83:	call   0x4226c0
  41ae88:	jmp    0x41a062
  41ae8d:	nop    DWORD PTR [rax]
  41ae90:	mov    esi,0x2
  41ae95:	jmp    0x419df7
  41ae9a:	lea    rcx,[rbx+0x68]
  41ae9e:	call   0x4227b0
  41aea3:	jmp    0x41a1fe
  41aea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41aeb0:	xor    edx,edx
  41aeb2:	xor    eax,eax
  41aeb4:	jmp    0x41a018
  41aeb9:	nop    DWORD PTR [rax+0x0]
  41aec0:	movsd  xmm0,QWORD PTR [rip+0x214f8]        # 0x43c3c0
  41aec8:	ucomisd xmm0,xmm7
  41aecc:	jb     0x419ff9
  41aed2:	mov    edi,DWORD PTR [rbx+0x1c]
  41aed5:	xor    edx,edx
  41aed7:	xor    eax,eax
  41aed9:	jmp    0x41a018
  41aede:	xchg   ax,ax
  41aee0:	cmp    QWORD PTR [rbx+0x118],0x0
  41aee8:	jne    0x419dba
  41aeee:	cmp    QWORD PTR [rsp+0x2e0],0x0
  41aef7:	je     0x419dba
  41aefd:	test   rbp,rbp
  41af00:	je     0x419dba
  41af06:	mov    rcx,QWORD PTR [rsp+0x2e0]
  41af0e:	call   0x422790
  41af13:	mov    rdx,QWORD PTR [rbp+0x8]
  41af17:	pxor   xmm0,xmm0
  41af1b:	pxor   xmm2,xmm2
  41af1f:	pxor   xmm1,xmm1
  41af23:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41af28:	cvtsi2sd xmm2,DWORD PTR [rdx+0x34]
  41af2d:	divsd  xmm0,xmm2
  41af31:	cvtsi2sd xmm1,rax
  41af36:	pxor   xmm2,xmm2
  41af3a:	mulsd  xmm0,xmm1
  41af3e:	cvtsi2sd xmm2,DWORD PTR [r12+0x88]
  41af48:	pxor   xmm1,xmm1
  41af4c:	cvtsi2sd xmm1,DWORD PTR [r12+0x84]
  41af56:	divsd  xmm1,xmm2
  41af5a:	divsd  xmm0,xmm1
  41af5e:	cvtsd2ss xmm0,xmm0
  41af62:	cvtss2si eax,xmm0
  41af66:	test   eax,eax
  41af68:	jle    0x419dc9
  41af6e:	mov    rcx,QWORD PTR [rsp+0x2e0]
  41af76:	pxor   xmm8,xmm8
  41af7b:	call   0x422790
  41af80:	mov    rdx,QWORD PTR [rbp+0x8]
  41af84:	pxor   xmm0,xmm0
  41af88:	pxor   xmm2,xmm2
  41af8c:	pxor   xmm1,xmm1
  41af90:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41af95:	cvtsi2sd xmm2,DWORD PTR [rdx+0x34]
  41af9a:	divsd  xmm0,xmm2
  41af9e:	cvtsi2sd xmm1,rax
  41afa3:	pxor   xmm2,xmm2
  41afa7:	mulsd  xmm0,xmm1
  41afab:	cvtsi2sd xmm2,DWORD PTR [r12+0x88]
  41afb5:	pxor   xmm1,xmm1
  41afb9:	cvtsi2sd xmm1,DWORD PTR [r12+0x84]
  41afc3:	divsd  xmm1,xmm2
  41afc7:	divsd  xmm0,xmm1
  41afcb:	cvtsd2ss xmm0,xmm0
  41afcf:	cvtss2si eax,xmm0
  41afd3:	cvtsi2sd xmm8,eax
  41afd8:	jmp    0x419dc9
  41afdd:	nop    DWORD PTR [rax]
  41afe0:	mov    eax,DWORD PTR [rbx+0x78]
  41afe3:	mov    ecx,DWORD PTR [rbx+0x7c]
  41afe6:	mov    edx,DWORD PTR [rbx+0x74]
  41afe9:	mov    edi,eax
  41afeb:	cmp    edx,edi
  41afed:	cmovg  eax,edx
  41aff0:	cmovg  edx,edi
  41aff3:	cmp    edx,ecx
  41aff5:	cmovl  edx,ecx
  41aff8:	cmp    eax,edx
  41affa:	cmovg  eax,edx
  41affd:	mov    edi,DWORD PTR [rbx+0x1c]
  41b000:	movsxd rdx,eax
  41b003:	jmp    0x41a018
  41b008:	nop    DWORD PTR [rax+rax*1+0x0]
  41b010:	lea    r9d,[rsi-0x1]
  41b014:	lea    r8,[rip+0x1fed5]        # 0x43aef0
  41b01b:	mov    edx,0x10
  41b020:	xor    ecx,ecx
  41b022:	call   0x4226c0
  41b027:	add    DWORD PTR [rip+0x27232],0x1        # 0x442260
  41b02e:	jmp    0x41a1fe
  41b033:	mov    edx,0x1
  41b038:	xor    eax,eax
  41b03a:	jmp    0x41a018
  41b03f:	test   rbp,rbp
  41b042:	je     0x41b05c
  41b044:	movsxd rdx,DWORD PTR [rbp+0x0]
  41b048:	mov    rax,QWORD PTR [rip+0x27099]        # 0x4420e8
  41b04f:	mov    rax,QWORD PTR [rax+rdx*8]
  41b053:	mov    rdx,QWORD PTR [rax]
  41b056:	cmp    DWORD PTR [rdx+0x2c],0x1
  41b05a:	je     0x41b08e
  41b05c:	mov    rax,QWORD PTR [rip+0x2268d]        # 0x43d6f0
  41b063:	mov    eax,DWORD PTR [rax]
  41b065:	test   eax,eax
  41b067:	jne    0x41b095
  41b069:	pxor   xmm10,xmm10
  41b06e:	ucomisd xmm10,xmm6
  41b073:	jbe    0x419e27
  41b079:	mov    esi,0x1
  41b07e:	ucomisd xmm7,xmm10
  41b083:	ja     0x419fa1
  41b089:	jmp    0x419e07
  41b08e:	cmp    QWORD PTR [rax+0x18],0x0
  41b093:	jne    0x41b05c
  41b095:	pxor   xmm10,xmm10
  41b09a:	ucomisd xmm10,xmm6
  41b09f:	jbe    0x419eb0
  41b0a5:	mov    esi,0xfe
  41b0aa:	jmp    0x41b07e
  41b0ac:	lea    r8,[rip+0x1fd6c]        # 0x43ae1f
  41b0b3:	mov    edx,0x18
  41b0b8:	xor    ecx,ecx
  41b0ba:	call   0x4226c0
  41b0bf:	jmp    0x419fe5
  41b0c4:	movsxd rdx,esi
  41b0c7:	xor    eax,eax
  41b0c9:	jmp    0x41a018
  41b0ce:	call   0x4227c0
  41b0d3:	mov    rcx,rax
  41b0d6:	mov    QWORD PTR [rbx+0x68],rax
  41b0da:	jmp    0x41a4aa
  41b0df:	lea    r8,[rip+0x1fec3]        # 0x43afa9
  41b0e6:	xor    ecx,ecx
  41b0e8:	mov    edx,0x8
  41b0ed:	call   0x4226c0
  41b0f2:	mov    ecx,0x1
  41b0f7:	call   0x401cb0
  41b0fc:	nop
  41b0fd:	nop    DWORD PTR [rax]
  41b100:	push   r15
  41b102:	push   r14
  41b104:	push   r13
  41b106:	push   r12
  41b108:	push   rbp
  41b109:	push   rdi
  41b10a:	push   rsi
  41b10b:	push   rbx
  41b10c:	sub    rsp,0x528
  41b113:	movaps XMMWORD PTR [rsp+0x510],xmm6
  41b11b:	xor    eax,eax
  41b11d:	mov    ecx,0x80
  41b122:	lea    rdi,[rsp+0x110]
  41b12a:	mov    QWORD PTR [rsp+0x70],rdi
  41b12f:	rep stos QWORD PTR es:[rdi],rax
  41b132:	mov    ecx,DWORD PTR [rip+0x285b0]        # 0x4436e8
  41b138:	test   ecx,ecx
  41b13a:	jle    0x41b20d
  41b140:	mov    eax,DWORD PTR [rip+0x26faa]        # 0x4420f0
  41b146:	mov    rdx,QWORD PTR [rip+0x26fab]        # 0x4420f8
  41b14d:	sub    ecx,0x1
  41b150:	mov    rbx,QWORD PTR [rip+0x28599]        # 0x4436f0
  41b157:	lea    esi,[rax-0x1]
  41b15a:	lea    rdi,[rbx+rcx*8+0x8]
  41b15f:	movsxd rax,esi
  41b162:	shl    rax,0x3
  41b166:	lea    rbp,[rdx+rax*1]
  41b16a:	lea    r12,[rdx+rax*1-0x8]
  41b16f:	nop
  41b170:	mov    r11,QWORD PTR [rbx]
  41b173:	mov    edx,DWORD PTR [r11+0x38]
  41b177:	test   edx,edx
  41b179:	jle    0x41b200
  41b17f:	mov    rax,QWORD PTR [r11+0x30]
  41b183:	sub    edx,0x1
  41b186:	lea    r9,[rax+rdx*8+0x8]
  41b18b:	jmp    0x41b199
  41b18d:	nop    DWORD PTR [rax]
  41b190:	add    rax,0x8
  41b194:	cmp    rax,r9
  41b197:	je     0x41b200
  41b199:	mov    rdx,QWORD PTR [rax]
  41b19c:	mov    rdx,QWORD PTR [rdx+0x8]
  41b1a0:	test   rdx,rdx
  41b1a3:	je     0x41b190
  41b1a5:	mov    r13d,DWORD PTR [rdx+0x8]
  41b1a9:	test   r13d,r13d
  41b1ac:	jns    0x41b190
  41b1ae:	cmp    DWORD PTR [r11+0x28],0x1
  41b1b3:	jne    0x41b190
  41b1b5:	test   esi,esi
  41b1b7:	js     0x41bf6e
  41b1bd:	mov    rcx,QWORD PTR [r11+0x20]
  41b1c1:	mov    rcx,QWORD PTR [rcx]
  41b1c4:	mov    r10,QWORD PTR [rcx+0x8]
  41b1c8:	cmp    r10,QWORD PTR [rbp+0x0]
  41b1cc:	je     0x41bf6e
  41b1d2:	mov    r8,r12
  41b1d5:	mov    ecx,esi
  41b1d7:	jmp    0x41b1ea
  41b1d9:	nop    DWORD PTR [rax+0x0]
  41b1e0:	sub    r8,0x8
  41b1e4:	cmp    QWORD PTR [r8+0x8],r10
  41b1e8:	je     0x41b1f2
  41b1ea:	sub    ecx,0x1
  41b1ed:	cmp    ecx,0xffffffff
  41b1f0:	jne    0x41b1e0
  41b1f2:	add    rax,0x8
  41b1f6:	mov    DWORD PTR [rdx+0x8],ecx
  41b1f9:	cmp    rax,r9
  41b1fc:	jne    0x41b199
  41b1fe:	xchg   ax,ax
  41b200:	add    rbx,0x8
  41b204:	cmp    rbx,rdi
  41b207:	jne    0x41b170
  41b20d:	mov    edx,DWORD PTR [rip+0x26ecd]        # 0x4420e0
  41b213:	xor    r12d,r12d
  41b216:	xor    ebp,ebp
  41b218:	test   edx,edx
  41b21a:	jle    0x41b274
  41b21c:	nop    DWORD PTR [rax+0x0]
  41b220:	mov    rax,QWORD PTR [rip+0x26ec1]        # 0x4420e8
  41b227:	mov    rsi,QWORD PTR [rax+r12*1]
  41b22b:	mov    r11d,DWORD PTR [rsi+0x50]
  41b22f:	test   r11d,r11d
  41b232:	je     0x41b269
  41b234:	mov    r10d,DWORD PTR [rsi+0x48]
  41b238:	test   r10d,r10d
  41b23b:	jle    0x41b269
  41b23d:	xor    ebx,ebx
  41b23f:	nop
  41b240:	mov    eax,DWORD PTR [rsi+0x10]
  41b243:	mov    rdx,QWORD PTR [rip+0x26eae]        # 0x4420f8
  41b24a:	add    eax,ebx
  41b24c:	add    ebx,0x1
  41b24f:	cdqe   
  41b251:	mov    rdi,QWORD PTR [rdx+rax*8]
  41b255:	call   0x4226d0
  41b25a:	cmp    DWORD PTR [rsi+0x48],ebx
  41b25d:	mov    QWORD PTR [rdi+0x40],rax
  41b261:	jg     0x41b240
  41b263:	mov    edx,DWORD PTR [rip+0x26e77]        # 0x4420e0
  41b269:	add    ebp,0x1
  41b26c:	add    r12,0x8
  41b270:	cmp    ebp,edx
  41b272:	jl     0x41b220
  41b274:	mov    r8d,DWORD PTR [rip+0x26e55]        # 0x4420d0
  41b27b:	test   r8d,r8d
  41b27e:	jle    0x41cf65
  41b284:	xor    r14d,r14d
  41b287:	xor    r12d,r12d
  41b28a:	mov    DWORD PTR [rsp+0x5c],0x0
  41b292:	jmp    0x41b2a5
  41b294:	add    r12d,0x1
  41b298:	add    r14,0x8
  41b29c:	cmp    r12d,r8d
  41b29f:	jge    0x41b80b
  41b2a5:	mov    rax,QWORD PTR [rip+0x26e2c]        # 0x4420d8
  41b2ac:	mov    rcx,QWORD PTR [rip+0x26e15]        # 0x4420c8
  41b2b3:	mov    r15,QWORD PTR [rax+r14*1]
  41b2b7:	movsxd rax,DWORD PTR [r15]
  41b2ba:	mov    rdx,rax
  41b2bd:	mov    rax,QWORD PTR [rcx+rax*8]
  41b2c1:	mov    rsi,QWORD PTR [rax]
  41b2c4:	movsxd rax,DWORD PTR [r15+0x8]
  41b2c8:	test   eax,eax
  41b2ca:	js     0x41b610
  41b2d0:	mov    r9,QWORD PTR [rip+0x26e21]        # 0x4420f8
  41b2d7:	mov    rbp,QWORD PTR [r9+rax*8]
  41b2db:	cmp    QWORD PTR [r15+0x168],0x0
  41b2e3:	jne    0x41b294
  41b2e5:	mov    r10d,DWORD PTR [r15+0x160]
  41b2ec:	test   r10d,r10d
  41b2ef:	je     0x41b620
  41b2f5:	mov    rax,QWORD PTR [r15+0x10]
  41b2f9:	test   rbp,rbp
  41b2fc:	mov    rbx,QWORD PTR [rax+0x8]
  41b300:	je     0x41c07e
  41b306:	mov    rdx,QWORD PTR [rbp+0x8]
  41b30a:	mov    rdi,QWORD PTR [rbp+0x20]
  41b30e:	cmp    QWORD PTR [r15+0x108],0x0
  41b316:	mov    edx,DWORD PTR [rdx+0x50]
  41b319:	mov    QWORD PTR [rsp+0x50],rdi
  41b31e:	mov    DWORD PTR [rax+0x50],edx
  41b321:	mov    eax,DWORD PTR [rdi+0x374]
  41b327:	mov    DWORD PTR [rbx+0x374],eax
  41b32d:	mov    eax,DWORD PTR [rdi+0x1c4]
  41b333:	mov    DWORD PTR [rbx+0x1c4],eax
  41b339:	jne    0x41c0c9
  41b33f:	mov    rcx,rdi
  41b342:	movsxd rdi,DWORD PTR [rdi+0x80]
  41b349:	mov    rax,rdi
  41b34c:	add    rdi,0x20
  41b350:	cmp    rdi,0x7fffffff
  41b357:	ja     0x41cf72
  41b35d:	mov    edx,DWORD PTR [rcx+0x38]
  41b360:	mov    r9d,DWORD PTR [rbx+0x3c]
  41b364:	mov    DWORD PTR [rbx+0x38],edx
  41b367:	mov    edx,DWORD PTR [rcx+0xc]
  41b36a:	test   r9d,r9d
  41b36d:	mov    DWORD PTR [rbx+0xc],edx
  41b370:	jne    0x41b3cc
  41b372:	mov    rdx,QWORD PTR [rsi+0x10]
  41b376:	mov    rcx,QWORD PTR [rdx+0x30]
  41b37a:	test   rcx,rcx
  41b37d:	je     0x41b3c1
  41b37f:	mov    rax,QWORD PTR [rsp+0x50]
  41b384:	mov    edx,DWORD PTR [rax+0x3c]
  41b387:	call   0x422308
  41b38c:	cmp    eax,DWORD PTR [rbx+0x38]
  41b38f:	je     0x41b3b6
  41b391:	mov    rax,QWORD PTR [rsp+0x50]
  41b396:	lea    r8,[rsp+0xd0]
  41b39e:	mov    edx,DWORD PTR [rax+0x38]
  41b3a1:	mov    rax,QWORD PTR [rsi+0x10]
  41b3a5:	mov    rcx,QWORD PTR [rax+0x30]
  41b3a9:	call   0x422300
  41b3ae:	test   eax,eax
  41b3b0:	jne    0x41c924
  41b3b6:	mov    rax,QWORD PTR [rsp+0x50]
  41b3bb:	mov    eax,DWORD PTR [rax+0x80]
  41b3c1:	mov    rcx,QWORD PTR [rsp+0x50]
  41b3c6:	mov    edx,DWORD PTR [rcx+0x3c]
  41b3c9:	mov    DWORD PTR [rbx+0x3c],edx
  41b3cc:	mov    rcx,QWORD PTR [rsp+0x50]
  41b3d1:	test   eax,eax
  41b3d3:	mov    edx,DWORD PTR [rcx+0x60]
  41b3d6:	mov    DWORD PTR [rbx+0x60],edx
  41b3d9:	mov    edx,DWORD PTR [rcx+0x268]
  41b3df:	mov    DWORD PTR [rbx+0x268],edx
  41b3e5:	mov    edx,DWORD PTR [rcx+0x24c]
  41b3eb:	mov    DWORD PTR [rbx+0x24c],edx
  41b3f1:	mov    edx,DWORD PTR [rcx+0x1cc]
  41b3f7:	mov    DWORD PTR [rbx+0x1cc],edx
  41b3fd:	jne    0x41c4af
  41b403:	mov    DWORD PTR [rbx+0x80],eax
  41b409:	mov    rax,QWORD PTR [rsp+0x50]
  41b40e:	lea    rdi,[rip+0x1fa06]        # 0x43ae1b
  41b415:	mov    r13,QWORD PTR [rbp+0x8]
  41b419:	mov    ecx,0x4
  41b41e:	mov    eax,DWORD PTR [rax+0x370]
  41b424:	mov    DWORD PTR [rbx+0x370],eax
  41b42a:	mov    rax,QWORD PTR [r13+0x30]
  41b42e:	mov    QWORD PTR [rbx+0x84],rax
  41b435:	mov    rax,QWORD PTR [rsi+0x10]
  41b439:	mov    r8,QWORD PTR [rax]
  41b43c:	mov    rsi,r8
  41b43f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b441:	jne    0x41bf75
  41b447:	mov    rax,QWORD PTR [rip+0x22292]        # 0x43d6e0
  41b44e:	mov    eax,DWORD PTR [rax]
  41b450:	test   eax,eax
  41b452:	js     0x41c7db
  41b458:	cmp    eax,0x2
  41b45b:	je     0x41cba1
  41b461:	test   eax,eax
  41b463:	jne    0x41b495
  41b465:	mov    rdi,QWORD PTR [rsp+0x50]
  41b46a:	mov    rax,QWORD PTR [rdi+0x84]
  41b471:	mov    QWORD PTR [rbx+0x84],rax
  41b478:	imul   eax,DWORD PTR [rdi+0x8c]
  41b47f:	shl    DWORD PTR [rbx+0x88],1
  41b485:	mov    DWORD PTR [rbx+0x8c],0x2
  41b48f:	mov    DWORD PTR [rbx+0x84],eax
  41b495:	mov    eax,DWORD PTR [rip+0x20337]        # 0x43b7d2
  41b49b:	cmp    DWORD PTR [rbx+0x3c],eax
  41b49e:	je     0x41c4e7
  41b4a4:	mov    eax,DWORD PTR [r15+0x80]
  41b4ab:	test   eax,eax
  41b4ad:	jne    0x41c0f9
  41b4b3:	mov    rax,QWORD PTR [rbp+0x90]
  41b4ba:	test   eax,eax
  41b4bc:	mov    QWORD PTR [r15+0x80],rax
  41b4c3:	jne    0x41c0f9
  41b4c9:	movsxd r9,DWORD PTR [rbx+0x88]
  41b4d0:	movsxd r8,DWORD PTR [rbx+0x84]
  41b4d7:	lea    rdx,[rbx+0x88]
  41b4de:	lea    rcx,[rbx+0x84]
  41b4e5:	mov    QWORD PTR [rsp+0x20],0x7fffffff
  41b4ee:	call   0x4225a0
  41b4f3:	mov    rax,QWORD PTR [rbp+0x8]
  41b4f7:	mov    eax,DWORD PTR [rax+0xd8]
  41b4fd:	test   eax,eax
  41b4ff:	je     0x41b5df
  41b505:	mov    rsi,QWORD PTR [r15+0x10]
  41b509:	xor    ecx,ecx
  41b50b:	movsxd rdx,eax
  41b50e:	mov    r8d,0x10
  41b514:	call   0x4225b8
  41b519:	mov    QWORD PTR [rsi+0xd0],rax
  41b520:	mov    rsi,QWORD PTR [r15+0x10]
  41b524:	cmp    QWORD PTR [rsi+0xd0],0x0
  41b52c:	je     0x41c602
  41b532:	mov    rcx,QWORD PTR [rbp+0x8]
  41b536:	mov    DWORD PTR [rsi+0xd8],0x0
  41b540:	cmp    DWORD PTR [rcx+0xd8],0x0
  41b547:	jle    0x41b5df
  41b54d:	mov    rdx,rsi
  41b550:	xor    eax,eax
  41b552:	xor    r13d,r13d
  41b555:	mov    r8d,DWORD PTR [r15+0x90]
  41b55c:	mov    rsi,r13
  41b55f:	movsxd rdi,eax
  41b562:	shl    rsi,0x4
  41b566:	shl    rdi,0x4
  41b56a:	add    rsi,QWORD PTR [rcx+0xd0]
  41b571:	add    rdi,QWORD PTR [rdx+0xd0]
  41b578:	test   r8d,r8d
  41b57b:	je     0x41b583
  41b57d:	cmp    DWORD PTR [rsi+0xc],0x5
  41b581:	je     0x41b5ca
  41b583:	movsxd rcx,DWORD PTR [rsi+0x8]
  41b587:	call   0x422678
  41b58c:	test   rax,rax
  41b58f:	mov    QWORD PTR [rdi],rax
  41b592:	je     0x41c602
  41b598:	movsxd r8,DWORD PTR [rsi+0x8]
  41b59c:	mov    rdx,QWORD PTR [rsi]
  41b59f:	mov    rcx,rax
  41b5a2:	call   0x42fb40
  41b5a7:	mov    eax,DWORD PTR [rsi+0x8]
  41b5aa:	mov    rdx,QWORD PTR [r15+0x10]
  41b5ae:	mov    rcx,QWORD PTR [rbp+0x8]
  41b5b2:	mov    DWORD PTR [rdi+0x8],eax
  41b5b5:	mov    eax,DWORD PTR [rsi+0xc]
  41b5b8:	mov    DWORD PTR [rdi+0xc],eax
  41b5bb:	mov    eax,DWORD PTR [rdx+0xd8]
  41b5c1:	add    eax,0x1
  41b5c4:	mov    DWORD PTR [rdx+0xd8],eax
  41b5ca:	lea    r8d,[r13+0x1]
  41b5ce:	add    r13,0x1
  41b5d2:	cmp    r8d,DWORD PTR [rcx+0xd8]
  41b5d9:	jl     0x41b555
  41b5df:	mov    ecx,DWORD PTR [rbx+0x38]
  41b5e2:	call   0x4223f8
  41b5e7:	mov    QWORD PTR [r15+0x188],rax
  41b5ee:	mov    eax,DWORD PTR [rbx+0xc]
  41b5f1:	add    eax,0x1
  41b5f4:	cmp    eax,0x5
  41b5f7:	ja     0x41c0f4
  41b5fd:	lea    rdx,[rip+0x201d4]        # 0x43b7d8
  41b604:	movsxd rax,DWORD PTR [rdx+rax*4]
  41b608:	add    rdx,rax
  41b60b:	jmp    rdx
  41b60d:	nop    DWORD PTR [rax]
  41b610:	xor    ebp,ebp
  41b612:	jmp    0x41b2db
  41b617:	nop    WORD PTR [rax+rax*1+0x0]
  41b620:	test   rbp,rbp
  41b623:	mov    rbx,QWORD PTR [r15+0x48]
  41b627:	je     0x41c07e
  41b62d:	mov    rax,QWORD PTR [rbp+0x20]
  41b631:	mov    rdi,rax
  41b634:	mov    QWORD PTR [rsp+0x50],rax
  41b639:	mov    rax,QWORD PTR [rbp+0x8]
  41b63d:	mov    r8d,DWORD PTR [rax+0x50]
  41b641:	mov    rax,QWORD PTR [r15+0x10]
  41b645:	mov    DWORD PTR [rax+0x50],r8d
  41b649:	mov    eax,DWORD PTR [rdi+0x374]
  41b64f:	mov    DWORD PTR [rbx+0x374],eax
  41b655:	mov    eax,DWORD PTR [rdi+0x1c4]
  41b65b:	mov    DWORD PTR [rbx+0x1c4],eax
  41b661:	cmp    QWORD PTR [r15+0x50],0x0
  41b666:	je     0x41cc36
  41b66c:	mov    rax,QWORD PTR [r15+0x10]
  41b670:	mov    rdi,QWORD PTR [rcx+rdx*8]
  41b674:	lea    rdx,[rip+0x1fa93]        # 0x43b10e
  41b67b:	xor    r9d,r9d
  41b67e:	xor    r8d,r8d
  41b681:	mov    DWORD PTR [rsp+0x90],0x0
  41b68c:	mov    DWORD PTR [rsp+0xd0],0x0
  41b697:	mov    rcx,QWORD PTR [rax+0x60]
  41b69b:	call   0x422818
  41b6a0:	test   rax,rax
  41b6a3:	je     0x41cc76
  41b6a9:	cmp    QWORD PTR [r15+0x108],0x0
  41b6b1:	je     0x41cb70
  41b6b7:	mov    eax,DWORD PTR [rbx+0xc]
  41b6ba:	test   eax,eax
  41b6bc:	jne    0x41b765
  41b6c2:	cmp    DWORD PTR [r15+0x80],0x0
  41b6ca:	je     0x41c7c0
  41b6d0:	test   rbp,rbp
  41b6d3:	je     0x41b73b
  41b6d5:	cmp    DWORD PTR [r15+0x80],0x0
  41b6dd:	jne    0x41b73b
  41b6df:	mov    rax,QWORD PTR [rbp+0x90]
  41b6e6:	test   eax,eax
  41b6e8:	mov    QWORD PTR [r15+0x80],rax
  41b6ef:	jne    0x41b73b
  41b6f1:	mov    rax,QWORD PTR [rbp+0x8]
  41b6f5:	mov    rax,QWORD PTR [rax+0x1e0]
  41b6fc:	test   eax,eax
  41b6fe:	mov    QWORD PTR [r15+0x80],rax
  41b705:	jne    0x41b73b
  41b707:	mov    eax,DWORD PTR [r15+0x4]
  41b70b:	mov    DWORD PTR [r15+0x80],0x19
  41b716:	lea    r8,[rip+0x1fa33]        # 0x43b150
  41b71d:	mov    DWORD PTR [r15+0x84],0x1
  41b728:	mov    edx,0x18
  41b72d:	xor    ecx,ecx
  41b72f:	mov    DWORD PTR [rsp+0x20],eax
  41b733:	mov    r9d,DWORD PTR [r15]
  41b736:	call   0x4226c0
  41b73b:	mov    rax,QWORD PTR [r15+0x50]
  41b73f:	test   rax,rax
  41b742:	je     0x41b75b
  41b744:	mov    rdx,QWORD PTR [rax+0x20]
  41b748:	test   rdx,rdx
  41b74b:	je     0x41b75b
  41b74d:	cmp    DWORD PTR [r15+0x88],0x0
  41b755:	je     0x41c8fe
  41b75b:	cmp    DWORD PTR [rbx+0x38],0xd
  41b75f:	je     0x41c943
  41b765:	mov    eax,DWORD PTR [rbx+0xc]
  41b768:	cmp    eax,0x1
  41b76b:	je     0x41c60c
  41b771:	jle    0x41c252
  41b777:	cmp    eax,0x2
  41b77a:	je     0x41b7b0
  41b77c:	cmp    eax,0x3
  41b77f:	jne    0x41c0f4
  41b785:	cmp    DWORD PTR [rbx+0x94],0x0
  41b78c:	mov    DWORD PTR [rbx+0x84],0x1
  41b796:	mov    DWORD PTR [rbx+0x88],0x3e8
  41b7a0:	je     0x41c8ca
  41b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7b0:	mov    r8,QWORD PTR [r15+0x178]
  41b7b7:	test   r8,r8
  41b7ba:	je     0x41b7f3
  41b7bc:	lea    rax,[rip+0x20a7d]        # 0x43c240
  41b7c3:	lea    rcx,[rsp+0xd0]
  41b7cb:	lea    rdx,[rip+0x206ae]        # 0x43be80
  41b7d2:	mov    QWORD PTR [rsp+0xd0],rax
  41b7da:	mov    rax,QWORD PTR [r15+0x10]
  41b7de:	lea    r9,[rax+0x50]
  41b7e2:	call   0x422648
  41b7e7:	test   eax,eax
  41b7e9:	mov    DWORD PTR [rsp+0x5c],eax
  41b7ed:	js     0x41bccc
  41b7f3:	mov    r8d,DWORD PTR [rip+0x268d6]        # 0x4420d0
  41b7fa:	add    r12d,0x1
  41b7fe:	add    r14,0x8
  41b802:	cmp    r12d,r8d
  41b805:	jl     0x41b2a5
  41b80b:	test   r8d,r8d
  41b80e:	jle    0x41b9d4
  41b814:	xor    edi,edi
  41b816:	xor    ebp,ebp
  41b818:	movabs r12,0x100000000
  41b822:	mov    rax,QWORD PTR [rip+0x268af]        # 0x4420d8
  41b829:	mov    rbx,QWORD PTR [rax+rdi*1]
  41b82d:	mov    r14d,DWORD PTR [rbx+0x18]
  41b831:	test   r14d,r14d
  41b834:	je     0x41c530
  41b83a:	movsxd rax,DWORD PTR [rbx+0x8]
  41b83e:	mov    r13,QWORD PTR [rbx+0x50]
  41b842:	test   eax,eax
  41b844:	js     0x41b8bc
  41b846:	mov    rdx,QWORD PTR [rip+0x268ab]        # 0x4420f8
  41b84d:	mov    rax,QWORD PTR [rdx+rax*8]
  41b851:	test   rax,rax
  41b854:	je     0x41b8bc
  41b856:	mov    rsi,QWORD PTR [rax+0x20]
  41b85a:	test   rsi,rsi
  41b85d:	je     0x41b8bc
  41b85f:	cmp    QWORD PTR [rsi+0x3c8],0x0
  41b867:	je     0x41b8bc
  41b869:	mov    eax,DWORD PTR [rsi+0x3d0]
  41b86f:	mov    r14,QWORD PTR [rbx+0x48]
  41b873:	lea    ecx,[rax+0x1]
  41b876:	movsxd rcx,ecx
  41b879:	call   0x422670
  41b87e:	mov    QWORD PTR [r14+0x3c8],rax
  41b885:	mov    rax,QWORD PTR [rbx+0x48]
  41b889:	mov    rcx,QWORD PTR [rax+0x3c8]
  41b890:	test   rcx,rcx
  41b893:	je     0x41cf7c
  41b899:	movsxd r8,DWORD PTR [rsi+0x3d0]
  41b8a0:	mov    rdx,QWORD PTR [rsi+0x3c8]
  41b8a7:	call   0x42fb40
  41b8ac:	mov    edx,DWORD PTR [rsi+0x3d0]
  41b8b2:	mov    rax,QWORD PTR [rbx+0x48]
  41b8b6:	mov    DWORD PTR [rax+0x3d0],edx
  41b8bc:	mov    rcx,QWORD PTR [rbx+0x128]
  41b8c3:	lea    rdx,[rip+0x1fb6b]        # 0x43b435
  41b8ca:	xor    r9d,r9d
  41b8cd:	xor    r8d,r8d
  41b8d0:	lea    rsi,[rbx+0x128]
  41b8d7:	call   0x422818
  41b8dc:	test   rax,rax
  41b8df:	je     0x41cb52
  41b8e5:	lea    r8,[rip+0x1fb56]        # 0x43b442
  41b8ec:	lea    rdx,[rip+0x1fb51]        # 0x43b444
  41b8f3:	xor    r9d,r9d
  41b8f6:	mov    rcx,rsi
  41b8f9:	call   0x422808
  41b8fe:	mov    rax,QWORD PTR [rbx+0x50]
  41b902:	cmp    DWORD PTR [rax+0x10],0x1
  41b906:	je     0x41c56a
  41b90c:	mov    rcx,QWORD PTR [rbx+0x48]
  41b910:	mov    r8,rsi
  41b913:	mov    rdx,r13
  41b916:	call   0x422330
  41b91b:	test   eax,eax
  41b91d:	js     0x41bc9d
  41b923:	mov    rax,QWORD PTR [rbx+0x50]
  41b927:	cmp    DWORD PTR [rax+0x10],0x1
  41b92b:	je     0x41c5da
  41b931:	mov    rcx,QWORD PTR [rbx+0x128]
  41b938:	lea    rdx,[rip+0x1e594]        # 0x439ed3
  41b93f:	xor    r8d,r8d
  41b942:	mov    r9d,0x2
  41b948:	call   0x422818
  41b94d:	test   rax,rax
  41b950:	jne    0x41d294
  41b956:	mov    rdx,QWORD PTR [rbx+0x48]
  41b95a:	mov    eax,DWORD PTR [rdx+0x60]
  41b95d:	cmp    eax,0x3e7
  41b962:	jg     0x41b97f
  41b964:	test   eax,eax
  41b966:	je     0x41b97f
  41b968:	lea    r8,[rip+0x1fb89]        # 0x43b4f8
  41b96f:	mov    edx,0x18
  41b974:	xor    ecx,ecx
  41b976:	call   0x4226c0
  41b97b:	mov    rdx,QWORD PTR [rbx+0x48]
  41b97f:	mov    rax,QWORD PTR [rbx+0x10]
  41b983:	mov    rcx,QWORD PTR [rax+0x8]
  41b987:	call   0x4223d8
  41b98c:	test   eax,eax
  41b98e:	mov    esi,eax
  41b990:	js     0x41d2b4
  41b996:	mov    r13,QWORD PTR [rbx+0x10]
  41b99a:	mov    rbx,QWORD PTR [rbx+0x48]
  41b99e:	mov    rdx,r12
  41b9a1:	mov    rcx,QWORD PTR [rbx+0x84]
  41b9a8:	call   0x422880
  41b9ad:	mov    rdx,QWORD PTR [rbx+0x10]
  41b9b1:	mov    QWORD PTR [r13+0x30],rax
  41b9b5:	mov    rax,QWORD PTR [r13+0x8]
  41b9b9:	mov    QWORD PTR [rax+0x10],rdx
  41b9bd:	add    ebp,0x1
  41b9c0:	add    rdi,0x8
  41b9c4:	cmp    DWORD PTR [rip+0x26706],ebp        # 0x4420d0
  41b9ca:	jg     0x41b822
  41b9d0:	mov    DWORD PTR [rsp+0x5c],esi
  41b9d4:	mov    edx,DWORD PTR [rip+0x26716]        # 0x4420f0
  41b9da:	test   edx,edx
  41b9dc:	jle    0x41baf3
  41b9e2:	xor    esi,esi
  41b9e4:	xor    edi,edi
  41b9e6:	mov    rax,QWORD PTR [rip+0x2670b]        # 0x4420f8
  41b9ed:	mov    rbx,QWORD PTR [rax+rsi*1]
  41b9f1:	mov    r13d,DWORD PTR [rbx+0x18]
  41b9f5:	test   r13d,r13d
  41b9f8:	je     0x41baca
  41b9fe:	mov    rbp,QWORD PTR [rbx+0x28]
  41ba02:	test   rbp,rbp
  41ba05:	je     0x41d22b
  41ba0b:	mov    rcx,QWORD PTR [rbx+0x20]
  41ba0f:	lea    rax,[rip+0xffffffffffff8f9a]        # 0x4149b0
  41ba16:	lea    rdx,[rip+0x1fbc8]        # 0x43b5e5
  41ba1d:	xor    r9d,r9d
  41ba20:	mov    r8d,0x1
  41ba26:	lea    r12,[rbx+0x88]
  41ba2d:	mov    QWORD PTR [rcx+0xb8],rax
  41ba34:	lea    rax,[rip+0xffffffffffff8f45]        # 0x414980
  41ba3b:	mov    QWORD PTR [rcx+0x58],rbx
  41ba3f:	mov    DWORD PTR [rcx+0x394],0x1
  41ba49:	mov    QWORD PTR [rcx+0x220],rax
  41ba50:	call   0x422608
  41ba55:	mov    rax,QWORD PTR [rbx+0x20]
  41ba59:	cmp    DWORD PTR [rax+0x38],0x17001
  41ba60:	je     0x41cab4
  41ba66:	mov    rcx,QWORD PTR [rbx+0x88]
  41ba6d:	lea    rdx,[rip+0x1f9c1]        # 0x43b435
  41ba74:	xor    r9d,r9d
  41ba77:	xor    r8d,r8d
  41ba7a:	call   0x422818
  41ba7f:	test   rax,rax
  41ba82:	je     0x41cea4
  41ba88:	mov    rcx,QWORD PTR [rbx+0x20]
  41ba8c:	mov    r8,r12
  41ba8f:	mov    rdx,rbp
  41ba92:	call   0x422330
  41ba97:	test   eax,eax
  41ba99:	js     0x41ca17
  41ba9f:	mov    rcx,QWORD PTR [rbx+0x88]
  41baa6:	lea    rdx,[rip+0x1e426]        # 0x439ed3
  41baad:	xor    r8d,r8d
  41bab0:	mov    r9d,0x2
  41bab6:	call   0x422818
  41babb:	test   rax,rax
  41babe:	jne    0x41d294
  41bac4:	mov    edx,DWORD PTR [rip+0x26626]        # 0x4420f0
  41baca:	add    edi,0x1
  41bacd:	movabs rax,0x8000000000000000
  41bad7:	add    rsi,0x8
  41badb:	cmp    edi,edx
  41badd:	mov    QWORD PTR [rbx+0x58],rax
  41bae1:	mov    QWORD PTR [rbx+0x48],rax
  41bae5:	jl     0x41b9e6
  41baeb:	mov    DWORD PTR [rsp+0x5c],0x0
  41baf3:	mov    eax,DWORD PTR [rip+0x265e7]        # 0x4420e0
  41baf9:	test   eax,eax
  41bafb:	jle    0x41bbbb
  41bb01:	mov    rdi,QWORD PTR [rip+0x265e0]        # 0x4420e8
  41bb08:	sub    eax,0x1
  41bb0b:	mov    r9,QWORD PTR [rip+0x265e6]        # 0x4420f8
  41bb12:	lea    rbp,[rdi+rax*8+0x8]
  41bb17:	mov    rbx,QWORD PTR [rdi]
  41bb1a:	mov    rdx,QWORD PTR [rbx]
  41bb1d:	mov    eax,DWORD PTR [rdx+0x46c]
  41bb23:	test   eax,eax
  41bb25:	je     0x41bbae
  41bb2b:	mov    r10,QWORD PTR [rdx+0x470]
  41bb32:	sub    eax,0x1
  41bb35:	lea    rsi,[r10+rax*8+0x8]
  41bb3a:	nop    WORD PTR [rax+rax*1+0x0]
  41bb40:	mov    r11,QWORD PTR [r10]
  41bb43:	mov    r8d,DWORD PTR [r11+0x18]
  41bb47:	test   r8d,r8d
  41bb4a:	je     0x41bb9c
  41bb4c:	mov    ecx,DWORD PTR [rbx+0x10]
  41bb4f:	mov    rdx,QWORD PTR [r11+0x10]
  41bb53:	mov    eax,ecx
  41bb55:	add    eax,DWORD PTR [rdx]
  41bb57:	mov    rax,QWORD PTR [r9+rax*8]
  41bb5b:	mov    r12d,DWORD PTR [rax+0x10]
  41bb5f:	test   r12d,r12d
  41bb62:	je     0x41ca10
  41bb68:	sub    r8d,0x1
  41bb6c:	lea    rax,[rdx+0x4]
  41bb70:	lea    r8,[rdx+r8*4+0x4]
  41bb75:	jmp    0x41bb97
  41bb77:	nop    WORD PTR [rax+rax*1+0x0]
  41bb80:	mov    edx,ecx
  41bb82:	add    edx,DWORD PTR [rax]
  41bb84:	add    rax,0x4
  41bb88:	mov    rdx,QWORD PTR [r9+rdx*8]
  41bb8c:	mov    edx,DWORD PTR [rdx+0x10]
  41bb8f:	test   edx,edx
  41bb91:	je     0x41ca10
  41bb97:	cmp    rax,r8
  41bb9a:	jne    0x41bb80
  41bb9c:	mov    eax,0x30
  41bba1:	add    r10,0x8
  41bba5:	mov    DWORD PTR [r11+0x8],eax
  41bba9:	cmp    r10,rsi
  41bbac:	jne    0x41bb40
  41bbae:	add    rdi,0x8
  41bbb2:	cmp    rdi,rbp
  41bbb5:	jne    0x41bb17
  41bbbb:	cmp    DWORD PTR [rip+0x264fe],0x0        # 0x4420c0
  41bbc2:	mov    ebp,0x1
  41bbc7:	jle    0x41bd0e
  41bbcd:	xor    r14d,r14d
  41bbd0:	mov    ebp,0x1
  41bbd5:	xor    r13d,r13d
  41bbd8:	mov    r15d,0x4
  41bbde:	xor    r12d,r12d
  41bbe1:	jmp    0x41bc0f
  41bbe3:	mov    rdx,QWORD PTR [rbx+0x10]
  41bbe7:	lea    rdi,[rip+0x1e7e4]        # 0x43a3d2
  41bbee:	mov    rcx,r15
  41bbf1:	mov    rsi,QWORD PTR [rdx]
  41bbf4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bbf6:	cmovne ebp,r12d
  41bbfa:	add    r13d,0x1
  41bbfe:	add    r14,0x8
  41bc02:	cmp    DWORD PTR [rip+0x264b7],r13d        # 0x4420c0
  41bc09:	jle    0x41cf5c
  41bc0f:	mov    rax,QWORD PTR [rip+0x264b2]        # 0x4420c8
  41bc16:	lea    rdi,[rip+0xffffffffffff8883]        # 0x4144a0
  41bc1d:	mov    rdx,QWORD PTR [rax+r14*1]
  41bc21:	mov    rbx,QWORD PTR [rdx]
  41bc24:	mov    QWORD PTR [rbx+0x4b0],rdi
  41bc2b:	mov    QWORD PTR [rbx+0x4b8],0x0
  41bc36:	mov    rcx,rbx
  41bc39:	mov    rdx,QWORD PTR [rax+r14*1]
  41bc3d:	add    rdx,0x8
  41bc41:	call   0x4221d0
  41bc46:	test   eax,eax
  41bc48:	jns    0x41bbe3
  41bc4a:	lea    rbx,[rsp+0x90]
  41bc52:	lea    rdi,[rsp+0x90]
  41bc5a:	mov    esi,eax
  41bc5c:	mov    ecx,0x10
  41bc61:	xor    eax,eax
  41bc63:	mov    r8d,0x40
  41bc69:	rep stos DWORD PTR es:[rdi],eax
  41bc6b:	mov    rdx,rbx
  41bc6e:	mov    ecx,esi
  41bc70:	call   0x422570
  41bc75:	mov    rcx,QWORD PTR [rsp+0x70]
  41bc7a:	lea    r8,[rip+0x1fa47]        # 0x43b6c8
  41bc81:	mov    QWORD PTR [rsp+0x20],rbx
  41bc86:	mov    r9d,r13d
  41bc89:	mov    edx,0x400
  41bc8e:	call   0x414ae0
  41bc93:	mov    DWORD PTR [rsp+0x5c],0xffffffea
  41bc9b:	jmp    0x41bcd1
  41bc9d:	cmp    eax,0xd44d5058
  41bca2:	mov    DWORD PTR [rsp+0x5c],eax
  41bca6:	je     0x41d2aa
  41bcac:	mov    eax,DWORD PTR [rbx+0x4]
  41bcaf:	mov    rcx,QWORD PTR [rsp+0x70]
  41bcb4:	lea    r8,[rip+0x1f7ad]        # 0x43b468
  41bcbb:	mov    edx,0x400
  41bcc0:	mov    DWORD PTR [rsp+0x20],eax
  41bcc4:	mov    r9d,DWORD PTR [rbx]
  41bcc7:	call   0x414ae0
  41bccc:	mov    ebp,0x1
  41bcd1:	cmp    DWORD PTR [rip+0x263e8],0x0        # 0x4420c0
  41bcd8:	jle    0x41bd0e
  41bcda:	xor    esi,esi
  41bcdc:	xor    ebx,ebx
  41bcde:	xchg   ax,ax
  41bce0:	mov    rax,QWORD PTR [rip+0x263e1]        # 0x4420c8
  41bce7:	mov    edx,ebx
  41bce9:	mov    r9d,0x1
  41bcef:	add    ebx,0x1
  41bcf2:	mov    rax,QWORD PTR [rax+rsi*1]
  41bcf6:	add    rsi,0x8
  41bcfa:	mov    rcx,QWORD PTR [rax]
  41bcfd:	lea    r8,[rcx+0x38]
  41bd01:	call   0x4222f8
  41bd06:	cmp    DWORD PTR [rip+0x263b4],ebx        # 0x4420c0
  41bd0c:	jg     0x41bce0
  41bd0e:	lea    r8,[rip+0x1fa01]        # 0x43b716
  41bd15:	xor    ecx,ecx
  41bd17:	mov    edx,0x20
  41bd1c:	xor    r13d,r13d
  41bd1f:	xor    r12d,r12d
  41bd22:	call   0x4226c0
  41bd27:	cmp    DWORD PTR [rip+0x263c2],0x0        # 0x4420f0
  41bd2e:	jle    0x41be17
  41bd34:	mov    rax,QWORD PTR [rip+0x263bd]        # 0x4420f8
  41bd3b:	xor    esi,esi
  41bd3d:	xor    edi,edi
  41bd3f:	mov    rbx,QWORD PTR [rax+r13*1]
  41bd43:	mov    edx,DWORD PTR [rbx+0x128]
  41bd49:	test   edx,edx
  41bd4b:	jle    0x41be02
  41bd51:	mov    rax,QWORD PTR [rbx+0x120]
  41bd58:	mov    rax,QWORD PTR [rax+rsi*1]
  41bd5c:	mov    rcx,QWORD PTR [rax+0x10]
  41bd60:	cmp    QWORD PTR [rcx+0x8],0x0
  41bd65:	je     0x41bdf3
  41bd6b:	mov    rdx,QWORD PTR [rbx+0x28]
  41bd6f:	mov    rcx,QWORD PTR [rax+0x18]
  41bd73:	lea    rax,[rip+0x1f293]        # 0x43b00d
  41bd7a:	test   rdx,rdx
  41bd7d:	je     0x41bd82
  41bd7f:	mov    rax,QWORD PTR [rdx]
  41bd82:	mov    QWORD PTR [rsp+0x30],rcx
  41bd87:	mov    QWORD PTR [rsp+0x28],rax
  41bd8c:	lea    r8,[rip+0x1f994]        # 0x43b727
  41bd93:	mov    rax,QWORD PTR [rbx+0x8]
  41bd97:	xor    ecx,ecx
  41bd99:	mov    edx,0x20
  41bd9e:	mov    eax,DWORD PTR [rax]
  41bda0:	mov    DWORD PTR [rsp+0x20],eax
  41bda4:	mov    r9d,DWORD PTR [rbx]
  41bda7:	call   0x4226c0
  41bdac:	cmp    DWORD PTR [rip+0x27935],0x1        # 0x4436e8
  41bdb3:	jle    0x41bdda
  41bdb5:	mov    rax,QWORD PTR [rbx+0x120]
  41bdbc:	lea    r8,[rip+0x1f97f]        # 0x43b742
  41bdc3:	mov    edx,0x20
  41bdc8:	xor    ecx,ecx
  41bdca:	mov    rax,QWORD PTR [rax+rsi*1]
  41bdce:	mov    rax,QWORD PTR [rax+0x10]
  41bdd2:	mov    r9d,DWORD PTR [rax]
  41bdd5:	call   0x4226c0
  41bdda:	lea    r8,[rip+0x1e420]        # 0x43a201
  41bde1:	mov    edx,0x20
  41bde6:	xor    ecx,ecx
  41bde8:	call   0x4226c0
  41bded:	mov    edx,DWORD PTR [rbx+0x128]
  41bdf3:	add    edi,0x1
  41bdf6:	add    rsi,0x8
  41bdfa:	cmp    edi,edx
  41bdfc:	jl     0x41bd51
  41be02:	add    r12d,0x1
  41be06:	add    r13,0x8
  41be0a:	cmp    DWORD PTR [rip+0x262df],r12d        # 0x4420f0
  41be11:	jg     0x41bd34
  41be17:	xor    edi,edi
  41be19:	xor    esi,esi
  41be1b:	cmp    DWORD PTR [rip+0x262ae],0x0        # 0x4420d0
  41be22:	lea    r12,[rip+0x1f1e6]        # 0x43b00f
  41be29:	jg     0x41be63
  41be2b:	jmp    0x41bf22
  41be30:	mov    eax,DWORD PTR [rbx+0x4]
  41be33:	lea    r8,[rip+0x1f914]        # 0x43b74e
  41be3a:	mov    edx,0x20
  41be3f:	xor    ecx,ecx
  41be41:	mov    DWORD PTR [rsp+0x28],eax
  41be45:	mov    eax,DWORD PTR [rbx]
  41be47:	mov    DWORD PTR [rsp+0x20],eax
  41be4b:	call   0x4226c0
  41be50:	add    esi,0x1
  41be53:	add    rdi,0x8
  41be57:	cmp    DWORD PTR [rip+0x26273],esi        # 0x4420d0
  41be5d:	jle    0x41bf22
  41be63:	mov    rax,QWORD PTR [rip+0x2626e]        # 0x4420d8
  41be6a:	mov    rbx,QWORD PTR [rax+rdi*1]
  41be6e:	mov    r9,QWORD PTR [rbx+0x168]
  41be75:	test   r9,r9
  41be78:	jne    0x41be30
  41be7a:	mov    rax,QWORD PTR [rbx+0x108]
  41be81:	test   rax,rax
  41be84:	je     0x41c111
  41be8a:	mov    rdx,QWORD PTR [rax+0x10]
  41be8e:	cmp    QWORD PTR [rdx+0x8],0x0
  41be93:	je     0x41c111
  41be99:	mov    r9,QWORD PTR [rax+0x18]
  41be9d:	lea    r8,[rip+0x1f8c6]        # 0x43b76a
  41bea4:	xor    ecx,ecx
  41bea6:	mov    edx,0x20
  41beab:	call   0x4226c0
  41beb0:	cmp    DWORD PTR [rip+0x27831],0x1        # 0x4436e8
  41beb7:	jle    0x41beda
  41beb9:	mov    rax,QWORD PTR [rbx+0x108]
  41bec0:	lea    r8,[rip+0x1f87b]        # 0x43b742
  41bec7:	mov    edx,0x20
  41becc:	xor    ecx,ecx
  41bece:	mov    rax,QWORD PTR [rax+0x10]
  41bed2:	mov    r9d,DWORD PTR [rax]
  41bed5:	call   0x4226c0
  41beda:	mov    rdx,QWORD PTR [rbx+0x50]
  41bede:	lea    rax,[rip+0x1f128]        # 0x43b00d
  41bee5:	test   rdx,rdx
  41bee8:	je     0x41beed
  41beea:	mov    rax,QWORD PTR [rdx]
  41beed:	mov    QWORD PTR [rsp+0x28],rax
  41bef2:	mov    eax,DWORD PTR [rbx+0x4]
  41bef5:	lea    r8,[rip+0x1f873]        # 0x43b76f
  41befc:	xor    ecx,ecx
  41befe:	mov    edx,0x20
  41bf03:	add    esi,0x1
  41bf06:	add    rdi,0x8
  41bf0a:	mov    DWORD PTR [rsp+0x20],eax
  41bf0e:	mov    r9d,DWORD PTR [rbx]
  41bf11:	call   0x4226c0
  41bf16:	cmp    DWORD PTR [rip+0x261b4],esi        # 0x4420d0
  41bf1c:	jg     0x41be63
  41bf22:	cmp    DWORD PTR [rsp+0x5c],0x0
  41bf27:	jne    0x41cdbe
  41bf2d:	test   ebp,ebp
  41bf2f:	jne    0x41c248
  41bf35:	mov    rax,QWORD PTR [rip+0x21a04]        # 0x43d940
  41bf3c:	cmp    QWORD PTR [rax],0x0
  41bf40:	jne    0x41c248
  41bf46:	mov    DWORD PTR [rip+0x262e0],0x1        # 0x442230
  41bf50:	xor    eax,eax
  41bf52:	movaps xmm6,XMMWORD PTR [rsp+0x510]
  41bf5a:	add    rsp,0x528
  41bf61:	pop    rbx
  41bf62:	pop    rsi
  41bf63:	pop    rdi
  41bf64:	pop    rbp
  41bf65:	pop    r12
  41bf67:	pop    r13
  41bf69:	pop    r14
  41bf6b:	pop    r15
  41bf6d:	ret    
  41bf6e:	mov    ecx,esi
  41bf70:	jmp    0x41b1f2
  41bf75:	test   BYTE PTR [rax+0x2d],0x4
  41bf79:	jne    0x41b495
  41bf7f:	lea    rdx,[rip+0x1f0a4]        # 0x43b02a
  41bf86:	mov    rcx,r8
  41bf89:	mov    QWORD PTR [rsp+0x60],r8
  41bf8e:	call   0x42faf8
  41bf93:	test   eax,eax
  41bf95:	mov    r8,QWORD PTR [rsp+0x60]
  41bf9a:	je     0x41b495
  41bfa0:	lea    rdx,[rip+0x1f087]        # 0x43b02e
  41bfa7:	mov    rcx,r8
  41bfaa:	call   0x42faf8
  41bfaf:	test   eax,eax
  41bfb1:	mov    r8,QWORD PTR [rsp+0x60]
  41bfb6:	je     0x41b495
  41bfbc:	lea    rdx,[rip+0x1f06f]        # 0x43b032
  41bfc3:	mov    rcx,r8
  41bfc6:	call   0x42faf8
  41bfcb:	test   eax,eax
  41bfcd:	mov    r8,QWORD PTR [rsp+0x60]
  41bfd2:	je     0x41b495
  41bfd8:	lea    rdx,[rip+0x1f057]        # 0x43b036
  41bfdf:	mov    rcx,r8
  41bfe2:	call   0x42faf8
  41bfe7:	test   eax,eax
  41bfe9:	mov    r8,QWORD PTR [rsp+0x60]
  41bfee:	je     0x41b495
  41bff4:	lea    rdx,[rip+0x1f03f]        # 0x43b03a
  41bffb:	mov    rcx,r8
  41bffe:	call   0x42faf8
  41c003:	test   eax,eax
  41c005:	mov    r8,QWORD PTR [rsp+0x60]
  41c00a:	je     0x41b495
  41c010:	lea    rdx,[rip+0x1f027]        # 0x43b03e
  41c017:	mov    rcx,r8
  41c01a:	call   0x42faf8
  41c01f:	test   eax,eax
  41c021:	mov    r8,QWORD PTR [rsp+0x60]
  41c026:	je     0x41b495
  41c02c:	lea    rdx,[rip+0x1f010]        # 0x43b043
  41c033:	mov    rcx,r8
  41c036:	call   0x42faf8
  41c03b:	test   eax,eax
  41c03d:	je     0x41b495
  41c043:	mov    rax,QWORD PTR [rip+0x21696]        # 0x43d6e0
  41c04a:	cmp    DWORD PTR [rax],0x0
  41c04d:	js     0x41d2cc
  41c053:	jne    0x41b495
  41c059:	mov    rdi,QWORD PTR [rsp+0x50]
  41c05e:	mov    rax,QWORD PTR [rdi+0x84]
  41c065:	mov    QWORD PTR [rbx+0x84],rax
  41c06c:	imul   eax,DWORD PTR [rdi+0x8c]
  41c073:	mov    DWORD PTR [rbx+0x84],eax
  41c079:	jmp    0x41b495
  41c07e:	mov    r11d,DWORD PTR [rsi+0x2c]
  41c082:	test   r11d,r11d
  41c085:	je     0x41cc0d
  41c08b:	mov    rdi,QWORD PTR [r15+0x10]
  41c08f:	mov    r8,QWORD PTR [rsi+0x30]
  41c093:	xor    eax,eax
  41c095:	mov    r9,QWORD PTR [r8]
  41c098:	cmp    r9,rdi
  41c09b:	je     0x41c0ab
  41c09d:	mov    r9,QWORD PTR [r9+0x8]
  41c0a1:	mov    r13d,DWORD PTR [rbx+0xc]
  41c0a5:	cmp    DWORD PTR [r9+0xc],r13d
  41c0a9:	je     0x41c0b7
  41c0ab:	add    eax,0x1
  41c0ae:	add    r8,0x8
  41c0b2:	cmp    eax,r11d
  41c0b5:	jne    0x41c095
  41c0b7:	cmp    eax,r11d
  41c0ba:	je     0x41cc0d
  41c0c0:	test   r10d,r10d
  41c0c3:	je     0x41c682
  41c0c9:	lea    rax,[rip+0x1eddb]        # 0x43aeab
  41c0d0:	lea    r9,[rip+0x1ef3f]        # 0x43b016
  41c0d7:	mov    DWORD PTR [rsp+0x28],0xb1c
  41c0df:	mov    QWORD PTR [rsp+0x20],rax
  41c0e4:	lea    r8,[rip+0x1eda2]        # 0x43ae8d
  41c0eb:	xor    edx,edx
  41c0ed:	xor    ecx,ecx
  41c0ef:	call   0x4226c0
  41c0f4:	call   0x42fbf8
  41c0f9:	mov    edx,DWORD PTR [r15+0x84]
  41c100:	mov    DWORD PTR [rbx+0x88],eax
  41c106:	mov    DWORD PTR [rbx+0x84],edx
  41c10c:	jmp    0x41b4c9
  41c111:	movsxd rdx,DWORD PTR [rbx+0x8]
  41c115:	mov    rax,QWORD PTR [rip+0x25fdc]        # 0x4420f8
  41c11c:	lea    r8,[rip+0x1f664]        # 0x43b787
  41c123:	xor    ecx,ecx
  41c125:	mov    rax,QWORD PTR [rax+rdx*8]
  41c129:	mov    edx,DWORD PTR [rbx+0x4]
  41c12c:	mov    DWORD PTR [rsp+0x30],edx
  41c130:	mov    edx,DWORD PTR [rbx]
  41c132:	mov    DWORD PTR [rsp+0x28],edx
  41c136:	mov    rdx,QWORD PTR [rax+0x8]
  41c13a:	mov    edx,DWORD PTR [rdx]
  41c13c:	mov    DWORD PTR [rsp+0x20],edx
  41c140:	mov    r9d,DWORD PTR [rax]
  41c143:	mov    edx,0x20
  41c148:	call   0x4226c0
  41c14d:	movsxd rcx,DWORD PTR [rbx+0x8]
  41c151:	mov    rdx,QWORD PTR [rip+0x25fa0]        # 0x4420f8
  41c158:	mov    rax,QWORD PTR [rbx+0x20]
  41c15c:	cmp    rax,QWORD PTR [rdx+rcx*8]
  41c160:	je     0x41c182
  41c162:	mov    rdx,QWORD PTR [rax+0x8]
  41c166:	lea    r8,[rip+0x1f634]        # 0x43b7a1
  41c16d:	xor    ecx,ecx
  41c16f:	mov    edx,DWORD PTR [rdx]
  41c171:	mov    DWORD PTR [rsp+0x20],edx
  41c175:	mov    r9d,DWORD PTR [rax]
  41c178:	mov    edx,0x20
  41c17d:	call   0x4226c0
  41c182:	cmp    DWORD PTR [rbx+0x160],0x0
  41c189:	jne    0x41cbf5
  41c18f:	movsxd rdx,DWORD PTR [rbx+0x8]
  41c193:	mov    rax,QWORD PTR [rip+0x25f5e]        # 0x4420f8
  41c19a:	mov    r14,QWORD PTR [rbx+0x50]
  41c19e:	mov    rax,QWORD PTR [rax+rdx*8]
  41c1a2:	mov    rax,QWORD PTR [rax+0x28]
  41c1a6:	test   rax,rax
  41c1a9:	je     0x41c934
  41c1af:	mov    ecx,DWORD PTR [rax+0x14]
  41c1b2:	mov    r13,QWORD PTR [rax]
  41c1b5:	call   0x4223b0
  41c1ba:	test   rax,rax
  41c1bd:	je     0x41cf89
  41c1c3:	mov    rbx,QWORD PTR [rax+0x8]
  41c1c7:	mov    rcx,r13
  41c1ca:	mov    rdx,rbx
  41c1cd:	call   0x42faf8
  41c1d2:	test   eax,eax
  41c1d4:	cmove  r13,r12
  41c1d8:	test   r14,r14
  41c1db:	je     0x41cc27
  41c1e1:	mov    ecx,DWORD PTR [r14+0x14]
  41c1e5:	mov    r15,QWORD PTR [r14]
  41c1e8:	call   0x4223b0
  41c1ed:	test   rax,rax
  41c1f0:	je     0x41cf95
  41c1f6:	mov    r14,QWORD PTR [rax+0x8]
  41c1fa:	mov    rcx,r15
  41c1fd:	mov    rdx,r14
  41c200:	call   0x42faf8
  41c205:	test   eax,eax
  41c207:	cmove  r15,r12
  41c20b:	lea    r8,[rip+0x1f5a6]        # 0x43b7b8
  41c212:	mov    QWORD PTR [rsp+0x30],r15
  41c217:	mov    QWORD PTR [rsp+0x28],r14
  41c21c:	mov    QWORD PTR [rsp+0x20],r13
  41c221:	mov    r9,rbx
  41c224:	mov    edx,0x20
  41c229:	xor    ecx,ecx
  41c22b:	call   0x4226c0
  41c230:	lea    r8,[rip+0x1dfca]        # 0x43a201
  41c237:	mov    edx,0x20
  41c23c:	xor    ecx,ecx
  41c23e:	call   0x4226c0
  41c243:	jmp    0x41be50
  41c248:	call   0x416570
  41c24d:	jmp    0x41bf46
  41c252:	test   eax,eax
  41c254:	jne    0x41c0f4
  41c25a:	mov    edx,DWORD PTR [r15+0x84]
  41c261:	mov    eax,DWORD PTR [r15+0x80]
  41c268:	test   edx,edx
  41c26a:	mov    DWORD PTR [rbx+0x84],edx
  41c270:	mov    DWORD PTR [rbx+0x88],eax
  41c276:	je     0x41c972
  41c27c:	test   eax,eax
  41c27e:	je     0x41c972
  41c284:	pxor   xmm0,xmm0
  41c288:	pxor   xmm1,xmm1
  41c28c:	movsd  xmm4,QWORD PTR [rip+0x20164]        # 0x43c3f8
  41c294:	cvtsi2sd xmm0,DWORD PTR [rbx+0x84]
  41c29c:	cvtsi2sd xmm1,DWORD PTR [rbx+0x88]
  41c2a4:	divsd  xmm0,xmm1
  41c2a8:	ucomisd xmm4,xmm0
  41c2ac:	jbe    0x41c2ea
  41c2ae:	mov    rax,QWORD PTR [rip+0x216bb]        # 0x43d970
  41c2b5:	mov    eax,DWORD PTR [rax]
  41c2b7:	test   eax,eax
  41c2b9:	je     0x41c2ea
  41c2bb:	cmp    eax,0xfe
  41c2c0:	je     0x41c2d6
  41c2c2:	cmp    eax,0x1
  41c2c5:	je     0x41c2d6
  41c2c7:	add    eax,0x1
  41c2ca:	jne    0x41c2ea
  41c2cc:	mov    rax,QWORD PTR [rsi+0x10]
  41c2d0:	test   BYTE PTR [rax+0x2d],0x4
  41c2d4:	jne    0x41c2ea
  41c2d6:	lea    r8,[rip+0x1ef23]        # 0x43b200
  41c2dd:	mov    edx,0x18
  41c2e2:	mov    rcx,rsi
  41c2e5:	call   0x4226c0
  41c2ea:	mov    eax,DWORD PTR [r15+0xa8]
  41c2f1:	test   eax,eax
  41c2f3:	jle    0x41c335
  41c2f5:	mov    r13,QWORD PTR [r15+0xa0]
  41c2fc:	sub    eax,0x1
  41c2ff:	mov    rdi,QWORD PTR [rbx+0x84]
  41c306:	movabs rsi,0xf424000000000
  41c310:	lea    rbp,[r13+rax*8+0x8]
  41c315:	mov    rcx,QWORD PTR [r13+0x0]
  41c319:	mov    rdx,rsi
  41c31c:	mov    r8,rdi
  41c31f:	or     rdx,0x1
  41c323:	add    r13,0x8
  41c327:	call   0x422588
  41c32c:	mov    QWORD PTR [r13-0x8],rax
  41c330:	cmp    r13,rbp
  41c333:	jne    0x41c315
  41c335:	mov    rdi,QWORD PTR [r15+0x108]
  41c33c:	cmp    DWORD PTR [r15+0x94],0x0
  41c344:	mov    rsi,QWORD PTR [r15+0x10]
  41c348:	mov    rax,QWORD PTR [rdi]
  41c34b:	mov    rax,QWORD PTR [rax+0x20]
  41c34f:	mov    rbp,QWORD PTR [rax]
  41c352:	mov    edx,DWORD PTR [rbp+0x28]
  41c355:	mov    eax,DWORD PTR [rbp+0x24]
  41c358:	mov    DWORD PTR [rbx+0x94],eax
  41c35e:	mov    DWORD PTR [rbx+0x98],edx
  41c364:	je     0x41cbcc
  41c36a:	mov    rcx,QWORD PTR [r15+0x94]
  41c371:	shl    rax,0x20
  41c375:	or     rdx,rax
  41c378:	call   0x422658
  41c37d:	mov    QWORD PTR [rsi+0x58],rax
  41c381:	mov    r13,QWORD PTR [r15+0x50]
  41c385:	mov    rax,QWORD PTR [rsi+0x58]
  41c389:	lea    rdx,[rip+0x1eefd]        # 0x43b28d
  41c390:	mov    r8d,0x7
  41c396:	mov    r9,QWORD PTR [r13+0x0]
  41c39a:	mov    QWORD PTR [rbx+0x108],rax
  41c3a1:	mov    rcx,r9
  41c3a4:	mov    QWORD PTR [rsp+0x60],r9
  41c3a9:	call   0x42fac8
  41c3ae:	test   eax,eax
  41c3b0:	mov    r9,QWORD PTR [rsp+0x60]
  41c3b5:	jne    0x41cb22
  41c3bb:	cmp    DWORD PTR [rbx+0xa8],0xffffffff
  41c3c2:	je     0x41cec2
  41c3c8:	mov    rax,QWORD PTR [rdi]
  41c3cb:	mov    rdi,QWORD PTR [rsp+0x50]
  41c3d0:	mov    rdx,QWORD PTR [r15+0x80]
  41c3d7:	mov    rax,QWORD PTR [rax+0x20]
  41c3db:	test   rdi,rdi
  41c3de:	mov    rax,QWORD PTR [rax]
  41c3e1:	mov    eax,DWORD PTR [rax+0x44]
  41c3e4:	mov    DWORD PTR [rbx+0xa8],eax
  41c3ea:	mov    QWORD PTR [rsi+0x68],rdx
  41c3ee:	je     0x41c402
  41c3f0:	mov    edi,DWORD PTR [rdi+0x94]
  41c3f6:	cmp    DWORD PTR [rbx+0x94],edi
  41c3fc:	je     0x41ce77
  41c402:	mov    rax,QWORD PTR [rip+0x213a7]        # 0x43d7b0
  41c409:	mov    eax,DWORD PTR [rax]
  41c40b:	mov    DWORD PTR [rbx+0x374],eax
  41c411:	mov    rbx,QWORD PTR [r15+0xb0]
  41c418:	test   rbx,rbx
  41c41b:	je     0x41b7b0
  41c421:	lea    rdx,[rip+0x1ef7f]        # 0x43b3a7
  41c428:	mov    r8d,0x5
  41c42e:	mov    rcx,rbx
  41c431:	call   0x42fac8
  41c436:	test   eax,eax
  41c438:	je     0x41cdf0
  41c43e:	lea    rdx,[rip+0x1eae2]        # 0x43af27
  41c445:	mov    r8d,0x6
  41c44b:	mov    rcx,rbx
  41c44e:	call   0x42fac8
  41c453:	test   eax,eax
  41c455:	je     0x41b7b0
  41c45b:	mov    rsi,QWORD PTR [r15+0x48]
  41c45f:	mov    rax,rbx
  41c462:	mov    ecx,0x1
  41c467:	jmp    0x41c478
  41c469:	cmp    dl,0x2c
  41c46c:	sete   dl
  41c46f:	add    rax,0x1
  41c473:	movzx  edx,dl
  41c476:	add    ecx,edx
  41c478:	movzx  edx,BYTE PTR [rax]
  41c47b:	test   dl,dl
  41c47d:	jne    0x41c469
  41c47f:	cmp    ecx,0xffffffe
  41c485:	mov    DWORD PTR [rsp+0x80],ecx
  41c48c:	jle    0x41cfff
  41c492:	lea    r8,[rip+0x1ef47]        # 0x43b3e0
  41c499:	xor    ecx,ecx
  41c49b:	mov    edx,0x8
  41c4a0:	call   0x4226c0
  41c4a5:	mov    ecx,0x1
  41c4aa:	call   0x401cb0
  41c4af:	mov    rcx,rdi
  41c4b2:	call   0x422670
  41c4b7:	test   rax,rax
  41c4ba:	mov    QWORD PTR [rbx+0x78],rax
  41c4be:	je     0x41c602
  41c4c4:	mov    rdi,QWORD PTR [rsp+0x50]
  41c4c9:	mov    rcx,rax
  41c4cc:	movsxd r8,DWORD PTR [rdi+0x80]
  41c4d3:	mov    rdx,QWORD PTR [rdi+0x78]
  41c4d7:	call   0x42fb40
  41c4dc:	mov    eax,DWORD PTR [rdi+0x80]
  41c4e2:	jmp    0x41b403
  41c4e7:	mov    rdi,QWORD PTR [rsp+0x50]
  41c4ec:	movsxd rax,DWORD PTR [rdi+0x84]
  41c4f3:	movsxd rdx,DWORD PTR [rdi+0x88]
  41c4fa:	cmp    eax,edx
  41c4fc:	jge    0x41b4a4
  41c502:	test   eax,eax
  41c504:	jle    0x41b4a4
  41c50a:	imul   rax,rax,0x79
  41c50e:	cmp    rax,rdx
  41c511:	jle    0x41b4a4
  41c517:	mov    rax,QWORD PTR [rdi+0x84]
  41c51e:	mov    QWORD PTR [rbx+0x84],rax
  41c525:	jmp    0x41b4a4
  41c52a:	nop    WORD PTR [rax+rax*1+0x0]
  41c530:	mov    rcx,QWORD PTR [rbx+0x48]
  41c534:	lea    rdx,[rbx+0x128]
  41c53b:	call   0x422618
  41c540:	test   eax,eax
  41c542:	mov    esi,eax
  41c544:	js     0x41cc5a
  41c54a:	mov    rbx,QWORD PTR [rbx+0x10]
  41c54e:	mov    rdx,r12
  41c551:	mov    rax,QWORD PTR [rbx+0x8]
  41c555:	mov    rcx,QWORD PTR [rax+0x84]
  41c55c:	call   0x422880
  41c561:	mov    QWORD PTR [rbx+0x30],rax
  41c565:	jmp    0x41b9bd
  41c56a:	cmp    QWORD PTR [r13+0x80],0x0
  41c572:	jne    0x41b90c
  41c578:	mov    rcx,QWORD PTR [rbx+0x128]
  41c57f:	lea    rdx,[rip+0x1eed5]        # 0x43b45b
  41c586:	xor    r9d,r9d
  41c589:	xor    r8d,r8d
  41c58c:	call   0x422818
  41c591:	test   rax,rax
  41c594:	jne    0x41b90c
  41c59a:	mov    rcx,QWORD PTR [rbx+0x128]
  41c5a1:	lea    rdx,[rip+0x1eeb5]        # 0x43b45d
  41c5a8:	xor    r9d,r9d
  41c5ab:	xor    r8d,r8d
  41c5ae:	call   0x422818
  41c5b3:	test   rax,rax
  41c5b6:	jne    0x41b90c
  41c5bc:	lea    r8,[rip+0x1ee9d]        # 0x43b460
  41c5c3:	lea    rdx,[rip+0x1ee91]        # 0x43b45b
  41c5ca:	xor    r9d,r9d
  41c5cd:	mov    rcx,rsi
  41c5d0:	call   0x422808
  41c5d5:	jmp    0x41b90c
  41c5da:	test   BYTE PTR [rax+0x1a],0x1
  41c5de:	jne    0x41b931
  41c5e4:	mov    rax,QWORD PTR [rbx+0x48]
  41c5e8:	mov    edx,DWORD PTR [rax+0x1dc]
  41c5ee:	mov    rax,QWORD PTR [rbx+0x108]
  41c5f5:	mov    rcx,QWORD PTR [rax]
  41c5f8:	call   0x422130
  41c5fd:	jmp    0x41b931
  41c602:	mov    eax,0xfffffff4
  41c607:	jmp    0x41bf52
  41c60c:	mov    rax,QWORD PTR [r15+0x108]
  41c613:	mov    rax,QWORD PTR [rax]
  41c616:	mov    rax,QWORD PTR [rax+0x20]
  41c61a:	mov    rcx,QWORD PTR [rax]
  41c61d:	mov    eax,DWORD PTR [rcx+0x44]
  41c620:	mov    DWORD PTR [rbx+0x1d8],eax
  41c626:	mov    eax,DWORD PTR [rcx+0x40]
  41c629:	mov    DWORD PTR [rbx+0x1d0],eax
  41c62f:	mov    rax,QWORD PTR [rcx+0x38]
  41c633:	mov    QWORD PTR [rbx+0x1f0],rax
  41c63a:	call   0x422090
  41c63f:	mov    DWORD PTR [rbx+0x1d4],eax
  41c645:	mov    eax,DWORD PTR [rbx+0x1d0]
  41c64b:	mov    DWORD PTR [rbx+0x84],0x1
  41c655:	mov    DWORD PTR [rbx+0x88],eax
  41c65b:	jmp    0x41b7b0
  41c660:	mov    rdi,QWORD PTR [rsp+0x50]
  41c665:	mov    eax,DWORD PTR [rdi+0x94]
  41c66b:	mov    DWORD PTR [rbx+0x94],eax
  41c671:	mov    eax,DWORD PTR [rdi+0x98]
  41c677:	mov    DWORD PTR [rbx+0x98],eax
  41c67d:	jmp    0x41b7b0
  41c682:	mov    QWORD PTR [rsp+0x50],0x0
  41c68b:	jmp    0x41b661
  41c690:	mov    rax,QWORD PTR [rip+0x20ff9]        # 0x43d690
  41c697:	cmp    DWORD PTR [rax],0x100
  41c69d:	jne    0x41d2c0
  41c6a3:	mov    rdi,QWORD PTR [rsp+0x50]
  41c6a8:	mov    rax,QWORD PTR [rdi+0x1f0]
  41c6af:	mov    edx,DWORD PTR [rdi+0x90]
  41c6b5:	mov    QWORD PTR [rbx+0x1f0],rax
  41c6bc:	mov    eax,DWORD PTR [rdi+0x1d0]
  41c6c2:	mov    DWORD PTR [rbx+0x1d0],eax
  41c6c8:	mov    eax,DWORD PTR [rdi+0x1d4]
  41c6ce:	mov    DWORD PTR [rbx+0x1d4],eax
  41c6d4:	mov    eax,DWORD PTR [rdi+0x1dc]
  41c6da:	mov    DWORD PTR [rbx+0x1dc],eax
  41c6e0:	mov    eax,DWORD PTR [rdi+0x200]
  41c6e6:	mov    DWORD PTR [rbx+0x200],eax
  41c6ec:	mov    eax,DWORD PTR [rdi+0x1e4]
  41c6f2:	mov    DWORD PTR [rbx+0x3ec],edx
  41c6f8:	mov    DWORD PTR [rbx+0x90],edx
  41c6fe:	cmp    eax,0x480
  41c703:	mov    DWORD PTR [rbx+0x1e4],eax
  41c709:	sete   cl
  41c70c:	cmp    eax,0x1
  41c70f:	sete   dl
  41c712:	or     cl,dl
  41c714:	jne    0x41cbd9
  41c71a:	cmp    eax,0x240
  41c71f:	je     0x41cbd9
  41c725:	cmp    DWORD PTR [rbx+0x38],0x15003
  41c72c:	jne    0x41b7b0
  41c732:	mov    DWORD PTR [rbx+0x1e4],0x0
  41c73c:	jmp    0x41b7b0
  41c741:	mov    rdi,QWORD PTR [rsp+0x50]
  41c746:	cmp    DWORD PTR [r15+0x94],0x0
  41c74e:	mov    eax,DWORD PTR [rdi+0xa8]
  41c754:	mov    edx,DWORD PTR [rdi+0x98]
  41c75a:	mov    ecx,DWORD PTR [rdi+0xd4]
  41c760:	mov    DWORD PTR [rbx+0xa8],eax
  41c766:	mov    eax,DWORD PTR [rdi+0x94]
  41c76c:	mov    DWORD PTR [rbx+0x98],edx
  41c772:	mov    DWORD PTR [rbx+0xd4],ecx
  41c778:	mov    DWORD PTR [rbx+0x94],eax
  41c77e:	jne    0x41cf2a
  41c784:	mov    rcx,QWORD PTR [rbp+0x8]
  41c788:	cmp    DWORD PTR [rcx+0x58],0x0
  41c78c:	je     0x41cddf
  41c792:	mov    rsi,QWORD PTR [rcx+0x58]
  41c796:	mov    rax,QWORD PTR [r15+0x10]
  41c79a:	mov    rdx,QWORD PTR [rcx+0x68]
  41c79e:	mov    QWORD PTR [rbx+0x108],rsi
  41c7a5:	mov    QWORD PTR [rax+0x68],rdx
  41c7a9:	mov    rdx,QWORD PTR [rcx+0x1e0]
  41c7b0:	mov    QWORD PTR [rax+0x58],rsi
  41c7b4:	mov    QWORD PTR [rax+0x1e0],rdx
  41c7bb:	jmp    0x41b7b0
  41c7c0:	mov    rax,QWORD PTR [r15+0x108]
  41c7c7:	mov    rcx,QWORD PTR [rax]
  41c7ca:	call   0x422138
  41c7cf:	mov    QWORD PTR [r15+0x80],rax
  41c7d6:	jmp    0x41b6d0
  41c7db:	mov    eax,DWORD PTR [r13+0x1e0]
  41c7e2:	test   eax,eax
  41c7e4:	je     0x41c993
  41c7ea:	pxor   xmm0,xmm0
  41c7ee:	pxor   xmm1,xmm1
  41c7f2:	pxor   xmm2,xmm2
  41c7f6:	cvtsi2sd xmm0,eax
  41c7fa:	cvtsi2sd xmm1,DWORD PTR [r13+0x1e4]
  41c803:	cvtsi2sd xmm2,DWORD PTR [r13+0x6c]
  41c809:	divsd  xmm0,xmm1
  41c80d:	pxor   xmm1,xmm1
  41c811:	cvtsi2sd xmm1,DWORD PTR [r13+0x68]
  41c817:	divsd  xmm1,xmm2
  41c81b:	ucomisd xmm0,xmm1
  41c81f:	jb     0x41c993
  41c825:	pxor   xmm1,xmm1
  41c829:	pxor   xmm5,xmm5
  41c82d:	movsd  xmm6,QWORD PTR [rip+0x1fb93]        # 0x43c3c8
  41c835:	cvtsi2sd xmm1,DWORD PTR [r13+0x30]
  41c83b:	movapd xmm3,xmm1
  41c83f:	divsd  xmm6,xmm0
  41c843:	cvtsi2sd xmm5,DWORD PTR [r13+0x34]
  41c849:	divsd  xmm3,xmm5
  41c84d:	ucomisd xmm6,xmm3
  41c851:	jbe    0x41c9a7
  41c857:	mov    rdi,QWORD PTR [rsp+0x50]
  41c85c:	pxor   xmm0,xmm0
  41c860:	pxor   xmm4,xmm4
  41c864:	cvtsi2sd xmm0,DWORD PTR [rdi+0x84]
  41c86c:	movapd xmm2,xmm0
  41c870:	cvtsi2sd xmm4,DWORD PTR [rdi+0x88]
  41c878:	divsd  xmm2,xmm4
  41c87c:	ucomisd xmm6,xmm2
  41c880:	jbe    0x41c9c4
  41c886:	movsd  xmm6,QWORD PTR [rip+0x1fb62]        # 0x43c3f0
  41c88e:	ucomisd xmm6,xmm3
  41c892:	jbe    0x41c9c4
  41c898:	ucomisd xmm6,xmm2
  41c89c:	ja     0x41cba8
  41c8a2:	mov    rax,QWORD PTR [rsp+0x50]
  41c8a7:	pxor   xmm0,xmm0
  41c8ab:	addsd  xmm3,xmm3
  41c8af:	cvtsi2sd xmm0,DWORD PTR [rax+0x8c]
  41c8b7:	mulsd  xmm2,xmm0
  41c8bb:	ucomisd xmm2,xmm3
  41c8bf:	ja     0x41b465
  41c8c5:	jmp    0x41b495
  41c8ca:	movsxd rdx,DWORD PTR [r15+0x8]
  41c8ce:	mov    rax,QWORD PTR [rip+0x25823]        # 0x4420f8
  41c8d5:	mov    rax,QWORD PTR [rax+rdx*8]
  41c8d9:	mov    rax,QWORD PTR [rax+0x8]
  41c8dd:	mov    rax,QWORD PTR [rax+0x8]
  41c8e1:	mov    edx,DWORD PTR [rax+0x94]
  41c8e7:	mov    DWORD PTR [rbx+0x94],edx
  41c8ed:	mov    eax,DWORD PTR [rax+0x98]
  41c8f3:	mov    DWORD PTR [rbx+0x98],eax
  41c8f9:	jmp    0x41b7b0
  41c8fe:	mov    rcx,QWORD PTR [r15+0x80]
  41c905:	call   0x4227d8
  41c90a:	mov    rdx,QWORD PTR [r15+0x50]
  41c90e:	cdqe   
  41c910:	mov    rdx,QWORD PTR [rdx+0x20]
  41c914:	mov    rax,QWORD PTR [rdx+rax*8]
  41c918:	mov    QWORD PTR [r15+0x80],rax
  41c91f:	jmp    0x41b75b
  41c924:	mov    rax,QWORD PTR [rsp+0x50]
  41c929:	mov    eax,DWORD PTR [rax+0x80]
  41c92f:	jmp    0x41b3cc
  41c934:	lea    rbx,[rip+0x1e6d2]        # 0x43b00d
  41c93b:	mov    r13,rbx
  41c93e:	jmp    0x41c1d8
  41c943:	movsxd r9,DWORD PTR [r15+0x84]
  41c94a:	movsxd r8,DWORD PTR [r15+0x80]
  41c951:	lea    rdx,[r15+0x84]
  41c958:	lea    rcx,[r15+0x80]
  41c95f:	mov    QWORD PTR [rsp+0x20],0xffff
  41c968:	call   0x4225a0
  41c96d:	jmp    0x41b765
  41c972:	mov    rax,QWORD PTR [r15+0x108]
  41c979:	mov    rax,QWORD PTR [rax]
  41c97c:	mov    rax,QWORD PTR [rax+0x20]
  41c980:	mov    rax,QWORD PTR [rax]
  41c983:	mov    rax,QWORD PTR [rax+0x48]
  41c987:	mov    QWORD PTR [rbx+0x84],rax
  41c98e:	jmp    0x41c284
  41c993:	pxor   xmm1,xmm1
  41c997:	pxor   xmm5,xmm5
  41c99b:	cvtsi2sd xmm1,DWORD PTR [r13+0x30]
  41c9a1:	cvtsi2sd xmm5,DWORD PTR [r13+0x34]
  41c9a7:	mov    rax,QWORD PTR [rsp+0x50]
  41c9ac:	pxor   xmm0,xmm0
  41c9b0:	pxor   xmm4,xmm4
  41c9b4:	cvtsi2sd xmm0,DWORD PTR [rax+0x84]
  41c9bc:	cvtsi2sd xmm4,DWORD PTR [rax+0x88]
  41c9c4:	divsd  xmm1,xmm5
  41c9c8:	mov    rax,QWORD PTR [rsp+0x50]
  41c9cd:	divsd  xmm0,xmm4
  41c9d1:	movapd xmm2,xmm1
  41c9d5:	pxor   xmm1,xmm1
  41c9d9:	cvtsi2sd xmm1,DWORD PTR [rax+0x8c]
  41c9e1:	mulsd  xmm0,xmm1
  41c9e5:	movapd xmm1,xmm2
  41c9e9:	addsd  xmm1,xmm2
  41c9ed:	ucomisd xmm0,xmm1
  41c9f1:	jbe    0x41b495
  41c9f7:	movsd  xmm0,QWORD PTR [rip+0x1f9f1]        # 0x43c3f0
  41c9ff:	ucomisd xmm0,xmm2
  41ca03:	ja     0x41b465
  41ca09:	jmp    0x41b495
  41ca0e:	xchg   ax,ax
  41ca10:	xor    eax,eax
  41ca12:	jmp    0x41bba1
  41ca17:	cmp    eax,0xd44d5058
  41ca1c:	mov    r14d,eax
  41ca1f:	mov    DWORD PTR [rsp+0x5c],eax
  41ca23:	je     0x41d2aa
  41ca29:	lea    rsi,[rsp+0xd0]
  41ca31:	lea    rdi,[rsp+0xd0]
  41ca39:	xor    eax,eax
  41ca3b:	mov    ecx,0x10
  41ca40:	mov    r8d,0x40
  41ca46:	rep stos DWORD PTR es:[rdi],eax
  41ca48:	mov    rdx,rsi
  41ca4b:	mov    ecx,r14d
  41ca4e:	call   0x422570
  41ca53:	mov    QWORD PTR [rsp+0x28],rsi
  41ca58:	mov    rax,QWORD PTR [rbx+0x8]
  41ca5c:	lea    r8,[rip+0x1ec25]        # 0x43b688
  41ca63:	mov    rcx,QWORD PTR [rsp+0x70]
  41ca68:	mov    edx,0x400
  41ca6d:	mov    eax,DWORD PTR [rax]
  41ca6f:	mov    DWORD PTR [rsp+0x20],eax
  41ca73:	mov    r9d,DWORD PTR [rbx]
  41ca76:	call   0x414ae0
  41ca7b:	xor    esi,esi
  41ca7d:	xor    ebx,ebx
  41ca7f:	cmp    DWORD PTR [rip+0x2564a],0x0        # 0x4420d0
  41ca86:	jle    0x41bccc
  41ca8c:	mov    rax,QWORD PTR [rip+0x25645]        # 0x4420d8
  41ca93:	add    ebx,0x1
  41ca96:	mov    rax,QWORD PTR [rax+rsi*1]
  41ca9a:	add    rsi,0x8
  41ca9e:	mov    rcx,QWORD PTR [rax+0x48]
  41caa2:	call   0x4223e8
  41caa7:	cmp    DWORD PTR [rip+0x25623],ebx        # 0x4420d0
  41caad:	jg     0x41ca8c
  41caaf:	jmp    0x41bccc
  41cab4:	test   BYTE PTR [rbx+0x18],0x1
  41cab8:	je     0x41ba66
  41cabe:	lea    r8,[rip+0x1e97d]        # 0x43b442
  41cac5:	lea    rdx,[rip+0x1eb2b]        # 0x43b5f7
  41cacc:	mov    r9d,0x10
  41cad2:	mov    rcx,r12
  41cad5:	call   0x422808
  41cada:	test   BYTE PTR [rbx+0x18],0x2
  41cade:	je     0x41ba66
  41cae4:	lea    r8,[rip+0x1eb1d]        # 0x43b608
  41caeb:	mov    edx,0x18
  41caf0:	xor    ecx,ecx
  41caf2:	call   0x4226c0
  41caf7:	jmp    0x41ba66
  41cafc:	call   0x422700
  41cb01:	lea    r8,[rip+0x1e790]        # 0x43b298
  41cb08:	mov    r9,rax
  41cb0b:	mov    edx,0x18
  41cb10:	xor    ecx,ecx
  41cb12:	call   0x4226c0
  41cb17:	mov    r13,QWORD PTR [r15+0x50]
  41cb1b:	mov    rdi,QWORD PTR [r15+0x108]
  41cb22:	mov    rcx,QWORD PTR [r13+0x0]
  41cb26:	lea    rdx,[rip+0x1e7e9]        # 0x43b316
  41cb2d:	mov    r8d,0xa
  41cb33:	call   0x42fac8
  41cb38:	test   eax,eax
  41cb3a:	jne    0x41cb49
  41cb3c:	cmp    DWORD PTR [rbx+0xa8],0xffffffff
  41cb43:	je     0x41ceea
  41cb49:	mov    rsi,QWORD PTR [r15+0x10]
  41cb4d:	jmp    0x41c3c8
  41cb52:	lea    r8,[rip+0x1e8e4]        # 0x43b43d
  41cb59:	lea    rdx,[rip+0x1e8d5]        # 0x43b435
  41cb60:	xor    r9d,r9d
  41cb63:	mov    rcx,rsi
  41cb66:	call   0x422808
  41cb6b:	jmp    0x41b8e5
  41cb70:	cmp    DWORD PTR [rbx+0xc],0x1
  41cb74:	ja     0x41b6b7
  41cb7a:	mov    rdx,r15
  41cb7d:	mov    rcx,rbp
  41cb80:	call   0x412860
  41cb85:	mov    rcx,rax
  41cb88:	call   0x412f50
  41cb8d:	test   eax,eax
  41cb8f:	je     0x41b6b7
  41cb95:	lea    r8,[rip+0x1e59c]        # 0x43b138
  41cb9c:	jmp    0x41c499
  41cba1:	mov    eax,DWORD PTR [r13+0x1e0]
  41cba8:	mov    edx,DWORD PTR [r13+0x1e4]
  41cbaf:	add    eax,eax
  41cbb1:	mov    DWORD PTR [rbx+0x8c],0x2
  41cbbb:	mov    DWORD PTR [rbx+0x88],eax
  41cbc1:	mov    DWORD PTR [rbx+0x84],edx
  41cbc7:	jmp    0x41b495
  41cbcc:	mov    rax,QWORD PTR [rbp+0x2c]
  41cbd0:	mov    QWORD PTR [rsi+0x58],rax
  41cbd4:	jmp    0x41c381
  41cbd9:	cmp    DWORD PTR [rbx+0x38],0x15001
  41cbe0:	jne    0x41c725
  41cbe6:	mov    DWORD PTR [rbx+0x1e4],0x0
  41cbf0:	jmp    0x41c725
  41cbf5:	lea    r8,[rip+0x1ebb4]        # 0x43b7b0
  41cbfc:	mov    edx,0x20
  41cc01:	xor    ecx,ecx
  41cc03:	call   0x4226c0
  41cc08:	jmp    0x41c230
  41cc0d:	cmp    DWORD PTR [rbx+0xc],0x1
  41cc11:	ja     0x41c0c0
  41cc17:	mov    rax,QWORD PTR [r15+0x10]
  41cc1b:	mov    DWORD PTR [rax+0x50],0x1
  41cc22:	jmp    0x41c0c0
  41cc27:	lea    r14,[rip+0x1e3df]        # 0x43b00d
  41cc2e:	mov    r15,r14
  41cc31:	jmp    0x41c20b
  41cc36:	mov    ecx,DWORD PTR [rbx+0x38]
  41cc39:	call   0x422368
  41cc3e:	test   rax,rax
  41cc41:	mov    QWORD PTR [r15+0x50],rax
  41cc45:	je     0x41cfa1
  41cc4b:	mov    rcx,QWORD PTR [rip+0x25476]        # 0x4420c8
  41cc52:	movsxd rdx,DWORD PTR [r15]
  41cc55:	jmp    0x41b66c
  41cc5a:	lea    r8,[rip+0x1e91f]        # 0x43b580
  41cc61:	mov    edx,0x8
  41cc66:	xor    ecx,ecx
  41cc68:	mov    DWORD PTR [rsp+0x5c],eax
  41cc6c:	call   0x4226c0
  41cc71:	jmp    0x41bccc
  41cc76:	mov    rcx,QWORD PTR [rdi+0x8]
  41cc7a:	lea    rdx,[rip+0x1e495]        # 0x43b116
  41cc81:	xor    r9d,r9d
  41cc84:	xor    r8d,r8d
  41cc87:	call   0x422818
  41cc8c:	test   rax,rax
  41cc8f:	mov    r13,rax
  41cc92:	je     0x41ccd1
  41cc94:	mov    DWORD PTR [rsp+0x20],0x0
  41cc9c:	mov    rcx,QWORD PTR [rdi]
  41cc9f:	lea    rdx,[rip+0x1e470]        # 0x43b116
  41cca6:	xor    r9d,r9d
  41cca9:	xor    r8d,r8d
  41ccac:	call   0x422638
  41ccb1:	test   rax,rax
  41ccb4:	je     0x41b6a9
  41ccba:	mov    r8,QWORD PTR [r13+0x8]
  41ccbe:	mov    rcx,QWORD PTR [rdi]
  41ccc1:	lea    r9,[rsp+0x90]
  41ccc9:	mov    rdx,rax
  41cccc:	call   0x422648
  41ccd1:	mov    rcx,QWORD PTR [r15+0x128]
  41ccd8:	lea    rdx,[rip+0x1e43e]        # 0x43b11d
  41ccdf:	xor    r9d,r9d
  41cce2:	xor    r8d,r8d
  41cce5:	call   0x422818
  41ccea:	test   rax,rax
  41cced:	mov    rdi,rax
  41ccf0:	je     0x41cd31
  41ccf2:	mov    rcx,QWORD PTR [r15+0x48]
  41ccf6:	lea    rdx,[rip+0x1e420]        # 0x43b11d
  41ccfd:	xor    r9d,r9d
  41cd00:	xor    r8d,r8d
  41cd03:	mov    DWORD PTR [rsp+0x20],0x0
  41cd0b:	call   0x422638
  41cd10:	test   rax,rax
  41cd13:	mov    rdx,rax
  41cd16:	je     0x41b6a9
  41cd1c:	mov    rcx,QWORD PTR [r15+0x48]
  41cd20:	mov    r8,QWORD PTR [rdi+0x8]
  41cd24:	lea    r9,[rsp+0xd0]
  41cd2c:	call   0x422648
  41cd31:	mov    rax,QWORD PTR [r15+0x50]
  41cd35:	or     rcx,0xffffffffffffffff
  41cd39:	mov    rdi,QWORD PTR [rax]
  41cd3c:	xor    eax,eax
  41cd3e:	repnz scas al,BYTE PTR es:[rdi]
  41cd40:	mov    rax,rcx
  41cd43:	not    rax
  41cd46:	lea    edi,[rax+0xf]
  41cd49:	movsxd rdi,edi
  41cd4c:	mov    rcx,rdi
  41cd4f:	call   0x422670
  41cd54:	test   rax,rax
  41cd57:	mov    r13,rax
  41cd5a:	je     0x41d2aa
  41cd60:	test   BYTE PTR [rsp+0x91],0x4
  41cd68:	mov    r8,rdi
  41cd6b:	jne    0x41cd7b
  41cd6d:	test   BYTE PTR [rsp+0xd2],0x80
  41cd75:	je     0x41cfeb
  41cd7b:	lea    rdx,[rip+0x1e3b0]        # 0x43b132
  41cd82:	mov    rcx,r13
  41cd85:	call   0x422558
  41cd8a:	mov    rax,QWORD PTR [r15+0x50]
  41cd8e:	mov    r8,rdi
  41cd91:	mov    rcx,r13
  41cd94:	mov    rdx,QWORD PTR [rax]
  41cd97:	call   0x422568
  41cd9c:	mov    rax,QWORD PTR [r15+0x10]
  41cda0:	lea    rdx,[rip+0x1e367]        # 0x43b10e
  41cda7:	mov    r9d,0x18
  41cdad:	mov    r8,r13
  41cdb0:	lea    rcx,[rax+0x60]
  41cdb4:	call   0x422808
  41cdb9:	jmp    0x41b6a9
  41cdbe:	mov    r9,QWORD PTR [rsp+0x70]
  41cdc3:	lea    r8,[rip+0x1ea04]        # 0x43b7ce
  41cdca:	mov    edx,0x10
  41cdcf:	xor    ecx,ecx
  41cdd1:	call   0x4226c0
  41cdd6:	mov    eax,DWORD PTR [rsp+0x5c]
  41cdda:	jmp    0x41bf52
  41cddf:	mov    rax,QWORD PTR [rsp+0x50]
  41cde4:	mov    rsi,QWORD PTR [rax+0x108]
  41cdeb:	jmp    0x41c796
  41cdf0:	lea    rdx,[rbx+0x5]
  41cdf4:	lea    rcx,[r15+0xb8]
  41cdfb:	lea    r8,[rip+0x1f4de]        # 0x43c2e0
  41ce02:	xor    r9d,r9d
  41ce05:	mov    QWORD PTR [rsp+0x40],0x0
  41ce0e:	mov    DWORD PTR [rsp+0x38],0x0
  41ce16:	mov    QWORD PTR [rsp+0x30],0x0
  41ce1f:	mov    QWORD PTR [rsp+0x28],0x0
  41ce28:	mov    QWORD PTR [rsp+0x20],0x0
  41ce31:	call   0x4227e0
  41ce36:	test   eax,eax
  41ce38:	mov    DWORD PTR [rsp+0x5c],eax
  41ce3c:	js     0x41d26d
  41ce42:	movsd  xmm5,QWORD PTR [rip+0x1f54e]        # 0x43c398
  41ce4a:	mov    QWORD PTR [r15+0xc0],0x0
  41ce55:	mov    QWORD PTR [r15+0xc8],0x0
  41ce60:	movsd  QWORD PTR [r15+0xd0],xmm5
  41ce69:	movsd  QWORD PTR [r15+0xd8],xmm5
  41ce72:	jmp    0x41b7b0
  41ce77:	mov    rdi,QWORD PTR [rsp+0x50]
  41ce7c:	mov    edi,DWORD PTR [rdi+0x98]
  41ce82:	cmp    DWORD PTR [rbx+0x98],edi
  41ce88:	jne    0x41c402
  41ce8e:	mov    rdi,QWORD PTR [rsp+0x50]
  41ce93:	cmp    eax,DWORD PTR [rdi+0xa8]
  41ce99:	jne    0x41c402
  41ce9f:	jmp    0x41c411
  41cea4:	lea    r8,[rip+0x1e592]        # 0x43b43d
  41ceab:	lea    rdx,[rip+0x1e583]        # 0x43b435
  41ceb2:	xor    r9d,r9d
  41ceb5:	mov    rcx,r12
  41ceb8:	call   0x422808
  41cebd:	jmp    0x41ba88
  41cec2:	mov    ecx,DWORD PTR [rbp+0x44]
  41cec5:	test   ecx,ecx
  41cec7:	jne    0x41cafc
  41cecd:	lea    rdx,[rip+0x1e442]        # 0x43b316
  41ced4:	mov    r8d,0xa
  41ceda:	mov    rcx,r9
  41cedd:	call   0x42fac8
  41cee2:	test   eax,eax
  41cee4:	jne    0x41c3c8
  41ceea:	mov    rax,QWORD PTR [rdi]
  41ceed:	mov    rax,QWORD PTR [rax+0x20]
  41cef1:	mov    rax,QWORD PTR [rax]
  41cef4:	mov    ecx,DWORD PTR [rax+0x44]
  41cef7:	test   ecx,ecx
  41cef9:	je     0x41cb49
  41ceff:	call   0x422700
  41cf04:	lea    r8,[rip+0x1e41d]        # 0x43b328
  41cf0b:	mov    r9,rax
  41cf0e:	mov    edx,0x18
  41cf13:	xor    ecx,ecx
  41cf15:	call   0x4226c0
  41cf1a:	mov    rsi,QWORD PTR [r15+0x10]
  41cf1e:	mov    rdi,QWORD PTR [r15+0x108]
  41cf25:	jmp    0x41c3c8
  41cf2a:	mov    rcx,QWORD PTR [r15+0x94]
  41cf31:	shl    rax,0x20
  41cf35:	or     rdx,rax
  41cf38:	call   0x422658
  41cf3d:	lea    r8,[rip+0x1e14c]        # 0x43b090
  41cf44:	xor    ecx,ecx
  41cf46:	mov    edx,0x18
  41cf4b:	mov    rsi,rax
  41cf4e:	call   0x4226c0
  41cf53:	mov    rcx,QWORD PTR [rbp+0x8]
  41cf57:	jmp    0x41c796
  41cf5c:	mov    DWORD PTR [rsp+0x5c],eax
  41cf60:	jmp    0x41bcd1
  41cf65:	mov    DWORD PTR [rsp+0x5c],0x0
  41cf6d:	jmp    0x41b9d4
  41cf72:	mov    eax,0xffffffea
  41cf77:	jmp    0x41bf52
  41cf7c:	mov    DWORD PTR [rsp+0x5c],0xfffffff4
  41cf84:	jmp    0x41bccc
  41cf89:	lea    rbx,[rip+0x1e07d]        # 0x43b00d
  41cf90:	jmp    0x41c1c7
  41cf95:	lea    r14,[rip+0x1e071]        # 0x43b00d
  41cf9c:	jmp    0x41c1fa
  41cfa1:	mov    rax,QWORD PTR [r15+0x10]
  41cfa5:	mov    esi,DWORD PTR [r15+0x4]
  41cfa9:	mov    ebp,0x1
  41cfae:	mov    ebx,DWORD PTR [r15]
  41cfb1:	mov    rax,QWORD PTR [rax+0x8]
  41cfb5:	mov    ecx,DWORD PTR [rax+0x38]
  41cfb8:	call   0x422338
  41cfbd:	mov    rcx,QWORD PTR [rsp+0x70]
  41cfc2:	lea    r8,[rip+0x1e10f]        # 0x43b0d8
  41cfc9:	mov    r9,rax
  41cfcc:	mov    DWORD PTR [rsp+0x28],esi
  41cfd0:	mov    DWORD PTR [rsp+0x20],ebx
  41cfd4:	mov    edx,0x400
  41cfd9:	call   0x414ae0
  41cfde:	mov    DWORD PTR [rsp+0x5c],0xffffffea
  41cfe6:	jmp    0x41bcd1
  41cfeb:	lea    rdx,[rip+0x1e131]        # 0x43b123
  41cff2:	mov    rcx,rax
  41cff5:	call   0x422558
  41cffa:	jmp    0x41cd8a
  41cfff:	mov    edi,ecx
  41d001:	movsxd rcx,ecx
  41d004:	shl    rcx,0x3
  41d008:	call   0x422678
  41d00d:	test   rax,rax
  41d010:	je     0x41c492
  41d016:	mov    QWORD PTR [rsp+0x78],r15
  41d01b:	mov    QWORD PTR [rsp+0x88],r14
  41d023:	add    rsi,0x84
  41d02a:	mov    DWORD PTR [rsp+0x50],0x0
  41d032:	mov    DWORD PTR [rsp+0x60],0x0
  41d03a:	mov    r15d,edi
  41d03d:	mov    DWORD PTR [rsp+0x84],r12d
  41d045:	mov    r14,rax
  41d048:	nop    DWORD PTR [rax+rax*1+0x0]
  41d050:	mov    edx,0x2c
  41d055:	mov    rcx,rbx
  41d058:	call   0x42fb00
  41d05d:	test   rax,rax
  41d060:	je     0x41d1c9
  41d066:	lea    rdi,[rax+0x1]
  41d06a:	mov    BYTE PTR [rax],0x0
  41d06d:	mov    QWORD PTR [rsp+0x68],rdi
  41d072:	lea    rdx,[rip+0x1e394]        # 0x43b40d
  41d079:	mov    r8d,0x8
  41d07f:	mov    rcx,rbx
  41d082:	call   0x42fb48
  41d087:	test   eax,eax
  41d089:	jne    0x41d166
  41d08f:	mov    rax,QWORD PTR [rsp+0x78]
  41d094:	movsxd rdx,DWORD PTR [rax]
  41d097:	mov    rax,QWORD PTR [rip+0x2502a]        # 0x4420c8
  41d09e:	mov    rax,QWORD PTR [rax+rdx*8]
  41d0a2:	mov    edx,0x7fffffff
  41d0a7:	sub    edx,r15d
  41d0aa:	mov    rbp,QWORD PTR [rax]
  41d0ad:	mov    eax,DWORD PTR [rbp+0x48c]
  41d0b3:	cmp    eax,edx
  41d0b5:	ja     0x41c492
  41d0bb:	lea    r15d,[r15+rax*1-0x1]
  41d0c0:	mov    rcx,r14
  41d0c3:	mov    r8d,0x8
  41d0c9:	movsxd rdx,r15d
  41d0cc:	call   0x4225b0
  41d0d1:	test   rax,rax
  41d0d4:	mov    r14,rax
  41d0d7:	je     0x41c492
  41d0dd:	xor    ecx,ecx
  41d0df:	cmp    BYTE PTR [rbx+0x8],0x0
  41d0e3:	jne    0x41d1ab
  41d0e9:	mov    r8,QWORD PTR [rsi]
  41d0ec:	movabs rdx,0xf424000000000
  41d0f6:	or     rdx,0x1
  41d0fa:	call   0x422588
  41d0ff:	mov    ebx,DWORD PTR [rbp+0x48c]
  41d105:	mov    rdi,rax
  41d108:	test   ebx,ebx
  41d10a:	je     0x41d14a
  41d10c:	movsxd rax,DWORD PTR [rsp+0x60]
  41d111:	mov    r13,QWORD PTR [rbp+0x490]
  41d118:	xor    r12d,r12d
  41d11b:	lea    rbp,[r14+rax*8]
  41d11f:	nop
  41d120:	mov    rax,QWORD PTR [r13+r12*8+0x0]
  41d125:	mov    r8,QWORD PTR [rsi]
  41d128:	mov    rdx,QWORD PTR [rax+0x4]
  41d12c:	mov    rcx,QWORD PTR [rax+0x10]
  41d130:	call   0x422588
  41d135:	add    rax,rdi
  41d138:	mov    QWORD PTR [rbp+r12*8+0x0],rax
  41d13d:	add    r12,0x1
  41d141:	cmp    ebx,r12d
  41d144:	ja     0x41d120
  41d146:	add    DWORD PTR [rsp+0x60],ebx
  41d14a:	add    DWORD PTR [rsp+0x50],0x1
  41d14f:	mov    eax,DWORD PTR [rsp+0x50]
  41d153:	cmp    eax,DWORD PTR [rsp+0x80]
  41d15a:	je     0x41d1d7
  41d15c:	mov    rbx,QWORD PTR [rsp+0x68]
  41d161:	jmp    0x41d050
  41d166:	lea    rcx,[rip+0x1e2a9]        # 0x43b416
  41d16d:	mov    rdx,rbx
  41d170:	mov    r8d,0x1
  41d176:	call   0x4024d0
  41d17b:	movsxd r12,DWORD PTR [rsp+0x60]
  41d180:	mov    r8,QWORD PTR [rsi]
  41d183:	movabs rdx,0xf424000000000
  41d18d:	or     rdx,0x1
  41d191:	mov    rcx,rax
  41d194:	call   0x422588
  41d199:	lea    ebx,[r12+0x1]
  41d19e:	lea    rdi,[r14+r12*8]
  41d1a2:	mov    DWORD PTR [rsp+0x60],ebx
  41d1a6:	mov    QWORD PTR [rdi],rax
  41d1a9:	jmp    0x41d14a
  41d1ab:	lea    rcx,[rip+0x1e264]        # 0x43b416
  41d1b2:	lea    rdx,[rbx+0x8]
  41d1b6:	mov    r8d,0x1
  41d1bc:	call   0x4024d0
  41d1c1:	mov    rcx,rax
  41d1c4:	jmp    0x41d0e9
  41d1c9:	mov    QWORD PTR [rsp+0x68],0x0
  41d1d2:	jmp    0x41d072
  41d1d7:	mov    edi,r15d
  41d1da:	cmp    DWORD PTR [rsp+0x60],edi
  41d1de:	mov    rsi,r14
  41d1e1:	mov    r12d,DWORD PTR [rsp+0x84]
  41d1e9:	mov    r15,QWORD PTR [rsp+0x78]
  41d1ee:	mov    r14,QWORD PTR [rsp+0x88]
  41d1f6:	jne    0x41d345
  41d1fc:	mov    edi,DWORD PTR [rsp+0x60]
  41d200:	lea    r9,[rip+0xffffffffffff72b9]        # 0x4144c0
  41d207:	mov    r8d,0x8
  41d20d:	mov    rcx,rsi
  41d210:	movsxd rdx,edi
  41d213:	call   0x42fb20
  41d218:	mov    DWORD PTR [r15+0xa8],edi
  41d21f:	mov    QWORD PTR [r15+0xa0],rsi
  41d226:	jmp    0x41b7b0
  41d22b:	mov    rax,QWORD PTR [rbx+0x8]
  41d22f:	mov    esi,DWORD PTR [rbx]
  41d231:	mov    edi,DWORD PTR [rax]
  41d233:	mov    rax,QWORD PTR [rbx+0x20]
  41d237:	mov    ecx,DWORD PTR [rax+0x38]
  41d23a:	call   0x422338
  41d23f:	mov    rcx,QWORD PTR [rsp+0x70]
  41d244:	lea    r8,[rip+0x1e365]        # 0x43b5b0
  41d24b:	mov    r9,rax
  41d24e:	mov    DWORD PTR [rsp+0x28],edi
  41d252:	mov    DWORD PTR [rsp+0x20],esi
  41d256:	mov    edx,0x400
  41d25b:	call   0x414ae0
  41d260:	mov    DWORD PTR [rsp+0x5c],0xffffffea
  41d268:	jmp    0x41ca7b
  41d26d:	mov    r9,QWORD PTR [r15+0xb0]
  41d274:	lea    r8,[rip+0x1e135]        # 0x43b3b0
  41d27b:	mov    edx,0x10
  41d280:	xor    ecx,ecx
  41d282:	add    r9,0x5
  41d286:	call   0x4226c0
  41d28b:	mov    eax,DWORD PTR [rsp+0x5c]
  41d28f:	jmp    0x41bf52
  41d294:	mov    r9,QWORD PTR [rax]
  41d297:	lea    r8,[rip+0x1e244]        # 0x43b4e2
  41d29e:	mov    edx,0x8
  41d2a3:	xor    ecx,ecx
  41d2a5:	call   0x4226c0
  41d2aa:	mov    ecx,0x1
  41d2af:	call   0x401cb0
  41d2b4:	lea    r8,[rip+0x1e28d]        # 0x43b548
  41d2bb:	jmp    0x41c499
  41d2c0:	lea    r8,[rip+0x1dd81]        # 0x43b048
  41d2c7:	jmp    0x41c499
  41d2cc:	mov    rax,QWORD PTR [rsp+0x50]
  41d2d1:	mov    eax,DWORD PTR [rax+0x88]
  41d2d7:	test   eax,eax
  41d2d9:	je     0x41b495
  41d2df:	pxor   xmm3,xmm3
  41d2e3:	mov    rdi,QWORD PTR [rsp+0x50]
  41d2e8:	pxor   xmm2,xmm2
  41d2ec:	pxor   xmm0,xmm0
  41d2f0:	cvtsi2sd xmm3,eax
  41d2f4:	pxor   xmm1,xmm1
  41d2f8:	cvtsi2sd xmm2,DWORD PTR [r13+0x30]
  41d2fe:	cvtsi2sd xmm0,DWORD PTR [r13+0x34]
  41d304:	divsd  xmm2,xmm0
  41d308:	cvtsi2sd xmm1,DWORD PTR [rdi+0x8c]
  41d310:	pxor   xmm0,xmm0
  41d314:	cvtsi2sd xmm0,DWORD PTR [rdi+0x84]
  41d31c:	divsd  xmm0,xmm3
  41d320:	mulsd  xmm0,xmm1
  41d324:	ucomisd xmm0,xmm2
  41d328:	jbe    0x41b495
  41d32e:	movsd  xmm5,QWORD PTR [rip+0x1f0ba]        # 0x43c3f0
  41d336:	ucomisd xmm5,xmm2
  41d33a:	ja     0x41c059
  41d340:	jmp    0x41b495
  41d345:	lea    rax,[rip+0x1db5f]        # 0x43aeab
  41d34c:	mov    DWORD PTR [rsp+0x28],0xa9c
  41d354:	lea    r9,[rip+0x1e0cc]        # 0x43b427
  41d35b:	mov    QWORD PTR [rsp+0x20],rax
  41d360:	jmp    0x41c0e4
  41d365:	nop
  41d366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d370:	push   r15
  41d372:	push   r14
  41d374:	push   r13
  41d376:	push   r12
  41d378:	push   rbp
  41d379:	push   rdi
  41d37a:	push   rsi
  41d37b:	push   rbx
  41d37c:	sub    rsp,0x288
  41d383:	movaps XMMWORD PTR [rsp+0x240],xmm6
  41d38b:	movaps XMMWORD PTR [rsp+0x250],xmm7
  41d393:	movaps XMMWORD PTR [rsp+0x260],xmm8
  41d39c:	movaps XMMWORD PTR [rsp+0x270],xmm9
  41d3a5:	mov    r8d,DWORD PTR [rip+0x24d24]        # 0x4420d0
  41d3ac:	mov    QWORD PTR [rsp+0x78],0x0
  41d3b5:	mov    DWORD PTR [rsp+0x88],0x0
  41d3c0:	test   r8d,r8d
  41d3c3:	jle    0x41da4e
  41d3c9:	mov    rax,QWORD PTR [rip+0x20330]        # 0x43d700
  41d3d0:	pxor   xmm9,xmm9
  41d3d5:	movsd  xmm8,QWORD PTR [rip+0x1f022]        # 0x43c400
  41d3de:	mov    DWORD PTR [rsp+0x8c],ecx
  41d3e5:	mov    QWORD PTR [rsp+0x80],rax
  41d3ed:	mov    rax,QWORD PTR [rip+0x24ce4]        # 0x4420d8
  41d3f4:	mov    rdi,QWORD PTR [rsp+0x78]
  41d3f9:	mov    rdi,QWORD PTR [rax+rdi*1]
  41d3fd:	mov    rax,QWORD PTR [rip+0x24cc4]        # 0x4420c8
  41d404:	movsxd rdx,DWORD PTR [rdi]
  41d407:	mov    r15,QWORD PTR [rdi+0x48]
  41d40b:	mov    rax,QWORD PTR [rax+rdx*8]
  41d40f:	mov    QWORD PTR [rsp+0x50],rax
  41d414:	mov    rax,QWORD PTR [rdi+0x108]
  41d41b:	test   rax,rax
  41d41e:	je     0x41da30
  41d424:	mov    r12,QWORD PTR [rdi+0x60]
  41d428:	mov    r14,QWORD PTR [rax]
  41d42b:	test   r12,r12
  41d42e:	je     0x41dc40
  41d434:	mov    rax,r14
  41d437:	movsd  xmm7,QWORD PTR [rip+0x1efc9]        # 0x43c408
  41d43f:	mov    r14,r15
  41d442:	mov    r15,rax
  41d445:	mov    r8d,0x2
  41d44b:	mov    rdx,r12
  41d44e:	mov    rcx,r15
  41d451:	call   0x422140
  41d456:	test   eax,eax
  41d458:	js     0x41daa1
  41d45e:	mov    ebx,DWORD PTR [rdi+0x158]
  41d464:	test   ebx,ebx
  41d466:	jne    0x41d600
  41d46c:	mov    rbp,QWORD PTR [r12+0xc8]
  41d474:	movabs rax,0x8000000000000000
  41d47e:	cmp    rbp,rax
  41d481:	je     0x41d780
  41d487:	mov    rbx,QWORD PTR [rsp+0x50]
  41d48c:	mov    esi,DWORD PTR [r14+0x88]
  41d493:	mov    r13,QWORD PTR [rbx+0x20]
  41d497:	mov    ecx,esi
  41d499:	mov    ebx,0x1d
  41d49e:	cmp    r13,rax
  41d4a1:	mov    eax,0x0
  41d4a6:	cmove  r13,rax
  41d4aa:	mov    rax,QWORD PTR [r14+0x84]
  41d4b1:	mov    QWORD PTR [rsp+0x48],rax
  41d4b6:	call   0x4226b8
  41d4bb:	sub    ebx,eax
  41d4bd:	mov    eax,0x10
  41d4c2:	cmp    ebx,0x10
  41d4c5:	cmovg  ebx,eax
  41d4c8:	mov    al,0x0
  41d4ca:	test   ebx,ebx
  41d4cc:	cmovs  ebx,eax
  41d4cf:	mov    rax,QWORD PTR [r15+0x20]
  41d4d3:	mov    ecx,ebx
  41d4d5:	shl    esi,cl
  41d4d7:	mov    rcx,rbp
  41d4da:	mov    r10,QWORD PTR [rax]
  41d4dd:	mov    eax,DWORD PTR [rsp+0x48]
  41d4e1:	shl    rsi,0x20
  41d4e5:	mov    r11,QWORD PTR [r10+0x48]
  41d4e9:	mov    QWORD PTR [rsp+0x70],r10
  41d4ee:	or     rsi,rax
  41d4f1:	mov    r8,rsi
  41d4f4:	mov    rdx,r11
  41d4f7:	mov    QWORD PTR [rsp+0x68],r11
  41d4fc:	call   0x422588
  41d501:	movabs r9,0xf424000000000
  41d50b:	mov    r8,rsi
  41d50e:	mov    rcx,r13
  41d511:	mov    rdx,r9
  41d514:	mov    QWORD PTR [rsp+0x60],r9
  41d519:	mov    QWORD PTR [rsp+0x58],rax
  41d51e:	or     rdx,0x1
  41d522:	call   0x422588
  41d527:	mov    rcx,QWORD PTR [rsp+0x58]
  41d52c:	pxor   xmm0,xmm0
  41d530:	pxor   xmm1,xmm1
  41d534:	mov    r11,QWORD PTR [rsp+0x68]
  41d539:	movapd xmm2,xmm8
  41d53e:	mov    rsi,QWORD PTR [rsp+0x48]
  41d543:	sub    rcx,rax
  41d546:	mov    eax,0x1
  41d54b:	cvtsi2sd xmm0,rcx
  41d550:	mov    ecx,ebx
  41d552:	mov    rdx,r11
  41d555:	shl    eax,cl
  41d557:	mov    r8,rsi
  41d55a:	mov    rcx,rbp
  41d55d:	cvtsi2sd xmm1,eax
  41d561:	divsd  xmm0,xmm1
  41d565:	movapd xmm1,xmm9
  41d56a:	cmpltsd xmm1,xmm0
  41d56f:	andpd  xmm2,xmm1
  41d573:	andnpd xmm1,xmm7
  41d577:	orpd   xmm1,xmm2
  41d57b:	movapd xmm6,xmm1
  41d57f:	addsd  xmm6,xmm0
  41d583:	call   0x422588
  41d588:	mov    r9,QWORD PTR [rsp+0x60]
  41d58d:	mov    r8,rsi
  41d590:	mov    rcx,r13
  41d593:	mov    rbp,rax
  41d596:	mov    rdx,r9
  41d599:	or     rdx,0x1
  41d59d:	call   0x422588
  41d5a2:	mov    r10,QWORD PTR [rsp+0x70]
  41d5a7:	sub    rbp,rax
  41d5aa:	mov    QWORD PTR [r12+0xc8],rbp
  41d5b2:	mov    eax,DWORD PTR [r10+0x20]
  41d5b6:	test   eax,eax
  41d5b8:	je     0x41d740
  41d5be:	cmp    eax,0x1
  41d5c1:	jne    0x41d710
  41d5c7:	mov    rax,QWORD PTR [r14+0x10]
  41d5cb:	test   BYTE PTR [rax+0x19],0x40
  41d5cf:	jne    0x41d610
  41d5d1:	mov    ebx,DWORD PTR [r14+0x1d4]
  41d5d8:	mov    rcx,r12
  41d5db:	call   0x422798
  41d5e0:	cmp    ebx,eax
  41d5e2:	je     0x41d610
  41d5e4:	lea    r8,[rip+0x1e26d]        # 0x43b858
  41d5eb:	mov    edx,0x10
  41d5f0:	xor    ecx,ecx
  41d5f2:	call   0x4226c0
  41d5f7:	nop    WORD PTR [rax+rax*1+0x0]
  41d600:	mov    rcx,r12
  41d603:	call   0x422778
  41d608:	jmp    0x41d445
  41d60d:	nop    DWORD PTR [rax]
  41d610:	mov    rax,QWORD PTR [rsp+0x50]
  41d615:	lea    rbx,[rsp+0x1e0]
  41d61d:	mov    rsi,QWORD PTR [rdi+0x48]
  41d621:	mov    rcx,rbx
  41d624:	mov    rbp,QWORD PTR [rax]
  41d627:	mov    DWORD PTR [rsp+0x9c],0x0
  41d632:	call   0x422430
  41d637:	movsxd rdx,DWORD PTR [rdi]
  41d63a:	mov    rax,QWORD PTR [rip+0x24a87]        # 0x4420c8
  41d641:	mov    QWORD PTR [rsp+0x1f8],0x0
  41d64d:	mov    DWORD PTR [rsp+0x200],0x0
  41d658:	mov    rax,QWORD PTR [rax+rdx*8]
  41d65c:	mov    r8,QWORD PTR [rax+0x18]
  41d660:	movabs rax,0x7fffffffffffffff
  41d66a:	cmp    r8,rax
  41d66d:	je     0x41d8e0
  41d673:	mov    rax,QWORD PTR [rdi+0x48]
  41d677:	mov    rcx,QWORD PTR [rdi+0x28]
  41d67b:	movabs r13,0xf424000000000
  41d685:	sub    rcx,QWORD PTR [rdi+0x30]
  41d689:	mov    r9,r13
  41d68c:	or     r9,0x1
  41d690:	mov    rdx,QWORD PTR [rax+0x84]
  41d697:	call   0x422838
  41d69c:	test   eax,eax
  41d69e:	mov    ecx,DWORD PTR [rsp+0x200]
  41d6a5:	js     0x41d8e2
  41d6ab:	movsxd rdx,DWORD PTR [rdi]
  41d6ae:	mov    rax,QWORD PTR [rip+0x24a13]        # 0x4420c8
  41d6b5:	mov    rbx,QWORD PTR [rax+rdx*8]
  41d6b9:	or     DWORD PTR [rdi+0x158],0x1
  41d6c0:	mov    r9d,DWORD PTR [rbx+0x30]
  41d6c4:	test   r9d,r9d
  41d6c7:	je     0x41d600
  41d6cd:	mov    rax,QWORD PTR [rdi+0x48]
  41d6d1:	mov    rcx,QWORD PTR [rdi+0x28]
  41d6d5:	mov    r8,r13
  41d6d8:	sub    rcx,QWORD PTR [rdi+0x30]
  41d6dc:	or     r8,0x1
  41d6e0:	mov    rdx,QWORD PTR [rax+0x84]
  41d6e7:	call   0x422588
  41d6ec:	mov    rdx,QWORD PTR [rbx+0x18]
  41d6f0:	mov    rcx,r12
  41d6f3:	cmp    rax,rdx
  41d6f6:	cmovg  rax,rdx
  41d6fa:	mov    QWORD PTR [rbx+0x18],rax
  41d6fe:	call   0x422778
  41d703:	jmp    0x41d445
  41d708:	nop    DWORD PTR [rax+rax*1+0x0]
  41d710:	lea    rax,[rip+0x1d794]        # 0x43aeab
  41d717:	lea    r9,[rip+0x1d76d]        # 0x43ae8b
  41d71e:	mov    DWORD PTR [rsp+0x28],0x57a
  41d726:	mov    QWORD PTR [rsp+0x20],rax
  41d72b:	lea    r8,[rip+0x1d75b]        # 0x43ae8d
  41d732:	xor    edx,edx
  41d734:	xor    ecx,ecx
  41d736:	call   0x4226c0
  41d73b:	call   0x42fbf8
  41d740:	mov    r11d,DWORD PTR [rdi+0x94]
  41d747:	test   r11d,r11d
  41d74a:	je     0x41d794
  41d74c:	mov    rax,QWORD PTR [rip+0x1ffad]        # 0x43d700
  41d753:	mov    r10d,DWORD PTR [rax]
  41d756:	test   r10d,r10d
  41d759:	jne    0x41d7b2
  41d75b:	mov    rax,QWORD PTR [rsp+0x50]
  41d760:	movapd xmm3,xmm6
  41d764:	mov    r8,r12
  41d767:	mov    rdx,rdi
  41d76a:	mov    rcx,QWORD PTR [rax]
  41d76d:	call   0x419c30
  41d772:	mov    rcx,r12
  41d775:	call   0x422778
  41d77a:	jmp    0x41d445
  41d77f:	nop
  41d780:	mov    rax,QWORD PTR [r15+0x20]
  41d784:	movsd  xmm6,QWORD PTR [rip+0x1ec84]        # 0x43c410
  41d78c:	mov    r10,QWORD PTR [rax]
  41d78f:	jmp    0x41d5b2
  41d794:	mov    rax,QWORD PTR [r12+0xc0]
  41d79c:	mov    QWORD PTR [r14+0x108],rax
  41d7a3:	mov    rax,QWORD PTR [rip+0x1ff56]        # 0x43d700
  41d7aa:	mov    r10d,DWORD PTR [rax]
  41d7ad:	test   r10d,r10d
  41d7b0:	je     0x41d75b
  41d7b2:	movabs rax,0x8000000000000000
  41d7bc:	mov    r13d,DWORD PTR [r14+0x88]
  41d7c3:	mov    esi,DWORD PTR [r14+0x84]
  41d7ca:	cmp    rbp,rax
  41d7cd:	mov    QWORD PTR [rsp+0xc0],0x0
  41d7d9:	mov    QWORD PTR [rsp+0xc8],0x0
  41d7e5:	mov    QWORD PTR [rsp+0xd0],0x0
  41d7f1:	mov    QWORD PTR [rsp+0xd8],0x0
  41d7fd:	je     0x41dc80
  41d803:	pxor   xmm0,xmm0
  41d807:	lea    r8,[rip+0x1d0b8]        # 0x43a8c6
  41d80e:	pxor   xmm1,xmm1
  41d812:	mov    edx,0x20
  41d817:	cvtsi2sd xmm0,esi
  41d81b:	cvtsi2sd xmm1,r13d
  41d820:	divsd  xmm0,xmm1
  41d824:	pxor   xmm1,xmm1
  41d828:	cvtsi2sd xmm1,rbp
  41d82d:	lea    rbp,[rsp+0xc0]
  41d835:	mov    rcx,rbp
  41d838:	mulsd  xmm0,xmm1
  41d83c:	movapd xmm3,xmm0
  41d840:	movq   r9,xmm0
  41d845:	call   0x414ae0
  41d84a:	mov    r9,QWORD PTR [r12+0xc8]
  41d852:	movabs rax,0x8000000000000000
  41d85c:	mov    QWORD PTR [rsp+0xa0],0x0
  41d868:	mov    QWORD PTR [rsp+0xa8],0x0
  41d874:	mov    QWORD PTR [rsp+0xb0],0x0
  41d880:	lea    rbx,[rsp+0xa0]
  41d888:	mov    QWORD PTR [rsp+0xb8],0x0
  41d894:	cmp    r9,rax
  41d897:	je     0x41dc60
  41d89d:	lea    r8,[rip+0x1d027]        # 0x43a8cb
  41d8a4:	mov    edx,0x20
  41d8a9:	mov    rcx,rbx
  41d8ac:	call   0x414ae0
  41d8b1:	movsd  QWORD PTR [rsp+0x28],xmm6
  41d8b7:	lea    r8,[rip+0x1df62]        # 0x43b820
  41d8be:	mov    DWORD PTR [rsp+0x38],r13d
  41d8c3:	mov    DWORD PTR [rsp+0x30],esi
  41d8c7:	mov    QWORD PTR [rsp+0x20],rbp
  41d8cc:	mov    r9,rbx
  41d8cf:	mov    edx,0x20
  41d8d4:	xor    ecx,ecx
  41d8d6:	call   0x4226c0
  41d8db:	jmp    0x41d75b
  41d8e0:	xor    ecx,ecx
  41d8e2:	mov    rax,QWORD PTR [r12+0xc8]
  41d8ea:	movabs rdx,0x8000000000000000
  41d8f4:	cmp    rax,rdx
  41d8f7:	je     0x41da90
  41d8fd:	mov    rdx,QWORD PTR [rip+0x1fd7c]        # 0x43d680
  41d904:	mov    r8d,DWORD PTR [rdx]
  41d907:	test   r8d,r8d
  41d90a:	js     0x41da90
  41d910:	movsxd rdx,DWORD PTR [r12+0x70]
  41d915:	add    QWORD PTR [rdi+0x1a0],0x1
  41d91d:	add    QWORD PTR [rdi+0x1a8],rdx
  41d924:	add    rax,rdx
  41d927:	test   ecx,ecx
  41d929:	mov    QWORD PTR [rdi+0x28],rax
  41d92d:	jne    0x41d93e
  41d92f:	cmp    QWORD PTR [rsp+0x1f8],0x0
  41d938:	jne    0x41dfcf
  41d93e:	xor    ecx,ecx
  41d940:	call   0x4166f0
  41d945:	mov    rax,QWORD PTR [rsp+0x80]
  41d94d:	mov    ecx,DWORD PTR [rax]
  41d94f:	test   ecx,ecx
  41d951:	jne    0x41daf0
  41d957:	lea    r9,[rsp+0x9c]
  41d95f:	mov    r8,r12
  41d962:	mov    rdx,rbx
  41d965:	mov    rcx,rsi
  41d968:	call   0x422398
  41d96d:	test   eax,eax
  41d96f:	js     0x41dfef
  41d975:	mov    edx,DWORD PTR [rdi]
  41d977:	mov    r8d,DWORD PTR [rdi+0x4]
  41d97b:	lea    rcx,[rip+0x1dfc5]        # 0x43b947
  41d982:	call   0x416780
  41d987:	mov    edx,DWORD PTR [rsp+0x9c]
  41d98e:	test   edx,edx
  41d990:	je     0x41d600
  41d996:	mov    rax,QWORD PTR [rdi+0x10]
  41d99a:	mov    rdx,QWORD PTR [rsi+0x84]
  41d9a1:	mov    rcx,rbx
  41d9a4:	mov    r8,QWORD PTR [rax+0x30]
  41d9a8:	call   0x422418
  41d9ad:	mov    rax,QWORD PTR [rsp+0x80]
  41d9b5:	mov    eax,DWORD PTR [rax]
  41d9b7:	test   eax,eax
  41d9b9:	jne    0x41dcc1
  41d9bf:	mov    rcx,rbp
  41d9c2:	mov    r8,rdi
  41d9c5:	mov    rdx,rbx
  41d9c8:	call   0x418290
  41d9cd:	mov    rcx,r12
  41d9d0:	call   0x422778
  41d9d5:	jmp    0x41d445
  41d9da:	nop    WORD PTR [rax+rax*1+0x0]
  41d9e0:	lea    rbx,[rsp+0x1a0]
  41d9e8:	lea    rdi,[rsp+0x1a0]
  41d9f0:	xor    eax,eax
  41d9f2:	mov    ecx,0x8
  41d9f7:	mov    r8d,0x40
  41d9fd:	rep stos QWORD PTR es:[rdi],rax
  41da00:	mov    rdx,rbx
  41da03:	mov    ecx,r10d
  41da06:	call   0x422570
  41da0b:	lea    r8,[rip+0x1ddde]        # 0x43b7f0
  41da12:	mov    r9,rbx
  41da15:	mov    edx,0x18
  41da1a:	xor    ecx,ecx
  41da1c:	call   0x4226c0
  41da21:	mov    r8d,DWORD PTR [rip+0x246a8]        # 0x4420d0
  41da28:	nop    DWORD PTR [rax+rax*1+0x0]
  41da30:	add    DWORD PTR [rsp+0x88],0x1
  41da38:	add    QWORD PTR [rsp+0x78],0x8
  41da3e:	mov    eax,DWORD PTR [rsp+0x88]
  41da45:	cmp    eax,r8d
  41da48:	jl     0x41d3ed
  41da4e:	xor    eax,eax
  41da50:	movaps xmm6,XMMWORD PTR [rsp+0x240]
  41da58:	movaps xmm7,XMMWORD PTR [rsp+0x250]
  41da60:	movaps xmm8,XMMWORD PTR [rsp+0x260]
  41da69:	movaps xmm9,XMMWORD PTR [rsp+0x270]
  41da72:	add    rsp,0x288
  41da79:	pop    rbx
  41da7a:	pop    rsi
  41da7b:	pop    rdi
  41da7c:	pop    rbp
  41da7d:	pop    r12
  41da7f:	pop    r13
  41da81:	pop    r14
  41da83:	pop    r15
  41da85:	ret    
  41da86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da90:	mov    rax,QWORD PTR [rdi+0x28]
  41da94:	mov    QWORD PTR [r12+0xc8],rax
  41da9c:	jmp    0x41d910
  41daa1:	cmp    eax,0xdfb9b0bb
  41daa6:	mov    r14,r15
  41daa9:	mov    r10d,eax
  41daac:	je     0x41dab7
  41daae:	cmp    eax,0xfffffff5
  41dab1:	jne    0x41d9e0
  41dab7:	cmp    r10d,0xdfb9b0bb
  41dabe:	jne    0x41dadd
  41dac0:	mov    ebp,DWORD PTR [rsp+0x8c]
  41dac7:	test   ebp,ebp
  41dac9:	je     0x41dadd
  41dacb:	mov    rax,QWORD PTR [r14+0x20]
  41dacf:	mov    rax,QWORD PTR [rax]
  41dad2:	mov    esi,DWORD PTR [rax+0x20]
  41dad5:	test   esi,esi
  41dad7:	je     0x41dca1
  41dadd:	mov    r8d,DWORD PTR [rip+0x245ec]        # 0x4420d0
  41dae4:	jmp    0x41da30
  41dae9:	nop    DWORD PTR [rax+0x0]
  41daf0:	mov    eax,DWORD PTR [rsi+0x88]
  41daf6:	movabs rdx,0x8000000000000000
  41db00:	mov    r13d,DWORD PTR [rsi+0x84]
  41db07:	mov    QWORD PTR [rsp+0x180],0x0
  41db13:	mov    QWORD PTR [rsp+0x188],0x0
  41db1f:	mov    QWORD PTR [rsp+0x190],0x0
  41db2b:	mov    QWORD PTR [rsp+0x198],0x0
  41db37:	mov    DWORD PTR [rsp+0x48],eax
  41db3b:	mov    rax,QWORD PTR [r12+0xc8]
  41db43:	cmp    rax,rdx
  41db46:	je     0x41df26
  41db4c:	pxor   xmm0,xmm0
  41db50:	lea    r8,[rip+0x1cd6f]        # 0x43a8c6
  41db57:	mov    edx,0x20
  41db5c:	pxor   xmm1,xmm1
  41db60:	cvtsi2sd xmm0,r13d
  41db65:	cvtsi2sd xmm1,DWORD PTR [rsp+0x48]
  41db6b:	divsd  xmm0,xmm1
  41db6f:	pxor   xmm1,xmm1
  41db73:	cvtsi2sd xmm1,rax
  41db78:	lea    rax,[rsp+0x180]
  41db80:	mov    rcx,rax
  41db83:	mov    QWORD PTR [rsp+0x58],rax
  41db88:	mulsd  xmm0,xmm1
  41db8c:	movapd xmm3,xmm0
  41db90:	movq   r9,xmm0
  41db95:	call   0x414ae0
  41db9a:	mov    r9,QWORD PTR [r12+0xc8]
  41dba2:	movabs rax,0x8000000000000000
  41dbac:	mov    QWORD PTR [rsp+0x160],0x0
  41dbb8:	mov    QWORD PTR [rsp+0x168],0x0
  41dbc4:	mov    QWORD PTR [rsp+0x170],0x0
  41dbd0:	lea    r10,[rsp+0x160]
  41dbd8:	mov    QWORD PTR [rsp+0x178],0x0
  41dbe4:	cmp    r9,rax
  41dbe7:	je     0x41df03
  41dbed:	lea    r8,[rip+0x1ccd7]        # 0x43a8cb
  41dbf4:	mov    rcx,r10
  41dbf7:	mov    edx,0x20
  41dbfc:	mov    QWORD PTR [rsp+0x60],r10
  41dc01:	call   0x414ae0
  41dc06:	mov    r10,QWORD PTR [rsp+0x60]
  41dc0b:	mov    eax,DWORD PTR [rsp+0x48]
  41dc0f:	lea    r8,[rip+0x1dcba]        # 0x43b8d0
  41dc16:	mov    DWORD PTR [rsp+0x28],r13d
  41dc1b:	mov    r9,r10
  41dc1e:	mov    edx,0x20
  41dc23:	xor    ecx,ecx
  41dc25:	mov    DWORD PTR [rsp+0x30],eax
  41dc29:	mov    rax,QWORD PTR [rsp+0x58]
  41dc2e:	mov    QWORD PTR [rsp+0x20],rax
  41dc33:	call   0x4226c0
  41dc38:	jmp    0x41d957
  41dc3d:	nop    DWORD PTR [rax]
  41dc40:	call   0x4227c0
  41dc45:	test   rax,rax
  41dc48:	mov    r12,rax
  41dc4b:	mov    QWORD PTR [rdi+0x60],rax
  41dc4f:	jne    0x41d434
  41dc55:	mov    eax,0xfffffff4
  41dc5a:	jmp    0x41da50
  41dc5f:	nop
  41dc60:	lea    r8,[rip+0x1cc59]        # 0x43a8c0
  41dc67:	mov    edx,0x20
  41dc6c:	mov    rcx,rbx
  41dc6f:	call   0x414ae0
  41dc74:	jmp    0x41d8b1
  41dc79:	nop    DWORD PTR [rax+0x0]
  41dc80:	lea    rbp,[rsp+0xc0]
  41dc88:	lea    r8,[rip+0x1cc31]        # 0x43a8c0
  41dc8f:	mov    edx,0x20
  41dc94:	mov    rcx,rbp
  41dc97:	call   0x414ae0
  41dc9c:	jmp    0x41d84a
  41dca1:	mov    rax,QWORD PTR [rsp+0x50]
  41dca6:	movsd  xmm3,QWORD PTR [rip+0x1e762]        # 0x43c410
  41dcae:	xor    r8d,r8d
  41dcb1:	mov    rdx,rdi
  41dcb4:	mov    rcx,QWORD PTR [rax]
  41dcb7:	call   0x419c30
  41dcbc:	jmp    0x41dadd
  41dcc1:	mov    rax,QWORD PTR [rsp+0x1f0]
  41dcc9:	movabs rcx,0x8000000000000000
  41dcd3:	mov    rdx,QWORD PTR [rdi+0x10]
  41dcd7:	mov    QWORD PTR [rsp+0x140],0x0
  41dce3:	mov    QWORD PTR [rsp+0x148],0x0
  41dcef:	mov    QWORD PTR [rsp+0x150],0x0
  41dcfb:	mov    QWORD PTR [rsp+0x158],0x0
  41dd07:	cmp    rax,rcx
  41dd0a:	je     0x41dfa9
  41dd10:	pxor   xmm0,xmm0
  41dd14:	lea    r8,[rip+0x1cbab]        # 0x43a8c6
  41dd1b:	pxor   xmm1,xmm1
  41dd1f:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41dd24:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  41dd29:	divsd  xmm0,xmm1
  41dd2d:	mov    edx,0x20
  41dd32:	movapd xmm1,xmm0
  41dd36:	pxor   xmm0,xmm0
  41dd3a:	cvtsi2sd xmm0,rax
  41dd3f:	lea    rax,[rsp+0x140]
  41dd47:	mov    rcx,rax
  41dd4a:	mov    QWORD PTR [rsp+0x48],rax
  41dd4f:	mulsd  xmm0,xmm1
  41dd53:	movapd xmm3,xmm0
  41dd57:	movq   r9,xmm0
  41dd5c:	call   0x414ae0
  41dd61:	mov    r9,QWORD PTR [rsp+0x1f0]
  41dd69:	movabs rax,0x8000000000000000
  41dd73:	mov    QWORD PTR [rsp+0x120],0x0
  41dd7f:	mov    QWORD PTR [rsp+0x128],0x0
  41dd8b:	mov    QWORD PTR [rsp+0x130],0x0
  41dd97:	lea    r13,[rsp+0x120]
  41dd9f:	mov    QWORD PTR [rsp+0x138],0x0
  41ddab:	cmp    r9,rax
  41ddae:	je     0x41df90
  41ddb4:	lea    r8,[rip+0x1cb10]        # 0x43a8cb
  41ddbb:	mov    edx,0x20
  41ddc0:	mov    rcx,r13
  41ddc3:	call   0x414ae0
  41ddc8:	mov    rax,QWORD PTR [rsp+0x1e8]
  41ddd0:	movabs rcx,0x8000000000000000
  41ddda:	mov    rdx,QWORD PTR [rdi+0x10]
  41ddde:	mov    QWORD PTR [rsp+0x100],0x0
  41ddea:	mov    QWORD PTR [rsp+0x108],0x0
  41ddf6:	mov    QWORD PTR [rsp+0x110],0x0
  41de02:	mov    QWORD PTR [rsp+0x118],0x0
  41de0e:	cmp    rax,rcx
  41de11:	je     0x41df6f
  41de17:	pxor   xmm0,xmm0
  41de1b:	lea    rsi,[rsp+0x100]
  41de23:	lea    r8,[rip+0x1ca9c]        # 0x43a8c6
  41de2a:	pxor   xmm1,xmm1
  41de2e:	mov    rcx,rsi
  41de31:	cvtsi2sd xmm0,DWORD PTR [rdx+0x30]
  41de36:	cvtsi2sd xmm1,DWORD PTR [rdx+0x34]
  41de3b:	divsd  xmm0,xmm1
  41de3f:	mov    edx,0x20
  41de44:	movapd xmm1,xmm0
  41de48:	pxor   xmm0,xmm0
  41de4c:	cvtsi2sd xmm0,rax
  41de51:	mulsd  xmm0,xmm1
  41de55:	movapd xmm3,xmm0
  41de59:	movq   r9,xmm0
  41de5e:	call   0x414ae0
  41de63:	mov    r9,QWORD PTR [rsp+0x1e8]
  41de6b:	movabs rax,0x8000000000000000
  41de75:	mov    QWORD PTR [rsp+0xe0],0x0
  41de81:	mov    QWORD PTR [rsp+0xe8],0x0
  41de8d:	mov    QWORD PTR [rsp+0xf0],0x0
  41de99:	lea    r10,[rsp+0xe0]
  41dea1:	mov    QWORD PTR [rsp+0xf8],0x0
  41dead:	cmp    r9,rax
  41deb0:	je     0x41df4c
  41deb6:	lea    r8,[rip+0x1ca0e]        # 0x43a8cb
  41debd:	mov    rcx,r10
  41dec0:	mov    edx,0x20
  41dec5:	mov    QWORD PTR [rsp+0x58],r10
  41deca:	call   0x414ae0
  41decf:	mov    r10,QWORD PTR [rsp+0x58]
  41ded4:	mov    rax,QWORD PTR [rsp+0x48]
  41ded9:	lea    r8,[rip+0x1da80]        # 0x43b960
  41dee0:	mov    QWORD PTR [rsp+0x28],r13
  41dee5:	mov    QWORD PTR [rsp+0x20],rsi
  41deea:	mov    r9,r10
  41deed:	mov    edx,0x20
  41def2:	xor    ecx,ecx
  41def4:	mov    QWORD PTR [rsp+0x30],rax
  41def9:	call   0x4226c0
  41defe:	jmp    0x41d9bf
  41df03:	lea    r8,[rip+0x1c9b6]        # 0x43a8c0
  41df0a:	mov    rcx,r10
  41df0d:	mov    edx,0x20
  41df12:	mov    QWORD PTR [rsp+0x60],r10
  41df17:	call   0x414ae0
  41df1c:	mov    r10,QWORD PTR [rsp+0x60]
  41df21:	jmp    0x41dc0b
  41df26:	lea    rax,[rsp+0x180]
  41df2e:	lea    r8,[rip+0x1c98b]        # 0x43a8c0
  41df35:	mov    edx,0x20
  41df3a:	mov    rcx,rax
  41df3d:	mov    QWORD PTR [rsp+0x58],rax
  41df42:	call   0x414ae0
  41df47:	jmp    0x41db9a
  41df4c:	lea    r8,[rip+0x1c96d]        # 0x43a8c0
  41df53:	mov    rcx,r10
  41df56:	mov    edx,0x20
  41df5b:	mov    QWORD PTR [rsp+0x58],r10
  41df60:	call   0x414ae0
  41df65:	mov    r10,QWORD PTR [rsp+0x58]
  41df6a:	jmp    0x41ded4
  41df6f:	lea    rsi,[rsp+0x100]
  41df77:	lea    r8,[rip+0x1c942]        # 0x43a8c0
  41df7e:	mov    edx,0x20
  41df83:	mov    rcx,rsi
  41df86:	call   0x414ae0
  41df8b:	jmp    0x41de63
  41df90:	lea    r8,[rip+0x1c929]        # 0x43a8c0
  41df97:	mov    edx,0x20
  41df9c:	mov    rcx,r13
  41df9f:	call   0x414ae0
  41dfa4:	jmp    0x41ddc8
  41dfa9:	lea    rax,[rsp+0x140]
  41dfb1:	lea    r8,[rip+0x1c908]        # 0x43a8c0
  41dfb8:	mov    edx,0x20
  41dfbd:	mov    rcx,rax
  41dfc0:	mov    QWORD PTR [rsp+0x48],rax
  41dfc5:	call   0x414ae0
  41dfca:	jmp    0x41dd61
  41dfcf:	lea    rax,[rip+0x1ced5]        # 0x43aeab
  41dfd6:	mov    DWORD PTR [rsp+0x28],0x348
  41dfde:	lea    r9,[rip+0x1d8cf]        # 0x43b8b4
  41dfe5:	mov    QWORD PTR [rsp+0x20],rax
  41dfea:	jmp    0x41d72b
  41dfef:	lea    r8,[rip+0x1d922]        # 0x43b918
  41dff6:	xor    ecx,ecx
  41dff8:	mov    edx,0x8
  41dffd:	call   0x4226c0
  41e002:	mov    ecx,0x1
  41e007:	call   0x401cb0
  41e00c:	nop
  41e00d:	nop    DWORD PTR [rax]
  41e010:	push   r15
  41e012:	push   r14
  41e014:	push   r13
  41e016:	push   r12
  41e018:	push   rbp
  41e019:	push   rdi
  41e01a:	push   rsi
  41e01b:	push   rbx
  41e01c:	sub    rsp,0x578
  41e023:	movaps XMMWORD PTR [rsp+0x530],xmm6
  41e02b:	movaps XMMWORD PTR [rsp+0x540],xmm7
  41e033:	movaps XMMWORD PTR [rsp+0x550],xmm8
  41e03c:	movaps XMMWORD PTR [rsp+0x560],xmm9
  41e045:	call   0x41b100
  41e04a:	test   eax,eax
  41e04c:	mov    edi,eax
  41e04e:	js     0x41e64e
  41e054:	mov    rax,QWORD PTR [rip+0x1f905]        # 0x43d960
  41e05b:	mov    r10d,DWORD PTR [rax]
  41e05e:	test   r10d,r10d
  41e061:	jne    0x41f73d
  41e067:	call   0x4226d0
  41e06c:	mov    QWORD PTR [rsp+0xa8],rax
  41e074:	lea    rax,[rsp+0x4b0]
  41e07c:	movss  xmm6,DWORD PTR [rip+0x1e39c]        # 0x43c420
  41e084:	mov    QWORD PTR [rsp+0xa0],rax
  41e08c:	lea    rax,[rsp+0x4d0]
  41e094:	movaps xmm8,xmm6
  41e098:	movaps xmm7,xmm6
  41e09b:	mov    QWORD PTR [rsp+0xb8],rax
  41e0a3:	mov    eax,DWORD PTR [rip+0x2418f]        # 0x442238
  41e0a9:	test   eax,eax
  41e0ab:	jne    0x41e1fb
  41e0b1:	call   0x4226d0
  41e0b6:	mov    QWORD PTR [rsp+0x88],rax
  41e0be:	mov    rax,QWORD PTR [rip+0x1f89b]        # 0x43d960
  41e0c5:	mov    r9d,DWORD PTR [rax]
  41e0c8:	test   r9d,r9d
  41e0cb:	je     0x41e0e2
  41e0cd:	mov    rcx,QWORD PTR [rsp+0x88]
  41e0d5:	call   0x416b80
  41e0da:	test   eax,eax
  41e0dc:	js     0x41e1fb
  41e0e2:	mov    ebp,DWORD PTR [rip+0x23fe8]        # 0x4420d0
  41e0e8:	test   ebp,ebp
  41e0ea:	jle    0x41e1e8
  41e0f0:	xor    ebx,ebx
  41e0f2:	xor    esi,esi
  41e0f4:	mov    rax,QWORD PTR [rip+0x23fdd]        # 0x4420d8
  41e0fb:	mov    rdi,QWORD PTR [rax+rbx*1]
  41e0ff:	mov    rax,QWORD PTR [rip+0x23fc2]        # 0x4420c8
  41e106:	movsxd rdx,DWORD PTR [rdi]
  41e109:	mov    r8d,DWORD PTR [rdi+0x158]
  41e110:	test   r8d,r8d
  41e113:	mov    r12,QWORD PTR [rax+rdx*8]
  41e117:	mov    rax,QWORD PTR [r12]
  41e11b:	jne    0x41e1d9
  41e121:	mov    rcx,QWORD PTR [rax+0x20]
  41e125:	test   rcx,rcx
  41e128:	je     0x41e148
  41e12a:	xor    edx,edx
  41e12c:	mov    r8d,0x1
  41e132:	call   0x422160
  41e137:	cmp    rax,QWORD PTR [r12+0x28]
  41e13c:	mov    ebp,DWORD PTR [rip+0x23f8e]        # 0x4420d0
  41e142:	jae    0x41e1d9
  41e148:	movsxd rax,DWORD PTR [rdi+0x1c]
  41e14c:	cmp    rax,QWORD PTR [rdi+0x58]
  41e150:	jl     0x41e410
  41e156:	mov    rax,QWORD PTR [r12]
  41e15a:	mov    edi,DWORD PTR [rax+0x2c]
  41e15d:	test   edi,edi
  41e15f:	je     0x41e1d9
  41e161:	movsxd rdx,DWORD PTR [r12+0x10]
  41e166:	mov    rax,QWORD PTR [rip+0x23f6b]        # 0x4420d8
  41e16d:	xor    r14d,r14d
  41e170:	mov    r13,QWORD PTR [rip+0x23f51]        # 0x4420c8
  41e177:	lea    r12,[rax+rdx*8]
  41e17b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e180:	mov    rax,QWORD PTR [r12+r14*8]
  41e184:	movsxd rdx,DWORD PTR [rax]
  41e187:	mov    r15,QWORD PTR [r13+rdx*8+0x0]
  41e18c:	or     DWORD PTR [rax+0x158],0x1
  41e193:	mov    ecx,DWORD PTR [r15+0x30]
  41e197:	test   ecx,ecx
  41e199:	je     0x41e1d0
  41e19b:	mov    rdx,QWORD PTR [rax+0x48]
  41e19f:	mov    rcx,QWORD PTR [rax+0x28]
  41e1a3:	movabs r8,0xf424000000000
  41e1ad:	sub    rcx,QWORD PTR [rax+0x30]
  41e1b1:	or     r8,0x1
  41e1b5:	mov    rdx,QWORD PTR [rdx+0x84]
  41e1bc:	call   0x422588
  41e1c1:	mov    rdx,QWORD PTR [r15+0x18]
  41e1c5:	cmp    rax,rdx
  41e1c8:	cmovg  rax,rdx
  41e1cc:	mov    QWORD PTR [r15+0x18],rax
  41e1d0:	add    r14,0x1
  41e1d4:	cmp    edi,r14d
  41e1d7:	ja     0x41e180
  41e1d9:	add    esi,0x1
  41e1dc:	add    rbx,0x8
  41e1e0:	cmp    esi,ebp
  41e1e2:	jl     0x41e0f4
  41e1e8:	lea    r8,[rip+0x1dae1]        # 0x43bcd0
  41e1ef:	mov    edx,0x28
  41e1f4:	xor    ecx,ecx
  41e1f6:	call   0x4226c0
  41e1fb:	mov    r8d,DWORD PTR [rip+0x23eee]        # 0x4420f0
  41e202:	xor    esi,esi
  41e204:	xor    ebx,ebx
  41e206:	test   r8d,r8d
  41e209:	jg     0x41e21c
  41e20b:	jmp    0x41e25d
  41e20d:	nop    DWORD PTR [rax]
  41e210:	add    ebx,0x1
  41e213:	add    rsi,0x8
  41e217:	cmp    ebx,r8d
  41e21a:	jge    0x41e25d
  41e21c:	mov    rax,QWORD PTR [rip+0x23ed5]        # 0x4420f8
  41e223:	mov    rcx,QWORD PTR [rax+rsi*1]
  41e227:	mov    rax,QWORD PTR [rip+0x23eba]        # 0x4420e8
  41e22e:	movsxd rdx,DWORD PTR [rcx]
  41e231:	mov    rax,QWORD PTR [rax+rdx*8]
  41e235:	mov    r12d,DWORD PTR [rax+0x8]
  41e239:	test   r12d,r12d
  41e23c:	jne    0x41e210
  41e23e:	mov    ebp,DWORD PTR [rcx+0x18]
  41e241:	test   ebp,ebp
  41e243:	je     0x41e210
  41e245:	call   0x419790
  41e24a:	mov    r8d,DWORD PTR [rip+0x23e9f]        # 0x4420f0
  41e251:	add    ebx,0x1
  41e254:	add    rsi,0x8
  41e258:	cmp    ebx,r8d
  41e25b:	jl     0x41e21c
  41e25d:	mov    edx,DWORD PTR [rip+0x23e6d]        # 0x4420d0
  41e263:	xor    r15d,r15d
  41e266:	mov    DWORD PTR [rsp+0x88],0x0
  41e271:	lea    rdi,[rsp+0x4b0]
  41e279:	lea    r13,[rsp+0x3f0]
  41e281:	test   edx,edx
  41e283:	jle    0x41f281
  41e289:	nop    DWORD PTR [rax+0x0]
  41e290:	mov    rax,QWORD PTR [rip+0x23e41]        # 0x4420d8
  41e297:	mov    rbx,QWORD PTR [rax+r15*1]
  41e29b:	mov    rax,QWORD PTR [rip+0x23e26]        # 0x4420c8
  41e2a2:	movsxd rcx,DWORD PTR [rbx]
  41e2a5:	mov    r11d,DWORD PTR [rbx+0x18]
  41e2a9:	mov    rsi,QWORD PTR [rbx+0x48]
  41e2ad:	test   r11d,r11d
  41e2b0:	mov    rax,QWORD PTR [rax+rcx*8]
  41e2b4:	mov    r14,QWORD PTR [rax]
  41e2b7:	je     0x41f266
  41e2bd:	mov    eax,DWORD PTR [rsi+0xc]
  41e2c0:	cmp    eax,0x1
  41e2c3:	je     0x41f3b3
  41e2c9:	test   eax,eax
  41e2cb:	jne    0x41e2fb
  41e2cd:	mov    rcx,QWORD PTR [r14+0x10]
  41e2d1:	test   BYTE PTR [rcx+0x2c],0x20
  41e2d5:	je     0x41e2fb
  41e2d7:	mov    rcx,QWORD PTR [rsi+0x10]
  41e2db:	cmp    DWORD PTR [rcx+0x14],0xe
  41e2df:	jne    0x41e2fb
  41e2e1:	jmp    0x41f266
  41e2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2f0:	mov    rcx,rdi
  41e2f3:	call   0x422448
  41e2f8:	mov    eax,DWORD PTR [rsi+0xc]
  41e2fb:	test   eax,eax
  41e2fd:	je     0x41f3a0
  41e303:	cmp    eax,0x1
  41e306:	jne    0x41f260
  41e30c:	lea    rbp,[rip+0x1d6a0]        # 0x43b9b3
  41e313:	lea    r12,[rip+0x407e]        # 0x422398
  41e31a:	mov    rcx,rdi
  41e31d:	call   0x422430
  41e322:	xor    ecx,ecx
  41e324:	mov    QWORD PTR [rsp+0x4c8],0x0
  41e330:	mov    DWORD PTR [rsp+0x4d0],0x0
  41e33b:	call   0x4166f0
  41e340:	xor    r8d,r8d
  41e343:	mov    r9,r13
  41e346:	mov    rdx,rdi
  41e349:	mov    rcx,rsi
  41e34c:	call   r12
  41e34f:	mov    r9d,DWORD PTR [rbx+0x4]
  41e353:	mov    r8d,DWORD PTR [rbx]
  41e356:	lea    rcx,[rip+0x1c0b1]        # 0x43a40e
  41e35d:	mov    r12d,eax
  41e360:	mov    rdx,rbp
  41e363:	call   0x416880
  41e368:	test   r12d,r12d
  41e36b:	js     0x420423
  41e371:	mov    rcx,QWORD PTR [rbx+0x100]
  41e378:	test   rcx,rcx
  41e37b:	je     0x41e395
  41e37d:	mov    r8,QWORD PTR [rsi+0x2e8]
  41e384:	test   r8,r8
  41e387:	je     0x41e395
  41e389:	lea    rdx,[rip+0x1bb44]        # 0x439ed4
  41e390:	call   0x414b30
  41e395:	mov    r10d,DWORD PTR [rsp+0x3f0]
  41e39d:	test   r10d,r10d
  41e3a0:	je     0x41f260
  41e3a6:	test   BYTE PTR [rbx+0x158],0x2
  41e3ad:	jne    0x41e2f0
  41e3b3:	mov    rax,QWORD PTR [rbx+0x10]
  41e3b7:	mov    rdx,QWORD PTR [rsi+0x84]
  41e3be:	mov    rcx,rdi
  41e3c1:	mov    r8,QWORD PTR [rax+0x30]
  41e3c5:	call   0x422418
  41e3ca:	mov    r8,rbx
  41e3cd:	mov    rdx,rdi
  41e3d0:	mov    rcx,r14
  41e3d3:	mov    ebp,DWORD PTR [rsp+0x4d0]
  41e3da:	call   0x418290
  41e3df:	mov    rax,QWORD PTR [rbx+0x48]
  41e3e3:	mov    r9d,DWORD PTR [rax+0xc]
  41e3e7:	test   r9d,r9d
  41e3ea:	jne    0x41e2f8
  41e3f0:	mov    rax,QWORD PTR [rip+0x1f589]        # 0x43d980
  41e3f7:	cmp    QWORD PTR [rax],0x0
  41e3fb:	je     0x41e2f8
  41e401:	mov    edx,ebp
  41e403:	mov    rcx,rbx
  41e406:	call   0x414b60
  41e40b:	jmp    0x41e2f8
  41e410:	test   ebp,ebp
  41e412:	jle    0x41f55f
  41e418:	mov    r14,QWORD PTR [rip+0x23cb9]        # 0x4420d8
  41e41f:	lea    eax,[rbp-0x1]
  41e422:	xor    ebx,ebx
  41e424:	movabs rsi,0x7fffffffffffffff
  41e42e:	movabs rdi,0xf424000000000
  41e438:	xor    r15d,r15d
  41e43b:	mov    DWORD PTR [rsp+0x90],eax
  41e442:	lea    r12,[r14+rax*8+0x8]
  41e447:	mov    r13,r14
  41e44a:	nop    WORD PTR [rax+rax*1+0x0]
  41e450:	mov    rbp,QWORD PTR [r13+0x0]
  41e454:	mov    r8,rdi
  41e457:	or     r8,0x1
  41e45b:	mov    rax,QWORD PTR [rbp+0x10]
  41e45f:	mov    rdx,QWORD PTR [rax+0x30]
  41e463:	mov    rcx,QWORD PTR [rax+0xf8]
  41e46a:	call   0x422588
  41e46f:	cmp    rax,rsi
  41e472:	jge    0x41e490
  41e474:	mov    edx,DWORD PTR [rbp+0x158]
  41e47a:	test   edx,edx
  41e47c:	jne    0x41e490
  41e47e:	mov    esi,DWORD PTR [rbp+0x15c]
  41e484:	mov    rbx,rbp
  41e487:	test   esi,esi
  41e489:	mov    rsi,rax
  41e48c:	cmovne rbx,r15
  41e490:	add    r13,0x8
  41e494:	cmp    r13,r12
  41e497:	jne    0x41e450
  41e499:	test   rbx,rbx
  41e49c:	je     0x41f523
  41e4a2:	mov    rax,QWORD PTR [rbx+0x108]
  41e4a9:	test   rax,rax
  41e4ac:	je     0x41e51f
  41e4ae:	mov    r12,QWORD PTR [rax+0x10]
  41e4b2:	mov    rcx,QWORD PTR [r12+0x10]
  41e4b7:	call   0x4220c0
  41e4bc:	test   eax,eax
  41e4be:	jns    0x41e74d
  41e4c4:	cmp    eax,0xdfb9b0bb
  41e4c9:	je     0x41f8a4
  41e4cf:	cmp    eax,0xfffffff5
  41e4d2:	je     0x41f442
  41e4d8:	cmp    eax,0xfffffff5
  41e4db:	je     0x41e0a3
  41e4e1:	cmp    eax,0xdfb9b0bb
  41e4e6:	je     0x41e0a3
  41e4ec:	lea    rbx,[rsp+0x4b0]
  41e4f4:	mov    r8d,0x80
  41e4fa:	mov    ecx,eax
  41e4fc:	mov    rdx,rbx
  41e4ff:	call   0x422570
  41e504:	lea    r8,[rip+0x1d791]        # 0x43bc9c
  41e50b:	mov    r9,rbx
  41e50e:	mov    edx,0x10
  41e513:	xor    ecx,ecx
  41e515:	call   0x4226c0
  41e51a:	jmp    0x41e1fb
  41e51f:	movsxd rax,DWORD PTR [rbx+0x8]
  41e523:	test   eax,eax
  41e525:	js     0x420b1d
  41e52b:	mov    rdx,QWORD PTR [rip+0x23bc6]        # 0x4420f8
  41e532:	mov    rdi,QWORD PTR [rdx+rax*8]
  41e536:	movsxd r12,DWORD PTR [rdi]
  41e539:	mov    rax,QWORD PTR [rip+0x23ba8]        # 0x4420e8
  41e540:	mov    r13,QWORD PTR [rax+r12*8]
  41e544:	mov    DWORD PTR [rsp+0x98],r12d
  41e54c:	mov    r10d,DWORD PTR [r13+0x50]
  41e550:	mov    rsi,QWORD PTR [r13+0x0]
  41e554:	test   r10d,r10d
  41e557:	je     0x41f256
  41e55d:	mov    r9d,DWORD PTR [r13+0x48]
  41e561:	test   r9d,r9d
  41e564:	jle    0x41f256
  41e56a:	xor    r15d,r15d
  41e56d:	jmp    0x41e57e
  41e56f:	nop
  41e570:	add    r15d,0x1
  41e574:	cmp    r15d,DWORD PTR [r13+0x48]
  41e578:	jge    0x41e761
  41e57e:	mov    eax,DWORD PTR [r13+0x10]
  41e582:	mov    rdx,QWORD PTR [rip+0x23b6f]        # 0x4420f8
  41e589:	mov    r8d,0xf4240
  41e58f:	add    eax,r15d
  41e592:	cdqe   
  41e594:	mov    r14,QWORD PTR [rdx+rax*8]
  41e598:	mov    edx,0xf4240
  41e59d:	mov    rcx,QWORD PTR [r14+0x50]
  41e5a1:	call   0x422598
  41e5a6:	mov    rbp,rax
  41e5a9:	call   0x4226d0
  41e5ae:	sub    rax,QWORD PTR [r14+0x40]
  41e5b2:	cmp    rbp,rax
  41e5b5:	jle    0x41e570
  41e5b7:	mov    DWORD PTR [r13+0xc],0x1
  41e5bf:	movsxd rdx,DWORD PTR [rdi]
  41e5c2:	mov    rax,QWORD PTR [rip+0x23b1f]        # 0x4420e8
  41e5c9:	mov    rax,QWORD PTR [rax+rdx*8]
  41e5cd:	mov    edx,DWORD PTR [rax+0xc]
  41e5d0:	test   edx,edx
  41e5d2:	je     0x41e5e0
  41e5d4:	mov    DWORD PTR [rbx+0x15c],0x1
  41e5de:	xchg   ax,ax
  41e5e0:	mov    rax,QWORD PTR [rip+0x1f309]        # 0x43d8f0
  41e5e7:	mov    r13d,DWORD PTR [rax]
  41e5ea:	test   r13d,r13d
  41e5ed:	jne    0x41e5fd
  41e5ef:	cmp    QWORD PTR [rip+0x23b09],0x0        # 0x442100
  41e5f7:	je     0x41e0a3
  41e5fd:	mov    rax,QWORD PTR [rip+0x12b2c]        # 0x431130
  41e604:	cmp    rax,0xffffffffffffffff
  41e608:	je     0x41f3c5
  41e60e:	mov    rdi,QWORD PTR [rsp+0x88]
  41e616:	sub    rdi,rax
  41e619:	cmp    rdi,0x7a11f
  41e620:	jle    0x41e0a3
  41e626:	mov    rax,QWORD PTR [rsp+0x88]
  41e62e:	mov    rdx,QWORD PTR [rsp+0xa8]
  41e636:	xor    ecx,ecx
  41e638:	mov    r8,rax
  41e63b:	mov    QWORD PTR [rip+0x12aee],rax        # 0x431130
  41e642:	call   0x414e80
  41e647:	jmp    0x41e0a3
  41e64c:	xor    edi,edi
  41e64e:	mov    rdx,QWORD PTR [rip+0x23a83]        # 0x4420d8
  41e655:	test   rdx,rdx
  41e658:	je     0x41e715
  41e65e:	mov    ecx,DWORD PTR [rip+0x23a6c]        # 0x4420d0
  41e664:	test   ecx,ecx
  41e666:	jle    0x41e715
  41e66c:	xor    esi,esi
  41e66e:	jmp    0x41e677
  41e670:	mov    rdx,QWORD PTR [rip+0x23a61]        # 0x4420d8
  41e677:	mov    rbx,QWORD PTR [rdx+rsi*8]
  41e67b:	test   rbx,rbx
  41e67e:	je     0x41e706
  41e684:	mov    rcx,QWORD PTR [rbx+0x100]
  41e68b:	test   rcx,rcx
  41e68e:	je     0x41e6a0
  41e690:	call   0x42fbd8
  41e695:	mov    QWORD PTR [rbx+0x100],0x0
  41e6a0:	lea    rcx,[rbx+0xa0]
  41e6a7:	call   0x422768
  41e6ac:	lea    rcx,[rbx+0x150]
  41e6b3:	call   0x422768
  41e6b8:	lea    rcx,[rbx+0x178]
  41e6bf:	call   0x422768
  41e6c4:	lea    rcx,[rbx+0x128]
  41e6cb:	call   0x422820
  41e6d0:	lea    rcx,[rbx+0x130]
  41e6d7:	call   0x422820
  41e6dc:	lea    rcx,[rbx+0x138]
  41e6e3:	call   0x422820
  41e6e8:	lea    rcx,[rbx+0x140]
  41e6ef:	call   0x422820
  41e6f4:	lea    rcx,[rbx+0x148]
  41e6fb:	call   0x422820
  41e700:	mov    ecx,DWORD PTR [rip+0x239ca]        # 0x4420d0
  41e706:	lea    eax,[rsi+0x1]
  41e709:	add    rsi,0x1
  41e70d:	cmp    eax,ecx
  41e70f:	jl     0x41e670
  41e715:	movaps xmm6,XMMWORD PTR [rsp+0x530]
  41e71d:	mov    eax,edi
  41e71f:	movaps xmm7,XMMWORD PTR [rsp+0x540]
  41e727:	movaps xmm8,XMMWORD PTR [rsp+0x550]
  41e730:	movaps xmm9,XMMWORD PTR [rsp+0x560]
  41e739:	add    rsp,0x578
  41e740:	pop    rbx
  41e741:	pop    rsi
  41e742:	pop    rdi
  41e743:	pop    rbp
  41e744:	pop    r12
  41e746:	pop    r13
  41e748:	pop    r14
  41e74a:	pop    r15
  41e74c:	ret    
  41e74d:	xor    ecx,ecx
  41e74f:	call   0x41d370
  41e754:	test   eax,eax
  41e756:	jns    0x41e5e0
  41e75c:	jmp    0x41e4d8
  41e761:	mov    rcx,QWORD PTR [r13+0x0]
  41e765:	lea    rax,[rsp+0x390]
  41e76d:	mov    rdx,rax
  41e770:	mov    QWORD PTR [rsp+0x90],rax
  41e778:	call   0x422288
  41e77d:	cmp    eax,0xfffffff5
  41e780:	je     0x41e5b7
  41e786:	test   eax,eax
  41e788:	js     0x41f129
  41e78e:	mov    edx,DWORD PTR [rip+0x2394c]        # 0x4420e0
  41e794:	test   edx,edx
  41e796:	jle    0x41e7c3
  41e798:	mov    rax,QWORD PTR [rip+0x23949]        # 0x4420e8
  41e79f:	sub    edx,0x1
  41e7a2:	lea    rcx,[rax+rdx*8+0x8]
  41e7a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e7b0:	mov    rdx,QWORD PTR [rax]
  41e7b3:	add    rax,0x8
  41e7b7:	cmp    rax,rcx
  41e7ba:	mov    DWORD PTR [rdx+0xc],0x0
  41e7c1:	jne    0x41e7b0
  41e7c3:	mov    edx,DWORD PTR [rip+0x23907]        # 0x4420d0
  41e7c9:	test   edx,edx
  41e7cb:	jle    0x41e7f6
  41e7cd:	mov    rax,QWORD PTR [rip+0x23904]        # 0x4420d8
  41e7d4:	sub    edx,0x1
  41e7d7:	lea    rcx,[rax+rdx*8+0x8]
  41e7dc:	nop    DWORD PTR [rax+0x0]
  41e7e0:	mov    rdx,QWORD PTR [rax]
  41e7e3:	add    rax,0x8
  41e7e7:	cmp    rax,rcx
  41e7ea:	mov    DWORD PTR [rdx+0x15c],0x0
  41e7f4:	jne    0x41e7e0
  41e7f6:	mov    rax,QWORD PTR [rip+0x1ef53]        # 0x43d750
  41e7fd:	mov    eax,DWORD PTR [rax]
  41e7ff:	test   eax,eax
  41e801:	jne    0x41f4eb
  41e807:	mov    eax,DWORD PTR [rsp+0x3b4]
  41e80e:	cmp    eax,DWORD PTR [r13+0x48]
  41e812:	jge    0x41f016
  41e818:	add    eax,DWORD PTR [r13+0x10]
  41e81c:	mov    rdx,QWORD PTR [rip+0x238d5]        # 0x4420f8
  41e823:	cdqe   
  41e825:	mov    rbx,QWORD PTR [rdx+rax*8]
  41e829:	movsxd rax,DWORD PTR [rsp+0x3b0]
  41e831:	add    QWORD PTR [rbx+0x170],rax
  41e838:	mov    eax,DWORD PTR [rbx+0x10]
  41e83b:	add    QWORD PTR [rbx+0x178],0x1
  41e843:	test   eax,eax
  41e845:	jne    0x41f108
  41e84b:	mov    rax,QWORD PTR [rip+0x1eeae]        # 0x43d700
  41e852:	cmp    DWORD PTR [rax],0x0
  41e855:	jne    0x41faa0
  41e85b:	cmp    DWORD PTR [rbx+0x68],0x0
  41e85f:	jne    0x41e93d
  41e865:	mov    r12,QWORD PTR [rsi+0x438]
  41e86c:	movabs rax,0x8000000000000000
  41e876:	cmp    r12,rax
  41e879:	je     0x41e93d
  41e87f:	mov    rdi,QWORD PTR [rbx+0x8]
  41e883:	cmp    DWORD PTR [rdi+0xe8],0x3f
  41e88a:	jg     0x41e93d
  41e890:	cmp    QWORD PTR [rbx+0x48],rax
  41e894:	je     0x42070a
  41e89a:	mov    r8,QWORD PTR [rdi+0x30]
  41e89e:	movabs rdx,0xf424000000001
  41e8a8:	mov    rcx,r12
  41e8ab:	call   0x422588
  41e8b0:	mov    r8d,DWORD PTR [rdi+0xe8]
  41e8b7:	mov    edx,0x1
  41e8bc:	mov    DWORD PTR [rbx+0x68],0x1
  41e8c3:	mov    r11,rdx
  41e8c6:	mov    ecx,r8d
  41e8c9:	shl    r11,cl
  41e8cc:	lea    rcx,[rax+r11*1]
  41e8d0:	cmp    rax,rcx
  41e8d3:	jge    0x41e93d
  41e8d5:	mov    r9,QWORD PTR [rsp+0x3a0]
  41e8dd:	movabs rcx,0x8000000000000000
  41e8e7:	cmp    r9,rcx
  41e8ea:	je     0x41e90d
  41e8ec:	lea    ecx,[r8-0x1]
  41e8f0:	shl    rdx,cl
  41e8f3:	add    rdx,rax
  41e8f6:	cmp    r9,rdx
  41e8f9:	jle    0x41e90d
  41e8fb:	sub    r9,r11
  41e8fe:	mov    DWORD PTR [rbx+0x68],0x0
  41e905:	mov    QWORD PTR [rsp+0x3a0],r9
  41e90d:	mov    rdx,QWORD PTR [rsp+0x398]
  41e915:	movabs rcx,0x8000000000000000
  41e91f:	cmp    rdx,rcx
  41e922:	je     0x41e93d
  41e924:	lea    ecx,[r8-0x1]
  41e928:	mov    r9d,0x1
  41e92e:	shl    r9,cl
  41e931:	add    rax,r9
  41e934:	cmp    rdx,rax
  41e937:	jg     0x4204de
  41e93d:	cmp    QWORD PTR [rbx+0x178],0x1
  41e945:	je     0x4202e3
  41e94b:	mov    rbp,QWORD PTR [rsp+0x3a0]
  41e953:	movabs rax,0x8000000000000000
  41e95d:	cmp    rbp,rax
  41e960:	je     0x41e988
  41e962:	mov    rdi,QWORD PTR [rbx+0x8]
  41e966:	mov    rcx,QWORD PTR [r13+0x20]
  41e96a:	movabs rdx,0xf424000000001
  41e974:	mov    r8,QWORD PTR [rdi+0x30]
  41e978:	call   0x422588
  41e97d:	add    rbp,rax
  41e980:	mov    QWORD PTR [rsp+0x3a0],rbp
  41e988:	mov    r14,QWORD PTR [rsp+0x398]
  41e990:	movabs r12,0x8000000000000000
  41e99a:	cmp    r14,r12
  41e99d:	je     0x41e9e5
  41e99f:	mov    rdi,QWORD PTR [rbx+0x8]
  41e9a3:	mov    rcx,QWORD PTR [r13+0x20]
  41e9a7:	movabs rdx,0xf424000000001
  41e9b1:	mov    r8,QWORD PTR [rdi+0x30]
  41e9b5:	call   0x422588
  41e9ba:	add    rax,r14
  41e9bd:	cmp    rax,r12
  41e9c0:	mov    QWORD PTR [rsp+0x398],rax
  41e9c8:	je     0x41e9e5
  41e9ca:	pxor   xmm0,xmm0
  41e9ce:	cvtsi2sd xmm0,rax
  41e9d3:	mulsd  xmm0,QWORD PTR [rbx+0x78]
  41e9d8:	cvttsd2si rax,xmm0
  41e9dd:	mov    QWORD PTR [rsp+0x398],rax
  41e9e5:	movabs rax,0x8000000000000000
  41e9ef:	cmp    rbp,rax
  41e9f2:	je     0x41ea0f
  41e9f4:	pxor   xmm0,xmm0
  41e9f8:	cvtsi2sd xmm0,rbp
  41e9fd:	mulsd  xmm0,QWORD PTR [rbx+0x78]
  41ea02:	cvttsd2si rbp,xmm0
  41ea07:	mov    QWORD PTR [rsp+0x3a0],rbp
  41ea0f:	mov    r12,QWORD PTR [rbx+0x20]
  41ea13:	cmp    DWORD PTR [r12+0xc],0x1
  41ea19:	jbe    0x420160
  41ea1f:	movabs rax,0x8000000000000000
  41ea29:	cmp    rbp,rax
  41ea2c:	je     0x41ea4c
  41ea2e:	mov    rdi,QWORD PTR [rbx+0x8]
  41ea32:	mov    rdx,QWORD PTR [rdi+0x30]
  41ea36:	movabs r8,0xf424000000001
  41ea40:	mov    rcx,rbp
  41ea43:	call   0x422588
  41ea48:	mov    QWORD PTR [r13+0x28],rax
  41ea4c:	mov    rax,QWORD PTR [rip+0x1ecad]        # 0x43d700
  41ea53:	cmp    DWORD PTR [rax],0x0
  41ea56:	jne    0x41fecf
  41ea5c:	mov    rax,QWORD PTR [rsp+0x398]
  41ea64:	movsxd rdx,DWORD PTR [rbx]
  41ea67:	xor    edi,edi
  41ea69:	mov    QWORD PTR [rsp+0x98],rax
  41ea71:	mov    rax,QWORD PTR [rip+0x23670]        # 0x4420e8
  41ea78:	mov    r12,QWORD PTR [rax+rdx*8]
  41ea7c:	mov    esi,DWORD PTR [r12+0x48]
  41ea81:	test   esi,esi
  41ea83:	jle    0x41eb50
  41ea89:	nop    DWORD PTR [rax+0x0]
  41ea90:	mov    eax,DWORD PTR [r12+0x10]
  41ea95:	mov    rdx,QWORD PTR [rip+0x2365c]        # 0x4420f8
  41ea9c:	add    eax,edi
  41ea9e:	cdqe   
  41eaa0:	mov    rbp,QWORD PTR [rdx+rax*8]
  41eaa4:	mov    r13,QWORD PTR [rbp+0x108]
  41eaab:	test   r13,r13
  41eaae:	je     0x41eb45
  41eab4:	mov    rax,QWORD PTR [rbp+0x8]
  41eab8:	mov    rdx,QWORD PTR [rbx+0x8]
  41eabc:	mov    rcx,QWORD PTR [rsp+0x98]
  41eac4:	mov    rdx,QWORD PTR [rdx+0x30]
  41eac8:	mov    r8,QWORD PTR [rax+0x30]
  41eacc:	call   0x422588
  41ead1:	lea    r14,[rax-0x1]
  41ead5:	cmp    r14,QWORD PTR [rbp+0xf8]
  41eadc:	jle    0x41eb45
  41eade:	cmp    r14,QWORD PTR [rbp+0x100]
  41eae5:	jge    0x41f3d9
  41eaeb:	cmp    QWORD PTR [r13+0x0],0x0
  41eaf0:	je     0x41f3d9
  41eaf6:	mov    eax,DWORD PTR [rbp+0x128]
  41eafc:	xor    r15d,r15d
  41eaff:	xor    r13d,r13d
  41eb02:	xor    esi,esi
  41eb04:	test   eax,eax
  41eb06:	jle    0x41eb40
  41eb08:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb10:	mov    rax,QWORD PTR [rbp+0x120]
  41eb17:	add    esi,0x1
  41eb1a:	mov    rax,QWORD PTR [rax+r15*1]
  41eb1e:	add    r15,0x8
  41eb22:	mov    rcx,QWORD PTR [rax]
  41eb25:	call   0x422118
  41eb2a:	add    r13d,eax
  41eb2d:	mov    eax,DWORD PTR [rbp+0x128]
  41eb33:	cmp    esi,eax
  41eb35:	jl     0x41eb10
  41eb37:	test   r13d,r13d
  41eb3a:	jne    0x41f3e6
  41eb40:	mov    esi,DWORD PTR [r12+0x48]
  41eb45:	add    edi,0x1
  41eb48:	cmp    edi,esi
  41eb4a:	jl     0x41ea90
  41eb50:	cmp    DWORD PTR [rbx+0x80],0x0
  41eb57:	mov    DWORD PTR [rsp+0xec],0x0
  41eb62:	jne    0x41ebfa
  41eb68:	mov    rax,QWORD PTR [rbx+0x8]
  41eb6c:	xor    esi,esi
  41eb6e:	mov    edx,DWORD PTR [rax+0x68]
  41eb71:	test   edx,edx
  41eb73:	je     0x41eba9
  41eb75:	pxor   xmm0,xmm0
  41eb79:	mov    rcx,QWORD PTR [rbx+0x20]
  41eb7d:	pxor   xmm2,xmm2
  41eb81:	pxor   xmm1,xmm1
  41eb85:	cvtsi2sd xmm0,edx
  41eb89:	cvtsi2sd xmm2,DWORD PTR [rax+0x6c]
  41eb8e:	imul   ecx,DWORD PTR [rcx+0xd4],0xfff0bdc0
  41eb98:	cvtsi2sd xmm1,ecx
  41eb9c:	divsd  xmm0,xmm2
  41eba0:	divsd  xmm1,xmm0
  41eba4:	cvttsd2si rsi,xmm1
  41eba9:	mov    rcx,QWORD PTR [rsp+0x398]
  41ebb1:	movabs rdx,0x8000000000000000
  41ebbb:	mov    QWORD PTR [rbx+0x50],rsi
  41ebbf:	mov    QWORD PTR [rbx+0x60],0x0
  41ebc7:	cmp    rcx,rdx
  41ebca:	je     0x41ebf0
  41ebcc:	cmp    DWORD PTR [rbx+0x18],0x0
  41ebd0:	jne    0x41ebf0
  41ebd2:	mov    rdx,QWORD PTR [rax+0x30]
  41ebd6:	movabs r8,0xf424000000001
  41ebe0:	call   0x422588
  41ebe5:	add    rsi,rax
  41ebe8:	mov    QWORD PTR [rbx+0x50],rsi
  41ebec:	mov    QWORD PTR [rbx+0x60],rsi
  41ebf0:	mov    DWORD PTR [rbx+0x80],0x1
  41ebfa:	movabs rax,0x8000000000000000
  41ec04:	cmp    QWORD PTR [rbx+0x48],rax
  41ec08:	je     0x41fa86
  41ec0e:	movabs rax,0x8000000000000000
  41ec18:	cmp    QWORD PTR [rbx+0x58],rax
  41ec1c:	je     0x41fa93
  41ec22:	lea    rbp,[rsp+0x3f0]
  41ec2a:	mov    ecx,0x18
  41ec2f:	mov    rsi,QWORD PTR [rsp+0x90]
  41ec37:	movabs rax,0x8000000000000000
  41ec41:	mov    rdi,rbp
  41ec44:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41ec46:	mov    rcx,QWORD PTR [rsp+0x3a0]
  41ec4e:	cmp    rcx,rax
  41ec51:	je     0x41ec88
  41ec53:	mov    rax,QWORD PTR [rbx+0x8]
  41ec57:	movabs r8,0xf424000000001
  41ec61:	mov    rdx,QWORD PTR [rax+0x30]
  41ec65:	call   0x422588
  41ec6a:	mov    rdx,QWORD PTR [rbx+0x20]
  41ec6e:	mov    QWORD PTR [rbx+0x50],rax
  41ec72:	mov    QWORD PTR [rbx+0x48],rax
  41ec76:	cmp    DWORD PTR [rdx+0xc],0x0
  41ec7a:	je     0x41f7b5
  41ec80:	mov    QWORD PTR [rbx+0x60],rax
  41ec84:	mov    QWORD PTR [rbx+0x58],rax
  41ec88:	lea    rsi,[rsp+0xec]
  41ec90:	movabs rdi,0x8000000000000000
  41ec9a:	cmp    DWORD PTR [rbx+0x18],0x0
  41ec9e:	jne    0x41f57c
  41eca4:	mov    rdx,QWORD PTR [rbx+0x20]
  41eca8:	mov    r12,QWORD PTR [rbx+0x48]
  41ecac:	mov    eax,DWORD PTR [rdx+0xc]
  41ecaf:	mov    QWORD PTR [rbx+0x50],r12
  41ecb3:	test   eax,eax
  41ecb5:	je     0x41f7c4
  41ecbb:	sub    eax,0x1
  41ecbe:	jne    0x41ece1
  41ecc0:	movsxd rax,DWORD PTR [rdx+0x1dc]
  41ecc7:	movsxd rcx,DWORD PTR [rdx+0x1d0]
  41ecce:	imul   rax,rax,0xf4240
  41ecd5:	cqo    
  41ecd7:	idiv   rcx
  41ecda:	add    r12,rax
  41ecdd:	mov    QWORD PTR [rbx+0x48],r12
  41ece1:	mov    rax,QWORD PTR [rbx+0x50]
  41ece5:	mov    QWORD PTR [rbx+0x58],r12
  41ece9:	mov    QWORD PTR [rbx+0x60],rax
  41eced:	mov    edx,DWORD PTR [rip+0x233dd]        # 0x4420d0
  41ecf3:	lea    rax,[rsp+0x450]
  41ecfb:	xor    ebp,ebp
  41ecfd:	xor    edi,edi
  41ecff:	mov    QWORD PTR [rsp+0xc0],rax
  41ed07:	test   edx,edx
  41ed09:	jg     0x41ed1f
  41ed0b:	jmp    0x41f108
  41ed10:	add    edi,0x1
  41ed13:	add    rbp,0x8
  41ed17:	cmp    edi,edx
  41ed19:	jge    0x41f108
  41ed1f:	mov    rax,QWORD PTR [rip+0x233b2]        # 0x4420d8
  41ed26:	mov    r15,QWORD PTR [rbx+0x8]
  41ed2a:	mov    rsi,QWORD PTR [rax+rbp*1]
  41ed2e:	mov    rax,QWORD PTR [rip+0x23393]        # 0x4420c8
  41ed35:	movsxd rcx,DWORD PTR [rsi]
  41ed38:	mov    r12,QWORD PTR [rax+rcx*8]
  41ed3c:	movsxd rcx,DWORD PTR [rbx]
  41ed3f:	mov    rax,QWORD PTR [rip+0x233a2]        # 0x4420e8
  41ed46:	mov    r14,QWORD PTR [rax+rcx*8]
  41ed4a:	mov    eax,DWORD PTR [r15]
  41ed4d:	add    eax,DWORD PTR [r14+0x10]
  41ed51:	cmp    DWORD PTR [rsi+0x8],eax
  41ed54:	jne    0x41ed10
  41ed56:	mov    eax,DWORD PTR [rsi+0x158]
  41ed5c:	test   eax,eax
  41ed5e:	jne    0x41ed10
  41ed60:	mov    r13,QWORD PTR [r12+0x20]
  41ed65:	movabs rax,0x8000000000000000
  41ed6f:	cmp    r13,rax
  41ed72:	je     0x41f6c1
  41ed78:	cmp    r13,QWORD PTR [rbx+0x60]
  41ed7c:	jg     0x41ed10
  41ed7e:	mov    eax,DWORD PTR [rsi+0x18]
  41ed81:	test   eax,eax
  41ed83:	jne    0x41ed10
  41ed85:	mov    rax,QWORD PTR [rsi+0x10]
  41ed89:	movabs r11,0xf424000000000
  41ed93:	mov    rcx,r13
  41ed96:	mov    rdx,r11
  41ed99:	mov    QWORD PTR [rsp+0x98],r11
  41eda1:	or     rdx,0x1
  41eda5:	mov    r8,QWORD PTR [rax+0x30]
  41eda9:	call   0x422588
  41edae:	mov    r11,QWORD PTR [rsp+0x98]
  41edb6:	mov    r8,QWORD PTR [r15+0x30]
  41edba:	mov    rcx,r13
  41edbd:	mov    QWORD PTR [rsp+0xb0],rax
  41edc5:	mov    rdx,r11
  41edc8:	or     rdx,0x1
  41edcc:	call   0x422588
  41edd1:	mov    rcx,QWORD PTR [rsp+0xa0]
  41edd9:	mov    r15,rax
  41eddc:	call   0x422430
  41ede1:	mov    eax,DWORD PTR [rsi+0x1c]
  41ede4:	test   eax,eax
  41ede6:	jne    0x41f6b4
  41edec:	test   BYTE PTR [rsp+0x3b8],0x1
  41edf4:	jne    0x41ee03
  41edf6:	cmp    DWORD PTR [rsi+0x170],0x0
  41edfd:	je     0x41f6a9
  41ee03:	mov    rcx,QWORD PTR [rsp+0x398]
  41ee0b:	movabs rax,0x8000000000000000
  41ee15:	cmp    rcx,rax
  41ee18:	je     0x41fa77
  41ee1e:	cmp    rcx,r15
  41ee21:	jge    0x41ee30
  41ee23:	cmp    DWORD PTR [rsi+0x174],0x0
  41ee2a:	je     0x41f6a9
  41ee30:	mov    rax,QWORD PTR [r12+0x18]
  41ee35:	movabs rdx,0x7fffffffffffffff
  41ee3f:	cmp    rax,rdx
  41ee42:	je     0x41ee51
  41ee44:	add    rax,r13
  41ee47:	cmp    QWORD PTR [rbx+0x60],rax
  41ee4b:	jge    0x41f659
  41ee51:	mov    rdx,QWORD PTR [r14+0x40]
  41ee55:	movabs rax,0x7fffffffffffffff
  41ee5f:	cmp    rdx,rax
  41ee62:	je     0x41ee94
  41ee64:	mov    rax,QWORD PTR [r14]
  41ee67:	mov    r8,QWORD PTR [r14+0x30]
  41ee6b:	movabs r10,0x8000000000000000
  41ee75:	mov    rax,QWORD PTR [rax+0x438]
  41ee7c:	cmp    r8,r10
  41ee7f:	lea    r9,[rax+r8*1]
  41ee83:	cmovne rax,r9
  41ee87:	add    rax,rdx
  41ee8a:	cmp    QWORD PTR [rbx+0x60],rax
  41ee8e:	jge    0x41f659
  41ee94:	mov    rax,QWORD PTR [rsi+0x48]
  41ee98:	cmp    DWORD PTR [rax+0xc],0x0
  41ee9c:	jne    0x41eea3
  41ee9e:	add    QWORD PTR [rsi+0x28],0x1
  41eea3:	movabs rax,0x8000000000000000
  41eead:	cmp    rcx,rax
  41eeb0:	je     0x41f9f7
  41eeb6:	mov    rax,QWORD PTR [rbx+0x8]
  41eeba:	mov    r15,QWORD PTR [rsi+0x10]
  41eebe:	mov    rdx,QWORD PTR [rax+0x30]
  41eec2:	mov    r8,QWORD PTR [r15+0x30]
  41eec6:	call   0x422588
  41eecb:	sub    rax,QWORD PTR [rsp+0xb0]
  41eed3:	mov    QWORD PTR [rsp+0x4b8],rax
  41eedb:	mov    rcx,QWORD PTR [rsp+0x3a0]
  41eee3:	movabs rax,0x8000000000000000
  41eeed:	cmp    rcx,rax
  41eef0:	je     0x41f9d3
  41eef6:	mov    rax,QWORD PTR [rbx+0x8]
  41eefa:	mov    r8,QWORD PTR [r15+0x30]
  41eefe:	mov    rdx,QWORD PTR [rax+0x30]
  41ef02:	call   0x422588
  41ef07:	mov    QWORD PTR [rsp+0x4c0],rax
  41ef0f:	mov    rax,QWORD PTR [rsp+0xb0]
  41ef17:	sub    QWORD PTR [rsp+0x4c0],rax
  41ef1f:	mov    rax,QWORD PTR [r15+0x8]
  41ef23:	cmp    DWORD PTR [rax+0xc],0x1
  41ef27:	je     0x41f93d
  41ef2d:	mov    rax,QWORD PTR [rbx+0x8]
  41ef31:	movsxd rcx,DWORD PTR [rsp+0x3cc]
  41ef39:	mov    r8,QWORD PTR [r15+0x30]
  41ef3d:	mov    rdx,QWORD PTR [rax+0x30]
  41ef41:	call   0x422588
  41ef46:	mov    rdx,QWORD PTR [r15+0x8]
  41ef4a:	mov    DWORD PTR [rsp+0x4ec],eax
  41ef51:	mov    r8d,DWORD PTR [rsp+0x3b8]
  41ef59:	mov    eax,DWORD PTR [rdx+0x38]
  41ef5c:	mov    DWORD PTR [rsp+0x4d8],r8d
  41ef64:	cmp    eax,0x47
  41ef67:	setne  r9b
  41ef6b:	cmp    eax,0x1c
  41ef6e:	setne  cl
  41ef71:	test   r9b,cl
  41ef74:	je     0x41f6d3
  41ef7a:	sub    eax,0x1
  41ef7d:	cmp    eax,0x1
  41ef80:	jbe    0x41f6d3
  41ef86:	mov    eax,DWORD PTR [rsp+0x3b0]
  41ef8d:	mov    rcx,QWORD PTR [rsi+0x188]
  41ef94:	and    r8d,0x1
  41ef98:	mov    r9,QWORD PTR [rsp+0xb8]
  41efa0:	mov    DWORD PTR [rsp+0x30],r8d
  41efa5:	mov    DWORD PTR [rsp+0x28],eax
  41efa9:	mov    rax,QWORD PTR [rsp+0x3a8]
  41efb1:	mov    QWORD PTR [rsp+0x20],rax
  41efb6:	mov    rax,QWORD PTR [rsp+0xa0]
  41efbe:	lea    r8,[rax+0x18]
  41efc2:	call   0x422408
  41efc7:	test   eax,eax
  41efc9:	js     0x420ad3
  41efcf:	je     0x41f6f1
  41efd5:	mov    edx,DWORD PTR [rsp+0x4d0]
  41efdc:	mov    rcx,QWORD PTR [rsp+0x4c8]
  41efe4:	lea    r8,[rip+0x385d]        # 0x422848
  41efeb:	xor    r9d,r9d
  41efee:	mov    DWORD PTR [rsp+0x20],0x0
  41eff6:	call   0x422850
  41effb:	test   rax,rax
  41effe:	mov    QWORD PTR [rsp+0x4b0],rax
  41f006:	jne    0x41f6f1
  41f00c:	mov    ecx,0x1
  41f011:	call   0x401cb0
  41f016:	mov    rdx,QWORD PTR [rip+0x230cb]        # 0x4420e8
  41f01d:	movsxd rcx,eax
  41f020:	mov    rsi,QWORD PTR [rdx+r12*8]
  41f024:	mov    rdx,QWORD PTR [rsi]
  41f027:	cmp    eax,DWORD PTR [rsi+0x4c]
  41f02a:	mov    rdx,QWORD PTR [rdx+0x30]
  41f02e:	mov    r12,QWORD PTR [rdx+rcx*8]
  41f032:	jl     0x41f108
  41f038:	lea    rbx,[rsp+0x2f0]
  41f040:	mov    rdx,QWORD PTR [rsp+0x3a0]
  41f048:	xor    eax,eax
  41f04a:	mov    ecx,0x8
  41f04f:	mov    rdi,rbx
  41f052:	rep stos DWORD PTR es:[rdi],eax
  41f054:	movabs rax,0x8000000000000000
  41f05e:	cmp    rdx,rax
  41f061:	je     0x4207f8
  41f067:	pxor   xmm0,xmm0
  41f06b:	lea    r8,[rip+0x1b854]        # 0x43a8c6
  41f072:	mov    rcx,rbx
  41f075:	pxor   xmm1,xmm1
  41f079:	cvtsi2sd xmm0,DWORD PTR [r12+0x30]
  41f080:	cvtsi2sd xmm1,DWORD PTR [r12+0x34]
  41f087:	divsd  xmm0,xmm1
  41f08b:	movapd xmm1,xmm0
  41f08f:	pxor   xmm0,xmm0
  41f093:	cvtsi2sd xmm0,rdx
  41f098:	mov    edx,0x20
  41f09d:	mulsd  xmm0,xmm1
  41f0a1:	movapd xmm3,xmm0
  41f0a5:	movq   r9,xmm0
  41f0aa:	call   0x414ae0
  41f0af:	mov    rax,QWORD PTR [r12+0x8]
  41f0b4:	mov    r14,QWORD PTR [rsp+0x3e0]
  41f0bc:	mov    edi,DWORD PTR [rsp+0x3b4]
  41f0c3:	mov    ecx,DWORD PTR [rax+0xc]
  41f0c6:	call   0x422718
  41f0cb:	mov    r9,rax
  41f0ce:	mov    eax,DWORD PTR [rsp+0x98]
  41f0d5:	mov    QWORD PTR [rsp+0x38],rbx
  41f0da:	mov    QWORD PTR [rsp+0x30],r14
  41f0df:	mov    DWORD PTR [rsp+0x28],edi
  41f0e3:	lea    r8,[rip+0x1c90e]        # 0x43b9f8
  41f0ea:	mov    edx,0x18
  41f0ef:	mov    DWORD PTR [rsp+0x20],eax
  41f0f3:	mov    rcx,QWORD PTR [rsi]
  41f0f6:	call   0x4226c0
  41f0fb:	mov    eax,DWORD PTR [rsp+0x3b4]
  41f102:	add    eax,0x1
  41f105:	mov    DWORD PTR [rsi+0x4c],eax
  41f108:	mov    rcx,QWORD PTR [rsp+0x90]
  41f110:	call   0x422448
  41f115:	xor    ecx,ecx
  41f117:	call   0x41d370
  41f11c:	test   eax,eax
  41f11e:	js     0x41e4d8
  41f124:	jmp    0x41e5e0
  41f129:	cmp    eax,0xdfb9b0bb
  41f12e:	je     0x41f14b
  41f130:	lea    rcx,[rsi+0x38]
  41f134:	mov    edx,eax
  41f136:	call   0x4054b0
  41f13b:	mov    rax,QWORD PTR [rip+0x1e63e]        # 0x43d780
  41f142:	cmp    DWORD PTR [rax],0x0
  41f145:	jne    0x41f00c
  41f14b:	mov    r14d,DWORD PTR [r13+0x48]
  41f14f:	xor    ebp,ebp
  41f151:	test   r14d,r14d
  41f154:	jle    0x41f231
  41f15a:	nop    WORD PTR [rax+rax*1+0x0]
  41f160:	mov    eax,DWORD PTR [r13+0x10]
  41f164:	mov    rdx,QWORD PTR [rip+0x22f8d]        # 0x4420f8
  41f16b:	add    eax,ebp
  41f16d:	cdqe   
  41f16f:	mov    rcx,QWORD PTR [rdx+rax*8]
  41f173:	mov    r8d,DWORD PTR [rcx+0x18]
  41f177:	test   r8d,r8d
  41f17a:	jne    0x41f240
  41f180:	mov    r8d,DWORD PTR [rip+0x22f49]        # 0x4420d0
  41f187:	test   r8d,r8d
  41f18a:	jle    0x41f225
  41f190:	mov    r10d,DWORD PTR [r13+0x10]
  41f194:	mov    r9,QWORD PTR [rip+0x22f3d]        # 0x4420d8
  41f19b:	xor    eax,eax
  41f19d:	mov    r12,QWORD PTR [rip+0x22f24]        # 0x4420c8
  41f1a4:	add    r10d,ebp
  41f1a7:	jmp    0x41f1b9
  41f1a9:	nop    DWORD PTR [rax+0x0]
  41f1b0:	add    rax,0x1
  41f1b4:	cmp    r8d,eax
  41f1b7:	jle    0x41f225
  41f1b9:	mov    rdx,QWORD PTR [r9+rax*8]
  41f1bd:	cmp    DWORD PTR [rdx+0x8],r10d
  41f1c1:	jne    0x41f1b0
  41f1c3:	mov    ecx,DWORD PTR [rdx+0x160]
  41f1c9:	test   ecx,ecx
  41f1cb:	jne    0x41f1d7
  41f1cd:	mov    rcx,QWORD PTR [rdx+0x50]
  41f1d1:	cmp    DWORD PTR [rcx+0x10],0x3
  41f1d5:	jne    0x41f1b0
  41f1d7:	movsxd rcx,DWORD PTR [rdx]
  41f1da:	mov    rcx,QWORD PTR [r12+rcx*8]
  41f1de:	mov    DWORD PTR [rdx+0x158],0x3
  41f1e8:	mov    edx,DWORD PTR [rcx+0x30]
  41f1eb:	test   edx,edx
  41f1ed:	je     0x41f1b0
  41f1ef:	mov    rdx,QWORD PTR [rcx]
  41f1f2:	mov    r11d,DWORD PTR [rdx+0x2c]
  41f1f6:	test   r11d,r11d
  41f1f9:	je     0x41f1b0
  41f1fb:	movsxd rdx,DWORD PTR [rcx+0x10]
  41f1ff:	lea    rsi,[r9+rdx*8]
  41f203:	xor    edx,edx
  41f205:	mov    rcx,QWORD PTR [rsi+rdx*8]
  41f209:	add    rdx,0x1
  41f20d:	cmp    r11d,edx
  41f210:	mov    DWORD PTR [rcx+0x158],0x3
  41f21a:	ja     0x41f205
  41f21c:	add    rax,0x1
  41f220:	cmp    r8d,eax
  41f223:	jg     0x41f1b9
  41f225:	add    ebp,0x1
  41f228:	cmp    ebp,r14d
  41f22b:	jl     0x41f160
  41f231:	mov    DWORD PTR [r13+0x8],0x1
  41f239:	jmp    0x41e5bf
  41f23e:	xchg   ax,ax
  41f240:	call   0x419790
  41f245:	test   eax,eax
  41f247:	jg     0x41f115
  41f24d:	mov    r14d,DWORD PTR [r13+0x48]
  41f251:	jmp    0x41f180
  41f256:	mov    rcx,rsi
  41f259:	jmp    0x41e765
  41f25e:	xchg   ax,ax
  41f260:	mov    edx,DWORD PTR [rip+0x22e6a]        # 0x4420d0
  41f266:	add    DWORD PTR [rsp+0x88],0x1
  41f26e:	add    r15,0x8
  41f272:	mov    eax,DWORD PTR [rsp+0x88]
  41f279:	cmp    eax,edx
  41f27b:	jl     0x41e290
  41f281:	lea    r9,[rip+0x1ac4b]        # 0x439ed3
  41f288:	lea    r8,[rip+0x1ac45]        # 0x439ed4
  41f28f:	xor    ecx,ecx
  41f291:	mov    edx,0xfffffff8
  41f296:	xor    esi,esi
  41f298:	xor    ebx,ebx
  41f29a:	call   0x4226c0
  41f29f:	mov    edi,DWORD PTR [rip+0x22e1b]        # 0x4420c0
  41f2a5:	test   edi,edi
  41f2a7:	jle    0x41f2d2
  41f2a9:	nop    DWORD PTR [rax+0x0]
  41f2b0:	mov    rax,QWORD PTR [rip+0x22e11]        # 0x4420c8
  41f2b7:	add    ebx,0x1
  41f2ba:	mov    rax,QWORD PTR [rax+rsi*1]
  41f2be:	add    rsi,0x8
  41f2c2:	mov    rcx,QWORD PTR [rax]
  41f2c5:	call   0x422250
  41f2ca:	cmp    DWORD PTR [rip+0x22df0],ebx        # 0x4420c0
  41f2d0:	jg     0x41f2b0
  41f2d2:	call   0x4226d0
  41f2d7:	mov    rdx,QWORD PTR [rsp+0xa8]
  41f2df:	mov    r8,rax
  41f2e2:	mov    ecx,0x1
  41f2e7:	xor    esi,esi
  41f2e9:	xor    ebx,ebx
  41f2eb:	call   0x414e80
  41f2f0:	mov    edx,DWORD PTR [rip+0x22dda]        # 0x4420d0
  41f2f6:	test   edx,edx
  41f2f8:	jg     0x41f30b
  41f2fa:	jmp    0x41f340
  41f2fc:	nop    DWORD PTR [rax+0x0]
  41f300:	add    ebx,0x1
  41f303:	add    rsi,0x8
  41f307:	cmp    ebx,edx
  41f309:	jge    0x41f340
  41f30b:	mov    rax,QWORD PTR [rip+0x22dc6]        # 0x4420d8
  41f312:	mov    rax,QWORD PTR [rax+rsi*1]
  41f316:	mov    r8d,DWORD PTR [rax+0x18]
  41f31a:	test   r8d,r8d
  41f31d:	je     0x41f300
  41f31f:	mov    rcx,QWORD PTR [rax+0x48]
  41f323:	add    ebx,0x1
  41f326:	add    rsi,0x8
  41f32a:	add    rcx,0x2f0
  41f331:	call   0x422768
  41f336:	mov    edx,DWORD PTR [rip+0x22d94]        # 0x4420d0
  41f33c:	cmp    ebx,edx
  41f33e:	jl     0x41f30b
  41f340:	mov    edx,DWORD PTR [rip+0x22daa]        # 0x4420f0
  41f346:	xor    esi,esi
  41f348:	xor    ebx,ebx
  41f34a:	test   edx,edx
  41f34c:	jg     0x41f362
  41f34e:	jmp    0x41e64c
  41f353:	add    ebx,0x1
  41f356:	add    rsi,0x8
  41f35a:	cmp    ebx,edx
  41f35c:	jge    0x41e64c
  41f362:	mov    rax,QWORD PTR [rip+0x22d8f]        # 0x4420f8
  41f369:	mov    rdi,QWORD PTR [rax+rsi*1]
  41f36d:	mov    ecx,DWORD PTR [rdi+0x18]
  41f370:	test   ecx,ecx
  41f372:	je     0x41f353
  41f374:	mov    rcx,QWORD PTR [rdi+0x20]
  41f378:	call   0x4223e8
  41f37d:	mov    rax,QWORD PTR [rdi+0x150]
  41f384:	test   rax,rax
  41f387:	je     0x41f38f
  41f389:	mov    rcx,QWORD PTR [rdi+0x20]
  41f38d:	call   rax
  41f38f:	mov    edx,DWORD PTR [rip+0x22d5b]        # 0x4420f0
  41f395:	jmp    0x41f353
  41f397:	nop    WORD PTR [rax+rax*1+0x0]
  41f3a0:	lea    rbp,[rip+0x1c606]        # 0x43b9ad
  41f3a7:	lea    r12,[rip+0x2fda]        # 0x422388
  41f3ae:	jmp    0x41e31a
  41f3b3:	cmp    DWORD PTR [rsi+0x1dc],0x1
  41f3ba:	jg     0x41e2fb
  41f3c0:	jmp    0x41f266
  41f3c5:	mov    rax,QWORD PTR [rsp+0x88]
  41f3cd:	mov    QWORD PTR [rip+0x11d5c],rax        # 0x431130
  41f3d4:	jmp    0x41e0a3
  41f3d9:	mov    rcx,rbp
  41f3dc:	call   0x416a40
  41f3e1:	jmp    0x41eaf6
  41f3e6:	mov    rsi,QWORD PTR [rbp+0x108]
  41f3ed:	xor    r13d,r13d
  41f3f0:	mov    QWORD PTR [rsi+0xc8],r14
  41f3f7:	mov    QWORD PTR [rbp+0xf8],r14
  41f3fe:	xor    r14d,r14d
  41f401:	test   eax,eax
  41f403:	jle    0x41eb40
  41f409:	nop    DWORD PTR [rax+0x0]
  41f410:	mov    rax,QWORD PTR [rbp+0x120]
  41f417:	mov    r8d,0xc
  41f41d:	mov    rdx,rsi
  41f420:	add    r13d,0x1
  41f424:	mov    rax,QWORD PTR [rax+r14*1]
  41f428:	add    r14,0x8
  41f42c:	mov    rcx,QWORD PTR [rax]
  41f42f:	call   0x422120
  41f434:	cmp    r13d,DWORD PTR [rbp+0x128]
  41f43b:	jl     0x41f410
  41f43d:	jmp    0x41eb40
  41f442:	mov    r8d,DWORD PTR [r12+0x28]
  41f447:	test   r8d,r8d
  41f44a:	jle    0x41f4b2
  41f44c:	xor    ebp,ebp
  41f44e:	xor    edi,edi
  41f450:	xor    r14d,r14d
  41f453:	xor    esi,esi
  41f455:	jmp    0x41f46c
  41f457:	nop    WORD PTR [rax+rax*1+0x0]
  41f460:	add    esi,0x1
  41f463:	add    rbp,0x8
  41f467:	cmp    esi,r8d
  41f46a:	jge    0x41f4a9
  41f46c:	mov    rax,QWORD PTR [r12+0x20]
  41f471:	mov    rdx,QWORD PTR [rip+0x22c70]        # 0x4420e8
  41f478:	mov    rax,QWORD PTR [rax+rbp*1]
  41f47c:	mov    r13,QWORD PTR [rax+0x8]
  41f480:	movsxd rcx,DWORD PTR [r13+0x0]
  41f484:	mov    rdx,QWORD PTR [rdx+rcx*8]
  41f488:	cmp    QWORD PTR [rdx+0x8],0x0
  41f48d:	jne    0x41f460
  41f48f:	mov    rcx,QWORD PTR [rax]
  41f492:	call   0x422118
  41f497:	cmp    eax,r14d
  41f49a:	mov    r8d,DWORD PTR [r12+0x28]
  41f49f:	jle    0x41f460
  41f4a1:	mov    rdi,r13
  41f4a4:	mov    r14d,eax
  41f4a7:	jmp    0x41f460
  41f4a9:	test   rdi,rdi
  41f4ac:	jne    0x41e536
  41f4b2:	mov    edx,DWORD PTR [r12+0x38]
  41f4b7:	test   edx,edx
  41f4b9:	jle    0x41e5e0
  41f4bf:	mov    rax,QWORD PTR [r12+0x30]
  41f4c4:	sub    edx,0x1
  41f4c7:	lea    rcx,[rax+rdx*8+0x8]
  41f4cc:	mov    rdx,QWORD PTR [rax]
  41f4cf:	add    rax,0x8
  41f4d3:	cmp    rax,rcx
  41f4d6:	mov    rdx,QWORD PTR [rdx+0x8]
  41f4da:	mov    DWORD PTR [rdx+0x15c],0x1
  41f4e4:	jne    0x41f4cc
  41f4e6:	jmp    0x41e5e0
  41f4eb:	movsxd rdx,DWORD PTR [rsp+0x3b4]
  41f4f3:	mov    rax,QWORD PTR [rsi+0x30]
  41f4f7:	xor    ecx,ecx
  41f4f9:	mov    r8,QWORD PTR [rsp+0x90]
  41f501:	mov    rax,QWORD PTR [rax+rdx*8]
  41f505:	mov    edx,0x30
  41f50a:	mov    QWORD PTR [rsp+0x20],rax
  41f50f:	mov    rax,QWORD PTR [rip+0x1e22a]        # 0x43d740
  41f516:	mov    r9d,DWORD PTR [rax]
  41f519:	call   0x422290
  41f51e:	jmp    0x41e807
  41f523:	mov    rax,QWORD PTR [r14]
  41f526:	cmp    DWORD PTR [rax+0x15c],0x0
  41f52d:	jne    0x41f755
  41f533:	mov    edx,DWORD PTR [rsp+0x90]
  41f53a:	lea    rax,[r14+0x8]
  41f53e:	lea    rcx,[r14+rdx*8+0x8]
  41f543:	jmp    0x41f55a
  41f545:	mov    rdx,QWORD PTR [rax]
  41f548:	add    rax,0x8
  41f54c:	mov    ebx,DWORD PTR [rdx+0x15c]
  41f552:	test   ebx,ebx
  41f554:	jne    0x41f755
  41f55a:	cmp    rax,rcx
  41f55d:	jne    0x41f545
  41f55f:	lea    r8,[rip+0x1c79a]        # 0x43bd00
  41f566:	mov    edx,0x28
  41f56b:	xor    ecx,ecx
  41f56d:	call   0x4226c0
  41f572:	mov    eax,0xdfb9b0bb
  41f577:	jmp    0x41e4d8
  41f57c:	mov    eax,DWORD PTR [rsp+0x410]
  41f583:	test   eax,eax
  41f585:	jle    0x41eced
  41f58b:	mov    rdx,QWORD PTR [rbx+0x58]
  41f58f:	cmp    DWORD PTR [rsp+0x3b0],eax
  41f596:	mov    QWORD PTR [rbx+0x60],rdx
  41f59a:	mov    rdx,QWORD PTR [rbx+0x48]
  41f59e:	mov    QWORD PTR [rbx+0x50],rdx
  41f5a2:	je     0x41f5dd
  41f5a4:	mov    rax,QWORD PTR [rbx+0x28]
  41f5a8:	test   BYTE PTR [rax+0x19],0x1
  41f5ac:	jne    0x41f5dd
  41f5ae:	cmp    DWORD PTR [rbx+0x84],0x1
  41f5b5:	mov    r9d,DWORD PTR [rsp+0x3b4]
  41f5bd:	lea    r8,[rip+0x1c674]        # 0x43bc38
  41f5c4:	sbb    edx,edx
  41f5c6:	xor    ecx,ecx
  41f5c8:	and    edx,0xfffffff0
  41f5cb:	add    edx,0x28
  41f5ce:	call   0x4226c0
  41f5d3:	mov    DWORD PTR [rbx+0x84],0x1
  41f5dd:	mov    rax,QWORD PTR [rbx+0x20]
  41f5e1:	mov    eax,DWORD PTR [rax+0xc]
  41f5e4:	cmp    eax,0x1
  41f5e7:	je     0x41f815
  41f5ed:	cmp    eax,0x3
  41f5f0:	je     0x42038f
  41f5f6:	test   eax,eax
  41f5f8:	jne    0x41f108
  41f5fe:	mov    r8,rsi
  41f601:	mov    rdx,rbp
  41f604:	mov    rcx,rbx
  41f607:	call   0x4174b0
  41f60c:	mov    r12d,eax
  41f60f:	mov    eax,DWORD PTR [rsp+0x42c]
  41f616:	test   eax,eax
  41f618:	je     0x41f873
  41f61e:	mov    rdx,QWORD PTR [rbx+0x8]
  41f622:	movsxd rcx,eax
  41f625:	movabs r8,0xf424000000001
  41f62f:	mov    rdx,QWORD PTR [rdx+0x30]
  41f633:	call   0x422588
  41f638:	movsxd rcx,eax
  41f63b:	test   ecx,ecx
  41f63d:	je     0x41f886
  41f643:	cmp    QWORD PTR [rbx+0x50],rdi
  41f647:	je     0x41f886
  41f64d:	movsxd rax,ecx
  41f650:	add    QWORD PTR [rbx+0x48],rax
  41f654:	jmp    0x41f894
  41f659:	movsxd rdx,DWORD PTR [rsi]
  41f65c:	mov    rax,QWORD PTR [rip+0x22a65]        # 0x4420c8
  41f663:	mov    r12,QWORD PTR [rax+rdx*8]
  41f667:	or     DWORD PTR [rsi+0x158],0x1
  41f66e:	cmp    DWORD PTR [r12+0x30],0x0
  41f674:	je     0x41f6a9
  41f676:	mov    rax,QWORD PTR [rsi+0x48]
  41f67a:	mov    rcx,QWORD PTR [rsi+0x28]
  41f67e:	movabs r8,0xf424000000001
  41f688:	sub    rcx,QWORD PTR [rsi+0x30]
  41f68c:	mov    rdx,QWORD PTR [rax+0x84]
  41f693:	call   0x422588
  41f698:	mov    rdx,QWORD PTR [r12+0x18]
  41f69d:	cmp    rax,rdx
  41f6a0:	cmovg  rax,rdx
  41f6a4:	mov    QWORD PTR [r12+0x18],rax
  41f6a9:	mov    edx,DWORD PTR [rip+0x22a21]        # 0x4420d0
  41f6af:	jmp    0x41ed10
  41f6b4:	mov    rcx,QWORD PTR [rsp+0x398]
  41f6bc:	jmp    0x41ee30
  41f6c1:	xor    r13d,r13d
  41f6c4:	cmp    DWORD PTR [rsi+0x18],0x0
  41f6c8:	jne    0x41ed10
  41f6ce:	jmp    0x41ed85
  41f6d3:	mov    rax,QWORD PTR [rsp+0x3a8]
  41f6db:	mov    QWORD PTR [rsp+0x4c8],rax
  41f6e3:	mov    eax,DWORD PTR [rsp+0x3b0]
  41f6ea:	mov    DWORD PTR [rsp+0x4d0],eax
  41f6f1:	mov    rdx,QWORD PTR [rsp+0x90]
  41f6f9:	mov    rcx,QWORD PTR [rsp+0xa0]
  41f701:	call   0x422450
  41f706:	mov    rax,QWORD PTR [rsi+0x10]
  41f70a:	mov    rax,QWORD PTR [rax+0x8]
  41f70e:	cmp    DWORD PTR [rax+0xc],0x0
  41f712:	jne    0x41f71e
  41f714:	cmp    DWORD PTR [rax+0x38],0xe
  41f718:	je     0x41fa08
  41f71e:	mov    rdx,QWORD PTR [rsp+0xa0]
  41f726:	mov    rcx,QWORD PTR [r12]
  41f72a:	mov    r8,rsi
  41f72d:	call   0x418290
  41f732:	mov    edx,DWORD PTR [rip+0x22998]        # 0x4420d0
  41f738:	jmp    0x41ed10
  41f73d:	lea    r8,[rip+0x1c27c]        # 0x43b9c0
  41f744:	mov    edx,0x20
  41f749:	xor    ecx,ecx
  41f74b:	call   0x4226c0
  41f750:	jmp    0x41e067
  41f755:	mov    edx,DWORD PTR [rip+0x22985]        # 0x4420e0
  41f75b:	test   edx,edx
  41f75d:	jle    0x41f783
  41f75f:	mov    rax,QWORD PTR [rip+0x22982]        # 0x4420e8
  41f766:	sub    edx,0x1
  41f769:	lea    rcx,[rax+rdx*8+0x8]
  41f76e:	xchg   ax,ax
  41f770:	mov    rdx,QWORD PTR [rax]
  41f773:	add    rax,0x8
  41f777:	cmp    rax,rcx
  41f77a:	mov    DWORD PTR [rdx+0xc],0x0
  41f781:	jne    0x41f770
  41f783:	mov    ebp,DWORD PTR [rsp+0x90]
  41f78a:	lea    rdx,[r14+rbp*8+0x8]
  41f78f:	nop
  41f790:	mov    rax,QWORD PTR [r14]
  41f793:	add    r14,0x8
  41f797:	cmp    r14,rdx
  41f79a:	mov    DWORD PTR [rax+0x15c],0x0
  41f7a4:	jne    0x41f790
  41f7a6:	mov    ecx,0x2710
  41f7ab:	call   0x422538
  41f7b0:	jmp    0x41e5e0
  41f7b5:	cmp    DWORD PTR [rbx+0x18],0x0
  41f7b9:	jne    0x41ec88
  41f7bf:	jmp    0x41ec80
  41f7c4:	mov    esi,DWORD PTR [rbx+0x90]
  41f7ca:	test   esi,esi
  41f7cc:	je     0x4203a5
  41f7d2:	mov    ebp,DWORD PTR [rbx+0x94]
  41f7d8:	movabs rdi,0xf424000000001
  41f7e2:	shl    rsi,0x20
  41f7e6:	mov    rcx,r12
  41f7e9:	mov    rdx,rdi
  41f7ec:	mov    r8,rbp
  41f7ef:	or     r8,rsi
  41f7f2:	call   0x422588
  41f7f7:	mov    rdx,rbp
  41f7fa:	lea    rcx,[rax+0x1]
  41f7fe:	mov    r8,rdi
  41f801:	or     rdx,rsi
  41f804:	call   0x422588
  41f809:	mov    QWORD PTR [rbx+0x48],rax
  41f80d:	mov    r12,rax
  41f810:	jmp    0x41ece1
  41f815:	mov    r8,rsi
  41f818:	mov    rdx,rbp
  41f81b:	mov    rcx,rbx
  41f81e:	call   0x417cd0
  41f823:	mov    r12d,eax
  41f826:	test   r12d,r12d
  41f829:	js     0x42069c
  41f82f:	movabs rax,0x8000000000000000
  41f839:	mov    QWORD PTR [rsp+0x3f8],rax
  41f841:	mov    QWORD PTR [rsp+0x400],rax
  41f849:	mov    rax,QWORD PTR [rbx+0x20]
  41f84d:	cmp    DWORD PTR [rax+0xc],0x1
  41f851:	je     0x41f85b
  41f853:	mov    r12d,DWORD PTR [rsp+0x410]
  41f85b:	movsxd rax,r12d
  41f85e:	sub    DWORD PTR [rsp+0x410],r12d
  41f866:	add    QWORD PTR [rsp+0x408],rax
  41f86e:	jmp    0x41ec9a
  41f873:	mov    rax,QWORD PTR [rbx+0x20]
  41f877:	xor    ecx,ecx
  41f879:	cmp    DWORD PTR [rax+0x3f0],0x0
  41f880:	jne    0x420472
  41f886:	movabs rax,0x8000000000000000
  41f890:	mov    QWORD PTR [rbx+0x48],rax
  41f894:	cmp    DWORD PTR [rsp+0xec],0x0
  41f89c:	je     0x41f826
  41f89e:	add    QWORD PTR [rbx+0x58],rcx
  41f8a2:	jmp    0x41f826
  41f8a4:	mov    ecx,0x1
  41f8a9:	call   0x41d370
  41f8ae:	mov    ebx,eax
  41f8b0:	mov    eax,DWORD PTR [r12+0x38]
  41f8b5:	test   eax,eax
  41f8b7:	jle    0x41f936
  41f8b9:	mov    r12,QWORD PTR [r12+0x30]
  41f8be:	sub    eax,0x1
  41f8c1:	mov    rdi,QWORD PTR [rip+0x22800]        # 0x4420c8
  41f8c8:	movabs rbp,0xf424000000000
  41f8d2:	lea    rsi,[r12+rax*8+0x8]
  41f8d7:	nop    WORD PTR [rax+rax*1+0x0]
  41f8e0:	mov    rax,QWORD PTR [r12]
  41f8e4:	mov    rax,QWORD PTR [rax+0x8]
  41f8e8:	movsxd rdx,DWORD PTR [rax]
  41f8eb:	mov    r13,QWORD PTR [rdi+rdx*8]
  41f8ef:	or     DWORD PTR [rax+0x158],0x1
  41f8f6:	mov    r11d,DWORD PTR [r13+0x30]
  41f8fa:	test   r11d,r11d
  41f8fd:	je     0x41f92d
  41f8ff:	mov    rdx,QWORD PTR [rax+0x48]
  41f903:	mov    rcx,QWORD PTR [rax+0x28]
  41f907:	mov    r8,rbp
  41f90a:	sub    rcx,QWORD PTR [rax+0x30]
  41f90e:	or     r8,0x1
  41f912:	mov    rdx,QWORD PTR [rdx+0x84]
  41f919:	call   0x422588
  41f91e:	mov    rdx,QWORD PTR [r13+0x18]
  41f922:	cmp    rax,rdx
  41f925:	cmovg  rax,rdx
  41f929:	mov    QWORD PTR [r13+0x18],rax
  41f92d:	add    r12,0x8
  41f931:	cmp    r12,rsi
  41f934:	jne    0x41f8e0
  41f936:	mov    eax,ebx
  41f938:	jmp    0x41e754
  41f93d:	movabs rax,0x8000000000000000
  41f947:	cmp    QWORD PTR [rsp+0x3a0],rax
  41f94f:	je     0x41ef2d
  41f955:	mov    rcx,QWORD PTR [rbx+0x20]
  41f959:	mov    edx,DWORD PTR [rsp+0x3b0]
  41f960:	call   0x422440
  41f965:	mov    r9d,eax
  41f968:	mov    rax,QWORD PTR [rbx+0x20]
  41f96c:	test   r9d,r9d
  41f96f:	jne    0x41f978
  41f971:	mov    r9d,DWORD PTR [rax+0x1dc]
  41f978:	mov    rdx,QWORD PTR [rsi+0x10]
  41f97c:	mov    r8d,DWORD PTR [rax+0x1d0]
  41f983:	mov    rax,QWORD PTR [rbx+0x8]
  41f987:	mov    rcx,QWORD PTR [rax+0x30]
  41f98b:	mov    rax,QWORD PTR [rdx+0x30]
  41f98f:	shl    r8,0x20
  41f993:	mov    rdx,QWORD PTR [rsp+0x3a0]
  41f99b:	or     r8,0x1
  41f99f:	mov    QWORD PTR [rsp+0x28],rax
  41f9a4:	lea    rax,[rbx+0x70]
  41f9a8:	mov    QWORD PTR [rsp+0x20],rax
  41f9ad:	call   0x422590
  41f9b2:	sub    rax,QWORD PTR [rsp+0xb0]
  41f9ba:	mov    r15,QWORD PTR [rsi+0x10]
  41f9be:	mov    QWORD PTR [rsp+0x4b8],rax
  41f9c6:	mov    QWORD PTR [rsp+0x4c0],rax
  41f9ce:	jmp    0x41ef2d
  41f9d3:	mov    rcx,QWORD PTR [rbx+0x50]
  41f9d7:	mov    r8,QWORD PTR [r15+0x30]
  41f9db:	movabs rdx,0xf424000000001
  41f9e5:	call   0x422588
  41f9ea:	mov    QWORD PTR [rsp+0x4c0],rax
  41f9f2:	jmp    0x41ef0f
  41f9f7:	mov    QWORD PTR [rsp+0x4b8],rcx
  41f9ff:	mov    r15,QWORD PTR [rsi+0x10]
  41fa03:	jmp    0x41eedb
  41fa08:	mov    rdx,QWORD PTR [r12]
  41fa0c:	mov    rdx,QWORD PTR [rdx+0x10]
  41fa10:	test   BYTE PTR [rdx+0x2c],0x20
  41fa14:	je     0x41f71e
  41fa1a:	mov    r9d,DWORD PTR [rax+0x94]
  41fa21:	mov    r8d,DWORD PTR [rax+0xa8]
  41fa28:	mov    eax,DWORD PTR [rax+0x98]
  41fa2e:	mov    rdx,QWORD PTR [rsp+0x4c8]
  41fa36:	mov    rcx,QWORD PTR [rsp+0xc0]
  41fa3e:	mov    DWORD PTR [rsp+0x20],eax
  41fa42:	call   0x422318
  41fa47:	test   eax,eax
  41fa49:	js     0x420a8b
  41fa4f:	mov    rax,QWORD PTR [rsp+0xc0]
  41fa57:	mov    DWORD PTR [rsp+0x4d0],0x60
  41fa62:	or     DWORD PTR [rsp+0x4d8],0x1
  41fa6a:	mov    QWORD PTR [rsp+0x4c8],rax
  41fa72:	jmp    0x41f71e
  41fa77:	cmp    r13,QWORD PTR [rbx+0x60]
  41fa7b:	jle    0x41ee30
  41fa81:	jmp    0x41ee23
  41fa86:	mov    rax,QWORD PTR [rbx+0x50]
  41fa8a:	mov    QWORD PTR [rbx+0x48],rax
  41fa8e:	jmp    0x41ec0e
  41fa93:	mov    rax,QWORD PTR [rbx+0x60]
  41fa97:	mov    QWORD PTR [rbx+0x58],rax
  41fa9b:	jmp    0x41ec22
  41faa0:	movsxd rdx,DWORD PTR [rbx]
  41faa3:	mov    rax,QWORD PTR [rip+0x2263e]        # 0x4420e8
  41faaa:	lea    r14,[rsp+0x2d0]
  41fab2:	mov    ecx,0x8
  41fab7:	mov    rdi,r14
  41faba:	mov    rax,QWORD PTR [rax+rdx*8]
  41fabe:	mov    rdx,QWORD PTR [rax+0x20]
  41fac2:	xor    eax,eax
  41fac4:	rep stos DWORD PTR es:[rdi],eax
  41fac6:	movabs rax,0x8000000000000000
  41fad0:	cmp    rdx,rax
  41fad3:	je     0x420683
  41fad9:	pxor   xmm0,xmm0
  41fadd:	lea    r8,[rip+0x1ade2]        # 0x43a8c6
  41fae4:	mov    rcx,r14
  41fae7:	cvtsi2sd xmm0,rdx
  41faec:	mov    edx,0x20
  41faf1:	mulsd  xmm0,QWORD PTR [rip+0x1c91f]        # 0x43c418
  41faf9:	movapd xmm3,xmm0
  41fafd:	movq   r9,xmm0
  41fb02:	call   0x414ae0
  41fb07:	movsxd rdx,DWORD PTR [rbx]
  41fb0a:	mov    rax,QWORD PTR [rip+0x225d7]        # 0x4420e8
  41fb11:	lea    r12,[rsp+0x2b0]
  41fb19:	mov    ecx,0x8
  41fb1e:	mov    rdi,r12
  41fb21:	mov    rax,QWORD PTR [rax+rdx*8]
  41fb25:	mov    r9,QWORD PTR [rax+0x20]
  41fb29:	xor    eax,eax
  41fb2b:	rep stos DWORD PTR es:[rdi],eax
  41fb2d:	movabs rax,0x8000000000000000
  41fb37:	cmp    r9,rax
  41fb3a:	je     0x42066a
  41fb40:	lea    r8,[rip+0x1ad84]        # 0x43a8cb
  41fb47:	mov    edx,0x20
  41fb4c:	mov    rcx,r12
  41fb4f:	call   0x414ae0
  41fb54:	lea    rbp,[rsp+0x290]
  41fb5c:	mov    rdx,QWORD PTR [rsp+0x3a0]
  41fb64:	xor    eax,eax
  41fb66:	mov    ecx,0x8
  41fb6b:	mov    r8,QWORD PTR [rbx+0x8]
  41fb6f:	mov    rdi,rbp
  41fb72:	rep stos DWORD PTR es:[rdi],eax
  41fb74:	movabs rax,0x8000000000000000
  41fb7e:	cmp    rdx,rax
  41fb81:	je     0x420651
  41fb87:	pxor   xmm0,xmm0
  41fb8b:	mov    rcx,rbp
  41fb8e:	pxor   xmm1,xmm1
  41fb92:	cvtsi2sd xmm0,DWORD PTR [r8+0x30]
  41fb98:	cvtsi2sd xmm1,DWORD PTR [r8+0x34]
  41fb9e:	divsd  xmm0,xmm1
  41fba2:	lea    r8,[rip+0x1ad1d]        # 0x43a8c6
  41fba9:	movapd xmm1,xmm0
  41fbad:	pxor   xmm0,xmm0
  41fbb1:	cvtsi2sd xmm0,rdx
  41fbb6:	mov    edx,0x20
  41fbbb:	mulsd  xmm0,xmm1
  41fbbf:	movapd xmm3,xmm0
  41fbc3:	movq   r9,xmm0
  41fbc8:	call   0x414ae0
  41fbcd:	lea    r15,[rsp+0x270]
  41fbd5:	mov    r9,QWORD PTR [rsp+0x3a0]
  41fbdd:	xor    eax,eax
  41fbdf:	mov    ecx,0x8
  41fbe4:	mov    rdi,r15
  41fbe7:	rep stos DWORD PTR es:[rdi],eax
  41fbe9:	movabs rax,0x8000000000000000
  41fbf3:	cmp    r9,rax
  41fbf6:	je     0x420638
  41fbfc:	lea    r8,[rip+0x1acc8]        # 0x43a8cb
  41fc03:	mov    edx,0x20
  41fc08:	mov    rcx,r15
  41fc0b:	call   0x414ae0
  41fc10:	lea    rdi,[rsp+0x250]
  41fc18:	mov    rdx,QWORD PTR [rsp+0x398]
  41fc20:	xor    eax,eax
  41fc22:	mov    ecx,0x8
  41fc27:	mov    r8,QWORD PTR [rbx+0x8]
  41fc2b:	mov    QWORD PTR [rsp+0xd8],rdi
  41fc33:	rep stos DWORD PTR es:[rdi],eax
  41fc35:	movabs rax,0x8000000000000000
  41fc3f:	cmp    rdx,rax
  41fc42:	je     0x42061a
  41fc48:	pxor   xmm0,xmm0
  41fc4c:	mov    rcx,QWORD PTR [rsp+0xd8]
  41fc54:	pxor   xmm1,xmm1
  41fc58:	cvtsi2sd xmm0,DWORD PTR [r8+0x30]
  41fc5e:	cvtsi2sd xmm1,DWORD PTR [r8+0x34]
  41fc64:	divsd  xmm0,xmm1
  41fc68:	lea    r8,[rip+0x1ac57]        # 0x43a8c6
  41fc6f:	movapd xmm1,xmm0
  41fc73:	pxor   xmm0,xmm0
  41fc77:	cvtsi2sd xmm0,rdx
  41fc7c:	mov    edx,0x20
  41fc81:	mulsd  xmm0,xmm1
  41fc85:	movapd xmm3,xmm0
  41fc89:	movq   r9,xmm0
  41fc8e:	call   0x414ae0
  41fc93:	lea    rdi,[rsp+0x230]
  41fc9b:	mov    r9,QWORD PTR [rsp+0x398]
  41fca3:	xor    eax,eax
  41fca5:	mov    ecx,0x8
  41fcaa:	mov    QWORD PTR [rsp+0xd0],rdi
  41fcb2:	rep stos DWORD PTR es:[rdi],eax
  41fcb4:	movabs rax,0x8000000000000000
  41fcbe:	cmp    r9,rax
  41fcc1:	je     0x420a5d
  41fcc7:	mov    rcx,QWORD PTR [rsp+0xd0]
  41fccf:	lea    r8,[rip+0x1abf5]        # 0x43a8cb
  41fcd6:	mov    edx,0x20
  41fcdb:	call   0x414ae0
  41fce0:	lea    rdi,[rsp+0x210]
  41fce8:	mov    rdx,QWORD PTR [rbx+0x58]
  41fcec:	xor    eax,eax
  41fcee:	mov    ecx,0x8
  41fcf3:	mov    QWORD PTR [rsp+0xc8],rdi
  41fcfb:	rep stos DWORD PTR es:[rdi],eax
  41fcfd:	movabs rax,0x8000000000000000
  41fd07:	cmp    rdx,rax
  41fd0a:	je     0x420a3f
  41fd10:	pxor   xmm0,xmm0
  41fd14:	mov    rcx,QWORD PTR [rsp+0xc8]
  41fd1c:	lea    r8,[rip+0x1aba3]        # 0x43a8c6
  41fd23:	cvtsi2sd xmm0,rdx
  41fd28:	mov    edx,0x20
  41fd2d:	mulsd  xmm0,QWORD PTR [rip+0x1c6e3]        # 0x43c418
  41fd35:	movapd xmm3,xmm0
  41fd39:	movq   r9,xmm0
  41fd3e:	call   0x414ae0
  41fd43:	lea    rdi,[rsp+0x1f0]
  41fd4b:	mov    r9,QWORD PTR [rbx+0x58]
  41fd4f:	xor    eax,eax
  41fd51:	mov    ecx,0x8
  41fd56:	mov    QWORD PTR [rsp+0xc0],rdi
  41fd5e:	rep stos DWORD PTR es:[rdi],eax
  41fd60:	movabs rax,0x8000000000000000
  41fd6a:	cmp    r9,rax
  41fd6d:	je     0x420a21
  41fd73:	mov    rcx,QWORD PTR [rsp+0xc0]
  41fd7b:	lea    r8,[rip+0x1ab49]        # 0x43a8cb
  41fd82:	mov    edx,0x20
  41fd87:	call   0x414ae0
  41fd8c:	lea    rdi,[rsp+0x1d0]
  41fd94:	mov    rdx,QWORD PTR [rbx+0x48]
  41fd98:	xor    eax,eax
  41fd9a:	mov    ecx,0x8
  41fd9f:	mov    QWORD PTR [rsp+0xb0],rdi
  41fda7:	rep stos DWORD PTR es:[rdi],eax
  41fda9:	movabs rax,0x8000000000000000
  41fdb3:	cmp    rdx,rax
  41fdb6:	je     0x420a03
  41fdbc:	pxor   xmm0,xmm0
  41fdc0:	mov    rcx,QWORD PTR [rsp+0xb0]
  41fdc8:	lea    r8,[rip+0x1aaf7]        # 0x43a8c6
  41fdcf:	cvtsi2sd xmm0,rdx
  41fdd4:	mov    edx,0x20
  41fdd9:	mulsd  xmm0,QWORD PTR [rip+0x1c637]        # 0x43c418
  41fde1:	movapd xmm3,xmm0
  41fde5:	movq   r9,xmm0
  41fdea:	call   0x414ae0
  41fdef:	lea    rdi,[rsp+0x1b0]
  41fdf7:	mov    r9,QWORD PTR [rbx+0x48]
  41fdfb:	xor    eax,eax
  41fdfd:	mov    ecx,0x8
  41fe02:	mov    QWORD PTR [rsp+0x98],rdi
  41fe0a:	rep stos DWORD PTR es:[rdi],eax
  41fe0c:	movabs rax,0x8000000000000000
  41fe16:	cmp    r9,rax
  41fe19:	je     0x4209e5
  41fe1f:	mov    rcx,QWORD PTR [rsp+0x98]
  41fe27:	lea    r8,[rip+0x1aa9d]        # 0x43a8cb
  41fe2e:	mov    edx,0x20
  41fe33:	call   0x414ae0
  41fe38:	mov    rax,QWORD PTR [rbx+0x20]
  41fe3c:	mov    ecx,DWORD PTR [rax+0xc]
  41fe3f:	call   0x422718
  41fe44:	mov    rdi,QWORD PTR [rsp+0xd8]
  41fe4c:	mov    r9d,DWORD PTR [rsp+0x3b4]
  41fe54:	lea    r8,[rip+0x1bbcd]        # 0x43ba28
  41fe5b:	add    r9d,DWORD PTR [r13+0x10]
  41fe5f:	mov    edx,0x20
  41fe64:	mov    QWORD PTR [rsp+0x70],r14
  41fe69:	mov    QWORD PTR [rsp+0x68],r12
  41fe6e:	mov    QWORD PTR [rsp+0x60],rbp
  41fe73:	xor    ecx,ecx
  41fe75:	mov    QWORD PTR [rsp+0x50],rdi
  41fe7a:	mov    rdi,QWORD PTR [rsp+0xd0]
  41fe82:	mov    QWORD PTR [rsp+0x58],r15
  41fe87:	mov    QWORD PTR [rsp+0x20],rax
  41fe8c:	mov    QWORD PTR [rsp+0x48],rdi
  41fe91:	mov    rdi,QWORD PTR [rsp+0xc8]
  41fe99:	mov    QWORD PTR [rsp+0x40],rdi
  41fe9e:	mov    rdi,QWORD PTR [rsp+0xc0]
  41fea6:	mov    QWORD PTR [rsp+0x38],rdi
  41feab:	mov    rdi,QWORD PTR [rsp+0xb0]
  41feb3:	mov    QWORD PTR [rsp+0x30],rdi
  41feb8:	mov    rdi,QWORD PTR [rsp+0x98]
  41fec0:	mov    QWORD PTR [rsp+0x28],rdi
  41fec5:	call   0x4226c0
  41feca:	jmp    0x41e85b
  41fecf:	movsxd rdx,DWORD PTR [rbx]
  41fed2:	mov    rax,QWORD PTR [rip+0x2220f]        # 0x4420e8
  41fed9:	lea    r14,[rsp+0x190]
  41fee1:	mov    ecx,0x8
  41fee6:	mov    rdi,r14
  41fee9:	mov    rax,QWORD PTR [rax+rdx*8]
  41feed:	mov    rdx,QWORD PTR [rax+0x20]
  41fef1:	xor    eax,eax
  41fef3:	rep stos DWORD PTR es:[rdi],eax
  41fef5:	movabs rax,0x8000000000000000
  41feff:	cmp    rdx,rax
  41ff02:	je     0x4209cc
  41ff08:	pxor   xmm0,xmm0
  41ff0c:	lea    r8,[rip+0x1a9b3]        # 0x43a8c6
  41ff13:	mov    rcx,r14
  41ff16:	cvtsi2sd xmm0,rdx
  41ff1b:	mov    edx,0x20
  41ff20:	mulsd  xmm0,QWORD PTR [rip+0x1c4f0]        # 0x43c418
  41ff28:	movapd xmm3,xmm0
  41ff2c:	movq   r9,xmm0
  41ff31:	call   0x414ae0
  41ff36:	movsxd rdx,DWORD PTR [rbx]
  41ff39:	mov    rax,QWORD PTR [rip+0x221a8]        # 0x4420e8
  41ff40:	lea    r12,[rsp+0x170]
  41ff48:	mov    ecx,0x8
  41ff4d:	mov    rdi,r12
  41ff50:	mov    rax,QWORD PTR [rax+rdx*8]
  41ff54:	mov    r9,QWORD PTR [rax+0x20]
  41ff58:	xor    eax,eax
  41ff5a:	rep stos DWORD PTR es:[rdi],eax
  41ff5c:	movabs rax,0x8000000000000000
  41ff66:	cmp    r9,rax
  41ff69:	je     0x4209b3
  41ff6f:	lea    r8,[rip+0x1a955]        # 0x43a8cb
  41ff76:	mov    edx,0x20
  41ff7b:	mov    rcx,r12
  41ff7e:	call   0x414ae0
  41ff83:	lea    rbp,[rsp+0x150]
  41ff8b:	mov    rdx,QWORD PTR [rsp+0x3a0]
  41ff93:	xor    eax,eax
  41ff95:	mov    ecx,0x8
  41ff9a:	mov    r8,QWORD PTR [rbx+0x8]
  41ff9e:	mov    rdi,rbp
  41ffa1:	rep stos DWORD PTR es:[rdi],eax
  41ffa3:	movabs rax,0x8000000000000000
  41ffad:	cmp    rdx,rax
  41ffb0:	je     0x42099a
  41ffb6:	pxor   xmm0,xmm0
  41ffba:	mov    rcx,rbp
  41ffbd:	pxor   xmm1,xmm1
  41ffc1:	cvtsi2sd xmm0,DWORD PTR [r8+0x30]
  41ffc7:	cvtsi2sd xmm1,DWORD PTR [r8+0x34]
  41ffcd:	divsd  xmm0,xmm1
  41ffd1:	lea    r8,[rip+0x1a8ee]        # 0x43a8c6
  41ffd8:	movapd xmm1,xmm0
  41ffdc:	pxor   xmm0,xmm0
  41ffe0:	cvtsi2sd xmm0,rdx
  41ffe5:	mov    edx,0x20
  41ffea:	mulsd  xmm0,xmm1
  41ffee:	movapd xmm3,xmm0
  41fff2:	movq   r9,xmm0
  41fff7:	call   0x414ae0
  41fffc:	lea    rsi,[rsp+0x130]
  420004:	mov    r9,QWORD PTR [rsp+0x3a0]
  42000c:	xor    eax,eax
  42000e:	mov    ecx,0x8
  420013:	mov    rdi,rsi
  420016:	rep stos DWORD PTR es:[rdi],eax
  420018:	movabs rax,0x8000000000000000
  420022:	cmp    r9,rax
  420025:	je     0x420981
  42002b:	lea    r8,[rip+0x1a899]        # 0x43a8cb
  420032:	mov    edx,0x20
  420037:	mov    rcx,rsi
  42003a:	call   0x414ae0
  42003f:	lea    r15,[rsp+0x110]
  420047:	mov    rdx,QWORD PTR [rsp+0x398]
  42004f:	xor    eax,eax
  420051:	mov    ecx,0x8
  420056:	mov    r8,QWORD PTR [rbx+0x8]
  42005a:	mov    rdi,r15
  42005d:	rep stos DWORD PTR es:[rdi],eax
  42005f:	movabs rax,0x8000000000000000
  420069:	cmp    rdx,rax
  42006c:	je     0x420968
  420072:	pxor   xmm0,xmm0
  420076:	mov    rcx,r15
  420079:	pxor   xmm1,xmm1
  42007d:	cvtsi2sd xmm0,DWORD PTR [r8+0x30]
  420083:	cvtsi2sd xmm1,DWORD PTR [r8+0x34]
  420089:	divsd  xmm0,xmm1
  42008d:	lea    r8,[rip+0x1a832]        # 0x43a8c6
  420094:	movapd xmm1,xmm0
  420098:	pxor   xmm0,xmm0
  42009c:	cvtsi2sd xmm0,rdx
  4200a1:	mov    edx,0x20
  4200a6:	mulsd  xmm0,xmm1
  4200aa:	movapd xmm3,xmm0
  4200ae:	movq   r9,xmm0
  4200b3:	call   0x414ae0
  4200b8:	lea    rdi,[rsp+0xf0]
  4200c0:	mov    r9,QWORD PTR [rsp+0x398]
  4200c8:	xor    eax,eax
  4200ca:	mov    ecx,0x8
  4200cf:	mov    QWORD PTR [rsp+0x98],rdi
  4200d7:	rep stos DWORD PTR es:[rdi],eax
  4200d9:	movabs rax,0x8000000000000000
  4200e3:	cmp    r9,rax
  4200e6:	je     0x42094a
  4200ec:	mov    rcx,QWORD PTR [rsp+0x98]
  4200f4:	lea    r8,[rip+0x1a7d0]        # 0x43a8cb
  4200fb:	mov    edx,0x20
  420100:	call   0x414ae0
  420105:	mov    rax,QWORD PTR [rbx+0x20]
  420109:	mov    ecx,DWORD PTR [rax+0xc]
  42010c:	call   0x422718
  420111:	mov    r9d,DWORD PTR [rsp+0x3b4]
  420119:	mov    rdi,QWORD PTR [rsp+0x98]
  420121:	lea    r8,[rip+0x1ba98]        # 0x43bbc0
  420128:	add    r9d,DWORD PTR [r13+0x10]
  42012c:	mov    edx,0x20
  420131:	mov    QWORD PTR [rsp+0x50],r14
  420136:	mov    QWORD PTR [rsp+0x48],r12
  42013b:	mov    QWORD PTR [rsp+0x40],rbp
  420140:	xor    ecx,ecx
  420142:	mov    QWORD PTR [rsp+0x38],rsi
  420147:	mov    QWORD PTR [rsp+0x30],r15
  42014c:	mov    QWORD PTR [rsp+0x28],rdi
  420151:	mov    QWORD PTR [rsp+0x20],rax
  420156:	call   0x4226c0
  42015b:	jmp    0x41ea5c
  420160:	movabs rax,0x8000000000000000
  42016a:	cmp    rbp,rax
  42016d:	je     0x41ea4c
  420173:	cmp    QWORD PTR [rbx+0x48],rax
  420177:	je     0x420811
  42017d:	mov    rdi,QWORD PTR [rbx+0x8]
  420181:	mov    r12,QWORD PTR [rbx+0x48]
  420185:	movabs r15,0x8000000000000000
  42018f:	cmp    r12,r15
  420192:	je     0x41ea32
  420198:	mov    rax,QWORD PTR [rip+0x1d551]        # 0x43d6f0
  42019f:	cmp    DWORD PTR [rax],0x0
  4201a2:	jne    0x41ea32
  4201a8:	mov    rdx,QWORD PTR [rdi+0x30]
  4201ac:	movabs r8,0xf424000000001
  4201b6:	mov    rcx,rbp
  4201b9:	call   0x422588
  4201be:	mov    rdx,QWORD PTR [rsi+0x8]
  4201c2:	mov    r14,rax
  4201c5:	sub    r14,r12
  4201c8:	test   BYTE PTR [rdx+0x11],0x2
  4201cc:	jne    0x42051b
  4201d2:	pxor   xmm1,xmm1
  4201d6:	mov    rsi,QWORD PTR [rip+0x1d593]        # 0x43d770
  4201dd:	movss  xmm9,DWORD PTR [rip+0x1c24a]        # 0x43c430
  4201e6:	cvtsi2ss xmm1,r14
  4201eb:	movss  xmm0,DWORD PTR [rsi]
  4201ef:	movaps xmm2,xmm0
  4201f2:	xorps  xmm2,xmm6
  4201f5:	mulss  xmm2,xmm9
  4201fa:	ucomiss xmm2,xmm1
  4201fd:	ja     0x42020d
  4201ff:	mulss  xmm0,xmm9
  420204:	ucomiss xmm1,xmm0
  420207:	jbe    0x420604
  42020d:	mov    eax,DWORD PTR [rsp+0x3b4]
  420214:	lea    r8,[rip+0x1b945]        # 0x43bb60
  42021b:	xor    ecx,ecx
  42021d:	mov    QWORD PTR [rsp+0x20],r12
  420222:	mov    r9,rbp
  420225:	mov    edx,0x18
  42022a:	mov    DWORD PTR [rsp+0x28],eax
  42022e:	call   0x4226c0
  420233:	mov    r14,QWORD PTR [rsp+0x398]
  42023b:	movabs rax,0x8000000000000000
  420245:	mov    QWORD PTR [rsp+0x3a0],rax
  42024d:	cmp    r14,rax
  420250:	je     0x41ea4c
  420256:	mov    rdi,QWORD PTR [rbx+0x8]
  42025a:	mov    r12,QWORD PTR [rbx+0x48]
  42025e:	mov    rdx,QWORD PTR [rdi+0x30]
  420262:	movabs r8,0xf424000000001
  42026c:	mov    rcx,r14
  42026f:	call   0x422588
  420274:	pxor   xmm1,xmm1
  420278:	sub    rax,r12
  42027b:	movss  xmm0,DWORD PTR [rsi]
  42027f:	movaps xmm2,xmm0
  420282:	cvtsi2ss xmm1,rax
  420287:	xorps  xmm2,xmm6
  42028a:	mulss  xmm2,xmm9
  42028f:	ucomiss xmm2,xmm1
  420292:	ja     0x42029e
  420294:	mulss  xmm0,xmm9
  420299:	ucomiss xmm1,xmm0
  42029c:	jbe    0x4202d6
  42029e:	mov    eax,DWORD PTR [rsp+0x3b4]
  4202a5:	lea    r8,[rip+0x1b8e4]        # 0x43bb90
  4202ac:	mov    QWORD PTR [rsp+0x20],r12
  4202b1:	mov    r9,r14
  4202b4:	mov    edx,0x18
  4202b9:	xor    ecx,ecx
  4202bb:	mov    DWORD PTR [rsp+0x28],eax
  4202bf:	call   0x4226c0
  4202c4:	movabs rax,0x8000000000000000
  4202ce:	mov    QWORD PTR [rsp+0x398],rax
  4202d6:	mov    rbp,QWORD PTR [rsp+0x3a0]
  4202de:	jmp    0x41ea1f
  4202e3:	mov    rdi,QWORD PTR [rbx+0x8]
  4202e7:	cmp    DWORD PTR [rdi+0xd8],0x0
  4202ee:	je     0x41e94b
  4202f4:	mov    r14,QWORD PTR [rsp+0x90]
  4202fc:	mov    rcx,r14
  4202ff:	call   0x422410
  420304:	mov    rdi,QWORD PTR [rbx+0x8]
  420308:	cmp    DWORD PTR [rdi+0xd8],0x0
  42030f:	jle    0x41e94b
  420315:	xor    r12d,r12d
  420318:	xor    ebp,ebp
  42031a:	jmp    0x420337
  42031c:	nop    DWORD PTR [rax+0x0]
  420320:	mov    rdi,QWORD PTR [rbx+0x8]
  420324:	add    ebp,0x1
  420327:	add    r12,0x10
  42032b:	cmp    ebp,DWORD PTR [rdi+0xd8]
  420331:	jge    0x41e94b
  420337:	mov    rax,r12
  42033a:	add    rax,QWORD PTR [rdi+0xd0]
  420341:	xor    r8d,r8d
  420344:	mov    rcx,r14
  420347:	mov    edx,DWORD PTR [rax+0xc]
  42034a:	mov    rdi,rax
  42034d:	call   0x422428
  420352:	test   rax,rax
  420355:	jne    0x420320
  420357:	cmp    DWORD PTR [rbx+0xa0],0x0
  42035e:	je     0x420366
  420360:	cmp    DWORD PTR [rdi+0xc],0x5
  420364:	je     0x420320
  420366:	mov    edx,DWORD PTR [rdi+0xc]
  420369:	mov    r8d,DWORD PTR [rdi+0x8]
  42036d:	mov    rcx,r14
  420370:	call   0x422420
  420375:	test   rax,rax
  420378:	je     0x41f00c
  42037e:	movsxd r8,DWORD PTR [rdi+0x8]
  420382:	mov    rdx,QWORD PTR [rdi]
  420385:	mov    rcx,rax
  420388:	call   0x42fb40
  42038d:	jmp    0x420320
  42038f:	mov    r8,rsi
  420392:	mov    rdx,rbp
  420395:	mov    rcx,rbx
  420398:	call   0x418de0
  42039d:	mov    r12d,eax
  4203a0:	jmp    0x41f826
  4203a5:	mov    eax,DWORD PTR [rsp+0x3cc]
  4203ac:	test   eax,eax
  4203ae:	jne    0x4204f5
  4203b4:	cmp    DWORD PTR [rdx+0x3f0],0x0
  4203bb:	je     0x41ece1
  4203c1:	mov    rcx,QWORD PTR [rbx+0x8]
  4203c5:	call   0x422268
  4203ca:	test   rax,rax
  4203cd:	je     0x420b0c
  4203d3:	mov    rcx,QWORD PTR [rbx+0x8]
  4203d7:	call   0x422268
  4203dc:	mov    edx,DWORD PTR [rax+0x2c]
  4203df:	mov    r12,QWORD PTR [rbx+0x20]
  4203e3:	add    edx,0x1
  4203e6:	movsxd rax,DWORD PTR [r12+0x3f4]
  4203ee:	movsxd rdx,edx
  4203f1:	movsxd rcx,DWORD PTR [r12+0x3f0]
  4203f9:	imul   rax,rax,0xf4240
  420400:	imul   rax,rdx
  420404:	cqo    
  420406:	idiv   rcx
  420409:	movsxd rcx,DWORD PTR [r12+0x8c]
  420411:	cqo    
  420413:	idiv   rcx
  420416:	add    QWORD PTR [rbx+0x48],rax
  42041a:	mov    r12,QWORD PTR [rbx+0x48]
  42041e:	jmp    0x41ece1
  420423:	lea    rbx,[rsp+0x450]
  42042b:	lea    rdi,[rsp+0x450]
  420433:	xor    eax,eax
  420435:	mov    ecx,0x10
  42043a:	mov    r8d,0x40
  420440:	rep stos DWORD PTR es:[rdi],eax
  420442:	mov    rdx,rbx
  420445:	mov    ecx,r12d
  420448:	call   0x422570
  42044d:	lea    r8,[rip+0x1b863]        # 0x43bcb7
  420454:	xor    ecx,ecx
  420456:	mov    QWORD PTR [rsp+0x20],rbx
  42045b:	mov    r9,rbp
  42045e:	mov    edx,0x8
  420463:	call   0x4226c0
  420468:	mov    ecx,0x1
  42046d:	call   0x401cb0
  420472:	cmp    DWORD PTR [rax+0x3f4],0x0
  420479:	je     0x41f886
  42047f:	mov    rcx,QWORD PTR [rbx+0x8]
  420483:	call   0x422268
  420488:	test   rax,rax
  42048b:	je     0x420a7b
  420491:	mov    rcx,QWORD PTR [rbx+0x8]
  420495:	call   0x422268
  42049a:	mov    r9d,DWORD PTR [rax+0x2c]
  42049e:	mov    r8,QWORD PTR [rbx+0x20]
  4204a2:	add    r9d,0x1
  4204a6:	movsxd rcx,DWORD PTR [r8+0x3f4]
  4204ad:	movsxd r9,r9d
  4204b0:	imul   rcx,rcx,0xf4240
  4204b7:	mov    rax,rcx
  4204ba:	imul   rax,r9
  4204be:	movsxd r9,DWORD PTR [r8+0x3f0]
  4204c5:	movsxd r8,DWORD PTR [r8+0x8c]
  4204cc:	cqo    
  4204ce:	idiv   r9
  4204d1:	cqo    
  4204d3:	idiv   r8
  4204d6:	movsxd rcx,eax
  4204d9:	jmp    0x41f63b
  4204de:	sub    rdx,r11
  4204e1:	mov    DWORD PTR [rbx+0x68],0x0
  4204e8:	mov    QWORD PTR [rsp+0x398],rdx
  4204f0:	jmp    0x41e93d
  4204f5:	mov    rdx,QWORD PTR [rbx+0x8]
  4204f9:	movsxd rcx,eax
  4204fc:	movabs r8,0xf424000000001
  420506:	mov    rdx,QWORD PTR [rdx+0x30]
  42050a:	call   0x422588
  42050f:	add    r12,rax
  420512:	mov    QWORD PTR [rbx+0x48],r12
  420516:	jmp    0x41ece1
  42051b:	pxor   xmm3,xmm3
  42051f:	mov    rdx,QWORD PTR [rip+0x1d23a]        # 0x43d760
  420526:	movss  xmm0,DWORD PTR [rip+0x1bf02]        # 0x43c430
  42052e:	cvtsi2ss xmm3,r14
  420533:	movss  xmm1,DWORD PTR [rdx]
  420537:	movaps xmm2,xmm1
  42053a:	xorps  xmm2,xmm8
  42053e:	mulss  xmm2,xmm0
  420542:	ucomiss xmm2,xmm3
  420545:	ja     0x42056d
  420547:	mulss  xmm0,xmm1
  42054b:	ucomiss xmm3,xmm0
  42054e:	ja     0x42056d
  420550:	lea    rdx,[rax+0x186a0]
  420557:	mov    rax,QWORD PTR [rbx+0x50]
  42055b:	cmp    QWORD PTR [rbx+0x60],rax
  42055f:	cmovge rax,QWORD PTR [rbx+0x60]
  420564:	cmp    rdx,rax
  420567:	jge    0x41ea1f
  42056d:	mov    rax,QWORD PTR [r13+0x20]
  420571:	lea    r8,[rip+0x1b5b8]        # 0x43bb30
  420578:	xor    ecx,ecx
  42057a:	mov    r9,r14
  42057d:	mov    edx,0x30
  420582:	movabs rbp,0xf424000000000
  42058c:	sub    rax,r14
  42058f:	mov    QWORD PTR [r13+0x20],rax
  420593:	mov    QWORD PTR [rsp+0x20],rax
  420598:	call   0x4226c0
  42059d:	mov    rdi,QWORD PTR [rbx+0x8]
  4205a1:	mov    rdx,rbp
  4205a4:	mov    rcx,r14
  4205a7:	or     rdx,0x1
  4205ab:	mov    rdi,QWORD PTR [rdi+0x30]
  4205af:	mov    r8,rdi
  4205b2:	call   0x422588
  4205b7:	mov    rsi,QWORD PTR [rsp+0x398]
  4205bf:	sub    QWORD PTR [rsp+0x3a0],rax
  4205c7:	movabs rax,0x8000000000000000
  4205d1:	cmp    rsi,rax
  4205d4:	je     0x4202d6
  4205da:	mov    rdx,rbp
  4205dd:	mov    r8,rdi
  4205e0:	mov    rcx,r14
  4205e3:	or     rdx,0x1
  4205e7:	call   0x422588
  4205ec:	sub    rsi,rax
  4205ef:	mov    rbp,QWORD PTR [rsp+0x3a0]
  4205f7:	mov    QWORD PTR [rsp+0x398],rsi
  4205ff:	jmp    0x41ea1f
  420604:	mov    r14,QWORD PTR [rsp+0x398]
  42060c:	cmp    r14,r15
  42060f:	jne    0x42025e
  420615:	jmp    0x41ea1f
  42061a:	mov    rcx,QWORD PTR [rsp+0xd8]
  420622:	lea    r8,[rip+0x1a297]        # 0x43a8c0
  420629:	mov    edx,0x20
  42062e:	call   0x414ae0
  420633:	jmp    0x41fc93
  420638:	lea    r8,[rip+0x1a281]        # 0x43a8c0
  42063f:	mov    edx,0x20
  420644:	mov    rcx,r15
  420647:	call   0x414ae0
  42064c:	jmp    0x41fc10
  420651:	lea    r8,[rip+0x1a268]        # 0x43a8c0
  420658:	mov    edx,0x20
  42065d:	mov    rcx,rbp
  420660:	call   0x414ae0
  420665:	jmp    0x41fbcd
  42066a:	lea    r8,[rip+0x1a24f]        # 0x43a8c0
  420671:	mov    edx,0x20
  420676:	mov    rcx,r12
  420679:	call   0x414ae0
  42067e:	jmp    0x41fb54
  420683:	lea    r8,[rip+0x1a236]        # 0x43a8c0
  42068a:	mov    edx,0x20
  42068f:	mov    rcx,r14
  420692:	call   0x414ae0
  420697:	jmp    0x41fb07
  42069c:	lea    rsi,[rsp+0x310]
  4206a4:	lea    rdi,[rsp+0x310]
  4206ac:	xor    eax,eax
  4206ae:	mov    ecx,0x10
  4206b3:	mov    r8d,0x40
  4206b9:	rep stos DWORD PTR es:[rdi],eax
  4206bb:	mov    rdx,rsi
  4206be:	mov    ecx,r12d
  4206c1:	call   0x422570
  4206c6:	mov    QWORD PTR [rsp+0x28],rsi
  4206cb:	mov    rax,QWORD PTR [rbx+0x8]
  4206cf:	lea    r8,[rip+0x1a6fa]        # 0x43add0
  4206d6:	xor    ecx,ecx
  4206d8:	mov    edx,0x10
  4206dd:	mov    eax,DWORD PTR [rax]
  4206df:	mov    DWORD PTR [rsp+0x20],eax
  4206e3:	mov    r9d,DWORD PTR [rbx]
  4206e6:	call   0x4226c0
  4206eb:	mov    rax,QWORD PTR [rip+0x1d08e]        # 0x43d780
  4206f2:	cmp    DWORD PTR [rax],0x0
  4206f5:	jne    0x41f00c
  4206fb:	cmp    DWORD PTR [rbx+0x18],0x0
  4206ff:	jne    0x41eced
  420705:	jmp    0x41eca4
  42070a:	mov    rcx,r12
  42070d:	add    rcx,QWORD PTR [r13+0x20]
  420711:	jne    0x41e89a
  420717:	mov    rdx,QWORD PTR [rsi+0x8]
  42071b:	test   BYTE PTR [rdx+0x11],0x2
  42071f:	je     0x41e89a
  420725:	mov    ecx,DWORD PTR [rsi+0x2c]
  420728:	xor    r14d,r14d
  42072b:	movabs rbp,0x7fffffffffffffff
  420735:	mov    QWORD PTR [rsp+0xb0],rax
  42073d:	mov    QWORD PTR [rsp+0xc0],rbx
  420745:	mov    DWORD PTR [rsp+0x98],ecx
  42074c:	jmp    0x4207ac
  42074e:	mov    rax,QWORD PTR [rsi+0x30]
  420752:	mov    rdx,QWORD PTR [rax+r14*8]
  420756:	cmp    DWORD PTR [rdx+0x54],0x30
  42075a:	je     0x4207a8
  42075c:	mov    r15,QWORD PTR [rdx+0x38]
  420760:	cmp    r15,QWORD PTR [rsp+0xb0]
  420768:	je     0x4207a8
  42076a:	mov    rbx,QWORD PTR [rdx+0x30]
  42076e:	movabs r8,0xf424000000000
  420778:	mov    rcx,r15
  42077b:	or     r8,0x1
  42077f:	mov    rdx,rbx
  420782:	call   0x422588
  420787:	cmp    rax,rbp
  42078a:	jge    0x4207a8
  42078c:	movabs r8,0xf424000000000
  420796:	mov    rdx,rbx
  420799:	mov    rcx,r15
  42079c:	or     r8,0x1
  4207a0:	call   0x422588
  4207a5:	mov    rbp,rax
  4207a8:	add    r14,0x1
  4207ac:	cmp    DWORD PTR [rsp+0x98],r14d
  4207b4:	ja     0x42074e
  4207b6:	cmp    r12,rbp
  4207b9:	mov    rbx,QWORD PTR [rsp+0xc0]
  4207c1:	jge    0x41e89a
  4207c7:	mov    r9,rbp
  4207ca:	lea    r8,[rip+0x1b2ff]        # 0x43bad0
  4207d1:	mov    edx,0x28
  4207d6:	sub    r9,r12
  4207d9:	mov    rcx,rsi
  4207dc:	neg    rbp
  4207df:	call   0x4226c0
  4207e4:	mov    QWORD PTR [r13+0x20],rbp
  4207e8:	mov    rdi,QWORD PTR [rbx+0x8]
  4207ec:	mov    r12,QWORD PTR [rsi+0x438]
  4207f3:	jmp    0x41e89a
  4207f8:	lea    r8,[rip+0x1a0c1]        # 0x43a8c0
  4207ff:	mov    edx,0x20
  420804:	mov    rcx,rbx
  420807:	call   0x414ae0
  42080c:	jmp    0x41f0af
  420811:	mov    rdx,QWORD PTR [rip+0x1ced8]        # 0x43d6f0
  420818:	cmp    DWORD PTR [rdx],0x0
  42081b:	jne    0x42017d
  420821:	mov    rdx,QWORD PTR [rsi+0x8]
  420825:	test   BYTE PTR [rdx+0x11],0x2
  420829:	je     0x42017d
  42082f:	mov    r15,QWORD PTR [r13+0x28]
  420833:	cmp    r15,rax
  420836:	je     0x42017d
  42083c:	mov    rdi,QWORD PTR [rbx+0x8]
  420840:	movabs r8,0xf424000000001
  42084a:	mov    rcx,rbp
  42084d:	mov    rdx,QWORD PTR [rdi+0x30]
  420851:	call   0x422588
  420856:	pxor   xmm3,xmm3
  42085a:	sub    rax,r15
  42085d:	mov    r14,rax
  420860:	movss  xmm0,DWORD PTR [rip+0x1bbc8]        # 0x43c430
  420868:	cvtsi2ss xmm3,rax
  42086d:	mov    rax,QWORD PTR [rip+0x1ceec]        # 0x43d760
  420874:	movss  xmm1,DWORD PTR [rax]
  420878:	movaps xmm2,xmm1
  42087b:	xorps  xmm2,xmm7
  42087e:	mulss  xmm2,xmm0
  420882:	ucomiss xmm2,xmm3
  420885:	ja     0x420894
  420887:	mulss  xmm0,xmm1
  42088b:	ucomiss xmm3,xmm0
  42088e:	jbe    0x420926
  420894:	mov    rax,QWORD PTR [r13+0x20]
  420898:	lea    r8,[rip+0x1b251]        # 0x43baf0
  42089f:	xor    ecx,ecx
  4208a1:	mov    r9,r14
  4208a4:	mov    edx,0x30
  4208a9:	movabs r15,0xf424000000000
  4208b3:	sub    rax,r14
  4208b6:	mov    QWORD PTR [r13+0x20],rax
  4208ba:	mov    QWORD PTR [rsp+0x20],rax
  4208bf:	call   0x4226c0
  4208c4:	mov    rdi,QWORD PTR [rbx+0x8]
  4208c8:	mov    rdx,r15
  4208cb:	mov    rcx,r14
  4208ce:	or     rdx,0x1
  4208d2:	mov    r12,QWORD PTR [rdi+0x30]
  4208d6:	mov    r8,r12
  4208d9:	call   0x422588
  4208de:	mov    rbp,QWORD PTR [rsp+0x398]
  4208e6:	sub    QWORD PTR [rsp+0x3a0],rax
  4208ee:	movabs rax,0x8000000000000000
  4208f8:	cmp    rbp,rax
  4208fb:	je     0x42091a
  4208fd:	mov    rdx,r15
  420900:	mov    r8,r12
  420903:	mov    rcx,r14
  420906:	or     rdx,0x1
  42090a:	call   0x422588
  42090f:	sub    rbp,rax
  420912:	mov    QWORD PTR [rsp+0x398],rbp
  42091a:	mov    rbp,QWORD PTR [rsp+0x3a0]
  420922:	mov    r12,QWORD PTR [rbx+0x20]
  420926:	cmp    DWORD PTR [r12+0xc],0x1
  42092c:	ja     0x41ea1f
  420932:	movabs rax,0x8000000000000000
  42093c:	cmp    rbp,rax
  42093f:	jne    0x420181
  420945:	jmp    0x41ea4c
  42094a:	mov    rcx,QWORD PTR [rsp+0x98]
  420952:	lea    r8,[rip+0x19f67]        # 0x43a8c0
  420959:	mov    edx,0x20
  42095e:	call   0x414ae0
  420963:	jmp    0x420105
  420968:	lea    r8,[rip+0x19f51]        # 0x43a8c0
  42096f:	mov    edx,0x20
  420974:	mov    rcx,r15
  420977:	call   0x414ae0
  42097c:	jmp    0x4200b8
  420981:	lea    r8,[rip+0x19f38]        # 0x43a8c0
  420988:	mov    edx,0x20
  42098d:	mov    rcx,rsi
  420990:	call   0x414ae0
  420995:	jmp    0x42003f
  42099a:	lea    r8,[rip+0x19f1f]        # 0x43a8c0
  4209a1:	mov    edx,0x20
  4209a6:	mov    rcx,rbp
  4209a9:	call   0x414ae0
  4209ae:	jmp    0x41fffc
  4209b3:	lea    r8,[rip+0x19f06]        # 0x43a8c0
  4209ba:	mov    edx,0x20
  4209bf:	mov    rcx,r12
  4209c2:	call   0x414ae0
  4209c7:	jmp    0x41ff83
  4209cc:	lea    r8,[rip+0x19eed]        # 0x43a8c0
  4209d3:	mov    edx,0x20
  4209d8:	mov    rcx,r14
  4209db:	call   0x414ae0
  4209e0:	jmp    0x41ff36
  4209e5:	mov    rcx,QWORD PTR [rsp+0x98]
  4209ed:	lea    r8,[rip+0x19ecc]        # 0x43a8c0
  4209f4:	mov    edx,0x20
  4209f9:	call   0x414ae0
  4209fe:	jmp    0x41fe38
  420a03:	mov    rcx,QWORD PTR [rsp+0xb0]
  420a0b:	lea    r8,[rip+0x19eae]        # 0x43a8c0
  420a12:	mov    edx,0x20
  420a17:	call   0x414ae0
  420a1c:	jmp    0x41fdef
  420a21:	mov    rcx,QWORD PTR [rsp+0xc0]
  420a29:	lea    r8,[rip+0x19e90]        # 0x43a8c0
  420a30:	mov    edx,0x20
  420a35:	call   0x414ae0
  420a3a:	jmp    0x41fd8c
  420a3f:	mov    rcx,QWORD PTR [rsp+0xc8]
  420a47:	lea    r8,[rip+0x19e72]        # 0x43a8c0
  420a4e:	mov    edx,0x20
  420a53:	call   0x414ae0
  420a58:	jmp    0x41fd43
  420a5d:	mov    rcx,QWORD PTR [rsp+0xd0]
  420a65:	lea    r8,[rip+0x19e54]        # 0x43a8c0
  420a6c:	mov    edx,0x20
  420a71:	call   0x414ae0
  420a76:	jmp    0x41fce0
  420a7b:	mov    r8,QWORD PTR [rbx+0x20]
  420a7f:	mov    r9d,DWORD PTR [r8+0x8c]
  420a86:	jmp    0x4204a6
  420a8b:	lea    rbx,[rsp+0x350]
  420a93:	lea    rdi,[rsp+0x350]
  420a9b:	mov    r11d,eax
  420a9e:	mov    ecx,0x10
  420aa3:	xor    eax,eax
  420aa5:	mov    r8d,0x40
  420aab:	rep stos DWORD PTR es:[rdi],eax
  420aad:	mov    rdx,rbx
  420ab0:	mov    ecx,r11d
  420ab3:	call   0x422570
  420ab8:	lea    r8,[rip+0x1b1c2]        # 0x43bc81
  420abf:	mov    r9,rbx
  420ac2:	mov    edx,0x8
  420ac7:	xor    ecx,ecx
  420ac9:	call   0x4226c0
  420ace:	jmp    0x41f00c
  420ad3:	lea    rbx,[rsp+0x450]
  420adb:	lea    rdi,[rsp+0x450]
  420ae3:	mov    r11d,eax
  420ae6:	mov    ecx,0x10
  420aeb:	xor    eax,eax
  420aed:	mov    r8d,0x40
  420af3:	rep stos DWORD PTR es:[rdi],eax
  420af5:	mov    rdx,rbx
  420af8:	mov    ecx,r11d
  420afb:	call   0x422570
  420b00:	mov    r9,rbx
  420b03:	lea    r8,[rip+0x1b15a]        # 0x43bc64
  420b0a:	jmp    0x420ac2
  420b0c:	mov    r12,QWORD PTR [rbx+0x20]
  420b10:	mov    edx,DWORD PTR [r12+0x8c]
  420b18:	jmp    0x4203e6
  420b1d:	lea    rax,[rip+0x1a387]        # 0x43aeab
  420b24:	lea    r9,[rip+0x1aeb6]        # 0x43b9e1
  420b2b:	lea    r8,[rip+0x1a35b]        # 0x43ae8d
  420b32:	xor    edx,edx
  420b34:	xor    ecx,ecx
  420b36:	mov    DWORD PTR [rsp+0x28],0xf5a
  420b3e:	mov    QWORD PTR [rsp+0x20],rax
  420b43:	call   0x4226c0
  420b48:	call   0x42fbf8
  420b4d:	nop
  420b4e:	xchg   ax,ax
  420b50:	lea    r9,[rip+0x1937c]        # 0x439ed3
  420b57:	lea    r8,[rip+0x19376]        # 0x439ed4
  420b5e:	mov    edx,0xfffffff8
  420b63:	xor    ecx,ecx
  420b65:	jmp    0x4226c0
  420b6a:	nop    WORD PTR [rax+rax*1+0x0]
  420b70:	sub    rsp,0x28
  420b74:	lea    rdx,[rip+0xffffffffffff42d5]        # 0x414e50
  420b7b:	mov    ecx,0x2
  420b80:	call   0x42fb08
  420b85:	lea    rdx,[rip+0xffffffffffff42c4]        # 0x414e50
  420b8c:	mov    ecx,0xf
  420b91:	call   0x42fb08
  420b96:	mov    rax,QWORD PTR [rip+0x24333]        # 0x444ed0
  420b9d:	lea    rcx,[rip+0xffffffffffff5dbc]        # 0x416960
  420ba4:	mov    edx,0x1
  420ba9:	add    rsp,0x28
  420bad:	rex.W jmp rax
  420bb0:	push   rdi
  420bb1:	push   rsi
  420bb2:	push   rbx
  420bb3:	sub    rsp,0x20
  420bb7:	xor    ebx,ebx
  420bb9:	mov    rdi,rcx
  420bbc:	mov    rsi,rdx
  420bbf:	jmp    0x420bd5
  420bc1:	mov    rdx,QWORD PTR [rbx]
  420bc4:	mov    r9d,0x1
  420bca:	xor    r8d,r8d
  420bcd:	mov    rcx,rdi
  420bd0:	call   0x422808
  420bd5:	lea    rdx,[rip+0x192f7]        # 0x439ed3
  420bdc:	mov    r8,rbx
  420bdf:	mov    r9d,0x2
  420be5:	mov    rcx,rsi
  420be8:	call   0x422818
  420bed:	test   rax,rax
  420bf0:	mov    rbx,rax
  420bf3:	jne    0x420bc1
  420bf5:	add    rsp,0x20
  420bf9:	pop    rbx
  420bfa:	pop    rsi
  420bfb:	pop    rdi
  420bfc:	ret    
  420bfd:	nop    DWORD PTR [rax]
  420c00:	sub    rsp,0x28
  420c04:	lea    rdx,[rip+0x192c8]        # 0x439ed3
  420c0b:	xor    r8d,r8d
  420c0e:	mov    r9d,0x2
  420c14:	call   0x422818
  420c19:	test   rax,rax
  420c1c:	jne    0x420c23
  420c1e:	add    rsp,0x28
  420c22:	ret    
  420c23:	mov    r9,QWORD PTR [rax]
  420c26:	lea    r8,[rip+0x1a8b5]        # 0x43b4e2
  420c2d:	xor    ecx,ecx
  420c2f:	mov    edx,0x8
  420c34:	call   0x4226c0
  420c39:	mov    ecx,0x1
  420c3e:	call   0x401cb0
  420c43:	nop
  420c44:	xchg   ax,ax
  420c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c50:	push   rbp
  420c51:	push   rdi
  420c52:	push   rsi
  420c53:	push   rbx
  420c54:	sub    rsp,0x138
  420c5b:	mov    rsi,QWORD PTR [rcx+0x20]
  420c5f:	mov    edi,0x1
  420c64:	cmp    QWORD PTR [rsi+0x1f0],0x0
  420c6c:	jne    0x420c7e
  420c6e:	mov    eax,DWORD PTR [rsi+0x1d4]
  420c74:	cmp    eax,DWORD PTR [rcx+0x9c]
  420c7a:	jle    0x420c90
  420c7c:	xor    edi,edi
  420c7e:	mov    eax,edi
  420c80:	add    rsp,0x138
  420c87:	pop    rbx
  420c88:	pop    rsi
  420c89:	pop    rdi
  420c8a:	pop    rbp
  420c8b:	ret    
  420c8c:	nop    DWORD PTR [rax+0x0]
  420c90:	mov    rbx,rcx
  420c93:	mov    ecx,eax
  420c95:	call   0x422728
  420c9a:	test   rax,rax
  420c9d:	mov    QWORD PTR [rsi+0x1f0],rax
  420ca4:	je     0x420c7c
  420ca6:	lea    rbp,[rsp+0x30]
  420cab:	mov    r8d,DWORD PTR [rsi+0x1d4]
  420cb2:	mov    r9,rax
  420cb5:	mov    edx,0x100
  420cba:	mov    rcx,rbp
  420cbd:	call   0x422740
  420cc2:	mov    QWORD PTR [rsp+0x28],rbp
  420cc7:	mov    rax,QWORD PTR [rbx+0x8]
  420ccb:	lea    r8,[rip+0x19d7e]        # 0x43aa50
  420cd2:	mov    edx,0x18
  420cd7:	xor    ecx,ecx
  420cd9:	mov    eax,DWORD PTR [rax]
  420cdb:	mov    DWORD PTR [rsp+0x20],eax
  420cdf:	mov    r9d,DWORD PTR [rbx]
  420ce2:	call   0x4226c0
  420ce7:	jmp    0x420c7e
  420ce9:	nop
  420cea:	nop
  420ceb:	nop
  420cec:	nop
  420ced:	nop
  420cee:	nop
  420cef:	nop
  420cf0:	push   rdi
  420cf1:	push   rsi
  420cf2:	push   rbx
  420cf3:	sub    rsp,0x70
  420cf7:	mov    rsi,QWORD PTR [rdx+0x18]
  420cfb:	mov    rax,QWORD PTR [rcx+0x58]
  420cff:	mov    rbx,rdx
  420d02:	lea    rdx,[rsp+0x50]
  420d07:	mov    rdi,QWORD PTR [rax+0x148]
  420d0e:	mov    rax,QWORD PTR [rsi]
  420d11:	mov    rcx,rsi
  420d14:	call   QWORD PTR [rax+0x60]
  420d17:	mov    eax,DWORD PTR [rbx+0x68]
  420d1a:	mov    rcx,QWORD PTR [rdi+0xd8]
  420d21:	mov    edx,0x20
  420d26:	mov    DWORD PTR [rcx+0x68],eax
  420d29:	mov    eax,DWORD PTR [rbx+0x6c]
  420d2c:	mov    DWORD PTR [rcx+0x74],0x19
  420d33:	mov    DWORD PTR [rcx+0x6c],eax
  420d36:	call   0x4227a0
  420d3b:	test   eax,eax
  420d3d:	js     0x420e01
  420d43:	mov    rax,QWORD PTR [rsi]
  420d46:	xor    r8d,r8d
  420d49:	lea    rdx,[rsp+0x40]
  420d4e:	mov    r9d,0x10
  420d54:	mov    rcx,rsi
  420d57:	call   QWORD PTR [rax+0x68]
  420d5a:	test   eax,eax
  420d5c:	js     0x420e2c
  420d62:	mov    rax,QWORD PTR [rdi+0xd8]
  420d69:	mov    ecx,DWORD PTR [rbx+0x6c]
  420d6c:	mov    r9d,DWORD PTR [rsp+0x40]
  420d71:	mov    r8,QWORD PTR [rsp+0x48]
  420d76:	mov    edx,DWORD PTR [rax+0x40]
  420d79:	mov    DWORD PTR [rsp+0x28],ecx
  420d7d:	mov    ecx,DWORD PTR [rbx+0x68]
  420d80:	mov    DWORD PTR [rsp+0x20],ecx
  420d84:	mov    rcx,QWORD PTR [rax]
  420d87:	call   0x4226c8
  420d8c:	mov    rax,QWORD PTR [rdi+0xd8]
  420d93:	mov    r9d,DWORD PTR [rsp+0x40]
  420d98:	mov    edx,DWORD PTR [rax+0x44]
  420d9b:	mov    rcx,QWORD PTR [rax+0x8]
  420d9f:	mov    r8d,r9d
  420da2:	mov    eax,DWORD PTR [rbx+0x6c]
  420da5:	imul   r8d,DWORD PTR [rsp+0x6c]
  420dab:	mov    r10d,eax
  420dae:	shr    r10d,0x1f
  420db2:	add    r8,QWORD PTR [rsp+0x48]
  420db7:	add    eax,r10d
  420dba:	sar    eax,1
  420dbc:	mov    DWORD PTR [rsp+0x28],eax
  420dc0:	mov    eax,DWORD PTR [rbx+0x68]
  420dc3:	mov    DWORD PTR [rsp+0x20],eax
  420dc7:	call   0x4226c8
  420dcc:	mov    rax,QWORD PTR [rsi]
  420dcf:	mov    rcx,rsi
  420dd2:	call   QWORD PTR [rax+0x70]
  420dd5:	mov    rcx,QWORD PTR [rdi+0xd8]
  420ddc:	mov    rdx,rbx
  420ddf:	call   0x4227b8
  420de4:	test   eax,eax
  420de6:	js     0x420e10
  420de8:	mov    rcx,rbx
  420deb:	call   0x422778
  420df0:	mov    rdx,QWORD PTR [rdi+0xd8]
  420df7:	mov    rcx,rbx
  420dfa:	call   0x422788
  420dff:	xor    eax,eax
  420e01:	add    rsp,0x70
  420e05:	pop    rbx
  420e06:	pop    rsi
  420e07:	pop    rdi
  420e08:	ret    
  420e09:	nop    DWORD PTR [rax+0x0]
  420e10:	mov    rcx,QWORD PTR [rdi+0xd8]
  420e17:	mov    DWORD PTR [rsp+0x3c],eax
  420e1b:	call   0x422778
  420e20:	mov    eax,DWORD PTR [rsp+0x3c]
  420e24:	add    rsp,0x70
  420e28:	pop    rbx
  420e29:	pop    rsi
  420e2a:	pop    rdi
  420e2b:	ret    
  420e2c:	lea    r8,[rip+0x1b60d]        # 0x43c440
  420e33:	mov    edx,0x10
  420e38:	xor    ecx,ecx
  420e3a:	call   0x4226c0
  420e3f:	mov    eax,0xb1b4b1ab
  420e44:	jmp    0x420e01
  420e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e50:	push   r12
  420e52:	push   rbp
  420e53:	push   rdi
  420e54:	push   rsi
  420e55:	push   rbx
  420e56:	sub    rsp,0x30
  420e5a:	cmp    DWORD PTR [rdx+0x74],0x3d
  420e5e:	mov    rax,QWORD PTR [rcx+0x58]
  420e62:	mov    rsi,rdx
  420e65:	mov    rdi,QWORD PTR [rax+0x148]
  420e6c:	jne    0x420fc2
  420e72:	mov    r10d,DWORD PTR [rdi+0xc8]
  420e79:	test   r10d,r10d
  420e7c:	je     0x420f99
  420e82:	mov    rdx,QWORD PTR [rdi+0xc0]
  420e89:	mov    r8d,0xffffffff
  420e8f:	xor    eax,eax
  420e91:	mov    rcx,rdx
  420e94:	jmp    0x420ec0
  420e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ea0:	movsxd r9,r8d
  420ea3:	shl    r9,0x4
  420ea7:	mov    rbx,QWORD PTR [rdx+r9*1+0x8]
  420eac:	cmp    QWORD PTR [rcx+0x8],rbx
  420eb0:	cmovb  r8d,eax
  420eb4:	add    eax,0x1
  420eb7:	add    rcx,0x10
  420ebb:	cmp    eax,r10d
  420ebe:	je     0x420ee0
  420ec0:	mov    r9d,DWORD PTR [rcx]
  420ec3:	test   r9d,r9d
  420ec6:	jne    0x420eb4
  420ec8:	cmp    r8d,0xffffffff
  420ecc:	jne    0x420ea0
  420ece:	mov    r8d,eax
  420ed1:	add    eax,0x1
  420ed4:	add    rcx,0x10
  420ed8:	cmp    eax,r10d
  420edb:	jne    0x420ec0
  420edd:	nop    DWORD PTR [rax]
  420ee0:	cmp    r8d,0xffffffff
  420ee4:	je     0x420f99
  420eea:	mov    rax,QWORD PTR [rdi+0xb8]
  420ef1:	movsxd rbx,r8d
  420ef4:	mov    ecx,0x18
  420ef9:	mov    r12,QWORD PTR [rax+rbx*8]
  420efd:	call   0x422670
  420f02:	test   rax,rax
  420f05:	mov    rbp,rax
  420f08:	je     0x420f92
  420f0e:	lea    r8,[rip+0xeb]        # 0x421000
  420f15:	xor    edx,edx
  420f17:	mov    DWORD PTR [rsp+0x20],0x1
  420f1f:	mov    r9,rax
  420f22:	mov    rcx,r12
  420f25:	call   0x422850
  420f2a:	test   rax,rax
  420f2d:	mov    QWORD PTR [rsi+0x1d0],rax
  420f34:	je     0x420fb3
  420f36:	mov    rax,QWORD PTR [r12]
  420f3a:	mov    rcx,r12
  420f3d:	mov    QWORD PTR [rbp+0x0],rdi
  420f41:	mov    QWORD PTR [rbp+0x8],r12
  420f45:	shl    rbx,0x4
  420f49:	call   QWORD PTR [rax+0x8]
  420f4c:	mov    rcx,QWORD PTR [rdi+0x38]
  420f50:	mov    rax,QWORD PTR [rcx]
  420f53:	mov    QWORD PTR [rbp+0x10],rcx
  420f57:	call   QWORD PTR [rax+0x8]
  420f5a:	mov    rax,QWORD PTR [rdi+0xd0]
  420f61:	mov    r8,rbx
  420f64:	add    r8,QWORD PTR [rdi+0xc0]
  420f6b:	lea    rdx,[rax+0x1]
  420f6f:	mov    DWORD PTR [r8],0x1
  420f76:	mov    QWORD PTR [rdi+0xd0],rdx
  420f7d:	mov    QWORD PTR [r8+0x8],rax
  420f81:	xor    eax,eax
  420f83:	mov    QWORD PTR [rsi+0x18],r12
  420f87:	add    rsp,0x30
  420f8b:	pop    rbx
  420f8c:	pop    rsi
  420f8d:	pop    rdi
  420f8e:	pop    rbp
  420f8f:	pop    r12
  420f91:	ret    
  420f92:	mov    eax,0xfffffff4
  420f97:	jmp    0x420f87
  420f99:	lea    r8,[rip+0x1b513]        # 0x43c4b3
  420fa0:	mov    edx,0x10
  420fa5:	xor    ecx,ecx
  420fa7:	call   0x4226c0
  420fac:	mov    eax,0xfffffff4
  420fb1:	jmp    0x420f87
  420fb3:	mov    rcx,rbp
  420fb6:	call   0x422770
  420fbb:	mov    eax,0xfffffff4
  420fc0:	jmp    0x420f87
  420fc2:	lea    rax,[rip+0x1b4db]        # 0x43c4a4
  420fc9:	lea    r9,[rip+0x1b490]        # 0x43c460
  420fd0:	lea    r8,[rip+0x1b4af]        # 0x43c486
  420fd7:	xor    edx,edx
  420fd9:	xor    ecx,ecx
  420fdb:	mov    DWORD PTR [rsp+0x28],0xd3
  420fe3:	mov    QWORD PTR [rsp+0x20],rax
  420fe8:	call   0x4226c0
  420fed:	call   0x42fbf8
  420ff2:	nop
  420ff3:	nop    DWORD PTR [rax]
  420ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421000:	push   rbx
  421001:	sub    rsp,0x20
  421005:	mov    rbx,rcx
  421008:	mov    rcx,QWORD PTR [rcx]
  42100b:	mov    r9d,DWORD PTR [rcx+0xc8]
  421012:	test   r9d,r9d
  421015:	je     0x421077
  421017:	mov    r10,QWORD PTR [rcx+0xb8]
  42101e:	mov    r8,QWORD PTR [rbx+0x8]
  421022:	cmp    QWORD PTR [r10],r8
  421025:	je     0x42107d
  421027:	mov    eax,0x1
  42102c:	jmp    0x42103e
  42102e:	xchg   ax,ax
  421030:	lea    rdx,[rax+0x1]
  421034:	cmp    QWORD PTR [r10+rdx*8-0x8],r8
  421039:	je     0x421063
  42103b:	mov    rax,rdx
  42103e:	cmp    r9d,eax
  421041:	ja     0x421030
  421043:	mov    rax,QWORD PTR [r8]
  421046:	mov    rcx,r8
  421049:	call   QWORD PTR [rax+0x10]
  42104c:	mov    rcx,QWORD PTR [rbx+0x10]
  421050:	mov    rax,QWORD PTR [rcx]
  421053:	call   QWORD PTR [rax+0x10]
  421056:	mov    rcx,rbx
  421059:	add    rsp,0x20
  42105d:	pop    rbx
  42105e:	jmp    0x422770
  421063:	shl    rax,0x4
  421067:	mov    rdx,QWORD PTR [rcx+0xc0]
  42106e:	mov    DWORD PTR [rdx+rax*1],0x0
  421075:	jmp    0x421043
  421077:	mov    r8,QWORD PTR [rbx+0x8]
  42107b:	jmp    0x421043
  42107d:	xor    eax,eax
  42107f:	jmp    0x421067
  421081:	nop    DWORD PTR [rax+rax*1+0x0]
  421086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421090:	push   r15
  421092:	push   r14
  421094:	push   r13
  421096:	push   r12
  421098:	push   rbp
  421099:	push   rdi
  42109a:	push   rsi
  42109b:	push   rbx
  42109c:	sub    rsp,0x1c8
  4210a3:	mov    rax,QWORD PTR [rcx+0x58]
  4210a7:	mov    edx,0x10
  4210ac:	mov    rbp,rcx
  4210af:	mov    ecx,0x28
  4210b4:	mov    QWORD PTR [rsp+0x90],0x0
  4210c0:	mov    QWORD PTR [rsp+0xa0],0x0
  4210cc:	mov    QWORD PTR [rsp+0xa8],0x0
  4210d8:	lea    r8,[rsp+0x90]
  4210e0:	cmp    DWORD PTR [rax+0x130],0x1
  4210e7:	mov    r12,QWORD PTR [rax+0x148]
  4210ee:	mov    rax,QWORD PTR [rbp+0x320]
  4210f5:	mov    DWORD PTR [rsp+0x88],0x0
  421100:	mov    QWORD PTR [rsp+0xb0],0x0
  42110c:	mov    QWORD PTR [rsp+0xb8],0x0
  421118:	mov    QWORD PTR [rsp+0xc0],0x0
  421124:	mov    QWORD PTR [rsp+0xc8],0x0
  421130:	cmove  edx,ecx
  421133:	mov    rcx,QWORD PTR [r12+0x30]
  421138:	mov    QWORD PTR [rsp+0x68],rax
  42113d:	mov    DWORD PTR [rsp+0x78],edx
  421141:	mov    QWORD PTR [rsp+0xd0],0x0
  42114d:	lea    rdx,[rsp+0x88]
  421155:	mov    rax,QWORD PTR [rcx]
  421158:	call   QWORD PTR [rax+0x20]
  42115b:	test   eax,eax
  42115d:	js     0x4219a9
  421163:	lea    rax,[rsp+0x150]
  42116b:	mov    r13,QWORD PTR [rsp+0x90]
  421173:	lea    rsi,[rip+0x1b70e]        # 0x43c888
  42117a:	lea    rbx,[rip+0x1c83f]        # 0x43d9c0
  421181:	mov    QWORD PTR [rsp+0x58],rax
  421186:	lea    rax,[rsp+0xe0]
  42118e:	mov    QWORD PTR [rsp+0x60],rax
  421193:	jmp    0x4211a6
  421195:	add    rsi,0x10
  421199:	mov    rbx,QWORD PTR [rsi-0x8]
  42119d:	test   rbx,rbx
  4211a0:	je     0x421281
  4211a6:	mov    eax,DWORD PTR [rbp+0x38]
  4211a9:	cmp    DWORD PTR [rsi],eax
  4211ab:	mov    QWORD PTR [rsp+0x150],0x0
  4211b7:	mov    DWORD PTR [rsp+0xe0],0x0
  4211c2:	jne    0x421195
  4211c4:	mov    edi,DWORD PTR [rsp+0x88]
  4211cb:	test   edi,edi
  4211cd:	je     0x421195
  4211cf:	mov    r15,r13
  4211d2:	xor    r14d,r14d
  4211d5:	jmp    0x4211ed
  4211d7:	nop    WORD PTR [rax+rax*1+0x0]
  4211e0:	add    r14d,0x1
  4211e4:	add    r15,0x10
  4211e8:	cmp    r14d,edi
  4211eb:	je     0x421195
  4211ed:	mov    r8d,0x10
  4211f3:	mov    rdx,r15
  4211f6:	mov    rcx,rbx
  4211f9:	call   0x42fb48
  4211fe:	test   eax,eax
  421200:	jne    0x4211e0
  421202:	cmp    r14d,edi
  421205:	je     0x421195
  421207:	mov    rcx,QWORD PTR [r12+0x30]
  42120c:	mov    r9,QWORD PTR [rsp+0x58]
  421211:	mov    rdx,rbx
  421214:	mov    r8,QWORD PTR [rsp+0x60]
  421219:	mov    rax,QWORD PTR [rcx]
  42121c:	call   QWORD PTR [rax+0x28]
  42121f:	test   eax,eax
  421221:	js     0x421268
  421223:	mov    edx,DWORD PTR [rsp+0xe0]
  42122a:	mov    rcx,QWORD PTR [rsp+0x150]
  421232:	test   edx,edx
  421234:	je     0x421262
  421236:	cmp    DWORD PTR [rcx],0x3231564e
  42123c:	je     0x421290
  42123e:	sub    edx,0x1
  421241:	lea    rax,[rcx+0x4]
  421245:	lea    rdx,[rcx+rdx*4+0x4]
  42124a:	jmp    0x42125d
  42124c:	nop    DWORD PTR [rax+0x0]
  421250:	add    rax,0x4
  421254:	cmp    DWORD PTR [rax-0x4],0x3231564e
  42125b:	je     0x421290
  42125d:	cmp    rax,rdx
  421260:	jne    0x421250
  421262:	call   QWORD PTR [rip+0x23f18]        # 0x445180
  421268:	add    rsi,0x10
  42126c:	mov    rbx,QWORD PTR [rsi-0x8]
  421270:	mov    r13,QWORD PTR [rsp+0x90]
  421278:	test   rbx,rbx
  42127b:	jne    0x4211a6
  421281:	xor    r14d,r14d
  421284:	jmp    0x4212bb
  421286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421290:	call   QWORD PTR [rip+0x23eea]        # 0x445180
  421296:	mov    rax,QWORD PTR [rbx]
  421299:	mov    rdx,QWORD PTR [rbx+0x8]
  42129d:	mov    r14d,0x3231564e
  4212a3:	mov    r13,QWORD PTR [rsp+0x90]
  4212ab:	mov    QWORD PTR [rsp+0xa0],rax
  4212b3:	mov    QWORD PTR [rsp+0xa8],rdx
  4212bb:	mov    rcx,r13
  4212be:	call   QWORD PTR [rip+0x23ebc]        # 0x445180
  4212c4:	lea    rax,[rsp+0xa0]
  4212cc:	lea    rdx,[rip+0x1c74d]        # 0x43da20
  4212d3:	mov    r8d,0x10
  4212d9:	mov    rcx,rax
  4212dc:	mov    QWORD PTR [rsp+0x58],rax
  4212e1:	call   0x42fb48
  4212e6:	test   eax,eax
  4212e8:	je     0x421945
  4212ee:	mov    eax,DWORD PTR [rbp+0x9c]
  4212f4:	mov    ecx,0x28
  4212f9:	mov    edx,0x10
  4212fe:	lea    rdi,[rsp+0x150]
  421306:	mov    QWORD PTR [rsp+0x98],0x0
  421312:	mov    DWORD PTR [rsp+0xbc],r14d
  42131a:	mov    DWORD PTR [rsp+0x8c],0x0
  421325:	mov    DWORD PTR [rsp+0xb0],eax
  42132c:	mov    eax,DWORD PTR [rbp+0xa0]
  421332:	mov    DWORD PTR [rsp+0xb4],eax
  421339:	mov    rax,QWORD PTR [rbp+0x58]
  42133d:	cmp    DWORD PTR [rax+0x130],0x1
  421344:	cmove  edx,ecx
  421347:	mov    ecx,0xc
  42134c:	xor    r9d,r9d
  42134f:	mov    DWORD PTR [rsp+0x7c],edx
  421353:	mov    rdx,QWORD PTR [rax+0x148]
  42135a:	xor    eax,eax
  42135c:	rep stos QWORD PTR es:[rdi],rax
  42135f:	lea    rax,[rsp+0xb0]
  421367:	mov    r8,rax
  42136a:	mov    QWORD PTR [rsp+0x60],rax
  42136f:	mov    DWORD PTR [rdi],0x0
  421375:	mov    rcx,QWORD PTR [rdx+0x30]
  421379:	lea    rdx,[rsp+0x98]
  421381:	mov    rax,QWORD PTR [rcx]
  421384:	mov    QWORD PTR [rsp+0x28],rdx
  421389:	lea    rdx,[rsp+0x8c]
  421391:	mov    QWORD PTR [rsp+0x20],rdx
  421396:	mov    rdx,QWORD PTR [rsp+0x58]
  42139b:	call   QWORD PTR [rax+0x30]
  42139e:	test   eax,eax
  4213a0:	js     0x421992
  4213a6:	mov    eax,DWORD PTR [rsp+0x8c]
  4213ad:	test   eax,eax
  4213af:	je     0x421883
  4213b5:	sub    eax,0x1
  4213b8:	mov    rdi,QWORD PTR [rsp+0x98]
  4213c0:	xor    esi,esi
  4213c2:	lea    rax,[rax+rax*4+0x5]
  4213c7:	lea    rax,[rax+rax*4]
  4213cb:	mov    QWORD PTR [rsp+0x70],rdi
  4213d0:	mov    rbx,rdi
  4213d3:	lea    rdi,[rdi+rax*4]
  4213d7:	jmp    0x421404
  4213d9:	nop    DWORD PTR [rax+0x0]
  4213e0:	cmp    eax,0x2
  4213e3:	jne    0x4213f7
  4213e5:	cmp    DWORD PTR [rbp+0x38],0x1c
  4213e9:	mov    r13d,0x12
  4213ef:	mov    r15d,0x2
  4213f5:	je     0x421418
  4213f7:	add    rbx,0x64
  4213fb:	cmp    rbx,rdi
  4213fe:	je     0x4214e1
  421404:	mov    eax,DWORD PTR [rbx+0x30]
  421407:	cmp    eax,0x1
  42140a:	jne    0x4213e0
  42140c:	mov    r13d,0x11
  421412:	mov    r15d,0x1
  421418:	lea    rdx,[rip+0x1c5e1]        # 0x43da00
  42141f:	mov    r8d,0x10
  421425:	mov    rcx,rbx
  421428:	call   0x42fb48
  42142d:	test   eax,eax
  42142f:	cmovne r13d,r15d
  421433:	cmp    r13d,esi
  421436:	jbe    0x4213f7
  421438:	mov    rax,QWORD PTR [rbx]
  42143b:	add    rbx,0x64
  42143f:	mov    esi,r13d
  421442:	mov    QWORD PTR [rsp+0x150],rax
  42144a:	mov    rax,QWORD PTR [rbx-0x5c]
  42144e:	mov    QWORD PTR [rsp+0x158],rax
  421456:	mov    rax,QWORD PTR [rbx-0x54]
  42145a:	mov    QWORD PTR [rsp+0x160],rax
  421462:	mov    rax,QWORD PTR [rbx-0x4c]
  421466:	mov    QWORD PTR [rsp+0x168],rax
  42146e:	mov    rax,QWORD PTR [rbx-0x44]
  421472:	mov    QWORD PTR [rsp+0x170],rax
  42147a:	mov    rax,QWORD PTR [rbx-0x3c]
  42147e:	mov    QWORD PTR [rsp+0x178],rax
  421486:	mov    rax,QWORD PTR [rbx-0x34]
  42148a:	mov    QWORD PTR [rsp+0x180],rax
  421492:	mov    rax,QWORD PTR [rbx-0x2c]
  421496:	mov    QWORD PTR [rsp+0x188],rax
  42149e:	mov    rax,QWORD PTR [rbx-0x24]
  4214a2:	mov    QWORD PTR [rsp+0x190],rax
  4214aa:	mov    rax,QWORD PTR [rbx-0x1c]
  4214ae:	mov    QWORD PTR [rsp+0x198],rax
  4214b6:	mov    rax,QWORD PTR [rbx-0x14]
  4214ba:	mov    QWORD PTR [rsp+0x1a0],rax
  4214c2:	mov    rax,QWORD PTR [rbx-0xc]
  4214c6:	mov    QWORD PTR [rsp+0x1a8],rax
  4214ce:	mov    eax,DWORD PTR [rbx-0x4]
  4214d1:	cmp    rbx,rdi
  4214d4:	mov    DWORD PTR [rsp+0x1b0],eax
  4214db:	jne    0x421404
  4214e1:	mov    rcx,QWORD PTR [rsp+0x70]
  4214e6:	call   QWORD PTR [rip+0x23c94]        # 0x445180
  4214ec:	test   esi,esi
  4214ee:	je     0x421891
  4214f4:	mov    rax,QWORD PTR [rsp+0x150]
  4214fc:	mov    QWORD PTR [rsp+0xe0],rax
  421504:	mov    rax,QWORD PTR [rsp+0x158]
  42150c:	mov    QWORD PTR [rsp+0xe8],rax
  421514:	mov    rax,QWORD PTR [rsp+0x160]
  42151c:	mov    QWORD PTR [rsp+0xf0],rax
  421524:	mov    rax,QWORD PTR [rsp+0x168]
  42152c:	mov    QWORD PTR [rsp+0xf8],rax
  421534:	mov    rax,QWORD PTR [rsp+0x170]
  42153c:	mov    QWORD PTR [rsp+0x100],rax
  421544:	mov    rax,QWORD PTR [rsp+0x178]
  42154c:	mov    QWORD PTR [rsp+0x108],rax
  421554:	mov    rax,QWORD PTR [rsp+0x180]
  42155c:	mov    QWORD PTR [rsp+0x110],rax
  421564:	mov    rax,QWORD PTR [rsp+0x188]
  42156c:	mov    QWORD PTR [rsp+0x118],rax
  421574:	mov    rax,QWORD PTR [rsp+0x190]
  42157c:	mov    QWORD PTR [rsp+0x120],rax
  421584:	mov    rax,QWORD PTR [rsp+0x198]
  42158c:	mov    QWORD PTR [rsp+0x128],rax
  421594:	mov    rax,QWORD PTR [rsp+0x1a0]
  42159c:	mov    QWORD PTR [rsp+0x130],rax
  4215a4:	mov    rax,QWORD PTR [rsp+0x1a8]
  4215ac:	mov    QWORD PTR [rsp+0x138],rax
  4215b4:	mov    eax,DWORD PTR [rsp+0x1b0]
  4215bb:	mov    DWORD PTR [rsp+0x140],eax
  4215c2:	mov    eax,DWORD PTR [rbp+0x38]
  4215c5:	cmp    eax,0x2
  4215c8:	je     0x421855
  4215ce:	cmp    eax,0x48323635
  4215d3:	je     0x421879
  4215d9:	cmp    eax,0x1c
  4215dc:	mov    DWORD PTR [r12+0xc8],0x4
  4215e8:	mov    ebx,0x10
  4215ed:	jne    0x42185a
  4215f3:	mov    DWORD PTR [r12+0xc8],0x14
  4215ff:	mov    ecx,0xa0
  421604:	mov    eax,0x14
  421609:	test   BYTE PTR [rbp+0x390],0x1
  421610:	je     0x421628
  421612:	add    eax,DWORD PTR [rbp+0x388]
  421618:	lea    rcx,[rax*8+0x0]
  421620:	mov    DWORD PTR [r12+0xc8],eax
  421628:	call   0x422670
  42162d:	mov    ecx,DWORD PTR [r12+0xc8]
  421635:	mov    QWORD PTR [r12+0xb8],rax
  42163d:	shl    rcx,0x4
  421641:	call   0x422670
  421646:	test   rax,rax
  421649:	mov    QWORD PTR [r12+0xc0],rax
  421651:	mov    r9,QWORD PTR [r12+0xb8]
  421659:	je     0x42195c
  42165f:	test   r9,r9
  421662:	je     0x42195c
  421668:	mov    rcx,QWORD PTR [r12+0x30]
  42166d:	mov    eax,DWORD PTR [rbp+0xa0]
  421673:	mov    r8d,ebx
  421676:	mov    edx,DWORD PTR [rbp+0x9c]
  42167c:	mov    r11d,DWORD PTR [r12+0xc8]
  421684:	neg    r8d
  421687:	mov    r10,QWORD PTR [rcx]
  42168a:	add    eax,ebx
  42168c:	mov    QWORD PTR [rsp+0x40],r9
  421691:	add    edx,ebx
  421693:	sub    eax,0x1
  421696:	mov    QWORD PTR [rsp+0x48],0x0
  42169f:	sub    edx,0x1
  4216a2:	mov    DWORD PTR [rsp+0x38],0x0
  4216aa:	mov    DWORD PTR [rsp+0x30],0x0
  4216b2:	and    edx,r8d
  4216b5:	mov    DWORD PTR [rsp+0x28],0x0
  4216bd:	and    r8d,eax
  4216c0:	mov    DWORD PTR [rsp+0x20],r14d
  4216c5:	lea    r9d,[r11-0x1]
  4216c9:	call   QWORD PTR [r10+0x18]
  4216cd:	test   eax,eax
  4216cf:	js     0x421973
  4216d5:	mov    rcx,QWORD PTR [r12+0x30]
  4216da:	lea    rdx,[r12+0x38]
  4216df:	lea    r9,[rsp+0xe0]
  4216e7:	mov    r8,QWORD PTR [rsp+0x60]
  4216ec:	mov    rax,QWORD PTR [rcx]
  4216ef:	mov    QWORD PTR [rsp+0x30],rdx
  4216f4:	mov    edx,DWORD PTR [r12+0xc8]
  4216fc:	mov    DWORD PTR [rsp+0x28],edx
  421700:	mov    rdx,QWORD PTR [r12+0xb8]
  421708:	mov    QWORD PTR [rsp+0x20],rdx
  42170d:	mov    rdx,QWORD PTR [rsp+0x58]
  421712:	call   QWORD PTR [rax+0x38]
  421715:	test   eax,eax
  421717:	js     0x4219c0
  42171d:	mov    rax,QWORD PTR [rsp+0xa0]
  421725:	mov    rdx,QWORD PTR [rsp+0xa8]
  42172d:	lea    rcx,[r12+0x40]
  421732:	mov    rsi,QWORD PTR [rsp+0x68]
  421737:	mov    r8d,0x10
  42173d:	mov    QWORD PTR [r12+0x48],rdx
  421742:	mov    QWORD PTR [r12+0x40],rax
  421747:	lea    rdx,[rip+0x1c2c2]        # 0x43da10
  42174e:	mov    rax,QWORD PTR [rsp+0xe0]
  421756:	mov    QWORD PTR [r12+0x50],rax
  42175b:	mov    rax,QWORD PTR [rsp+0xe8]
  421763:	mov    QWORD PTR [r12+0x58],rax
  421768:	mov    rax,QWORD PTR [rsp+0xf0]
  421770:	mov    QWORD PTR [r12+0x60],rax
  421775:	mov    rax,QWORD PTR [rsp+0xf8]
  42177d:	mov    QWORD PTR [r12+0x68],rax
  421782:	mov    rax,QWORD PTR [rsp+0x100]
  42178a:	mov    QWORD PTR [r12+0x70],rax
  42178f:	mov    rax,QWORD PTR [rsp+0x108]
  421797:	mov    QWORD PTR [r12+0x78],rax
  42179c:	mov    rax,QWORD PTR [rsp+0x110]
  4217a4:	mov    QWORD PTR [r12+0x80],rax
  4217ac:	mov    rax,QWORD PTR [rsp+0x118]
  4217b4:	mov    QWORD PTR [r12+0x88],rax
  4217bc:	mov    rax,QWORD PTR [rsp+0x120]
  4217c4:	mov    QWORD PTR [r12+0x90],rax
  4217cc:	mov    rax,QWORD PTR [rsp+0x128]
  4217d4:	mov    QWORD PTR [r12+0x98],rax
  4217dc:	mov    rax,QWORD PTR [rsp+0x130]
  4217e4:	mov    QWORD PTR [r12+0xa0],rax
  4217ec:	mov    rax,QWORD PTR [rsp+0x138]
  4217f4:	mov    QWORD PTR [r12+0xa8],rax
  4217fc:	mov    eax,DWORD PTR [rsp+0x140]
  421803:	mov    DWORD PTR [r12+0xb0],eax
  42180b:	lea    rax,[r12+0x50]
  421810:	mov    QWORD PTR [rsi+0x8],rax
  421814:	mov    rax,QWORD PTR [r12+0x38]
  421819:	mov    QWORD PTR [rsi],rax
  42181c:	mov    rax,QWORD PTR [r12+0xb8]
  421824:	mov    QWORD PTR [rsi+0x18],rax
  421828:	mov    eax,DWORD PTR [r12+0xc8]
  421830:	mov    DWORD PTR [rsi+0x10],eax
  421833:	call   0x42fb48
  421838:	test   eax,eax
  42183a:	jne    0x421875
  42183c:	or     QWORD PTR [rsi+0x20],0x2
  421841:	add    rsp,0x1c8
  421848:	pop    rbx
  421849:	pop    rsi
  42184a:	pop    rdi
  42184b:	pop    rbp
  42184c:	pop    r12
  42184e:	pop    r13
  421850:	pop    r14
  421852:	pop    r15
  421854:	ret    
  421855:	mov    ebx,0x20
  42185a:	mov    DWORD PTR [r12+0xc8],0x6
  421866:	mov    ecx,0x30
  42186b:	mov    eax,0x6
  421870:	jmp    0x421609
  421875:	xor    eax,eax
  421877:	jmp    0x421841
  421879:	mov    ebx,0x80
  42187e:	jmp    0x4215f3
  421883:	mov    rcx,QWORD PTR [rsp+0x98]
  42188b:	call   QWORD PTR [rip+0x238ef]        # 0x445180
  421891:	mov    edx,DWORD PTR [rsp+0x7c]
  421895:	lea    r8,[rip+0x1acbc]        # 0x43c558
  42189c:	xor    ecx,ecx
  42189e:	call   0x4226c0
  4218a3:	mov    rax,QWORD PTR [rbp+0x58]
  4218a7:	mov    rdi,QWORD PTR [rax+0x148]
  4218ae:	mov    rax,QWORD PTR [rdi+0xb8]
  4218b5:	test   rax,rax
  4218b8:	je     0x4218f7
  4218ba:	mov    edx,DWORD PTR [rdi+0xc8]
  4218c0:	test   edx,edx
  4218c2:	je     0x4218f7
  4218c4:	xor    esi,esi
  4218c6:	xor    ebx,ebx
  4218c8:	jmp    0x4218d7
  4218ca:	nop    WORD PTR [rax+rax*1+0x0]
  4218d0:	mov    rax,QWORD PTR [rdi+0xb8]
  4218d7:	mov    rcx,QWORD PTR [rax+rsi*1]
  4218db:	test   rcx,rcx
  4218de:	je     0x4218ec
  4218e0:	mov    rax,QWORD PTR [rcx]
  4218e3:	call   QWORD PTR [rax+0x10]
  4218e6:	mov    edx,DWORD PTR [rdi+0xc8]
  4218ec:	add    ebx,0x1
  4218ef:	add    rsi,0x8
  4218f3:	cmp    ebx,edx
  4218f5:	jb     0x4218d0
  4218f7:	lea    rcx,[rdi+0xb8]
  4218fe:	call   0x422768
  421903:	lea    rcx,[rdi+0xc0]
  42190a:	call   0x422768
  42190f:	mov    rcx,QWORD PTR [rdi+0x38]
  421913:	mov    DWORD PTR [rdi+0xc8],0x0
  42191d:	mov    QWORD PTR [rdi+0xd0],0x0
  421928:	test   rcx,rcx
  42192b:	je     0x42193b
  42192d:	mov    rax,QWORD PTR [rcx]
  421930:	call   QWORD PTR [rax+0x10]
  421933:	mov    QWORD PTR [rdi+0x38],0x0
  42193b:	mov    eax,0xffffffea
  421940:	jmp    0x421841
  421945:	mov    edx,DWORD PTR [rsp+0x78]
  421949:	lea    r8,[rip+0x1abb0]        # 0x43c500
  421950:	xor    ecx,ecx
  421952:	call   0x4226c0
  421957:	jmp    0x4218a3
  42195c:	mov    edx,DWORD PTR [rsp+0x78]
  421960:	lea    r8,[rip+0x1ac21]        # 0x43c588
  421967:	xor    ecx,ecx
  421969:	call   0x4226c0
  42196e:	jmp    0x4218a3
  421973:	mov    r9d,DWORD PTR [r12+0xc8]
  42197b:	mov    edx,DWORD PTR [rsp+0x78]
  42197f:	lea    r8,[rip+0x1ac2a]        # 0x43c5b0
  421986:	xor    ecx,ecx
  421988:	call   0x4226c0
  42198d:	jmp    0x4218a3
  421992:	mov    edx,DWORD PTR [rsp+0x7c]
  421996:	lea    r8,[rip+0x1ab8b]        # 0x43c528
  42199d:	xor    ecx,ecx
  42199f:	call   0x4226c0
  4219a4:	jmp    0x4218a3
  4219a9:	mov    edx,DWORD PTR [rsp+0x78]
  4219ad:	lea    r8,[rip+0x1ab1c]        # 0x43c4d0
  4219b4:	xor    ecx,ecx
  4219b6:	call   0x4226c0
  4219bb:	jmp    0x4218a3
  4219c0:	mov    edx,DWORD PTR [rsp+0x78]
  4219c4:	lea    r8,[rip+0x1ac0d]        # 0x43c5d8
  4219cb:	xor    ecx,ecx
  4219cd:	call   0x4226c0
  4219d2:	jmp    0x4218a3
  4219d7:	nop    WORD PTR [rax+rax*1+0x0]
  4219e0:	push   r13
  4219e2:	push   r12
  4219e4:	push   rbp
  4219e5:	push   rdi
  4219e6:	push   rsi
  4219e7:	push   rbx
  4219e8:	sub    rsp,0x28
  4219ec:	mov    r12,QWORD PTR [rcx+0x58]
  4219f0:	mov    r13,rcx
  4219f3:	mov    rbp,QWORD PTR [r12+0x148]
  4219fb:	mov    QWORD PTR [r12+0x150],0x0
  421a07:	mov    QWORD PTR [r12+0x158],0x0
  421a13:	mov    QWORD PTR [r12+0x160],0x0
  421a1f:	cmp    QWORD PTR [rbp+0x38],0x0
  421a24:	je     0x421abb
  421a2a:	mov    rax,QWORD PTR [rcx+0x58]
  421a2e:	mov    rdi,QWORD PTR [rax+0x148]
  421a35:	cmp    QWORD PTR [rdi+0xb8],0x0
  421a3d:	je     0x421a77
  421a3f:	mov    edx,DWORD PTR [rdi+0xc8]
  421a45:	test   edx,edx
  421a47:	je     0x421a77
  421a49:	xor    esi,esi
  421a4b:	xor    ebx,ebx
  421a4d:	nop    DWORD PTR [rax]
  421a50:	mov    rax,QWORD PTR [rdi+0xb8]
  421a57:	mov    rcx,QWORD PTR [rax+rsi*1]
  421a5b:	test   rcx,rcx
  421a5e:	je     0x421a6c
  421a60:	mov    rdx,QWORD PTR [rcx]
  421a63:	call   QWORD PTR [rdx+0x10]
  421a66:	mov    edx,DWORD PTR [rdi+0xc8]
  421a6c:	add    ebx,0x1
  421a6f:	add    rsi,0x8
  421a73:	cmp    ebx,edx
  421a75:	jb     0x421a50
  421a77:	lea    rcx,[rdi+0xb8]
  421a7e:	call   0x422768
  421a83:	lea    rcx,[rdi+0xc0]
  421a8a:	call   0x422768
  421a8f:	mov    rcx,QWORD PTR [rdi+0x38]
  421a93:	mov    DWORD PTR [rdi+0xc8],0x0
  421a9d:	mov    QWORD PTR [rdi+0xd0],0x0
  421aa8:	test   rcx,rcx
  421aab:	je     0x421abb
  421aad:	mov    rax,QWORD PTR [rcx]
  421ab0:	call   QWORD PTR [rax+0x10]
  421ab3:	mov    QWORD PTR [rdi+0x38],0x0
  421abb:	mov    rcx,QWORD PTR [rbp+0x30]
  421abf:	test   rcx,rcx
  421ac2:	je     0x421aca
  421ac4:	mov    rax,QWORD PTR [rcx]
  421ac7:	call   QWORD PTR [rax+0x10]
  421aca:	mov    rcx,QWORD PTR [rbp+0x28]
  421ace:	test   rcx,rcx
  421ad1:	je     0x421af2
  421ad3:	mov    rdx,QWORD PTR [rbp+0x10]
  421ad7:	cmp    rdx,0xffffffffffffffff
  421adb:	je     0x421aec
  421add:	mov    rax,QWORD PTR [rcx]
  421ae0:	call   QWORD PTR [rax+0x28]
  421ae3:	mov    rcx,QWORD PTR [rbp+0x28]
  421ae7:	test   rcx,rcx
  421aea:	je     0x421af2
  421aec:	mov    rax,QWORD PTR [rcx]
  421aef:	call   QWORD PTR [rax+0x10]
  421af2:	mov    rcx,QWORD PTR [rbp+0x20]
  421af6:	test   rcx,rcx
  421af9:	je     0x421b01
  421afb:	mov    rax,QWORD PTR [rcx]
  421afe:	call   QWORD PTR [rax+0x10]
  421b01:	mov    rcx,QWORD PTR [rbp+0x18]
  421b05:	test   rcx,rcx
  421b08:	je     0x421b10
  421b0a:	mov    rax,QWORD PTR [rcx]
  421b0d:	call   QWORD PTR [rax+0x10]
  421b10:	mov    rcx,QWORD PTR [rbp+0x0]
  421b14:	test   rcx,rcx
  421b17:	je     0x421b1f
  421b19:	call   QWORD PTR [rip+0x232d1]        # 0x444df0
  421b1f:	mov    rcx,QWORD PTR [rbp+0x8]
  421b23:	test   rcx,rcx
  421b26:	je     0x421b2e
  421b28:	call   QWORD PTR [rip+0x232c2]        # 0x444df0
  421b2e:	lea    rcx,[rbp+0xd8]
  421b35:	call   0x4227b0
  421b3a:	lea    rcx,[r12+0x148]
  421b42:	call   0x422768
  421b47:	lea    rcx,[r13+0x320]
  421b4e:	add    rsp,0x28
  421b52:	pop    rbx
  421b53:	pop    rsi
  421b54:	pop    rdi
  421b55:	pop    rbp
  421b56:	pop    r12
  421b58:	pop    r13
  421b5a:	jmp    0x422768
  421b5f:	nop
  421b60:	push   r15
  421b62:	push   r14
  421b64:	push   r13
  421b66:	push   r12
  421b68:	push   rbp
  421b69:	push   rdi
  421b6a:	push   rsi
  421b6b:	push   rbx
  421b6c:	sub    rsp,0xb8
  421b73:	mov    rbx,QWORD PTR [rcx+0x58]
  421b77:	mov    rbp,rcx
  421b7a:	cmp    DWORD PTR [rbx+0x130],0x1
  421b81:	je     0x421c73
  421b87:	mov    rax,QWORD PTR [rbx+0x148]
  421b8e:	mov    r12d,0x10
  421b94:	test   rax,rax
  421b97:	je     0x421c89
  421b9d:	cmp    DWORD PTR [rbp+0x38],0x1c
  421ba1:	je     0x421ed2
  421ba7:	cmp    QWORD PTR [rax+0x38],0x0
  421bac:	je     0x421c4b
  421bb2:	mov    rax,QWORD PTR [rbp+0x58]
  421bb6:	mov    rdi,QWORD PTR [rax+0x148]
  421bbd:	mov    rax,QWORD PTR [rdi+0xb8]
  421bc4:	test   rax,rax
  421bc7:	je     0x421c07
  421bc9:	mov    edx,DWORD PTR [rdi+0xc8]
  421bcf:	test   edx,edx
  421bd1:	je     0x421c07
  421bd3:	xor    esi,esi
  421bd5:	xor    ebx,ebx
  421bd7:	jmp    0x421be7
  421bd9:	nop    DWORD PTR [rax+0x0]
  421be0:	mov    rax,QWORD PTR [rdi+0xb8]
  421be7:	mov    rcx,QWORD PTR [rax+rsi*1]
  421beb:	test   rcx,rcx
  421bee:	je     0x421bfc
  421bf0:	mov    rdx,QWORD PTR [rcx]
  421bf3:	call   QWORD PTR [rdx+0x10]
  421bf6:	mov    edx,DWORD PTR [rdi+0xc8]
  421bfc:	add    ebx,0x1
  421bff:	add    rsi,0x8
  421c03:	cmp    ebx,edx
  421c05:	jb     0x421be0
  421c07:	lea    rcx,[rdi+0xb8]
  421c0e:	call   0x422768
  421c13:	lea    rcx,[rdi+0xc0]
  421c1a:	call   0x422768
  421c1f:	mov    rcx,QWORD PTR [rdi+0x38]
  421c23:	mov    DWORD PTR [rdi+0xc8],0x0
  421c2d:	mov    QWORD PTR [rdi+0xd0],0x0
  421c38:	test   rcx,rcx
  421c3b:	je     0x421c4b
  421c3d:	mov    rax,QWORD PTR [rcx]
  421c40:	call   QWORD PTR [rax+0x10]
  421c43:	mov    QWORD PTR [rdi+0x38],0x0
  421c4b:	mov    rcx,rbp
  421c4e:	call   0x421090
  421c53:	xor    edx,edx
  421c55:	test   eax,eax
  421c57:	js     0x421f03
  421c5d:	mov    eax,edx
  421c5f:	add    rsp,0xb8
  421c66:	pop    rbx
  421c67:	pop    rsi
  421c68:	pop    rdi
  421c69:	pop    rbp
  421c6a:	pop    r12
  421c6c:	pop    r13
  421c6e:	pop    r14
  421c70:	pop    r15
  421c72:	ret    
  421c73:	mov    rax,QWORD PTR [rbx+0x148]
  421c7a:	mov    r12d,0x28
  421c80:	test   rax,rax
  421c83:	jne    0x421b9d
  421c89:	lea    r13,[rsp+0x70]
  421c8e:	xor    eax,eax
  421c90:	mov    ecx,0x8
  421c95:	mov    DWORD PTR [rsp+0x5c],0x0
  421c9d:	mov    rdi,r13
  421ca0:	rep stos QWORD PTR es:[rdi],rax
  421ca3:	mov    cl,0xe0
  421ca5:	call   0x422670
  421caa:	test   rax,rax
  421cad:	mov    rsi,rax
  421cb0:	je     0x421f46
  421cb6:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  421cbe:	mov    QWORD PTR [rbx+0x148],rax
  421cc5:	lea    rax,[rip+0xfffffffffffffd14]        # 0x4219e0
  421ccc:	lea    rcx,[rip+0x1a92b]        # 0x43c5fe
  421cd3:	mov    rdi,QWORD PTR [rip+0x231ae]        # 0x444e88
  421cda:	mov    QWORD PTR [rbx+0x150],rax
  421ce1:	lea    rax,[rip+0xfffffffffffff168]        # 0x420e50
  421ce8:	mov    QWORD PTR [rbx+0x158],rax
  421cef:	lea    rax,[rip+0xffffffffffffeffa]        # 0x420cf0
  421cf6:	mov    QWORD PTR [rbx+0x160],rax
  421cfd:	call   rdi
  421cff:	test   rax,rax
  421d02:	mov    QWORD PTR [rsi],rax
  421d05:	je     0x421f9c
  421d0b:	lea    rcx,[rip+0x1a912]        # 0x43c624
  421d12:	call   rdi
  421d14:	test   rax,rax
  421d17:	mov    QWORD PTR [rsi+0x8],rax
  421d1b:	je     0x421f89
  421d21:	lea    rdx,[rip+0x1a924]        # 0x43c64c
  421d28:	mov    rcx,QWORD PTR [rsi]
  421d2b:	mov    rdi,QWORD PTR [rip+0x2310e]        # 0x444e40
  421d32:	call   rdi
  421d34:	test   rax,rax
  421d37:	mov    r15,rax
  421d3a:	je     0x421f76
  421d40:	mov    rcx,QWORD PTR [rsi+0x8]
  421d44:	lea    rdx,[rip+0x1a93d]        # 0x43c688
  421d4b:	call   rdi
  421d4d:	test   rax,rax
  421d50:	mov    r14,rax
  421d53:	je     0x421f63
  421d59:	mov    ecx,0x20
  421d5e:	call   r15
  421d61:	test   rax,rax
  421d64:	mov    r10,rax
  421d67:	mov    QWORD PTR [rsi+0x18],rax
  421d6b:	je     0x421ff1
  421d71:	mov    rcx,QWORD PTR [rbx+0x138]
  421d78:	xor    edi,edi
  421d7a:	test   rcx,rcx
  421d7d:	je     0x421da0
  421d7f:	call   0x42fbf0
  421d84:	lea    r8,[rip+0x1a980]        # 0x43c70b
  421d8b:	mov    r9d,eax
  421d8e:	mov    edx,0x20
  421d93:	xor    ecx,ecx
  421d95:	mov    edi,eax
  421d97:	call   0x4226c0
  421d9c:	mov    r10,QWORD PTR [rsi+0x18]
  421da0:	mov    rax,QWORD PTR [r10]
  421da3:	mov    rcx,r10
  421da6:	lea    r8,[rsp+0x60]
  421dab:	mov    edx,edi
  421dad:	call   QWORD PTR [rax+0x40]
  421db0:	mov    eax,DWORD PTR [rsp+0x6c]
  421db4:	mov    DWORD PTR [rsp+0x98],0x1
  421dbf:	mov    DWORD PTR [rsp+0x70],0x280
  421dc7:	mov    DWORD PTR [rsp+0x74],0x1e0
  421dcf:	mov    DWORD PTR [rsp+0x7c],0x0
  421dd7:	mov    DWORD PTR [rsp+0x88],0x1
  421de2:	mov    DWORD PTR [rsp+0x78],eax
  421de6:	mov    rax,QWORD PTR [rsi+0x18]
  421dea:	mov    DWORD PTR [rsp+0xa4],0x10
  421df5:	mov    rax,QWORD PTR [rax]
  421df8:	mov    r15,QWORD PTR [rax+0x80]
  421dff:	call   QWORD PTR [rip+0x233ab]        # 0x4451b0
  421e05:	mov    r9,rax
  421e08:	lea    rax,[rsi+0x20]
  421e0c:	mov    rcx,QWORD PTR [rsi+0x18]
  421e10:	mov    r8d,0x1
  421e16:	mov    QWORD PTR [rsp+0x28],r13
  421e1b:	mov    DWORD PTR [rsp+0x20],0x26
  421e23:	mov    QWORD PTR [rsp+0x30],rax
  421e28:	mov    edx,edi
  421e2a:	call   r15
  421e2d:	test   eax,eax
  421e2f:	js     0x421fdb
  421e35:	lea    rdx,[rsi+0x28]
  421e39:	lea    rcx,[rsp+0x5c]
  421e3e:	call   r14
  421e41:	test   eax,eax
  421e43:	js     0x421fc5
  421e49:	mov    rcx,QWORD PTR [rsi+0x28]
  421e4d:	mov    rdx,QWORD PTR [rsi+0x20]
  421e51:	mov    r8d,DWORD PTR [rsp+0x5c]
  421e56:	mov    rax,QWORD PTR [rcx]
  421e59:	call   QWORD PTR [rax+0x18]
  421e5c:	test   eax,eax
  421e5e:	js     0x421faf
  421e64:	mov    rcx,QWORD PTR [rsi+0x28]
  421e68:	lea    rdx,[rsi+0x10]
  421e6c:	mov    rax,QWORD PTR [rcx]
  421e6f:	call   QWORD PTR [rax+0x20]
  421e72:	test   eax,eax
  421e74:	js     0x421f23
  421e7a:	mov    rcx,QWORD PTR [rsi+0x28]
  421e7e:	mov    rdx,QWORD PTR [rsi+0x10]
  421e82:	lea    r9,[rsi+0x30]
  421e86:	lea    r8,[rip+0x1bba3]        # 0x43da30
  421e8d:	mov    rax,QWORD PTR [rcx]
  421e90:	call   QWORD PTR [rax+0x48]
  421e93:	test   eax,eax
  421e95:	js     0x421f50
  421e9b:	call   0x4227c0
  421ea0:	test   rax,rax
  421ea3:	mov    QWORD PTR [rsi+0xd8],rax
  421eaa:	je     0x421f34
  421eb0:	mov    ecx,0x30
  421eb5:	call   0x422670
  421eba:	test   rax,rax
  421ebd:	mov    QWORD PTR [rbp+0x320],rax
  421ec4:	je     0x421f34
  421ec6:	mov    rax,QWORD PTR [rbx+0x148]
  421ecd:	jmp    0x421b9d
  421ed2:	mov    r9d,DWORD PTR [rbp+0x3b4]
  421ed9:	mov    edx,r9d
  421edc:	and    dh,0xfd
  421edf:	cmp    edx,0x64
  421ee2:	jle    0x421ba7
  421ee8:	lea    r8,[rip+0x1a911]        # 0x43c800
  421eef:	mov    edx,r12d
  421ef2:	xor    ecx,ecx
  421ef4:	call   0x4226c0
  421ef9:	mov    edx,0xffffffea
  421efe:	jmp    0x421c5d
  421f03:	lea    r8,[rip+0x1a92e]        # 0x43c838
  421f0a:	mov    edx,r12d
  421f0d:	xor    ecx,ecx
  421f0f:	mov    DWORD PTR [rsp+0x4c],eax
  421f13:	call   0x4226c0
  421f18:	mov    eax,DWORD PTR [rsp+0x4c]
  421f1c:	mov    edx,eax
  421f1e:	jmp    0x421c5d
  421f23:	lea    r8,[rip+0x1a888]        # 0x43c7b2
  421f2a:	mov    edx,r12d
  421f2d:	xor    ecx,ecx
  421f2f:	call   0x4226c0
  421f34:	mov    rcx,rbp
  421f37:	call   0x4219e0
  421f3c:	mov    edx,0xffffffea
  421f41:	jmp    0x421c5d
  421f46:	mov    edx,0xfffffff4
  421f4b:	jmp    0x421c5d
  421f50:	lea    r8,[rip+0x1a879]        # 0x43c7d0
  421f57:	mov    edx,r12d
  421f5a:	xor    ecx,ecx
  421f5c:	call   0x4226c0
  421f61:	jmp    0x421f34
  421f63:	lea    r8,[rip+0x1a746]        # 0x43c6b0
  421f6a:	mov    edx,r12d
  421f6d:	xor    ecx,ecx
  421f6f:	call   0x4226c0
  421f74:	jmp    0x421f34
  421f76:	lea    r8,[rip+0x1a6e3]        # 0x43c660
  421f7d:	mov    edx,r12d
  421f80:	xor    ecx,ecx
  421f82:	call   0x4226c0
  421f87:	jmp    0x421f34
  421f89:	lea    r8,[rip+0x1a69e]        # 0x43c62e
  421f90:	mov    edx,r12d
  421f93:	xor    ecx,ecx
  421f95:	call   0x4226c0
  421f9a:	jmp    0x421f34
  421f9c:	lea    r8,[rip+0x1a664]        # 0x43c607
  421fa3:	mov    edx,r12d
  421fa6:	xor    ecx,ecx
  421fa8:	call   0x4226c0
  421fad:	jmp    0x421f34
  421faf:	lea    r8,[rip+0x1a7ca]        # 0x43c780
  421fb6:	mov    edx,r12d
  421fb9:	xor    ecx,ecx
  421fbb:	call   0x4226c0
  421fc0:	jmp    0x421f34
  421fc5:	lea    r8,[rip+0x1a784]        # 0x43c750
  421fcc:	mov    edx,r12d
  421fcf:	xor    ecx,ecx
  421fd1:	call   0x4226c0
  421fd6:	jmp    0x421f34
  421fdb:	lea    r8,[rip+0x1a746]        # 0x43c728
  421fe2:	mov    edx,r12d
  421fe5:	xor    ecx,ecx
  421fe7:	call   0x4226c0
  421fec:	jmp    0x421f34
  421ff1:	lea    r8,[rip+0x1a6f0]        # 0x43c6e8
  421ff8:	mov    edx,r12d
  421ffb:	xor    ecx,ecx
  421ffd:	call   0x4226c0
  422002:	jmp    0x421f34
  422007:	nop
  422008:	nop
  422009:	nop
  42200a:	nop
  42200b:	nop
  42200c:	nop
  42200d:	nop
  42200e:	nop
  42200f:	nop
  422010:	jmp    QWORD PTR [rip+0x2338a]        # 0x4453a0
  422016:	nop
  422017:	nop
  422018:	jmp    QWORD PTR [rip+0x2337a]        # 0x445398
  42201e:	nop
  42201f:	nop
  422020:	jmp    QWORD PTR [rip+0x2336a]        # 0x445390
  422026:	nop
  422027:	nop
  422028:	jmp    QWORD PTR [rip+0x2335a]        # 0x445388
  42202e:	nop
  42202f:	nop
  422030:	jmp    QWORD PTR [rip+0x2334a]        # 0x445380
  422036:	nop
  422037:	nop
  422038:	jmp    QWORD PTR [rip+0x2333a]        # 0x445378
  42203e:	nop
  42203f:	nop
  422040:	jmp    QWORD PTR [rip+0x2332a]        # 0x445370
  422046:	nop
  422047:	nop
  422048:	jmp    QWORD PTR [rip+0x2331a]        # 0x445368
  42204e:	nop
  42204f:	nop
  422050:	jmp    QWORD PTR [rip+0x2330a]        # 0x445360
  422056:	nop
  422057:	nop
  422058:	jmp    QWORD PTR [rip+0x232fa]        # 0x445358
  42205e:	nop
  42205f:	nop
  422060:	jmp    QWORD PTR [rip+0x2342a]        # 0x445490
  422066:	nop
  422067:	nop
  422068:	jmp    QWORD PTR [rip+0x2341a]        # 0x445488
  42206e:	nop
  42206f:	nop
  422070:	jmp    QWORD PTR [rip+0x2340a]        # 0x445480
  422076:	nop
  422077:	nop
  422078:	jmp    QWORD PTR [rip+0x233fa]        # 0x445478
  42207e:	nop
  42207f:	nop
  422080:	jmp    QWORD PTR [rip+0x233ea]        # 0x445470
  422086:	nop
  422087:	nop
  422088:	jmp    QWORD PTR [rip+0x233da]        # 0x445468
  42208e:	nop
  42208f:	nop
  422090:	jmp    QWORD PTR [rip+0x233ca]        # 0x445460
  422096:	nop
  422097:	nop
  422098:	jmp    QWORD PTR [rip+0x233ba]        # 0x445458
  42209e:	nop
  42209f:	nop
  4220a0:	jmp    QWORD PTR [rip+0x233aa]        # 0x445450
  4220a6:	nop
  4220a7:	nop
  4220a8:	jmp    QWORD PTR [rip+0x2339a]        # 0x445448
  4220ae:	nop
  4220af:	nop
  4220b0:	jmp    QWORD PTR [rip+0x2338a]        # 0x445440
  4220b6:	nop
  4220b7:	nop
  4220b8:	jmp    QWORD PTR [rip+0x2337a]        # 0x445438
  4220be:	nop
  4220bf:	nop
  4220c0:	jmp    QWORD PTR [rip+0x2336a]        # 0x445430
  4220c6:	nop
  4220c7:	nop
  4220c8:	jmp    QWORD PTR [rip+0x2335a]        # 0x445428
  4220ce:	nop
  4220cf:	nop
  4220d0:	jmp    QWORD PTR [rip+0x2334a]        # 0x445420
  4220d6:	nop
  4220d7:	nop
  4220d8:	jmp    QWORD PTR [rip+0x2333a]        # 0x445418
  4220de:	nop
  4220df:	nop
  4220e0:	jmp    QWORD PTR [rip+0x2332a]        # 0x445410
  4220e6:	nop
  4220e7:	nop
  4220e8:	jmp    QWORD PTR [rip+0x2331a]        # 0x445408
  4220ee:	nop
  4220ef:	nop
  4220f0:	jmp    QWORD PTR [rip+0x2330a]        # 0x445400
  4220f6:	nop
  4220f7:	nop
  4220f8:	jmp    QWORD PTR [rip+0x232fa]        # 0x4453f8
  4220fe:	nop
  4220ff:	nop
  422100:	jmp    QWORD PTR [rip+0x232ea]        # 0x4453f0
  422106:	nop
  422107:	nop
  422108:	jmp    QWORD PTR [rip+0x232da]        # 0x4453e8
  42210e:	nop
  42210f:	nop
  422110:	jmp    QWORD PTR [rip+0x232ca]        # 0x4453e0
  422116:	nop
  422117:	nop
  422118:	jmp    QWORD PTR [rip+0x232ba]        # 0x4453d8
  42211e:	nop
  42211f:	nop
  422120:	jmp    QWORD PTR [rip+0x232aa]        # 0x4453d0
  422126:	nop
  422127:	nop
  422128:	jmp    QWORD PTR [rip+0x2329a]        # 0x4453c8
  42212e:	nop
  42212f:	nop
  422130:	jmp    QWORD PTR [rip+0x2328a]        # 0x4453c0
  422136:	nop
  422137:	nop
  422138:	jmp    QWORD PTR [rip+0x2327a]        # 0x4453b8
  42213e:	nop
  42213f:	nop
  422140:	jmp    QWORD PTR [rip+0x2326a]        # 0x4453b0
  422146:	nop
  422147:	nop
  422148:	jmp    QWORD PTR [rip+0x23512]        # 0x445660
  42214e:	nop
  42214f:	nop
  422150:	jmp    QWORD PTR [rip+0x23502]        # 0x445658
  422156:	nop
  422157:	nop
  422158:	jmp    QWORD PTR [rip+0x234f2]        # 0x445650
  42215e:	nop
  42215f:	nop
  422160:	jmp    QWORD PTR [rip+0x234e2]        # 0x445648
  422166:	nop
  422167:	nop
  422168:	jmp    QWORD PTR [rip+0x234d2]        # 0x445640
  42216e:	nop
  42216f:	nop
  422170:	jmp    QWORD PTR [rip+0x234c2]        # 0x445638
  422176:	nop
  422177:	nop
  422178:	jmp    QWORD PTR [rip+0x234b2]        # 0x445630
  42217e:	nop
  42217f:	nop
  422180:	jmp    QWORD PTR [rip+0x234a2]        # 0x445628
  422186:	nop
  422187:	nop
  422188:	jmp    QWORD PTR [rip+0x23492]        # 0x445620
  42218e:	nop
  42218f:	nop
  422190:	jmp    QWORD PTR [rip+0x23482]        # 0x445618
  422196:	nop
  422197:	nop
  422198:	jmp    QWORD PTR [rip+0x23472]        # 0x445610
  42219e:	nop
  42219f:	nop
  4221a0:	jmp    QWORD PTR [rip+0x23462]        # 0x445608
  4221a6:	nop
  4221a7:	nop
  4221a8:	jmp    QWORD PTR [rip+0x23452]        # 0x445600
  4221ae:	nop
  4221af:	nop
  4221b0:	jmp    QWORD PTR [rip+0x23442]        # 0x4455f8
  4221b6:	nop
  4221b7:	nop
  4221b8:	jmp    QWORD PTR [rip+0x23432]        # 0x4455f0
  4221be:	nop
  4221bf:	nop
  4221c0:	jmp    QWORD PTR [rip+0x23422]        # 0x4455e8
  4221c6:	nop
  4221c7:	nop
  4221c8:	jmp    QWORD PTR [rip+0x23412]        # 0x4455e0
  4221ce:	nop
  4221cf:	nop
  4221d0:	jmp    QWORD PTR [rip+0x23402]        # 0x4455d8
  4221d6:	nop
  4221d7:	nop
  4221d8:	jmp    QWORD PTR [rip+0x233f2]        # 0x4455d0
  4221de:	nop
  4221df:	nop
  4221e0:	jmp    QWORD PTR [rip+0x233e2]        # 0x4455c8
  4221e6:	nop
  4221e7:	nop
  4221e8:	jmp    QWORD PTR [rip+0x233d2]        # 0x4455c0
  4221ee:	nop
  4221ef:	nop
  4221f0:	jmp    QWORD PTR [rip+0x233c2]        # 0x4455b8
  4221f6:	nop
  4221f7:	nop
  4221f8:	jmp    QWORD PTR [rip+0x233b2]        # 0x4455b0
  4221fe:	nop
  4221ff:	nop
  422200:	jmp    QWORD PTR [rip+0x233a2]        # 0x4455a8
  422206:	nop
  422207:	nop
  422208:	jmp    QWORD PTR [rip+0x23392]        # 0x4455a0
  42220e:	nop
  42220f:	nop
  422210:	jmp    QWORD PTR [rip+0x23382]        # 0x445598
  422216:	nop
  422217:	nop
  422218:	jmp    QWORD PTR [rip+0x23372]        # 0x445590
  42221e:	nop
  42221f:	nop
  422220:	jmp    QWORD PTR [rip+0x23362]        # 0x445588
  422226:	nop
  422227:	nop
  422228:	jmp    QWORD PTR [rip+0x23352]        # 0x445580
  42222e:	nop
  42222f:	nop
  422230:	jmp    QWORD PTR [rip+0x23342]        # 0x445578
  422236:	nop
  422237:	nop
  422238:	jmp    QWORD PTR [rip+0x23332]        # 0x445570
  42223e:	nop
  42223f:	nop
  422240:	jmp    QWORD PTR [rip+0x23322]        # 0x445568
  422246:	nop
  422247:	nop
  422248:	jmp    QWORD PTR [rip+0x23312]        # 0x445560
  42224e:	nop
  42224f:	nop
  422250:	jmp    QWORD PTR [rip+0x23302]        # 0x445558
  422256:	nop
  422257:	nop
  422258:	jmp    QWORD PTR [rip+0x232f2]        # 0x445550
  42225e:	nop
  42225f:	nop
  422260:	jmp    QWORD PTR [rip+0x232e2]        # 0x445548
  422266:	nop
  422267:	nop
  422268:	jmp    QWORD PTR [rip+0x232d2]        # 0x445540
  42226e:	nop
  42226f:	nop
  422270:	jmp    QWORD PTR [rip+0x232c2]        # 0x445538
  422276:	nop
  422277:	nop
  422278:	jmp    QWORD PTR [rip+0x232b2]        # 0x445530
  42227e:	nop
  42227f:	nop
  422280:	jmp    QWORD PTR [rip+0x232a2]        # 0x445528
  422286:	nop
  422287:	nop
  422288:	jmp    QWORD PTR [rip+0x23292]        # 0x445520
  42228e:	nop
  42228f:	nop
  422290:	jmp    QWORD PTR [rip+0x23282]        # 0x445518
  422296:	nop
  422297:	nop
  422298:	jmp    QWORD PTR [rip+0x23272]        # 0x445510
  42229e:	nop
  42229f:	nop
  4222a0:	jmp    QWORD PTR [rip+0x23262]        # 0x445508
  4222a6:	nop
  4222a7:	nop
  4222a8:	jmp    QWORD PTR [rip+0x23252]        # 0x445500
  4222ae:	nop
  4222af:	nop
  4222b0:	jmp    QWORD PTR [rip+0x23242]        # 0x4454f8
  4222b6:	nop
  4222b7:	nop
  4222b8:	jmp    QWORD PTR [rip+0x23232]        # 0x4454f0
  4222be:	nop
  4222bf:	nop
  4222c0:	jmp    QWORD PTR [rip+0x23222]        # 0x4454e8
  4222c6:	nop
  4222c7:	nop
  4222c8:	jmp    QWORD PTR [rip+0x23212]        # 0x4454e0
  4222ce:	nop
  4222cf:	nop
  4222d0:	jmp    QWORD PTR [rip+0x23202]        # 0x4454d8
  4222d6:	nop
  4222d7:	nop
  4222d8:	jmp    QWORD PTR [rip+0x231f2]        # 0x4454d0
  4222de:	nop
  4222df:	nop
  4222e0:	jmp    QWORD PTR [rip+0x231e2]        # 0x4454c8
  4222e6:	nop
  4222e7:	nop
  4222e8:	jmp    QWORD PTR [rip+0x231d2]        # 0x4454c0
  4222ee:	nop
  4222ef:	nop
  4222f0:	jmp    QWORD PTR [rip+0x231c2]        # 0x4454b8
  4222f6:	nop
  4222f7:	nop
  4222f8:	jmp    QWORD PTR [rip+0x231b2]        # 0x4454b0
  4222fe:	nop
  4222ff:	nop
  422300:	jmp    QWORD PTR [rip+0x231a2]        # 0x4454a8
  422306:	nop
  422307:	nop
  422308:	jmp    QWORD PTR [rip+0x23192]        # 0x4454a0
  42230e:	nop
  42230f:	nop
  422310:	jmp    QWORD PTR [rip+0x23032]        # 0x445348
  422316:	nop
  422317:	nop
  422318:	jmp    QWORD PTR [rip+0x23022]        # 0x445340
  42231e:	nop
  42231f:	nop
  422320:	jmp    QWORD PTR [rip+0x23012]        # 0x445338
  422326:	nop
  422327:	nop
  422328:	jmp    QWORD PTR [rip+0x23002]        # 0x445330
  42232e:	nop
  42232f:	nop
  422330:	jmp    QWORD PTR [rip+0x22ff2]        # 0x445328
  422336:	nop
  422337:	nop
  422338:	jmp    QWORD PTR [rip+0x22fe2]        # 0x445320
  42233e:	nop
  42233f:	nop
  422340:	jmp    QWORD PTR [rip+0x22fd2]        # 0x445318
  422346:	nop
  422347:	nop
  422348:	jmp    QWORD PTR [rip+0x22fc2]        # 0x445310
  42234e:	nop
  42234f:	nop
  422350:	jmp    QWORD PTR [rip+0x22fb2]        # 0x445308
  422356:	nop
  422357:	nop
  422358:	jmp    QWORD PTR [rip+0x22fa2]        # 0x445300
  42235e:	nop
  42235f:	nop
  422360:	jmp    QWORD PTR [rip+0x22f92]        # 0x4452f8
  422366:	nop
  422367:	nop
  422368:	jmp    QWORD PTR [rip+0x22f82]        # 0x4452f0
  42236e:	nop
  42236f:	nop
  422370:	jmp    QWORD PTR [rip+0x22f72]        # 0x4452e8
  422376:	nop
  422377:	nop
  422378:	jmp    QWORD PTR [rip+0x22f62]        # 0x4452e0
  42237e:	nop
  42237f:	nop
  422380:	jmp    QWORD PTR [rip+0x22f52]        # 0x4452d8
  422386:	nop
  422387:	nop
  422388:	jmp    QWORD PTR [rip+0x22f42]        # 0x4452d0
  42238e:	nop
  42238f:	nop
  422390:	jmp    QWORD PTR [rip+0x22f32]        # 0x4452c8
  422396:	nop
  422397:	nop
  422398:	jmp    QWORD PTR [rip+0x22f22]        # 0x4452c0
  42239e:	nop
  42239f:	nop
  4223a0:	jmp    QWORD PTR [rip+0x22f12]        # 0x4452b8
  4223a6:	nop
  4223a7:	nop
  4223a8:	jmp    QWORD PTR [rip+0x22f02]        # 0x4452b0
  4223ae:	nop
  4223af:	nop
  4223b0:	jmp    QWORD PTR [rip+0x22ef2]        # 0x4452a8
  4223b6:	nop
  4223b7:	nop
  4223b8:	jmp    QWORD PTR [rip+0x22ee2]        # 0x4452a0
  4223be:	nop
  4223bf:	nop
  4223c0:	jmp    QWORD PTR [rip+0x22ed2]        # 0x445298
  4223c6:	nop
  4223c7:	nop
  4223c8:	jmp    QWORD PTR [rip+0x22ec2]        # 0x445290
  4223ce:	nop
  4223cf:	nop
  4223d0:	jmp    QWORD PTR [rip+0x22eb2]        # 0x445288
  4223d6:	nop
  4223d7:	nop
  4223d8:	jmp    QWORD PTR [rip+0x22ea2]        # 0x445280
  4223de:	nop
  4223df:	nop
  4223e0:	jmp    QWORD PTR [rip+0x22e92]        # 0x445278
  4223e6:	nop
  4223e7:	nop
  4223e8:	jmp    QWORD PTR [rip+0x22e82]        # 0x445270
  4223ee:	nop
  4223ef:	nop
  4223f0:	jmp    QWORD PTR [rip+0x22e72]        # 0x445268
  4223f6:	nop
  4223f7:	nop
  4223f8:	jmp    QWORD PTR [rip+0x22e62]        # 0x445260
  4223fe:	nop
  4223ff:	nop
  422400:	jmp    QWORD PTR [rip+0x22e52]        # 0x445258
  422406:	nop
  422407:	nop
  422408:	jmp    QWORD PTR [rip+0x22e42]        # 0x445250
  42240e:	nop
  42240f:	nop
  422410:	jmp    QWORD PTR [rip+0x22e32]        # 0x445248
  422416:	nop
  422417:	nop
  422418:	jmp    QWORD PTR [rip+0x22e22]        # 0x445240
  42241e:	nop
  42241f:	nop
  422420:	jmp    QWORD PTR [rip+0x22e12]        # 0x445238
  422426:	nop
  422427:	nop
  422428:	jmp    QWORD PTR [rip+0x22e02]        # 0x445230
  42242e:	nop
  42242f:	nop
  422430:	jmp    QWORD PTR [rip+0x22df2]        # 0x445228
  422436:	nop
  422437:	nop
  422438:	jmp    QWORD PTR [rip+0x22de2]        # 0x445220
  42243e:	nop
  42243f:	nop
  422440:	jmp    QWORD PTR [rip+0x22dd2]        # 0x445218
  422446:	nop
  422447:	nop
  422448:	jmp    QWORD PTR [rip+0x22dc2]        # 0x445210
  42244e:	nop
  42244f:	nop
  422450:	jmp    QWORD PTR [rip+0x22db2]        # 0x445208
  422456:	nop
  422457:	nop
  422458:	jmp    QWORD PTR [rip+0x22da2]        # 0x445200
  42245e:	nop
  42245f:	nop
  422460:	jmp    QWORD PTR [rip+0x22d92]        # 0x4451f8
  422466:	nop
  422467:	nop
  422468:	jmp    QWORD PTR [rip+0x22d82]        # 0x4451f0
  42246e:	nop
  42246f:	nop
  422470:	jmp    QWORD PTR [rip+0x22d72]        # 0x4451e8
  422476:	nop
  422477:	nop
  422478:	jmp    QWORD PTR [rip+0x22d62]        # 0x4451e0
  42247e:	nop
  42247f:	nop
  422480:	jmp    QWORD PTR [rip+0x22d52]        # 0x4451d8
  422486:	nop
  422487:	nop
  422488:	jmp    QWORD PTR [rip+0x22d42]        # 0x4451d0
  42248e:	nop
  42248f:	nop
  422490:	jmp    QWORD PTR [rip+0x22d32]        # 0x4451c8
  422496:	nop
  422497:	nop
  422498:	jmp    QWORD PTR [rip+0x22d22]        # 0x4451c0
  42249e:	nop
  42249f:	nop
  4224a0:	jmp    QWORD PTR [rip+0x231da]        # 0x445680
  4224a6:	nop
  4224a7:	nop
  4224a8:	jmp    QWORD PTR [rip+0x231ca]        # 0x445678
  4224ae:	nop
  4224af:	nop
  4224b0:	jmp    QWORD PTR [rip+0x231ba]        # 0x445670
  4224b6:	nop
  4224b7:	nop
  4224b8:	jmp    QWORD PTR [rip+0x23542]        # 0x445a00
  4224be:	nop
  4224bf:	nop
  4224c0:	jmp    QWORD PTR [rip+0x23532]        # 0x4459f8
  4224c6:	nop
  4224c7:	nop
  4224c8:	jmp    QWORD PTR [rip+0x23562]        # 0x445a30
  4224ce:	nop
  4224cf:	nop
  4224d0:	jmp    QWORD PTR [rip+0x23552]        # 0x445a28
  4224d6:	nop
  4224d7:	nop
  4224d8:	jmp    QWORD PTR [rip+0x23542]        # 0x445a20
  4224de:	nop
  4224df:	nop
  4224e0:	jmp    QWORD PTR [rip+0x23532]        # 0x445a18
  4224e6:	nop
  4224e7:	nop
  4224e8:	jmp    QWORD PTR [rip+0x23522]        # 0x445a10
  4224ee:	nop
  4224ef:	nop
  4224f0:	jmp    QWORD PTR [rip+0x2357a]        # 0x445a70
  4224f6:	nop
  4224f7:	nop
  4224f8:	jmp    QWORD PTR [rip+0x2356a]        # 0x445a68
  4224fe:	nop
  4224ff:	nop
  422500:	jmp    QWORD PTR [rip+0x2355a]        # 0x445a60
  422506:	nop
  422507:	nop
  422508:	jmp    QWORD PTR [rip+0x2354a]        # 0x445a58
  42250e:	nop
  42250f:	nop
  422510:	jmp    QWORD PTR [rip+0x2353a]        # 0x445a50
  422516:	nop
  422517:	nop
  422518:	jmp    QWORD PTR [rip+0x2352a]        # 0x445a48
  42251e:	nop
  42251f:	nop
  422520:	jmp    QWORD PTR [rip+0x2351a]        # 0x445a40
  422526:	nop
  422527:	nop
  422528:	jmp    QWORD PTR [rip+0x234ba]        # 0x4459e8
  42252e:	nop
  42252f:	nop
  422530:	jmp    QWORD PTR [rip+0x234aa]        # 0x4459e0
  422536:	nop
  422537:	nop
  422538:	jmp    QWORD PTR [rip+0x2349a]        # 0x4459d8
  42253e:	nop
  42253f:	nop
  422540:	jmp    QWORD PTR [rip+0x2348a]        # 0x4459d0
  422546:	nop
  422547:	nop
  422548:	jmp    QWORD PTR [rip+0x2347a]        # 0x4459c8
  42254e:	nop
  42254f:	nop
  422550:	jmp    QWORD PTR [rip+0x2346a]        # 0x4459c0
  422556:	nop
  422557:	nop
  422558:	jmp    QWORD PTR [rip+0x2345a]        # 0x4459b8
  42255e:	nop
  42255f:	nop
  422560:	jmp    QWORD PTR [rip+0x2344a]        # 0x4459b0
  422566:	nop
  422567:	nop
  422568:	jmp    QWORD PTR [rip+0x2343a]        # 0x4459a8
  42256e:	nop
  42256f:	nop
  422570:	jmp    QWORD PTR [rip+0x2342a]        # 0x4459a0
  422576:	nop
  422577:	nop
  422578:	jmp    QWORD PTR [rip+0x2341a]        # 0x445998
  42257e:	nop
  42257f:	nop
  422580:	jmp    QWORD PTR [rip+0x2340a]        # 0x445990
  422586:	nop
  422587:	nop
  422588:	jmp    QWORD PTR [rip+0x233fa]        # 0x445988
  42258e:	nop
  42258f:	nop
  422590:	jmp    QWORD PTR [rip+0x233ea]        # 0x445980
  422596:	nop
  422597:	nop
  422598:	jmp    QWORD PTR [rip+0x233da]        # 0x445978
  42259e:	nop
  42259f:	nop
  4225a0:	jmp    QWORD PTR [rip+0x233ca]        # 0x445970
  4225a6:	nop
  4225a7:	nop
  4225a8:	jmp    QWORD PTR [rip+0x233ba]        # 0x445968
  4225ae:	nop
  4225af:	nop
  4225b0:	jmp    QWORD PTR [rip+0x233aa]        # 0x445960
  4225b6:	nop
  4225b7:	nop
  4225b8:	jmp    QWORD PTR [rip+0x2339a]        # 0x445958
  4225be:	nop
  4225bf:	nop
  4225c0:	jmp    QWORD PTR [rip+0x2338a]        # 0x445950
  4225c6:	nop
  4225c7:	nop
  4225c8:	jmp    QWORD PTR [rip+0x2337a]        # 0x445948
  4225ce:	nop
  4225cf:	nop
  4225d0:	jmp    QWORD PTR [rip+0x2336a]        # 0x445940
  4225d6:	nop
  4225d7:	nop
  4225d8:	jmp    QWORD PTR [rip+0x2335a]        # 0x445938
  4225de:	nop
  4225df:	nop
  4225e0:	jmp    QWORD PTR [rip+0x2334a]        # 0x445930
  4225e6:	nop
  4225e7:	nop
  4225e8:	jmp    QWORD PTR [rip+0x2333a]        # 0x445928
  4225ee:	nop
  4225ef:	nop
  4225f0:	jmp    QWORD PTR [rip+0x2332a]        # 0x445920
  4225f6:	nop
  4225f7:	nop
  4225f8:	jmp    QWORD PTR [rip+0x2331a]        # 0x445918
  4225fe:	nop
  4225ff:	nop
  422600:	jmp    QWORD PTR [rip+0x2330a]        # 0x445910
  422606:	nop
  422607:	nop
  422608:	jmp    QWORD PTR [rip+0x232fa]        # 0x445908
  42260e:	nop
  42260f:	nop
  422610:	jmp    QWORD PTR [rip+0x232ea]        # 0x445900
  422616:	nop
  422617:	nop
  422618:	jmp    QWORD PTR [rip+0x232da]        # 0x4458f8
  42261e:	nop
  42261f:	nop
  422620:	jmp    QWORD PTR [rip+0x232ca]        # 0x4458f0
  422626:	nop
  422627:	nop
  422628:	jmp    QWORD PTR [rip+0x232ba]        # 0x4458e8
  42262e:	nop
  42262f:	nop
  422630:	jmp    QWORD PTR [rip+0x232aa]        # 0x4458e0
  422636:	nop
  422637:	nop
  422638:	jmp    QWORD PTR [rip+0x2329a]        # 0x4458d8
  42263e:	nop
  42263f:	nop
  422640:	jmp    QWORD PTR [rip+0x2328a]        # 0x4458d0
  422646:	nop
  422647:	nop
  422648:	jmp    QWORD PTR [rip+0x2327a]        # 0x4458c8
  42264e:	nop
  42264f:	nop
  422650:	jmp    QWORD PTR [rip+0x2326a]        # 0x4458c0
  422656:	nop
  422657:	nop
  422658:	jmp    QWORD PTR [rip+0x2325a]        # 0x4458b8
  42265e:	nop
  42265f:	nop
  422660:	jmp    QWORD PTR [rip+0x2324a]        # 0x4458b0
  422666:	nop
  422667:	nop
  422668:	jmp    QWORD PTR [rip+0x2323a]        # 0x4458a8
  42266e:	nop
  42266f:	nop
  422670:	jmp    QWORD PTR [rip+0x2322a]        # 0x4458a0
  422676:	nop
  422677:	nop
  422678:	jmp    QWORD PTR [rip+0x2321a]        # 0x445898
  42267e:	nop
  42267f:	nop
  422680:	jmp    QWORD PTR [rip+0x2320a]        # 0x445890
  422686:	nop
  422687:	nop
  422688:	jmp    QWORD PTR [rip+0x231fa]        # 0x445888
  42268e:	nop
  42268f:	nop
  422690:	jmp    QWORD PTR [rip+0x231ea]        # 0x445880
  422696:	nop
  422697:	nop
  422698:	jmp    QWORD PTR [rip+0x231da]        # 0x445878
  42269e:	nop
  42269f:	nop
  4226a0:	jmp    QWORD PTR [rip+0x231ca]        # 0x445870
  4226a6:	nop
  4226a7:	nop
  4226a8:	jmp    QWORD PTR [rip+0x231ba]        # 0x445868
  4226ae:	nop
  4226af:	nop
  4226b0:	jmp    QWORD PTR [rip+0x231aa]        # 0x445860
  4226b6:	nop
  4226b7:	nop
  4226b8:	jmp    QWORD PTR [rip+0x2319a]        # 0x445858
  4226be:	nop
  4226bf:	nop
  4226c0:	jmp    QWORD PTR [rip+0x2318a]        # 0x445850
  4226c6:	nop
  4226c7:	nop
  4226c8:	jmp    QWORD PTR [rip+0x2317a]        # 0x445848
  4226ce:	nop
  4226cf:	nop
  4226d0:	jmp    QWORD PTR [rip+0x2316a]        # 0x445840
  4226d6:	nop
  4226d7:	nop
  4226d8:	jmp    QWORD PTR [rip+0x2315a]        # 0x445838
  4226de:	nop
  4226df:	nop
  4226e0:	jmp    QWORD PTR [rip+0x2314a]        # 0x445830
  4226e6:	nop
  4226e7:	nop
  4226e8:	jmp    QWORD PTR [rip+0x2313a]        # 0x445828
  4226ee:	nop
  4226ef:	nop
  4226f0:	jmp    QWORD PTR [rip+0x2312a]        # 0x445820
  4226f6:	nop
  4226f7:	nop
  4226f8:	jmp    QWORD PTR [rip+0x2311a]        # 0x445818
  4226fe:	nop
  4226ff:	nop
  422700:	jmp    QWORD PTR [rip+0x2310a]        # 0x445810
  422706:	nop
  422707:	nop
  422708:	jmp    QWORD PTR [rip+0x230fa]        # 0x445808
  42270e:	nop
  42270f:	nop
  422710:	jmp    QWORD PTR [rip+0x230ea]        # 0x445800
  422716:	nop
  422717:	nop
  422718:	jmp    QWORD PTR [rip+0x230da]        # 0x4457f8
  42271e:	nop
  42271f:	nop
  422720:	jmp    QWORD PTR [rip+0x230ca]        # 0x4457f0
  422726:	nop
  422727:	nop
  422728:	jmp    QWORD PTR [rip+0x230ba]        # 0x4457e8
  42272e:	nop
  42272f:	nop
  422730:	jmp    QWORD PTR [rip+0x230aa]        # 0x4457e0
  422736:	nop
  422737:	nop
  422738:	jmp    QWORD PTR [rip+0x2309a]        # 0x4457d8
  42273e:	nop
  42273f:	nop
  422740:	jmp    QWORD PTR [rip+0x2308a]        # 0x4457d0
  422746:	nop
  422747:	nop
  422748:	jmp    QWORD PTR [rip+0x2307a]        # 0x4457c8
  42274e:	nop
  42274f:	nop
  422750:	jmp    QWORD PTR [rip+0x2306a]        # 0x4457c0
  422756:	nop
  422757:	nop
  422758:	jmp    QWORD PTR [rip+0x2305a]        # 0x4457b8
  42275e:	nop
  42275f:	nop
  422760:	jmp    QWORD PTR [rip+0x2304a]        # 0x4457b0
  422766:	nop
  422767:	nop
  422768:	jmp    QWORD PTR [rip+0x2303a]        # 0x4457a8
  42276e:	nop
  42276f:	nop
  422770:	jmp    QWORD PTR [rip+0x2302a]        # 0x4457a0
  422776:	nop
  422777:	nop
  422778:	jmp    QWORD PTR [rip+0x2301a]        # 0x445798
  42277e:	nop
  42277f:	nop
  422780:	jmp    QWORD PTR [rip+0x2300a]        # 0x445790
  422786:	nop
  422787:	nop
  422788:	jmp    QWORD PTR [rip+0x22ffa]        # 0x445788
  42278e:	nop
  42278f:	nop
  422790:	jmp    QWORD PTR [rip+0x22fea]        # 0x445780
  422796:	nop
  422797:	nop
  422798:	jmp    QWORD PTR [rip+0x22fda]        # 0x445778
  42279e:	nop
  42279f:	nop
  4227a0:	jmp    QWORD PTR [rip+0x22fca]        # 0x445770
  4227a6:	nop
  4227a7:	nop
  4227a8:	jmp    QWORD PTR [rip+0x22fba]        # 0x445768
  4227ae:	nop
  4227af:	nop
  4227b0:	jmp    QWORD PTR [rip+0x22faa]        # 0x445760
  4227b6:	nop
  4227b7:	nop
  4227b8:	jmp    QWORD PTR [rip+0x22f9a]        # 0x445758
  4227be:	nop
  4227bf:	nop
  4227c0:	jmp    QWORD PTR [rip+0x22f8a]        # 0x445750
  4227c6:	nop
  4227c7:	nop
  4227c8:	jmp    QWORD PTR [rip+0x22f7a]        # 0x445748
  4227ce:	nop
  4227cf:	nop
  4227d0:	jmp    QWORD PTR [rip+0x22f6a]        # 0x445740
  4227d6:	nop
  4227d7:	nop
  4227d8:	jmp    QWORD PTR [rip+0x22f5a]        # 0x445738
  4227de:	nop
  4227df:	nop
  4227e0:	jmp    QWORD PTR [rip+0x22f4a]        # 0x445730
  4227e6:	nop
  4227e7:	nop
  4227e8:	jmp    QWORD PTR [rip+0x22f3a]        # 0x445728
  4227ee:	nop
  4227ef:	nop
  4227f0:	jmp    QWORD PTR [rip+0x22f2a]        # 0x445720
  4227f6:	nop
  4227f7:	nop
  4227f8:	jmp    QWORD PTR [rip+0x22f1a]        # 0x445718
  4227fe:	nop
  4227ff:	nop
  422800:	jmp    QWORD PTR [rip+0x22f0a]        # 0x445710
  422806:	nop
  422807:	nop
  422808:	jmp    QWORD PTR [rip+0x22efa]        # 0x445708
  42280e:	nop
  42280f:	nop
  422810:	jmp    QWORD PTR [rip+0x22eea]        # 0x445700
  422816:	nop
  422817:	nop
  422818:	jmp    QWORD PTR [rip+0x22eda]        # 0x4456f8
  42281e:	nop
  42281f:	nop
  422820:	jmp    QWORD PTR [rip+0x22eca]        # 0x4456f0
  422826:	nop
  422827:	nop
  422828:	jmp    QWORD PTR [rip+0x22eba]        # 0x4456e8
  42282e:	nop
  42282f:	nop
  422830:	jmp    QWORD PTR [rip+0x22eaa]        # 0x4456e0
  422836:	nop
  422837:	nop
  422838:	jmp    QWORD PTR [rip+0x22e9a]        # 0x4456d8
  42283e:	nop
  42283f:	nop
  422840:	jmp    QWORD PTR [rip+0x22e8a]        # 0x4456d0
  422846:	nop
  422847:	nop
  422848:	jmp    QWORD PTR [rip+0x22e7a]        # 0x4456c8
  42284e:	nop
  42284f:	nop
  422850:	jmp    QWORD PTR [rip+0x22e6a]        # 0x4456c0
  422856:	nop
  422857:	nop
  422858:	jmp    QWORD PTR [rip+0x22e5a]        # 0x4456b8
  42285e:	nop
  42285f:	nop
  422860:	jmp    QWORD PTR [rip+0x22e4a]        # 0x4456b0
  422866:	nop
  422867:	nop
  422868:	jmp    QWORD PTR [rip+0x22e3a]        # 0x4456a8
  42286e:	nop
  42286f:	nop
  422870:	jmp    QWORD PTR [rip+0x22e2a]        # 0x4456a0
  422876:	nop
  422877:	nop
  422878:	jmp    QWORD PTR [rip+0x22e1a]        # 0x445698
  42287e:	nop
  42287f:	nop
  422880:	jmp    QWORD PTR [rip+0x22e0a]        # 0x445690
  422886:	nop
  422887:	nop
  422888:	jmp    QWORD PTR [rip+0x22902]        # 0x445190
  42288e:	nop
  42288f:	nop
  422890:	jmp    QWORD PTR [rip+0x228ea]        # 0x445180
  422896:	nop
  422897:	nop
  422898:	nop    DWORD PTR [rax+rax*1+0x0]
  4228a0:	push   rbx
  4228a1:	sub    rsp,0x30
  4228a5:	mov    rbx,rcx
  4228a8:	mov    rcx,QWORD PTR [rip+0x20e49]        # 0x4436f8
  4228af:	call   0x422e50
  4228b4:	cmp    rax,0xffffffffffffffff
  4228b8:	mov    QWORD PTR [rsp+0x20],rax
  4228bd:	je     0x422935
  4228bf:	mov    ecx,0x8
  4228c4:	call   0x42fc18
  4228c9:	mov    rcx,QWORD PTR [rip+0x20e28]        # 0x4436f8
  4228d0:	call   0x422e50
  4228d5:	mov    rcx,QWORD PTR [rip+0x20e24]        # 0x443700
  4228dc:	mov    QWORD PTR [rsp+0x20],rax
  4228e1:	call   0x422e50
  4228e6:	lea    rdx,[rsp+0x20]
  4228eb:	lea    r8,[rsp+0x28]
  4228f0:	mov    rcx,rbx
  4228f3:	mov    QWORD PTR [rsp+0x28],rax
  4228f8:	call   0x42fc78
  4228fd:	mov    rcx,QWORD PTR [rsp+0x20]
  422902:	mov    rbx,rax
  422905:	call   0x422e60
  42290a:	mov    rcx,QWORD PTR [rsp+0x28]
  42290f:	mov    QWORD PTR [rip+0x20de2],rax        # 0x4436f8
  422916:	call   0x422e60
  42291b:	mov    ecx,0x8
  422920:	mov    QWORD PTR [rip+0x20dd9],rax        # 0x443700
  422927:	call   0x42fc00
  42292c:	mov    rax,rbx
  42292f:	add    rsp,0x30
  422933:	pop    rbx
  422934:	ret    
  422935:	mov    rax,QWORD PTR [rip+0x1ac24]        # 0x43d560
  42293c:	mov    rcx,rbx
  42293f:	call   QWORD PTR [rax]
  422941:	add    rsp,0x30
  422945:	pop    rbx
  422946:	ret    
  422947:	nop    WORD PTR [rax+rax*1+0x0]
  422950:	sub    rsp,0x28
  422954:	call   0x4228a0
  422959:	test   rax,rax
  42295c:	sete   al
  42295f:	movzx  eax,al
  422962:	neg    eax
  422964:	add    rsp,0x28
  422968:	ret    
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	sub    rsp,0x28
  422974:	mov    rax,QWORD PTR [rip+0xe7c5]        # 0x431140
  42297b:	mov    rax,QWORD PTR [rax]
  42297e:	test   rax,rax
  422981:	je     0x4229a0
  422983:	call   rax
  422985:	mov    rax,QWORD PTR [rip+0xe7b4]        # 0x431140
  42298c:	lea    rdx,[rax+0x8]
  422990:	mov    rax,QWORD PTR [rax+0x8]
  422994:	mov    QWORD PTR [rip+0xe7a5],rdx        # 0x431140
  42299b:	test   rax,rax
  42299e:	jne    0x422983
  4229a0:	add    rsp,0x28
  4229a4:	ret    
  4229a5:	nop
  4229a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229b0:	push   rsi
  4229b1:	push   rbx
  4229b2:	sub    rsp,0x28
  4229b6:	mov    rsi,QWORD PTR [rip+0x1aaf3]        # 0x43d4b0
  4229bd:	mov    rax,QWORD PTR [rsi]
  4229c0:	cmp    eax,0xffffffff
  4229c3:	mov    ebx,eax
  4229c5:	je     0x4229f0
  4229c7:	test   ebx,ebx
  4229c9:	je     0x4229da
  4229cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4229d0:	mov    eax,ebx
  4229d2:	call   QWORD PTR [rsi+rax*8]
  4229d5:	sub    ebx,0x1
  4229d8:	jne    0x4229d0
  4229da:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x422970
  4229e1:	add    rsp,0x28
  4229e5:	pop    rbx
  4229e6:	pop    rsi
  4229e7:	jmp    0x422950
  4229ec:	nop    DWORD PTR [rax+0x0]
  4229f0:	xor    ebx,ebx
  4229f2:	jmp    0x4229f6
  4229f4:	mov    ebx,eax
  4229f6:	lea    edx,[rbx+0x1]
  4229f9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4229fe:	mov    rax,rdx
  422a01:	jne    0x4229f4
  422a03:	jmp    0x4229c7
  422a05:	nop
  422a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a10:	mov    eax,DWORD PTR [rip+0x1f86a]        # 0x442280
  422a16:	test   eax,eax
  422a18:	je     0x422a20
  422a1a:	repz ret 
  422a1c:	nop    DWORD PTR [rax+0x0]
  422a20:	mov    DWORD PTR [rip+0x1f856],0x1        # 0x442280
  422a2a:	jmp    0x4229b0
  422a2c:	nop
  422a2d:	nop
  422a2e:	nop
  422a2f:	nop
  422a30:	mov    rax,QWORD PTR [rip+0x22521]        # 0x444f58
  422a37:	rex.W jmp rax
  422a3a:	nop
  422a3b:	nop
  422a3c:	nop
  422a3d:	nop
  422a3e:	nop
  422a3f:	nop
  422a40:	xor    eax,eax
  422a42:	ret    
  422a43:	nop
  422a44:	nop
  422a45:	nop
  422a46:	nop
  422a47:	nop
  422a48:	nop
  422a49:	nop
  422a4a:	nop
  422a4b:	nop
  422a4c:	nop
  422a4d:	nop
  422a4e:	nop
  422a4f:	nop
  422a50:	push   r12
  422a52:	push   rbp
  422a53:	push   rdi
  422a54:	push   rsi
  422a55:	push   rbx
  422a56:	sub    rsp,0x40
  422a5a:	mov    rbx,QWORD PTR [rip+0xe7cf]        # 0x431230
  422a61:	movabs rax,0x2b992ddfa232
  422a6b:	mov    QWORD PTR [rsp+0x20],0x0
  422a74:	cmp    rbx,rax
  422a77:	je     0x422a90
  422a79:	not    rbx
  422a7c:	mov    QWORD PTR [rip+0xe7bd],rbx        # 0x431240
  422a83:	add    rsp,0x40
  422a87:	pop    rbx
  422a88:	pop    rsi
  422a89:	pop    rdi
  422a8a:	pop    rbp
  422a8b:	pop    r12
  422a8d:	ret    
  422a8e:	xchg   ax,ax
  422a90:	lea    rcx,[rsp+0x20]
  422a95:	call   QWORD PTR [rip+0x223c5]        # 0x444e60
  422a9b:	mov    r12,QWORD PTR [rsp+0x20]
  422aa0:	call   QWORD PTR [rip+0x2236a]        # 0x444e10
  422aa6:	mov    ebp,eax
  422aa8:	call   QWORD PTR [rip+0x2236a]        # 0x444e18
  422aae:	mov    edi,eax
  422ab0:	call   QWORD PTR [rip+0x223b2]        # 0x444e68
  422ab6:	lea    rcx,[rsp+0x30]
  422abb:	mov    esi,eax
  422abd:	call   QWORD PTR [rip+0x223e5]        # 0x444ea8
  422ac3:	xor    r12,QWORD PTR [rsp+0x30]
  422ac8:	mov    edx,edi
  422aca:	movabs rax,0xffffffffffff
  422ad4:	xor    rbp,r12
  422ad7:	mov    rdi,rbp
  422ada:	xor    rdi,rdx
  422add:	mov    edx,esi
  422adf:	xor    rdi,rdx
  422ae2:	mov    rsi,rdi
  422ae5:	and    rsi,rax
  422ae8:	cmp    rsi,rbx
  422aeb:	je     0x422b10
  422aed:	mov    rax,rsi
  422af0:	not    rax
  422af3:	mov    QWORD PTR [rip+0xe736],rsi        # 0x431230
  422afa:	mov    QWORD PTR [rip+0xe73f],rax        # 0x431240
  422b01:	add    rsp,0x40
  422b05:	pop    rbx
  422b06:	pop    rsi
  422b07:	pop    rdi
  422b08:	pop    rbp
  422b09:	pop    r12
  422b0b:	ret    
  422b0c:	nop    DWORD PTR [rax+0x0]
  422b10:	movabs rax,0xffffd466d2205dcc
  422b1a:	movabs rsi,0x2b992ddfa233
  422b24:	jmp    0x422af3
  422b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b30:	push   rbp
  422b31:	push   rsi
  422b32:	push   rbx
  422b33:	mov    rbp,rsp
  422b36:	sub    rsp,0x70
  422b3a:	mov    rsi,rcx
  422b3d:	lea    rcx,[rip+0x1f77c]        # 0x4422c0
  422b44:	call   QWORD PTR [rip+0x2236e]        # 0x444eb8
  422b4a:	mov    rbx,QWORD PTR [rip+0x1f867]        # 0x4423b8
  422b51:	xor    r8d,r8d
  422b54:	lea    rdx,[rbp-0x28]
  422b58:	mov    rcx,rbx
  422b5b:	call   QWORD PTR [rip+0x2235f]        # 0x444ec0
  422b61:	test   rax,rax
  422b64:	mov    r9,rax
  422b67:	je     0x422c10
  422b6d:	lea    rax,[rbp-0x20]
  422b71:	mov    QWORD PTR [rsp+0x38],0x0
  422b7a:	mov    r8,rbx
  422b7d:	mov    rdx,QWORD PTR [rbp-0x28]
  422b81:	xor    ecx,ecx
  422b83:	mov    QWORD PTR [rsp+0x30],rax
  422b88:	lea    rax,[rbp-0x18]
  422b8c:	mov    QWORD PTR [rsp+0x28],rax
  422b91:	lea    rax,[rip+0x1f728]        # 0x4422c0
  422b98:	mov    QWORD PTR [rsp+0x20],rax
  422b9d:	call   QWORD PTR [rip+0x22325]        # 0x444ec8
  422ba3:	mov    rax,QWORD PTR [rip+0x1f80e]        # 0x4423b8
  422baa:	xor    ecx,ecx
  422bac:	mov    QWORD PTR [rip+0x1f78d],rsi        # 0x442340
  422bb3:	mov    DWORD PTR [rip+0x1fc03],0xc0000409        # 0x4427c0
  422bbd:	mov    DWORD PTR [rip+0x1fbfd],0x1        # 0x4427c4
  422bc7:	mov    QWORD PTR [rip+0x1fc02],rax        # 0x4427d0
  422bce:	mov    rax,QWORD PTR [rip+0xe65b]        # 0x431230
  422bd5:	mov    QWORD PTR [rbp-0x10],rax
  422bd9:	mov    rax,QWORD PTR [rip+0xe660]        # 0x431240
  422be0:	mov    QWORD PTR [rbp-0x8],rax
  422be4:	call   QWORD PTR [rip+0x222f6]        # 0x444ee0
  422bea:	lea    rcx,[rip+0x19d4f]        # 0x43c940
  422bf1:	call   QWORD PTR [rip+0x22309]        # 0x444f00
  422bf7:	call   QWORD PTR [rip+0x2220b]        # 0x444e08
  422bfd:	mov    edx,0xc0000409
  422c02:	mov    rcx,rax
  422c05:	call   QWORD PTR [rip+0x222e5]        # 0x444ef0
  422c0b:	call   0x42fbf8
  422c10:	mov    rax,QWORD PTR [rbp+0x18]
  422c14:	mov    QWORD PTR [rip+0x1f79d],rax        # 0x4423b8
  422c1b:	lea    rax,[rbp+0x8]
  422c1f:	mov    QWORD PTR [rip+0x1f732],rax        # 0x442358
  422c26:	jmp    0x422ba3
  422c2b:	nop
  422c2c:	nop
  422c2d:	nop
  422c2e:	nop
  422c2f:	nop
  422c30:	sub    rsp,0x28
  422c34:	test   edx,edx
  422c36:	je     0x422c50
  422c38:	cmp    edx,0x3
  422c3b:	je     0x422c50
  422c3d:	mov    eax,0x1
  422c42:	add    rsp,0x28
  422c46:	ret    
  422c47:	nop    WORD PTR [rax+rax*1+0x0]
  422c50:	call   0x423940
  422c55:	mov    eax,0x1
  422c5a:	add    rsp,0x28
  422c5e:	ret    
  422c5f:	nop
  422c60:	push   rsi
  422c61:	push   rbx
  422c62:	sub    rsp,0x28
  422c66:	mov    rax,QWORD PTR [rip+0x1a823]        # 0x43d490
  422c6d:	cmp    DWORD PTR [rax],0x2
  422c70:	je     0x422c78
  422c72:	mov    DWORD PTR [rax],0x2
  422c78:	cmp    edx,0x2
  422c7b:	je     0x422c90
  422c7d:	cmp    edx,0x1
  422c80:	je     0x422cc2
  422c82:	mov    eax,0x1
  422c87:	add    rsp,0x28
  422c8b:	pop    rbx
  422c8c:	pop    rsi
  422c8d:	ret    
  422c8e:	xchg   ax,ax
  422c90:	lea    rbx,[rip+0x263c9]        # 0x449060
  422c97:	lea    rsi,[rip+0x263c2]        # 0x449060
  422c9e:	cmp    rbx,rsi
  422ca1:	je     0x422c82
  422ca3:	mov    rax,QWORD PTR [rbx]
  422ca6:	test   rax,rax
  422ca9:	je     0x422cad
  422cab:	call   rax
  422cad:	add    rbx,0x8
  422cb1:	cmp    rbx,rsi
  422cb4:	jne    0x422ca3
  422cb6:	mov    eax,0x1
  422cbb:	add    rsp,0x28
  422cbf:	pop    rbx
  422cc0:	pop    rsi
  422cc1:	ret    
  422cc2:	call   0x423940
  422cc7:	jmp    0x422c82
  422cc9:	nop    DWORD PTR [rax+0x0]
  422cd0:	xor    eax,eax
  422cd2:	ret    
  422cd3:	nop
  422cd4:	nop
  422cd5:	nop
  422cd6:	nop
  422cd7:	nop
  422cd8:	nop
  422cd9:	nop
  422cda:	nop
  422cdb:	nop
  422cdc:	nop
  422cdd:	nop
  422cde:	nop
  422cdf:	nop
  422ce0:	sub    rsp,0x58
  422ce4:	mov    rax,QWORD PTR [rip+0x1fbb5]        # 0x4428a0
  422ceb:	test   rax,rax
  422cee:	je     0x422d1c
  422cf0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  422cf9:	mov    DWORD PTR [rsp+0x20],ecx
  422cfd:	lea    rcx,[rsp+0x20]
  422d02:	mov    QWORD PTR [rsp+0x28],rdx
  422d07:	movsd  QWORD PTR [rsp+0x30],xmm2
  422d0d:	movsd  QWORD PTR [rsp+0x38],xmm3
  422d13:	movsd  QWORD PTR [rsp+0x40],xmm0
  422d19:	call   rax
  422d1b:	nop
  422d1c:	add    rsp,0x58
  422d20:	ret    
  422d21:	nop    DWORD PTR [rax+rax*1+0x0]
  422d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d30:	mov    QWORD PTR [rip+0x1fb69],rcx        # 0x4428a0
  422d37:	jmp    0x42fc50
  422d3c:	nop    DWORD PTR [rax+0x0]
  422d40:	push   rsi
  422d41:	push   rbx
  422d42:	sub    rsp,0x78
  422d46:	movaps XMMWORD PTR [rsp+0x40],xmm6
  422d4b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  422d50:	movaps XMMWORD PTR [rsp+0x60],xmm8
  422d56:	cmp    DWORD PTR [rcx],0x6
  422d59:	ja     0x422e30
  422d5f:	mov    edx,DWORD PTR [rcx]
  422d61:	lea    rax,[rip+0x19d1c]        # 0x43ca84
  422d68:	movsxd rdx,DWORD PTR [rax+rdx*4]
  422d6c:	add    rax,rdx
  422d6f:	jmp    rax
  422d71:	lea    rbx,[rip+0x19be8]        # 0x43c960
  422d78:	nop    DWORD PTR [rax+rax*1+0x0]
  422d80:	movsd  xmm8,QWORD PTR [rcx+0x20]
  422d86:	mov    rsi,QWORD PTR [rcx+0x8]
  422d8a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  422d8f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  422d94:	call   0x42fc68
  422d99:	movsd  QWORD PTR [rsp+0x30],xmm8
  422da0:	lea    rcx,[rax+0x60]
  422da4:	lea    rdx,[rip+0x19cad]        # 0x43ca58
  422dab:	movsd  QWORD PTR [rsp+0x28],xmm7
  422db1:	mov    r9,rsi
  422db4:	mov    r8,rbx
  422db7:	movsd  QWORD PTR [rsp+0x20],xmm6
  422dbd:	call   0x42fbb8
  422dc2:	nop
  422dc3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  422dc8:	xor    eax,eax
  422dca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  422dcf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  422dd5:	add    rsp,0x78
  422dd9:	pop    rbx
  422dda:	pop    rsi
  422ddb:	ret    
  422ddc:	nop    DWORD PTR [rax+0x0]
  422de0:	lea    rbx,[rip+0x19b98]        # 0x43c97f
  422de7:	jmp    0x422d80
  422de9:	nop    DWORD PTR [rax+0x0]
  422df0:	lea    rbx,[rip+0x19ba9]        # 0x43c9a0
  422df7:	jmp    0x422d80
  422df9:	nop    DWORD PTR [rax+0x0]
  422e00:	lea    rbx,[rip+0x19c09]        # 0x43ca10
  422e07:	jmp    0x422d80
  422e0c:	nop    DWORD PTR [rax+0x0]
  422e10:	lea    rbx,[rip+0x19bd1]        # 0x43c9e8
  422e17:	jmp    0x422d80
  422e1c:	nop    DWORD PTR [rax+0x0]
  422e20:	lea    rbx,[rip+0x19b99]        # 0x43c9c0
  422e27:	jmp    0x422d80
  422e2c:	nop    DWORD PTR [rax+0x0]
  422e30:	lea    rbx,[rip+0x19c0f]        # 0x43ca46
  422e37:	jmp    0x422d80
  422e3c:	nop
  422e3d:	nop
  422e3e:	nop
  422e3f:	nop
  422e40:	fninit 
  422e42:	ret    
  422e43:	nop
  422e44:	nop
  422e45:	nop
  422e46:	nop
  422e47:	nop
  422e48:	nop
  422e49:	nop
  422e4a:	nop
  422e4b:	nop
  422e4c:	nop
  422e4d:	nop
  422e4e:	nop
  422e4f:	nop
  422e50:	mov    rax,rcx
  422e53:	ret    
  422e54:	xchg   ax,ax
  422e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e60:	mov    rax,rcx
  422e63:	ret    
  422e64:	nop
  422e65:	nop
  422e66:	nop
  422e67:	nop
  422e68:	nop
  422e69:	nop
  422e6a:	nop
  422e6b:	nop
  422e6c:	nop
  422e6d:	nop
  422e6e:	nop
  422e6f:	nop
  422e70:	push   rsi
  422e71:	push   rbx
  422e72:	sub    rsp,0x38
  422e76:	lea    rax,[rsp+0x58]
  422e7b:	mov    rbx,rcx
  422e7e:	mov    QWORD PTR [rsp+0x58],rdx
  422e83:	mov    QWORD PTR [rsp+0x60],r8
  422e88:	mov    QWORD PTR [rsp+0x68],r9
  422e8d:	mov    QWORD PTR [rsp+0x28],rax
  422e92:	call   0x42fc68
  422e97:	lea    rcx,[rip+0x19c02]        # 0x43caa0
  422e9e:	lea    r9,[rax+0x60]
  422ea2:	mov    r8d,0x1b
  422ea8:	mov    edx,0x1
  422ead:	call   0x42fb98
  422eb2:	mov    rsi,QWORD PTR [rsp+0x28]
  422eb7:	call   0x42fc68
  422ebc:	lea    rcx,[rax+0x60]
  422ec0:	mov    rdx,rbx
  422ec3:	mov    r8,rsi
  422ec6:	call   0x42fa88
  422ecb:	call   0x42fbf8
  422ed0:	nop
  422ed1:	nop    DWORD PTR [rax+rax*1+0x0]
  422ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ee0:	push   r13
  422ee2:	push   r12
  422ee4:	push   rbp
  422ee5:	push   rdi
  422ee6:	push   rsi
  422ee7:	push   rbx
  422ee8:	sub    rsp,0x58
  422eec:	movsxd rbp,DWORD PTR [rip+0x1f9d1]        # 0x4428c4
  422ef3:	mov    rbx,rcx
  422ef6:	mov    rsi,rdx
  422ef9:	mov    rdi,r8
  422efc:	test   ebp,ebp
  422efe:	jle    0x422ffa
  422f04:	mov    rax,QWORD PTR [rip+0x1f9bd]        # 0x4428c8
  422f0b:	xor    r9d,r9d
  422f0e:	add    rax,0x8
  422f12:	mov    r10,QWORD PTR [rax]
  422f15:	cmp    rbx,r10
  422f18:	jb     0x422f2e
  422f1a:	mov    rdx,QWORD PTR [rax+0x8]
  422f1e:	mov    r11d,DWORD PTR [rdx+0x8]
  422f22:	add    r10,r11
  422f25:	cmp    rbx,r10
  422f28:	jb     0x422fe0
  422f2e:	add    r9d,0x1
  422f32:	add    rax,0x18
  422f36:	cmp    r9d,ebp
  422f39:	jne    0x422f12
  422f3b:	mov    rcx,rbx
  422f3e:	call   0x423b50
  422f43:	test   rax,rax
  422f46:	mov    r12,rax
  422f49:	je     0x423032
  422f4f:	lea    rbp,[rbp+rbp*2+0x0]
  422f54:	shl    rbp,0x3
  422f58:	mov    r13,rbp
  422f5b:	add    r13,QWORD PTR [rip+0x1f966]        # 0x4428c8
  422f62:	mov    QWORD PTR [r13+0x10],rax
  422f66:	mov    DWORD PTR [r13+0x0],0x0
  422f6e:	call   0x423c70
  422f73:	mov    edx,DWORD PTR [r12+0xc]
  422f78:	mov    r8d,0x30
  422f7e:	add    rax,rdx
  422f81:	lea    rdx,[rsp+0x20]
  422f86:	mov    QWORD PTR [r13+0x8],rax
  422f8a:	mov    rax,QWORD PTR [rip+0x1f937]        # 0x4428c8
  422f91:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  422f96:	call   QWORD PTR [rip+0x21f74]        # 0x444f10
  422f9c:	test   rax,rax
  422f9f:	je     0x423015
  422fa1:	mov    eax,DWORD PTR [rsp+0x44]
  422fa5:	lea    edx,[rax-0x4]
  422fa8:	and    edx,0xfffffffb
  422fab:	je     0x422fd9
  422fad:	sub    eax,0x40
  422fb0:	and    eax,0xffffffbf
  422fb3:	je     0x422fd9
  422fb5:	mov    r9,rbp
  422fb8:	add    r9,QWORD PTR [rip+0x1f909]        # 0x4428c8
  422fbf:	mov    r8d,0x40
  422fc5:	mov    rdx,QWORD PTR [rsp+0x38]
  422fca:	mov    rcx,QWORD PTR [rsp+0x20]
  422fcf:	call   QWORD PTR [rip+0x21f33]        # 0x444f08
  422fd5:	test   eax,eax
  422fd7:	je     0x423001
  422fd9:	add    DWORD PTR [rip+0x1f8e4],0x1        # 0x4428c4
  422fe0:	mov    r8,rdi
  422fe3:	mov    rdx,rsi
  422fe6:	mov    rcx,rbx
  422fe9:	add    rsp,0x58
  422fed:	pop    rbx
  422fee:	pop    rsi
  422fef:	pop    rdi
  422ff0:	pop    rbp
  422ff1:	pop    r12
  422ff3:	pop    r13
  422ff5:	jmp    0x42fb40
  422ffa:	xor    ebp,ebp
  422ffc:	jmp    0x422f3b
  423001:	call   QWORD PTR [rip+0x21e19]        # 0x444e20
  423007:	lea    rcx,[rip+0x19b0a]        # 0x43cb18
  42300e:	mov    edx,eax
  423010:	call   0x422e70
  423015:	mov    rax,QWORD PTR [rip+0x1f8ac]        # 0x4428c8
  42301c:	mov    edx,DWORD PTR [r12+0x8]
  423021:	lea    rcx,[rip+0x19ab8]        # 0x43cae0
  423028:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42302d:	call   0x422e70
  423032:	lea    rcx,[rip+0x19a87]        # 0x43cac0
  423039:	mov    rdx,rbx
  42303c:	call   0x422e70
  423041:	nop
  423042:	nop    DWORD PTR [rax+0x0]
  423046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423050:	push   rbp
  423051:	push   r14
  423053:	push   r13
  423055:	push   r12
  423057:	push   rdi
  423058:	push   rsi
  423059:	push   rbx
  42305a:	mov    rbp,rsp
  42305d:	sub    rsp,0x60
  423061:	mov    ebx,DWORD PTR [rip+0x1f859]        # 0x4428c0
  423067:	test   ebx,ebx
  423069:	je     0x423080
  42306b:	mov    rsp,rbp
  42306e:	pop    rbx
  42306f:	pop    rsi
  423070:	pop    rdi
  423071:	pop    r12
  423073:	pop    r13
  423075:	pop    r14
  423077:	pop    rbp
  423078:	ret    
  423079:	nop    DWORD PTR [rax+0x0]
  423080:	mov    DWORD PTR [rip+0x1f836],0x1        # 0x4428c0
  42308a:	call   0x423ba0
  42308f:	cdqe   
  423091:	lea    rax,[rax+rax*2]
  423095:	lea    rax,[rax*8+0x1e]
  42309d:	and    rax,0xfffffffffffffff0
  4230a1:	call   0x423de0
  4230a6:	mov    rsi,QWORD PTR [rip+0x1a413]        # 0x43d4c0
  4230ad:	mov    rbx,QWORD PTR [rip+0x1a41c]        # 0x43d4d0
  4230b4:	sub    rsp,rax
  4230b7:	mov    DWORD PTR [rip+0x1f803],0x0        # 0x4428c4
  4230c1:	lea    rax,[rsp+0x20]
  4230c6:	mov    QWORD PTR [rip+0x1f7fb],rax        # 0x4428c8
  4230cd:	mov    rax,rsi
  4230d0:	sub    rax,rbx
  4230d3:	cmp    rax,0x7
  4230d7:	jle    0x42306b
  4230d9:	cmp    rax,0xb
  4230dd:	jle    0x423105
  4230df:	mov    r11d,DWORD PTR [rbx]
  4230e2:	test   r11d,r11d
  4230e5:	jne    0x423230
  4230eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4230ef:	test   r10d,r10d
  4230f2:	jne    0x423230
  4230f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4230fc:	test   r9d,r9d
  4230ff:	jne    0x42311c
  423101:	add    rbx,0xc
  423105:	mov    r8d,DWORD PTR [rbx]
  423108:	test   r8d,r8d
  42310b:	jne    0x423230
  423111:	mov    ecx,DWORD PTR [rbx+0x4]
  423114:	test   ecx,ecx
  423116:	jne    0x423230
  42311c:	mov    edx,DWORD PTR [rbx+0x8]
  42311f:	cmp    edx,0x1
  423122:	jne    0x42333c
  423128:	add    rbx,0xc
  42312c:	cmp    rbx,rsi
  42312f:	jae    0x42306b
  423135:	mov    r12,QWORD PTR [rip+0x1a3d4]        # 0x43d510
  42313c:	lea    r13,[rbp-0x30]
  423140:	movabs r14,0xffffffff00000000
  42314a:	mov    ecx,DWORD PTR [rbx+0x4]
  42314d:	mov    eax,DWORD PTR [rbx]
  42314f:	movzx  edx,BYTE PTR [rbx+0x8]
  423153:	add    rax,r12
  423156:	add    rcx,r12
  423159:	cmp    edx,0x10
  42315c:	mov    r8,QWORD PTR [rax]
  42315f:	je     0x4232a6
  423165:	jbe    0x42326d
  42316b:	cmp    edx,0x20
  42316e:	je     0x4232ef
  423174:	cmp    edx,0x40
  423177:	jne    0x4232db
  42317d:	sub    r8,rax
  423180:	mov    rdx,r13
  423183:	mov    rdi,r13
  423186:	mov    rax,r8
  423189:	add    rax,QWORD PTR [rcx]
  42318c:	mov    r8d,0x8
  423192:	mov    QWORD PTR [rbp-0x30],rax
  423196:	call   0x422ee0
  42319b:	add    rbx,0xc
  42319f:	cmp    rbx,rsi
  4231a2:	jb     0x42314a
  4231a4:	mov    eax,DWORD PTR [rip+0x1f71a]        # 0x4428c4
  4231aa:	xor    ebx,ebx
  4231ac:	xor    esi,esi
  4231ae:	test   eax,eax
  4231b0:	jle    0x42306b
  4231b6:	mov    r14,QWORD PTR [rip+0x21d53]        # 0x444f10
  4231bd:	lea    r13,[rbp-0x34]
  4231c1:	mov    r12,QWORD PTR [rip+0x21d40]        # 0x444f08
  4231c8:	jmp    0x4231e3
  4231ca:	nop    WORD PTR [rax+rax*1+0x0]
  4231d0:	add    esi,0x1
  4231d3:	add    rbx,0x18
  4231d7:	cmp    esi,DWORD PTR [rip+0x1f6e7]        # 0x4428c4
  4231dd:	jge    0x42306b
  4231e3:	mov    rax,rbx
  4231e6:	add    rax,QWORD PTR [rip+0x1f6db]        # 0x4428c8
  4231ed:	mov    edx,DWORD PTR [rax]
  4231ef:	test   edx,edx
  4231f1:	je     0x4231d0
  4231f3:	mov    rcx,QWORD PTR [rax+0x8]
  4231f7:	mov    r8d,0x30
  4231fd:	mov    rdx,rdi
  423200:	call   r14
  423203:	test   rax,rax
  423206:	je     0x42331e
  42320c:	mov    rax,QWORD PTR [rip+0x1f6b5]        # 0x4428c8
  423213:	mov    r9,r13
  423216:	mov    rdx,QWORD PTR [rbp-0x18]
  42321a:	mov    rcx,QWORD PTR [rbp-0x30]
  42321e:	mov    r8d,DWORD PTR [rax+rbx*1]
  423222:	call   r12
  423225:	jmp    0x4231d0
  423227:	nop    WORD PTR [rax+rax*1+0x0]
  423230:	cmp    rbx,rsi
  423233:	jae    0x42306b
  423239:	mov    r12,QWORD PTR [rip+0x1a2d0]        # 0x43d510
  423240:	lea    rdi,[rbp-0x30]
  423244:	mov    ecx,DWORD PTR [rbx+0x4]
  423247:	mov    eax,DWORD PTR [rbx]
  423249:	mov    r8d,0x4
  42324f:	mov    rdx,rdi
  423252:	add    rbx,0x8
  423256:	add    rcx,r12
  423259:	add    eax,DWORD PTR [rcx]
  42325b:	mov    DWORD PTR [rbp-0x30],eax
  42325e:	call   0x422ee0
  423263:	cmp    rbx,rsi
  423266:	jb     0x423244
  423268:	jmp    0x4231a4
  42326d:	cmp    edx,0x8
  423270:	jne    0x4232db
  423272:	movzx  edx,BYTE PTR [rcx]
  423275:	mov    rdi,r13
  423278:	mov    r10,rdx
  42327b:	or     r10,0xffffffffffffff00
  423282:	test   dl,dl
  423284:	cmovs  rdx,r10
  423288:	sub    rdx,rax
  42328b:	lea    rax,[r8+rdx*1]
  42328f:	mov    r8d,0x1
  423295:	mov    rdx,r13
  423298:	mov    QWORD PTR [rbp-0x30],rax
  42329c:	call   0x422ee0
  4232a1:	jmp    0x42319b
  4232a6:	movzx  edx,WORD PTR [rcx]
  4232a9:	mov    rdi,r13
  4232ac:	mov    r10,rdx
  4232af:	or     r10,0xffffffffffff0000
  4232b6:	test   dx,dx
  4232b9:	cmovs  rdx,r10
  4232bd:	sub    rdx,rax
  4232c0:	lea    rax,[r8+rdx*1]
  4232c4:	mov    r8d,0x2
  4232ca:	mov    rdx,r13
  4232cd:	mov    QWORD PTR [rbp-0x30],rax
  4232d1:	call   0x422ee0
  4232d6:	jmp    0x42319b
  4232db:	lea    rcx,[rip+0x19896]        # 0x43cb78
  4232e2:	mov    QWORD PTR [rbp-0x30],0x0
  4232ea:	call   0x422e70
  4232ef:	mov    edx,DWORD PTR [rcx]
  4232f1:	mov    rdi,r13
  4232f4:	mov    r10,rdx
  4232f7:	or     r10,r14
  4232fa:	test   edx,edx
  4232fc:	cmovs  rdx,r10
  423300:	sub    rdx,rax
  423303:	lea    rax,[r8+rdx*1]
  423307:	mov    r8d,0x4
  42330d:	mov    rdx,r13
  423310:	mov    QWORD PTR [rbp-0x30],rax
  423314:	call   0x422ee0
  423319:	jmp    0x42319b
  42331e:	add    rbx,QWORD PTR [rip+0x1f5a3]        # 0x4428c8
  423325:	lea    rcx,[rip+0x197b4]        # 0x43cae0
  42332c:	mov    rax,QWORD PTR [rbx+0x10]
  423330:	mov    r8,QWORD PTR [rbx+0x8]
  423334:	mov    edx,DWORD PTR [rax+0x8]
  423337:	call   0x422e70
  42333c:	lea    rcx,[rip+0x197fd]        # 0x43cb40
  423343:	call   0x422e70
  423348:	nop
  423349:	nop
  42334a:	nop
  42334b:	nop
  42334c:	nop
  42334d:	nop
  42334e:	nop
  42334f:	nop
  423350:	sub    rsp,0x28
  423354:	mov    eax,DWORD PTR [rcx]
  423356:	cmp    eax,0xc0000091
  42335b:	ja     0x4233c0
  42335d:	cmp    eax,0xc000008d
  423362:	jae    0x4233df
  423364:	cmp    eax,0xc0000008
  423369:	je     0x423480
  42336f:	ja     0x423450
  423375:	cmp    eax,0x80000002
  42337a:	je     0x423480
  423380:	cmp    eax,0xc0000005
  423385:	jne    0x42345e
  42338b:	xor    edx,edx
  42338d:	mov    ecx,0xb
  423392:	call   0x42fb08
  423397:	cmp    rax,0x1
  42339b:	je     0x4234e0
  4233a1:	test   rax,rax
  4233a4:	je     0x4234c0
  4233aa:	mov    ecx,0xb
  4233af:	call   rax
  4233b1:	xor    eax,eax
  4233b3:	add    rsp,0x28
  4233b7:	ret    
  4233b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4233c0:	cmp    eax,0xc0000094
  4233c5:	je     0x423490
  4233cb:	ja     0x423410
  4233cd:	cmp    eax,0xc0000092
  4233d2:	je     0x423480
  4233d8:	cmp    eax,0xc0000093
  4233dd:	jne    0x42345e
  4233df:	xor    edx,edx
  4233e1:	mov    ecx,0x8
  4233e6:	call   0x42fb08
  4233eb:	cmp    rax,0x1
  4233ef:	mov    rdx,rax
  4233f2:	je     0x423468
  4233f4:	test   rdx,rdx
  4233f7:	mov    eax,0x1
  4233fc:	je     0x4233b3
  4233fe:	mov    ecx,0x8
  423403:	call   rdx
  423405:	xor    eax,eax
  423407:	add    rsp,0x28
  42340b:	ret    
  42340c:	nop    DWORD PTR [rax+0x0]
  423410:	cmp    eax,0xc0000095
  423415:	je     0x423480
  423417:	cmp    eax,0xc0000096
  42341c:	jne    0x42345e
  42341e:	xor    edx,edx
  423420:	mov    ecx,0x4
  423425:	call   0x42fb08
  42342a:	cmp    rax,0x1
  42342e:	je     0x4234ca
  423434:	test   rax,rax
  423437:	je     0x4234c0
  42343d:	mov    ecx,0x4
  423442:	call   rax
  423444:	xor    eax,eax
  423446:	jmp    0x4233b3
  42344b:	nop    DWORD PTR [rax+rax*1+0x0]
  423450:	cmp    eax,0xc000001d
  423455:	je     0x42341e
  423457:	cmp    eax,0xc000008c
  42345c:	je     0x423480
  42345e:	mov    eax,0x1
  423463:	add    rsp,0x28
  423467:	ret    
  423468:	mov    edx,0x1
  42346d:	mov    ecx,0x8
  423472:	call   0x42fb08
  423477:	call   0x422e40
  42347c:	nop    DWORD PTR [rax+0x0]
  423480:	xor    eax,eax
  423482:	add    rsp,0x28
  423486:	ret    
  423487:	nop    WORD PTR [rax+rax*1+0x0]
  423490:	xor    edx,edx
  423492:	mov    ecx,0x8
  423497:	call   0x42fb08
  42349c:	cmp    rax,0x1
  4234a0:	mov    rdx,rax
  4234a3:	jne    0x4233f4
  4234a9:	mov    edx,0x1
  4234ae:	mov    ecx,0x8
  4234b3:	call   0x42fb08
  4234b8:	xor    eax,eax
  4234ba:	jmp    0x4233b3
  4234bf:	nop
  4234c0:	mov    eax,0x4
  4234c5:	add    rsp,0x28
  4234c9:	ret    
  4234ca:	mov    edx,0x1
  4234cf:	mov    ecx,0x4
  4234d4:	call   0x42fb08
  4234d9:	xor    eax,eax
  4234db:	jmp    0x4233b3
  4234e0:	mov    edx,0x1
  4234e5:	mov    ecx,0xb
  4234ea:	call   0x42fb08
  4234ef:	xor    eax,eax
  4234f1:	jmp    0x4233b3
  4234f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423500:	push   r12
  423502:	push   rbp
  423503:	push   rdi
  423504:	push   rsi
  423505:	push   rbx
  423506:	sub    rsp,0x20
  42350a:	call   0x423c70
  42350f:	mov    rbp,rax
  423512:	mov    eax,DWORD PTR [rip+0x1f3f0]        # 0x442908
  423518:	test   eax,eax
  42351a:	jne    0x423541
  42351c:	test   rbp,rbp
  42351f:	je     0x423541
  423521:	lea    rcx,[rip+0x19688]        # 0x43cbb0
  423528:	mov    DWORD PTR [rip+0x1f3d6],0x1        # 0x442908
  423532:	call   0x423ab0
  423537:	test   rax,rax
  42353a:	je     0x423550
  42353c:	mov    eax,0x1
  423541:	add    rsp,0x20
  423545:	pop    rbx
  423546:	pop    rsi
  423547:	pop    rdi
  423548:	pop    rbp
  423549:	pop    r12
  42354b:	ret    
  42354c:	nop    DWORD PTR [rax+0x0]
  423550:	lea    rbx,[rip+0x1f4e9]        # 0x442a40
  423557:	mov    ecx,0x30
  42355c:	lea    rdx,[rip+0x1f3dd]        # 0x442940
  423563:	lea    r12,[rip+0xfffffffffffffde6]        # 0x423350
  42356a:	xor    esi,esi
  42356c:	mov    rdi,rbx
  42356f:	rep stos QWORD PTR es:[rdi],rax
  423572:	mov    rdi,rdx
  423575:	sub    r12,rbp
  423578:	mov    cl,0x20
  42357a:	rep stos QWORD PTR es:[rdi],rax
  42357d:	mov    rdi,rdx
  423580:	jmp    0x4235b0
  423582:	mov    BYTE PTR [rdi],0x9
  423585:	mov    DWORD PTR [rdi+0x4],r12d
  423589:	add    rsi,0x1
  42358d:	mov    edx,DWORD PTR [rax+0xc]
  423590:	add    rbx,0xc
  423594:	mov    DWORD PTR [rbx-0xc],edx
  423597:	add    edx,DWORD PTR [rax+0x8]
  42359a:	mov    rax,rdi
  42359d:	sub    rax,rbp
  4235a0:	add    rdi,0x8
  4235a4:	mov    DWORD PTR [rbx-0x4],eax
  4235a7:	mov    DWORD PTR [rbx-0x8],edx
  4235aa:	cmp    rsi,0x20
  4235ae:	je     0x4235e5
  4235b0:	mov    rcx,rsi
  4235b3:	call   0x423be0
  4235b8:	test   rax,rax
  4235bb:	jne    0x423582
  4235bd:	test   rsi,rsi
  4235c0:	je     0x42353c
  4235c6:	mov    edx,esi
  4235c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4235d0:	mov    r8,rbp
  4235d3:	lea    rcx,[rip+0x1f466]        # 0x442a40
  4235da:	call   QWORD PTR [rip+0x218d0]        # 0x444eb0
  4235e0:	jmp    0x42353c
  4235e5:	mov    edx,0x20
  4235ea:	jmp    0x4235d0
  4235ec:	nop    DWORD PTR [rax+0x0]
  4235f0:	push   rbx
  4235f1:	sub    rsp,0x20
  4235f5:	mov    rdx,QWORD PTR [rcx]
  4235f8:	mov    eax,DWORD PTR [rdx]
  4235fa:	mov    r8d,eax
  4235fd:	and    r8d,0x20ffffff
  423604:	cmp    r8d,0x20474343
  42360b:	je     0x423710
  423611:	cmp    eax,0xc0000091
  423616:	mov    rbx,rcx
  423619:	ja     0x4236a0
  42361f:	cmp    eax,0xc000008d
  423624:	jae    0x4236b7
  42362a:	cmp    eax,0xc0000008
  42362f:	je     0x423663
  423631:	ja     0x423670
  423633:	cmp    eax,0x80000002
  423638:	je     0x423663
  42363a:	cmp    eax,0xc0000005
  42363f:	jne    0x423682
  423641:	xor    edx,edx
  423643:	mov    ecx,0xb
  423648:	call   0x42fb08
  42364d:	cmp    rax,0x1
  423651:	je     0x423780
  423657:	test   rax,rax
  42365a:	je     0x423682
  42365c:	mov    ecx,0xb
  423661:	call   rax
  423663:	mov    eax,0xffffffff
  423668:	add    rsp,0x20
  42366c:	pop    rbx
  42366d:	ret    
  42366e:	xchg   ax,ax
  423670:	cmp    eax,0xc000001d
  423675:	je     0x423736
  42367b:	cmp    eax,0xc000008c
  423680:	je     0x423663
  423682:	mov    rax,QWORD PTR [rip+0x1f277]        # 0x442900
  423689:	test   rax,rax
  42368c:	je     0x423668
  42368e:	mov    rcx,rbx
  423691:	add    rsp,0x20
  423695:	pop    rbx
  423696:	rex.W jmp rax
  423699:	nop    DWORD PTR [rax+0x0]
  4236a0:	cmp    eax,0xc0000094
  4236a5:	je     0x4236e2
  4236a7:	ja     0x423720
  4236a9:	cmp    eax,0xc0000092
  4236ae:	je     0x423663
  4236b0:	cmp    eax,0xc0000093
  4236b5:	jne    0x423682
  4236b7:	xor    edx,edx
  4236b9:	mov    ecx,0x8
  4236be:	call   0x42fb08
  4236c3:	cmp    rax,0x1
  4236c7:	jne    0x4236f4
  4236c9:	mov    edx,0x1
  4236ce:	mov    ecx,0x8
  4236d3:	call   0x42fb08
  4236d8:	call   0x422e40
  4236dd:	jmp    0x423663
  4236e2:	xor    edx,edx
  4236e4:	mov    ecx,0x8
  4236e9:	call   0x42fb08
  4236ee:	cmp    rax,0x1
  4236f2:	je     0x423762
  4236f4:	test   rax,rax
  4236f7:	je     0x423682
  4236f9:	mov    ecx,0x8
  4236fe:	call   rax
  423700:	mov    eax,0xffffffff
  423705:	jmp    0x423668
  42370a:	nop    WORD PTR [rax+rax*1+0x0]
  423710:	test   BYTE PTR [rdx+0x4],0x1
  423714:	jne    0x423611
  42371a:	jmp    0x423663
  42371f:	nop
  423720:	cmp    eax,0xc0000095
  423725:	je     0x423663
  42372b:	cmp    eax,0xc0000096
  423730:	jne    0x423682
  423736:	xor    edx,edx
  423738:	mov    ecx,0x4
  42373d:	call   0x42fb08
  423742:	cmp    rax,0x1
  423746:	je     0x423794
  423748:	test   rax,rax
  42374b:	je     0x423682
  423751:	mov    ecx,0x4
  423756:	call   rax
  423758:	mov    eax,0xffffffff
  42375d:	jmp    0x423668
  423762:	mov    edx,0x1
  423767:	mov    ecx,0x8
  42376c:	call   0x42fb08
  423771:	jmp    0x423663
  423776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423780:	mov    edx,0x1
  423785:	mov    ecx,0xb
  42378a:	call   0x42fb08
  42378f:	jmp    0x423663
  423794:	mov    edx,0x1
  423799:	mov    ecx,0x4
  42379e:	call   0x42fb08
  4237a3:	jmp    0x423663
  4237a8:	nop
  4237a9:	nop
  4237aa:	nop
  4237ab:	nop
  4237ac:	nop
  4237ad:	nop
  4237ae:	nop
  4237af:	nop
  4237b0:	push   rbp
  4237b1:	push   rdi
  4237b2:	push   rsi
  4237b3:	push   rbx
  4237b4:	sub    rsp,0x28
  4237b8:	lea    rcx,[rip+0x1f421]        # 0x442be0
  4237bf:	call   QWORD PTR [rip+0x21623]        # 0x444de8
  4237c5:	mov    rbx,QWORD PTR [rip+0x1f3f4]        # 0x442bc0
  4237cc:	test   rbx,rbx
  4237cf:	je     0x423804
  4237d1:	mov    rbp,QWORD PTR [rip+0x21720]        # 0x444ef8
  4237d8:	mov    rdi,QWORD PTR [rip+0x21641]        # 0x444e20
  4237df:	nop
  4237e0:	mov    ecx,DWORD PTR [rbx]
  4237e2:	call   rbp
  4237e4:	mov    rsi,rax
  4237e7:	call   rdi
  4237e9:	test   eax,eax
  4237eb:	jne    0x4237fb
  4237ed:	test   rsi,rsi
  4237f0:	je     0x4237fb
  4237f2:	mov    rax,QWORD PTR [rbx+0x8]
  4237f6:	mov    rcx,rsi
  4237f9:	call   rax
  4237fb:	mov    rbx,QWORD PTR [rbx+0x10]
  4237ff:	test   rbx,rbx
  423802:	jne    0x4237e0
  423804:	mov    rax,QWORD PTR [rip+0x21675]        # 0x444e80
  42380b:	lea    rcx,[rip+0x1f3ce]        # 0x442be0
  423812:	add    rsp,0x28
  423816:	pop    rbx
  423817:	pop    rsi
  423818:	pop    rdi
  423819:	pop    rbp
  42381a:	rex.W jmp rax
  42381d:	nop    DWORD PTR [rax]
  423820:	push   rdi
  423821:	push   rsi
  423822:	push   rbx
  423823:	sub    rsp,0x20
  423827:	mov    eax,DWORD PTR [rip+0x1f39b]        # 0x442bc8
  42382d:	test   eax,eax
  42382f:	jne    0x423840
  423831:	add    rsp,0x20
  423835:	pop    rbx
  423836:	pop    rsi
  423837:	pop    rdi
  423838:	ret    
  423839:	nop    DWORD PTR [rax+0x0]
  423840:	mov    rsi,rdx
  423843:	mov    edi,ecx
  423845:	mov    edx,0x18
  42384a:	mov    ecx,0x1
  42384f:	call   0x42fbe8
  423854:	test   rax,rax
  423857:	mov    rbx,rax
  42385a:	je     0x423898
  42385c:	mov    DWORD PTR [rax],edi
  42385e:	mov    QWORD PTR [rax+0x8],rsi
  423862:	lea    rcx,[rip+0x1f377]        # 0x442be0
  423869:	call   QWORD PTR [rip+0x21579]        # 0x444de8
  42386f:	mov    rax,QWORD PTR [rip+0x1f34a]        # 0x442bc0
  423876:	lea    rcx,[rip+0x1f363]        # 0x442be0
  42387d:	mov    QWORD PTR [rip+0x1f33c],rbx        # 0x442bc0
  423884:	mov    QWORD PTR [rbx+0x10],rax
  423888:	call   QWORD PTR [rip+0x215f2]        # 0x444e80
  42388e:	xor    eax,eax
  423890:	add    rsp,0x20
  423894:	pop    rbx
  423895:	pop    rsi
  423896:	pop    rdi
  423897:	ret    
  423898:	mov    eax,0xffffffff
  42389d:	jmp    0x423831
  42389f:	nop
  4238a0:	push   rbx
  4238a1:	sub    rsp,0x20
  4238a5:	mov    eax,DWORD PTR [rip+0x1f31d]        # 0x442bc8
  4238ab:	test   eax,eax
  4238ad:	jne    0x4238c0
  4238af:	xor    eax,eax
  4238b1:	add    rsp,0x20
  4238b5:	pop    rbx
  4238b6:	ret    
  4238b7:	nop    WORD PTR [rax+rax*1+0x0]
  4238c0:	mov    ebx,ecx
  4238c2:	lea    rcx,[rip+0x1f317]        # 0x442be0
  4238c9:	call   QWORD PTR [rip+0x21519]        # 0x444de8
  4238cf:	mov    rdx,QWORD PTR [rip+0x1f2ea]        # 0x442bc0
  4238d6:	test   rdx,rdx
  4238d9:	je     0x4238f7
  4238db:	mov    eax,DWORD PTR [rdx]
  4238dd:	cmp    eax,ebx
  4238df:	jne    0x4238ee
  4238e1:	jmp    0x42392f
  4238e3:	mov    r8d,DWORD PTR [rax]
  4238e6:	cmp    r8d,ebx
  4238e9:	je     0x423910
  4238eb:	mov    rdx,rax
  4238ee:	mov    rax,QWORD PTR [rdx+0x10]
  4238f2:	test   rax,rax
  4238f5:	jne    0x4238e3
  4238f7:	lea    rcx,[rip+0x1f2e2]        # 0x442be0
  4238fe:	call   QWORD PTR [rip+0x2157c]        # 0x444e80
  423904:	xor    eax,eax
  423906:	add    rsp,0x20
  42390a:	pop    rbx
  42390b:	ret    
  42390c:	nop    DWORD PTR [rax+0x0]
  423910:	mov    rcx,rax
  423913:	mov    rax,QWORD PTR [rax+0x10]
  423917:	mov    QWORD PTR [rdx+0x10],rax
  42391b:	call   0x42fba0
  423920:	lea    rcx,[rip+0x1f2b9]        # 0x442be0
  423927:	call   QWORD PTR [rip+0x21553]        # 0x444e80
  42392d:	jmp    0x423904
  42392f:	mov    rax,QWORD PTR [rdx+0x10]
  423933:	mov    rcx,rdx
  423936:	mov    QWORD PTR [rip+0x1f283],rax        # 0x442bc0
  42393d:	jmp    0x42391b
  42393f:	nop
  423940:	push   rbx
  423941:	sub    rsp,0x20
  423945:	cmp    edx,0x1
  423948:	je     0x4239e0
  42394e:	jb     0x423980
  423950:	cmp    edx,0x2
  423953:	je     0x423970
  423955:	cmp    edx,0x3
  423958:	jne    0x423975
  42395a:	mov    eax,DWORD PTR [rip+0x1f268]        # 0x442bc8
  423960:	test   eax,eax
  423962:	je     0x423975
  423964:	call   0x4237b0
  423969:	jmp    0x423975
  42396b:	nop    DWORD PTR [rax+rax*1+0x0]
  423970:	call   0x422e40
  423975:	mov    eax,0x1
  42397a:	add    rsp,0x20
  42397e:	pop    rbx
  42397f:	ret    
  423980:	mov    eax,DWORD PTR [rip+0x1f242]        # 0x442bc8
  423986:	test   eax,eax
  423988:	jne    0x423a10
  42398e:	mov    eax,DWORD PTR [rip+0x1f234]        # 0x442bc8
  423994:	cmp    eax,0x1
  423997:	jne    0x423975
  423999:	mov    rcx,QWORD PTR [rip+0x1f220]        # 0x442bc0
  4239a0:	test   rcx,rcx
  4239a3:	je     0x4239b6
  4239a5:	mov    rbx,QWORD PTR [rcx+0x10]
  4239a9:	call   0x42fba0
  4239ae:	test   rbx,rbx
  4239b1:	mov    rcx,rbx
  4239b4:	jne    0x4239a5
  4239b6:	lea    rcx,[rip+0x1f223]        # 0x442be0
  4239bd:	mov    QWORD PTR [rip+0x1f1f8],0x0        # 0x442bc0
  4239c8:	mov    DWORD PTR [rip+0x1f1f6],0x0        # 0x442bc8
  4239d2:	call   QWORD PTR [rip+0x21408]        # 0x444de0
  4239d8:	jmp    0x423975
  4239da:	nop    WORD PTR [rax+rax*1+0x0]
  4239e0:	mov    eax,DWORD PTR [rip+0x1f1e2]        # 0x442bc8
  4239e6:	test   eax,eax
  4239e8:	je     0x423a00
  4239ea:	mov    eax,0x1
  4239ef:	mov    DWORD PTR [rip+0x1f1cf],0x1        # 0x442bc8
  4239f9:	add    rsp,0x20
  4239fd:	pop    rbx
  4239fe:	ret    
  4239ff:	nop
  423a00:	lea    rcx,[rip+0x1f1d9]        # 0x442be0
  423a07:	call   QWORD PTR [rip+0x21463]        # 0x444e70
  423a0d:	jmp    0x4239ea
  423a0f:	nop
  423a10:	call   0x4237b0
  423a15:	jmp    0x42398e
  423a1a:	nop
  423a1b:	nop
  423a1c:	nop
  423a1d:	nop
  423a1e:	nop
  423a1f:	nop
  423a20:	movsxd rax,DWORD PTR [rcx+0x3c]
  423a24:	add    rcx,rax
  423a27:	xor    eax,eax
  423a29:	cmp    DWORD PTR [rcx],0x4550
  423a2f:	je     0x423a33
  423a31:	repz ret 
  423a33:	xor    eax,eax
  423a35:	cmp    WORD PTR [rcx+0x18],0x20b
  423a3b:	sete   al
  423a3e:	ret    
  423a3f:	nop
  423a40:	cmp    WORD PTR [rcx],0x5a4d
  423a45:	je     0x423a50
  423a47:	xor    eax,eax
  423a49:	ret    
  423a4a:	nop    WORD PTR [rax+rax*1+0x0]
  423a50:	jmp    0x423a20
  423a52:	nop    DWORD PTR [rax+0x0]
  423a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a60:	movsxd rax,DWORD PTR [rcx+0x3c]
  423a64:	add    rcx,rax
  423a67:	movzx  eax,WORD PTR [rcx+0x14]
  423a6b:	lea    rax,[rcx+rax*1+0x18]
  423a70:	movzx  ecx,WORD PTR [rcx+0x6]
  423a74:	test   ecx,ecx
  423a76:	je     0x423aa1
  423a78:	sub    ecx,0x1
  423a7b:	lea    rcx,[rcx+rcx*4]
  423a7f:	lea    r9,[rax+rcx*8+0x28]
  423a84:	mov    r8d,DWORD PTR [rax+0xc]
  423a88:	cmp    r8,rdx
  423a8b:	mov    rcx,r8
  423a8e:	ja     0x423a98
  423a90:	add    ecx,DWORD PTR [rax+0x8]
  423a93:	cmp    rdx,rcx
  423a96:	jb     0x423aa3
  423a98:	add    rax,0x28
  423a9c:	cmp    rax,r9
  423a9f:	jne    0x423a84
  423aa1:	xor    eax,eax
  423aa3:	repz ret 
  423aa5:	nop
  423aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ab0:	push   rdi
  423ab1:	push   rsi
  423ab2:	push   rbx
  423ab3:	sub    rsp,0x20
  423ab7:	mov    rsi,rcx
  423aba:	call   0x42fad8
  423abf:	cmp    rax,0x8
  423ac3:	ja     0x423ae0
  423ac5:	mov    rbx,QWORD PTR [rip+0x19a44]        # 0x43d510
  423acc:	xor    edi,edi
  423ace:	cmp    WORD PTR [rbx],0x5a4d
  423ad3:	je     0x423af0
  423ad5:	mov    rax,rdi
  423ad8:	add    rsp,0x20
  423adc:	pop    rbx
  423add:	pop    rsi
  423ade:	pop    rdi
  423adf:	ret    
  423ae0:	xor    edi,edi
  423ae2:	mov    rax,rdi
  423ae5:	add    rsp,0x20
  423ae9:	pop    rbx
  423aea:	pop    rsi
  423aeb:	pop    rdi
  423aec:	ret    
  423aed:	nop    DWORD PTR [rax]
  423af0:	mov    rcx,rbx
  423af3:	call   0x423a20
  423af8:	test   eax,eax
  423afa:	je     0x423ad5
  423afc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  423b00:	add    rdx,rbx
  423b03:	movzx  eax,WORD PTR [rdx+0x14]
  423b07:	lea    rbx,[rdx+rax*1+0x18]
  423b0c:	movzx  eax,WORD PTR [rdx+0x6]
  423b10:	test   eax,eax
  423b12:	je     0x423ad5
  423b14:	sub    eax,0x1
  423b17:	lea    rax,[rax+rax*4]
  423b1b:	lea    rdi,[rbx+rax*8+0x28]
  423b20:	jmp    0x423b2b
  423b22:	add    rbx,0x28
  423b26:	cmp    rbx,rdi
  423b29:	je     0x423ae0
  423b2b:	mov    r8d,0x8
  423b31:	mov    rdx,rsi
  423b34:	mov    rcx,rbx
  423b37:	call   0x42fac8
  423b3c:	test   eax,eax
  423b3e:	jne    0x423b22
  423b40:	mov    rdi,rbx
  423b43:	mov    rax,rdi
  423b46:	add    rsp,0x20
  423b4a:	pop    rbx
  423b4b:	pop    rsi
  423b4c:	pop    rdi
  423b4d:	ret    
  423b4e:	xchg   ax,ax
  423b50:	push   rsi
  423b51:	push   rbx
  423b52:	sub    rsp,0x28
  423b56:	mov    rbx,QWORD PTR [rip+0x199b3]        # 0x43d510
  423b5d:	cmp    WORD PTR [rbx],0x5a4d
  423b62:	je     0x423b70
  423b64:	xor    eax,eax
  423b66:	add    rsp,0x28
  423b6a:	pop    rbx
  423b6b:	pop    rsi
  423b6c:	ret    
  423b6d:	nop    DWORD PTR [rax]
  423b70:	mov    rsi,rcx
  423b73:	mov    rcx,rbx
  423b76:	call   0x423a20
  423b7b:	test   eax,eax
  423b7d:	je     0x423b64
  423b7f:	sub    rsi,rbx
  423b82:	mov    rcx,rbx
  423b85:	mov    rdx,rsi
  423b88:	add    rsp,0x28
  423b8c:	pop    rbx
  423b8d:	pop    rsi
  423b8e:	jmp    0x423a60
  423b93:	nop    DWORD PTR [rax]
  423b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ba0:	push   rbx
  423ba1:	sub    rsp,0x20
  423ba5:	mov    rbx,QWORD PTR [rip+0x19964]        # 0x43d510
  423bac:	xor    eax,eax
  423bae:	cmp    WORD PTR [rbx],0x5a4d
  423bb3:	je     0x423bc0
  423bb5:	add    rsp,0x20
  423bb9:	pop    rbx
  423bba:	ret    
  423bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  423bc0:	mov    rcx,rbx
  423bc3:	call   0x423a20
  423bc8:	test   eax,eax
  423bca:	je     0x423bb5
  423bcc:	movsxd rax,DWORD PTR [rbx+0x3c]
  423bd0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  423bd5:	add    rsp,0x20
  423bd9:	pop    rbx
  423bda:	ret    
  423bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  423be0:	push   rdi
  423be1:	push   rsi
  423be2:	push   rbx
  423be3:	sub    rsp,0x20
  423be7:	mov    rsi,QWORD PTR [rip+0x19922]        # 0x43d510
  423bee:	xor    edi,edi
  423bf0:	mov    rbx,rcx
  423bf3:	cmp    WORD PTR [rsi],0x5a4d
  423bf8:	je     0x423c05
  423bfa:	mov    rax,rdi
  423bfd:	add    rsp,0x20
  423c01:	pop    rbx
  423c02:	pop    rsi
  423c03:	pop    rdi
  423c04:	ret    
  423c05:	mov    rcx,rsi
  423c08:	call   0x423a20
  423c0d:	test   eax,eax
  423c0f:	je     0x423bfa
  423c11:	movsxd rax,DWORD PTR [rsi+0x3c]
  423c15:	add    rsi,rax
  423c18:	movzx  eax,WORD PTR [rsi+0x14]
  423c1c:	lea    rdx,[rsi+rax*1+0x18]
  423c21:	movzx  eax,WORD PTR [rsi+0x6]
  423c25:	test   eax,eax
  423c27:	je     0x423bfa
  423c29:	sub    eax,0x1
  423c2c:	lea    rax,[rax+rax*4]
  423c30:	lea    rax,[rdx+rax*8+0x28]
  423c35:	test   BYTE PTR [rdx+0x27],0x20
  423c39:	je     0x423c44
  423c3b:	test   rbx,rbx
  423c3e:	je     0x423c60
  423c40:	sub    rbx,0x1
  423c44:	add    rdx,0x28
  423c48:	cmp    rdx,rax
  423c4b:	jne    0x423c35
  423c4d:	xor    edi,edi
  423c4f:	mov    rax,rdi
  423c52:	add    rsp,0x20
  423c56:	pop    rbx
  423c57:	pop    rsi
  423c58:	pop    rdi
  423c59:	ret    
  423c5a:	nop    WORD PTR [rax+rax*1+0x0]
  423c60:	mov    rdi,rdx
  423c63:	mov    rax,rdi
  423c66:	add    rsp,0x20
  423c6a:	pop    rbx
  423c6b:	pop    rsi
  423c6c:	pop    rdi
  423c6d:	ret    
  423c6e:	xchg   ax,ax
  423c70:	push   rsi
  423c71:	push   rbx
  423c72:	sub    rsp,0x28
  423c76:	mov    rsi,QWORD PTR [rip+0x19893]        # 0x43d510
  423c7d:	xor    ebx,ebx
  423c7f:	cmp    WORD PTR [rsi],0x5a4d
  423c84:	je     0x423c90
  423c86:	mov    rax,rbx
  423c89:	add    rsp,0x28
  423c8d:	pop    rbx
  423c8e:	pop    rsi
  423c8f:	ret    
  423c90:	mov    rcx,rsi
  423c93:	call   0x423a20
  423c98:	test   eax,eax
  423c9a:	cmovne rbx,rsi
  423c9e:	mov    rax,rbx
  423ca1:	add    rsp,0x28
  423ca5:	pop    rbx
  423ca6:	pop    rsi
  423ca7:	ret    
  423ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  423cb0:	push   rsi
  423cb1:	push   rbx
  423cb2:	sub    rsp,0x28
  423cb6:	mov    rbx,QWORD PTR [rip+0x19853]        # 0x43d510
  423cbd:	xor    eax,eax
  423cbf:	cmp    WORD PTR [rbx],0x5a4d
  423cc4:	je     0x423cd0
  423cc6:	add    rsp,0x28
  423cca:	pop    rbx
  423ccb:	pop    rsi
  423ccc:	ret    
  423ccd:	nop    DWORD PTR [rax]
  423cd0:	mov    rsi,rcx
  423cd3:	mov    rcx,rbx
  423cd6:	call   0x423a20
  423cdb:	test   eax,eax
  423cdd:	je     0x423cc6
  423cdf:	sub    rsi,rbx
  423ce2:	mov    rcx,rbx
  423ce5:	mov    rdx,rsi
  423ce8:	call   0x423a60
  423ced:	test   rax,rax
  423cf0:	je     0x423d01
  423cf2:	mov    eax,DWORD PTR [rax+0x24]
  423cf5:	not    eax
  423cf7:	shr    eax,0x1f
  423cfa:	add    rsp,0x28
  423cfe:	pop    rbx
  423cff:	pop    rsi
  423d00:	ret    
  423d01:	xor    eax,eax
  423d03:	jmp    0x423cc6
  423d05:	nop
  423d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d10:	push   rbp
  423d11:	push   rdi
  423d12:	push   rsi
  423d13:	push   rbx
  423d14:	sub    rsp,0x28
  423d18:	mov    rdi,QWORD PTR [rip+0x197f1]        # 0x43d510
  423d1f:	xor    ebp,ebp
  423d21:	mov    esi,ecx
  423d23:	cmp    WORD PTR [rdi],0x5a4d
  423d28:	je     0x423d40
  423d2a:	mov    rax,rbp
  423d2d:	add    rsp,0x28
  423d31:	pop    rbx
  423d32:	pop    rsi
  423d33:	pop    rdi
  423d34:	pop    rbp
  423d35:	ret    
  423d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d40:	mov    rcx,rdi
  423d43:	call   0x423a20
  423d48:	test   eax,eax
  423d4a:	je     0x423d2a
  423d4c:	movsxd rax,DWORD PTR [rdi+0x3c]
  423d50:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  423d57:	test   edx,edx
  423d59:	je     0x423d2a
  423d5b:	mov    ebx,edx
  423d5d:	mov    rcx,rdi
  423d60:	mov    rdx,rbx
  423d63:	call   0x423a60
  423d68:	test   rax,rax
  423d6b:	je     0x423d2a
  423d6d:	add    rbx,rdi
  423d70:	mov    rdx,rbx
  423d73:	jne    0x423d87
  423d75:	jmp    0x423d2a
  423d77:	nop    WORD PTR [rax+rax*1+0x0]
  423d80:	sub    esi,0x1
  423d83:	add    rdx,0x14
  423d87:	mov    ecx,DWORD PTR [rdx+0x4]
  423d8a:	test   ecx,ecx
  423d8c:	jne    0x423d95
  423d8e:	mov    eax,DWORD PTR [rdx+0xc]
  423d91:	test   eax,eax
  423d93:	je     0x423db0
  423d95:	test   esi,esi
  423d97:	jg     0x423d80
  423d99:	mov    ebp,DWORD PTR [rdx+0xc]
  423d9c:	add    rbp,rdi
  423d9f:	mov    rax,rbp
  423da2:	add    rsp,0x28
  423da6:	pop    rbx
  423da7:	pop    rsi
  423da8:	pop    rdi
  423da9:	pop    rbp
  423daa:	ret    
  423dab:	nop    DWORD PTR [rax+rax*1+0x0]
  423db0:	xor    ebp,ebp
  423db2:	mov    rax,rbp
  423db5:	add    rsp,0x28
  423db9:	pop    rbx
  423dba:	pop    rsi
  423dbb:	pop    rdi
  423dbc:	pop    rbp
  423dbd:	ret    
  423dbe:	nop
  423dbf:	nop
  423dc0:	jmp    QWORD PTR [rip+0x213da]        # 0x4451a0
  423dc6:	nop
  423dc7:	nop
  423dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  423dd0:	jmp    QWORD PTR [rip+0x213da]        # 0x4451b0
  423dd6:	nop
  423dd7:	nop
  423dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  423de0:	push   rcx
  423de1:	push   rax
  423de2:	cmp    rax,0x1000
  423de8:	lea    rcx,[rsp+0x18]
  423ded:	jb     0x423e08
  423def:	sub    rcx,0x1000
  423df6:	or     QWORD PTR [rcx],0x0
  423dfa:	sub    rax,0x1000
  423e00:	cmp    rax,0x1000
  423e06:	ja     0x423def
  423e08:	sub    rcx,rax
  423e0b:	or     QWORD PTR [rcx],0x0
  423e0f:	pop    rax
  423e10:	pop    rcx
  423e11:	ret    
  423e12:	nop
  423e13:	nop
  423e14:	nop
  423e15:	nop
  423e16:	nop
  423e17:	nop
  423e18:	nop
  423e19:	nop
  423e1a:	nop
  423e1b:	nop
  423e1c:	nop
  423e1d:	nop
  423e1e:	nop
  423e1f:	nop
  423e20:	push   rbx
  423e21:	sub    rsp,0x10
  423e25:	movsd  QWORD PTR [rsp+0x8],xmm0
  423e2b:	mov    r9,QWORD PTR [rsp+0x8]
  423e30:	mov    rdx,r9
  423e33:	mov    r10d,r9d
  423e36:	shr    rdx,0x20
  423e3a:	mov    eax,edx
  423e3c:	mov    r11d,edx
  423e3f:	sar    eax,0x14
  423e42:	and    eax,0x7ff
  423e47:	lea    r8d,[rax-0x3ff]
  423e4e:	cmp    r8d,0x33
  423e52:	jle    0x423e70
  423e54:	cmp    r8d,0x400
  423e5b:	je     0x423f35
  423e61:	add    rsp,0x10
  423e65:	pop    rbx
  423e66:	ret    
  423e67:	nop    WORD PTR [rax+rax*1+0x0]
  423e70:	cmp    r8d,0x13
  423e74:	jg     0x423ee0
  423e76:	test   r8d,r8d
  423e79:	js     0x423f40
  423e7f:	mov    eax,0xfffff
  423e84:	mov    ecx,r8d
  423e87:	shr    eax,cl
  423e89:	test   r9d,r9d
  423e8c:	jne    0x423e92
  423e8e:	test   eax,edx
  423e90:	je     0x423e61
  423e92:	movsd  xmm1,QWORD PTR [rip+0x18d26]        # 0x43cbc0
  423e9a:	xorpd  xmm2,xmm2
  423e9e:	addsd  xmm1,xmm0
  423ea2:	ucomisd xmm2,xmm1
  423ea6:	jae    0x423e61
  423ea8:	xor    r9d,r9d
  423eab:	test   edx,edx
  423ead:	jns    0x423ebb
  423eaf:	mov    r9d,0x100000
  423eb5:	mov    ecx,r8d
  423eb8:	sar    r9d,cl
  423ebb:	add    edx,r9d
  423ebe:	not    eax
  423ec0:	and    eax,edx
  423ec2:	shl    rax,0x20
  423ec6:	mov    QWORD PTR [rsp+0x8],rax
  423ecb:	movsd  xmm0,QWORD PTR [rsp+0x8]
  423ed1:	add    rsp,0x10
  423ed5:	pop    rbx
  423ed6:	ret    
  423ed7:	nop    WORD PTR [rax+rax*1+0x0]
  423ee0:	lea    ecx,[rax-0x413]
  423ee6:	mov    ebx,0xffffffff
  423eeb:	shr    ebx,cl
  423eed:	test   ebx,r9d
  423ef0:	je     0x423e61
  423ef6:	movsd  xmm1,QWORD PTR [rip+0x18cc2]        # 0x43cbc0
  423efe:	xorpd  xmm2,xmm2
  423f02:	addsd  xmm1,xmm0
  423f06:	ucomisd xmm2,xmm1
  423f0a:	jae    0x423e61
  423f10:	test   edx,edx
  423f12:	js     0x423fa0
  423f18:	not    ebx
  423f1a:	shl    r11,0x20
  423f1e:	and    r10d,ebx
  423f21:	or     r11,r10
  423f24:	mov    QWORD PTR [rsp+0x8],r11
  423f29:	movsd  xmm0,QWORD PTR [rsp+0x8]
  423f2f:	add    rsp,0x10
  423f33:	pop    rbx
  423f34:	ret    
  423f35:	addsd  xmm0,xmm0
  423f39:	add    rsp,0x10
  423f3d:	pop    rbx
  423f3e:	ret    
  423f3f:	nop
  423f40:	movsd  xmm2,QWORD PTR [rip+0x18c78]        # 0x43cbc0
  423f48:	xorpd  xmm1,xmm1
  423f4c:	addsd  xmm2,xmm0
  423f50:	ucomisd xmm2,xmm1
  423f54:	jbe    0x423e61
  423f5a:	test   edx,edx
  423f5c:	js     0x423f70
  423f5e:	movapd xmm0,xmm1
  423f62:	jmp    0x423e61
  423f67:	nop    WORD PTR [rax+rax*1+0x0]
  423f70:	and    edx,0x7fffffff
  423f76:	or     edx,r9d
  423f79:	je     0x423e61
  423f7f:	movabs rax,0xbff0000000000000
  423f89:	mov    QWORD PTR [rsp+0x8],rax
  423f8e:	movsd  xmm0,QWORD PTR [rsp+0x8]
  423f94:	jmp    0x423e61
  423f99:	nop    DWORD PTR [rax+0x0]
  423fa0:	cmp    r8d,0x14
  423fa4:	je     0x423fbf
  423fa6:	mov    ecx,0x433
  423fab:	mov    r10d,0x1
  423fb1:	sub    ecx,eax
  423fb3:	shl    r10d,cl
  423fb6:	add    r10d,r9d
  423fb9:	jae    0x423f18
  423fbf:	lea    r11d,[rdx+0x1]
  423fc3:	jmp    0x423f18
  423fc8:	nop
  423fc9:	nop
  423fca:	nop
  423fcb:	nop
  423fcc:	nop
  423fcd:	nop
  423fce:	nop
  423fcf:	nop
  423fd0:	sub    rsp,0x48
  423fd4:	movaps XMMWORD PTR [rsp+0x20],xmm6
  423fd9:	movaps XMMWORD PTR [rsp+0x30],xmm7
  423fde:	movapd xmm6,xmm0
  423fe2:	ucomisd xmm0,QWORD PTR [rip+0x18be6]        # 0x43cbd0
  423fea:	jb     0x424020
  423fec:	call   0x427730
  423ff1:	movapd xmm1,xmm0
  423ff5:	subsd  xmm0,xmm6
  423ff9:	ucomisd xmm0,QWORD PTR [rip+0x18bd7]        # 0x43cbd8
  424001:	jbe    0x42400b
  424003:	subsd  xmm1,QWORD PTR [rip+0x18bd5]        # 0x43cbe0
  42400b:	movapd xmm0,xmm1
  42400f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  424014:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  424019:	add    rsp,0x48
  42401d:	ret    
  42401e:	xchg   ax,ax
  424020:	movsd  xmm7,QWORD PTR [rip+0x18bc8]        # 0x43cbf0
  424028:	xorpd  xmm0,xmm7
  42402c:	call   0x427730
  424031:	addsd  xmm6,xmm0
  424035:	ucomisd xmm6,QWORD PTR [rip+0x18b9b]        # 0x43cbd8
  42403d:	jbe    0x424047
  42403f:	subsd  xmm0,QWORD PTR [rip+0x18b99]        # 0x43cbe0
  424047:	movapd xmm1,xmm0
  42404b:	xorpd  xmm1,xmm7
  42404f:	jmp    0x42400b
  424051:	nop
  424052:	nop
  424053:	nop
  424054:	nop
  424055:	nop
  424056:	nop
  424057:	nop
  424058:	nop
  424059:	nop
  42405a:	nop
  42405b:	nop
  42405c:	nop
  42405d:	nop
  42405e:	nop
  42405f:	nop
  424060:	sub    rsp,0x38
  424064:	mov    r9,rdx
  424067:	mov    QWORD PTR [rsp+0x20],r8
  42406c:	mov    rdx,rcx
  42406f:	xor    r8d,r8d
  424072:	mov    ecx,0x6000
  424077:	call   0x429830
  42407c:	add    rsp,0x38
  424080:	ret    
  424081:	nop
  424082:	nop
  424083:	nop
  424084:	nop
  424085:	nop
  424086:	nop
  424087:	nop
  424088:	nop
  424089:	nop
  42408a:	nop
  42408b:	nop
  42408c:	nop
  42408d:	nop
  42408e:	nop
  42408f:	nop
  424090:	push   rbx
  424091:	sub    rsp,0x20
  424095:	test   rcx,rcx
  424098:	je     0x4240bd
  42409a:	mov    rax,QWORD PTR [rcx]
  42409d:	test   rax,rax
  4240a0:	je     0x4240bd
  4240a2:	sub    rdx,rax
  4240a5:	cmp    rdx,r8
  4240a8:	je     0x4240bd
  4240aa:	mov    rbx,rcx
  4240ad:	mov    rcx,rax
  4240b0:	call   0x42fb18
  4240b5:	test   rax,rax
  4240b8:	je     0x4240bd
  4240ba:	mov    QWORD PTR [rbx],rax
  4240bd:	add    rsp,0x20
  4240c1:	pop    rbx
  4240c2:	ret    
  4240c3:	nop    DWORD PTR [rax]
  4240c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4240d0:	push   rdi
  4240d1:	push   rsi
  4240d2:	push   rbx
  4240d3:	sub    rsp,0x20
  4240d7:	test   rdx,rdx
  4240da:	mov    rdi,rcx
  4240dd:	mov    rbx,rdx
  4240e0:	je     0x4240f1
  4240e2:	mov    rcx,QWORD PTR [rdx]
  4240e5:	call   0x42fba0
  4240ea:	mov    QWORD PTR [rbx],0x0
  4240f1:	test   rdi,rdi
  4240f4:	je     0x42414f
  4240f6:	mov    rsi,QWORD PTR [rdi]
  4240f9:	test   rsi,rsi
  4240fc:	je     0x42414f
  4240fe:	xchg   ax,ax
  424100:	xor    ebx,ebx
  424102:	cmp    QWORD PTR [rsi],0x0
  424106:	je     0x424132
  424108:	nop    DWORD PTR [rax+rax*1+0x0]
  424110:	mov    rax,QWORD PTR [rsi+rbx*8+0x10]
  424115:	mov    rcx,QWORD PTR [rax]
  424118:	call   0x42fba0
  42411d:	mov    rax,QWORD PTR [rsi+rbx*8+0x10]
  424122:	add    rbx,0x1
  424126:	cmp    QWORD PTR [rsi],rbx
  424129:	mov    QWORD PTR [rax],0x0
  424130:	ja     0x424110
  424132:	mov    rbx,QWORD PTR [rsi+0x8]
  424136:	mov    rcx,rsi
  424139:	call   0x42fba0
  42413e:	test   rbx,rbx
  424141:	je     0x424148
  424143:	mov    rsi,rbx
  424146:	jmp    0x424100
  424148:	mov    QWORD PTR [rdi],0x0
  42414f:	add    rsp,0x20
  424153:	pop    rbx
  424154:	pop    rsi
  424155:	pop    rdi
  424156:	ret    
  424157:	nop    WORD PTR [rax+rax*1+0x0]
  424160:	push   rsi
  424161:	push   rbx
  424162:	sub    rsp,0x38
  424166:	mov    r9,QWORD PTR [rdx]
  424169:	mov    rsi,rdx
  42416c:	cmp    r9,rcx
  42416f:	je     0x424180
  424171:	mov    rax,r8
  424174:	add    rsp,0x38
  424178:	pop    rbx
  424179:	pop    rsi
  42417a:	ret    
  42417b:	nop    DWORD PTR [rax+rax*1+0x0]
  424180:	lea    rbx,[r9+r9*1]
  424184:	mov    eax,0x100
  424189:	cmp    rbx,0x100
  424190:	cmovb  rbx,rax
  424194:	test   r8,r8
  424197:	je     0x4241c3
  424199:	mov    rcx,r8
  42419c:	mov    rdx,rbx
  42419f:	mov    QWORD PTR [rsp+0x28],r8
  4241a4:	call   0x42fb18
  4241a9:	test   rax,rax
  4241ac:	mov    r8,QWORD PTR [rsp+0x28]
  4241b1:	je     0x4241e0
  4241b3:	mov    r8,rax
  4241b6:	mov    QWORD PTR [rsi],rbx
  4241b9:	mov    rax,r8
  4241bc:	add    rsp,0x38
  4241c0:	pop    rbx
  4241c1:	pop    rsi
  4241c2:	ret    
  4241c3:	mov    rcx,rbx
  4241c6:	mov    QWORD PTR [rsp+0x28],r8
  4241cb:	call   0x42fb50
  4241d0:	test   rax,rax
  4241d3:	mov    r8,QWORD PTR [rsp+0x28]
  4241d8:	jne    0x4241b3
  4241da:	jmp    0x424171
  4241dc:	nop    DWORD PTR [rax+0x0]
  4241e0:	mov    rcx,r8
  4241e3:	call   0x42fba0
  4241e8:	xor    r8d,r8d
  4241eb:	jmp    0x424171
  4241ed:	nop    DWORD PTR [rax]
  4241f0:	push   r12
  4241f2:	push   rbp
  4241f3:	push   rdi
  4241f4:	push   rsi
  4241f5:	push   rbx
  4241f6:	sub    rsp,0x20
  4241fa:	cmp    ecx,0xffffffff
  4241fd:	mov    r12d,ecx
  424200:	mov    rsi,rdx
  424203:	mov    rbp,r8
  424206:	mov    rdi,r9
  424209:	je     0x424270
  42420b:	test   rdx,rdx
  42420e:	je     0x424238
  424210:	mov    rcx,QWORD PTR [rdx]
  424213:	test   rcx,rcx
  424216:	je     0x424231
  424218:	nop    DWORD PTR [rax+rax*1+0x0]
  424220:	mov    rbx,QWORD PTR [rcx+0x8]
  424224:	call   0x42fba0
  424229:	test   rbx,rbx
  42422c:	mov    rcx,rbx
  42422f:	jne    0x424220
  424231:	mov    QWORD PTR [rsi],0x0
  424238:	test   rbp,rbp
  42423b:	je     0x42424e
  42423d:	mov    rcx,QWORD PTR [rbp+0x0]
  424241:	call   0x42fba0
  424246:	mov    QWORD PTR [rbp+0x0],0x0
  42424e:	test   rdi,rdi
  424251:	je     0x424262
  424253:	mov    rcx,QWORD PTR [rdi]
  424256:	call   0x42fba0
  42425b:	mov    QWORD PTR [rdi],0x0
  424262:	mov    eax,r12d
  424265:	add    rsp,0x20
  424269:	pop    rbx
  42426a:	pop    rsi
  42426b:	pop    rdi
  42426c:	pop    rbp
  42426d:	pop    r12
  42426f:	ret    
  424270:	mov    rdx,r9
  424273:	mov    rcx,rsi
  424276:	call   0x4240d0
  42427b:	jmp    0x424262
  42427d:	nop    DWORD PTR [rax]
  424280:	sub    rsp,0x28
  424284:	test   edx,edx
  424286:	je     0x4242a0
  424288:	lea    r8d,[rdx-0x2]
  42428c:	cmp    edx,0x1
  42428f:	lea    rax,[rcx+r8*8+0x8]
  424294:	cmove  rax,rcx
  424298:	mov    rax,QWORD PTR [rax]
  42429b:	add    rsp,0x28
  42429f:	ret    
  4242a0:	call   0x42fbf8
  4242a5:	nop
  4242a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242b0:	push   rbx
  4242b1:	sub    rsp,0x20
  4242b5:	mov    rbx,rcx
  4242b8:	mov    ecx,0x110
  4242bd:	call   0x42fb50
  4242c2:	mov    QWORD PTR [rax],0x0
  4242c9:	mov    QWORD PTR [rax+0x8],rbx
  4242cd:	add    rsp,0x20
  4242d1:	pop    rbx
  4242d2:	ret    
  4242d3:	nop    DWORD PTR [rax]
  4242d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242e0:	push   rsi
  4242e1:	push   rbx
  4242e2:	sub    rsp,0x28
  4242e6:	mov    eax,DWORD PTR [rcx+0x100c]
  4242ec:	test   eax,eax
  4242ee:	je     0x424310
  4242f0:	sub    eax,0x1
  4242f3:	mov    DWORD PTR [rcx+0x100c],eax
  4242f9:	cdqe   
  4242fb:	mov    eax,DWORD PTR [rcx+rax*4+0x8]
  4242ff:	add    QWORD PTR [rdx],0x1
  424303:	add    rsp,0x28
  424307:	pop    rbx
  424308:	pop    rsi
  424309:	ret    
  42430a:	nop    WORD PTR [rax+rax*1+0x0]
  424310:	test   BYTE PTR [rcx+0x1010],0x1
  424317:	jne    0x424370
  424319:	test   BYTE PTR [rcx+0x1008],0x1
  424320:	mov    rbx,rcx
  424323:	mov    rsi,rdx
  424326:	mov    rcx,QWORD PTR [rcx]
  424329:	je     0x424344
  42432b:	movzx  eax,BYTE PTR [rcx]
  42432e:	add    rcx,0x1
  424332:	test   eax,eax
  424334:	je     0x424360
  424336:	add    QWORD PTR [rdx],0x1
  42433a:	mov    QWORD PTR [rbx],rcx
  42433d:	add    rsp,0x28
  424341:	pop    rbx
  424342:	pop    rsi
  424343:	ret    
  424344:	call   0x42fb90
  424349:	cmp    eax,0xffffffff
  42434c:	je     0x424360
  42434e:	add    QWORD PTR [rsi],0x1
  424352:	add    rsp,0x28
  424356:	pop    rbx
  424357:	pop    rsi
  424358:	ret    
  424359:	nop    DWORD PTR [rax+0x0]
  424360:	or     BYTE PTR [rbx+0x1010],0x1
  424367:	mov    eax,0xffffffff
  42436c:	jmp    0x424303
  42436e:	xchg   ax,ax
  424370:	mov    eax,0xffffffff
  424375:	jmp    0x424303
  424377:	nop    WORD PTR [rax+rax*1+0x0]
  424380:	push   rbx
  424381:	sub    rsp,0x20
  424385:	test   r9d,r9d
  424388:	jne    0x424395
  42438a:	cmp    ecx,0xffffffff
  42438d:	jne    0x424395
  42438f:	add    rsp,0x20
  424393:	pop    rbx
  424394:	ret    
  424395:	test   BYTE PTR [rdx+0x1008],0x1
  42439c:	je     0x4243c0
  42439e:	sub    QWORD PTR [r8],0x1
  4243a2:	movsxd r8,DWORD PTR [rdx+0x100c]
  4243a9:	mov    rax,r8
  4243ac:	mov    DWORD PTR [rdx+r8*4+0x8],ecx
  4243b1:	add    eax,0x1
  4243b4:	mov    DWORD PTR [rdx+0x100c],eax
  4243ba:	add    rsp,0x20
  4243be:	pop    rbx
  4243bf:	ret    
  4243c0:	mov    rdx,QWORD PTR [rdx]
  4243c3:	mov    rbx,r8
  4243c6:	call   0x42fa90
  4243cb:	sub    QWORD PTR [rbx],0x1
  4243cf:	add    rsp,0x20
  4243d3:	pop    rbx
  4243d4:	ret    
  4243d5:	nop
  4243d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243e0:	push   r15
  4243e2:	push   r14
  4243e4:	push   r13
  4243e6:	push   r12
  4243e8:	push   rbp
  4243e9:	push   rdi
  4243ea:	push   rsi
  4243eb:	push   rbx
  4243ec:	sub    rsp,0x168
  4243f3:	movaps XMMWORD PTR [rsp+0x130],xmm6
  4243fb:	movaps XMMWORD PTR [rsp+0x140],xmm7
  424403:	movaps XMMWORD PTR [rsp+0x150],xmm8
  42440c:	test   rcx,rcx
  42440f:	mov    r14,rcx
  424412:	mov    rbp,rdx
  424415:	mov    QWORD PTR [rsp+0x1c0],r8
  42441d:	mov    QWORD PTR [rsp+0x108],0x0
  424429:	mov    QWORD PTR [rsp+0x110],0x0
  424435:	mov    QWORD PTR [rsp+0x118],0x0
  424441:	mov    QWORD PTR [rsp+0x120],0x0
  42444d:	je     0x426395
  424453:	test   rdx,rdx
  424456:	sete   dl
  424459:	cmp    QWORD PTR [rcx],0x0
  42445d:	sete   al
  424460:	or     dl,al
  424462:	jne    0x426395
  424468:	mov    DWORD PTR [rsp+0xf8],0x0
  424473:	call   0x42fb58
  424478:	mov    rax,QWORD PTR [rax]
  42447b:	mov    QWORD PTR [rsp+0x70],rax
  424480:	call   0x42fb58
  424485:	mov    rax,QWORD PTR [rax+0x8]
  424489:	test   rax,rax
  42448c:	mov    QWORD PTR [rsp+0x40],rax
  424491:	mov    rdi,rax
  424494:	je     0x4244a7
  424496:	cmp    BYTE PTR [rax],0x0
  424499:	mov    eax,0x0
  42449e:	cmovne rax,rdi
  4244a2:	mov    QWORD PTR [rsp+0x40],rax
  4244a7:	mov    rax,QWORD PTR [rsp+0x1c0]
  4244af:	movzx  esi,BYTE PTR [rbp+0x0]
  4244b3:	xor    r13d,r13d
  4244b6:	mov    DWORD PTR [rsp+0x48],0x0
  4244be:	mov    DWORD PTR [rsp+0x4c],0x0
  4244c6:	lea    r12,[rsp+0x110]
  4244ce:	mov    QWORD PTR [rsp+0x78],0x0
  4244d7:	mov    QWORD PTR [rsp+0x28],0x0
  4244e0:	movss  xmm7,DWORD PTR [rip+0x18918]        # 0x43ce00
  4244e8:	mov    QWORD PTR [rsp+0x50],rax
  4244ed:	lea    rax,[rsp+0xfc]
  4244f5:	mov    QWORD PTR [rsp+0x80],0x0
  424501:	test   sil,sil
  424504:	mov    QWORD PTR [rsp+0x58],0x0
  42450d:	mov    r15d,r13d
  424510:	mov    QWORD PTR [rsp+0x88],rax
  424518:	lea    rax,[rsp+0x100]
  424520:	movsd  xmm6,QWORD PTR [rip+0x188c8]        # 0x43cdf0
  424528:	mov    QWORD PTR [rsp+0x90],rax
  424530:	lea    rax,[rsp+0x128]
  424538:	mov    QWORD PTR [rsp+0x98],rax
  424540:	je     0x424576
  424542:	test   sil,sil
  424545:	js     0x4248e0
  42454b:	cmp    sil,0x25
  42454f:	lea    rbx,[rbp+0x1]
  424553:	je     0x4245c0
  424555:	mov    ecx,esi
  424557:	call   0x42fb70
  42455c:	test   eax,eax
  42455e:	je     0x424733
  424564:	mov    r13d,0x1
  42456a:	mov    rbp,rbx
  42456d:	movzx  esi,BYTE PTR [rbp+0x0]
  424571:	test   sil,sil
  424574:	jne    0x424542
  424576:	test   r13d,r13d
  424579:	je     0x424890
  42457f:	lea    rsi,[rsp+0x110]
  424587:	nop    WORD PTR [rax+rax*1+0x0]
  424590:	mov    rdx,rsi
  424593:	mov    rcx,r14
  424596:	call   0x4242e0
  42459b:	mov    ecx,eax
  42459d:	mov    ebx,eax
  42459f:	call   0x42fb70
  4245a4:	test   eax,eax
  4245a6:	jne    0x424590
  4245a8:	xor    r9d,r9d
  4245ab:	mov    r8,rsi
  4245ae:	mov    rdx,r14
  4245b1:	mov    ecx,ebx
  4245b3:	call   0x424380
  4245b8:	jmp    0x424890
  4245bd:	nop    DWORD PTR [rax]
  4245c0:	movzx  edi,BYTE PTR [rbp+0x1]
  4245c4:	mov    eax,edi
  4245c6:	sub    edi,0x30
  4245c9:	cmp    edi,0x9
  4245cc:	jbe    0x424790
  4245d2:	mov    edx,eax
  4245d4:	xor    edi,edi
  4245d6:	xor    eax,eax
  4245d8:	mov    rcx,QWORD PTR [rsp+0x40]
  4245dd:	jmp    0x4245ff
  4245df:	nop
  4245e0:	cmp    dl,0x27
  4245e3:	je     0x424610
  4245e5:	cmp    dl,0x49
  4245e8:	jne    0x424650
  4245ea:	movzx  edx,BYTE PTR [rbx+0x1]
  4245ee:	cmp    dl,0x36
  4245f1:	je     0x424620
  4245f3:	cmp    dl,0x33
  4245f6:	je     0x424633
  4245f8:	or     eax,0xc
  4245fb:	add    rbx,0x1
  4245ff:	cmp    dl,0x2a
  424602:	jne    0x4245e0
  424604:	or     al,0x80
  424606:	movzx  edx,BYTE PTR [rbx+0x1]
  42460a:	jmp    0x4245fb
  42460c:	nop    DWORD PTR [rax+0x0]
  424610:	test   rcx,rcx
  424613:	je     0x424618
  424615:	or     ah,0x1
  424618:	movzx  edx,BYTE PTR [rbx+0x1]
  42461c:	jmp    0x4245fb
  42461e:	xchg   ax,ax
  424620:	cmp    BYTE PTR [rbx+0x2],0x34
  424624:	jne    0x4245f8
  424626:	movzx  edx,BYTE PTR [rbx+0x3]
  42462a:	or     eax,0xc
  42462d:	add    rbx,0x2
  424631:	jmp    0x4245fb
  424633:	cmp    BYTE PTR [rbx+0x2],0x32
  424637:	jne    0x4245f8
  424639:	movzx  edx,BYTE PTR [rbx+0x3]
  42463d:	or     eax,0x4
  424640:	add    rbx,0x2
  424644:	jmp    0x4245fb
  424646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424650:	movzx  ecx,dl
  424653:	xor    r8d,r8d
  424656:	mov    DWORD PTR [rsp+0x30],eax
  42465a:	lea    r9d,[rcx-0x30]
  42465e:	mov    esi,0xffffffff
  424663:	cmp    r9d,0x9
  424667:	ja     0x424698
  424669:	nop    DWORD PTR [rax+0x0]
  424670:	lea    edx,[r8+r8*4]
  424674:	add    rbx,0x1
  424678:	lea    r8d,[rcx+rdx*2-0x30]
  42467d:	movzx  ecx,BYTE PTR [rbx]
  424680:	lea    r9d,[rcx-0x30]
  424684:	mov    edx,ecx
  424686:	cmp    r9d,0x9
  42468a:	jbe    0x424670
  42468c:	test   r8d,r8d
  42468f:	mov    esi,0xffffffff
  424694:	cmovne esi,r8d
  424698:	cmp    dl,0x6a
  42469b:	je     0x424963
  4246a1:	jle    0x4247e0
  4246a7:	cmp    dl,0x71
  4246aa:	je     0x425681
  4246b0:	jg     0x424940
  4246b6:	cmp    dl,0x6c
  4246b9:	je     0x4249a5
  4246bf:	cmp    dl,0x6d
  4246c2:	jne    0x424998
  4246c8:	movzx  ebp,BYTE PTR [rbx+0x1]
  4246cc:	cmp    bpl,0x6c
  4246d0:	je     0x4263ee
  4246d6:	or     ah,0x4
  4246d9:	mov    DWORD PTR [rsp+0x30],eax
  4246dd:	lea    rax,[rbx+0x1]
  4246e1:	mov    QWORD PTR [rsp+0x60],rax
  4246e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4246f0:	test   bpl,bpl
  4246f3:	je     0x424890
  4246f9:	mov    rax,QWORD PTR [rsp+0x60]
  4246fe:	test   r13d,r13d
  424701:	lea    rbx,[rax+0x1]
  424705:	jne    0x4250d5
  42470b:	cmp    bpl,0x5b
  42470f:	jne    0x4253f0
  424715:	lea    eax,[rbp-0x25]
  424718:	cmp    al,0x53
  42471a:	ja     0x424890
  424720:	lea    rdx,[rip+0x184ed]        # 0x43cc14
  424727:	movzx  eax,al
  42472a:	movsxd rax,DWORD PTR [rdx+rax*4]
  42472e:	add    rdx,rax
  424731:	jmp    rdx
  424733:	mov    rdx,r12
  424736:	mov    rcx,r14
  424739:	call   0x4242e0
  42473e:	cmp    eax,0xffffffff
  424741:	mov    r15d,eax
  424744:	je     0x4263aa
  42474a:	test   r13d,r13d
  42474d:	jne    0x424777
  42474f:	cmp    esi,r15d
  424752:	jne    0x424875
  424758:	xor    r13d,r13d
  42475b:	jmp    0x42456a
  424760:	mov    rdx,r12
  424763:	mov    rcx,r14
  424766:	call   0x4242e0
  42476b:	cmp    eax,0xffffffff
  42476e:	mov    r15d,eax
  424771:	je     0x42569a
  424777:	mov    ecx,r15d
  42477a:	call   0x42fb70
  42477f:	test   eax,eax
  424781:	jne    0x424760
  424783:	cmp    esi,r15d
  424786:	je     0x424758
  424788:	jmp    0x424875
  42478d:	nop    DWORD PTR [rax]
  424790:	movzx  edx,BYTE PTR [rbp+0x2]
  424794:	lea    rcx,[rbp+0x2]
  424798:	lea    r9d,[rdx-0x30]
  42479c:	mov    r8d,edx
  42479f:	cmp    r9d,0x9
  4247a3:	ja     0x4247c2
  4247a5:	lea    r8d,[rdi+rdi*4]
  4247a9:	add    rcx,0x1
  4247ad:	lea    edi,[rdx+r8*2-0x30]
  4247b2:	movzx  edx,BYTE PTR [rcx]
  4247b5:	lea    r9d,[rdx-0x30]
  4247b9:	mov    r8d,edx
  4247bc:	cmp    r9d,0x9
  4247c0:	jbe    0x4247a5
  4247c2:	cmp    r8b,0x24
  4247c6:	jne    0x4245d2
  4247cc:	lea    rbx,[rcx+0x1]
  4247d0:	movzx  edx,BYTE PTR [rcx+0x1]
  4247d4:	jmp    0x4245d6
  4247d9:	nop    DWORD PTR [rax+0x0]
  4247e0:	cmp    dl,0x4c
  4247e3:	je     0x425681
  4247e9:	jle    0x425674
  4247ef:	cmp    dl,0x61
  4247f2:	je     0x42497c
  4247f8:	cmp    dl,0x68
  4247fb:	jne    0x424998
  424801:	movzx  ebp,BYTE PTR [rbx+0x1]
  424805:	cmp    bpl,0x68
  424809:	je     0x4263d5
  42480f:	lea    rcx,[rbx+0x1]
  424813:	or     eax,0x2
  424816:	mov    DWORD PTR [rsp+0x30],eax
  42481a:	mov    QWORD PTR [rsp+0x60],rcx
  42481f:	jmp    0x4246f0
  424824:	test   BYTE PTR [rsp+0x30],0x20
  424829:	je     0x424875
  42482b:	mov    ecx,r15d
  42482e:	call   0x42fa98
  424833:	cmp    al,0x28
  424835:	jne    0x424875
  424837:	mov    esi,0x6e
  42483c:	lea    rbp,[rip+0x183be]        # 0x43cc01
  424843:	jmp    0x424862
  424845:	mov    ecx,eax
  424847:	call   0x42fa98
  42484c:	cmp    sil,al
  42484f:	jne    0x424875
  424851:	add    rbp,0x1
  424855:	movzx  esi,BYTE PTR [rbp+0x0]
  424859:	test   sil,sil
  42485c:	je     0x426f73
  424862:	mov    rdx,r12
  424865:	mov    rcx,r14
  424868:	call   0x4242e0
  42486d:	cmp    eax,0xffffffff
  424870:	mov    r15d,eax
  424873:	jne    0x424845
  424875:	xor    r9d,r9d
  424878:	mov    r8,r12
  42487b:	mov    rdx,r14
  42487e:	mov    ecx,r15d
  424881:	call   0x424380
  424886:	jmp    0x424890
  424888:	fstp   st(0)
  42488a:	nop    WORD PTR [rax+rax*1+0x0]
  424890:	mov    r8,QWORD PTR [rsp+0x28]
  424895:	mov    ecx,DWORD PTR [rsp+0x4c]
  424899:	lea    rdx,[rsp+0x108]
  4248a1:	lea    r9,[rsp+0x120]
  4248a9:	call   0x4241f0
  4248ae:	nop
  4248af:	movaps xmm6,XMMWORD PTR [rsp+0x130]
  4248b7:	movaps xmm7,XMMWORD PTR [rsp+0x140]
  4248bf:	movaps xmm8,XMMWORD PTR [rsp+0x150]
  4248c8:	add    rsp,0x168
  4248cf:	pop    rbx
  4248d0:	pop    rsi
  4248d1:	pop    rdi
  4248d2:	pop    rbp
  4248d3:	pop    r12
  4248d5:	pop    r13
  4248d7:	pop    r14
  4248d9:	pop    r15
  4248db:	ret    
  4248dc:	nop    DWORD PTR [rax+0x0]
  4248e0:	mov    rcx,rbp
  4248e3:	call   0x42fad8
  4248e8:	lea    r8,[rsp+0xf8]
  4248f0:	mov    rdx,rax
  4248f3:	mov    rcx,rbp
  4248f6:	call   0x427b20
  4248fb:	test   eax,eax
  4248fd:	jle    0x42566b
  424903:	sub    eax,0x1
  424906:	lea    rbx,[rbp+rax*1+0x1]
  42490b:	mov    rdx,r12
  42490e:	mov    rcx,r14
  424911:	call   0x4242e0
  424916:	cmp    eax,0xffffffff
  424919:	je     0x42562b
  42491f:	add    rbp,0x1
  424923:	movzx  r8d,BYTE PTR [rbp-0x1]
  424928:	cmp    eax,r8d
  42492b:	jne    0x42562b
  424931:	cmp    rbp,rbx
  424934:	jne    0x42490b
  424936:	mov    r15d,eax
  424939:	jmp    0x42456a
  42493e:	xchg   ax,ax
  424940:	cmp    dl,0x74
  424943:	je     0x424963
  424945:	cmp    dl,0x7a
  424948:	jne    0x424998
  42494a:	or     eax,0xc
  42494d:	movzx  ebp,BYTE PTR [rbx+0x1]
  424951:	mov    DWORD PTR [rsp+0x30],eax
  424955:	lea    rax,[rbx+0x1]
  424959:	mov    QWORD PTR [rsp+0x60],rax
  42495e:	jmp    0x4246f0
  424963:	or     eax,0x8
  424966:	movzx  ebp,BYTE PTR [rbx+0x1]
  42496a:	mov    DWORD PTR [rsp+0x30],eax
  42496e:	lea    rax,[rbx+0x1]
  424972:	mov    QWORD PTR [rsp+0x60],rax
  424977:	jmp    0x4246f0
  42497c:	movzx  ebp,BYTE PTR [rbx+0x1]
  424980:	mov    edx,ebp
  424982:	and    edx,0xfffffff7
  424985:	cmp    dl,0x53
  424988:	je     0x42597d
  42498e:	cmp    bpl,0x73
  424992:	je     0x42597d
  424998:	movzx  ebp,BYTE PTR [rbx]
  42499b:	mov    QWORD PTR [rsp+0x60],rbx
  4249a0:	jmp    0x4246f0
  4249a5:	movzx  ebp,BYTE PTR [rbx+0x1]
  4249a9:	cmp    bpl,0x6c
  4249ad:	je     0x426409
  4249b3:	add    rbx,0x1
  4249b7:	or     eax,0x4
  4249ba:	mov    QWORD PTR [rsp+0x60],rbx
  4249bf:	mov    DWORD PTR [rsp+0x30],eax
  4249c3:	jmp    0x4246f0
  4249c8:	xor    r13d,r13d
  4249cb:	test   BYTE PTR [rsp+0x30],0x80
  4249d0:	jne    0x42456a
  4249d6:	test   BYTE PTR [rsp+0x30],0x8
  4249db:	je     0x42656f
  4249e1:	test   edi,edi
  4249e3:	jne    0x426c92
  4249e9:	mov    rsi,QWORD PTR [rsp+0x50]
  4249ee:	mov    rax,QWORD PTR [rsi]
  4249f1:	add    rsi,0x8
  4249f5:	mov    QWORD PTR [rsp+0x50],rsi
  4249fa:	mov    rdx,QWORD PTR [rsp+0x110]
  424a02:	xor    r13d,r13d
  424a05:	mov    QWORD PTR [rax],rdx
  424a08:	jmp    0x42456a
  424a0d:	mov    r13d,DWORD PTR [rsp+0x30]
  424a12:	and    r13d,0x4
  424a16:	jne    0x425992
  424a1c:	test   BYTE PTR [rsp+0x30],0x80
  424a21:	jne    0x424ac5
  424a27:	test   DWORD PTR [rsp+0x30],0x600
  424a2f:	je     0x426be0
  424a35:	test   edi,edi
  424a37:	jne    0x426f5a
  424a3d:	mov    rax,QWORD PTR [rsp+0x50]
  424a42:	mov    rdi,QWORD PTR [rax]
  424a45:	add    rax,0x8
  424a49:	mov    QWORD PTR [rsp+0x50],rax
  424a4e:	mov    QWORD PTR [rsp+0x28],rdi
  424a53:	cmp    QWORD PTR [rsp+0x28],0x0
  424a59:	je     0x427098
  424a5f:	mov    ecx,0x64
  424a64:	call   0x42fb50
  424a69:	mov    rdi,QWORD PTR [rsp+0x28]
  424a6e:	test   rax,rax
  424a71:	mov    QWORD PTR [rsp+0x80],rax
  424a79:	mov    QWORD PTR [rdi],rax
  424a7c:	je     0x4259f5
  424a82:	mov    rax,QWORD PTR [rsp+0x108]
  424a8a:	test   rax,rax
  424a8d:	je     0x424a98
  424a8f:	mov    rdx,QWORD PTR [rax]
  424a92:	cmp    rdx,0x1f
  424a96:	jbe    0x424aa3
  424a98:	mov    rcx,rax
  424a9b:	call   0x4242b0
  424aa0:	mov    rdx,QWORD PTR [rax]
  424aa3:	mov    rdi,QWORD PTR [rsp+0x28]
  424aa8:	lea    rcx,[rdx+0x1]
  424aac:	mov    QWORD PTR [rsp+0x108],rax
  424ab4:	mov    QWORD PTR [rax],rcx
  424ab7:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  424abc:	mov    QWORD PTR [rsp+0x58],0x64
  424ac5:	mov    rax,QWORD PTR [rsp+0x60]
  424aca:	cmp    BYTE PTR [rax+0x1],0x5e
  424ace:	sete   bpl
  424ad2:	add    rax,0x2
  424ad6:	test   bpl,bpl
  424ad9:	cmovne rbx,rax
  424add:	test   esi,esi
  424adf:	mov    eax,0x7fffffff
  424ae4:	cmovs  esi,eax
  424ae7:	cmp    QWORD PTR [rsp+0x118],0xff
  424af3:	jbe    0x426187
  424af9:	mov    rax,QWORD PTR [rsp+0x120]
  424b01:	lea    rdi,[rax+0x8]
  424b05:	mov    QWORD PTR [rax],0x0
  424b0c:	mov    QWORD PTR [rax+0xf8],0x0
  424b17:	and    rdi,0xfffffffffffffff8
  424b1b:	sub    rax,rdi
  424b1e:	lea    ecx,[rax+0x100]
  424b24:	xor    eax,eax
  424b26:	shr    ecx,0x3
  424b29:	rep stos QWORD PTR es:[rdi],rax
  424b2c:	movzx  edx,BYTE PTR [rbx]
  424b2f:	cmp    dl,0x2d
  424b32:	je     0x42616f
  424b38:	cmp    dl,0x5d
  424b3b:	movzx  eax,dl
  424b3e:	jne    0x424b57
  424b40:	jmp    0x42616f
  424b45:	mov    rdx,QWORD PTR [rsp+0x120]
  424b4d:	mov    BYTE PTR [rdx+rax*1],0x1
  424b51:	movzx  edx,BYTE PTR [rbx]
  424b54:	movzx  eax,dl
  424b57:	add    rbx,0x1
  424b5b:	test   al,al
  424b5d:	je     0x424890
  424b63:	cmp    al,0x5d
  424b65:	je     0x425f65
  424b6b:	cmp    al,0x2d
  424b6d:	jne    0x424b45
  424b6f:	movzx  edx,BYTE PTR [rbx]
  424b72:	test   dl,dl
  424b74:	je     0x424b45
  424b76:	cmp    dl,0x5d
  424b79:	je     0x424b45
  424b7b:	movzx  ecx,BYTE PTR [rbx-0x2]
  424b7f:	cmp    cl,dl
  424b81:	ja     0x424b45
  424b83:	jae    0x424b54
  424b85:	mov    rdx,QWORD PTR [rsp+0x120]
  424b8d:	movzx  eax,cl
  424b90:	add    ecx,0x1
  424b93:	mov    BYTE PTR [rdx+rax*1],0x1
  424b97:	cmp    BYTE PTR [rbx],cl
  424b99:	ja     0x424b85
  424b9b:	jmp    0x424b51
  424b9d:	sub    ebp,0x58
  424ba0:	cmp    bpl,0x20
  424ba4:	ja     0x424e8f
  424baa:	lea    rax,[rip+0x181b3]        # 0x43cd64
  424bb1:	movzx  ebp,bpl
  424bb5:	movsxd rdx,DWORD PTR [rax+rbp*4]
  424bb9:	add    rax,rdx
  424bbc:	jmp    rax
  424bbe:	xor    eax,eax
  424bc0:	test   esi,esi
  424bc2:	mov    rdx,r12
  424bc5:	setg   al
  424bc8:	mov    rcx,r14
  424bcb:	sub    esi,eax
  424bcd:	call   0x4242e0
  424bd2:	cmp    eax,0xffffffff
  424bd5:	mov    r15d,eax
  424bd8:	je     0x4263aa
  424bde:	cmp    eax,0x2d
  424be1:	lea    eax,[rax-0x2b]
  424be4:	sete   BYTE PTR [rsp+0xd3]
  424bec:	and    eax,0xfffffffd
  424bef:	jne    0x424c1b
  424bf1:	test   esi,esi
  424bf3:	je     0x424890
  424bf9:	mov    rdx,r12
  424bfc:	mov    rcx,r14
  424bff:	call   0x4242e0
  424c04:	cmp    eax,0xffffffff
  424c07:	mov    r15d,eax
  424c0a:	je     0x424890
  424c10:	test   esi,esi
  424c12:	jle    0x426b93
  424c18:	sub    esi,0x1
  424c1b:	mov    ecx,r15d
  424c1e:	call   0x42fa98
  424c23:	cmp    eax,0x6e
  424c26:	je     0x4268e1
  424c2c:	cmp    eax,0x69
  424c2f:	je     0x4269f7
  424c35:	xor    ebp,ebp
  424c37:	test   esi,esi
  424c39:	mov    BYTE PTR [rsp+0xb0],0x65
  424c41:	jne    0x425a24
  424c47:	mov    ecx,DWORD PTR [rsp+0x30]
  424c4b:	lea    rax,[rsp+0x118]
  424c53:	mov    BYTE PTR [rsp+0x60],0x0
  424c58:	mov    BYTE PTR [rsp+0xa0],0x0
  424c60:	mov    QWORD PTR [rsp+0xc8],rbx
  424c68:	mov    QWORD PTR [rsp+0xa8],rax
  424c70:	mov    DWORD PTR [rsp+0xd4],edi
  424c77:	mov    eax,ecx
  424c79:	and    eax,0x100
  424c7e:	mov    DWORD PTR [rsp+0xc4],eax
  424c85:	mov    eax,ecx
  424c87:	and    eax,0x40
  424c8a:	mov    DWORD PTR [rsp+0xc0],eax
  424c91:	lea    eax,[r15-0x30]
  424c95:	cmp    eax,0x9
  424c98:	jbe    0x425391
  424c9e:	cmp    BYTE PTR [rsp+0x60],0x0
  424ca3:	je     0x425370
  424ca9:	mov    r8,QWORD PTR [rsp+0x120]
  424cb1:	movzx  eax,BYTE PTR [rsp+0xb0]
  424cb9:	cmp    BYTE PTR [r8+rbp*1-0x1],al
  424cbe:	je     0x4256c5
  424cc4:	cmp    BYTE PTR [rsp+0x60],0x0
  424cc9:	jne    0x424ce5
  424ccb:	test   rbp,rbp
  424cce:	je     0x424ce5
  424cd0:	mov    ecx,r15d
  424cd3:	call   0x42fa98
  424cd8:	cmp    BYTE PTR [rsp+0xb0],al
  424cdf:	je     0x425f23
  424ce5:	test   esi,esi
  424ce7:	mov    ebx,0x7fffffff
  424cec:	cmovg  ebx,esi
  424cef:	cmp    BYTE PTR [rsp+0xa0],0x0
  424cf7:	jne    0x425583
  424cfd:	mov    rdi,QWORD PTR [rsp+0x70]
  424d02:	movzx  edx,BYTE PTR [rdi]
  424d05:	cmp    edx,r15d
  424d08:	mov    eax,edx
  424d0a:	jne    0x426d43
  424d10:	cmp    BYTE PTR [rdi+0x1],0x0
  424d14:	lea    r13,[rdi+0x1]
  424d18:	jne    0x424d47
  424d1a:	jmp    0x4255bf
  424d1f:	nop
  424d20:	movzx  edx,BYTE PTR [r13+0x0]
  424d25:	sub    ebx,0x1
  424d28:	cmp    edx,eax
  424d2a:	jne    0x425d30
  424d30:	add    r13,0x1
  424d34:	cmp    BYTE PTR [r13+0x0],0x0
  424d39:	je     0x4255b4
  424d3f:	test   ebx,ebx
  424d41:	je     0x425d3a
  424d47:	mov    rdx,r12
  424d4a:	mov    rcx,r14
  424d4d:	call   0x4242e0
  424d52:	cmp    eax,0xffffffff
  424d55:	jne    0x424d20
  424d57:	mov    r15d,eax
  424d5a:	movzx  eax,BYTE PTR [r13+0x0]
  424d5f:	test   al,al
  424d61:	je     0x425d42
  424d67:	mov    r9d,DWORD PTR [rsp+0xc4]
  424d6f:	test   r9d,r9d
  424d72:	je     0x425591
  424d78:	mov    r9,QWORD PTR [rsp+0x70]
  424d7d:	mov    r8,r13
  424d80:	sub    r8,r9
  424d83:	test   r8,r8
  424d86:	jle    0x426ecd
  424d8c:	mov    rcx,QWORD PTR [rsp+0x40]
  424d91:	movzx  eax,BYTE PTR [r9]
  424d95:	cmp    BYTE PTR [rcx],al
  424d97:	jne    0x426ed9
  424d9d:	mov    rax,rcx
  424da0:	jmp    0x424db0
  424da2:	movzx  edi,BYTE PTR [r9+rdx*1]
  424da7:	cmp    BYTE PTR [rax],dil
  424daa:	jne    0x42559f
  424db0:	add    rax,0x1
  424db4:	mov    rdx,rax
  424db7:	sub    rdx,rcx
  424dba:	cmp    r8,rdx
  424dbd:	jg     0x424da2
  424dbf:	cmp    r8,rdx
  424dc2:	jne    0x425596
  424dc8:	movzx  ecx,BYTE PTR [rax]
  424dcb:	cmp    r15d,ecx
  424dce:	mov    edx,ecx
  424dd0:	jne    0x4255a2
  424dd6:	movzx  edx,BYTE PTR [rax+0x1]
  424dda:	lea    r13,[rax+0x1]
  424dde:	test   dl,dl
  424de0:	jne    0x424e12
  424de2:	jmp    0x4255aa
  424de7:	nop    WORD PTR [rax+rax*1+0x0]
  424df0:	movzx  r15d,BYTE PTR [r13+0x0]
  424df5:	sub    ebx,0x1
  424df8:	cmp    r15d,eax
  424dfb:	jne    0x426cba
  424e01:	add    r13,0x1
  424e05:	movzx  edx,BYTE PTR [r13+0x0]
  424e0a:	test   dl,dl
  424e0c:	je     0x4255aa
  424e12:	test   ebx,ebx
  424e14:	je     0x4255a2
  424e1a:	mov    rdx,r12
  424e1d:	mov    rcx,r14
  424e20:	call   0x4242e0
  424e25:	cmp    eax,0xffffffff
  424e28:	jne    0x424df0
  424e2a:	movzx  edx,BYTE PTR [r13+0x0]
  424e2f:	mov    r15d,eax
  424e32:	jmp    0x4255a2
  424e37:	nop    WORD PTR [rax+rax*1+0x0]
  424e40:	mov    rdx,r12
  424e43:	mov    rcx,r14
  424e46:	call   0x4242e0
  424e4b:	cmp    eax,0xffffffff
  424e4e:	mov    r15d,eax
  424e51:	je     0x4263aa
  424e57:	cmp    eax,0x25
  424e5a:	je     0x424758
  424e60:	mov    r9d,0x1
  424e66:	mov    r8,r12
  424e69:	mov    rdx,r14
  424e6c:	mov    ecx,r15d
  424e6f:	call   0x424380
  424e74:	jmp    0x424890
  424e79:	mov    eax,DWORD PTR [rsp+0x30]
  424e7d:	mov    DWORD PTR [rsp+0x48],0x10
  424e85:	and    eax,0xfffffff1
  424e88:	or     eax,0x2c
  424e8b:	mov    DWORD PTR [rsp+0x30],eax
  424e8f:	mov    rdx,r12
  424e92:	mov    rcx,r14
  424e95:	call   0x4242e0
  424e9a:	cmp    eax,0xffffffff
  424e9d:	mov    r15d,eax
  424ea0:	je     0x4263aa
  424ea6:	lea    eax,[rax-0x2b]
  424ea9:	mov    QWORD PTR [rsp+0xa0],0x0
  424eb5:	and    eax,0xfffffffd
  424eb8:	je     0x4264a9
  424ebe:	test   esi,esi
  424ec0:	setne  al
  424ec3:	cmp    r15d,0x30
  424ec7:	jne    0x425b45
  424ecd:	test   al,al
  424ecf:	je     0x425b45
  424ed5:	test   esi,esi
  424ed7:	jle    0x42661e
  424edd:	mov    r15,QWORD PTR [rsp+0xa0]
  424ee5:	lea    r13,[rsp+0x118]
  424eed:	mov    r8,QWORD PTR [rsp+0x120]
  424ef5:	sub    esi,0x1
  424ef8:	mov    rdx,r13
  424efb:	mov    rcx,r15
  424efe:	lea    r13,[r15+0x1]
  424f02:	call   0x424160
  424f07:	mov    rdx,r12
  424f0a:	mov    QWORD PTR [rsp+0x120],rax
  424f12:	mov    rcx,r14
  424f15:	mov    BYTE PTR [rax+r15*1],0x30
  424f1a:	call   0x4242e0
  424f1f:	mov    r15d,eax
  424f22:	xor    eax,eax
  424f24:	test   esi,esi
  424f26:	mov    QWORD PTR [rsp+0xa0],r13
  424f2e:	jne    0x426660
  424f34:	mov    ecx,DWORD PTR [rsp+0x48]
  424f38:	mov    edx,0x8
  424f3d:	test   ecx,ecx
  424f3f:	cmovne edx,ecx
  424f42:	mov    DWORD PTR [rsp+0x48],edx
  424f46:	test   al,al
  424f48:	je     0x424fce
  424f4e:	mov    eax,DWORD PTR [rsp+0x30]
  424f52:	mov    r13,QWORD PTR [rsp+0x40]
  424f57:	mov    rbp,QWORD PTR [rsp+0xa0]
  424f5f:	mov    DWORD PTR [rsp+0xc0],edi
  424f66:	mov    edi,r15d
  424f69:	mov    QWORD PTR [rsp+0xb0],rbx
  424f71:	and    eax,0x100
  424f76:	mov    DWORD PTR [rsp+0xa8],eax
  424f7d:	lea    rax,[rsp+0x118]
  424f85:	mov    QWORD PTR [rsp+0x60],rax
  424f8a:	nop    WORD PTR [rax+rax*1+0x0]
  424f90:	cmp    DWORD PTR [rsp+0x48],0x10
  424f95:	je     0x425bb2
  424f9b:	lea    eax,[rdi-0x30]
  424f9e:	cmp    eax,0x9
  424fa1:	ja     0x425c15
  424fa7:	lea    eax,[rdi-0x2f]
  424faa:	cmp    eax,DWORD PTR [rsp+0x48]
  424fae:	jle    0x425bc1
  424fb4:	mov    r15d,edi
  424fb7:	mov    rbx,QWORD PTR [rsp+0xb0]
  424fbf:	mov    edi,DWORD PTR [rsp+0xc0]
  424fc6:	mov    QWORD PTR [rsp+0xa0],rbp
  424fce:	cmp    QWORD PTR [rsp+0xa0],0x0
  424fd7:	je     0x424824
  424fdd:	cmp    QWORD PTR [rsp+0xa0],0x1
  424fe6:	jne    0x424ffe
  424fe8:	mov    rax,QWORD PTR [rsp+0x120]
  424ff0:	movzx  eax,BYTE PTR [rax]
  424ff3:	sub    eax,0x2b
  424ff6:	test   al,0xfd
  424ff8:	je     0x424875
  424ffe:	lea    r13,[rsp+0x118]
  425006:	xor    r9d,r9d
  425009:	mov    r8,r12
  42500c:	mov    rdx,r14
  42500f:	mov    ecx,r15d
  425012:	call   0x424380
  425017:	mov    rsi,QWORD PTR [rsp+0xa0]
  42501f:	mov    r8,QWORD PTR [rsp+0x120]
  425027:	mov    rdx,r13
  42502a:	mov    rcx,rsi
  42502d:	call   0x424160
  425032:	mov    QWORD PTR [rsp+0x120],rax
  42503a:	mov    BYTE PTR [rax+rsi*1],0x0
  42503e:	mov    esi,DWORD PTR [rsp+0x30]
  425042:	mov    r8d,DWORD PTR [rsp+0x48]
  425047:	mov    rdx,QWORD PTR [rsp+0x98]
  42504f:	mov    rcx,QWORD PTR [rsp+0x120]
  425057:	and    esi,0x8
  42505a:	je     0x426344
  425060:	test   BYTE PTR [rsp+0x30],0x10
  425065:	je     0x4267bc
  42506b:	call   0x427b80
  425070:	mov    QWORD PTR [rsp+0xb8],rax
  425078:	mov    rax,QWORD PTR [rsp+0x128]
  425080:	cmp    QWORD PTR [rsp+0x120],rax
  425088:	je     0x424890
  42508e:	xor    r13d,r13d
  425091:	test   BYTE PTR [rsp+0x30],0x80
  425096:	jne    0x42456a
  42509c:	test   esi,esi
  42509e:	je     0x4267ce
  4250a4:	test   edi,edi
  4250a6:	jne    0x426ca6
  4250ac:	mov    rsi,QWORD PTR [rsp+0x50]
  4250b1:	mov    rax,QWORD PTR [rsi]
  4250b4:	add    rsi,0x8
  4250b8:	mov    QWORD PTR [rsp+0x50],rsi
  4250bd:	mov    rsi,QWORD PTR [rsp+0xb8]
  4250c5:	mov    QWORD PTR [rax],rsi
  4250c8:	add    DWORD PTR [rsp+0x4c],0x1
  4250cd:	xor    r13d,r13d
  4250d0:	jmp    0x42456a
  4250d5:	call   0x42fc38
  4250da:	mov    r13d,DWORD PTR [rax]
  4250dd:	call   0x42fc38
  4250e2:	mov    DWORD PTR [rax],0x0
  4250e8:	jmp    0x42510f
  4250ea:	nop    WORD PTR [rax+rax*1+0x0]
  4250f0:	mov    rdx,r12
  4250f3:	mov    rcx,r14
  4250f6:	call   0x4242e0
  4250fb:	cmp    eax,0xffffffff
  4250fe:	mov    r15d,eax
  425101:	je     0x425115
  425103:	mov    ecx,r15d
  425106:	call   0x42fb70
  42510b:	test   eax,eax
  42510d:	je     0x425135
  42510f:	cmp    r15d,0xffffffff
  425113:	jne    0x4250f0
  425115:	call   0x42fc38
  42511a:	cmp    DWORD PTR [rax],0x4
  42511d:	je     0x42563e
  425123:	mov    r15d,0xffffffff
  425129:	mov    ecx,r15d
  42512c:	call   0x42fb70
  425131:	test   eax,eax
  425133:	jne    0x42510f
  425135:	call   0x42fc38
  42513a:	xor    r9d,r9d
  42513d:	mov    DWORD PTR [rax],r13d
  425140:	mov    r8,r12
  425143:	mov    rdx,r14
  425146:	mov    ecx,r15d
  425149:	call   0x424380
  42514e:	cmp    bpl,0x63
  425152:	jne    0x42540d
  425158:	test   BYTE PTR [rsp+0x30],0x4
  42515d:	je     0x425825
  425163:	cmp    esi,0xffffffff
  425166:	mov    eax,0x1
  42516b:	cmove  esi,eax
  42516e:	mov    eax,DWORD PTR [rsp+0x30]
  425172:	mov    ebp,eax
  425174:	and    ebp,0x80
  42517a:	jne    0x425222
  425180:	test   ah,0x6
  425183:	je     0x425ab0
  425189:	test   edi,edi
  42518b:	jne    0x426c2e
  425191:	mov    rax,QWORD PTR [rsp+0x50]
  425196:	mov    rdi,QWORD PTR [rax]
  425199:	add    rax,0x8
  42519d:	mov    QWORD PTR [rsp+0x50],rax
  4251a2:	mov    QWORD PTR [rsp+0x28],rdi
  4251a7:	cmp    QWORD PTR [rsp+0x28],0x0
  4251ad:	je     0x427098
  4251b3:	cmp    esi,0x400
  4251b9:	mov    edi,0x400
  4251be:	cmovle edi,esi
  4251c1:	movsxd rax,edi
  4251c4:	lea    rcx,[rax+rax*1]
  4251c8:	mov    QWORD PTR [rsp+0x58],rax
  4251cd:	call   0x42fb50
  4251d2:	mov    rdi,QWORD PTR [rsp+0x28]
  4251d7:	test   rax,rax
  4251da:	mov    QWORD PTR [rsp+0x78],rax
  4251df:	mov    QWORD PTR [rdi],rax
  4251e2:	je     0x4259f5
  4251e8:	mov    rax,QWORD PTR [rsp+0x108]
  4251f0:	test   rax,rax
  4251f3:	je     0x4251fe
  4251f5:	mov    rdx,QWORD PTR [rax]
  4251f8:	cmp    rdx,0x1f
  4251fc:	jbe    0x425209
  4251fe:	mov    rcx,rax
  425201:	call   0x4242b0
  425206:	mov    rdx,QWORD PTR [rax]
  425209:	mov    rdi,QWORD PTR [rsp+0x28]
  42520e:	lea    rcx,[rdx+0x1]
  425212:	mov    QWORD PTR [rsp+0x108],rax
  42521a:	mov    QWORD PTR [rax],rcx
  42521d:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  425222:	mov    rdx,r12
  425225:	mov    rcx,r14
  425228:	call   0x4242e0
  42522d:	cmp    eax,0xffffffff
  425230:	mov    r15d,eax
  425233:	je     0x4263aa
  425239:	movsxd rax,esi
  42523c:	mov    QWORD PTR [rsp+0xa8],rbx
  425244:	mov    r13,QWORD PTR [rsp+0x88]
  42524c:	sub    rax,0x1
  425250:	mov    rbx,QWORD PTR [rsp+0x78]
  425255:	mov    DWORD PTR [rsp+0xfc],0x0
  425260:	mov    QWORD PTR [rsp+0x60],rax
  425265:	mov    eax,DWORD PTR [rsp+0x30]
  425269:	mov    DWORD PTR [rsp+0x30],esi
  42526d:	mov    rsi,QWORD PTR [rsp+0x90]
  425275:	and    eax,0x600
  42527a:	mov    DWORD PTR [rsp+0xa0],eax
  425281:	test   ebp,ebp
  425283:	mov    BYTE PTR [rsp+0x100],r15b
  42528b:	jne    0x42531a
  425291:	mov    ecx,DWORD PTR [rsp+0xa0]
  425298:	test   ecx,ecx
  42529a:	je     0x42531a
  42529c:	mov    rax,QWORD PTR [rsp+0x28]
  4252a1:	mov    rcx,QWORD PTR [rax]
  4252a4:	mov    rax,QWORD PTR [rsp+0x58]
  4252a9:	add    rax,rax
  4252ac:	mov    QWORD PTR [rsp+0x78],rax
  4252b1:	add    rax,rcx
  4252b4:	cmp    rbx,rax
  4252b7:	jne    0x42531a
  4252b9:	mov    rbx,QWORD PTR [rsp+0x60]
  4252be:	mov    rdi,QWORD PTR [rsp+0x58]
  4252c3:	mov    rax,rbx
  4252c6:	add    rax,0x1
  4252ca:	cmp    rdi,rax
  4252cd:	mov    rax,rbx
  4252d0:	cmovle rax,rdi
  4252d4:	mov    r8,rax
  4252d7:	mov    rax,rdi
  4252da:	lea    rbx,[rax+0x1]
  4252de:	add    rdi,r8
  4252e1:	jmp    0x4252f7
  4252e3:	cmp    rdi,rbx
  4252e6:	jbe    0x42644b
  4252ec:	mov    rax,QWORD PTR [rsp+0x28]
  4252f1:	mov    rdi,rbx
  4252f4:	mov    rcx,QWORD PTR [rax]
  4252f7:	lea    rdx,[rdi+rdi*1]
  4252fb:	call   0x42fb18
  425300:	test   rax,rax
  425303:	je     0x4252e3
  425305:	mov    rbx,QWORD PTR [rsp+0x28]
  42530a:	mov    QWORD PTR [rsp+0x58],rdi
  42530f:	mov    QWORD PTR [rbx],rax
  425312:	mov    rbx,QWORD PTR [rsp+0x78]
  425317:	add    rbx,rax
  42531a:	xor    edi,edi
  42531c:	jmp    0x425327
  42531e:	xchg   ax,ax
  425320:	mov    BYTE PTR [rsp+0x100],al
  425327:	test   ebp,ebp
  425329:	mov    rcx,rdi
  42532c:	mov    r9,r13
  42532f:	cmove  rcx,rbx
  425333:	mov    r8d,0x1
  425339:	mov    rdx,rsi
  42533c:	call   0x427980
  425341:	cmp    rax,0xfffffffffffffffe
  425345:	jne    0x4261c7
  42534b:	mov    rdx,r12
  42534e:	mov    rcx,r14
  425351:	call   0x4242e0
  425356:	cmp    eax,0xffffffff
  425359:	mov    r15d,eax
  42535c:	jne    0x425320
  42535e:	call   0x42fc38
  425363:	mov    DWORD PTR [rax],0x2a
  425369:	jmp    0x424890
  42536e:	xchg   ax,ax
  425370:	mov    r10d,DWORD PTR [rsp+0xc0]
  425378:	test   r10d,r10d
  42537b:	je     0x424cc4
  425381:	mov    ecx,r15d
  425384:	call   0x42fb60
  425389:	test   eax,eax
  42538b:	je     0x424cc4
  425391:	mov    r8,QWORD PTR [rsp+0x120]
  425399:	mov    rdx,QWORD PTR [rsp+0xa8]
  4253a1:	mov    rcx,rbp
  4253a4:	call   0x424160
  4253a9:	mov    QWORD PTR [rsp+0x120],rax
  4253b1:	mov    BYTE PTR [rax+rbp*1],r15b
  4253b5:	add    rbp,0x1
  4253b9:	test   esi,esi
  4253bb:	je     0x425ded
  4253c1:	mov    rdx,r12
  4253c4:	mov    rcx,r14
  4253c7:	call   0x4242e0
  4253cc:	cmp    eax,0xffffffff
  4253cf:	mov    r15d,eax
  4253d2:	je     0x425ded
  4253d8:	xor    eax,eax
  4253da:	test   esi,esi
  4253dc:	setg   al
  4253df:	sub    esi,eax
  4253e1:	jmp    0x424c91
  4253e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253f0:	mov    eax,ebp
  4253f2:	and    eax,0xffffffdf
  4253f5:	cmp    al,0x43
  4253f7:	je     0x425403
  4253f9:	cmp    bpl,0x6e
  4253fd:	jne    0x4250d5
  425403:	cmp    bpl,0x63
  425407:	je     0x425158
  42540d:	cmp    bpl,0x73
  425411:	jne    0x424715
  425417:	test   BYTE PTR [rsp+0x30],0x4
  42541c:	je     0x4256d7
  425422:	mov    eax,DWORD PTR [rsp+0x30]
  425426:	mov    ebp,eax
  425428:	and    ebp,0x80
  42542e:	jne    0x4254ca
  425434:	test   ah,0x6
  425437:	je     0x425ae0
  42543d:	test   edi,edi
  42543f:	jne    0x426c60
  425445:	mov    rax,QWORD PTR [rsp+0x50]
  42544a:	mov    rdi,QWORD PTR [rax]
  42544d:	add    rax,0x8
  425451:	mov    QWORD PTR [rsp+0x50],rax
  425456:	mov    QWORD PTR [rsp+0x28],rdi
  42545b:	cmp    QWORD PTR [rsp+0x28],0x0
  425461:	je     0x427098
  425467:	mov    ecx,0xc8
  42546c:	call   0x42fb50
  425471:	mov    rdi,QWORD PTR [rsp+0x28]
  425476:	test   rax,rax
  425479:	mov    QWORD PTR [rsp+0x78],rax
  42547e:	mov    QWORD PTR [rdi],rax
  425481:	je     0x4259f5
  425487:	mov    rax,QWORD PTR [rsp+0x108]
  42548f:	test   rax,rax
  425492:	je     0x42549d
  425494:	mov    rdx,QWORD PTR [rax]
  425497:	cmp    rdx,0x1f
  42549b:	jbe    0x4254a8
  42549d:	mov    rcx,rax
  4254a0:	call   0x4242b0
  4254a5:	mov    rdx,QWORD PTR [rax]
  4254a8:	mov    rdi,QWORD PTR [rsp+0x28]
  4254ad:	lea    rcx,[rdx+0x1]
  4254b1:	mov    QWORD PTR [rsp+0x108],rax
  4254b9:	mov    QWORD PTR [rsp+0x58],0x64
  4254c2:	mov    QWORD PTR [rax],rcx
  4254c5:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  4254ca:	mov    rdx,r12
  4254cd:	mov    rcx,r14
  4254d0:	call   0x4242e0
  4254d5:	cmp    eax,0xffffffff
  4254d8:	mov    r15d,eax
  4254db:	je     0x4263aa
  4254e1:	mov    eax,DWORD PTR [rsp+0x30]
  4254e5:	mov    QWORD PTR [rsp+0x60],rbx
  4254ea:	mov    r13,QWORD PTR [rsp+0x88]
  4254f2:	mov    rbx,QWORD PTR [rsp+0x78]
  4254f7:	mov    DWORD PTR [rsp+0x78],esi
  4254fb:	mov    rsi,QWORD PTR [rsp+0x90]
  425503:	and    eax,0x600
  425508:	mov    DWORD PTR [rsp+0xfc],0x0
  425513:	mov    DWORD PTR [rsp+0xa0],eax
  42551a:	mov    ecx,r15d
  42551d:	call   0x42fb70
  425522:	test   eax,eax
  425524:	jne    0x426dfa
  42552a:	mov    BYTE PTR [rsp+0x100],r15b
  425532:	xor    edi,edi
  425534:	jmp    0x425547
  425536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425540:	mov    BYTE PTR [rsp+0x100],al
  425547:	test   ebp,ebp
  425549:	mov    rcx,rdi
  42554c:	mov    r9,r13
  42554f:	cmove  rcx,rbx
  425553:	mov    r8d,0x1
  425559:	mov    rdx,rsi
  42555c:	call   0x427980
  425561:	cmp    rax,0xfffffffffffffffe
  425565:	jne    0x426242
  42556b:	mov    rdx,r12
  42556e:	mov    rcx,r14
  425571:	call   0x4242e0
  425576:	cmp    eax,0xffffffff
  425579:	mov    r15d,eax
  42557c:	jne    0x425540
  42557e:	jmp    0x42535e
  425583:	mov    rax,QWORD PTR [rsp+0x70]
  425588:	cmp    BYTE PTR [rax],0x0
  42558b:	je     0x425619
  425591:	mov    rax,QWORD PTR [rsp+0x40]
  425596:	test   rax,rax
  425599:	je     0x4268bc
  42559f:	movzx  edx,BYTE PTR [rax]
  4255a2:	test   dl,dl
  4255a4:	jne    0x4268bc
  4255aa:	test   esi,esi
  4255ac:	cmovg  esi,ebx
  4255af:	jmp    0x4253b9
  4255b4:	mov    r15d,eax
  4255b7:	mov    rax,QWORD PTR [rsp+0x70]
  4255bc:	movzx  eax,BYTE PTR [rax]
  4255bf:	test   al,al
  4255c1:	je     0x425619
  4255c3:	mov    rdi,QWORD PTR [rsp+0x70]
  4255c8:	mov    r13,QWORD PTR [rsp+0xa8]
  4255d0:	mov    DWORD PTR [rsp+0xa0],ebx
  4255d7:	mov    rbx,rbp
  4255da:	nop    WORD PTR [rax+rax*1+0x0]
  4255e0:	mov    r8,QWORD PTR [rsp+0x120]
  4255e8:	mov    rdx,r13
  4255eb:	mov    rcx,rbp
  4255ee:	add    rdi,0x1
  4255f2:	add    rbp,0x1
  4255f6:	call   0x424160
  4255fb:	mov    QWORD PTR [rsp+0x120],rax
  425603:	movzx  edx,BYTE PTR [rdi-0x1]
  425607:	mov    BYTE PTR [rax+rbx*1],dl
  42560a:	cmp    BYTE PTR [rdi],0x0
  42560d:	mov    rbx,rbp
  425610:	jne    0x4255e0
  425612:	mov    ebx,DWORD PTR [rsp+0xa0]
  425619:	test   esi,esi
  42561b:	mov    BYTE PTR [rsp+0xa0],0x1
  425623:	cmovg  esi,ebx
  425626:	jmp    0x4253b9
  42562b:	mov    r9d,0x1
  425631:	mov    r8,r12
  425634:	mov    rdx,r14
  425637:	mov    ecx,eax
  425639:	call   0x424380
  42563e:	mov    eax,DWORD PTR [rsp+0x4c]
  425642:	mov    r8,QWORD PTR [rsp+0x28]
  425647:	mov    ecx,0xffffffff
  42564c:	lea    rdx,[rsp+0x108]
  425654:	lea    r9,[rsp+0x120]
  42565c:	test   eax,eax
  42565e:	cmovne ecx,eax
  425661:	call   0x4241f0
  425666:	jmp    0x4248af
  42566b:	movzx  esi,BYTE PTR [rbp+0x0]
  42566f:	jmp    0x42454b
  425674:	test   dl,dl
  425676:	je     0x424890
  42567c:	jmp    0x424998
  425681:	lea    rcx,[rbx+0x1]
  425685:	or     eax,0xc
  425688:	movzx  ebp,BYTE PTR [rbx+0x1]
  42568c:	mov    DWORD PTR [rsp+0x30],eax
  425690:	mov    QWORD PTR [rsp+0x60],rcx
  425695:	jmp    0x4246f0
  42569a:	mov    eax,DWORD PTR [rsp+0x4c]
  42569e:	mov    r8,QWORD PTR [rsp+0x28]
  4256a3:	lea    rdx,[rsp+0x108]
  4256ab:	lea    r9,[rsp+0x120]
  4256b3:	test   eax,eax
  4256b5:	mov    ecx,eax
  4256b7:	cmove  ecx,r15d
  4256bb:	call   0x4241f0
  4256c0:	jmp    0x4248af
  4256c5:	lea    eax,[r15-0x2b]
  4256c9:	and    eax,0xfffffffd
  4256cc:	jne    0x424cc4
  4256d2:	jmp    0x425399
  4256d7:	mov    eax,DWORD PTR [rsp+0x30]
  4256db:	mov    ebp,eax
  4256dd:	and    ebp,0x80
  4256e3:	jne    0x425782
  4256e9:	test   ah,0x6
  4256ec:	je     0x425b10
  4256f2:	test   edi,edi
  4256f4:	jne    0x426c79
  4256fa:	mov    rax,QWORD PTR [rsp+0x50]
  4256ff:	mov    rdi,QWORD PTR [rax]
  425702:	add    rax,0x8
  425706:	mov    QWORD PTR [rsp+0x50],rax
  42570b:	mov    QWORD PTR [rsp+0x28],rdi
  425710:	cmp    QWORD PTR [rsp+0x28],0x0
  425716:	je     0x427098
  42571c:	mov    ecx,0x64
  425721:	call   0x42fb50
  425726:	mov    rdi,QWORD PTR [rsp+0x28]
  42572b:	test   rax,rax
  42572e:	mov    QWORD PTR [rsp+0x80],rax
  425736:	mov    QWORD PTR [rdi],rax
  425739:	je     0x4259f5
  42573f:	mov    rax,QWORD PTR [rsp+0x108]
  425747:	test   rax,rax
  42574a:	je     0x425755
  42574c:	mov    rdx,QWORD PTR [rax]
  42574f:	cmp    rdx,0x1f
  425753:	jbe    0x425760
  425755:	mov    rcx,rax
  425758:	call   0x4242b0
  42575d:	mov    rdx,QWORD PTR [rax]
  425760:	mov    rdi,QWORD PTR [rsp+0x28]
  425765:	lea    rcx,[rdx+0x1]
  425769:	mov    QWORD PTR [rsp+0x108],rax
  425771:	mov    QWORD PTR [rsp+0x58],0x64
  42577a:	mov    QWORD PTR [rax],rcx
  42577d:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  425782:	mov    rdx,r12
  425785:	mov    rcx,r14
  425788:	call   0x4242e0
  42578d:	cmp    eax,0xffffffff
  425790:	mov    r15d,eax
  425793:	je     0x4263aa
  425799:	mov    eax,DWORD PTR [rsp+0x30]
  42579d:	mov    QWORD PTR [rsp+0xa0],rbx
  4257a5:	mov    rdi,QWORD PTR [rsp+0x80]
  4257ad:	mov    r13,QWORD PTR [rsp+0x28]
  4257b2:	and    eax,0x600
  4257b7:	mov    DWORD PTR [rsp+0x60],eax
  4257bb:	jmp    0x4257fd
  4257bd:	nop    DWORD PTR [rax]
  4257c0:	mov    rdi,QWORD PTR [rsp+0x58]
  4257c5:	mov    rcx,QWORD PTR [r13+0x0]
  4257c9:	lea    rdx,[rcx+rdi*1]
  4257cd:	mov    rdi,rax
  4257d0:	cmp    rax,rdx
  4257d3:	je     0x425ed8
  4257d9:	test   esi,esi
  4257db:	jle    0x4257e6
  4257dd:	sub    esi,0x1
  4257e0:	je     0x425d4f
  4257e6:	mov    rdx,r12
  4257e9:	mov    rcx,r14
  4257ec:	call   0x4242e0
  4257f1:	cmp    eax,0xffffffff
  4257f4:	mov    r15d,eax
  4257f7:	je     0x425d4f
  4257fd:	mov    ecx,r15d
  425800:	call   0x42fb70
  425805:	test   eax,eax
  425807:	jne    0x426422
  42580d:	test   ebp,ebp
  42580f:	jne    0x4257d9
  425811:	mov    edx,DWORD PTR [rsp+0x60]
  425815:	lea    rax,[rdi+0x1]
  425819:	mov    BYTE PTR [rdi],r15b
  42581c:	test   edx,edx
  42581e:	jne    0x4257c0
  425820:	mov    rdi,rax
  425823:	jmp    0x4257d9
  425825:	cmp    esi,0xffffffff
  425828:	mov    eax,0x1
  42582d:	cmove  esi,eax
  425830:	mov    eax,DWORD PTR [rsp+0x30]
  425834:	test   al,0x80
  425836:	jne    0x42652f
  42583c:	and    eax,0x600
  425841:	mov    DWORD PTR [rsp+0x60],eax
  425845:	je     0x425a80
  42584b:	test   edi,edi
  42584d:	jne    0x426c15
  425853:	mov    rax,QWORD PTR [rsp+0x50]
  425858:	mov    rdi,QWORD PTR [rax]
  42585b:	add    rax,0x8
  42585f:	mov    QWORD PTR [rsp+0x50],rax
  425864:	mov    QWORD PTR [rsp+0x28],rdi
  425869:	cmp    QWORD PTR [rsp+0x28],0x0
  42586f:	je     0x427098
  425875:	cmp    esi,0x400
  42587b:	mov    edi,0x400
  425880:	cmovle edi,esi
  425883:	movsxd rax,edi
  425886:	mov    rcx,rax
  425889:	mov    QWORD PTR [rsp+0x58],rax
  42588e:	call   0x42fb50
  425893:	mov    rdi,rax
  425896:	mov    rax,QWORD PTR [rsp+0x28]
  42589b:	test   rdi,rdi
  42589e:	mov    QWORD PTR [rax],rdi
  4258a1:	je     0x4271ce
  4258a7:	mov    rax,QWORD PTR [rsp+0x108]
  4258af:	test   rax,rax
  4258b2:	je     0x4258bd
  4258b4:	mov    rdx,QWORD PTR [rax]
  4258b7:	cmp    rdx,0x1f
  4258bb:	jbe    0x4258c8
  4258bd:	mov    rcx,rax
  4258c0:	call   0x4242b0
  4258c5:	mov    rdx,QWORD PTR [rax]
  4258c8:	lea    rcx,[rdx+0x1]
  4258cc:	mov    QWORD PTR [rsp+0x108],rax
  4258d4:	mov    QWORD PTR [rax],rcx
  4258d7:	mov    rcx,QWORD PTR [rsp+0x28]
  4258dc:	mov    QWORD PTR [rax+rdx*8+0x10],rcx
  4258e1:	mov    rdx,r12
  4258e4:	mov    rcx,r14
  4258e7:	call   0x4242e0
  4258ec:	cmp    eax,0xffffffff
  4258ef:	je     0x42563e
  4258f5:	movsxd r13,esi
  4258f8:	mov    QWORD PTR [rsp+0x80],rbx
  425900:	mov    QWORD PTR [rsp+0x1b0],r14
  425908:	sub    r13,0x1
  42590c:	mov    rbx,QWORD PTR [rsp+0x58]
  425911:	mov    rbp,QWORD PTR [rsp+0x28]
  425916:	mov    r14d,eax
  425919:	mov    r15d,DWORD PTR [rsp+0x60]
  42591e:	mov    QWORD PTR [rsp+0x30],r12
  425923:	jmp    0x425970
  425925:	mov    rcx,QWORD PTR [rbp+0x0]
  425929:	mov    r12,rbx
  42592c:	mov    r8,rdi
  42592f:	lea    rax,[rcx+rbx*1]
  425933:	cmp    rdi,rax
  425936:	je     0x425da6
  42593c:	sub    esi,0x1
  42593f:	lea    rdi,[r8+0x1]
  425943:	mov    BYTE PTR [r8],r14b
  425946:	test   esi,esi
  425948:	jle    0x4262f6
  42594e:	mov    rdx,QWORD PTR [rsp+0x30]
  425953:	mov    rcx,QWORD PTR [rsp+0x1b0]
  42595b:	sub    r13,0x1
  42595f:	call   0x4242e0
  425964:	cmp    eax,0xffffffff
  425967:	mov    r14d,eax
  42596a:	je     0x4262f6
  425970:	test   r15d,r15d
  425973:	jne    0x425925
  425975:	mov    r12,rbx
  425978:	mov    r8,rdi
  42597b:	jmp    0x42593c
  42597d:	add    rbx,0x1
  425981:	or     ah,0x2
  425984:	mov    QWORD PTR [rsp+0x60],rbx
  425989:	mov    DWORD PTR [rsp+0x30],eax
  42598d:	jmp    0x4246f0
  425992:	test   BYTE PTR [rsp+0x30],0x80
  425997:	jne    0x424ac5
  42599d:	test   DWORD PTR [rsp+0x30],0x600
  4259a5:	je     0x426b64
  4259ab:	test   edi,edi
  4259ad:	jne    0x426f08
  4259b3:	mov    rax,QWORD PTR [rsp+0x50]
  4259b8:	mov    rdi,QWORD PTR [rax]
  4259bb:	add    rax,0x8
  4259bf:	mov    QWORD PTR [rsp+0x50],rax
  4259c4:	mov    QWORD PTR [rsp+0x28],rdi
  4259c9:	cmp    QWORD PTR [rsp+0x28],0x0
  4259cf:	je     0x427098
  4259d5:	mov    ecx,0xc8
  4259da:	call   0x42fb50
  4259df:	mov    rdi,QWORD PTR [rsp+0x28]
  4259e4:	test   rax,rax
  4259e7:	mov    QWORD PTR [rsp+0x78],rax
  4259ec:	mov    QWORD PTR [rdi],rax
  4259ef:	jne    0x424a82
  4259f5:	test   DWORD PTR [rsp+0x30],0x400
  4259fd:	mov    ecx,0xffffffff
  425a02:	lea    rdx,[rsp+0x108]
  425a0a:	cmove  ecx,DWORD PTR [rsp+0x4c]
  425a0f:	lea    r9,[rsp+0x120]
  425a17:	mov    r8,rdi
  425a1a:	call   0x4241f0
  425a1f:	jmp    0x4248af
  425a24:	cmp    r15d,0x30
  425a28:	jne    0x424c47
  425a2e:	mov    r8,QWORD PTR [rsp+0x120]
  425a36:	lea    r13,[rsp+0x118]
  425a3e:	xor    ecx,ecx
  425a40:	mov    rdx,r13
  425a43:	call   0x424160
  425a48:	mov    rdx,r12
  425a4b:	mov    QWORD PTR [rsp+0x120],rax
  425a53:	mov    rcx,r14
  425a56:	mov    BYTE PTR [rax],0x30
  425a59:	call   0x4242e0
  425a5e:	test   esi,esi
  425a60:	mov    r15d,eax
  425a63:	jle    0x426eb3
  425a69:	sub    esi,0x1
  425a6c:	jne    0x427022
  425a72:	mov    bpl,0x1
  425a75:	jmp    0x424c47
  425a7a:	nop    WORD PTR [rax+rax*1+0x0]
  425a80:	test   edi,edi
  425a82:	jne    0x4269e0
  425a88:	mov    rax,QWORD PTR [rsp+0x50]
  425a8d:	mov    rdi,QWORD PTR [rax]
  425a90:	add    rax,0x8
  425a94:	mov    QWORD PTR [rsp+0x50],rax
  425a99:	test   rdi,rdi
  425a9c:	jne    0x4258e1
  425aa2:	jmp    0x424890
  425aa7:	nop    WORD PTR [rax+rax*1+0x0]
  425ab0:	test   edi,edi
  425ab2:	jne    0x426c47
  425ab8:	mov    rax,QWORD PTR [rsp+0x50]
  425abd:	mov    rdi,QWORD PTR [rax]
  425ac0:	add    rax,0x8
  425ac4:	mov    QWORD PTR [rsp+0x50],rax
  425ac9:	mov    QWORD PTR [rsp+0x78],rdi
  425ace:	cmp    QWORD PTR [rsp+0x78],0x0
  425ad4:	jne    0x425222
  425ada:	jmp    0x424890
  425adf:	nop
  425ae0:	test   edi,edi
  425ae2:	jne    0x4269ab
  425ae8:	mov    rax,QWORD PTR [rsp+0x50]
  425aed:	mov    rdi,QWORD PTR [rax]
  425af0:	add    rax,0x8
  425af4:	mov    QWORD PTR [rsp+0x50],rax
  425af9:	mov    QWORD PTR [rsp+0x78],rdi
  425afe:	cmp    QWORD PTR [rsp+0x78],0x0
  425b04:	jne    0x4254ca
  425b0a:	jmp    0x424890
  425b0f:	nop
  425b10:	test   edi,edi
  425b12:	jne    0x4269c4
  425b18:	mov    rax,QWORD PTR [rsp+0x50]
  425b1d:	mov    rdi,QWORD PTR [rax]
  425b20:	add    rax,0x8
  425b24:	mov    QWORD PTR [rsp+0x50],rax
  425b29:	mov    QWORD PTR [rsp+0x80],rdi
  425b31:	cmp    QWORD PTR [rsp+0x80],0x0
  425b3a:	jne    0x425782
  425b40:	jmp    0x424890
  425b45:	mov    ebp,DWORD PTR [rsp+0x48]
  425b49:	cmp    r15d,0xffffffff
  425b4d:	setne  dl
  425b50:	and    eax,edx
  425b52:	test   ebp,ebp
  425b54:	jne    0x424f46
  425b5a:	mov    DWORD PTR [rsp+0x48],0xa
  425b62:	jmp    0x424f46
  425b67:	mov    DWORD PTR [rsp+0x48],0xa
  425b6f:	jmp    0x424e8f
  425b74:	mov    DWORD PTR [rsp+0x48],0x10
  425b7c:	jmp    0x424e8f
  425b81:	or     DWORD PTR [rsp+0x30],0x10
  425b86:	mov    DWORD PTR [rsp+0x48],0x0
  425b8e:	jmp    0x424e8f
  425b93:	or     DWORD PTR [rsp+0x30],0x10
  425b98:	mov    DWORD PTR [rsp+0x48],0xa
  425ba0:	jmp    0x424e8f
  425ba5:	mov    DWORD PTR [rsp+0x48],0x8
  425bad:	jmp    0x424e8f
  425bb2:	mov    ecx,edi
  425bb4:	call   0x42fb60
  425bb9:	test   eax,eax
  425bbb:	je     0x424fb4
  425bc1:	mov    r15,rbp
  425bc4:	mov    r8,QWORD PTR [rsp+0x120]
  425bcc:	mov    rdx,QWORD PTR [rsp+0x60]
  425bd1:	mov    rcx,r15
  425bd4:	lea    rbp,[r15+0x1]
  425bd8:	call   0x424160
  425bdd:	mov    QWORD PTR [rsp+0x120],rax
  425be5:	mov    BYTE PTR [rax+r15*1],dil
  425be9:	xor    eax,eax
  425beb:	test   esi,esi
  425bed:	mov    rdx,r12
  425bf0:	mov    rcx,r14
  425bf3:	setg   al
  425bf6:	sub    esi,eax
  425bf8:	call   0x4242e0
  425bfd:	test   esi,esi
  425bff:	mov    edi,eax
  425c01:	je     0x424fb4
  425c07:	cmp    eax,0xffffffff
  425c0a:	jne    0x424f90
  425c10:	jmp    0x424fb4
  425c15:	cmp    DWORD PTR [rsp+0x48],0xa
  425c1a:	jne    0x424fb4
  425c20:	mov    r11d,DWORD PTR [rsp+0xa8]
  425c28:	test   r11d,r11d
  425c2b:	je     0x424fb4
  425c31:	movzx  edx,BYTE PTR [r13+0x0]
  425c36:	test   esi,esi
  425c38:	mov    ebx,0x7fffffff
  425c3d:	cmovg  ebx,esi
  425c40:	cmp    edi,edx
  425c42:	mov    eax,edx
  425c44:	jne    0x426839
  425c4a:	cmp    BYTE PTR [r13+0x1],0x0
  425c4f:	lea    r15,[r13+0x1]
  425c53:	jne    0x425c79
  425c55:	jmp    0x425ca7
  425c57:	nop    WORD PTR [rax+rax*1+0x0]
  425c60:	movzx  ecx,BYTE PTR [r15]
  425c64:	sub    ebx,0x1
  425c67:	cmp    ecx,eax
  425c69:	jne    0x425cad
  425c6b:	add    r15,0x1
  425c6f:	cmp    BYTE PTR [r15],0x0
  425c73:	je     0x425ca9
  425c75:	test   ebx,ebx
  425c77:	je     0x425cb3
  425c79:	mov    rdx,r12
  425c7c:	mov    rcx,r14
  425c7f:	call   0x4242e0
  425c84:	cmp    eax,0xffffffff
  425c87:	jne    0x425c60
  425c89:	mov    edi,eax
  425c8b:	movzx  eax,BYTE PTR [r15]
  425c8f:	test   al,al
  425c91:	jne    0x427195
  425c97:	test   esi,esi
  425c99:	lea    r15,[rbp-0x1]
  425c9d:	cmovle ebx,esi
  425ca0:	mov    esi,ebx
  425ca2:	jmp    0x425bc4
  425ca7:	mov    ecx,edi
  425ca9:	mov    edi,ecx
  425cab:	jmp    0x425c97
  425cad:	mov    edi,eax
  425caf:	mov    eax,ecx
  425cb1:	jmp    0x425c8f
  425cb3:	mov    rbx,QWORD PTR [rsp+0xb0]
  425cbb:	mov    edi,DWORD PTR [rsp+0xc0]
  425cc2:	mov    r13,r15
  425cc5:	mov    QWORD PTR [rsp+0xa0],rbp
  425ccd:	cmp    QWORD PTR [rsp+0x40],r13
  425cd2:	mov    r15d,ecx
  425cd5:	jae    0x424fce
  425cdb:	xor    r9d,r9d
  425cde:	mov    r8,r12
  425ce1:	mov    rdx,r14
  425ce4:	call   0x424380
  425ce9:	lea    rsi,[r13-0x1]
  425ced:	cmp    QWORD PTR [rsp+0x40],rsi
  425cf2:	jae    0x425d24
  425cf4:	mov    rbp,rsi
  425cf7:	movzx  ecx,BYTE PTR [rbp+0x0]
  425cfb:	mov    r9d,0x1
  425d01:	mov    r8,r12
  425d04:	mov    rdx,r14
  425d07:	sub    rbp,0x1
  425d0b:	call   0x424380
  425d10:	cmp    rbp,QWORD PTR [rsp+0x40]
  425d15:	jne    0x425cf7
  425d17:	mov    rax,QWORD PTR [rsp+0x40]
  425d1c:	sub    rax,r13
  425d1f:	lea    rsi,[rsi+rax*1+0x1]
  425d24:	movzx  r15d,BYTE PTR [rsi]
  425d28:	jmp    0x424fce
  425d2d:	nop    DWORD PTR [rax]
  425d30:	mov    r15d,eax
  425d33:	mov    eax,edx
  425d35:	jmp    0x424d5f
  425d3a:	mov    r15d,eax
  425d3d:	jmp    0x424d67
  425d42:	mov    rax,QWORD PTR [rsp+0x70]
  425d47:	movzx  eax,BYTE PTR [rax]
  425d4a:	jmp    0x4255bf
  425d4f:	mov    rbx,QWORD PTR [rsp+0xa0]
  425d57:	mov    QWORD PTR [rsp+0x80],rdi
  425d5f:	xor    r13d,r13d
  425d62:	test   ebp,ebp
  425d64:	jne    0x42456a
  425d6a:	mov    rax,QWORD PTR [rsp+0x80]
  425d72:	lea    rsi,[rax+0x1]
  425d76:	mov    BYTE PTR [rax],0x0
  425d79:	mov    r8,QWORD PTR [rsp+0x58]
  425d7e:	mov    rcx,QWORD PTR [rsp+0x28]
  425d83:	mov    rdx,rsi
  425d86:	call   0x424090
  425d8b:	add    DWORD PTR [rsp+0x4c],0x1
  425d90:	mov    QWORD PTR [rsp+0x80],rsi
  425d98:	mov    QWORD PTR [rsp+0x28],0x0
  425da1:	jmp    0x42456a
  425da6:	lea    rax,[r13+0x1]
  425daa:	mov    r12,r13
  425dad:	lea    rdi,[rbx+0x1]
  425db1:	cmp    rbx,rax
  425db4:	cmovl  r12,rbx
  425db8:	add    r12,rbx
  425dbb:	jmp    0x425dd0
  425dbd:	nop    DWORD PTR [rax]
  425dc0:	cmp    r12,rdi
  425dc3:	jbe    0x42644b
  425dc9:	mov    rcx,QWORD PTR [rbp+0x0]
  425dcd:	mov    r12,rdi
  425dd0:	mov    rdx,r12
  425dd3:	call   0x42fb18
  425dd8:	test   rax,rax
  425ddb:	je     0x425dc0
  425ddd:	lea    r8,[rax+rbx*1]
  425de1:	mov    QWORD PTR [rbp+0x0],rax
  425de5:	mov    rbx,r12
  425de8:	jmp    0x42593c
  425ded:	mov    rbx,QWORD PTR [rsp+0xc8]
  425df5:	mov    edi,DWORD PTR [rsp+0xd4]
  425dfc:	test   rbp,rbp
  425dff:	je     0x424890
  425e05:	cmp    rbp,0x2
  425e09:	jne    0x425e16
  425e0b:	test   BYTE PTR [rsp+0x30],0x40
  425e10:	jne    0x424890
  425e16:	lea    r13,[rsp+0x118]
  425e1e:	mov    r8,QWORD PTR [rsp+0x120]
  425e26:	mov    rdx,r13
  425e29:	mov    rcx,rbp
  425e2c:	call   0x424160
  425e31:	test   BYTE PTR [rsp+0x30],0x8
  425e36:	mov    QWORD PTR [rsp+0x120],rax
  425e3e:	mov    BYTE PTR [rax+rbp*1],0x0
  425e42:	jne    0x426743
  425e48:	test   BYTE PTR [rsp+0x30],0x4
  425e4d:	je     0x4265b1
  425e53:	mov    r8,QWORD PTR [rsp+0x98]
  425e5b:	mov    rdx,QWORD PTR [rsp+0x120]
  425e63:	lea    rcx,[rsp+0xe0]
  425e6b:	call   0x4275f0
  425e70:	test   BYTE PTR [rsp+0x30],0x80
  425e75:	fld    TBYTE PTR [rsp+0xe0]
  425e7c:	jne    0x426378
  425e82:	mov    rax,QWORD PTR [rsp+0x120]
  425e8a:	cmp    QWORD PTR [rsp+0x128],rax
  425e92:	je     0x424888
  425e98:	test   edi,edi
  425e9a:	jne    0x426d9a
  425ea0:	mov    rsi,QWORD PTR [rsp+0x50]
  425ea5:	mov    rax,QWORD PTR [rsi]
  425ea8:	add    rsi,0x8
  425eac:	mov    QWORD PTR [rsp+0x50],rsi
  425eb1:	cmp    BYTE PTR [rsp+0xd3],0x0
  425eb9:	fstp   QWORD PTR [rsp+0xd8]
  425ec0:	movsd  xmm0,QWORD PTR [rsp+0xd8]
  425ec9:	je     0x425ecf
  425ecb:	xorpd  xmm0,xmm6
  425ecf:	movsd  QWORD PTR [rax],xmm0
  425ed3:	jmp    0x4250c8
  425ed8:	mov    rax,QWORD PTR [rsp+0x58]
  425edd:	lea    rbx,[rax+rax*1]
  425ee1:	lea    rdi,[rax+0x1]
  425ee5:	jmp    0x425f00
  425ee7:	nop    WORD PTR [rax+rax*1+0x0]
  425ef0:	cmp    rbx,rdi
  425ef3:	jbe    0x42668c
  425ef9:	mov    rcx,QWORD PTR [r13+0x0]
  425efd:	mov    rbx,rdi
  425f00:	mov    rdx,rbx
  425f03:	call   0x42fb18
  425f08:	test   rax,rax
  425f0b:	je     0x425ef0
  425f0d:	mov    rdi,QWORD PTR [rsp+0x58]
  425f12:	mov    QWORD PTR [r13+0x0],rax
  425f16:	mov    QWORD PTR [rsp+0x58],rbx
  425f1b:	add    rdi,rax
  425f1e:	jmp    0x4257d9
  425f23:	mov    r8,QWORD PTR [rsp+0x120]
  425f2b:	mov    rdx,QWORD PTR [rsp+0xa8]
  425f33:	mov    rcx,rbp
  425f36:	call   0x424160
  425f3b:	movzx  edi,BYTE PTR [rsp+0xb0]
  425f43:	mov    QWORD PTR [rsp+0x120],rax
  425f4b:	mov    BYTE PTR [rsp+0x60],0x1
  425f50:	mov    BYTE PTR [rsp+0xa0],0x1
  425f58:	mov    BYTE PTR [rax+rbp*1],dil
  425f5c:	add    rbp,0x1
  425f60:	jmp    0x4253b9
  425f65:	test   r13d,r13d
  425f68:	je     0x4260b7
  425f6e:	mov    rax,QWORD PTR [rsp+0x110]
  425f76:	mov    rdx,r12
  425f79:	mov    rcx,r14
  425f7c:	mov    QWORD PTR [rsp+0xa8],rax
  425f84:	call   0x4242e0
  425f89:	cmp    eax,0xffffffff
  425f8c:	mov    r15d,eax
  425f8f:	je     0x4263aa
  425f95:	mov    r13d,DWORD PTR [rsp+0x30]
  425f9a:	mov    QWORD PTR [rsp+0xa0],rbx
  425fa2:	xor    edi,edi
  425fa4:	mov    DWORD PTR [rsp+0xfc],0x0
  425faf:	mov    rbx,QWORD PTR [rsp+0x78]
  425fb4:	and    r13d,0x80
  425fbb:	jmp    0x425fe0
  425fbd:	nop    DWORD PTR [rax]
  425fc0:	sub    esi,0x1
  425fc3:	je     0x42646a
  425fc9:	mov    rdx,r12
  425fcc:	mov    rcx,r14
  425fcf:	call   0x4242e0
  425fd4:	cmp    eax,0xffffffff
  425fd7:	mov    r15d,eax
  425fda:	je     0x42646a
  425fe0:	mov    rax,QWORD PTR [rsp+0x120]
  425fe8:	movsxd rdx,r15d
  425feb:	cmp    BYTE PTR [rax+rdx*1],bpl
  425fef:	je     0x426809
  425ff5:	test   r13d,r13d
  425ff8:	jne    0x425fc0
  425ffa:	mov    r9,QWORD PTR [rsp+0x88]
  426002:	mov    rdx,QWORD PTR [rsp+0x90]
  42600a:	mov    r8d,0x1
  426010:	mov    rcx,rbx
  426013:	mov    BYTE PTR [rsp+0x100],r15b
  42601b:	add    rdi,0x1
  42601f:	call   0x427980
  426024:	cmp    rax,0xfffffffffffffffe
  426028:	je     0x425fc9
  42602a:	add    rbx,0x2
  42602e:	test   DWORD PTR [rsp+0x30],0x600
  426036:	je     0x4260b0
  426038:	mov    rax,QWORD PTR [rsp+0x28]
  42603d:	xor    edi,edi
  42603f:	mov    rcx,QWORD PTR [rax]
  426042:	mov    rax,QWORD PTR [rsp+0x58]
  426047:	add    rax,rax
  42604a:	mov    QWORD PTR [rsp+0x60],rax
  42604f:	add    rax,rcx
  426052:	cmp    rbx,rax
  426055:	jne    0x425fc0
  42605b:	mov    rbx,QWORD PTR [rsp+0x58]
  426060:	mov    rdi,QWORD PTR [rsp+0x60]
  426065:	add    rbx,0x1
  426069:	jmp    0x426084
  42606b:	nop    DWORD PTR [rax+rax*1+0x0]
  426070:	cmp    rdi,rbx
  426073:	jbe    0x426d4d
  426079:	mov    rax,QWORD PTR [rsp+0x28]
  42607e:	mov    rdi,rbx
  426081:	mov    rcx,QWORD PTR [rax]
  426084:	lea    rdx,[rdi+rdi*1]
  426088:	call   0x42fb18
  42608d:	test   rax,rax
  426090:	je     0x426070
  426092:	mov    rbx,QWORD PTR [rsp+0x28]
  426097:	mov    QWORD PTR [rsp+0x58],rdi
  42609c:	xor    edi,edi
  42609e:	mov    QWORD PTR [rbx],rax
  4260a1:	mov    rbx,QWORD PTR [rsp+0x60]
  4260a6:	add    rbx,rax
  4260a9:	jmp    0x425fc0
  4260ae:	xchg   ax,ax
  4260b0:	xor    edi,edi
  4260b2:	jmp    0x425fc0
  4260b7:	mov    rax,QWORD PTR [rsp+0x110]
  4260bf:	mov    rdx,r12
  4260c2:	mov    rcx,r14
  4260c5:	mov    QWORD PTR [rsp+0xa8],rax
  4260cd:	call   0x4242e0
  4260d2:	cmp    eax,0xffffffff
  4260d5:	mov    r15d,eax
  4260d8:	je     0x4263aa
  4260de:	mov    eax,DWORD PTR [rsp+0x30]
  4260e2:	mov    QWORD PTR [rsp+0xa0],rbx
  4260ea:	mov    rbx,QWORD PTR [rsp+0x80]
  4260f2:	mov    edi,eax
  4260f4:	and    eax,0x600
  4260f9:	and    edi,0x80
  4260ff:	mov    DWORD PTR [rsp+0x60],eax
  426103:	jmp    0x426142
  426105:	mov    rbx,QWORD PTR [rsp+0x28]
  42610a:	mov    rcx,QWORD PTR [rbx]
  42610d:	mov    rbx,QWORD PTR [rsp+0x58]
  426112:	lea    rdx,[rcx+rbx*1]
  426116:	mov    rbx,rax
  426119:	cmp    rax,rdx
  42611c:	je     0x4266c1
  426122:	sub    esi,0x1
  426125:	je     0x4264f6
  42612b:	mov    rdx,r12
  42612e:	mov    rcx,r14
  426131:	call   0x4242e0
  426136:	cmp    eax,0xffffffff
  426139:	mov    r15d,eax
  42613c:	je     0x4264f6
  426142:	mov    rax,QWORD PTR [rsp+0x120]
  42614a:	movsxd rdx,r15d
  42614d:	cmp    BYTE PTR [rax+rdx*1],bpl
  426151:	je     0x426868
  426157:	test   edi,edi
  426159:	jne    0x426122
  42615b:	mov    edx,DWORD PTR [rsp+0x60]
  42615f:	lea    rax,[rbx+0x1]
  426163:	mov    BYTE PTR [rbx],r15b
  426166:	test   edx,edx
  426168:	jne    0x426105
  42616a:	mov    rbx,rax
  42616d:	jmp    0x426122
  42616f:	mov    rax,QWORD PTR [rsp+0x120]
  426177:	add    rbx,0x1
  42617b:	mov    BYTE PTR [rax+rdx*1],0x1
  42617f:	movzx  eax,BYTE PTR [rbx]
  426182:	jmp    0x424b57
  426187:	mov    rcx,QWORD PTR [rsp+0x120]
  42618f:	mov    QWORD PTR [rsp+0x118],0x100
  42619b:	mov    eax,0x100
  4261a0:	test   rcx,rcx
  4261a3:	je     0x4261b2
  4261a5:	call   0x42fba0
  4261aa:	mov    rax,QWORD PTR [rsp+0x118]
  4261b2:	mov    rcx,rax
  4261b5:	call   0x42fb50
  4261ba:	mov    QWORD PTR [rsp+0x120],rax
  4261c2:	jmp    0x424b01
  4261c7:	cmp    rax,0x1
  4261cb:	jne    0x42535e
  4261d1:	sub    DWORD PTR [rsp+0x30],0x1
  4261d6:	add    rbx,0x2
  4261da:	mov    eax,DWORD PTR [rsp+0x30]
  4261de:	test   eax,eax
  4261e0:	jle    0x4261ff
  4261e2:	mov    rdx,r12
  4261e5:	mov    rcx,r14
  4261e8:	call   0x4242e0
  4261ed:	sub    QWORD PTR [rsp+0x60],0x1
  4261f3:	cmp    eax,0xffffffff
  4261f6:	mov    r15d,eax
  4261f9:	jne    0x425281
  4261ff:	xor    r13d,r13d
  426202:	test   ebp,ebp
  426204:	mov    QWORD PTR [rsp+0x78],rbx
  426209:	mov    rbx,QWORD PTR [rsp+0xa8]
  426211:	jne    0x42456a
  426217:	mov    rax,QWORD PTR [rsp+0x58]
  42621c:	mov    rdx,QWORD PTR [rsp+0x78]
  426221:	mov    rcx,QWORD PTR [rsp+0x28]
  426226:	lea    r8,[rax+rax*1]
  42622a:	call   0x424090
  42622f:	add    DWORD PTR [rsp+0x4c],0x1
  426234:	mov    QWORD PTR [rsp+0x28],0x0
  42623d:	jmp    0x42456a
  426242:	cmp    rax,0x1
  426246:	jne    0x42535e
  42624c:	add    rbx,0x2
  426250:	test   ebp,ebp
  426252:	jne    0x42627d
  426254:	mov    eax,DWORD PTR [rsp+0xa0]
  42625b:	test   eax,eax
  42625d:	je     0x42627d
  42625f:	mov    rax,QWORD PTR [rsp+0x28]
  426264:	mov    rcx,QWORD PTR [rax]
  426267:	mov    rax,QWORD PTR [rsp+0x58]
  42626c:	lea    r8,[rax+rax*1]
  426270:	lea    rax,[rcx+r8*1]
  426274:	cmp    rbx,rax
  426277:	je     0x426e63
  42627d:	mov    eax,DWORD PTR [rsp+0x78]
  426281:	test   eax,eax
  426283:	jle    0x42628e
  426285:	sub    eax,0x1
  426288:	mov    DWORD PTR [rsp+0x78],eax
  42628c:	je     0x4262a5
  42628e:	mov    rdx,r12
  426291:	mov    rcx,r14
  426294:	call   0x4242e0
  426299:	cmp    eax,0xffffffff
  42629c:	mov    r15d,eax
  42629f:	jne    0x42551a
  4262a5:	mov    QWORD PTR [rsp+0x78],rbx
  4262aa:	mov    rbx,QWORD PTR [rsp+0x60]
  4262af:	xor    r13d,r13d
  4262b2:	test   ebp,ebp
  4262b4:	jne    0x42456a
  4262ba:	mov    rax,QWORD PTR [rsp+0x78]
  4262bf:	xor    ecx,ecx
  4262c1:	lea    rsi,[rax+0x2]
  4262c5:	mov    WORD PTR [rax],cx
  4262c8:	mov    rax,QWORD PTR [rsp+0x58]
  4262cd:	mov    rcx,QWORD PTR [rsp+0x28]
  4262d2:	mov    rdx,rsi
  4262d5:	lea    r8,[rax+rax*1]
  4262d9:	call   0x424090
  4262de:	add    DWORD PTR [rsp+0x4c],0x1
  4262e3:	mov    QWORD PTR [rsp+0x78],rsi
  4262e8:	mov    QWORD PTR [rsp+0x28],0x0
  4262f1:	jmp    0x42456a
  4262f6:	mov    rcx,QWORD PTR [rsp+0x28]
  4262fb:	mov    rbp,r12
  4262fe:	mov    rdx,rdi
  426301:	mov    r8,rbp
  426304:	mov    QWORD PTR [rsp+0x58],rbx
  426309:	mov    r15d,r14d
  42630c:	mov    rbx,QWORD PTR [rsp+0x80]
  426314:	mov    r14,QWORD PTR [rsp+0x1b0]
  42631c:	xor    r13d,r13d
  42631f:	mov    r12,QWORD PTR [rsp+0x30]
  426324:	mov    QWORD PTR [rsp+0x80],rdi
  42632c:	call   0x424090
  426331:	add    DWORD PTR [rsp+0x4c],0x1
  426336:	mov    QWORD PTR [rsp+0x28],0x0
  42633f:	jmp    0x42456a
  426344:	test   BYTE PTR [rsp+0x30],0x10
  426349:	je     0x426739
  42634f:	call   0x42faa8
  426354:	movabs rdx,0xffffffff00000000
  42635e:	and    rdx,QWORD PTR [rsp+0xb8]
  426366:	mov    eax,eax
  426368:	or     rdx,rax
  42636b:	mov    QWORD PTR [rsp+0xb8],rdx
  426373:	jmp    0x425078
  426378:	fstp   st(0)
  42637a:	mov    rax,QWORD PTR [rsp+0x128]
  426382:	cmp    QWORD PTR [rsp+0x120],rax
  42638a:	jne    0x424758
  426390:	jmp    0x424890
  426395:	call   0x42fc38
  42639a:	mov    DWORD PTR [rax],0x16
  4263a0:	mov    eax,0xffffffff
  4263a5:	jmp    0x4248af
  4263aa:	mov    eax,DWORD PTR [rsp+0x4c]
  4263ae:	test   eax,eax
  4263b0:	cmove  eax,r15d
  4263b4:	mov    ecx,eax
  4263b6:	mov    r8,QWORD PTR [rsp+0x28]
  4263bb:	lea    rdx,[rsp+0x108]
  4263c3:	lea    r9,[rsp+0x120]
  4263cb:	call   0x4241f0
  4263d0:	jmp    0x4248af
  4263d5:	or     eax,0x1
  4263d8:	movzx  ebp,BYTE PTR [rbx+0x2]
  4263dc:	mov    DWORD PTR [rsp+0x30],eax
  4263e0:	lea    rax,[rbx+0x2]
  4263e4:	mov    QWORD PTR [rsp+0x60],rax
  4263e9:	jmp    0x4246f0
  4263ee:	or     eax,0x404
  4263f3:	movzx  ebp,BYTE PTR [rbx+0x2]
  4263f7:	mov    DWORD PTR [rsp+0x30],eax
  4263fb:	lea    rax,[rbx+0x2]
  4263ff:	mov    QWORD PTR [rsp+0x60],rax
  426404:	jmp    0x4246f0
  426409:	or     eax,0xc
  42640c:	movzx  ebp,BYTE PTR [rbx+0x2]
  426410:	mov    DWORD PTR [rsp+0x30],eax
  426414:	lea    rax,[rbx+0x2]
  426418:	mov    QWORD PTR [rsp+0x60],rax
  42641d:	jmp    0x4246f0
  426422:	mov    r9d,0x1
  426428:	mov    r8,r12
  42642b:	mov    rdx,r14
  42642e:	mov    ecx,r15d
  426431:	mov    rbx,QWORD PTR [rsp+0xa0]
  426439:	mov    QWORD PTR [rsp+0x80],rdi
  426441:	call   0x424380
  426446:	jmp    0x425d5f
  42644b:	lea    rdx,[rsp+0x120]
  426453:	lea    rcx,[rsp+0x108]
  42645b:	call   0x4240d0
  426460:	mov    eax,0xffffffff
  426465:	jmp    0x4248af
  42646a:	mov    QWORD PTR [rsp+0x78],rbx
  42646f:	mov    rbx,QWORD PTR [rsp+0xa0]
  426477:	test   rdi,rdi
  42647a:	jne    0x42535e
  426480:	mov    rax,QWORD PTR [rsp+0xa8]
  426488:	cmp    rax,QWORD PTR [rsp+0x110]
  426490:	je     0x424890
  426496:	xor    r13d,r13d
  426499:	test   BYTE PTR [rsp+0x30],0x80
  42649e:	jne    0x42456a
  4264a4:	jmp    0x4262ba
  4264a9:	mov    r8,QWORD PTR [rsp+0x120]
  4264b1:	lea    r13,[rsp+0x118]
  4264b9:	xor    ecx,ecx
  4264bb:	mov    rdx,r13
  4264be:	call   0x424160
  4264c3:	mov    QWORD PTR [rsp+0x120],rax
  4264cb:	mov    BYTE PTR [rax],r15b
  4264ce:	xor    eax,eax
  4264d0:	test   esi,esi
  4264d2:	mov    rdx,r12
  4264d5:	mov    rcx,r14
  4264d8:	setg   al
  4264db:	sub    esi,eax
  4264dd:	call   0x4242e0
  4264e2:	mov    QWORD PTR [rsp+0xa0],0x1
  4264ee:	mov    r15d,eax
  4264f1:	jmp    0x424ebe
  4264f6:	mov    QWORD PTR [rsp+0x80],rbx
  4264fe:	mov    rbx,QWORD PTR [rsp+0xa0]
  426506:	mov    rax,QWORD PTR [rsp+0xa8]
  42650e:	cmp    rax,QWORD PTR [rsp+0x110]
  426516:	je     0x424890
  42651c:	xor    r13d,r13d
  42651f:	test   BYTE PTR [rsp+0x30],0x80
  426524:	jne    0x42456a
  42652a:	jmp    0x425d6a
  42652f:	mov    rdx,r12
  426532:	mov    rcx,r14
  426535:	call   0x4242e0
  42653a:	cmp    eax,0xffffffff
  42653d:	mov    r15d,eax
  426540:	je     0x42563e
  426546:	mov    eax,r15d
  426549:	jmp    0x426560
  42654b:	nop    DWORD PTR [rax+rax*1+0x0]
  426550:	mov    rdx,r12
  426553:	mov    rcx,r14
  426556:	call   0x4242e0
  42655b:	cmp    eax,0xffffffff
  42655e:	je     0x426567
  426560:	sub    esi,0x1
  426563:	test   esi,esi
  426565:	jg     0x426550
  426567:	mov    r15d,eax
  42656a:	jmp    0x424758
  42656f:	test   BYTE PTR [rsp+0x30],0x4
  426574:	jne    0x426891
  42657a:	test   BYTE PTR [rsp+0x30],0x2
  42657f:	je     0x426d0d
  426585:	test   edi,edi
  426587:	jne    0x426e4a
  42658d:	mov    rax,QWORD PTR [rsp+0x50]
  426592:	lea    rdx,[rax+0x8]
  426596:	mov    rax,QWORD PTR [rax]
  426599:	mov    rcx,QWORD PTR [rsp+0x110]
  4265a1:	mov    QWORD PTR [rsp+0x50],rdx
  4265a6:	xor    r13d,r13d
  4265a9:	mov    WORD PTR [rax],cx
  4265ac:	jmp    0x42456a
  4265b1:	mov    rdx,QWORD PTR [rsp+0x98]
  4265b9:	mov    rcx,QWORD PTR [rsp+0x120]
  4265c1:	call   0x427540
  4265c6:	test   BYTE PTR [rsp+0x30],0x80
  4265cb:	movaps xmm8,xmm0
  4265cf:	jne    0x42637a
  4265d5:	mov    rax,QWORD PTR [rsp+0x120]
  4265dd:	cmp    QWORD PTR [rsp+0x128],rax
  4265e5:	je     0x424890
  4265eb:	test   edi,edi
  4265ed:	jne    0x426dd2
  4265f3:	mov    rsi,QWORD PTR [rsp+0x50]
  4265f8:	mov    rax,QWORD PTR [rsi]
  4265fb:	add    rsi,0x8
  4265ff:	mov    QWORD PTR [rsp+0x50],rsi
  426604:	cmp    BYTE PTR [rsp+0xd3],0x0
  42660c:	movaps xmm0,xmm8
  426610:	je     0x426615
  426612:	xorps  xmm0,xmm7
  426615:	movss  DWORD PTR [rax],xmm0
  426619:	jmp    0x4250c8
  42661e:	mov    r15,QWORD PTR [rsp+0xa0]
  426626:	lea    r13,[rsp+0x118]
  42662e:	mov    r8,QWORD PTR [rsp+0x120]
  426636:	mov    rdx,r13
  426639:	mov    rcx,r15
  42663c:	lea    r13,[r15+0x1]
  426640:	call   0x424160
  426645:	mov    rdx,r12
  426648:	mov    QWORD PTR [rsp+0x120],rax
  426650:	mov    rcx,r14
  426653:	mov    BYTE PTR [rax+r15*1],0x30
  426658:	call   0x4242e0
  42665d:	mov    r15d,eax
  426660:	mov    ecx,r15d
  426663:	call   0x42fa98
  426668:	cmp    eax,0x78
  42666b:	je     0x426ee3
  426671:	cmp    r15d,0xffffffff
  426675:	mov    QWORD PTR [rsp+0xa0],r13
  42667d:	setne  dl
  426680:	test   esi,esi
  426682:	setne  al
  426685:	and    eax,edx
  426687:	jmp    0x424f34
  42668c:	test   DWORD PTR [rsp+0x30],0x400
  426694:	jne    0x42682f
  42669a:	mov    rax,QWORD PTR [rsp+0x28]
  42669f:	mov    rsi,QWORD PTR [rsp+0x58]
  4266a4:	mov    ecx,DWORD PTR [rsp+0x4c]
  4266a8:	mov    QWORD PTR [rsp+0x28],0x0
  4266b1:	mov    rax,QWORD PTR [rax]
  4266b4:	add    ecx,0x1
  4266b7:	mov    BYTE PTR [rax+rsi*1-0x1],0x0
  4266bc:	jmp    0x4263b6
  4266c1:	mov    rax,QWORD PTR [rsp+0x58]
  4266c6:	mov    DWORD PTR [rsp+0x80],esi
  4266cd:	mov    rsi,QWORD PTR [rsp+0x28]
  4266d2:	lea    r13,[rax+rax*1]
  4266d6:	lea    rbx,[rax+0x1]
  4266da:	mov    rax,r12
  4266dd:	mov    r12d,edi
  4266e0:	mov    rdi,r13
  4266e3:	mov    r13,rax
  4266e6:	jmp    0x4266ff
  4266e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4266f0:	cmp    rdi,rbx
  4266f3:	jbe    0x426b20
  4266f9:	mov    rcx,QWORD PTR [rsi]
  4266fc:	mov    rdi,rbx
  4266ff:	mov    rdx,rdi
  426702:	call   0x42fb18
  426707:	test   rax,rax
  42670a:	je     0x4266f0
  42670c:	mov    rbx,r13
  42670f:	mov    r13,rdi
  426712:	mov    edi,r12d
  426715:	mov    r12,rbx
  426718:	mov    rbx,QWORD PTR [rsp+0x28]
  42671d:	mov    esi,DWORD PTR [rsp+0x80]
  426724:	mov    QWORD PTR [rbx],rax
  426727:	mov    rbx,QWORD PTR [rsp+0x58]
  42672c:	mov    QWORD PTR [rsp+0x58],r13
  426731:	add    rbx,rax
  426734:	jmp    0x426122
  426739:	call   0x42faa0
  42673e:	jmp    0x426354
  426743:	mov    r8,QWORD PTR [rsp+0x98]
  42674b:	mov    rdx,QWORD PTR [rsp+0x120]
  426753:	lea    rcx,[rsp+0xe0]
  42675b:	call   0x4275f0
  426760:	fld    TBYTE PTR [rsp+0xe0]
  426767:	test   BYTE PTR [rsp+0x30],0x80
  42676c:	fstp   TBYTE PTR [rsp+0x60]
  426770:	jne    0x42637a
  426776:	mov    rax,QWORD PTR [rsp+0x120]
  42677e:	cmp    QWORD PTR [rsp+0x128],rax
  426786:	je     0x424890
  42678c:	test   edi,edi
  42678e:	jne    0x426e36
  426794:	mov    rsi,QWORD PTR [rsp+0x50]
  426799:	mov    rax,QWORD PTR [rsi]
  42679c:	add    rsi,0x8
  4267a0:	mov    QWORD PTR [rsp+0x50],rsi
  4267a5:	cmp    BYTE PTR [rsp+0xd3],0x0
  4267ad:	fld    TBYTE PTR [rsp+0x60]
  4267b1:	je     0x4267b5
  4267b3:	fchs   
  4267b5:	fstp   TBYTE PTR [rax]
  4267b7:	jmp    0x4250c8
  4267bc:	call   0x427de0
  4267c1:	mov    QWORD PTR [rsp+0xb8],rax
  4267c9:	jmp    0x425078
  4267ce:	test   BYTE PTR [rsp+0x30],0x4
  4267d3:	jne    0x426841
  4267d5:	test   BYTE PTR [rsp+0x30],0x2
  4267da:	je     0x426cd9
  4267e0:	test   edi,edi
  4267e2:	jne    0x4271ba
  4267e8:	mov    rsi,QWORD PTR [rsp+0x50]
  4267ed:	mov    rax,QWORD PTR [rsi]
  4267f0:	add    rsi,0x8
  4267f4:	mov    QWORD PTR [rsp+0x50],rsi
  4267f9:	movzx  esi,WORD PTR [rsp+0xb8]
  426801:	mov    WORD PTR [rax],si
  426804:	jmp    0x4250c8
  426809:	mov    r9d,0x1
  42680f:	mov    r8,r12
  426812:	mov    rdx,r14
  426815:	mov    ecx,r15d
  426818:	mov    QWORD PTR [rsp+0x78],rbx
  42681d:	mov    rbx,QWORD PTR [rsp+0xa0]
  426825:	call   0x424380
  42682a:	jmp    0x426477
  42682f:	mov    ecx,0xffffffff
  426834:	jmp    0x4263b6
  426839:	mov    r15,r13
  42683c:	jmp    0x425c8f
  426841:	test   edi,edi
  426843:	jne    0x426cc5
  426849:	mov    rsi,QWORD PTR [rsp+0x50]
  42684e:	mov    rax,QWORD PTR [rsi]
  426851:	add    rsi,0x8
  426855:	mov    QWORD PTR [rsp+0x50],rsi
  42685a:	mov    esi,DWORD PTR [rsp+0xb8]
  426861:	mov    DWORD PTR [rax],esi
  426863:	jmp    0x4250c8
  426868:	mov    r9d,0x1
  42686e:	mov    r8,r12
  426871:	mov    rdx,r14
  426874:	mov    ecx,r15d
  426877:	mov    QWORD PTR [rsp+0x80],rbx
  42687f:	mov    rbx,QWORD PTR [rsp+0xa0]
  426887:	call   0x424380
  42688c:	jmp    0x426506
  426891:	test   edi,edi
  426893:	jne    0x426de6
  426899:	mov    rsi,QWORD PTR [rsp+0x50]
  42689e:	mov    rax,QWORD PTR [rsi]
  4268a1:	add    rsi,0x8
  4268a5:	mov    QWORD PTR [rsp+0x50],rsi
  4268aa:	mov    rdx,QWORD PTR [rsp+0x110]
  4268b2:	xor    r13d,r13d
  4268b5:	mov    DWORD PTR [rax],edx
  4268b7:	jmp    0x42456a
  4268bc:	xor    r9d,r9d
  4268bf:	mov    r8,r12
  4268c2:	mov    rdx,r14
  4268c5:	mov    ecx,r15d
  4268c8:	mov    rbx,QWORD PTR [rsp+0xc8]
  4268d0:	mov    edi,DWORD PTR [rsp+0xd4]
  4268d7:	call   0x424380
  4268dc:	jmp    0x425dfc
  4268e1:	lea    r13,[rsp+0x118]
  4268e9:	mov    r8,QWORD PTR [rsp+0x120]
  4268f1:	xor    ecx,ecx
  4268f3:	mov    rdx,r13
  4268f6:	call   0x424160
  4268fb:	test   esi,esi
  4268fd:	mov    QWORD PTR [rsp+0x120],rax
  426905:	mov    BYTE PTR [rax],r15b
  426908:	je     0x424890
  42690e:	lea    rax,[rip+0x162f2]        # 0x43cc07
  426915:	mov    ecx,0x1
  42691a:	mov    QWORD PTR [rsp+0x60],rbx
  42691f:	mov    r15d,edi
  426922:	mov    rdi,rcx
  426925:	mov    rbx,rax
  426928:	jmp    0x42693b
  42692a:	nop    WORD PTR [rax+rax*1+0x0]
  426930:	test   esi,esi
  426932:	je     0x424890
  426938:	mov    rdi,rdx
  42693b:	mov    rdx,r12
  42693e:	mov    rcx,r14
  426941:	call   0x4242e0
  426946:	cmp    eax,0xffffffff
  426949:	mov    ebp,eax
  42694b:	je     0x424890
  426951:	mov    ecx,eax
  426953:	call   0x42fa98
  426958:	movsx  edx,BYTE PTR [rbx]
  42695b:	cmp    eax,edx
  42695d:	jne    0x424890
  426963:	mov    r8,QWORD PTR [rsp+0x120]
  42696b:	xor    eax,eax
  42696d:	test   esi,esi
  42696f:	setg   al
  426972:	mov    rdx,r13
  426975:	mov    rcx,rdi
  426978:	add    rbx,0x1
  42697c:	sub    esi,eax
  42697e:	call   0x424160
  426983:	cmp    BYTE PTR [rbx],0x0
  426986:	mov    QWORD PTR [rsp+0x120],rax
  42698e:	lea    rdx,[rdi+0x1]
  426992:	mov    BYTE PTR [rax+rdi*1],bpl
  426996:	jne    0x426930
  426998:	mov    edi,r15d
  42699b:	mov    rbx,QWORD PTR [rsp+0x60]
  4269a0:	mov    r15d,ebp
  4269a3:	mov    rbp,rdx
  4269a6:	jmp    0x425e1e
  4269ab:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4269b3:	mov    edx,edi
  4269b5:	call   0x424280
  4269ba:	mov    QWORD PTR [rsp+0x78],rax
  4269bf:	jmp    0x425afe
  4269c4:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4269cc:	mov    edx,edi
  4269ce:	call   0x424280
  4269d3:	mov    QWORD PTR [rsp+0x80],rax
  4269db:	jmp    0x425b31
  4269e0:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4269e8:	mov    edx,edi
  4269ea:	call   0x424280
  4269ef:	mov    rdi,rax
  4269f2:	jmp    0x425a99
  4269f7:	lea    r13,[rsp+0x118]
  4269ff:	mov    r8,QWORD PTR [rsp+0x120]
  426a07:	xor    ecx,ecx
  426a09:	mov    rdx,r13
  426a0c:	call   0x424160
  426a11:	test   esi,esi
  426a13:	mov    QWORD PTR [rsp+0x120],rax
  426a1b:	mov    BYTE PTR [rax],r15b
  426a1e:	je     0x424890
  426a24:	mov    eax,0x1
  426a29:	mov    QWORD PTR [rsp+0xa0],rbx
  426a31:	lea    rbp,[rip+0x161d3]        # 0x43cc0b
  426a38:	mov    r15d,edi
  426a3b:	mov    rbx,rax
  426a3e:	jmp    0x426a4b
  426a40:	test   esi,esi
  426a42:	je     0x424890
  426a48:	mov    rbx,r9
  426a4b:	mov    rdx,r12
  426a4e:	mov    rcx,r14
  426a51:	call   0x4242e0
  426a56:	cmp    eax,0xffffffff
  426a59:	mov    edi,eax
  426a5b:	je     0x424890
  426a61:	mov    ecx,eax
  426a63:	call   0x42fa98
  426a68:	movsx  edx,BYTE PTR [rbp+0x0]
  426a6c:	cmp    eax,edx
  426a6e:	jne    0x424890
  426a74:	mov    r8,QWORD PTR [rsp+0x120]
  426a7c:	xor    eax,eax
  426a7e:	test   esi,esi
  426a80:	setg   al
  426a83:	mov    rdx,r13
  426a86:	mov    rcx,rbx
  426a89:	add    rbp,0x1
  426a8d:	sub    esi,eax
  426a8f:	call   0x424160
  426a94:	cmp    BYTE PTR [rbp+0x0],0x0
  426a98:	mov    QWORD PTR [rsp+0x120],rax
  426aa0:	lea    r9,[rbx+0x1]
  426aa4:	mov    BYTE PTR [rax+rbx*1],dil
  426aa8:	jne    0x426a40
  426aaa:	mov    eax,r15d
  426aad:	test   esi,esi
  426aaf:	mov    r15d,edi
  426ab2:	mov    QWORD PTR [rsp+0x60],rbx
  426ab7:	mov    edi,eax
  426ab9:	mov    rbx,QWORD PTR [rsp+0xa0]
  426ac1:	mov    rbp,r9
  426ac4:	je     0x425e1e
  426aca:	mov    rdx,r12
  426acd:	mov    rcx,r14
  426ad0:	mov    QWORD PTR [rsp+0xa0],r9
  426ad8:	call   0x4242e0
  426add:	cmp    eax,0xffffffff
  426ae0:	mov    r15d,eax
  426ae3:	je     0x425e1e
  426ae9:	mov    ecx,eax
  426aeb:	call   0x42fa98
  426af0:	cmp    eax,0x69
  426af3:	mov    r9,QWORD PTR [rsp+0xa0]
  426afb:	je     0x4270b9
  426b01:	xor    r9d,r9d
  426b04:	mov    r8,r12
  426b07:	mov    rdx,r14
  426b0a:	mov    ecx,r15d
  426b0d:	call   0x424380
  426b12:	jmp    0x425e1e
  426b17:	nop    WORD PTR [rax+rax*1+0x0]
  426b20:	test   DWORD PTR [rsp+0x30],0x400
  426b28:	mov    r8,QWORD PTR [rsp+0x28]
  426b2d:	jne    0x426d90
  426b33:	mov    rax,QWORD PTR [r8]
  426b36:	mov    rsi,QWORD PTR [rsp+0x58]
  426b3b:	xor    r8d,r8d
  426b3e:	mov    ecx,DWORD PTR [rsp+0x4c]
  426b42:	mov    BYTE PTR [rax+rsi*1-0x1],0x0
  426b47:	add    ecx,0x1
  426b4a:	lea    rdx,[rsp+0x108]
  426b52:	lea    r9,[rsp+0x120]
  426b5a:	call   0x4241f0
  426b5f:	jmp    0x4248af
  426b64:	test   edi,edi
  426b66:	jne    0x426e1d
  426b6c:	mov    rax,QWORD PTR [rsp+0x50]
  426b71:	mov    rdi,QWORD PTR [rax]
  426b74:	add    rax,0x8
  426b78:	mov    QWORD PTR [rsp+0x50],rax
  426b7d:	mov    QWORD PTR [rsp+0x78],rdi
  426b82:	cmp    QWORD PTR [rsp+0x78],0x0
  426b88:	jne    0x424ac5
  426b8e:	jmp    0x424890
  426b93:	mov    ecx,eax
  426b95:	call   0x42fa98
  426b9a:	cmp    eax,0x6e
  426b9d:	je     0x426fa9
  426ba3:	cmp    eax,0x69
  426ba6:	jne    0x424c35
  426bac:	lea    r13,[rsp+0x118]
  426bb4:	mov    r8,QWORD PTR [rsp+0x120]
  426bbc:	xor    ecx,ecx
  426bbe:	mov    rdx,r13
  426bc1:	call   0x424160
  426bc6:	mov    QWORD PTR [rsp+0x120],rax
  426bce:	mov    BYTE PTR [rax],r15b
  426bd1:	jmp    0x426a24
  426bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426be0:	test   edi,edi
  426be2:	jne    0x426db6
  426be8:	mov    rax,QWORD PTR [rsp+0x50]
  426bed:	mov    rdi,QWORD PTR [rax]
  426bf0:	add    rax,0x8
  426bf4:	mov    QWORD PTR [rsp+0x50],rax
  426bf9:	mov    QWORD PTR [rsp+0x80],rdi
  426c01:	cmp    QWORD PTR [rsp+0x80],0x0
  426c0a:	jne    0x424ac5
  426c10:	jmp    0x424890
  426c15:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c1d:	mov    edx,edi
  426c1f:	call   0x424280
  426c24:	mov    QWORD PTR [rsp+0x28],rax
  426c29:	jmp    0x425869
  426c2e:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c36:	mov    edx,edi
  426c38:	call   0x424280
  426c3d:	mov    QWORD PTR [rsp+0x28],rax
  426c42:	jmp    0x4251a7
  426c47:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c4f:	mov    edx,edi
  426c51:	call   0x424280
  426c56:	mov    QWORD PTR [rsp+0x78],rax
  426c5b:	jmp    0x425ace
  426c60:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c68:	mov    edx,edi
  426c6a:	call   0x424280
  426c6f:	mov    QWORD PTR [rsp+0x28],rax
  426c74:	jmp    0x42545b
  426c79:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c81:	mov    edx,edi
  426c83:	call   0x424280
  426c88:	mov    QWORD PTR [rsp+0x28],rax
  426c8d:	jmp    0x425710
  426c92:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426c9a:	mov    edx,edi
  426c9c:	call   0x424280
  426ca1:	jmp    0x4249fa
  426ca6:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426cae:	mov    edx,edi
  426cb0:	call   0x424280
  426cb5:	jmp    0x4250bd
  426cba:	mov    edx,r15d
  426cbd:	mov    r15d,eax
  426cc0:	jmp    0x4255a2
  426cc5:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426ccd:	mov    edx,edi
  426ccf:	call   0x424280
  426cd4:	jmp    0x42685a
  426cd9:	test   BYTE PTR [rsp+0x30],0x1
  426cde:	je     0x426841
  426ce4:	test   edi,edi
  426ce6:	jne    0x4271fd
  426cec:	mov    rsi,QWORD PTR [rsp+0x50]
  426cf1:	mov    rax,QWORD PTR [rsi]
  426cf4:	add    rsi,0x8
  426cf8:	mov    QWORD PTR [rsp+0x50],rsi
  426cfd:	movzx  esi,BYTE PTR [rsp+0xb8]
  426d05:	mov    BYTE PTR [rax],sil
  426d08:	jmp    0x4250c8
  426d0d:	test   BYTE PTR [rsp+0x30],0x1
  426d12:	je     0x426891
  426d18:	test   edi,edi
  426d1a:	jne    0x427084
  426d20:	mov    rsi,QWORD PTR [rsp+0x50]
  426d25:	mov    rax,QWORD PTR [rsi]
  426d28:	add    rsi,0x8
  426d2c:	mov    QWORD PTR [rsp+0x50],rsi
  426d31:	mov    rdx,QWORD PTR [rsp+0x110]
  426d39:	xor    r13d,r13d
  426d3c:	mov    BYTE PTR [rax],dl
  426d3e:	jmp    0x42456a
  426d43:	mov    r13,QWORD PTR [rsp+0x70]
  426d48:	jmp    0x424d5f
  426d4d:	test   DWORD PTR [rsp+0x30],0x400
  426d55:	jne    0x42682f
  426d5b:	mov    rax,QWORD PTR [rsp+0x28]
  426d60:	mov    rsi,QWORD PTR [rsp+0x60]
  426d65:	xor    r8d,r8d
  426d68:	mov    ecx,DWORD PTR [rsp+0x4c]
  426d6c:	mov    QWORD PTR [rsp+0x28],0x0
  426d75:	mov    rax,QWORD PTR [rax]
  426d78:	add    ecx,0x1
  426d7b:	mov    WORD PTR [rax+rsi*1-0x2],r8w
  426d81:	jmp    0x4263b6
  426d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d90:	mov    ecx,0xffffffff
  426d95:	jmp    0x426b4a
  426d9a:	fstp   TBYTE PTR [rsp+0x30]
  426d9e:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426da6:	mov    edx,edi
  426da8:	call   0x424280
  426dad:	fld    TBYTE PTR [rsp+0x30]
  426db1:	jmp    0x425eb1
  426db6:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426dbe:	mov    edx,edi
  426dc0:	call   0x424280
  426dc5:	mov    QWORD PTR [rsp+0x80],rax
  426dcd:	jmp    0x426c01
  426dd2:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426dda:	mov    edx,edi
  426ddc:	call   0x424280
  426de1:	jmp    0x426604
  426de6:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426dee:	mov    edx,edi
  426df0:	call   0x424280
  426df5:	jmp    0x4268aa
  426dfa:	mov    r9d,0x1
  426e00:	mov    r8,r12
  426e03:	mov    rdx,r14
  426e06:	mov    ecx,r15d
  426e09:	mov    QWORD PTR [rsp+0x78],rbx
  426e0e:	mov    rbx,QWORD PTR [rsp+0x60]
  426e13:	call   0x424380
  426e18:	jmp    0x4262af
  426e1d:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426e25:	mov    edx,edi
  426e27:	call   0x424280
  426e2c:	mov    QWORD PTR [rsp+0x78],rax
  426e31:	jmp    0x426b82
  426e36:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426e3e:	mov    edx,edi
  426e40:	call   0x424280
  426e45:	jmp    0x4267a5
  426e4a:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426e52:	mov    edx,edi
  426e54:	call   0x424280
  426e59:	mov    rdx,QWORD PTR [rsp+0x50]
  426e5e:	jmp    0x426599
  426e63:	mov    rbx,QWORD PTR [rsp+0x58]
  426e68:	mov    rdi,r8
  426e6b:	add    rbx,0x1
  426e6f:	jmp    0x426e85
  426e71:	cmp    rdi,rbx
  426e74:	jbe    0x427211
  426e7a:	mov    rax,QWORD PTR [rsp+0x28]
  426e7f:	mov    rdi,rbx
  426e82:	mov    rcx,QWORD PTR [rax]
  426e85:	lea    rdx,[rdi+rdi*1]
  426e89:	mov    QWORD PTR [rsp+0x58],r8
  426e8e:	call   0x42fb18
  426e93:	test   rax,rax
  426e96:	mov    r8,QWORD PTR [rsp+0x58]
  426e9b:	je     0x426e71
  426e9d:	mov    rbx,QWORD PTR [rsp+0x28]
  426ea2:	mov    QWORD PTR [rsp+0x58],rdi
  426ea7:	mov    QWORD PTR [rbx],rax
  426eaa:	lea    rbx,[rax+r8*1]
  426eae:	jmp    0x42627d
  426eb3:	mov    ecx,eax
  426eb5:	call   0x42fa98
  426eba:	cmp    eax,0x78
  426ebd:	je     0x426fd3
  426ec3:	mov    ebp,0x1
  426ec8:	jmp    0x424c47
  426ecd:	mov    rax,QWORD PTR [rsp+0x40]
  426ed2:	xor    edx,edx
  426ed4:	jmp    0x424dbf
  426ed9:	mov    rax,QWORD PTR [rsp+0x40]
  426ede:	jmp    0x42559f
  426ee3:	test   DWORD PTR [rsp+0x48],0xffffffef
  426eeb:	je     0x426f21
  426eed:	cmp    r15d,0xffffffff
  426ef1:	mov    QWORD PTR [rsp+0xa0],r13
  426ef9:	setne  dl
  426efc:	test   esi,esi
  426efe:	setne  al
  426f01:	and    eax,edx
  426f03:	jmp    0x424f46
  426f08:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426f10:	mov    edx,edi
  426f12:	call   0x424280
  426f17:	mov    QWORD PTR [rsp+0x28],rax
  426f1c:	jmp    0x4259c9
  426f21:	xor    eax,eax
  426f23:	test   esi,esi
  426f25:	mov    rdx,r12
  426f28:	setg   al
  426f2b:	mov    rcx,r14
  426f2e:	sub    esi,eax
  426f30:	call   0x4242e0
  426f35:	cmp    eax,0xffffffff
  426f38:	mov    r15d,eax
  426f3b:	mov    QWORD PTR [rsp+0xa0],r13
  426f43:	setne  dl
  426f46:	test   esi,esi
  426f48:	mov    DWORD PTR [rsp+0x48],0x10
  426f50:	setne  al
  426f53:	and    eax,edx
  426f55:	jmp    0x424f46
  426f5a:	mov    rcx,QWORD PTR [rsp+0x1c0]
  426f62:	mov    edx,edi
  426f64:	call   0x424280
  426f69:	mov    QWORD PTR [rsp+0x28],rax
  426f6e:	jmp    0x424a53
  426f73:	lea    r13,[rsp+0x118]
  426f7b:	mov    r8,QWORD PTR [rsp+0x120]
  426f83:	xor    ecx,ecx
  426f85:	mov    rdx,r13
  426f88:	call   0x424160
  426f8d:	mov    QWORD PTR [rsp+0xa0],0x1
  426f99:	mov    QWORD PTR [rsp+0x120],rax
  426fa1:	mov    BYTE PTR [rax],0x30
  426fa4:	jmp    0x425017
  426fa9:	lea    r13,[rsp+0x118]
  426fb1:	mov    r8,QWORD PTR [rsp+0x120]
  426fb9:	xor    ecx,ecx
  426fbb:	mov    rdx,r13
  426fbe:	call   0x424160
  426fc3:	mov    QWORD PTR [rsp+0x120],rax
  426fcb:	mov    BYTE PTR [rax],r15b
  426fce:	jmp    0x42690e
  426fd3:	mov    r8,QWORD PTR [rsp+0x120]
  426fdb:	mov    rdx,r13
  426fde:	mov    ecx,0x1
  426fe3:	mov    ebp,0x2
  426fe8:	call   0x424160
  426fed:	mov    QWORD PTR [rsp+0x120],rax
  426ff5:	mov    BYTE PTR [rax+0x1],r15b
  426ff9:	mov    rdx,r12
  426ffc:	mov    eax,DWORD PTR [rsp+0x30]
  427000:	mov    rcx,r14
  427003:	and    ah,0xfe
  427006:	or     eax,0x40
  427009:	mov    DWORD PTR [rsp+0x30],eax
  42700d:	call   0x4242e0
  427012:	mov    BYTE PTR [rsp+0xb0],0x70
  42701a:	mov    r15d,eax
  42701d:	jmp    0x424c47
  427022:	mov    ecx,eax
  427024:	call   0x42fa98
  427029:	cmp    eax,0x78
  42702c:	jne    0x426ec3
  427032:	mov    r8,QWORD PTR [rsp+0x120]
  42703a:	mov    rdx,r13
  42703d:	mov    ecx,0x1
  427042:	sub    esi,0x1
  427045:	mov    ebp,0x2
  42704a:	call   0x424160
  42704f:	mov    QWORD PTR [rsp+0x120],rax
  427057:	mov    BYTE PTR [rax+0x1],r15b
  42705b:	mov    rdx,r12
  42705e:	mov    eax,DWORD PTR [rsp+0x30]
  427062:	mov    rcx,r14
  427065:	and    ah,0xfe
  427068:	or     eax,0x40
  42706b:	mov    DWORD PTR [rsp+0x30],eax
  42706f:	call   0x4242e0
  427074:	mov    BYTE PTR [rsp+0xb0],0x70
  42707c:	mov    r15d,eax
  42707f:	jmp    0x424c47
  427084:	mov    rcx,QWORD PTR [rsp+0x1c0]
  42708c:	mov    edx,edi
  42708e:	call   0x424280
  427093:	jmp    0x426d31
  427098:	mov    ecx,DWORD PTR [rsp+0x4c]
  42709c:	lea    rdx,[rsp+0x108]
  4270a4:	lea    r9,[rsp+0x120]
  4270ac:	xor    r8d,r8d
  4270af:	call   0x4241f0
  4270b4:	jmp    0x4248af
  4270b9:	mov    r8,QWORD PTR [rsp+0x120]
  4270c1:	xor    eax,eax
  4270c3:	test   esi,esi
  4270c5:	setg   al
  4270c8:	mov    rcx,r9
  4270cb:	mov    rdx,r13
  4270ce:	sub    esi,eax
  4270d0:	call   0x424160
  4270d5:	mov    rcx,QWORD PTR [rsp+0x60]
  4270da:	mov    r9,QWORD PTR [rsp+0xa0]
  4270e2:	mov    QWORD PTR [rsp+0x120],rax
  4270ea:	add    rcx,0x2
  4270ee:	test   esi,esi
  4270f0:	mov    BYTE PTR [rax+r9*1],r15b
  4270f4:	je     0x424890
  4270fa:	lea    rax,[rip+0x15b0e]        # 0x43cc0f
  427101:	mov    r15d,edi
  427104:	mov    rbp,rbx
  427107:	mov    rdi,rcx
  42710a:	mov    QWORD PTR [rsp+0x60],rax
  42710f:	jmp    0x42711c
  427111:	test   esi,esi
  427113:	je     0x424890
  427119:	mov    rdi,rdx
  42711c:	mov    rdx,r12
  42711f:	mov    rcx,r14
  427122:	call   0x4242e0
  427127:	cmp    eax,0xffffffff
  42712a:	mov    ebx,eax
  42712c:	je     0x424890
  427132:	mov    ecx,eax
  427134:	call   0x42fa98
  427139:	mov    rcx,QWORD PTR [rsp+0x60]
  42713e:	movsx  edx,BYTE PTR [rcx]
  427141:	cmp    eax,edx
  427143:	jne    0x424890
  427149:	mov    r8,QWORD PTR [rsp+0x120]
  427151:	xor    eax,eax
  427153:	test   esi,esi
  427155:	setg   al
  427158:	mov    rdx,r13
  42715b:	mov    rcx,rdi
  42715e:	sub    esi,eax
  427160:	call   0x424160
  427165:	add    QWORD PTR [rsp+0x60],0x1
  42716b:	mov    QWORD PTR [rsp+0x120],rax
  427173:	lea    rdx,[rdi+0x1]
  427177:	mov    rcx,QWORD PTR [rsp+0x60]
  42717c:	mov    BYTE PTR [rax+rdi*1],bl
  42717f:	cmp    BYTE PTR [rcx],0x0
  427182:	jne    0x427111
  427184:	mov    edi,r15d
  427187:	mov    r15d,ebx
  42718a:	mov    rbx,rbp
  42718d:	mov    rbp,rdx
  427190:	jmp    0x425e1e
  427195:	mov    r13,r15
  427198:	mov    r15d,edi
  42719b:	mov    rbx,QWORD PTR [rsp+0xb0]
  4271a3:	mov    edi,DWORD PTR [rsp+0xc0]
  4271aa:	mov    QWORD PTR [rsp+0xa0],rbp
  4271b2:	mov    ecx,r15d
  4271b5:	jmp    0x425ccd
  4271ba:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4271c2:	mov    edx,edi
  4271c4:	call   0x424280
  4271c9:	jmp    0x4267f9
  4271ce:	test   DWORD PTR [rsp+0x30],0x400
  4271d6:	mov    ecx,0xffffffff
  4271db:	lea    rdx,[rsp+0x108]
  4271e3:	cmove  ecx,DWORD PTR [rsp+0x4c]
  4271e8:	lea    r9,[rsp+0x120]
  4271f0:	mov    r8,rax
  4271f3:	call   0x4241f0
  4271f8:	jmp    0x4248af
  4271fd:	mov    rcx,QWORD PTR [rsp+0x1c0]
  427205:	mov    edx,edi
  427207:	call   0x424280
  42720c:	jmp    0x426cfd
  427211:	test   DWORD PTR [rsp+0x30],0x400
  427219:	mov    rdi,r8
  42721c:	mov    r8,QWORD PTR [rsp+0x28]
  427221:	jne    0x426d90
  427227:	mov    rax,QWORD PTR [r8]
  42722a:	mov    ecx,DWORD PTR [rsp+0x4c]
  42722e:	xor    r12d,r12d
  427231:	xor    r8d,r8d
  427234:	mov    WORD PTR [rax+rdi*1-0x2],r12w
  42723a:	add    ecx,0x1
  42723d:	jmp    0x426b4a
  427242:	nop    DWORD PTR [rax+0x0]
  427246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427250:	push   rdi
  427251:	mov    eax,0x1040
  427256:	call   0x423de0
  42725b:	sub    rsp,rax
  42725e:	xor    eax,eax
  427260:	lea    r9,[rsp+0x20]
  427265:	mov    r11,rcx
  427268:	mov    ecx,0x203
  42726d:	mov    rdi,r9
  427270:	rep stos QWORD PTR es:[rdi],rax
  427273:	mov    rcx,r9
  427276:	mov    QWORD PTR [rsp+0x20],r11
  42727b:	call   0x4243e0
  427280:	add    rsp,0x1040
  427287:	pop    rdi
  427288:	ret    
  427289:	nop    DWORD PTR [rax+0x0]
  427290:	push   rdi
  427291:	mov    eax,0x1040
  427296:	call   0x423de0
  42729b:	sub    rsp,rax
  42729e:	xor    eax,eax
  4272a0:	lea    r9,[rsp+0x20]
  4272a5:	mov    r11,rcx
  4272a8:	mov    ecx,0x203
  4272ad:	mov    rdi,r9
  4272b0:	rep stos QWORD PTR es:[rdi],rax
  4272b3:	mov    rcx,r9
  4272b6:	mov    QWORD PTR [rsp+0x20],r11
  4272bb:	mov    BYTE PTR [rsp+0x1028],0x1
  4272c3:	call   0x4243e0
  4272c8:	add    rsp,0x1040
  4272cf:	pop    rdi
  4272d0:	ret    
  4272d1:	nop
  4272d2:	nop
  4272d3:	nop
  4272d4:	nop
  4272d5:	nop
  4272d6:	nop
  4272d7:	nop
  4272d8:	nop
  4272d9:	nop
  4272da:	nop
  4272db:	nop
  4272dc:	nop
  4272dd:	nop
  4272de:	nop
  4272df:	nop
  4272e0:	push   rsi
  4272e1:	push   rbx
  4272e2:	sub    rsp,0x38
  4272e6:	mov    rbx,rcx
  4272e9:	mov    rsi,rdx
  4272ec:	call   0x42fc68
  4272f1:	lea    rdx,[rax+0x30]
  4272f5:	mov    QWORD PTR [rsp+0x20],rsi
  4272fa:	mov    r9,rbx
  4272fd:	xor    r8d,r8d
  427300:	mov    ecx,0x6000
  427305:	call   0x429830
  42730a:	add    rsp,0x38
  42730e:	pop    rbx
  42730f:	pop    rsi
  427310:	ret    
  427311:	nop
  427312:	nop
  427313:	nop
  427314:	nop
  427315:	nop
  427316:	nop
  427317:	nop
  427318:	nop
  427319:	nop
  42731a:	nop
  42731b:	nop
  42731c:	nop
  42731d:	nop
  42731e:	nop
  42731f:	nop
  427320:	push   rsi
  427321:	push   rbx
  427322:	sub    rsp,0x38
  427326:	test   rdx,rdx
  427329:	mov    rsi,rcx
  42732c:	je     0x427360
  42732e:	lea    rbx,[rdx-0x1]
  427332:	mov    QWORD PTR [rsp+0x20],r9
  427337:	mov    rdx,rcx
  42733a:	mov    r9,r8
  42733d:	xor    ecx,ecx
  42733f:	mov    r8d,ebx
  427342:	call   0x429830
  427347:	cmp    eax,ebx
  427349:	cmovle ebx,eax
  42734c:	movsxd rbx,ebx
  42734f:	mov    BYTE PTR [rsi+rbx*1],0x0
  427353:	add    rsp,0x38
  427357:	pop    rbx
  427358:	pop    rsi
  427359:	ret    
  42735a:	nop    WORD PTR [rax+rax*1+0x0]
  427360:	mov    QWORD PTR [rsp+0x20],r9
  427365:	mov    rdx,rcx
  427368:	mov    r9,r8
  42736b:	xor    ecx,ecx
  42736d:	xor    r8d,r8d
  427370:	call   0x429830
  427375:	add    rsp,0x38
  427379:	pop    rbx
  42737a:	pop    rsi
  42737b:	ret    
  42737c:	nop
  42737d:	nop
  42737e:	nop
  42737f:	nop
  427380:	push   rbx
  427381:	add    rsp,0xffffffffffffff80
  427385:	movaps XMMWORD PTR [rsp+0x70],xmm6
  42738a:	movq   QWORD PTR [rsp+0x68],xmm0
  427390:	movq   rbx,xmm0
  427395:	mov    eax,DWORD PTR [rsp+0x6c]
  427399:	mov    edx,eax
  42739b:	and    eax,0x7ff00000
  4273a0:	and    edx,0xfffff
  4273a6:	or     edx,DWORD PTR [rsp+0x68]
  4273aa:	mov    ecx,edx
  4273ac:	or     ecx,eax
  4273ae:	je     0x427402
  4273b0:	cmp    eax,0x7ff00000
  4273b5:	je     0x427450
  4273bb:	movq   rax,xmm0
  4273c0:	shr    rax,0x20
  4273c4:	test   eax,eax
  4273c6:	js     0x427470
  4273cc:	mov    QWORD PTR [rsp+0x30],rbx
  4273d1:	lea    rcx,[rsp+0x50]
  4273d6:	lea    rdx,[rsp+0x40]
  4273db:	fld    QWORD PTR [rsp+0x30]
  4273df:	fstp   TBYTE PTR [rsp+0x40]
  4273e3:	call   0x42a2a0
  4273e8:	nop
  4273e9:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  4273ee:	fld    TBYTE PTR [rsp+0x50]
  4273f2:	fstp   QWORD PTR [rsp+0x38]
  4273f6:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4273fc:	sub    rsp,0xffffffffffffff80
  427400:	pop    rbx
  427401:	ret    
  427402:	call   0x42fc38
  427407:	movsd  xmm6,QWORD PTR [rip+0x15a09]        # 0x43ce18
  42740f:	mov    QWORD PTR [rsp+0x30],rbx
  427414:	pxor   xmm3,xmm3
  427418:	mov    DWORD PTR [rax],0x22
  42741e:	movsd  xmm2,QWORD PTR [rsp+0x30]
  427424:	lea    rdx,[rip+0x159e5]        # 0x43ce10
  42742b:	movsd  QWORD PTR [rsp+0x20],xmm6
  427431:	mov    ecx,0x3
  427436:	call   0x422ce0
  42743b:	movapd xmm0,xmm6
  42743f:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  427444:	sub    rsp,0xffffffffffffff80
  427448:	pop    rbx
  427449:	ret    
  42744a:	nop    WORD PTR [rax+rax*1+0x0]
  427450:	test   edx,edx
  427452:	je     0x4274b0
  427454:	movq   rax,xmm0
  427459:	shr    rax,0x20
  42745d:	test   eax,eax
  42745f:	js     0x427470
  427461:	movsd  xmm0,QWORD PTR [rip+0x159b7]        # 0x43ce20
  427469:	jmp    0x42743f
  42746b:	nop    DWORD PTR [rax+rax*1+0x0]
  427470:	call   0x42fc38
  427475:	movsd  xmm6,QWORD PTR [rip+0x159a3]        # 0x43ce20
  42747d:	mov    QWORD PTR [rsp+0x30],rbx
  427482:	pxor   xmm3,xmm3
  427486:	mov    DWORD PTR [rax],0x21
  42748c:	movsd  xmm2,QWORD PTR [rsp+0x30]
  427492:	lea    rdx,[rip+0x15977]        # 0x43ce10
  427499:	movsd  QWORD PTR [rsp+0x20],xmm6
  42749f:	mov    ecx,0x1
  4274a4:	call   0x422ce0
  4274a9:	movapd xmm0,xmm6
  4274ad:	jmp    0x42743f
  4274af:	nop
  4274b0:	movq   rax,xmm0
  4274b5:	shr    rax,0x20
  4274b9:	test   eax,eax
  4274bb:	js     0x427470
  4274bd:	movsd  xmm0,QWORD PTR [rip+0x15963]        # 0x43ce28
  4274c5:	jmp    0x42743f
  4274ca:	nop
  4274cb:	nop
  4274cc:	nop
  4274cd:	nop
  4274ce:	nop
  4274cf:	nop
  4274d0:	add    BYTE PTR [rax],al
  4274d2:	add    BYTE PTR [rax],al
  4274d4:	add    BYTE PTR [rax],al
  4274d6:	lock (bad) 
  4274d8:	pop    rdx
  4274da:	cmc    
  4274db:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  4274df:	(bad)  
  4274e0:	movsd  QWORD PTR [rsp-0x10],xmm0
  4274e6:	fld    QWORD PTR [rip+0xffffffffffffffe4]        # 0x4274d0
  4274ec:	fld    QWORD PTR [rsp-0x10]
  4274f0:	fxam   
  4274f2:	fnstsw ax
  4274f4:	fld    st(0)
  4274f6:	sahf   
  4274f7:	jb     0x42752a
  4274f9:	fsub   st,st(2)
  4274fb:	fld    st(0)
  4274fd:	fabs   
  4274ff:	fcomp  QWORD PTR [rip+0xffffffffffffffd3]        # 0x4274d8
  427505:	fnstsw ax
  427507:	and    ah,0x45
  42750a:	je     0x42751b
  42750c:	fstp   st(1)
  42750e:	fyl2xp1 
  427510:	fstp   QWORD PTR [rsp-0x10]
  427514:	movsd  xmm0,QWORD PTR [rsp-0x10]
  42751a:	ret    
  42751b:	fstp   st(0)
  42751d:	fyl2x  
  42751f:	fstp   QWORD PTR [rsp-0x10]
  427523:	movsd  xmm0,QWORD PTR [rsp-0x10]
  427529:	ret    
  42752a:	jp     0x4274f9
  42752c:	fstp   st(1)
  42752e:	fstp   st(1)
  427530:	fstp   QWORD PTR [rsp-0x10]
  427534:	movsd  xmm0,QWORD PTR [rsp-0x10]
  42753a:	ret    
  42753b:	nop
  42753c:	nop
  42753d:	nop
  42753e:	nop
  42753f:	nop
  427540:	sub    rsp,0x58
  427544:	lea    r8,[rip+0x9c45]        # 0x431190
  42754b:	lea    rax,[rsp+0x40]
  427550:	lea    r9,[rsp+0x4c]
  427555:	mov    QWORD PTR [rsp+0x20],rax
  42755a:	call   0x42cb60
  42755f:	mov    edx,eax
  427561:	and    edx,0x7
  427564:	cmp    edx,0x5
  427567:	ja     0x4275e0
  427569:	lea    rcx,[rip+0x158c0]        # 0x43ce30
  427570:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  427574:	add    rcx,rdx
  427577:	jmp    rcx
  427579:	nop    DWORD PTR [rax+0x0]
  427580:	mov    edx,0x7f800000
  427585:	mov    ecx,edx
  427587:	or     ecx,0x80000000
  42758d:	test   al,0x8
  42758f:	cmovne edx,ecx
  427592:	mov    DWORD PTR [rsp+0x3c],edx
  427596:	movss  xmm0,DWORD PTR [rsp+0x3c]
  42759c:	add    rsp,0x58
  4275a0:	ret    
  4275a1:	mov    edx,DWORD PTR [rsp+0x40]
  4275a5:	jmp    0x427585
  4275a7:	nop    WORD PTR [rax+rax*1+0x0]
  4275b0:	mov    ecx,DWORD PTR [rsp+0x4c]
  4275b4:	lea    edx,[rcx+0x96]
  4275ba:	mov    ecx,DWORD PTR [rsp+0x40]
  4275be:	shl    edx,0x17
  4275c1:	and    ecx,0x7fffff
  4275c7:	or     edx,ecx
  4275c9:	jmp    0x427585
  4275cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4275d0:	mov    edx,0x7fc00000
  4275d5:	jmp    0x427585
  4275d7:	nop    WORD PTR [rax+rax*1+0x0]
  4275e0:	xor    edx,edx
  4275e2:	jmp    0x427585
  4275e4:	nop
  4275e5:	nop
  4275e6:	nop
  4275e7:	nop
  4275e8:	nop
  4275e9:	nop
  4275ea:	nop
  4275eb:	nop
  4275ec:	nop
  4275ed:	nop
  4275ee:	nop
  4275ef:	nop
  4275f0:	push   rbx
  4275f1:	sub    rsp,0x60
  4275f5:	lea    rax,[rsp+0x40]
  4275fa:	fldz   
  4275fc:	mov    rbx,rcx
  4275ff:	lea    r9,[rsp+0x3c]
  427604:	mov    rcx,rdx
  427607:	mov    rdx,r8
  42760a:	lea    r8,[rip+0x9b9f]        # 0x4311b0
  427611:	mov    QWORD PTR [rsp+0x20],rax
  427616:	fstp   TBYTE PTR [rsp+0x50]
  42761a:	call   0x42cb60
  42761f:	mov    edx,eax
  427621:	and    edx,0x7
  427624:	cmp    edx,0x6
  427627:	ja     0x427672
  427629:	lea    r8,[rip+0x15820]        # 0x43ce50
  427630:	movsxd rdx,DWORD PTR [r8+rdx*4]
  427634:	add    r8,rdx
  427637:	jmp    r8
  42763a:	nop    WORD PTR [rax+rax*1+0x0]
  427640:	movzx  ecx,WORD PTR [rsp+0x3c]
  427645:	lea    edx,[rcx+0x403e]
  42764b:	mov    WORD PTR [rsp+0x58],dx
  427650:	mov    edx,DWORD PTR [rsp+0x40]
  427654:	mov    WORD PTR [rsp+0x50],dx
  427659:	shr    edx,0x10
  42765c:	mov    WORD PTR [rsp+0x52],dx
  427661:	mov    edx,DWORD PTR [rsp+0x44]
  427665:	mov    WORD PTR [rsp+0x54],dx
  42766a:	shr    edx,0x10
  42766d:	mov    WORD PTR [rsp+0x56],dx
  427672:	test   al,0x8
  427674:	je     0x42767d
  427676:	or     WORD PTR [rsp+0x58],0x8000
  42767d:	fld    TBYTE PTR [rsp+0x50]
  427681:	mov    rax,rbx
  427684:	fstp   TBYTE PTR [rbx]
  427686:	add    rsp,0x60
  42768a:	pop    rbx
  42768b:	ret    
  42768c:	nop    DWORD PTR [rax+0x0]
  427690:	mov    r11d,0x7fff
  427696:	mov    edx,0xffff8000
  42769b:	xor    ecx,ecx
  42769d:	xor    r8d,r8d
  4276a0:	xor    r9d,r9d
  4276a3:	mov    WORD PTR [rsp+0x58],r11w
  4276a9:	mov    WORD PTR [rsp+0x56],dx
  4276ae:	mov    WORD PTR [rsp+0x50],cx
  4276b3:	mov    WORD PTR [rsp+0x52],r8w
  4276b9:	mov    WORD PTR [rsp+0x54],r9w
  4276bf:	jmp    0x427672
  4276c1:	xor    edx,edx
  4276c3:	xor    ecx,ecx
  4276c5:	xor    r8d,r8d
  4276c8:	mov    r9d,0xffffc000
  4276ce:	mov    r10d,0x7fff
  4276d4:	mov    WORD PTR [rsp+0x50],dx
  4276d9:	mov    WORD PTR [rsp+0x52],cx
  4276de:	mov    WORD PTR [rsp+0x54],r8w
  4276e4:	mov    WORD PTR [rsp+0x56],r9w
  4276ea:	mov    WORD PTR [rsp+0x58],r10w
  4276f0:	jmp    0x427672
  4276f2:	xor    r11d,r11d
  4276f5:	xor    edx,edx
  4276f7:	xor    ecx,ecx
  4276f9:	xor    r8d,r8d
  4276fc:	xor    r9d,r9d
  4276ff:	mov    WORD PTR [rsp+0x58],r11w
  427705:	mov    WORD PTR [rsp+0x56],dx
  42770a:	mov    WORD PTR [rsp+0x54],cx
  42770f:	mov    WORD PTR [rsp+0x52],r8w
  427715:	mov    WORD PTR [rsp+0x50],r9w
  42771b:	jmp    0x427672
  427720:	xor    r10d,r10d
  427723:	mov    WORD PTR [rsp+0x58],r10w
  427729:	jmp    0x427650
  42772e:	nop
  42772f:	nop
  427730:	movq   rax,xmm0
  427735:	mov    rcx,rax
  427738:	sar    rcx,0x34
  42773c:	and    ecx,0x7ff
  427742:	sub    ecx,0x3ff
  427748:	cmp    ecx,0x33
  42774b:	jg     0x4277f0
  427751:	test   rax,rax
  427754:	je     0x427800
  42775a:	test   ecx,ecx
  42775c:	js     0x4277b0
  42775e:	movabs rdx,0xfffffffffffff
  427768:	sar    rdx,cl
  42776b:	test   rdx,rax
  42776e:	je     0x427800
  427774:	addsd  xmm0,QWORD PTR [rip+0x156f4]        # 0x43ce70
  42777c:	ucomisd xmm0,QWORD PTR [rip+0x156f4]        # 0x43ce78
  427784:	jbe    0x4277a1
  427786:	test   rax,rax
  427789:	jle    0x42779b
  42778b:	movabs r8,0x10000000000000
  427795:	shr    r8,cl
  427798:	add    rax,r8
  42779b:	not    rdx
  42779e:	and    rax,rdx
  4277a1:	movq   xmm0,rax
  4277a6:	ret    
  4277a7:	nop    WORD PTR [rax+rax*1+0x0]
  4277b0:	addsd  xmm0,QWORD PTR [rip+0x156b8]        # 0x43ce70
  4277b8:	ucomisd xmm0,QWORD PTR [rip+0x156b8]        # 0x43ce78
  4277c0:	jbe    0x4277e0
  4277c2:	test   rax,rax
  4277c5:	movabs rdx,0x3ff0000000000000
  4277cf:	movabs rax,0x8000000000000000
  4277d9:	cmovns rax,rdx
  4277dd:	nop    DWORD PTR [rax]
  4277e0:	movq   xmm0,rax
  4277e5:	ret    
  4277e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277f0:	cmp    ecx,0x400
  4277f6:	je     0x427802
  4277f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427800:	repz ret 
  427802:	addsd  xmm0,xmm0
  427806:	ret    
  427807:	nop
  427808:	nop
  427809:	nop
  42780a:	nop
  42780b:	nop
  42780c:	nop
  42780d:	nop
  42780e:	nop
  42780f:	nop
  427810:	push   rbp
  427811:	push   rdi
  427812:	push   rsi
  427813:	push   rbx
  427814:	sub    rsp,0x48
  427818:	test   rdx,rdx
  42781b:	je     0x427943
  427821:	test   r8,r8
  427824:	je     0x427950
  42782a:	mov    eax,DWORD PTR [r9]
  42782d:	mov    DWORD PTR [r9],0x0
  427834:	mov    DWORD PTR [rsp+0x30],eax
  427838:	movzx  eax,BYTE PTR [rdx]
  42783b:	test   al,al
  42783d:	je     0x4278e0
  427843:	cmp    DWORD PTR [rsp+0x98],0x1
  42784b:	mov    rsi,r9
  42784e:	mov    rdi,r8
  427851:	mov    rbx,rdx
  427854:	mov    rbp,rcx
  427857:	jbe    0x4278c0
  427859:	cmp    BYTE PTR [rsp+0x30],0x0
  42785e:	jne    0x4278f0
  427864:	movzx  edx,al
  427867:	mov    ecx,DWORD PTR [rsp+0x90]
  42786e:	call   QWORD PTR [rip+0x1d604]        # 0x444e78
  427874:	test   eax,eax
  427876:	je     0x4278c0
  427878:	cmp    rdi,0x1
  42787c:	jbe    0x42796c
  427882:	mov    DWORD PTR [rsp+0x28],0x1
  42788a:	mov    QWORD PTR [rsp+0x20],rbp
  42788f:	mov    r9d,0x2
  427895:	mov    r8,rbx
  427898:	mov    edx,0x8
  42789d:	mov    ecx,DWORD PTR [rsp+0x90]
  4278a4:	call   QWORD PTR [rip+0x1d5ee]        # 0x444e98
  4278aa:	test   eax,eax
  4278ac:	je     0x427957
  4278b2:	mov    eax,0x2
  4278b7:	add    rsp,0x48
  4278bb:	pop    rbx
  4278bc:	pop    rsi
  4278bd:	pop    rdi
  4278be:	pop    rbp
  4278bf:	ret    
  4278c0:	mov    eax,DWORD PTR [rsp+0x90]
  4278c7:	test   eax,eax
  4278c9:	jne    0x427910
  4278cb:	movzx  eax,BYTE PTR [rbx]
  4278ce:	mov    WORD PTR [rbp+0x0],ax
  4278d2:	mov    eax,0x1
  4278d7:	add    rsp,0x48
  4278db:	pop    rbx
  4278dc:	pop    rsi
  4278dd:	pop    rdi
  4278de:	pop    rbp
  4278df:	ret    
  4278e0:	xor    edx,edx
  4278e2:	xor    eax,eax
  4278e4:	mov    WORD PTR [rcx],dx
  4278e7:	add    rsp,0x48
  4278eb:	pop    rbx
  4278ec:	pop    rsi
  4278ed:	pop    rdi
  4278ee:	pop    rbp
  4278ef:	ret    
  4278f0:	mov    BYTE PTR [rsp+0x31],al
  4278f4:	mov    DWORD PTR [rsp+0x28],0x1
  4278fc:	mov    r9d,0x2
  427902:	mov    QWORD PTR [rsp+0x20],rcx
  427907:	lea    r8,[rsp+0x30]
  42790c:	jmp    0x427898
  42790e:	xchg   ax,ax
  427910:	mov    DWORD PTR [rsp+0x28],0x1
  427918:	mov    QWORD PTR [rsp+0x20],rbp
  42791d:	mov    r9d,0x1
  427923:	mov    r8,rbx
  427926:	mov    edx,0x8
  42792b:	mov    ecx,DWORD PTR [rsp+0x90]
  427932:	call   QWORD PTR [rip+0x1d560]        # 0x444e98
  427938:	test   eax,eax
  42793a:	je     0x427957
  42793c:	mov    eax,0x1
  427941:	jmp    0x4278e7
  427943:	xor    eax,eax
  427945:	add    rsp,0x48
  427949:	pop    rbx
  42794a:	pop    rsi
  42794b:	pop    rdi
  42794c:	pop    rbp
  42794d:	ret    
  42794e:	xchg   ax,ax
  427950:	mov    eax,0xfffffffe
  427955:	jmp    0x4278e7
  427957:	call   0x42fc38
  42795c:	mov    DWORD PTR [rax],0x2a
  427962:	mov    eax,0xffffffff
  427967:	jmp    0x4278e7
  42796c:	movzx  eax,BYTE PTR [rbx]
  42796f:	mov    BYTE PTR [rsi],al
  427971:	mov    eax,0xfffffffe
  427976:	jmp    0x4278e7
  42797b:	nop    DWORD PTR [rax+rax*1+0x0]
  427980:	push   rbp
  427981:	push   rdi
  427982:	push   rsi
  427983:	push   rbx
  427984:	sub    rsp,0x58
  427988:	xor    eax,eax
  42798a:	mov    WORD PTR [rsp+0x4e],ax
  42798f:	lea    rax,[rsp+0x4e]
  427994:	test   rcx,rcx
  427997:	mov    rbx,rcx
  42799a:	mov    rsi,r9
  42799d:	mov    rdi,rdx
  4279a0:	cmove  rbx,rax
  4279a4:	mov    rax,QWORD PTR [rip+0x15b85]        # 0x43d530
  4279ab:	mov    QWORD PTR [rsp+0x38],r8
  4279b0:	mov    rax,QWORD PTR [rax]
  4279b3:	mov    ebp,DWORD PTR [rax]
  4279b5:	call   0x42fc80
  4279ba:	mov    r8,QWORD PTR [rsp+0x38]
  4279bf:	lea    r9,[rip+0x1b272]        # 0x442c38
  4279c6:	test   rsi,rsi
  4279c9:	mov    DWORD PTR [rsp+0x28],ebp
  4279cd:	mov    DWORD PTR [rsp+0x20],eax
  4279d1:	mov    rdx,rdi
  4279d4:	cmovne r9,rsi
  4279d8:	mov    rcx,rbx
  4279db:	call   0x427810
  4279e0:	cdqe   
  4279e2:	add    rsp,0x58
  4279e6:	pop    rbx
  4279e7:	pop    rsi
  4279e8:	pop    rdi
  4279e9:	pop    rbp
  4279ea:	ret    
  4279eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4279f0:	push   r15
  4279f2:	push   r14
  4279f4:	push   r13
  4279f6:	push   r12
  4279f8:	push   rbp
  4279f9:	push   rdi
  4279fa:	push   rsi
  4279fb:	push   rbx
  4279fc:	sub    rsp,0x48
  427a00:	lea    rax,[rip+0x1b22d]        # 0x442c34
  427a07:	test   r9,r9
  427a0a:	mov    rdi,r9
  427a0d:	mov    r13,rdx
  427a10:	cmove  rdi,rax
  427a14:	mov    r14,rcx
  427a17:	mov    rsi,r8
  427a1a:	call   0x42fc80
  427a1f:	mov    r12d,eax
  427a22:	mov    rax,QWORD PTR [rip+0x15b07]        # 0x43d530
  427a29:	test   r13,r13
  427a2c:	mov    rax,QWORD PTR [rax]
  427a2f:	mov    ebp,DWORD PTR [rax]
  427a31:	je     0x427ab5
  427a37:	mov    rdx,QWORD PTR [r13+0x0]
  427a3b:	test   rdx,rdx
  427a3e:	je     0x427ab5
  427a40:	test   r14,r14
  427a43:	je     0x427ac0
  427a45:	xor    ebx,ebx
  427a47:	test   rsi,rsi
  427a4a:	jne    0x427a6a
  427a4c:	jmp    0x427ab5
  427a4e:	xchg   ax,ax
  427a50:	movsxd r10,eax
  427a53:	add    r14,0x2
  427a57:	mov    rdx,r10
  427a5a:	add    rdx,QWORD PTR [r13+0x0]
  427a5e:	add    rbx,r10
  427a61:	cmp    rsi,rbx
  427a64:	mov    QWORD PTR [r13+0x0],rdx
  427a68:	jbe    0x427ab0
  427a6a:	mov    r8,rsi
  427a6d:	mov    DWORD PTR [rsp+0x28],ebp
  427a71:	mov    DWORD PTR [rsp+0x20],r12d
  427a76:	sub    r8,rbx
  427a79:	mov    r9,rdi
  427a7c:	mov    rcx,r14
  427a7f:	call   0x427810
  427a84:	cmp    eax,0x0
  427a87:	jg     0x427a50
  427a89:	jne    0x427ab0
  427a8b:	cmp    rbx,rsi
  427a8e:	jae    0x427ab0
  427a90:	mov    QWORD PTR [r13+0x0],0x0
  427a98:	mov    rax,rbx
  427a9b:	add    rsp,0x48
  427a9f:	pop    rbx
  427aa0:	pop    rsi
  427aa1:	pop    rdi
  427aa2:	pop    rbp
  427aa3:	pop    r12
  427aa5:	pop    r13
  427aa7:	pop    r14
  427aa9:	pop    r15
  427aab:	ret    
  427aac:	xor    ebx,ebx
  427aae:	xchg   ax,ax
  427ab0:	mov    rax,rbx
  427ab3:	jmp    0x427a9b
  427ab5:	xor    eax,eax
  427ab7:	jmp    0x427a9b
  427ab9:	nop    DWORD PTR [rax+0x0]
  427ac0:	xor    eax,eax
  427ac2:	test   rsi,rsi
  427ac5:	mov    WORD PTR [rsp+0x3e],ax
  427aca:	je     0x427aac
  427acc:	mov    r15d,ebp
  427acf:	xor    ebx,ebx
  427ad1:	lea    r14,[rsp+0x3e]
  427ad6:	jmp    0x427af5
  427ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  427ae0:	cdqe   
  427ae2:	mov    rdx,rax
  427ae5:	add    rdx,QWORD PTR [r13+0x0]
  427ae9:	add    rbx,rax
  427aec:	cmp    rsi,rbx
  427aef:	mov    QWORD PTR [r13+0x0],rdx
  427af3:	jbe    0x427ab0
  427af5:	mov    DWORD PTR [rsp+0x28],ebp
  427af9:	mov    DWORD PTR [rsp+0x20],r12d
  427afe:	mov    r9,rdi
  427b01:	mov    r8,r15
  427b04:	mov    rcx,r14
  427b07:	call   0x427810
  427b0c:	test   eax,eax
  427b0e:	jg     0x427ae0
  427b10:	jmp    0x427ab0
  427b12:	nop    DWORD PTR [rax+0x0]
  427b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b20:	push   rbp
  427b21:	push   rdi
  427b22:	push   rsi
  427b23:	push   rbx
  427b24:	sub    rsp,0x48
  427b28:	xor    eax,eax
  427b2a:	mov    WORD PTR [rsp+0x3e],ax
  427b2f:	mov    rax,QWORD PTR [rip+0x159fa]        # 0x43d530
  427b36:	mov    rbx,r8
  427b39:	mov    rsi,rcx
  427b3c:	mov    rdi,rdx
  427b3f:	mov    rax,QWORD PTR [rax]
  427b42:	mov    ebp,DWORD PTR [rax]
  427b44:	call   0x42fc80
  427b49:	lea    r9,[rip+0x1b0e0]        # 0x442c30
  427b50:	test   rbx,rbx
  427b53:	lea    rcx,[rsp+0x3e]
  427b58:	mov    DWORD PTR [rsp+0x28],ebp
  427b5c:	mov    DWORD PTR [rsp+0x20],eax
  427b60:	mov    r8,rdi
  427b63:	cmovne r9,rbx
  427b67:	mov    rdx,rsi
  427b6a:	call   0x427810
  427b6f:	cdqe   
  427b71:	add    rsp,0x48
  427b75:	pop    rbx
  427b76:	pop    rsi
  427b77:	pop    rdi
  427b78:	pop    rbp
  427b79:	ret    
  427b7a:	nop
  427b7b:	nop
  427b7c:	nop
  427b7d:	nop
  427b7e:	nop
  427b7f:	nop
  427b80:	push   r15
  427b82:	push   r14
  427b84:	push   r13
  427b86:	push   r12
  427b88:	push   rbp
  427b89:	push   rdi
  427b8a:	push   rsi
  427b8b:	push   rbx
  427b8c:	sub    rsp,0x28
  427b90:	test   rdx,rdx
  427b93:	mov    rsi,rcx
  427b96:	mov    r12,rdx
  427b99:	mov    edi,r8d
  427b9c:	je     0x427ba2
  427b9e:	mov    QWORD PTR [r12],rcx
  427ba2:	cmp    edi,0x24
  427ba5:	ja     0x427c83
  427bab:	cmp    edi,0x1
  427bae:	jne    0x427bb9
  427bb0:	jmp    0x427c83
  427bb5:	add    rsi,0x1
  427bb9:	movsx  ecx,BYTE PTR [rsi]
  427bbc:	mov    ebx,ecx
  427bbe:	call   0x42fb70
  427bc3:	test   eax,eax
  427bc5:	jne    0x427bb5
  427bc7:	lea    edx,[rbx-0x2b]
  427bca:	mov    rcx,rsi
  427bcd:	mov    eax,ebx
  427bcf:	and    edx,0xfd
  427bd5:	jne    0x427bdf
  427bd7:	movzx  eax,BYTE PTR [rcx+0x1]
  427bdb:	add    rsi,0x1
  427bdf:	test   edi,edi
  427be1:	jne    0x427d21
  427be7:	cmp    al,0x30
  427be9:	mov    dil,0xa
  427bec:	je     0x427d72
  427bf2:	movsx  r15d,al
  427bf6:	lea    edx,[r15-0x30]
  427bfa:	cmp    edx,0x9
  427bfd:	ja     0x427cf0
  427c03:	movsx  ecx,al
  427c06:	sub    ecx,0x30
  427c09:	cmp    edi,ecx
  427c0b:	jle    0x427da0
  427c11:	mov    eax,ecx
  427c13:	shr    eax,0x1f
  427c16:	test   al,al
  427c18:	jne    0x427da0
  427c1e:	lea    r14,[rsi+0x1]
  427c22:	movsxd r15,ecx
  427c25:	xor    r13d,r13d
  427c28:	movsxd rsi,edi
  427c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  427c30:	movsx  ebp,BYTE PTR [r14]
  427c34:	lea    r9d,[rbp-0x30]
  427c38:	cmp    r9d,0x9
  427c3c:	mov    ecx,r9d
  427c3f:	jbe    0x427ca4
  427c41:	mov    ecx,ebp
  427c43:	call   0x42fb68
  427c48:	test   eax,eax
  427c4a:	lea    ecx,[rbp-0x37]
  427c4d:	jne    0x427ca4
  427c4f:	mov    ecx,ebp
  427c51:	call   0x42fb78
  427c56:	test   eax,eax
  427c58:	jne    0x427ca1
  427c5a:	test   r12,r12
  427c5d:	je     0x427c63
  427c5f:	mov    QWORD PTR [r12],r14
  427c63:	cmp    bl,0x2d
  427c66:	je     0x427d50
  427c6c:	test   r15,r15
  427c6f:	js     0x427dc0
  427c75:	test   r13d,r13d
  427c78:	jne    0x427dc0
  427c7e:	mov    rax,r15
  427c81:	jmp    0x427c90
  427c83:	call   0x42fc38
  427c88:	mov    DWORD PTR [rax],0x21
  427c8e:	xor    eax,eax
  427c90:	add    rsp,0x28
  427c94:	pop    rbx
  427c95:	pop    rsi
  427c96:	pop    rdi
  427c97:	pop    rbp
  427c98:	pop    r12
  427c9a:	pop    r13
  427c9c:	pop    r14
  427c9e:	pop    r15
  427ca0:	ret    
  427ca1:	lea    ecx,[rbp-0x57]
  427ca4:	cmp    edi,ecx
  427ca6:	jle    0x427c5a
  427ca8:	test   ecx,ecx
  427caa:	js     0x427c5a
  427cac:	movabs rax,0x7fffffffffffffff
  427cb6:	cqo    
  427cb8:	idiv   rsi
  427cbb:	add    rax,0x2
  427cbf:	cmp    r15,rax
  427cc2:	ja     0x427ce0
  427cc4:	imul   r15,rsi
  427cc8:	movsxd rcx,ecx
  427ccb:	add    r15,rcx
  427cce:	add    r14,0x1
  427cd2:	jmp    0x427c30
  427cd7:	nop    WORD PTR [rax+rax*1+0x0]
  427ce0:	mov    r13d,0x1
  427ce6:	jmp    0x427cce
  427ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  427cf0:	mov    ecx,r15d
  427cf3:	call   0x42fb68
  427cf8:	test   eax,eax
  427cfa:	lea    ecx,[r15-0x37]
  427cfe:	jne    0x427c09
  427d04:	mov    ecx,r15d
  427d07:	call   0x42fb78
  427d0c:	mov    edx,eax
  427d0e:	xor    eax,eax
  427d10:	test   edx,edx
  427d12:	je     0x427c90
  427d18:	lea    ecx,[r15-0x57]
  427d1c:	jmp    0x427c09
  427d21:	cmp    edi,0x10
  427d24:	jne    0x427bf2
  427d2a:	cmp    al,0x30
  427d2c:	jne    0x427bf2
  427d32:	movzx  eax,BYTE PTR [rsi+0x1]
  427d36:	and    eax,0xffffffdf
  427d39:	cmp    al,0x58
  427d3b:	je     0x427d85
  427d3d:	mov    eax,0x30
  427d42:	jmp    0x427c03
  427d47:	nop    WORD PTR [rax+rax*1+0x0]
  427d50:	movabs rbx,0x8000000000000000
  427d5a:	cmp    r15,rbx
  427d5d:	jbe    0x427db0
  427d5f:	call   0x42fc38
  427d64:	mov    DWORD PTR [rax],0x22
  427d6a:	mov    rax,rbx
  427d6d:	jmp    0x427c90
  427d72:	movzx  edx,BYTE PTR [rsi+0x1]
  427d76:	mov    dil,0x8
  427d79:	and    edx,0xffffffdf
  427d7c:	cmp    dl,0x58
  427d7f:	jne    0x427bf2
  427d85:	movzx  eax,BYTE PTR [rsi+0x2]
  427d89:	mov    edi,0x10
  427d8e:	add    rsi,0x2
  427d92:	jmp    0x427bf2
  427d97:	nop    WORD PTR [rax+rax*1+0x0]
  427da0:	xor    eax,eax
  427da2:	jmp    0x427c90
  427da7:	nop    WORD PTR [rax+rax*1+0x0]
  427db0:	test   r13d,r13d
  427db3:	jne    0x427d5f
  427db5:	mov    rax,r15
  427db8:	neg    rax
  427dbb:	jmp    0x427c90
  427dc0:	call   0x42fc38
  427dc5:	mov    DWORD PTR [rax],0x22
  427dcb:	movabs rax,0x7fffffffffffffff
  427dd5:	jmp    0x427c90
  427dda:	nop
  427ddb:	nop
  427ddc:	nop
  427ddd:	nop
  427dde:	nop
  427ddf:	nop
  427de0:	push   r15
  427de2:	push   r14
  427de4:	push   r13
  427de6:	push   r12
  427de8:	push   rbp
  427de9:	push   rdi
  427dea:	push   rsi
  427deb:	push   rbx
  427dec:	sub    rsp,0x28
  427df0:	test   rdx,rdx
  427df3:	mov    rsi,rcx
  427df6:	mov    r12,rdx
  427df9:	mov    edi,r8d
  427dfc:	je     0x427e02
  427dfe:	mov    QWORD PTR [r12],rcx
  427e02:	cmp    edi,0x24
  427e05:	ja     0x427ee3
  427e0b:	cmp    edi,0x1
  427e0e:	jne    0x427e19
  427e10:	jmp    0x427ee3
  427e15:	add    rsi,0x1
  427e19:	movsx  ecx,BYTE PTR [rsi]
  427e1c:	mov    ebx,ecx
  427e1e:	call   0x42fb70
  427e23:	test   eax,eax
  427e25:	jne    0x427e15
  427e27:	lea    edx,[rbx-0x2b]
  427e2a:	mov    rcx,rsi
  427e2d:	mov    eax,ebx
  427e2f:	and    edx,0xfd
  427e35:	jne    0x427e3f
  427e37:	movzx  eax,BYTE PTR [rcx+0x1]
  427e3b:	add    rsi,0x1
  427e3f:	test   edi,edi
  427e41:	jne    0x427f75
  427e47:	cmp    al,0x30
  427e49:	mov    dil,0xa
  427e4c:	je     0x427fd0
  427e52:	movsx  r15d,al
  427e56:	lea    edx,[r15-0x30]
  427e5a:	cmp    edx,0x9
  427e5d:	ja     0x427f50
  427e63:	movsx  r15d,al
  427e67:	sub    r15d,0x30
  427e6b:	cmp    edi,r15d
  427e6e:	jle    0x427ff5
  427e74:	mov    eax,r15d
  427e77:	shr    eax,0x1f
  427e7a:	test   al,al
  427e7c:	jne    0x427ff5
  427e82:	lea    r14,[rsi+0x1]
  427e86:	movsxd r15,r15d
  427e89:	xor    r13d,r13d
  427e8c:	movsxd rsi,edi
  427e8f:	nop
  427e90:	movsx  ebp,BYTE PTR [r14]
  427e94:	lea    r9d,[rbp-0x30]
  427e98:	cmp    r9d,0x9
  427e9c:	mov    ecx,r9d
  427e9f:	jbe    0x427f04
  427ea1:	mov    ecx,ebp
  427ea3:	call   0x42fb68
  427ea8:	test   eax,eax
  427eaa:	lea    ecx,[rbp-0x37]
  427ead:	jne    0x427f04
  427eaf:	mov    ecx,ebp
  427eb1:	call   0x42fb78
  427eb6:	test   eax,eax
  427eb8:	jne    0x427f01
  427eba:	test   r12,r12
  427ebd:	je     0x427ec3
  427ebf:	mov    QWORD PTR [r12],r14
  427ec3:	test   r13d,r13d
  427ec6:	jne    0x427fa0
  427ecc:	xor    edx,edx
  427ece:	cmp    bl,0x2d
  427ed1:	sete   dl
  427ed4:	mov    rax,rdx
  427ed7:	neg    rax
  427eda:	xor    r15,rax
  427edd:	lea    rax,[r15+rdx*1]
  427ee1:	jmp    0x427ef0
  427ee3:	call   0x42fc38
  427ee8:	mov    DWORD PTR [rax],0x21
  427eee:	xor    eax,eax
  427ef0:	add    rsp,0x28
  427ef4:	pop    rbx
  427ef5:	pop    rsi
  427ef6:	pop    rdi
  427ef7:	pop    rbp
  427ef8:	pop    r12
  427efa:	pop    r13
  427efc:	pop    r14
  427efe:	pop    r15
  427f00:	ret    
  427f01:	lea    ecx,[rbp-0x57]
  427f04:	cmp    edi,ecx
  427f06:	jle    0x427eba
  427f08:	test   ecx,ecx
  427f0a:	js     0x427eba
  427f0c:	xor    edx,edx
  427f0e:	mov    rax,0xffffffffffffffff
  427f15:	div    rsi
  427f18:	add    rax,0x1
  427f1c:	cmp    r15,rax
  427f1f:	ja     0x427f40
  427f21:	mov    rax,r15
  427f24:	movsxd rcx,ecx
  427f27:	imul   rax,rsi
  427f2b:	add    rcx,rax
  427f2e:	cmp    r15,rcx
  427f31:	ja     0x427f40
  427f33:	mov    r15,rcx
  427f36:	add    r14,0x1
  427f3a:	jmp    0x427e90
  427f3f:	nop
  427f40:	mov    r13d,0x1
  427f46:	jmp    0x427f36
  427f48:	nop    DWORD PTR [rax+rax*1+0x0]
  427f50:	mov    ecx,r15d
  427f53:	call   0x42fb68
  427f58:	test   eax,eax
  427f5a:	jne    0x427fc0
  427f5c:	mov    ecx,r15d
  427f5f:	call   0x42fb78
  427f64:	mov    edx,eax
  427f66:	xor    eax,eax
  427f68:	test   edx,edx
  427f6a:	je     0x427ef0
  427f6c:	sub    r15d,0x57
  427f70:	jmp    0x427e6b
  427f75:	cmp    edi,0x10
  427f78:	jne    0x427e52
  427f7e:	cmp    al,0x30
  427f80:	jne    0x427e52
  427f86:	movzx  eax,BYTE PTR [rsi+0x1]
  427f8a:	and    eax,0xffffffdf
  427f8d:	cmp    al,0x58
  427f8f:	je     0x427fe3
  427f91:	mov    eax,0x30
  427f96:	jmp    0x427e63
  427f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  427fa0:	call   0x42fc38
  427fa5:	mov    DWORD PTR [rax],0x22
  427fab:	mov    rax,0xffffffffffffffff
  427fb2:	jmp    0x427ef0
  427fb7:	nop    WORD PTR [rax+rax*1+0x0]
  427fc0:	sub    r15d,0x37
  427fc4:	jmp    0x427e6b
  427fc9:	nop    DWORD PTR [rax+0x0]
  427fd0:	movzx  edx,BYTE PTR [rsi+0x1]
  427fd4:	mov    dil,0x8
  427fd7:	and    edx,0xffffffdf
  427fda:	cmp    dl,0x58
  427fdd:	jne    0x427e52
  427fe3:	movzx  eax,BYTE PTR [rsi+0x2]
  427fe7:	mov    edi,0x10
  427fec:	add    rsi,0x2
  427ff0:	jmp    0x427e52
  427ff5:	xor    eax,eax
  427ff7:	jmp    0x427ef0
  427ffc:	nop
  427ffd:	nop
  427ffe:	nop
  427fff:	nop
  428000:	sub    rsp,0x58
  428004:	mov    rax,QWORD PTR [rdx]
  428007:	mov    r11,rdx
  42800a:	mov    edx,DWORD PTR [rdx+0x8]
  42800d:	mov    r10,rdx
  428010:	and    r10w,0x7fff
  428016:	jne    0x428034
  428018:	mov    rdx,rax
  42801b:	shr    rdx,0x20
  42801f:	or     eax,edx
  428021:	jne    0x4280a0
  428023:	mov    DWORD PTR [rsp+0x44],0x0
  42802b:	movzx  eax,WORD PTR [r11+0x8]
  428030:	xor    edx,edx
  428032:	jmp    0x42805b
  428034:	cmp    r10w,0x7fff
  42803a:	je     0x4280c0
  428040:	movzx  eax,WORD PTR [r11+0x8]
  428045:	mov    DWORD PTR [rsp+0x44],0x1
  42804d:	mov    edx,eax
  42804f:	and    edx,0x7fff
  428055:	sub    edx,0x403e
  42805b:	and    eax,0x8000
  428060:	mov    r10,QWORD PTR [rsp+0x80]
  428068:	mov    DWORD PTR [r10],eax
  42806b:	lea    rax,[rsp+0x48]
  428070:	mov    QWORD PTR [rsp+0x30],r9
  428075:	mov    DWORD PTR [rsp+0x20],ecx
  428079:	lea    r9,[rsp+0x44]
  42807e:	lea    rcx,[rip+0x914b]        # 0x4311d0
  428085:	mov    DWORD PTR [rsp+0x28],r8d
  42808a:	mov    QWORD PTR [rsp+0x38],rax
  42808f:	mov    r8,r11
  428092:	call   0x42a510
  428097:	add    rsp,0x58
  42809b:	ret    
  42809c:	nop    DWORD PTR [rax+0x0]
  4280a0:	test   edx,edx
  4280a2:	js     0x428040
  4280a4:	mov    DWORD PTR [rsp+0x44],0x2
  4280ac:	movzx  eax,WORD PTR [r11+0x8]
  4280b1:	mov    edx,0xffffbfc3
  4280b6:	jmp    0x42805b
  4280b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4280c0:	mov    rdx,rax
  4280c3:	shr    rdx,0x20
  4280c7:	and    edx,0x7fffffff
  4280cd:	or     edx,eax
  4280cf:	jne    0x4280e5
  4280d1:	mov    DWORD PTR [rsp+0x44],0x3
  4280d9:	movzx  eax,WORD PTR [r11+0x8]
  4280de:	xor    edx,edx
  4280e0:	jmp    0x42805b
  4280e5:	mov    DWORD PTR [rsp+0x44],0x4
  4280ed:	xor    edx,edx
  4280ef:	xor    eax,eax
  4280f1:	jmp    0x428060
  4280f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428100:	push   rbx
  428101:	sub    rsp,0x20
  428105:	mov    rbx,rdx
  428108:	mov    edx,DWORD PTR [rdx+0x8]
  42810b:	test   dh,0x40
  42810e:	jne    0x428118
  428110:	mov    eax,DWORD PTR [rbx+0x24]
  428113:	cmp    DWORD PTR [rbx+0x28],eax
  428116:	jle    0x42812a
  428118:	and    dh,0x20
  42811b:	jne    0x428140
  42811d:	movsxd rax,DWORD PTR [rbx+0x24]
  428121:	mov    rdx,QWORD PTR [rbx]
  428124:	mov    BYTE PTR [rdx+rax*1],cl
  428127:	mov    eax,DWORD PTR [rbx+0x24]
  42812a:	add    eax,0x1
  42812d:	mov    DWORD PTR [rbx+0x24],eax
  428130:	add    rsp,0x20
  428134:	pop    rbx
  428135:	ret    
  428136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428140:	mov    rdx,QWORD PTR [rbx]
  428143:	call   0x42fbb0
  428148:	mov    eax,DWORD PTR [rbx+0x24]
  42814b:	add    eax,0x1
  42814e:	mov    DWORD PTR [rbx+0x24],eax
  428151:	add    rsp,0x20
  428155:	pop    rbx
  428156:	ret    
  428157:	nop    WORD PTR [rax+rax*1+0x0]
  428160:	push   r14
  428162:	push   r13
  428164:	push   r12
  428166:	push   rbp
  428167:	push   rdi
  428168:	push   rsi
  428169:	push   rbx
  42816a:	sub    rsp,0x40
  42816e:	lea    r14,[rsp+0x2c]
  428173:	lea    r13,[rsp+0x30]
  428178:	mov    ebx,edx
  42817a:	mov    rsi,r8
  42817d:	xor    edx,edx
  42817f:	mov    r12,rcx
  428182:	mov    r8,r14
  428185:	mov    rcx,r13
  428188:	call   0x42e890
  42818d:	mov    ebp,DWORD PTR [rsi+0x10]
  428190:	cmp    ebp,ebx
  428192:	jge    0x428239
  428198:	test   ebp,ebp
  42819a:	js     0x428239
  4281a0:	mov    eax,DWORD PTR [rsi+0xc]
  4281a3:	cmp    ebp,eax
  4281a5:	jge    0x428246
  4281ab:	sub    eax,ebp
  4281ad:	test   eax,eax
  4281af:	mov    DWORD PTR [rsi+0xc],eax
  4281b2:	jle    0x4281c0
  4281b4:	test   BYTE PTR [rsi+0x9],0x4
  4281b8:	je     0x428252
  4281be:	xchg   ax,ax
  4281c0:	test   ebp,ebp
  4281c2:	jle    0x42821d
  4281c4:	add    r12,0x2
  4281c8:	movzx  edx,WORD PTR [r12-0x2]
  4281ce:	mov    r8,r14
  4281d1:	mov    rcx,r13
  4281d4:	call   0x42e890
  4281d9:	test   eax,eax
  4281db:	jle    0x42821d
  4281dd:	sub    eax,0x1
  4281e0:	mov    rbx,r13
  4281e3:	lea    rdi,[r13+rax*1+0x1]
  4281e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4281f0:	add    rbx,0x1
  4281f4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4281f8:	mov    rdx,rsi
  4281fb:	call   0x428100
  428200:	cmp    rbx,rdi
  428203:	jne    0x4281f0
  428205:	sub    ebp,0x1
  428208:	jmp    0x4281c0
  42820a:	nop    WORD PTR [rax+rax*1+0x0]
  428210:	mov    rdx,rsi
  428213:	mov    ecx,0x20
  428218:	call   0x428100
  42821d:	mov    eax,DWORD PTR [rsi+0xc]
  428220:	lea    edx,[rax-0x1]
  428223:	test   eax,eax
  428225:	mov    DWORD PTR [rsi+0xc],edx
  428228:	jg     0x428210
  42822a:	add    rsp,0x40
  42822e:	pop    rbx
  42822f:	pop    rsi
  428230:	pop    rdi
  428231:	pop    rbp
  428232:	pop    r12
  428234:	pop    r13
  428236:	pop    r14
  428238:	ret    
  428239:	mov    eax,DWORD PTR [rsi+0xc]
  42823c:	mov    ebp,ebx
  42823e:	cmp    ebp,eax
  428240:	jl     0x4281ab
  428246:	mov    DWORD PTR [rsi+0xc],0xffffffff
  42824d:	jmp    0x4281c0
  428252:	sub    eax,0x1
  428255:	mov    DWORD PTR [rsi+0xc],eax
  428258:	nop    DWORD PTR [rax+rax*1+0x0]
  428260:	mov    rdx,rsi
  428263:	mov    ecx,0x20
  428268:	call   0x428100
  42826d:	mov    eax,DWORD PTR [rsi+0xc]
  428270:	lea    edx,[rax-0x1]
  428273:	test   eax,eax
  428275:	mov    DWORD PTR [rsi+0xc],edx
  428278:	jne    0x428260
  42827a:	jmp    0x4281c0
  42827f:	nop
  428280:	push   rdi
  428281:	push   rsi
  428282:	push   rbx
  428283:	sub    rsp,0x20
  428287:	mov    edi,DWORD PTR [r8+0x10]
  42828b:	mov    rsi,rcx
  42828e:	mov    rbx,r8
  428291:	cmp    edi,edx
  428293:	jge    0x428310
  428295:	test   edi,edi
  428297:	js     0x428310
  428299:	mov    eax,DWORD PTR [rbx+0xc]
  42829c:	cmp    edi,eax
  42829e:	jge    0x428319
  4282a0:	sub    eax,edi
  4282a2:	test   eax,eax
  4282a4:	mov    DWORD PTR [rbx+0xc],eax
  4282a7:	jle    0x428372
  4282ad:	test   BYTE PTR [rbx+0x9],0x4
  4282b1:	jne    0x428340
  4282b7:	sub    eax,0x1
  4282ba:	mov    DWORD PTR [rbx+0xc],eax
  4282bd:	nop    DWORD PTR [rax]
  4282c0:	mov    rdx,rbx
  4282c3:	mov    ecx,0x20
  4282c8:	call   0x428100
  4282cd:	mov    eax,DWORD PTR [rbx+0xc]
  4282d0:	mov    edx,eax
  4282d2:	sub    eax,0x1
  4282d5:	test   edx,edx
  4282d7:	mov    DWORD PTR [rbx+0xc],eax
  4282da:	jne    0x4282c0
  4282dc:	test   edi,edi
  4282de:	lea    edx,[rdi-0x1]
  4282e1:	je     0x428360
  4282e3:	lea    rdi,[rsi+rdx*1+0x1]
  4282e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4282f0:	add    rsi,0x1
  4282f4:	movsx  ecx,BYTE PTR [rsi-0x1]
  4282f8:	mov    rdx,rbx
  4282fb:	call   0x428100
  428300:	cmp    rsi,rdi
  428303:	jne    0x4282f0
  428305:	jmp    0x42835d
  428307:	nop    WORD PTR [rax+rax*1+0x0]
  428310:	mov    eax,DWORD PTR [rbx+0xc]
  428313:	mov    edi,edx
  428315:	cmp    edi,eax
  428317:	jl     0x4282a0
  428319:	test   edi,edi
  42831b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  428322:	lea    edx,[rdi-0x1]
  428325:	jne    0x4282e3
  428327:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  42832e:	add    rsp,0x20
  428332:	pop    rbx
  428333:	pop    rsi
  428334:	pop    rdi
  428335:	ret    
  428336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428340:	test   edi,edi
  428342:	lea    edx,[rdi-0x1]
  428345:	jne    0x4282e3
  428347:	sub    eax,0x1
  42834a:	mov    DWORD PTR [rbx+0xc],eax
  42834d:	nop    DWORD PTR [rax]
  428350:	mov    rdx,rbx
  428353:	mov    ecx,0x20
  428358:	call   0x428100
  42835d:	mov    eax,DWORD PTR [rbx+0xc]
  428360:	lea    edx,[rax-0x1]
  428363:	test   eax,eax
  428365:	mov    DWORD PTR [rbx+0xc],edx
  428368:	jg     0x428350
  42836a:	add    rsp,0x20
  42836e:	pop    rbx
  42836f:	pop    rsi
  428370:	pop    rdi
  428371:	ret    
  428372:	test   edi,edi
  428374:	lea    edx,[rdi-0x1]
  428377:	jne    0x4282e3
  42837d:	sub    eax,0x1
  428380:	mov    DWORD PTR [rbx+0xc],eax
  428383:	jmp    0x42832e
  428385:	nop
  428386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428390:	sub    rsp,0x38
  428394:	test   ecx,ecx
  428396:	mov    DWORD PTR [r8+0x10],0xffffffff
  42839e:	je     0x4283e4
  4283a0:	lea    rcx,[rsp+0x20]
  4283a5:	mov    r11d,DWORD PTR [r8+0x8]
  4283a9:	mov    BYTE PTR [rsp+0x20],0x2d
  4283ae:	lea    r10,[rcx+0x1]
  4283b2:	and    r11d,0x20
  4283b6:	xor    r9d,r9d
  4283b9:	movzx  eax,BYTE PTR [rdx+r9*1]
  4283be:	and    eax,0xffffffdf
  4283c1:	or     eax,r11d
  4283c4:	mov    BYTE PTR [r10+r9*1],al
  4283c8:	add    r9,0x1
  4283cc:	cmp    r9,0x3
  4283d0:	jne    0x4283b9
  4283d2:	lea    rdx,[r10+0x3]
  4283d6:	sub    rdx,rcx
  4283d9:	call   0x428280
  4283de:	nop
  4283df:	add    rsp,0x38
  4283e3:	ret    
  4283e4:	mov    r11d,DWORD PTR [r8+0x8]
  4283e8:	test   r11d,0x100
  4283ef:	je     0x428401
  4283f1:	lea    rcx,[rsp+0x20]
  4283f6:	mov    BYTE PTR [rsp+0x20],0x2b
  4283fb:	lea    r10,[rcx+0x1]
  4283ff:	jmp    0x4283b2
  428401:	test   r11b,0x40
  428405:	je     0x428420
  428407:	lea    rcx,[rsp+0x20]
  42840c:	mov    BYTE PTR [rsp+0x20],0x20
  428411:	lea    r10,[rcx+0x1]
  428415:	jmp    0x4283b2
  428417:	nop    WORD PTR [rax+rax*1+0x0]
  428420:	lea    rcx,[rsp+0x20]
  428425:	mov    r10,rcx
  428428:	jmp    0x4283b2
  42842a:	nop    WORD PTR [rax+rax*1+0x0]
  428430:	push   rbp
  428431:	push   r12
  428433:	push   rdi
  428434:	push   rsi
  428435:	push   rbx
  428436:	mov    rbp,rsp
  428439:	sub    rsp,0x30
  42843d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  428441:	mov    rsi,rcx
  428444:	je     0x4284e0
  42844a:	movzx  edx,WORD PTR [rcx+0x18]
  42844e:	test   dx,dx
  428451:	je     0x4284b2
  428453:	movsxd rax,DWORD PTR [rsi+0x14]
  428457:	mov    r12,rsp
  42845a:	add    rax,0xf
  42845e:	and    rax,0xfffffffffffffff0
  428462:	call   0x423de0
  428467:	sub    rsp,rax
  42846a:	lea    r8,[rbp-0x4]
  42846e:	mov    DWORD PTR [rbp-0x4],0x0
  428475:	lea    rbx,[rsp+0x20]
  42847a:	mov    rcx,rbx
  42847d:	call   0x42e890
  428482:	test   eax,eax
  428484:	jle    0x4284d0
  428486:	sub    eax,0x1
  428489:	lea    rdi,[rbx+rax*1+0x1]
  42848e:	xchg   ax,ax
  428490:	add    rbx,0x1
  428494:	movsx  ecx,BYTE PTR [rbx-0x1]
  428498:	mov    rdx,rsi
  42849b:	call   0x428100
  4284a0:	cmp    rbx,rdi
  4284a3:	jne    0x428490
  4284a5:	mov    rsp,r12
  4284a8:	mov    rsp,rbp
  4284ab:	pop    rbx
  4284ac:	pop    rsi
  4284ad:	pop    rdi
  4284ae:	pop    r12
  4284b0:	pop    rbp
  4284b1:	ret    
  4284b2:	mov    rdx,rsi
  4284b5:	mov    ecx,0x2e
  4284ba:	call   0x428100
  4284bf:	nop
  4284c0:	mov    rsp,rbp
  4284c3:	pop    rbx
  4284c4:	pop    rsi
  4284c5:	pop    rdi
  4284c6:	pop    r12
  4284c8:	pop    rbp
  4284c9:	ret    
  4284ca:	nop    WORD PTR [rax+rax*1+0x0]
  4284d0:	mov    rdx,rsi
  4284d3:	mov    ecx,0x2e
  4284d8:	call   0x428100
  4284dd:	jmp    0x4284a5
  4284df:	nop
  4284e0:	mov    DWORD PTR [rbp-0x4],0x0
  4284e7:	call   0x42fb58
  4284ec:	mov    rdx,QWORD PTR [rax]
  4284ef:	lea    rcx,[rbp-0x6]
  4284f3:	lea    r9,[rbp-0x4]
  4284f7:	mov    r8d,0x10
  4284fd:	call   0x427980
  428502:	test   eax,eax
  428504:	jle    0x428516
  428506:	movzx  edx,WORD PTR [rbp-0x6]
  42850a:	mov    WORD PTR [rsi+0x18],dx
  42850e:	mov    DWORD PTR [rsi+0x14],eax
  428511:	jmp    0x42844e
  428516:	movzx  edx,WORD PTR [rsi+0x18]
  42851a:	jmp    0x42850e
  42851c:	nop    DWORD PTR [rax+0x0]
  428520:	push   r12
  428522:	push   rbp
  428523:	push   rdi
  428524:	push   rsi
  428525:	push   rbx
  428526:	sub    rsp,0x20
  42852a:	mov    esi,r8d
  42852d:	mov    ebp,ecx
  42852f:	mov    rdi,rdx
  428532:	test   esi,esi
  428534:	mov    rbx,r9
  428537:	mov    r8d,DWORD PTR [r9+0xc]
  42853b:	jle    0x428712
  428541:	cmp    esi,r8d
  428544:	jg     0x428680
  42854a:	sub    r8d,esi
  42854d:	mov    DWORD PTR [r9+0xc],r8d
  428551:	test   r8d,r8d
  428554:	js     0x428680
  42855a:	mov    eax,DWORD PTR [rbx+0x10]
  42855d:	cmp    eax,r8d
  428560:	jge    0x428680
  428566:	sub    r8d,eax
  428569:	test   r8d,r8d
  42856c:	mov    DWORD PTR [rbx+0xc],r8d
  428570:	jle    0x42868d
  428576:	test   eax,eax
  428578:	jle    0x4287c5
  42857e:	sub    r8d,0x1
  428582:	test   esi,esi
  428584:	mov    DWORD PTR [rbx+0xc],r8d
  428588:	jle    0x428594
  42858a:	test   BYTE PTR [rbx+0x9],0x10
  42858e:	jne    0x42869f
  428594:	test   r8d,r8d
  428597:	jle    0x4285dd
  428599:	test   ebp,ebp
  42859b:	jne    0x4285ab
  42859d:	mov    eax,DWORD PTR [rbx+0x8]
  4285a0:	test   eax,0x1c0
  4285a5:	je     0x4287a5
  4285ab:	sub    r8d,0x1
  4285af:	test   r8d,r8d
  4285b2:	mov    DWORD PTR [rbx+0xc],r8d
  4285b6:	jle    0x4285dd
  4285b8:	test   DWORD PTR [rbx+0x8],0x600
  4285bf:	jne    0x4285dd
  4285c1:	jmp    0x4285d0
  4285c3:	mov    rdx,rbx
  4285c6:	mov    ecx,0x20
  4285cb:	call   0x428100
  4285d0:	mov    eax,DWORD PTR [rbx+0xc]
  4285d3:	lea    edx,[rax-0x1]
  4285d6:	test   eax,eax
  4285d8:	mov    DWORD PTR [rbx+0xc],edx
  4285db:	jg     0x4285c3
  4285dd:	test   ebp,ebp
  4285df:	jne    0x428700
  4285e5:	mov    eax,DWORD PTR [rbx+0x8]
  4285e8:	test   ah,0x1
  4285eb:	jne    0x428730
  4285f1:	test   al,0x40
  4285f3:	jne    0x4287b3
  4285f9:	mov    edx,DWORD PTR [rbx+0xc]
  4285fc:	test   edx,edx
  4285fe:	jle    0x428613
  428600:	mov    eax,DWORD PTR [rbx+0x8]
  428603:	and    eax,0x600
  428608:	cmp    eax,0x200
  42860d:	je     0x428742
  428613:	test   esi,esi
  428615:	jle    0x428772
  42861b:	lea    r12,[rbx+0x20]
  42861f:	mov    ebp,0x55555556
  428624:	movzx  eax,BYTE PTR [rdi]
  428627:	mov    ecx,0x30
  42862c:	test   al,al
  42862e:	je     0x428637
  428630:	add    rdi,0x1
  428634:	movsx  ecx,al
  428637:	mov    rdx,rbx
  42863a:	call   0x428100
  42863f:	sub    esi,0x1
  428642:	je     0x428860
  428648:	test   BYTE PTR [rbx+0x9],0x10
  42864c:	je     0x428624
  42864e:	cmp    WORD PTR [rbx+0x20],0x0
  428653:	je     0x428624
  428655:	mov    eax,esi
  428657:	imul   ebp
  428659:	mov    eax,esi
  42865b:	sar    eax,0x1f
  42865e:	sub    edx,eax
  428660:	lea    eax,[rdx+rdx*2]
  428663:	cmp    esi,eax
  428665:	jne    0x428624
  428667:	mov    r8,rbx
  42866a:	mov    edx,0x1
  42866f:	mov    rcx,r12
  428672:	call   0x428160
  428677:	jmp    0x428624
  428679:	nop    DWORD PTR [rax+0x0]
  428680:	mov    DWORD PTR [rbx+0xc],0xffffffff
  428687:	mov    r8d,0xffffffff
  42868d:	test   esi,esi
  42868f:	jle    0x4285dd
  428695:	test   BYTE PTR [rbx+0x9],0x10
  428699:	je     0x4285dd
  42869f:	cmp    WORD PTR [rbx+0x20],0x0
  4286a4:	je     0x428594
  4286aa:	lea    ecx,[rsi+0x2]
  4286ad:	mov    edx,0x55555556
  4286b2:	mov    eax,ecx
  4286b4:	sar    ecx,0x1f
  4286b7:	imul   edx
  4286b9:	sub    edx,ecx
  4286bb:	cmp    edx,0x1
  4286be:	jle    0x428594
  4286c4:	test   r8d,r8d
  4286c7:	jle    0x4285dd
  4286cd:	mov    eax,r8d
  4286d0:	sub    eax,edx
  4286d2:	add    eax,0x1
  4286d5:	jmp    0x4286e9
  4286d7:	nop    WORD PTR [rax+rax*1+0x0]
  4286e0:	test   r8d,r8d
  4286e3:	je     0x428854
  4286e9:	sub    r8d,0x1
  4286ed:	cmp    r8d,eax
  4286f0:	jne    0x4286e0
  4286f2:	mov    DWORD PTR [rbx+0xc],r8d
  4286f6:	jmp    0x428594
  4286fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428700:	mov    rdx,rbx
  428703:	mov    ecx,0x2d
  428708:	call   0x428100
  42870d:	jmp    0x4285f9
  428712:	test   r8d,r8d
  428715:	jle    0x428551
  42871b:	sub    r8d,0x1
  42871f:	mov    DWORD PTR [r9+0xc],r8d
  428723:	jmp    0x42855a
  428728:	nop    DWORD PTR [rax+rax*1+0x0]
  428730:	mov    rdx,rbx
  428733:	mov    ecx,0x2b
  428738:	call   0x428100
  42873d:	jmp    0x4285f9
  428742:	sub    edx,0x1
  428745:	mov    DWORD PTR [rbx+0xc],edx
  428748:	nop    DWORD PTR [rax+rax*1+0x0]
  428750:	mov    rdx,rbx
  428753:	mov    ecx,0x30
  428758:	call   0x428100
  42875d:	mov    eax,DWORD PTR [rbx+0xc]
  428760:	lea    edx,[rax-0x1]
  428763:	test   eax,eax
  428765:	mov    DWORD PTR [rbx+0xc],edx
  428768:	jg     0x428750
  42876a:	test   esi,esi
  42876c:	jg     0x42861b
  428772:	mov    rdx,rbx
  428775:	mov    ecx,0x30
  42877a:	call   0x428100
  42877f:	mov    eax,DWORD PTR [rbx+0x10]
  428782:	test   eax,eax
  428784:	jg     0x4287f2
  428786:	test   BYTE PTR [rbx+0x9],0x8
  42878a:	jne    0x4287f2
  42878c:	test   esi,esi
  42878e:	jne    0x428836
  428794:	sub    eax,0x1
  428797:	mov    DWORD PTR [rbx+0x10],eax
  42879a:	add    rsp,0x20
  42879e:	pop    rbx
  42879f:	pop    rsi
  4287a0:	pop    rdi
  4287a1:	pop    rbp
  4287a2:	pop    r12
  4287a4:	ret    
  4287a5:	test   ah,0x6
  4287a8:	je     0x4285d0
  4287ae:	jmp    0x4285e8
  4287b3:	mov    rdx,rbx
  4287b6:	mov    ecx,0x20
  4287bb:	call   0x428100
  4287c0:	jmp    0x4285f9
  4287c5:	mov    eax,DWORD PTR [rbx+0x8]
  4287c8:	test   ah,0x8
  4287cb:	jne    0x42857e
  4287d1:	test   esi,esi
  4287d3:	jle    0x428599
  4287d9:	test   ah,0x10
  4287dc:	je     0x428599
  4287e2:	cmp    WORD PTR [rbx+0x20],0x0
  4287e7:	jne    0x4286aa
  4287ed:	jmp    0x428599
  4287f2:	mov    rcx,rbx
  4287f5:	call   0x428430
  4287fa:	test   esi,esi
  4287fc:	je     0x42881b
  4287fe:	jmp    0x428833
  428800:	movzx  eax,BYTE PTR [rdi]
  428803:	mov    ecx,0x30
  428808:	test   al,al
  42880a:	je     0x428813
  42880c:	add    rdi,0x1
  428810:	movsx  ecx,al
  428813:	mov    rdx,rbx
  428816:	call   0x428100
  42881b:	mov    eax,DWORD PTR [rbx+0x10]
  42881e:	lea    edx,[rax-0x1]
  428821:	test   eax,eax
  428823:	mov    DWORD PTR [rbx+0x10],edx
  428826:	jg     0x428800
  428828:	add    rsp,0x20
  42882c:	pop    rbx
  42882d:	pop    rsi
  42882e:	pop    rdi
  42882f:	pop    rbp
  428830:	pop    r12
  428832:	ret    
  428833:	mov    eax,DWORD PTR [rbx+0x10]
  428836:	add    eax,esi
  428838:	mov    DWORD PTR [rbx+0x10],eax
  42883b:	nop    DWORD PTR [rax+rax*1+0x0]
  428840:	mov    rdx,rbx
  428843:	mov    ecx,0x30
  428848:	call   0x428100
  42884d:	add    esi,0x1
  428850:	jne    0x428840
  428852:	jmp    0x42881b
  428854:	mov    DWORD PTR [rbx+0xc],0x0
  42885b:	jmp    0x4285dd
  428860:	mov    eax,DWORD PTR [rbx+0x10]
  428863:	test   eax,eax
  428865:	jle    0x428871
  428867:	mov    rcx,rbx
  42886a:	call   0x428430
  42886f:	jmp    0x42881b
  428871:	test   BYTE PTR [rbx+0x9],0x8
  428875:	jne    0x428867
  428877:	jmp    0x428794
  42887c:	nop    DWORD PTR [rax+0x0]
  428880:	push   rsi
  428881:	push   rbx
  428882:	sub    rsp,0x68
  428886:	mov    r8d,DWORD PTR [rdx+0x10]
  42888a:	fld    TBYTE PTR [rcx]
  42888c:	mov    rbx,rdx
  42888f:	test   r8d,r8d
  428892:	js     0x428930
  428898:	lea    rdx,[rsp+0x30]
  42889d:	lea    r9,[rsp+0x4c]
  4288a2:	mov    ecx,0x3
  4288a7:	fstp   TBYTE PTR [rsp+0x50]
  4288ab:	mov    rax,QWORD PTR [rsp+0x50]
  4288b0:	mov    QWORD PTR [rsp+0x30],rax
  4288b5:	mov    rax,QWORD PTR [rsp+0x58]
  4288ba:	mov    QWORD PTR [rsp+0x38],rax
  4288bf:	lea    rax,[rsp+0x48]
  4288c4:	mov    QWORD PTR [rsp+0x20],rax
  4288c9:	call   0x428000
  4288ce:	mov    r8d,DWORD PTR [rsp+0x4c]
  4288d3:	mov    rsi,rax
  4288d6:	cmp    r8d,0xffff8000
  4288dd:	je     0x428942
  4288df:	mov    ecx,DWORD PTR [rsp+0x48]
  4288e3:	mov    rdx,rax
  4288e6:	mov    r9,rbx
  4288e9:	call   0x428520
  4288ee:	mov    eax,DWORD PTR [rbx+0xc]
  4288f1:	lea    edx,[rax-0x1]
  4288f4:	test   eax,eax
  4288f6:	mov    DWORD PTR [rbx+0xc],edx
  4288f9:	jle    0x42891e
  4288fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428900:	mov    rdx,rbx
  428903:	mov    ecx,0x20
  428908:	call   0x428100
  42890d:	mov    r8d,DWORD PTR [rbx+0xc]
  428911:	lea    r9d,[r8-0x1]
  428915:	test   r8d,r8d
  428918:	mov    DWORD PTR [rbx+0xc],r9d
  42891c:	jg     0x428900
  42891e:	mov    rcx,rsi
  428921:	call   0x42a370
  428926:	nop
  428927:	add    rsp,0x68
  42892b:	pop    rbx
  42892c:	pop    rsi
  42892d:	ret    
  42892e:	xchg   ax,ax
  428930:	mov    DWORD PTR [rdx+0x10],0x6
  428937:	mov    r8d,0x6
  42893d:	jmp    0x428898
  428942:	mov    ecx,DWORD PTR [rsp+0x48]
  428946:	mov    r8,rbx
  428949:	mov    rdx,rax
  42894c:	call   0x428390
  428951:	mov    rcx,rsi
  428954:	call   0x42a370
  428959:	nop
  42895a:	add    rsp,0x68
  42895e:	pop    rbx
  42895f:	pop    rsi
  428960:	ret    
  428961:	nop    DWORD PTR [rax+rax*1+0x0]
  428966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428970:	push   rbp
  428971:	push   r13
  428973:	push   r12
  428975:	push   rdi
  428976:	push   rsi
  428977:	push   rbx
  428978:	sub    rsp,0x28
  42897c:	lea    rbp,[rsp+0x80]
  428984:	mov    ebx,DWORD PTR [rdx+0x10]
  428987:	mov    r11d,DWORD PTR [rdx+0x8]
  42898b:	mov    r8d,0x0
  428991:	mov    rsi,rdx
  428994:	test   ebx,ebx
  428996:	cmovns r8d,ebx
  42899a:	add    r8d,0x17
  42899e:	test   r11d,0x1000
  4289a5:	je     0x4289b2
  4289a7:	cmp    WORD PTR [rdx+0x20],0x0
  4289ac:	jne    0x428ba2
  4289b2:	movsxd r13,DWORD PTR [rsi+0xc]
  4289b6:	movsxd rax,r8d
  4289b9:	cmp    r8d,r13d
  4289bc:	cmovl  rax,r13
  4289c0:	add    rax,0x1e
  4289c4:	and    rax,0xfffffffffffffff0
  4289c8:	call   0x423de0
  4289cd:	sub    rsp,rax
  4289d0:	test   r11b,0x80
  4289d4:	lea    r12,[rsp+0x20]
  4289d9:	je     0x4289ec
  4289db:	test   rcx,rcx
  4289de:	js     0x428c30
  4289e4:	and    r11b,0x7f
  4289e8:	mov    DWORD PTR [rsi+0x8],r11d
  4289ec:	test   rcx,rcx
  4289ef:	je     0x428c38
  4289f5:	mov    r10d,r11d
  4289f8:	mov    r8,r12
  4289fb:	movabs r9,0xcccccccccccccccd
  428a05:	and    r10d,0x1000
  428a0c:	jmp    0x428a43
  428a0e:	xchg   ax,ax
  428a10:	cmp    r12,rdi
  428a13:	je     0x428a40
  428a15:	test   r10d,r10d
  428a18:	je     0x428a40
  428a1a:	cmp    WORD PTR [rsi+0x20],0x0
  428a1f:	je     0x428a40
  428a21:	mov    rax,rdi
  428a24:	sub    rax,r12
  428a27:	cqo    
  428a29:	shr    rdx,0x3e
  428a2d:	add    rax,rdx
  428a30:	and    eax,0x3
  428a33:	sub    rax,rdx
  428a36:	cmp    rax,0x3
  428a3a:	je     0x428b80
  428a40:	mov    r8,rdi
  428a43:	mov    rax,rcx
  428a46:	lea    rdi,[r8+0x1]
  428a4a:	mul    r9
  428a4d:	shr    rdx,0x3
  428a51:	lea    rax,[rdx+rdx*4]
  428a55:	add    rax,rax
  428a58:	sub    rcx,rax
  428a5b:	add    ecx,0x30
  428a5e:	test   rdx,rdx
  428a61:	mov    BYTE PTR [r8],cl
  428a64:	mov    rcx,rdx
  428a67:	jne    0x428a10
  428a69:	test   ebx,ebx
  428a6b:	jle    0x428aa5
  428a6d:	mov    rax,r12
  428a70:	sub    rax,rdi
  428a73:	add    eax,ebx
  428a75:	test   eax,eax
  428a77:	jle    0x428aa5
  428a79:	sub    eax,0x1
  428a7c:	mov    rdx,rax
  428a7f:	lea    rcx,[rdi+rax*1+0x1]
  428a84:	mov    rax,rdi
  428a87:	nop    WORD PTR [rax+rax*1+0x0]
  428a90:	add    rax,0x1
  428a94:	mov    BYTE PTR [rax-0x1],0x30
  428a98:	cmp    rax,rcx
  428a9b:	jne    0x428a90
  428a9d:	movsxd rax,edx
  428aa0:	lea    rdi,[rdi+rax*1+0x1]
  428aa5:	cmp    r12,rdi
  428aa8:	jne    0x428ab5
  428aaa:	test   ebx,ebx
  428aac:	je     0x428ab5
  428aae:	mov    BYTE PTR [rdi],0x30
  428ab1:	add    rdi,0x1
  428ab5:	test   r13d,r13d
  428ab8:	jle    0x428b1e
  428aba:	mov    rax,r12
  428abd:	sub    rax,rdi
  428ac0:	add    r13d,eax
  428ac3:	test   r13d,r13d
  428ac6:	mov    DWORD PTR [rsi+0xc],r13d
  428aca:	jle    0x428b1e
  428acc:	test   r11d,0x1c0
  428ad3:	je     0x428add
  428ad5:	sub    r13d,0x1
  428ad9:	mov    DWORD PTR [rsi+0xc],r13d
  428add:	test   ebx,ebx
  428adf:	js     0x428be0
  428ae5:	test   r11d,0x400
  428aec:	jne    0x428b1e
  428aee:	mov    eax,DWORD PTR [rsi+0xc]
  428af1:	lea    edx,[rax-0x1]
  428af4:	test   eax,eax
  428af6:	mov    DWORD PTR [rsi+0xc],edx
  428af9:	jle    0x428b1e
  428afb:	nop    DWORD PTR [rax+rax*1+0x0]
  428b00:	mov    rdx,rsi
  428b03:	mov    ecx,0x20
  428b08:	call   0x428100
  428b0d:	mov    eax,DWORD PTR [rsi+0xc]
  428b10:	lea    edx,[rax-0x1]
  428b13:	test   eax,eax
  428b15:	mov    DWORD PTR [rsi+0xc],edx
  428b18:	jg     0x428b00
  428b1a:	mov    r11d,DWORD PTR [rsi+0x8]
  428b1e:	test   r11b,0x80
  428b22:	je     0x428b90
  428b24:	lea    rbx,[rdi+0x1]
  428b28:	mov    BYTE PTR [rdi],0x2d
  428b2b:	cmp    r12,rbx
  428b2e:	jae    0x428b5e
  428b30:	sub    rbx,0x1
  428b34:	movsx  ecx,BYTE PTR [rbx]
  428b37:	mov    rdx,rsi
  428b3a:	call   0x428100
  428b3f:	cmp    rbx,r12
  428b42:	jne    0x428b30
  428b44:	mov    eax,DWORD PTR [rsi+0xc]
  428b47:	lea    edx,[rax-0x1]
  428b4a:	test   eax,eax
  428b4c:	mov    DWORD PTR [rsi+0xc],edx
  428b4f:	jle    0x428b6b
  428b51:	mov    rdx,rsi
  428b54:	mov    ecx,0x20
  428b59:	call   0x428100
  428b5e:	mov    eax,DWORD PTR [rsi+0xc]
  428b61:	lea    edx,[rax-0x1]
  428b64:	test   eax,eax
  428b66:	mov    DWORD PTR [rsi+0xc],edx
  428b69:	jg     0x428b51
  428b6b:	lea    rsp,[rbp-0x58]
  428b6f:	pop    rbx
  428b70:	pop    rsi
  428b71:	pop    rdi
  428b72:	pop    r12
  428b74:	pop    r13
  428b76:	pop    rbp
  428b77:	ret    
  428b78:	nop    DWORD PTR [rax+rax*1+0x0]
  428b80:	lea    rdi,[r8+0x2]
  428b84:	mov    BYTE PTR [r8+0x1],0x2c
  428b89:	jmp    0x428a40
  428b8e:	xchg   ax,ax
  428b90:	test   r11d,0x100
  428b97:	je     0x428bc0
  428b99:	lea    rbx,[rdi+0x1]
  428b9d:	mov    BYTE PTR [rdi],0x2b
  428ba0:	jmp    0x428b2b
  428ba2:	mov    eax,r8d
  428ba5:	mov    edx,0x55555556
  428baa:	imul   edx
  428bac:	mov    eax,r8d
  428baf:	sar    eax,0x1f
  428bb2:	sub    edx,eax
  428bb4:	add    r8d,edx
  428bb7:	jmp    0x4289b2
  428bbc:	nop    DWORD PTR [rax+0x0]
  428bc0:	and    r11d,0x40
  428bc4:	mov    rbx,rdi
  428bc7:	je     0x428b2b
  428bcd:	add    rbx,0x1
  428bd1:	mov    BYTE PTR [rdi],0x20
  428bd4:	jmp    0x428b2b
  428bd9:	nop    DWORD PTR [rax+0x0]
  428be0:	mov    eax,r11d
  428be3:	and    eax,0x600
  428be8:	cmp    eax,0x200
  428bed:	jne    0x428ae5
  428bf3:	mov    eax,DWORD PTR [rsi+0xc]
  428bf6:	lea    ecx,[rax-0x1]
  428bf9:	test   eax,eax
  428bfb:	mov    DWORD PTR [rsi+0xc],ecx
  428bfe:	jle    0x428b1e
  428c04:	lea    rdx,[rdi+rcx*1+0x1]
  428c09:	mov    rax,rdi
  428c0c:	nop    DWORD PTR [rax+0x0]
  428c10:	add    rax,0x1
  428c14:	mov    BYTE PTR [rax-0x1],0x30
  428c18:	cmp    rax,rdx
  428c1b:	jne    0x428c10
  428c1d:	lea    rdi,[rdi+rcx*1+0x1]
  428c22:	mov    DWORD PTR [rsi+0xc],0xffffffff
  428c29:	jmp    0x428b1e
  428c2e:	xchg   ax,ax
  428c30:	neg    rcx
  428c33:	jmp    0x4289ec
  428c38:	mov    rdi,r12
  428c3b:	jmp    0x428a69
  428c40:	push   rdi
  428c41:	push   rsi
  428c42:	push   rbx
  428c43:	sub    rsp,0x20
  428c47:	mov    rsi,r9
  428c4a:	lea    r9d,[r8-0x1]
  428c4e:	mov    r8d,0x66666667
  428c54:	mov    r10,rdx
  428c57:	mov    eax,r9d
  428c5a:	movsxd rbx,r9d
  428c5d:	sar    r9d,0x1f
  428c61:	imul   r8d
  428c64:	sar    edx,0x2
  428c67:	mov    r8d,edx
  428c6a:	sub    r8d,r9d
  428c6d:	mov    r9d,0x1
  428c73:	je     0x428c9b
  428c75:	mov    r11d,0x66666667
  428c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  428c80:	mov    eax,r8d
  428c83:	sar    r8d,0x1f
  428c87:	add    r9d,0x1
  428c8b:	imul   r11d
  428c8e:	mov    eax,edx
  428c90:	sar    eax,0x2
  428c93:	sub    eax,r8d
  428c96:	mov    r8d,eax
  428c99:	jne    0x428c80
  428c9b:	mov    edi,DWORD PTR [rsi+0x2c]
  428c9e:	mov    eax,DWORD PTR [rsi+0xc]
  428ca1:	cmp    r9d,edi
  428ca4:	cmovge edi,r9d
  428ca8:	lea    edx,[rdi+0x2]
  428cab:	cmp    eax,edx
  428cad:	jg     0x428d02
  428caf:	mov    DWORD PTR [rsi+0xc],0xffffffff
  428cb6:	mov    r9,rsi
  428cb9:	mov    rdx,r10
  428cbc:	mov    r8d,0x1
  428cc2:	call   0x428520
  428cc7:	mov    ecx,DWORD PTR [rsi+0x8]
  428cca:	mov    eax,DWORD PTR [rsi+0x2c]
  428ccd:	mov    rdx,rsi
  428cd0:	mov    DWORD PTR [rsi+0x10],eax
  428cd3:	mov    eax,ecx
  428cd5:	and    ecx,0x20
  428cd8:	or     eax,0x1c0
  428cdd:	or     ecx,0x45
  428ce0:	mov    DWORD PTR [rsi+0x8],eax
  428ce3:	call   0x428100
  428ce8:	lea    r9d,[rdi+0x1]
  428cec:	add    DWORD PTR [rsi+0xc],r9d
  428cf0:	mov    rdx,rsi
  428cf3:	mov    rcx,rbx
  428cf6:	add    rsp,0x20
  428cfa:	pop    rbx
  428cfb:	pop    rsi
  428cfc:	pop    rdi
  428cfd:	jmp    0x428970
  428d02:	sub    eax,edx
  428d04:	mov    DWORD PTR [rsi+0xc],eax
  428d07:	jmp    0x428cb6
  428d09:	nop    DWORD PTR [rax+0x0]
  428d10:	push   rsi
  428d11:	push   rbx
  428d12:	sub    rsp,0x68
  428d16:	mov    eax,DWORD PTR [rdx+0x10]
  428d19:	fld    TBYTE PTR [rcx]
  428d1b:	mov    rbx,rdx
  428d1e:	test   eax,eax
  428d20:	lea    r8d,[rax+0x1]
  428d24:	js     0x428d90
  428d26:	lea    rdx,[rsp+0x30]
  428d2b:	lea    r9,[rsp+0x4c]
  428d30:	mov    ecx,0x2
  428d35:	fstp   TBYTE PTR [rsp+0x50]
  428d39:	mov    rax,QWORD PTR [rsp+0x50]
  428d3e:	mov    QWORD PTR [rsp+0x30],rax
  428d43:	mov    rax,QWORD PTR [rsp+0x58]
  428d48:	mov    QWORD PTR [rsp+0x38],rax
  428d4d:	lea    rax,[rsp+0x48]
  428d52:	mov    QWORD PTR [rsp+0x20],rax
  428d57:	call   0x428000
  428d5c:	mov    r8d,DWORD PTR [rsp+0x4c]
  428d61:	mov    rsi,rax
  428d64:	cmp    r8d,0xffff8000
  428d6b:	je     0x428da0
  428d6d:	mov    ecx,DWORD PTR [rsp+0x48]
  428d71:	mov    r9,rbx
  428d74:	mov    rdx,rax
  428d77:	call   0x428c40
  428d7c:	mov    rcx,rsi
  428d7f:	call   0x42a370
  428d84:	nop
  428d85:	add    rsp,0x68
  428d89:	pop    rbx
  428d8a:	pop    rsi
  428d8b:	ret    
  428d8c:	nop    DWORD PTR [rax+0x0]
  428d90:	mov    DWORD PTR [rdx+0x10],0x6
  428d97:	mov    r8d,0x7
  428d9d:	jmp    0x428d26
  428d9f:	nop
  428da0:	mov    ecx,DWORD PTR [rsp+0x48]
  428da4:	mov    r8,rbx
  428da7:	mov    rdx,rax
  428daa:	call   0x428390
  428daf:	mov    rcx,rsi
  428db2:	call   0x42a370
  428db7:	nop
  428db8:	add    rsp,0x68
  428dbc:	pop    rbx
  428dbd:	pop    rsi
  428dbe:	ret    
  428dbf:	nop
  428dc0:	push   rsi
  428dc1:	push   rbx
  428dc2:	sub    rsp,0x78
  428dc6:	mov    r8d,DWORD PTR [rdx+0x10]
  428dca:	fld    TBYTE PTR [rcx]
  428dcc:	mov    rbx,rdx
  428dcf:	test   r8d,r8d
  428dd2:	js     0x428f10
  428dd8:	je     0x428ef0
  428dde:	lea    rdx,[rsp+0x40]
  428de3:	lea    r9,[rsp+0x5c]
  428de8:	mov    ecx,0x2
  428ded:	fstp   TBYTE PTR [rsp+0x60]
  428df1:	mov    rax,QWORD PTR [rsp+0x60]
  428df6:	mov    QWORD PTR [rsp+0x40],rax
  428dfb:	mov    rax,QWORD PTR [rsp+0x68]
  428e00:	mov    QWORD PTR [rsp+0x48],rax
  428e05:	lea    rax,[rsp+0x58]
  428e0a:	mov    QWORD PTR [rsp+0x20],rax
  428e0f:	call   0x428000
  428e14:	mov    r8d,DWORD PTR [rsp+0x5c]
  428e19:	mov    rsi,rax
  428e1c:	cmp    r8d,0xffff8000
  428e23:	je     0x428f30
  428e29:	cmp    r8d,0xfffffffd
  428e2d:	jl     0x428eb0
  428e33:	mov    eax,DWORD PTR [rbx+0x10]
  428e36:	cmp    r8d,eax
  428e39:	jg     0x428eb0
  428e3b:	test   BYTE PTR [rbx+0x9],0x8
  428e3f:	jne    0x428f22
  428e45:	mov    rcx,rsi
  428e48:	mov    DWORD PTR [rsp+0x3c],r8d
  428e4d:	call   0x42fad8
  428e52:	mov    r8d,DWORD PTR [rsp+0x3c]
  428e57:	sub    eax,r8d
  428e5a:	test   eax,eax
  428e5c:	mov    DWORD PTR [rbx+0x10],eax
  428e5f:	js     0x428f41
  428e65:	mov    ecx,DWORD PTR [rsp+0x58]
  428e69:	mov    rdx,rsi
  428e6c:	mov    r9,rbx
  428e6f:	call   0x428520
  428e74:	mov    eax,DWORD PTR [rbx+0xc]
  428e77:	lea    edx,[rax-0x1]
  428e7a:	test   eax,eax
  428e7c:	mov    DWORD PTR [rbx+0xc],edx
  428e7f:	jle    0x428edd
  428e81:	mov    rdx,rbx
  428e84:	mov    ecx,0x20
  428e89:	call   0x428100
  428e8e:	mov    r8d,DWORD PTR [rbx+0xc]
  428e92:	lea    r9d,[r8-0x1]
  428e96:	test   r8d,r8d
  428e99:	mov    DWORD PTR [rbx+0xc],r9d
  428e9d:	jg     0x428e81
  428e9f:	mov    rcx,rsi
  428ea2:	call   0x42a370
  428ea7:	nop
  428ea8:	add    rsp,0x78
  428eac:	pop    rbx
  428ead:	pop    rsi
  428eae:	ret    
  428eaf:	nop
  428eb0:	test   BYTE PTR [rbx+0x9],0x8
  428eb4:	jne    0x428f02
  428eb6:	mov    rcx,rsi
  428eb9:	mov    DWORD PTR [rsp+0x3c],r8d
  428ebe:	call   0x42fad8
  428ec3:	mov    r8d,DWORD PTR [rsp+0x3c]
  428ec8:	sub    eax,0x1
  428ecb:	mov    DWORD PTR [rbx+0x10],eax
  428ece:	mov    ecx,DWORD PTR [rsp+0x58]
  428ed2:	mov    r9,rbx
  428ed5:	mov    rdx,rsi
  428ed8:	call   0x428c40
  428edd:	mov    rcx,rsi
  428ee0:	call   0x42a370
  428ee5:	nop
  428ee6:	add    rsp,0x78
  428eea:	pop    rbx
  428eeb:	pop    rsi
  428eec:	ret    
  428eed:	nop    DWORD PTR [rax]
  428ef0:	mov    DWORD PTR [rdx+0x10],0x1
  428ef7:	mov    r8d,0x1
  428efd:	jmp    0x428dde
  428f02:	sub    DWORD PTR [rbx+0x10],0x1
  428f06:	jmp    0x428ece
  428f08:	nop    DWORD PTR [rax+rax*1+0x0]
  428f10:	mov    DWORD PTR [rdx+0x10],0x6
  428f17:	mov    r8d,0x6
  428f1d:	jmp    0x428dde
  428f22:	sub    eax,r8d
  428f25:	mov    DWORD PTR [rbx+0x10],eax
  428f28:	jmp    0x428e65
  428f2d:	nop    DWORD PTR [rax]
  428f30:	mov    ecx,DWORD PTR [rsp+0x58]
  428f34:	mov    r8,rbx
  428f37:	mov    rdx,rax
  428f3a:	call   0x428390
  428f3f:	jmp    0x428edd
  428f41:	mov    edx,DWORD PTR [rbx+0xc]
  428f44:	test   edx,edx
  428f46:	jle    0x428e65
  428f4c:	add    eax,edx
  428f4e:	mov    DWORD PTR [rbx+0xc],eax
  428f51:	jmp    0x428e65
  428f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f60:	push   rbp
  428f61:	push   r14
  428f63:	push   r13
  428f65:	push   r12
  428f67:	push   rdi
  428f68:	push   rsi
  428f69:	push   rbx
  428f6a:	mov    rbp,rsp
  428f6d:	sub    rsp,0x20
  428f71:	mov    r10d,0x12
  428f77:	mov    eax,0x18
  428f7c:	cmp    ecx,0x6f
  428f7f:	mov    rbx,r8
  428f82:	mov    r8d,DWORD PTR [r8+0x10]
  428f86:	mov    r11d,ecx
  428f89:	setne  cl
  428f8c:	mov    edi,DWORD PTR [rbx+0x8]
  428f8f:	movzx  ecx,cl
  428f92:	cmovne eax,r10d
  428f96:	mov    r10b,0x0
  428f99:	add    ecx,0x3
  428f9c:	test   r8d,r8d
  428f9f:	mov    r9,rdx
  428fa2:	cmovns r10d,r8d
  428fa6:	add    r10d,eax
  428fa9:	test   edi,0x1000
  428faf:	je     0x428fbc
  428fb1:	cmp    WORD PTR [rbx+0x20],0x0
  428fb6:	jne    0x429183
  428fbc:	movsxd r12,DWORD PTR [rbx+0xc]
  428fc0:	movsxd rax,r10d
  428fc3:	cmp    r10d,r12d
  428fc6:	cmovl  rax,r12
  428fca:	add    rax,0x1e
  428fce:	and    rax,0xfffffffffffffff0
  428fd2:	call   0x423de0
  428fd7:	xor    edx,edx
  428fd9:	sub    rsp,rax
  428fdc:	cmp    r11d,0x6f
  428fe0:	lea    rsi,[rsp+0x20]
  428fe5:	setne  dl
  428fe8:	test   r9,r9
  428feb:	lea    edx,[rdx*8+0x7]
  428ff2:	mov    r10,rsi
  428ff5:	je     0x4292a2
  428ffb:	mov    r13d,r11d
  428ffe:	and    r13d,0x20
  429002:	jmp    0x429010
  429004:	shr    r9,cl
  429007:	mov    BYTE PTR [r10-0x1],r14b
  42900b:	test   r9,r9
  42900e:	je     0x429035
  429010:	mov    eax,edx
  429012:	add    r10,0x1
  429016:	and    eax,r9d
  429019:	lea    r14d,[rax+0x30]
  42901d:	cmp    r14b,0x39
  429021:	jbe    0x429004
  429023:	add    eax,0x37
  429026:	shr    r9,cl
  429029:	or     eax,r13d
  42902c:	test   r9,r9
  42902f:	mov    BYTE PTR [r10-0x1],al
  429033:	jne    0x429010
  429035:	cmp    rsi,r10
  429038:	je     0x4292a2
  42903e:	test   r8d,r8d
  429041:	jle    0x429202
  429047:	mov    rax,rsi
  42904a:	sub    rax,r10
  42904d:	add    eax,r8d
  429050:	test   eax,eax
  429052:	jle    0x429202
  429058:	sub    eax,0x1
  42905b:	mov    rdx,rax
  42905e:	lea    rcx,[r10+rax*1+0x1]
  429063:	mov    rax,r10
  429066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429070:	add    rax,0x1
  429074:	mov    BYTE PTR [rax-0x1],0x30
  429078:	cmp    rax,rcx
  42907b:	jne    0x429070
  42907d:	movsxd rax,edx
  429080:	lea    r10,[r10+rax*1+0x1]
  429085:	cmp    rsi,r10
  429088:	jne    0x4290a0
  42908a:	test   r8d,r8d
  42908d:	je     0x4290a0
  42908f:	mov    BYTE PTR [r10],0x30
  429093:	add    r10,0x1
  429097:	nop    WORD PTR [rax+rax*1+0x0]
  4290a0:	mov    rax,r10
  4290a3:	sub    rax,rsi
  4290a6:	cmp    r12d,eax
  4290a9:	jle    0x4291d0
  4290af:	sub    r12d,eax
  4290b2:	test   r12d,r12d
  4290b5:	mov    DWORD PTR [rbx+0xc],r12d
  4290b9:	jle    0x429307
  4290bf:	cmp    r11d,0x6f
  4290c3:	mov    edx,DWORD PTR [rbx+0x8]
  4290c6:	je     0x429290
  4290cc:	test   dh,0x8
  4290cf:	je     0x429250
  4290d5:	lea    r13d,[r12-0x2]
  4290da:	test   r13d,r13d
  4290dd:	jle    0x4290e8
  4290df:	test   r8d,r8d
  4290e2:	js     0x42919d
  4290e8:	test   r13d,r13d
  4290eb:	mov    BYTE PTR [r10],r11b
  4290ee:	lea    rdi,[r10+0x2]
  4290f2:	mov    BYTE PTR [r10+0x1],0x30
  4290f7:	jle    0x4291f8
  4290fd:	and    dh,0x4
  429100:	jne    0x429223
  429106:	lea    r14d,[r13-0x1]
  42910a:	mov    r12d,r14d
  42910d:	nop    DWORD PTR [rax]
  429110:	sub    r12d,0x1
  429114:	mov    rdx,rbx
  429117:	mov    ecx,0x20
  42911c:	call   0x428100
  429121:	lea    eax,[r12+0x1]
  429126:	test   eax,eax
  429128:	jg     0x429110
  42912a:	test   r14d,r14d
  42912d:	lea    r13d,[r14-0x1]
  429131:	mov    r12d,0x0
  429137:	cmovns r12d,r14d
  42913b:	sub    r13d,r12d
  42913e:	cmp    rsi,rdi
  429141:	jb     0x429230
  429147:	nop    WORD PTR [rax+rax*1+0x0]
  429150:	test   r13d,r13d
  429153:	lea    esi,[r13-0x1]
  429157:	jle    0x429175
  429159:	nop    DWORD PTR [rax+0x0]
  429160:	mov    rdx,rbx
  429163:	mov    ecx,0x20
  429168:	sub    esi,0x1
  42916b:	call   0x428100
  429170:	cmp    esi,0xffffffff
  429173:	jne    0x429160
  429175:	mov    rsp,rbp
  429178:	pop    rbx
  429179:	pop    rsi
  42917a:	pop    rdi
  42917b:	pop    r12
  42917d:	pop    r13
  42917f:	pop    r14
  429181:	pop    rbp
  429182:	ret    
  429183:	mov    eax,r10d
  429186:	mov    edx,0x55555556
  42918b:	imul   edx
  42918d:	mov    eax,r10d
  429190:	sar    eax,0x1f
  429193:	sub    edx,eax
  429195:	add    r10d,edx
  429198:	jmp    0x428fbc
  42919d:	mov    eax,edx
  42919f:	and    eax,0x600
  4291a4:	cmp    eax,0x200
  4291a9:	je     0x4292b0
  4291af:	mov    r12d,r13d
  4291b2:	test   dh,0x8
  4291b5:	mov    r13d,r12d
  4291b8:	mov    rdi,r10
  4291bb:	je     0x4290fd
  4291c1:	mov    r13d,r12d
  4291c4:	jmp    0x4290e8
  4291c9:	nop    DWORD PTR [rax+0x0]
  4291d0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4291d7:	mov    r13d,0xffffffff
  4291dd:	cmp    r11d,0x6f
  4291e1:	je     0x4291f5
  4291e3:	mov    edx,DWORD PTR [rbx+0x8]
  4291e6:	mov    eax,edx
  4291e8:	and    eax,0x800
  4291ed:	test   eax,eax
  4291ef:	jne    0x4290e8
  4291f5:	mov    rdi,r10
  4291f8:	cmp    rsi,rdi
  4291fb:	jb     0x429230
  4291fd:	jmp    0x429175
  429202:	cmp    r11d,0x6f
  429206:	jne    0x429085
  42920c:	test   BYTE PTR [rbx+0x9],0x8
  429210:	je     0x429085
  429216:	mov    BYTE PTR [r10],0x30
  42921a:	add    r10,0x1
  42921e:	jmp    0x429085
  429223:	cmp    rsi,rdi
  429226:	jae    0x42930f
  42922c:	nop    DWORD PTR [rax+0x0]
  429230:	sub    rdi,0x1
  429234:	movsx  ecx,BYTE PTR [rdi]
  429237:	mov    rdx,rbx
  42923a:	call   0x428100
  42923f:	cmp    rsi,rdi
  429242:	jb     0x429230
  429244:	jmp    0x429150
  429249:	nop    DWORD PTR [rax+0x0]
  429250:	test   r8d,r8d
  429253:	jns    0x4291b2
  429259:	mov    eax,edx
  42925b:	and    eax,0x600
  429260:	cmp    eax,0x200
  429265:	je     0x4292fe
  42926b:	cmp    r11d,0x6f
  42926f:	jne    0x4291b2
  429275:	and    dh,0x4
  429278:	jne    0x42929a
  42927a:	lea    r14d,[r12-0x1]
  42927f:	mov    rdi,r10
  429282:	jmp    0x42910a
  429287:	nop    WORD PTR [rax+rax*1+0x0]
  429290:	test   r8d,r8d
  429293:	js     0x429259
  429295:	and    dh,0x4
  429298:	je     0x42927a
  42929a:	mov    rdi,r10
  42929d:	mov    r13d,r12d
  4292a0:	jmp    0x42923f
  4292a2:	and    edi,0xfffff7ff
  4292a8:	mov    DWORD PTR [rbx+0x8],edi
  4292ab:	jmp    0x42903e
  4292b0:	lea    r8d,[r12-0x3]
  4292b5:	mov    r12d,r8d
  4292b8:	mov    eax,r12d
  4292bb:	lea    rcx,[r10+rax*1+0x1]
  4292c0:	mov    rax,r10
  4292c3:	add    rax,0x1
  4292c7:	mov    BYTE PTR [rax-0x1],0x30
  4292cb:	cmp    rax,rcx
  4292ce:	jne    0x4292c3
  4292d0:	movsxd rax,r8d
  4292d3:	cmp    r11d,0x6f
  4292d7:	lea    r10,[r10+rax*1+0x1]
  4292dc:	je     0x4292f0
  4292de:	mov    eax,edx
  4292e0:	mov    r13d,0xffffffff
  4292e6:	and    eax,0x800
  4292eb:	jmp    0x4291ed
  4292f0:	mov    rdi,r10
  4292f3:	mov    r13d,0xffffffff
  4292f9:	jmp    0x4291f8
  4292fe:	sub    r12d,0x1
  429302:	mov    r8d,r12d
  429305:	jmp    0x4292b8
  429307:	mov    r13d,r12d
  42930a:	jmp    0x4291dd
  42930f:	lea    esi,[r13-0x1]
  429313:	jmp    0x429160
  429318:	nop    DWORD PTR [rax+rax*1+0x0]
  429320:	push   r13
  429322:	push   r12
  429324:	push   rbp
  429325:	push   rdi
  429326:	push   rsi
  429327:	push   rbx
  429328:	sub    rsp,0x68
  42932c:	mov    r9,QWORD PTR [rcx]
  42932f:	mov    r10d,DWORD PTR [rcx+0x8]
  429333:	mov    rbx,rdx
  429336:	mov    rax,r9
  429339:	mov    QWORD PTR [rsp+0x30],r9
  42933e:	mov    DWORD PTR [rsp+0x38],r10d
  429343:	shr    rax,0x20
  429347:	mov    r8,r10
  42934a:	and    eax,0x7fffffff
  42934f:	or     r9d,eax
  429352:	lea    eax,[r10+r10*1]
  429356:	mov    edx,r9d
  429359:	neg    edx
  42935b:	and    eax,0xfffe
  429360:	or     edx,r9d
  429363:	shr    edx,0x1f
  429366:	or     edx,eax
  429368:	mov    eax,0xfffe
  42936d:	sub    eax,edx
  42936f:	sar    eax,0x10
  429372:	test   eax,eax
  429374:	jne    0x429760
  42937a:	movzx  esi,WORD PTR [rsp+0x38]
  42937f:	mov    ecx,esi
  429381:	and    ecx,0x8000
  429387:	je     0x429390
  429389:	or     DWORD PTR [rbx+0x8],0x80
  429390:	and    r8w,0x7fff
  429396:	cmp    r8w,0x7fff
  42939c:	jne    0x4293c0
  42939e:	test   r9d,r9d
  4293a1:	jne    0x4293c0
  4293a3:	lea    rdx,[rip+0x13ada]        # 0x43ce84
  4293aa:	mov    r8,rbx
  4293ad:	call   0x428390
  4293b2:	jmp    0x429735
  4293b7:	nop    WORD PTR [rax+rax*1+0x0]
  4293c0:	and    si,0x7fff
  4293c5:	jne    0x4294f0
  4293cb:	mov    rax,QWORD PTR [rsp+0x30]
  4293d0:	test   rax,rax
  4293d3:	jne    0x42977f
  4293d9:	mov    r9d,DWORD PTR [rbx+0x10]
  4293dd:	cmp    r9d,0xe
  4293e1:	jbe    0x4297fc
  4293e7:	xor    esi,esi
  4293e9:	mov    r8d,DWORD PTR [rbx+0x8]
  4293ed:	lea    rbp,[rsp+0x40]
  4293f2:	test   r9d,r9d
  4293f5:	jle    0x42980c
  4293fb:	lea    rax,[rbp+0x1]
  4293ff:	mov    BYTE PTR [rsp+0x40],0x2e
  429404:	mov    r10d,DWORD PTR [rbx+0xc]
  429408:	lea    rdi,[rax+0x1]
  42940c:	mov    BYTE PTR [rax],0x30
  42940f:	mov    r12d,0x2
  429415:	test   r10d,r10d
  429418:	jg     0x42961c
  42941e:	xchg   ax,ax
  429420:	test   r8b,0x80
  429424:	jne    0x4296e0
  42942a:	test   r8d,0x100
  429431:	jne    0x4297d0
  429437:	and    r8d,0x40
  42943b:	jne    0x4297e2
  429441:	mov    rdx,rbx
  429444:	mov    ecx,0x30
  429449:	call   0x428100
  42944e:	mov    ecx,DWORD PTR [rbx+0x8]
  429451:	mov    rdx,rbx
  429454:	and    ecx,0x20
  429457:	or     ecx,0x58
  42945a:	call   0x428100
  42945f:	mov    eax,DWORD PTR [rbx+0xc]
  429462:	test   eax,eax
  429464:	jle    0x42948c
  429466:	test   BYTE PTR [rbx+0x9],0x2
  42946a:	je     0x42948c
  42946c:	sub    eax,0x1
  42946f:	mov    DWORD PTR [rbx+0xc],eax
  429472:	mov    rdx,rbx
  429475:	mov    ecx,0x30
  42947a:	call   0x428100
  42947f:	mov    eax,DWORD PTR [rbx+0xc]
  429482:	lea    edx,[rax-0x1]
  429485:	test   eax,eax
  429487:	mov    DWORD PTR [rbx+0xc],edx
  42948a:	jg     0x429472
  42948c:	cmp    rdi,rbp
  42948f:	lea    r13,[rsp+0x2e]
  429494:	ja     0x4294c9
  429496:	jmp    0x4296ff
  42949b:	nop    DWORD PTR [rax+rax*1+0x0]
  4294a0:	movzx  eax,WORD PTR [rbx+0x20]
  4294a4:	test   ax,ax
  4294a7:	mov    WORD PTR [rsp+0x2e],ax
  4294ac:	je     0x4294c0
  4294ae:	mov    r8,rbx
  4294b1:	mov    edx,0x1
  4294b6:	mov    rcx,r13
  4294b9:	call   0x428160
  4294be:	xchg   ax,ax
  4294c0:	cmp    rdi,rbp
  4294c3:	je     0x4296ff
  4294c9:	sub    rdi,0x1
  4294cd:	movsx  ecx,BYTE PTR [rdi]
  4294d0:	cmp    ecx,0x2e
  4294d3:	je     0x429742
  4294d9:	cmp    ecx,0x2c
  4294dc:	je     0x4294a0
  4294de:	mov    rdx,rbx
  4294e1:	call   0x428100
  4294e6:	jmp    0x4294c0
  4294e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4294f0:	mov    r9d,DWORD PTR [rbx+0x10]
  4294f4:	sub    si,0x3fff
  4294f9:	mov    rax,QWORD PTR [rsp+0x30]
  4294fe:	cmp    r9d,0xe
  429502:	ja     0x4297ad
  429508:	test   rax,rax
  42950b:	js     0x429515
  42950d:	nop    DWORD PTR [rax]
  429510:	add    rax,rax
  429513:	jns    0x429510
  429515:	mov    ecx,0xe
  42951a:	mov    edx,0x4
  42951f:	shr    rax,1
  429522:	sub    ecx,r9d
  429525:	shl    ecx,0x2
  429528:	shl    rdx,cl
  42952b:	add    rax,rdx
  42952e:	js     0x4297f4
  429534:	add    rax,rax
  429537:	mov    ecx,0xf
  42953c:	sub    ecx,r9d
  42953f:	shl    ecx,0x2
  429542:	shr    rax,cl
  429545:	mov    r8d,DWORD PTR [rbx+0x8]
  429549:	lea    rbp,[rsp+0x40]
  42954e:	mov    rdi,rbp
  429551:	mov    r11d,r8d
  429554:	mov    r10d,r8d
  429557:	and    r11d,0x800
  42955e:	and    r10d,0x20
  429562:	jmp    0x429593
  429564:	mov    ecx,DWORD PTR [rbx+0x10]
  429567:	test   ecx,ecx
  429569:	jle    0x429571
  42956b:	sub    ecx,0x1
  42956e:	mov    DWORD PTR [rbx+0x10],ecx
  429571:	shr    rax,0x4
  429575:	mov    r9,rdi
  429578:	test   edx,edx
  42957a:	je     0x4295e4
  42957c:	cmp    edx,0x9
  42957f:	lea    rdi,[r9+0x1]
  429583:	jle    0x4295f7
  429585:	add    edx,0x37
  429588:	or     edx,r10d
  42958b:	mov    BYTE PTR [r9],dl
  42958e:	test   rax,rax
  429591:	je     0x429600
  429593:	mov    edx,eax
  429595:	and    edx,0xf
  429598:	cmp    edx,eax
  42959a:	jne    0x429564
  42959c:	cmp    rdi,rbp
  42959f:	ja     0x4295b2
  4295a1:	test   r11d,r11d
  4295a4:	jne    0x4295b2
  4295a6:	mov    r12d,DWORD PTR [rbx+0x10]
  4295aa:	mov    r9,rdi
  4295ad:	test   r12d,r12d
  4295b0:	jle    0x4295b9
  4295b2:	lea    r9,[rdi+0x1]
  4295b6:	mov    BYTE PTR [rdi],0x2e
  4295b9:	cmp    rax,0x1
  4295bd:	jbe    0x4297c9
  4295c3:	lea    ecx,[rsi-0x1]
  4295c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295d0:	shr    rax,1
  4295d3:	mov    esi,ecx
  4295d5:	cmp    rax,0x1
  4295d9:	lea    ecx,[rsi-0x1]
  4295dc:	jne    0x4295d0
  4295de:	xor    al,al
  4295e0:	test   edx,edx
  4295e2:	jne    0x42957c
  4295e4:	cmp    r9,rbp
  4295e7:	ja     0x4295f3
  4295e9:	mov    ecx,DWORD PTR [rbx+0x10]
  4295ec:	mov    rdi,r9
  4295ef:	test   ecx,ecx
  4295f1:	js     0x42958e
  4295f3:	lea    rdi,[r9+0x1]
  4295f7:	add    edx,0x30
  4295fa:	jmp    0x42958b
  4295fc:	nop    DWORD PTR [rax+0x0]
  429600:	cmp    rdi,rbp
  429603:	je     0x429803
  429609:	mov    r10d,DWORD PTR [rbx+0xc]
  42960d:	mov    r12d,0x2
  429613:	test   r10d,r10d
  429616:	jle    0x429420
  42961c:	mov    edx,DWORD PTR [rbx+0x10]
  42961f:	mov    rax,rdi
  429622:	movsx  r11d,si
  429626:	sub    rax,rbp
  429629:	lea    ecx,[rdx+rax*1]
  42962c:	test   edx,edx
  42962e:	mov    edx,r8d
  429631:	cmovg  eax,ecx
  429634:	and    edx,0x1c0
  42963a:	mov    ecx,0x66666667
  42963f:	cmp    edx,0x1
  429642:	sbb    edx,edx
  429644:	lea    r9d,[rax+rdx*1+0x6]
  429649:	mov    eax,r11d
  42964c:	imul   ecx
  42964e:	mov    eax,r11d
  429651:	sar    eax,0x1f
  429654:	mov    ecx,edx
  429656:	sar    ecx,0x2
  429659:	sub    ecx,eax
  42965b:	je     0x429680
  42965d:	mov    r11d,0x66666667
  429663:	mov    eax,ecx
  429665:	sar    ecx,0x1f
  429668:	add    r9d,0x1
  42966c:	imul   r11d
  42966f:	add    r12d,0x1
  429673:	sar    edx,0x2
  429676:	sub    edx,ecx
  429678:	mov    ecx,edx
  42967a:	jne    0x429663
  42967c:	movsx  r12d,r12w
  429680:	cmp    r10d,r9d
  429683:	jle    0x429750
  429689:	sub    r10d,r9d
  42968c:	test   r8d,0x600
  429693:	jne    0x4297c0
  429699:	lea    eax,[r10-0x1]
  42969d:	test   r10d,r10d
  4296a0:	mov    DWORD PTR [rbx+0xc],eax
  4296a3:	jle    0x429420
  4296a9:	nop    DWORD PTR [rax+0x0]
  4296b0:	mov    rdx,rbx
  4296b3:	mov    ecx,0x20
  4296b8:	call   0x428100
  4296bd:	mov    eax,DWORD PTR [rbx+0xc]
  4296c0:	lea    edx,[rax-0x1]
  4296c3:	test   eax,eax
  4296c5:	mov    DWORD PTR [rbx+0xc],edx
  4296c8:	jg     0x4296b0
  4296ca:	mov    r8d,DWORD PTR [rbx+0x8]
  4296ce:	test   r8b,0x80
  4296d2:	je     0x42942a
  4296d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296e0:	mov    rdx,rbx
  4296e3:	mov    ecx,0x2d
  4296e8:	call   0x428100
  4296ed:	jmp    0x429441
  4296f2:	mov    rdx,rbx
  4296f5:	mov    ecx,0x30
  4296fa:	call   0x428100
  4296ff:	mov    eax,DWORD PTR [rbx+0x10]
  429702:	lea    edx,[rax-0x1]
  429705:	test   eax,eax
  429707:	mov    DWORD PTR [rbx+0x10],edx
  42970a:	jg     0x4296f2
  42970c:	mov    ecx,DWORD PTR [rbx+0x8]
  42970f:	mov    rdx,rbx
  429712:	and    ecx,0x20
  429715:	or     ecx,0x50
  429718:	call   0x428100
  42971d:	add    DWORD PTR [rbx+0xc],r12d
  429721:	or     DWORD PTR [rbx+0x8],0x1c0
  429728:	movsx  rcx,si
  42972c:	mov    rdx,rbx
  42972f:	call   0x428970
  429734:	nop
  429735:	add    rsp,0x68
  429739:	pop    rbx
  42973a:	pop    rsi
  42973b:	pop    rdi
  42973c:	pop    rbp
  42973d:	pop    r12
  42973f:	pop    r13
  429741:	ret    
  429742:	mov    rcx,rbx
  429745:	call   0x428430
  42974a:	jmp    0x4294c0
  42974f:	nop
  429750:	mov    DWORD PTR [rbx+0xc],0xffffffff
  429757:	jmp    0x429420
  42975c:	nop    DWORD PTR [rax+0x0]
  429760:	lea    rdx,[rip+0x13719]        # 0x43ce80
  429767:	mov    r8,rbx
  42976a:	xor    ecx,ecx
  42976c:	call   0x428390
  429771:	nop
  429772:	add    rsp,0x68
  429776:	pop    rbx
  429777:	pop    rsi
  429778:	pop    rdi
  429779:	pop    rbp
  42977a:	pop    r12
  42977c:	pop    r13
  42977e:	ret    
  42977f:	js     0x429821
  429785:	mov    edx,0xffffc001
  42978a:	nop    WORD PTR [rax+rax*1+0x0]
  429790:	mov    esi,edx
  429792:	sub    edx,0x1
  429795:	add    rax,rax
  429798:	jns    0x429790
  42979a:	mov    r9d,DWORD PTR [rbx+0x10]
  42979e:	cmp    r9d,0xe
  4297a2:	jbe    0x429515
  4297a8:	jmp    0x429545
  4297ad:	test   rax,rax
  4297b0:	jne    0x429545
  4297b6:	jmp    0x4293e9
  4297bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4297c0:	mov    DWORD PTR [rbx+0xc],r10d
  4297c4:	jmp    0x429420
  4297c9:	xor    eax,eax
  4297cb:	jmp    0x429578
  4297d0:	mov    rdx,rbx
  4297d3:	mov    ecx,0x2b
  4297d8:	call   0x428100
  4297dd:	jmp    0x429441
  4297e2:	mov    rdx,rbx
  4297e5:	mov    ecx,0x20
  4297ea:	call   0x428100
  4297ef:	jmp    0x429441
  4297f4:	add    esi,0x1
  4297f7:	jmp    0x429537
  4297fc:	xor    eax,eax
  4297fe:	jmp    0x429510
  429803:	mov    r9d,DWORD PTR [rbx+0x10]
  429807:	jmp    0x4293f2
  42980c:	test   r8d,0x800
  429813:	mov    rax,rbp
  429816:	je     0x429404
  42981c:	jmp    0x4293fb
  429821:	mov    esi,0xffffc002
  429826:	jmp    0x42979a
  42982b:	nop    DWORD PTR [rax+rax*1+0x0]
  429830:	push   r15
  429832:	push   r14
  429834:	push   r13
  429836:	push   r12
  429838:	push   rbp
  429839:	push   rdi
  42983a:	push   rsi
  42983b:	push   rbx
  42983c:	sub    rsp,0xb8
  429843:	mov    r13,QWORD PTR [rsp+0x120]
  42984b:	mov    r15d,ecx
  42984e:	mov    rdi,rdx
  429851:	mov    esi,r8d
  429854:	mov    rbx,r9
  429857:	and    r15d,0x6000
  42985e:	call   0x42fc38
  429863:	mov    eax,DWORD PTR [rax]
  429865:	lea    rcx,[rip+0x13631]        # 0x43ce9d
  42986c:	xor    edx,edx
  42986e:	mov    QWORD PTR [rsp+0x80],rdi
  429876:	mov    DWORD PTR [rsp+0x88],r15d
  42987e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  429889:	mov    DWORD PTR [rsp+0x90],0xffffffff
  429894:	mov    DWORD PTR [rsp+0x34],eax
  429898:	xor    eax,eax
  42989a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  4298a5:	mov    WORD PTR [rsp+0x98],ax
  4298ad:	mov    DWORD PTR [rsp+0x9c],0x0
  4298b8:	mov    WORD PTR [rsp+0xa0],dx
  4298c0:	mov    DWORD PTR [rsp+0xa4],0x0
  4298cb:	mov    DWORD PTR [rsp+0xa8],esi
  4298d2:	call   0x42fb80
  4298d7:	test   rax,rax
  4298da:	je     0x4298ec
  4298dc:	movsx  edx,BYTE PTR [rax]
  4298df:	mov    eax,0x2
  4298e4:	sub    edx,0x30
  4298e7:	cmp    edx,0x2
  4298ea:	jbe    0x4298f9
  4298ec:	call   0x42fd70
  4298f1:	and    eax,0x1
  4298f4:	neg    eax
  4298f6:	add    eax,0x3
  4298f9:	lea    rdi,[rsp+0x70]
  4298fe:	mov    DWORD PTR [rsp+0xac],eax
  429905:	movzx  eax,BYTE PTR [rbx]
  429908:	lea    rsi,[rsp+0x6e]
  42990d:	lea    r12,[rsp+0x80]
  429915:	lea    rbp,[rip+0x13598]        # 0x43ceb4
  42991c:	mov    QWORD PTR [rsp+0x28],rdi
  429921:	lea    rdi,[rsp+0x50]
  429926:	mov    QWORD PTR [rsp+0x38],rsi
  42992b:	mov    QWORD PTR [rsp+0x20],rdi
  429930:	mov    edi,r15d
  429933:	or     edi,0x200
  429939:	mov    DWORD PTR [rsp+0x48],edi
  42993d:	nop    DWORD PTR [rax]
  429940:	movsx  ecx,al
  429943:	lea    rsi,[rbx+0x1]
  429947:	test   ecx,ecx
  429949:	je     0x4299ca
  42994b:	cmp    ecx,0x25
  42994e:	jne    0x4299b0
  429950:	movzx  eax,BYTE PTR [rbx+0x1]
  429954:	xor    r10d,r10d
  429957:	xor    r14d,r14d
  42995a:	mov    DWORD PTR [rsp+0x88],r15d
  429962:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42996d:	mov    rdi,rsi
  429970:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  42997b:	lea    r11,[r12+0xc]
  429980:	test   al,al
  429982:	je     0x429b2b
  429988:	lea    edx,[rax-0x20]
  42998b:	lea    rbx,[rdi+0x1]
  42998f:	movsx  ecx,al
  429992:	cmp    dl,0x5a
  429995:	ja     0x429fa0
  42999b:	movzx  edx,dl
  42999e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  4299a3:	add    rdx,rbp
  4299a6:	jmp    rdx
  4299a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4299b0:	mov    rdx,r12
  4299b3:	call   0x428100
  4299b8:	movzx  eax,BYTE PTR [rbx+0x1]
  4299bc:	mov    rbx,rsi
  4299bf:	lea    rsi,[rbx+0x1]
  4299c3:	movsx  ecx,al
  4299c6:	test   ecx,ecx
  4299c8:	jne    0x42994b
  4299ca:	mov    eax,DWORD PTR [rsp+0xa4]
  4299d1:	add    rsp,0xb8
  4299d8:	pop    rbx
  4299d9:	pop    rsi
  4299da:	pop    rdi
  4299db:	pop    rbp
  4299dc:	pop    r12
  4299de:	pop    r13
  4299e0:	pop    r14
  4299e2:	pop    r15
  4299e4:	ret    
  4299e5:	sub    r10d,0x2
  4299e9:	mov    rax,r13
  4299ec:	cmp    r10d,0x1
  4299f0:	jbe    0x429fe3
  4299f6:	mov    rsi,QWORD PTR [rax]
  4299f9:	add    r13,0x8
  4299fd:	test   rsi,rsi
  429a00:	je     0x429ac5
  429a06:	mov    rcx,rsi
  429a09:	call   0x42fad8
  429a0e:	mov    edx,eax
  429a10:	mov    r8,r12
  429a13:	mov    rcx,rsi
  429a16:	call   0x428280
  429a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  429a20:	movzx  eax,BYTE PTR [rbx]
  429a23:	jmp    0x429940
  429a28:	nop    DWORD PTR [rax+rax*1+0x0]
  429a30:	test   r14d,r14d
  429a33:	jne    0x429a43
  429a35:	cmp    DWORD PTR [rsp+0x88],r15d
  429a3d:	je     0x42a1ab
  429a43:	mov    rdx,QWORD PTR [r13+0x0]
  429a47:	lea    rsi,[r13+0x8]
  429a4b:	mov    r8,r12
  429a4e:	mov    ecx,0x78
  429a53:	mov    QWORD PTR [rsp+0x78],0x0
  429a5c:	mov    r13,rsi
  429a5f:	mov    QWORD PTR [rsp+0x70],rdx
  429a64:	call   0x428f60
  429a69:	jmp    0x429a20
  429a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  429a70:	cmp    r10d,0x5
  429a74:	mov    rax,QWORD PTR [r13+0x0]
  429a78:	je     0x42a0ea
  429a7e:	cmp    r10d,0x1
  429a82:	je     0x42a174
  429a88:	cmp    r10d,0x2
  429a8c:	je     0x429a98
  429a8e:	cmp    r10d,0x3
  429a92:	je     0x42a21c
  429a98:	mov    edx,DWORD PTR [rsp+0xa4]
  429a9f:	add    r13,0x8
  429aa3:	mov    DWORD PTR [rax],edx
  429aa5:	jmp    0x429a20
  429aaa:	nop    WORD PTR [rax+rax*1+0x0]
  429ab0:	mov    ecx,DWORD PTR [rsp+0x34]
  429ab4:	call   0x42fae8
  429ab9:	test   rax,rax
  429abc:	mov    rsi,rax
  429abf:	jne    0x429a06
  429ac5:	mov    edx,0x6
  429aca:	lea    rsi,[rip+0x133c5]        # 0x43ce96
  429ad1:	jmp    0x429a10
  429ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429ae0:	movzx  eax,BYTE PTR [rdi+0x1]
  429ae4:	mov    r10d,0x2
  429aea:	mov    r14d,0x4
  429af0:	cmp    al,0x6c
  429af2:	jne    0x429b20
  429af4:	lea    rbx,[rdi+0x2]
  429af8:	movzx  eax,BYTE PTR [rdi+0x2]
  429afc:	mov    r10d,0x3
  429b02:	mov    r14d,0x4
  429b08:	jmp    0x429b20
  429b0a:	nop    WORD PTR [rax+rax*1+0x0]
  429b10:	movzx  eax,BYTE PTR [rdi+0x1]
  429b14:	mov    r10d,0x3
  429b1a:	mov    r14d,0x4
  429b20:	test   al,al
  429b22:	mov    rdi,rbx
  429b25:	jne    0x429988
  429b2b:	mov    rbx,rdi
  429b2e:	jmp    0x429940
  429b33:	mov    eax,DWORD PTR [rsp+0x88]
  429b3a:	mov    rdx,r13
  429b3d:	add    r13,0x8
  429b41:	or     eax,0x20
  429b44:	test   al,0x4
  429b46:	mov    DWORD PTR [rsp+0x88],eax
  429b4d:	je     0x429dab
  429b53:	mov    rax,QWORD PTR [rdx]
  429b56:	mov    rcx,QWORD PTR [rsp+0x20]
  429b5b:	mov    rdx,r12
  429b5e:	fld    TBYTE PTR [rax]
  429b60:	fstp   TBYTE PTR [rsp+0x50]
  429b64:	call   0x428dc0
  429b69:	jmp    0x429a20
  429b6e:	xchg   ax,ax
  429b70:	movzx  eax,BYTE PTR [rdi+0x1]
  429b74:	mov    r10d,0x1
  429b7a:	mov    r14d,0x4
  429b80:	cmp    al,0x68
  429b82:	jne    0x429b20
  429b84:	lea    rbx,[rdi+0x2]
  429b88:	movzx  eax,BYTE PTR [rdi+0x2]
  429b8c:	mov    r10d,0x5
  429b92:	mov    r14d,0x4
  429b98:	jmp    0x429b20
  429b9a:	nop    WORD PTR [rax+rax*1+0x0]
  429ba0:	mov    eax,DWORD PTR [rsp+0x88]
  429ba7:	mov    rdx,r13
  429baa:	add    r13,0x8
  429bae:	or     eax,0x20
  429bb1:	test   al,0x4
  429bb3:	mov    DWORD PTR [rsp+0x88],eax
  429bba:	je     0x429dd9
  429bc0:	mov    rax,QWORD PTR [rdx]
  429bc3:	mov    rcx,QWORD PTR [rsp+0x20]
  429bc8:	mov    rdx,r12
  429bcb:	fld    TBYTE PTR [rax]
  429bcd:	fstp   TBYTE PTR [rsp+0x50]
  429bd1:	call   0x428880
  429bd6:	jmp    0x429a20
  429bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  429be0:	mov    eax,DWORD PTR [rsp+0x88]
  429be7:	mov    rdx,r13
  429bea:	add    r13,0x8
  429bee:	or     eax,0x20
  429bf1:	test   al,0x4
  429bf3:	mov    DWORD PTR [rsp+0x88],eax
  429bfa:	je     0x429e07
  429c00:	mov    rax,QWORD PTR [rdx]
  429c03:	mov    rcx,QWORD PTR [rsp+0x20]
  429c08:	mov    rdx,r12
  429c0b:	fld    TBYTE PTR [rax]
  429c0d:	fstp   TBYTE PTR [rsp+0x50]
  429c11:	call   0x428d10
  429c16:	jmp    0x429a20
  429c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  429c20:	cmp    r10d,0x3
  429c24:	je     0x42a0fc
  429c2a:	cmp    r10d,0x2
  429c2e:	je     0x42a199
  429c34:	mov    eax,DWORD PTR [r13+0x0]
  429c38:	cmp    r10d,0x1
  429c3c:	lea    rdx,[r13+0x8]
  429c40:	mov    QWORD PTR [rsp+0x70],rax
  429c45:	je     0x42a1db
  429c4b:	cmp    r10d,0x5
  429c4f:	mov    r13,rdx
  429c52:	je     0x42a230
  429c58:	cmp    ecx,0x75
  429c5b:	je     0x42a13c
  429c61:	mov    r8,r12
  429c64:	mov    rdx,rax
  429c67:	call   0x428f60
  429c6c:	jmp    0x429a20
  429c71:	sub    r10d,0x2
  429c75:	mov    rax,r13
  429c78:	mov    DWORD PTR [rsp+0x90],0xffffffff
  429c83:	cmp    r10d,0x1
  429c87:	jbe    0x429e2b
  429c8d:	mov    eax,DWORD PTR [rax]
  429c8f:	mov    rcx,QWORD PTR [rsp+0x28]
  429c94:	mov    r8,r12
  429c97:	mov    edx,0x1
  429c9c:	add    r13,0x8
  429ca0:	mov    BYTE PTR [rsp+0x70],al
  429ca4:	call   0x428280
  429ca9:	jmp    0x429a20
  429cae:	xchg   ax,ax
  429cb0:	mov    eax,DWORD PTR [rsp+0x88]
  429cb7:	mov    rdx,r13
  429cba:	add    r13,0x8
  429cbe:	or     eax,0x20
  429cc1:	test   al,0x4
  429cc3:	mov    DWORD PTR [rsp+0x88],eax
  429cca:	je     0x429e68
  429cd0:	mov    rax,QWORD PTR [rdx]
  429cd3:	mov    rcx,QWORD PTR [rsp+0x20]
  429cd8:	mov    rdx,r12
  429cdb:	fld    TBYTE PTR [rax]
  429cdd:	fstp   TBYTE PTR [rsp+0x50]
  429ce1:	call   0x429320
  429ce6:	jmp    0x429a20
  429ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  429cf0:	or     DWORD PTR [rsp+0x88],0x80
  429cfb:	cmp    r10d,0x3
  429cff:	je     0x42a0d8
  429d05:	cmp    r10d,0x2
  429d09:	je     0x42a187
  429d0f:	movsxd rcx,DWORD PTR [r13+0x0]
  429d13:	cmp    r10d,0x1
  429d17:	lea    rax,[r13+0x8]
  429d1b:	mov    QWORD PTR [rsp+0x70],rcx
  429d20:	je     0x42a1ed
  429d26:	cmp    r10d,0x5
  429d2a:	mov    r13,rax
  429d2d:	je     0x42a23f
  429d33:	mov    rax,rcx
  429d36:	mov    rdx,r12
  429d39:	sar    rax,0x3f
  429d3d:	mov    QWORD PTR [rsp+0x78],rax
  429d42:	call   0x428970
  429d47:	jmp    0x429a20
  429d4c:	nop    DWORD PTR [rax+0x0]
  429d50:	or     DWORD PTR [rsp+0x88],0x4
  429d58:	movzx  eax,BYTE PTR [rdi+0x1]
  429d5c:	mov    r14d,0x4
  429d62:	jmp    0x429b20
  429d67:	nop    WORD PTR [rax+rax*1+0x0]
  429d70:	movzx  eax,BYTE PTR [rdi+0x1]
  429d74:	cmp    al,0x36
  429d76:	je     0x42a0b8
  429d7c:	cmp    al,0x33
  429d7e:	je     0x42a14c
  429d84:	mov    r10d,0x3
  429d8a:	mov    r14d,0x4
  429d90:	jmp    0x429b20
  429d95:	mov    eax,DWORD PTR [rsp+0x88]
  429d9c:	mov    rdx,r13
  429d9f:	add    r13,0x8
  429da3:	test   al,0x4
  429da5:	jne    0x429b53
  429dab:	mov    rcx,QWORD PTR [rsp+0x20]
  429db0:	fld    QWORD PTR [rdx]
  429db2:	mov    rdx,r12
  429db5:	fstp   TBYTE PTR [rsp+0x50]
  429db9:	call   0x428dc0
  429dbe:	jmp    0x429a20
  429dc3:	mov    eax,DWORD PTR [rsp+0x88]
  429dca:	mov    rdx,r13
  429dcd:	add    r13,0x8
  429dd1:	test   al,0x4
  429dd3:	jne    0x429bc0
  429dd9:	mov    rcx,QWORD PTR [rsp+0x20]
  429dde:	fld    QWORD PTR [rdx]
  429de0:	mov    rdx,r12
  429de3:	fstp   TBYTE PTR [rsp+0x50]
  429de7:	call   0x428880
  429dec:	jmp    0x429a20
  429df1:	mov    eax,DWORD PTR [rsp+0x88]
  429df8:	mov    rdx,r13
  429dfb:	add    r13,0x8
  429dff:	test   al,0x4
  429e01:	jne    0x429c00
  429e07:	mov    rcx,QWORD PTR [rsp+0x20]
  429e0c:	fld    QWORD PTR [rdx]
  429e0e:	mov    rdx,r12
  429e11:	fstp   TBYTE PTR [rsp+0x50]
  429e15:	call   0x428d10
  429e1a:	jmp    0x429a20
  429e1f:	nop
  429e20:	mov    DWORD PTR [rsp+0x90],0xffffffff
  429e2b:	mov    eax,DWORD PTR [r13+0x0]
  429e2f:	mov    rcx,QWORD PTR [rsp+0x28]
  429e34:	lea    rsi,[r13+0x8]
  429e38:	mov    r8,r12
  429e3b:	mov    edx,0x1
  429e40:	mov    r13,rsi
  429e43:	mov    WORD PTR [rsp+0x70],ax
  429e48:	call   0x428160
  429e4d:	jmp    0x429a20
  429e52:	mov    eax,DWORD PTR [rsp+0x88]
  429e59:	mov    rdx,r13
  429e5c:	add    r13,0x8
  429e60:	test   al,0x4
  429e62:	jne    0x429cd0
  429e68:	mov    rcx,QWORD PTR [rsp+0x20]
  429e6d:	fld    QWORD PTR [rdx]
  429e6f:	mov    rdx,r12
  429e72:	fstp   TBYTE PTR [rsp+0x50]
  429e76:	call   0x429320
  429e7b:	jmp    0x429a20
  429e80:	test   r14d,r14d
  429e83:	jne    0x42a020
  429e89:	or     DWORD PTR [rsp+0x88],0x200
  429e94:	movzx  eax,BYTE PTR [rdi+0x1]
  429e98:	jmp    0x429b20
  429e9d:	nop    DWORD PTR [rax]
  429ea0:	cmp    r14d,0x1
  429ea4:	jbe    0x42a10e
  429eaa:	movzx  eax,BYTE PTR [rdi+0x1]
  429eae:	mov    r14d,0x4
  429eb4:	jmp    0x429b20
  429eb9:	nop    DWORD PTR [rax+0x0]
  429ec0:	test   r14d,r14d
  429ec3:	jne    0x429f49
  429ec9:	or     DWORD PTR [rsp+0x88],0x400
  429ed4:	movzx  eax,BYTE PTR [rdi+0x1]
  429ed8:	jmp    0x429b20
  429edd:	nop    DWORD PTR [rax]
  429ee0:	test   r14d,r14d
  429ee3:	jne    0x429f49
  429ee5:	or     DWORD PTR [rsp+0x88],0x100
  429ef0:	movzx  eax,BYTE PTR [rdi+0x1]
  429ef4:	jmp    0x429b20
  429ef9:	nop    DWORD PTR [rax+0x0]
  429f00:	test   r14d,r14d
  429f03:	jne    0x429f49
  429f05:	or     DWORD PTR [rsp+0x88],0x800
  429f10:	movzx  eax,BYTE PTR [rdi+0x1]
  429f14:	jmp    0x429b20
  429f19:	nop    DWORD PTR [rax+0x0]
  429f20:	test   r14d,r14d
  429f23:	jne    0x429f49
  429f25:	or     DWORD PTR [rsp+0x88],0x40
  429f2d:	movzx  eax,BYTE PTR [rdi+0x1]
  429f31:	jmp    0x429b20
  429f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f40:	test   r14d,r14d
  429f43:	je     0x42a052
  429f49:	movzx  eax,BYTE PTR [rdi+0x1]
  429f4d:	jmp    0x429b20
  429f52:	mov    rdx,r12
  429f55:	call   0x428100
  429f5a:	jmp    0x429a20
  429f5f:	nop
  429f60:	test   r11,r11
  429f63:	je     0x429eaa
  429f69:	test   r14d,0xfffffffd
  429f70:	jne    0x42a040
  429f76:	mov    eax,DWORD PTR [r13+0x0]
  429f7a:	lea    rdx,[r13+0x8]
  429f7e:	test   eax,eax
  429f80:	mov    DWORD PTR [r11],eax
  429f83:	js     0x42a200
  429f89:	movzx  eax,BYTE PTR [rdi+0x1]
  429f8d:	mov    r13,rdx
  429f90:	xor    r11d,r11d
  429f93:	jmp    0x429b20
  429f98:	nop    DWORD PTR [rax+rax*1+0x0]
  429fa0:	sub    eax,0x30
  429fa3:	cmp    al,0x9
  429fa5:	ja     0x42a1c6
  429fab:	cmp    r14d,0x3
  429faf:	ja     0x42a1c6
  429fb5:	test   r14d,r14d
  429fb8:	jne    0x42a02a
  429fba:	mov    r14d,0x1
  429fc0:	test   r11,r11
  429fc3:	je     0x429f49
  429fc5:	mov    eax,DWORD PTR [r11]
  429fc8:	test   eax,eax
  429fca:	js     0x42a12d
  429fd0:	lea    eax,[rax+rax*4]
  429fd3:	lea    eax,[rcx+rax*2-0x30]
  429fd7:	mov    DWORD PTR [r11],eax
  429fda:	movzx  eax,BYTE PTR [rdi+0x1]
  429fde:	jmp    0x429b20
  429fe3:	mov    rsi,QWORD PTR [r13+0x0]
  429fe7:	lea    rax,[rip+0x12e9a]        # 0x43ce88
  429fee:	lea    rdi,[r13+0x8]
  429ff2:	mov    r13,rdi
  429ff5:	test   rsi,rsi
  429ff8:	cmove  rsi,rax
  429ffc:	mov    rcx,rsi
  429fff:	call   0x42fa80
  42a004:	mov    r8,r12
  42a007:	mov    edx,eax
  42a009:	mov    rcx,rsi
  42a00c:	call   0x428160
  42a011:	jmp    0x429a20
  42a016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a020:	cmp    r14d,0x3
  42a024:	ja     0x42a1c6
  42a02a:	cmp    r14d,0x2
  42a02e:	mov    eax,0x3
  42a033:	cmove  r14d,eax
  42a037:	jmp    0x429fc0
  42a039:	nop    DWORD PTR [rax+0x0]
  42a040:	movzx  eax,BYTE PTR [rdi+0x1]
  42a044:	xor    r11d,r11d
  42a047:	mov    r14d,0x4
  42a04d:	jmp    0x429b20
  42a052:	mov    DWORD PTR [rsp+0x4c],r10d
  42a057:	mov    QWORD PTR [rsp+0x40],r11
  42a05c:	or     DWORD PTR [rsp+0x88],0x1000
  42a067:	mov    DWORD PTR [rsp+0x70],0x0
  42a06f:	call   0x42fb58
  42a074:	mov    r9,QWORD PTR [rsp+0x28]
  42a079:	mov    rdx,QWORD PTR [rax+0x8]
  42a07d:	mov    r8d,0x10
  42a083:	mov    rcx,QWORD PTR [rsp+0x38]
  42a088:	call   0x427980
  42a08d:	test   eax,eax
  42a08f:	mov    r11,QWORD PTR [rsp+0x40]
  42a094:	mov    r10d,DWORD PTR [rsp+0x4c]
  42a099:	jle    0x42a0a8
  42a09b:	movzx  edx,WORD PTR [rsp+0x6e]
  42a0a0:	mov    WORD PTR [rsp+0xa0],dx
  42a0a8:	mov    DWORD PTR [rsp+0x9c],eax
  42a0af:	movzx  eax,BYTE PTR [rdi+0x1]
  42a0b3:	jmp    0x429b20
  42a0b8:	cmp    BYTE PTR [rdi+0x2],0x34
  42a0bc:	je     0x42a24f
  42a0c2:	mov    eax,0x36
  42a0c7:	mov    r10d,0x3
  42a0cd:	mov    r14d,0x4
  42a0d3:	jmp    0x429b20
  42a0d8:	mov    rcx,QWORD PTR [r13+0x0]
  42a0dc:	add    r13,0x8
  42a0e0:	mov    QWORD PTR [rsp+0x70],rcx
  42a0e5:	jmp    0x429d33
  42a0ea:	mov    edx,DWORD PTR [rsp+0xa4]
  42a0f1:	add    r13,0x8
  42a0f5:	mov    BYTE PTR [rax],dl
  42a0f7:	jmp    0x429a20
  42a0fc:	mov    rax,QWORD PTR [r13+0x0]
  42a100:	add    r13,0x8
  42a104:	mov    QWORD PTR [rsp+0x70],rax
  42a109:	jmp    0x429c58
  42a10e:	mov    DWORD PTR [rsp+0x90],0x0
  42a119:	movzx  eax,BYTE PTR [rdi+0x1]
  42a11d:	lea    r11,[r12+0x10]
  42a122:	mov    r14d,0x2
  42a128:	jmp    0x429b20
  42a12d:	sub    ecx,0x30
  42a130:	movzx  eax,BYTE PTR [rdi+0x1]
  42a134:	mov    DWORD PTR [r11],ecx
  42a137:	jmp    0x429b20
  42a13c:	mov    rdx,r12
  42a13f:	mov    rcx,rax
  42a142:	call   0x428970
  42a147:	jmp    0x429a20
  42a14c:	cmp    BYTE PTR [rdi+0x2],0x32
  42a150:	mov    eax,0x33
  42a155:	jne    0x429d84
  42a15b:	lea    rbx,[rdi+0x3]
  42a15f:	movzx  eax,BYTE PTR [rdi+0x3]
  42a163:	mov    r10d,0x2
  42a169:	mov    r14d,0x4
  42a16f:	jmp    0x429b20
  42a174:	mov    edx,DWORD PTR [rsp+0xa4]
  42a17b:	add    r13,0x8
  42a17f:	mov    WORD PTR [rax],dx
  42a182:	jmp    0x429a20
  42a187:	movsxd rcx,DWORD PTR [r13+0x0]
  42a18b:	add    r13,0x8
  42a18f:	mov    QWORD PTR [rsp+0x70],rcx
  42a194:	jmp    0x429d33
  42a199:	mov    eax,DWORD PTR [r13+0x0]
  42a19d:	add    r13,0x8
  42a1a1:	mov    QWORD PTR [rsp+0x70],rax
  42a1a6:	jmp    0x429c58
  42a1ab:	mov    eax,DWORD PTR [rsp+0x48]
  42a1af:	mov    DWORD PTR [rsp+0x90],0x10
  42a1ba:	mov    DWORD PTR [rsp+0x88],eax
  42a1c1:	jmp    0x429a43
  42a1c6:	mov    rdx,r12
  42a1c9:	mov    ecx,0x25
  42a1ce:	mov    rbx,rsi
  42a1d1:	call   0x428100
  42a1d6:	jmp    0x429a20
  42a1db:	movzx  eax,WORD PTR [rsp+0x70]
  42a1e0:	mov    r13,rdx
  42a1e3:	mov    QWORD PTR [rsp+0x70],rax
  42a1e8:	jmp    0x429c58
  42a1ed:	movsx  rcx,WORD PTR [rsp+0x70]
  42a1f3:	mov    r13,rax
  42a1f6:	mov    QWORD PTR [rsp+0x70],rcx
  42a1fb:	jmp    0x429d33
  42a200:	test   r14d,r14d
  42a203:	jne    0x42a268
  42a205:	or     DWORD PTR [rsp+0x88],0x400
  42a210:	neg    DWORD PTR [rsp+0x8c]
  42a217:	jmp    0x429f89
  42a21c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  42a224:	add    r13,0x8
  42a228:	mov    QWORD PTR [rax],rdx
  42a22b:	jmp    0x429a20
  42a230:	movzx  eax,BYTE PTR [rsp+0x70]
  42a235:	mov    QWORD PTR [rsp+0x70],rax
  42a23a:	jmp    0x429c58
  42a23f:	movsx  rcx,BYTE PTR [rsp+0x70]
  42a245:	mov    QWORD PTR [rsp+0x70],rcx
  42a24a:	jmp    0x429d33
  42a24f:	lea    rbx,[rdi+0x3]
  42a253:	movzx  eax,BYTE PTR [rdi+0x3]
  42a257:	mov    r10d,0x3
  42a25d:	mov    r14d,0x4
  42a263:	jmp    0x429b20
  42a268:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42a273:	movzx  eax,BYTE PTR [rdi+0x1]
  42a277:	mov    r13,rdx
  42a27a:	xor    r11d,r11d
  42a27d:	jmp    0x429b20
  42a282:	nop
  42a283:	nop
  42a284:	nop
  42a285:	nop
  42a286:	nop
  42a287:	nop
  42a288:	nop
  42a289:	nop
  42a28a:	nop
  42a28b:	nop
  42a28c:	nop
  42a28d:	nop
  42a28e:	nop
  42a28f:	nop
  42a290:	add    BYTE PTR [rax],al
  42a292:	add    BYTE PTR [rax],al
  42a294:	add    BYTE PTR [rax],al
  42a296:	lock (bad) 
  42a298:	pop    rdx
  42a29a:	cmc    
  42a29b:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  42a29f:	(bad)  
  42a2a0:	fldln2 
  42a2a2:	fld    TBYTE PTR [rdx]
  42a2a4:	fld    st(0)
  42a2a6:	fsub   QWORD PTR [rip+0xffffffffffffffe4]        # 0x42a290
  42a2ac:	fld    st(0)
  42a2ae:	fabs   
  42a2b0:	fcomp  QWORD PTR [rip+0xffffffffffffffe2]        # 0x42a298
  42a2b6:	fnstsw ax
  42a2b8:	and    ah,0x45
  42a2bb:	je     0x42a2cf
  42a2bd:	fstp   st(1)
  42a2bf:	fyl2xp1 
  42a2c1:	mov    rax,rcx
  42a2c4:	mov    QWORD PTR [rcx+0x8],0x0
  42a2cc:	fstp   TBYTE PTR [rcx]
  42a2ce:	ret    
  42a2cf:	fstp   st(0)
  42a2d1:	fyl2x  
  42a2d3:	mov    rax,rcx
  42a2d6:	mov    QWORD PTR [rcx+0x8],0x0
  42a2de:	fstp   TBYTE PTR [rcx]
  42a2e0:	ret    
  42a2e1:	nop
  42a2e2:	nop
  42a2e3:	nop
  42a2e4:	nop
  42a2e5:	nop
  42a2e6:	nop
  42a2e7:	nop
  42a2e8:	nop
  42a2e9:	nop
  42a2ea:	nop
  42a2eb:	nop
  42a2ec:	nop
  42a2ed:	nop
  42a2ee:	nop
  42a2ef:	nop
  42a2f0:	push   rbx
  42a2f1:	sub    rsp,0x20
  42a2f5:	xor    ebx,ebx
  42a2f7:	cmp    ecx,0x1b
  42a2fa:	jle    0x42a30d
  42a2fc:	mov    eax,0x4
  42a301:	add    eax,eax
  42a303:	add    ebx,0x1
  42a306:	lea    edx,[rax+0x17]
  42a309:	cmp    edx,ecx
  42a30b:	jl     0x42a301
  42a30d:	mov    ecx,ebx
  42a30f:	call   0x42bbe0
  42a314:	mov    DWORD PTR [rax],ebx
  42a316:	add    rax,0x4
  42a31a:	add    rsp,0x20
  42a31e:	pop    rbx
  42a31f:	ret    
  42a320:	push   rsi
  42a321:	push   rbx
  42a322:	sub    rsp,0x28
  42a326:	mov    rbx,rcx
  42a329:	mov    ecx,r8d
  42a32c:	mov    rsi,rdx
  42a32f:	call   0x42a2f0
  42a334:	movzx  ecx,BYTE PTR [rbx]
  42a337:	lea    r8,[rbx+0x1]
  42a33b:	test   cl,cl
  42a33d:	mov    BYTE PTR [rax],cl
  42a33f:	mov    rcx,rax
  42a342:	je     0x42a359
  42a344:	add    r8,0x1
  42a348:	movzx  r9d,BYTE PTR [r8-0x1]
  42a34d:	add    rcx,0x1
  42a351:	test   r9b,r9b
  42a354:	mov    BYTE PTR [rcx],r9b
  42a357:	jne    0x42a344
  42a359:	test   rsi,rsi
  42a35c:	je     0x42a361
  42a35e:	mov    QWORD PTR [rsi],rcx
  42a361:	add    rsp,0x28
  42a365:	pop    rbx
  42a366:	pop    rsi
  42a367:	ret    
  42a368:	nop    DWORD PTR [rax+rax*1+0x0]
  42a370:	mov    edx,0x1
  42a375:	mov    rax,rcx
  42a378:	mov    ecx,DWORD PTR [rcx-0x4]
  42a37b:	shl    edx,cl
  42a37d:	mov    DWORD PTR [rax+0x4],ecx
  42a380:	lea    rcx,[rax-0x4]
  42a384:	mov    DWORD PTR [rax+0x8],edx
  42a387:	jmp    0x42bcf0
  42a38c:	nop    DWORD PTR [rax+0x0]
  42a390:	push   r15
  42a392:	push   r14
  42a394:	push   r13
  42a396:	push   r12
  42a398:	push   rbp
  42a399:	push   rdi
  42a39a:	push   rsi
  42a39b:	push   rbx
  42a39c:	sub    rsp,0x38
  42a3a0:	xor    eax,eax
  42a3a2:	mov    edi,DWORD PTR [rdx+0x14]
  42a3a5:	cmp    edi,DWORD PTR [rcx+0x14]
  42a3a8:	mov    r15,rdx
  42a3ab:	jg     0x42a4f9
  42a3b1:	sub    edi,0x1
  42a3b4:	lea    rbx,[rdx+0x18]
  42a3b8:	lea    r12,[rcx+0x18]
  42a3bc:	movsxd r13,edi
  42a3bf:	xor    edx,edx
  42a3c1:	shl    r13,0x2
  42a3c5:	lea    rbp,[rbx+r13*1]
  42a3c9:	add    r13,r12
  42a3cc:	mov    eax,DWORD PTR [rbp+0x0]
  42a3cf:	lea    r8d,[rax+0x1]
  42a3d3:	mov    eax,DWORD PTR [r13+0x0]
  42a3d7:	div    r8d
  42a3da:	test   eax,eax
  42a3dc:	mov    r14d,eax
  42a3df:	mov    DWORD PTR [rsp+0x2c],eax
  42a3e3:	je     0x42a477
  42a3e9:	mov    edx,eax
  42a3eb:	mov    rsi,rbx
  42a3ee:	mov    r11,r12
  42a3f1:	xor    eax,eax
  42a3f3:	xor    r10d,r10d
  42a3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a400:	add    rsi,0x4
  42a404:	mov    r8d,DWORD PTR [rsi-0x4]
  42a408:	mov    r9d,DWORD PTR [r11]
  42a40b:	add    r11,0x4
  42a40f:	imul   r8,rdx
  42a413:	add    r8,rax
  42a416:	mov    rax,r8
  42a419:	mov    r8d,r8d
  42a41c:	sub    r9,r8
  42a41f:	shr    rax,0x20
  42a423:	sub    r9,r10
  42a426:	mov    r10,r9
  42a429:	mov    DWORD PTR [r11-0x4],r9d
  42a42d:	shr    r10,0x20
  42a431:	and    r10d,0x1
  42a435:	cmp    rbp,rsi
  42a438:	jae    0x42a400
  42a43a:	mov    r11d,DWORD PTR [r13+0x0]
  42a43e:	test   r11d,r11d
  42a441:	jne    0x42a477
  42a443:	lea    rax,[r13-0x4]
  42a447:	cmp    r12,rax
  42a44a:	jae    0x42a474
  42a44c:	mov    r10d,DWORD PTR [r13-0x4]
  42a450:	test   r10d,r10d
  42a453:	je     0x42a468
  42a455:	jmp    0x42a474
  42a457:	nop    WORD PTR [rax+rax*1+0x0]
  42a460:	mov    r9d,DWORD PTR [rax]
  42a463:	test   r9d,r9d
  42a466:	jne    0x42a474
  42a468:	sub    rax,0x4
  42a46c:	sub    edi,0x1
  42a46f:	cmp    r12,rax
  42a472:	jb     0x42a460
  42a474:	mov    DWORD PTR [rcx+0x14],edi
  42a477:	mov    rdx,r15
  42a47a:	mov    rsi,rcx
  42a47d:	call   0x42c210
  42a482:	test   eax,eax
  42a484:	js     0x42a4f5
  42a486:	lea    eax,[r14+0x1]
  42a48a:	mov    rcx,r12
  42a48d:	xor    edx,edx
  42a48f:	mov    DWORD PTR [rsp+0x2c],eax
  42a493:	add    rbx,0x4
  42a497:	mov    eax,DWORD PTR [rcx]
  42a499:	mov    r8d,DWORD PTR [rbx-0x4]
  42a49d:	add    rcx,0x4
  42a4a1:	sub    rax,r8
  42a4a4:	sub    rax,rdx
  42a4a7:	mov    rdx,rax
  42a4aa:	mov    DWORD PTR [rcx-0x4],eax
  42a4ad:	shr    rdx,0x20
  42a4b1:	and    edx,0x1
  42a4b4:	cmp    rbp,rbx
  42a4b7:	jae    0x42a493
  42a4b9:	movsxd rax,edi
  42a4bc:	lea    rdx,[r12+rax*4]
  42a4c0:	mov    r8d,DWORD PTR [rdx]
  42a4c3:	test   r8d,r8d
  42a4c6:	jne    0x42a4f5
  42a4c8:	lea    rax,[rdx-0x4]
  42a4cc:	cmp    r12,rax
  42a4cf:	jae    0x42a4f2
  42a4d1:	mov    ecx,DWORD PTR [rdx-0x4]
  42a4d4:	test   ecx,ecx
  42a4d6:	je     0x42a4e6
  42a4d8:	jmp    0x42a4f2
  42a4da:	nop    WORD PTR [rax+rax*1+0x0]
  42a4e0:	mov    edx,DWORD PTR [rax]
  42a4e2:	test   edx,edx
  42a4e4:	jne    0x42a4f2
  42a4e6:	sub    rax,0x4
  42a4ea:	sub    edi,0x1
  42a4ed:	cmp    r12,rax
  42a4f0:	jb     0x42a4e0
  42a4f2:	mov    DWORD PTR [rsi+0x14],edi
  42a4f5:	mov    eax,DWORD PTR [rsp+0x2c]
  42a4f9:	add    rsp,0x38
  42a4fd:	pop    rbx
  42a4fe:	pop    rsi
  42a4ff:	pop    rdi
  42a500:	pop    rbp
  42a501:	pop    r12
  42a503:	pop    r13
  42a505:	pop    r14
  42a507:	pop    r15
  42a509:	ret    
  42a50a:	nop
  42a50b:	nop
  42a50c:	nop
  42a50d:	nop
  42a50e:	nop
  42a50f:	nop
  42a510:	push   r15
  42a512:	push   r14
  42a514:	push   r13
  42a516:	push   r12
  42a518:	push   rbp
  42a519:	push   rdi
  42a51a:	push   rsi
  42a51b:	push   rbx
  42a51c:	sub    rsp,0xb8
  42a523:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  42a52b:	mov    r12d,DWORD PTR [r9]
  42a52e:	mov    eax,r12d
  42a531:	and    eax,0xffffffcf
  42a534:	mov    DWORD PTR [r9],eax
  42a537:	mov    eax,r12d
  42a53a:	and    eax,0x7
  42a53d:	cmp    eax,0x4
  42a540:	ja     0x42b973
  42a546:	mov    r13d,edx
  42a549:	lea    rdx,[rip+0x12ae0]        # 0x43d030
  42a550:	mov    QWORD PTR [rsp+0x28],r9
  42a555:	mov    r15,r8
  42a558:	mov    rbp,rcx
  42a55b:	movsxd rax,DWORD PTR [rdx+rax*4]
  42a55f:	add    rdx,rax
  42a562:	jmp    rdx
  42a564:	mov    edi,DWORD PTR [rcx]
  42a566:	xor    ecx,ecx
  42a568:	cmp    edi,0x20
  42a56b:	jle    0x42a57b
  42a56d:	mov    eax,0x20
  42a572:	add    eax,eax
  42a574:	add    ecx,0x1
  42a577:	cmp    edi,eax
  42a579:	jg     0x42a572
  42a57b:	call   0x42bbe0
  42a580:	mov    rsi,rax
  42a583:	lea    eax,[rdi-0x1]
  42a586:	lea    r9,[rsi+0x18]
  42a58a:	sar    eax,0x5
  42a58d:	cdqe   
  42a58f:	mov    rdx,r9
  42a592:	lea    r11,[r15+rax*4]
  42a596:	mov    rax,r15
  42a599:	nop    DWORD PTR [rax+0x0]
  42a5a0:	mov    ecx,DWORD PTR [rax]
  42a5a2:	add    rax,0x4
  42a5a6:	add    rdx,0x4
  42a5aa:	cmp    r11,rax
  42a5ad:	mov    DWORD PTR [rdx-0x4],ecx
  42a5b0:	jae    0x42a5a0
  42a5b2:	sub    rdx,r9
  42a5b5:	sar    rdx,0x2
  42a5b9:	mov    r14d,edx
  42a5bc:	movsxd rdx,edx
  42a5bf:	lea    rax,[r9+rdx*4-0x4]
  42a5c4:	jmp    0x42a5df
  42a5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a5d0:	sub    rax,0x4
  42a5d4:	test   edx,edx
  42a5d6:	mov    r14d,edx
  42a5d9:	je     0x42aae0
  42a5df:	mov    r8d,DWORD PTR [rax]
  42a5e2:	lea    edx,[r14-0x1]
  42a5e6:	test   r8d,r8d
  42a5e9:	je     0x42a5d0
  42a5eb:	movsxd rdx,edx
  42a5ee:	mov    DWORD PTR [rsi+0x14],r14d
  42a5f2:	shl    r14d,0x5
  42a5f6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  42a5fb:	xor    eax,0x1f
  42a5fe:	sub    r14d,eax
  42a601:	mov    rcx,rsi
  42a604:	call   0x42ba80
  42a609:	test   eax,eax
  42a60b:	mov    DWORD PTR [rsp+0x9c],eax
  42a612:	mov    r11d,r13d
  42a615:	jne    0x42aaf0
  42a61b:	mov    ecx,DWORD PTR [rsi+0x14]
  42a61e:	test   ecx,ecx
  42a620:	jne    0x42a6d0
  42a626:	mov    rcx,rsi
  42a629:	call   0x42bcf0
  42a62e:	mov    rax,QWORD PTR [rsp+0x130]
  42a636:	mov    rdx,QWORD PTR [rsp+0x138]
  42a63e:	lea    rcx,[rip+0x129e8]        # 0x43d02d
  42a645:	mov    r8d,0x1
  42a64b:	mov    DWORD PTR [rax],0x1
  42a651:	call   0x42a320
  42a656:	nop
  42a657:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  42a65f:	add    rsp,0xb8
  42a666:	pop    rbx
  42a667:	pop    rsi
  42a668:	pop    rdi
  42a669:	pop    rbp
  42a66a:	pop    r12
  42a66c:	pop    r13
  42a66e:	pop    r14
  42a670:	pop    r15
  42a672:	ret    
  42a673:	mov    rax,QWORD PTR [rsp+0x130]
  42a67b:	mov    rdx,QWORD PTR [rsp+0x138]
  42a683:	lea    rcx,[rip+0x1299f]        # 0x43d029
  42a68a:	mov    r8d,0x3
  42a690:	mov    DWORD PTR [rax],0xffff8000
  42a696:	call   0x42a320
  42a69b:	jmp    0x42a657
  42a69d:	nop    DWORD PTR [rax]
  42a6a0:	mov    rax,QWORD PTR [rsp+0x130]
  42a6a8:	mov    rdx,QWORD PTR [rsp+0x138]
  42a6b0:	lea    rcx,[rip+0x12969]        # 0x43d020
  42a6b7:	mov    r8d,0x8
  42a6bd:	mov    DWORD PTR [rax],0xffff8000
  42a6c3:	call   0x42a320
  42a6c8:	jmp    0x42a657
  42a6ca:	nop    WORD PTR [rax+rax*1+0x0]
  42a6d0:	lea    rdx,[rsp+0x9c]
  42a6d8:	mov    rcx,rsi
  42a6db:	mov    DWORD PTR [rsp+0x30],r11d
  42a6e0:	call   0x42c3a0
  42a6e5:	movq   rdx,xmm0
  42a6ea:	movq   r9,xmm0
  42a6ef:	mov    r11d,DWORD PTR [rsp+0x30]
  42a6f4:	pxor   xmm0,xmm0
  42a6f8:	shr    rdx,0x20
  42a6fc:	mov    r9d,r9d
  42a6ff:	and    edx,0xfffff
  42a705:	lea    ecx,[r11+r14*1-0x1]
  42a70a:	or     edx,0x3ff00000
  42a710:	mov    rax,rdx
  42a713:	cvtsi2sd xmm0,ecx
  42a717:	shl    rax,0x20
  42a71b:	mov    ebx,ecx
  42a71d:	or     r9,rax
  42a720:	sar    ebx,0x1f
  42a723:	mov    QWORD PTR [rsp+0x30],r9
  42a728:	mov    eax,ebx
  42a72a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  42a730:	xor    eax,ecx
  42a732:	sub    eax,ebx
  42a734:	subsd  xmm1,QWORD PTR [rip+0x1290c]        # 0x43d048
  42a73c:	sub    eax,0x435
  42a741:	test   eax,eax
  42a743:	mulsd  xmm0,QWORD PTR [rip+0x12915]        # 0x43d060
  42a74b:	mulsd  xmm1,QWORD PTR [rip+0x128fd]        # 0x43d050
  42a753:	addsd  xmm1,QWORD PTR [rip+0x128fd]        # 0x43d058
  42a75b:	addsd  xmm1,xmm0
  42a75f:	jle    0x42a775
  42a761:	pxor   xmm0,xmm0
  42a765:	cvtsi2sd xmm0,eax
  42a769:	mulsd  xmm0,QWORD PTR [rip+0x128f7]        # 0x43d068
  42a771:	addsd  xmm1,xmm0
  42a775:	cvttsd2si eax,xmm1
  42a779:	pxor   xmm6,xmm6
  42a77d:	ucomisd xmm6,xmm1
  42a781:	mov    DWORD PTR [rsp+0x30],eax
  42a785:	ja     0x42b013
  42a78b:	mov    eax,ecx
  42a78d:	mov    r9d,r9d
  42a790:	mov    DWORD PTR [rsp+0x6c],0x1
  42a798:	shl    eax,0x14
  42a79b:	add    eax,edx
  42a79d:	shl    rax,0x20
  42a7a1:	or     r9,rax
  42a7a4:	cmp    DWORD PTR [rsp+0x30],0x16
  42a7a9:	mov    QWORD PTR [rsp+0x80],r9
  42a7b1:	ja     0x42a7e0
  42a7b3:	movsxd rax,DWORD PTR [rsp+0x30]
  42a7b8:	mov    rdx,QWORD PTR [rip+0x12e01]        # 0x43d5c0
  42a7bf:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  42a7c4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  42a7cd:	jbe    0x42ab30
  42a7d3:	sub    DWORD PTR [rsp+0x30],0x1
  42a7d8:	mov    DWORD PTR [rsp+0x6c],0x0
  42a7e0:	mov    eax,r14d
  42a7e3:	mov    DWORD PTR [rsp+0x50],0x0
  42a7eb:	sub    eax,ecx
  42a7ed:	sub    eax,0x1
  42a7f0:	mov    DWORD PTR [rsp+0x40],eax
  42a7f4:	js     0x42b000
  42a7fa:	mov    eax,DWORD PTR [rsp+0x30]
  42a7fe:	test   eax,eax
  42a800:	js     0x42afe0
  42a806:	add    DWORD PTR [rsp+0x40],eax
  42a80a:	mov    DWORD PTR [rsp+0x88],eax
  42a811:	mov    DWORD PTR [rsp+0x58],0x0
  42a819:	cmp    DWORD PTR [rsp+0x120],0x9
  42a821:	ja     0x42ab10
  42a827:	cmp    DWORD PTR [rsp+0x120],0x5
  42a82f:	jle    0x42ab1b
  42a835:	sub    DWORD PTR [rsp+0x120],0x4
  42a83d:	xor    eax,eax
  42a83f:	cmp    DWORD PTR [rsp+0x120],0x3
  42a847:	je     0x42b1d4
  42a84d:	jle    0x42af33
  42a853:	cmp    DWORD PTR [rsp+0x120],0x4
  42a85b:	mov    DWORD PTR [rsp+0x60],0x1
  42a863:	je     0x42ab40
  42a869:	cmp    DWORD PTR [rsp+0x120],0x5
  42a871:	jne    0x42af49
  42a877:	mov    ebx,DWORD PTR [rsp+0x30]
  42a87b:	add    ebx,DWORD PTR [rsp+0x128]
  42a882:	mov    DWORD PTR [rsp+0x8c],ebx
  42a889:	add    ebx,0x1
  42a88c:	test   ebx,ebx
  42a88e:	mov    DWORD PTR [rsp+0x68],ebx
  42a892:	mov    ecx,ebx
  42a894:	jle    0x42b410
  42a89a:	cmp    ebx,0xe
  42a89d:	mov    DWORD PTR [rsp+0x9c],ebx
  42a8a4:	setbe  bl
  42a8a7:	and    ebx,eax
  42a8a9:	mov    QWORD PTR [rsp+0x78],r9
  42a8ae:	mov    DWORD PTR [rsp+0x70],r11d
  42a8b3:	call   0x42a2f0
  42a8b8:	mov    QWORD PTR [rsp+0x48],rax
  42a8bd:	mov    eax,DWORD PTR [rbp+0xc]
  42a8c0:	mov    r11d,DWORD PTR [rsp+0x70]
  42a8c5:	mov    r9,QWORD PTR [rsp+0x78]
  42a8ca:	sub    eax,0x1
  42a8cd:	mov    DWORD PTR [rsp+0x38],eax
  42a8d1:	je     0x42a8f8
  42a8d3:	mov    ecx,DWORD PTR [rsp+0x38]
  42a8d7:	mov    eax,0x2
  42a8dc:	test   ecx,ecx
  42a8de:	cmovns eax,ecx
  42a8e1:	and    r12d,0x8
  42a8e5:	mov    DWORD PTR [rsp+0x38],eax
  42a8e9:	je     0x42a8f8
  42a8eb:	mov    eax,0x3
  42a8f0:	sub    eax,DWORD PTR [rsp+0x38]
  42a8f4:	mov    DWORD PTR [rsp+0x38],eax
  42a8f8:	test   bl,bl
  42a8fa:	je     0x42abf0
  42a900:	mov    eax,DWORD PTR [rsp+0x38]
  42a904:	or     eax,DWORD PTR [rsp+0x30]
  42a908:	jne    0x42abf0
  42a90e:	mov    eax,DWORD PTR [rsp+0x6c]
  42a912:	mov    DWORD PTR [rsp+0x9c],0x0
  42a91d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  42a926:	test   eax,eax
  42a928:	je     0x42a93c
  42a92a:	movsd  xmm0,QWORD PTR [rip+0x12746]        # 0x43d078
  42a932:	ucomisd xmm0,xmm4
  42a936:	ja     0x42b76b
  42a93c:	movapd xmm0,xmm4
  42a940:	mov    r12d,DWORD PTR [rsp+0x68]
  42a945:	addsd  xmm0,xmm4
  42a949:	addsd  xmm0,QWORD PTR [rip+0x1273f]        # 0x43d090
  42a951:	movq   rdx,xmm0
  42a956:	movq   rax,xmm0
  42a95b:	shr    rdx,0x20
  42a95f:	mov    eax,eax
  42a961:	sub    edx,0x3400000
  42a967:	shl    rdx,0x20
  42a96b:	or     rax,rdx
  42a96e:	test   r12d,r12d
  42a971:	je     0x42aba7
  42a977:	mov    r9d,DWORD PTR [rsp+0x68]
  42a97c:	movapd xmm0,xmm4
  42a980:	xor    ecx,ecx
  42a982:	mov    ebx,DWORD PTR [rsp+0x60]
  42a986:	lea    edx,[r9-0x1]
  42a98a:	movsxd rdx,edx
  42a98d:	test   ebx,ebx
  42a98f:	je     0x42b4b3
  42a995:	mov    r10,QWORD PTR [rip+0x12c24]        # 0x43d5c0
  42a99c:	movsd  xmm1,QWORD PTR [rip+0x1270c]        # 0x43d0b0
  42a9a4:	mov    QWORD PTR [rsp+0x38],rax
  42a9a9:	cvttsd2si eax,xmm0
  42a9ad:	pxor   xmm2,xmm2
  42a9b1:	mov    DWORD PTR [rsp+0x9c],0x0
  42a9bc:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  42a9c2:	mov    rdx,QWORD PTR [rsp+0x48]
  42a9c7:	mov    rbx,rdx
  42a9ca:	add    rbx,0x1
  42a9ce:	cvtsi2sd xmm2,eax
  42a9d2:	add    eax,0x30
  42a9d5:	mov    BYTE PTR [rdx],al
  42a9d7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42a9dd:	subsd  xmm0,xmm2
  42a9e1:	subsd  xmm1,xmm5
  42a9e5:	ucomisd xmm1,xmm0
  42a9e9:	ja     0x42aa84
  42a9ef:	movsd  xmm5,QWORD PTR [rip+0x12681]        # 0x43d078
  42a9f7:	movapd xmm2,xmm5
  42a9fb:	subsd  xmm2,xmm0
  42a9ff:	ucomisd xmm1,xmm2
  42aa03:	ja     0x42b587
  42aa09:	mov    eax,DWORD PTR [rsp+0x9c]
  42aa10:	movsd  xmm3,QWORD PTR [rip+0x12668]        # 0x43d080
  42aa18:	add    eax,0x1
  42aa1b:	cmp    r9d,eax
  42aa1e:	mov    DWORD PTR [rsp+0x9c],eax
  42aa25:	jg     0x42aa5c
  42aa27:	jmp    0x42abde
  42aa2c:	nop    DWORD PTR [rax+0x0]
  42aa30:	movapd xmm2,xmm5
  42aa34:	subsd  xmm2,xmm0
  42aa38:	ucomisd xmm1,xmm2
  42aa3c:	ja     0x42b587
  42aa42:	mov    eax,DWORD PTR [rsp+0x9c]
  42aa49:	add    eax,0x1
  42aa4c:	cmp    r9d,eax
  42aa4f:	mov    DWORD PTR [rsp+0x9c],eax
  42aa56:	jle    0x42abde
  42aa5c:	mulsd  xmm0,xmm3
  42aa60:	add    rbx,0x1
  42aa64:	pxor   xmm2,xmm2
  42aa68:	mulsd  xmm1,xmm3
  42aa6c:	cvttsd2si eax,xmm0
  42aa70:	cvtsi2sd xmm2,eax
  42aa74:	add    eax,0x30
  42aa77:	mov    BYTE PTR [rbx-0x1],al
  42aa7a:	subsd  xmm0,xmm2
  42aa7e:	ucomisd xmm1,xmm0
  42aa82:	jbe    0x42aa30
  42aa84:	ucomisd xmm0,xmm6
  42aa88:	lea    ebp,[rcx+0x1]
  42aa8b:	jp     0x42aa93
  42aa8d:	je     0x42b3e7
  42aa93:	mov    r15d,0x10
  42aa99:	nop    DWORD PTR [rax+0x0]
  42aaa0:	mov    rcx,rsi
  42aaa3:	call   0x42bcf0
  42aaa8:	cmp    QWORD PTR [rsp+0x138],0x0
  42aab1:	mov    rax,QWORD PTR [rsp+0x130]
  42aab9:	mov    BYTE PTR [rbx],0x0
  42aabc:	mov    DWORD PTR [rax],ebp
  42aabe:	je     0x42aacb
  42aac0:	mov    rax,QWORD PTR [rsp+0x138]
  42aac8:	mov    QWORD PTR [rax],rbx
  42aacb:	mov    rax,QWORD PTR [rsp+0x28]
  42aad0:	or     DWORD PTR [rax],r15d
  42aad3:	mov    rax,QWORD PTR [rsp+0x48]
  42aad8:	jmp    0x42a657
  42aadd:	nop    DWORD PTR [rax]
  42aae0:	mov    DWORD PTR [rsi+0x14],0x0
  42aae7:	jmp    0x42a601
  42aaec:	nop    DWORD PTR [rax+0x0]
  42aaf0:	mov    edx,eax
  42aaf2:	mov    rcx,rsi
  42aaf5:	call   0x42b980
  42aafa:	mov    eax,DWORD PTR [rsp+0x9c]
  42ab01:	lea    r11d,[r13+rax*1+0x0]
  42ab06:	sub    r14d,eax
  42ab09:	jmp    0x42a61b
  42ab0e:	xchg   ax,ax
  42ab10:	mov    DWORD PTR [rsp+0x120],0x0
  42ab1b:	add    ecx,0x3fe
  42ab21:	cmp    ecx,0x7f7
  42ab27:	setbe  al
  42ab2a:	jmp    0x42a83f
  42ab2f:	nop
  42ab30:	mov    DWORD PTR [rsp+0x6c],0x0
  42ab38:	jmp    0x42a7e0
  42ab3d:	nop    DWORD PTR [rax]
  42ab40:	mov    edx,DWORD PTR [rsp+0x128]
  42ab47:	test   edx,edx
  42ab49:	jle    0x42b3fb
  42ab4f:	cmp    DWORD PTR [rsp+0x128],0xe
  42ab57:	setbe  bl
  42ab5a:	mov    ecx,DWORD PTR [rsp+0x128]
  42ab61:	and    ebx,eax
  42ab63:	mov    DWORD PTR [rsp+0x9c],ecx
  42ab6a:	mov    DWORD PTR [rsp+0x8c],ecx
  42ab71:	mov    DWORD PTR [rsp+0x68],ecx
  42ab75:	jmp    0x42a8a9
  42ab7a:	movapd xmm0,xmm4
  42ab7e:	addsd  xmm0,xmm4
  42ab82:	addsd  xmm0,QWORD PTR [rip+0x12506]        # 0x43d090
  42ab8a:	movq   rdx,xmm0
  42ab8f:	movq   rax,xmm0
  42ab94:	shr    rdx,0x20
  42ab98:	mov    eax,eax
  42ab9a:	sub    edx,0x3400000
  42aba0:	shl    rdx,0x20
  42aba4:	or     rax,rdx
  42aba7:	movapd xmm1,xmm4
  42abab:	mov    QWORD PTR [rsp+0x38],rax
  42abb0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  42abb6:	subsd  xmm1,QWORD PTR [rip+0x124da]        # 0x43d098
  42abbe:	ucomisd xmm1,xmm0
  42abc2:	ja     0x42b4a4
  42abc8:	movsd  xmm2,QWORD PTR [rip+0x124d0]        # 0x43d0a0
  42abd0:	xorpd  xmm0,xmm2
  42abd4:	ucomisd xmm0,xmm1
  42abd8:	ja     0x42afbd
  42abde:	movq   r9,xmm4
  42abe3:	mov    DWORD PTR [rsp+0x38],0x0
  42abeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42abf0:	test   r11d,r11d
  42abf3:	js     0x42ac92
  42abf9:	movsxd rax,DWORD PTR [rsp+0x30]
  42abfe:	cmp    eax,DWORD PTR [rbp+0x14]
  42ac01:	jg     0x42ac92
  42ac07:	mov    ebx,DWORD PTR [rsp+0x68]
  42ac0b:	mov    rdx,QWORD PTR [rip+0x129ae]        # 0x43d5c0
  42ac12:	test   ebx,ebx
  42ac14:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  42ac19:	jg     0x42b323
  42ac1f:	mov    eax,DWORD PTR [rsp+0x128]
  42ac26:	shr    eax,0x1f
  42ac29:	test   al,al
  42ac2b:	je     0x42b323
  42ac31:	test   ebx,ebx
  42ac33:	jne    0x42afbd
  42ac39:	mulsd  xmm2,QWORD PTR [rip+0x12457]        # 0x43d098
  42ac41:	mov    QWORD PTR [rsp+0x38],r9
  42ac46:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42ac4c:	ucomisd xmm2,xmm5
  42ac50:	jae    0x42afbd
  42ac56:	mov    ebp,DWORD PTR [rsp+0x30]
  42ac5a:	xor    r12d,r12d
  42ac5d:	xor    edi,edi
  42ac5f:	add    ebp,0x2
  42ac62:	mov    rax,QWORD PTR [rsp+0x48]
  42ac67:	mov    r15d,0x20
  42ac6d:	lea    rbx,[rax+0x1]
  42ac71:	mov    BYTE PTR [rax],0x31
  42ac74:	mov    rcx,r12
  42ac77:	call   0x42bcf0
  42ac7c:	test   rdi,rdi
  42ac7f:	je     0x42aaa0
  42ac85:	mov    rcx,rdi
  42ac88:	call   0x42bcf0
  42ac8d:	jmp    0x42aaa0
  42ac92:	mov    r9d,DWORD PTR [rsp+0x60]
  42ac97:	test   r9d,r9d
  42ac9a:	je     0x42b1a0
  42aca0:	mov    edx,DWORD PTR [rbp+0x4]
  42aca3:	sub    edi,r14d
  42aca6:	mov    ecx,r11d
  42aca9:	lea    eax,[rdi+0x1]
  42acac:	sub    ecx,edi
  42acae:	cmp    ecx,edx
  42acb0:	mov    DWORD PTR [rsp+0x9c],eax
  42acb7:	jge    0x42acec
  42acb9:	mov    ebx,DWORD PTR [rsp+0x120]
  42acc0:	lea    ecx,[rbx-0x3]
  42acc3:	and    ecx,0xfffffffd
  42acc6:	je     0x42acec
  42acc8:	mov    ebx,DWORD PTR [rsp+0x68]
  42accc:	sub    r11d,edx
  42accf:	lea    eax,[r11+0x1]
  42acd3:	test   ebx,ebx
  42acd5:	mov    DWORD PTR [rsp+0x9c],eax
  42acdc:	setg   cl
  42acdf:	cmp    ebx,eax
  42ace1:	setl   dl
  42ace4:	test   cl,dl
  42ace6:	je     0x42b42f
  42acec:	cmp    DWORD PTR [rsp+0x120],0x1
  42acf4:	jle    0x42b42f
  42acfa:	mov    ebx,DWORD PTR [rsp+0x58]
  42acfe:	mov    eax,DWORD PTR [rsp+0x68]
  42ad02:	mov    r12d,ebx
  42ad05:	sub    eax,0x1
  42ad08:	sub    r12d,eax
  42ad0b:	cmp    ebx,eax
  42ad0d:	jge    0x42ad23
  42ad0f:	mov    edx,eax
  42ad11:	sub    edx,DWORD PTR [rsp+0x58]
  42ad15:	xor    r12d,r12d
  42ad18:	add    DWORD PTR [rsp+0x88],edx
  42ad1f:	mov    DWORD PTR [rsp+0x58],eax
  42ad23:	mov    eax,DWORD PTR [rsp+0x68]
  42ad27:	test   eax,eax
  42ad29:	js     0x42b6c2
  42ad2f:	mov    ebx,DWORD PTR [rsp+0x50]
  42ad33:	mov    DWORD PTR [rsp+0x9c],eax
  42ad3a:	mov    ecx,0x1
  42ad3f:	add    DWORD PTR [rsp+0x50],eax
  42ad43:	add    DWORD PTR [rsp+0x40],eax
  42ad47:	call   0x42be20
  42ad4c:	mov    rdi,rax
  42ad4f:	mov    ecx,DWORD PTR [rsp+0x40]
  42ad53:	test   ecx,ecx
  42ad55:	mov    eax,ecx
  42ad57:	jle    0x42ad75
  42ad59:	test   ebx,ebx
  42ad5b:	jle    0x42ad75
  42ad5d:	cmp    ecx,ebx
  42ad5f:	cmovg  eax,ebx
  42ad62:	sub    DWORD PTR [rsp+0x50],eax
  42ad66:	sub    ecx,eax
  42ad68:	mov    DWORD PTR [rsp+0x9c],eax
  42ad6f:	sub    ebx,eax
  42ad71:	mov    DWORD PTR [rsp+0x40],ecx
  42ad75:	mov    r8d,DWORD PTR [rsp+0x58]
  42ad7a:	test   r8d,r8d
  42ad7d:	jle    0x42adcb
  42ad7f:	mov    ecx,DWORD PTR [rsp+0x60]
  42ad83:	test   ecx,ecx
  42ad85:	je     0x42b1c0
  42ad8b:	test   r12d,r12d
  42ad8e:	jle    0x42adbe
  42ad90:	mov    rcx,rdi
  42ad93:	mov    edx,r12d
  42ad96:	call   0x42bf80
  42ad9b:	mov    rdx,rsi
  42ad9e:	mov    rcx,rax
  42ada1:	mov    rdi,rax
  42ada4:	call   0x42be50
  42ada9:	mov    rcx,rsi
  42adac:	mov    QWORD PTR [rsp+0x70],rax
  42adb1:	call   0x42bcf0
  42adb6:	mov    rax,QWORD PTR [rsp+0x70]
  42adbb:	mov    rsi,rax
  42adbe:	mov    edx,DWORD PTR [rsp+0x58]
  42adc2:	sub    edx,r12d
  42adc5:	jne    0x42b1c4
  42adcb:	mov    ecx,0x1
  42add0:	call   0x42be20
  42add5:	mov    r12,rax
  42add8:	mov    eax,DWORD PTR [rsp+0x88]
  42addf:	test   eax,eax
  42ade1:	jle    0x42af10
  42ade7:	mov    rcx,r12
  42adea:	mov    edx,eax
  42adec:	call   0x42bf80
  42adf1:	cmp    DWORD PTR [rsp+0x120],0x1
  42adf9:	mov    r12,rax
  42adfc:	jg     0x42ae08
  42adfe:	cmp    r14d,0x1
  42ae02:	je     0x42aecc
  42ae08:	xor    ebp,ebp
  42ae0a:	mov    eax,DWORD PTR [r12+0x14]
  42ae0f:	sub    eax,0x1
  42ae12:	cdqe   
  42ae14:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42ae1a:	xor    eax,0x1f
  42ae1d:	sub    eax,DWORD PTR [rsp+0x40]
  42ae21:	mov    edx,DWORD PTR [rsp+0x50]
  42ae25:	sub    eax,0x4
  42ae28:	and    eax,0x1f
  42ae2b:	add    edx,eax
  42ae2d:	mov    r13d,eax
  42ae30:	mov    DWORD PTR [rsp+0x9c],eax
  42ae37:	test   edx,edx
  42ae39:	mov    ecx,eax
  42ae3b:	jle    0x42ae4f
  42ae3d:	mov    rcx,rsi
  42ae40:	call   0x42c0f0
  42ae45:	mov    ecx,DWORD PTR [rsp+0x9c]
  42ae4c:	mov    rsi,rax
  42ae4f:	mov    edx,DWORD PTR [rsp+0x40]
  42ae53:	add    edx,ecx
  42ae55:	test   edx,edx
  42ae57:	jle    0x42ae64
  42ae59:	mov    rcx,r12
  42ae5c:	call   0x42c0f0
  42ae61:	mov    r12,rax
  42ae64:	mov    eax,DWORD PTR [rsp+0x6c]
  42ae68:	test   eax,eax
  42ae6a:	jne    0x42b1e1
  42ae70:	mov    r14d,DWORD PTR [rsp+0x68]
  42ae75:	test   r14d,r14d
  42ae78:	jg     0x42b031
  42ae7e:	cmp    DWORD PTR [rsp+0x120],0x2
  42ae86:	jle    0x42b031
  42ae8c:	mov    r11d,DWORD PTR [rsp+0x68]
  42ae91:	test   r11d,r11d
  42ae94:	jne    0x42afc2
  42ae9a:	xor    r8d,r8d
  42ae9d:	mov    rcx,r12
  42aea0:	mov    edx,0x5
  42aea5:	call   0x42bd60
  42aeaa:	mov    rcx,rsi
  42aead:	mov    rdx,rax
  42aeb0:	mov    r12,rax
  42aeb3:	call   0x42c210
  42aeb8:	test   eax,eax
  42aeba:	jle    0x42afc2
  42aec0:	mov    ebp,DWORD PTR [rsp+0x30]
  42aec4:	add    ebp,0x2
  42aec7:	jmp    0x42ac62
  42aecc:	mov    eax,DWORD PTR [rbp+0x4]
  42aecf:	add    eax,0x1
  42aed2:	cmp    r13d,eax
  42aed5:	jle    0x42ae08
  42aedb:	add    DWORD PTR [rsp+0x50],0x1
  42aee0:	add    DWORD PTR [rsp+0x40],0x1
  42aee5:	mov    ebp,0x1
  42aeea:	nop    WORD PTR [rax+rax*1+0x0]
  42aef0:	mov    edx,DWORD PTR [rsp+0x88]
  42aef7:	mov    eax,0x1f
  42aefc:	test   edx,edx
  42aefe:	je     0x42ae1d
  42af04:	jmp    0x42ae0a
  42af09:	nop    DWORD PTR [rax+0x0]
  42af10:	cmp    DWORD PTR [rsp+0x120],0x1
  42af18:	jg     0x42af20
  42af1a:	cmp    r14d,0x1
  42af1e:	je     0x42af24
  42af20:	xor    ebp,ebp
  42af22:	jmp    0x42aef0
  42af24:	mov    eax,DWORD PTR [rbp+0x4]
  42af27:	xor    ebp,ebp
  42af29:	add    eax,0x1
  42af2c:	cmp    r13d,eax
  42af2f:	jle    0x42aef0
  42af31:	jmp    0x42aedb
  42af33:	cmp    DWORD PTR [rsp+0x120],0x2
  42af3b:	mov    DWORD PTR [rsp+0x60],0x0
  42af43:	je     0x42ab40
  42af49:	pxor   xmm0,xmm0
  42af4d:	mov    QWORD PTR [rsp+0x60],r9
  42af52:	mov    DWORD PTR [rsp+0x68],r11d
  42af57:	cvtsi2sd xmm0,edi
  42af5b:	mulsd  xmm0,QWORD PTR [rip+0x1210d]        # 0x43d070
  42af63:	cvttsd2si ecx,xmm0
  42af67:	add    ecx,0x3
  42af6a:	mov    DWORD PTR [rsp+0x9c],ecx
  42af71:	call   0x42a2f0
  42af76:	mov    QWORD PTR [rsp+0x48],rax
  42af7b:	mov    eax,DWORD PTR [rbp+0xc]
  42af7e:	mov    r11d,DWORD PTR [rsp+0x68]
  42af83:	mov    r9,QWORD PTR [rsp+0x60]
  42af88:	sub    eax,0x1
  42af8b:	mov    DWORD PTR [rsp+0x38],eax
  42af8f:	jne    0x42b43d
  42af95:	mov    eax,0xffffffff
  42af9a:	mov    DWORD PTR [rsp+0x60],0x1
  42afa2:	mov    DWORD PTR [rsp+0x128],0x0
  42afad:	mov    DWORD PTR [rsp+0x8c],eax
  42afb4:	mov    DWORD PTR [rsp+0x68],eax
  42afb8:	jmp    0x42abf0
  42afbd:	xor    r12d,r12d
  42afc0:	xor    edi,edi
  42afc2:	mov    ebp,DWORD PTR [rsp+0x128]
  42afc9:	mov    rbx,QWORD PTR [rsp+0x48]
  42afce:	mov    r15d,0x10
  42afd4:	neg    ebp
  42afd6:	jmp    0x42ac74
  42afdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42afe0:	mov    eax,DWORD PTR [rsp+0x30]
  42afe4:	sub    DWORD PTR [rsp+0x50],eax
  42afe8:	mov    DWORD PTR [rsp+0x88],0x0
  42aff3:	neg    eax
  42aff5:	mov    DWORD PTR [rsp+0x58],eax
  42aff9:	jmp    0x42a819
  42affe:	xchg   ax,ax
  42b000:	neg    eax
  42b002:	mov    DWORD PTR [rsp+0x40],0x0
  42b00a:	mov    DWORD PTR [rsp+0x50],eax
  42b00e:	jmp    0x42a7fa
  42b013:	pxor   xmm0,xmm0
  42b017:	cvtsi2sd xmm0,eax
  42b01b:	ucomisd xmm0,xmm1
  42b01f:	jp     0x42b027
  42b021:	je     0x42a78b
  42b027:	sub    DWORD PTR [rsp+0x30],0x1
  42b02c:	jmp    0x42a78b
  42b031:	mov    r10d,DWORD PTR [rsp+0x60]
  42b036:	test   r10d,r10d
  42b039:	je     0x42b240
  42b03f:	lea    edx,[rbx+r13*1]
  42b043:	test   edx,edx
  42b045:	jle    0x42b052
  42b047:	mov    rcx,rdi
  42b04a:	call   0x42c0f0
  42b04f:	mov    rdi,rax
  42b052:	test   ebp,ebp
  42b054:	mov    r13,rdi
  42b057:	jne    0x42b6f5
  42b05d:	mov    DWORD PTR [rsp+0x9c],0x1
  42b068:	mov    rbx,QWORD PTR [rsp+0x48]
  42b06d:	mov    QWORD PTR [rsp+0x40],r12
  42b072:	mov    QWORD PTR [rsp+0x50],r15
  42b077:	jmp    0x42b13e
  42b07c:	nop    DWORD PTR [rax+0x0]
  42b080:	mov    rcx,r8
  42b083:	call   0x42bcf0
  42b088:	mov    eax,r12d
  42b08b:	or     eax,DWORD PTR [rsp+0x120]
  42b092:	jne    0x42b0aa
  42b094:	mov    ecx,DWORD PTR [rsp+0x38]
  42b098:	test   ecx,ecx
  42b09a:	jne    0x42b0aa
  42b09c:	mov    rax,QWORD PTR [rsp+0x50]
  42b0a1:	test   BYTE PTR [rax],0x1
  42b0a4:	je     0x42b865
  42b0aa:	test   r14d,r14d
  42b0ad:	js     0x42b5c0
  42b0b3:	or     r14d,DWORD PTR [rsp+0x120]
  42b0bb:	jne    0x42b0cb
  42b0bd:	mov    rax,QWORD PTR [rsp+0x50]
  42b0c2:	test   BYTE PTR [rax],0x1
  42b0c5:	je     0x42b5c0
  42b0cb:	test   r12d,r12d
  42b0ce:	jle    0x42b0db
  42b0d0:	cmp    DWORD PTR [rsp+0x38],0x2
  42b0d5:	jne    0x42b7cf
  42b0db:	add    rbx,0x1
  42b0df:	mov    BYTE PTR [rbx-0x1],bpl
  42b0e3:	mov    eax,DWORD PTR [rsp+0x68]
  42b0e7:	cmp    DWORD PTR [rsp+0x9c],eax
  42b0ee:	je     0x42b75b
  42b0f4:	xor    r8d,r8d
  42b0f7:	mov    rcx,rsi
  42b0fa:	mov    edx,0xa
  42b0ff:	call   0x42bd60
  42b104:	xor    r8d,r8d
  42b107:	cmp    rdi,r13
  42b10a:	mov    rsi,rax
  42b10d:	mov    edx,0xa
  42b112:	mov    rcx,rdi
  42b115:	je     0x42b1b0
  42b11b:	call   0x42bd60
  42b120:	mov    rcx,r13
  42b123:	xor    r8d,r8d
  42b126:	mov    edx,0xa
  42b12b:	mov    rdi,rax
  42b12e:	call   0x42bd60
  42b133:	mov    r13,rax
  42b136:	add    DWORD PTR [rsp+0x9c],0x1
  42b13e:	mov    r12,QWORD PTR [rsp+0x40]
  42b143:	mov    rcx,rsi
  42b146:	mov    rdx,r12
  42b149:	call   0x42a390
  42b14e:	mov    rdx,rdi
  42b151:	mov    rcx,rsi
  42b154:	mov    r15d,eax
  42b157:	lea    ebp,[rax+0x30]
  42b15a:	call   0x42c210
  42b15f:	mov    rcx,r12
  42b162:	mov    rdx,r13
  42b165:	mov    r14d,eax
  42b168:	call   0x42c260
  42b16d:	mov    r9d,DWORD PTR [rax+0x10]
  42b171:	mov    r8,rax
  42b174:	mov    r12d,0x1
  42b17a:	test   r9d,r9d
  42b17d:	jne    0x42b080
  42b183:	mov    rdx,rax
  42b186:	mov    rcx,rsi
  42b189:	mov    QWORD PTR [rsp+0x58],rax
  42b18e:	call   0x42c210
  42b193:	mov    r8,QWORD PTR [rsp+0x58]
  42b198:	mov    r12d,eax
  42b19b:	jmp    0x42b080
  42b1a0:	mov    r12d,DWORD PTR [rsp+0x58]
  42b1a5:	mov    ebx,DWORD PTR [rsp+0x50]
  42b1a9:	xor    edi,edi
  42b1ab:	jmp    0x42ad4f
  42b1b0:	call   0x42bd60
  42b1b5:	mov    rdi,rax
  42b1b8:	mov    r13,rax
  42b1bb:	jmp    0x42b136
  42b1c0:	mov    edx,DWORD PTR [rsp+0x58]
  42b1c4:	mov    rcx,rsi
  42b1c7:	call   0x42bf80
  42b1cc:	mov    rsi,rax
  42b1cf:	jmp    0x42adcb
  42b1d4:	mov    DWORD PTR [rsp+0x60],0x0
  42b1dc:	jmp    0x42a877
  42b1e1:	mov    rdx,r12
  42b1e4:	mov    rcx,rsi
  42b1e7:	call   0x42c210
  42b1ec:	test   eax,eax
  42b1ee:	jns    0x42ae70
  42b1f4:	xor    r8d,r8d
  42b1f7:	mov    rcx,rsi
  42b1fa:	mov    edx,0xa
  42b1ff:	sub    DWORD PTR [rsp+0x30],0x1
  42b204:	call   0x42bd60
  42b209:	mov    rsi,rax
  42b20c:	mov    eax,DWORD PTR [rsp+0x60]
  42b210:	test   eax,eax
  42b212:	jne    0x42b8d8
  42b218:	mov    eax,DWORD PTR [rsp+0x8c]
  42b21f:	test   eax,eax
  42b221:	jg     0x42b235
  42b223:	cmp    DWORD PTR [rsp+0x120],0x2
  42b22b:	mov    DWORD PTR [rsp+0x68],eax
  42b22f:	jg     0x42ae8c
  42b235:	mov    eax,DWORD PTR [rsp+0x8c]
  42b23c:	mov    DWORD PTR [rsp+0x68],eax
  42b240:	mov    DWORD PTR [rsp+0x9c],0x1
  42b24b:	mov    rbx,QWORD PTR [rsp+0x48]
  42b250:	mov    r13d,DWORD PTR [rsp+0x68]
  42b255:	jmp    0x42b27b
  42b257:	nop    WORD PTR [rax+rax*1+0x0]
  42b260:	mov    rcx,rsi
  42b263:	xor    r8d,r8d
  42b266:	mov    edx,0xa
  42b26b:	call   0x42bd60
  42b270:	add    DWORD PTR [rsp+0x9c],0x1
  42b278:	mov    rsi,rax
  42b27b:	mov    rdx,r12
  42b27e:	mov    rcx,rsi
  42b281:	add    rbx,0x1
  42b285:	call   0x42a390
  42b28a:	lea    ebp,[rax+0x30]
  42b28d:	mov    BYTE PTR [rbx-0x1],bpl
  42b291:	cmp    DWORD PTR [rsp+0x9c],r13d
  42b299:	jl     0x42b260
  42b29b:	xor    r14d,r14d
  42b29e:	mov    eax,DWORD PTR [rsp+0x38]
  42b2a2:	test   eax,eax
  42b2a4:	je     0x42b66c
  42b2aa:	cmp    eax,0x2
  42b2ad:	je     0x42b69c
  42b2b3:	cmp    DWORD PTR [rsi+0x14],0x1
  42b2b7:	jle    0x42b833
  42b2bd:	movzx  edx,BYTE PTR [rbx-0x1]
  42b2c1:	mov    rcx,QWORD PTR [rsp+0x48]
  42b2c6:	jmp    0x42b2e0
  42b2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b2d0:	cmp    rax,rcx
  42b2d3:	je     0x42b48c
  42b2d9:	movzx  edx,BYTE PTR [rax-0x1]
  42b2dd:	mov    rbx,rax
  42b2e0:	cmp    dl,0x39
  42b2e3:	lea    rax,[rbx-0x1]
  42b2e7:	je     0x42b2d0
  42b2e9:	add    edx,0x1
  42b2ec:	mov    r15d,0x20
  42b2f2:	mov    BYTE PTR [rax],dl
  42b2f4:	mov    rcx,r12
  42b2f7:	call   0x42bcf0
  42b2fc:	test   rdi,rdi
  42b2ff:	je     0x42b3ef
  42b305:	cmp    r14,rdi
  42b308:	je     0x42b317
  42b30a:	test   r14,r14
  42b30d:	je     0x42b317
  42b30f:	mov    rcx,r14
  42b312:	call   0x42bcf0
  42b317:	mov    ebp,DWORD PTR [rsp+0x30]
  42b31b:	add    ebp,0x1
  42b31e:	jmp    0x42ac85
  42b323:	mov    QWORD PTR [rsp+0x40],r9
  42b328:	mov    rdi,QWORD PTR [rsp+0x48]
  42b32d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  42b333:	mov    DWORD PTR [rsp+0x9c],0x1
  42b33e:	movapd xmm1,xmm0
  42b342:	mov    rbx,rdi
  42b345:	add    rbx,0x1
  42b349:	divsd  xmm1,xmm2
  42b34d:	cvttsd2si eax,xmm1
  42b351:	pxor   xmm1,xmm1
  42b355:	cvtsi2sd xmm1,eax
  42b359:	lea    edx,[rax+0x30]
  42b35c:	mov    BYTE PTR [rdi],dl
  42b35e:	mulsd  xmm1,xmm2
  42b362:	subsd  xmm0,xmm1
  42b366:	ucomisd xmm0,xmm6
  42b36a:	jp     0x42b36e
  42b36c:	je     0x42b3e0
  42b36e:	mov    edx,DWORD PTR [rsp+0x9c]
  42b375:	cmp    DWORD PTR [rsp+0x68],edx
  42b379:	je     0x42b467
  42b37f:	movsd  xmm3,QWORD PTR [rip+0x11cf9]        # 0x43d080
  42b387:	movapd xmm4,xmm6
  42b38b:	mov    ecx,DWORD PTR [rsp+0x68]
  42b38f:	jmp    0x42b3a0
  42b391:	mov    edx,DWORD PTR [rsp+0x9c]
  42b398:	cmp    ecx,edx
  42b39a:	je     0x42b467
  42b3a0:	mulsd  xmm0,xmm3
  42b3a4:	add    edx,0x1
  42b3a7:	add    rbx,0x1
  42b3ab:	mov    DWORD PTR [rsp+0x9c],edx
  42b3b2:	movapd xmm1,xmm0
  42b3b6:	divsd  xmm1,xmm2
  42b3ba:	cvttsd2si eax,xmm1
  42b3be:	pxor   xmm1,xmm1
  42b3c2:	cvtsi2sd xmm1,eax
  42b3c6:	lea    edx,[rax+0x30]
  42b3c9:	mov    BYTE PTR [rbx-0x1],dl
  42b3cc:	mulsd  xmm1,xmm2
  42b3d0:	subsd  xmm0,xmm1
  42b3d4:	ucomisd xmm0,xmm6
  42b3d8:	jp     0x42b391
  42b3da:	ucomisd xmm0,xmm4
  42b3de:	jne    0x42b391
  42b3e0:	mov    ebp,DWORD PTR [rsp+0x30]
  42b3e4:	add    ebp,0x1
  42b3e7:	xor    r15d,r15d
  42b3ea:	jmp    0x42aaa0
  42b3ef:	mov    ebp,DWORD PTR [rsp+0x30]
  42b3f3:	add    ebp,0x1
  42b3f6:	jmp    0x42aaa0
  42b3fb:	mov    ebx,0x1
  42b400:	mov    DWORD PTR [rsp+0x128],0x1
  42b40b:	jmp    0x42ab5a
  42b410:	cmp    DWORD PTR [rsp+0x68],0xe
  42b415:	mov    DWORD PTR [rsp+0x9c],0x1
  42b420:	mov    ecx,0x1
  42b425:	setbe  bl
  42b428:	and    ebx,eax
  42b42a:	jmp    0x42a8a9
  42b42f:	mov    r12d,DWORD PTR [rsp+0x58]
  42b434:	mov    ebx,DWORD PTR [rsp+0x50]
  42b438:	jmp    0x42ad3a
  42b43d:	mov    eax,0xffffffff
  42b442:	xor    ebx,ebx
  42b444:	mov    DWORD PTR [rsp+0x60],0x1
  42b44c:	mov    DWORD PTR [rsp+0x8c],eax
  42b453:	mov    DWORD PTR [rsp+0x68],eax
  42b457:	mov    DWORD PTR [rsp+0x128],0x0
  42b462:	jmp    0x42a8d3
  42b467:	mov    r10d,DWORD PTR [rsp+0x38]
  42b46c:	test   r10d,r10d
  42b46f:	je     0x42b72e
  42b475:	cmp    DWORD PTR [rsp+0x38],0x1
  42b47a:	je     0x42b821
  42b480:	mov    ebp,DWORD PTR [rsp+0x30]
  42b484:	add    ebp,0x1
  42b487:	jmp    0x42aa93
  42b48c:	mov    rax,QWORD PTR [rsp+0x48]
  42b491:	add    DWORD PTR [rsp+0x30],0x1
  42b496:	mov    r15d,0x20
  42b49c:	mov    BYTE PTR [rax],0x31
  42b49f:	jmp    0x42b2f4
  42b4a4:	mov    ebp,0x2
  42b4a9:	xor    r12d,r12d
  42b4ac:	xor    edi,edi
  42b4ae:	jmp    0x42ac62
  42b4b3:	mov    r10,QWORD PTR [rip+0x12106]        # 0x43d5c0
  42b4ba:	mov    QWORD PTR [rsp+0x38],rax
  42b4bf:	movsd  xmm3,QWORD PTR [rsp+0x38]
  42b4c5:	mov    DWORD PTR [rsp+0x9c],0x1
  42b4d0:	mov    rbx,QWORD PTR [rsp+0x48]
  42b4d5:	movsd  xmm1,QWORD PTR [rip+0x11ba3]        # 0x43d080
  42b4dd:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  42b4e3:	jmp    0x42b4f3
  42b4e5:	mulsd  xmm0,xmm1
  42b4e9:	add    edx,0x1
  42b4ec:	mov    DWORD PTR [rsp+0x9c],edx
  42b4f3:	cvttsd2si eax,xmm0
  42b4f7:	test   eax,eax
  42b4f9:	je     0x42b507
  42b4fb:	pxor   xmm2,xmm2
  42b4ff:	cvtsi2sd xmm2,eax
  42b503:	subsd  xmm0,xmm2
  42b507:	add    rbx,0x1
  42b50b:	add    eax,0x30
  42b50e:	mov    BYTE PTR [rbx-0x1],al
  42b511:	mov    edx,DWORD PTR [rsp+0x9c]
  42b518:	cmp    edx,r9d
  42b51b:	jne    0x42b4e5
  42b51d:	movsd  xmm1,QWORD PTR [rip+0x11b8b]        # 0x43d0b0
  42b525:	movapd xmm2,xmm3
  42b529:	addsd  xmm2,xmm1
  42b52d:	ucomisd xmm0,xmm2
  42b531:	ja     0x42b587
  42b533:	subsd  xmm1,xmm3
  42b537:	ucomisd xmm1,xmm0
  42b53b:	jbe    0x42abde
  42b541:	ucomisd xmm0,xmm6
  42b545:	jp     0x42b8cd
  42b54b:	jne    0x42b8cd
  42b551:	xor    r15d,r15d
  42b554:	jmp    0x42b567
  42b556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b560:	movzx  eax,BYTE PTR [rbx-0x2]
  42b564:	mov    rbx,rdx
  42b567:	cmp    al,0x30
  42b569:	lea    rdx,[rbx-0x1]
  42b56d:	je     0x42b560
  42b56f:	lea    ebp,[rcx+0x1]
  42b572:	jmp    0x42aaa0
  42b577:	test   al,0x1
  42b579:	mov    ecx,DWORD PTR [rsp+0x30]
  42b57d:	movzx  eax,BYTE PTR [rbx-0x1]
  42b581:	je     0x42b8cd
  42b587:	mov    r8,QWORD PTR [rsp+0x48]
  42b58c:	jmp    0x42b5a0
  42b58e:	xchg   ax,ax
  42b590:	cmp    rdx,r8
  42b593:	je     0x42b6dc
  42b599:	movzx  eax,BYTE PTR [rdx-0x1]
  42b59d:	mov    rbx,rdx
  42b5a0:	cmp    al,0x39
  42b5a2:	lea    rdx,[rbx-0x1]
  42b5a6:	je     0x42b590
  42b5a8:	mov    QWORD PTR [rsp+0x48],r8
  42b5ad:	add    eax,0x1
  42b5b0:	mov    BYTE PTR [rdx],al
  42b5b2:	lea    ebp,[rcx+0x1]
  42b5b5:	mov    r15d,0x20
  42b5bb:	jmp    0x42aaa0
  42b5c0:	mov    edx,DWORD PTR [rsp+0x38]
  42b5c4:	mov    eax,r12d
  42b5c7:	mov    r14d,ebp
  42b5ca:	mov    r12,QWORD PTR [rsp+0x40]
  42b5cf:	test   edx,edx
  42b5d1:	je     0x42b801
  42b5d7:	cmp    DWORD PTR [rsi+0x14],0x1
  42b5db:	jle    0x42b7f7
  42b5e1:	cmp    DWORD PTR [rsp+0x38],0x2
  42b5e6:	jne    0x42b637
  42b5e8:	jmp    0x42b816
  42b5ed:	nop    DWORD PTR [rax]
  42b5f0:	add    rbx,0x1
  42b5f4:	xor    r8d,r8d
  42b5f7:	mov    rcx,r13
  42b5fa:	mov    BYTE PTR [rbx-0x1],r14b
  42b5fe:	mov    edx,0xa
  42b603:	call   0x42bd60
  42b608:	cmp    rdi,r13
  42b60b:	mov    rcx,rsi
  42b60e:	mov    edx,0xa
  42b613:	cmove  rdi,rax
  42b617:	xor    r8d,r8d
  42b61a:	mov    rbp,rax
  42b61d:	call   0x42bd60
  42b622:	mov    rdx,r12
  42b625:	mov    rcx,rax
  42b628:	mov    rsi,rax
  42b62b:	call   0x42a390
  42b630:	lea    r14d,[rax+0x30]
  42b634:	mov    r13,rbp
  42b637:	mov    rdx,r13
  42b63a:	mov    rcx,r12
  42b63d:	call   0x42c210
  42b642:	test   eax,eax
  42b644:	jg     0x42b5f0
  42b646:	cmp    r14d,0x39
  42b64a:	je     0x42b846
  42b650:	add    r14d,0x1
  42b654:	mov    r15d,0x20
  42b65a:	mov    BYTE PTR [rbx],r14b
  42b65d:	mov    r14,rdi
  42b660:	add    rbx,0x1
  42b664:	mov    rdi,r13
  42b667:	jmp    0x42b2f4
  42b66c:	mov    rcx,rsi
  42b66f:	mov    edx,0x1
  42b674:	call   0x42c0f0
  42b679:	mov    rdx,r12
  42b67c:	mov    rcx,rax
  42b67f:	mov    rsi,rax
  42b682:	call   0x42c210
  42b687:	cmp    eax,0x0
  42b68a:	jg     0x42b2bd
  42b690:	jne    0x42b69c
  42b692:	and    bpl,0x1
  42b696:	jne    0x42b2bd
  42b69c:	cmp    DWORD PTR [rsi+0x14],0x1
  42b6a0:	mov    r15d,0x10
  42b6a6:	jg     0x42b6b3
  42b6a8:	jmp    0x42b93d
  42b6ad:	nop    DWORD PTR [rax]
  42b6b0:	mov    rbx,rax
  42b6b3:	cmp    BYTE PTR [rbx-0x1],0x30
  42b6b7:	lea    rax,[rbx-0x1]
  42b6bb:	je     0x42b6b0
  42b6bd:	jmp    0x42b2f4
  42b6c2:	mov    ebx,DWORD PTR [rsp+0x50]
  42b6c6:	mov    DWORD PTR [rsp+0x9c],0x0
  42b6d1:	xor    eax,eax
  42b6d3:	sub    ebx,DWORD PTR [rsp+0x68]
  42b6d7:	jmp    0x42ad3a
  42b6dc:	mov    QWORD PTR [rsp+0x48],r8
  42b6e1:	add    ecx,0x1
  42b6e4:	mov    BYTE PTR [r8],0x30
  42b6e8:	mov    rdx,r8
  42b6eb:	mov    eax,0x31
  42b6f0:	jmp    0x42b5b0
  42b6f5:	mov    ecx,DWORD PTR [rdi+0x8]
  42b6f8:	call   0x42bbe0
  42b6fd:	lea    rcx,[rax+0x10]
  42b701:	mov    rbx,rax
  42b704:	movsxd rax,DWORD PTR [rdi+0x14]
  42b708:	lea    rdx,[rdi+0x10]
  42b70c:	lea    r8,[rax*4+0x8]
  42b714:	call   0x42fb40
  42b719:	mov    edx,0x1
  42b71e:	mov    rcx,rbx
  42b721:	call   0x42c0f0
  42b726:	mov    r13,rax
  42b729:	jmp    0x42b05d
  42b72e:	addsd  xmm0,xmm0
  42b732:	ucomisd xmm0,xmm2
  42b736:	ja     0x42b821
  42b73c:	ucomisd xmm2,xmm0
  42b740:	jp     0x42b748
  42b742:	je     0x42b577
  42b748:	movzx  eax,BYTE PTR [rbx-0x1]
  42b74c:	mov    ecx,DWORD PTR [rsp+0x30]
  42b750:	mov    r15d,0x10
  42b756:	jmp    0x42b567
  42b75b:	mov    r14,rdi
  42b75e:	mov    r12,QWORD PTR [rsp+0x40]
  42b763:	mov    rdi,r13
  42b766:	jmp    0x42b29e
  42b76b:	mov    eax,DWORD PTR [rsp+0x68]
  42b76f:	test   eax,eax
  42b771:	je     0x42ab7a
  42b777:	mov    r9d,DWORD PTR [rsp+0x8c]
  42b77f:	test   r9d,r9d
  42b782:	jle    0x42abde
  42b788:	movsd  xmm0,QWORD PTR [rip+0x118f0]        # 0x43d080
  42b790:	mov    ecx,0xffffffff
  42b795:	movsd  xmm1,QWORD PTR [rip+0x118eb]        # 0x43d088
  42b79d:	mulsd  xmm0,xmm4
  42b7a1:	mulsd  xmm1,xmm0
  42b7a5:	addsd  xmm1,QWORD PTR [rip+0x118e3]        # 0x43d090
  42b7ad:	movq   rdx,xmm1
  42b7b2:	movq   rax,xmm1
  42b7b7:	shr    rdx,0x20
  42b7bb:	mov    eax,eax
  42b7bd:	sub    edx,0x3400000
  42b7c3:	shl    rdx,0x20
  42b7c7:	or     rax,rdx
  42b7ca:	jmp    0x42a982
  42b7cf:	cmp    ebp,0x39
  42b7d2:	mov    r12,QWORD PTR [rsp+0x40]
  42b7d7:	mov    rax,rbx
  42b7da:	je     0x42b849
  42b7dc:	add    ebp,0x1
  42b7df:	mov    r14,rdi
  42b7e2:	add    rbx,0x1
  42b7e6:	mov    BYTE PTR [rax],bpl
  42b7e9:	mov    rdi,r13
  42b7ec:	mov    r15d,0x20
  42b7f2:	jmp    0x42b2f4
  42b7f7:	cmp    DWORD PTR [rsi+0x18],0x0
  42b7fb:	jne    0x42b5e1
  42b801:	test   eax,eax
  42b803:	jg     0x42b899
  42b809:	xor    r15d,r15d
  42b80c:	cmp    DWORD PTR [rsi+0x14],0x1
  42b810:	jle    0x42b918
  42b816:	mov    r15d,0x10
  42b81c:	jmp    0x42b65a
  42b821:	movzx  eax,BYTE PTR [rbx-0x1]
  42b825:	mov    ecx,DWORD PTR [rsp+0x30]
  42b829:	mov    r8,QWORD PTR [rsp+0x48]
  42b82e:	jmp    0x42b5a0
  42b833:	mov    eax,DWORD PTR [rsi+0x18]
  42b836:	test   eax,eax
  42b838:	jne    0x42b2bd
  42b83e:	xor    r15d,r15d
  42b841:	jmp    0x42b6b3
  42b846:	mov    rax,rbx
  42b849:	mov    r14,rdi
  42b84c:	add    rbx,0x1
  42b850:	mov    rdi,r13
  42b853:	mov    BYTE PTR [rax],0x39
  42b856:	mov    edx,0x39
  42b85b:	mov    rcx,QWORD PTR [rsp+0x48]
  42b860:	jmp    0x42b2e0
  42b865:	cmp    ebp,0x39
  42b868:	mov    r12,QWORD PTR [rsp+0x40]
  42b86d:	mov    rax,rbx
  42b870:	je     0x42b846
  42b872:	test   r14d,r14d
  42b875:	jle    0x42b950
  42b87b:	mov    ebp,r15d
  42b87e:	mov    r15d,0x20
  42b884:	add    ebp,0x31
  42b887:	mov    r14,rdi
  42b88a:	add    rbx,0x1
  42b88e:	mov    BYTE PTR [rax],bpl
  42b891:	mov    rdi,r13
  42b894:	jmp    0x42b2f4
  42b899:	mov    rcx,rsi
  42b89c:	mov    edx,0x1
  42b8a1:	call   0x42c0f0
  42b8a6:	mov    rdx,r12
  42b8a9:	mov    rcx,rax
  42b8ac:	mov    rsi,rax
  42b8af:	call   0x42c210
  42b8b4:	cmp    eax,0x0
  42b8b7:	jle    0x42b92a
  42b8b9:	cmp    ebp,0x39
  42b8bc:	je     0x42b846
  42b8be:	lea    r14d,[rbp+0x1]
  42b8c2:	mov    r15d,0x20
  42b8c8:	jmp    0x42b80c
  42b8cd:	mov    r15d,0x10
  42b8d3:	jmp    0x42b567
  42b8d8:	xor    r8d,r8d
  42b8db:	mov    rcx,rdi
  42b8de:	mov    edx,0xa
  42b8e3:	call   0x42bd60
  42b8e8:	mov    rdi,rax
  42b8eb:	mov    eax,DWORD PTR [rsp+0x8c]
  42b8f2:	test   eax,eax
  42b8f4:	jg     0x42b908
  42b8f6:	cmp    DWORD PTR [rsp+0x120],0x2
  42b8fe:	mov    DWORD PTR [rsp+0x68],eax
  42b902:	jg     0x42ae8c
  42b908:	mov    eax,DWORD PTR [rsp+0x8c]
  42b90f:	mov    DWORD PTR [rsp+0x68],eax
  42b913:	jmp    0x42b03f
  42b918:	cmp    DWORD PTR [rsi+0x18],0x0
  42b91c:	mov    eax,0x10
  42b921:	cmovne r15d,eax
  42b925:	jmp    0x42b65a
  42b92a:	jne    0x42b932
  42b92c:	test   bpl,0x1
  42b930:	jne    0x42b8b9
  42b932:	mov    r15d,0x20
  42b938:	jmp    0x42b80c
  42b93d:	cmp    DWORD PTR [rsi+0x18],0x1
  42b941:	sbb    r15d,r15d
  42b944:	not    r15d
  42b947:	and    r15d,0x10
  42b94b:	jmp    0x42b6b3
  42b950:	cmp    DWORD PTR [rsi+0x14],0x1
  42b954:	mov    r15d,0x10
  42b95a:	jg     0x42b887
  42b960:	cmp    DWORD PTR [rsi+0x18],0x1
  42b964:	sbb    r15d,r15d
  42b967:	not    r15d
  42b96a:	and    r15d,0x10
  42b96e:	jmp    0x42b887
  42b973:	xor    eax,eax
  42b975:	jmp    0x42a657
  42b97a:	nop
  42b97b:	nop
  42b97c:	nop
  42b97d:	nop
  42b97e:	nop
  42b97f:	nop
  42b980:	push   rbp
  42b981:	push   rdi
  42b982:	push   rsi
  42b983:	push   rbx
  42b984:	mov    rsi,rcx
  42b987:	lea    r10,[rcx+0x18]
  42b98b:	movsxd rcx,DWORD PTR [rcx+0x14]
  42b98f:	mov    eax,edx
  42b991:	sar    eax,0x5
  42b994:	cmp    eax,ecx
  42b996:	jge    0x42ba20
  42b99c:	cdqe   
  42b99e:	and    edx,0x1f
  42b9a1:	lea    rbx,[r10+rcx*4]
  42b9a5:	lea    rdi,[r10+rax*4]
  42b9a9:	je     0x42ba33
  42b9af:	mov    r9d,DWORD PTR [rdi]
  42b9b2:	lea    r8,[rdi+0x4]
  42b9b6:	mov    ebp,0x20
  42b9bb:	mov    ecx,edx
  42b9bd:	sub    ebp,edx
  42b9bf:	shr    r9d,cl
  42b9c2:	cmp    rbx,r8
  42b9c5:	jbe    0x42ba78
  42b9cb:	mov    r11,r10
  42b9ce:	xchg   ax,ax
  42b9d0:	mov    eax,DWORD PTR [r8]
  42b9d3:	mov    ecx,ebp
  42b9d5:	add    r11,0x4
  42b9d9:	add    r8,0x4
  42b9dd:	shl    eax,cl
  42b9df:	mov    ecx,edx
  42b9e1:	or     eax,r9d
  42b9e4:	mov    DWORD PTR [r11-0x4],eax
  42b9e8:	mov    r9d,DWORD PTR [r8-0x4]
  42b9ec:	shr    r9d,cl
  42b9ef:	cmp    rbx,r8
  42b9f2:	ja     0x42b9d0
  42b9f4:	sub    rbx,rdi
  42b9f7:	lea    rax,[rbx-0x5]
  42b9fb:	shr    rax,0x2
  42b9ff:	lea    rax,[r10+rax*4+0x4]
  42ba04:	test   r9d,r9d
  42ba07:	mov    DWORD PTR [rax],r9d
  42ba0a:	je     0x42ba10
  42ba0c:	add    rax,0x4
  42ba10:	sub    rax,r10
  42ba13:	shr    rax,0x2
  42ba17:	jmp    0x42ba6c
  42ba19:	nop    DWORD PTR [rax+0x0]
  42ba20:	mov    DWORD PTR [rsi+0x14],0x0
  42ba27:	mov    DWORD PTR [rsi+0x18],0x0
  42ba2e:	pop    rbx
  42ba2f:	pop    rsi
  42ba30:	pop    rdi
  42ba31:	pop    rbp
  42ba32:	ret    
  42ba33:	cmp    rbx,rdi
  42ba36:	mov    rdx,r10
  42ba39:	mov    rax,rdi
  42ba3c:	jbe    0x42ba20
  42ba3e:	xchg   ax,ax
  42ba40:	add    rax,0x4
  42ba44:	mov    r8d,DWORD PTR [rax-0x4]
  42ba48:	add    rdx,0x4
  42ba4c:	cmp    rbx,rax
  42ba4f:	mov    DWORD PTR [rdx-0x4],r8d
  42ba53:	ja     0x42ba40
  42ba55:	not    rdi
  42ba58:	lea    rax,[rdi+rbx*1]
  42ba5c:	shr    rax,0x2
  42ba60:	lea    rax,[rax*4+0x4]
  42ba68:	shr    rax,0x2
  42ba6c:	test   eax,eax
  42ba6e:	mov    DWORD PTR [rsi+0x14],eax
  42ba71:	je     0x42ba27
  42ba73:	pop    rbx
  42ba74:	pop    rsi
  42ba75:	pop    rdi
  42ba76:	pop    rbp
  42ba77:	ret    
  42ba78:	mov    rax,r10
  42ba7b:	jmp    0x42ba04
  42ba7d:	nop    DWORD PTR [rax]
  42ba80:	movsxd rax,DWORD PTR [rcx+0x14]
  42ba84:	lea    rdx,[rcx+0x18]
  42ba88:	lea    r8,[rdx+rax*4]
  42ba8c:	cmp    rdx,r8
  42ba8f:	jae    0x42babb
  42ba91:	mov    ecx,DWORD PTR [rcx+0x18]
  42ba94:	xor    eax,eax
  42ba96:	test   ecx,ecx
  42ba98:	je     0x42baa6
  42ba9a:	jmp    0x42bab4
  42ba9c:	nop    DWORD PTR [rax+0x0]
  42baa0:	mov    ecx,DWORD PTR [rdx]
  42baa2:	test   ecx,ecx
  42baa4:	jne    0x42bab4
  42baa6:	add    rdx,0x4
  42baaa:	add    eax,0x20
  42baad:	cmp    r8,rdx
  42bab0:	ja     0x42baa0
  42bab2:	repz ret 
  42bab4:	tzcnt  ecx,ecx
  42bab8:	add    eax,ecx
  42baba:	ret    
  42babb:	xor    eax,eax
  42babd:	ret    
  42babe:	nop
  42babf:	nop
  42bac0:	push   rsi
  42bac1:	push   rbx
  42bac2:	sub    rsp,0x28
  42bac6:	mov    eax,DWORD PTR [rip+0x17b04]        # 0x4435d0
  42bacc:	movsxd rsi,ecx
  42bacf:	cmp    eax,0x2
  42bad2:	je     0x42bb3d
  42bad4:	test   eax,eax
  42bad6:	je     0x42bb02
  42bad8:	cmp    eax,0x1
  42badb:	jne    0x42bafb
  42badd:	mov    rbx,QWORD PTR [rip+0x19404]        # 0x444ee8
  42bae4:	mov    ecx,0x1
  42bae9:	call   rbx
  42baeb:	mov    eax,DWORD PTR [rip+0x17adf]        # 0x4435d0
  42baf1:	cmp    eax,0x1
  42baf4:	je     0x42bae4
  42baf6:	cmp    eax,0x2
  42baf9:	je     0x42bb3d
  42bafb:	add    rsp,0x28
  42baff:	pop    rbx
  42bb00:	pop    rsi
  42bb01:	ret    
  42bb02:	mov    al,0x1
  42bb04:	xchg   DWORD PTR [rip+0x17ac6],eax        # 0x4435d0
  42bb0a:	test   eax,eax
  42bb0c:	jne    0x42bb60
  42bb0e:	lea    rcx,[rip+0x17aeb]        # 0x443600
  42bb15:	mov    rbx,QWORD PTR [rip+0x19354]        # 0x444e70
  42bb1c:	call   rbx
  42bb1e:	lea    rcx,[rip+0x17b03]        # 0x443628
  42bb25:	call   rbx
  42bb27:	lea    rcx,[rip+0x62]        # 0x42bb90
  42bb2e:	call   0x422950
  42bb33:	mov    DWORD PTR [rip+0x17a93],0x2        # 0x4435d0
  42bb3d:	lea    rdx,[rsi+rsi*4]
  42bb41:	lea    rax,[rip+0x17ab8]        # 0x443600
  42bb48:	lea    rcx,[rax+rdx*8]
  42bb4c:	mov    rax,QWORD PTR [rip+0x19295]        # 0x444de8
  42bb53:	add    rsp,0x28
  42bb57:	pop    rbx
  42bb58:	pop    rsi
  42bb59:	rex.W jmp rax
  42bb5c:	nop    DWORD PTR [rax+0x0]
  42bb60:	cmp    eax,0x2
  42bb63:	je     0x42bb80
  42bb65:	mov    eax,DWORD PTR [rip+0x17a65]        # 0x4435d0
  42bb6b:	cmp    eax,0x1
  42bb6e:	je     0x42badd
  42bb74:	jmp    0x42baf6
  42bb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb80:	mov    DWORD PTR [rip+0x17a46],0x2        # 0x4435d0
  42bb8a:	jmp    0x42bb3d
  42bb8c:	nop    DWORD PTR [rax+0x0]
  42bb90:	push   rbx
  42bb91:	sub    rsp,0x20
  42bb95:	mov    eax,0x3
  42bb9a:	xchg   DWORD PTR [rip+0x17a30],eax        # 0x4435d0
  42bba0:	cmp    eax,0x2
  42bba3:	je     0x42bbb0
  42bba5:	add    rsp,0x20
  42bba9:	pop    rbx
  42bbaa:	ret    
  42bbab:	nop    DWORD PTR [rax+rax*1+0x0]
  42bbb0:	mov    rbx,QWORD PTR [rip+0x19229]        # 0x444de0
  42bbb7:	lea    rcx,[rip+0x17a42]        # 0x443600
  42bbbe:	call   rbx
  42bbc0:	lea    rcx,[rip+0x17a61]        # 0x443628
  42bbc7:	mov    rax,rbx
  42bbca:	add    rsp,0x20
  42bbce:	pop    rbx
  42bbcf:	rex.W jmp rax
  42bbd2:	nop    DWORD PTR [rax+0x0]
  42bbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbe0:	push   rdi
  42bbe1:	push   rsi
  42bbe2:	push   rbx
  42bbe3:	sub    rsp,0x20
  42bbe7:	mov    ebx,ecx
  42bbe9:	xor    ecx,ecx
  42bbeb:	call   0x42bac0
  42bbf0:	cmp    ebx,0x9
  42bbf3:	jg     0x42bc30
  42bbf5:	lea    rdx,[rip+0x17984]        # 0x443580
  42bbfc:	movsxd rcx,ebx
  42bbff:	mov    rdi,QWORD PTR [rdx+rcx*8]
  42bc03:	test   rdi,rdi
  42bc06:	je     0x42bc90
  42bc0c:	cmp    DWORD PTR [rip+0x179bd],0x2        # 0x4435d0
  42bc13:	mov    r8,QWORD PTR [rdi]
  42bc16:	mov    QWORD PTR [rdx+rcx*8],r8
  42bc1a:	jne    0x42bc76
  42bc1c:	lea    rcx,[rip+0x179dd]        # 0x443600
  42bc23:	call   QWORD PTR [rip+0x19257]        # 0x444e80
  42bc29:	jmp    0x42bc76
  42bc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc30:	mov    eax,0x1
  42bc35:	mov    ecx,ebx
  42bc37:	shl    eax,cl
  42bc39:	mov    esi,eax
  42bc3b:	lea    eax,[rax-0x1]
  42bc3e:	cdqe   
  42bc40:	lea    rdx,[rax*4+0x27]
  42bc48:	shr    rdx,0x3
  42bc4c:	mov    edx,edx
  42bc4e:	lea    rcx,[rdx*8+0x0]
  42bc56:	call   0x42fb50
  42bc5b:	test   rax,rax
  42bc5e:	mov    rdi,rax
  42bc61:	je     0x42bcea
  42bc67:	cmp    DWORD PTR [rip+0x17962],0x2        # 0x4435d0
  42bc6e:	mov    DWORD PTR [rdi+0x8],ebx
  42bc71:	mov    DWORD PTR [rdi+0xc],esi
  42bc74:	je     0x42bc1c
  42bc76:	mov    DWORD PTR [rdi+0x14],0x0
  42bc7d:	mov    DWORD PTR [rdi+0x10],0x0
  42bc84:	mov    rax,rdi
  42bc87:	add    rsp,0x20
  42bc8b:	pop    rbx
  42bc8c:	pop    rsi
  42bc8d:	pop    rdi
  42bc8e:	ret    
  42bc8f:	nop
  42bc90:	mov    ecx,ebx
  42bc92:	mov    eax,0x1
  42bc97:	mov    rdi,QWORD PTR [rip+0x5552]        # 0x4311f0
  42bc9e:	shl    eax,cl
  42bca0:	lea    rcx,[rip+0x16fd9]        # 0x442c80
  42bca7:	lea    edx,[rax-0x1]
  42bcaa:	mov    esi,eax
  42bcac:	mov    rax,rdi
  42bcaf:	movsxd rdx,edx
  42bcb2:	sub    rax,rcx
  42bcb5:	lea    rdx,[rdx*4+0x27]
  42bcbd:	mov    rcx,rax
  42bcc0:	sar    rcx,0x3
  42bcc4:	shr    rdx,0x3
  42bcc8:	mov    edx,edx
  42bcca:	add    rcx,rdx
  42bccd:	cmp    rcx,0x120
  42bcd4:	ja     0x42bc4e
  42bcda:	lea    rdx,[rdi+rdx*8]
  42bcde:	mov    QWORD PTR [rip+0x550b],rdx        # 0x4311f0
  42bce5:	jmp    0x42bc67
  42bcea:	xor    eax,eax
  42bcec:	jmp    0x42bc87
  42bcee:	xchg   ax,ax
  42bcf0:	push   rbx
  42bcf1:	sub    rsp,0x20
  42bcf5:	test   rcx,rcx
  42bcf8:	je     0x42bd29
  42bcfa:	cmp    DWORD PTR [rcx+0x8],0x9
  42bcfe:	jg     0x42bd30
  42bd00:	mov    rbx,rcx
  42bd03:	xor    ecx,ecx
  42bd05:	call   0x42bac0
  42bd0a:	movsxd rdx,DWORD PTR [rbx+0x8]
  42bd0e:	lea    rax,[rip+0x1786b]        # 0x443580
  42bd15:	cmp    DWORD PTR [rip+0x178b4],0x2        # 0x4435d0
  42bd1c:	mov    rcx,QWORD PTR [rax+rdx*8]
  42bd20:	mov    QWORD PTR [rax+rdx*8],rbx
  42bd24:	mov    QWORD PTR [rbx],rcx
  42bd27:	je     0x42bd40
  42bd29:	add    rsp,0x20
  42bd2d:	pop    rbx
  42bd2e:	ret    
  42bd2f:	nop
  42bd30:	add    rsp,0x20
  42bd34:	pop    rbx
  42bd35:	jmp    0x42fba0
  42bd3a:	nop    WORD PTR [rax+rax*1+0x0]
  42bd40:	mov    rax,QWORD PTR [rip+0x19139]        # 0x444e80
  42bd47:	lea    rcx,[rip+0x178b2]        # 0x443600
  42bd4e:	add    rsp,0x20
  42bd52:	pop    rbx
  42bd53:	rex.W jmp rax
  42bd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd60:	push   rbp
  42bd61:	push   rdi
  42bd62:	push   rsi
  42bd63:	push   rbx
  42bd64:	sub    rsp,0x28
  42bd68:	mov    esi,DWORD PTR [rcx+0x14]
  42bd6b:	xor    r9d,r9d
  42bd6e:	lea    r10,[rcx+0x18]
  42bd72:	mov    rdi,rcx
  42bd75:	movsxd rbx,r8d
  42bd78:	movsxd rdx,edx
  42bd7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd80:	mov    eax,DWORD PTR [r10+r9*4]
  42bd84:	imul   rax,rdx
  42bd88:	add    rax,rbx
  42bd8b:	mov    rbx,rax
  42bd8e:	mov    DWORD PTR [r10+r9*4],eax
  42bd92:	add    r9,0x1
  42bd96:	shr    rbx,0x20
  42bd9a:	cmp    esi,r9d
  42bd9d:	jg     0x42bd80
  42bd9f:	test   rbx,rbx
  42bda2:	mov    rax,rdi
  42bda5:	je     0x42bdbc
  42bda7:	cmp    esi,DWORD PTR [rdi+0xc]
  42bdaa:	jge    0x42bdc5
  42bdac:	movsxd rax,esi
  42bdaf:	add    esi,0x1
  42bdb2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  42bdb6:	mov    DWORD PTR [rdi+0x14],esi
  42bdb9:	mov    rax,rdi
  42bdbc:	add    rsp,0x28
  42bdc0:	pop    rbx
  42bdc1:	pop    rsi
  42bdc2:	pop    rdi
  42bdc3:	pop    rbp
  42bdc4:	ret    
  42bdc5:	mov    eax,DWORD PTR [rdi+0x8]
  42bdc8:	lea    ecx,[rax+0x1]
  42bdcb:	call   0x42bbe0
  42bdd0:	test   rax,rax
  42bdd3:	mov    rbp,rax
  42bdd6:	je     0x42be0e
  42bdd8:	lea    rcx,[rax+0x10]
  42bddc:	movsxd rax,DWORD PTR [rdi+0x14]
  42bde0:	lea    rdx,[rdi+0x10]
  42bde4:	lea    r8,[rax*4+0x8]
  42bdec:	call   0x42fb40
  42bdf1:	mov    rcx,rdi
  42bdf4:	mov    rdi,rbp
  42bdf7:	call   0x42bcf0
  42bdfc:	movsxd rax,esi
  42bdff:	add    esi,0x1
  42be02:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  42be06:	mov    DWORD PTR [rdi+0x14],esi
  42be09:	mov    rax,rdi
  42be0c:	jmp    0x42bdbc
  42be0e:	xor    eax,eax
  42be10:	jmp    0x42bdbc
  42be12:	nop    DWORD PTR [rax+0x0]
  42be16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be20:	push   rbx
  42be21:	sub    rsp,0x20
  42be25:	mov    ebx,ecx
  42be27:	mov    ecx,0x1
  42be2c:	call   0x42bbe0
  42be31:	test   rax,rax
  42be34:	je     0x42be40
  42be36:	mov    DWORD PTR [rax+0x18],ebx
  42be39:	mov    DWORD PTR [rax+0x14],0x1
  42be40:	add    rsp,0x20
  42be44:	pop    rbx
  42be45:	ret    
  42be46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be50:	push   r14
  42be52:	push   r13
  42be54:	push   r12
  42be56:	push   rbp
  42be57:	push   rdi
  42be58:	push   rsi
  42be59:	push   rbx
  42be5a:	sub    rsp,0x20
  42be5e:	movsxd r13,DWORD PTR [rcx+0x14]
  42be62:	movsxd rbx,DWORD PTR [rdx+0x14]
  42be66:	mov    r12,rcx
  42be69:	mov    r14,rdx
  42be6c:	cmp    r13d,ebx
  42be6f:	jl     0x42bf71
  42be75:	mov    eax,ebx
  42be77:	movsxd rbx,r13d
  42be7a:	movsxd r13,eax
  42be7d:	xor    eax,eax
  42be7f:	lea    esi,[rbx+r13*1]
  42be83:	cmp    esi,DWORD PTR [r12+0xc]
  42be88:	setg   al
  42be8b:	add    eax,DWORD PTR [r12+0x8]
  42be90:	mov    ecx,eax
  42be92:	call   0x42bbe0
  42be97:	test   rax,rax
  42be9a:	je     0x42bf7c
  42bea0:	lea    rdi,[rax+0x18]
  42bea4:	movsxd rdx,esi
  42bea7:	lea    rbp,[rdi+rdx*4]
  42beab:	mov    r8,rdi
  42beae:	cmp    rdi,rbp
  42beb1:	jae    0x42bec3
  42beb3:	mov    DWORD PTR [r8],0x0
  42beba:	add    r8,0x4
  42bebe:	cmp    rbp,r8
  42bec1:	ja     0x42beb3
  42bec3:	lea    rdx,[r14+0x18]
  42bec7:	add    r12,0x18
  42becb:	lea    rbx,[r12+rbx*4]
  42becf:	lea    r13,[rdx+r13*4]
  42bed3:	cmp    rdx,r13
  42bed6:	jae    0x42bf39
  42bed8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bee0:	add    rdx,0x4
  42bee4:	mov    r11d,DWORD PTR [rdx-0x4]
  42bee8:	test   r11d,r11d
  42beeb:	je     0x42bf30
  42beed:	mov    r9,rdi
  42bef0:	mov    r8,r12
  42bef3:	xor    r10d,r10d
  42bef6:	jmp    0x42bf03
  42bef8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bf00:	mov    r9,r14
  42bf03:	add    r8,0x4
  42bf07:	mov    ecx,DWORD PTR [r8-0x4]
  42bf0b:	mov    r14d,DWORD PTR [r9]
  42bf0e:	imul   rcx,r11
  42bf12:	add    rcx,r14
  42bf15:	lea    r14,[r9+0x4]
  42bf19:	add    rcx,r10
  42bf1c:	mov    r10,rcx
  42bf1f:	mov    DWORD PTR [r14-0x4],ecx
  42bf23:	shr    r10,0x20
  42bf27:	cmp    rbx,r8
  42bf2a:	ja     0x42bf00
  42bf2c:	mov    DWORD PTR [r9+0x4],r10d
  42bf30:	add    rdi,0x4
  42bf34:	cmp    r13,rdx
  42bf37:	ja     0x42bee0
  42bf39:	test   esi,esi
  42bf3b:	jle    0x42bf5f
  42bf3d:	mov    r8d,DWORD PTR [rbp-0x4]
  42bf41:	lea    rdx,[rbp-0x4]
  42bf45:	test   r8d,r8d
  42bf48:	je     0x42bf5a
  42bf4a:	jmp    0x42bf5f
  42bf4c:	nop    DWORD PTR [rax+0x0]
  42bf50:	sub    rdx,0x4
  42bf54:	mov    ecx,DWORD PTR [rdx]
  42bf56:	test   ecx,ecx
  42bf58:	jne    0x42bf5f
  42bf5a:	sub    esi,0x1
  42bf5d:	jne    0x42bf50
  42bf5f:	mov    DWORD PTR [rax+0x14],esi
  42bf62:	add    rsp,0x20
  42bf66:	pop    rbx
  42bf67:	pop    rsi
  42bf68:	pop    rdi
  42bf69:	pop    rbp
  42bf6a:	pop    r12
  42bf6c:	pop    r13
  42bf6e:	pop    r14
  42bf70:	ret    
  42bf71:	mov    r12,rdx
  42bf74:	mov    r14,rcx
  42bf77:	jmp    0x42be7d
  42bf7c:	xor    eax,eax
  42bf7e:	jmp    0x42bf62
  42bf80:	push   rbp
  42bf81:	push   rdi
  42bf82:	push   rsi
  42bf83:	push   rbx
  42bf84:	sub    rsp,0x28
  42bf88:	mov    eax,edx
  42bf8a:	mov    rbp,rcx
  42bf8d:	mov    ebx,edx
  42bf8f:	and    eax,0x3
  42bf92:	jne    0x42c020
  42bf98:	sar    ebx,0x2
  42bf9b:	mov    rax,rbp
  42bf9e:	test   ebx,ebx
  42bfa0:	je     0x42bfec
  42bfa2:	mov    rdi,QWORD PTR [rip+0x16c97]        # 0x442c40
  42bfa9:	test   rdi,rdi
  42bfac:	jne    0x42bfc2
  42bfae:	jmp    0x42c06d
  42bfb3:	sar    ebx,1
  42bfb5:	je     0x42bfe9
  42bfb7:	mov    rsi,QWORD PTR [rdi]
  42bfba:	test   rsi,rsi
  42bfbd:	je     0x42bff5
  42bfbf:	mov    rdi,rsi
  42bfc2:	test   bl,0x1
  42bfc5:	je     0x42bfb3
  42bfc7:	mov    rdx,rdi
  42bfca:	mov    rcx,rbp
  42bfcd:	call   0x42be50
  42bfd2:	test   rax,rax
  42bfd5:	mov    rsi,rax
  42bfd8:	je     0x42c043
  42bfda:	mov    rcx,rbp
  42bfdd:	mov    rbp,rsi
  42bfe0:	call   0x42bcf0
  42bfe5:	sar    ebx,1
  42bfe7:	jne    0x42bfb7
  42bfe9:	mov    rax,rbp
  42bfec:	add    rsp,0x28
  42bff0:	pop    rbx
  42bff1:	pop    rsi
  42bff2:	pop    rdi
  42bff3:	pop    rbp
  42bff4:	ret    
  42bff5:	mov    ecx,0x1
  42bffa:	call   0x42bac0
  42bfff:	mov    rsi,QWORD PTR [rdi]
  42c002:	test   rsi,rsi
  42c005:	je     0x42c04e
  42c007:	cmp    DWORD PTR [rip+0x175c2],0x2        # 0x4435d0
  42c00e:	jne    0x42bfbf
  42c010:	lea    rcx,[rip+0x17611]        # 0x443628
  42c017:	call   QWORD PTR [rip+0x18e63]        # 0x444e80
  42c01d:	jmp    0x42bfbf
  42c01f:	nop
  42c020:	sub    eax,0x1
  42c023:	lea    rdx,[rip+0x11096]        # 0x43d0c0
  42c02a:	xor    r8d,r8d
  42c02d:	cdqe   
  42c02f:	mov    edx,DWORD PTR [rdx+rax*4]
  42c032:	call   0x42bd60
  42c037:	test   rax,rax
  42c03a:	mov    rbp,rax
  42c03d:	jne    0x42bf98
  42c043:	xor    eax,eax
  42c045:	add    rsp,0x28
  42c049:	pop    rbx
  42c04a:	pop    rsi
  42c04b:	pop    rdi
  42c04c:	pop    rbp
  42c04d:	ret    
  42c04e:	mov    rdx,rdi
  42c051:	mov    rcx,rdi
  42c054:	call   0x42be50
  42c059:	test   rax,rax
  42c05c:	mov    rsi,rax
  42c05f:	mov    QWORD PTR [rdi],rax
  42c062:	je     0x42c043
  42c064:	mov    QWORD PTR [rax],0x0
  42c06b:	jmp    0x42c007
  42c06d:	mov    ecx,0x1
  42c072:	call   0x42bac0
  42c077:	mov    rdi,QWORD PTR [rip+0x16bc2]        # 0x442c40
  42c07e:	test   rdi,rdi
  42c081:	je     0x42c0a2
  42c083:	cmp    DWORD PTR [rip+0x17546],0x2        # 0x4435d0
  42c08a:	jne    0x42bfc2
  42c090:	lea    rcx,[rip+0x17591]        # 0x443628
  42c097:	call   QWORD PTR [rip+0x18de3]        # 0x444e80
  42c09d:	jmp    0x42bfc2
  42c0a2:	mov    ecx,0x1
  42c0a7:	call   0x42bbe0
  42c0ac:	test   rax,rax
  42c0af:	mov    rdi,rax
  42c0b2:	je     0x42c0d2
  42c0b4:	mov    DWORD PTR [rax+0x18],0x271
  42c0bb:	mov    DWORD PTR [rax+0x14],0x1
  42c0c2:	mov    QWORD PTR [rip+0x16b77],rax        # 0x442c40
  42c0c9:	mov    QWORD PTR [rax],0x0
  42c0d0:	jmp    0x42c083
  42c0d2:	mov    QWORD PTR [rip+0x16b63],0x0        # 0x442c40
  42c0dd:	xor    eax,eax
  42c0df:	jmp    0x42c045
  42c0e4:	xchg   ax,ax
  42c0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c0f0:	push   r13
  42c0f2:	push   r12
  42c0f4:	push   rbp
  42c0f5:	push   rdi
  42c0f6:	push   rsi
  42c0f7:	push   rbx
  42c0f8:	sub    rsp,0x28
  42c0fc:	mov    rdi,rcx
  42c0ff:	mov    ebp,edx
  42c101:	mov    esi,edx
  42c103:	mov    r12d,DWORD PTR [rdi+0x14]
  42c107:	sar    ebp,0x5
  42c10a:	mov    eax,DWORD PTR [rdi+0xc]
  42c10d:	mov    ecx,DWORD PTR [rcx+0x8]
  42c110:	add    r12d,ebp
  42c113:	lea    ebx,[r12+0x1]
  42c118:	cmp    ebx,eax
  42c11a:	jle    0x42c129
  42c11c:	nop    DWORD PTR [rax+0x0]
  42c120:	add    eax,eax
  42c122:	add    ecx,0x1
  42c125:	cmp    ebx,eax
  42c127:	jg     0x42c120
  42c129:	call   0x42bbe0
  42c12e:	test   rax,rax
  42c131:	mov    r13,rax
  42c134:	je     0x42c1ff
  42c13a:	test   ebp,ebp
  42c13c:	lea    r8,[rax+0x18]
  42c140:	jle    0x42c1f7
  42c146:	lea    eax,[rbp-0x1]
  42c149:	lea    r9,[r8+rax*4+0x4]
  42c14e:	xchg   ax,ax
  42c150:	add    r8,0x4
  42c154:	mov    DWORD PTR [r8-0x4],0x0
  42c15c:	cmp    r8,r9
  42c15f:	jne    0x42c150
  42c161:	movsxd rax,DWORD PTR [rdi+0x14]
  42c165:	lea    r8,[rdi+0x18]
  42c169:	mov    edx,esi
  42c16b:	and    edx,0x1f
  42c16e:	lea    rbp,[r8+rax*4]
  42c172:	je     0x42c1e0
  42c174:	mov    eax,0x20
  42c179:	xor    r11d,r11d
  42c17c:	sub    eax,edx
  42c17e:	jmp    0x42c183
  42c180:	mov    r9,rsi
  42c183:	mov    r10d,DWORD PTR [r8]
  42c186:	mov    ecx,edx
  42c188:	lea    rsi,[r9+0x4]
  42c18c:	add    r8,0x4
  42c190:	shl    r10d,cl
  42c193:	mov    ecx,eax
  42c195:	or     r10d,r11d
  42c198:	mov    DWORD PTR [rsi-0x4],r10d
  42c19c:	mov    r11d,DWORD PTR [r8-0x4]
  42c1a0:	shr    r11d,cl
  42c1a3:	cmp    rbp,r8
  42c1a6:	ja     0x42c180
  42c1a8:	add    r12d,0x2
  42c1ac:	test   r11d,r11d
  42c1af:	mov    DWORD PTR [r9+0x4],r11d
  42c1b3:	cmovne ebx,r12d
  42c1b7:	sub    ebx,0x1
  42c1ba:	mov    rcx,rdi
  42c1bd:	mov    DWORD PTR [r13+0x14],ebx
  42c1c1:	call   0x42bcf0
  42c1c6:	mov    rax,r13
  42c1c9:	add    rsp,0x28
  42c1cd:	pop    rbx
  42c1ce:	pop    rsi
  42c1cf:	pop    rdi
  42c1d0:	pop    rbp
  42c1d1:	pop    r12
  42c1d3:	pop    r13
  42c1d5:	ret    
  42c1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c1e0:	add    r8,0x4
  42c1e4:	mov    edx,DWORD PTR [r8-0x4]
  42c1e8:	add    r9,0x4
  42c1ec:	cmp    rbp,r8
  42c1ef:	mov    DWORD PTR [r9-0x4],edx
  42c1f3:	ja     0x42c1e0
  42c1f5:	jmp    0x42c1b7
  42c1f7:	mov    r9,r8
  42c1fa:	jmp    0x42c161
  42c1ff:	xor    eax,eax
  42c201:	jmp    0x42c1c9
  42c203:	nop    DWORD PTR [rax]
  42c206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c210:	movsxd r8,DWORD PTR [rdx+0x14]
  42c214:	mov    eax,DWORD PTR [rcx+0x14]
  42c217:	sub    eax,r8d
  42c21a:	test   eax,eax
  42c21c:	jne    0x42c252
  42c21e:	shl    r8,0x2
  42c222:	add    rcx,0x18
  42c226:	lea    rax,[rcx+r8*1]
  42c22a:	lea    rdx,[rdx+r8*1+0x18]
  42c22f:	jmp    0x42c236
  42c231:	cmp    rcx,rax
  42c234:	jae    0x42c250
  42c236:	sub    rdx,0x4
  42c23a:	sub    rax,0x4
  42c23e:	mov    r9d,DWORD PTR [rdx]
  42c241:	cmp    DWORD PTR [rax],r9d
  42c244:	je     0x42c231
  42c246:	sbb    eax,eax
  42c248:	or     eax,0x1
  42c24b:	ret    
  42c24c:	nop    DWORD PTR [rax+0x0]
  42c250:	xor    eax,eax
  42c252:	repz ret 
  42c254:	xchg   ax,ax
  42c256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c260:	push   rdi
  42c261:	push   rsi
  42c262:	push   rbx
  42c263:	sub    rsp,0x20
  42c267:	mov    rsi,rcx
  42c26a:	mov    rdi,rdx
  42c26d:	call   0x42c210
  42c272:	test   eax,eax
  42c274:	je     0x42c360
  42c27a:	mov    ebx,0x0
  42c27f:	js     0x42c382
  42c285:	mov    ecx,DWORD PTR [rsi+0x8]
  42c288:	call   0x42bbe0
  42c28d:	test   rax,rax
  42c290:	je     0x42c392
  42c296:	movsxd rdx,DWORD PTR [rsi+0x14]
  42c29a:	lea    rcx,[rsi+0x18]
  42c29e:	mov    DWORD PTR [rax+0x10],ebx
  42c2a1:	lea    r10,[rdi+0x18]
  42c2a5:	xor    r9d,r9d
  42c2a8:	mov    rbx,rdx
  42c2ab:	lea    rsi,[rcx+rdx*4]
  42c2af:	movsxd rdx,DWORD PTR [rdi+0x14]
  42c2b3:	lea    rdi,[r10+rdx*4]
  42c2b7:	lea    rdx,[rax+0x18]
  42c2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c2c0:	add    rcx,0x4
  42c2c4:	add    r10,0x4
  42c2c8:	mov    r11d,DWORD PTR [r10-0x4]
  42c2cc:	mov    r8d,DWORD PTR [rcx-0x4]
  42c2d0:	add    rdx,0x4
  42c2d4:	sub    r8,r11
  42c2d7:	sub    r8,r9
  42c2da:	mov    r9,r8
  42c2dd:	mov    r11d,r8d
  42c2e0:	mov    DWORD PTR [rdx-0x4],r8d
  42c2e4:	shr    r9,0x20
  42c2e8:	and    r9d,0x1
  42c2ec:	cmp    rdi,r10
  42c2ef:	ja     0x42c2c0
  42c2f1:	cmp    rsi,rcx
  42c2f4:	mov    rdi,rdx
  42c2f7:	mov    r10,rcx
  42c2fa:	jbe    0x42c336
  42c2fc:	nop    DWORD PTR [rax+0x0]
  42c300:	add    rcx,0x4
  42c304:	mov    r8d,DWORD PTR [rcx-0x4]
  42c308:	add    rdx,0x4
  42c30c:	sub    r8,r9
  42c30f:	mov    r9,r8
  42c312:	mov    r11d,r8d
  42c315:	mov    DWORD PTR [rdx-0x4],r8d
  42c319:	shr    r9,0x20
  42c31d:	and    r9d,0x1
  42c321:	cmp    rsi,rcx
  42c324:	ja     0x42c300
  42c326:	not    r10
  42c329:	lea    rdx,[r10+rsi*1]
  42c32d:	shr    rdx,0x2
  42c331:	lea    rdx,[rdi+rdx*4+0x4]
  42c336:	sub    rdx,0x4
  42c33a:	test   r11d,r11d
  42c33d:	jne    0x42c34d
  42c33f:	nop
  42c340:	sub    rdx,0x4
  42c344:	mov    ecx,DWORD PTR [rdx]
  42c346:	sub    ebx,0x1
  42c349:	test   ecx,ecx
  42c34b:	je     0x42c340
  42c34d:	mov    DWORD PTR [rax+0x14],ebx
  42c350:	add    rsp,0x20
  42c354:	pop    rbx
  42c355:	pop    rsi
  42c356:	pop    rdi
  42c357:	ret    
  42c358:	nop    DWORD PTR [rax+rax*1+0x0]
  42c360:	xor    ecx,ecx
  42c362:	call   0x42bbe0
  42c367:	test   rax,rax
  42c36a:	je     0x42c392
  42c36c:	mov    DWORD PTR [rax+0x14],0x1
  42c373:	mov    DWORD PTR [rax+0x18],0x0
  42c37a:	add    rsp,0x20
  42c37e:	pop    rbx
  42c37f:	pop    rsi
  42c380:	pop    rdi
  42c381:	ret    
  42c382:	mov    rax,rsi
  42c385:	mov    bl,0x1
  42c387:	mov    rsi,rdi
  42c38a:	mov    rdi,rax
  42c38d:	jmp    0x42c285
  42c392:	xor    eax,eax
  42c394:	jmp    0x42c350
  42c396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c3a0:	push   rsi
  42c3a1:	push   rbx
  42c3a2:	sub    rsp,0x18
  42c3a6:	movsxd rax,DWORD PTR [rcx+0x14]
  42c3aa:	lea    r10,[rcx+0x18]
  42c3ae:	mov    ecx,0x20
  42c3b3:	lea    r9,[r10+rax*4]
  42c3b7:	mov    eax,DWORD PTR [r9-0x4]
  42c3bb:	lea    rbx,[r9-0x4]
  42c3bf:	bsr    r8d,eax
  42c3c3:	xor    r8d,0x1f
  42c3c7:	sub    ecx,r8d
  42c3ca:	cmp    r8d,0xa
  42c3ce:	mov    DWORD PTR [rdx],ecx
  42c3d0:	jg     0x42c420
  42c3d2:	mov    ecx,0xb
  42c3d7:	mov    r11d,eax
  42c3da:	xor    esi,esi
  42c3dc:	sub    ecx,r8d
  42c3df:	shr    r11d,cl
  42c3e2:	or     r11d,0x3ff00000
  42c3e9:	shl    r11,0x20
  42c3ed:	cmp    r10,rbx
  42c3f0:	jae    0x42c3f8
  42c3f2:	mov    esi,DWORD PTR [r9-0x8]
  42c3f6:	shr    esi,cl
  42c3f8:	lea    ecx,[r8+0x15]
  42c3fc:	shl    eax,cl
  42c3fe:	mov    edx,eax
  42c400:	mov    eax,esi
  42c402:	or     eax,edx
  42c404:	or     rax,r11
  42c407:	mov    QWORD PTR [rsp+0x8],rax
  42c40c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  42c412:	add    rsp,0x18
  42c416:	pop    rbx
  42c417:	pop    rsi
  42c418:	ret    
  42c419:	nop    DWORD PTR [rax+0x0]
  42c420:	cmp    r10,rbx
  42c423:	jae    0x42c480
  42c425:	mov    r11d,r8d
  42c428:	lea    rsi,[r9-0x8]
  42c42c:	mov    edx,DWORD PTR [r9-0x8]
  42c430:	sub    r11d,0xb
  42c434:	je     0x42c4a2
  42c436:	mov    ebx,0x2b
  42c43b:	mov    ecx,r11d
  42c43e:	sub    ebx,r8d
  42c441:	shl    eax,cl
  42c443:	mov    r8d,edx
  42c446:	mov    ecx,ebx
  42c448:	shr    r8d,cl
  42c44b:	or     eax,r8d
  42c44e:	xor    r8d,r8d
  42c451:	or     eax,0x3ff00000
  42c456:	shl    rax,0x20
  42c45a:	cmp    r10,rsi
  42c45d:	jae    0x42c466
  42c45f:	mov    r8d,DWORD PTR [r9-0xc]
  42c463:	shr    r8d,cl
  42c466:	mov    ecx,r11d
  42c469:	shl    edx,cl
  42c46b:	or     r8d,edx
  42c46e:	movabs rdx,0xffffffff00000000
  42c478:	and    rax,rdx
  42c47b:	or     rax,r8
  42c47e:	jmp    0x42c407
  42c480:	mov    r11d,r8d
  42c483:	sub    r11d,0xb
  42c487:	je     0x42c4a0
  42c489:	mov    ecx,r11d
  42c48c:	xor    r8d,r8d
  42c48f:	xor    edx,edx
  42c491:	shl    eax,cl
  42c493:	or     eax,0x3ff00000
  42c498:	shl    rax,0x20
  42c49c:	jmp    0x42c466
  42c49e:	xchg   ax,ax
  42c4a0:	xor    edx,edx
  42c4a2:	or     eax,0x3ff00000
  42c4a7:	shl    rax,0x20
  42c4ab:	or     rax,rdx
  42c4ae:	jmp    0x42c407
  42c4b3:	nop    DWORD PTR [rax]
  42c4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4c0:	push   rdi
  42c4c1:	push   rsi
  42c4c2:	push   rbx
  42c4c3:	sub    rsp,0x20
  42c4c7:	mov    ecx,0x1
  42c4cc:	movq   rbx,xmm0
  42c4d1:	mov    rdi,rdx
  42c4d4:	mov    rsi,r8
  42c4d7:	call   0x42bbe0
  42c4dc:	test   rax,rax
  42c4df:	je     0x42c5c5
  42c4e5:	mov    r9,rbx
  42c4e8:	shr    r9,0x20
  42c4ec:	mov    r10d,r9d
  42c4ef:	and    r9d,0x7fffffff
  42c4f6:	and    r10d,0xfffff
  42c4fd:	shr    r9d,0x14
  42c501:	mov    edx,r10d
  42c504:	or     edx,0x100000
  42c50a:	test   r9d,r9d
  42c50d:	cmovne r10d,edx
  42c511:	test   ebx,ebx
  42c513:	jne    0x42c554
  42c515:	xor    ecx,ecx
  42c517:	mov    DWORD PTR [rax+0x14],0x1
  42c51e:	mov    edx,0x1
  42c523:	tzcnt  ecx,r10d
  42c528:	shr    r10d,cl
  42c52b:	test   r9d,r9d
  42c52e:	lea    r11d,[rcx+0x20]
  42c532:	mov    DWORD PTR [rax+0x18],r10d
  42c536:	je     0x42c593
  42c538:	lea    edx,[r11+r9*1-0x433]
  42c540:	mov    DWORD PTR [rdi],edx
  42c542:	mov    edx,0x35
  42c547:	sub    edx,r11d
  42c54a:	mov    DWORD PTR [rsi],edx
  42c54c:	add    rsp,0x20
  42c550:	pop    rbx
  42c551:	pop    rsi
  42c552:	pop    rdi
  42c553:	ret    
  42c554:	xor    r11d,r11d
  42c557:	tzcnt  r11d,ebx
  42c55c:	mov    ecx,r11d
  42c55f:	shr    ebx,cl
  42c561:	test   r11d,r11d
  42c564:	je     0x42c5c0
  42c566:	mov    ecx,0x20
  42c56b:	mov    edx,r10d
  42c56e:	sub    ecx,r11d
  42c571:	shl    edx,cl
  42c573:	mov    ecx,r11d
  42c576:	or     ebx,edx
  42c578:	shr    r10d,cl
  42c57b:	mov    DWORD PTR [rax+0x18],ebx
  42c57e:	cmp    r10d,0x1
  42c582:	mov    DWORD PTR [rax+0x1c],r10d
  42c586:	sbb    edx,edx
  42c588:	add    edx,0x2
  42c58b:	test   r9d,r9d
  42c58e:	mov    DWORD PTR [rax+0x14],edx
  42c591:	jne    0x42c538
  42c593:	movsxd rcx,edx
  42c596:	shl    edx,0x5
  42c599:	sub    r11d,0x432
  42c5a0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  42c5a5:	mov    DWORD PTR [rdi],r11d
  42c5a8:	xor    ecx,0x1f
  42c5ab:	sub    edx,ecx
  42c5ad:	mov    DWORD PTR [rsi],edx
  42c5af:	add    rsp,0x20
  42c5b3:	pop    rbx
  42c5b4:	pop    rsi
  42c5b5:	pop    rdi
  42c5b6:	ret    
  42c5b7:	nop    WORD PTR [rax+rax*1+0x0]
  42c5c0:	mov    DWORD PTR [rax+0x18],ebx
  42c5c3:	jmp    0x42c57e
  42c5c5:	xor    eax,eax
  42c5c7:	jmp    0x42c54c
  42c5c9:	nop    DWORD PTR [rax+0x0]
  42c5d0:	mov    rax,rcx
  42c5d3:	lea    rcx,[rdx+0x1]
  42c5d7:	movzx  edx,BYTE PTR [rdx]
  42c5da:	test   dl,dl
  42c5dc:	mov    BYTE PTR [rax],dl
  42c5de:	je     0x42c5f2
  42c5e0:	add    rcx,0x1
  42c5e4:	movzx  edx,BYTE PTR [rcx-0x1]
  42c5e8:	add    rax,0x1
  42c5ec:	test   dl,dl
  42c5ee:	mov    BYTE PTR [rax],dl
  42c5f0:	jne    0x42c5e0
  42c5f2:	repz ret 
  42c5f4:	nop
  42c5f5:	nop
  42c5f6:	nop
  42c5f7:	nop
  42c5f8:	nop
  42c5f9:	nop
  42c5fa:	nop
  42c5fb:	nop
  42c5fc:	nop
  42c5fd:	nop
  42c5fe:	nop
  42c5ff:	nop
  42c600:	push   rsi
  42c601:	push   rbx
  42c602:	sub    rsp,0x28
  42c606:	movsxd rax,DWORD PTR [rcx+0x14]
  42c60a:	lea    rdx,[rcx+0x18]
  42c60e:	mov    rbx,rcx
  42c611:	lea    r9,[rdx+rax*4]
  42c615:	mov    rcx,rax
  42c618:	jmp    0x42c630
  42c61a:	nop    WORD PTR [rax+rax*1+0x0]
  42c620:	add    rdx,0x4
  42c624:	mov    DWORD PTR [rdx-0x4],0x0
  42c62b:	cmp    r9,rdx
  42c62e:	jbe    0x42c650
  42c630:	mov    r8d,DWORD PTR [rdx]
  42c633:	cmp    r8d,0xffffffff
  42c637:	je     0x42c620
  42c639:	add    r8d,0x1
  42c63d:	mov    rax,rbx
  42c640:	mov    DWORD PTR [rdx],r8d
  42c643:	add    rsp,0x28
  42c647:	pop    rbx
  42c648:	pop    rsi
  42c649:	ret    
  42c64a:	nop    WORD PTR [rax+rax*1+0x0]
  42c650:	cmp    ecx,DWORD PTR [rbx+0xc]
  42c653:	jge    0x42c670
  42c655:	add    ecx,0x1
  42c658:	mov    DWORD PTR [rbx+0x14],ecx
  42c65b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  42c663:	mov    rax,rbx
  42c666:	add    rsp,0x28
  42c66a:	pop    rbx
  42c66b:	pop    rsi
  42c66c:	ret    
  42c66d:	nop    DWORD PTR [rax]
  42c670:	mov    eax,DWORD PTR [rbx+0x8]
  42c673:	lea    ecx,[rax+0x1]
  42c676:	call   0x42bbe0
  42c67b:	mov    rsi,rax
  42c67e:	lea    rcx,[rax+0x10]
  42c682:	movsxd rax,DWORD PTR [rbx+0x14]
  42c686:	lea    rdx,[rbx+0x10]
  42c68a:	lea    r8,[rax*4+0x8]
  42c692:	call   0x42fb40
  42c697:	mov    rcx,rbx
  42c69a:	mov    rbx,rsi
  42c69d:	call   0x42bcf0
  42c6a2:	movsxd rax,DWORD PTR [rsi+0x14]
  42c6a6:	mov    rcx,rax
  42c6a9:	jmp    0x42c655
  42c6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6b0:	push   r15
  42c6b2:	push   r14
  42c6b4:	push   r13
  42c6b6:	push   r12
  42c6b8:	push   rbp
  42c6b9:	push   rdi
  42c6ba:	push   rsi
  42c6bb:	push   rbx
  42c6bc:	sub    rsp,0x48
  42c6c0:	mov    rdi,rdx
  42c6c3:	mov    r12,r8
  42c6c6:	lea    rdx,[rsp+0x3c]
  42c6cb:	lea    r8,[rsp+0x38]
  42c6d0:	movsd  xmm0,QWORD PTR [rcx]
  42c6d4:	mov    r13,r9
  42c6d7:	call   0x42c4c0
  42c6dc:	mov    r10d,DWORD PTR [rsp+0x38]
  42c6e1:	mov    esi,DWORD PTR [rdi]
  42c6e3:	mov    rbx,rax
  42c6e6:	mov    edx,DWORD PTR [rsp+0x3c]
  42c6ea:	sub    r10d,esi
  42c6ed:	add    edx,r10d
  42c6f0:	test   r10d,r10d
  42c6f3:	mov    DWORD PTR [rsp+0x38],r10d
  42c6f8:	mov    DWORD PTR [rsp+0x3c],edx
  42c6fc:	jle    0x42c8c0
  42c702:	cmp    esi,0x35
  42c705:	je     0x42c8f0
  42c70b:	cmp    DWORD PTR [rsp+0xb8],0x1
  42c713:	je     0x42c7c4
  42c719:	cmp    DWORD PTR [rsp+0xb8],0x2
  42c721:	je     0x42c750
  42c723:	mov    eax,r10d
  42c726:	sub    eax,0x1
  42c729:	jne    0x42c9c0
  42c72f:	mov    ecx,DWORD PTR [rsp+0xb0]
  42c736:	xor    r15d,r15d
  42c739:	test   ecx,ecx
  42c73b:	je     0x42c847
  42c741:	test   BYTE PTR [rbx+0x18],0x2
  42c745:	je     0x42c90e
  42c74b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c750:	mov    edx,r10d
  42c753:	mov    rcx,rbx
  42c756:	call   0x42f9d0
  42c75b:	mov    edx,DWORD PTR [rsp+0x38]
  42c75f:	mov    rcx,rbx
  42c762:	mov    r14d,eax
  42c765:	call   0x42b980
  42c76a:	mov    rcx,rbx
  42c76d:	call   0x42c600
  42c772:	mov    edx,esi
  42c774:	mov    rbx,rax
  42c777:	and    edx,0x1f
  42c77a:	jne    0x42c9b0
  42c780:	mov    eax,DWORD PTR [rbx+0x14]
  42c783:	sub    eax,0x1
  42c786:	cdqe   
  42c788:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  42c78d:	xor    eax,0x1f
  42c790:	cmp    edx,eax
  42c792:	je     0x42ca40
  42c798:	test   r14d,r14d
  42c79b:	jne    0x42c7a5
  42c79d:	mov    r14d,DWORD PTR [rbx+0x18]
  42c7a1:	and    r14d,0x1
  42c7a5:	mov    edx,0x1
  42c7aa:	mov    rcx,rbx
  42c7ad:	mov    ebp,0x20
  42c7b2:	call   0x42b980
  42c7b7:	mov    eax,DWORD PTR [rsp+0x3c]
  42c7bb:	lea    edx,[rax+0x1]
  42c7be:	mov    DWORD PTR [rsp+0x3c],edx
  42c7c2:	jmp    0x42c7ef
  42c7c4:	mov    edx,r10d
  42c7c7:	mov    rcx,rax
  42c7ca:	call   0x42f9d0
  42c7cf:	test   eax,eax
  42c7d1:	mov    r14d,eax
  42c7d4:	jne    0x42c863
  42c7da:	mov    edx,DWORD PTR [rsp+0x38]
  42c7de:	mov    rcx,rbx
  42c7e1:	xor    r14d,r14d
  42c7e4:	xor    ebp,ebp
  42c7e6:	call   0x42b980
  42c7eb:	mov    edx,DWORD PTR [rsp+0x3c]
  42c7ef:	mov    eax,DWORD PTR [rdi+0x4]
  42c7f2:	cmp    eax,edx
  42c7f4:	jle    0x42c880
  42c7fa:	mov    r8d,eax
  42c7fd:	mov    DWORD PTR [rsp+0x3c],eax
  42c801:	sub    r8d,edx
  42c804:	cmp    esi,r8d
  42c807:	jge    0x42c940
  42c80d:	mov    rdi,QWORD PTR [rsp+0xc0]
  42c815:	mov    DWORD PTR [rbx+0x14],0x0
  42c81c:	mov    edx,eax
  42c81e:	xor    ebp,ebp
  42c820:	mov    DWORD PTR [rdi],0x50
  42c826:	mov    DWORD PTR [r12],edx
  42c82a:	mov    r8,rbx
  42c82d:	mov    edx,esi
  42c82f:	mov    rcx,r13
  42c832:	mov    r15d,0x1
  42c838:	call   0x42f960
  42c83d:	mov    rax,QWORD PTR [rsp+0xc0]
  42c845:	or     DWORD PTR [rax],ebp
  42c847:	mov    rcx,rbx
  42c84a:	call   0x42bcf0
  42c84f:	mov    eax,r15d
  42c852:	add    rsp,0x48
  42c856:	pop    rbx
  42c857:	pop    rsi
  42c858:	pop    rdi
  42c859:	pop    rbp
  42c85a:	pop    r12
  42c85c:	pop    r13
  42c85e:	pop    r14
  42c860:	pop    r15
  42c862:	ret    
  42c863:	mov    edx,DWORD PTR [rsp+0x38]
  42c867:	mov    rcx,rbx
  42c86a:	mov    ebp,0x10
  42c86f:	call   0x42b980
  42c874:	jmp    0x42c7eb
  42c879:	nop    DWORD PTR [rax+0x0]
  42c880:	mov    eax,DWORD PTR [rdi+0x8]
  42c883:	cmp    eax,edx
  42c885:	jge    0x42c826
  42c887:	add    eax,0x1
  42c88a:	xor    ebp,ebp
  42c88c:	mov    DWORD PTR [rsp+0x3c],eax
  42c890:	mov    rax,QWORD PTR [rsp+0xc0]
  42c898:	mov    DWORD PTR [rax],0xa3
  42c89e:	call   0x42fc38
  42c8a3:	mov    DWORD PTR [rax],0x22
  42c8a9:	mov    DWORD PTR [rbx+0x14],0x0
  42c8b0:	mov    edx,DWORD PTR [rsp+0x3c]
  42c8b4:	jmp    0x42c826
  42c8b9:	nop    DWORD PTR [rax+0x0]
  42c8c0:	mov    r9d,DWORD PTR [rsp+0xb0]
  42c8c8:	xor    r15d,r15d
  42c8cb:	test   r9d,r9d
  42c8ce:	je     0x42c847
  42c8d4:	test   r10d,r10d
  42c8d7:	jne    0x42ca20
  42c8dd:	xor    r14d,r14d
  42c8e0:	xor    ebp,ebp
  42c8e2:	jmp    0x42c7ef
  42c8e7:	nop    WORD PTR [rax+rax*1+0x0]
  42c8f0:	mov    r8d,DWORD PTR [rsp+0xb0]
  42c8f8:	xor    r15d,r15d
  42c8fb:	test   r8d,r8d
  42c8fe:	je     0x42c847
  42c904:	cmp    DWORD PTR [rdi+0xc],0x1
  42c908:	jne    0x42c847
  42c90e:	mov    edx,r10d
  42c911:	mov    rcx,rbx
  42c914:	call   0x42f9d0
  42c919:	test   eax,eax
  42c91b:	mov    r14d,eax
  42c91e:	je     0x42c7da
  42c924:	mov    edx,DWORD PTR [rsp+0x38]
  42c928:	mov    rcx,rbx
  42c92b:	mov    ebp,0x10
  42c930:	call   0x42b980
  42c935:	mov    edx,DWORD PTR [rsp+0x3c]
  42c939:	jmp    0x42c7ef
  42c93e:	xchg   ax,ax
  42c940:	mov    edx,DWORD PTR [rdi+0x10]
  42c943:	test   edx,edx
  42c945:	jne    0x42c80d
  42c94b:	lea    edi,[r8-0x1]
  42c94f:	test   r14d,r14d
  42c952:	sete   al
  42c955:	test   edi,edi
  42c957:	jle    0x42c9fc
  42c95d:	test   al,al
  42c95f:	jne    0x42c9e0
  42c961:	mov    ecx,edi
  42c963:	sar    edi,0x5
  42c966:	mov    eax,0x1
  42c96b:	movsxd rdi,edi
  42c96e:	shl    eax,cl
  42c970:	mov    edx,r8d
  42c973:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  42c977:	mov    rcx,rbx
  42c97a:	mov    edi,eax
  42c97c:	call   0x42b980
  42c981:	mov    rax,QWORD PTR [rsp+0xc0]
  42c989:	test   edi,edi
  42c98b:	mov    DWORD PTR [rax],0x2
  42c991:	jne    0x42ca50
  42c997:	test   r14d,r14d
  42c99a:	mov    edx,DWORD PTR [rsp+0x3c]
  42c99e:	je     0x42c826
  42c9a4:	mov    ebp,0x50
  42c9a9:	jmp    0x42c826
  42c9ae:	xchg   ax,ax
  42c9b0:	mov    eax,0x20
  42c9b5:	sub    eax,edx
  42c9b7:	mov    edx,eax
  42c9b9:	jmp    0x42c780
  42c9be:	xchg   ax,ax
  42c9c0:	mov    edx,eax
  42c9c2:	sar    edx,0x5
  42c9c5:	movsxd rdx,edx
  42c9c8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  42c9cc:	bt     edx,eax
  42c9cf:	jb     0x42c750
  42c9d5:	jmp    0x42c90e
  42c9da:	nop    WORD PTR [rax+rax*1+0x0]
  42c9e0:	mov    edx,edi
  42c9e2:	mov    rcx,rbx
  42c9e5:	mov    DWORD PTR [rsp+0x2c],r8d
  42c9ea:	call   0x42f9d0
  42c9ef:	mov    r8d,DWORD PTR [rsp+0x2c]
  42c9f4:	test   eax,eax
  42c9f6:	mov    r14d,eax
  42c9f9:	sete   al
  42c9fc:	test   al,al
  42c9fe:	je     0x42c961
  42ca04:	mov    eax,DWORD PTR [rsp+0xb0]
  42ca0b:	xor    r15d,r15d
  42ca0e:	test   eax,eax
  42ca10:	je     0x42c847
  42ca16:	jmp    0x42c961
  42ca1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ca20:	mov    edx,r10d
  42ca23:	mov    rcx,rbx
  42ca26:	neg    edx
  42ca28:	call   0x42c0f0
  42ca2d:	mov    edx,DWORD PTR [rsp+0x3c]
  42ca31:	mov    rbx,rax
  42ca34:	jmp    0x42c8dd
  42ca39:	nop    DWORD PTR [rax+0x0]
  42ca40:	mov    edx,DWORD PTR [rsp+0x3c]
  42ca44:	mov    ebp,0x20
  42ca49:	jmp    0x42c7ef
  42ca4e:	xchg   ax,ax
  42ca50:	mov    rcx,rbx
  42ca53:	mov    ebp,0x60
  42ca58:	call   0x42c600
  42ca5d:	mov    edx,DWORD PTR [rsp+0x3c]
  42ca61:	mov    rbx,rax
  42ca64:	jmp    0x42c826
  42ca69:	nop    DWORD PTR [rax+0x0]
  42ca70:	movsxd rdx,DWORD PTR [rcx+0x14]
  42ca74:	lea    rax,[rcx+0x18]
  42ca78:	lea    rcx,[rax+rdx*4]
  42ca7c:	jmp    0x42ca90
  42ca7e:	xchg   ax,ax
  42ca80:	add    rax,0x4
  42ca84:	mov    DWORD PTR [rax-0x4],0xffffffff
  42ca8b:	cmp    rcx,rax
  42ca8e:	jbe    0x42caa0
  42ca90:	mov    edx,DWORD PTR [rax]
  42ca92:	test   edx,edx
  42ca94:	je     0x42ca80
  42ca96:	sub    edx,0x1
  42ca99:	mov    DWORD PTR [rax],edx
  42ca9b:	ret    
  42ca9c:	nop    DWORD PTR [rax+0x0]
  42caa0:	repz ret 
  42caa2:	nop    DWORD PTR [rax+0x0]
  42caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cab0:	push   rbx
  42cab1:	sub    rsp,0x30
  42cab5:	lea    ebx,[rdx+0x1f]
  42cab8:	mov    rax,rcx
  42cabb:	sar    ebx,0x5
  42cabe:	cmp    ebx,DWORD PTR [rcx+0x8]
  42cac1:	jg     0x42cb40
  42cac3:	mov    r9d,edx
  42cac6:	sar    r9d,0x5
  42caca:	and    edx,0x1f
  42cacd:	je     0x42cb20
  42cacf:	add    r9d,0x1
  42cad3:	lea    r8,[rax+0x18]
  42cad7:	mov    DWORD PTR [rax+0x14],r9d
  42cadb:	movsxd r9,r9d
  42cade:	lea    r9,[r8+r9*4]
  42cae2:	cmp    r8,r9
  42cae5:	jae    0x42cb05
  42cae7:	nop    WORD PTR [rax+rax*1+0x0]
  42caf0:	add    r8,0x4
  42caf4:	mov    DWORD PTR [r8-0x4],0xffffffff
  42cafc:	cmp    r8,r9
  42caff:	jb     0x42caf0
  42cb01:	test   edx,edx
  42cb03:	je     0x42cb10
  42cb05:	mov    ecx,0x20
  42cb0a:	sub    ecx,edx
  42cb0c:	shr    DWORD PTR [r8-0x4],cl
  42cb10:	add    rsp,0x30
  42cb14:	pop    rbx
  42cb15:	ret    
  42cb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb20:	lea    r8,[rax+0x18]
  42cb24:	mov    DWORD PTR [rax+0x14],r9d
  42cb28:	movsxd r9,r9d
  42cb2b:	lea    r9,[r8+r9*4]
  42cb2f:	cmp    r8,r9
  42cb32:	jb     0x42caf0
  42cb34:	jmp    0x42cb10
  42cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb40:	mov    DWORD PTR [rsp+0x2c],edx
  42cb44:	call   0x42bcf0
  42cb49:	mov    ecx,ebx
  42cb4b:	call   0x42bbe0
  42cb50:	mov    edx,DWORD PTR [rsp+0x2c]
  42cb54:	jmp    0x42cac3
  42cb59:	nop    DWORD PTR [rax+0x0]
  42cb60:	push   r15
  42cb62:	push   r14
  42cb64:	push   r13
  42cb66:	push   r12
  42cb68:	push   rbp
  42cb69:	push   rdi
  42cb6a:	push   rsi
  42cb6b:	push   rbx
  42cb6c:	sub    rsp,0x138
  42cb73:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  42cb7b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  42cb83:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  42cb8c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  42cb95:	movaps XMMWORD PTR [rsp+0x110],xmm10
  42cb9e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  42cba7:	mov    rdi,rcx
  42cbaa:	mov    QWORD PTR [rsp+0x190],r8
  42cbb2:	mov    QWORD PTR [rsp+0x188],rdx
  42cbba:	mov    QWORD PTR [rsp+0x198],r9
  42cbc2:	call   0x42fb58
  42cbc7:	mov    rbp,QWORD PTR [rax]
  42cbca:	mov    rcx,rbp
  42cbcd:	call   0x42fad8
  42cbd2:	mov    r14,rax
  42cbd5:	mov    rax,QWORD PTR [rsp+0x190]
  42cbdd:	mov    DWORD PTR [rsp+0xa4],0x0
  42cbe8:	mov    QWORD PTR [rsp+0xb0],0x0
  42cbf4:	mov    QWORD PTR [rsp+0xc8],0x0
  42cc00:	lea    rcx,[rip+0x10645]        # 0x43d24c
  42cc07:	mov    QWORD PTR [rsp+0xc0],rdi
  42cc0f:	mov    eax,DWORD PTR [rax]
  42cc11:	mov    DWORD PTR [rsp+0x40],eax
  42cc15:	mov    rax,rdi
  42cc18:	movzx  r8d,BYTE PTR [rax]
  42cc1c:	cmp    r8b,0x2d
  42cc20:	ja     0x42cdd0
  42cc26:	movzx  edx,r8b
  42cc2a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  42cc2e:	add    rdx,rcx
  42cc31:	jmp    rdx
  42cc33:	mov    DWORD PTR [rsp+0xa4],0x6
  42cc3e:	mov    QWORD PTR [rsp+0xc0],rdi
  42cc46:	xor    r8d,r8d
  42cc49:	mov    DWORD PTR [rsp+0x58],0x0
  42cc51:	cmp    QWORD PTR [rsp+0x188],0x0
  42cc5a:	je     0x42cc6f
  42cc5c:	mov    rax,QWORD PTR [rsp+0xc0]
  42cc64:	mov    rsi,QWORD PTR [rsp+0x188]
  42cc6c:	mov    QWORD PTR [rsi],rax
  42cc6f:	mov    eax,DWORD PTR [rsp+0x58]
  42cc73:	test   eax,eax
  42cc75:	jne    0x42ccf0
  42cc77:	test   r8,r8
  42cc7a:	je     0x42cc9a
  42cc7c:	mov    rcx,QWORD PTR [rsp+0x1a0]
  42cc84:	mov    edx,DWORD PTR [rsp+0x40]
  42cc88:	call   0x42f960
  42cc8d:	mov    rcx,QWORD PTR [rsp+0xc8]
  42cc95:	call   0x42bcf0
  42cc9a:	mov    eax,DWORD PTR [rsp+0xa4]
  42cca1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  42cca9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  42ccb1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  42ccba:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  42ccc3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  42cccc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  42ccd5:	add    rsp,0x138
  42ccdc:	pop    rbx
  42ccdd:	pop    rsi
  42ccde:	pop    rdi
  42ccdf:	pop    rbp
  42cce0:	pop    r12
  42cce2:	pop    r13
  42cce4:	pop    r14
  42cce6:	pop    r15
  42cce8:	ret    
  42cce9:	nop    DWORD PTR [rax+0x0]
  42ccf0:	or     DWORD PTR [rsp+0xa4],0x8
  42ccf8:	jmp    0x42cc77
  42ccfd:	nop    DWORD PTR [rax]
  42cd00:	mov    rdx,rax
  42cd03:	mov    DWORD PTR [rsp+0x58],0x0
  42cd0b:	add    rax,0x1
  42cd0f:	mov    QWORD PTR [rsp+0xc0],rax
  42cd17:	movzx  r8d,BYTE PTR [rdx+0x1]
  42cd1c:	test   r8b,r8b
  42cd1f:	je     0x42cc33
  42cd25:	xor    r12d,r12d
  42cd28:	cmp    r8b,0x30
  42cd2c:	mov    r15,rax
  42cd2f:	je     0x42cde8
  42cd35:	mov    rax,QWORD PTR [rsp+0x190]
  42cd3d:	mov    eax,DWORD PTR [rax+0x10]
  42cd40:	mov    DWORD PTR [rsp+0x84],eax
  42cd47:	movsx  eax,r8b
  42cd4b:	lea    edx,[rax-0x30]
  42cd4e:	cmp    edx,0x9
  42cd51:	ja     0x42ce43
  42cd57:	lea    rcx,[r15+0x1]
  42cd5b:	xor    edx,edx
  42cd5d:	xor    esi,esi
  42cd5f:	xor    ebx,ebx
  42cd61:	jmp    0x42cd95
  42cd63:	lea    eax,[rsi+rsi*4]
  42cd66:	movsx  r8d,r8b
  42cd6a:	lea    esi,[r8+rax*2-0x30]
  42cd6f:	mov    QWORD PTR [rsp+0xc0],rcx
  42cd77:	movsx  eax,BYTE PTR [rcx]
  42cd7a:	add    ebx,0x1
  42cd7d:	mov    r9,rcx
  42cd80:	lea    rcx,[rcx+0x1]
  42cd84:	lea    r10d,[rax-0x30]
  42cd88:	mov    r8d,eax
  42cd8b:	cmp    r10d,0x9
  42cd8f:	ja     0x42ce50
  42cd95:	cmp    ebx,0x8
  42cd98:	jle    0x42cd63
  42cd9a:	cmp    ebx,0xf
  42cd9d:	jg     0x42cd6f
  42cd9f:	lea    eax,[rdx+rdx*4]
  42cda2:	movsx  r8d,r8b
  42cda6:	lea    edx,[r8+rax*2-0x30]
  42cdab:	jmp    0x42cd6f
  42cdad:	nop    DWORD PTR [rax]
  42cdb0:	add    rax,0x1
  42cdb4:	mov    QWORD PTR [rsp+0xc0],rax
  42cdbc:	movzx  r8d,BYTE PTR [rax]
  42cdc0:	cmp    r8b,0x2d
  42cdc4:	jbe    0x42cc26
  42cdca:	nop    WORD PTR [rax+rax*1+0x0]
  42cdd0:	xor    r12d,r12d
  42cdd3:	cmp    r8b,0x30
  42cdd7:	mov    DWORD PTR [rsp+0x58],0x0
  42cddf:	mov    r15,rax
  42cde2:	jne    0x42cd35
  42cde8:	movzx  edx,BYTE PTR [rax+0x1]
  42cdec:	cmp    dl,0x58
  42cdef:	je     0x42dfaf
  42cdf5:	add    rax,0x1
  42cdf9:	cmp    dl,0x78
  42cdfc:	je     0x42dfaf
  42ce02:	mov    r15,rax
  42ce05:	mov    QWORD PTR [rsp+0xc0],rax
  42ce0d:	add    rax,0x1
  42ce11:	movzx  edx,BYTE PTR [rax-0x1]
  42ce15:	cmp    dl,0x30
  42ce18:	je     0x42ce02
  42ce1a:	xor    r8d,r8d
  42ce1d:	test   dl,dl
  42ce1f:	je     0x42cc51
  42ce25:	mov    r8d,edx
  42ce28:	mov    r12d,0x1
  42ce2e:	jmp    0x42cd35
  42ce33:	mov    rdx,rax
  42ce36:	mov    DWORD PTR [rsp+0x58],0x1
  42ce3e:	jmp    0x42cd0b
  42ce43:	mov    r9,r15
  42ce46:	xor    edx,edx
  42ce48:	xor    esi,esi
  42ce4a:	xor    ebx,ebx
  42ce4c:	nop    DWORD PTR [rax+0x0]
  42ce50:	movsx  ecx,BYTE PTR [rbp+0x0]
  42ce54:	cmp    ecx,eax
  42ce56:	je     0x42d254
  42ce5c:	mov    ebp,ebx
  42ce5e:	xor    ecx,ecx
  42ce60:	xor    r13d,r13d
  42ce63:	xor    r11d,r11d
  42ce66:	mov    r8d,eax
  42ce69:	and    r8d,0xffffffdf
  42ce6d:	cmp    r8d,0x45
  42ce71:	je     0x42cf70
  42ce77:	xor    r8d,r8d
  42ce7a:	test   ebp,ebp
  42ce7c:	jne    0x42d0e5
  42ce82:	or     ecx,r12d
  42ce85:	jne    0x42d0d8
  42ce8b:	test   r11d,r11d
  42ce8e:	jne    0x42d0a3
  42ce94:	cmp    eax,0x4e
  42ce97:	je     0x42ceb1
  42ce99:	jle    0x42d09a
  42ce9f:	cmp    eax,0x69
  42cea2:	je     0x42e23a
  42cea8:	cmp    eax,0x6e
  42ceab:	jne    0x42d0a3
  42ceb1:	lea    rbx,[rsp+0xc0]
  42ceb9:	lea    rdx,[rip+0x10389]        # 0x43d249
  42cec0:	mov    rcx,rbx
  42cec3:	call   0x42f910
  42cec8:	test   eax,eax
  42ceca:	je     0x42d0a3
  42ced0:	mov    rax,QWORD PTR [rsp+0x190]
  42ced8:	mov    rsi,QWORD PTR [rsp+0x198]
  42cee0:	xor    ebp,ebp
  42cee2:	mov    rdx,QWORD PTR [rsp+0xc0]
  42ceea:	mov    DWORD PTR [rsp+0xa4],0x4
  42cef5:	mov    eax,DWORD PTR [rax+0x8]
  42cef8:	mov    DWORD PTR [rsp+0x44],eax
  42cefc:	add    eax,0x1
  42ceff:	mov    DWORD PTR [rsi],eax
  42cf01:	cmp    BYTE PTR [rdx],0x28
  42cf04:	je     0x42e616
  42cf0a:	nop    WORD PTR [rax+rax*1+0x0]
  42cf10:	mov    rsi,QWORD PTR [rsp+0x198]
  42cf18:	mov    DWORD PTR [rsi],eax
  42cf1a:	mov    r8,QWORD PTR [rsp+0xc8]
  42cf22:	test   ebp,ebp
  42cf24:	je     0x42cc51
  42cf2a:	mov    r9d,DWORD PTR [rsp+0x84]
  42cf32:	test   r9d,r9d
  42cf35:	jne    0x42d664
  42cf3b:	mov    eax,DWORD PTR [rsp+0xa4]
  42cf42:	mov    ecx,DWORD PTR [r8+0x14]
  42cf46:	xor    edx,edx
  42cf48:	and    eax,0xfffffff8
  42cf4b:	test   ecx,ecx
  42cf4d:	setg   dl
  42cf50:	add    edx,edx
  42cf52:	or     eax,edx
  42cf54:	test   al,0x30
  42cf56:	jne    0x42d0c3
  42cf5c:	mov    DWORD PTR [rsp+0xa4],eax
  42cf63:	jmp    0x42cc51
  42cf68:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf70:	mov    eax,ebp
  42cf72:	or     eax,ecx
  42cf74:	or     eax,r12d
  42cf77:	je     0x42d0a3
  42cf7d:	mov    rdi,QWORD PTR [rsp+0xc0]
  42cf85:	lea    rax,[rdi+0x1]
  42cf89:	mov    QWORD PTR [rsp+0xc0],rax
  42cf91:	movsx  eax,BYTE PTR [rdi+0x1]
  42cf95:	cmp    al,0x2b
  42cf97:	je     0x42e158
  42cf9d:	cmp    al,0x2d
  42cf9f:	je     0x42d561
  42cfa5:	mov    DWORD PTR [rsp+0x44],0x0
  42cfad:	lea    r8d,[rax-0x30]
  42cfb1:	cmp    r8d,0x9
  42cfb5:	ja     0x42d690
  42cfbb:	cmp    eax,0x30
  42cfbe:	jne    0x42cfe5
  42cfc0:	mov    rax,QWORD PTR [rsp+0xc0]
  42cfc8:	lea    r8,[rax+0x1]
  42cfcc:	nop    DWORD PTR [rax+0x0]
  42cfd0:	mov    QWORD PTR [rsp+0xc0],r8
  42cfd8:	movsx  eax,BYTE PTR [r8]
  42cfdc:	add    r8,0x1
  42cfe0:	cmp    eax,0x30
  42cfe3:	je     0x42cfd0
  42cfe5:	lea    r9d,[rax-0x31]
  42cfe9:	xor    r8d,r8d
  42cfec:	cmp    r9d,0x8
  42cff0:	ja     0x42ce7a
  42cff6:	lea    r9d,[rax-0x30]
  42cffa:	mov    rax,QWORD PTR [rsp+0xc0]
  42d002:	lea    r10,[rax+0x1]
  42d006:	mov    QWORD PTR [rsp+0x50],rax
  42d00b:	mov    QWORD PTR [rsp+0xc0],r10
  42d013:	mov    QWORD PTR [rsp+0x48],r10
  42d018:	mov    r10,rax
  42d01b:	movsx  eax,BYTE PTR [rax+0x1]
  42d01f:	lea    r8d,[rax-0x30]
  42d023:	cmp    r8d,0x9
  42d027:	ja     0x42d063
  42d029:	lea    r8,[r10+0x2]
  42d02d:	mov    DWORD PTR [rsp+0x5c],r11d
  42d032:	lea    r9d,[r9+r9*4]
  42d036:	mov    QWORD PTR [rsp+0xc0],r8
  42d03e:	mov    r11,r8
  42d041:	add    r8,0x1
  42d045:	lea    r9d,[rax+r9*2-0x30]
  42d04a:	movsx  eax,BYTE PTR [r8-0x1]
  42d04f:	lea    r10d,[rax-0x30]
  42d053:	cmp    r10d,0x9
  42d057:	jbe    0x42d032
  42d059:	mov    QWORD PTR [rsp+0x48],r11
  42d05e:	mov    r11d,DWORD PTR [rsp+0x5c]
  42d063:	mov    r8,QWORD PTR [rsp+0x48]
  42d068:	sub    r8,QWORD PTR [rsp+0x50]
  42d06d:	cmp    r8,0x8
  42d071:	jg     0x42e22f
  42d077:	cmp    r9d,0x4e1f
  42d07e:	jg     0x42e22f
  42d084:	mov    r10d,DWORD PTR [rsp+0x44]
  42d089:	mov    r8d,r10d
  42d08c:	neg    r8d
  42d08f:	xor    r8d,r9d
  42d092:	add    r8d,r10d
  42d095:	jmp    0x42ce7a
  42d09a:	cmp    eax,0x49
  42d09d:	je     0x42e23a
  42d0a3:	mov    DWORD PTR [rsp+0xa4],0x6
  42d0ae:	mov    QWORD PTR [rsp+0xc0],rdi
  42d0b6:	mov    r8,QWORD PTR [rsp+0xc8]
  42d0be:	jmp    0x42cc51
  42d0c3:	or     eax,0x40
  42d0c6:	mov    DWORD PTR [rsp+0xa4],eax
  42d0cd:	call   0x42fc38
  42d0d2:	mov    DWORD PTR [rax],0x22
  42d0d8:	mov    r8,QWORD PTR [rsp+0xc8]
  42d0e0:	jmp    0x42cc51
  42d0e5:	mov    rax,QWORD PTR [rsp+0x190]
  42d0ed:	mov    ecx,DWORD PTR [rsp+0x58]
  42d0f1:	sub    r8d,r13d
  42d0f4:	mov    DWORD PTR [rsp+0xa4],0x1
  42d0ff:	mov    DWORD PTR [rsp+0x68],r8d
  42d104:	mov    eax,DWORD PTR [rax+0xc]
  42d107:	mov    DWORD PTR [rsp+0x44],eax
  42d10b:	and    eax,0x3
  42d10e:	mov    edi,eax
  42d110:	sub    edi,ecx
  42d112:	cmp    eax,0x2
  42d115:	mov    DWORD PTR [rsp+0x6c],edi
  42d119:	je     0x42d133
  42d11b:	lea    edi,[rcx+0x1]
  42d11e:	cmp    eax,0x3
  42d121:	mov    DWORD PTR [rsp+0x6c],edi
  42d125:	je     0x42d133
  42d127:	test   eax,eax
  42d129:	sete   al
  42d12c:	movzx  eax,al
  42d12f:	mov    DWORD PTR [rsp+0x6c],eax
  42d133:	pxor   xmm0,xmm0
  42d137:	mov    eax,esi
  42d139:	test   ebx,ebx
  42d13b:	cmove  ebx,ebp
  42d13e:	mov    edi,0x10
  42d143:	cmp    ebp,0x10
  42d146:	cmovle edi,ebp
  42d149:	cvtsi2sd xmm0,rax
  42d14e:	cmp    edi,0x9
  42d151:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d15a:	jle    0x42d183
  42d15c:	pxor   xmm1,xmm1
  42d160:	lea    eax,[rdi-0x9]
  42d163:	mov    rcx,QWORD PTR [rip+0x10456]        # 0x43d5c0
  42d16a:	cdqe   
  42d16c:	cvtsi2sd xmm1,rdx
  42d171:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  42d176:	addsd  xmm0,xmm1
  42d17a:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d183:	cmp    ebp,0xf
  42d186:	jg     0x42d2f5
  42d18c:	cmp    DWORD PTR [rsp+0x40],0x35
  42d191:	jg     0x42d2f5
  42d197:	cmp    DWORD PTR [rsp+0x68],0x0
  42d19c:	je     0x42e180
  42d1a2:	jle    0x42d609
  42d1a8:	cmp    DWORD PTR [rsp+0x68],0x16
  42d1ad:	jg     0x42e1aa
  42d1b3:	movsxd rcx,DWORD PTR [rsp+0x68]
  42d1b8:	mov    edx,DWORD PTR [rsp+0xb0]
  42d1bf:	lea    rax,[rip+0x1017a]        # 0x43d340
  42d1c6:	test   edx,edx
  42d1c8:	mov    r8d,DWORD PTR [rax+rcx*4]
  42d1cc:	je     0x42e29e
  42d1d2:	tzcnt  edx,edx
  42d1d6:	mov    eax,0x35
  42d1db:	sub    eax,edx
  42d1dd:	mov    rdx,QWORD PTR [rip+0x103dc]        # 0x43d5c0
  42d1e4:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d1ed:	add    eax,r8d
  42d1f0:	cmp    eax,0x35
  42d1f3:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  42d1f8:	lea    rdx,[rsp+0xa4]
  42d200:	setle  al
  42d203:	movzx  eax,al
  42d206:	lea    rcx,[rsp+0xb0]
  42d20e:	mov    QWORD PTR [rsp+0x30],rdx
  42d213:	mov    edx,DWORD PTR [rsp+0x6c]
  42d217:	mov    DWORD PTR [rsp+0x20],eax
  42d21b:	mov    DWORD PTR [rsp+0x28],edx
  42d21f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d228:	mov    r9,QWORD PTR [rsp+0x1a0]
  42d230:	mov    r8,QWORD PTR [rsp+0x198]
  42d238:	mov    rdx,QWORD PTR [rsp+0x190]
  42d240:	call   0x42c6b0
  42d245:	test   eax,eax
  42d247:	jne    0x42d0d8
  42d24d:	xor    eax,eax
  42d24f:	jmp    0x42d2f9
  42d254:	movzx  r8d,BYTE PTR [rbp+0x1]
  42d259:	test   r8b,r8b
  42d25c:	je     0x42e4dd
  42d262:	cmp    r8b,BYTE PTR [r9+0x1]
  42d266:	jne    0x42ce5c
  42d26c:	mov    eax,0x2
  42d271:	jmp    0x42d282
  42d273:	add    rax,0x1
  42d277:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  42d27c:	jne    0x42d480
  42d282:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  42d288:	test   r8b,r8b
  42d28b:	jne    0x42d273
  42d28d:	lea    r8,[r9+rax*1]
  42d291:	test   ebx,ebx
  42d293:	mov    QWORD PTR [rsp+0xc0],r8
  42d29b:	movsx  eax,BYTE PTR [r8]
  42d29f:	je     0x42d57e
  42d2a5:	lea    r8d,[rax-0x30]
  42d2a9:	xor    ecx,ecx
  42d2ab:	xor    r13d,r13d
  42d2ae:	mov    ebp,ebx
  42d2b0:	cmp    r8d,0x9
  42d2b4:	ja     0x42d2ea
  42d2b6:	test   r8d,r8d
  42d2b9:	lea    eax,[rcx+0x1]
  42d2bc:	mov    r9d,r8d
  42d2bf:	jne    0x42e45d
  42d2c5:	mov    r8,QWORD PTR [rsp+0xc0]
  42d2cd:	mov    ecx,eax
  42d2cf:	lea    rax,[r8+0x1]
  42d2d3:	mov    QWORD PTR [rsp+0xc0],rax
  42d2db:	movsx  eax,BYTE PTR [r8+0x1]
  42d2e0:	lea    r8d,[rax-0x30]
  42d2e4:	cmp    r8d,0x9
  42d2e8:	jbe    0x42d2b6
  42d2ea:	mov    r11d,0x1
  42d2f0:	jmp    0x42ce66
  42d2f5:	mov    eax,DWORD PTR [rsp+0x68]
  42d2f9:	mov    edx,ebp
  42d2fb:	sub    edx,edi
  42d2fd:	add    edx,eax
  42d2ff:	cmp    edx,0x0
  42d302:	jle    0x42e03a
  42d308:	mov    eax,edx
  42d30a:	and    eax,0xf
  42d30d:	je     0x42d32f
  42d30f:	mov    rcx,QWORD PTR [rip+0x102aa]        # 0x43d5c0
  42d316:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d31f:	cdqe   
  42d321:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  42d326:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d32f:	and    edx,0xfffffff0
  42d332:	jne    0x42d491
  42d338:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d341:	xor    edi,edi
  42d343:	lea    rdx,[rsp+0xac]
  42d34b:	lea    r8,[rsp+0xa8]
  42d353:	call   0x42c4c0
  42d358:	mov    edx,DWORD PTR [rsp+0xa8]
  42d35f:	mov    r13d,DWORD PTR [rsp+0x40]
  42d364:	add    edi,DWORD PTR [rsp+0xac]
  42d36b:	mov    QWORD PTR [rsp+0xc8],rax
  42d373:	mov    r12d,edx
  42d376:	sub    r12d,r13d
  42d379:	test   r12d,r12d
  42d37c:	mov    DWORD PTR [rsp+0xac],edi
  42d383:	jle    0x42d3ac
  42d385:	mov    edx,r12d
  42d388:	mov    rcx,rax
  42d38b:	call   0x42b980
  42d390:	mov    edi,DWORD PTR [rsp+0xac]
  42d397:	mov    DWORD PTR [rsp+0xa8],r13d
  42d39f:	mov    edx,r13d
  42d3a2:	add    edi,r12d
  42d3a5:	mov    DWORD PTR [rsp+0xac],edi
  42d3ac:	lea    eax,[rdi+rdx*1]
  42d3af:	sub    eax,DWORD PTR [rsp+0x40]
  42d3b3:	mov    ecx,eax
  42d3b5:	mov    DWORD PTR [rsp+0x8c],eax
  42d3bc:	mov    rax,QWORD PTR [rsp+0x190]
  42d3c4:	mov    eax,DWORD PTR [rax+0x8]
  42d3c7:	mov    DWORD PTR [rsp+0x44],eax
  42d3cb:	add    eax,0x1
  42d3ce:	cmp    ecx,eax
  42d3d0:	jg     0x42df75
  42d3d6:	mov    rax,QWORD PTR [rsp+0x190]
  42d3de:	mov    eax,DWORD PTR [rax+0x4]
  42d3e1:	cmp    ecx,eax
  42d3e3:	mov    DWORD PTR [rsp+0x50],eax
  42d3e7:	jge    0x42e173
  42d3ed:	sub    edi,eax
  42d3ef:	cmp    edi,0x0
  42d3f2:	jle    0x42d5dc
  42d3f8:	mov    rcx,QWORD PTR [rsp+0xc8]
  42d400:	mov    edx,edi
  42d402:	call   0x42c0f0
  42d407:	add    DWORD PTR [rsp+0xa8],edi
  42d40e:	mov    QWORD PTR [rsp+0xc8],rax
  42d416:	mov    eax,DWORD PTR [rsp+0x50]
  42d41a:	mov    DWORD PTR [rsp+0xac],eax
  42d421:	mov    eax,DWORD PTR [rsp+0x84]
  42d428:	test   eax,eax
  42d42a:	je     0x42d6a0
  42d430:	mov    eax,DWORD PTR [rsp+0x8c]
  42d437:	add    eax,0x1
  42d43a:	cmp    DWORD PTR [rsp+0x50],eax
  42d43e:	jle    0x42d6a0
  42d444:	mov    r8,QWORD PTR [rsp+0xc8]
  42d44c:	mov    rax,QWORD PTR [rsp+0x198]
  42d454:	mov    esi,DWORD PTR [rsp+0x50]
  42d458:	mov    DWORD PTR [rsp+0xa4],0x50
  42d463:	mov    DWORD PTR [r8+0x14],0x0
  42d46b:	mov    DWORD PTR [r8+0x18],0x0
  42d473:	mov    DWORD PTR [rax],esi
  42d475:	jmp    0x42cf2a
  42d47a:	nop    WORD PTR [rax+rax*1+0x0]
  42d480:	mov    eax,ecx
  42d482:	mov    ebp,ebx
  42d484:	xor    ecx,ecx
  42d486:	xor    r13d,r13d
  42d489:	xor    r11d,r11d
  42d48c:	jmp    0x42ce66
  42d491:	sar    edx,0x4
  42d494:	cmp    edx,0xf
  42d497:	jle    0x42e563
  42d49d:	mov    rax,QWORD PTR [rip+0x1003c]        # 0x43d4e0
  42d4a4:	mov    ecx,edx
  42d4a6:	xor    r8d,r8d
  42d4a9:	movsd  xmm1,QWORD PTR [rax+0x20]
  42d4ae:	xchg   ax,ax
  42d4b0:	mov    eax,DWORD PTR [rsp+0xb4]
  42d4b7:	sub    ecx,0x10
  42d4ba:	mov    r9d,eax
  42d4bd:	and    eax,0x800fffff
  42d4c2:	or     eax,0x3ff00000
  42d4c7:	and    r9d,0x7ff00000
  42d4ce:	mov    DWORD PTR [rsp+0xb4],eax
  42d4d5:	shr    r9d,0x14
  42d4d9:	cmp    ecx,0xf
  42d4dc:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d4e5:	lea    r8d,[r8+r9*1-0x3ff]
  42d4ed:	mulsd  xmm0,xmm1
  42d4f1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d4fa:	jg     0x42d4b0
  42d4fc:	and    edx,0xf
  42d4ff:	mov    eax,DWORD PTR [rsp+0xb4]
  42d506:	mov    ecx,eax
  42d508:	and    eax,0x800fffff
  42d50d:	or     eax,0x3ff00000
  42d512:	and    ecx,0x7ff00000
  42d518:	shr    ecx,0x14
  42d51b:	mov    DWORD PTR [rsp+0xb4],eax
  42d522:	test   edx,edx
  42d524:	lea    edi,[r8+rcx*1-0x3ff]
  42d52c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d535:	mov    rax,QWORD PTR [rip+0xffa4]        # 0x43d4e0
  42d53c:	je     0x42d343
  42d542:	test   dl,0x1
  42d545:	je     0x42d54b
  42d547:	mulsd  xmm0,QWORD PTR [rax]
  42d54b:	add    rax,0x8
  42d54f:	sar    edx,1
  42d551:	jne    0x42d542
  42d553:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d55c:	jmp    0x42d343
  42d561:	mov    DWORD PTR [rsp+0x44],0x1
  42d569:	lea    rax,[rdi+0x2]
  42d56d:	mov    QWORD PTR [rsp+0xc0],rax
  42d575:	movsx  eax,BYTE PTR [rdi+0x2]
  42d579:	jmp    0x42cfad
  42d57e:	cmp    eax,0x30
  42d581:	jne    0x42e5c5
  42d587:	add    r8,0x1
  42d58b:	xor    ecx,ecx
  42d58d:	nop    DWORD PTR [rax]
  42d590:	mov    QWORD PTR [rsp+0xc0],r8
  42d598:	movsx  eax,BYTE PTR [r8]
  42d59c:	add    ecx,0x1
  42d59f:	add    r8,0x1
  42d5a3:	cmp    eax,0x30
  42d5a6:	je     0x42d590
  42d5a8:	lea    r8d,[rax-0x31]
  42d5ac:	cmp    r8d,0x8
  42d5b0:	ja     0x42e225
  42d5b6:	mov    r15,QWORD PTR [rsp+0xc0]
  42d5be:	lea    r9d,[rax-0x30]
  42d5c2:	lea    r13d,[rcx+0x1]
  42d5c6:	mov    ebp,0x1
  42d5cb:	mov    r8,r15
  42d5ce:	lea    eax,[rsi+rsi*4]
  42d5d1:	xor    ecx,ecx
  42d5d3:	lea    esi,[r9+rax*2]
  42d5d7:	jmp    0x42d2cf
  42d5dc:	je     0x42d416
  42d5e2:	add    edx,edi
  42d5e4:	test   edx,edx
  42d5e6:	mov    DWORD PTR [rsp+0xa8],edx
  42d5ed:	jle    0x42e586
  42d5f3:	mov    rcx,QWORD PTR [rsp+0xc8]
  42d5fb:	neg    edi
  42d5fd:	mov    edx,edi
  42d5ff:	call   0x42b980
  42d604:	jmp    0x42d416
  42d609:	mov    edx,DWORD PTR [rsp+0x68]
  42d60d:	cmp    edx,0xffffffea
  42d610:	mov    eax,edx
  42d612:	jl     0x42d2f9
  42d618:	mov    rdx,QWORD PTR [rip+0xffa1]        # 0x43d5c0
  42d61f:	neg    eax
  42d621:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42d62a:	cdqe   
  42d62c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  42d631:	lea    rax,[rsp+0xa4]
  42d639:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42d642:	lea    rcx,[rsp+0xb0]
  42d64a:	mov    DWORD PTR [rsp+0x20],0x0
  42d652:	mov    QWORD PTR [rsp+0x30],rax
  42d657:	mov    eax,DWORD PTR [rsp+0x6c]
  42d65b:	mov    DWORD PTR [rsp+0x28],eax
  42d65f:	jmp    0x42d228
  42d664:	mov    DWORD PTR [r8+0x14],0x0
  42d66c:	mov    DWORD PTR [rsp+0xa4],0x50
  42d677:	call   0x42fc38
  42d67c:	mov    r8,QWORD PTR [rsp+0xc8]
  42d684:	mov    DWORD PTR [rax],0x22
  42d68a:	jmp    0x42cc51
  42d68f:	nop
  42d690:	mov    QWORD PTR [rsp+0xc0],rdi
  42d698:	xor    r8d,r8d
  42d69b:	jmp    0x42ce7a
  42d6a0:	mov    eax,DWORD PTR [rsp+0x50]
  42d6a4:	mov    DWORD PTR [rsp+0x44],0x1
  42d6ac:	mov    DWORD PTR [rsp+0x8c],eax
  42d6b3:	mov    r8d,ebp
  42d6b6:	mov    edx,ebx
  42d6b8:	mov    DWORD PTR [rsp+0x20],r14d
  42d6bd:	mov    r9d,esi
  42d6c0:	mov    rcx,r15
  42d6c3:	call   0x42f750
  42d6c8:	mov    QWORD PTR [rsp+0x70],rax
  42d6cd:	add    rax,0x10
  42d6d1:	mov    QWORD PTR [rsp+0x78],rax
  42d6d6:	mov    eax,DWORD PTR [rsp+0x40]
  42d6da:	movsd  xmm8,QWORD PTR [rip+0xfcbd]        # 0x43d3a0
  42d6e3:	movsd  xmm9,QWORD PTR [rip+0xfcc4]        # 0x43d3b0
  42d6ec:	add    eax,0x1
  42d6ef:	movapd xmm11,xmm8
  42d6f4:	mov    DWORD PTR [rsp+0x80],eax
  42d6fb:	mov    eax,DWORD PTR [rsp+0x68]
  42d6ff:	movsd  xmm10,QWORD PTR [rip+0xfcc8]        # 0x43d3d0
  42d708:	mov    edx,eax
  42d70a:	neg    edx
  42d70c:	test   eax,eax
  42d70e:	mov    eax,0x0
  42d713:	cmovs  eax,edx
  42d716:	xor    ebp,ebp
  42d718:	mov    DWORD PTR [rsp+0x5c],eax
  42d71c:	jmp    0x42d960
  42d721:	mov    rcx,rsi
  42d724:	call   0x42c0f0
  42d729:	mov    rsi,rax
  42d72c:	test   r15d,r15d
  42d72f:	je     0x42d73f
  42d731:	mov    rcx,rdi
  42d734:	mov    edx,r15d
  42d737:	call   0x42bf80
  42d73c:	mov    rdi,rax
  42d73f:	test   r12d,r12d
  42d742:	jle    0x42d752
  42d744:	mov    rcx,rdi
  42d747:	mov    edx,r12d
  42d74a:	call   0x42c0f0
  42d74f:	mov    rdi,rax
  42d752:	test   r14d,r14d
  42d755:	jle    0x42d765
  42d757:	mov    rcx,r13
  42d75a:	mov    edx,r14d
  42d75d:	call   0x42c0f0
  42d762:	mov    r13,rax
  42d765:	mov    rdx,rdi
  42d768:	mov    rcx,rsi
  42d76b:	call   0x42c260
  42d770:	cmp    DWORD PTR [rax+0x14],0x1
  42d774:	mov    rbx,rax
  42d777:	jle    0x42db10
  42d77d:	mov    ebp,DWORD PTR [rbx+0x10]
  42d780:	mov    rdx,r13
  42d783:	mov    DWORD PTR [rbx+0x10],0x0
  42d78a:	mov    rcx,rbx
  42d78d:	call   0x42c210
  42d792:	test   eax,eax
  42d794:	jg     0x42daa0
  42d79a:	mov    ecx,DWORD PTR [rsp+0x6c]
  42d79e:	test   ecx,ecx
  42d7a0:	je     0x42daa0
  42d7a6:	mov    eax,ecx
  42d7a8:	and    eax,0x1
  42d7ab:	xor    eax,ebp
  42d7ad:	mov    DWORD PTR [rsp+0x60],eax
  42d7b1:	je     0x42e2bb
  42d7b7:	test   ebp,ebp
  42d7b9:	je     0x42dd11
  42d7bf:	movsd  xmm6,QWORD PTR [rip+0xfbd9]        # 0x43d3a0
  42d7c7:	mov    DWORD PTR [rsp+0xa4],0x21
  42d7d2:	xor    r12d,r12d
  42d7d5:	mov    DWORD PTR [rsp+0x88],0x20
  42d7e0:	xor    r14d,r14d
  42d7e3:	movapd xmm7,xmm6
  42d7e7:	mov    eax,DWORD PTR [rsp+0xa8]
  42d7ee:	mov    edx,DWORD PTR [rsp+0xac]
  42d7f5:	mov    r8d,DWORD PTR [rsp+0x44]
  42d7fa:	add    edx,eax
  42d7fc:	test   r8d,r8d
  42d7ff:	mov    DWORD PTR [rsp+0x48],edx
  42d803:	jne    0x42d80f
  42d805:	cmp    DWORD PTR [rsp+0x40],eax
  42d809:	jg     0x42dec5
  42d80f:	lea    rdx,[rsp+0x9c]
  42d817:	lea    r8,[rsp+0xa0]
  42d81f:	movapd xmm0,xmm6
  42d823:	call   0x42c4c0
  42d828:	mov    edx,DWORD PTR [rsp+0x9c]
  42d82f:	mov    r15,rax
  42d832:	test   edx,edx
  42d834:	js     0x42df00
  42d83a:	je     0x42d847
  42d83c:	mov    rcx,rax
  42d83f:	call   0x42c0f0
  42d844:	mov    r15,rax
  42d847:	mov    rbp,QWORD PTR [rsp+0xc8]
  42d84f:	test   r14d,r14d
  42d852:	mov    rdx,r15
  42d855:	mov    rcx,rbp
  42d858:	je     0x42dc40
  42d85e:	call   0x42c260
  42d863:	mov    ecx,DWORD PTR [rsp+0x44]
  42d867:	mov    QWORD PTR [rsp+0xc8],rax
  42d86f:	mov    edx,DWORD PTR [rbp+0x14]
  42d872:	test   ecx,ecx
  42d874:	jne    0x42dde0
  42d87a:	sub    edx,0x1
  42d87d:	cmp    edx,DWORD PTR [rax+0x14]
  42d880:	jge    0x42d89d
  42d882:	movsxd rdx,edx
  42d885:	add    rdx,0x4
  42d889:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  42d88e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  42d893:	xor    ecx,0x1f
  42d896:	xor    edx,0x1f
  42d899:	cmp    ecx,edx
  42d89b:	jle    0x42d8c0
  42d89d:	mov    ecx,DWORD PTR [rsp+0x50]
  42d8a1:	cmp    DWORD PTR [rsp+0x8c],ecx
  42d8a8:	jne    0x42dcc0
  42d8ae:	sub    DWORD PTR [rsp+0xa8],0x1
  42d8b6:	mov    DWORD PTR [rsp+0x44],0x1
  42d8be:	xchg   ax,ax
  42d8c0:	mov    rcx,r15
  42d8c3:	call   0x42bcf0
  42d8c8:	mov    rcx,rbp
  42d8cb:	call   0x42bcf0
  42d8d0:	mov    r14d,DWORD PTR [rsp+0x60]
  42d8d5:	test   r14d,r14d
  42d8d8:	jne    0x42db20
  42d8de:	test   r12d,r12d
  42d8e1:	je     0x42d928
  42d8e3:	mov    eax,DWORD PTR [rsp+0xa8]
  42d8ea:	add    eax,DWORD PTR [rsp+0xac]
  42d8f1:	cmp    DWORD PTR [rsp+0x48],eax
  42d8f5:	jne    0x42d928
  42d8f7:	mulsd  xmm6,QWORD PTR [rip+0xfac9]        # 0x43d3c8
  42d8ff:	movapd xmm0,xmm7
  42d903:	subsd  xmm0,QWORD PTR [rip+0xfaad]        # 0x43d3b8
  42d90b:	movapd xmm1,xmm6
  42d90f:	xorpd  xmm1,xmm10
  42d914:	ucomisd xmm1,xmm0
  42d918:	jbe    0x42de92
  42d91e:	ucomisd xmm7,xmm6
  42d922:	ja     0x42deb2
  42d928:	mov    r12d,DWORD PTR [rsp+0x44]
  42d92d:	test   r12d,r12d
  42d930:	je     0x42dcf5
  42d936:	mov    DWORD PTR [rsp+0x44],0x1
  42d93e:	xor    ebp,ebp
  42d940:	mov    rcx,rsi
  42d943:	call   0x42bcf0
  42d948:	mov    rcx,rdi
  42d94b:	call   0x42bcf0
  42d950:	mov    rcx,r13
  42d953:	call   0x42bcf0
  42d958:	mov    rcx,rbx
  42d95b:	call   0x42bcf0
  42d960:	mov    rsi,QWORD PTR [rsp+0x70]
  42d965:	mov    r15d,0x0
  42d96b:	mov    ecx,DWORD PTR [rsi+0x8]
  42d96e:	call   0x42bbe0
  42d973:	lea    rcx,[rax+0x10]
  42d977:	mov    rdi,rax
  42d97a:	movsxd rax,DWORD PTR [rsi+0x14]
  42d97e:	mov    rdx,QWORD PTR [rsp+0x78]
  42d983:	lea    r8,[rax*4+0x8]
  42d98b:	call   0x42fb40
  42d990:	mov    rax,QWORD PTR [rsp+0xc8]
  42d998:	mov    ecx,DWORD PTR [rax+0x8]
  42d99b:	call   0x42bbe0
  42d9a0:	mov    rdx,QWORD PTR [rsp+0xc8]
  42d9a8:	lea    rcx,[rax+0x10]
  42d9ac:	mov    rsi,rax
  42d9af:	movsxd rax,DWORD PTR [rdx+0x14]
  42d9b3:	add    rdx,0x10
  42d9b7:	lea    r8,[rax*4+0x8]
  42d9bf:	call   0x42fb40
  42d9c4:	mov    eax,DWORD PTR [rsp+0xa8]
  42d9cb:	mov    ecx,0x1
  42d9d0:	mov    ebx,DWORD PTR [rsp+0xac]
  42d9d7:	sub    eax,ebp
  42d9d9:	add    ebx,ebp
  42d9db:	mov    DWORD PTR [rsp+0x48],eax
  42d9df:	call   0x42be20
  42d9e4:	mov    r13,rax
  42d9e7:	mov    eax,DWORD PTR [rsp+0x68]
  42d9eb:	test   eax,eax
  42d9ed:	cmovg  r15d,eax
  42d9f1:	test   ebx,ebx
  42d9f3:	js     0x42dcb0
  42d9f9:	mov    eax,DWORD PTR [rsp+0x5c]
  42d9fd:	mov    edx,r15d
  42da00:	lea    r14d,[rax+rbx*1]
  42da04:	mov    ecx,DWORD PTR [rsp+0x48]
  42da08:	mov    eax,DWORD PTR [rsp+0x80]
  42da0f:	add    ebx,ecx
  42da11:	sub    ebx,DWORD PTR [rsp+0x40]
  42da15:	sub    eax,ecx
  42da17:	cmp    DWORD PTR [rsp+0x50],ebx
  42da1b:	jle    0x42da23
  42da1d:	sub    ebx,DWORD PTR [rsp+0x50]
  42da21:	add    eax,ebx
  42da23:	lea    ebx,[r14+rax*1]
  42da27:	lea    r12d,[rdx+rax*1]
  42da2b:	cmp    ebx,r12d
  42da2e:	mov    eax,r12d
  42da31:	cmovle eax,ebx
  42da34:	cmp    eax,r14d
  42da37:	cmovg  eax,r14d
  42da3b:	test   eax,eax
  42da3d:	jle    0x42da47
  42da3f:	sub    ebx,eax
  42da41:	sub    r12d,eax
  42da44:	sub    r14d,eax
  42da47:	mov    eax,DWORD PTR [rsp+0x5c]
  42da4b:	test   eax,eax
  42da4d:	je     0x42da7c
  42da4f:	mov    rcx,r13
  42da52:	mov    edx,eax
  42da54:	call   0x42bf80
  42da59:	mov    rdx,rsi
  42da5c:	mov    rcx,rax
  42da5f:	mov    r13,rax
  42da62:	call   0x42be50
  42da67:	mov    rcx,rsi
  42da6a:	mov    QWORD PTR [rsp+0x60],rax
  42da6f:	call   0x42bcf0
  42da74:	mov    rax,QWORD PTR [rsp+0x60]
  42da79:	mov    rsi,rax
  42da7c:	sub    ebx,ebp
  42da7e:	cmp    ebx,0x0
  42da81:	mov    edx,ebx
  42da83:	jg     0x42d721
  42da89:	je     0x42d72c
  42da8f:	neg    edx
  42da91:	mov    rcx,rsi
  42da94:	call   0x42b980
  42da99:	jmp    0x42d72c
  42da9e:	xchg   ax,ax
  42daa0:	test   eax,eax
  42daa2:	js     0x42e2d2
  42daa8:	je     0x42e39e
  42daae:	mov    rdx,r13
  42dab1:	mov    rcx,rbx
  42dab4:	call   0x42f850
  42dab9:	ucomisd xmm9,xmm0
  42dabe:	jb     0x42ddf0
  42dac4:	test   ebp,ebp
  42dac6:	jne    0x42df20
  42dacc:	mov    DWORD PTR [rsp+0x60],0x0
  42dad4:	cmp    DWORD PTR [rsp+0x48],0x1
  42dad9:	jg     0x42dae9
  42dadb:	mov    r9d,DWORD PTR [rsp+0x44]
  42dae0:	test   r9d,r9d
  42dae3:	jne    0x42e4aa
  42dae9:	movapd xmm6,xmm8
  42daee:	xor    r12d,r12d
  42daf1:	mov    DWORD PTR [rsp+0x88],0x10
  42dafc:	movapd xmm7,xmm8
  42db01:	mov    r14d,0x1
  42db07:	jmp    0x42d7e7
  42db0c:	nop    DWORD PTR [rax+0x0]
  42db10:	mov    r15d,DWORD PTR [rax+0x18]
  42db14:	test   r15d,r15d
  42db17:	jne    0x42d77d
  42db1d:	nop    DWORD PTR [rax]
  42db20:	mov    ebp,DWORD PTR [rsp+0x44]
  42db24:	test   ebp,ebp
  42db26:	je     0x42e018
  42db2c:	mov    eax,DWORD PTR [rsp+0xac]
  42db33:	mov    ebp,0x1
  42db38:	mov    rdx,QWORD PTR [rsp+0x198]
  42db40:	mov    rcx,rsi
  42db43:	mov    DWORD PTR [rdx],eax
  42db45:	call   0x42bcf0
  42db4a:	mov    rcx,rdi
  42db4d:	call   0x42bcf0
  42db52:	mov    rcx,r13
  42db55:	call   0x42bcf0
  42db5a:	mov    rcx,QWORD PTR [rsp+0x70]
  42db5f:	call   0x42bcf0
  42db64:	mov    rcx,rbx
  42db67:	call   0x42bcf0
  42db6c:	mov    rax,QWORD PTR [rsp+0x190]
  42db74:	mov    esi,DWORD PTR [rsp+0xac]
  42db7b:	cmp    DWORD PTR [rax+0x8],esi
  42db7e:	jge    0x42cf1a
  42db84:	mov    rax,QWORD PTR [rsp+0x190]
  42db8c:	mov    eax,DWORD PTR [rax+0xc]
  42db8f:	mov    DWORD PTR [rsp+0x44],eax
  42db93:	and    eax,0x3
  42db96:	cmp    eax,0x2
  42db99:	je     0x42e38b
  42db9f:	cmp    eax,0x3
  42dba2:	je     0x42e378
  42dba8:	cmp    eax,0x1
  42dbab:	je     0x42df77
  42dbb1:	mov    rcx,QWORD PTR [rsp+0xc8]
  42dbb9:	call   0x42bcf0
  42dbbe:	mov    rax,QWORD PTR [rsp+0x190]
  42dbc6:	mov    rsi,QWORD PTR [rsp+0x198]
  42dbce:	mov    QWORD PTR [rsp+0xc8],0x0
  42dbda:	mov    DWORD PTR [rsp+0xa4],0x11
  42dbe5:	mov    eax,DWORD PTR [rax+0x8]
  42dbe8:	mov    DWORD PTR [rsi],eax
  42dbea:	mov    rax,QWORD PTR [rsp+0x190]
  42dbf2:	mov    rsi,QWORD PTR [rsp+0x1a0]
  42dbfa:	mov    ecx,DWORD PTR [rax]
  42dbfc:	lea    eax,[rcx+0x1f]
  42dbff:	sar    eax,0x5
  42dc02:	cdqe   
  42dc04:	lea    rdx,[rsi+rax*4]
  42dc08:	mov    rax,rsi
  42dc0b:	cmp    rsi,rdx
  42dc0e:	jae    0x42dc20
  42dc10:	add    rax,0x4
  42dc14:	mov    DWORD PTR [rax-0x4],0xffffffff
  42dc1b:	cmp    rdx,rax
  42dc1e:	ja     0x42dc10
  42dc20:	and    ecx,0x1f
  42dc23:	je     0x42dc31
  42dc25:	mov    eax,0x20
  42dc2a:	sub    eax,ecx
  42dc2c:	mov    ecx,eax
  42dc2e:	shr    DWORD PTR [rdx-0x4],cl
  42dc31:	xor    r8d,r8d
  42dc34:	jmp    0x42cf22
  42dc39:	nop    DWORD PTR [rax+0x0]
  42dc40:	call   0x42e6b0
  42dc45:	mov    edx,DWORD PTR [rax+0x14]
  42dc48:	mov    QWORD PTR [rsp+0xc8],rax
  42dc50:	sub    edx,0x1
  42dc53:	cmp    edx,DWORD PTR [rbp+0x14]
  42dc56:	jge    0x42dc77
  42dc58:	movsxd rdx,edx
  42dc5b:	add    rdx,0x4
  42dc5f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  42dc64:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  42dc69:	xor    ecx,0x1f
  42dc6c:	xor    edx,0x1f
  42dc6f:	cmp    ecx,edx
  42dc71:	jge    0x42d8c0
  42dc77:	mov    edx,DWORD PTR [rsp+0x44]
  42dc7b:	test   edx,edx
  42dc7d:	je     0x42df50
  42dc83:	mov    eax,DWORD PTR [rsp+0xa8]
  42dc8a:	add    eax,0x1
  42dc8d:	cmp    DWORD PTR [rsp+0x40],eax
  42dc91:	mov    DWORD PTR [rsp+0xa8],eax
  42dc98:	setne  al
  42dc9b:	movzx  eax,al
  42dc9e:	mov    DWORD PTR [rsp+0x44],eax
  42dca2:	jmp    0x42d8c0
  42dca7:	nop    WORD PTR [rax+rax*1+0x0]
  42dcb0:	mov    edx,r15d
  42dcb3:	mov    r14d,DWORD PTR [rsp+0x5c]
  42dcb8:	sub    edx,ebx
  42dcba:	jmp    0x42da04
  42dcbf:	nop
  42dcc0:	mov    edx,0x1
  42dcc5:	mov    rcx,rax
  42dcc8:	call   0x42c0f0
  42dccd:	mov    rcx,r15
  42dcd0:	mov    QWORD PTR [rsp+0xc8],rax
  42dcd8:	sub    DWORD PTR [rsp+0xac],0x1
  42dce0:	sub    DWORD PTR [rsp+0x8c],0x1
  42dce8:	call   0x42bcf0
  42dced:	mov    rcx,rbp
  42dcf0:	call   0x42bcf0
  42dcf5:	mov    rcx,QWORD PTR [rsp+0xc8]
  42dcfd:	call   0x42ba80
  42dd02:	mov    DWORD PTR [rsp+0x44],0x0
  42dd0a:	mov    ebp,eax
  42dd0c:	jmp    0x42d940
  42dd11:	mov    edx,DWORD PTR [rsp+0x50]
  42dd15:	cmp    DWORD PTR [rsp+0x8c],edx
  42dd1c:	mov    DWORD PTR [rsp+0xa4],0x11
  42dd27:	je     0x42dad4
  42dd2d:	xor    ecx,ecx
  42dd2f:	cmp    DWORD PTR [rsp+0x40],0x1f
  42dd34:	mov    r9,QWORD PTR [rsp+0xc8]
  42dd3c:	mov    eax,DWORD PTR [rsp+0x40]
  42dd40:	jle    0x42dd7c
  42dd42:	mov    r14d,DWORD PTR [r9+0x18]
  42dd46:	test   r14d,r14d
  42dd49:	jne    0x42dad4
  42dd4f:	lea    rdx,[r9+0x1c]
  42dd53:	mov    eax,DWORD PTR [rsp+0x40]
  42dd57:	xor    ecx,ecx
  42dd59:	jmp    0x42dd71
  42dd5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42dd60:	add    rdx,0x4
  42dd64:	mov    r12d,DWORD PTR [rdx-0x4]
  42dd68:	test   r12d,r12d
  42dd6b:	jne    0x42dad4
  42dd71:	sub    eax,0x20
  42dd74:	add    ecx,0x1
  42dd77:	cmp    eax,0x1f
  42dd7a:	jg     0x42dd60
  42dd7c:	cmp    eax,0x1
  42dd7f:	jle    0x42dda3
  42dd81:	movsxd rcx,ecx
  42dd84:	sub    eax,0x1
  42dd87:	lea    r8,[r9+rcx*4]
  42dd8b:	xor    ecx,ecx
  42dd8d:	mov    edx,DWORD PTR [r8+0x18]
  42dd91:	tzcnt  ecx,edx
  42dd95:	shr    edx,cl
  42dd97:	cmp    eax,ecx
  42dd99:	mov    DWORD PTR [r8+0x18],edx
  42dd9d:	jg     0x42dad4
  42dda3:	mov    eax,DWORD PTR [rsp+0x8c]
  42ddaa:	mov    rcx,r9
  42ddad:	sub    eax,0x1
  42ddb0:	mov    DWORD PTR [rsp+0xac],eax
  42ddb7:	mov    eax,DWORD PTR [rsp+0x40]
  42ddbb:	mov    edx,eax
  42ddbd:	mov    DWORD PTR [rsp+0xa8],eax
  42ddc4:	call   0x42cab0
  42ddc9:	mov    QWORD PTR [rsp+0xc8],rax
  42ddd1:	jmp    0x42db20
  42ddd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dde0:	mov    DWORD PTR [rsp+0x44],0x1
  42dde8:	jmp    0x42d8c0
  42dded:	nop    DWORD PTR [rax]
  42ddf0:	movapd xmm7,xmm0
  42ddf4:	cmp    ebp,0x1
  42ddf7:	movsd  xmm1,QWORD PTR [rip+0xf5b9]        # 0x43d3b8
  42ddff:	sbb    eax,eax
  42de01:	and    eax,0x10
  42de04:	movsd  xmm0,QWORD PTR [rip+0xf5b4]        # 0x43d3c0
  42de0c:	mulsd  xmm7,xmm1
  42de10:	add    eax,0x10
  42de13:	xor    r14d,r14d
  42de16:	cmp    ebp,0x1
  42de19:	mov    DWORD PTR [rsp+0x88],eax
  42de20:	setb   r14b
  42de24:	ucomisd xmm0,xmm7
  42de28:	jbe    0x42df10
  42de2e:	cvttsd2si r12d,xmm7
  42de33:	pxor   xmm6,xmm6
  42de37:	mov    eax,DWORD PTR [rsp+0x6c]
  42de3b:	cmp    eax,0x1
  42de3e:	cvtsi2sd xmm6,r12d
  42de43:	subsd  xmm7,xmm6
  42de47:	je     0x42e165
  42de4d:	cmp    eax,0x2
  42de50:	jne    0x42e009
  42de56:	test   r14d,r14d
  42de59:	jne    0x42de85
  42de5b:	ucomisd xmm7,QWORD PTR [rip+0xf545]        # 0x43d3a8
  42de63:	jbe    0x42de85
  42de65:	pxor   xmm6,xmm6
  42de69:	add    r12d,0x1
  42de6d:	mov    eax,0x30
  42de72:	sub    eax,DWORD PTR [rsp+0x88]
  42de79:	cvtsi2sd xmm6,r12d
  42de7e:	mov    DWORD PTR [rsp+0x88],eax
  42de85:	mov    DWORD PTR [rsp+0x60],0x0
  42de8d:	jmp    0x42d7e7
  42de92:	ucomisd xmm0,xmm6
  42de96:	jbe    0x42d928
  42de9c:	movsd  xmm0,QWORD PTR [rip+0xf4fc]        # 0x43d3a0
  42dea4:	subsd  xmm0,xmm6
  42dea8:	ucomisd xmm0,xmm7
  42deac:	jbe    0x42d928
  42deb2:	mov    eax,DWORD PTR [rsp+0x88]
  42deb9:	or     DWORD PTR [rsp+0xa4],eax
  42dec0:	jmp    0x42db20
  42dec5:	mov    r15d,DWORD PTR [rsp+0x40]
  42deca:	mov    rcx,QWORD PTR [rsp+0xc8]
  42ded2:	mov    ebp,r15d
  42ded5:	sub    ebp,eax
  42ded7:	mov    edx,ebp
  42ded9:	call   0x42c0f0
  42dede:	sub    DWORD PTR [rsp+0xac],ebp
  42dee5:	mov    QWORD PTR [rsp+0xc8],rax
  42deed:	mov    DWORD PTR [rsp+0xa8],r15d
  42def5:	jmp    0x42d80f
  42defa:	nop    WORD PTR [rax+rax*1+0x0]
  42df00:	neg    edx
  42df02:	mov    rcx,rax
  42df05:	call   0x42b980
  42df0a:	jmp    0x42d847
  42df0f:	nop
  42df10:	movapd xmm6,xmm7
  42df14:	xor    r12d,r12d
  42df17:	jmp    0x42de85
  42df1c:	nop    DWORD PTR [rax+0x0]
  42df20:	movapd xmm6,xmm11
  42df25:	xor    r12d,r12d
  42df28:	movapd xmm7,xmm11
  42df2d:	mov    DWORD PTR [rsp+0x88],0x20
  42df38:	mov    DWORD PTR [rsp+0x60],0x0
  42df40:	xor    r14d,r14d
  42df43:	jmp    0x42d7e7
  42df48:	nop    DWORD PTR [rax+rax*1+0x0]
  42df50:	mov    edx,0x1
  42df55:	mov    rcx,rax
  42df58:	xor    r12d,r12d
  42df5b:	call   0x42b980
  42df60:	add    DWORD PTR [rsp+0xac],0x1
  42df68:	add    DWORD PTR [rsp+0x8c],0x1
  42df70:	jmp    0x42d8c0
  42df75:	xor    ebp,ebp
  42df77:	mov    rax,QWORD PTR [rsp+0xc8]
  42df7f:	mov    DWORD PTR [rsp+0xa4],0xa3
  42df8a:	mov    DWORD PTR [rax+0x14],0x0
  42df91:	call   0x42fc38
  42df96:	mov    DWORD PTR [rax],0x22
  42df9c:	mov    rax,QWORD PTR [rsp+0x190]
  42dfa4:	mov    eax,DWORD PTR [rax+0x8]
  42dfa7:	add    eax,0x1
  42dfaa:	jmp    0x42cf10
  42dfaf:	mov    eax,DWORD PTR [rsp+0x58]
  42dfb3:	mov    r8,QWORD PTR [rsp+0x198]
  42dfbb:	lea    rcx,[rsp+0xc0]
  42dfc3:	mov    rdx,QWORD PTR [rsp+0x190]
  42dfcb:	lea    r9,[rsp+0xc8]
  42dfd3:	mov    DWORD PTR [rsp+0x20],eax
  42dfd7:	call   0x42ea30
  42dfdc:	cmp    eax,0x6
  42dfdf:	mov    DWORD PTR [rsp+0xa4],eax
  42dfe6:	mov    r8,QWORD PTR [rsp+0xc8]
  42dfee:	jne    0x42cc51
  42dff4:	mov    QWORD PTR [rsp+0xc0],rdi
  42dffc:	mov    DWORD PTR [rsp+0x58],0x0
  42e004:	jmp    0x42cc51
  42e009:	ucomisd xmm7,xmm1
  42e00d:	jae    0x42de65
  42e013:	jmp    0x42de85
  42e018:	mov    eax,DWORD PTR [rsp+0xa8]
  42e01f:	mov    ebp,DWORD PTR [rsp+0x40]
  42e023:	sub    ebp,eax
  42e025:	cmp    ebp,0x0
  42e028:	jne    0x42e1f1
  42e02e:	mov    eax,DWORD PTR [rsp+0xac]
  42e035:	jmp    0x42db38
  42e03a:	je     0x42d338
  42e040:	neg    edx
  42e042:	mov    eax,edx
  42e044:	and    eax,0xf
  42e047:	je     0x42e069
  42e049:	mov    rcx,QWORD PTR [rip+0xf570]        # 0x43d5c0
  42e050:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42e059:	cdqe   
  42e05b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  42e060:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42e069:	and    edx,0xfffffff0
  42e06c:	je     0x42d338
  42e072:	mov    eax,edx
  42e074:	sar    eax,0x4
  42e077:	cmp    eax,0xf
  42e07a:	jle    0x42e648
  42e080:	mov    rdx,QWORD PTR [rip+0xf549]        # 0x43d5d0
  42e087:	mov    ecx,eax
  42e089:	xor    r8d,r8d
  42e08c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  42e091:	mov    edx,DWORD PTR [rsp+0xb4]
  42e098:	sub    ecx,0x10
  42e09b:	mov    r9d,edx
  42e09e:	and    edx,0x800fffff
  42e0a4:	or     edx,0x3ff00000
  42e0aa:	and    r9d,0x7ff00000
  42e0b1:	mov    DWORD PTR [rsp+0xb4],edx
  42e0b8:	shr    r9d,0x14
  42e0bc:	cmp    ecx,0xf
  42e0bf:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42e0c8:	lea    r8d,[r8+r9*1-0x3ff]
  42e0d0:	mulsd  xmm0,xmm1
  42e0d4:	movsd  QWORD PTR [rsp+0xb0],xmm0
  42e0dd:	jg     0x42e091
  42e0df:	and    eax,0xf
  42e0e2:	mov    edx,DWORD PTR [rsp+0xb4]
  42e0e9:	mov    ecx,edx
  42e0eb:	and    edx,0x800fffff
  42e0f1:	and    ecx,0x7ff00000
  42e0f7:	or     edx,0x3ff00000
  42e0fd:	shr    ecx,0x14
  42e100:	mov    DWORD PTR [rsp+0xb4],edx
  42e107:	test   eax,eax
  42e109:	lea    edi,[r8+rcx*1-0x3ff]
  42e111:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42e11a:	jle    0x42d343
  42e120:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  42e129:	mov    rdx,QWORD PTR [rip+0xf4a0]        # 0x43d5d0
  42e130:	movapd xmm0,xmm1
  42e134:	test   al,0x1
  42e136:	je     0x42e140
  42e138:	mulsd  xmm1,QWORD PTR [rdx]
  42e13c:	movapd xmm0,xmm1
  42e140:	sar    eax,1
  42e142:	add    rdx,0x8
  42e146:	test   eax,eax
  42e148:	jg     0x42e134
  42e14a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  42e153:	jmp    0x42d343
  42e158:	mov    DWORD PTR [rsp+0x44],0x0
  42e160:	jmp    0x42d569
  42e165:	test   r14d,r14d
  42e168:	je     0x42de85
  42e16e:	jmp    0x42de5b
  42e173:	mov    DWORD PTR [rsp+0x44],0x0
  42e17b:	jmp    0x42d6b3
  42e180:	lea    rax,[rsp+0xa4]
  42e188:	lea    rcx,[rsp+0xb0]
  42e190:	mov    DWORD PTR [rsp+0x20],0x1
  42e198:	mov    QWORD PTR [rsp+0x30],rax
  42e19d:	mov    eax,DWORD PTR [rsp+0x6c]
  42e1a1:	mov    DWORD PTR [rsp+0x28],eax
  42e1a5:	jmp    0x42d228
  42e1aa:	mov    ecx,DWORD PTR [rsp+0x68]
  42e1ae:	mov    edx,0x25
  42e1b3:	sub    edx,ebp
  42e1b5:	cmp    ecx,edx
  42e1b7:	mov    eax,ecx
  42e1b9:	jg     0x42d2f9
  42e1bf:	mov    rdx,QWORD PTR [rip+0xf3fa]        # 0x43d5c0
  42e1c6:	mov    eax,0xf
  42e1cb:	sub    eax,ebp
  42e1cd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  42e1d6:	movsxd rcx,eax
  42e1d9:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  42e1de:	mov    ecx,DWORD PTR [rsp+0x68]
  42e1e2:	sub    ecx,eax
  42e1e4:	movsxd rax,ecx
  42e1e7:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  42e1ec:	jmp    0x42d631
  42e1f1:	mov    edx,ebp
  42e1f3:	jle    0x42e54f
  42e1f9:	mov    rcx,QWORD PTR [rsp+0xc8]
  42e201:	call   0x42c0f0
  42e206:	mov    QWORD PTR [rsp+0xc8],rax
  42e20e:	mov    eax,DWORD PTR [rsp+0xac]
  42e215:	sub    eax,ebp
  42e217:	xor    ebp,ebp
  42e219:	mov    DWORD PTR [rsp+0xac],eax
  42e220:	jmp    0x42db38
  42e225:	xor    ebp,ebp
  42e227:	xor    r13d,r13d
  42e22a:	jmp    0x42d2ea
  42e22f:	mov    r9d,0x4e1f
  42e235:	jmp    0x42d084
  42e23a:	lea    rbx,[rsp+0xc0]
  42e242:	lea    rdx,[rip+0xeff7]        # 0x43d240
  42e249:	mov    rcx,rbx
  42e24c:	call   0x42f910
  42e251:	test   eax,eax
  42e253:	je     0x42d0a3
  42e259:	lea    rdx,[rip+0xefe3]        # 0x43d243
  42e260:	mov    rcx,rbx
  42e263:	sub    QWORD PTR [rsp+0xc0],0x1
  42e26c:	call   0x42f910
  42e271:	test   eax,eax
  42e273:	jne    0x42e27e
  42e275:	add    QWORD PTR [rsp+0xc0],0x1
  42e27e:	mov    rax,QWORD PTR [rsp+0x190]
  42e286:	mov    DWORD PTR [rsp+0xa4],0x3
  42e291:	xor    ebp,ebp
  42e293:	mov    eax,DWORD PTR [rax+0x8]
  42e296:	add    eax,0x1
  42e299:	jmp    0x42cf10
  42e29e:	mov    edx,DWORD PTR [rsp+0xb4]
  42e2a5:	mov    eax,0x15
  42e2aa:	or     edx,0x100000
  42e2b0:	tzcnt  edx,edx
  42e2b4:	sub    eax,edx
  42e2b6:	jmp    0x42d1dd
  42e2bb:	cmp    ebp,0x1
  42e2be:	sbb    eax,eax
  42e2c0:	and    eax,0x10
  42e2c3:	add    eax,0x11
  42e2c6:	mov    DWORD PTR [rsp+0xa4],eax
  42e2cd:	jmp    0x42db20
  42e2d2:	cmp    ebp,0x1
  42e2d5:	sbb    eax,eax
  42e2d7:	and    eax,0x10
  42e2da:	add    eax,0x11
  42e2dd:	test   ebp,ebp
  42e2df:	mov    DWORD PTR [rsp+0xa4],eax
  42e2e6:	jne    0x42db20
  42e2ec:	cmp    DWORD PTR [rsp+0x48],0x1
  42e2f1:	jg     0x42db20
  42e2f7:	mov    ebp,DWORD PTR [rsp+0x44]
  42e2fb:	test   ebp,ebp
  42e2fd:	jne    0x42db20
  42e303:	mov    edx,DWORD PTR [rsp+0x8c]
  42e30a:	cmp    DWORD PTR [rsp+0x50],edx
  42e30e:	je     0x42db20
  42e314:	mov    rcx,rbx
  42e317:	mov    edx,0x1
  42e31c:	call   0x42c0f0
  42e321:	mov    rdx,r13
  42e324:	mov    rcx,rax
  42e327:	mov    rbx,rax
  42e32a:	call   0x42c210
  42e32f:	test   eax,eax
  42e331:	jle    0x42e018
  42e337:	mov    DWORD PTR [rsp+0xa4],0x11
  42e342:	mov    DWORD PTR [rsp+0x44],0x0
  42e34a:	mov    eax,DWORD PTR [rsp+0x40]
  42e34e:	mov    rcx,QWORD PTR [rsp+0xc8]
  42e356:	sub    DWORD PTR [rsp+0xac],eax
  42e35d:	mov    edx,eax
  42e35f:	mov    DWORD PTR [rsp+0xa8],eax
  42e366:	call   0x42cab0
  42e36b:	mov    QWORD PTR [rsp+0xc8],rax
  42e373:	jmp    0x42db20
  42e378:	mov    r10d,DWORD PTR [rsp+0x58]
  42e37d:	test   r10d,r10d
  42e380:	jne    0x42df77
  42e386:	jmp    0x42dbb1
  42e38b:	mov    r11d,DWORD PTR [rsp+0x58]
  42e390:	test   r11d,r11d
  42e393:	je     0x42df77
  42e399:	jmp    0x42dbb1
  42e39e:	test   ebp,ebp
  42e3a0:	je     0x42e4e7
  42e3a6:	mov    r11d,DWORD PTR [rsp+0x44]
  42e3ab:	test   r11d,r11d
  42e3ae:	je     0x42e5b5
  42e3b4:	mov    ecx,DWORD PTR [rsp+0xa8]
  42e3bb:	mov    r8,QWORD PTR [rsp+0xc8]
  42e3c3:	mov    edx,ecx
  42e3c5:	lea    rax,[r8+0x18]
  42e3c9:	sar    edx,0x5
  42e3cc:	movsxd rdx,edx
  42e3cf:	lea    rdx,[rax+rdx*4]
  42e3d3:	cmp    rax,rdx
  42e3d6:	jae    0x42e403
  42e3d8:	cmp    DWORD PTR [r8+0x18],0xffffffff
  42e3dd:	lea    rax,[r8+0x1c]
  42e3e1:	je     0x42e3fe
  42e3e3:	jmp    0x42e5b5
  42e3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e3f0:	add    rax,0x4
  42e3f4:	cmp    DWORD PTR [rax-0x4],0xffffffff
  42e3f8:	jne    0x42e5b5
  42e3fe:	cmp    rdx,rax
  42e401:	ja     0x42e3f0
  42e403:	and    ecx,0x1f
  42e406:	je     0x42e41a
  42e408:	or     edx,0xffffffff
  42e40b:	shl    edx,cl
  42e40d:	or     edx,DWORD PTR [rax]
  42e40f:	mov    eax,edx
  42e411:	add    eax,0x1
  42e414:	jne    0x42e5b5
  42e41a:	mov    eax,DWORD PTR [rsp+0x40]
  42e41e:	mov    edx,DWORD PTR [rsp+0x50]
  42e422:	mov    DWORD PTR [r8+0x14],0x1
  42e42a:	mov    DWORD PTR [r8+0x18],0x1
  42e432:	mov    DWORD PTR [rsp+0xa8],0x1
  42e43d:	mov    DWORD PTR [rsp+0xa4],0x21
  42e448:	lea    eax,[rax+rdx*1-0x1]
  42e44c:	mov    DWORD PTR [rsp+0xac],eax
  42e453:	mov    eax,0x1
  42e458:	jmp    0x42e01f
  42e45d:	add    r13d,eax
  42e460:	cmp    eax,0x1
  42e463:	je     0x42e48c
  42e465:	add    ecx,ebp
  42e467:	mov    r10d,ecx
  42e46a:	jmp    0x42e475
  42e46c:	lea    esi,[rsi+rsi*4]
  42e46f:	add    esi,esi
  42e471:	cmp    ebp,ecx
  42e473:	je     0x42e48f
  42e475:	add    ebp,0x1
  42e478:	lea    eax,[rbp-0x1]
  42e47b:	cmp    eax,0x8
  42e47e:	jle    0x42e46c
  42e480:	cmp    ebp,0x10
  42e483:	jg     0x42e471
  42e485:	lea    edx,[rdx+rdx*4]
  42e488:	add    edx,edx
  42e48a:	jmp    0x42e471
  42e48c:	mov    r10d,ebp
  42e48f:	cmp    r10d,0x8
  42e493:	lea    ebp,[r10+0x1]
  42e497:	jg     0x42e56b
  42e49d:	mov    r8,QWORD PTR [rsp+0xc0]
  42e4a5:	jmp    0x42d5ce
  42e4aa:	mov    r9,QWORD PTR [rsp+0xc8]
  42e4b2:	mov    DWORD PTR [rsp+0x44],0x1
  42e4ba:	mov    eax,DWORD PTR [rsp+0x50]
  42e4be:	mov    DWORD PTR [r9+0x14],0x0
  42e4c6:	mov    DWORD PTR [rsp+0xa4],0x50
  42e4d1:	mov    DWORD PTR [rsp+0xac],eax
  42e4d8:	jmp    0x42db20
  42e4dd:	mov    eax,0x1
  42e4e2:	jmp    0x42d28d
  42e4e7:	cmp    DWORD PTR [rsp+0x48],0x1
  42e4ec:	je     0x42e5cc
  42e4f2:	mov    DWORD PTR [rsp+0xa4],0x21
  42e4fd:	mov    r10d,DWORD PTR [rsp+0x44]
  42e502:	test   r10d,r10d
  42e505:	jne    0x42e515
  42e507:	mov    edx,DWORD PTR [rsp+0x40]
  42e50b:	cmp    DWORD PTR [rsp+0x48],edx
  42e50f:	jl     0x42e018
  42e515:	mov    r9,QWORD PTR [rsp+0xc8]
  42e51d:	mov    eax,DWORD PTR [r9+0x18]
  42e521:	test   al,0x1
  42e523:	je     0x42db20
  42e529:	test   ebp,ebp
  42e52b:	jne    0x42e650
  42e531:	cmp    DWORD PTR [rsp+0x48],0x1
  42e536:	je     0x42e4ba
  42e538:	sub    eax,0x1
  42e53b:	mov    DWORD PTR [rsp+0xa4],0x11
  42e546:	mov    DWORD PTR [r9+0x18],eax
  42e54a:	jmp    0x42db20
  42e54f:	mov    rcx,QWORD PTR [rsp+0xc8]
  42e557:	neg    edx
  42e559:	call   0x42b980
  42e55e:	jmp    0x42e20e
  42e563:	xor    r8d,r8d
  42e566:	jmp    0x42d4ff
  42e56b:	cmp    ebp,0x10
  42e56e:	jg     0x42e577
  42e570:	lea    eax,[rdx+rdx*4]
  42e573:	lea    edx,[r8+rax*2]
  42e577:	mov    r8,QWORD PTR [rsp+0xc0]
  42e57f:	xor    ecx,ecx
  42e581:	jmp    0x42d2cf
  42e586:	cmp    edx,0xffffffff
  42e589:	jl     0x42d444
  42e58f:	mov    rax,QWORD PTR [rsp+0xc8]
  42e597:	mov    DWORD PTR [rsp+0xa8],0x1
  42e5a2:	mov    DWORD PTR [rax+0x14],0x1
  42e5a9:	mov    DWORD PTR [rax+0x18],0x1
  42e5b0:	jmp    0x42d416
  42e5b5:	mov    DWORD PTR [rsp+0xa4],0x11
  42e5c0:	jmp    0x42e4fd
  42e5c5:	xor    ecx,ecx
  42e5c7:	jmp    0x42d5a8
  42e5cc:	mov    edx,DWORD PTR [rsp+0x8c]
  42e5d3:	cmp    DWORD PTR [rsp+0x50],edx
  42e5d7:	jne    0x42e69d
  42e5dd:	mov    rax,QWORD PTR [rsp+0xc8]
  42e5e5:	mov    DWORD PTR [rsp+0xa4],0x21
  42e5f0:	cmp    DWORD PTR [rax+0x14],0x1
  42e5f4:	jne    0x42db20
  42e5fa:	cmp    DWORD PTR [rax+0x18],0x1
  42e5fe:	mov    eax,DWORD PTR [rsp+0x48]
  42e602:	cmovne eax,DWORD PTR [rsp+0x84]
  42e60a:	mov    DWORD PTR [rsp+0x84],eax
  42e611:	jmp    0x42db20
  42e616:	mov    r8,QWORD PTR [rsp+0x1a0]
  42e61e:	mov    rdx,QWORD PTR [rsp+0x190]
  42e626:	mov    rcx,rbx
  42e629:	call   0x42f390
  42e62e:	mov    DWORD PTR [rsp+0xa4],eax
  42e635:	mov    rax,QWORD PTR [rsp+0x190]
  42e63d:	mov    eax,DWORD PTR [rax+0x8]
  42e640:	add    eax,0x1
  42e643:	jmp    0x42cf10
  42e648:	xor    r8d,r8d
  42e64b:	jmp    0x42e0e2
  42e650:	mov    rcx,r9
  42e653:	call   0x42c600
  42e658:	mov    edx,DWORD PTR [rax+0x14]
  42e65b:	mov    ecx,DWORD PTR [rsp+0xa8]
  42e662:	mov    QWORD PTR [rsp+0xc8],rax
  42e66a:	sub    edx,0x1
  42e66d:	movsxd rdx,edx
  42e670:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  42e675:	mov    eax,ecx
  42e677:	neg    eax
  42e679:	and    eax,0x1f
  42e67c:	xor    edx,0x1f
  42e67f:	cmp    edx,eax
  42e681:	je     0x42e68d
  42e683:	add    ecx,0x1
  42e686:	mov    DWORD PTR [rsp+0xa8],ecx
  42e68d:	mov    DWORD PTR [rsp+0xa4],0x21
  42e698:	jmp    0x42db20
  42e69d:	mov    DWORD PTR [rsp+0xa4],0x1
  42e6a8:	jmp    0x42e34a
  42e6ad:	nop
  42e6ae:	nop
  42e6af:	nop
  42e6b0:	push   r13
  42e6b2:	push   r12
  42e6b4:	push   rbp
  42e6b5:	push   rdi
  42e6b6:	push   rsi
  42e6b7:	push   rbx
  42e6b8:	sub    rsp,0x28
  42e6bc:	mov    eax,DWORD PTR [rdx+0x14]
  42e6bf:	cmp    DWORD PTR [rcx+0x14],eax
  42e6c2:	mov    rsi,rcx
  42e6c5:	mov    rdi,rdx
  42e6c8:	jge    0x42e6d0
  42e6ca:	mov    rsi,rdx
  42e6cd:	mov    rdi,rcx
  42e6d0:	mov    ecx,DWORD PTR [rsi+0x8]
  42e6d3:	xor    r12d,r12d
  42e6d6:	call   0x42bbe0
  42e6db:	movsxd rcx,DWORD PTR [rsi+0x14]
  42e6df:	mov    rbx,rax
  42e6e2:	lea    r11,[rdi+0x18]
  42e6e6:	lea    r8,[rbx+0x18]
  42e6ea:	mov    DWORD PTR [rax+0x14],ecx
  42e6ed:	movsxd rdx,DWORD PTR [rdi+0x14]
  42e6f1:	lea    rax,[rsi+0x18]
  42e6f5:	lea    rdi,[r8+rdx*4]
  42e6f9:	mov    rbp,rdx
  42e6fc:	nop    DWORD PTR [rax+0x0]
  42e700:	mov    r10d,DWORD PTR [rax]
  42e703:	mov    r9d,DWORD PTR [r11]
  42e706:	add    r8,0x4
  42e70a:	add    rax,0x4
  42e70e:	add    r11,0x4
  42e712:	movzx  r13d,r9w
  42e716:	movzx  edx,r10w
  42e71a:	shr    r9d,0x10
  42e71e:	add    edx,r13d
  42e721:	shr    r10d,0x10
  42e725:	add    edx,r12d
  42e728:	add    r10d,r9d
  42e72b:	mov    r9d,edx
  42e72e:	mov    WORD PTR [r8-0x4],dx
  42e733:	and    r9d,0x10000
  42e73a:	shr    r9d,0x10
  42e73e:	add    r9d,r10d
  42e741:	mov    r12d,r9d
  42e744:	mov    WORD PTR [r8-0x2],r9w
  42e749:	and    r12d,0x10000
  42e750:	shr    r12d,0x10
  42e754:	cmp    rdi,r8
  42e757:	ja     0x42e700
  42e759:	mov    edx,DWORD PTR [rsi+0x14]
  42e75c:	sub    edx,ebp
  42e75e:	movsxd rdx,edx
  42e761:	lea    r11,[rdi+rdx*4]
  42e765:	cmp    r11,r8
  42e768:	jbe    0x42e7ab
  42e76a:	nop    WORD PTR [rax+rax*1+0x0]
  42e770:	mov    r9d,DWORD PTR [rax]
  42e773:	add    r8,0x4
  42e777:	add    rax,0x4
  42e77b:	movzx  r10d,r9w
  42e77f:	shr    r9d,0x10
  42e783:	add    r10d,r12d
  42e786:	mov    edx,r10d
  42e789:	mov    WORD PTR [r8-0x4],r10w
  42e78e:	and    edx,0x10000
  42e794:	shr    edx,0x10
  42e797:	add    edx,r9d
  42e79a:	mov    WORD PTR [r8-0x2],dx
  42e79f:	mov    r12d,edx
  42e7a2:	shr    r12d,0x10
  42e7a6:	cmp    r11,r8
  42e7a9:	ja     0x42e770
  42e7ab:	test   r12d,r12d
  42e7ae:	je     0x42e7c3
  42e7b0:	cmp    ecx,DWORD PTR [rbx+0xc]
  42e7b3:	je     0x42e7d3
  42e7b5:	lea    eax,[rcx+0x1]
  42e7b8:	mov    DWORD PTR [rbx+0x14],eax
  42e7bb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  42e7c3:	mov    rax,rbx
  42e7c6:	add    rsp,0x28
  42e7ca:	pop    rbx
  42e7cb:	pop    rsi
  42e7cc:	pop    rdi
  42e7cd:	pop    rbp
  42e7ce:	pop    r12
  42e7d0:	pop    r13
  42e7d2:	ret    
  42e7d3:	mov    eax,DWORD PTR [rbx+0x8]
  42e7d6:	lea    ecx,[rax+0x1]
  42e7d9:	call   0x42bbe0
  42e7de:	mov    rsi,rax
  42e7e1:	lea    rcx,[rax+0x10]
  42e7e5:	movsxd rax,DWORD PTR [rbx+0x14]
  42e7e9:	lea    rdx,[rbx+0x10]
  42e7ed:	lea    r8,[rax*4+0x8]
  42e7f5:	call   0x42fb40
  42e7fa:	mov    rcx,rbx
  42e7fd:	mov    rbx,rsi
  42e800:	call   0x42bcf0
  42e805:	movsxd rcx,DWORD PTR [rsi+0x14]
  42e809:	jmp    0x42e7b5
  42e80b:	nop
  42e80c:	nop
  42e80d:	nop
  42e80e:	nop
  42e80f:	nop
  42e810:	sub    rsp,0x58
  42e814:	test   r8d,r8d
  42e817:	mov    eax,r8d
  42e81a:	mov    WORD PTR [rsp+0x68],dx
  42e81f:	jne    0x42e834
  42e821:	cmp    dx,0xff
  42e826:	ja     0x42e87a
  42e828:	mov    BYTE PTR [rcx],dl
  42e82a:	mov    eax,0x1
  42e82f:	add    rsp,0x58
  42e833:	ret    
  42e834:	lea    rdx,[rsp+0x4c]
  42e839:	mov    DWORD PTR [rsp+0x28],r9d
  42e83e:	mov    QWORD PTR [rsp+0x20],rcx
  42e843:	mov    DWORD PTR [rsp+0x4c],0x0
  42e84b:	mov    QWORD PTR [rsp+0x30],0x0
  42e854:	mov    r9d,0x1
  42e85a:	mov    QWORD PTR [rsp+0x38],rdx
  42e85f:	lea    r8,[rsp+0x68]
  42e864:	xor    edx,edx
  42e866:	mov    ecx,eax
  42e868:	call   QWORD PTR [rip+0x166aa]        # 0x444f18
  42e86e:	test   eax,eax
  42e870:	je     0x42e87a
  42e872:	mov    edx,DWORD PTR [rsp+0x4c]
  42e876:	test   edx,edx
  42e878:	je     0x42e82f
  42e87a:	call   0x42fc38
  42e87f:	mov    DWORD PTR [rax],0x2a
  42e885:	mov    eax,0xffffffff
  42e88a:	add    rsp,0x58
  42e88e:	ret    
  42e88f:	nop
  42e890:	push   rdi
  42e891:	push   rsi
  42e892:	push   rbx
  42e893:	sub    rsp,0x30
  42e897:	lea    rax,[rsp+0x20]
  42e89c:	test   rcx,rcx
  42e89f:	mov    rbx,rcx
  42e8a2:	mov    esi,edx
  42e8a4:	cmove  rbx,rax
  42e8a8:	mov    rax,QWORD PTR [rip+0xec81]        # 0x43d530
  42e8af:	mov    rax,QWORD PTR [rax]
  42e8b2:	mov    edi,DWORD PTR [rax]
  42e8b4:	call   0x42fc80
  42e8b9:	movzx  edx,si
  42e8bc:	mov    r8d,eax
  42e8bf:	mov    rcx,rbx
  42e8c2:	mov    r9d,edi
  42e8c5:	call   0x42e810
  42e8ca:	cdqe   
  42e8cc:	add    rsp,0x30
  42e8d0:	pop    rbx
  42e8d1:	pop    rsi
  42e8d2:	pop    rdi
  42e8d3:	ret    
  42e8d4:	xchg   ax,ax
  42e8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e8e0:	push   r14
  42e8e2:	push   r13
  42e8e4:	push   r12
  42e8e6:	push   rbp
  42e8e7:	push   rdi
  42e8e8:	push   rsi
  42e8e9:	push   rbx
  42e8ea:	sub    rsp,0x30
  42e8ee:	mov    r13,rdx
  42e8f1:	mov    rbx,rcx
  42e8f4:	mov    rdi,r8
  42e8f7:	call   0x42fc80
  42e8fc:	mov    ebp,eax
  42e8fe:	mov    rax,QWORD PTR [rip+0xec2b]        # 0x43d530
  42e905:	mov    r14,QWORD PTR [r13+0x0]
  42e909:	mov    rax,QWORD PTR [rax]
  42e90c:	test   r14,r14
  42e90f:	mov    r12d,DWORD PTR [rax]
  42e912:	je     0x42ea00
  42e918:	xor    esi,esi
  42e91a:	test   rbx,rbx
  42e91d:	je     0x42e9b0
  42e923:	test   rdi,rdi
  42e926:	jne    0x42e948
  42e928:	jmp    0x42e974
  42e92a:	nop    WORD PTR [rax+rax*1+0x0]
  42e930:	movsxd r10,eax
  42e933:	add    rbx,r10
  42e936:	add    rsi,r10
  42e939:	cmp    BYTE PTR [rbx-0x1],0x0
  42e93d:	je     0x42e990
  42e93f:	add    r14,0x2
  42e943:	cmp    rdi,rsi
  42e946:	jbe    0x42e974
  42e948:	movzx  edx,WORD PTR [r14]
  42e94c:	mov    r9d,r12d
  42e94f:	mov    r8d,ebp
  42e952:	mov    rcx,rbx
  42e955:	call   0x42e810
  42e95a:	test   eax,eax
  42e95c:	jg     0x42e930
  42e95e:	mov    rax,0xffffffffffffffff
  42e965:	add    rsp,0x30
  42e969:	pop    rbx
  42e96a:	pop    rsi
  42e96b:	pop    rdi
  42e96c:	pop    rbp
  42e96d:	pop    r12
  42e96f:	pop    r13
  42e971:	pop    r14
  42e973:	ret    
  42e974:	mov    rax,rsi
  42e977:	mov    QWORD PTR [r13+0x0],r14
  42e97b:	add    rsp,0x30
  42e97f:	pop    rbx
  42e980:	pop    rsi
  42e981:	pop    rdi
  42e982:	pop    rbp
  42e983:	pop    r12
  42e985:	pop    r13
  42e987:	pop    r14
  42e989:	ret    
  42e98a:	nop    WORD PTR [rax+rax*1+0x0]
  42e990:	lea    rax,[rsi-0x1]
  42e994:	mov    QWORD PTR [r13+0x0],0x0
  42e99c:	add    rsp,0x30
  42e9a0:	pop    rbx
  42e9a1:	pop    rsi
  42e9a2:	pop    rdi
  42e9a3:	pop    rbp
  42e9a4:	pop    r12
  42e9a6:	pop    r13
  42e9a8:	pop    r14
  42e9aa:	ret    
  42e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42e9b0:	test   rdi,rdi
  42e9b3:	lea    rbx,[rsp+0x20]
  42e9b8:	jne    0x42e9db
  42e9ba:	jmp    0x42ea11
  42e9bc:	nop    DWORD PTR [rax+0x0]
  42e9c0:	movsxd rdx,eax
  42e9c3:	sub    eax,0x1
  42e9c6:	cdqe   
  42e9c8:	add    rsi,rdx
  42e9cb:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  42e9d0:	je     0x42ea19
  42e9d2:	add    r14,0x2
  42e9d6:	cmp    rdi,rsi
  42e9d9:	jbe    0x42ea11
  42e9db:	movzx  edx,WORD PTR [r14]
  42e9df:	mov    r9d,r12d
  42e9e2:	mov    r8d,ebp
  42e9e5:	mov    rcx,rbx
  42e9e8:	call   0x42e810
  42e9ed:	test   eax,eax
  42e9ef:	jg     0x42e9c0
  42e9f1:	jmp    0x42e95e
  42e9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea00:	xor    eax,eax
  42ea02:	add    rsp,0x30
  42ea06:	pop    rbx
  42ea07:	pop    rsi
  42ea08:	pop    rdi
  42ea09:	pop    rbp
  42ea0a:	pop    r12
  42ea0c:	pop    r13
  42ea0e:	pop    r14
  42ea10:	ret    
  42ea11:	mov    rax,rsi
  42ea14:	jmp    0x42e965
  42ea19:	lea    rax,[rsi-0x1]
  42ea1d:	jmp    0x42e965
  42ea22:	nop
  42ea23:	nop
  42ea24:	nop
  42ea25:	nop
  42ea26:	nop
  42ea27:	nop
  42ea28:	nop
  42ea29:	nop
  42ea2a:	nop
  42ea2b:	nop
  42ea2c:	nop
  42ea2d:	nop
  42ea2e:	nop
  42ea2f:	nop
  42ea30:	push   r15
  42ea32:	push   r14
  42ea34:	push   r13
  42ea36:	push   r12
  42ea38:	push   rbp
  42ea39:	push   rdi
  42ea3a:	push   rsi
  42ea3b:	push   rbx
  42ea3c:	sub    rsp,0x28
  42ea40:	mov    r14,rcx
  42ea43:	mov    r13,rdx
  42ea46:	mov    QWORD PTR [rsp+0x80],r8
  42ea4e:	mov    QWORD PTR [rsp+0x88],r9
  42ea56:	call   0x42fb58
  42ea5b:	mov    rdi,QWORD PTR [rip+0xea9e]        # 0x43d500
  42ea62:	mov    rsi,QWORD PTR [rax]
  42ea65:	cmp    BYTE PTR [rdi+0x30],0x0
  42ea69:	je     0x42ee90
  42ea6f:	mov    rax,QWORD PTR [rsp+0x88]
  42ea77:	xor    r8d,r8d
  42ea7a:	mov    QWORD PTR [rax],0x0
  42ea81:	mov    rbx,QWORD PTR [r14]
  42ea84:	movzx  edx,BYTE PTR [rbx+0x2]
  42ea88:	lea    rax,[rbx+0x3]
  42ea8c:	add    rbx,0x2
  42ea90:	cmp    dl,0x30
  42ea93:	jne    0x42eaa9
  42ea95:	mov    rbx,rax
  42ea98:	add    rax,0x1
  42ea9c:	movzx  edx,BYTE PTR [rax-0x1]
  42eaa0:	add    r8d,0x1
  42eaa4:	cmp    dl,0x30
  42eaa7:	je     0x42ea95
  42eaa9:	cmp    BYTE PTR [rdi+rdx*1],0x0
  42eaad:	jne    0x42ec00
  42eab3:	movzx  r9d,BYTE PTR [rsi]
  42eab7:	test   r9b,r9b
  42eaba:	je     0x42f0fa
  42eac0:	movzx  edx,BYTE PTR [rbx]
  42eac3:	cmp    r9b,dl
  42eac6:	jne    0x42eea3
  42eacc:	mov    eax,0x1
  42ead1:	jmp    0x42eae1
  42ead3:	add    rax,0x1
  42ead7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  42eadb:	jne    0x42eea0
  42eae1:	movzx  edx,BYTE PTR [rsi+rax*1]
  42eae5:	test   dl,dl
  42eae7:	jne    0x42ead3
  42eae9:	add    rax,rbx
  42eaec:	movzx  ecx,BYTE PTR [rax]
  42eaef:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  42eaf4:	mov    rdx,rcx
  42eaf7:	test   r10b,r10b
  42eafa:	jne    0x42ef80
  42eb00:	cmp    dl,0x50
  42eb03:	je     0x42edb0
  42eb09:	cmp    dl,0x70
  42eb0c:	je     0x42edb0
  42eb12:	mov    rbp,rax
  42eb15:	mov    r11d,0x1
  42eb1b:	xor    r12d,r12d
  42eb1e:	xor    r15d,r15d
  42eb21:	xor    r10d,r10d
  42eb24:	test   r8d,r8d
  42eb27:	jne    0x42eb2d
  42eb29:	lea    rax,[rbx-0x1]
  42eb2d:	test   r11d,r11d
  42eb30:	mov    QWORD PTR [r14],rax
  42eb33:	jne    0x42ee60
  42eb39:	test   r10d,r10d
  42eb3c:	je     0x42ec70
  42eb42:	test   r15d,r15d
  42eb45:	mov    eax,DWORD PTR [r13+0xc]
  42eb49:	jne    0x42eef0
  42eb4f:	cmp    eax,0x2
  42eb52:	je     0x42f198
  42eb58:	cmp    eax,0x3
  42eb5b:	je     0x42f182
  42eb61:	cmp    eax,0x1
  42eb64:	je     0x42ef68
  42eb6a:	mov    esi,DWORD PTR [r13+0x0]
  42eb6e:	mov    ebx,esi
  42eb70:	and    esi,0x1f
  42eb73:	sar    ebx,0x5
  42eb76:	cmp    esi,0x1
  42eb79:	mov    edi,ebx
  42eb7b:	sbb    edi,0xffffffff
  42eb7e:	xor    ecx,ecx
  42eb80:	mov    eax,edi
  42eb82:	sar    eax,1
  42eb84:	je     0x42eb97
  42eb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eb90:	add    ecx,0x1
  42eb93:	sar    eax,1
  42eb95:	jne    0x42eb90
  42eb97:	call   0x42bbe0
  42eb9c:	mov    rcx,QWORD PTR [rsp+0x88]
  42eba4:	test   ebx,ebx
  42eba6:	mov    QWORD PTR [rcx],rax
  42eba9:	mov    DWORD PTR [rax+0x14],edi
  42ebac:	jle    0x42f2b8
  42ebb2:	lea    ecx,[rbx-0x1]
  42ebb5:	lea    rdx,[rax+0x18]
  42ebb9:	lea    rcx,[rax+rcx*4+0x1c]
  42ebbe:	xchg   ax,ax
  42ebc0:	mov    DWORD PTR [rdx],0xffffffff
  42ebc6:	add    rdx,0x4
  42ebca:	cmp    rdx,rcx
  42ebcd:	jne    0x42ebc0
  42ebcf:	mov    edx,ebx
  42ebd1:	cmp    edi,ebx
  42ebd3:	jle    0x42ebe8
  42ebd5:	movsxd r8,edx
  42ebd8:	mov    edx,0x20
  42ebdd:	mov    ecx,edx
  42ebdf:	sub    ecx,esi
  42ebe1:	sar    edx,cl
  42ebe3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  42ebe8:	mov    eax,DWORD PTR [r13+0x4]
  42ebec:	mov    rdi,QWORD PTR [rsp+0x80]
  42ebf4:	mov    DWORD PTR [rdi],eax
  42ebf6:	mov    eax,0x11
  42ebfb:	jmp    0x42ee62
  42ec00:	movzx  eax,BYTE PTR [rbx]
  42ec03:	movzx  r9d,BYTE PTR [rsi]
  42ec07:	add    r8d,0x1
  42ec0b:	xor    r11d,r11d
  42ec0e:	xor    r12d,r12d
  42ec11:	movzx  r10d,BYTE PTR [rdi+rax*1]
  42ec16:	mov    rdx,rax
  42ec19:	test   r10b,r10b
  42ec1c:	mov    rax,rbx
  42ec1f:	je     0x42ec31
  42ec21:	add    rax,0x1
  42ec25:	movzx  ecx,BYTE PTR [rax]
  42ec28:	cmp    BYTE PTR [rdi+rcx*1],0x0
  42ec2c:	mov    rdx,rcx
  42ec2f:	jne    0x42ec21
  42ec31:	cmp    dl,r9b
  42ec34:	je     0x42eeb0
  42ec3a:	test   r12,r12
  42ec3d:	movzx  edx,BYTE PTR [rax]
  42ec40:	je     0x42ec49
  42ec42:	sub    r12d,eax
  42ec45:	shl    r12d,0x2
  42ec49:	cmp    dl,0x50
  42ec4c:	je     0x42edb9
  42ec52:	cmp    dl,0x70
  42ec55:	je     0x42edb9
  42ec5b:	test   r11d,r11d
  42ec5e:	mov    QWORD PTR [r14],rax
  42ec61:	mov    rbp,rax
  42ec64:	jne    0x42ee60
  42ec6a:	nop    WORD PTR [rax+rax*1+0x0]
  42ec70:	mov    rax,rbp
  42ec73:	xor    ecx,ecx
  42ec75:	sub    rax,rbx
  42ec78:	sub    eax,0x1
  42ec7b:	cmp    eax,0x7
  42ec7e:	jle    0x42ec8a
  42ec80:	sar    eax,1
  42ec82:	add    ecx,0x1
  42ec85:	cmp    eax,0x7
  42ec88:	jg     0x42ec80
  42ec8a:	call   0x42bbe0
  42ec8f:	cmp    BYTE PTR [rsi+0x1],0x0
  42ec93:	mov    r14,rax
  42ec96:	lea    r15,[rax+0x18]
  42ec9a:	je     0x42f1ae
  42eca0:	mov    edx,0x1
  42eca5:	jmp    0x42ecb3
  42eca7:	nop    WORD PTR [rax+rax*1+0x0]
  42ecb0:	mov    rdx,rax
  42ecb3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  42ecb8:	lea    rax,[rdx+0x1]
  42ecbc:	jne    0x42ecb0
  42ecbe:	cmp    rbx,rbp
  42ecc1:	jae    0x42f1b5
  42ecc7:	add    rsi,rdx
  42ecca:	mov    rax,r15
  42eccd:	xor    r9d,r9d
  42ecd0:	xor    r8d,r8d
  42ecd3:	jmp    0x42ed01
  42ecd5:	cmp    r8d,0x20
  42ecd9:	je     0x42ee73
  42ecdf:	movzx  r10d,cl
  42ece3:	mov    ecx,r8d
  42ece6:	add    r8d,0x4
  42ecea:	movzx  r10d,BYTE PTR [rdi+r10*1]
  42ecef:	mov    rbp,r11
  42ecf2:	and    r10d,0xf
  42ecf6:	shl    r10d,cl
  42ecf9:	or     r9d,r10d
  42ecfc:	cmp    rbx,rbp
  42ecff:	jae    0x42ed18
  42ed01:	movzx  ecx,BYTE PTR [rbp-0x1]
  42ed05:	lea    r11,[rbp-0x1]
  42ed09:	cmp    cl,BYTE PTR [rsi]
  42ed0b:	jne    0x42ecd5
  42ed0d:	sub    r11,rdx
  42ed10:	mov    rbp,r11
  42ed13:	cmp    rbx,rbp
  42ed16:	jb     0x42ed01
  42ed18:	bsr    edx,r9d
  42ed1c:	xor    edx,0x1f
  42ed1f:	mov    DWORD PTR [rax],r9d
  42ed22:	add    rax,0x4
  42ed26:	mov    esi,DWORD PTR [r13+0x0]
  42ed2a:	sub    rax,r15
  42ed2d:	sar    rax,0x2
  42ed31:	mov    DWORD PTR [r14+0x14],eax
  42ed35:	shl    eax,0x5
  42ed38:	sub    eax,edx
  42ed3a:	cmp    eax,esi
  42ed3c:	jg     0x42efe8
  42ed42:	mov    edi,0x0
  42ed47:	jl     0x42efbe
  42ed4d:	cmp    r12d,DWORD PTR [r13+0x8]
  42ed51:	jg     0x42ef60
  42ed57:	mov    eax,DWORD PTR [r13+0x4]
  42ed5b:	cmp    r12d,eax
  42ed5e:	jge    0x42f049
  42ed64:	mov    ebx,eax
  42ed66:	sub    ebx,r12d
  42ed69:	cmp    esi,ebx
  42ed6b:	jg     0x42f0a7
  42ed71:	mov    edx,DWORD PTR [r13+0xc]
  42ed75:	cmp    edx,0x2
  42ed78:	je     0x42f282
  42ed7e:	cmp    edx,0x3
  42ed81:	je     0x42f25f
  42ed87:	cmp    edx,0x1
  42ed8a:	je     0x42f292
  42ed90:	mov    rcx,r14
  42ed93:	call   0x42bcf0
  42ed98:	call   0x42fc38
  42ed9d:	mov    DWORD PTR [rax],0x22
  42eda3:	mov    eax,0x50
  42eda8:	jmp    0x42ee62
  42edad:	nop    DWORD PTR [rax]
  42edb0:	xor    r12d,r12d
  42edb3:	mov    r11d,0x1
  42edb9:	movzx  edx,BYTE PTR [rax+0x1]
  42edbd:	cmp    dl,0x2b
  42edc0:	je     0x42efe0
  42edc6:	cmp    dl,0x2d
  42edc9:	je     0x42eec1
  42edcf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  42edd3:	xor    r15d,r15d
  42edd6:	lea    r9,[rax+0x1]
  42edda:	lea    ecx,[rdx-0x1]
  42eddd:	cmp    cl,0x18
  42ede0:	ja     0x42eedf
  42ede6:	lea    rcx,[r9+0x1]
  42edea:	movzx  r9d,BYTE PTR [r9+0x1]
  42edef:	sub    edx,0x10
  42edf2:	xor    r10d,r10d
  42edf5:	movzx  ebp,BYTE PTR [rdi+r9*1]
  42edfa:	mov    r9d,ebp
  42edfd:	sub    r9d,0x1
  42ee01:	cmp    r9b,0x18
  42ee05:	ja     0x42ee41
  42ee07:	nop    WORD PTR [rax+rax*1+0x0]
  42ee10:	test   edx,0xf8000000
  42ee16:	mov    r9d,0x1
  42ee1c:	lea    edx,[rdx+rdx*4]
  42ee1f:	cmovne r10d,r9d
  42ee23:	add    rcx,0x1
  42ee27:	movzx  r9d,BYTE PTR [rcx]
  42ee2b:	lea    edx,[rbp+rdx*2-0x10]
  42ee2f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  42ee34:	mov    r9d,ebp
  42ee37:	sub    r9d,0x1
  42ee3b:	cmp    r9b,0x18
  42ee3f:	jbe    0x42ee10
  42ee41:	mov    r9d,r15d
  42ee44:	mov    rbp,rax
  42ee47:	mov    rax,rcx
  42ee4a:	neg    r9d
  42ee4d:	xor    edx,r9d
  42ee50:	add    edx,r15d
  42ee53:	add    r12d,edx
  42ee56:	jmp    0x42eb24
  42ee5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ee60:	xor    eax,eax
  42ee62:	add    rsp,0x28
  42ee66:	pop    rbx
  42ee67:	pop    rsi
  42ee68:	pop    rdi
  42ee69:	pop    rbp
  42ee6a:	pop    r12
  42ee6c:	pop    r13
  42ee6e:	pop    r14
  42ee70:	pop    r15
  42ee72:	ret    
  42ee73:	mov    DWORD PTR [rax],r9d
  42ee76:	mov    r8d,0x4
  42ee7c:	movzx  r10d,BYTE PTR [rbp-0x1]
  42ee81:	add    rax,0x4
  42ee85:	xor    r9d,r9d
  42ee88:	xor    ecx,ecx
  42ee8a:	jmp    0x42ecea
  42ee8f:	nop
  42ee90:	call   0x42f300
  42ee95:	jmp    0x42ea6f
  42ee9a:	nop    WORD PTR [rax+rax*1+0x0]
  42eea0:	mov    edx,r9d
  42eea3:	mov    rax,rbx
  42eea6:	jmp    0x42eb00
  42eeab:	nop    DWORD PTR [rax+rax*1+0x0]
  42eeb0:	test   r12,r12
  42eeb3:	je     0x42f1c5
  42eeb9:	movzx  edx,BYTE PTR [rax]
  42eebc:	jmp    0x42ec42
  42eec1:	mov    r15d,0x1
  42eec7:	movzx  edx,BYTE PTR [rax+0x2]
  42eecb:	lea    r9,[rax+0x2]
  42eecf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  42eed3:	lea    ecx,[rdx-0x1]
  42eed6:	cmp    cl,0x18
  42eed9:	jbe    0x42ede6
  42eedf:	mov    rbp,rax
  42eee2:	xor    r10d,r10d
  42eee5:	jmp    0x42eb24
  42eeea:	nop    WORD PTR [rax+rax*1+0x0]
  42eef0:	cmp    eax,0x2
  42eef3:	je     0x42f091
  42eef9:	cmp    eax,0x3
  42eefc:	jne    0x42ed98
  42ef02:	mov    r10d,DWORD PTR [rsp+0x90]
  42ef0a:	test   r10d,r10d
  42ef0d:	je     0x42ed98
  42ef13:	xor    ecx,ecx
  42ef15:	call   0x42bbe0
  42ef1a:	mov    r14,rax
  42ef1d:	mov    DWORD PTR [rax+0x14],0x1
  42ef24:	mov    DWORD PTR [rax+0x18],0x1
  42ef2b:	mov    eax,DWORD PTR [r13+0x4]
  42ef2f:	mov    rdi,QWORD PTR [rsp+0x88]
  42ef37:	mov    QWORD PTR [rdi],r14
  42ef3a:	mov    rdi,QWORD PTR [rsp+0x80]
  42ef42:	mov    DWORD PTR [rdi],eax
  42ef44:	call   0x42fc38
  42ef49:	mov    DWORD PTR [rax],0x22
  42ef4f:	mov    eax,0x62
  42ef54:	jmp    0x42ee62
  42ef59:	nop    DWORD PTR [rax+0x0]
  42ef60:	mov    rcx,r14
  42ef63:	call   0x42bcf0
  42ef68:	call   0x42fc38
  42ef6d:	mov    DWORD PTR [rax],0x22
  42ef73:	mov    eax,0xa3
  42ef78:	jmp    0x42ee62
  42ef7d:	nop    DWORD PTR [rax]
  42ef80:	cmp    cl,0x30
  42ef83:	mov    rbx,rax
  42ef86:	jne    0x42efa6
  42ef88:	nop    DWORD PTR [rax+rax*1+0x0]
  42ef90:	add    rbx,0x1
  42ef94:	movzx  ecx,BYTE PTR [rbx]
  42ef97:	cmp    cl,0x30
  42ef9a:	je     0x42ef90
  42ef9c:	movzx  edx,cl
  42ef9f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  42efa4:	mov    edx,ecx
  42efa6:	xor    r11d,r11d
  42efa9:	test   r10b,r10b
  42efac:	mov    r12,rax
  42efaf:	sete   r11b
  42efb3:	mov    r8d,0x1
  42efb9:	jmp    0x42ec19
  42efbe:	mov    ebx,esi
  42efc0:	mov    rcx,r14
  42efc3:	sub    ebx,eax
  42efc5:	mov    edx,ebx
  42efc7:	sub    r12d,ebx
  42efca:	call   0x42c0f0
  42efcf:	mov    r14,rax
  42efd2:	lea    r15,[rax+0x18]
  42efd6:	jmp    0x42ed4d
  42efdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42efe0:	xor    r15d,r15d
  42efe3:	jmp    0x42eec7
  42efe8:	mov    ebx,eax
  42efea:	mov    rcx,r14
  42efed:	xor    edi,edi
  42efef:	sub    ebx,esi
  42eff1:	mov    edx,ebx
  42eff3:	call   0x42f9d0
  42eff8:	test   eax,eax
  42effa:	je     0x42f037
  42effc:	lea    ecx,[rbx-0x1]
  42efff:	mov    r8d,0x1
  42f005:	mov    dil,0x1
  42f008:	mov    eax,ecx
  42f00a:	shl    r8d,cl
  42f00d:	sar    eax,0x5
  42f010:	cdqe   
  42f012:	test   DWORD PTR [r15+rax*4],r8d
  42f016:	je     0x42f037
  42f018:	test   ecx,ecx
  42f01a:	jle    0x42f22f
  42f020:	mov    edx,ecx
  42f022:	mov    rcx,r14
  42f025:	call   0x42f9d0
  42f02a:	test   eax,eax
  42f02c:	je     0x42f22f
  42f032:	mov    edi,0x3
  42f037:	mov    edx,ebx
  42f039:	mov    rcx,r14
  42f03c:	add    r12d,ebx
  42f03f:	call   0x42b980
  42f044:	jmp    0x42ed4d
  42f049:	mov    ebx,0x1
  42f04e:	test   edi,edi
  42f050:	je     0x42f074
  42f052:	mov    eax,DWORD PTR [r13+0xc]
  42f056:	cmp    eax,0x2
  42f059:	je     0x42f101
  42f05f:	cmp    eax,0x3
  42f062:	je     0x42f114
  42f068:	cmp    eax,0x1
  42f06b:	je     0x42f239
  42f071:	or     ebx,0x10
  42f074:	mov    rax,QWORD PTR [rsp+0x88]
  42f07c:	mov    QWORD PTR [rax],r14
  42f07f:	mov    rax,QWORD PTR [rsp+0x80]
  42f087:	mov    DWORD PTR [rax],r12d
  42f08a:	mov    eax,ebx
  42f08c:	jmp    0x42ee62
  42f091:	mov    r11d,DWORD PTR [rsp+0x90]
  42f099:	test   r11d,r11d
  42f09c:	jne    0x42ed98
  42f0a2:	jmp    0x42ef13
  42f0a7:	test   edi,edi
  42f0a9:	lea    ebp,[rbx-0x1]
  42f0ac:	jne    0x42f225
  42f0b2:	test   ebp,ebp
  42f0b4:	jle    0x42f0c2
  42f0b6:	mov    edx,ebp
  42f0b8:	mov    rcx,r14
  42f0bb:	call   0x42f9d0
  42f0c0:	mov    edi,eax
  42f0c2:	mov    eax,ebp
  42f0c4:	mov    ecx,ebp
  42f0c6:	mov    edx,edi
  42f0c8:	sar    eax,0x5
  42f0cb:	mov    r8d,0x1
  42f0d1:	or     edx,0x2
  42f0d4:	cdqe   
  42f0d6:	shl    r8d,cl
  42f0d9:	mov    rcx,r14
  42f0dc:	test   DWORD PTR [r15+rax*4],r8d
  42f0e0:	cmovne edi,edx
  42f0e3:	mov    edx,ebx
  42f0e5:	sub    esi,ebx
  42f0e7:	call   0x42b980
  42f0ec:	mov    ebx,0x2
  42f0f1:	mov    r12d,DWORD PTR [r13+0x4]
  42f0f5:	jmp    0x42f04e
  42f0fa:	xor    eax,eax
  42f0fc:	jmp    0x42eae9
  42f101:	mov    eax,0x1
  42f106:	sub    eax,DWORD PTR [rsp+0x90]
  42f10d:	mov    DWORD PTR [rsp+0x90],eax
  42f114:	mov    eax,DWORD PTR [rsp+0x90]
  42f11b:	test   eax,eax
  42f11d:	je     0x42f071
  42f123:	mov    rcx,r14
  42f126:	movsxd rdi,DWORD PTR [r14+0x14]
  42f12a:	call   0x42c600
  42f12f:	cmp    ebx,0x2
  42f132:	mov    r14,rax
  42f135:	lea    r8,[rax+0x18]
  42f139:	je     0x42f2bf
  42f13f:	cmp    edi,DWORD PTR [rax+0x14]
  42f142:	jl     0x42f15d
  42f144:	and    esi,0x1f
  42f147:	je     0x42f178
  42f149:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  42f14f:	mov    edx,0x20
  42f154:	sub    edx,esi
  42f156:	xor    eax,0x1f
  42f159:	cmp    edx,eax
  42f15b:	jle    0x42f178
  42f15d:	mov    edx,0x1
  42f162:	mov    rcx,r14
  42f165:	add    r12d,0x1
  42f169:	call   0x42b980
  42f16e:	cmp    r12d,DWORD PTR [r13+0x8]
  42f172:	jg     0x42ef60
  42f178:	mov    ebx,0x21
  42f17d:	jmp    0x42f074
  42f182:	mov    r8d,DWORD PTR [rsp+0x90]
  42f18a:	test   r8d,r8d
  42f18d:	jne    0x42ef68
  42f193:	jmp    0x42eb6a
  42f198:	mov    r9d,DWORD PTR [rsp+0x90]
  42f1a0:	test   r9d,r9d
  42f1a3:	je     0x42ef68
  42f1a9:	jmp    0x42eb6a
  42f1ae:	xor    edx,edx
  42f1b0:	jmp    0x42ecbe
  42f1b5:	mov    rax,r15
  42f1b8:	mov    edx,0x20
  42f1bd:	xor    r9d,r9d
  42f1c0:	jmp    0x42ed1f
  42f1c5:	movzx  edx,BYTE PTR [rsi+0x1]
  42f1c9:	test   dl,dl
  42f1cb:	je     0x42f2f4
  42f1d1:	cmp    dl,BYTE PTR [rax+0x1]
  42f1d4:	jne    0x42f254
  42f1d6:	mov    r12d,0x2
  42f1dc:	jmp    0x42f1eb
  42f1de:	xchg   ax,ax
  42f1e0:	add    r12,0x1
  42f1e4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  42f1e9:	jne    0x42f254
  42f1eb:	movzx  edx,BYTE PTR [rsi+r12*1]
  42f1f0:	test   dl,dl
  42f1f2:	jne    0x42f1e0
  42f1f4:	add    r12,rax
  42f1f7:	movzx  eax,BYTE PTR [r12]
  42f1fc:	cmp    BYTE PTR [rdi+rax*1],0x0
  42f200:	mov    rdx,rax
  42f203:	mov    rax,r12
  42f206:	je     0x42ec42
  42f20c:	nop    DWORD PTR [rax+0x0]
  42f210:	add    rax,0x1
  42f214:	movzx  ecx,BYTE PTR [rax]
  42f217:	cmp    BYTE PTR [rdi+rcx*1],0x0
  42f21b:	mov    rdx,rcx
  42f21e:	jne    0x42f210
  42f220:	jmp    0x42ec42
  42f225:	mov    edi,0x1
  42f22a:	jmp    0x42f0c2
  42f22f:	mov    edi,0x2
  42f234:	jmp    0x42f037
  42f239:	test   dil,0x2
  42f23d:	je     0x42f071
  42f243:	or     edi,DWORD PTR [r15]
  42f246:	and    edi,0x1
  42f249:	jne    0x42f123
  42f24f:	jmp    0x42f071
  42f254:	movzx  edx,BYTE PTR [rax]
  42f257:	xor    r12d,r12d
  42f25a:	jmp    0x42ec49
  42f25f:	mov    edx,DWORD PTR [rsp+0x90]
  42f266:	test   edx,edx
  42f268:	je     0x42ed90
  42f26e:	mov    DWORD PTR [r14+0x14],0x1
  42f276:	mov    DWORD PTR [r15],0x1
  42f27d:	jmp    0x42ef2f
  42f282:	mov    ecx,DWORD PTR [rsp+0x90]
  42f289:	test   ecx,ecx
  42f28b:	je     0x42f26e
  42f28d:	jmp    0x42ed90
  42f292:	cmp    ebx,esi
  42f294:	jne    0x42ed90
  42f29a:	cmp    esi,0x1
  42f29d:	jle    0x42f26e
  42f29f:	lea    edx,[rsi-0x1]
  42f2a2:	mov    rcx,r14
  42f2a5:	call   0x42f9d0
  42f2aa:	test   eax,eax
  42f2ac:	je     0x42ed90
  42f2b2:	mov    eax,DWORD PTR [r13+0x4]
  42f2b6:	jmp    0x42f26e
  42f2b8:	xor    edx,edx
  42f2ba:	jmp    0x42ebd1
  42f2bf:	mov    eax,DWORD PTR [r13+0x0]
  42f2c3:	mov    bl,0x22
  42f2c5:	sub    eax,0x1
  42f2c8:	cmp    eax,esi
  42f2ca:	jne    0x42f074
  42f2d0:	mov    edx,esi
  42f2d2:	mov    eax,0x1
  42f2d7:	mov    ecx,esi
  42f2d9:	sar    edx,0x5
  42f2dc:	shl    eax,cl
  42f2de:	movsxd rdx,edx
  42f2e1:	and    eax,DWORD PTR [r8+rdx*4]
  42f2e5:	cmp    eax,0x1
  42f2e8:	sbb    ebx,ebx
  42f2ea:	not    ebx
  42f2ec:	add    ebx,0x22
  42f2ef:	jmp    0x42f074
  42f2f4:	mov    r12d,0x1
  42f2fa:	jmp    0x42f1f4
  42f2ff:	nop
  42f300:	lea    r8,[rip+0xe107]        # 0x43d40e
  42f307:	lea    rdx,[rip+0x14432]        # 0x443740
  42f30e:	mov    ecx,0x10
  42f313:	mov    eax,0x30
  42f318:	nop    DWORD PTR [rax+rax*1+0x0]
  42f320:	mov    BYTE PTR [rdx+rax*1],cl
  42f323:	movzx  eax,BYTE PTR [r8+0x1]
  42f328:	add    ecx,0x1
  42f32b:	add    r8,0x1
  42f32f:	test   al,al
  42f331:	jne    0x42f320
  42f333:	lea    r8,[rip+0xe0cd]        # 0x43d407
  42f33a:	mov    ecx,0x1a
  42f33f:	mov    eax,0x61
  42f344:	mov    BYTE PTR [rdx+rax*1],cl
  42f347:	movzx  eax,BYTE PTR [r8+0x1]
  42f34c:	add    ecx,0x1
  42f34f:	add    r8,0x1
  42f353:	test   al,al
  42f355:	jne    0x42f344
  42f357:	lea    r8,[rip+0xe0a2]        # 0x43d400
  42f35e:	mov    ecx,0x1a
  42f363:	mov    eax,0x41
  42f368:	nop    DWORD PTR [rax+rax*1+0x0]
  42f370:	mov    BYTE PTR [rdx+rax*1],cl
  42f373:	movzx  eax,BYTE PTR [r8+0x1]
  42f378:	add    ecx,0x1
  42f37b:	add    r8,0x1
  42f37f:	test   al,al
  42f381:	jne    0x42f370
  42f383:	ret    
  42f384:	nop
  42f385:	nop
  42f386:	nop
  42f387:	nop
  42f388:	nop
  42f389:	nop
  42f38a:	nop
  42f38b:	nop
  42f38c:	nop
  42f38d:	nop
  42f38e:	nop
  42f38f:	nop
  42f390:	push   r15
  42f392:	push   r14
  42f394:	push   r13
  42f396:	push   r12
  42f398:	push   rbp
  42f399:	push   rdi
  42f39a:	push   rsi
  42f39b:	push   rbx
  42f39c:	sub    rsp,0x48
  42f3a0:	mov    r14,QWORD PTR [rip+0xe159]        # 0x43d500
  42f3a7:	mov    QWORD PTR [rsp+0x90],rcx
  42f3af:	cmp    BYTE PTR [r14+0x30],0x0
  42f3b4:	je     0x42f686
  42f3ba:	mov    eax,DWORD PTR [rdx]
  42f3bc:	mov    edx,eax
  42f3be:	sar    edx,0x5
  42f3c1:	and    eax,0x1f
  42f3c4:	movsxd rdx,edx
  42f3c7:	mov    DWORD PTR [rsp+0x3c],eax
  42f3cb:	mov    rax,QWORD PTR [rsp+0x90]
  42f3d3:	lea    rdi,[r8+rdx*4]
  42f3d7:	lea    rdx,[rdi+0x4]
  42f3db:	mov    rax,QWORD PTR [rax]
  42f3de:	cmove  rdx,rdi
  42f3e2:	mov    QWORD PTR [rsp+0x30],rdx
  42f3e7:	lea    rsi,[rdx-0x4]
  42f3eb:	mov    DWORD PTR [rdx-0x4],0x0
  42f3f2:	jmp    0x42f3f8
  42f3f4:	add    rax,0x1
  42f3f8:	movzx  edx,BYTE PTR [rax+0x1]
  42f3fc:	mov    ecx,edx
  42f3fe:	sub    edx,0x1
  42f401:	cmp    edx,0x1f
  42f404:	jbe    0x42f3f4
  42f406:	cmp    cl,0x30
  42f409:	je     0x42f6a4
  42f40f:	movzx  edx,BYTE PTR [rax+0x1]
  42f413:	xor    r9d,r9d
  42f416:	xor    r15d,r15d
  42f419:	xor    r12d,r12d
  42f41c:	test   edx,edx
  42f41e:	mov    rbp,rsi
  42f421:	mov    r11,rsi
  42f424:	lea    rbx,[rax+0x1]
  42f428:	je     0x42f4d0
  42f42e:	xchg   ax,ax
  42f430:	mov    ecx,edx
  42f432:	movzx  ecx,BYTE PTR [r14+rcx*1]
  42f437:	test   cl,cl
  42f439:	jne    0x42f5a4
  42f43f:	cmp    edx,0x20
  42f442:	ja     0x42f655
  42f448:	cmp    r12d,r15d
  42f44b:	jle    0x42f5e5
  42f451:	cmp    r9d,0x7
  42f455:	jg     0x42f4aa
  42f457:	cmp    r11,rbp
  42f45a:	jae    0x42f4aa
  42f45c:	mov    edi,0x8
  42f461:	mov    edx,DWORD PTR [r11]
  42f464:	mov    r13d,0x20
  42f46a:	sub    edi,r9d
  42f46d:	mov    QWORD PTR [rsp+0x28],rax
  42f472:	mov    r9,r11
  42f475:	shl    edi,0x2
  42f478:	sub    r13d,edi
  42f47b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f480:	mov    r10d,DWORD PTR [r9+0x4]
  42f484:	mov    ecx,r13d
  42f487:	add    r9,0x4
  42f48b:	mov    eax,r10d
  42f48e:	shl    eax,cl
  42f490:	mov    ecx,edi
  42f492:	or     edx,eax
  42f494:	mov    DWORD PTR [r9-0x4],edx
  42f498:	mov    edx,r10d
  42f49b:	shr    edx,cl
  42f49d:	mov    DWORD PTR [r9],edx
  42f4a0:	cmp    rbp,r9
  42f4a3:	ja     0x42f480
  42f4a5:	mov    rax,QWORD PTR [rsp+0x28]
  42f4aa:	cmp    r11,r8
  42f4ad:	ja     0x42f5d0
  42f4b3:	mov    rax,rbx
  42f4b6:	mov    r9d,0x8
  42f4bc:	nop    DWORD PTR [rax+0x0]
  42f4c0:	movzx  edx,BYTE PTR [rax+0x1]
  42f4c4:	lea    rbx,[rax+0x1]
  42f4c8:	test   edx,edx
  42f4ca:	jne    0x42f430
  42f4d0:	test   r12d,r12d
  42f4d3:	mov    eax,0x4
  42f4d8:	je     0x42f593
  42f4de:	mov    r10,r11
  42f4e1:	cmp    r9d,0x7
  42f4e5:	jg     0x42f533
  42f4e7:	cmp    rbp,r11
  42f4ea:	jbe    0x42f533
  42f4ec:	mov    edi,0x8
  42f4f1:	mov    eax,DWORD PTR [r11]
  42f4f4:	mov    r12d,0x20
  42f4fa:	sub    edi,r9d
  42f4fd:	mov    r9,r11
  42f500:	shl    edi,0x2
  42f503:	sub    r12d,edi
  42f506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f510:	mov    ebx,DWORD PTR [r9+0x4]
  42f514:	mov    ecx,r12d
  42f517:	add    r9,0x4
  42f51b:	mov    edx,ebx
  42f51d:	shl    edx,cl
  42f51f:	mov    ecx,edi
  42f521:	or     eax,edx
  42f523:	mov    DWORD PTR [r9-0x4],eax
  42f527:	mov    eax,ebx
  42f529:	shr    eax,cl
  42f52b:	mov    DWORD PTR [r9],eax
  42f52e:	cmp    rbp,r9
  42f531:	ja     0x42f510
  42f533:	cmp    r8,r11
  42f536:	jae    0x42f6d4
  42f53c:	mov    rax,r8
  42f53f:	nop
  42f540:	add    r10,0x4
  42f544:	mov    edx,DWORD PTR [r10-0x4]
  42f548:	add    rax,0x4
  42f54c:	cmp    rsi,r10
  42f54f:	mov    DWORD PTR [rax-0x4],edx
  42f552:	jae    0x42f540
  42f554:	add    rax,0x4
  42f558:	mov    DWORD PTR [rax-0x4],0x0
  42f55f:	cmp    rsi,rax
  42f562:	jae    0x42f554
  42f564:	mov    rax,QWORD PTR [rsp+0x30]
  42f569:	mov    eax,DWORD PTR [rax-0x4]
  42f56c:	test   eax,eax
  42f56e:	je     0x42f583
  42f570:	jmp    0x42f6ca
  42f575:	sub    rsi,0x4
  42f579:	mov    eax,DWORD PTR [rsi]
  42f57b:	test   eax,eax
  42f57d:	jne    0x42f6ca
  42f583:	cmp    r8,rsi
  42f586:	jne    0x42f575
  42f588:	mov    DWORD PTR [rsi],0x1
  42f58e:	mov    eax,0x5
  42f593:	add    rsp,0x48
  42f597:	pop    rbx
  42f598:	pop    rsi
  42f599:	pop    rdi
  42f59a:	pop    rbp
  42f59b:	pop    r12
  42f59d:	pop    r13
  42f59f:	pop    r14
  42f5a1:	pop    r15
  42f5a3:	ret    
  42f5a4:	add    r9d,0x1
  42f5a8:	add    r12d,0x1
  42f5ac:	cmp    r9d,0x8
  42f5b0:	jg     0x42f630
  42f5b2:	mov    eax,DWORD PTR [r11]
  42f5b5:	shl    eax,0x4
  42f5b8:	and    ecx,0xf
  42f5bb:	or     ecx,eax
  42f5bd:	mov    rax,rbx
  42f5c0:	mov    DWORD PTR [r11],ecx
  42f5c3:	jmp    0x42f4c0
  42f5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f5d0:	lea    rbp,[r11-0x4]
  42f5d4:	mov    DWORD PTR [r11-0x4],0x0
  42f5dc:	mov    r15d,r12d
  42f5df:	xor    r9d,r9d
  42f5e2:	mov    r11,rbp
  42f5e5:	movzx  edx,BYTE PTR [rax+0x2]
  42f5e9:	mov    rax,rbx
  42f5ec:	cmp    dl,0x20
  42f5ef:	ja     0x42f5fe
  42f5f1:	add    rax,0x1
  42f5f5:	movzx  edx,BYTE PTR [rax+0x1]
  42f5f9:	cmp    dl,0x20
  42f5fc:	jbe    0x42f5f1
  42f5fe:	cmp    dl,0x30
  42f601:	jne    0x42f4c0
  42f607:	movzx  edx,BYTE PTR [rax+0x2]
  42f60b:	and    edx,0xffffffdf
  42f60e:	cmp    dl,0x58
  42f611:	jne    0x42f4c0
  42f617:	cmp    BYTE PTR [rax+0x3],0x21
  42f61b:	lea    rdx,[rax+0x2]
  42f61f:	cmovae rax,rdx
  42f623:	jmp    0x42f4c0
  42f628:	nop    DWORD PTR [rax+rax*1+0x0]
  42f630:	cmp    r11,r8
  42f633:	mov    rax,rbx
  42f636:	jbe    0x42f4c0
  42f63c:	mov    DWORD PTR [r11-0x4],0x0
  42f644:	xor    eax,eax
  42f646:	sub    r11,0x4
  42f64a:	mov    r9d,0x1
  42f650:	jmp    0x42f5b8
  42f655:	cmp    edx,0x29
  42f658:	mov    rcx,rbx
  42f65b:	sete   dl
  42f65e:	test   r12d,r12d
  42f661:	je     0x42f700
  42f667:	test   dl,dl
  42f669:	je     0x42f704
  42f66f:	mov    rbx,QWORD PTR [rsp+0x90]
  42f677:	add    rax,0x2
  42f67b:	mov    r10,r11
  42f67e:	mov    QWORD PTR [rbx],rax
  42f681:	jmp    0x42f4e1
  42f686:	mov    QWORD PTR [rsp+0x30],r8
  42f68b:	mov    QWORD PTR [rsp+0x28],rdx
  42f690:	call   0x42f300
  42f695:	mov    r8,QWORD PTR [rsp+0x30]
  42f69a:	mov    rdx,QWORD PTR [rsp+0x28]
  42f69f:	jmp    0x42f3ba
  42f6a4:	movzx  edx,BYTE PTR [rax+0x2]
  42f6a8:	and    edx,0xffffffdf
  42f6ab:	cmp    dl,0x58
  42f6ae:	jne    0x42f40f
  42f6b4:	movzx  edx,BYTE PTR [rax+0x3]
  42f6b8:	cmp    dl,0x20
  42f6bb:	jbe    0x42f40f
  42f6c1:	add    rax,0x2
  42f6c5:	jmp    0x42f413
  42f6ca:	mov    eax,0x5
  42f6cf:	jmp    0x42f593
  42f6d4:	mov    edx,DWORD PTR [rsp+0x3c]
  42f6d8:	test   edx,edx
  42f6da:	je     0x42f564
  42f6e0:	mov    ecx,0x20
  42f6e5:	sub    ecx,DWORD PTR [rsp+0x3c]
  42f6e9:	mov    rbx,QWORD PTR [rsp+0x30]
  42f6ee:	mov    eax,0xffffffff
  42f6f3:	shr    eax,cl
  42f6f5:	and    eax,DWORD PTR [rbx-0x4]
  42f6f8:	mov    DWORD PTR [rbx-0x4],eax
  42f6fb:	jmp    0x42f56c
  42f700:	test   dl,dl
  42f702:	jne    0x42f722
  42f704:	movsx  eax,BYTE PTR [rbx+0x1]
  42f708:	lea    rcx,[rbx+0x1]
  42f70c:	test   eax,eax
  42f70e:	jne    0x42f71d
  42f710:	jmp    0x42f73b
  42f712:	add    rcx,0x1
  42f716:	movsx  eax,BYTE PTR [rcx]
  42f719:	test   eax,eax
  42f71b:	je     0x42f73b
  42f71d:	cmp    eax,0x29
  42f720:	jne    0x42f712
  42f722:	mov    rax,QWORD PTR [rsp+0x90]
  42f72a:	add    rcx,0x1
  42f72e:	mov    QWORD PTR [rax],rcx
  42f731:	mov    eax,0x4
  42f736:	jmp    0x42f593
  42f73b:	mov    al,0x4
  42f73d:	jmp    0x42f593
  42f742:	nop
  42f743:	nop
  42f744:	nop
  42f745:	nop
  42f746:	nop
  42f747:	nop
  42f748:	nop
  42f749:	nop
  42f74a:	nop
  42f74b:	nop
  42f74c:	nop
  42f74d:	nop
  42f74e:	nop
  42f74f:	nop
  42f750:	push   r13
  42f752:	push   r12
  42f754:	push   rbp
  42f755:	push   rdi
  42f756:	push   rsi
  42f757:	push   rbx
  42f758:	sub    rsp,0x28
  42f75c:	mov    rsi,rcx
  42f75f:	lea    ecx,[r8+0x8]
  42f763:	mov    ebp,edx
  42f765:	mov    edx,0x38e38e39
  42f76a:	mov    edi,r8d
  42f76d:	mov    ebx,r9d
  42f770:	mov    eax,ecx
  42f772:	sar    ecx,0x1f
  42f775:	imul   edx
  42f777:	sar    edx,1
  42f779:	sub    edx,ecx
  42f77b:	cmp    edx,0x1
  42f77e:	jle    0x42f844
  42f784:	mov    eax,0x1
  42f789:	xor    ecx,ecx
  42f78b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f790:	add    eax,eax
  42f792:	add    ecx,0x1
  42f795:	cmp    edx,eax
  42f797:	jg     0x42f790
  42f799:	call   0x42bbe0
  42f79e:	cmp    ebp,0x9
  42f7a1:	mov    DWORD PTR [rax+0x18],ebx
  42f7a4:	mov    DWORD PTR [rax+0x14],0x1
  42f7ab:	jle    0x42f830
  42f7b1:	lea    rbx,[rsi+0x9]
  42f7b5:	lea    r12d,[rbp-0xa]
  42f7b9:	lea    r13,[rsi+r12*1+0xa]
  42f7be:	mov    rsi,rbx
  42f7c1:	add    rsi,0x1
  42f7c5:	movsx  r8d,BYTE PTR [rsi-0x1]
  42f7ca:	mov    edx,0xa
  42f7cf:	mov    rcx,rax
  42f7d2:	sub    r8d,0x30
  42f7d6:	call   0x42bd60
  42f7db:	cmp    rsi,r13
  42f7de:	jne    0x42f7c1
  42f7e0:	movsxd rdx,DWORD PTR [rsp+0x80]
  42f7e8:	lea    r9,[r12+rdx*1+0x1]
  42f7ed:	add    rbx,r9
  42f7f0:	cmp    edi,ebp
  42f7f2:	jle    0x42f81f
  42f7f4:	sub    edi,0x1
  42f7f7:	sub    edi,ebp
  42f7f9:	lea    rsi,[rbx+rdi*1+0x1]
  42f7fe:	xchg   ax,ax
  42f800:	add    rbx,0x1
  42f804:	movsx  r8d,BYTE PTR [rbx-0x1]
  42f809:	mov    edx,0xa
  42f80e:	mov    rcx,rax
  42f811:	sub    r8d,0x30
  42f815:	call   0x42bd60
  42f81a:	cmp    rbx,rsi
  42f81d:	jne    0x42f800
  42f81f:	add    rsp,0x28
  42f823:	pop    rbx
  42f824:	pop    rsi
  42f825:	pop    rdi
  42f826:	pop    rbp
  42f827:	pop    r12
  42f829:	pop    r13
  42f82b:	ret    
  42f82c:	nop    DWORD PTR [rax+0x0]
  42f830:	movsxd rdx,DWORD PTR [rsp+0x80]
  42f838:	mov    ebp,0x9
  42f83d:	lea    rbx,[rsi+rdx*1+0x9]
  42f842:	jmp    0x42f7f0
  42f844:	xor    ecx,ecx
  42f846:	jmp    0x42f799
  42f84b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f850:	push   rdi
  42f851:	push   rsi
  42f852:	push   rbx
  42f853:	sub    rsp,0x50
  42f857:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42f85c:	mov    rsi,rdx
  42f85f:	lea    rdx,[rsp+0x38]
  42f864:	mov    rdi,rcx
  42f867:	call   0x42c3a0
  42f86c:	lea    rdx,[rsp+0x3c]
  42f871:	mov    rcx,rsi
  42f874:	movq   rbx,xmm0
  42f879:	movapd xmm6,xmm0
  42f87d:	call   0x42c3a0
  42f882:	mov    eax,DWORD PTR [rsp+0x38]
  42f886:	sub    eax,DWORD PTR [rsp+0x3c]
  42f88a:	movq   rcx,xmm0
  42f88f:	mov    r8d,eax
  42f892:	mov    eax,DWORD PTR [rdi+0x14]
  42f895:	sub    eax,DWORD PTR [rsi+0x14]
  42f898:	shl    eax,0x5
  42f89b:	add    eax,r8d
  42f89e:	test   eax,eax
  42f8a0:	jle    0x42f8e0
  42f8a2:	movq   rdx,xmm6
  42f8a7:	shl    eax,0x14
  42f8aa:	shr    rdx,0x20
  42f8ae:	add    eax,edx
  42f8b0:	shl    rax,0x20
  42f8b4:	mov    rdx,rax
  42f8b7:	mov    eax,ebx
  42f8b9:	or     rax,rdx
  42f8bc:	mov    QWORD PTR [rsp+0x28],rax
  42f8c1:	movsd  xmm6,QWORD PTR [rsp+0x28]
  42f8c7:	divsd  xmm6,xmm0
  42f8cb:	movapd xmm0,xmm6
  42f8cf:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  42f8d4:	add    rsp,0x50
  42f8d8:	pop    rbx
  42f8d9:	pop    rsi
  42f8da:	pop    rdi
  42f8db:	ret    
  42f8dc:	nop    DWORD PTR [rax+0x0]
  42f8e0:	movq   rdx,xmm0
  42f8e5:	shl    eax,0x14
  42f8e8:	shr    rdx,0x20
  42f8ec:	mov    ebx,edx
  42f8ee:	sub    ebx,eax
  42f8f0:	mov    rax,rbx
  42f8f3:	shl    rax,0x20
  42f8f7:	mov    rdx,rax
  42f8fa:	mov    eax,ecx
  42f8fc:	or     rax,rdx
  42f8ff:	mov    QWORD PTR [rsp+0x28],rax
  42f904:	movsd  xmm0,QWORD PTR [rsp+0x28]
  42f90a:	jmp    0x42f8c7
  42f90c:	nop    DWORD PTR [rax+0x0]
  42f910:	mov    r8,QWORD PTR [rcx]
  42f913:	jmp    0x42f92e
  42f915:	movsx  eax,BYTE PTR [r8]
  42f919:	lea    r11d,[rax-0x41]
  42f91d:	lea    r10d,[rax+0x20]
  42f921:	cmp    r11d,0x19
  42f925:	cmovbe eax,r10d
  42f929:	cmp    eax,r9d
  42f92c:	jne    0x42f950
  42f92e:	add    rdx,0x1
  42f932:	movsx  r9d,BYTE PTR [rdx-0x1]
  42f937:	add    r8,0x1
  42f93b:	test   r9d,r9d
  42f93e:	jne    0x42f915
  42f940:	mov    QWORD PTR [rcx],r8
  42f943:	mov    eax,0x1
  42f948:	ret    
  42f949:	nop    DWORD PTR [rax+0x0]
  42f950:	xor    eax,eax
  42f952:	ret    
  42f953:	nop    DWORD PTR [rax]
  42f956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f960:	sub    edx,0x1
  42f963:	lea    rax,[r8+0x18]
  42f967:	sar    edx,0x5
  42f96a:	movsxd rdx,edx
  42f96d:	lea    r11,[rcx+rdx*4+0x4]
  42f972:	movsxd rdx,DWORD PTR [r8+0x14]
  42f976:	lea    r10,[rax+rdx*4]
  42f97a:	cmp    rax,r10
  42f97d:	jae    0x42f9bb
  42f97f:	mov    rdx,rcx
  42f982:	add    rax,0x4
  42f986:	mov    r9d,DWORD PTR [rax-0x4]
  42f98a:	add    rdx,0x4
  42f98e:	cmp    r10,rax
  42f991:	mov    DWORD PTR [rdx-0x4],r9d
  42f995:	ja     0x42f982
  42f997:	sub    r10,r8
  42f99a:	lea    rax,[r10-0x19]
  42f99e:	shr    rax,0x2
  42f9a2:	lea    rcx,[rcx+rax*4+0x4]
  42f9a7:	cmp    r11,rcx
  42f9aa:	jbe    0x42f9c0
  42f9ac:	nop    DWORD PTR [rax+0x0]
  42f9b0:	add    rcx,0x4
  42f9b4:	mov    DWORD PTR [rcx-0x4],0x0
  42f9bb:	cmp    r11,rcx
  42f9be:	ja     0x42f9b0
  42f9c0:	repz ret 
  42f9c2:	nop    DWORD PTR [rax+0x0]
  42f9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f9d0:	movsxd rax,DWORD PTR [rcx+0x14]
  42f9d4:	mov    r9d,edx
  42f9d7:	lea    r8,[rcx+0x18]
  42f9db:	sar    r9d,0x5
  42f9df:	cmp    eax,r9d
  42f9e2:	jge    0x42fa11
  42f9e4:	lea    r9,[r8+rax*4]
  42f9e8:	cmp    r8,r9
  42f9eb:	jae    0x42fa56
  42f9ed:	mov    eax,DWORD PTR [r9-0x4]
  42f9f1:	lea    rdx,[r9-0x4]
  42f9f5:	test   eax,eax
  42f9f7:	je     0x42fa0a
  42f9f9:	jmp    0x42fa50
  42f9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42fa00:	sub    rdx,0x4
  42fa04:	mov    ecx,DWORD PTR [rdx]
  42fa06:	test   ecx,ecx
  42fa08:	jne    0x42fa50
  42fa0a:	cmp    r8,rdx
  42fa0d:	jb     0x42fa00
  42fa0f:	repz ret 
  42fa11:	jle    0x42fa40
  42fa13:	mov    ecx,edx
  42fa15:	movsxd r9,r9d
  42fa18:	and    ecx,0x1f
  42fa1b:	lea    r9,[r8+r9*4]
  42fa1f:	je     0x42f9e8
  42fa21:	mov    r10d,DWORD PTR [r9]
  42fa24:	mov    eax,r10d
  42fa27:	shr    eax,cl
  42fa29:	shl    eax,cl
  42fa2b:	mov    edx,eax
  42fa2d:	mov    eax,0x1
  42fa32:	cmp    edx,r10d
  42fa35:	je     0x42f9e8
  42fa37:	repz ret 
  42fa39:	nop    DWORD PTR [rax+0x0]
  42fa40:	movsxd r9,r9d
  42fa43:	lea    r9,[r8+r9*4]
  42fa47:	jmp    0x42f9e8
  42fa49:	nop    DWORD PTR [rax+0x0]
  42fa50:	mov    eax,0x1
  42fa55:	ret    
  42fa56:	xor    eax,eax
  42fa58:	ret    
  42fa59:	nop
  42fa5a:	nop
  42fa5b:	nop
  42fa5c:	nop
  42fa5d:	nop
  42fa5e:	nop
  42fa5f:	nop
  42fa60:	jmp    QWORD PTR [rip+0x1570a]        # 0x445170
  42fa66:	nop
  42fa67:	nop
  42fa68:	jmp    QWORD PTR [rip+0x156fa]        # 0x445168
  42fa6e:	nop
  42fa6f:	nop
  42fa70:	jmp    QWORD PTR [rip+0x156ea]        # 0x445160
  42fa76:	nop
  42fa77:	nop
  42fa78:	jmp    QWORD PTR [rip+0x156da]        # 0x445158
  42fa7e:	nop
  42fa7f:	nop
  42fa80:	jmp    QWORD PTR [rip+0x156ca]        # 0x445150
  42fa86:	nop
  42fa87:	nop
  42fa88:	jmp    QWORD PTR [rip+0x156ba]        # 0x445148
  42fa8e:	nop
  42fa8f:	nop
  42fa90:	jmp    QWORD PTR [rip+0x156aa]        # 0x445140
  42fa96:	nop
  42fa97:	nop
  42fa98:	jmp    QWORD PTR [rip+0x1569a]        # 0x445138
  42fa9e:	nop
  42fa9f:	nop
  42faa0:	jmp    QWORD PTR [rip+0x1568a]        # 0x445130
  42faa6:	nop
  42faa7:	nop
  42faa8:	jmp    QWORD PTR [rip+0x1567a]        # 0x445128
  42faae:	nop
  42faaf:	nop
  42fab0:	jmp    QWORD PTR [rip+0x1566a]        # 0x445120
  42fab6:	nop
  42fab7:	nop
  42fab8:	jmp    QWORD PTR [rip+0x1565a]        # 0x445118
  42fabe:	nop
  42fabf:	nop
  42fac0:	jmp    QWORD PTR [rip+0x1564a]        # 0x445110
  42fac6:	nop
  42fac7:	nop
  42fac8:	jmp    QWORD PTR [rip+0x1563a]        # 0x445108
  42face:	nop
  42facf:	nop
  42fad0:	jmp    QWORD PTR [rip+0x1562a]        # 0x445100
  42fad6:	nop
  42fad7:	nop
  42fad8:	jmp    QWORD PTR [rip+0x1561a]        # 0x4450f8
  42fade:	nop
  42fadf:	nop
  42fae0:	jmp    QWORD PTR [rip+0x1560a]        # 0x4450f0
  42fae6:	nop
  42fae7:	nop
  42fae8:	jmp    QWORD PTR [rip+0x155fa]        # 0x4450e8
  42faee:	nop
  42faef:	nop
  42faf0:	jmp    QWORD PTR [rip+0x155ea]        # 0x4450e0
  42faf6:	nop
  42faf7:	nop
  42faf8:	jmp    QWORD PTR [rip+0x155da]        # 0x4450d8
  42fafe:	nop
  42faff:	nop
  42fb00:	jmp    QWORD PTR [rip+0x155ca]        # 0x4450d0
  42fb06:	nop
  42fb07:	nop
  42fb08:	jmp    QWORD PTR [rip+0x155ba]        # 0x4450c8
  42fb0e:	nop
  42fb0f:	nop
  42fb10:	jmp    QWORD PTR [rip+0x155aa]        # 0x4450c0
  42fb16:	nop
  42fb17:	nop
  42fb18:	jmp    QWORD PTR [rip+0x1559a]        # 0x4450b8
  42fb1e:	nop
  42fb1f:	nop
  42fb20:	jmp    QWORD PTR [rip+0x1558a]        # 0x4450b0
  42fb26:	nop
  42fb27:	nop
  42fb28:	jmp    QWORD PTR [rip+0x1557a]        # 0x4450a8
  42fb2e:	nop
  42fb2f:	nop
  42fb30:	jmp    QWORD PTR [rip+0x1556a]        # 0x4450a0
  42fb36:	nop
  42fb37:	nop
  42fb38:	jmp    QWORD PTR [rip+0x1555a]        # 0x445098
  42fb3e:	nop
  42fb3f:	nop
  42fb40:	jmp    QWORD PTR [rip+0x1554a]        # 0x445090
  42fb46:	nop
  42fb47:	nop
  42fb48:	jmp    QWORD PTR [rip+0x1553a]        # 0x445088
  42fb4e:	nop
  42fb4f:	nop
  42fb50:	jmp    QWORD PTR [rip+0x1552a]        # 0x445080
  42fb56:	nop
  42fb57:	nop
  42fb58:	jmp    QWORD PTR [rip+0x1551a]        # 0x445078
  42fb5e:	nop
  42fb5f:	nop
  42fb60:	jmp    QWORD PTR [rip+0x1550a]        # 0x445070
  42fb66:	nop
  42fb67:	nop
  42fb68:	jmp    QWORD PTR [rip+0x154fa]        # 0x445068
  42fb6e:	nop
  42fb6f:	nop
  42fb70:	jmp    QWORD PTR [rip+0x154ea]        # 0x445060
  42fb76:	nop
  42fb77:	nop
  42fb78:	jmp    QWORD PTR [rip+0x154da]        # 0x445058
  42fb7e:	nop
  42fb7f:	nop
  42fb80:	jmp    QWORD PTR [rip+0x154ca]        # 0x445050
  42fb86:	nop
  42fb87:	nop
  42fb88:	jmp    QWORD PTR [rip+0x154ba]        # 0x445048
  42fb8e:	nop
  42fb8f:	nop
  42fb90:	jmp    QWORD PTR [rip+0x154aa]        # 0x445040
  42fb96:	nop
  42fb97:	nop
  42fb98:	jmp    QWORD PTR [rip+0x1549a]        # 0x445038
  42fb9e:	nop
  42fb9f:	nop
  42fba0:	jmp    QWORD PTR [rip+0x1548a]        # 0x445030
  42fba6:	nop
  42fba7:	nop
  42fba8:	jmp    QWORD PTR [rip+0x1547a]        # 0x445028
  42fbae:	nop
  42fbaf:	nop
  42fbb0:	jmp    QWORD PTR [rip+0x1546a]        # 0x445020
  42fbb6:	nop
  42fbb7:	nop
  42fbb8:	jmp    QWORD PTR [rip+0x1545a]        # 0x445018
  42fbbe:	nop
  42fbbf:	nop
  42fbc0:	jmp    QWORD PTR [rip+0x1544a]        # 0x445010
  42fbc6:	nop
  42fbc7:	nop
  42fbc8:	jmp    QWORD PTR [rip+0x1543a]        # 0x445008
  42fbce:	nop
  42fbcf:	nop
  42fbd0:	jmp    QWORD PTR [rip+0x1542a]        # 0x445000
  42fbd6:	nop
  42fbd7:	nop
  42fbd8:	jmp    QWORD PTR [rip+0x1541a]        # 0x444ff8
  42fbde:	nop
  42fbdf:	nop
  42fbe0:	jmp    QWORD PTR [rip+0x1540a]        # 0x444ff0
  42fbe6:	nop
  42fbe7:	nop
  42fbe8:	jmp    QWORD PTR [rip+0x153fa]        # 0x444fe8
  42fbee:	nop
  42fbef:	nop
  42fbf0:	jmp    QWORD PTR [rip+0x153ea]        # 0x444fe0
  42fbf6:	nop
  42fbf7:	nop
  42fbf8:	jmp    QWORD PTR [rip+0x153da]        # 0x444fd8
  42fbfe:	nop
  42fbff:	nop
  42fc00:	jmp    QWORD PTR [rip+0x153ca]        # 0x444fd0
  42fc06:	nop
  42fc07:	nop
  42fc08:	jmp    QWORD PTR [rip+0x153ba]        # 0x444fc8
  42fc0e:	nop
  42fc0f:	nop
  42fc10:	jmp    QWORD PTR [rip+0x153aa]        # 0x444fc0
  42fc16:	nop
  42fc17:	nop
  42fc18:	jmp    QWORD PTR [rip+0x1539a]        # 0x444fb8
  42fc1e:	nop
  42fc1f:	nop
  42fc20:	jmp    QWORD PTR [rip+0x1538a]        # 0x444fb0
  42fc26:	nop
  42fc27:	nop
  42fc28:	jmp    QWORD PTR [rip+0x1537a]        # 0x444fa8
  42fc2e:	nop
  42fc2f:	nop
  42fc30:	jmp    QWORD PTR [rip+0x1536a]        # 0x444fa0
  42fc36:	nop
  42fc37:	nop
  42fc38:	jmp    QWORD PTR [rip+0x15352]        # 0x444f90
  42fc3e:	nop
  42fc3f:	nop
  42fc40:	jmp    QWORD PTR [rip+0x15342]        # 0x444f88
  42fc46:	nop
  42fc47:	nop
  42fc48:	jmp    QWORD PTR [rip+0x15332]        # 0x444f80
  42fc4e:	nop
  42fc4f:	nop
  42fc50:	jmp    QWORD PTR [rip+0x1531a]        # 0x444f70
  42fc56:	nop
  42fc57:	nop
  42fc58:	jmp    QWORD PTR [rip+0x1530a]        # 0x444f68
  42fc5e:	nop
  42fc5f:	nop
  42fc60:	jmp    QWORD PTR [rip+0x152f2]        # 0x444f58
  42fc66:	nop
  42fc67:	nop
  42fc68:	jmp    QWORD PTR [rip+0x152e2]        # 0x444f50
  42fc6e:	nop
  42fc6f:	nop
  42fc70:	jmp    QWORD PTR [rip+0x152ca]        # 0x444f40
  42fc76:	nop
  42fc77:	nop
  42fc78:	jmp    QWORD PTR [rip+0x152ba]        # 0x444f38
  42fc7e:	nop
  42fc7f:	nop
  42fc80:	jmp    QWORD PTR [rip+0x152aa]        # 0x444f30
  42fc86:	nop
  42fc87:	nop
  42fc88:	jmp    QWORD PTR [rip+0x1529a]        # 0x444f28
  42fc8e:	nop
  42fc8f:	nop
  42fc90:	mov    rax,QWORD PTR [rip+0x139e9]        # 0x443680
  42fc97:	ret    
  42fc98:	nop    DWORD PTR [rax+rax*1+0x0]
  42fca0:	mov    rax,rcx
  42fca3:	xchg   QWORD PTR [rip+0x139d6],rax        # 0x443680
  42fcaa:	ret    
  42fcab:	nop
  42fcac:	nop
  42fcad:	nop
  42fcae:	nop
  42fcaf:	nop
  42fcb0:	mov    eax,DWORD PTR [rip+0x139da]        # 0x443690
  42fcb6:	ret    
  42fcb7:	nop    WORD PTR [rax+rax*1+0x0]
  42fcc0:	mov    eax,ecx
  42fcc2:	xchg   DWORD PTR [rip+0x139c8],eax        # 0x443690
  42fcc8:	ret    
  42fcc9:	nop    DWORD PTR [rax+0x0]
  42fcd0:	push   rbx
  42fcd1:	sub    rsp,0x20
  42fcd5:	mov    ebx,ecx
  42fcd7:	lea    rcx,[rip+0xd742]        # 0x43d420
  42fcde:	call   QWORD PTR [rip+0x15154]        # 0x444e38
  42fce4:	lea    rdx,[rip+0xd74b]        # 0x43d436
  42fceb:	mov    rcx,rax
  42fcee:	call   QWORD PTR [rip+0x1514c]        # 0x444e40
  42fcf4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x42fcc0
  42fcfb:	test   rax,rax
  42fcfe:	mov    ecx,ebx
  42fd00:	cmove  rax,rdx
  42fd04:	mov    QWORD PTR [rip+0x150d],rax        # 0x431218
  42fd0b:	add    rsp,0x20
  42fd0f:	pop    rbx
  42fd10:	rex.W jmp rax
  42fd13:	nop    DWORD PTR [rax]
  42fd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fd20:	sub    rsp,0x28
  42fd24:	lea    rcx,[rip+0xd6f5]        # 0x43d420
  42fd2b:	call   QWORD PTR [rip+0x15107]        # 0x444e38
  42fd31:	lea    rdx,[rip+0xd711]        # 0x43d449
  42fd38:	mov    rcx,rax
  42fd3b:	call   QWORD PTR [rip+0x150ff]        # 0x444e40
  42fd41:	lea    rdx,[rip+0xffffffffffffff68]        # 0x42fcb0
  42fd48:	test   rax,rax
  42fd4b:	cmove  rax,rdx
  42fd4f:	mov    QWORD PTR [rip+0x14ba],rax        # 0x431210
  42fd56:	add    rsp,0x28
  42fd5a:	rex.W jmp rax
  42fd5d:	nop    DWORD PTR [rax]
  42fd60:	mov    rax,QWORD PTR [rip+0x14b1]        # 0x431218
  42fd67:	rex.W jmp rax
  42fd6a:	nop    WORD PTR [rax+rax*1+0x0]
  42fd70:	mov    rax,QWORD PTR [rip+0x1499]        # 0x431210
  42fd77:	rex.W jmp rax
  42fd7a:	nop
  42fd7b:	nop
  42fd7c:	nop
  42fd7d:	nop
  42fd7e:	nop
  42fd7f:	nop
  42fd80:	push   rsi
  42fd81:	push   rbx
  42fd82:	sub    rsp,0x28
  42fd86:	mov    rax,QWORD PTR [rip+0x1493]        # 0x431220
  42fd8d:	mov    rsi,rdx
  42fd90:	lea    rdx,[rip+0xffffffffffffffe9]        # 0x42fd80
  42fd97:	mov    rbx,rcx
  42fd9a:	cmp    rax,rdx
  42fd9d:	je     0x42fdb0
  42fd9f:	mov    rdx,rsi
  42fda2:	mov    rcx,rbx
  42fda5:	add    rsp,0x28
  42fda9:	pop    rbx
  42fdaa:	pop    rsi
  42fdab:	rex.W jmp rax
  42fdae:	xchg   ax,ax
  42fdb0:	lea    rcx,[rip+0xd6a9]        # 0x43d460
  42fdb7:	call   QWORD PTR [rip+0x1507b]        # 0x444e38
  42fdbd:	lea    rdx,[rip+0xd6b2]        # 0x43d476
  42fdc4:	mov    rcx,rax
  42fdc7:	call   QWORD PTR [rip+0x15073]        # 0x444e40
  42fdcd:	lea    rdx,[rip+0x2c]        # 0x42fe00
  42fdd4:	test   rax,rax
  42fdd7:	mov    rcx,rbx
  42fdda:	cmove  rax,rdx
  42fdde:	mov    rdx,rsi
  42fde1:	mov    QWORD PTR [rip+0x1438],rax        # 0x431220
  42fde8:	add    rsp,0x28
  42fdec:	pop    rbx
  42fded:	pop    rsi
  42fdee:	rex.W jmp rax
  42fdf1:	nop    DWORD PTR [rax+rax*1+0x0]
  42fdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe00:	push   rbx
  42fe01:	sub    rsp,0x20
  42fe05:	test   rcx,rcx
  42fe08:	mov    rbx,rcx
  42fe0b:	je     0x42fe38
  42fe0d:	test   rdx,rdx
  42fe10:	mov    QWORD PTR [rcx],0xffffffffffffffff
  42fe17:	mov    QWORD PTR [rcx+0x8],0xffffffffffffffff
  42fe1f:	mov    QWORD PTR [rcx+0x10],0xffffffffffffffff
  42fe27:	mov    QWORD PTR [rcx+0x18],0xffffffffffffffff
  42fe2f:	mov    DWORD PTR [rcx+0x20],0xffffffff
  42fe36:	jne    0x42fe50
  42fe38:	call   QWORD PTR [rip+0x15152]        # 0x444f90
  42fe3e:	mov    DWORD PTR [rax],0x16
  42fe44:	mov    eax,0x16
  42fe49:	add    rsp,0x20
  42fe4d:	pop    rbx
  42fe4e:	ret    
  42fe4f:	nop
  42fe50:	mov    rcx,rdx
  42fe53:	call   QWORD PTR [rip+0x15157]        # 0x444fb0
  42fe59:	test   rax,rax
  42fe5c:	je     0x42fe90
  42fe5e:	mov    rdx,QWORD PTR [rax]
  42fe61:	mov    QWORD PTR [rbx],rdx
  42fe64:	mov    rdx,QWORD PTR [rax+0x8]
  42fe68:	mov    QWORD PTR [rbx+0x8],rdx
  42fe6c:	mov    rdx,QWORD PTR [rax+0x10]
  42fe70:	mov    QWORD PTR [rbx+0x10],rdx
  42fe74:	mov    rdx,QWORD PTR [rax+0x18]
  42fe78:	mov    QWORD PTR [rbx+0x18],rdx
  42fe7c:	mov    eax,DWORD PTR [rax+0x20]
  42fe7f:	mov    DWORD PTR [rbx+0x20],eax
  42fe82:	xor    eax,eax
  42fe84:	add    rsp,0x20
  42fe88:	pop    rbx
  42fe89:	ret    
  42fe8a:	nop    WORD PTR [rax+rax*1+0x0]
  42fe90:	call   QWORD PTR [rip+0x150fa]        # 0x444f90
  42fe96:	mov    eax,DWORD PTR [rax]
  42fe98:	jmp    0x42fe49
  42fe9a:	nop    WORD PTR [rax+rax*1+0x0]
  42fea0:	jmp    0x42fd80
  42fea5:	nop
  42fea6:	nop
  42fea7:	nop
  42fea8:	nop
  42fea9:	nop
  42feaa:	nop
  42feab:	nop
  42feac:	nop
  42fead:	nop
  42feae:	nop
  42feaf:	nop
  42feb0:	jmp    QWORD PTR [rip+0x15062]        # 0x444f18
  42feb6:	nop
  42feb7:	nop
  42feb8:	jmp    QWORD PTR [rip+0x15052]        # 0x444f10
  42febe:	nop
  42febf:	nop
  42fec0:	jmp    QWORD PTR [rip+0x15042]        # 0x444f08
  42fec6:	nop
  42fec7:	nop
  42fec8:	jmp    QWORD PTR [rip+0x15032]        # 0x444f00
  42fece:	nop
  42fecf:	nop
  42fed0:	jmp    QWORD PTR [rip+0x15022]        # 0x444ef8
  42fed6:	nop
  42fed7:	nop
  42fed8:	jmp    QWORD PTR [rip+0x15012]        # 0x444ef0
  42fede:	nop
  42fedf:	nop
  42fee0:	jmp    QWORD PTR [rip+0x15002]        # 0x444ee8
  42fee6:	nop
  42fee7:	nop
  42fee8:	jmp    QWORD PTR [rip+0x14ff2]        # 0x444ee0
  42feee:	nop
  42feef:	nop
  42fef0:	jmp    QWORD PTR [rip+0x14fe2]        # 0x444ed8
  42fef6:	nop
  42fef7:	nop
  42fef8:	jmp    QWORD PTR [rip+0x14fd2]        # 0x444ed0
  42fefe:	nop
  42feff:	nop
  42ff00:	jmp    QWORD PTR [rip+0x14fc2]        # 0x444ec8
  42ff06:	nop
  42ff07:	nop
  42ff08:	jmp    QWORD PTR [rip+0x14fb2]        # 0x444ec0
  42ff0e:	nop
  42ff0f:	nop
  42ff10:	jmp    QWORD PTR [rip+0x14fa2]        # 0x444eb8
  42ff16:	nop
  42ff17:	nop
  42ff18:	jmp    QWORD PTR [rip+0x14f92]        # 0x444eb0
  42ff1e:	nop
  42ff1f:	nop
  42ff20:	jmp    QWORD PTR [rip+0x14f82]        # 0x444ea8
  42ff26:	nop
  42ff27:	nop
  42ff28:	jmp    QWORD PTR [rip+0x14f72]        # 0x444ea0
  42ff2e:	nop
  42ff2f:	nop
  42ff30:	jmp    QWORD PTR [rip+0x14f62]        # 0x444e98
  42ff36:	nop
  42ff37:	nop
  42ff38:	jmp    QWORD PTR [rip+0x14f52]        # 0x444e90
  42ff3e:	nop
  42ff3f:	nop
  42ff40:	jmp    QWORD PTR [rip+0x14f42]        # 0x444e88
  42ff46:	nop
  42ff47:	nop
  42ff48:	jmp    QWORD PTR [rip+0x14f32]        # 0x444e80
  42ff4e:	nop
  42ff4f:	nop
  42ff50:	jmp    QWORD PTR [rip+0x14f22]        # 0x444e78
  42ff56:	nop
  42ff57:	nop
  42ff58:	jmp    QWORD PTR [rip+0x14f12]        # 0x444e70
  42ff5e:	nop
  42ff5f:	nop
  42ff60:	jmp    QWORD PTR [rip+0x14f02]        # 0x444e68
  42ff66:	nop
  42ff67:	nop
  42ff68:	jmp    QWORD PTR [rip+0x14ef2]        # 0x444e60
  42ff6e:	nop
  42ff6f:	nop
  42ff70:	jmp    QWORD PTR [rip+0x14ee2]        # 0x444e58
  42ff76:	nop
  42ff77:	nop
  42ff78:	jmp    QWORD PTR [rip+0x14ed2]        # 0x444e50
  42ff7e:	nop
  42ff7f:	nop
  42ff80:	jmp    QWORD PTR [rip+0x14ec2]        # 0x444e48
  42ff86:	nop
  42ff87:	nop
  42ff88:	jmp    QWORD PTR [rip+0x14eb2]        # 0x444e40
  42ff8e:	nop
  42ff8f:	nop
  42ff90:	jmp    QWORD PTR [rip+0x14ea2]        # 0x444e38
  42ff96:	nop
  42ff97:	nop
  42ff98:	jmp    QWORD PTR [rip+0x14e92]        # 0x444e30
  42ff9e:	nop
  42ff9f:	nop
  42ffa0:	jmp    QWORD PTR [rip+0x14e82]        # 0x444e28
  42ffa6:	nop
  42ffa7:	nop
  42ffa8:	jmp    QWORD PTR [rip+0x14e72]        # 0x444e20
  42ffae:	nop
  42ffaf:	nop
  42ffb0:	jmp    QWORD PTR [rip+0x14e62]        # 0x444e18
  42ffb6:	nop
  42ffb7:	nop
  42ffb8:	jmp    QWORD PTR [rip+0x14e52]        # 0x444e10
  42ffbe:	nop
  42ffbf:	nop
  42ffc0:	jmp    QWORD PTR [rip+0x14e42]        # 0x444e08
  42ffc6:	nop
  42ffc7:	nop
  42ffc8:	jmp    QWORD PTR [rip+0x14e32]        # 0x444e00
  42ffce:	nop
  42ffcf:	nop
  42ffd0:	jmp    QWORD PTR [rip+0x14e22]        # 0x444df8
  42ffd6:	nop
  42ffd7:	nop
  42ffd8:	jmp    QWORD PTR [rip+0x14e12]        # 0x444df0
  42ffde:	nop
  42ffdf:	nop
  42ffe0:	jmp    QWORD PTR [rip+0x14e02]        # 0x444de8
  42ffe6:	nop
  42ffe7:	nop
  42ffe8:	jmp    QWORD PTR [rip+0x14df2]        # 0x444de0
  42ffee:	nop
  42ffef:	nop
  42fff0:	sub    rsp,0x38
  42fff4:	lea    rax,[rip+0x20fb]        # 0x4320f6
  42fffb:	lea    r9,[rip+0x20c7]        # 0x4320c9
  430002:	lea    r8,[rip+0x20cf]        # 0x4320d8
  430009:	xor    edx,edx
  43000b:	xor    ecx,ecx
  43000d:	mov    DWORD PTR [rsp+0x28],0x58d
  430015:	mov    QWORD PTR [rsp+0x20],rax
  43001a:	call   0x4226c0
  43001f:	call   0x42fbf8
  430024:	nop
  430025:	sub    rsp,0x38
  430029:	lea    rax,[rip+0x2627]        # 0x432657
  430030:	lea    r9,[rip+0x2617]        # 0x43264e
  430037:	test   r8d,r8d
  43003a:	lea    r8,[rip+0x261f]        # 0x432660
  430041:	mov    QWORD PTR [rsp+0x28],rdx
  430046:	mov    QWORD PTR [rsp+0x20],rcx
  43004b:	cmove  r9,rax
  43004f:	mov    edx,0x8
  430054:	xor    ecx,ecx
  430056:	call   0x4226c0
  43005b:	mov    ecx,0x1
  430060:	call   0x401cb0
  430065:	nop
  430066:	sub    rsp,0x28
  43006a:	lea    r8,[rip+0x2614]        # 0x432685
  430071:	xor    ecx,ecx
  430073:	mov    edx,0x10
  430078:	call   0x4226c0
  43007d:	mov    ecx,0x1
  430082:	call   0x401cb0
  430087:	nop
  430088:	nop
  430089:	nop
  43008a:	nop
  43008b:	nop
  43008c:	nop
  43008d:	nop
  43008e:	nop
  43008f:	nop
  430090:	push   rdi
  430091:	push   rsi
  430092:	push   rbx
  430093:	sub    rsp,0x40
  430097:	mov    edi,DWORD PTR [rcx+0x4]
  43009a:	mov    esi,DWORD PTR [rcx]
  43009c:	mov    rbx,rcx
  43009f:	mov    ecx,edx
  4300a1:	call   0x422718
  4300a6:	mov    rdx,QWORD PTR [rbx+0x118]
  4300ad:	lea    r9,[rip+0x45b0]        # 0x434664
  4300b4:	test   rdx,rdx
  4300b7:	jne    0x4300c7
  4300b9:	mov    rdx,QWORD PTR [rbx+0x120]
  4300c0:	lea    r9,[rip+0x45a9]        # 0x434670
  4300c7:	lea    r8,[rip+0x45ba]        # 0x434688
  4300ce:	mov    QWORD PTR [rsp+0x20],rdx
  4300d3:	xor    ecx,ecx
  4300d5:	mov    DWORD PTR [rsp+0x38],edi
  4300d9:	mov    DWORD PTR [rsp+0x30],esi
  4300dd:	mov    edx,0x10
  4300e2:	mov    QWORD PTR [rsp+0x28],rax
  4300e7:	call   0x4226c0
  4300ec:	mov    ecx,0x1
  4300f1:	call   0x401cb0
  4300f6:	nop
  4300f7:	sub    rsp,0x28
  4300fb:	lea    r8,[rip+0x468e]        # 0x434790
  430102:	xor    ecx,ecx
  430104:	mov    edx,0x8
  430109:	call   0x4226c0
  43010e:	mov    ecx,0x1
  430113:	call   0x401cb0
  430118:	nop
  430119:	nop
  43011a:	nop
  43011b:	nop
  43011c:	nop
  43011d:	nop
  43011e:	nop
  43011f:	nop
  430120:	sub    rsp,0x28
  430124:	lea    rdx,[rip+0x9e85]        # 0x439fb0
  43012b:	mov    ecx,0x2
  430130:	mov    r8d,0x2a
  430136:	call   0x42fa78
  43013b:	mov    ecx,0x7b
  430140:	call   0x42fbe0
  430145:	nop
  430146:	nop
  430147:	nop
  430148:	nop
  430149:	nop
  43014a:	nop
  43014b:	nop
  43014c:	nop
  43014d:	nop
  43014e:	nop
  43014f:	nop
  430150:	push   rbp
  430151:	push   rdi
  430152:	push   rsi
  430153:	push   rbx
  430154:	sub    rsp,0x38
  430158:	mov    rbp,rdx
  43015b:	mov    ebx,ecx
  43015d:	call   0x422a10
  430162:	call   0x401c80
  430167:	lea    rcx,[rip+0xfffffffffffe4382]        # 0x4144f0
  43016e:	call   0x401ca0
  430173:	call   QWORD PTR [rip+0x14dd7]        # 0x444f50
  430179:	lea    rcx,[rax+0x60]
  43017d:	xor    r9d,r9d
  430180:	xor    edx,edx
  430182:	mov    r8d,0x4
  430188:	call   0x42fb10
  43018d:	mov    ecx,0x1
  430192:	call   0x422688
  430197:	mov    r8,QWORD PTR [rip+0xd722]        # 0x43d8c0
  43019e:	mov    rdx,rbp
  4301a1:	mov    ecx,ebx
  4301a3:	call   0x405180
  4301a8:	cmp    ebx,0x1
  4301ab:	jle    0x4301c5
  4301ad:	mov    rsi,QWORD PTR [rbp+0x8]
  4301b1:	lea    rdi,[rip+0xbb71]        # 0x43bd29
  4301b8:	mov    ecx,0x3
  4301bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4301bf:	je     0x430309
  4301c5:	call   0x422328
  4301ca:	call   0x422018
  4301cf:	call   0x422068
  4301d4:	call   0x422280
  4301d9:	call   0x422200
  4301de:	mov    r8,QWORD PTR [rip+0xd6db]        # 0x43d8c0
  4301e5:	mov    rdx,rbp
  4301e8:	mov    ecx,ebx
  4301ea:	call   0x405510
  4301ef:	call   0x420b70
  4301f4:	mov    rdx,rbp
  4301f7:	mov    ecx,ebx
  4301f9:	call   0x40ed90
  4301fe:	test   eax,eax
  430200:	js     0x4302e2
  430206:	mov    eax,DWORD PTR [rip+0x11eb4]        # 0x4420c0
  43020c:	test   eax,eax
  43020e:	jle    0x4302ba
  430214:	call   0x414df0
  430219:	mov    rbx,rax
  43021c:	mov    DWORD PTR [rip+0x12026],eax        # 0x442248
  430222:	call   0x41e010
  430227:	test   eax,eax
  430229:	js     0x4302e2
  43022f:	call   0x414df0
  430234:	mov    rdx,QWORD PTR [rip+0xd4d5]        # 0x43d710
  43023b:	cmp    DWORD PTR [rdx],0x0
  43023e:	jne    0x430335
  430244:	mov    rax,QWORD PTR [rip+0x1200d]        # 0x442258
  43024b:	mov    r9,QWORD PTR [rip+0x11ffe]        # 0x442250
  430252:	lea    r8,[rip+0xbb57]        # 0x43bdb0
  430259:	mov    edx,0x30
  43025e:	xor    ecx,ecx
  430260:	mov    QWORD PTR [rsp+0x20],rax
  430265:	call   0x4226c0
  43026a:	mov    rdx,QWORD PTR [rip+0x11fe7]        # 0x442258
  430271:	pxor   xmm0,xmm0
  430275:	pxor   xmm1,xmm1
  430279:	mov    rax,rdx
  43027c:	add    rax,QWORD PTR [rip+0x11fcd]        # 0x442250
  430283:	cvtsi2ss xmm1,rdx
  430288:	cvtsi2ss xmm0,rax
  43028d:	mov    rax,QWORD PTR [rip+0xd57c]        # 0x43d810
  430294:	mulss  xmm0,DWORD PTR [rax]
  430298:	ucomiss xmm1,xmm0
  43029b:	ja     0x43032b
  4302a1:	mov    eax,DWORD PTR [rip+0x11f8d]        # 0x442234
  4302a7:	mov    ecx,0xff
  4302ac:	test   eax,eax
  4302ae:	cmove  ecx,DWORD PTR [rip+0x11f73]        # 0x442228
  4302b5:	call   0x401cb0
  4302ba:	cmp    DWORD PTR [rip+0x11e1f],0x0        # 0x4420e0
  4302c1:	jne    0x4302ec
  4302c3:	call   0x40ed40
  4302c8:	lea    r9,[rip+0xc045]        # 0x43c314
  4302cf:	lea    r8,[rip+0xba5a]        # 0x43bd30
  4302d6:	mov    edx,0x18
  4302db:	xor    ecx,ecx
  4302dd:	call   0x4226c0
  4302e2:	mov    ecx,0x1
  4302e7:	call   0x401cb0
  4302ec:	lea    r8,[rip+0xba75]        # 0x43bd68
  4302f3:	xor    ecx,ecx
  4302f5:	mov    edx,0x8
  4302fa:	call   0x4226c0
  4302ff:	mov    ecx,0x1
  430304:	call   0x401cb0
  430309:	lea    rcx,[rip+0xfffffffffffe41d0]        # 0x4144e0
  430310:	mov    DWORD PTR [rip+0x11f4e],0x1        # 0x442268
  43031a:	sub    ebx,0x1
  43031d:	add    rbp,0x8
  430321:	call   0x422690
  430326:	jmp    0x4301c5
  43032b:	mov    ecx,0x45
  430330:	call   0x401cb0
  430335:	pxor   xmm0,xmm0
  430339:	sub    rax,rbx
  43033c:	lea    r8,[rip+0xba51]        # 0x43bd94
  430343:	mov    edx,0x20
  430348:	xor    ecx,ecx
  43034a:	cvtsi2sd xmm0,rax
  43034f:	divsd  xmm0,QWORD PTR [rip+0xc011]        # 0x43c368
  430357:	movapd xmm3,xmm0
  43035b:	movq   r9,xmm0
  430360:	call   0x4226c0
  430365:	jmp    0x430244
  43036a:	nop
  43036b:	nop
  43036c:	nop
  43036d:	nop
  43036e:	nop
  43036f:	nop
  430370:	(bad)  
  430371:	(bad)  
  430372:	(bad)  
  430373:	(bad)  
  430374:	(bad)  
  430375:	(bad)  
  430376:	(bad)  
  430377:	inc    DWORD PTR [rax]
  430379:	add    BYTE PTR [rax],al
  43037b:	add    BYTE PTR [rax],al
  43037d:	add    BYTE PTR [rax],al
  43037f:	add    bh,bh
  430381:	(bad)  
  430382:	(bad)  
  430383:	(bad)  
  430384:	(bad)  
  430385:	(bad)  
  430386:	(bad)  
  430387:	inc    DWORD PTR [rax]
  430389:	add    BYTE PTR [rax],al
  43038b:	add    BYTE PTR [rax],al
  43038d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000431000 <.data>:
  431000:	or     al,BYTE PTR [rax]
	...
  43103e:	add    BYTE PTR [rax],al
  431040:	add    BYTE PTR [rsi],ch
  431042:	rex.XB add BYTE PTR [r8],al
  431045:	add    BYTE PTR [rax],al
  431047:	add    al,bh
  431049:	(bad)  
  43104a:	(bad)  
  43104b:	inc    DWORD PTR [rax]
  43104d:	add    BYTE PTR [rax],al
  43104f:	add    BYTE PTR [rsi],al
  431051:	rex.XB add BYTE PTR cs:[r8],al
	...
  43105d:	add    BYTE PTR [rax],al
  43105f:	add    BYTE PTR [rsi+rbp*1],cl
  431062:	rex.XB add BYTE PTR [r8],al
  431065:	add    BYTE PTR [rax],al
  431067:	add    BYTE PTR [rax],cl
  431069:	add    BYTE PTR [rax],al
  43106b:	add    BYTE PTR [rax],al
  43106d:	add    BYTE PTR [rax],al
  43106f:	add    BYTE PTR [rdx],dl
  431071:	rex.XB add BYTE PTR cs:[r8],al
  431075:	add    BYTE PTR [rax],al
  431077:	add    BYTE PTR [rax],dl
  431079:	add    BYTE PTR [rax],al
  43107b:	add    BYTE PTR [rax],al
  43107d:	add    BYTE PTR [rax],al
  43107f:	add    BYTE PTR [rax],bl
  431081:	rex.XB add BYTE PTR cs:[r8],al
  431085:	add    BYTE PTR [rax],al
  431087:	add    BYTE PTR [rax],bl
  431089:	add    BYTE PTR [rax],al
  43108b:	add    BYTE PTR [rax],al
  43108d:	add    BYTE PTR [rax],al
  43108f:	add    BYTE PTR [rax],ah
  431091:	rex.XB add BYTE PTR cs:[r8],al
  431095:	add    BYTE PTR [rax],al
  431097:	add    BYTE PTR [rax],ah
  431099:	add    BYTE PTR [rax],al
  43109b:	add    BYTE PTR [rax],al
  43109d:	add    BYTE PTR [rax],al
  43109f:	add    BYTE PTR [rip+0x432e],ah        # 0x4353d3
  4310a5:	add    BYTE PTR [rax],al
  4310a7:	add    BYTE PTR [rax],ch
  4310a9:	add    BYTE PTR [rax],al
  4310ab:	add    BYTE PTR [rax],al
  4310ad:	add    BYTE PTR [rax],al
  4310af:	add    bl,ch
  4310b1:	sub    al,BYTE PTR [rbx+0x0]
  4310b4:	add    BYTE PTR [rax],al
  4310b6:	add    BYTE PTR [rax],al
  4310b8:	xor    BYTE PTR [rax],al
  4310ba:	add    BYTE PTR [rax],al
  4310bc:	add    BYTE PTR [rax],al
  4310be:	add    BYTE PTR [rax],al
  4310c0:	sub    eax,0x432e
  4310c5:	add    BYTE PTR [rax],al
  4310c7:	add    BYTE PTR [rax],bh
  4310c9:	add    BYTE PTR [rax],al
  4310cb:	add    BYTE PTR [rax],al
  4310cd:	add    BYTE PTR [rax],al
  4310cf:	add    BYTE PTR [rcx],al
  4310d1:	add    BYTE PTR [rax],al
  4310d3:	add    BYTE PTR [rax],dh
	...
  4310fd:	add    BYTE PTR [rax],al
  4310ff:	add    BYTE PTR [rbx+0x13f2aaa],ch
  431105:	add    BYTE PTR [rax],al
  431107:	add    bh,bh
  431109:	(bad)  
  43110a:	(bad)  
  43110b:	(bad)  
  43110c:	(bad)  
  43110d:	(bad)  
  43110e:	(bad)  
  43110f:	(bad)  
  431110:	(bad)  
  431111:	(bad)  
  431112:	(bad)  
  431113:	inc    DWORD PTR [rax]
  431115:	add    DWORD PTR [rax],eax
  431117:	add    BYTE PTR [rax],al
  431119:	lock rol BYTE PTR [rdi+0x0],cl
  43111d:	add    BYTE PTR [rax],ah
  43111f:	rex.B int 0xcc
  431122:	int3   
  431123:	cmp    eax,0x0
	...
  431130:	(bad)  
  431131:	(bad)  
  431132:	(bad)  
  431133:	(bad)  
  431134:	(bad)  
  431135:	(bad)  
  431136:	(bad)  
  431137:	inc    DWORD PTR [rax]
  431139:	add    BYTE PTR [rax],al
  43113b:	add    BYTE PTR [rax],al
  43113d:	add    BYTE PTR [rax],al
  43113f:	add    BYTE PTR [rax+0x4303],cl
	...
  43114d:	add    BYTE PTR [rax],al
  43114f:	add    bh,bh
  431151:	(bad)  
  431152:	(bad)  
  431153:	(bad)  
  431154:	(bad)  
  431155:	(bad)  
  431156:	(bad)  
  431157:	inc    DWORD PTR [rax]
  431159:	add    BYTE PTR [rax],al
  43115b:	add    BYTE PTR [rax],al
  43115d:	add    BYTE PTR [rax],al
  43115f:	add    bh,bh
	...
  43116d:	add    BYTE PTR [rax],al
  43116f:	add    BYTE PTR [rdx],al
	...
  43117d:	add    BYTE PTR [rax],al
  43117f:	add    bh,bh
  431181:	(bad)  
  431182:	(bad)  
  431183:	inc    DWORD PTR [rax]
	...
  43118d:	add    BYTE PTR [rax],al
  43118f:	add    BYTE PTR [rax],bl
  431191:	add    BYTE PTR [rax],al
  431193:	add    BYTE PTR [rbx-0x1],ch
  431196:	(bad)  
  431197:	jmp    FWORD PTR [rax+0x0]
  43119a:	add    BYTE PTR [rax],al
  43119c:	add    DWORD PTR [rax],eax
  43119e:	add    BYTE PTR [rax],al
  4311a0:	add    BYTE PTR [rax],al
  4311a2:	add    BYTE PTR [rax],al
  4311a4:	(bad)  
	...
  4311ad:	add    BYTE PTR [rax],al
  4311af:	add    BYTE PTR [rax+0x0],al
  4311b2:	add    BYTE PTR [rax],al
  4311b4:	ret    
  4311b5:	mov    edi,0x3fc0ffff
  4311ba:	add    BYTE PTR [rax],al
  4311bc:	add    DWORD PTR [rax],eax
  4311be:	add    BYTE PTR [rax],al
  4311c0:	add    BYTE PTR [rax],al
  4311c2:	add    BYTE PTR [rax],al
  4311c4:	(bad)  
	...
  4311cd:	add    BYTE PTR [rax],al
  4311cf:	add    BYTE PTR [rax+0x0],al
  4311d2:	add    BYTE PTR [rax],al
  4311d4:	ret    
  4311d5:	mov    edi,0x3fc0ffff
  4311da:	add    BYTE PTR [rax],al
  4311dc:	add    DWORD PTR [rax],eax
  4311de:	add    BYTE PTR [rax],al
  4311e0:	add    BYTE PTR [rax],al
  4311e2:	add    BYTE PTR [rax],al
  4311e4:	(bad)  
	...
  4311ed:	add    BYTE PTR [rax],al
  4311ef:	add    BYTE PTR [rax+0x442c],al
	...
  4311fd:	add    BYTE PTR [rax],al
  4311ff:	add    BYTE PTR [rax+0x42fc],dl
  431205:	add    BYTE PTR [rax],al
  431207:	add    BYTE PTR [rax+0x42fc],ah
  43120d:	add    BYTE PTR [rax],al
  43120f:	add    BYTE PTR [rax],ah
  431211:	std    
  431212:	rex.X add BYTE PTR [rax],al
  431215:	add    BYTE PTR [rax],al
  431217:	add    al,dl
  431219:	cld    
  43121a:	rex.X add BYTE PTR [rax],al
  43121d:	add    BYTE PTR [rax],al
  43121f:	add    BYTE PTR [rax+0x42fd],al
	...
  43122d:	add    BYTE PTR [rax],al
  43122f:	add    BYTE PTR [rdx],dh
  431231:	movabs ds:0x2b992ddf,al
  43123a:	add    BYTE PTR [rax],al
  43123c:	add    BYTE PTR [rax],al
  43123e:	add    BYTE PTR [rax],al
  431240:	int    0x5d
  431242:	and    dl,dl
  431244:	data16 (bad) 
  431246:	(bad)  
  431247:	inc    DWORD PTR [rax]
  431249:	add    BYTE PTR [rax],al
  43124b:	add    BYTE PTR [rax],al
  43124d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000432000 <.rdata>:
  432000:	sub    al,BYTE PTR [rax]
  432002:	and    BYTE PTR [rax],al
  432004:	add    BYTE PTR [rax],al
  432006:	add    BYTE PTR [rax],al
  432008:	rex.B jne 0x43207f
  43200b:	outs   dx,DWORD PTR ds:[rsi]
  43200c:	sub    eax,0x65746564
  432011:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  432015:	and    BYTE PTR [rbx+0x6f],dh
  432018:	jne    0x43208c
  43201a:	movsxd esp,DWORD PTR [rbp+0x73]
  43201d:	and    BYTE PTR [rsi+0x6f],ah
  432020:	jb     0x432042
  432022:	and    eax,0xa3a73
  432027:	add    BYTE PTR [rbx+0x61],al
  43202a:	outs   dx,BYTE PTR ds:[rsi]
  43202b:	outs   dx,BYTE PTR ds:[rsi]
  43202c:	outs   dx,DWORD PTR ds:[rsi]
  43202d:	je     0x43204f
  43202f:	ins    BYTE PTR es:[rdi],dx
  432030:	imul   esi,DWORD PTR [rbx+0x74],0x756f7320
  432037:	jb     0x43209c
  432039:	gs jae 0x43206a
  43203c:	and    BYTE PTR [rsi+0x6f],cl
  43203f:	je     0x432061
  432041:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  432048:	outs   dx,BYTE PTR ds:[rsi]
  432049:	je     0x4320b0
  43204b:	fs or  al,BYTE PTR cs:[rax]
  43204f:	rex.XB (bad) 
  432051:	outs   dx,BYTE PTR ds:[rsi]
  432052:	outs   dx,BYTE PTR ds:[rsi]
  432053:	outs   dx,DWORD PTR ds:[rsi]
  432054:	je     0x432076
  432056:	ins    BYTE PTR es:[rdi],dx
  432057:	imul   esi,DWORD PTR [rbx+0x74],0x756f7320
  43205e:	jb     0x4320c3
  432060:	gs jae 0x432091
  432063:	or     al,BYTE PTR [rax]
  432065:	and    eax,0x73252073
  43206a:	and    BYTE PTR [rbx+0x25],bl
  43206d:	jae    0x4320cc
  43206f:	or     al,BYTE PTR [rax]
  432071:	rex.B jne 0x4320e8
  432074:	outs   dx,DWORD PTR ds:[rsi]
  432075:	sub    eax,0x65746564
  43207a:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  43207e:	and    BYTE PTR [rbx+0x69],dh
  432081:	outs   dx,BYTE PTR ds:[rsi]
  432082:	imul   esi,DWORD PTR [rbx+0x20],0x66
  432086:	outs   dx,DWORD PTR ds:[rsi]
  432087:	jb     0x4320a9
  432089:	and    eax,0xa3a73
  43208e:	add    BYTE PTR [rax],al
  432090:	rex.XB (bad) 
  432092:	outs   dx,BYTE PTR ds:[rsi]
  432093:	outs   dx,BYTE PTR ds:[rsi]
  432094:	outs   dx,DWORD PTR ds:[rsi]
  432095:	je     0x4320b7
  432097:	ins    BYTE PTR es:[rdi],dx
  432098:	imul   esi,DWORD PTR [rbx+0x74],0x6e697320
  43209f:	imul   esi,DWORD PTR [rbx+0x2e],0x20
  4320a3:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4320a5:	je     0x4320c7
  4320a7:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  4320ae:	outs   dx,BYTE PTR ds:[rsi]
  4320af:	je     0x432116
  4320b1:	fs or  al,BYTE PTR cs:[rax]
  4320b5:	rex.XB (bad) 
  4320b7:	outs   dx,BYTE PTR ds:[rsi]
  4320b8:	outs   dx,BYTE PTR ds:[rsi]
  4320b9:	outs   dx,DWORD PTR ds:[rsi]
  4320ba:	je     0x4320dc
  4320bc:	ins    BYTE PTR es:[rdi],dx
  4320bd:	imul   esi,DWORD PTR [rbx+0x74],0x6e697320
  4320c4:	imul   esi,DWORD PTR [rbx+0x2e],0xa
  4320c8:	add    BYTE PTR [rcx+0x20],ch
  4320cb:	cmp    eax,0x626e203d
  4320d0:	pop    rdi
  4320d1:	movsxd ebp,DWORD PTR [rdi+0x64]
  4320d4:	movsxd esi,DWORD PTR gs:[rbx+0x0]
  4320d8:	rex.B jae 0x43214e
  4320db:	gs jb  0x432152
  4320de:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  4320e5:	data16 (bad) 
  4320e7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  4320ef:	and    eax,0x64253a73
  4320f4:	or     al,BYTE PTR [rax]
  4320f6:	movsxd ebp,DWORD PTR [rbp+0x64]
  4320f9:	jne    0x43216f
  4320fb:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x2d200063
  432103:	sub    eax,0x676b7000
  432108:	sub    eax,0x666e6f63
  43210d:	imul   esp,DWORD PTR [rdi+0x7e],0x20007e00
  432114:	and    BYTE PTR [rax],al
  432116:	or     ah,BYTE PTR [rip+0x6e6f6373]        # 0x6eb2848f
  43211c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  432122:	je     0x43218d
  432124:	outs   dx,DWORD PTR ds:[rsi]
  432125:	outs   dx,BYTE PTR ds:[rsi]
  432126:	cmp    cl,BYTE PTR [rdx]
  432128:	add    BYTE PTR [rip+0x25732573],ah        # 0x25b646a1
  43212e:	jae    0x43213a
	...
  432138:	sub    eax,0x6f72632d
  43213d:	jae    0x4321b2
  43213f:	sub    eax,0x66657270
  432144:	imul   edi,DWORD PTR [rax+0x3d],0x5f363878
  43214b:	ss xor al,0x2d
  43214e:	ja     0x432186
  432150:	xor    al,0x2d
  432152:	ins    DWORD PTR es:[rdi],dx
  432153:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  43215a:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b1868d
  432160:	(bad)  
  432161:	ins    BYTE PTR es:[rdi],dx
  432162:	gs sub eax,0x736f7263
  432168:	jae    0x432197
  43216a:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43216d:	jo     0x4321d8
  43216f:	ins    BYTE PTR es:[rdi],dx
  432170:	and    BYTE PTR gs:[rip+0x7261742d],ch        # 0x72a495a4
  432177:	addr32 gs je 0x4321a8
  43217b:	outs   dx,DWORD PTR ds:[rsi]
  43217c:	jae    0x4321bb
  43217e:	ins    DWORD PTR es:[rdi],dx
  43217f:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  432186:	sub    eax,0x6372612d
  43218b:	push   0x3638783d
  432190:	pop    rdi
  432191:	ss xor al,0x20
  432194:	sub    eax,0x6572702d
  432199:	imul   di,WORD PTR [rax+0x3d],0x732f
  43219f:	movsxd esi,DWORD PTR [rdx+0x61]
  4321a2:	je     0x432207
  4321a4:	push   0x65776a2f
  4321a9:	(bad)  
  4321aa:	ins    DWORD PTR es:[rdi],dx
  4321ab:	js     0x432212
  4321ad:	sub    eax,0x6174636f
  4321b2:	jbe    0x432219
  4321b4:	(bad)  
  4321b5:	xor    al,0x2e
  4321b7:	xor    ch,BYTE PTR [rsi]
  4321b9:	xor    DWORD PTR [rdi],ebp
  4321bb:	ja     0x4321f3
  4321bd:	xor    al,0x2d
  4321bf:	xor    esi,DWORD PTR [rdx]
  4321c1:	(bad)  
  4321c2:	jne    0x432237
  4321c4:	jb     0x4321f5
  4321c6:	js     0x432200
  4321c8:	ss pop rdi
  4321ca:	ss xor al,0x2d
  4321cd:	ja     0x432205
  4321cf:	xor    al,0x2d
  4321d1:	ins    DWORD PTR es:[rdi],dx
  4321d2:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  4321d9:	sub    eax,0x616e652d
  4321de:	(bad)  
  4321df:	ins    BYTE PTR es:[rdi],dx
  4321e0:	gs sub eax,0x72616873
  4321e6:	gs and BYTE PTR fs:[rip+0x7369642d],ch        # 0x73ac861b
  4321ee:	(bad)  
  4321ef:	(bad)  
  4321f0:	ins    BYTE PTR es:[rdi],dx
  4321f1:	gs sub eax,0x74617473
  4321f7:	imul   esp,DWORD PTR [rbx+0x20],0x61792d2d
  4321fe:	jae    0x43226d
  432200:	gs js  0x432268
  432203:	cmp    eax,0x7263732f
  432208:	(bad)  
  432209:	je     0x43226e
  43220b:	push   0x65776a2f
  432210:	(bad)  
  432211:	ins    DWORD PTR es:[rdi],dx
  432212:	js     0x432279
  432214:	sub    eax,0x6174636f
  432219:	jbe    0x432280
  43221b:	(bad)  
  43221c:	xor    al,0x2e
  43221e:	xor    ch,BYTE PTR [rsi]
  432220:	xor    DWORD PTR [rdi],ebp
  432222:	ja     0x43225a
  432224:	xor    al,0x2d
  432226:	xor    esi,DWORD PTR [rdx]
  432228:	(bad)  
  432229:	jne    0x43229e
  43222b:	jb     0x43225c
  43222d:	(bad)  
  43222e:	imul   ebp,DWORD PTR [rsi+0x2f],0x6d736179
  432235:	and    BYTE PTR [rip+0x7478652d],ch        # 0x74bb8768
  43223b:	jb     0x43229e
  43223d:	sub    eax,0x7362696c
  432242:	cmp    eax,0x6f636d2d
  432247:	outs   dx,BYTE PTR ds:[rsi]
  432248:	jae    0x4322b9
  43224a:	ins    BYTE PTR es:[rdi],dx
  43224b:	and    BYTE PTR gs:[rip+0x7369642d],ch        # 0x73ac867f
  432252:	(bad)  
  432253:	(bad)  
  432254:	ins    BYTE PTR es:[rdi],dx
  432255:	gs sub eax,0x75626564
  43225b:	and    BYTE PTR [eip+0x7369642d],ch        # 0x73ac868f
  432262:	(bad)  
  432263:	(bad)  
  432264:	ins    BYTE PTR es:[rdi],dx
  432265:	gs sub eax,0x20636f64
  43226b:	sub    eax,0x616e652d
  432270:	(bad)  
  432271:	ins    BYTE PTR es:[rdi],dx
  432272:	gs sub eax,0x616d656d
  432278:	ins    BYTE PTR es:[rdi],dx
  432279:	imul   esp,DWORD PTR [rdi+0x6e],0x6361682d
  432280:	imul   esp,DWORD PTR [rax],0x2d
  432283:	sub    eax,0x62616e65
  432288:	ins    BYTE PTR es:[rdi],dx
  432289:	gs sub eax,0x65727661
  43228f:	jae    0x4322f2
  432291:	ins    DWORD PTR es:[rdi],dx
  432292:	jo     0x432300
  432294:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b187c8
  43229b:	(bad)  
  43229c:	ins    BYTE PTR es:[rdi],dx
  43229d:	gs sub eax,0x206c7067
  4322a3:	sub    eax,0x616e652d
  4322a8:	(bad)  
  4322a9:	ins    BYTE PTR es:[rdi],dx
  4322aa:	gs sub eax,0x73726576
  4322b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2033
  4322b7:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  4322bf:	jo     0x432335
  4322c1:	push   0x64616572
  4322c6:	jae    0x4322e8
  4322c8:	sub    eax,0x616e652d
  4322cd:	(bad)  
  4322ce:	ins    BYTE PTR es:[rdi],dx
  4322cf:	gs sub eax,0x74323377
  4322d5:	push   0x64616572
  4322da:	jae    0x4322fc
  4322dc:	sub    eax,0x616e652d
  4322e1:	(bad)  
  4322e2:	ins    BYTE PTR es:[rdi],dx
  4322e3:	gs sub eax,0x73697661
  4322e9:	jns    0x432359
  4322eb:	je     0x432355
  4322ed:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b18820
  4322f3:	(bad)  
  4322f4:	ins    BYTE PTR es:[rdi],dx
  4322f5:	gs sub eax,0x74756e67
  4322fb:	ins    BYTE PTR es:[rdi],dx
  4322fc:	jae    0x43231e
  4322fe:	sub    eax,0x616e652d
  432303:	(bad)  
  432304:	ins    BYTE PTR es:[rdi],dx
  432305:	gs sub eax,0x7362696c
  43230b:	jo     0x432372
  43230d:	gs js  0x432330
  432310:	sub    eax,0x616e652d
  432315:	(bad)  
  432316:	ins    BYTE PTR es:[rdi],dx
  432317:	gs sub eax,0x7462696c
  43231d:	push   0x61726f65
  432322:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b18855
  432328:	(bad)  
  432329:	ins    BYTE PTR es:[rdi],dx
  43232a:	gs sub eax,0x7662696c
  432330:	outs   dx,DWORD PTR ds:[rsi]
  432331:	jb     0x432395
  432333:	imul   esi,DWORD PTR [rbx+0x20],0x6e652d2d
  43233a:	(bad)  
  43233b:	(bad)  
  43233c:	ins    BYTE PTR es:[rdi],dx
  43233d:	gs sub eax,0x6d62696c
  432343:	jo     0x432378
  432345:	ins    BYTE PTR es:[rdi],dx
  432346:	(bad)  
  432347:	ins    DWORD PTR es:[rdi],dx
  432348:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b1887c
  43234f:	(bad)  
  432350:	ins    BYTE PTR es:[rdi],dx
  432351:	gs sub eax,0x7862696c
  432357:	jbe    0x4323c2
  432359:	and    BYTE PTR fs:[rip+0x616e652d],ch        # 0x61b1888d
  432360:	(bad)  
  432361:	ins    BYTE PTR es:[rdi],dx
  432362:	gs sub eax,0x6f62696c
  432368:	jo     0x4323cf
  43236a:	outs   dx,BYTE PTR ds:[rsi]
  43236b:	movsxd ebp,DWORD PTR [rdi+0x72]
  43236e:	gs sub eax,0x6e726d61
  432374:	(bad)  
  432375:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b188a8
  43237b:	(bad)  
  43237c:	ins    BYTE PTR es:[rdi],dx
  43237d:	gs sub eax,0x6f62696c
  432383:	jo     0x4323ea
  432385:	outs   dx,BYTE PTR ds:[rsi]
  432386:	movsxd ebp,DWORD PTR [rdi+0x72]
  432389:	gs sub eax,0x77726d61
  43238f:	(bad)  
  432390:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b188c3
  432396:	(bad)  
  432397:	ins    BYTE PTR es:[rdi],dx
  432398:	gs sub eax,0x7862696c
  43239e:	xor    dh,BYTE PTR [rsi]
  4323a0:	xor    al,0x20
  4323a2:	sub    eax,0x616e652d
  4323a7:	(bad)  
  4323a8:	ins    BYTE PTR es:[rdi],dx
  4323a9:	gs sub eax,0x7662696c
  4323af:	jo     0x432429
  4323b1:	add    BYTE PTR [rip+0x69620064],ah        # 0x69a5241b
  4323b7:	movsxd esi,DWORD PTR [rbp+0x62]
  4323ba:	imul   esp,DWORD PTR [rbx+0x0],0x67616c66
  4323c1:	jae    0x4323c3
  4323c3:	add    BYTE PTR [rip+0x74252d70],ah        # 0x74685139
  4323c9:	cs ins BYTE PTR es:[rdi],dx
  4323cb:	outs   dx,DWORD PTR ds:[rsi]
  4323cc:	add    BYTE PTR [edx],bh
  4323cf:	add    BYTE PTR [rip+0x0],bh        # 0x4323d5
  4323d5:	add    BYTE PTR [rax],al
  4323d7:	add    BYTE PTR [rsi+0x61],al
  4323da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4323e2:	jo     0x432445
  4323e4:	jb     0x432459
  4323e6:	and    BYTE PTR gs:[rsi+0x46],al
  4323ea:	push   rdx
  4323eb:	rex.RB push r8
  4323ed:	rex.WRXB push r10
  4323ef:	push   rsp
  4323f0:	and    BYTE PTR [rbp+0x6e],ah
  4323f3:	jbe    0x43245e
  4323f5:	jb     0x432466
  4323f7:	outs   dx,BYTE PTR ds:[rsi]
  4323f8:	ins    DWORD PTR es:[rdi],dx
  4323f9:	outs   dx,BYTE PTR gs:[rsi]
  4323fb:	je     0x43241d
  4323fd:	jbe    0x432460
  4323ff:	jb     0x43246a
  432401:	(bad)  
  432402:	(bad)  
  432403:	ins    BYTE PTR es:[rdi],dx
  432404:	cmp    ah,BYTE PTR gs:[rax]
  432407:	and    eax,0x66000a73
  43240c:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6576656c
  432414:	ins    BYTE PTR es:[rdi],dx
  432415:	add    BYTE PTR [rcx+0x6e],cl
  432418:	jbe    0x43247b
  43241a:	ins    BYTE PTR es:[rdi],dx
  43241b:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x726f7065
  432423:	je     0x432445
  432425:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x656c
  43242c:	jbe    0x432493
  43242e:	ins    BYTE PTR es:[rdi],dx
  43242f:	or     al,BYTE PTR [rax]
  432431:	push   rbp
  432432:	outs   dx,BYTE PTR ds:[rsi]
  432433:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432437:	outs   dx,BYTE PTR ds:[rsi]
  432438:	and    BYTE PTR [rbx+0x65],ch
  43243b:	jns    0x43245d
  43243d:	(bad)  
  43243e:	and    eax,0x69202773
  432443:	outs   dx,BYTE PTR ds:[rsi]
  432444:	and    BYTE PTR [rsi+0x46],al
  432447:	push   rdx
  432448:	rex.RB push r8
  43244a:	rex.WRXB push r10
  43244c:	push   rsp
  43244d:	or     al,BYTE PTR [rax]
  43244f:	and    eax,0x30250073
  432454:	xor    al,0x64
  432456:	and    eax,0x25643230
  43245b:	xor    BYTE PTR [rdx],dh
  43245d:	fs sub eax,0x64323025
  432463:	and    eax,0x25643230
  432468:	xor    BYTE PTR [rdx],dh
  43246a:	add    BYTE PTR fs:[rax],al
  43246d:	add    BYTE PTR [rax],al
  43246f:	add    BYTE PTR [rdi+0x75],cl
  432472:	je     0x432494
  432474:	outs   dx,DWORD PTR ds:[rsi]
  432475:	data16 and BYTE PTR [rbp+0x65],ch
  432479:	ins    DWORD PTR es:[rdi],dx
  43247a:	outs   dx,DWORD PTR ds:[rsi]
  43247b:	jb     0x4324f6
  43247d:	and    BYTE PTR [rdx+0x75],ah
  432480:	imul   ebp,DWORD PTR [rsp+riz*2+0x69],0x7220676e
  432488:	gs jo  0x4324fa
  43248b:	jb     0x432501
  43248d:	and    BYTE PTR [rsi+0x69],ah
  432490:	ins    BYTE PTR es:[rdi],dx
  432491:	and    BYTE PTR gs:[rsi+0x61],ch
  432495:	ins    DWORD PTR es:[rdi],dx
  432496:	or     al,BYTE PTR gs:[rax]
  432499:	ja     0x43249b
  43249b:	add    BYTE PTR [rax],al
  43249d:	add    BYTE PTR [rax],al
  43249f:	add    BYTE PTR [rsi+0x61],al
  4324a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4324aa:	outs   dx,DWORD PTR ds:[rsi]
  4324ab:	jo     0x432512
  4324ad:	outs   dx,BYTE PTR ds:[rsi]
  4324ae:	and    BYTE PTR [rdx+0x65],dh
  4324b1:	jo     0x432522
  4324b3:	jb     0x432529
  4324b5:	and    BYTE PTR [rdx],ah
  4324b7:	and    eax,0x203a2273
  4324bc:	and    eax,0x25000a73
  4324c1:	jae    0x4324e3
  4324c3:	jae    0x432539
  4324c5:	(bad)  
  4324c6:	jb     0x43253c
  4324c8:	gs and BYTE PTR fs:[rdi+0x6e],ch
  4324cd:	and    BYTE PTR [rip+0x2d643430],ah        # 0x2da75903
  4324d3:	and    eax,0x2d643230
  4324d8:	and    eax,0x20643230
  4324dd:	(bad)  
  4324de:	je     0x432500
  4324e0:	and    eax,0x3a643230
  4324e5:	and    eax,0x3a643230
  4324ea:	and    eax,0xa643230
  4324ef:	push   rdx
  4324f0:	gs jo  0x432562
  4324f3:	jb     0x432569
  4324f5:	and    BYTE PTR [rdi+0x72],dh
  4324f8:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f74206e
  432500:	and    BYTE PTR [rdx],ah
  432502:	and    eax,0xa2273
  432507:	rex.RB outs dx,BYTE PTR ds:[rsi]
  432509:	movsxd ebp,DWORD PTR [rdi+0x64]
  43250c:	gs jb  0x432582
  43250f:	add    BYTE PTR [rbp+riz*2+0x63],al
  432513:	outs   dx,DWORD PTR ds:[rsi]
  432514:	fs gs jb 0x43258b
  432518:	add    BYTE PTR [rsi+0x0],al
  43251b:	add    BYTE PTR cs:[rbx+0x0],dl
  43251f:	pop    rax
  432520:	add    BYTE PTR [rdx+0x0],al
  432523:	add    BYTE PTR [rdi+0x75],r9b
  432527:	je     0x432549
  432529:	outs   dx,DWORD PTR ds:[rsi]
  43252a:	data16 and BYTE PTR [rbp+0x65],ch
  43252e:	ins    DWORD PTR es:[rdi],dx
  43252f:	outs   dx,DWORD PTR ds:[rsi]
  432530:	jb     0x4325ab
  432532:	or     al,BYTE PTR [rax]
  432534:	add    BYTE PTR [rax],al
  432536:	add    BYTE PTR [rax],al
  432538:	and    eax,0x200a3a73
  43253d:	push   rsi
  43253e:	cs cs cs cs and BYTE PTR cs:[rip+0x64695620],bh        # 0x64ac7b69
  432549:	outs   dx,DWORD PTR gs:[rsi]
  43254b:	or     ah,BYTE PTR [rax]
  43254d:	rex.B
  43254e:	cs cs cs cs and BYTE PTR cs:[rip+0x64754120],bh        # 0x64b86679
  432559:	imul   ebp,DWORD PTR [rdi+0xa],0x2e2e5320
  432560:	cs cs and BYTE PTR cs:[rip+0x62755320],bh        # 0x62b87889
  432569:	je     0x4325d4
  43256b:	je     0x4325d9
  43256d:	or     ah,BYTE PTR gs:[rax]
  432570:	cs rex.RX
  432572:	cs cs cs and BYTE PTR cs:[rip+0x61724620],bh        # 0x61b56b9c
  43257c:	ins    DWORD PTR es:[rdi],dx
  43257d:	gs sub eax,0x6576656c
  432583:	ins    BYTE PTR es:[rdi],dx
  432584:	and    BYTE PTR [rbp+0x75],ch
  432587:	ins    BYTE PTR es:[rdi],dx
  432588:	je     0x4325f3
  43258a:	je     0x4325f4
  43258c:	jb     0x4325f3
  43258e:	(bad)  
  43258f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e2e200a
  432597:	push   rbx
  432598:	cs cs and BYTE PTR cs:[rip+0x696c5320],bh        # 0x69af78c1
  4325a1:	movsxd esp,DWORD PTR [rbp+0x2d]
  4325a4:	ins    BYTE PTR es:[rdi],dx
  4325a5:	gs jbe 0x43260d
  4325a8:	ins    BYTE PTR es:[rdi],dx
  4325a9:	and    BYTE PTR [rbp+0x75],ch
  4325ac:	ins    BYTE PTR es:[rdi],dx
  4325ad:	je     0x432618
  4325af:	je     0x432619
  4325b1:	jb     0x432618
  4325b3:	(bad)  
  4325b4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e2e200a
  4325bc:	cs pop rax
  4325be:	cs and BYTE PTR cs:[rip+0x646f4320],bh        # 0x64b268e6
  4325c6:	movsxd esp,DWORD PTR gs:[rax]
  4325c9:	imul   esi,DWORD PTR [rbx+0x20],0x65707865
  4325d0:	jb     0x43263b
  4325d2:	ins    DWORD PTR es:[rdi],dx
  4325d3:	outs   dx,BYTE PTR gs:[rsi]
  4325d5:	je     0x432638
  4325d7:	ins    BYTE PTR es:[rdi],dx
  4325d8:	or     ah,BYTE PTR [rax]
  4325da:	cs cs cs cs rex.X
  4325df:	and    BYTE PTR cs:[rip+0x70755320],bh        # 0x70b87906
  4325e6:	jo     0x432657
  4325e8:	jb     0x43265e
  4325ea:	jae    0x43260c
  4325ec:	fs jb  0x432650
  4325ef:	ja     0x432650
  4325f1:	push   0x7a69726f
  4325f6:	pop    rdi
  4325f7:	(bad)
  4325fc:	and    BYTE PTR [rsi],ch
  4325fe:	cs cs cs and BYTE PTR cs:[rip+0x70755320],r15b        # 0x70b87929
  432609:	jo     0x43267a
  43260b:	jb     0x432681
  43260d:	jae    0x43262f
  43260f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x72207463
  432617:	outs   dx,BYTE PTR gs:[rsi]
  432619:	fs gs jb 0x432686
  43261d:	outs   dx,BYTE PTR ds:[rsi]
  43261e:	and    BYTE PTR [ebp+0x65],ch
  432622:	je     0x43268c
  432624:	outs   dx,DWORD PTR ds:[rsi]
  432625:	and    BYTE PTR fs:[rcx],dh
  432628:	or     ah,BYTE PTR [rax]
  43262a:	sub    eax,0x2d2d2d2d
  43262f:	sub    eax,0x2520000a
  432634:	movsxd eax,DWORD PTR [rax]
  432636:	and    BYTE PTR [rip+0x7330322d],ah        # 0x73735869
  43263c:	and    BYTE PTR [rip+0x28200073],ah        # 0x286326b5
  432642:	movsxd ebp,DWORD PTR [rdi+0x64]
  432645:	movsxd esp,DWORD PTR gs:[rax]
  432648:	and    eax,0xa002973
  43264d:	add    BYTE PTR [rbp+rsi*2+0x72],ah
  432651:	(bad)  
  432652:	je     0x4326bd
  432654:	outs   dx,DWORD PTR ds:[rsi]
  432655:	outs   dx,BYTE PTR ds:[rsi]
  432656:	add    BYTE PTR [rcx+riz*2+0x74],ah
  43265a:	add    BYTE PTR gs:[rax],al
  43265d:	add    BYTE PTR [rax],al
  43265f:	add    BYTE PTR [rcx+0x6e],cl
  432662:	jbe    0x4326c5
  432664:	ins    BYTE PTR es:[rdi],dx
  432665:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x70732073
  43266d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  432671:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  432678:	and    BYTE PTR [rsi+0x6f],ah
  43267b:	jb     0x43269d
  43267d:	and    eax,0x25203a73
  432682:	jae    0x43268e
  432684:	add    BYTE PTR [rbx+0x6f],al
  432687:	jne    0x4326f5
  432689:	and    BYTE PTR fs:[rsi+0x6f],ch
  43268d:	je     0x4326af
  43268f:	(bad)  
  432690:	ins    BYTE PTR es:[rdi],dx
  432691:	ins    BYTE PTR es:[rdi],dx
  432692:	outs   dx,DWORD PTR ds:[rsi]
  432693:	movsxd esp,DWORD PTR [rax]
  432695:	(bad)  
  432696:	jne    0x4326fe
  432698:	data16 gs jb 0x4326ca
  43269c:	or     al,BYTE PTR [rax]
  43269e:	add    BYTE PTR [rax],al
  4326a0:	rex.RB js 0x432713
  4326a3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4326a8:	and    BYTE PTR [rsi+0x75],ch
  4326ab:	ins    DWORD PTR es:[rdi],dx
  4326ac:	(bad)  
  4326ad:	gs jb  0x4326d0
  4326b0:	outs   dx,WORD PTR ds:[rsi]
  4326b2:	jb     0x4326d4
  4326b4:	and    eax,0x75622073
  4326b9:	je     0x4326db
  4326bb:	outs   dx,WORD PTR ds:[rsi]
  4326bd:	jne    0x43272d
  4326bf:	cmp    ah,BYTE PTR fs:[rax]
  4326c2:	and    eax,0xa73
  4326c7:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4326cb:	and    BYTE PTR [rsi+0x61],dh
  4326ce:	ins    BYTE PTR es:[rdi],dx
  4326cf:	jne    0x432736
  4326d1:	and    BYTE PTR [rsi+0x6f],ah
  4326d4:	jb     0x4326f6
  4326d6:	and    eax,0x61772073
  4326db:	jae    0x4326fd
  4326dd:	and    eax,0x68772073
  4326e2:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  4326e9:	outs   dx,BYTE PTR ds:[rsi]
  4326ea:	outs   dx,DWORD PTR ds:[rsi]
  4326eb:	je     0x43270d
  4326ed:	ja     0x432758
  4326ef:	je     0x432759
  4326f1:	imul   ebp,DWORD PTR [rsi+0x20],0x2d206625
  4326f8:	and    BYTE PTR [rip+0xa66],ah        # 0x433164
  4326fe:	add    BYTE PTR [rax],al
  432700:	rex.RB js 0x432773
  432703:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  432708:	and    BYTE PTR [rcx+0x6e],ch
  43270b:	je     0x432743
  43270d:	xor    al,0x20
  43270f:	outs   dx,WORD PTR ds:[rsi]
  432711:	jb     0x432733
  432713:	and    eax,0x75622073
  432718:	je     0x43273a
  43271a:	outs   dx,WORD PTR ds:[rsi]
  43271c:	jne    0x43278c
  43271e:	and    BYTE PTR fs:[rip+0xa73],ah        # 0x433198
  432725:	add    BYTE PTR [rax],al
  432727:	add    BYTE PTR [rbp+0x78],al
  43272a:	jo     0x432791
  43272c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  432730:	and    BYTE PTR [rcx+0x6e],ch
  432733:	je     0x432755
  432735:	outs   dx,WORD PTR ds:[rsi]
  432737:	jb     0x432759
  432739:	and    eax,0x75622073
  43273e:	je     0x432760
  432740:	outs   dx,WORD PTR ds:[rsi]
  432742:	jne    0x4327b2
  432744:	and    BYTE PTR fs:[rip+0x2d000a73],ah        # 0x2d4331be
  43274b:	and    eax,0x7337312d
  432750:	and    BYTE PTR [rax],ah
  432752:	and    eax,0x25000a73
  432757:	jae    0x432763
  432759:	add    BYTE PTR [rbp+0x6e],al
  43275c:	movsxd ebp,DWORD PTR [rdi+0x64]
  43275f:	gs jb  0x432762
  432762:	rex.R
  432763:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  432767:	gs jb  0x43276a
  43276a:	and    eax,0x73252073
  43276f:	and    BYTE PTR [rbx+0x25],bl
  432772:	jae    0x4327d1
  432774:	cmp    cl,BYTE PTR [rdx]
  432776:	add    BYTE PTR [rax],ah
  432778:	and    BYTE PTR [rax],ah
  43277a:	and    BYTE PTR [rax+rbp*2+0x72],dl
  43277e:	gs (bad) 
  432780:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70616320
  432788:	(bad)  
  432789:	(bad)  
  43278a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x3a736569
  432792:	and    BYTE PTR [rax],al
  432794:	data16 jb 0x4327f8
  432797:	ins    DWORD PTR es:[rdi],dx
  432798:	and    BYTE PTR gs:[rcx+0x6e],ah
  43279c:	and    BYTE PTR fs:[rbx+0x6c],dh
  4327a0:	imul   esp,DWORD PTR [rbx+0x65],0x61726600
  4327a7:	ins    DWORD PTR es:[rdi],dx
  4327a8:	add    BYTE PTR gs:[rbx+0x6c],dh
  4327ac:	imul   esp,DWORD PTR [rbx+0x65],0x6f6e00
  4327b3:	and    BYTE PTR [rax],ah
  4327b5:	and    BYTE PTR [rax],ah
  4327b7:	push   rbx
  4327b8:	jne    0x43282a
  4327ba:	jo     0x43282b
  4327bc:	jb     0x432832
  4327be:	gs and BYTE PTR fs:[rsi+0x72],ah
  4327c3:	(bad)  
  4327c4:	ins    DWORD PTR es:[rdi],dx
  4327c5:	gs jb  0x432829
  4327c8:	je     0x43282f
  4327ca:	jae    0x432806
  4327cc:	add    BYTE PTR [rax],ah
  4327ce:	and    eax,0x64252f64
  4327d3:	add    BYTE PTR [rax],ah
  4327d5:	and    BYTE PTR [rax],ah
  4327d7:	and    BYTE PTR [rbx+0x75],dl
  4327da:	jo     0x43284c
  4327dc:	outs   dx,DWORD PTR ds:[rsi]
  4327dd:	jb     0x432853
  4327df:	gs and BYTE PTR fs:[rax+0x69],dh
  4327e4:	js     0x43284b
  4327e6:	ins    BYTE PTR es:[rdi],dx
  4327e7:	and    BYTE PTR [rsi+0x6f],ah
  4327ea:	jb     0x432859
  4327ec:	(bad)  
  4327ed:	je     0x432862
  4327ef:	cmp    al,BYTE PTR [rax]
  4327f1:	and    BYTE PTR [rip+0x20200073],ah        # 0x2063286a
  4327f7:	and    BYTE PTR [rax],ah
  4327f9:	push   rbx
  4327fa:	jne    0x43286c
  4327fc:	jo     0x43286d
  4327fe:	jb     0x432874
  432800:	gs and BYTE PTR fs:[rbx+0x61],dh
  432805:	ins    DWORD PTR es:[rdi],dx
  432806:	jo     0x432874
  432808:	and    BYTE PTR gs:[rdx+0x61],dh
  43280c:	je     0x432873
  43280e:	jae    0x43284a
  432810:	add    BYTE PTR [rax],ah
  432812:	and    BYTE PTR [rax],ah
  432814:	and    BYTE PTR [rbx+0x75],dl
  432817:	jo     0x432889
  432819:	outs   dx,DWORD PTR ds:[rsi]
  43281a:	jb     0x432890
  43281c:	gs and BYTE PTR fs:[rbx+0x61],dh
  432821:	ins    DWORD PTR es:[rdi],dx
  432822:	jo     0x432890
  432824:	and    BYTE PTR gs:[rsi+0x6f],ah
  432828:	jb     0x432897
  43282a:	(bad)  
  43282b:	je     0x4328a0
  43282d:	cmp    al,BYTE PTR [rax]
  43282f:	add    BYTE PTR [rax],ah
  432831:	and    BYTE PTR [rax],ah
  432833:	and    BYTE PTR [rbx+0x75],dl
  432836:	jo     0x4328a8
  432838:	outs   dx,DWORD PTR ds:[rsi]
  432839:	jb     0x4328af
  43283b:	gs and BYTE PTR fs:[rbx+0x68],ah
  432840:	(bad)  
  432841:	outs   dx,BYTE PTR ds:[rsi]
  432842:	outs   dx,BYTE PTR ds:[rsi]
  432843:	gs ins BYTE PTR es:[rdi],dx
  432845:	and    BYTE PTR [rcx+riz*2+0x79],ch
  432849:	outs   dx,DWORD PTR ds:[rsi]
  43284a:	jne    0x4328c0
  43284c:	jae    0x432888
  43284e:	add    BYTE PTR [rbp+0x6e],ah
  432851:	movsxd ebp,DWORD PTR [rdi+0x64]
  432854:	gs jb  0x4328ca
  432857:	add    BYTE PTR [rbp+riz*2+0x63],ah
  43285b:	outs   dx,DWORD PTR ds:[rsi]
  43285c:	fs gs jb 0x4328d3
  432860:	add    BYTE PTR [rsi+0x6f],cl
  432863:	and    BYTE PTR [rbx+0x6f],ah
  432866:	fs movsxd esp,DWORD PTR gs:[rax]
  43286a:	outs   dx,BYTE PTR ds:[rsi]
  43286b:	(bad)  
  43286c:	ins    DWORD PTR es:[rdi],dx
  43286d:	and    BYTE PTR gs:[rbx+0x70],dh
  432871:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  432875:	imul   esp,DWORD PTR [rbp+0x64],0xa2e
  43287c:	add    BYTE PTR [rax],al
  43287e:	add    BYTE PTR [rax],al
  432880:	rex.XB outs dx,DWORD PTR ds:[rsi]
  432882:	fs movsxd esp,DWORD PTR gs:[rax]
  432886:	(bad)  
  432887:	and    eax,0x69202773
  43288c:	jae    0x4328ae
  43288e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432892:	outs   dx,BYTE PTR ds:[rsi]
  432893:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  432897:	rex.RX
  432898:	rex.RX ins DWORD PTR es:[rdi],dx
  43289a:	jo     0x432901
  43289c:	addr32 sub al,0x20
  43289f:	(bad)  
  4328a0:	jne    0x432916
  4328a2:	and    BYTE PTR [rsi+0x6f],ch
  4328a5:	and    BYTE PTR [rip+0x6f662073],ah        # 0x6fa9491e
  4328ab:	jb     0x4328cd
  4328ad:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x61206572
  4328b5:	jbe    0x432918
  4328b7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x202e656c
  4328bf:	rex.RX
  4328c0:	rex.RX ins DWORD PTR es:[rdi],dx
  4328c2:	jo     0x432929
  4328c4:	and    BYTE PTR [ebp+0x69],ch
  4328c8:	addr32 push 0x656e2074
  4328ce:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4328d4:	(bad)  
  4328d5:	and    BYTE PTR gs:[rdx+0x65],dh
  4328d9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4328dc:	jo     0x432947
  4328de:	ins    BYTE PTR es:[rdi],dx
  4328df:	gs and BYTE PTR fs:[rdi+0x69],dh
  4328e4:	je     0x43294e
  4328e6:	and    BYTE PTR [rcx+0x64],ah
  4328e9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  4328f2:	gs js  0x432969
  4328f5:	gs jb  0x432966
  4328f8:	(bad)  
  4328f9:	ins    BYTE PTR es:[rdi],dx
  4328fa:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  4328fe:	jb     0x432961
  432900:	jb     0x43296b
  432902:	gs jae 0x432933
  432905:	or     al,BYTE PTR [rax]
  432907:	add    BYTE PTR [rbx+0x6f],al
  43290a:	fs movsxd esp,DWORD PTR gs:[rax]
  43290e:	(bad)  
  43290f:	and    eax,0x69202773
  432914:	jae    0x432936
  432916:	outs   dx,BYTE PTR ds:[rsi]
  432917:	outs   dx,DWORD PTR ds:[rsi]
  432918:	je     0x43293a
  43291a:	jb     0x432981
  43291c:	movsxd ebp,DWORD PTR [rdi+0x67]
  43291f:	outs   dx,BYTE PTR ds:[rsi]
  432920:	imul   edi,DWORD PTR [rdx+0x65],0x79622064
  432927:	and    BYTE PTR [rsi+0x46],al
  43292a:	ins    DWORD PTR es:[rdi],dx
  43292b:	jo     0x432992
  43292d:	or     al,BYTE PTR cs:[eax]
  432931:	xor    DWORD PTR [rax],eax
  432933:	xor    BYTE PTR [rax],al
  432935:	fs gs data16 (bad) 
  432939:	jne    0x4329a7
  43293b:	je     0x43293d
  43293d:	push   rbp
  43293e:	outs   dx,BYTE PTR ds:[rsi]
  43293f:	jb     0x4329a6
  432941:	movsxd ebp,DWORD PTR [rdi+0x67]
  432944:	outs   dx,BYTE PTR ds:[rsi]
  432945:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  43294c:	je     0x4329b7
  43294e:	outs   dx,DWORD PTR ds:[rsi]
  43294f:	outs   dx,BYTE PTR ds:[rsi]
  432950:	and    BYTE PTR [rdi],ah
  432952:	and    eax,0xa2773
  432957:	add    BYTE PTR [rbp+0x69],cl
  43295a:	jae    0x4329cf
  43295c:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  432963:	jne    0x4329d2
  432965:	outs   dx,BYTE PTR gs:[rsi]
  432967:	je     0x432989
  432969:	outs   dx,WORD PTR ds:[rsi]
  43296b:	jb     0x43298d
  43296d:	outs   dx,DWORD PTR ds:[rsi]
  43296e:	jo     0x4329e4
  432970:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432977:	(bad)  
  432978:	or     al,BYTE PTR [rax]
  43297a:	rex.B jb 0x4329ef
  43297d:	(bad)  
  43297e:	jns    0x4329a0
  432980:	je     0x4329f1
  432982:	outs   dx,DWORD PTR ds:[rsi]
  432983:	and    BYTE PTR [rdx+0x69],ah
  432986:	or     al,BYTE PTR cs:[eax]
  43298a:	add    BYTE PTR [rax],al
  43298c:	add    BYTE PTR [rax],al
  43298e:	add    BYTE PTR [rax],al
  432990:	rex.RX (bad) 
  432992:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43299a:	jae    0x432a01
  43299c:	je     0x4329be
  43299e:	jbe    0x432a01
  4329a0:	ins    BYTE PTR es:[rdi],dx
  4329a1:	jne    0x432a08
  4329a3:	and    BYTE PTR [rdi],ah
  4329a5:	and    eax,0x66202773
  4329aa:	outs   dx,DWORD PTR ds:[rsi]
  4329ab:	jb     0x4329cd
  4329ad:	outs   dx,DWORD PTR ds:[rsi]
  4329ae:	jo     0x432a24
  4329b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  4329b7:	(bad)  
  4329b8:	cmp    ah,BYTE PTR [rax]
  4329ba:	and    eax,0xa73
  4329bf:	add    BYTE PTR [rax+0x61],dl
  4329c2:	jb     0x432a37
  4329c4:	imul   ebp,DWORD PTR [rsi+0x67],0x67206120
  4329cb:	jb     0x432a3c
  4329cd:	jne    0x432a3f
  4329cf:	and    BYTE PTR [rdi+0x66],ch
  4329d2:	and    BYTE PTR [rdi+0x70],ch
  4329d5:	je     0x432a40
  4329d7:	outs   dx,DWORD PTR ds:[rsi]
  4329d8:	outs   dx,BYTE PTR ds:[rsi]
  4329d9:	jae    0x432a15
  4329db:	and    BYTE PTR [rip+0x73252073],ah        # 0x73684a54
  4329e1:	or     al,BYTE PTR cs:[rax]
  4329e4:	add    BYTE PTR [rax],al
  4329e6:	add    BYTE PTR [rax],al
  4329e8:	push   rbx
  4329e9:	jne    0x432a4e
  4329eb:	movsxd esp,DWORD PTR [rbp+0x73]
  4329ee:	jae    0x432a56
  4329f0:	jne    0x432a5e
  4329f2:	ins    BYTE PTR es:[rdi],dx
  4329f3:	jns    0x432a15
  4329f5:	jo     0x432a58
  4329f7:	jb     0x432a6c
  4329f9:	gs and BYTE PTR fs:[rcx+0x20],ah
  4329fe:	addr32 jb 0x432a70
  432a01:	jne    0x432a73
  432a03:	and    BYTE PTR [rdi+0x66],ch
  432a06:	and    BYTE PTR [rdi+0x70],ch
  432a09:	je     0x432a74
  432a0b:	outs   dx,DWORD PTR ds:[rsi]
  432a0c:	outs   dx,BYTE PTR ds:[rsi]
  432a0d:	jae    0x432a3d
  432a0f:	or     al,BYTE PTR [rax]
  432a11:	add    BYTE PTR [rax],al
  432a13:	add    BYTE PTR [rax],al
  432a15:	add    BYTE PTR [rax],al
  432a17:	add    BYTE PTR [rdi+0x70],cl
  432a1a:	je     0x432a85
  432a1c:	outs   dx,DWORD PTR ds:[rsi]
  432a1d:	outs   dx,BYTE PTR ds:[rsi]
  432a1e:	and    BYTE PTR [rip+0x25282073],ah        # 0x256b4a97
  432a24:	jae    0x432a4f
  432a26:	and    BYTE PTR [rbx+0x61],ah
  432a29:	outs   dx,BYTE PTR ds:[rsi]
  432a2a:	outs   dx,BYTE PTR ds:[rsi]
  432a2b:	outs   dx,DWORD PTR ds:[rsi]
  432a2c:	je     0x432a4e
  432a2e:	(bad)  
  432a2f:	and    BYTE PTR gs:[rcx+0x70],ah
  432a33:	jo     0x432aa1
  432a35:	imul   esp,DWORD PTR [rbp+0x64],0x206f7420
  432a3c:	and    eax,0x73252073
  432a41:	and    BYTE PTR [rip+0x6f79202d],ch        # 0x6fbc4a74
  432a47:	jne    0x432a69
  432a49:	(bad)  
  432a4a:	jb     0x432ab1
  432a4c:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  432a50:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  432a57:	(bad)  
  432a58:	jo     0x432aca
  432a5a:	ins    BYTE PTR es:[rdi],dx
  432a5b:	jns    0x432a7d
  432a5d:	(bad)  
  432a5e:	outs   dx,BYTE PTR ds:[rsi]
  432a5f:	and    BYTE PTR [rcx+0x6e],ch
  432a62:	jo     0x432ad9
  432a64:	je     0x432a86
  432a66:	outs   dx,DWORD PTR ds:[rsi]
  432a67:	jo     0x432add
  432a69:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  432a70:	(bad)  
  432a71:	outs   dx,BYTE PTR ds:[rsi]
  432a72:	and    BYTE PTR [rdi+0x75],ch
  432a75:	je     0x432ae7
  432a77:	jne    0x432aed
  432a79:	and    BYTE PTR [rsi+0x69],ah
  432a7c:	ins    BYTE PTR es:[rdi],dx
  432a7d:	and    BYTE PTR gs:[rdi+0x72],ch
  432a81:	and    BYTE PTR [rsi+0x69],dh
  432a84:	movsxd esp,DWORD PTR [rbp+0x20]
  432a87:	jbe    0x432aee
  432a89:	jb     0x432afe
  432a8b:	(bad)  
  432a8c:	and    BYTE PTR cs:[rbp+0x6f],cl
  432a90:	jbe    0x432af7
  432a92:	and    BYTE PTR [rax+rbp*2+0x69],dh
  432a96:	jae    0x432ab8
  432a98:	outs   dx,DWORD PTR ds:[rsi]
  432a99:	jo     0x432b0f
  432a9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x66656220
  432aa2:	outs   dx,DWORD PTR ds:[rsi]
  432aa3:	jb     0x432b0a
  432aa5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432aa9:	and    BYTE PTR [rsi+0x69],ah
  432aac:	ins    BYTE PTR es:[rdi],dx
  432aad:	and    BYTE PTR gs:[rcx+0x74],ch
  432ab1:	and    BYTE PTR [rdx+0x65],ah
  432ab4:	ins    BYTE PTR es:[rdi],dx
  432ab5:	outs   dx,DWORD PTR ds:[rsi]
  432ab6:	outs   dx,BYTE PTR ds:[rsi]
  432ab7:	addr32 jae 0x432ada
  432aba:	je     0x432b2b
  432abc:	or     al,BYTE PTR cs:[rax]
  432abf:	add    BYTE PTR [rcx+0x70],al
  432ac2:	jo     0x432b30
  432ac4:	jns    0x432b2f
  432ac6:	outs   dx,BYTE PTR ds:[rsi]
  432ac7:	and    BYTE PTR [edi+0x70],ch
  432acb:	je     0x432b36
  432acd:	outs   dx,DWORD PTR ds:[rsi]
  432ace:	outs   dx,BYTE PTR ds:[rsi]
  432acf:	and    BYTE PTR [rip+0x25282073],ah        # 0x256b4b48
  432ad5:	jae    0x432b00
  432ad7:	and    BYTE PTR [rdi+0x69],dh
  432ada:	je     0x432b44
  432adc:	and    BYTE PTR [rcx+0x72],ah
  432adf:	addr32 jne 0x432b4f
  432ae2:	outs   dx,BYTE PTR gs:[rsi]
  432ae4:	je     0x432b06
  432ae6:	and    eax,0xa2e73
  432aeb:	fs gs (bad) 
  432aee:	jne    0x432b57
  432af0:	add    BYTE PTR [rsi+0x64],ah
  432af3:	gs (bad) 
  432af5:	jne    0x432b5e
  432af7:	add    BYTE PTR [rdx+0x6f],dl
  432afa:	jne    0x432b70
  432afc:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  432b03:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  432b0a:	je     0x432b7b
  432b0c:	and    BYTE PTR [rdx+0x6f],ah
  432b0f:	je     0x432b79
  432b11:	and    BYTE PTR [rbx+0x6f],ah
  432b14:	fs movsxd esp,DWORD PTR gs:[rax]
  432b18:	(bad)  
  432b19:	outs   dx,BYTE PTR ds:[rsi]
  432b1a:	and    BYTE PTR fs:[rbp+0x75],ch
  432b1e:	js     0x432b85
  432b20:	jb     0x432b42
  432b22:	ins    BYTE PTR es:[rdi],dx
  432b23:	(bad)  
  432b24:	jns    0x432b8b
  432b26:	jb     0x432b32
  432b28:	add    BYTE PTR [rbx+0x72],dh
  432b2b:	movsxd ebp,DWORD PTR [rax+0x0]
  432b2e:	fs jae 0x432ba5
  432b31:	ja     0x432b33
  432b33:	fs jae 0x432baa
  432b36:	push   0x63727300
  432b3b:	pop    rdi
  432b3c:	outs   dx,WORD PTR ds:[rsi]
  432b3e:	jb     0x432bad
  432b40:	(bad)  
  432b41:	je     0x432b43
  432b43:	fs jae 0x432bba
  432b46:	pop    rdi
  432b47:	outs   dx,WORD PTR ds:[rsi]
  432b49:	jb     0x432bb8
  432b4b:	(bad)  
  432b4c:	je     0x432b4e
  432b4e:	add    BYTE PTR [rax],al
  432b50:	imul   r14d,DWORD PTR [rdx+0x65],0x796c7463
  432b58:	and    BYTE PTR [rbp+0x73],dh
  432b5b:	imul   ebp,DWORD PTR [rsi+0x67],0x73777320
  432b62:	movsxd esp,DWORD PTR [rcx+0x6c]
  432b65:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ah
  432b6a:	outs   dx,BYTE PTR gs:[rsi]
  432b6c:	jae    0x432bd7
  432b6e:	outs   dx,DWORD PTR ds:[rsi]
  432b6f:	outs   dx,BYTE PTR ds:[rsi]
  432b70:	jae    0x432ba1
  432b72:	outs   dx,WORD PTR ds:[rsi]
  432b74:	jb     0x432be3
  432b76:	(bad)  
  432b77:	je     0x432b99
  432b79:	outs   dx,DWORD PTR ds:[rsi]
  432b7a:	jo     0x432bf0
  432b7c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73692073
  432b83:	and    BYTE PTR [rsi+0x6f],ch
  432b86:	je     0x432ba8
  432b88:	jae    0x432bff
  432b8a:	jo     0x432bfc
  432b8c:	outs   dx,DWORD PTR ds:[rsi]
  432b8d:	jb     0x432c03
  432b8f:	gs fs sub al,0x20
  432b93:	jo     0x432c01
  432b95:	gs (bad) 
  432b97:	jae    0x432bfe
  432b99:	and    BYTE PTR [rbp+0x73],dh
  432b9c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  432ba1:	and    BYTE PTR [rip+0x726f2073],ch        # 0x72b24c1a
  432ba7:	and    BYTE PTR [rip+0x5f786970],ch        # 0x5fbb951d
  432bad:	ins    WORD PTR es:[rdi],dx
  432baf:	je     0x432bd1
  432bb1:	outs   dx,DWORD PTR ds:[rsi]
  432bb2:	jo     0x432c28
  432bb4:	imul   ebp,DWORD PTR [rdi+0x6e],0x45000a73
  432bbb:	jb     0x432c2f
  432bbd:	outs   dx,DWORD PTR ds:[rsi]
  432bbe:	jb     0x432be0
  432bc0:	jae    0x432c27
  432bc2:	je     0x432c38
  432bc4:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  432bcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e732520
  432bd2:	or     al,BYTE PTR [rax]
  432bd4:	jae    0x432c48
  432bd6:	movsxd esi,DWORD PTR [rdi+0x0]
  432bd9:	push   rbx
  432bda:	jo     0x432c48
  432bdc:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x7420676e
  432be4:	push   0x6f632065
  432be9:	ins    DWORD PTR es:[rdi],dx
  432bea:	ins    DWORD PTR es:[rdi],dx
  432beb:	(bad)  
  432bec:	outs   dx,BYTE PTR ds:[rsi]
  432bed:	fs ins BYTE PTR es:[rdi],dx
  432bef:	imul   ebp,DWORD PTR [rsi+0x65],0x52000a2e
  432bf6:	gs (bad) 
  432bf8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74706f20
  432c00:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432c07:	(bad)  
  432c08:	and    BYTE PTR [rsi],ch
  432c0a:	cs add BYTE PTR cs:[rax],ah
  432c0e:	ins    DWORD PTR es:[rdi],dx
  432c0f:	(bad)  
  432c10:	je     0x432c75
  432c12:	push   0x61206465
  432c17:	jae    0x432c39
  432c19:	and    eax,0xa2e73
  432c1e:	add    BYTE PTR [rax],al
  432c20:	imul   r14,QWORD PTR [r11+0x73],0x20676e69
  432c28:	(bad)  
  432c29:	jb     0x432c92
  432c2b:	jne    0x432c9a
  432c2d:	outs   dx,BYTE PTR gs:[rsi]
  432c2f:	je     0x432c51
  432c31:	outs   dx,WORD PTR ds:[rsi]
  432c33:	jb     0x432c55
  432c35:	outs   dx,DWORD PTR ds:[rsi]
  432c36:	jo     0x432cac
  432c38:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432c3f:	(bad)  
  432c40:	or     al,BYTE PTR cs:[rax]
  432c43:	add    BYTE PTR [rax],al
  432c45:	add    BYTE PTR [rax],al
  432c47:	add    BYTE PTR [rax],ah
  432c49:	ins    DWORD PTR es:[rdi],dx
  432c4a:	(bad)  
  432c4b:	je     0x432cb0
  432c4d:	push   0x61206465
  432c52:	jae    0x432c74
  432c54:	and    eax,0x69772073
  432c59:	je     0x432cc3
  432c5b:	and    BYTE PTR [rcx+0x72],ah
  432c5e:	addr32 jne 0x432cce
  432c61:	outs   dx,BYTE PTR gs:[rsi]
  432c63:	je     0x432c85
  432c65:	(bad)  
  432c66:	and    eax,0xa2e2773
  432c6b:	add    BYTE PTR [rax],al
  432c6d:	add    BYTE PTR [rax],al
  432c6f:	add    BYTE PTR [rax],ah
  432c71:	ins    DWORD PTR es:[rdi],dx
  432c72:	(bad)  
  432c73:	je     0x432cd8
  432c75:	push   0x61206465
  432c7a:	jae    0x432c9c
  432c7c:	outs   dx,DWORD PTR ds:[rsi]
  432c7d:	jo     0x432cf3
  432c7f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432c86:	(bad)  
  432c87:	and    BYTE PTR [rax],ch
  432c89:	and    eax,0x77202973
  432c8e:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x75677261
  432c96:	ins    DWORD PTR es:[rdi],dx
  432c97:	outs   dx,BYTE PTR gs:[rsi]
  432c99:	je     0x432cbb
  432c9b:	(bad)  
  432c9c:	and    eax,0xa2e2773
  432ca1:	add    BYTE PTR [rax],al
  432ca3:	add    BYTE PTR [rax],al
  432ca5:	add    BYTE PTR [rax],al
  432ca7:	add    BYTE PTR [rax],ah
  432ca9:	ins    DWORD PTR es:[rdi],dx
  432caa:	(bad)  
  432cab:	je     0x432d10
  432cad:	push   0x61206465
  432cb2:	jae    0x432cd4
  432cb4:	push   r14
  432cb6:	rex.WRXB jo 0x432d2d
  432cb9:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432cc0:	(bad)  
  432cc1:	and    BYTE PTR [rdi+0x69],dh
  432cc4:	je     0x432d2e
  432cc6:	and    BYTE PTR [rcx+0x72],ah
  432cc9:	addr32 jne 0x432d39
  432ccc:	outs   dx,BYTE PTR gs:[rsi]
  432cce:	je     0x432cf0
  432cd0:	(bad)  
  432cd1:	and    eax,0xa2e2773
  432cd6:	add    BYTE PTR [rax],al
  432cd8:	rex.RB jb 0x432d4d
  432cdb:	outs   dx,DWORD PTR ds:[rsi]
  432cdc:	jb     0x432cfe
  432cde:	jo     0x432d41
  432ce0:	jb     0x432d55
  432ce2:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  432ce9:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432cf0:	(bad)  
  432cf1:	and    BYTE PTR [rdi+0x69],dh
  432cf4:	je     0x432d5e
  432cf6:	and    BYTE PTR [rcx+0x72],ah
  432cf9:	addr32 jne 0x432d69
  432cfc:	outs   dx,BYTE PTR gs:[rsi]
  432cfe:	je     0x432d20
  432d00:	(bad)  
  432d01:	and    eax,0xa2e2773
  432d06:	add    BYTE PTR [rax],al
  432d08:	and    BYTE PTR [rbp+0x61],ch
  432d0b:	je     0x432d70
  432d0d:	push   0x61206465
  432d12:	jae    0x432d34
  432d14:	outs   dx,DWORD PTR ds:[rsi]
  432d15:	jo     0x432d8b
  432d17:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  432d1e:	(bad)  
  432d1f:	and    BYTE PTR [rax],ch
  432d21:	and    eax,0x77202973
  432d26:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x75677261
  432d2e:	ins    DWORD PTR es:[rdi],dx
  432d2f:	outs   dx,BYTE PTR gs:[rsi]
  432d31:	je     0x432d53
  432d33:	xor    BYTE PTR [rsi],ch
  432d35:	or     al,BYTE PTR [rax]
  432d37:	push   rbp
  432d38:	outs   dx,BYTE PTR ds:[rsi]
  432d39:	jb     0x432da0
  432d3b:	movsxd ebp,DWORD PTR [rdi+0x67]
  432d3e:	outs   dx,BYTE PTR ds:[rsi]
  432d3f:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  432d46:	je     0x432db1
  432d48:	outs   dx,DWORD PTR ds:[rsi]
  432d49:	outs   dx,BYTE PTR ds:[rsi]
  432d4a:	and    BYTE PTR [rdi],ah
  432d4c:	and    eax,0xa2e2773
  432d51:	add    BYTE PTR [rax],al
  432d53:	add    BYTE PTR [rax],al
  432d55:	add    BYTE PTR [rax],al
  432d57:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  432d5b:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x706f2067
  432d63:	je     0x432dce
  432d65:	outs   dx,DWORD PTR ds:[rsi]
  432d66:	outs   dx,BYTE PTR ds:[rsi]
  432d67:	jae    0x432d89
  432d69:	ja     0x432dd0
  432d6b:	jb     0x432dd2
  432d6d:	and    BYTE PTR [rsi+0x6f],ah
  432d70:	jne    0x432de0
  432d72:	and    BYTE PTR fs:[rdi+0x6e],ch
  432d76:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432d7a:	and    BYTE PTR [rbx+0x6f],ah
  432d7d:	ins    DWORD PTR es:[rdi],dx
  432d7e:	ins    DWORD PTR es:[rdi],dx
  432d7f:	(bad)  
  432d80:	outs   dx,BYTE PTR ds:[rsi]
  432d81:	fs ins BYTE PTR es:[rdi],dx
  432d83:	imul   ebp,DWORD PTR [rsi+0x65],0xa2e
  432d8a:	add    BYTE PTR [rax],al
  432d8c:	add    BYTE PTR [rax],al
  432d8e:	add    BYTE PTR [rax],al
  432d90:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x64656873
  432d98:	and    BYTE PTR [rbx+0x70],dh
  432d9b:	ins    BYTE PTR es:[rdi],dx
  432d9c:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x7420676e
  432da4:	push   0x6f632065
  432da9:	ins    DWORD PTR es:[rdi],dx
  432daa:	ins    DWORD PTR es:[rdi],dx
  432dab:	(bad)  
  432dac:	outs   dx,BYTE PTR ds:[rsi]
  432dad:	fs ins BYTE PTR es:[rdi],dx
  432daf:	imul   ebp,DWORD PTR [rsi+0x65],0x72000a2e
  432db6:	gs jo  0x432e1e
  432db9:	(bad)  
  432dba:	je     0x432dbc
  432dbc:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4d5035
  432dc2:	add    BYTE PTR [rax],al
  432dc4:	add    BYTE PTR [rax],al
  432dc6:	add    BYTE PTR [rax],al
  432dc8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  432dca:	jbe    0x432e2d
  432dcc:	ins    BYTE PTR es:[rdi],dx
  432dcd:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x656c676f
  432dd5:	jbe    0x432e3c
  432dd7:	ins    BYTE PTR es:[rdi],dx
  432dd8:	and    BYTE PTR [rdx],ah
  432dda:	and    eax,0x202e2273
  432ddf:	push   rax
  432de0:	outs   dx,DWORD PTR ds:[rsi]
  432de1:	jae    0x432e56
  432de3:	imul   esp,DWORD PTR [rdx+0x6c],0x656c2065
  432dea:	jbe    0x432e51
  432dec:	ins    BYTE PTR es:[rdi],dx
  432ded:	jae    0x432e0f
  432def:	(bad)  
  432df0:	jb     0x432e57
  432df2:	and    BYTE PTR [rsi+0x75],ch
  432df5:	ins    DWORD PTR es:[rdi],dx
  432df6:	(bad)  
  432df7:	gs jb  0x432e6d
  432dfa:	and    BYTE PTR [rdi+0x72],ch
  432dfd:	cmp    cl,BYTE PTR [rdx]
  432dff:	add    BYTE PTR [rcx+0x75],dh
  432e02:	imul   esp,DWORD PTR [rbp+0x74],0x6e617000
  432e09:	imul   esp,DWORD PTR [rbx+0x0],0x61746166
  432e10:	ins    BYTE PTR es:[rdi],dx
  432e11:	add    BYTE PTR [rbp+0x72],ah
  432e14:	jb     0x432e85
  432e16:	jb     0x432e18
  432e18:	ja     0x432e7b
  432e1a:	jb     0x432e8a
  432e1c:	imul   ebp,DWORD PTR [rsi+0x67],0x666e6900
  432e23:	outs   dx,DWORD PTR ds:[rsi]
  432e24:	add    BYTE PTR [rsi+0x65],dh
  432e27:	jb     0x432e8b
  432e29:	outs   dx,DWORD PTR ds:[rsi]
  432e2a:	jae    0x432e91
  432e2c:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  432e30:	movsxd esp,DWORD PTR [rbp+0x0]
  432e33:	ins    BYTE PTR es:[rdi],dx
  432e34:	outs   dx,DWORD PTR ds:[rsi]
  432e35:	ins    BYTE PTR es:[edi],dx
  432e37:	gs jbe 0x432e9f
  432e3a:	ins    BYTE PTR es:[rdi],dx
  432e3b:	add    BYTE PTR [rax],al
  432e3d:	add    BYTE PTR [rax],al
  432e3f:	add    BYTE PTR [rax+0x6f],dh
  432e42:	sub    eax,0x616c663e
  432e47:	addr32 jae 0x432e6a
  432e4a:	and    BYTE PTR es:[rax],ch
  432e4d:	xor    BYTE PTR [rax+0x34],bh
  432e50:	xor    BYTE PTR [rax],dh
  432e52:	xor    BYTE PTR [rax],dh
  432e54:	and    BYTE PTR [rax+riz*1+0x30],bh
  432e58:	js     0x432e92
  432e5a:	xor    BYTE PTR [rax],dh
  432e5c:	xor    BYTE PTR [rax],dh
  432e5e:	sub    DWORD PTR [rax],eax
  432e60:	jbe    0x432e62
  432e62:	jb     0x432ec9
  432e64:	jo     0x432ed5
  432e66:	jb     0x432edc
  432e68:	add    BYTE PTR [rsi+0x46],al
  432e6b:	push   rdx
  432e6c:	rex.RB push r8
  432e6e:	rex.WRXB push r10
  432e70:	push   rsp
  432e71:	add    BYTE PTR [rbx+0x6f],al
  432e74:	ins    DWORD PTR es:[rdi],dx
  432e75:	ins    DWORD PTR es:[rdi],dx
  432e76:	(bad)  
  432e77:	outs   dx,BYTE PTR ds:[rsi]
  432e78:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  432e7d:	cmp    cl,BYTE PTR gs:[rdx]
  432e80:	add    BYTE PTR [rbp+riz*1+0x63],bl
  432e84:	add    BYTE PTR [rax+rdi*2+0x25],bl
  432e88:	xor    BYTE PTR [rdx],dh
  432e8a:	js     0x432e8c
  432e8c:	push   0x5f656469
  432e91:	(bad)
  432e96:	jb     0x432e98
  432e98:	rex.WB outs dx,BYTE PTR ds:[rsi]
  432e9a:	jbe    0x432efd
  432e9c:	ins    BYTE PTR es:[rdi],dx
  432e9d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x615f7861
  432ea5:	ins    BYTE PTR es:[rdi],dx
  432ea6:	ins    BYTE PTR es:[rdi],dx
  432ea7:	outs   dx,DWORD PTR ds:[rsi]
  432ea8:	movsxd esp,DWORD PTR [rax]
  432eaa:	and    ah,BYTE PTR [rip+0xa2e2273]        # 0xa715123
	...
  432eb8:	sub    eax,0x6e207325
  432ebd:	outs   dx,DWORD PTR ds:[rsi]
  432ebe:	je     0x432ee0
  432ec0:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  432ec7:	outs   dx,BYTE PTR ds:[rsi]
  432ec8:	je     0x432f2f
  432eca:	and    BYTE PTR fs:[rdi+0x6e],ch
  432ece:	and    BYTE PTR [rax+rbp*2+0x69],dh
  432ed2:	jae    0x432ef4
  432ed4:	rex.WRXB push r11
  432ed6:	or     al,BYTE PTR [rax]
  432ed8:	and    eax,0x25203a73
  432edd:	jae    0x432ee9
  432edf:	add    BYTE PTR [rsi+0x65],dh
  432ee2:	jb     0x432f57
  432ee4:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732500
  432eeb:	jbe    0x432f52
  432eed:	jb     0x432f62
  432eef:	imul   ebp,DWORD PTR [rdi+0x6e],0x382e3220
  432ef6:	xor    DWORD PTR cs:[rax],esi
  432ef9:	add    BYTE PTR [rax],al
  432efb:	add    BYTE PTR [rax],al
  432efd:	add    BYTE PTR [rax],al
  432eff:	add    BYTE PTR [rax],ah
  432f01:	rex.XB outs dx,DWORD PTR ds:[rsi]
  432f03:	jo     0x432f7e
  432f05:	jb     0x432f70
  432f07:	addr32 push 0x63282074
  432f0d:	sub    DWORD PTR [rax],esp
  432f0f:	and    eax,0x64252d64
  432f14:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432f18:	and    BYTE PTR [rsi+0x46],al
  432f1b:	ins    DWORD PTR es:[rdi],dx
  432f1c:	jo     0x432f83
  432f1e:	and    BYTE PTR [ebp+eiz*2+0x76],ah
  432f23:	gs ins BYTE PTR es:[rdi],dx
  432f25:	outs   dx,DWORD PTR ds:[rsi]
  432f26:	jo     0x432f8d
  432f28:	jb     0x432f9d
  432f2a:	add    BYTE PTR [rip+0x69756273],ah        # 0x69b891a3
  432f30:	ins    BYTE PTR es:[rdi],dx
  432f31:	je     0x432f53
  432f33:	ja     0x432f9e
  432f35:	je     0x432f9f
  432f37:	and    BYTE PTR [rip+0x67000a73],ah        # 0x674339b0
  432f3d:	movsxd esp,DWORD PTR [rbx+0x20]
  432f40:	xor    al,0x2e
  432f42:	cmp    DWORD PTR [rsi],ebp
  432f44:	xor    al,0x20
  432f46:	sub    BYTE PTR [rdi+0x43],al
  432f49:	rex.XB sub DWORD PTR [r8],eax
  432f4c:	add    BYTE PTR [rax],al
  432f4e:	add    BYTE PTR [rax],al
  432f50:	and    eax,0x6e6f6373
  432f55:	imul   sp,WORD PTR [rdi+0x75],0x6172
  432f5b:	je     0x432fc6
  432f5d:	outs   dx,DWORD PTR ds:[rsi]
  432f5e:	outs   dx,BYTE PTR ds:[rsi]
  432f5f:	cmp    ah,BYTE PTR [rax]
  432f61:	sub    eax,0x6f72632d
  432f66:	jae    0x432fdb
  432f68:	sub    eax,0x66657270
  432f6d:	imul   edi,DWORD PTR [rax+0x3d],0x5f363878
  432f74:	ss xor al,0x2d
  432f77:	ja     0x432faf
  432f79:	xor    al,0x2d
  432f7b:	ins    DWORD PTR es:[rdi],dx
  432f7c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  432f83:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b194b6
  432f89:	(bad)  
  432f8a:	ins    BYTE PTR es:[rdi],dx
  432f8b:	gs sub eax,0x736f7263
  432f91:	jae    0x432fc0
  432f93:	movsxd ebp,DWORD PTR [rdi+0x6d]
  432f96:	jo     0x433001
  432f98:	ins    BYTE PTR es:[rdi],dx
  432f99:	and    BYTE PTR gs:[rip+0x7261742d],ch        # 0x72a4a3cd
  432fa0:	addr32 gs je 0x432fd1
  432fa4:	outs   dx,DWORD PTR ds:[rsi]
  432fa5:	jae    0x432fe4
  432fa7:	ins    DWORD PTR es:[rdi],dx
  432fa8:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  432faf:	sub    eax,0x6372612d
  432fb4:	push   0x3638783d
  432fb9:	pop    rdi
  432fba:	ss xor al,0x20
  432fbd:	sub    eax,0x6572702d
  432fc2:	imul   di,WORD PTR [rax+0x3d],0x732f
  432fc8:	movsxd esi,DWORD PTR [rdx+0x61]
  432fcb:	je     0x433030
  432fcd:	push   0x65776a2f
  432fd2:	(bad)  
  432fd3:	ins    DWORD PTR es:[rdi],dx
  432fd4:	js     0x43303b
  432fd6:	sub    eax,0x6174636f
  432fdb:	jbe    0x433042
  432fdd:	(bad)  
  432fde:	xor    al,0x2e
  432fe0:	xor    ch,BYTE PTR [rsi]
  432fe2:	xor    DWORD PTR [rdi],ebp
  432fe4:	ja     0x43301c
  432fe6:	xor    al,0x2d
  432fe8:	xor    esi,DWORD PTR [rdx]
  432fea:	(bad)  
  432feb:	jne    0x433060
  432fed:	jb     0x43301e
  432fef:	js     0x433029
  432ff1:	ss pop rdi
  432ff3:	ss xor al,0x2d
  432ff6:	ja     0x43302e
  432ff8:	xor    al,0x2d
  432ffa:	ins    DWORD PTR es:[rdi],dx
  432ffb:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  433002:	sub    eax,0x616e652d
  433007:	(bad)  
  433008:	ins    BYTE PTR es:[rdi],dx
  433009:	gs sub eax,0x72616873
  43300f:	gs and BYTE PTR fs:[rip+0x7369642d],ch        # 0x73ac9444
  433017:	(bad)  
  433018:	(bad)  
  433019:	ins    BYTE PTR es:[rdi],dx
  43301a:	gs sub eax,0x74617473
  433020:	imul   esp,DWORD PTR [rbx+0x20],0x61792d2d
  433027:	jae    0x433096
  433029:	gs js  0x433091
  43302c:	cmp    eax,0x7263732f
  433031:	(bad)  
  433032:	je     0x433097
  433034:	push   0x65776a2f
  433039:	(bad)  
  43303a:	ins    DWORD PTR es:[rdi],dx
  43303b:	js     0x4330a2
  43303d:	sub    eax,0x6174636f
  433042:	jbe    0x4330a9
  433044:	(bad)  
  433045:	xor    al,0x2e
  433047:	xor    ch,BYTE PTR [rsi]
  433049:	xor    DWORD PTR [rdi],ebp
  43304b:	ja     0x433083
  43304d:	xor    al,0x2d
  43304f:	xor    esi,DWORD PTR [rdx]
  433051:	(bad)  
  433052:	jne    0x4330c7
  433054:	jb     0x433085
  433056:	(bad)  
  433057:	imul   ebp,DWORD PTR [rsi+0x2f],0x6d736179
  43305e:	and    BYTE PTR [rip+0x7478652d],ch        # 0x74bb9591
  433064:	jb     0x4330c7
  433066:	sub    eax,0x7362696c
  43306b:	cmp    eax,0x6f636d2d
  433070:	outs   dx,BYTE PTR ds:[rsi]
  433071:	jae    0x4330e2
  433073:	ins    BYTE PTR es:[rdi],dx
  433074:	and    BYTE PTR gs:[rip+0x7369642d],ch        # 0x73ac94a8
  43307b:	(bad)  
  43307c:	(bad)  
  43307d:	ins    BYTE PTR es:[rdi],dx
  43307e:	gs sub eax,0x75626564
  433084:	and    BYTE PTR [eip+0x7369642d],ch        # 0x73ac94b8
  43308b:	(bad)  
  43308c:	(bad)  
  43308d:	ins    BYTE PTR es:[rdi],dx
  43308e:	gs sub eax,0x20636f64
  433094:	sub    eax,0x616e652d
  433099:	(bad)  
  43309a:	ins    BYTE PTR es:[rdi],dx
  43309b:	gs sub eax,0x616d656d
  4330a1:	ins    BYTE PTR es:[rdi],dx
  4330a2:	imul   esp,DWORD PTR [rdi+0x6e],0x6361682d
  4330a9:	imul   esp,DWORD PTR [rax],0x2d
  4330ac:	sub    eax,0x62616e65
  4330b1:	ins    BYTE PTR es:[rdi],dx
  4330b2:	gs sub eax,0x65727661
  4330b8:	jae    0x43311b
  4330ba:	ins    DWORD PTR es:[rdi],dx
  4330bb:	jo     0x433129
  4330bd:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b195f1
  4330c4:	(bad)  
  4330c5:	ins    BYTE PTR es:[rdi],dx
  4330c6:	gs sub eax,0x206c7067
  4330cc:	sub    eax,0x616e652d
  4330d1:	(bad)  
  4330d2:	ins    BYTE PTR es:[rdi],dx
  4330d3:	gs sub eax,0x73726576
  4330d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2033
  4330e0:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  4330e8:	jo     0x43315e
  4330ea:	push   0x64616572
  4330ef:	jae    0x433111
  4330f1:	sub    eax,0x616e652d
  4330f6:	(bad)  
  4330f7:	ins    BYTE PTR es:[rdi],dx
  4330f8:	gs sub eax,0x74323377
  4330fe:	push   0x64616572
  433103:	jae    0x433125
  433105:	sub    eax,0x616e652d
  43310a:	(bad)  
  43310b:	ins    BYTE PTR es:[rdi],dx
  43310c:	gs sub eax,0x73697661
  433112:	jns    0x433182
  433114:	je     0x43317e
  433116:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b19649
  43311c:	(bad)  
  43311d:	ins    BYTE PTR es:[rdi],dx
  43311e:	gs sub eax,0x74756e67
  433124:	ins    BYTE PTR es:[rdi],dx
  433125:	jae    0x433147
  433127:	sub    eax,0x616e652d
  43312c:	(bad)  
  43312d:	ins    BYTE PTR es:[rdi],dx
  43312e:	gs sub eax,0x7362696c
  433134:	jo     0x43319b
  433136:	gs js  0x433159
  433139:	sub    eax,0x616e652d
  43313e:	(bad)  
  43313f:	ins    BYTE PTR es:[rdi],dx
  433140:	gs sub eax,0x7462696c
  433146:	push   0x61726f65
  43314b:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b1967e
  433151:	(bad)  
  433152:	ins    BYTE PTR es:[rdi],dx
  433153:	gs sub eax,0x7662696c
  433159:	outs   dx,DWORD PTR ds:[rsi]
  43315a:	jb     0x4331be
  43315c:	imul   esi,DWORD PTR [rbx+0x20],0x6e652d2d
  433163:	(bad)  
  433164:	(bad)  
  433165:	ins    BYTE PTR es:[rdi],dx
  433166:	gs sub eax,0x6d62696c
  43316c:	jo     0x4331a1
  43316e:	ins    BYTE PTR es:[rdi],dx
  43316f:	(bad)  
  433170:	ins    DWORD PTR es:[rdi],dx
  433171:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b196a5
  433178:	(bad)  
  433179:	ins    BYTE PTR es:[rdi],dx
  43317a:	gs sub eax,0x7862696c
  433180:	jbe    0x4331eb
  433182:	and    BYTE PTR fs:[rip+0x616e652d],ch        # 0x61b196b6
  433189:	(bad)  
  43318a:	ins    BYTE PTR es:[rdi],dx
  43318b:	gs sub eax,0x6f62696c
  433191:	jo     0x4331f8
  433193:	outs   dx,BYTE PTR ds:[rsi]
  433194:	movsxd ebp,DWORD PTR [rdi+0x72]
  433197:	gs sub eax,0x6e726d61
  43319d:	(bad)  
  43319e:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b196d1
  4331a4:	(bad)  
  4331a5:	ins    BYTE PTR es:[rdi],dx
  4331a6:	gs sub eax,0x6f62696c
  4331ac:	jo     0x433213
  4331ae:	outs   dx,BYTE PTR ds:[rsi]
  4331af:	movsxd ebp,DWORD PTR [rdi+0x72]
  4331b2:	gs sub eax,0x77726d61
  4331b8:	(bad)  
  4331b9:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b196ec
  4331bf:	(bad)  
  4331c0:	ins    BYTE PTR es:[rdi],dx
  4331c1:	gs sub eax,0x7862696c
  4331c7:	xor    dh,BYTE PTR [rsi]
  4331c9:	xor    al,0x20
  4331cb:	sub    eax,0x616e652d
  4331d0:	(bad)  
  4331d1:	ins    BYTE PTR es:[rdi],dx
  4331d2:	gs sub eax,0x7662696c
  4331d8:	jo     0x433252
  4331da:	or     al,BYTE PTR [rax]
  4331dc:	add    BYTE PTR [rax],al
  4331de:	add    BYTE PTR [rax],al
  4331e0:	and    eax,0x52415773
  4331e5:	rex.WRX
  4331e6:	rex.WB
  4331e7:	rex.WRX
  4331e8:	rex.RXB cmp r12b,BYTE PTR [r8]
  4331eb:	ins    BYTE PTR es:[rdi],dx
  4331ec:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  4331f3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4331f6:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4331fc:	je     0x433267
  4331fe:	outs   dx,DWORD PTR ds:[rsi]
  4331ff:	outs   dx,BYTE PTR ds:[rsi]
  433200:	and    BYTE PTR [rbp+0x69],ch
  433203:	jae    0x433272
  433205:	(bad)  
  433206:	je     0x43326b
  433208:	push   0x7325000a
  43320d:	and    eax,0x7331312d
  433212:	and    BYTE PTR [rbx+0x6f],ah
  433215:	outs   dx,BYTE PTR ds:[rsi]
  433216:	imul   sp,WORD PTR [rdi+0x75],0x6172
  43321c:	je     0x433287
  43321e:	outs   dx,DWORD PTR ds:[rsi]
  43321f:	outs   dx,BYTE PTR ds:[rsi]
  433220:	cmp    ah,BYTE PTR [rax]
  433222:	and    eax,0x61000a73
  433227:	jbe    0x43329e
  433229:	je     0x433294
  43322b:	ins    BYTE PTR es:[rdi],dx
  43322c:	add    BYTE PTR [rcx+0x76],ah
  43322f:	movsxd ebp,DWORD PTR [rdi+0x64]
  433232:	movsxd eax,DWORD PTR gs:[rax]
  433235:	(bad)  
  433236:	jbe    0x43329e
  433238:	outs   dx,DWORD PTR ds:[rsi]
  433239:	jb     0x4332a8
  43323b:	(bad)  
  43323c:	je     0x43323e
  43323e:	(bad)  
  43323f:	jbe    0x4332a5
  433241:	gs jbe 0x4332ad
  433244:	movsxd esp,DWORD PTR [rbp+0x0]
  433247:	(bad)  
  433248:	jbe    0x4332b0
  43324a:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x76610072
  433252:	jb     0x4332b9
  433254:	jae    0x4332b7
  433256:	ins    DWORD PTR es:[rdi],dx
  433257:	jo     0x4332c5
  433259:	add    BYTE PTR gs:[rbx+0x77],dh
  43325d:	jae    0x4332c2
  43325f:	(bad)  
  433260:	ins    BYTE PTR es:[rdi],dx
  433261:	add    BYTE PTR gs:[rbx+0x77],dh
  433265:	jb     0x4332cc
  433267:	jae    0x4332ca
  433269:	ins    DWORD PTR es:[rdi],dx
  43326a:	jo     0x4332d8
  43326c:	add    BYTE PTR gs:[rax+0x6f],dh
  433270:	jae    0x4332e6
  433272:	jo     0x4332e6
  433274:	outs   dx,DWORD PTR ds:[rsi]
  433275:	movsxd eax,DWORD PTR [rax]
  433277:	add    BYTE PTR [rip+0x62696c73],ah        # 0x62ac9ef0
  43327d:	and    eax,0x7331312d
  433282:	and    BYTE PTR [rip+0x252e6432],ah        # 0x257196ba
  433288:	xor    esp,DWORD PTR [rsi+rbp*1+0x25]
  43328c:	xor    esp,DWORD PTR [rax+riz*1+0x2f]
  433290:	and    BYTE PTR [rip+0x252e6432],ah        # 0x257196c8
  433296:	xor    esp,DWORD PTR [rsi+rbp*1+0x25]
  43329a:	xor    esp,DWORD PTR [rdx+rcx*1+0x0]
  43329e:	add    BYTE PTR [rax],al
  4332a0:	and    eax,0x73692073
  4332a5:	and    BYTE PTR [rsi+0x72],ah
  4332a8:	gs and BYTE PTR gs:[rbx+0x6f],dh
  4332ad:	data16 je 0x433327
  4332b0:	(bad)  
  4332b1:	jb     0x433318
  4332b3:	cmp    esp,DWORD PTR [rax]
  4332b5:	jns    0x433326
  4332b7:	jne    0x4332d9
  4332b9:	movsxd esp,DWORD PTR [rcx+0x6e]
  4332bc:	and    BYTE PTR [rdx+0x65],dh
  4332bf:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4332c7:	je     0x43332e
  4332c9:	and    BYTE PTR [rcx+0x74],ch
  4332cc:	and    BYTE PTR [rcx+0x6e],ah
  4332cf:	fs (bad) 
  4332d1:	outs   dx,DWORD PTR ds:[rsi]
  4332d2:	jb     0x4332f4
  4332d4:	ins    DWORD PTR es:[rdi],dx
  4332d5:	outs   dx,DWORD PTR ds:[rsi]
  4332d6:	imul   esp,DWORD PTR fs:[rsi+0x79],0x2074690a
  4332de:	jne    0x43334e
  4332e0:	fs gs jb 0x433304
  4332e4:	je     0x43334e
  4332e6:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4332eb:	ins    DWORD PTR es:[rdi],dx
  4332ec:	jae    0x43330e
  4332ee:	outs   dx,DWORD PTR ds:[rsi]
  4332ef:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4332f4:	and    BYTE PTR [rdi+0x4e],al
  4332f7:	push   rbp
  4332f8:	and    BYTE PTR [rdi+0x65],al
  4332fb:	outs   dx,BYTE PTR ds:[rsi]
  4332fc:	gs jb  0x433360
  4332ff:	ins    BYTE PTR es:[rdi],dx
  433300:	and    BYTE PTR [rax+0x75],dl
  433303:	(bad)  
  433304:	ins    BYTE PTR es:[rdi],dx
  433305:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  43330c:	outs   dx,BYTE PTR ds:[rsi]
  43330d:	jae    0x433374
  43330f:	and    BYTE PTR [rcx+0x73],ah
  433312:	and    BYTE PTR [rax+0x75],dh
  433315:	(bad)  
  433316:	ins    BYTE PTR es:[rdi],dx
  433317:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  43331e:	jns    0x43332a
  433320:	je     0x43338a
  433322:	and    BYTE PTR gs:[rsi+0x72],al
  433326:	gs and BYTE PTR gs:[rbx+0x6f],dl
  43332b:	data16 je 0x4333a5
  43332e:	(bad)  
  43332f:	jb     0x433396
  433331:	and    BYTE PTR [rsi+0x6f],al
  433334:	jne    0x4333a4
  433336:	fs (bad) 
  433338:	je     0x4333a3
  43333a:	outs   dx,DWORD PTR ds:[rsi]
  43333b:	outs   dx,BYTE PTR ds:[rsi]
  43333c:	cmp    esp,DWORD PTR [rax]
  43333e:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  433347:	jb     0x4333bc
  433349:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  433350:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  433355:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  433359:	outs   dx,BYTE PTR gs:[rsi]
  43335b:	jae    0x4333c2
  43335d:	sub    al,0x20
  43335f:	outs   dx,DWORD PTR ds:[rsi]
  433360:	jb     0x43336c
  433362:	sub    BYTE PTR [rcx+0x74],ah
  433365:	and    BYTE PTR [rcx+0x6f],bh
  433368:	jne    0x4333dc
  43336a:	and    BYTE PTR [rdi+0x70],ch
  43336d:	je     0x4333d8
  43336f:	outs   dx,DWORD PTR ds:[rsi]
  433370:	outs   dx,BYTE PTR ds:[rsi]
  433371:	sub    DWORD PTR [rax],esp
  433373:	(bad)  
  433374:	outs   dx,BYTE PTR ds:[rsi]
  433375:	jns    0x433397
  433377:	ins    BYTE PTR es:[rdi],dx
  433378:	(bad)  
  433379:	je     0x4333e0
  43337b:	jb     0x43339d
  43337d:	jbe    0x4333e4
  43337f:	jb     0x4333f4
  433381:	imul   ebp,DWORD PTR [rdi+0x6e],0x250a0a2e
  433388:	jae    0x4333aa
  43338a:	imul   esi,DWORD PTR [rbx+0x20],0x74736964
  433391:	jb     0x4333fc
  433393:	(bad)  
  433394:	jne    0x43340a
  433396:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43339b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43339f:	and    BYTE PTR [rax+0x6f],ch
  4333a2:	jo     0x433409
  4333a4:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4333a8:	je     0x4333ca
  4333aa:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  4333b2:	(bad)  
  4333b3:	and    BYTE PTR gs:[rbp+0x73],dh
  4333b7:	gs data16 jne 0x433427
  4333bb:	sub    al,0xa
  4333bd:	(bad)  
  4333be:	jne    0x433434
  4333c0:	and    BYTE PTR [rdi+0x49],dl
  4333c3:	push   rsp
  4333c4:	rex.W
  4333c5:	rex.WRXB push r13
  4333c7:	push   rsp
  4333c8:	and    BYTE PTR [rcx+0x4e],al
  4333cb:	pop    rcx
  4333cc:	and    BYTE PTR [rdi+0x41],dl
  4333cf:	push   rdx
  4333d0:	push   rdx
  4333d1:	rex.B
  4333d2:	rex.WRX push rsp
  4333d4:	pop    rcx
  4333d5:	cmp    esp,DWORD PTR [rax]
  4333d7:	ja     0x433442
  4333d9:	je     0x433443
  4333db:	outs   dx,DWORD PTR ds:[rsi]
  4333dc:	jne    0x433452
  4333de:	and    BYTE PTR [rbp+0x76],ah
  4333e1:	outs   dx,BYTE PTR gs:[rsi]
  4333e3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4333e7:	and    BYTE PTR [rcx+0x6d],ch
  4333ea:	jo     0x433458
  4333ec:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  4333f3:	jb     0x433456
  4333f5:	outs   dx,BYTE PTR ds:[rsi]
  4333f6:	je     0x433471
  4333f8:	and    BYTE PTR [rdi+0x66],ch
  4333fb:	or     cl,BYTE PTR [rbp+0x45]
  4333fe:	push   rdx
  4333ff:	rex.XB
  433400:	rex.W
  433401:	rex.B
  433402:	rex.WRX push rsp
  433404:	rex.B
  433405:	rex.X
  433406:	rex.WB
  433407:	rex.WR
  433408:	rex.WB push r12
  43340a:	pop    rcx
  43340b:	and    BYTE PTR [rdi+0x72],ch
  43340e:	and    BYTE PTR [rsi+0x49],al
  433411:	push   rsp
  433412:	rex.WRX
  433413:	rex.RB push r11
  433415:	push   rbx
  433416:	and    BYTE PTR [rsi+0x4f],al
  433419:	push   rdx
  43341a:	and    BYTE PTR [rcx+0x20],al
  43341d:	push   rax
  43341e:	push   r10
  433420:	push   rsp
  433421:	rex.WB
  433422:	rex.XB push r13
  433424:	rex.WR
  433425:	push   r10
  433427:	and    BYTE PTR [rax+0x55],dl
  43342a:	push   rdx
  43342b:	push   rax
  43342c:	rex.WRXB push r11
  43342e:	rex.RB
  43342f:	and    BYTE PTR cs:[rax],ah
  433432:	push   rbx
  433433:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  433439:	or     al,BYTE PTR [rdi+0x4e]
  43343c:	push   rbp
  43343d:	and    BYTE PTR [rdi+0x65],al
  433440:	outs   dx,BYTE PTR ds:[rsi]
  433441:	gs jb  0x4334a5
  433444:	ins    BYTE PTR es:[rdi],dx
  433445:	and    BYTE PTR [rax+0x75],dl
  433448:	(bad)  
  433449:	ins    BYTE PTR es:[rdi],dx
  43344a:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  433451:	outs   dx,BYTE PTR ds:[rsi]
  433452:	jae    0x4334b9
  433454:	and    BYTE PTR [rsi+0x6f],ah
  433457:	jb     0x433479
  433459:	ins    DWORD PTR es:[rdi],dx
  43345a:	outs   dx,DWORD PTR ds:[rsi]
  43345b:	jb     0x4334c2
  43345d:	and    BYTE PTR [rbp+riz*2+0x74],ah
  433461:	(bad)  
  433462:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  43346a:	jne    0x43348c
  43346c:	jae    0x4334d6
  43346e:	outs   dx,DWORD PTR ds:[rsi]
  43346f:	jne    0x4334dd
  433471:	and    BYTE PTR fs:[rax+0x61],ch
  433475:	jbe    0x4334dc
  433477:	and    BYTE PTR [rdx+0x65],dh
  43347a:	movsxd esp,DWORD PTR [rbp+0x69]
  43347d:	jbe    0x4334e4
  43347f:	and    BYTE PTR fs:[rcx+0x20],ah
  433483:	movsxd ebp,DWORD PTR [rdi+0x70]
  433486:	jns    0x4334a8
  433488:	outs   dx,DWORD PTR ds:[rsi]
  433489:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  43348e:	and    BYTE PTR [rdi+0x4e],al
  433491:	push   rbp
  433492:	and    BYTE PTR [rdi+0x65],al
  433495:	outs   dx,BYTE PTR ds:[rsi]
  433496:	gs jb  0x4334fa
  433499:	ins    BYTE PTR es:[rdi],dx
  43349a:	and    BYTE PTR [rax+0x75],dl
  43349d:	(bad)  
  43349e:	ins    BYTE PTR es:[rdi],dx
  43349f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  4334a6:	outs   dx,BYTE PTR ds:[rsi]
  4334a7:	jae    0x43350e
  4334a9:	or     ah,BYTE PTR [rcx+0x6c]
  4334ac:	outs   dx,DWORD PTR ds:[rsi]
  4334ad:	outs   dx,BYTE PTR ds:[rsi]
  4334ae:	and    BYTE PTR [edi+0x69],dh
  4334b2:	je     0x43351c
  4334b4:	and    BYTE PTR [rip+0x20202e73],ah        # 0x2063632d
  4334ba:	rex.WB
  4334bb:	data16 and BYTE PTR [rsi+0x6f],ch
  4334bf:	je     0x4334ed
  4334c1:	and    BYTE PTR [rbx+0x65],dh
  4334c4:	and    BYTE PTR gs:[rax+rbp*2],bh
  4334c8:	je     0x43353e
  4334ca:	jo     0x433506
  4334cc:	(bad)  
  4334cd:	(bad)  
  4334ce:	ja     0x433547
  4334d0:	ja     0x433500
  4334d2:	outs   dx,BYTE PTR ds:[esi]
  4334d4:	jne    0x433504
  4334d6:	outs   dx,DWORD PTR ds:[rsi]
  4334d7:	jb     0x433540
  4334d9:	(bad)  
  4334da:	ins    BYTE PTR es:[rdi],dx
  4334db:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  4334e2:	(bad)  
  4334e3:	ds or  al,BYTE PTR cs:[rax]
  4334e7:	xor    BYTE PTR [rax],dh
  4334e9:	xor    BYTE PTR [rax],al
  4334eb:	add    BYTE PTR [r14+0x69],r8b
  4334ef:	ins    BYTE PTR es:[rdi],dx
  4334f0:	and    BYTE PTR gs:[rsi+0x6f],ah
  4334f4:	jb     0x433563
  4334f6:	(bad)  
  4334f7:	je     0x43356c
  4334f9:	cmp    al,BYTE PTR [rax]
  4334fb:	add    BYTE PTR [rax],al
  4334fd:	add    BYTE PTR [rax],al
  4334ff:	add    BYTE PTR [rip+0x44200a73],ah        # 0x44633f78
  433505:	and    BYTE PTR cs:[rip+0x6d654420],bh        # 0x6da8792c
  43350c:	jne    0x433586
  43350e:	imul   ebp,DWORD PTR [rsi+0x67],0x70757320
  433515:	jo     0x433586
  433517:	jb     0x43358d
  433519:	gs or  ah,BYTE PTR fs:[rax]
  43351d:	and    BYTE PTR cs:[rip+0x78754d20],r15b        # 0x78b88245
  433525:	imul   ebp,DWORD PTR [rsi+0x67],0x70757320
  43352c:	jo     0x43359d
  43352e:	jb     0x4335a4
  433530:	gs or  ah,BYTE PTR fs:[rax]
  433534:	sub    eax,0x20000a2d
  433539:	and    eax,0x20732573
  43353e:	and    eax,0x7335312d
  433543:	and    BYTE PTR [rip+0x44000a73],ah        # 0x44433fbc
  433549:	gs jbe 0x4335b5
  43354c:	movsxd esp,DWORD PTR [rbp+0x73]
  43354f:	cmp    al,BYTE PTR [rax]
  433551:	rex.WB add BYTE PTR [r8+rax*1+0x0],cl
  433556:	add    BYTE PTR [rax],al
  433558:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43355a:	fs movsxd esi,DWORD PTR gs:[rbx+0x3a]
  43355f:	or     ah,BYTE PTR [rax]
  433561:	rex.R
  433562:	cs cs cs cs and BYTE PTR cs:[rip+0x63654420],bh        # 0x63a8798d
  43356d:	outs   dx,DWORD PTR ds:[rsi]
  43356e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  433576:	jo     0x4335e7
  433578:	jb     0x4335ee
  43357a:	gs or  ah,BYTE PTR fs:[rax]
  43357e:	cs rex.RB
  433580:	cs cs cs and BYTE PTR cs:[rip+0x636e4520],bh        # 0x63b17aaa
  43358a:	outs   dx,DWORD PTR ds:[rsi]
  43358b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  433593:	jo     0x433604
  433595:	jb     0x43360b
  433597:	gs or  ah,BYTE PTR fs:[rax]
  43359b:	cs cs push rsi
  43359e:	cs cs and BYTE PTR cs:[rip+0x64695620],bh        # 0x64ac8bc7
  4335a7:	outs   dx,DWORD PTR gs:[rsi]
  4335a9:	and    BYTE PTR [rbx+0x6f],ah
  4335ac:	fs movsxd ecx,DWORD PTR gs:[rdx]
  4335b0:	and    BYTE PTR [rsi],ch
  4335b2:	cs rex.B
  4335b4:	cs cs and BYTE PTR cs:[rip+0x64754120],bh        # 0x64b876dd
  4335bd:	imul   ebp,DWORD PTR [rdi+0x20],0x65646f63
  4335c4:	movsxd ecx,DWORD PTR [rdx]
  4335c6:	and    BYTE PTR [rsi],ch
  4335c8:	cs push rbx
  4335ca:	cs cs and BYTE PTR cs:[rip+0x62755320],bh        # 0x62b888f3
  4335d3:	je     0x43363e
  4335d5:	je     0x433643
  4335d7:	and    BYTE PTR gs:[rbx+0x6f],ah
  4335db:	fs movsxd ecx,DWORD PTR gs:[rdx]
  4335df:	and    BYTE PTR [rsi],ch
  4335e1:	cs cs rex.WB
  4335e4:	cs and BYTE PTR cs:[rip+0x746e4920],bh        # 0x74b17f0c
  4335ec:	jb     0x43364f
  4335ee:	and    BYTE PTR [rsi+0x72],ah
  4335f1:	(bad)  
  4335f2:	ins    DWORD PTR es:[rdi],dx
  4335f3:	gs sub eax,0x796c6e6f
  4335f9:	and    BYTE PTR [rbx+0x6f],ah
  4335fc:	fs movsxd ecx,DWORD PTR gs:[rdx]
  433600:	and    BYTE PTR [rsi],ch
  433602:	cs cs cs rex.WR
  433606:	and    BYTE PTR cs:[rip+0x736f4c20],bh        # 0x73b2822d
  43360d:	jae    0x433688
  43360f:	and    BYTE PTR [rbx+0x6f],ah
  433612:	ins    DWORD PTR es:[rdi],dx
  433613:	jo     0x433687
  433615:	gs jae 0x43368b
  433618:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e2e200a
  43361f:	cs cs cs push rbx
  433623:	and    BYTE PTR [rip+0x736f4c20],bh        # 0x73b28249
  433629:	jae    0x433697
  43362b:	gs jae 0x4336a1
  43362e:	and    BYTE PTR [rbx+0x6f],ah
  433631:	ins    DWORD PTR es:[rdi],dx
  433632:	jo     0x4336a6
  433634:	gs jae 0x4336aa
  433637:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d200a
  43363e:	sub    eax,0x2d2d2d2d
  433643:	or     al,BYTE PTR [rax]
  433645:	pop    rdi
  433646:	fs gs jo 0x4336bc
  43364a:	movsxd esp,DWORD PTR gs:[rcx+0x74]
  43364e:	gs add BYTE PTR fs:[rip+0x28200063],ah        # 0x286336b9
  433656:	and    eax,0x203a73
  43365b:	and    eax,0x29002073
  433660:	add    BYTE PTR [rdx+0x69],al
  433663:	je     0x4336d8
  433665:	je     0x4336d9
  433667:	gs (bad) 
  433669:	ins    DWORD PTR es:[rdi],dx
  43366a:	and    BYTE PTR [rsi+0x69],ah
  43366d:	ins    BYTE PTR es:[rdi],dx
  43366e:	je     0x4336d5
  433670:	jb     0x4336e5
  433672:	cmp    cl,BYTE PTR [rdx]
  433674:	add    BYTE PTR [rax],al
  433676:	add    BYTE PTR [rax],al
  433678:	push   rbx
  433679:	jne    0x4336eb
  43367b:	jo     0x4336ec
  43367d:	jb     0x4336f3
  43367f:	gs and BYTE PTR fs:[rsi+0x69],ah
  433684:	ins    BYTE PTR es:[rdi],dx
  433685:	and    BYTE PTR gs:[rax+0x72],dh
  433689:	outs   dx,DWORD PTR ds:[rsi]
  43368a:	je     0x4336fb
  43368c:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43368f:	jae    0x4336cb
  433691:	or     cl,BYTE PTR [rcx+0x6e]
  433694:	jo     0x43370b
  433696:	je     0x4336d2
  433698:	or     al,BYTE PTR [rax]
  43369a:	and    BYTE PTR [rax],ah
  43369c:	and    eax,0x4f000a73
  4336a1:	jne    0x433717
  4336a3:	jo     0x43371a
  4336a5:	je     0x4336e1
  4336a7:	or     al,BYTE PTR [rax]
  4336a9:	add    BYTE PTR [rax],al
  4336ab:	add    BYTE PTR [rax],al
  4336ad:	add    BYTE PTR [rax],al
  4336af:	add    BYTE PTR [rsi+0x69],al
  4336b2:	ins    BYTE PTR es:[rdi],dx
  4336b3:	je     0x43371a
  4336b5:	jb     0x43372a
  4336b7:	cmp    cl,BYTE PTR [rdx]
  4336b9:	and    BYTE PTR [rax],ah
  4336bb:	push   rsp
  4336bc:	cs and BYTE PTR cs:[rip+0x6d695420],bh        # 0x6dac8ae4
  4336c4:	gs ins BYTE PTR es:[rdi],dx
  4336c6:	imul   ebp,DWORD PTR [rsi+0x65],0x70757320
  4336cd:	jo     0x43373e
  4336cf:	jb     0x433745
  4336d1:	or     ah,BYTE PTR [rax]
  4336d3:	and    BYTE PTR [rsi],ch
  4336d5:	push   rbx
  4336d6:	and    BYTE PTR cs:[rip+0x696c5320],bh        # 0x69af89fd
  4336dd:	movsxd esp,DWORD PTR [rbp+0x20]
  4336e0:	je     0x43374a
  4336e2:	jb     0x433749
  4336e4:	(bad)  
  4336e5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e20200a
  4336ed:	rex.XB and BYTE PTR cs:[rip+0x6d6f4320],dil        # 0x6db27a15
  4336f5:	ins    DWORD PTR es:[rdi],dx
  4336f6:	(bad)  
  4336f7:	outs   dx,BYTE PTR ds:[rsi]
  4336f8:	and    BYTE PTR fs:[rbx+0x75],dh
  4336fc:	jo     0x43376e
  4336fe:	outs   dx,DWORD PTR ds:[rsi]
  4336ff:	jb     0x433775
  433701:	or     ah,BYTE PTR [rax]
  433703:	and    BYTE PTR [rcx+0x20],al
  433706:	cmp    eax,0x64754120
  43370b:	imul   ebp,DWORD PTR [rdi+0x20],0x75706e69
  433712:	je     0x433743
  433714:	outs   dx,DWORD PTR ds:[rsi]
  433715:	jne    0x43378b
  433717:	jo     0x43378e
  433719:	je     0x433725
  43371b:	and    BYTE PTR [rax],ah
  43371d:	push   rsi
  43371e:	and    BYTE PTR [rip+0x64695620],bh        # 0x64ac8d44
  433724:	outs   dx,DWORD PTR gs:[rsi]
  433726:	and    BYTE PTR [rcx+0x6e],ch
  433729:	jo     0x4337a0
  43372b:	je     0x43375c
  43372d:	outs   dx,DWORD PTR ds:[rsi]
  43372e:	jne    0x4337a4
  433730:	jo     0x4337a7
  433732:	je     0x43373e
  433734:	and    BYTE PTR [rax],ah
  433736:	rex.WRX and BYTE PTR [rip+0x6e794420],r15b        # 0x6ebc7b5d
  43373d:	(bad)  
  43373e:	ins    DWORD PTR es:[rdi],dx
  43373f:	imul   esp,DWORD PTR [rbx+0x20],0x626d756e
  433746:	gs jb  0x433769
  433749:	(bad)  
  43374a:	outs   dx,BYTE PTR ds:[rsi]
  43374b:	fs (bad) 
  43374d:	outs   dx,DWORD PTR ds:[rsi]
  43374e:	jb     0x433770
  433750:	je     0x4337cb
  433752:	jo     0x4337b9
  433754:	and    BYTE PTR [rdi+0x66],ch
  433757:	and    BYTE PTR [rcx+0x6e],ch
  43375a:	jo     0x4337d1
  43375c:	je     0x43378d
  43375e:	outs   dx,DWORD PTR ds:[rsi]
  43375f:	jne    0x4337d5
  433761:	jo     0x4337d8
  433763:	je     0x43376f
  433765:	and    BYTE PTR [rax],ah
  433767:	jl     0x433789
  433769:	cmp    eax,0x756f5320
  43376e:	jb     0x4337d3
  433770:	and    BYTE PTR gs:[rdi+0x72],ch
  433774:	and    BYTE PTR [rbx+0x69],dh
  433777:	outs   dx,BYTE PTR ds:[rsi]
  433778:	imul   esp,DWORD PTR [rax],0x66
  43377b:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x20000a72
  433783:	and    eax,0x25632563
  433788:	movsxd esp,DWORD PTR [rax]
  43378a:	and    eax,0x7336312d
  43378f:	and    BYTE PTR [rip+0x7330312d],ah        # 0x737368c2
  433795:	and    BYTE PTR [rip+0x6e000a73],ah        # 0x6e43420e
  43379b:	(bad)  
  43379c:	ins    DWORD PTR es:[rdi],dx
  43379d:	add    BYTE PTR gs:[rip+0x7332332d],ah        # 0x73756ad1
  4337a4:	and    BYTE PTR [rbx],ah
  4337a6:	push   rdx
  4337a7:	push   rdx
  4337a8:	rex.RXB
  4337a9:	rex.RXB
  4337aa:	rex.X
  4337ab:	rex.X or al,BYTE PTR [rax]
  4337ae:	and    eax,0x7332332d
  4337b3:	and    BYTE PTR [rbx],ah
  4337b5:	and    eax,0x25783230
  4337ba:	xor    BYTE PTR [rdx],dh
  4337bc:	js     0x4337e3
  4337be:	xor    BYTE PTR [rdx],dh
  4337c0:	js     0x4337cc
  4337c2:	add    BYTE PTR [rax],al
  4337c4:	add    BYTE PTR [rax],al
  4337c6:	add    BYTE PTR [rax],al
  4337c8:	push   rax
  4337c9:	imul   edi,DWORD PTR [rax+0x65],0x6f66206c
  4337d0:	jb     0x43383f
  4337d2:	(bad)  
  4337d3:	je     0x433848
  4337d5:	cmp    cl,BYTE PTR [rdx]
  4337d7:	rex.WB
  4337d8:	cs cs cs and BYTE PTR cs:[rip+0x70755320],bh        # 0x70b88b02
  4337e2:	jo     0x433853
  4337e4:	jb     0x43385a
  4337e6:	gs and BYTE PTR fs:[rcx+0x6e],cl
  4337eb:	jo     0x433862
  4337ed:	je     0x43380f
  4337ef:	and    BYTE PTR [rsi+0x6f],ah
  4337f2:	jb     0x433861
  4337f4:	(bad)  
  4337f5:	je     0x433817
  4337f7:	outs   dx,WORD PTR ds:[rsi]
  4337f9:	jb     0x43381b
  4337fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4337fe:	jbe    0x433865
  433800:	jb     0x433875
  433802:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e4f2e0a
  433809:	cs and BYTE PTR cs:[rip+0x70755320],bh        # 0x70b88b31
  433811:	jo     0x433882
  433813:	jb     0x433889
  433815:	gs and BYTE PTR fs:[rdi+0x75],cl
  43381a:	je     0x43388c
  43381c:	jne    0x433892
  43381e:	and    BYTE PTR [rsi+0x6f],ah
  433821:	jb     0x433890
  433823:	(bad)  
  433824:	je     0x433846
  433826:	outs   dx,WORD PTR ds:[rsi]
  433828:	jb     0x43384a
  43382a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43382d:	jbe    0x433894
  43382f:	jb     0x4338a4
  433831:	imul   ebp,DWORD PTR [rdi+0x6e],0x482e2e0a
  433838:	cs and BYTE PTR cs:[rip+0x72614820],bh        # 0x72a48060
  433840:	fs ja  0x4338a4
  433843:	jb     0x4338aa
  433845:	and    BYTE PTR [rcx+0x63],ah
  433848:	movsxd esp,DWORD PTR [rbp+0x6c]
  43384b:	gs jb  0x4338af
  43384e:	je     0x4338b5
  433850:	and    BYTE PTR fs:[rsi+0x6f],ah
  433854:	jb     0x4338c3
  433856:	(bad)  
  433857:	je     0x433863
  433859:	cs cs cs push rax
  43385d:	and    BYTE PTR cs:[rip+0x6c615020],bh        # 0x6ca48884
  433864:	gs je  0x4338db
  433867:	gs and BYTE PTR fs:[rsi+0x6f],ah
  43386c:	jb     0x4338db
  43386e:	(bad)  
  43386f:	je     0x43387b
  433871:	cs cs cs rex.X and BYTE PTR cs:[rip+0x74694220],dil        # 0x74ac7a9c
  43387c:	jae    0x4338f2
  43387e:	jb     0x4338e5
  433880:	(bad)  
  433881:	ins    DWORD PTR es:[rdi],dx
  433882:	and    BYTE PTR [rsi+0x6f],ah
  433885:	jb     0x4338f4
  433887:	(bad)  
  433888:	je     0x433894
  43388a:	rex.RX
  43388b:	rex.WR
  43388c:	rex.B
  43388d:	rex.RXB push r11
  43388f:	and    BYTE PTR [rsi+0x41],cl
  433892:	rex.WRB
  433893:	and    BYTE PTR [r8],r12b
  433896:	and    BYTE PTR [rax],ah
  433898:	and    BYTE PTR [rax],ah
  43389a:	and    BYTE PTR [rax],ah
  43389c:	and    BYTE PTR [rax],ah
  43389e:	and    BYTE PTR [rax],ah
  4338a0:	rex.WRX
  4338a1:	rex.X pop rdi
  4338a3:	rex.XB
  4338a4:	rex.WRXB
  4338a5:	rex.WRB push r8
  4338a7:	rex.WRXB
  4338a8:	rex.WRX
  4338a9:	rex.RB
  4338aa:	rex.WRX push rsp
  4338ac:	push   rbx
  4338ad:	and    BYTE PTR [rdx+0x49],al
  4338b0:	push   rsp
  4338b1:	push   rbx
  4338b2:	pop    rdi
  4338b3:	push   rax
  4338b4:	rex.RB push r10
  4338b6:	pop    rdi
  4338b7:	push   rax
  4338b8:	rex.WB pop r8
  4338ba:	rex.RB
  4338bb:	rex.WR or r13b,BYTE PTR [rip+0x2d2d2d2d]        # 0x2d7065ef
  4338c2:	or     al,BYTE PTR [rax]
  4338c4:	add    BYTE PTR [rax],al
  4338c6:	add    BYTE PTR [rax],al
  4338c8:	and    eax,0x25632563
  4338cd:	movsxd esp,DWORD PTR [rip+0x20632563]        # 0x20a65e36
  4338d3:	and    eax,0x7336312d
  4338d8:	and    BYTE PTR [rax],ah
  4338da:	and    BYTE PTR [rax],ah
  4338dc:	and    BYTE PTR [rax],ah
  4338de:	and    BYTE PTR [rip+0x20202064],ah        # 0x20635948
  4338e4:	and    BYTE PTR [rax],ah
  4338e6:	and    BYTE PTR [rax],ah
  4338e8:	and    BYTE PTR [rax],ah
  4338ea:	and    BYTE PTR [rax],ah
  4338ec:	and    BYTE PTR [rip+0xa6432],ah        # 0x4d9d24
  4338f2:	sub    eax,DWORD PTR [rax]
  4338f4:	add    BYTE PTR [rax],al
  4338f6:	add    BYTE PTR [rax],al
  4338f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4338fa:	imul   esi,DWORD PTR fs:[rsi+0x69],0x6c617564
  433902:	and    BYTE PTR [rbx+0x68],ah
  433905:	(bad)  
  433906:	outs   dx,BYTE PTR ds:[rsi]
  433907:	outs   dx,BYTE PTR ds:[rsi]
  433908:	gs ins BYTE PTR es:[rdi],dx
  43390a:	jae    0x433946
  43390c:	or     cl,BYTE PTR [rsi+0x41]
  43390f:	rex.WRB
  433910:	and    BYTE PTR [r8],r12b
  433913:	and    BYTE PTR [rax],ah
  433915:	and    BYTE PTR [rax],ah
  433917:	and    BYTE PTR [rax],ah
  433919:	and    BYTE PTR [rax],ah
  43391b:	and    BYTE PTR [rbp+rax*2+0x53],al
  43391f:	rex.XB push r10
  433921:	rex.WB push r8
  433923:	push   rsp
  433924:	rex.WB
  433925:	rex.WRXB
  433926:	rex.WRX or r8b,BYTE PTR [rax]
  433929:	and    eax,0x7334312d
  43392e:	and    BYTE PTR [rip+0xa73],ah        # 0x4343a7
  433934:	add    BYTE PTR [rax],al
  433936:	add    BYTE PTR [rax],al
  433938:	or     dl,BYTE PTR [rbx+0x74]
  43393b:	(bad)  
  43393c:	outs   dx,BYTE PTR ds:[rsi]
  43393d:	fs (bad) 
  43393f:	jb     0x4339a5
  433941:	and    BYTE PTR [rbx+0x68],ah
  433944:	(bad)  
  433945:	outs   dx,BYTE PTR ds:[rsi]
  433946:	outs   dx,BYTE PTR ds:[rsi]
  433947:	gs ins BYTE PTR es:[rdi],dx
  433949:	and    BYTE PTR [rcx+riz*2+0x79],ch
  43394d:	outs   dx,DWORD PTR ds:[rsi]
  43394e:	jne    0x4339c4
  433950:	jae    0x43398c
  433952:	or     cl,BYTE PTR [rsi+0x41]
  433955:	rex.WRB
  433956:	and    BYTE PTR [r8],r12b
  433959:	and    BYTE PTR [rax],ah
  43395b:	and    BYTE PTR [rax],ah
  43395d:	and    BYTE PTR [rax],ah
  43395f:	and    BYTE PTR [rax],ah
  433961:	and    BYTE PTR [rbp+rax*2+0x43],al
  433965:	rex.WRXB
  433966:	rex.WRB push r8
  433968:	rex.WRXB push r11
  43396a:	rex.WB push r12
  43396c:	rex.WB
  43396d:	rex.WRXB
  43396e:	rex.WRX or r8b,BYTE PTR [rax]
  433971:	and    eax,0x7334312d
  433976:	and    BYTE PTR [rax],al
  433978:	and    eax,0x732573
  43397d:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  433982:	gs jb  0x433985
  433985:	outs   dx,BYTE PTR gs:[rsi]
  433987:	movsxd ebp,DWORD PTR [rdi+0x64]
  43398a:	gs jb  0x43398d
  43398d:	fs gs ins DWORD PTR es:[rdi],dx
  433990:	jne    0x433a0a
  433992:	gs jb  0x433995
  433995:	push   rbp
  433996:	outs   dx,BYTE PTR ds:[rsi]
  433997:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43399b:	outs   dx,BYTE PTR ds:[rsi]
  43399c:	and    BYTE PTR [rsi+0x6f],ah
  43399f:	jb     0x433a0e
  4339a1:	(bad)  
  4339a2:	je     0x4339c4
  4339a4:	(bad)  
  4339a5:	and    eax,0xa2e2773
  4339aa:	add    BYTE PTR [rbp+riz*2+0x6d],al
  4339ae:	jne    0x433a28
  4339b0:	gs jb  0x4339d3
  4339b3:	and    eax,0x255b2073
  4339b8:	jae    0x433a17
  4339ba:	cmp    cl,BYTE PTR [rdx]
  4339bc:	add    BYTE PTR [rax],ah
  4339be:	and    BYTE PTR [rax],ah
  4339c0:	and    BYTE PTR [rbx+0x6f],al
  4339c3:	ins    DWORD PTR es:[rdi],dx
  4339c4:	ins    DWORD PTR es:[rdi],dx
  4339c5:	outs   dx,DWORD PTR ds:[rsi]
  4339c6:	outs   dx,BYTE PTR ds:[rsi]
  4339c7:	and    BYTE PTR [rbp+0x78],ah
  4339ca:	je     0x433a31
  4339cc:	outs   dx,BYTE PTR ds:[rsi]
  4339cd:	jae    0x433a38
  4339cf:	outs   dx,DWORD PTR ds:[rsi]
  4339d0:	outs   dx,BYTE PTR ds:[rsi]
  4339d1:	jae    0x433a0d
  4339d3:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d684c
  4339d9:	ins    DWORD PTR es:[rdi],dx
  4339da:	jne    0x433a54
  4339dc:	gs jb  0x4339df
  4339df:	rex.WRB jne 0x433a5a
  4339e2:	gs jb  0x433a05
  4339e5:	and    eax,0x255b2073
  4339ea:	jae    0x433a49
  4339ec:	cmp    cl,BYTE PTR [rdx]
  4339ee:	add    BYTE PTR [rax],ah
  4339f0:	and    BYTE PTR [rax],ah
  4339f2:	and    BYTE PTR [rbp+0x69],cl
  4339f5:	ins    DWORD PTR es:[rdi],dx
  4339f6:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4339fb:	cmp    ah,BYTE PTR gs:[rax]
  4339fe:	and    eax,0xa2e73
  433a03:	and    BYTE PTR [rax],ah
  433a05:	and    BYTE PTR [rax],ah
  433a07:	rex.R
  433a08:	gs data16 (bad) 
  433a0b:	jne    0x433a79
  433a0d:	je     0x433a2f
  433a0f:	jbe    0x433a7a
  433a11:	fs outs dx,DWORD PTR gs:[rsi]
  433a14:	and    BYTE PTR [rbx+0x6f],ah
  433a17:	fs movsxd edi,DWORD PTR gs:[rdx]
  433a1b:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d6894
  433a21:	and    BYTE PTR [rax],ah
  433a23:	and    BYTE PTR [rax],ah
  433a25:	rex.R
  433a26:	gs data16 (bad) 
  433a29:	jne    0x433a97
  433a2b:	je     0x433a4d
  433a2d:	(bad)  
  433a2e:	jne    0x433a94
  433a30:	imul   ebp,DWORD PTR [rdi+0x20],0x65646f63
  433a37:	movsxd edi,DWORD PTR [rdx]
  433a39:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d68b2
  433a3f:	add    BYTE PTR [rax],ah
  433a41:	and    BYTE PTR [rax],ah
  433a43:	and    BYTE PTR [rbp+riz*2+0x66],al
  433a47:	(bad)  
  433a48:	jne    0x433ab6
  433a4a:	je     0x433a6c
  433a4c:	jae    0x433ac3
  433a4e:	(bad)  
  433a4f:	je     0x433aba
  433a51:	je     0x433abf
  433a53:	and    BYTE PTR gs:[rbx+0x6f],ah
  433a57:	fs movsxd edi,DWORD PTR gs:[rdx]
  433a5b:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d68d4
  433a61:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  433a68:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  433a6a:	and    BYTE PTR [rsi+0x69],ah
  433a6d:	ins    BYTE PTR es:[rdi],dx
  433a6e:	je     0x433ad5
  433a70:	jb     0x433a92
  433a72:	outs   dx,BYTE PTR ds:[rsi]
  433a73:	(bad)  
  433a74:	ins    DWORD PTR es:[rdi],dx
  433a75:	and    BYTE PTR gs:[rbx+0x70],dh
  433a79:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  433a7d:	imul   esp,DWORD PTR [rbp+0x64],0x55000a2e
  433a84:	outs   dx,BYTE PTR ds:[rsi]
  433a85:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  433a89:	outs   dx,BYTE PTR ds:[rsi]
  433a8a:	and    BYTE PTR [rsi+0x69],ah
  433a8d:	ins    BYTE PTR es:[rdi],dx
  433a8e:	je     0x433af5
  433a90:	jb     0x433ab2
  433a92:	(bad)  
  433a93:	and    eax,0xa2e2773
  433a98:	add    BYTE PTR [rsi+0x69],al
  433a9b:	ins    BYTE PTR es:[rdi],dx
  433a9c:	je     0x433b03
  433a9e:	jb     0x433ac0
  433aa0:	and    eax,0xa73
  433aa5:	add    BYTE PTR [rax],al
  433aa7:	add    BYTE PTR [rax],ah
  433aa9:	and    BYTE PTR [rax],ah
  433aab:	and    BYTE PTR [rbx+0x6c],dh
  433aae:	imul   esp,DWORD PTR [rbx+0x65],0x72687420
  433ab5:	gs (bad) 
  433ab7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  433abf:	jo     0x433b30
  433ac1:	jb     0x433b37
  433ac3:	gs or  al,BYTE PTR fs:[rax]
  433ac7:	and    BYTE PTR [rax],ah
  433ac9:	and    BYTE PTR [rax],ah
  433acb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  433acd:	jo     0x433b44
  433acf:	je     0x433b44
  433ad1:	cmp    cl,BYTE PTR [rdx]
  433ad3:	add    BYTE PTR [rax],ah
  433ad5:	and    BYTE PTR [rax],ah
  433ad7:	and    BYTE PTR [rax],ah
  433ad9:	and    BYTE PTR [rax],ah
  433adb:	and    esp,DWORD PTR [rip+0x25203a64]        # 0x25637545
  433ae1:	jae    0x433b03
  433ae3:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4d645c
  433ae9:	add    BYTE PTR [rax],al
  433aeb:	add    BYTE PTR [rax],al
  433aed:	add    BYTE PTR [rax],al
  433aef:	add    BYTE PTR [rax],ah
  433af1:	and    BYTE PTR [rax],ah
  433af3:	and    BYTE PTR [rax],ah
  433af5:	and    BYTE PTR [rax],ah
  433af7:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  433afb:	(bad)  
  433afc:	ins    DWORD PTR es:[rdi],dx
  433afd:	imul   esp,DWORD PTR [rbx+0x20],0x70656428
  433b04:	outs   dx,BYTE PTR gs:[rsi]
  433b06:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206e6f20
  433b0e:	je     0x433b78
  433b10:	and    BYTE PTR gs:[rdi+0x70],ch
  433b14:	je     0x433b7f
  433b16:	outs   dx,DWORD PTR ds:[rsi]
  433b17:	outs   dx,BYTE PTR ds:[rsi]
  433b18:	jae    0x433b43
  433b1a:	or     al,BYTE PTR [rax]
  433b1c:	and    BYTE PTR [rax],ah
  433b1e:	and    BYTE PTR [rax],ah
  433b20:	and    BYTE PTR [rax],ah
  433b22:	and    BYTE PTR [rax],ah
  433b24:	outs   dx,BYTE PTR ds:[rsi]
  433b25:	outs   dx,DWORD PTR ds:[rsi]
  433b26:	outs   dx,BYTE PTR ds:[rsi]
  433b27:	and    BYTE PTR gs:[rax],ch
  433b2a:	jae    0x433b9b
  433b2c:	jne    0x433ba0
  433b2e:	movsxd esp,DWORD PTR [rbp+0x20]
  433b31:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2972
  433b38:	or     al,BYTE PTR [rax]
  433b3a:	and    BYTE PTR [rax],ah
  433b3c:	and    BYTE PTR [rax],ah
  433b3e:	rex.WRXB jne 0x433bb5
  433b41:	jo     0x433bb8
  433b43:	je     0x433bb8
  433b45:	cmp    cl,BYTE PTR [rdx]
  433b47:	add    BYTE PTR [rax],ah
  433b49:	and    BYTE PTR [rax],ah
  433b4b:	and    BYTE PTR [rax],ah
  433b4d:	and    BYTE PTR [rax],ah
  433b4f:	and    BYTE PTR [rsi+0x6f],ch
  433b52:	outs   dx,BYTE PTR ds:[rsi]
  433b53:	and    BYTE PTR gs:[rax],ch
  433b56:	jae    0x433bc1
  433b58:	outs   dx,BYTE PTR ds:[rsi]
  433b59:	imul   esp,DWORD PTR [rax],0x66
  433b5c:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0xa2972
  433b64:	add    BYTE PTR [rax],al
  433b66:	add    BYTE PTR [rax],al
  433b68:	push   rsp
  433b69:	push   0x66207369
  433b6e:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61682072
  433b76:	jae    0x433b98
  433b78:	jae    0x433bef
  433b7a:	jo     0x433bec
  433b7c:	outs   dx,DWORD PTR ds:[rsi]
  433b7d:	jb     0x433bf3
  433b7f:	and    BYTE PTR [rsi+0x6f],ah
  433b82:	jb     0x433ba4
  433b84:	je     0x433bef
  433b86:	ins    DWORD PTR es:[rdi],dx
  433b87:	gs ins BYTE PTR es:[rdi],dx
  433b89:	imul   ebp,DWORD PTR [rsi+0x65],0x72687420
  433b90:	outs   dx,DWORD PTR ds:[rsi]
  433b91:	jne    0x433bfa
  433b93:	push   0x65687420
  433b98:	and    BYTE PTR [rdi],ah
  433b9a:	outs   dx,BYTE PTR gs:[rsi]
  433b9c:	(bad)  
  433b9d:	(bad)  
  433b9e:	ins    BYTE PTR es:[rdi],dx
  433b9f:	gs (bad) 
  433ba1:	and    BYTE PTR [rdi+0x70],ch
  433ba4:	je     0x433c0f
  433ba6:	outs   dx,DWORD PTR ds:[rsi]
  433ba7:	outs   dx,BYTE PTR ds:[rsi]
  433ba8:	or     al,BYTE PTR cs:[rax]
  433bab:	(bad)  
  433bac:	cs data16 ins WORD PTR es:[rdi],dx
  433bb0:	jo     0x433c17
  433bb2:	add    BYTE PTR [esi+0x46],al
  433bb6:	rex.WRB push r8
  433bb8:	rex.RB
  433bb9:	rex.RXB pop r15
  433bbb:	rex.R
  433bbc:	push   r12
  433bbe:	rex.B
  433bbf:	rex.R
  433bc0:	rex.WB push r10
  433bc2:	add    BYTE PTR [rax+0x4f],cl
  433bc5:	rex.WRB
  433bc6:	add    BYTE PTR [r15],r13b
  433bc9:	jae    0x433c2e
  433bcb:	jb     0x433c2e
  433bcd:	je     0x433c32
  433bcf:	push   0x65776a2f
  433bd4:	(bad)  
  433bd5:	ins    DWORD PTR es:[rdi],dx
  433bd6:	js     0x433c3d
  433bd8:	sub    eax,0x6174636f
  433bdd:	jbe    0x433c44
  433bdf:	(bad)  
  433be0:	xor    al,0x2e
  433be2:	xor    ch,BYTE PTR [rsi]
  433be4:	xor    DWORD PTR [rdi],ebp
  433be6:	ja     0x433c1e
  433be8:	xor    al,0x2d
  433bea:	xor    esi,DWORD PTR [rdx]
  433bec:	(bad)  
  433bed:	jne    0x433c62
  433bef:	jb     0x433c20
  433bf1:	js     0x433c2b
  433bf3:	ss pop rdi
  433bf5:	ss xor al,0x2d
  433bf8:	ja     0x433c30
  433bfa:	xor    al,0x2d
  433bfc:	ins    DWORD PTR es:[rdi],dx
  433bfd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  433c04:	jae    0x433c6e
  433c06:	(bad)  
  433c07:	jb     0x433c6e
  433c09:	(bad)  
  433c0a:	data16 ins WORD PTR es:[rdi],dx
  433c0d:	jo     0x433c74
  433c0f:	add    BYTE PTR [edx+0x0],dh
  433c13:	(bad)  
  433c14:	data16 data16 jo 0x433c8a
  433c18:	gs jae 0x433c80
  433c1b:	je     0x433c90
  433c1d:	add    BYTE PTR [rip+0x2f732573],ah        # 0x2fb66196
  433c23:	and    eax,0x73252d73
  433c28:	cs data16 data16 jo 0x433c9f
  433c2d:	gs jae 0x433c95
  433c30:	je     0x433c32
  433c32:	and    eax,0x2f732573
  433c37:	and    eax,0x66662e73
  433c3c:	jo     0x433cb0
  433c3e:	gs jae 0x433ca6
  433c41:	je     0x433c43
  433c43:	add    BYTE PTR [rax],al
  433c45:	add    BYTE PTR [rax],al
  433c47:	add    BYTE PTR [rcx+0x6e],cl
  433c4a:	jbe    0x433cad
  433c4c:	ins    BYTE PTR es:[rdi],dx
  433c4d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x61657274
  433c55:	ins    DWORD PTR es:[rdi],dx
  433c56:	and    BYTE PTR [rbx+0x70],dh
  433c59:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  433c5d:	imul   esp,DWORD PTR [rbp+0x72],0x7325203a
  433c64:	or     al,BYTE PTR cs:[rax]
  433c67:	add    BYTE PTR [rbx+0x6f],al
  433c6a:	jne    0x433cd8
  433c6c:	and    BYTE PTR fs:[rsi+0x6f],ch
  433c70:	je     0x433c92
  433c72:	(bad)  
  433c73:	ins    BYTE PTR es:[rdi],dx
  433c74:	ins    BYTE PTR es:[rdi],dx
  433c75:	outs   dx,DWORD PTR ds:[rsi]
  433c76:	movsxd esp,DWORD PTR [rax]
  433c78:	ins    DWORD PTR es:[rdi],dx
  433c79:	gs ins DWORD PTR es:[rdi],dx
  433c7b:	outs   dx,DWORD PTR ds:[rsi]
  433c7c:	jb     0x433cf7
  433c7e:	and    BYTE PTR [rsi+0x6f],ah
  433c81:	jb     0x433ca3
  433c83:	jae    0x433cf9
  433c85:	jb     0x433cec
  433c87:	(bad)  
  433c88:	ins    DWORD PTR es:[rdi],dx
  433c89:	and    BYTE PTR [rdi+0x70],ch
  433c8c:	je     0x433cf7
  433c8e:	outs   dx,DWORD PTR ds:[rsi]
  433c8f:	outs   dx,BYTE PTR ds:[rsi]
  433c90:	jae    0x433cc0
  433c92:	or     al,BYTE PTR [rax]
  433c94:	jb     0x433d05
  433c96:	je     0x433cf9
  433c98:	je     0x433cff
  433c9a:	add    BYTE PTR [rax],al
  433c9c:	add    BYTE PTR [rax],al
  433c9e:	add    BYTE PTR [rax],al
  433ca0:	rex.WRXB
  433ca1:	fs and BYTE PTR fs:[rdx+0x6f],dh
  433ca6:	je     0x433d09
  433ca8:	je     0x433d13
  433caa:	outs   dx,DWORD PTR ds:[rsi]
  433cab:	outs   dx,BYTE PTR ds:[rsi]
  433cac:	and    BYTE PTR [rcx+0x6e],ah
  433caf:	ins    BYTE PTR es:[edi],dx
  433cb1:	gs or  cl,BYTE PTR cs:[rcx+0x66]
  433cb6:	and    BYTE PTR [rcx+0x6f],bh
  433cb9:	jne    0x433cdb
  433cbb:	ja     0x433d1e
  433cbd:	outs   dx,BYTE PTR ds:[rsi]
  433cbe:	je     0x433ce0
  433cc0:	je     0x433d31
  433cc2:	and    BYTE PTR [rax+0x65],ch
  433cc5:	ins    BYTE PTR es:[rdi],dx
  433cc6:	jo     0x433cf4
  433cc8:	and    BYTE PTR [rbp+0x70],dh
  433ccb:	ins    BYTE PTR es:[rdi],dx
  433ccc:	outs   dx,DWORD PTR ds:[rsi]
  433ccd:	(bad)  
  433cce:	and    BYTE PTR fs:[rcx+0x20],ah
  433cd2:	jae    0x433d35
  433cd4:	ins    DWORD PTR es:[rdi],dx
  433cd5:	jo     0x433d43
  433cd7:	and    BYTE PTR gs:[rdi+0x66],ch
  433cdb:	and    BYTE PTR [rax+rbp*2+0x69],dh
  433cdf:	jae    0x433d01
  433ce1:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  433ce8:	and    BYTE PTR [rsi+0x74],ah
  433ceb:	jo     0x433d27
  433ced:	(bad)  
  433cee:	(bad)  
  433cef:	jne    0x433d61
  433cf1:	ins    BYTE PTR es:[rdi],dx
  433cf2:	outs   dx,DWORD PTR ds:[rsi]
  433cf3:	(bad)  
  433cf4:	fs cs data16 ins WORD PTR es:[rdi],dx
  433cf9:	jo     0x433d60
  433cfb:	outs   dx,DWORD PTR cs:[esi]
  433cfe:	jb     0x433d67
  433d00:	(bad)  
  433d01:	imul   ebp,DWORD PTR [rsi+0x63],0x6e696d6f
  433d08:	addr32 (bad) 
  433d0a:	and    BYTE PTR [rcx+0x6e],ah
  433d0d:	and    BYTE PTR fs:[rbx+0x6f],ah
  433d11:	outs   dx,BYTE PTR ds:[rsi]
  433d12:	je     0x433d75
  433d14:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  433d18:	push   0x66662065
  433d1d:	ins    DWORD PTR es:[rdi],dx
  433d1e:	jo     0x433d85
  433d20:	addr32 sub eax,0x65766564
  433d26:	ins    BYTE PTR es:[rdi],dx
  433d27:	and    BYTE PTR [rbp+0x61],ch
  433d2a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x696c2067
  433d32:	jae    0x433da8
  433d34:	and    BYTE PTR cs:[rax],ch
  433d37:	data16 ins WORD PTR es:[rdi],dx
  433d3a:	jo     0x433da1
  433d3c:	addr32 sub eax,0x65766564
  433d42:	ins    BYTE PTR es:[rdi],dx
  433d43:	rex
  433d44:	data16 ins WORD PTR es:[rdi],dx
  433d47:	jo     0x433dae
  433d49:	outs   dx,DWORD PTR cs:[esi]
  433d4c:	jb     0x433db5
  433d4e:	sub    DWORD PTR [rax],eax
  433d50:	or     al,BYTE PTR [rbp+riz*2+0x76]
  433d54:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
  433d5b:	and    BYTE PTR gs:[rcx+0x73],ch
  433d5f:	and    BYTE PTR [rsi+0x6f],ch
  433d62:	je     0x433d84
  433d64:	jo     0x433dd8
  433d66:	outs   dx,DWORD PTR ds:[rsi]
  433d67:	jbe    0x433dd2
  433d69:	fs gs fs or bl,BYTE PTR cs:[rcx+0x6f]
  433d70:	jne    0x433d92
  433d72:	movsxd esp,DWORD PTR [rcx+0x6e]
  433d75:	and    BYTE PTR [rax+0x61],dh
  433d78:	jae    0x433ded
  433d7a:	and    BYTE PTR [rbp+riz*2+0x76],ah
  433d7e:	imul   esp,DWORD PTR [rbx+0x65],0x656d616e
  433d85:	pop    rbx
  433d86:	sub    al,0x6f
  433d88:	jo     0x433dfe
  433d8a:	xor    DWORD PTR [rip+0x316c6176],edi        # 0x31af9f06
  433d90:	pop    rbx
  433d91:	sub    al,0x6f
  433d93:	jo     0x433e09
  433d95:	xor    bh,BYTE PTR [rip+0x326c6176]        # 0x32af9f11
  433d9b:	cs cs cs pop rbp
  433d9f:	pop    rbp
  433da0:	and    BYTE PTR [rcx+0x73],ah
  433da3:	and    BYTE PTR [rcx+0x6e],ah
  433da6:	and    BYTE PTR [rcx+0x72],ah
  433da9:	addr32 jne 0x433e19
  433dac:	outs   dx,BYTE PTR gs:[rsi]
  433dae:	je     0x433dde
  433db0:	or     cl,BYTE PTR [rdx]
  433db2:	add    BYTE PTR [rcx+riz*2+0x76],ch
  433db6:	imul   ax,WORD PTR [rax],0x4156
  433dbb:	rex.R push rbx
  433dbd:	push   rsp
  433dbe:	ins    BYTE PTR es:[edi],dx
  433dc0:	outs   dx,DWORD PTR ds:[rsi]
  433dc1:	(bad)
	...
  433dce:	add    BYTE PTR [rax],al
  433dd0:	mov    esi,0x433d
	...
  433ded:	add    al,ah
  433def:	rol    DWORD PTR [rax],0x0
  433df2:	sar    bh,0xff
  433df5:	(bad)  
  433df6:	fild   WORD PTR [rcx+0x0]
  433df9:	add    BYTE PTR [rax],al
  433dfb:	add    BYTE PTR [rax],al
  433dfd:	add    al,ah
  433dff:	ret    
  433e00:	add    BYTE PTR [rax],al
  433e02:	add    BYTE PTR [rax],al
  433e04:	add    BYTE PTR [rax],al
  433e06:	loopne 0x433e4b
  433e08:	add    BYTE PTR [rax],al
  433e0a:	add    BYTE PTR [rax],al
  433e0c:	add    BYTE PTR [rax],al
  433e0e:	lock jg 0x433e11
  433e11:	add    BYTE PTR [rax],al
  433e13:	add    BYTE PTR [rax],al
  433e15:	add    al,dh
  433e17:	inc    DWORD PTR [rax]
	...
  433e25:	add    BYTE PTR [rax],al
  433e27:	add    BYTE PTR [rax],0x0
	...
  433e32:	add    BYTE PTR [rax],al
  433e34:	add    BYTE PTR [rax+0x147b4076],al
  433e3a:	scas   al,BYTE PTR es:[rdi]
  433e3b:	rex.RXB loope 0x433eb8
  433e3e:	fs (bad) 
  433e40:	add    BYTE PTR [rax],al
  433e42:	add    BYTE PTR [rax],al
  433e44:	add    BYTE PTR [rax+0x4056],al
  433e4a:	add    BYTE PTR [rax],al
  433e4c:	add    BYTE PTR [rax],al
  433e4e:	add    BYTE PTR [rax],al
  433e50:	(bad)  
  433e51:	(bad)  
  433e52:	(bad)  
  433e53:	(bad)  
  433e54:	(bad)  
  433e55:	(bad)  
  433e56:	(bad)  
  433e57:	jg     0x433e59
	...
  433e65:	add    BYTE PTR [rax],al
  433e67:	add    BYTE PTR [rax],al
	...
  433e7e:	add    BYTE PTR [rax],al
  433e80:	rex.WRXB jo 0x433ef7
  433e83:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  433e8a:	(bad)  
  433e8b:	and    BYTE PTR [rdi+0x61],dh
  433e8e:	jae    0x433eb0
  433e90:	jb     0x433ef7
  433e92:	ins    DWORD PTR es:[rdi],dx
  433e93:	outs   dx,DWORD PTR ds:[rsi]
  433e94:	jbe    0x433efb
  433e96:	fs and BYTE PTR cs:[rcx+0x66],cl
  433e9b:	and    BYTE PTR [rcx+0x6f],bh
  433e9e:	jne    0x433ec0
  433ea0:	(bad)  
  433ea1:	jb     0x433f08
  433ea3:	and    BYTE PTR [rdi+rbp*2+0x6f],ch
  433ea7:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  433eab:	and    BYTE PTR [rsi+0x6f],ah
  433eae:	jb     0x433ed0
  433eb0:	(bad)  
  433eb1:	outs   dx,BYTE PTR ds:[rsi]
  433eb2:	and    BYTE PTR [rdi+0x70],ch
  433eb5:	je     0x433f20
  433eb7:	outs   dx,DWORD PTR ds:[rsi]
  433eb8:	outs   dx,BYTE PTR ds:[rsi]
  433eb9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  433ebd:	jo     0x433f31
  433ebf:	gs jae 0x433f27
  433ec2:	jb     0x433f3a
  433ec4:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  433ec9:	and    BYTE PTR [rcx+0x75],dh
  433ecc:	(bad)  
  433ecd:	ins    BYTE PTR es:[rdi],dx
  433ece:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x69687728
  433ed6:	movsxd ebp,DWORD PTR [rax+0x20]
  433ed9:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  433ee0:	ja     0x433f4a
  433ee2:	(bad)  
  433ee3:	je     0x433f05
  433ee5:	sub    eax,0x77207325
  433eea:	(bad)  
  433eeb:	jae    0x433f0d
  433eed:	outs   dx,WORD PTR ds:[rsi]
  433eef:	jb     0x433f1a
  433ef1:	sub    al,0x20
  433ef3:	jne    0x433f68
  433ef5:	and    BYTE PTR gs:[rip+0x61637371],ch        # 0x61a6b26d
  433efc:	ins    BYTE PTR es:[rdi],dx
  433efd:	and    BYTE PTR gs:[rax],dh
  433f00:	and    BYTE PTR [rdi+0x72],ch
  433f03:	and    BYTE PTR [rcx+0x6e],ah
  433f06:	and    BYTE PTR [rbp+0x71],ah
  433f09:	jne    0x433f74
  433f0b:	jbe    0x433f6e
  433f0d:	ins    BYTE PTR es:[rdi],dx
  433f0e:	outs   dx,BYTE PTR gs:[rsi]
  433f10:	je     0x433f32
  433f12:	jno    0x433f89
  433f14:	(bad)  
  433f15:	ins    BYTE PTR es:[rdi],dx
  433f16:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x74636166
  433f1e:	outs   dx,DWORD PTR ds:[rsi]
  433f1f:	jb     0x433f41
  433f21:	outs   dx,DWORD PTR ds:[rsi]
  433f22:	jo     0x433f98
  433f24:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e
  433f2b:	add    BYTE PTR [rax],al
  433f2d:	add    BYTE PTR [rax],al
  433f2f:	add    BYTE PTR [rax+0x61],cl
  433f32:	jb     0x433f98
  433f34:	ja     0x433f97
  433f36:	jb     0x433f9d
  433f38:	and    BYTE PTR [rcx+0x63],ah
  433f3b:	movsxd esp,DWORD PTR [rbp+0x6c]
  433f3e:	gs jb  0x433fa2
  433f41:	je     0x433fac
  433f43:	outs   dx,DWORD PTR ds:[rsi]
  433f44:	outs   dx,BYTE PTR ds:[rsi]
  433f45:	and    BYTE PTR [rbp+0x65],ch
  433f48:	je     0x433fb2
  433f4a:	outs   dx,DWORD PTR ds:[rsi]
  433f4b:	fs jae 0x433f88
  433f4e:	or     al,BYTE PTR [rax]
  433f50:	fs js  0x433fc9
  433f53:	(bad)  
  433f54:	xor    al,BYTE PTR [rax]
  433f56:	and    eax,0xa000a73
  433f5b:	add    BYTE PTR [rbx+0x6f],ah
  433f5e:	fs movsxd edi,DWORD PTR gs:[rdx]
  433f62:	(bad)  
  433f63:	add    BYTE PTR [rbx+0x6f],ah
  433f66:	fs movsxd edi,DWORD PTR gs:[rdx]
  433f6a:	jbe    0x433f6c
  433f6c:	movsxd ebp,DWORD PTR [rdi+0x64]
  433f6f:	movsxd edi,DWORD PTR gs:[rdx]
  433f72:	add    BYTE PTR fs:[rbx+0x6f],ah
  433f76:	fs movsxd edi,DWORD PTR gs:[rdx]
  433f7a:	jae    0x433f7c
  433f7c:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x3a72
  433f83:	(bad)  
  433f84:	add    BYTE PTR [rcx+0x3a],dh
  433f87:	(bad)  
  433f88:	add    BYTE PTR [rsi+0x72],ah
  433f8b:	(bad)  
  433f8c:	ins    DWORD PTR es:[rdi],dx
  433f8d:	gs jae 0x433fca
  433f90:	(bad)  
  433f91:	add    BYTE PTR [rsi+0x69],ah
  433f94:	ins    BYTE PTR es:[rdi],dx
  433f95:	je     0x433ffc
  433f97:	jb     0x433fd3
  433f99:	jbe    0x433f9b
  433f9b:	data16 jb 0x433fff
  433f9e:	ins    DWORD PTR es:[rdi],dx
  433f9f:	gs jae 0x433fdc
  433fa2:	jbe    0x433fa4
  433fa4:	data16 jb 0x434008
  433fa7:	ins    DWORD PTR es:[rdi],dx
  433fa8:	gs jae 0x433fe5
  433fab:	add    BYTE PTR fs:[rax+0x69],dh
  433faf:	jo     0x434016
  433fb1:	cmp    al,BYTE PTR [rax]
  433fb3:	sub    eax,0x0
  433fb8:	rex.RX (bad) 
  433fba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  433fc2:	outs   dx,DWORD PTR ds:[rsi]
  433fc3:	jo     0x43402a
  433fc5:	outs   dx,BYTE PTR ds:[rsi]
  433fc6:	and    BYTE PTR [rax+0x72],dh
  433fc9:	outs   dx,DWORD PTR ds:[rsi]
  433fca:	addr32 jb 0x434032
  433fcd:	jae    0x434042
  433fcf:	and    BYTE PTR [rbp+0x52],dl
  433fd2:	rex.WR and BYTE PTR [rdx],r12b
  433fd5:	and    eax,0x203a2273
  433fda:	and    eax,0xa73
  433fdf:	(bad)  
  433fe0:	cs (bad) 
  433fe2:	jbe    0x434047
  433fe4:	outs   dx,DWORD PTR ds:[rsi]
  433fe5:	outs   dx,BYTE PTR ds:[rsi]
  433fe6:	jbe    0x433fe8
  433fe8:	push   r14
  433fea:	rex.XB
  433feb:	rex.WRXB
  433fec:	rex.WRX push rsi
  433fee:	pop    rdi
  433fef:	rex.R
  433ff0:	push   r12
  433ff2:	rex.B
  433ff3:	rex.R
  433ff4:	rex.WB push r10
  433ff6:	add    BYTE PTR [rax+0x4f],cl
  433ff9:	rex.WRB
  433ffa:	add    BYTE PTR [r8],r8b
  433ffd:	add    BYTE PTR [rax],al
  433fff:	add    BYTE PTR [rdi],ch
  434001:	jae    0x434066
  434003:	jb     0x434066
  434005:	je     0x43406a
  434007:	push   0x65776a2f
  43400c:	(bad)  
  43400d:	ins    DWORD PTR es:[rdi],dx
  43400e:	js     0x434075
  434010:	sub    eax,0x6174636f
  434015:	jbe    0x43407c
  434017:	(bad)  
  434018:	xor    al,0x2e
  43401a:	xor    ch,BYTE PTR [rsi]
  43401c:	xor    DWORD PTR [rdi],ebp
  43401e:	ja     0x434056
  434020:	xor    al,0x2d
  434022:	xor    esi,DWORD PTR [rdx]
  434024:	(bad)  
  434025:	jne    0x43409a
  434027:	jb     0x434058
  434029:	js     0x434063
  43402b:	ss pop rdi
  43402d:	ss xor al,0x2d
  434030:	ja     0x434068
  434032:	xor    al,0x2d
  434034:	ins    DWORD PTR es:[rdi],dx
  434035:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  43403c:	jae    0x4340a6
  43403e:	(bad)  
  43403f:	jb     0x4340a6
  434041:	(bad)  
  434042:	data16 ins WORD PTR es:[rdi],dx
  434045:	jo     0x4340ac
  434047:	add    BYTE PTR [eip+0x2f732573],ah        # 0x2fb665c1
  43404e:	and    eax,0x76612e73
  434053:	jo     0x4340c7
  434055:	gs jae 0x4340bd
  434058:	je     0x43405a
  43405a:	and    eax,0x2f732573
  43405f:	and    eax,0x73252d73
  434064:	cs (bad) 
  434066:	jbe    0x4340d8
  434068:	jb     0x4340cf
  43406a:	jae    0x4340d1
  43406c:	je     0x43406e
  43406e:	and    eax,0x64253a64
  434073:	cs and eax,0x64250064
  434079:	cs and eax,0x64252e64
  43407f:	cmp    ah,BYTE PTR [rip+0x64252e64]        # 0x64686ee9
  434085:	add    BYTE PTR [rax],al
  434087:	add    BYTE PTR [rbx+0x79],dl
  43408a:	outs   dx,BYTE PTR ds:[rsi]
  43408b:	je     0x4340ee
  43408d:	js     0x4340af
  43408f:	gs jb  0x434104
  434092:	outs   dx,DWORD PTR ds:[rsi]
  434093:	jb     0x4340c1
  434095:	and    BYTE PTR [rbp+0x61],ch
  434098:	jo     0x4340fd
  43409a:	push   0x75206e61
  43409f:	jae    0x434102
  4340a1:	cmp    ah,BYTE PTR gs:[eax]
  4340a5:	pop    rbx
  4340a6:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x7473
  4340ad:	jb     0x434114
  4340af:	(bad)  
  4340b0:	ins    DWORD PTR es:[rdi],dx
  4340b1:	movsxd ebp,DWORD PTR cs:[rax+0x61]
  4340b5:	outs   dx,BYTE PTR ds:[rsi]
  4340b6:	outs   dx,BYTE PTR ds:[rsi]
  4340b7:	gs ins BYTE PTR es:[rdi],dx
  4340b9:	jl     0x4340e8
  4340bb:	xor    DWORD PTR [rbp+0x5b],ebx
  4340be:	cmp    dh,BYTE PTR [rbx+0x79]
  4340c1:	outs   dx,BYTE PTR ds:[rsi]
  4340c2:	movsxd esp,DWORD PTR [rsi+0x69]
  4340c5:	ins    BYTE PTR es:[rdi],dx
  4340c6:	cmp    dh,BYTE PTR gs:[rbx+0x79]
  4340ca:	outs   dx,BYTE PTR ds:[rsi]
  4340cb:	movsxd esi,DWORD PTR [rbx+0x74]
  4340ce:	jb     0x434135
  4340d0:	(bad)  
  4340d1:	ins    DWORD PTR es:[rdi],dx
  4340d2:	pop    rbp
  4340d3:	or     al,BYTE PTR [rax]
  4340d5:	add    BYTE PTR [rax],al
  4340d7:	add    BYTE PTR [rbp+0x61],ch
  4340da:	jo     0x43413f
  4340dc:	push   0x203a6e61
  4340e1:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4340e8:	and    BYTE PTR [rcx+0x6e],ch
  4340eb:	jo     0x434162
  4340ed:	je     0x43410f
  4340ef:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e69
  4340f6:	fs gs js 0x434134
  4340fa:	and    BYTE PTR [rip+0xa64],ah        # 0x434b64
  434100:	ins    DWORD PTR es:[rdi],dx
  434101:	(bad)  
  434102:	jo     0x434167
  434104:	push   0x203a6e61
  434109:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  434110:	and    BYTE PTR [rcx+0x6e],ch
  434113:	jo     0x43418a
  434115:	je     0x434137
  434117:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7473
  43411e:	jb     0x434185
  434120:	(bad)  
  434121:	ins    DWORD PTR es:[rdi],dx
  434122:	and    BYTE PTR [rcx+0x6e],ch
  434125:	fs gs js 0x434149
  434129:	and    esp,DWORD PTR [rip+0x64252e64]        # 0x64686f93
  43412f:	or     al,BYTE PTR [rax]
  434131:	add    BYTE PTR [rax],al
  434133:	add    BYTE PTR [rax],al
  434135:	add    BYTE PTR [rax],al
  434137:	add    BYTE PTR [rbp+0x61],ch
  43413a:	jo     0x43419f
  43413c:	push   0x203a6e61
  434141:	jae    0x4341b7
  434143:	jb     0x4341aa
  434145:	(bad)  
  434146:	ins    DWORD PTR es:[rdi],dx
  434147:	and    BYTE PTR [rbx],ah
  434149:	and    eax,0x64252e64
  43414e:	and    BYTE PTR [rcx+0x73],ch
  434151:	and    BYTE PTR [rsi+0x6f],ch
  434154:	je     0x434176
  434156:	(bad)  
  434157:	outs   dx,BYTE PTR ds:[rsi]
  434158:	and    BYTE PTR [rcx+0x75],ah
  43415b:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x65727473
  434163:	(bad)  
  434164:	ins    DWORD PTR es:[rdi],dx
  434165:	or     al,BYTE PTR cs:[rax]
  434168:	ins    DWORD PTR es:[rdi],dx
  434169:	(bad)  
  43416a:	jo     0x4341cf
  43416c:	push   0x203a6e61
  434171:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  434178:	and    BYTE PTR [rcx+0x75],ah
  43417b:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6e616863
  434183:	outs   dx,BYTE PTR ds:[rsi]
  434184:	gs ins BYTE PTR es:[rdi],dx
  434186:	and    BYTE PTR [rbx],ah
  434188:	and    eax,0x64252e64
  43418d:	cs and eax,0x45000a64
  434193:	jb     0x434207
  434195:	outs   dx,DWORD PTR ds:[rsi]
  434196:	jb     0x4341b8
  434198:	outs   dx,DWORD PTR ds:[rsi]
  434199:	jo     0x434200
  43419b:	outs   dx,BYTE PTR ds:[rsi]
  43419c:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  4341a3:	and    BYTE PTR gs:[rip+0xa2e73],ah        # 0x4d701d
  4341aa:	add    BYTE PTR [rax],al
  4341ac:	add    BYTE PTR [rax],al
  4341ae:	add    BYTE PTR [rax],al
  4341b0:	push   rsp
  4341b1:	push   0x6f207369
  4341b6:	jo     0x43422c
  4341b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  4341bf:	fs gs jo 0x434235
  4341c3:	movsxd esp,DWORD PTR gs:[rcx+0x74]
  4341c7:	gs fs sub al,0x20
  4341cb:	jne    0x434240
  4341cd:	and    BYTE PTR gs:[rip+0x6e617473],ch        # 0x6ea4b647
  4341d4:	fs (bad) 
  4341d6:	jb     0x43423c
  4341d8:	or     al,BYTE PTR cs:[rax]
  4341db:	jae    0x434251
  4341dd:	(bad)  
  4341de:	outs   dx,BYTE PTR ds:[rsi]
  4341df:	fs (bad) 
  4341e1:	jb     0x434247
  4341e3:	add    BYTE PTR [rax],al
  4341e5:	add    BYTE PTR [rax],al
  4341e7:	add    BYTE PTR [rax+rbp*2+0x69],dl
  4341eb:	jae    0x43420d
  4341ed:	outs   dx,DWORD PTR ds:[rsi]
  4341ee:	jo     0x434264
  4341f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  4341f7:	fs gs jo 0x43426d
  4341fb:	movsxd esp,DWORD PTR gs:[rcx+0x74]
  4341ff:	gs fs sub al,0x20
  434203:	jne    0x434278
  434205:	and    BYTE PTR gs:[rip+0x6e616863],ch        # 0x6ea4aa6f
  43420c:	outs   dx,BYTE PTR ds:[rsi]
  43420d:	gs ins BYTE PTR es:[rdi],dx
  43420f:	or     al,BYTE PTR cs:[rax]
  434212:	movsxd ebp,DWORD PTR [rax+0x61]
  434215:	outs   dx,BYTE PTR ds:[rsi]
  434216:	outs   dx,BYTE PTR ds:[rsi]
  434217:	gs ins BYTE PTR es:[rdi],dx
  434219:	add    BYTE PTR [rcx],dh
  43421b:	cmp    BYTE PTR [rax],al
  43421d:	xor    DWORD PTR [rip+0x30323700],esi        # 0x30757923
  434223:	js     0x43425a
  434225:	(bad)  
  434226:	add    BYTE PTR ss:[rdi],dh
  434229:	xor    dh,BYTE PTR [rax]
  43422b:	js     0x434261
  43422d:	cmp    BYTE PTR [rax],dh
  43422f:	add    BYTE PTR [rcx+0x75],bh
  434232:	jbe    0x434268
  434234:	xor    DWORD PTR [rcx],esi
  434236:	jo     0x434238
  434238:	jns    0x4342af
  43423a:	jbe    0x434270
  43423c:	xor    dh,BYTE PTR [rdx]
  43423e:	jo     0x434240
  434240:	jns    0x4342b7
  434242:	jbe    0x434278
  434244:	xor    dh,BYTE PTR [rax]
  434246:	jo     0x434248
  434248:	jo     0x4342ab
  43424a:	ins    BYTE PTR es:[rdi],dx
  43424b:	sub    eax,0x64637600
  434250:	add    BYTE PTR [rsi+0x74],ch
  434253:	jae    0x4342b8
  434255:	sub    eax,0x6c696600
  43425a:	ins    DWORD PTR es:[rdi],dx
  43425b:	sub    eax,0x31006700
  434260:	xor    DWORD PTR [rip+0x30303030],esi        # 0x30737296
  434266:	add    BYTE PTR [rdx+0x3a],ah
  434269:	jbe    0x43426b
  43426b:	ins    DWORD PTR es:[rdi],dx
  43426c:	(bad)  
  43426d:	js     0x4342e1
  43426f:	(bad)  
  434270:	je     0x4342d7
  434272:	cmp    dh,BYTE PTR [rsi+0x0]
  434275:	ins    DWORD PTR es:[rdi],dx
  434276:	imul   ebp,DWORD PTR [rsi+0x72],0x3a657461
  43427d:	jbe    0x43427f
  43427f:	xor    esi,DWORD PTR [rdx]
  434281:	(bad)  
  434282:	cmp    BYTE PTR ss:[rax],dh
  434285:	add    BYTE PTR [rdx+0x75],ah
  434288:	data16 jae 0x4342f4
  43428b:	jp     0x4342f2
  43428d:	cmp    dh,BYTE PTR [rsi+0x0]
  434290:	xor    dh,BYTE PTR [rdx]
  434292:	xor    al,0x30
  434294:	xor    BYTE PTR [rax],dh
  434296:	add    BYTE PTR [rdx+0x3a],ah
  434299:	(bad)  
  43429a:	add    BYTE PTR [rsp+rsi*1],dh
  43429d:	xor    DWORD PTR [rax],esi
  43429f:	xor    BYTE PTR [rax],al
  4342a1:	(bad)  
  4342a2:	jb     0x4342a4
  4342a4:	xor    al,BYTE PTR [rax]
  4342a6:	(bad)  
  4342a7:	movsxd eax,DWORD PTR [rax]
  4342a9:	xor    dh,BYTE PTR [rbx]
  4342ab:	xor    dh,BYTE PTR [rax+rax*1]
  4342ae:	jo     0x434311
  4342b0:	movsxd ebp,DWORD PTR [rbx+0x65]
  4342b3:	je     0x434328
  4342b5:	imul   edi,DWORD PTR [rdx+0x65],0x31343100
  4342bc:	xor    DWORD PTR [rdx],esi
  4342be:	xor    BYTE PTR [rax],dh
  4342c0:	add    BYTE PTR [rbp+0x75],ch
  4342c3:	js     0x434337
  4342c5:	(bad)  
  4342c6:	je     0x43432d
  4342c8:	add    BYTE PTR [rdx],dh
  4342ca:	xor    BYTE PTR [rax+rsi*1],dh
  4342cd:	xor    BYTE PTR [rax],dh
  4342cf:	xor    BYTE PTR [rax],al
  4342d1:	xor    dh,BYTE PTR [rip+0x30303631]        # 0x30737908
  4342d7:	xor    BYTE PTR [rax],al
  4342d9:	xor    BYTE PTR [rax],al
  4342db:	xor    DWORD PTR [rax],edi
  4342dd:	xor    esi,DWORD PTR [rip+0x383030]        # 0x7b7313
  4342e3:	xor    DWORD PTR [rax],eax
  4342e5:	jae    0x43434a
  4342e7:	(bad)  
  4342e8:	outs   dx,BYTE PTR ds:[rsi]
  4342e9:	pop    rdi
  4342ea:	outs   dx,DWORD PTR ds:[rsi]
  4342eb:	data16 data16 jae 0x434354
  4342ef:	je     0x4342f1
  4342f1:	fs jbe 0x434358
  4342f4:	add    BYTE PTR [rbp+0x70],ch
  4342f7:	xor    dh,BYTE PTR gs:[esi+0x69]
  4342fc:	fs outs dx,DWORD PTR gs:[rsi]
  4342ff:	add    BYTE PTR [rcx+0x63],ah
  434302:	xor    eax,DWORD PTR [rax]
  434304:	data16 add BYTE PTR [rsi],dh
  434307:	xor    BYTE PTR [rax],dh
  434309:	xor    BYTE PTR [rax],dh
  43430b:	xor    BYTE PTR [rax],dh
  43430d:	add    BYTE PTR [rcx],bh
  43430f:	xor    BYTE PTR [rax],dh
  434311:	xor    BYTE PTR [rax],dh
  434313:	xor    BYTE PTR [rax],dh
  434315:	add    BYTE PTR [rdx],dh
  434317:	xor    BYTE PTR [rax+rdi*1],dh
  43431a:	add    BYTE PTR [rcx],dh
  43431c:	xor    BYTE PTR [rax],dh
  43431e:	cmp    BYTE PTR [rax],dh
  434320:	xor    BYTE PTR [rax],dh
  434322:	xor    BYTE PTR [rax],al
  434324:	xor    al,0x34
  434326:	cmp    BYTE PTR [rax],dh
  434328:	xor    BYTE PTR [rax],dh
  43432a:	add    BYTE PTR [rax+rdi*1],dh
  43432d:	xor    BYTE PTR [rax],dh
  43432f:	xor    BYTE PTR [rax],al
  434331:	fs jbe 0x434334
  434334:	jae    0x434336
  434336:	fs jbe 0x43436e
  434339:	xor    BYTE PTR [rax],al
  43433b:	jo     0x4343a6
  43433d:	js     0x43439e
  43433f:	ins    WORD PTR es:[rdi],dx
  434341:	je     0x434343
  434343:	jb     0x434345
  434345:	push   rbp
  434346:	outs   dx,BYTE PTR ds:[rsi]
  434347:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43434b:	outs   dx,BYTE PTR ds:[rsi]
  43434c:	and    BYTE PTR [rcx+riz*2+0x72],dh
  434350:	addr32 gs je 0x43438e
  434354:	and    BYTE PTR [rip+0xa73],ah        # 0x434dcd
  43435a:	add    BYTE PTR [rax],al
  43435c:	add    BYTE PTR [rax],al
  43435e:	add    BYTE PTR [rax],al
  434360:	rex.XB outs dx,DWORD PTR ds:[rsi]
  434362:	jne    0x4343d0
  434364:	and    BYTE PTR fs:[rsi+0x6f],ch
  434368:	je     0x43438a
  43436a:	fs gs je 0x4343d3
  43436e:	jb     0x4343dd
  434370:	imul   ebp,DWORD PTR [rsi+0x65],0x726f6e20
  434377:	ins    DWORD PTR es:[rdi],dx
  434378:	and    BYTE PTR [rax],ch
  43437a:	push   rax
  43437b:	rex.B
  43437c:	rex.WR (bad) 
  43437e:	rex.WRX push rsp
  434380:	push   rbx
  434381:	rex.XB (bad) 
  434383:	rex.WRX push rsp
  434385:	push   rbx
  434386:	rex.XB sub eax,0x6d6c6946
  43438c:	sub    DWORD PTR [rax],esp
  43438e:	outs   dx,WORD PTR ds:[rsi]
  434390:	jb     0x4343b2
  434392:	je     0x4343f5
  434394:	jb     0x4343fd
  434396:	gs je  0x4343c7
  434399:	or     al,BYTE PTR [rax]
  43439b:	add    BYTE PTR [rax],al
  43439d:	add    BYTE PTR [rax],al
  43439f:	add    BYTE PTR [rax+0x6c],dl
  4343a2:	gs (bad) 
  4343a4:	jae    0x43440b
  4343a6:	and    BYTE PTR [rax+0x72],dh
  4343a9:	imul   di,WORD PTR gs:[rax+0x20],0x6174
  4343b0:	jb     0x434419
  4343b2:	gs je  0x4343d5
  4343b5:	ja     0x434420
  4343b7:	je     0x434421
  4343b9:	and    BYTE PTR [rdx],ah
  4343bb:	jo     0x43441e
  4343bd:	ins    BYTE PTR es:[rdi],dx
  4343be:	sub    eax,0x22202c22
  4343c3:	outs   dx,BYTE PTR ds:[rsi]
  4343c4:	je     0x434439
  4343c6:	movsxd ebp,DWORD PTR [rip+0x726f2022]        # 0x72b263ee
  4343cc:	and    BYTE PTR [rdx],ah
  4343ce:	imul   bp,WORD PTR [rbp+rbp*2+0x2d],0x2c22
  4343d5:	or     al,BYTE PTR [rax]
  4343d7:	add    BYTE PTR [rdi+0x72],ch
  4343da:	and    BYTE PTR [rbx+0x65],dh
  4343dd:	je     0x4343ff
  4343df:	(bad)  
  4343e0:	and    BYTE PTR [rsi+0x72],ah
  4343e3:	(bad)  
  4343e4:	ins    DWORD PTR es:[rdi],dx
  4343e5:	gs jb  0x434449
  4343e8:	je     0x43444f
  4343ea:	and    BYTE PTR [rdi+0x69],dh
  4343ed:	je     0x434457
  4343ef:	and    BYTE PTR [rdx],ah
  4343f1:	sub    eax,0x78782072
  4343f6:	js     0x43441a
  4343f8:	or     al,BYTE PTR cs:[rax]
  4343fb:	xor    esi,DWORD PTR [rip+0x38327832]        # 0x3875bc33
  434401:	cmp    BYTE PTR [rax],al
  434403:	xor    dh,BYTE PTR [rip+0x32353300]        # 0x32787709
  434409:	js     0x43443d
  43440b:	xor    al,0x30
  43440d:	add    BYTE PTR [rax+rdi*1],dh
  434410:	xor    BYTE PTR [rax+0x35],bh
  434413:	(bad)  
  434414:	add    BYTE PTR ss:[rbp+0x70],ch
  434418:	xor    DWORD PTR gs:[esi+0x69],esi
  43441d:	fs outs dx,DWORD PTR gs:[rsi]
  434420:	add    BYTE PTR [rbp+0x70],ch
  434423:	xor    al,BYTE PTR [rax]
  434425:	push   rax
  434426:	rex.B
  434427:	rex.WR add BYTE PTR [rcx+0x73],r8b
  43442b:	jae    0x4344a2
  43442d:	ins    DWORD PTR es:[rdi],dx
  43442e:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  434435:	outs   dx,WORD PTR ds:[rsi]
  434437:	jb     0x434459
  434439:	je     0x43449c
  43443b:	jb     0x4344a4
  43443d:	gs je  0x43446e
  434440:	or     al,BYTE PTR [rax]
  434442:	rex.WRX push rsp
  434444:	push   rbx
  434445:	rex.XB add BYTE PTR [r11+0x76],sil
  434449:	movsxd esp,DWORD PTR [rax+rax*1+0x34]
  43444d:	cmp    BYTE PTR [rax],dh
  43444f:	js     0x434485
  434451:	cmp    BYTE PTR [rax],dh
  434453:	add    BYTE PTR [rax],al
  434455:	add    BYTE PTR [rax],al
  434457:	add    BYTE PTR [rcx+0x6e],cl
  43445a:	jbe    0x4344bd
  43445c:	ins    BYTE PTR es:[rdi],dx
  43445d:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
  434465:	and    BYTE PTR [rdi],ah
  434467:	and    eax,0x66202773
  43446c:	outs   dx,DWORD PTR ds:[rsi]
  43446d:	jb     0x43448f
  43446f:	outs   dx,DWORD PTR ds:[rsi]
  434470:	jo     0x4344e6
  434472:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  434479:	(bad)  
  43447a:	sub    al,0x20
  43447c:	jb     0x4344e3
  43447e:	jno    0x4344f5
  434480:	imul   esi,DWORD PTR [rdx+0x65],0x79732064
  434487:	outs   dx,BYTE PTR ds:[rsi]
  434488:	je     0x4344eb
  43448a:	js     0x4344ac
  43448c:	imul   esi,DWORD PTR [rbx+0x20],0x646e6927
  434493:	gs js  0x4344d0
  434496:	jbe    0x4344f9
  434498:	ins    BYTE PTR es:[rdi],dx
  434499:	jne    0x434500
  43449b:	(bad)  
  43449c:	or     al,BYTE PTR [rax]
  43449e:	and    eax,0x63253a73
  4344a3:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  4344a7:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4344ab:	gs cmp eax,0x6d007325
  4344b1:	gs je  0x434515
  4344b4:	fs (bad) 
  4344b6:	je     0x434519
  4344b8:	cmp    ah,BYTE PTR [rdi+0x0]
  4344bb:	outs   dx,DWORD PTR ds:[esi]
  4344bd:	jo     0x43451e
  4344bf:	je     0x43452a
  4344c1:	ins    DWORD PTR es:[rdi],dx
  4344c2:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4344c6:	add    BYTE PTR gs:[rbx+0x72],ah
  4344ca:	gs (bad) 
  4344cc:	je     0x434537
  4344ce:	outs   dx,DWORD PTR ds:[rsi]
  4344cf:	outs   dx,BYTE PTR ds:[rsi]
  4344d0:	pop    rdi
  4344d1:	je     0x43453c
  4344d3:	ins    DWORD PTR es:[rdi],dx
  4344d4:	gs cmp eax,0x252d5925
  4344da:	ins    DWORD PTR es:[rdi],dx
  4344db:	sub    eax,0x25546425
  4344e0:	rex.W cmp spl,BYTE PTR [rip+0x53253a4d]        # 0x53687f34
  4344e7:	and    eax,0x656d007a
  4344ec:	je     0x43454f
  4344ee:	fs (bad) 
  4344f0:	je     0x434553
  4344f2:	add    BYTE PTR [rax],al
  4344f4:	add    BYTE PTR [rax],al
  4344f6:	add    BYTE PTR [rax],al
  4344f8:	and    eax,0x73692073
  4344fd:	and    BYTE PTR [rbp+riz*2+0x70],ah
  434501:	jb     0x434568
  434503:	movsxd esp,DWORD PTR [rcx+0x74]
  434506:	gs fs sub al,0x20
  43450a:	jae    0x434571
  43450c:	je     0x43452e
  43450e:	je     0x434578
  434510:	and    BYTE PTR gs:[rdi],ah
  434513:	movsxd esi,DWORD PTR [rdx+0x65]
  434516:	(bad)  
  434517:	je     0x434582
  434519:	outs   dx,DWORD PTR ds:[rsi]
  43451a:	outs   dx,BYTE PTR ds:[rsi]
  43451b:	pop    rdi
  43451c:	je     0x434587
  43451e:	ins    DWORD PTR es:[rdi],dx
  43451f:	gs (bad) 
  434521:	and    BYTE PTR [rbp+0x65],ch
  434524:	je     0x434587
  434526:	fs (bad) 
  434528:	je     0x43458b
  43452a:	and    BYTE PTR [rcx+riz*2+0x67],dh
  43452e:	and    BYTE PTR [rcx+0x6e],ch
  434531:	jae    0x4345a7
  434533:	gs (bad) 
  434535:	fs or  al,BYTE PTR cs:[rax]
  434539:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43453b:	jbe    0x43459e
  43453d:	ins    BYTE PTR es:[rdi],dx
  43453e:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x20636e79
  434546:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e69
  43454d:	fs gs js 0x43458b
  434551:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d73bb
  434557:	add    BYTE PTR [rbx+0x79],dl
  43455a:	outs   dx,BYTE PTR ds:[rsi]
  43455b:	movsxd esp,DWORD PTR [rax]
  43455d:	jae    0x4345d3
  43455f:	jb     0x4345c6
  434561:	(bad)  
  434562:	ins    DWORD PTR es:[rdi],dx
  434563:	and    BYTE PTR [rbx+0x70],dh
  434566:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43456a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  434571:	and    BYTE PTR [rcx+0x6e],ch
  434574:	and    BYTE PTR [rbp+0x61],ch
  434577:	jo     0x434599
  434579:	and    eax,0x6f642073
  43457e:	gs jae 0x4345a1
  434581:	outs   dx,BYTE PTR ds:[rsi]
  434582:	outs   dx,DWORD PTR ds:[rsi]
  434583:	je     0x4345a5
  434585:	ins    DWORD PTR es:[rdi],dx
  434586:	(bad)  
  434587:	je     0x4345ec
  434589:	push   0x796e6120
  43458e:	and    BYTE PTR [rbx+0x74],dh
  434591:	jb     0x4345f8
  434593:	(bad)  
  434594:	ins    DWORD PTR es:[rdi],dx
  434595:	jae    0x4345c5
  434597:	or     al,BYTE PTR [rax]
  434599:	pop    rbp
  43459a:	add    BYTE PTR [rax],al
  43459c:	add    BYTE PTR [rax],al
  43459e:	add    BYTE PTR [rax],al
  4345a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4345a2:	jbe    0x434605
  4345a4:	ins    BYTE PTR es:[rdi],dx
  4345a5:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x75707475
  4345ad:	je     0x4345cf
  4345af:	ins    BYTE PTR es:[rdi],dx
  4345b0:	imul   ebp,DWORD PTR [rsi+0x6b],0x62616c20
  4345b7:	gs ins BYTE PTR es:[rdi],dx
  4345b9:	cmp    ah,BYTE PTR [rax]
  4345bb:	and    eax,0xa2e73
  4345c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4345c2:	jbe    0x434625
  4345c4:	ins    BYTE PTR es:[rdi],dx
  4345c5:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7475706e
  4345cd:	and    BYTE PTR [rsi+0x69],ah
  4345d0:	ins    BYTE PTR es:[rdi],dx
  4345d1:	and    BYTE PTR gs:[rcx+0x6e],ch
  4345d5:	fs gs js 0x434613
  4345d9:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d7443
  4345df:	add    BYTE PTR [rbx+0x74],dl
  4345e2:	jb     0x434649
  4345e4:	(bad)  
  4345e5:	ins    DWORD PTR es:[rdi],dx
  4345e6:	and    BYTE PTR [rbp+0x61],ch
  4345e9:	jo     0x43460b
  4345eb:	(bad)  
  4345ec:	and    eax,0x6d202773
  4345f1:	(bad)  
  4345f2:	je     0x434657
  4345f4:	push   0x6e207365
  4345f9:	outs   dx,DWORD PTR ds:[rsi]
  4345fa:	and    BYTE PTR [rbx+0x74],dh
  4345fd:	jb     0x434664
  4345ff:	(bad)  
  434600:	ins    DWORD PTR es:[rdi],dx
  434601:	jae    0x43463e
  434603:	and    BYTE PTR [rcx+0x67],ch
  434606:	outs   dx,BYTE PTR ds:[rsi]
  434607:	outs   dx,DWORD PTR ds:[rsi]
  434608:	jb     0x434673
  43460a:	outs   dx,BYTE PTR ds:[rsi]
  43460b:	or     al,BYTE PTR cs:[eax]
  43460f:	add    BYTE PTR [rbx+0x74],dl
  434612:	jb     0x434679
  434614:	(bad)  
  434615:	ins    DWORD PTR es:[rdi],dx
  434616:	and    BYTE PTR [rbp+0x61],ch
  434619:	jo     0x43463b
  43461b:	(bad)  
  43461c:	and    eax,0x6d202773
  434621:	(bad)  
  434622:	je     0x434687
  434624:	push   0x6e207365
  434629:	outs   dx,DWORD PTR ds:[rsi]
  43462a:	and    BYTE PTR [rbx+0x74],dh
  43462d:	jb     0x434694
  43462f:	(bad)  
  434630:	ins    DWORD PTR es:[rdi],dx
  434631:	jae    0x434661
  434633:	or     dl,BYTE PTR [rdi+rbp*2+0x20]
  434637:	imul   esp,DWORD PTR [rdi+0x6e],0x2065726f
  43463e:	je     0x4346a8
  434640:	imul   esi,DWORD PTR [rbx+0x2c],0x64646120
  434647:	and    BYTE PTR [rcx+0x20],ah
  43464a:	je     0x4346be
  43464c:	(bad)  
  43464d:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x3f272067
  434655:	(bad)  
  434656:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43465a:	je     0x4346c4
  43465c:	and    BYTE PTR gs:[rbp+0x61],ch
  434660:	jo     0x434690
  434662:	or     al,BYTE PTR [rax]
  434664:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x61726772
  43466d:	jo     0x4346d7
  43466f:	add    BYTE PTR [rsi+0x69],al
  434672:	ins    BYTE PTR es:[rdi],dx
  434673:	je     0x4346da
  434675:	jb     0x4346de
  434677:	jb     0x4346da
  434679:	jo     0x4346e3
  43467b:	and    BYTE PTR [rbx+0x63],dh
  43467e:	jb     0x4346e9
  434680:	jo     0x4346f6
  434682:	add    BYTE PTR [rax],al
  434684:	add    BYTE PTR [rax],al
  434686:	add    BYTE PTR [rax],al
  434688:	and    eax,0x25272073
  43468d:	jae    0x4346b6
  43468f:	and    BYTE PTR [rdi+0x61],dh
  434692:	jae    0x4346b4
  434694:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  43469c:	outs   dx,WORD PTR ds:[rsi]
  43469e:	jb     0x4346c0
  4346a0:	and    eax,0x756f2073
  4346a5:	je     0x434717
  4346a7:	jne    0x43471d
  4346a9:	and    BYTE PTR [rbx+0x74],dh
  4346ac:	jb     0x434713
  4346ae:	(bad)  
  4346af:	ins    DWORD PTR es:[rdi],dx
  4346b0:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468811a
  4346b6:	and    BYTE PTR [rdx+0x75],ah
  4346b9:	je     0x4346db
  4346bb:	movsxd ebp,DWORD PTR [rdi+0x64]
  4346be:	movsxd esp,DWORD PTR gs:[rax]
  4346c1:	movsxd ebp,DWORD PTR [rdi+0x70]
  4346c4:	jns    0x4346e6
  4346c6:	ja     0x434729
  4346c8:	jae    0x4346ea
  4346ca:	jae    0x434731
  4346cc:	ins    BYTE PTR es:[rdi],dx
  4346cd:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4346d2:	or     al,BYTE PTR cs:[rsi+0x69]
  4346d6:	ins    BYTE PTR es:[rdi],dx
  4346d7:	je     0x43473e
  4346d9:	jb     0x434744
  4346db:	outs   dx,BYTE PTR ds:[rsi]
  4346dc:	and    BYTE PTR [ecx+0x6e],ah
  4346e0:	and    BYTE PTR fs:[rbx+0x74],dh
  4346e4:	jb     0x43474b
  4346e6:	(bad)  
  4346e7:	ins    DWORD PTR es:[rdi],dx
  4346e8:	movsxd ebp,DWORD PTR [rdi+0x70]
  4346eb:	jns    0x43470d
  4346ed:	movsxd esp,DWORD PTR [rcx+0x6e]
  4346f0:	outs   dx,BYTE PTR ds:[rsi]
  4346f1:	outs   dx,DWORD PTR ds:[rsi]
  4346f2:	je     0x434714
  4346f4:	(bad)  
  4346f5:	and    BYTE PTR gs:[rbp+0x73],dh
  4346f9:	gs and BYTE PTR fs:[rdi+rbp*2+0x67],dh
  4346ff:	gs je  0x43476a
  434702:	gs jb  0x434733
  434705:	or     al,BYTE PTR [rax]
  434707:	(bad)  
  434708:	(bad)  
  434709:	add    BYTE PTR [rdx+0x0],ah
  43470c:	add    BYTE PTR [rax],al
  43470e:	add    BYTE PTR [rax],al
  434710:	push   rax
  434711:	ins    BYTE PTR es:[rdi],dx
  434712:	gs (bad) 
  434714:	jae    0x43477b
  434716:	and    BYTE PTR [rbp+0x73],dh
  434719:	and    BYTE PTR gs:[rip+0x20613a62],ch        # 0x20a48182
  434720:	outs   dx,DWORD PTR ds:[rsi]
  434721:	jb     0x434743
  434723:	sub    eax,0x2c763a62
  434728:	and    BYTE PTR [rip+0x73692062],ch        # 0x73ac6790
  43472e:	and    BYTE PTR [rcx+0x6d],ah
  434731:	(bad)  
  434732:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
  434739:	add    BYTE PTR [rax+0x72],dh
  43473c:	outs   dx,DWORD PTR ds:[rsi]
  43473d:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  434744:	add    BYTE PTR [rax],al
  434746:	add    BYTE PTR [rax],al
  434748:	push   rax
  434749:	ins    BYTE PTR es:[rdi],dx
  43474a:	gs (bad) 
  43474c:	jae    0x4347b3
  43474e:	and    BYTE PTR [rbp+0x73],dh
  434751:	and    BYTE PTR gs:[rip+0x666f7270],ch        # 0x66b2b9c8
  434758:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x726f2061
  434760:	and    BYTE PTR [rip+0x666f7270],ch        # 0x66b2b9d6
  434766:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x2d202c76
  43476e:	jo     0x4347e2
  434770:	outs   dx,DWORD PTR ds:[rsi]
  434771:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7369
  434778:	and    BYTE PTR [rcx+0x6d],ah
  43477b:	(bad)  
  43477c:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
  434783:	add    BYTE PTR [rax+0x72],dh
  434786:	outs   dx,DWORD PTR ds:[rsi]
  434787:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x76
  43478e:	add    BYTE PTR [rax],al
  434790:	rex.R (bad) 
  434792:	je     0x4347f5
  434794:	and    BYTE PTR [rbx+0x74],dh
  434797:	jb     0x4347fe
  434799:	(bad)  
  43479a:	ins    DWORD PTR es:[rdi],dx
  43479b:	and    BYTE PTR [rbp+0x6e],ah
  43479e:	movsxd ebp,DWORD PTR [rdi+0x64]
  4347a1:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e20
  4347a8:	and    BYTE PTR [rbx+0x75],dh
  4347ab:	jo     0x43481d
  4347ad:	outs   dx,DWORD PTR ds:[rsi]
  4347ae:	jb     0x434824
  4347b0:	gs and BYTE PTR fs:[rcx+0x65],bh
  4347b5:	je     0x4347d7
  4347b7:	sub    BYTE PTR [rdi+0x6e],ch
  4347ba:	ins    BYTE PTR es:[rdi],dx
  4347bb:	jns    0x4347dd
  4347bd:	jae    0x434833
  4347bf:	jb     0x434826
  4347c1:	(bad)  
  4347c2:	ins    DWORD PTR es:[rdi],dx
  4347c3:	movsxd ebp,DWORD PTR [rdi+0x70]
  4347c6:	jns    0x4347f1
  4347c8:	or     al,BYTE PTR [rax]
  4347ca:	add    BYTE PTR [rax],al
  4347cc:	add    BYTE PTR [rax],al
  4347ce:	add    BYTE PTR [rax],al
  4347d0:	push   rbp
  4347d1:	outs   dx,BYTE PTR ds:[rsi]
  4347d2:	(bad)  
  4347d3:	(bad)  
  4347d4:	ins    BYTE PTR es:[rdi],dx
  4347d5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4347da:	addr32 gs je 0x4347fe
  4347de:	movsxd esi,DWORD PTR [rbp+0x72]
  4347e1:	jb     0x434848
  4347e3:	outs   dx,BYTE PTR ds:[rsi]
  4347e4:	je     0x434806
  4347e6:	je     0x434851
  4347e8:	ins    DWORD PTR es:[rdi],dx
  4347e9:	cmp    ah,BYTE PTR gs:[rax]
  4347ec:	and    eax,0x76000a73
  4347f1:	jae    0x434867
  4347f3:	(bad)  
  4347f4:	je     0x434869
  4347f6:	pop    rdi
  4347f7:	and    eax,0x25643230
  4347fc:	xor    BYTE PTR [rdx],dh
  4347fe:	fs and eax,0x2e643230
  434804:	ins    BYTE PTR es:[rdi],dx
  434805:	outs   dx,DWORD PTR ds:[rsi]
  434806:	add    BYTE PTR [ebp+0x72],al
  43480a:	jb     0x43487b
  43480c:	jb     0x43483a
  43480e:	and    BYTE PTR [rdx+0x6f],ah
  434811:	je     0x43487b
  434813:	and    BYTE PTR [rip+0x6e612079],ch        # 0x6ea46892
  434819:	and    BYTE PTR fs:[rip+0x7573206e],ch        # 0x75b6688e
  434820:	jo     0x434892
  434822:	ins    BYTE PTR es:[rdi],dx
  434823:	imul   esp,DWORD PTR [rbp+0x64],0x7845202e
  43482a:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
  434832:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x4600
  434839:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x27732527
  434841:	and    BYTE PTR [rcx+0x6c],ah
  434844:	jb     0x4348ab
  434846:	(bad)  
  434847:	fs jns 0x43486a
  43484a:	gs js  0x4348b6
  43484d:	jae    0x4348c3
  43484f:	jae    0x43487f
  434851:	and    BYTE PTR [rdi+0x76],cl
  434854:	gs jb  0x4348ce
  434857:	jb     0x4348c2
  434859:	je     0x4348c0
  43485b:	and    BYTE PTR [rdi],bh
  43485d:	and    BYTE PTR [rbx+0x79],bl
  434860:	(bad)  
  434861:	rex.WRX pop rbp
  434863:	and    BYTE PTR [rax],al
  434865:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  434867:	je     0x434889
  434869:	outs   dx,DWORD PTR ds:[rsi]
  43486a:	jbe    0x4348d1
  43486c:	jb     0x4348e5
  43486e:	jb     0x4348d9
  434870:	je     0x4348db
  434872:	outs   dx,BYTE PTR ds:[rsi]
  434873:	and    BYTE PTR [eip+0x69786520],ch        # 0x69bbad9a
  43487a:	je     0x4348e5
  43487c:	outs   dx,BYTE PTR ds:[rsi]
  43487d:	or     al,BYTE PTR [eax]
  434880:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x27732527
  434889:	and    BYTE PTR [rcx+0x6c],ah
  43488c:	jb     0x4348f3
  43488e:	(bad)  
  43488f:	fs jns 0x4348b2
  434892:	gs js  0x4348fe
  434895:	jae    0x43490b
  434897:	jae    0x4348c7
  434899:	and    BYTE PTR [rbp+0x78],al
  43489c:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
  4348a4:	ins    BYTE PTR es:[rdi],dx
  4348a5:	imul   esp,DWORD PTR [rdx+0x78],0x2d343632
  4348ac:	ins    BYTE PTR es:[rdi],dx
  4348ad:	outs   dx,DWORD PTR ds:[rsi]
  4348ae:	jae    0x434923
  4348b0:	ins    BYTE PTR es:[rdi],dx
  4348b1:	gs jae 0x434927
  4348b4:	add    BYTE PTR [rax],al
  4348b6:	add    BYTE PTR [rax],al
  4348b8:	push   rax
  4348b9:	ins    BYTE PTR es:[rdi],dx
  4348ba:	gs (bad) 
  4348bc:	jae    0x434923
  4348be:	and    BYTE PTR [rbp+0x73],dh
  4348c1:	and    BYTE PTR gs:[rip+0x73657270],ch        # 0x73a8bb38
  4348c8:	gs je  0x4348eb
  4348cb:	cmp    al,0x73
  4348cd:	jo     0x434934
  4348cf:	gs fs and BYTE PTR ds:[rip+0x30207071],ch        # 0x3063b949
  4348d8:	or     al,BYTE PTR [rax]
  4348da:	add    BYTE PTR [rax],al
  4348dc:	add    BYTE PTR [rax],al
  4348de:	add    BYTE PTR [rax],al
  4348e0:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x20726f66
  4348e9:	jo     0x43495d
  4348eb:	gs jae 0x434953
  4348ee:	je     0x434910
  4348f0:	(bad)  
  4348f1:	and    eax,0x6e202773
  4348f6:	outs   dx,DWORD PTR ds:[rsi]
  4348f7:	je     0x434919
  4348f9:	outs   dx,WORD PTR ds:[rsi]
  4348fb:	jne    0x43496b
  4348fd:	or     al,BYTE PTR fs:[rax]
  434900:	and    ecx,DWORD PTR [rdx]
  434902:	or     eax,0x25003d00
  434907:	jae    0x434943
  434909:	and    BYTE PTR [rcx+0x6e],cl
  43490c:	jbe    0x43496f
  43490e:	ins    BYTE PTR es:[rdi],dx
  43490f:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x61746e79
  434917:	js     0x434953
  434919:	and    BYTE PTR [rdi],ah
  43491b:	and    eax,0xa2773
  434920:	or     eax,0xa
  434925:	add    BYTE PTR [rax],al
  434927:	add    BYTE PTR [rsi+0x66],ah
  43492a:	jo     0x43499e
  43492c:	gs jae 0x434994
  43492f:	je     0x43498c
  434931:	and    eax,0x203a5d73
  434936:	jae    0x43499d
  434938:	je     0x43495a
  43493a:	(bad)  
  43493b:	and    eax,0x3d202773
  434940:	and    BYTE PTR [rdi],ah
  434942:	and    eax,0xa2773
  434947:	(bad)  
  434948:	movsxd ebp,DWORD PTR [rdi+0x64]
  43494b:	movsxd eax,DWORD PTR gs:[rax]
  43494e:	jbe    0x4349b3
  434950:	outs   dx,DWORD PTR ds:[rsi]
  434951:	fs movsxd eax,DWORD PTR gs:[rax]
  434955:	jae    0x4349ba
  434957:	outs   dx,DWORD PTR ds:[rsi]
  434958:	fs movsxd eax,DWORD PTR gs:[rax]
  43495c:	movsxd ebp,DWORD PTR fs:[rdi+0x64]
  434960:	movsxd eax,DWORD PTR gs:[rax]
  434963:	add    BYTE PTR [rax],al
  434965:	add    BYTE PTR [rax],al
  434967:	add    BYTE PTR [rip+0x49203a73],ah        # 0x496383e0
  43496d:	outs   dx,BYTE PTR ds:[rsi]
  43496e:	jbe    0x4349d1
  434970:	ins    BYTE PTR es:[rdi],dx
  434971:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  434979:	outs   dx,BYTE PTR ds:[rsi]
  43497a:	and    BYTE PTR [rdi+0x72],ch
  43497d:	and    BYTE PTR [rcx+0x72],ah
  434980:	addr32 jne 0x4349f0
  434983:	outs   dx,BYTE PTR gs:[rsi]
  434985:	je     0x4349c1
  434987:	and    BYTE PTR [rdi],ah
  434989:	and    eax,0x202c2773
  43498e:	jo     0x4349f1
  434990:	jb     0x434a05
  434992:	gs and BYTE PTR fs:[rcx+0x73],ah
  434997:	and    BYTE PTR [rdi],ah
  434999:	and    eax,0x3d202773
  43499e:	and    BYTE PTR [rdi],ah
  4349a0:	and    eax,0xa2773
  4349a5:	jno    0x434a1a
  4349a7:	movsxd esp,DWORD PTR [rcx+0x6c]
  4349aa:	add    BYTE PTR gs:[rax],al
  4349ad:	add    BYTE PTR [rax],al
  4349af:	add    BYTE PTR [rax+0x6c],dl
  4349b2:	gs (bad) 
  4349b4:	jae    0x434a1b
  4349b6:	and    BYTE PTR [rbp+0x73],dh
  4349b9:	and    BYTE PTR gs:[rip+0x20613a71],ch        # 0x20a48431
  4349c0:	outs   dx,DWORD PTR ds:[rsi]
  4349c1:	jb     0x4349e3
  4349c3:	sub    eax,0x2c763a71
  4349c8:	and    BYTE PTR [rip+0x61637371],ch        # 0x61a6bd3f
  4349ce:	ins    BYTE PTR es:[rdi],dx
  4349cf:	and    BYTE PTR gs:[rcx+0x73],ch
  4349d3:	and    BYTE PTR [rcx+0x6d],ah
  4349d6:	(bad)  
  4349d7:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
  4349de:	add    BYTE PTR [rcx+0x3a],dh
  4349e1:	jbe    0x4349e3
  4349e3:	jno    0x434a0a
  4349e5:	jae    0x4349e7
  4349e7:	movsxd esp,DWORD PTR [rsi+0x72]
  4349ea:	add    BYTE PTR [rsi+0x66],dh
  4349ed:	jb     0x4349ef
  4349ef:	jo     0x434a52
  4349f1:	jae    0x434a66
  4349f3:	je     0x434a5d
  4349f5:	jb     0x434a66
  4349f7:	jne    0x434a60
  4349f9:	push   0x6f726400
  4349fe:	jo     0x434a00
  434a00:	jbe    0x434a75
  434a02:	jns    0x434a72
  434a04:	movsxd eax,DWORD PTR [rax]
  434a06:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  434a0b:	gs jb  0x434a0e
  434a0e:	add    BYTE PTR [rax],al
  434a10:	rex.WRB (bad) 
  434a12:	je     0x434a77
  434a14:	push   0x25206465
  434a19:	jae    0x434a3b
  434a1b:	(bad)  
  434a1c:	and    eax,0x66202773
  434a21:	outs   dx,DWORD PTR ds:[rsi]
  434a22:	jb     0x434a44
  434a24:	movsxd ebp,DWORD PTR [rdi+0x64]
  434a27:	movsxd esp,DWORD PTR gs:[rax]
  434a2a:	(bad)  
  434a2b:	and    eax,0xa2e2773
  434a30:	add    BYTE PTR [rcx+0x6e],cl
  434a33:	jbe    0x434a96
  434a35:	ins    BYTE PTR es:[rdi],dx
  434a36:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x79742073
  434a3e:	jo     0x434aa5
  434a40:	and    BYTE PTR [rdi],ah
  434a42:	and    eax,0xa2773
  434a47:	push   rbp
  434a48:	outs   dx,BYTE PTR ds:[rsi]
  434a49:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  434a4d:	outs   dx,BYTE PTR ds:[rsi]
  434a4e:	and    BYTE PTR [rip+0x25272073],ah        # 0x256a6ac7
  434a54:	jae    0x434a7d
  434a56:	or     al,BYTE PTR [rax]
  434a58:	movsxd ebp,DWORD PTR [rdi+0x70]
  434a5b:	jns    0x434a5d
  434a5d:	outs   dx,BYTE PTR gs:[rsi]
  434a5f:	movsxd ebp,DWORD PTR [rdi+0x64]
  434a62:	gs jb  0x434a65
  434a65:	rex.XB outs dx,DWORD PTR ds:[rsi]
  434a67:	jne    0x434ad5
  434a69:	and    BYTE PTR fs:[rsi+0x6f],ch
  434a6d:	je     0x434a8f
  434a6f:	(bad)  
  434a70:	ins    BYTE PTR es:[rdi],dx
  434a71:	ins    BYTE PTR es:[rdi],dx
  434a72:	outs   dx,DWORD PTR ds:[rsi]
  434a73:	movsxd esp,DWORD PTR [rax]
  434a75:	jae    0x434aeb
  434a77:	jb     0x434ade
  434a79:	(bad)  
  434a7a:	ins    DWORD PTR es:[rdi],dx
  434a7b:	or     al,BYTE PTR cs:[rax]
  434a7e:	add    BYTE PTR [rax],al
  434a80:	rex.RB jb 0x434af5
  434a83:	outs   dx,DWORD PTR ds:[rsi]
  434a84:	jb     0x434aa6
  434a86:	(bad)  
  434a87:	ins    BYTE PTR es:[rdi],dx
  434a88:	ins    BYTE PTR es:[rdi],dx
  434a89:	outs   dx,DWORD PTR ds:[rsi]
  434a8a:	movsxd esp,DWORD PTR [rcx+0x74]
  434a8d:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  434a94:	and    BYTE PTR [rbp+0x6e],ah
  434a97:	movsxd ebp,DWORD PTR [rdi+0x64]
  434a9a:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  434aa1:	je     0x434b08
  434aa3:	js     0x434b19
  434aa5:	or     al,BYTE PTR cs:[rax]
  434aa8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  434aaa:	jne    0x434b18
  434aac:	and    BYTE PTR fs:[rsi+0x6f],ch
  434ab0:	je     0x434ad2
  434ab2:	(bad)  
  434ab3:	ins    BYTE PTR es:[rdi],dx
  434ab4:	ins    BYTE PTR es:[rdi],dx
  434ab5:	outs   dx,DWORD PTR ds:[rsi]
  434ab6:	movsxd esp,DWORD PTR [rax]
  434ab8:	(bad)  
  434ab9:	jne    0x434b21
  434abb:	data16 gs jb 0x434adf
  434abf:	outs   dx,WORD PTR ds:[rsi]
  434ac1:	jb     0x434ae3
  434ac3:	jb     0x434b2a
  434ac5:	(bad)  
  434ac6:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65727020
  434ace:	jae    0x434b35
  434ad0:	je     0x434b00
  434ad2:	or     al,BYTE PTR [rax]
  434ad4:	add    BYTE PTR [rax],al
  434ad6:	add    BYTE PTR [rax],al
  434ad8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  434ada:	jbe    0x434b3d
  434adc:	ins    BYTE PTR es:[rdi],dx
  434add:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x20656e69
  434ae5:	outs   dx,WORD PTR ds:[rsi]
  434ae7:	jne    0x434b57
  434ae9:	and    BYTE PTR fs:[rcx+0x6e],ch
  434aed:	and    BYTE PTR [rax+rbp*2+0x65],dh
  434af1:	and    BYTE PTR [rax+0x72],dh
  434af4:	gs jae 0x434b5c
  434af7:	je     0x434b19
  434af9:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0xa
  434b00:	rex.B jo 0x434b73
  434b03:	ins    BYTE PTR es:[rdi],dx
  434b04:	jns    0x434b6f
  434b06:	outs   dx,BYTE PTR ds:[rsi]
  434b07:	and    BYTE PTR [ebp+0x6e],dh
  434b0b:	jae    0x434b7d
  434b0d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  434b11:	imul   esp,DWORD PTR [rbx+0x20],0x6172662d
  434b18:	ins    DWORD PTR es:[rdi],dx
  434b19:	gs jae 0x434b3c
  434b1c:	je     0x434b8d
  434b1e:	and    BYTE PTR [rsi+0x6f],ch
  434b21:	outs   dx,BYTE PTR ds:[rsi]
  434b22:	and    BYTE PTR [rsi+0x69],dh
  434b25:	fs outs dx,DWORD PTR gs:[rsi]
  434b28:	and    BYTE PTR [rbx+0x74],dh
  434b2b:	jb     0x434b92
  434b2d:	(bad)  
  434b2e:	ins    DWORD PTR es:[rdi],dx
  434b2f:	jae    0x434b5d
  434b31:	and    BYTE PTR [rbp+0x61],ch
  434b34:	jns    0x434b98
  434b36:	and    BYTE PTR gs:[rcx+0x6f],bh
  434b3a:	jne    0x434b5c
  434b3c:	ins    DWORD PTR es:[rdi],dx
  434b3d:	gs (bad) 
  434b3f:	outs   dx,BYTE PTR ds:[rsi]
  434b40:	je     0x434b62
  434b42:	sub    eax,0x61726676
  434b47:	ins    DWORD PTR es:[rdi],dx
  434b48:	gs jae 0x434b6b
  434b4b:	(bad)  
  434b4c:	or     al,BYTE PTR [rax]
  434b4e:	push   rbp
  434b4f:	outs   dx,BYTE PTR ds:[rsi]
  434b50:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  434b54:	outs   dx,BYTE PTR ds:[rsi]
  434b55:	and    BYTE PTR [rdx+0x69],ah
  434b58:	je     0x434bcd
  434b5a:	je     0x434bce
  434b5c:	gs (bad) 
  434b5e:	ins    DWORD PTR es:[rdi],dx
  434b5f:	and    BYTE PTR [rsi+0x69],ah
  434b62:	ins    BYTE PTR es:[rdi],dx
  434b63:	je     0x434bca
  434b65:	jb     0x434b87
  434b67:	and    eax,0x32000a73
  434b6c:	xor    al,0x0
  434b6e:	outs   dx,DWORD PTR ds:[rsi]
  434b6f:	jne    0x434be5
  434b71:	jo     0x434be8
  434b73:	je     0x434bd4
  434b75:	jae    0x434bd8
  434b77:	ins    DWORD PTR es:[rdi],dx
  434b78:	jo     0x434be6
  434b7a:	gs pop rdi
  434b7c:	(bad)  
  434b7d:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x0
  434b85:	add    BYTE PTR [rax],al
  434b87:	add    BYTE PTR [rax+0x72],dl
  434b8a:	gs jae 0x434bf2
  434b8d:	je     0x434baf
  434b8f:	and    eax,0x70732073
  434b94:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  434b98:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  434b9f:	and    BYTE PTR [rbx+0x74],dh
  434ba2:	jb     0x434c09
  434ba4:	(bad)  
  434ba5:	ins    DWORD PTR es:[rdi],dx
  434ba6:	and    BYTE PTR [rip+0x64253a64],ah        # 0x64688610
  434bac:	sub    al,0x20
  434bae:	(bad)  
  434baf:	jne    0x434c25
  434bb1:	and    BYTE PTR [rbx+0x6f],ah
  434bb4:	jne    0x434c22
  434bb6:	and    BYTE PTR fs:[rsi+0x6f],ch
  434bba:	je     0x434bdc
  434bbc:	(bad)  
  434bbd:	and    BYTE PTR gs:[rdi+0x70],ch
  434bc1:	outs   dx,BYTE PTR gs:[rsi]
  434bc3:	gs fs or al,BYTE PTR cs:[rax]
  434bc8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  434bca:	jbe    0x434c2d
  434bcc:	ins    BYTE PTR es:[rdi],dx
  434bcd:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656d6172
  434bd5:	and    BYTE PTR [rbx+0x69],dh
  434bd8:	jp     0x434c3f
  434bda:	cmp    ah,BYTE PTR [rax]
  434bdc:	and    eax,0xa2e73
  434be1:	and    eax,0x64252c64
  434be6:	sub    al,0x25
  434be8:	add    BYTE PTR fs:[rbp+0x6e],dl
  434bec:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  434bf0:	outs   dx,BYTE PTR ds:[rsi]
  434bf1:	and    BYTE PTR [rbx+0x68],ah
  434bf4:	(bad)  
  434bf5:	outs   dx,BYTE PTR ds:[rsi]
  434bf6:	outs   dx,BYTE PTR ds:[rsi]
  434bf7:	gs ins BYTE PTR es:[rdi],dx
  434bf9:	and    BYTE PTR [rcx+riz*2+0x79],ch
  434bfd:	outs   dx,DWORD PTR ds:[rsi]
  434bfe:	jne    0x434c74
  434c00:	cmp    ah,BYTE PTR [rax]
  434c02:	and    eax,0x25000a73
  434c07:	ins    BYTE PTR es:[rdi],dx
  434c08:	ins    BYTE PTR es:[rdi],dx
  434c09:	jne    0x434c0b
  434c0b:	and    eax,0x756e0064
  434c10:	ins    BYTE PTR es:[rdi],dx
  434c11:	ins    BYTE PTR es:[rdi],dx
  434c12:	add    BYTE PTR [rcx+0x6e],ah
  434c15:	jne    0x434c83
  434c17:	ins    BYTE PTR es:[rdi],dx
  434c18:	add    BYTE PTR [rcx+0x6e],cl
  434c1b:	jbe    0x434c7e
  434c1d:	ins    BYTE PTR es:[rdi],dx
  434c1e:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6c706d61
  434c26:	and    BYTE PTR gs:[rsi+0x6f],ah
  434c2a:	jb     0x434c99
  434c2c:	(bad)  
  434c2d:	je     0x434c4f
  434c2f:	(bad)  
  434c30:	and    eax,0xa2773
  434c35:	add    BYTE PTR [rax],al
  434c37:	add    BYTE PTR [rdx+0x6f],al
  434c3a:	je     0x434ca4
  434c3c:	and    BYTE PTR [rip+0x746c6966],ch        # 0x74afb5a8
  434c42:	gs jb  0x434c65
  434c45:	(bad)  
  434c46:	outs   dx,BYTE PTR ds:[rsi]
  434c47:	and    BYTE PTR fs:[rip+0x746c6966],ch        # 0x74afb5b4
  434c4e:	gs jb  0x434cb0
  434c51:	jae    0x434cb6
  434c53:	jb     0x434cbe
  434c55:	jo     0x434ccb
  434c57:	and    BYTE PTR [rbx+0x65],dh
  434c5a:	je     0x434c7c
  434c5c:	outs   dx,WORD PTR ds:[rsi]
  434c5e:	jb     0x434c80
  434c60:	outs   dx,DWORD PTR ds:[rsi]
  434c61:	jne    0x434cd7
  434c63:	jo     0x434cda
  434c65:	je     0x434c87
  434c67:	jae    0x434cdd
  434c69:	jb     0x434cd0
  434c6b:	(bad)  
  434c6c:	ins    DWORD PTR es:[rdi],dx
  434c6d:	and    BYTE PTR [rbx],ah
  434c6f:	and    eax,0x64253a64
  434c74:	or     al,BYTE PTR cs:[rax]
  434c77:	add    BYTE PTR [rbx+0x61],al
  434c7a:	outs   dx,BYTE PTR ds:[rsi]
  434c7b:	outs   dx,BYTE PTR ds:[rsi]
  434c7c:	outs   dx,DWORD PTR ds:[rsi]
  434c7d:	je     0x434c9f
  434c7f:	fs gs je 0x434ce8
  434c83:	jb     0x434cf2
  434c85:	imul   ebp,DWORD PTR [rsi+0x65],0x706e6920
  434c8c:	jne    0x434d02
  434c8e:	and    BYTE PTR [rbx+0x74],dh
  434c91:	jb     0x434cf8
  434c93:	(bad)  
  434c94:	ins    DWORD PTR es:[rdi],dx
  434c95:	and    BYTE PTR [rsi+0x6f],ah
  434c98:	jb     0x434cba
  434c9a:	movsxd ebp,DWORD PTR [rax+0x61]
  434c9d:	outs   dx,BYTE PTR ds:[rsi]
  434c9e:	outs   dx,BYTE PTR ds:[rsi]
  434c9f:	gs ins BYTE PTR es:[rdi],dx
  434ca1:	and    BYTE PTR [rbp+0x61],ch
  434ca4:	jo     0x434d16
  434ca6:	imul   ebp,DWORD PTR [rsi+0x67],0x2e642520
  434cad:	and    eax,0x55000a64
  434cb2:	outs   dx,BYTE PTR ds:[rsi]
  434cb3:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  434cb7:	outs   dx,BYTE PTR ds:[rsi]
  434cb8:	and    BYTE PTR [rcx+0x6e],ch
  434cbb:	jo     0x434d32
  434cbd:	je     0x434cdf
  434cbf:	outs   dx,WORD PTR ds:[rsi]
  434cc1:	jb     0x434d30
  434cc3:	(bad)  
  434cc4:	je     0x434d00
  434cc6:	and    BYTE PTR [rdi],ah
  434cc8:	and    eax,0xa2773
  434ccd:	(bad)  
  434cce:	fs gs jbe 0x434d01
  434cd2:	jae    0x434d48
  434cd4:	imul   ebp,DWORD PTR fs:[rsi+0x0],0x706d6173
  434cdc:	ins    BYTE PTR es:[rdi],dx
  434cdd:	gs pop rdi
  434cdf:	jb     0x434d42
  434ce1:	je     0x434d48
  434ce3:	add    BYTE PTR [rbx+0x68],ah
  434ce6:	(bad)  
  434ce7:	outs   dx,BYTE PTR ds:[rsi]
  434ce8:	outs   dx,BYTE PTR ds:[rsi]
  434ce9:	gs ins BYTE PTR es:[rdi],dx
  434ceb:	jae    0x434ced
  434ced:	data16 jb 0x434d51
  434cf0:	ins    DWORD PTR es:[rdi],dx
  434cf1:	gs jb  0x434d55
  434cf4:	je     0x434d5b
  434cf6:	add    BYTE PTR [rsi+0x69],dh
  434cf9:	fs outs dx,DWORD PTR gs:[rsi]
  434cfc:	pop    rdi
  434cfd:	jae    0x434d68
  434cff:	jp     0x434d66
  434d01:	add    BYTE PTR [rax+0x69],dh
  434d04:	js     0x434d6b
  434d06:	ins    BYTE PTR es:[rdi],dx
  434d07:	pop    rdi
  434d08:	outs   dx,WORD PTR ds:[rsi]
  434d0a:	jb     0x434d79
  434d0c:	(bad)  
  434d0d:	je     0x434d0f
  434d0f:	jbe    0x434d11
  434d11:	(bad)  
  434d12:	add    BYTE PTR [rax+rax*1+0x73],ah
  434d16:	movsxd esp,DWORD PTR [rcx+0x6e]
  434d19:	pop    rdi
  434d1a:	(bad)  
  434d1b:	ins    BYTE PTR es:[rdi],dx
  434d1c:	ins    BYTE PTR es:[rdi],dx
  434d1d:	pop    rdi
  434d1e:	jo     0x434d8d
  434d20:	je     0x434d95
  434d22:	add    BYTE PTR [rax],al
  434d24:	add    BYTE PTR [rax],al
  434d26:	add    BYTE PTR [rax],al
  434d28:	and    eax,0x63203a73
  434d2d:	outs   dx,DWORD PTR ds:[rsi]
  434d2e:	jne    0x434d9c
  434d30:	and    BYTE PTR fs:[rsi+0x6f],ch
  434d34:	je     0x434d56
  434d36:	imul   bp,WORD PTR [rsi+0x64],0x6320
  434d3c:	outs   dx,DWORD PTR ds:[rsi]
  434d3d:	fs movsxd esp,DWORD PTR gs:[rax]
  434d41:	jo     0x434da4
  434d43:	jb     0x434da6
  434d45:	ins    DWORD PTR es:[rdi],dx
  434d46:	gs je  0x434dae
  434d49:	jb     0x434dbe
  434d4b:	or     al,BYTE PTR [rax]
  434d4d:	add    BYTE PTR [rax],al
  434d4f:	add    BYTE PTR [rbx+0x61],al
  434d52:	outs   dx,BYTE PTR ds:[rsi]
  434d53:	outs   dx,BYTE PTR ds:[rsi]
  434d54:	outs   dx,DWORD PTR ds:[rsi]
  434d55:	je     0x434d77
  434d57:	jne    0x434dcc
  434d59:	and    BYTE PTR gs:[rip+0x6f657373],ch        # 0x6fa8c0d3
  434d60:	data16 sub al,0x20
  434d63:	fs jne 0x434dd8
  434d66:	(bad)  
  434d67:	je     0x434dd2
  434d69:	outs   dx,DWORD PTR ds:[rsi]
  434d6a:	outs   dx,BYTE PTR ds:[rsi]
  434d6b:	and    BYTE PTR [rdi+0x66],ch
  434d6e:	and    BYTE PTR [rip+0x6f6e2073],ah        # 0x6fb16de7
  434d74:	je     0x434d96
  434d76:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  434d7a:	outs   dx,BYTE PTR ds:[rsi]
  434d7b:	or     al,BYTE PTR [rax]
  434d7d:	add    BYTE PTR [rax],al
  434d7f:	add    BYTE PTR [rip+0x63203a73],ah        # 0x636387f8
  434d85:	outs   dx,DWORD PTR ds:[rsi]
  434d86:	jne    0x434df4
  434d88:	and    BYTE PTR fs:[rsi+0x6f],ch
  434d8c:	je     0x434dae
  434d8e:	jae    0x434df5
  434d90:	imul   esp,DWORD PTR gs:[rax],0x74
  434d94:	outs   dx,DWORD PTR ds:[rsi]
  434d95:	and    BYTE PTR [rax+0x6f],dh
  434d98:	jae    0x434e03
  434d9a:	je     0x434e05
  434d9c:	outs   dx,DWORD PTR ds:[rsi]
  434d9d:	outs   dx,BYTE PTR ds:[rsi]
  434d9e:	and    BYTE PTR [rip+0x66332e30],ah        # 0x66767bd4
  434da4:	or     al,BYTE PTR [rax]
  434da6:	jae    0x434e13
  434da8:	imul   esi,DWORD PTR [rax+0x5f],0x6d617266
  434daf:	add    BYTE PTR gs:[rbp+0x72],al
  434db3:	jb     0x434e24
  434db5:	jb     0x434dd7
  434db7:	jo     0x434e1a
  434db9:	jb     0x434e2e
  434dbb:	imul   ebp,DWORD PTR [rsi+0x67],0x73696420
  434dc2:	movsxd esp,DWORD PTR [rcx+0x72]
  434dc5:	and    BYTE PTR fs:[rip+0xa2e73],ah        # 0x4d7c3f
  434dcc:	add    BYTE PTR [rax],al
  434dce:	add    BYTE PTR [rax],al
  434dd0:	rex.RB jb 0x434e45
  434dd3:	outs   dx,DWORD PTR ds:[rsi]
  434dd4:	jb     0x434df6
  434dd6:	(bad)  
  434dd7:	ins    BYTE PTR es:[rdi],dx
  434dd8:	ins    BYTE PTR es:[rdi],dx
  434dd9:	outs   dx,DWORD PTR ds:[rsi]
  434dda:	movsxd esp,DWORD PTR [rcx+0x74]
  434ddd:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  434de4:	and    BYTE PTR [rbp+riz*2+0x63],ah
  434de8:	outs   dx,DWORD PTR ds:[rsi]
  434de9:	fs gs jb 0x434e0d
  434ded:	movsxd ebp,DWORD PTR [rdi+0x6e]
  434df0:	je     0x434e57
  434df2:	js     0x434e68
  434df4:	or     al,BYTE PTR cs:[rax]
  434df7:	add    BYTE PTR [rbp+0x72],al
  434dfa:	jb     0x434e6b
  434dfc:	jb     0x434e1e
  434dfe:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  434e05:	imul   edi,DWORD PTR [rdx+0x69],0x7420676e
  434e0c:	push   0x65642065
  434e11:	movsxd ebp,DWORD PTR [rdi+0x64]
  434e14:	gs jb  0x434e37
  434e17:	movsxd ebp,DWORD PTR [rdi+0x6e]
  434e1a:	je     0x434e81
  434e1c:	js     0x434e92
  434e1e:	or     al,BYTE PTR cs:[rax]
  434e21:	rex.RB jb 0x434e96
  434e24:	outs   dx,DWORD PTR ds:[rsi]
  434e25:	jb     0x434e47
  434e27:	jo     0x434e8a
  434e29:	jb     0x434e9e
  434e2b:	imul   ebp,DWORD PTR [rsi+0x67],0x61726620
  434e32:	ins    DWORD PTR es:[rdi],dx
  434e33:	gs jb  0x434e97
  434e36:	je     0x434e9d
  434e38:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d7cb1
  434e3e:	outs   dx,BYTE PTR ds:[rsi]
  434e3f:	outs   dx,DWORD PTR ds:[rsi]
  434e40:	outs   dx,BYTE PTR ds:[rsi]
  434e41:	add    BYTE PTR gs:[rcx+0x75],ah
  434e45:	je     0x434eb6
  434e47:	add    BYTE PTR [rbp+0x6e],dl
  434e4a:	jb     0x434eb1
  434e4c:	movsxd ebp,DWORD PTR [rdi+0x67]
  434e4f:	outs   dx,BYTE PTR ds:[rsi]
  434e50:	imul   edi,DWORD PTR [rdx+0x65],0x77682064
  434e57:	(bad)  
  434e58:	movsxd esp,DWORD PTR [rbx+0x65]
  434e5b:	ins    BYTE PTR es:[rdi],dx
  434e5c:	cmp    ah,BYTE PTR [rax]
  434e5e:	and    eax,0xa2e73
  434e63:	push   rbx
  434e64:	jne    0x434ed6
  434e66:	jo     0x434ed7
  434e68:	jb     0x434ede
  434e6a:	gs and BYTE PTR fs:[rax+0x77],ch
  434e6f:	(bad)  
  434e70:	movsxd esp,DWORD PTR [rbx+0x65]
  434e73:	ins    BYTE PTR es:[rdi],dx
  434e74:	jae    0x434eb0
  434e76:	and    BYTE PTR [rax],al
  434e78:	and    eax,0x49002073
  434e7d:	outs   dx,BYTE PTR ds:[rsi]
  434e7e:	jbe    0x434ee1
  434e80:	ins    BYTE PTR es:[rdi],dx
  434e81:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61766e61
  434e89:	jae    0x434eab
  434e8b:	jae    0x434ef6
  434e8d:	jp     0x434ef4
  434e8f:	cmp    ah,BYTE PTR [rax]
  434e91:	and    eax,0xa2e73
  434e96:	add    BYTE PTR [rax],al
  434e98:	rex.XB outs dx,DWORD PTR ds:[rsi]
  434e9a:	fs movsxd esp,DWORD PTR gs:[rax]
  434e9e:	push   r14
  434ea0:	rex.WRXB jo 0x434f17
  434ea3:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  434eaa:	sub    BYTE PTR [rip+0x73202973],ah        # 0x73637823
  434eb0:	jo     0x434f17
  434eb2:	movsxd ebp,DWORD PTR [rcx+0x66]
  434eb5:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  434ebc:	and    BYTE PTR [rcx+0x6e],ch
  434ebf:	jo     0x434f36
  434ec1:	je     0x434ee3
  434ec3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2523
  434eca:	and    BYTE PTR fs:[rax],ch
  434ecd:	and    eax,0x69202973
  434ed2:	jae    0x434ef4
  434ed4:	outs   dx,BYTE PTR ds:[rsi]
  434ed5:	outs   dx,DWORD PTR ds:[rsi]
  434ed6:	je     0x434ef8
  434ed8:	(bad)  
  434ed9:	and    BYTE PTR [rbp+riz*2+0x63],ah
  434edd:	outs   dx,DWORD PTR ds:[rsi]
  434ede:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74706f20
  434ee6:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e
  434eed:	add    BYTE PTR [rax],al
  434eef:	add    BYTE PTR [rbx+0x6f],al
  434ef2:	fs movsxd esp,DWORD PTR gs:[rax]
  434ef6:	push   r14
  434ef8:	rex.WRXB jo 0x434f6f
  434efb:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  434f02:	sub    BYTE PTR [rip+0x73202973],ah        # 0x7363787b
  434f08:	jo     0x434f6f
  434f0a:	movsxd ebp,DWORD PTR [rcx+0x66]
  434f0d:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  434f14:	and    BYTE PTR [rcx+0x6e],ch
  434f17:	jo     0x434f8e
  434f19:	je     0x434f3b
  434f1b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2523
  434f22:	and    BYTE PTR fs:[rax],ch
  434f25:	and    eax,0x68202973
  434f2a:	(bad)  
  434f2b:	jae    0x434f4d
  434f2d:	outs   dx,BYTE PTR ds:[rsi]
  434f2e:	outs   dx,DWORD PTR ds:[rsi]
  434f2f:	je     0x434f51
  434f31:	(bad)  
  434f32:	gs outs dx,BYTE PTR gs:[rsi]
  434f35:	and    BYTE PTR [rbp+0x73],dh
  434f38:	gs and BYTE PTR fs:[rsi+0x6f],ah
  434f3d:	jb     0x434f5f
  434f3f:	(bad)  
  434f40:	outs   dx,BYTE PTR ds:[rsi]
  434f41:	jns    0x434f63
  434f43:	jae    0x434fb9
  434f45:	jb     0x434fac
  434f47:	(bad)  
  434f48:	ins    DWORD PTR es:[rdi],dx
  434f49:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
  434f4e:	and    BYTE PTR [rbp+0x6f],ch
  434f51:	jae    0x434fc7
  434f53:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
  434f57:	gs ins BYTE PTR es:[rdi],dx
  434f59:	jns    0x434f7b
  434f5b:	jb     0x434fc2
  434f5d:	(bad)  
  434f5e:	jae    0x434fcf
  434f60:	outs   dx,BYTE PTR ds:[rsi]
  434f61:	and    BYTE PTR [rcx+0x73],ch
  434f64:	and    BYTE PTR [rbp+0x69],ah
  434f67:	je     0x434fd1
  434f69:	gs jb  0x434f8c
  434f6c:	ja     0x434fe0
  434f6e:	outs   dx,DWORD PTR ds:[rsi]
  434f6f:	outs   dx,BYTE PTR ds:[rsi]
  434f70:	and    BYTE PTR [ecx+edi*2+0x70],dh
  434f75:	and    BYTE PTR gs:[rax],ch
  434f78:	gs cs and BYTE PTR cs:[ecx+0x20],ah
  434f7f:	jbe    0x434fea
  434f81:	fs outs dx,DWORD PTR gs:[rsi]
  434f84:	and    BYTE PTR [rdi+0x70],ch
  434f87:	je     0x434ff2
  434f89:	outs   dx,DWORD PTR ds:[rsi]
  434f8a:	outs   dx,BYTE PTR ds:[rsi]
  434f8b:	and    BYTE PTR [rdi+0x69],dh
  434f8e:	je     0x434ff8
  434f90:	and    BYTE PTR [rsi+0x6f],ch
  434f93:	and    BYTE PTR [rsi+0x69],dh
  434f96:	fs outs dx,DWORD PTR gs:[rsi]
  434f99:	and    BYTE PTR [rbx+0x74],dh
  434f9c:	jb     0x435003
  434f9e:	(bad)  
  434f9f:	ins    DWORD PTR es:[rdi],dx
  434fa0:	jae    0x434fcb
  434fa2:	and    BYTE PTR [rdi+0x72],ch
  434fa5:	and    BYTE PTR [rax+rbp*2+0x61],dh
  434fa9:	je     0x434fcb
  434fab:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x20612073
  434fb3:	jo     0x435027
  434fb5:	imul   esi,DWORD PTR [rsi+0x61],0x6f206574
  434fbc:	jo     0x435032
  434fbe:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  434fc5:	jae    0x435036
  434fc7:	ins    DWORD PTR es:[rdi],dx
  434fc8:	and    BYTE PTR gs:[rbp+riz*2+0x63],ah
  434fcd:	outs   dx,DWORD PTR ds:[rsi]
  434fce:	fs gs jb 0x434ff2
  434fd2:	ja     0x43503c
  434fd4:	imul   esp,DWORD PTR [rbx+0x68],0x73617720
  434fdb:	and    BYTE PTR [rsi+0x6f],ch
  434fde:	je     0x435000
  434fe0:	(bad)  
  434fe1:	movsxd esi,DWORD PTR [rbp+rsi*2+0x61]
  434fe5:	ins    BYTE PTR es:[rdi],dx
  434fe6:	ins    BYTE PTR es:[rdi],dx
  434fe7:	jns    0x435009
  434fe9:	jne    0x43505e
  434feb:	gs and BYTE PTR fs:[rsi+0x6f],ah
  434ff0:	jb     0x435012
  434ff2:	(bad)  
  434ff3:	outs   dx,BYTE PTR ds:[rsi]
  434ff4:	jns    0x435016
  434ff6:	jae    0x43506c
  434ff8:	jb     0x43505f
  434ffa:	(bad)  
  434ffb:	ins    DWORD PTR es:[rdi],dx
  434ffc:	or     al,BYTE PTR cs:[rax]
  434fff:	add    BYTE PTR [rsi+0x6f],cl
  435002:	and    BYTE PTR [rbp+0x78],ah
  435005:	je     0x435079
  435007:	(bad)  
  435008:	fs (bad) 
  43500a:	je     0x43506d
  43500c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  435010:	fs jne 0x435080
  435013:	jo     0x435035
  435015:	imul   ebp,DWORD PTR [rsi+0x20],0x65727473
  43501c:	(bad)  
  43501d:	ins    DWORD PTR es:[rdi],dx
  43501e:	and    BYTE PTR [rbx],ah
  435020:	and    eax,0x64253a64
  435025:	or     al,BYTE PTR cs:[rax]
  435028:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  43502f:	add    BYTE PTR gs:[rax],al
  435032:	add    BYTE PTR [rax],al
  435034:	add    BYTE PTR [rax],al
  435036:	add    BYTE PTR [rax],al
  435038:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43503a:	and    BYTE PTR [rsi+0x69],ah
  43503d:	ins    BYTE PTR es:[rdi],dx
  43503e:	outs   dx,BYTE PTR gs:[rsi]
  435040:	(bad)  
  435041:	ins    DWORD PTR es:[rdi],dx
  435042:	and    BYTE PTR gs:[rbx+0x70],dh
  435046:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43504a:	imul   esp,DWORD PTR [rbp+0x64],0x646e6120
  435051:	and    BYTE PTR [rsi+0x6f],ch
  435054:	and    BYTE PTR [rdi],ah
  435056:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  43505d:	gs (bad) 
  43505f:	and    BYTE PTR [rcx+riz*2+0x67],dh
  435063:	imul   ebp,DWORD PTR [rsi+0x20],0x65727473
  43506a:	(bad)  
  43506b:	ins    DWORD PTR es:[rdi],dx
  43506c:	and    BYTE PTR [rbx],ah
  43506e:	and    eax,0x64253a64
  435073:	or     al,BYTE PTR cs:[rax]
  435076:	add    BYTE PTR [rax],al
  435078:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43507a:	jne    0x4350e8
  43507c:	and    BYTE PTR fs:[rsi+0x6f],ch
  435080:	je     0x4350a2
  435082:	outs   dx,DWORD PTR ds:[rsi]
  435083:	jo     0x4350ea
  435085:	outs   dx,BYTE PTR ds:[rsi]
  435086:	and    BYTE PTR [rsi+0x69],ah
  435089:	ins    BYTE PTR es:[rdi],dx
  43508a:	and    BYTE PTR gs:[rip+0x6f662073],ah        # 0x6fa97104
  435091:	jb     0x4350b3
  435093:	ja     0x435107
  435095:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
  43509d:	add    BYTE PTR [rax],al
  43509f:	add    BYTE PTR [rdx-0x3f000285],bh
  4350a5:	jle    0x4350a4
  4350a7:	call   QWORD PTR [rax+0x7e]
  4350aa:	std    
  4350ab:	jmp    FWORD PTR [rip+0x2dfffd7d]        # 0x2e434e2e
  4350b1:	jge    0x4350b0
  4350b3:	(bad)  
  4350b4:	mov    edx,0x66fffd7b
  4350b9:	ins    WORD PTR es:[rdi],dx
  4350bb:	jo     0x435122
  4350bd:	xor    dh,BYTE PTR [eax+0x61]
  4350c1:	jae    0x435136
  4350c3:	add    BYTE PTR [rcx+0x6e],cl
  4350c6:	jbe    0x435129
  4350c8:	ins    BYTE PTR es:[rdi],dx
  4350c9:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656d6172
  4350d1:	jb     0x435134
  4350d3:	je     0x43513a
  4350d5:	and    BYTE PTR [rsi+0x61],dh
  4350d8:	ins    BYTE PTR es:[rdi],dx
  4350d9:	jne    0x435140
  4350db:	cmp    ah,BYTE PTR [rax]
  4350dd:	and    eax,0xa73
  4350e2:	add    BYTE PTR [rax],al
  4350e4:	add    BYTE PTR [rax],al
  4350e6:	add    BYTE PTR [rax],al
  4350e8:	push   rbp
  4350e9:	jae    0x435154
  4350eb:	outs   dx,BYTE PTR ds:[rsi]
  4350ec:	and    BYTE PTR [eip+0x6e797376],ch        # 0x6ebcc469
  4350f3:	movsxd esp,DWORD PTR [rax]
  4350f5:	xor    BYTE PTR [rax],ah
  4350f7:	(bad)  
  4350f8:	outs   dx,BYTE PTR ds:[rsi]
  4350f9:	and    BYTE PTR fs:[rip+0x61632072],ch        # 0x61a67172
  435100:	outs   dx,BYTE PTR ds:[rsi]
  435101:	and    BYTE PTR [rax+0x72],dh
  435104:	outs   dx,DWORD PTR ds:[rsi]
  435105:	fs jne 0x43516b
  435108:	and    BYTE PTR gs:[rcx+0x6e],ch
  43510c:	jbe    0x43516f
  43510e:	ins    BYTE PTR es:[rdi],dx
  43510f:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x75707475
  435117:	je     0x435139
  435119:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa
  435120:	rex.WB outs dx,BYTE PTR ds:[rsi]
  435122:	jbe    0x435185
  435124:	ins    BYTE PTR es:[rdi],dx
  435125:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x63657073
  43512d:	je     0x43514f
  43512f:	jb     0x435192
  435131:	je     0x43519c
  435133:	outs   dx,DWORD PTR ds:[rsi]
  435134:	cmp    ah,BYTE PTR [rax]
  435136:	and    eax,0xa73
  43513b:	add    BYTE PTR [rax],al
  43513d:	add    BYTE PTR [rax],al
  43513f:	add    BYTE PTR [rbp+0x6e],dl
  435142:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  435146:	outs   dx,BYTE PTR ds:[rsi]
  435147:	and    BYTE PTR [rax+0x69],dh
  43514a:	js     0x4351b1
  43514c:	ins    BYTE PTR es:[rdi],dx
  43514d:	and    BYTE PTR [rsi+0x6f],ah
  435150:	jb     0x4351bf
  435152:	(bad)  
  435153:	je     0x435175
  435155:	jb     0x4351bc
  435157:	jno    0x4351ce
  435159:	gs jae 0x4351d0
  43515c:	gs cmp ah,BYTE PTR fs:[rax]
  435160:	and    eax,0xa2e73
  435165:	add    BYTE PTR [rax],al
  435167:	add    BYTE PTR [rbx+0x6f],al
  43516a:	jne    0x4351d8
  43516c:	and    BYTE PTR fs:[rsi+0x6f],ch
  435170:	je     0x435192
  435172:	(bad)  
  435173:	ins    BYTE PTR es:[rdi],dx
  435174:	ins    BYTE PTR es:[rdi],dx
  435175:	outs   dx,DWORD PTR ds:[rsi]
  435176:	movsxd esp,DWORD PTR [rcx+0x74]
  435179:	and    BYTE PTR gs:[rbp+0x65],ch
  43517d:	ins    DWORD PTR es:[rdi],dx
  43517e:	outs   dx,DWORD PTR ds:[rsi]
  43517f:	jb     0x4351fa
  435181:	and    BYTE PTR [rsi+0x6f],ah
  435184:	jb     0x4351a6
  435186:	imul   ebp,DWORD PTR [rsi+0x74],0x6d206172
  43518d:	(bad)  
  43518e:	je     0x435202
  435190:	imul   edi,DWORD PTR [rax+0x2e],0xa
  435197:	add    BYTE PTR [rbx+0x79],dl
  43519a:	outs   dx,BYTE PTR ds:[rsi]
  43519b:	je     0x4351fe
  43519d:	js     0x4351bf
  43519f:	gs jb  0x435214
  4351a2:	outs   dx,DWORD PTR ds:[rsi]
  4351a3:	jb     0x4351c5
  4351a5:	imul   ebp,DWORD PTR [rsi+0x20],0x7274616d
  4351ac:	imul   edi,DWORD PTR [rax+0x20],0x22732522
  4351b3:	and    BYTE PTR [rcx+0x74],ah
  4351b6:	and    BYTE PTR [rbx+0x6f],ah
  4351b9:	data16 data16 and BYTE PTR gs:[rip+0xa64],ah        # 0x435c26
  4351c2:	add    BYTE PTR [rax],al
  4351c4:	add    BYTE PTR [rax],al
  4351c6:	add    BYTE PTR [rax],al
  4351c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4351ca:	jne    0x435238
  4351cc:	and    BYTE PTR fs:[rsi+0x6f],ch
  4351d0:	je     0x4351f2
  4351d2:	(bad)  
  4351d3:	ins    BYTE PTR es:[rdi],dx
  4351d4:	ins    BYTE PTR es:[rdi],dx
  4351d5:	outs   dx,DWORD PTR ds:[rsi]
  4351d6:	movsxd esp,DWORD PTR [rcx+0x74]
  4351d9:	and    BYTE PTR gs:[rbp+0x65],ch
  4351dd:	ins    DWORD PTR es:[rdi],dx
  4351de:	outs   dx,DWORD PTR ds:[rsi]
  4351df:	jb     0x43525a
  4351e1:	and    BYTE PTR [rsi+0x6f],ah
  4351e4:	jb     0x435206
  4351e6:	imul   ebp,DWORD PTR [rsi+0x74],0x6d207265
  4351ed:	(bad)  
  4351ee:	je     0x435262
  4351f0:	imul   edi,DWORD PTR [rax+0x2e],0x7265000a
  4351f7:	jb     0x435268
  4351f9:	jb     0x43521b
  4351fb:	jo     0x43525e
  4351fd:	jb     0x435272
  4351ff:	imul   ebp,DWORD PTR [rsi+0x67],0x5f637220
  435206:	outs   dx,DWORD PTR ds:[rsi]
  435207:	jbe    0x43526e
  435209:	jb     0x43527d
  43520b:	imul   esp,DWORD PTR [rbp+riz*2+0xa],0x756f4300
  435213:	ins    BYTE PTR es:[rdi],dx
  435214:	and    BYTE PTR fs:[rsi+0x6f],ch
  435218:	je     0x43523a
  43521a:	sub    BYTE PTR [rdx+0x65],dh
  43521d:	sub    DWORD PTR [rcx+0x6c],esp
  435220:	ins    BYTE PTR es:[rdi],dx
  435221:	outs   dx,DWORD PTR ds:[rsi]
  435222:	movsxd esp,DWORD PTR [rcx+0x74]
  435225:	and    BYTE PTR gs:[rbp+0x65],ch
  435229:	ins    DWORD PTR es:[rdi],dx
  43522a:	outs   dx,DWORD PTR ds:[rsi]
  43522b:	jb     0x4352a6
  43522d:	and    BYTE PTR [rsi+0x6f],ah
  435230:	jb     0x435252
  435232:	jb     0x435297
  435234:	pop    rdi
  435235:	outs   dx,DWORD PTR ds:[rsi]
  435236:	jbe    0x43529d
  435238:	jb     0x4352ac
  43523a:	imul   esp,DWORD PTR [rbp+riz*2+0x2e],0x702b000a
  435242:	(bad)  
  435243:	jae    0x4352b8
  435245:	xor    DWORD PTR [rax],eax
  435247:	data16 ins BYTE PTR es:[rdi],dx
  435249:	(bad)  
  43524a:	addr32 jae 0x43524d
  43524d:	sub    esi,DWORD PTR [rax+0x61]
  435250:	jae    0x4352c5
  435252:	xor    al,BYTE PTR [rax]
  435254:	and    eax,0x64252d73
  435259:	cs ins BYTE PTR es:[rdi],dx
  43525b:	outs   dx,DWORD PTR ds:[rsi]
  43525c:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  435261:	js     0x435295
  435263:	ss xor al,0x0
  435266:	jae    0x4352dc
  435268:	(bad)  
  435269:	je     0x4352de
  43526b:	add    BYTE PTR [rax],al
  43526d:	add    BYTE PTR [rax],al
  43526f:	add    BYTE PTR [rbp+0x72],al
  435272:	jb     0x4352e3
  435274:	jb     0x435296
  435276:	jb     0x4352dd
  435278:	(bad)  
  435279:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x676f6c20
  435281:	and    BYTE PTR [rsi+0x69],ah
  435284:	ins    BYTE PTR es:[rdi],dx
  435285:	and    BYTE PTR gs:[rdi],ah
  435288:	and    eax,0x66202773
  43528d:	outs   dx,DWORD PTR ds:[rsi]
  43528e:	jb     0x4352b0
  435290:	jo     0x4352f3
  435292:	jae    0x435307
  435294:	sub    eax,0x6e652032
  435299:	movsxd ebp,DWORD PTR [rdi+0x64]
  43529c:	imul   ebp,DWORD PTR [rsi+0x67],0x6277000a
  4352a3:	add    BYTE PTR [rax],al
  4352a5:	add    BYTE PTR [rax],al
  4352a7:	add    BYTE PTR [rbx+0x61],al
  4352aa:	outs   dx,BYTE PTR ds:[rsi]
  4352ab:	outs   dx,BYTE PTR ds:[rsi]
  4352ac:	outs   dx,DWORD PTR ds:[rsi]
  4352ad:	je     0x4352cf
  4352af:	ja     0x435323
  4352b1:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x20676f6c
  4352b9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  4352c0:	jae    0x4352e9
  4352c2:	and    BYTE PTR [rsi+0x6f],ah
  4352c5:	jb     0x4352e7
  4352c7:	jo     0x43532a
  4352c9:	jae    0x43533e
  4352cb:	sub    eax,0x6e652031
  4352d0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4352d3:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
  4352da:	or     al,BYTE PTR [rax]
  4352dc:	sub    eax,0x746c6966
  4352e1:	gs jb  0x435343
  4352e4:	jae    0x435349
  4352e6:	jb     0x435351
  4352e8:	jo     0x43535e
  4352ea:	add    BYTE PTR [rip+0x2d2f6676],ch        # 0x2d72b966
  4352f0:	(bad)  
  4352f1:	data16 (bad) 
  4352f3:	sub    eax,0x746c6966
  4352f8:	gs jb  0x4352fb
  4352fb:	add    BYTE PTR [rax],al
  4352fd:	add    BYTE PTR [rax],al
  4352ff:	add    BYTE PTR [rdi+0x6e],cl
  435302:	ins    BYTE PTR es:[rdi],dx
  435303:	jns    0x435325
  435305:	jbe    0x435370
  435307:	fs outs dx,DWORD PTR gs:[rsi]
  43530a:	and    BYTE PTR [rcx+0x6e],ah
  43530d:	and    BYTE PTR fs:[rcx+0x75],ah
  435311:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x746c6966
  435319:	gs jb  0x43538f
  43531c:	and    BYTE PTR [rcx+0x72],ah
  43531f:	and    BYTE PTR gs:[rbx+0x75],dh
  435323:	jo     0x435395
  435325:	outs   dx,DWORD PTR ds:[rsi]
  435326:	jb     0x43539c
  435328:	gs and BYTE PTR fs:[rbx+0x75],ah
  43532d:	jb     0x4353a1
  43532f:	outs   dx,BYTE PTR gs:[rsi]
  435331:	je     0x43539f
  435333:	jns    0x435363
  435335:	or     al,BYTE PTR [rax]
  435337:	add    BYTE PTR [rbx+0x74],dl
  43533a:	jb     0x4353a1
  43533c:	(bad)  
  43533d:	ins    DWORD PTR es:[rdi],dx
  43533e:	movsxd ebp,DWORD PTR [rdi+0x70]
  435341:	jns    0x435363
  435343:	jb     0x4353aa
  435345:	jno    0x4353bc
  435347:	gs jae 0x4353be
  43534a:	gs and BYTE PTR fs:[rsi+0x6f],ah
  43534f:	jb     0x435371
  435351:	outs   dx,DWORD PTR ds:[rsi]
  435352:	jne    0x4353c8
  435354:	jo     0x4353cb
  435356:	je     0x435378
  435358:	jae    0x4353ce
  43535a:	jb     0x4353c1
  43535c:	(bad)  
  43535d:	ins    DWORD PTR es:[rdi],dx
  43535e:	and    BYTE PTR [rip+0x64253a64],ah        # 0x64688dc8
  435364:	sub    al,0x20
  435366:	ja     0x4353d0
  435368:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  43536f:	data16 gs and BYTE PTR fs:[rsi+0x72],ah
  435375:	outs   dx,DWORD PTR ds:[rsi]
  435376:	ins    DWORD PTR es:[rdi],dx
  435377:	and    BYTE PTR [rcx+0x20],ah
  43537a:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43537d:	jo     0x4353eb
  43537f:	gs js  0x4353a2
  435382:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6772
  435389:	jb     0x4353ec
  43538b:	jo     0x4353f5
  43538d:	and    BYTE PTR cs:[rsi+0x69],al
  435391:	ins    BYTE PTR es:[rdi],dx
  435392:	je     0x4353f9
  435394:	jb     0x4353ff
  435396:	outs   dx,BYTE PTR ds:[rsi]
  435397:	and    BYTE PTR [ecx+0x6e],ah
  43539b:	and    BYTE PTR fs:[rbx+0x74],dh
  43539f:	jb     0x435406
  4353a1:	(bad)  
  4353a2:	ins    DWORD PTR es:[rdi],dx
  4353a3:	movsxd ebp,DWORD PTR [rdi+0x70]
  4353a6:	jns    0x4353c8
  4353a8:	movsxd esp,DWORD PTR [rcx+0x6e]
  4353ab:	outs   dx,BYTE PTR ds:[rsi]
  4353ac:	outs   dx,DWORD PTR ds:[rsi]
  4353ad:	je     0x4353cf
  4353af:	(bad)  
  4353b0:	and    BYTE PTR gs:[rbp+0x73],dh
  4353b4:	gs and BYTE PTR fs:[rdi+rbp*2+0x67],dh
  4353ba:	gs je  0x435425
  4353bd:	gs jb  0x4353ee
  4353c0:	or     al,BYTE PTR [rax]
  4353c2:	add    BYTE PTR [rax],al
  4353c4:	add    BYTE PTR [rax],al
  4353c6:	add    BYTE PTR [rax],al
  4353c8:	and    eax,0x25272073
  4353cd:	jae    0x4353f6
  4353cf:	and    BYTE PTR [rdi+0x61],dh
  4353d2:	jae    0x4353f4
  4353d4:	jae    0x435446
  4353d6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4353da:	imul   esp,DWORD PTR [rbp+0x64],0x72687420
  4353e1:	outs   dx,DWORD PTR ds:[rsi]
  4353e2:	jne    0x43544b
  4353e4:	push   0x65687420
  4353e9:	and    BYTE PTR [rip+0x706f2073],ah        # 0x70b27462
  4353ef:	je     0x43545a
  4353f1:	outs   dx,DWORD PTR ds:[rsi]
  4353f2:	outs   dx,BYTE PTR ds:[rsi]
  4353f3:	and    BYTE PTR [rsi+0x6f],ah
  4353f6:	jb     0x435418
  4353f8:	outs   dx,DWORD PTR ds:[rsi]
  4353f9:	jne    0x43546f
  4353fb:	jo     0x435472
  4353fd:	je     0x43541f
  4353ff:	jae    0x435475
  435401:	jb     0x435468
  435403:	(bad)  
  435404:	ins    DWORD PTR es:[rdi],dx
  435405:	and    BYTE PTR [rip+0x64253a64],ah        # 0x64688e6f
  43540b:	sub    al,0x20
  43540d:	ja     0x435477
  43540f:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  435416:	data16 gs and BYTE PTR fs:[rsi+0x72],ah
  43541c:	outs   dx,DWORD PTR ds:[rsi]
  43541d:	ins    DWORD PTR es:[rdi],dx
  43541e:	and    BYTE PTR [rcx+0x20],ah
  435421:	movsxd ebp,DWORD PTR [rdi+0x6d]
  435424:	jo     0x435492
  435426:	gs js  0x435449
  435429:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6772
  435430:	jb     0x435493
  435432:	jo     0x43549c
  435434:	or     ah,BYTE PTR cs:[rip+0x6e612073]        # 0x6ea474ae
  43543b:	and    BYTE PTR fs:[rip+0x746c6966],ch        # 0x74afbda8
  435442:	gs jb  0x4354a4
  435445:	movsxd ebp,DWORD PTR [rdi+0x6d]
  435448:	jo     0x4354b6
  43544a:	gs js  0x43546d
  43544d:	movsxd esp,DWORD PTR [rcx+0x6e]
  435450:	outs   dx,BYTE PTR ds:[rsi]
  435451:	outs   dx,DWORD PTR ds:[rsi]
  435452:	je     0x435474
  435454:	(bad)  
  435455:	and    BYTE PTR gs:[rbp+0x73],dh
  435459:	gs and BYTE PTR fs:[rdi+rbp*2+0x67],dh
  43545f:	gs je  0x4354ca
  435462:	gs jb  0x435485
  435465:	outs   dx,WORD PTR ds:[rsi]
  435467:	jb     0x435489
  435469:	je     0x4354d3
  43546b:	and    BYTE PTR gs:[rbx+0x61],dh
  43546f:	ins    DWORD PTR es:[rdi],dx
  435470:	and    BYTE PTR gs:[rbx+0x74],dh
  435474:	jb     0x4354db
  435476:	(bad)  
  435477:	ins    DWORD PTR es:[rdi],dx
  435478:	or     al,BYTE PTR cs:[rax]
  43547b:	ins    BYTE PTR es:[rdi],dx
  43547c:	outs   dx,DWORD PTR ds:[rsi]
  43547d:	outs   dx,BYTE PTR ds:[rsi]
  43547e:	add    BYTE PTR [esi+0x75],ah
  435482:	ins    BYTE PTR es:[rdi],dx
  435483:	ins    BYTE PTR es:[rdi],dx
  435484:	add    BYTE PTR [rbp+0x6e],dl
  435487:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43548b:	outs   dx,BYTE PTR ds:[rsi]
  43548c:	and    BYTE PTR [rax+0x65],ch
  43548f:	ins    BYTE PTR es:[rdi],dx
  435490:	jo     0x4354b2
  435492:	outs   dx,DWORD PTR ds:[rsi]
  435493:	jo     0x435509
  435495:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  43549c:	(bad)  
  43549d:	or     al,BYTE PTR cs:[rax]
  4354a0:	rex.W jns 0x435513
  4354a3:	gs jb  0x4354c6
  4354a6:	data16 (bad) 
  4354a8:	jae    0x43551e
  4354aa:	and    BYTE PTR [rcx+0x75],al
  4354ad:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x20646e61
  4354b5:	push   rsi
  4354b6:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x636e6520
  4354be:	outs   dx,DWORD PTR ds:[rsi]
  4354bf:	fs gs jb 0x4354cd
  4354c3:	add    BYTE PTR [rax],al
  4354c5:	add    BYTE PTR [rax],al
  4354c7:	add    BYTE PTR [rbp+0x73],dh
  4354ca:	(bad)  
  4354cb:	cmp    ah,BYTE PTR gs:[eax]
  4354cf:	and    eax,0x6f5b2073
  4354d4:	jo     0x43554a
  4354d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b205d73
  4354dd:	pop    rbx
  4354de:	imul   ebp,DWORD PTR [rsi+0x66],0x20656c69
  4354e5:	outs   dx,DWORD PTR ds:[rsi]
  4354e6:	jo     0x43555c
  4354e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d205d73
  4354ef:	imul   esp,DWORD PTR [rax],0x69666e69
  4354f5:	ins    BYTE PTR es:[rdi],dx
  4354f6:	gs pop rbp
  4354f8:	cs cs and BYTE PTR cs:[rbx+0x5b],bh
  4354fe:	outs   dx,DWORD PTR ds:[rsi]
  4354ff:	jne    0x435575
  435501:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x706f
  435508:	je     0x435573
  43550a:	outs   dx,DWORD PTR ds:[rsi]
  43550b:	outs   dx,BYTE PTR ds:[rsi]
  43550c:	jae    0x43556b
  43550e:	and    BYTE PTR [rdi+0x75],ch
  435511:	je     0x435579
  435513:	imul   ebp,DWORD PTR [rbp+riz*2+0x7d],0xa2e2e2e
  43551b:	add    BYTE PTR [rax],al
  43551d:	add    BYTE PTR [rax],al
  43551f:	add    BYTE PTR [rdi+0x65],al
  435522:	je     0x435598
  435524:	imul   ebp,DWORD PTR [rsi+0x67],0x6c656820
  43552b:	jo     0x435567
  43552d:	or     ah,BYTE PTR [rax]
  43552f:	and    BYTE PTR [rax],ah
  435531:	and    BYTE PTR [rip+0x20202068],ch        # 0x2063759f
  435537:	and    BYTE PTR [rax],ah
  435539:	and    BYTE PTR [rip+0x7270202d],ch        # 0x72b3756c
  43553f:	imul   ebp,DWORD PTR [rsi+0x74],0x73616220
  435546:	imul   esp,DWORD PTR [rbx+0x20],0x6974706f
  43554d:	outs   dx,DWORD PTR ds:[rsi]
  43554e:	outs   dx,BYTE PTR ds:[rsi]
  43554f:	jae    0x43555b
  435551:	and    BYTE PTR [rax],ah
  435553:	and    BYTE PTR [rax],ah
  435555:	sub    eax,0x6f6c2068
  43555a:	outs   dx,BYTE PTR ds:[rsi]
  43555b:	and    BYTE PTR [eip+0x7270202d],ch        # 0x72b3758f
  435562:	imul   ebp,DWORD PTR [rsi+0x74],0x726f6d20
  435569:	and    BYTE PTR gs:[rdi+0x70],ch
  43556d:	je     0x4355d8
  43556f:	outs   dx,DWORD PTR ds:[rsi]
  435570:	outs   dx,BYTE PTR ds:[rsi]
  435571:	jae    0x43557d
  435573:	and    BYTE PTR [rax],ah
  435575:	and    BYTE PTR [rax],ah
  435577:	sub    eax,0x75662068
  43557c:	ins    BYTE PTR es:[rdi],dx
  43557d:	ins    BYTE PTR es:[rdi],dx
  43557e:	and    BYTE PTR [rip+0x7270202d],ch        # 0x72b375b1
  435584:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6c6120
  43558b:	and    BYTE PTR [rdi+0x70],ch
  43558e:	je     0x4355f9
  435590:	outs   dx,DWORD PTR ds:[rsi]
  435591:	outs   dx,BYTE PTR ds:[rsi]
  435592:	jae    0x4355b4
  435594:	sub    BYTE PTR [rcx+0x6e],ch
  435597:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  43559b:	imul   ebp,DWORD PTR [rsi+0x67],0x6c6c6120
  4355a2:	and    BYTE PTR [rsi+0x6f],ah
  4355a5:	jb     0x435614
  4355a7:	(bad)  
  4355a8:	je     0x4355ca
  4355aa:	(bad)  
  4355ab:	outs   dx,BYTE PTR ds:[rsi]
  4355ac:	and    BYTE PTR fs:[rbx+0x6f],ah
  4355b0:	fs movsxd esp,DWORD PTR gs:[rax]
  4355b4:	jae    0x435626
  4355b6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4355ba:	imul   esp,DWORD PTR [rbx+0x20],0x6974706f
  4355c1:	outs   dx,DWORD PTR ds:[rsi]
  4355c2:	outs   dx,BYTE PTR ds:[rsi]
  4355c3:	jae    0x4355f1
  4355c5:	and    BYTE PTR [rsi+0x65],dh
  4355c8:	jb     0x435643
  4355ca:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4355ce:	sub    DWORD PTR [edx],ecx
  4355d1:	and    BYTE PTR [rax],ah
  4355d3:	and    BYTE PTR [rax],ah
  4355d5:	push   rbx
  4355d6:	gs and BYTE PTR gs:[rbp+0x61],ch
  4355db:	outs   dx,BYTE PTR ds:[rsi]
  4355dc:	and    BYTE PTR [rip+0x6f662073],ah        # 0x6fa97655
  4355e2:	jb     0x435604
  4355e4:	fs gs je 0x435649
  4355e8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x73656420
  4355f0:	movsxd esi,DWORD PTR [rdx+0x69]
  4355f3:	jo     0x435669
  4355f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  4355fc:	je     0x435666
  4355fe:	and    BYTE PTR gs:[rdi+0x70],ch
  435602:	je     0x43566d
  435604:	outs   dx,DWORD PTR ds:[rsi]
  435605:	outs   dx,BYTE PTR ds:[rsi]
  435606:	jae    0x435636
  435608:	or     cl,BYTE PTR [rdx]
  43560a:	add    BYTE PTR [rax],al
  43560c:	add    BYTE PTR [rax],al
  43560e:	add    BYTE PTR [rax],al
  435610:	push   rax
  435611:	jb     0x43567c
  435613:	outs   dx,BYTE PTR ds:[rsi]
  435614:	je     0x435636
  435616:	push   0x20706c65
  43561b:	(bad)  
  43561c:	and    BYTE PTR [rcx+0x6e],ch
  43561f:	outs   dx,WORD PTR ds:[rsi]
  435621:	jb     0x435690
  435623:	(bad)  
  435624:	je     0x43568f
  435626:	outs   dx,DWORD PTR ds:[rsi]
  435627:	outs   dx,BYTE PTR ds:[rsi]
  435628:	and    BYTE PTR [rdi],ch
  43562a:	and    BYTE PTR [rbx+0x61],ah
  43562d:	jo     0x435690
  43562f:	(bad)  
  435630:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x3a736569
	...
  435640:	rex.RXB ins BYTE PTR es:[rdi],dx
  435642:	outs   dx,DWORD PTR ds:[rsi]
  435643:	(bad)
  435648:	jo     0x4356be
  43564a:	imul   ebp,DWORD PTR [rdi+0x6e],0x61282073
  435651:	data16 movsxd si,DWORD PTR gs:[rax+riz*1+0x77]
  435658:	push   0x20656c6f
  43565d:	jo     0x4356d1
  43565f:	outs   dx,DWORD PTR ds:[rsi]
  435660:	addr32 jb 0x4356c4
  435663:	ins    DWORD PTR es:[rdi],dx
  435664:	and    BYTE PTR [rcx+0x6e],ch
  435667:	jae    0x4356dd
  435669:	gs (bad) 
  43566b:	and    BYTE PTR fs:[rdi+0x66],ch
  43566f:	and    BYTE PTR [rdx+0x75],ch
  435672:	jae    0x4356e8
  435674:	and    BYTE PTR [rdi+0x6e],ch
  435677:	and    BYTE PTR gs:[rsi+0x69],ah
  43567b:	ins    BYTE PTR es:[rdi],dx
  43567c:	cmp    al,BYTE PTR gs:[rax]
  43567f:	rex.B
  435680:	fs jbe 0x4356e4
  435683:	outs   dx,BYTE PTR ds:[rsi]
  435684:	movsxd esp,DWORD PTR [rbp+0x64]
  435687:	and    BYTE PTR [rdi+0x6c],ah
  43568a:	outs   dx,DWORD PTR ds:[rsi]
  43568b:	(bad)
  435690:	jo     0x435706
  435692:	imul   ebp,DWORD PTR [rdi+0x6e],0x50003a73
  435699:	gs jb  0x4356c9
  43569c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616d
  4356a3:	imul   ebp,DWORD PTR [rsi+0x20],0x6974706f
  4356aa:	outs   dx,DWORD PTR ds:[rsi]
  4356ab:	outs   dx,BYTE PTR ds:[rsi]
  4356ac:	jae    0x4356e8
  4356ae:	add    BYTE PTR [rcx+0x64],al
  4356b1:	jbe    0x435714
  4356b3:	outs   dx,BYTE PTR ds:[rsi]
  4356b4:	movsxd esp,DWORD PTR [rbp+0x64]
  4356b7:	and    BYTE PTR [rax+0x65],dh
  4356ba:	jb     0x4356e9
  4356bc:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x706f
  4356c3:	je     0x43572e
  4356c5:	outs   dx,DWORD PTR ds:[rsi]
  4356c6:	outs   dx,BYTE PTR ds:[rsi]
  4356c7:	jae    0x435703
  4356c9:	add    BYTE PTR [rsi+0x69],dl
  4356cc:	fs outs dx,DWORD PTR gs:[rsi]
  4356cf:	and    BYTE PTR [rdi+0x70],ch
  4356d2:	je     0x43573d
  4356d4:	outs   dx,DWORD PTR ds:[rsi]
  4356d5:	outs   dx,BYTE PTR ds:[rsi]
  4356d6:	jae    0x435712
  4356d8:	add    BYTE PTR [rcx+0x64],al
  4356db:	jbe    0x43573e
  4356dd:	outs   dx,BYTE PTR ds:[rsi]
  4356de:	movsxd esp,DWORD PTR [rbp+0x64]
  4356e1:	and    BYTE PTR [rsi+0x69],dl
  4356e4:	fs outs dx,DWORD PTR gs:[rsi]
  4356e7:	and    BYTE PTR [rdi+0x70],ch
  4356ea:	je     0x435755
  4356ec:	outs   dx,DWORD PTR ds:[rsi]
  4356ed:	outs   dx,BYTE PTR ds:[rsi]
  4356ee:	jae    0x43572a
  4356f0:	add    BYTE PTR [rcx+0x75],al
  4356f3:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6974706f
  4356fb:	outs   dx,DWORD PTR ds:[rsi]
  4356fc:	outs   dx,BYTE PTR ds:[rsi]
  4356fd:	jae    0x435739
  4356ff:	add    BYTE PTR [rcx+0x64],al
  435702:	jbe    0x435765
  435704:	outs   dx,BYTE PTR ds:[rsi]
  435705:	movsxd esp,DWORD PTR [rbp+0x64]
  435708:	and    BYTE PTR [rcx+0x75],al
  43570b:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6974706f
  435713:	outs   dx,DWORD PTR ds:[rsi]
  435714:	outs   dx,BYTE PTR ds:[rsi]
  435715:	jae    0x435751
  435717:	add    BYTE PTR [rbx+0x75],dl
  43571a:	(bad)  
  43571b:	je     0x435786
  43571d:	je     0x43578b
  43571f:	and    BYTE PTR gs:[rdi+0x70],ch
  435723:	je     0x43578e
  435725:	outs   dx,DWORD PTR ds:[rsi]
  435726:	outs   dx,BYTE PTR ds:[rsi]
  435727:	jae    0x435763
  435729:	add    BYTE PTR [rax],al
  43572b:	add    BYTE PTR [rax],al
  43572d:	add    BYTE PTR [rax],al
  43572f:	add    BYTE PTR [rbp+0x72],al
  435732:	jb     0x4357a3
  435734:	jb     0x435756
  435736:	jae    0x4357a8
  435738:	ins    BYTE PTR es:[rdi],dx
  435739:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x7420676e
  435741:	push   0x72612065
  435746:	addr32 jne 0x4357b6
  435749:	outs   dx,BYTE PTR gs:[rsi]
  43574b:	je     0x43576d
  43574d:	ins    BYTE PTR es:[rdi],dx
  43574e:	imul   esi,DWORD PTR [rbx+0x74],0x203a
  435755:	add    BYTE PTR [rax],al
  435757:	add    BYTE PTR [rbp+0x72],al
  43575a:	jb     0x4357cb
  43575c:	jb     0x43577e
  43575e:	jo     0x4357c1
  435760:	jb     0x4357d5
  435762:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6c6720
  435769:	(bad)
  43576e:	jo     0x4357e4
  435770:	imul   ebp,DWORD PTR [rdi+0x6e],0x203a73
  435777:	imul   ebp,DWORD PTR [rsi+0x70],0x7475
  43577e:	add    BYTE PTR [rax],al
  435780:	rex.RB jb 0x4357f5
  435783:	outs   dx,DWORD PTR ds:[rsi]
  435784:	jb     0x4357a6
  435786:	jo     0x4357e9
  435788:	jb     0x4357fd
  43578a:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  435791:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f662073
  435798:	jb     0x4357ba
  43579a:	and    eax,0x69662073
  43579f:	ins    BYTE PTR es:[rdi],dx
  4357a0:	and    BYTE PTR gs:[rip+0xa2e73],ah        # 0x4d861a
  4357a7:	rex.WRXB jo 0x43580f
  4357aa:	outs   dx,BYTE PTR ds:[rsi]
  4357ab:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6120
  4357b2:	and    eax,0x69662073
  4357b7:	ins    BYTE PTR es:[rdi],dx
  4357b8:	cmp    ah,BYTE PTR gs:[rax]
  4357bb:	and    eax,0xa2e73
  4357c0:	rex.RB jb 0x435835
  4357c3:	outs   dx,DWORD PTR ds:[rsi]
  4357c4:	jb     0x4357e6
  4357c6:	outs   dx,DWORD PTR ds:[rsi]
  4357c7:	jo     0x43582e
  4357c9:	outs   dx,BYTE PTR ds:[rsi]
  4357ca:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  4357d1:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  4357d8:	or     al,BYTE PTR cs:[rax]
  4357db:	add    BYTE PTR [rax],al
  4357dd:	add    BYTE PTR [rax],al
  4357df:	add    BYTE PTR [rbx+0x75],dl
  4357e2:	movsxd esp,DWORD PTR [rbx+0x65]
  4357e5:	jae    0x43585a
  4357e7:	data16 jne 0x435856
  4357ea:	ins    BYTE PTR es:[rdi],dx
  4357eb:	jns    0x43580d
  4357ed:	outs   dx,DWORD PTR ds:[rsi]
  4357ee:	jo     0x435855
  4357f0:	outs   dx,BYTE PTR ds:[rsi]
  4357f1:	gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
  4357f7:	and    BYTE PTR [rsi+0x69],ah
  4357fa:	ins    BYTE PTR es:[rdi],dx
  4357fb:	gs or  al,BYTE PTR cs:[rax]
  4357ff:	rex.RB jb 0x435874
  435802:	outs   dx,DWORD PTR ds:[rsi]
  435803:	jb     0x435825
  435805:	outs   dx,DWORD PTR ds:[rsi]
  435806:	jo     0x43586d
  435808:	outs   dx,BYTE PTR ds:[rsi]
  435809:	imul   ebp,DWORD PTR [rsi+0x67],0x706e6920
  435810:	jne    0x435886
  435812:	and    BYTE PTR [rsi+0x69],ah
  435815:	ins    BYTE PTR es:[rdi],dx
  435816:	gs jae 0x435853
  435819:	and    BYTE PTR [rax],al
  43581b:	add    BYTE PTR [rax],al
  43581d:	add    BYTE PTR [rax],al
  43581f:	add    BYTE PTR [rbp+0x72],al
  435822:	jb     0x435893
  435824:	jb     0x435846
  435826:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  43582d:	imul   edi,DWORD PTR [rdx+0x69],0x6320676e
  435834:	outs   dx,DWORD PTR ds:[rsi]
  435835:	ins    DWORD PTR es:[rdi],dx
  435836:	jo     0x4358a4
  435838:	gs js  0x43585b
  43583b:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  435842:	or     al,BYTE PTR cs:[rax]
  435845:	outs   dx,DWORD PTR ds:[rsi]
  435846:	jne    0x4358bc
  435848:	jo     0x4358bf
  43584a:	je     0x43584c
  43584c:	rex.RB jb 0x4358c1
  43584f:	outs   dx,DWORD PTR ds:[rsi]
  435850:	jb     0x435872
  435852:	outs   dx,DWORD PTR ds:[rsi]
  435853:	jo     0x4358ba
  435855:	outs   dx,BYTE PTR ds:[rsi]
  435856:	imul   ebp,DWORD PTR [rsi+0x67],0x74756f20
  43585d:	jo     0x4358d4
  43585f:	je     0x435881
  435861:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x203a
	...
  435870:	sub    eax,0x6e612074
  435875:	and    BYTE PTR fs:[rip+0x63206f74],ch        # 0x6363c7f0
  43587c:	(bad)  
  43587d:	outs   dx,BYTE PTR ds:[rsi]
  43587e:	outs   dx,BYTE PTR ds:[rsi]
  43587f:	outs   dx,DWORD PTR ds:[rsi]
  435880:	je     0x4358a2
  435882:	(bad)  
  435883:	and    BYTE PTR gs:[rbp+0x73],dh
  435887:	gs and BYTE PTR fs:[rdi+rbp*2+0x67],dh
  43588d:	gs je  0x4358f8
  435890:	gs jb  0x4358ce
  435893:	and    BYTE PTR [rbp+0x73],dh
  435896:	imul   ebp,DWORD PTR [rsi+0x67],0x2e742d20
  43589d:	or     al,BYTE PTR [rax]
  43589f:	add    BYTE PTR [rip+0x76206f74],ch        # 0x7663c819
  4358a5:	(bad)  
  4358a6:	ins    BYTE PTR es:[rdi],dx
  4358a7:	jne    0x43590e
  4358a9:	and    BYTE PTR [rbx+0x6d],dh
  4358ac:	(bad)  
  4358ad:	ins    BYTE PTR es:[rdi],dx
  4358ae:	ins    BYTE PTR es:[rdi],dx
  4358af:	gs jb  0x4358d2
  4358b2:	je     0x43591c
  4358b4:	(bad)  
  4358b5:	outs   dx,BYTE PTR ds:[rsi]
  4358b6:	and    BYTE PTR [rip+0x203b7373],ch        # 0x207ecc2f
  4358bc:	(bad)  
  4358bd:	(bad)  
  4358be:	outs   dx,DWORD PTR ds:[rsi]
  4358bf:	jb     0x435935
  4358c1:	imul   ebp,DWORD PTR [rsi+0x67],0x66000a2e
  4358c8:	ins    WORD PTR es:[rdi],dx
  4358ca:	add    BYTE PTR [rax+0x74],ch
  4358cd:	je     0x43593f
  4358cf:	cmp    al,BYTE PTR [rax]
  4358d1:	movsxd esi,DWORD PTR [rdx+0x65]
  4358d4:	(bad)  
  4358d5:	je     0x435940
  4358d7:	outs   dx,DWORD PTR ds:[rsi]
  4358d8:	outs   dx,BYTE PTR ds:[rsi]
  4358d9:	pop    rdi
  4358da:	je     0x435945
  4358dc:	ins    DWORD PTR es:[rdi],dx
  4358dd:	gs cmp eax,0x776f6e
  4358e3:	add    BYTE PTR [rax],al
  4358e5:	add    BYTE PTR [rax],al
  4358e7:	add    BYTE PTR [rsi+0x6f],ch
  4358ea:	and    BYTE PTR [rbp+0x6e],ah
  4358ed:	movsxd ebp,DWORD PTR [rdi+0x64]
  4358f0:	gs jb  0x435913
  4358f3:	outs   dx,WORD PTR ds:[rsi]
  4358f5:	jne    0x435965
  4358f7:	and    BYTE PTR fs:[rsi+0x6f],ah
  4358fb:	jb     0x43591d
  4358fd:	movsxd ebp,DWORD PTR [rdi+0x64]
  435900:	movsxd esp,DWORD PTR gs:[rax]
  435903:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x2c000a69
  43590b:	add    BYTE PTR [rax],al
  43590d:	add    BYTE PTR [rax],al
  43590f:	add    BYTE PTR [rbp+0x69],cl
  435912:	jae    0x435987
  435914:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  43591b:	jae    0x435991
  43591d:	jb     0x435984
  43591f:	(bad)  
  435920:	ins    DWORD PTR es:[rdi],dx
  435921:	and    BYTE PTR [rdi+0x68],dh
  435924:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  43592b:	jb     0x435992
  43592d:	jno    0x4359a4
  43592f:	imul   esi,DWORD PTR [rdx+0x65],0x79622064
  435936:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43593a:	jae    0x43595c
  43593c:	data16 ins WORD PTR es:[rdi],dx
  43593f:	or     al,BYTE PTR [rax]
  435941:	add    BYTE PTR [rax],al
  435943:	add    BYTE PTR [rax],al
  435945:	add    BYTE PTR [rax],al
  435947:	add    BYTE PTR [rbp+0x6e],dl
  43594a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43594e:	outs   dx,BYTE PTR ds:[rsi]
  43594f:	and    BYTE PTR [rbx+0x74],dh
  435952:	jb     0x4359b9
  435954:	(bad)  
  435955:	ins    DWORD PTR es:[rdi],dx
  435956:	and    BYTE PTR [rbp+0x6e],ah
  435959:	movsxd ebp,DWORD PTR [rdi+0x64]
  43595c:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e20
  435963:	and    BYTE PTR [rbx+0x75],dh
  435966:	jo     0x4359d8
  435968:	outs   dx,DWORD PTR ds:[rsi]
  435969:	jb     0x4359df
  43596b:	gs and BYTE PTR fs:[rcx+0x65],bh
  435970:	je     0x435992
  435972:	sub    BYTE PTR [rdi+0x6e],ch
  435975:	ins    BYTE PTR es:[rdi],dx
  435976:	jns    0x435998
  435978:	jae    0x4359ee
  43597a:	jb     0x4359e1
  43597c:	(bad)  
  43597d:	ins    DWORD PTR es:[rdi],dx
  43597e:	movsxd ebp,DWORD PTR [rdi+0x70]
  435981:	jns    0x4359ac
  435983:	or     al,BYTE PTR [rax]
  435985:	add    BYTE PTR [rax],al
  435987:	add    BYTE PTR [rbx+0x61],al
  43598a:	outs   dx,BYTE PTR ds:[rsi]
  43598b:	outs   dx,BYTE PTR ds:[rsi]
  43598c:	outs   dx,DWORD PTR ds:[rsi]
  43598d:	je     0x4359af
  43598f:	ins    DWORD PTR es:[rdi],dx
  435990:	(bad)  
  435991:	jo     0x4359b3
  435993:	jae    0x435a09
  435995:	jb     0x4359fc
  435997:	(bad)  
  435998:	ins    DWORD PTR es:[rdi],dx
  435999:	and    BYTE PTR [rbx],ah
  43599b:	and    eax,0x64253a64
  4359a0:	and    BYTE PTR [rip+0x736e7520],ch        # 0x73b1cec6
  4359a6:	jne    0x435a18
  4359a8:	jo     0x435a19
  4359aa:	jb     0x435a20
  4359ac:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  4359b2:	gs or  al,BYTE PTR cs:[rax]
  4359b6:	add    BYTE PTR [rax],al
  4359b8:	rex.WB
  4359b9:	data16 and BYTE PTR [rcx+0x6f],bh
  4359bd:	jne    0x4359df
  4359bf:	ja     0x435a22
  4359c1:	outs   dx,BYTE PTR ds:[rsi]
  4359c2:	je     0x4359e4
  4359c4:	jne    0x435a34
  4359c6:	jae    0x435a3d
  4359c8:	jo     0x435a3a
  4359ca:	outs   dx,DWORD PTR ds:[rsi]
  4359cb:	jb     0x435a41
  4359cd:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  4359d3:	gs jae 0x4359f6
  4359d6:	imul   esp,DWORD PTR [rdi+0x6e],0x6465726f
  4359dd:	and    BYTE PTR [rcx+0x6e],ch
  4359e0:	jae    0x435a56
  4359e2:	gs (bad) 
  4359e4:	and    BYTE PTR fs:[rdi+0x66],ch
  4359e8:	and    BYTE PTR [rsi+0x61],ah
  4359eb:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x70202c67
  4359f3:	ins    BYTE PTR es:[rdi],dx
  4359f4:	gs (bad) 
  4359f6:	jae    0x435a5d
  4359f8:	and    BYTE PTR [rbp+0x73],dh
  4359fb:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  435a00:	and    BYTE PTR [rip+0x6f6e6769],ch        # 0x6fb1c16f
  435a06:	jb     0x435a6d
  435a08:	pop    rdi
  435a09:	jne    0x435a79
  435a0b:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  435a0f:	outs   dx,BYTE PTR ds:[rsi]
  435a10:	and    BYTE PTR [rdi+0x70],ch
  435a13:	je     0x435a7e
  435a15:	outs   dx,DWORD PTR ds:[rsi]
  435a16:	outs   dx,BYTE PTR ds:[rsi]
  435a17:	or     cl,BYTE PTR [rcx+0x66]
  435a1a:	and    BYTE PTR [rcx+0x6f],bh
  435a1d:	jne    0x435a3f
  435a1f:	ja     0x435a82
  435a21:	outs   dx,BYTE PTR ds:[rsi]
  435a22:	je     0x435a44
  435a24:	je     0x435a8e
  435a26:	gs ins DWORD PTR es:[rdi],dx
  435a28:	and    BYTE PTR [rbx+0x6f],ah
  435a2b:	jo     0x435a96
  435a2d:	gs fs sub al,0x20
  435a31:	jo     0x435a9f
  435a33:	gs (bad) 
  435a35:	jae    0x435a9c
  435a37:	and    BYTE PTR [rbp+0x73],dh
  435a3a:	and    BYTE PTR gs:[rip+0x79706f63],ch        # 0x79b3c9a4
  435a41:	pop    rdi
  435a42:	jne    0x435ab2
  435a44:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  435a48:	outs   dx,BYTE PTR ds:[rsi]
  435a49:	or     al,BYTE PTR [rax]
  435a4b:	add    BYTE PTR [rax],al
  435a4d:	add    BYTE PTR [rax],al
  435a4f:	add    BYTE PTR [rbx+0x6f],al
  435a52:	jne    0x435ac0
  435a54:	and    BYTE PTR fs:[rsi+0x6f],ch
  435a58:	je     0x435a7a
  435a5a:	outs   dx,DWORD PTR ds:[rsi]
  435a5b:	jo     0x435ac2
  435a5d:	outs   dx,BYTE PTR ds:[rsi]
  435a5e:	and    BYTE PTR [rcx+0x74],ah
  435a61:	je     0x435ac4
  435a63:	movsxd ebp,DWORD PTR [rax+0x6d]
  435a66:	outs   dx,BYTE PTR gs:[rsi]
  435a68:	je     0x435a8a
  435a6a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  435a71:	or     al,BYTE PTR cs:[rax]
  435a74:	add    BYTE PTR [rax],al
  435a76:	add    BYTE PTR [rax],al
  435a78:	rex.XB outs dx,DWORD PTR ds:[rsi]
  435a7a:	jne    0x435ae8
  435a7c:	and    BYTE PTR fs:[rsi+0x6f],ch
  435a80:	je     0x435aa2
  435a82:	addr32 gs je 0x435aa6
  435a86:	jae    0x435af1
  435a88:	jp     0x435aef
  435a8a:	and    BYTE PTR [rdi+0x66],ch
  435a8d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  435a91:	and    BYTE PTR [rcx+0x74],ah
  435a94:	je     0x435af7
  435a96:	movsxd ebp,DWORD PTR [rax+0x6d]
  435a99:	outs   dx,BYTE PTR gs:[rsi]
  435a9b:	je     0x435abd
  435a9d:	and    eax,0xa2e73
  435aa2:	add    BYTE PTR [rax],al
  435aa4:	add    BYTE PTR [rax],al
  435aa6:	add    BYTE PTR [rax],al
  435aa8:	rex.B je 0x435b1f
  435aab:	(bad)  
  435aac:	movsxd ebp,DWORD PTR [rax+0x6d]
  435aaf:	outs   dx,BYTE PTR gs:[rsi]
  435ab1:	je     0x435ad3
  435ab3:	and    eax,0x6f742073
  435ab8:	outs   dx,DWORD PTR ds:[rsi]
  435ab9:	and    BYTE PTR [rcx+riz*2+0x72],ch
  435abd:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  435ac3:	imul   si,WORD PTR [rax+riz*1+0x69],0x746e
  435aca:	outs   dx,DWORD PTR ds:[rsi]
  435acb:	and    BYTE PTR [rbp+0x65],ch
  435ace:	ins    DWORD PTR es:[rdi],dx
  435acf:	outs   dx,DWORD PTR ds:[rsi]
  435ad0:	jb     0x435b4b
  435ad2:	or     al,BYTE PTR cs:[rax]
  435ad5:	add    BYTE PTR [rax],al
  435ad7:	add    BYTE PTR [rdi+0x75],cl
  435ada:	je     0x435b4c
  435adc:	jne    0x435b52
  435ade:	and    BYTE PTR [rsi+0x69],ah
  435ae1:	ins    BYTE PTR es:[rdi],dx
  435ae2:	and    BYTE PTR gs:[rbx],ah
  435ae5:	and    eax,0x6f642064
  435aea:	gs jae 0x435b0d
  435aed:	outs   dx,BYTE PTR ds:[rsi]
  435aee:	outs   dx,DWORD PTR ds:[rsi]
  435aef:	je     0x435b11
  435af1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  435af4:	je     0x435b57
  435af6:	imul   ebp,DWORD PTR [rsi+0x20],0x20796e61
  435afd:	jae    0x435b73
  435aff:	jb     0x435b66
  435b01:	(bad)  
  435b02:	ins    DWORD PTR es:[rdi],dx
  435b03:	or     al,BYTE PTR [rax]
  435b05:	add    BYTE PTR [rax],al
  435b07:	add    BYTE PTR [rbx+0x6f],al
  435b0a:	fs movsxd esp,DWORD PTR gs:[rax]
  435b0e:	push   r14
  435b10:	rex.WRXB jo 0x435b87
  435b13:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  435b1a:	sub    BYTE PTR [rip+0x73202973],ah        # 0x73638493
  435b20:	jo     0x435b87
  435b22:	movsxd ebp,DWORD PTR [rcx+0x66]
  435b25:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  435b2c:	and    BYTE PTR [rdi+0x75],ch
  435b2f:	je     0x435ba1
  435b31:	jne    0x435ba7
  435b33:	and    BYTE PTR [rsi+0x69],ah
  435b36:	ins    BYTE PTR es:[rdi],dx
  435b37:	and    BYTE PTR gs:[rbx],ah
  435b3a:	and    eax,0x25282064
  435b3f:	jae    0x435b6a
  435b41:	and    BYTE PTR [rcx+0x73],ch
  435b44:	and    BYTE PTR [rsi+0x6f],ch
  435b47:	je     0x435b69
  435b49:	(bad)  
  435b4a:	outs   dx,BYTE PTR ds:[rsi]
  435b4b:	and    BYTE PTR [rbp+0x6e],ah
  435b4e:	movsxd ebp,DWORD PTR [rdi+0x64]
  435b51:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  435b58:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e
  435b5f:	add    BYTE PTR [rbx+0x6f],al
  435b62:	fs movsxd esp,DWORD PTR gs:[rax]
  435b66:	push   r14
  435b68:	rex.WRXB jo 0x435bdf
  435b6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  435b72:	sub    BYTE PTR [rip+0x73202973],ah        # 0x736384eb
  435b78:	jo     0x435bdf
  435b7a:	movsxd ebp,DWORD PTR [rcx+0x66]
  435b7d:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  435b84:	and    BYTE PTR [rdi+0x75],ch
  435b87:	je     0x435bf9
  435b89:	jne    0x435bff
  435b8b:	and    BYTE PTR [rsi+0x69],ah
  435b8e:	ins    BYTE PTR es:[rdi],dx
  435b8f:	and    BYTE PTR gs:[rbx],ah
  435b92:	and    eax,0x25282064
  435b97:	jae    0x435bc2
  435b99:	and    BYTE PTR [rax+0x61],ch
  435b9c:	jae    0x435bbe
  435b9e:	outs   dx,BYTE PTR ds:[rsi]
  435b9f:	outs   dx,DWORD PTR ds:[rsi]
  435ba0:	je     0x435bc2
  435ba2:	(bad)  
  435ba3:	gs outs dx,BYTE PTR gs:[rsi]
  435ba6:	and    BYTE PTR [rbp+0x73],dh
  435ba9:	gs and BYTE PTR fs:[rsi+0x6f],ah
  435bae:	jb     0x435bd0
  435bb0:	(bad)  
  435bb1:	outs   dx,BYTE PTR ds:[rsi]
  435bb2:	jns    0x435bd4
  435bb4:	jae    0x435c2a
  435bb6:	jb     0x435c1d
  435bb8:	(bad)  
  435bb9:	ins    DWORD PTR es:[rdi],dx
  435bba:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
  435bbf:	and    BYTE PTR [rbp+0x6f],ch
  435bc2:	jae    0x435c38
  435bc4:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
  435bc8:	gs ins BYTE PTR es:[rdi],dx
  435bca:	jns    0x435bec
  435bcc:	jb     0x435c33
  435bce:	(bad)  
  435bcf:	jae    0x435c40
  435bd1:	outs   dx,BYTE PTR ds:[rsi]
  435bd2:	and    BYTE PTR [rcx+0x73],ch
  435bd5:	and    BYTE PTR [rbp+0x69],ah
  435bd8:	je     0x435c42
  435bda:	gs jb  0x435bfd
  435bdd:	ja     0x435c51
  435bdf:	outs   dx,DWORD PTR ds:[rsi]
  435be0:	outs   dx,BYTE PTR ds:[rsi]
  435be1:	and    BYTE PTR [ecx+edi*2+0x70],dh
  435be6:	and    BYTE PTR gs:[rax],ch
  435be9:	gs cs and BYTE PTR cs:[ecx+0x20],ah
  435bf0:	jbe    0x435c5b
  435bf2:	fs outs dx,DWORD PTR gs:[rsi]
  435bf5:	and    BYTE PTR [rdi+0x70],ch
  435bf8:	je     0x435c63
  435bfa:	outs   dx,DWORD PTR ds:[rsi]
  435bfb:	outs   dx,BYTE PTR ds:[rsi]
  435bfc:	and    BYTE PTR [rdi+0x69],dh
  435bff:	je     0x435c69
  435c01:	and    BYTE PTR [rsi+0x6f],ch
  435c04:	and    BYTE PTR [rsi+0x69],dh
  435c07:	fs outs dx,DWORD PTR gs:[rsi]
  435c0a:	and    BYTE PTR [rbx+0x74],dh
  435c0d:	jb     0x435c74
  435c0f:	(bad)  
  435c10:	ins    DWORD PTR es:[rdi],dx
  435c11:	jae    0x435c3c
  435c13:	and    BYTE PTR [rdi+0x72],ch
  435c16:	and    BYTE PTR [rax+rbp*2+0x61],dh
  435c1a:	je     0x435c3c
  435c1c:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x20612073
  435c24:	jo     0x435c98
  435c26:	imul   esi,DWORD PTR [rsi+0x61],0x6f206574
  435c2d:	jo     0x435ca3
  435c2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  435c36:	jae    0x435ca7
  435c38:	ins    DWORD PTR es:[rdi],dx
  435c39:	and    BYTE PTR gs:[rbp+0x6e],ah
  435c3d:	movsxd ebp,DWORD PTR [rdi+0x64]
  435c40:	gs jb  0x435c63
  435c43:	ja     0x435cad
  435c45:	imul   esp,DWORD PTR [rbx+0x68],0x73617720
  435c4c:	and    BYTE PTR [rsi+0x6f],ch
  435c4f:	je     0x435c71
  435c51:	(bad)  
  435c52:	movsxd esi,DWORD PTR [rbp+rsi*2+0x61]
  435c56:	ins    BYTE PTR es:[rdi],dx
  435c57:	ins    BYTE PTR es:[rdi],dx
  435c58:	jns    0x435c7a
  435c5a:	jne    0x435ccf
  435c5c:	gs and BYTE PTR fs:[rsi+0x6f],ah
  435c61:	jb     0x435c83
  435c63:	(bad)  
  435c64:	outs   dx,BYTE PTR ds:[rsi]
  435c65:	jns    0x435c87
  435c67:	jae    0x435cdd
  435c69:	jb     0x435cd0
  435c6b:	(bad)  
  435c6c:	ins    DWORD PTR es:[rdi],dx
  435c6d:	or     al,BYTE PTR cs:[rax]
  435c70:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  435c72:	and    BYTE PTR [rcx+0x6e],ch
  435c75:	jo     0x435cec
  435c77:	je     0x435c99
  435c79:	jae    0x435cef
  435c7b:	jb     0x435ce2
  435c7d:	(bad)  
  435c7e:	ins    DWORD PTR es:[rdi],dx
  435c7f:	jae    0x435ca1
  435c81:	(bad)  
  435c82:	jne    0x435cf8
  435c84:	and    BYTE PTR [rdi+0x75],ch
  435c87:	je     0x435cf9
  435c89:	jne    0x435cff
  435c8b:	and    BYTE PTR [rsi+0x65],ch
  435c8e:	gs fs jae 0x435cb2
  435c92:	(bad)  
  435c93:	outs   dx,BYTE PTR ds:[rsi]
  435c94:	and    BYTE PTR [rcx+0x6e],ch
  435c97:	jo     0x435d0e
  435c99:	je     0x435cbb
  435c9b:	jae    0x435d11
  435c9d:	jb     0x435d04
  435c9f:	(bad)  
  435ca0:	ins    DWORD PTR es:[rdi],dx
  435ca1:	or     al,BYTE PTR [rax]
  435ca3:	imul   ebp,DWORD PTR [rbp+0x61],0x326567
  435caa:	jo     0x435d1e
  435cac:	gs ins BYTE PTR es:[rdi],dx
  435cae:	outs   dx,DWORD PTR ds:[rsi]
  435caf:	(bad)  
  435cb0:	add    BYTE PTR fs:[rax],al
  435cb3:	add    BYTE PTR [rax],al
  435cb5:	add    BYTE PTR [rax],al
  435cb7:	add    BYTE PTR [rcx+0x6e],cl
  435cba:	jbe    0x435d1d
  435cbc:	ins    BYTE PTR es:[rdi],dx
  435cbd:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7475706e
  435cc5:	and    BYTE PTR [rsi+0x69],ah
  435cc8:	ins    BYTE PTR es:[rdi],dx
  435cc9:	and    BYTE PTR gs:[rcx+0x6e],ch
  435ccd:	fs gs js 0x435cf1
  435cd1:	and    eax,0x68772064
  435cd6:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x636f7270
  435cde:	gs jae 0x435d54
  435ce1:	imul   ebp,DWORD PTR [rsi+0x67],0x74656d20
  435ce8:	(bad)  
  435ce9:	fs (bad) 
  435ceb:	je     0x435d4e
  435ced:	and    BYTE PTR [rbp+0x61],ch
  435cf0:	jo     0x435d65
  435cf2:	or     al,BYTE PTR [rax]
  435cf4:	add    BYTE PTR [rax],al
  435cf6:	add    BYTE PTR [rax],al
  435cf8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  435cfa:	jbe    0x435d5d
  435cfc:	ins    BYTE PTR es:[rdi],dx
  435cfd:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x64617465
  435d05:	(bad)  
  435d06:	je     0x435d69
  435d08:	and    BYTE PTR [rbx+0x70],dh
  435d0b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  435d0f:	imul   esp,DWORD PTR [rbp+0x72],0x2e732520
  435d16:	or     al,BYTE PTR [rax]
  435d18:	rex.WB outs dx,BYTE PTR ds:[rsi]
  435d1a:	jbe    0x435d7d
  435d1c:	ins    BYTE PTR es:[rdi],dx
  435d1d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x64617465
  435d25:	(bad)  
  435d26:	je     0x435d89
  435d28:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  435d2c:	and    BYTE PTR gs:[rip+0xa2e63],ah        # 0x4d8b96
  435d33:	movsxd ebp,DWORD PTR [rax+0x61]
  435d36:	jo     0x435dac
  435d38:	gs jb  0x435d3b
  435d3b:	add    BYTE PTR [rax],al
  435d3d:	add    BYTE PTR [rax],al
  435d3f:	add    BYTE PTR [rcx+0x6e],cl
  435d42:	jbe    0x435da5
  435d44:	ins    BYTE PTR es:[rdi],dx
  435d45:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x6e692073
  435d4d:	fs gs js 0x435d71
  435d51:	and    eax,0x68772064
  435d56:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x636f7270
  435d5e:	gs jae 0x435dd4
  435d61:	imul   ebp,DWORD PTR [rsi+0x67],0x74656d20
  435d68:	(bad)  
  435d69:	fs (bad) 
  435d6b:	je     0x435dce
  435d6d:	and    BYTE PTR [rbp+0x61],ch
  435d70:	jo     0x435de5
  435d72:	or     al,BYTE PTR cs:[rax]
  435d75:	jo     0x435de9
  435d77:	outs   dx,DWORD PTR ds:[rsi]
  435d78:	addr32 jb 0x435ddc
  435d7b:	ins    DWORD PTR es:[rdi],dx
  435d7c:	add    BYTE PTR [rcx+0x73],al
  435d7f:	jae    0x435de6
  435d81:	jb     0x435df7
  435d83:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  435d8a:	data16 (bad) 
  435d8c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  435d94:	and    eax,0x64253a73
  435d99:	or     al,BYTE PTR [rax]
  435d9b:	data16 ins WORD PTR es:[rdi],dx
  435d9e:	jo     0x435e05
  435da0:	addr32 pop rdi
  435da2:	outs   dx,DWORD PTR ds:[rsi]
  435da3:	jo     0x435e19
  435da5:	movsxd eax,DWORD PTR cs:[rax]
  435da8:	push   rbx
  435da9:	je     0x435e1d
  435dab:	gs (bad) 
  435dad:	ins    DWORD PTR es:[rdi],dx
  435dae:	and    BYTE PTR [rbx+0x70],dh
  435db1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  435db5:	imul   esp,DWORD PTR [rbp+0x72],0x20732520
  435dbc:	outs   dx,DWORD PTR fs:[rsi]
  435dbe:	gs jae 0x435de1
  435dc1:	outs   dx,BYTE PTR ds:[rsi]
  435dc2:	outs   dx,DWORD PTR ds:[rsi]
  435dc3:	je     0x435de5
  435dc5:	ins    DWORD PTR es:[rdi],dx
  435dc6:	(bad)  
  435dc7:	je     0x435e2c
  435dc9:	push   0x6e612020
  435dce:	jns    0x435df0
  435dd0:	jae    0x435e46
  435dd2:	jb     0x435e39
  435dd4:	(bad)  
  435dd5:	ins    DWORD PTR es:[rdi],dx
  435dd6:	jae    0x435e06
  435dd8:	or     al,BYTE PTR [rax]
  435dda:	add    BYTE PTR [rax],al
  435ddc:	add    BYTE PTR [rax],al
  435dde:	add    BYTE PTR [rax],al
  435de0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  435de2:	jbe    0x435e45
  435de4:	ins    BYTE PTR es:[rdi],dx
  435de5:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7475706e
  435ded:	and    BYTE PTR [rsi+0x69],ah
  435df0:	ins    BYTE PTR es:[rdi],dx
  435df1:	and    BYTE PTR gs:[rcx+0x6e],ch
  435df5:	fs gs js 0x435e19
  435df9:	and    eax,0x6e692064
  435dfe:	and    BYTE PTR [rbx+0x68],ah
  435e01:	(bad)  
  435e02:	jo     0x435e78
  435e04:	gs jb  0x435e27
  435e07:	ins    DWORD PTR es:[rdi],dx
  435e08:	(bad)  
  435e09:	jo     0x435e7b
  435e0b:	imul   ebp,DWORD PTR [rsi+0x67],0x64000a2e
  435e12:	jne    0x435e86
  435e14:	(bad)  
  435e15:	je     0x435e80
  435e17:	outs   dx,DWORD PTR ds:[rsi]
  435e18:	outs   dx,BYTE PTR ds:[rsi]
  435e19:	add    BYTE PTR [rbx+0x72],ah
  435e1c:	gs (bad) 
  435e1e:	je     0x435e89
  435e20:	outs   dx,DWORD PTR ds:[rsi]
  435e21:	outs   dx,BYTE PTR ds:[rsi]
  435e22:	pop    rdi
  435e23:	je     0x435e8e
  435e25:	ins    DWORD PTR es:[rdi],dx
  435e26:	add    BYTE PTR gs:[rdx+0x6f],dh
  435e2a:	je     0x435e8d
  435e2c:	je     0x435e93
  435e2e:	add    BYTE PTR [rax],al
  435e30:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  435e32:	and    BYTE PTR [rdi],ah
  435e34:	cmp    eax,0x68632027
  435e39:	(bad)  
  435e3a:	jb     0x435e9d
  435e3c:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  435e40:	and    BYTE PTR [rcx+0x6e],ch
  435e43:	and    BYTE PTR [rbp+0x65],ch
  435e46:	je     0x435ea9
  435e48:	fs (bad) 
  435e4a:	je     0x435ead
  435e4c:	and    BYTE PTR [rbx+0x74],dh
  435e4f:	jb     0x435eba
  435e51:	outs   dx,BYTE PTR ds:[rsi]
  435e52:	and    BYTE PTR [eip+0xa2e73],ah        # 0x4d8ccc
  435e59:	outs   dx,BYTE PTR ds:[rsi]
  435e5a:	outs   dx,DWORD PTR ds:[rsi]
  435e5b:	ja     0x435e5d
  435e5d:	add    BYTE PTR [rax],al
  435e5f:	add    BYTE PTR [rcx+0x6e],cl
  435e62:	jbe    0x435ec5
  435e64:	ins    BYTE PTR es:[rdi],dx
  435e65:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x74706168
  435e6d:	gs jb  0x435e90
  435e70:	imul   ebp,DWORD PTR [rsi+0x64],0x25207865
  435e77:	and    BYTE PTR fs:[rcx+0x6e],ch
  435e7b:	and    BYTE PTR [rbp+0x65],ch
  435e7e:	je     0x435ee1
  435e80:	fs (bad) 
  435e82:	je     0x435ee5
  435e84:	and    BYTE PTR [rbx+0x70],dh
  435e87:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  435e8b:	imul   esp,DWORD PTR [rbp+0x72],0xa2e
  435e92:	add    BYTE PTR [rax],al
  435e94:	add    BYTE PTR [rax],al
  435e96:	add    BYTE PTR [rax],al
  435e98:	rex.RB jb 0x435f0d
  435e9b:	outs   dx,DWORD PTR ds:[rsi]
  435e9c:	jb     0x435ebe
  435e9e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  435ea1:	imul   sp,WORD PTR [rdi+0x75],0x6972
  435ea7:	outs   dx,BYTE PTR ds:[rsi]
  435ea8:	and    BYTE PTR [ebx+0x6f],ah
  435eac:	ins    DWORD PTR es:[rdi],dx
  435ead:	jo     0x435f1b
  435eaf:	gs js  0x435ed2
  435eb2:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  435eb9:	or     al,BYTE PTR cs:[rax]
  435ebc:	add    BYTE PTR [rax],al
  435ebe:	add    BYTE PTR [rax],al
  435ec0:	rex.WRXB jne 0x435f37
  435ec3:	jo     0x435f3a
  435ec5:	je     0x435ee7
  435ec7:	ja     0x435f32
  435ec9:	je     0x435f33
  435ecb:	and    BYTE PTR [rcx+riz*2+0x62],ch
  435ecf:	gs ins BYTE PTR es:[rdi],dx
  435ed1:	and    BYTE PTR [rdi],ah
  435ed3:	and    eax,0x64202773
  435ed8:	outs   dx,DWORD PTR ds:[rsi]
  435ed9:	gs jae 0x435efc
  435edc:	outs   dx,BYTE PTR ds:[rsi]
  435edd:	outs   dx,DWORD PTR ds:[rsi]
  435ede:	je     0x435f00
  435ee0:	gs js  0x435f4c
  435ee3:	jae    0x435f59
  435ee5:	and    BYTE PTR [rcx+0x6e],ch
  435ee8:	and    BYTE PTR [rcx+0x6e],ah
  435eeb:	jns    0x435f0d
  435eed:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  435ef5:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2072
  435efc:	addr32 jb 0x435f60
  435eff:	jo     0x435f69
  435f01:	sub    al,0x20
  435f03:	outs   dx,DWORD PTR ds:[rsi]
  435f04:	jb     0x435f26
  435f06:	ja     0x435f69
  435f08:	jae    0x435f2a
  435f0a:	(bad)  
  435f0b:	ins    BYTE PTR es:[rdi],dx
  435f0c:	jb     0x435f73
  435f0e:	(bad)  
  435f0f:	fs jns 0x435f32
  435f12:	jne    0x435f87
  435f14:	gs and BYTE PTR fs:[rbp+0x6c],ah
  435f19:	jae    0x435f80
  435f1b:	ja     0x435f85
  435f1d:	gs jb  0x435f85
  435f20:	or     al,BYTE PTR cs:[rax]
  435f23:	and    eax,0x6d252d59
  435f28:	sub    eax,0x25206425
  435f2d:	rex.W cmp spl,BYTE PTR [rip+0x53253a4d]        # 0x53689981
  435f34:	add    BYTE PTR [rax],al
  435f36:	add    BYTE PTR [rax],al
  435f38:	clc    
  435f39:	test   al,0xfd
  435f3b:	jmp    rcx
  435f3d:	test   al,0xfd
  435f3f:	(bad)  
  435f40:	mov    ebx,0x8dfffda8
  435f45:	test   al,0xfd
  435f47:	call   FWORD PTR [rcx+0x58fffd95]
  435f4d:	test   eax,0x3033fffd
  435f52:	xor    BYTE PTR [rax],dh
  435f54:	xor    BYTE PTR [rdi],ch
  435f56:	xor    DWORD PTR [rax],esi
  435f58:	xor    BYTE PTR [rcx],dh
  435f5a:	add    BYTE PTR [rdx],dh
  435f5c:	xor    al,0x30
  435f5e:	xor    BYTE PTR [rax],dh
  435f60:	(bad)  
  435f61:	xor    DWORD PTR [rax],esi
  435f63:	xor    BYTE PTR [rcx],dh
	...
  435f6d:	add    BYTE PTR [rax],al
  435f6f:	add    BYTE PTR [rbx],al
  435f71:	rex.R
  435f72:	rex.XB add BYTE PTR [r8],al
  435f75:	add    BYTE PTR [rax],al
  435f77:	add    BYTE PTR [rax+0x5f],dl
  435f7a:	rex.XB add BYTE PTR [r8],al
  435f7d:	add    BYTE PTR [rax],al
  435f7f:	add    BYTE PTR [rbx+0x5f],bl
  435f82:	rex.XB add BYTE PTR [r8],al
  435f85:	add    BYTE PTR [rax],al
  435f87:	add    BYTE PTR [rax+rax*1+0x73],cl
  435f8b:	push   0x6c20776f
  435f90:	imul   esp,DWORD PTR [rbx+0x65],0x65736e
  435f97:	push   0x6f687300
  435f9c:	ja     0x435fbe
  435f9e:	push   0x706c65
  435fa3:	je     0x436014
  435fa5:	jo     0x436010
  435fa7:	movsxd eax,DWORD PTR [rax]
  435fa9:	(bad)  
  435faa:	add    BYTE PTR [rax+0x65],ch
  435fad:	ins    BYTE PTR es:[rdi],dx
  435fae:	jo     0x435fb0
  435fb0:	sub    eax,0x706c6568
  435fb5:	add    BYTE PTR [rsi+0x65],dh
  435fb8:	jb     0x43602d
  435fba:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f687300
  435fc1:	ja     0x435fe3
  435fc3:	jbe    0x43602a
  435fc5:	jb     0x43603a
  435fc7:	imul   ebp,DWORD PTR [rdi+0x6e],0x69756200
  435fce:	ins    BYTE PTR es:[rdi],dx
  435fcf:	movsxd ebp,DWORD PTR fs:[rdi+0x6e]
  435fd3:	data16 add BYTE PTR [rbx+0x68],dh
  435fd7:	outs   dx,DWORD PTR ds:[rsi]
  435fd8:	ja     0x435ffa
  435fda:	(bad)  
  435fdb:	jne    0x436046
  435fdd:	ins    BYTE PTR es:[rdi],dx
  435fde:	and    BYTE PTR fs:[rbx+0x6f],ah
  435fe2:	outs   dx,BYTE PTR ds:[rsi]
  435fe3:	imul   sp,WORD PTR [rdi+0x75],0x6172
  435fe9:	je     0x436054
  435feb:	outs   dx,DWORD PTR ds:[rsi]
  435fec:	outs   dx,BYTE PTR ds:[rsi]
  435fed:	add    BYTE PTR [rsi+0x6f],ah
  435ff0:	jb     0x43605f
  435ff2:	(bad)  
  435ff3:	je     0x436068
  435ff5:	add    BYTE PTR [rbx+0x68],dh
  435ff8:	outs   dx,DWORD PTR ds:[rsi]
  435ff9:	ja     0x43601b
  435ffb:	(bad)  
  435ffc:	jbe    0x43605f
  435ffe:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  436006:	outs   dx,DWORD PTR ds:[rsi]
  436007:	jb     0x436076
  436009:	(bad)  
  43600a:	je     0x43607f
  43600c:	add    BYTE PTR [rbp+riz*2+0x76],ah
  436010:	imul   esp,DWORD PTR [rbx+0x65],0x68730073
  436017:	outs   dx,DWORD PTR ds:[rsi]
  436018:	ja     0x43603a
  43601a:	(bad)  
  43601b:	jbe    0x43607e
  43601d:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  436025:	gs jbe 0x436091
  436028:	movsxd esp,DWORD PTR [rbp+0x73]
  43602b:	add    BYTE PTR [rbx+0x6f],ah
  43602e:	fs movsxd esi,DWORD PTR gs:[rbx+0x0]
  436033:	jae    0x43609d
  436035:	outs   dx,DWORD PTR ds:[rsi]
  436036:	ja     0x436058
  436038:	(bad)  
  436039:	jbe    0x43609c
  43603b:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6320656c
  436043:	outs   dx,DWORD PTR ds:[rsi]
  436044:	fs movsxd esi,DWORD PTR gs:[rbx+0x0]
  436049:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43604e:	gs jb  0x4360c4
  436051:	add    BYTE PTR [rbx+0x68],dh
  436054:	outs   dx,DWORD PTR ds:[rsi]
  436055:	ja     0x436077
  436057:	(bad)  
  436058:	jbe    0x4360bb
  43605a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  436062:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  436066:	gs jb  0x4360dc
  436069:	add    BYTE PTR [rbp+0x6e],ah
  43606c:	movsxd ebp,DWORD PTR [rdi+0x64]
  43606f:	gs jb  0x4360e5
  436072:	add    BYTE PTR [rbx+0x68],dh
  436075:	outs   dx,DWORD PTR ds:[rsi]
  436076:	ja     0x436098
  436078:	(bad)  
  436079:	jbe    0x4360dc
  43607b:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6520656c
  436083:	outs   dx,BYTE PTR ds:[rsi]
  436084:	movsxd ebp,DWORD PTR [rdi+0x64]
  436087:	gs jb  0x4360fd
  43608a:	add    BYTE PTR [rdx+0x73],ah
  43608d:	data16 jae 0x436090
  436090:	jae    0x4360fa
  436092:	outs   dx,DWORD PTR ds:[rsi]
  436093:	ja     0x4360b5
  436095:	(bad)  
  436096:	jbe    0x4360f9
  436098:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6220656c
  4360a0:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x61657274
  4360a8:	ins    DWORD PTR es:[rdi],dx
  4360a9:	and    BYTE PTR [rsi+0x69],ah
  4360ac:	ins    BYTE PTR es:[rdi],dx
  4360ad:	je     0x436114
  4360af:	jb     0x436124
  4360b1:	add    BYTE PTR [rax+0x72],dh
  4360b4:	outs   dx,DWORD PTR ds:[rsi]
  4360b5:	je     0x436126
  4360b7:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4360ba:	jae    0x4360bc
  4360bc:	jae    0x436126
  4360be:	outs   dx,DWORD PTR ds:[rsi]
  4360bf:	ja     0x4360e1
  4360c1:	(bad)  
  4360c2:	jbe    0x436125
  4360c4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7020656c
  4360cc:	jb     0x43613d
  4360ce:	je     0x43613f
  4360d0:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4360d3:	jae    0x4360d5
  4360d5:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  4360dc:	add    BYTE PTR [rbx+0x68],dh
  4360df:	outs   dx,DWORD PTR ds:[rsi]
  4360e0:	ja     0x436102
  4360e2:	(bad)  
  4360e3:	jbe    0x436146
  4360e5:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  4360ed:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x70007372
  4360f5:	imul   edi,DWORD PTR [rax+0x5f],0x73746d66
  4360fc:	add    BYTE PTR [rbx+0x68],dh
  4360ff:	outs   dx,DWORD PTR ds:[rsi]
  436100:	ja     0x436122
  436102:	(bad)  
  436103:	jbe    0x436166
  436105:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7020656c
  43610d:	imul   edi,DWORD PTR [rax+0x65],0x6f66206c
  436114:	jb     0x436183
  436116:	(bad)  
  436117:	je     0x43618c
  436119:	add    BYTE PTR [rcx+riz*2+0x79],ch
  43611d:	outs   dx,DWORD PTR ds:[rsi]
  43611e:	jne    0x436194
  436120:	jae    0x436122
  436122:	jae    0x43618c
  436124:	outs   dx,DWORD PTR ds:[rsi]
  436125:	ja     0x436147
  436127:	jae    0x43619d
  436129:	(bad)  
  43612a:	outs   dx,BYTE PTR ds:[rsi]
  43612b:	fs (bad) 
  43612d:	jb     0x436193
  43612f:	and    BYTE PTR [rbx+0x68],ah
  436132:	(bad)  
  436133:	outs   dx,BYTE PTR ds:[rsi]
  436134:	outs   dx,BYTE PTR ds:[rsi]
  436135:	gs ins BYTE PTR es:[rdi],dx
  436137:	and    BYTE PTR [rcx+riz*2+0x79],ch
  43613b:	outs   dx,DWORD PTR ds:[rsi]
  43613c:	jne    0x4361b2
  43613e:	jae    0x436140
  436140:	jae    0x4361a3
  436142:	ins    DWORD PTR es:[rdi],dx
  436143:	jo     0x4361b1
  436145:	gs pop rdi
  436147:	ins    WORD PTR es:[rdi],dx
  436149:	je     0x4361be
  43614b:	add    BYTE PTR [rax],al
  43614d:	add    BYTE PTR [rax],al
  43614f:	add    BYTE PTR [rbx+0x68],dh
  436152:	outs   dx,DWORD PTR ds:[rsi]
  436153:	ja     0x436175
  436155:	(bad)  
  436156:	jbe    0x4361b9
  436158:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6120656c
  436160:	jne    0x4361c6
  436162:	imul   ebp,DWORD PTR [rdi+0x20],0x706d6173
  436169:	ins    BYTE PTR es:[rdi],dx
  43616a:	and    BYTE PTR gs:[rsi+0x6f],ah
  43616e:	jb     0x4361dd
  436170:	(bad)  
  436171:	je     0x4361e6
  436173:	add    BYTE PTR [rbx+0x6f],ah
  436176:	ins    BYTE PTR es:[rdi],dx
  436177:	outs   dx,DWORD PTR ds:[rsi]
  436178:	jb     0x4361ed
  43617a:	add    BYTE PTR [rbx+0x68],dh
  43617d:	outs   dx,DWORD PTR ds:[rsi]
  43617e:	ja     0x4361a0
  436180:	(bad)  
  436181:	jbe    0x4361e4
  436183:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6320656c
  43618b:	outs   dx,DWORD PTR ds:[rsi]
  43618c:	ins    BYTE PTR es:[rdi],dx
  43618d:	outs   dx,DWORD PTR ds:[rsi]
  43618e:	jb     0x4361b0
  436190:	outs   dx,BYTE PTR ds:[rsi]
  436191:	(bad)  
  436192:	ins    DWORD PTR es:[rdi],dx
  436193:	gs jae 0x436196
  436196:	ins    BYTE PTR es:[rdi],dx
  436197:	outs   dx,DWORD PTR ds:[rsi]
  436198:	ins    BYTE PTR es:[edi],dx
  43619a:	gs jbe 0x436202
  43619d:	ins    BYTE PTR es:[rdi],dx
  43619e:	add    BYTE PTR [rbx+0x65],dh
  4361a1:	je     0x4361c3
  4361a3:	ins    BYTE PTR es:[rdi],dx
  4361a4:	outs   dx,DWORD PTR ds:[rsi]
  4361a5:	addr32 imul ebp,DWORD PTR [esi+0x67],0x76656c20
  4361ae:	gs ins BYTE PTR es:[rdi],dx
  4361b0:	add    BYTE PTR [rdx+0x65],dh
  4361b3:	jo     0x436224
  4361b5:	jb     0x43622b
  4361b7:	add    BYTE PTR [rdi+0x65],ah
  4361ba:	outs   dx,BYTE PTR ds:[rsi]
  4361bb:	gs jb  0x43621f
  4361be:	je     0x436225
  4361c0:	and    BYTE PTR [rcx+0x20],ah
  4361c3:	jb     0x43622a
  4361c5:	jo     0x436236
  4361c7:	jb     0x43623d
  4361c9:	add    BYTE PTR [rbp+0x61],ch
  4361cc:	js     0x43622d
  4361ce:	(bad)  
  4361cf:	ins    BYTE PTR es:[rdi],dx
  4361d0:	ins    BYTE PTR es:[rdi],dx
  4361d1:	outs   dx,DWORD PTR ds:[rsi]
  4361d2:	movsxd eax,DWORD PTR [rax]
  4361d4:	add    BYTE PTR [rax],al
  4361d6:	add    BYTE PTR [rax],al
  4361d8:	jae    0x43623f
  4361da:	je     0x4361fc
  4361dc:	ins    DWORD PTR es:[rdi],dx
  4361dd:	(bad)  
  4361de:	js     0x436249
  4361e0:	ins    DWORD PTR es:[rdi],dx
  4361e1:	jne    0x436250
  4361e3:	and    BYTE PTR [rbx+0x69],dh
  4361e6:	jp     0x43624d
  4361e8:	and    BYTE PTR [rdi+0x66],ch
  4361eb:	and    BYTE PTR [rcx+0x20],ah
  4361ee:	jae    0x436259
  4361f0:	outs   dx,BYTE PTR ds:[rsi]
  4361f1:	ins    BYTE PTR es:[edi],dx
  4361f3:	and    BYTE PTR gs:[rcx+0x6c],ah
  4361f7:	ins    BYTE PTR es:[rdi],dx
  4361f8:	outs   dx,DWORD PTR ds:[rsi]
  4361f9:	movsxd esp,DWORD PTR [rcx+0x74]
  4361fc:	gs and BYTE PTR fs:[rdx+0x6c],ah
  436201:	outs   dx,DWORD PTR ds:[rsi]
  436202:	movsxd ebp,DWORD PTR [rbx+0x0]
  436205:	(bad)  
  436206:	jns    0x43627c
  436208:	gs jae 0x43620b
  43620b:	movsxd esi,DWORD PTR [rax+0x75]
  43620e:	data16 ins BYTE PTR es:[rdi],dx
  436210:	(bad)  
  436211:	addr32 jae 0x436214
  436214:	outs   dx,WORD PTR ds:[rsi]
  436216:	jb     0x43627b
  436218:	and    BYTE PTR gs:[rbx+0x70],dh
  43621c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  436220:	imul   esp,DWORD PTR [rbx+0x20],0x20757063
  436227:	data16 ins BYTE PTR es:[rdi],dx
  436229:	(bad)  
  43622a:	addr32 jae 0x43622d
  43622d:	push   0x5f656469
  436232:	(bad)
  436237:	jb     0x436239
  436239:	outs   dx,DWORD PTR fs:[rsi]
  43623b:	and    BYTE PTR [rsi+0x6f],ch
  43623e:	je     0x436260
  436240:	jae    0x4362aa
  436242:	outs   dx,DWORD PTR ds:[rsi]
  436243:	ja     0x436265
  436245:	jo     0x4362b9
  436247:	outs   dx,DWORD PTR ds:[rsi]
  436248:	addr32 jb 0x4362ac
  43624b:	ins    DWORD PTR es:[rdi],dx
  43624c:	and    BYTE PTR [rdx+0x61],ah
  43624f:	outs   dx,BYTE PTR ds:[rsi]
  436250:	outs   dx,BYTE PTR ds:[rsi]
  436251:	gs jb  0x436254
  436254:	jae    0x4362c5
  436256:	jne    0x4362ca
  436258:	movsxd esp,DWORD PTR [rbp+0x73]
  43625b:	add    BYTE PTR [rax],al
  43625d:	add    BYTE PTR [rax],al
  43625f:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  436263:	je     0x436285
  436265:	jae    0x4362d6
  436267:	jne    0x4362db
  436269:	movsxd esp,DWORD PTR [rbp+0x73]
  43626c:	and    BYTE PTR [rdi+0x66],ch
  43626f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  436273:	and    BYTE PTR [rcx+0x6e],ch
  436276:	jo     0x4362ed
  436278:	je     0x43629a
  43627a:	fs gs jbe 0x4362e7
  43627e:	movsxd esp,DWORD PTR [rbp+0x0]
  436281:	fs gs jbe 0x4362ee
  436285:	movsxd esp,DWORD PTR [rbp+0x0]
  436288:	jae    0x4362f3
  43628a:	outs   dx,BYTE PTR ds:[rsi]
  43628b:	imul   esi,DWORD PTR [rbx+0x0],0x0
  43628f:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  436293:	je     0x4362b5
  436295:	jae    0x436300
  436297:	outs   dx,BYTE PTR ds:[rsi]
  436298:	imul   esi,DWORD PTR [rbx+0x20],0x6f
  43629c:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4362a1:	and    BYTE PTR [rdi+0x75],ch
  4362a4:	je     0x436316
  4362a6:	jne    0x43631c
  4362a8:	and    BYTE PTR [rbp+riz*2+0x76],ah
  4362ac:	imul   esp,DWORD PTR [rbx+0x65],0x726f6600
  4362b3:	movsxd esp,DWORD PTR [rbp+0x20]
  4362b6:	outs   dx,WORD PTR ds:[rsi]
  4362b8:	jb     0x436327
  4362ba:	(bad)  
  4362bb:	je     0x4362bd
  4362bd:	ins    WORD PTR es:[rdi],dx
  4362bf:	je     0x4362c1
  4362c1:	jns    0x4362c3
  4362c3:	outs   dx,DWORD PTR ds:[rsi]
  4362c4:	jbe    0x43632b
  4362c6:	jb     0x43633f
  4362c8:	jb     0x436333
  4362ca:	je     0x436331
  4362cc:	and    BYTE PTR [rdi+0x75],ch
  4362cf:	je     0x436341
  4362d1:	jne    0x436347
  4362d3:	and    BYTE PTR [rsi+0x69],ah
  4362d6:	ins    BYTE PTR es:[rdi],dx
  4362d7:	gs jae 0x4362da
  4362da:	outs   dx,BYTE PTR ds:[rsi]
  4362db:	add    BYTE PTR [rsi+0x65],ch
  4362de:	jbe    0x436345
  4362e0:	jb     0x436302
  4362e2:	outs   dx,DWORD PTR ds:[rsi]
  4362e3:	jbe    0x43634a
  4362e5:	jb     0x43635e
  4362e7:	jb     0x436352
  4362e9:	je     0x436350
  4362eb:	and    BYTE PTR [rdi+0x75],ch
  4362ee:	je     0x436360
  4362f0:	jne    0x436366
  4362f2:	and    BYTE PTR [rsi+0x69],ah
  4362f5:	ins    BYTE PTR es:[rdi],dx
  4362f6:	gs jae 0x4362f9
  4362f9:	imul   esp,DWORD PTR [rdi+0x6e],0x5f65726f
  436300:	jne    0x436370
  436302:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  436306:	outs   dx,BYTE PTR ds:[rsi]
  436307:	add    BYTE PTR [rcx+0x67],cl
  43630a:	outs   dx,BYTE PTR ds:[rsi]
  43630b:	outs   dx,DWORD PTR ds:[rsi]
  43630c:	jb     0x436373
  43630e:	and    BYTE PTR [rbp+0x6e],dh
  436311:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  436315:	outs   dx,BYTE PTR ds:[rsi]
  436316:	and    BYTE PTR [rbx+0x74],dh
  436319:	jb     0x436380
  43631b:	(bad)  
  43631c:	ins    DWORD PTR es:[rdi],dx
  43631d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  436321:	gs jae 0x436324
  436324:	movsxd ebp,DWORD PTR [rdi+0x70]
  436327:	jns    0x436388
  436329:	jne    0x436399
  43632b:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43632f:	outs   dx,BYTE PTR ds:[rsi]
  436330:	add    BYTE PTR [rbx+0x6f],al
  436333:	jo     0x4363ae
  436335:	and    BYTE PTR [rbp+0x6e],dh
  436338:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43633c:	outs   dx,BYTE PTR ds:[rsi]
  43633d:	and    BYTE PTR [rbx+0x74],dh
  436340:	jb     0x4363a7
  436342:	(bad)  
  436343:	ins    DWORD PTR es:[rdi],dx
  436344:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  436348:	gs jae 0x43634b
  43634b:	movsxd eax,DWORD PTR [rax]
  43634d:	movsxd ebp,DWORD PTR [rdi+0x64]
  436350:	movsxd esp,DWORD PTR gs:[rax]
  436353:	outs   dx,BYTE PTR ds:[rsi]
  436354:	(bad)  
  436355:	ins    DWORD PTR es:[rdi],dx
  436356:	add    BYTE PTR gs:[rbx+0x6f],ah
  43635a:	fs movsxd eax,DWORD PTR gs:[rax]
  43635e:	jo     0x4363d2
  436360:	add    BYTE PTR gs:[rax+0x72],dh
  436364:	gs jae 0x4363cc
  436367:	je     0x436389
  436369:	outs   dx,BYTE PTR ds:[rsi]
  43636a:	(bad)  
  43636b:	ins    DWORD PTR es:[rdi],dx
  43636c:	add    BYTE PTR gs:[rax+0x72],dh
  436370:	gs jae 0x4363d8
  436373:	je     0x436375
  436375:	ins    DWORD PTR es:[rdi],dx
  436376:	(bad)  
  436377:	jo     0x436379
  436379:	jae    0x4363e0
  43637b:	je     0x43639d
  43637d:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  436384:	je     0x4363f8
  436386:	gs (bad) 
  436388:	ins    DWORD PTR es:[rdi],dx
  436389:	and    BYTE PTR [rbp+0x61],ch
  43638c:	jo     0x4363fe
  43638e:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  436395:	add    BYTE PTR [rax],al
  436397:	add    BYTE PTR [rbx+0x2d],bl
  43639a:	pop    rbp
  43639b:	imul   ebp,DWORD PTR [rsi+0x70],0x665f7475
  4363a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x3a5b6469
  4363aa:	jae    0x436420
  4363ac:	jb     0x436413
  4363ae:	(bad)  
  4363af:	ins    DWORD PTR es:[rdi],dx
  4363b0:	pop    rdi
  4363b1:	jae    0x436423
  4363b3:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4363b7:	imul   esp,DWORD PTR [rbp+0x72],0x732c5b5d
  4363be:	jns    0x43642e
  4363c0:	movsxd ebx,DWORD PTR [rdi+0x66]
  4363c3:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x3a5b6469
  4363cb:	jae    0x436441
  4363cd:	jb     0x436434
  4363cf:	(bad)  
  4363d0:	ins    DWORD PTR es:[rdi],dx
  4363d1:	pop    rdi
  4363d2:	jae    0x436444
  4363d4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4363d8:	imul   esp,DWORD PTR [rbp+0x72],0x6d005d5d
  4363df:	(bad)  
  4363e0:	jo     0x436441
  4363e2:	movsxd ebp,DWORD PTR [rax+0x61]
  4363e5:	outs   dx,BYTE PTR ds:[rsi]
  4363e6:	outs   dx,BYTE PTR ds:[rsi]
  4363e7:	gs ins BYTE PTR es:[rdi],dx
  4363e9:	add    BYTE PTR [rax],al
  4363eb:	add    BYTE PTR [rax],al
  4363ed:	add    BYTE PTR [rax],al
  4363ef:	add    BYTE PTR [rbp+0x61],ch
  4363f2:	jo     0x436414
  4363f4:	(bad)  
  4363f5:	outs   dx,BYTE PTR ds:[rsi]
  4363f6:	and    BYTE PTR [rcx+0x75],ah
  4363f9:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6e616863
  436401:	outs   dx,BYTE PTR ds:[rsi]
  436402:	gs ins BYTE PTR es:[rdi],dx
  436404:	and    BYTE PTR [rsi+0x72],ah
  436407:	outs   dx,DWORD PTR ds:[rsi]
  436408:	ins    DWORD PTR es:[rdi],dx
  436409:	and    BYTE PTR [rdi+0x6e],ch
  43640c:	and    BYTE PTR gs:[rbx+0x74],dh
  436410:	jb     0x436477
  436412:	(bad)  
  436413:	ins    DWORD PTR es:[rdi],dx
  436414:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  436418:	(bad)  
  436419:	outs   dx,BYTE PTR ds:[rsi]
  43641a:	outs   dx,DWORD PTR ds:[rsi]
  43641b:	je     0x436485
  43641d:	gs jb  0x436420
  436420:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x7473
  436427:	jb     0x43648e
  436429:	(bad)  
  43642a:	ins    DWORD PTR es:[rdi],dx
  43642b:	movsxd ebp,DWORD PTR cs:[rax+0x61]
  43642f:	outs   dx,BYTE PTR ds:[rsi]
  436430:	outs   dx,BYTE PTR ds:[rsi]
  436431:	gs ins BYTE PTR es:[rdi],dx
  436433:	pop    rbx
  436434:	cmp    dh,BYTE PTR [rbx+0x79]
  436437:	outs   dx,BYTE PTR ds:[rsi]
  436438:	movsxd esp,DWORD PTR [rsi+0x69]
  43643b:	ins    BYTE PTR es:[rdi],dx
  43643c:	gs cs jae 0x4364b9
  436440:	outs   dx,BYTE PTR ds:[rsi]
  436441:	movsxd esi,DWORD PTR [rbx+0x74]
  436444:	jb     0x4364ab
  436446:	(bad)  
  436447:	ins    DWORD PTR es:[rdi],dx
  436448:	pop    rbp
  436449:	add    BYTE PTR [rbp+0x61],ch
  43644c:	jo     0x4364ad
  43644e:	ins    DWORD PTR es:[rdi],dx
  43644f:	gs je  0x4364b3
  436452:	fs (bad) 
  436454:	je     0x4364b7
  436456:	add    BYTE PTR [rax],al
  436458:	jae    0x4364bf
  43645a:	je     0x43647c
  43645c:	ins    DWORD PTR es:[rdi],dx
  43645d:	gs je  0x4364c1
  436460:	fs (bad) 
  436462:	je     0x4364c5
  436464:	and    BYTE PTR [rcx+0x6e],ch
  436467:	outs   dx,WORD PTR ds:[rsi]
  436469:	jb     0x4364d8
  43646b:	(bad)  
  43646c:	je     0x4364d7
  43646e:	outs   dx,DWORD PTR ds:[rsi]
  43646f:	outs   dx,BYTE PTR ds:[rsi]
  436470:	and    BYTE PTR [rdi+0x66],ch
  436473:	and    BYTE PTR [rdi+0x75],ch
  436476:	je     0x4364de
  436478:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6d6f7266
  436480:	and    BYTE PTR [rcx+0x6e],ch
  436483:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x756f
  43648a:	je     0x4364f2
  43648c:	imul   ebp,DWORD PTR [rbp+riz*2+0x5b],0x74656d2c
  436494:	(bad)  
  436495:	fs (bad) 
  436497:	je     0x4364fa
  436499:	pop    rbp
  43649a:	cmp    ch,BYTE PTR [rcx+0x6e]
  43649d:	imul   bp,WORD PTR [rbp+riz*2+0x5b],0x6d2c
  4364a4:	gs je  0x436508
  4364a7:	fs (bad) 
  4364a9:	je     0x43650c
  4364ab:	pop    rbp
  4364ac:	add    BYTE PTR [rbp+0x61],ch
  4364af:	jo     0x436510
  4364b1:	movsxd ebp,DWORD PTR [rax+0x61]
  4364b4:	jo     0x43652a
  4364b6:	gs jb  0x43652c
  4364b9:	add    BYTE PTR [rbx+0x65],dh
  4364bc:	je     0x4364de
  4364be:	movsxd ebp,DWORD PTR [rax+0x61]
  4364c1:	jo     0x436537
  4364c3:	gs jb  0x436539
  4364c6:	and    BYTE PTR [rbp+0x61],ch
  4364c9:	jo     0x43653b
  4364cb:	imul   ebp,DWORD PTR [rsi+0x67],0x706e6900
  4364d2:	jne    0x436548
  4364d4:	pop    rdi
  4364d5:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6e69
  4364dc:	fs gs js 0x4364e0
  4364e0:	je     0x4364e2
  4364e2:	add    BYTE PTR [rax],al
  4364e4:	add    BYTE PTR [rax],al
  4364e6:	add    BYTE PTR [rax],al
  4364e8:	jb     0x43654f
  4364ea:	movsxd ebp,DWORD PTR [rdi+0x72]
  4364ed:	and    BYTE PTR fs:[rdi+0x72],ch
  4364f1:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4364f5:	outs   dx,BYTE PTR ds:[rsi]
  4364f6:	jae    0x43655b
  4364f8:	outs   dx,DWORD PTR ds:[rsi]
  4364f9:	fs and BYTE PTR gs:[rdx],ah
  4364fd:	fs jne 0x436572
  436500:	(bad)  
  436501:	je     0x43656c
  436503:	outs   dx,DWORD PTR ds:[rsi]
  436504:	outs   dx,BYTE PTR ds:[rsi]
  436505:	and    ah,BYTE PTR [rax]
  436507:	jae    0x43656e
  436509:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43650c:	fs jae 0x43652f
  43650f:	outs   dx,DWORD PTR ds:[rsi]
  436510:	data16 and BYTE PTR [rcx+0x75],ah
  436514:	imul   ebp,DWORD PTR fs:[rdi+0x2f],0x65646976
  43651c:	outs   dx,DWORD PTR ds:[rsi]
  43651d:	add    BYTE PTR [rdi+rbp*2+0x0],dh
  436521:	jb     0x436588
  436523:	movsxd ebp,DWORD PTR [rdi+0x72]
  436526:	and    BYTE PTR fs:[rdi+0x72],ch
  43652a:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43652e:	outs   dx,BYTE PTR ds:[rsi]
  43652f:	jae    0x436594
  436531:	outs   dx,DWORD PTR ds:[rsi]
  436532:	fs and BYTE PTR gs:[rbx+0x74],dh
  436537:	outs   dx,DWORD PTR ds:[rsi]
  436538:	jo     0x43655a
  43653a:	je     0x4365a5
  43653c:	ins    DWORD PTR es:[rdi],dx
  43653d:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  436542:	gs pop rdi
  436544:	jae    0x4365ba
  436546:	outs   dx,DWORD PTR ds:[rsi]
  436547:	jo     0x436549
  436549:	data16 jae 0x43654c
  43654c:	add    BYTE PTR [rax],al
  43654e:	add    BYTE PTR [rax],al
  436550:	jae    0x4365b7
  436552:	je     0x436574
  436554:	je     0x4365be
  436556:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
  43655b:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x20656c69
  436563:	jae    0x4365ce
  436565:	jp     0x4365cc
  436567:	and    BYTE PTR [rcx+0x6e],ch
  43656a:	and    BYTE PTR [rdx+0x79],ah
  43656d:	je     0x4365d4
  43656f:	jae    0x436571
  436571:	ins    BYTE PTR es:[rdi],dx
  436572:	imul   ebp,DWORD PTR [rbp+0x69],0x69735f74
  436579:	jp     0x4365e0
  43657b:	add    BYTE PTR [rbx+0x73],dh
  43657e:	add    BYTE PTR [rbx+0x65],dh
  436581:	je     0x4365a3
  436583:	je     0x4365ed
  436585:	and    BYTE PTR gs:[rbx+0x74],dh
  436589:	(bad)  
  43658a:	jb     0x436600
  43658c:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  436590:	and    BYTE PTR gs:[rdi+0x66],ch
  436594:	data16 jae 0x4365fc
  436597:	je     0x436599
  436599:	je     0x436604
  43659b:	ins    DWORD PTR es:[rdi],dx
  43659c:	gs pop rdi
  43659e:	outs   dx,DWORD PTR ds:[rsi]
  43659f:	data16 data16 add BYTE PTR [rbx+0x73],dh
  4365a4:	outs   dx,DWORD PTR gs:[rsi]
  4365a6:	data16 add BYTE PTR [rbx+0x65],dh
  4365aa:	je     0x4365cc
  4365ac:	je     0x436616
  4365ae:	and    BYTE PTR gs:[rbx+0x74],dh
  4365b2:	(bad)  
  4365b3:	jb     0x436629
  4365b5:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4365b9:	and    BYTE PTR gs:[rdi+0x66],ch
  4365bd:	data16 jae 0x436625
  4365c0:	je     0x4365e2
  4365c2:	jb     0x436629
  4365c4:	ins    BYTE PTR es:[rdi],dx
  4365c5:	(bad)  
  4365c6:	je     0x436631
  4365c8:	jbe    0x43662f
  4365ca:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4365ce:	rex.RB
  4365cf:	rex.WRXB
  4365d0:	rex.RX add BYTE PTR [rbx+0x65],r14b
  4365d4:	imul   ebx,DWORD PTR gs:[rdi+0x74],0x69
  4365d9:	ins    DWORD PTR es:[rdi],dx
  4365da:	gs jae 0x436651
  4365dd:	(bad)  
  4365de:	ins    DWORD PTR es:[rdi],dx
  4365df:	jo     0x4365e1
  4365e1:	add    BYTE PTR [rax],al
  4365e3:	add    BYTE PTR [rax],al
  4365e5:	add    BYTE PTR [rax],al
  4365e7:	add    BYTE PTR [rbp+0x6e],ah
  4365ea:	(bad)  
  4365eb:	(bad)  
  4365ec:	ins    BYTE PTR es:[rdi],dx
  4365ed:	gs (bad) 
  4365ef:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  4365f7:	jae    0x43665e
  4365f9:	imul   ebp,DWORD PTR gs:[rcx+0x6e],0x67
  4365fe:	and    BYTE PTR [rdx+0x79],ah
  436601:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  436605:	gs jae 0x43667c
  436608:	(bad)  
  436609:	ins    DWORD PTR es:[rdi],dx
  43660a:	jo     0x43662c
  43660c:	ja     0x436677
  43660e:	je     0x436678
  436610:	and    BYTE PTR [rip+0x61007373],ch        # 0x6143d989
  436616:	movsxd esp,DWORD PTR [rbx+0x75]
  436619:	jb     0x43667c
  43661b:	je     0x436682
  43661d:	pop    rdi
  43661e:	jae    0x436685
  436620:	imul   eax,DWORD PTR gs:[rax],0x0
  436624:	add    BYTE PTR [rax],al
  436626:	add    BYTE PTR [rax],al
  436628:	outs   dx,BYTE PTR gs:[rsi]
  43662a:	(bad)  
  43662b:	(bad)  
  43662c:	ins    BYTE PTR es:[rdi],dx
  43662d:	gs (bad) 
  43662f:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  436637:	(bad)  
  436638:	movsxd esp,DWORD PTR [rbx+0x75]
  43663b:	jb     0x43669e
  43663d:	je     0x4366a4
  43663f:	and    BYTE PTR [rbx+0x65],dh
  436642:	imul   ebp,DWORD PTR gs:[rcx+0x6e],0x67
  436647:	and    BYTE PTR [rdi+0x69],dh
  43664a:	je     0x4366b4
  43664c:	and    BYTE PTR [rip+0x69007373],ch        # 0x6943d9c5
  436652:	je     0x4366c7
  436654:	outs   dx,DWORD PTR ds:[rsi]
  436655:	data16 data16 jae 0x4366be
  436659:	je     0x43665b
  43665b:	jae    0x4366c2
  43665d:	je     0x43667f
  43665f:	je     0x4366c9
  436661:	and    BYTE PTR gs:[rcx+0x6e],ch
  436665:	jo     0x4366dc
  436667:	je     0x436689
  436669:	je     0x4366de
  43666b:	and    BYTE PTR [rdi+0x66],ch
  43666e:	data16 jae 0x4366d6
  436671:	je     0x436673
  436673:	imul   esi,DWORD PTR [rbx+rsi*2+0x73],0x656c6163
  43667b:	add    BYTE PTR [rbx+0x65],dh
  43667e:	je     0x4366a0
  436680:	je     0x4366ea
  436682:	and    BYTE PTR gs:[rcx+0x6e],ch
  436686:	jo     0x4366fd
  436688:	je     0x4366aa
  43668a:	je     0x4366ff
  43668c:	and    BYTE PTR [rbx+0x63],dh
  43668f:	(bad)  
  436690:	ins    BYTE PTR es:[rdi],dx
  436691:	add    BYTE PTR gs:[rbx+0x63],dh
  436695:	(bad)  
  436696:	ins    BYTE PTR es:[rdi],dx
  436697:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  43669c:	gs jae 0x436713
  43669f:	(bad)  
  4366a0:	ins    DWORD PTR es:[rdi],dx
  4366a1:	jo     0x4366a3
  4366a3:	add    BYTE PTR [rax],al
  4366a5:	add    BYTE PTR [rax],al
  4366a7:	add    BYTE PTR [rbx+0x65],dh
  4366aa:	je     0x4366cc
  4366ac:	je     0x436716
  4366ae:	and    BYTE PTR gs:[rdx+0x65],dh
  4366b2:	movsxd ebp,DWORD PTR [rdi+0x72]
  4366b5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6d697420
  4366bd:	gs jae 0x436734
  4366c0:	(bad)  
  4366c1:	ins    DWORD PTR es:[rdi],dx
  4366c2:	jo     0x4366e4
  4366c4:	sub    BYTE PTR [rdi],ah
  4366c6:	outs   dx,BYTE PTR ds:[rsi]
  4366c7:	outs   dx,DWORD PTR ds:[rsi]
  4366c8:	ja     0x4366f1
  4366ca:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4366ce:	jae    0x436735
  4366d0:	je     0x4366f2
  4366d2:	je     0x43673c
  4366d4:	and    BYTE PTR gs:[rbx+0x75],ah
  4366d8:	jb     0x43674c
  4366da:	outs   dx,BYTE PTR gs:[rsi]
  4366dc:	je     0x4366fe
  4366de:	je     0x436749
  4366e0:	ins    DWORD PTR es:[rdi],dx
  4366e1:	sub    DWORD PTR gs:[rax],eax
  4366e4:	je     0x43674f
  4366e6:	ins    DWORD PTR es:[rdi],dx
  4366e7:	add    BYTE PTR gs:[rcx+0x64],ah
  4366eb:	and    BYTE PTR fs:[rbp+0x65],ch
  4366ef:	je     0x436752
  4366f1:	fs (bad) 
  4366f3:	je     0x436756
  4366f5:	add    BYTE PTR [rbx+0x74],dh
  4366f8:	jb     0x436763
  4366fa:	outs   dx,BYTE PTR ds:[rsi]
  4366fb:	addr32 cmp eax,0x69727473
  436701:	outs   dx,BYTE PTR ds:[rsi]
  436702:	add    BYTE PTR [esi+eiz*2+0x72],ah
  436707:	(bad)  
  436708:	ins    DWORD PTR es:[rdi],dx
  436709:	gs jae 0x43670c
  43670c:	add    BYTE PTR [rax],al
  43670e:	add    BYTE PTR [rax],al
  436710:	jae    0x436777
  436712:	je     0x436734
  436714:	je     0x43677e
  436716:	and    BYTE PTR gs:[rsi+0x75],ch
  43671a:	ins    DWORD PTR es:[rdi],dx
  43671b:	(bad)  
  43671c:	gs jb  0x43673f
  43671f:	outs   dx,DWORD PTR ds:[rsi]
  436720:	data16 and BYTE PTR [rcx+riz*2+0x74],ah
  436725:	(bad)  
  436726:	and    BYTE PTR [rsi+0x72],ah
  436729:	(bad)  
  43672a:	ins    DWORD PTR es:[rdi],dx
  43672b:	gs jae 0x43674e
  43672e:	je     0x43679f
  436730:	and    BYTE PTR [rdi+0x75],ch
  436733:	je     0x4367a5
  436735:	jne    0x4367ab
  436737:	add    BYTE PTR [rsi+0x75],ch
  43673a:	ins    DWORD PTR es:[rdi],dx
  43673b:	(bad)  
  43673c:	gs jb  0x43673f
  43673f:	(bad)  
  436740:	outs   dx,BYTE PTR gs:[rsi]
  436742:	movsxd ebp,DWORD PTR [rax+0x6d]
  436745:	(bad)  
  436746:	jb     0x4367b3
  436748:	add    BYTE PTR [rcx+0x64],ah
  43674b:	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
  436750:	imul   ebp,DWORD PTR [rsi+0x67],0x6f662073
  436757:	jb     0x436779
  436759:	(bad)  
  43675a:	outs   dx,BYTE PTR gs:[rsi]
  43675c:	movsxd ebp,DWORD PTR [rax+0x6d]
  43675f:	(bad)  
  436760:	jb     0x4367cd
  436762:	imul   ebp,DWORD PTR [rsi+0x67],0x6e656200
  436769:	movsxd ebp,DWORD PTR [rax+0x6d]
  43676c:	(bad)  
  43676d:	jb     0x4367da
  43676f:	pop    rdi
  436770:	(bad)  
  436771:	ins    BYTE PTR es:[rdi],dx
  436772:	ins    BYTE PTR es:[rdi],dx
  436773:	add    BYTE PTR [rcx+0x64],ah
  436776:	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
  43677b:	imul   ebp,DWORD PTR [rsi+0x67],0x6f662073
  436782:	jb     0x4367a4
  436784:	gs (bad) 
  436786:	movsxd ebp,DWORD PTR [rax+0x20]
  436789:	je     0x4367ec
  43678b:	jae    0x4367f8
  43678d:	add    BYTE PTR [rax+0x72],dh
  436790:	outs   dx,DWORD PTR ds:[rsi]
  436791:	addr32 jb 0x4367f9
  436794:	jae    0x436809
  436796:	add    BYTE PTR [rax],al
  436798:	ja     0x43680c
  43679a:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x676f7270
  4367a2:	jb     0x436805
  4367a4:	ins    DWORD PTR es:[rdi],dx
  4367a5:	sub    eax,0x64616572
  4367aa:	(bad)  
  4367ab:	(bad)  
  4367ac:	ins    BYTE PTR es:[rdi],dx
  4367ad:	and    BYTE PTR gs:[rax+0x72],dh
  4367b1:	outs   dx,DWORD PTR ds:[rsi]
  4367b2:	addr32 jb 0x43681a
  4367b5:	jae    0x43682a
  4367b7:	and    BYTE PTR [rcx+0x6e],ch
  4367ba:	outs   dx,WORD PTR ds:[rsi]
  4367bc:	jb     0x43682b
  4367be:	(bad)  
  4367bf:	je     0x43682a
  4367c1:	outs   dx,DWORD PTR ds:[rsi]
  4367c2:	outs   dx,BYTE PTR ds:[rsi]
  4367c3:	add    BYTE PTR [rbp+0x72],dh
  4367c6:	ins    BYTE PTR es:[rdi],dx
  4367c7:	add    BYTE PTR [rbx+0x74],dh
  4367ca:	imul   ebp,DWORD PTR fs:[rsi+0x0],0x6e650000
  4367d2:	(bad)  
  4367d3:	(bad)  
  4367d4:	ins    BYTE PTR es:[rdi],dx
  4367d5:	and    BYTE PTR gs:[rdi+0x72],ch
  4367d9:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4367dd:	(bad)  
  4367de:	(bad)  
  4367df:	ins    BYTE PTR es:[rdi],dx
  4367e0:	and    BYTE PTR gs:[rcx+0x6e],ch
  4367e4:	je     0x43684b
  4367e6:	jb     0x436849
  4367e8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4367ec:	outs   dx,BYTE PTR ds:[rsi]
  4367ed:	and    BYTE PTR [rdi+0x6e],ch
  4367f0:	and    BYTE PTR [rbx+0x74],dh
  4367f3:	(bad)  
  4367f4:	outs   dx,BYTE PTR ds:[rsi]
  4367f5:	fs (bad) 
  4367f7:	jb     0x43685d
  4367f9:	and    BYTE PTR [rcx+0x6e],ch
  4367fc:	jo     0x436873
  4367fe:	je     0x436800
  436800:	je     0x43686b
  436802:	ins    DWORD PTR es:[rdi],dx
  436803:	gs ins BYTE PTR es:[rdi],dx
  436805:	imul   ebp,DWORD PTR [rbp+0x69],0x65730074
  43680c:	je     0x43682e
  43680e:	ins    DWORD PTR es:[rdi],dx
  43680f:	(bad)  
  436810:	js     0x436832
  436812:	jb     0x436889
  436814:	outs   dx,BYTE PTR ds:[rsi]
  436815:	je     0x436880
  436817:	ins    DWORD PTR es:[rdi],dx
  436818:	and    BYTE PTR gs:[rcx+0x6e],ch
  43681c:	and    BYTE PTR [rbx+0x65],dh
  43681f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  436822:	fs jae 0x436825
  436825:	ins    BYTE PTR es:[rdi],dx
  436826:	imul   ebp,DWORD PTR [rbp+0x69],0x75640074
  43682d:	ins    DWORD PTR es:[rdi],dx
  43682e:	jo     0x436830
  436830:	fs jne 0x4368a0
  436833:	jo     0x436855
  436835:	gs (bad) 
  436837:	movsxd ebp,DWORD PTR [rax+0x20]
  43683a:	imul   ebp,DWORD PTR [rsi+0x70],0x70207475
  436841:	(bad)  
  436842:	movsxd ebp,DWORD PTR [rbx+0x65]
  436845:	je     0x436847
  436847:	push   0x7865
  43684c:	add    BYTE PTR [rax],al
  43684e:	add    BYTE PTR [rax],al
  436850:	ja     0x4368ba
  436852:	outs   dx,BYTE PTR gs:[rsi]
  436854:	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  436858:	jo     0x4368c3
  43685a:	outs   dx,BYTE PTR ds:[rsi]
  43685b:	and    BYTE PTR [eax+0x61],dh
  43685f:	movsxd ebp,DWORD PTR [rbx+0x65]
  436862:	je     0x4368d7
  436864:	sub    al,0x20
  436866:	(bad)  
  436867:	ins    BYTE PTR es:[rdi],dx
  436868:	jae    0x4368d9
  43686a:	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  43686e:	jo     0x436890
  436870:	je     0x4368da
  436872:	and    BYTE PTR gs:[rax+0x61],dh
  436876:	jns    0x4368e4
  436878:	outs   dx,DWORD PTR ds:[rsi]
  436879:	(bad)  
  43687a:	add    BYTE PTR fs:[rdx+0x65],dh
  43687e:	add    BYTE PTR [rax],al
  436880:	jb     0x4368e7
  436882:	(bad)  
  436883:	and    BYTE PTR fs:[rcx+0x6e],ch
  436887:	jo     0x4368fe
  436889:	je     0x4368ab
  43688b:	(bad)  
  43688c:	je     0x4368ae
  43688e:	outs   dx,BYTE PTR ds:[rsi]
  43688f:	(bad)  
  436890:	je     0x4368fb
  436892:	jbe    0x4368f9
  436894:	and    BYTE PTR [rsi+0x72],ah
  436897:	(bad)  
  436898:	ins    DWORD PTR es:[rdi],dx
  436899:	and    BYTE PTR gs:[rdx+0x61],dh
  43689d:	je     0x436904
  43689f:	add    BYTE PTR [rcx+riz*2+0x72],dh
  4368a3:	addr32 gs je 0x4368a7
  4368a7:	add    BYTE PTR [rbx+0x70],dh
  4368aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4368ae:	jns    0x4368d0
  4368b0:	je     0x436913
  4368b2:	jb     0x43691b
  4368b4:	gs je  0x4368d7
  4368b7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7974
  4368be:	jo     0x436925
  4368c0:	and    BYTE PTR [rax],ch
  4368c2:	and    dh,BYTE PTR [rsi+0x63]
  4368c5:	and    ch,BYTE PTR fs:[rax+riz*1]
  4368c9:	and    dh,BYTE PTR [rbx+0x76]
  4368cc:	movsxd esp,DWORD PTR [rdx+riz*1+0x2c]
  4368d0:	and    BYTE PTR [rdx],ah
  4368d2:	fs jbe 0x436939
  4368d5:	and    ch,BYTE PTR [rax+riz*1]
  4368d8:	and    ah,BYTE PTR [rsi+rsi*2+0x22]
  4368dc:	and    BYTE PTR [rdi+0x72],ch
  4368df:	and    BYTE PTR [rdx],ah
  4368e1:	fs jbe 0x436919
  4368e4:	xor    BYTE PTR [rdx],ah
  4368e6:	and    BYTE PTR [rdi+0x69],dh
  4368e9:	je     0x436953
  4368eb:	and    BYTE PTR [rdi+0x70],ch
  4368ee:	je     0x436959
  4368f0:	outs   dx,DWORD PTR ds:[rsi]
  4368f1:	outs   dx,BYTE PTR ds:[rsi]
  4368f2:	(bad)  
  4368f3:	ins    BYTE PTR es:[rdi],dx
  4368f4:	and    BYTE PTR [rax+0x72],dh
  4368f7:	imul   di,WORD PTR gs:[rax+0x65],0x2073
  4368fe:	and    dh,BYTE PTR [rax+0x61]
  436901:	ins    BYTE PTR es:[rdi],dx
  436902:	sub    eax,0x22202c22
  436907:	outs   dx,BYTE PTR ds:[rsi]
  436908:	je     0x43697d
  43690a:	movsxd ebp,DWORD PTR [rip+0x726f2022]        # 0x72b28932
  436910:	and    BYTE PTR [rdx],ah
  436912:	imul   bp,WORD PTR [rbp+rbp*2+0x2d],0x2922
  436919:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  43691d:	add    BYTE PTR gs:[rsi+0x69],dh
  436921:	fs outs dx,DWORD PTR gs:[rsi]
  436924:	and    BYTE PTR [rbx+0x79],dh
  436927:	outs   dx,BYTE PTR ds:[rsi]
  436928:	movsxd esp,DWORD PTR [rax]
  43692a:	ins    DWORD PTR es:[rdi],dx
  43692b:	gs je  0x436996
  43692e:	outs   dx,DWORD PTR ds:[rsi]
  43692f:	add    BYTE PTR fs:[rsi+0x72],ah
  436933:	(bad)  
  436934:	ins    DWORD PTR es:[rdi],dx
  436935:	gs pop rdi
  436937:	fs jb  0x4369a9
  43693a:	jo     0x43699b
  43693c:	je     0x4369a6
  43693e:	jb     0x4369a5
  436940:	jae    0x4369aa
  436942:	outs   dx,DWORD PTR ds:[rsi]
  436943:	ins    BYTE PTR es:[rdi],dx
  436944:	add    BYTE PTR fs:[rsi+0x72],ah
  436948:	(bad)  
  436949:	ins    DWORD PTR es:[rdi],dx
  43694a:	and    BYTE PTR gs:[rdx+rsi*2+0x6f],ah
  43694f:	jo     0x436971
  436951:	je     0x4369bb
  436953:	jb     0x4369ba
  436955:	jae    0x4369bf
  436957:	outs   dx,DWORD PTR ds:[rsi]
  436958:	ins    BYTE PTR es:[rdi],dx
  436959:	add    BYTE PTR fs:[rcx+0x73],ah
  43695d:	jns    0x4369cd
  43695f:	movsxd eax,DWORD PTR [rax]
  436961:	(bad)  
  436962:	jne    0x4369c8
  436964:	imul   ebp,DWORD PTR [rdi+0x20],0x636e7973
  43696b:	and    BYTE PTR [rbp+0x65],ch
  43696e:	je     0x4369d8
  436970:	outs   dx,DWORD PTR ds:[rsi]
  436971:	add    BYTE PTR fs:[rcx+0x64],ah
  436975:	jb     0x4369e0
  436977:	data16 je 0x4369d9
  43697a:	je     0x4369e4
  43697c:	jb     0x4369e3
  43697e:	jae    0x4369e8
  436980:	outs   dx,DWORD PTR ds:[rsi]
  436981:	ins    BYTE PTR es:[rdi],dx
  436982:	add    BYTE PTR fs:[rcx+0x75],ah
  436986:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x66697264
  43698e:	je     0x4369b0
  436990:	je     0x4369fa
  436992:	jb     0x4369f9
  436994:	jae    0x4369fe
  436996:	outs   dx,DWORD PTR ds:[rsi]
  436997:	ins    BYTE PTR es:[rdi],dx
  436998:	add    BYTE PTR fs:[rax+rbp*2+0x72],dh
  43699d:	gs jae 0x436a08
  4369a0:	outs   dx,DWORD PTR ds:[rsi]
  4369a1:	ins    BYTE PTR es:[rdi],dx
  4369a2:	add    BYTE PTR fs:[rbx+0x6f],ah
  4369a6:	jo     0x436a21
  4369a8:	je     0x436a1d
  4369aa:	add    BYTE PTR [rbx+0x6f],ah
  4369ad:	jo     0x436a28
  4369af:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4369b3:	gs jae 0x436a2a
  4369b6:	(bad)  
  4369b7:	ins    DWORD PTR es:[rdi],dx
  4369b8:	jo     0x436a2d
  4369ba:	add    BYTE PTR [rbx+0x74],dh
  4369bd:	(bad)  
  4369be:	jb     0x436a34
  4369c0:	pop    rdi
  4369c1:	(bad)  
  4369c2:	je     0x436a23
  4369c4:	jp     0x436a2b
  4369c6:	jb     0x436a37
	...
  4369d0:	jae    0x436a3a
  4369d2:	imul   esp,DWORD PTR [rsi+0x74],0x706e6920
  4369d9:	jne    0x436a4f
  4369db:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4369df:	gs jae 0x436a56
  4369e2:	(bad)  
  4369e3:	ins    DWORD PTR es:[rdi],dx
  4369e4:	jo     0x436a59
  4369e6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4369ea:	jae    0x436a60
  4369ec:	(bad)  
  4369ed:	jb     0x436a63
  4369ef:	and    BYTE PTR [rcx+0x74],ah
  4369f2:	and    BYTE PTR [rax],dh
  4369f4:	and    BYTE PTR [rdi+0x68],dh
  4369f7:	outs   dx,BYTE PTR gs:[rsi]
  4369f9:	and    BYTE PTR [rbp+0x73],dh
  4369fc:	imul   ebp,DWORD PTR [rsi+0x67],0x706f6320
  436a03:	jns    0x436a79
  436a05:	jae    0x436a07
  436a07:	movsxd ebp,DWORD PTR [rdi+0x70]
  436a0a:	jns    0x436a80
  436a0c:	(bad)  
  436a0d:	add    BYTE PTR [rax],al
  436a0f:	add    BYTE PTR [rbx+0x6f],ah
  436a12:	jo     0x436a8d
  436a14:	and    BYTE PTR [rcx+0x6e],ch
  436a17:	jo     0x436a8e
  436a19:	je     0x436a3b
  436a1b:	jae    0x436a91
  436a1d:	jb     0x436a84
  436a1f:	(bad)  
  436a20:	ins    DWORD PTR es:[rdi],dx
  436a21:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  436a25:	and    BYTE PTR gs:[rdx+0x61],ah
  436a29:	jae    0x436a90
  436a2b:	and    BYTE PTR [rdi+0x68],dh
  436a2e:	outs   dx,BYTE PTR gs:[rsi]
  436a30:	and    BYTE PTR [rbx+0x74],dh
  436a33:	jb     0x436a9a
  436a35:	(bad)  
  436a36:	ins    DWORD PTR es:[rdi],dx
  436a37:	and    BYTE PTR [rbx+0x6f],ah
  436a3a:	jo     0x436ab5
  436a3c:	imul   ebp,DWORD PTR [rsi+0x67],0x646f6d00
  436a43:	add    BYTE PTR gs:[rbx+0x68],dh
  436a47:	outs   dx,DWORD PTR ds:[rsi]
  436a48:	jb     0x436abe
  436a4a:	gs jae 0x436ac1
  436a4d:	add    BYTE PTR [rax],al
  436a4f:	add    BYTE PTR [rsi+0x69],ah
  436a52:	outs   dx,BYTE PTR ds:[rsi]
  436a53:	imul   esi,DWORD PTR [rbx+0x68],0x636e6520
  436a5a:	outs   dx,DWORD PTR ds:[rsi]
  436a5b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74697720
  436a63:	push   0x73206e69
  436a68:	push   0x6574726f
  436a6d:	jae    0x436ae3
  436a6f:	and    BYTE PTR [rcx+0x6e],ch
  436a72:	jo     0x436ae9
  436a74:	je     0x436a76
  436a76:	(bad)  
  436a77:	jo     0x436ada
  436a79:	add    BYTE PTR fs:[rcx+0x75],ah
  436a7d:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x646170
  436a85:	fs je  0x436afb
  436a88:	pop    rdi
  436a89:	fs gs ins BYTE PTR es:[rdi],dx
  436a8c:	je     0x436aef
  436a8e:	pop    rdi
  436a8f:	je     0x436af9
  436a91:	jb     0x436af8
  436a93:	jae    0x436afd
  436a95:	outs   dx,DWORD PTR ds:[rsi]
  436a96:	ins    BYTE PTR es:[rdi],dx
  436a97:	add    BYTE PTR fs:[rax],al
  436a9a:	add    BYTE PTR [rax],al
  436a9c:	add    BYTE PTR [rax],al
  436a9e:	add    BYTE PTR [rax],al
  436aa0:	je     0x436b0b
  436aa2:	ins    DWORD PTR es:[rdi],dx
  436aa3:	gs jae 0x436b1a
  436aa6:	(bad)  
  436aa7:	ins    DWORD PTR es:[rdi],dx
  436aa8:	jo     0x436aca
  436aaa:	imul   esi,DWORD PTR fs:[rbx+0x63],0x69746e6f
  436ab2:	outs   dx,BYTE PTR ds:[rsi]
  436ab3:	jne    0x436b1e
  436ab5:	je     0x436b30
  436ab7:	and    BYTE PTR [rbp+riz*2+0x6c],ah
  436abb:	je     0x436b1e
  436abd:	and    BYTE PTR [rax+rbp*2+0x72],dh
  436ac1:	gs jae 0x436b2c
  436ac4:	outs   dx,DWORD PTR ds:[rsi]
  436ac5:	ins    BYTE PTR es:[rdi],dx
  436ac6:	add    BYTE PTR fs:[rsp+rsi*2+0x73],ah
  436acb:	pop    rdi
  436acc:	gs jb  0x436b41
  436acf:	outs   dx,DWORD PTR ds:[rsi]
  436ad0:	jb     0x436b31
  436ad2:	je     0x436b3c
  436ad4:	jb     0x436b3b
  436ad6:	jae    0x436b40
  436ad8:	outs   dx,DWORD PTR ds:[rsi]
  436ad9:	ins    BYTE PTR es:[rdi],dx
  436ada:	add    BYTE PTR fs:[rax],al
  436add:	add    BYTE PTR [rax],al
  436adf:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  436ae3:	gs jae 0x436b5a
  436ae6:	(bad)  
  436ae7:	ins    DWORD PTR es:[rdi],dx
  436ae8:	jo     0x436b0a
  436aea:	gs jb  0x436b5f
  436aed:	outs   dx,DWORD PTR ds:[rsi]
  436aee:	jb     0x436b10
  436af0:	fs gs ins BYTE PTR es:[rdi],dx
  436af3:	je     0x436b56
  436af5:	and    BYTE PTR [rax+rbp*2+0x72],dh
  436af9:	gs jae 0x436b64
  436afc:	outs   dx,DWORD PTR ds:[rsi]
  436afd:	ins    BYTE PTR es:[rdi],dx
  436afe:	add    BYTE PTR fs:[rax+0x65],bh
  436b02:	jb     0x436b76
  436b04:	outs   dx,DWORD PTR ds:[rsi]
  436b05:	jb     0x436b07
  436b07:	gs js  0x436b73
  436b0a:	je     0x436b2c
  436b0c:	outs   dx,DWORD PTR ds:[rsi]
  436b0d:	outs   dx,BYTE PTR ds:[rsi]
  436b0e:	and    BYTE PTR [rbp+0x72],ah
  436b11:	jb     0x436b82
  436b13:	jb     0x436b15
  436b15:	gs jb  0x436b8a
  436b18:	outs   dx,DWORD PTR ds:[rsi]
  436b19:	jb     0x436b1b
  436b1b:	movsxd ebp,DWORD PTR [rdi+0x70]
  436b1e:	jns    0x436b89
  436b20:	outs   dx,BYTE PTR ds:[rsi]
  436b21:	imul   esp,DWORD PTR [rsi+0x0],0x63
  436b25:	outs   dx,DWORD PTR ds:[rsi]
  436b26:	jo     0x436ba1
  436b28:	and    BYTE PTR [rcx+0x6e],ch
  436b2b:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6f6e206c
  436b33:	outs   dx,BYTE PTR ds:[rsi]
  436b34:	sub    eax,0x6679656b
  436b39:	jb     0x436b9c
  436b3b:	ins    DWORD PTR es:[rdi],dx
  436b3c:	gs jae 0x436b3f
  436b3f:	movsxd ebp,DWORD PTR [rdi+0x70]
  436b42:	jns    0x436bb4
  436b44:	jb     0x436baf
  436b46:	outs   dx,DWORD PTR ds:[rsi]
  436b47:	jb     0x436bbc
  436b49:	jae    0x436b4b
  436b4b:	add    BYTE PTR [rax],al
  436b4d:	add    BYTE PTR [rax],al
  436b4f:	add    BYTE PTR [rbx+0x6f],ah
  436b52:	jo     0x436bcd
  436b54:	and    BYTE PTR [rdi+0x72],ch
  436b57:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  436b5b:	movsxd esp,DWORD PTR [rcx+0x72]
  436b5e:	and    BYTE PTR fs:[rsi+0x72],ah
  436b62:	(bad)  
  436b63:	ins    DWORD PTR es:[rdi],dx
  436b64:	gs jae 0x436b87
  436b67:	(bad)  
  436b68:	outs   dx,WORD PTR gs:[rsi]
  436b6b:	jb     0x436bd2
  436b6d:	and    BYTE PTR [rbx+0x74],dh
  436b70:	(bad)  
  436b71:	jb     0x436be7
  436b73:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  436b77:	add    BYTE PTR gs:[rsi+0x72],ah
  436b7b:	(bad)  
  436b7c:	ins    DWORD PTR es:[rdi],dx
  436b7d:	gs jae 0x436b80
  436b80:	jae    0x436be7
  436b82:	je     0x436ba4
  436b84:	je     0x436bee
  436b86:	and    BYTE PTR gs:[rsi+0x75],ch
  436b8a:	ins    DWORD PTR es:[rdi],dx
  436b8b:	(bad)  
  436b8c:	gs jb  0x436baf
  436b8f:	outs   dx,DWORD PTR ds:[rsi]
  436b90:	data16 and BYTE PTR [rsi+0x72],ah
  436b94:	(bad)  
  436b95:	ins    DWORD PTR es:[rdi],dx
  436b96:	gs jae 0x436bb9
  436b99:	je     0x436c0a
  436b9b:	and    BYTE PTR [rdi+0x75],ch
  436b9e:	je     0x436c10
  436ba0:	jne    0x436c16
  436ba2:	add    BYTE PTR [rcx+riz*2+0x67],dh
  436ba6:	add    BYTE PTR [rsi+0x6f],ah
  436ba9:	jb     0x436c0e
  436bab:	and    BYTE PTR gs:[rbx+0x6f],ah
  436baf:	fs movsxd esp,DWORD PTR gs:[rax]
  436bb3:	je     0x436c16
  436bb5:	addr32 (bad) 
  436bb7:	outs   dx,WORD PTR ds:[rsi]
  436bb9:	jne    0x436c2d
  436bbb:	movsxd esp,DWORD PTR [rbx+0x0]
  436bbe:	outs   dx,WORD PTR ds:[rsi]
  436bc0:	jne    0x436c34
  436bc2:	movsxd esp,DWORD PTR [rbx+0x2f]
  436bc5:	je     0x436c28
  436bc7:	add    BYTE PTR [ecx+0x0],dh
  436bcb:	jne    0x436c40
  436bcd:	and    BYTE PTR gs:[rsi+0x69],ah
  436bd1:	js     0x436c38
  436bd3:	and    BYTE PTR fs:[rcx+0x75],dh
  436bd7:	(bad)  
  436bd8:	ins    BYTE PTR es:[rdi],dx
  436bd9:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6c616373
  436be1:	and    BYTE PTR gs:[rax],ch
  436be4:	push   rsi
  436be5:	rex.X push rdx
  436be7:	sub    DWORD PTR [rax],eax
  436be9:	jae    0x436c50
  436beb:	je     0x436c0d
  436bed:	jo     0x436c61
  436bef:	outs   dx,DWORD PTR ds:[rsi]
  436bf0:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6966
  436bf7:	ins    BYTE PTR es:[rdi],dx
  436bf8:	je     0x436c5f
  436bfa:	jb     0x436bfc
  436bfc:	jae    0x436c63
  436bfe:	je     0x436c20
  436c00:	jae    0x436c76
  436c02:	jb     0x436c69
  436c04:	(bad)  
  436c05:	ins    DWORD PTR es:[rdi],dx
  436c06:	and    BYTE PTR [rsi+0x69],ah
  436c09:	ins    BYTE PTR es:[rdi],dx
  436c0a:	je     0x436c71
  436c0c:	jb     0x436c75
  436c0e:	jb     0x436c71
  436c10:	jo     0x436c7a
  436c12:	add    BYTE PTR [rsi+0x69],ah
  436c15:	ins    BYTE PTR es:[rdi],dx
  436c16:	je     0x436c7d
  436c18:	jb     0x436c79
  436c1a:	addr32 jb 0x436c7e
  436c1d:	jo     0x436c87
  436c1f:	add    BYTE PTR [rsi+0x69],ah
  436c22:	ins    BYTE PTR es:[rdi],dx
  436c23:	je     0x436c8a
  436c25:	jb     0x436c86
  436c27:	jae    0x436c8c
  436c29:	jb     0x436c94
  436c2b:	jo     0x436ca1
  436c2d:	add    BYTE PTR [rax],al
  436c2f:	add    BYTE PTR [rdx+0x65],dh
  436c32:	(bad)  
  436c33:	and    BYTE PTR fs:[rbx+0x74],dh
  436c37:	jb     0x436c9e
  436c39:	(bad)  
  436c3a:	ins    DWORD PTR es:[rdi],dx
  436c3b:	and    BYTE PTR [rsi+0x69],ah
  436c3e:	ins    BYTE PTR es:[rdi],dx
  436c3f:	je     0x436ca6
  436c41:	jb     0x436caa
  436c43:	jb     0x436ca6
  436c45:	jo     0x436caf
  436c47:	and    BYTE PTR [rbp+riz*2+0x73],ah
  436c4b:	movsxd esi,DWORD PTR [rdx+0x69]
  436c4e:	jo     0x436cc4
  436c50:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
  436c57:	ins    DWORD PTR es:[rdi],dx
  436c58:	and    BYTE PTR [rcx+0x20],ah
  436c5b:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6572
  436c62:	imul   ebp,DWORD PTR [rsi+0x69],0x69665f74
  436c69:	ins    BYTE PTR es:[rdi],dx
  436c6a:	je     0x436cd1
  436c6c:	jb     0x436c6e
  436c6e:	add    BYTE PTR [rax],al
  436c70:	jb     0x436cd7
  436c72:	imul   ebp,DWORD PTR [rsi+0x69],0x69662074
  436c79:	ins    BYTE PTR es:[rdi],dx
  436c7a:	je     0x436ce1
  436c7c:	jb     0x436ce5
  436c7e:	jb     0x436ce1
  436c80:	jo     0x436cea
  436c82:	and    BYTE PTR [rdi+0x6e],ch
  436c85:	and    BYTE PTR [rcx+0x6e],ch
  436c88:	jo     0x436cff
  436c8a:	je     0x436cac
  436c8c:	jo     0x436cef
  436c8e:	jb     0x436cf1
  436c90:	ins    DWORD PTR es:[rdi],dx
  436c91:	gs je  0x436cf9
  436c94:	jb     0x436cb6
  436c96:	movsxd ebp,DWORD PTR [rax+0x61]
  436c99:	outs   dx,BYTE PTR ds:[rsi]
  436c9a:	addr32 gs jae 0x436c9e
  436c9e:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  436ca5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436ca8:	jo     0x436d16
  436caa:	gs js  0x436cad
  436cad:	movsxd esi,DWORD PTR [rdx+0x65]
  436cb0:	(bad)  
  436cb1:	je     0x436d18
  436cb3:	and    BYTE PTR [rcx+0x20],ah
  436cb6:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436cb9:	jo     0x436d27
  436cbb:	gs js  0x436cde
  436cbe:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6772
  436cc5:	jb     0x436d28
  436cc7:	jo     0x436d31
  436cc9:	add    BYTE PTR [rdi+0x72],ah
  436ccc:	(bad)  
  436ccd:	jo     0x436d37
  436ccf:	pop    rdi
  436cd0:	fs gs jae 0x436d37
  436cd4:	jb     0x436d3f
  436cd6:	jo     0x436d4c
  436cd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x76616c00
  436cdf:	imul   ax,WORD PTR [rax],0x6966
  436ce4:	ins    BYTE PTR es:[rdi],dx
  436ce5:	je     0x436d4c
  436ce7:	jb     0x436d48
  436ce9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  436cec:	jo     0x436d5a
  436cee:	gs js  0x436d50
  436cf1:	jae    0x436d56
  436cf3:	jb     0x436d5e
  436cf5:	jo     0x436d6b
  436cf7:	add    BYTE PTR [rdx+0x65],dh
  436cfa:	(bad)  
  436cfb:	and    BYTE PTR fs:[rbx+0x6f],ah
  436cff:	ins    DWORD PTR es:[rdi],dx
  436d00:	jo     0x436d6e
  436d02:	gs js  0x436d25
  436d05:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6772
  436d0c:	jb     0x436d6f
  436d0e:	jo     0x436d78
  436d10:	and    BYTE PTR [rbp+riz*2+0x73],ah
  436d14:	movsxd esi,DWORD PTR [rdx+0x69]
  436d17:	jo     0x436d8d
  436d19:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
  436d20:	ins    DWORD PTR es:[rdi],dx
  436d21:	and    BYTE PTR [rcx+0x20],ah
  436d24:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  436d2b:	add    BYTE PTR [rax],al
  436d2d:	add    BYTE PTR [rax],al
  436d2f:	add    BYTE PTR [rax+0x72],dh
  436d32:	imul   ebp,DWORD PTR [rsi+0x74],0x6f727020
  436d39:	addr32 jb 0x436da1
  436d3c:	jae    0x436db1
  436d3e:	and    BYTE PTR [rdx+0x65],dh
  436d41:	jo     0x436db2
  436d43:	jb     0x436db9
  436d45:	and    BYTE PTR [rbp+rsi*2+0x72],ah
  436d49:	imul   ebp,DWORD PTR [rsi+0x67],0x636e6520
  436d50:	outs   dx,DWORD PTR ds:[rsi]
  436d51:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74746100
  436d59:	(bad)  
  436d5a:	movsxd ebp,DWORD PTR [rax+0x0]
  436d5d:	add    BYTE PTR [rax],al
  436d5f:	add    BYTE PTR [rcx+0x64],ah
  436d62:	and    BYTE PTR fs:[rcx+0x6e],ah
  436d66:	and    BYTE PTR [rcx+0x74],ah
  436d69:	je     0x436dcc
  436d6b:	movsxd ebp,DWORD PTR [rax+0x6d]
  436d6e:	outs   dx,BYTE PTR gs:[rsi]
  436d70:	je     0x436d92
  436d72:	je     0x436de3
  436d74:	and    BYTE PTR [rax+rbp*2+0x65],dh
  436d78:	and    BYTE PTR [rdi+0x75],ch
  436d7b:	je     0x436ded
  436d7d:	jne    0x436df3
  436d7f:	and    BYTE PTR [rsi+0x69],ah
  436d82:	ins    BYTE PTR es:[rdi],dx
  436d83:	add    BYTE PTR gs:[rbp+rsi*2+0x6d],ah
  436d88:	jo     0x436de9
  436d8a:	(bad)  
  436d8b:	je     0x436e01
  436d8d:	(bad)  
  436d8e:	movsxd ebp,DWORD PTR [rax+0x6d]
  436d91:	outs   dx,BYTE PTR gs:[rsi]
  436d93:	je     0x436d95
  436d95:	add    BYTE PTR [rax],al
  436d97:	add    BYTE PTR [rbp+0x78],ah
  436d9a:	je     0x436e0e
  436d9c:	(bad)  
  436d9d:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  436da1:	outs   dx,BYTE PTR ds:[rsi]
  436da2:	and    BYTE PTR [rcx+0x74],ah
  436da5:	je     0x436e08
  436da7:	movsxd ebp,DWORD PTR [rax+0x6d]
  436daa:	outs   dx,BYTE PTR gs:[rsi]
  436dac:	je     0x436dce
  436dae:	imul   ebp,DWORD PTR [rsi+0x74],0x2061206f
  436db5:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6564
  436dbc:	(bad)  
  436dbd:	jne    0x436e26
  436dbf:	pop    rdi
  436dc0:	je     0x436e35
  436dc2:	add    BYTE PTR [rax],al
  436dc4:	add    BYTE PTR [rax],al
  436dc6:	add    BYTE PTR [rax],al
  436dc8:	jo     0x436e3c
  436dca:	imul   ebp,DWORD PTR [rsi+0x74],0x6d697420
  436dd1:	gs jae 0x436e48
  436dd4:	(bad)  
  436dd5:	ins    DWORD PTR es:[rdi],dx
  436dd6:	jo     0x436df8
  436dd8:	fs gs (bad) 
  436ddb:	jne    0x436e44
  436ddd:	imul   ebp,DWORD PTR [esi+0x67],0x666e6920
  436de5:	outs   dx,DWORD PTR ds:[rsi]
  436de6:	add    BYTE PTR [rbp+0x61],ch
  436de9:	js     0x436e4a
  436deb:	gs jb  0x436e60
  436dee:	outs   dx,DWORD PTR ds:[rsi]
  436def:	jb     0x436e50
  436df1:	jb     0x436e54
  436df3:	je     0x436e5a
  436df5:	add    BYTE PTR [rbp+0x61],ch
  436df8:	js     0x436e63
  436dfa:	ins    DWORD PTR es:[rdi],dx
  436dfb:	jne    0x436e6a
  436dfd:	and    BYTE PTR [rbp+0x72],ah
  436e00:	jb     0x436e71
  436e02:	jb     0x436e24
  436e04:	jb     0x436e67
  436e06:	je     0x436e6d
	...
  436e10:	jb     0x436e73
  436e12:	je     0x436e7d
  436e14:	outs   dx,DWORD PTR ds:[rsi]
  436e15:	and    BYTE PTR [rdi+0x66],ch
  436e18:	and    BYTE PTR [rbp+0x72],ah
  436e1b:	jb     0x436e8c
  436e1d:	jb     0x436e92
  436e1f:	and    BYTE PTR [rax],ch
  436e21:	xor    BYTE PTR [rsi],ch
  436e23:	xor    BYTE PTR [rdx],bh
  436e25:	and    BYTE PTR [rsi+0x6f],ch
  436e28:	and    BYTE PTR [rbp+0x72],ah
  436e2b:	jb     0x436e9c
  436e2d:	jb     0x436ea2
  436e2f:	sub    al,0x20
  436e31:	xor    DWORD PTR [rsi],ebp
  436e33:	xor    BYTE PTR [rdx],bh
  436e35:	and    BYTE PTR [rcx],dh
  436e37:	xor    BYTE PTR [rax],dh
  436e39:	and    eax,0x72726520
  436e3e:	outs   dx,DWORD PTR ds:[rsi]
  436e3f:	jb     0x436eb4
  436e41:	sub    DWORD PTR [rax],esp
  436e43:	(bad)  
  436e44:	(bad)  
  436e45:	outs   dx,DWORD PTR ds:[rsi]
  436e46:	jbe    0x436ead
  436e48:	and    BYTE PTR [rdi+0x68],dh
  436e4b:	imul   esp,DWORD PTR [rbx+0x68],0x6d666620
  436e52:	jo     0x436eb9
  436e54:	and    BYTE PTR [edx+0x65],dh
  436e58:	je     0x436ecf
  436e5a:	jb     0x436eca
  436e5c:	jae    0x436e7e
  436e5e:	(bad)  
  436e5f:	outs   dx,BYTE PTR ds:[rsi]
  436e60:	and    BYTE PTR [rbp+0x72],ah
  436e63:	jb     0x436ed4
  436e65:	jb     0x436e87
  436e67:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  436e6e:	and    BYTE PTR [rdi+0x66],ch
  436e71:	and    BYTE PTR [rbx+0x75],dh
  436e74:	movsxd esp,DWORD PTR [rbx+0x65]
  436e77:	jae    0x436eec
  436e79:	add    BYTE PTR cs:[rcx+rbp*2+0x73],ah
  436e7e:	movsxd esp,DWORD PTR [rcx+0x72]
  436e81:	add    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  436e86:	jo     0x436ef7
  436e88:	jae    0x436ef3
  436e8a:	je     0x436ef5
  436e8c:	outs   dx,DWORD PTR ds:[rsi]
  436e8d:	outs   dx,BYTE PTR ds:[rsi]
  436e8e:	add    BYTE PTR [rax+rbp*2+0x72],dh
  436e92:	gs (bad) 
  436e94:	fs pop rdi
  436e96:	jno    0x436f0d
  436e98:	gs jne 0x436f00
  436e9b:	pop    rdi
  436e9c:	jae    0x436f07
  436e9e:	jp     0x436f05
	...
  436ea8:	jae    0x436f0f
  436eaa:	je     0x436ecc
  436eac:	je     0x436f16
  436eae:	and    BYTE PTR gs:[rbp+0x61],ch
  436eb2:	js     0x436f1d
  436eb4:	ins    DWORD PTR es:[rdi],dx
  436eb5:	jne    0x436f24
  436eb7:	and    BYTE PTR [rsi+0x75],ch
  436eba:	ins    DWORD PTR es:[rdi],dx
  436ebb:	(bad)  
  436ebc:	gs jb  0x436edf
  436ebf:	outs   dx,DWORD PTR ds:[rsi]
  436ec0:	data16 and BYTE PTR [rcx+0x75],dh
  436ec4:	gs jne 0x436f2c
  436ec7:	and    BYTE PTR fs:[rax+0x61],dh
  436ecb:	movsxd ebp,DWORD PTR [rbx+0x65]
  436ece:	je     0x436f43
  436ed0:	and    BYTE PTR [rsi+0x72],ah
  436ed3:	outs   dx,DWORD PTR ds:[rsi]
  436ed4:	ins    DWORD PTR es:[rdi],dx
  436ed5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  436ed9:	and    BYTE PTR [rbp+riz*2+0x6d],ah
  436edd:	jne    0x436f57
  436edf:	gs jb  0x436ee2
  436ee2:	jbe    0x436f4a
  436ee4:	jb     0x436f47
  436ee6:	ins    DWORD PTR es:[rdi],dx
  436ee7:	gs jae 0x436eea
  436eea:	add    BYTE PTR [rax],al
  436eec:	add    BYTE PTR [rax],al
  436eee:	add    BYTE PTR [rax],al
  436ef0:	jae    0x436f57
  436ef2:	je     0x436f14
  436ef4:	je     0x436f5e
  436ef6:	and    BYTE PTR gs:[rsi+0x75],ch
  436efa:	ins    DWORD PTR es:[rdi],dx
  436efb:	(bad)  
  436efc:	gs jb  0x436f1f
  436eff:	outs   dx,DWORD PTR ds:[rsi]
  436f00:	data16 and BYTE PTR [rsi+0x69],dh
  436f04:	fs outs dx,DWORD PTR gs:[rsi]
  436f07:	and    BYTE PTR [rsi+0x72],ah
  436f0a:	(bad)  
  436f0b:	ins    DWORD PTR es:[rdi],dx
  436f0c:	gs jae 0x436f2f
  436f0f:	je     0x436f80
  436f11:	and    BYTE PTR [rdi+0x75],ch
  436f14:	je     0x436f86
  436f16:	jne    0x436f8c
	...
  436f20:	jae    0x436f87
  436f22:	je     0x436f44
  436f24:	data16 jb 0x436f88
  436f27:	ins    DWORD PTR es:[rdi],dx
  436f28:	and    BYTE PTR gs:[rdx+0x61],dh
  436f2c:	je     0x436f93
  436f2e:	and    BYTE PTR [rax],ch
  436f30:	rex.W jp 0x436f53
  436f33:	jbe    0x436f96
  436f35:	ins    BYTE PTR es:[rdi],dx
  436f36:	jne    0x436f9d
  436f38:	sub    al,0x20
  436f3a:	data16 jb 0x436f9e
  436f3d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  436f41:	outs   dx,BYTE PTR ds:[rsi]
  436f42:	and    BYTE PTR [rdi+0x72],ch
  436f45:	and    BYTE PTR [rcx+0x62],ah
  436f48:	(bad)
  436f4d:	(bad)  
  436f4e:	je     0x436fb9
  436f50:	outs   dx,DWORD PTR ds:[rsi]
  436f51:	outs   dx,BYTE PTR ds:[rsi]
  436f52:	sub    DWORD PTR [rax],eax
  436f54:	jb     0x436fb7
  436f56:	je     0x436fbd
	...
  436f60:	jae    0x436fc7
  436f62:	je     0x436f84
  436f64:	data16 jb 0x436fc8
  436f67:	ins    DWORD PTR es:[rdi],dx
  436f68:	and    BYTE PTR gs:[rbx+0x69],dh
  436f6c:	jp     0x436fd3
  436f6e:	and    BYTE PTR [rax],ch
  436f70:	push   rdi
  436f71:	js     0x436fbb
  436f73:	and    BYTE PTR [rdi+0x72],ch
  436f76:	and    BYTE PTR [rcx+0x62],ah
  436f79:	(bad)
  436f7e:	(bad)  
  436f7f:	je     0x436fea
  436f81:	outs   dx,DWORD PTR ds:[rsi]
  436f82:	outs   dx,BYTE PTR ds:[rsi]
  436f83:	sub    DWORD PTR [rax],eax
  436f85:	jae    0x436ff0
  436f87:	jp     0x436fee
  436f89:	add    BYTE PTR [rcx+0x73],ah
  436f8c:	jo     0x436ff3
  436f8e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  436f92:	add    BYTE PTR [rax],al
  436f94:	add    BYTE PTR [rax],al
  436f96:	add    BYTE PTR [rax],al
  436f98:	jae    0x436fff
  436f9a:	je     0x436fbc
  436f9c:	(bad)  
  436f9d:	jae    0x43700f
  436f9f:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x72]
  436fa4:	(bad)  
  436fa5:	je     0x437010
  436fa7:	outs   dx,DWORD PTR ds:[rsi]
  436fa8:	and    BYTE PTR [rax],ch
  436faa:	xor    al,0x3a
  436fac:	xor    ebp,DWORD PTR [rax+riz*1]
  436faf:	xor    DWORD PTR [rsi],esi
  436fb1:	cmp    bh,BYTE PTR [rcx]
  436fb3:	and    BYTE PTR [rdi+0x72],ch
  436fb6:	and    BYTE PTR [rcx],dh
  436fb8:	xor    esi,DWORD PTR cs:[rbx]
  436fbb:	xor    esi,DWORD PTR [rbx]
  436fbd:	sub    al,0x20
  436fbf:	xor    DWORD PTR [rsi],ebp
  436fc1:	(bad)  
  436fc2:	(bad)  
  436fc3:	(bad)  
  436fc4:	(bad)  
  436fc5:	sub    DWORD PTR [rax],eax
  436fc7:	jae    0x43702e
  436fc9:	je     0x436feb
  436fcb:	jo     0x437036
  436fcd:	js     0x437034
  436fcf:	ins    BYTE PTR es:[rdi],dx
  436fd0:	and    BYTE PTR [rsi+0x6f],ah
  436fd3:	jb     0x437042
  436fd5:	(bad)  
  436fd6:	je     0x436fd8
  436fd8:	outs   dx,WORD PTR ds:[rsi]
  436fda:	jb     0x437049
  436fdc:	(bad)  
  436fdd:	je     0x436fdf
  436fdf:	(bad)  
  436fe0:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  436fe8:	jb     0x43704b
  436fea:	ja     0x43704b
  436fec:	jae    0x43704f
  436fee:	ins    DWORD PTR es:[rdi],dx
  436fef:	jo     0x43705d
  436ff1:	add    BYTE PTR gs:[rax],al
  436ff4:	add    BYTE PTR [rax],al
  436ff6:	add    BYTE PTR [rax],al
  436ff8:	jae    0x43705f
  436ffa:	je     0x43701c
  436ffc:	je     0x437066
  436ffe:	and    BYTE PTR gs:[rsi+0x75],ch
  437002:	ins    DWORD PTR es:[rdi],dx
  437003:	(bad)  
  437004:	gs jb  0x437027
  437007:	outs   dx,DWORD PTR ds:[rsi]
  437008:	data16 and BYTE PTR [rdx+0x69],ah
  43700c:	je     0x437081
  43700e:	and    BYTE PTR [rax+0x65],dh
  437011:	jb     0x437033
  437013:	jb     0x437076
  437015:	ja     0x437037
  437017:	jae    0x43707a
  437019:	ins    DWORD PTR es:[rdi],dx
  43701a:	jo     0x437088
  43701c:	add    BYTE PTR gs:[rcx+0x6e],ch
  437020:	je     0x437094
  437022:	(bad)  
  437023:	add    BYTE PTR [rbp+riz*2+0x70],ah
  437027:	jb     0x43708e
  437029:	movsxd esp,DWORD PTR [rcx+0x74]
  43702c:	gs and BYTE PTR fs:[rbp+0x73],dh
  437031:	and    BYTE PTR gs:[rip+0x312067],ch        # 0x74909f
  437038:	jbe    0x4370a8
  43703a:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  43703e:	(bad)  
  43703f:	(bad)  
  437040:	ins    BYTE PTR es:[rdi],dx
  437041:	and    BYTE PTR gs:[rsi+0x69],dh
  437045:	fs outs dx,DWORD PTR gs:[rsi]
  437048:	add    BYTE PTR [rdx+0x63],dh
  43704b:	pop    rdi
  43704c:	outs   dx,DWORD PTR ds:[rsi]
  43704d:	jbe    0x4370b4
  43704f:	jb     0x4370c3
  437051:	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x72000000
  437059:	(bad)  
  43705a:	je     0x4370c1
  43705c:	and    BYTE PTR [rbx+0x6f],ah
  43705f:	outs   dx,BYTE PTR ds:[rsi]
  437060:	je     0x4370d4
  437062:	outs   dx,DWORD PTR ds:[rsi]
  437063:	ins    BYTE PTR es:[rdi],dx
  437064:	and    BYTE PTR [rdi+0x76],ch
  437067:	gs jb  0x4370dc
  43706a:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
  437072:	jae    0x4370e4
  437074:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  437078:	imul   esp,DWORD PTR [rbx+0x20],0x65746e69
  43707f:	jb     0x4370f7
  437081:	(bad)  
  437082:	ins    BYTE PTR es:[rdi],dx
  437083:	jae    0x437085
  437085:	outs   dx,DWORD PTR ds:[rsi]
  437086:	jbe    0x4370ed
  437088:	jb     0x4370fc
  43708a:	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x6f660000
  437092:	jb     0x4370f7
  437094:	and    BYTE PTR gs:[rsi+0x69],dh
  437098:	fs outs dx,DWORD PTR gs:[rsi]
  43709b:	and    BYTE PTR [rbx+0x6f],ah
  43709e:	fs movsxd esp,DWORD PTR gs:[rax]
  4370a2:	sub    BYTE PTR [rdi],ah
  4370a4:	movsxd ebp,DWORD PTR [rdi+0x70]
  4370a7:	jns    0x4370d0
  4370a9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4370ad:	movsxd ebp,DWORD PTR [rdi+0x70]
  4370b0:	jns    0x4370d2
  4370b2:	jae    0x437128
  4370b4:	jb     0x43711b
  4370b6:	(bad)  
  4370b7:	ins    DWORD PTR es:[rdi],dx
  4370b8:	sub    DWORD PTR [rax],eax
  4370ba:	jae    0x43711d
  4370bc:	ins    DWORD PTR es:[rdi],dx
  4370bd:	gs jno 0x4370c0
  4370c0:	push   rdx
  4370c1:	gs ins DWORD PTR es:[rdi],dx
  4370c3:	outs   dx,DWORD PTR ds:[rsi]
  4370c4:	jbe    0x43712b
  4370c6:	add    BYTE PTR fs:[rbx+0x61],dh
  4370ca:	ins    DWORD PTR es:[rdi],dx
  4370cb:	gs pop rdi
  4370cd:	jno    0x437144
  4370cf:	(bad)  
  4370d0:	outs   dx,BYTE PTR ds:[rsi]
  4370d1:	je     0x4370d3
  4370d3:	je     0x43713e
  4370d5:	ins    DWORD PTR es:[rdi],dx
  4370d6:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4370da:	add    BYTE PTR gs:[rbx+0x65],dh
  4370de:	je     0x437100
  4370e0:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  4370e7:	and    BYTE PTR [rcx+rbp*2+0x6d],dl
  4370eb:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4370ee:	fs and BYTE PTR gs:[rsi+0x61],dh
  4370f3:	ins    BYTE PTR es:[rdi],dx
  4370f4:	jne    0x43715b
  4370f6:	add    BYTE PTR cs:[rax+0x68],ch
  4370fa:	cmp    ch,BYTE PTR [rbp+0x6d]
  4370fd:	cmp    dh,BYTE PTR [rbx+0x73]
  437100:	pop    rbx
  437101:	cmp    bh,BYTE PTR [rbx]
  437103:	cs pop rbp
  437105:	data16 data16 add BYTE PTR [rax+0x61],dh
  43710a:	jae    0x43717f
  43710c:	add    BYTE PTR [rax],al
  43710e:	add    BYTE PTR [rax],al
  437110:	jae    0x437177
  437112:	ins    BYTE PTR es:[rdi],dx
  437113:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  437118:	push   0x61702065
  43711d:	jae    0x437192
  43711f:	and    BYTE PTR [rsi+0x75],ch
  437122:	ins    DWORD PTR es:[rdi],dx
  437123:	(bad)  
  437124:	gs jb  0x437147
  437127:	sub    BYTE PTR [rcx],dh
  437129:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43712d:	xor    ebp,DWORD PTR [rcx]
  43712f:	add    BYTE PTR [rax+0x61],dh
  437132:	jae    0x4371a7
  437134:	ins    BYTE PTR es:[rdi],dx
  437135:	outs   dx,DWORD PTR ds:[rsi]
  437136:	imul   bp,WORD PTR [ebp+eiz*2+0x0],0x0
  43713e:	add    BYTE PTR [rax],al
  437140:	jae    0x4371a7
  437142:	ins    BYTE PTR es:[rdi],dx
  437143:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  437148:	ja     0x4371b9
  43714a:	and    BYTE PTR [rax+0x61],dh
  43714d:	jae    0x4371c2
  43714f:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  437153:	and    BYTE PTR [rsi+0x69],ah
  437156:	ins    BYTE PTR es:[rdi],dx
  437157:	and    BYTE PTR gs:[rsi+0x61],ch
  43715b:	ins    DWORD PTR es:[rdi],dx
  43715c:	and    BYTE PTR gs:[rax+0x72],dh
  437160:	imul   di,WORD PTR gs:[rax+0x0],0x7270
  437167:	imul   di,WORD PTR gs:[rax+0x0],0x6564
  43716e:	imul   ebp,DWORD PTR [rsi+0x74],0x616c7265
  437175:	movsxd esp,DWORD PTR [rbp+0x0]
  437178:	je     0x4371e2
  43717a:	imul   esi,DWORD PTR [rbx+0x20],0x6974706f
  437181:	outs   dx,DWORD PTR ds:[rsi]
  437182:	outs   dx,BYTE PTR ds:[rsi]
  437183:	and    BYTE PTR [rcx+0x73],ch
  437186:	and    BYTE PTR [rbp+riz*2+0x70],ah
  43718a:	jb     0x4371f1
  43718c:	movsxd esp,DWORD PTR [rcx+0x74]
  43718f:	gs fs sub al,0x20
  437193:	jne    0x437208
  437195:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  43719a:	and    BYTE PTR [rcx+0x61],bh
  43719d:	imul   esp,DWORD PTR fs:[rsi+0x20],0x746c6966
  4371a5:	gs jb  0x4371c8
  4371a8:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  4371af:	add    BYTE PTR [rax+0x73],dh
  4371b2:	outs   dx,BYTE PTR ds:[rsi]
  4371b3:	jb     0x4371b5
  4371b5:	add    BYTE PTR [rax],al
  4371b7:	add    BYTE PTR [rbx+0x61],ah
  4371ba:	ins    BYTE PTR es:[rdi],dx
  4371bb:	movsxd esi,DWORD PTR [rbp+0x6c]
  4371be:	(bad)  
  4371bf:	je     0x437226
  4371c1:	and    BYTE PTR [rax+0x53],dl
  4371c4:	rex.WRX push rdx
  4371c6:	and    BYTE PTR [rdi+0x66],ch
  4371c9:	and    BYTE PTR [rbx+0x6f],ah
  4371cc:	ins    DWORD PTR es:[rdi],dx
  4371cd:	jo     0x437241
  4371cf:	gs jae 0x437245
  4371d2:	gs and BYTE PTR fs:[rsi+0x72],ah
  4371d7:	(bad)  
  4371d8:	ins    DWORD PTR es:[rdi],dx
  4371d9:	gs jae 0x4371dc
  4371dc:	jbe    0x437251
  4371de:	je     0x437241
  4371e0:	je     0x437255
  4371e2:	add    BYTE PTR [rax],al
  4371e4:	add    BYTE PTR [rax],al
  4371e6:	add    BYTE PTR [rax],al
  4371e8:	fs jne 0x437258
  4371eb:	jo     0x43720d
  4371ed:	jbe    0x437258
  4371ef:	fs outs dx,DWORD PTR gs:[rsi]
  4371f2:	and    BYTE PTR [rbx+0x6f],ah
  4371f5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x61747320
  4371fd:	je     0x437268
  4371ff:	jae    0x437275
  437201:	imul   esp,DWORD PTR [rbx+0x73],0x206f7420
  437208:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7376
  43720f:	je     0x437272
  437211:	je     0x437286
  437213:	pop    rdi
  437214:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6676
  43721b:	add    BYTE PTR [rbx+0x65],dh
  43721e:	je     0x437240
  437220:	jbe    0x43728b
  437222:	fs outs dx,DWORD PTR gs:[rsi]
  437225:	and    BYTE PTR [rsi+0x69],ah
  437228:	ins    BYTE PTR es:[rdi],dx
  437229:	je     0x437290
  43722b:	jb     0x4372a0
  43722d:	add    BYTE PTR [rcx+0x6e],ch
  437230:	je     0x4372a4
  437232:	(bad)  
  437233:	pop    rdi
  437234:	ins    DWORD PTR es:[rdi],dx
  437235:	(bad)  
  437236:	je     0x4372aa
  437238:	imul   edi,DWORD PTR [rax+0x0],0x63657073
  43723f:	imul   esp,DWORD PTR [rsi+0x79],0x746e6920
  437246:	jb     0x4372a9
  437248:	and    BYTE PTR [rbp+0x61],ch
  43724b:	je     0x4372bf
  43724d:	imul   edi,DWORD PTR [rax+0x20],0x66656f63
  437254:	data16 jae 0x437257
  437257:	ins    DWORD PTR es:[rdi],dx
  437258:	(bad)  
  437259:	je     0x4372cd
  43725b:	imul   edi,DWORD PTR [rax+0x0],0x65746e69
  437262:	jb     0x4372c3
  437264:	ins    DWORD PTR es:[rdi],dx
  437265:	(bad)  
  437266:	je     0x4372da
  437268:	imul   edi,DWORD PTR [rax+0x0],0x63657073
  43726f:	imul   esp,DWORD PTR [rsi+0x79],0x746e6920
  437276:	gs jb  0x437299
  437279:	ins    DWORD PTR es:[rdi],dx
  43727a:	(bad)  
  43727b:	je     0x4372ef
  43727d:	imul   edi,DWORD PTR [rax+0x20],0x66656f63
  437284:	data16 jae 0x437287
  437287:	movsxd ebp,DWORD PTR [rax+0x72]
  43728a:	outs   dx,DWORD PTR ds:[rsi]
  43728b:	ins    DWORD PTR es:[rdi],dx
  43728c:	(bad)  
  43728d:	pop    rdi
  43728e:	imul   ebp,DWORD PTR [rsi+0x74],0x6d5f6172
  437295:	(bad)  
  437296:	je     0x43730a
  437298:	imul   edi,DWORD PTR [rax+0x0],0x706f74
  43729f:	add    BYTE PTR [rdi+rbp*2+0x70],dh
  4372a3:	cmp    eax,0x6f622f31
  4372a8:	je     0x43731e
  4372aa:	outs   dx,DWORD PTR ds:[rsi]
  4372ab:	ins    DWORD PTR es:[rdi],dx
  4372ac:	cmp    eax,0x75612f30
  4372b1:	je     0x437322
  4372b3:	cmp    eax,0x6620312d
  4372b8:	imul   esp,DWORD PTR [rbp+0x6c],0x69662064
  4372bf:	jb     0x437334
  4372c1:	je     0x4372c3
  4372c3:	jbe    0x437339
  4372c5:	(bad)  
  4372c6:	add    BYTE PTR [esi+0x6f],ah
  4372ca:	jb     0x43732f
  4372cc:	and    BYTE PTR gs:[rsi+0x69],dh
  4372d0:	fs outs dx,DWORD PTR gs:[rsi]
  4372d3:	and    BYTE PTR [rcx+riz*2+0x67],dh
  4372d7:	(bad)  
  4372d8:	outs   dx,WORD PTR ds:[rsi]
  4372da:	jne    0x43734e
  4372dc:	movsxd esp,DWORD PTR [rbx+0x0]
  4372df:	jno    0x437351
  4372e1:	push   0x747369
  4372e6:	jae    0x437350
  4372e8:	outs   dx,DWORD PTR ds:[rsi]
  4372e9:	ja     0x43730b
  4372eb:	push   rcx
  4372ec:	push   rax
  4372ed:	and    BYTE PTR [rax+0x69],ch
  4372f0:	jae    0x437366
  4372f2:	outs   dx,DWORD PTR ds:[rsi]
  4372f3:	addr32 jb 0x437357
  4372f6:	ins    DWORD PTR es:[rdi],dx
  4372f7:	add    BYTE PTR [rsi+0x6f],ah
  4372fa:	jb     0x43735f
  4372fc:	gs pop rdi
  4372fe:	data16 jo 0x437374
  437301:	add    BYTE PTR [rax],al
  437303:	add    BYTE PTR [rax],al
  437305:	add    BYTE PTR [rax],al
  437307:	add    BYTE PTR [rsi+0x6f],ah
  43730a:	jb     0x43736f
  43730c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  437311:	and    BYTE PTR [rbx+0x65],dh
  437314:	ins    BYTE PTR es:[rdi],dx
  437315:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43731a:	and    BYTE PTR [rsi+0x72],ah
  43731d:	(bad)  
  43731e:	ins    DWORD PTR es:[rdi],dx
  43731f:	gs jb  0x437383
  437322:	je     0x437389
  437324:	sub    al,0x20
  437326:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  43732e:	je     0x437398
  437330:	and    BYTE PTR gs:[rdx+0x65],ah
  437334:	jae    0x4373aa
  437336:	and    BYTE PTR [rbx+0x75],dh
  437339:	jo     0x4373ab
  43733b:	outs   dx,DWORD PTR ds:[rsi]
  43733c:	jb     0x4373b2
  43733e:	gs and BYTE PTR fs:[rsi+0x72],ah
  437343:	(bad)  
  437344:	ins    DWORD PTR es:[rdi],dx
  437345:	gs jb  0x4373a9
  437348:	je     0x4373af
  43734a:	and    BYTE PTR [rbx+0x65],dh
  43734d:	ins    BYTE PTR es:[rdi],dx
  43734e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  437353:	outs   dx,BYTE PTR ds:[rsi]
  437354:	add    BYTE PTR [rbx+0x74],dh
  437357:	jb     0x4373be
  437359:	(bad)  
  43735a:	ins    DWORD PTR es:[rdi],dx
  43735b:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74657300
  437363:	and    BYTE PTR [rax+rbp*2+0x65],dh
  437367:	and    BYTE PTR [rsi+0x61],dh
  43736a:	ins    BYTE PTR es:[rdi],dx
  43736b:	jne    0x4373d2
  43736d:	and    BYTE PTR [rdi+0x66],ch
  437370:	and    BYTE PTR [rcx+0x6e],ah
  437373:	and    BYTE PTR [rdi+0x75],ch
  437376:	je     0x4373de
  437378:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65727473
  437380:	(bad)  
  437381:	ins    DWORD PTR es:[rdi],dx
  437382:	imul   esp,DWORD PTR [rax+rax*1+0x73],0x61657274
  43738a:	ins    DWORD PTR es:[rdi],dx
  43738b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43738d:	fs gs js 0x4373cb
  437391:	jbe    0x4373f4
  437393:	ins    BYTE PTR es:[rdi],dx
  437394:	jne    0x4373fb
  437396:	add    BYTE PTR [rsi+0x6f],ah
  437399:	jb     0x4373fe
  43739b:	gs pop rdi
  43739d:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4373a1:	data16 jb 0x437405
  4373a4:	ins    DWORD PTR es:[rdi],dx
  4373a5:	gs jae 0x4373a8
  4373a8:	outs   dx,WORD PTR ds:[rsi]
  4373aa:	jb     0x43740f
  4373ac:	and    BYTE PTR gs:[rbx+0x65],ch
  4373b0:	jns    0x4373d2
  4373b2:	data16 jb 0x437416
  4373b5:	ins    DWORD PTR es:[rdi],dx
  4373b6:	gs jae 0x4373d9
  4373b9:	(bad)  
  4373ba:	je     0x4373dc
  4373bc:	jae    0x43742e
  4373be:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4373c2:	imul   esp,DWORD PTR [rbp+0x64],0x6d697420
  4373c9:	gs jae 0x437440
  4373cc:	(bad)  
  4373cd:	ins    DWORD PTR es:[rdi],dx
  4373ce:	jo     0x437443
  4373d0:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  4373d4:	gs jae 0x43744b
  4373d7:	(bad)  
  4373d8:	ins    DWORD PTR es:[rdi],dx
  4373d9:	jo     0x43744e
  4373db:	add    BYTE PTR [rax],al
  4373dd:	add    BYTE PTR [rax],al
  4373df:	add    BYTE PTR [rcx+0x75],ah
  4373e2:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x72746962
  4373ea:	(bad)  
  4373eb:	je     0x437452
  4373ed:	and    BYTE PTR [rax],ch
  4373ef:	jo     0x43745d
  4373f1:	gs (bad) 
  4373f3:	jae    0x43745a
  4373f5:	and    BYTE PTR [rbp+0x73],dh
  4373f8:	and    BYTE PTR gs:[rip+0x29613a62],ch        # 0x29a4ae61
  4373ff:	add    BYTE PTR [rdx+0x69],ah
  437402:	je     0x437476
  437404:	(bad)  
  437405:	je     0x43746c
  437407:	add    BYTE PTR [rsi+0x69],dh
  43740a:	fs outs dx,DWORD PTR gs:[rsi]
  43740d:	and    BYTE PTR [rdx+0x69],ah
  437410:	je     0x437484
  437412:	(bad)  
  437413:	je     0x43747a
  437415:	and    BYTE PTR [rax],ch
  437417:	jo     0x437485
  437419:	gs (bad) 
  43741b:	jae    0x437482
  43741d:	and    BYTE PTR [rbp+0x73],dh
  437420:	and    BYTE PTR gs:[rip+0x29763a62],ch        # 0x29b9ae89
  437427:	add    BYTE PTR [rax+0x77],ch
  43742a:	(bad)  
  43742b:	movsxd esp,DWORD PTR [rbx+0x65]
  43742e:	ins    BYTE PTR es:[rdi],dx
  43742f:	add    BYTE PTR [rbp+0x73],dh
  437432:	and    BYTE PTR gs:[rax+0x57],cl
  437436:	and    BYTE PTR [rcx+0x63],ah
  437439:	movsxd esp,DWORD PTR [rbp+0x6c]
  43743c:	gs jb  0x4374a0
  43743f:	je     0x4374a6
  437441:	and    BYTE PTR fs:[rbp+riz*2+0x63],ah
  437446:	outs   dx,DWORD PTR ds:[rsi]
  437447:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x61776800
  43744f:	movsxd esp,DWORD PTR [rbx+0x65]
  437452:	ins    BYTE PTR es:[rdi],dx
  437453:	and    BYTE PTR [rsi+0x61],ch
  437456:	ins    DWORD PTR es:[rdi],dx
  437457:	add    BYTE PTR gs:[rax+0x77],ch
  43745b:	(bad)  
  43745c:	movsxd esp,DWORD PTR [rbx+0x65]
  43745f:	ins    BYTE PTR es:[rdi],dx
  437460:	pop    rdi
  437461:	fs gs jbe 0x4374ce
  437465:	movsxd esp,DWORD PTR [rbp+0x0]
  437468:	jae    0x4374cf
  43746a:	ins    BYTE PTR es:[rdi],dx
  43746b:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  437470:	and    BYTE PTR [rbp+riz*2+0x76],ah
  437474:	imul   esp,DWORD PTR [rbx+0x65],0x726f6620
  43747b:	and    BYTE PTR [rax+0x57],cl
  43747e:	and    BYTE PTR [rcx+0x63],ah
  437481:	movsxd esp,DWORD PTR [rbp+0x6c]
  437484:	gs jb  0x4374e8
  437487:	je     0x4374f2
  437489:	outs   dx,DWORD PTR ds:[rsi]
  43748a:	outs   dx,BYTE PTR ds:[rsi]
  43748b:	add    BYTE PTR [rbp+riz*2+0x76],ah
  43748f:	imul   esp,DWORD PTR [rbx+0x65],0x656d616e
  437496:	add    BYTE PTR [rax+0x77],ch
  437499:	(bad)  
  43749a:	movsxd esp,DWORD PTR [rbx+0x65]
  43749d:	ins    BYTE PTR es:[rdi],dx
  43749e:	jae    0x4374a0
  4374a0:	jae    0x43750a
  4374a2:	outs   dx,DWORD PTR ds:[rsi]
  4374a3:	ja     0x4374c5
  4374a5:	(bad)  
  4374a6:	jbe    0x437509
  4374a8:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4820656c
  4374b0:	push   rdi
  4374b1:	and    BYTE PTR [rcx+0x63],ah
  4374b4:	movsxd esp,DWORD PTR [rbp+0x6c]
  4374b7:	gs jb  0x43751b
  4374ba:	je     0x437525
  4374bc:	outs   dx,DWORD PTR ds:[rsi]
  4374bd:	outs   dx,BYTE PTR ds:[rsi]
  4374be:	and    BYTE PTR [rbp+0x65],ch
  4374c1:	je     0x43752b
  4374c3:	outs   dx,DWORD PTR ds:[rsi]
  4374c4:	fs jae 0x4374c7
  4374c7:	(bad)  
  4374c8:	jne    0x43753e
  4374ca:	outs   dx,DWORD PTR ds:[rsi]
  4374cb:	jb     0x43753c
  4374cd:	je     0x437530
  4374cf:	je     0x437536
  4374d1:	add    BYTE PTR [rax],al
  4374d3:	add    BYTE PTR [rax],al
  4374d5:	add    BYTE PTR [rax],al
  4374d7:	add    BYTE PTR [rcx+0x75],ah
  4374da:	je     0x43754b
  4374dc:	ins    DWORD PTR es:[rdi],dx
  4374dd:	(bad)  
  4374de:	je     0x437549
  4374e0:	movsxd esp,DWORD PTR [rcx+0x6c]
  4374e3:	ins    BYTE PTR es:[rdi],dx
  4374e4:	jns    0x437506
  4374e6:	imul   ebp,DWORD PTR [rsi+0x73],0x20747265
  4374ed:	movsxd ebp,DWORD PTR [rdi+0x72]
  4374f0:	jb     0x437557
  4374f2:	movsxd esi,DWORD PTR [rax+riz*1+0x72]
  4374f6:	outs   dx,DWORD PTR ds:[rsi]
  4374f7:	je     0x43755a
  4374f9:	je     0x437560
  4374fb:	and    BYTE PTR [rsi+0x69],ah
  4374fe:	ins    BYTE PTR es:[rdi],dx
  4374ff:	je     0x437566
  437501:	jb     0x437576
  437503:	add    BYTE PTR [rcx+0x66],ah
  437506:	jb     0x437569
  437508:	ins    DWORD PTR es:[rdi],dx
  437509:	gs jae 0x43750c
  43750c:	add    BYTE PTR [rax],al
  43750e:	add    BYTE PTR [rax],al
  437510:	jae    0x437577
  437512:	je     0x437534
  437514:	je     0x43757e
  437516:	and    BYTE PTR gs:[rsi+0x75],ch
  43751a:	ins    DWORD PTR es:[rdi],dx
  43751b:	(bad)  
  43751c:	gs jb  0x43753f
  43751f:	outs   dx,DWORD PTR ds:[rsi]
  437520:	data16 and BYTE PTR [rcx+0x75],ah
  437524:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6d617266
  43752c:	gs jae 0x43754f
  43752f:	je     0x4375a0
  437531:	and    BYTE PTR [rdi+0x75],ch
  437534:	je     0x4375a6
  437536:	jne    0x4375ac
  437538:	add    BYTE PTR [rcx+0x71],ah
  43753b:	add    BYTE PTR [rax],al
  43753d:	add    BYTE PTR [rax],al
  43753f:	add    BYTE PTR [rbx+0x65],dh
  437542:	je     0x437564
  437544:	(bad)  
  437545:	jne    0x4375ab
  437547:	imul   ebp,DWORD PTR [rdi+0x20],0x6c617571
  43754e:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x646f6328
  437556:	movsxd ebp,DWORD PTR gs:[rip+0x63657073]        # 0x63a8e5d0
  43755d:	imul   esp,DWORD PTR [rsi+0x69],0x71002963
  437564:	jne    0x4375c7
  437566:	ins    BYTE PTR es:[rdi],dx
  437567:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x0
  43756f:	add    BYTE PTR [rbx+0x65],dh
  437572:	je     0x437594
  437574:	(bad)  
  437575:	jne    0x4375db
  437577:	imul   ebp,DWORD PTR [rdi+0x20],0x706d6173
  43757e:	ins    BYTE PTR es:[rdi],dx
  43757f:	imul   ebp,DWORD PTR [rsi+0x67],0x74617220
  437586:	and    BYTE PTR gs:[rax],ch
  437589:	imul   ebp,DWORD PTR [rsi+0x20],0x297a48
  437590:	jae    0x4375f7
  437592:	je     0x4375b4
  437594:	outs   dx,BYTE PTR ds:[rsi]
  437595:	jne    0x437604
  437597:	(bad)  
  437598:	gs jb  0x4375bb
  43759b:	outs   dx,DWORD PTR ds:[rsi]
  43759c:	data16 and BYTE PTR [rcx+0x75],ah
  4375a0:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6e616863
  4375a8:	outs   dx,BYTE PTR ds:[rsi]
  4375a9:	gs ins BYTE PTR es:[rdi],dx
  4375ab:	jae    0x4375ad
  4375ad:	(bad)  
  4375ae:	outs   dx,BYTE PTR ds:[rsi]
  4375af:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  4375b3:	(bad)  
  4375b4:	(bad)  
  4375b5:	ins    BYTE PTR es:[rdi],dx
  4375b6:	and    BYTE PTR gs:[rcx+0x75],ah
  4375ba:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x6f660000
  4375c2:	jb     0x437627
  4375c4:	and    BYTE PTR gs:[rcx+0x75],ah
  4375c8:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x65646f63
  4375d0:	movsxd esp,DWORD PTR [rax]
  4375d2:	sub    BYTE PTR [rdi],ah
  4375d4:	movsxd ebp,DWORD PTR [rdi+0x70]
  4375d7:	jns    0x437600
  4375d9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4375dd:	movsxd ebp,DWORD PTR [rdi+0x70]
  4375e0:	jns    0x437602
  4375e2:	jae    0x437658
  4375e4:	jb     0x43764b
  4375e6:	(bad)  
  4375e7:	ins    DWORD PTR es:[rdi],dx
  4375e8:	sub    DWORD PTR [rax],eax
  4375ea:	(bad)  
  4375eb:	je     0x43764e
  4375ed:	add    BYTE PTR [esi+0x6f],ah
  4375f1:	jb     0x437656
  4375f3:	and    BYTE PTR gs:[rcx+0x75],ah
  4375f7:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x2f676174
  4375ff:	outs   dx,WORD PTR ds:[rsi]
  437601:	jne    0x437675
  437603:	movsxd esp,DWORD PTR [rbx+0x0]
  437606:	jbe    0x437677
  437608:	ins    BYTE PTR es:[rdi],dx
  437609:	add    BYTE PTR [rax],al
  43760b:	add    BYTE PTR [rax],al
  43760d:	add    BYTE PTR [rax],al
  43760f:	add    BYTE PTR [rbx+0x68],ah
  437612:	(bad)  
  437613:	outs   dx,BYTE PTR ds:[rsi]
  437614:	and    BYTE PTR gs:[ecx+0x75],ah
  437619:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x756c6f76
  437621:	ins    DWORD PTR es:[rdi],dx
  437622:	and    BYTE PTR gs:[rax],ch
  437625:	xor    dh,BYTE PTR [rip+0x6f6e3d36]        # 0x6fb1b361
  43762b:	jb     0x43769a
  43762d:	(bad)  
  43762e:	ins    BYTE PTR es:[rdi],dx
  43762f:	sub    DWORD PTR [rax],eax
  437631:	jbe    0x4376a2
  437633:	ins    BYTE PTR es:[rdi],dx
  437634:	jne    0x4376a3
  437636:	add    BYTE PTR gs:[rbx+0x61],dh
  43763a:	ins    DWORD PTR es:[rdi],dx
  43763b:	jo     0x4376a9
  43763d:	gs pop rdi
  43763f:	ins    WORD PTR es:[rdi],dx
  437641:	je     0x437643
  437643:	jae    0x4376aa
  437645:	je     0x437667
  437647:	jae    0x4376aa
  437649:	ins    DWORD PTR es:[rdi],dx
  43764a:	jo     0x4376b8
  43764c:	and    BYTE PTR gs:[rsi+0x6f],ah
  437650:	jb     0x4376bf
  437652:	(bad)  
  437653:	je     0x437655
  437655:	movsxd ebp,DWORD PTR [rax+0x61]
  437658:	outs   dx,BYTE PTR ds:[rsi]
  437659:	outs   dx,BYTE PTR ds:[rsi]
  43765a:	gs ins BYTE PTR es:[rdi],dx
  43765c:	pop    rdi
  43765d:	ins    BYTE PTR es:[rdi],dx
  43765e:	(bad)  
  43765f:	jns    0x4376d0
  437661:	jne    0x4376d7
  437663:	add    BYTE PTR [rbx+0x65],dh
  437666:	je     0x437688
  437668:	movsxd ebp,DWORD PTR [rax+0x61]
  43766b:	outs   dx,BYTE PTR ds:[rsi]
  43766c:	outs   dx,BYTE PTR ds:[rsi]
  43766d:	gs ins BYTE PTR es:[rdi],dx
  43766f:	and    BYTE PTR [rcx+riz*2+0x79],ch
  437673:	outs   dx,DWORD PTR ds:[rsi]
  437674:	jne    0x4376ea
  437676:	add    BYTE PTR [rcx+riz*2+0x79],ch
  43767a:	outs   dx,DWORD PTR ds:[rsi]
  43767b:	jne    0x4376f1
  43767d:	add    BYTE PTR [rcx+0x66],ah
  437680:	add    BYTE PTR [rbx+0x65],dh
  437683:	je     0x4376a5
  437685:	(bad)  
  437686:	jne    0x4376ec
  437688:	imul   ebp,DWORD PTR [rdi+0x20],0x746c6966
  43768f:	gs jb  0x437705
  437692:	add    BYTE PTR [rdi+0x75],ah
  437695:	gs jae 0x43770b
  437698:	pop    rdi
  437699:	ins    BYTE PTR es:[rdi],dx
  43769a:	(bad)  
  43769b:	jns    0x43770c
  43769d:	jne    0x437713
  43769f:	pop    rdi
  4376a0:	ins    DWORD PTR es:[rdi],dx
  4376a1:	(bad)  
  4376a2:	js     0x4376a4
  4376a4:	add    BYTE PTR [rax],al
  4376a6:	add    BYTE PTR [rax],al
  4376a8:	jae    0x43770f
  4376aa:	je     0x4376cc
  4376ac:	je     0x437716
  4376ae:	and    BYTE PTR gs:[rbp+0x61],ch
  4376b2:	js     0x43771d
  4376b4:	ins    DWORD PTR es:[rdi],dx
  4376b5:	jne    0x437724
  4376b7:	and    BYTE PTR [rsi+0x75],ch
  4376ba:	ins    DWORD PTR es:[rdi],dx
  4376bb:	(bad)  
  4376bc:	gs jb  0x4376df
  4376bf:	outs   dx,DWORD PTR ds:[rsi]
  4376c0:	data16 and BYTE PTR [rbx+0x68],ah
  4376c4:	(bad)  
  4376c5:	outs   dx,BYTE PTR ds:[rsi]
  4376c6:	outs   dx,BYTE PTR ds:[rsi]
  4376c7:	gs ins BYTE PTR es:[rdi],dx
  4376c9:	jae    0x4376eb
  4376cb:	je     0x43773c
  4376cd:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  4376d1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4376d5:	addr32 jne 0x43773d
  4376d8:	jae    0x43774d
  4376da:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4376de:	and    BYTE PTR [rbx+0x68],ah
  4376e1:	(bad)  
  4376e2:	outs   dx,BYTE PTR ds:[rsi]
  4376e3:	outs   dx,BYTE PTR ds:[rsi]
  4376e4:	gs ins BYTE PTR es:[rdi],dx
  4376e6:	and    BYTE PTR [rcx+riz*2+0x79],ch
  4376ea:	outs   dx,DWORD PTR ds:[rsi]
  4376eb:	jne    0x437761
  4376ed:	add    BYTE PTR [rbx+0x6e],dh
  4376f0:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  4376f4:	(bad)  
  4376f5:	(bad)  
  4376f6:	ins    BYTE PTR es:[rdi],dx
  4376f7:	and    BYTE PTR gs:[rbx+0x75],dh
  4376fb:	(bad)  
  4376fc:	je     0x437767
  4376fe:	je     0x43776c
  437700:	add    BYTE PTR gs:[rax],al
  437703:	add    BYTE PTR [rax],al
  437705:	add    BYTE PTR [rax],al
  437707:	add    BYTE PTR [rsi+0x6f],ah
  43770a:	jb     0x43776f
  43770c:	and    BYTE PTR gs:[rbx+0x75],dh
  437710:	(bad)  
  437711:	je     0x43777c
  437713:	je     0x437781
  437715:	and    BYTE PTR gs:[rbx+0x6f],ah
  437719:	fs movsxd esp,DWORD PTR gs:[rax]
  43771d:	sub    BYTE PTR [rdi],ah
  43771f:	movsxd ebp,DWORD PTR [rdi+0x70]
  437722:	jns    0x43774b
  437724:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  437728:	movsxd ebp,DWORD PTR [rdi+0x70]
  43772b:	jns    0x43774d
  43772d:	jae    0x4377a3
  43772f:	jb     0x437796
  437731:	(bad)  
  437732:	ins    DWORD PTR es:[rdi],dx
  437733:	sub    DWORD PTR [rax],eax
  437735:	jae    0x4377ab
  437737:	(bad)  
  437738:	add    BYTE PTR [esi+0x6f],ah
  43773c:	jb     0x4377a1
  43773e:	and    BYTE PTR gs:[rbx+0x75],dh
  437742:	(bad)  
  437743:	je     0x4377ae
  437745:	je     0x4377b3
  437747:	and    BYTE PTR gs:[rcx+riz*2+0x67],dh
  43774c:	(bad)  
  43774d:	outs   dx,WORD PTR ds:[rsi]
  43774f:	jne    0x4377c3
  437751:	movsxd esp,DWORD PTR [rbx+0x0]
  437754:	imul   di,WORD PTR [rax+0x5f],0x7573
  43775a:	(bad)  
  43775b:	pop    rdi
  43775c:	fs jne 0x4377d1
  43775f:	(bad)  
  437760:	je     0x4377cb
  437762:	outs   dx,DWORD PTR ds:[rsi]
  437763:	outs   dx,BYTE PTR ds:[rsi]
  437764:	add    BYTE PTR [rsi+0x69],ah
  437767:	js     0x437789
  437769:	jae    0x4377e0
  43776b:	(bad)  
  43776c:	je     0x4377d7
  43776e:	je     0x4377dc
  437770:	gs jae 0x437793
  437773:	fs jne 0x4377e8
  437776:	(bad)  
  437777:	je     0x4377e2
  437779:	outs   dx,DWORD PTR ds:[rsi]
  43777a:	outs   dx,BYTE PTR ds:[rsi]
  43777b:	add    BYTE PTR [rbx+0x61],ah
  43777e:	outs   dx,BYTE PTR ds:[rsi]
  43777f:	jbe    0x4377e2
  437781:	jae    0x4377e2
  437783:	jae    0x4377ee
  437785:	jp     0x4377ec
  437787:	add    BYTE PTR [rbx+0x65],dh
  43778a:	je     0x4377ac
  43778c:	movsxd esp,DWORD PTR [rcx+0x6e]
  43778f:	jbe    0x4377f2
  437791:	jae    0x4377b3
  437793:	jae    0x4377fe
  437795:	jp     0x4377fc
  437797:	and    BYTE PTR [rax],ch
  437799:	push   rdi
  43779a:	js     0x4377e4
  43779c:	and    BYTE PTR [rdi+0x72],ch
  43779f:	and    BYTE PTR [rcx+0x62],ah
  4377a2:	(bad)
  4377a7:	(bad)  
  4377a8:	je     0x437813
  4377aa:	outs   dx,DWORD PTR ds:[rsi]
  4377ab:	outs   dx,BYTE PTR ds:[rsi]
  4377ac:	sub    DWORD PTR [rax],eax
  4377ae:	jbe    0x437813
  4377b0:	add    BYTE PTR [rbp+riz*2+0x70],ah
  4377b4:	jb     0x43781b
  4377b6:	movsxd esp,DWORD PTR [rcx+0x74]
  4377b9:	gs fs sub al,0x20
  4377bd:	jne    0x437832
  4377bf:	and    BYTE PTR gs:[rip+0x6e616863],ch        # 0x6ea4e029
  4377c6:	outs   dx,BYTE PTR ds:[rsi]
  4377c7:	gs ins BYTE PTR es:[rdi],dx
  4377c9:	add    BYTE PTR [rsi+rsi*2+0x73],dh
  4377cd:	je     0x437833
  4377cf:	add    BYTE PTR [rbp+riz*2+0x70],ah
  4377d3:	jb     0x43783a
  4377d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4377d8:	gs fs sub al,0x20
  4377dc:	jne    0x437851
  4377de:	and    BYTE PTR gs:[rip+0x6e617473],ch        # 0x6ea4ec58
  4377e5:	fs (bad) 
  4377e7:	jb     0x43784d
  4377e9:	add    BYTE PTR [rcx+0x73],ch
  4377ec:	jns    0x43785c
  4377ee:	movsxd eax,DWORD PTR [rax]
  4377f0:	je     0x43785a
  4377f2:	imul   esi,DWORD PTR [rbx+0x20],0x6974706f
  4377f9:	outs   dx,DWORD PTR ds:[rsi]
  4377fa:	outs   dx,BYTE PTR ds:[rsi]
  4377fb:	and    BYTE PTR [rcx+0x73],ch
  4377fe:	and    BYTE PTR [rbp+riz*2+0x70],ah
  437802:	jb     0x437869
  437804:	movsxd esp,DWORD PTR [rcx+0x74]
  437807:	gs and BYTE PTR fs:[rcx+0x6e],ah
  43780c:	and    BYTE PTR fs:[rdi+rbp*2+0x65],ah
  437811:	jae    0x437833
  437813:	outs   dx,BYTE PTR ds:[rsi]
  437814:	outs   dx,DWORD PTR ds:[rsi]
  437815:	je     0x43787f
  437817:	imul   ebp,DWORD PTR [rsi+0x67],0x78756d00
  43781e:	fs gs ins BYTE PTR es:[rdi],dx
  437821:	(bad)  
  437822:	jns    0x437824
  437824:	add    BYTE PTR [rax],al
  437826:	add    BYTE PTR [rax],al
  437828:	jae    0x43788f
  43782a:	je     0x43784c
  43782c:	je     0x437896
  43782e:	and    BYTE PTR gs:[rbp+0x61],ch
  437832:	js     0x43789d
  437834:	ins    DWORD PTR es:[rdi],dx
  437835:	jne    0x4378a4
  437837:	and    BYTE PTR [rbp+riz*2+0x6d],ah
  43783b:	jne    0x4378b5
  43783d:	sub    eax,0x6f636564
  437842:	fs and BYTE PTR gs:[rbp+riz*2+0x6c],ah
  437848:	(bad)  
  437849:	jns    0x43784b
  43784b:	jae    0x4378b2
  43784d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  437850:	fs jae 0x437853
  437853:	ins    DWORD PTR es:[rdi],dx
  437854:	jne    0x4378ce
  437856:	jo     0x4378ca
  437858:	gs ins BYTE PTR es:[rdi],dx
  43785a:	outs   dx,DWORD PTR ds:[rsi]
  43785b:	(bad)  
  43785c:	add    BYTE PTR fs:[rax],al
  43785f:	add    BYTE PTR [rbx+0x65],dh
  437862:	je     0x437884
  437864:	je     0x4378ce
  437866:	and    BYTE PTR gs:[rcx+0x6e],ch
  43786a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6564206c
  437872:	ins    DWORD PTR es:[rdi],dx
  437873:	jne    0x4378ed
  437875:	sub    eax,0x6f636564
  43787a:	fs and BYTE PTR gs:[rbp+riz*2+0x6c],ah
  437880:	(bad)  
  437881:	jns    0x437883
  437883:	outs   dx,DWORD PTR ds:[rsi]
  437884:	jbe    0x4378eb
  437886:	jb     0x4378fa
  437888:	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x65736666
  437890:	jb     0x437908
  437892:	gs jb  0x437895
  437895:	add    BYTE PTR [rax],al
  437897:	add    BYTE PTR [rdi+0x76],ch
  43789a:	gs jb  0x43790f
  43789d:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20656874
  4378a5:	outs   dx,DWORD PTR ds:[rsi]
  4378a6:	jo     0x43791c
  4378a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x72662073
  4378af:	outs   dx,DWORD PTR ds:[rsi]
  4378b0:	ins    DWORD PTR es:[rdi],dx
  4378b1:	and    BYTE PTR [rsi+0x66],ah
  4378b4:	jae    0x43791b
  4378b6:	jb     0x43792e
  4378b8:	gs jb  0x4378bb
  4378bb:	jae    0x437921
  4378bd:	jo     0x43791e
  4378bf:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  4378c6:	add    BYTE PTR [rax],al
  4378c8:	jae    0x43793a
  4378ca:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4378ce:	jns    0x4378f0
  4378d0:	(bad)  
  4378d1:	and    BYTE PTR [rsi+0x69],ah
  4378d4:	ins    BYTE PTR es:[rdi],dx
  4378d5:	and    BYTE PTR gs:[rcx+0x6e],ch
  4378d9:	and    BYTE PTR [rdi+0x68],dh
  4378dc:	imul   esp,DWORD PTR [rbx+0x68],0x206f7420
  4378e3:	jo     0x437957
  4378e5:	imul   ebp,DWORD PTR [rsi+0x74],0x70647320
  4378ec:	and    BYTE PTR [rcx+0x6e],ch
  4378ef:	outs   dx,WORD PTR ds:[rsi]
  4378f1:	jb     0x437960
  4378f3:	(bad)  
  4378f4:	je     0x43795f
  4378f6:	outs   dx,DWORD PTR ds:[rsi]
  4378f7:	outs   dx,BYTE PTR ds:[rsi]
  4378f8:	add    BYTE PTR [rdx+0x73],ah
  4378fb:	data16 add BYTE PTR [rax],al
  4378fe:	add    BYTE PTR [rax],al
  437900:	and    BYTE PTR [r11+0x6f],spl
  437904:	ins    DWORD PTR es:[rdi],dx
  437905:	ins    DWORD PTR es:[rdi],dx
  437906:	(bad)  
  437907:	sub    eax,0x61706573
  43790c:	jb     0x43796f
  43790e:	je     0x437975
  437910:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ch
  437915:	je     0x437937
  437917:	outs   dx,DWORD PTR ds:[rsi]
  437918:	data16 and BYTE PTR [rdx+0x69],ah
  43791c:	je     0x437991
  43791e:	je     0x437992
  437920:	gs (bad) 
  437922:	ins    DWORD PTR es:[rdi],dx
  437923:	and    BYTE PTR [rsi+0x69],ah
  437926:	ins    BYTE PTR es:[rdi],dx
  437927:	je     0x43798e
  437929:	jb     0x43799e
  43792b:	add    BYTE PTR [rdx+0x69],ah
  43792e:	je     0x4379a3
  437930:	je     0x4379a4
  437932:	gs (bad) 
  437934:	ins    DWORD PTR es:[rdi],dx
  437935:	pop    rdi
  437936:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  43793d:	add    BYTE PTR [rcx+0x62],ah
  437940:	jae    0x4379a8
  437942:	add    BYTE PTR [rbp+riz*2+0x70],ah
  437946:	jb     0x4379ad
  437948:	movsxd esp,DWORD PTR [rcx+0x74]
  43794b:	gs add BYTE PTR fs:[rcx+0x75],ah
  437950:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x73746962
  437958:	je     0x4379cc
  43795a:	gs (bad) 
  43795c:	ins    DWORD PTR es:[rdi],dx
  43795d:	pop    rdi
  43795e:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  437965:	add    BYTE PTR [rsi+0x62],dh
  437968:	jae    0x4379d0
  43796a:	add    BYTE PTR [rsi+0x69],dh
  43796d:	fs outs dx,DWORD PTR gs:[rsi]
  437970:	and    BYTE PTR [rdx+0x69],ah
  437973:	je     0x4379e8
  437975:	je     0x4379e9
  437977:	gs (bad) 
  437979:	ins    DWORD PTR es:[rdi],dx
  43797a:	pop    rdi
  43797b:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  437982:	add    BYTE PTR [rcx+0x70],ah
  437985:	jb     0x4379ec
  437987:	add    BYTE PTR [rbx+0x65],dh
  43798a:	je     0x4379ac
  43798c:	je     0x4379f6
  43798e:	and    BYTE PTR gs:[rcx+0x75],ah
  437992:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6974706f
  43799a:	outs   dx,DWORD PTR ds:[rsi]
  43799b:	outs   dx,BYTE PTR ds:[rsi]
  43799c:	jae    0x4379be
  43799e:	je     0x437a0f
  4379a0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4379a4:	and    BYTE PTR [rcx+0x6e],ch
  4379a7:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20646574
  4379af:	jo     0x437a23
  4379b1:	gs jae 0x437a19
  4379b4:	je     0x4379b6
  4379b6:	jbe    0x437a28
  4379b8:	jb     0x437a1f
  4379ba:	add    BYTE PTR [rax],al
  4379bc:	add    BYTE PTR [rax],al
  4379be:	add    BYTE PTR [rax],al
  4379c0:	jae    0x437a27
  4379c2:	je     0x4379e4
  4379c4:	je     0x437a2e
  4379c6:	and    BYTE PTR gs:[rsi+0x69],dh
  4379ca:	fs outs dx,DWORD PTR gs:[rsi]
  4379cd:	and    BYTE PTR [rdi+0x70],ch
  4379d0:	je     0x437a3b
  4379d2:	outs   dx,DWORD PTR ds:[rsi]
  4379d3:	outs   dx,BYTE PTR ds:[rsi]
  4379d4:	jae    0x4379f6
  4379d6:	je     0x437a47
  4379d8:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4379dc:	and    BYTE PTR [rcx+0x6e],ch
  4379df:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20646574
  4379e7:	jo     0x437a5b
  4379e9:	gs jae 0x437a51
  4379ec:	je     0x4379ee
  4379ee:	jae    0x437a60
  4379f0:	jb     0x437a57
  4379f2:	add    BYTE PTR [rax],al
  4379f4:	add    BYTE PTR [rax],al
  4379f6:	add    BYTE PTR [rax],al
  4379f8:	jae    0x437a5f
  4379fa:	je     0x437a1c
  4379fc:	je     0x437a66
  4379fe:	and    BYTE PTR gs:[rbx+0x75],dh
  437a02:	(bad)  
  437a03:	je     0x437a6e
  437a05:	je     0x437a73
  437a07:	and    BYTE PTR gs:[rdi+0x70],ch
  437a0b:	je     0x437a76
  437a0d:	outs   dx,DWORD PTR ds:[rsi]
  437a0e:	outs   dx,BYTE PTR ds:[rsi]
  437a0f:	jae    0x437a31
  437a11:	je     0x437a82
  437a13:	and    BYTE PTR [rax+rbp*2+0x65],dh
  437a17:	and    BYTE PTR [rcx+0x6e],ch
  437a1a:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20646574
  437a22:	jo     0x437a96
  437a24:	gs jae 0x437a8c
  437a27:	je     0x437a29
  437a29:	data16 jo 0x437a9e
  437a2c:	add    BYTE PTR gs:[rax],al
  437a2f:	add    BYTE PTR [rbx+0x65],dh
  437a32:	je     0x437a54
  437a34:	outs   dx,DWORD PTR ds:[rsi]
  437a35:	jo     0x437aab
  437a37:	imul   ebp,DWORD PTR [rdi+0x6e],0x72662073
  437a3e:	outs   dx,DWORD PTR ds:[rsi]
  437a3f:	ins    DWORD PTR es:[rdi],dx
  437a40:	and    BYTE PTR [rcx+0x6e],ch
  437a43:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20646574
  437a4b:	jo     0x437abf
  437a4d:	gs jae 0x437ab5
  437a50:	je     0x437a72
  437a52:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6600
  437a59:	outs   dx,DWORD PTR ds:[rsi]
  437a5a:	jb     0x437abf
  437a5c:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  437a61:	(bad)  
  437a62:	and    BYTE PTR [rbx+0x6f],ah
  437a65:	fs movsxd esp,DWORD PTR gs:[rax]
  437a69:	sub    BYTE PTR [rdi],ah
  437a6b:	movsxd ebp,DWORD PTR [rdi+0x70]
  437a6e:	jns    0x437a97
  437a70:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  437a74:	movsxd ebp,DWORD PTR [rdi+0x70]
  437a77:	jns    0x437a99
  437a79:	jae    0x437aef
  437a7b:	jb     0x437ae2
  437a7d:	(bad)  
  437a7e:	ins    DWORD PTR es:[rdi],dx
  437a7f:	sub    DWORD PTR [rax],eax
  437a81:	outs   dx,BYTE PTR fs:[rsi]
  437a83:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  437a87:	(bad)  
  437a88:	(bad)  
  437a89:	ins    BYTE PTR es:[rdi],dx
  437a8a:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  437a8f:	(bad)  
	...
  437ac0:	mov    BYTE PTR [rdi+0x43],bl
  437ac3:	add    BYTE PTR [rax],al
  437ac5:	add    BYTE PTR [rax],al
  437ac7:	add    BYTE PTR [rax],al
  437ac9:	or     BYTE PTR [rax],al
  437acb:	add    BYTE PTR [rax],al
  437acd:	add    BYTE PTR [rax],al
  437acf:	add    BYTE PTR [rax+0x4061],ah
  437ad5:	add    BYTE PTR [rax],al
  437ad7:	add    BYTE PTR [rdx+0x435f],cl
	...
  437ae5:	add    BYTE PTR [rax],al
  437ae7:	add    BYTE PTR [rdi+0x435f],dl
  437aed:	add    BYTE PTR [rax],al
  437aef:	add    BYTE PTR [rax],al
  437af1:	or     BYTE PTR [rax],al
  437af3:	add    BYTE PTR [rax],al
  437af5:	add    BYTE PTR [rax],al
  437af7:	add    BYTE PTR [rax+0x406d],dh
  437afd:	add    BYTE PTR [rax],al
  437aff:	add    BYTE PTR [rcx+0x435f],bl
  437b05:	add    BYTE PTR [rax],al
  437b07:	add    BYTE PTR [rbx+0x435f],ah
  437b0d:	add    BYTE PTR [rax],al
  437b0f:	add    BYTE PTR [rcx+0x435f],ch
  437b15:	add    BYTE PTR [rax],al
  437b17:	add    BYTE PTR [rax],al
  437b19:	or     BYTE PTR [rax],al
  437b1b:	add    BYTE PTR [rax],al
  437b1d:	add    BYTE PTR [rax],al
  437b1f:	add    BYTE PTR [rax+0x406d],dh
  437b25:	add    BYTE PTR [rax],al
  437b27:	add    BYTE PTR [rcx+0x435f],bl
  437b2d:	add    BYTE PTR [rax],al
  437b2f:	add    BYTE PTR [rbx+0x435f],ah
  437b35:	add    BYTE PTR [rax],al
  437b37:	add    BYTE PTR [rbx+0x435f],ch
  437b3d:	add    BYTE PTR [rax],al
  437b3f:	add    BYTE PTR [rax],al
  437b41:	or     BYTE PTR [rax],al
  437b43:	add    BYTE PTR [rax],al
  437b45:	add    BYTE PTR [rax],al
  437b47:	add    BYTE PTR [rax+0x406d],dh
  437b4d:	add    BYTE PTR [rax],al
  437b4f:	add    BYTE PTR [rcx+0x435f],bl
  437b55:	add    BYTE PTR [rax],al
  437b57:	add    BYTE PTR [rbx+0x435f],ah
  437b5d:	add    BYTE PTR [rax],al
  437b5f:	add    BYTE PTR [rax+0x435f],dh
  437b65:	add    BYTE PTR [rax],al
  437b67:	add    BYTE PTR [rax],al
  437b69:	or     BYTE PTR [rax],al
  437b6b:	add    BYTE PTR [rax],al
  437b6d:	add    BYTE PTR [rax],al
  437b6f:	add    BYTE PTR [rax+0x406d],dh
  437b75:	add    BYTE PTR [rax],al
  437b77:	add    BYTE PTR [rcx+0x435f],bl
  437b7d:	add    BYTE PTR [rax],al
  437b7f:	add    BYTE PTR [rbx+0x435f],ah
  437b85:	add    BYTE PTR [rax],al
  437b87:	add    BYTE PTR [rsi+0x435f],dh
  437b8d:	add    BYTE PTR [rax],al
  437b8f:	add    BYTE PTR [rax],al
  437b91:	or     BYTE PTR [rax],al
  437b93:	add    BYTE PTR [rax],al
  437b95:	add    BYTE PTR [rax],al
  437b97:	add    BYTE PTR [rax+0x405d],dh
  437b9d:	add    BYTE PTR [rax],al
  437b9f:	add    BYTE PTR [rsi+0x435f],bh
	...
  437bad:	add    BYTE PTR [rax],al
  437baf:	add    bl,cl
  437bb1:	pop    rdi
  437bb2:	rex.XB add BYTE PTR [r8],al
  437bb5:	add    BYTE PTR [rax],al
  437bb7:	add    BYTE PTR [rax],al
  437bb9:	or     BYTE PTR [rax],al
  437bbb:	add    BYTE PTR [rax],al
  437bbd:	add    BYTE PTR [rax],al
  437bbf:	add    BYTE PTR [rax+0x4061],al
  437bc5:	add    BYTE PTR [rax],al
  437bc7:	add    ch,dl
  437bc9:	pop    rdi
  437bca:	rex.XB add BYTE PTR [r8],al
	...
  437bd5:	add    BYTE PTR [rax],al
  437bd7:	add    dh,ch
  437bd9:	pop    rdi
  437bda:	rex.XB add BYTE PTR [r8],al
  437bdd:	add    BYTE PTR [rax],al
  437bdf:	add    BYTE PTR [rax],al
  437be1:	or     BYTE PTR [rax],al
  437be3:	add    BYTE PTR [rax],al
  437be5:	add    BYTE PTR [rax],al
  437be7:	add    al,dl
  437be9:	(bad)  
  437bea:	add    BYTE PTR [rax],al
  437bed:	add    BYTE PTR [rax],al
  437bef:	add    dh,dh
  437bf1:	pop    rdi
  437bf2:	rex.XB add BYTE PTR [r8],al
	...
  437bfd:	add    BYTE PTR [rax],al
  437bff:	add    BYTE PTR [rip+0x4360],cl        # 0x43bf65
  437c05:	add    BYTE PTR [rax],al
  437c07:	add    BYTE PTR [rax],al
  437c09:	or     BYTE PTR [rax],al
  437c0b:	add    BYTE PTR [rax],al
  437c0d:	add    BYTE PTR [rax],al
  437c0f:	add    BYTE PTR [rax],dh
  437c11:	movsxd eax,DWORD PTR [rax+0x0]
  437c14:	add    BYTE PTR [rax],al
  437c16:	add    BYTE PTR [rax],al
  437c18:	adc    eax,0x4360
	...
  437c25:	add    BYTE PTR [rax],al
  437c27:	add    BYTE PTR [rax+riz*2],ch
  437c2a:	rex.XB add BYTE PTR [r8],al
  437c2d:	add    BYTE PTR [rax],al
  437c2f:	add    BYTE PTR [rax],al
  437c31:	or     BYTE PTR [rax],al
  437c33:	add    BYTE PTR [rax],al
  437c35:	add    BYTE PTR [rax],al
  437c37:	add    al,al
  437c39:	add    BYTE PTR fs:[rax],al
  437c3d:	add    BYTE PTR [rax],al
  437c3f:	add    BYTE PTR [rbx],dh
  437c41:	(bad)  
  437c42:	rex.XB add BYTE PTR [r8],al
	...
  437c4d:	add    BYTE PTR [rax],al
  437c4f:	add    BYTE PTR [rcx+0x60],cl
  437c52:	rex.XB add BYTE PTR [r8],al
  437c55:	add    BYTE PTR [rax],al
  437c57:	add    BYTE PTR [rax],al
  437c59:	or     BYTE PTR [rax],al
  437c5b:	add    BYTE PTR [rax],al
  437c5d:	add    BYTE PTR [rax],al
  437c5f:	add    BYTE PTR [rax],al
  437c61:	push   0x40
  437c66:	add    BYTE PTR [rax],al
  437c68:	push   rdx
  437c69:	(bad)  
  437c6a:	rex.XB add BYTE PTR [r8],al
	...
  437c75:	add    BYTE PTR [rax],al
  437c77:	add    BYTE PTR [rdx+0x60],ch
  437c7a:	rex.XB add BYTE PTR [r8],al
  437c7d:	add    BYTE PTR [rax],al
  437c7f:	add    BYTE PTR [rax],al
  437c81:	or     BYTE PTR [rax],al
  437c83:	add    BYTE PTR [rax],al
  437c85:	add    BYTE PTR [rax],al
  437c87:	add    BYTE PTR [rax],ah
  437c89:	push   0x40
  437c8e:	add    BYTE PTR [rax],al
  437c90:	jae    0x437cf2
  437c92:	rex.XB add BYTE PTR [r8],al
	...
  437c9d:	add    BYTE PTR [rax],al
  437c9f:	add    BYTE PTR [rbx+0x4360],cl
  437ca5:	add    BYTE PTR [rax],al
  437ca7:	add    BYTE PTR [rax],al
  437ca9:	or     BYTE PTR [rax],al
  437cab:	add    BYTE PTR [rax],al
  437cad:	add    BYTE PTR [rax],al
  437caf:	add    BYTE PTR [rax+0x68],al
  437cb2:	add    BYTE PTR [rax],al
  437cb5:	add    BYTE PTR [rax],al
  437cb7:	add    BYTE PTR [rax+0x4360],dl
	...
  437cc5:	add    BYTE PTR [rax],al
  437cc7:	add    BYTE PTR [rdx+0x4360],dh
  437ccd:	add    BYTE PTR [rax],al
  437ccf:	add    BYTE PTR [rax],al
  437cd1:	or     BYTE PTR [rax],al
  437cd3:	add    BYTE PTR [rax],al
  437cd5:	add    BYTE PTR [rax],al
  437cd7:	add    BYTE PTR [rax+0x4068],dl
  437cdd:	add    BYTE PTR [rax],al
  437cdf:	add    BYTE PTR [rax+riz*2+0x43],bh
	...
  437cee:	add    BYTE PTR [rax],al
  437cf0:	(bad)  
  437cf1:	(bad)  
  437cf2:	rex.XB add BYTE PTR [r8],al
  437cf5:	add    BYTE PTR [rax],al
  437cf7:	add    BYTE PTR [rax],al
  437cf9:	or     BYTE PTR [rax],al
  437cfb:	add    BYTE PTR [rax],al
  437cfd:	add    BYTE PTR [rax],al
  437cff:	add    BYTE PTR [rax],dl
  437d01:	imul   eax,DWORD PTR [rax+0x0],0x0
  437d08:	frstor [rax+0x43]
	...
  437d17:	add    ah,dh
  437d19:	(bad)  
  437d1a:	rex.XB add BYTE PTR [r8],al
  437d1d:	add    BYTE PTR [rax],al
  437d1f:	add    BYTE PTR [rax],al
  437d21:	or     BYTE PTR [rax],al
  437d23:	add    BYTE PTR [rax],al
  437d25:	add    BYTE PTR [rax],al
  437d27:	add    BYTE PTR [rax],dh
  437d29:	imul   eax,DWORD PTR [rax+0x0],0x0
  437d2d:	add    BYTE PTR [rax],al
  437d2f:	add    ch,bh
  437d31:	(bad)  
  437d32:	rex.XB add BYTE PTR [r8],al
	...
  437d3d:	add    BYTE PTR [rax],al
  437d3f:	add    BYTE PTR [rdx],bl
  437d41:	(bad)  
  437d42:	rex.XB add BYTE PTR [r8],al
  437d45:	add    BYTE PTR [rax],al
  437d47:	add    BYTE PTR [rax],al
  437d49:	or     BYTE PTR [rax],al
  437d4b:	add    BYTE PTR [rax],al
  437d4d:	add    BYTE PTR [rax],al
  437d4f:	add    BYTE PTR [rax],dh
  437d51:	ins    BYTE PTR es:[rdi],dx
  437d52:	add    BYTE PTR [rax],al
  437d55:	add    BYTE PTR [rax],al
  437d57:	add    BYTE PTR [rdx],ah
  437d59:	(bad)  
  437d5a:	rex.XB add BYTE PTR [r8],al
	...
  437d65:	add    BYTE PTR [rax],al
  437d67:	add    BYTE PTR [rax+0x61],al
  437d6a:	rex.XB add BYTE PTR [r8],al
  437d6d:	add    BYTE PTR [rax],al
  437d6f:	add    BYTE PTR [rax],al
  437d71:	or     BYTE PTR [rax],al
  437d73:	add    BYTE PTR [rax],al
  437d75:	add    BYTE PTR [rax],al
  437d77:	add    BYTE PTR [rax+0x6d],ah
  437d7a:	add    BYTE PTR [rax],al
  437d7d:	add    BYTE PTR [rax],al
  437d7f:	add    BYTE PTR [rax+0x61],dl
  437d82:	rex.XB add BYTE PTR [r8],al
	...
  437d8d:	add    BYTE PTR [rax],al
  437d8f:	add    BYTE PTR [rcx+riz*2+0x43],dh
  437d93:	add    BYTE PTR [rax],al
  437d95:	add    BYTE PTR [rax],al
  437d97:	add    BYTE PTR [rax],al
  437d99:	or     BYTE PTR [rax],al
  437d9b:	add    BYTE PTR [rax],al
  437d9d:	add    BYTE PTR [rax],al
  437d9f:	add    al,al
  437da1:	push   0x40
  437da3:	add    BYTE PTR [rax],al
  437da5:	add    BYTE PTR [rax],al
  437da7:	add    BYTE PTR [rbx+0x61],bh
  437daa:	rex.XB add BYTE PTR [r8],al
	...
  437db5:	add    BYTE PTR [rax],al
  437db7:	add    BYTE PTR [rsi+0x4361],dl
  437dbd:	add    BYTE PTR [rax],al
  437dbf:	add    BYTE PTR [rcx],al
  437dc1:	add    BYTE PTR [rax],al
  437dc3:	add    BYTE PTR [rax],al
  437dc5:	add    BYTE PTR [rax],al
  437dc7:	add    BYTE PTR [rax],dl
  437dc9:	rex.WRXB
  437dca:	add    BYTE PTR [rax],al
  437dcd:	add    BYTE PTR [rax],al
  437dcf:	add    BYTE PTR [rdi+0x4361],bl
  437dd5:	add    BYTE PTR [rax],al
  437dd7:	add    BYTE PTR [rsi+0x4361],dl
  437ddd:	add    BYTE PTR [rax],al
  437ddf:	add    BYTE PTR [rdi],cl
  437de1:	rex.WRB
  437de2:	rex.XB add BYTE PTR [r8],al
  437de5:	add    BYTE PTR [rax],al
  437de7:	add    BYTE PTR [rcx],al
  437de9:	add    BYTE PTR [rax],al
  437deb:	add    BYTE PTR [rax],al
  437ded:	add    BYTE PTR [rax],al
  437def:	add    BYTE PTR [rax],dl
  437df1:	rex.WRXB
  437df2:	add    BYTE PTR [rax],al
  437df5:	add    BYTE PTR [rax],al
  437df7:	add    BYTE PTR [rdi+0x4361],bl
  437dfd:	add    BYTE PTR [rax],al
  437dff:	add    BYTE PTR [rsi+0x4361],dl
  437e05:	add    BYTE PTR [rax],al
  437e07:	add    BYTE PTR [rcx+0x4361],dh
	...
  437e15:	add    BYTE PTR [rax],al
  437e17:	add    BYTE PTR [rax],dl
  437e19:	push   rsp
  437e1a:	add    BYTE PTR [rax],al
  437e1d:	add    BYTE PTR [rax],al
  437e1f:	add    BYTE PTR [rax+0x4361],bh
	...
  437e2d:	add    BYTE PTR [rax],al
  437e2f:	add    dl,cl
  437e31:	(bad)  
  437e32:	rex.XB add BYTE PTR [r8],al
  437e35:	add    BYTE PTR [rax],al
  437e37:	add    BYTE PTR [rcx],al
  437e39:	add    BYTE PTR [rax],al
  437e3b:	add    BYTE PTR [rax],al
  437e3d:	add    BYTE PTR [rax],al
  437e3f:	add    BYTE PTR [rax],ah
  437e41:	push   rsp
  437e42:	add    BYTE PTR [rax],al
  437e45:	add    BYTE PTR [rax],al
  437e47:	add    al,bl
  437e49:	(bad)  
  437e4a:	rex.XB add BYTE PTR [r8],al
  437e4d:	add    BYTE PTR [rax],al
  437e4f:	add    BYTE PTR [rip+0x4362],al        # 0x43c1b7
  437e55:	add    BYTE PTR [rax],al
  437e57:	add    BYTE PTR [rbx],cl
  437e59:	(bad)  
  437e5b:	add    BYTE PTR [rax],al
  437e5d:	add    BYTE PTR [rax],al
  437e5f:	add    BYTE PTR [rip+0x0],al        # 0x437e65
  437e65:	add    BYTE PTR [rax],al
  437e67:	add    al,dl
  437e69:	rex.WRX
  437e6a:	add    BYTE PTR [rax],al
  437e6d:	add    BYTE PTR [rax],al
  437e6f:	add    BYTE PTR [rdx+riz*2],dl
  437e72:	rex.XB add BYTE PTR [r8],al
  437e75:	add    BYTE PTR [rax],al
  437e77:	add    BYTE PTR [rdi+0x52],al
  437e7a:	rex.XB add BYTE PTR [r8],al
  437e7d:	add    BYTE PTR [rax],al
  437e7f:	add    BYTE PTR [rip+0x4362],ch        # 0x43c1e7
  437e85:	add    BYTE PTR [rax],al
  437e87:	add    BYTE PTR [rsi],al
  437e89:	add    BYTE PTR [rax],al
  437e8b:	add    BYTE PTR [rax],al
  437e8d:	add    BYTE PTR [rax],al
  437e8f:	add    BYTE PTR [rax],dh
  437e91:	and    BYTE PTR [rax+rax*1+0x0],al
  437e95:	add    BYTE PTR [rax],al
  437e97:	add    BYTE PTR [rcx],bh
  437e99:	(bad)  
  437e9b:	add    BYTE PTR [rax],al
  437e9d:	add    BYTE PTR [rax],al
  437e9f:	add    BYTE PTR [rip+0x4362],ch        # 0x43c207
  437ea5:	add    BYTE PTR [rax],al
  437ea7:	add    BYTE PTR [rdx+riz*2+0x43],dl
  437eab:	add    BYTE PTR [rax],al
  437ead:	add    BYTE PTR [rax],al
  437eaf:	add    BYTE PTR [rcx],al
  437eb1:	or     BYTE PTR [rax],al
  437eb3:	add    BYTE PTR [rax],al
  437eb5:	add    BYTE PTR [rax],al
  437eb7:	add    BYTE PTR [rax+0x7b],ah
  437eba:	add    BYTE PTR [rax],al
  437ebd:	add    BYTE PTR [rax],al
  437ebf:	add    BYTE PTR [rax+0x62],ah
  437ec2:	rex.XB add BYTE PTR [r8],al
  437ec5:	add    BYTE PTR [rax],al
  437ec7:	add    BYTE PTR [rcx+0x4362],al
  437ecd:	add    BYTE PTR [rax],al
  437ecf:	add    BYTE PTR [rax+0x4362],cl
  437ed5:	add    BYTE PTR [rax],al
  437ed7:	add    BYTE PTR [rcx],al
  437ed9:	or     BYTE PTR [rax],al
  437edb:	add    BYTE PTR [rax],al
  437edd:	add    BYTE PTR [rax],al
  437edf:	add    BYTE PTR [rax],ah
  437ee1:	jge    0x437f23
  437ee3:	add    BYTE PTR [rax],al
  437ee5:	add    BYTE PTR [rax],al
  437ee7:	add    BYTE PTR [rax+0x4362],dl
  437eed:	add    BYTE PTR [rax],al
  437eef:	add    BYTE PTR [rcx+0x4362],al
  437ef5:	add    BYTE PTR [rax],al
  437ef7:	add    BYTE PTR [rbx+rax*2],al
  437efa:	rex.XB add BYTE PTR [r8],al
  437efd:	add    BYTE PTR [rax],al
  437eff:	add    BYTE PTR [rcx],cl
  437f01:	or     al,0x0
  437f04:	add    BYTE PTR [rax],al
  437f06:	add    BYTE PTR [rax],al
  437f08:	and    BYTE PTR [rax],al
  437f0a:	add    BYTE PTR [rax],al
  437f0c:	add    BYTE PTR [rax],al
  437f0e:	add    BYTE PTR [rax],al
  437f10:	mov    al,0x62
  437f12:	rex.XB add BYTE PTR [r8],al
  437f15:	add    BYTE PTR [rax],al
  437f17:	add    BYTE PTR [rbp+0x4362],bh
  437f1d:	add    BYTE PTR [rax],al
  437f1f:	add    cl,al
  437f21:	(bad)  
  437f23:	add    BYTE PTR [rax],al
  437f25:	add    BYTE PTR [rax],al
  437f27:	add    BYTE PTR [rdx],al
  437f29:	add    BYTE PTR [rax],al
  437f2b:	add    BYTE PTR [rax],al
  437f2d:	add    BYTE PTR [rax],al
  437f2f:	add    BYTE PTR [rax+0x4420],dh
  437f35:	add    BYTE PTR [rax],al
  437f37:	add    bl,al
  437f39:	(bad)  
	...
  437f47:	add    dl,bl
  437f49:	(bad)  
  437f4b:	add    BYTE PTR [rax],al
  437f4d:	add    BYTE PTR [rax],al
  437f4f:	add    BYTE PTR [rdx],al
  437f51:	add    BYTE PTR [rax],al
  437f53:	add    BYTE PTR [rax],al
  437f55:	add    BYTE PTR [rax],al
  437f57:	add    BYTE PTR [rax+riz*1+0x44],ch
  437f5e:	add    BYTE PTR [rax],al
  437f60:	fsub   QWORD PTR [rdx+0x43]
	...
  437f6f:	add    cl,bh
  437f71:	(bad)  
  437f73:	add    BYTE PTR [rax],al
  437f75:	add    BYTE PTR [rax],al
  437f77:	add    BYTE PTR [rdx],al
  437f79:	add    BYTE PTR [rax],al
  437f7b:	add    BYTE PTR [rax],al
  437f7d:	add    BYTE PTR [rax],al
  437f7f:	add    BYTE PTR [rax+0x4420],bl
  437f85:	add    BYTE PTR [rax],al
  437f87:	add    BYTE PTR [rax],cl
  437f89:	movsxd eax,DWORD PTR [rbx+0x0]
	...
  437f98:	and    al,0x63
  437f9a:	rex.XB add BYTE PTR [r8],al
  437f9d:	add    BYTE PTR [rax],al
  437f9f:	add    BYTE PTR [rsi],al
  437fa1:	add    BYTE PTR [rax],al
  437fa3:	add    BYTE PTR [rax],al
  437fa5:	add    BYTE PTR [rax],al
  437fa7:	add    BYTE PTR [rax+riz*1+0x44],dl
  437fae:	add    BYTE PTR [rax],al
  437fb0:	xor    DWORD PTR [rbx+0x43],esp
	...
  437fbf:	add    BYTE PTR [rbx+0x63],cl
  437fc2:	rex.XB add BYTE PTR [r8],al
  437fc5:	add    BYTE PTR [rax],al
  437fc7:	add    BYTE PTR [rcx],cl
  437fc9:	or     BYTE PTR [rax+rax*1],0x0
  437fcd:	add    BYTE PTR [rax],al
  437fcf:	add    BYTE PTR [rax],ch
  437fd1:	add    BYTE PTR [rax],al
  437fd3:	add    BYTE PTR [rax],al
  437fd5:	add    BYTE PTR [rax],al
  437fd7:	add    BYTE PTR [rbp+0x63],cl
  437fda:	rex.XB add BYTE PTR [r8],al
  437fdd:	add    BYTE PTR [rax],al
  437fdf:	add    BYTE PTR [rax+0x63],bl
  437fe2:	rex.XB add BYTE PTR [r8],al
  437fe5:	add    BYTE PTR [rax],al
  437fe7:	add    BYTE PTR [rax+0x63],bl
  437fea:	rex.XB add BYTE PTR [r8],al
  437fed:	add    BYTE PTR [rax],al
  437fef:	add    BYTE PTR [rcx],cl
  437ff1:	or     BYTE PTR [rax+rax*1],0x0
  437ff5:	add    BYTE PTR [rax],al
  437ff7:	add    BYTE PTR [rax],ch
  437ff9:	add    BYTE PTR [rax],al
  437ffb:	add    BYTE PTR [rax],al
  437ffd:	add    BYTE PTR [rax],al
  437fff:	add    BYTE PTR [rbp+0x63],cl
  438002:	rex.XB add BYTE PTR [r8],al
  438005:	add    BYTE PTR [rax],al
  438007:	add    BYTE PTR [rax+0x63],bl
  43800a:	rex.XB add BYTE PTR [r8],al
  43800d:	add    BYTE PTR [rax],al
  43800f:	add    BYTE PTR [rsi+0x63],bl
  438012:	rex.XB add BYTE PTR [r8],al
  438015:	add    BYTE PTR [rax],al
  438017:	add    BYTE PTR [rcx],cl
  438019:	or     BYTE PTR [rax],0x0
  43801c:	add    BYTE PTR [rax],al
  43801e:	add    BYTE PTR [rax],al
  438020:	(bad)  
  438021:	add    al,BYTE PTR [rax]
  438023:	add    BYTE PTR [rax],al
  438025:	add    BYTE PTR [rax],al
  438027:	add    BYTE PTR [rdx+0x63],ah
  43802a:	rex.XB add BYTE PTR [r8],al
  43802d:	add    BYTE PTR [rax],al
  43802f:	add    BYTE PTR [rsi+0x63],ch
  438032:	rex.XB add BYTE PTR [r8],al
  438035:	add    BYTE PTR [rax],al
  438037:	add    BYTE PTR [rbp+0x63],dh
  43803a:	rex.XB add BYTE PTR [r8],al
  43803d:	add    BYTE PTR [rax],al
  43803f:	add    BYTE PTR [rip+0x820],al        # 0x438865
  438045:	add    BYTE PTR [rax],al
  438047:	add    BYTE PTR [rax],ah
  438049:	cwde   
  43804a:	add    BYTE PTR [rax],al
  43804d:	add    BYTE PTR [rax],al
  43804f:	add    BYTE PTR [rcx+0x63],bh
  438052:	rex.XB add BYTE PTR [r8],al
  438055:	add    BYTE PTR [rax],al
  438057:	add    BYTE PTR [rax+0x4363],bl
  43805d:	add    BYTE PTR [rax],al
  43805f:	add    dh,bl
  438061:	movsxd eax,DWORD PTR [rbx+0x0]
  438064:	add    BYTE PTR [rax],al
  438066:	add    BYTE PTR [rax],al
  438068:	add    eax,0x820
  43806d:	add    BYTE PTR [rax],al
  43806f:	add    al,dh
  438071:	test   BYTE PTR [rax+0x0],al
  438074:	add    BYTE PTR [rax],al
  438076:	add    BYTE PTR [rax],al
  438078:	lock movsxd eax,DWORD PTR [rbx+0x0]
  43807c:	add    BYTE PTR [rax],al
  43807e:	add    BYTE PTR [rax],al
  438080:	and    BYTE PTR [rbx+rax*2+0x0],ah
  438084:	add    BYTE PTR [rax],al
  438086:	add    BYTE PTR [rax],al
  438088:	rex.WX
  438089:	rex.XB add BYTE PTR fs:[r8],al
  43808d:	add    BYTE PTR [rax],al
  43808f:	add    BYTE PTR [rcx],cl
  438091:	or     BYTE PTR [rax],0x0
  438094:	add    BYTE PTR [rax],al
  438096:	add    BYTE PTR [rax],al
  438098:	push   rax
  438099:	add    al,BYTE PTR [rax]
  43809b:	add    BYTE PTR [rax],al
  43809d:	add    BYTE PTR [rax],al
  43809f:	add    BYTE PTR [rax+0x64],bl
  4380a2:	rex.XB add BYTE PTR [r8],al
  4380a5:	add    BYTE PTR [rax],al
  4380a7:	add    BYTE PTR [rax+0x4364],cl
  4380ad:	add    BYTE PTR [rax],al
  4380af:	add    BYTE PTR [rbp+0x4364],ch
  4380b5:	add    BYTE PTR [rax],al
  4380b7:	add    BYTE PTR [rbp+0x840],al
  4380bd:	add    BYTE PTR [rax],al
  4380bf:	add    BYTE PTR [rcx+rax*1],ah
  4380c2:	add    BYTE PTR [rax],al
  4380c4:	add    BYTE PTR [rax],al
  4380c6:	add    BYTE PTR [rax],al
  4380c8:	mov    edx,0x4364
  4380cd:	add    BYTE PTR [rax],al
  4380cf:	add    bh,cl
  4380d1:	rex.XB add BYTE PTR fs:[r8],al
  4380d5:	add    BYTE PTR [rax],al
  4380d7:	add    al,ah
  4380d9:	rex.XB add BYTE PTR fs:[r8],al
  4380dd:	add    BYTE PTR [rax],al
  4380df:	add    BYTE PTR [rcx],al
  4380e1:	rex or eax,0x0
  4380e7:	add    BYTE PTR [rax],ch
  4380e9:	add    DWORD PTR [rax],eax
  4380eb:	add    BYTE PTR [rax],al
  4380ed:	add    BYTE PTR [rax],al
  4380ef:	add    al,ch
  4380f1:	rex.XB add BYTE PTR fs:[r8],al
  4380f5:	add    BYTE PTR [rax],al
  4380f7:	add    BYTE PTR [rcx],dl
  4380f9:	pop    rsi
  4380fa:	rex.XB add BYTE PTR [r8],al
  4380fd:	add    BYTE PTR [rax],al
  4380ff:	add    BYTE PTR [rsi],bl
  438101:	rex.XB add BYTE PTR gs:[r8],al
  438105:	add    BYTE PTR [rax],al
  438107:	add    BYTE PTR [rcx],al
  438109:	rex or DWORD PTR [rax],eax
  43810c:	add    BYTE PTR [rax],al
  43810e:	add    BYTE PTR [rax],al
  438110:	xor    BYTE PTR [rcx],al
  438112:	add    BYTE PTR [rax],al
  438114:	add    BYTE PTR [rax],al
  438116:	add    BYTE PTR [rax],al
  438118:	and    DWORD PTR [rbp+0x43],esp
  43811b:	add    BYTE PTR [rax],al
  43811d:	add    BYTE PTR [rax],al
  43811f:	add    BYTE PTR [rdi],bh
  438121:	rex.XB add BYTE PTR gs:[r8],al
  438125:	add    BYTE PTR [rax],al
  438127:	add    BYTE PTR [rcx+0x65],cl
  43812a:	rex.XB add BYTE PTR [r8],al
  43812d:	add    BYTE PTR [rax],al
  43812f:	add    BYTE PTR [rcx],al
  438131:	or     BYTE PTR [rax],r8b
  438134:	add    BYTE PTR [rax],al
  438136:	add    BYTE PTR [rax],al
  438138:	cmp    BYTE PTR [rcx],al
  43813a:	add    BYTE PTR [rax],al
  43813c:	add    BYTE PTR [rax],al
  43813e:	add    BYTE PTR [rax],al
  438140:	push   rax
  438141:	rex.XB add BYTE PTR gs:[r8],al
  438145:	add    BYTE PTR [rax],al
  438147:	add    BYTE PTR [rcx+0x65],dh
  43814a:	rex.XB add BYTE PTR [r8],al
  43814d:	add    BYTE PTR [rax],al
  43814f:	add    BYTE PTR [rbp+riz*2+0x43],bh
  438153:	add    BYTE PTR [rax],al
  438155:	add    BYTE PTR [rax],al
  438157:	add    BYTE PTR [rcx],al
  438159:	rex or eax,0x0
  43815f:	add    BYTE PTR [rax],cl
  438161:	add    BYTE PTR [rax],al
  438163:	add    BYTE PTR [rax],al
  438165:	add    BYTE PTR [rax],al
  438167:	add    BYTE PTR [rdi+0x65],bh
  43816a:	rex.XB add BYTE PTR [r8],al
  43816d:	add    BYTE PTR [rax],al
  43816f:	add    BYTE PTR [rcx+0x4365],bl
  438175:	add    BYTE PTR [rax],al
  438177:	add    BYTE PTR [rdx+0x4365],ah
  43817d:	add    BYTE PTR [rax],al
  43817f:	add    BYTE PTR [rcx],al
  438181:	rex or eax,0x0
  438187:	add    BYTE PTR [rax],dl
  438189:	add    BYTE PTR [rax],al
  43818b:	add    BYTE PTR [rax],al
  43818d:	add    BYTE PTR [rax],al
  43818f:	add    BYTE PTR [rax+0x4365],ch
  438195:	add    BYTE PTR [rax],al
  438197:	add    BYTE PTR [rcx+0x4365],bl
  43819d:	add    BYTE PTR [rax],al
  43819f:	add    dl,dl
  4381a1:	rex.XB add BYTE PTR gs:[r8],al
  4381a5:	add    BYTE PTR [rax],al
  4381a7:	add    BYTE PTR [rcx+0x440],al
  4381ad:	add    BYTE PTR [rax],al
  4381af:	add    BYTE PTR [rax],bl
  4381b1:	add    BYTE PTR [rax],al
  4381b3:	add    BYTE PTR [rax],al
  4381b5:	add    BYTE PTR [rax],al
  4381b7:	add    al,ch
  4381b9:	rex.XB add BYTE PTR gs:[r8],al
	...
  4381c5:	add    BYTE PTR [rax],al
  4381c7:	add    BYTE PTR [rip+0x4366],dl        # 0x43c533
  4381cd:	add    BYTE PTR [rax],al
  4381cf:	add    BYTE PTR [rsi],al
  4381d1:	add    al,0x0
  4381d4:	add    BYTE PTR [rax],al
  4381d6:	add    BYTE PTR [rax],al
  4381d8:	xchg   esp,eax
  4381d9:	add    BYTE PTR [rax],al
  4381db:	add    BYTE PTR [rax],al
  4381dd:	add    BYTE PTR [rax],al
  4381df:	add    BYTE PTR [rax],ch
  4381e1:	data16 rex.XB add BYTE PTR [r8],al
	...
  4381ed:	add    BYTE PTR [rax],al
  4381ef:	add    BYTE PTR [rcx+0x66],dl
  4381f2:	rex.XB add BYTE PTR [r8],al
  4381f5:	add    BYTE PTR [rax],al
  4381f7:	add    BYTE PTR [rip+0x540],al        # 0x43873d
  4381fd:	add    BYTE PTR [rax],al
  4381ff:	add    BYTE PTR [rax+0x0],cl
  438205:	add    BYTE PTR [rax],al
  438207:	add    BYTE PTR [rbx+0x66],bl
  43820a:	rex.XB add BYTE PTR [r8],al
  43820d:	add    BYTE PTR [rax],al
  43820f:	add    BYTE PTR [rcx+0x4365],bl
  438215:	add    BYTE PTR [rax],al
  438217:	add    BYTE PTR [rbx+0x66],dh
  43821a:	rex.XB add BYTE PTR [r8],al
  43821d:	add    BYTE PTR [rax],al
  43821f:	add    BYTE PTR [rip+0x680],al        # 0x4388a5
  438225:	add    BYTE PTR [rax],al
  438227:	add    BYTE PTR [rax+0x0],ah
  43822d:	add    BYTE PTR [rax],al
  43822f:	add    BYTE PTR [rsi+riz*2+0x43],bh
  438233:	add    BYTE PTR [rax],al
  438235:	add    BYTE PTR [rax],al
  438237:	add    BYTE PTR [rbx+0x4366],dl
  43823d:	add    BYTE PTR [rax],al
  43823f:	add    BYTE PTR [rcx+0x4366],bl
  438245:	add    BYTE PTR [rax],al
  438247:	add    BYTE PTR [rcx],al
  438249:	and    BYTE PTR [rax],cl
  43824b:	add    BYTE PTR [rax],al
  43824d:	add    BYTE PTR [rax],al
  43824f:	add    BYTE PTR [rax-0x69],al
  438252:	add    BYTE PTR [rax],al
  438255:	add    BYTE PTR [rax],al
  438257:	add    BYTE PTR [rax+0x4366],ch
  43825d:	add    BYTE PTR [rax],al
  43825f:	add    ah,ah
  438261:	data16 rex.XB add BYTE PTR [r8],al
  438265:	add    BYTE PTR [rax],al
  438267:	add    dl,ch
  438269:	rex.R
  43826a:	rex.XB add BYTE PTR [r8],al
  43826d:	add    BYTE PTR [rax],al
  43826f:	add    BYTE PTR [rcx],cl
  438271:	or     BYTE PTR [rax],0x0
  438274:	add    BYTE PTR [rax],al
  438276:	add    BYTE PTR [rax],al
  438278:	jo     0x43827b
  43827a:	add    BYTE PTR [rax],al
  43827c:	add    BYTE PTR [rax],al
  43827e:	add    BYTE PTR [rax],al
  438280:	jmp    0x43c5eb
  438285:	add    BYTE PTR [rax],al
  438287:	add    dh,dh
  438289:	data16 rex.XB add BYTE PTR [r8],al
  43828d:	add    BYTE PTR [rax],al
  43828f:	add    BYTE PTR [rdi+riz*2],al
  438292:	rex.XB add BYTE PTR [r8],al
  438295:	add    BYTE PTR [rax],al
  438297:	add    BYTE PTR [rip+0x820],al        # 0x438abd
  43829d:	add    BYTE PTR [rax],al
  43829f:	add    al,dl
  4382a1:	add    BYTE PTR [rax+0x0],0x0
  4382a5:	add    BYTE PTR [rax],al
  4382a7:	add    BYTE PTR [rax],dl
  4382a9:	rex.XB add BYTE PTR [r8d],al
  4382ad:	add    BYTE PTR [rax],al
  4382af:	add    BYTE PTR [rax],bh
  4382b1:	rex.XB add BYTE PTR [r8d],al
  4382b5:	add    BYTE PTR [rax],al
  4382b7:	add    BYTE PTR [rdi],bh
  4382b9:	rex.XB add BYTE PTR [r8d],al
  4382bd:	add    BYTE PTR [rax],al
  4382bf:	add    BYTE PTR [rsi],al
  4382c1:	add    BYTE PTR [rax],al
  4382c3:	add    BYTE PTR [rax],al
  4382c5:	add    BYTE PTR [rax],al
  4382c7:	add    BYTE PTR [rax+riz*1+0x44],al
  4382ce:	add    BYTE PTR [rax],al
  4382d0:	rex.WB
  4382d1:	rex.XB add BYTE PTR [r8d],al
	...
  4382dd:	add    BYTE PTR [rax],al
  4382df:	add    BYTE PTR [rsi+0x67],ah
  4382e2:	rex.XB add BYTE PTR [r8],al
  4382e5:	add    BYTE PTR [rax],al
  4382e7:	add    BYTE PTR [rsi],al
  4382e9:	add    BYTE PTR [rax],al
  4382eb:	add    BYTE PTR [rax],al
  4382ed:	add    BYTE PTR [rax],al
  4382ef:	add    BYTE PTR [rax+0x4420],al
  4382f5:	add    BYTE PTR [rax],al
  4382f7:	add    BYTE PTR [rdi+riz*2+0x43],dh
	...
  438307:	add    BYTE PTR [rsi+0x4367],cl
  43830d:	add    BYTE PTR [rax],al
  43830f:	add    BYTE PTR [rip+0x0],al        # 0x438315
  438315:	add    BYTE PTR [rax],al
  438317:	add    BYTE PTR [rax+0x4081],dl
  43831d:	add    BYTE PTR [rax],al
  43831f:	add    BYTE PTR [rax+0x4367],bl
  438325:	add    BYTE PTR [rax],al
  438327:	add    ah,al
  438329:	rex.XB add BYTE PTR [r8d],al
  43832d:	add    BYTE PTR [rax],al
  43832f:	add    al,cl
  438331:	rex.XB add BYTE PTR [r8d],al
  438335:	add    BYTE PTR [rax],al
  438337:	add    BYTE PTR [rsi],al
  438339:	add    BYTE PTR [rax],al
  43833b:	add    BYTE PTR [rax],al
  43833d:	add    BYTE PTR [rax],al
  43833f:	add    BYTE PTR [rcx+rdx*1],al
  438342:	rex.XB add BYTE PTR [r8],al
  438345:	add    BYTE PTR [rax],al
  438347:	add    al,dl
  438349:	rex.XB add BYTE PTR [r8d],al
	...
  438359:	push   0x43
  43835e:	add    BYTE PTR [rax],al
  438360:	add    eax,0x0
  438365:	add    BYTE PTR [rax],al
  438367:	add    BYTE PTR [rax+0x4054],al
  43836d:	add    BYTE PTR [rax],al
  43836f:	add    BYTE PTR [rdx],cl
  438371:	push   0x43
  438376:	add    BYTE PTR [rax],al
  438378:	and    eax,0x4368
  43837d:	add    BYTE PTR [rax],al
  43837f:	add    BYTE PTR [rbx],ch
  438381:	push   0x43
  438386:	add    BYTE PTR [rax],al
  438388:	(bad)  
  438389:	add    BYTE PTR [rax],al
  43838b:	add    BYTE PTR [rax],al
  43838d:	add    BYTE PTR [rax],al
  43838f:	add    BYTE PTR [rax+0x20],bh
  438392:	add    BYTE PTR [rax],r8b
  438395:	add    BYTE PTR [rax],al
  438397:	add    BYTE PTR [rax],dh
  438399:	push   0x43
	...
  4383a6:	add    BYTE PTR [rax],al
  4383a8:	rex.RXB push 0x43
  4383ae:	add    BYTE PTR [rax],al
  4383b0:	(bad)  
  4383b1:	add    BYTE PTR [rax],al
  4383b3:	add    BYTE PTR [rax],al
  4383b5:	add    BYTE PTR [rax],al
  4383b7:	add    BYTE PTR [rax+riz*1+0x44],bh
  4383bb:	add    BYTE PTR [rax],al
  4383bd:	add    BYTE PTR [rax],al
  4383bf:	add    BYTE PTR [rax+0x68],dl
  4383c2:	rex.XB add BYTE PTR [r8],al
	...
  4383cd:	add    BYTE PTR [rax],al
  4383cf:	add    BYTE PTR [rax+rbp*2+0x43],bh
  4383d3:	add    BYTE PTR [rax],al
  4383d5:	add    BYTE PTR [rax],al
  4383d7:	add    BYTE PTR [rsi],al
  4383d9:	add    al,0x0
  4383dc:	add    BYTE PTR [rax],al
  4383de:	add    BYTE PTR [rax],al
  4383e0:	nop
  4383e1:	add    BYTE PTR [rax],al
  4383e3:	add    BYTE PTR [rax],al
  4383e5:	add    BYTE PTR [rax],al
  4383e7:	add    BYTE PTR [rax+0x4368],al
  4383ed:	add    BYTE PTR [rax],al
  4383ef:	add    dh,bl
  4383f1:	(bad)  
  4383f2:	rex.XB add BYTE PTR [r8],al
  4383f5:	add    BYTE PTR [rax],al
  4383f7:	add    BYTE PTR [rax+0x4368],ah
  4383fd:	add    BYTE PTR [rax],al
  4383ff:	add    BYTE PTR [rcx],al
  438401:	and    BYTE PTR [rax],cl
  438403:	add    BYTE PTR [rax],al
  438405:	add    BYTE PTR [rax],al
  438407:	add    BYTE PTR [rax],dh
  438409:	mov    al,BYTE PTR [rax+0x0]
  43840c:	add    BYTE PTR [rax],al
  43840e:	add    BYTE PTR [rax],al
  438410:	test   al,0x68
  438412:	rex.XB add BYTE PTR [r8],al
  438415:	add    BYTE PTR [rax],al
  438417:	add    BYTE PTR [rdx],bl
  438419:	imul   eax,DWORD PTR [rbx+0x0],0x0
  438420:	add    BYTE PTR [rdx+0x43],cl
  438423:	add    BYTE PTR [rax],al
  438425:	add    BYTE PTR [rax],al
  438427:	add    BYTE PTR [rip+0x0],al        # 0x43842d
  43842d:	add    BYTE PTR [rax],al
  43842f:	add    BYTE PTR [rax-0x5c],dh
  438432:	add    BYTE PTR [rax],al
  438435:	add    BYTE PTR [rax],al
  438437:	add    BYTE PTR [rdi],bl
  438439:	imul   eax,DWORD PTR [rbx+0x0],0x0
  438440:	fidivr WORD PTR [rdi]
  438442:	rex.XB add BYTE PTR [r8],al
  438445:	add    BYTE PTR [rax],al
  438447:	add    BYTE PTR [rcx],dh
  438449:	imul   eax,DWORD PTR [rbx+0x0],0x0
  438450:	add    eax,0x1
  438455:	add    BYTE PTR [rax],al
  438457:	add    BYTE PTR [rax+riz*1+0x44],cl
  43845e:	add    BYTE PTR [rax],al
  438460:	rex.RX imul r8d,DWORD PTR [rbx+0x0],0x0
  438468:	fidivr WORD PTR [rdi]
  43846a:	rex.XB add BYTE PTR [r8],al
  43846d:	add    BYTE PTR [rax],al
  43846f:	add    BYTE PTR [rbx+0x69],bl
  438472:	rex.XB add BYTE PTR [r8],al
  438475:	add    BYTE PTR [rax],al
  438477:	add    BYTE PTR [rbp+0x0],al
  43847d:	add    BYTE PTR [rax],al
  43847f:	add    BYTE PTR [rax+0x4420],dl
  438485:	add    BYTE PTR [rax],al
  438487:	add    BYTE PTR [rcx+0x69],ah
  43848a:	rex.XB add BYTE PTR [r8],al
  43848d:	add    BYTE PTR [rax],al
  43848f:	add    dh,bl
  438491:	(bad)  
  438492:	rex.XB add BYTE PTR [r8],al
  438495:	add    BYTE PTR [rax],al
  438497:	add    BYTE PTR [rbx+0x69],dh
  43849a:	rex.XB add BYTE PTR [r8],al
  43849d:	add    BYTE PTR [rax],al
  43849f:	add    BYTE PTR [rip+0x1],al        # 0x4384a6
  4384a5:	add    BYTE PTR [rax],al
  4384a7:	add    BYTE PTR [rax],ah
  4384a9:	adc    DWORD PTR [rbx+0x0],eax
  4384ac:	add    BYTE PTR [rax],al
  4384ae:	add    BYTE PTR [rax],al
  4384b0:	test   BYTE PTR [rcx+0x43],ch
  4384b3:	add    BYTE PTR [rax],al
  4384b5:	add    BYTE PTR [rax],al
  4384b7:	add    BYTE PTR [rdx+0x4369],bl
  4384bd:	add    BYTE PTR [rax],al
  4384bf:	add    BYTE PTR [rcx+rbp*2+0x43],ah
  4384c6:	add    BYTE PTR [rax],al
  4384c8:	(bad)  
  4384c9:	add    BYTE PTR [rax],al
  4384cb:	add    BYTE PTR [rax],al
  4384cd:	add    BYTE PTR [rax],al
  4384cf:	add    BYTE PTR [rax+riz*1+0x44],dh
  4384d3:	add    BYTE PTR [rax],al
  4384d5:	add    BYTE PTR [rax],al
  4384d7:	add    BYTE PTR [rbx+0x4369],ch
	...
  4384e5:	add    BYTE PTR [rax],al
  4384e7:	add    BYTE PTR [rbx+0x4369],bh
  4384ed:	add    BYTE PTR [rax],al
  4384ef:	add    BYTE PTR [rsi],al
  4384f1:	add    BYTE PTR [rax],al
  4384f3:	add    BYTE PTR [rax],al
  4384f5:	add    BYTE PTR [rax],al
  4384f7:	add    BYTE PTR [rax+0x20],dh
  4384fa:	add    BYTE PTR [rax],r8b
  4384fd:	add    BYTE PTR [rax],al
  4384ff:	add    al,dl
  438501:	imul   eax,DWORD PTR [rbx+0x0],0x0
	...
  438510:	(bad)  
  438511:	push   0x43
  438513:	add    BYTE PTR [rax],al
  438515:	add    BYTE PTR [rax],al
  438517:	add    BYTE PTR [rbp+0x0],al
  43851d:	add    BYTE PTR [rax],al
  43851f:	add    BYTE PTR [rcx+rdx*1],cl
  438522:	rex.XB add BYTE PTR [r8],al
  438525:	add    BYTE PTR [rax],al
  438527:	add    BYTE PTR [rax],dl
  438529:	push   0x43
  43852b:	add    BYTE PTR [rax],al
  43852d:	add    BYTE PTR [rax],al
  43852f:	add    BYTE PTR [rax+0x6a],al
  438532:	rex.XB add BYTE PTR [r8],al
  438535:	add    BYTE PTR [rax],al
  438537:	add    BYTE PTR [rbp+0x6a],al
  43853a:	rex.XB add BYTE PTR [r8],al
  43853d:	add    BYTE PTR [rax],al
  43853f:	add    BYTE PTR [rsi],al
  438541:	or     BYTE PTR [rax],al
  438544:	add    BYTE PTR [rax],al
  438546:	add    BYTE PTR [rax],al
  438548:	add    QWORD PTR [rax],rax
  43854b:	add    BYTE PTR [rax],al
  43854d:	add    BYTE PTR [rax],al
  43854f:	add    BYTE PTR [rax+0x6a],dl
  438552:	rex.XB add BYTE PTR [r8],al
	...
  43855d:	add    BYTE PTR [rax],al
  43855f:	add    BYTE PTR [rsi+0x6a],dh
  438562:	rex.XB add BYTE PTR [r8],al
  438565:	add    BYTE PTR [rax],al
  438567:	add    BYTE PTR [rcx],cl
  438569:	or     BYTE PTR [rax],0x0
  43856c:	add    BYTE PTR [rax],al
  43856e:	add    BYTE PTR [rax],al
  438570:	adc    BYTE PTR [rbx],al
  438572:	add    BYTE PTR [rax],al
  438574:	add    BYTE PTR [rax],al
  438576:	add    BYTE PTR [rax],al
  438578:	jnp    0x4385e4
  43857a:	rex.XB add BYTE PTR [r8],al
  43857d:	add    BYTE PTR [rax],al
  43857f:	add    dh,bl
  438581:	(bad)  
  438582:	rex.XB add BYTE PTR [r8],al
  438585:	add    BYTE PTR [rax],al
  438587:	add    BYTE PTR [rbp+0x436a],al
  43858d:	add    BYTE PTR [rax],al
  43858f:	add    BYTE PTR [rip+0x1],al        # 0x438596
  438595:	add    BYTE PTR [rax],al
  438597:	add    BYTE PTR [rcx+rdx*1],bl
  43859a:	rex.XB add BYTE PTR [r8],al
  43859d:	add    BYTE PTR [rax],al
  43859f:	add    BYTE PTR [rax+0x436a],ah
  4385a5:	add    BYTE PTR [rax],al
  4385a7:	add    BYTE PTR [rdx+0x4369],bl
  4385ad:	add    BYTE PTR [rax],al
  4385af:	add    al,cl
  4385b1:	push   0x43
  4385b3:	add    BYTE PTR [rax],al
  4385b5:	add    BYTE PTR [rax],al
  4385b7:	add    BYTE PTR [rip+0x1],al        # 0x4385be
  4385bd:	add    BYTE PTR [rax],al
  4385bf:	add    BYTE PTR [rax],bl
  4385c1:	adc    DWORD PTR [rbx+0x0],eax
  4385c4:	add    BYTE PTR [rax],al
  4385c6:	add    BYTE PTR [rax],al
  4385c8:	loopne 0x438634
  4385ca:	rex.XB add BYTE PTR [r8],al
  4385cd:	add    BYTE PTR [rax],al
  4385cf:	add    BYTE PTR [rdx+0x4369],bl
  4385d5:	add    BYTE PTR [rax],al
  4385d7:	add    BYTE PTR [rax],al
  4385d9:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4385dd:	add    BYTE PTR [rax],al
  4385df:	add    BYTE PTR [rsi],al
  4385e1:	add    BYTE PTR [rax],al
  4385e3:	add    BYTE PTR [rax],al
  4385e5:	add    BYTE PTR [rax],al
  4385e7:	add    BYTE PTR [rax+0x20],ch
  4385ea:	add    BYTE PTR [rax],r8b
  4385ed:	add    BYTE PTR [rax],al
  4385ef:	add    BYTE PTR [rdi],al
  4385f1:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4385f5:	add    BYTE PTR [rax],al
  4385f7:	add    BYTE PTR [rip+0x436b],dl        # 0x43c968
  4385fd:	add    BYTE PTR [rax],al
  4385ff:	add    BYTE PTR [rbx],bl
  438601:	imul   eax,DWORD PTR [rbx+0x0],0x0
  438605:	add    BYTE PTR [rax],al
  438607:	add    BYTE PTR [rsi],al
  438609:	or     BYTE PTR [rax],0x0
  43860c:	add    BYTE PTR [rax],al
  43860e:	add    BYTE PTR [rax],al
  438610:	jo     0x438614
  438612:	add    BYTE PTR [rax],al
  438614:	add    BYTE PTR [rax],al
  438616:	add    BYTE PTR [rax],al
  438618:	and    al,0x6b
  43861a:	rex.XB add BYTE PTR [r8],al
	...
  438625:	add    BYTE PTR [rax],al
  438627:	add    BYTE PTR [rdi],bh
  438629:	imul   eax,DWORD PTR [rbx+0x0],0x0
  43862d:	add    BYTE PTR [rax],al
  43862f:	add    BYTE PTR [rbp+0x880],al
  438635:	add    BYTE PTR [rax],al
  438637:	add    BYTE PTR [rax+0x2],al
  43863d:	add    BYTE PTR [rax],al
  43863f:	add    BYTE PTR [rax+0x6b],dl
  438642:	rex.XB add BYTE PTR [r8],al
	...
  43864d:	add    BYTE PTR [rax],al
  43864f:	add    BYTE PTR [rcx+0x6b],bh
  438652:	rex.XB add BYTE PTR [r8],al
  438655:	add    BYTE PTR [rax],al
  438657:	add    BYTE PTR [rcx],al
  438659:	test   BYTE PTR [rax],cl
  43865b:	add    BYTE PTR [rax],al
  43865d:	add    BYTE PTR [rax],al
  43865f:	add    BYTE PTR [rax+0x1],al
  438665:	add    BYTE PTR [rax],al
  438667:	add    BYTE PTR [rax+0x436b],al
  43866d:	add    BYTE PTR [rax],al
  43866f:	add    BYTE PTR [rax],bh
  438671:	rex.XB add BYTE PTR [r8d],al
  438675:	add    BYTE PTR [rax],al
  438677:	add    BYTE PTR [rbx+0x436b],ah
  43867d:	add    BYTE PTR [rax],al
  43867f:	add    BYTE PTR [rip+0xc80],cl        # 0x439305
  438685:	add    BYTE PTR [rax],al
  438687:	add    BYTE PTR [rax+0x1],ah
  43868d:	add    BYTE PTR [rax],al
  43868f:	add    BYTE PTR [rdi+0x436b],ah
  438695:	add    BYTE PTR [rax],al
  438697:	add    BYTE PTR [rsi+0x436b],bh
  43869d:	add    BYTE PTR [rax],al
  43869f:	add    cl,cl
  4386a1:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4386a5:	add    BYTE PTR [rax],al
  4386a7:	add    BYTE PTR [rip+0xa80],al        # 0x43912d
  4386ad:	add    BYTE PTR [rax],al
  4386af:	add    al,al
  4386b1:	add    DWORD PTR [rax],eax
  4386b3:	add    BYTE PTR [rax],al
  4386b5:	add    BYTE PTR [rax],al
  4386b7:	add    bl,cl
  4386b9:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4386bd:	add    BYTE PTR [rax],al
  4386bf:	add    cl,cl
  4386c1:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4386c5:	add    BYTE PTR [rax],al
  4386c7:	add    BYTE PTR [rbp+0x4349],ah
  4386cd:	add    BYTE PTR [rax],al
  4386cf:	add    BYTE PTR [rip+0x820],al        # 0x438ef5
  4386d5:	add    BYTE PTR [rax],al
  4386d7:	add    al,dl
  4386d9:	movabs ds:0x6bcb000000000040,eax
  4386e2:	rex.XB add BYTE PTR [r8],al
  4386e5:	add    BYTE PTR [rax],al
  4386e7:	add    cl,cl
  4386e9:	imul   eax,DWORD PTR [rbx+0x0],0x0
  4386ed:	add    BYTE PTR [rax],al
  4386ef:	add    BYTE PTR [rdx],bh
  4386f1:	rex.RXB
  4386f2:	rex.XB add BYTE PTR [r8],al
  4386f5:	add    BYTE PTR [rax],al
  4386f7:	add    BYTE PTR [rip+0x820],al        # 0x438f1d
  4386fd:	add    BYTE PTR [rax],al
  4386ff:	add    al,dl
  438701:	popf   
  438702:	add    BYTE PTR [rax],al
  438705:	add    BYTE PTR [rax],al
  438707:	add    cl,ch
  438709:	imul   eax,DWORD PTR [rbx+0x0],0x0
  43870d:	add    BYTE PTR [rax],al
  43870f:	add    BYTE PTR [rdx],bh
  438711:	rex.RXB
  438712:	rex.XB add BYTE PTR [r8],al
  438715:	add    BYTE PTR [rax],al
  438717:	add    ch,dh
  438719:	imul   eax,DWORD PTR [rbx+0x0],0x0
  43871d:	add    BYTE PTR [rax],al
  43871f:	add    BYTE PTR [rcx],cl
  438721:	or     BYTE PTR [rax],0x0
  438724:	add    BYTE PTR [rax],al
  438726:	add    BYTE PTR [rax],al
  438728:	nop
  438729:	add    al,BYTE PTR [rax]
  43872b:	add    BYTE PTR [rax],al
  43872d:	add    BYTE PTR [rax],al
  43872f:	add    ah,bh
  438731:	imul   eax,DWORD PTR [rbx+0x0],0x0
  438735:	add    BYTE PTR [rax],al
  438737:	add    BYTE PTR [rbx],dl
  438739:	ins    BYTE PTR es:[rdi],dx
  43873a:	rex.XB add BYTE PTR [r8],al
  43873d:	add    BYTE PTR [rax],al
  43873f:	add    BYTE PTR [rax],ah
  438741:	ins    BYTE PTR es:[rdi],dx
  438742:	rex.XB add BYTE PTR [r8],al
  438745:	add    BYTE PTR [rax],al
  438747:	add    BYTE PTR [rcx],cl
  438749:	or     BYTE PTR [rax],0x0
  43874c:	add    BYTE PTR [rax],al
  43874e:	add    BYTE PTR [rax],al
  438750:	movabs al,ds:0x3000000000000002
  438759:	ins    BYTE PTR es:[rdi],dx
  43875a:	rex.XB add BYTE PTR [r8],al
  43875d:	add    BYTE PTR [rax],al
  43875f:	add    BYTE PTR [rax],ch
  438761:	push   rax
  438762:	rex.XB add BYTE PTR [r8],al
  438765:	add    BYTE PTR [rax],al
  438767:	add    BYTE PTR [rax+0x6c],ah
  43876a:	rex.XB add BYTE PTR [r8],al
  43876d:	add    BYTE PTR [rax],al
  43876f:	add    BYTE PTR [rcx+0x480],al
  438775:	add    BYTE PTR [rax],al
  438777:	add    BYTE PTR [rax+0x2],dh
  43877d:	add    BYTE PTR [rax],al
  43877f:	add    BYTE PTR [rax+0x6c],dh
  438782:	rex.XB add BYTE PTR [r8],al
  438785:	add    BYTE PTR [rax],al
  438787:	add    dh,bl
  438789:	(bad)  
  43878a:	rex.XB add BYTE PTR [r8],al
  43878d:	add    BYTE PTR [rax],al
  43878f:	add    BYTE PTR [rsi+0x436c],bl
  438795:	add    BYTE PTR [rax],al
  438797:	add    BYTE PTR [rip+0x0],al        # 0x43879d
  43879d:	add    BYTE PTR [rax],al
  43879f:	add    al,dh
  4387a1:	add    BYTE PTR [rax+0x0],0x0
  4387a5:	add    BYTE PTR [rax],al
  4387a7:	add    BYTE PTR [rbp+0x436c],ch
  4387ad:	add    BYTE PTR [rax],al
  4387af:	add    dl,cl
  4387b1:	ins    BYTE PTR es:[rdi],dx
  4387b2:	rex.XB add BYTE PTR [r8],al
  4387b5:	add    BYTE PTR [rax],al
  4387b7:	add    ah,bl
  4387b9:	ins    BYTE PTR es:[rdi],dx
  4387ba:	rex.XB add BYTE PTR [r8],al
  4387bd:	add    BYTE PTR [rax],al
  4387bf:	add    BYTE PTR [rip+0x0],al        # 0x4387c5
  4387c5:	add    BYTE PTR [rax],al
  4387c7:	add    al,dh
  4387c9:	add    BYTE PTR [rax+0x0],0x0
  4387cd:	add    BYTE PTR [rax],al
  4387cf:	add    BYTE PTR [rbp+0x436c],ch
  4387d5:	add    BYTE PTR [rax],al
  4387d7:	add    dl,cl
  4387d9:	ins    BYTE PTR es:[rdi],dx
  4387da:	rex.XB add BYTE PTR [r8],al
  4387dd:	add    BYTE PTR [rax],al
  4387df:	add    dl,ah
  4387e1:	ins    BYTE PTR es:[rdi],dx
  4387e2:	rex.XB add BYTE PTR [r8],al
  4387e5:	add    BYTE PTR [rax],al
  4387e7:	add    BYTE PTR [rip+0x0],al        # 0x4387ed
  4387ed:	add    BYTE PTR [rax],al
  4387ef:	add    al,al
  4387f1:	xchg   DWORD PTR [rax+0x0],eax
  4387f4:	add    BYTE PTR [rax],al
  4387f6:	add    BYTE PTR [rax],al
  4387f8:	clc    
  4387f9:	ins    BYTE PTR es:[rdi],dx
  4387fa:	rex.XB add BYTE PTR [r8],al
  4387fd:	add    BYTE PTR [rax],al
  4387ff:	add    BYTE PTR [rax],ch
  438801:	push   rax
  438802:	rex.XB add BYTE PTR [r8],al
  438805:	add    BYTE PTR [rax],al
  438807:	add    BYTE PTR [rsi+0x52],ah
  43880a:	rex.XB add BYTE PTR [r8],al
  43880d:	add    BYTE PTR [rax],al
  43880f:	add    BYTE PTR [rdx],al
  438811:	add    BYTE PTR [rax],al
  438813:	add    BYTE PTR [rax],al
  438815:	add    BYTE PTR [rax],al
  438817:	add    BYTE PTR [rax],cl
  438819:	adc    DWORD PTR [rbx+0x0],eax
  43881c:	add    BYTE PTR [rax],al
  43881e:	add    BYTE PTR [rax],al
  438820:	xor    BYTE PTR [rbp+0x43],ch
	...
  43882f:	add    BYTE PTR [rsi+0x6d],dl
  438832:	rex.XB add BYTE PTR [r8],al
  438835:	add    BYTE PTR [rax],al
  438837:	add    BYTE PTR [rip+0x820],al        # 0x43905d
  43883d:	add    BYTE PTR [rax],al
  43883f:	add    BYTE PTR [rax+0x7f],ah
  438842:	add    BYTE PTR [rax],al
  438845:	add    BYTE PTR [rax],al
  438847:	add    BYTE PTR [rax+0x6d],ah
  43884a:	rex.XB add BYTE PTR [r8],al
  43884d:	add    BYTE PTR [rax],al
  43884f:	add    BYTE PTR [rax],ch
  438851:	push   rax
  438852:	rex.XB add BYTE PTR [r8],al
  438855:	add    BYTE PTR [rax],al
  438857:	add    BYTE PTR [rbp+0x436d],al
  43885d:	add    BYTE PTR [rax],al
  43885f:	add    BYTE PTR [rip+0x480],cl        # 0x438ce5
  438865:	add    BYTE PTR [rax],al
  438867:	add    BYTE PTR [rax+0x0],dh
  43886d:	add    BYTE PTR [rax],al
  43886f:	add    BYTE PTR [rax+0x436d],bl
  438875:	add    BYTE PTR [rax],al
  438877:	add    BYTE PTR [rax],ch
  438879:	push   rax
  43887a:	rex.XB add BYTE PTR [r8],al
  43887d:	add    BYTE PTR [rax],al
  43887f:	add    BYTE PTR [rdx+0x436d],bh
  438885:	add    BYTE PTR [rax],al
  438887:	add    BYTE PTR [rsi],al
  438889:	add    BYTE PTR [rax],al
  43888b:	add    BYTE PTR [rax],al
  43888d:	add    BYTE PTR [rax],al
  43888f:	add    BYTE PTR [rax+riz*1+0x44],ch
  438893:	add    BYTE PTR [rax],al
  438895:	add    BYTE PTR [rax],al
  438897:	add    al,cl
  438899:	ins    DWORD PTR es:[rdi],dx
  43889a:	rex.XB add BYTE PTR [r8],al
	...
  4388a5:	add    BYTE PTR [rax],al
  4388a7:	add    bh,ah
  4388a9:	ins    DWORD PTR es:[rdi],dx
  4388aa:	rex.XB add BYTE PTR [r8],al
  4388ad:	add    BYTE PTR [rax],al
  4388af:	add    BYTE PTR [rcx],al
  4388b1:	add    DWORD PTR [rax],eax
  4388b3:	add    BYTE PTR [rax],al
  4388b5:	add    BYTE PTR [rax],al
  4388b7:	add    BYTE PTR [rax],al
  4388b9:	adc    DWORD PTR [rbx+0x0],eax
  4388bc:	add    BYTE PTR [rax],al
  4388be:	add    BYTE PTR [rax],al
  4388c0:	imul   BYTE PTR [rbp+0x43]
  4388c3:	add    BYTE PTR [rax],al
  4388c5:	add    BYTE PTR [rax],al
  4388c7:	add    BYTE PTR [rax],dl
  4388c9:	outs   dx,BYTE PTR ds:[rsi]
  4388ca:	rex.XB add BYTE PTR [r8],al
  4388cd:	add    BYTE PTR [rax],al
  4388cf:	add    BYTE PTR [rbx+0x6e],bh
  4388d2:	rex.XB add BYTE PTR [r8],al
  4388d5:	add    BYTE PTR [rax],al
  4388d7:	add    BYTE PTR [rcx],cl
  4388d9:	add    BYTE PTR [rax+rax*1],0x0
  4388dd:	add    BYTE PTR [rax],al
  4388df:	add    BYTE PTR [rax],ah
  4388e1:	add    eax,DWORD PTR [rax]
  4388e3:	add    BYTE PTR [rax],al
  4388e5:	add    BYTE PTR [rax],al
  4388e7:	add    BYTE PTR [rbx+0x6e],bh
  4388ea:	rex.XB add BYTE PTR [r8],al
  4388ed:	add    BYTE PTR [rax],al
  4388ef:	add    dh,bl
  4388f1:	(bad)  
  4388f2:	rex.XB add BYTE PTR [r8],al
  4388f5:	add    BYTE PTR [rax],al
  4388f7:	add    BYTE PTR [rbx+0x436e],al
  4388fd:	add    BYTE PTR [rax],al
  4388ff:	add    BYTE PTR [rcx],cl
  438901:	or     BYTE PTR [rax],0x0
  438904:	add    BYTE PTR [rax],al
  438906:	add    BYTE PTR [rax],al
  438908:	xor    BYTE PTR [rbx],al
  43890a:	add    BYTE PTR [rax],al
  43890c:	add    BYTE PTR [rax],al
  43890e:	add    BYTE PTR [rax],al
  438910:	sub    DWORD PTR [rsi+0x43],0x0
  438914:	add    BYTE PTR [rax],al
  438916:	add    BYTE PTR [rax],al
  438918:	fidivr WORD PTR [rdi]
  43891a:	rex.XB add BYTE PTR [r8],al
  43891d:	add    BYTE PTR [rax],al
  43891f:	add    BYTE PTR [rdi+0x436e],cl
  438925:	add    BYTE PTR [rax],al
  438927:	add    BYTE PTR [rbp+0x440],al
  43892d:	add    BYTE PTR [rax],al
  43892f:	add    BYTE PTR [rax+0x0],bl
  438935:	add    BYTE PTR [rax],al
  438937:	add    BYTE PTR [rax+0x436e],ch
	...
  438945:	add    BYTE PTR [rax],al
  438947:	add    dl,ah
  438949:	outs   dx,BYTE PTR ds:[rsi]
  43894a:	rex.XB add BYTE PTR [r8],al
  43894d:	add    BYTE PTR [rax],al
  43894f:	add    BYTE PTR [rcx],dl
  438951:	and    BYTE PTR [rax],cl
  438953:	add    BYTE PTR [rax],al
  438955:	add    BYTE PTR [rax],al
  438957:	add    BYTE PTR [rax+0x4080],dh
  43895d:	add    BYTE PTR [rax],al
  43895f:	add    al,dh
  438961:	outs   dx,BYTE PTR ds:[rsi]
  438962:	rex.XB add BYTE PTR [r8],al
  438965:	add    BYTE PTR [rax],al
  438967:	add    BYTE PTR [rax],bh
  438969:	rex.XB add BYTE PTR [r8d],al
  43896d:	add    BYTE PTR [rax],al
  43896f:	add    BYTE PTR [rbx+0x43],al
  438972:	rex.XB add BYTE PTR [r8],al
  438975:	add    BYTE PTR [rax],al
  438977:	add    BYTE PTR [rcx],bl
  438979:	or     BYTE PTR [rax+rax*1],0x0
  43897d:	add    BYTE PTR [rax],al
  43897f:	add    BYTE PTR [rax+0x0],bl
  438982:	add    BYTE PTR [rax],al
  438984:	add    BYTE PTR [rax],al
  438986:	add    BYTE PTR [rax],al
  438988:	and    BYTE PTR [rdi+0x43],ch
  43898b:	add    BYTE PTR [rax],al
  43898d:	add    BYTE PTR [rax],al
  43898f:	add    BYTE PTR [rdi+rbp*2+0x43],dl
  438993:	add    BYTE PTR [rax],al
  438995:	add    BYTE PTR [rax],al
  438997:	add    BYTE PTR [rbx+rax*2],dh
  43899a:	rex.XB add BYTE PTR [r8],al
  43899d:	add    BYTE PTR [rax],al
  43899f:	add    BYTE PTR [rcx],bl
  4389a1:	(bad)  
  4389a2:	or     al,0x0
  4389a4:	add    BYTE PTR [rax],al
  4389a6:	add    BYTE PTR [rax],al
  4389a8:	push   0x0
  4389ad:	add    BYTE PTR [rax],al
  4389af:	add    BYTE PTR [rax+0x6f],ah
  4389b2:	rex.XB add BYTE PTR [r8],al
  4389b5:	add    BYTE PTR [rax],al
  4389b7:	add    BYTE PTR [rbp+0x436f],al
  4389bd:	add    BYTE PTR [rax],al
  4389bf:	add    BYTE PTR [rdx+0x436f],cl
  4389c5:	add    BYTE PTR [rax],al
  4389c7:	add    BYTE PTR [rcx],bl
  4389c9:	or     BYTE PTR [rax],0x0
  4389cc:	add    BYTE PTR [rax],al
  4389ce:	add    BYTE PTR [rax],al
  4389d0:	lock add DWORD PTR [rax],eax
  4389d3:	add    BYTE PTR [rax],al
  4389d5:	add    BYTE PTR [rax],al
  4389d7:	add    BYTE PTR [rax+0x436f],bl
  4389dd:	add    BYTE PTR [rax],al
  4389df:	add    BYTE PTR [rdx+0x436f],cl
  4389e5:	add    BYTE PTR [rax],al
  4389e7:	add    BYTE PTR [rbx],bh
  4389e9:	rex.XB
  4389ea:	rex.XB add BYTE PTR [r8],al
  4389ed:	add    BYTE PTR [rax],al
  4389ef:	add    BYTE PTR [rip+0xc80],bl        # 0x439675
  4389f5:	add    BYTE PTR [rax],al
  4389f7:	add    BYTE PTR [rax+0x0],bh
  4389fa:	add    BYTE PTR [rax],al
  4389fc:	add    BYTE PTR [rax],al
  4389fe:	add    BYTE PTR [rax],al
  438a00:	(bad)  
  438a01:	outs   dx,DWORD PTR ds:[rsi]
  438a02:	rex.XB add BYTE PTR [r8],al
  438a05:	add    BYTE PTR [rax],al
  438a07:	add    al,bl
  438a09:	outs   dx,DWORD PTR ds:[rsi]
  438a0a:	rex.XB add BYTE PTR [r8],al
  438a0d:	add    BYTE PTR [rax],al
  438a0f:	add    bh,bl
  438a11:	outs   dx,DWORD PTR ds:[rsi]
  438a12:	rex.XB add BYTE PTR [r8],al
  438a15:	add    BYTE PTR [rax],al
  438a17:	add    BYTE PTR [rcx+0x0],dl
  438a1d:	add    BYTE PTR [rax],al
  438a1f:	add    BYTE PTR [rax+0x20],ah
  438a22:	add    BYTE PTR [rax],r8b
  438a25:	add    BYTE PTR [rax],al
  438a27:	add    al,bh
  438a29:	outs   dx,DWORD PTR ds:[rsi]
  438a2a:	rex.XB add BYTE PTR [r8],al
  438a2d:	add    BYTE PTR [rax],al
  438a2f:	add    BYTE PTR [rax],bh
  438a31:	rex.XB add BYTE PTR [r8d],al
  438a35:	add    BYTE PTR [rax],al
  438a37:	add    BYTE PTR [rsi],bl
  438a39:	jo     0x438a7e
  438a3b:	add    BYTE PTR [rax],al
  438a3d:	add    BYTE PTR [rax],al
  438a3f:	add    BYTE PTR [rsi],dl
  438a41:	add    BYTE PTR [rax],al
  438a43:	add    BYTE PTR [rax],al
  438a45:	add    BYTE PTR [rax],al
  438a47:	add    BYTE PTR [rax+riz*1+0x44],dh
  438a4e:	add    BYTE PTR [rax],al
  438a50:	and    al,0x70
  438a52:	rex.XB add BYTE PTR [r8],al
	...
  438a5d:	add    BYTE PTR [rax],al
  438a5f:	add    BYTE PTR [rax],bh
  438a61:	jo     0x438aa6
  438a63:	add    BYTE PTR [rax],al
  438a65:	add    BYTE PTR [rax],al
  438a67:	add    BYTE PTR [rdx],dl
  438a69:	or     al,0x0
  438a6c:	add    BYTE PTR [rax],al
  438a6e:	add    BYTE PTR [rax],al
  438a70:	add    QWORD PTR [rax],r8
  438a73:	add    BYTE PTR [rax],al
  438a75:	add    BYTE PTR [rax],al
  438a77:	add    BYTE PTR [rbx],bh
  438a79:	jo     0x438abe
	...
  438a87:	add    BYTE PTR [rcx+0x70],cl
  438a8a:	rex.XB add BYTE PTR [r8],al
  438a8d:	add    BYTE PTR [rax],al
  438a8f:	add    BYTE PTR [rip+0x880],bl        # 0x439315
  438a95:	add    BYTE PTR [rax],al
  438a97:	add    BYTE PTR [rax],al
  438a99:	add    al,BYTE PTR [rax]
  438a9b:	add    BYTE PTR [rax],al
  438a9d:	add    BYTE PTR [rax],al
  438a9f:	add    BYTE PTR [rax+0x70],bl
  438aa2:	rex.XB add BYTE PTR [r8],al
  438aa5:	add    BYTE PTR [rax],al
  438aa7:	add    BYTE PTR [rbp+0x4370],al
  438aad:	add    BYTE PTR [rax],al
  438aaf:	add    BYTE PTR [rsi+0x49],cl
  438ab2:	rex.XB add BYTE PTR [r8],al
  438ab5:	add    BYTE PTR [rax],al
  438ab7:	add    BYTE PTR [rcx],dl
  438ab9:	and    BYTE PTR [rax+rax*1],cl
  438abc:	add    BYTE PTR [rax],al
  438abe:	add    BYTE PTR [rax],al
  438ac0:	sar    BYTE PTR [rdi+0x40],1
  438ac3:	add    BYTE PTR [rax],al
  438ac5:	add    BYTE PTR [rax],al
  438ac7:	add    BYTE PTR [rax+0x4370],dl
  438acd:	add    BYTE PTR [rax],al
  438acf:	add    BYTE PTR [rax+0x63],bl
  438ad2:	rex.XB add BYTE PTR [r8],al
  438ad5:	add    BYTE PTR [rax],al
  438ad7:	add    BYTE PTR [rdx+0x4370],bh
  438add:	add    BYTE PTR [rax],al
  438adf:	add    BYTE PTR [rax+rax*1],dl
  438ae2:	add    BYTE PTR [rax],al
  438ae4:	add    BYTE PTR [rax],al
  438ae6:	add    BYTE PTR [rax],al
  438ae8:	sar    BYTE PTR [rsi+0x40],0x0
  438aec:	add    BYTE PTR [rax],al
  438aee:	add    BYTE PTR [rax],al
  438af0:	shl    BYTE PTR [rax+0x43],0x0
	...
  438b00:	enter  0x4370,0x0
  438b04:	add    BYTE PTR [rax],al
  438b06:	add    BYTE PTR [rax],al
  438b08:	adc    al,0x0
  438b0a:	add    BYTE PTR [rax],al
  438b0c:	add    BYTE PTR [rax],al
  438b0e:	add    BYTE PTR [rax],al
  438b10:	sar    BYTE PTR [rsi+0x40],0x0
  438b14:	add    BYTE PTR [rax],al
  438b16:	add    BYTE PTR [rax],al
  438b18:	shl    BYTE PTR [rax+0x43],0x0
	...
  438b28:	shl    DWORD PTR [rax+0x43],cl
  438b2b:	add    BYTE PTR [rax],al
  438b2d:	add    BYTE PTR [rax],al
  438b2f:	add    BYTE PTR [rcx],dl
  438b31:	and    BYTE PTR [rax],cl
  438b33:	add    BYTE PTR [rax],al
  438b35:	add    BYTE PTR [rax],al
  438b37:	add    al,dl
  438b39:	xchg   esi,eax
  438b3a:	add    BYTE PTR [rax],al
  438b3d:	add    BYTE PTR [rax],al
  438b3f:	add    ah,bl
  438b41:	jo     0x438b86
  438b43:	add    BYTE PTR [rax],al
  438b45:	add    BYTE PTR [rax],al
  438b47:	add    al,bh
  438b49:	jo     0x438b8e
  438b4b:	add    BYTE PTR [rax],al
  438b4d:	add    BYTE PTR [rax],al
  438b4f:	add    BYTE PTR [rax],cl
  438b51:	jno    0x438b96
  438b53:	add    BYTE PTR [rax],al
  438b55:	add    BYTE PTR [rax],al
  438b57:	add    BYTE PTR [rcx+0x880],dl
  438b5d:	add    BYTE PTR [rax],al
  438b5f:	add    al,ah
  438b61:	add    al,BYTE PTR [rax]
  438b63:	add    BYTE PTR [rax],al
  438b65:	add    BYTE PTR [rax],al
  438b67:	add    BYTE PTR [rax],dl
  438b69:	jno    0x438bae
  438b6b:	add    BYTE PTR [rax],al
  438b6d:	add    BYTE PTR [rax],al
  438b6f:	add    dl,bl
  438b71:	(bad)  
  438b73:	add    BYTE PTR [rax],al
  438b75:	add    BYTE PTR [rax],al
  438b77:	add    BYTE PTR [rax],dh
  438b79:	jno    0x438bbe
  438b7b:	add    BYTE PTR [rax],al
  438b7d:	add    BYTE PTR [rax],al
  438b7f:	add    BYTE PTR [rip+0x880],bl        # 0x439405
  438b85:	add    BYTE PTR [rax],al
  438b87:	add    al,dh
  438b89:	add    al,BYTE PTR [rax]
  438b8b:	add    BYTE PTR [rax],al
  438b8d:	add    BYTE PTR [rax],al
  438b8f:	add    BYTE PTR [rax+0x71],al
  438b92:	rex.XB add BYTE PTR [r8],al
  438b95:	add    BYTE PTR [rax],al
  438b97:	add    BYTE PTR [rbp+0x71],ah
  438b9a:	rex.XB add BYTE PTR [r8],al
  438b9d:	add    BYTE PTR [rax],al
  438b9f:	add    BYTE PTR [rcx+rsi*2+0x43],ch
  438ba3:	add    BYTE PTR [rax],al
  438ba5:	add    BYTE PTR [rax],al
  438ba7:	add    BYTE PTR [rsi],dl
  438ba9:	add    BYTE PTR [rax],al
  438bab:	add    BYTE PTR [rax],al
  438bad:	add    BYTE PTR [rax],al
  438baf:	add    BYTE PTR [rax+0x4420],cl
  438bb5:	add    BYTE PTR [rax],al
  438bb7:	add    BYTE PTR [rax+0x71],bh
  438bba:	rex.XB add BYTE PTR [r8],al
	...
  438bc5:	add    BYTE PTR [rax],al
  438bc7:	add    BYTE PTR [rax+0x4371],dh
  438bcd:	add    BYTE PTR [rax],al
  438bcf:	add    BYTE PTR [rsi],dl
  438bd1:	add    BYTE PTR [rax],al
  438bd3:	add    BYTE PTR [rax],al
  438bd5:	add    BYTE PTR [rax],al
  438bd7:	add    BYTE PTR [rax+0x4420],ch
  438bdd:	add    BYTE PTR [rax],al
  438bdf:	add    BYTE PTR [rax+0x4371],bh
	...
  438bed:	add    BYTE PTR [rax],al
  438bef:	add    ah,bl
  438bf1:	jno    0x438c36
  438bf3:	add    BYTE PTR [rax],al
  438bf5:	add    BYTE PTR [rax],al
  438bf7:	add    BYTE PTR [rax+rax*1],dl
  438bfa:	add    BYTE PTR [rax],al
  438bfc:	add    BYTE PTR [rax],al
  438bfe:	add    BYTE PTR [rax],al
  438c00:	push   rax
  438c01:	sahf   
  438c02:	add    BYTE PTR [rax],al
  438c05:	add    BYTE PTR [rax],al
  438c07:	add    al,ch
  438c09:	jno    0x438c4e
	...
  438c17:	add    BYTE PTR [rip+0x4372],cl        # 0x43cf8f
  438c1d:	add    BYTE PTR [rax],al
  438c1f:	add    BYTE PTR [rip+0x0],dl        # 0x438c25
  438c25:	add    BYTE PTR [rax],al
  438c27:	add    BYTE PTR [rax+0x4082],al
  438c2d:	add    BYTE PTR [rax],al
  438c2f:	add    al,ch
  438c31:	jno    0x438c76
  438c33:	add    BYTE PTR [rax],al
  438c35:	add    BYTE PTR [rax],al
  438c37:	add    BYTE PTR [rdx],dh
  438c39:	rex.W
  438c3a:	rex.XB add BYTE PTR [r8],al
  438c3d:	add    BYTE PTR [rax],al
  438c3f:	add    BYTE PTR [rcx],bl
  438c41:	jb     0x438c86
  438c43:	add    BYTE PTR [rax],al
  438c45:	add    BYTE PTR [rax],al
  438c47:	add    BYTE PTR [rcx],dl
  438c49:	and    BYTE PTR [rax],cl
  438c4b:	add    BYTE PTR [rax],al
  438c4d:	add    BYTE PTR [rax],al
  438c4f:	add    BYTE PTR [rax+0x4080],dl
  438c55:	add    BYTE PTR [rax],al
  438c57:	add    BYTE PTR [rdx+rsi*2],bl
  438c5a:	rex.XB add BYTE PTR [r8],al
  438c5d:	add    BYTE PTR [rax],al
  438c5f:	add    BYTE PTR [rbx],dl
  438c61:	ins    BYTE PTR es:[rdi],dx
  438c62:	rex.XB add BYTE PTR [r8],al
  438c65:	add    BYTE PTR [rax],al
  438c67:	add    BYTE PTR [rsi],ch
  438c69:	jb     0x438cae
  438c6b:	add    BYTE PTR [rax],al
  438c6d:	add    BYTE PTR [rax],al
  438c6f:	add    BYTE PTR [rip+0x880],bl        # 0x4394f5
  438c75:	add    BYTE PTR [rax],al
  438c77:	add    BYTE PTR [rax],dl
  438c79:	add    al,BYTE PTR [rax]
  438c7b:	add    BYTE PTR [rax],al
  438c7d:	add    BYTE PTR [rax],al
  438c7f:	add    BYTE PTR [rbx],bh
  438c81:	jb     0x438cc6
  438c83:	add    BYTE PTR [rax],al
  438c85:	add    BYTE PTR [rax],al
  438c87:	add    BYTE PTR [rdi+0x72],dl
  438c8a:	rex.XB add BYTE PTR [r8],al
  438c8d:	add    BYTE PTR [rax],al
  438c8f:	add    BYTE PTR [rsi+0x72],bl
  438c92:	rex.XB add BYTE PTR [r8],al
  438c95:	add    BYTE PTR [rax],al
  438c97:	add    BYTE PTR [rip+0x880],bl        # 0x43951d
  438c9d:	add    BYTE PTR [rax],al
  438c9f:	add    BYTE PTR [rax],ah
  438ca1:	add    al,BYTE PTR [rax]
  438ca3:	add    BYTE PTR [rax],al
  438ca5:	add    BYTE PTR [rax],al
  438ca7:	add    BYTE PTR [rbx+0x72],ch
  438caa:	rex.XB add BYTE PTR [r8],al
  438cad:	add    BYTE PTR [rax],al
  438caf:	add    BYTE PTR [rdi+0x72],dl
  438cb2:	rex.XB add BYTE PTR [r8],al
  438cb5:	add    BYTE PTR [rax],al
  438cb7:	add    BYTE PTR [rdi+0x4372],al
  438cbd:	add    BYTE PTR [rax],al
  438cbf:	add    BYTE PTR [rip+0x880],bl        # 0x439545
  438cc5:	add    BYTE PTR [rax],al
  438cc7:	add    BYTE PTR [rax],dh
  438cc9:	add    al,BYTE PTR [rax]
  438ccb:	add    BYTE PTR [rax],al
  438ccd:	add    BYTE PTR [rax],al
  438ccf:	add    BYTE PTR [rbx],bh
  438cd1:	jb     0x438d16
  438cd3:	add    BYTE PTR [rax],al
  438cd5:	add    BYTE PTR [rax],al
  438cd7:	add    BYTE PTR [rdi+0x72],dl
  438cda:	rex.XB add BYTE PTR [r8],al
  438cdd:	add    BYTE PTR [rax],al
  438cdf:	add    BYTE PTR [rbx+0x4372],bl
  438ce5:	add    BYTE PTR [rax],al
  438ce7:	add    BYTE PTR [rbp+0xc80],dl
  438ced:	add    BYTE PTR [rax],al
  438cef:	add    BYTE PTR [rax+0x2],al
  438cf2:	add    BYTE PTR [rax],al
  438cf4:	add    BYTE PTR [rax],al
  438cf6:	add    BYTE PTR [rax],al
  438cf8:	movabs al,ds:0xde00000000004372
  438d01:	(bad)  
  438d02:	rex.XB add BYTE PTR [r8],al
  438d05:	add    BYTE PTR [rax],al
  438d07:	add    bl,al
  438d09:	jb     0x438d4e
  438d0b:	add    BYTE PTR [rax],al
  438d0d:	add    BYTE PTR [rax],al
  438d0f:	add    BYTE PTR [rip+0xc20],dl        # 0x439935
  438d15:	add    BYTE PTR [rax],al
  438d17:	add    BYTE PTR [rax+0x4096],al
  438d1d:	add    BYTE PTR [rax],al
  438d1f:	add    al,cl
  438d21:	jb     0x438d66
  438d23:	add    BYTE PTR [rax],al
  438d25:	add    BYTE PTR [rax],al
  438d27:	add    BYTE PTR [rsi+0x436b],bh
  438d2d:	add    BYTE PTR [rax],al
  438d2f:	add    bh,bl
  438d31:	jb     0x438d76
  438d33:	add    BYTE PTR [rax],al
  438d35:	add    BYTE PTR [rax],al
  438d37:	add    BYTE PTR [rsi],dl
  438d39:	add    BYTE PTR [rax],al
  438d3b:	add    BYTE PTR [rax],al
  438d3d:	add    BYTE PTR [rax],al
  438d3f:	add    BYTE PTR [rax+riz*1+0x44],ah
  438d43:	add    BYTE PTR [rax],al
  438d45:	add    BYTE PTR [rax],al
  438d47:	add    dh,ah
  438d49:	jb     0x438d8e
	...
  438d57:	add    al,bh
  438d59:	jb     0x438d9e
  438d5b:	add    BYTE PTR [rax],al
  438d5d:	add    BYTE PTR [rax],al
  438d5f:	add    BYTE PTR [rsi],dl
  438d61:	or     BYTE PTR [rax],0x0
  438d64:	add    BYTE PTR [rax],al
  438d66:	add    BYTE PTR [rax],al
  438d68:	loopne 0x438d6b
  438d6a:	add    BYTE PTR [rax],al
  438d6c:	add    BYTE PTR [rax],al
  438d6e:	add    BYTE PTR [rax],al
  438d70:	or     BYTE PTR [rbx+0x43],dh
	...
  438d7f:	add    BYTE PTR [rbp+0x73],dl
  438d82:	rex.XB add BYTE PTR [r8],al
  438d85:	add    BYTE PTR [rax],al
  438d87:	add    BYTE PTR [rip+0x820],dl        # 0x4395ad
  438d8d:	add    BYTE PTR [rax],al
  438d8f:	add    BYTE PTR [rax+0x4095],al
  438d95:	add    BYTE PTR [rax],al
  438d97:	add    BYTE PTR [rax+0x73],ah
  438d9a:	rex.XB add BYTE PTR [r8],al
  438d9d:	add    BYTE PTR [rax],al
  438d9f:	add    BYTE PTR [rbp+0x4373],al
  438da5:	add    BYTE PTR [rax],al
  438da7:	add    BYTE PTR [rdi+0x4373],dl
  438dad:	add    BYTE PTR [rax],al
  438daf:	add    BYTE PTR [rip+0x880],bl        # 0x439635
  438db5:	add    BYTE PTR [rax],al
  438db7:	add    al,dl
  438db9:	add    DWORD PTR [rax],eax
  438dbb:	add    BYTE PTR [rax],al
  438dbd:	add    BYTE PTR [rax],al
  438dbf:	add    BYTE PTR [rax+0x4373],ch
  438dc5:	add    BYTE PTR [rax],al
  438dc7:	add    cl,dl
  438dc9:	jae    0x438e0e
  438dcb:	add    BYTE PTR [rax],al
  438dcd:	add    BYTE PTR [rax],al
  438dcf:	add    BYTE PTR [rdi],al
  438dd1:	rex.RXB
  438dd2:	rex.XB add BYTE PTR [r8],al
  438dd5:	add    BYTE PTR [rax],al
  438dd7:	add    BYTE PTR [rcx],dl
  438dd9:	and    BYTE PTR [rax],cl
  438ddb:	add    BYTE PTR [rax],al
  438ddd:	add    BYTE PTR [rax],al
  438ddf:	add    BYTE PTR [rax],dl
  438de1:	popf   
  438de2:	add    BYTE PTR [rax],al
  438de5:	add    BYTE PTR [rax],al
  438de7:	add    al,ah
  438de9:	jae    0x438e2e
  438deb:	add    BYTE PTR [rax],al
  438ded:	add    BYTE PTR [rax],al
  438def:	add    BYTE PTR [rax],al
  438df1:	je     0x438e36
  438df3:	add    BYTE PTR [rax],al
  438df5:	add    BYTE PTR [rax],al
  438df7:	add    BYTE PTR [rdx],cl
  438df9:	rex.RXB
  438dfa:	rex.XB add BYTE PTR [r8],al
  438dfd:	add    BYTE PTR [rax],al
  438dff:	add    BYTE PTR [rcx],dl
  438e01:	and    BYTE PTR [rax],cl
  438e03:	add    BYTE PTR [rax],al
  438e05:	add    BYTE PTR [rax],al
  438e07:	add    BYTE PTR [rax],dl
  438e09:	popf   
  438e0a:	add    BYTE PTR [rax],al
  438e0d:	add    BYTE PTR [rax],al
  438e0f:	add    BYTE PTR [rax],cl
  438e11:	je     0x438e56
  438e13:	add    BYTE PTR [rax],al
  438e15:	add    BYTE PTR [rax],al
  438e17:	add    BYTE PTR [rax],al
  438e19:	je     0x438e5e
  438e1b:	add    BYTE PTR [rax],al
  438e1d:	add    BYTE PTR [rax],al
  438e1f:	add    BYTE PTR [rax],ch
  438e21:	je     0x438e66
  438e23:	add    BYTE PTR [rax],al
  438e25:	add    BYTE PTR [rax],al
  438e27:	add    BYTE PTR [rip+0x480],bl        # 0x4392ad
  438e2d:	add    BYTE PTR [rax],al
  438e2f:	add    al,al
  438e31:	add    BYTE PTR [rax],al
  438e33:	add    BYTE PTR [rax],al
  438e35:	add    BYTE PTR [rax],al
  438e37:	add    BYTE PTR [rax],dh
  438e39:	je     0x438e7e
  438e3b:	add    BYTE PTR [rax],al
  438e3d:	add    BYTE PTR [rax],al
  438e3f:	add    BYTE PTR [rsp+rsi*2+0x43],cl
  438e43:	add    BYTE PTR [rax],al
  438e45:	add    BYTE PTR [rax],al
  438e47:	add    BYTE PTR [rcx+0x74],bl
  438e4a:	rex.XB add BYTE PTR [r8],al
  438e4d:	add    BYTE PTR [rax],al
  438e4f:	add    BYTE PTR [rip+0x480],bl        # 0x4392d5
  438e55:	add    BYTE PTR [rax],al
  438e57:	add    al,dl
  438e59:	add    BYTE PTR [rax],al
  438e5b:	add    BYTE PTR [rax],al
  438e5d:	add    BYTE PTR [rax],al
  438e5f:	add    BYTE PTR [rax+0x74],ch
  438e62:	rex.XB add BYTE PTR [r8],al
  438e65:	add    BYTE PTR [rax],al
  438e67:	add    BYTE PTR [rsp+rsi*2+0x43],cl
  438e6e:	add    BYTE PTR [rax],al
  438e70:	xchg   edi,eax
  438e71:	je     0x438eb6
  438e73:	add    BYTE PTR [rax],al
  438e75:	add    BYTE PTR [rax],al
  438e77:	add    BYTE PTR [rax],al
  438e79:	or     BYTE PTR [rax],al
  438e7b:	add    BYTE PTR [rax],al
  438e7d:	add    BYTE PTR [rax],al
  438e7f:	add    BYTE PTR [rax],ah
  438e81:	jg     0x438ec3
  438e83:	add    BYTE PTR [rax],al
  438e85:	add    BYTE PTR [rax],al
  438e87:	add    BYTE PTR [rax+0x4374],ah
	...
  438e95:	add    BYTE PTR [rax],al
  438e97:	add    bh,al
  438e99:	je     0x438ede
  438e9b:	add    BYTE PTR [rax],al
  438e9d:	add    BYTE PTR [rax],al
  438e9f:	add    BYTE PTR [rdi],al
  438ea1:	add    BYTE PTR [rax+rax*1],0x0
  438ea5:	add    BYTE PTR [rax],al
  438ea7:	add    al,ah
  438ea9:	add    BYTE PTR [rax],al
  438eab:	add    BYTE PTR [rax],al
  438ead:	add    BYTE PTR [rax],al
  438eaf:	add    al,bl
  438eb1:	je     0x438ef6
	...
  438ebf:	add    BYTE PTR [rsi*2+0x43],al
  438ec6:	add    BYTE PTR [rax],al
  438ec8:	and    DWORD PTR [rax],esp
  438eca:	or     BYTE PTR [rax],al
  438ecc:	add    BYTE PTR [rax],al
  438ece:	add    BYTE PTR [rax],al
  438ed0:	jo     0x438e52
  438ed2:	add    BYTE PTR [rax],al
  438ed5:	add    BYTE PTR [rax],al
  438ed7:	add    BYTE PTR [rax],dl
  438ed9:	jne    0x438f1e
  438edb:	add    BYTE PTR [rax],al
  438edd:	add    BYTE PTR [rax],al
  438edf:	add    BYTE PTR [rax],bh
  438ee1:	rex.XB add BYTE PTR [r8d],al
  438ee5:	add    BYTE PTR [rax],al
  438ee7:	add    BYTE PTR [rcx],bh
  438ee9:	jne    0x438f2e
  438eeb:	add    BYTE PTR [rax],al
  438eed:	add    BYTE PTR [rax],al
  438eef:	add    BYTE PTR [rcx],ah
  438ef1:	and    BYTE PTR [rax],cl
  438ef3:	add    BYTE PTR [rax],al
  438ef5:	add    BYTE PTR [rax],al
  438ef7:	add    BYTE PTR [rax-0x80],dl
  438efa:	add    BYTE PTR [rax],al
  438efd:	add    BYTE PTR [rax],al
  438eff:	add    BYTE PTR [rax+0x75],al
  438f02:	rex.XB add BYTE PTR [r8],al
  438f05:	add    BYTE PTR [rax],al
  438f07:	add    BYTE PTR [rbx+0x75],ah
  438f0a:	rex.XB add BYTE PTR [r8],al
  438f0d:	add    BYTE PTR [rax],al
  438f0f:	add    BYTE PTR [rcx+0x4342],ah
  438f15:	add    BYTE PTR [rax],al
  438f17:	add    BYTE PTR [rcx+0xc80],ah
  438f1d:	add    BYTE PTR [rax],al
  438f1f:	add    BYTE PTR [rax+0x0],cl
  438f22:	add    BYTE PTR [rax],al
  438f24:	add    BYTE PTR [rax],al
  438f26:	add    BYTE PTR [rax],al
  438f28:	jo     0x438f9f
  438f2a:	rex.XB add BYTE PTR [r8],al
  438f2d:	add    BYTE PTR [rax],al
  438f2f:	add    BYTE PTR [rdi+rbp*2+0x43],dl
  438f33:	add    BYTE PTR [rax],al
  438f35:	add    BYTE PTR [rax],al
  438f37:	add    BYTE PTR [rsi+0x4342],ah
  438f3d:	add    BYTE PTR [rax],al
  438f3f:	add    BYTE PTR [rcx+0xc80],ah
  438f45:	add    BYTE PTR [rax],al
  438f47:	add    BYTE PTR [rax],bh
  438f49:	add    BYTE PTR [rax],al
  438f4b:	add    BYTE PTR [rax],al
  438f4d:	add    BYTE PTR [rax],al
  438f4f:	add    BYTE PTR [rax+0x4375],dl
  438f55:	add    BYTE PTR [rax],al
  438f57:	add    ah,ah
  438f59:	rex.WR
  438f5a:	rex.XB add BYTE PTR [r8],al
  438f5d:	add    BYTE PTR [rax],al
  438f5f:	add    BYTE PTR [rbp+0x4375],ch
  438f65:	add    BYTE PTR [rax],al
  438f67:	add    BYTE PTR [rdx],ah
  438f69:	or     al,0x0
  438f6c:	add    BYTE PTR [rax],al
  438f6e:	add    BYTE PTR [rax],al
  438f70:	push   rax
  438f71:	add    DWORD PTR [rax],eax
  438f73:	add    BYTE PTR [rax],al
  438f75:	add    BYTE PTR [rax],al
  438f77:	add    BYTE PTR [rax+0x4375],dh
	...
  438f85:	add    BYTE PTR [rax],al
  438f87:	add    BYTE PTR [rdi+0x49],al
  438f8a:	rex.XB add BYTE PTR [r8],al
  438f8d:	add    BYTE PTR [rax],al
  438f8f:	add    BYTE PTR [rcx],ah
  438f91:	and    BYTE PTR [rax+rax*1],cl
  438f94:	add    BYTE PTR [rax],al
  438f96:	add    BYTE PTR [rax],al
  438f98:	mov    al,0x7f
  438f9a:	add    BYTE PTR [rax],al
  438f9d:	add    BYTE PTR [rax],al
  438f9f:	add    al,al
  438fa1:	jne    0x438fe6
  438fa3:	add    BYTE PTR [rax],al
  438fa5:	add    BYTE PTR [rax],al
  438fa7:	add    BYTE PTR [rax+0x63],bl
  438faa:	rex.XB add BYTE PTR [r8],al
  438fad:	add    BYTE PTR [rax],al
  438faf:	add    dl,ch
  438fb1:	jne    0x438ff6
  438fb3:	add    BYTE PTR [rax],al
  438fb5:	add    BYTE PTR [rax],al
  438fb7:	add    BYTE PTR [rip+0x820],ah        # 0x4397dd
  438fbd:	add    BYTE PTR [rax],al
  438fbf:	add    BYTE PTR [rax+0x4096],al
  438fc5:	add    BYTE PTR [rax],al
  438fc7:	add    bh,ch
  438fc9:	jne    0x43900e
  438fcb:	add    BYTE PTR [rax],al
  438fcd:	add    BYTE PTR [rax],al
  438fcf:	add    BYTE PTR [rsi+0x436b],bh
  438fd5:	add    BYTE PTR [rax],al
  438fd7:	add    BYTE PTR [rsi],al
  438fd9:	jbe    0x43901e
  438fdb:	add    BYTE PTR [rax],al
  438fdd:	add    BYTE PTR [rax],al
  438fdf:	add    BYTE PTR [rcx+0x0],ah
  438fe5:	add    BYTE PTR [rax],al
  438fe7:	add    BYTE PTR [rcx+rdx*1],dl
  438fea:	rex.XB add BYTE PTR [r8],al
  438fed:	add    BYTE PTR [rax],al
  438fef:	add    BYTE PTR [rax],dl
  438ff1:	jbe    0x439036
  438ff3:	add    BYTE PTR [rax],al
  438ff5:	add    BYTE PTR [rax],al
  438ff7:	add    BYTE PTR [rcx],dh
  438ff9:	jbe    0x43903e
  438ffb:	add    BYTE PTR [rax],al
  438ffd:	add    BYTE PTR [rax],al
  438fff:	add    BYTE PTR [rax],bh
  439001:	jbe    0x439046
  439003:	add    BYTE PTR [rax],al
  439005:	add    BYTE PTR [rax],al
  439007:	add    BYTE PTR [rip+0xc80],ch        # 0x439c8d
  43900d:	add    BYTE PTR [rax],al
  43900f:	add    BYTE PTR [rax+0x1],dh
  439015:	add    BYTE PTR [rax],al
  439017:	add    BYTE PTR [rbx+0x76],al
  43901a:	rex.XB add BYTE PTR [r8],al
  43901d:	add    BYTE PTR [rax],al
  43901f:	add    al,bl
  439021:	outs   dx,DWORD PTR ds:[rsi]
  439022:	rex.XB add BYTE PTR [r8],al
  439025:	add    BYTE PTR [rax],al
  439027:	add    BYTE PTR [rbp+0x76],dl
  43902a:	rex.XB add BYTE PTR [r8],al
  43902d:	add    BYTE PTR [rax],al
  43902f:	add    BYTE PTR [rip+0xc20],ah        # 0x439c55
  439035:	add    BYTE PTR [rax],al
  439037:	add    al,al
  439039:	mov    cl,0x40
  43903b:	add    BYTE PTR [rax],al
  43903d:	add    BYTE PTR [rax],al
  43903f:	add    BYTE PTR [rsi+rsi*2+0x43],ah
  439043:	add    BYTE PTR [rax],al
  439045:	add    BYTE PTR [rax],al
  439047:	add    BYTE PTR [rdi+0x76],dh
  43904a:	rex.XB add BYTE PTR [r8],al
  43904d:	add    BYTE PTR [rax],al
  43904f:	add    BYTE PTR [rsi+0x76],bh
  439052:	rex.XB add BYTE PTR [r8],al
  439055:	add    BYTE PTR [rax],al
  439057:	add    BYTE PTR [rcx],ah
  439059:	and    BYTE PTR [rax],cl
  43905b:	add    BYTE PTR [rax],al
  43905d:	add    BYTE PTR [rax],al
  43905f:	add    BYTE PTR [rax],dh
  439061:	add    BYTE PTR [rax+0x0],0x0
  439065:	add    BYTE PTR [rax],al
  439067:	add    BYTE PTR [rcx+0x4376],al
  43906d:	add    BYTE PTR [rax],al
  43906f:	add    BYTE PTR [rbx],dl
  439071:	ins    BYTE PTR es:[rdi],dx
  439072:	rex.XB add BYTE PTR [r8],al
  439075:	add    BYTE PTR [rax],al
  439077:	add    BYTE PTR [rbx+0x4376],dl
  43907d:	add    BYTE PTR [rax],al
  43907f:	add    BYTE PTR [rbp+0x480],ah
  439085:	add    BYTE PTR [rax],al
  439087:	add    BYTE PTR [rax],al
  439089:	add    eax,DWORD PTR [rax]
  43908b:	add    BYTE PTR [rax],al
  43908d:	add    BYTE PTR [rax],al
  43908f:	add    BYTE PTR [rax+0x4376],ch
	...
  43909d:	add    BYTE PTR [rax],al
  43909f:	add    dh,ch
  4390a1:	jbe    0x4390e6
  4390a3:	add    BYTE PTR [rax],al
  4390a5:	add    BYTE PTR [rax],al
  4390a7:	add    BYTE PTR [rdx],al
  4390a9:	rex.X or al,0x0
  4390ac:	add    BYTE PTR [rax],al
  4390ae:	add    BYTE PTR [rax],al
  4390b0:	push   rsp
  4390b1:	add    DWORD PTR [rax],eax
  4390b3:	add    BYTE PTR [rax],al
  4390b5:	add    BYTE PTR [rax],al
  4390b7:	add    cl,dh
  4390b9:	jbe    0x4390fe
	...
  4390c7:	add    BYTE PTR [rbp+0x49],dl
  4390ca:	rex.XB add BYTE PTR [r8],al
  4390cd:	add    BYTE PTR [rax],al
  4390cf:	add    BYTE PTR [rcx],al
  4390d1:	and    cl,BYTE PTR [rax+rax*1]
  4390d4:	add    BYTE PTR [rax],al
  4390d6:	add    BYTE PTR [rax],al
  4390d8:	adc    BYTE PTR [rax+0x40],al
  4390de:	add    BYTE PTR [rax],al
  4390e0:	or     BYTE PTR [rdi+0x43],dh
  4390e3:	add    BYTE PTR [rax],al
  4390e5:	add    BYTE PTR [rax],al
  4390e7:	add    BYTE PTR [rax+0x63],bl
  4390ea:	rex.XB add BYTE PTR [r8],al
  4390ed:	add    BYTE PTR [rax],al
  4390ef:	add    BYTE PTR [rip+0x4377],dh        # 0x43d46c
  4390f5:	add    BYTE PTR [rax],al
  4390f7:	add    BYTE PTR [rip+0x822],al        # 0x43991f
  4390fd:	add    BYTE PTR [rax],al
  4390ff:	add    BYTE PTR [rax+0x4096],al
  439105:	add    BYTE PTR [rax],al
  439107:	add    BYTE PTR [rdx],bh
  439109:	ja     0x43914e
  43910b:	add    BYTE PTR [rax],al
  43910d:	add    BYTE PTR [rax],al
  43910f:	add    BYTE PTR [rsi+0x436b],bh
  439115:	add    BYTE PTR [rax],al
  439117:	add    BYTE PTR [rdi+rsi*2+0x43],dl
  43911b:	add    BYTE PTR [rax],al
  43911d:	add    BYTE PTR [rax],al
  43911f:	add    BYTE PTR [rsi],al
  439121:	(bad)  
  439122:	add    al,0x0
  439124:	add    BYTE PTR [rax],al
  439126:	add    BYTE PTR [rax],al
  439128:	rol    BYTE PTR [rdx],0x0
  43912b:	add    BYTE PTR [rax],al
  43912d:	add    BYTE PTR [rax],al
  43912f:	add    BYTE PTR [rbp+0x77],ah
  439132:	rex.XB add BYTE PTR [r8],al
	...
  43913d:	add    BYTE PTR [rax],al
  43913f:	add    BYTE PTR [rdi+rsi*2+0x43],bh
  439143:	add    BYTE PTR [rax],al
  439145:	add    BYTE PTR [rax],al
  439147:	add    BYTE PTR [rcx],cl
  439149:	(bad)  
  43914a:	add    al,0x0
  43914c:	add    BYTE PTR [rax],al
  43914e:	add    BYTE PTR [rax],al
  439150:	rol    BYTE PTR [rdx],1
  439152:	add    BYTE PTR [rax],al
  439154:	add    BYTE PTR [rax],al
  439156:	add    BYTE PTR [rax],al
  439158:	mov    BYTE PTR [rdi+0x43],dh
  43915b:	add    BYTE PTR [rax],al
  43915d:	add    BYTE PTR [rax],al
  43915f:	add    BYTE PTR [rbp+0x436f],al
  439165:	add    BYTE PTR [rax],al
  439167:	add    BYTE PTR [rsi+0x4377],ch
  43916d:	add    BYTE PTR [rax],al
  43916f:	add    BYTE PTR [rip+0x0],dl        # 0x439175
  439175:	add    BYTE PTR [rax],al
  439177:	add    al,dh
  439179:	mov    DWORD PTR [rax+0x0],eax
  43917c:	add    BYTE PTR [rax],al
  43917e:	add    BYTE PTR [rax],al
  439180:	mov    cl,0x77
  439182:	rex.XB add BYTE PTR [r8],al
  439185:	add    BYTE PTR [rax],al
  439187:	add    BYTE PTR [rdx],dl
  439189:	rex.X
  43918a:	rex.XB add BYTE PTR [r8],al
  43918d:	add    BYTE PTR [rax],al
  43918f:	add    dl,cl
  439191:	ja     0x4391d6
  439193:	add    BYTE PTR [rax],al
  439195:	add    BYTE PTR [rax],al
  439197:	add    BYTE PTR [rip+0x0],dl        # 0x43919d
  43919d:	add    BYTE PTR [rax],al
  43919f:	add    BYTE PTR [rax+0x4089],dh
  4391a5:	add    BYTE PTR [rax],al
  4391a7:	add    al,dl
  4391a9:	ja     0x4391ee
  4391ab:	add    BYTE PTR [rax],al
  4391ad:	add    BYTE PTR [rax],al
  4391af:	add    bl,bl
  4391b1:	rex.B
  4391b2:	rex.XB add BYTE PTR [r8],al
  4391b5:	add    BYTE PTR [rax],al
  4391b7:	add    dl,ch
  4391b9:	ja     0x4391fe
  4391bb:	add    BYTE PTR [rax],al
  4391bd:	add    BYTE PTR [rax],al
  4391bf:	add    BYTE PTR [rsi],al
  4391c1:	add    BYTE PTR [rax],al
  4391c3:	add    BYTE PTR [rax],al
  4391c5:	add    BYTE PTR [rax],al
  4391c7:	add    BYTE PTR [rax+riz*1+0x44],ah
  4391ce:	add    BYTE PTR [rax],al
  4391d0:	lock ja 0x439216
  4391d3:	add    BYTE PTR [rax],al
  4391d5:	add    BYTE PTR [rax],al
  4391d7:	add    dh,bl
  4391d9:	(bad)  
  4391da:	rex.XB add BYTE PTR [r8],al
  4391dd:	add    BYTE PTR [rax],al
  4391df:	add    BYTE PTR [rbx],bl
  4391e1:	js     0x439226
  4391e3:	add    BYTE PTR [rax],al
  4391e5:	add    BYTE PTR [rax],al
  4391e7:	add    BYTE PTR [rip+0x841],al        # 0x439a2e
  4391ed:	add    BYTE PTR [rax],al
  4391ef:	add    BYTE PTR [rcx+rax*1+0x0],al
  4391f3:	add    BYTE PTR [rax],al
  4391f5:	add    BYTE PTR [rax],al
  4391f7:	add    BYTE PTR [rax],ch
  4391f9:	js     0x43923e
  4391fb:	add    BYTE PTR [rax],al
  4391fd:	add    BYTE PTR [rax],al
  4391ff:	add    BYTE PTR [rbx+0x78],cl
  439202:	rex.XB add BYTE PTR [r8],al
  439205:	add    BYTE PTR [rax],al
  439207:	add    BYTE PTR [rbx+0x78],dl
  43920a:	rex.XB add BYTE PTR [r8],al
  43920d:	add    BYTE PTR [rax],al
  43920f:	add    BYTE PTR [rip+0x841],al        # 0x439a56
  439215:	add    BYTE PTR [rax],al
  439217:	add    BYTE PTR [rax+0x1],al
  43921a:	add    BYTE PTR [rax],al
  43921c:	add    BYTE PTR [rax],al
  43921e:	add    BYTE PTR [rax],al
  439220:	(bad)  
  439221:	js     0x439266
  439223:	add    BYTE PTR [rax],al
  439225:	add    BYTE PTR [rax],al
  439227:	add    BYTE PTR [rbx+0x78],cl
  43922a:	rex.XB add BYTE PTR [r8],al
  43922d:	add    BYTE PTR [rax],al
  43922f:	add    BYTE PTR [rbx+0x4378],al
  439235:	add    BYTE PTR [rax],al
  439237:	add    BYTE PTR [rsi],al
  439239:	add    BYTE PTR [rax],cl
  43923b:	add    BYTE PTR [rax],al
  43923d:	add    BYTE PTR [rax],al
  43923f:	add    BYTE PTR [rax+0x4420],ah
  439245:	add    BYTE PTR [rax],al
  439247:	add    BYTE PTR [rax+0x4378],bl
  43924d:	add    BYTE PTR [rax],al
  43924f:	add    dh,bl
  439251:	(bad)  
  439252:	rex.XB add BYTE PTR [r8],al
  439255:	add    BYTE PTR [rax],al
  439257:	add    BYTE PTR [rbx+0x4378],bh
  43925d:	add    BYTE PTR [rax],al
  43925f:	add    BYTE PTR [rip+0x800],al        # 0x439a65
  439265:	add    BYTE PTR [rax],al
  439267:	add    BYTE PTR [rax-0x7e],dl
  43926a:	add    BYTE PTR [rax],al
  43926d:	add    BYTE PTR [rax],al
  43926f:	add    al,cl
  439271:	js     0x4392b6
  439273:	add    BYTE PTR [rax],al
  439275:	add    BYTE PTR [rax],al
  439277:	add    BYTE PTR [rdx],dh
  439279:	rex.W
  43927a:	rex.XB add BYTE PTR [r8],al
  43927d:	add    BYTE PTR [rax],al
  43927f:	add    cl,bh
  439281:	js     0x4392c6
  439283:	add    BYTE PTR [rax],al
  439285:	add    BYTE PTR [rax],al
  439287:	add    BYTE PTR [rip+0x880],cl        # 0x439b0d
  43928d:	add    BYTE PTR [rax],al
  43928f:	add    BYTE PTR [rax+0x1],dl
  439295:	add    BYTE PTR [rax],al
  439297:	add    BYTE PTR [rax],al
  439299:	jns    0x4392de
  43929b:	add    BYTE PTR [rax],al
  43929d:	add    BYTE PTR [rax],al
  43929f:	add    BYTE PTR [rcx+rdi*2],ch
  4392a2:	rex.XB add BYTE PTR [r8],al
  4392a5:	add    BYTE PTR [rax],al
  4392a7:	add    BYTE PTR [rsi],bh
  4392a9:	jns    0x4392ee
  4392ab:	add    BYTE PTR [rax],al
  4392ad:	add    BYTE PTR [rax],al
  4392af:	add    BYTE PTR [rip+0x820],ah        # 0x439ad5
  4392b5:	add    BYTE PTR [rax],al
  4392b7:	add    BYTE PTR [rax+0x4096],al
  4392bd:	add    BYTE PTR [rax],al
  4392bf:	add    BYTE PTR [rbx+0x79],al
  4392c2:	rex.XB add BYTE PTR [r8],al
  4392c5:	add    BYTE PTR [rax],al
  4392c7:	add    BYTE PTR [rsi+0x79],cl
  4392ca:	rex.XB add BYTE PTR [r8],al
  4392cd:	add    BYTE PTR [rax],al
  4392cf:	add    BYTE PTR [rsi+0x79],ah
  4392d2:	rex.XB add BYTE PTR [r8],al
  4392d5:	add    BYTE PTR [rax],al
  4392d7:	add    BYTE PTR [rip+0x820],dl        # 0x439afd
  4392dd:	add    BYTE PTR [rax],al
  4392df:	add    BYTE PTR [rax+0x4096],al
  4392e5:	add    BYTE PTR [rax],al
  4392e7:	add    BYTE PTR [rbx+0x79],al
  4392ea:	rex.XB add BYTE PTR [r8],al
  4392ed:	add    BYTE PTR [rax],al
  4392ef:	add    BYTE PTR [rbx+0x79],ch
  4392f2:	rex.XB add BYTE PTR [r8],al
  4392f5:	add    BYTE PTR [rax],al
  4392f7:	add    BYTE PTR [rbx+0x4379],al
  4392fd:	add    BYTE PTR [rax],al
  4392ff:	add    BYTE PTR [rip+0x820],ah        # 0x439b25
  439305:	add    BYTE PTR [rax],al
  439307:	add    BYTE PTR [rax],dl
  439309:	movabs al,ds:0x7988000000000040
  439312:	rex.XB add BYTE PTR [r8],al
  439315:	add    BYTE PTR [rax],al
  439317:	add    BYTE PTR [rsi+0x63],ch
  43931a:	rex.XB add BYTE PTR [r8],al
  43931d:	add    BYTE PTR [rax],al
  43931f:	add    BYTE PTR [rsi+0x4379],dh
  439325:	add    BYTE PTR [rax],al
  439327:	add    BYTE PTR [rip+0x820],dl        # 0x439b4d
  43932d:	add    BYTE PTR [rax],al
  43932f:	add    BYTE PTR [rax],dl
  439331:	movabs al,ds:0x79c0000000000040
  43933a:	rex.XB add BYTE PTR [r8],al
  43933d:	add    BYTE PTR [rax],al
  43933f:	add    BYTE PTR [rsi+0x63],ch
  439342:	rex.XB add BYTE PTR [r8],al
  439345:	add    BYTE PTR [rax],al
  439347:	add    dh,ch
  439349:	jns    0x43938e
  43934b:	add    BYTE PTR [rax],al
  43934d:	add    BYTE PTR [rax],al
  43934f:	add    BYTE PTR [rip+0x822],al        # 0x439b77
  439355:	add    BYTE PTR [rax],al
  439357:	add    BYTE PTR [rax],dl
  439359:	movabs al,ds:0x79f8000000000040
  439362:	rex.XB add BYTE PTR [r8],al
  439365:	add    BYTE PTR [rax],al
  439367:	add    BYTE PTR [rsi+0x63],ch
  43936a:	rex.XB add BYTE PTR [r8],al
  43936d:	add    BYTE PTR [rax],al
  43936f:	add    BYTE PTR [rcx],ch
  439371:	jp     0x4393b6
  439373:	add    BYTE PTR [rax],al
  439375:	add    BYTE PTR [rax],al
  439377:	add    BYTE PTR [rip+0x820],al        # 0x439b9d
  43937d:	add    BYTE PTR [rax],al
  43937f:	add    BYTE PTR [rax],dl
  439381:	movabs al,ds:0x7a30000000000040
  43938a:	rex.XB add BYTE PTR [r8],al
  43938d:	add    BYTE PTR [rax],al
  43938f:	add    BYTE PTR [rax],ch
  439391:	push   rax
  439392:	rex.XB add BYTE PTR [r8],al
  439395:	add    BYTE PTR [rax],al
  439397:	add    BYTE PTR [rcx+rcx*2+0x43],bl
  43939b:	add    BYTE PTR [rax],al
  43939d:	add    BYTE PTR [rax],al
  43939f:	add    BYTE PTR [rip+0xc30],al        # 0x439fd5
  4393a5:	add    BYTE PTR [rax],al
  4393a7:	add    al,dh
  4393a9:	jg     0x4393eb
  4393ab:	add    BYTE PTR [rax],al
  4393ad:	add    BYTE PTR [rax],al
  4393af:	add    BYTE PTR [rax+0x7a],bl
  4393b2:	rex.XB add BYTE PTR [r8],al
  4393b5:	add    BYTE PTR [rax],al
  4393b7:	add    BYTE PTR [rax+0x63],bl
  4393ba:	rex.XB add BYTE PTR [r8],al
  4393bd:	add    BYTE PTR [rax],al
  4393bf:	add    BYTE PTR [rcx+0x437a],al
  4393c5:	add    BYTE PTR [rax],al
  4393c7:	add    BYTE PTR [rdx],dl
  4393c9:	or     al,0x0
  4393cc:	add    BYTE PTR [rax],al
  4393ce:	add    BYTE PTR [rax],al
  4393d0:	pop    rax
  4393d1:	add    DWORD PTR [rax],eax
  4393d3:	add    BYTE PTR [rax],al
  4393d5:	add    BYTE PTR [rax],al
  4393d7:	add    BYTE PTR [rdx+rdi*2+0x43],al
	...
  43940e:	add    BYTE PTR [rax],al
  439410:	outs   dx,DWORD PTR ds:[rsi]
  439411:	jne    0x439487
  439413:	jo     0x43948a
  439415:	je     0x439437
  439417:	jne    0x43948b
  439419:	ins    BYTE PTR es:[rdi],dx
  43941a:	add    BYTE PTR [rcx+0x6e],ch
  43941d:	jo     0x439494
  43941f:	je     0x439441
  439421:	jne    0x439495
  439423:	ins    BYTE PTR es:[rdi],dx
  439424:	add    BYTE PTR [rcx+0x0],ch
	...
  43943f:	add    BYTE PTR [rax],dl
  439441:	xchg   esp,eax
  439442:	rex.XB add BYTE PTR [r8],al
	...
  439451:	add    BYTE PTR [rax],cl
  439453:	add    BYTE PTR [rax],al
  439455:	add    BYTE PTR [rax],al
  439457:	add    BYTE PTR [rbx],bl
  439459:	xchg   esp,eax
  43945a:	rex.XB add BYTE PTR [r8],al
  43945d:	add    BYTE PTR [rax],al
  43945f:	add    BYTE PTR [rip+0x4394],ah        # 0x43d7f9
  439465:	add    BYTE PTR [rax],al
  439467:	add    BYTE PTR [rax],al
  439469:	add    BYTE PTR [rax+rax*1],al
	...
  439480:	push   rax
  439481:	(bad)  
  439482:	rex.XB add BYTE PTR [r8],al
  439485:	add    BYTE PTR [rax],al
  439487:	add    BYTE PTR [rax+0x1b],ah
  43948a:	rex.X add BYTE PTR [rax],al
  43948d:	add    BYTE PTR [rax],al
  43948f:	add    BYTE PTR [rbx],al
  439491:	add    BYTE PTR [rax],al
  439493:	add    BYTE PTR [rip+0x0],bh        # 0x439499
	...
  4394b5:	clc    
  4394b6:	pop    QWORD PTR [rax+0x0]
	...
  4394c1:	add    al,al
  4394c3:	(bad)  
  4394c4:	(bad)  
  4394c5:	(bad)  
  4394c6:	fild   WORD PTR [rcx+0x0]
  4394c9:	add    BYTE PTR [rax],al
  4394cb:	add    BYTE PTR [rax+0x412e84],al
  4394d1:	add    BYTE PTR [rax],al
  4394d3:	add    BYTE PTR [rax],al
  4394d5:	add    BYTE PTR [rax],al
  4394d7:	add    BYTE PTR [rax],al
  4394da:	add    BYTE PTR [rax],al
  4394dc:	add    BYTE PTR [rax],al
  4394de:	lock mov edi,0x0
  4394e4:	add    BYTE PTR [rax+0x405d],al
  4394ea:	add    BYTE PTR [rax],al
  4394ec:	add    BYTE PTR [rax],al
  4394ee:	lock (bad) 
  4394f0:	add    BYTE PTR [rax],al
  4394f2:	add    BYTE PTR [rax],al
  4394f4:	add    BYTE PTR [rax],al
  4394f6:	pop    rcx
  4394f7:	add    BYTE PTR [rax],al
  4394fa:	add    BYTE PTR [rax],al
  4394fc:	add    BYTE PTR [rsp+rsi*2],ah
  4394ff:	rex.WB je 0x439574
  439502:	imul   ebp,DWORD PTR [rbp+0x0],0x69727461
  439509:	ins    DWORD PTR es:[rdi],dx
  43950a:	add    BYTE PTR [rax],al
  43950c:	add    BYTE PTR [rax],al
  43950e:	add    BYTE PTR [rax],al
  439510:	and    eax,0x69662073
  439515:	ins    BYTE PTR es:[rdi],dx
  439516:	je     0x43957d
  439518:	jb     0x43953a
  43951a:	outs   dx,BYTE PTR ds:[rsi]
  43951b:	outs   dx,DWORD PTR ds:[rsi]
  43951c:	je     0x43953e
  43951e:	jo     0x439592
  439520:	gs jae 0x439588
  439523:	outs   dx,BYTE PTR ds:[rsi]
  439524:	je     0x439552
  439526:	and    BYTE PTR [rbx+0x61],ah
  439529:	outs   dx,BYTE PTR ds:[rsi]
  43952a:	outs   dx,BYTE PTR ds:[rsi]
  43952b:	outs   dx,DWORD PTR ds:[rsi]
  43952c:	je     0x43954e
  43952e:	ins    BYTE PTR es:[rdi],dx
  43952f:	imul   ebp,DWORD PTR [rbp+0x69],0x65722074
  439536:	movsxd ebp,DWORD PTR [rdi+0x72]
  439539:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6d697420
  439541:	gs or  al,BYTE PTR cs:[rax]
  439545:	fs jne 0x4395ba
  439548:	(bad)  
  439549:	je     0x4395b4
  43954b:	outs   dx,DWORD PTR ds:[rsi]
  43954c:	outs   dx,BYTE PTR ds:[rsi]
  43954d:	imul   eax,DWORD PTR [rax],0x72617473
  439553:	je     0x4395be
  439555:	add    BYTE PTR [rax],al
  439557:	add    BYTE PTR [rbp+0x72],al
  43955a:	jb     0x4395cb
  43955c:	jb     0x43957e
  43955e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439561:	imul   sp,WORD PTR [rdi+0x75],0x6972
  439567:	outs   dx,BYTE PTR ds:[rsi]
  439568:	and    BYTE PTR [eax+ebp*2+0x65],dh
  43956d:	and    BYTE PTR [rip+0x69662073],ah        # 0x69a9b5e6
  439573:	ins    BYTE PTR es:[rdi],dx
  439574:	je     0x4395db
  439576:	jb     0x439578
  439578:	outs   dx,DWORD PTR ds:[rsi]
  439579:	jne    0x4395ef
  43957b:	jo     0x4395f2
  43957d:	je     0x43959f
  43957f:	jae    0x4395f5
  439581:	jb     0x4395e8
  439583:	(bad)  
  439584:	ins    DWORD PTR es:[rdi],dx
  439585:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468cfef
  43958b:	add    BYTE PTR [rcx+0x62],ah
  43958e:	jne    0x4395f6
  439590:	data16 gs jb 0x439607
  439594:	imul   ebp,DWORD PTR [rsi+0x6b],0x6c6c6100
  43959b:	pop    rdi
  43959c:	movsxd ebp,DWORD PTR [rax+0x61]
  43959f:	outs   dx,BYTE PTR ds:[rsi]
  4395a0:	outs   dx,BYTE PTR ds:[rsi]
  4395a1:	gs ins BYTE PTR es:[rdi],dx
  4395a3:	pop    rdi
  4395a4:	movsxd ebp,DWORD PTR [rdi+0x75]
  4395a7:	outs   dx,BYTE PTR ds:[rsi]
  4395a8:	je     0x43961d
  4395aa:	add    BYTE PTR [rax],dh
  4395ac:	js     0x4395d3
  4395ae:	ins    BYTE PTR es:[rdi],dx
  4395af:	ins    BYTE PTR es:[rdi],dx
  4395b0:	js     0x4395b2
  4395b2:	add    BYTE PTR [rax],al
  4395b4:	add    BYTE PTR [rax],al
  4395b6:	add    BYTE PTR [rax],al
  4395b8:	sub    eax,0x5f70616d
  4395bd:	movsxd ebp,DWORD PTR [rax+0x61]
  4395c0:	outs   dx,BYTE PTR ds:[rsi]
  4395c1:	outs   dx,BYTE PTR ds:[rsi]
  4395c2:	gs ins BYTE PTR es:[rdi],dx
  4395c4:	and    BYTE PTR [rcx+0x73],ch
  4395c7:	and    BYTE PTR [rsi+0x6f],ah
  4395ca:	jb     0x439643
  4395cc:	(bad)  
  4395cd:	jb     0x439633
  4395cf:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4395d5:	ins    BYTE PTR es:[rdi],dx
  4395d6:	(bad)  
  4395d7:	jbe    0x43963f
  4395d9:	imul   esp,DWORD PTR [rax],0x696d6973
  4395df:	ins    BYTE PTR es:[rdi],dx
  4395e0:	(bad)  
  4395e1:	jb     0x43964f
  4395e3:	jns    0x439605
  4395e5:	je     0x439656
  4395e7:	and    BYTE PTR [rip+0x70206661],ch        # 0x7063fc4e
  4395ed:	(bad)  
  4395ee:	outs   dx,BYTE PTR ds:[rsi]
  4395ef:	cmp    eax,0xa2e7325
  4395f4:	add    BYTE PTR [rax+0x61],dh
  4395f7:	outs   dx,BYTE PTR ds:[rsi]
  4395f8:	add    BYTE PTR [rbx+riz*2+0x25],bh
  4395fc:	fs cmp eax,0x642563
  439602:	and    eax,0x25007c73
  439607:	add    BYTE PTR fs:[rbx+0x61],dh
  43960b:	ins    DWORD PTR es:[rdi],dx
  43960c:	jo     0x43967a
  43960e:	gs pop rdi
  439610:	ins    WORD PTR es:[rdi],dx
  439612:	je     0x439687
  439614:	cmp    eax,0x3a7325
  439619:	jae    0x43967c
  43961b:	ins    DWORD PTR es:[rdi],dx
  43961c:	jo     0x43968a
  43961e:	gs pop rdi
  439620:	jb     0x439683
  439622:	je     0x439689
  439624:	jae    0x439663
  439626:	and    eax,0x63003a73
  43962b:	push   0x656e6e61
  439630:	ins    BYTE PTR es:[rdi],dx
  439631:	pop    rdi
  439632:	ins    BYTE PTR es:[rdi],dx
  439633:	(bad)  
  439634:	jns    0x4396a5
  439636:	jne    0x4396ac
  439638:	jae    0x439677
  43963a:	and    eax,0x3a73
  43963f:	add    BYTE PTR [rcx+0x75],ah
  439642:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6d726f66
  43964a:	(bad)  
  43964b:	je     0x43966d
  43964d:	outs   dx,WORD PTR ds:[rsi]
  43964f:	jb     0x439671
  439651:	outs   dx,DWORD PTR ds:[rsi]
  439652:	jne    0x4396c8
  439654:	jo     0x4396cb
  439656:	je     0x439678
  439658:	jae    0x4396ce
  43965a:	jb     0x4396c1
  43965c:	(bad)  
  43965d:	ins    DWORD PTR es:[rdi],dx
  43965e:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d0c8
  439664:	add    BYTE PTR [rcx+0x66],ah
  439667:	outs   dx,DWORD PTR ds:[rsi]
  439668:	jb     0x4396d7
  43966a:	(bad)  
  43966b:	je     0x43966d
  43966d:	and    eax,0x612d0073
  439672:	jo     0x4396d5
  439674:	and    BYTE PTR fs:[rcx+0x73],ch
  439678:	and    BYTE PTR [rsi+0x6f],ah
  43967b:	jb     0x4396f4
  43967d:	(bad)  
  43967e:	jb     0x4396e4
  439680:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  439686:	ins    BYTE PTR es:[rdi],dx
  439687:	(bad)  
  439688:	jbe    0x4396f0
  43968a:	imul   esp,DWORD PTR [rax],0x696d6973
  439690:	ins    BYTE PTR es:[rdi],dx
  439691:	(bad)  
  439692:	jb     0x439700
  439694:	jns    0x4396b6
  439696:	je     0x439707
  439698:	and    BYTE PTR [rip+0x61206661],ch        # 0x6163fcff
  43969e:	jo     0x439701
  4396a0:	fs cmp eax,0xa2e7325
  4396a6:	add    BYTE PTR [rcx+0x70],ah
  4396a9:	(bad)  
  4396aa:	add    BYTE PTR fs:[rdx+rsi*2+0x69],dh
  4396af:	ins    DWORD PTR es:[rdi],dx
  4396b0:	and    BYTE PTR [rsi+0x6f],ah
  4396b3:	jb     0x4396d5
  4396b5:	outs   dx,DWORD PTR ds:[rsi]
  4396b6:	jne    0x43972c
  4396b8:	jo     0x43972f
  4396ba:	je     0x4396dc
  4396bc:	jae    0x439732
  4396be:	jb     0x439725
  4396c0:	(bad)  
  4396c1:	ins    DWORD PTR es:[rdi],dx
  4396c2:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d12c
	...
  4396d0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4396d2:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4396d5:	jo     0x439738
  4396d7:	je     0x439742
  4396d9:	(bad)  
  4396da:	ins    BYTE PTR es:[rdi],dx
  4396db:	and    BYTE PTR gs:[rax+0x69],dh
  4396df:	js     0x439746
  4396e1:	ins    BYTE PTR es:[rdi],dx
  4396e2:	and    BYTE PTR [rsi+0x6f],ah
  4396e5:	jb     0x439754
  4396e7:	(bad)  
  4396e8:	je     0x43970a
  4396ea:	(bad)  
  4396eb:	and    eax,0x66202773
  4396f0:	outs   dx,DWORD PTR ds:[rsi]
  4396f1:	jb     0x439713
  4396f3:	movsxd ebp,DWORD PTR [rdi+0x64]
  4396f6:	movsxd esp,DWORD PTR gs:[rax]
  4396f9:	(bad)  
  4396fa:	and    eax,0x202c2773
  4396ff:	(bad)  
  439700:	jne    0x439776
  439702:	outs   dx,DWORD PTR ds:[rsi]
  439703:	sub    eax,0x656c6573
  439708:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  43970c:	and    BYTE PTR [esi+0x6f],ah
  439710:	jb     0x43977f
  439712:	(bad)  
  439713:	je     0x439735
  439715:	(bad)  
  439716:	and    eax,0xa2773
  43971b:	(bad)  
  43971c:	jne    0x439784
  43971e:	data16 gs jb 0x439795
  439722:	imul   ebp,DWORD PTR [rsi+0x6b],0x3a642500
  439729:	and    eax,0x253a0064
  43972e:	jae    0x43976d
  439730:	and    eax,0x73
  439735:	add    BYTE PTR [rax],al
  439737:	add    BYTE PTR [rbx+0x63],dh
  43973a:	(bad)  
  43973b:	ins    BYTE PTR es:[rdi],dx
  43973c:	gs jb  0x43975f
  43973f:	outs   dx,WORD PTR ds:[rsi]
  439741:	jb     0x439763
  439743:	outs   dx,DWORD PTR ds:[rsi]
  439744:	jne    0x4397ba
  439746:	jo     0x4397bd
  439748:	je     0x43976a
  43974a:	jae    0x4397c0
  43974c:	jb     0x4397b3
  43974e:	(bad)  
  43974f:	ins    DWORD PTR es:[rdi],dx
  439750:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d1ba
  439756:	add    BYTE PTR [rbx+0x63],dh
  439759:	(bad)  
  43975a:	ins    BYTE PTR es:[rdi],dx
  43975b:	add    BYTE PTR gs:[rbx+0x74],dh
  43975f:	jb     0x4397ca
  439761:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  439765:	add    BYTE PTR [rax],al
  439767:	add    BYTE PTR [rax+0x69],dh
  43976a:	js     0x4397d1
  43976c:	ins    BYTE PTR es:[rdi],dx
  43976d:	and    BYTE PTR [rsi+0x6f],ah
  439770:	jb     0x4397df
  439772:	(bad)  
  439773:	je     0x439795
  439775:	outs   dx,WORD PTR ds:[rsi]
  439777:	jb     0x439799
  439779:	outs   dx,DWORD PTR ds:[rsi]
  43977a:	jne    0x4397f0
  43977c:	jo     0x4397f3
  43977e:	je     0x4397a0
  439780:	jae    0x4397f6
  439782:	jb     0x4397e9
  439784:	(bad)  
  439785:	ins    DWORD PTR es:[rdi],dx
  439786:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d1f0
  43978c:	add    BYTE PTR [rsi+0x6f],ah
  43978f:	jb     0x4397fe
  439791:	(bad)  
  439792:	je     0x439794
  439794:	add    BYTE PTR [rax],al
  439796:	add    BYTE PTR [rax],al
  439798:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43979a:	outs   dx,BYTE PTR ds:[rsi]
  43979b:	jbe    0x439802
  43979d:	jb     0x439812
  43979f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697720
  4397a6:	ins    BYTE PTR es:[rdi],dx
  4397a7:	and    BYTE PTR [rsi+0x6f],ch
  4397aa:	je     0x4397cc
  4397ac:	(bad)  
  4397ad:	and    BYTE PTR gs:[rdi+rbp*2+0x73],ch
  4397b2:	jae    0x439820
  4397b4:	gs jae 0x43982a
  4397b7:	or     al,BYTE PTR cs:[rax]
  4397ba:	add    BYTE PTR [rax],al
  4397bc:	add    BYTE PTR [rax],al
  4397be:	add    BYTE PTR [rax],al
  4397c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4397c2:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4397c5:	jo     0x439828
  4397c7:	je     0x439832
  4397c9:	(bad)  
  4397ca:	ins    BYTE PTR es:[rdi],dx
  4397cb:	and    BYTE PTR gs:[rbx+0x61],dh
  4397cf:	ins    DWORD PTR es:[rdi],dx
  4397d0:	jo     0x43983e
  4397d2:	and    BYTE PTR gs:[rsi+0x6f],ah
  4397d6:	jb     0x439845
  4397d8:	(bad)  
  4397d9:	je     0x4397fb
  4397db:	(bad)  
  4397dc:	and    eax,0x66202773
  4397e1:	outs   dx,DWORD PTR ds:[rsi]
  4397e2:	jb     0x439804
  4397e4:	movsxd ebp,DWORD PTR [rdi+0x64]
  4397e7:	movsxd esp,DWORD PTR gs:[rax]
  4397ea:	(bad)  
  4397eb:	and    eax,0x202c2773
  4397f0:	(bad)  
  4397f1:	jne    0x439867
  4397f3:	outs   dx,DWORD PTR ds:[rsi]
  4397f4:	sub    eax,0x656c6573
  4397f9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  4397fd:	and    BYTE PTR [esi+0x6f],ah
  439801:	jb     0x439870
  439803:	(bad)  
  439804:	je     0x439826
  439806:	(bad)  
  439807:	and    eax,0xa2773
  43980c:	add    BYTE PTR [rax],al
  43980e:	add    BYTE PTR [rax],al
  439810:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  439812:	ins    BYTE PTR es:[rdi],dx
  439813:	jns    0x439835
  439815:	jbe    0x439880
  439817:	fs outs dx,DWORD PTR gs:[rsi]
  43981a:	and    BYTE PTR [rcx+0x6e],ah
  43981d:	and    BYTE PTR fs:[rcx+0x75],ah
  439821:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x746c6966
  439829:	gs jb  0x43989f
  43982c:	and    BYTE PTR [rbx+0x75],dh
  43982f:	jo     0x4398a1
  439831:	outs   dx,DWORD PTR ds:[rsi]
  439832:	jb     0x4398a8
  439834:	gs and BYTE PTR fs:[rbx+0x75],ah
  439839:	jb     0x4398ad
  43983b:	outs   dx,BYTE PTR gs:[rsi]
  43983d:	je     0x4398ab
  43983f:	jns    0x43986f
  439841:	or     al,BYTE PTR [rax]
  439843:	add    BYTE PTR [rax],al
  439845:	add    BYTE PTR [rax],al
  439847:	add    BYTE PTR [rcx+0x6e],cl
  43984a:	jbe    0x4398ad
  43984c:	ins    BYTE PTR es:[rdi],dx
  43984d:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x20656c69
  439855:	imul   ebp,DWORD PTR [rsi+0x64],0x25207865
  43985c:	and    BYTE PTR fs:[rcx+0x6e],ch
  439860:	and    BYTE PTR [rsi+0x69],ah
  439863:	ins    BYTE PTR es:[rdi],dx
  439864:	je     0x4398cb
  439866:	jb     0x4398cf
  439868:	jb     0x4398cb
  43986a:	jo     0x4398d4
  43986c:	and    BYTE PTR [rbp+riz*2+0x73],ah
  439870:	movsxd esi,DWORD PTR [rdx+0x69]
  439873:	jo     0x4398e9
  439875:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e732520
  43987c:	or     al,BYTE PTR [rax]
  43987e:	add    BYTE PTR [rax],al
  439880:	push   rbx
  439881:	je     0x4398f5
  439883:	gs (bad) 
  439885:	ins    DWORD PTR es:[rdi],dx
  439886:	and    BYTE PTR [rbx+0x70],dh
  439889:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43988d:	imul   esp,DWORD PTR [rbp+0x72],0x73252720
  439894:	(bad)  
  439895:	and    BYTE PTR [rcx+0x6e],ch
  439898:	and    BYTE PTR [rsi+0x69],ah
  43989b:	ins    BYTE PTR es:[rdi],dx
  43989c:	je     0x439903
  43989e:	jb     0x439907
  4398a0:	jb     0x439903
  4398a2:	jo     0x43990c
  4398a4:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4398a8:	movsxd esi,DWORD PTR [rdx+0x69]
  4398ab:	jo     0x439921
  4398ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  4398b4:	ins    DWORD PTR es:[rdi],dx
  4398b5:	(bad)  
  4398b6:	je     0x43991b
  4398b8:	push   0x6e207365
  4398bd:	outs   dx,DWORD PTR ds:[rsi]
  4398be:	and    BYTE PTR [rbx+0x74],dh
  4398c1:	jb     0x439928
  4398c3:	(bad)  
  4398c4:	ins    DWORD PTR es:[rdi],dx
  4398c5:	jae    0x4398f5
  4398c7:	or     al,BYTE PTR [rax]
  4398c9:	add    BYTE PTR [rax],al
  4398cb:	add    BYTE PTR [rax],al
  4398cd:	add    BYTE PTR [rax],al
  4398cf:	add    BYTE PTR [rbx+0x61],al
  4398d2:	outs   dx,BYTE PTR ds:[rsi]
  4398d3:	outs   dx,BYTE PTR ds:[rsi]
  4398d4:	outs   dx,DWORD PTR ds:[rsi]
  4398d5:	je     0x4398f7
  4398d7:	imul   bp,WORD PTR [rsi+0x64],0x6120
  4398dd:	and    BYTE PTR [rbp+0x61],ch
  4398e0:	je     0x439945
  4398e2:	push   0x20676e69
  4398e7:	jae    0x43995d
  4398e9:	jb     0x439950
  4398eb:	(bad)  
  4398ec:	ins    DWORD PTR es:[rdi],dx
  4398ed:	and    BYTE PTR [rsi+0x6f],ah
  4398f0:	jb     0x439912
  4398f2:	jne    0x439962
  4398f4:	ins    BYTE PTR es:[rdi],dx
  4398f5:	(bad)  
  4398f6:	(bad)  
  4398f7:	gs ins BYTE PTR es:[rdi],dx
  4398f9:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4398fe:	jo     0x439975
  439900:	je     0x439922
  439902:	jo     0x439965
  439904:	and    BYTE PTR fs:[rip+0x6e6f2064],ah        # 0x6eb2b96f
  43990b:	and    BYTE PTR [rsi+0x69],ah
  43990e:	ins    BYTE PTR es:[rdi],dx
  43990f:	je     0x439976
  439911:	jb     0x439933
  439913:	and    eax,0x69000a73
  439918:	jae    0x43998e
  43991a:	add    BYTE PTR [rcx+0x73],al
  43991d:	jae    0x439984
  43991f:	jb     0x439995
  439921:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  439928:	data16 (bad) 
  43992a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  439932:	and    eax,0x64253a73
  439937:	or     al,BYTE PTR [rax]
  439939:	data16 ins WORD PTR es:[rdi],dx
  43993c:	jo     0x4399a3
  43993e:	addr32 pop rdi
  439940:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2e72
  439947:	movsxd eax,DWORD PTR [rax]
  439949:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4399c2
  43994f:	add    BYTE PTR [rsi+0x69],al
  439952:	ins    BYTE PTR es:[rdi],dx
  439953:	je     0x4399ba
  439955:	jb     0x439977
  439957:	and    eax,0x61682073
  43995c:	jae    0x43997e
  43995e:	(bad)  
  43995f:	and    BYTE PTR [rbp+0x6e],dh
  439962:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439965:	outs   dx,BYTE PTR ds:[rsi]
  439966:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43996b:	and    BYTE PTR [rdi+0x75],ch
  43996e:	je     0x4399e0
  439970:	jne    0x4399e6
  439972:	or     al,BYTE PTR [rax]
  439974:	xor    BYTE PTR [rax],al
  439976:	xor    DWORD PTR ds:[rax],eax
  439979:	xor    DWORD PTR [rax],eax
  43997b:	and    eax,0x73253d73
  439980:	cmp    al,BYTE PTR [rax]
  439982:	(bad)  
  439983:	jb     0x4399ea
  439985:	jae    0x4399e8
  439987:	ins    DWORD PTR es:[rdi],dx
  439988:	jo     0x4399f6
  43998a:	gs pop rdi
  43998c:	jae    0x439a05
  43998e:	jb     0x4399ef
  439990:	outs   dx,DWORD PTR ds:[rsi]
  439991:	jo     0x439a07
  439993:	jae    0x439995
  439995:	je     0x4399ff
  439997:	jb     0x4399fe
  439999:	(bad)  
  43999a:	fs jae 0x43999d
  43999d:	add    BYTE PTR [rax],al
  43999f:	add    BYTE PTR [rbx+0x69],dl
  4399a2:	ins    DWORD PTR es:[rdi],dx
  4399a3:	jo     0x439a11
  4399a5:	and    BYTE PTR gs:[rsi+0x69],ah
  4399a9:	ins    BYTE PTR es:[rdi],dx
  4399aa:	je     0x439a11
  4399ac:	jb     0x439a15
  4399ae:	jb     0x439a11
  4399b0:	jo     0x439a1a
  4399b2:	and    BYTE PTR [rdi],ah
  4399b4:	and    eax,0x77202773
  4399b9:	(bad)  
  4399ba:	jae    0x4399dc
  4399bc:	gs js  0x439a2f
  4399bf:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4399c4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4399c8:	push   0x20657661
  4399cd:	gs js  0x439a31
  4399d0:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  4399d4:	and    BYTE PTR [rcx],dh
  4399d6:	and    BYTE PTR [rcx+0x6e],ch
  4399d9:	jo     0x439a50
  4399db:	je     0x4399fd
  4399dd:	(bad)  
  4399de:	outs   dx,BYTE PTR ds:[rsi]
  4399df:	and    BYTE PTR fs:[rcx],dh
  4399e2:	and    BYTE PTR [rdi+0x75],ch
  4399e5:	je     0x439a57
  4399e7:	jne    0x439a5d
  4399e9:	and    BYTE PTR cs:[rax+0x6f],cl
  4399ed:	ja     0x439a54
  4399ef:	jbe    0x439a56
  4399f1:	jb     0x439a1f
  4399f3:	and    BYTE PTR [rcx+0x74],ch
  4399f6:	and    BYTE PTR [rax+0x61],ch
  4399f9:	and    BYTE PTR fs:[rip+0x6e692073],ah        # 0x6eacba73
  439a00:	jo     0x439a77
  439a02:	je     0x439a2c
  439a04:	jae    0x439a2f
  439a06:	and    BYTE PTR [rcx+0x6e],ah
  439a09:	and    BYTE PTR fs:[rip+0x756f2073],ah        # 0x75b2ba83
  439a10:	je     0x439a82
  439a12:	jne    0x439a88
  439a14:	sub    BYTE PTR [rbx+0x29],dh
  439a17:	and    BYTE PTR cs:[rax+0x6c],dl
  439a1b:	gs (bad) 
  439a1d:	jae    0x439a84
  439a1f:	and    BYTE PTR [rcx+0x64],ah
  439a22:	push   0x75
  439a24:	jae    0x439a9a
  439a26:	sub    al,0x20
  439a28:	outs   dx,DWORD PTR ds:[rsi]
  439a29:	jb     0x439a4b
  439a2b:	jne    0x439aa0
  439a2d:	and    BYTE PTR gs:[rcx+0x20],ah
  439a31:	movsxd ebp,DWORD PTR [rdi+0x6d]
  439a34:	jo     0x439aa2
  439a36:	gs js  0x439a59
  439a39:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6772
  439a40:	jb     0x439aa3
  439a42:	jo     0x439aac
  439a44:	and    BYTE PTR [rax],ch
  439a46:	sub    eax,0x746c6966
  439a4b:	gs jb  0x439aad
  439a4e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  439a51:	jo     0x439abf
  439a53:	gs js  0x439a7f
  439a56:	and    BYTE PTR [rcx+0x6e],ch
  439a59:	jae    0x439acf
  439a5b:	gs (bad) 
  439a5d:	fs or  al,BYTE PTR cs:[rax]
  439a61:	add    BYTE PTR [rax],al
  439a63:	add    BYTE PTR [rax],al
  439a65:	add    BYTE PTR [rax],al
  439a67:	add    BYTE PTR [rsi+0x6f],cl
  439a6a:	and    BYTE PTR [rbp+riz*2+0x63],ah
  439a6e:	outs   dx,DWORD PTR ds:[rsi]
  439a6f:	fs gs jb 0x439a93
  439a73:	outs   dx,WORD PTR ds:[rsi]
  439a75:	jb     0x439a97
  439a77:	jae    0x439aed
  439a79:	jb     0x439ae0
  439a7b:	(bad)  
  439a7c:	ins    DWORD PTR es:[rdi],dx
  439a7d:	and    BYTE PTR [rbx],ah
  439a7f:	and    eax,0x64253a64
  439a84:	sub    al,0x20
  439a86:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6972
  439a8d:	outs   dx,BYTE PTR ds:[rsi]
  439a8e:	and    BYTE PTR [ecx+0x6d],ch
  439a92:	jo     0x439b03
  439a94:	jae    0x439b09
  439a96:	imul   esp,DWORD PTR [rdx+0x6c],0x62000a65
  439a9d:	jne    0x439b05
  439a9f:	data16 gs jb 0x439aa3
  439aa3:	add    BYTE PTR [rax],al
  439aa5:	add    BYTE PTR [rax],al
  439aa7:	add    BYTE PTR [rbx+0x61],al
  439aaa:	outs   dx,BYTE PTR ds:[rsi]
  439aab:	outs   dx,BYTE PTR ds:[rsi]
  439aac:	outs   dx,DWORD PTR ds:[rsi]
  439aad:	je     0x439acf
  439aaf:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439ab2:	outs   dx,BYTE PTR ds:[rsi]
  439ab3:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x76]
  439ab8:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x6c696620
  439ac0:	je     0x439b27
  439ac2:	jb     0x439ae4
  439ac4:	je     0x439b35
  439ac6:	and    BYTE PTR [rcx+0x75],ah
  439ac9:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x75706e69
  439ad1:	je     0x439add
  439ad3:	add    BYTE PTR [rax],al
  439ad5:	add    BYTE PTR [rax],al
  439ad7:	add    BYTE PTR [rbx+0x75],dh
  439ada:	(bad)
  439adf:	outs   dx,DWORD PTR gs:[rsi]
  439ae1:	cmp    ah,BYTE PTR [rax]
  439ae3:	jne    0x439b58
  439ae5:	imul   ebp,DWORD PTR [rsi+0x67],0x78642520
  439aec:	and    eax,0x61632064
  439af1:	outs   dx,BYTE PTR ds:[rsi]
  439af2:	jbe    0x439b55
  439af4:	jae    0x439b00
  439af6:	add    BYTE PTR [rax],al
  439af8:	jbe    0x439b63
  439afa:	fs outs dx,DWORD PTR gs:[rsi]
  439afd:	pop    rdi
  439afe:	jae    0x439b69
  439b00:	jp     0x439b67
  439b02:	cmp    eax,0x25786425
  439b07:	cmp    dh,BYTE PTR fs:[rax+0x69]
  439b0b:	js     0x439b6c
  439b0d:	ins    WORD PTR es:[rdi],dx
  439b0f:	je     0x439b4e
  439b11:	and    eax,0x69743a64
  439b16:	ins    DWORD PTR es:[rdi],dx
  439b17:	gs pop rdi
  439b19:	(bad)  
  439b1b:	jae    0x439b82
  439b1d:	cmp    eax,0x252f6425
  439b22:	cmp    dh,BYTE PTR fs:[rax+0x69]
  439b26:	js     0x439b8d
  439b28:	ins    BYTE PTR es:[rdi],dx
  439b29:	pop    rdi
  439b2a:	(bad)  
  439b2b:	jae    0x439b9d
  439b2d:	movsxd esi,DWORD PTR gs:[rbp+rdi*1+0x25]
  439b32:	fs (bad) 
  439b34:	and    eax,0x77733a64
  439b39:	jae    0x439b9a
  439b3b:	jo     0x439b9e
  439b3d:	jb     0x439ba0
  439b3f:	ins    DWORD PTR es:[rdi],dx
  439b40:	cmp    eax,0x67616c66
  439b45:	jae    0x439b84
  439b47:	and    eax,0x663a0064
  439b4c:	jb     0x439baf
  439b4e:	ins    DWORD PTR es:[rdi],dx
  439b4f:	gs pop rdi
  439b51:	jb     0x439bb4
  439b53:	je     0x439bba
  439b55:	cmp    eax,0x252f6425
  439b5a:	add    BYTE PTR fs:[rax],al
  439b5d:	add    BYTE PTR [rax],al
  439b5f:	add    BYTE PTR [rdi+0x72],ah
  439b62:	(bad)  
  439b63:	jo     0x439bcd
  439b65:	and    BYTE PTR [rip+0x6e692064],ah        # 0x6eacbbcf
  439b6b:	jo     0x439be2
  439b6d:	je     0x439b8f
  439b6f:	data16 jb 0x439be1
  439b72:	ins    DWORD PTR es:[rdi],dx
  439b73:	and    BYTE PTR [rbx+0x74],dh
  439b76:	jb     0x439bdd
  439b78:	(bad)  
  439b79:	ins    DWORD PTR es:[rdi],dx
  439b7a:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d5e4
  439b80:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  439b84:	outs   dx,BYTE PTR ds:[rsi]
  439b85:	jae    0x439bf7
  439b87:	outs   dx,DWORD PTR ds:[rsi]
  439b88:	jae    0x439bef
  439b8a:	add    BYTE PTR [rbx+0x6c],ah
  439b8d:	outs   dx,DWORD PTR ds:[rsi]
  439b8e:	movsxd ebp,DWORD PTR [rbx+0x0]
  439b91:	push   0x70696c66
  439b96:	add    BYTE PTR [rsi+0x66],dh
  439b99:	ins    BYTE PTR es:[rdi],dx
  439b9a:	imul   esi,DWORD PTR [rax+0x0],0x6f6c6363
  439ba1:	movsxd ebp,DWORD PTR [rbx+0x0]
  439ba4:	and    eax,0x49502a66
  439ba9:	(bad)  
  439baa:	xor    DWORD PTR [rax],edi
  439bac:	xor    BYTE PTR [rax],al
  439bae:	jb     0x439c1f
  439bb0:	je     0x439c13
  439bb2:	je     0x439c19
  439bb4:	add    BYTE PTR [rax],al
  439bb6:	add    BYTE PTR [rax],al
  439bb8:	outs   dx,WORD PTR ds:[rsi]
  439bba:	jb     0x439c1f
  439bbc:	and    BYTE PTR gs:[rbx+0x46],al
  439bc0:	push   rdx
  439bc1:	and    BYTE PTR [rsi+0x6f],ah
  439bc4:	jb     0x439be6
  439bc6:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
  439bcd:	jb     0x439c3e
  439bcf:	ins    DWORD PTR es:[rdi],dx
  439bd0:	and    BYTE PTR [rbx+0x74],dh
  439bd3:	jb     0x439c3a
  439bd5:	(bad)  
  439bd6:	ins    DWORD PTR es:[rdi],dx
  439bd7:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d641
  439bdd:	add    BYTE PTR [rbx+0x65],dh
  439be0:	je     0x439c52
  439be2:	je     0x439c57
  439be4:	add    BYTE PTR [rsi+0x0],cl
  439be7:	add    BYTE PTR [rbp+riz*2+0x69],ah
  439beb:	outs   dx,BYTE PTR ds:[rsi]
  439bec:	je     0x439c53
  439bee:	jb     0x439c5c
  439bf0:	(bad)  
  439bf1:	movsxd esp,DWORD PTR [rbp+0x20]
  439bf4:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
  439bfb:	jb     0x439c6c
  439bfd:	ins    DWORD PTR es:[rdi],dx
  439bfe:	and    BYTE PTR [rbx+0x74],dh
  439c01:	jb     0x439c68
  439c03:	(bad)  
  439c04:	ins    DWORD PTR es:[rdi],dx
  439c05:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d66f
  439c0b:	add    BYTE PTR [rcx+0x61],bh
  439c0e:	imul   esp,DWORD PTR fs:[rsi+0x0],0x6d697274
  439c16:	and    BYTE PTR [rsi+0x6f],ah
  439c19:	jb     0x439c3b
  439c1b:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  439c22:	je     0x439c96
  439c24:	gs (bad) 
  439c26:	ins    DWORD PTR es:[rdi],dx
  439c27:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d691
  439c2d:	add    BYTE PTR [rcx+0x62],ah
  439c30:	jne    0x439c98
  439c32:	data16 gs jb 0x439c36
  439c36:	add    BYTE PTR [rax],al
  439c38:	rex.XB (bad) 
  439c3a:	outs   dx,BYTE PTR ds:[rsi]
  439c3b:	outs   dx,BYTE PTR ds:[rsi]
  439c3c:	outs   dx,DWORD PTR ds:[rsi]
  439c3d:	je     0x439c5f
  439c3f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  439c42:	outs   dx,BYTE PTR ds:[rsi]
  439c43:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  439c48:	jne    0x439cae
  439c4a:	imul   ebp,DWORD PTR [rdi+0x20],0x746c6966
  439c51:	gs jb  0x439c74
  439c54:	je     0x439cc5
  439c56:	and    BYTE PTR [rsi+0x6f],ch
  439c59:	outs   dx,BYTE PTR ds:[rsi]
  439c5a:	and    BYTE PTR [rcx+0x75],ah
  439c5d:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x75706e69
  439c65:	je     0x439c71
  439c67:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  439c6b:	gs pop rdi
  439c6d:	(bad)  
  439c6f:	jae    0x439cd6
  439c71:	cmp    eax,0x252f6425
  439c76:	cmp    dh,BYTE PTR fs:[rbx+0x61]
  439c7a:	ins    DWORD PTR es:[rdi],dx
  439c7b:	jo     0x439ce9
  439c7d:	gs pop rdi
  439c7f:	jb     0x439ce2
  439c81:	je     0x439ce8
  439c83:	cmp    eax,0x733a6425
  439c88:	(bad)  
  439c89:	ins    DWORD PTR es:[rdi],dx
  439c8a:	jo     0x439cf8
  439c8c:	gs pop rdi
  439c8e:	ins    WORD PTR es:[rdi],dx
  439c90:	je     0x439ccf
  439c92:	and    eax,0x633a0073
  439c97:	push   0x656e6e61
  439c9c:	ins    BYTE PTR es:[rdi],dx
  439c9d:	pop    rdi
  439c9e:	ins    BYTE PTR es:[rdi],dx
  439c9f:	(bad)  
  439ca0:	jns    0x439d11
  439ca2:	jne    0x439d18
  439ca4:	cmp    eax,0x6c257830
  439ca9:	ins    BYTE PTR es:[rdi],dx
  439caa:	js     0x439cac
  439cac:	cmp    ah,BYTE PTR [rbx+0x68]
  439caf:	(bad)  
  439cb0:	outs   dx,BYTE PTR ds:[rsi]
  439cb1:	outs   dx,BYTE PTR ds:[rsi]
  439cb2:	gs ins BYTE PTR es:[rdi],dx
  439cb4:	jae    0x439cf3
  439cb6:	and    eax,0x73610064
  439cbb:	jns    0x439d2b
  439cbd:	movsxd edi,DWORD PTR [rip+0x3a006425]        # 0x3a4400e8
  439cc3:	ins    DWORD PTR es:[rdi],dx
  439cc4:	imul   ebp,DWORD PTR [rsi+0x5f],0x64726168
  439ccb:	pop    rdi
  439ccc:	movsxd ebp,DWORD PTR [rdi+0x6d]
  439ccf:	jo     0x439d0e
  439cd1:	and    eax,0x663a0066
  439cd6:	imul   esi,DWORD PTR [rdx+0x73],0x74705f74
  439cdd:	jae    0x439d1c
  439cdf:	xor    BYTE PTR [rax],al
  439ce1:	add    BYTE PTR [rax],al
  439ce3:	add    BYTE PTR [rax],al
  439ce5:	add    BYTE PTR [rax],al
  439ce7:	add    BYTE PTR [rip+0x6e797361],ch        # 0x6ebd104e
  439ced:	movsxd esp,DWORD PTR [rax]
  439cef:	imul   esi,DWORD PTR [rbx+0x20],0x77726f66
  439cf6:	(bad)  
  439cf7:	jb     0x439d5d
  439cf9:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  439cff:	ins    BYTE PTR es:[rdi],dx
  439d00:	(bad)  
  439d01:	jbe    0x439d69
  439d03:	imul   esp,DWORD PTR [rax],0x696d6973
  439d09:	ins    BYTE PTR es:[rdi],dx
  439d0a:	(bad)  
  439d0b:	jb     0x439d79
  439d0d:	jns    0x439d2f
  439d0f:	je     0x439d80
  439d11:	and    BYTE PTR [rip+0x61206661],ch        # 0x61640378
  439d17:	jb     0x439d7e
  439d19:	jae    0x439d7c
  439d1b:	ins    DWORD PTR es:[rdi],dx
  439d1c:	jo     0x439d8a
  439d1e:	gs cmp eax,0xa2e7325
  439d24:	add    BYTE PTR [rax],al
  439d26:	add    BYTE PTR [rax],al
  439d28:	addr32 jb 0x439d8c
  439d2b:	jo     0x439d95
  439d2d:	and    BYTE PTR [rip+0x73252064],ah        # 0x7368bd97
  439d33:	and    BYTE PTR [rsi+0x6f],ah
  439d36:	jb     0x439d58
  439d38:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  439d3f:	je     0x439db3
  439d41:	gs (bad) 
  439d43:	ins    DWORD PTR es:[rdi],dx
  439d44:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468d7ae
  439d4a:	add    BYTE PTR [rcx+0x72],ah
  439d4d:	gs jae 0x439db1
  439d50:	ins    DWORD PTR es:[rdi],dx
  439d51:	jo     0x439dbf
  439d53:	add    BYTE PTR gs:[rax],al
  439d56:	add    BYTE PTR [rax],al
  439d58:	sub    eax,0x206c6f76
  439d5d:	push   0x62207361
  439d62:	gs outs dx,BYTE PTR gs:[rsi]
  439d65:	and    BYTE PTR [rbp+riz*2+0x70],ah
  439d69:	jb     0x439dd0
  439d6b:	movsxd esp,DWORD PTR [rcx+0x74]
  439d6e:	gs fs and BYTE PTR cs:[rbp+0x73],dl
  439d74:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  439d79:	and    BYTE PTR [rsi+0x6f],dh
  439d7c:	ins    BYTE PTR es:[rdi],dx
  439d7d:	jne    0x439dec
  439d7f:	and    BYTE PTR gs:[rcx+0x75],ah
  439d83:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x746c6966
  439d8b:	gs jb  0x439dae
  439d8e:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  439d95:	or     al,BYTE PTR cs:[rax]
  439d98:	and    eax,0x66
  439d9d:	add    BYTE PTR [rax],al
  439d9f:	add    BYTE PTR [rip+0x206c6f76],ch        # 0x20b00d1b
  439da5:	imul   esi,DWORD PTR [rbx+0x20],0x77726f66
  439dac:	(bad)  
  439dad:	jb     0x439e13
  439daf:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  439db5:	ins    BYTE PTR es:[rdi],dx
  439db6:	(bad)  
  439db7:	jbe    0x439e1f
  439db9:	imul   esp,DWORD PTR [rax],0x696d6973
  439dbf:	ins    BYTE PTR es:[rdi],dx
  439dc0:	(bad)  
  439dc1:	jb     0x439e2f
  439dc3:	jns    0x439de5
  439dc5:	je     0x439e36
  439dc7:	and    BYTE PTR [rip+0x76206661],ch        # 0x7664042e
  439dcd:	outs   dx,DWORD PTR ds:[rsi]
  439dce:	ins    BYTE PTR es:[rdi],dx
  439dcf:	jne    0x439e3e
  439dd1:	gs cmp eax,0xa2e7325
  439dd7:	add    BYTE PTR [rsi+0x6f],dh
  439dda:	ins    BYTE PTR es:[rdi],dx
  439ddb:	jne    0x439e4a
  439ddd:	add    BYTE PTR gs:[rax],al
  439de0:	or     al,0x0
  439de2:	add    BYTE PTR [rax],al
  439de4:	or     eax,0xe000000
  439de9:	add    BYTE PTR [rax],al
  439deb:	add    BYTE PTR [rax],al
  439ded:	add    BYTE PTR [rax],al
  439def:	add    BYTE PTR [rax+rax*1],al
  439df2:	add    BYTE PTR [rax],al
  439df4:	add    eax,0x1e000000
  439df9:	add    BYTE PTR [rax],al
  439dfb:	add    bh,bh
  439dfd:	(bad)  
  439dfe:	(bad)  
  439dff:	dec    DWORD PTR [rax+rax*1]
  439e02:	add    BYTE PTR [rax],al
  439e04:	or     eax,0x0
  439e09:	add    BYTE PTR [rax],al
  439e0b:	add    BYTE PTR [rax+rax*1],al
  439e0e:	add    BYTE PTR [rax],al
  439e10:	(bad)  
  439e11:	(bad)  
  439e12:	(bad)  
  439e13:	inc    DWORD PTR [rax]
	...
  439e1d:	adc    BYTE PTR [rsi+0x40],0xff
  439e21:	(bad)  
  439e22:	(bad)  
  439e23:	(bad)  
  439e24:	(bad)  
  439e25:	(bad)  
  439e26:	(bad)  
  439e27:	jg     0x439e29
	...
  439e35:	add    al,dh
  439e37:	(bad)  
  439e38:	add    BYTE PTR [rax],al
  439e3a:	add    BYTE PTR [rax],al
  439e3c:	add    BYTE PTR [rax+0x4066],al
  439e42:	add    BYTE PTR [rax],al
  439e44:	add    al,ah
  439e46:	jo     0x439e88
  439e48:	(bad)  
  439e49:	cdq    
  439e4a:	cdq    
  439e4b:	cdq    
  439e4c:	cdq    
  439e4d:	cdq    
  439e4e:	mov    ecx,0x3f
  439e53:	add    BYTE PTR [rax],al
  439e55:	add    BYTE PTR [rax+0x3f],dh
	...
  439e80:	(bad)  
  439e81:	outs   dx,BYTE PTR gs:[rsi]
  439e83:	movsxd ebp,DWORD PTR [rax+0x3a]
  439e86:	and    BYTE PTR [rbp+0x61],ch
  439e89:	js     0x439efd
  439e8b:	jae    0x439f00
  439e8d:	cmp    eax,0x426b6925
  439e92:	or     al,BYTE PTR [rax]
  439e94:	add    BYTE PTR [rax],al
  439e96:	add    BYTE PTR [rax],al
  439e98:	rex.RB js 0x439f04
  439e9b:	je     0x439f06
  439e9d:	outs   dx,BYTE PTR ds:[rsi]
  439e9e:	and    BYTE PTR [esi+0x6f],ch
  439ea2:	jb     0x439f11
  439ea4:	(bad)  
  439ea5:	ins    BYTE PTR es:[rdi],dx
  439ea6:	ins    BYTE PTR es:[rdi],dx
  439ea7:	jns    0x439ed5
  439ea9:	and    BYTE PTR [rdx+0x65],dh
  439eac:	movsxd esp,DWORD PTR [rbp+0x69]
  439eaf:	jbe    0x439f16
  439eb1:	and    BYTE PTR fs:[rbx+0x69],dh
  439eb5:	outs   dx,BYTE PTR ds:[esi]
  439eb7:	(bad)  
  439eb8:	ins    BYTE PTR es:[rdi],dx
  439eb9:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4dcd23
  439ebf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  439ec1:	outs   dx,BYTE PTR ds:[rsi]
  439ec2:	jbe    0x439f29
  439ec4:	jb     0x439f39
  439ec6:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  439ecd:	ins    BYTE PTR es:[rdi],dx
  439ece:	gs and DWORD PTR fs:[rdx],ecx
  439ed2:	add    BYTE PTR [rax],al
  439ed4:	and    eax,0x25000073
  439ed9:	jae    0x439efb
  439edb:	push   0x63636177
  439ee0:	gs ins BYTE PTR es:[rdi],dx
  439ee2:	and    BYTE PTR [rdx+0x65],dh
  439ee5:	jno    0x439f5c
  439ee7:	gs jae 0x439f5e
  439eea:	gs and BYTE PTR fs:[rsi+0x6f],ah
  439eef:	jb     0x439f11
  439ef1:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  439ef8:	je     0x439f6c
  439efa:	gs (bad) 
  439efc:	ins    DWORD PTR es:[rdi],dx
  439efd:	and    BYTE PTR [rbx],ah
  439eff:	and    eax,0x64253a64
  439f04:	sub    al,0x20
  439f06:	(bad)  
  439f07:	jne    0x439f7d
  439f09:	and    BYTE PTR [rbx+0x61],ah
  439f0c:	outs   dx,BYTE PTR ds:[rsi]
  439f0d:	outs   dx,BYTE PTR ds:[rsi]
  439f0e:	outs   dx,DWORD PTR ds:[rsi]
  439f0f:	je     0x439f31
  439f11:	(bad)  
  439f12:	and    BYTE PTR gs:[rcx+0x6e],ch
  439f16:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  439f1e:	fs or  al,BYTE PTR cs:[rax]
  439f22:	ja     0x439f24
  439f24:	outs   dx,WORD PTR ds:[rsi]
  439f26:	jo     0x439f8d
  439f28:	outs   dx,BYTE PTR ds:[rsi]
  439f29:	add    BYTE PTR [rsi+0x72],ah
  439f2c:	(bad)  
  439f2d:	ins    DWORD PTR es:[rdi],dx
  439f2e:	gs cmp eax,0x64352520
  439f34:	and    BYTE PTR [rcx+0x3d],dh
  439f37:	and    BYTE PTR [rip+0x66312e32],ah        # 0x6674cd6f
  439f3d:	and    BYTE PTR [rax],al
  439f3f:	push   rax
  439f40:	push   rbx
  439f41:	rex.WRX push rdx
  439f43:	cmp    eax,0x2e362520
  439f48:	xor    ah,BYTE PTR [rsi+0x20]
  439f4b:	add    BYTE PTR [rsi+0x5f],ah
  439f4e:	jae    0x439fb9
  439f50:	jp     0x439fb7
  439f52:	cmp    eax,0x64362520
  439f57:	and    BYTE PTR [rax],al
  439f59:	add    BYTE PTR [rax],al
  439f5b:	add    BYTE PTR [rax],al
  439f5d:	add    BYTE PTR [rax],al
  439f5f:	add    BYTE PTR [rbx+0x5f],dh
  439f62:	jae    0x439fcd
  439f64:	jp     0x439fcb
  439f66:	cmp    eax,0x2e382520
  439f6b:	xor    BYTE PTR [rsi+0x6b],ah
  439f6e:	and    BYTE PTR [rcx+r13*2+0x6d],sil
  439f73:	gs cmp eax,0x2e302520
  439f79:	xor    esp,DWORD PTR [rsi+0x20]
  439f7c:	(bad)
  439f81:	(bad)  
  439f82:	xor    DWORD PTR cs:[rsi+0x6b],esp
  439f86:	(bad)  
  439f87:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x76612073
  439f8f:	addr32 pop rdi
  439f91:	(bad)
  439f96:	(bad)  
  439f97:	xor    DWORD PTR cs:[rsi+0x6b],esp
  439f9b:	(bad)  
  439f9c:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x74002073
  439fa4:	jns    0x43a016
  439fa6:	gs cmp eax,0xa632520
  439fac:	add    BYTE PTR [rax],al
  439fae:	add    BYTE PTR [rax],al
  439fb0:	push   rdx
  439fb1:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  439fb5:	jbe    0x43a01c
  439fb7:	and    BYTE PTR fs:[rsi],bh
  439fba:	and    BYTE PTR [rbx],dh
  439fbc:	and    BYTE PTR [rbx+0x79],dh
  439fbf:	jae    0x43a035
  439fc1:	gs ins DWORD PTR es:[rdi],dx
  439fc3:	and    BYTE PTR [rbx+0x69],dh
  439fc6:	outs   dx,BYTE PTR ds:[esi]
  439fc8:	(bad)  
  439fc9:	ins    BYTE PTR es:[rdi],dx
  439fca:	jae    0x439ff8
  439fcc:	and    BYTE PTR [rax+0x61],ch
  439fcf:	jb     0x43a035
  439fd1:	and    BYTE PTR [rbp+0x78],ah
  439fd4:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x71000a67
  439fdc:	cmp    eax,0x312e3225
  439fe1:	data16 and BYTE PTR [rax],al
  439fe4:	jae    0x43a05a
  439fe6:	jb     0x43a04d
  439fe8:	(bad)  
  439fe9:	ins    DWORD PTR es:[rdi],dx
  439fea:	pop    rdi
  439feb:	and    eax,0x64255f64
  439ff0:	pop    rdi
  439ff1:	jno    0x43a030
  439ff3:	and    eax,0xa66312e
  439ff8:	add    BYTE PTR [rsi+0x72],ah
  439ffb:	(bad)  
  439ffc:	ins    DWORD PTR es:[rdi],dx
  439ffd:	gs cmp eax,0x20643525
  43a003:	data16 jo 0x43a079
  43a006:	cmp    eax,0x2a2e3325
  43a00b:	data16 and BYTE PTR [rcx+0x3d],dh
  43a00f:	and    eax,0x66312e33
  43a014:	and    BYTE PTR [rax],al
  43a016:	data16 jb 0x43a07a
  43a019:	ins    DWORD PTR es:[rdi],dx
  43a01a:	gs cmp eax,0xa6425
  43a020:	data16 jo 0x43a096
  43a023:	cmp    eax,0x66312e25
  43a028:	or     al,BYTE PTR [rax]
  43a02a:	rex.WR add BYTE PTR [rip+0x53500058],r12b        # 0x5393a089
  43a031:	rex.WRX push rdx
  43a033:	cmp    eax,0x3a632500
  43a038:	and    eax,0x66322e32
  43a03d:	and    BYTE PTR [rax],al
  43a03f:	jae    0x43a0b5
  43a041:	jb     0x43a0a8
  43a043:	(bad)  
  43a044:	ins    DWORD PTR es:[rdi],dx
  43a045:	pop    rdi
  43a046:	and    eax,0x64255f64
  43a04b:	pop    rdi
  43a04c:	jo     0x43a0c1
  43a04e:	outs   dx,BYTE PTR ds:[rsi]
  43a04f:	jb     0x43a0b0
  43a051:	and    eax,0x32253d63
  43a056:	xor    ah,BYTE PTR cs:[rsi+0xa]
  43a05a:	add    BYTE PTR [rdx],ch
  43a05c:	cmp    ah,BYTE PTR [rip+0x66322e32]        # 0x6675ce94
  43a062:	and    BYTE PTR [rax],al
  43a064:	jae    0x43a0da
  43a066:	jb     0x43a0cd
  43a068:	(bad)  
  43a069:	ins    DWORD PTR es:[rdi],dx
  43a06a:	pop    rdi
  43a06b:	and    eax,0x64255f64
  43a070:	pop    rdi
  43a071:	jo     0x43a0e6
  43a073:	outs   dx,BYTE PTR ds:[rsi]
  43a074:	jb     0x43a0d5
  43a076:	(bad)  
  43a077:	ins    BYTE PTR es:[rdi],dx
  43a078:	ins    BYTE PTR es:[rdi],dx
  43a079:	cmp    eax,0x322e3225
  43a07e:	data16 or al,BYTE PTR [rax]
  43a081:	jae    0x43a0ec
  43a083:	jp     0x43a0ea
  43a085:	cmp    eax,0x20412f4e
  43a08a:	je     0x43a0f5
  43a08c:	ins    DWORD PTR es:[rdi],dx
  43a08d:	gs cmp eax,0x7a697300
  43a093:	gs cmp eax,0x302e3825
  43a099:	imul   ax,WORD PTR [rdx+0x20],0x74
  43a09e:	imul   ebp,DWORD PTR [rbp+0x65],0x2d003d
  43a0a5:	and    eax,0x3a643230
  43a0aa:	and    eax,0x3a643230
  43a0af:	and    eax,0x2e643230
  43a0b4:	and    eax,0x20643230
  43a0b9:	add    BYTE PTR [rdx+0x69],ah
  43a0bc:	je     0x43a130
  43a0be:	(bad)  
  43a0bf:	je     0x43a126
  43a0c1:	cmp    eax,0x412f4e
  43a0c6:	(bad)  
  43a0c7:	imul   esi,DWORD PTR [rdx+rsi*2+0x61],0x4e3d6574
  43a0cf:	(bad)  
  43a0d0:	or     al,BYTE PTR [r8]
  43a0d3:	(bad)  
  43a0d4:	imul   esi,DWORD PTR [rdx+rsi*2+0x61],0x253d6574
  43a0dc:	ss xor DWORD PTR cs:[rsi+0x6b],esp
  43a0e1:	(bad)  
  43a0e2:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x69620073
  43a0ea:	je     0x43a15e
  43a0ec:	(bad)  
  43a0ed:	je     0x43a154
  43a0ef:	cmp    eax,0x312e3625
  43a0f4:	imul   sp,WORD PTR [rdx+0x69],0x74
  43a0f9:	jae    0x43a12a
  43a0fb:	jae    0x43a107
  43a0fd:	add    BYTE PTR [rdi+rbp*2+0x74],dh
  43a101:	(bad)  
  43a102:	ins    BYTE PTR es:[rdi],dx
  43a103:	pop    rdi
  43a104:	jae    0x43a16f
  43a106:	jp     0x43a16d
  43a108:	cmp    eax,0xa412f4e
  43a10d:	add    BYTE PTR [rdi+rbp*2+0x74],dh
  43a111:	(bad)  
  43a112:	ins    BYTE PTR es:[rdi],dx
  43a113:	pop    rdi
  43a114:	jae    0x43a17f
  43a116:	jp     0x43a17d
  43a118:	cmp    eax,0x646c6c25
  43a11d:	or     al,BYTE PTR [rax]
  43a11f:	outs   dx,DWORD PTR ds:[rsi]
  43a120:	jne    0x43a196
  43a122:	pop    rdi
  43a123:	je     0x43a18e
  43a125:	ins    DWORD PTR es:[rdi],dx
  43a126:	gs pop rdi
  43a128:	ins    DWORD PTR es:[rdi],dx
  43a129:	jae    0x43a168
  43a12b:	and    eax,0xa646c6c
  43a130:	add    BYTE PTR [rdi+0x75],ch
  43a133:	je     0x43a194
  43a135:	je     0x43a1a0
  43a137:	ins    DWORD PTR es:[rdi],dx
  43a138:	gs cmp eax,0x64323025
  43a13e:	cmp    ah,BYTE PTR [rip+0x3a643230]        # 0x3aa7d374
  43a144:	and    eax,0x2e643230
  43a149:	and    eax,0xa643630
  43a14e:	add    BYTE PTR [rax],ah
  43a150:	fs jne 0x43a1c3
  43a153:	cmp    eax,0x64206425
  43a158:	jb     0x43a1c9
  43a15a:	jo     0x43a199
  43a15c:	and    eax,0x75640064
  43a161:	jo     0x43a1c2
  43a163:	data16 jb 0x43a1c7
  43a166:	ins    DWORD PTR es:[rdi],dx
  43a167:	gs jae 0x43a1a7
  43a16a:	and    eax,0x64000a64
  43a16f:	jb     0x43a1e0
  43a171:	jo     0x43a1d2
  43a173:	data16 jb 0x43a1d7
  43a176:	ins    DWORD PTR es:[rdi],dx
  43a177:	gs jae 0x43a1b7
  43a17a:	and    eax,0x25000a64
  43a17f:	jae    0x43a1a1
  43a181:	and    BYTE PTR [rax],ah
  43a183:	and    BYTE PTR [rip+0x76000063],ah        # 0x7643a1ec
  43a189:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x2e31253a
  43a191:	xor    BYTE PTR [rsi+0x6b],ah
  43a194:	rex.X and BYTE PTR [rcx+0x75],spl
  43a198:	imul   ebp,DWORD PTR fs:[rdi+0x3a],0x302e3125
  43a1a0:	imul   ax,WORD PTR [rdx+0x20],0x73
  43a1a5:	jne    0x43a209
  43a1a7:	je     0x43a212
  43a1a9:	je     0x43a217
  43a1ab:	cmp    ah,BYTE PTR gs:[rip+0x66302e31]        # 0x6673cfe3
  43a1b2:	imul   eax,DWORD PTR [rdx+0x20],0x6f
  43a1b6:	je     0x43a220
  43a1b8:	gs jb  0x43a1db
  43a1bb:	jae    0x43a231
  43a1bd:	jb     0x43a224
  43a1bf:	(bad)  
  43a1c0:	ins    DWORD PTR es:[rdi],dx
  43a1c1:	jae    0x43a1fd
  43a1c3:	and    eax,0x66302e31
  43a1c8:	imul   eax,DWORD PTR [rdx+0x20],0x67
  43a1cc:	ins    BYTE PTR es:[rdi],dx
  43a1cd:	outs   dx,DWORD PTR ds:[rsi]
  43a1ce:	(bad)
  43a1d3:	gs (bad) 
  43a1d5:	fs gs jb 0x43a24c
  43a1d9:	cmp    ah,BYTE PTR [rip+0x66302e31]        # 0x6673d010
  43a1df:	imul   eax,DWORD PTR [rdx+0x20],0x6d
  43a1e3:	jne    0x43a25d
  43a1e5:	imul   ebp,DWORD PTR [rsi+0x67],0x65766f20
  43a1ec:	jb     0x43a256
  43a1ee:	gs (bad) 
  43a1f0:	cmp    ah,BYTE PTR fs:[rax]
  43a1f3:	add    BYTE PTR [rip+0x252566],ah        # 0x68c75f
  43a1f9:	jne    0x43a269
  43a1fb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43a1ff:	outs   dx,BYTE PTR ds:[rsi]
  43a200:	add    BYTE PTR [rdx],cl
  43a202:	add    BYTE PTR [rcx+0x6e],cl
  43a205:	jo     0x43a27c
  43a207:	je     0x43a229
  43a209:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2523
  43a210:	and    BYTE PTR fs:[rax],ch
  43a213:	and    eax,0xa3a2973
  43a218:	add    BYTE PTR [rax],ah
  43a21a:	and    BYTE PTR [rcx+0x6e],cl
  43a21d:	jo     0x43a294
  43a21f:	je     0x43a241
  43a221:	jae    0x43a297
  43a223:	jb     0x43a28a
  43a225:	(bad)  
  43a226:	ins    DWORD PTR es:[rdi],dx
  43a227:	and    BYTE PTR [rbx],ah
  43a229:	and    eax,0x64253a64
  43a22e:	and    BYTE PTR [rax],ch
  43a230:	and    eax,0x203a2973
  43a235:	add    BYTE PTR [rax],al
  43a237:	add    BYTE PTR [rip+0x20756c6c],ah        # 0x20b90ea9
  43a23d:	jo     0x43a2a0
  43a23f:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a242:	je     0x43a2b7
  43a244:	and    BYTE PTR [rdx+0x65],dh
  43a247:	(bad)  
  43a248:	and    BYTE PTR fs:[rax],ch
  43a24b:	and    eax,0x20756c6c
  43a250:	(bad)  
  43a251:	jns    0x43a2c7
  43a253:	gs jae 0x43a27f
  43a256:	cmp    esp,DWORD PTR [rax]
  43a258:	add    BYTE PTR [rip+0x20756c6c],ah        # 0x20b90eca
  43a25e:	data16 jb 0x43a2c2
  43a261:	ins    DWORD PTR es:[rdi],dx
  43a262:	gs jae 0x43a285
  43a265:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43a26a:	gs add BYTE PTR fs:[rax],ah
  43a26e:	sub    BYTE PTR [rip+0x20756c6c],ah        # 0x20b90ee0
  43a274:	jae    0x43a2d7
  43a276:	ins    DWORD PTR es:[rdi],dx
  43a277:	jo     0x43a2e5
  43a279:	gs jae 0x43a2a5
  43a27c:	add    BYTE PTR [rbx],bh
  43a27e:	and    BYTE PTR [rax],al
  43a280:	and    BYTE PTR [rax],ah
  43a282:	push   rsp
  43a283:	outs   dx,DWORD PTR ds:[rsi]
  43a284:	je     0x43a2e7
  43a286:	ins    BYTE PTR es:[rdi],dx
  43a287:	cmp    ah,BYTE PTR [rax]
  43a289:	and    eax,0x20756c6c
  43a28e:	jo     0x43a2f1
  43a290:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a293:	je     0x43a308
  43a295:	and    BYTE PTR [rax],ch
  43a297:	and    eax,0x20756c6c
  43a29c:	(bad)  
  43a29d:	jns    0x43a313
  43a29f:	gs jae 0x43a2cb
  43a2a2:	and    BYTE PTR [rbp+riz*2+0x6d],ah
  43a2a6:	jne    0x43a320
  43a2a8:	gs or  al,BYTE PTR fs:[rax]
  43a2ac:	rex.WRXB jne 0x43a323
  43a2af:	jo     0x43a326
  43a2b1:	je     0x43a2d3
  43a2b3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2523
  43a2ba:	and    BYTE PTR fs:[rax],ch
  43a2bd:	and    eax,0xa3a2973
  43a2c2:	add    BYTE PTR [rax],ah
  43a2c4:	and    BYTE PTR [rdi+0x75],cl
  43a2c7:	je     0x43a339
  43a2c9:	jne    0x43a33f
  43a2cb:	and    BYTE PTR [rbx+0x74],dh
  43a2ce:	jb     0x43a335
  43a2d0:	(bad)  
  43a2d1:	ins    DWORD PTR es:[rdi],dx
  43a2d2:	and    BYTE PTR [rbx],ah
  43a2d4:	and    eax,0x64253a64
  43a2d9:	and    BYTE PTR [rax],ch
  43a2db:	and    eax,0x203a2973
  43a2e0:	add    BYTE PTR [rip+0x20756c6c],ah        # 0x20b90f52
  43a2e6:	data16 jb 0x43a34a
  43a2e9:	ins    DWORD PTR es:[rdi],dx
  43a2ea:	gs jae 0x43a30d
  43a2ed:	outs   dx,BYTE PTR gs:[rsi]
  43a2ef:	movsxd ebp,DWORD PTR [rdi+0x64]
  43a2f2:	gs add BYTE PTR fs:[rax],al
  43a2f6:	add    BYTE PTR [rax],al
  43a2f8:	and    eax,0x20756c6c
  43a2fd:	jo     0x43a360
  43a2ff:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a302:	je     0x43a377
  43a304:	and    BYTE PTR [rbp+0x75],ch
  43a307:	js     0x43a36e
  43a309:	and    BYTE PTR fs:[rax],ch
  43a30c:	and    eax,0x20756c6c
  43a311:	(bad)  
  43a312:	jns    0x43a388
  43a314:	gs jae 0x43a340
  43a317:	cmp    esp,DWORD PTR [rax]
  43a319:	add    BYTE PTR [rax],al
  43a31b:	add    BYTE PTR [rax],al
  43a31d:	add    BYTE PTR [rax],al
  43a31f:	add    BYTE PTR [rax],ah
  43a321:	and    BYTE PTR [rdi+rbp*2+0x74],dl
  43a325:	(bad)  
  43a326:	ins    BYTE PTR es:[rdi],dx
  43a327:	cmp    ah,BYTE PTR [rax]
  43a329:	and    eax,0x20756c6c
  43a32e:	jo     0x43a391
  43a330:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a333:	je     0x43a3a8
  43a335:	and    BYTE PTR [rax],ch
  43a337:	and    eax,0x20756c6c
  43a33c:	(bad)  
  43a33d:	jns    0x43a3b3
  43a33f:	gs jae 0x43a36b
  43a342:	and    BYTE PTR [rbp+0x75],ch
  43a345:	js     0x43a3ac
  43a347:	or     al,BYTE PTR fs:[rax]
  43a34a:	add    BYTE PTR [rax],al
  43a34c:	add    BYTE PTR [rax],al
  43a34e:	add    BYTE PTR [rax],al
  43a350:	rex.WRXB jne 0x43a3c7
  43a353:	jo     0x43a3ca
  43a355:	je     0x43a377
  43a357:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7369
  43a35e:	and    BYTE PTR [rbp+0x6d],ah
  43a361:	jo     0x43a3d7
  43a363:	jns    0x43a391
  43a365:	and    BYTE PTR [rsi+0x6f],ch
  43a368:	je     0x43a3d2
  43a36a:	imul   ebp,DWORD PTR [rsi+0x67],0x73617720
  43a371:	and    BYTE PTR [rbp+0x6e],ah
  43a374:	movsxd ebp,DWORD PTR [rdi+0x64]
  43a377:	gs and BYTE PTR fs:[rax],al
  43a37b:	add    BYTE PTR [rax],al
  43a37d:	add    BYTE PTR [rax],al
  43a37f:	add    BYTE PTR [rax],ch
  43a381:	movsxd ebp,DWORD PTR [rax+0x65]
  43a384:	movsxd ebp,DWORD PTR [rbx+0x20]
  43a387:	sub    eax,0x2f207373
  43a38c:	and    BYTE PTR [rip+0x202f2074],ch        # 0x2072c406
  43a392:	sub    eax,0x6d617266
  43a397:	gs jae 0x43a3ba
  43a39a:	jo     0x43a3fd
  43a39c:	jb     0x43a3ff
  43a39e:	ins    DWORD PTR es:[rdi],dx
  43a39f:	gs je  0x43a407
  43a3a2:	jb     0x43a417
  43a3a4:	and    BYTE PTR [rcx+0x66],ch
  43a3a7:	and    BYTE PTR [rbp+0x73],dh
  43a3aa:	gs sub DWORD PTR fs:[rdx],ecx
  43a3ae:	add    BYTE PTR [rbp+0x6e],ah
  43a3b1:	add    BYTE PTR fs:[rax+0x72],dh
  43a3b5:	outs   dx,DWORD PTR ds:[rsi]
  43a3b6:	addr32 jb 0x43a41e
  43a3b9:	jae    0x43a42e
  43a3bb:	cmp    eax,0xa7325
  43a3c0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43a3c3:	je     0x43a42e
  43a3c5:	outs   dx,BYTE PTR ds:[rsi]
  43a3c6:	jne    0x43a42d
  43a3c8:	add    BYTE PTR [rbx+0x44],dl
  43a3cb:	push   rax
  43a3cc:	cmp    cl,BYTE PTR [rdx]
  43a3ce:	and    eax,0x72000a73
  43a3d3:	je     0x43a445
  43a3d5:	add    BYTE PTR [rsi+0x61],al
  43a3d8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43a3e0:	outs   dx,DWORD PTR ds:[rsi]
  43a3e1:	jo     0x43a448
  43a3e3:	outs   dx,BYTE PTR ds:[rsi]
  43a3e4:	and    BYTE PTR [rbx+0x64],dh
  43a3e7:	jo     0x43a409
  43a3e9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  43a3f0:	jae    0x43a419
  43a3f2:	or     al,BYTE PTR [rax]
  43a3f4:	push   rbx
  43a3f5:	rex.R push rax
  43a3f7:	cmp    cl,BYTE PTR [rdx]
  43a3f9:	and    eax,0x65620073
  43a3fe:	outs   dx,BYTE PTR ds:[rsi]
  43a3ff:	movsxd ebp,DWORD PTR [rax+0x3a]
  43a402:	and    BYTE PTR [rip+0x756c6c38],ah        # 0x75b01040
  43a408:	and    BYTE PTR [rip+0xa2073],ah        # 0x4dc481
  43a40e:	data16 ins BYTE PTR es:[rdi],dx
  43a410:	jne    0x43a485
  43a412:	push   0x20732520
  43a417:	and    eax,0x64252e64
  43a41c:	add    BYTE PTR [rdx],cl
  43a41e:	push   rdx
  43a41f:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  43a423:	jbe    0x43a48a
  43a425:	and    BYTE PTR fs:[rdi+0x69],dh
  43a429:	outs   dx,BYTE PTR ds:[rsi]
  43a42a:	outs   dx,DWORD PTR fs:[rsi]
  43a42c:	ja     0x43a4a1
  43a42e:	and    BYTE PTR [rbx+0x69],dh
  43a431:	outs   dx,BYTE PTR ds:[esi]
  43a433:	(bad)  
  43a434:	ins    BYTE PTR es:[rdi],dx
  43a435:	and    BYTE PTR [rip+0xa646c],ah        # 0x4e08a7
  43a43b:	add    BYTE PTR [rax],al
  43a43d:	add    BYTE PTR [rax],al
  43a43f:	add    BYTE PTR [rdx+0x65],dl
  43a442:	movsxd esp,DWORD PTR [rbp+0x69]
  43a445:	jbe    0x43a4ac
  43a447:	and    BYTE PTR fs:[rbp+0x6e],dh
  43a44b:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43a44f:	outs   dx,BYTE PTR ds:[rsi]
  43a450:	and    BYTE PTR [rdi+0x69],dh
  43a453:	outs   dx,BYTE PTR ds:[rsi]
  43a454:	outs   dx,DWORD PTR fs:[rsi]
  43a456:	ja     0x43a4cb
  43a458:	and    BYTE PTR [rbx+0x69],dh
  43a45b:	outs   dx,BYTE PTR ds:[esi]
  43a45d:	(bad)  
  43a45e:	ins    BYTE PTR es:[rdi],dx
  43a45f:	and    BYTE PTR [rip+0xa646c],ah        # 0x4e08d1
  43a465:	add    BYTE PTR [rax],al
  43a467:	add    BYTE PTR [rcx+0x6d],cl
  43a46a:	jo     0x43a4db
  43a46c:	jae    0x43a4e1
  43a46e:	imul   esp,DWORD PTR [rdx+0x6c],0x6f742065
  43a475:	and    BYTE PTR [rdi+0x65],ah
  43a478:	je     0x43a49a
  43a47a:	(bad)  
  43a47b:	and    BYTE PTR [rdx+0x6c],ah
  43a47e:	(bad)  
  43a47f:	outs   dx,BYTE PTR ds:[rsi]
  43a480:	imul   esp,DWORD PTR [rax],0x63
  43a483:	(bad)  
  43a484:	outs   dx,BYTE PTR ds:[rsi]
  43a485:	jbe    0x43a4e8
  43a487:	jae    0x43a4b7
  43a489:	or     al,BYTE PTR [rax]
  43a48b:	add    BYTE PTR [rax],al
  43a48d:	add    BYTE PTR [rax],al
  43a48f:	add    BYTE PTR [rdx],cl
  43a491:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43a493:	je     0x43a4fa
  43a495:	jb     0x43a4b7
  43a497:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43a49a:	ins    DWORD PTR es:[rdi],dx
  43a49b:	(bad)  
  43a49c:	outs   dx,BYTE PTR ds:[rsi]
  43a49d:	cmp    ah,BYTE PTR fs:[rax]
  43a4a0:	cmp    al,0x74
  43a4a2:	(bad)  
  43a4a3:	jb     0x43a50c
  43a4a5:	gs je  0x43a4e6
  43a4a8:	jl     0x43a50b
  43a4aa:	ins    BYTE PTR es:[rdi],dx
  43a4ab:	ins    BYTE PTR es:[rdi],dx
  43a4ac:	and    BYTE PTR [rsp+rsi*2],bh
  43a4af:	imul   ebp,DWORD PTR [rbp+0x65],0x312d7c3e
  43a4b6:	and    BYTE PTR [rbx+riz*2],bh
  43a4b9:	outs   dx,DWORD PTR ds:[rsi]
  43a4ba:	ins    DWORD PTR es:[rdi],dx
  43a4bb:	ins    DWORD PTR es:[rdi],dx
  43a4bc:	(bad)  
  43a4bd:	outs   dx,BYTE PTR ds:[rsi]
  43a4be:	fs ds pop rbx
  43a4c1:	and    BYTE PTR [rcx+riz*2],bh
  43a4c4:	jb     0x43a52d
  43a4c6:	jne    0x43a535
  43a4c8:	outs   dx,BYTE PTR gs:[rsi]
  43a4ca:	je     0x43a50a
  43a4cc:	pop    rbp
  43a4cd:	or     al,BYTE PTR [rax]
  43a4cf:	and    eax,0x5e5b3336
  43a4d4:	and    BYTE PTR [rbp+0x20],bl
  43a4d7:	and    eax,0x2520666c
  43a4dc:	xor    dh,BYTE PTR [rip+0x205e5b35]        # 0x20a20017
  43a4e2:	pop    rbp
  43a4e3:	and    BYTE PTR [rip+0x5b353532],ah        # 0x5b78da1b
  43a4e9:	pop    rsi
  43a4ea:	or     bl,BYTE PTR [rbp+0x0]
  43a4ed:	add    BYTE PTR [rax],al
  43a4ef:	add    BYTE PTR [rax+0x72],dl
  43a4f2:	outs   dx,DWORD PTR ds:[rsi]
  43a4f3:	movsxd esp,DWORD PTR [rbp+0x73]
  43a4f6:	jae    0x43a561
  43a4f8:	outs   dx,BYTE PTR ds:[rsi]
  43a4f9:	and    BYTE PTR [ebx+0x6f],ah
  43a4fd:	ins    DWORD PTR es:[rdi],dx
  43a4fe:	ins    DWORD PTR es:[rdi],dx
  43a4ff:	(bad)  
  43a500:	outs   dx,BYTE PTR ds:[rsi]
  43a501:	and    BYTE PTR fs:[rcx+riz*2+0x72],dh
  43a506:	addr32 gs je 0x43a544
  43a50a:	and    eax,0x69742073
  43a50f:	ins    DWORD PTR es:[rdi],dx
  43a510:	cmp    ah,BYTE PTR gs:[rip+0x6f632066]        # 0x6fa6c57d
  43a517:	ins    DWORD PTR es:[rdi],dx
  43a518:	ins    DWORD PTR es:[rdi],dx
  43a519:	(bad)  
  43a51a:	outs   dx,BYTE PTR ds:[rsi]
  43a51b:	cmp    ah,BYTE PTR fs:[rip+0x72612073]        # 0x72a4c595
  43a522:	cmp    ah,BYTE PTR [eip+0x43000073]        # 0x4343a59c
  43a529:	outs   dx,DWORD PTR ds:[rsi]
  43a52a:	ins    DWORD PTR es:[rdi],dx
  43a52b:	ins    DWORD PTR es:[rdi],dx
  43a52c:	(bad)  
  43a52d:	outs   dx,BYTE PTR ds:[rsi]
  43a52e:	and    BYTE PTR fs:[rdx+0x65],dh
  43a532:	jo     0x43a5a0
  43a534:	jns    0x43a556
  43a536:	outs   dx,WORD PTR ds:[rsi]
  43a538:	jb     0x43a55a
  43a53a:	jae    0x43a5b0
  43a53c:	jb     0x43a5a3
  43a53e:	(bad)  
  43a53f:	ins    DWORD PTR es:[rdi],dx
  43a540:	and    BYTE PTR [rip+0x72203a64],ah        # 0x7263dfaa
  43a546:	gs je  0x43a583
  43a549:	and    eax,0x65722064
  43a54e:	jae    0x43a58a
  43a550:	or     ah,BYTE PTR [rip+0x73]        # 0x43a5c9
  43a556:	add    BYTE PTR [rax],al
  43a558:	push   rcx
  43a559:	jne    0x43a5c0
  43a55b:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f6320
  43a562:	ins    DWORD PTR es:[rdi],dx
  43a563:	(bad)  
  43a564:	outs   dx,BYTE PTR ds:[rsi]
  43a565:	fs jae 0x43a588
  43a568:	outs   dx,DWORD PTR ds:[rsi]
  43a569:	outs   dx,BYTE PTR ds:[rsi]
  43a56a:	ins    BYTE PTR es:[rdi],dx
  43a56b:	jns    0x43a58d
  43a56d:	outs   dx,DWORD PTR ds:[rsi]
  43a56e:	outs   dx,BYTE PTR ds:[rsi]
  43a56f:	and    BYTE PTR [rsi+0x69],ah
  43a572:	ins    BYTE PTR es:[rdi],dx
  43a573:	je     0x43a5da
  43a575:	jb     0x43a5ea
  43a577:	and    BYTE PTR [rbx+0x75],dh
  43a57a:	jo     0x43a5ec
  43a57c:	outs   dx,DWORD PTR ds:[rsi]
  43a57d:	jb     0x43a5f3
  43a57f:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  43a586:	and    BYTE PTR [rbx+0x70],dh
  43a589:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a58d:	imul   esp,DWORD PTR [rbx+0x20],0x6d6d6f63
  43a594:	(bad)  
  43a595:	outs   dx,BYTE PTR ds:[rsi]
  43a596:	and    BYTE PTR fs:[rcx+0x73],ch
  43a59a:	and    BYTE PTR [rbp+0x6e],dh
  43a59d:	jae    0x43a614
  43a59f:	jo     0x43a611
  43a5a1:	outs   dx,DWORD PTR ds:[rsi]
  43a5a2:	jb     0x43a618
  43a5a4:	gs or  al,BYTE PTR fs:[rax]
  43a5a8:	push   rcx
  43a5a9:	jne    0x43a610
  43a5ab:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f6320
  43a5b2:	ins    DWORD PTR es:[rdi],dx
  43a5b3:	(bad)  
  43a5b4:	outs   dx,BYTE PTR ds:[rsi]
  43a5b5:	and    BYTE PTR fs:[rsi+0x61],ah
  43a5b9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  43a5c1:	push   0x72726520
  43a5c6:	outs   dx,DWORD PTR ds:[rsi]
  43a5c7:	jb     0x43a5e9
  43a5c9:	and    eax,0xa73
  43a5ce:	add    BYTE PTR [rax],al
  43a5d0:	push   rax
  43a5d1:	(bad)  
  43a5d2:	jb     0x43a647
  43a5d4:	and    BYTE PTR gs:[rbp+0x72],ah
  43a5d8:	jb     0x43a649
  43a5da:	jb     0x43a608
  43a5dc:	and    BYTE PTR [rcx+0x74],ah
  43a5df:	and    BYTE PTR [rbp+riz*2+0x61],ch
  43a5e3:	jae    0x43a659
  43a5e5:	and    BYTE PTR [rbx],dh
  43a5e7:	and    BYTE PTR [rcx+0x72],ah
  43a5ea:	addr32 jne 0x43a65a
  43a5ed:	outs   dx,BYTE PTR gs:[rsi]
  43a5ef:	je     0x43a664
  43a5f1:	and    BYTE PTR [rdi+0x65],dh
  43a5f4:	jb     0x43a65b
  43a5f6:	and    BYTE PTR [rbp+0x78],ah
  43a5f9:	jo     0x43a660
  43a5fb:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  43a5ff:	sub    al,0x20
  43a601:	outs   dx,DWORD PTR ds:[rsi]
  43a602:	outs   dx,BYTE PTR ds:[rsi]
  43a603:	ins    BYTE PTR es:[rdi],dx
  43a604:	jns    0x43a626
  43a606:	and    eax,0x69672064
  43a60b:	jbe    0x43a672
  43a60d:	outs   dx,BYTE PTR ds:[rsi]
  43a60e:	and    BYTE PTR [rcx+0x6e],ch
  43a611:	and    BYTE PTR [rbx+0x74],dh
  43a614:	jb     0x43a67f
  43a616:	outs   dx,BYTE PTR ds:[rsi]
  43a617:	and    BYTE PTR [edi],ah
  43a61a:	and    eax,0xa2773
  43a61f:	gs jb  0x43a694
  43a622:	outs   dx,DWORD PTR ds:[rsi]
  43a623:	jb     0x43a645
  43a625:	jo     0x43a688
  43a627:	jb     0x43a69c
  43a629:	imul   ebp,DWORD PTR [rsi+0x67],0x62656420
  43a630:	jne    0x43a699
  43a632:	and    BYTE PTR [rsi+0x61],dh
  43a635:	ins    BYTE PTR es:[rdi],dx
  43a636:	jne    0x43a69d
  43a638:	or     al,BYTE PTR [rax]
  43a63a:	and    eax,0x65640064
  43a63f:	(bad)  
  43a640:	jne    0x43a6a9
  43a642:	cmp    eax,0xa6425
  43a647:	add    BYTE PTR [rbx+0x65],ch
  43a64a:	jns    0x43a66c
  43a64c:	and    BYTE PTR [rax],ah
  43a64e:	and    BYTE PTR [rsi+0x75],ah
  43a651:	outs   dx,BYTE PTR ds:[rsi]
  43a652:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a656:	outs   dx,BYTE PTR ds:[rsi]
  43a657:	or     bh,BYTE PTR [rdi]
  43a659:	and    BYTE PTR [rax],ah
  43a65b:	and    BYTE PTR [rax],ah
  43a65d:	and    BYTE PTR [rax],ah
  43a65f:	jae    0x43a6c9
  43a661:	outs   dx,DWORD PTR ds:[rsi]
  43a662:	ja     0x43a684
  43a664:	je     0x43a6ce
  43a666:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  43a66d:	or     ch,BYTE PTR [rbx]
  43a66f:	and    BYTE PTR [rax],ah
  43a671:	and    BYTE PTR [rax],ah
  43a673:	and    BYTE PTR [rax],ah
  43a675:	imul   ebp,DWORD PTR [rsi+0x63],0x73616572
  43a67c:	and    BYTE PTR gs:[rsi+0x65],dh
  43a680:	jb     0x43a6e4
  43a682:	outs   dx,DWORD PTR ds:[rsi]
  43a683:	jae    0x43a6ee
  43a685:	je     0x43a700
  43a687:	or     ch,BYTE PTR [rip+0x20202020]        # 0x2063c6ad
  43a68d:	and    BYTE PTR [rax],ah
  43a68f:	fs movsxd esi,DWORD PTR gs:[rdx+0x65]
  43a694:	(bad)  
  43a695:	jae    0x43a6fc
  43a697:	and    BYTE PTR [rsi+0x65],dh
  43a69a:	jb     0x43a6fe
  43a69c:	outs   dx,DWORD PTR ds:[rsi]
  43a69d:	jae    0x43a708
  43a69f:	je     0x43a71a
  43a6a1:	or     ah,BYTE PTR [rbx+0x20]
  43a6a4:	and    BYTE PTR [rax],ah
  43a6a6:	and    BYTE PTR [rax],ah
  43a6a8:	and    BYTE PTR [rbx+0x65],dl
  43a6ab:	outs   dx,BYTE PTR ds:[rsi]
  43a6ac:	and    BYTE PTR fs:[rbx+0x6f],ah
  43a6b0:	ins    DWORD PTR es:[rdi],dx
  43a6b1:	ins    DWORD PTR es:[rdi],dx
  43a6b2:	(bad)  
  43a6b3:	outs   dx,BYTE PTR ds:[rsi]
  43a6b4:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  43a6b9:	imul   si,WORD PTR [rdx+0x73],0x2074
  43a6bf:	ins    DWORD PTR es:[rdi],dx
  43a6c0:	(bad)  
  43a6c1:	je     0x43a726
  43a6c3:	push   0x20676e69
  43a6c8:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2072
  43a6cf:	jae    0x43a746
  43a6d1:	jo     0x43a743
  43a6d3:	outs   dx,DWORD PTR ds:[rsi]
  43a6d4:	jb     0x43a74a
  43a6d6:	imul   ebp,DWORD PTR [rsi+0x67],0xa746920
  43a6dd:	rex.XB and BYTE PTR [r8],spl
  43a6e0:	and    BYTE PTR [rax],ah
  43a6e2:	and    BYTE PTR [rax],ah
  43a6e4:	push   rbx
  43a6e5:	outs   dx,BYTE PTR gs:[rsi]
  43a6e7:	fs (bad) 
  43a6e9:	push   rcx
  43a6ea:	jne    0x43a751
  43a6ec:	and    BYTE PTR [rbx+0x6f],ah
  43a6ef:	ins    DWORD PTR es:[rdi],dx
  43a6f0:	ins    DWORD PTR es:[rdi],dx
  43a6f1:	(bad)  
  43a6f2:	outs   dx,BYTE PTR ds:[rsi]
  43a6f3:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  43a6f8:	(bad)  
  43a6f9:	ins    BYTE PTR es:[rdi],dx
  43a6fa:	ins    BYTE PTR es:[rdi],dx
  43a6fb:	and    BYTE PTR [rbp+0x61],ch
  43a6fe:	je     0x43a763
  43a700:	push   0x20676e69
  43a705:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  43a70c:	or     al,BYTE PTR [rax+riz*1+0x20]
  43a710:	and    BYTE PTR [rax],ah
  43a712:	and    BYTE PTR [rax],ah
  43a714:	movsxd edi,DWORD PTR [rcx+0x63]
  43a717:	ins    BYTE PTR es:[rdi],dx
  43a718:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  43a71d:	outs   dx,DWORD PTR ds:[rsi]
  43a71e:	jne    0x43a787
  43a720:	push   0x61766120
  43a725:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  43a72d:	gs (bad) 
  43a72f:	jne    0x43a798
  43a731:	and    BYTE PTR [rbp+0x6f],ch
  43a734:	fs gs jae 0x43a742
  43a738:	push   0x20202020
  43a73d:	and    BYTE PTR [rax],ah
  43a73f:	fs jne 0x43a7af
  43a742:	jo     0x43a764
  43a744:	jo     0x43a7a7
  43a746:	movsxd ebp,DWORD PTR [rbx+0x65]
  43a749:	je     0x43a7be
  43a74b:	(bad)  
  43a74c:	push   0x70207865
  43a751:	jb     0x43a7b8
  43a753:	jae    0x43a7c8
  43a755:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43a759:	movsxd edi,DWORD PTR [rcx+0x63]
  43a75c:	ins    BYTE PTR es:[rdi],dx
  43a75d:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  43a762:	outs   dx,DWORD PTR ds:[rsi]
  43a763:	jne    0x43a7cc
  43a765:	push   0x65687420
  43a76a:	and    BYTE PTR [rbx],dh
  43a76c:	and    BYTE PTR [rbx+0x74],dh
  43a76f:	(bad)  
  43a770:	je     0x43a7d7
  43a772:	jae    0x43a77e
  43a774:	jno    0x43a796
  43a776:	and    BYTE PTR [rax],ah
  43a778:	and    BYTE PTR [rax],ah
  43a77a:	and    BYTE PTR [rcx+0x75],dh
  43a77d:	imul   esi,DWORD PTR [rdx+rcx*1+0x73],0x20202020
  43a785:	and    BYTE PTR [rax],ah
  43a787:	push   rbx
  43a788:	push   0x5120776f
  43a78d:	push   rax
  43a78e:	and    BYTE PTR [rax+0x69],ch
  43a791:	jae    0x43a807
  43a793:	outs   dx,DWORD PTR ds:[rsi]
  43a794:	addr32 jb 0x43a7f8
  43a797:	ins    DWORD PTR es:[rdi],dx
  43a798:	or     al,BYTE PTR [rax]
  43a79a:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43a79f:	gs pop rdi
  43a7a1:	jbe    0x43a80c
  43a7a3:	fs outs dx,DWORD PTR gs:[rsi]
  43a7a6:	and    BYTE PTR [rip+0x64252e64],ah        # 0x6468d610
  43a7ac:	add    BYTE PTR [rax],al
  43a7ae:	add    BYTE PTR [rax],al
  43a7b0:	push   0x625f7361
  43a7b5:	pop    rdi
  43a7b6:	data16 jb 0x43a81a
  43a7b9:	ins    DWORD PTR es:[rdi],dx
  43a7ba:	gs jae 0x43a7dd
  43a7bd:	imul   esi,DWORD PTR [rbx+0x20],0x6772616c
  43a7c4:	gs jb  0x43a7e7
  43a7c7:	imul   ebp,DWORD PTR [rsi+0x20],0x6f636564
  43a7ce:	fs gs jb 0x43a7f2
  43a7d2:	je     0x43a83c
  43a7d4:	(bad)  
  43a7d5:	outs   dx,BYTE PTR ds:[rsi]
  43a7d6:	and    BYTE PTR [rbp+riz*2+0x6d],ah
  43a7da:	jne    0x43a854
  43a7dc:	gs jb  0x43a7ff
  43a7df:	and    eax,0x203e2064
  43a7e4:	and    eax,0x490a2e64
  43a7e9:	data16 and BYTE PTR [rcx+0x6f],bh
  43a7ed:	jne    0x43a80f
  43a7ef:	ja     0x43a852
  43a7f1:	outs   dx,BYTE PTR ds:[rsi]
  43a7f2:	je     0x43a814
  43a7f4:	je     0x43a865
  43a7f6:	and    BYTE PTR [rax+0x65],ch
  43a7f9:	ins    BYTE PTR es:[rdi],dx
  43a7fa:	jo     0x43a828
  43a7fc:	and    BYTE PTR [rbp+0x70],dh
  43a7ff:	ins    BYTE PTR es:[rdi],dx
  43a800:	outs   dx,DWORD PTR ds:[rsi]
  43a801:	(bad)  
  43a802:	and    BYTE PTR fs:[rcx+0x20],ah
  43a806:	jae    0x43a869
  43a808:	ins    DWORD PTR es:[rdi],dx
  43a809:	jo     0x43a877
  43a80b:	and    BYTE PTR gs:[rdi+0x66],ch
  43a80f:	and    BYTE PTR [rax+rbp*2+0x69],dh
  43a813:	jae    0x43a835
  43a815:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  43a81c:	and    BYTE PTR [rsi+0x74],ah
  43a81f:	jo     0x43a85b
  43a821:	(bad)  
  43a822:	(bad)  
  43a823:	jne    0x43a895
  43a825:	ins    BYTE PTR es:[rdi],dx
  43a826:	outs   dx,DWORD PTR ds:[rsi]
  43a827:	(bad)  
  43a828:	fs cs data16 ins WORD PTR es:[rdi],dx
  43a82d:	jo     0x43a894
  43a82f:	outs   dx,DWORD PTR cs:[esi]
  43a832:	jb     0x43a89b
  43a834:	(bad)  
  43a835:	imul   ebp,DWORD PTR [rsi+0x63],0x6e696d6f
  43a83c:	addr32 (bad) 
  43a83e:	and    BYTE PTR [rcx+0x6e],ah
  43a841:	and    BYTE PTR fs:[rbx+0x6f],ah
  43a845:	outs   dx,BYTE PTR ds:[rsi]
  43a846:	je     0x43a8a9
  43a848:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  43a84c:	push   0x66662065
  43a851:	ins    DWORD PTR es:[rdi],dx
  43a852:	jo     0x43a8b9
  43a854:	addr32 sub eax,0x65766564
  43a85a:	ins    BYTE PTR es:[rdi],dx
  43a85b:	and    BYTE PTR [rbp+0x61],ch
  43a85e:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x696c2067
  43a866:	jae    0x43a8dc
  43a868:	and    BYTE PTR cs:[rax],ch
  43a86b:	data16 ins WORD PTR es:[rdi],dx
  43a86e:	jo     0x43a8d5
  43a870:	addr32 sub eax,0x65766564
  43a876:	ins    BYTE PTR es:[rdi],dx
  43a877:	rex
  43a878:	data16 ins WORD PTR es:[rdi],dx
  43a87b:	jo     0x43a8e2
  43a87d:	outs   dx,DWORD PTR cs:[esi]
  43a880:	jb     0x43a8e9
  43a882:	sub    DWORD PTR [rax],eax
  43a884:	add    BYTE PTR [rax],al
  43a886:	add    BYTE PTR [rax],al
  43a888:	rex.RX jb 0x43a8ec
  43a88b:	ins    DWORD PTR es:[rdi],dx
  43a88c:	and    BYTE PTR gs:[rax+0x61],dh
  43a890:	jb     0x43a8f3
  43a892:	ins    DWORD PTR es:[rdi],dx
  43a893:	gs je  0x43a8fb
  43a896:	jb     0x43a90b
  43a898:	and    BYTE PTR [rbp+0x69],ch
  43a89b:	jae    0x43a90a
  43a89d:	(bad)  
  43a89e:	je     0x43a903
  43a8a0:	push   0x6e6f6320
  43a8a5:	je     0x43a90c
  43a8a7:	js     0x43a91d
  43a8a9:	and    BYTE PTR [rip+0x64252c64],ah        # 0x6468d513
  43a8af:	sub    al,0x25
  43a8b1:	and    BYTE PTR fs:[rcx],ah
  43a8b4:	cmp    eax,0x2c642520
  43a8b9:	and    eax,0x64252c64
  43a8be:	or     al,BYTE PTR [rax]
  43a8c0:	rex.WRX
  43a8c1:	rex.WRXB push r8
  43a8c3:	push   rsp
  43a8c4:	push   rbx
  43a8c5:	add    BYTE PTR [rip+0x67362e],ah        # 0xaadef9
  43a8cb:	and    eax,0x646c6c
  43a8d0:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43a8d5:	gs jb  0x43a8f8
  43a8d8:	sub    eax,0x7369203e
  43a8dd:	je     0x43a93e
  43a8df:	imul   ebp,DWORD PTR [rsi+0x64],0x253a7865
  43a8e6:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  43a8eb:	cmp    dh,BYTE PTR gs:[rsi+0x69]
  43a8ef:	fs outs dx,DWORD PTR gs:[rsi]
  43a8f2:	and    BYTE PTR [rsi+0x72],ah
  43a8f5:	(bad)  
  43a8f6:	ins    DWORD PTR es:[rdi],dx
  43a8f7:	gs pop rdi
  43a8f9:	jo     0x43a96f
  43a8fb:	jae    0x43a937
  43a8fd:	and    eax,0x72662073
  43a902:	(bad)  
  43a903:	ins    DWORD PTR es:[rdi],dx
  43a904:	gs pop rdi
  43a906:	jo     0x43a97c
  43a908:	jae    0x43a969
  43a90a:	je     0x43a975
  43a90c:	ins    DWORD PTR es:[rdi],dx
  43a90d:	cmp    ah,BYTE PTR gs:[rip+0x65622073]        # 0x65a5c987
  43a914:	jae    0x43a98a
  43a916:	pop    rdi
  43a917:	data16 outs dx,WORD PTR gs:[rsi]
  43a91b:	jb     0x43a991
  43a91d:	pop    rdi
  43a91e:	je     0x43a993
  43a920:	cmp    ah,BYTE PTR [rip+0x20646c6c]        # 0x20a81592
  43a926:	(bad)  
  43a927:	gs jae 0x43a99e
  43a92a:	pop    rdi
  43a92b:	data16 outs dx,WORD PTR gs:[rsi]
  43a92f:	jb     0x43a9a5
  43a931:	pop    rdi
  43a932:	je     0x43a9a7
  43a934:	pop    rdi
  43a935:	je     0x43a9a0
  43a937:	ins    DWORD PTR es:[rdi],dx
  43a938:	cmp    ah,BYTE PTR gs:[rip+0x656b2073]        # 0x65aec9b2
  43a93f:	jns    0x43a9a7
  43a941:	jb     0x43a9a4
  43a943:	ins    DWORD PTR es:[rdi],dx
  43a944:	cmp    ah,BYTE PTR gs:[rip+0x72662064]        # 0x72a9c9af
  43a94b:	(bad)  
  43a94c:	ins    DWORD PTR es:[rdi],dx
  43a94d:	gs pop rdi
  43a94f:	je     0x43a9ca
  43a951:	jo     0x43a9b8
  43a953:	cmp    ah,BYTE PTR [rip+0x69742064]        # 0x69b7c9bd
  43a959:	ins    DWORD PTR es:[rdi],dx
  43a95a:	gs pop rdi
  43a95c:	(bad)  
  43a95e:	jae    0x43a9c5
  43a960:	cmp    ah,BYTE PTR [rip+0x64252f64]        # 0x6468d8ca
  43a966:	or     al,BYTE PTR [rax]
  43a968:	jae    0x43a9cb
  43a96a:	ins    DWORD PTR es:[rdi],dx
  43a96b:	jo     0x43a9d9
  43a96d:	gs pop rdi
  43a96f:	(bad)  
  43a970:	jae    0x43a9e2
  43a972:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x72]
  43a977:	(bad)  
  43a978:	je     0x43a9e3
  43a97a:	outs   dx,DWORD PTR ds:[rsi]
  43a97b:	add    BYTE PTR [rax],al
  43a97d:	add    BYTE PTR [rax],al
  43a97f:	add    BYTE PTR [rbp+0x72],al
  43a982:	jb     0x43a9f3
  43a984:	jb     0x43a9a6
  43a986:	jb     0x43a9ed
  43a988:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  43a98f:	imul   edi,DWORD PTR [rdx+0x69],0x6620676e
  43a996:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0xa217372
  43a99e:	add    BYTE PTR [rax],al
  43a9a0:	rex.RX (bad) 
  43a9a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43a9aa:	imul   ebp,DWORD PTR [rsi+0x6a],0x20746365
  43a9b1:	data16 jb 0x43aa15
  43a9b4:	ins    DWORD PTR es:[rdi],dx
  43a9b5:	and    BYTE PTR gs:[rcx+0x6e],ch
  43a9b9:	je     0x43aa2a
  43a9bb:	and    BYTE PTR [rsi+0x69],ah
  43a9be:	ins    BYTE PTR es:[rdi],dx
  43a9bf:	je     0x43aa26
  43a9c1:	jb     0x43a9e3
  43a9c3:	outs   dx,BYTE PTR ds:[rsi]
  43a9c4:	gs je  0x43aa3e
  43a9c7:	outs   dx,DWORD PTR ds:[rsi]
  43a9c8:	jb     0x43aa35
  43a9ca:	cmp    ah,BYTE PTR [rax]
  43a9cc:	and    eax,0x49000a73
  43a9d1:	outs   dx,BYTE PTR ds:[rsi]
  43a9d2:	jo     0x43aa49
  43a9d4:	je     0x43a9f6
  43a9d6:	jae    0x43aa4c
  43a9d8:	jb     0x43aa3f
  43a9da:	(bad)  
  43a9db:	ins    DWORD PTR es:[rdi],dx
  43a9dc:	and    BYTE PTR [rbx],ah
  43a9de:	and    eax,0x64253a64
  43a9e3:	and    BYTE PTR [rsi+0x72],ah
  43a9e6:	(bad)  
  43a9e7:	ins    DWORD PTR es:[rdi],dx
  43a9e8:	and    BYTE PTR gs:[rbx+0x68],ah
  43a9ec:	(bad)  
  43a9ed:	outs   dx,BYTE PTR ds:[rsi]
  43a9ee:	gs and BYTE PTR fs:[esi+0x72],ah
  43a9f4:	outs   dx,DWORD PTR ds:[rsi]
  43a9f5:	ins    DWORD PTR es:[rdi],dx
  43a9f6:	and    BYTE PTR [rbx+0x69],dh
  43a9f9:	jp     0x43aa60
  43a9fb:	cmp    ah,BYTE PTR [rip+0x64257864]        # 0x64692265
  43aa01:	and    BYTE PTR [rsi+0x6d],ah
  43aa04:	je     0x43aa40
  43aa06:	and    eax,0x6f742073
  43aa0b:	and    BYTE PTR [rbx+0x69],dh
  43aa0e:	jp     0x43aa75
  43aa10:	cmp    ah,BYTE PTR [rip+0x64257864]        # 0x6469227a
  43aa16:	and    BYTE PTR [rsi+0x6d],ah
  43aa19:	je     0x43aa55
  43aa1b:	and    eax,0x64000a73
  43aa20:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43aa24:	gs pop rdi
  43aa26:	(bad)  
  43aa27:	jne    0x43aa8d
  43aa29:	imul   ebp,DWORD PTR [rdi+0x20],0x252e6425
  43aa30:	add    BYTE PTR fs:[rbx+0x61],dl
  43aa34:	ins    DWORD PTR es:[rdi],dx
  43aa35:	jo     0x43aaa3
  43aa37:	and    BYTE PTR gs:[rdx+0x61],dh
  43aa3b:	je     0x43aaa2
  43aa3d:	and    BYTE PTR [rip+0x6e692064],ah        # 0x6eaccaa7
  43aa43:	jbe    0x43aaa6
  43aa45:	ins    BYTE PTR es:[rdi],dx
  43aa46:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x0
  43aa4e:	add    BYTE PTR [rax],al
  43aa50:	rex.RXB jne 0x43aab8
  43aa53:	jae    0x43aac8
  43aa55:	gs and BYTE PTR fs:[rbx+0x68],al
  43aa5a:	(bad)  
  43aa5b:	outs   dx,BYTE PTR ds:[rsi]
  43aa5c:	outs   dx,BYTE PTR ds:[rsi]
  43aa5d:	gs ins BYTE PTR es:[rdi],dx
  43aa5f:	and    BYTE PTR [rcx+riz*2+0x79],cl
  43aa63:	outs   dx,DWORD PTR ds:[rsi]
  43aa64:	jne    0x43aada
  43aa66:	and    BYTE PTR [rsi+0x6f],ah
  43aa69:	jb     0x43aa8b
  43aa6b:	and    BYTE PTR [rcx+0x6e],cl
  43aa6e:	jo     0x43aae5
  43aa70:	je     0x43aa92
  43aa72:	push   rbx
  43aa73:	je     0x43aae7
  43aa75:	gs (bad) 
  43aa77:	ins    DWORD PTR es:[rdi],dx
  43aa78:	and    BYTE PTR [rbx],ah
  43aa7a:	and    eax,0x64252e64
  43aa7f:	and    BYTE PTR [rdx],bh
  43aa81:	and    BYTE PTR [rip+0xa73],ah        # 0x43b4fa
  43aa87:	add    BYTE PTR [rbp+0x6e],dl
  43aa8a:	(bad)  
  43aa8b:	(bad)  
  43aa8c:	ins    BYTE PTR es:[rdi],dx
  43aa8d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  43aa92:	imul   bp,WORD PTR [rsi+0x64],0x6420
  43aa98:	gs data16 (bad) 
  43aa9b:	jne    0x43ab09
  43aa9d:	je     0x43aabf
  43aa9f:	movsxd ebp,DWORD PTR [rax+0x61]
  43aaa2:	outs   dx,BYTE PTR ds:[rsi]
  43aaa3:	outs   dx,BYTE PTR ds:[rsi]
  43aaa4:	gs ins BYTE PTR es:[rdi],dx
  43aaa6:	and    BYTE PTR [rcx+riz*2+0x79],ch
  43aaaa:	outs   dx,DWORD PTR ds:[rsi]
  43aaab:	jne    0x43ab21
  43aaad:	and    BYTE PTR [rsi+0x6f],ah
  43aab0:	jb     0x43aad2
  43aab2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43aab4:	jo     0x43ab2b
  43aab6:	je     0x43aad8
  43aab8:	push   rbx
  43aab9:	je     0x43ab2d
  43aabb:	gs (bad) 
  43aabd:	ins    DWORD PTR es:[rdi],dx
  43aabe:	and    BYTE PTR [rbx],ah
  43aac0:	and    eax,0x64252e64
  43aac5:	or     al,BYTE PTR [rax]
  43aac7:	add    BYTE PTR [rcx+0x6e],cl
  43aaca:	jo     0x43ab41
  43aacc:	je     0x43aaee
  43aace:	jae    0x43ab44
  43aad0:	jb     0x43ab37
  43aad2:	(bad)  
  43aad3:	ins    DWORD PTR es:[rdi],dx
  43aad4:	and    BYTE PTR [rbx],ah
  43aad6:	and    eax,0x64253a64
  43aadb:	and    BYTE PTR [rsi+0x72],ah
  43aade:	(bad)  
  43aadf:	ins    DWORD PTR es:[rdi],dx
  43aae0:	and    BYTE PTR gs:[rbx+0x68],ah
  43aae4:	(bad)  
  43aae5:	outs   dx,BYTE PTR ds:[rsi]
  43aae6:	gs and BYTE PTR fs:[esi+0x72],ah
  43aaec:	outs   dx,DWORD PTR ds:[rsi]
  43aaed:	ins    DWORD PTR es:[rdi],dx
  43aaee:	and    BYTE PTR [rdx+0x61],dh
  43aaf1:	je     0x43ab58
  43aaf3:	cmp    ah,BYTE PTR [rip+0x6d662064]        # 0x6da9cb5d
  43aaf9:	je     0x43ab35
  43aafb:	and    eax,0x68632073
  43ab00:	cmp    ah,BYTE PTR [rip+0x68632064]        # 0x68a6cb6a
  43ab06:	ins    BYTE PTR es:[rdi],dx
  43ab07:	cmp    ah,BYTE PTR [rip+0x6f742073]        # 0x6fb7cb80
  43ab0d:	and    BYTE PTR [rdx+0x61],dh
  43ab10:	je     0x43ab77
  43ab12:	cmp    ah,BYTE PTR [rip+0x6d662064]        # 0x6da9cb7c
  43ab18:	je     0x43ab54
  43ab1a:	and    eax,0x68632073
  43ab1f:	cmp    ah,BYTE PTR [rip+0x68632064]        # 0x68a6cb89
  43ab25:	ins    BYTE PTR es:[rdi],dx
  43ab26:	cmp    ah,BYTE PTR [rip+0x63000a73]        # 0x6343b59f
  43ab2c:	outs   dx,DWORD PTR ds:[rsi]
  43ab2d:	jo     0x43aba8
  43ab2f:	add    BYTE PTR [rsi+0x61],al
  43ab32:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43ab3a:	outs   dx,DWORD PTR ds:[rsi]
  43ab3b:	jo     0x43aba2
  43ab3d:	outs   dx,BYTE PTR ds:[rsi]
  43ab3e:	and    BYTE PTR [rdx+0x69],ah
  43ab41:	je     0x43abb6
  43ab43:	je     0x43abb7
  43ab45:	gs (bad) 
  43ab47:	ins    DWORD PTR es:[rdi],dx
  43ab48:	and    BYTE PTR [rsi+0x69],ah
  43ab4b:	ins    BYTE PTR es:[rdi],dx
  43ab4c:	je     0x43abb3
  43ab4e:	jb     0x43ab70
  43ab50:	and    eax,0x6f662073
  43ab55:	jb     0x43ab77
  43ab57:	jae    0x43abcd
  43ab59:	jb     0x43abc0
  43ab5b:	(bad)  
  43ab5c:	ins    DWORD PTR es:[rdi],dx
  43ab5d:	and    BYTE PTR [rip+0x69772064],ah        # 0x69bacbc7
  43ab63:	je     0x43abcd
  43ab65:	and    BYTE PTR [rbx+0x6f],ah
  43ab68:	fs movsxd esp,DWORD PTR gs:[rax]
  43ab6c:	and    eax,0x49000073
  43ab71:	outs   dx,BYTE PTR ds:[rsi]
  43ab72:	jbe    0x43abd5
  43ab74:	ins    BYTE PTR es:[rdi],dx
  43ab75:	imul   esp,DWORD PTR [rax+riz*1+0x44],0x203a5354
  43ab7d:	and    eax,0x20646c6c
  43ab82:	push   rax
  43ab83:	push   rsp
  43ab84:	push   rbx
  43ab85:	cmp    ah,BYTE PTR [rax]
  43ab87:	and    eax,0x20646c6c
  43ab8c:	imul   ebp,DWORD PTR [rsi+0x20],0x7074756f
  43ab93:	jne    0x43ac09
  43ab95:	and    BYTE PTR [rbx+0x74],dh
  43ab98:	jb     0x43abff
  43ab9a:	(bad)  
  43ab9b:	ins    DWORD PTR es:[rdi],dx
  43ab9c:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468e606
  43aba2:	sub    al,0x20
  43aba4:	jb     0x43ac0b
  43aba6:	jo     0x43ac14
  43aba8:	(bad)  
  43aba9:	movsxd ebp,DWORD PTR [rcx+0x6e]
  43abac:	and    BYTE PTR [edx+0x79],ah
  43abb0:	and    BYTE PTR [rdi+0x75],ah
  43abb3:	gs jae 0x43ac29
  43abb6:	or     al,BYTE PTR [rax]
  43abb8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43abba:	outs   dx,BYTE PTR ds:[rsi]
  43abbb:	sub    eax,0x6f6e6f6d
  43abc0:	je     0x43ac31
  43abc2:	outs   dx,BYTE PTR ds:[rsi]
  43abc3:	outs   dx,DWORD PTR ds:[rsi]
  43abc4:	jne    0x43ac39
  43abc6:	and    BYTE PTR [rsp+rdx*2+0x53],al
  43abca:	and    BYTE PTR [rcx+0x6e],ch
  43abcd:	and    BYTE PTR [rdi+0x75],ch
  43abd0:	je     0x43ac42
  43abd2:	jne    0x43ac48
  43abd4:	and    BYTE PTR [rbx+0x74],dh
  43abd7:	jb     0x43ac3e
  43abd9:	(bad)  
  43abda:	ins    DWORD PTR es:[rdi],dx
  43abdb:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468e645
  43abe1:	cmp    esp,DWORD PTR [rax]
  43abe3:	jo     0x43ac57
  43abe5:	gs jbe 0x43ac51
  43abe8:	outs   dx,DWORD PTR ds:[rsi]
  43abe9:	jne    0x43ac5e
  43abeb:	cmp    ah,BYTE PTR [rax]
  43abed:	and    eax,0x2c646c6c
  43abf2:	and    BYTE PTR [rbx+0x75],ah
  43abf5:	jb     0x43ac69
  43abf7:	outs   dx,BYTE PTR gs:[rsi]
  43abf9:	je     0x43ac35
  43abfb:	and    BYTE PTR [rip+0x3b646c6c],ah        # 0x3ba8186d
  43ac01:	and    BYTE PTR [rax],al
  43ac03:	(bad)  
  43ac04:	(bad)  
  43ac05:	outs   dx,DWORD PTR ds:[rsi]
  43ac06:	jb     0x43ac7c
  43ac08:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e
  43ac0f:	add    BYTE PTR [rbx+0x68],ah
  43ac12:	(bad)  
  43ac13:	outs   dx,BYTE PTR ds:[rsi]
  43ac14:	imul   ebp,DWORD PTR [esi+0x67],0x206f7420
  43ac1c:	and    eax,0x2e646c6c
  43ac21:	and    BYTE PTR [rax+rbp*2+0x69],dl
  43ac25:	jae    0x43ac47
  43ac27:	ins    DWORD PTR es:[rdi],dx
  43ac28:	(bad)  
  43ac29:	jns    0x43ac4b
  43ac2b:	jb     0x43ac92
  43ac2d:	jae    0x43aca4
  43ac2f:	ins    BYTE PTR es:[rdi],dx
  43ac30:	je     0x43ac52
  43ac32:	imul   ebp,DWORD PTR [rsi+0x20],0x6f636e69
  43ac39:	jb     0x43acad
  43ac3b:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  43ac40:	imul   ebp,DWORD PTR [rbp+0x65],0x6d617473
  43ac47:	jo     0x43acbc
  43ac49:	and    BYTE PTR [rcx+0x6e],ch
  43ac4c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43ac50:	and    BYTE PTR [rdi+0x75],ch
  43ac53:	je     0x43acc5
  43ac55:	jne    0x43accb
  43ac57:	and    BYTE PTR [rsi+0x69],ah
  43ac5a:	ins    BYTE PTR es:[rdi],dx
  43ac5b:	gs or  al,BYTE PTR cs:[rax]
  43ac5f:	add    BYTE PTR [rbp+0x75],ch
  43ac62:	js     0x43acc9
  43ac64:	jb     0x43ac86
  43ac66:	cmp    al,0x2d
  43ac68:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43ac6c:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3cce6
  43ac73:	je     0x43acd4
  43ac75:	jo     0x43aceb
  43ac77:	jae    0x43acb3
  43ac79:	and    eax,0x6b702073
  43ac7e:	je     0x43acdf
  43ac80:	jo     0x43acf6
  43ac82:	jae    0x43ace3
  43ac84:	je     0x43acef
  43ac86:	ins    DWORD PTR es:[rdi],dx
  43ac87:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3cd01
  43ac8e:	je     0x43acef
  43ac90:	fs je  0x43ad06
  43ac93:	cmp    ah,BYTE PTR [rip+0x6b702073]        # 0x6bb3cd0c
  43ac99:	je     0x43acfa
  43ac9b:	fs je  0x43ad11
  43ac9e:	pop    rdi
  43ac9f:	je     0x43ad0a
  43aca1:	ins    DWORD PTR es:[rdi],dx
  43aca2:	cmp    ah,BYTE PTR gs:[rip+0x69732073]        # 0x69b6cd1c
  43aca9:	jp     0x43ad10
  43acab:	cmp    ah,BYTE PTR [rip+0x61000a64]        # 0x6143b715
  43acb1:	jbe    0x43ad12
  43acb3:	imul   ebp,DWORD PTR [rsi+0x74],0x656c7265
  43acba:	(bad)  
  43acbb:	jbe    0x43ad22
  43acbd:	fs pop rdi
  43acbf:	ja     0x43ad33
  43acc1:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6d617266
  43acc9:	sub    BYTE PTR gs:[rcx],ch
  43accc:	add    BYTE PTR [rax+riz*1],ch
  43accf:	fs jb  0x43ad41
  43acd2:	jo     0x43ad44
  43acd4:	imul   ebp,DWORD PTR [rsi+0x67],0x746920
  43acdb:	add    BYTE PTR [rax],al
  43acdd:	add    BYTE PTR [rax],al
  43acdf:	add    BYTE PTR [rbx+0x75],dl
  43ace2:	(bad)  
  43ace3:	je     0x43ad4e
  43ace5:	je     0x43ad53
  43ace7:	and    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  43acec:	(bad)  
  43aced:	je     0x43ad58
  43acef:	outs   dx,DWORD PTR ds:[rsi]
  43acf0:	outs   dx,BYTE PTR ds:[rsi]
  43acf1:	and    BYTE PTR [rdx+0x65],dh
  43acf4:	fs jne 0x43ad5a
  43acf7:	gs and BYTE PTR fs:[rsi+0x72],ah
  43acfc:	outs   dx,DWORD PTR ds:[rsi]
  43acfd:	ins    DWORD PTR es:[rdi],dx
  43acfe:	and    BYTE PTR [rip+0x6f742064],ah        # 0x6fb7cd68
  43ad04:	and    BYTE PTR [rip+0xa732564],ah        # 0xab6d26e
  43ad0a:	add    BYTE PTR [rax],al
  43ad0c:	add    BYTE PTR [rax],al
  43ad0e:	add    BYTE PTR [rax],al
  43ad10:	jae    0x43ad87
  43ad12:	(bad)
  43ad17:	outs   dx,DWORD PTR gs:[rsi]
  43ad19:	cmp    ah,BYTE PTR [rax]
  43ad1b:	outs   dx,BYTE PTR ds:[rsi]
  43ad1c:	outs   dx,DWORD PTR ds:[rsi]
  43ad1d:	outs   dx,BYTE PTR ds:[rsi]
  43ad1e:	sub    eax,0x6d746962
  43ad23:	(bad)  
  43ad24:	jo     0x43ad46
  43ad26:	jae    0x43ad9d
  43ad28:	(bad)  
  43ad29:	je     0x43ad94
  43ad2b:	je     0x43ad99
  43ad2d:	or     al,BYTE PTR gs:[rax]
  43ad30:	jae    0x43ada7
  43ad32:	(bad)
  43ad37:	outs   dx,DWORD PTR gs:[rsi]
  43ad39:	cmp    ah,BYTE PTR [rax]
  43ad3b:	jb     0x43ada2
  43ad3d:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
  43ad41:	ins    BYTE PTR es:[edi],dx
  43ad43:	and    BYTE PTR gs:[rax],ch
  43ad46:	and    eax,0x64252064
  43ad4b:	and    BYTE PTR [rip+0x64252064],ah        # 0x6468cdb5
  43ad51:	sub    DWORD PTR [rax],esp
  43ad53:	outs   dx,DWORD PTR ds:[rsi]
  43ad54:	jbe    0x43adbb
  43ad56:	jb     0x43adbe
  43ad58:	ins    BYTE PTR es:[rdi],dx
  43ad59:	outs   dx,DWORD PTR ds:[rsi]
  43ad5a:	ja     0x43adc5
  43ad5c:	outs   dx,BYTE PTR ds:[rsi]
  43ad5d:	and    BYTE PTR [eip+0x64252064],ah        # 0x6468cdc8
  43ad64:	or     al,BYTE PTR [rax]
  43ad66:	add    BYTE PTR [rax],al
  43ad68:	push   rbx
  43ad69:	jne    0x43adcd
  43ad6b:	je     0x43add6
  43ad6d:	je     0x43addb
  43ad6f:	and    BYTE PTR gs:[rax+0x61],dh
  43ad73:	movsxd ebp,DWORD PTR [rbx+0x65]
  43ad76:	je     0x43adeb
  43ad78:	and    BYTE PTR [rbp+0x75],ch
  43ad7b:	jae    0x43adf1
  43ad7d:	and    BYTE PTR [rax+0x61],ch
  43ad80:	jbe    0x43ade7
  43ad82:	and    BYTE PTR [rcx+0x20],ah
  43ad85:	jo     0x43adfb
  43ad87:	jae    0x43ad93
  43ad89:	add    BYTE PTR [rax],al
  43ad8b:	add    BYTE PTR [rax],al
  43ad8d:	add    BYTE PTR [rax],al
  43ad8f:	add    BYTE PTR [rsi+0x61],al
  43ad92:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43ad9a:	(bad)  
  43ad9b:	ins    BYTE PTR es:[rdi],dx
  43ad9c:	ins    BYTE PTR es:[rdi],dx
  43ad9d:	outs   dx,DWORD PTR ds:[rsi]
  43ad9e:	movsxd esp,DWORD PTR [rcx+0x74]
  43ada1:	and    BYTE PTR gs:[rbx+0x75],dh
  43ada5:	(bad)  
  43ada6:	je     0x43ae11
  43ada8:	je     0x43ae16
  43adaa:	gs pop rdi
  43adac:	outs   dx,DWORD PTR ds:[rsi]
  43adad:	jne    0x43ae23
  43adaf:	or     al,BYTE PTR [rax]
  43adb1:	push   rbx
  43adb2:	jne    0x43ae16
  43adb4:	je     0x43ae1f
  43adb6:	je     0x43ae24
  43adb8:	and    BYTE PTR gs:[rbp+0x6e],ah
  43adbc:	movsxd ebp,DWORD PTR [rdi+0x64]
  43adbf:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
  43adc6:	ins    BYTE PTR es:[rdi],dx
  43adc7:	gs or  al,BYTE PTR fs:[rax]
  43adcb:	add    BYTE PTR [rax],al
  43adcd:	add    BYTE PTR [rax],al
  43adcf:	add    BYTE PTR [rbp+0x72],al
  43add2:	jb     0x43ae43
  43add4:	jb     0x43adf6
  43add6:	ja     0x43ae40
  43add8:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6f636564
  43ade0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72747320
  43ade8:	gs (bad) 
  43adea:	ins    DWORD PTR es:[rdi],dx
  43adeb:	and    BYTE PTR [rbx],ah
  43aded:	and    eax,0x64253a64
  43adf2:	cmp    ah,BYTE PTR [rax]
  43adf4:	and    eax,0x45000a73
  43adf9:	jb     0x43ae6d
  43adfb:	outs   dx,DWORD PTR ds:[rsi]
  43adfc:	jb     0x43ae1e
  43adfe:	ins    DWORD PTR es:[rdi],dx
  43adff:	(bad)  
  43ae00:	jb     0x43ae6d
  43ae02:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  43ae09:	je     0x43ae70
  43ae0b:	jb     0x43ae80
  43ae0d:	and    BYTE PTR [rcx+0x73],ah
  43ae10:	and    BYTE PTR [rsi+0x69],ah
  43ae13:	outs   dx,BYTE PTR ds:[rsi]
  43ae14:	imul   esi,DWORD PTR [rbx+0x68],0xa6465
  43ae1b:	(bad)  
  43ae1c:	jbe    0x43ae87
  43ae1e:	add    BYTE PTR [rax+0x61],dl
  43ae21:	jae    0x43ae97
  43ae23:	and    BYTE PTR [rbp+rsi*2+0x72],ah
  43ae27:	(bad)  
  43ae28:	je     0x43ae93
  43ae2a:	outs   dx,DWORD PTR ds:[rsi]
  43ae2b:	outs   dx,BYTE PTR ds:[rsi]
  43ae2c:	and    BYTE PTR [rip+0x6f742066],ah        # 0x6fb7ce98
  43ae32:	outs   dx,DWORD PTR ds:[rsi]
  43ae33:	and    BYTE PTR [rcx+riz*2+0x72],ch
  43ae37:	or     al,BYTE PTR gs:[eax]
  43ae3b:	add    BYTE PTR [rax],al
  43ae3d:	add    BYTE PTR [rax],al
  43ae3f:	add    BYTE PTR [rbx+0x6c],al
  43ae42:	imul   esi,DWORD PTR [rax+0x69],0x6620676e
  43ae49:	jb     0x43aeac
  43ae4b:	ins    DWORD PTR es:[rdi],dx
  43ae4c:	and    BYTE PTR gs:[rcx+0x6e],ch
  43ae50:	and    BYTE PTR [rdx+0x61],dh
  43ae53:	je     0x43aeba
  43ae55:	and    BYTE PTR [rbx+0x6f],ah
  43ae58:	outs   dx,BYTE PTR ds:[rsi]
  43ae59:	jbe    0x43aec0
  43ae5b:	jb     0x43aed0
  43ae5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x20796220
  43ae64:	and    eax,0x4e000a66
  43ae69:	outs   dx,DWORD PTR ds:[rsi]
  43ae6a:	je     0x43ae8c
  43ae6c:	fs jne 0x43aedf
  43ae6f:	ins    BYTE PTR es:[rdi],dx
  43ae70:	imul   esp,DWORD PTR [rbx+0x61],0x676e6974
  43ae77:	and    BYTE PTR [rip+0x6e692064],ah        # 0x6eaccee1
  43ae7d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x7266206c
  43ae85:	(bad)  
  43ae86:	ins    DWORD PTR es:[rdi],dx
  43ae87:	gs jae 0x43ae94
  43ae8a:	add    BYTE PTR [rax],dh
  43ae8c:	add    BYTE PTR [rcx+0x73],al
  43ae8f:	jae    0x43aef6
  43ae91:	jb     0x43af07
  43ae93:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  43ae9a:	data16 (bad) 
  43ae9c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  43aea4:	and    eax,0x64253a73
  43aea9:	or     al,BYTE PTR [rax]
  43aeab:	data16 ins WORD PTR es:[rdi],dx
  43aeae:	jo     0x43af15
  43aeb0:	movsxd eax,DWORD PTR cs:[eax]
  43aeb4:	add    BYTE PTR [rax],al
  43aeb6:	add    BYTE PTR [rax],al
  43aeb8:	sub    ch,BYTE PTR [rdx]
  43aeba:	sub    ah,BYTE PTR [rax]
  43aebc:	fs jb  0x43af2e
  43aebf:	jo     0x43af31
  43aec1:	imul   ebp,DWORD PTR [rsi+0x67],0x61726620
  43aec8:	ins    DWORD PTR es:[rdi],dx
  43aec9:	and    BYTE PTR gs:[rip+0x72662064],ah        # 0x72a9cf34
  43aed0:	outs   dx,DWORD PTR ds:[rsi]
  43aed1:	ins    DWORD PTR es:[rdi],dx
  43aed2:	and    BYTE PTR [rbx+0x74],dh
  43aed5:	jb     0x43af3c
  43aed7:	(bad)  
  43aed8:	ins    DWORD PTR es:[rdi],dx
  43aed9:	and    BYTE PTR [rip+0x74612064],ah        # 0x74a4cf43
  43aedf:	and    BYTE PTR [rbx+rsi*2+0x20],dh
  43aee3:	and    eax,0xa646c6c
	...
  43aef0:	and    eax,0x72662064
  43aef5:	(bad)  
  43aef6:	ins    DWORD PTR es:[rdi],dx
  43aef7:	and    BYTE PTR gs:[rbp+rsi*2+0x70],ah
  43aefc:	ins    BYTE PTR es:[rdi],dx
  43aefd:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  43af04:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  43af08:	and    BYTE PTR [rcx+riz*2+0x72],ch
  43af0c:	addr32 gs sub al,0x20
  43af10:	jae    0x43af7d
  43af12:	imul   esi,DWORD PTR [rax+0x70],0xa676e69
  43af19:	add    BYTE PTR [rdx],ch
  43af1b:	sub    ch,BYTE PTR [rdx]
  43af1d:	and    BYTE PTR [rip+0x75642064],ah        # 0x75a7cf87
  43af23:	jo     0x43af46
  43af25:	or     al,BYTE PTR [rax]
  43af27:	jae    0x43af98
  43af29:	jne    0x43af9d
  43af2b:	movsxd esp,DWORD PTR [rbp+0x0]
  43af2e:	rex.RX outs dx,DWORD PTR ds:[rsi]
  43af30:	jb     0x43af95
  43af32:	gs and BYTE PTR fs:[rbx+0x65],ch
  43af37:	jns    0x43af9f
  43af39:	jb     0x43af9c
  43af3b:	ins    DWORD PTR es:[rdi],dx
  43af3c:	and    BYTE PTR gs:[rcx+0x74],ah
  43af40:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  43af44:	and    BYTE PTR gs:[rip+0xa66],ah        # 0x43b9b1
  43af4b:	add    BYTE PTR [rax],al
  43af4d:	add    BYTE PTR [rax],al
  43af4f:	add    BYTE PTR [rbp+0x6e],ah
  43af52:	movsxd ebp,DWORD PTR [rdi+0x64]
  43af55:	gs jb  0x43af78
  43af58:	cmp    al,0x2d
  43af5a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43af5e:	cmp    dh,BYTE PTR gs:[rsi+0x69]
  43af62:	fs outs dx,DWORD PTR gs:[rsi]
  43af65:	and    BYTE PTR [rsi+0x72],ah
  43af68:	(bad)  
  43af69:	ins    DWORD PTR es:[rdi],dx
  43af6a:	gs pop rdi
  43af6c:	jo     0x43afe2
  43af6e:	jae    0x43afaa
  43af70:	and    eax,0x72662073
  43af75:	(bad)  
  43af76:	ins    DWORD PTR es:[rdi],dx
  43af77:	gs pop rdi
  43af79:	jo     0x43afef
  43af7b:	jae    0x43afdc
  43af7d:	je     0x43afe8
  43af7f:	ins    DWORD PTR es:[rdi],dx
  43af80:	cmp    ah,BYTE PTR gs:[rip+0x69742073]        # 0x69b7cffa
  43af87:	ins    DWORD PTR es:[rdi],dx
  43af88:	gs pop rdi
  43af8a:	(bad)  
  43af8c:	jae    0x43aff3
  43af8e:	cmp    ah,BYTE PTR [rip+0x64252f64]        # 0x6468def8
  43af94:	or     al,BYTE PTR [rax]
  43af96:	outs   dx,BYTE PTR gs:[rsi]
  43af98:	movsxd ebp,DWORD PTR [rdi+0x64]
  43af9b:	gs pop rdi
  43af9d:	jbe    0x43b008
  43af9f:	fs outs dx,DWORD PTR gs:[rsi]
  43afa2:	and    BYTE PTR [rip+0x64252e64],ah        # 0x6468de0c
  43afa8:	add    BYTE PTR [rsi+0x69],dl
  43afab:	fs outs dx,DWORD PTR gs:[rsi]
  43afae:	and    BYTE PTR [rbp+0x6e],ah
  43afb1:	movsxd ebp,DWORD PTR [rdi+0x64]
  43afb4:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
  43afbb:	ins    BYTE PTR es:[rdi],dx
  43afbc:	gs or  al,BYTE PTR fs:[rax]
  43afc0:	outs   dx,BYTE PTR gs:[rsi]
  43afc2:	movsxd ebp,DWORD PTR [rdi+0x64]
  43afc5:	gs jb  0x43afe8
  43afc8:	sub    eax,0x7974203e
  43afcd:	jo     0x43b034
  43afcf:	cmp    dh,BYTE PTR [rsi+0x69]
  43afd2:	fs outs dx,DWORD PTR gs:[rsi]
  43afd5:	and    BYTE PTR [rax+0x6b],dh
  43afd8:	je     0x43b039
  43afda:	jo     0x43b050
  43afdc:	jae    0x43b018
  43afde:	and    eax,0x6b702073
  43afe3:	je     0x43b044
  43afe5:	jo     0x43b05b
  43afe7:	jae    0x43b048
  43afe9:	je     0x43b054
  43afeb:	ins    DWORD PTR es:[rdi],dx
  43afec:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3d066
  43aff3:	je     0x43b054
  43aff5:	fs je  0x43b06b
  43aff8:	cmp    ah,BYTE PTR [rip+0x6b702073]        # 0x6bb3d071
  43affe:	je     0x43b05f
  43b000:	fs je  0x43b076
  43b003:	pop    rdi
  43b004:	je     0x43b06f
  43b006:	ins    DWORD PTR es:[rdi],dx
  43b007:	cmp    ah,BYTE PTR gs:[rip+0x3f000a73]        # 0x3f43ba81
  43b00e:	add    BYTE PTR [rsi+0x61],ch
  43b011:	je     0x43b07c
  43b013:	jbe    0x43b07a
  43b015:	add    BYTE PTR [rcx+0x73],ch
  43b018:	je     0x43b03a
  43b01a:	es and BYTE PTR es:[rcx],ah
  43b01e:	outs   dx,DWORD PTR ds:[rsi]
  43b01f:	jae    0x43b095
  43b021:	sub    eax,0x6c69663e
  43b026:	je     0x43b08d
  43b028:	jb     0x43b02a
  43b02a:	ins    DWORD PTR es:[rdi],dx
  43b02b:	outs   dx,DWORD PTR ds:[rsi]
  43b02c:	jbe    0x43b02e
  43b02e:	ins    DWORD PTR es:[rdi],dx
  43b02f:	jo     0x43b065
  43b031:	add    BYTE PTR [rbx],dh
  43b033:	addr32 jo 0x43b036
  43b036:	xor    esp,DWORD PTR [rdi+0x32]
  43b039:	add    BYTE PTR [rax+0x73],dh
  43b03c:	jo     0x43b03e
  43b03e:	imul   esi,DWORD PTR [rax+0x6f],0x34660064
  43b045:	jbe    0x43b047
  43b047:	add    BYTE PTR [rip+0x646f6361],ch        # 0x64b313ae
  43b04d:	movsxd esp,DWORD PTR gs:[rax]
  43b050:	movsxd ebp,DWORD PTR [rdi+0x70]
  43b053:	jns    0x43b075
  43b055:	(bad)  
  43b056:	outs   dx,BYTE PTR ds:[rsi]
  43b057:	and    BYTE PTR fs:[rip+0x206c6f76],ch        # 0x20b01fd4
  43b05e:	(bad)  
  43b05f:	jb     0x43b0c6
  43b061:	and    BYTE PTR [rcx+0x6e],ch
  43b064:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43b067:	jo     0x43b0ca
  43b069:	je     0x43b0d4
  43b06b:	(bad)  
  43b06c:	ins    BYTE PTR es:[rdi],dx
  43b06d:	and    BYTE PTR gs:[rax],ch
  43b070:	data16 jb 0x43b0d4
  43b073:	ins    DWORD PTR es:[rdi],dx
  43b074:	gs jae 0x43b097
  43b077:	(bad)  
  43b078:	jb     0x43b0df
  43b07a:	and    BYTE PTR [rsi+0x6f],ch
  43b07d:	je     0x43b09f
  43b07f:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43b084:	gs sub DWORD PTR fs:[rdx],ecx
	...
  43b090:	rex.WRXB jbe 0x43b0f8
  43b093:	jb     0x43b107
  43b095:	imul   esp,DWORD PTR [rcx+rbp*2+0x6e],0x73612067
  43b09d:	jo     0x43b104
  43b09f:	movsxd esi,DWORD PTR [rax+riz*1+0x72]
  43b0a3:	(bad)  
  43b0a4:	je     0x43b10f
  43b0a6:	outs   dx,DWORD PTR ds:[rsi]
  43b0a7:	and    BYTE PTR [rdi+0x69],dh
  43b0aa:	je     0x43b114
  43b0ac:	and    BYTE PTR [rbx+0x74],dh
  43b0af:	jb     0x43b116
  43b0b1:	(bad)  
  43b0b2:	ins    DWORD PTR es:[rdi],dx
  43b0b3:	and    BYTE PTR [rbx+0x6f],ah
  43b0b6:	jo     0x43b131
  43b0b8:	and    BYTE PTR [rbp+0x61],ch
  43b0bb:	jns    0x43b0dd
  43b0bd:	jo     0x43b131
  43b0bf:	outs   dx,DWORD PTR ds:[rsi]
  43b0c0:	fs jne 0x43b126
  43b0c3:	and    BYTE PTR gs:[rcx+0x6e],ch
  43b0c7:	jbe    0x43b12a
  43b0c9:	ins    BYTE PTR es:[rdi],dx
  43b0ca:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x73656c69
  43b0d2:	or     al,BYTE PTR [rax]
  43b0d4:	add    BYTE PTR [rax],al
  43b0d6:	add    BYTE PTR [rax],al
  43b0d8:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43b0da:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b0dd:	gs jb  0x43b100
  43b0e0:	sub    BYTE PTR [rbx+0x6f],ah
  43b0e3:	fs movsxd esp,DWORD PTR gs:[rax]
  43b0e7:	and    eax,0x6e202973
  43b0ec:	outs   dx,DWORD PTR ds:[rsi]
  43b0ed:	je     0x43b10f
  43b0ef:	outs   dx,WORD PTR ds:[rsi]
  43b0f1:	jne    0x43b161
  43b0f3:	and    BYTE PTR fs:[rsi+0x6f],ah
  43b0f7:	jb     0x43b119
  43b0f9:	outs   dx,DWORD PTR ds:[rsi]
  43b0fa:	jne    0x43b170
  43b0fc:	jo     0x43b173
  43b0fe:	je     0x43b120
  43b100:	jae    0x43b176
  43b102:	jb     0x43b169
  43b104:	(bad)  
  43b105:	ins    DWORD PTR es:[rdi],dx
  43b106:	and    BYTE PTR [rbx],ah
  43b108:	and    eax,0x64253a64
  43b10d:	add    BYTE PTR [rbp+0x6e],ah
  43b110:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b113:	gs jb  0x43b116
  43b116:	data16 data16 ins BYTE PTR es:[rdi],dx
  43b119:	(bad)  
  43b11a:	addr32 jae 0x43b11d
  43b11d:	data16 ins BYTE PTR es:[rdi],dx
  43b11f:	(bad)  
  43b120:	addr32 jae 0x43b123
  43b123:	rex.WR (bad) 
  43b125:	jbe    0x43b18a
  43b127:	xor    eax,0x30362e36
  43b12c:	xor    DWORD PTR cs:[rax],esi
  43b12f:	xor    BYTE PTR [rax],ah
  43b131:	add    BYTE PTR [rcx+riz*2+0x76],cl
  43b135:	movsxd esp,DWORD PTR [rax]
  43b137:	add    BYTE PTR [rbp+0x72],al
  43b13a:	jb     0x43b1ab
  43b13c:	jb     0x43b15e
  43b13e:	outs   dx,DWORD PTR ds:[rsi]
  43b13f:	jo     0x43b1a6
  43b141:	outs   dx,BYTE PTR ds:[rsi]
  43b142:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  43b149:	je     0x43b1b0
  43b14b:	jb     0x43b1c0
  43b14d:	and    DWORD PTR [rdx],ecx
  43b14f:	add    BYTE PTR [rsi+0x6f],cl
  43b152:	and    BYTE PTR [rcx+0x6e],ch
  43b155:	outs   dx,WORD PTR ds:[rsi]
  43b157:	jb     0x43b1c6
  43b159:	(bad)  
  43b15a:	je     0x43b1c5
  43b15c:	outs   dx,DWORD PTR ds:[rsi]
  43b15d:	outs   dx,BYTE PTR ds:[rsi]
  43b15e:	and    BYTE PTR [rcx+0x62],ah
  43b161:	outs   dx,DWORD PTR ds:[rsi]
  43b162:	jne    0x43b1d8
  43b164:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43b168:	and    BYTE PTR [rcx+0x6e],ch
  43b16b:	jo     0x43b1e2
  43b16d:	je     0x43b18f
  43b16f:	data16 jb 0x43b1d3
  43b172:	ins    DWORD PTR es:[rdi],dx
  43b173:	gs jb  0x43b1d7
  43b176:	je     0x43b1dd
  43b178:	and    BYTE PTR [rcx+0x73],ch
  43b17b:	and    BYTE PTR [rcx+0x76],ah
  43b17e:	(bad)  
  43b17f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x202e656c
  43b187:	rex.RX (bad) 
  43b189:	ins    BYTE PTR es:[rdi],dx
  43b18a:	ins    BYTE PTR es:[rdi],dx
  43b18b:	imul   ebp,DWORD PTR [rsi+0x67],0x63616220
  43b192:	imul   esp,DWORD PTR [rax],0x74
  43b195:	outs   dx,DWORD PTR ds:[rsi]
  43b196:	and    BYTE PTR [rcx+0x20],ah
  43b199:	fs gs data16 (bad) 
  43b19d:	jne    0x43b20b
  43b19f:	je     0x43b1c1
  43b1a1:	jbe    0x43b204
  43b1a3:	ins    BYTE PTR es:[rdi],dx
  43b1a4:	jne    0x43b20b
  43b1a6:	and    BYTE PTR [rdi+0x66],ch
  43b1a9:	and    BYTE PTR [rdx],dh
  43b1ab:	xor    eax,0x20737066
  43b1b0:	outs   dx,WORD PTR ds:[rsi]
  43b1b2:	jb     0x43b1d4
  43b1b4:	outs   dx,DWORD PTR ds:[rsi]
  43b1b5:	jne    0x43b22b
  43b1b7:	jo     0x43b22e
  43b1b9:	je     0x43b1db
  43b1bb:	jae    0x43b231
  43b1bd:	jb     0x43b224
  43b1bf:	(bad)  
  43b1c0:	ins    DWORD PTR es:[rdi],dx
  43b1c1:	and    BYTE PTR [rbx],ah
  43b1c3:	and    eax,0x64253a64
  43b1c8:	and    BYTE PTR cs:[rbp+0x73],dl
  43b1cc:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  43b1d1:	and    BYTE PTR [rip+0x706f2072],ch        # 0x70b2d249
  43b1d7:	je     0x43b242
  43b1d9:	outs   dx,DWORD PTR ds:[rsi]
  43b1da:	outs   dx,BYTE PTR ds:[rsi]
  43b1db:	and    BYTE PTR [rcx+0x66],ch
  43b1de:	and    BYTE PTR [rcx+0x6f],bh
  43b1e1:	jne    0x43b203
  43b1e3:	ja     0x43b246
  43b1e5:	outs   dx,BYTE PTR ds:[rsi]
  43b1e6:	je     0x43b208
  43b1e8:	(bad)  
  43b1e9:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  43b1ed:	data16 gs jb 0x43b256
  43b1f1:	outs   dx,BYTE PTR ds:[rsi]
  43b1f2:	je     0x43b214
  43b1f4:	data16 jb 0x43b258
  43b1f7:	ins    DWORD PTR es:[rdi],dx
  43b1f8:	gs jb  0x43b25c
  43b1fb:	je     0x43b262
  43b1fd:	or     al,BYTE PTR cs:[rax]
  43b200:	rex.RX jb 0x43b264
  43b203:	ins    DWORD PTR es:[rdi],dx
  43b204:	and    BYTE PTR gs:[rdx+0x61],dh
  43b208:	je     0x43b26f
  43b20a:	and    BYTE PTR [rsi+0x65],dh
  43b20d:	jb     0x43b288
  43b20f:	and    BYTE PTR [rax+0x69],ch
  43b212:	addr32 push 0x726f6620
  43b218:	and    BYTE PTR [rcx+0x20],ah
  43b21b:	ins    DWORD PTR es:[rdi],dx
  43b21c:	jne    0x43b296
  43b21e:	gs jb  0x43b241
  43b221:	outs   dx,BYTE PTR ds:[rsi]
  43b222:	outs   dx,DWORD PTR ds:[rsi]
  43b223:	je     0x43b245
  43b225:	data16 imul sp,WORD PTR gs:[rbx+0x69],0x6e65
  43b22d:	je     0x43b29b
  43b22f:	jns    0x43b251
  43b231:	jae    0x43b2a8
  43b233:	jo     0x43b2a5
  43b235:	outs   dx,DWORD PTR ds:[rsi]
  43b236:	jb     0x43b2ac
  43b238:	imul   ebp,DWORD PTR [rsi+0x67],0x2e746920
  43b23f:	or     dl,BYTE PTR [rax+0x6c]
  43b242:	gs (bad) 
  43b244:	jae    0x43b2ab
  43b246:	and    BYTE PTR [rbx+0x6f],ah
  43b249:	outs   dx,BYTE PTR ds:[rsi]
  43b24a:	jae    0x43b2b5
  43b24c:	fs gs jb 0x43b270
  43b250:	jae    0x43b2c2
  43b252:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43b256:	jns    0x43b2c1
  43b258:	outs   dx,BYTE PTR ds:[rsi]
  43b259:	and    BYTE PTR [ecx+0x20],ah
  43b25d:	ins    BYTE PTR es:[rdi],dx
  43b25e:	outs   dx,DWORD PTR ds:[rsi]
  43b25f:	ja     0x43b2c6
  43b261:	jb     0x43b283
  43b263:	data16 jb 0x43b2c7
  43b266:	ins    DWORD PTR es:[rdi],dx
  43b267:	gs jb  0x43b2cb
  43b26a:	je     0x43b2d1
  43b26c:	sub    al,0x20
  43b26e:	(bad)  
  43b26f:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  43b273:	data16 gs jb 0x43b2dc
  43b277:	outs   dx,BYTE PTR ds:[rsi]
  43b278:	je     0x43b29a
  43b27a:	ins    DWORD PTR es:[rdi],dx
  43b27b:	jne    0x43b2f5
  43b27d:	gs jb  0x43b2a0
  43b280:	outs   dx,DWORD PTR ds:[rsi]
  43b281:	jb     0x43b2a3
  43b283:	sub    eax,0x6e797376
  43b288:	movsxd esp,DWORD PTR [rax]
  43b28a:	xor    cl,BYTE PTR [rdx]
  43b28c:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  43b290:	js     0x43b2c4
  43b292:	ss xor al,0x0
  43b295:	add    BYTE PTR [rax],al
  43b297:	add    BYTE PTR [rsi+0x6f],cl
  43b29a:	and    BYTE PTR [rax+0x69],dh
  43b29d:	js     0x43b304
  43b29f:	ins    BYTE PTR es:[rdi],dx
  43b2a0:	and    BYTE PTR [rsi+0x6f],ah
  43b2a3:	jb     0x43b312
  43b2a5:	(bad)  
  43b2a6:	je     0x43b2c8
  43b2a8:	jae    0x43b31a
  43b2aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43b2ae:	imul   esp,DWORD PTR [rbp+0x64],0x7325202c
  43b2b5:	and    BYTE PTR [rsi+0x6f],ah
  43b2b8:	jb     0x43b2da
  43b2ba:	rex.W
  43b2bb:	xor    dh,BYTE PTR cs:[rsi]
  43b2be:	xor    al,0x20
  43b2c0:	outs   dx,BYTE PTR gs:[rsi]
  43b2c2:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b2c5:	imul   ebp,DWORD PTR [rsi+0x67],0x6f686320
  43b2cc:	jae    0x43b333
  43b2ce:	outs   dx,BYTE PTR ds:[rsi]
  43b2cf:	or     dl,BYTE PTR cs:[rbp+0x73]
  43b2d3:	and    BYTE PTR gs:[rip+0x5f786970],ch        # 0x5fbc1c4a
  43b2da:	ins    WORD PTR es:[rdi],dx
  43b2dc:	je     0x43b2fe
  43b2de:	jns    0x43b355
  43b2e0:	jbe    0x43b316
  43b2e2:	xor    dh,BYTE PTR [rax]
  43b2e4:	jo     0x43b306
  43b2e6:	outs   dx,WORD PTR ds:[rsi]
  43b2e8:	jb     0x43b30a
  43b2ea:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43b2ed:	jo     0x43b350
  43b2ef:	je     0x43b35a
  43b2f1:	(bad)  
  43b2f2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x69772079
  43b2fa:	je     0x43b364
  43b2fc:	and    BYTE PTR [rdi+0x75],ch
  43b2ff:	je     0x43b365
  43b301:	(bad)  
  43b302:	je     0x43b369
  43b304:	and    BYTE PTR fs:[rbp+0x65],ch
  43b308:	imul   esp,DWORD PTR fs:[rcx+0x20],0x79616c70
  43b310:	gs jb  0x43b386
  43b313:	or     al,BYTE PTR cs:[rax]
  43b316:	ins    DWORD PTR es:[rdi],dx
  43b317:	jo     0x43b37e
  43b319:	xor    dh,BYTE PTR [esi+0x69]
  43b31d:	fs outs dx,DWORD PTR gs:[rsi]
	...
  43b328:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43b32a:	and    BYTE PTR [rax+0x69],dh
  43b32d:	js     0x43b394
  43b32f:	ins    BYTE PTR es:[rdi],dx
  43b330:	and    BYTE PTR [rsi+0x6f],ah
  43b333:	jb     0x43b3a2
  43b335:	(bad)  
  43b336:	je     0x43b358
  43b338:	jae    0x43b3aa
  43b33a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43b33e:	imul   esp,DWORD PTR [rbp+0x64],0x7325202c
  43b345:	and    BYTE PTR [rsi+0x6f],ah
  43b348:	jb     0x43b36a
  43b34a:	rex.WRB push r8
  43b34c:	rex.RB
  43b34d:	rex.RXB sub eax,0x6e652032
  43b353:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b356:	imul   ebp,DWORD PTR [rsi+0x67],0x6f686320
  43b35d:	jae    0x43b3c4
  43b35f:	outs   dx,BYTE PTR ds:[rsi]
  43b360:	or     dl,BYTE PTR cs:[rbp+0x73]
  43b364:	and    BYTE PTR gs:[rip+0x5f786970],ch        # 0x5fbc1cdb
  43b36b:	ins    WORD PTR es:[rdi],dx
  43b36d:	je     0x43b38f
  43b36f:	jns    0x43b3e6
  43b371:	jbe    0x43b3a7
  43b373:	xor    dh,BYTE PTR [rax]
  43b375:	jo     0x43b397
  43b377:	outs   dx,WORD PTR ds:[rsi]
  43b379:	jb     0x43b39b
  43b37b:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43b37e:	jo     0x43b3e1
  43b380:	je     0x43b3eb
  43b382:	(bad)  
  43b383:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x69772079
  43b38b:	je     0x43b3f5
  43b38d:	and    BYTE PTR [rdi+0x75],ch
  43b390:	je     0x43b3f6
  43b392:	(bad)  
  43b393:	je     0x43b3fa
  43b395:	and    BYTE PTR fs:[rbp+0x65],ch
  43b399:	imul   esp,DWORD PTR fs:[rcx+0x20],0x79616c70
  43b3a1:	gs jb  0x43b417
  43b3a4:	or     al,BYTE PTR cs:[rax]
  43b3a7:	gs js  0x43b41a
  43b3aa:	jb     0x43b3e6
  43b3ac:	add    BYTE PTR [rax],al
  43b3ae:	add    BYTE PTR [rax],al
  43b3b0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43b3b2:	jbe    0x43b415
  43b3b4:	ins    BYTE PTR es:[rdi],dx
  43b3b5:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x6563726f
  43b3bd:	pop    rdi
  43b3be:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  43b3c2:	data16 jb 0x43b426
  43b3c5:	ins    DWORD PTR es:[rdi],dx
  43b3c6:	gs jae 0x43b3e9
  43b3c9:	gs js  0x43b43c
  43b3cc:	jb     0x43b433
  43b3ce:	jae    0x43b443
  43b3d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  43b3d7:	(bad)  
  43b3d8:	or     al,BYTE PTR [rax]
  43b3da:	add    BYTE PTR [rax],al
  43b3dc:	add    BYTE PTR [rax],al
  43b3de:	add    BYTE PTR [rax],al
  43b3e0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43b3e2:	jne    0x43b450
  43b3e4:	and    BYTE PTR fs:[rsi+0x6f],ch
  43b3e8:	je     0x43b40a
  43b3ea:	(bad)  
  43b3eb:	ins    BYTE PTR es:[rdi],dx
  43b3ec:	ins    BYTE PTR es:[rdi],dx
  43b3ed:	outs   dx,DWORD PTR ds:[rsi]
  43b3ee:	movsxd esp,DWORD PTR [rcx+0x74]
  43b3f1:	and    BYTE PTR gs:[rsi+0x6f],ah
  43b3f5:	jb     0x43b45a
  43b3f7:	gs and BYTE PTR fs:[rbx+0x65],ch
  43b3fc:	jns    0x43b41e
  43b3fe:	data16 jb 0x43b462
  43b401:	ins    DWORD PTR es:[rdi],dx
  43b402:	gs jae 0x43b425
  43b405:	(bad)  
  43b406:	jb     0x43b47a
  43b408:	(bad)  
  43b409:	jns    0x43b439
  43b40b:	or     al,BYTE PTR [rax]
  43b40d:	movsxd ebp,DWORD PTR [rax+0x61]
  43b410:	jo     0x43b486
  43b412:	gs jb  0x43b488
  43b415:	add    BYTE PTR [rsi+0x6f],ah
  43b418:	jb     0x43b47d
  43b41a:	gs pop rdi
  43b41c:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  43b420:	data16 jb 0x43b484
  43b423:	ins    DWORD PTR es:[rdi],dx
  43b424:	gs jae 0x43b427
  43b427:	imul   ebp,DWORD PTR [rsi+0x64],0x3d207865
  43b42e:	cmp    eax,0x7a697320
  43b433:	add    BYTE PTR gs:[rax+rbp*2+0x72],dh
  43b438:	gs (bad) 
  43b43a:	fs jae 0x43b43d
  43b43d:	(bad)  
  43b43e:	jne    0x43b4b4
  43b440:	outs   dx,DWORD PTR ds:[rsi]
  43b441:	add    BYTE PTR [rcx],dh
  43b443:	add    BYTE PTR [rbx+0x69],dh
  43b446:	fs gs pop rdi
  43b449:	fs (bad) 
  43b44b:	je     0x43b4ae
  43b44d:	pop    rdi
  43b44e:	outs   dx,DWORD PTR ds:[rsi]
  43b44f:	outs   dx,BYTE PTR ds:[rsi]
  43b450:	ins    BYTE PTR es:[rdi],dx
  43b451:	jns    0x43b4b2
  43b453:	jo     0x43b4b6
  43b455:	movsxd ebp,DWORD PTR [rbx+0x65]
  43b458:	je     0x43b4cd
  43b45a:	add    BYTE PTR [rdx+0x0],ah
  43b45d:	(bad)  
  43b45e:	(bad)  
  43b45f:	add    BYTE PTR [rcx],dh
  43b461:	xor    bh,BYTE PTR [rax]
  43b463:	xor    BYTE PTR [rax],dh
  43b465:	xor    BYTE PTR [rax],al
  43b467:	add    BYTE PTR [rbp+0x72],al
  43b46a:	jb     0x43b4db
  43b46c:	jb     0x43b48e
  43b46e:	ja     0x43b4d8
  43b470:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6e65706f
  43b478:	imul   ebp,DWORD PTR [rsi+0x67],0x636e6520
  43b47f:	outs   dx,DWORD PTR ds:[rsi]
  43b480:	fs gs jb 0x43b4a4
  43b484:	outs   dx,WORD PTR ds:[rsi]
  43b486:	jb     0x43b4a8
  43b488:	outs   dx,DWORD PTR ds:[rsi]
  43b489:	jne    0x43b4ff
  43b48b:	jo     0x43b502
  43b48d:	je     0x43b4af
  43b48f:	jae    0x43b505
  43b491:	jb     0x43b4f8
  43b493:	(bad)  
  43b494:	ins    DWORD PTR es:[rdi],dx
  43b495:	and    BYTE PTR [rbx],ah
  43b497:	and    eax,0x64253a64
  43b49c:	and    BYTE PTR [rip+0x79616d20],ch        # 0x79a521c2
  43b4a2:	(bad)  
  43b4a3:	and    BYTE PTR gs:[rcx+0x6e],ch
  43b4a7:	movsxd ebp,DWORD PTR [rdi+0x72]
  43b4aa:	jb     0x43b511
  43b4ac:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  43b4b0:	(bad)  
  43b4b1:	jb     0x43b514
  43b4b3:	ins    DWORD PTR es:[rdi],dx
  43b4b4:	gs je  0x43b51c
  43b4b7:	jb     0x43b52c
  43b4b9:	and    BYTE PTR [rbx+0x75],dh
  43b4bc:	movsxd ebp,DWORD PTR [rax+0x20]
  43b4bf:	(bad)  
  43b4c0:	jae    0x43b4e2
  43b4c2:	(bad)  
  43b4c3:	imul   esi,DWORD PTR [rdi+rbx*2+0x72],0x2c657461
  43b4cb:	and    BYTE PTR [rdx+0x61],dh
  43b4ce:	je     0x43b535
  43b4d0:	sub    al,0x20
  43b4d2:	ja     0x43b53d
  43b4d4:	fs je  0x43b53f
  43b4d7:	and    BYTE PTR [rdi+0x72],ch
  43b4da:	and    BYTE PTR [rax+0x65],ch
  43b4dd:	imul   esp,DWORD PTR [rdi+0x68],0x704f0074
  43b4e4:	je     0x43b54f
  43b4e6:	outs   dx,DWORD PTR ds:[rsi]
  43b4e7:	outs   dx,BYTE PTR ds:[rsi]
  43b4e8:	and    BYTE PTR [rip+0x6f6e2073],ah        # 0x6fb1d561
  43b4ee:	je     0x43b510
  43b4f0:	outs   dx,WORD PTR ds:[rsi]
  43b4f2:	jne    0x43b562
  43b4f4:	fs or  al,BYTE PTR cs:[rax]
  43b4f8:	push   rsp
  43b4f9:	push   0x69622065
  43b4fe:	je     0x43b572
  43b500:	(bad)  
  43b501:	je     0x43b568
  43b503:	and    BYTE PTR [rax+0x61],dh
  43b506:	jb     0x43b569
  43b508:	ins    DWORD PTR es:[rdi],dx
  43b509:	gs je  0x43b571
  43b50c:	jb     0x43b52e
  43b50e:	imul   esi,DWORD PTR [rbx+0x20],0x20746573
  43b515:	je     0x43b586
  43b517:	outs   dx,DWORD PTR ds:[rsi]
  43b518:	and    BYTE PTR [rdi+rbp*2+0x77],ch
  43b51c:	and    BYTE PTR cs:[rcx+0x74],cl
  43b520:	and    BYTE PTR [rcx+riz*2+0x6b],dh
  43b524:	gs jae 0x43b547
  43b527:	(bad)  
  43b528:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x73612073
  43b530:	and    BYTE PTR [rcx+0x72],ah
  43b533:	addr32 jne 0x43b5a3
  43b536:	outs   dx,BYTE PTR gs:[rsi]
  43b538:	je     0x43b566
  43b53a:	and    BYTE PTR [rsi+0x6f],ch
  43b53d:	je     0x43b55f
  43b53f:	imul   esp,DWORD PTR [rdx+0x69],0x74
  43b543:	jae    0x43b574
  43b545:	jae    0x43b551
  43b547:	add    BYTE PTR [rbp+0x72],al
  43b54a:	jb     0x43b5bb
  43b54c:	jb     0x43b56e
  43b54e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  43b555:	imul   edi,DWORD PTR [rdx+0x69],0x7420676e
  43b55c:	push   0x756f2065
  43b561:	je     0x43b5d3
  43b563:	jne    0x43b5d9
  43b565:	and    BYTE PTR [rbx+0x74],dh
  43b568:	jb     0x43b5cf
  43b56a:	(bad)  
  43b56b:	ins    DWORD PTR es:[rdi],dx
  43b56c:	and    BYTE PTR [rbx+0x6f],ah
  43b56f:	fs movsxd esp,DWORD PTR gs:[rax]
  43b573:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43b576:	je     0x43b5dd
  43b578:	js     0x43b5ee
  43b57a:	or     al,BYTE PTR cs:[rax]
  43b57d:	add    BYTE PTR [rax],al
  43b57f:	add    BYTE PTR [rbp+0x72],al
  43b582:	jb     0x43b5f3
  43b584:	jb     0x43b5a6
  43b586:	jae    0x43b5ed
  43b588:	je     0x43b5fe
  43b58a:	imul   ebp,DWORD PTR [rsi+0x67],0x20707520
  43b591:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b594:	movsxd esp,DWORD PTR gs:[rax]
  43b597:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43b59a:	je     0x43b601
  43b59c:	js     0x43b612
  43b59e:	and    BYTE PTR [rdi+0x70],ch
  43b5a1:	je     0x43b60c
  43b5a3:	outs   dx,DWORD PTR ds:[rsi]
  43b5a4:	outs   dx,BYTE PTR ds:[rsi]
  43b5a5:	jae    0x43b5d5
  43b5a7:	or     al,BYTE PTR [rax]
  43b5a9:	add    BYTE PTR [rax],al
  43b5ab:	add    BYTE PTR [rax],al
  43b5ad:	add    BYTE PTR [rax],al
  43b5af:	add    BYTE PTR [rbp+riz*2+0x63],al
  43b5b3:	outs   dx,DWORD PTR ds:[rsi]
  43b5b4:	fs gs jb 0x43b5d8
  43b5b8:	sub    BYTE PTR [rbx+0x6f],ah
  43b5bb:	fs movsxd esp,DWORD PTR gs:[rax]
  43b5bf:	and    eax,0x6e202973
  43b5c4:	outs   dx,DWORD PTR ds:[rsi]
  43b5c5:	je     0x43b5e7
  43b5c7:	outs   dx,WORD PTR ds:[rsi]
  43b5c9:	jne    0x43b639
  43b5cb:	and    BYTE PTR fs:[rsi+0x6f],ah
  43b5cf:	jb     0x43b5f1
  43b5d1:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  43b5d8:	je     0x43b64c
  43b5da:	gs (bad) 
  43b5dc:	ins    DWORD PTR es:[rdi],dx
  43b5dd:	and    BYTE PTR [rbx],ah
  43b5df:	and    eax,0x64253a64
  43b5e4:	add    BYTE PTR [rdx+0x65],dh
  43b5e7:	movsxd bp,DWORD PTR [rdi+0x75]
  43b5eb:	outs   dx,BYTE PTR ds:[rsi]
  43b5ec:	je     0x43b653
  43b5ee:	fs pop rdi
  43b5f0:	data16 jb 0x43b654
  43b5f3:	ins    DWORD PTR es:[rdi],dx
  43b5f4:	gs jae 0x43b5f7
  43b5f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43b5fa:	jo     0x43b671
  43b5fc:	je     0x43b663
  43b5fe:	pop    rdi
  43b5ff:	gs fs je 0x43b603
  43b603:	add    BYTE PTR [rax],al
  43b605:	add    BYTE PTR [rax],al
  43b607:	add    BYTE PTR [rdi+0x61],dl
  43b60a:	jb     0x43b67a
  43b60c:	imul   ebp,DWORD PTR [rsi+0x67],0x69737520
  43b613:	outs   dx,BYTE PTR ds:[rsi]
  43b614:	and    BYTE PTR [esi+edx*2+0x42],al
  43b619:	and    BYTE PTR [rbx+0x75],dh
  43b61c:	(bad)  
  43b61d:	je     0x43b688
  43b61f:	je     0x43b68d
  43b621:	gs jae 0x43b644
  43b624:	outs   dx,WORD PTR ds:[rsi]
  43b626:	jb     0x43b648
  43b628:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6972
  43b62f:	outs   dx,BYTE PTR ds:[rsi]
  43b630:	and    BYTE PTR [ecx+0x6e],ah
  43b634:	and    BYTE PTR fs:[rdi+0x75],ch
  43b638:	je     0x43b6aa
  43b63a:	jne    0x43b6b0
  43b63c:	and    BYTE PTR [rcx+0x74],ah
  43b63f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43b643:	and    BYTE PTR [rbx+0x61],dh
  43b646:	ins    DWORD PTR es:[rdi],dx
  43b647:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  43b64c:	and    BYTE PTR gs:[rcx+0x73],ch
  43b650:	and    BYTE PTR [rsi+0x6f],ch
  43b653:	je     0x43b675
  43b655:	data16 jne 0x43b6c4
  43b658:	ins    BYTE PTR es:[rdi],dx
  43b659:	jns    0x43b67b
  43b65b:	jae    0x43b6d2
  43b65d:	jo     0x43b6cf
  43b65f:	outs   dx,DWORD PTR ds:[rsi]
  43b660:	jb     0x43b6d6
  43b662:	gs fs sub al,0x20
  43b666:	(bad)  
  43b667:	ins    BYTE PTR es:[rdi],dx
  43b668:	jae    0x43b6d9
  43b66a:	and    BYTE PTR [rbx+0x65],dh
  43b66d:	and    BYTE PTR gs:[rip+0x706d6f63],ch        # 0x70b125d7
  43b674:	jne    0x43b6ea
  43b676:	gs pop rdi
  43b678:	gs fs je 0x43b69c
  43b67c:	pop    rbx
  43b67d:	xor    BYTE PTR [rcx+rsi*1+0x5d],bh
  43b681:	or     al,BYTE PTR [rax]
  43b683:	add    BYTE PTR [rax],al
  43b685:	add    BYTE PTR [rax],al
  43b687:	add    BYTE PTR [rbp+0x72],al
  43b68a:	jb     0x43b6fb
  43b68c:	jb     0x43b6ae
  43b68e:	ja     0x43b6f8
  43b690:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6e65706f
  43b698:	imul   ebp,DWORD PTR [rsi+0x67],0x63656420
  43b69f:	outs   dx,DWORD PTR ds:[rsi]
  43b6a0:	fs gs jb 0x43b6c4
  43b6a4:	outs   dx,WORD PTR ds:[rsi]
  43b6a6:	jb     0x43b6c8
  43b6a8:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  43b6af:	je     0x43b723
  43b6b1:	gs (bad) 
  43b6b3:	ins    DWORD PTR es:[rdi],dx
  43b6b4:	and    BYTE PTR [rbx],ah
  43b6b6:	and    eax,0x64253a64
  43b6bb:	and    BYTE PTR [rdx],bh
  43b6bd:	and    BYTE PTR [rip+0x73],ah        # 0x43b736
  43b6c3:	add    BYTE PTR [rax],al
  43b6c5:	add    BYTE PTR [rax],al
  43b6c7:	add    BYTE PTR [rbx+0x6f],al
  43b6ca:	jne    0x43b738
  43b6cc:	and    BYTE PTR fs:[rsi+0x6f],ch
  43b6d0:	je     0x43b6f2
  43b6d2:	ja     0x43b746
  43b6d4:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x64616568
  43b6dc:	gs jb  0x43b6ff
  43b6df:	outs   dx,WORD PTR ds:[rsi]
  43b6e1:	jb     0x43b703
  43b6e3:	outs   dx,DWORD PTR ds:[rsi]
  43b6e4:	jne    0x43b75a
  43b6e6:	jo     0x43b75d
  43b6e8:	je     0x43b70a
  43b6ea:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2523
  43b6f1:	and    BYTE PTR fs:[rax],ch
  43b6f4:	imul   ebp,DWORD PTR [rsi+0x63],0x6572726f
  43b6fb:	movsxd esi,DWORD PTR [rax+riz*1+0x63]
  43b6ff:	outs   dx,DWORD PTR ds:[rsi]
  43b700:	fs movsxd esp,DWORD PTR gs:[rax]
  43b704:	jo     0x43b767
  43b706:	jb     0x43b769
  43b708:	ins    DWORD PTR es:[rdi],dx
  43b709:	gs je  0x43b771
  43b70c:	jb     0x43b781
  43b70e:	and    BYTE PTR [rdi],bh
  43b710:	sub    DWORD PTR [rdx],edi
  43b712:	and    BYTE PTR [rip+0x74530073],ah        # 0x7496b78b
  43b718:	jb     0x43b77f
  43b71a:	(bad)  
  43b71b:	ins    DWORD PTR es:[rdi],dx
  43b71c:	and    BYTE PTR [rbp+0x61],ch
  43b71f:	jo     0x43b791
  43b721:	imul   ebp,DWORD PTR [rsi+0x67],0x20000a3a
  43b728:	and    BYTE PTR [rbx+0x74],dl
  43b72b:	jb     0x43b792
  43b72d:	(bad)  
  43b72e:	ins    DWORD PTR es:[rdi],dx
  43b72f:	and    BYTE PTR [rbx],ah
  43b731:	and    eax,0x64253a64
  43b736:	and    BYTE PTR [rax],ch
  43b738:	and    eax,0x2d202973
  43b73d:	and    BYTE PTR ds:[rip+0x28200073],ah        # 0x2863b7b7
  43b744:	addr32 jb 0x43b7a8
  43b747:	jo     0x43b7b1
  43b749:	and    BYTE PTR [rip+0x20002964],ah        # 0x2043e0b3
  43b74f:	and    BYTE PTR [rsi+0x69],al
  43b752:	ins    BYTE PTR es:[rdi],dx
  43b753:	and    BYTE PTR gs:[rip+0x3e2d2073],ah        # 0x3e70d7cd
  43b75a:	and    BYTE PTR [rbx+0x74],dl
  43b75d:	jb     0x43b7c4
  43b75f:	(bad)  
  43b760:	ins    DWORD PTR es:[rdi],dx
  43b761:	and    BYTE PTR [rbx],ah
  43b763:	and    eax,0x64253a64
  43b768:	or     al,BYTE PTR [rax]
  43b76a:	and    BYTE PTR [rax],ah
  43b76c:	and    eax,0x2d200073
  43b771:	and    BYTE PTR ds:[rbx+0x74],dl
  43b775:	jb     0x43b7dc
  43b777:	(bad)  
  43b778:	ins    DWORD PTR es:[rdi],dx
  43b779:	and    BYTE PTR [rbx],ah
  43b77b:	and    eax,0x64253a64
  43b780:	and    BYTE PTR [rax],ch
  43b782:	and    eax,0xa2973
  43b787:	and    BYTE PTR [rax],ah
  43b789:	push   rbx
  43b78a:	je     0x43b7fe
  43b78c:	gs (bad) 
  43b78e:	ins    DWORD PTR es:[rdi],dx
  43b78f:	and    BYTE PTR [rbx],ah
  43b791:	and    eax,0x64253a64
  43b796:	and    BYTE PTR [rip+0x2523203e],ch        # 0x2566d7da
  43b79c:	cmp    ah,BYTE PTR fs:[rip+0x5b200064]        # 0x5b63b807
  43b7a3:	jae    0x43b81e
  43b7a5:	outs   dx,BYTE PTR ds:[rsi]
  43b7a6:	movsxd esp,DWORD PTR [rax]
  43b7a8:	and    esp,DWORD PTR [rip+0x64253a64]        # 0x6468f212
  43b7ae:	pop    rbp
  43b7af:	add    BYTE PTR [rax],ah
  43b7b1:	sub    BYTE PTR [rbx+0x6f],ah
  43b7b4:	jo     0x43b82f
  43b7b6:	sub    DWORD PTR [rax],eax
  43b7b8:	and    BYTE PTR [rax],ch
  43b7ba:	and    eax,0x25282073
  43b7bf:	jae    0x43b7ea
  43b7c1:	and    BYTE PTR [rip+0x7325203e],ch        # 0x7368d805
  43b7c7:	and    BYTE PTR [rax],ch
  43b7c9:	and    eax,0x292973
  43b7ce:	and    eax,0x74000a73
  43b7d3:	ins    DWORD PTR es:[rdi],dx
  43b7d4:	movsxd esp,DWORD PTR [rax+rax*1+0x0]
  43b7d8:	fdivr  st,st(7)
  43b7da:	std    
  43b7db:	jmp    FWORD PTR [rcx+0xf]
  43b7de:	(bad)  
  43b7df:	(bad)  
  43b7e0:	mov    eax,0xd8fffe0e
  43b7e5:	(bad)  
  43b7e6:	std    
  43b7e7:	dec    DWORD PTR [rax-0x270001f2]
  43b7ed:	(bad)  
  43b7ee:	std    
  43b7ef:	inc    DWORD PTR [rbp+0x72]
  43b7f2:	jb     0x43b863
  43b7f4:	jb     0x43b816
  43b7f6:	imul   ebp,DWORD PTR [rsi+0x20],0x625f7661
  43b7fd:	jne    0x43b865
  43b7ff:	data16 gs jb 0x43b876
  43b803:	imul   ebp,DWORD PTR [rsi+0x6b],0x7465675f
  43b80a:	pop    rdi
  43b80b:	data16 jb 0x43b86f
  43b80e:	ins    DWORD PTR es:[rdi],dx
  43b80f:	gs pop rdi
  43b811:	data16 ins BYTE PTR es:[rdi],dx
  43b813:	(bad)  
  43b814:	addr32 jae 0x43b83f
  43b817:	sub    DWORD PTR [rdx],edi
  43b819:	and    BYTE PTR [rip+0xa73],ah        # 0x43c292
  43b81f:	add    BYTE PTR [rsi+0x69],ah
  43b822:	ins    BYTE PTR es:[rdi],dx
  43b823:	je     0x43b88a
  43b825:	jb     0x43b847
  43b827:	sub    eax,0x7470203e
  43b82c:	jae    0x43b868
  43b82e:	and    eax,0x74702073
  43b833:	jae    0x43b894
  43b835:	je     0x43b8a0
  43b837:	ins    DWORD PTR es:[rdi],dx
  43b838:	cmp    ah,BYTE PTR gs:[rip+0x78652073]        # 0x78a8d8b2
  43b83f:	(bad)  
  43b840:	movsxd esi,DWORD PTR [rdx+rdi*1+0x25]
  43b844:	data16 and BYTE PTR [rcx+rbp*2+0x6d],dh
  43b849:	gs pop rdi
  43b84b:	(bad)  
  43b84d:	jae    0x43b8b4
  43b84f:	cmp    ah,BYTE PTR [rip+0x64252f64]        # 0x6468e7b9
  43b855:	or     al,BYTE PTR [rax]
  43b857:	add    BYTE PTR [rcx+0x75],al
  43b85a:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x746c6966
  43b862:	gs jb  0x43b885
  43b865:	addr32 jb 0x43b8c9
  43b868:	jo     0x43b8d2
  43b86a:	and    BYTE PTR [rdi+0x75],ch
  43b86d:	je     0x43b8df
  43b86f:	jne    0x43b8e5
  43b871:	and    BYTE PTR [rcx+0x73],ch
  43b874:	and    BYTE PTR [rsi+0x6f],ch
  43b877:	je     0x43b899
  43b879:	outs   dx,BYTE PTR ds:[rsi]
  43b87a:	outs   dx,DWORD PTR ds:[rsi]
  43b87b:	jb     0x43b8ea
  43b87d:	(bad)  
  43b87e:	ins    BYTE PTR es:[rdi],dx
  43b87f:	imul   edi,DWORD PTR [rdx+0x65],0x6e612064
  43b886:	and    BYTE PTR fs:[rbp+0x6e],ah
  43b88a:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b88d:	gs jb  0x43b8b0
  43b890:	outs   dx,DWORD PTR fs:[rsi]
  43b892:	gs jae 0x43b8b5
  43b895:	outs   dx,BYTE PTR ds:[rsi]
  43b896:	outs   dx,DWORD PTR ds:[rsi]
  43b897:	je     0x43b8b9
  43b899:	jae    0x43b910
  43b89b:	jo     0x43b90d
  43b89d:	outs   dx,DWORD PTR ds:[rsi]
  43b89e:	jb     0x43b914
  43b8a0:	and    BYTE PTR [rax+0x61],dh
  43b8a3:	jb     0x43b906
  43b8a5:	ins    DWORD PTR es:[rdi],dx
  43b8a6:	gs je  0x43b90e
  43b8a9:	jb     0x43b8cb
  43b8ab:	movsxd ebp,DWORD PTR [rax+0x61]
  43b8ae:	outs   dx,BYTE PTR ds:[rsi]
  43b8af:	addr32 gs jae 0x43b8bd
  43b8b3:	add    BYTE PTR [rax+0x6b],dh
  43b8b6:	je     0x43b8e6
  43b8b8:	jae    0x43b923
  43b8ba:	jp     0x43b921
  43b8bc:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  43b8c0:	and    DWORD PTR [rax+0x6b],esi
  43b8c3:	je     0x43b8f3
  43b8c5:	fs (bad) 
  43b8c7:	je     0x43b92a
  43b8c9:	add    BYTE PTR [rax],al
  43b8cb:	add    BYTE PTR [rax],al
  43b8cd:	add    BYTE PTR [rax],al
  43b8cf:	add    BYTE PTR [rbp+0x6e],ah
  43b8d2:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b8d5:	gs jb  0x43b8f8
  43b8d8:	cmp    al,0x2d
  43b8da:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43b8de:	cmp    ah,BYTE PTR gs:[rcx+0x75]
  43b8e2:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x6d617266
  43b8ea:	gs pop rdi
  43b8ec:	jo     0x43b962
  43b8ee:	jae    0x43b92a
  43b8f0:	and    eax,0x72662073
  43b8f5:	(bad)  
  43b8f6:	ins    DWORD PTR es:[rdi],dx
  43b8f7:	gs pop rdi
  43b8f9:	jo     0x43b96f
  43b8fb:	jae    0x43b95c
  43b8fd:	je     0x43b968
  43b8ff:	ins    DWORD PTR es:[rdi],dx
  43b900:	cmp    ah,BYTE PTR gs:[rip+0x69742073]        # 0x69b7d97a
  43b907:	ins    DWORD PTR es:[rdi],dx
  43b908:	gs pop rdi
  43b90a:	(bad)  
  43b90c:	jae    0x43b973
  43b90e:	cmp    ah,BYTE PTR [rip+0x64252f64]        # 0x6468e878
  43b914:	or     al,BYTE PTR [rax]
  43b916:	add    BYTE PTR [rax],al
  43b918:	rex.B jne 0x43b97f
  43b91b:	imul   ebp,DWORD PTR [rdi+0x20],0x6f636e65
  43b922:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69616620
  43b92a:	ins    BYTE PTR es:[rdi],dx
  43b92b:	gs and BYTE PTR fs:[rax],ch
  43b92f:	(bad)  
  43b930:	jbe    0x43b995
  43b932:	outs   dx,DWORD PTR ds:[rsi]
  43b933:	fs movsxd ebx,DWORD PTR gs:[rdi+0x65]
  43b938:	outs   dx,BYTE PTR ds:[rsi]
  43b939:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b93c:	gs pop rdi
  43b93e:	(bad)  
  43b93f:	jne    0x43b9a5
  43b941:	imul   ebp,DWORD PTR [rdi+0x32],0x65000a29
  43b948:	outs   dx,BYTE PTR ds:[rsi]
  43b949:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b94c:	gs pop rdi
  43b94e:	(bad)  
  43b94f:	jne    0x43b9b5
  43b951:	imul   ebp,DWORD PTR [rdi+0x20],0x252e6425
  43b958:	add    BYTE PTR fs:[rax],al
  43b95b:	add    BYTE PTR [rax],al
  43b95d:	add    BYTE PTR [rax],al
  43b95f:	add    BYTE PTR [rbp+0x6e],ah
  43b962:	movsxd ebp,DWORD PTR [rdi+0x64]
  43b965:	gs jb  0x43b988
  43b968:	sub    eax,0x7974203e
  43b96d:	jo     0x43b9d4
  43b96f:	cmp    ah,BYTE PTR [rcx+0x75]
  43b972:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x5f746b70
  43b97a:	jo     0x43b9f0
  43b97c:	jae    0x43b9b8
  43b97e:	and    eax,0x6b702073
  43b983:	je     0x43b9e4
  43b985:	jo     0x43b9fb
  43b987:	jae    0x43b9e8
  43b989:	je     0x43b9f4
  43b98b:	ins    DWORD PTR es:[rdi],dx
  43b98c:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3da06
  43b993:	je     0x43b9f4
  43b995:	fs je  0x43ba0b
  43b998:	cmp    ah,BYTE PTR [rip+0x6b702073]        # 0x6bb3da11
  43b99e:	je     0x43b9ff
  43b9a0:	fs je  0x43ba16
  43b9a3:	pop    rdi
  43b9a4:	je     0x43ba0f
  43b9a6:	ins    DWORD PTR es:[rdi],dx
  43b9a7:	cmp    ah,BYTE PTR gs:[rip+0x56000a73]        # 0x5643c421
  43b9ae:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x64754100
  43b9b6:	imul   ebp,DWORD PTR [rdi+0x0],0x0
  43b9bd:	add    BYTE PTR [rax],al
  43b9bf:	add    BYTE PTR [rax+0x72],dl
  43b9c2:	gs jae 0x43ba38
  43b9c5:	and    BYTE PTR [rbx+0x71],bl
  43b9c8:	pop    rbp
  43b9c9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43b9cd:	jae    0x43ba43
  43b9cf:	outs   dx,DWORD PTR ds:[rsi]
  43b9d0:	jo     0x43b9fe
  43b9d2:	and    BYTE PTR [rbx+0x3f],bl
  43b9d5:	pop    rbp
  43b9d6:	and    BYTE PTR [rsi+0x6f],ah
  43b9d9:	jb     0x43b9fb
  43b9db:	push   0xa706c65
  43b9e0:	add    BYTE PTR [rdi+0x73],ch
  43b9e3:	je     0x43ba12
  43b9e5:	ds jae 0x43ba57
  43b9e8:	jne    0x43ba5c
  43b9ea:	movsxd esp,DWORD PTR [rbp+0x5f]
  43b9ed:	imul   ebp,DWORD PTR [rsi+0x64],0x3e207865
  43b9f4:	cmp    eax,0x4e003020
  43b9f9:	gs ja  0x43ba1c
  43b9fc:	and    eax,0x74732073
  43ba01:	jb     0x43ba68
  43ba03:	(bad)  
  43ba04:	ins    DWORD PTR es:[rdi],dx
  43ba05:	and    BYTE PTR [rip+0x64253a64],ah        # 0x6468f46f
  43ba0b:	and    BYTE PTR [rcx+0x74],ah
  43ba0e:	and    BYTE PTR [rax+0x6f],dh
  43ba11:	jae    0x43ba4d
  43ba13:	and    eax,0x20646c6c
  43ba18:	(bad)  
  43ba19:	outs   dx,BYTE PTR ds:[rsi]
  43ba1a:	and    BYTE PTR fs:[rsp+rdx*2+0x53],al
  43ba1f:	cmp    ah,BYTE PTR [rip+0xa7373]        # 0x4e2d98
  43ba25:	add    BYTE PTR [rax],al
  43ba27:	add    BYTE PTR [rbp+riz*2+0x6d],ah
  43ba2b:	jne    0x43baa5
  43ba2d:	gs jb  0x43ba50
  43ba30:	sub    eax,0x7369203e
  43ba35:	je     0x43ba96
  43ba37:	imul   ebp,DWORD PTR [rsi+0x64],0x253a7865
  43ba3e:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  43ba43:	cmp    ah,BYTE PTR gs:[rip+0x656e2073]        # 0x65b1dabd
  43ba4a:	js     0x43bac0
  43ba4c:	pop    rdi
  43ba4d:	fs je  0x43bac3
  43ba50:	cmp    ah,BYTE PTR [rip+0x656e2073]        # 0x65b1dac9
  43ba56:	js     0x43bacc
  43ba58:	pop    rdi
  43ba59:	fs je  0x43bacf
  43ba5c:	pop    rdi
  43ba5d:	je     0x43bac8
  43ba5f:	ins    DWORD PTR es:[rdi],dx
  43ba60:	cmp    ah,BYTE PTR gs:[rip+0x656e2073]        # 0x65b1dada
  43ba67:	js     0x43badd
  43ba69:	pop    rdi
  43ba6a:	jo     0x43bae0
  43ba6c:	jae    0x43baa8
  43ba6e:	and    eax,0x656e2073
  43ba73:	js     0x43bae9
  43ba75:	pop    rdi
  43ba76:	jo     0x43baec
  43ba78:	jae    0x43bad9
  43ba7a:	je     0x43bae5
  43ba7c:	ins    DWORD PTR es:[rdi],dx
  43ba7d:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3daf7
  43ba84:	je     0x43bae5
  43ba86:	jo     0x43bafc
  43ba88:	jae    0x43bac4
  43ba8a:	and    eax,0x6b702073
  43ba8f:	je     0x43baf0
  43ba91:	jo     0x43bb07
  43ba93:	jae    0x43baf4
  43ba95:	je     0x43bb00
  43ba97:	ins    DWORD PTR es:[rdi],dx
  43ba98:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3db12
  43ba9f:	je     0x43bb00
  43baa1:	fs je  0x43bb17
  43baa4:	cmp    ah,BYTE PTR [rip+0x6b702073]        # 0x6bb3db1d
  43baaa:	je     0x43bb0b
  43baac:	fs je  0x43bb22
  43baaf:	pop    rdi
  43bab0:	je     0x43bb1b
  43bab2:	ins    DWORD PTR es:[rdi],dx
  43bab3:	cmp    ah,BYTE PTR gs:[rip+0x666f2073]        # 0x66b2db2d
  43baba:	data16 cmp ah,BYTE PTR [rip+0x666f2073]        # 0x66b2db34
  43bac1:	pop    di
  43bac3:	je     0x43bb2e
  43bac5:	ins    DWORD PTR es:[rdi],dx
  43bac6:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x43c540
  43bacd:	add    BYTE PTR [rax],al
  43bacf:	add    BYTE PTR [rbx+0x6f],al
  43bad2:	jb     0x43bb46
  43bad4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  43bad9:	and    BYTE PTR [ebx+0x74],dh
  43badd:	(bad)  
  43bade:	jb     0x43bb54
  43bae0:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  43bae4:	and    BYTE PTR gs:[rdx+0x79],ah
  43bae8:	and    BYTE PTR [rip+0xa646c6c],ah        # 0xaa8275a
  43baee:	add    BYTE PTR [rax],al
  43baf0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43baf2:	je     0x43bb59
  43baf4:	jb     0x43bb16
  43baf6:	jae    0x43bb6c
  43baf8:	jb     0x43bb5f
  43bafa:	(bad)  
  43bafb:	ins    DWORD PTR es:[rdi],dx
  43bafc:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  43bb00:	gs jae 0x43bb77
  43bb03:	(bad)  
  43bb04:	ins    DWORD PTR es:[rdi],dx
  43bb05:	jo     0x43bb27
  43bb07:	imul   esi,DWORD PTR fs:[rbx+0x63],0x69746e6f
  43bb0f:	outs   dx,BYTE PTR ds:[rsi]
  43bb10:	jne    0x43bb7b
  43bb12:	je     0x43bb8d
  43bb14:	and    BYTE PTR [rip+0x2c646c6c],ah        # 0x2ca82786
  43bb1a:	and    BYTE PTR [rsi+0x65],ch
  43bb1d:	ja     0x43bb3f
  43bb1f:	outs   dx,DWORD PTR ds:[rsi]
  43bb20:	data16 data16 jae 0x43bb89
  43bb24:	je     0x43bb63
  43bb26:	and    BYTE PTR [rip+0xa646c6c],ah        # 0xaa82798
  43bb2c:	add    BYTE PTR [rax],al
  43bb2e:	add    BYTE PTR [rax],al
  43bb30:	je     0x43bb9b
  43bb32:	ins    DWORD PTR es:[rdi],dx
  43bb33:	gs jae 0x43bbaa
  43bb36:	(bad)  
  43bb37:	ins    DWORD PTR es:[rdi],dx
  43bb38:	jo     0x43bb5a
  43bb3a:	imul   esi,DWORD PTR fs:[rbx+0x63],0x69746e6f
  43bb42:	outs   dx,BYTE PTR ds:[rsi]
  43bb43:	jne    0x43bbae
  43bb45:	je     0x43bbc0
  43bb47:	and    BYTE PTR [rip+0x2c646c6c],ah        # 0x2ca827b9
  43bb4d:	and    BYTE PTR [rsi+0x65],ch
  43bb50:	ja     0x43bb72
  43bb52:	outs   dx,DWORD PTR ds:[rsi]
  43bb53:	data16 data16 jae 0x43bbbc
  43bb57:	je     0x43bb96
  43bb59:	and    BYTE PTR [rip+0xa646c6c],ah        # 0xaa827cb
  43bb5f:	add    BYTE PTR [rsp+rdx*2+0x53],al
  43bb63:	and    BYTE PTR [rip+0x2c646c6c],ah        # 0x2ca827d5
  43bb69:	and    BYTE PTR [rsi+0x65],ch
  43bb6c:	js     0x43bbe2
  43bb6e:	cmp    ah,BYTE PTR [rip+0x20646c6c]        # 0x20a827e0
  43bb74:	jae    0x43bbea
  43bb76:	cmp    ah,BYTE PTR [rip+0x6e692064]        # 0x6eacdbe0
  43bb7c:	jbe    0x43bbdf
  43bb7e:	ins    BYTE PTR es:[rdi],dx
  43bb7f:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x70706f72
  43bb87:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  43bb8e:	add    BYTE PTR [rax],al
  43bb90:	push   rax
  43bb91:	push   rsp
  43bb92:	push   rbx
  43bb93:	and    BYTE PTR [rip+0x2c646c6c],ah        # 0x2ca82805
  43bb99:	and    BYTE PTR [rsi+0x65],ch
  43bb9c:	js     0x43bc12
  43bb9e:	cmp    ah,BYTE PTR [rip+0x20646c6c]        # 0x20a82810
  43bba4:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  43bbab:	and    BYTE PTR [rdx+rsi*2+0x6f],ah
  43bbaf:	jo     0x43bc21
  43bbb1:	imul   ebp,DWORD PTR [rsi+0x67],0x3a747320
  43bbb8:	and    eax,0xa64
  43bbbd:	add    BYTE PTR [rax],al
  43bbbf:	add    BYTE PTR [rbp+riz*2+0x6d],ah
  43bbc3:	jne    0x43bc3d
  43bbc5:	gs jb  0x43bbf3
  43bbc8:	data16 ins WORD PTR es:[rdi],dx
  43bbcb:	jo     0x43bc32
  43bbcd:	and    BYTE PTR [eip+0x7369203e],ch        # 0x73acdc12
  43bbd4:	je     0x43bc35
  43bbd6:	imul   ebp,DWORD PTR [rsi+0x64],0x253a7865
  43bbdd:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  43bbe2:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3dc5c
  43bbe9:	je     0x43bc4a
  43bbeb:	jo     0x43bc61
  43bbed:	jae    0x43bc29
  43bbef:	and    eax,0x6b702073
  43bbf4:	je     0x43bc55
  43bbf6:	jo     0x43bc6c
  43bbf8:	jae    0x43bc59
  43bbfa:	je     0x43bc65
  43bbfc:	ins    DWORD PTR es:[rdi],dx
  43bbfd:	cmp    ah,BYTE PTR gs:[rip+0x6b702073]        # 0x6bb3dc77
  43bc04:	je     0x43bc65
  43bc06:	fs je  0x43bc7c
  43bc09:	cmp    ah,BYTE PTR [rip+0x6b702073]        # 0x6bb3dc82
  43bc0f:	je     0x43bc70
  43bc11:	fs je  0x43bc87
  43bc14:	pop    rdi
  43bc15:	je     0x43bc80
  43bc17:	ins    DWORD PTR es:[rdi],dx
  43bc18:	cmp    ah,BYTE PTR gs:[rip+0x666f2073]        # 0x66b2dc92
  43bc1f:	data16 cmp ah,BYTE PTR [rip+0x666f2073]        # 0x66b2dc99
  43bc26:	pop    di
  43bc28:	je     0x43bc93
  43bc2a:	ins    DWORD PTR es:[rdi],dx
  43bc2b:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x43c6a5
  43bc32:	add    BYTE PTR [rax],al
  43bc34:	add    BYTE PTR [rax],al
  43bc36:	add    BYTE PTR [rax],al
  43bc38:	rex.WRB jne 0x43bca7
  43bc3b:	je     0x43bca6
  43bc3d:	jo     0x43bcab
  43bc3f:	and    BYTE PTR gs:[rsi+0x72],ah
  43bc43:	(bad)  
  43bc44:	ins    DWORD PTR es:[rdi],dx
  43bc45:	gs jae 0x43bc68
  43bc48:	imul   ebp,DWORD PTR [rsi+0x20],0x61702061
  43bc4f:	movsxd ebp,DWORD PTR [rbx+0x65]
  43bc52:	je     0x43bc74
  43bc54:	data16 jb 0x43bcc6
  43bc57:	ins    DWORD PTR es:[rdi],dx
  43bc58:	and    BYTE PTR [rbx+0x74],dh
  43bc5b:	jb     0x43bcc2
  43bc5d:	(bad)  
  43bc5e:	ins    DWORD PTR es:[rdi],dx
  43bc5f:	and    BYTE PTR [rip+0x61000a64],ah        # 0x6143c6c9
  43bc65:	jbe    0x43bcc6
  43bc67:	jo     0x43bcca
  43bc69:	jb     0x43bcde
  43bc6b:	gs jb  0x43bccd
  43bc6e:	movsxd ebp,DWORD PTR [rax+0x61]
  43bc71:	outs   dx,BYTE PTR ds:[rsi]
  43bc72:	and    BYTE PTR gs:[esi+0x61],ah
  43bc77:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  43bc7f:	or     al,BYTE PTR [rax]
  43bc81:	(bad)  
  43bc82:	jbe    0x43bcf4
  43bc84:	imul   esp,DWORD PTR [rbx+0x74],0x5f657275
  43bc8b:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x6166
  43bc92:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  43bc9a:	or     al,BYTE PTR [rax]
  43bc9c:	rex.RB jb 0x43bd11
  43bc9f:	outs   dx,DWORD PTR ds:[rsi]
  43bca0:	jb     0x43bcc2
  43bca2:	ja     0x43bd0c
  43bca4:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x746c6966
  43bcac:	gs jb  0x43bd18
  43bcaf:	outs   dx,BYTE PTR ds:[rsi]
  43bcb0:	cmp    ah,BYTE PTR [eax]
  43bcb3:	and    eax,0x25000a73
  43bcb8:	jae    0x43bcda
  43bcba:	outs   dx,BYTE PTR gs:[rsi]
  43bcbc:	movsxd ebp,DWORD PTR [rdi+0x64]
  43bcbf:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
  43bcc6:	ins    BYTE PTR es:[rdi],dx
  43bcc7:	gs cmp ah,BYTE PTR fs:[rax]
  43bccb:	and    eax,0xa73
  43bcd0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43bcd2:	and    BYTE PTR [rbp+0x6f],ch
  43bcd5:	jb     0x43bd3c
  43bcd7:	and    BYTE PTR [rdi+0x75],ch
  43bcda:	je     0x43bd4c
  43bcdc:	jne    0x43bd52
  43bcde:	and    BYTE PTR [rbx+0x74],dh
  43bce1:	jb     0x43bd48
  43bce3:	(bad)  
  43bce4:	ins    DWORD PTR es:[rdi],dx
  43bce5:	jae    0x43bd07
  43bce7:	je     0x43bd58
  43bce9:	and    BYTE PTR [rdi+0x72],dh
  43bcec:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x202c6f74
  43bcf4:	imul   bp,WORD PTR [rsi+0x69],0x6873
  43bcfa:	imul   ebp,DWORD PTR [rsi+0x67],0x4e000a2e
  43bd01:	outs   dx,DWORD PTR ds:[rsi]
  43bd02:	and    BYTE PTR [rbp+0x6f],ch
  43bd05:	jb     0x43bd6c
  43bd07:	and    BYTE PTR [rcx+0x6e],ch
  43bd0a:	jo     0x43bd81
  43bd0c:	je     0x43bd81
  43bd0e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43bd12:	jb     0x43bd79
  43bd14:	(bad)  
  43bd15:	and    BYTE PTR fs:[rsi+0x72],ah
  43bd19:	outs   dx,DWORD PTR ds:[rsi]
  43bd1a:	ins    DWORD PTR es:[rdi],dx
  43bd1b:	sub    al,0x20
  43bd1d:	imul   bp,WORD PTR [rsi+0x69],0x6873
  43bd23:	imul   ebp,DWORD PTR [rsi+0x67],0x2d000a2e
  43bd2a:	add    BYTE PTR fs:[rax],al
  43bd2d:	add    BYTE PTR [rax],al
  43bd2f:	add    BYTE PTR [rbp+0x73],dl
  43bd32:	and    BYTE PTR gs:[rip+0x6f742068],ch        # 0x6fb7dda1
  43bd39:	and    BYTE PTR [rdi+0x65],ah
  43bd3c:	je     0x43bd5e
  43bd3e:	data16 jne 0x43bdad
  43bd41:	ins    BYTE PTR es:[rdi],dx
  43bd42:	and    BYTE PTR [rax+0x65],ch
  43bd45:	ins    BYTE PTR es:[rdi],dx
  43bd46:	jo     0x43bd68
  43bd48:	outs   dx,DWORD PTR ds:[rsi]
  43bd49:	jb     0x43bd77
  43bd4b:	and    BYTE PTR [rbp+0x76],ah
  43bd4e:	outs   dx,BYTE PTR gs:[rsi]
  43bd50:	and    BYTE PTR [rdx+0x65],ah
  43bd53:	je     0x43bdc9
  43bd55:	gs jb  0x43bd84
  43bd58:	and    BYTE PTR [rdx+0x75],dh
  43bd5b:	outs   dx,BYTE PTR ds:[rsi]
  43bd5c:	and    BYTE PTR [rdi],ah
  43bd5e:	ins    DWORD PTR es:[rdi],dx
  43bd5f:	(bad)  
  43bd60:	outs   dx,BYTE PTR ds:[rsi]
  43bd61:	and    BYTE PTR [rip+0xa2773],ah        # 0x4de4da
  43bd67:	add    BYTE PTR [rcx+0x74],al
  43bd6a:	and    BYTE PTR [rbp+riz*2+0x61],ch
  43bd6e:	jae    0x43bde4
  43bd70:	and    BYTE PTR [rdi+0x6e],ch
  43bd73:	and    BYTE PTR gs:[rdi+0x75],ch
  43bd77:	je     0x43bde9
  43bd79:	jne    0x43bdef
  43bd7b:	and    BYTE PTR [rsi+0x69],ah
  43bd7e:	ins    BYTE PTR es:[rdi],dx
  43bd7f:	and    BYTE PTR gs:[rbp+0x75],ch
  43bd83:	jae    0x43bdf9
  43bd85:	and    BYTE PTR [rdx+0x65],ah
  43bd88:	and    BYTE PTR [rbx+0x70],dh
  43bd8b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43bd8f:	imul   esp,DWORD PTR [rbp+0x64],0x6562000a
  43bd96:	outs   dx,BYTE PTR ds:[rsi]
  43bd97:	movsxd ebp,DWORD PTR [rax+0x3a]
  43bd9a:	and    BYTE PTR [rbp+0x74],dh
  43bd9d:	imul   ebp,DWORD PTR [rbp+0x65],0x2e30253d
  43bda4:	xor    esp,DWORD PTR [rsi+0x73]
  43bda7:	or     al,BYTE PTR [rax]
  43bda9:	add    BYTE PTR [rax],al
  43bdab:	add    BYTE PTR [rax],al
  43bdad:	add    BYTE PTR [rax],al
  43bdaf:	add    BYTE PTR [rip+0x20756c6c],ah        # 0x20b92a21
  43bdb5:	data16 jb 0x43be19
  43bdb8:	ins    DWORD PTR es:[rdi],dx
  43bdb9:	gs jae 0x43bddc
  43bdbc:	jae    0x43be33
  43bdbe:	movsxd esp,DWORD PTR [rbx+0x65]
  43bdc1:	jae    0x43be36
  43bdc3:	data16 jne 0x43be32
  43bdc6:	ins    BYTE PTR es:[rdi],dx
  43bdc7:	jns    0x43bde9
  43bdc9:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43bdce:	gs fs sub al,0x20
  43bdd2:	and    eax,0x20756c6c
  43bdd7:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43bddc:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  43bde3:	outs   dx,DWORD PTR ds:[rsi]
  43bde4:	jb     0x43be59
  43bde6:	or     al,BYTE PTR [rax]
  43bde8:	imul   esi,DWORD PTR fs:[rbx+0x70],0x7469736f
  43bdf0:	imul   ebp,DWORD PTR [rdi+0x6e],0x66656400
  43bdf7:	(bad)  
  43bdf8:	jne    0x43be66
  43bdfa:	je     0x43bdfc
  43bdfc:	fs jne 0x43be61
  43bdff:	add    BYTE PTR [rdi+0x72],ch
  43be02:	imul   esp,DWORD PTR [rdi+0x69],0x6c616e
  43be09:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43be0c:	ins    DWORD PTR es:[rdi],dx
  43be0d:	outs   dx,BYTE PTR gs:[rsi]
  43be0f:	je     0x43be11
  43be11:	ins    BYTE PTR es:[rdi],dx
  43be12:	jns    0x43be86
  43be14:	imul   esp,DWORD PTR [rbx+0x73],0x72616b00
  43be1b:	(bad)  
  43be1c:	outs   dx,DWORD PTR ds:[rsi]
  43be1d:	imul   esp,DWORD PTR [rbp+0x0],0x66
  43be21:	outs   dx,DWORD PTR ds:[rsi]
  43be22:	jb     0x43be87
  43be24:	gs add BYTE PTR fs:[rax+0x65],ch
  43be29:	(bad)  
  43be2a:	jb     0x43be95
  43be2c:	outs   dx,BYTE PTR ds:[rsi]
  43be2d:	addr32 pop rdi
  43be2f:	imul   ebp,DWORD PTR [rbp+0x70],0x65726961
  43be36:	add    BYTE PTR fs:[rsi+0x69],dh
  43be3a:	jae    0x43beb1
  43be3c:	(bad)  
  43be3d:	ins    BYTE PTR es:[rdi],dx
  43be3e:	pop    rdi
  43be3f:	imul   ebp,DWORD PTR [rbp+0x70],0x65726961
  43be46:	add    BYTE PTR fs:[rbx+0x6c],ah
  43be4a:	gs (bad) 
  43be4c:	outs   dx,BYTE PTR ds:[rsi]
  43be4d:	pop    rdi
  43be4e:	gs data16 movsxd si,DWORD PTR gs:[rbx+rsi*2+0x0]
  43be56:	movsxd esp,DWORD PTR [rcx+0x70]
  43be59:	je     0x43bec4
  43be5b:	outs   dx,DWORD PTR ds:[rsi]
  43be5c:	outs   dx,BYTE PTR ds:[rsi]
  43be5d:	jae    0x43be5f
  43be5f:	fs gs jae 0x43bec6
  43be63:	jb     0x43bece
  43be65:	jo     0x43bedb
  43be67:	imul   ebp,DWORD PTR [rdi+0x6e],0x656d0073
  43be6e:	je     0x43bed1
  43be70:	fs (bad) 
  43be72:	je     0x43bed5
	...
  43be80:	call   0x440242
	...
  43bea5:	add    al,ah
  43bea7:	ret    
  43bea8:	add    BYTE PTR [rax],al
  43beaa:	add    BYTE PTR [rax],al
  43beac:	add    BYTE PTR [rax],al
  43beae:	loopne 0x43bef3
	...
  43beb8:	sbb    eax,0x43b1
  43bebd:	add    BYTE PTR [rax],al
  43bebf:	add    ah,dh
  43bec1:	mov    ebp,0x43
	...
  43bed2:	add    BYTE PTR [rax],al
  43bed4:	add    BYTE PTR [rax],0x0
  43bed7:	add    BYTE PTR [rcx],al
	...
  43bef5:	add    BYTE PTR [rax],al
  43bef7:	add    BYTE PTR [rip+0x43b1],bl        # 0x4402ae
  43befd:	add    BYTE PTR [rax],al
  43beff:	add    ah,bh
  43bf01:	mov    ebp,0x43
	...
  43bf12:	add    BYTE PTR [rax],al
  43bf14:	add    BYTE PTR [rax],0x0
  43bf17:	add    BYTE PTR [rdx],al
	...
  43bf35:	add    BYTE PTR [rax],al
  43bf37:	add    BYTE PTR [rip+0x43b1],bl        # 0x4402ee
  43bf3d:	add    BYTE PTR [rax],al
  43bf3f:	add    BYTE PTR [rax],al
  43bf41:	mov    esi,0x43
	...
  43bf52:	add    BYTE PTR [rax],al
  43bf54:	add    BYTE PTR [rax],0x0
  43bf57:	add    BYTE PTR [rax+rax*1],al
	...
  43bf76:	add    BYTE PTR [rax],al
  43bf78:	sbb    eax,0x43b1
  43bf7d:	add    BYTE PTR [rax],al
  43bf7f:	add    BYTE PTR [rcx],cl
  43bf81:	mov    esi,0x43
	...
  43bf92:	add    BYTE PTR [rax],al
  43bf94:	add    BYTE PTR [rax],0x0
  43bf97:	add    BYTE PTR [rax],cl
	...
  43bfb5:	add    BYTE PTR [rax],al
  43bfb7:	add    BYTE PTR [rip+0x43b1],bl        # 0x44036e
  43bfbd:	add    BYTE PTR [rax],al
  43bfbf:	add    BYTE PTR [rcx],dl
  43bfc1:	mov    esi,0x43
	...
  43bfd2:	add    BYTE PTR [rax],al
  43bfd4:	add    BYTE PTR [rax],0x0
  43bfd7:	add    BYTE PTR [rax],dl
	...
  43bff5:	add    BYTE PTR [rax],al
  43bff7:	add    BYTE PTR [rip+0x43b1],bl        # 0x4403ae
  43bffd:	add    BYTE PTR [rax],al
  43bfff:	add    BYTE PTR [rax],bl
  43c001:	mov    esi,0x43
	...
  43c012:	add    BYTE PTR [rax],al
  43c014:	add    BYTE PTR [rax],0x0
  43c017:	add    BYTE PTR [rax],ah
	...
  43c035:	add    BYTE PTR [rax],al
  43c037:	add    BYTE PTR [rip+0x43b1],bl        # 0x4403ee
  43c03d:	add    BYTE PTR [rax],al
  43c03f:	add    BYTE PTR [rax],ah
  43c041:	mov    esi,0x43
	...
  43c052:	add    BYTE PTR [rax],al
  43c054:	add    BYTE PTR [rax],0x0
  43c057:	add    BYTE PTR [rax+0x0],al
	...
  43c076:	add    BYTE PTR [rax],al
  43c078:	sbb    eax,0x43b1
  43c07d:	add    BYTE PTR [rax],al
  43c07f:	add    BYTE PTR [rdi],ah
  43c081:	mov    esi,0x43
	...
  43c092:	add    BYTE PTR [rax],al
  43c094:	add    BYTE PTR [rax],0x0
  43c097:	add    BYTE PTR [rax+0x0],al
	...
  43c0b5:	add    BYTE PTR [rax],al
  43c0b7:	add    BYTE PTR [rip+0x43b1],bl        # 0x44046e
  43c0bd:	add    BYTE PTR [rax],al
  43c0bf:	add    BYTE PTR [rax],bh
  43c0c1:	mov    esi,0x43
	...
  43c0d2:	add    BYTE PTR [rax],al
  43c0d4:	add    BYTE PTR [rax],0x0
  43c0d7:	add    BYTE PTR [rax],al
  43c0d9:	add    DWORD PTR [rax],eax
	...
  43c0f7:	add    BYTE PTR [rip+0x43b1],bl        # 0x4404ae
  43c0fd:	add    BYTE PTR [rax],al
  43c0ff:	add    BYTE PTR [rax-0x42],cl
  43c102:	rex.XB add BYTE PTR [r8],al
	...
  43c111:	add    BYTE PTR [rax],al
  43c113:	add    BYTE PTR [rax+0x0],al
  43c119:	add    al,BYTE PTR [rax]
	...
  43c137:	add    BYTE PTR [rip+0x43b1],bl        # 0x4404ee
  43c13d:	add    BYTE PTR [rax],al
  43c13f:	add    BYTE PTR [rsi-0x42],dl
  43c142:	rex.XB add BYTE PTR [r8],al
	...
  43c151:	add    BYTE PTR [rax],al
  43c153:	add    BYTE PTR [rax+0x0],al
  43c159:	add    BYTE PTR [rcx],al
	...
  43c177:	add    BYTE PTR [rip+0x43b1],bl        # 0x44052e
  43c17d:	add    BYTE PTR [rax],al
  43c17f:	add    BYTE PTR [rdi-0x42],bl
  43c182:	rex.XB add BYTE PTR [r8],al
	...
  43c191:	add    BYTE PTR [rax],al
  43c193:	add    BYTE PTR [rax+0x0],al
  43c199:	add    BYTE PTR [rdx],al
	...
  43c1b7:	add    BYTE PTR [rip+0x43b1],bl        # 0x44056e
  43c1bd:	add    BYTE PTR [rax],al
  43c1bf:	add    BYTE PTR [rsi+rdi*4+0x43],ch
	...
  43c1d3:	add    BYTE PTR [rax+0x0],al
  43c1d9:	add    BYTE PTR [rax+rax*1],al
	...
  43c1f8:	sbb    eax,0x43b1
	...
  43c23d:	add    BYTE PTR [rax],al
  43c23f:	add    bl,dl
  43c241:	sahf   
  43c242:	rex.XB add BYTE PTR [r8],al
  43c245:	add    BYTE PTR [rax],al
  43c247:	add    BYTE PTR [rax],dh
  43c249:	sub    BYTE PTR [rdx+0x0],al
  43c24c:	add    BYTE PTR [rax],al
  43c24e:	add    BYTE PTR [rax],al
  43c250:	cmp    BYTE PTR [rsi+0x43],0x0
  43c257:	add    BYTE PTR [rdi+rbx*1+0x36],ah
	...
  43c28f:	add    BYTE PTR [rax+0x4144],ah
	...
  43c29d:	add    BYTE PTR [rax],al
  43c29f:	add    BYTE PTR [rsi+0x0],ch
  43c2a2:	outs   dx,BYTE PTR ds:[rsi]
  43c2a3:	pop    rdi
  43c2a4:	outs   dx,WORD PTR ds:[rsi]
  43c2a6:	jb     0x43c30b
  43c2a8:	gs add BYTE PTR fs:[rax+0x72],dh
  43c2ad:	gs jbe 0x43c30f
  43c2b0:	outs   dx,WORD PTR ds:[rsi]
  43c2b2:	jb     0x43c317
  43c2b4:	gs fs pop rdi
  43c2b7:	outs   dx,BYTE PTR ds:[rsi]
  43c2b8:	add    BYTE PTR [rax+0x72],dh
  43c2bb:	gs jbe 0x43c31d
  43c2be:	outs   dx,WORD PTR ds:[rsi]
  43c2c0:	jb     0x43c325
  43c2c2:	gs fs pop rdi
  43c2c5:	je     0x43c2c7
  43c2c7:	je     0x43c2c9
	...
  43c2dd:	add    BYTE PTR [rax],al
  43c2df:	add    BYTE PTR [rax+0x43c2],ah
  43c2e5:	add    BYTE PTR [rax],al
  43c2e7:	add    BYTE PTR [rdx+0x43c2],ah
  43c2ed:	add    BYTE PTR [rax],al
  43c2ef:	add    BYTE PTR [rbx+0x43c2],ch
  43c2f5:	add    BYTE PTR [rax],al
  43c2f7:	add    BYTE PTR [rcx+0x43c2],bh
  43c2fd:	add    BYTE PTR [rax],al
  43c2ff:	add    bh,al
  43c301:	ret    0x43
	...
  43c310:	rol    BYTE PTR [rdi],1
  43c312:	add    BYTE PTR [rax],al
  43c314:	data16 ins WORD PTR es:[rdi],dx
  43c317:	jo     0x43c37e
  43c319:	add    BYTE PTR [eax],al
  43c31c:	add    BYTE PTR [rax],al
  43c31e:	add    BYTE PTR [rax],al
  43c320:	jnp    0x43c336
  43c322:	scas   al,BYTE PTR es:[rdi]
  43c323:	rex.RXB loope 0x43c3a0
  43c326:	test   BYTE PTR [rdi],bh
  43c328:	add    BYTE PTR [rax],al
  43c32a:	in     al,dx
  43c32b:	rex.X add BYTE PTR [rax],al
  43c32e:	add    BYTE PTR [rax],al
  43c330:	add    BYTE PTR [rax],al
  43c332:	add    BYTE PTR [rax],al
  43c334:	add    al,ah
  43c336:	outs   dx,DWORD PTR ds:[rsi]
  43c337:	add    BYTE PTR [rax],al
  43c33a:	add    BYTE PTR [rax],al
  43c33c:	add    BYTE PTR [rax],al
  43c33e:	and    al,0xc0
  43c340:	(bad)  
  43c341:	push   rbp
  43c342:	mov    ch,0xbb
  43c344:	mov    cl,0x6b
  43c346:	add    al,BYTE PTR [rax+0x0]
  43c349:	add    BYTE PTR [rax],al
  43c34b:	add    BYTE PTR [rax],al
  43c34d:	add    BYTE PTR [rax+0x3f],dl
  43c350:	add    BYTE PTR [rax],al
  43c352:	add    BYTE PTR [rax],al
  43c354:	add    BYTE PTR [rax-0x71],al
  43c357:	add    BYTE PTR [rax],al
  43c35a:	cmp    BYTE PTR [rdi+0x0],0x0
  43c361:	add    BYTE PTR [rax],al
  43c363:	add    BYTE PTR [rax],al
  43c365:	add    al,dh
  43c367:	mov    edi,0x0
  43c36c:	add    BYTE PTR [rsi+rbp*1-0x7fffffbf],0x3f
  43c374:	add    BYTE PTR [rax],al
  43c376:	add    BYTE PTR [rax],al
  43c378:	data16 data16 data16 data16 data16 out 0x23,al
  43c37f:	add    BYTE PTR [rax],al
  43c382:	add    BYTE PTR [rax],al
  43c384:	add    BYTE PTR [rax],al
  43c386:	sar    BYTE PTR [rdi],1
  43c388:	add    BYTE PTR [rax],al
  43c38a:	add    BYTE PTR [rax],al
  43c38c:	add    BYTE PTR [rax],al
  43c38e:	pop    rcx
  43c38f:	add    BYTE PTR [rax],al
	...
  43c39e:	clc    
  43c39f:	jg     0x43c3a1
  43c3a1:	add    BYTE PTR [rax],al
  43c3a3:	add    BYTE PTR [rax],al
  43c3a5:	add    al,dh
  43c3a7:	(bad)  
	...
  43c3b4:	add    BYTE PTR [rax],al
  43c3b6:	add    BYTE PTR [rax+0x0],al
  43c3bc:	add    BYTE PTR [rax],al
  43c3be:	add    BYTE PTR [rax],al
  43c3c0:	xor    esi,DWORD PTR [rbx]
  43c3c2:	xor    esi,DWORD PTR [rbx]
  43c3c4:	xor    esi,DWORD PTR [rbx]
  43c3c6:	jrcxz  0x43c387
  43c3c8:	add    BYTE PTR [rax],al
  43c3ca:	add    BYTE PTR [rax],al
  43c3cc:	add    BYTE PTR [rax],al
  43c3ce:	loopne 0x43c40f
  43c3d0:	(bad)  
  43c3d1:	cdq    
  43c3d2:	cdq    
  43c3d3:	cdq    
  43c3d4:	cdq    
  43c3d5:	cdq    
  43c3d6:	icebp  
  43c3d7:	mov    edi,0x9999999a
  43c3dc:	cdq    
  43c3dd:	cdq    
  43c3de:	icebp  
  43c3df:	(bad)  
  43c3e0:	xor    esi,DWORD PTR [rbx]
  43c3e2:	xor    esi,DWORD PTR [rbx]
  43c3e4:	xor    esi,DWORD PTR [rbx]
  43c3e6:	jrcxz  0x43c427
  43c3e8:	add    BYTE PTR [rax],al
  43c3ea:	lock add BYTE PTR [r8],al
  43c3ee:	add    BYTE PTR [rax],al
  43c3f0:	cld    
  43c3f1:	test   eax,0x624dd2f1
  43c3f6:	(bad)  
  43c3f7:	(bad)  
  43c3f8:	cld    
  43c3f9:	test   eax,0x624dd2f1
  43c3fe:	push   rax
  43c3ff:	(bad)  
  43c400:	add    BYTE PTR [rax],al
  43c402:	add    BYTE PTR [rax],al
  43c404:	add    BYTE PTR [rax],al
  43c406:	loopne 0x43c446
  43c408:	add    BYTE PTR [rax],al
  43c40a:	add    BYTE PTR [rax],al
  43c40c:	add    BYTE PTR [rax],al
  43c40e:	loopne 0x43c3ce
  43c410:	add    BYTE PTR [rax],al
  43c412:	add    BYTE PTR [rax],al
  43c414:	add    BYTE PTR [rax],al
  43c416:	loopne 0x43c3db
  43c418:	(bad)  
  43c419:	in     eax,dx
  43c41a:	mov    ch,0xa0
  43c41c:	test   esi,0x3eb0
  43c422:	add    BYTE PTR [rax+0x0],al
	...
  43c430:	add    BYTE PTR [rsp+rsi*2],ah
  43c433:	rex.WB add BYTE PTR [r8],al
	...
  43c43e:	add    BYTE PTR [rax],al
  43c440:	push   rbp
  43c441:	outs   dx,BYTE PTR ds:[rsi]
  43c442:	(bad)  
  43c443:	(bad)  
  43c444:	ins    BYTE PTR es:[rdi],dx
  43c445:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  43c44a:	ins    BYTE PTR es:[rdi],dx
  43c44b:	outs   dx,DWORD PTR ds:[rsi]
  43c44c:	movsxd ebp,DWORD PTR [rbx+0x20]
  43c44f:	rex.R pop rax
  43c451:	push   rsi
  43c452:	xor    spl,BYTE PTR [r8]
  43c455:	jae    0x43c4cc
  43c457:	jb     0x43c4bf
  43c459:	(bad)  
  43c45a:	movsxd esp,DWORD PTR [rbp+0xa]
  43c45d:	add    BYTE PTR [rax],al
  43c45f:	add    BYTE PTR [rsi+0x72],ah
  43c462:	(bad)  
  43c463:	ins    DWORD PTR es:[rdi],dx
  43c464:	gs sub eax,0x726f663e
  43c46a:	ins    DWORD PTR es:[rdi],dx
  43c46b:	(bad)  
  43c46c:	je     0x43c48e
  43c46e:	cmp    eax,0x5641203d
  43c473:	pop    rdi
  43c474:	push   rax
  43c475:	rex.WB pop r8
  43c477:	pop    rdi
  43c478:	rex.RX
  43c479:	rex.WRB push r12
  43c47b:	pop    rdi
  43c47c:	rex.R pop rax
  43c47e:	push   rsi
  43c47f:	xor    bl,BYTE PTR [r15+0x56]
  43c483:	rex.WR
  43c484:	add    BYTE PTR [rcx+0x73],r8b
  43c488:	jae    0x43c4ef
  43c48a:	jb     0x43c500
  43c48c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  43c493:	data16 (bad) 
  43c495:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  43c49d:	and    eax,0x64253a73
  43c4a2:	or     al,BYTE PTR [rax]
  43c4a4:	data16 ins WORD PTR es:[rdi],dx
  43c4a7:	jo     0x43c50e
  43c4a9:	addr32 pop rdi
  43c4ab:	fs js  0x43c524
  43c4ae:	(bad)  
  43c4af:	xor    ch,BYTE PTR [rsi]
  43c4b1:	movsxd eax,DWORD PTR [rax]
  43c4b3:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43c4b5:	and    BYTE PTR [rsi+0x72],ah
  43c4b8:	gs and BYTE PTR gs:[rax+rbx*2+0x56],al
  43c4be:	xor    spl,BYTE PTR [r8]
  43c4c1:	jae    0x43c538
  43c4c3:	jb     0x43c52b
  43c4c5:	(bad)  
  43c4c6:	movsxd esp,DWORD PTR [rbp+0x21]
  43c4c9:	or     al,BYTE PTR [rax]
  43c4cb:	add    BYTE PTR [rax],al
  43c4cd:	add    BYTE PTR [rax],al
  43c4cf:	add    BYTE PTR [rsi+0x61],al
  43c4d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c4da:	jb     0x43c541
  43c4dc:	je     0x43c550
  43c4de:	imul   esp,DWORD PTR [rbp+0x76],0x65642065
  43c4e5:	movsxd ebp,DWORD PTR [rdi+0x64]
  43c4e8:	gs jb  0x43c50b
  43c4eb:	fs gs jbe 0x43c558
  43c4ef:	movsxd esp,DWORD PTR [rbp+0x20]
  43c4f2:	rex.RXB push r13
  43c4f4:	rex.WB
  43c4f5:	rex.R jae 0x43c502
	...
  43c500:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43c502:	and    BYTE PTR [rbp+riz*2+0x63],ah
  43c506:	outs   dx,DWORD PTR ds:[rsi]
  43c507:	fs gs jb 0x43c52b
  43c50b:	fs gs jbe 0x43c578
  43c50f:	movsxd esp,DWORD PTR [rbp+0x20]
  43c512:	outs   dx,WORD PTR ds:[rsi]
  43c514:	jb     0x43c536
  43c516:	movsxd ebp,DWORD PTR [rdi+0x64]
  43c519:	movsxd esp,DWORD PTR gs:[rax]
  43c51c:	outs   dx,WORD PTR ds:[rsi]
  43c51e:	jne    0x43c58e
  43c520:	or     al,BYTE PTR fs:[rax]
  43c523:	add    BYTE PTR [rax],al
  43c525:	add    BYTE PTR [rax],al
  43c527:	add    BYTE PTR [rbp+0x6e],dl
  43c52a:	(bad)  
  43c52b:	(bad)  
  43c52c:	ins    BYTE PTR es:[rdi],dx
  43c52d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  43c532:	jb     0x43c599
  43c534:	je     0x43c5a8
  43c536:	imul   esp,DWORD PTR [rbp+0x76],0x65642065
  43c53d:	movsxd ebp,DWORD PTR [rdi+0x64]
  43c540:	gs jb  0x43c563
  43c543:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43c546:	imul   sp,WORD PTR [rdi+0x75],0x6172
  43c54c:	je     0x43c5b7
  43c54e:	outs   dx,DWORD PTR ds:[rsi]
  43c54f:	outs   dx,BYTE PTR ds:[rsi]
  43c550:	jae    0x43c55c
  43c552:	add    BYTE PTR [rax],al
  43c554:	add    BYTE PTR [rax],al
  43c556:	add    BYTE PTR [rax],al
  43c558:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  43c55a:	and    BYTE PTR [rsi+0x61],dh
  43c55d:	ins    BYTE PTR es:[rdi],dx
  43c55e:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x646f6365
  43c566:	gs jb  0x43c589
  43c569:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43c56c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  43c572:	je     0x43c5dd
  43c574:	outs   dx,DWORD PTR ds:[rsi]
  43c575:	outs   dx,BYTE PTR ds:[rsi]
  43c576:	and    BYTE PTR [rcx+0x76],ah
  43c579:	(bad)  
  43c57a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0xa656c
  43c582:	add    BYTE PTR [rax],al
  43c584:	add    BYTE PTR [rax],al
  43c586:	add    BYTE PTR [rax],al
  43c588:	push   rbp
  43c589:	outs   dx,BYTE PTR ds:[rsi]
  43c58a:	(bad)  
  43c58b:	(bad)  
  43c58c:	ins    BYTE PTR es:[rdi],dx
  43c58d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  43c592:	(bad)  
  43c593:	ins    BYTE PTR es:[rdi],dx
  43c594:	ins    BYTE PTR es:[rdi],dx
  43c595:	outs   dx,DWORD PTR ds:[rsi]
  43c596:	movsxd esp,DWORD PTR [rcx+0x74]
  43c599:	and    BYTE PTR gs:[rbx+0x75],dh
  43c59d:	jb     0x43c605
  43c59f:	(bad)  
  43c5a0:	movsxd esp,DWORD PTR [rbp+0x20]
  43c5a3:	(bad)  
  43c5a4:	jb     0x43c618
  43c5a6:	(bad)  
  43c5a7:	jns    0x43c61c
  43c5a9:	or     al,BYTE PTR [rax]
  43c5ab:	add    BYTE PTR [rax],al
  43c5ad:	add    BYTE PTR [rax],al
  43c5af:	add    BYTE PTR [rsi+0x61],al
  43c5b2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c5ba:	movsxd esi,DWORD PTR [rdx+0x65]
  43c5bd:	(bad)  
  43c5be:	je     0x43c625
  43c5c0:	and    BYTE PTR [rip+0x69762064],ah        # 0x69b9e62a
  43c5c6:	fs outs dx,DWORD PTR gs:[rsi]
  43c5c9:	and    BYTE PTR [rbx+0x75],dh
  43c5cc:	jb     0x43c634
  43c5ce:	(bad)  
  43c5cf:	movsxd esp,DWORD PTR [rbp+0x73]
  43c5d2:	or     al,BYTE PTR [rax]
  43c5d4:	add    BYTE PTR [rax],al
  43c5d6:	add    BYTE PTR [rax],al
  43c5d8:	rex.RX (bad) 
  43c5da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c5e2:	movsxd esi,DWORD PTR [rdx+0x65]
  43c5e5:	(bad)  
  43c5e6:	je     0x43c64d
  43c5e8:	and    BYTE PTR [rax+rbx*2+0x56],al
  43c5ec:	xor    spl,BYTE PTR [r8]
  43c5ef:	jbe    0x43c65a
  43c5f1:	fs outs dx,DWORD PTR gs:[rsi]
  43c5f4:	and    BYTE PTR [rbp+riz*2+0x63],ah
  43c5f8:	outs   dx,DWORD PTR ds:[rsi]
  43c5f9:	fs gs jb 0x43c607
  43c5fd:	add    BYTE PTR [rbx+rsi*1+0x64],ah
  43c601:	cmp    DWORD PTR [rsi],ebp
  43c603:	fs ins BYTE PTR es:[rdi],dx
  43c605:	ins    BYTE PTR es:[rdi],dx
  43c606:	add    BYTE PTR [rsi+0x61],al
  43c609:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c611:	ins    BYTE PTR es:[rdi],dx
  43c612:	outs   dx,DWORD PTR ds:[rsi]
  43c613:	(bad)  
  43c614:	and    BYTE PTR fs:[rbx+rsi*1+0x44],al
  43c619:	cmp    DWORD PTR [rax],esp
  43c61b:	ins    BYTE PTR es:[rdi],dx
  43c61c:	imul   esp,DWORD PTR [rdx+0x72],0xa797261
  43c623:	add    BYTE PTR [rax+rdi*2+0x76],ah
  43c627:	(bad)  
  43c628:	xor    ch,BYTE PTR [rsi]
  43c62a:	fs ins BYTE PTR es:[rdi],dx
  43c62c:	ins    BYTE PTR es:[rdi],dx
  43c62d:	add    BYTE PTR [rsi+0x61],al
  43c630:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c638:	ins    BYTE PTR es:[rdi],dx
  43c639:	outs   dx,DWORD PTR ds:[rsi]
  43c63a:	(bad)  
  43c63b:	and    BYTE PTR fs:[rax+rbx*2+0x56],al
  43c640:	xor    spl,BYTE PTR [r8]
  43c643:	ins    BYTE PTR es:[rdi],dx
  43c644:	imul   esp,DWORD PTR [rdx+0x72],0xa797261
  43c64b:	add    BYTE PTR [rcx+rbp*2+0x72],al
  43c64f:	movsxd esi,DWORD PTR gs:[rbx+rsi*1+0x44]
  43c654:	rex.XB jb 0x43c6bc
  43c657:	(bad)  
  43c658:	je     0x43c6bf
  43c65a:	cmp    DWORD PTR [rax],eax
  43c65c:	add    BYTE PTR [rax],al
  43c65e:	add    BYTE PTR [rax],al
  43c660:	rex.RX (bad) 
  43c662:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c66a:	ins    BYTE PTR es:[rdi],dx
  43c66b:	outs   dx,DWORD PTR ds:[rsi]
  43c66c:	movsxd esp,DWORD PTR [rcx+0x74]
  43c66f:	and    BYTE PTR gs:[rcx+rbp*2+0x72],al
  43c674:	movsxd esi,DWORD PTR gs:[rbx+rsi*1+0x44]
  43c679:	rex.XB jb 0x43c6e1
  43c67c:	(bad)  
  43c67d:	je     0x43c6e4
  43c67f:	cmp    DWORD PTR [rdx],ecx
  43c681:	add    BYTE PTR [rax],al
  43c683:	add    BYTE PTR [rax],al
  43c685:	add    BYTE PTR [rax],al
  43c687:	add    BYTE PTR [rax+rbx*2+0x56],al
  43c68b:	xor    al,BYTE PTR [r11+0x72]
  43c68f:	gs (bad) 
  43c691:	je     0x43c6f8
  43c693:	imul   r14d,DWORD PTR [rdx+0x65],0x44337463
  43c69b:	rex.R
  43c69c:	gs jbe 0x43c708
  43c69f:	movsxd esp,DWORD PTR [rbp+0x4d]
  43c6a2:	(bad)  
  43c6a3:	outs   dx,BYTE PTR ds:[rsi]
  43c6a4:	(bad)  
  43c6a5:	addr32 gs jb 0x43c6e2
  43c6a9:	add    BYTE PTR [rax],al
  43c6ab:	add    BYTE PTR [rax],al
  43c6ad:	add    BYTE PTR [rax],al
  43c6af:	add    BYTE PTR [rsi+0x61],al
  43c6b2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c6ba:	ins    BYTE PTR es:[rdi],dx
  43c6bb:	outs   dx,DWORD PTR ds:[rsi]
  43c6bc:	movsxd esp,DWORD PTR [rcx+0x74]
  43c6bf:	and    BYTE PTR gs:[rax+rbx*2+0x56],al
  43c6c4:	xor    al,BYTE PTR [r11+0x72]
  43c6c8:	gs (bad) 
  43c6ca:	je     0x43c731
  43c6cc:	imul   r14d,DWORD PTR [rdx+0x65],0x44337463
  43c6d4:	rex.R
  43c6d5:	gs jbe 0x43c741
  43c6d8:	movsxd esp,DWORD PTR [rbp+0x4d]
  43c6db:	(bad)  
  43c6dc:	outs   dx,BYTE PTR ds:[rsi]
  43c6dd:	(bad)  
  43c6de:	addr32 gs jb 0x43c71b
  43c6e2:	or     al,BYTE PTR [rax]
  43c6e4:	add    BYTE PTR [rax],al
  43c6e6:	add    BYTE PTR [rax],al
  43c6e8:	rex.RX (bad) 
  43c6ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c6f2:	movsxd esi,DWORD PTR [rdx+0x65]
  43c6f5:	(bad)  
  43c6f6:	je     0x43c75d
  43c6f8:	and    BYTE PTR [rcx+0x44],cl
  43c6fb:	imul   esi,DWORD PTR [rdx+0x65],0x44337463
  43c702:	and    BYTE PTR [rdi+0x62],ch
  43c705:	push   0x65
  43c707:	movsxd esi,DWORD PTR [rdx+rcx*1+0x0]
  43c70b:	push   rbp
  43c70c:	jae    0x43c777
  43c70e:	outs   dx,BYTE PTR ds:[rsi]
  43c70f:	and    BYTE PTR [eax+0x57],cl
  43c713:	movsxd esp,DWORD PTR [r11+0x65]
  43c717:	ins    BYTE PTR es:[rdi],dx
  43c718:	and    BYTE PTR [rbp+riz*2+0x76],ah
  43c71c:	imul   esp,DWORD PTR [rbx+0x65],0xa642520
  43c723:	add    BYTE PTR [rax],al
  43c725:	add    BYTE PTR [rax],al
  43c727:	add    BYTE PTR [rsi+0x61],al
  43c72a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c732:	movsxd esi,DWORD PTR [rdx+0x65]
  43c735:	(bad)  
  43c736:	je     0x43c79d
  43c738:	and    BYTE PTR [rcx+rbp*2+0x72],al
  43c73c:	movsxd esi,DWORD PTR gs:[rbx+rsi*1+0x44]
  43c741:	and    BYTE PTR [rbp+riz*2+0x76],ah
  43c745:	imul   esp,DWORD PTR [rbx+0x65],0xa
  43c74c:	add    BYTE PTR [rax],al
  43c74e:	add    BYTE PTR [rax],al
  43c750:	rex.RX (bad) 
  43c752:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c75a:	movsxd esi,DWORD PTR [rdx+0x65]
  43c75d:	(bad)  
  43c75e:	je     0x43c7c5
  43c760:	and    BYTE PTR [rcx+rbp*2+0x72],al
  43c764:	movsxd esi,DWORD PTR gs:[rbx+rsi*1+0x44]
  43c769:	and    BYTE PTR [rbp+riz*2+0x76],ah
  43c76d:	imul   esp,DWORD PTR [rbx+0x65],0x6e616d20
  43c774:	(bad)  
  43c775:	addr32 gs jb 0x43c783
  43c779:	add    BYTE PTR [rax],al
  43c77b:	add    BYTE PTR [rax],al
  43c77d:	add    BYTE PTR [rax],al
  43c77f:	add    BYTE PTR [rsi+0x61],al
  43c782:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c78a:	(bad)  
  43c78b:	imul   ebp,DWORD PTR [rsi+0x64],0x72694420
  43c792:	movsxd esi,DWORD PTR gs:[rbx+rsi*1+0x44]
  43c797:	and    BYTE PTR [rbp+riz*2+0x76],ah
  43c79b:	imul   esp,DWORD PTR [rbx+0x65],0x206f7420
  43c7a2:	fs gs jbe 0x43c80f
  43c7a6:	movsxd esp,DWORD PTR [rbp+0x20]
  43c7a9:	ins    DWORD PTR es:[rdi],dx
  43c7aa:	(bad)  
  43c7ab:	outs   dx,BYTE PTR ds:[rsi]
  43c7ac:	(bad)  
  43c7ad:	addr32 gs jb 0x43c7bb
  43c7b1:	add    BYTE PTR [rsi+0x61],al
  43c7b4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c7bc:	outs   dx,DWORD PTR ds:[rsi]
  43c7bd:	jo     0x43c824
  43c7bf:	outs   dx,BYTE PTR ds:[rsi]
  43c7c0:	and    BYTE PTR [rbp+riz*2+0x76],ah
  43c7c4:	imul   esp,DWORD PTR [rbx+0x65],0x6e616820
  43c7cb:	fs ins BYTE PTR es:[rdi],dx
  43c7cd:	or     al,BYTE PTR gs:[rax]
  43c7d0:	rex.RX (bad) 
  43c7d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  43c7da:	movsxd esi,DWORD PTR [rdx+0x65]
  43c7dd:	(bad)  
  43c7de:	je     0x43c845
  43c7e0:	and    BYTE PTR [rcx+0x44],cl
  43c7e3:	imul   esi,DWORD PTR [rdx+0x65],0x56587463
  43c7ea:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x6f636544
  43c7f2:	fs gs jb 0x43c849
  43c7f6:	gs jb  0x43c86f
  43c7f9:	imul   esp,DWORD PTR [rbx+0x65],0xa
  43c800:	push   rbp
  43c801:	outs   dx,BYTE PTR ds:[rsi]
  43c802:	jae    0x43c879
  43c804:	jo     0x43c876
  43c806:	outs   dx,DWORD PTR ds:[rsi]
  43c807:	jb     0x43c87d
  43c809:	gs and BYTE PTR fs:[rax+0x2e],cl
  43c80e:	xor    dh,BYTE PTR [rsi]
  43c810:	xor    al,0x20
  43c812:	jo     0x43c886
  43c814:	outs   dx,DWORD PTR ds:[rsi]
  43c815:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f66
  43c81c:	jb     0x43c83e
  43c81e:	rex.R pop rax
  43c820:	push   rsi
  43c821:	xor    spl,BYTE PTR [r8]
  43c824:	rex.W push rdi
  43c826:	movsxd esp,DWORD PTR [r11+0x65]
  43c82a:	ins    BYTE PTR es:[rdi],dx
  43c82b:	cmp    ah,BYTE PTR [rax]
  43c82d:	and    eax,0xa64
  43c832:	add    BYTE PTR [rax],al
  43c834:	add    BYTE PTR [rax],al
  43c836:	add    BYTE PTR [rax],al
  43c838:	rex.RB jb 0x43c8ad
  43c83b:	outs   dx,DWORD PTR ds:[rsi]
  43c83c:	jb     0x43c85e
  43c83e:	movsxd esi,DWORD PTR [rdx+0x65]
  43c841:	(bad)  
  43c842:	je     0x43c8ad
  43c844:	outs   dx,BYTE PTR ds:[rsi]
  43c845:	and    BYTE PTR [eax+ebp*2+0x65],dh
  43c84a:	and    BYTE PTR [rax+rbx*2+0x56],al
  43c84e:	xor    spl,BYTE PTR [r8]
  43c851:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43c856:	gs jb  0x43c863
	...
  43c87d:	add    BYTE PTR [rax],al
  43c87f:	add    al,al
  43c881:	fld    DWORD PTR [rbx+0x0]
  43c884:	add    BYTE PTR [rax],al
  43c886:	add    BYTE PTR [rax],al
  43c888:	add    al,BYTE PTR [rax]
  43c88a:	add    BYTE PTR [rax],al
  43c88c:	add    BYTE PTR [rax],al
  43c88e:	add    BYTE PTR [rax],al
  43c890:	rcr    cl,1
  43c892:	rex.XB add BYTE PTR [r8],al
  43c895:	add    BYTE PTR [rax],al
  43c897:	add    BYTE PTR [rdx],al
  43c899:	add    BYTE PTR [rax],al
  43c89b:	add    BYTE PTR [rax],al
  43c89d:	add    BYTE PTR [rax],al
  43c89f:	add    BYTE PTR [rax+0x43d9],ah
  43c8a5:	add    BYTE PTR [rax],al
  43c8a7:	add    BYTE PTR [rax+rax*1],bl
  43c8aa:	add    BYTE PTR [rax],al
  43c8ac:	add    BYTE PTR [rax],al
  43c8ae:	add    BYTE PTR [rax],al
  43c8b0:	nop
  43c8b1:	fld    DWORD PTR [rbx+0x0]
  43c8b4:	add    BYTE PTR [rax],al
  43c8b6:	add    BYTE PTR [rax],al
  43c8b8:	sbb    al,0x0
  43c8ba:	add    BYTE PTR [rax],al
  43c8bc:	add    BYTE PTR [rax],al
  43c8be:	add    BYTE PTR [rax],al
  43c8c0:	adc    dl,bl
  43c8c2:	rex.XB add BYTE PTR [r8],al
  43c8c5:	add    BYTE PTR [rax],al
  43c8c7:	add    BYTE PTR [rax+rax*1],bl
  43c8ca:	add    BYTE PTR [rax],al
  43c8cc:	add    BYTE PTR [rax],al
  43c8ce:	add    BYTE PTR [rax],al
  43c8d0:	lock fld DWORD PTR [rbx+0x0]
  43c8d4:	add    BYTE PTR [rax],al
  43c8d6:	add    BYTE PTR [rax],al
  43c8d8:	rex.RXB add BYTE PTR [r8],r8b
  43c8db:	add    BYTE PTR [rax],al
  43c8dd:	add    BYTE PTR [rax],al
  43c8df:	add    al,dh
  43c8e1:	fld    DWORD PTR [rbx+0x0]
  43c8e4:	add    BYTE PTR [rax],al
  43c8e6:	add    BYTE PTR [rax],al
  43c8e8:	rex.W add BYTE PTR [rax],al
  43c8eb:	add    BYTE PTR [rax],al
  43c8ed:	add    BYTE PTR [rax],al
  43c8ef:	add    al,ah
  43c8f1:	fld    DWORD PTR [rbx+0x0]
  43c8f4:	add    BYTE PTR [rax],al
  43c8f6:	add    BYTE PTR [rax],al
  43c8f8:	rex.RXB add BYTE PTR [r8],r8b
  43c8fb:	add    BYTE PTR [rax],al
  43c8fd:	add    BYTE PTR [rax],al
  43c8ff:	add    al,ah
  43c901:	fld    DWORD PTR [rbx+0x0]
  43c904:	add    BYTE PTR [rax],al
  43c906:	add    BYTE PTR [rax],al
  43c908:	rex.W add BYTE PTR [rax],al
  43c90b:	add    BYTE PTR [rax],al
  43c90d:	add    BYTE PTR [rax],al
  43c90f:	add    BYTE PTR [rax+0x43d9],dh
  43c915:	add    BYTE PTR [rax],al
  43c917:	add    BYTE PTR [rip+0x483236],dh        # 0x8bfb53
	...
  43c93d:	add    BYTE PTR [rax],al
  43c93f:	add    al,al
  43c941:	(bad)  
  43c942:	add    BYTE PTR [rax],r8b
  43c945:	add    BYTE PTR [rax],al
  43c947:	add    al,al
  43c949:	and    al,BYTE PTR [rax+rax*1+0x0]
  43c94d:	add    BYTE PTR [rax],al
  43c94f:	add    BYTE PTR [rax+0x2c],ah
  43c952:	rex.X add BYTE PTR [rax],al
	...
  43c95d:	add    BYTE PTR [rax],al
  43c95f:	add    BYTE PTR [rcx+0x72],al
  43c962:	addr32 jne 0x43c9d2
  43c965:	outs   dx,BYTE PTR gs:[rsi]
  43c967:	je     0x43c989
  43c969:	outs   dx,DWORD PTR fs:[rsi]
  43c96b:	ins    DWORD PTR es:[rdi],dx
  43c96c:	(bad)  
  43c96d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  43c974:	jb     0x43c996
  43c976:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  43c97a:	rex.B
  43c97b:	rex.WB
  43c97c:	rex.WRX sub QWORD PTR [rax],r8
  43c97f:	rex.B jb 0x43c9e9
  43c982:	jne    0x43c9f1
  43c984:	outs   dx,BYTE PTR gs:[rsi]
  43c986:	je     0x43c9a8
  43c988:	jae    0x43c9f3
  43c98a:	outs   dx,BYTE PTR ds:[rsi]
  43c98b:	addr32 jne 0x43c9fa
  43c98e:	(bad)  
  43c98f:	jb     0x43c9fa
  43c991:	je     0x43ca0c
  43c993:	and    BYTE PTR [rax],ch
  43c995:	push   rbx
  43c996:	rex.WB
  43c997:	rex.RXB
  43c998:	rex.WRX sub QWORD PTR [rax],r8
  43c99b:	add    BYTE PTR [rax],al
  43c99d:	add    BYTE PTR [rax],al
  43c99f:	add    BYTE PTR [rdi+0x76],cl
  43c9a2:	gs jb  0x43ca0b
  43c9a5:	ins    BYTE PTR es:[rdi],dx
  43c9a6:	outs   dx,DWORD PTR ds:[rsi]
  43c9a7:	ja     0x43c9c9
  43c9a9:	jb     0x43ca0c
  43c9ab:	outs   dx,BYTE PTR ds:[rsi]
  43c9ac:	and    BYTE PTR gs:[ebp+0x72],ah
  43c9b1:	jb     0x43ca22
  43c9b3:	jb     0x43c9d5
  43c9b5:	sub    BYTE PTR [rdi+0x56],cl
  43c9b8:	rex.RB push r10
  43c9ba:	rex.RX
  43c9bb:	rex.WR
  43c9bc:	rex.WRXB push r15
  43c9be:	sub    DWORD PTR [rax],eax
  43c9c0:	push   rax
  43c9c1:	(bad)  
  43c9c2:	jb     0x43ca38
  43c9c4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  43c9cb:	jae    0x43c9ed
  43c9cd:	outs   dx,DWORD PTR ds:[rsi]
  43c9ce:	data16 and BYTE PTR [rbx+0x69],dh
  43c9d2:	outs   dx,BYTE PTR ds:[esi]
  43c9d4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  43c9db:	and    BYTE PTR gs:[rax],ch
  43c9de:	push   rax
  43c9df:	rex.WR
  43c9e0:	rex.WRXB push r11
  43c9e2:	push   rbx
  43c9e3:	sub    DWORD PTR [rax],eax
  43c9e5:	add    BYTE PTR [rax],al
  43c9e7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  43c9eb:	(bad)  
  43c9ec:	ins    BYTE PTR es:[rdi],dx
  43c9ed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  43c9f1:	jae    0x43ca13
  43c9f3:	outs   dx,DWORD PTR ds:[rsi]
  43c9f4:	data16 and BYTE PTR [rbx+0x69],dh
  43c9f8:	outs   dx,BYTE PTR ds:[esi]
  43c9fa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  43ca01:	and    BYTE PTR gs:[rax],ch
  43ca04:	push   rsp
  43ca05:	rex.WR
  43ca06:	rex.WRXB push r11
  43ca08:	push   rbx
  43ca09:	sub    DWORD PTR [rax],eax
  43ca0b:	add    BYTE PTR [rax],al
  43ca0d:	add    BYTE PTR [rax],al
  43ca0f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  43ca13:	and    BYTE PTR [rdx+0x65],dh
  43ca16:	jae    0x43ca8d
  43ca18:	ins    BYTE PTR es:[rdi],dx
  43ca19:	je     0x43ca3b
  43ca1b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  43ca22:	jae    0x43ca91
  43ca24:	(bad)  
  43ca25:	ins    BYTE PTR es:[rdi],dx
  43ca26:	ins    BYTE PTR es:[rdi],dx
  43ca27:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43ca2b:	(bad)  
  43ca2c:	and    BYTE PTR gs:[rdx+0x65],dh
  43ca30:	jo     0x43caa4
  43ca32:	gs jae 0x43ca9a
  43ca35:	outs   dx,BYTE PTR ds:[rsi]
  43ca36:	je     0x43ca9d
  43ca38:	and    BYTE PTR fs:[rax],ch
  43ca3b:	push   rbp
  43ca3c:	rex.WRX
  43ca3d:	rex.R
  43ca3e:	rex.RB push r10
  43ca40:	rex.RX
  43ca41:	rex.WR
  43ca42:	rex.WRXB push r15
  43ca44:	sub    DWORD PTR [rax],eax
  43ca46:	push   rbp
  43ca47:	outs   dx,BYTE PTR ds:[rsi]
  43ca48:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43ca4c:	outs   dx,BYTE PTR ds:[rsi]
  43ca4d:	and    BYTE PTR [rbp+0x72],ah
  43ca50:	jb     0x43cac1
  43ca52:	jb     0x43ca54
  43ca54:	add    BYTE PTR [rax],al
  43ca56:	add    BYTE PTR [rax],al
  43ca58:	pop    rdi
  43ca59:	ins    DWORD PTR es:[rdi],dx
  43ca5a:	(bad)  
  43ca5b:	je     0x43cac5
  43ca5d:	gs jb  0x43cad2
  43ca60:	sub    BYTE PTR [rcx],ch
  43ca62:	cmp    ah,BYTE PTR [rax]
  43ca64:	and    eax,0x6e692073
  43ca69:	and    BYTE PTR [rip+0x67252873],ah        # 0x6768f2e2
  43ca6f:	sub    al,0x20
  43ca71:	and    eax,0x20202967
  43ca76:	sub    BYTE PTR [rdx+0x65],dh
  43ca79:	je     0x43caf1
  43ca7b:	(bad)  
  43ca7c:	ins    BYTE PTR es:[rdi],dx
  43ca7d:	cmp    eax,0xa296725
  43ca82:	add    BYTE PTR [rax],al
  43ca84:	lods   al,BYTE PTR ds:[rsi]
  43ca85:	movsxd edi,esi
  43ca87:	(bad)  
  43ca88:	in     eax,dx
  43ca89:	(bad)  
  43ca8a:	(bad)  
  43ca8b:	call   FWORD PTR [rbx+riz*2-0x2]
  43ca8f:	jmp    FWORD PTR [rbx+riz*2-0x2]
  43ca93:	(bad)  
  43ca94:	jl     0x43caf9
  43ca96:	(bad)  
  43ca97:	dec    DWORD PTR [rbx+riz*2+0x639cfffe]
  43ca9e:	(bad)  
  43ca9f:	dec    DWORD PTR [rbp+0x69]
  43caa2:	outs   dx,BYTE PTR ds:[rsi]
  43caa3:	addr32 ja 0x43cad3
  43caa6:	ja     0x43cade
  43caa8:	xor    al,0x20
  43caaa:	jb     0x43cb21
  43caac:	outs   dx,BYTE PTR ds:[rsi]
  43caad:	je     0x43cb18
  43caaf:	ins    DWORD PTR es:[rdi],dx
  43cab0:	and    BYTE PTR gs:[rsi+0x61],ah
  43cab4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  43cabc:	add    BYTE PTR [rax],al
  43cabe:	add    BYTE PTR [rax],al
  43cac0:	rex.B
  43cac1:	fs fs jb 0x43cb2a
  43cac5:	jae    0x43cb3a
  43cac7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61abeb3d
  43cacd:	jae    0x43caef
  43cacf:	outs   dx,BYTE PTR ds:[rsi]
  43cad0:	outs   dx,DWORD PTR ds:[rsi]
  43cad1:	and    BYTE PTR [rcx+0x6d],ch
  43cad4:	(bad)  
  43cad5:	addr32 gs sub eax,0x74636573
  43cadc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  43cae3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  43caea:	jne    0x43cb51
  43caec:	jb     0x43cb67
  43caee:	and    BYTE PTR [rsi+0x61],ah
  43caf1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  43caf9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a5eb63
  43caff:	je     0x43cb66
  43cb01:	jae    0x43cb23
  43cb03:	(bad)  
  43cb04:	je     0x43cb26
  43cb06:	(bad)  
  43cb07:	fs fs jb 0x43cb70
  43cb0b:	jae    0x43cb80
  43cb0d:	and    BYTE PTR [rip+0x70],ah        # 0x43cb83
  43cb13:	add    BYTE PTR [rax],al
  43cb15:	add    BYTE PTR [rax],al
  43cb17:	add    BYTE PTR [rax],ah
  43cb19:	and    BYTE PTR [rsi+0x69],dl
  43cb1c:	jb     0x43cb92
  43cb1e:	jne    0x43cb81
  43cb20:	ins    BYTE PTR es:[rdi],dx
  43cb21:	push   rax
  43cb22:	jb     0x43cb93
  43cb24:	je     0x43cb8b
  43cb26:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  43cb2a:	(bad)  
  43cb2b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  43cb33:	push   0x646f6320
  43cb38:	and    BYTE PTR gs:[rax],dh
  43cb3b:	js     0x43cb62
  43cb3d:	js     0x43cb3f
  43cb3f:	add    BYTE PTR [rax],ah
  43cb41:	and    BYTE PTR [rbp+0x6e],dl
  43cb44:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43cb48:	outs   dx,BYTE PTR ds:[rsi]
  43cb49:	and    BYTE PTR [rax+0x73],dh
  43cb4c:	gs jne 0x43cbb3
  43cb4f:	outs   dx,DWORD PTR ds:[rsi]
  43cb50:	and    BYTE PTR [rdx+0x65],dh
  43cb53:	ins    BYTE PTR es:[rdi],dx
  43cb54:	outs   dx,DWORD PTR ds:[rsi]
  43cb55:	movsxd esp,DWORD PTR [rcx+0x74]
  43cb58:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  43cb5f:	je     0x43cbd0
  43cb61:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43cb64:	and    BYTE PTR [rsi+0x65],dh
  43cb67:	jb     0x43cbdc
  43cb69:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  43cb70:	or     al,BYTE PTR [rax]
  43cb72:	add    BYTE PTR [rax],al
  43cb74:	add    BYTE PTR [rax],al
  43cb76:	add    BYTE PTR [rax],al
  43cb78:	and    BYTE PTR [rax],ah
  43cb7a:	push   rbp
  43cb7b:	outs   dx,BYTE PTR ds:[rsi]
  43cb7c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43cb80:	outs   dx,BYTE PTR ds:[rsi]
  43cb81:	and    BYTE PTR [rax+0x73],dh
  43cb84:	gs jne 0x43cbeb
  43cb87:	outs   dx,DWORD PTR ds:[rsi]
  43cb88:	and    BYTE PTR [rdx+0x65],dh
  43cb8b:	ins    BYTE PTR es:[rdi],dx
  43cb8c:	outs   dx,DWORD PTR ds:[rsi]
  43cb8d:	movsxd esp,DWORD PTR [rcx+0x74]
  43cb90:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  43cb97:	and    BYTE PTR [rbx+0x69],dh
  43cb9a:	jp     0x43cc01
  43cb9c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4dfa06
	...
  43cbae:	add    BYTE PTR [rax],al
  43cbb0:	cs jo  0x43cc17
  43cbb3:	(bad)  
  43cbb4:	je     0x43cc17
	...
  43cbbe:	add    BYTE PTR [rax],al
  43cbc0:	pushf  
  43cbc1:	jne    0x43cbc3
  43cbc3:	mov    BYTE PTR [rsp+riz*8],bh
  43cbc6:	(bad)  
  43cbc7:	jle    0x43cbc9
	...
  43cbdd:	add    al,ah
  43cbdf:	(bad)  
  43cbe0:	add    BYTE PTR [rax],al
  43cbe2:	add    BYTE PTR [rax],al
  43cbe4:	add    BYTE PTR [rax],al
  43cbe6:	lock (bad) 
	...
  43cbf4:	add    BYTE PTR [rax],al
  43cbf6:	add    BYTE PTR [rax+0x0],al
  43cbfc:	add    BYTE PTR [rax],al
  43cbfe:	add    BYTE PTR [rax],al
  43cc00:	sub    BYTE PTR [rsi+0x69],ch
  43cc03:	ins    BYTE PTR es:[rdi],dx
  43cc04:	sub    DWORD PTR [rax],eax
  43cc06:	outs   dx,BYTE PTR ds:[rsi]
  43cc07:	(bad)  
  43cc08:	outs   dx,BYTE PTR ds:[rsi]
  43cc09:	add    BYTE PTR [rcx+0x6e],ch
  43cc0c:	data16 add BYTE PTR [rcx+0x6e],ch
  43cc10:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0xfffe822c
  43cc18:	jl     0x43cc96
  43cc1a:	(bad)  
  43cc1b:	(bad)  
  43cc1c:	jl     0x43cc9a
  43cc1e:	(bad)  
  43cc1f:	(bad)  
  43cc20:	jl     0x43cc9e
  43cc22:	(bad)  
  43cc23:	(bad)  
  43cc24:	jl     0x43cca2
  43cc26:	(bad)  
  43cc27:	(bad)  
  43cc28:	jl     0x43cca6
  43cc2a:	(bad)  
  43cc2b:	(bad)  
  43cc2c:	jl     0x43ccaa
  43cc2e:	(bad)  
  43cc2f:	(bad)  
  43cc30:	jl     0x43ccae
  43cc32:	(bad)  
  43cc33:	(bad)  
  43cc34:	jl     0x43ccb2
  43cc36:	(bad)  
  43cc37:	(bad)  
  43cc38:	jl     0x43ccb6
  43cc3a:	(bad)  
  43cc3b:	(bad)  
  43cc3c:	jl     0x43ccba
  43cc3e:	(bad)  
  43cc3f:	(bad)  
  43cc40:	jl     0x43ccbe
  43cc42:	(bad)  
  43cc43:	(bad)  
  43cc44:	jl     0x43ccc2
  43cc46:	(bad)  
  43cc47:	(bad)  
  43cc48:	jl     0x43ccc6
  43cc4a:	(bad)  
  43cc4b:	(bad)  
  43cc4c:	jl     0x43ccca
  43cc4e:	(bad)  
  43cc4f:	(bad)  
  43cc50:	jl     0x43ccce
  43cc52:	(bad)  
  43cc53:	(bad)  
  43cc54:	jl     0x43ccd2
  43cc56:	(bad)  
  43cc57:	(bad)  
  43cc58:	jl     0x43ccd6
  43cc5a:	(bad)  
  43cc5b:	(bad)  
  43cc5c:	jl     0x43ccda
  43cc5e:	(bad)  
  43cc5f:	(bad)  
  43cc60:	jl     0x43ccde
  43cc62:	(bad)  
  43cc63:	(bad)  
  43cc64:	jl     0x43cce2
  43cc66:	(bad)  
  43cc67:	(bad)  
  43cc68:	jl     0x43cce6
  43cc6a:	(bad)  
  43cc6b:	(bad)  
  43cc6c:	jl     0x43ccea
  43cc6e:	(bad)  
  43cc6f:	(bad)  
  43cc70:	jl     0x43ccee
  43cc72:	(bad)  
  43cc73:	(bad)  
  43cc74:	jl     0x43ccf2
  43cc76:	(bad)  
  43cc77:	(bad)  
  43cc78:	jl     0x43ccf6
  43cc7a:	(bad)  
  43cc7b:	(bad)  
  43cc7c:	jl     0x43ccfa
  43cc7e:	(bad)  
  43cc7f:	(bad)  
  43cc80:	jl     0x43ccfe
  43cc82:	(bad)  
  43cc83:	jmp    FWORD PTR [rdx+0x7cfffe7f]
  43cc89:	jl     0x43cc89
  43cc8b:	dec    DWORD PTR [rdi-0x7b]
  43cc8e:	(bad)  
  43cc8f:	(bad)  
  43cc90:	jl     0x43cd0e
  43cc92:	(bad)  
  43cc93:	jmp    FWORD PTR [rdx-0x55000181]
  43cc99:	jg     0x43cc99
  43cc9b:	jmp    FWORD PTR [rdx+0x7cfffe7f]
  43cca1:	jl     0x43cca1
  43cca3:	(bad)  
  43cca4:	jl     0x43cd22
  43cca6:	(bad)  
  43cca7:	(bad)  
  43cca8:	jl     0x43cd26
  43ccaa:	(bad)  
  43ccab:	(bad)  
  43ccac:	jl     0x43cd2a
  43ccae:	(bad)  
  43ccaf:	(bad)  
  43ccb0:	jl     0x43cd2e
  43ccb2:	(bad)  
  43ccb3:	(bad)  
  43ccb4:	jl     0x43cd32
  43ccb6:	(bad)  
  43ccb7:	(bad)  
  43ccb8:	jl     0x43cd36
  43ccba:	(bad)  
  43ccbb:	(bad)  
  43ccbc:	jl     0x43cd3a
  43ccbe:	(bad)  
  43ccbf:	(bad)  
  43ccc0:	jl     0x43cd3e
  43ccc2:	(bad)  
  43ccc3:	(bad)  
  43ccc4:	jl     0x43cd42
  43ccc6:	(bad)  
  43ccc7:	(bad)  
  43ccc8:	jl     0x43cd46
  43ccca:	(bad)  
  43cccb:	dec    DWORD PTR [rsi]
  43cccd:	mov    dh,bh
  43cccf:	(bad)  
  43ccd0:	jl     0x43cd4e
  43ccd2:	(bad)  
  43ccd3:	(bad)  
  43ccd4:	jl     0x43cd52
  43ccd6:	(bad)  
  43ccd7:	(bad)  
  43ccd8:	jl     0x43cd56
  43ccda:	(bad)  
  43ccdb:	(bad)  
  43ccdc:	jl     0x43cd5a
  43ccde:	(bad)  
  43ccdf:	dec    DWORD PTR [rcx+0x7cfffe7f]
  43cce5:	jl     0x43cce5
  43cce7:	(bad)  
  43cce8:	jl     0x43cd66
  43ccea:	(bad)  
  43cceb:	(bad)  
  43ccec:	stc    
  43cced:	jge    0x43cced
  43ccef:	(bad)  
  43ccf0:	jl     0x43cd6e
  43ccf2:	(bad)  
  43ccf3:	(bad)  
  43ccf4:	jl     0x43cd72
  43ccf6:	(bad)  
  43ccf7:	(bad)  
  43ccf8:	jl     0x43cd76
  43ccfa:	(bad)  
  43ccfb:	(bad)  
  43ccfc:	jl     0x43cd7a
  43ccfe:	(bad)  
  43ccff:	(bad)  
  43cd00:	jl     0x43cd7e
  43cd02:	(bad)  
  43cd03:	jmp    FWORD PTR [rdx+0x7cfffe7f]
  43cd09:	jl     0x43cd09
  43cd0b:	call   QWORD PTR [rcx]
  43cd0d:	mov    esi,?
  43cd0f:	dec    DWORD PTR [rcx-0x55000181]
  43cd15:	jg     0x43cd15
  43cd17:	jmp    FWORD PTR [rdx-0x55000181]
  43cd1d:	jg     0x43cd1d
  43cd1f:	(bad)  
  43cd20:	jl     0x43cd9e
  43cd22:	(bad)  
  43cd23:	dec    DWORD PTR [rcx+0x7cfffe7f]
  43cd29:	jl     0x43cd29
  43cd2b:	(bad)  
  43cd2c:	jl     0x43cdaa
  43cd2e:	(bad)  
  43cd2f:	(bad)  
  43cd30:	jl     0x43cdae
  43cd32:	(bad)  
  43cd33:	(bad)  
  43cd34:	jl     0x43cdb2
  43cd36:	(bad)  
  43cd37:	push   QWORD PTR [rbp+rdi*2+0x7f89fffe]
  43cd3e:	(bad)  
  43cd3f:	dec    DWORD PTR [rcx+0x7cfffe7f]
  43cd45:	jl     0x43cd45
  43cd47:	(bad)  
  43cd48:	jl     0x43cdc6
  43cd4a:	(bad)  
  43cd4b:	inc    ebx
  43cd4d:	mov    bh,dh
  43cd4f:	(bad)  
  43cd50:	jl     0x43cdce
  43cd52:	(bad)  
  43cd53:	dec    DWORD PTR [rcx+0x7cfffe7f]
  43cd59:	jl     0x43cd59
  43cd5b:	(bad)  
  43cd5c:	jl     0x43cdda
  43cd5e:	(bad)  
  43cd5f:	dec    DWORD PTR [rcx+0x10fffe7f]
  43cd65:	mov    ?,esi
  43cd67:	jmp    FWORD PTR [rbx]
  43cd69:	cmp    esi,0xfe812bff
  43cd6f:	jmp    FWORD PTR [rbx]
  43cd71:	cmp    esi,0xfe812bff
  43cd77:	jmp    FWORD PTR [rbx]
  43cd79:	cmp    esi,0xfe812bff
  43cd7f:	jmp    FWORD PTR [rbx]
  43cd81:	cmp    esi,0xfe812bff
  43cd87:	jmp    FWORD PTR [rbx]
  43cd89:	cmp    esi,0xfe812bff
  43cd8f:	jmp    FWORD PTR [rbx]
  43cd91:	cmp    esi,0xfe8e2fff
  43cd97:	jmp    FWORD PTR [rbx]
  43cd99:	cmp    esi,0xfe812bff
  43cd9f:	jmp    FWORD PTR [rbx]
  43cda1:	cmp    esi,0xfe812bff
  43cda7:	call   FWORD PTR [rip+0x2bfffe8e]        # 0x2c43cc3b
  43cdad:	cmp    esi,0xfe812bff
  43cdb3:	jmp    FWORD PTR [rbx]
  43cdb5:	cmp    esi,0xfe812bff
  43cdbb:	jmp    FWORD PTR [rbx]
  43cdbd:	cmp    esi,0xfe8e41ff
  43cdc3:	call   QWORD PTR [rip+0x2bfffe81]        # 0x2c43cc4a
  43cdc9:	cmp    esi,0xfe812bff
  43cdcf:	jmp    FWORD PTR [rbx]
  43cdd1:	cmp    esi,0xfe812bff
  43cdd7:	inc    DWORD PTR [rbx]
  43cdd9:	mov    ?,esi
  43cddb:	jmp    FWORD PTR [rbx]
  43cddd:	cmp    esi,0xfe812bff
  43cde3:	call   QWORD PTR [rax]
  43cde5:	mov    ?,esi
  43cde7:	inc    DWORD PTR [rax]
	...
  43cdf5:	add    BYTE PTR [rax],al
  43cdf7:	add    BYTE PTR [rax],0x0
	...
  43ce02:	add    BYTE PTR [rax+0x0],al
	...
  43ce10:	ins    BYTE PTR es:[rdi],dx
  43ce11:	outs   dx,DWORD PTR ds:[rsi]
  43ce12:	add    BYTE PTR [eax],al
	...
  43ce1d:	add    al,dh
  43ce1f:	inc    DWORD PTR [rax]
  43ce21:	add    BYTE PTR [rax],al
  43ce23:	add    BYTE PTR [rax],al
  43ce25:	add    al,bh
  43ce27:	jg     0x43ce29
  43ce29:	add    BYTE PTR [rax],al
  43ce2b:	add    BYTE PTR [rax],al
  43ce2d:	add    al,dh
  43ce2f:	jg     0x43cde1
  43ce31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ce32:	(bad)  
  43ce33:	inc    DWORD PTR [rax+0x71fffea7]
  43ce39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ce3a:	(bad)  
  43ce3b:	call   QWORD PTR [rax-0x59]
  43ce3e:	(bad)  
  43ce3f:	jmp    QWORD PTR [rax-0x7f000159]
  43ce45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ce46:	(bad)  
  43ce47:	inc    DWORD PTR [rax]
  43ce49:	add    BYTE PTR [rax],al
  43ce4b:	add    BYTE PTR [rax],al
  43ce4d:	add    BYTE PTR [rax],al
  43ce4f:	add    BYTE PTR [rdx-0xf000158],ah
  43ce55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ce56:	(bad)  
  43ce57:	call   rax
  43ce59:	test   al,0xfe
  43ce5b:	inc    DWORD PTR [rax-0x58]
  43ce5e:	(bad)  
  43ce5f:	push   QWORD PTR [rcx-0x58]
  43ce62:	(bad)  
  43ce63:	push   rax
  43ce65:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ce66:	(bad)  
  43ce67:	jmp    QWORD PTR [rdx+0xfffea8]
  43ce6d:	add    BYTE PTR [rax],al
  43ce6f:	add    BYTE PTR [rbp+rsi*2-0x1bc37800],bl
  43ce76:	(bad)  
  43ce77:	jle    0x43ce79
  43ce79:	add    BYTE PTR [rax],al
  43ce7b:	add    BYTE PTR [rax],al
  43ce7d:	add    BYTE PTR [rax],al
  43ce7f:	add    BYTE PTR [rsi+0x61],cl
  43ce82:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  43ce86:	data16 add BYTE PTR [rax],ch
  43ce89:	add    BYTE PTR [rsi+0x0],ch
  43ce8c:	jne    0x43ce8e
  43ce8e:	ins    BYTE PTR es:[rdi],dx
  43ce8f:	add    BYTE PTR [rax+rax*1+0x29],ch
  43ce93:	add    BYTE PTR [rax],al
  43ce95:	add    BYTE PTR [rax],ch
  43ce97:	outs   dx,BYTE PTR ds:[rsi]
  43ce98:	jne    0x43cf06
  43ce9a:	ins    BYTE PTR es:[rdi],dx
  43ce9b:	sub    DWORD PTR [rax],eax
  43ce9d:	push   rax
  43ce9e:	push   rdx
  43ce9f:	rex.WB
  43cea0:	rex.WRX push rsp
  43cea2:	rex.RX pop rdi
  43cea4:	rex.RB pop r8
  43cea6:	push   rax
  43cea7:	rex.WRXB
  43cea8:	rex.WRX
  43cea9:	rex.RB
  43ceaa:	rex.WRX push rsp
  43ceac:	pop    rdi
  43cead:	rex.R
  43ceae:	rex.WB
  43ceaf:	rex.RXB
  43ceb0:	rex.WB push r12
  43ceb2:	push   rbx
  43ceb3:	add    BYTE PTR [rax+rdx*8-0x2],ch
  43ceb7:	(bad)  
  43ceb8:	in     al,dx
  43ceb9:	sar    dh,1
  43cebb:	(bad)  
  43cebc:	in     al,dx
  43cebd:	sar    dh,1
  43cebf:	dec    DWORD PTR [rax+rdx*8-0x2]
  43cec3:	(bad)  
  43cec4:	in     al,dx
  43cec5:	sar    dh,1
  43cec7:	call   FWORD PTR [rsi-0x13000130]
  43cecd:	sar    dh,1
  43cecf:	dec    DWORD PTR [rax+rdx*8-0x2f130002]
  43ced6:	(bad)  
  43ced7:	(bad)  
  43ced8:	in     al,dx
  43ced9:	sar    dh,1
  43cedb:	jmp    FWORD PTR [rax+rdx*8-0x2fd30002]
  43cee2:	(bad)  
  43cee3:	(bad)  
  43cee4:	in     al,dx
  43cee5:	sar    dh,1
  43cee7:	dec    DWORD PTR [rax+rdx*8]
  43ceea:	(bad)  
  43ceeb:	(bad)  
  43ceec:	in     al,dx
  43ceed:	iret   
  43ceee:	(bad)  
  43ceef:	(bad)  
  43cef0:	in     al,dx
  43cef1:	sar    dh,1
  43cef3:	dec    esp
  43cef5:	iret   
  43cef6:	(bad)  
  43cef7:	(bad)  
  43cef8:	in     al,dx
  43cef9:	sar    dh,1
  43cefb:	(bad)  
  43cefc:	in     al,dx
  43cefd:	sar    dh,1
  43ceff:	(bad)  
  43cf00:	in     al,dx
  43cf01:	sar    dh,1
  43cf03:	(bad)  
  43cf04:	in     al,dx
  43cf05:	sar    dh,1
  43cf07:	(bad)  
  43cf08:	in     al,dx
  43cf09:	sar    dh,1
  43cf0b:	(bad)  
  43cf0c:	in     al,dx
  43cf0d:	sar    dh,1
  43cf0f:	(bad)  
  43cf10:	in     al,dx
  43cf11:	sar    dh,1
  43cf13:	(bad)  
  43cf14:	in     al,dx
  43cf15:	sar    dh,1
  43cf17:	(bad)  
  43cf18:	in     al,dx
  43cf19:	sar    dh,1
  43cf1b:	(bad)  
  43cf1c:	in     al,dx
  43cf1d:	sar    dh,1
  43cf1f:	(bad)  
  43cf20:	in     al,dx
  43cf21:	sar    dh,1
  43cf23:	(bad)  
  43cf24:	in     al,dx
  43cf25:	sar    dh,1
  43cf27:	(bad)  
  43cf28:	in     al,dx
  43cf29:	sar    dh,1
  43cf2b:	(bad)  
  43cf2c:	in     al,dx
  43cf2d:	sar    dh,1
  43cf2f:	(bad)  
  43cf30:	in     al,dx
  43cf31:	sar    dh,1
  43cf33:	(bad)  
  43cf34:	in     al,dx
  43cf35:	sar    dh,1
  43cf37:	call   FWORD PTR [rsi-0x13000131]
  43cf3d:	sar    dh,1
  43cf3f:	jmp    FWORD PTR [rdi+rcx*8-0x2]
  43cf43:	(bad)  
  43cf44:	in     al,dx
  43cf45:	sar    dh,1
  43cf47:	(bad)  
  43cf48:	cmp    eax,0xffffecf
  43cf4d:	iret   
  43cf4e:	(bad)  
  43cf4f:	jmp    rcx
  43cf51:	(bad)  
  43cf52:	(bad)  
  43cf53:	(bad)  
  43cf54:	in     al,dx
  43cf55:	sar    dh,1
  43cf57:	(bad)  
  43cf58:	mov    esp,0xecfffece
  43cf5d:	sar    dh,1
  43cf5f:	(bad)  
  43cf60:	in     al,dx
  43cf61:	sar    dh,1
  43cf63:	call   FWORD PTR [rsi+rcx*8-0x2f130002]
  43cf6a:	(bad)  
  43cf6b:	(bad)  
  43cf6c:	in     al,dx
  43cf6d:	sar    dh,1
  43cf6f:	(bad)  
  43cf70:	in     al,dx
  43cf71:	sar    dh,1
  43cf73:	(bad)  
  43cf74:	in     al,dx
  43cf75:	sar    dh,1
  43cf77:	(bad)  
  43cf78:	in     al,dx
  43cf79:	sar    dh,1
  43cf7b:	(bad)  
  43cf7c:	in     al,dx
  43cf7d:	sar    dh,1
  43cf7f:	jmp    FWORD PTR [rdi]
  43cf81:	sar    esi,1
  43cf83:	(bad)  
  43cf84:	in     al,dx
  43cf85:	sar    dh,1
  43cf87:	(bad)  
  43cf88:	in     al,dx
  43cf89:	sar    dh,1
  43cf8b:	(bad)  
  43cf8c:	in     al,dx
  43cf8d:	sar    dh,1
  43cf8f:	(bad)  
  43cf90:	in     al,dx
  43cf91:	sar    dh,1
  43cf93:	jmp    FWORD PTR [rbp+rcx*8-0x2]
  43cf97:	(bad)  
  43cf98:	in     al,dx
  43cf99:	sar    dh,1
  43cf9b:	(bad)  
  43cf9c:	in     al,dx
  43cf9d:	sar    dh,1
  43cf9f:	(bad)  
  43cfa0:	in     al,dx
  43cfa1:	sar    dh,1
  43cfa3:	(bad)  
  43cfa4:	in     al,dx
  43cfa5:	sar    dh,1
  43cfa7:	(bad)  
  43cfa8:	in     al,dx
  43cfa9:	sar    dh,1
  43cfab:	(bad)  
  43cfac:	in     al,dx
  43cfad:	sar    dh,1
  43cfaf:	(bad)  
  43cfb0:	in     al,dx
  43cfb1:	sar    dh,1
  43cfb3:	(bad)  
  43cfb4:	in     al,dx
  43cfb5:	sar    dh,1
  43cfb7:	(bad)  
  43cfb8:	cld    
  43cfb9:	int    0xfe
  43cfbb:	(bad)  
  43cfbc:	in     al,dx
  43cfbd:	sar    dh,1
  43cfbf:	(bad)  
  43cfc0:	mov    ebp,0x3cfffecd
  43cfc5:	(bad)  
  43cfc6:	(bad)  
  43cfc7:	jmp    FWORD PTR [rcx*8-0x33130002]
  43cfce:	(bad)  
  43cfcf:	(bad)  
  43cfd0:	jg     0x43cf9e
  43cfd2:	(bad)  
  43cfd3:	(bad)  
  43cfd4:	mov    esp,0x3cfffecc
  43cfd9:	(bad)  
  43cfda:	(bad)  
  43cfdb:	call   FWORD PTR [rsp+rcx*8-0x2]
  43cfdf:	(bad)  
  43cfe0:	in     al,dx
  43cfe1:	sar    dh,1
  43cfe3:	jmp    FWORD PTR [rsp+rcx*8]
  43cfe6:	(bad)  
  43cfe7:	(bad)  
  43cfe8:	cld    
  43cfe9:	retf   
  43cfea:	(bad)  
  43cfeb:	(bad)  
  43cfec:	mov    esp,0x6cfffecb
  43cff1:	int    0xfe
  43cff3:	(bad)  
  43cff4:	jl     0x43cfc1
  43cff6:	(bad)  
  43cff7:	(bad)  
  43cff8:	in     al,dx
  43cff9:	sar    dh,1
  43cffb:	(bad)  
  43cffc:	in     al,dx
  43cffd:	sar    dh,1
  43cfff:	push   QWORD PTR [rcx]
  43d001:	retf   
  43d002:	(bad)  
  43d003:	call   FWORD PTR [rsp+rcx*8-0x2]
  43d007:	jmp    FWORD PTR [rbp+rcx*8-0x2]
  43d00b:	(bad)  
  43d00c:	in     al,dx
  43d00d:	sar    dh,1
  43d00f:	(bad)  
  43d010:	in     al,dx
  43d011:	sar    dh,1
  43d013:	jmp    FWORD PTR [rbp+rcx*8-0x2]
  43d017:	(bad)  
  43d018:	in     al,dx
  43d019:	sar    dh,1
  43d01b:	call   FWORD PTR [rsp+rcx*8-0x2]
  43d01f:	dec    DWORD PTR [rcx+0x6e]
  43d022:	imul   bp,WORD PTR [rsi+0x69],0x7974
  43d028:	add    BYTE PTR [rsi+0x61],cl
  43d02b:	rex.WRX add BYTE PTR [rax],r14b
  43d02e:	add    BYTE PTR [rax],al
  43d030:	(bad)  
  43d031:	(bad)  
  43d032:	(bad)  
  43d033:	push   QWORD PTR [rdx*8-0x2acb0002]
  43d03a:	(bad)  
  43d03b:	push   QWORD PTR [rax-0x2a]
  43d03e:	(bad)  
  43d03f:	inc    DWORD PTR [rbx-0x2a]
  43d042:	(bad)  
  43d043:	inc    DWORD PTR [rax]
	...
  43d04d:	add    al,bh
  43d04f:	(bad)  
  43d050:	(bad)  
  43d051:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43d053:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  43d059:	enter  0x8b60,0x28
  43d05d:	mov    al,dh
  43d05f:	(bad)  
  43d060:	sti    
  43d061:	jns    0x43d002
  43d063:	push   rax
  43d064:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  43d068:	add    al,0xfa
  43d06a:	jge    0x43d009
  43d06c:	(bad)  
  43d06d:	sub    eax,0x5a323c94
  43d072:	rex.RXB push r13
  43d074:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  43d078:	add    BYTE PTR [rax],al
  43d07a:	add    BYTE PTR [rax],al
  43d07c:	add    BYTE PTR [rax],al
  43d07e:	lock (bad) 
  43d080:	add    BYTE PTR [rax],al
  43d082:	add    BYTE PTR [rax],al
  43d084:	add    BYTE PTR [rax],al
  43d086:	and    al,0x40
  43d088:	add    BYTE PTR [rax],al
  43d08a:	add    BYTE PTR [rax],al
  43d08c:	add    BYTE PTR [rax],al
  43d08e:	or     BYTE PTR [rax+0x0],al
  43d091:	add    BYTE PTR [rax],al
  43d093:	add    BYTE PTR [rax],al
  43d095:	add    BYTE PTR [rax+rax*2],bl
  43d098:	add    BYTE PTR [rax],al
  43d09a:	add    BYTE PTR [rax],al
  43d09c:	add    BYTE PTR [rax],al
  43d09e:	adc    al,0x40
  43d0a0:	add    BYTE PTR [rax],al
  43d0a2:	add    BYTE PTR [rax],al
  43d0a4:	add    BYTE PTR [rax],al
  43d0a6:	add    BYTE PTR [rax+0x0],al
	...
  43d0b4:	add    BYTE PTR [rax],al
  43d0b6:	loopne 0x43d0f7
	...
  43d0c0:	add    eax,0x19000000
  43d0c5:	add    BYTE PTR [rax],al
  43d0c7:	add    BYTE PTR [rbp+0x0],bh
	...
  43d106:	lock (bad) 
  43d108:	add    BYTE PTR [rax],al
  43d10a:	add    BYTE PTR [rax],al
  43d10c:	add    BYTE PTR [rax],al
  43d10e:	and    al,0x40
  43d110:	add    BYTE PTR [rax],al
  43d112:	add    BYTE PTR [rax],al
  43d114:	add    BYTE PTR [rax],al
  43d116:	pop    rcx
  43d117:	add    BYTE PTR [rax],al
  43d11a:	add    BYTE PTR [rax],al
  43d11c:	add    BYTE PTR [rax-0x71],al
  43d11f:	add    BYTE PTR [rax],al
  43d122:	add    BYTE PTR [rax],al
  43d124:	add    BYTE PTR [rax+0x40c3],cl
  43d12a:	add    BYTE PTR [rax],al
  43d12c:	add    BYTE PTR [rdx-0x8],ch
  43d12f:	add    BYTE PTR [rax],al
  43d132:	add    BYTE PTR [rax],al
  43d134:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  43d13c:	rcl    BYTE PTR [rdx],1
  43d13e:	movsxd eax,DWORD PTR [rcx+0x0]
  43d141:	add    BYTE PTR [rax],al
  43d143:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  43d14a:	add    BYTE PTR [rax],al
  43d14c:	gs int 0xcd
  43d14f:	add    BYTE PTR [r8],al
  43d152:	add    BYTE PTR [rax],ah
  43d154:	pop    rdi
  43d155:	movabs al,ds:0x4876e80000004202
  43d15e:	(bad)  
  43d15f:	rex.X add BYTE PTR [rax],al
  43d162:	add    BYTE PTR [rdx+0x426d1a94],ah
  43d168:	add    BYTE PTR [rax],al
  43d16a:	rex in eax,0x9c
  43d16d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  43d173:	(bad)  
  43d174:	(bad)  
  43d175:	mov    esp,0x42d6
  43d17a:	xor    al,0x26
  43d17c:	cmc    
  43d17d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  43d181:	and    al,0x37
  43d184:	jns    0x43d149
  43d186:	rex.B
  43d187:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  43d18e:	jbe    0x43d1d3
  43d190:	add    al,cl
  43d192:	rex.WRX
  43d193:	ins    DWORD PTR es:[edi],dx
  43d195:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  43d19c:	in     al,0x58
  43d19e:	loope  0x43d1e3
  43d1a0:	rex mov WORD PTR [rbp+0x15af1d78],?
  43d1a7:	rex.R push rax
  43d1a9:	out    dx,eax
  43d1aa:	loop   0x43d182
  43d1ac:	in     al,0x1a
  43d1ae:	rex.WXB
  43d1af:	rex.R xchg edx,eax
  43d1b1:	(bad)  
  43d1b2:	rex.WRB (bad) 
  43d1b4:	iret   
  43d1b5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  43d1bb:	add    BYTE PTR [rax],al
  43d1bd:	add    BYTE PTR [rax],al
  43d1bf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  43d1c6:	pushf  
  43d1c7:	cmp    al,0x33
  43d1c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43d1ca:	test   al,0xd5
  43d1cc:	and    esi,esi
  43d1ce:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd88c67c
  43d1d5:	shld   DWORD PTR [rdx],esi,cl
  43d1d8:	popf   
  43d1d9:	xchg   edi,eax
  43d1da:	mov    edi,cs
  43d1dc:	or     BYTE PTR [rdx+0x6f43255b],bh
  43d1e2:	lods   al,BYTE PTR ds:[rsi]
  43d1e3:	sub    BYTE PTR fs:[rsi],al
  43d1e6:	enter  0xa,0x0
	...
  43d1fe:	add    BYTE PTR [rax],al
  43d200:	add    BYTE PTR [rax-0x3c86c820],al
  43d206:	rex.B
  43d207:	rex.XB (bad) 
  43d209:	outs   dx,BYTE PTR ds:[rsi]
  43d20a:	add    eax,0x93b8b5b5
  43d20f:	rex.RX cmc 
  43d211:	stc    
  43d212:	(bad)  
  43d213:	jmp    0x4d7c211b
  43d218:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778ccb4e
  43d21e:	(bad)  
  43d21f:	pop    rdx
  43d220:	cmp    al,0xbf
  43d222:	jae    0x43d2a3
  43d224:	fisttp QWORD PTR [rdi+0x15]
  43d227:	jne    0x43d229
	...
  43d23d:	add    BYTE PTR [rax],al
  43d23f:	add    BYTE PTR [rsi+0x66],ch
  43d242:	add    BYTE PTR [rcx+0x6e],ch
  43d245:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0xe7006e61
  43d24d:	stc    
  43d24e:	(bad)  
  43d24f:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d256:	(bad)  
  43d257:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d25e:	(bad)  
  43d25f:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d266:	(bad)  
  43d267:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d26e:	(bad)  
  43d26f:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d273:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d277:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d27b:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d27f:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d283:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d28a:	(bad)  
  43d28b:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d292:	(bad)  
  43d293:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d29a:	(bad)  
  43d29b:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2a2:	(bad)  
  43d2a3:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2aa:	(bad)  
  43d2ab:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2b2:	(bad)  
  43d2b3:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2ba:	(bad)  
  43d2bb:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2c2:	(bad)  
  43d2c3:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2ca:	(bad)  
  43d2cb:	jmp    QWORD PTR [rbx+rdi*8-0x2]
  43d2cf:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2d6:	(bad)  
  43d2d7:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2de:	(bad)  
  43d2df:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2e6:	(bad)  
  43d2e7:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2ee:	(bad)  
  43d2ef:	inc    DWORD PTR [rbx+rdi*8-0x47b0002]
  43d2f6:	(bad)  
  43d2f7:	push   QWORD PTR [rdx+rdi*8-0x47b0002]
  43d2fe:	(bad)  
  43d2ff:	jmp    rdi
  43d301:	sti    
  43d302:	(bad)  
  43d303:	inc    DWORD PTR [rax]
	...
  43d341:	add    BYTE PTR [rax],al
  43d343:	add    BYTE PTR [rbx],al
  43d345:	add    BYTE PTR [rax],al
  43d347:	add    BYTE PTR [rip+0x7000000],al        # 0x743d34d
  43d34d:	add    BYTE PTR [rax],al
  43d34f:	add    BYTE PTR [rdx],cl
  43d351:	add    BYTE PTR [rax],al
  43d353:	add    BYTE PTR [rax+rax*1],cl
  43d356:	add    BYTE PTR [rax],al
  43d358:	(bad)  
  43d359:	add    BYTE PTR [rax],al
  43d35b:	add    BYTE PTR [rcx],dl
  43d35d:	add    BYTE PTR [rax],al
  43d35f:	add    BYTE PTR [rbx],dl
  43d361:	add    BYTE PTR [rax],al
  43d363:	add    BYTE PTR [rip+0x18000000],dl        # 0x1843d369
  43d369:	add    BYTE PTR [rax],al
  43d36b:	add    BYTE PTR [rdx],bl
  43d36d:	add    BYTE PTR [rax],al
  43d36f:	add    BYTE PTR [rax+rax*1],bl
  43d372:	add    BYTE PTR [rax],al
  43d374:	(bad)  
  43d375:	add    BYTE PTR [rax],al
  43d377:	add    BYTE PTR [rcx],ah
  43d379:	add    BYTE PTR [rax],al
  43d37b:	add    BYTE PTR [rbx],ah
  43d37d:	add    BYTE PTR [rax],al
  43d37f:	add    BYTE PTR [rsi],ah
  43d381:	add    BYTE PTR [rax],al
  43d383:	add    BYTE PTR [rax],ch
  43d385:	add    BYTE PTR [rax],al
  43d387:	add    BYTE PTR [rdx],ch
  43d389:	add    BYTE PTR [rax],al
  43d38b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f43d391
  43d391:	add    BYTE PTR [rax],al
  43d393:	add    BYTE PTR [rcx],dh
  43d395:	add    BYTE PTR [rax],al
  43d397:	add    BYTE PTR [rax+rax*1],dh
	...
  43d3a6:	lock (bad) 
	...
  43d3b4:	add    BYTE PTR [rax],al
  43d3b6:	add    BYTE PTR [rax+0x0],al
  43d3b9:	add    BYTE PTR [rax],al
  43d3bb:	add    BYTE PTR [rax],al
  43d3bd:	add    al,ah
  43d3bf:	(bad)  
  43d3c0:	add    BYTE PTR [rax],al
  43d3c2:	sar    bh,0xff
  43d3c5:	(bad)  
  43d3c6:	fild   WORD PTR [rcx+0x16]
  43d3c9:	push   rsi
  43d3ca:	out    0x9e,eax
  43d3cc:	scas   eax,DWORD PTR es:[rdi]
  43d3cd:	add    eax,edx
  43d3cf:	cmp    al,0x0
  43d3d1:	add    BYTE PTR [rax],al
  43d3d3:	add    BYTE PTR [rax],al
  43d3d5:	add    BYTE PTR [rax],al
  43d3d7:	add    BYTE PTR [rax],0x0
	...
  43d3fe:	add    BYTE PTR [rax],al
  43d400:	rex.B
  43d401:	rex.X
  43d402:	rex.XB
  43d403:	rex.R
  43d404:	rex.RB
  43d405:	rex.RX add BYTE PTR [rcx+0x62],r12b
  43d409:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  43d40d:	add    BYTE PTR [rax],dh
  43d40f:	xor    DWORD PTR [rdx],esi
  43d411:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  43d420:	ins    DWORD PTR es:[rdi],dx
  43d421:	add    BYTE PTR [rbx+0x0],dh
  43d424:	jbe    0x43d426
  43d426:	movsxd eax,DWORD PTR [rax]
  43d428:	jb     0x43d42a
  43d42a:	je     0x43d42c
  43d42c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  43d431:	add    BYTE PTR [rax+rax*1+0x0],ch
  43d435:	add    BYTE PTR [rdi+0x73],bl
  43d438:	gs je  0x43d49a
  43d43b:	outs   dx,DWORD PTR ds:[rsi]
  43d43c:	jne    0x43d4b2
  43d43e:	jo     0x43d4b5
  43d440:	je     0x43d4a1
  43d442:	outs   dx,WORD PTR ds:[rsi]
  43d444:	jb     0x43d4b3
  43d446:	(bad)  
  43d447:	je     0x43d449
  43d449:	pop    rdi
  43d44a:	addr32 gs je 0x43d4ad
  43d44e:	outs   dx,DWORD PTR ds:[rsi]
  43d44f:	jne    0x43d4c5
  43d451:	jo     0x43d4c8
  43d453:	je     0x43d4b4
  43d455:	outs   dx,WORD PTR ds:[rsi]
  43d457:	jb     0x43d4c6
  43d459:	(bad)  
  43d45a:	je     0x43d45c
  43d45c:	add    BYTE PTR [rax],al
  43d45e:	add    BYTE PTR [rax],al
  43d460:	ins    DWORD PTR es:[rdi],dx
  43d461:	add    BYTE PTR [rbx+0x0],dh
  43d464:	jbe    0x43d466
  43d466:	movsxd eax,DWORD PTR [rax]
  43d468:	jb     0x43d46a
  43d46a:	je     0x43d46c
  43d46c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  43d471:	add    BYTE PTR [rax+rax*1+0x0],ch
  43d475:	add    BYTE PTR [rdi+0x6c],bl
  43d478:	outs   dx,DWORD PTR ds:[rsi]
  43d479:	movsxd esp,DWORD PTR [rcx+0x6c]
  43d47c:	je     0x43d4e7
  43d47e:	ins    DWORD PTR es:[rdi],dx
  43d47f:	gs ss xor al,0x5f
  43d483:	jae    0x43d485
	...
  43d48d:	add    BYTE PTR [rax],al
  43d48f:	add    BYTE PTR [rax+0x11],dh
  43d492:	rex.XB add BYTE PTR [r8],al
	...
  43d49d:	add    BYTE PTR [rax],al
  43d49f:	add    BYTE PTR [rax+0x4311],al
	...
  43d4ad:	add    BYTE PTR [rax],al
  43d4af:	add    BYTE PTR [rax+0x3],dh
  43d4b2:	rex.XB add BYTE PTR [r8],al
	...
  43d4bd:	add    BYTE PTR [rax],al
  43d4bf:	add    BYTE PTR [rax-0x1f],al
  43d4c2:	rex.XB add BYTE PTR [r8],al
	...
  43d4cd:	add    BYTE PTR [rax],al
  43d4cf:	add    BYTE PTR [rax-0x1f],al
  43d4d2:	rex.XB add BYTE PTR [r8],al
	...
  43d4e1:	rol    BYTE PTR [rbx+0x0],cl
	...
  43d4f0:	push   rax
  43d4f1:	leave  
  43d4f2:	rex.XB add BYTE PTR [r8],al
	...
  43d4fd:	add    BYTE PTR [rax],al
  43d4ff:	add    BYTE PTR [rax+0x37],al
  43d502:	add    BYTE PTR [rax],r8b
	...
  43d511:	add    BYTE PTR [rax+0x0],al
	...
  43d520:	rex.W
  43d521:	rex.WRXB
  43d522:	add    BYTE PTR [rax],r8b
	...
  43d52d:	add    BYTE PTR [rax],al
  43d52f:	add    BYTE PTR [rax+0x4f],ah
  43d532:	add    BYTE PTR [rax],r8b
	...
  43d53d:	add    BYTE PTR [rax],al
  43d53f:	add    BYTE PTR [rax+0x4f],bh
  43d542:	add    BYTE PTR [rax],r8b
	...
  43d54d:	add    BYTE PTR [rax],al
  43d54f:	add    BYTE PTR [rax+0x444f],bl
	...
  43d55d:	add    BYTE PTR [rax],al
  43d55f:	add    al,al
  43d561:	rex.WRXB
  43d562:	add    BYTE PTR [rax],r8b
	...
  43d571:	sub    DWORD PTR [rax+rax*1+0x0],eax
	...
  43d57d:	add    BYTE PTR [rax],al
  43d57f:	add    BYTE PTR [rax],dl
  43d581:	(bad)  
  43d582:	add    BYTE PTR [rax],r8b
	...
  43d58d:	add    BYTE PTR [rax],al
  43d58f:	add    BYTE PTR [rax],cl
  43d591:	(bad)  
  43d592:	add    BYTE PTR [rax],r8b
	...
  43d59d:	add    BYTE PTR [rax],al
  43d59f:	add    al,bh
  43d5a1:	add    BYTE PTR ss:[rax],r8b
	...
  43d5b1:	(bad)  
  43d5b2:	add    BYTE PTR [rax],r8b
	...
  43d5c1:	rol    DWORD PTR [rbx+0x0],1
	...
  43d5d0:	rcl    cl,0x43
	...
  43d5df:	add    BYTE PTR [rax],al
  43d5e1:	nop
  43d5e2:	add    BYTE PTR [rax],r8b
	...
  43d5ed:	add    BYTE PTR [rax],al
  43d5ef:	add    BYTE PTR [rax],dl
  43d5f1:	nop
  43d5f2:	add    BYTE PTR [rax],r8b
	...
  43d5fd:	add    BYTE PTR [rax],al
  43d5ff:	add    BYTE PTR [rax],bl
  43d601:	nop
  43d602:	add    BYTE PTR [rax],r8b
	...
  43d60d:	add    BYTE PTR [rax],al
  43d60f:	add    BYTE PTR [rax],dh
  43d611:	nop
  43d612:	add    BYTE PTR [rax],r8b
	...
  43d61d:	add    BYTE PTR [rax],al
  43d61f:	add    BYTE PTR [rax+0x4422],dl
	...
  43d62d:	add    BYTE PTR [rax],al
  43d62f:	add    al,dl
  43d631:	sub    BYTE PTR [rax+rax*1+0x0],al
	...
  43d63d:	add    BYTE PTR [rax],al
  43d63f:	add    al,dh
  43d641:	xor    eax,0x42
	...
  43d64e:	add    BYTE PTR [rax],al
  43d650:	rex sub eax,0x42
	...
  43d65e:	add    BYTE PTR [rax],al
  43d660:	sub    BYTE PTR [rax],0x44
	...
  43d66f:	add    BYTE PTR [rax],ah
  43d671:	adc    DWORD PTR [rbx+0x0],eax
	...
  43d680:	nop
  43d681:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d68d:	add    BYTE PTR [rax],al
  43d68f:	add    BYTE PTR [rcx+rdx*1],dl
  43d692:	rex.XB add BYTE PTR [r8],al
	...
  43d69d:	add    BYTE PTR [rax],al
  43d69f:	add    BYTE PTR [rax+0x28],cl
  43d6a2:	rex.X add BYTE PTR [rax],al
	...
  43d6ad:	add    BYTE PTR [rax],al
  43d6af:	add    BYTE PTR [rax+0x4223],bl
	...
  43d6bd:	add    BYTE PTR [rax],al
  43d6bf:	add    BYTE PTR [rax+0x4223],cl
	...
  43d6cd:	add    BYTE PTR [rax],al
  43d6cf:	add    al,cl
  43d6d1:	add    BYTE PTR ss:[rax],r8b
	...
  43d6dd:	add    BYTE PTR [rax],al
  43d6df:	add    BYTE PTR [rcx+rdx*1],cl
  43d6e2:	rex.XB add BYTE PTR [r8],al
	...
  43d6ed:	add    BYTE PTR [rax],al
  43d6ef:	add    BYTE PTR [rax+riz*1+0x44],dh
	...
  43d6ff:	add    BYTE PTR [rax+riz*1+0x44],ch
	...
  43d70f:	add    BYTE PTR [rax+riz*1+0x44],al
	...
  43d71e:	add    BYTE PTR [rax],al
  43d720:	and    BYTE PTR [rax],0x44
	...
  43d72f:	add    BYTE PTR [rax+0x4420],cl
	...
  43d73d:	add    BYTE PTR [rax],al
  43d73f:	add    BYTE PTR [rax+riz*1+0x44],bh
	...
  43d74f:	add    BYTE PTR [rax+0x20],bh
  43d752:	add    BYTE PTR [rax],r8b
	...
  43d75d:	add    BYTE PTR [rax],al
  43d75f:	add    BYTE PTR [rcx+rdx*1],bl
  43d762:	rex.XB add BYTE PTR [r8],al
	...
  43d76d:	add    BYTE PTR [rax],al
  43d76f:	add    BYTE PTR [rax],bl
  43d771:	adc    DWORD PTR [rbx+0x0],eax
	...
  43d780:	push   0x4420
	...
  43d78d:	add    BYTE PTR [rax],al
  43d78f:	add    al,dh
  43d791:	add    BYTE PTR ss:[rax],r8b
	...
  43d79d:	add    BYTE PTR [rax],al
  43d79f:	add    al,al
  43d7a1:	add    BYTE PTR ss:[rax],r8b
	...
  43d7ad:	add    BYTE PTR [rax],al
  43d7af:	add    BYTE PTR [rax+0x20],ah
  43d7b2:	add    BYTE PTR [rax],r8b
	...
  43d7bd:	add    BYTE PTR [rax],al
  43d7bf:	add    BYTE PTR [rax+riz*1+0x44],cl
	...
  43d7ce:	add    BYTE PTR [rax],al
  43d7d0:	adc    BYTE PTR [rbx+rax*2+0x0],0x0
	...
  43d7e0:	call   0x441c05
	...
  43d7ed:	add    BYTE PTR [rax],al
  43d7ef:	add    al,bh
  43d7f1:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d7fd:	add    BYTE PTR [rax],al
  43d7ff:	add    BYTE PTR [rax+0x43c2],dl
	...
  43d811:	adc    DWORD PTR [rbx+0x0],eax
	...
  43d820:	mov    al,0x28
  43d822:	add    BYTE PTR [rax],r8b
	...
  43d82d:	add    BYTE PTR [rax],al
  43d82f:	add    BYTE PTR [rax+0x4422],ah
	...
  43d83d:	add    BYTE PTR [rax],al
  43d83f:	add    BYTE PTR [rax+0x4428],bl
	...
  43d84d:	add    BYTE PTR [rax],al
  43d84f:	add    BYTE PTR [rax+rbp*1+0x44],dl
	...
  43d85e:	add    BYTE PTR [rax],al
  43d860:	nop
  43d861:	sub    BYTE PTR [rax+rax*1+0x0],al
	...
  43d86d:	add    BYTE PTR [rax],al
  43d86f:	add    al,ch
  43d871:	add    BYTE PTR ss:[rax],r8b
	...
  43d87d:	add    BYTE PTR [rax],al
  43d87f:	add    al,ah
  43d881:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d88d:	add    BYTE PTR [rax],al
  43d88f:	add    al,dh
  43d891:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d89d:	add    BYTE PTR [rax],al
  43d89f:	add    al,al
  43d8a1:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d8ad:	add    BYTE PTR [rax],al
  43d8af:	add    al,dl
  43d8b1:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d8bd:	add    BYTE PTR [rax],al
  43d8bf:	add    al,al
  43d8c1:	jp     0x43d906
	...
  43d8cf:	add    al,cl
  43d8d1:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d8dd:	add    BYTE PTR [rax],al
  43d8df:	add    al,bl
  43d8e1:	and    BYTE PTR [rax+rax*1+0x0],al
	...
  43d8ed:	add    BYTE PTR [rax],al
  43d8ef:	add    BYTE PTR [rax],cl
  43d8f1:	adc    DWORD PTR [rbx+0x0],eax
	...
  43d900:	adc    bl,al
  43d902:	rex.XB add BYTE PTR [r8],al
	...
  43d90d:	add    BYTE PTR [rax],al
  43d90f:	add    BYTE PTR [rbx+rax*8],dl
  43d912:	rex.XB add BYTE PTR [r8],al
	...
  43d921:	and    DWORD PTR [rax+rax*1+0x0],eax
	...
  43d92d:	add    BYTE PTR [rax],al
  43d92f:	add    BYTE PTR [rax+riz*1+0x44],ah
	...
  43d93f:	add    al,ah
  43d941:	add    BYTE PTR ss:[rax],r8b
	...
  43d94d:	add    BYTE PTR [rax],al
  43d94f:	add    BYTE PTR [rax+0x20],dh
  43d952:	add    BYTE PTR [rax],r8b
	...
  43d95d:	add    BYTE PTR [rax],al
  43d95f:	add    BYTE PTR [rcx+rdx*1],al
  43d962:	rex.XB add BYTE PTR [r8],al
	...
  43d96d:	add    BYTE PTR [rax],al
  43d96f:	add    BYTE PTR [rax],dl
  43d971:	adc    DWORD PTR [rbx+0x0],eax
	...
  43d980:	fdiv   DWORD PTR [rsi]
  43d982:	add    BYTE PTR [rax],r8b
	...
  43d98d:	add    BYTE PTR [rax],al
  43d98f:	add    BYTE PTR [rax-0x42],ch
  43d992:	sbb    DWORD PTR [rbx],0x11d3a0c7
  43d998:	mov    ecx,0x4fc00084
  43d99d:	cs jae 0x43d965
  43d9a0:	imul   edi,DWORD PTR [rsi-0x5f38e47f],0x84b911d3
  43d9aa:	add    al,al
  43d9ac:	rex.WRXB
  43d9ad:	cs jae 0x43d975
  43d9b0:	sbb    edx,ebp
  43d9b2:	adc    DWORD PTR [rbx+0x4c],ebx
  43d9b5:	(bad)  
  43d9b6:	push   rdx
  43d9b7:	rex.R mov esp,0xa1f209c3
  43d9bd:	(bad)  
  43d9be:	or     al,0xc0
  43d9c0:	jg     0x43da03
  43d9c2:	(bad)  
  43d9c3:	out    dx,al
  43d9c4:	sub    BYTE PTR [rsi+0x65],bl
  43d9c7:	rex.WRX movabs rsi,0x12c9ad08b5261dea
  43d9d1:	pop    rdi
  43d9d2:	imul   eax,DWORD PTR [rsi+0x4f04340e],0x5392d39f
  43d9dc:	fnsave [rdx]
  43d9de:	je     0x43da40
  43d9e0:	movabs ds:0xb911d3a0c71b81be,eax
  43d9e9:	test   BYTE PTR [rax],al
  43d9eb:	ror    BYTE PTR [rdi+0x2e],0x73
  43d9ef:	(bad)
  43d9f2:	sbb    DWORD PTR [rbx],0x11d3a0c7
  43d9f8:	mov    ecx,0x4fc00084
  43d9fd:	cs jae 0x43d9c5
  43da00:	sar    BYTE PTR [rsi-0x5f38e47f],1
  43da06:	rcl    DWORD PTR [rcx],cl
  43da08:	mov    ecx,0x4fc00084
  43da0d:	cs jae 0x43d9d5
  43da10:	push   0x51604f8e
  43da15:	rex.WB push r12
  43da17:	rex.WR mov sil,r15b
  43da1a:	stos   DWORD PTR es:[rdi],eax
  43da1b:	rcr    BYTE PTR [rbp+rdx*1-0x4d],cl
  43da1f:	(bad)  
	...
  43da30:	push   rcx
  43da31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43da32:	push   rcx
  43da33:	cld    
  43da34:	out    0xd5,eax
  43da36:	fst    DWORD PTR [rcx]
  43da38:	scas   eax,DWORD PTR es:[rdi]
  43da39:	push   rbp
  43da3a:	add    BYTE PTR [rip+0x2ff434e],al        # 0x3431d8e
  43da40:	rex.RXB
  43da41:	rex.XB
  43da42:	rex.XB cmp spl,BYTE PTR [r8]
  43da45:	sub    BYTE PTR [rdi+0x4e],al
  43da48:	push   rbp
  43da49:	sub    DWORD PTR [rax],esp
  43da4b:	xor    al,0x2e
  43da4d:	cmp    DWORD PTR [rsi],ebp
  43da4f:	xor    al,0x0
	...
  43da5d:	add    BYTE PTR [rax],al
  43da5f:	add    BYTE PTR [rdi+0x43],al
  43da62:	rex.XB cmp spl,BYTE PTR [r8]
  43da65:	sub    BYTE PTR [rdi+0x4e],al
  43da68:	push   rbp
  43da69:	sub    DWORD PTR [rax],esp
  43da6b:	xor    al,0x2e
  43da6d:	cmp    DWORD PTR [rsi],ebp
  43da6f:	xor    al,0x0
	...
  43da7d:	add    BYTE PTR [rax],al
  43da7f:	add    BYTE PTR [rdi+0x43],al
  43da82:	rex.XB cmp spl,BYTE PTR [r8]
  43da85:	sub    BYTE PTR [rdi+0x4e],al
  43da88:	push   rbp
  43da89:	sub    DWORD PTR [rax],esp
  43da8b:	xor    al,0x2e
  43da8d:	cmp    DWORD PTR [rsi],ebp
  43da8f:	xor    al,0x0
	...
  43da9d:	add    BYTE PTR [rax],al
  43da9f:	add    BYTE PTR [rdi+0x43],al
  43daa2:	rex.XB cmp spl,BYTE PTR [r8]
  43daa5:	sub    BYTE PTR [rdi+0x4e],al
  43daa8:	push   rbp
  43daa9:	sub    DWORD PTR [rax],esp
  43daab:	xor    al,0x2e
  43daad:	cmp    DWORD PTR [rsi],ebp
  43daaf:	xor    al,0x0
	...
  43dabd:	add    BYTE PTR [rax],al
  43dabf:	add    BYTE PTR [rdi+0x43],al
  43dac2:	rex.XB cmp spl,BYTE PTR [r8]
  43dac5:	sub    BYTE PTR [rdi+0x4e],al
  43dac8:	push   rbp
  43dac9:	sub    DWORD PTR [rax],esp
  43dacb:	xor    al,0x2e
  43dacd:	cmp    DWORD PTR [rsi],ebp
  43dacf:	xor    al,0x0
	...
  43dadd:	add    BYTE PTR [rax],al
  43dadf:	add    BYTE PTR [rdi+0x43],al
  43dae2:	rex.XB cmp spl,BYTE PTR [r8]
  43dae5:	sub    BYTE PTR [rdi+0x4e],al
  43dae8:	push   rbp
  43dae9:	sub    DWORD PTR [rax],esp
  43daeb:	xor    al,0x2e
  43daed:	cmp    DWORD PTR [rsi],ebp
  43daef:	xor    al,0x0
	...
  43dafd:	add    BYTE PTR [rax],al
  43daff:	add    BYTE PTR [rdi+0x43],al
  43db02:	rex.XB cmp spl,BYTE PTR [r8]
  43db05:	sub    BYTE PTR [rdi+0x4e],al
  43db08:	push   rbp
  43db09:	sub    DWORD PTR [rax],esp
  43db0b:	xor    al,0x2e
  43db0d:	cmp    DWORD PTR [rsi],ebp
  43db0f:	xor    al,0x0
	...
  43db1d:	add    BYTE PTR [rax],al
  43db1f:	add    BYTE PTR [rdi+0x43],al
  43db22:	rex.XB cmp spl,BYTE PTR [r8]
  43db25:	sub    BYTE PTR [rdi+0x4e],al
  43db28:	push   rbp
  43db29:	sub    DWORD PTR [rax],esp
  43db2b:	xor    al,0x2e
  43db2d:	cmp    DWORD PTR [rsi],ebp
  43db2f:	xor    al,0x0
	...
  43db3d:	add    BYTE PTR [rax],al
  43db3f:	add    BYTE PTR [rdi+0x43],al
  43db42:	rex.XB cmp spl,BYTE PTR [r8]
  43db45:	sub    BYTE PTR [rdi+0x4e],al
  43db48:	push   rbp
  43db49:	sub    DWORD PTR [rax],esp
  43db4b:	xor    al,0x2e
  43db4d:	cmp    DWORD PTR [rsi],ebp
  43db4f:	xor    al,0x0
	...
  43db5d:	add    BYTE PTR [rax],al
  43db5f:	add    BYTE PTR [rdi+0x43],al
  43db62:	rex.XB cmp spl,BYTE PTR [r8]
  43db65:	sub    BYTE PTR [rdi+0x4e],al
  43db68:	push   rbp
  43db69:	sub    DWORD PTR [rax],esp
  43db6b:	xor    al,0x2e
  43db6d:	cmp    DWORD PTR [rsi],ebp
  43db6f:	xor    al,0x0
	...
  43db7d:	add    BYTE PTR [rax],al
  43db7f:	add    BYTE PTR [rdi+0x43],al
  43db82:	rex.XB cmp spl,BYTE PTR [r8]
  43db85:	sub    BYTE PTR [rdi+0x4e],al
  43db88:	push   rbp
  43db89:	sub    DWORD PTR [rax],esp
  43db8b:	xor    al,0x2e
  43db8d:	cmp    DWORD PTR [rsi],ebp
  43db8f:	xor    al,0x0
	...
  43db9d:	add    BYTE PTR [rax],al
  43db9f:	add    BYTE PTR [rdi+0x43],al
  43dba2:	rex.XB cmp spl,BYTE PTR [r8]
  43dba5:	sub    BYTE PTR [rdi+0x4e],al
  43dba8:	push   rbp
  43dba9:	sub    DWORD PTR [rax],esp
  43dbab:	xor    al,0x2e
  43dbad:	cmp    DWORD PTR [rsi],ebp
  43dbaf:	xor    al,0x0
	...
  43dbbd:	add    BYTE PTR [rax],al
  43dbbf:	add    BYTE PTR [rdi+0x43],al
  43dbc2:	rex.XB cmp spl,BYTE PTR [r8]
  43dbc5:	sub    BYTE PTR [rdi+0x4e],al
  43dbc8:	push   rbp
  43dbc9:	sub    DWORD PTR [rax],esp
  43dbcb:	xor    al,0x2e
  43dbcd:	cmp    DWORD PTR [rsi],ebp
  43dbcf:	xor    al,0x0
	...
  43dbdd:	add    BYTE PTR [rax],al
  43dbdf:	add    BYTE PTR [rdi+0x43],al
  43dbe2:	rex.XB cmp spl,BYTE PTR [r8]
  43dbe5:	sub    BYTE PTR [rdi+0x4e],al
  43dbe8:	push   rbp
  43dbe9:	sub    DWORD PTR [rax],esp
  43dbeb:	xor    al,0x2e
  43dbed:	cmp    DWORD PTR [rsi],ebp
  43dbef:	xor    al,0x0
	...
  43dbfd:	add    BYTE PTR [rax],al
  43dbff:	add    BYTE PTR [rdi+0x43],al
  43dc02:	rex.XB cmp spl,BYTE PTR [r8]
  43dc05:	sub    BYTE PTR [rdi+0x4e],al
  43dc08:	push   rbp
  43dc09:	sub    DWORD PTR [rax],esp
  43dc0b:	xor    al,0x2e
  43dc0d:	cmp    DWORD PTR [rsi],ebp
  43dc0f:	xor    al,0x0
	...
  43dc1d:	add    BYTE PTR [rax],al
  43dc1f:	add    BYTE PTR [rdi+0x43],al
  43dc22:	rex.XB cmp spl,BYTE PTR [r8]
  43dc25:	sub    BYTE PTR [rdi+0x4e],al
  43dc28:	push   rbp
  43dc29:	sub    DWORD PTR [rax],esp
  43dc2b:	xor    al,0x2e
  43dc2d:	cmp    DWORD PTR [rsi],ebp
  43dc2f:	xor    al,0x0
	...
  43dc3d:	add    BYTE PTR [rax],al
  43dc3f:	add    BYTE PTR [rdi+0x43],al
  43dc42:	rex.XB cmp spl,BYTE PTR [r8]
  43dc45:	sub    BYTE PTR [rdi+0x4e],al
  43dc48:	push   rbp
  43dc49:	sub    DWORD PTR [rax],esp
  43dc4b:	xor    al,0x2e
  43dc4d:	cmp    DWORD PTR [rsi],ebp
  43dc4f:	xor    al,0x0
	...
  43dc5d:	add    BYTE PTR [rax],al
  43dc5f:	add    BYTE PTR [rdi+0x43],al
  43dc62:	rex.XB cmp spl,BYTE PTR [r8]
  43dc65:	sub    BYTE PTR [rdi+0x4e],al
  43dc68:	push   rbp
  43dc69:	sub    DWORD PTR [rax],esp
  43dc6b:	xor    al,0x2e
  43dc6d:	cmp    DWORD PTR [rsi],ebp
  43dc6f:	xor    al,0x0
	...
  43dc7d:	add    BYTE PTR [rax],al
  43dc7f:	add    BYTE PTR [rdi+0x43],al
  43dc82:	rex.XB cmp spl,BYTE PTR [r8]
  43dc85:	sub    BYTE PTR [rdi+0x4e],al
  43dc88:	push   rbp
  43dc89:	sub    DWORD PTR [rax],esp
  43dc8b:	xor    al,0x2e
  43dc8d:	cmp    DWORD PTR [rsi],ebp
  43dc8f:	xor    al,0x0
	...
  43dc9d:	add    BYTE PTR [rax],al
  43dc9f:	add    BYTE PTR [rdi+0x43],al
  43dca2:	rex.XB cmp spl,BYTE PTR [r8]
  43dca5:	sub    BYTE PTR [rdi+0x4e],al
  43dca8:	push   rbp
  43dca9:	sub    DWORD PTR [rax],esp
  43dcab:	xor    al,0x2e
  43dcad:	cmp    DWORD PTR [rsi],ebp
  43dcaf:	xor    al,0x0
	...
  43dcbd:	add    BYTE PTR [rax],al
  43dcbf:	add    BYTE PTR [rdi+0x43],al
  43dcc2:	rex.XB cmp spl,BYTE PTR [r8]
  43dcc5:	sub    BYTE PTR [rdi+0x4e],al
  43dcc8:	push   rbp
  43dcc9:	sub    DWORD PTR [rax],esp
  43dccb:	xor    al,0x2e
  43dccd:	cmp    DWORD PTR [rsi],ebp
  43dccf:	xor    al,0x0
	...
  43dcdd:	add    BYTE PTR [rax],al
  43dcdf:	add    BYTE PTR [rdi+0x43],al
  43dce2:	rex.XB cmp spl,BYTE PTR [r8]
  43dce5:	sub    BYTE PTR [rdi+0x4e],al
  43dce8:	push   rbp
  43dce9:	sub    DWORD PTR [rax],esp
  43dceb:	xor    al,0x2e
  43dced:	cmp    DWORD PTR [rsi],ebp
  43dcef:	xor    al,0x0
	...
  43dcfd:	add    BYTE PTR [rax],al
  43dcff:	add    BYTE PTR [rdi+0x43],al
  43dd02:	rex.XB cmp spl,BYTE PTR [r8]
  43dd05:	sub    BYTE PTR [rdi+0x4e],al
  43dd08:	push   rbp
  43dd09:	sub    DWORD PTR [rax],esp
  43dd0b:	xor    al,0x2e
  43dd0d:	cmp    DWORD PTR [rsi],ebp
  43dd0f:	xor    al,0x0
	...
  43dd1d:	add    BYTE PTR [rax],al
  43dd1f:	add    BYTE PTR [rdi+0x43],al
  43dd22:	rex.XB cmp spl,BYTE PTR [r8]
  43dd25:	sub    BYTE PTR [rdi+0x4e],al
  43dd28:	push   rbp
  43dd29:	sub    DWORD PTR [rax],esp
  43dd2b:	xor    al,0x2e
  43dd2d:	cmp    DWORD PTR [rsi],ebp
  43dd2f:	xor    al,0x0
	...
  43dd3d:	add    BYTE PTR [rax],al
  43dd3f:	add    BYTE PTR [rdi+0x43],al
  43dd42:	rex.XB cmp spl,BYTE PTR [r8]
  43dd45:	sub    BYTE PTR [rdi+0x4e],al
  43dd48:	push   rbp
  43dd49:	sub    DWORD PTR [rax],esp
  43dd4b:	xor    al,0x2e
  43dd4d:	cmp    DWORD PTR [rsi],ebp
  43dd4f:	xor    al,0x0
	...
  43dd5d:	add    BYTE PTR [rax],al
  43dd5f:	add    BYTE PTR [rdi+0x43],al
  43dd62:	rex.XB cmp spl,BYTE PTR [r8]
  43dd65:	sub    BYTE PTR [rdi+0x4e],al
  43dd68:	push   rbp
  43dd69:	sub    DWORD PTR [rax],esp
  43dd6b:	xor    al,0x2e
  43dd6d:	cmp    DWORD PTR [rsi],ebp
  43dd6f:	xor    al,0x0
	...
  43dd7d:	add    BYTE PTR [rax],al
  43dd7f:	add    BYTE PTR [rdi+0x43],al
  43dd82:	rex.XB cmp spl,BYTE PTR [r8]
  43dd85:	sub    BYTE PTR [rdi+0x4e],al
  43dd88:	push   rbp
  43dd89:	sub    DWORD PTR [rax],esp
  43dd8b:	xor    al,0x2e
  43dd8d:	cmp    DWORD PTR [rsi],ebp
  43dd8f:	xor    al,0x0
	...
  43dd9d:	add    BYTE PTR [rax],al
  43dd9f:	add    BYTE PTR [rdi+0x43],al
  43dda2:	rex.XB cmp spl,BYTE PTR [r8]
  43dda5:	sub    BYTE PTR [rdi+0x4e],al
  43dda8:	push   rbp
  43dda9:	sub    DWORD PTR [rax],esp
  43ddab:	xor    al,0x2e
  43ddad:	cmp    DWORD PTR [rsi],ebp
  43ddaf:	xor    al,0x0
	...
  43ddbd:	add    BYTE PTR [rax],al
  43ddbf:	add    BYTE PTR [rdi+0x43],al
  43ddc2:	rex.XB cmp spl,BYTE PTR [r8]
  43ddc5:	sub    BYTE PTR [rdi+0x4e],al
  43ddc8:	push   rbp
  43ddc9:	sub    DWORD PTR [rax],esp
  43ddcb:	xor    al,0x2e
  43ddcd:	cmp    DWORD PTR [rsi],ebp
  43ddcf:	xor    al,0x0
	...
  43dddd:	add    BYTE PTR [rax],al
  43dddf:	add    BYTE PTR [rdi+0x43],al
  43dde2:	rex.XB cmp spl,BYTE PTR [r8]
  43dde5:	sub    BYTE PTR [rdi+0x4e],al
  43dde8:	push   rbp
  43dde9:	sub    DWORD PTR [rax],esp
  43ddeb:	xor    al,0x2e
  43dded:	cmp    DWORD PTR [rsi],ebp
  43ddef:	xor    al,0x0
	...
  43ddfd:	add    BYTE PTR [rax],al
  43ddff:	add    BYTE PTR [rdi+0x43],al
  43de02:	rex.XB cmp spl,BYTE PTR [r8]
  43de05:	sub    BYTE PTR [rdi+0x4e],al
  43de08:	push   rbp
  43de09:	sub    DWORD PTR [rax],esp
  43de0b:	xor    al,0x2e
  43de0d:	cmp    DWORD PTR [rsi],ebp
  43de0f:	xor    al,0x0
	...
  43de1d:	add    BYTE PTR [rax],al
  43de1f:	add    BYTE PTR [rdi+0x43],al
  43de22:	rex.XB cmp spl,BYTE PTR [r8]
  43de25:	sub    BYTE PTR [rdi+0x4e],al
  43de28:	push   rbp
  43de29:	sub    DWORD PTR [rax],esp
  43de2b:	xor    al,0x2e
  43de2d:	cmp    DWORD PTR [rsi],ebp
  43de2f:	xor    al,0x0
	...
  43de3d:	add    BYTE PTR [rax],al
  43de3f:	add    BYTE PTR [rdi+0x43],al
  43de42:	rex.XB cmp spl,BYTE PTR [r8]
  43de45:	sub    BYTE PTR [rdi+0x4e],al
  43de48:	push   rbp
  43de49:	sub    DWORD PTR [rax],esp
  43de4b:	xor    al,0x2e
  43de4d:	cmp    DWORD PTR [rsi],ebp
  43de4f:	xor    al,0x0
	...
  43de5d:	add    BYTE PTR [rax],al
  43de5f:	add    BYTE PTR [rdi+0x43],al
  43de62:	rex.XB cmp spl,BYTE PTR [r8]
  43de65:	sub    BYTE PTR [rdi+0x4e],al
  43de68:	push   rbp
  43de69:	sub    DWORD PTR [rax],esp
  43de6b:	xor    al,0x2e
  43de6d:	cmp    DWORD PTR [rsi],ebp
  43de6f:	xor    al,0x0
	...
  43de7d:	add    BYTE PTR [rax],al
  43de7f:	add    BYTE PTR [rdi+0x43],al
  43de82:	rex.XB cmp spl,BYTE PTR [r8]
  43de85:	sub    BYTE PTR [rdi+0x4e],al
  43de88:	push   rbp
  43de89:	sub    DWORD PTR [rax],esp
  43de8b:	xor    al,0x2e
  43de8d:	cmp    DWORD PTR [rsi],ebp
  43de8f:	xor    al,0x0
	...
  43de9d:	add    BYTE PTR [rax],al
  43de9f:	add    BYTE PTR [rdi+0x43],al
  43dea2:	rex.XB cmp spl,BYTE PTR [r8]
  43dea5:	sub    BYTE PTR [rdi+0x4e],al
  43dea8:	push   rbp
  43dea9:	sub    DWORD PTR [rax],esp
  43deab:	xor    al,0x2e
  43dead:	cmp    DWORD PTR [rsi],ebp
  43deaf:	xor    al,0x0
	...
  43debd:	add    BYTE PTR [rax],al
  43debf:	add    BYTE PTR [rdi+0x43],al
  43dec2:	rex.XB cmp spl,BYTE PTR [r8]
  43dec5:	sub    BYTE PTR [rdi+0x4e],al
  43dec8:	push   rbp
  43dec9:	sub    DWORD PTR [rax],esp
  43decb:	xor    al,0x2e
  43decd:	cmp    DWORD PTR [rsi],ebp
  43decf:	xor    al,0x0
	...
  43dedd:	add    BYTE PTR [rax],al
  43dedf:	add    BYTE PTR [rdi+0x43],al
  43dee2:	rex.XB cmp spl,BYTE PTR [r8]
  43dee5:	sub    BYTE PTR [rdi+0x4e],al
  43dee8:	push   rbp
  43dee9:	sub    DWORD PTR [rax],esp
  43deeb:	xor    al,0x2e
  43deed:	cmp    DWORD PTR [rsi],ebp
  43deef:	xor    al,0x0
	...
  43defd:	add    BYTE PTR [rax],al
  43deff:	add    BYTE PTR [rdi+0x43],al
  43df02:	rex.XB cmp spl,BYTE PTR [r8]
  43df05:	sub    BYTE PTR [rdi+0x4e],al
  43df08:	push   rbp
  43df09:	sub    DWORD PTR [rax],esp
  43df0b:	xor    al,0x2e
  43df0d:	cmp    DWORD PTR [rsi],ebp
  43df0f:	xor    al,0x0
	...
  43df1d:	add    BYTE PTR [rax],al
  43df1f:	add    BYTE PTR [rdi+0x43],al
  43df22:	rex.XB cmp spl,BYTE PTR [r8]
  43df25:	sub    BYTE PTR [rdi+0x4e],al
  43df28:	push   rbp
  43df29:	sub    DWORD PTR [rax],esp
  43df2b:	xor    al,0x2e
  43df2d:	cmp    DWORD PTR [rsi],ebp
  43df2f:	xor    al,0x0
	...
  43df3d:	add    BYTE PTR [rax],al
  43df3f:	add    BYTE PTR [rdi+0x43],al
  43df42:	rex.XB cmp spl,BYTE PTR [r8]
  43df45:	sub    BYTE PTR [rdi+0x4e],al
  43df48:	push   rbp
  43df49:	sub    DWORD PTR [rax],esp
  43df4b:	xor    al,0x2e
  43df4d:	cmp    DWORD PTR [rsi],ebp
  43df4f:	xor    al,0x0
	...
  43df5d:	add    BYTE PTR [rax],al
  43df5f:	add    BYTE PTR [rdi+0x43],al
  43df62:	rex.XB cmp spl,BYTE PTR [r8]
  43df65:	sub    BYTE PTR [rdi+0x4e],al
  43df68:	push   rbp
  43df69:	sub    DWORD PTR [rax],esp
  43df6b:	xor    al,0x2e
  43df6d:	cmp    DWORD PTR [rsi],ebp
  43df6f:	xor    al,0x0
	...
  43df7d:	add    BYTE PTR [rax],al
  43df7f:	add    BYTE PTR [rdi+0x43],al
  43df82:	rex.XB cmp spl,BYTE PTR [r8]
  43df85:	sub    BYTE PTR [rdi+0x4e],al
  43df88:	push   rbp
  43df89:	sub    DWORD PTR [rax],esp
  43df8b:	xor    al,0x2e
  43df8d:	cmp    DWORD PTR [rsi],ebp
  43df8f:	xor    al,0x0
	...
  43df9d:	add    BYTE PTR [rax],al
  43df9f:	add    BYTE PTR [rdi+0x43],al
  43dfa2:	rex.XB cmp spl,BYTE PTR [r8]
  43dfa5:	sub    BYTE PTR [rdi+0x4e],al
  43dfa8:	push   rbp
  43dfa9:	sub    DWORD PTR [rax],esp
  43dfab:	xor    al,0x2e
  43dfad:	cmp    DWORD PTR [rsi],ebp
  43dfaf:	xor    al,0x0
	...
  43dfbd:	add    BYTE PTR [rax],al
  43dfbf:	add    BYTE PTR [rdi+0x43],al
  43dfc2:	rex.XB cmp spl,BYTE PTR [r8]
  43dfc5:	sub    BYTE PTR [rdi+0x4e],al
  43dfc8:	push   rbp
  43dfc9:	sub    DWORD PTR [rax],esp
  43dfcb:	xor    al,0x2e
  43dfcd:	cmp    DWORD PTR [rsi],ebp
  43dfcf:	xor    al,0x0
	...
  43dfdd:	add    BYTE PTR [rax],al
  43dfdf:	add    BYTE PTR [rdi+0x43],al
  43dfe2:	rex.XB cmp spl,BYTE PTR [r8]
  43dfe5:	sub    BYTE PTR [rdi+0x4e],al
  43dfe8:	push   rbp
  43dfe9:	sub    DWORD PTR [rax],esp
  43dfeb:	xor    al,0x2e
  43dfed:	cmp    DWORD PTR [rsi],ebp
  43dfef:	xor    al,0x0
	...
  43dffd:	add    BYTE PTR [rax],al
  43dfff:	add    BYTE PTR [rdi+0x43],al
  43e002:	rex.XB cmp spl,BYTE PTR [r8]
  43e005:	sub    BYTE PTR [rdi+0x4e],al
  43e008:	push   rbp
  43e009:	sub    DWORD PTR [rax],esp
  43e00b:	xor    al,0x2e
  43e00d:	cmp    DWORD PTR [rsi],ebp
  43e00f:	xor    al,0x0
	...
  43e01d:	add    BYTE PTR [rax],al
  43e01f:	add    BYTE PTR [rdi+0x43],al
  43e022:	rex.XB cmp spl,BYTE PTR [r8]
  43e025:	sub    BYTE PTR [rdi+0x4e],al
  43e028:	push   rbp
  43e029:	sub    DWORD PTR [rax],esp
  43e02b:	xor    al,0x2e
  43e02d:	cmp    DWORD PTR [rsi],ebp
  43e02f:	xor    al,0x0
	...
  43e03d:	add    BYTE PTR [rax],al
  43e03f:	add    BYTE PTR [rdi+0x43],al
  43e042:	rex.XB cmp spl,BYTE PTR [r8]
  43e045:	sub    BYTE PTR [rdi+0x4e],al
  43e048:	push   rbp
  43e049:	sub    DWORD PTR [rax],esp
  43e04b:	xor    al,0x2e
  43e04d:	cmp    DWORD PTR [rsi],ebp
  43e04f:	xor    al,0x0
	...
  43e05d:	add    BYTE PTR [rax],al
  43e05f:	add    BYTE PTR [rdi+0x43],al
  43e062:	rex.XB cmp spl,BYTE PTR [r8]
  43e065:	sub    BYTE PTR [rdi+0x4e],al
  43e068:	push   rbp
  43e069:	sub    DWORD PTR [rax],esp
  43e06b:	xor    al,0x2e
  43e06d:	cmp    DWORD PTR [rsi],ebp
  43e06f:	xor    al,0x0
	...
  43e07d:	add    BYTE PTR [rax],al
  43e07f:	add    BYTE PTR [rdi+0x43],al
  43e082:	rex.XB cmp spl,BYTE PTR [r8]
  43e085:	sub    BYTE PTR [rdi+0x4e],al
  43e088:	push   rbp
  43e089:	sub    DWORD PTR [rax],esp
  43e08b:	xor    al,0x2e
  43e08d:	cmp    DWORD PTR [rsi],ebp
  43e08f:	xor    al,0x0
	...
  43e09d:	add    BYTE PTR [rax],al
  43e09f:	add    BYTE PTR [rdi+0x43],al
  43e0a2:	rex.XB cmp spl,BYTE PTR [r8]
  43e0a5:	sub    BYTE PTR [rdi+0x4e],al
  43e0a8:	push   rbp
  43e0a9:	sub    DWORD PTR [rax],esp
  43e0ab:	xor    al,0x2e
  43e0ad:	cmp    DWORD PTR [rsi],ebp
  43e0af:	xor    al,0x0
	...
  43e0bd:	add    BYTE PTR [rax],al
  43e0bf:	add    BYTE PTR [rdi+0x43],al
  43e0c2:	rex.XB cmp spl,BYTE PTR [r8]
  43e0c5:	sub    BYTE PTR [rdi+0x4e],al
  43e0c8:	push   rbp
  43e0c9:	sub    DWORD PTR [rax],esp
  43e0cb:	xor    al,0x2e
  43e0cd:	cmp    DWORD PTR [rsi],ebp
  43e0cf:	xor    al,0x0
	...
  43e0dd:	add    BYTE PTR [rax],al
  43e0df:	add    BYTE PTR [rdi+0x43],al
  43e0e2:	rex.XB cmp spl,BYTE PTR [r8]
  43e0e5:	sub    BYTE PTR [rdi+0x4e],al
  43e0e8:	push   rbp
  43e0e9:	sub    DWORD PTR [rax],esp
  43e0eb:	xor    al,0x2e
  43e0ed:	cmp    DWORD PTR [rsi],ebp
  43e0ef:	xor    al,0x0
	...
  43e0fd:	add    BYTE PTR [rax],al
  43e0ff:	add    BYTE PTR [rdi+0x43],al
  43e102:	rex.XB cmp spl,BYTE PTR [r8]
  43e105:	sub    BYTE PTR [rdi+0x4e],al
  43e108:	push   rbp
  43e109:	sub    DWORD PTR [rax],esp
  43e10b:	xor    al,0x2e
  43e10d:	cmp    DWORD PTR [rsi],ebp
  43e10f:	xor    al,0x0
	...
  43e11d:	add    BYTE PTR [rax],al
  43e11f:	add    BYTE PTR [rdi+0x43],al
  43e122:	rex.XB cmp spl,BYTE PTR [r8]
  43e125:	sub    BYTE PTR [rdi+0x4e],al
  43e128:	push   rbp
  43e129:	sub    DWORD PTR [rax],esp
  43e12b:	xor    al,0x2e
  43e12d:	cmp    DWORD PTR [rsi],ebp
  43e12f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000043f000 <.pdata>:
  43f000:	add    BYTE PTR [rax],dl
  43f002:	add    BYTE PTR [rax],al
  43f004:	add    DWORD PTR [rax],edx
  43f006:	add    BYTE PTR [rax],al
  43f008:	add    BYTE PTR [rax],al
  43f00a:	add    al,0x0
  43f00c:	adc    BYTE PTR [rax],dl
  43f00e:	add    BYTE PTR [rax],al
  43f010:	push   rcx
  43f011:	adc    DWORD PTR [rax],eax
  43f013:	add    BYTE PTR [rax+rax*1],al
  43f016:	add    al,0x0
  43f018:	(bad)  
  43f019:	adc    DWORD PTR [rax],eax
  43f01b:	add    BYTE PTR [rsi+0xc000011],ch
  43f021:	add    BYTE PTR [rax+rax*1],al
  43f024:	mov    al,0x11
  43f026:	add    BYTE PTR [rax],al
  43f028:	(bad)  
  43f029:	adc    al,0x0
  43f02b:	add    BYTE PTR [rax+rax*1],dl
  43f02e:	add    al,0x0
  43f030:	rcl    BYTE PTR [rax+rax*1],1
  43f033:	add    dl,dh
  43f035:	adc    al,0x0
  43f037:	add    BYTE PTR [rax],ch
  43f039:	add    BYTE PTR [rax+rax*1],al
  43f03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1565f042
  43f042:	add    BYTE PTR [rax],al
  43f044:	rex.W add BYTE PTR [rax+rax*1],al
  43f048:	xor    BYTE PTR [rip+0x15570000],dl        # 0x159af04e
  43f04e:	add    BYTE PTR [rax],al
  43f050:	push   0x60000400
  43f055:	adc    eax,0x15870000
  43f05a:	add    BYTE PTR [rax],al
  43f05c:	je     0x43f05e
  43f05e:	add    al,0x0
  43f060:	nop
  43f061:	adc    eax,0x15b20000
  43f066:	add    BYTE PTR [rax],al
  43f068:	jl     0x43f06a
  43f06a:	add    al,0x0
  43f06c:	rcl    BYTE PTR [rip+0x15e10000],0x0        # 0x1624f073
  43f073:	add    BYTE PTR [rax+rax*1+0x15f00004],al
  43f07a:	add    BYTE PTR [rax],al
  43f07c:	ins    DWORD PTR es:[rdi],dx
  43f07d:	(bad)  
  43f07e:	add    BYTE PTR [rax],al
  43f080:	mov    BYTE PTR [rax],al
  43f082:	add    al,0x0
  43f084:	jo     0x43f09c
  43f086:	add    BYTE PTR [rax],al
  43f088:	lea    edx,[rsi]
  43f08a:	add    BYTE PTR [rax],al
  43f08c:	pushf  
  43f08d:	add    BYTE PTR [rax+rax*1],al
  43f090:	nop
  43f091:	(bad)  
  43f092:	add    BYTE PTR [rax],al
  43f094:	(bad)
  43f097:	add    BYTE PTR [rax+rax*1+0x17d00004],ah
  43f09e:	add    BYTE PTR [rax],al
  43f0a0:	add    eax,0xb8000019
  43f0a5:	add    BYTE PTR [rax+rax*1],al
  43f0a8:	adc    BYTE PTR [rcx],bl
  43f0aa:	add    BYTE PTR [rax],al
  43f0ac:	int    0x1a
  43f0ae:	add    BYTE PTR [rax],al
  43f0b0:	int3   
  43f0b1:	add    BYTE PTR [rax+rax*1],al
  43f0b4:	rcr    BYTE PTR [rdx],1
  43f0b6:	add    BYTE PTR [rax],al
  43f0b8:	(bad)  
  43f0b9:	sbb    eax,DWORD PTR [rax]
  43f0bb:	add    ah,ah
  43f0bd:	add    BYTE PTR [rax+rax*1],al
  43f0c0:	loopne 0x43f0dd
  43f0c2:	add    BYTE PTR [rax],al
  43f0c4:	or     DWORD PTR [rax+rax*1],ebx
  43f0c7:	add    ah,dh
  43f0c9:	add    BYTE PTR [rax+rax*1],al
  43f0cc:	adc    BYTE PTR [rax+rax*1],bl
  43f0cf:	add    BYTE PTR [rip+0xfffffffffc00001c],ch        # 0xfffffffffc43f0f1
  43f0d5:	add    BYTE PTR [rax+rax*1],al
  43f0d8:	xor    BYTE PTR [rax+rax*1],bl
  43f0db:	add    BYTE PTR [rsp+rbx*1+0x0],dh
  43f0df:	add    BYTE PTR [rax],al
  43f0e1:	add    DWORD PTR [rax+rax*1],eax
  43f0e4:	sbb    BYTE PTR [rax+rax*1],0x0
  43f0e8:	xchg   ecx,eax
  43f0e9:	sbb    al,0x0
  43f0eb:	add    BYTE PTR [rax],cl
  43f0ed:	add    DWORD PTR [rax+rax*1],eax
  43f0f0:	movabs al,ds:0xc00001ca800001c
  43f0f9:	add    DWORD PTR [rax+rax*1],eax
  43f0fc:	mov    al,0x1c
  43f0fe:	add    BYTE PTR [rax],al
  43f100:	int    0x1c
  43f102:	add    BYTE PTR [rax],al
  43f104:	adc    BYTE PTR [rcx],al
  43f106:	add    al,0x0
  43f108:	rcr    BYTE PTR [rax+rax*1],1
  43f10b:	add    BYTE PTR [rdx],dl
  43f10d:	and    DWORD PTR [rax],eax
  43f10f:	add    BYTE PTR [rax],bl
  43f111:	add    DWORD PTR [rax+rax*1],eax
  43f114:	and    BYTE PTR [rcx],ah
  43f116:	add    BYTE PTR [rax],al
  43f118:	(bad)  
  43f119:	and    eax,DWORD PTR [rax]
  43f11b:	add    BYTE PTR [rax],dh
  43f11d:	add    DWORD PTR [rax+rax*1],eax
  43f120:	shl    BYTE PTR [rbx],1
  43f122:	add    BYTE PTR [rax],al
  43f124:	ret    0x24
  43f127:	add    BYTE PTR [rax+0x1],cl
  43f12a:	add    al,0x0
  43f12c:	shl    BYTE PTR [rax+rax*1],1
  43f12f:	add    BYTE PTR [rdx],cl
  43f131:	and    eax,0x15c0000
  43f136:	add    al,0x0
  43f138:	adc    BYTE PTR [rip+0x26bb0000],ah        # 0x26fef13e
  43f13e:	add    BYTE PTR [rax],al
  43f140:	push   0xffffffffc0000401
  43f145:	add    BYTE PTR es:[rax],al
  43f148:	jmp    0x43f174
  43f14a:	add    BYTE PTR [rax],al
  43f14c:	jl     0x43f14f
  43f14e:	add    al,0x0
  43f150:	lock sub al,BYTE PTR [rax]
  43f153:	add    BYTE PTR [rax+0x2d],dh
  43f156:	add    BYTE PTR [rax],al
  43f158:	xchg   esp,eax
  43f159:	add    DWORD PTR [rax+rax*1],eax
  43f15c:	jo     0x43f18b
  43f15e:	add    BYTE PTR [rax],al
  43f160:	in     al,0x2e
  43f162:	add    BYTE PTR [rax],al
  43f164:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f165:	add    DWORD PTR [rax+rax*1],eax
  43f168:	lock add BYTE PTR cs:[rax],al
  43f16c:	xor    rax,0x1b80000
  43f172:	add    al,0x0
  43f174:	push   rax
  43f175:	xor    eax,0x36cb0000
  43f17a:	add    BYTE PTR [rax],al
  43f17c:	rol    BYTE PTR [rcx],1
  43f17e:	add    al,0x0
  43f180:	shl    BYTE PTR [rsi],1
  43f182:	add    BYTE PTR [rax],al
  43f184:	test   eax,0xe000003c
  43f189:	add    DWORD PTR [rax+rax*1],eax
  43f18c:	mov    al,0x3c
  43f18e:	add    BYTE PTR [rax],al
  43f190:	jae    0x43f1d0
  43f192:	add    BYTE PTR [rax],al
  43f194:	or     BYTE PTR [rdx],al
  43f196:	add    al,0x0
  43f198:	cmp    BYTE PTR [rsi],0x0
  43f19b:	add    BYTE PTR [rsi+0x43],ch
  43f19e:	add    BYTE PTR [rax],al
  43f1a0:	and    BYTE PTR [rdx],al
  43f1a2:	add    al,0x0
  43f1a4:	jo     0x43f1e9
  43f1a6:	add    BYTE PTR [rax],al
  43f1a8:	xchg   ebx,eax
  43f1a9:	add    BYTE PTR [rax],r8b
  43f1ac:	xor    al,0x2
  43f1ae:	add    al,0x0
  43f1b0:	movabs al,ds:0x4800004ec3000044
  43f1b9:	add    al,BYTE PTR [rax+rax*1]
  43f1bc:	ror    BYTE PTR [rsi+0x0],1
  43f1bf:	add    BYTE PTR [rbx],al
  43f1c1:	rex.WRXB add BYTE PTR [r8],r8b
  43f1c4:	(bad)  
  43f1c5:	add    al,BYTE PTR [rax+rax*1]
  43f1c8:	adc    BYTE PTR [rdi+0x0],cl
  43f1cb:	add    BYTE PTR [rbx+0x51],dh
  43f1ce:	add    BYTE PTR [rax],al
  43f1d0:	push   0xffffffff80000402
  43f1d5:	push   rcx
  43f1d6:	add    BYTE PTR [rax],al
  43f1d8:	or     BYTE PTR [rax+rax*1+0x0],dl
  43f1dc:	js     0x43f1e0
  43f1de:	add    al,0x0
  43f1e0:	adc    BYTE PTR [rax+rax*1+0x0],dl
  43f1e4:	(bad)  
  43f1e5:	push   rsp
  43f1e6:	add    BYTE PTR [rax],al
  43f1e8:	nop
  43f1e9:	add    al,BYTE PTR [rax+rax*1]
  43f1ec:	and    BYTE PTR [rax+rax*1+0x0],dl
  43f1f0:	jbe    0x43f246
  43f1f2:	add    BYTE PTR [rax],al
  43f1f4:	xchg   esp,eax
  43f1f5:	add    al,BYTE PTR [rax+rax*1]
  43f1f8:	adc    BYTE PTR [rax+rax*1+0x0],0xa1
  43f1fd:	push   rsp
  43f1fe:	add    BYTE PTR [rax],al
  43f200:	pushf  
  43f201:	add    al,BYTE PTR [rax+rax*1]
  43f204:	mov    al,0x54
  43f206:	add    BYTE PTR [rax],al
  43f208:	(bad)  
  43f209:	push   rbp
  43f20a:	add    BYTE PTR [rax],al
  43f20c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f20d:	add    al,BYTE PTR [rax+rax*1]
  43f210:	adc    BYTE PTR [rbp+0x0],dl
  43f213:	add    BYTE PTR [rsi-0x4bffffa3],ah
  43f219:	add    al,BYTE PTR [rax+rax*1]
  43f21c:	mov    al,0x5d
  43f21e:	add    BYTE PTR [rax],al
  43f220:	jno    0x43f283
  43f222:	add    BYTE PTR [rax],al
  43f224:	rol    BYTE PTR [rdx],0x4
  43f227:	add    BYTE PTR [rax-0x63ffff9f],al
  43f22d:	(bad)  
  43f22e:	add    BYTE PTR [rax],al
  43f230:	enter  0x402,0x0
  43f234:	movabs al,ds:0xd0000061c4000061
  43f23d:	add    al,BYTE PTR [rax+rax*1]
  43f240:	shl    BYTE PTR [rcx+0x0],1
  43f243:	add    BYTE PTR [rip+0xffffffffd8000063],ah        # 0xffffffffd843f2ac
  43f249:	add    al,BYTE PTR [rax+rax*1]
  43f24c:	xor    BYTE PTR [rbx+0x0],ah
  43f24f:	add    BYTE PTR [rax-0xfffff9c],bh
  43f255:	add    al,BYTE PTR [rax+rax*1]
  43f258:	shl    BYTE PTR [rax+rax*1+0x0],0x0
  43f25d:	push   0x3080000
  43f262:	add    al,0x0
  43f264:	add    BYTE PTR [rax+0x0],ch
  43f267:	add    BYTE PTR [rdx],dl
  43f269:	push   0x3200000
  43f26e:	add    al,0x0
  43f270:	and    BYTE PTR [rax+0x0],ch
  43f273:	add    BYTE PTR [rip+0x28000068],dh        # 0x2843f2e1
  43f279:	add    eax,DWORD PTR [rax+rax*1]
  43f27c:	rex push 0x68880000
  43f282:	add    BYTE PTR [rax],al
  43f284:	xor    BYTE PTR [rbx],al
  43f286:	add    al,0x0
  43f288:	nop
  43f289:	push   0x69070000
  43f28e:	add    BYTE PTR [rax],al
  43f290:	cmp    BYTE PTR [rbx],al
  43f292:	add    al,0x0
  43f294:	adc    BYTE PTR [rcx+0x0],ch
  43f297:	add    BYTE PTR [rdi+0x4000006a],dh
  43f29d:	add    eax,DWORD PTR [rax+rax*1]
  43f2a0:	shr    BYTE PTR [rdx+0x0],0x0
  43f2a4:	and    DWORD PTR [rbx+0x0],ebp
  43f2a7:	add    BYTE PTR [rax+0x3],bl
  43f2aa:	add    al,0x0
  43f2ac:	xor    BYTE PTR [rbx+0x0],ch
  43f2af:	add    BYTE PTR [rcx],ah
  43f2b1:	ins    BYTE PTR es:[rdi],dx
  43f2b2:	add    BYTE PTR [rax],al
  43f2b4:	add    eax,DWORD PTR fs:[rax+rax*1]
  43f2b8:	xor    BYTE PTR [rax+rax*1+0x0],ch
  43f2bc:	pop    rax
  43f2bd:	ins    DWORD PTR es:[rdi],dx
  43f2be:	add    BYTE PTR [rax],al
  43f2c0:	jl     0x43f2c5
  43f2c2:	add    al,0x0
  43f2c4:	(bad)  
  43f2c5:	ins    DWORD PTR es:[rdi],dx
  43f2c6:	add    BYTE PTR [rax],al
  43f2c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43f2c9:	ins    DWORD PTR es:[rdi],dx
  43f2ca:	add    BYTE PTR [rax],al
  43f2cc:	nop
  43f2cd:	add    eax,DWORD PTR [rax+rax*1]
  43f2d0:	mov    al,0x6d
  43f2d2:	add    BYTE PTR [rax],al
  43f2d4:	rex.WX jb 0x43f2d7
  43f2d7:	add    BYTE PTR [rbx+rax*1+0x72500004],bl
  43f2de:	add    BYTE PTR [rax],al
  43f2e0:	xchg   edi,eax
  43f2e1:	jb     0x43f2e3
  43f2e3:	add    BYTE PTR [rbx+rax*1+0x72a00004],ch
  43f2ea:	add    BYTE PTR [rax],al
  43f2ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43f2ed:	jne    0x43f2ef
  43f2ef:	add    BYTE PTR [rbx+rax*1+0x75b00004],dh
  43f2f6:	add    BYTE PTR [rax],al
  43f2f8:	div    BYTE PTR [rbp+0x0]
  43f2fb:	add    ah,cl
  43f2fd:	add    eax,DWORD PTR [rax+rax*1]
  43f300:	add    BYTE PTR [rsi+0x0],dh
  43f303:	add    BYTE PTR [rbx-0x27ffff88],al
  43f309:	add    eax,DWORD PTR [rax+rax*1]
  43f30c:	nop
  43f30d:	js     0x43f30f
  43f30f:	add    BYTE PTR [rdx+0x79],al
  43f312:	add    BYTE PTR [rax],al
  43f314:	lock add eax,DWORD PTR [rax+rax*1]
  43f318:	push   rax
  43f319:	jns    0x43f31b
  43f31b:	add    ch,ah
  43f31d:	jns    0x43f31f
  43f31f:	add    BYTE PTR [rax],al
  43f321:	add    al,0x4
  43f323:	add    al,dh
  43f325:	jns    0x43f327
  43f327:	add    BYTE PTR [rcx+0x7b],bl
  43f32a:	add    BYTE PTR [rax],al
  43f32c:	adc    BYTE PTR [rsp+rax*1],al
  43f32f:	add    BYTE PTR [rax+0x7b],ah
  43f332:	add    BYTE PTR [rax],al
  43f334:	adc    eax,0x2400007d
  43f339:	add    al,0x4
  43f33b:	add    BYTE PTR [rax],ah
  43f33d:	jge    0x43f33f
  43f33f:	add    BYTE PTR [rbp+0x3800007e],dh
  43f345:	add    al,0x4
  43f347:	add    al,al
  43f349:	jle    0x43f34b
  43f34b:	add    cl,ch
  43f34d:	jle    0x43f34f
  43f34f:	add    BYTE PTR [rsp+rax*1+0x4],bl
  43f353:	add    al,dh
  43f355:	jle    0x43f357
  43f357:	add    BYTE PTR [rdi],dl
  43f359:	jg     0x43f35b
  43f35b:	add    BYTE PTR [rsp+rax*1+0x4],ah
  43f35f:	add    BYTE PTR [rax],ah
  43f361:	jg     0x43f363
  43f363:	add    BYTE PTR [rsi+0x7f],dl
  43f366:	add    BYTE PTR [rax],al
  43f368:	ins    BYTE PTR es:[rdi],dx
  43f369:	add    al,0x4
  43f36b:	add    BYTE PTR [rax+0x7f],ah
  43f36e:	add    BYTE PTR [rax],al
  43f370:	stos   BYTE PTR es:[rdi],al
  43f371:	jg     0x43f373
  43f373:	add    BYTE PTR [rsp+rax*1+0x4],dh
  43f377:	add    BYTE PTR [rax-0x3cffff81],dh
  43f37d:	jg     0x43f37f
  43f37f:	add    BYTE PTR [rax-0x2ffffbfc],al
  43f385:	jg     0x43f387
  43f387:	add    bl,ah
  43f389:	jg     0x43f38b
  43f38b:	add    BYTE PTR [rsp+rax*1+0x7ff00004],al
  43f392:	add    BYTE PTR [rax],al
  43f394:	add    eax,DWORD PTR [rax+0x4880000]
  43f39a:	add    al,0x0
  43f39c:	adc    BYTE PTR [rax-0x7fdd0000],al
  43f3a2:	add    BYTE PTR [rax],al
  43f3a4:	mov    WORD PTR [rsp+rax*1],es
  43f3a7:	add    BYTE PTR [rax],dh
  43f3a9:	add    BYTE PTR [rax],0x0
  43f3ac:	rex.XB add BYTE PTR [r8],0x0
  43f3b0:	nop
  43f3b1:	add    al,0x4
  43f3b3:	add    BYTE PTR [rax-0x80],dl
  43f3b6:	add    BYTE PTR [rax],al
  43f3b8:	movsxd eax,DWORD PTR [rax+0x4940000]
  43f3be:	add    al,0x0
  43f3c0:	jo     0x43f342
  43f3c2:	add    BYTE PTR [rax],al
  43f3c4:	add    DWORD PTR [rax+0x4980000],0x4
  43f3cb:	add    BYTE PTR [rax-0x5cffff80],dl
  43f3d1:	add    BYTE PTR [rax],0x0
  43f3d4:	pushf  
  43f3d5:	add    al,0x4
  43f3d7:	add    BYTE PTR [rax-0x3cffff80],dh
  43f3dd:	add    BYTE PTR [rax],0x0
  43f3e0:	movabs al,ds:0xe3000080d0000404
  43f3e9:	add    BYTE PTR [rax],0x0
  43f3ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f3ed:	add    al,0x4
  43f3ef:	add    al,dh
  43f3f1:	add    BYTE PTR [rax],0x0
  43f3f4:	mov    DWORD PTR [rcx+0x4a80000],eax
  43f3fa:	add    al,0x0
  43f3fc:	nop
  43f3fd:	add    DWORD PTR [rax],0x824400
  43f403:	add    BYTE PTR [rax+0x50000404],bh
  43f409:	(bad)  
  43f40a:	add    BYTE PTR [rax],al
  43f40c:	jnp    0x43f390
  43f40e:	add    BYTE PTR [rax],al
  43f410:	(bad)  
  43f411:	add    al,0x4
  43f413:	add    BYTE PTR [rax-0x54ffff7e],al
  43f419:	(bad)  
  43f41a:	add    BYTE PTR [rax],al
  43f41c:	int3   
  43f41d:	add    al,0x4
  43f41f:	add    BYTE PTR [rax-0x32ffff7e],dh
  43f425:	(bad)  
  43f426:	add    BYTE PTR [rax],al
  43f428:	(bad)  
  43f429:	add    al,0x4
  43f42b:	add    al,dl
  43f42d:	(bad)  
  43f42e:	add    BYTE PTR [rax],al
  43f430:	mov    cl,0x84
  43f432:	add    BYTE PTR [rax],al
  43f434:	fadd   QWORD PTR [rsp+rax*1]
  43f437:	add    al,al
  43f439:	test   BYTE PTR [rax],al
  43f43b:	add    dl,ah
  43f43d:	test   BYTE PTR [rax],al
  43f43f:	add    ah,dh
  43f441:	add    al,0x4
  43f443:	add    al,dh
  43f445:	test   BYTE PTR [rax],al
  43f447:	add    al,ah
  43f449:	xchg   BYTE PTR [rax],al
  43f44b:	add    ah,bh
  43f44d:	add    al,0x4
  43f44f:	add    al,ah
  43f451:	xchg   BYTE PTR [rax],al
  43f453:	add    BYTE PTR [rax+0xc000087],bh
  43f459:	add    eax,0x87c00004
  43f45e:	add    BYTE PTR [rax],al
  43f460:	pop    rsi
  43f461:	mov    BYTE PTR [rax],al
  43f463:	add    BYTE PTR [rax],bl
  43f465:	add    eax,0x88600004
  43f46a:	add    BYTE PTR [rax],al
  43f46c:	(bad)  
  43f46d:	mov    BYTE PTR [rax],al
  43f46f:	add    BYTE PTR [rax],ch
  43f471:	add    eax,0x88900004
  43f476:	add    BYTE PTR [rax],al
  43f478:	mov    al,0x89
  43f47a:	add    BYTE PTR [rax],al
  43f47c:	xor    BYTE PTR [rip+0xffffffff89b00004],al        # 0xffffffff89f3f486
  43f482:	add    BYTE PTR [rax],al
  43f484:	out    0x89,eax
  43f486:	add    BYTE PTR [rax],al
  43f488:	rex add eax,0x89f00004
  43f48e:	add    BYTE PTR [rax],al
  43f490:	(bad)  
  43f491:	mov    al,BYTE PTR [rax]
  43f493:	add    BYTE PTR [rbp+rax*1+0x4],cl
  43f497:	add    BYTE PTR [rax],dh
  43f499:	mov    al,BYTE PTR [rax]
  43f49b:	add    BYTE PTR [rbp+rdx*4+0x0],bh
  43f49f:	add    BYTE PTR [rax+0x5],bl
  43f4a2:	add    al,0x0
  43f4a4:	adc    BYTE PTR [rbp-0x698d0000],0x0
  43f4ab:	add    BYTE PTR [rbp+rax*1+0x4],ch
  43f4af:	add    BYTE PTR [rax-0x2fffff6a],al
  43f4b5:	xchg   esi,eax
  43f4b6:	add    BYTE PTR [rax],al
  43f4b8:	jl     0x43f4bf
  43f4ba:	add    al,0x0
  43f4bc:	rcl    BYTE PTR [rsi-0x68c90000],1
  43f4c2:	add    BYTE PTR [rax],al
  43f4c4:	mov    BYTE PTR [rip+0xffffffff97400004],al        # 0xffffffff9783f4ce
  43f4ca:	add    BYTE PTR [rax],al
  43f4cc:	(bad)  
  43f4cd:	cwde   
  43f4ce:	add    BYTE PTR [rax],al
  43f4d0:	xchg   esp,eax
  43f4d1:	add    eax,0x98200004
  43f4d6:	add    BYTE PTR [rax],al
  43f4d8:	or     eax,0xa400009d
  43f4dd:	add    eax,0x9d100004
  43f4e2:	add    BYTE PTR [rax],al
  43f4e4:	ret    0x9d
  43f4e7:	add    BYTE PTR [rbp+rax*1-0x622ffffc],bh
  43f4ee:	add    BYTE PTR [rax],al
  43f4f0:	rex.W sahf 
  43f4f2:	add    BYTE PTR [rax],al
  43f4f4:	int3   
  43f4f5:	add    eax,0x9e500004
  43f4fa:	add    BYTE PTR [rax],al
  43f4fc:	in     eax,dx
  43f4fd:	sahf   
  43f4fe:	add    BYTE PTR [rax],al
  43f500:	fadd   QWORD PTR [rip+0xffffffff9ef00004]        # 0xffffffff9f33f50a
  43f506:	add    BYTE PTR [rax],al
  43f508:	or     eax,0xe40000a0
  43f50d:	add    eax,0xa0100004
  43f512:	add    BYTE PTR [rax],al
  43f514:	shl    BYTE PTR [rbx+0x5f00000],1
  43f51a:	add    al,0x0
  43f51c:	shl    BYTE PTR [rbx-0x5b9c0000],1
  43f522:	add    BYTE PTR [rax],al
  43f524:	or     BYTE PTR [rsi],al
  43f526:	add    al,0x0
  43f528:	jo     0x43f4ce
  43f52a:	add    BYTE PTR [rax],al
  43f52c:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  43f52e:	add    BYTE PTR [rax],al
  43f530:	sbb    BYTE PTR [rsi],al
  43f532:	add    al,0x0
  43f534:	push   rax
  43f535:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f536:	add    BYTE PTR [rax],al
  43f538:	adc    DWORD PTR [rsi+0x6200000],esp
  43f53e:	add    al,0x0
  43f540:	and    BYTE PTR [rsi-0x58310000],ah
  43f546:	add    BYTE PTR [rax],al
  43f548:	sub    al,0x6
  43f54a:	add    al,0x0
  43f54c:	shl    BYTE PTR [rdi-0x4fb00000],1
  43f552:	add    BYTE PTR [rax],al
  43f554:	rex (bad) 
  43f556:	add    al,0x0
  43f558:	push   rax
  43f559:	mov    al,0x0
  43f55b:	add    BYTE PTR [rax+0x5c0000b1],dl
  43f561:	(bad)  
  43f562:	add    al,0x0
  43f564:	nop
  43f565:	mov    cl,0x0
  43f567:	add    BYTE PTR [rcx+0x740000b1],bh
  43f56d:	(bad)  
  43f56e:	add    al,0x0
  43f570:	shl    BYTE PTR [rcx-0x4c790000],0x0
  43f577:	add    BYTE PTR [rsi+rax*1+0x4],bh
  43f57b:	add    BYTE PTR [rax+0xb3],dl
  43f581:	mov    esp,0x6940000
  43f586:	add    al,0x0
  43f588:	add    BYTE PTR [rax+rax*1+0xc10700],bh
  43f58f:	add    BYTE PTR [rax+0x10000406],dh
  43f595:	rol    DWORD PTR [rax],0x0
  43f598:	(bad)  
  43f599:	fiadd  DWORD PTR [rax]
  43f59b:	add    al,cl
  43f59d:	(bad)  
  43f59e:	add    al,0x0
  43f5a0:	adc    dl,bl
  43f5a2:	add    BYTE PTR [rax],al
  43f5a4:	out    dx,al
  43f5a5:	out    0x0,eax
  43f5a7:	add    al,ah
  43f5a9:	(bad)  
  43f5aa:	add    al,0x0
  43f5ac:	lock out 0x0,eax
  43f5af:	add    BYTE PTR [rsi],ah
  43f5b1:	jmp    0x73ff5b6
  43f5b6:	add    al,0x0
  43f5b8:	xor    cl,ch
  43f5ba:	add    BYTE PTR [rax],al
  43f5bc:	ds in  eax,dx
  43f5be:	add    BYTE PTR [rax],al
  43f5c0:	add    al,0x7
  43f5c2:	add    al,0x0
  43f5c4:	rex in eax,dx
  43f5c6:	add    BYTE PTR [rax],al
  43f5c8:	mov    ch,ch
  43f5ca:	add    BYTE PTR [rax],al
  43f5cc:	adc    BYTE PTR [rdi],al
  43f5ce:	add    al,0x0
  43f5d0:	nop
  43f5d1:	in     eax,dx
  43f5d2:	add    BYTE PTR [rax],al
  43f5d4:	(bad)  
  43f5d5:	(bad)  
  43f5d6:	add    DWORD PTR [rax],eax
  43f5d8:	sbb    BYTE PTR [rdi],al
  43f5da:	add    al,0x0
  43f5dc:	and    BYTE PTR [rdi],dl
  43f5de:	add    DWORD PTR [rax],eax
  43f5e0:	cmp    eax,0x48000117
  43f5e5:	(bad)  
  43f5e6:	add    al,0x0
  43f5e8:	rex (bad) 
  43f5ea:	add    DWORD PTR [rax],eax
  43f5ec:	hlt    
  43f5ed:	sbb    BYTE PTR [rcx],al
  43f5ef:	add    BYTE PTR [rax+0x7],dl
  43f5f2:	add    al,0x0
  43f5f4:	add    BYTE PTR [rcx],bl
  43f5f6:	add    DWORD PTR [rax],eax
  43f5f8:	and    bl,BYTE PTR [rcx]
  43f5fa:	add    DWORD PTR [rax],eax
  43f5fc:	fs (bad) 
  43f5fe:	add    al,0x0
  43f600:	xor    BYTE PTR [rcx],bl
  43f602:	add    DWORD PTR [rax],eax
  43f604:	push   rdx
  43f605:	sbb    DWORD PTR [rcx],eax
  43f607:	add    BYTE PTR [rdi+rax*1+0x4],ch
  43f60b:	add    BYTE PTR [rax+0x19],ah
  43f60e:	add    DWORD PTR [rax],eax
  43f610:	and    DWORD PTR ss:[rcx],eax
  43f613:	add    BYTE PTR [rdi+rax*1+0x4],dh
  43f617:	add    BYTE PTR [rax+0x21],al
  43f61a:	add    DWORD PTR [rax],eax
  43f61c:	jae    0x43f640
  43f61e:	add    DWORD PTR [rax],eax
  43f620:	mov    WORD PTR [rdi],es
  43f622:	add    al,0x0
  43f624:	and    BYTE PTR [rdx],0x1
  43f627:	add    BYTE PTR [rax+0x27],al
  43f62a:	add    DWORD PTR [rax],eax
  43f62c:	pushf  
  43f62d:	(bad)  
  43f62e:	add    al,0x0
  43f630:	rex (bad) 
  43f632:	add    DWORD PTR [rax],eax
  43f634:	push   rbp
  43f635:	sub    BYTE PTR [rcx],al
  43f637:	add    BYTE PTR [rdi+rax*1+0x28600004],dh
  43f63e:	add    DWORD PTR [rax],eax
  43f640:	stos   BYTE PTR es:[rdi],al
  43f641:	sub    DWORD PTR [rcx],eax
  43f643:	add    ah,al
  43f645:	(bad)  
  43f646:	add    al,0x0
  43f648:	mov    al,0x29
  43f64a:	add    DWORD PTR [rax],eax
  43f64c:	loope  0x43f67b
  43f64e:	add    DWORD PTR [rax],eax
  43f650:	(bad)  
  43f651:	(bad)  
  43f652:	add    al,0x0
  43f654:	lock sub eax,0x2f460001
  43f65a:	add    DWORD PTR [rax],eax
  43f65c:	in     al,dx
  43f65d:	(bad)  
  43f65e:	add    al,0x0
  43f660:	push   rax
  43f661:	(bad)  
  43f662:	add    DWORD PTR [rax],eax
  43f664:	rex.WXB
  43f665:	add    DWORD PTR [rax],r8d
  43f668:	add    BYTE PTR [rax],cl
  43f66a:	add    al,0x0
  43f66c:	push   rax
  43f66d:	add    DWORD PTR [rax],r8d
  43f670:	xchg   esi,eax
  43f671:	add    DWORD PTR [rax],r8d
  43f674:	and    BYTE PTR [rax],cl
  43f676:	add    al,0x0
  43f678:	movabs al,ds:0x24000144b5000144
  43f681:	or     BYTE PTR [rax+rax*1],al
  43f684:	rol    BYTE PTR [rcx+rax*1+0x0],0xd5
  43f689:	add    DWORD PTR [rax],r8d
  43f68c:	sub    BYTE PTR [rax],cl
  43f68e:	add    al,0x0
  43f690:	loopne 0x43f6d6
  43f692:	add    DWORD PTR [rax],eax
  43f694:	loope  0x43f6da
  43f696:	add    DWORD PTR [rax],eax
  43f698:	sub    al,0x8
  43f69a:	add    al,0x0
  43f69c:	lock add DWORD PTR [rax],r8d
  43f6a0:	jb     0x43f6eb
  43f6a2:	add    DWORD PTR [rax],eax
  43f6a4:	xor    BYTE PTR [rax],cl
  43f6a6:	add    al,0x0
  43f6a8:	or     BYTE PTR [rcx+0x1],0x0
  43f6ac:	movabs ds:0xb000040848000149,eax
  43f6b5:	add    QWORD PTR [r8],rax
  43f6b8:	ror    BYTE PTR [rdx+0x1],cl
  43f6bb:	add    BYTE PTR [rax+rcx*1+0x4],cl
  43f6bf:	add    al,ah
  43f6c1:	rex.WX add QWORD PTR [rax],rax
  43f6c4:	std    
  43f6c5:	rex.WX add QWORD PTR [rax],rax
  43f6c8:	pop    rsp
  43f6c9:	or     BYTE PTR [rax+rax*1],al
  43f6cc:	add    BYTE PTR [rbx+0x1],cl
  43f6cf:	add    BYTE PTR [rdx],ah
  43f6d1:	rex.WXB add QWORD PTR [r8],rax
  43f6d4:	or     BYTE PTR fs:[rax+rax*1],al
  43f6d8:	xor    BYTE PTR [rbx+0x1],cl
  43f6db:	add    BYTE PTR [rdx+0x4b],dl
  43f6de:	add    DWORD PTR [rax],eax
  43f6e0:	ins    BYTE PTR es:[rdi],dx
  43f6e1:	or     BYTE PTR [rax+rax*1],al
  43f6e4:	(bad)  
  43f6e5:	rex.WXB add QWORD PTR [r8],rax
  43f6e8:	lock add QWORD PTR [r8],r8
  43f6ec:	je     0x43f6f6
  43f6ee:	add    al,0x0
  43f6f0:	lock add QWORD PTR [r8],r8
  43f6f4:	rex.WRX
  43f6f5:	rex.WRX add QWORD PTR [rax],r8
  43f6f8:	or     BYTE PTR [rax],0x4
  43f6fb:	add    BYTE PTR [rax+0x4e],dl
  43f6fe:	add    DWORD PTR [rax],eax
  43f700:	jg     0x43f750
  43f702:	add    DWORD PTR [rax],eax
  43f704:	mov    BYTE PTR [rax],cl
  43f706:	add    al,0x0
  43f708:	or     BYTE PTR [rsi+0x1],0x0
  43f70c:	cmp    al,0x65
  43f70e:	add    DWORD PTR [rax],eax
  43f710:	nop
  43f711:	or     BYTE PTR [rax+rax*1],al
  43f714:	rex
  43f715:	add    DWORD PTR gs:[rax],eax
  43f718:	outs   dx,BYTE PTR ds:[rsi]
  43f719:	add    DWORD PTR gs:[rax],eax
  43f71c:	int3   
  43f71d:	or     BYTE PTR [rax+rax*1],al
  43f720:	jo     0x43f787
  43f722:	add    DWORD PTR [rax],eax
  43f724:	in     al,dx
  43f725:	add    WORD PTR [rax],ax
  43f728:	(bad)  
  43f729:	or     BYTE PTR [rax+rax*1],al
  43f72c:	lock add WORD PTR [rax],ax
  43f730:	jbe    0x43f799
  43f732:	add    DWORD PTR [rax],eax
  43f734:	in     al,0x8
  43f736:	add    al,0x0
  43f738:	and    BYTE PTR [rdi+0x1],0x0
  43f73c:	jno    0x43f7a6
  43f73e:	add    DWORD PTR [rax],eax
  43f740:	in     al,dx
  43f741:	or     BYTE PTR [rax+rax*1],al
  43f744:	sub    BYTE PTR [rax+0x1],0x0
  43f748:	pop    rsi
  43f749:	imul   eax,DWORD PTR [rcx],0x408fc00
  43f74f:	add    BYTE PTR [rax+0x69],ah
  43f752:	add    DWORD PTR [rax],eax
  43f754:	cmp    ch,BYTE PTR [rdx+0x1]
  43f757:	add    BYTE PTR [rax],cl
  43f759:	or     DWORD PTR [rax+rax*1],eax
  43f75c:	rex push 0x1
  43f75f:	add    BYTE PTR [rbp+0x6b],bh
  43f762:	add    DWORD PTR [rax],eax
  43f764:	adc    BYTE PTR [rcx],cl
  43f766:	add    al,0x0
  43f768:	sub    BYTE PTR [rbx+0x1],0x0
  43f76c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f76d:	je     0x43f770
  43f76f:	add    BYTE PTR [rax],ah
  43f771:	or     DWORD PTR [rax+rax*1],eax
  43f774:	mov    al,0x74
  43f776:	add    DWORD PTR [rax],eax
  43f778:	leave  
  43f779:	jl     0x43f77c
  43f77b:	add    BYTE PTR [rcx+rcx*1],bh
  43f77e:	add    al,0x0
  43f780:	sar    BYTE PTR [rcx+rax*1+0x0],1
  43f784:	xchg   BYTE PTR [rdx+0x9540001],al
  43f78a:	add    al,0x0
  43f78c:	nop
  43f78d:	(bad)  
  43f78e:	add    DWORD PTR [rax],eax
  43f790:	xlat   BYTE PTR ds:[rbx]
  43f791:	lea    eax,[rcx]
  43f793:	add    BYTE PTR [rcx+rcx*1+0x4],ch
  43f797:	add    al,ah
  43f799:	lea    eax,[rcx]
  43f79b:	add    BYTE PTR [rcx-0x7bfffe69],cl
  43f7a1:	or     DWORD PTR [rax+rax*1],eax
  43f7a4:	nop
  43f7a5:	xchg   edi,eax
  43f7a6:	add    DWORD PTR [rax],eax
  43f7a8:	and    eax,0x9c00019c
  43f7ad:	or     DWORD PTR [rax+rax*1],eax
  43f7b0:	xor    BYTE PTR [rcx+rax*1+0x1b0fd00],bl
  43f7b7:	add    BYTE PTR [rax+0x409],dh
  43f7bd:	mov    cl,0x1
  43f7bf:	add    BYTE PTR [rbp-0x2d],ah
  43f7c2:	add    DWORD PTR [rax],eax
  43f7c4:	loopne 0x43f7cf
  43f7c6:	add    al,0x0
  43f7c8:	jo     0x43f79d
  43f7ca:	add    DWORD PTR [rax],eax
  43f7cc:	or     eax,0xfc0001e0
  43f7d1:	or     DWORD PTR [rax+rax*1],eax
  43f7d4:	adc    al,ah
  43f7d6:	add    DWORD PTR [rax],eax
  43f7d8:	rex.WRX or r8,QWORD PTR [rdx]
  43f7db:	add    BYTE PTR [rdx+rcx*1],ah
  43f7de:	add    al,0x0
  43f7e0:	push   rax
  43f7e1:	or     eax,DWORD PTR [rdx]
  43f7e3:	add    BYTE PTR [rdx+0xb],ch
  43f7e6:	add    al,BYTE PTR [rax]
  43f7e8:	rex.WR or r8b,BYTE PTR [rax+rax*1]
  43f7ec:	jo     0x43f7f9
  43f7ee:	add    al,BYTE PTR [rax]
  43f7f0:	mov    al,0xb
  43f7f2:	add    al,BYTE PTR [rax]
  43f7f4:	push   rax
  43f7f5:	or     al,BYTE PTR [rax+rax*1]
  43f7f8:	mov    al,0xb
  43f7fa:	add    al,BYTE PTR [rax]
  43f7fc:	std    
  43f7fd:	or     eax,DWORD PTR [rdx]
  43f7ff:	add    BYTE PTR [rax+0xa],bl
  43f802:	add    al,0x0
  43f804:	add    BYTE PTR [rdx+rax*1],cl
  43f807:	add    BYTE PTR [rsp+rcx*1+0x2],al
  43f80b:	add    BYTE PTR [rdx+rcx*1+0x4],ah
  43f80f:	add    BYTE PTR [rax+0xc],dl
  43f812:	add    al,BYTE PTR [rax]
  43f814:	jmp    0x6c43fa25
  43f819:	or     al,BYTE PTR [rax+rax*1]
  43f81c:	lock or al,0x2
  43f81f:	add    BYTE PTR [rsi+0xe],al
  43f822:	add    al,BYTE PTR [rax]
  43f824:	xchg   esp,eax
  43f825:	or     al,BYTE PTR [rax+rax*1]
  43f828:	push   rax
  43f829:	(bad)  
  43f82a:	add    al,BYTE PTR [rax]
  43f82c:	repz lar eax,WORD PTR [rax]
  43f830:	movabs al,ds:0x810002100000040a
  43f839:	adc    BYTE PTR [rdx],al
  43f83b:	add    BYTE PTR [rax-0x6ffffbf6],dh
  43f841:	adc    BYTE PTR [rdx],al
  43f843:	add    bh,dl
  43f845:	sbb    DWORD PTR [rdx],eax
  43f847:	add    BYTE PTR [rax-0x1ffffbf6],bh
  43f84d:	sbb    DWORD PTR [rdx],eax
  43f84f:	add    BYTE PTR [rdi+0x1b],bl
  43f852:	add    al,BYTE PTR [rax]
  43f854:	ror    BYTE PTR [rdx],1
  43f856:	add    al,0x0
  43f858:	(bad)  
  43f859:	sbb    eax,DWORD PTR [rdx]
  43f85b:	add    BYTE PTR [rdi],al
  43f85d:	and    BYTE PTR [rdx],al
  43f85f:	add    ah,ah
  43f861:	or     al,BYTE PTR [rax+rax*1]
  43f864:	movabs al,ds:0xfc00022947000228
  43f86d:	or     al,BYTE PTR [rax+rax*1]
  43f870:	push   rax
  43f871:	sub    DWORD PTR [rdx],eax
  43f873:	add    BYTE PTR [rcx+0x29],ch
  43f876:	add    al,BYTE PTR [rax]
  43f878:	add    al,0xb
  43f87a:	add    al,0x0
  43f87c:	jo     0x43f8a7
  43f87e:	add    al,BYTE PTR [rax]
  43f880:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f881:	sub    DWORD PTR [rdx],eax
  43f883:	add    BYTE PTR [rbx+rcx*1],cl
  43f886:	add    al,0x0
  43f888:	mov    al,0x29
  43f88a:	add    al,BYTE PTR [rax]
  43f88c:	add    eax,0x1400022a
  43f891:	or     eax,DWORD PTR [rax+rax*1]
  43f894:	adc    BYTE PTR [rdx],ch
  43f896:	add    al,BYTE PTR [rax]
  43f898:	sub    al,0x2a
  43f89a:	add    al,BYTE PTR [rax]
  43f89c:	and    BYTE PTR [rbx],cl
  43f89e:	add    al,0x0
  43f8a0:	xor    BYTE PTR [rdx],ch
  43f8a2:	add    al,BYTE PTR [rax]
  43f8a4:	cmp    ch,BYTE PTR [rdx]
  43f8a6:	add    al,BYTE PTR [rax]
  43f8a8:	and    al,0xb
  43f8aa:	add    al,0x0
  43f8ac:	sub    al,BYTE PTR [rdx]
  43f8af:	add    BYTE PTR [rbx+0x2a],al
  43f8b2:	add    al,BYTE PTR [rax]
  43f8b4:	sub    BYTE PTR [rbx],cl
  43f8b6:	add    al,0x0
  43f8b8:	push   rax
  43f8b9:	sub    al,BYTE PTR [rdx]
  43f8bb:	add    BYTE PTR [rsi],ah
  43f8bd:	sub    eax,DWORD PTR [rdx]
  43f8bf:	add    BYTE PTR [rbx+rcx*1],ch
  43f8c2:	add    al,0x0
  43f8c4:	xor    BYTE PTR [rbx],ch
  43f8c6:	add    al,BYTE PTR [rax]
  43f8c8:	sub    ebp,DWORD PTR [rdx+rax*1]
  43f8cb:	add    BYTE PTR [rbx+rcx*1],bh
  43f8ce:	add    al,0x0
  43f8d0:	xor    BYTE PTR [rdx+rax*1],ch
  43f8d3:	add    BYTE PTR [rdi+0x2c],bl
  43f8d6:	add    al,BYTE PTR [rax]
  43f8d8:	or     r8,QWORD PTR [rax+rax*1]
  43f8dc:	(bad)  
  43f8dd:	sub    al,0x2
  43f8df:	add    cl,cl
  43f8e1:	sub    al,0x2
  43f8e3:	add    BYTE PTR [rbx+rcx*1+0x4],dl
  43f8e7:	add    al,dl
  43f8e9:	sub    al,0x2
  43f8eb:	add    bl,dl
  43f8ed:	sub    al,0x2
  43f8ef:	add    BYTE PTR [rax+0xb],ah
  43f8f2:	add    al,0x0
  43f8f4:	loopne 0x43f922
  43f8f6:	add    al,BYTE PTR [rax]
  43f8f8:	and    DWORD PTR [rip+0xb640002],ebp        # 0xba7f900
  43f8fe:	add    al,0x0
  43f900:	xor    BYTE PTR [rip+0x2d3c0002],ch        # 0x2d7ff908
  43f906:	add    al,BYTE PTR [rax]
  43f908:	ins    BYTE PTR es:[rdi],dx
  43f909:	or     eax,DWORD PTR [rax+rax*1]
  43f90c:	rex sub eax,0x2e3c0002
  43f912:	add    al,BYTE PTR [rax]
  43f914:	jo     0x43f921
  43f916:	add    al,0x0
  43f918:	rex
  43f919:	add    al,BYTE PTR cs:[rax]
  43f91c:	rex.XB
  43f91d:	add    al,BYTE PTR cs:[rax]
  43f920:	mov    BYTE PTR [rbx],cl
  43f922:	add    al,0x0
  43f924:	push   rax
  43f925:	add    al,BYTE PTR cs:[rax]
  43f928:	push   rsp
  43f929:	add    al,BYTE PTR cs:[rax]
  43f92c:	mov    WORD PTR [rbx],cs
  43f92e:	add    al,0x0
  43f930:	(bad)  
  43f931:	add    al,BYTE PTR cs:[rax]
  43f934:	fs add al,BYTE PTR cs:[rax]
  43f938:	nop
  43f939:	or     eax,DWORD PTR [rax+rax*1]
  43f93c:	jo     0x43f96c
  43f93e:	add    al,BYTE PTR [rax]
  43f940:	shr    DWORD PTR [rsi],1
  43f942:	add    al,BYTE PTR [rax]
  43f944:	xchg   esp,eax
  43f945:	or     eax,DWORD PTR [rax+rax*1]
  43f948:	loopne 0x43f978
  43f94a:	add    al,BYTE PTR [rax]
  43f94c:	rex.X xor BYTE PTR [rdx],al
  43f94f:	add    BYTE PTR [rax+0x5000040b],ah
  43f955:	xor    BYTE PTR [rdx],al
  43f957:	add    BYTE PTR [rcx+0x33],cl
  43f95a:	add    al,BYTE PTR [rax]
  43f95c:	mov    ah,0xb
  43f95e:	add    al,0x0
  43f960:	push   rax
  43f961:	xor    eax,DWORD PTR [rdx]
  43f963:	add    dh,dh
  43f965:	xor    al,0x2
  43f967:	add    ah,cl
  43f969:	or     eax,DWORD PTR [rax+rax*1]
  43f96c:	add    BYTE PTR [rip+0x35ec0002],dh        # 0x362ff974
  43f972:	add    al,BYTE PTR [rax]
  43f974:	(bad)  
  43f975:	or     eax,DWORD PTR [rax+rax*1]
  43f978:	lock xor eax,0x37a80002
  43f97e:	add    al,BYTE PTR [rax]
  43f980:	in     al,0xb
  43f982:	add    al,0x0
  43f984:	mov    al,0x37
  43f986:	add    al,BYTE PTR [rax]
  43f988:	sbb    eax,0xec000238
  43f98d:	or     eax,DWORD PTR [rax+rax*1]
  43f990:	and    BYTE PTR [rax],bh
  43f992:	add    al,BYTE PTR [rax]
  43f994:	lahf   
  43f995:	cmp    BYTE PTR [rdx],al
  43f997:	add    ah,bh
  43f999:	or     eax,DWORD PTR [rax+rax*1]
  43f99c:	movabs al,ds:0x80002393f000238
  43f9a5:	or     al,0x4
  43f9a7:	add    BYTE PTR [rax+0x39],al
  43f9aa:	add    al,BYTE PTR [rax]
  43f9ac:	sbb    bh,BYTE PTR [rdx]
  43f9ae:	add    al,BYTE PTR [rax]
  43f9b0:	adc    BYTE PTR [rsp+rax*1],cl
  43f9b3:	add    BYTE PTR [rax],ah
  43f9b5:	cmp    al,BYTE PTR [rdx]
  43f9b7:	add    BYTE PTR [rdi],bh
  43f9b9:	cmp    al,BYTE PTR [rdx]
  43f9bb:	add    BYTE PTR [rax],bl
  43f9bd:	or     al,0x4
  43f9bf:	add    BYTE PTR [rax+0x3a],al
  43f9c2:	add    al,BYTE PTR [rax]
  43f9c4:	push   rdx
  43f9c5:	cmp    al,BYTE PTR [rdx]
  43f9c7:	add    BYTE PTR [rsp+rcx*1],bl
  43f9ca:	add    al,0x0
  43f9cc:	(bad)  
  43f9cd:	cmp    al,BYTE PTR [rdx]
  43f9cf:	add    BYTE PTR [rbp+0x2000023a],ah
  43f9d5:	or     al,0x4
  43f9d7:	add    BYTE PTR [rax+0x4e00023a],dh
  43f9dd:	cmp    eax,DWORD PTR [rdx]
  43f9df:	add    BYTE PTR [rsp+rcx*1],ah
  43f9e2:	add    al,0x0
  43f9e4:	push   rax
  43f9e5:	cmp    eax,DWORD PTR [rdx]
  43f9e7:	add    BYTE PTR [rbx+0x3000023b],dl
  43f9ed:	or     al,0x4
  43f9ef:	add    BYTE PTR [rax-0x24fffdc5],ah
  43f9f5:	cmp    eax,DWORD PTR [rdx]
  43f9f7:	add    BYTE PTR [rsp+rcx*1],bh
  43f9fa:	add    al,0x0
  43f9fc:	loopne 0x43fa39
  43f9fe:	add    al,BYTE PTR [rax]
  43fa00:	outs   dx,BYTE PTR ds:[rsi]
  43fa01:	cmp    al,0x2
  43fa03:	add    BYTE PTR [rsp+rcx*1+0x4],al
  43fa07:	add    BYTE PTR [rax+0x3c],dh
  43fa0a:	add    al,BYTE PTR [rax]
  43fa0c:	test   al,0x3c
  43fa0e:	add    al,BYTE PTR [rax]
  43fa10:	push   rax
  43fa11:	or     al,0x4
  43fa13:	add    BYTE PTR [rax+0x500023c],dh
  43fa19:	cmp    eax,0xc5c0002
  43fa1e:	add    al,0x0
  43fa20:	adc    BYTE PTR [rip+0x3dbe0002],bh        # 0x3e01fa28
  43fa26:	add    al,BYTE PTR [rax]
  43fa28:	push   0x2000040c
  43fa2d:	add    al,BYTE PTR ds:[rax]
  43fa30:	enter  0x23f,0x0
  43fa34:	js     0x43fa42
  43fa36:	add    al,0x0
  43fa38:	sar    BYTE PTR [rdi],1
  43fa3a:	add    al,BYTE PTR [rax]
  43fa3c:	push   rcx
  43fa3d:	add    al,BYTE PTR [rax]
  43fa40:	or     BYTE PTR [rsp+rax*1],0x0
  43fa44:	(bad)  
  43fa45:	add    al,BYTE PTR [rax]
  43fa48:	add    DWORD PTR [rax+0x2],0x40c9000
  43fa4f:	add    BYTE PTR [rax-0x3cfffdc0],dl
  43fa55:	add    al,BYTE PTR [rax]
  43fa58:	cwde   
  43fa59:	or     al,0x4
  43fa5b:	add    al,dl
  43fa5d:	add    al,BYTE PTR [rax]
  43fa60:	push   rdi
  43fa61:	add    al,BYTE PTR [r8]
  43fa64:	movabs al,ds:0xed0002416000040c
  43fa6d:	add    al,BYTE PTR [r8]
  43fa70:	lods   al,BYTE PTR ds:[rsi]
  43fa71:	or     al,0x4
  43fa73:	add    al,dh
  43fa75:	add    al,BYTE PTR [r8]
  43fa78:	jge    0x43fabc
  43fa7a:	add    al,BYTE PTR [rax]
  43fa7c:	mov    eax,0x8000040c
  43fa81:	rex.X add al,BYTE PTR [rax]
  43fa84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43fa85:	rex.X add al,BYTE PTR [rax]
  43fa88:	enter  0x40c,0x0
  43fa8c:	mov    al,0x42
  43fa8e:	add    al,BYTE PTR [rax]
  43fa90:	rol    DWORD PTR [rdx+0x2],cl
  43fa93:	add    al,dl
  43fa95:	or     al,0x4
  43fa97:	add    al,ah
  43fa99:	rex.X add al,BYTE PTR [rax]
  43fa9c:	ja     0x43fae1
  43fa9e:	add    al,BYTE PTR [rax]
  43faa0:	fmul   DWORD PTR [rsp+rax*1]
  43faa3:	add    BYTE PTR [rax-0x2afffdbd],al
  43faa9:	rex.XB add al,BYTE PTR [r8]
  43faac:	in     al,0xc
  43faae:	add    al,0x0
  43fab0:	loopne 0x43faf5
  43fab2:	add    al,BYTE PTR [rax]
  43fab4:	rex.X jb 0x43fab9
  43fab7:	add    ah,ch
  43fab9:	or     al,0x4
  43fabb:	add    BYTE PTR [rax+0x72],dl
  43fabe:	add    al,BYTE PTR [rax]
  43fac0:	mov    DWORD PTR [rdx+0x2],esi
  43fac3:	add    BYTE PTR [rax],dl
  43fac5:	or     eax,0x72900004
  43faca:	add    al,BYTE PTR [rax]
  43facc:	shl    DWORD PTR [rdx+0x2],1
  43facf:	add    BYTE PTR [rcx*1+0x72e00004],bl
  43fad6:	add    al,BYTE PTR [rax]
  43fad8:	adc    DWORD PTR [rbx+0x2],esi
  43fadb:	add    BYTE PTR [rax],ch
  43fadd:	or     eax,0x73200004
  43fae2:	add    al,BYTE PTR [rax]
  43fae4:	jl     0x43fb59
  43fae6:	add    al,BYTE PTR [rax]
  43fae8:	xor    al,0xd
  43faea:	add    al,0x0
  43faec:	xor    BYTE PTR [rbx+0x2],0x0
  43faf0:	retf   0x274
  43faf3:	add    BYTE PTR [rax+0xd],al
  43faf6:	add    al,0x0
  43faf8:	rex jne 0x43fafd
  43fafb:	add    ah,ah
  43fafd:	jne    0x43fb01
  43faff:	add    BYTE PTR [rbp+rcx*1+0x4],cl
  43fb03:	add    al,dh
  43fb05:	jne    0x43fb09
  43fb07:	add    BYTE PTR [rsi],ch
  43fb09:	ja     0x43fb0d
  43fb0b:	add    BYTE PTR [rbp+rcx*1+0x4],dl
  43fb0f:	add    BYTE PTR [rax],dh
  43fb11:	ja     0x43fb15
  43fb13:	add    BYTE PTR [rdi],al
  43fb15:	js     0x43fb19
  43fb17:	add    BYTE PTR [rbp+rcx*1+0x4],bl
  43fb1b:	add    BYTE PTR [rax],dl
  43fb1d:	js     0x43fb21
  43fb1f:	add    BYTE PTR [rbx+0x79],bh
  43fb22:	add    al,BYTE PTR [rax]
  43fb24:	(bad)  
  43fb25:	or     eax,0x79800004
  43fb2a:	add    al,BYTE PTR [rax]
  43fb2c:	jmp    0x43fba7
  43fb2e:	add    al,BYTE PTR [rax]
  43fb30:	jo     0x43fb3f
  43fb32:	add    al,0x0
  43fb34:	lock jns 0x43fb39
  43fb37:	add    BYTE PTR [rdx],dl
  43fb39:	jnp    0x43fb3d
  43fb3b:	add    BYTE PTR [rax+0x2000040d],al
  43fb41:	jnp    0x43fb45
  43fb43:	add    BYTE PTR [rdx+0x7b],bh
  43fb46:	add    al,BYTE PTR [rax]
  43fb48:	cwde   
  43fb49:	or     eax,0x7b800004
  43fb4e:	add    al,BYTE PTR [rax]
  43fb50:	fidivr DWORD PTR [rbp+0x2]
  43fb53:	add    BYTE PTR [rax-0x1ffffbf3],ch
  43fb59:	jge    0x43fb5d
  43fb5b:	add    ah,bh
  43fb5d:	jg     0x43fb61
  43fb5f:	add    al,al
  43fb61:	or     eax,0x80000004
  43fb66:	add    al,BYTE PTR [rax]
  43fb68:	test   BYTE PTR [rax+0xdd80002],0x4
  43fb6f:	add    BYTE PTR [rax],al
  43fb71:	add    DWORD PTR [rdx],0x2815700
  43fb77:	add    al,ah
  43fb79:	or     eax,0x81600004
  43fb7e:	add    al,BYTE PTR [rax]
  43fb80:	jg     0x43fb04
  43fb82:	add    al,BYTE PTR [rax]
  43fb84:	call   0xffffffff8043ff96
  43fb89:	(bad)  
  43fb8a:	add    al,BYTE PTR [rax]
  43fb8c:	test   DWORD PTR [rbx+0xdfc0002],eax
  43fb92:	add    al,0x0
  43fb94:	nop
  43fb95:	add    DWORD PTR [rdx],0x0
  43fb98:	sub    al,BYTE PTR [rdx+rax*1+0x40e0800]
  43fb9f:	add    BYTE PTR [rax],dh
  43fba1:	test   BYTE PTR [rdx],al
  43fba3:	add    BYTE PTR [rax*4+0xe100002],bl
  43fbaa:	add    al,0x0
  43fbac:	and    BYTE PTR [rbp-0x7783fffe],al
  43fbb2:	add    al,BYTE PTR [rax]
  43fbb4:	and    al,0xe
  43fbb6:	add    al,0x0
  43fbb8:	or     BYTE PTR [rax-0x769efffe],0x2
  43fbbf:	add    BYTE PTR [rsi+rcx*1],dh
  43fbc2:	add    al,0x0
  43fbc4:	jo     0x43fb4f
  43fbc6:	add    al,BYTE PTR [rax]
  43fbc8:	rex mov WORD PTR [rdx],es
  43fbcb:	add    BYTE PTR [rax+0xe],al
  43fbce:	add    al,0x0
  43fbd0:	rex mov WORD PTR [rdx],es
  43fbd3:	add    BYTE PTR [rcx],cl
  43fbd5:	lea    eax,[rdx]
  43fbd7:	add    BYTE PTR [rsi+rcx*1+0x4],dl
  43fbdb:	add    BYTE PTR [rax],dl
  43fbdd:	lea    eax,[rdx]
  43fbdf:	add    BYTE PTR [rdi+0x6000028d],bh
  43fbe5:	(bad)  
  43fbe6:	add    al,0x0
  43fbe8:	ror    BYTE PTR [rbp-0x70a9fffe],0x2
  43fbef:	add    BYTE PTR [rsi+rcx*1+0x4],ch
  43fbf3:	add    BYTE PTR [rax-0x71],ah
  43fbf6:	add    al,BYTE PTR [rax]
  43fbf8:	sbb    BYTE PTR [rbx+0xe780002],dl
  43fbfe:	add    al,0x0
  43fc00:	and    BYTE PTR [rbx-0x67d4fffe],dl
  43fc06:	add    al,BYTE PTR [rax]
  43fc08:	nop
  43fc09:	(bad)  
  43fc0a:	add    al,0x0
  43fc0c:	xor    BYTE PTR [rax-0x5d7dfffe],bl
  43fc12:	add    al,BYTE PTR [rax]
  43fc14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43fc15:	(bad)  
  43fc16:	add    al,0x0
  43fc18:	lock movabs ds:0xebc0002a3200002,al
  43fc22:	add    al,0x0
  43fc24:	and    BYTE PTR [rbx-0x5c97fffe],ah
  43fc2a:	add    al,BYTE PTR [rax]
  43fc2c:	(bad)  
  43fc2d:	(bad)  
  43fc2e:	add    al,0x0
  43fc30:	jo     0x43fbd5
  43fc32:	add    al,BYTE PTR [rax]
  43fc34:	mov    WORD PTR [rbx+0xed00002],fs
  43fc3a:	add    al,0x0
  43fc3c:	nop
  43fc3d:	movabs ds:0xed40002a50a0002,eax
  43fc46:	add    al,0x0
  43fc48:	adc    BYTE PTR [rbp-0x4685fffe],ah
  43fc4e:	add    al,BYTE PTR [rax]
  43fc50:	in     al,dx
  43fc51:	(bad)  
  43fc52:	add    al,0x0
  43fc54:	cmp    BYTE PTR [rcx-0x4582fffe],0x2
  43fc5b:	add    BYTE PTR [rax],cl
  43fc5d:	(bad)  
  43fc5f:	add    BYTE PTR [rax-0x41fffd46],al
  43fc65:	mov    edx,0xf140002
  43fc6a:	add    al,0x0
  43fc6c:	sar    BYTE PTR [rdx-0x4473fffe],0x2
  43fc73:	add    BYTE PTR [rax],bl
  43fc75:	(bad)  
  43fc77:	add    BYTE PTR [rax-0x2dfffd45],dl
  43fc7d:	mov    ebx,0xf240002
  43fc82:	add    al,0x0
  43fc84:	loopne 0x43fc41
  43fc86:	add    al,BYTE PTR [rax]
  43fc88:	out    dx,al
  43fc89:	mov    esp,0xf2c0002
  43fc8e:	add    al,0x0
  43fc90:	lock mov esp,0xbd560002
  43fc96:	add    al,BYTE PTR [rax]
  43fc98:	cmp    BYTE PTR [rdi],cl
  43fc9a:	add    al,0x0
  43fc9c:	(bad)  
  43fc9d:	mov    ebp,0xbe120002
  43fca2:	add    al,BYTE PTR [rax]
  43fca4:	rex (bad) 
  43fca7:	add    BYTE PTR [rax],ah
  43fca9:	mov    esi,0xbe460002
  43fcae:	add    al,BYTE PTR [rax]
  43fcb0:	push   rax
  43fcb1:	(bad)  
  43fcb3:	add    BYTE PTR [rax-0x42],dl
  43fcb6:	add    al,BYTE PTR [rax]
  43fcb8:	cmp    BYTE PTR [rdi+0xf580002],0x4
  43fcbf:	add    BYTE PTR [rax-0x1bfffd41],al
  43fcc5:	rol    BYTE PTR [rdx],0x0
  43fcc8:	ins    BYTE PTR es:[rdi],dx
  43fcc9:	(bad)  
  43fccb:	add    al,dh
  43fccd:	rol    BYTE PTR [rdx],0x0
  43fcd0:	add    eax,edx
  43fcd2:	add    al,BYTE PTR [rax]
  43fcd4:	jl     0x43fce5
  43fcd6:	add    al,0x0
  43fcd8:	adc    dl,al
  43fcda:	add    al,BYTE PTR [rax]
  43fcdc:	push   rsp
  43fcdd:	ret    0x2
  43fce0:	nop
  43fce1:	(bad)  
  43fce3:	add    BYTE PTR [rax-0x3e],ah
  43fce6:	add    al,BYTE PTR [rax]
  43fce8:	xchg   esi,eax
  43fce9:	ret    
  43fcea:	add    al,BYTE PTR [rax]
  43fcec:	xchg   esp,eax
  43fced:	(bad)  
  43fcef:	add    BYTE PTR [rax-0x4cfffd3d],ah
  43fcf5:	(bad)
  43fcf9:	(bad)  
  43fcfb:	add    al,al
  43fcfd:	(bad)
  43fd01:	(bad)
  43fd04:	lods   al,BYTE PTR ds:[rsi]
  43fd05:	(bad)  
  43fd07:	add    al,dl
  43fd09:	(bad)
  43fd0c:	hlt    
  43fd0d:	(bad)
  43fd10:	mov    eax,0x40f
  43fd15:	mov    BYTE PTR [rdx],0x0
  43fd18:	stos   DWORD PTR es:[rdi],eax
  43fd19:	mov    BYTE PTR [rdx],0x0
  43fd1c:	mov    esp,0xb000040f
  43fd21:	mov    BYTE PTR [rdx],0x0
  43fd24:	imul   ecx,edx,0xfc80002
  43fd2a:	add    al,0x0
  43fd2c:	jo     0x43fcf8
  43fd2e:	add    al,BYTE PTR [rax]
  43fd30:	movabs ds:0xb000040fe00002ca,al
  43fd39:	retf   0x2
  43fd3c:	pop    rcx
  43fd3d:	retf   
  43fd3e:	add    al,BYTE PTR [rax]
  43fd40:	in     al,0xf
  43fd42:	add    al,0x0
  43fd44:	(bad)  
  43fd45:	retf   
  43fd46:	add    al,BYTE PTR [rax]
  43fd48:	lods   eax,DWORD PTR ds:[rsi]
  43fd49:	out    0x2,al
  43fd4b:	add    ah,ch
  43fd4d:	(bad)  
  43fd4f:	add    BYTE PTR [rax+0xb0002e6],dh
  43fd55:	call   0x105ffd5c
  43fd5a:	add    al,0x0
  43fd5c:	adc    al,ch
  43fd5e:	add    al,BYTE PTR [rax]
  43fd60:	(bad)
  43fd64:	xor    BYTE PTR [rax],dl
  43fd66:	add    al,0x0
  43fd68:	nop
  43fd69:	call   0xffffffffe917fd70
  43fd6e:	add    al,BYTE PTR [rax]
  43fd70:	cmp    BYTE PTR [rax],dl
  43fd72:	add    al,0x0
  43fd74:	loopne 0x43fd5e
  43fd76:	add    al,BYTE PTR [rax]
  43fd78:	and    ch,dl
  43fd7a:	add    al,BYTE PTR [rax]
  43fd7c:	adc    BYTE PTR [rax+rax*1],r8b
  43fd80:	xor    dl,ch
  43fd82:	add    al,BYTE PTR [rax]
  43fd84:	push   rdx
  43fd86:	add    al,BYTE PTR [rax]
  43fd88:	pop    rax
  43fd89:	adc    BYTE PTR [rax+rax*1],al
  43fd8c:	add    bl,dh
  43fd8e:	add    al,BYTE PTR [rax]
  43fd90:	test   bl,dh
  43fd92:	add    al,BYTE PTR [rax]
  43fd94:	jo     0x43fda6
  43fd96:	add    al,0x0
  43fd98:	nop
  43fd99:	repz add al,BYTE PTR [rax]
  43fd9c:	rex.X test DWORD PTR [rdx],0x4107400
  43fda3:	add    BYTE PTR [rax-0x9],dl
  43fda6:	add    al,BYTE PTR [rax]
  43fda8:	rex.WXB clc 
  43fdaa:	add    al,BYTE PTR [rax]
  43fdac:	mov    WORD PTR [rax],ss
  43fdae:	add    al,0x0
  43fdb0:	push   rax
  43fdb1:	clc    
  43fdb2:	add    al,BYTE PTR [rax]
  43fdb4:	or     al,0xf9
  43fdb6:	add    al,BYTE PTR [rax]
  43fdb8:	movabs al,ds:0x530002f910000410
  43fdc1:	stc    
  43fdc2:	add    al,BYTE PTR [rax]
  43fdc4:	mov    al,0x10
  43fdc6:	add    al,0x0
  43fdc8:	(bad)  
  43fdc9:	stc    
  43fdca:	add    al,BYTE PTR [rax]
  43fdcc:	ret    0x2f9
  43fdcf:	add    BYTE PTR [rax+rdx*1-0x62ffffc],dh
  43fdd6:	add    al,BYTE PTR [rax]
  43fdd8:	pop    rcx
  43fdd9:	cli    
  43fdda:	add    al,BYTE PTR [rax]
  43fddc:	mov    eax,0x90000410
  43fde1:	cld    
  43fde2:	add    al,BYTE PTR [rax]
  43fde4:	cwde   
  43fde5:	cld    
  43fde6:	add    al,BYTE PTR [rax]
  43fde8:	mov    esp,0xa0000410
  43fded:	cld    
  43fdee:	add    al,BYTE PTR [rax]
  43fdf0:	stos   DWORD PTR es:[rdi],eax
  43fdf1:	cld    
  43fdf2:	add    al,BYTE PTR [rax]
  43fdf4:	rcl    BYTE PTR [rax],0x4
  43fdf7:	add    BYTE PTR [rax-0x48fffd04],dh
  43fdfd:	cld    
  43fdfe:	add    al,BYTE PTR [rax]
  43fe00:	(bad)  
  43fe01:	adc    BYTE PTR [rax+rax*1],al
  43fe04:	sar    ah,0x2
  43fe07:	add    cl,cl
  43fe09:	cld    
  43fe0a:	add    al,BYTE PTR [rax]
  43fe0c:	enter  0x410,0x0
  43fe10:	sar    ah,1
  43fe12:	add    al,BYTE PTR [rax]
  43fe14:	adc    edi,ebp
  43fe16:	add    al,BYTE PTR [rax]
  43fe18:	int3   
  43fe19:	adc    BYTE PTR [rax+rax*1],al
  43fe1c:	and    ch,bh
  43fe1e:	add    al,BYTE PTR [rax]
  43fe20:	pop    rbp
  43fe21:	std    
  43fe22:	add    al,BYTE PTR [rax]
  43fe24:	(bad)  
  43fe25:	adc    BYTE PTR [rax+rax*1],al
  43fe28:	(bad)  
  43fe29:	std    
  43fe2a:	add    al,BYTE PTR [rax]
  43fe2c:	push   0xfffffffffffffffd
  43fe2e:	add    al,BYTE PTR [rax]
  43fe30:	fcom   QWORD PTR [rax]
  43fe32:	add    al,0x0
  43fe34:	jo     0x43fe33
  43fe36:	add    al,BYTE PTR [rax]
  43fe38:	jp     0x43fe37
  43fe3a:	add    al,BYTE PTR [rax]
  43fe3c:	loopne 0x43fe4e
  43fe3e:	add    al,0x0
  43fe40:	cmp    ch,0x2
  43fe43:	add    cl,dh
  43fe45:	std    
  43fe46:	add    al,BYTE PTR [rax]
  43fe48:	in     al,0x10
  43fe4a:	add    al,0x0
  43fe4c:	add    dh,bh
  43fe4e:	add    al,BYTE PTR [rax]
  43fe50:	(bad)  
  43fe51:	inc    BYTE PTR [rdx]
  43fe53:	add    al,dh
  43fe55:	adc    BYTE PTR [rax+rax*1],al
  43fe58:	movabs al,ds:0xf80002fea50002fe
  43fe61:	adc    BYTE PTR [rax+rax*1],al
  43fe64:	lock inc DWORD PTR [rdx]
  43fe67:	add    BYTE PTR [rip+0x44000300],ah        # 0x4444016d
  43fe6d:	add    al,0x4
  43fe6f:	add    BYTE PTR [rip+0x66000300],ah        # 0x66440175
  43fe75:	add    BYTE PTR [rbx],al
  43fe77:	add    BYTE PTR [rsp+rax*1+0x4],cl
  43fe7b:	add    BYTE PTR [rsi+0x0],ah
  43fe7e:	add    eax,DWORD PTR [rax]
  43fe80:	mov    BYTE PTR [rax],al
  43fe82:	add    eax,DWORD PTR [rax]
  43fe84:	push   rsp
  43fe85:	add    al,0x4
  43fe87:	add    BYTE PTR [rax-0x8fffd00],dl
  43fe8d:	add    BYTE PTR [rbx],al
  43fe8f:	add    BYTE PTR [rdi+rax*1],dh
  43fe92:	add    al,0x0
  43fe94:	test   DWORD PTR [rax],0x1190003
  43fe9a:	add    eax,DWORD PTR [rax]
  43fe9c:	rex (bad) 
  43fe9e:	add    al,0x0
  43fea0:	and    BYTE PTR [rcx],al
  43fea2:	add    eax,DWORD PTR [rax]
  43fea4:	rex.RX add DWORD PTR [rbx],r8d
  43fea7:	add    BYTE PTR [rdx+rcx*1+0x4],bh
  43feab:	add    BYTE PTR [rax+0x1],dl
  43feae:	add    eax,DWORD PTR [rax]
  43feb0:	push   0x3
  43feb2:	add    eax,DWORD PTR [rax]
  43feb4:	test   BYTE PTR [rdx],cl
  43feb6:	add    al,0x0

Disassembly of section .xdata:

0000000000440000 <.xdata>:
  440000:	add    DWORD PTR [rax],eax
  440002:	add    BYTE PTR [rax],al
  440004:	add    DWORD PTR [rcx+rax*1],eax
  440007:	add    BYTE PTR [rdx+rax*2],al
  44000a:	add    BYTE PTR [rax],al
  44000c:	add    DWORD PTR [rcx+rax*1],eax
  44000f:	add    BYTE PTR [rdx+riz*2],al
  440012:	add    BYTE PTR [rax],al
  440014:	add    DWORD PTR [rdi],ecx
  440016:	or     BYTE PTR [rax],al
  440018:	lgdt   [rbx]
  44001b:	add    BYTE PTR [rax],cl
  44001d:	xor    BYTE PTR [rdi],al
  44001f:	(bad)  
  440020:	(bad)  
  440021:	jo     0x440028
  440023:	push   rax
  440024:	add    al,0xc0
  440026:	add    dl,al
  440028:	or     DWORD PTR [rcx+rax*1],eax
  44002b:	add    BYTE PTR [rdx+rax*2],al
  44002e:	add    BYTE PTR [rax],al
  440030:	mov    ah,bh
  440032:	add    al,BYTE PTR [rax]
  440034:	add    DWORD PTR [rax],eax
  440036:	add    BYTE PTR [rax],al
  440038:	(bad)  
  440039:	adc    al,0x0
  44003b:	add    ah,ch
  44003d:	adc    al,0x0
  44003f:	add    al,dh
  440041:	xor    eax,0x14ec0002
  440046:	add    BYTE PTR [rax],al
  440048:	or     DWORD PTR [rcx+rax*1],eax
  44004b:	add    BYTE PTR [rdx+rax*2],al
  44004e:	add    BYTE PTR [rax],al
  440050:	mov    ah,bh
  440052:	add    al,BYTE PTR [rax]
  440054:	add    DWORD PTR [rax],eax
  440056:	add    BYTE PTR [rax],al
  440058:	add    al,0x15
  44005a:	add    BYTE PTR [rax],al
  44005c:	sbb    al,0x15
  44005e:	add    BYTE PTR [rax],al
  440060:	lock xor eax,0x151c0002
  440066:	add    BYTE PTR [rax],al
  440068:	add    DWORD PTR [rsi],eax
  44006a:	add    eax,DWORD PTR [rax]
  44006c:	(bad)  
  44006d:	rex.X add sil,BYTE PTR [rax]
  440070:	add    DWORD PTR [rax+0x0],esp
  440073:	add    BYTE PTR [rcx],al
  440075:	add    al,0x1
  440077:	add    BYTE PTR [rdx+riz*2],al
  44007a:	add    BYTE PTR [rax],al
  44007c:	add    DWORD PTR [rcx+rax*1],eax
  44007f:	add    BYTE PTR [rdx+riz*2],al
  440082:	add    BYTE PTR [rax],al
  440084:	add    DWORD PTR [rax],eax
  440086:	add    BYTE PTR [rax],al
  440088:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x1510095
  44008e:	mov    BYTE PTR [rax],al
  440090:	(bad)  
  440091:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b404f7
  440097:	push   rax
  440098:	add    al,al
  44009a:	add    BYTE PTR [rax],al
  44009c:	add    DWORD PTR [rcx+rax*1],eax
  44009f:	add    BYTE PTR [rdx+riz*2],al
  4400a2:	add    BYTE PTR [rax],al
  4400a4:	add    DWORD PTR [rdi+rax*1],ecx
  4400a7:	add    BYTE PTR [rdx+riz*2],cl
  4400aa:	or     BYTE PTR [rax],dh
  4400ac:	(bad)  
  4400ad:	(bad)  
  4400ae:	(bad)  
  4400af:	jo     0x4400b6
  4400b1:	push   rax
  4400b2:	add    al,0xc0
  4400b4:	add    dl,al
  4400b6:	add    BYTE PTR [rax],al
  4400b8:	add    DWORD PTR [rdi+rax*1],ecx
  4400bb:	add    BYTE PTR [rdx+riz*2],cl
  4400be:	or     BYTE PTR [rax],dh
  4400c0:	(bad)  
  4400c1:	(bad)  
  4400c2:	(bad)  
  4400c3:	jo     0x4400ca
  4400c5:	push   rax
  4400c6:	add    al,0xc0
  4400c8:	add    dl,al
  4400ca:	add    BYTE PTR [rax],al
  4400cc:	add    DWORD PTR [rax],edx
  4400ce:	or     DWORD PTR [rax],eax
  4400d0:	adc    BYTE PTR [rdx+0x600b300c],ah
  4400d6:	or     dh,BYTE PTR [rax+0x9]
  4400d9:	push   rax
  4400da:	or     al,al
  4400dc:	(bad)  
  4400dd:	rol    BYTE PTR [rax+riz*8],1
  4400e0:	add    dh,al
  4400e2:	add    BYTE PTR [rax],al
  4400e4:	add    DWORD PTR [rdx],ecx
  4400e6:	add    eax,0x58010a00
  4400eb:	add    BYTE PTR [rbx],al
  4400ed:	xor    BYTE PTR [rdx],al
  4400ef:	(bad)  
  4400f0:	add    DWORD PTR [rax+0x0],esi
  4400f3:	add    BYTE PTR [rcx],al
  4400f5:	add    al,0x1
  4400f7:	add    BYTE PTR [rdx+riz*2],al
  4400fa:	add    BYTE PTR [rax],al
  4400fc:	add    DWORD PTR [rax],eax
  4400fe:	add    BYTE PTR [rax],al
  440100:	add    DWORD PTR [rcx+rax*1],eax
  440103:	add    BYTE PTR [rdx+rax*2],al
  440106:	add    BYTE PTR [rax],al
  440108:	add    DWORD PTR [rax],eax
  44010a:	add    BYTE PTR [rax],al
  44010c:	add    DWORD PTR [rax],eax
  44010e:	add    BYTE PTR [rax],al
  440110:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490118
  440116:	add    DWORD PTR [rax],esi
  440118:	add    DWORD PTR [rbx],edx
  44011a:	or     al,BYTE PTR [rax]
  44011c:	adc    eax,DWORD PTR [rcx]
  44011e:	cdq    
  44011f:	add    BYTE PTR [rax+rsi*1],cl
  440122:	or     esp,DWORD PTR [rax+0xa]
  440125:	jo     0x440130
  440127:	push   rax
  440128:	or     al,al
  44012a:	(bad)  
  44012b:	rol    BYTE PTR [rax+riz*8],1
  44012e:	add    dh,al
  440130:	add    DWORD PTR [rax],edx
  440132:	or     DWORD PTR [rax],eax
  440134:	adc    BYTE PTR [rdx+0xc],ah
  440137:	xor    BYTE PTR [rbx],cl
  440139:	(bad)  
  44013a:	or     dh,BYTE PTR [rax+0x9]
  44013d:	push   rax
  44013e:	or     al,al
  440140:	(bad)  
  440141:	rol    BYTE PTR [rax+riz*8],1
  440144:	add    dh,al
  440146:	add    BYTE PTR [rax],al
  440148:	add    DWORD PTR [rcx],edx
  44014a:	or     BYTE PTR [rax],al
  44014c:	adc    DWORD PTR [rax+0x6],edi
  44014f:	add    BYTE PTR [rax+rbp*2],cl
  440152:	add    eax,0x3d20700
  440157:	xor    BYTE PTR [rdx],al
  440159:	(bad)  
  44015a:	add    DWORD PTR [rax+0x1],esi
  44015d:	(bad)  
  44015e:	add    al,0x0
  440160:	(bad)  
  440161:	push   rdx
  440162:	add    esi,DWORD PTR [rax]
  440164:	add    ah,BYTE PTR [rax+0x1]
  440167:	jo     0x44016a
  440169:	or     al,0x7
  44016b:	add    BYTE PTR [rdx+rax*8],cl
  44016e:	or     BYTE PTR [rax],dh
  440170:	(bad)  
  440171:	(bad)  
  440172:	(bad)  
  440173:	jo     0x44017a
  440175:	push   rax
  440176:	add    al,0xc0
  440178:	add    dl,al
  44017a:	add    BYTE PTR [rax],al
  44017c:	add    DWORD PTR [rbx],edx
  44017e:	or     al,BYTE PTR [rax]
  440180:	adc    eax,DWORD PTR [rcx]
  440182:	sbb    DWORD PTR [rax],eax
  440184:	or     al,0x30
  440186:	or     esp,DWORD PTR [rax+0xa]
  440189:	jo     0x440194
  44018b:	push   rax
  44018c:	or     al,al
  44018e:	(bad)  
  44018f:	rol    BYTE PTR [rax+riz*8],1
  440192:	add    dh,al
  440194:	add    DWORD PTR [rdx],ecx
  440196:	add    eax,0x14010a00
  44019b:	add    BYTE PTR [rbx],al
  44019d:	xor    BYTE PTR [rdx],al
  44019f:	(bad)  
  4401a0:	add    DWORD PTR [rax+0x0],esi
  4401a3:	add    BYTE PTR [rcx],al
  4401a5:	or     al,0x7
  4401a7:	add    BYTE PTR [rdx+riz*2],cl
  4401aa:	or     BYTE PTR [rax],dh
  4401ac:	(bad)  
  4401ad:	(bad)  
  4401ae:	(bad)  
  4401af:	jo     0x4401b6
  4401b1:	push   rax
  4401b2:	add    al,0xc0
  4401b4:	add    dl,al
  4401b6:	add    BYTE PTR [rax],al
  4401b8:	add    DWORD PTR [rbx],edx
  4401ba:	or     al,BYTE PTR [rax]
  4401bc:	adc    eax,DWORD PTR [rcx]
  4401be:	adc    eax,DWORD PTR [rax]
  4401c0:	or     al,0x30
  4401c2:	or     esp,DWORD PTR [rax+0xa]
  4401c5:	jo     0x4401d0
  4401c7:	push   rax
  4401c8:	or     al,al
  4401ca:	(bad)  
  4401cb:	rol    BYTE PTR [rax+riz*8],1
  4401ce:	add    dh,al
  4401d0:	add    DWORD PTR [rdx],ecx
  4401d2:	(bad)  
  4401d3:	add    BYTE PTR [rdx],cl
  4401d5:	xor    al,BYTE PTR [rsi]
  4401d7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4063d
  4401dd:	push   rax
  4401de:	add    al,al
  4401e0:	add    DWORD PTR [rip+0xffffffff98350012],esi        # 0xffffffff987901f8
  4401e6:	or     eax,0xc882c00
  4401eb:	add    BYTE PTR [rbx],ah
  4401ed:	js     0x4401fa
  4401ef:	add    BYTE PTR [rbx],bl
  4401f1:	push   0x113000a
  4401f6:	sbb    eax,0xb300c00
  4401fb:	(bad)  
  4401fc:	or     dh,BYTE PTR [rax+0x9]
  4401ff:	push   rax
  440200:	or     al,al
  440202:	(bad)  
  440203:	rol    BYTE PTR [rax+riz*8],1
  440206:	add    dh,al
  440208:	add    DWORD PTR [rax],edx
  44020a:	or     DWORD PTR [rax],eax
  44020c:	adc    BYTE PTR [rdx+0x600b300c],al
  440212:	or     dh,BYTE PTR [rax+0x9]
  440215:	push   rax
  440216:	or     al,al
  440218:	(bad)  
  440219:	rol    BYTE PTR [rax+riz*8],1
  44021c:	add    dh,al
  44021e:	add    BYTE PTR [rax],al
  440220:	add    DWORD PTR [rdi],ecx
  440222:	or     BYTE PTR [rax],al
  440224:	lidt   [rip+0x7300800]        # 0x7740a2b
  44022b:	(bad)  
  44022c:	(bad)  
  44022d:	jo     0x440234
  44022f:	push   rax
  440230:	add    al,0xc0
  440232:	add    dl,al
  440234:	add    DWORD PTR [rdi+rax*1],ecx
  440237:	add    BYTE PTR [rdx+rax*2],cl
  44023a:	or     BYTE PTR [rax],dh
  44023c:	(bad)  
  44023d:	(bad)  
  44023e:	(bad)  
  44023f:	jo     0x440246
  440241:	push   rax
  440242:	add    al,0xc0
  440244:	add    dl,al
  440246:	add    BYTE PTR [rax],al
  440248:	add    DWORD PTR [rax],edx
  44024a:	or     DWORD PTR [rax],eax
  44024c:	adc    dl,ah
  44024e:	or     al,0x30
  440250:	or     esp,DWORD PTR [rax+0xa]
  440253:	jo     0x44025e
  440255:	push   rax
  440256:	or     al,al
  440258:	(bad)  
  440259:	rol    BYTE PTR [rax+riz*8],1
  44025c:	add    dh,al
  44025e:	add    BYTE PTR [rax],al
  440260:	add    DWORD PTR [rip+0x52050002],eax        # 0x52490268
  440266:	add    DWORD PTR [rax],esi
  440268:	add    DWORD PTR [rbx],ecx
  44026a:	(bad)  
  44026b:	add    BYTE PTR [rbx],cl
  44026d:	add    DWORD PTR [rcx],ebx
  44026f:	add    BYTE PTR [rax+rsi*1],al
  440272:	add    esp,DWORD PTR [rax+0x2]
  440275:	jo     0x440278
  440277:	push   rax
  440278:	add    DWORD PTR [rax],edx
  44027a:	or     DWORD PTR [rax],eax
  44027c:	adc    BYTE PTR [rdx+0xc],ah
  44027f:	xor    BYTE PTR [rbx],cl
  440281:	(bad)  
  440282:	or     dh,BYTE PTR [rax+0x9]
  440285:	push   rax
  440286:	or     al,al
  440288:	(bad)  
  440289:	rol    BYTE PTR [rax+riz*8],1
  44028c:	add    dh,al
  44028e:	add    BYTE PTR [rax],al
  440290:	add    DWORD PTR [rax],eax
  440292:	add    BYTE PTR [rax],al
  440294:	add    DWORD PTR [rip+0x52050002],eax        # 0x5249029c
  44029a:	add    DWORD PTR [rax],esi
  44029c:	add    DWORD PTR [rcx+rax*1],eax
  44029f:	add    BYTE PTR [rdx+rax*2],al
  4402a2:	add    BYTE PTR [rax],al
  4402a4:	add    DWORD PTR [rdx],ecx
  4402a6:	add    eax,0x16010a00
  4402ab:	add    BYTE PTR [rbx],al
  4402ad:	xor    BYTE PTR [rdx],al
  4402af:	(bad)  
  4402b0:	add    DWORD PTR [rax+0x0],esi
  4402b3:	add    BYTE PTR [rcx],al
  4402b5:	(bad)  
  4402b6:	add    al,0x0
  4402b8:	(bad)  
  4402b9:	rol    BYTE PTR [rbx],cl
  4402bb:	xor    BYTE PTR [rdx],al
  4402bd:	(bad)  
  4402be:	add    DWORD PTR [rax+0x1],esi
  4402c1:	add    al,0x1
  4402c3:	add    BYTE PTR [rdx+rax*8],al
  4402c6:	add    BYTE PTR [rax],al
  4402c8:	add    DWORD PTR [rcx+rax*1],eax
  4402cb:	add    BYTE PTR [rdx+rax*2],al
  4402ce:	add    BYTE PTR [rax],al
  4402d0:	add    DWORD PTR [rcx+rax*1],eax
  4402d3:	add    BYTE PTR [rdx+rax*2],al
  4402d6:	add    BYTE PTR [rax],al
  4402d8:	add    DWORD PTR [rax],edx
  4402da:	or     DWORD PTR [rax],eax
  4402dc:	adc    BYTE PTR [rdx+0xc],ah
  4402df:	xor    BYTE PTR [rbx],cl
  4402e1:	(bad)  
  4402e2:	or     dh,BYTE PTR [rax+0x9]
  4402e5:	push   rax
  4402e6:	or     al,al
  4402e8:	(bad)  
  4402e9:	rol    BYTE PTR [rax+riz*8],1
  4402ec:	add    dh,al
  4402ee:	add    BYTE PTR [rax],al
  4402f0:	add    DWORD PTR [rax],edx
  4402f2:	or     DWORD PTR [rax],eax
  4402f4:	adc    BYTE PTR [rdx+0xc],ah
  4402f7:	xor    BYTE PTR [rbx],cl
  4402f9:	(bad)  
  4402fa:	or     dh,BYTE PTR [rax+0x9]
  4402fd:	push   rax
  4402fe:	or     al,al
  440300:	(bad)  
  440301:	rol    BYTE PTR [rax+riz*8],1
  440304:	add    dh,al
  440306:	add    BYTE PTR [rax],al
  440308:	add    DWORD PTR [rax],edx
  44030a:	or     DWORD PTR [rax],eax
  44030c:	adc    BYTE PTR [rdx+0xc],al
  44030f:	xor    BYTE PTR [rbx],cl
  440311:	(bad)  
  440312:	or     dh,BYTE PTR [rax+0x9]
  440315:	push   rax
  440316:	or     al,al
  440318:	(bad)  
  440319:	rol    BYTE PTR [rax+riz*8],1
  44031c:	add    dh,al
  44031e:	add    BYTE PTR [rax],al
  440320:	add    DWORD PTR [rcx+rax*1],eax
  440323:	add    BYTE PTR [rdx+rax*2],al
  440326:	add    BYTE PTR [rax],al
  440328:	add    DWORD PTR [rcx+rax*1],eax
  44032b:	add    BYTE PTR [rdx+rax*2],al
  44032e:	add    BYTE PTR [rax],al
  440330:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490338
  440336:	add    DWORD PTR [rax],esi
  440338:	add    DWORD PTR [rip+0x52050002],eax        # 0x52490340
  44033e:	add    DWORD PTR [rax],esi
  440340:	add    DWORD PTR [rbx],edx
  440342:	or     al,BYTE PTR [rax]
  440344:	adc    eax,DWORD PTR [rcx]
  440346:	adc    DWORD PTR [rax],eax
  440348:	or     al,0x30
  44034a:	or     esp,DWORD PTR [rax+0xa]
  44034d:	jo     0x440358
  44034f:	push   rax
  440350:	or     al,al
  440352:	(bad)  
  440353:	rol    BYTE PTR [rax+riz*8],1
  440356:	add    dh,al
  440358:	add    DWORD PTR [rsi],eax
  44035a:	add    eax,DWORD PTR [rax]
  44035c:	(bad)  
  44035d:	(bad)  
  44035e:	add    dh,BYTE PTR [rax]
  440360:	add    DWORD PTR [rax+0x0],esp
  440363:	add    BYTE PTR [rcx],al
  440365:	adc    BYTE PTR [rcx],cl
  440367:	add    BYTE PTR [rax],dl
  440369:	ret    0x300c
  44036c:	or     esp,DWORD PTR [rax+0xa]
  44036f:	jo     0x44037a
  440371:	push   rax
  440372:	or     al,al
  440374:	(bad)  
  440375:	rol    BYTE PTR [rax+riz*8],1
  440378:	add    dh,al
  44037a:	add    BYTE PTR [rax],al
  44037c:	add    DWORD PTR [rsi],ecx
  44037e:	or     BYTE PTR [rax],al
  440380:	(bad)  
  440381:	push   rdx
  440382:	or     dh,BYTE PTR [rax]
  440384:	or     DWORD PTR [rax+0x8],esp
  440387:	jo     0x440390
  440389:	push   rax
  44038a:	(bad)  
  44038b:	rol    BYTE PTR [rax+rdx*8],0x2
  44038f:	loopne 0x440392
  440391:	or     DWORD PTR [rax+rax*1],eax
  440394:	or     DWORD PTR [rcx],eax
  440396:	adc    eax,0x1300200
  44039b:	(bad)  
  44039c:	add    DWORD PTR [rax],ecx
  44039e:	add    eax,0x4620800
  4403a3:	xor    BYTE PTR [rbx],al
  4403a5:	(bad)  
  4403a6:	add    dh,BYTE PTR [rax+0x1]
  4403a9:	push   rax
  4403aa:	add    BYTE PTR [rax],al
  4403ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324903b4
  4403b2:	add    DWORD PTR [rax],esi
  4403b4:	add    DWORD PTR [rcx],edx
  4403b6:	or     DWORD PTR [rax],eax
  4403b8:	adc    DWORD PTR [rcx],eax
  4403ba:	add    BYTE PTR cs:[rdx],cl
  4403bd:	xor    BYTE PTR [rcx],cl
  4403bf:	(bad)  
  4403c0:	or     BYTE PTR [rax+0x7],dh
  4403c3:	push   rax
  4403c4:	(bad)  
  4403c5:	rol    BYTE PTR [rax+rdx*8],0x2
  4403c9:	loopne 0x4403cb
  4403cb:	add    BYTE PTR [rcx],al
  4403cd:	(bad)  
  4403ce:	add    eax,DWORD PTR [rax]
  4403d0:	(bad)  
  4403d1:	(bad)  
  4403d3:	xor    BYTE PTR [rcx],al
  4403d5:	(bad)  
  4403d6:	add    BYTE PTR [rax],al
  4403d8:	add    DWORD PTR [rax],edx
  4403da:	or     DWORD PTR [rax],eax
  4403dc:	adc    dl,al
  4403de:	or     al,0x30
  4403e0:	or     esp,DWORD PTR [rax+0xa]
  4403e3:	jo     0x4403ee
  4403e5:	push   rax
  4403e6:	or     al,al
  4403e8:	(bad)  
  4403e9:	rol    BYTE PTR [rax+riz*8],1
  4403ec:	add    dh,al
  4403ee:	add    BYTE PTR [rax],al
  4403f0:	add    DWORD PTR [rdx],ecx
  4403f2:	(bad)  
  4403f3:	add    BYTE PTR [rdx],cl
  4403f5:	push   rdx
  4403f6:	(bad)  
  4403f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4085d
  4403fd:	push   rax
  4403fe:	add    al,al
  440400:	add    DWORD PTR [rax],ecx
  440402:	add    eax,0x4420800
  440407:	xor    BYTE PTR [rbx],al
  440409:	(bad)  
  44040a:	add    dh,BYTE PTR [rax+0x1]
  44040d:	push   rax
  44040e:	add    BYTE PTR [rax],al
  440410:	add    DWORD PTR [rcx],edx
  440412:	or     BYTE PTR [rax],al
  440414:	adc    DWORD PTR [rax+0x5],edi
  440417:	add    BYTE PTR [rax+rbp*2],cl
  44041a:	add    al,0x0
  44041c:	(bad)  
  44041d:	mov    dl,0x3
  44041f:	xor    BYTE PTR [rdx],al
  440421:	(bad)  
  440422:	add    DWORD PTR [rax+0x1],esi
  440425:	or     al,0x7
  440427:	add    BYTE PTR [rdx+riz*4],cl
  44042a:	or     BYTE PTR [rax],dh
  44042c:	(bad)  
  44042d:	(bad)  
  44042e:	(bad)  
  44042f:	jo     0x440436
  440431:	push   rax
  440432:	add    al,0xc0
  440434:	add    dl,al
  440436:	add    BYTE PTR [rax],al
  440438:	add    DWORD PTR [rdi],eax
  44043a:	add    al,0x0
  44043c:	(bad)  
  44043d:	xchg   edx,eax
  44043e:	add    esi,DWORD PTR [rax]
  440440:	add    ah,BYTE PTR [rax+0x1]
  440443:	jo     0x440446
  440445:	add    al,0x1
  440447:	add    BYTE PTR [rdx+riz*2],al
  44044a:	add    BYTE PTR [rax],al
  44044c:	add    DWORD PTR [rcx+rax*1],eax
  44044f:	add    BYTE PTR [rdx+riz*2],al
  440452:	add    BYTE PTR [rax],al
  440454:	add    DWORD PTR [rcx+rax*1],eax
  440457:	add    BYTE PTR [rdx+rax*2],al
  44045a:	add    BYTE PTR [rax],al
  44045c:	add    DWORD PTR [rcx+rax*1],eax
  44045f:	add    BYTE PTR [rdx+riz*2],al
  440462:	add    BYTE PTR [rax],al
  440464:	add    DWORD PTR [rcx+rax*1],eax
  440467:	add    BYTE PTR [rdx+riz*2],al
  44046a:	add    BYTE PTR [rax],al
  44046c:	add    DWORD PTR [rcx+rax*1],eax
  44046f:	add    BYTE PTR [rdx+rax*2],al
  440472:	add    BYTE PTR [rax],al
  440474:	add    DWORD PTR [rsi],eax
  440476:	add    eax,DWORD PTR [rax]
  440478:	(bad)  
  440479:	rex.X add sil,BYTE PTR [rax]
  44047c:	add    DWORD PTR [rax+0x0],esp
  44047f:	add    BYTE PTR [rcx],al
  440481:	add    BYTE PTR [rax],al
  440483:	add    BYTE PTR [rcx],al
  440485:	add    BYTE PTR [rax],al
  440487:	add    BYTE PTR [rcx],al
  440489:	add    BYTE PTR [rax],al
  44048b:	add    BYTE PTR [rcx],al
  44048d:	add    BYTE PTR [rax],al
  44048f:	add    BYTE PTR [rcx],al
  440491:	add    BYTE PTR [rax],al
  440493:	add    BYTE PTR [rcx],al
  440495:	add    BYTE PTR [rax],al
  440497:	add    BYTE PTR [rcx],al
  440499:	add    BYTE PTR [rax],al
  44049b:	add    BYTE PTR [rcx],al
  44049d:	add    BYTE PTR [rax],al
  44049f:	add    BYTE PTR [rcx],al
  4404a1:	add    BYTE PTR [rax],al
  4404a3:	add    BYTE PTR [rcx],al
  4404a5:	add    BYTE PTR [rax],al
  4404a7:	add    BYTE PTR [rcx],al
  4404a9:	or     BYTE PTR [rip+0x4420800],al        # 0x4860caf
  4404af:	xor    BYTE PTR [rbx],al
  4404b1:	(bad)  
  4404b2:	add    dh,BYTE PTR [rax+0x1]
  4404b5:	push   rax
  4404b6:	add    BYTE PTR [rax],al
  4404b8:	add    DWORD PTR [rdi],eax
  4404ba:	add    al,0x0
  4404bc:	(bad)  
  4404bd:	repnz add esi,DWORD PTR [rax]
  4404c0:	add    ah,BYTE PTR [rax+0x1]
  4404c3:	jo     0x4404c6
  4404c5:	add    eax,0x32050002
  4404ca:	add    DWORD PTR [rax],esi
  4404cc:	add    DWORD PTR [rip+0x32050002],eax        # 0x324904d4
  4404d2:	add    DWORD PTR [rax],esi
  4404d4:	add    DWORD PTR [rcx+rax*1],eax
  4404d7:	add    BYTE PTR [rdx+riz*2],al
  4404da:	add    BYTE PTR [rax],al
  4404dc:	add    DWORD PTR [rbx],edx
  4404de:	or     al,BYTE PTR [rax]
  4404e0:	adc    eax,DWORD PTR [rcx]
  4404e2:	lea    eax,[rax]
  4404e4:	or     al,0x30
  4404e6:	or     esp,DWORD PTR [rax+0xa]
  4404e9:	jo     0x4404f4
  4404eb:	push   rax
  4404ec:	or     al,al
  4404ee:	(bad)  
  4404ef:	rol    BYTE PTR [rax+riz*8],1
  4404f2:	add    dh,al
  4404f4:	add    DWORD PTR [rcx+rax*1],eax
  4404f7:	add    BYTE PTR [rdx+riz*2],al
  4404fa:	add    BYTE PTR [rax],al
  4404fc:	add    DWORD PTR [rdx],ecx
  4404fe:	(bad)  
  4404ff:	add    BYTE PTR [rdx],cl
  440501:	jb     0x440509
  440503:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40969
  440509:	push   rax
  44050a:	add    al,al
  44050c:	add    DWORD PTR [rcx],ecx
  44050e:	add    al,0x0
  440510:	or     DWORD PTR [rcx],eax
  440512:	mov    DWORD PTR [rax],eax
  440514:	add    dh,BYTE PTR [rax]
  440516:	add    DWORD PTR [rax+0x1],esp
  440519:	or     BYTE PTR [rip+0x4420800],al        # 0x4860d1f
  44051f:	xor    BYTE PTR [rbx],al
  440521:	(bad)  
  440522:	add    dh,BYTE PTR [rax+0x1]
  440525:	push   rax
  440526:	add    BYTE PTR [rax],al
  440528:	add    DWORD PTR [rcx+rax*1],eax
  44052b:	add    BYTE PTR [rdx+riz*2],al
  44052e:	add    BYTE PTR [rax],al
  440530:	add    DWORD PTR [rdx],ecx
  440532:	(bad)  
  440533:	add    BYTE PTR [rdx],cl
  440535:	xor    al,BYTE PTR [rsi]
  440537:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4099d
  44053d:	push   rax
  44053e:	add    al,al
  440540:	add    DWORD PTR [rsi],eax
  440542:	add    eax,DWORD PTR [rax]
  440544:	(bad)  
  440545:	rex.X add sil,BYTE PTR [rax]
  440548:	add    DWORD PTR [rax+0x0],esp
  44054b:	add    BYTE PTR [rcx],al
  44054d:	(bad)  
  44054e:	add    eax,DWORD PTR [rax]
  440550:	(bad)  
  440551:	rex.X add sil,BYTE PTR [rax]
  440554:	add    DWORD PTR [rax+0x0],esp
  440557:	add    BYTE PTR [rcx],al
  440559:	or     al,0x7
  44055b:	add    BYTE PTR [rdx+rax*2],cl
  44055e:	or     BYTE PTR [rax],dh
  440560:	(bad)  
  440561:	(bad)  
  440562:	(bad)  
  440563:	jo     0x44056a
  440565:	push   rax
  440566:	add    al,0xc0
  440568:	add    dl,al
  44056a:	add    BYTE PTR [rax],al
  44056c:	add    DWORD PTR [rdx],ecx
  44056e:	(bad)  
  44056f:	add    BYTE PTR [rdx],cl
  440571:	jb     0x440579
  440573:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b409d9
  440579:	push   rax
  44057a:	add    al,al
  44057c:	add    DWORD PTR [rdi],eax
  44057e:	add    al,0x0
  440580:	(bad)  
  440581:	xor    al,BYTE PTR [rbx]
  440583:	xor    BYTE PTR [rdx],al
  440585:	(bad)  
  440586:	add    DWORD PTR [rax+0x1],esi
  440589:	(bad)  
  44058a:	add    al,0x0
  44058c:	(bad)  
  44058d:	xor    al,BYTE PTR [rbx]
  44058f:	xor    BYTE PTR [rdx],al
  440591:	(bad)  
  440592:	add    DWORD PTR [rax+0x1],esi
  440595:	or     al,BYTE PTR [rip+0x1c010a00]        # 0x1c450f9b
  44059b:	add    BYTE PTR [rbx],al
  44059d:	xor    BYTE PTR [rdx],al
  44059f:	(bad)  
  4405a0:	add    DWORD PTR [rax+0x0],esi
  4405a3:	add    BYTE PTR [rcx],al
  4405a5:	adc    BYTE PTR [rcx],cl
  4405a7:	add    BYTE PTR [rax],dl
  4405a9:	ret    0x300c
  4405ac:	or     esp,DWORD PTR [rax+0xa]
  4405af:	jo     0x4405ba
  4405b1:	push   rax
  4405b2:	or     al,al
  4405b4:	(bad)  
  4405b5:	rol    BYTE PTR [rax+riz*8],1
  4405b8:	add    dh,al
  4405ba:	add    BYTE PTR [rax],al
  4405bc:	add    DWORD PTR [rax],ecx
  4405be:	add    eax,0x4420800
  4405c3:	xor    BYTE PTR [rbx],al
  4405c5:	(bad)  
  4405c6:	add    dh,BYTE PTR [rax+0x1]
  4405c9:	push   rax
  4405ca:	add    BYTE PTR [rax],al
  4405cc:	add    DWORD PTR [rax],ecx
  4405ce:	add    eax,0x4420800
  4405d3:	xor    BYTE PTR [rbx],al
  4405d5:	(bad)  
  4405d6:	add    dh,BYTE PTR [rax+0x1]
  4405d9:	push   rax
  4405da:	add    BYTE PTR [rax],al
  4405dc:	add    DWORD PTR [rip+0xffffffffd2050002],eax        # 0xffffffffd24905e4
  4405e2:	add    DWORD PTR [rax],esi
  4405e4:	add    DWORD PTR [rdi],eax
  4405e6:	add    al,0x0
  4405e8:	(bad)  
  4405e9:	xor    al,BYTE PTR [rbx]
  4405eb:	xor    BYTE PTR [rdx],al
  4405ed:	(bad)  
  4405ee:	add    DWORD PTR [rax+0x1],esi
  4405f1:	adc    ecx,DWORD PTR [rdx]
  4405f3:	add    BYTE PTR [rbx],dl
  4405f5:	add    DWORD PTR [rcx+0xb300c01],ecx
  4405fb:	(bad)  
  4405fc:	or     dh,BYTE PTR [rax+0x9]
  4405ff:	push   rax
  440600:	or     al,al
  440602:	(bad)  
  440603:	rol    BYTE PTR [rax+riz*8],1
  440606:	add    dh,al
  440608:	add    DWORD PTR [rax],ecx
  44060a:	add    eax,0x4420800
  44060f:	xor    BYTE PTR [rbx],al
  440611:	(bad)  
  440612:	add    dh,BYTE PTR [rax+0x1]
  440615:	push   rax
  440616:	add    BYTE PTR [rax],al
  440618:	add    DWORD PTR [rip+0x52050002],eax        # 0x52490620
  44061e:	add    DWORD PTR [rax],esi
  440620:	add    DWORD PTR [rdi],eax
  440622:	add    al,0x0
  440624:	(bad)  
  440625:	jb     0x44062a
  440627:	xor    BYTE PTR [rdx],al
  440629:	(bad)  
  44062a:	add    DWORD PTR [rax+0x1],esi
  44062d:	(bad)  
  44062e:	or     BYTE PTR [rax],al
  440630:	(bad)  
  440631:	jb     0x44063d
  440633:	xor    BYTE PTR [rcx],cl
  440635:	(bad)  
  440636:	or     BYTE PTR [rax+0x7],dh
  440639:	push   rax
  44063a:	(bad)  
  44063b:	rol    BYTE PTR [rax+rdx*8],0x2
  44063f:	loopne 0x440642
  440641:	adc    eax,0x6815000b
  440646:	(bad)  
  440647:	add    BYTE PTR [rax],dl
  440649:	loop   0x440657
  44064b:	xor    BYTE PTR [rbx],cl
  44064d:	(bad)  
  44064e:	or     dh,BYTE PTR [rax+0x9]
  440651:	push   rax
  440652:	or     al,al
  440654:	(bad)  
  440655:	rol    BYTE PTR [rax+riz*8],1
  440658:	add    dh,al
  44065a:	add    BYTE PTR [rax],al
  44065c:	add    DWORD PTR [rax],edx
  44065e:	or     DWORD PTR [rax],eax
  440660:	adc    BYTE PTR [rdx+0xc],al
  440663:	xor    BYTE PTR [rbx],cl
  440665:	(bad)  
  440666:	or     dh,BYTE PTR [rax+0x9]
  440669:	push   rax
  44066a:	or     al,al
  44066c:	(bad)  
  44066d:	rol    BYTE PTR [rax+riz*8],1
  440670:	add    dh,al
  440672:	add    BYTE PTR [rax],al
  440674:	add    DWORD PTR [rcx+rax*1],eax
  440677:	add    BYTE PTR [rdx+riz*2],al
  44067a:	add    BYTE PTR [rax],al
  44067c:	add    DWORD PTR [rax],edx
  44067e:	or     DWORD PTR [rax],eax
  440680:	adc    BYTE PTR [rdx+0x600b300c],ah
  440686:	or     dh,BYTE PTR [rax+0x9]
  440689:	push   rax
  44068a:	or     al,al
  44068c:	(bad)  
  44068d:	rol    BYTE PTR [rax+riz*8],1
  440690:	add    dh,al
  440692:	add    BYTE PTR [rax],al
  440694:	add    DWORD PTR [rip+0x6815000b],edx        # 0x685906a5
  44069a:	(bad)  
  44069b:	add    BYTE PTR [rax],dl
  44069d:	loop   0x4406ab
  44069f:	xor    BYTE PTR [rbx],cl
  4406a1:	(bad)  
  4406a2:	or     dh,BYTE PTR [rax+0x9]
  4406a5:	push   rax
  4406a6:	or     al,al
  4406a8:	(bad)  
  4406a9:	rol    BYTE PTR [rax+riz*8],1
  4406ac:	add    dh,al
  4406ae:	add    BYTE PTR [rax],al
  4406b0:	add    DWORD PTR [rax],edx
  4406b2:	or     DWORD PTR [rax],eax
  4406b4:	adc    BYTE PTR [rdx+0xc],ah
  4406b7:	xor    BYTE PTR [rbx],cl
  4406b9:	(bad)  
  4406ba:	or     dh,BYTE PTR [rax+0x9]
  4406bd:	push   rax
  4406be:	or     al,al
  4406c0:	(bad)  
  4406c1:	rol    BYTE PTR [rax+riz*8],1
  4406c4:	add    dh,al
  4406c6:	add    BYTE PTR [rax],al
  4406c8:	add    DWORD PTR [rbx],edx
  4406ca:	or     al,BYTE PTR [rax]
  4406cc:	adc    eax,DWORD PTR [rcx]
  4406ce:	(bad)  
  4406cf:	add    BYTE PTR [rax+rsi*1],cl
  4406d2:	or     esp,DWORD PTR [rax+0xa]
  4406d5:	jo     0x4406e0
  4406d7:	push   rax
  4406d8:	or     al,al
  4406da:	(bad)  
  4406db:	rol    BYTE PTR [rax+riz*8],1
  4406de:	add    dh,al
  4406e0:	add    DWORD PTR [rbx],ebx
  4406e2:	or     al,0x0
  4406e4:	sbb    ebp,DWORD PTR [rax+0x46]
  4406e7:	add    BYTE PTR [rbx],dl
  4406e9:	add    DWORD PTR [rdi+0xb300c00],ecx
  4406ef:	(bad)  
  4406f0:	or     dh,BYTE PTR [rax+0x9]
  4406f3:	push   rax
  4406f4:	or     al,al
  4406f6:	(bad)  
  4406f7:	rol    BYTE PTR [rax+riz*8],1
  4406fa:	add    dh,al
  4406fc:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff92490704
  440702:	add    DWORD PTR [rax],esi
  440704:	add    DWORD PTR [rsi],eax
  440706:	add    eax,DWORD PTR [rax]
  440708:	(bad)  
  440709:	(bad)  
  44070b:	(bad)  
  44070c:	add    DWORD PTR [rax+0x0],esi
  44070f:	add    BYTE PTR [rcx],al
  440711:	add    al,0x1
  440713:	add    BYTE PTR [rdx+rax*2],al
  440716:	add    BYTE PTR [rax],al
  440718:	add    DWORD PTR [rbx],ebx
  44071a:	or     al,0x0
  44071c:	sbb    ebp,DWORD PTR [rax+0x5d]
  44071f:	add    BYTE PTR [rbx],dl
  440721:	add    DWORD PTR [rbp+0xb300c00],edi
  440727:	(bad)  
  440728:	or     dh,BYTE PTR [rax+0x9]
  44072b:	push   rax
  44072c:	or     al,al
  44072e:	(bad)  
  44072f:	rol    BYTE PTR [rax+riz*8],1
  440732:	add    dh,al
  440734:	add    DWORD PTR [rdi],eax
  440736:	add    al,0x0
  440738:	(bad)  
  440739:	jb     0x44073e
  44073b:	xor    BYTE PTR [rdx],al
  44073d:	(bad)  
  44073e:	add    DWORD PTR [rax+0x1],esi
  440741:	add    al,0x1
  440743:	add    BYTE PTR [rdx+rax*2],al
  440746:	add    BYTE PTR [rax],al
  440748:	add    DWORD PTR [rcx+rax*1],eax
  44074b:	add    BYTE PTR [rdx+riz*2],al
  44074e:	add    BYTE PTR [rax],al
  440750:	add    DWORD PTR [rdi+rax*1],ecx
  440753:	add    BYTE PTR [rdx+rax*2],cl
  440756:	or     BYTE PTR [rax],dh
  440758:	(bad)  
  440759:	(bad)  
  44075a:	(bad)  
  44075b:	jo     0x440762
  44075d:	push   rax
  44075e:	add    al,0xc0
  440760:	add    dl,al
  440762:	add    BYTE PTR [rax],al
  440764:	add    DWORD PTR [rcx+rax*1],eax
  440767:	add    BYTE PTR [rdx+riz*2],al
  44076a:	add    BYTE PTR [rax],al
  44076c:	add    DWORD PTR [rcx+rax*1],eax
  44076f:	add    BYTE PTR [rdx+riz*2],al
  440772:	add    BYTE PTR [rax],al
  440774:	add    DWORD PTR [rbx],edx
  440776:	or     al,BYTE PTR [rax]
  440778:	adc    eax,DWORD PTR [rcx]
  44077a:	mov    cl,0x0
  44077c:	or     al,0x30
  44077e:	or     esp,DWORD PTR [rax+0xa]
  440781:	jo     0x44078c
  440783:	push   rax
  440784:	or     al,al
  440786:	(bad)  
  440787:	rol    BYTE PTR [rax+riz*8],1
  44078a:	add    dh,al
  44078c:	add    DWORD PTR [rdx],ecx
  44078e:	(bad)  
  44078f:	add    BYTE PTR [rdx],cl
  440791:	push   rdx
  440792:	(bad)  
  440793:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40bf9
  440799:	push   rax
  44079a:	add    al,al
  44079c:	add    DWORD PTR [rcx],edx
  44079e:	or     DWORD PTR [rax],eax
  4407a0:	adc    DWORD PTR [rcx],eax
  4407a2:	rex.WRX add BYTE PTR [rdx],r9b
  4407a5:	xor    BYTE PTR [rcx],cl
  4407a7:	(bad)  
  4407a8:	or     BYTE PTR [rax+0x7],dh
  4407ab:	push   rax
  4407ac:	(bad)  
  4407ad:	rol    BYTE PTR [rax+rdx*8],0x2
  4407b1:	loopne 0x4407b3
  4407b3:	add    BYTE PTR [rcx],al
  4407b5:	or     BYTE PTR [rip+0x4620800],al        # 0x4a60fbb
  4407bb:	xor    BYTE PTR [rbx],al
  4407bd:	(bad)  
  4407be:	add    dh,BYTE PTR [rax+0x1]
  4407c1:	push   rax
  4407c2:	add    BYTE PTR [rax],al
  4407c4:	add    DWORD PTR [rdx],ecx
  4407c6:	(bad)  
  4407c7:	add    BYTE PTR [rdx],cl
  4407c9:	xor    al,BYTE PTR [rsi]
  4407cb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40c31
  4407d1:	push   rax
  4407d2:	add    al,al
  4407d4:	add    DWORD PTR [rax],edx
  4407d6:	or     DWORD PTR [rax],eax
  4407d8:	adc    dl,ah
  4407da:	or     al,0x30
  4407dc:	or     esp,DWORD PTR [rax+0xa]
  4407df:	jo     0x4407ea
  4407e1:	push   rax
  4407e2:	or     al,al
  4407e4:	(bad)  
  4407e5:	rol    BYTE PTR [rax+riz*8],1
  4407e8:	add    dh,al
  4407ea:	add    BYTE PTR [rax],al
  4407ec:	add    DWORD PTR [rsi],ecx
  4407ee:	or     BYTE PTR [rax],al
  4407f0:	(bad)  
  4407f1:	jb     0x4407fd
  4407f3:	xor    BYTE PTR [rcx],cl
  4407f5:	(bad)  
  4407f6:	or     BYTE PTR [rax+0x7],dh
  4407f9:	push   rax
  4407fa:	(bad)  
  4407fb:	rol    BYTE PTR [rax+rdx*8],0x2
  4407ff:	loopne 0x440802
  440801:	and    ecx,DWORD PTR [rsi]
  440803:	add    BYTE PTR [rbx],ah
  440805:	js     0x440873
  440807:	add    BYTE PTR [rbx],bl
  440809:	push   0x113006b
  44080e:	fild   DWORD PTR [rax]
  440810:	or     al,0x30
  440812:	or     esp,DWORD PTR [rax+0xa]
  440815:	jo     0x440820
  440817:	push   rax
  440818:	or     al,al
  44081a:	(bad)  
  44081b:	rol    BYTE PTR [rax+riz*8],1
  44081e:	add    dh,al
  440820:	add    DWORD PTR [rax],eax
  440822:	add    BYTE PTR [rax],al
  440824:	add    DWORD PTR [rax],eax
  440826:	add    BYTE PTR [rax],al
  440828:	add    DWORD PTR [rax],eax
  44082a:	add    BYTE PTR [rax],al
  44082c:	add    DWORD PTR [rax],eax
  44082e:	add    BYTE PTR [rax],al
  440830:	add    DWORD PTR [rax],edx
  440832:	or     DWORD PTR [rax],eax
  440834:	adc    dl,ah
  440836:	or     al,0x30
  440838:	or     esp,DWORD PTR [rax+0xa]
  44083b:	jo     0x440846
  44083d:	push   rax
  44083e:	or     al,al
  440840:	(bad)  
  440841:	rol    BYTE PTR [rax+riz*8],1
  440844:	add    dh,al
  440846:	add    BYTE PTR [rax],al
  440848:	add    DWORD PTR [rax],eax
  44084a:	add    BYTE PTR [rax],al
  44084c:	add    DWORD PTR [rdx],ecx
  44084e:	(bad)  
  44084f:	add    BYTE PTR [rdx],cl
  440851:	push   rdx
  440852:	(bad)  
  440853:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40cb9
  440859:	push   rax
  44085a:	add    al,al
  44085c:	add    DWORD PTR [rcx+rax*1],eax
  44085f:	add    BYTE PTR [rdx+riz*2],al
  440862:	add    BYTE PTR [rax],al
  440864:	add    DWORD PTR [rcx+rax*1],eax
  440867:	add    BYTE PTR [rdx+riz*2],al
  44086a:	add    BYTE PTR [rax],al
  44086c:	add    DWORD PTR [rcx+rax*1],eax
  44086f:	add    BYTE PTR [rdx+riz*2],al
  440872:	add    BYTE PTR [rax],al
  440874:	add    DWORD PTR [rdi],eax
  440876:	add    al,0x0
  440878:	(bad)  
  440879:	push   rdx
  44087a:	add    esi,DWORD PTR [rax]
  44087c:	add    ah,BYTE PTR [rax+0x1]
  44087f:	jo     0x440882
  440881:	add    al,0x1
  440883:	add    BYTE PTR [rdx+riz*8],al
  440886:	add    BYTE PTR [rax],al
  440888:	add    DWORD PTR [rcx+rax*1],eax
  44088b:	add    BYTE PTR [rdx+rax*2],al
  44088e:	add    BYTE PTR [rax],al
  440890:	add    DWORD PTR [rdx+0x1c],esp
  440893:	add    BYTE PTR [rdx-0x18],ah
  440896:	pop    QWORD PTR [rax]
  440898:	pop    rcx
  440899:	fmul   DWORD PTR [rsi-0x7237b000]
  44089f:	add    BYTE PTR [rdi-0x48],al
  4408a2:	mov    WORD PTR [rax],es
  4408a4:	ds test al,0x8b
  4408a7:	add    BYTE PTR [rip+0x2c008a98],dh        # 0x2c449345
  4408ad:	mov    BYTE PTR [rcx-0x7787dd00],cl
  4408b3:	add    BYTE PTR [rbx],bl
  4408b5:	push   0x1130087
  4408ba:	and    DWORD PTR [rcx],eax
  4408bc:	or     al,0x30
  4408be:	or     esp,DWORD PTR [rax+0xa]
  4408c1:	jo     0x4408cc
  4408c3:	push   rax
  4408c4:	or     al,al
  4408c6:	(bad)  
  4408c7:	rol    BYTE PTR [rax+riz*8],1
  4408ca:	add    dh,al
  4408cc:	add    DWORD PTR [rcx+rax*1],eax
  4408cf:	add    BYTE PTR [rdx+riz*2],al
  4408d2:	add    BYTE PTR [rax],al
  4408d4:	add    DWORD PTR [rcx],edx
  4408d6:	(bad)  
  4408d7:	add    BYTE PTR [rcx],dl
  4408d9:	add    DWORD PTR [rcx],ecx
  4408db:	or     BYTE PTR [rcx],cl
  4408dd:	xor    BYTE PTR [rax],cl
  4408df:	(bad)  
  4408e0:	add    dh,BYTE PTR [rax+0x1]
  4408e3:	push   rax
  4408e4:	add    DWORD PTR [rcx+rax*1],eax
  4408e7:	add    BYTE PTR [rdx+riz*8],al
  4408ea:	add    BYTE PTR [rax],al
  4408ec:	add    DWORD PTR [rdx],ecx
  4408ee:	add    eax,0x8c010a00
  4408f3:	add    BYTE PTR [rbx],al
  4408f5:	xor    BYTE PTR [rdx],al
  4408f7:	(bad)  
  4408f8:	add    DWORD PTR [rax+0x0],esi
  4408fb:	add    BYTE PTR [rcx],al
  4408fd:	or     DWORD PTR [rax+rax*1],eax
  440900:	or     DWORD PTR [rcx],eax
  440902:	lea    eax,[rax]
  440904:	add    dh,BYTE PTR [rax]
  440906:	add    DWORD PTR [rax+0x1],esp
  440909:	add    eax,0x32050002
  44090e:	add    DWORD PTR [rax],esi
  440910:	add    DWORD PTR [rax],ecx
  440912:	add    eax,0x4420800
  440917:	xor    BYTE PTR [rbx],al
  440919:	(bad)  
  44091a:	add    dh,BYTE PTR [rax+0x1]
  44091d:	push   rax
  44091e:	add    BYTE PTR [rax],al
  440920:	add    DWORD PTR [rcx],esp
  440922:	or     al,0x0
  440924:	and    DWORD PTR [rax+0x30],ebp
  440927:	add    DWORD PTR [rcx],ebx
  440929:	add    DWORD PTR [rbx+0x2],esp
  44092c:	adc    DWORD PTR [rax],esi
  44092e:	adc    BYTE PTR [rax+0xf],ah
  440931:	jo     0x440941
  440933:	push   rax
  440934:	or     eax,0x4d00bc0
  440939:	loopne 0x44093d
  44093b:	lock add DWORD PTR [rbx],edx
  44093e:	or     al,BYTE PTR [rax]
  440940:	adc    eax,DWORD PTR [rcx]
  440942:	and    eax,DWORD PTR [rax]
  440944:	or     al,0x30
  440946:	or     esp,DWORD PTR [rax+0xa]
  440949:	jo     0x440954
  44094b:	push   rax
  44094c:	or     al,al
  44094e:	(bad)  
  44094f:	rol    BYTE PTR [rax+riz*8],1
  440952:	add    dh,al
  440954:	add    DWORD PTR [rbx],edx
  440956:	or     al,BYTE PTR [rax]
  440958:	adc    eax,DWORD PTR [rcx]
  44095a:	cmp    DWORD PTR [rax],eax
  44095c:	or     al,0x30
  44095e:	or     esp,DWORD PTR [rax+0xa]
  440961:	jo     0x44096c
  440963:	push   rax
  440964:	or     al,al
  440966:	(bad)  
  440967:	rol    BYTE PTR [rax+riz*8],1
  44096a:	add    dh,al
  44096c:	add    DWORD PTR [rbx],edx
  44096e:	or     al,BYTE PTR [rax]
  440970:	adc    eax,DWORD PTR [rcx]
  440972:	and    eax,0xb300c00
  440977:	(bad)  
  440978:	or     dh,BYTE PTR [rax+0x9]
  44097b:	push   rax
  44097c:	or     al,al
  44097e:	(bad)  
  44097f:	rol    BYTE PTR [rax+riz*8],1
  440982:	add    dh,al
  440984:	add    DWORD PTR [rbx],edx
  440986:	or     al,BYTE PTR [rax]
  440988:	adc    eax,DWORD PTR [rcx]
  44098a:	and    DWORD PTR [rax],eax
  44098c:	or     al,0x30
  44098e:	or     esp,DWORD PTR [rax+0xa]
  440991:	jo     0x44099c
  440993:	push   rax
  440994:	or     al,al
  440996:	(bad)  
  440997:	rol    BYTE PTR [rax+riz*8],1
  44099a:	add    dh,al
  44099c:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x15109a9
  4409a2:	sbb    al,0x0
  4409a4:	(bad)  
  4409a5:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40e0b
  4409ab:	push   rax
  4409ac:	add    al,al
  4409ae:	add    BYTE PTR [rax],al
  4409b0:	add    DWORD PTR [rdi+0x16],eax
  4409b3:	add    BYTE PTR [rdi-0x48],al
  4409b6:	(bad)  
  4409b7:	add    BYTE PTR [rsi],bh
  4409b9:	test   al,0x26
  4409bb:	add    BYTE PTR [rip+0x2c002598],dh        # 0x2c442f59
  4409c1:	mov    BYTE PTR [rax+rax*1],ah
  4409c4:	and    edi,DWORD PTR [rax+0x23]
  4409c7:	add    BYTE PTR [rbx],bl
  4409c9:	push   0x1130022
  4409ce:	push   rcx
  4409cf:	add    BYTE PTR [rax+rsi*1],cl
  4409d2:	or     esp,DWORD PTR [rax+0xa]
  4409d5:	jo     0x4409e0
  4409d7:	push   rax
  4409d8:	or     al,al
  4409da:	(bad)  
  4409db:	rol    BYTE PTR [rax+riz*8],1
  4409de:	add    dh,al
  4409e0:	add    DWORD PTR [rbx],ebx
  4409e2:	or     al,0x0
  4409e4:	sbb    ebp,DWORD PTR [rax+0x51]
  4409e7:	add    BYTE PTR [rbx],dl
  4409e9:	add    DWORD PTR [rbp+0xb300c00],esp
  4409ef:	(bad)  
  4409f0:	or     dh,BYTE PTR [rax+0x9]
  4409f3:	push   rax
  4409f4:	or     al,al
  4409f6:	(bad)  
  4409f7:	rol    BYTE PTR [rax+riz*8],1
  4409fa:	add    dh,al
  4409fc:	add    DWORD PTR [rip+0xffffffff98350012],esi        # 0xffffffff98790a14
  440a02:	(bad)  
  440a03:	add    BYTE PTR [rax+rcx*4],ch
  440a06:	add    BYTE PTR es:[rbx],ah
  440a09:	js     0x440a30
  440a0b:	add    BYTE PTR [rbx],bl
  440a0d:	push   0x1130024
  440a12:	push   rcx
  440a13:	add    BYTE PTR [rax+rsi*1],cl
  440a16:	or     esp,DWORD PTR [rax+0xa]
  440a19:	jo     0x440a24
  440a1b:	push   rax
  440a1c:	or     al,al
  440a1e:	(bad)  
  440a1f:	rol    BYTE PTR [rax+riz*8],1
  440a22:	add    dh,al
  440a24:	add    DWORD PTR [rip+0xffffffff98350012],esi        # 0xffffffff98790a3c
  440a2a:	push   rsi
  440a2b:	add    BYTE PTR [rax+rcx*4],ch
  440a2e:	push   rbp
  440a2f:	add    BYTE PTR [rbx],ah
  440a31:	js     0x440a87
  440a33:	add    BYTE PTR [rbx],bl
  440a35:	push   0x1130053
  440a3a:	scas   eax,DWORD PTR es:[rdi]
  440a3b:	add    BYTE PTR [rax+rsi*1],cl
  440a3e:	or     esp,DWORD PTR [rax+0xa]
  440a41:	jo     0x440a4c
  440a43:	push   rax
  440a44:	or     al,al
  440a46:	(bad)  
  440a47:	rol    BYTE PTR [rax+riz*8],1
  440a4a:	add    dh,al
  440a4c:	add    DWORD PTR [rax],eax
  440a4e:	add    BYTE PTR [rax],al
  440a50:	add    DWORD PTR [rcx+rax*1],eax
  440a53:	add    BYTE PTR [rdx+rax*2],al
  440a56:	add    BYTE PTR [rax],al
  440a58:	add    DWORD PTR [rdi],eax
  440a5a:	add    al,0x0
  440a5c:	(bad)  
  440a5d:	xor    al,BYTE PTR [rbx]
  440a5f:	xor    BYTE PTR [rdx],al
  440a61:	(bad)  
  440a62:	add    DWORD PTR [rax+0x1],esi
  440a65:	add    al,0x1
  440a67:	add    BYTE PTR [rdx+rax*2],al
  440a6a:	add    BYTE PTR [rax],al
  440a6c:	add    DWORD PTR [rbx],ecx
  440a6e:	(bad)  
  440a6f:	add    BYTE PTR [rbx],cl
  440a71:	add    DWORD PTR [rdi],esp
  440a73:	add    BYTE PTR [rax+rsi*1],al
  440a76:	add    esp,DWORD PTR [rax+0x2]
  440a79:	jo     0x440a7c
  440a7b:	push   rax
  440a7c:	add    DWORD PTR [rcx+rax*1],eax
  440a7f:	add    BYTE PTR [rdx+rax*2],al
  440a82:	add    BYTE PTR [rax],al
  440a84:	add    DWORD PTR [rax],ecx
  440a86:	add    eax,0x4620800
  440a8b:	xor    BYTE PTR [rbx],al
  440a8d:	(bad)  
  440a8e:	add    dh,BYTE PTR [rax+0x1]
  440a91:	push   rax
  440a92:	add    BYTE PTR [rax],al
  440a94:	add    DWORD PTR [rdi],eax
  440a96:	add    al,0x0
  440a98:	(bad)  
  440a99:	rol    BYTE PTR [rbx],cl
  440a9b:	xor    BYTE PTR [rdx],al
  440a9d:	(bad)  
  440a9e:	add    DWORD PTR [rax+0x1],esi
  440aa1:	or     al,BYTE PTR [rsi]
  440aa3:	add    BYTE PTR [rdx],cl
  440aa5:	push   rdx
  440aa6:	(bad)  
  440aa7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40f0d
  440aad:	push   rax
  440aae:	add    al,al
  440ab0:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490ab8
  440ab6:	add    DWORD PTR [rax],esi
  440ab8:	add    DWORD PTR [rbx],edx
  440aba:	or     al,BYTE PTR [rax]
  440abc:	adc    eax,DWORD PTR [rcx]
  440abe:	cmp    DWORD PTR [rax],eax
  440ac0:	or     al,0x30
  440ac2:	or     esp,DWORD PTR [rax+0xa]
  440ac5:	jo     0x440ad0
  440ac7:	push   rax
  440ac8:	or     al,al
  440aca:	(bad)  
  440acb:	rol    BYTE PTR [rax+riz*8],1
  440ace:	add    dh,al
  440ad0:	add    DWORD PTR [rdi+rax*1],ecx
  440ad3:	add    BYTE PTR [rdx+rax*2],cl
  440ad6:	or     BYTE PTR [rax],dh
  440ad8:	(bad)  
  440ad9:	(bad)  
  440ada:	(bad)  
  440adb:	jo     0x440ae2
  440add:	push   rax
  440ade:	add    al,0xc0
  440ae0:	add    dl,al
  440ae2:	add    BYTE PTR [rax],al
  440ae4:	add    DWORD PTR [rbx],edx
  440ae6:	or     al,BYTE PTR [rax]
  440ae8:	adc    eax,DWORD PTR [rcx]
  440aea:	(bad)  
  440aeb:	add    BYTE PTR [rax+rsi*1],cl
  440aee:	or     esp,DWORD PTR [rax+0xa]
  440af1:	jo     0x440afc
  440af3:	push   rax
  440af4:	or     al,al
  440af6:	(bad)  
  440af7:	rol    BYTE PTR [rax+riz*8],1
  440afa:	add    dh,al
  440afc:	add    DWORD PTR [rip+0x52050002],eax        # 0x52490b04
  440b02:	add    DWORD PTR [rax],esi
  440b04:	add    DWORD PTR [rcx+rax*1],eax
  440b07:	add    BYTE PTR [rdx+rax*2],al
  440b0a:	add    BYTE PTR [rax],al
  440b0c:	add    DWORD PTR [rcx+rax*1],eax
  440b0f:	add    BYTE PTR [rdx+rax*2],al
  440b12:	add    BYTE PTR [rax],al
  440b14:	add    DWORD PTR [rsi],eax
  440b16:	add    eax,DWORD PTR [rax]
  440b18:	(bad)  
  440b19:	rex.X add sil,BYTE PTR [rax]
  440b1c:	add    DWORD PTR [rax+0x0],esp
  440b1f:	add    BYTE PTR [rcx],al
  440b21:	add    BYTE PTR [rax],al
  440b23:	add    BYTE PTR [rcx],al
  440b25:	add    BYTE PTR [rax],al
  440b27:	add    BYTE PTR [rcx],al
  440b29:	add    BYTE PTR [rax],al
  440b2b:	add    BYTE PTR [rcx],al
  440b2d:	or     al,BYTE PTR [rsi]
  440b2f:	add    BYTE PTR [rdx],cl
  440b31:	jb     0x440b39
  440b33:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b40f99
  440b39:	push   rax
  440b3a:	add    al,al
  440b3c:	add    DWORD PTR [rdx],ecx
  440b3e:	add    eax,0x6d20a05
  440b43:	add    eax,DWORD PTR [rbx]
  440b45:	xor    BYTE PTR [rdx],al
  440b47:	(bad)  
  440b48:	add    DWORD PTR [rax+0x0],edx
  440b4b:	add    BYTE PTR [rcx],al
  440b4d:	add    al,0x1
  440b4f:	add    BYTE PTR [rdx+rax*2],al
  440b52:	add    BYTE PTR [rax],al
  440b54:	add    DWORD PTR [rsi],eax
  440b56:	add    eax,DWORD PTR [rax]
  440b58:	(bad)  
  440b59:	rex.X add sil,BYTE PTR [rax]
  440b5c:	add    DWORD PTR [rax+0x0],esp
  440b5f:	add    BYTE PTR [rcx],al
  440b61:	add    BYTE PTR [rax],al
  440b63:	add    BYTE PTR [rcx],al
  440b65:	add    al,0x1
  440b67:	add    BYTE PTR [rdx+riz*4],al
  440b6a:	add    BYTE PTR [rax],al
  440b6c:	add    DWORD PTR [rax],eax
  440b6e:	add    BYTE PTR [rax],al
  440b70:	add    DWORD PTR [rsi],edx
  440b72:	or     DWORD PTR [rax],eax
  440b74:	(bad)  
  440b75:	mov    BYTE PTR [rsi],al
  440b77:	add    BYTE PTR [rax],dl
  440b79:	js     0x440b80
  440b7b:	add    BYTE PTR [rbx],cl
  440b7d:	push   0xffffffffe2060004
  440b82:	add    dh,BYTE PTR [rax]
  440b84:	add    DWORD PTR [rax+0x0],esp
  440b87:	add    BYTE PTR [rcx],al
  440b89:	add    BYTE PTR [rax],al
  440b8b:	add    BYTE PTR [rcx],al
  440b8d:	add    BYTE PTR [rax],al
  440b8f:	add    BYTE PTR [rcx],al
  440b91:	add    BYTE PTR [rax],al
  440b93:	add    BYTE PTR [rcx],al
  440b95:	(bad)  
  440b96:	add    eax,DWORD PTR [rax]
  440b98:	(bad)  
  440b99:	(bad)  
  440b9b:	xor    BYTE PTR [rcx],al
  440b9d:	(bad)  
  440b9e:	add    BYTE PTR [rax],al
  440ba0:	add    DWORD PTR [rdi+rax*1],ecx
  440ba3:	add    BYTE PTR [rdx+riz*4],cl
  440ba6:	or     BYTE PTR [rax],dh
  440ba8:	(bad)  
  440ba9:	(bad)  
  440baa:	(bad)  
  440bab:	jo     0x440bb2
  440bad:	push   rax
  440bae:	add    al,0xc0
  440bb0:	add    dl,al
  440bb2:	add    BYTE PTR [rax],al
  440bb4:	add    DWORD PTR [rcx],edx
  440bb6:	or     DWORD PTR [rip+0x30db211],eax        # 0x351bdcd
  440bbc:	or     dh,BYTE PTR [rax]
  440bbe:	or     DWORD PTR [rax+0x8],esp
  440bc1:	jo     0x440bca
  440bc3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2240f9a
  440bca:	add    BYTE PTR [rax],al
  440bcc:	add    DWORD PTR [rcx+rax*1],eax
  440bcf:	add    BYTE PTR [rdx+rax*2],al
  440bd2:	add    BYTE PTR [rax],al
  440bd4:	add    DWORD PTR [rdx],ecx
  440bd6:	(bad)  
  440bd7:	add    BYTE PTR [rdx],cl
  440bd9:	xor    al,BYTE PTR [rsi]
  440bdb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b41041
  440be1:	push   rax
  440be2:	add    al,al
  440be4:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490bec
  440bea:	add    DWORD PTR [rax],esi
  440bec:	add    DWORD PTR [rax],ecx
  440bee:	add    eax,0x4420800
  440bf3:	xor    BYTE PTR [rbx],al
  440bf5:	(bad)  
  440bf6:	add    dh,BYTE PTR [rax+0x1]
  440bf9:	push   rax
  440bfa:	add    BYTE PTR [rax],al
  440bfc:	add    DWORD PTR [rdi],eax
  440bfe:	add    al,0x0
  440c00:	(bad)  
  440c01:	xor    al,BYTE PTR [rbx]
  440c03:	xor    BYTE PTR [rdx],al
  440c05:	(bad)  
  440c06:	add    DWORD PTR [rax+0x1],esi
  440c09:	add    eax,0x32050002
  440c0e:	add    DWORD PTR [rax],esi
  440c10:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490c18
  440c16:	add    DWORD PTR [rax],esi
  440c18:	add    DWORD PTR [rax],eax
  440c1a:	add    BYTE PTR [rax],al
  440c1c:	add    DWORD PTR [rax],eax
  440c1e:	add    BYTE PTR [rax],al
  440c20:	add    DWORD PTR [rax],eax
  440c22:	add    BYTE PTR [rax],al
  440c24:	add    DWORD PTR [rdi],eax
  440c26:	add    al,0x0
  440c28:	(bad)  
  440c29:	xor    al,BYTE PTR [rbx]
  440c2b:	xor    BYTE PTR [rdx],al
  440c2d:	(bad)  
  440c2e:	add    DWORD PTR [rax+0x1],esi
  440c31:	(bad)  
  440c32:	add    eax,DWORD PTR [rax]
  440c34:	(bad)  
  440c35:	rex.X add sil,BYTE PTR [rax]
  440c38:	add    DWORD PTR [rax+0x0],esp
  440c3b:	add    BYTE PTR [rcx],al
  440c3d:	add    eax,0x32050002
  440c42:	add    DWORD PTR [rax],esi
  440c44:	add    DWORD PTR [rdi],eax
  440c46:	add    al,0x0
  440c48:	(bad)  
  440c49:	xor    al,BYTE PTR [rbx]
  440c4b:	xor    BYTE PTR [rdx],al
  440c4d:	(bad)  
  440c4e:	add    DWORD PTR [rax+0x1],esi
  440c51:	(bad)  
  440c52:	add    eax,DWORD PTR [rax]
  440c54:	(bad)  
  440c55:	rex.X add sil,BYTE PTR [rax]
  440c58:	add    DWORD PTR [rax+0x0],esp
  440c5b:	add    BYTE PTR [rcx],al
  440c5d:	(bad)  
  440c5e:	add    eax,DWORD PTR [rax]
  440c60:	(bad)  
  440c61:	rex.X add sil,BYTE PTR [rax]
  440c64:	add    DWORD PTR [rax+0x0],esp
  440c67:	add    BYTE PTR [rcx],al
  440c69:	or     BYTE PTR [rip+0x4420800],al        # 0x486146f
  440c6f:	xor    BYTE PTR [rbx],al
  440c71:	(bad)  
  440c72:	add    dh,BYTE PTR [rax+0x1]
  440c75:	push   rax
  440c76:	add    BYTE PTR [rax],al
  440c78:	add    DWORD PTR [rip+0x12050002],eax        # 0x12490c80
  440c7e:	add    DWORD PTR [rax],esi
  440c80:	add    DWORD PTR [rsi],ecx
  440c82:	add    eax,0x3780e00
  440c87:	add    BYTE PTR [rcx],cl
  440c89:	push   0xffffffff82040002
  440c8e:	add    BYTE PTR [rax],al
  440c90:	add    DWORD PTR [rcx+rax*1],eax
  440c93:	add    BYTE PTR [rdx+riz*2],al
  440c96:	add    BYTE PTR [rax],al
  440c98:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490ca0
  440c9e:	add    DWORD PTR [rax],esi
  440ca0:	add    DWORD PTR [rdi],eax
  440ca2:	add    al,0x0
  440ca4:	(bad)  
  440ca5:	xor    al,BYTE PTR [rbx]
  440ca7:	xor    BYTE PTR [rdx],al
  440ca9:	(bad)  
  440caa:	add    DWORD PTR [rax+0x1],esi
  440cad:	(bad)  
  440cae:	add    eax,DWORD PTR [rax]
  440cb0:	(bad)  
  440cb1:	(bad)  
  440cb3:	xor    BYTE PTR [rcx],al
  440cb5:	(bad)  
  440cb6:	add    BYTE PTR [rax],al
  440cb8:	add    DWORD PTR [rdx],ecx
  440cba:	(bad)  
  440cbb:	add    BYTE PTR [rdx],cl
  440cbd:	xor    al,BYTE PTR [rsi]
  440cbf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b41125
  440cc5:	push   rax
  440cc6:	add    al,al
  440cc8:	add    DWORD PTR [rcx+rax*1],eax
  440ccb:	add    BYTE PTR [rdx+rax*2],al
  440cce:	add    BYTE PTR [rax],al
  440cd0:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490cd8
  440cd6:	add    DWORD PTR [rax],esi
  440cd8:	add    DWORD PTR [rsi],eax
  440cda:	add    eax,DWORD PTR [rax]
  440cdc:	(bad)  
  440cdd:	rex.X add sil,BYTE PTR [rax]
  440ce0:	add    DWORD PTR [rax+0x0],esp
  440ce3:	add    BYTE PTR [rcx],al
  440ce5:	add    eax,0x32050002
  440cea:	add    DWORD PTR [rax],esi
  440cec:	add    DWORD PTR [rax+rdx*1],ebp
  440cef:	add    BYTE PTR [rax+rcx*4],ch
  440cf2:	adc    eax,0x14782300
  440cf7:	add    BYTE PTR [rbx],bl
  440cf9:	push   0x1130013
  440cfe:	sub    eax,0xb300c00
  440d03:	(bad)  
  440d04:	or     dh,BYTE PTR [rax+0x9]
  440d07:	push   rax
  440d08:	or     al,al
  440d0a:	(bad)  
  440d0b:	rol    BYTE PTR [rax+riz*8],1
  440d0e:	add    dh,al
  440d10:	add    DWORD PTR [rsi],ecx
  440d12:	add    eax,DWORD PTR [rax]
  440d14:	(bad)  
  440d15:	add    DWORD PTR [rax],ecx
  440d17:	add    al,BYTE PTR [rcx]
  440d19:	jo     0x440d1b
  440d1b:	add    BYTE PTR [rcx],al
  440d1d:	(bad)  
  440d1e:	add    eax,DWORD PTR [rax]
  440d20:	(bad)  
  440d21:	add    DWORD PTR [rax],ecx
  440d23:	add    al,BYTE PTR [rcx]
  440d25:	jo     0x440d27
  440d27:	add    BYTE PTR [rcx],al
  440d29:	(bad)  
  440d2a:	add    eax,DWORD PTR [rax]
  440d2c:	(bad)  
  440d2d:	(bad)  
  440d2f:	xor    BYTE PTR [rcx],al
  440d31:	(bad)  
  440d32:	add    BYTE PTR [rax],al
  440d34:	add    DWORD PTR [rsi],eax
  440d36:	add    eax,DWORD PTR [rax]
  440d38:	(bad)  
  440d39:	(bad)  
  440d3b:	xor    BYTE PTR [rcx],al
  440d3d:	(bad)  
  440d3e:	add    BYTE PTR [rax],al
  440d40:	add    DWORD PTR [rdx],ecx
  440d42:	add    al,0x0
  440d44:	or     ch,BYTE PTR [rax+0x7]
  440d47:	add    BYTE PTR [rip+0x13001f2],al        # 0x1740f3f
  440d4d:	add    al,0x1
  440d4f:	add    BYTE PTR [rdx+riz*4],al
  440d52:	add    BYTE PTR [rax],al
  440d54:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb2490d5c
  440d5a:	add    DWORD PTR [rax],esi
  440d5c:	add    DWORD PTR [rax],eax
  440d5e:	add    BYTE PTR [rax],al
  440d60:	add    DWORD PTR [rax],ecx
  440d62:	add    eax,0x4820800
  440d67:	xor    BYTE PTR [rbx],al
  440d69:	(bad)  
  440d6a:	add    dh,BYTE PTR [rax+0x1]
  440d6d:	push   rax
  440d6e:	add    BYTE PTR [rax],al
  440d70:	add    DWORD PTR [rax],ecx
  440d72:	add    eax,0x4a20800
  440d77:	xor    BYTE PTR [rbx],al
  440d79:	(bad)  
  440d7a:	add    dh,BYTE PTR [rax+0x1]
  440d7d:	push   rax
  440d7e:	add    BYTE PTR [rax],al
  440d80:	add    DWORD PTR [rax],edx
  440d82:	or     DWORD PTR [rax],eax
  440d84:	adc    BYTE PTR [rdx+0x600b300c],al
  440d8a:	or     dh,BYTE PTR [rax+0x9]
  440d8d:	push   rax
  440d8e:	or     al,al
  440d90:	(bad)  
  440d91:	rol    BYTE PTR [rax+riz*8],1
  440d94:	add    dh,al
  440d96:	add    BYTE PTR [rax],al
  440d98:	add    DWORD PTR [rax],ecx
  440d9a:	add    eax,0x4820800
  440d9f:	xor    BYTE PTR [rbx],al
  440da1:	(bad)  
  440da2:	add    dh,BYTE PTR [rax+0x1]
  440da5:	push   rax
  440da6:	add    BYTE PTR [rax],al
  440da8:	add    DWORD PTR [rax],edx
  440daa:	or     DWORD PTR [rax],eax
  440dac:	adc    BYTE PTR [rdx+0xc],al
  440daf:	xor    BYTE PTR [rbx],cl
  440db1:	(bad)  
  440db2:	or     dh,BYTE PTR [rax+0x9]
  440db5:	push   rax
  440db6:	or     al,al
  440db8:	(bad)  
  440db9:	rol    BYTE PTR [rax+riz*8],1
  440dbc:	add    dh,al
  440dbe:	add    BYTE PTR [rax],al
  440dc0:	add    DWORD PTR [rax],edx
  440dc2:	or     DWORD PTR [rax],eax
  440dc4:	adc    BYTE PTR [rdx+0xc],al
  440dc7:	xor    BYTE PTR [rbx],cl
  440dc9:	(bad)  
  440dca:	or     dh,BYTE PTR [rax+0x9]
  440dcd:	push   rax
  440dce:	or     al,al
  440dd0:	(bad)  
  440dd1:	rol    BYTE PTR [rax+riz*8],1
  440dd4:	add    dh,al
  440dd6:	add    BYTE PTR [rax],al
  440dd8:	add    DWORD PTR [rcx+rax*1],eax
  440ddb:	add    BYTE PTR [rdx+riz*4],al
  440dde:	add    BYTE PTR [rax],al
  440de0:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490de8
  440de6:	add    DWORD PTR [rax],esi
  440de8:	add    DWORD PTR [rsi],ecx
  440dea:	or     BYTE PTR [rax],al
  440dec:	(bad)  
  440ded:	jb     0x440df9
  440def:	xor    BYTE PTR [rcx],cl
  440df1:	(bad)  
  440df2:	or     BYTE PTR [rax+0x7],dh
  440df5:	push   rax
  440df6:	(bad)  
  440df7:	rol    BYTE PTR [rax+rdx*8],0x2
  440dfb:	loopne 0x440dfe
  440dfd:	(bad)  
  440dfe:	add    al,0x0
  440e00:	(bad)  
  440e01:	xor    al,BYTE PTR [rbx]
  440e03:	xor    BYTE PTR [rdx],al
  440e05:	(bad)  
  440e06:	add    DWORD PTR [rax+0x1],esi
  440e09:	add    al,0x1
  440e0b:	add    BYTE PTR [rdx+riz*2],al
  440e0e:	add    BYTE PTR [rax],al
  440e10:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x5251131d
  440e16:	or     DWORD PTR [rbx],eax
  440e18:	(bad)  
  440e19:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b4127f
  440e1f:	rol    BYTE PTR [rcx],0x50
  440e22:	add    BYTE PTR [rax],al
  440e24:	add    DWORD PTR [rdx],ecx
  440e26:	(bad)  
  440e27:	add    BYTE PTR [rdx],cl
  440e29:	xor    al,BYTE PTR [rsi]
  440e2b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b41291
  440e31:	push   rax
  440e32:	add    al,al
  440e34:	add    DWORD PTR [rsi],eax
  440e36:	add    eax,DWORD PTR [rax]
  440e38:	(bad)  
  440e39:	ret    0x3002
  440e3c:	add    DWORD PTR [rax+0x0],esp
  440e3f:	add    BYTE PTR [rcx],al
  440e41:	adc    al,0x8
  440e43:	test   DWORD PTR [rbx+rax*1],edx
  440e46:	or     al,0x42
  440e48:	or     BYTE PTR [rax],dh
  440e4a:	(bad)  
  440e4b:	(bad)  
  440e4c:	(bad)  
  440e4d:	jo     0x440e54
  440e4f:	rol    BYTE PTR [rbx],0xd0
  440e52:	add    DWORD PTR [rax+0x1],edx
  440e55:	(bad)  
  440e56:	add    al,0x0
  440e58:	(bad)  
  440e59:	xor    al,BYTE PTR [rbx]
  440e5b:	xor    BYTE PTR [rdx],al
  440e5d:	(bad)  
  440e5e:	add    DWORD PTR [rax+0x1],esi
  440e61:	(bad)  
  440e62:	add    eax,DWORD PTR [rax]
  440e64:	(bad)  
  440e65:	ret    0x3002
  440e68:	add    DWORD PTR [rax+0x0],esp
  440e6b:	add    BYTE PTR [rcx],al
  440e6d:	(bad)  
  440e6e:	add    eax,DWORD PTR [rax]
  440e70:	(bad)  
  440e71:	loop   0x440e75
  440e73:	xor    BYTE PTR [rcx],al
  440e75:	(bad)  
  440e76:	add    BYTE PTR [rax],al
  440e78:	add    DWORD PTR [rcx],edx
  440e7a:	or     DWORD PTR [rip+0x30d3211],eax        # 0x3514091
  440e80:	or     dh,BYTE PTR [rax]
  440e82:	or     DWORD PTR [rax+0x8],esp
  440e85:	jo     0x440e8e
  440e87:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x224125e
  440e8e:	add    BYTE PTR [rax],al
  440e90:	add    DWORD PTR [rdi+rax*1],ecx
  440e93:	add    BYTE PTR [rdx+rax*8],cl
  440e96:	or     BYTE PTR [rax],dh
  440e98:	(bad)  
  440e99:	(bad)  
  440e9a:	(bad)  
  440e9b:	jo     0x440ea2
  440e9d:	push   rax
  440e9e:	add    al,0xc0
  440ea0:	add    dl,al
  440ea2:	add    BYTE PTR [rax],al
  440ea4:	add    DWORD PTR [rbx],edx
  440ea6:	or     al,BYTE PTR [rax]
  440ea8:	adc    eax,DWORD PTR [rcx]
  440eaa:	(bad)  
  440eab:	add    BYTE PTR [rax+rsi*1],cl
  440eae:	or     esp,DWORD PTR [rax+0xa]
  440eb1:	jo     0x440ebc
  440eb3:	push   rax
  440eb4:	or     al,al
  440eb6:	(bad)  
  440eb7:	rol    BYTE PTR [rax+riz*8],1
  440eba:	add    dh,al
  440ebc:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490ec4
  440ec2:	add    DWORD PTR [rax],esi
  440ec4:	add    DWORD PTR [rsi],eax
  440ec6:	add    eax,DWORD PTR [rax]
  440ec8:	(bad)  
  440ec9:	rex.X add sil,BYTE PTR [rax]
  440ecc:	add    DWORD PTR [rax+0x0],esp
  440ecf:	add    BYTE PTR [rcx],al
  440ed1:	add    BYTE PTR [rax],al
  440ed3:	add    BYTE PTR [rcx],al
  440ed5:	adc    BYTE PTR [rcx],cl
  440ed7:	add    BYTE PTR [rax],dl
  440ed9:	(bad)  
  440eda:	or     al,0x30
  440edc:	or     esp,DWORD PTR [rax+0xa]
  440edf:	jo     0x440eea
  440ee1:	push   rax
  440ee2:	or     al,al
  440ee4:	(bad)  
  440ee5:	rol    BYTE PTR [rax+riz*8],1
  440ee8:	add    dh,al
  440eea:	add    BYTE PTR [rax],al
  440eec:	add    DWORD PTR [rbx],ebx
  440eee:	or     al,0x0
  440ef0:	sbb    ebp,DWORD PTR [rax+0xa]
  440ef3:	add    BYTE PTR [rbx],dl
  440ef5:	add    DWORD PTR [rdi],edx
  440ef7:	add    BYTE PTR [rax+rsi*1],cl
  440efa:	or     esp,DWORD PTR [rax+0xa]
  440efd:	jo     0x440f08
  440eff:	push   rax
  440f00:	or     al,al
  440f02:	(bad)  
  440f03:	rol    BYTE PTR [rax+riz*8],1
  440f06:	add    dh,al
  440f08:	add    DWORD PTR [rsp+rax*1],eax
  440f0b:	add    BYTE PTR [rax+rsi*1],al
  440f0e:	add    esp,DWORD PTR [rax+0x2]
  440f11:	jo     0x440f14
  440f13:	push   rax
  440f14:	add    DWORD PTR [rax],eax
  440f16:	add    BYTE PTR [rax],al
  440f18:	add    DWORD PTR [rsi],eax
  440f1a:	add    eax,DWORD PTR [rax]
  440f1c:	(bad)  
  440f1d:	rex.X add sil,BYTE PTR [rax]
  440f20:	add    DWORD PTR [rax+0x0],esp
  440f23:	add    BYTE PTR [rcx],al
  440f25:	add    eax,0x32050002
  440f2a:	add    DWORD PTR [rax],esi
  440f2c:	add    DWORD PTR [rdi],eax
  440f2e:	add    al,0x0
  440f30:	(bad)  
  440f31:	xor    al,BYTE PTR [rbx]
  440f33:	xor    BYTE PTR [rdx],al
  440f35:	(bad)  
  440f36:	add    DWORD PTR [rax+0x1],esi
  440f39:	add    eax,0x32050002
  440f3e:	add    DWORD PTR [rax],esi
  440f40:	add    DWORD PTR [rax],ecx
  440f42:	add    eax,0x4420800
  440f47:	xor    BYTE PTR [rbx],al
  440f49:	(bad)  
  440f4a:	add    dh,BYTE PTR [rax+0x1]
  440f4d:	push   rax
  440f4e:	add    BYTE PTR [rax],al
  440f50:	add    DWORD PTR [rip+0x32050002],eax        # 0x32490f58
  440f56:	add    DWORD PTR [rax],esi
  440f58:	add    DWORD PTR [rsi],ecx
  440f5a:	or     BYTE PTR [rax],al
  440f5c:	(bad)  
  440f5d:	xor    cl,BYTE PTR [rdx]
  440f5f:	xor    BYTE PTR [rcx],cl
  440f61:	(bad)  
  440f62:	or     BYTE PTR [rax+0x7],dh
  440f65:	push   rax
  440f66:	(bad)  
  440f67:	rol    BYTE PTR [rax+rdx*8],0x2
  440f6b:	loopne 0x440f6e
  440f6d:	or     BYTE PTR [rip+0x4420800],al        # 0x4861773
  440f73:	xor    BYTE PTR [rbx],al
  440f75:	(bad)  
  440f76:	add    dh,BYTE PTR [rax+0x1]
  440f79:	push   rax
  440f7a:	add    BYTE PTR [rax],al
  440f7c:	add    DWORD PTR [rdi+rax*1],ecx
  440f7f:	add    BYTE PTR [rdx+rax*2],cl
  440f82:	or     BYTE PTR [rax],dh
  440f84:	(bad)  
  440f85:	(bad)  
  440f86:	(bad)  
  440f87:	jo     0x440f8e
  440f89:	push   rax
  440f8a:	add    al,0xc0
  440f8c:	add    dl,al
  440f8e:	add    BYTE PTR [rax],al
  440f90:	add    DWORD PTR [rax],eax
  440f92:	add    BYTE PTR [rax],al
  440f94:	add    DWORD PTR [rdi],eax
  440f96:	add    al,0x0
  440f98:	(bad)  
  440f99:	xor    al,BYTE PTR [rbx]
  440f9b:	xor    BYTE PTR [rdx],al
  440f9d:	(bad)  
  440f9e:	add    DWORD PTR [rax+0x1],esi
  440fa1:	(bad)  
  440fa2:	add    eax,DWORD PTR [rax]
  440fa4:	(bad)  
  440fa5:	and    al,BYTE PTR [rdx]
  440fa7:	xor    BYTE PTR [rcx],al
  440fa9:	(bad)  
  440faa:	add    BYTE PTR [rax],al
  440fac:	add    DWORD PTR [rdi],eax
  440fae:	add    al,0x0
  440fb0:	(bad)  
  440fb1:	xor    al,BYTE PTR [rbx]
  440fb3:	xor    BYTE PTR [rdx],al
  440fb5:	(bad)  
  440fb6:	add    DWORD PTR [rax+0x1],esi
  440fb9:	add    BYTE PTR [rax],al
  440fbb:	add    BYTE PTR [rcx],al
  440fbd:	(bad)  
  440fbe:	add    eax,DWORD PTR [rax]
  440fc0:	(bad)  
  440fc1:	rex.X add sil,BYTE PTR [rax]
  440fc4:	add    DWORD PTR [rax+0x0],esp
  440fc7:	add    BYTE PTR [rcx],al
  440fc9:	adc    BYTE PTR [rcx],cl
  440fcb:	add    BYTE PTR [rax],dl
  440fcd:	(bad)  
  440fce:	or     al,0x30
  440fd0:	or     esp,DWORD PTR [rax+0xa]
  440fd3:	jo     0x440fde
  440fd5:	push   rax
  440fd6:	or     al,al
  440fd8:	(bad)  
  440fd9:	rol    BYTE PTR [rax+riz*8],1
  440fdc:	add    dh,al
  440fde:	add    BYTE PTR [rax],al
  440fe0:	add    DWORD PTR [rax],eax
  440fe2:	add    BYTE PTR [rax],al
  440fe4:	add    DWORD PTR [rip+0x52050002],eax        # 0x52490fec
  440fea:	add    DWORD PTR [rax],esi
  440fec:	add    DWORD PTR [rdi+0x16],eax
  440fef:	add    BYTE PTR [rdi-0x48],al
  440ff2:	adc    al,BYTE PTR [rax]
  440ff4:	ds test al,0x11
  440ff7:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c442095
  440ffd:	mov    BYTE PTR [rdi],cl
  440fff:	add    BYTE PTR [rbx],ah
  441001:	js     0x441011
  441003:	add    BYTE PTR [rbx],bl
  441005:	push   0x113000d
  44100a:	(bad)  
  44100b:	add    BYTE PTR [rax+rsi*1],cl
  44100e:	or     esp,DWORD PTR [rax+0xa]
  441011:	jo     0x44101c
  441013:	push   rax
  441014:	or     al,al
  441016:	(bad)  
  441017:	rol    BYTE PTR [rax+riz*8],1
  44101a:	add    dh,al
  44101c:	add    DWORD PTR [rdi+rax*1],ecx
  44101f:	add    BYTE PTR [rdx+rax*2],cl
  441022:	or     BYTE PTR [rax],dh
  441024:	(bad)  
  441025:	(bad)  
  441026:	(bad)  
  441027:	jo     0x44102e
  441029:	push   rax
  44102a:	add    al,0xc0
  44102c:	add    dl,al
  44102e:	add    BYTE PTR [rax],al
  441030:	add    DWORD PTR [rcx+rax*1],eax
  441033:	add    BYTE PTR [rdx+riz*4],al
  441036:	add    BYTE PTR [rax],al
  441038:	add    DWORD PTR [rdi],eax
  44103a:	add    al,0x0
  44103c:	(bad)  
  44103d:	push   rdx
  44103e:	add    esi,DWORD PTR [rax]
  441040:	add    ah,BYTE PTR [rax+0x1]
  441043:	jo     0x441046
  441045:	(bad)  
  441046:	or     BYTE PTR [rax],al
  441048:	(bad)  
  441049:	push   rdx
  44104a:	or     dh,BYTE PTR [rax]
  44104c:	or     DWORD PTR [rax+0x8],esp
  44104f:	jo     0x441058
  441051:	push   rax
  441052:	(bad)  
  441053:	rol    BYTE PTR [rax+rdx*8],0x2
  441057:	loopne 0x44105a
  441059:	adc    BYTE PTR [rcx],cl
  44105b:	add    BYTE PTR [rax],dl
  44105d:	rex.X or al,0x30
  441060:	or     esp,DWORD PTR [rax+0xa]
  441063:	jo     0x44106e
  441065:	push   rax
  441066:	or     al,al
  441068:	(bad)  
  441069:	rol    BYTE PTR [rax+riz*8],1
  44106c:	add    dh,al
  44106e:	add    BYTE PTR [rax],al
  441070:	add    DWORD PTR [rax],eax
  441072:	add    BYTE PTR [rax],al
  441074:	add    DWORD PTR [rax],edx
  441076:	or     DWORD PTR [rax],eax
  441078:	adc    BYTE PTR [rdx+0x600b300c],al
  44107e:	or     dh,BYTE PTR [rax+0x9]
  441081:	push   rax
  441082:	or     al,al
  441084:	(bad)  
  441085:	rol    BYTE PTR [rax+riz*8],1
  441088:	add    dh,al
  44108a:	add    BYTE PTR [rax],al
  44108c:	add    DWORD PTR [rdi+rax*1],ecx
  44108f:	add    BYTE PTR [rdx+rax*2],cl
  441092:	or     BYTE PTR [rax],dh
  441094:	(bad)  
  441095:	(bad)  
  441096:	(bad)  
  441097:	jo     0x44109e
  441099:	push   rax
  44109a:	add    al,0xc0
  44109c:	add    dl,al
  44109e:	add    BYTE PTR [rax],al
  4410a0:	add    DWORD PTR [rsi+rax*1],ecx
  4410a3:	add    BYTE PTR [rax+rbp*2],cl
  4410a6:	add    al,0x0
  4410a8:	(bad)  
  4410a9:	xchg   edx,eax
  4410aa:	add    esi,DWORD PTR [rax]
  4410ac:	add    ah,BYTE PTR [rax+0x1]
  4410af:	jo     0x4410b2
  4410b1:	add    BYTE PTR [rax],al
  4410b3:	add    BYTE PTR [rcx],al
  4410b5:	add    BYTE PTR [rax],al
  4410b7:	add    BYTE PTR [rcx],al
  4410b9:	add    BYTE PTR [rax],al
  4410bb:	add    BYTE PTR [rcx],al
  4410bd:	add    BYTE PTR [rax],al
  4410bf:	add    BYTE PTR [rcx],al
  4410c1:	add    BYTE PTR [rax],al
  4410c3:	add    BYTE PTR [rcx],al
  4410c5:	add    BYTE PTR [rax],al
  4410c7:	add    BYTE PTR [rcx],al
  4410c9:	add    BYTE PTR [rax],al
  4410cb:	add    BYTE PTR [rcx],al
  4410cd:	add    eax,0x32050002
  4410d2:	add    DWORD PTR [rax],esi
  4410d4:	add    DWORD PTR [rcx+rax*1],eax
  4410d7:	add    BYTE PTR [rdx+rax*2],al
  4410da:	add    BYTE PTR [rax],al
  4410dc:	add    DWORD PTR [rax],eax
  4410de:	add    BYTE PTR [rax],al
  4410e0:	add    DWORD PTR [rax],eax
  4410e2:	add    BYTE PTR [rax],al
  4410e4:	add    DWORD PTR [rsi],eax
  4410e6:	add    eax,DWORD PTR [rax]
  4410e8:	(bad)  
  4410e9:	rex.X add sil,BYTE PTR [rax]
  4410ec:	add    DWORD PTR [rax+0x0],esp
  4410ef:	add    BYTE PTR [rcx],al
  4410f1:	add    eax,0x32050002
  4410f6:	add    DWORD PTR [rax],esi
  4410f8:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000442000 <.bss>:
	...

Disassembly of section .idata:

0000000000444000 <.idata>:
  444000:	rex
  444001:	rex.B add al,0x0
	...
  44400c:	add    al,0x7a
  44400e:	add    al,0x0
  444010:	loopne 0x44405f
  444012:	add    al,0x0
  444014:	mov    BYTE PTR [rdx+0x4],al
	...
  44401f:	add    BYTE PTR [rbx+rdi*2],bh
  444022:	add    al,0x0
  444024:	sub    BYTE PTR [rdi+0x4],cl
  444027:	add    al,ah
  444029:	rex.R add al,0x0
	...
  444034:	rex.WR jnp 0x44403b
  444037:	add    BYTE PTR [rax-0xffffbaf],al
  44403d:	rex.R add al,0x0
	...
  444048:	pop    rsp
  444049:	jnp    0x44404f
  44404b:	add    BYTE PTR [rax+0x451],dl
  444051:	rex.RB add al,0x0
	...
  44405c:	ins    BYTE PTR es:[rdi],dx
  44405d:	jnp    0x444063
  44405f:	add    BYTE PTR [rax+0x10000451],ah
  444065:	rex.RB add al,0x0
	...
  444070:	jl     0x4440ed
  444072:	add    al,0x0
  444074:	mov    al,0x51
  444076:	add    al,0x0
  444078:	and    BYTE PTR [rbp+0x4],al
	...
  444083:	add    BYTE PTR [rax+0x7c],dl
  444086:	add    al,0x0
  444088:	rcl    BYTE PTR [rcx+0x4],0x0
  44408c:	mov    eax,0x446
  444091:	add    BYTE PTR [rax],al
  444093:	add    BYTE PTR [rax],al
  444095:	add    BYTE PTR [rax],al
  444097:	add    BYTE PTR [rax+0x5800047c],cl
  44409d:	push   rbx
  44409e:	add    al,0x0
  4440a0:	adc    BYTE PTR [rdi+0x4],al
	...
  4440ab:	add    BYTE PTR [rdi*2+0x53b00004],cl
  4440b2:	add    al,0x0
  4440b4:	add    BYTE PTR [rax+0x4],cl
	...
  4440bf:	add    BYTE PTR [rax],al
  4440c1:	jle    0x4440c7
  4440c3:	add    BYTE PTR [rax-0x2ffffbac],ah
  4440c9:	rex.WB add al,0x0
	...
  4440d4:	sbb    al,0x7e
  4440d6:	add    al,0x0
  4440d8:	jo     0x444130
  4440da:	add    al,0x0
  4440dc:	lock rex.WB add al,0x0
	...
  4440e8:	loopne 0x444169
  4440ea:	add    al,0x0
  4440ec:	nop
  4440ed:	push   rsi
  4440ee:	add    al,0x0
  4440f0:	pop    rax
  4440f1:	rex.WRB add al,0x0
	...
  4440fc:	clc    
  4440fd:	jg     0x444103
  4440ff:	add    al,bh
  444101:	pop    rcx
  444102:	add    al,0x0
  444104:	jo     0x444153
  444106:	add    al,0x0
	...
  444110:	sbb    al,0x80
  444112:	add    al,0x0
  444114:	adc    BYTE PTR [rdx+0x4],bl
  444117:	add    BYTE PTR [rax+0x44d],ah
  44411d:	add    BYTE PTR [rax],al
  44411f:	add    BYTE PTR [rax],al
  444121:	add    BYTE PTR [rax],al
  444123:	add    BYTE PTR [rax+rax*4+0x4],cl
  444127:	add    BYTE PTR [rax+0x5a],al
  44412a:	add    al,0x0
	...
  444140:	sbb    BYTE PTR [rdx+0x4],0x0
  444144:	add    BYTE PTR [rax],al
  444146:	add    BYTE PTR [rax],al
  444148:	cwde   
  444149:	pop    rdx
  44414a:	add    al,0x0
  44414c:	add    BYTE PTR [rax],al
  44414e:	add    BYTE PTR [rax],al
  444150:	mov    al,0x5a
  444152:	add    al,0x0
  444154:	add    BYTE PTR [rax],al
  444156:	add    BYTE PTR [rax],al
  444158:	mov    esi,0x45a
  44415d:	add    BYTE PTR [rax],al
  44415f:	add    al,dl
  444161:	pop    rdx
  444162:	add    al,0x0
  444164:	add    BYTE PTR [rax],al
  444166:	add    BYTE PTR [rax],al
  444168:	loop   0x4441c4
  44416a:	add    al,0x0
  44416c:	add    BYTE PTR [rax],al
  44416e:	add    BYTE PTR [rax],al
  444170:	neg    BYTE PTR [rdx+0x4]
  444173:	add    BYTE PTR [rax],al
  444175:	add    BYTE PTR [rax],al
  444177:	add    BYTE PTR [rbx+rbx*2],cl
  44417a:	add    al,0x0
  44417c:	add    BYTE PTR [rax],al
  44417e:	add    BYTE PTR [rax],al
  444180:	and    bl,BYTE PTR [rbx+0x4]
  444183:	add    BYTE PTR [rax],al
  444185:	add    BYTE PTR [rax],al
  444187:	add    BYTE PTR [rdx],dh
  444189:	pop    rbx
  44418a:	add    al,0x0
  44418c:	add    BYTE PTR [rax],al
  44418e:	add    BYTE PTR [rax],al
  444190:	rex.W pop rbx
  444192:	add    al,0x0
  444194:	add    BYTE PTR [rax],al
  444196:	add    BYTE PTR [rax],al
  444198:	pop    rsp
  444199:	pop    rbx
  44419a:	add    al,0x0
  44419c:	add    BYTE PTR [rax],al
  44419e:	add    BYTE PTR [rax],al
  4441a0:	jo     0x4441fd
  4441a2:	add    al,0x0
  4441a4:	add    BYTE PTR [rax],al
  4441a6:	add    BYTE PTR [rax],al
  4441a8:	(bad)  
  4441a9:	pop    rbx
  4441aa:	add    al,0x0
  4441ac:	add    BYTE PTR [rax],al
  4441ae:	add    BYTE PTR [rax],al
  4441b0:	xchg   esp,eax
  4441b1:	pop    rbx
  4441b2:	add    al,0x0
  4441b4:	add    BYTE PTR [rax],al
  4441b6:	add    BYTE PTR [rax],al
  4441b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4441b9:	pop    rbx
  4441ba:	add    al,0x0
  4441bc:	add    BYTE PTR [rax],al
  4441be:	add    BYTE PTR [rax],al
  4441c0:	mov    dh,0x5b
  4441c2:	add    al,0x0
  4441c4:	add    BYTE PTR [rax],al
  4441c6:	add    BYTE PTR [rax],al
  4441c8:	rcr    BYTE PTR [rbx+0x4],1
  4441cb:	add    BYTE PTR [rax],al
  4441cd:	add    BYTE PTR [rax],al
  4441cf:	add    al,ah
  4441d1:	pop    rbx
  4441d2:	add    al,0x0
  4441d4:	add    BYTE PTR [rax],al
  4441d6:	add    BYTE PTR [rax],al
  4441d8:	cld    
  4441d9:	pop    rbx
  4441da:	add    al,0x0
  4441dc:	add    BYTE PTR [rax],al
  4441de:	add    BYTE PTR [rax],al
  4441e0:	adc    BYTE PTR [rsp+rax*1+0x0],bl
  4441e4:	add    BYTE PTR [rax],al
  4441e6:	add    BYTE PTR [rax],al
  4441e8:	sub    BYTE PTR [rsp+rax*1+0x0],bl
  4441ec:	add    BYTE PTR [rax],al
  4441ee:	add    BYTE PTR [rax],al
  4441f0:	cmp    BYTE PTR [rsp+rax*1+0x0],bl
  4441f4:	add    BYTE PTR [rax],al
  4441f6:	add    BYTE PTR [rax],al
  4441f8:	rex.R pop rsp
  4441fa:	add    al,0x0
  4441fc:	add    BYTE PTR [rax],al
  4441fe:	add    BYTE PTR [rax],al
  444200:	pop    rdx
  444201:	pop    rsp
  444202:	add    al,0x0
  444204:	add    BYTE PTR [rax],al
  444206:	add    BYTE PTR [rax],al
  444208:	push   0x5c
  44420a:	add    al,0x0
  44420c:	add    BYTE PTR [rax],al
  44420e:	add    BYTE PTR [rax],al
  444210:	test   BYTE PTR [rsp+rax*1+0x0],bl
  444214:	add    BYTE PTR [rax],al
  444216:	add    BYTE PTR [rax],al
  444218:	(bad)  
  444219:	pop    rsp
  44421a:	add    al,0x0
  44421c:	add    BYTE PTR [rax],al
  44421e:	add    BYTE PTR [rax],al
  444220:	scas   al,BYTE PTR es:[rdi]
  444221:	pop    rsp
  444222:	add    al,0x0
  444224:	add    BYTE PTR [rax],al
  444226:	add    BYTE PTR [rax],al
  444228:	enter  0x45c,0x0
  44422c:	add    BYTE PTR [rax],al
  44422e:	add    BYTE PTR [rax],al
  444230:	fcomp  QWORD PTR [rsp+rax*1+0x0]
  444234:	add    BYTE PTR [rax],al
  444236:	add    BYTE PTR [rax],al
  444238:	hlt    
  444239:	pop    rsp
  44423a:	add    al,0x0
  44423c:	add    BYTE PTR [rax],al
  44423e:	add    BYTE PTR [rax],al
  444240:	or     BYTE PTR [rbp+0x4],bl
  444243:	add    BYTE PTR [rax],al
  444245:	add    BYTE PTR [rax],al
  444247:	add    BYTE PTR [rsi],ah
  444249:	pop    rbp
  44424a:	add    al,0x0
  44424c:	add    BYTE PTR [rax],al
  44424e:	add    BYTE PTR [rax],al
  444250:	cs pop rbp
  444252:	add    al,0x0
  444254:	add    BYTE PTR [rax],al
  444256:	add    BYTE PTR [rax],al
  444258:	rex.X pop rbp
  44425a:	add    al,0x0
  44425c:	add    BYTE PTR [rax],al
  44425e:	add    BYTE PTR [rax],al
  444260:	push   rax
  444261:	pop    rbp
  444262:	add    al,0x0
  444264:	add    BYTE PTR [rax],al
  444266:	add    BYTE PTR [rax],al
  444268:	ins    BYTE PTR es:[rdi],dx
  444269:	pop    rbp
  44426a:	add    al,0x0
  44426c:	add    BYTE PTR [rax],al
  44426e:	add    BYTE PTR [rax],al
  444270:	jle    0x4442cf
  444272:	add    al,0x0
  444274:	add    BYTE PTR [rax],al
  444276:	add    BYTE PTR [rax],al
  444278:	mov    ds,WORD PTR [rbp+0x4]
	...
  444287:	add    BYTE PTR [rbp+rbx*2+0x4],ah
  44428e:	add    BYTE PTR [rax],al
  444290:	mov    esp,0x45d
  444295:	add    BYTE PTR [rax],al
  444297:	add    dl,dl
  444299:	pop    rbp
  44429a:	add    al,0x0
  44429c:	add    BYTE PTR [rax],al
  44429e:	add    BYTE PTR [rax],al
  4442a0:	loopne 0x4442ff
  4442a2:	add    al,0x0
  4442a4:	add    BYTE PTR [rax],al
  4442a6:	add    BYTE PTR [rax],al
  4442a8:	lock pop rbp
  4442aa:	add    al,0x0
  4442ac:	add    BYTE PTR [rax],al
  4442ae:	add    BYTE PTR [rax],al
  4442b0:	cld    
  4442b1:	pop    rbp
  4442b2:	add    al,0x0
  4442b4:	add    BYTE PTR [rax],al
  4442b6:	add    BYTE PTR [rax],al
  4442b8:	or     bl,BYTE PTR [rsi+0x4]
  4442bb:	add    BYTE PTR [rax],al
  4442bd:	add    BYTE PTR [rax],al
  4442bf:	add    BYTE PTR [rdx],bl
  4442c1:	pop    rsi
  4442c2:	add    al,0x0
  4442c4:	add    BYTE PTR [rax],al
  4442c6:	add    BYTE PTR [rax],al
  4442c8:	sub    bl,BYTE PTR [rsi+0x4]
  4442cb:	add    BYTE PTR [rax],al
  4442cd:	add    BYTE PTR [rax],al
  4442cf:	add    BYTE PTR [rsi+rbx*2],bh
  4442d2:	add    al,0x0
  4442d4:	add    BYTE PTR [rax],al
  4442d6:	add    BYTE PTR [rax],al
  4442d8:	push   rax
  4442d9:	pop    rsi
  4442da:	add    al,0x0
  4442dc:	add    BYTE PTR [rax],al
  4442de:	add    BYTE PTR [rax],al
  4442e0:	pop    rdx
  4442e1:	pop    rsi
  4442e2:	add    al,0x0
  4442e4:	add    BYTE PTR [rax],al
  4442e6:	add    BYTE PTR [rax],al
  4442e8:	push   0x45e
  4442ed:	add    BYTE PTR [rax],al
  4442ef:	add    BYTE PTR [rdx+0x5e],dh
  4442f2:	add    al,0x0
  4442f4:	add    BYTE PTR [rax],al
  4442f6:	add    BYTE PTR [rax],al
  4442f8:	jl     0x444358
  4442fa:	add    al,0x0
  4442fc:	add    BYTE PTR [rax],al
  4442fe:	add    BYTE PTR [rax],al
  444300:	xchg   BYTE PTR [rsi+0x4],bl
  444303:	add    BYTE PTR [rax],al
  444305:	add    BYTE PTR [rax],al
  444307:	add    BYTE PTR [rdx+0x45e],dl
  44430d:	add    BYTE PTR [rax],al
  44430f:	add    BYTE PTR [rsi+0x45e],bl
  444315:	add    BYTE PTR [rax],al
  444317:	add    BYTE PTR [rsi+0x45e],ch
  44431d:	add    BYTE PTR [rax],al
  44431f:	add    BYTE PTR [rsi+0x45e],dh
  444325:	add    BYTE PTR [rax],al
  444327:	add    al,al
  444329:	pop    rsi
  44432a:	add    al,0x0
  44432c:	add    BYTE PTR [rax],al
  44432e:	add    BYTE PTR [rax],al
  444330:	retf   0x45e
  444333:	add    BYTE PTR [rax],al
  444335:	add    BYTE PTR [rax],al
  444337:	add    ah,dl
  444339:	pop    rsi
  44433a:	add    al,0x0
  44433c:	add    BYTE PTR [rax],al
  44433e:	add    BYTE PTR [rax],al
  444340:	fcomp  QWORD PTR [rsi+0x4]
  444343:	add    BYTE PTR [rax],al
  444345:	add    BYTE PTR [rax],al
  444347:	add    ah,ah
  444349:	pop    rsi
  44434a:	add    al,0x0
  44434c:	add    BYTE PTR [rax],al
  44434e:	add    BYTE PTR [rax],al
  444350:	out    dx,al
  444351:	pop    rsi
  444352:	add    al,0x0
  444354:	add    BYTE PTR [rax],al
  444356:	add    BYTE PTR [rax],al
  444358:	neg    BYTE PTR [rsi+0x4]
  44435b:	add    BYTE PTR [rax],al
  44435d:	add    BYTE PTR [rax],al
  44435f:	add    BYTE PTR [rax],al
  444361:	pop    rdi
  444362:	add    al,0x0
  444364:	add    BYTE PTR [rax],al
  444366:	add    BYTE PTR [rax],al
  444368:	or     bl,BYTE PTR [rdi+0x4]
  44436b:	add    BYTE PTR [rax],al
  44436d:	add    BYTE PTR [rax],al
  44436f:	add    BYTE PTR [rdx],dl
  444371:	pop    rdi
  444372:	add    al,0x0
  444374:	add    BYTE PTR [rax],al
  444376:	add    BYTE PTR [rax],al
  444378:	sbb    bl,BYTE PTR [rdi+0x4]
  44437b:	add    BYTE PTR [rax],al
  44437d:	add    BYTE PTR [rax],al
  44437f:	add    BYTE PTR [rdi+rbx*2],ah
  444382:	add    al,0x0
  444384:	add    BYTE PTR [rax],al
  444386:	add    BYTE PTR [rax],al
  444388:	sub    al,0x5f
  44438a:	add    al,0x0
  44438c:	add    BYTE PTR [rax],al
  44438e:	add    BYTE PTR [rax],al
  444390:	xor    al,0x5f
  444392:	add    al,0x0
  444394:	add    BYTE PTR [rax],al
  444396:	add    BYTE PTR [rax],al
  444398:	cmp    al,0x5f
  44439a:	add    al,0x0
  44439c:	add    BYTE PTR [rax],al
  44439e:	add    BYTE PTR [rax],al
  4443a0:	rex.RX pop rdi
  4443a2:	add    al,0x0
  4443a4:	add    BYTE PTR [rax],al
  4443a6:	add    BYTE PTR [rax],al
  4443a8:	rex.WRX pop rdi
  4443aa:	add    al,0x0
  4443ac:	add    BYTE PTR [rax],al
  4443ae:	add    BYTE PTR [rax],al
  4443b0:	pop    rax
  4443b1:	pop    rdi
  4443b2:	add    al,0x0
  4443b4:	add    BYTE PTR [rax],al
  4443b6:	add    BYTE PTR [rax],al
  4443b8:	(bad)  
  4443b9:	pop    rdi
  4443ba:	add    al,0x0
  4443bc:	add    BYTE PTR [rax],al
  4443be:	add    BYTE PTR [rax],al
  4443c0:	ins    BYTE PTR es:[rdi],dx
  4443c1:	pop    rdi
  4443c2:	add    al,0x0
  4443c4:	add    BYTE PTR [rax],al
  4443c6:	add    BYTE PTR [rax],al
  4443c8:	jbe    0x444429
  4443ca:	add    al,0x0
  4443cc:	add    BYTE PTR [rax],al
  4443ce:	add    BYTE PTR [rax],al
  4443d0:	sbb    BYTE PTR [rdi+0x4],0x0
  4443d4:	add    BYTE PTR [rax],al
  4443d6:	add    BYTE PTR [rax],al
  4443d8:	mov    WORD PTR [rdi+0x4],ds
  4443db:	add    BYTE PTR [rax],al
  4443dd:	add    BYTE PTR [rax],al
  4443df:	add    BYTE PTR [rdx+0x45f],bl
  4443e5:	add    BYTE PTR [rax],al
  4443e7:	add    BYTE PTR [rdi+rbx*2+0x4],ah
  4443ee:	add    BYTE PTR [rax],al
  4443f0:	scas   al,BYTE PTR es:[rdi]
  4443f1:	pop    rdi
  4443f2:	add    al,0x0
  4443f4:	add    BYTE PTR [rax],al
  4443f6:	add    BYTE PTR [rax],al
  4443f8:	mov    eax,0x45f
  4443fd:	add    BYTE PTR [rax],al
  4443ff:	add    dl,al
  444401:	pop    rdi
  444402:	add    al,0x0
  444404:	add    BYTE PTR [rax],al
  444406:	add    BYTE PTR [rax],al
  444408:	int3   
  444409:	pop    rdi
  44440a:	add    al,0x0
  44440c:	add    BYTE PTR [rax],al
  44440e:	add    BYTE PTR [rax],al
  444410:	(bad)  
  444411:	pop    rdi
  444412:	add    al,0x0
  444414:	add    BYTE PTR [rax],al
  444416:	add    BYTE PTR [rax],al
  444418:	ficomp WORD PTR [rdi+0x4]
  44441b:	add    BYTE PTR [rax],al
  44441d:	add    BYTE PTR [rax],al
  44441f:	add    al,ch
  444421:	pop    rdi
  444422:	add    al,0x0
  444424:	add    BYTE PTR [rax],al
  444426:	add    BYTE PTR [rax],al
  444428:	repnz pop rdi
  44442a:	add    al,0x0
  44442c:	add    BYTE PTR [rax],al
  44442e:	add    BYTE PTR [rax],al
  444430:	cld    
  444431:	pop    rdi
  444432:	add    al,0x0
  444434:	add    BYTE PTR [rax],al
  444436:	add    BYTE PTR [rax],al
  444438:	(bad)  
  444439:	(bad)  
  44443a:	add    al,0x0
  44443c:	add    BYTE PTR [rax],al
  44443e:	add    BYTE PTR [rax],al
  444440:	adc    BYTE PTR [rax+0x4],ah
  444443:	add    BYTE PTR [rax],al
  444445:	add    BYTE PTR [rax],al
  444447:	add    BYTE PTR [rdx],bl
  444449:	(bad)  
  44444a:	add    al,0x0
  44444c:	add    BYTE PTR [rax],al
  44444e:	add    BYTE PTR [rax],al
  444450:	es (bad) 
  444452:	add    al,0x0
  444454:	add    BYTE PTR [rax],al
  444456:	add    BYTE PTR [rax],al
  444458:	xor    ah,BYTE PTR [rax+0x4]
  44445b:	add    BYTE PTR [rax],al
  44445d:	add    BYTE PTR [rax],al
  44445f:	add    BYTE PTR [rax+riz*2],bh
  444462:	add    al,0x0
  444464:	add    BYTE PTR [rax],al
  444466:	add    BYTE PTR [rax],al
  444468:	rex.RX (bad) 
  44446a:	add    al,0x0
  44446c:	add    BYTE PTR [rax],al
  44446e:	add    BYTE PTR [rax],al
  444470:	push   rax
  444471:	(bad)  
  444472:	add    al,0x0
  444474:	add    BYTE PTR [rax],al
  444476:	add    BYTE PTR [rax],al
  444478:	pop    rdx
  444479:	(bad)  
  44447a:	add    al,0x0
  44447c:	add    BYTE PTR [rax],al
  44447e:	add    BYTE PTR [rax],al
  444480:	fs (bad) 
  444482:	add    al,0x0
  444484:	add    BYTE PTR [rax],al
  444486:	add    BYTE PTR [rax],al
  444488:	outs   dx,BYTE PTR ds:[rsi]
  444489:	(bad)  
  44448a:	add    al,0x0
  44448c:	add    BYTE PTR [rax],al
  44448e:	add    BYTE PTR [rax],al
  444490:	js     0x4444f2
  444492:	add    al,0x0
  444494:	add    BYTE PTR [rax],al
  444496:	add    BYTE PTR [rax],al
  444498:	(bad)  
  444499:	(bad)  
  44449a:	add    al,0x0
  44449c:	add    BYTE PTR [rax],al
  44449e:	add    BYTE PTR [rax],al
  4444a0:	mov    WORD PTR [rax+0x4],fs
  4444a3:	add    BYTE PTR [rax],al
  4444a5:	add    BYTE PTR [rax],al
  4444a7:	add    BYTE PTR [rsi+0x460],dl
  4444ad:	add    BYTE PTR [rax],al
  4444af:	add    BYTE PTR [rdx+0x460],ah
  4444b5:	add    BYTE PTR [rax],al
  4444b7:	add    BYTE PTR [rax+riz*2+0x4],ch
  4444be:	add    BYTE PTR [rax],al
  4444c0:	mov    dh,0x60
  4444c2:	add    al,0x0
  4444c4:	add    BYTE PTR [rax],al
  4444c6:	add    BYTE PTR [rax],al
  4444c8:	mov    esi,0x460
  4444cd:	add    BYTE PTR [rax],al
  4444cf:	add    al,cl
  4444d1:	(bad)  
  4444d2:	add    al,0x0
	...
  4444e0:	shl    BYTE PTR [rax+0x4],cl
	...
  4444ef:	add    dl,ah
  4444f1:	(bad)  
  4444f2:	add    al,0x0
	...
  444500:	cli    
  444501:	(bad)  
  444502:	add    al,0x0
	...
  444510:	adc    BYTE PTR [rcx+0x4],ah
	...
  44451f:	add    BYTE PTR [rcx+riz*2],ah
  444522:	add    al,0x0
  444524:	add    BYTE PTR [rax],al
  444526:	add    BYTE PTR [rax],al
  444528:	rex (bad) 
  44452a:	add    al,0x0
  44452c:	add    BYTE PTR [rax],al
  44452e:	add    BYTE PTR [rax],al
  444530:	(bad)  
  444531:	(bad)  
  444532:	add    al,0x0
  444534:	add    BYTE PTR [rax],al
  444536:	add    BYTE PTR [rax],al
  444538:	jl     0x44459b
  44453a:	add    al,0x0
  44453c:	add    BYTE PTR [rax],al
  44453e:	add    BYTE PTR [rax],al
  444540:	cwde   
  444541:	(bad)  
  444542:	add    al,0x0
  444544:	add    BYTE PTR [rax],al
  444546:	add    BYTE PTR [rax],al
  444548:	mov    al,0x61
  44454a:	add    al,0x0
  44454c:	add    BYTE PTR [rax],al
  44454e:	add    BYTE PTR [rax],al
  444550:	enter  0x461,0x0
  444554:	add    BYTE PTR [rax],al
  444556:	add    BYTE PTR [rax],al
  444558:	loopne 0x4445bb
  44455a:	add    al,0x0
  44455c:	add    BYTE PTR [rax],al
  44455e:	add    BYTE PTR [rax],al
  444560:	lock (bad) 
  444562:	add    al,0x0
  444564:	add    BYTE PTR [rax],al
  444566:	add    BYTE PTR [rax],al
  444568:	adc    al,0x62
  44456a:	add    al,0x0
  44456c:	add    BYTE PTR [rax],al
  44456e:	add    BYTE PTR [rax],al
  444570:	xor    BYTE PTR [rdx+0x4],ah
  444573:	add    BYTE PTR [rax],al
  444575:	add    BYTE PTR [rax],al
  444577:	add    BYTE PTR [rdx+riz*2+0x4],al
  44457b:	add    BYTE PTR [rax],al
  44457d:	add    BYTE PTR [rax],al
  44457f:	add    BYTE PTR [rdx+riz*2+0x4],ah
  444583:	add    BYTE PTR [rax],al
  444585:	add    BYTE PTR [rax],al
  444587:	add    BYTE PTR [rdx+riz*2+0x4],al
  44458e:	add    BYTE PTR [rax],al
  444590:	cwde   
  444591:	(bad)  
  444592:	add    al,0x0
  444594:	add    BYTE PTR [rax],al
  444596:	add    BYTE PTR [rax],al
  444598:	mov    ah,0x62
  44459a:	add    al,0x0
  44459c:	add    BYTE PTR [rax],al
  44459e:	add    BYTE PTR [rax],al
  4445a0:	shl    BYTE PTR [rdx+0x4],1
  4445a3:	add    BYTE PTR [rax],al
  4445a5:	add    BYTE PTR [rax],al
  4445a7:	add    al,ch
  4445a9:	(bad)  
  4445aa:	add    al,0x0
  4445ac:	add    BYTE PTR [rax],al
  4445ae:	add    BYTE PTR [rax],al
  4445b0:	add    al,0x63
  4445b2:	add    al,0x0
  4445b4:	add    BYTE PTR [rax],al
  4445b6:	add    BYTE PTR [rax],al
  4445b8:	sbb    BYTE PTR [rbx+0x4],ah
  4445bb:	add    BYTE PTR [rax],al
  4445bd:	add    BYTE PTR [rax],al
  4445bf:	add    BYTE PTR [rbx+riz*2],ch
  4445c2:	add    al,0x0
  4445c4:	add    BYTE PTR [rax],al
  4445c6:	add    BYTE PTR [rax],al
  4445c8:	rex movsxd eax,DWORD PTR [rax+rax*1]
  4445cc:	add    BYTE PTR [rax],al
  4445ce:	add    BYTE PTR [rax],al
  4445d0:	pop    rsp
  4445d1:	movsxd eax,DWORD PTR [rax+rax*1]
  4445d4:	add    BYTE PTR [rax],al
  4445d6:	add    BYTE PTR [rax],al
  4445d8:	ins    BYTE PTR es:[rdi],dx
  4445d9:	movsxd eax,DWORD PTR [rax+rax*1]
  4445dc:	add    BYTE PTR [rax],al
  4445de:	add    BYTE PTR [rax],al
  4445e0:	test   BYTE PTR [rbx+0x4],ah
  4445e3:	add    BYTE PTR [rax],al
  4445e5:	add    BYTE PTR [rax],al
  4445e7:	add    BYTE PTR [rbx+riz*2+0x4],bl
  4445ee:	add    BYTE PTR [rax],al
  4445f0:	mov    ah,0x63
  4445f2:	add    al,0x0
  4445f4:	add    BYTE PTR [rax],al
  4445f6:	add    BYTE PTR [rax],al
  4445f8:	shl    BYTE PTR [rbx+0x4],1
  4445fb:	add    BYTE PTR [rax],al
  4445fd:	add    BYTE PTR [rax],al
  4445ff:	add    al,ch
  444601:	movsxd eax,DWORD PTR [rax+rax*1]
  444604:	add    BYTE PTR [rax],al
  444606:	add    BYTE PTR [rax],al
  444608:	or     BYTE PTR [rsp+rax*1+0x0],ah
  44460c:	add    BYTE PTR [rax],al
  44460e:	add    BYTE PTR [rax],al
  444610:	and    al,0x64
  444612:	add    al,0x0
  444614:	add    BYTE PTR [rax],al
  444616:	add    BYTE PTR [rax],al
  444618:	rex.W
  444619:	fs add al,0x0
  44461c:	add    BYTE PTR [rax],al
  44461e:	add    BYTE PTR [rax],al
  444620:	fs fs add al,0x0
  444624:	add    BYTE PTR [rax],al
  444626:	add    BYTE PTR [rax],al
  444628:	jl     0x44468e
  44462a:	add    al,0x0
  44462c:	add    BYTE PTR [rax],al
  44462e:	add    BYTE PTR [rax],al
  444630:	cwde   
  444631:	fs add al,0x0
  444634:	add    BYTE PTR [rax],al
  444636:	add    BYTE PTR [rax],al
  444638:	mov    al,0x64
  44463a:	add    al,0x0
  44463c:	add    BYTE PTR [rax],al
  44463e:	add    BYTE PTR [rax],al
  444640:	(bad)  
  444641:	fs add al,0x0
  444644:	add    BYTE PTR [rax],al
  444646:	add    BYTE PTR [rax],al
  444648:	in     al,dx
  444649:	fs add al,0x0
  44464c:	add    BYTE PTR [rax],al
  44464e:	add    BYTE PTR [rax],al
  444650:	or     al,0x65
  444652:	add    al,0x0
  444654:	add    BYTE PTR [rax],al
  444656:	add    BYTE PTR [rax],al
  444658:	and    al,0x65
  44465a:	add    al,0x0
  44465c:	add    BYTE PTR [rax],al
  44465e:	add    BYTE PTR [rax],al
  444660:	rex.R
  444661:	gs add al,0x0
  444664:	add    BYTE PTR [rax],al
  444666:	add    BYTE PTR [rax],al
  444668:	pop    rsp
  444669:	gs add al,0x0
  44466c:	add    BYTE PTR [rax],al
  44466e:	add    BYTE PTR [rax],al
  444670:	jo     0x4446d7
  444672:	add    al,0x0
  444674:	add    BYTE PTR [rax],al
  444676:	add    BYTE PTR [rax],al
  444678:	nop
  444679:	gs add al,0x0
  44467c:	add    BYTE PTR [rax],al
  44467e:	add    BYTE PTR [rax],al
  444680:	lods   al,BYTE PTR ds:[rsi]
  444681:	gs add al,0x0
  444684:	add    BYTE PTR [rax],al
  444686:	add    BYTE PTR [rax],al
  444688:	shl    BYTE PTR [rbp+0x4],0x0
  44468c:	add    BYTE PTR [rax],al
  44468e:	add    BYTE PTR [rax],al
  444690:	shl    BYTE PTR [rbp+0x4],1
  444693:	add    BYTE PTR [rax],al
  444695:	add    BYTE PTR [rax],al
  444697:	add    al,ch
  444699:	gs add al,0x0
  44469c:	add    BYTE PTR [rax],al
  44469e:	add    BYTE PTR [rax],al
  4446a0:	cld    
  4446a1:	gs add al,0x0
  4446a4:	add    BYTE PTR [rax],al
  4446a6:	add    BYTE PTR [rax],al
  4446a8:	adc    BYTE PTR [rsi+0x4],ah
	...
  4446b7:	add    BYTE PTR [rsi+riz*2],ah
  4446ba:	add    al,0x0
  4446bc:	add    BYTE PTR [rax],al
  4446be:	add    BYTE PTR [rax],al
  4446c0:	rex.R
  4446c1:	data16 add al,0x0
  4446c4:	add    BYTE PTR [rax],al
  4446c6:	add    BYTE PTR [rax],al
  4446c8:	fs data16 add al,0x0
  4446cc:	add    BYTE PTR [rax],al
  4446ce:	add    BYTE PTR [rax],al
  4446d0:	test   BYTE PTR [rsi+0x4],ah
  4446d3:	add    BYTE PTR [rax],al
  4446d5:	add    BYTE PTR [rax],al
  4446d7:	add    BYTE PTR [rsi+riz*2+0x4],ah
  4446de:	add    BYTE PTR [rax],al
  4446e0:	shl    BYTE PTR [rsi+0x4],0x0
  4446e4:	add    BYTE PTR [rax],al
  4446e6:	add    BYTE PTR [rax],al
  4446e8:	loopne 0x444750
  4446ea:	add    al,0x0
  4446ec:	add    BYTE PTR [rax],al
  4446ee:	add    BYTE PTR [rax],al
  4446f0:	add    BYTE PTR [rdi+0x4],ah
  4446f3:	add    BYTE PTR [rax],al
  4446f5:	add    BYTE PTR [rax],al
  4446f7:	add    BYTE PTR [rax],ah
  4446f9:	addr32 add al,0x0
  4446fc:	add    BYTE PTR [rax],al
  4446fe:	add    BYTE PTR [rax],al
  444700:	cmp    BYTE PTR [rdi+0x4],ah
	...
  44470f:	add    BYTE PTR [rdi+riz*2+0x4],cl
  444713:	add    BYTE PTR [rax],al
  444715:	add    BYTE PTR [rax],al
  444717:	add    BYTE PTR [rdi+riz*2+0x4],ch
  44471b:	add    BYTE PTR [rax],al
  44471d:	add    BYTE PTR [rax],al
  44471f:	add    BYTE PTR [rdi+riz*2+0x4],cl
  444726:	add    BYTE PTR [rax],al
  444728:	lods   al,BYTE PTR ds:[rsi]
  444729:	addr32 add al,0x0
  44472c:	add    BYTE PTR [rax],al
  44472e:	add    BYTE PTR [rax],al
  444730:	enter  0x467,0x0
  444734:	add    BYTE PTR [rax],al
  444736:	add    BYTE PTR [rax],al
  444738:	call   0x444ba4
  44473d:	add    BYTE PTR [rax],al
  44473f:	add    BYTE PTR [rax],dl
  444741:	push   0x4
  444746:	add    BYTE PTR [rax],al
  444748:	sub    al,0x68
  44474a:	add    al,0x0
  44474c:	add    BYTE PTR [rax],al
  44474e:	add    BYTE PTR [rax],al
  444750:	rex.R push 0x4
  444756:	add    BYTE PTR [rax],al
  444758:	pop    rsp
  444759:	push   0x4
  44475e:	add    BYTE PTR [rax],al
  444760:	je     0x4447ca
  444762:	add    al,0x0
  444764:	add    BYTE PTR [rax],al
  444766:	add    BYTE PTR [rax],al
  444768:	xchg   esp,eax
  444769:	push   0x4
  44476e:	add    BYTE PTR [rax],al
  444770:	lods   al,BYTE PTR ds:[rsi]
  444771:	push   0x4
  444776:	add    BYTE PTR [rax],al
  444778:	int3   
  444779:	push   0x4
  44477e:	add    BYTE PTR [rax],al
  444780:	in     al,0x68
  444782:	add    al,0x0
  444784:	add    BYTE PTR [rax],al
  444786:	add    BYTE PTR [rax],al
  444788:	cld    
  444789:	push   0x4
  44478e:	add    BYTE PTR [rax],al
  444790:	sbb    al,0x69
  444792:	add    al,0x0
  444794:	add    BYTE PTR [rax],al
  444796:	add    BYTE PTR [rax],al
  444798:	cmp    al,0x69
  44479a:	add    al,0x0
  44479c:	add    BYTE PTR [rax],al
  44479e:	add    BYTE PTR [rax],al
  4447a0:	pop    rsp
  4447a1:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4447a8:	sub    BYTE PTR [rcx+0x4],0x0
  4447ac:	add    BYTE PTR [rax],al
  4447ae:	add    BYTE PTR [rax],al
  4447b0:	xchg   esp,eax
  4447b1:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4447b8:	lods   al,BYTE PTR ds:[rsi]
  4447b9:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4447c0:	mov    esp,0x469
  4447c5:	add    BYTE PTR [rax],al
  4447c7:	add    ah,bl
  4447c9:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4447d0:	in     al,dx
  4447d1:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4447d8:	add    al,0x6a
  4447da:	add    al,0x0
  4447dc:	add    BYTE PTR [rax],al
  4447de:	add    BYTE PTR [rax],al
  4447e0:	sbb    al,0x6a
  4447e2:	add    al,0x0
  4447e4:	add    BYTE PTR [rax],al
  4447e6:	add    BYTE PTR [rax],al
  4447e8:	xor    al,0x6a
  4447ea:	add    al,0x0
  4447ec:	add    BYTE PTR [rax],al
  4447ee:	add    BYTE PTR [rax],al
  4447f0:	rex.WR push 0x4
	...
  4447ff:	add    BYTE PTR [rax+0x6a],ah
  444802:	add    al,0x0
  444804:	add    BYTE PTR [rax],al
  444806:	add    BYTE PTR [rax],al
  444808:	je     0x444874
  44480a:	add    al,0x0
  44480c:	add    BYTE PTR [rax],al
  44480e:	add    BYTE PTR [rax],al
  444810:	mov    BYTE PTR [rdx+0x4],ch
  444813:	add    BYTE PTR [rax],al
  444815:	add    BYTE PTR [rax],al
  444817:	add    BYTE PTR [rdx+rbp*2+0x4],bl
  44481e:	add    BYTE PTR [rax],al
  444820:	mov    eax,0x46a
  444825:	add    BYTE PTR [rax],al
  444827:	add    al,dl
  444829:	push   0x4
  44482b:	add    BYTE PTR [rax],al
  44482d:	add    BYTE PTR [rax],al
  44482f:	add    ah,ch
  444831:	push   0x4
  444833:	add    BYTE PTR [rax],al
  444835:	add    BYTE PTR [rax],al
  444837:	add    BYTE PTR [rax],cl
  444839:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44483d:	add    BYTE PTR [rax],al
  44483f:	add    BYTE PTR [rax],ch
  444841:	imul   eax,DWORD PTR [rax+rax*1],0x0
  444845:	add    BYTE PTR [rax],al
  444847:	add    BYTE PTR [rbx+rbp*2+0x4],al
  44484b:	add    BYTE PTR [rax],al
  44484d:	add    BYTE PTR [rax],al
  44484f:	add    BYTE PTR [rax+0x6b],bl
  444852:	add    al,0x0
  444854:	add    BYTE PTR [rax],al
  444856:	add    BYTE PTR [rax],al
  444858:	ins    BYTE PTR es:[rdi],dx
  444859:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44485d:	add    BYTE PTR [rax],al
  44485f:	add    BYTE PTR [rbx+rbp*2+0x4],al
  444866:	add    BYTE PTR [rax],al
  444868:	cwde   
  444869:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44486d:	add    BYTE PTR [rax],al
  44486f:	add    BYTE PTR [rax+0x46b],bh
  444875:	add    BYTE PTR [rax],al
  444877:	add    ah,cl
  444879:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44487d:	add    BYTE PTR [rax],al
  44487f:	add    al,ah
  444881:	imul   eax,DWORD PTR [rax+rax*1],0x0
  444885:	add    BYTE PTR [rax],al
  444887:	add    al,dh
  444889:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44488d:	add    BYTE PTR [rax],al
  44488f:	add    BYTE PTR [rsp+rbp*2],al
  444892:	add    al,0x0
  444894:	add    BYTE PTR [rax],al
  444896:	add    BYTE PTR [rax],al
  444898:	adc    al,0x6c
  44489a:	add    al,0x0
  44489c:	add    BYTE PTR [rax],al
  44489e:	add    BYTE PTR [rax],al
  4448a0:	sub    al,0x6c
  4448a2:	add    al,0x0
  4448a4:	add    BYTE PTR [rax],al
  4448a6:	add    BYTE PTR [rax],al
  4448a8:	rex.R ins BYTE PTR es:[rdi],dx
  4448aa:	add    al,0x0
  4448ac:	add    BYTE PTR [rax],al
  4448ae:	add    BYTE PTR [rax],al
  4448b0:	js     0x44491e
  4448b2:	add    al,0x0
  4448b4:	add    BYTE PTR [rax],al
  4448b6:	add    BYTE PTR [rax],al
  4448b8:	xchg   esp,eax
  4448b9:	ins    BYTE PTR es:[rdi],dx
  4448ba:	add    al,0x0
  4448bc:	add    BYTE PTR [rax],al
  4448be:	add    BYTE PTR [rax],al
  4448c0:	test   al,0x6c
  4448c2:	add    al,0x0
  4448c4:	add    BYTE PTR [rax],al
  4448c6:	add    BYTE PTR [rax],al
  4448c8:	(bad)  
  4448c9:	ins    BYTE PTR es:[rdi],dx
  4448ca:	add    al,0x0
  4448cc:	add    BYTE PTR [rax],al
  4448ce:	add    BYTE PTR [rax],al
  4448d0:	call   0x444d41
  4448d5:	add    BYTE PTR [rax],al
  4448d7:	add    BYTE PTR [rax],al
  4448d9:	ins    DWORD PTR es:[rdi],dx
  4448da:	add    al,0x0
  4448dc:	add    BYTE PTR [rax],al
  4448de:	add    BYTE PTR [rax],al
  4448e0:	sbb    al,0x6d
  4448e2:	add    al,0x0
  4448e4:	add    BYTE PTR [rax],al
  4448e6:	add    BYTE PTR [rax],al
  4448e8:	cmp    BYTE PTR [rbp+0x4],ch
  4448eb:	add    BYTE PTR [rax],al
  4448ed:	add    BYTE PTR [rax],al
  4448ef:	add    BYTE PTR [rax+0x6d],dl
  4448f2:	add    al,0x0
  4448f4:	add    BYTE PTR [rax],al
  4448f6:	add    BYTE PTR [rax],al
  4448f8:	push   0x46d
  4448fd:	add    BYTE PTR [rax],al
  4448ff:	add    BYTE PTR [rbp+rbp*2+0x4],cl
  444906:	add    BYTE PTR [rax],al
  444908:	test   al,0x6d
  44490a:	add    al,0x0
  44490c:	add    BYTE PTR [rax],al
  44490e:	add    BYTE PTR [rax],al
  444910:	shr    BYTE PTR [rbp+0x4],0x0
  444914:	add    BYTE PTR [rax],al
  444916:	add    BYTE PTR [rax],al
  444918:	fsubr  DWORD PTR [rbp+0x4]
  44491b:	add    BYTE PTR [rax],al
  44491d:	add    BYTE PTR [rax],al
  44491f:	add    al,dh
  444921:	ins    DWORD PTR es:[rdi],dx
  444922:	add    al,0x0
  444924:	add    BYTE PTR [rax],al
  444926:	add    BYTE PTR [rax],al
  444928:	or     BYTE PTR [rsi+0x4],ch
  44492b:	add    BYTE PTR [rax],al
  44492d:	add    BYTE PTR [rax],al
  44492f:	add    BYTE PTR [rax],ah
  444931:	outs   dx,BYTE PTR ds:[rsi]
  444932:	add    al,0x0
  444934:	add    BYTE PTR [rax],al
  444936:	add    BYTE PTR [rax],al
  444938:	xor    al,0x6e
  44493a:	add    al,0x0
  44493c:	add    BYTE PTR [rax],al
  44493e:	add    BYTE PTR [rax],al
  444940:	rex.WR outs dx,BYTE PTR ds:[rsi]
  444942:	add    al,0x0
  444944:	add    BYTE PTR [rax],al
  444946:	add    BYTE PTR [rax],al
  444948:	pop    rsp
  444949:	outs   dx,BYTE PTR ds:[rsi]
  44494a:	add    al,0x0
  44494c:	add    BYTE PTR [rax],al
  44494e:	add    BYTE PTR [rax],al
  444950:	ins    BYTE PTR es:[rdi],dx
  444951:	outs   dx,BYTE PTR ds:[rsi]
  444952:	add    al,0x0
  444954:	add    BYTE PTR [rax],al
  444956:	add    BYTE PTR [rax],al
  444958:	test   BYTE PTR [rsi+0x4],ch
  44495b:	add    BYTE PTR [rax],al
  44495d:	add    BYTE PTR [rax],al
  44495f:	add    BYTE PTR [rsi+rbp*2+0x4],dl
  444966:	add    BYTE PTR [rax],al
  444968:	lods   al,BYTE PTR ds:[rsi]
  444969:	outs   dx,BYTE PTR ds:[rsi]
  44496a:	add    al,0x0
  44496c:	add    BYTE PTR [rax],al
  44496e:	add    BYTE PTR [rax],al
  444970:	enter  0x46e,0x0
  444974:	add    BYTE PTR [rax],al
  444976:	add    BYTE PTR [rax],al
  444978:	fsubr  DWORD PTR [rsi+0x4]
  44497b:	add    BYTE PTR [rax],al
  44497d:	add    BYTE PTR [rax],al
  44497f:	add    ah,ah
  444981:	outs   dx,BYTE PTR ds:[rsi]
  444982:	add    al,0x0
  444984:	add    BYTE PTR [rax],al
  444986:	add    BYTE PTR [rax],al
  444988:	hlt    
  444989:	outs   dx,BYTE PTR ds:[rsi]
  44498a:	add    al,0x0
  44498c:	add    BYTE PTR [rax],al
  44498e:	add    BYTE PTR [rax],al
  444990:	or     BYTE PTR [rdi+0x4],ch
  444993:	add    BYTE PTR [rax],al
  444995:	add    BYTE PTR [rax],al
  444997:	add    BYTE PTR [rax],bl
  444999:	outs   dx,DWORD PTR ds:[rsi]
  44499a:	add    al,0x0
  44499c:	add    BYTE PTR [rax],al
  44499e:	add    BYTE PTR [rax],al
  4449a0:	and    al,0x6f
  4449a2:	add    al,0x0
  4449a4:	add    BYTE PTR [rax],al
  4449a6:	add    BYTE PTR [rax],al
  4449a8:	xor    BYTE PTR [rdi+0x4],ch
  4449ab:	add    BYTE PTR [rax],al
  4449ad:	add    BYTE PTR [rax],al
  4449af:	add    BYTE PTR [rdi+rbp*2],bh
  4449b2:	add    al,0x0
  4449b4:	add    BYTE PTR [rax],al
  4449b6:	add    BYTE PTR [rax],al
  4449b8:	rex.W outs dx,DWORD PTR ds:[rsi]
  4449ba:	add    al,0x0
  4449bc:	add    BYTE PTR [rax],al
  4449be:	add    BYTE PTR [rax],al
  4449c0:	push   rsp
  4449c1:	outs   dx,DWORD PTR ds:[rsi]
  4449c2:	add    al,0x0
	...
  4449d0:	outs   dx,DWORD PTR fs:[rsi]
  4449d2:	add    al,0x0
  4449d4:	add    BYTE PTR [rax],al
  4449d6:	add    BYTE PTR [rax],al
  4449d8:	sub    BYTE PTR [rdi+0x4],0x0
  4449dc:	add    BYTE PTR [rax],al
  4449de:	add    BYTE PTR [rax],al
  4449e0:	cwde   
  4449e1:	outs   dx,DWORD PTR ds:[rsi]
  4449e2:	add    al,0x0
	...
  4449f0:	mov    al,0x6f
  4449f2:	add    al,0x0
  4449f4:	add    BYTE PTR [rax],al
  4449f6:	add    BYTE PTR [rax],al
  4449f8:	mov    esp,0x46f
  4449fd:	add    BYTE PTR [rax],al
  4449ff:	add    ah,cl
  444a01:	outs   dx,DWORD PTR ds:[rsi]
  444a02:	add    al,0x0
  444a04:	add    BYTE PTR [rax],al
  444a06:	add    BYTE PTR [rax],al
  444a08:	loopne 0x444a79
  444a0a:	add    al,0x0
  444a0c:	add    BYTE PTR [rax],al
  444a0e:	add    BYTE PTR [rax],al
  444a10:	clc    
  444a11:	outs   dx,DWORD PTR ds:[rsi]
  444a12:	add    al,0x0
  444a14:	add    BYTE PTR [rax],al
  444a16:	add    BYTE PTR [rax],al
  444a18:	or     al,0x70
  444a1a:	add    al,0x0
  444a1c:	add    BYTE PTR [rax],al
  444a1e:	add    BYTE PTR [rax],al
  444a20:	sbb    al,0x70
  444a22:	add    al,0x0
  444a24:	add    BYTE PTR [rax],al
  444a26:	add    BYTE PTR [rax],al
  444a28:	xor    BYTE PTR [rax+0x4],dh
  444a2b:	add    BYTE PTR [rax],al
  444a2d:	add    BYTE PTR [rax],al
  444a2f:	add    BYTE PTR [rax+rsi*2+0x4],cl
  444a33:	add    BYTE PTR [rax],al
  444a35:	add    BYTE PTR [rax],al
  444a37:	add    BYTE PTR [rax+0x70],bl
  444a3a:	add    al,0x0
  444a3c:	add    BYTE PTR [rax],al
  444a3e:	add    BYTE PTR [rax],al
  444a40:	push   0x470
  444a45:	add    BYTE PTR [rax],al
  444a47:	add    BYTE PTR [rax+0x470],al
  444a4d:	add    BYTE PTR [rax],al
  444a4f:	add    BYTE PTR [rax+0x470],dl
  444a55:	add    BYTE PTR [rax],al
  444a57:	add    BYTE PTR [rax+0x470],ah
  444a5d:	add    BYTE PTR [rax],al
  444a5f:	add    BYTE PTR [rax+0x470],dh
  444a65:	add    BYTE PTR [rax],al
  444a67:	add    al,cl
  444a69:	jo     0x444a6f
  444a6b:	add    BYTE PTR [rax],al
  444a6d:	add    BYTE PTR [rax],al
  444a6f:	add    al,bl
  444a71:	jo     0x444a77
  444a73:	add    BYTE PTR [rax],al
  444a75:	add    BYTE PTR [rax],al
  444a77:	add    ah,ch
  444a79:	jo     0x444a7f
  444a7b:	add    BYTE PTR [rax],al
  444a7d:	add    BYTE PTR [rax],al
  444a7f:	add    BYTE PTR [rax],cl
  444a81:	jno    0x444a87
  444a83:	add    BYTE PTR [rax],al
  444a85:	add    BYTE PTR [rax],al
  444a87:	add    BYTE PTR [rax],bl
  444a89:	jno    0x444a8f
  444a8b:	add    BYTE PTR [rax],al
  444a8d:	add    BYTE PTR [rax],al
  444a8f:	add    BYTE PTR [rax],ch
  444a91:	jno    0x444a97
  444a93:	add    BYTE PTR [rax],al
  444a95:	add    BYTE PTR [rax],al
  444a97:	add    BYTE PTR [rax],bh
  444a99:	jno    0x444a9f
  444a9b:	add    BYTE PTR [rax],al
  444a9d:	add    BYTE PTR [rax],al
  444a9f:	add    BYTE PTR [rax+0x71],dl
  444aa2:	add    al,0x0
  444aa4:	add    BYTE PTR [rax],al
  444aa6:	add    BYTE PTR [rax],al
  444aa8:	(bad)  
  444aa9:	jno    0x444aaf
  444aab:	add    BYTE PTR [rax],al
  444aad:	add    BYTE PTR [rax],al
  444aaf:	add    BYTE PTR [rax+0x71],bh
  444ab2:	add    al,0x0
  444ab4:	add    BYTE PTR [rax],al
  444ab6:	add    BYTE PTR [rax],al
  444ab8:	mov    WORD PTR [rcx+0x4],?
  444abb:	add    BYTE PTR [rax],al
  444abd:	add    BYTE PTR [rax],al
  444abf:	add    BYTE PTR [rcx+rsi*2+0x4],ah
  444ac6:	add    BYTE PTR [rax],al
  444ac8:	mov    ah,0x71
  444aca:	add    al,0x0
  444acc:	add    BYTE PTR [rax],al
  444ace:	add    BYTE PTR [rax],al
  444ad0:	fdiv   QWORD PTR [rcx+0x4]
  444ad3:	add    BYTE PTR [rax],al
  444ad5:	add    BYTE PTR [rax],al
  444ad7:	add    ah,dh
  444ad9:	jno    0x444adf
  444adb:	add    BYTE PTR [rax],al
  444add:	add    BYTE PTR [rax],al
  444adf:	add    BYTE PTR [rdx+rsi*2],cl
  444ae2:	add    al,0x0
  444ae4:	add    BYTE PTR [rax],al
  444ae6:	add    BYTE PTR [rax],al
  444ae8:	sub    BYTE PTR [rdx+0x4],dh
  444aeb:	add    BYTE PTR [rax],al
  444aed:	add    BYTE PTR [rax],al
  444aef:	add    BYTE PTR [rdx+rsi*2],bh
  444af2:	add    al,0x0
  444af4:	add    BYTE PTR [rax],al
  444af6:	add    BYTE PTR [rax],al
  444af8:	rex.WR jb 0x444aff
  444afb:	add    BYTE PTR [rax],al
  444afd:	add    BYTE PTR [rax],al
  444aff:	add    BYTE PTR [rax+0x72],ah
  444b02:	add    al,0x0
  444b04:	add    BYTE PTR [rax],al
  444b06:	add    BYTE PTR [rax],al
  444b08:	ins    BYTE PTR es:[rdi],dx
  444b09:	jb     0x444b0f
  444b0b:	add    BYTE PTR [rax],al
  444b0d:	add    BYTE PTR [rax],al
  444b0f:	add    BYTE PTR [rax+0x72],bh
  444b12:	add    al,0x0
  444b14:	add    BYTE PTR [rax],al
  444b16:	add    BYTE PTR [rax],al
  444b18:	nop
  444b19:	jb     0x444b1f
  444b1b:	add    BYTE PTR [rax],al
  444b1d:	add    BYTE PTR [rax],al
  444b1f:	add    BYTE PTR [rax+0x472],dh
  444b25:	add    BYTE PTR [rax],al
  444b27:	add    al,cl
  444b29:	jb     0x444b2f
  444b2b:	add    BYTE PTR [rax],al
  444b2d:	add    BYTE PTR [rax],al
  444b2f:	add    ah,ch
  444b31:	jb     0x444b37
  444b33:	add    BYTE PTR [rax],al
  444b35:	add    BYTE PTR [rax],al
  444b37:	add    BYTE PTR [rbx+rsi*2],cl
  444b3a:	add    al,0x0
  444b3c:	add    BYTE PTR [rax],al
  444b3e:	add    BYTE PTR [rax],al
  444b40:	and    al,0x73
  444b42:	add    al,0x0
  444b44:	add    BYTE PTR [rax],al
  444b46:	add    BYTE PTR [rax],al
  444b48:	cmp    BYTE PTR [rbx+0x4],dh
  444b4b:	add    BYTE PTR [rax],al
  444b4d:	add    BYTE PTR [rax],al
  444b4f:	add    BYTE PTR [rax+0x73],bl
  444b52:	add    al,0x0
  444b54:	add    BYTE PTR [rax],al
  444b56:	add    BYTE PTR [rax],al
  444b58:	je     0x444bcd
  444b5a:	add    al,0x0
  444b5c:	add    BYTE PTR [rax],al
  444b5e:	add    BYTE PTR [rax],al
  444b60:	nop
  444b61:	jae    0x444b67
  444b63:	add    BYTE PTR [rax],al
  444b65:	add    BYTE PTR [rax],al
  444b67:	add    BYTE PTR [rbx+rsi*2+0x4],ch
  444b6e:	add    BYTE PTR [rax],al
  444b70:	shl    BYTE PTR [rbx+0x4],0x0
  444b74:	add    BYTE PTR [rax],al
  444b76:	add    BYTE PTR [rax],al
  444b78:	fdiv   DWORD PTR [rbx+0x4]
  444b7b:	add    BYTE PTR [rax],al
  444b7d:	add    BYTE PTR [rax],al
  444b7f:	add    ah,ch
  444b81:	jae    0x444b87
  444b83:	add    BYTE PTR [rax],al
  444b85:	add    BYTE PTR [rax],al
  444b87:	add    BYTE PTR [rax],cl
  444b89:	je     0x444b8f
  444b8b:	add    BYTE PTR [rax],al
  444b8d:	add    BYTE PTR [rax],al
  444b8f:	add    BYTE PTR [rsp+rsi*2],ah
  444b92:	add    al,0x0
  444b94:	add    BYTE PTR [rax],al
  444b96:	add    BYTE PTR [rax],al
  444b98:	rex.W je 0x444b9f
  444b9b:	add    BYTE PTR [rax],al
  444b9d:	add    BYTE PTR [rax],al
  444b9f:	add    BYTE PTR [rax+0x74],bl
  444ba2:	add    al,0x0
  444ba4:	add    BYTE PTR [rax],al
  444ba6:	add    BYTE PTR [rax],al
  444ba8:	jo     0x444c1e
  444baa:	add    al,0x0
  444bac:	add    BYTE PTR [rax],al
  444bae:	add    BYTE PTR [rax],al
  444bb0:	mov    BYTE PTR [rsp+rax*1+0x0],dh
  444bb4:	add    BYTE PTR [rax],al
  444bb6:	add    BYTE PTR [rax],al
  444bb8:	xchg   esp,eax
  444bb9:	je     0x444bbf
  444bbb:	add    BYTE PTR [rax],al
  444bbd:	add    BYTE PTR [rax],al
  444bbf:	add    BYTE PTR [rax+0x474],ah
  444bc5:	add    BYTE PTR [rax],al
  444bc7:	add    BYTE PTR [rsp+rsi*2+0x4],bh
  444bce:	add    BYTE PTR [rax],al
  444bd0:	(bad)  
  444bd1:	je     0x444bd7
  444bd3:	add    BYTE PTR [rax],al
  444bd5:	add    BYTE PTR [rax],al
  444bd7:	add    al,ch
  444bd9:	je     0x444bdf
  444bdb:	add    BYTE PTR [rax],al
  444bdd:	add    BYTE PTR [rax],al
  444bdf:	add    ah,bh
  444be1:	je     0x444be7
  444be3:	add    BYTE PTR [rax],al
  444be5:	add    BYTE PTR [rax],al
  444be7:	add    BYTE PTR [rsi*2+0x4],dl
  444bee:	add    BYTE PTR [rax],al
  444bf0:	sub    BYTE PTR [rbp+0x4],dh
  444bf3:	add    BYTE PTR [rax],al
  444bf5:	add    BYTE PTR [rax],al
  444bf7:	add    BYTE PTR [rsi*2+0x4],bh
  444bfe:	add    BYTE PTR [rax],al
  444c00:	rex.W jne 0x444c07
  444c03:	add    BYTE PTR [rax],al
  444c05:	add    BYTE PTR [rax],al
  444c07:	add    BYTE PTR [rax+0x75],bl
  444c0a:	add    al,0x0
  444c0c:	add    BYTE PTR [rax],al
  444c0e:	add    BYTE PTR [rax],al
  444c10:	push   0x475
  444c15:	add    BYTE PTR [rax],al
  444c17:	add    BYTE PTR [rax+0x75],bh
  444c1a:	add    al,0x0
  444c1c:	add    BYTE PTR [rax],al
  444c1e:	add    BYTE PTR [rax],al
  444c20:	test   BYTE PTR [rbp+0x4],dh
  444c23:	add    BYTE PTR [rax],al
  444c25:	add    BYTE PTR [rax],al
  444c27:	add    BYTE PTR [rax+0x475],ah
  444c2d:	add    BYTE PTR [rax],al
  444c2f:	add    BYTE PTR [rbp+rsi*2+0x4],dh
  444c36:	add    BYTE PTR [rax],al
  444c38:	enter  0x475,0x0
  444c3c:	add    BYTE PTR [rax],al
  444c3e:	add    BYTE PTR [rax],al
  444c40:	fdiv   DWORD PTR [rbp+0x4]
  444c43:	add    BYTE PTR [rax],al
  444c45:	add    BYTE PTR [rax],al
  444c47:	add    al,dh
  444c49:	jne    0x444c4f
  444c4b:	add    BYTE PTR [rax],al
  444c4d:	add    BYTE PTR [rax],al
  444c4f:	add    BYTE PTR [rax],al
  444c51:	jbe    0x444c57
  444c53:	add    BYTE PTR [rax],al
  444c55:	add    BYTE PTR [rax],al
  444c57:	add    BYTE PTR [rax],dl
  444c59:	jbe    0x444c5f
  444c5b:	add    BYTE PTR [rax],al
  444c5d:	add    BYTE PTR [rax],al
  444c5f:	add    BYTE PTR [rsi+rsi*2],ah
  444c62:	add    al,0x0
  444c64:	add    BYTE PTR [rax],al
  444c66:	add    BYTE PTR [rax],al
  444c68:	cmp    BYTE PTR [rsi+0x4],dh
  444c6b:	add    BYTE PTR [rax],al
  444c6d:	add    BYTE PTR [rax],al
  444c6f:	add    BYTE PTR [rsi+rsi*2+0x4],cl
  444c73:	add    BYTE PTR [rax],al
  444c75:	add    BYTE PTR [rax],al
  444c77:	add    BYTE PTR [rsi+rsi*2+0x4],bl
  444c7b:	add    BYTE PTR [rax],al
  444c7d:	add    BYTE PTR [rax],al
  444c7f:	add    BYTE PTR [rax+0x76],dh
  444c82:	add    al,0x0
  444c84:	add    BYTE PTR [rax],al
  444c86:	add    BYTE PTR [rax],al
  444c88:	test   BYTE PTR [rsi+0x4],dh
  444c8b:	add    BYTE PTR [rax],al
  444c8d:	add    BYTE PTR [rax],al
  444c8f:	add    BYTE PTR [rsi+rsi*2+0x4],dl
  444c96:	add    BYTE PTR [rax],al
  444c98:	lods   al,BYTE PTR ds:[rsi]
  444c99:	jbe    0x444c9f
  444c9b:	add    BYTE PTR [rax],al
  444c9d:	add    BYTE PTR [rax],al
  444c9f:	add    ah,al
  444ca1:	jbe    0x444ca7
  444ca3:	add    BYTE PTR [rax],al
  444ca5:	add    BYTE PTR [rax],al
  444ca7:	add    ah,bl
  444ca9:	jbe    0x444caf
  444cab:	add    BYTE PTR [rax],al
  444cad:	add    BYTE PTR [rax],al
  444caf:	add    al,bh
  444cb1:	jbe    0x444cb7
  444cb3:	add    BYTE PTR [rax],al
  444cb5:	add    BYTE PTR [rax],al
  444cb7:	add    BYTE PTR [rax],dl
  444cb9:	ja     0x444cbf
  444cbb:	add    BYTE PTR [rax],al
  444cbd:	add    BYTE PTR [rax],al
  444cbf:	add    BYTE PTR [rdi+rsi*2],ah
  444cc2:	add    al,0x0
  444cc4:	add    BYTE PTR [rax],al
  444cc6:	add    BYTE PTR [rax],al
  444cc8:	xor    al,0x77
  444cca:	add    al,0x0
  444ccc:	add    BYTE PTR [rax],al
  444cce:	add    BYTE PTR [rax],al
  444cd0:	rex.W ja 0x444cd7
  444cd3:	add    BYTE PTR [rax],al
  444cd5:	add    BYTE PTR [rax],al
  444cd7:	add    BYTE PTR [rdi+rsi*2+0x4],dl
  444cdb:	add    BYTE PTR [rax],al
  444cdd:	add    BYTE PTR [rax],al
  444cdf:	add    BYTE PTR [rdi+rsi*2+0x4],ah
  444ce3:	add    BYTE PTR [rax],al
  444ce5:	add    BYTE PTR [rax],al
  444ce7:	add    BYTE PTR [rax+0x77],bh
  444cea:	add    al,0x0
  444cec:	add    BYTE PTR [rax],al
  444cee:	add    BYTE PTR [rax],al
  444cf0:	mov    BYTE PTR [rdi+0x4],dh
  444cf3:	add    BYTE PTR [rax],al
  444cf5:	add    BYTE PTR [rax],al
  444cf7:	add    BYTE PTR [rax+0x477],bl
  444cfd:	add    BYTE PTR [rax],al
  444cff:	add    BYTE PTR [rdi+rsi*2+0x4],ah
  444d06:	add    BYTE PTR [rax],al
  444d08:	mov    ah,0x77
  444d0a:	add    al,0x0
  444d0c:	add    BYTE PTR [rax],al
  444d0e:	add    BYTE PTR [rax],al
  444d10:	(bad)  
  444d11:	ja     0x444d17
  444d13:	add    BYTE PTR [rax],al
  444d15:	add    BYTE PTR [rax],al
  444d17:	add    ah,dl
  444d19:	ja     0x444d1f
  444d1b:	add    BYTE PTR [rax],al
  444d1d:	add    BYTE PTR [rax],al
  444d1f:	add    ah,ah
  444d21:	ja     0x444d27
  444d23:	add    BYTE PTR [rax],al
  444d25:	add    BYTE PTR [rax],al
  444d27:	add    ah,dh
  444d29:	ja     0x444d2f
  444d2b:	add    BYTE PTR [rax],al
  444d2d:	add    BYTE PTR [rax],al
  444d2f:	add    BYTE PTR [rax],al
  444d31:	js     0x444d37
  444d33:	add    BYTE PTR [rax],al
  444d35:	add    BYTE PTR [rax],al
  444d37:	add    BYTE PTR [rax+rdi*2],cl
  444d3a:	add    al,0x0
  444d3c:	add    BYTE PTR [rax],al
  444d3e:	add    BYTE PTR [rax],al
  444d40:	sbb    BYTE PTR [rax+0x4],bh
  444d43:	add    BYTE PTR [rax],al
  444d45:	add    BYTE PTR [rax],al
  444d47:	add    BYTE PTR [rax],dh
  444d49:	js     0x444d4f
	...
  444d57:	add    BYTE PTR [rax+rdi*2+0x4],al
  444d5b:	add    BYTE PTR [rax],al
  444d5d:	add    BYTE PTR [rax],al
  444d5f:	add    BYTE PTR [rax+0x78],ah
  444d62:	add    al,0x0
	...
  444d70:	je     0x444dea
  444d72:	add    al,0x0
  444d74:	add    BYTE PTR [rax],al
  444d76:	add    BYTE PTR [rax],al
  444d78:	cmp    BYTE PTR [rax+0x4],0x0
  444d7c:	add    BYTE PTR [rax],al
  444d7e:	add    BYTE PTR [rax],al
  444d80:	mov    WORD PTR [rax+0x4],?
  444d83:	add    BYTE PTR [rax],al
  444d85:	add    BYTE PTR [rax],al
  444d87:	add    BYTE PTR [rax+rdi*2+0x4],bl
  444d8e:	add    BYTE PTR [rax],al
  444d90:	mov    eax,0x478
	...
  444d9d:	add    BYTE PTR [rax],al
  444d9f:	add    al,dl
  444da1:	js     0x444da7
  444da3:	add    BYTE PTR [rax],al
  444da5:	add    BYTE PTR [rax],al
  444da7:	add    ah,ah
  444da9:	js     0x444daf
  444dab:	add    BYTE PTR [rax],al
  444dad:	add    BYTE PTR [rax],al
  444daf:	add    al,bh
  444db1:	js     0x444db7
  444db3:	add    BYTE PTR [rax],al
  444db5:	add    BYTE PTR [rax],al
  444db7:	add    BYTE PTR [rax],cl
  444db9:	jns    0x444dbf
  444dbb:	add    BYTE PTR [rax],al
  444dbd:	add    BYTE PTR [rax],al
  444dbf:	add    BYTE PTR [rax],ah
  444dc1:	jns    0x444dc7
  444dc3:	add    BYTE PTR [rax],al
  444dc5:	add    BYTE PTR [rax],al
  444dc7:	add    BYTE PTR [rax],bh
  444dc9:	jns    0x444dcf
  444dcb:	add    BYTE PTR [rax],al
  444dcd:	add    BYTE PTR [rax],al
  444dcf:	add    BYTE PTR [rax+0x79],dl
  444dd2:	add    al,0x0
	...
  444de0:	sbb    BYTE PTR [rdx+0x4],0x0
  444de4:	add    BYTE PTR [rax],al
  444de6:	add    BYTE PTR [rax],al
  444de8:	cwde   
  444de9:	pop    rdx
  444dea:	add    al,0x0
  444dec:	add    BYTE PTR [rax],al
  444dee:	add    BYTE PTR [rax],al
  444df0:	mov    al,0x5a
  444df2:	add    al,0x0
  444df4:	add    BYTE PTR [rax],al
  444df6:	add    BYTE PTR [rax],al
  444df8:	mov    esi,0x45a
  444dfd:	add    BYTE PTR [rax],al
  444dff:	add    al,dl
  444e01:	pop    rdx
  444e02:	add    al,0x0
  444e04:	add    BYTE PTR [rax],al
  444e06:	add    BYTE PTR [rax],al
  444e08:	loop   0x444e64
  444e0a:	add    al,0x0
  444e0c:	add    BYTE PTR [rax],al
  444e0e:	add    BYTE PTR [rax],al
  444e10:	neg    BYTE PTR [rdx+0x4]
  444e13:	add    BYTE PTR [rax],al
  444e15:	add    BYTE PTR [rax],al
  444e17:	add    BYTE PTR [rbx+rbx*2],cl
  444e1a:	add    al,0x0
  444e1c:	add    BYTE PTR [rax],al
  444e1e:	add    BYTE PTR [rax],al
  444e20:	and    bl,BYTE PTR [rbx+0x4]
  444e23:	add    BYTE PTR [rax],al
  444e25:	add    BYTE PTR [rax],al
  444e27:	add    BYTE PTR [rdx],dh
  444e29:	pop    rbx
  444e2a:	add    al,0x0
  444e2c:	add    BYTE PTR [rax],al
  444e2e:	add    BYTE PTR [rax],al
  444e30:	rex.W pop rbx
  444e32:	add    al,0x0
  444e34:	add    BYTE PTR [rax],al
  444e36:	add    BYTE PTR [rax],al
  444e38:	pop    rsp
  444e39:	pop    rbx
  444e3a:	add    al,0x0
  444e3c:	add    BYTE PTR [rax],al
  444e3e:	add    BYTE PTR [rax],al
  444e40:	jo     0x444e9d
  444e42:	add    al,0x0
  444e44:	add    BYTE PTR [rax],al
  444e46:	add    BYTE PTR [rax],al
  444e48:	(bad)  
  444e49:	pop    rbx
  444e4a:	add    al,0x0
  444e4c:	add    BYTE PTR [rax],al
  444e4e:	add    BYTE PTR [rax],al
  444e50:	xchg   esp,eax
  444e51:	pop    rbx
  444e52:	add    al,0x0
  444e54:	add    BYTE PTR [rax],al
  444e56:	add    BYTE PTR [rax],al
  444e58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  444e59:	pop    rbx
  444e5a:	add    al,0x0
  444e5c:	add    BYTE PTR [rax],al
  444e5e:	add    BYTE PTR [rax],al
  444e60:	mov    dh,0x5b
  444e62:	add    al,0x0
  444e64:	add    BYTE PTR [rax],al
  444e66:	add    BYTE PTR [rax],al
  444e68:	rcr    BYTE PTR [rbx+0x4],1
  444e6b:	add    BYTE PTR [rax],al
  444e6d:	add    BYTE PTR [rax],al
  444e6f:	add    al,ah
  444e71:	pop    rbx
  444e72:	add    al,0x0
  444e74:	add    BYTE PTR [rax],al
  444e76:	add    BYTE PTR [rax],al
  444e78:	cld    
  444e79:	pop    rbx
  444e7a:	add    al,0x0
  444e7c:	add    BYTE PTR [rax],al
  444e7e:	add    BYTE PTR [rax],al
  444e80:	adc    BYTE PTR [rsp+rax*1+0x0],bl
  444e84:	add    BYTE PTR [rax],al
  444e86:	add    BYTE PTR [rax],al
  444e88:	sub    BYTE PTR [rsp+rax*1+0x0],bl
  444e8c:	add    BYTE PTR [rax],al
  444e8e:	add    BYTE PTR [rax],al
  444e90:	cmp    BYTE PTR [rsp+rax*1+0x0],bl
  444e94:	add    BYTE PTR [rax],al
  444e96:	add    BYTE PTR [rax],al
  444e98:	rex.R pop rsp
  444e9a:	add    al,0x0
  444e9c:	add    BYTE PTR [rax],al
  444e9e:	add    BYTE PTR [rax],al
  444ea0:	pop    rdx
  444ea1:	pop    rsp
  444ea2:	add    al,0x0
  444ea4:	add    BYTE PTR [rax],al
  444ea6:	add    BYTE PTR [rax],al
  444ea8:	push   0x5c
  444eaa:	add    al,0x0
  444eac:	add    BYTE PTR [rax],al
  444eae:	add    BYTE PTR [rax],al
  444eb0:	test   BYTE PTR [rsp+rax*1+0x0],bl
  444eb4:	add    BYTE PTR [rax],al
  444eb6:	add    BYTE PTR [rax],al
  444eb8:	(bad)  
  444eb9:	pop    rsp
  444eba:	add    al,0x0
  444ebc:	add    BYTE PTR [rax],al
  444ebe:	add    BYTE PTR [rax],al
  444ec0:	scas   al,BYTE PTR es:[rdi]
  444ec1:	pop    rsp
  444ec2:	add    al,0x0
  444ec4:	add    BYTE PTR [rax],al
  444ec6:	add    BYTE PTR [rax],al
  444ec8:	enter  0x45c,0x0
  444ecc:	add    BYTE PTR [rax],al
  444ece:	add    BYTE PTR [rax],al
  444ed0:	fcomp  QWORD PTR [rsp+rax*1+0x0]
  444ed4:	add    BYTE PTR [rax],al
  444ed6:	add    BYTE PTR [rax],al
  444ed8:	hlt    
  444ed9:	pop    rsp
  444eda:	add    al,0x0
  444edc:	add    BYTE PTR [rax],al
  444ede:	add    BYTE PTR [rax],al
  444ee0:	or     BYTE PTR [rbp+0x4],bl
  444ee3:	add    BYTE PTR [rax],al
  444ee5:	add    BYTE PTR [rax],al
  444ee7:	add    BYTE PTR [rsi],ah
  444ee9:	pop    rbp
  444eea:	add    al,0x0
  444eec:	add    BYTE PTR [rax],al
  444eee:	add    BYTE PTR [rax],al
  444ef0:	cs pop rbp
  444ef2:	add    al,0x0
  444ef4:	add    BYTE PTR [rax],al
  444ef6:	add    BYTE PTR [rax],al
  444ef8:	rex.X pop rbp
  444efa:	add    al,0x0
  444efc:	add    BYTE PTR [rax],al
  444efe:	add    BYTE PTR [rax],al
  444f00:	push   rax
  444f01:	pop    rbp
  444f02:	add    al,0x0
  444f04:	add    BYTE PTR [rax],al
  444f06:	add    BYTE PTR [rax],al
  444f08:	ins    BYTE PTR es:[rdi],dx
  444f09:	pop    rbp
  444f0a:	add    al,0x0
  444f0c:	add    BYTE PTR [rax],al
  444f0e:	add    BYTE PTR [rax],al
  444f10:	jle    0x444f6f
  444f12:	add    al,0x0
  444f14:	add    BYTE PTR [rax],al
  444f16:	add    BYTE PTR [rax],al
  444f18:	mov    ds,WORD PTR [rbp+0x4]
	...
  444f27:	add    BYTE PTR [rbp+rbx*2+0x4],ah
  444f2e:	add    BYTE PTR [rax],al
  444f30:	mov    esp,0x45d
  444f35:	add    BYTE PTR [rax],al
  444f37:	add    dl,dl
  444f39:	pop    rbp
  444f3a:	add    al,0x0
  444f3c:	add    BYTE PTR [rax],al
  444f3e:	add    BYTE PTR [rax],al
  444f40:	loopne 0x444f9f
  444f42:	add    al,0x0
  444f44:	add    BYTE PTR [rax],al
  444f46:	add    BYTE PTR [rax],al
  444f48:	lock pop rbp
  444f4a:	add    al,0x0
  444f4c:	add    BYTE PTR [rax],al
  444f4e:	add    BYTE PTR [rax],al
  444f50:	cld    
  444f51:	pop    rbp
  444f52:	add    al,0x0
  444f54:	add    BYTE PTR [rax],al
  444f56:	add    BYTE PTR [rax],al
  444f58:	or     bl,BYTE PTR [rsi+0x4]
  444f5b:	add    BYTE PTR [rax],al
  444f5d:	add    BYTE PTR [rax],al
  444f5f:	add    BYTE PTR [rdx],bl
  444f61:	pop    rsi
  444f62:	add    al,0x0
  444f64:	add    BYTE PTR [rax],al
  444f66:	add    BYTE PTR [rax],al
  444f68:	sub    bl,BYTE PTR [rsi+0x4]
  444f6b:	add    BYTE PTR [rax],al
  444f6d:	add    BYTE PTR [rax],al
  444f6f:	add    BYTE PTR [rsi+rbx*2],bh
  444f72:	add    al,0x0
  444f74:	add    BYTE PTR [rax],al
  444f76:	add    BYTE PTR [rax],al
  444f78:	push   rax
  444f79:	pop    rsi
  444f7a:	add    al,0x0
  444f7c:	add    BYTE PTR [rax],al
  444f7e:	add    BYTE PTR [rax],al
  444f80:	pop    rdx
  444f81:	pop    rsi
  444f82:	add    al,0x0
  444f84:	add    BYTE PTR [rax],al
  444f86:	add    BYTE PTR [rax],al
  444f88:	push   0x45e
  444f8d:	add    BYTE PTR [rax],al
  444f8f:	add    BYTE PTR [rdx+0x5e],dh
  444f92:	add    al,0x0
  444f94:	add    BYTE PTR [rax],al
  444f96:	add    BYTE PTR [rax],al
  444f98:	jl     0x444ff8
  444f9a:	add    al,0x0
  444f9c:	add    BYTE PTR [rax],al
  444f9e:	add    BYTE PTR [rax],al
  444fa0:	xchg   BYTE PTR [rsi+0x4],bl
  444fa3:	add    BYTE PTR [rax],al
  444fa5:	add    BYTE PTR [rax],al
  444fa7:	add    BYTE PTR [rdx+0x45e],dl
  444fad:	add    BYTE PTR [rax],al
  444faf:	add    BYTE PTR [rsi+0x45e],bl
  444fb5:	add    BYTE PTR [rax],al
  444fb7:	add    BYTE PTR [rsi+0x45e],ch
  444fbd:	add    BYTE PTR [rax],al
  444fbf:	add    BYTE PTR [rsi+0x45e],dh
  444fc5:	add    BYTE PTR [rax],al
  444fc7:	add    al,al
  444fc9:	pop    rsi
  444fca:	add    al,0x0
  444fcc:	add    BYTE PTR [rax],al
  444fce:	add    BYTE PTR [rax],al
  444fd0:	retf   0x45e
  444fd3:	add    BYTE PTR [rax],al
  444fd5:	add    BYTE PTR [rax],al
  444fd7:	add    ah,dl
  444fd9:	pop    rsi
  444fda:	add    al,0x0
  444fdc:	add    BYTE PTR [rax],al
  444fde:	add    BYTE PTR [rax],al
  444fe0:	fcomp  QWORD PTR [rsi+0x4]
  444fe3:	add    BYTE PTR [rax],al
  444fe5:	add    BYTE PTR [rax],al
  444fe7:	add    ah,ah
  444fe9:	pop    rsi
  444fea:	add    al,0x0
  444fec:	add    BYTE PTR [rax],al
  444fee:	add    BYTE PTR [rax],al
  444ff0:	out    dx,al
  444ff1:	pop    rsi
  444ff2:	add    al,0x0
  444ff4:	add    BYTE PTR [rax],al
  444ff6:	add    BYTE PTR [rax],al
  444ff8:	neg    BYTE PTR [rsi+0x4]
  444ffb:	add    BYTE PTR [rax],al
  444ffd:	add    BYTE PTR [rax],al
  444fff:	add    BYTE PTR [rax],al
  445001:	pop    rdi
  445002:	add    al,0x0
  445004:	add    BYTE PTR [rax],al
  445006:	add    BYTE PTR [rax],al
  445008:	or     bl,BYTE PTR [rdi+0x4]
  44500b:	add    BYTE PTR [rax],al
  44500d:	add    BYTE PTR [rax],al
  44500f:	add    BYTE PTR [rdx],dl
  445011:	pop    rdi
  445012:	add    al,0x0
  445014:	add    BYTE PTR [rax],al
  445016:	add    BYTE PTR [rax],al
  445018:	sbb    bl,BYTE PTR [rdi+0x4]
  44501b:	add    BYTE PTR [rax],al
  44501d:	add    BYTE PTR [rax],al
  44501f:	add    BYTE PTR [rdi+rbx*2],ah
  445022:	add    al,0x0
  445024:	add    BYTE PTR [rax],al
  445026:	add    BYTE PTR [rax],al
  445028:	sub    al,0x5f
  44502a:	add    al,0x0
  44502c:	add    BYTE PTR [rax],al
  44502e:	add    BYTE PTR [rax],al
  445030:	xor    al,0x5f
  445032:	add    al,0x0
  445034:	add    BYTE PTR [rax],al
  445036:	add    BYTE PTR [rax],al
  445038:	cmp    al,0x5f
  44503a:	add    al,0x0
  44503c:	add    BYTE PTR [rax],al
  44503e:	add    BYTE PTR [rax],al
  445040:	rex.RX pop rdi
  445042:	add    al,0x0
  445044:	add    BYTE PTR [rax],al
  445046:	add    BYTE PTR [rax],al
  445048:	rex.WRX pop rdi
  44504a:	add    al,0x0
  44504c:	add    BYTE PTR [rax],al
  44504e:	add    BYTE PTR [rax],al
  445050:	pop    rax
  445051:	pop    rdi
  445052:	add    al,0x0
  445054:	add    BYTE PTR [rax],al
  445056:	add    BYTE PTR [rax],al
  445058:	(bad)  
  445059:	pop    rdi
  44505a:	add    al,0x0
  44505c:	add    BYTE PTR [rax],al
  44505e:	add    BYTE PTR [rax],al
  445060:	ins    BYTE PTR es:[rdi],dx
  445061:	pop    rdi
  445062:	add    al,0x0
  445064:	add    BYTE PTR [rax],al
  445066:	add    BYTE PTR [rax],al
  445068:	jbe    0x4450c9
  44506a:	add    al,0x0
  44506c:	add    BYTE PTR [rax],al
  44506e:	add    BYTE PTR [rax],al
  445070:	sbb    BYTE PTR [rdi+0x4],0x0
  445074:	add    BYTE PTR [rax],al
  445076:	add    BYTE PTR [rax],al
  445078:	mov    WORD PTR [rdi+0x4],ds
  44507b:	add    BYTE PTR [rax],al
  44507d:	add    BYTE PTR [rax],al
  44507f:	add    BYTE PTR [rdx+0x45f],bl
  445085:	add    BYTE PTR [rax],al
  445087:	add    BYTE PTR [rdi+rbx*2+0x4],ah
  44508e:	add    BYTE PTR [rax],al
  445090:	scas   al,BYTE PTR es:[rdi]
  445091:	pop    rdi
  445092:	add    al,0x0
  445094:	add    BYTE PTR [rax],al
  445096:	add    BYTE PTR [rax],al
  445098:	mov    eax,0x45f
  44509d:	add    BYTE PTR [rax],al
  44509f:	add    dl,al
  4450a1:	pop    rdi
  4450a2:	add    al,0x0
  4450a4:	add    BYTE PTR [rax],al
  4450a6:	add    BYTE PTR [rax],al
  4450a8:	int3   
  4450a9:	pop    rdi
  4450aa:	add    al,0x0
  4450ac:	add    BYTE PTR [rax],al
  4450ae:	add    BYTE PTR [rax],al
  4450b0:	(bad)  
  4450b1:	pop    rdi
  4450b2:	add    al,0x0
  4450b4:	add    BYTE PTR [rax],al
  4450b6:	add    BYTE PTR [rax],al
  4450b8:	ficomp WORD PTR [rdi+0x4]
  4450bb:	add    BYTE PTR [rax],al
  4450bd:	add    BYTE PTR [rax],al
  4450bf:	add    al,ch
  4450c1:	pop    rdi
  4450c2:	add    al,0x0
  4450c4:	add    BYTE PTR [rax],al
  4450c6:	add    BYTE PTR [rax],al
  4450c8:	repnz pop rdi
  4450ca:	add    al,0x0
  4450cc:	add    BYTE PTR [rax],al
  4450ce:	add    BYTE PTR [rax],al
  4450d0:	cld    
  4450d1:	pop    rdi
  4450d2:	add    al,0x0
  4450d4:	add    BYTE PTR [rax],al
  4450d6:	add    BYTE PTR [rax],al
  4450d8:	(bad)  
  4450d9:	(bad)  
  4450da:	add    al,0x0
  4450dc:	add    BYTE PTR [rax],al
  4450de:	add    BYTE PTR [rax],al
  4450e0:	adc    BYTE PTR [rax+0x4],ah
  4450e3:	add    BYTE PTR [rax],al
  4450e5:	add    BYTE PTR [rax],al
  4450e7:	add    BYTE PTR [rdx],bl
  4450e9:	(bad)  
  4450ea:	add    al,0x0
  4450ec:	add    BYTE PTR [rax],al
  4450ee:	add    BYTE PTR [rax],al
  4450f0:	es (bad) 
  4450f2:	add    al,0x0
  4450f4:	add    BYTE PTR [rax],al
  4450f6:	add    BYTE PTR [rax],al
  4450f8:	xor    ah,BYTE PTR [rax+0x4]
  4450fb:	add    BYTE PTR [rax],al
  4450fd:	add    BYTE PTR [rax],al
  4450ff:	add    BYTE PTR [rax+riz*2],bh
  445102:	add    al,0x0
  445104:	add    BYTE PTR [rax],al
  445106:	add    BYTE PTR [rax],al
  445108:	rex.RX (bad) 
  44510a:	add    al,0x0
  44510c:	add    BYTE PTR [rax],al
  44510e:	add    BYTE PTR [rax],al
  445110:	push   rax
  445111:	(bad)  
  445112:	add    al,0x0
  445114:	add    BYTE PTR [rax],al
  445116:	add    BYTE PTR [rax],al
  445118:	pop    rdx
  445119:	(bad)  
  44511a:	add    al,0x0
  44511c:	add    BYTE PTR [rax],al
  44511e:	add    BYTE PTR [rax],al
  445120:	fs (bad) 
  445122:	add    al,0x0
  445124:	add    BYTE PTR [rax],al
  445126:	add    BYTE PTR [rax],al
  445128:	outs   dx,BYTE PTR ds:[rsi]
  445129:	(bad)  
  44512a:	add    al,0x0
  44512c:	add    BYTE PTR [rax],al
  44512e:	add    BYTE PTR [rax],al
  445130:	js     0x445192
  445132:	add    al,0x0
  445134:	add    BYTE PTR [rax],al
  445136:	add    BYTE PTR [rax],al
  445138:	(bad)  
  445139:	(bad)  
  44513a:	add    al,0x0
  44513c:	add    BYTE PTR [rax],al
  44513e:	add    BYTE PTR [rax],al
  445140:	mov    WORD PTR [rax+0x4],fs
  445143:	add    BYTE PTR [rax],al
  445145:	add    BYTE PTR [rax],al
  445147:	add    BYTE PTR [rsi+0x460],dl
  44514d:	add    BYTE PTR [rax],al
  44514f:	add    BYTE PTR [rdx+0x460],ah
  445155:	add    BYTE PTR [rax],al
  445157:	add    BYTE PTR [rax+riz*2+0x4],ch
  44515e:	add    BYTE PTR [rax],al
  445160:	mov    dh,0x60
  445162:	add    al,0x0
  445164:	add    BYTE PTR [rax],al
  445166:	add    BYTE PTR [rax],al
  445168:	mov    esi,0x460
  44516d:	add    BYTE PTR [rax],al
  44516f:	add    al,cl
  445171:	(bad)  
  445172:	add    al,0x0
	...
  445180:	shl    BYTE PTR [rax+0x4],cl
	...
  44518f:	add    dl,ah
  445191:	(bad)  
  445192:	add    al,0x0
	...
  4451a0:	cli    
  4451a1:	(bad)  
  4451a2:	add    al,0x0
	...
  4451b0:	adc    BYTE PTR [rcx+0x4],ah
	...
  4451bf:	add    BYTE PTR [rcx+riz*2],ah
  4451c2:	add    al,0x0
  4451c4:	add    BYTE PTR [rax],al
  4451c6:	add    BYTE PTR [rax],al
  4451c8:	rex (bad) 
  4451ca:	add    al,0x0
  4451cc:	add    BYTE PTR [rax],al
  4451ce:	add    BYTE PTR [rax],al
  4451d0:	(bad)  
  4451d1:	(bad)  
  4451d2:	add    al,0x0
  4451d4:	add    BYTE PTR [rax],al
  4451d6:	add    BYTE PTR [rax],al
  4451d8:	jl     0x44523b
  4451da:	add    al,0x0
  4451dc:	add    BYTE PTR [rax],al
  4451de:	add    BYTE PTR [rax],al
  4451e0:	cwde   
  4451e1:	(bad)  
  4451e2:	add    al,0x0
  4451e4:	add    BYTE PTR [rax],al
  4451e6:	add    BYTE PTR [rax],al
  4451e8:	mov    al,0x61
  4451ea:	add    al,0x0
  4451ec:	add    BYTE PTR [rax],al
  4451ee:	add    BYTE PTR [rax],al
  4451f0:	enter  0x461,0x0
  4451f4:	add    BYTE PTR [rax],al
  4451f6:	add    BYTE PTR [rax],al
  4451f8:	loopne 0x44525b
  4451fa:	add    al,0x0
  4451fc:	add    BYTE PTR [rax],al
  4451fe:	add    BYTE PTR [rax],al
  445200:	lock (bad) 
  445202:	add    al,0x0
  445204:	add    BYTE PTR [rax],al
  445206:	add    BYTE PTR [rax],al
  445208:	adc    al,0x62
  44520a:	add    al,0x0
  44520c:	add    BYTE PTR [rax],al
  44520e:	add    BYTE PTR [rax],al
  445210:	xor    BYTE PTR [rdx+0x4],ah
  445213:	add    BYTE PTR [rax],al
  445215:	add    BYTE PTR [rax],al
  445217:	add    BYTE PTR [rdx+riz*2+0x4],al
  44521b:	add    BYTE PTR [rax],al
  44521d:	add    BYTE PTR [rax],al
  44521f:	add    BYTE PTR [rdx+riz*2+0x4],ah
  445223:	add    BYTE PTR [rax],al
  445225:	add    BYTE PTR [rax],al
  445227:	add    BYTE PTR [rdx+riz*2+0x4],al
  44522e:	add    BYTE PTR [rax],al
  445230:	cwde   
  445231:	(bad)  
  445232:	add    al,0x0
  445234:	add    BYTE PTR [rax],al
  445236:	add    BYTE PTR [rax],al
  445238:	mov    ah,0x62
  44523a:	add    al,0x0
  44523c:	add    BYTE PTR [rax],al
  44523e:	add    BYTE PTR [rax],al
  445240:	shl    BYTE PTR [rdx+0x4],1
  445243:	add    BYTE PTR [rax],al
  445245:	add    BYTE PTR [rax],al
  445247:	add    al,ch
  445249:	(bad)  
  44524a:	add    al,0x0
  44524c:	add    BYTE PTR [rax],al
  44524e:	add    BYTE PTR [rax],al
  445250:	add    al,0x63
  445252:	add    al,0x0
  445254:	add    BYTE PTR [rax],al
  445256:	add    BYTE PTR [rax],al
  445258:	sbb    BYTE PTR [rbx+0x4],ah
  44525b:	add    BYTE PTR [rax],al
  44525d:	add    BYTE PTR [rax],al
  44525f:	add    BYTE PTR [rbx+riz*2],ch
  445262:	add    al,0x0
  445264:	add    BYTE PTR [rax],al
  445266:	add    BYTE PTR [rax],al
  445268:	rex movsxd eax,DWORD PTR [rax+rax*1]
  44526c:	add    BYTE PTR [rax],al
  44526e:	add    BYTE PTR [rax],al
  445270:	pop    rsp
  445271:	movsxd eax,DWORD PTR [rax+rax*1]
  445274:	add    BYTE PTR [rax],al
  445276:	add    BYTE PTR [rax],al
  445278:	ins    BYTE PTR es:[rdi],dx
  445279:	movsxd eax,DWORD PTR [rax+rax*1]
  44527c:	add    BYTE PTR [rax],al
  44527e:	add    BYTE PTR [rax],al
  445280:	test   BYTE PTR [rbx+0x4],ah
  445283:	add    BYTE PTR [rax],al
  445285:	add    BYTE PTR [rax],al
  445287:	add    BYTE PTR [rbx+riz*2+0x4],bl
  44528e:	add    BYTE PTR [rax],al
  445290:	mov    ah,0x63
  445292:	add    al,0x0
  445294:	add    BYTE PTR [rax],al
  445296:	add    BYTE PTR [rax],al
  445298:	shl    BYTE PTR [rbx+0x4],1
  44529b:	add    BYTE PTR [rax],al
  44529d:	add    BYTE PTR [rax],al
  44529f:	add    al,ch
  4452a1:	movsxd eax,DWORD PTR [rax+rax*1]
  4452a4:	add    BYTE PTR [rax],al
  4452a6:	add    BYTE PTR [rax],al
  4452a8:	or     BYTE PTR [rsp+rax*1+0x0],ah
  4452ac:	add    BYTE PTR [rax],al
  4452ae:	add    BYTE PTR [rax],al
  4452b0:	and    al,0x64
  4452b2:	add    al,0x0
  4452b4:	add    BYTE PTR [rax],al
  4452b6:	add    BYTE PTR [rax],al
  4452b8:	rex.W
  4452b9:	fs add al,0x0
  4452bc:	add    BYTE PTR [rax],al
  4452be:	add    BYTE PTR [rax],al
  4452c0:	fs fs add al,0x0
  4452c4:	add    BYTE PTR [rax],al
  4452c6:	add    BYTE PTR [rax],al
  4452c8:	jl     0x44532e
  4452ca:	add    al,0x0
  4452cc:	add    BYTE PTR [rax],al
  4452ce:	add    BYTE PTR [rax],al
  4452d0:	cwde   
  4452d1:	fs add al,0x0
  4452d4:	add    BYTE PTR [rax],al
  4452d6:	add    BYTE PTR [rax],al
  4452d8:	mov    al,0x64
  4452da:	add    al,0x0
  4452dc:	add    BYTE PTR [rax],al
  4452de:	add    BYTE PTR [rax],al
  4452e0:	(bad)  
  4452e1:	fs add al,0x0
  4452e4:	add    BYTE PTR [rax],al
  4452e6:	add    BYTE PTR [rax],al
  4452e8:	in     al,dx
  4452e9:	fs add al,0x0
  4452ec:	add    BYTE PTR [rax],al
  4452ee:	add    BYTE PTR [rax],al
  4452f0:	or     al,0x65
  4452f2:	add    al,0x0
  4452f4:	add    BYTE PTR [rax],al
  4452f6:	add    BYTE PTR [rax],al
  4452f8:	and    al,0x65
  4452fa:	add    al,0x0
  4452fc:	add    BYTE PTR [rax],al
  4452fe:	add    BYTE PTR [rax],al
  445300:	rex.R
  445301:	gs add al,0x0
  445304:	add    BYTE PTR [rax],al
  445306:	add    BYTE PTR [rax],al
  445308:	pop    rsp
  445309:	gs add al,0x0
  44530c:	add    BYTE PTR [rax],al
  44530e:	add    BYTE PTR [rax],al
  445310:	jo     0x445377
  445312:	add    al,0x0
  445314:	add    BYTE PTR [rax],al
  445316:	add    BYTE PTR [rax],al
  445318:	nop
  445319:	gs add al,0x0
  44531c:	add    BYTE PTR [rax],al
  44531e:	add    BYTE PTR [rax],al
  445320:	lods   al,BYTE PTR ds:[rsi]
  445321:	gs add al,0x0
  445324:	add    BYTE PTR [rax],al
  445326:	add    BYTE PTR [rax],al
  445328:	shl    BYTE PTR [rbp+0x4],0x0
  44532c:	add    BYTE PTR [rax],al
  44532e:	add    BYTE PTR [rax],al
  445330:	shl    BYTE PTR [rbp+0x4],1
  445333:	add    BYTE PTR [rax],al
  445335:	add    BYTE PTR [rax],al
  445337:	add    al,ch
  445339:	gs add al,0x0
  44533c:	add    BYTE PTR [rax],al
  44533e:	add    BYTE PTR [rax],al
  445340:	cld    
  445341:	gs add al,0x0
  445344:	add    BYTE PTR [rax],al
  445346:	add    BYTE PTR [rax],al
  445348:	adc    BYTE PTR [rsi+0x4],ah
	...
  445357:	add    BYTE PTR [rsi+riz*2],ah
  44535a:	add    al,0x0
  44535c:	add    BYTE PTR [rax],al
  44535e:	add    BYTE PTR [rax],al
  445360:	rex.R
  445361:	data16 add al,0x0
  445364:	add    BYTE PTR [rax],al
  445366:	add    BYTE PTR [rax],al
  445368:	fs data16 add al,0x0
  44536c:	add    BYTE PTR [rax],al
  44536e:	add    BYTE PTR [rax],al
  445370:	test   BYTE PTR [rsi+0x4],ah
  445373:	add    BYTE PTR [rax],al
  445375:	add    BYTE PTR [rax],al
  445377:	add    BYTE PTR [rsi+riz*2+0x4],ah
  44537e:	add    BYTE PTR [rax],al
  445380:	shl    BYTE PTR [rsi+0x4],0x0
  445384:	add    BYTE PTR [rax],al
  445386:	add    BYTE PTR [rax],al
  445388:	loopne 0x4453f0
  44538a:	add    al,0x0
  44538c:	add    BYTE PTR [rax],al
  44538e:	add    BYTE PTR [rax],al
  445390:	add    BYTE PTR [rdi+0x4],ah
  445393:	add    BYTE PTR [rax],al
  445395:	add    BYTE PTR [rax],al
  445397:	add    BYTE PTR [rax],ah
  445399:	addr32 add al,0x0
  44539c:	add    BYTE PTR [rax],al
  44539e:	add    BYTE PTR [rax],al
  4453a0:	cmp    BYTE PTR [rdi+0x4],ah
	...
  4453af:	add    BYTE PTR [rdi+riz*2+0x4],cl
  4453b3:	add    BYTE PTR [rax],al
  4453b5:	add    BYTE PTR [rax],al
  4453b7:	add    BYTE PTR [rdi+riz*2+0x4],ch
  4453bb:	add    BYTE PTR [rax],al
  4453bd:	add    BYTE PTR [rax],al
  4453bf:	add    BYTE PTR [rdi+riz*2+0x4],cl
  4453c6:	add    BYTE PTR [rax],al
  4453c8:	lods   al,BYTE PTR ds:[rsi]
  4453c9:	addr32 add al,0x0
  4453cc:	add    BYTE PTR [rax],al
  4453ce:	add    BYTE PTR [rax],al
  4453d0:	enter  0x467,0x0
  4453d4:	add    BYTE PTR [rax],al
  4453d6:	add    BYTE PTR [rax],al
  4453d8:	call   0x445844
  4453dd:	add    BYTE PTR [rax],al
  4453df:	add    BYTE PTR [rax],dl
  4453e1:	push   0x4
  4453e6:	add    BYTE PTR [rax],al
  4453e8:	sub    al,0x68
  4453ea:	add    al,0x0
  4453ec:	add    BYTE PTR [rax],al
  4453ee:	add    BYTE PTR [rax],al
  4453f0:	rex.R push 0x4
  4453f6:	add    BYTE PTR [rax],al
  4453f8:	pop    rsp
  4453f9:	push   0x4
  4453fe:	add    BYTE PTR [rax],al
  445400:	je     0x44546a
  445402:	add    al,0x0
  445404:	add    BYTE PTR [rax],al
  445406:	add    BYTE PTR [rax],al
  445408:	xchg   esp,eax
  445409:	push   0x4
  44540e:	add    BYTE PTR [rax],al
  445410:	lods   al,BYTE PTR ds:[rsi]
  445411:	push   0x4
  445416:	add    BYTE PTR [rax],al
  445418:	int3   
  445419:	push   0x4
  44541e:	add    BYTE PTR [rax],al
  445420:	in     al,0x68
  445422:	add    al,0x0
  445424:	add    BYTE PTR [rax],al
  445426:	add    BYTE PTR [rax],al
  445428:	cld    
  445429:	push   0x4
  44542e:	add    BYTE PTR [rax],al
  445430:	sbb    al,0x69
  445432:	add    al,0x0
  445434:	add    BYTE PTR [rax],al
  445436:	add    BYTE PTR [rax],al
  445438:	cmp    al,0x69
  44543a:	add    al,0x0
  44543c:	add    BYTE PTR [rax],al
  44543e:	add    BYTE PTR [rax],al
  445440:	pop    rsp
  445441:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445448:	sub    BYTE PTR [rcx+0x4],0x0
  44544c:	add    BYTE PTR [rax],al
  44544e:	add    BYTE PTR [rax],al
  445450:	xchg   esp,eax
  445451:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445458:	lods   al,BYTE PTR ds:[rsi]
  445459:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445460:	mov    esp,0x469
  445465:	add    BYTE PTR [rax],al
  445467:	add    ah,bl
  445469:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445470:	in     al,dx
  445471:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445478:	add    al,0x6a
  44547a:	add    al,0x0
  44547c:	add    BYTE PTR [rax],al
  44547e:	add    BYTE PTR [rax],al
  445480:	sbb    al,0x6a
  445482:	add    al,0x0
  445484:	add    BYTE PTR [rax],al
  445486:	add    BYTE PTR [rax],al
  445488:	xor    al,0x6a
  44548a:	add    al,0x0
  44548c:	add    BYTE PTR [rax],al
  44548e:	add    BYTE PTR [rax],al
  445490:	rex.WR push 0x4
	...
  44549f:	add    BYTE PTR [rax+0x6a],ah
  4454a2:	add    al,0x0
  4454a4:	add    BYTE PTR [rax],al
  4454a6:	add    BYTE PTR [rax],al
  4454a8:	je     0x445514
  4454aa:	add    al,0x0
  4454ac:	add    BYTE PTR [rax],al
  4454ae:	add    BYTE PTR [rax],al
  4454b0:	mov    BYTE PTR [rdx+0x4],ch
  4454b3:	add    BYTE PTR [rax],al
  4454b5:	add    BYTE PTR [rax],al
  4454b7:	add    BYTE PTR [rdx+rbp*2+0x4],bl
  4454be:	add    BYTE PTR [rax],al
  4454c0:	mov    eax,0x46a
  4454c5:	add    BYTE PTR [rax],al
  4454c7:	add    al,dl
  4454c9:	push   0x4
  4454cb:	add    BYTE PTR [rax],al
  4454cd:	add    BYTE PTR [rax],al
  4454cf:	add    ah,ch
  4454d1:	push   0x4
  4454d3:	add    BYTE PTR [rax],al
  4454d5:	add    BYTE PTR [rax],al
  4454d7:	add    BYTE PTR [rax],cl
  4454d9:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4454dd:	add    BYTE PTR [rax],al
  4454df:	add    BYTE PTR [rax],ch
  4454e1:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4454e5:	add    BYTE PTR [rax],al
  4454e7:	add    BYTE PTR [rbx+rbp*2+0x4],al
  4454eb:	add    BYTE PTR [rax],al
  4454ed:	add    BYTE PTR [rax],al
  4454ef:	add    BYTE PTR [rax+0x6b],bl
  4454f2:	add    al,0x0
  4454f4:	add    BYTE PTR [rax],al
  4454f6:	add    BYTE PTR [rax],al
  4454f8:	ins    BYTE PTR es:[rdi],dx
  4454f9:	imul   eax,DWORD PTR [rax+rax*1],0x0
  4454fd:	add    BYTE PTR [rax],al
  4454ff:	add    BYTE PTR [rbx+rbp*2+0x4],al
  445506:	add    BYTE PTR [rax],al
  445508:	cwde   
  445509:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44550d:	add    BYTE PTR [rax],al
  44550f:	add    BYTE PTR [rax+0x46b],bh
  445515:	add    BYTE PTR [rax],al
  445517:	add    ah,cl
  445519:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44551d:	add    BYTE PTR [rax],al
  44551f:	add    al,ah
  445521:	imul   eax,DWORD PTR [rax+rax*1],0x0
  445525:	add    BYTE PTR [rax],al
  445527:	add    al,dh
  445529:	imul   eax,DWORD PTR [rax+rax*1],0x0
  44552d:	add    BYTE PTR [rax],al
  44552f:	add    BYTE PTR [rsp+rbp*2],al
  445532:	add    al,0x0
  445534:	add    BYTE PTR [rax],al
  445536:	add    BYTE PTR [rax],al
  445538:	adc    al,0x6c
  44553a:	add    al,0x0
  44553c:	add    BYTE PTR [rax],al
  44553e:	add    BYTE PTR [rax],al
  445540:	sub    al,0x6c
  445542:	add    al,0x0
  445544:	add    BYTE PTR [rax],al
  445546:	add    BYTE PTR [rax],al
  445548:	rex.R ins BYTE PTR es:[rdi],dx
  44554a:	add    al,0x0
  44554c:	add    BYTE PTR [rax],al
  44554e:	add    BYTE PTR [rax],al
  445550:	js     0x4455be
  445552:	add    al,0x0
  445554:	add    BYTE PTR [rax],al
  445556:	add    BYTE PTR [rax],al
  445558:	xchg   esp,eax
  445559:	ins    BYTE PTR es:[rdi],dx
  44555a:	add    al,0x0
  44555c:	add    BYTE PTR [rax],al
  44555e:	add    BYTE PTR [rax],al
  445560:	test   al,0x6c
  445562:	add    al,0x0
  445564:	add    BYTE PTR [rax],al
  445566:	add    BYTE PTR [rax],al
  445568:	(bad)  
  445569:	ins    BYTE PTR es:[rdi],dx
  44556a:	add    al,0x0
  44556c:	add    BYTE PTR [rax],al
  44556e:	add    BYTE PTR [rax],al
  445570:	call   0x4459e1
  445575:	add    BYTE PTR [rax],al
  445577:	add    BYTE PTR [rax],al
  445579:	ins    DWORD PTR es:[rdi],dx
  44557a:	add    al,0x0
  44557c:	add    BYTE PTR [rax],al
  44557e:	add    BYTE PTR [rax],al
  445580:	sbb    al,0x6d
  445582:	add    al,0x0
  445584:	add    BYTE PTR [rax],al
  445586:	add    BYTE PTR [rax],al
  445588:	cmp    BYTE PTR [rbp+0x4],ch
  44558b:	add    BYTE PTR [rax],al
  44558d:	add    BYTE PTR [rax],al
  44558f:	add    BYTE PTR [rax+0x6d],dl
  445592:	add    al,0x0
  445594:	add    BYTE PTR [rax],al
  445596:	add    BYTE PTR [rax],al
  445598:	push   0x46d
  44559d:	add    BYTE PTR [rax],al
  44559f:	add    BYTE PTR [rbp+rbp*2+0x4],cl
  4455a6:	add    BYTE PTR [rax],al
  4455a8:	test   al,0x6d
  4455aa:	add    al,0x0
  4455ac:	add    BYTE PTR [rax],al
  4455ae:	add    BYTE PTR [rax],al
  4455b0:	shr    BYTE PTR [rbp+0x4],0x0
  4455b4:	add    BYTE PTR [rax],al
  4455b6:	add    BYTE PTR [rax],al
  4455b8:	fsubr  DWORD PTR [rbp+0x4]
  4455bb:	add    BYTE PTR [rax],al
  4455bd:	add    BYTE PTR [rax],al
  4455bf:	add    al,dh
  4455c1:	ins    DWORD PTR es:[rdi],dx
  4455c2:	add    al,0x0
  4455c4:	add    BYTE PTR [rax],al
  4455c6:	add    BYTE PTR [rax],al
  4455c8:	or     BYTE PTR [rsi+0x4],ch
  4455cb:	add    BYTE PTR [rax],al
  4455cd:	add    BYTE PTR [rax],al
  4455cf:	add    BYTE PTR [rax],ah
  4455d1:	outs   dx,BYTE PTR ds:[rsi]
  4455d2:	add    al,0x0
  4455d4:	add    BYTE PTR [rax],al
  4455d6:	add    BYTE PTR [rax],al
  4455d8:	xor    al,0x6e
  4455da:	add    al,0x0
  4455dc:	add    BYTE PTR [rax],al
  4455de:	add    BYTE PTR [rax],al
  4455e0:	rex.WR outs dx,BYTE PTR ds:[rsi]
  4455e2:	add    al,0x0
  4455e4:	add    BYTE PTR [rax],al
  4455e6:	add    BYTE PTR [rax],al
  4455e8:	pop    rsp
  4455e9:	outs   dx,BYTE PTR ds:[rsi]
  4455ea:	add    al,0x0
  4455ec:	add    BYTE PTR [rax],al
  4455ee:	add    BYTE PTR [rax],al
  4455f0:	ins    BYTE PTR es:[rdi],dx
  4455f1:	outs   dx,BYTE PTR ds:[rsi]
  4455f2:	add    al,0x0
  4455f4:	add    BYTE PTR [rax],al
  4455f6:	add    BYTE PTR [rax],al
  4455f8:	test   BYTE PTR [rsi+0x4],ch
  4455fb:	add    BYTE PTR [rax],al
  4455fd:	add    BYTE PTR [rax],al
  4455ff:	add    BYTE PTR [rsi+rbp*2+0x4],dl
  445606:	add    BYTE PTR [rax],al
  445608:	lods   al,BYTE PTR ds:[rsi]
  445609:	outs   dx,BYTE PTR ds:[rsi]
  44560a:	add    al,0x0
  44560c:	add    BYTE PTR [rax],al
  44560e:	add    BYTE PTR [rax],al
  445610:	enter  0x46e,0x0
  445614:	add    BYTE PTR [rax],al
  445616:	add    BYTE PTR [rax],al
  445618:	fsubr  DWORD PTR [rsi+0x4]
  44561b:	add    BYTE PTR [rax],al
  44561d:	add    BYTE PTR [rax],al
  44561f:	add    ah,ah
  445621:	outs   dx,BYTE PTR ds:[rsi]
  445622:	add    al,0x0
  445624:	add    BYTE PTR [rax],al
  445626:	add    BYTE PTR [rax],al
  445628:	hlt    
  445629:	outs   dx,BYTE PTR ds:[rsi]
  44562a:	add    al,0x0
  44562c:	add    BYTE PTR [rax],al
  44562e:	add    BYTE PTR [rax],al
  445630:	or     BYTE PTR [rdi+0x4],ch
  445633:	add    BYTE PTR [rax],al
  445635:	add    BYTE PTR [rax],al
  445637:	add    BYTE PTR [rax],bl
  445639:	outs   dx,DWORD PTR ds:[rsi]
  44563a:	add    al,0x0
  44563c:	add    BYTE PTR [rax],al
  44563e:	add    BYTE PTR [rax],al
  445640:	and    al,0x6f
  445642:	add    al,0x0
  445644:	add    BYTE PTR [rax],al
  445646:	add    BYTE PTR [rax],al
  445648:	xor    BYTE PTR [rdi+0x4],ch
  44564b:	add    BYTE PTR [rax],al
  44564d:	add    BYTE PTR [rax],al
  44564f:	add    BYTE PTR [rdi+rbp*2],bh
  445652:	add    al,0x0
  445654:	add    BYTE PTR [rax],al
  445656:	add    BYTE PTR [rax],al
  445658:	rex.W outs dx,DWORD PTR ds:[rsi]
  44565a:	add    al,0x0
  44565c:	add    BYTE PTR [rax],al
  44565e:	add    BYTE PTR [rax],al
  445660:	push   rsp
  445661:	outs   dx,DWORD PTR ds:[rsi]
  445662:	add    al,0x0
	...
  445670:	outs   dx,DWORD PTR fs:[rsi]
  445672:	add    al,0x0
  445674:	add    BYTE PTR [rax],al
  445676:	add    BYTE PTR [rax],al
  445678:	sub    BYTE PTR [rdi+0x4],0x0
  44567c:	add    BYTE PTR [rax],al
  44567e:	add    BYTE PTR [rax],al
  445680:	cwde   
  445681:	outs   dx,DWORD PTR ds:[rsi]
  445682:	add    al,0x0
	...
  445690:	mov    al,0x6f
  445692:	add    al,0x0
  445694:	add    BYTE PTR [rax],al
  445696:	add    BYTE PTR [rax],al
  445698:	mov    esp,0x46f
  44569d:	add    BYTE PTR [rax],al
  44569f:	add    ah,cl
  4456a1:	outs   dx,DWORD PTR ds:[rsi]
  4456a2:	add    al,0x0
  4456a4:	add    BYTE PTR [rax],al
  4456a6:	add    BYTE PTR [rax],al
  4456a8:	loopne 0x445719
  4456aa:	add    al,0x0
  4456ac:	add    BYTE PTR [rax],al
  4456ae:	add    BYTE PTR [rax],al
  4456b0:	clc    
  4456b1:	outs   dx,DWORD PTR ds:[rsi]
  4456b2:	add    al,0x0
  4456b4:	add    BYTE PTR [rax],al
  4456b6:	add    BYTE PTR [rax],al
  4456b8:	or     al,0x70
  4456ba:	add    al,0x0
  4456bc:	add    BYTE PTR [rax],al
  4456be:	add    BYTE PTR [rax],al
  4456c0:	sbb    al,0x70
  4456c2:	add    al,0x0
  4456c4:	add    BYTE PTR [rax],al
  4456c6:	add    BYTE PTR [rax],al
  4456c8:	xor    BYTE PTR [rax+0x4],dh
  4456cb:	add    BYTE PTR [rax],al
  4456cd:	add    BYTE PTR [rax],al
  4456cf:	add    BYTE PTR [rax+rsi*2+0x4],cl
  4456d3:	add    BYTE PTR [rax],al
  4456d5:	add    BYTE PTR [rax],al
  4456d7:	add    BYTE PTR [rax+0x70],bl
  4456da:	add    al,0x0
  4456dc:	add    BYTE PTR [rax],al
  4456de:	add    BYTE PTR [rax],al
  4456e0:	push   0x470
  4456e5:	add    BYTE PTR [rax],al
  4456e7:	add    BYTE PTR [rax+0x470],al
  4456ed:	add    BYTE PTR [rax],al
  4456ef:	add    BYTE PTR [rax+0x470],dl
  4456f5:	add    BYTE PTR [rax],al
  4456f7:	add    BYTE PTR [rax+0x470],ah
  4456fd:	add    BYTE PTR [rax],al
  4456ff:	add    BYTE PTR [rax+0x470],dh
  445705:	add    BYTE PTR [rax],al
  445707:	add    al,cl
  445709:	jo     0x44570f
  44570b:	add    BYTE PTR [rax],al
  44570d:	add    BYTE PTR [rax],al
  44570f:	add    al,bl
  445711:	jo     0x445717
  445713:	add    BYTE PTR [rax],al
  445715:	add    BYTE PTR [rax],al
  445717:	add    ah,ch
  445719:	jo     0x44571f
  44571b:	add    BYTE PTR [rax],al
  44571d:	add    BYTE PTR [rax],al
  44571f:	add    BYTE PTR [rax],cl
  445721:	jno    0x445727
  445723:	add    BYTE PTR [rax],al
  445725:	add    BYTE PTR [rax],al
  445727:	add    BYTE PTR [rax],bl
  445729:	jno    0x44572f
  44572b:	add    BYTE PTR [rax],al
  44572d:	add    BYTE PTR [rax],al
  44572f:	add    BYTE PTR [rax],ch
  445731:	jno    0x445737
  445733:	add    BYTE PTR [rax],al
  445735:	add    BYTE PTR [rax],al
  445737:	add    BYTE PTR [rax],bh
  445739:	jno    0x44573f
  44573b:	add    BYTE PTR [rax],al
  44573d:	add    BYTE PTR [rax],al
  44573f:	add    BYTE PTR [rax+0x71],dl
  445742:	add    al,0x0
  445744:	add    BYTE PTR [rax],al
  445746:	add    BYTE PTR [rax],al
  445748:	(bad)  
  445749:	jno    0x44574f
  44574b:	add    BYTE PTR [rax],al
  44574d:	add    BYTE PTR [rax],al
  44574f:	add    BYTE PTR [rax+0x71],bh
  445752:	add    al,0x0
  445754:	add    BYTE PTR [rax],al
  445756:	add    BYTE PTR [rax],al
  445758:	mov    WORD PTR [rcx+0x4],?
  44575b:	add    BYTE PTR [rax],al
  44575d:	add    BYTE PTR [rax],al
  44575f:	add    BYTE PTR [rcx+rsi*2+0x4],ah
  445766:	add    BYTE PTR [rax],al
  445768:	mov    ah,0x71
  44576a:	add    al,0x0
  44576c:	add    BYTE PTR [rax],al
  44576e:	add    BYTE PTR [rax],al
  445770:	fdiv   QWORD PTR [rcx+0x4]
  445773:	add    BYTE PTR [rax],al
  445775:	add    BYTE PTR [rax],al
  445777:	add    ah,dh
  445779:	jno    0x44577f
  44577b:	add    BYTE PTR [rax],al
  44577d:	add    BYTE PTR [rax],al
  44577f:	add    BYTE PTR [rdx+rsi*2],cl
  445782:	add    al,0x0
  445784:	add    BYTE PTR [rax],al
  445786:	add    BYTE PTR [rax],al
  445788:	sub    BYTE PTR [rdx+0x4],dh
  44578b:	add    BYTE PTR [rax],al
  44578d:	add    BYTE PTR [rax],al
  44578f:	add    BYTE PTR [rdx+rsi*2],bh
  445792:	add    al,0x0
  445794:	add    BYTE PTR [rax],al
  445796:	add    BYTE PTR [rax],al
  445798:	rex.WR jb 0x44579f
  44579b:	add    BYTE PTR [rax],al
  44579d:	add    BYTE PTR [rax],al
  44579f:	add    BYTE PTR [rax+0x72],ah
  4457a2:	add    al,0x0
  4457a4:	add    BYTE PTR [rax],al
  4457a6:	add    BYTE PTR [rax],al
  4457a8:	ins    BYTE PTR es:[rdi],dx
  4457a9:	jb     0x4457af
  4457ab:	add    BYTE PTR [rax],al
  4457ad:	add    BYTE PTR [rax],al
  4457af:	add    BYTE PTR [rax+0x72],bh
  4457b2:	add    al,0x0
  4457b4:	add    BYTE PTR [rax],al
  4457b6:	add    BYTE PTR [rax],al
  4457b8:	nop
  4457b9:	jb     0x4457bf
  4457bb:	add    BYTE PTR [rax],al
  4457bd:	add    BYTE PTR [rax],al
  4457bf:	add    BYTE PTR [rax+0x472],dh
  4457c5:	add    BYTE PTR [rax],al
  4457c7:	add    al,cl
  4457c9:	jb     0x4457cf
  4457cb:	add    BYTE PTR [rax],al
  4457cd:	add    BYTE PTR [rax],al
  4457cf:	add    ah,ch
  4457d1:	jb     0x4457d7
  4457d3:	add    BYTE PTR [rax],al
  4457d5:	add    BYTE PTR [rax],al
  4457d7:	add    BYTE PTR [rbx+rsi*2],cl
  4457da:	add    al,0x0
  4457dc:	add    BYTE PTR [rax],al
  4457de:	add    BYTE PTR [rax],al
  4457e0:	and    al,0x73
  4457e2:	add    al,0x0
  4457e4:	add    BYTE PTR [rax],al
  4457e6:	add    BYTE PTR [rax],al
  4457e8:	cmp    BYTE PTR [rbx+0x4],dh
  4457eb:	add    BYTE PTR [rax],al
  4457ed:	add    BYTE PTR [rax],al
  4457ef:	add    BYTE PTR [rax+0x73],bl
  4457f2:	add    al,0x0
  4457f4:	add    BYTE PTR [rax],al
  4457f6:	add    BYTE PTR [rax],al
  4457f8:	je     0x44586d
  4457fa:	add    al,0x0
  4457fc:	add    BYTE PTR [rax],al
  4457fe:	add    BYTE PTR [rax],al
  445800:	nop
  445801:	jae    0x445807
  445803:	add    BYTE PTR [rax],al
  445805:	add    BYTE PTR [rax],al
  445807:	add    BYTE PTR [rbx+rsi*2+0x4],ch
  44580e:	add    BYTE PTR [rax],al
  445810:	shl    BYTE PTR [rbx+0x4],0x0
  445814:	add    BYTE PTR [rax],al
  445816:	add    BYTE PTR [rax],al
  445818:	fdiv   DWORD PTR [rbx+0x4]
  44581b:	add    BYTE PTR [rax],al
  44581d:	add    BYTE PTR [rax],al
  44581f:	add    ah,ch
  445821:	jae    0x445827
  445823:	add    BYTE PTR [rax],al
  445825:	add    BYTE PTR [rax],al
  445827:	add    BYTE PTR [rax],cl
  445829:	je     0x44582f
  44582b:	add    BYTE PTR [rax],al
  44582d:	add    BYTE PTR [rax],al
  44582f:	add    BYTE PTR [rsp+rsi*2],ah
  445832:	add    al,0x0
  445834:	add    BYTE PTR [rax],al
  445836:	add    BYTE PTR [rax],al
  445838:	rex.W je 0x44583f
  44583b:	add    BYTE PTR [rax],al
  44583d:	add    BYTE PTR [rax],al
  44583f:	add    BYTE PTR [rax+0x74],bl
  445842:	add    al,0x0
  445844:	add    BYTE PTR [rax],al
  445846:	add    BYTE PTR [rax],al
  445848:	jo     0x4458be
  44584a:	add    al,0x0
  44584c:	add    BYTE PTR [rax],al
  44584e:	add    BYTE PTR [rax],al
  445850:	mov    BYTE PTR [rsp+rax*1+0x0],dh
  445854:	add    BYTE PTR [rax],al
  445856:	add    BYTE PTR [rax],al
  445858:	xchg   esp,eax
  445859:	je     0x44585f
  44585b:	add    BYTE PTR [rax],al
  44585d:	add    BYTE PTR [rax],al
  44585f:	add    BYTE PTR [rax+0x474],ah
  445865:	add    BYTE PTR [rax],al
  445867:	add    BYTE PTR [rsp+rsi*2+0x4],bh
  44586e:	add    BYTE PTR [rax],al
  445870:	(bad)  
  445871:	je     0x445877
  445873:	add    BYTE PTR [rax],al
  445875:	add    BYTE PTR [rax],al
  445877:	add    al,ch
  445879:	je     0x44587f
  44587b:	add    BYTE PTR [rax],al
  44587d:	add    BYTE PTR [rax],al
  44587f:	add    ah,bh
  445881:	je     0x445887
  445883:	add    BYTE PTR [rax],al
  445885:	add    BYTE PTR [rax],al
  445887:	add    BYTE PTR [rsi*2+0x4],dl
  44588e:	add    BYTE PTR [rax],al
  445890:	sub    BYTE PTR [rbp+0x4],dh
  445893:	add    BYTE PTR [rax],al
  445895:	add    BYTE PTR [rax],al
  445897:	add    BYTE PTR [rsi*2+0x4],bh
  44589e:	add    BYTE PTR [rax],al
  4458a0:	rex.W jne 0x4458a7
  4458a3:	add    BYTE PTR [rax],al
  4458a5:	add    BYTE PTR [rax],al
  4458a7:	add    BYTE PTR [rax+0x75],bl
  4458aa:	add    al,0x0
  4458ac:	add    BYTE PTR [rax],al
  4458ae:	add    BYTE PTR [rax],al
  4458b0:	push   0x475
  4458b5:	add    BYTE PTR [rax],al
  4458b7:	add    BYTE PTR [rax+0x75],bh
  4458ba:	add    al,0x0
  4458bc:	add    BYTE PTR [rax],al
  4458be:	add    BYTE PTR [rax],al
  4458c0:	test   BYTE PTR [rbp+0x4],dh
  4458c3:	add    BYTE PTR [rax],al
  4458c5:	add    BYTE PTR [rax],al
  4458c7:	add    BYTE PTR [rax+0x475],ah
  4458cd:	add    BYTE PTR [rax],al
  4458cf:	add    BYTE PTR [rbp+rsi*2+0x4],dh
  4458d6:	add    BYTE PTR [rax],al
  4458d8:	enter  0x475,0x0
  4458dc:	add    BYTE PTR [rax],al
  4458de:	add    BYTE PTR [rax],al
  4458e0:	fdiv   DWORD PTR [rbp+0x4]
  4458e3:	add    BYTE PTR [rax],al
  4458e5:	add    BYTE PTR [rax],al
  4458e7:	add    al,dh
  4458e9:	jne    0x4458ef
  4458eb:	add    BYTE PTR [rax],al
  4458ed:	add    BYTE PTR [rax],al
  4458ef:	add    BYTE PTR [rax],al
  4458f1:	jbe    0x4458f7
  4458f3:	add    BYTE PTR [rax],al
  4458f5:	add    BYTE PTR [rax],al
  4458f7:	add    BYTE PTR [rax],dl
  4458f9:	jbe    0x4458ff
  4458fb:	add    BYTE PTR [rax],al
  4458fd:	add    BYTE PTR [rax],al
  4458ff:	add    BYTE PTR [rsi+rsi*2],ah
  445902:	add    al,0x0
  445904:	add    BYTE PTR [rax],al
  445906:	add    BYTE PTR [rax],al
  445908:	cmp    BYTE PTR [rsi+0x4],dh
  44590b:	add    BYTE PTR [rax],al
  44590d:	add    BYTE PTR [rax],al
  44590f:	add    BYTE PTR [rsi+rsi*2+0x4],cl
  445913:	add    BYTE PTR [rax],al
  445915:	add    BYTE PTR [rax],al
  445917:	add    BYTE PTR [rsi+rsi*2+0x4],bl
  44591b:	add    BYTE PTR [rax],al
  44591d:	add    BYTE PTR [rax],al
  44591f:	add    BYTE PTR [rax+0x76],dh
  445922:	add    al,0x0
  445924:	add    BYTE PTR [rax],al
  445926:	add    BYTE PTR [rax],al
  445928:	test   BYTE PTR [rsi+0x4],dh
  44592b:	add    BYTE PTR [rax],al
  44592d:	add    BYTE PTR [rax],al
  44592f:	add    BYTE PTR [rsi+rsi*2+0x4],dl
  445936:	add    BYTE PTR [rax],al
  445938:	lods   al,BYTE PTR ds:[rsi]
  445939:	jbe    0x44593f
  44593b:	add    BYTE PTR [rax],al
  44593d:	add    BYTE PTR [rax],al
  44593f:	add    ah,al
  445941:	jbe    0x445947
  445943:	add    BYTE PTR [rax],al
  445945:	add    BYTE PTR [rax],al
  445947:	add    ah,bl
  445949:	jbe    0x44594f
  44594b:	add    BYTE PTR [rax],al
  44594d:	add    BYTE PTR [rax],al
  44594f:	add    al,bh
  445951:	jbe    0x445957
  445953:	add    BYTE PTR [rax],al
  445955:	add    BYTE PTR [rax],al
  445957:	add    BYTE PTR [rax],dl
  445959:	ja     0x44595f
  44595b:	add    BYTE PTR [rax],al
  44595d:	add    BYTE PTR [rax],al
  44595f:	add    BYTE PTR [rdi+rsi*2],ah
  445962:	add    al,0x0
  445964:	add    BYTE PTR [rax],al
  445966:	add    BYTE PTR [rax],al
  445968:	xor    al,0x77
  44596a:	add    al,0x0
  44596c:	add    BYTE PTR [rax],al
  44596e:	add    BYTE PTR [rax],al
  445970:	rex.W ja 0x445977
  445973:	add    BYTE PTR [rax],al
  445975:	add    BYTE PTR [rax],al
  445977:	add    BYTE PTR [rdi+rsi*2+0x4],dl
  44597b:	add    BYTE PTR [rax],al
  44597d:	add    BYTE PTR [rax],al
  44597f:	add    BYTE PTR [rdi+rsi*2+0x4],ah
  445983:	add    BYTE PTR [rax],al
  445985:	add    BYTE PTR [rax],al
  445987:	add    BYTE PTR [rax+0x77],bh
  44598a:	add    al,0x0
  44598c:	add    BYTE PTR [rax],al
  44598e:	add    BYTE PTR [rax],al
  445990:	mov    BYTE PTR [rdi+0x4],dh
  445993:	add    BYTE PTR [rax],al
  445995:	add    BYTE PTR [rax],al
  445997:	add    BYTE PTR [rax+0x477],bl
  44599d:	add    BYTE PTR [rax],al
  44599f:	add    BYTE PTR [rdi+rsi*2+0x4],ah
  4459a6:	add    BYTE PTR [rax],al
  4459a8:	mov    ah,0x77
  4459aa:	add    al,0x0
  4459ac:	add    BYTE PTR [rax],al
  4459ae:	add    BYTE PTR [rax],al
  4459b0:	(bad)  
  4459b1:	ja     0x4459b7
  4459b3:	add    BYTE PTR [rax],al
  4459b5:	add    BYTE PTR [rax],al
  4459b7:	add    ah,dl
  4459b9:	ja     0x4459bf
  4459bb:	add    BYTE PTR [rax],al
  4459bd:	add    BYTE PTR [rax],al
  4459bf:	add    ah,ah
  4459c1:	ja     0x4459c7
  4459c3:	add    BYTE PTR [rax],al
  4459c5:	add    BYTE PTR [rax],al
  4459c7:	add    ah,dh
  4459c9:	ja     0x4459cf
  4459cb:	add    BYTE PTR [rax],al
  4459cd:	add    BYTE PTR [rax],al
  4459cf:	add    BYTE PTR [rax],al
  4459d1:	js     0x4459d7
  4459d3:	add    BYTE PTR [rax],al
  4459d5:	add    BYTE PTR [rax],al
  4459d7:	add    BYTE PTR [rax+rdi*2],cl
  4459da:	add    al,0x0
  4459dc:	add    BYTE PTR [rax],al
  4459de:	add    BYTE PTR [rax],al
  4459e0:	sbb    BYTE PTR [rax+0x4],bh
  4459e3:	add    BYTE PTR [rax],al
  4459e5:	add    BYTE PTR [rax],al
  4459e7:	add    BYTE PTR [rax],dh
  4459e9:	js     0x4459ef
	...
  4459f7:	add    BYTE PTR [rax+rdi*2+0x4],al
  4459fb:	add    BYTE PTR [rax],al
  4459fd:	add    BYTE PTR [rax],al
  4459ff:	add    BYTE PTR [rax+0x78],ah
  445a02:	add    al,0x0
	...
  445a10:	je     0x445a8a
  445a12:	add    al,0x0
  445a14:	add    BYTE PTR [rax],al
  445a16:	add    BYTE PTR [rax],al
  445a18:	cmp    BYTE PTR [rax+0x4],0x0
  445a1c:	add    BYTE PTR [rax],al
  445a1e:	add    BYTE PTR [rax],al
  445a20:	mov    WORD PTR [rax+0x4],?
  445a23:	add    BYTE PTR [rax],al
  445a25:	add    BYTE PTR [rax],al
  445a27:	add    BYTE PTR [rax+rdi*2+0x4],bl
  445a2e:	add    BYTE PTR [rax],al
  445a30:	mov    eax,0x478
	...
  445a3d:	add    BYTE PTR [rax],al
  445a3f:	add    al,dl
  445a41:	js     0x445a47
  445a43:	add    BYTE PTR [rax],al
  445a45:	add    BYTE PTR [rax],al
  445a47:	add    ah,ah
  445a49:	js     0x445a4f
  445a4b:	add    BYTE PTR [rax],al
  445a4d:	add    BYTE PTR [rax],al
  445a4f:	add    al,bh
  445a51:	js     0x445a57
  445a53:	add    BYTE PTR [rax],al
  445a55:	add    BYTE PTR [rax],al
  445a57:	add    BYTE PTR [rax],cl
  445a59:	jns    0x445a5f
  445a5b:	add    BYTE PTR [rax],al
  445a5d:	add    BYTE PTR [rax],al
  445a5f:	add    BYTE PTR [rax],ah
  445a61:	jns    0x445a67
  445a63:	add    BYTE PTR [rax],al
  445a65:	add    BYTE PTR [rax],al
  445a67:	add    BYTE PTR [rax],bh
  445a69:	jns    0x445a6f
  445a6b:	add    BYTE PTR [rax],al
  445a6d:	add    BYTE PTR [rax],al
  445a6f:	add    BYTE PTR [rax+0x79],dl
  445a72:	add    al,0x0
	...
  445a80:	fadd   DWORD PTR [rax]
  445a82:	rex.R
  445a83:	gs ins BYTE PTR es:[rdi],dx
  445a85:	gs je  0x445aed
  445a88:	rex.XB jb 0x445af4
  445a8b:	je     0x445af6
  445a8d:	movsxd esp,DWORD PTR [rcx+0x6c]
  445a90:	push   rbx
  445a91:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  445a96:	outs   dx,BYTE PTR ds:[rsi]
  445a97:	add    al,bh
  445a99:	add    BYTE PTR [rbp+0x6e],al
  445a9c:	je     0x445b03
  445a9e:	jb     0x445ae3
  445aa0:	jb     0x445b0b
  445aa2:	je     0x445b0d
  445aa4:	movsxd esp,DWORD PTR [rcx+0x6c]
  445aa7:	push   rbx
  445aa8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  445aad:	outs   dx,BYTE PTR ds:[rsi]
  445aae:	add    BYTE PTR [rax],al
  445ab0:	outs   dx,BYTE PTR ds:[rsi]
  445ab1:	add    DWORD PTR [rsi+0x72],eax
  445ab4:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
  445abe:	xchg   esp,eax
  445abf:	add    DWORD PTR [rdi+0x65],eax
  445ac2:	je     0x445b07
  445ac4:	outs   dx,DWORD PTR ds:[rsi]
  445ac5:	ins    DWORD PTR es:[rdi],dx
  445ac6:	ins    DWORD PTR es:[rdi],dx
  445ac7:	(bad)  
  445ac8:	outs   dx,BYTE PTR ds:[rsi]
  445ac9:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1b90057
  445ad2:	rex.RXB
  445ad3:	gs je  0x445b19
  445ad6:	outs   dx,DWORD PTR ds:[rsi]
  445ad7:	outs   dx,BYTE PTR ds:[rsi]
  445ad8:	jae    0x445b49
  445ada:	ins    BYTE PTR es:[rdi],dx
  445adb:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  445ade:	fs add BYTE PTR gs:[rax],al
  445ae2:	int    0x1
  445ae4:	rex.RXB
  445ae5:	gs je  0x445b2b
  445ae8:	jne    0x445b5c
  445aea:	jb     0x445b51
  445aec:	outs   dx,BYTE PTR ds:[rsi]
  445aed:	je     0x445b3f
  445aef:	jb     0x445b60
  445af1:	movsxd esp,DWORD PTR [rbp+0x73]
  445af4:	jae    0x445af6
  445af6:	(bad)  
  445af7:	add    DWORD PTR [rdi+0x65],eax
  445afa:	je     0x445b3f
  445afc:	jne    0x445b70
  445afe:	jb     0x445b65
  445b00:	outs   dx,BYTE PTR ds:[rsi]
  445b01:	je     0x445b53
  445b03:	jb     0x445b74
  445b05:	movsxd esp,DWORD PTR [rbp+0x73]
  445b08:	jae    0x445b53
  445b0a:	fs add dl,dl
  445b0d:	add    DWORD PTR [rdi+0x65],eax
  445b10:	je     0x445b55
  445b12:	jne    0x445b86
  445b14:	jb     0x445b7b
  445b16:	outs   dx,BYTE PTR ds:[rsi]
  445b17:	je     0x445b6d
  445b19:	push   0x64616572
  445b1e:	rex.WB
  445b1f:	add    BYTE PTR fs:[rax],al
  445b22:	adc    BYTE PTR [rdx],al
  445b24:	rex.RXB
  445b25:	gs je  0x445b74
  445b28:	(bad)  
  445b29:	jae    0x445b9f
  445b2b:	rex.RB jb 0x445ba0
  445b2e:	outs   dx,DWORD PTR ds:[rsi]
  445b2f:	jb     0x445b31
  445b31:	add    BYTE PTR [rdx],ah
  445b33:	add    al,BYTE PTR [rdi+0x65]
  445b36:	je     0x445b85
  445b38:	outs   dx,DWORD PTR ds:[rsi]
  445b39:	fs jne 0x445ba8
  445b3c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  445b46:	add    BYTE PTR [rax],al
  445b48:	and    al,0x2
  445b4a:	rex.RXB
  445b4b:	gs je  0x445b9b
  445b4e:	outs   dx,DWORD PTR ds:[rsi]
  445b4f:	fs jne 0x445bbe
  445b52:	gs rex.W (bad) 
  445b55:	outs   dx,BYTE PTR ds:[rsi]
  445b56:	fs ins BYTE PTR es:[rdi],dx
  445b58:	add    BYTE PTR gs:[r8],al
  445b5c:	(bad)  
  445b5d:	add    al,BYTE PTR [rdi+0x65]
  445b60:	je     0x445baf
  445b62:	outs   dx,DWORD PTR ds:[rsi]
  445b63:	fs jne 0x445bd2
  445b66:	gs rex.W (bad) 
  445b69:	outs   dx,BYTE PTR ds:[rsi]
  445b6a:	fs ins BYTE PTR es:[rdi],dx
  445b6c:	gs push rdi
  445b6e:	add    BYTE PTR [rax],al
  445b70:	push   rsi
  445b71:	add    al,BYTE PTR [rdi+0x65]
  445b74:	je     0x445bc6
  445b76:	jb     0x445be7
  445b78:	movsxd eax,DWORD PTR [rcx+0x64]
  445b7b:	fs jb  0x445be3
  445b7e:	jae    0x445bf3
  445b80:	add    BYTE PTR [rax],al
  445b82:	movsxd eax,DWORD PTR [rdx]
  445b84:	rex.RXB
  445b85:	gs je  0x445bd8
  445b88:	jb     0x445bf9
  445b8a:	movsxd esp,DWORD PTR [rbp+0x73]
  445b8d:	jae    0x445be3
  445b8f:	imul   ebp,DWORD PTR [rbp+0x65],0x2730073
  445b96:	rex.RXB
  445b97:	gs je  0x445bed
  445b9a:	je     0x445bfd
  445b9c:	jb     0x445c12
  445b9e:	jne    0x445c10
  445ba0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  445ba2:	outs   dx,WORD PTR ds:[rsi]
  445ba4:	add    BYTE PTR [r13+0x2],sil
  445ba8:	rex.RXB
  445ba9:	gs je  0x445bff
  445bac:	je     0x445c12
  445bae:	rex.W (bad) 
  445bb0:	outs   dx,BYTE PTR ds:[rsi]
  445bb1:	fs ins BYTE PTR es:[rdi],dx
  445bb3:	add    BYTE PTR gs:[rax],al
  445bb6:	mov    al,BYTE PTR [rdx]
  445bb8:	rex.RXB
  445bb9:	gs je  0x445c0f
  445bbc:	jns    0x445c31
  445bbe:	je     0x445c25
  445bc0:	ins    DWORD PTR es:[rdi],dx
  445bc1:	push   rsp
  445bc2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  445bc9:	ins    BYTE PTR es:[rdi],dx
  445bca:	gs push rsp
  445bcc:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  445bd3:	gs je  0x445c2a
  445bd6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  445bdd:	je     0x445bdf
  445bdf:	add    cl,bh
  445be1:	add    cl,BYTE PTR [rcx+0x6e]
  445be4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  445bec:	rex.XB jb 0x445c58
  445bef:	je     0x445c5a
  445bf1:	movsxd esp,DWORD PTR [rcx+0x6c]
  445bf4:	push   rbx
  445bf5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  445bfa:	outs   dx,BYTE PTR ds:[rsi]
  445bfb:	add    BYTE PTR [rax],dl
  445bfd:	add    ecx,DWORD PTR [rcx+0x73]
  445c00:	rex.R
  445c01:	rex.X
  445c02:	rex.XB push r11
  445c04:	rex.WR
  445c05:	gs (bad) 
  445c07:	fs rex.X jns 0x445c7f
  445c0b:	gs rex.RB js 0x445c0f
  445c0f:	add    BYTE PTR [rbx+0x3],cl
  445c12:	rex.WR
  445c13:	gs (bad) 
  445c15:	jbe    0x445c7c
  445c17:	rex.XB jb 0x445c83
  445c1a:	je     0x445c85
  445c1c:	movsxd esp,DWORD PTR [rcx+0x6c]
  445c1f:	push   rbx
  445c20:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  445c25:	outs   dx,BYTE PTR ds:[rsi]
  445c26:	add    BYTE PTR [rax],al
  445c28:	add    r9,QWORD PTR [rdi+r13*2+0x61]
  445c2d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
  445c36:	add    BYTE PTR [rax],al
  445c38:	pop    rbx
  445c39:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  445c3d:	(bad)  
  445c3e:	ins    BYTE PTR es:[rdi],dx
  445c3f:	rex.RX jb 0x445ca7
  445c42:	add    BYTE PTR gs:[rdx+0x3],bh
  445c46:	rex.WRB jne 0x445cb5
  445c49:	je     0x445cb4
  445c4b:	rex.X jns 0x445cc2
  445c4e:	gs push rsp
  445c50:	outs   dx,DWORD PTR ds:[rsi]
  445c51:	push   rdi
  445c52:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  445c5a:	movabs eax,ds:0x6d614e6b65655003
  445c63:	gs fs push rax
  445c66:	imul   esi,DWORD PTR [rax+0x65],0x5103bb00
  445c6d:	jne    0x445cd4
  445c6f:	jb     0x445cea
  445c71:	push   rax
  445c72:	gs jb  0x445cdb
  445c75:	outs   dx,DWORD PTR ds:[rsi]
  445c76:	jb     0x445ce5
  445c78:	(bad)  
  445c79:	outs   dx,BYTE PTR ds:[rsi]
  445c7a:	movsxd esp,DWORD PTR [rbp+0x43]
  445c7d:	outs   dx,DWORD PTR ds:[rsi]
  445c7e:	jne    0x445cee
  445c80:	je     0x445ce7
  445c82:	jb     0x445c84
  445c84:	add    DWORD PTR [rdx+rdx*2],eax
  445c87:	je     0x445cf5
  445c89:	rex.B
  445c8a:	fs fs rex.RX jne 0x445cfd
  445c8f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  445c93:	outs   dx,BYTE PTR ds:[rsi]
  445c94:	push   rsp
  445c95:	(bad)  
  445c96:	(bad)  
  445c97:	ins    BYTE PTR es:[rdi],dx
  445c98:	add    BYTE PTR gs:[rdx],al
  445c9b:	add    al,0x52
  445c9d:	je     0x445d0b
  445c9f:	rex.XB (bad) 
  445ca1:	jo     0x445d17
  445ca3:	jne    0x445d17
  445ca5:	rex.XB outs dx,DWORD PTR gs:[rsi]
  445ca8:	outs   dx,BYTE PTR ds:[rsi]
  445ca9:	je     0x445d10
  445cab:	js     0x445d21
  445cad:	add    BYTE PTR [rcx],cl
  445caf:	add    al,0x52
  445cb1:	je     0x445d1f
  445cb3:	rex.WR outs dx,DWORD PTR ds:[rsi]
  445cb5:	outs   dx,DWORD PTR ds:[rsi]
  445cb6:	imul   esi,DWORD PTR [rbp+0x70],0x46
  445cba:	jne    0x445d2a
  445cbc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  445cc0:	outs   dx,BYTE PTR ds:[rsi]
  445cc1:	rex.RB outs dx,BYTE PTR ds:[rsi]
  445cc3:	je     0x445d37
  445cc5:	jns    0x445cc7
  445cc7:	add    BYTE PTR [rax],dl
  445cc9:	add    al,0x52
  445ccb:	je     0x445d39
  445ccd:	push   rsi
  445cce:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  445cd5:	outs   dx,BYTE PTR ds:[rsi]
  445cd6:	ja     0x445d41
  445cd8:	outs   dx,BYTE PTR ds:[rsi]
  445cd9:	add    BYTE PTR fs:[rax],al
  445cdc:	(bad)  
  445cdd:	add    al,0x53
  445cdf:	gs je  0x445d25
  445ce2:	outs   dx,DWORD PTR ds:[rsi]
  445ce3:	outs   dx,BYTE PTR ds:[rsi]
  445ce4:	jae    0x445d55
  445ce6:	ins    BYTE PTR es:[rdi],dx
  445ce7:	gs rex.XB je 0x445d5d
  445ceb:	ins    BYTE PTR es:[rdi],dx
  445cec:	rex.W (bad) 
  445cee:	outs   dx,BYTE PTR ds:[rsi]
  445cef:	fs ins BYTE PTR es:[rdi],dx
  445cf1:	gs jb  0x445cf4
  445cf4:	rex.WX add al,0x53
  445cf7:	gs je  0x445d3e
  445cfa:	ins    BYTE PTR es:[rdi],dx
  445cfb:	ins    BYTE PTR es:[rdi],dx
  445cfc:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  445d04:	jns    0x445d47
  445d06:	add    BYTE PTR [rax],al
  445d08:	lahf   
  445d09:	add    al,0x53
  445d0b:	gs je  0x445d63
  445d0e:	outs   dx,BYTE PTR ds:[rsi]
  445d0f:	push   0x6c646e61
  445d14:	gs fs rex.RB js 0x445d7c
  445d19:	gs jo  0x445d90
  445d1c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  445d23:	gs jb  0x445d26
  445d26:	lods   al,BYTE PTR ds:[rsi]
  445d27:	add    al,0x53
  445d29:	ins    BYTE PTR es:[rdi],dx
  445d2a:	gs gs jo 0x445d2e
  445d2e:	mov    edx,0x72655404
  445d33:	ins    DWORD PTR es:[rdi],dx
  445d34:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  445d3b:	outs   dx,DWORD PTR ds:[rsi]
  445d3c:	movsxd esp,DWORD PTR [rbp+0x73]
  445d3f:	jae    0x445d41
  445d41:	add    cl,al
  445d43:	add    al,0x54
  445d45:	ins    BYTE PTR es:[rdi],dx
  445d46:	jae    0x445d8f
  445d48:	gs je  0x445da1
  445d4b:	(bad)  
  445d4c:	ins    BYTE PTR es:[rdi],dx
  445d4d:	jne    0x445db4
  445d4f:	add    dh,cl
  445d51:	add    al,0x55
  445d53:	outs   dx,BYTE PTR ds:[rsi]
  445d54:	push   0x6c646e61
  445d59:	gs fs rex.RB js 0x445dc1
  445d5e:	gs jo  0x445dd5
  445d61:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  445d68:	gs jb  0x445d6b
  445d6b:	add    ah,ch
  445d6d:	add    al,0x56
  445d6f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  445d76:	jb     0x445de7
  445d78:	je     0x445ddf
  445d7a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  445d7e:	out    dx,al
  445d7f:	add    al,0x56
  445d81:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  445d88:	jne    0x445def
  445d8a:	jb     0x445e05
  445d8c:	add    BYTE PTR [rax],al
  445d8e:	(bad)  
  445d8f:	add    eax,0x65646957
  445d94:	rex.XB push 0x6f547261
  445d9a:	rex.WRB jne 0x445e09
  445d9d:	je     0x445e08
  445d9f:	rex.X jns 0x445e16
  445da2:	add    BYTE PTR gs:[rdi],dh
  445da5:	add    BYTE PTR [rdi+0x5f],bl
  445da8:	rex.XB pop r15
  445daa:	jae    0x445e1c
  445dac:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  445db0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  445db7:	ins    BYTE PTR es:[rdi],dx
  445db8:	gs jb  0x445dbb
  445dbb:	add    BYTE PTR [rdi],bh
  445dbd:	add    BYTE PTR [rdi+0x5f],bl
  445dc0:	pop    rdi
  445dc1:	ins    BYTE PTR es:[rdi],dx
  445dc2:	movsxd ebx,DWORD PTR [rdi+0x63]
  445dc5:	outs   dx,DWORD PTR ds:[rsi]
  445dc6:	fs gs jo 0x445e2b
  445dca:	addr32 gs pop rdi
  445dcd:	data16 jne 0x445e3e
  445dd0:	movsxd eax,DWORD PTR [rax]
  445dd2:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  445dd6:	fs ins BYTE PTR es:[rdi],dx
  445dd8:	ins    BYTE PTR es:[rdi],dx
  445dd9:	outs   dx,DWORD PTR ds:[rsi]
  445dda:	outs   dx,BYTE PTR ds:[rsi]
  445ddb:	gs js  0x445e47
  445dde:	je     0x445de0
  445de0:	push   rcx
  445de1:	add    BYTE PTR [rdi+0x5f],bl
  445de4:	addr32 gs je 0x445e55
  445de8:	(bad)  
  445de9:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  445df0:	push   rdx
  445df1:	add    BYTE PTR [rdi+0x5f],bl
  445df4:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  445dfb:	add    BYTE PTR [rbx+0x0],dl
  445dfe:	pop    rdi
  445dff:	pop    rdi
  445e00:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  445e07:	movsxd eax,DWORD PTR [rax]
  445e09:	add    BYTE PTR [rdx+0x0],bl
  445e0c:	pop    rdi
  445e0d:	pop    rdi
  445e0e:	ins    BYTE PTR es:[rdi],dx
  445e0f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  445e12:	jbe    0x445e73
  445e14:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  445e1b:	add    BYTE PTR [rdi+0x5f],bl
  445e1e:	ins    DWORD PTR es:[rdi],dx
  445e1f:	(bad)  
  445e20:	pop    rdi
  445e21:	movsxd esi,DWORD PTR [rbp+0x72]
  445e24:	pop    rdi
  445e25:	ins    DWORD PTR es:[rdi],dx
  445e26:	(bad)  
  445e27:	js     0x445e29
  445e29:	add    BYTE PTR [rax+0x0],ah
  445e2c:	pop    rdi
  445e2d:	pop    rdi
  445e2e:	jae    0x445e95
  445e30:	je     0x445e91
  445e32:	(bad)  
  445e33:	jo     0x445ea5
  445e35:	pop    rdi
  445e36:	je     0x445eb1
  445e38:	jo     0x445e9f
  445e3a:	add    BYTE PTR [rax],al
  445e3c:	(bad)  
  445e3d:	add    BYTE PTR [rdi+0x5f],bl
  445e40:	jae    0x445ea7
  445e42:	je     0x445eb9
  445e44:	jae    0x445eab
  445e46:	jb     0x445eb5
  445e48:	(bad)  
  445e49:	je     0x445eb3
  445e4b:	gs jb  0x445ec0
  445e4e:	add    BYTE PTR [rax],al
  445e50:	jno    0x445e52
  445e52:	pop    rdi
  445e53:	(bad)  
  445e54:	movsxd ebp,DWORD PTR [rbp+0x64]
  445e57:	ins    BYTE PTR es:[rdi],dx
  445e58:	outs   dx,BYTE PTR ds:[rsi]
  445e59:	add    BYTE PTR [rax+0x0],bh
  445e5c:	pop    rdi
  445e5d:	(bad)  
  445e5e:	ins    DWORD PTR es:[rdi],dx
  445e5f:	jae    0x445ec8
  445e61:	pop    rdi
  445e62:	gs js  0x445ece
  445e65:	je     0x445e67
  445e67:	add    BYTE PTR [rdx+0x65635f00],cl
  445e6d:	js     0x445ed8
  445e6f:	je     0x445e71
  445e71:	add    BYTE PTR [rdx+0x72655f00],bh
  445e77:	jb     0x445ee7
  445e79:	outs   dx,DWORD PTR ds:[rsi]
  445e7a:	add    BYTE PTR [rax],al
  445e7c:	fiadd  DWORD PTR [rax]
  445e7e:	pop    rdi
  445e7f:	ins    WORD PTR es:[rdi],dx
  445e81:	outs   dx,DWORD PTR ds:[rsi]
  445e82:	fs add BYTE PTR gs:[rax],al
  445e86:	or     eax,0x6d675f01
  445e8b:	je     0x445ef6
  445e8d:	ins    DWORD PTR es:[rdi],dx
  445e8e:	gs ss xor al,0x0
  445e92:	sbb    al,BYTE PTR [rcx]
  445e94:	pop    rdi
  445e95:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  445e9c:	ins    DWORD PTR es:[rdi],dx
  445e9d:	add    BYTE PTR [rdi+0x1],bh
  445ea0:	pop    rdi
  445ea1:	ins    BYTE PTR es:[rdi],dx
  445ea2:	outs   dx,DWORD PTR ds:[rsi]
  445ea3:	movsxd esp,DWORD PTR [rcx+0x6c]
  445ea6:	je     0x445f11
  445ea8:	ins    DWORD PTR es:[rdi],dx
  445ea9:	gs ss xor al,0x0
  445ead:	add    BYTE PTR [rax+0x6f6c5f01],al
  445eb3:	movsxd ebp,DWORD PTR [rbx+0x0]
  445eb6:	and    eax,0x6e6f5f02
  445ebb:	gs js  0x445f27
  445ebe:	je     0x445ec0
  445ec0:	scas   eax,DWORD PTR es:[rdi]
  445ec1:	add    bl,BYTE PTR [rdi+0x74]
  445ec4:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  445ecb:	add    bl,BYTE PTR [rdi+0x75]
  445ece:	outs   dx,BYTE PTR ds:[rsi]
  445ecf:	ins    BYTE PTR es:[rdi],dx
  445ed0:	outs   dx,DWORD PTR ds:[rsi]
  445ed1:	movsxd ebp,DWORD PTR [rbx+0x0]
  445ed4:	jg     0x445ed9
  445ed6:	(bad)  
  445ed7:	(bad)  
  445ed8:	outs   dx,DWORD PTR ds:[rsi]
  445ed9:	jb     0x445f4f
  445edb:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  445ee2:	add    BYTE PTR [rax],al
  445ee4:	nop
  445ee5:	add    esp,DWORD PTR [rbx+0x61]
  445ee8:	ins    BYTE PTR es:[rdi],dx
  445ee9:	ins    BYTE PTR es:[rdi],dx
  445eea:	outs   dx,DWORD PTR ds:[rsi]
  445eeb:	movsxd eax,DWORD PTR [rax]
  445eed:	add    BYTE PTR [rbp+0x69786503],bl
  445ef3:	je     0x445ef5
  445ef5:	add    BYTE PTR [rcx+0x6c636603],ah
  445efb:	outs   dx,DWORD PTR ds:[rsi]
  445efc:	jae    0x445f63
  445efe:	add    BYTE PTR [rax],al
  445f00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  445f01:	add    esp,DWORD PTR [rsi+0x66]
  445f04:	ins    BYTE PTR es:[rdi],dx
  445f05:	jne    0x445f7a
  445f07:	push   0x3a70000
  445f0c:	data16 addr32 gs je 0x445f84
  445f11:	add    BYTE PTR [rsi+0x706f6603],ch
  445f17:	outs   dx,BYTE PTR gs:[rsi]
  445f19:	add    BYTE PTR [rax+0x72706603],dh
  445f1f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  445f26:	data16 jo 0x445f9e
  445f29:	je     0x445f8e
  445f2b:	add    BYTE PTR [rbx+0x75706603],dh
  445f31:	je     0x445fa6
  445f33:	add    BYTE PTR [rdi+0x65726603],dh
  445f39:	add    BYTE PTR gs:[rax],al
  445f3c:	ret    0x6603
  445f3f:	ja     0x445fb3
  445f41:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c500
  445f49:	gs je  0x445faf
  445f4c:	add    BYTE PTR [rax],al
  445f4e:	mov    BYTE PTR [rbx],0x67
  445f51:	gs je  0x445fb7
  445f54:	push   0xffffffffc7007261
  445f59:	add    esp,DWORD PTR [rdi+0x65]
  445f5c:	je     0x445fc3
  445f5e:	outs   dx,BYTE PTR ds:[rsi]
  445f5f:	jbe    0x445f61
  445f61:	add    ah,dl
  445f63:	add    ebp,DWORD PTR [rcx+0x73]
  445f66:	ins    BYTE PTR es:[rdi],dx
  445f67:	outs   dx,DWORD PTR ds:[rsi]
  445f68:	ja     0x445fcf
  445f6a:	jb     0x445f6c
  445f6c:	xlat   BYTE PTR ds:[rbx]
  445f6d:	add    ebp,DWORD PTR [rcx+0x73]
  445f70:	jae    0x445fe2
  445f72:	(bad)  
  445f73:	movsxd esp,DWORD PTR [rbp+0x0]
  445f76:	fadd   DWORD PTR [rbx]
  445f78:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  445f7f:	add    dh,ah
  445f81:	add    ebp,DWORD PTR [rcx+0x73]
  445f84:	js     0x445fea
  445f86:	imul   esp,DWORD PTR [rdi+0x69],0xea000074
  445f8d:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  445f91:	(bad)  
  445f92:	ins    BYTE PTR es:[rdi],dx
  445f93:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  445f97:	jbe    0x445f99
  445f99:	add    al,dh
  445f9b:	add    ebp,DWORD PTR [rbp+0x61]
  445f9e:	ins    BYTE PTR es:[rdi],dx
  445f9f:	ins    BYTE PTR es:[rdi],dx
  445fa0:	outs   dx,DWORD PTR ds:[rsi]
  445fa1:	movsxd eax,DWORD PTR [rax]
  445fa3:	add    bh,dh
  445fa5:	add    ebp,DWORD PTR [rbp+0x65]
  445fa8:	ins    DWORD PTR es:[rdi],dx
  445fa9:	movsxd ebp,DWORD PTR [rbp+0x70]
  445fac:	add    BYTE PTR [rax],al
  445fae:	clc    
  445faf:	add    ebp,DWORD PTR [rbp+0x65]
  445fb2:	ins    DWORD PTR es:[rdi],dx
  445fb3:	movsxd esi,DWORD PTR [rax+0x79]
  445fb6:	add    BYTE PTR [rax],al
  445fb8:	stc    
  445fb9:	add    ebp,DWORD PTR [rbp+0x65]
  445fbc:	ins    DWORD PTR es:[rdi],dx
  445fbd:	ins    DWORD PTR es:[rdi],dx
  445fbe:	outs   dx,DWORD PTR ds:[rsi]
  445fbf:	jbe    0x446026
  445fc1:	add    dl,bh
  445fc3:	add    ebp,DWORD PTR [rbp+0x65]
  445fc6:	ins    DWORD PTR es:[rdi],dx
  445fc7:	jae    0x44602e
  445fc9:	je     0x445fcb
  445fcb:	add    dh,bh
  445fcd:	add    esi,DWORD PTR [rax+0x65]
  445fd0:	jb     0x446044
  445fd2:	outs   dx,DWORD PTR ds:[rsi]
  445fd3:	jb     0x445fd5
  445fd5:	add    BYTE PTR [rax],cl
  445fd7:	add    al,0x71
  445fd9:	jae    0x44604a
  445fdb:	jb     0x446051
  445fdd:	add    BYTE PTR [rsp+rax*1],cl
  445fe0:	jb     0x446047
  445fe2:	(bad)  
  445fe3:	ins    BYTE PTR es:[rdi],dx
  445fe4:	ins    BYTE PTR es:[rdi],dx
  445fe5:	outs   dx,DWORD PTR ds:[rsi]
  445fe6:	movsxd eax,DWORD PTR [rax]
  445fe8:	adc    eax,0x74657304
  445fed:	jbe    0x446051
  445fef:	jne    0x446057
  445ff1:	add    BYTE PTR [rsi],dl
  445ff3:	add    al,0x73
  445ff5:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  445ffc:	and    eax,DWORD PTR [rbx+rsi*2]
  445fff:	je     0x446073
  446001:	movsxd ebp,DWORD PTR [rax+0x72]
  446004:	add    BYTE PTR [rax],al
  446006:	and    al,0x4
  446008:	jae    0x44607e
  44600a:	jb     0x44606f
  44600c:	ins    DWORD PTR es:[rdi],dx
  44600d:	jo     0x44600f
  44600f:	add    BYTE PTR [rax],ch
  446011:	add    al,0x73
  446013:	je     0x446087
  446015:	movsxd esi,DWORD PTR [rbx+0x70]
  446018:	outs   dx,BYTE PTR ds:[rsi]
  446019:	add    BYTE PTR [rcx],ch
  44601b:	add    al,0x73
  44601d:	je     0x446091
  44601f:	gs jb  0x446094
  446022:	outs   dx,DWORD PTR ds:[rsi]
  446023:	jb     0x446025
  446025:	add    BYTE PTR [rdx],ch
  446027:	add    al,0x73
  446029:	je     0x44609d
  44602b:	data16 je 0x446097
  44602e:	ins    DWORD PTR es:[rdi],dx
  44602f:	add    BYTE PTR gs:[rax],al
  446032:	sub    eax,DWORD PTR [rbx+rsi*2]
  446035:	je     0x4460a9
  446037:	ins    BYTE PTR es:[rdi],dx
  446038:	outs   dx,BYTE PTR gs:[rsi]
  44603a:	add    BYTE PTR [rax],al
  44603c:	sub    al,0x4
  44603e:	jae    0x4460b4
  446040:	jb     0x4460b0
  446042:	movsxd esp,DWORD PTR [rcx+0x74]
  446045:	add    BYTE PTR [rsi],ch
  446047:	add    al,0x73
  446049:	je     0x4460bd
  44604b:	outs   dx,BYTE PTR ds:[rsi]
  44604c:	movsxd ebp,DWORD PTR [rbp+0x70]
  44604f:	add    BYTE PTR [rdx],dh
  446051:	add    al,0x73
  446053:	je     0x4460c7
  446055:	jb     0x4460ba
  446057:	push   0x4340072
  44605c:	jae    0x4460d2
  44605e:	jb     0x4460d3
  446060:	je     0x4460d4
  446062:	add    BYTE PTR [rax],al
  446064:	ss add al,0x73
  446067:	je     0x4460db
  446069:	je     0x4460da
  44606b:	imul   eax,DWORD PTR [rax],0x0
  44606e:	cmp    BYTE PTR [rbx+rsi*2],al
  446071:	je     0x4460e5
  446073:	je     0x4460e4
  446075:	ins    BYTE PTR es:[rdi],dx
  446076:	add    BYTE PTR [rax],al
  446078:	cmp    DWORD PTR [rbx+rsi*2],eax
  44607b:	je     0x4460ef
  44607d:	je     0x4460ee
  44607f:	jne    0x4460ed
  446081:	add    BYTE PTR [rax+0x4],cl
  446084:	je     0x4460f5
  446086:	ins    BYTE PTR es:[rdi],dx
  446087:	outs   dx,DWORD PTR ds:[rsi]
  446088:	ja     0x4460ef
  44608a:	jb     0x44608c
  44608c:	rex.WR add al,0x75
  44608f:	outs   dx,BYTE PTR ds:[rsi]
  446090:	addr32 gs je 0x4460f7
  446094:	add    BYTE PTR [rax],al
  446096:	rex.WRX add al,0x76
  446099:	data16 jo 0x44610e
  44609c:	imul   ebp,DWORD PTR [rsi+0x74],0x61000066
  4460a3:	add    al,0x77
  4460a5:	movsxd esi,DWORD PTR [rbx+0x6c]
  4460a8:	outs   dx,BYTE PTR gs:[rsi]
  4460aa:	add    BYTE PTR [rax],al
  4460ac:	movabs ds:0x65746972775f04,eax
  4460b5:	add    ch,cl
  4460b7:	add    al,0x5f
  4460b9:	jb     0x446120
  4460bb:	(bad)  
  4460bc:	fs add ah,bl
  4460bf:	add    al,0x5f
  4460c1:	imul   esp,DWORD PTR [rdx+0x68],0x69
  4460c5:	je     0x4460c7
  4460c7:	add    ah,ah
  4460c9:	add    al,0x5f
  4460cb:	addr32 gs je 0x446132
  4460cf:	push   0x6e0000
  4460d4:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4460d6:	push   rsp
  4460d7:	(bad)  
  4460d8:	jae    0x446145
  4460da:	rex.WRB
  4460db:	gs ins DWORD PTR es:[rdi],dx
  4460dd:	rex.RX jb 0x446145
  4460e0:	add    BYTE PTR gs:[rip+0x74654700],dl        # 0x74a9a7e7
  4460e7:	push   rax
  4460e8:	jb     0x446159
  4460ea:	movsxd esp,DWORD PTR [rbp+0x73]
  4460ed:	jae    0x44613c
  4460ef:	gs ins DWORD PTR es:[rdi],dx
  4460f1:	outs   dx,DWORD PTR ds:[rsi]
  4460f2:	jb     0x44616d
  4460f4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4460f6:	outs   dx,WORD PTR ds:[rsi]
  4460f8:	add    BYTE PTR [rax],al
  4460fa:	or     al,BYTE PTR [rax]
  4460fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4460fe:	ins    DWORD PTR es:[rdi],dx
  4460ff:	ins    DWORD PTR es:[rdi],dx
  446100:	(bad)  
  446101:	outs   dx,BYTE PTR ds:[rsi]
  446102:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
  44610b:	addr32 jbe 0x446165
  44610e:	add    BYTE PTR [rax],al
  446110:	adc    al,BYTE PTR [rcx]
  446112:	rex.RXB
  446113:	gs je  0x44615a
  446116:	gs jae 0x446184
  446119:	je     0x44618a
  44611b:	jo     0x446174
  44611d:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
  446124:	(bad)  
  446125:	add    BYTE PTR [rcx+0x76],ah
  446128:	pop    rdi
  446129:	(bad)  
  44612a:	imul   esi,DWORD PTR [rbx+rsi*2+0x74],0x6d616572
  446132:	pop    rdi
  446133:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44613a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  44613e:	add    BYTE PTR gs:[rdi],al
  446141:	add    BYTE PTR [rcx+0x76],ah
  446144:	pop    rdi
  446145:	(bad)  
  446146:	imul   esi,DWORD PTR [rbx+rsi*2+0x74],0x6d616572
  44614e:	pop    rdi
  44614f:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446156:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  44615d:	add    BYTE PTR [rax],al
  44615f:	add    BYTE PTR [rax],cl
  446161:	add    BYTE PTR [rcx+0x76],ah
  446164:	pop    rdi
  446165:	(bad)  
  446166:	imul   esi,DWORD PTR [rbx+rsi*2+0x74],0x6d616572
  44616e:	pop    rdi
  44616f:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446176:	imul   ebp,DWORD PTR [rsi+0x69],0x9000074
  44617d:	add    BYTE PTR [rcx+0x76],ah
  446180:	pop    rdi
  446181:	(bad)  
  446182:	imul   esi,DWORD PTR [rbx+rsi*2+0x74],0x6d616572
  44618a:	pop    rdi
  44618b:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446192:	outs   dx,BYTE PTR ds:[rsi]
  446193:	gs js  0x44620a
  446196:	add    BYTE PTR [rax],al
  446198:	(bad)  
  446199:	add    BYTE PTR [rcx+0x76],ah
  44619c:	pop    rdi
  44619d:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461a0:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  4461a4:	gs je  0x446206
  4461a7:	ins    BYTE PTR es:[rdi],dx
  4461a8:	outs   dx,DWORD PTR ds:[rsi]
  4461a9:	ja     0x44621d
  4461ab:	gs jae 0x4461ae
  4461ae:	add    BYTE PTR [rax],al
  4461b0:	adc    al,BYTE PTR [rax]
  4461b2:	(bad)  
  4461b3:	jbe    0x446214
  4461b5:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461b8:	movsxd ebx,DWORD PTR gs:[rdi+0x69]
  4461bc:	jae    0x44621d
  4461be:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4461c3:	gs jb  0x4461c6
  4461c6:	add    BYTE PTR [rax],al
  4461c8:	adc    eax,DWORD PTR [rax]
  4461ca:	(bad)  
  4461cb:	jbe    0x44622c
  4461cd:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461d0:	movsxd ebx,DWORD PTR gs:[rdi+0x69]
  4461d4:	jae    0x446235
  4461d6:	outs   dx,BYTE PTR gs:[rsi]
  4461d8:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461db:	gs jb  0x4461de
  4461de:	add    BYTE PTR [rax],al
  4461e0:	adc    al,0x0
  4461e2:	(bad)  
  4461e3:	jbe    0x446244
  4461e5:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461e8:	movsxd ebx,DWORD PTR gs:[rdi+0x6e]
  4461ec:	gs js  0x446263
  4461ef:	add    BYTE PTR [rip+0x5f766100],dl        # 0x5fbac2f5
  4461f5:	movsxd ebp,DWORD PTR [rdi+0x64]
  4461f8:	movsxd ebx,DWORD PTR gs:[rdi+0x73]
  4461fc:	gs je  0x44625e
  4461ff:	movsxd ebp,DWORD PTR [rax+0x72]
  446202:	outs   dx,DWORD PTR ds:[rsi]
  446203:	ins    DWORD PTR es:[rdi],dx
  446204:	(bad)  
  446205:	pop    rdi
  446206:	imul   ebp,DWORD PTR [rsi+0x74],0x6d5f6172
  44620d:	(bad)  
  44620e:	je     0x446282
  446210:	imul   edi,DWORD PTR [rax+0x0],0x61001b00
  446217:	jbe    0x446278
  446219:	movsxd ebp,DWORD PTR [rdi+0x70]
  44621c:	jns    0x44627d
  44621e:	jo     0x446281
  446220:	movsxd ebp,DWORD PTR [rbx+0x65]
  446223:	je     0x446284
  446225:	jae    0x446290
  446227:	fs gs pop rdi
  44622a:	fs (bad) 
  44622c:	je     0x44628f
  44622e:	add    BYTE PTR [rax],al
  446230:	sub    al,BYTE PTR [rax]
  446232:	(bad)  
  446233:	jbe    0x446294
  446235:	data16 jb 0x44629d
  446238:	gs pop rdi
  44623a:	jo     0x44629d
  44623c:	movsxd ebp,DWORD PTR [rbx+0x65]
  44623f:	je     0x446241
  446241:	add    BYTE PTR [rax],al
  446243:	add    BYTE PTR [rbx],ch
  446245:	add    BYTE PTR [rcx+0x76],ah
  446248:	pop    rdi
  446249:	addr32 gs je 0x4462ac
  44624d:	(bad)  
  44624e:	jne    0x4462b4
  446250:	imul   ebp,DWORD PTR [rdi+0x5f],0x6d617266
  446257:	gs pop rdi
  446259:	fs jne 0x4462ce
  44625c:	(bad)  
  44625d:	je     0x4462c8
  44625f:	outs   dx,DWORD PTR ds:[rsi]
  446260:	outs   dx,BYTE PTR ds:[rsi]
  446261:	add    BYTE PTR [rax],al
  446263:	add    BYTE PTR [rsi],ch
  446265:	add    BYTE PTR [rcx+0x76],ah
  446268:	pop    rdi
  446269:	addr32 gs je 0x4462cc
  44626d:	gs js  0x4462d1
  446270:	movsxd esi,DWORD PTR [rdi+rbx*2+0x62]
  446274:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  44627c:	jae    0x4462df
  44627e:	ins    DWORD PTR es:[rdi],dx
  44627f:	jo     0x4462ed
  446281:	add    BYTE PTR gs:[rax],al
  446284:	xor    eax,0x5f766100
  446289:	imul   ebp,DWORD PTR [rsi+0x69],0x61705f74
  446290:	movsxd ebp,DWORD PTR [rbx+0x65]
  446293:	je     0x446295
  446295:	add    BYTE PTR [rax],al
  446297:	add    BYTE PTR [rax+0x0],al
  44629a:	(bad)  
  44629b:	jbe    0x4462fc
  44629d:	jo     0x446300
  44629f:	movsxd ebp,DWORD PTR [rbx+0x65]
  4462a2:	je     0x446303
  4462a4:	addr32 gs je 0x446307
  4462a8:	jae    0x446313
  4462aa:	fs gs pop rdi
  4462ad:	fs (bad) 
  4462af:	je     0x446312
  4462b1:	add    BYTE PTR [rax],al
  4462b3:	add    BYTE PTR [rbx+0x0],al
  4462b6:	(bad)  
  4462b7:	jbe    0x446318
  4462b9:	jo     0x44631c
  4462bb:	movsxd ebp,DWORD PTR [rbx+0x65]
  4462be:	je     0x44631f
  4462c0:	outs   dx,BYTE PTR ds:[rsi]
  4462c1:	gs ja  0x446323
  4462c4:	jae    0x44632f
  4462c6:	fs gs pop rdi
  4462c9:	fs (bad) 
  4462cb:	je     0x44632e
  4462cd:	add    BYTE PTR [rax],al
  4462cf:	add    BYTE PTR [rsi+0x0],al
  4462d2:	(bad)  
  4462d3:	jbe    0x446334
  4462d5:	jo     0x446338
  4462d7:	movsxd ebp,DWORD PTR [rbx+0x65]
  4462da:	je     0x44633b
  4462dc:	jb     0x446343
  4462de:	jae    0x446343
  4462e0:	(bad)  
  4462e1:	ins    BYTE PTR es:[rdi],dx
  4462e2:	gs pop rdi
  4462e4:	je     0x446359
  4462e6:	add    BYTE PTR [rax],al
  4462e8:	rex.WB add BYTE PTR [r9+0x76],spl
  4462ec:	pop    rdi
  4462ed:	jo     0x446350
  4462ef:	movsxd ebp,DWORD PTR [rbx+0x65]
  4462f2:	je     0x446353
  4462f4:	jae    0x446366
  4462f6:	ins    BYTE PTR es:[rdi],dx
  4462f7:	imul   esi,DWORD PTR [rdi+rbx*2+0x73],0x5f656469
  4462ff:	fs (bad) 
  446301:	je     0x446364
  446303:	add    BYTE PTR [rax+rax*1+0x61],cl
  446307:	jbe    0x446368
  446309:	jo     0x44636c
  44630b:	jb     0x446380
  44630d:	gs jb  0x44636f
  446310:	movsxd ebp,DWORD PTR [rax+0x61]
  446313:	outs   dx,BYTE PTR ds:[rsi]
  446314:	add    BYTE PTR gs:[eax],al
  446318:	rex.WRB add BYTE PTR [r9+0x76],r12b
  44631c:	pop    rdi
  44631d:	jo     0x446380
  44631f:	jb     0x446394
  446321:	gs jb  0x446383
  446324:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  446328:	add    BYTE PTR gs:[rax],al
  44632b:	add    BYTE PTR [rsi+0x0],cl
  44632e:	(bad)  
  44632f:	jbe    0x446390
  446331:	jo     0x446394
  446333:	jb     0x4463a8
  446335:	gs jb  0x446397
  446338:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  44633f:	add    BYTE PTR [rax+0x0],ch
  446342:	(bad)  
  446343:	jbe    0x4463a8
  446345:	outs   dx,DWORD PTR ds:[rsi]
  446346:	fs movsxd ebx,DWORD PTR gs:[rdi+0x61]
  44634b:	ins    BYTE PTR es:[rdi],dx
  44634c:	ins    BYTE PTR es:[rdi],dx
  44634d:	outs   dx,DWORD PTR ds:[rsi]
  44634e:	movsxd ebx,DWORD PTR [rdi+0x63]
  446351:	outs   dx,DWORD PTR ds:[rsi]
  446352:	outs   dx,BYTE PTR ds:[rsi]
  446353:	je     0x4463ba
  446355:	js     0x4463cb
  446357:	xor    eax,DWORD PTR [rax]
  446359:	add    BYTE PTR [rax],al
  44635b:	add    BYTE PTR [rbx+0x0],ch
  44635e:	(bad)  
  44635f:	jbe    0x4463c4
  446361:	outs   dx,DWORD PTR ds:[rsi]
  446362:	fs movsxd ebx,DWORD PTR gs:[rdi+0x63]
  446367:	ins    BYTE PTR es:[rdi],dx
  446368:	outs   dx,DWORD PTR ds:[rsi]
  446369:	jae    0x4463d0
  44636b:	add    BYTE PTR [rax+rax*1+0x61],ch
  44636f:	jbe    0x4463d4
  446371:	outs   dx,DWORD PTR ds:[rsi]
  446372:	fs movsxd ebx,DWORD PTR gs:[rdi+0x63]
  446377:	outs   dx,DWORD PTR ds:[rsi]
  446378:	outs   dx,BYTE PTR ds:[rsi]
  446379:	imul   sp,WORD PTR [rdi+0x75],0x6172
  44637f:	je     0x4463ea
  446381:	outs   dx,DWORD PTR ds:[rsi]
  446382:	outs   dx,BYTE PTR ds:[rsi]
  446383:	add    BYTE PTR [rbp+0x0],ch
  446386:	(bad)  
  446387:	jbe    0x4463ec
  446389:	outs   dx,DWORD PTR ds:[rsi]
  44638a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x63]
  44638f:	outs   dx,DWORD PTR ds:[rsi]
  446390:	jo     0x44640b
  446392:	pop    rdi
  446393:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446396:	je     0x4463fd
  446398:	js     0x44640e
  44639a:	add    BYTE PTR [rax],al
  44639c:	jb     0x44639e
  44639e:	(bad)  
  44639f:	jbe    0x446404
  4463a1:	outs   dx,DWORD PTR ds:[rsi]
  4463a2:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  4463a7:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4463ab:	gs pop rdi
  4463ad:	(bad)  
  4463ae:	jne    0x446414
  4463b0:	imul   ebp,DWORD PTR [rdi+0x34],0x61007300
  4463b7:	jbe    0x44641c
  4463b9:	outs   dx,DWORD PTR ds:[rsi]
  4463ba:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  4463bf:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4463c3:	gs pop rdi
  4463c5:	jae    0x44643c
  4463c7:	(bad)  
  4463c8:	je     0x446433
  4463ca:	je     0x446438
  4463cc:	xor    al,BYTE PTR gs:[rax]
  4463cf:	add    BYTE PTR [rax+rax*1+0x61],dh
  4463d3:	jbe    0x446438
  4463d5:	outs   dx,DWORD PTR ds:[rsi]
  4463d6:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  4463db:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4463df:	gs pop rdi
  4463e1:	jbe    0x44644c
  4463e3:	fs outs dx,DWORD PTR gs:[rsi]
  4463e6:	xor    al,BYTE PTR [rax]
  4463e8:	js     0x4463ea
  4463ea:	(bad)  
  4463eb:	jbe    0x446450
  4463ed:	outs   dx,DWORD PTR ds:[rsi]
  4463ee:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  4463f3:	gs data16 (bad) 
  4463f6:	jne    0x446464
  4463f8:	je     0x446459
  4463fa:	addr32 gs je 0x44645d
  4463fe:	(bad)  
  4463ff:	jne    0x446467
  446401:	data16 gs jb 0x446437
  446405:	add    BYTE PTR [rax],al
  446407:	add    BYTE PTR [rax+rax*1+0x61],bh
  44640b:	jbe    0x446470
  44640d:	outs   dx,DWORD PTR ds:[rsi]
  44640e:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  446413:	gs jae 0x446479
  446416:	jb     0x446481
  446418:	jo     0x44648e
  44641a:	outs   dx,DWORD PTR ds:[rsi]
  44641b:	jb     0x44647c
  44641d:	addr32 gs je 0x446421
  446421:	add    BYTE PTR [rax],al
  446423:	add    BYTE PTR [rbp+0x0],bh
  446426:	(bad)  
  446427:	jbe    0x44648c
  446429:	outs   dx,DWORD PTR ds:[rsi]
  44642a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  44642f:	gs jae 0x446495
  446432:	jb     0x44649d
  446434:	jo     0x4464aa
  446436:	outs   dx,DWORD PTR ds:[rsi]
  446437:	jb     0x446498
  446439:	addr32 gs je 0x44649c
  44643d:	(bad)  
  44643e:	jns    0x44649f
  446440:	outs   dx,BYTE PTR ds:[rsi]
  446441:	(bad)  
  446442:	ins    DWORD PTR es:[rdi],dx
  446443:	add    BYTE PTR gs:[rax],al
  446446:	add    BYTE PTR [rax],al
  446448:	jle    0x44644a
  44644a:	(bad)  
  44644b:	jbe    0x4464b0
  44644d:	outs   dx,DWORD PTR ds:[rsi]
  44644e:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  446453:	gs jae 0x4464b9
  446456:	jb     0x4464c1
  446458:	jo     0x4464ce
  44645a:	outs   dx,DWORD PTR ds:[rsi]
  44645b:	jb     0x4464bc
  44645d:	outs   dx,BYTE PTR ds:[rsi]
  44645e:	gs js  0x4464d5
  446461:	add    BYTE PTR [rax],al
  446463:	add    BYTE PTR [rax+0x63766100],al
  446469:	outs   dx,DWORD PTR ds:[rsi]
  44646a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x65]
  44646f:	outs   dx,BYTE PTR ds:[rsi]
  446470:	movsxd ebp,DWORD PTR [rdi+0x64]
  446473:	gs pop rdi
  446475:	(bad)  
  446476:	jne    0x4464dc
  446478:	imul   ebp,DWORD PTR [rdi+0x32],0x61008100
  44647f:	jbe    0x4464e4
  446481:	outs   dx,DWORD PTR ds:[rsi]
  446482:	fs movsxd ebx,DWORD PTR gs:[rdi+0x65]
  446487:	outs   dx,BYTE PTR ds:[rsi]
  446488:	movsxd ebp,DWORD PTR [rdi+0x64]
  44648b:	gs pop rdi
  44648d:	jae    0x446504
  44648f:	(bad)  
  446490:	je     0x4464fb
  446492:	je     0x446500
  446494:	add    BYTE PTR gs:[rax],al
  446497:	add    BYTE PTR [rbx+0x63766100],al
  44649d:	outs   dx,DWORD PTR ds:[rsi]
  44649e:	fs movsxd ebx,DWORD PTR gs:[rdi+0x65]
  4464a3:	outs   dx,BYTE PTR ds:[rsi]
  4464a4:	movsxd ebp,DWORD PTR [rdi+0x64]
  4464a7:	gs pop rdi
  4464a9:	jbe    0x446514
  4464ab:	fs outs dx,DWORD PTR gs:[rsi]
  4464ae:	xor    al,BYTE PTR [rax]
  4464b0:	xchg   DWORD PTR [rax],eax
  4464b2:	(bad)  
  4464b3:	jbe    0x446518
  4464b5:	outs   dx,DWORD PTR ds:[rsi]
  4464b6:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  4464bb:	imul   ebp,DWORD PTR [rsi+0x64],0x7365625f
  4464c2:	je     0x446523
  4464c4:	jo     0x44652f
  4464c6:	js     0x446527
  4464c8:	ins    WORD PTR es:[rdi],dx
  4464ca:	je     0x44652b
  4464cc:	outs   dx,DWORD PTR ds:[rsi]
  4464cd:	pop    di
  4464cf:	xor    al,BYTE PTR [rax]
  4464d1:	add    BYTE PTR [rax],al
  4464d3:	add    BYTE PTR [rcx+0x63766100],cl
  4464d9:	outs   dx,DWORD PTR ds:[rsi]
  4464da:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  4464df:	imul   ebp,DWORD PTR [rsi+0x64],0x6365645f
  4464e6:	outs   dx,DWORD PTR ds:[rsi]
  4464e7:	fs gs jb 0x4464eb
  4464eb:	add    BYTE PTR [rdx+0x63766100],cl
  4464f1:	outs   dx,DWORD PTR ds:[rsi]
  4464f2:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  4464f7:	imul   ebp,DWORD PTR [rsi+0x64],0x6365645f
  4464fe:	outs   dx,DWORD PTR ds:[rsi]
  4464ff:	fs gs jb 0x446562
  446503:	(bad)  
  446504:	jns    0x446565
  446506:	outs   dx,BYTE PTR ds:[rsi]
  446507:	(bad)  
  446508:	ins    DWORD PTR es:[rdi],dx
  446509:	add    BYTE PTR gs:[rax],al
  44650c:	mov    eax,DWORD PTR [rax]
  44650e:	(bad)  
  44650f:	jbe    0x446574
  446511:	outs   dx,DWORD PTR ds:[rsi]
  446512:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  446517:	imul   ebp,DWORD PTR [rsi+0x64],0x636e655f
  44651e:	outs   dx,DWORD PTR ds:[rsi]
  44651f:	fs gs jb 0x446523
  446523:	add    BYTE PTR [rax+rax*1+0x6f637661],cl
  44652a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  44652f:	imul   ebp,DWORD PTR [rsi+0x64],0x636e655f
  446536:	outs   dx,DWORD PTR ds:[rsi]
  446537:	fs gs jb 0x44659a
  44653b:	(bad)  
  44653c:	jns    0x44659d
  44653e:	outs   dx,BYTE PTR ds:[rsi]
  44653f:	(bad)  
  446540:	ins    DWORD PTR es:[rdi],dx
  446541:	add    BYTE PTR gs:[rax],al
  446544:	mov    es,WORD PTR [rax]
  446546:	(bad)  
  446547:	jbe    0x4465ac
  446549:	outs   dx,DWORD PTR ds:[rsi]
  44654a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  44654f:	jb     0x4465b6
  446551:	gs pop rdi
  446553:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446556:	je     0x4465bd
  446558:	js     0x4465ce
  44655a:	add    BYTE PTR [rax],al
  44655c:	xchg   ecx,eax
  44655d:	add    BYTE PTR [rcx+0x76],ah
  446560:	movsxd ebp,DWORD PTR [rdi+0x64]
  446563:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  446567:	gs je  0x4465c9
  44656a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44656e:	jae    0x446570
  446570:	xchg   edx,eax
  446571:	add    BYTE PTR [rcx+0x76],ah
  446574:	movsxd ebp,DWORD PTR [rdi+0x64]
  446577:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  44657b:	gs je  0x4465dd
  44657e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446581:	je     0x4465e8
  446583:	js     0x4465f9
  446585:	pop    rdi
  446586:	fs gs data16 (bad) 
  44658a:	jne    0x4465f8
  44658c:	je     0x446601
  44658e:	xor    eax,DWORD PTR [rax]
  446590:	xchg   esp,eax
  446591:	add    BYTE PTR [rcx+0x76],ah
  446594:	movsxd ebp,DWORD PTR [rdi+0x64]
  446597:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  44659b:	gs je  0x4465fd
  44659e:	data16 jb 0x446602
  4465a1:	ins    DWORD PTR es:[rdi],dx
  4465a2:	gs pop rdi
  4465a4:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4465a8:	jae    0x4465aa
  4465aa:	add    BYTE PTR [rax],al
  4465ac:	xchg   esi,eax
  4465ad:	add    BYTE PTR [rcx+0x76],ah
  4465b0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4465b3:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  4465b7:	gs je  0x446619
  4465ba:	outs   dx,BYTE PTR ds:[rsi]
  4465bb:	(bad)  
  4465bc:	ins    DWORD PTR es:[rdi],dx
  4465bd:	add    BYTE PTR gs:[rax],al
  4465c0:	pushf  
  4465c1:	add    BYTE PTR [rcx+0x76],ah
  4465c4:	movsxd ebp,DWORD PTR [rdi+0x64]
  4465c7:	movsxd ebx,DWORD PTR gs:[rdi+0x6f]
  4465cb:	jo     0x446632
  4465cd:	outs   dx,BYTE PTR ds:[rsi]
  4465ce:	xor    al,BYTE PTR [rax]
  4465d0:	lahf   
  4465d1:	add    BYTE PTR [rcx+0x76],ah
  4465d4:	movsxd ebp,DWORD PTR [rdi+0x64]
  4465d7:	movsxd ebx,DWORD PTR gs:[rdi+0x72]
  4465db:	imul   esi,DWORD PTR gs:[ebx+0x74],0x615f7265
  4465e4:	ins    BYTE PTR es:[rdi],dx
  4465e5:	ins    BYTE PTR es:[rdi],dx
  4465e6:	add    BYTE PTR [rax],al
  4465e8:	movabs ds:0x6365646f63766100,al
  4465f1:	pop    rdi
  4465f2:	jbe    0x446659
  4465f4:	jb     0x446669
  4465f6:	imul   ebp,DWORD PTR [rdi+0x6e],0xa5000000
  4465fd:	add    BYTE PTR [rcx+0x76],ah
  446600:	jo     0x44666b
  446602:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  446606:	gs pop rdi
  446608:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  44660f:	add    bl,bl
  446611:	add    BYTE PTR [rcx+0x76],ah
  446614:	jae    0x44668b
  446616:	(bad)  
  446617:	je     0x446682
  446619:	je     0x446687
  44661b:	gs pop rdi
  44661d:	data16 jb 0x446685
  446620:	add    BYTE PTR gs:[rax],al
  446623:	add    BYTE PTR [rdx],al
  446625:	add    BYTE PTR [rcx+0x76],ah
  446628:	pop    rdi
  446629:	imul   ebp,DWORD PTR [rsi+0x70],0x615f7475
  446630:	jne    0x446696
  446632:	imul   ebp,DWORD PTR [rdi+0x5f],0x69766564
  446639:	movsxd esp,DWORD PTR [rbp+0x5f]
  44663c:	outs   dx,BYTE PTR ds:[rsi]
  44663d:	gs js  0x4466b4
  446640:	add    BYTE PTR [rax],al
  446642:	add    BYTE PTR [rax],al
  446644:	add    eax,DWORD PTR [rax]
  446646:	(bad)  
  446647:	jbe    0x4466a8
  446649:	imul   ebp,DWORD PTR [rsi+0x70],0x765f7475
  446650:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x7665645f
  446658:	imul   esp,DWORD PTR [rbx+0x65],0x78656e5f
  44665f:	je     0x446661
  446661:	add    BYTE PTR [rax],al
  446663:	add    BYTE PTR [rax+rax*1],al
  446666:	(bad)  
  446667:	jbe    0x4466c8
  446669:	outs   dx,DWORD PTR ds:[rsi]
  44666a:	jne    0x4466e0
  44666c:	jo     0x4466e3
  44666e:	je     0x4466cf
  446670:	(bad)  
  446671:	jne    0x4466d7
  446673:	imul   ebp,DWORD PTR [rdi+0x5f],0x69766564
  44667a:	movsxd esp,DWORD PTR [rbp+0x5f]
  44667d:	outs   dx,BYTE PTR ds:[rsi]
  44667e:	gs js  0x4466f5
  446681:	add    BYTE PTR [rax],al
  446683:	add    BYTE PTR [rip+0x5f766100],al        # 0x5fbac789
  446689:	outs   dx,DWORD PTR ds:[rsi]
  44668a:	jne    0x446700
  44668c:	jo     0x446703
  44668e:	je     0x4466ef
  446690:	jbe    0x4466fb
  446692:	fs outs dx,DWORD PTR gs:[rsi]
  446695:	pop    rdi
  446696:	fs gs jbe 0x446703
  44669a:	movsxd esp,DWORD PTR [rbp+0x5f]
  44669d:	outs   dx,BYTE PTR ds:[rsi]
  44669e:	gs js  0x446715
  4466a1:	add    BYTE PTR [rax],al
  4466a3:	add    BYTE PTR [rcx],cl
  4466a5:	add    BYTE PTR [rcx+0x76],ah
  4466a8:	fs gs jbe 0x446715
  4466ac:	movsxd esp,DWORD PTR [rbp+0x5f]
  4466af:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4466b2:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4466b8:	je     0x446723
  4466ba:	outs   dx,DWORD PTR ds:[rsi]
  4466bb:	outs   dx,BYTE PTR ds:[rsi]
  4466bc:	add    BYTE PTR [rax],al
  4466be:	add    BYTE PTR [rax],al
  4466c0:	or     eax,DWORD PTR [rax]
  4466c2:	(bad)  
  4466c3:	jbe    0x446729
  4466c5:	gs jbe 0x446731
  4466c8:	movsxd esp,DWORD PTR [rbp+0x5f]
  4466cb:	data16 jb 0x446733
  4466ce:	gs pop rdi
  4466d0:	ins    BYTE PTR es:[rdi],dx
  4466d1:	imul   esi,DWORD PTR [rbx+0x74],0x7665645f
  4466d8:	imul   esp,DWORD PTR [rbx+0x65],0x73
  4466df:	add    BYTE PTR [rsi],cl
  4466e1:	add    BYTE PTR [rcx+0x76],ah
  4466e4:	fs gs jbe 0x446751
  4466e8:	movsxd esp,DWORD PTR [rbp+0x5f]
  4466eb:	ins    BYTE PTR es:[rdi],dx
  4466ec:	imul   esi,DWORD PTR [rbx+0x74],0x706e695f
  4466f3:	jne    0x446769
  4466f5:	pop    rdi
  4466f6:	jae    0x446767
  4466f8:	jne    0x44676c
  4466fa:	movsxd esp,DWORD PTR [rbp+0x73]
  4466fd:	add    BYTE PTR [rax],al
  4466ff:	add    BYTE PTR [rdi],cl
  446701:	add    BYTE PTR [rcx+0x76],ah
  446704:	fs gs jbe 0x446771
  446708:	movsxd esp,DWORD PTR [rbp+0x5f]
  44670b:	ins    BYTE PTR es:[rdi],dx
  44670c:	imul   esi,DWORD PTR [rbx+0x74],0x74756f5f
  446713:	jo     0x44678a
  446715:	je     0x446776
  446717:	jae    0x446782
  446719:	outs   dx,BYTE PTR ds:[rsi]
  44671a:	imul   esi,DWORD PTR [rbx+0x0],0x0
  44671e:	add    BYTE PTR [rax],al
  446720:	adc    BYTE PTR [rax],al
  446722:	(bad)  
  446723:	jbe    0x446789
  446725:	gs jbe 0x446791
  446728:	movsxd esp,DWORD PTR [rbp+0x5f]
  44672b:	jb     0x446792
  44672d:	imul   esi,DWORD PTR [ebx+0x74],0x615f7265
  446735:	ins    BYTE PTR es:[rdi],dx
  446736:	ins    BYTE PTR es:[rdi],dx
  446737:	add    BYTE PTR [rcx],dl
  446739:	add    BYTE PTR [rcx+0x76],ah
  44673c:	fs gs jbe 0x4467a9
  446740:	movsxd esp,DWORD PTR [rbp+0x5f]
  446743:	jbe    0x4467aa
  446745:	jb     0x4467ba
  446747:	imul   ebp,DWORD PTR [rdi+0x6e],0x30000
  44674e:	(bad)  
  44674f:	jbe    0x4467b0
  446751:	(bad)  
  446752:	jne    0x4467ba
  446754:	data16 gs jb 0x4467cb
  446758:	imul   ebp,DWORD PTR [rsi+0x6b],0x7465675f
  44675f:	pop    rdi
  446760:	data16 jb 0x4467c4
  446763:	ins    DWORD PTR es:[rdi],dx
  446764:	gs pop rdi
  446766:	data16 ins BYTE PTR es:[rdi],dx
  446768:	(bad)  
  446769:	addr32 jae 0x44676c
  44676c:	add    al,0x0
  44676e:	(bad)  
  44676f:	jbe    0x4467d0
  446771:	(bad)  
  446772:	jne    0x4467da
  446774:	data16 gs jb 0x4467eb
  446778:	imul   ebp,DWORD PTR [rsi+0x6b],0x7465675f
  44677f:	pop    rdi
  446780:	data16 jb 0x4467e4
  446783:	ins    DWORD PTR es:[rdi],dx
  446784:	gs pop rdi
  446786:	jb     0x4467e9
  446788:	je     0x4467ef
  44678a:	add    BYTE PTR [rax],al
  44678c:	or     al,BYTE PTR [rax]
  44678e:	(bad)  
  44678f:	jbe    0x4467f0
  446791:	(bad)  
  446792:	jne    0x4467fa
  446794:	data16 gs jb 0x44680b
  446798:	imul   ebp,DWORD PTR [rsi+0x6b],0x7465735f
  44679f:	pop    rdi
  4467a0:	data16 jb 0x446804
  4467a3:	ins    DWORD PTR es:[rdi],dx
  4467a4:	gs pop rdi
  4467a6:	jae    0x446811
  4467a8:	jp     0x44680f
  4467aa:	add    BYTE PTR [rax],al
  4467ac:	or     eax,DWORD PTR [rax]
  4467ae:	(bad)  
  4467af:	jbe    0x446810
  4467b1:	(bad)  
  4467b2:	jne    0x44681a
  4467b4:	data16 gs jb 0x44682b
  4467b8:	jb     0x44681d
  4467ba:	pop    rdi
  4467bb:	(bad)  
  4467bc:	fs fs pop rdi
  4467bf:	data16 jb 0x446823
  4467c2:	ins    DWORD PTR es:[rdi],dx
  4467c3:	add    BYTE PTR gs:[rax],al
  4467c6:	add    BYTE PTR [rax],al
  4467c8:	or     al,0x0
  4467ca:	(bad)  
  4467cb:	jbe    0x44682c
  4467cd:	(bad)  
  4467ce:	jne    0x446836
  4467d0:	data16 gs jb 0x446847
  4467d4:	jb     0x446839
  4467d6:	pop    rdi
  4467d7:	(bad)  
  4467d8:	fs fs pop rdi
  4467db:	data16 jb 0x44683f
  4467de:	ins    DWORD PTR es:[rdi],dx
  4467df:	gs pop rdi
  4467e1:	data16 ins BYTE PTR es:[rdi],dx
  4467e3:	(bad)  
  4467e4:	addr32 jae 0x4467e7
  4467e7:	add    BYTE PTR [rdi],cl
  4467e9:	add    BYTE PTR [rcx+0x76],ah
  4467ec:	pop    rdi
  4467ed:	(bad)  
  4467ee:	jne    0x446856
  4467f0:	data16 gs jb 0x446867
  4467f4:	jb     0x446859
  4467f6:	pop    rdi
  4467f7:	addr32 gs je 0x44685a
  4467fb:	outs   dx,BYTE PTR ds:[rsi]
  4467fc:	(bad)  
  4467fd:	pop    rdi
  4467fe:	data16 (bad) 
  446800:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7165725f
  446808:	jne    0x44686f
  44680a:	jae    0x446880
  44680c:	jae    0x44680e
  44680e:	add    BYTE PTR [rax],al
  446810:	(bad)  
  446811:	add    BYTE PTR [rcx+0x76],ah
  446814:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44681b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44681e:	imul   sp,WORD PTR [rdi+0x75],0x6172
  446824:	je     0x44688f
  446826:	outs   dx,DWORD PTR ds:[rsi]
  446827:	outs   dx,BYTE PTR ds:[rsi]
  446828:	add    BYTE PTR [rax],al
  44682a:	add    BYTE PTR [rax],al
  44682c:	(bad)  
  44682d:	add    BYTE PTR [rcx+0x76],ah
  446830:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446837:	addr32 gs je 0x44689a
  44683b:	(bad)  
  44683c:	jns    0x44689d
  44683e:	outs   dx,BYTE PTR ds:[rsi]
  44683f:	(bad)  
  446840:	ins    DWORD PTR es:[rdi],dx
  446841:	add    BYTE PTR gs:[rax],al
  446844:	and    BYTE PTR [rax],al
  446846:	(bad)  
  446847:	jbe    0x4468af
  446849:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x65675f72
  446851:	je     0x4468b2
  446853:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  446857:	jae    0x446859
  446859:	add    BYTE PTR [rax],al
  44685b:	add    BYTE PTR [rip+0x66766100],ah        # 0x66bac961
  446861:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x72675f72
  446869:	(bad)  
  44686a:	jo     0x4468d4
  44686c:	pop    rdi
  44686d:	(bad)  
  44686e:	ins    BYTE PTR es:[rdi],dx
  44686f:	ins    BYTE PTR es:[rdi],dx
  446870:	outs   dx,DWORD PTR ds:[rsi]
  446871:	movsxd eax,DWORD PTR [rax]
  446873:	add    BYTE PTR [rsi],ah
  446875:	add    BYTE PTR [rcx+0x76],ah
  446878:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44687f:	addr32 jb 0x4468e3
  446882:	jo     0x4468ec
  446884:	pop    rdi
  446885:	(bad)  
  446886:	ins    BYTE PTR es:[rdi],dx
  446887:	ins    BYTE PTR es:[rdi],dx
  446888:	outs   dx,DWORD PTR ds:[rsi]
  446889:	movsxd ebx,DWORD PTR [rdi+0x66]
  44688c:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x72
  446894:	(bad)  
  446895:	add    BYTE PTR [rcx+0x76],ah
  446898:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44689f:	addr32 jb 0x446903
  4468a2:	jo     0x44690c
  4468a4:	pop    rdi
  4468a5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4468a8:	imul   sp,WORD PTR [rdi+0x0],0x28
  4468ae:	(bad)  
  4468af:	jbe    0x446917
  4468b1:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x72675f72
  4468b9:	(bad)  
  4468ba:	jo     0x446924
  4468bc:	pop    rdi
  4468bd:	movsxd esi,DWORD PTR [rdx+0x65]
  4468c0:	(bad)  
  4468c1:	je     0x446928
  4468c3:	pop    rdi
  4468c4:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  4468cb:	add    BYTE PTR [rdx],ch
  4468cd:	add    BYTE PTR [rcx+0x76],ah
  4468d0:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  4468d7:	addr32 jb 0x44693b
  4468da:	jo     0x446944
  4468dc:	pop    rdi
  4468dd:	data16 jb 0x446945
  4468e0:	add    BYTE PTR gs:[rax],al
  4468e3:	add    BYTE PTR [rip+0x66766100],ch        # 0x66bac9e9
  4468e9:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x72675f72
  4468f1:	(bad)  
  4468f2:	jo     0x44695c
  4468f4:	pop    rdi
  4468f5:	jo     0x446958
  4468f7:	jb     0x44696c
  4468f9:	xor    al,BYTE PTR gs:[rax]
  4468fc:	(bad)  
  4468fd:	add    BYTE PTR [rcx+0x76],ah
  446900:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446907:	addr32 jb 0x44696b
  44690a:	jo     0x446974
  44690c:	pop    rdi
  44690d:	jno    0x446984
  44690f:	gs jne 0x446977
  446912:	pop    rdi
  446913:	movsxd ebp,DWORD PTR [rdi+0x6d]
  446916:	ins    DWORD PTR es:[rdi],dx
  446917:	(bad)  
  446918:	outs   dx,BYTE PTR ds:[rsi]
  446919:	add    BYTE PTR fs:[rax],al
  44691c:	xor    BYTE PTR [rax],al
  44691e:	(bad)  
  44691f:	jbe    0x446987
  446921:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x72675f72
  446929:	(bad)  
  44692a:	jo     0x446994
  44692c:	pop    rdi
  44692d:	jb     0x446994
  44692f:	jno    0x4469a6
  446931:	gs jae 0x4469a8
  446934:	pop    rdi
  446935:	outs   dx,DWORD PTR ds:[rsi]
  446936:	ins    BYTE PTR es:[rdi],dx
  446937:	fs gs jae 0x4469af
  44693b:	add    BYTE PTR [rcx],dh
  44693d:	add    BYTE PTR [rcx+0x76],ah
  446940:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446947:	addr32 jb 0x4469ab
  44694a:	jo     0x4469b4
  44694c:	pop    rdi
  44694d:	jae    0x4469b4
  44694f:	outs   dx,BYTE PTR ds:[rsi]
  446950:	fs pop rdi
  446952:	movsxd ebp,DWORD PTR [rdi+0x6d]
  446955:	ins    DWORD PTR es:[rdi],dx
  446956:	(bad)  
  446957:	outs   dx,BYTE PTR ds:[rsi]
  446958:	add    BYTE PTR fs:[rax],al
  44695b:	add    BYTE PTR [rdx],dh
  44695d:	add    BYTE PTR [rcx+0x76],ah
  446960:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  446967:	addr32 jb 0x4469cb
  44696a:	jo     0x4469d4
  44696c:	pop    rdi
  44696d:	jae    0x4469d4
  44696f:	je     0x4469d0
  446971:	(bad)  
  446972:	jne    0x4469e8
  446974:	outs   dx,DWORD PTR ds:[rsi]
  446975:	pop    rdi
  446976:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446979:	jbe    0x4469e0
  44697b:	jb     0x4469f1
  44697d:	add    BYTE PTR [rax],al
  44697f:	add    BYTE PTR [rip+0x66766100],dh        # 0x66baca85
  446985:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x6e695f72
  44698d:	imul   esi,DWORD PTR [rdi+rbx*2+0x73],0x37007274
  446995:	add    BYTE PTR [rcx+0x76],ah
  446998:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44699f:	imul   ebp,DWORD PTR [rsi+0x6f],0x665f7475
  4469a6:	jb     0x446a0d
  4469a8:	add    BYTE PTR gs:[rax],al
  4469ab:	add    BYTE PTR [rdx],bh
  4469ad:	add    BYTE PTR [rcx+0x76],ah
  4469b0:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  4469b7:	ins    BYTE PTR es:[rdi],dx
  4469b8:	imul   ebp,DWORD PTR [rsi+0x6b],0x61003c00
  4469bf:	jbe    0x446a27
  4469c1:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x696c5f72
  4469c9:	outs   dx,BYTE PTR ds:[rsi]
  4469ca:	imul   ebx,DWORD PTR [rdi+0x67],0x65
  4469ce:	je     0x446a2f
  4469d0:	movsxd ebp,DWORD PTR [rax+0x61]
  4469d3:	outs   dx,BYTE PTR ds:[rsi]
  4469d4:	outs   dx,BYTE PTR ds:[rsi]
  4469d5:	gs ins BYTE PTR es:[rdi],dx
  4469d7:	jae    0x4469d9
  4469d9:	add    BYTE PTR [rax],al
  4469db:	add    BYTE PTR [rax+0x0],al
  4469de:	(bad)  
  4469df:	jbe    0x446a47
  4469e1:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x656e5f72
  4469e9:	js     0x446a5f
  4469eb:	add    BYTE PTR [rdx+0x0],al
  4469ee:	(bad)  
  4469ef:	jbe    0x446a57
  4469f1:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  4469f9:	fs pop rdi
  4469fb:	movsxd ebp,DWORD PTR [rdi+0x75]
  4469fe:	outs   dx,BYTE PTR ds:[rsi]
  4469ff:	je     0x446a01
  446a01:	add    BYTE PTR [rax],al
  446a03:	add    BYTE PTR [rbx+0x0],al
  446a06:	(bad)  
  446a07:	jbe    0x446a6f
  446a09:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  446a11:	fs pop rdi
  446a13:	addr32 gs je 0x446a76
  446a17:	outs   dx,BYTE PTR ds:[rsi]
  446a18:	(bad)  
  446a19:	ins    DWORD PTR es:[rdi],dx
  446a1a:	add    BYTE PTR gs:[rax+rax*1+0x61],al
  446a1f:	jbe    0x446a87
  446a21:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  446a29:	fs pop rdi
  446a2b:	addr32 gs je 0x446a8e
  446a2f:	je     0x446aaa
  446a31:	jo     0x446a98
  446a33:	add    BYTE PTR [rcx+0x0],cl
  446a36:	(bad)  
  446a37:	jbe    0x446a9f
  446a39:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x65725f72
  446a41:	imul   esi,DWORD PTR [ebx+0x74],0x615f7265
  446a49:	ins    BYTE PTR es:[rdi],dx
  446a4a:	ins    BYTE PTR es:[rdi],dx
  446a4b:	add    BYTE PTR [rdi+0x0],cl
  446a4e:	(bad)  
  446a4f:	jbe    0x446ab7
  446a51:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x65765f72
  446a59:	jb     0x446ace
  446a5b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20000
  446a62:	(bad)  
  446a63:	jbe    0x446ac4
  446a65:	movsxd ebp,DWORD PTR [rdi+0x64]
  446a68:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  446a6c:	gs je  0x446ace
  446a6f:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x61000400
  446a77:	jbe    0x446ad8
  446a79:	movsxd ebp,DWORD PTR [rdi+0x64]
  446a7c:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  446a80:	gs je  0x446ae2
  446a83:	je     0x446ae6
  446a85:	xor    al,BYTE PTR [eax]
  446a88:	(bad)  
  446a89:	add    BYTE PTR [rcx+0x76],ah
  446a8c:	pop    rdi
  446a8d:	fs jne 0x446afd
  446a90:	jo     0x446af1
  446a92:	outs   dx,WORD PTR ds:[rsi]
  446a94:	jb     0x446b03
  446a96:	(bad)  
  446a97:	je     0x446a99
  446a99:	add    BYTE PTR [rax],al
  446a9b:	add    BYTE PTR [rax],cl
  446a9d:	add    BYTE PTR [rcx+0x76],ah
  446aa0:	pop    rdi
  446aa1:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  446aa8:	gs pop rdi
  446aaa:	outs   dx,BYTE PTR ds:[rsi]
  446aab:	jne    0x446b1a
  446aad:	(bad)  
  446aae:	gs jb  0x446b10
  446ab1:	je     0x446b18
  446ab3:	jae    0x446b29
  446ab5:	add    BYTE PTR [rax],al
  446ab7:	add    BYTE PTR [rbx],cl
  446ab9:	add    BYTE PTR [rcx+0x76],ah
  446abc:	pop    rdi
  446abd:	imul   bp,WORD PTR [rsi+0x64],0x695f
  446ac3:	outs   dx,BYTE PTR ds:[rsi]
  446ac4:	jo     0x446b3b
  446ac6:	je     0x446b27
  446ac8:	outs   dx,WORD PTR ds:[rsi]
  446aca:	jb     0x446b39
  446acc:	(bad)  
  446acd:	je     0x446acf
  446acf:	add    BYTE PTR [rcx],bl
  446ad1:	add    BYTE PTR [rcx+0x76],ah
  446ad4:	pop    rdi
  446ad5:	outs   dx,WORD PTR ds:[rsi]
  446ad7:	jb     0x446b46
  446ad9:	(bad)  
  446ada:	je     0x446b3b
  446adc:	jae    0x446b43
  446ade:	je     0x446b3f
  446ae0:	(bad)  
  446ae1:	jne    0x446b47
  446ae3:	imul   ebp,DWORD PTR [rdi+0x5f],0x65646f63
  446aea:	movsxd eax,DWORD PTR [rax]
  446aec:	sbb    eax,DWORD PTR [rax]
  446aee:	(bad)  
  446aef:	jbe    0x446b50
  446af1:	outs   dx,WORD PTR ds:[rsi]
  446af3:	jb     0x446b62
  446af5:	(bad)  
  446af6:	je     0x446b57
  446af8:	jae    0x446b5f
  446afa:	je     0x446b5b
  446afc:	fs (bad) 
  446afe:	je     0x446b61
  446b00:	pop    rdi
  446b01:	movsxd ebp,DWORD PTR [rdi+0x64]
  446b04:	movsxd eax,DWORD PTR gs:[rax]
  446b07:	add    BYTE PTR [rdi],bl
  446b09:	add    BYTE PTR [rcx+0x76],ah
  446b0c:	pop    rdi
  446b0d:	outs   dx,WORD PTR ds:[rsi]
  446b0f:	jb     0x446b7e
  446b11:	(bad)  
  446b12:	je     0x446b73
  446b14:	jae    0x446b7b
  446b16:	je     0x446b77
  446b18:	jae    0x446b8f
  446b1a:	(bad)  
  446b1b:	je     0x446b86
  446b1d:	je     0x446b8b
  446b1f:	gs pop rdi
  446b21:	movsxd ebp,DWORD PTR [rdi+0x64]
  446b24:	movsxd eax,DWORD PTR gs:[rax]
  446b27:	add    BYTE PTR [rax],ah
  446b29:	add    BYTE PTR [rcx+0x76],ah
  446b2c:	pop    rdi
  446b2d:	outs   dx,WORD PTR ds:[rsi]
  446b2f:	jb     0x446b9e
  446b31:	(bad)  
  446b32:	je     0x446b93
  446b34:	jae    0x446b9b
  446b36:	je     0x446b97
  446b38:	jbe    0x446ba3
  446b3a:	fs outs dx,DWORD PTR gs:[rsi]
  446b3d:	pop    rdi
  446b3e:	movsxd ebp,DWORD PTR [rdi+0x64]
  446b41:	movsxd eax,DWORD PTR gs:[rax]
  446b44:	and    al,0x0
  446b46:	(bad)  
  446b47:	jbe    0x446ba8
  446b49:	addr32 jne 0x446bb1
  446b4c:	jae    0x446bc1
  446b4e:	pop    rdi
  446b4f:	movsxd ebp,DWORD PTR [rdi+0x64]
  446b52:	movsxd eax,DWORD PTR gs:[rax]
  446b55:	add    BYTE PTR [rax],al
  446b57:	add    BYTE PTR [rip+0x5f766100],ah        # 0x5fbacc5d
  446b5d:	addr32 jne 0x446bc5
  446b60:	jae    0x446bd5
  446b62:	pop    rdi
  446b63:	outs   dx,WORD PTR ds:[rsi]
  446b65:	jb     0x446bd4
  446b67:	(bad)  
  446b68:	je     0x446b6a
  446b6a:	add    BYTE PTR [rax],al
  446b6c:	add    BYTE PTR es:[rcx+0x76],ah
  446b70:	pop    rdi
  446b71:	addr32 jne 0x446bd9
  446b74:	jae    0x446be9
  446b76:	pop    rdi
  446b77:	data16 jb 0x446bdb
  446b7a:	ins    DWORD PTR es:[rdi],dx
  446b7b:	gs pop rdi
  446b7d:	jb     0x446be0
  446b7f:	je     0x446be6
  446b81:	add    BYTE PTR [rax],al
  446b83:	add    BYTE PTR [rdx],ch
  446b85:	add    BYTE PTR [rcx+0x76],ah
  446b88:	pop    rdi
  446b89:	imul   esp,DWORD PTR [rsi+0x6f],0x74616d72
  446b90:	pop    rdi
  446b91:	outs   dx,BYTE PTR ds:[rsi]
  446b92:	gs js  0x446c09
  446b95:	add    BYTE PTR [rax],al
  446b97:	add    BYTE PTR [rax+rax*1],ch
  446b9a:	(bad)  
  446b9b:	jbe    0x446bfc
  446b9d:	imul   ebp,DWORD PTR [rsi+0x74],0x656c7265
  446ba4:	(bad)  
  446ba5:	jbe    0x446c0c
  446ba7:	fs pop rdi
  446ba9:	ja     0x446c1d
  446bab:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6d617266
  446bb3:	add    BYTE PTR gs:[rax],al
  446bb6:	add    BYTE PTR [rax],al
  446bb8:	xor    BYTE PTR [rax],al
  446bba:	(bad)  
  446bbb:	jbe    0x446c1c
  446bbd:	outs   dx,DWORD PTR ds:[rsi]
  446bbe:	outs   dx,WORD PTR ds:[rsi]
  446bc0:	jb     0x446c2f
  446bc2:	(bad)  
  446bc3:	je     0x446c24
  446bc5:	outs   dx,BYTE PTR ds:[rsi]
  446bc6:	gs js  0x446c3d
  446bc9:	add    BYTE PTR [rax],al
  446bcb:	add    BYTE PTR [rdx],dh
  446bcd:	add    BYTE PTR [rcx+0x76],ah
  446bd0:	pop    rdi
  446bd1:	jo     0x446c3e
  446bd3:	je     0x446c34
  446bd5:	fs jne 0x446c45
  446bd8:	jo     0x446c39
  446bda:	ins    BYTE PTR es:[rdi],dx
  446bdb:	outs   dx,DWORD PTR ds:[rsi]
  446bdc:	xor    al,BYTE PTR [eax]
  446bdf:	add    BYTE PTR [rax],bh
  446be1:	add    BYTE PTR [rcx+0x76],ah
  446be4:	pop    rdi
  446be5:	jb     0x446c4c
  446be7:	(bad)  
  446be8:	fs pop rdi
  446bea:	data16 jb 0x446c4e
  446bed:	ins    DWORD PTR es:[rdi],dx
  446bee:	add    BYTE PTR gs:[rbx],bh
  446bf1:	add    BYTE PTR [rcx+0x76],ah
  446bf4:	pop    rdi
  446bf5:	jb     0x446c5c
  446bf7:	imul   esi,DWORD PTR [ebx+0x74],0x615f7265
  446bff:	ins    BYTE PTR es:[rdi],dx
  446c00:	ins    BYTE PTR es:[rdi],dx
  446c01:	add    BYTE PTR [rax],al
  446c03:	add    BYTE PTR [rsi],bh
  446c05:	add    BYTE PTR [rcx+0x76],ah
  446c08:	pop    rdi
  446c09:	jae    0x446c6f
  446c0b:	jo     0x446c6c
  446c0d:	movsxd esi,DWORD PTR [rdx+0x65]
  446c10:	(bad)  
  446c11:	je     0x446c78
  446c13:	add    BYTE PTR [rax+0x0],al
  446c16:	(bad)  
  446c17:	jbe    0x446c78
  446c19:	jae    0x446c8f
  446c1b:	jb     0x446c82
  446c1d:	(bad)  
  446c1e:	ins    DWORD PTR es:[rdi],dx
  446c1f:	pop    rdi
  446c20:	addr32 gs je 0x446c83
  446c24:	outs   dx,BYTE PTR gs:[rsi]
  446c26:	fs pop rdi
  446c28:	jo     0x446c9e
  446c2a:	jae    0x446c2c
  446c2c:	add    BYTE PTR [r9+0x76],spl
  446c30:	pop    rdi
  446c31:	jae    0x446ca7
  446c33:	jb     0x446c9a
  446c35:	(bad)  
  446c36:	ins    DWORD PTR es:[rdi],dx
  446c37:	pop    rdi
  446c38:	addr32 gs je 0x446c9b
  446c3c:	jo     0x446c9f
  446c3e:	jb     0x446cb3
  446c40:	gs jb  0x446c43
  446c43:	add    BYTE PTR [rbx+0x0],al
  446c46:	(bad)  
  446c47:	jbe    0x446ca8
  446c49:	jae    0x446cbf
  446c4b:	jb     0x446cb2
  446c4d:	(bad)  
  446c4e:	ins    DWORD PTR es:[rdi],dx
  446c4f:	pop    rdi
  446c50:	addr32 gs je 0x446cb3
  446c54:	jb     0x446cbb
  446c56:	movsxd ebp,DWORD PTR [rdi+0x6d]
  446c59:	ins    DWORD PTR es:[rdi],dx
  446c5a:	outs   dx,BYTE PTR gs:[rsi]
  446c5c:	fs gs fs pop rdi
  446c60:	outs   dx,BYTE PTR gs:[rsi]
  446c62:	movsxd ebp,DWORD PTR [rdi+0x64]
  446c65:	gs jb  0x446cc7
  446c68:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446c6b:	imul   sp,WORD PTR [rdi+0x75],0x6172
  446c71:	je     0x446cdc
  446c73:	outs   dx,DWORD PTR ds:[rsi]
  446c74:	outs   dx,BYTE PTR ds:[rsi]
  446c75:	add    BYTE PTR [rax],al
  446c77:	add    BYTE PTR [rax+rax*1+0x61],al
  446c7b:	jbe    0x446cdc
  446c7d:	jae    0x446cf3
  446c7f:	jb     0x446ce6
  446c81:	(bad)  
  446c82:	ins    DWORD PTR es:[rdi],dx
  446c83:	pop    rdi
  446c84:	addr32 gs je 0x446ce7
  446c88:	jae    0x446cf3
  446c8a:	fs gs pop rdi
  446c8d:	fs (bad) 
  446c8f:	je     0x446cf2
  446c91:	add    BYTE PTR [rax],al
  446c93:	add    BYTE PTR [rcx+0x0],cl
  446c96:	(bad)  
  446c97:	jbe    0x446cf8
  446c99:	ja     0x446d0d
  446c9b:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x69617274
  446ca3:	ins    BYTE PTR es:[rdi],dx
  446ca4:	gs jb  0x446ca7
  446ca7:	add    BYTE PTR [rax+rax*1+0x61],cl
  446cab:	jbe    0x446d13
  446cad:	outs   dx,DWORD PTR ds:[rsi]
  446cae:	jb     0x446d1d
  446cb0:	(bad)  
  446cb1:	je     0x446d12
  446cb3:	(bad)  
  446cb4:	ins    BYTE PTR es:[rdi],dx
  446cb5:	ins    BYTE PTR es:[rdi],dx
  446cb6:	outs   dx,DWORD PTR ds:[rsi]
  446cb7:	movsxd ebx,DWORD PTR [rdi+0x63]
  446cba:	outs   dx,DWORD PTR ds:[rsi]
  446cbb:	outs   dx,BYTE PTR ds:[rsi]
  446cbc:	je     0x446d23
  446cbe:	js     0x446d34
  446cc0:	add    BYTE PTR [rax],al
  446cc2:	add    BYTE PTR [rax],al
  446cc4:	rex.WRB add BYTE PTR [r9+0x76],r12b
  446cc8:	outs   dx,WORD PTR ds:[rsi]
  446cca:	jb     0x446d39
  446ccc:	(bad)  
  446ccd:	je     0x446d2e
  446ccf:	(bad)  
  446cd0:	ins    BYTE PTR es:[rdi],dx
  446cd1:	ins    BYTE PTR es:[rdi],dx
  446cd2:	outs   dx,DWORD PTR ds:[rsi]
  446cd3:	movsxd ebx,DWORD PTR [rdi+0x6f]
  446cd6:	jne    0x446d4c
  446cd8:	jo     0x446d4f
  446cda:	je     0x446d3b
  446cdc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446cdf:	je     0x446d46
  446ce1:	js     0x446d57
  446ce3:	xor    al,BYTE PTR [rax]
  446ce5:	add    BYTE PTR [rax],al
  446ce7:	add    BYTE PTR [rsi+0x0],cl
  446cea:	(bad)  
  446ceb:	jbe    0x446d53
  446ced:	outs   dx,DWORD PTR ds:[rsi]
  446cee:	jb     0x446d5d
  446cf0:	(bad)  
  446cf1:	je     0x446d52
  446cf3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  446cf7:	gs pop rdi
  446cf9:	imul   ebp,DWORD PTR [rsi+0x70],0x7475
  446d00:	rex.WRXB add BYTE PTR [r9+0x76],r12b
  446d04:	outs   dx,WORD PTR ds:[rsi]
  446d06:	jb     0x446d75
  446d08:	(bad)  
  446d09:	je     0x446d6a
  446d0b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446d0e:	imul   sp,WORD PTR [rdi+0x75],0x6172
  446d14:	je     0x446d7f
  446d16:	outs   dx,DWORD PTR ds:[rsi]
  446d17:	outs   dx,BYTE PTR ds:[rsi]
  446d18:	add    BYTE PTR [rax],al
  446d1a:	add    BYTE PTR [rax],al
  446d1c:	push   rax
  446d1d:	add    BYTE PTR [rcx+0x76],ah
  446d20:	outs   dx,WORD PTR ds:[rsi]
  446d22:	jb     0x446d91
  446d24:	(bad)  
  446d25:	je     0x446d86
  446d27:	imul   bp,WORD PTR [rsi+0x64],0x735f
  446d2d:	je     0x446da1
  446d2f:	gs (bad) 
  446d31:	ins    DWORD PTR es:[rdi],dx
  446d32:	pop    rdi
  446d33:	imul   ebp,DWORD PTR [rsi+0x66],0x52006f
  446d3a:	(bad)  
  446d3b:	jbe    0x446da3
  446d3d:	outs   dx,DWORD PTR ds:[rsi]
  446d3e:	jb     0x446dad
  446d40:	(bad)  
  446d41:	je     0x446da2
  446d43:	data16 jb 0x446dab
  446d46:	gs pop rdi
  446d48:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446d4b:	je     0x446db2
  446d4d:	js     0x446dc3
  446d4f:	add    BYTE PTR [rbx+0x0],dl
  446d52:	(bad)  
  446d53:	jbe    0x446dbb
  446d55:	outs   dx,DWORD PTR ds:[rsi]
  446d56:	jb     0x446dc5
  446d58:	(bad)  
  446d59:	je     0x446dba
  446d5b:	addr32 gs je 0x446dbe
  446d5f:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  446d63:	jae    0x446d65
  446d65:	add    BYTE PTR [rax],al
  446d67:	add    BYTE PTR [rcx+0x0],bl
  446d6a:	(bad)  
  446d6b:	jbe    0x446dd3
  446d6d:	outs   dx,DWORD PTR ds:[rsi]
  446d6e:	jb     0x446ddd
  446d70:	(bad)  
  446d71:	je     0x446dd2
  446d73:	ins    DWORD PTR es:[rdi],dx
  446d74:	(bad)  
  446d75:	je     0x446dda
  446d77:	push   0x7274735f
  446d7c:	gs (bad) 
  446d7e:	ins    DWORD PTR es:[rdi],dx
  446d7f:	pop    rdi
  446d80:	jae    0x446df2
  446d82:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  446d86:	imul   esp,DWORD PTR [rbp+0x72],0x5a000000
  446d8d:	add    BYTE PTR [rcx+0x76],ah
  446d90:	outs   dx,WORD PTR ds:[rsi]
  446d92:	jb     0x446e01
  446d94:	(bad)  
  446d95:	je     0x446df6
  446d97:	outs   dx,BYTE PTR ds:[rsi]
  446d98:	gs je  0x446e12
  446d9b:	outs   dx,DWORD PTR ds:[rsi]
  446d9c:	jb     0x446e09
  446d9e:	pop    rdi
  446d9f:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  446da8:	pop    rbx
  446da9:	add    BYTE PTR [rcx+0x76],ah
  446dac:	outs   dx,WORD PTR ds:[rsi]
  446dae:	jb     0x446e1d
  446db0:	(bad)  
  446db1:	je     0x446e12
  446db3:	outs   dx,BYTE PTR ds:[rsi]
  446db4:	gs je  0x446e2e
  446db7:	outs   dx,DWORD PTR ds:[rsi]
  446db8:	jb     0x446e25
  446dba:	pop    rdi
  446dbb:	imul   ebp,DWORD PTR [rsi+0x69],0x5c0074
  446dc2:	(bad)  
  446dc3:	jbe    0x446e2b
  446dc5:	outs   dx,DWORD PTR ds:[rsi]
  446dc6:	jb     0x446e35
  446dc8:	(bad)  
  446dc9:	je     0x446e2a
  446dcb:	outs   dx,BYTE PTR ds:[rsi]
  446dcc:	gs ja  0x446e2e
  446dcf:	jae    0x446e45
  446dd1:	jb     0x446e38
  446dd3:	(bad)  
  446dd4:	ins    DWORD PTR es:[rdi],dx
  446dd5:	add    BYTE PTR [rax],al
  446dd7:	add    BYTE PTR [rbp+0x0],bl
  446dda:	(bad)  
  446ddb:	jbe    0x446e43
  446ddd:	outs   dx,DWORD PTR ds:[rsi]
  446dde:	jb     0x446e4d
  446de0:	(bad)  
  446de1:	je     0x446e42
  446de3:	outs   dx,DWORD PTR ds:[rsi]
  446de4:	jo     0x446e4b
  446de6:	outs   dx,BYTE PTR ds:[rsi]
  446de7:	pop    rdi
  446de8:	imul   ebp,DWORD PTR [rsi+0x70],0x7475
  446def:	add    BYTE PTR [rsi+0x0],bl
  446df2:	(bad)  
  446df3:	jbe    0x446e5b
  446df5:	outs   dx,DWORD PTR ds:[rsi]
  446df6:	jb     0x446e65
  446df8:	(bad)  
  446df9:	je     0x446e5a
  446dfb:	jno    0x446e72
  446dfd:	gs jb  0x446e79
  446e00:	pop    rdi
  446e01:	movsxd ebp,DWORD PTR [rdi+0x64]
  446e04:	movsxd eax,DWORD PTR gs:[rax]
  446e07:	add    BYTE PTR [rax+0x0],ah
  446e0a:	(bad)  
  446e0b:	jbe    0x446e73
  446e0d:	outs   dx,DWORD PTR ds:[rsi]
  446e0e:	jb     0x446e7d
  446e10:	(bad)  
  446e11:	je     0x446e72
  446e13:	jae    0x446e7a
  446e15:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x69
  446e1a:	ins    BYTE PTR es:[rdi],dx
  446e1b:	add    BYTE PTR gs:[rax],al
  446e1e:	add    BYTE PTR [rax],al
  446e20:	(bad)  
  446e21:	add    BYTE PTR [rcx+0x76],ah
  446e24:	outs   dx,WORD PTR ds:[rsi]
  446e26:	jb     0x446e95
  446e28:	(bad)  
  446e29:	je     0x446e8a
  446e2b:	jbe    0x446e92
  446e2d:	jb     0x446ea2
  446e2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x620000
  446e36:	(bad)  
  446e37:	jbe    0x446e9f
  446e39:	outs   dx,DWORD PTR ds:[rsi]
  446e3a:	jb     0x446ea9
  446e3c:	(bad)  
  446e3d:	je     0x446e9e
  446e3f:	ja     0x446eb3
  446e41:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x64616568
  446e49:	gs jb  0x446e4c
  446e4c:	add    BYTE PTR gs:[rcx+0x76],ah
  446e50:	imul   ebp,DWORD PTR [rdi+0x5f],0x63656863
  446e57:	imul   eax,DWORD PTR [rax],0x0
  446e5a:	add    BYTE PTR [rax],al
  446e5c:	data16 add BYTE PTR [rcx+0x76],ah
  446e60:	imul   ebp,DWORD PTR [rdi+0x5f],0x736f6c63
  446e67:	add    BYTE PTR gs:[rax],al
  446e6a:	add    BYTE PTR [rax],al
  446e6c:	push   0x69766100
  446e71:	outs   dx,DWORD PTR ds:[rsi]
  446e72:	pop    rdi
  446e73:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  446e77:	gs pop rdi
  446e79:	fs jns 0x446eea
  446e7c:	pop    rdi
  446e7d:	(bad)  
  446e7e:	jne    0x446ee6
  446e80:	add    BYTE PTR [rax],al
  446e82:	add    BYTE PTR [rax],al
  446e84:	imul   eax,DWORD PTR [rax],0x6f697661
  446e8a:	pop    rdi
  446e8b:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  446e8f:	gs jo  0x446e92
  446e92:	add    BYTE PTR [rax],al
  446e94:	push   0x0
  446e96:	(bad)  
  446e97:	jbe    0x446f02
  446e99:	outs   dx,DWORD PTR ds:[rsi]
  446e9a:	pop    rdi
  446e9b:	outs   dx,BYTE PTR gs:[rsi]
  446e9d:	jne    0x446f0c
  446e9f:	pop    rdi
  446ea0:	jo     0x446f14
  446ea2:	outs   dx,DWORD PTR ds:[rsi]
  446ea3:	je     0x446f14
  446ea5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  446ea8:	jae    0x446eaa
  446eaa:	add    BYTE PTR [rax],al
  446eac:	ins    BYTE PTR es:[rdi],dx
  446ead:	add    BYTE PTR [rcx+0x76],ah
  446eb0:	imul   ebp,DWORD PTR [rdi+0x5f],0x646e6966
  446eb7:	pop    rdi
  446eb8:	jo     0x446f2c
  446eba:	outs   dx,DWORD PTR ds:[rsi]
  446ebb:	je     0x446f2c
  446ebd:	movsxd ebp,DWORD PTR [rdi+0x6c]
  446ec0:	pop    rdi
  446ec1:	outs   dx,BYTE PTR ds:[rsi]
  446ec2:	(bad)  
  446ec3:	ins    DWORD PTR es:[rdi],dx
  446ec4:	add    BYTE PTR gs:[rax],al
  446ec7:	add    BYTE PTR [rbp+0x0],ch
  446eca:	(bad)  
  446ecb:	jbe    0x446f36
  446ecd:	outs   dx,DWORD PTR ds:[rsi]
  446ece:	pop    rdi
  446ecf:	data16 ins BYTE PTR es:[rdi],dx
  446ed1:	jne    0x446f46
  446ed3:	push   0x0
  446ed8:	jae    0x446eda
  446eda:	(bad)  
  446edb:	jbe    0x446f46
  446edd:	outs   dx,DWORD PTR ds:[rsi]
  446ede:	pop    rdi
  446edf:	outs   dx,DWORD PTR ds:[rsi]
  446ee0:	jo     0x446f47
  446ee2:	outs   dx,BYTE PTR ds:[rsi]
  446ee3:	add    BYTE PTR [rax+rax*1+0x61],dh
  446ee7:	jbe    0x446f52
  446ee9:	outs   dx,DWORD PTR ds:[rsi]
  446eea:	pop    rdi
  446eeb:	outs   dx,DWORD PTR ds:[rsi]
  446eec:	jo     0x446f53
  446eee:	outs   dx,BYTE PTR ds:[rsi]
  446eef:	xor    al,BYTE PTR [rax]
  446ef1:	add    BYTE PTR [rax],al
  446ef3:	add    BYTE PTR [rsi+0x0],dh
  446ef6:	(bad)  
  446ef7:	jbe    0x446f62
  446ef9:	outs   dx,DWORD PTR ds:[rsi]
  446efa:	pop    rdi
  446efb:	outs   dx,DWORD PTR ds:[rsi]
  446efc:	jo     0x446f63
  446efe:	outs   dx,BYTE PTR ds:[rsi]
  446eff:	pop    rdi
  446f00:	fs jns 0x446f71
  446f03:	pop    rdi
  446f04:	(bad)  
  446f05:	jne    0x446f6d
  446f07:	add    BYTE PTR [rax+0x0],bh
  446f0a:	(bad)  
  446f0b:	jbe    0x446f76
  446f0d:	outs   dx,DWORD PTR ds:[rsi]
  446f0e:	pop    rdi
  446f0f:	jo     0x446f83
  446f11:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  446f18:	jl     0x446f1a
  446f1a:	(bad)  
  446f1b:	jbe    0x446f86
  446f1d:	outs   dx,DWORD PTR ds:[rsi]
  446f1e:	pop    rdi
  446f1f:	jb     0x446f59
  446f21:	add    BYTE PTR [rax],al
  446f23:	add    BYTE PTR [rcx+0x69766100],al
  446f29:	outs   dx,DWORD PTR ds:[rsi]
  446f2a:	pop    rdi
  446f2b:	jb     0x446f92
  446f2d:	(bad)  
  446f2e:	add    BYTE PTR fs:[rax+0x69766100],cl
  446f35:	outs   dx,DWORD PTR ds:[rsi]
  446f36:	pop    rdi
  446f37:	jae    0x446f9e
  446f39:	imul   eax,DWORD PTR gs:[rax],0xffffff8a
  446f3d:	add    BYTE PTR [rcx+0x76],ah
  446f40:	imul   ebp,DWORD PTR [rdi+0x5f],0x657a6973
  446f47:	add    BYTE PTR [rax+rax*1+0x6f697661],cl
  446f4e:	pop    rdi
  446f4f:	ja     0x446f89
  446f51:	add    BYTE PTR [rax],al
  446f53:	add    BYTE PTR [rbp+0x69766100],dl
  446f59:	outs   dx,DWORD PTR ds:[rsi]
  446f5a:	pop    rdi
  446f5b:	ja     0x446fcf
  446f5d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5000000
  446f65:	add    BYTE PTR [rcx+0x76],ah
  446f68:	jb     0x446fcf
  446f6a:	jae    0x446fcd
  446f6c:	ins    DWORD PTR es:[rdi],dx
  446f6d:	jo     0x446fdb
  446f6f:	gs pop rdi
  446f71:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446f74:	imul   sp,WORD PTR [rdi+0x75],0x6172
  446f7a:	je     0x446fe5
  446f7c:	outs   dx,DWORD PTR ds:[rsi]
  446f7d:	outs   dx,BYTE PTR ds:[rsi]
  446f7e:	add    BYTE PTR [rax],al
  446f80:	or     DWORD PTR [rax],eax
  446f82:	(bad)  
  446f83:	jbe    0x446ff7
  446f85:	gs jae 0x446fe9
  446f88:	ins    DWORD PTR es:[rdi],dx
  446f89:	jo     0x446ff7
  446f8b:	gs pop rdi
  446f8d:	addr32 gs je 0x446ff0
  446f91:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  446f95:	jae    0x446f97
  446f97:	add    BYTE PTR [rax+rax*1],dl
  446f9a:	(bad)  
  446f9b:	jbe    0x44700f
  446f9d:	gs jae 0x447001
  446fa0:	ins    DWORD PTR es:[rdi],dx
  446fa1:	jo     0x44700f
  446fa3:	gs pop rdi
  446fa5:	jbe    0x44700c
  446fa7:	jb     0x44701c
  446fa9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  446fb0:	add    BYTE PTR [rax],al
  446fb2:	(bad)  
  446fb3:	jbe    0x447014
  446fb5:	(bad)  
  446fb6:	fs fs pop rdi
  446fb9:	jno    0x446fbb
  446fbb:	add    BYTE PTR [rax],cl
  446fbd:	add    BYTE PTR [rcx+0x76],ah
  446fc0:	pop    rdi
  446fc1:	(bad)  
  446fc2:	jae    0x447034
  446fc4:	jb     0x44702f
  446fc6:	outs   dx,BYTE PTR ds:[rsi]
  446fc7:	je     0x44702f
  446fc9:	add    BYTE PTR [rax],al
  446fcb:	add    BYTE PTR [rip+0x5f766100],bl        # 0x5fbad0d1
  446fd1:	(bad)  
  446fd2:	jo     0x447046
  446fd4:	imul   ebp,DWORD PTR [rsi+0x74],0x6168635f
  446fdb:	jb     0x447050
  446fdd:	add    BYTE PTR [rax],al
  446fdf:	add    BYTE PTR [rax],ah
  446fe1:	add    BYTE PTR [rcx+0x76],ah
  446fe4:	pop    rdi
  446fe5:	(bad)  
  446fe6:	jo     0x44705a
  446fe8:	imul   ebp,DWORD PTR [rsi+0x74],0x6e69665f
  446fef:	(bad)  
  446ff0:	ins    BYTE PTR es:[rdi],dx
  446ff1:	imul   edi,DWORD PTR [rdx+0x65],0x0
  446ff8:	and    al,BYTE PTR [rax]
  446ffa:	(bad)  
  446ffb:	jbe    0x44705c
  446ffd:	(bad)  
  446ffe:	jo     0x447072
  447000:	imul   ebp,DWORD PTR [rsi+0x74],0x696e695f
  447007:	je     0x447009
  447009:	add    BYTE PTR [rax],al
  44700b:	add    BYTE PTR [rip+0x5f766100],ah        # 0x5fbad111
  447011:	(bad)  
  447012:	jo     0x447086
  447014:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  44701b:	add    BYTE PTR [rax],ch
  44701d:	add    BYTE PTR [rcx+0x76],ah
  447020:	pop    rdi
  447021:	(bad)  
  447022:	jne    0x44708a
  447024:	data16 gs jb 0x447087
  447028:	movsxd esi,DWORD PTR [rdx+0x65]
  44702b:	(bad)  
  44702c:	je     0x447093
  44702e:	add    BYTE PTR [rax],al
  447030:	sub    DWORD PTR [rax],eax
  447032:	(bad)  
  447033:	jbe    0x447094
  447035:	(bad)  
  447036:	jne    0x44709e
  447038:	data16 gs jb 0x44709b
  44703c:	fs gs data16 (bad) 
  447040:	jne    0x4470ae
  447042:	je     0x4470a3
  447044:	data16 jb 0x4470ac
  447047:	add    BYTE PTR gs:[rax],al
  44704a:	add    BYTE PTR [rax],al
  44704c:	xor    al,0x0
  44704e:	(bad)  
  44704f:	jbe    0x4470b0
  447051:	movsxd esp,DWORD PTR [rcx+0x6c]
  447054:	ins    BYTE PTR es:[rdi],dx
  447055:	outs   dx,DWORD PTR ds:[rsi]
  447056:	movsxd eax,DWORD PTR [rax]
  447058:	add    BYTE PTR [r9+0x76],r12b
  44705c:	pop    rdi
  44705d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  447060:	jo     0x4470c3
  447062:	jb     0x4470c9
  447064:	pop    rdi
  447065:	je     0x4470da
  447067:	add    BYTE PTR [rsi+0x0],cl
  44706a:	(bad)  
  44706b:	jbe    0x4470cc
  44706d:	fs gs data16 (bad) 
  447071:	jne    0x4470df
  447073:	je     0x4470d4
  447075:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x6d616e5f
  44707d:	add    BYTE PTR gs:[rax],al
  447080:	push   rbx
  447081:	add    BYTE PTR [rcx+0x76],ah
  447084:	pop    rdi
  447085:	imul   esp,DWORD PTR fs:[rbx+0x74],0x706f635f
  44708d:	jns    0x44708f
  44708f:	add    BYTE PTR [rbp+0x0],dl
  447092:	(bad)  
  447093:	jbe    0x4470f4
  447095:	imul   esp,DWORD PTR fs:[rbx+0x74],0x6572665f
  44709d:	add    BYTE PTR gs:[rax],al
  4470a0:	push   rsi
  4470a1:	add    BYTE PTR [rcx+0x76],ah
  4470a4:	pop    rdi
  4470a5:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7465675f
  4470ad:	add    BYTE PTR [rax],al
  4470af:	add    BYTE PTR [rax+0x0],bl
  4470b2:	(bad)  
  4470b3:	jbe    0x447114
  4470b5:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7261705f
  4470bd:	jae    0x447124
  4470bf:	pop    rdi
  4470c0:	jae    0x447136
  4470c2:	jb     0x44712d
  4470c4:	outs   dx,BYTE PTR ds:[rsi]
  4470c5:	add    BYTE PTR [eax],al
  4470c8:	pop    rcx
  4470c9:	add    BYTE PTR [rcx+0x76],ah
  4470cc:	pop    rdi
  4470cd:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7465735f
  4470d5:	add    BYTE PTR [rax],al
  4470d7:	add    BYTE PTR [rdx+0x0],bl
  4470da:	(bad)  
  4470db:	jbe    0x44713c
  4470dd:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7465735f
  4470e5:	pop    rdi
  4470e6:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000000
  4470ed:	add    BYTE PTR [rcx+0x76],ah
  4470f0:	pop    rdi
  4470f1:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  4470f9:	jb     0x44716a
  4470fb:	je     0x44715e
  4470fd:	je     0x447168
  4470ff:	outs   dx,DWORD PTR ds:[rsi]
  447100:	outs   dx,BYTE PTR ds:[rsi]
  447101:	pop    rdi
  447102:	addr32 gs je 0x447106
  447106:	add    BYTE PTR [rax],al
  447108:	add    BYTE PTR gs:[rcx+0x76],ah
  44710c:	pop    rdi
  44710d:	gs js  0x447180
  447110:	jb     0x447171
  447112:	gs jbe 0x447176
  447115:	ins    BYTE PTR es:[rdi],dx
  447116:	add    BYTE PTR [rax],al
  447118:	data16 add BYTE PTR [rcx+0x76],ah
  44711c:	pop    rdi
  44711d:	gs js  0x447190
  447120:	jb     0x447181
  447122:	data16 jb 0x44718a
  447125:	add    BYTE PTR gs:[rax],al
  447128:	add    BYTE PTR [ecx+0x76],ah
  44712c:	pop    rdi
  44712d:	gs js  0x4471a0
  447130:	jb     0x447191
  447132:	jo     0x447195
  447134:	jb     0x4471a9
  447136:	add    BYTE PTR gs:[rax+rax*1+0x61],bh
  44713b:	jbe    0x44719c
  44713d:	imul   bp,WORD PTR [rsi+0x64],0x6e5f
  447143:	gs (bad) 
  447145:	jb     0x4471ac
  447147:	jae    0x4471bd
  447149:	pop    rdi
  44714a:	jno    0x4471ab
  44714c:	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x7661007d
  447154:	pop    rdi
  447155:	outs   dx,WORD PTR ds:[rsi]
  447157:	jo     0x4471be
  447159:	outs   dx,BYTE PTR ds:[rsi]
  44715a:	pop    rdi
  44715b:	jne    0x4471d1
  44715d:	data16 cmp BYTE PTR [rax],al
  447160:	jle    0x447162
  447162:	(bad)  
  447163:	jbe    0x4471c4
  447165:	outs   dx,WORD PTR ds:[rsi]
  447167:	jb     0x4471cc
  447169:	gs pop rdi
  44716b:	movsxd esi,DWORD PTR [rax+0x75]
  44716e:	pop    rdi
  44716f:	data16 ins BYTE PTR es:[rdi],dx
  447171:	(bad)  
  447172:	addr32 jae 0x447175
  447175:	add    BYTE PTR [rax],al
  447177:	add    BYTE PTR [rdi+0x0],bh
  44717a:	(bad)  
  44717b:	jbe    0x4471dc
  44717d:	data16 jb 0x4471e1
  447180:	ins    DWORD PTR es:[rdi],dx
  447181:	gs pop rdi
  447183:	(bad)  
  447184:	ins    BYTE PTR es:[rdi],dx
  447185:	ins    BYTE PTR es:[rdi],dx
  447186:	outs   dx,DWORD PTR ds:[rsi]
  447187:	movsxd eax,DWORD PTR [rax]
  447189:	add    BYTE PTR [rax],al
  44718b:	add    BYTE PTR [rdx+0x5f766100],al
  447191:	data16 jb 0x4471f5
  447194:	ins    DWORD PTR es:[rdi],dx
  447195:	gs pop rdi
  447197:	movsxd ebp,DWORD PTR [rdi+0x70]
  44719a:	jns    0x4471fb
  44719c:	jo     0x447210
  44719e:	outs   dx,DWORD PTR ds:[rsi]
  44719f:	jo     0x447214
  4471a1:	add    BYTE PTR [rax],al
  4471a3:	add    BYTE PTR [rbx+0x5f766100],al
  4471a9:	data16 jb 0x44720d
  4471ac:	ins    DWORD PTR es:[rdi],dx
  4471ad:	gs pop rdi
  4471af:	data16 jb 0x447217
  4471b2:	add    BYTE PTR gs:[rax+rax*1+0x665f7661],al
  4471ba:	jb     0x44721d
  4471bc:	ins    DWORD PTR es:[rdi],dx
  4471bd:	gs pop rdi
  4471bf:	addr32 gs je 0x447222
  4471c3:	(bad)  
  4471c4:	gs jae 0x44723b
  4471c7:	pop    rdi
  4471c8:	data16 outs dx,WORD PTR gs:[rsi]
  4471cc:	jb     0x447242
  4471ce:	pop    rdi
  4471cf:	je     0x44723a
  4471d1:	ins    DWORD PTR es:[rdi],dx
  4471d2:	gs jae 0x447249
  4471d5:	(bad)  
  4471d6:	ins    DWORD PTR es:[rdi],dx
  4471d7:	jo     0x4471d9
  4471d9:	add    BYTE PTR [rax],al
  4471db:	add    BYTE PTR [rbp+0x5f766100],al
  4471e1:	data16 jb 0x447245
  4471e4:	ins    DWORD PTR es:[rdi],dx
  4471e5:	gs pop rdi
  4471e7:	addr32 gs je 0x44724a
  4471eb:	(bad)  
  4471ec:	jne    0x447254
  4471ee:	data16 gs jb 0x4471f2
  4471f2:	add    BYTE PTR [rax],al
  4471f4:	xchg   DWORD PTR [rax],eax
  4471f6:	(bad)  
  4471f7:	jbe    0x447258
  4471f9:	data16 jb 0x44725d
  4471fc:	ins    DWORD PTR es:[rdi],dx
  4471fd:	gs pop rdi
  4471ff:	addr32 gs je 0x447262
  447203:	movsxd ebp,DWORD PTR [rax+0x61]
  447206:	outs   dx,BYTE PTR ds:[rsi]
  447207:	outs   dx,BYTE PTR ds:[rsi]
  447208:	gs ins BYTE PTR es:[rdi],dx
  44720a:	jae    0x44720c
  44720c:	mov    WORD PTR [rax],es
  44720e:	(bad)  
  44720f:	jbe    0x447270
  447211:	data16 jb 0x447275
  447214:	ins    DWORD PTR es:[rdi],dx
  447215:	gs pop rdi
  447217:	addr32 gs je 0x44727a
  44721b:	jo     0x447288
  44721d:	je     0x44727e
  44721f:	fs jne 0x447294
  447222:	(bad)  
  447223:	je     0x44728e
  447225:	outs   dx,DWORD PTR ds:[rsi]
  447226:	outs   dx,BYTE PTR ds:[rsi]
  447227:	add    BYTE PTR [rbp+0x5f766100],dl
  44722d:	data16 jb 0x447291
  447230:	ins    DWORD PTR es:[rdi],dx
  447231:	gs pop rdi
  447233:	ins    DWORD PTR es:[rdi],dx
  447234:	outs   dx,DWORD PTR ds:[rsi]
  447235:	jbe    0x44729c
  447237:	pop    rdi
  447238:	jb     0x44729f
  44723a:	data16 add BYTE PTR [rdi+0x5f766100],dl
  447241:	data16 jb 0x4472a5
  447244:	ins    DWORD PTR es:[rdi],dx
  447245:	gs pop rdi
  447247:	jb     0x4472ae
  447249:	data16 add BYTE PTR [rax],al
  44724c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44724d:	add    BYTE PTR [rcx+0x76],ah
  447250:	pop    rdi
  447251:	data16 jb 0x4472b5
  447254:	ins    DWORD PTR es:[rdi],dx
  447255:	gs pop rdi
  447257:	jne    0x4472c7
  447259:	jb     0x4472c0
  44725b:	data16 add BYTE PTR [rax],al
  44725e:	add    BYTE PTR [rax],al
  447260:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447261:	add    BYTE PTR [rcx+0x76],ah
  447264:	pop    rdi
  447265:	data16 jb 0x4472cd
  447268:	add    BYTE PTR gs:[rax],al
  44726b:	add    BYTE PTR [rax+0x5f766100],ch
  447271:	data16 jb 0x4472d9
  447274:	gs jo  0x447277
  447277:	add    BYTE PTR [rbx+0x5f766100],ch
  44727d:	addr32 gs je 0x4472e0
  447281:	(bad)  
  447282:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  44728a:	jo     0x4472f5
  44728c:	js     0x4472f3
  44728e:	ins    BYTE PTR es:[rdi],dx
  44728f:	add    BYTE PTR [rbp+0x5f766100],ch
  447295:	addr32 gs je 0x4472f8
  447299:	movsxd ebp,DWORD PTR [rax+0x61]
  44729c:	outs   dx,BYTE PTR ds:[rsi]
  44729d:	outs   dx,BYTE PTR ds:[rsi]
  44729e:	gs ins BYTE PTR es:[rdi],dx
  4472a0:	pop    rdi
  4472a1:	fs gs jae 0x447308
  4472a5:	jb     0x447310
  4472a7:	jo     0x44731d
  4472a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4472b0:	scas   al,BYTE PTR es:[rdi]
  4472b1:	add    BYTE PTR [rcx+0x76],ah
  4472b4:	pop    rdi
  4472b5:	addr32 gs je 0x447318
  4472b9:	movsxd ebp,DWORD PTR [rax+0x61]
  4472bc:	outs   dx,BYTE PTR ds:[rsi]
  4472bd:	outs   dx,BYTE PTR ds:[rsi]
  4472be:	gs ins BYTE PTR es:[rdi],dx
  4472c0:	pop    rdi
  4472c1:	ins    BYTE PTR es:[rdi],dx
  4472c2:	(bad)  
  4472c3:	jns    0x447334
  4472c5:	jne    0x44733b
  4472c7:	add    BYTE PTR [rax+0x5f766100],dh
  4472cd:	addr32 gs je 0x447330
  4472d1:	movsxd ebp,DWORD PTR [rax+0x61]
  4472d4:	outs   dx,BYTE PTR ds:[rsi]
  4472d5:	outs   dx,BYTE PTR ds:[rsi]
  4472d6:	gs ins BYTE PTR es:[rdi],dx
  4472d8:	pop    rdi
  4472d9:	ins    BYTE PTR es:[rdi],dx
  4472da:	(bad)  
  4472db:	jns    0x44734c
  4472dd:	jne    0x447353
  4472df:	pop    rdi
  4472e0:	outs   dx,BYTE PTR ds:[rsi]
  4472e1:	(bad)  
  4472e2:	pop    rdi
  4472e3:	movsxd ebp,DWORD PTR [rax+0x61]
  4472e6:	outs   dx,BYTE PTR ds:[rsi]
  4472e7:	outs   dx,BYTE PTR ds:[rsi]
  4472e8:	gs ins BYTE PTR es:[rdi],dx
  4472ea:	jae    0x4472ec
  4472ec:	mov    cl,0x0
  4472ee:	(bad)  
  4472ef:	jbe    0x447350
  4472f1:	addr32 gs je 0x447354
  4472f5:	movsxd ebp,DWORD PTR [rax+0x61]
  4472f8:	outs   dx,BYTE PTR ds:[rsi]
  4472f9:	outs   dx,BYTE PTR ds:[rsi]
  4472fa:	gs ins BYTE PTR es:[rdi],dx
  4472fc:	pop    rdi
  4472fd:	ins    BYTE PTR es:[rdi],dx
  4472fe:	(bad)  
  4472ff:	jns    0x447370
  447301:	jne    0x447377
  447303:	pop    rdi
  447304:	jae    0x44737a
  447306:	jb     0x447371
  447308:	outs   dx,BYTE PTR ds:[rsi]
  447309:	add    BYTE PTR [eax],al
  44730c:	mov    dl,0x0
  44730e:	(bad)  
  44730f:	jbe    0x447370
  447311:	addr32 gs je 0x447374
  447315:	movsxd ebp,DWORD PTR [rax+0x61]
  447318:	outs   dx,BYTE PTR ds:[rsi]
  447319:	outs   dx,BYTE PTR ds:[rsi]
  44731a:	gs ins BYTE PTR es:[rdi],dx
  44731c:	pop    rdi
  44731d:	outs   dx,BYTE PTR ds:[rsi]
  44731e:	(bad)  
  44731f:	ins    DWORD PTR es:[rdi],dx
  447320:	add    BYTE PTR gs:[rax],al
  447323:	add    BYTE PTR [rax+rax*1+0x675f7661],dh
  44732a:	gs je  0x44738c
  44732d:	movsxd esi,DWORD PTR [rax+0x75]
  447330:	pop    rdi
  447331:	data16 ins BYTE PTR es:[rdi],dx
  447333:	(bad)  
  447334:	addr32 jae 0x447337
  447337:	add    BYTE PTR [rbp+0x5f766100],dh
  44733d:	addr32 gs je 0x4473a0
  447341:	fs gs data16 (bad) 
  447345:	jne    0x4473b3
  447347:	je     0x4473a8
  447349:	movsxd ebp,DWORD PTR [rax+0x61]
  44734c:	outs   dx,BYTE PTR ds:[rsi]
  44734d:	outs   dx,BYTE PTR ds:[rsi]
  44734e:	gs ins BYTE PTR es:[rdi],dx
  447350:	pop    rdi
  447351:	ins    BYTE PTR es:[rdi],dx
  447352:	(bad)  
  447353:	jns    0x4473c4
  447355:	jne    0x4473cb
  447357:	add    BYTE PTR [rax+0x5f766100],bh
  44735d:	addr32 gs je 0x4473c0
  447361:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  447365:	outs   dx,BYTE PTR ds:[rsi]
  447366:	pop    rdi
  447367:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44736a:	outs   dx,DWORD PTR ds:[rsi]
  44736b:	jb     0x4473cc
  44736d:	outs   dx,BYTE PTR ds:[rsi]
  44736e:	(bad)  
  44736f:	ins    DWORD PTR es:[rdi],dx
  447370:	add    BYTE PTR gs:[rax],al
  447373:	add    BYTE PTR [rcx+0x5f766100],bh
  447379:	addr32 gs je 0x4473dc
  44737d:	ins    DWORD PTR es:[rdi],dx
  44737e:	gs imul esp,DWORD PTR fs:[rcx+0x5f],0x65707974
  447387:	pop    rdi
  447388:	jae    0x4473fe
  44738a:	jb     0x4473f5
  44738c:	outs   dx,BYTE PTR ds:[rsi]
  44738d:	add    BYTE PTR [eax],al
  447390:	mov    esp,0x5f766100
  447395:	addr32 gs je 0x4473f8
  447399:	jo     0x447404
  44739b:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  44739f:	gs pop rdi
  4473a1:	je     0x44741c
  4473a3:	jo     0x44740a
  4473a5:	pop    rdi
  4473a6:	movsxd ebp,DWORD PTR [rax+0x61]
  4473a9:	jb     0x4473ab
  4473ab:	add    BYTE PTR [rbp+0x5f766100],bh
  4473b1:	addr32 gs je 0x447414
  4473b5:	jo     0x447420
  4473b7:	js     0x447418
  4473b9:	ins    WORD PTR es:[rdi],dx
  4473bb:	je     0x4473bd
  4473bd:	add    BYTE PTR [rax],al
  4473bf:	add    BYTE PTR [rdi+0x5f766100],bh
  4473c5:	addr32 gs je 0x447428
  4473c9:	jo     0x447434
  4473cb:	js     0x44742c
  4473cd:	ins    WORD PTR es:[rdi],dx
  4473cf:	je     0x447430
  4473d1:	outs   dx,BYTE PTR ds:[rsi]
  4473d2:	(bad)  
  4473d3:	ins    DWORD PTR es:[rdi],dx
  4473d4:	add    BYTE PTR gs:[rax],al
  4473d7:	add    ah,al
  4473d9:	add    BYTE PTR [rcx+0x76],ah
  4473dc:	pop    rdi
  4473dd:	addr32 gs je 0x447440
  4473e1:	jae    0x447444
  4473e3:	ins    DWORD PTR es:[rdi],dx
  4473e4:	jo     0x447452
  4473e6:	gs pop rdi
  4473e8:	ins    WORD PTR es:[rdi],dx
  4473ea:	je     0x4473ec
  4473ec:	(bad)
  4473ef:	jbe    0x447450
  4473f1:	addr32 gs je 0x447454
  4473f5:	jae    0x447458
  4473f7:	ins    DWORD PTR es:[rdi],dx
  4473f8:	jo     0x447466
  4473fa:	gs pop rdi
  4473fc:	ins    WORD PTR es:[rdi],dx
  4473fe:	je     0x44745f
  447400:	outs   dx,BYTE PTR ds:[rsi]
  447401:	(bad)  
  447402:	ins    DWORD PTR es:[rdi],dx
  447403:	add    BYTE PTR gs:[rax],al
  447406:	add    BYTE PTR [rax],al
  447408:	mov    BYTE PTR [rax],0x61
  44740b:	jbe    0x44746c
  44740d:	addr32 gs je 0x447470
  447411:	jae    0x447474
  447413:	ins    DWORD PTR es:[rdi],dx
  447414:	jo     0x447482
  447416:	gs pop rdi
  447418:	ins    WORD PTR es:[rdi],dx
  44741a:	je     0x44747b
  44741c:	jae    0x447492
  44741e:	jb     0x447489
  447420:	outs   dx,BYTE PTR ds:[rsi]
  447421:	add    BYTE PTR [eax],al
  447424:	mov    DWORD PTR [rax],0x675f7661
  44742a:	gs je  0x44748c
  44742d:	jae    0x4474a3
  44742f:	(bad)  
  447430:	outs   dx,BYTE PTR ds:[rsi]
  447431:	fs (bad) 
  447433:	jb     0x447499
  447435:	pop    rdi
  447436:	movsxd ebp,DWORD PTR [rax+0x61]
  447439:	outs   dx,BYTE PTR ds:[rsi]
  44743a:	outs   dx,BYTE PTR ds:[rsi]
  44743b:	gs ins BYTE PTR es:[rdi],dx
  44743d:	pop    rdi
  44743e:	ins    BYTE PTR es:[rdi],dx
  44743f:	(bad)  
  447440:	jns    0x4474b1
  447442:	jne    0x4474b8
  447444:	add    BYTE PTR [rax],al
  447446:	add    BYTE PTR [rax],al
  447448:	retf   0x6100
  44744b:	jbe    0x4474ac
  44744d:	addr32 gs je 0x4474b0
  447451:	je     0x4474c2
  447453:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  447457:	add    ah,cl
  447459:	add    BYTE PTR [rcx+0x76],ah
  44745c:	pop    rdi
  44745d:	addr32 gs je 0x4474d5
  447461:	imul   ebp,DWORD PTR [rbp+0x65],0x6c65725f
  447468:	(bad)  
  447469:	je     0x4474d4
  44746b:	jbe    0x4474d2
  44746d:	add    BYTE PTR [rax],al
  44746f:	add    bl,ah
  447471:	add    BYTE PTR [rcx+0x76],ah
  447474:	pop    rdi
  447475:	imul   ebp,DWORD PTR [rbp+0x61],0x635f6567
  44747c:	outs   dx,DWORD PTR ds:[rsi]
  44747d:	jo     0x4474f8
  44747f:	pop    rdi
  447480:	jo     0x4474ee
  447482:	(bad)  
  447483:	outs   dx,BYTE PTR ds:[rsi]
  447484:	add    BYTE PTR gs:[rax],al
  447487:	add    cl,dh
  447489:	add    BYTE PTR [rcx+0x76],ah
  44748c:	pop    rdi
  44748d:	ins    BYTE PTR es:[rdi],dx
  44748e:	outs   dx,DWORD PTR ds:[rsi]
  44748f:	add    BYTE PTR [eax],al
  447492:	add    BYTE PTR [rax],al
  447494:	repnz add BYTE PTR [rcx+0x76],ah
  447498:	pop    rdi
  447499:	ins    BYTE PTR es:[rdi],dx
  44749a:	outs   dx,DWORD PTR ds:[rsi]
  44749b:	xor    al,BYTE PTR [eax]
  44749e:	add    BYTE PTR [rax],al
  4474a0:	hlt    
  4474a1:	add    BYTE PTR [rcx+0x76],ah
  4474a4:	pop    rdi
  4474a5:	ins    BYTE PTR es:[rdi],dx
  4474a6:	outs   dx,DWORD PTR ds:[rsi]
  4474a7:	addr32 pop rdi
  4474a9:	fs gs data16 (bad) 
  4474ad:	jne    0x44751b
  4474af:	je     0x447510
  4474b1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4474b4:	ins    BYTE PTR es:[rdi],dx
  4474b5:	(bad)  
  4474b7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4474ba:	add    BYTE PTR [rax],al
  4474bc:	cmc    
  4474bd:	add    BYTE PTR [rcx+0x76],ah
  4474c0:	pop    rdi
  4474c1:	ins    BYTE PTR es:[rdi],dx
  4474c2:	outs   dx,DWORD PTR ds:[rsi]
  4474c3:	addr32 pop rdi
  4474c5:	outs   dx,WORD PTR ds:[rsi]
  4474c7:	jb     0x447536
  4474c9:	(bad)  
  4474ca:	je     0x44752b
  4474cc:	ins    BYTE PTR es:[rdi],dx
  4474cd:	imul   ebp,DWORD PTR [rsi+0x65],0x0
  4474d4:	test   BYTE PTR [rax],0x61
  4474d7:	jbe    0x447538
  4474d9:	ins    BYTE PTR es:[rdi],dx
  4474da:	outs   dx,DWORD PTR ds:[rsi]
  4474db:	addr32 pop rdi
  4474dd:	addr32 gs je 0x447540
  4474e1:	data16 ins BYTE PTR es:[rdi],dx
  4474e3:	(bad)  
  4474e4:	addr32 jae 0x4474e7
  4474e7:	add    bh,dh
  4474e9:	add    BYTE PTR [rcx+0x76],ah
  4474ec:	pop    rdi
  4474ed:	ins    BYTE PTR es:[rdi],dx
  4474ee:	outs   dx,DWORD PTR ds:[rsi]
  4474ef:	addr32 pop rdi
  4474f1:	addr32 gs je 0x447554
  4474f5:	ins    BYTE PTR es:[rdi],dx
  4474f6:	gs jbe 0x44755e
  4474f9:	ins    BYTE PTR es:[rdi],dx
  4474fa:	add    BYTE PTR [rax],al
  4474fc:	clc    
  4474fd:	add    BYTE PTR [rcx+0x76],ah
  447500:	pop    rdi
  447501:	ins    BYTE PTR es:[rdi],dx
  447502:	outs   dx,DWORD PTR ds:[rsi]
  447503:	addr32 pop rdi
  447505:	jae    0x44756c
  447507:	je     0x447568
  447509:	movsxd esp,DWORD PTR [rcx+0x6c]
  44750c:	ins    BYTE PTR es:[rdi],dx
  44750d:	(bad)  
  44750f:	movsxd ebp,DWORD PTR [rbx+0x0]
  447512:	add    BYTE PTR [rax],al
  447514:	stc    
  447515:	add    BYTE PTR [rcx+0x76],ah
  447518:	pop    rdi
  447519:	ins    BYTE PTR es:[rdi],dx
  44751a:	outs   dx,DWORD PTR ds:[rsi]
  44751b:	addr32 pop rdi
  44751d:	jae    0x447584
  44751f:	je     0x447580
  447521:	data16 ins BYTE PTR es:[rdi],dx
  447523:	(bad)  
  447524:	addr32 jae 0x447527
  447527:	add    dl,bh
  447529:	add    BYTE PTR [rcx+0x76],ah
  44752c:	pop    rdi
  44752d:	ins    BYTE PTR es:[rdi],dx
  44752e:	outs   dx,DWORD PTR ds:[rsi]
  44752f:	addr32 pop rdi
  447531:	jae    0x447598
  447533:	je     0x447594
  447535:	ins    BYTE PTR es:[rdi],dx
  447536:	gs jbe 0x44759e
  447539:	ins    BYTE PTR es:[rdi],dx
  44753a:	add    BYTE PTR [rax],al
  44753c:	cld    
  44753d:	add    BYTE PTR [rcx+0x76],ah
  447540:	pop    rdi
  447541:	ins    DWORD PTR es:[rdi],dx
  447542:	(bad)  
  447543:	ins    BYTE PTR es:[rdi],dx
  447544:	ins    BYTE PTR es:[rdi],dx
  447545:	outs   dx,DWORD PTR ds:[rsi]
  447546:	movsxd eax,DWORD PTR [rax]
  447548:	std    
  447549:	add    BYTE PTR [rcx+0x76],ah
  44754c:	pop    rdi
  44754d:	ins    DWORD PTR es:[rdi],dx
  44754e:	(bad)  
  44754f:	ins    BYTE PTR es:[rdi],dx
  447550:	ins    BYTE PTR es:[rdi],dx
  447551:	outs   dx,DWORD PTR ds:[rsi]
  447552:	movsxd edi,DWORD PTR [rdx+0x0]
  447555:	add    BYTE PTR [rax],al
  447557:	add    bh,bh
  447559:	add    BYTE PTR [rcx+0x76],ah
  44755c:	pop    rdi
  44755d:	ins    DWORD PTR es:[rdi],dx
  44755e:	(bad)  
  44755f:	je     0x4475c4
  447561:	push   0x6d616e5f
  447566:	add    BYTE PTR gs:[rax],al
  447569:	add    DWORD PTR [rcx+0x76],esp
  44756c:	pop    rdi
  44756d:	ins    DWORD PTR es:[rdi],dx
  44756e:	(bad)  
  44756f:	js     0x4475d0
  447571:	(bad)  
  447572:	ins    BYTE PTR es:[rdi],dx
  447573:	ins    BYTE PTR es:[rdi],dx
  447574:	outs   dx,DWORD PTR ds:[rsi]
  447575:	movsxd eax,DWORD PTR [rax]
  447577:	add    BYTE PTR [rcx],cl
  447579:	add    DWORD PTR [rcx+0x76],esp
  44757c:	pop    rdi
  44757d:	ins    DWORD PTR es:[rdi],dx
  44757e:	jne    0x4475ec
  447580:	pop    rdi
  447581:	jno    0x447583
  447583:	add    BYTE PTR [rcx],dl
  447585:	add    DWORD PTR [rcx+0x76],esp
  447588:	pop    rdi
  447589:	outs   dx,DWORD PTR ds:[rsi]
  44758a:	jo     0x447600
  44758c:	pop    rdi
  44758d:	movsxd ebp,DWORD PTR [rax+0x69]
  447590:	ins    BYTE PTR es:[rdi],dx
  447591:	fs pop rdi
  447593:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  447597:	jae    0x4475f8
  447599:	outs   dx,BYTE PTR ds:[rsi]
  44759a:	gs js  0x447611
  44759d:	add    BYTE PTR [rax],al
  44759f:	add    BYTE PTR [rip+0x5f766101],dl        # 0x5fbad6a6
  4475a5:	outs   dx,DWORD PTR ds:[rsi]
  4475a6:	jo     0x44761c
  4475a8:	pop    rdi
  4475a9:	gs jbe 0x44760d
  4475ac:	ins    BYTE PTR es:[rdi],dx
  4475ad:	pop    rdi
  4475ae:	data16 ins BYTE PTR es:[rdi],dx
  4475b0:	(bad)  
  4475b1:	addr32 jae 0x4475b4
  4475b4:	(bad)  
  4475b5:	add    DWORD PTR [rcx+0x76],esp
  4475b8:	pop    rdi
  4475b9:	outs   dx,DWORD PTR ds:[rsi]
  4475ba:	jo     0x447630
  4475bc:	pop    rdi
  4475bd:	gs jbe 0x447621
  4475c0:	ins    BYTE PTR es:[rdi],dx
  4475c1:	pop    rdi
  4475c2:	imul   ebp,DWORD PTR [rsi+0x74],0x1a000000
  4475c9:	add    DWORD PTR [rcx+0x76],esp
  4475cc:	pop    rdi
  4475cd:	outs   dx,DWORD PTR ds:[rsi]
  4475ce:	jo     0x447644
  4475d0:	pop    rdi
  4475d1:	imul   bp,WORD PTR [rsi+0x64],0x0
  4475d7:	add    BYTE PTR [rip+0x5f766101],ah        # 0x5fbad6de
  4475dd:	outs   dx,DWORD PTR ds:[rsi]
  4475de:	jo     0x447654
  4475e0:	pop    rdi
  4475e1:	addr32 gs je 0x447644
  4475e5:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4475e9:	jbe    0x44764c
  4475eb:	ins    BYTE PTR es:[rdi],dx
  4475ec:	jne    0x447653
  4475ee:	add    BYTE PTR [rax],al
  4475f0:	sub    eax,0x5f766101
  4475f5:	outs   dx,DWORD PTR ds:[rsi]
  4475f6:	jo     0x44766c
  4475f8:	pop    rdi
  4475f9:	jo     0x44766f
  4475fb:	jb     0x4475fd
  4475fd:	add    BYTE PTR [rax],al
  4475ff:	add    BYTE PTR [rcx],dh
  447601:	add    DWORD PTR [rcx+0x76],esp
  447604:	pop    rdi
  447605:	outs   dx,DWORD PTR ds:[rsi]
  447606:	jo     0x44767c
  447608:	pop    rdi
  447609:	jae    0x447670
  44760b:	je     0x44760d
  44760d:	add    BYTE PTR [rax],al
  44760f:	add    BYTE PTR [rsi],dh
  447611:	add    DWORD PTR [rcx+0x76],esp
  447614:	pop    rdi
  447615:	outs   dx,DWORD PTR ds:[rsi]
  447616:	jo     0x44768c
  447618:	pop    rdi
  447619:	jae    0x447680
  44761b:	je     0x44767c
  44761d:	imul   esp,DWORD PTR fs:[rbx+0x74],0x37000000
  447625:	add    DWORD PTR [rcx+0x76],esp
  447628:	pop    rdi
  447629:	outs   dx,DWORD PTR ds:[rsi]
  44762a:	jo     0x4476a0
  44762c:	pop    rdi
  44762d:	jae    0x447694
  44762f:	je     0x447690
  447631:	imul   esp,DWORD PTR fs:[rbx+0x74],0x3c000032
  447639:	add    DWORD PTR [rcx+0x76],esp
  44763c:	pop    rdi
  44763d:	outs   dx,DWORD PTR ds:[rsi]
  44763e:	jo     0x4476b4
  447640:	pop    rdi
  447641:	jae    0x4476a8
  447643:	je     0x4476a4
  447645:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  44764c:	add    DWORD PTR [r9+0x76],esp
  447650:	pop    rdi
  447651:	outs   dx,DWORD PTR ds:[rsi]
  447652:	jo     0x4476c8
  447654:	pop    rdi
  447655:	jae    0x4476bf
  447657:	outs   dx,DWORD PTR ds:[rsi]
  447658:	ja     0x44768c
  44765a:	add    BYTE PTR [rax],al
  44765c:	rex.XB add DWORD PTR [r9+0x76],esp
  447660:	pop    rdi
  447661:	jo     0x4476c4
  447663:	jb     0x4476d8
  447665:	gs pop rdi
  447667:	movsxd esi,DWORD PTR [rax+0x75]
  44766a:	pop    rdi
  44766b:	movsxd esp,DWORD PTR [rcx+0x70]
  44766e:	jae    0x447670
  447670:	add    DWORD PTR [r9+0x76],r12d
  447674:	pop    rdi
  447675:	jo     0x4476d8
  447677:	jb     0x4476ec
  447679:	gs pop rdi
  44767b:	jb     0x4476de
  44767d:	je     0x4476e8
  44767f:	outs   dx,DWORD PTR ds:[rsi]
  447680:	add    BYTE PTR [rax],al
  447682:	add    BYTE PTR [rax],al
  447684:	rex.RX add DWORD PTR [rcx+0x76],r12d
  447688:	pop    rdi
  447689:	jo     0x4476ec
  44768b:	jb     0x447700
  44768d:	gs pop rdi
  44768f:	je     0x4476fa
  447691:	ins    DWORD PTR es:[rdi],dx
  447692:	add    BYTE PTR gs:[rdi+0x1],al
  447696:	(bad)  
  447697:	jbe    0x4476f8
  447699:	jo     0x4476fc
  44769b:	jb     0x447710
  44769d:	gs pop rdi
  44769f:	jbe    0x44770a
  4476a1:	fs outs dx,DWORD PTR gs:[rsi]
  4476a4:	pop    rdi
  4476a5:	jb     0x447708
  4476a7:	je     0x44770e
  4476a9:	add    BYTE PTR [rax],al
  4476ab:	add    BYTE PTR [rax+0x1],cl
  4476ae:	(bad)  
  4476af:	jbe    0x447710
  4476b1:	jo     0x447714
  4476b3:	jb     0x447728
  4476b5:	gs pop rdi
  4476b7:	jbe    0x447722
  4476b9:	fs outs dx,DWORD PTR gs:[rsi]
  4476bc:	pop    rdi
  4476bd:	jae    0x447728
  4476bf:	jp     0x447726
  4476c1:	add    BYTE PTR [rax],al
  4476c3:	add    BYTE PTR [rdx+0x1],cl
  4476c6:	(bad)  
  4476c7:	jbe    0x447728
  4476c9:	jo     0x447734
  4476cb:	js     0x44772c
  4476cd:	ins    WORD PTR es:[rdi],dx
  4476cf:	je     0x447730
  4476d1:	fs gs jae 0x447738
  4476d5:	pop    rdi
  4476d6:	addr32 gs je 0x4476da
  4476da:	add    BYTE PTR [rax],al
  4476dc:	rex.WXB add QWORD PTR [r9+0x76],rsp
  4476e0:	pop    rdi
  4476e1:	jo     0x44774c
  4476e3:	js     0x447744
  4476e5:	ins    WORD PTR es:[rdi],dx
  4476e7:	je     0x447748
  4476e9:	fs gs jae 0x447750
  4476ed:	pop    rdi
  4476ee:	addr32 gs je 0x447751
  4476f2:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x14c0000
  4476fa:	(bad)  
  4476fb:	jbe    0x44775c
  4476fd:	jo     0x447768
  4476ff:	js     0x447760
  447701:	ins    WORD PTR es:[rdi],dx
  447703:	je     0x447764
  447705:	fs gs jae 0x44776c
  447709:	pop    rdi
  44770a:	outs   dx,BYTE PTR ds:[rsi]
  44770b:	gs js  0x447782
  44770e:	add    BYTE PTR [rax],al
  447710:	push   rdi
  447711:	add    DWORD PTR [rcx+0x76],esp
  447714:	pop    rdi
  447715:	jb     0x44777c
  447717:	(bad)  
  447718:	ins    BYTE PTR es:[rdi],dx
  447719:	ins    BYTE PTR es:[rdi],dx
  44771a:	outs   dx,DWORD PTR ds:[rsi]
  44771b:	movsxd ebx,DWORD PTR [rdi+0x61]
  44771e:	jb     0x447792
  447720:	(bad)  
  447721:	jns    0x447723
  447723:	add    BYTE PTR [rax+0x1],bl
  447726:	(bad)  
  447727:	jbe    0x447788
  447729:	jb     0x447790
  44772b:	(bad)  
  44772c:	ins    BYTE PTR es:[rdi],dx
  44772d:	ins    BYTE PTR es:[rdi],dx
  44772e:	outs   dx,DWORD PTR ds:[rsi]
  44772f:	movsxd ebx,DWORD PTR [rdi+0x66]
  447732:	add    BYTE PTR [rax],al
  447734:	pop    rdx
  447735:	add    DWORD PTR [rcx+0x76],esp
  447738:	pop    rdi
  447739:	jb     0x4477a0
  44773b:	(bad)  
  44773c:	ins    BYTE PTR es:[rdi],dx
  44773d:	ins    BYTE PTR es:[rdi],dx
  44773e:	outs   dx,DWORD PTR ds:[rsi]
  44773f:	movsxd esi,DWORD PTR [rax+0x5f]
  447742:	(bad)  
  447743:	jb     0x4477b7
  447745:	(bad)  
  447746:	jns    0x447748
  447748:	pop    rbx
  447749:	add    DWORD PTR [rcx+0x76],esp
  44774c:	pop    rdi
  44774d:	jb     0x4477b4
  44774f:	fs jne 0x4477b5
  447752:	add    BYTE PTR gs:[rcx+rax*1+0x61],bl
  447757:	jbe    0x4477b8
  447759:	jb     0x4477c0
  44775b:	jae    0x4477c0
  44775d:	(bad)  
  44775e:	ins    BYTE PTR es:[rdi],dx
  44775f:	add    BYTE PTR gs:[rax],al
  447762:	add    BYTE PTR [rax],al
  447764:	pop    rbp
  447765:	add    DWORD PTR [rcx+0x76],esp
  447768:	pop    rdi
  447769:	jb     0x4477d0
  44776b:	jae    0x4477d0
  44776d:	(bad)  
  44776e:	ins    BYTE PTR es:[rdi],dx
  44776f:	gs pop rdi
  447771:	fs gs ins BYTE PTR es:[rdi],dx
  447774:	je     0x4477d7
  447776:	add    BYTE PTR [rax],al
  447778:	pop    rsi
  447779:	add    DWORD PTR [rcx+0x76],esp
  44777c:	pop    rdi
  44777d:	jb     0x4477e4
  44777f:	jae    0x4477e4
  447781:	(bad)  
  447782:	ins    BYTE PTR es:[rdi],dx
  447783:	gs pop rdi
  447785:	jno    0x447787
  447787:	add    BYTE PTR [rcx+0x5f766101],al
  44778d:	jae    0x447803
  44778f:	jb     0x4477f4
  447791:	(bad)  
  447792:	jae    0x4477f9
  447794:	movsxd ebp,DWORD PTR [rbp+0x70]
  447797:	add    BYTE PTR [rdx+0x5f766101],al
  44779d:	jae    0x447813
  44779f:	jb     0x447805
  4477a1:	jne    0x447813
  4477a3:	add    BYTE PTR [rbx+0x5f766101],al
  4477a9:	jae    0x44781f
  4477ab:	jb     0x447812
  4477ad:	jb     0x447821
  4477af:	outs   dx,DWORD PTR ds:[rsi]
  4477b0:	jb     0x4477b2
  4477b2:	add    BYTE PTR [rax],al
  4477b4:	xchg   BYTE PTR [rcx],al
  4477b6:	(bad)  
  4477b7:	jbe    0x447818
  4477b9:	jae    0x44782f
  4477bb:	jb     0x447829
  4477bd:	movsxd esp,DWORD PTR [rcx+0x74]
  4477c0:	add    BYTE PTR [rax],al
  4477c2:	add    BYTE PTR [rax],al
  4477c4:	xchg   DWORD PTR [rcx],eax
  4477c6:	(bad)  
  4477c7:	jbe    0x447828
  4477c9:	jae    0x44783f
  4477cb:	jb     0x447839
  4477cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4477d0:	data16 add BYTE PTR [rax],al
  4477d3:	add    BYTE PTR [rax+0x5f766101],cl
  4477d9:	jae    0x44784f
  4477db:	jb     0x447849
  4477dd:	movsxd esi,DWORD PTR [rax+0x79]
  4477e0:	add    BYTE PTR [rax],al
  4477e2:	add    BYTE PTR [rax],al
  4477e4:	mov    WORD PTR [rcx],es
  4477e6:	(bad)  
  4477e7:	jbe    0x447848
  4477e9:	jae    0x44785f
  4477eb:	jb     0x447860
  4477ed:	je     0x447850
  4477ef:	jb     0x447865
  4477f1:	add    BYTE PTR [rax],al
  4477f3:	add    BYTE PTR [rbp+0x5f766101],cl
  4477f9:	jae    0x44786f
  4477fb:	jb     0x447871
  4477fd:	outs   dx,DWORD PTR ds:[rsi]
  4477fe:	add    BYTE PTR fs:[rsi+0x5f766101],cl
  447805:	jae    0x44787b
  447807:	jb     0x44787d
  447809:	outs   dx,DWORD PTR ds:[rsi]
  44780a:	imul   eax,DWORD PTR [rax],0xffffffae
  44780d:	add    DWORD PTR [rcx+0x76],esp
  447810:	pop    rdi
  447811:	jne    0x447886
  447813:	ins    BYTE PTR es:[rdi],dx
  447814:	gs gs jo 0x447818
  447818:	mov    BYTE PTR [rcx],0x61
  44781b:	jbe    0x447892
  44781d:	je     0x447888
  44781f:	ins    BYTE PTR es:[rdi],dx
  447820:	pop    rdi
  447821:	movsxd ebp,DWORD PTR [rdi+0x6e]
  447824:	imul   sp,WORD PTR [rdi+0x75],0x6172
  44782a:	je     0x447895
  44782c:	outs   dx,DWORD PTR ds:[rsi]
  44782d:	outs   dx,BYTE PTR ds:[rsi]
  44782e:	add    BYTE PTR [rax],al
  447830:	enter  0x6101,0x76
  447834:	jne    0x4478aa
  447836:	imul   ebp,DWORD PTR [rdi+rbx*2+0x76],0x69737265
  44783e:	outs   dx,DWORD PTR ds:[rsi]
  44783f:	outs   dx,BYTE PTR ds:[rsi]
  447840:	add    BYTE PTR [rax],al
  447842:	add    BYTE PTR [rax],al
  447844:	add    BYTE PTR [rax],al
  447846:	jo     0x4478b7
  447848:	jae    0x4478be
  44784a:	jo     0x4478be
  44784c:	outs   dx,DWORD PTR ds:[rsi]
  44784d:	movsxd ebx,DWORD PTR [rdi+0x63]
  447850:	outs   dx,DWORD PTR ds:[rsi]
  447851:	outs   dx,BYTE PTR ds:[rsi]
  447852:	imul   sp,WORD PTR [rdi+0x75],0x6172
  447858:	je     0x4478c3
  44785a:	outs   dx,DWORD PTR ds:[rsi]
  44785b:	outs   dx,BYTE PTR ds:[rsi]
  44785c:	add    BYTE PTR [rax],al
  44785e:	add    BYTE PTR [rax],al
  447860:	add    eax,DWORD PTR [rax]
  447862:	jo     0x4478d3
  447864:	jae    0x4478da
  447866:	jo     0x4478da
  447868:	outs   dx,DWORD PTR ds:[rsi]
  447869:	movsxd ebx,DWORD PTR [rdi+0x76]
  44786c:	gs jb  0x4478e2
  44786f:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  447876:	jae    0x4478ef
  447878:	jb     0x4478d9
  44787a:	(bad)  
  44787b:	ins    BYTE PTR es:[rdi],dx
  44787c:	ins    BYTE PTR es:[rdi],dx
  44787d:	outs   dx,DWORD PTR ds:[rsi]
  44787e:	movsxd eax,DWORD PTR [rax]
  447880:	or     BYTE PTR [rax],al
  447882:	jae    0x4478fb
  447884:	jb     0x4478e5
  447886:	data16 jb 0x4478ee
  447889:	add    BYTE PTR gs:[rax],al
  44788c:	or     DWORD PTR [rax],eax
  44788e:	jae    0x447907
  447890:	jb     0x4478f1
  447892:	addr32 gs je 0x4478f5
  447896:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44789a:	jae    0x44789c
  44789c:	adc    eax,DWORD PTR [rax]
  44789e:	jae    0x447917
  4478a0:	jb     0x447907
  4478a2:	jae    0x447905
  4478a4:	ins    DWORD PTR es:[rdi],dx
  4478a5:	jo     0x447913
  4478a7:	gs pop rdi
  4478a9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4478ac:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4478b2:	je     0x44791d
  4478b4:	outs   dx,DWORD PTR ds:[rsi]
  4478b5:	outs   dx,BYTE PTR ds:[rsi]
  4478b6:	add    BYTE PTR [rax],al
  4478b8:	adc    eax,0x72777300
  4478bd:	gs jae 0x447921
  4478c0:	ins    DWORD PTR es:[rdi],dx
  4478c1:	jo     0x44792f
  4478c3:	gs pop rdi
  4478c5:	jbe    0x44792c
  4478c7:	jb     0x44793c
  4478c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4478d0:	add    al,BYTE PTR [rax]
  4478d2:	jae    0x44794b
  4478d4:	jae    0x447935
  4478d6:	(bad)  
  4478d7:	ins    BYTE PTR es:[rdi],dx
  4478d8:	ins    BYTE PTR es:[rdi],dx
  4478d9:	outs   dx,DWORD PTR ds:[rsi]
  4478da:	movsxd ebx,DWORD PTR [rdi+0x63]
  4478dd:	outs   dx,DWORD PTR ds:[rsi]
  4478de:	outs   dx,BYTE PTR ds:[rsi]
  4478df:	je     0x447946
  4478e1:	js     0x447957
  4478e3:	add    BYTE PTR [rcx],cl
  4478e5:	add    BYTE PTR [rbx+0x77],dh
  4478e8:	jae    0x447949
  4478ea:	data16 jb 0x447952
  4478ed:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4478f0:	outs   dx,BYTE PTR ds:[rsi]
  4478f1:	je     0x447958
  4478f3:	js     0x447969
  4478f5:	add    BYTE PTR [rax],al
  4478f7:	add    BYTE PTR [rax+rax*1],dl
  4478fa:	jae    0x447973
  4478fc:	jae    0x44795d
  4478fe:	addr32 gs je 0x447961
  447902:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  447906:	jae    0x447908
  447908:	(bad)  
  447909:	add    BYTE PTR [rbx+0x77],dh
  44790c:	jae    0x44796d
  44790e:	imul   esi,DWORD PTR [rbx+0x53],0x6f707075
  447915:	jb     0x44798b
  447917:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  44791b:	jo     0x447992
  44791d:	je     0x44791f
  44791f:	add    BYTE PTR [rax],bl
  447921:	add    BYTE PTR [rbx+0x77],dh
  447924:	jae    0x447985
  447926:	imul   esi,DWORD PTR [rbx+0x53],0x6f707075
  44792d:	jb     0x4479a3
  44792f:	gs fs rex.WRXB jne 0x4479a8
  447934:	jo     0x4479ab
  447936:	je     0x447938
  447938:	and    DWORD PTR [rax],eax
  44793a:	jae    0x4479b3
  44793c:	jae    0x4479a1
  44793e:	(bad)  
  44793f:	ins    BYTE PTR es:[rdi],dx
  447940:	gs pop rdi
  447942:	movsxd ebp,DWORD PTR [rdi+0x6e]
  447945:	imul   sp,WORD PTR [rdi+0x75],0x6172
  44794b:	je     0x4479b6
  44794d:	outs   dx,DWORD PTR ds:[rsi]
  44794e:	outs   dx,BYTE PTR ds:[rsi]
  44794f:	add    BYTE PTR [rbx],ah
  447951:	add    BYTE PTR [rbx+0x77],dh
  447954:	jae    0x4479b9
  447956:	(bad)  
  447957:	ins    BYTE PTR es:[rdi],dx
  447958:	gs pop rdi
  44795a:	jbe    0x4479c1
  44795c:	jb     0x4479d1
  44795e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  447965:	add    al,0x0
  447968:	add    BYTE PTR [rax+0x4],al
  44796b:	add    BYTE PTR [rax],al
  44796d:	add    al,0x0
  447970:	add    BYTE PTR [rax+0x4],al
  447973:	add    BYTE PTR [rax],al
  447975:	add    al,0x0
  447978:	add    BYTE PTR [rax+0x4],al
  44797b:	add    BYTE PTR [rax],al
  44797d:	add    al,0x0
  447980:	add    BYTE PTR [rax+0x4],al
  447983:	add    BYTE PTR [rax],al
  447985:	add    al,0x0
  447988:	add    BYTE PTR [rax+0x4],al
  44798b:	add    BYTE PTR [rax],al
  44798d:	add    al,0x0
  447990:	add    BYTE PTR [rax+0x4],al
  447993:	add    BYTE PTR [rax],al
  447995:	add    al,0x0
  447998:	add    BYTE PTR [rax+0x4],al
  44799b:	add    BYTE PTR [rax],al
  44799d:	add    al,0x0
  4479a0:	add    BYTE PTR [rax+0x4],al
  4479a3:	add    BYTE PTR [rax],al
  4479a5:	add    al,0x0
  4479a8:	add    BYTE PTR [rax+0x4],al
  4479ab:	add    BYTE PTR [rax],al
  4479ad:	add    al,0x0
  4479b0:	add    BYTE PTR [rax+0x4],al
  4479b3:	add    BYTE PTR [rax],al
  4479b5:	add    al,0x0
  4479b8:	add    BYTE PTR [rax+0x4],al
  4479bb:	add    BYTE PTR [rax],al
  4479bd:	add    al,0x0
  4479c0:	add    BYTE PTR [rax+0x4],al
  4479c3:	add    BYTE PTR [rax],al
  4479c5:	add    al,0x0
  4479c8:	add    BYTE PTR [rax+0x4],al
  4479cb:	add    BYTE PTR [rax],al
  4479cd:	add    al,0x0
  4479d0:	add    BYTE PTR [rax+0x4],al
  4479d3:	add    BYTE PTR [rax],al
  4479d5:	add    al,0x0
  4479d8:	add    BYTE PTR [rax+0x4],al
  4479db:	add    BYTE PTR [rax],al
  4479dd:	add    al,0x0
  4479e0:	add    BYTE PTR [rax+0x4],al
  4479e3:	add    BYTE PTR [rax],al
  4479e5:	add    al,0x0
  4479e8:	add    BYTE PTR [rax+0x4],al
  4479eb:	add    BYTE PTR [rax],al
  4479ed:	add    al,0x0
  4479f0:	add    BYTE PTR [rax+0x4],al
  4479f3:	add    BYTE PTR [rax],al
  4479f5:	add    al,0x0
  4479f8:	add    BYTE PTR [rax+0x4],al
  4479fb:	add    BYTE PTR [rax],al
  4479fd:	add    al,0x0
  447a00:	add    BYTE PTR [rax+0x4],al
  447a03:	add    BYTE PTR [rbx+0x45],cl
  447a06:	push   rdx
  447a07:	rex.WRX
  447a08:	rex.RB
  447a09:	xor    r14,QWORD PTR [rdx]
  447a0c:	cs fs ins BYTE PTR es:[rdi],dx
  447a0f:	ins    BYTE PTR es:[rdi],dx
  447a10:	add    BYTE PTR [rax],al
  447a12:	add    BYTE PTR [rax],al
  447a14:	adc    al,0x40
  447a16:	add    al,0x0
  447a18:	adc    al,0x40
  447a1a:	add    al,0x0
  447a1c:	adc    al,0x40
  447a1e:	add    al,0x0
  447a20:	adc    al,0x40
  447a22:	add    al,0x0
  447a24:	adc    al,0x40
  447a26:	add    al,0x0
  447a28:	adc    al,0x40
  447a2a:	add    al,0x0
  447a2c:	adc    al,0x40
  447a2e:	add    al,0x0
  447a30:	adc    al,0x40
  447a32:	add    al,0x0
  447a34:	adc    al,0x40
  447a36:	add    al,0x0
  447a38:	adc    al,0x40
  447a3a:	add    al,0x0
  447a3c:	adc    al,0x40
  447a3e:	add    al,0x0
  447a40:	adc    al,0x40
  447a42:	add    al,0x0
  447a44:	adc    al,0x40
  447a46:	add    al,0x0
  447a48:	adc    al,0x40
  447a4a:	add    al,0x0
  447a4c:	adc    al,0x40
  447a4e:	add    al,0x0
  447a50:	adc    al,0x40
  447a52:	add    al,0x0
  447a54:	adc    al,0x40
  447a56:	add    al,0x0
  447a58:	adc    al,0x40
  447a5a:	add    al,0x0
  447a5c:	adc    al,0x40
  447a5e:	add    al,0x0
  447a60:	adc    al,0x40
  447a62:	add    al,0x0
  447a64:	adc    al,0x40
  447a66:	add    al,0x0
  447a68:	adc    al,0x40
  447a6a:	add    al,0x0
  447a6c:	adc    al,0x40
  447a6e:	add    al,0x0
  447a70:	adc    al,0x40
  447a72:	add    al,0x0
  447a74:	adc    al,0x40
  447a76:	add    al,0x0
  447a78:	adc    al,0x40
  447a7a:	add    al,0x0
  447a7c:	adc    al,0x40
  447a7e:	add    al,0x0
  447a80:	adc    al,0x40
  447a82:	add    al,0x0
  447a84:	adc    al,0x40
  447a86:	add    al,0x0
  447a88:	adc    al,0x40
  447a8a:	add    al,0x0
  447a8c:	adc    al,0x40
  447a8e:	add    al,0x0
  447a90:	adc    al,0x40
  447a92:	add    al,0x0
  447a94:	adc    al,0x40
  447a96:	add    al,0x0
  447a98:	adc    al,0x40
  447a9a:	add    al,0x0
  447a9c:	adc    al,0x40
  447a9e:	add    al,0x0
  447aa0:	adc    al,0x40
  447aa2:	add    al,0x0
  447aa4:	adc    al,0x40
  447aa6:	add    al,0x0
  447aa8:	adc    al,0x40
  447aaa:	add    al,0x0
  447aac:	adc    al,0x40
  447aae:	add    al,0x0
  447ab0:	adc    al,0x40
  447ab2:	add    al,0x0
  447ab4:	adc    al,0x40
  447ab6:	add    al,0x0
  447ab8:	adc    al,0x40
  447aba:	add    al,0x0
  447abc:	adc    al,0x40
  447abe:	add    al,0x0
  447ac0:	adc    al,0x40
  447ac2:	add    al,0x0
  447ac4:	adc    al,0x40
  447ac6:	add    al,0x0
  447ac8:	adc    al,0x40
  447aca:	add    al,0x0
  447acc:	adc    al,0x40
  447ace:	add    al,0x0
  447ad0:	adc    al,0x40
  447ad2:	add    al,0x0
  447ad4:	adc    al,0x40
  447ad6:	add    al,0x0
  447ad8:	adc    al,0x40
  447ada:	add    al,0x0
  447adc:	adc    al,0x40
  447ade:	add    al,0x0
  447ae0:	adc    al,0x40
  447ae2:	add    al,0x0
  447ae4:	adc    al,0x40
  447ae6:	add    al,0x0
  447ae8:	adc    al,0x40
  447aea:	add    al,0x0
  447aec:	adc    al,0x40
  447aee:	add    al,0x0
  447af0:	adc    al,0x40
  447af2:	add    al,0x0
  447af4:	adc    al,0x40
  447af6:	add    al,0x0
  447af8:	adc    al,0x40
  447afa:	add    al,0x0
  447afc:	adc    al,0x40
  447afe:	add    al,0x0
  447b00:	adc    al,0x40
  447b02:	add    al,0x0
  447b04:	adc    al,0x40
  447b06:	add    al,0x0
  447b08:	adc    al,0x40
  447b0a:	add    al,0x0
  447b0c:	adc    al,0x40
  447b0e:	add    al,0x0
  447b10:	adc    al,0x40
  447b12:	add    al,0x0
  447b14:	adc    al,0x40
  447b16:	add    al,0x0
  447b18:	adc    al,0x40
  447b1a:	add    al,0x0
  447b1c:	adc    al,0x40
  447b1e:	add    al,0x0
  447b20:	adc    al,0x40
  447b22:	add    al,0x0
  447b24:	adc    al,0x40
  447b26:	add    al,0x0
  447b28:	adc    al,0x40
  447b2a:	add    al,0x0
  447b2c:	adc    al,0x40
  447b2e:	add    al,0x0
  447b30:	adc    al,0x40
  447b32:	add    al,0x0
  447b34:	adc    al,0x40
  447b36:	add    al,0x0
  447b38:	adc    al,0x40
  447b3a:	add    al,0x0
  447b3c:	ins    DWORD PTR es:[rdi],dx
  447b3d:	jae    0x447bb5
  447b3f:	movsxd esi,DWORD PTR [rdx+0x74]
  447b42:	cs fs ins BYTE PTR es:[rdi],dx
  447b45:	ins    BYTE PTR es:[rdi],dx
  447b46:	add    BYTE PTR [rax],al
  447b48:	sub    BYTE PTR [rax+0x4],al
  447b4b:	add    BYTE PTR [rdi+0x6c],ch
  447b4e:	xor    esi,DWORD PTR gs:[rdx]
  447b51:	cs fs ins BYTE PTR es:[rdi],dx
  447b54:	ins    BYTE PTR es:[rdi],dx
  447b55:	add    BYTE PTR [rax],al
  447b57:	add    BYTE PTR [rax+rax*2],bh
  447b5a:	add    al,0x0
  447b5c:	push   rax
  447b5d:	push   rbx
  447b5e:	push   r8
  447b60:	rex.WB
  447b61:	cs rex.R
  447b63:	rex.WR
  447b64:	rex.WR add BYTE PTR [rax],r8b
  447b67:	add    BYTE PTR [rax+0x40],dl
  447b6a:	add    al,0x0
  447b6c:	push   rbx
  447b6d:	rex.W
  447b6e:	rex.RB
  447b6f:	rex.WR
  447b70:	xor    r14,QWORD PTR [rdx]
  447b73:	cs fs ins BYTE PTR es:[rdi],dx
  447b76:	ins    BYTE PTR es:[rdi],dx
  447b77:	add    BYTE PTR [rax+rax*2+0x4],ah
  447b7b:	add    BYTE PTR [rbp+0x53],dl
  447b7e:	rex.RB push r10
  447b80:	xor    esi,DWORD PTR [rdx]
  447b82:	cs fs ins BYTE PTR es:[rdi],dx
  447b85:	ins    BYTE PTR es:[rdi],dx
  447b86:	add    BYTE PTR [rax],al
  447b88:	js     0x447bca
  447b8a:	add    al,0x0
  447b8c:	js     0x447bce
  447b8e:	add    al,0x0
  447b90:	js     0x447bd2
  447b92:	add    al,0x0
  447b94:	js     0x447bd6
  447b96:	add    al,0x0
  447b98:	js     0x447bda
  447b9a:	add    al,0x0
  447b9c:	js     0x447bde
  447b9e:	add    al,0x0
  447ba0:	js     0x447be2
  447ba2:	add    al,0x0
  447ba4:	js     0x447be6
  447ba6:	add    al,0x0
  447ba8:	js     0x447bea
  447baa:	add    al,0x0
  447bac:	js     0x447bee
  447bae:	add    al,0x0
  447bb0:	js     0x447bf2
  447bb2:	add    al,0x0
  447bb4:	js     0x447bf6
  447bb6:	add    al,0x0
  447bb8:	js     0x447bfa
  447bba:	add    al,0x0
  447bbc:	js     0x447bfe
  447bbe:	add    al,0x0
  447bc0:	js     0x447c02
  447bc2:	add    al,0x0
  447bc4:	js     0x447c06
  447bc6:	add    al,0x0
  447bc8:	js     0x447c0a
  447bca:	add    al,0x0
  447bcc:	js     0x447c0e
  447bce:	add    al,0x0
  447bd0:	js     0x447c12
  447bd2:	add    al,0x0
  447bd4:	js     0x447c16
  447bd6:	add    al,0x0
  447bd8:	js     0x447c1a
  447bda:	add    al,0x0
  447bdc:	js     0x447c1e
  447bde:	add    al,0x0
  447be0:	js     0x447c22
  447be2:	add    al,0x0
  447be4:	js     0x447c26
  447be6:	add    al,0x0
  447be8:	js     0x447c2a
  447bea:	add    al,0x0
  447bec:	js     0x447c2e
  447bee:	add    al,0x0
  447bf0:	js     0x447c32
  447bf2:	add    al,0x0
  447bf4:	js     0x447c36
  447bf6:	add    al,0x0
  447bf8:	js     0x447c3a
  447bfa:	add    al,0x0
  447bfc:	js     0x447c3e
  447bfe:	add    al,0x0
  447c00:	js     0x447c42
  447c02:	add    al,0x0
  447c04:	js     0x447c46
  447c06:	add    al,0x0
  447c08:	js     0x447c4a
  447c0a:	add    al,0x0
  447c0c:	js     0x447c4e
  447c0e:	add    al,0x0
  447c10:	js     0x447c52
  447c12:	add    al,0x0
  447c14:	js     0x447c56
  447c16:	add    al,0x0
  447c18:	js     0x447c5a
  447c1a:	add    al,0x0
  447c1c:	js     0x447c5e
  447c1e:	add    al,0x0
  447c20:	js     0x447c62
  447c22:	add    al,0x0
  447c24:	js     0x447c66
  447c26:	add    al,0x0
  447c28:	js     0x447c6a
  447c2a:	add    al,0x0
  447c2c:	js     0x447c6e
  447c2e:	add    al,0x0
  447c30:	js     0x447c72
  447c32:	add    al,0x0
  447c34:	js     0x447c76
  447c36:	add    al,0x0
  447c38:	js     0x447c7a
  447c3a:	add    al,0x0
  447c3c:	js     0x447c7e
  447c3e:	add    al,0x0
  447c40:	js     0x447c82
  447c42:	add    al,0x0
  447c44:	js     0x447c86
  447c46:	add    al,0x0
  447c48:	js     0x447c8a
  447c4a:	add    al,0x0
  447c4c:	js     0x447c8e
  447c4e:	add    al,0x0
  447c50:	(bad)  
  447c51:	jbe    0x447cb6
  447c53:	outs   dx,DWORD PTR ds:[rsi]
  447c54:	fs movsxd ebp,DWORD PTR gs:[rip+0x642e3635]        # 0x6472b291
  447c5c:	ins    BYTE PTR es:[rdi],dx
  447c5d:	ins    BYTE PTR es:[rdi],dx
  447c5e:	add    BYTE PTR [rax],al
  447c60:	mov    WORD PTR [rax+0x4],es
  447c63:	add    BYTE PTR [rax+rax*2+0x408c0004],cl
  447c6a:	add    al,0x0
  447c6c:	mov    WORD PTR [rax+0x4],es
  447c6f:	add    BYTE PTR [rax+rax*2+0x408c0004],cl
  447c76:	add    al,0x0
  447c78:	mov    WORD PTR [rax+0x4],es
  447c7b:	add    BYTE PTR [rax+rax*2+0x408c0004],cl
  447c82:	add    al,0x0
  447c84:	mov    WORD PTR [rax+0x4],es
  447c87:	add    BYTE PTR [rcx+0x76],ah
  447c8a:	fs gs jbe 0x447cf7
  447c8e:	movsxd esp,DWORD PTR [rbp+0x2d]
  447c91:	xor    eax,0x6c642e36
  447c96:	ins    BYTE PTR es:[rdi],dx
  447c97:	add    BYTE PTR [rax-0x5ffffbc0],ah
  447c9d:	add    al,0x0
  447ca0:	movabs al,ds:0xa0000440a0000440
  447ca9:	add    al,0x0
  447cac:	movabs al,ds:0xa0000440a0000440
  447cb5:	add    al,0x0
  447cb8:	movabs al,ds:0xa0000440a0000440
  447cc1:	add    al,0x0
  447cc4:	movabs al,ds:0xa0000440a0000440
  447ccd:	add    al,0x0
  447cd0:	movabs al,ds:0xa0000440a0000440
  447cd9:	add    al,0x0
  447cdc:	movabs al,ds:0xa0000440a0000440
  447ce5:	add    al,0x0
  447ce8:	movabs al,ds:0xa0000440a0000440
  447cf1:	add    al,0x0
  447cf4:	movabs al,ds:0xa0000440a0000440
  447cfd:	add    al,0x0
  447d00:	movabs al,ds:0xa0000440a0000440
  447d09:	add    al,0x0
  447d0c:	(bad)  
  447d0d:	jbe    0x447d75
  447d0f:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x2e352d72
  447d17:	fs ins BYTE PTR es:[rdi],dx
  447d19:	ins    BYTE PTR es:[rdi],dx
  447d1a:	add    BYTE PTR [rax],al
  447d1c:	mov    ah,0x40
  447d1e:	add    al,0x0
  447d20:	mov    ah,0x40
  447d22:	add    al,0x0
  447d24:	mov    ah,0x40
  447d26:	add    al,0x0
  447d28:	mov    ah,0x40
  447d2a:	add    al,0x0
  447d2c:	mov    ah,0x40
  447d2e:	add    al,0x0
  447d30:	mov    ah,0x40
  447d32:	add    al,0x0
  447d34:	mov    ah,0x40
  447d36:	add    al,0x0
  447d38:	mov    ah,0x40
  447d3a:	add    al,0x0
  447d3c:	mov    ah,0x40
  447d3e:	add    al,0x0
  447d40:	mov    ah,0x40
  447d42:	add    al,0x0
  447d44:	mov    ah,0x40
  447d46:	add    al,0x0
  447d48:	mov    ah,0x40
  447d4a:	add    al,0x0
  447d4c:	mov    ah,0x40
  447d4e:	add    al,0x0
  447d50:	mov    ah,0x40
  447d52:	add    al,0x0
  447d54:	mov    ah,0x40
  447d56:	add    al,0x0
  447d58:	mov    ah,0x40
  447d5a:	add    al,0x0
  447d5c:	mov    ah,0x40
  447d5e:	add    al,0x0
  447d60:	mov    ah,0x40
  447d62:	add    al,0x0
  447d64:	mov    ah,0x40
  447d66:	add    al,0x0
  447d68:	mov    ah,0x40
  447d6a:	add    al,0x0
  447d6c:	mov    ah,0x40
  447d6e:	add    al,0x0
  447d70:	mov    ah,0x40
  447d72:	add    al,0x0
  447d74:	mov    ah,0x40
  447d76:	add    al,0x0
  447d78:	mov    ah,0x40
  447d7a:	add    al,0x0
  447d7c:	mov    ah,0x40
  447d7e:	add    al,0x0
  447d80:	mov    ah,0x40
  447d82:	add    al,0x0
  447d84:	mov    ah,0x40
  447d86:	add    al,0x0
  447d88:	mov    ah,0x40
  447d8a:	add    al,0x0
  447d8c:	mov    ah,0x40
  447d8e:	add    al,0x0
  447d90:	mov    ah,0x40
  447d92:	add    al,0x0
  447d94:	mov    ah,0x40
  447d96:	add    al,0x0
  447d98:	mov    ah,0x40
  447d9a:	add    al,0x0
  447d9c:	mov    ah,0x40
  447d9e:	add    al,0x0
  447da0:	mov    ah,0x40
  447da2:	add    al,0x0
  447da4:	mov    ah,0x40
  447da6:	add    al,0x0
  447da8:	mov    ah,0x40
  447daa:	add    al,0x0
  447dac:	mov    ah,0x40
  447dae:	add    al,0x0
  447db0:	mov    ah,0x40
  447db2:	add    al,0x0
  447db4:	mov    ah,0x40
  447db6:	add    al,0x0
  447db8:	mov    ah,0x40
  447dba:	add    al,0x0
  447dbc:	mov    ah,0x40
  447dbe:	add    al,0x0
  447dc0:	mov    ah,0x40
  447dc2:	add    al,0x0
  447dc4:	mov    ah,0x40
  447dc6:	add    al,0x0
  447dc8:	mov    ah,0x40
  447dca:	add    al,0x0
  447dcc:	mov    ah,0x40
  447dce:	add    al,0x0
  447dd0:	mov    ah,0x40
  447dd2:	add    al,0x0
  447dd4:	mov    ah,0x40
  447dd6:	add    al,0x0
  447dd8:	mov    ah,0x40
  447dda:	add    al,0x0
  447ddc:	mov    ah,0x40
  447dde:	add    al,0x0
  447de0:	mov    ah,0x40
  447de2:	add    al,0x0
  447de4:	mov    ah,0x40
  447de6:	add    al,0x0
  447de8:	mov    ah,0x40
  447dea:	add    al,0x0
  447dec:	mov    ah,0x40
  447dee:	add    al,0x0
  447df0:	mov    ah,0x40
  447df2:	add    al,0x0
  447df4:	mov    ah,0x40
  447df6:	add    al,0x0
  447df8:	mov    ah,0x40
  447dfa:	add    al,0x0
  447dfc:	mov    ah,0x40
  447dfe:	add    al,0x0
  447e00:	(bad)  
  447e01:	jbe    0x447e69
  447e03:	outs   dx,DWORD PTR ds:[rsi]
  447e04:	jb     0x447e73
  447e06:	(bad)  
  447e07:	je     0x447e36
  447e09:	xor    eax,0x6c642e36
  447e0e:	ins    BYTE PTR es:[rdi],dx
  447e0f:	add    al,cl
  447e11:	add    al,0x0
  447e14:	enter  0x440,0x0
  447e18:	enter  0x440,0x0
  447e1c:	(bad)  
  447e1d:	jbe    0x447e91
  447e1f:	gs jae 0x447e83
  447e22:	ins    DWORD PTR es:[rdi],dx
  447e23:	jo     0x447e91
  447e25:	gs sub eax,0x6c642e32
  447e2b:	ins    BYTE PTR es:[rdi],dx
  447e2c:	add    BYTE PTR [rax],al
  447e2e:	add    BYTE PTR [rax],al
  447e30:	fadd   QWORD PTR [rax+0x4]
  447e33:	add    ah,bl
  447e35:	add    al,0x0
  447e38:	fadd   QWORD PTR [rax+0x4]
  447e3b:	add    ah,bl
  447e3d:	add    al,0x0
  447e40:	fadd   QWORD PTR [rax+0x4]
  447e43:	add    ah,bl
  447e45:	add    al,0x0
  447e48:	fadd   QWORD PTR [rax+0x4]
  447e4b:	add    ah,bl
  447e4d:	add    al,0x0
  447e50:	fadd   QWORD PTR [rax+0x4]
  447e53:	add    ah,bl
  447e55:	add    al,0x0
  447e58:	fadd   QWORD PTR [rax+0x4]
  447e5b:	add    ah,bl
  447e5d:	add    al,0x0
  447e60:	fadd   QWORD PTR [rax+0x4]
  447e63:	add    ah,bl
  447e65:	add    al,0x0
  447e68:	fadd   QWORD PTR [rax+0x4]
  447e6b:	add    ah,bl
  447e6d:	add    al,0x0
  447e70:	fadd   QWORD PTR [rax+0x4]
  447e73:	add    ah,bl
  447e75:	add    al,0x0
  447e78:	fadd   QWORD PTR [rax+0x4]
  447e7b:	add    ah,bl
  447e7d:	add    al,0x0
  447e80:	fadd   QWORD PTR [rax+0x4]
  447e83:	add    ah,bl
  447e85:	add    al,0x0
  447e88:	fadd   QWORD PTR [rax+0x4]
  447e8b:	add    ah,bl
  447e8d:	add    al,0x0
  447e90:	fadd   QWORD PTR [rax+0x4]
  447e93:	add    ah,bl
  447e95:	add    al,0x0
  447e98:	fadd   QWORD PTR [rax+0x4]
  447e9b:	add    ah,bl
  447e9d:	add    al,0x0
  447ea0:	fadd   QWORD PTR [rax+0x4]
  447ea3:	add    ah,bl
  447ea5:	add    al,0x0
  447ea8:	fadd   QWORD PTR [rax+0x4]
  447eab:	add    ah,bl
  447ead:	add    al,0x0
  447eb0:	fadd   QWORD PTR [rax+0x4]
  447eb3:	add    ah,bl
  447eb5:	add    al,0x0
  447eb8:	fadd   QWORD PTR [rax+0x4]
  447ebb:	add    ah,bl
  447ebd:	add    al,0x0
  447ec0:	fadd   QWORD PTR [rax+0x4]
  447ec3:	add    ah,bl
  447ec5:	add    al,0x0
  447ec8:	fadd   QWORD PTR [rax+0x4]
  447ecb:	add    ah,bl
  447ecd:	add    al,0x0
  447ed0:	fadd   QWORD PTR [rax+0x4]
  447ed3:	add    ah,bl
  447ed5:	add    al,0x0
  447ed8:	fadd   QWORD PTR [rax+0x4]
  447edb:	add    ah,bl
  447edd:	add    al,0x0
  447ee0:	fadd   QWORD PTR [rax+0x4]
  447ee3:	add    ah,bl
  447ee5:	add    al,0x0
  447ee8:	fadd   QWORD PTR [rax+0x4]
  447eeb:	add    ah,bl
  447eed:	add    al,0x0
  447ef0:	fadd   QWORD PTR [rax+0x4]
  447ef3:	add    ah,bl
  447ef5:	add    al,0x0
  447ef8:	fadd   QWORD PTR [rax+0x4]
  447efb:	add    ah,bl
  447efd:	add    al,0x0
  447f00:	fadd   QWORD PTR [rax+0x4]
  447f03:	add    ah,bl
  447f05:	add    al,0x0
  447f08:	fadd   QWORD PTR [rax+0x4]
  447f0b:	add    ah,bl
  447f0d:	add    al,0x0
  447f10:	fadd   QWORD PTR [rax+0x4]
  447f13:	add    ah,bl
  447f15:	add    al,0x0
  447f18:	fadd   QWORD PTR [rax+0x4]
  447f1b:	add    ah,bl
  447f1d:	add    al,0x0
  447f20:	fadd   QWORD PTR [rax+0x4]
  447f23:	add    ah,bl
  447f25:	add    al,0x0
  447f28:	fadd   QWORD PTR [rax+0x4]
  447f2b:	add    ah,bl
  447f2d:	add    al,0x0
  447f30:	fadd   QWORD PTR [rax+0x4]
  447f33:	add    ah,bl
  447f35:	add    al,0x0
  447f38:	fadd   QWORD PTR [rax+0x4]
  447f3b:	add    ah,bl
  447f3d:	add    al,0x0
  447f40:	fadd   QWORD PTR [rax+0x4]
  447f43:	add    ah,bl
  447f45:	add    al,0x0
  447f48:	fadd   QWORD PTR [rax+0x4]
  447f4b:	add    ah,bl
  447f4d:	add    al,0x0
  447f50:	fadd   QWORD PTR [rax+0x4]
  447f53:	add    ah,bl
  447f55:	add    al,0x0
  447f58:	fadd   QWORD PTR [rax+0x4]
  447f5b:	add    ah,bl
  447f5d:	add    al,0x0
  447f60:	fadd   QWORD PTR [rax+0x4]
  447f63:	add    ah,bl
  447f65:	add    al,0x0
  447f68:	fadd   QWORD PTR [rax+0x4]
  447f6b:	add    ah,bl
  447f6d:	add    al,0x0
  447f70:	fadd   QWORD PTR [rax+0x4]
  447f73:	add    ah,bl
  447f75:	add    al,0x0
  447f78:	fadd   QWORD PTR [rax+0x4]
  447f7b:	add    ah,bl
  447f7d:	add    al,0x0
  447f80:	fadd   QWORD PTR [rax+0x4]
  447f83:	add    ah,bl
  447f85:	add    al,0x0
  447f88:	fadd   QWORD PTR [rax+0x4]
  447f8b:	add    ah,bl
  447f8d:	add    al,0x0
  447f90:	fadd   QWORD PTR [rax+0x4]
  447f93:	add    ah,bl
  447f95:	add    al,0x0
  447f98:	fadd   QWORD PTR [rax+0x4]
  447f9b:	add    ah,bl
  447f9d:	add    al,0x0
  447fa0:	fadd   QWORD PTR [rax+0x4]
  447fa3:	add    ah,bl
  447fa5:	add    al,0x0
  447fa8:	fadd   QWORD PTR [rax+0x4]
  447fab:	add    ah,bl
  447fad:	add    al,0x0
  447fb0:	fadd   QWORD PTR [rax+0x4]
  447fb3:	add    ah,bl
  447fb5:	add    al,0x0
  447fb8:	fadd   QWORD PTR [rax+0x4]
  447fbb:	add    ah,bl
  447fbd:	add    al,0x0
  447fc0:	fadd   QWORD PTR [rax+0x4]
  447fc3:	add    ah,bl
  447fc5:	add    al,0x0
  447fc8:	fadd   QWORD PTR [rax+0x4]
  447fcb:	add    ah,bl
  447fcd:	add    al,0x0
  447fd0:	fadd   QWORD PTR [rax+0x4]
  447fd3:	add    ah,bl
  447fd5:	add    al,0x0
  447fd8:	fadd   QWORD PTR [rax+0x4]
  447fdb:	add    ah,bl
  447fdd:	add    al,0x0
  447fe0:	(bad)  
  447fe1:	jbe    0x448058
  447fe3:	je     0x44804e
  447fe5:	ins    BYTE PTR es:[rdi],dx
  447fe6:	sub    eax,0x642e3435
  447feb:	ins    BYTE PTR es:[rdi],dx
  447fec:	ins    BYTE PTR es:[rdi],dx
  447fed:	add    BYTE PTR [rax],al
  447fef:	add    al,dh
  447ff1:	add    al,0x0
  447ff4:	lock add al,0x0
  447ff8:	jo     0x448069
  447ffa:	jae    0x448070
  447ffc:	jo     0x448070
  447ffe:	outs   dx,DWORD PTR ds:[rsi]
  447fff:	movsxd ebp,DWORD PTR [rip+0x642e3335]        # 0x6472b33a
  448005:	ins    BYTE PTR es:[rdi],dx
  448006:	ins    BYTE PTR es:[rdi],dx
  448007:	add    BYTE PTR [rcx+rax*2],al
  44800a:	add    al,0x0
  44800c:	add    al,0x41
  44800e:	add    al,0x0
  448010:	add    al,0x41
  448012:	add    al,0x0
  448014:	add    al,0x41
  448016:	add    al,0x0
  448018:	add    al,0x41
  44801a:	add    al,0x0
  44801c:	jae    0x448095
  44801e:	jb     0x448085
  448020:	jae    0x448083
  448022:	ins    DWORD PTR es:[rdi],dx
  448023:	jo     0x448091
  448025:	gs sub eax,0x6c642e31
  44802b:	ins    BYTE PTR es:[rdi],dx
  44802c:	add    BYTE PTR [rax],al
  44802e:	add    BYTE PTR [rax],al
  448030:	sbb    BYTE PTR [rcx+0x4],al
  448033:	add    BYTE PTR [rax],bl
  448035:	rex.B add al,0x0
  448038:	sbb    BYTE PTR [rcx+0x4],al
  44803b:	add    BYTE PTR [rax],bl
  44803d:	rex.B add al,0x0
  448040:	sbb    BYTE PTR [rcx+0x4],al
  448043:	add    BYTE PTR [rax],bl
  448045:	rex.B add al,0x0
  448048:	sbb    BYTE PTR [rcx+0x4],al
  44804b:	add    BYTE PTR [rbx+0x77],dh
  44804e:	jae    0x4480b3
  448050:	(bad)  
  448051:	ins    BYTE PTR es:[rdi],dx
  448052:	gs sub eax,0x6c642e33
  448058:	ins    BYTE PTR es:[rdi],dx
  448059:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000449000 <.CRT>:
	...
  449008:	(bad)  
  449009:	adc    DWORD PTR [rax+0x0],eax
	...
  449020:	adc    BYTE PTR [rax],dl
  449022:	add    BYTE PTR [rax],al
  449025:	add    BYTE PTR [rax],al
  449027:	add    BYTE PTR [rax],dh
  449029:	sub    al,BYTE PTR [rdx+0x0]
	...
  449040:	(bad)  
  449041:	sub    al,0x42
  449043:	add    BYTE PTR [rax],al
  449045:	add    BYTE PTR [rax],al
  449047:	add    BYTE PTR [rax],dh
  449049:	sub    al,0x42
	...

Disassembly of section .tls:

000000000044a000 <.tls>:
	...
  44a020:	add    BYTE PTR [rax+0x44],ah
  44a026:	add    BYTE PTR [rax],al
  44a028:	(bad)  
  44a029:	movabs al,ds:0x289c000000000044
  44a032:	add    BYTE PTR [rax],r8b
  44a035:	add    BYTE PTR [rax],al
  44a037:	add    BYTE PTR [rax-0x70],al
  44a03a:	add    BYTE PTR [rax],r8b
	...
