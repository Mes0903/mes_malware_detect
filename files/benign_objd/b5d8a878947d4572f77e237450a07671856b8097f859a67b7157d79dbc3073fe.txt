
b5d8a878947d4572f77e237450a07671856b8097f859a67b7157d79dbc3073fe.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0x5285]        # 0x140006310
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	sub    rsp,0x48
   1400010e0:	mov    r8d,edx
   1400010e3:	lea    rax,[rip+0x6e86]        # 0x140007f70
   1400010ea:	sub    r8d,eax
   1400010ed:	mov    r10,rcx
   1400010f0:	mov    al,BYTE PTR [rip+0x713a]        # 0x140008230
   1400010f6:	xor    r9d,r9d
   1400010f9:	movzx  eax,BYTE PTR [rdx]
   1400010fc:	shl    eax,0x18
   1400010ff:	or     eax,r8d
   140001102:	lea    r8,[rdx+0x1]
   140001106:	mov    rdx,QWORD PTR [rsp+0x78]
   14000110b:	mov    DWORD PTR [rsp+0x30],eax
   14000110f:	movzx  eax,WORD PTR [r8]
   140001113:	mov    DWORD PTR [rsp+0x34],eax
   140001117:	mov    eax,DWORD PTR [r8+0x2]
   14000111b:	mov    DWORD PTR [rsp+0x38],eax
   14000111f:	mov    eax,DWORD PTR [r8+0x6]
   140001123:	add    r8,0xa
   140001127:	mov    DWORD PTR [rsp+0x3c],eax
   14000112b:	mov    rax,QWORD PTR [rcx+0x8]
   14000112f:	mov    QWORD PTR [rdx],rax
   140001132:	mov    rax,QWORD PTR [rcx+0x8]
   140001136:	mov    QWORD PTR [rsp+0x28],rdx
   14000113b:	movzx  ecx,WORD PTR [rax]
   14000113e:	mov    QWORD PTR [rdx+0x10],r8
   140001142:	mov    DWORD PTR [rdx+0x8],ecx
   140001145:	mov    DWORD PTR [rdx+0xc],0x2
   14000114c:	movzx  eax,WORD PTR [r8]
   140001150:	xor    r8d,r8d
   140001153:	mov    DWORD PTR [rdx+0x18],eax
   140001156:	mov    eax,DWORD PTR [rsp+0x70]
   14000115a:	mov    DWORD PTR [rdx+0x1c],0x1
   140001161:	lea    rdx,[rsp+0x30]
   140001166:	mov    rcx,QWORD PTR [r10+0x20]
   14000116a:	mov    DWORD PTR [rsp+0x20],eax
   14000116e:	call   QWORD PTR [rip+0x4eb4]        # 0x140006028
   140001174:	add    rsp,0x48
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x459]        # 0x1400015e0
   140001187:	mov    QWORD PTR [rip+0x960a],rax        # 0x14000a798
   14000118e:	lea    rax,[rip+0x55b]        # 0x1400016f0
   140001195:	mov    QWORD PTR [rip+0x95ec],rax        # 0x14000a788
   14000119c:	lea    rax,[rip+0x59d]        # 0x140001740
   1400011a3:	mov    QWORD PTR [rip+0x95e6],rax        # 0x14000a790
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	xor    edx,edx
   1400011b6:	lea    rcx,[rip+0x96a3]        # 0x14000a860
   1400011bd:	mov    r8d,0xa0
   1400011c3:	call   0x140004fd6
   1400011c8:	lea    rcx,[rip+0x3fc1]        # 0x140005190
   1400011cf:	add    rsp,0x28
   1400011d3:	jmp    0x140003fd8
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x40b9]        # 0x1400052a0
   1400011e7:	jmp    0x140003fd8
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	lea    rcx,[rip+0x40c9]        # 0x1400052c0
   1400011f7:	jmp    0x140003fd8
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    rcx,[rip+0x40d9]        # 0x1400052e0
   140001207:	jmp    0x140003fd8
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	mov    QWORD PTR [rsp+0x8],rbx
   14000121d:	xor    ebx,ebx
   14000121f:	lea    rax,[rdx-0x1]
   140001223:	mov    r10d,0x7ffffffe
   140001229:	mov    r9d,ebx
   14000122c:	cmp    rax,r10
   14000122f:	mov    r11d,0x80070057
   140001235:	cmova  r9d,r11d
   140001239:	test   r9d,r9d
   14000123c:	js     0x14000127d
   14000123e:	mov    r9d,ebx
   140001241:	test   rdx,rdx
   140001244:	je     0x140001271
   140001246:	sub    r10,rdx
   140001249:	sub    r8,rcx
   14000124c:	lea    rax,[r10+rdx*1]
   140001250:	test   rax,rax
   140001253:	je     0x14000126c
   140001255:	movzx  eax,WORD PTR [r8+rcx*1]
   14000125a:	test   ax,ax
   14000125d:	je     0x14000126c
   14000125f:	mov    WORD PTR [rcx],ax
   140001262:	add    rcx,0x2
   140001266:	sub    rdx,0x1
   14000126a:	jne    0x14000124c
   14000126c:	test   rdx,rdx
   14000126f:	jne    0x140001282
   140001271:	sub    rcx,0x2
   140001275:	mov    r9d,0x8007007a
   14000127b:	jmp    0x140001282
   14000127d:	test   rdx,rdx
   140001280:	je     0x140001285
   140001282:	mov    WORD PTR [rcx],bx
   140001285:	mov    rbx,QWORD PTR [rsp+0x8]
   14000128a:	mov    eax,r9d
   14000128d:	ret    
   14000128e:	int3   
   14000128f:	int3   
   140001290:	int3   
   140001291:	int3   
   140001292:	int3   
   140001293:	int3   
   140001294:	mov    QWORD PTR [rsp+0x18],r8
   140001299:	mov    QWORD PTR [rsp+0x20],r9
   14000129e:	push   rbx
   14000129f:	push   rsi
   1400012a0:	push   rdi
   1400012a1:	sub    rsp,0x20
   1400012a5:	mov    r10,rdx
   1400012a8:	lea    r9,[rsp+0x58]
   1400012ad:	sub    r10,rcx
   1400012b0:	mov    rsi,rdx
   1400012b3:	sar    r10,1
   1400012b6:	mov    rbx,rcx
   1400012b9:	lea    rax,[r10-0x1]
   1400012bd:	cmp    rax,0x7ffffffe
   1400012c3:	ja     0x1400012e7
   1400012c5:	lea    rdi,[r10-0x1]
   1400012c9:	mov    rdx,rdi
   1400012cc:	call   QWORD PTR [rip+0x4f5e]        # 0x140006230
   1400012d2:	xor    ecx,ecx
   1400012d4:	test   eax,eax
   1400012d6:	js     0x1400012e1
   1400012d8:	cdqe   
   1400012da:	cmp    rax,rdi
   1400012dd:	ja     0x1400012e1
   1400012df:	jne    0x1400012f1
   1400012e1:	mov    WORD PTR [rbx+rdi*2],cx
   1400012e5:	jmp    0x1400012f1
   1400012e7:	xor    ecx,ecx
   1400012e9:	test   r10,r10
   1400012ec:	je     0x1400012f1
   1400012ee:	mov    WORD PTR [rbx],cx
   1400012f1:	cmp    rsi,rbx
   1400012f4:	je     0x140001307
   1400012f6:	or     rax,0xffffffffffffffff
   1400012fa:	inc    rax
   1400012fd:	cmp    WORD PTR [rbx+rax*2],cx
   140001301:	jne    0x1400012fa
   140001303:	lea    rbx,[rbx+rax*2]
   140001307:	mov    rax,rbx
   14000130a:	add    rsp,0x20
   14000130e:	pop    rdi
   14000130f:	pop    rsi
   140001310:	pop    rbx
   140001311:	ret    
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	mov    QWORD PTR [rsp+0x20],rbx
   14000131d:	push   rbp
   14000131e:	push   rsi
   14000131f:	push   rdi
   140001320:	push   r14
   140001322:	push   r15
   140001324:	sub    rsp,0x250
   14000132b:	mov    rax,QWORD PTR [rip+0x8cd6]        # 0x14000a008
   140001332:	xor    rax,rsp
   140001335:	mov    QWORD PTR [rsp+0x240],rax
   14000133d:	mov    r14,rcx
   140001340:	lea    rsi,[rip+0x65f5]        # 0x14000793c
   140001347:	mov    ecx,DWORD PTR [r8]
   14000134a:	xor    r15d,r15d
   14000134d:	mov    rbx,r8
   140001350:	mov    rdi,rdx
   140001353:	test   ecx,ecx
   140001355:	je     0x14000138f
   140001357:	sub    ecx,0x1
   14000135a:	je     0x140001386
   14000135c:	sub    ecx,0x1
   14000135f:	je     0x14000137d
   140001361:	sub    ecx,0x1
   140001364:	je     0x140001374
   140001366:	cmp    ecx,0x1
   140001369:	jne    0x140001396
   14000136b:	lea    rsi,[rip+0x6616]        # 0x140007988
   140001372:	jmp    0x140001396
   140001374:	lea    rsi,[rip+0x6605]        # 0x140007980
   14000137b:	jmp    0x140001396
   14000137d:	lea    rsi,[rip+0x65e4]        # 0x140007968
   140001384:	jmp    0x140001396
   140001386:	lea    rsi,[rip+0x65cb]        # 0x140007958
   14000138d:	jmp    0x140001396
   14000138f:	lea    rsi,[rip+0x65b2]        # 0x140007948
   140001396:	mov    r8d,DWORD PTR [r8+0x4]
   14000139a:	lea    rax,[rsp+0x40]
   14000139f:	mov    QWORD PTR [rsp+0x30],r15
   1400013a4:	mov    r9d,0x400
   1400013aa:	mov    DWORD PTR [rsp+0x28],0x100
   1400013b2:	xor    edx,edx
   1400013b4:	mov    ecx,0x1200
   1400013b9:	mov    QWORD PTR [rsp+0x20],rax
   1400013be:	mov    WORD PTR [rsp+0x40],r15w
   1400013c4:	call   QWORD PTR [rip+0x4cbe]        # 0x140006088
   1400013ca:	mov    r9,QWORD PTR [rbx+0x30]
   1400013ce:	lea    rdi,[r14+rdi*2]
   1400013d2:	mov    rax,QWORD PTR [rbx+0x80]
   1400013d9:	mov    rdx,rdi
   1400013dc:	mov    rcx,r14
   1400013df:	test   r9,r9
   1400013e2:	je     0x140001407
   1400013e4:	mov    QWORD PTR [rsp+0x30],rax
   1400013e9:	lea    r8,[rip+0x65a8]        # 0x140007998
   1400013f0:	mov    rax,QWORD PTR [rbx+0x78]
   1400013f4:	mov    QWORD PTR [rsp+0x28],rax
   1400013f9:	mov    eax,DWORD PTR [rbx+0x38]
   1400013fc:	mov    DWORD PTR [rsp+0x20],eax
   140001400:	call   0x140001294
   140001405:	jmp    0x14000141c
   140001407:	mov    r9,QWORD PTR [rbx+0x78]
   14000140b:	lea    r8,[rip+0x65ae]        # 0x1400079c0
   140001412:	mov    QWORD PTR [rsp+0x20],rax
   140001417:	call   0x140001294
   14000141c:	mov    r9,QWORD PTR [rbx+0x88]
   140001423:	mov    rbp,rax
   140001426:	test   r9,r9
   140001429:	je     0x140001440
   14000142b:	lea    r8,[rip+0x65a6]        # 0x1400079d8
   140001432:	mov    rdx,rdi
   140001435:	mov    rcx,rax
   140001438:	call   0x140001294
   14000143d:	mov    rbp,rax
   140001440:	call   QWORD PTR [rip+0x4c6a]        # 0x1400060b0
   140001446:	lea    rcx,[rsp+0x40]
   14000144b:	mov    r9,rsi
   14000144e:	mov    QWORD PTR [rsp+0x38],rcx
   140001453:	lea    r8,[rip+0x659e]        # 0x1400079f8
   14000145a:	mov    ecx,DWORD PTR [rbx+0x4]
   14000145d:	mov    rdx,rdi
   140001460:	mov    DWORD PTR [rsp+0x30],ecx
   140001464:	mov    rcx,rbp
   140001467:	mov    DWORD PTR [rsp+0x28],eax
   14000146b:	mov    eax,DWORD PTR [rbx+0x3c]
   14000146e:	mov    DWORD PTR [rsp+0x20],eax
   140001472:	call   0x140001294
   140001477:	cmp    QWORD PTR [rbx+0x10],r15
   14000147b:	jne    0x14000148d
   14000147d:	cmp    QWORD PTR [rbx+0x40],r15
   140001481:	jne    0x14000148d
   140001483:	cmp    QWORD PTR [rbx+0x28],r15
   140001487:	je     0x14000151d
   14000148d:	lea    r8,[rip+0x659c]        # 0x140007a30
   140001494:	mov    rdx,rdi
   140001497:	mov    rcx,rax
   14000149a:	call   0x140001294
   14000149f:	mov    r9,QWORD PTR [rbx+0x10]
   1400014a3:	test   r9,r9
   1400014a6:	je     0x1400014ba
   1400014a8:	lea    r8,[rip+0x6591]        # 0x140007a40
   1400014af:	mov    rdx,rdi
   1400014b2:	mov    rcx,rax
   1400014b5:	call   0x140001294
   1400014ba:	mov    r9,QWORD PTR [rbx+0x40]
   1400014be:	test   r9,r9
   1400014c1:	je     0x1400014d5
   1400014c3:	lea    r8,[rip+0x658e]        # 0x140007a58
   1400014ca:	mov    rdx,rdi
   1400014cd:	mov    rcx,rax
   1400014d0:	call   0x140001294
   1400014d5:	mov    rcx,QWORD PTR [rbx+0x20]
   1400014d9:	mov    rdx,rdi
   1400014dc:	mov    r9,QWORD PTR [rbx+0x28]
   1400014e0:	test   rcx,rcx
   1400014e3:	je     0x1400014fb
   1400014e5:	mov    QWORD PTR [rsp+0x20],rcx
   1400014ea:	lea    r8,[rip+0x658f]        # 0x140007a80
   1400014f1:	mov    rcx,rax
   1400014f4:	call   0x140001294
   1400014f9:	jmp    0x14000151d
   1400014fb:	mov    rcx,rax
   1400014fe:	test   r9,r9
   140001501:	je     0x140001511
   140001503:	lea    r8,[rip+0x658e]        # 0x140007a98
   14000150a:	call   0x140001294
   14000150f:	jmp    0x14000151d
   140001511:	lea    r8,[rip+0x6590]        # 0x140007aa8
   140001518:	call   0x140001294
   14000151d:	xor    eax,eax
   14000151f:	mov    rcx,QWORD PTR [rsp+0x240]
   140001527:	xor    rcx,rsp
   14000152a:	call   0x140003f10
   14000152f:	mov    rbx,QWORD PTR [rsp+0x298]
   140001537:	add    rsp,0x250
   14000153e:	pop    r15
   140001540:	pop    r14
   140001542:	pop    rdi
   140001543:	pop    rsi
   140001544:	pop    rbp
   140001545:	ret    
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	mov    DWORD PTR [rip+0x928e],ecx        # 0x14000a7e0
   140001552:	mov    eax,0x1
   140001557:	lock xadd DWORD PTR [rip+0x9261],eax        # 0x14000a7c0
   14000155f:	inc    eax
   140001561:	ret    
   140001562:	int3   
   140001563:	int3   
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	mov    DWORD PTR [rip+0x91ee],ecx        # 0x14000a75c
   14000156e:	mov    eax,0x1
   140001573:	lock xadd DWORD PTR [rip+0x9255],eax        # 0x14000a7d0
   14000157b:	inc    eax
   14000157d:	ret    
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	mov    DWORD PTR [rip+0x924e],ecx        # 0x14000a7d8
   14000158a:	mov    eax,0x1
   14000158f:	lock xadd DWORD PTR [rip+0x91cd],eax        # 0x14000a764
   140001597:	inc    eax
   140001599:	ret    
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    DWORD PTR [rip+0x91ba],ecx        # 0x14000a760
   1400015a6:	mov    eax,0x1
   1400015ab:	lock xadd DWORD PTR [rip+0x91b5],eax        # 0x14000a768
   1400015b3:	inc    eax
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    DWORD PTR [rip+0x91ea],ecx        # 0x14000a7b0
   1400015c6:	mov    eax,0x1
   1400015cb:	ret    
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	int3   
   1400015d1:	int3   
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	int3   
   1400015d5:	int3   
   1400015d6:	int3   
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015e5:	push   rsi
   1400015e6:	sub    rsp,0x150
   1400015ed:	mov    rax,QWORD PTR [rip+0x8a14]        # 0x14000a008
   1400015f4:	xor    rax,rsp
   1400015f7:	mov    QWORD PTR [rsp+0x140],rax
   1400015ff:	mov    al,BYTE PTR [rip+0x91d7]        # 0x14000a7dc
   140001605:	lea    rsi,[rip+0x9214]        # 0x14000a820
   14000160c:	test   al,al
   14000160e:	jne    0x1400016c4
   140001614:	mov    ebx,0x40
   140001619:	xor    edx,edx
   14000161b:	mov    r8d,ebx
   14000161e:	mov    rcx,rsi
   140001621:	call   0x140004fd6
   140001626:	and    QWORD PTR [rsp+0x20],0x0
   14000162c:	lea    r8,[rsp+0x20]
   140001631:	lea    rdx,[rip+0xffffffffffffff88]        # 0x1400015c0
   140001638:	lea    ecx,[rbx-0x3a]
   14000163b:	call   QWORD PTR [rip+0x4a1f]        # 0x140006060
   140001641:	test   eax,eax
   140001643:	je     0x1400016bd
   140001645:	mov    rcx,QWORD PTR [rsp+0x20]
   14000164a:	lea    rdx,[rsp+0x30]
   14000164f:	mov    r8d,0x104
   140001655:	call   QWORD PTR [rip+0x4a4d]        # 0x1400060a8
   14000165b:	test   eax,eax
   14000165d:	je     0x1400016bd
   14000165f:	lea    rcx,[rsp+0x30]
   140001664:	or     rax,0xffffffffffffffff
   140001668:	inc    rax
   14000166b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000166f:	jne    0x140001668
   140001671:	lea    rdx,[rsp+0x30]
   140001676:	add    rdx,rax
   140001679:	jmp    0x140001684
   14000167b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000167f:	je     0x14000168e
   140001681:	dec    rdx
   140001684:	lea    rax,[rsp+0x30]
   140001689:	cmp    rdx,rax
   14000168c:	ja     0x14000167b
   14000168e:	mov    rcx,rsi
   140001691:	sub    rdx,rsi
   140001694:	lea    rax,[rbx+0x7fffffbe]
   14000169b:	test   rax,rax
   14000169e:	je     0x1400016b2
   1400016a0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400016a3:	test   al,al
   1400016a5:	je     0x1400016b2
   1400016a7:	mov    BYTE PTR [rcx],al
   1400016a9:	inc    rcx
   1400016ac:	sub    rbx,0x1
   1400016b0:	jne    0x140001694
   1400016b2:	test   rbx,rbx
   1400016b5:	jne    0x1400016ba
   1400016b7:	dec    rcx
   1400016ba:	mov    BYTE PTR [rcx],0x0
   1400016bd:	mov    BYTE PTR [rip+0x9118],0x1        # 0x14000a7dc
   1400016c4:	mov    rax,rsi
   1400016c7:	mov    rcx,QWORD PTR [rsp+0x140]
   1400016cf:	xor    rcx,rsp
   1400016d2:	call   0x140003f10
   1400016d7:	mov    rbx,QWORD PTR [rsp+0x160]
   1400016df:	add    rsp,0x150
   1400016e6:	pop    rsi
   1400016e7:	ret    
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	rex push rbx
   1400016f2:	sub    rsp,0x20
   1400016f6:	lea    rcx,[rip+0x63b3]        # 0x140007ab0
   1400016fd:	call   QWORD PTR [rip+0x496d]        # 0x140006070
   140001703:	test   rax,rax
   140001706:	je     0x14000172b
   140001708:	lea    rdx,[rip+0x63b9]        # 0x140007ac8
   14000170f:	mov    rcx,rax
   140001712:	call   QWORD PTR [rip+0x4988]        # 0x1400060a0
   140001718:	mov    rbx,rax
   14000171b:	test   rax,rax
   14000171e:	je     0x14000172b
   140001720:	mov    rcx,rax
   140001723:	call   QWORD PTR [rip+0x4be7]        # 0x140006310
   140001729:	call   rbx
   14000172b:	add    rsp,0x20
   14000172f:	pop    rbx
   140001730:	ret    
   140001731:	int3   
   140001732:	int3   
   140001733:	int3   
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    QWORD PTR [rsp+0x8],rbx
   140001745:	mov    QWORD PTR [rsp+0x10],rsi
   14000174a:	push   rdi
   14000174b:	sub    rsp,0x20
   14000174f:	mov    rdi,QWORD PTR [rip+0x9072]        # 0x14000a7c8
   140001756:	xor    ebx,ebx
   140001758:	mov    esi,ecx
   14000175a:	test   rdi,rdi
   14000175d:	jne    0x1400017a6
   14000175f:	mov    rax,QWORD PTR [rip+0x9052]        # 0x14000a7b8
   140001766:	test   rax,rax
   140001769:	jne    0x140001787
   14000176b:	xor    edx,edx
   14000176d:	lea    rcx,[rip+0x633c]        # 0x140007ab0
   140001774:	mov    r8d,0x800
   14000177a:	call   QWORD PTR [rip+0x48c8]        # 0x140006048
   140001780:	mov    QWORD PTR [rip+0x9031],rax        # 0x14000a7b8
   140001787:	lea    rdx,[rip+0x635a]        # 0x140007ae8
   14000178e:	mov    rcx,rax
   140001791:	call   QWORD PTR [rip+0x4909]        # 0x1400060a0
   140001797:	mov    QWORD PTR [rip+0x902a],rax        # 0x14000a7c8
   14000179e:	mov    rdi,rax
   1400017a1:	test   rax,rax
   1400017a4:	je     0x1400017b5
   1400017a6:	mov    rcx,rdi
   1400017a9:	call   QWORD PTR [rip+0x4b61]        # 0x140006310
   1400017af:	mov    ecx,esi
   1400017b1:	call   rdi
   1400017b3:	mov    ebx,eax
   1400017b5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400017ba:	mov    eax,ebx
   1400017bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017c1:	add    rsp,0x20
   1400017c5:	pop    rdi
   1400017c6:	ret    
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400017da:	mov    QWORD PTR [rsp+0x18],rsi
   1400017df:	push   rdi
   1400017e0:	sub    rsp,0x20
   1400017e4:	xor    al,al
   1400017e6:	mov    BYTE PTR [r8],0x0
   1400017ea:	mov    rbp,r9
   1400017ed:	mov    rbx,r8
   1400017f0:	mov    rsi,rdx
   1400017f3:	mov    rdi,rcx
   1400017f6:	test   rdx,rdx
   1400017f9:	je     0x1400018a6
   1400017ff:	mov    rdx,QWORD PTR [rdx+0x10]
   140001803:	call   0x1400017d0
   140001808:	mov    rdx,QWORD PTR [rsi+0x20]
   14000180c:	xor    esi,esi
   14000180e:	test   rdx,rdx
   140001811:	je     0x1400018a6
   140001817:	cmp    DWORD PTR [rdx],esi
   140001819:	jne    0x14000182a
   14000181b:	lea    eax,[rsi+0x1]
   14000181e:	lock xadd DWORD PTR [rip+0x885a],eax        # 0x14000a080
   140001826:	inc    eax
   140001828:	mov    DWORD PTR [rdx],eax
   14000182a:	cmp    DWORD PTR [rdi+0x48],esi
   14000182d:	jne    0x140001840
   14000182f:	movups xmm0,XMMWORD PTR [rdx]
   140001832:	movups XMMWORD PTR [rdi+0x48],xmm0
   140001836:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000183b:	movsd  QWORD PTR [rdi+0x58],xmm1
   140001840:	movups xmm0,XMMWORD PTR [rdx]
   140001843:	or     rcx,0xffffffffffffffff
   140001847:	mov    rax,rcx
   14000184a:	movups XMMWORD PTR [rdi+0x60],xmm0
   14000184e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001853:	movsd  QWORD PTR [rdi+0x70],xmm1
   140001858:	lea    rdi,[rbx+rbp*1]
   14000185c:	inc    rax
   14000185f:	cmp    BYTE PTR [rbx+rax*1],sil
   140001863:	jne    0x14000185c
   140001865:	add    rbx,rax
   140001868:	mov    rax,rdi
   14000186b:	sub    rax,rbx
   14000186e:	cmp    rax,0x2
   140001872:	jle    0x1400018a4
   140001874:	mov    BYTE PTR [rbx],0x5c
   140001877:	inc    rbx
   14000187a:	mov    rdx,QWORD PTR [rdx+0x8]
   14000187e:	inc    rcx
   140001881:	cmp    BYTE PTR [rdx+rcx*1],sil
   140001885:	jne    0x14000187e
   140001887:	inc    rcx
   14000188a:	sub    rdi,rbx
   14000188d:	cmp    rcx,rdi
   140001890:	cmovb  rdi,rcx
   140001894:	mov    rcx,rbx
   140001897:	mov    r8,rdi
   14000189a:	call   0x140004f38
   14000189f:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   1400018a4:	mov    al,0x1
   1400018a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400018b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400018b5:	add    rsp,0x20
   1400018b9:	pop    rdi
   1400018ba:	ret    
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	int3   
   1400018c1:	int3   
   1400018c2:	int3   
   1400018c3:	int3   
   1400018c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400018c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400018ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400018d3:	push   rdi
   1400018d4:	push   r12
   1400018d6:	push   r13
   1400018d8:	push   r14
   1400018da:	push   r15
   1400018dc:	sub    rsp,0x20
   1400018e0:	movups xmm0,XMMWORD PTR [rdx]
   1400018e3:	mov    rsi,rcx
   1400018e6:	or     r15,0xffffffffffffffff
   1400018ea:	xor    edi,edi
   1400018ec:	mov    r14,rdx
   1400018ef:	movups XMMWORD PTR [rcx],xmm0
   1400018f2:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400018f6:	lea    r12d,[r15+0x3]
   1400018fa:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400018fe:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001902:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001906:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000190a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000190e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001912:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001916:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14000191a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000191e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001922:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001926:	mov    ecx,0x80
   14000192b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000192f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140001934:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140001938:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   14000193c:	mov    rcx,QWORD PTR [rdx+0x10]
   140001940:	test   rcx,rcx
   140001943:	jne    0x14000194c
   140001945:	mov    QWORD PTR [rsp+0x50],r12
   14000194a:	jmp    0x140001965
   14000194c:	mov    rax,r15
   14000194f:	inc    rax
   140001952:	cmp    WORD PTR [rcx+rax*2],di
   140001956:	jne    0x14000194f
   140001958:	lea    rax,[rax*2+0x2]
   140001960:	mov    QWORD PTR [rsp+0x50],rax
   140001965:	mov    rax,QWORD PTR [rdx+0x20]
   140001969:	test   rax,rax
   14000196c:	jne    0x140001975
   14000196e:	lea    ebx,[rax+0x1]
   140001971:	mov    ecx,ebx
   140001973:	jmp    0x140001989
   140001975:	mov    rcx,r15
   140001978:	inc    rcx
   14000197b:	cmp    BYTE PTR [rax+rcx*1],dil
   14000197f:	jne    0x140001978
   140001981:	mov    ebx,0x1
   140001986:	add    rcx,rbx
   140001989:	mov    rax,QWORD PTR [rdx+0x28]
   14000198d:	test   rax,rax
   140001990:	jne    0x140001997
   140001992:	mov    r9,rbx
   140001995:	jmp    0x1400019a6
   140001997:	mov    r9,r15
   14000199a:	inc    r9
   14000199d:	cmp    BYTE PTR [rax+r9*1],dil
   1400019a1:	jne    0x14000199a
   1400019a3:	add    r9,rbx
   1400019a6:	mov    rax,QWORD PTR [rdx+0x30]
   1400019aa:	test   rax,rax
   1400019ad:	jne    0x1400019b4
   1400019af:	mov    r11,rbx
   1400019b2:	jmp    0x1400019c3
   1400019b4:	mov    r11,r15
   1400019b7:	inc    r11
   1400019ba:	cmp    BYTE PTR [rax+r11*1],dil
   1400019be:	jne    0x1400019b7
   1400019c0:	add    r11,rbx
   1400019c3:	mov    rax,QWORD PTR [rdx+0x40]
   1400019c7:	test   rax,rax
   1400019ca:	jne    0x1400019d1
   1400019cc:	mov    r10,rbx
   1400019cf:	jmp    0x1400019e0
   1400019d1:	mov    r10,r15
   1400019d4:	inc    r10
   1400019d7:	cmp    BYTE PTR [rax+r10*1],dil
   1400019db:	jne    0x1400019d4
   1400019dd:	add    r10,rbx
   1400019e0:	mov    rax,QWORD PTR [rdx+0x78]
   1400019e4:	test   rax,rax
   1400019e7:	jne    0x1400019ee
   1400019e9:	mov    r8,rbx
   1400019ec:	jmp    0x1400019fd
   1400019ee:	mov    r8,r15
   1400019f1:	inc    r8
   1400019f4:	cmp    BYTE PTR [rax+r8*1],dil
   1400019f8:	jne    0x1400019f1
   1400019fa:	add    r8,rbx
   1400019fd:	mov    rax,QWORD PTR [rdx+0x68]
   140001a01:	test   rax,rax
   140001a04:	jne    0x140001a0b
   140001a06:	mov    rdx,rbx
   140001a09:	jmp    0x140001a1a
   140001a0b:	mov    rdx,r15
   140001a0e:	inc    rdx
   140001a11:	cmp    BYTE PTR [rax+rdx*1],dil
   140001a15:	jne    0x140001a0e
   140001a17:	add    rdx,rbx
   140001a1a:	mov    rbp,QWORD PTR [r14+0x70]
   140001a1e:	test   rbp,rbp
   140001a21:	jne    0x140001a28
   140001a23:	mov    r13,r12
   140001a26:	jmp    0x140001a3d
   140001a28:	mov    rax,r15
   140001a2b:	inc    rax
   140001a2e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140001a33:	jne    0x140001a2b
   140001a35:	lea    r13,[rax*2+0x2]
   140001a3d:	mov    rbp,QWORD PTR [r14+0x50]
   140001a41:	test   rbp,rbp
   140001a44:	jne    0x140001a4b
   140001a46:	mov    rax,rbx
   140001a49:	jmp    0x140001a5a
   140001a4b:	mov    rax,r15
   140001a4e:	inc    rax
   140001a51:	cmp    BYTE PTR [rax+rbp*1],dil
   140001a55:	jne    0x140001a4e
   140001a57:	add    rax,rbx
   140001a5a:	mov    r15,QWORD PTR [r14+0x58]
   140001a5e:	test   r15,r15
   140001a61:	je     0x140001a79
   140001a63:	or     rbp,0xffffffffffffffff
   140001a67:	inc    rbp
   140001a6a:	cmp    WORD PTR [r15+rbp*2],di
   140001a6f:	jne    0x140001a67
   140001a71:	lea    r12,[rbp*2+0x2]
   140001a79:	lea    rbp,[r12+rax*1]
   140001a7d:	mov    rax,QWORD PTR [rsi+0x90]
   140001a84:	add    rbp,r13
   140001a87:	add    rbp,rdx
   140001a8a:	add    rbp,r8
   140001a8d:	add    rbp,r10
   140001a90:	add    rbp,r11
   140001a93:	add    rbp,r9
   140001a96:	add    rbp,rcx
   140001a99:	add    rbp,QWORD PTR [rsp+0x50]
   140001a9e:	test   rax,rax
   140001aa1:	je     0x140001ab4
   140001aa3:	cmp    DWORD PTR [rax],ebx
   140001aa5:	jne    0x140001ab4
   140001aa7:	cmp    QWORD PTR [rsi+0x98],rbp
   140001aae:	jae    0x140001b7a
   140001ab4:	mov    rcx,rax
   140001ab7:	test   rax,rax
   140001aba:	je     0x140001ae3
   140001abc:	or     eax,0xffffffff
   140001abf:	lock xadd DWORD PTR [rcx],eax
   140001ac3:	cmp    eax,0x1
   140001ac6:	jne    0x140001ad5
   140001ac8:	mov    rcx,QWORD PTR [rsi+0x90]
   140001acf:	call   QWORD PTR [rip+0x47d3]        # 0x1400062a8
   140001ad5:	mov    QWORD PTR [rsi+0x90],rdi
   140001adc:	mov    QWORD PTR [rsi+0x98],rdi
   140001ae3:	test   rbp,rbp
   140001ae6:	jne    0x140001b21
   140001ae8:	mov    rcx,QWORD PTR [rsi+0x90]
   140001aef:	test   rcx,rcx
   140001af2:	je     0x140001b7a
   140001af8:	or     eax,0xffffffff
   140001afb:	lock xadd DWORD PTR [rcx],eax
   140001aff:	cmp    eax,0x1
   140001b02:	jne    0x140001b11
   140001b04:	mov    rcx,QWORD PTR [rsi+0x90]
   140001b0b:	call   QWORD PTR [rip+0x4797]        # 0x1400062a8
   140001b11:	mov    QWORD PTR [rsi+0x90],rdi
   140001b18:	mov    QWORD PTR [rsi+0x98],rdi
   140001b1f:	jmp    0x140001b7a
   140001b21:	lea    rcx,[rbp+0x4]
   140001b25:	call   QWORD PTR [rip+0x4775]        # 0x1400062a0
   140001b2b:	mov    r15,rax
   140001b2e:	test   rax,rax
   140001b31:	je     0x140001b7a
   140001b33:	mov    DWORD PTR [rax],edi
   140001b35:	mov    rax,QWORD PTR [rsi+0x90]
   140001b3c:	test   rax,rax
   140001b3f:	je     0x140001b68
   140001b41:	or     ecx,0xffffffff
   140001b44:	lock xadd DWORD PTR [rax],ecx
   140001b48:	cmp    ecx,0x1
   140001b4b:	jne    0x140001b5a
   140001b4d:	mov    rcx,QWORD PTR [rsi+0x90]
   140001b54:	call   QWORD PTR [rip+0x474e]        # 0x1400062a8
   140001b5a:	mov    QWORD PTR [rsi+0x90],rdi
   140001b61:	mov    QWORD PTR [rsi+0x98],rdi
   140001b68:	mov    QWORD PTR [rsi+0x90],r15
   140001b6f:	mov    QWORD PTR [rsi+0x98],rbp
   140001b76:	lock add DWORD PTR [r15],ebx
   140001b7a:	mov    rax,QWORD PTR [rsi+0x90]
   140001b81:	mov    rcx,QWORD PTR [rsi+0x98]
   140001b88:	test   rax,rax
   140001b8b:	je     0x140001b91
   140001b8d:	lea    rdi,[rax+0x4]
   140001b91:	mov    r8,QWORD PTR [r14+0x10]
   140001b95:	lea    rdx,[rcx+rdi*1]
   140001b99:	mov    rax,rdi
   140001b9c:	lea    r9,[rsi+0x10]
   140001ba0:	neg    rax
   140001ba3:	mov    rcx,rdi
   140001ba6:	sbb    rbx,rbx
   140001ba9:	and    rbx,rdx
   140001bac:	mov    rdx,rbx
   140001baf:	call   0x1400034b4
   140001bb4:	mov    r8,QWORD PTR [r14+0x20]
   140001bb8:	lea    r9,[rsi+0x20]
   140001bbc:	mov    rdx,rbx
   140001bbf:	mov    rcx,rax
   140001bc2:	call   0x14000356c
   140001bc7:	mov    r8,QWORD PTR [r14+0x28]
   140001bcb:	lea    r9,[rsi+0x28]
   140001bcf:	mov    rdx,rbx
   140001bd2:	mov    rcx,rax
   140001bd5:	call   0x14000356c
   140001bda:	mov    r8,QWORD PTR [r14+0x30]
   140001bde:	lea    r9,[rsi+0x30]
   140001be2:	mov    rdx,rbx
   140001be5:	mov    rcx,rax
   140001be8:	call   0x14000356c
   140001bed:	mov    r8,QWORD PTR [r14+0x40]
   140001bf1:	lea    r9,[rsi+0x40]
   140001bf5:	mov    rdx,rbx
   140001bf8:	mov    rcx,rax
   140001bfb:	call   0x14000356c
   140001c00:	mov    r8,QWORD PTR [r14+0x78]
   140001c04:	lea    r9,[rsi+0x78]
   140001c08:	mov    rdx,rbx
   140001c0b:	mov    rcx,rax
   140001c0e:	call   0x14000356c
   140001c13:	mov    r8,QWORD PTR [r14+0x68]
   140001c17:	lea    r9,[rsi+0x68]
   140001c1b:	mov    rdx,rbx
   140001c1e:	mov    rcx,rax
   140001c21:	call   0x14000356c
   140001c26:	mov    r8,QWORD PTR [r14+0x70]
   140001c2a:	lea    r9,[rsi+0x70]
   140001c2e:	mov    rdx,rbx
   140001c31:	mov    rcx,rax
   140001c34:	call   0x1400034b4
   140001c39:	mov    r8,QWORD PTR [r14+0x50]
   140001c3d:	lea    r9,[rsi+0x50]
   140001c41:	mov    rdx,rbx
   140001c44:	mov    rcx,rax
   140001c47:	call   0x14000356c
   140001c4c:	mov    r8,QWORD PTR [r14+0x58]
   140001c50:	lea    r9,[rsi+0x58]
   140001c54:	mov    rdx,rbx
   140001c57:	mov    rcx,rax
   140001c5a:	mov    rbx,QWORD PTR [rsp+0x58]
   140001c5f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001c64:	mov    rsi,QWORD PTR [rsp+0x68]
   140001c69:	add    rsp,0x20
   140001c6d:	pop    r15
   140001c6f:	pop    r14
   140001c71:	pop    r13
   140001c73:	pop    r12
   140001c75:	pop    rdi
   140001c76:	jmp    0x1400034b4
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	rex push rbx
   140001c86:	sub    rsp,0x20
   140001c8a:	and    QWORD PTR [rcx+0x90],0x0
   140001c92:	mov    rbx,rcx
   140001c95:	and    QWORD PTR [rcx+0x98],0x0
   140001c9d:	call   0x1400018c4
   140001ca2:	mov    rax,rbx
   140001ca5:	add    rsp,0x20
   140001ca9:	pop    rbx
   140001caa:	ret    
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	int3   
   140001cb1:	int3   
   140001cb2:	int3   
   140001cb3:	int3   
   140001cb4:	mov    QWORD PTR [rsp+0x18],rbx
   140001cb9:	mov    DWORD PTR [rsp+0x10],edx
   140001cbd:	mov    QWORD PTR [rsp+0x8],rcx
   140001cc2:	push   rbp
   140001cc3:	push   rsi
   140001cc4:	push   rdi
   140001cc5:	push   r12
   140001cc7:	push   r13
   140001cc9:	push   r14
   140001ccb:	push   r15
   140001ccd:	sub    rsp,0x40
   140001cd1:	mov    r14d,DWORD PTR [rsp+0xb0]
   140001cd9:	mov    r13,r8
   140001cdc:	mov    r15,QWORD PTR [rsp+0xd0]
   140001ce4:	xor    r8d,r8d
   140001ce7:	mov    rbp,QWORD PTR [rsp+0xe0]
   140001cef:	mov    r12,r9
   140001cf2:	mov    ebx,DWORD PTR [rsp+0xb8]
   140001cf9:	mov    edi,r8d
   140001cfc:	mov    r10d,r14d
   140001cff:	mov    WORD PTR [r15],r8w
   140001d03:	mov    BYTE PTR [rbp+0x0],r8b
   140001d07:	test   r14d,r14d
   140001d0a:	je     0x140001d7f
   140001d0c:	sub    r10d,0x1
   140001d10:	je     0x140001d76
   140001d12:	sub    r10d,0x1
   140001d16:	je     0x140001d6d
   140001d18:	sub    r10d,0x1
   140001d1c:	je     0x140001d2d
   140001d1e:	cmp    r10d,0x1
   140001d22:	jne    0x140001d88
   140001d24:	mov    ecx,ebx
   140001d26:	call   0x1400015c0
   140001d2b:	jmp    0x140001d86
   140001d2d:	test   ebx,ebx
   140001d2f:	js     0x140001d64
   140001d31:	mov    rax,QWORD PTR [rsp+0xa8]
   140001d39:	mov    ebx,0x8007029c
   140001d3e:	mov    DWORD PTR [rsp+0x38],ebx
   140001d42:	mov    r8,r13
   140001d45:	mov    DWORD PTR [rsp+0x30],0x3
   140001d4d:	mov    QWORD PTR [rsp+0x28],rax
   140001d52:	mov    rax,QWORD PTR [rsp+0xa0]
   140001d5a:	mov    QWORD PTR [rsp+0x20],rax
   140001d5f:	call   0x140002208
   140001d64:	mov    ecx,ebx
   140001d66:	call   0x1400015a0
   140001d6b:	jmp    0x140001d86
   140001d6d:	mov    ecx,ebx
   140001d6f:	call   0x140001584
   140001d74:	jmp    0x140001d86
   140001d76:	mov    ecx,ebx
   140001d78:	call   0x140001568
   140001d7d:	jmp    0x140001d86
   140001d7f:	mov    ecx,ebx
   140001d81:	call   0x14000154c
   140001d86:	mov    edi,eax
   140001d88:	mov    rsi,QWORD PTR [rsp+0xf0]
   140001d90:	mov    DWORD PTR [rsi],r14d
   140001d93:	mov    r14d,0x1
   140001d99:	mov    eax,r14d
   140001d9c:	mov    DWORD PTR [rsi+0x4],ebx
   140001d9f:	lock xadd DWORD PTR [rip+0x8a2d],eax        # 0x14000a7d4
   140001da7:	add    eax,r14d
   140001daa:	xor    ecx,ecx
   140001dac:	mov    DWORD PTR [rsi+0x8],eax
   140001daf:	mov    rax,QWORD PTR [rsp+0xc0]
   140001db7:	test   rax,rax
   140001dba:	je     0x140001dc1
   140001dbc:	cmp    WORD PTR [rax],cx
   140001dbf:	jne    0x140001dc4
   140001dc1:	mov    rax,rcx
   140001dc4:	mov    QWORD PTR [rsi+0x10],rax
   140001dc8:	call   QWORD PTR [rip+0x42e2]        # 0x1400060b0
   140001dce:	mov    rbx,QWORD PTR [rip+0x89c3]        # 0x14000a798
   140001dd5:	mov    DWORD PTR [rsi+0x18],eax
   140001dd8:	mov    eax,DWORD PTR [rsp+0x88]
   140001ddf:	mov    DWORD PTR [rsi+0x38],eax
   140001de2:	mov    rax,QWORD PTR [rsp+0xa0]
   140001dea:	mov    QWORD PTR [rsi+0x20],rax
   140001dee:	mov    rax,QWORD PTR [rsp+0xa8]
   140001df6:	mov    QWORD PTR [rsi+0x80],rax
   140001dfd:	mov    rax,QWORD PTR [rsp+0x80]
   140001e05:	mov    QWORD PTR [rsi+0x30],r13
   140001e09:	xor    r13d,r13d
   140001e0c:	mov    QWORD PTR [rsi+0x88],rax
   140001e13:	mov    DWORD PTR [rsi+0x3c],edi
   140001e16:	mov    QWORD PTR [rsi+0x28],r12
   140001e1a:	mov    QWORD PTR [rsi+0x40],r13
   140001e1e:	mov    DWORD PTR [rsi+0x60],r13d
   140001e22:	mov    QWORD PTR [rsi+0x68],r13
   140001e26:	mov    QWORD PTR [rsi+0x70],r13
   140001e2a:	mov    DWORD PTR [rsi+0x48],r13d
   140001e2e:	mov    QWORD PTR [rsi+0x50],r13
   140001e32:	mov    QWORD PTR [rsi+0x58],r13
   140001e36:	test   rbx,rbx
   140001e39:	je     0x140001e48
   140001e3b:	mov    rcx,rbx
   140001e3e:	call   QWORD PTR [rip+0x44cc]        # 0x140006310
   140001e44:	call   rbx
   140001e46:	jmp    0x140001e4b
   140001e48:	mov    rax,r13
   140001e4b:	mov    QWORD PTR [rsi+0x78],rax
   140001e4f:	mov    r12b,r13b
   140001e52:	mov    BYTE PTR [rbp+0x0],r13b
   140001e56:	call   QWORD PTR [rip+0x4254]        # 0x1400060b0
   140001e5c:	mov    r8d,eax
   140001e5f:	lea    rbx,[rip+0x89fa]        # 0x14000a860
   140001e66:	mov    r9d,eax
   140001e69:	movabs rax,0xcccccccccccccccd
   140001e73:	mul    r9
   140001e76:	shr    rdx,0x4
   140001e7a:	lea    rcx,[rdx+rdx*4]
   140001e7e:	shl    rcx,0x2
   140001e82:	sub    r8,rcx
   140001e85:	mov    rbx,QWORD PTR [rbx+r8*8]
   140001e89:	jmp    0x140001e95
   140001e8b:	cmp    DWORD PTR [rbx+0x8],r9d
   140001e8f:	je     0x140001e9d
   140001e91:	mov    rbx,QWORD PTR [rbx+0x10]
   140001e95:	test   rbx,rbx
   140001e98:	jne    0x140001e8b
   140001e9a:	mov    rbx,r13
   140001e9d:	test   rbx,rbx
   140001ea0:	je     0x140001ef1
   140001ea2:	cmp    QWORD PTR [rbx],r13
   140001ea5:	je     0x140001ef1
   140001ea7:	mov    BYTE PTR [rbp+0x0],r13b
   140001eab:	mov    r9d,0x400
   140001eb1:	mov    rdx,QWORD PTR [rbx]
   140001eb4:	mov    r8,rbp
   140001eb7:	mov    rcx,rsi
   140001eba:	call   0x1400017d0
   140001ebf:	test   al,al
   140001ec1:	je     0x140001ec7
   140001ec3:	mov    QWORD PTR [rsi+0x40],rbp
   140001ec7:	mov    rbp,QWORD PTR [rbx]
   140001eca:	mov    rdi,QWORD PTR [rbp+0x8]
   140001ece:	mov    rax,QWORD PTR [rdi]
   140001ed1:	mov    rbx,QWORD PTR [rax]
   140001ed4:	mov    rcx,rbx
   140001ed7:	call   QWORD PTR [rip+0x4433]        # 0x140006310
   140001edd:	mov    rdx,rsi
   140001ee0:	mov    rcx,rdi
   140001ee3:	call   rbx
   140001ee5:	mov    rbp,QWORD PTR [rbp+0x10]
   140001ee9:	or     r12b,al
   140001eec:	test   rbp,rbp
   140001eef:	jne    0x140001eca
   140001ef1:	mov    rdi,QWORD PTR [rip+0x8880]        # 0x14000a778
   140001ef8:	test   rdi,rdi
   140001efb:	je     0x140001f15
   140001efd:	mov    rcx,rdi
   140001f00:	call   QWORD PTR [rip+0x440a]        # 0x140006310
   140001f06:	mov    rdx,rsi
   140001f09:	mov    cl,r12b
   140001f0c:	call   rdi
   140001f0e:	mov    rdi,QWORD PTR [rip+0x8863]        # 0x14000a778
   140001f15:	mov    rbx,QWORD PTR [rip+0x8854]        # 0x14000a770
   140001f1c:	test   rbx,rbx
   140001f1f:	je     0x140001f36
   140001f21:	mov    rcx,rbx
   140001f24:	call   QWORD PTR [rip+0x43e6]        # 0x140006310
   140001f2a:	mov    rcx,rsi
   140001f2d:	call   rbx
   140001f2f:	mov    rdi,QWORD PTR [rip+0x8842]        # 0x14000a778
   140001f36:	cmp    DWORD PTR [rsi+0x4],r13d
   140001f3a:	jl     0x140001f4a
   140001f3c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140001f44:	jne    0x140001ff1
   140001f4a:	cmp    BYTE PTR [rip+0x8850],r13b        # 0x14000a7a1
   140001f51:	mov    rbx,QWORD PTR [rip+0x8850]        # 0x14000a7a8
   140001f58:	jne    0x140001f67
   140001f5a:	test   rdi,rdi
   140001f5d:	jne    0x140001f64
   140001f5f:	test   rbx,rbx
   140001f62:	je     0x140001f67
   140001f64:	mov    r14b,r13b
   140001f67:	cmp    BYTE PTR [rsp+0xc8],r13b
   140001f6f:	jne    0x140001f99
   140001f71:	test   r14b,r14b
   140001f74:	jne    0x140001f99
   140001f76:	test   rbx,rbx
   140001f79:	je     0x140001fd9
   140001f7b:	cmp    BYTE PTR [rip+0x881e],r13b        # 0x14000a7a0
   140001f82:	jne    0x140001fd9
   140001f84:	mov    rcx,rbx
   140001f87:	call   QWORD PTR [rip+0x4383]        # 0x140006310
   140001f8d:	xor    r8d,r8d
   140001f90:	xor    edx,edx
   140001f92:	mov    rcx,rsi
   140001f95:	call   rbx
   140001f97:	jmp    0x140001fd9
   140001f99:	mov    edi,0x800
   140001f9e:	test   rbx,rbx
   140001fa1:	je     0x140001fb7
   140001fa3:	mov    rcx,rbx
   140001fa6:	call   QWORD PTR [rip+0x4364]        # 0x140006310
   140001fac:	mov    r8d,edi
   140001faf:	mov    rdx,r15
   140001fb2:	mov    rcx,rsi
   140001fb5:	call   rbx
   140001fb7:	cmp    WORD PTR [r15],r13w
   140001fbb:	jne    0x140001fcb
   140001fbd:	mov    r8,rsi
   140001fc0:	mov    rdx,rdi
   140001fc3:	mov    rcx,r15
   140001fc6:	call   0x140001318
   140001fcb:	test   r14b,r14b
   140001fce:	je     0x140001fd9
   140001fd0:	mov    rcx,r15
   140001fd3:	call   QWORD PTR [rip+0x408f]        # 0x140006068
   140001fd9:	mov    rbx,QWORD PTR [rsp+0x90]
   140001fe1:	add    rsp,0x40
   140001fe5:	pop    r15
   140001fe7:	pop    r14
   140001fe9:	pop    r13
   140001feb:	pop    r12
   140001fed:	pop    rdi
   140001fee:	pop    rsi
   140001fef:	pop    rbp
   140001ff0:	ret    
   140001ff1:	mov    rcx,QWORD PTR [rsp+0x78]
   140001ff6:	lea    r8,[rip+0x5b0b]        # 0x140007b08
   140001ffd:	mov    edx,0xb46
   140002002:	call   0x140002354
   140002007:	int3   
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	rex push rbx
   140002012:	push   rdi
   140002013:	mov    eax,0x15c8
   140002018:	call   0x140005010
   14000201d:	sub    rsp,rax
   140002020:	mov    rax,QWORD PTR [rip+0x7fe1]        # 0x14000a008
   140002027:	xor    rax,rsp
   14000202a:	mov    QWORD PTR [rsp+0x15b0],rax
   140002032:	mov    edi,DWORD PTR [rsp+0x1610]
   140002039:	mov    r10,QWORD PTR [rsp+0x1600]
   140002041:	mov    r11,QWORD PTR [rsp+0x1608]
   140002049:	test   edi,edi
   14000204b:	jne    0x14000205b
   14000204d:	cmp    QWORD PTR [rip+0x872b],0x0        # 0x14000a780
   140002055:	je     0x14000205b
   140002057:	mov    bl,0x1
   140002059:	jmp    0x14000205d
   14000205b:	xor    bl,bl
   14000205d:	lea    rax,[rsp+0x80]
   140002065:	mov    QWORD PTR [rsp+0x70],rax
   14000206a:	lea    rax,[rsp+0x1b0]
   140002072:	mov    QWORD PTR [rsp+0x60],rax
   140002077:	lea    rax,[rsp+0x5b0]
   14000207f:	mov    QWORD PTR [rsp+0x50],rax
   140002084:	mov    eax,DWORD PTR [rsp+0x1618]
   14000208b:	mov    BYTE PTR [rsp+0x48],bl
   14000208f:	and    QWORD PTR [rsp+0x40],0x0
   140002095:	mov    DWORD PTR [rsp+0x38],eax
   140002099:	mov    DWORD PTR [rsp+0x30],edi
   14000209d:	mov    QWORD PTR [rsp+0x28],r11
   1400020a2:	mov    QWORD PTR [rsp+0x20],r10
   1400020a7:	call   0x140001cb4
   1400020ac:	cmp    edi,0x4
   1400020af:	jne    0x1400020d0
   1400020b1:	lea    ecx,[rdi+0x3]
   1400020b4:	int    0x29
   1400020b6:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400020be:	xor    rcx,rsp
   1400020c1:	call   0x140003f10
   1400020c6:	add    rsp,0x15c8
   1400020cd:	pop    rdi
   1400020ce:	pop    rbx
   1400020cf:	ret    
   1400020d0:	test   edi,edi
   1400020d2:	jne    0x1400020b6
   1400020d4:	test   bl,bl
   1400020d6:	je     0x1400020fa
   1400020d8:	mov    rbx,QWORD PTR [rip+0x86a1]        # 0x14000a780
   1400020df:	mov    rcx,rbx
   1400020e2:	call   QWORD PTR [rip+0x4228]        # 0x140006310
   1400020e8:	lea    rdx,[rsp+0x5b0]
   1400020f0:	lea    rcx,[rsp+0x80]
   1400020f8:	call   rbx
   1400020fa:	lea    rdx,[rsp+0x80]
   140002102:	lea    rcx,[rsp+0x110]
   14000210a:	call   0x140001c84
   14000210f:	lea    rdx,[rip+0x6aba]        # 0x140008bd0
   140002116:	lea    rcx,[rsp+0x110]
   14000211e:	call   0x140004f2c
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	rex push rbx
   14000212e:	sub    rsp,0x20
   140002132:	mov    rbx,rcx
   140002135:	mov    rcx,QWORD PTR [rcx+0x90]
   14000213c:	test   rcx,rcx
   14000213f:	je     0x14000216a
   140002141:	or     eax,0xffffffff
   140002144:	lock xadd DWORD PTR [rcx],eax
   140002148:	cmp    eax,0x1
   14000214b:	jne    0x14000215a
   14000214d:	mov    rcx,QWORD PTR [rbx+0x90]
   140002154:	call   QWORD PTR [rip+0x414e]        # 0x1400062a8
   14000215a:	and    QWORD PTR [rbx+0x90],0x0
   140002162:	and    QWORD PTR [rbx+0x98],0x0
   14000216a:	add    rsp,0x20
   14000216e:	pop    rbx
   14000216f:	ret    
   140002170:	int3   
   140002171:	int3   
   140002172:	int3   
   140002173:	int3   
   140002174:	int3   
   140002175:	int3   
   140002176:	int3   
   140002177:	int3   
   140002178:	movups xmm0,XMMWORD PTR [rdx]
   14000217b:	mov    r9d,0x80
   140002181:	movups XMMWORD PTR [rcx],xmm0
   140002184:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002188:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000218c:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002190:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002194:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002198:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000219c:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400021a0:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400021a4:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400021a8:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400021ac:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400021b0:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400021b4:	movups xmm0,XMMWORD PTR [rdx+0x70]
   1400021b8:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   1400021be:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   1400021c3:	movups XMMWORD PTR [rcx+r9*1],xmm1
   1400021c8:	and    QWORD PTR [rcx+0x90],0x0
   1400021d0:	and    QWORD PTR [rcx+0x98],0x0
   1400021d8:	mov    rax,QWORD PTR [rdx+0x90]
   1400021df:	mov    r8,QWORD PTR [rdx+0x98]
   1400021e6:	test   rax,rax
   1400021e9:	je     0x1400021fc
   1400021eb:	mov    QWORD PTR [rcx+0x90],rax
   1400021f2:	mov    QWORD PTR [rcx+0x98],r8
   1400021f9:	lock inc DWORD PTR [rax]
   1400021fc:	mov    rax,rcx
   1400021ff:	ret    
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	sub    rsp,0x58
   14000220c:	mov    eax,DWORD PTR [rsp+0x98]
   140002213:	mov    DWORD PTR [rsp+0x38],eax
   140002217:	mov    eax,DWORD PTR [rsp+0x90]
   14000221e:	mov    DWORD PTR [rsp+0x30],eax
   140002222:	mov    rax,QWORD PTR [rsp+0x88]
   14000222a:	mov    QWORD PTR [rsp+0x28],rax
   14000222f:	mov    rax,QWORD PTR [rsp+0x80]
   140002237:	mov    QWORD PTR [rsp+0x20],rax
   14000223c:	call   0x140002010
   140002241:	add    rsp,0x58
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	mov    QWORD PTR [rsp+0x8],rbx
   140002251:	mov    QWORD PTR [rsp+0x10],rsi
   140002256:	push   rdi
   140002257:	sub    rsp,0x50
   14000225b:	mov    rdi,rcx
   14000225e:	call   QWORD PTR [rip+0x3e2c]        # 0x140006090
   140002264:	mov    rsi,QWORD PTR [rsp+0x88]
   14000226c:	test   eax,eax
   14000226e:	jne    0x1400022a5
   140002270:	mov    DWORD PTR [rsp+0x38],0x8007029c
   140002278:	lea    r8,[rip+0x5939]        # 0x140007bb8
   14000227f:	mov    DWORD PTR [rsp+0x30],0x3
   140002287:	lea    edx,[rax+0x39]
   14000228a:	mov    QWORD PTR [rsp+0x28],rsi
   14000228f:	xor    r9d,r9d
   140002292:	and    QWORD PTR [rsp+0x20],0x0
   140002298:	mov    rcx,rdi
   14000229b:	call   0x140002208
   1400022a0:	mov    eax,0x29c
   1400022a5:	movzx  ebx,ax
   1400022a8:	lea    r8,[rip+0x5909]        # 0x140007bb8
   1400022af:	or     ebx,0x80070000
   1400022b5:	mov    rcx,rdi
   1400022b8:	test   eax,eax
   1400022ba:	cmovle ebx,eax
   1400022bd:	xor    r9d,r9d
   1400022c0:	mov    DWORD PTR [rsp+0x38],ebx
   1400022c4:	mov    DWORD PTR [rsp+0x30],0x2
   1400022cc:	mov    QWORD PTR [rsp+0x28],rsi
   1400022d1:	and    QWORD PTR [rsp+0x20],0x0
   1400022d7:	lea    edx,[r9+0x39]
   1400022db:	call   0x140002010
   1400022e0:	mov    rsi,QWORD PTR [rsp+0x68]
   1400022e5:	mov    eax,ebx
   1400022e7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400022ec:	add    rsp,0x50
   1400022f0:	pop    rdi
   1400022f1:	ret    
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	int3   
   1400022f5:	int3   
   1400022f6:	int3   
   1400022f7:	int3   
   1400022f8:	sub    rsp,0x48
   1400022fc:	mov    rax,QWORD PTR [rsp+0x48]
   140002301:	lea    r8,[rip+0x58b0]        # 0x140007bb8
   140002308:	mov    DWORD PTR [rsp+0x38],r9d
   14000230d:	xor    r9d,r9d
   140002310:	mov    DWORD PTR [rsp+0x30],0x2
   140002318:	mov    QWORD PTR [rsp+0x28],rax
   14000231d:	and    QWORD PTR [rsp+0x20],0x0
   140002323:	call   0x140002208
   140002328:	add    rsp,0x48
   14000232c:	ret    
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	int3   
   140002331:	int3   
   140002332:	int3   
   140002333:	int3   
   140002334:	sub    rsp,0x48
   140002338:	mov    rax,QWORD PTR [rsp+0x48]
   14000233d:	mov    QWORD PTR [rsp+0x28],rax
   140002342:	call   0x14000224c
   140002347:	add    rsp,0x48
   14000234b:	ret    
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	int3   
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	sub    rsp,0x48
   140002358:	mov    rax,QWORD PTR [rsp+0x48]
   14000235d:	xor    r9d,r9d
   140002360:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140002368:	mov    DWORD PTR [rsp+0x30],0x4
   140002370:	mov    QWORD PTR [rsp+0x28],rax
   140002375:	and    QWORD PTR [rsp+0x20],0x0
   14000237b:	call   0x140002208
   140002380:	add    rsp,0x48
   140002384:	ret    
   140002385:	int3   
   140002386:	int3   
   140002387:	int3   
   140002388:	int3   
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	sub    rsp,0x28
   140002390:	mov    rcx,QWORD PTR [rcx]
   140002393:	test   rcx,rcx
   140002396:	je     0x14000239e
   140002398:	call   QWORD PTR [rip+0x3d42]        # 0x1400060e0
   14000239e:	add    rsp,0x28
   1400023a2:	ret    
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    rax,rsp
   1400023b3:	mov    QWORD PTR [rax+0x8],rbx
   1400023b7:	mov    QWORD PTR [rax+0x10],rbp
   1400023bb:	mov    QWORD PTR [rax+0x18],rsi
   1400023bf:	mov    QWORD PTR [rax+0x20],rdi
   1400023c3:	push   r14
   1400023c5:	sub    rsp,0x40
   1400023c9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400023cd:	mov    esi,r9d
   1400023d0:	mov    rbp,r8
   1400023d3:	mov    r14,rdx
   1400023d6:	test   rdi,rdi
   1400023d9:	je     0x14000241a
   1400023db:	mov    rax,QWORD PTR [rdi]
   1400023de:	mov    rbx,QWORD PTR [rax+0x18]
   1400023e2:	mov    rcx,rbx
   1400023e5:	call   QWORD PTR [rip+0x3f25]        # 0x140006310
   1400023eb:	mov    rax,QWORD PTR [rsp+0x80]
   1400023f3:	mov    r9d,esi
   1400023f6:	mov    QWORD PTR [rsp+0x30],rax
   1400023fb:	mov    r8,rbp
   1400023fe:	mov    eax,DWORD PTR [rsp+0x78]
   140002402:	mov    rdx,r14
   140002405:	mov    DWORD PTR [rsp+0x28],eax
   140002409:	mov    rcx,rdi
   14000240c:	mov    rax,QWORD PTR [rsp+0x70]
   140002411:	mov    QWORD PTR [rsp+0x20],rax
   140002416:	call   rbx
   140002418:	jmp    0x14000241f
   14000241a:	mov    eax,0x8007000e
   14000241f:	mov    rbx,QWORD PTR [rsp+0x50]
   140002424:	mov    rbp,QWORD PTR [rsp+0x58]
   140002429:	mov    rsi,QWORD PTR [rsp+0x60]
   14000242e:	mov    rdi,QWORD PTR [rsp+0x68]
   140002433:	add    rsp,0x40
   140002437:	pop    r14
   140002439:	ret    
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    rax,rsp
   140002443:	mov    QWORD PTR [rax+0x8],rbx
   140002447:	mov    QWORD PTR [rax+0x10],rbp
   14000244b:	mov    QWORD PTR [rax+0x18],rsi
   14000244f:	mov    QWORD PTR [rax+0x20],rdi
   140002453:	push   r14
   140002455:	sub    rsp,0x40
   140002459:	mov    rdi,QWORD PTR [rcx+0x10]
   14000245d:	mov    esi,r9d
   140002460:	mov    rbp,r8
   140002463:	mov    r14,rdx
   140002466:	test   rdi,rdi
   140002469:	je     0x1400024aa
   14000246b:	mov    rax,QWORD PTR [rdi]
   14000246e:	mov    rbx,QWORD PTR [rax+0x20]
   140002472:	mov    rcx,rbx
   140002475:	call   QWORD PTR [rip+0x3e95]        # 0x140006310
   14000247b:	mov    rax,QWORD PTR [rsp+0x80]
   140002483:	mov    r9d,esi
   140002486:	mov    QWORD PTR [rsp+0x30],rax
   14000248b:	mov    r8,rbp
   14000248e:	mov    eax,DWORD PTR [rsp+0x78]
   140002492:	mov    rdx,r14
   140002495:	mov    DWORD PTR [rsp+0x28],eax
   140002499:	mov    rcx,rdi
   14000249c:	mov    rax,QWORD PTR [rsp+0x70]
   1400024a1:	mov    QWORD PTR [rsp+0x20],rax
   1400024a6:	call   rbx
   1400024a8:	jmp    0x1400024af
   1400024aa:	mov    eax,0x8007000e
   1400024af:	mov    rbx,QWORD PTR [rsp+0x50]
   1400024b4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400024b9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400024be:	mov    rdi,QWORD PTR [rsp+0x68]
   1400024c3:	add    rsp,0x40
   1400024c7:	pop    r14
   1400024c9:	ret    
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    rax,rsp
   1400024d3:	mov    QWORD PTR [rax+0x8],rbx
   1400024d7:	mov    QWORD PTR [rax+0x10],rbp
   1400024db:	mov    QWORD PTR [rax+0x18],rsi
   1400024df:	mov    QWORD PTR [rax+0x20],rdi
   1400024e3:	push   r14
   1400024e5:	sub    rsp,0x40
   1400024e9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400024ed:	mov    rsi,r9
   1400024f0:	mov    rbp,r8
   1400024f3:	mov    r14,rdx
   1400024f6:	test   rdi,rdi
   1400024f9:	je     0x140002538
   1400024fb:	mov    rax,QWORD PTR [rdi]
   1400024fe:	mov    rbx,QWORD PTR [rax+0x28]
   140002502:	mov    rcx,rbx
   140002505:	call   QWORD PTR [rip+0x3e05]        # 0x140006310
   14000250b:	mov    eax,DWORD PTR [rsp+0x80]
   140002512:	mov    r9,rsi
   140002515:	mov    DWORD PTR [rsp+0x30],eax
   140002519:	mov    r8,rbp
   14000251c:	mov    rax,QWORD PTR [rsp+0x78]
   140002521:	mov    rdx,r14
   140002524:	mov    QWORD PTR [rsp+0x28],rax
   140002529:	mov    rcx,rdi
   14000252c:	mov    eax,DWORD PTR [rsp+0x70]
   140002530:	mov    DWORD PTR [rsp+0x20],eax
   140002534:	call   rbx
   140002536:	jmp    0x14000253d
   140002538:	mov    eax,0x8007000e
   14000253d:	mov    rbx,QWORD PTR [rsp+0x50]
   140002542:	mov    rbp,QWORD PTR [rsp+0x58]
   140002547:	mov    rsi,QWORD PTR [rsp+0x60]
   14000254c:	mov    rdi,QWORD PTR [rsp+0x68]
   140002551:	add    rsp,0x40
   140002555:	pop    r14
   140002557:	ret    
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,rsp
   140002563:	mov    QWORD PTR [rax+0x8],rbx
   140002567:	mov    QWORD PTR [rax+0x10],rbp
   14000256b:	mov    QWORD PTR [rax+0x18],rsi
   14000256f:	mov    QWORD PTR [rax+0x20],rdi
   140002573:	push   r14
   140002575:	sub    rsp,0x20
   140002579:	mov    rdi,QWORD PTR [rcx+0x10]
   14000257d:	mov    rsi,r9
   140002580:	mov    rbp,r8
   140002583:	mov    r14,rdx
   140002586:	test   rdi,rdi
   140002589:	je     0x1400025ab
   14000258b:	mov    rax,QWORD PTR [rdi]
   14000258e:	mov    rbx,QWORD PTR [rax+0x30]
   140002592:	mov    rcx,rbx
   140002595:	call   QWORD PTR [rip+0x3d75]        # 0x140006310
   14000259b:	mov    r9,rsi
   14000259e:	mov    r8,rbp
   1400025a1:	mov    rdx,r14
   1400025a4:	mov    rcx,rdi
   1400025a7:	call   rbx
   1400025a9:	jmp    0x1400025b0
   1400025ab:	mov    eax,0x8007000e
   1400025b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025b5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400025ba:	mov    rsi,QWORD PTR [rsp+0x40]
   1400025bf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400025c4:	add    rsp,0x20
   1400025c8:	pop    r14
   1400025ca:	ret    
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	int3   
   1400025d1:	int3   
   1400025d2:	int3   
   1400025d3:	int3   
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025ea:	push   rdi
   1400025eb:	sub    rsp,0x20
   1400025ef:	mov    rdi,QWORD PTR [rcx+0x10]
   1400025f3:	mov    rsi,rdx
   1400025f6:	test   rdi,rdi
   1400025f9:	je     0x140002615
   1400025fb:	mov    rax,QWORD PTR [rdi]
   1400025fe:	mov    rbx,QWORD PTR [rax+0x38]
   140002602:	mov    rcx,rbx
   140002605:	call   QWORD PTR [rip+0x3d05]        # 0x140006310
   14000260b:	mov    rdx,rsi
   14000260e:	mov    rcx,rdi
   140002611:	call   rbx
   140002613:	jmp    0x14000261a
   140002615:	mov    eax,0x8007000e
   14000261a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000261f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002624:	add    rsp,0x20
   140002628:	pop    rdi
   140002629:	ret    
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	mov    QWORD PTR [rsp+0x10],rsi
   14000263a:	push   rdi
   14000263b:	sub    rsp,0x20
   14000263f:	mov    rdi,QWORD PTR [rcx+0x10]
   140002643:	mov    esi,edx
   140002645:	test   rdi,rdi
   140002648:	je     0x140002663
   14000264a:	mov    rax,QWORD PTR [rdi]
   14000264d:	mov    rbx,QWORD PTR [rax+0x40]
   140002651:	mov    rcx,rbx
   140002654:	call   QWORD PTR [rip+0x3cb6]        # 0x140006310
   14000265a:	mov    edx,esi
   14000265c:	mov    rcx,rdi
   14000265f:	call   rbx
   140002661:	jmp    0x140002668
   140002663:	mov    eax,0x8007000e
   140002668:	mov    rbx,QWORD PTR [rsp+0x30]
   14000266d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002672:	add    rsp,0x20
   140002676:	pop    rdi
   140002677:	ret    
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	ret    0x0
   140002683:	int3   
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x28
   140002694:	test   dl,dl
   140002696:	jne    0x1400026b8
   140002698:	cmp    DWORD PTR [rcx+0x14],0x1
   14000269c:	jne    0x1400026aa
   14000269e:	mov    rdx,r8
   1400026a1:	add    rsp,0x28
   1400026a5:	jmp    0x1400026c4
   1400026aa:	cmp    DWORD PTR [rcx+0x14],0x2
   1400026ae:	jne    0x1400026b8
   1400026b0:	mov    rdx,r8
   1400026b3:	call   0x14000295c
   1400026b8:	add    rsp,0x28
   1400026bc:	ret    
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	int3   
   1400026c1:	int3   
   1400026c2:	int3   
   1400026c3:	int3   
   1400026c4:	mov    rax,rsp
   1400026c7:	mov    QWORD PTR [rax+0x10],rbx
   1400026cb:	mov    QWORD PTR [rax+0x18],rsi
   1400026cf:	mov    QWORD PTR [rax+0x20],rdi
   1400026d3:	push   rbp
   1400026d4:	lea    rbp,[rax-0x68]
   1400026d8:	sub    rsp,0x160
   1400026df:	mov    rax,QWORD PTR [rip+0x7922]        # 0x14000a008
   1400026e6:	xor    rax,rsp
   1400026e9:	mov    QWORD PTR [rbp+0x50],rax
   1400026ed:	mov    r9,QWORD PTR [rcx+0x8]
   1400026f1:	cmp    DWORD PTR [r9],0x5
   1400026f5:	jbe    0x140002931
   1400026fb:	movabs rcx,0x200000000000
   140002705:	test   QWORD PTR [r9+0x10],rcx
   140002709:	je     0x140002931
   14000270f:	mov    rax,QWORD PTR [r9+0x18]
   140002713:	and    rax,rcx
   140002716:	cmp    rax,QWORD PTR [r9+0x18]
   14000271a:	jne    0x140002931
   140002720:	mov    eax,DWORD PTR [rdx+0x4]
   140002723:	lea    r10,[rip+0x5212]        # 0x14000793c
   14000272a:	mov    rcx,QWORD PTR [rdx+0x30]
   14000272e:	xor    ebx,ebx
   140002730:	mov    DWORD PTR [rsp+0x40],eax
   140002734:	or     rdi,0xffffffffffffffff
   140002738:	mov    QWORD PTR [rsp+0x78],0x4
   140002741:	lea    rax,[rsp+0x40]
   140002746:	mov    QWORD PTR [rsp+0x70],rax
   14000274b:	mov    eax,ebx
   14000274d:	mov    r8,r10
   140002750:	test   rcx,rcx
   140002753:	je     0x140002763
   140002755:	mov    r8,rcx
   140002758:	mov    rax,rdi
   14000275b:	inc    rax
   14000275e:	cmp    BYTE PTR [rcx+rax*1],bl
   140002761:	jne    0x14000275b
   140002763:	mov    rcx,QWORD PTR [rdx+0x78]
   140002767:	inc    eax
   140002769:	mov    DWORD PTR [rbp-0x78],eax
   14000276c:	lea    rax,[rdx+0x38]
   140002770:	mov    QWORD PTR [rbp-0x70],rax
   140002774:	mov    rax,rbx
   140002777:	mov    QWORD PTR [rbp-0x80],r8
   14000277b:	mov    r8,r10
   14000277e:	mov    DWORD PTR [rbp-0x74],ebx
   140002781:	mov    QWORD PTR [rbp-0x68],0x4
   140002789:	test   rcx,rcx
   14000278c:	je     0x14000279c
   14000278e:	mov    r8,rcx
   140002791:	mov    rax,rdi
   140002794:	inc    rax
   140002797:	cmp    BYTE PTR [rcx+rax*1],bl
   14000279a:	jne    0x140002794
   14000279c:	mov    rcx,QWORD PTR [rdx+0x10]
   1400027a0:	lea    r11,[rip+0x5199]        # 0x140007940
   1400027a7:	inc    eax
   1400027a9:	mov    QWORD PTR [rbp-0x60],r8
   1400027ad:	mov    DWORD PTR [rbp-0x58],eax
   1400027b0:	mov    r8,r11
   1400027b3:	mov    eax,DWORD PTR [rdx]
   1400027b5:	mov    DWORD PTR [rsp+0x38],eax
   1400027b9:	lea    rax,[rsp+0x38]
   1400027be:	mov    QWORD PTR [rbp-0x50],rax
   1400027c2:	mov    rax,rbx
   1400027c5:	mov    DWORD PTR [rbp-0x54],ebx
   1400027c8:	mov    QWORD PTR [rbp-0x48],0x4
   1400027d0:	test   rcx,rcx
   1400027d3:	je     0x1400027e4
   1400027d5:	mov    r8,rcx
   1400027d8:	mov    rax,rdi
   1400027db:	inc    rax
   1400027de:	cmp    WORD PTR [rcx+rax*2],bx
   1400027e2:	jne    0x1400027db
   1400027e4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400027e8:	lea    eax,[rax*2+0x2]
   1400027ef:	mov    DWORD PTR [rbp-0x38],eax
   1400027f2:	mov    eax,DWORD PTR [rdx+0x18]
   1400027f5:	mov    DWORD PTR [rsp+0x30],eax
   1400027f9:	lea    rax,[rsp+0x30]
   1400027fe:	mov    QWORD PTR [rbp-0x30],rax
   140002802:	mov    rax,rbx
   140002805:	mov    QWORD PTR [rbp-0x40],r8
   140002809:	mov    r8,r10
   14000280c:	mov    DWORD PTR [rbp-0x34],ebx
   14000280f:	mov    QWORD PTR [rbp-0x28],0x4
   140002817:	test   rcx,rcx
   14000281a:	je     0x14000282a
   14000281c:	mov    r8,rcx
   14000281f:	mov    rax,rdi
   140002822:	inc    rax
   140002825:	cmp    BYTE PTR [rcx+rax*1],bl
   140002828:	jne    0x140002822
   14000282a:	mov    rcx,QWORD PTR [rdx+0x50]
   14000282e:	inc    eax
   140002830:	mov    DWORD PTR [rbp-0x18],eax
   140002833:	mov    eax,DWORD PTR [rdx+0x48]
   140002836:	mov    DWORD PTR [rsp+0x34],eax
   14000283a:	lea    rax,[rsp+0x34]
   14000283f:	mov    QWORD PTR [rbp-0x10],rax
   140002843:	mov    rax,rbx
   140002846:	mov    QWORD PTR [rbp-0x20],r8
   14000284a:	mov    r8,r10
   14000284d:	mov    DWORD PTR [rbp-0x14],ebx
   140002850:	mov    QWORD PTR [rbp-0x8],0x4
   140002858:	test   rcx,rcx
   14000285b:	je     0x14000286b
   14000285d:	mov    r8,rcx
   140002860:	mov    rax,rdi
   140002863:	inc    rax
   140002866:	cmp    BYTE PTR [rcx+rax*1],bl
   140002869:	jne    0x140002863
   14000286b:	mov    rcx,QWORD PTR [rdx+0x58]
   14000286f:	inc    eax
   140002871:	mov    DWORD PTR [rbp+0x8],eax
   140002874:	mov    rax,rbx
   140002877:	mov    QWORD PTR [rbp+0x0],r8
   14000287b:	mov    r8,r11
   14000287e:	mov    DWORD PTR [rbp+0xc],ebx
   140002881:	test   rcx,rcx
   140002884:	je     0x140002895
   140002886:	mov    r8,rcx
   140002889:	mov    rax,rdi
   14000288c:	inc    rax
   14000288f:	cmp    WORD PTR [rcx+rax*2],bx
   140002893:	jne    0x14000288c
   140002895:	mov    rcx,QWORD PTR [rdx+0x68]
   140002899:	lea    eax,[rax*2+0x2]
   1400028a0:	mov    DWORD PTR [rbp+0x18],eax
   1400028a3:	mov    eax,DWORD PTR [rdx+0x60]
   1400028a6:	mov    DWORD PTR [rsp+0x3c],eax
   1400028aa:	lea    rax,[rsp+0x3c]
   1400028af:	mov    QWORD PTR [rbp+0x20],rax
   1400028b3:	mov    rax,rbx
   1400028b6:	mov    QWORD PTR [rbp+0x10],r8
   1400028ba:	mov    DWORD PTR [rbp+0x1c],ebx
   1400028bd:	mov    QWORD PTR [rbp+0x28],0x4
   1400028c5:	test   rcx,rcx
   1400028c8:	je     0x1400028d8
   1400028ca:	mov    r10,rcx
   1400028cd:	mov    rax,rdi
   1400028d0:	inc    rax
   1400028d3:	cmp    BYTE PTR [rcx+rax*1],bl
   1400028d6:	jne    0x1400028d0
   1400028d8:	mov    rcx,QWORD PTR [rdx+0x70]
   1400028dc:	inc    eax
   1400028de:	mov    DWORD PTR [rbp+0x38],eax
   1400028e1:	mov    rax,rbx
   1400028e4:	mov    QWORD PTR [rbp+0x30],r10
   1400028e8:	mov    DWORD PTR [rbp+0x3c],ebx
   1400028eb:	test   rcx,rcx
   1400028ee:	je     0x1400028ff
   1400028f0:	mov    r11,rcx
   1400028f3:	mov    rax,rdi
   1400028f6:	inc    rax
   1400028f9:	cmp    WORD PTR [rcx+rax*2],bx
   1400028fd:	jne    0x1400028f6
   1400028ff:	lea    eax,[rax*2+0x2]
   140002906:	mov    QWORD PTR [rbp+0x40],r11
   14000290a:	mov    DWORD PTR [rbp+0x48],eax
   14000290d:	mov    DWORD PTR [rbp+0x4c],ebx
   140002910:	lea    rax,[rsp+0x50]
   140002915:	mov    rcx,r9
   140002918:	mov    QWORD PTR [rsp+0x28],rax
   14000291d:	lea    rdx,[rip+0x565d]        # 0x140007f81
   140002924:	mov    DWORD PTR [rsp+0x20],0x10
   14000292c:	call   0x1400010dc
   140002931:	mov    rcx,QWORD PTR [rbp+0x50]
   140002935:	xor    rcx,rsp
   140002938:	call   0x140003f10
   14000293d:	lea    r11,[rsp+0x160]
   140002945:	mov    rbx,QWORD PTR [r11+0x18]
   140002949:	mov    rsi,QWORD PTR [r11+0x20]
   14000294d:	mov    rdi,QWORD PTR [r11+0x28]
   140002951:	mov    rsp,r11
   140002954:	pop    rbp
   140002955:	ret    
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	mov    rax,rsp
   14000295f:	mov    QWORD PTR [rax+0x10],rbx
   140002963:	mov    QWORD PTR [rax+0x18],rsi
   140002967:	mov    QWORD PTR [rax+0x20],rdi
   14000296b:	push   rbp
   14000296c:	lea    rbp,[rax-0x98]
   140002973:	sub    rsp,0x190
   14000297a:	mov    rax,QWORD PTR [rip+0x7687]        # 0x14000a008
   140002981:	xor    rax,rsp
   140002984:	mov    QWORD PTR [rbp+0x80],rax
   14000298b:	mov    r11,QWORD PTR [rcx+0x8]
   14000298f:	cmp    DWORD PTR [r11],0x5
   140002993:	jbe    0x140002c03
   140002999:	mov    eax,DWORD PTR [rdx+0x4]
   14000299c:	lea    r9,[rip+0x4f99]        # 0x14000793c
   1400029a3:	mov    rcx,QWORD PTR [rdx+0x30]
   1400029a7:	xor    ebx,ebx
   1400029a9:	mov    DWORD PTR [rsp+0x40],eax
   1400029ad:	or     rdi,0xffffffffffffffff
   1400029b1:	mov    QWORD PTR [rsp+0x78],0x4
   1400029ba:	lea    rax,[rsp+0x40]
   1400029bf:	mov    QWORD PTR [rsp+0x70],rax
   1400029c4:	mov    eax,ebx
   1400029c6:	mov    r8,r9
   1400029c9:	test   rcx,rcx
   1400029cc:	je     0x1400029dc
   1400029ce:	mov    r8,rcx
   1400029d1:	mov    rax,rdi
   1400029d4:	inc    rax
   1400029d7:	cmp    BYTE PTR [rcx+rax*1],bl
   1400029da:	jne    0x1400029d4
   1400029dc:	mov    rcx,QWORD PTR [rdx+0x78]
   1400029e0:	inc    eax
   1400029e2:	mov    DWORD PTR [rbp-0x78],eax
   1400029e5:	lea    rax,[rdx+0x38]
   1400029e9:	mov    QWORD PTR [rbp-0x70],rax
   1400029ed:	mov    rax,rbx
   1400029f0:	mov    QWORD PTR [rbp-0x80],r8
   1400029f4:	mov    r8,r9
   1400029f7:	mov    DWORD PTR [rbp-0x74],ebx
   1400029fa:	mov    QWORD PTR [rbp-0x68],0x4
   140002a02:	test   rcx,rcx
   140002a05:	je     0x140002a15
   140002a07:	mov    r8,rcx
   140002a0a:	mov    rax,rdi
   140002a0d:	inc    rax
   140002a10:	cmp    BYTE PTR [rcx+rax*1],bl
   140002a13:	jne    0x140002a0d
   140002a15:	mov    rcx,QWORD PTR [rdx+0x10]
   140002a19:	lea    r10,[rip+0x4f20]        # 0x140007940
   140002a20:	inc    eax
   140002a22:	mov    QWORD PTR [rbp-0x60],r8
   140002a26:	mov    DWORD PTR [rbp-0x58],eax
   140002a29:	mov    r8,r10
   140002a2c:	mov    eax,DWORD PTR [rdx]
   140002a2e:	mov    DWORD PTR [rsp+0x38],eax
   140002a32:	lea    rax,[rsp+0x38]
   140002a37:	mov    QWORD PTR [rbp-0x50],rax
   140002a3b:	mov    rax,rbx
   140002a3e:	mov    DWORD PTR [rbp-0x54],ebx
   140002a41:	mov    QWORD PTR [rbp-0x48],0x4
   140002a49:	test   rcx,rcx
   140002a4c:	je     0x140002a5d
   140002a4e:	mov    r8,rcx
   140002a51:	mov    rax,rdi
   140002a54:	inc    rax
   140002a57:	cmp    WORD PTR [rcx+rax*2],bx
   140002a5b:	jne    0x140002a54
   140002a5d:	mov    rcx,QWORD PTR [rdx+0x40]
   140002a61:	lea    eax,[rax*2+0x2]
   140002a68:	mov    DWORD PTR [rbp-0x38],eax
   140002a6b:	mov    eax,DWORD PTR [rdx+0x18]
   140002a6e:	mov    DWORD PTR [rsp+0x48],eax
   140002a72:	lea    rax,[rsp+0x48]
   140002a77:	mov    QWORD PTR [rbp-0x30],rax
   140002a7b:	mov    rax,rbx
   140002a7e:	mov    QWORD PTR [rbp-0x40],r8
   140002a82:	mov    r8,r9
   140002a85:	mov    DWORD PTR [rbp-0x34],ebx
   140002a88:	mov    QWORD PTR [rbp-0x28],0x4
   140002a90:	test   rcx,rcx
   140002a93:	je     0x140002aa3
   140002a95:	mov    r8,rcx
   140002a98:	mov    rax,rdi
   140002a9b:	inc    rax
   140002a9e:	cmp    BYTE PTR [rcx+rax*1],bl
   140002aa1:	jne    0x140002a9b
   140002aa3:	mov    rcx,QWORD PTR [rdx+0x50]
   140002aa7:	inc    eax
   140002aa9:	mov    DWORD PTR [rbp-0x18],eax
   140002aac:	mov    eax,DWORD PTR [rdx+0x48]
   140002aaf:	mov    DWORD PTR [rsp+0x30],eax
   140002ab3:	lea    rax,[rsp+0x30]
   140002ab8:	mov    QWORD PTR [rbp-0x10],rax
   140002abc:	mov    rax,rbx
   140002abf:	mov    QWORD PTR [rbp-0x20],r8
   140002ac3:	mov    r8,r9
   140002ac6:	mov    DWORD PTR [rbp-0x14],ebx
   140002ac9:	mov    QWORD PTR [rbp-0x8],0x4
   140002ad1:	test   rcx,rcx
   140002ad4:	je     0x140002ae4
   140002ad6:	mov    r8,rcx
   140002ad9:	mov    rax,rdi
   140002adc:	inc    rax
   140002adf:	cmp    BYTE PTR [rcx+rax*1],bl
   140002ae2:	jne    0x140002adc
   140002ae4:	mov    rcx,QWORD PTR [rdx+0x58]
   140002ae8:	inc    eax
   140002aea:	mov    DWORD PTR [rbp+0x8],eax
   140002aed:	mov    rax,rbx
   140002af0:	mov    QWORD PTR [rbp+0x0],r8
   140002af4:	mov    r8,r10
   140002af7:	mov    DWORD PTR [rbp+0xc],ebx
   140002afa:	test   rcx,rcx
   140002afd:	je     0x140002b0e
   140002aff:	mov    r8,rcx
   140002b02:	mov    rax,rdi
   140002b05:	inc    rax
   140002b08:	cmp    WORD PTR [rcx+rax*2],bx
   140002b0c:	jne    0x140002b05
   140002b0e:	mov    rcx,QWORD PTR [rdx+0x68]
   140002b12:	lea    eax,[rax*2+0x2]
   140002b19:	mov    DWORD PTR [rbp+0x18],eax
   140002b1c:	mov    eax,DWORD PTR [rdx+0x60]
   140002b1f:	mov    DWORD PTR [rsp+0x34],eax
   140002b23:	lea    rax,[rsp+0x34]
   140002b28:	mov    QWORD PTR [rbp+0x20],rax
   140002b2c:	mov    rax,rbx
   140002b2f:	mov    QWORD PTR [rbp+0x10],r8
   140002b33:	mov    r8,r9
   140002b36:	mov    DWORD PTR [rbp+0x1c],ebx
   140002b39:	mov    QWORD PTR [rbp+0x28],0x4
   140002b41:	test   rcx,rcx
   140002b44:	je     0x140002b54
   140002b46:	mov    r8,rcx
   140002b49:	mov    rax,rdi
   140002b4c:	inc    rax
   140002b4f:	cmp    BYTE PTR [rcx+rax*1],bl
   140002b52:	jne    0x140002b4c
   140002b54:	mov    rcx,QWORD PTR [rdx+0x70]
   140002b58:	inc    eax
   140002b5a:	mov    DWORD PTR [rbp+0x38],eax
   140002b5d:	mov    rax,rbx
   140002b60:	mov    QWORD PTR [rbp+0x30],r8
   140002b64:	mov    DWORD PTR [rbp+0x3c],ebx
   140002b67:	test   rcx,rcx
   140002b6a:	je     0x140002b7b
   140002b6c:	mov    r10,rcx
   140002b6f:	mov    rax,rdi
   140002b72:	inc    rax
   140002b75:	cmp    WORD PTR [rcx+rax*2],bx
   140002b79:	jne    0x140002b72
   140002b7b:	mov    rcx,QWORD PTR [rdx+0x28]
   140002b7f:	lea    eax,[rax*2+0x2]
   140002b86:	mov    DWORD PTR [rbp+0x48],eax
   140002b89:	mov    eax,DWORD PTR [rdx+0x8]
   140002b8c:	mov    DWORD PTR [rsp+0x3c],eax
   140002b90:	lea    rax,[rsp+0x3c]
   140002b95:	mov    QWORD PTR [rbp+0x50],rax
   140002b99:	mov    eax,DWORD PTR [rdx+0x3c]
   140002b9c:	mov    DWORD PTR [rsp+0x44],eax
   140002ba0:	lea    rax,[rsp+0x44]
   140002ba5:	mov    QWORD PTR [rbp+0x60],rax
   140002ba9:	mov    rax,rbx
   140002bac:	mov    QWORD PTR [rbp+0x40],r10
   140002bb0:	mov    DWORD PTR [rbp+0x4c],ebx
   140002bb3:	mov    QWORD PTR [rbp+0x58],0x4
   140002bbb:	mov    QWORD PTR [rbp+0x68],0x4
   140002bc3:	test   rcx,rcx
   140002bc6:	je     0x140002bd6
   140002bc8:	mov    r9,rcx
   140002bcb:	mov    rax,rdi
   140002bce:	inc    rax
   140002bd1:	cmp    BYTE PTR [rcx+rax*1],bl
   140002bd4:	jne    0x140002bce
   140002bd6:	inc    eax
   140002bd8:	mov    QWORD PTR [rbp+0x70],r9
   140002bdc:	mov    DWORD PTR [rbp+0x78],eax
   140002bdf:	mov    DWORD PTR [rbp+0x7c],ebx
   140002be2:	lea    rax,[rsp+0x50]
   140002be7:	mov    rcx,r11
   140002bea:	mov    QWORD PTR [rsp+0x28],rax
   140002bef:	lea    rdx,[rip+0x548e]        # 0x140008084
   140002bf6:	mov    DWORD PTR [rsp+0x20],0x13
   140002bfe:	call   0x1400010dc
   140002c03:	mov    rcx,QWORD PTR [rbp+0x80]
   140002c0a:	xor    rcx,rsp
   140002c0d:	call   0x140003f10
   140002c12:	lea    r11,[rsp+0x190]
   140002c1a:	mov    rbx,QWORD PTR [r11+0x18]
   140002c1e:	mov    rsi,QWORD PTR [r11+0x20]
   140002c22:	mov    rdi,QWORD PTR [r11+0x28]
   140002c26:	mov    rsp,r11
   140002c29:	pop    rbp
   140002c2a:	ret    
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	mov    QWORD PTR [rsp+0x10],rsi
   140002c4a:	push   rdi
   140002c4b:	sub    rsp,0x20
   140002c4f:	mov    eax,DWORD PTR [rip+0x742f]        # 0x14000a084
   140002c55:	mov    rdi,rdx
   140002c58:	mov    r8d,DWORD PTR [rdx+0x8]
   140002c5c:	mov    rsi,rcx
   140002c5f:	cmp    eax,r8d
   140002c62:	mov    DWORD PTR [rip+0x741b],r8d        # 0x14000a084
   140002c69:	sete   al
   140002c6c:	test   al,al
   140002c6e:	jne    0x140002c8a
   140002c70:	mov    rax,QWORD PTR [rcx]
   140002c73:	mov    rbx,QWORD PTR [rax+0x10]
   140002c77:	mov    rcx,rbx
   140002c7a:	call   QWORD PTR [rip+0x3690]        # 0x140006310
   140002c80:	mov    r8,rdi
   140002c83:	xor    edx,edx
   140002c85:	mov    rcx,rsi
   140002c88:	call   rbx
   140002c8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c8f:	mov    al,0x1
   140002c91:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c96:	add    rsp,0x20
   140002c9a:	pop    rdi
   140002c9b:	ret    
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	mov    QWORD PTR [rsp+0x10],rsi
   140002cba:	push   rdi
   140002cbb:	sub    rsp,0x20
   140002cbf:	cmp    BYTE PTR [rcx+0x10],0x0
   140002cc3:	lea    rax,[rip+0x511e]        # 0x140007de8
   140002cca:	mov    QWORD PTR [rcx],rax
   140002ccd:	mov    esi,edx
   140002ccf:	mov    rdi,rcx
   140002cd2:	je     0x140002cea
   140002cd4:	mov    rbx,QWORD PTR [rcx+0x8]
   140002cd8:	mov    rcx,QWORD PTR [rbx+0x20]
   140002cdc:	call   QWORD PTR [rip+0x331e]        # 0x140006000
   140002ce2:	and    QWORD PTR [rbx+0x20],0x0
   140002ce7:	and    DWORD PTR [rbx],0x0
   140002cea:	test   sil,0x1
   140002cee:	je     0x140002cf9
   140002cf0:	mov    rcx,rdi
   140002cf3:	call   QWORD PTR [rip+0x34ef]        # 0x1400061e8
   140002cf9:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cfe:	mov    rax,rdi
   140002d01:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d06:	add    rsp,0x20
   140002d0a:	pop    rdi
   140002d0b:	ret    
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	int3   
   140002d11:	int3   
   140002d12:	int3   
   140002d13:	int3   
   140002d14:	mov    r11,rsp
   140002d17:	push   rbx
   140002d18:	sub    rsp,0x40
   140002d1c:	lea    rax,[r11+0x10]
   140002d20:	mov    DWORD PTR [rsp+0x58],0x4
   140002d28:	mov    QWORD PTR [r11-0x18],rax
   140002d2c:	lea    r8,[rip+0x4df5]        # 0x140007b28
   140002d33:	lea    rax,[r11+0x8]
   140002d37:	mov    rbx,rcx
   140002d3a:	mov    QWORD PTR [r11-0x20],rax
   140002d3e:	lea    rdx,[rip+0x4e0b]        # 0x140007b50
   140002d45:	and    QWORD PTR [r11-0x28],0x0
   140002d4a:	mov    r9d,0x10
   140002d50:	mov    rcx,0xffffffff80000001
   140002d57:	call   QWORD PTR [rip+0x32bb]        # 0x140006018
   140002d5d:	test   eax,eax
   140002d5f:	je     0x140002da1
   140002d61:	call   QWORD PTR [rip+0x3369]        # 0x1400060d0
   140002d67:	mov    DWORD PTR [rsp+0x28],0x4
   140002d6f:	lea    r8,[rip+0x4db2]        # 0x140007b28
   140002d76:	and    eax,0x7
   140002d79:	lea    rdx,[rip+0x4dd0]        # 0x140007b50
   140002d80:	mov    DWORD PTR [rsp+0x50],eax
   140002d84:	mov    r9d,0x4
   140002d8a:	lea    rax,[rsp+0x50]
   140002d8f:	mov    rcx,0xffffffff80000001
   140002d96:	mov    QWORD PTR [rsp+0x20],rax
   140002d9b:	call   QWORD PTR [rip+0x3267]        # 0x140006008
   140002da1:	mov    al,BYTE PTR [rsp+0x50]
   140002da5:	mov    BYTE PTR [rbx+0x18],al
   140002da8:	add    rsp,0x40
   140002dac:	pop    rbx
   140002dad:	ret    
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	int3   
   140002db1:	int3   
   140002db2:	int3   
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	jmp    0x140002d14
   140002dc5:	int3   
   140002dc6:	int3   
   140002dc7:	int3   
   140002dc8:	int3   
   140002dc9:	int3   
   140002dca:	int3   
   140002dcb:	int3   
   140002dcc:	int3   
   140002dcd:	int3   
   140002dce:	int3   
   140002dcf:	int3   
   140002dd0:	and    QWORD PTR [r9],0x0
   140002dd4:	mov    r10,r8
   140002dd7:	mov    rax,QWORD PTR [rdx]
   140002dda:	cmp    rax,QWORD PTR [rip+0x5057]        # 0x140007e38
   140002de1:	jne    0x140002dfb
   140002de3:	mov    rax,QWORD PTR [rdx+0x8]
   140002de7:	cmp    rax,QWORD PTR [rip+0x5052]        # 0x140007e40
   140002dee:	jne    0x140002dfb
   140002df0:	mov    r8,r9
   140002df3:	mov    rdx,r10
   140002df6:	jmp    0x140003280
   140002dfb:	mov    eax,0x80004001
   140002e00:	ret    
   140002e01:	int3   
   140002e02:	int3   
   140002e03:	int3   
   140002e04:	int3   
   140002e05:	int3   
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	xor    eax,eax
   140002e12:	ret    
   140002e13:	int3   
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    eax,0x800704c7
   140002e25:	ret    
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	mov    rax,rsp
   140002e2f:	mov    QWORD PTR [rax+0x8],rbx
   140002e33:	push   rdi
   140002e34:	sub    rsp,0x90
   140002e3b:	mov    rdi,rcx
   140002e3e:	lea    rcx,[rax+0x10]
   140002e42:	call   0x140003608
   140002e47:	mov    rbx,QWORD PTR [rsp+0xa8]
   140002e4f:	test   rbx,rbx
   140002e52:	jne    0x140002e6e
   140002e54:	mov    rcx,QWORD PTR [rsp+0x98]
   140002e5c:	lea    edx,[rbx+0x31]
   140002e5f:	mov    edi,0x8007000e
   140002e64:	mov    r9d,edi
   140002e67:	call   0x1400022f8
   140002e6c:	jmp    0x140002ec2
   140002e6e:	xor    edx,edx
   140002e70:	mov    DWORD PTR [rsp+0x20],0x70
   140002e78:	lea    rcx,[rsp+0x24]
   140002e7d:	lea    r8d,[rdx+0x6c]
   140002e81:	call   0x140004fd6
   140002e86:	lea    rcx,[rsp+0x20]
   140002e8b:	mov    DWORD PTR [rsp+0x24],0x8000100
   140002e93:	mov    DWORD PTR [rsp+0x50],0x1
   140002e9b:	mov    QWORD PTR [rsp+0x38],rdi
   140002ea0:	mov    QWORD PTR [rsp+0x58],rbx
   140002ea5:	call   QWORD PTR [rip+0x3245]        # 0x1400060f0
   140002eab:	test   eax,eax
   140002ead:	jne    0x140002ec0
   140002eaf:	mov    rcx,QWORD PTR [rsp+0x98]
   140002eb7:	call   0x140002334
   140002ebc:	mov    edi,eax
   140002ebe:	jmp    0x140002ec2
   140002ec0:	xor    edi,edi
   140002ec2:	test   rbx,rbx
   140002ec5:	je     0x140002ecf
   140002ec7:	mov    rcx,rbx
   140002eca:	call   0x140003400
   140002ecf:	mov    eax,edi
   140002ed1:	mov    rbx,QWORD PTR [rsp+0xa0]
   140002ed9:	add    rsp,0x90
   140002ee0:	pop    rdi
   140002ee1:	ret    
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	mov    DWORD PTR [rsp+0x10],edx
   140002eec:	push   rbx
   140002eed:	push   rsi
   140002eee:	push   rdi
   140002eef:	sub    rsp,0x60
   140002ef3:	xor    edi,edi
   140002ef5:	mov    rsi,rcx
   140002ef8:	mov    WORD PTR [rcx],di
   140002efb:	call   QWORD PTR [rip+0x3157]        # 0x140006058
   140002f01:	lea    r9d,[rdi+0x30]
   140002f05:	xor    edx,edx
   140002f07:	mov    rcx,rax
   140002f0a:	lea    r8,[rsp+0x30]
   140002f0f:	lea    rax,[rsp+0x88]
   140002f17:	mov    QWORD PTR [rsp+0x20],rax
   140002f1c:	call   QWORD PTR [rip+0x33de]        # 0x140006300
   140002f22:	test   eax,eax
   140002f24:	jne    0x140002f98
   140002f26:	mov    r8d,DWORD PTR [rsp+0x58]
   140002f2b:	xor    edx,edx
   140002f2d:	mov    ecx,0x410
   140002f32:	call   QWORD PTR [rip+0x3148]        # 0x140006080
   140002f38:	mov    rbx,rax
   140002f3b:	test   rax,rax
   140002f3e:	je     0x140002f98
   140002f40:	cmp    rax,0xffffffffffffffff
   140002f44:	je     0x140002f89
   140002f46:	lea    r9,[rsp+0x80]
   140002f4e:	mov    DWORD PTR [rsp+0x20],0x3
   140002f56:	lea    r8d,[rdi+0x8]
   140002f5a:	mov    rcx,rax
   140002f5d:	lea    rdx,[rsp+0x90]
   140002f65:	call   QWORD PTR [rip+0x315d]        # 0x1400060c8
   140002f6b:	test   eax,eax
   140002f6d:	je     0x140002f89
   140002f6f:	mov    rdx,QWORD PTR [rsp+0x90]
   140002f77:	mov    r9d,0x104
   140002f7d:	mov    r8,rsi
   140002f80:	mov    rcx,rbx
   140002f83:	call   QWORD PTR [rip+0x30ef]        # 0x140006078
   140002f89:	cmp    rbx,0xffffffffffffffff
   140002f8d:	je     0x140002f98
   140002f8f:	mov    rcx,rbx
   140002f92:	call   QWORD PTR [rip+0x3120]        # 0x1400060b8
   140002f98:	cmp    WORD PTR [rsi],di
   140002f9b:	setne  al
   140002f9e:	add    rsp,0x60
   140002fa2:	pop    rdi
   140002fa3:	pop    rsi
   140002fa4:	pop    rbx
   140002fa5:	ret    
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	mov    rax,rsp
   140002faf:	mov    QWORD PTR [rax+0x18],r8
   140002fb3:	push   rbp
   140002fb4:	push   rsi
   140002fb5:	push   rdi
   140002fb6:	push   r14
   140002fb8:	push   r15
   140002fba:	sub    rsp,0x30
   140002fbe:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140002fc6:	mov    QWORD PTR [rax+0x8],rbx
   140002fca:	mov    rdi,rdx
   140002fcd:	mov    rbp,rcx
   140002fd0:	xor    r15d,r15d
   140002fd3:	mov    WORD PTR [rdx],r15w
   140002fd7:	mov    QWORD PTR [rax+0x10],r15
   140002fdb:	mov    QWORD PTR [rax+0x18],r15
   140002fdf:	lea    r9,[rax+0x10]
   140002fe3:	xor    r8d,r8d
   140002fe6:	xor    edx,edx
   140002fe8:	call   QWORD PTR [rip+0x31e2]        # 0x1400061d0
   140002fee:	test   eax,eax
   140002ff0:	js     0x140003047
   140002ff2:	mov    r14,QWORD PTR [rsp+0x68]
   140002ff7:	mov    rsi,QWORD PTR [rsp+0x70]
   140002ffc:	test   rsi,rsi
   140002fff:	je     0x14000301a
   140003001:	call   QWORD PTR [rip+0x3089]        # 0x140006090
   140003007:	mov    ebx,eax
   140003009:	mov    rcx,rsi
   14000300c:	call   QWORD PTR [rip+0x30ce]        # 0x1400060e0
   140003012:	mov    ecx,ebx
   140003014:	call   QWORD PTR [rip+0x307e]        # 0x140006098
   14000301a:	mov    QWORD PTR [rsp+0x70],r15
   14000301f:	mov    rax,QWORD PTR [r14]
   140003022:	mov    rbx,QWORD PTR [rax+0x98]
   140003029:	mov    rcx,rbx
   14000302c:	call   QWORD PTR [rip+0x32de]        # 0x140006310
   140003032:	lea    rdx,[rsp+0x70]
   140003037:	mov    rcx,r14
   14000303a:	call   rbx
   14000303c:	test   eax,eax
   14000303e:	js     0x140003047
   140003040:	mov    r8,QWORD PTR [rsp+0x70]
   140003045:	jmp    0x140003053
   140003047:	mov    rcx,rbp
   14000304a:	call   QWORD PTR [rip+0x3130]        # 0x140006180
   140003050:	mov    r8,rax
   140003053:	mov    edx,0x40
   140003058:	mov    rcx,rdi
   14000305b:	call   0x140001218
   140003060:	cmp    WORD PTR [rdi],r15w
   140003064:	setne  sil
   140003068:	mov    rcx,QWORD PTR [rsp+0x70]
   14000306d:	test   rcx,rcx
   140003070:	je     0x140003079
   140003072:	call   QWORD PTR [rip+0x3068]        # 0x1400060e0
   140003078:	nop
   140003079:	mov    rdi,QWORD PTR [rsp+0x68]
   14000307e:	test   rdi,rdi
   140003081:	je     0x14000309d
   140003083:	mov    QWORD PTR [rsp+0x68],r15
   140003088:	mov    rdx,QWORD PTR [rdi]
   14000308b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000308f:	mov    rcx,rbx
   140003092:	call   QWORD PTR [rip+0x3278]        # 0x140006310
   140003098:	mov    rcx,rdi
   14000309b:	call   rbx
   14000309d:	mov    al,sil
   1400030a0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400030a5:	add    rsp,0x30
   1400030a9:	pop    r15
   1400030ab:	pop    r14
   1400030ad:	pop    rdi
   1400030ae:	pop    rsi
   1400030af:	pop    rbp
   1400030b0:	ret    
   1400030b1:	int3   
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400030bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400030c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400030c7:	push   rdi
   1400030c8:	sub    rsp,0x2d0
   1400030cf:	mov    rax,QWORD PTR [rip+0x6f32]        # 0x14000a008
   1400030d6:	xor    rax,rsp
   1400030d9:	mov    QWORD PTR [rsp+0x2c0],rax
   1400030e1:	xor    ecx,ecx
   1400030e3:	call   QWORD PTR [rip+0x30cf]        # 0x1400061b8
   1400030e9:	xor    ebp,ebp
   1400030eb:	mov    edi,eax
   1400030ed:	test   eax,eax
   1400030ef:	jns    0x14000310b
   1400030f1:	mov    rcx,QWORD PTR [rsp+0x2d8]
   1400030f9:	lea    edx,[rbp+0x77]
   1400030fc:	mov    r9d,eax
   1400030ff:	call   0x1400022f8
   140003104:	mov    esi,edi
   140003106:	jmp    0x14000323d
   14000310b:	call   QWORD PTR [rip+0x2f27]        # 0x140006038
   140003111:	mov    rcx,rax
   140003114:	lea    rdx,[rsp+0x20]
   140003119:	call   QWORD PTR [rip+0x2fd9]        # 0x1400060f8
   14000311f:	mov    rbx,rax
   140003122:	test   rax,rax
   140003125:	jne    0x140003131
   140003127:	mov    esi,0x8007000e
   14000312c:	lea    edx,[rax+0x7b]
   14000312f:	jmp    0x140003142
   140003131:	cmp    DWORD PTR [rsp+0x20],0x2
   140003136:	jge    0x140003157
   140003138:	mov    esi,0x80070057
   14000313d:	mov    edx,0x7c
   140003142:	mov    rcx,QWORD PTR [rsp+0x2d8]
   14000314a:	mov    r9d,esi
   14000314d:	call   0x1400022f8
   140003152:	jmp    0x14000322f
   140003157:	lea    rcx,[rsp+0xb0]
   14000315f:	call   0x140002ee8
   140003164:	test   al,al
   140003166:	jne    0x1400031b6
   140003168:	lea    r8,[rip+0x4a89]        # 0x140007bf8
   14000316f:	mov    edx,0x104
   140003174:	lea    rax,[rsp+0xb0]
   14000317c:	sub    r8,rax
   14000317f:	lea    rcx,[rsp+0xb0]
   140003187:	lea    rax,[rdx+0x7ffffefa]
   14000318e:	test   rax,rax
   140003191:	je     0x1400031aa
   140003193:	movzx  eax,WORD PTR [r8+rcx*1]
   140003198:	test   ax,ax
   14000319b:	je     0x1400031aa
   14000319d:	mov    WORD PTR [rcx],ax
   1400031a0:	add    rcx,0x2
   1400031a4:	sub    rdx,0x1
   1400031a8:	jne    0x140003187
   1400031aa:	test   rdx,rdx
   1400031ad:	jne    0x1400031b3
   1400031af:	sub    rcx,0x2
   1400031b3:	mov    WORD PTR [rcx],bp
   1400031b6:	mov    rsi,QWORD PTR [rbx+0x8]
   1400031ba:	lea    rdx,[rsp+0x30]
   1400031bf:	mov    rcx,rsi
   1400031c2:	call   0x140002fac
   1400031c7:	test   al,al
   1400031c9:	jne    0x140003213
   1400031cb:	lea    rcx,[rip+0x4a5e]        # 0x140007c30
   1400031d2:	mov    r8d,0x40
   1400031d8:	lea    rax,[rsp+0x30]
   1400031dd:	sub    rcx,rax
   1400031e0:	lea    rdx,[rsp+0x30]
   1400031e5:	lea    rax,[r8+0x7fffffbe]
   1400031ec:	test   rax,rax
   1400031ef:	je     0x140003207
   1400031f1:	movzx  eax,WORD PTR [rcx+rdx*1]
   1400031f5:	test   ax,ax
   1400031f8:	je     0x140003207
   1400031fa:	mov    WORD PTR [rdx],ax
   1400031fd:	add    rdx,0x2
   140003201:	sub    r8,0x1
   140003205:	jne    0x1400031e5
   140003207:	test   r8,r8
   14000320a:	jne    0x140003210
   14000320c:	sub    rdx,0x2
   140003210:	mov    WORD PTR [rdx],bp
   140003213:	lea    rdx,[rsp+0x30]
   140003218:	lea    rcx,[rsp+0xb0]
   140003220:	call   0x140003660
   140003225:	mov    rcx,rsi
   140003228:	call   0x140002e2c
   14000322d:	mov    esi,ebp
   14000322f:	test   rbx,rbx
   140003232:	je     0x14000323d
   140003234:	mov    rcx,rbx
   140003237:	call   QWORD PTR [rip+0x2e83]        # 0x1400060c0
   14000323d:	test   edi,edi
   14000323f:	js     0x140003247
   140003241:	call   QWORD PTR [rip+0x2f79]        # 0x1400061c0
   140003247:	mov    eax,esi
   140003249:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140003251:	xor    rcx,rsp
   140003254:	call   0x140003f10
   140003259:	lea    r11,[rsp+0x2d0]
   140003261:	mov    rbx,QWORD PTR [r11+0x10]
   140003265:	mov    rbp,QWORD PTR [r11+0x18]
   140003269:	mov    rsi,QWORD PTR [r11+0x20]
   14000326d:	mov    rsp,r11
   140003270:	pop    rdi
   140003271:	ret    
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    QWORD PTR [rsp+0x8],rbx
   140003285:	mov    QWORD PTR [rsp+0x10],rsi
   14000328a:	push   rdi
   14000328b:	sub    rsp,0x20
   14000328f:	xor    edi,edi
   140003291:	mov    rsi,rcx
   140003294:	mov    QWORD PTR [r8],rdi
   140003297:	cmp    DWORD PTR [rdx],edi
   140003299:	jne    0x1400032d9
   14000329b:	mov    eax,DWORD PTR [rip+0x4a33]        # 0x140007cd4
   1400032a1:	cmp    DWORD PTR [rdx+0x4],eax
   1400032a4:	jne    0x1400032d9
   1400032a6:	mov    eax,DWORD PTR [rip+0x4a2c]        # 0x140007cd8
   1400032ac:	cmp    DWORD PTR [rdx+0x8],eax
   1400032af:	jne    0x1400032d9
   1400032b1:	mov    eax,DWORD PTR [rip+0x4a25]        # 0x140007cdc
   1400032b7:	cmp    DWORD PTR [rdx+0xc],eax
   1400032ba:	jne    0x1400032d9
   1400032bc:	mov    QWORD PTR [r8],rcx
   1400032bf:	mov    rax,QWORD PTR [rcx]
   1400032c2:	mov    rbx,QWORD PTR [rax+0x8]
   1400032c6:	mov    rcx,rbx
   1400032c9:	call   QWORD PTR [rip+0x3041]        # 0x140006310
   1400032cf:	mov    rcx,rsi
   1400032d2:	call   rbx
   1400032d4:	jmp    0x1400033bb
   1400032d9:	cmp    DWORD PTR [rdx],0x6d5140c1
   1400032df:	jne    0x14000330c
   1400032e1:	mov    eax,DWORD PTR [rip+0x4995]        # 0x140007c7c
   1400032e7:	cmp    DWORD PTR [rdx+0x4],eax
   1400032ea:	jne    0x14000330c
   1400032ec:	mov    eax,DWORD PTR [rip+0x498e]        # 0x140007c80
   1400032f2:	cmp    DWORD PTR [rdx+0x8],eax
   1400032f5:	jne    0x14000330c
   1400032f7:	mov    eax,DWORD PTR [rip+0x4987]        # 0x140007c84
   1400032fd:	cmp    DWORD PTR [rdx+0xc],eax
   140003300:	jne    0x14000330c
   140003302:	mov    QWORD PTR [r8],rcx
   140003305:	mov    esi,edi
   140003307:	jmp    0x1400033a1
   14000330c:	add    rsi,0x8
   140003310:	cmp    DWORD PTR [rdx],0x35094a87
   140003316:	jne    0x14000333e
   140003318:	mov    eax,DWORD PTR [rip+0x4b0e]        # 0x140007e2c
   14000331e:	cmp    DWORD PTR [rdx+0x4],eax
   140003321:	jne    0x14000333e
   140003323:	mov    eax,DWORD PTR [rip+0x4b07]        # 0x140007e30
   140003329:	cmp    DWORD PTR [rdx+0x8],eax
   14000332c:	jne    0x14000333e
   14000332e:	mov    eax,DWORD PTR [rip+0x4b00]        # 0x140007e34
   140003334:	cmp    DWORD PTR [rdx+0xc],eax
   140003337:	jne    0x14000333e
   140003339:	mov    QWORD PTR [r8],rsi
   14000333c:	jmp    0x140003305
   14000333e:	add    rsi,0x8
   140003342:	cmp    DWORD PTR [rdx],0x94ea2b94
   140003348:	jne    0x140003372
   14000334a:	mov    eax,DWORD PTR [rip+0x4acc]        # 0x140007e1c
   140003350:	cmp    DWORD PTR [rdx+0x4],eax
   140003353:	jne    0x140003372
   140003355:	mov    eax,DWORD PTR [rip+0x4ac5]        # 0x140007e20
   14000335b:	cmp    DWORD PTR [rdx+0x8],eax
   14000335e:	jne    0x140003372
   140003360:	mov    eax,DWORD PTR [rip+0x4abe]        # 0x140007e24
   140003366:	cmp    DWORD PTR [rdx+0xc],eax
   140003369:	jne    0x140003372
   14000336b:	mov    QWORD PTR [r8],rsi
   14000336e:	mov    esi,edi
   140003370:	jmp    0x14000339d
   140003372:	cmp    DWORD PTR [rdx],0x3
   140003375:	jne    0x140003398
   140003377:	mov    eax,DWORD PTR [rip+0x4a8f]        # 0x140007e0c
   14000337d:	cmp    DWORD PTR [rdx+0x4],eax
   140003380:	jne    0x140003398
   140003382:	mov    eax,DWORD PTR [rip+0x4a88]        # 0x140007e10
   140003388:	cmp    DWORD PTR [rdx+0x8],eax
   14000338b:	jne    0x140003398
   14000338d:	mov    eax,DWORD PTR [rip+0x4a81]        # 0x140007e14
   140003393:	cmp    DWORD PTR [rdx+0xc],eax
   140003396:	je     0x14000336b
   140003398:	mov    esi,0x80004002
   14000339d:	test   esi,esi
   14000339f:	js     0x1400033b9
   1400033a1:	mov    rdi,QWORD PTR [r8]
   1400033a4:	mov    rax,QWORD PTR [rdi]
   1400033a7:	mov    rbx,QWORD PTR [rax+0x8]
   1400033ab:	mov    rcx,rbx
   1400033ae:	call   QWORD PTR [rip+0x2f5c]        # 0x140006310
   1400033b4:	mov    rcx,rdi
   1400033b7:	call   rbx
   1400033b9:	mov    edi,esi
   1400033bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033c0:	mov    eax,edi
   1400033c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033c7:	add    rsp,0x20
   1400033cb:	pop    rdi
   1400033cc:	ret    
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	int3   
   1400033d1:	int3   
   1400033d2:	int3   
   1400033d3:	int3   
   1400033d4:	int3   
   1400033d5:	int3   
   1400033d6:	int3   
   1400033d7:	int3   
   1400033d8:	int3   
   1400033d9:	int3   
   1400033da:	int3   
   1400033db:	int3   
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    eax,0x1
   1400033e5:	lock xadd DWORD PTR [rcx+0x2c],eax
   1400033ea:	inc    eax
   1400033ec:	ret    
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	int3   
   1400033f1:	int3   
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    QWORD PTR [rsp+0x8],rbx
   140003405:	mov    QWORD PTR [rsp+0x10],rsi
   14000340a:	push   rdi
   14000340b:	sub    rsp,0x20
   14000340f:	mov    rsi,rcx
   140003412:	or     edi,0xffffffff
   140003415:	lock xadd DWORD PTR [rcx+0x2c],edi
   14000341a:	sub    edi,0x1
   14000341d:	jne    0x14000345d
   14000341f:	test   rcx,rcx
   140003422:	je     0x14000343c
   140003424:	mov    rax,QWORD PTR [rcx]
   140003427:	mov    rbx,QWORD PTR [rax+0x20]
   14000342b:	mov    rcx,rbx
   14000342e:	call   QWORD PTR [rip+0x2edc]        # 0x140006310
   140003434:	lea    edx,[rdi+0x1]
   140003437:	mov    rcx,rsi
   14000343a:	call   rbx
   14000343c:	mov    rsi,QWORD PTR [rip+0x73a5]        # 0x14000a7e8
   140003443:	test   rsi,rsi
   140003446:	je     0x14000345d
   140003448:	mov    rdx,QWORD PTR [rsi]
   14000344b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000344f:	mov    rcx,rbx
   140003452:	call   QWORD PTR [rip+0x2eb8]        # 0x140006310
   140003458:	mov    rcx,rsi
   14000345b:	call   rbx
   14000345d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003462:	mov    eax,edi
   140003464:	mov    rsi,QWORD PTR [rsp+0x38]
   140003469:	add    rsp,0x20
   14000346d:	pop    rdi
   14000346e:	ret    
   14000346f:	int3   
   140003470:	int3   
   140003471:	int3   
   140003472:	int3   
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	mov    QWORD PTR [rsp+0x8],rbx
   14000347d:	push   rdi
   14000347e:	sub    rsp,0x20
   140003482:	mov    rdi,QWORD PTR [rcx]
   140003485:	test   rdi,rdi
   140003488:	je     0x1400034a3
   14000348a:	and    QWORD PTR [rcx],0x0
   14000348e:	mov    rax,QWORD PTR [rdi]
   140003491:	mov    rbx,QWORD PTR [rax+0x10]
   140003495:	mov    rcx,rbx
   140003498:	call   QWORD PTR [rip+0x2e72]        # 0x140006310
   14000349e:	mov    rcx,rdi
   1400034a1:	call   rbx
   1400034a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034a8:	add    rsp,0x20
   1400034ac:	pop    rdi
   1400034ad:	ret    
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	int3   
   1400034b1:	int3   
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	mov    rax,rsp
   1400034b7:	mov    QWORD PTR [rax+0x10],rbx
   1400034bb:	mov    QWORD PTR [rax+0x18],rbp
   1400034bf:	mov    QWORD PTR [rax+0x20],rsi
   1400034c3:	push   rdi
   1400034c4:	push   r14
   1400034c6:	push   r15
   1400034c8:	sub    rsp,0x20
   1400034cc:	xor    ebp,ebp
   1400034ce:	mov    rbx,rdx
   1400034d1:	test   r8,r8
   1400034d4:	mov    WORD PTR [rax+0x8],bp
   1400034d8:	lea    rdx,[rax+0x8]
   1400034dc:	mov    r15,r9
   1400034df:	cmovne rdx,r8
   1400034e3:	mov    rdi,rcx
   1400034e6:	test   rdx,rdx
   1400034e9:	jne    0x1400034f0
   1400034eb:	lea    esi,[rbp+0x2]
   1400034ee:	jmp    0x140003505
   1400034f0:	or     rax,0xffffffffffffffff
   1400034f4:	inc    rax
   1400034f7:	cmp    WORD PTR [rdx+rax*2],bp
   1400034fb:	jne    0x1400034f4
   1400034fd:	lea    rsi,[rax*2+0x2]
   140003505:	sub    rbx,rcx
   140003508:	shr    rsi,1
   14000350b:	shr    rbx,1
   14000350e:	cmp    rsi,rbx
   140003511:	cmovb  rbx,rsi
   140003515:	lea    r14,[rbx+rbx*1]
   140003519:	mov    r8,r14
   14000351c:	call   0x140004f38
   140003521:	test   r15,r15
   140003524:	je     0x140003534
   140003526:	cmp    rbx,0x1
   14000352a:	mov    rax,rbp
   14000352d:	cmova  rax,rdi
   140003531:	mov    QWORD PTR [r15],rax
   140003534:	cmp    rbx,rsi
   140003537:	jae    0x140003546
   140003539:	test   rbx,rbx
   14000353c:	je     0x140003546
   14000353e:	xor    eax,eax
   140003540:	mov    WORD PTR [r14+rdi*1-0x2],ax
   140003546:	mov    rbx,QWORD PTR [rsp+0x48]
   14000354b:	lea    rax,[r14+rdi*1]
   14000354f:	mov    rbp,QWORD PTR [rsp+0x50]
   140003554:	mov    rsi,QWORD PTR [rsp+0x58]
   140003559:	add    rsp,0x20
   14000355d:	pop    r15
   14000355f:	pop    r14
   140003561:	pop    rdi
   140003562:	ret    
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	mov    rax,rsp
   14000356f:	mov    QWORD PTR [rax+0x10],rbx
   140003573:	mov    QWORD PTR [rax+0x18],rsi
   140003577:	mov    QWORD PTR [rax+0x20],rdi
   14000357b:	push   r14
   14000357d:	sub    rsp,0x20
   140003581:	mov    rbx,rdx
   140003584:	mov    BYTE PTR [rax+0x8],0x0
   140003588:	test   r8,r8
   14000358b:	lea    rdx,[rax+0x8]
   14000358f:	mov    r14,r9
   140003592:	mov    rsi,rcx
   140003595:	cmovne rdx,r8
   140003599:	test   rdx,rdx
   14000359c:	jne    0x1400035a3
   14000359e:	lea    edi,[rdx+0x1]
   1400035a1:	jmp    0x1400035b3
   1400035a3:	or     rdi,0xffffffffffffffff
   1400035a7:	inc    rdi
   1400035aa:	cmp    BYTE PTR [rdx+rdi*1],0x0
   1400035ae:	jne    0x1400035a7
   1400035b0:	inc    rdi
   1400035b3:	sub    rbx,rcx
   1400035b6:	cmp    rdi,rbx
   1400035b9:	cmovb  rbx,rdi
   1400035bd:	mov    r8,rbx
   1400035c0:	call   0x140004f38
   1400035c5:	test   r14,r14
   1400035c8:	je     0x1400035d7
   1400035ca:	xor    eax,eax
   1400035cc:	cmp    rbx,0x1
   1400035d0:	cmova  rax,rsi
   1400035d4:	mov    QWORD PTR [r14],rax
   1400035d7:	cmp    rbx,rdi
   1400035da:	jae    0x1400035e7
   1400035dc:	test   rbx,rbx
   1400035df:	je     0x1400035e7
   1400035e1:	xor    eax,eax
   1400035e3:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   1400035e7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400035ec:	lea    rax,[rbx+rsi*1]
   1400035f0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400035f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400035fa:	add    rsp,0x20
   1400035fe:	pop    r14
   140003600:	ret    
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	mov    QWORD PTR [rsp+0x8],rbx
   14000360d:	push   rdi
   14000360e:	sub    rsp,0x20
   140003612:	and    QWORD PTR [rcx],0x0
   140003616:	lea    rdx,[rip+0x6b63]        # 0x14000a180
   14000361d:	mov    rbx,rcx
   140003620:	mov    ecx,0x30
   140003625:	call   0x140004218
   14000362a:	test   rax,rax
   14000362d:	je     0x14000364a
   14000362f:	mov    rcx,rax
   140003632:	call   0x140003924
   140003637:	mov    rcx,QWORD PTR [rbx]
   14000363a:	mov    rdi,rax
   14000363d:	test   rcx,rcx
   140003640:	je     0x140003647
   140003642:	call   0x140003400
   140003647:	mov    QWORD PTR [rbx],rdi
   14000364a:	mov    rax,rbx
   14000364d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003652:	add    rsp,0x20
   140003656:	pop    rdi
   140003657:	ret    
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    rax,rsp
   140003663:	mov    QWORD PTR [rax+0x8],rbx
   140003667:	mov    QWORD PTR [rax+0x10],rsi
   14000366b:	mov    QWORD PTR [rax+0x18],rdi
   14000366f:	mov    QWORD PTR [rax+0x20],r12
   140003673:	push   rbp
   140003674:	push   r13
   140003676:	push   r14
   140003678:	lea    rbp,[rax-0x5f]
   14000367c:	sub    rsp,0xb0
   140003683:	mov    rax,QWORD PTR [rip+0x697e]        # 0x14000a008
   14000368a:	xor    rax,rsp
   14000368d:	mov    QWORD PTR [rbp+0x37],rax
   140003691:	mov    eax,DWORD PTR [rip+0x7159]        # 0x14000a7f0
   140003697:	mov    rsi,rdx
   14000369a:	mov    rdi,rcx
   14000369d:	test   al,0x1
   14000369f:	jne    0x1400036b6
   1400036a1:	or     eax,0x1
   1400036a4:	lea    rcx,[rip+0x1b95]        # 0x140005240
   1400036ab:	mov    DWORD PTR [rip+0x713f],eax        # 0x14000a7f0
   1400036b1:	call   0x140003fd8
   1400036b6:	lea    r9,[rbp-0x29]
   1400036ba:	xor    edx,edx
   1400036bc:	lea    r8,[rbp-0x39]
   1400036c0:	lea    rcx,[rip+0x7131]        # 0x14000a7f8
   1400036c7:	call   QWORD PTR [rip+0x2983]        # 0x140006050
   1400036cd:	xor    r14d,r14d
   1400036d0:	cmp    DWORD PTR [rbp-0x39],r14d
   1400036d4:	je     0x14000383d
   1400036da:	lea    rax,[rip+0x46bf]        # 0x140007da0
   1400036e1:	mov    QWORD PTR [rip+0x7118],rax        # 0x14000a800
   1400036e8:	lea    r12,[rip+0x7111]        # 0x14000a800
   1400036ef:	mov    eax,DWORD PTR [rip+0x70ff]        # 0x14000a7f4
   1400036f5:	mov    QWORD PTR [rbp-0x29],r12
   1400036f9:	test   al,0x1
   1400036fb:	jne    0x140003712
   1400036fd:	or     eax,0x1
   140003700:	lea    rcx,[rip+0x1ad9]        # 0x1400051e0
   140003707:	mov    DWORD PTR [rip+0x70e7],eax        # 0x14000a7f4
   14000370d:	call   0x140003fd8
   140003712:	lea    r9,[rbp-0x31]
   140003716:	xor    edx,edx
   140003718:	lea    r8,[rbp-0x35]
   14000371c:	lea    rcx,[rip+0x71dd]        # 0x14000a900
   140003723:	call   QWORD PTR [rip+0x2927]        # 0x140006050
   140003729:	cmp    DWORD PTR [rbp-0x35],r14d
   14000372d:	je     0x1400037f2
   140003733:	lea    r13,[rip+0x71ce]        # 0x14000a908
   14000373a:	lea    rax,[rip+0x46a7]        # 0x140007de8
   140003741:	mov    QWORD PTR [rbp-0x31],r13
   140003745:	mov    QWORD PTR [rip+0x71bc],rax        # 0x14000a908
   14000374c:	mov    rax,QWORD PTR [rip+0x68f5]        # 0x14000a048
   140003753:	lea    r8,[rip+0x68e6]        # 0x14000a040
   14000375a:	mov    QWORD PTR [rip+0x71bf],r8        # 0x14000a920
   140003761:	lea    r9,[rip+0x68f8]        # 0x14000a060
   140003768:	mov    QWORD PTR [rip+0x71a1],r8        # 0x14000a910
   14000376f:	lea    rdx,[rip+0xffffffffffffd89a]        # 0x140001010
   140003776:	mov    BYTE PTR [rip+0x719b],0x1        # 0x14000a918
   14000377d:	lea    rcx,[rbp-0x21]
   140003781:	movups xmm0,XMMWORD PTR [rax-0x10]
   140003785:	mov    QWORD PTR [rip+0x68dc],r14        # 0x14000a068
   14000378c:	mov    QWORD PTR [rip+0x68dd],r14        # 0x14000a070
   140003793:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   140003798:	call   QWORD PTR [rip+0x2882]        # 0x140006020
   14000379e:	test   eax,eax
   1400037a0:	jne    0x1400037bd
   1400037a2:	mov    r8,QWORD PTR [rip+0x689f]        # 0x14000a048
   1400037a9:	lea    edx,[rax+0x2]
   1400037ac:	mov    rcx,QWORD PTR [rip+0x68ad]        # 0x14000a060
   1400037b3:	movzx  r9d,WORD PTR [r8]
   1400037b7:	call   QWORD PTR [rip+0x2853]        # 0x140006010
   1400037bd:	mov    rax,QWORD PTR [rip+0x7144]        # 0x14000a908
   1400037c4:	mov    DWORD PTR [rip+0x714e],0x1        # 0x14000a91c
   1400037ce:	mov    rbx,QWORD PTR [rax+0x8]
   1400037d2:	mov    rcx,rbx
   1400037d5:	call   QWORD PTR [rip+0x2b35]        # 0x140006310
   1400037db:	mov    rcx,r13
   1400037de:	call   rbx
   1400037e0:	mov    r8,r13
   1400037e3:	lea    rcx,[rip+0x7116]        # 0x14000a900
   1400037ea:	xor    edx,edx
   1400037ec:	call   QWORD PTR [rip+0x284e]        # 0x140006040
   1400037f2:	mov    rax,QWORD PTR [rbp-0x31]
   1400037f6:	mov    rdx,QWORD PTR [rax+0x8]
   1400037fa:	mov    rax,QWORD PTR [rip+0x6fff]        # 0x14000a800
   140003801:	mov    QWORD PTR [rip+0x7000],rdx        # 0x14000a808
   140003808:	mov    BYTE PTR [rip+0x7001],r14b        # 0x14000a810
   14000380f:	mov    DWORD PTR [rip+0x6ffb],0x1        # 0x14000a814
   140003819:	mov    rbx,QWORD PTR [rax+0x8]
   14000381d:	mov    rcx,rbx
   140003820:	call   QWORD PTR [rip+0x2aea]        # 0x140006310
   140003826:	mov    rcx,r12
   140003829:	call   rbx
   14000382b:	mov    r8,r12
   14000382e:	lea    rcx,[rip+0x6fc3]        # 0x14000a7f8
   140003835:	xor    edx,edx
   140003837:	call   QWORD PTR [rip+0x2803]        # 0x140006040
   14000383d:	mov    rax,QWORD PTR [rbp-0x29]
   140003841:	mov    rcx,QWORD PTR [rax+0x8]
   140003845:	cmp    DWORD PTR [rcx],0x5
   140003848:	jbe    0x1400038ee
   14000384e:	movabs rdx,0x200000000000
   140003858:	test   QWORD PTR [rcx+0x10],rdx
   14000385c:	je     0x1400038ee
   140003862:	mov    rax,QWORD PTR [rcx+0x18]
   140003866:	and    rax,rdx
   140003869:	cmp    rax,QWORD PTR [rcx+0x18]
   14000386d:	jne    0x1400038ee
   14000386f:	or     r9,0xffffffffffffffff
   140003873:	lea    rdx,[rip+0x40c6]        # 0x140007940
   14000387a:	mov    r8,rdx
   14000387d:	mov    rax,r14
   140003880:	test   rdi,rdi
   140003883:	je     0x140003895
   140003885:	mov    r8,rdi
   140003888:	mov    rax,r9
   14000388b:	inc    rax
   14000388e:	cmp    WORD PTR [rdi+rax*2],r14w
   140003893:	jne    0x14000388b
   140003895:	mov    QWORD PTR [rbp+0x17],r8
   140003899:	lea    eax,[rax*2+0x2]
   1400038a0:	mov    DWORD PTR [rbp+0x1f],eax
   1400038a3:	mov    rax,r14
   1400038a6:	mov    DWORD PTR [rbp+0x23],r14d
   1400038aa:	test   rsi,rsi
   1400038ad:	je     0x1400038bf
   1400038af:	mov    rdx,rsi
   1400038b2:	mov    rax,r9
   1400038b5:	inc    rax
   1400038b8:	cmp    WORD PTR [rsi+rax*2],r14w
   1400038bd:	jne    0x1400038b5
   1400038bf:	lea    eax,[rax*2+0x2]
   1400038c6:	mov    QWORD PTR [rbp+0x27],rdx
   1400038ca:	mov    DWORD PTR [rbp+0x2f],eax
   1400038cd:	mov    DWORD PTR [rbp+0x33],r14d
   1400038d1:	lea    rax,[rbp-0x9]
   1400038d5:	mov    QWORD PTR [rsp+0x28],rax
   1400038da:	lea    rdx,[rip+0x48c9]        # 0x1400081aa
   1400038e1:	mov    DWORD PTR [rsp+0x20],0x4
   1400038e9:	call   0x1400010dc
   1400038ee:	mov    rcx,QWORD PTR [rbp+0x37]
   1400038f2:	xor    rcx,rsp
   1400038f5:	call   0x140003f10
   1400038fa:	lea    r11,[rsp+0xb0]
   140003902:	mov    rbx,QWORD PTR [r11+0x20]
   140003906:	mov    rsi,QWORD PTR [r11+0x28]
   14000390a:	mov    rdi,QWORD PTR [r11+0x30]
   14000390e:	mov    r12,QWORD PTR [r11+0x38]
   140003912:	mov    rsp,r11
   140003915:	pop    r14
   140003917:	pop    r13
   140003919:	pop    rbp
   14000391a:	ret    
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	int3   
   140003921:	int3   
   140003922:	int3   
   140003923:	int3   
   140003924:	mov    r11,rsp
   140003927:	mov    QWORD PTR [r11+0x10],rbx
   14000392b:	mov    QWORD PTR [r11+0x18],rsi
   14000392f:	mov    QWORD PTR [r11+0x20],rdi
   140003933:	push   r14
   140003935:	sub    rsp,0x20
   140003939:	and    QWORD PTR [r11+0x8],0x0
   14000393e:	lea    r14,[rcx+0x20]
   140003942:	lea    rax,[rip+0x433f]        # 0x140007c88
   140003949:	mov    rsi,rcx
   14000394c:	mov    QWORD PTR [rcx+0x10],rax
   140003950:	lea    rdx,[r11+0x8]
   140003954:	and    QWORD PTR [r14],0x0
   140003958:	xor    ecx,ecx
   14000395a:	call   QWORD PTR [rip+0x27a8]        # 0x140006108
   140003960:	test   eax,eax
   140003962:	js     0x1400039a8
   140003964:	mov    rdi,QWORD PTR [r14]
   140003967:	test   rdi,rdi
   14000396a:	je     0x140003985
   14000396c:	and    QWORD PTR [r14],0x0
   140003970:	mov    rax,QWORD PTR [rdi]
   140003973:	mov    rbx,QWORD PTR [rax+0x10]
   140003977:	mov    rcx,rbx
   14000397a:	call   QWORD PTR [rip+0x2990]        # 0x140006310
   140003980:	mov    rcx,rdi
   140003983:	call   rbx
   140003985:	mov    rbx,QWORD PTR [rsp+0x30]
   14000398a:	mov    rax,QWORD PTR [rbx]
   14000398d:	mov    rdi,QWORD PTR [rax]
   140003990:	mov    rcx,rdi
   140003993:	call   QWORD PTR [rip+0x2977]        # 0x140006310
   140003999:	mov    r8,r14
   14000399c:	lea    rdx,[rip+0x4465]        # 0x140007e08
   1400039a3:	mov    rcx,rbx
   1400039a6:	call   rdi
   1400039a8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400039ad:	test   rdi,rdi
   1400039b0:	je     0x1400039cd
   1400039b2:	and    QWORD PTR [rsp+0x30],0x0
   1400039b8:	mov    rax,QWORD PTR [rdi]
   1400039bb:	mov    rbx,QWORD PTR [rax+0x10]
   1400039bf:	mov    rcx,rbx
   1400039c2:	call   QWORD PTR [rip+0x2948]        # 0x140006310
   1400039c8:	mov    rcx,rdi
   1400039cb:	call   rbx
   1400039cd:	mov    rdi,QWORD PTR [rip+0x6e14]        # 0x14000a7e8
   1400039d4:	lea    rax,[rip+0x439d]        # 0x140007d78
   1400039db:	mov    QWORD PTR [rsi],rax
   1400039de:	lea    rax,[rip+0x42fb]        # 0x140007ce0
   1400039e5:	mov    QWORD PTR [rsi+0x8],rax
   1400039e9:	lea    rax,[rip+0x4340]        # 0x140007d30
   1400039f0:	mov    QWORD PTR [rsi+0x10],rax
   1400039f4:	mov    DWORD PTR [rsi+0x2c],0x1
   1400039fb:	test   rdi,rdi
   1400039fe:	je     0x140003a15
   140003a00:	mov    rax,QWORD PTR [rdi]
   140003a03:	mov    rbx,QWORD PTR [rax+0x8]
   140003a07:	mov    rcx,rbx
   140003a0a:	call   QWORD PTR [rip+0x2900]        # 0x140006310
   140003a10:	mov    rcx,rdi
   140003a13:	call   rbx
   140003a15:	mov    rbx,QWORD PTR [rsp+0x38]
   140003a1a:	lea    rax,[rip+0x42e7]        # 0x140007d08
   140003a21:	mov    rdi,QWORD PTR [rsp+0x48]
   140003a26:	mov    QWORD PTR [rsi],rax
   140003a29:	lea    rax,[rip+0x4390]        # 0x140007dc0
   140003a30:	mov    QWORD PTR [rsi+0x8],rax
   140003a34:	lea    rax,[rip+0x42f5]        # 0x140007d30
   140003a3b:	mov    QWORD PTR [rsi+0x10],rax
   140003a3f:	mov    rax,rsi
   140003a42:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a47:	add    rsp,0x20
   140003a4b:	pop    r14
   140003a4d:	ret    
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	int3   
   140003a51:	int3   
   140003a52:	int3   
   140003a53:	int3   
   140003a54:	int3   
   140003a55:	int3   
   140003a56:	int3   
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	mov    QWORD PTR [rsp+0x8],rbx
   140003a65:	mov    QWORD PTR [rsp+0x10],rbp
   140003a6a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a6f:	push   rdi
   140003a70:	sub    rsp,0x20
   140003a74:	mov    DWORD PTR [rcx+0x2c],0xc0000001
   140003a7b:	mov    ebp,edx
   140003a7d:	mov    rsi,QWORD PTR [rcx+0x20]
   140003a81:	mov    rdi,rcx
   140003a84:	test   rsi,rsi
   140003a87:	je     0x140003aa3
   140003a89:	and    QWORD PTR [rcx+0x20],0x0
   140003a8e:	mov    rax,QWORD PTR [rsi]
   140003a91:	mov    rbx,QWORD PTR [rax+0x10]
   140003a95:	mov    rcx,rbx
   140003a98:	call   QWORD PTR [rip+0x2872]        # 0x140006310
   140003a9e:	mov    rcx,rsi
   140003aa1:	call   rbx
   140003aa3:	test   bpl,0x1
   140003aa7:	je     0x140003ab2
   140003aa9:	mov    rcx,rdi
   140003aac:	call   QWORD PTR [rip+0x2736]        # 0x1400061e8
   140003ab2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ab7:	mov    rax,rdi
   140003aba:	mov    rbp,QWORD PTR [rsp+0x38]
   140003abf:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ac4:	add    rsp,0x20
   140003ac8:	pop    rdi
   140003ac9:	ret    
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	sub    rcx,0x8
   140003ad4:	jmp    0x140003280
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	sub    rcx,0x10
   140003ae4:	jmp    0x1400033e0
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	sub    rcx,0x10
   140003af4:	jmp    0x140003280
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	sub    rcx,0x8
   140003b04:	jmp    0x140003400
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	sub    rcx,0x10
   140003b14:	jmp    0x140003400
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	sub    rcx,0x8
   140003b24:	jmp    0x1400033e0
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	sub    rsp,0x28
   140003b34:	mov    eax,0x5a4d
   140003b39:	cmp    WORD PTR [rip+0xffffffffffffc4c0],ax        # 0x140000000
   140003b40:	je     0x140003b46
   140003b42:	xor    eax,eax
   140003b44:	jmp    0x140003b95
   140003b46:	movsxd rcx,DWORD PTR [rip+0xffffffffffffc4ef]        # 0x14000003c
   140003b4d:	lea    rax,[rip+0xffffffffffffc4ac]        # 0x140000000
   140003b54:	add    rcx,rax
   140003b57:	cmp    DWORD PTR [rcx],0x4550
   140003b5d:	jne    0x140003b42
   140003b5f:	movzx  eax,WORD PTR [rcx+0x18]
   140003b63:	cmp    eax,0x10b
   140003b68:	je     0x140003b84
   140003b6a:	cmp    eax,0x20b
   140003b6f:	jne    0x140003b42
   140003b71:	xor    eax,eax
   140003b73:	cmp    DWORD PTR [rcx+0x84],0xe
   140003b7a:	jbe    0x140003b95
   140003b7c:	cmp    DWORD PTR [rcx+0xf8],eax
   140003b82:	jmp    0x140003b92
   140003b84:	xor    eax,eax
   140003b86:	cmp    DWORD PTR [rcx+0x74],0xe
   140003b8a:	jbe    0x140003b95
   140003b8c:	cmp    DWORD PTR [rcx+0xe8],eax
   140003b92:	setne  al
   140003b95:	mov    ecx,0x2
   140003b9a:	mov    DWORD PTR [rip+0x6608],eax        # 0x14000a1a8
   140003ba0:	call   0x140004308
   140003ba5:	mov    ecx,eax
   140003ba7:	call   QWORD PTR [rip+0x26bb]        # 0x140006268
   140003bad:	mov    rcx,QWORD PTR [rip+0x2674]        # 0x140006228
   140003bb4:	or     rax,0xffffffffffffffff
   140003bb8:	mov    QWORD PTR [rip+0x6d79],rax        # 0x14000a938
   140003bbf:	mov    QWORD PTR [rip+0x6d7a],rax        # 0x14000a940
   140003bc6:	mov    eax,DWORD PTR [rip+0x6b60]        # 0x14000a72c
   140003bcc:	mov    DWORD PTR [rcx],eax
   140003bce:	mov    rcx,QWORD PTR [rip+0x264b]        # 0x140006220
   140003bd5:	mov    eax,DWORD PTR [rip+0x6b45]        # 0x14000a720
   140003bdb:	mov    DWORD PTR [rcx],eax
   140003bdd:	call   0x140002e10
   140003be2:	cmp    DWORD PTR [rip+0x6417],0x0        # 0x14000a000
   140003be9:	jne    0x140003bf8
   140003beb:	lea    rcx,[rip+0xfffffffffffff21e]        # 0x140002e10
   140003bf2:	call   QWORD PTR [rip+0x2650]        # 0x140006248
   140003bf8:	xor    eax,eax
   140003bfa:	add    rsp,0x28
   140003bfe:	ret    
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	int3   
   140003c05:	int3   
   140003c06:	int3   
   140003c07:	int3   
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	sub    rsp,0x38
   140003c14:	mov    eax,DWORD PTR [rip+0x6b0e]        # 0x14000a728
   140003c1a:	lea    r8,[rip+0x657f]        # 0x14000a1a0
   140003c21:	mov    r9d,DWORD PTR [rip+0x6afc]        # 0x14000a724
   140003c28:	lea    rdx,[rip+0x6569]        # 0x14000a198
   140003c2f:	mov    DWORD PTR [rip+0x6577],eax        # 0x14000a1ac
   140003c35:	lea    rcx,[rip+0x6554]        # 0x14000a190
   140003c3c:	lea    rax,[rip+0x6569]        # 0x14000a1ac
   140003c43:	mov    QWORD PTR [rsp+0x20],rax
   140003c48:	call   QWORD PTR [rip+0x2622]        # 0x140006270
   140003c4e:	mov    DWORD PTR [rip+0x6540],eax        # 0x14000a194
   140003c54:	add    rsp,0x38
   140003c58:	ret    
   140003c59:	int3   
   140003c5a:	int3   
   140003c5b:	int3   
   140003c5c:	int3   
   140003c5d:	int3   
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	mov    QWORD PTR [rsp+0x8],rbx
   140003c65:	mov    QWORD PTR [rsp+0x10],rsi
   140003c6a:	mov    QWORD PTR [rsp+0x18],rdi
   140003c6f:	push   r12
   140003c71:	push   r14
   140003c73:	push   r15
   140003c75:	sub    rsp,0xb0
   140003c7c:	xor    r15d,r15d
   140003c7f:	mov    DWORD PTR [rsp+0x20],r15d
   140003c84:	lea    rcx,[rsp+0x40]
   140003c89:	call   QWORD PTR [rip+0x24a1]        # 0x140006130
   140003c8f:	nop
   140003c90:	mov    rax,QWORD PTR gs:0x30
   140003c99:	mov    rbx,QWORD PTR [rax+0x8]
   140003c9d:	mov    r14d,r15d
   140003ca0:	xor    eax,eax
   140003ca2:	lock cmpxchg QWORD PTR [rip+0x6c7d],rbx        # 0x14000a928
   140003cab:	je     0x140003cc9
   140003cad:	cmp    rax,rbx
   140003cb0:	jne    0x140003cbc
   140003cb2:	mov    edi,0x1
   140003cb7:	mov    r14d,edi
   140003cba:	jmp    0x140003cce
   140003cbc:	mov    ecx,0x3e8
   140003cc1:	call   QWORD PTR [rip+0x24c9]        # 0x140006190
   140003cc7:	jmp    0x140003ca0
   140003cc9:	mov    edi,0x1
   140003cce:	mov    eax,DWORD PTR [rip+0x6c5c]        # 0x14000a930
   140003cd4:	cmp    eax,edi
   140003cd6:	jne    0x140003ce6
   140003cd8:	mov    esi,0x1f
   140003cdd:	mov    ecx,esi
   140003cdf:	call   0x140004354
   140003ce4:	jmp    0x140003d57
   140003ce6:	mov    eax,DWORD PTR [rip+0x6c44]        # 0x14000a930
   140003cec:	test   eax,eax
   140003cee:	jne    0x140003d4c
   140003cf0:	mov    DWORD PTR [rip+0x6c3a],edi        # 0x14000a930
   140003cf6:	lea    r12,[rip+0x267b]        # 0x140006378
   140003cfd:	lea    rbx,[rip+0x265c]        # 0x140006360
   140003d04:	mov    QWORD PTR [rsp+0x30],rbx
   140003d09:	mov    eax,r15d
   140003d0c:	mov    DWORD PTR [rsp+0x24],eax
   140003d10:	cmp    rbx,r12
   140003d13:	jae    0x140003d3e
   140003d15:	test   eax,eax
   140003d17:	jne    0x140003d42
   140003d19:	mov    rsi,QWORD PTR [rbx]
   140003d1c:	test   rsi,rsi
   140003d1f:	je     0x140003d33
   140003d21:	mov    rcx,rsi
   140003d24:	mov    rax,QWORD PTR [rip+0x25e5]        # 0x140006310
   140003d2b:	call   rax
   140003d2d:	call   rsi
   140003d2f:	mov    DWORD PTR [rsp+0x24],eax
   140003d33:	add    rbx,0x8
   140003d37:	mov    QWORD PTR [rsp+0x30],rbx
   140003d3c:	jmp    0x140003d10
   140003d3e:	test   eax,eax
   140003d40:	je     0x140003d52
   140003d42:	mov    eax,0xff
   140003d47:	jmp    0x140003eb3
   140003d4c:	mov    DWORD PTR [rip+0x6436],edi        # 0x14000a188
   140003d52:	mov    esi,0x1f
   140003d57:	mov    eax,DWORD PTR [rip+0x6bd3]        # 0x14000a930
   140003d5d:	cmp    eax,edi
   140003d5f:	jne    0x140003d7e
   140003d61:	lea    rdx,[rip+0x25f0]        # 0x140006358
   140003d68:	lea    rcx,[rip+0x25b1]        # 0x140006320
   140003d6f:	call   0x14000451a
   140003d74:	mov    DWORD PTR [rip+0x6bb2],0x2        # 0x14000a930
   140003d7e:	test   r14d,r14d
   140003d81:	jne    0x140003d8d
   140003d83:	mov    rax,r15
   140003d86:	xchg   QWORD PTR [rip+0x6b9b],rax        # 0x14000a928
   140003d8d:	cmp    QWORD PTR [rip+0x6bb4],r15        # 0x14000a948
   140003d94:	je     0x140003dc4
   140003d96:	lea    rcx,[rip+0x6bab]        # 0x14000a948
   140003d9d:	call   0x1400043b0
   140003da2:	test   eax,eax
   140003da4:	je     0x140003dc4
   140003da6:	mov    rbx,QWORD PTR [rip+0x6b9b]        # 0x14000a948
   140003dad:	mov    rcx,rbx
   140003db0:	mov    rax,QWORD PTR [rip+0x2559]        # 0x140006310
   140003db7:	call   rax
   140003db9:	xor    r8d,r8d
   140003dbc:	lea    edx,[r8+0x2]
   140003dc0:	xor    ecx,ecx
   140003dc2:	call   rbx
   140003dc4:	mov    rax,QWORD PTR [rip+0x24e5]        # 0x1400062b0
   140003dcb:	mov    rdx,QWORD PTR [rax]
   140003dce:	test   rdx,rdx
   140003dd1:	jne    0x140003ddd
   140003dd3:	mov    eax,0xff
   140003dd8:	jmp    0x140003eb3
   140003ddd:	mov    QWORD PTR [rsp+0x28],rdx
   140003de2:	mov    ecx,DWORD PTR [rsp+0x20]
   140003de6:	cmp    WORD PTR [rdx],0x20
   140003dea:	ja     0x140003e64
   140003dec:	cmp    WORD PTR [rdx],r15w
   140003df0:	je     0x140003df6
   140003df2:	test   ecx,ecx
   140003df4:	jne    0x140003e64
   140003df6:	movzx  eax,WORD PTR [rdx]
   140003df9:	sub    ax,di
   140003dfc:	cmp    ax,si
   140003dff:	ja     0x140003e0c
   140003e01:	add    rdx,0x2
   140003e05:	mov    QWORD PTR [rsp+0x28],rdx
   140003e0a:	jmp    0x140003df6
   140003e0c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140003e10:	movzx  eax,WORD PTR [rsp+0x80]
   140003e18:	mov    r9d,0xa
   140003e1e:	and    cl,dil
   140003e21:	cmovne r9d,eax
   140003e25:	mov    r8,rdx
   140003e28:	xor    edx,edx
   140003e2a:	lea    rcx,[rip+0xffffffffffffc1cf]        # 0x140000000
   140003e31:	call   0x1400030b8
   140003e36:	mov    DWORD PTR [rip+0x6348],eax        # 0x14000a184
   140003e3c:	cmp    DWORD PTR [rip+0x6365],r15d        # 0x14000a1a8
   140003e43:	jne    0x140003e4d
   140003e45:	mov    ecx,eax
   140003e47:	call   QWORD PTR [rip+0x2413]        # 0x140006260
   140003e4d:	cmp    DWORD PTR [rip+0x6334],r15d        # 0x14000a188
   140003e54:	jne    0x140003e62
   140003e56:	call   QWORD PTR [rip+0x23f4]        # 0x140006250
   140003e5c:	mov    eax,DWORD PTR [rip+0x6322]        # 0x14000a184
   140003e62:	jmp    0x140003eb3
   140003e64:	cmp    WORD PTR [rdx],0x22
   140003e68:	jne    0x140003e78
   140003e6a:	mov    eax,r15d
   140003e6d:	test   ecx,ecx
   140003e6f:	sete   al
   140003e72:	mov    ecx,eax
   140003e74:	mov    DWORD PTR [rsp+0x20],eax
   140003e78:	add    rdx,0x2
   140003e7c:	mov    QWORD PTR [rsp+0x28],rdx
   140003e81:	jmp    0x140003de6
   140003e86:	mov    DWORD PTR [rip+0x62f8],eax        # 0x14000a184
   140003e8c:	cmp    DWORD PTR [rip+0x6315],0x0        # 0x14000a1a8
   140003e93:	jne    0x140003e9e
   140003e95:	mov    ecx,eax
   140003e97:	call   QWORD PTR [rip+0x23bb]        # 0x140006258
   140003e9d:	int3   
   140003e9e:	cmp    DWORD PTR [rip+0x62e3],0x0        # 0x14000a188
   140003ea5:	jne    0x140003eb3
   140003ea7:	call   QWORD PTR [rip+0x23a3]        # 0x140006250
   140003ead:	mov    eax,DWORD PTR [rip+0x62d1]        # 0x14000a184
   140003eb3:	lea    r11,[rsp+0xb0]
   140003ebb:	mov    rbx,QWORD PTR [r11+0x20]
   140003ebf:	mov    rsi,QWORD PTR [r11+0x28]
   140003ec3:	mov    rdi,QWORD PTR [r11+0x30]
   140003ec7:	mov    rsp,r11
   140003eca:	pop    r15
   140003ecc:	pop    r14
   140003ece:	pop    r12
   140003ed0:	ret    
   140003ed1:	int3   
   140003ed2:	int3   
   140003ed3:	int3   
   140003ed4:	int3   
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	sub    rsp,0x28
   140003ee4:	call   0x140004444
   140003ee9:	add    rsp,0x28
   140003eed:	jmp    0x140003c60
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	int3   
   140003f01:	int3   
   140003f02:	int3   
   140003f03:	int3   
   140003f04:	int3   
   140003f05:	int3   
   140003f06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003f10:	cmp    rcx,QWORD PTR [rip+0x60f1]        # 0x14000a008
   140003f17:	jne    0x140003f29
   140003f19:	rol    rcx,0x10
   140003f1d:	test   cx,0xffff
   140003f22:	jne    0x140003f25
   140003f24:	ret    
   140003f25:	ror    rcx,0x10
   140003f29:	jmp    0x140004060
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	int3   
   140003f31:	int3   
   140003f32:	int3   
   140003f33:	int3   
   140003f34:	mov    QWORD PTR [rsp+0x8],rbx
   140003f39:	push   rdi
   140003f3a:	sub    rsp,0x20
   140003f3e:	mov    rdi,rcx
   140003f41:	mov    rax,QWORD PTR [rip+0x69f8]        # 0x14000a940
   140003f48:	mov    QWORD PTR [rsp+0x38],rax
   140003f4d:	cmp    rax,0xffffffffffffffff
   140003f51:	jne    0x140003f6a
   140003f53:	mov    rbx,QWORD PTR [rip+0x229e]        # 0x1400061f8
   140003f5a:	mov    rcx,rbx
   140003f5d:	call   QWORD PTR [rip+0x23ad]        # 0x140006310
   140003f63:	mov    rcx,rdi
   140003f66:	call   rbx
   140003f68:	jmp    0x140003fc7
   140003f6a:	mov    ecx,0x8
   140003f6f:	call   0x140004532
   140003f74:	nop
   140003f75:	mov    rax,QWORD PTR [rip+0x69c4]        # 0x14000a940
   140003f7c:	mov    QWORD PTR [rsp+0x38],rax
   140003f81:	mov    rax,QWORD PTR [rip+0x69b0]        # 0x14000a938
   140003f88:	mov    QWORD PTR [rsp+0x40],rax
   140003f8d:	lea    r8,[rsp+0x40]
   140003f92:	lea    rdx,[rsp+0x38]
   140003f97:	mov    rcx,rdi
   140003f9a:	call   0x14000454a
   140003f9f:	mov    rbx,rax
   140003fa2:	mov    rdx,QWORD PTR [rsp+0x38]
   140003fa7:	mov    QWORD PTR [rip+0x6992],rdx        # 0x14000a940
   140003fae:	mov    rdx,QWORD PTR [rsp+0x40]
   140003fb3:	mov    QWORD PTR [rip+0x697e],rdx        # 0x14000a938
   140003fba:	mov    ecx,0x8
   140003fbf:	call   0x14000453e
   140003fc4:	mov    rax,rbx
   140003fc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fcc:	add    rsp,0x20
   140003fd0:	pop    rdi
   140003fd1:	ret    
   140003fd2:	int3   
   140003fd3:	int3   
   140003fd4:	int3   
   140003fd5:	int3   
   140003fd6:	int3   
   140003fd7:	int3   
   140003fd8:	sub    rsp,0x28
   140003fdc:	call   0x140003f34
   140003fe1:	neg    rax
   140003fe4:	sbb    eax,eax
   140003fe6:	neg    eax
   140003fe8:	dec    eax
   140003fea:	add    rsp,0x28
   140003fee:	ret    
   140003fef:	int3   
   140003ff0:	int3   
   140003ff1:	int3   
   140003ff2:	int3   
   140003ff3:	int3   
   140003ff4:	int3   
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	jmp    QWORD PTR [rip+0x2282]        # 0x140006288
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	jmp    QWORD PTR [rip+0x21d6]        # 0x1400061e8
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	rex push rbx
   14000401a:	sub    rsp,0x20
   14000401e:	mov    rbx,rcx
   140004021:	xor    ecx,ecx
   140004023:	call   QWORD PTR [rip+0x20f7]        # 0x140006120
   140004029:	mov    rcx,rbx
   14000402c:	call   QWORD PTR [rip+0x20e6]        # 0x140006118
   140004032:	call   QWORD PTR [rip+0x2020]        # 0x140006058
   140004038:	mov    rcx,rax
   14000403b:	mov    edx,0xc0000409
   140004040:	add    rsp,0x20
   140004044:	pop    rbx
   140004045:	rex.W jmp QWORD PTR [rip+0x20ec]        # 0x140006138
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	int3   
   140004051:	int3   
   140004052:	int3   
   140004053:	int3   
   140004054:	int3   
   140004055:	int3   
   140004056:	int3   
   140004057:	int3   
   140004058:	int3   
   140004059:	int3   
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	mov    QWORD PTR [rsp+0x8],rcx
   140004065:	sub    rsp,0x88
   14000406c:	lea    rcx,[rip+0x61dd]        # 0x14000a250
   140004073:	call   QWORD PTR [rip+0x20f7]        # 0x140006170
   140004079:	mov    rax,QWORD PTR [rip+0x62c8]        # 0x14000a348
   140004080:	mov    QWORD PTR [rsp+0x48],rax
   140004085:	xor    r8d,r8d
   140004088:	lea    rdx,[rsp+0x50]
   14000408d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004092:	call   QWORD PTR [rip+0x20d0]        # 0x140006168
   140004098:	mov    QWORD PTR [rsp+0x40],rax
   14000409d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400040a3:	je     0x1400040e7
   1400040a5:	mov    QWORD PTR [rsp+0x38],0x0
   1400040ae:	lea    rax,[rsp+0x58]
   1400040b3:	mov    QWORD PTR [rsp+0x30],rax
   1400040b8:	lea    rax,[rsp+0x60]
   1400040bd:	mov    QWORD PTR [rsp+0x28],rax
   1400040c2:	lea    rax,[rip+0x6187]        # 0x14000a250
   1400040c9:	mov    QWORD PTR [rsp+0x20],rax
   1400040ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400040d3:	mov    r8,QWORD PTR [rsp+0x48]
   1400040d8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400040dd:	xor    ecx,ecx
   1400040df:	call   QWORD PTR [rip+0x207b]        # 0x140006160
   1400040e5:	jmp    0x14000410a
   1400040e7:	mov    rax,QWORD PTR [rip+0x61fa]        # 0x14000a2e8
   1400040ee:	mov    rax,QWORD PTR [rax]
   1400040f1:	mov    QWORD PTR [rip+0x6250],rax        # 0x14000a348
   1400040f8:	mov    rax,QWORD PTR [rip+0x61e9]        # 0x14000a2e8
   1400040ff:	add    rax,0x8
   140004103:	mov    QWORD PTR [rip+0x61de],rax        # 0x14000a2e8
   14000410a:	mov    rax,QWORD PTR [rip+0x6237]        # 0x14000a348
   140004111:	mov    QWORD PTR [rip+0x60a8],rax        # 0x14000a1c0
   140004118:	mov    rax,QWORD PTR [rsp+0x90]
   140004120:	mov    QWORD PTR [rip+0x61a9],rax        # 0x14000a2d0
   140004127:	mov    DWORD PTR [rip+0x607f],0xc0000409        # 0x14000a1b0
   140004131:	mov    DWORD PTR [rip+0x6079],0x1        # 0x14000a1b4
   14000413b:	mov    DWORD PTR [rip+0x6083],0x3        # 0x14000a1c8
   140004145:	mov    eax,0x8
   14000414a:	imul   rax,rax,0x0
   14000414e:	lea    rcx,[rip+0x607b]        # 0x14000a1d0
   140004155:	mov    QWORD PTR [rcx+rax*1],0x2
   14000415d:	mov    eax,0x8
   140004162:	imul   rax,rax,0x1
   140004166:	lea    rcx,[rip+0x6063]        # 0x14000a1d0
   14000416d:	mov    rdx,QWORD PTR [rip+0x5e94]        # 0x14000a008
   140004174:	mov    QWORD PTR [rcx+rax*1],rdx
   140004178:	mov    eax,0x8
   14000417d:	imul   rax,rax,0x2
   140004181:	lea    rcx,[rip+0x6048]        # 0x14000a1d0
   140004188:	mov    rdx,QWORD PTR [rip+0x5e81]        # 0x14000a010
   14000418f:	mov    QWORD PTR [rcx+rax*1],rdx
   140004193:	mov    eax,0x8
   140004198:	imul   rax,rax,0x0
   14000419c:	mov    rcx,QWORD PTR [rip+0x5e65]        # 0x14000a008
   1400041a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400041a8:	mov    eax,0x8
   1400041ad:	imul   rax,rax,0x1
   1400041b1:	mov    rcx,QWORD PTR [rip+0x5e58]        # 0x14000a010
   1400041b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400041bd:	lea    rcx,[rip+0x22bc]        # 0x140006480
   1400041c4:	call   0x140004018
   1400041c9:	add    rsp,0x88
   1400041d0:	ret    
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	int3   
   1400041d5:	int3   
   1400041d6:	int3   
   1400041d7:	int3   
   1400041d8:	int3   
   1400041d9:	int3   
   1400041da:	int3   
   1400041db:	int3   
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041e5:	push   rdi
   1400041e6:	sub    rsp,0x20
   1400041ea:	mov    ebx,edx
   1400041ec:	mov    rdi,rcx
   1400041ef:	call   QWORD PTR [rip+0x1ffb]        # 0x1400061f0
   1400041f5:	test   bl,0x1
   1400041f8:	je     0x140004202
   1400041fa:	mov    rcx,rdi
   1400041fd:	call   0x14000400c
   140004202:	mov    rax,rdi
   140004205:	mov    rbx,QWORD PTR [rsp+0x30]
   14000420a:	add    rsp,0x20
   14000420e:	pop    rdi
   14000420f:	ret    
   140004210:	int3   
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	sub    rsp,0x38
   14000421c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004225:	call   0x140004568
   14000422a:	nop
   14000422b:	jmp    0x140004232
   14000422d:	mov    rax,QWORD PTR [rsp+0x50]
   140004232:	add    rsp,0x38
   140004236:	ret    
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	sub    rsp,0x28
   140004244:	mov    rax,QWORD PTR [rcx]
   140004247:	cmp    DWORD PTR [rax],0xe06d7363
   14000424d:	jne    0x140004272
   14000424f:	cmp    DWORD PTR [rax+0x18],0x4
   140004253:	jne    0x140004272
   140004255:	mov    ecx,DWORD PTR [rax+0x20]
   140004258:	lea    eax,[rcx-0x19930520]
   14000425e:	cmp    eax,0x2
   140004261:	jbe    0x14000426b
   140004263:	cmp    ecx,0x1994000
   140004269:	jne    0x140004272
   14000426b:	call   QWORD PTR [rip+0x1fa7]        # 0x140006218
   140004271:	int3   
   140004272:	xor    eax,eax
   140004274:	add    rsp,0x28
   140004278:	ret    
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	sub    rsp,0x28
   140004284:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004240
   14000428b:	call   QWORD PTR [rip+0x1e8f]        # 0x140006120
   140004291:	xor    eax,eax
   140004293:	add    rsp,0x28
   140004297:	ret    
   140004298:	int3   
   140004299:	int3   
   14000429a:	int3   
   14000429b:	int3   
   14000429c:	int3   
   14000429d:	int3   
   14000429e:	jmp    QWORD PTR [rip+0x1fdc]        # 0x140006280
   1400042a4:	int3   
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	sub    rsp,0x18
   1400042b0:	xor    edx,edx
   1400042b2:	lea    rax,[rcx-0x1]
   1400042b6:	cmp    rax,0xfffffffffffffffd
   1400042ba:	ja     0x1400042f8
   1400042bc:	mov    eax,0x5a4d
   1400042c1:	cmp    WORD PTR [rcx],ax
   1400042c4:	jne    0x1400042f0
   1400042c6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400042c9:	jl     0x1400042f0
   1400042cb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400042d2:	jae    0x1400042f0
   1400042d4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400042d8:	add    rax,rcx
   1400042db:	mov    QWORD PTR [rsp],rax
   1400042df:	cmp    DWORD PTR [rax],0x4550
   1400042e5:	cmovne rax,rdx
   1400042e9:	mov    rdx,rax
   1400042ec:	mov    QWORD PTR [rsp],rax
   1400042f0:	jmp    0x1400042f8
   1400042f2:	xor    edx,edx
   1400042f4:	mov    QWORD PTR [rsp],rdx
   1400042f8:	mov    rax,rdx
   1400042fb:	add    rsp,0x18
   1400042ff:	ret    
   140004300:	int3   
   140004301:	int3   
   140004302:	int3   
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	rex push rbx
   14000430a:	sub    rsp,0x20
   14000430e:	mov    ebx,ecx
   140004310:	xor    ecx,ecx
   140004312:	call   QWORD PTR [rip+0x1d58]        # 0x140006070
   140004318:	test   rax,rax
   14000431b:	je     0x140004345
   14000431d:	mov    rcx,rax
   140004320:	call   0x1400042ac
   140004325:	test   rax,rax
   140004328:	je     0x140004345
   14000432a:	mov    ecx,0x2
   14000432f:	cmp    WORD PTR [rax+0x5c],cx
   140004333:	jne    0x140004339
   140004335:	mov    eax,ecx
   140004337:	jmp    0x140004347
   140004339:	cmp    WORD PTR [rax+0x5c],0x3
   14000433e:	mov    eax,0x1
   140004343:	je     0x140004347
   140004345:	mov    eax,ebx
   140004347:	add    rsp,0x20
   14000434b:	pop    rbx
   14000434c:	ret    
   14000434d:	int3   
   14000434e:	int3   
   14000434f:	int3   
   140004350:	int3   
   140004351:	int3   
   140004352:	int3   
   140004353:	int3   
   140004354:	jmp    QWORD PTR [rip+0x1f1e]        # 0x140006278
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004364:	xor    r9d,r9d
   140004367:	add    r8,rcx
   14000436a:	mov    r10,rdx
   14000436d:	movzx  eax,WORD PTR [r8+0x14]
   140004372:	movzx  r11d,WORD PTR [r8+0x6]
   140004377:	add    rax,0x18
   14000437b:	add    rax,r8
   14000437e:	test   r11d,r11d
   140004381:	je     0x1400043a1
   140004383:	mov    edx,DWORD PTR [rax+0xc]
   140004386:	cmp    r10,rdx
   140004389:	jb     0x140004395
   14000438b:	mov    ecx,DWORD PTR [rax+0x8]
   14000438e:	add    ecx,edx
   140004390:	cmp    r10,rcx
   140004393:	jb     0x1400043a3
   140004395:	inc    r9d
   140004398:	add    rax,0x28
   14000439c:	cmp    r9d,r11d
   14000439f:	jb     0x140004383
   1400043a1:	xor    eax,eax
   1400043a3:	ret    
   1400043a4:	int3   
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	int3   
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043b5:	push   rdi
   1400043b6:	sub    rsp,0x20
   1400043ba:	mov    rbx,rcx
   1400043bd:	lea    rdi,[rip+0xffffffffffffbc3c]        # 0x140000000
   1400043c4:	mov    rcx,rdi
   1400043c7:	call   0x140004410
   1400043cc:	test   eax,eax
   1400043ce:	je     0x1400043f2
   1400043d0:	sub    rbx,rdi
   1400043d3:	mov    rdx,rbx
   1400043d6:	mov    rcx,rdi
   1400043d9:	call   0x140004360
   1400043de:	test   rax,rax
   1400043e1:	je     0x1400043f2
   1400043e3:	mov    eax,DWORD PTR [rax+0x24]
   1400043e6:	shr    eax,0x1f
   1400043e9:	not    eax
   1400043eb:	and    eax,0x1
   1400043ee:	jmp    0x1400043f2
   1400043f0:	xor    eax,eax
   1400043f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043f7:	add    rsp,0x20
   1400043fb:	pop    rdi
   1400043fc:	ret    
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    rax,rcx
   140004413:	mov    ecx,0x5a4d
   140004418:	cmp    WORD PTR [rax],cx
   14000441b:	je     0x140004420
   14000441d:	xor    eax,eax
   14000441f:	ret    
   140004420:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004424:	add    rcx,rax
   140004427:	xor    eax,eax
   140004429:	cmp    DWORD PTR [rcx],0x4550
   14000442f:	jne    0x14000443d
   140004431:	mov    edx,0x20b
   140004436:	cmp    WORD PTR [rcx+0x18],dx
   14000443a:	sete   al
   14000443d:	ret    
   14000443e:	int3   
   14000443f:	int3   
   140004440:	int3   
   140004441:	int3   
   140004442:	int3   
   140004443:	int3   
   140004444:	mov    QWORD PTR [rsp+0x20],rbx
   140004449:	push   rbp
   14000444a:	mov    rbp,rsp
   14000444d:	sub    rsp,0x20
   140004451:	and    QWORD PTR [rbp+0x18],0x0
   140004456:	movabs rbx,0x2b992ddfa232
   140004460:	mov    rax,QWORD PTR [rip+0x5ba1]        # 0x14000a008
   140004467:	cmp    rax,rbx
   14000446a:	jne    0x1400044ff
   140004470:	lea    rcx,[rbp+0x18]
   140004474:	call   QWORD PTR [rip+0x1d26]        # 0x1400061a0
   14000447a:	mov    rax,QWORD PTR [rbp+0x18]
   14000447e:	mov    QWORD PTR [rbp+0x10],rax
   140004482:	call   QWORD PTR [rip+0x1cb8]        # 0x140006140
   140004488:	mov    eax,eax
   14000448a:	xor    QWORD PTR [rbp+0x10],rax
   14000448e:	call   QWORD PTR [rip+0x1c1c]        # 0x1400060b0
   140004494:	mov    eax,eax
   140004496:	xor    QWORD PTR [rbp+0x10],rax
   14000449a:	call   QWORD PTR [rip+0x1d08]        # 0x1400061a8
   1400044a0:	mov    eax,eax
   1400044a2:	shl    rax,0x18
   1400044a6:	xor    QWORD PTR [rbp+0x10],rax
   1400044aa:	call   QWORD PTR [rip+0x1cf8]        # 0x1400061a8
   1400044b0:	mov    eax,eax
   1400044b2:	lea    rcx,[rbp+0x10]
   1400044b6:	xor    rax,QWORD PTR [rbp+0x10]
   1400044ba:	xor    rax,rcx
   1400044bd:	lea    rcx,[rbp+0x20]
   1400044c1:	mov    QWORD PTR [rbp+0x10],rax
   1400044c5:	call   QWORD PTR [rip+0x1c85]        # 0x140006150
   1400044cb:	mov    eax,DWORD PTR [rbp+0x20]
   1400044ce:	movabs rcx,0xffffffffffff
   1400044d8:	shl    rax,0x20
   1400044dc:	xor    rax,QWORD PTR [rbp+0x20]
   1400044e0:	xor    rax,QWORD PTR [rbp+0x10]
   1400044e4:	and    rax,rcx
   1400044e7:	movabs rcx,0x2b992ddfa233
   1400044f1:	cmp    rax,rbx
   1400044f4:	cmove  rax,rcx
   1400044f8:	mov    QWORD PTR [rip+0x5b09],rax        # 0x14000a008
   1400044ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140004504:	not    rax
   140004507:	mov    QWORD PTR [rip+0x5b02],rax        # 0x14000a010
   14000450e:	add    rsp,0x20
   140004512:	pop    rbp
   140004513:	ret    
   140004514:	int3   
   140004515:	int3   
   140004516:	int3   
   140004517:	int3   
   140004518:	int3   
   140004519:	int3   
   14000451a:	jmp    QWORD PTR [rip+0x1d20]        # 0x140006240
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	jmp    QWORD PTR [rip+0x1d0c]        # 0x140006238
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	int3   
   140004531:	int3   
   140004532:	jmp    QWORD PTR [rip+0x1cd8]        # 0x140006210
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	jmp    QWORD PTR [rip+0x1cc4]        # 0x140006208
   140004544:	int3   
   140004545:	int3   
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	jmp    QWORD PTR [rip+0x1cb0]        # 0x140006200
   140004550:	int3   
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	jmp    QWORD PTR [rip+0x1c84]        # 0x1400061e0
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	int3   
   140004561:	int3   
   140004562:	int3   
   140004563:	int3   
   140004564:	int3   
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	rex push rbx
   14000456a:	sub    rsp,0x20
   14000456e:	mov    rbx,rcx
   140004571:	jmp    0x140004582
   140004573:	mov    rcx,rbx
   140004576:	call   0x140004ece
   14000457b:	test   eax,eax
   14000457d:	je     0x140004593
   14000457f:	mov    rcx,rbx
   140004582:	call   QWORD PTR [rip+0x1d18]        # 0x1400062a0
   140004588:	test   rax,rax
   14000458b:	je     0x140004573
   14000458d:	add    rsp,0x20
   140004591:	pop    rbx
   140004592:	ret    
   140004593:	call   0x1400048a0
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	rex push rbx
   1400045a2:	sub    rsp,0x20
   1400045a6:	mov    rbx,rcx
   1400045a9:	call   0x140004efe
   1400045ae:	lea    rax,[rip+0x1f43]        # 0x1400064f8
   1400045b5:	mov    QWORD PTR [rbx],rax
   1400045b8:	mov    rax,rbx
   1400045bb:	add    rsp,0x20
   1400045bf:	pop    rbx
   1400045c0:	ret    
   1400045c1:	int3   
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	int3   
   1400045c5:	int3   
   1400045c6:	int3   
   1400045c7:	int3   
   1400045c8:	rex push rbx
   1400045ca:	sub    rsp,0x20
   1400045ce:	lea    rax,[rip+0x1ec3]        # 0x140006498
   1400045d5:	mov    r8d,0x1
   1400045db:	lea    rdx,[rsp+0x30]
   1400045e0:	mov    QWORD PTR [rsp+0x30],rax
   1400045e5:	mov    rbx,rcx
   1400045e8:	call   0x140004ef2
   1400045ed:	lea    rax,[rip+0x1f04]        # 0x1400064f8
   1400045f4:	mov    QWORD PTR [rbx],rax
   1400045f7:	mov    rax,rbx
   1400045fa:	add    rsp,0x20
   1400045fe:	pop    rbx
   1400045ff:	ret    
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	rex push rbx
   14000460a:	sub    rsp,0x20
   14000460e:	mov    rbx,rcx
   140004611:	call   0x140004efe
   140004616:	lea    rax,[rip+0x1eeb]        # 0x140006508
   14000461d:	mov    QWORD PTR [rbx],rax
   140004620:	mov    rax,rbx
   140004623:	add    rsp,0x20
   140004627:	pop    rbx
   140004628:	ret    
   140004629:	int3   
   14000462a:	int3   
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x8],rcx
   140004635:	push   rbx
   140004636:	sub    rsp,0x20
   14000463a:	mov    QWORD PTR [rsp+0x30],rdx
   14000463f:	mov    rbx,rcx
   140004642:	lea    rdx,[rsp+0x30]
   140004647:	call   0x140004ee6
   14000464c:	lea    rax,[rip+0x1eb5]        # 0x140006508
   140004653:	mov    QWORD PTR [rbx],rax
   140004656:	mov    rax,rbx
   140004659:	add    rsp,0x20
   14000465d:	pop    rbx
   14000465e:	ret    
   14000465f:	int3   
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	int3   
   140004665:	int3   
   140004666:	int3   
   140004667:	int3   
   140004668:	lea    rax,[rip+0x1e89]        # 0x1400064f8
   14000466f:	mov    QWORD PTR [rcx],rax
   140004672:	jmp    0x140004f0a
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	jmp    0x140004f0a
   140004685:	int3   
   140004686:	int3   
   140004687:	int3   
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    QWORD PTR [rsp+0x8],rbx
   140004695:	push   rdi
   140004696:	sub    rsp,0x20
   14000469a:	lea    rax,[rip+0x1e57]        # 0x1400064f8
   1400046a1:	mov    ebx,edx
   1400046a3:	mov    QWORD PTR [rcx],rax
   1400046a6:	mov    rdi,rcx
   1400046a9:	call   0x140004f0a
   1400046ae:	test   bl,0x1
   1400046b1:	je     0x1400046bb
   1400046b3:	mov    rcx,rdi
   1400046b6:	call   0x14000400c
   1400046bb:	mov    rax,rdi
   1400046be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046c3:	add    rsp,0x20
   1400046c7:	pop    rdi
   1400046c8:	ret    
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	rex push rbx
   1400046d2:	sub    rsp,0x20
   1400046d6:	lea    rax,[rip+0x1e3b]        # 0x140006518
   1400046dd:	mov    rbx,rcx
   1400046e0:	mov    QWORD PTR [rcx],rax
   1400046e3:	test   dl,0x1
   1400046e6:	je     0x1400046ed
   1400046e8:	call   0x14000400c
   1400046ed:	mov    rax,rbx
   1400046f0:	add    rsp,0x20
   1400046f4:	pop    rbx
   1400046f5:	ret    
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	mov    QWORD PTR [rsp+0x8],rbx
   140004705:	push   rdi
   140004706:	sub    rsp,0x20
   14000470a:	mov    ebx,edx
   14000470c:	mov    rdi,rcx
   14000470f:	call   0x140004f0a
   140004714:	test   bl,0x1
   140004717:	je     0x140004721
   140004719:	mov    rcx,rdi
   14000471c:	call   0x14000400c
   140004721:	mov    rax,rdi
   140004724:	mov    rbx,QWORD PTR [rsp+0x30]
   140004729:	add    rsp,0x20
   14000472d:	pop    rdi
   14000472e:	ret    
   14000472f:	int3   
   140004730:	int3   
   140004731:	int3   
   140004732:	int3   
   140004733:	int3   
   140004734:	int3   
   140004735:	int3   
   140004736:	int3   
   140004737:	int3   
   140004738:	mov    rax,rsp
   14000473b:	mov    QWORD PTR [rax+0x18],r8
   14000473f:	mov    QWORD PTR [rax+0x10],rdx
   140004743:	mov    QWORD PTR [rax+0x8],rcx
   140004747:	push   rbx
   140004748:	push   rsi
   140004749:	push   rdi
   14000474a:	push   r14
   14000474c:	sub    rsp,0x38
   140004750:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004758:	mov    rsi,r8
   14000475b:	mov    rbx,rcx
   14000475e:	mov    rdi,rdx
   140004761:	or     rdi,0xf
   140004765:	mov    r9,0xfffffffffffffffe
   14000476c:	cmp    rdi,r9
   14000476f:	jbe    0x140004776
   140004771:	mov    rdi,rdx
   140004774:	jmp    0x1400047a7
   140004776:	mov    r8,QWORD PTR [rcx+0x18]
   14000477a:	mov    rcx,r8
   14000477d:	shr    rcx,1
   140004780:	movabs rax,0xaaaaaaaaaaaaaaab
   14000478a:	mul    rdi
   14000478d:	shr    rdx,1
   140004790:	cmp    rcx,rdx
   140004793:	jbe    0x1400047a7
   140004795:	mov    rax,r9
   140004798:	sub    rax,rcx
   14000479b:	cmp    r8,rax
   14000479e:	lea    rdi,[rcx+r8*1]
   1400047a2:	jbe    0x1400047a7
   1400047a4:	mov    rdi,r9
   1400047a7:	lea    rcx,[rdi+0x1]
   1400047ab:	xor    r14d,r14d
   1400047ae:	test   rcx,rcx
   1400047b1:	je     0x1400047cc
   1400047b3:	cmp    rcx,0xffffffffffffffff
   1400047b7:	ja     0x1400047c6
   1400047b9:	call   0x140004568
   1400047be:	mov    r14,rax
   1400047c1:	test   rax,rax
   1400047c4:	jne    0x1400047cc
   1400047c6:	call   0x1400048a0
   1400047cb:	nop
   1400047cc:	jmp    0x1400047e2
   1400047ce:	mov    rbx,QWORD PTR [rsp+0x60]
   1400047d3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400047d8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400047dd:	mov    r14,QWORD PTR [rsp+0x78]
   1400047e2:	test   rsi,rsi
   1400047e5:	je     0x140004806
   1400047e7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400047ec:	jb     0x1400047f3
   1400047ee:	mov    rdx,QWORD PTR [rbx]
   1400047f1:	jmp    0x1400047f6
   1400047f3:	mov    rdx,rbx
   1400047f6:	test   rsi,rsi
   1400047f9:	je     0x140004806
   1400047fb:	mov    r8,rsi
   1400047fe:	mov    rcx,r14
   140004801:	call   0x140004f38
   140004806:	cmp    QWORD PTR [rbx+0x18],0x10
   14000480b:	jb     0x140004815
   14000480d:	mov    rcx,QWORD PTR [rbx]
   140004810:	call   0x14000400c
   140004815:	mov    BYTE PTR [rbx],0x0
   140004818:	mov    QWORD PTR [rbx],r14
   14000481b:	mov    QWORD PTR [rbx+0x18],rdi
   14000481f:	mov    QWORD PTR [rbx+0x10],rsi
   140004823:	cmp    rdi,0x10
   140004827:	jb     0x14000482c
   140004829:	mov    rbx,r14
   14000482c:	mov    BYTE PTR [rbx+rsi*1],0x0
   140004830:	add    rsp,0x38
   140004834:	pop    r14
   140004836:	pop    rdi
   140004837:	pop    rsi
   140004838:	pop    rbx
   140004839:	ret    
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    QWORD PTR [rsp+0x8],rbx
   140004845:	mov    QWORD PTR [rsp+0x10],rsi
   14000484a:	push   rdi
   14000484b:	sub    rsp,0x20
   14000484f:	mov    rdi,r8
   140004852:	mov    rbx,rcx
   140004855:	test   dl,dl
   140004857:	je     0x140004878
   140004859:	cmp    QWORD PTR [rcx+0x18],0x10
   14000485e:	jb     0x140004878
   140004860:	mov    rsi,QWORD PTR [rcx]
   140004863:	test   r8,r8
   140004866:	je     0x140004870
   140004868:	mov    rdx,rsi
   14000486b:	call   0x140004f38
   140004870:	mov    rcx,rsi
   140004873:	call   0x14000400c
   140004878:	mov    rsi,QWORD PTR [rsp+0x38]
   14000487d:	mov    QWORD PTR [rbx+0x18],0xf
   140004885:	mov    QWORD PTR [rbx+0x10],rdi
   140004889:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000488d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004892:	add    rsp,0x20
   140004896:	pop    rdi
   140004897:	ret    
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	sub    rsp,0x48
   1400048a4:	lea    rcx,[rsp+0x20]
   1400048a9:	call   0x1400045c8
   1400048ae:	lea    rdx,[rip+0x4163]        # 0x140008a18
   1400048b5:	lea    rcx,[rsp+0x20]
   1400048ba:	call   0x140004f2c
   1400048bf:	int3   
   1400048c0:	int3   
   1400048c1:	int3   
   1400048c2:	int3   
   1400048c3:	int3   
   1400048c4:	int3   
   1400048c5:	int3   
   1400048c6:	int3   
   1400048c7:	int3   
   1400048c8:	sub    rsp,0x28
   1400048cc:	lea    rcx,[rip+0x1d65]        # 0x140006638
   1400048d3:	call   0x1400048e0
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	sub    rsp,0x48
   1400048e4:	mov    rdx,rcx
   1400048e7:	lea    rcx,[rsp+0x20]
   1400048ec:	call   0x140004630
   1400048f1:	lea    rdx,[rip+0x41d0]        # 0x140008ac8
   1400048f8:	lea    rcx,[rsp+0x20]
   1400048fd:	call   0x140004f2c
   140004902:	int3   
   140004903:	int3   
   140004904:	int3   
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	sub    rsp,0x48
   140004910:	mov    rdx,rcx
   140004913:	lea    rcx,[rsp+0x20]
   140004918:	call   0x140004630
   14000491d:	lea    rdx,[rip+0x420c]        # 0x140008b30
   140004924:	lea    rcx,[rsp+0x20]
   140004929:	call   0x140004f2c
   14000492e:	int3   
   14000492f:	int3   
   140004930:	int3   
   140004931:	int3   
   140004932:	int3   
   140004933:	int3   
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	sub    rsp,0x28
   14000493c:	lea    rcx,[rip+0x1cdd]        # 0x140006620
   140004943:	call   0x14000490c
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    QWORD PTR [rsp+0x8],rbx
   140004955:	mov    QWORD PTR [rsp+0x10],rbp
   14000495a:	mov    QWORD PTR [rsp+0x18],rsi
   14000495f:	push   rdi
   140004960:	sub    rsp,0x20
   140004964:	mov    rdi,QWORD PTR [rdx+0x10]
   140004968:	mov    rbp,r8
   14000496b:	mov    rsi,rdx
   14000496e:	mov    rbx,rcx
   140004971:	cmp    rdi,r8
   140004974:	jb     0x140004a4c
   14000497a:	sub    rdi,r8
   14000497d:	cmp    r9,rdi
   140004980:	cmovb  rdi,r9
   140004984:	cmp    rcx,rdx
   140004987:	jne    0x1400049b5
   140004989:	lea    rax,[rdi+r8*1]
   14000498d:	cmp    QWORD PTR [rcx+0x10],rax
   140004991:	jb     0x140004a52
   140004997:	cmp    QWORD PTR [rcx+0x18],0x10
   14000499c:	mov    QWORD PTR [rcx+0x10],rax
   1400049a0:	jb     0x1400049a5
   1400049a2:	mov    rcx,QWORD PTR [rcx]
   1400049a5:	mov    BYTE PTR [rcx+rax*1],0x0
   1400049a9:	xor    edx,edx
   1400049ab:	mov    rcx,rbx
   1400049ae:	call   0x140004c70
   1400049b3:	jmp    0x140004a34
   1400049b5:	cmp    rdi,0xfffffffffffffffe
   1400049b9:	ja     0x140004a58
   1400049bf:	cmp    QWORD PTR [rcx+0x18],rdi
   1400049c3:	jae    0x1400049d3
   1400049c5:	mov    r8,QWORD PTR [rcx+0x10]
   1400049c9:	mov    rdx,rdi
   1400049cc:	call   0x140004738
   1400049d1:	jmp    0x1400049ee
   1400049d3:	test   rdi,rdi
   1400049d6:	jne    0x1400049f3
   1400049d8:	and    QWORD PTR [rcx+0x10],rdi
   1400049dc:	cmp    QWORD PTR [rcx+0x18],0x10
   1400049e1:	jb     0x1400049e8
   1400049e3:	mov    rax,QWORD PTR [rcx]
   1400049e6:	jmp    0x1400049eb
   1400049e8:	mov    rax,rcx
   1400049eb:	mov    BYTE PTR [rax],0x0
   1400049ee:	test   rdi,rdi
   1400049f1:	je     0x140004a34
   1400049f3:	cmp    QWORD PTR [rsi+0x18],0x10
   1400049f8:	jb     0x1400049fd
   1400049fa:	mov    rsi,QWORD PTR [rsi]
   1400049fd:	cmp    QWORD PTR [rbx+0x18],0x10
   140004a02:	jb     0x140004a09
   140004a04:	mov    rcx,QWORD PTR [rbx]
   140004a07:	jmp    0x140004a0c
   140004a09:	mov    rcx,rbx
   140004a0c:	test   rdi,rdi
   140004a0f:	je     0x140004a1d
   140004a11:	lea    rdx,[rsi+rbp*1]
   140004a15:	mov    r8,rdi
   140004a18:	call   0x140004f38
   140004a1d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004a22:	mov    QWORD PTR [rbx+0x10],rdi
   140004a26:	jb     0x140004a2d
   140004a28:	mov    rax,QWORD PTR [rbx]
   140004a2b:	jmp    0x140004a30
   140004a2d:	mov    rax,rbx
   140004a30:	mov    BYTE PTR [rax+rdi*1],0x0
   140004a34:	mov    rbp,QWORD PTR [rsp+0x38]
   140004a39:	mov    rax,rbx
   140004a3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a41:	mov    rsi,QWORD PTR [rsp+0x40]
   140004a46:	add    rsp,0x20
   140004a4a:	pop    rdi
   140004a4b:	ret    
   140004a4c:	call   0x140004938
   140004a51:	int3   
   140004a52:	call   0x140004938
   140004a57:	int3   
   140004a58:	call   0x1400048c8
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	mov    QWORD PTR [rsp+0x8],rbx
   140004a69:	mov    QWORD PTR [rsp+0x10],rsi
   140004a6e:	push   rdi
   140004a6f:	sub    rsp,0x20
   140004a73:	mov    rdi,r8
   140004a76:	mov    rsi,rdx
   140004a79:	mov    rbx,rcx
   140004a7c:	test   rdx,rdx
   140004a7f:	je     0x140004acd
   140004a81:	cmp    QWORD PTR [rcx+0x18],0x10
   140004a86:	jb     0x140004a8d
   140004a88:	mov    rax,QWORD PTR [rcx]
   140004a8b:	jmp    0x140004a90
   140004a8d:	mov    rax,rcx
   140004a90:	cmp    rdx,rax
   140004a93:	jb     0x140004acd
   140004a95:	cmp    QWORD PTR [rcx+0x18],0x10
   140004a9a:	jb     0x140004a9f
   140004a9c:	mov    rcx,QWORD PTR [rcx]
   140004a9f:	add    rcx,QWORD PTR [rbx+0x10]
   140004aa3:	cmp    rcx,rdx
   140004aa6:	jbe    0x140004acd
   140004aa8:	cmp    QWORD PTR [rbx+0x18],0x10
   140004aad:	jb     0x140004ab4
   140004aaf:	mov    rax,QWORD PTR [rbx]
   140004ab2:	jmp    0x140004ab7
   140004ab4:	mov    rax,rbx
   140004ab7:	sub    rsi,rax
   140004aba:	mov    r9,r8
   140004abd:	mov    r8,rsi
   140004ac0:	mov    rdx,rbx
   140004ac3:	mov    rcx,rbx
   140004ac6:	call   0x140004950
   140004acb:	jmp    0x140004b47
   140004acd:	cmp    r8,0xfffffffffffffffe
   140004ad1:	ja     0x140004b57
   140004ad7:	cmp    QWORD PTR [rbx+0x18],r8
   140004adb:	jae    0x140004aee
   140004add:	mov    r8,QWORD PTR [rbx+0x10]
   140004ae1:	mov    rdx,rdi
   140004ae4:	mov    rcx,rbx
   140004ae7:	call   0x140004738
   140004aec:	jmp    0x140004b09
   140004aee:	test   r8,r8
   140004af1:	jne    0x140004b09
   140004af3:	and    QWORD PTR [rbx+0x10],r8
   140004af7:	cmp    QWORD PTR [rbx+0x18],0x10
   140004afc:	jb     0x140004b03
   140004afe:	mov    rax,QWORD PTR [rbx]
   140004b01:	jmp    0x140004b06
   140004b03:	mov    rax,rbx
   140004b06:	mov    BYTE PTR [rax],0x0
   140004b09:	test   rdi,rdi
   140004b0c:	je     0x140004b44
   140004b0e:	cmp    QWORD PTR [rbx+0x18],0x10
   140004b13:	jb     0x140004b1a
   140004b15:	mov    rcx,QWORD PTR [rbx]
   140004b18:	jmp    0x140004b1d
   140004b1a:	mov    rcx,rbx
   140004b1d:	test   rdi,rdi
   140004b20:	je     0x140004b2d
   140004b22:	mov    r8,rdi
   140004b25:	mov    rdx,rsi
   140004b28:	call   0x140004f38
   140004b2d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004b32:	mov    QWORD PTR [rbx+0x10],rdi
   140004b36:	jb     0x140004b3d
   140004b38:	mov    rax,QWORD PTR [rbx]
   140004b3b:	jmp    0x140004b40
   140004b3d:	mov    rax,rbx
   140004b40:	mov    BYTE PTR [rax+rdi*1],0x0
   140004b44:	mov    rax,rbx
   140004b47:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b4c:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b51:	add    rsp,0x20
   140004b55:	pop    rdi
   140004b56:	ret    
   140004b57:	mov    rcx,rbx
   140004b5a:	call   0x1400048c8
   140004b5f:	int3   
   140004b60:	int3   
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	int3   
   140004b65:	int3   
   140004b66:	int3   
   140004b67:	int3   
   140004b68:	int3   
   140004b69:	int3   
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x8],rbx
   140004b75:	push   rdi
   140004b76:	sub    rsp,0x20
   140004b7a:	mov    ecx,r8d
   140004b7d:	mov    edi,r8d
   140004b80:	mov    rbx,rdx
   140004b83:	call   0x140004e70
   140004b88:	test   rax,rax
   140004b8b:	mov    DWORD PTR [rbx],edi
   140004b8d:	lea    rax,[rip+0x548c]        # 0x14000a020
   140004b94:	jne    0x140004b9d
   140004b96:	lea    rax,[rip+0x5493]        # 0x14000a030
   140004b9d:	mov    QWORD PTR [rbx+0x8],rax
   140004ba1:	mov    rax,rbx
   140004ba4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ba9:	add    rsp,0x20
   140004bad:	pop    rdi
   140004bae:	ret    
   140004baf:	int3   
   140004bb0:	int3   
   140004bb1:	int3   
   140004bb2:	int3   
   140004bb3:	int3   
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	int3   
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	mov    DWORD PTR [rdx],r8d
   140004bc3:	mov    rax,rdx
   140004bc6:	mov    QWORD PTR [rdx+0x8],rcx
   140004bca:	ret    
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	int3   
   140004bd1:	int3   
   140004bd2:	int3   
   140004bd3:	int3   
   140004bd4:	int3   
   140004bd5:	int3   
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004be4:	jne    0x140004bf1
   140004be6:	cmp    DWORD PTR [rdx],r8d
   140004be9:	jne    0x140004bf1
   140004beb:	mov    eax,0x1
   140004bf0:	ret    
   140004bf1:	xor    eax,eax
   140004bf3:	ret    
   140004bf4:	int3   
   140004bf5:	int3   
   140004bf6:	int3   
   140004bf7:	int3   
   140004bf8:	int3   
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	mov    QWORD PTR [rsp+0x8],rbx
   140004c05:	mov    QWORD PTR [rsp+0x10],rsi
   140004c0a:	mov    QWORD PTR [rsp+0x18],rdi
   140004c0f:	push   r14
   140004c11:	sub    rsp,0x30
   140004c15:	mov    rax,QWORD PTR [rcx]
   140004c18:	mov    rsi,rcx
   140004c1b:	mov    r14,r8
   140004c1e:	mov    edi,edx
   140004c20:	mov    rbx,QWORD PTR [rax+0x18]
   140004c24:	mov    rcx,rbx
   140004c27:	call   QWORD PTR [rip+0x16e3]        # 0x140006310
   140004c2d:	mov    r8d,edi
   140004c30:	lea    rdx,[rsp+0x20]
   140004c35:	mov    rcx,rsi
   140004c38:	call   rbx
   140004c3a:	mov    rcx,QWORD PTR [r14+0x8]
   140004c3e:	cmp    QWORD PTR [rax+0x8],rcx
   140004c42:	jne    0x140004c52
   140004c44:	mov    ecx,DWORD PTR [r14]
   140004c47:	cmp    DWORD PTR [rax],ecx
   140004c49:	jne    0x140004c52
   140004c4b:	mov    eax,0x1
   140004c50:	jmp    0x140004c54
   140004c52:	xor    eax,eax
   140004c54:	mov    rbx,QWORD PTR [rsp+0x40]
   140004c59:	mov    rsi,QWORD PTR [rsp+0x48]
   140004c5e:	mov    rdi,QWORD PTR [rsp+0x50]
   140004c63:	add    rsp,0x30
   140004c67:	pop    r14
   140004c69:	ret    
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	mov    QWORD PTR [rsp+0x8],rbx
   140004c75:	push   rdi
   140004c76:	sub    rsp,0x20
   140004c7a:	mov    rdi,QWORD PTR [rcx+0x10]
   140004c7e:	mov    rbx,rcx
   140004c81:	cmp    rdi,rdx
   140004c84:	jb     0x140004cfe
   140004c86:	mov    rax,rdi
   140004c89:	sub    rax,rdx
   140004c8c:	cmp    rax,r8
   140004c8f:	ja     0x140004caa
   140004c91:	cmp    QWORD PTR [rcx+0x18],0x10
   140004c96:	mov    QWORD PTR [rcx+0x10],rdx
   140004c9a:	jb     0x140004ca1
   140004c9c:	mov    rax,QWORD PTR [rcx]
   140004c9f:	jmp    0x140004ca4
   140004ca1:	mov    rax,rcx
   140004ca4:	mov    BYTE PTR [rax+rdx*1],0x0
   140004ca8:	jmp    0x140004cf0
   140004caa:	test   r8,r8
   140004cad:	je     0x140004cf0
   140004caf:	cmp    QWORD PTR [rcx+0x18],0x10
   140004cb4:	jb     0x140004cbb
   140004cb6:	mov    rax,QWORD PTR [rcx]
   140004cb9:	jmp    0x140004cbe
   140004cbb:	mov    rax,rcx
   140004cbe:	sub    rdi,r8
   140004cc1:	lea    rcx,[rax+rdx*1]
   140004cc5:	mov    rax,rdi
   140004cc8:	sub    rax,rdx
   140004ccb:	je     0x140004cd9
   140004ccd:	lea    rdx,[rcx+r8*1]
   140004cd1:	mov    r8,rax
   140004cd4:	call   0x140004eda
   140004cd9:	cmp    QWORD PTR [rbx+0x18],0x10
   140004cde:	mov    QWORD PTR [rbx+0x10],rdi
   140004ce2:	jb     0x140004ce9
   140004ce4:	mov    rax,QWORD PTR [rbx]
   140004ce7:	jmp    0x140004cec
   140004ce9:	mov    rax,rbx
   140004cec:	mov    BYTE PTR [rax+rdi*1],0x0
   140004cf0:	mov    rax,rbx
   140004cf3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004cf8:	add    rsp,0x20
   140004cfc:	pop    rdi
   140004cfd:	ret    
   140004cfe:	call   0x140004938
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	int3   
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	mov    QWORD PTR [rsp+0x8],rbx
   140004d15:	push   rdi
   140004d16:	sub    rsp,0x30
   140004d1a:	xor    ebx,ebx
   140004d1c:	mov    ecx,r8d
   140004d1f:	mov    DWORD PTR [rsp+0x20],ebx
   140004d23:	mov    rdi,rdx
   140004d26:	call   0x140004e70
   140004d2b:	test   rax,rax
   140004d2e:	mov    QWORD PTR [rdi+0x18],0xf
   140004d36:	mov    QWORD PTR [rdi+0x10],rbx
   140004d3a:	lea    rdx,[rip+0x183f]        # 0x140006580
   140004d41:	cmovne rdx,rax
   140004d45:	mov    BYTE PTR [rdi],bl
   140004d47:	cmp    BYTE PTR [rdx],bl
   140004d49:	je     0x140004d5a
   140004d4b:	or     rax,0xffffffffffffffff
   140004d4f:	inc    rax
   140004d52:	cmp    BYTE PTR [rdx+rax*1],bl
   140004d55:	jne    0x140004d4f
   140004d57:	mov    rbx,rax
   140004d5a:	mov    r8,rbx
   140004d5d:	mov    rcx,rdi
   140004d60:	call   0x140004a64
   140004d65:	mov    rbx,QWORD PTR [rsp+0x40]
   140004d6a:	mov    rax,rdi
   140004d6d:	add    rsp,0x30
   140004d71:	pop    rdi
   140004d72:	ret    
   140004d73:	int3   
   140004d74:	int3   
   140004d75:	int3   
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	int3   
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	rex push rbx
   140004d82:	sub    rsp,0x30
   140004d86:	xor    eax,eax
   140004d88:	mov    rbx,rdx
   140004d8b:	mov    DWORD PTR [rsp+0x20],eax
   140004d8f:	cmp    r8d,0x1
   140004d93:	jne    0x140004db8
   140004d95:	mov    QWORD PTR [rdx+0x18],0xf
   140004d9d:	lea    r8d,[rax+0x15]
   140004da1:	mov    QWORD PTR [rdx+0x10],rax
   140004da5:	mov    rcx,rbx
   140004da8:	mov    BYTE PTR [rdx],al
   140004daa:	lea    rdx,[rip+0x181f]        # 0x1400065d0
   140004db1:	call   0x140004a64
   140004db6:	jmp    0x140004dbd
   140004db8:	call   0x140004d10
   140004dbd:	mov    rax,rbx
   140004dc0:	add    rsp,0x30
   140004dc4:	pop    rbx
   140004dc5:	ret    
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004dd5:	push   rdi
   140004dd6:	sub    rsp,0x30
   140004dda:	xor    ebx,ebx
   140004ddc:	mov    ecx,r8d
   140004ddf:	mov    DWORD PTR [rsp+0x20],ebx
   140004de3:	mov    rdi,rdx
   140004de6:	call   0x140004ea0
   140004deb:	test   rax,rax
   140004dee:	mov    QWORD PTR [rdi+0x18],0xf
   140004df6:	mov    QWORD PTR [rdi+0x10],rbx
   140004dfa:	lea    rdx,[rip+0x177f]        # 0x140006580
   140004e01:	cmovne rdx,rax
   140004e05:	mov    BYTE PTR [rdi],bl
   140004e07:	cmp    BYTE PTR [rdx],bl
   140004e09:	je     0x140004e1a
   140004e0b:	or     rax,0xffffffffffffffff
   140004e0f:	inc    rax
   140004e12:	cmp    BYTE PTR [rdx+rax*1],bl
   140004e15:	jne    0x140004e0f
   140004e17:	mov    rbx,rax
   140004e1a:	mov    r8,rbx
   140004e1d:	mov    rcx,rdi
   140004e20:	call   0x140004a64
   140004e25:	mov    rbx,QWORD PTR [rsp+0x40]
   140004e2a:	mov    rax,rdi
   140004e2d:	add    rsp,0x30
   140004e31:	pop    rdi
   140004e32:	ret    
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	lea    rax,[rip+0x1731]        # 0x140006578
   140004e47:	ret    
   140004e48:	int3   
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	lea    rax,[rip+0x1769]        # 0x1400065c0
   140004e57:	ret    
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	lea    rax,[rip+0x17b1]        # 0x140006618
   140004e67:	ret    
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	cmp    QWORD PTR [rip+0x20d0],0x0        # 0x140006f48
   140004e78:	lea    rax,[rip+0x20c1]        # 0x140006f40
   140004e7f:	je     0x140004e90
   140004e81:	cmp    DWORD PTR [rax],ecx
   140004e83:	je     0x140004e93
   140004e85:	add    rax,0x10
   140004e89:	cmp    QWORD PTR [rax+0x8],0x0
   140004e8e:	jne    0x140004e81
   140004e90:	xor    eax,eax
   140004e92:	ret    
   140004e93:	mov    rax,QWORD PTR [rax+0x8]
   140004e97:	ret    
   140004e98:	int3   
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	cmp    QWORD PTR [rip+0x17b0],0x0        # 0x140006658
   140004ea8:	lea    rax,[rip+0x17a1]        # 0x140006650
   140004eaf:	je     0x140004ec0
   140004eb1:	cmp    DWORD PTR [rax],ecx
   140004eb3:	je     0x140004ec3
   140004eb5:	add    rax,0x10
   140004eb9:	cmp    QWORD PTR [rax+0x8],0x0
   140004ebe:	jne    0x140004eb1
   140004ec0:	xor    eax,eax
   140004ec2:	ret    
   140004ec3:	mov    rax,QWORD PTR [rax+0x8]
   140004ec7:	ret    
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	jmp    QWORD PTR [rip+0x13e4]        # 0x1400062b8
   140004ed4:	int3   
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	jmp    QWORD PTR [rip+0x13e0]        # 0x1400062c0
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	jmp    QWORD PTR [rip+0x13dc]        # 0x1400062c8
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	int3   
   140004ef1:	int3   
   140004ef2:	jmp    QWORD PTR [rip+0x13d8]        # 0x1400062d0
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	jmp    QWORD PTR [rip+0x13d4]        # 0x1400062d8
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	jmp    QWORD PTR [rip+0x13d0]        # 0x1400062e0
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	jmp    QWORD PTR [rip+0x13c2]        # 0x1400062e8
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	jmp    QWORD PTR [rip+0x1366]        # 0x140006298
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	int3   
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	jmp    QWORD PTR [rip+0x1352]        # 0x140006290
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	sub    rsp,0x28
   140004f48:	mov    r8,QWORD PTR [r9+0x38]
   140004f4c:	mov    rcx,rdx
   140004f4f:	mov    rdx,r9
   140004f52:	call   0x140004f68
   140004f57:	mov    eax,0x1
   140004f5c:	add    rsp,0x28
   140004f60:	ret    
   140004f61:	int3   
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	int3   
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	rex push rbx
   140004f6a:	sub    rsp,0x20
   140004f6e:	mov    r11d,DWORD PTR [r8]
   140004f71:	mov    rbx,rdx
   140004f74:	and    r11d,0xfffffff8
   140004f78:	mov    r9,rcx
   140004f7b:	test   BYTE PTR [r8],0x4
   140004f7f:	mov    r10,rcx
   140004f82:	je     0x140004f97
   140004f84:	mov    eax,DWORD PTR [r8+0x8]
   140004f88:	movsxd r10,DWORD PTR [r8+0x4]
   140004f8c:	neg    eax
   140004f8e:	add    r10,rcx
   140004f91:	movsxd rcx,eax
   140004f94:	and    r10,rcx
   140004f97:	movsxd rax,r11d
   140004f9a:	mov    rdx,QWORD PTR [rax+r10*1]
   140004f9e:	mov    rax,QWORD PTR [rbx+0x10]
   140004fa2:	mov    ecx,DWORD PTR [rax+0x8]
   140004fa5:	add    rcx,QWORD PTR [rbx+0x8]
   140004fa9:	test   BYTE PTR [rcx+0x3],0xf
   140004fad:	je     0x140004fbb
   140004faf:	movzx  eax,BYTE PTR [rcx+0x3]
   140004fb3:	and    eax,0xfffffff0
   140004fb6:	cdqe   
   140004fb8:	add    r9,rax
   140004fbb:	xor    r9,rdx
   140004fbe:	mov    rcx,r9
   140004fc1:	add    rsp,0x20
   140004fc5:	pop    rbx
   140004fc6:	jmp    0x140003f10
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	int3   
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	jmp    QWORD PTR [rip+0x1314]        # 0x1400062f0
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	int3   
   140004fe1:	int3   
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004ff0:	jmp    rax
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	int3   
   140004ff5:	int3   
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	int3   
   140005001:	int3   
   140005002:	int3   
   140005003:	int3   
   140005004:	int3   
   140005005:	int3   
   140005006:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005010:	sub    rsp,0x10
   140005014:	mov    QWORD PTR [rsp],r10
   140005018:	mov    QWORD PTR [rsp+0x8],r11
   14000501d:	xor    r11,r11
   140005020:	lea    r10,[rsp+0x18]
   140005025:	sub    r10,rax
   140005028:	cmovb  r10,r11
   14000502c:	mov    r11,QWORD PTR gs:0x10
   140005035:	cmp    r10,r11
   140005038:	jae    0x14000504f
   14000503a:	and    r10w,0xf000
   140005040:	lea    r11,[r11-0x1000]
   140005047:	test   BYTE PTR [r11],r11b
   14000504a:	cmp    r10,r11
   14000504d:	jne    0x140005040
   14000504f:	mov    r10,QWORD PTR [rsp]
   140005053:	mov    r11,QWORD PTR [rsp+0x8]
   140005058:	add    rsp,0x10
   14000505c:	ret    
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	int3   
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	int3   
   140005065:	int3   
   140005066:	lea    rcx,[rdx+0x68]
   14000506d:	jmp    0x140003478
   140005072:	lea    rcx,[rdx+0x70]
   140005079:	jmp    0x14000238c
   14000507e:	int3   
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	rex push rbp
   140005086:	sub    rsp,0x20
   14000508a:	mov    rbp,rdx
   14000508d:	mov    rax,QWORD PTR [rcx]
   140005090:	mov    rdx,rcx
   140005093:	mov    ecx,DWORD PTR [rax]
   140005095:	call   0x14000429e
   14000509a:	nop
   14000509b:	add    rsp,0x20
   14000509f:	pop    rbp
   1400050a0:	ret    
   1400050a1:	int3   
   1400050a2:	int3   
   1400050a3:	int3   
   1400050a4:	int3   
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	rex push rbp
   1400050aa:	sub    rsp,0x20
   1400050ae:	mov    rbp,rdx
   1400050b1:	mov    ecx,0x8
   1400050b6:	call   0x14000453e
   1400050bb:	nop
   1400050bc:	add    rsp,0x20
   1400050c0:	pop    rbp
   1400050c1:	ret    
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	int3   
   1400050c9:	mov    QWORD PTR [rsp+0x10],rdx
   1400050ce:	push   rbp
   1400050cf:	sub    rsp,0x20
   1400050d3:	mov    rbp,rdx
   1400050d6:	and    QWORD PTR [rbp+0x50],0x0
   1400050db:	lea    rax,[rip+0xfffffffffffff14b]        # 0x14000422d
   1400050e2:	add    rsp,0x20
   1400050e6:	pop    rbp
   1400050e7:	ret    
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	rex push rbp
   1400050f2:	sub    rsp,0x20
   1400050f6:	mov    rbp,rdx
   1400050f9:	mov    rax,QWORD PTR [rcx]
   1400050fc:	xor    ecx,ecx
   1400050fe:	cmp    DWORD PTR [rax],0xc0000005
   140005104:	sete   cl
   140005107:	mov    eax,ecx
   140005109:	add    rsp,0x20
   14000510d:	pop    rbp
   14000510e:	ret    
   14000510f:	int3   
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	mov    QWORD PTR [rsp+0x10],rdx
   14000511b:	push   rbp
   14000511c:	sub    rsp,0x20
   140005120:	mov    rbp,rdx
   140005123:	mov    rcx,QWORD PTR [rbp+0x68]
   140005127:	mov    QWORD PTR [rbp+0x68],rcx
   14000512b:	xor    eax,eax
   14000512d:	add    rcx,0x1
   140005131:	je     0x140005148
   140005133:	cmp    rcx,0xffffffffffffffff
   140005137:	ja     0x140005143
   140005139:	call   0x140004568
   14000513e:	test   rax,rax
   140005141:	jne    0x140005148
   140005143:	call   0x1400048a0
   140005148:	mov    QWORD PTR [rbp+0x78],rax
   14000514c:	lea    rax,[rip+0xfffffffffffff67b]        # 0x1400047ce
   140005153:	add    rsp,0x20
   140005157:	pop    rbp
   140005158:	ret    
   140005159:	int3   
   14000515a:	mov    QWORD PTR [rsp+0x10],rdx
   14000515f:	push   rbp
   140005160:	sub    rsp,0x20
   140005164:	mov    rbp,rdx
   140005167:	xor    r8d,r8d
   14000516a:	mov    dl,0x1
   14000516c:	mov    rcx,QWORD PTR [rbp+0x60]
   140005170:	call   0x140004840
   140005175:	xor    edx,edx
   140005177:	xor    ecx,ecx
   140005179:	call   0x140004f2c
   14000517e:	nop
   14000517f:	int3   
   140005180:	int3   
   140005181:	int3   
   140005182:	int3   
   140005183:	int3   
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    QWORD PTR [rsp+0x8],rbx
   140005195:	push   rdi
   140005196:	sub    rsp,0x20
   14000519a:	lea    rbx,[rip+0x56bf]        # 0x14000a860
   1400051a1:	mov    rdi,QWORD PTR [rbx]
   1400051a4:	jmp    0x1400051b3
   1400051a6:	mov    rcx,rdi
   1400051a9:	mov    rdi,QWORD PTR [rdi+0x10]
   1400051ad:	call   QWORD PTR [rip+0x10f5]        # 0x1400062a8
   1400051b3:	test   rdi,rdi
   1400051b6:	jne    0x1400051a6
   1400051b8:	mov    QWORD PTR [rbx],rdi
   1400051bb:	lea    rax,[rip+0x573e]        # 0x14000a900
   1400051c2:	add    rbx,0x8
   1400051c6:	cmp    rbx,rax
   1400051c9:	jne    0x1400051a1
   1400051cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051d0:	add    rsp,0x20
   1400051d4:	pop    rdi
   1400051d5:	ret    
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400051e5:	push   rdi
   1400051e6:	sub    rsp,0x20
   1400051ea:	lea    r9,[rsp+0x38]
   1400051ef:	xor    edx,edx
   1400051f1:	lea    r8,[rsp+0x30]
   1400051f6:	lea    rcx,[rip+0x5703]        # 0x14000a900
   1400051fd:	call   QWORD PTR [rip+0xe4d]        # 0x140006050
   140005203:	test   eax,eax
   140005205:	je     0x14000522a
   140005207:	cmp    DWORD PTR [rsp+0x30],0x0
   14000520c:	jne    0x14000522a
   14000520e:	mov    rdi,QWORD PTR [rsp+0x38]
   140005213:	mov    rax,QWORD PTR [rdi]
   140005216:	mov    rbx,QWORD PTR [rax+0x18]
   14000521a:	mov    rcx,rbx
   14000521d:	call   QWORD PTR [rip+0x10ed]        # 0x140006310
   140005223:	xor    edx,edx
   140005225:	mov    rcx,rdi
   140005228:	call   rbx
   14000522a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000522f:	add    rsp,0x20
   140005233:	pop    rdi
   140005234:	ret    
   140005235:	int3   
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	mov    QWORD PTR [rsp+0x18],rbx
   140005245:	push   rdi
   140005246:	sub    rsp,0x20
   14000524a:	lea    r9,[rsp+0x38]
   14000524f:	xor    edx,edx
   140005251:	lea    r8,[rsp+0x30]
   140005256:	lea    rcx,[rip+0x559b]        # 0x14000a7f8
   14000525d:	call   QWORD PTR [rip+0xded]        # 0x140006050
   140005263:	test   eax,eax
   140005265:	je     0x14000528a
   140005267:	cmp    DWORD PTR [rsp+0x30],0x0
   14000526c:	jne    0x14000528a
   14000526e:	mov    rdi,QWORD PTR [rsp+0x38]
   140005273:	mov    rax,QWORD PTR [rdi]
   140005276:	mov    rbx,QWORD PTR [rax+0x18]
   14000527a:	mov    rcx,rbx
   14000527d:	call   QWORD PTR [rip+0x108d]        # 0x140006310
   140005283:	xor    edx,edx
   140005285:	mov    rcx,rdi
   140005288:	call   rbx
   14000528a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000528f:	add    rsp,0x20
   140005293:	pop    rdi
   140005294:	ret    
   140005295:	int3   
   140005296:	int3   
   140005297:	int3   
   140005298:	int3   
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	lea    rax,[rip+0x1271]        # 0x140006518
   1400052a7:	mov    QWORD PTR [rip+0x4d72],rax        # 0x14000a020
   1400052ae:	ret    
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	lea    rax,[rip+0x1251]        # 0x140006518
   1400052c7:	mov    QWORD PTR [rip+0x4d5a],rax        # 0x14000a028
   1400052ce:	ret    
   1400052cf:	int3   
   1400052d0:	int3   
   1400052d1:	int3   
   1400052d2:	int3   
   1400052d3:	int3   
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	int3   
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	lea    rax,[rip+0x1231]        # 0x140006518
   1400052e7:	mov    QWORD PTR [rip+0x4d42],rax        # 0x14000a030
   1400052ee:	ret    

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	outs   dx,BYTE PTR ds:[rsi]
   140006001:	nop
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	adc    BYTE PTR [rax+0x0],0x0
   14000600f:	add    BYTE PTR [rdx+0x90],dl
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rax+0x90],ch
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rax+0x90],bh
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rax-0x70],bl
	...
   140006036:	add    BYTE PTR [rax],al
   140006038:	(bad)  
   140006039:	nop
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	add    BYTE PTR [rax],al
   14000603e:	add    BYTE PTR [rax],al
   140006040:	call   0x1400060d5
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    ah,bh
   140006049:	nop
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	add    BYTE PTR [rax],al
   14000604e:	add    BYTE PTR [rax],al
   140006050:	(bad)  
   140006051:	xchg   ecx,eax
   140006052:	add    BYTE PTR [rax],al
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	sub    BYTE PTR [rcx+0x0],dl
   14000605e:	add    BYTE PTR [rax],al
   140006060:	cmp    al,0x91
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	push   rdx
   140006069:	xchg   ecx,eax
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	push   0x91
   140006075:	add    BYTE PTR [rax],al
   140006077:	add    BYTE PTR [rcx+rdx*4+0x0],bh
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rsi+0x91],dl
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rcx+rdx*4+0x0],ah
   14000608e:	add    BYTE PTR [rax],al
   140006090:	mov    dh,0x91
   140006092:	add    BYTE PTR [rax],al
   140006094:	add    BYTE PTR [rax],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	(bad)  
   140006099:	xchg   ecx,eax
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	add    BYTE PTR [rax],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	(bad)  
   1400060a1:	xchg   ecx,eax
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	add    BYTE PTR [rax],al
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	call   0x14000613e
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    dh,bh
   1400060b1:	xchg   ecx,eax
   1400060b2:	add    BYTE PTR [rax],al
   1400060b4:	add    BYTE PTR [rax],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	adc    al,0x92
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	and    dl,BYTE PTR [rdx+0x0]
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	cs xchg edx,eax
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	xchg   rdx,rax
	...
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	(bad)  
   1400060e1:	add    BYTE PTR [rax],al
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rax],0x0
   1400060ea:	add    BYTE PTR [rax],al
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	enter  0x96,0x0
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	ficom  DWORD PTR [rsi+0x0]
	...
   140006106:	add    BYTE PTR [rax],al
   140006108:	(bad)  
   140006109:	xchg   esp,eax
	...
   140006116:	add    BYTE PTR [rax],al
   140006118:	lods   al,BYTE PTR ds:[rsi]
   140006119:	xchg   esp,eax
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	enter  0x94,0x0
	...
   140006130:	pop    rax
   140006131:	xchg   esp,eax
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	out    0x94,al
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	adc    al,0x95
	...
   14000614e:	add    BYTE PTR [rax],al
   140006150:	cli    
   140006151:	xchg   esp,eax
	...
   14000615e:	add    BYTE PTR [rax],al
   140006160:	cwde   
   140006161:	xchg   esp,eax
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	jle    0x1400060fe
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	push   0xffffffffffffff94
	...
   14000617e:	add    BYTE PTR [rax],al
   140006180:	(bad)  
   140006181:	xchg   ebx,eax
	...
   14000618e:	add    BYTE PTR [rax],al
   140006190:	push   rax
   140006191:	xchg   esp,eax
	...
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	sub    dl,BYTE PTR [rbp+0x0]
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	rex.R xchg ebp,eax
	...
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	cs xchg esp,eax
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	ds xchg esp,eax
	...
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	mov    BYTE PTR [rsi+0x0],dl
	...
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	mov    eax,0x93
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rdx+rdx*4+0x0],dl
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	movabs al,ds:0x9600000000000093
   1400061f9:	xchg   ebx,eax
   1400061fa:	add    BYTE PTR [rax],al
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	mov    BYTE PTR [rbx+0x0],dl
   140006206:	add    BYTE PTR [rax],al
   140006208:	jle    0x14000619d
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	jbe    0x1400061a5
   140006212:	add    BYTE PTR [rax],al
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	(bad)  
   14000621a:	add    BYTE PTR [rax],al
   14000621c:	add    BYTE PTR [rax],al
   14000621e:	add    BYTE PTR [rax],al
   140006220:	rex.WX xchg rbx,rax
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	rex xchg ebx,eax
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	jp     0x1400061c4
   140006232:	add    BYTE PTR [rax],al
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	(bad)  
   140006239:	xchg   ebx,eax
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	adc    dl,BYTE PTR [rbx+0x0]
   140006246:	add    BYTE PTR [rax],al
   140006248:	(bad)  
   140006249:	xchg   edx,eax
   14000624a:	add    BYTE PTR [rax],al
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	hlt    
   140006251:	xchg   edx,eax
   140006252:	add    BYTE PTR [rax],al
   140006254:	add    BYTE PTR [rax],al
   140006256:	add    BYTE PTR [rax],al
   140006258:	in     al,dx
   140006259:	xchg   edx,eax
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	in     al,0x92
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	rcl    BYTE PTR [rdx+0x0],cl
   14000626e:	add    BYTE PTR [rax],al
   140006270:	rcl    BYTE PTR [rdx+0x0],0x0
   140006277:	add    BYTE PTR [rdx+0x92],dh
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rdx+rdx*4+0x0],ah
   140006286:	add    BYTE PTR [rax],al
   140006288:	mov    BYTE PTR [rdx+0x0],dl
   14000628e:	add    BYTE PTR [rax],al
   140006290:	mov    esp,0x97
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    BYTE PTR [rsi+0x97],ah
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    BYTE PTR [rax-0x6e],dh
   1400062a2:	add    BYTE PTR [rax],al
   1400062a4:	add    BYTE PTR [rax],al
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	push   0x92
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    BYTE PTR [rsi],dh
   1400062b1:	xchg   ebx,eax
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	cld    
   1400062b9:	xchg   esi,eax
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	or     BYTE PTR [rdi+0x0],dl
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	adc    dl,BYTE PTR [rdi+0x0]
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	xor    dl,BYTE PTR [rdi+0x0]
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	push   rdx
   1400062d9:	xchg   edi,eax
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	add    BYTE PTR [rax],al
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	jo     0x140006279
   1400062e2:	add    BYTE PTR [rax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	mov    BYTE PTR [rdi+0x0],dl
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	(bad)  
   1400062f1:	xchg   edi,eax
	...
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	movabs ds:0x96,al
   140006309:	add    BYTE PTR [rax],al
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rax+0x1400026],al
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    al,dh
   140006319:	rex.WRXB add BYTE PTR [r8+0x1],r8b
	...
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rax],dl
   140006329:	cmp    al,0x0
   14000632b:	rex add DWORD PTR [rax],eax
   14000632e:	add    BYTE PTR [rax],al
   140006330:	loopne 0x140006343
   140006332:	add    BYTE PTR [rax+0x1],al
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    al,dh
   140006339:	adc    DWORD PTR [rax],eax
   14000633b:	rex add DWORD PTR [rax],eax
   14000633e:	add    BYTE PTR [rax],al
   140006340:	add    BYTE PTR [rdx],dl
   140006342:	add    BYTE PTR [rax+0x1],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    BYTE PTR [rax+0x1400011],al
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax+0x1400011],dh
	...
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rax],dh
   140006369:	cmp    eax,DWORD PTR [rax]
   14000636b:	rex add DWORD PTR [rax],eax
   14000636e:	add    BYTE PTR [rax],al
   140006370:	add    BYTE PTR [rdx+0x0],0x40
   140006374:	add    DWORD PTR [rax],eax
	...
   14000637e:	add    BYTE PTR [rax],al
   140006380:	adc    BYTE PTR [rax],dl
   140006382:	add    BYTE PTR [rax],al
   140006384:	adc    BYTE PTR [rcx],0x0
   140006387:	add    BYTE PTR [rax-0x1fffffef],dh
   14000638d:	adc    DWORD PTR [rax],eax
   14000638f:	add    al,dh
   140006391:	adc    DWORD PTR [rax],eax
   140006393:	add    BYTE PTR [rax],al
   140006395:	adc    al,BYTE PTR [rax]
   140006397:	add    al,al
   140006399:	adc    eax,0x15e00000
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	lock (bad) 
   1400063a2:	add    BYTE PTR [rax],al
   1400063a4:	rex (bad) 
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	mov    al,0x23
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	and    al,0x0
   1400063af:	add    al,dl
   1400063b1:	and    al,0x0
   1400063b3:	add    BYTE PTR [rax+0x25],ah
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	loopne 0x1400063df
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	xor    BYTE PTR [rsi],ah
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	and    BYTE PTR [rsi],0x0
   1400063c3:	add    BYTE PTR [rax+0x40000026],dl
   1400063c9:	sub    al,0x0
   1400063cb:	add    BYTE PTR [rax-0x3fffffd4],dh
   1400063d1:	sub    eax,0x2dd00000
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	adc    BYTE PTR [rsi],ch
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	and    BYTE PTR [rsi],ch
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	xor    BYTE PTR [rdx],0x0
   1400063e3:	add    al,ah
   1400063e5:	xor    eax,DWORD PTR [rax]
   1400063e7:	add    BYTE PTR [rax],al
   1400063e9:	xor    al,0x0
   1400063eb:	add    BYTE PTR [rax+0x3a],ah
   1400063ee:	add    BYTE PTR [rax],al
   1400063f0:	sar    BYTE PTR [rdx],1
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	loopne 0x140006430
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	lock cmp al,BYTE PTR [rax]
   1400063fb:	add    BYTE PTR [rax],al
   1400063fd:	cmp    eax,DWORD PTR [rax]
   1400063ff:	add    BYTE PTR [rax],dl
   140006401:	cmp    eax,DWORD PTR [rax]
   140006403:	add    BYTE PTR [rax],ah
   140006405:	cmp    eax,DWORD PTR [rax]
   140006407:	add    BYTE PTR [rax],dh
   140006409:	cmp    eax,DWORD PTR [rax]
   14000640b:	add    BYTE PTR [rax],dl
   14000640d:	cmp    al,0x0
   14000640f:	add    al,ah
   140006411:	add    BYTE PTR ds:[rax],al
   140006414:	add    BYTE PTR [rax+0x0],al
   140006417:	add    BYTE PTR [rax+0x40],ah
   14000641a:	add    BYTE PTR [rax],al
   14000641c:	loopne 0x14000645f
   14000641e:	add    BYTE PTR [rax],al
   140006420:	rex
   140006421:	rex.X add BYTE PTR [rax],al
   140006424:	add    BYTE PTR [rdx+0x0],0x0
   140006428:	nop
   140006429:	rex.RX add BYTE PTR [rax],r8b
   14000642c:	rol    BYTE PTR [rsi+0x0],1
   14000642f:	add    BYTE PTR [rax],al
   140006431:	rex.RXB add BYTE PTR [r8],r8b
   140006434:	jo     0x140006481
   140006436:	add    BYTE PTR [rax],al
   140006438:	ror    BYTE PTR [rbx+0x0],0x0
   14000643c:	loopne 0x140006489
   14000643e:	add    BYTE PTR [rax],al
   140006440:	add    BYTE PTR [rax+rax*1+0x0],cl
   140006444:	adc    BYTE PTR [rbp+0x0],cl
   140006447:	add    BYTE PTR [rax-0x2fffffb3],al
   14000644d:	rex.WRB add BYTE PTR [r8],r8b
   140006450:	rex
   140006451:	rex.WRX add BYTE PTR [rax],r8b
   140006454:	push   rax
   140006455:	rex.WRX add BYTE PTR [rax],r8b
   140006458:	(bad)  
   140006459:	rex.WRX add BYTE PTR [rax],r8b
   14000645c:	and    BYTE PTR [rdi+0x0],cl
   14000645f:	add    BYTE PTR [rax-0x1fffffaf],dl
   140006465:	push   rcx
   140006466:	add    BYTE PTR [rax],al
   140006468:	rex push rdx
   14000646a:	add    BYTE PTR [rax],al
   14000646c:	movabs al,ds:0xe0000052c0000052
   140006475:	push   rdx
	...
   14000647e:	add    BYTE PTR [rax],al
   140006480:	mov    al,0xa1
   140006482:	add    BYTE PTR [rax+0x1],al
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    BYTE PTR [rax-0x5e],dl
   14000648a:	add    BYTE PTR [rax+0x1],al
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    al,ah
   140006491:	add    BYTE PTR [r8+0x1],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rdx+0x61],ah
   14000649a:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000649e:	ins    BYTE PTR es:[rdi],dx
   14000649f:	outs   dx,DWORD PTR ds:[rsi]
   1400064a0:	movsxd esp,DWORD PTR [rcx+0x74]
   1400064a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x5220000
   1400064aa:	xchg   ebx,eax
   1400064ab:	sbb    DWORD PTR [rdx],eax
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    BYTE PTR [rax],ch
   1400064b1:	mov    BYTE PTR [rax],al
   1400064b3:	add    BYTE PTR [rcx],al
   1400064b5:	add    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rax],bh
   1400064b9:	mov    BYTE PTR [rax],al
   1400064bb:	add    BYTE PTR [rsi],al
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rax-0x78],ah
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	and    BYTE PTR [rax],al
   1400064c6:	add    BYTE PTR [rax],al
   1400064c8:	add    BYTE PTR [rax],al
   1400064ca:	add    BYTE PTR [rax],al
   1400064cc:	add    DWORD PTR [rax],eax
   1400064ce:	add    BYTE PTR [rax],al
   1400064d0:	and    al,BYTE PTR [rip+0x41993]        # 0x140047e69
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	adc    al,0x89
   1400064da:	add    BYTE PTR [rax],al
   1400064dc:	add    al,BYTE PTR [rax]
   1400064de:	add    BYTE PTR [rax],al
   1400064e0:	xor    al,0x89
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	or     BYTE PTR [rax],al
   1400064e6:	add    BYTE PTR [rax],al
   1400064e8:	nop
   1400064e9:	mov    DWORD PTR [rax],eax
   1400064eb:	add    BYTE PTR [rax],ah
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rax],al
   1400064f1:	add    BYTE PTR [rax],al
   1400064f3:	add    BYTE PTR [rcx],al
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    BYTE PTR [rax+0x1400046],dl
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	add    BYTE PTR [rax],ah
   140006501:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rax],al
   140006509:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000650d:	add    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rax],ah
   140006511:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006515:	add    BYTE PTR [rax],al
   140006517:	add    al,dl
   140006519:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000651d:	add    BYTE PTR [rax],al
   14000651f:	add    BYTE PTR [rax],al
   140006521:	add    BYTE PTR [rax+0x1],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rax],al
   140006529:	add    BYTE PTR [rax+0x1],al
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    al,al
   140006531:	rex.WXB add BYTE PTR [r8+0x1],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    al,ah
   140006539:	rex.WXB add BYTE PTR [r8+0x1],al
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    BYTE PTR [rax],al
   140006541:	rex.WR add BYTE PTR [rax+0x1],r8b
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    al,dl
   140006549:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    BYTE PTR [rax+0x4e],al
   140006552:	add    BYTE PTR [rax+0x1],al
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    BYTE PTR [rax],dl
   140006559:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000655d:	add    BYTE PTR [rax],al
   14000655f:	add    al,al
   140006561:	rex.WXB add BYTE PTR [r8+0x1],al
   140006565:	add    BYTE PTR [rax],al
   140006567:	add    al,ah
   140006569:	rex.WXB add BYTE PTR [r8+0x1],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax],al
   140006571:	rex.WR add BYTE PTR [rax+0x1],r8b
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    BYTE PTR [rdi+0x65],ah
   14000657a:	outs   dx,BYTE PTR ds:[rsi]
   14000657b:	gs jb  0x1400065e7
   14000657e:	movsxd eax,DWORD PTR [rax]
   140006580:	jne    0x1400065f0
   140006582:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140006586:	outs   dx,BYTE PTR ds:[rsi]
   140006587:	and    BYTE PTR [rbp+0x72],ah
   14000658a:	jb     0x1400065fb
   14000658c:	jb     0x14000658e
   14000658e:	add    BYTE PTR [rax],al
   140006590:	rol    BYTE PTR [rsi+0x0],1
   140006593:	rex add DWORD PTR [rax],eax
   140006596:	add    BYTE PTR [rax],al
   140006598:	push   rax
   140006599:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    BYTE PTR [rax+0x140004d],al
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    al,al
   1400065a9:	rex.WXB add BYTE PTR [r8+0x1],al
   1400065ad:	add    BYTE PTR [rax],al
   1400065af:	add    al,ah
   1400065b1:	rex.WXB add BYTE PTR [r8+0x1],al
   1400065b5:	add    BYTE PTR [rax],al
   1400065b7:	add    BYTE PTR [rax],al
   1400065b9:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400065bd:	add    BYTE PTR [rax],al
   1400065bf:	add    BYTE PTR [rcx+0x6f],ch
   1400065c2:	jae    0x140006638
   1400065c4:	jb     0x14000662b
   1400065c6:	(bad)  
   1400065c7:	ins    DWORD PTR es:[rdi],dx
	...
   1400065d0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400065d7:	ins    DWORD PTR es:[rdi],dx
   1400065d8:	and    BYTE PTR [rbx+0x74],dh
   1400065db:	jb     0x140006642
   1400065dd:	(bad)  
   1400065de:	ins    DWORD PTR es:[rdi],dx
   1400065df:	and    BYTE PTR [rbp+0x72],ah
   1400065e2:	jb     0x140006653
   1400065e4:	jb     0x1400065e6
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	rol    BYTE PTR [rsi+0x0],1
   1400065eb:	rex add DWORD PTR [rax],eax
   1400065ee:	add    BYTE PTR [rax],al
   1400065f0:	(bad)  
   1400065f1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400065f5:	add    BYTE PTR [rax],al
   1400065f7:	add    al,dl
   1400065f9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400065fd:	add    BYTE PTR [rax],al
   1400065ff:	add    BYTE PTR [rax+0x4b],dh
   140006602:	add    BYTE PTR [rax+0x1],al
   140006605:	add    BYTE PTR [rax],al
   140006607:	add    al,ah
   140006609:	rex.WXB add BYTE PTR [r8+0x1],al
   14000660d:	add    BYTE PTR [rax],al
   14000660f:	add    BYTE PTR [rax],al
   140006611:	rex.WR add BYTE PTR [rax+0x1],r8b
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rbx+0x79],dh
   14000661a:	jae    0x140006690
   14000661c:	gs ins DWORD PTR es:[rdi],dx
   14000661e:	add    BYTE PTR [rax],al
   140006620:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140006627:	and    BYTE PTR [rbx+0x74],dh
   14000662a:	jb     0x140006695
   14000662c:	outs   dx,BYTE PTR ds:[rsi]
   14000662d:	and    BYTE PTR [eax+0x6f],dh
   140006631:	jae    0x14000669c
   140006633:	je     0x14000669e
   140006635:	outs   dx,DWORD PTR ds:[rsi]
   140006636:	outs   dx,BYTE PTR ds:[rsi]
   140006637:	add    BYTE PTR [rbx+0x74],dh
   14000663a:	jb     0x1400066a5
   14000663c:	outs   dx,BYTE PTR ds:[rsi]
   14000663d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140006642:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006646:	add    BYTE PTR [eax],al
   140006649:	add    BYTE PTR [rax],al
   14000664b:	add    BYTE PTR [rax],al
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rip+0x0],al        # 0x140006655
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rax],al
   140006659:	imul   eax,DWORD PTR [rax],0x40
   14000665c:	add    DWORD PTR [rax],eax
   14000665e:	add    BYTE PTR [rax],al
   140006660:	mov    bh,0x0
   140006662:	add    BYTE PTR [rax],al
   140006664:	add    BYTE PTR [rax],al
   140006666:	add    BYTE PTR [rax],al
   140006668:	sbb    BYTE PTR [rbx+0x0],ch
   14000666b:	rex add DWORD PTR [rax],eax
   14000666e:	add    BYTE PTR [rax],al
   140006670:	adc    al,0x0
   140006672:	add    BYTE PTR [rax],al
   140006674:	add    BYTE PTR [rax],al
   140006676:	add    BYTE PTR [rax],al
   140006678:	sub    BYTE PTR [rbx+0x0],ch
   14000667b:	rex add DWORD PTR [rax],eax
   14000667e:	add    BYTE PTR [rax],al
   140006680:	outs   dx,DWORD PTR ds:[rsi]
   140006681:	add    BYTE PTR [rax],al
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rax],bh
   140006689:	imul   eax,DWORD PTR [rax],0x40
   14000668c:	add    DWORD PTR [rax],eax
   14000668e:	add    BYTE PTR [rax],al
   140006690:	stos   BYTE PTR es:[rdi],al
   140006691:	add    BYTE PTR [rax],al
   140006693:	add    BYTE PTR [rax],al
   140006695:	add    BYTE PTR [rax],al
   140006697:	add    BYTE PTR [rax+0x6b],dl
   14000669a:	add    BYTE PTR [rax+0x1],al
   14000669d:	add    BYTE PTR [rax],al
   14000669f:	add    BYTE PTR [rsi+0x0],cl
   1400066a5:	add    BYTE PTR [rax],al
   1400066a7:	add    BYTE PTR [rax+0x6b],dl
   1400066aa:	add    BYTE PTR [rax+0x1],al
   1400066ad:	add    BYTE PTR [rax],al
   1400066af:	add    BYTE PTR [rdx+0x0],dl
   1400066b2:	add    BYTE PTR [rax],al
   1400066b4:	add    BYTE PTR [rax],al
   1400066b6:	add    BYTE PTR [rax],al
   1400066b8:	add    BYTE PTR [rbx+0x0],ch
   1400066bb:	rex add DWORD PTR [rax],eax
   1400066be:	add    BYTE PTR [rax],al
   1400066c0:	repz add eax,DWORD PTR [rax]
   1400066c3:	add    BYTE PTR [rax],al
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	add    BYTE PTR [rax+0x6b],ch
   1400066ca:	add    BYTE PTR [rax+0x1],al
   1400066cd:	add    BYTE PTR [rax],al
   1400066cf:	add    ah,dh
   1400066d1:	add    eax,DWORD PTR [rax]
   1400066d3:	add    BYTE PTR [rax],al
   1400066d5:	add    BYTE PTR [rax],al
   1400066d7:	add    BYTE PTR [rax+0x6b],ch
   1400066da:	add    BYTE PTR [rax+0x1],al
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    ch,dh
   1400066e1:	add    eax,DWORD PTR [rax]
   1400066e3:	add    BYTE PTR [rax],al
   1400066e5:	add    BYTE PTR [rax],al
   1400066e7:	add    BYTE PTR [rax+0x6b],ch
   1400066ea:	add    BYTE PTR [rax+0x1],al
   1400066ed:	add    BYTE PTR [rax],al
   1400066ef:	add    BYTE PTR [rax],dl
	...
   1400066f9:	imul   eax,DWORD PTR [rax],0x40
   1400066fc:	add    DWORD PTR [rax],eax
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	(bad)  
   140006701:	add    BYTE PTR [rax],al
   140006703:	add    BYTE PTR [rax],al
   140006705:	add    BYTE PTR [rax],al
   140006707:	add    BYTE PTR [rax],ch
   140006709:	imul   eax,DWORD PTR [rax],0x40
   14000670c:	add    DWORD PTR [rax],eax
   14000670e:	add    BYTE PTR [rax],al
   140006710:	or     DWORD PTR fs:[rax],eax
   140006713:	add    BYTE PTR [rax],al
   140006715:	add    BYTE PTR [rax],al
   140006717:	add    BYTE PTR [rax+0x6b],dl
   14000671a:	add    BYTE PTR [rax+0x1],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rcx+0x0],dl
   140006725:	add    BYTE PTR [rax],al
   140006727:	add    BYTE PTR [rax+0x6b],bh
   14000672a:	add    BYTE PTR [rax+0x1],al
   14000672d:	add    BYTE PTR [rax],al
   14000672f:	add    BYTE PTR [rbx],cl
   140006731:	add    DWORD PTR [rax],eax
   140006733:	add    BYTE PTR [rax],al
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rax+0x140006b],dl
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    BYTE PTR [rax+0x0],dh
   140006742:	add    BYTE PTR [rax],al
   140006744:	add    BYTE PTR [rax],al
   140006746:	add    BYTE PTR [rax],al
   140006748:	test   al,0x6b
   14000674a:	add    BYTE PTR [rax+0x1],al
   14000674d:	add    BYTE PTR [rax],al
   14000674f:	add    BYTE PTR [rax+0x0],dl
   140006752:	add    BYTE PTR [rax],al
   140006754:	add    BYTE PTR [rax],al
   140006756:	add    BYTE PTR [rax],al
   140006758:	sbb    BYTE PTR [rbx+0x0],ch
   14000675b:	rex add DWORD PTR [rax],eax
   14000675e:	add    BYTE PTR [rax],al
   140006760:	add    al,BYTE PTR [rax]
   140006762:	add    BYTE PTR [rax],al
   140006764:	add    BYTE PTR [rax],al
   140006766:	add    BYTE PTR [rax],al
   140006768:	shr    BYTE PTR [rbx+0x0],0x40
   14000676c:	add    DWORD PTR [rax],eax
   14000676e:	add    BYTE PTR [rax],al
   140006770:	(bad)  
   140006771:	add    BYTE PTR [rax],al
   140006773:	add    BYTE PTR [rax],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rax+0x140006b],ch
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax+rax*1],cl
   140006782:	add    BYTE PTR [rax],al
   140006784:	add    BYTE PTR [rax],al
   140006786:	add    BYTE PTR [rax],al
   140006788:	add    BYTE PTR [rbx+0x0],ch
   14000678b:	rex add DWORD PTR [rax],eax
   14000678e:	add    BYTE PTR [rax],al
   140006790:	sldt   WORD PTR [rax]
   140006793:	add    BYTE PTR [rax],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rax],ch
   140006799:	imul   eax,DWORD PTR [rax],0x40
   14000679c:	add    DWORD PTR [rax],eax
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	add    DWORD PTR [rax],eax
   1400067a2:	add    BYTE PTR [rax],al
   1400067a4:	add    BYTE PTR [rax],al
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	loopne 0x140006815
   1400067aa:	add    BYTE PTR [rax+0x1],al
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rsi],al
   1400067b1:	add    BYTE PTR [rax],al
   1400067b3:	add    BYTE PTR [rax],al
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    BYTE PTR [rax+0x140006b],dl
   1400067bd:	add    BYTE PTR [rax],al
   1400067bf:	add    BYTE PTR [rbx+0x0],bh
   1400067c2:	add    BYTE PTR [rax],al
   1400067c4:	add    BYTE PTR [rax],al
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	nop
   1400067c9:	imul   eax,DWORD PTR [rax],0x40
   1400067cc:	add    DWORD PTR [rax],eax
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	and    DWORD PTR [rax],eax
   1400067d2:	add    BYTE PTR [rax],al
   1400067d4:	add    BYTE PTR [rax],al
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	clc    
   1400067d9:	imul   eax,DWORD PTR [rax],0x40
   1400067dc:	add    DWORD PTR [rax],eax
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	(bad)  
   1400067e1:	add    BYTE PTR [rax],al
   1400067e3:	add    BYTE PTR [rax],al
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    al,bh
   1400067e9:	imul   eax,DWORD PTR [rax],0x40
   1400067ec:	add    DWORD PTR [rax],eax
   1400067ee:	add    BYTE PTR [rax],al
   1400067f0:	add    DWORD PTR [rax],0x0
   1400067f3:	add    BYTE PTR [rax],al
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+0x140006b],dl
   1400067fd:	add    BYTE PTR [rax],al
   1400067ff:	add    dh,ah
   140006801:	add    eax,DWORD PTR [rax]
   140006803:	add    BYTE PTR [rax],al
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rax],al
   140006809:	imul   eax,DWORD PTR [rax],0x40
   14000680c:	add    DWORD PTR [rax],eax
   14000680e:	add    BYTE PTR [rax],al
   140006810:	or     BYTE PTR [rax],al
   140006812:	add    BYTE PTR [rax],al
   140006814:	add    BYTE PTR [rax],al
   140006816:	add    BYTE PTR [rax],al
   140006818:	adc    BYTE PTR [rax+rax*1+0x40],ch
   14000681c:	add    DWORD PTR [rax],eax
   14000681e:	add    BYTE PTR [rax],al
   140006820:	adc    eax,0x0
   140006825:	add    BYTE PTR [rax],al
   140006827:	add    BYTE PTR [rax],ch
   140006829:	ins    BYTE PTR es:[rdi],dx
   14000682a:	add    BYTE PTR [rax+0x1],al
   14000682d:	add    BYTE PTR [rax],al
   14000682f:	add    BYTE PTR [rcx],dl
   140006831:	add    BYTE PTR [rax],al
   140006833:	add    BYTE PTR [rax],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    BYTE PTR [rax+0x6c],cl
   14000683a:	add    BYTE PTR [rax+0x1],al
   14000683d:	add    BYTE PTR [rax],al
   14000683f:	add    BYTE PTR [rsi+0x0],ch
   140006842:	add    BYTE PTR [rax],al
   140006844:	add    BYTE PTR [rax],al
   140006846:	add    BYTE PTR [rax],al
   140006848:	push   0x140006b
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rcx+0x9],ah
   140006852:	add    BYTE PTR [rax],al
   140006854:	add    BYTE PTR [rax],al
   140006856:	add    BYTE PTR [rax],al
   140006858:	push   rax
   140006859:	imul   eax,DWORD PTR [rax],0x40
   14000685c:	add    DWORD PTR [rax],eax
   14000685e:	add    BYTE PTR [rax],al
   140006860:	jrcxz  0x140006865
   140006862:	add    BYTE PTR [rax],al
   140006864:	add    BYTE PTR [rax],al
   140006866:	add    BYTE PTR [rax],al
   140006868:	(bad)  
   140006869:	ins    BYTE PTR es:[rdi],dx
   14000686a:	add    BYTE PTR [rax+0x1],al
   14000686d:	add    BYTE PTR [rax],al
   14000686f:	add    BYTE PTR [rsi],cl
   140006871:	add    BYTE PTR [rax],al
   140006873:	add    BYTE PTR [rax],al
   140006875:	add    BYTE PTR [rax],al
   140006877:	add    BYTE PTR [rax],dl
   140006879:	ins    BYTE PTR es:[rdi],dx
   14000687a:	add    BYTE PTR [rax+0x1],al
   14000687d:	add    BYTE PTR [rax],al
   14000687f:	add    BYTE PTR [rbx],al
   140006881:	add    BYTE PTR [rax],al
   140006883:	add    BYTE PTR [rax],al
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    al,al
   140006889:	imul   eax,DWORD PTR [rax],0x40
   14000688c:	add    DWORD PTR [rax],eax
   14000688e:	add    BYTE PTR [rax],al
   140006890:	(bad)  
   140006891:	add    BYTE PTR [rax],al
   140006893:	add    BYTE PTR [rax],al
   140006895:	add    BYTE PTR [rax],al
   140006897:	add    BYTE PTR [rax+0x6b],ch
   14000689a:	add    BYTE PTR [rax+0x1],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    ch,dl
   1400068a1:	add    al,0x0
   1400068a3:	add    BYTE PTR [rax],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rax],ch
   1400068a9:	ins    BYTE PTR es:[rdi],dx
   1400068aa:	add    BYTE PTR [rax+0x1],al
   1400068ad:	add    BYTE PTR [rax],al
   1400068af:	add    BYTE PTR [rcx],bl
   1400068b1:	add    BYTE PTR [rax],al
   1400068b3:	add    BYTE PTR [rax],al
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rax+0x6b],ch
   1400068ba:	add    BYTE PTR [rax+0x1],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rax],ah
	...
   1400068c9:	imul   eax,DWORD PTR [rax],0x40
   1400068cc:	add    DWORD PTR [rax],eax
   1400068ce:	add    BYTE PTR [rax],al
   1400068d0:	add    al,0x0
   1400068d2:	add    BYTE PTR [rax],al
   1400068d4:	add    BYTE PTR [rax],al
   1400068d6:	add    BYTE PTR [rax],al
   1400068d8:	js     0x140006946
   1400068da:	add    BYTE PTR [rax+0x1],al
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    BYTE PTR [rip+0x0],bl        # 0x1400068e5
   1400068e5:	add    BYTE PTR [rax],al
   1400068e7:	add    BYTE PTR [rax+0x6b],ch
   1400068ea:	add    BYTE PTR [rax+0x1],al
   1400068ed:	add    BYTE PTR [rax],al
   1400068ef:	add    BYTE PTR [rbx],dl
	...
   1400068f9:	imul   eax,DWORD PTR [rax],0x40
   1400068fc:	add    DWORD PTR [rax],eax
   1400068fe:	add    BYTE PTR [rax],al
   140006900:	sbb    eax,0x27
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rax+0x140006c],dl
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax+0x27],al
   140006912:	add    BYTE PTR [rax],al
   140006914:	add    BYTE PTR [rax],al
   140006916:	add    BYTE PTR [rax],al
   140006918:	test   al,0x6c
   14000691a:	add    BYTE PTR [rax+0x1],al
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rcx+0x27],al
   140006922:	add    BYTE PTR [rax],al
   140006924:	add    BYTE PTR [rax],al
   140006926:	add    BYTE PTR [rax],al
   140006928:	mov    eax,0x140006c
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rdi],bh
   140006931:	(bad)  
   140006932:	add    BYTE PTR [rax],al
   140006934:	add    BYTE PTR [rax],al
   140006936:	add    BYTE PTR [rax],al
   140006938:	shr    BYTE PTR [rax+rax*1+0x40],1
   14000693c:	add    DWORD PTR [rax],eax
   14000693e:	add    BYTE PTR [rax],al
   140006940:	xor    eax,0x27
   140006945:	add    BYTE PTR [rax],al
   140006947:	add    al,dh
   140006949:	ins    BYTE PTR es:[rdi],dx
   14000694a:	add    BYTE PTR [rax+0x1],al
   14000694d:	add    BYTE PTR [rax],al
   14000694f:	add    BYTE PTR [rcx],bl
   140006951:	(bad)  
   140006952:	add    BYTE PTR [rax],al
   140006954:	add    BYTE PTR [rax],al
   140006956:	add    BYTE PTR [rax],al
   140006958:	adc    BYTE PTR [rbp+0x0],ch
   14000695b:	rex add DWORD PTR [rax],eax
   14000695e:	add    BYTE PTR [rax],al
   140006960:	rex.RB (bad) 
   140006962:	add    BYTE PTR [rax],al
   140006964:	add    BYTE PTR [rax],al
   140006966:	add    BYTE PTR [rax],al
   140006968:	sub    BYTE PTR [rbp+0x0],ch
   14000696b:	rex add DWORD PTR [rax],eax
   14000696e:	add    BYTE PTR [rax],al
   140006970:	rex.WRB (bad) 
   140006972:	add    BYTE PTR [rax],al
   140006974:	add    BYTE PTR [rax],al
   140006976:	add    BYTE PTR [rax],al
   140006978:	rex ins DWORD PTR es:[rdi],dx
   14000697a:	add    BYTE PTR [rax+0x1],al
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    BYTE PTR [rsi+0x27],al
   140006982:	add    BYTE PTR [rax],al
   140006984:	add    BYTE PTR [rax],al
   140006986:	add    BYTE PTR [rax],al
   140006988:	pop    rax
   140006989:	ins    DWORD PTR es:[rdi],dx
   14000698a:	add    BYTE PTR [rax+0x1],al
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    BYTE PTR [rdi],dh
   140006991:	(bad)  
   140006992:	add    BYTE PTR [rax],al
   140006994:	add    BYTE PTR [rax],al
   140006996:	add    BYTE PTR [rax],al
   140006998:	jo     0x140006a07
   14000699a:	add    BYTE PTR [rax+0x1],al
   14000699d:	add    BYTE PTR [rax],al
   14000699f:	add    BYTE PTR [rsi],bl
   1400069a1:	(bad)  
   1400069a2:	add    BYTE PTR [rax],al
   1400069a4:	add    BYTE PTR [rax],al
   1400069a6:	add    BYTE PTR [rax],al
   1400069a8:	nop
   1400069a9:	ins    DWORD PTR es:[rdi],dx
   1400069aa:	add    BYTE PTR [rax+0x1],al
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rcx+0x27],dl
   1400069b2:	add    BYTE PTR [rax],al
   1400069b4:	add    BYTE PTR [rax],al
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	movabs al,ds:0x340000000140006d
   1400069c1:	(bad)  
   1400069c2:	add    BYTE PTR [rax],al
   1400069c4:	add    BYTE PTR [rax],al
   1400069c6:	add    BYTE PTR [rax],al
   1400069c8:	mov    eax,0x140006d
   1400069cd:	add    BYTE PTR [rax],al
   1400069cf:	add    BYTE PTR [rdi+riz*1],dl
   1400069d2:	add    BYTE PTR [rax],al
   1400069d4:	add    BYTE PTR [rax],al
   1400069d6:	add    BYTE PTR [rax],al
   1400069d8:	shr    BYTE PTR [rbp+0x0],1
   1400069db:	rex add DWORD PTR [rax],eax
   1400069de:	add    BYTE PTR [rax],al
   1400069e0:	es (bad) 
   1400069e2:	add    BYTE PTR [rax],al
   1400069e4:	add    BYTE PTR [rax],al
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	loopne 0x140006a57
   1400069ea:	add    BYTE PTR [rax+0x1],al
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    BYTE PTR [rax+0x27],cl
   1400069f2:	add    BYTE PTR [rax],al
   1400069f4:	add    BYTE PTR [rax],al
   1400069f6:	add    BYTE PTR [rax],al
   1400069f8:	clc    
   1400069f9:	ins    DWORD PTR es:[rdi],dx
   1400069fa:	add    BYTE PTR [rax+0x1],al
   1400069fd:	add    BYTE PTR [rax],al
   1400069ff:	add    BYTE PTR [rax],ch
   140006a01:	(bad)  
   140006a02:	add    BYTE PTR [rax],al
   140006a04:	add    BYTE PTR [rax],al
   140006a06:	add    BYTE PTR [rax],al
   140006a08:	adc    BYTE PTR [rsi+0x0],ch
   140006a0b:	rex add DWORD PTR [rax],eax
   140006a0e:	add    BYTE PTR [rax],al
   140006a10:	cmp    BYTE PTR [rdi],ah
   140006a12:	add    BYTE PTR [rax],al
   140006a14:	add    BYTE PTR [rax],al
   140006a16:	add    BYTE PTR [rax],al
   140006a18:	sub    BYTE PTR [rsi+0x0],ch
   140006a1b:	rex add DWORD PTR [rax],eax
   140006a1e:	add    BYTE PTR [rax],al
   140006a20:	rex.WRXB (bad) 
   140006a22:	add    BYTE PTR [rax],al
   140006a24:	add    BYTE PTR [rax],al
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	cmp    BYTE PTR [rsi+0x0],ch
   140006a2b:	rex add DWORD PTR [rax],eax
   140006a2e:	add    BYTE PTR [rax],al
   140006a30:	rex.X (bad) 
   140006a32:	add    BYTE PTR [rax],al
   140006a34:	add    BYTE PTR [rax],al
   140006a36:	add    BYTE PTR [rax],al
   140006a38:	push   rax
   140006a39:	outs   dx,BYTE PTR ds:[rsi]
   140006a3a:	add    BYTE PTR [rax+0x1],al
   140006a3d:	add    BYTE PTR [rax],al
   140006a3f:	add    BYTE PTR [rdi+riz*1+0x0],al
   140006a43:	add    BYTE PTR [rax],al
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rax+0x6e],ah
   140006a4a:	add    BYTE PTR [rax+0x1],al
   140006a4d:	add    BYTE PTR [rax],al
   140006a4f:	add    BYTE PTR [rbx+0x27],al
   140006a52:	add    BYTE PTR [rax],al
   140006a54:	add    BYTE PTR [rax],al
   140006a56:	add    BYTE PTR [rax],al
   140006a58:	jo     0x140006ac8
   140006a5a:	add    BYTE PTR [rax+0x1],al
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    BYTE PTR [rdi+0x27],al
   140006a62:	add    BYTE PTR [rax],al
   140006a64:	add    BYTE PTR [rax],al
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	mov    BYTE PTR [rsi+0x0],ch
   140006a6b:	rex add DWORD PTR [rax],eax
   140006a6e:	add    BYTE PTR [rax],al
   140006a70:	cmp    ah,BYTE PTR [rdi]
   140006a72:	add    BYTE PTR [rax],al
   140006a74:	add    BYTE PTR [rax],al
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	cwde   
   140006a79:	outs   dx,BYTE PTR ds:[rsi]
   140006a7a:	add    BYTE PTR [rax+0x1],al
   140006a7d:	add    BYTE PTR [rax],al
   140006a7f:	add    BYTE PTR [rcx+0x27],cl
   140006a82:	add    BYTE PTR [rax],al
   140006a84:	add    BYTE PTR [rax],al
   140006a86:	add    BYTE PTR [rax],al
   140006a88:	mov    al,0x6e
   140006a8a:	add    BYTE PTR [rax+0x1],al
   140006a8d:	add    BYTE PTR [rax],al
   140006a8f:	add    BYTE PTR [rsi],dh
   140006a91:	(bad)  
   140006a92:	add    BYTE PTR [rax],al
   140006a94:	add    BYTE PTR [rax],al
   140006a96:	add    BYTE PTR [rax],al
   140006a98:	shr    BYTE PTR [rsi+0x0],0x40
   140006a9c:	add    DWORD PTR [rax],eax
   140006a9e:	add    BYTE PTR [rax],al
   140006aa0:	cmp    eax,0x27
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    al,dl
   140006aa9:	outs   dx,BYTE PTR ds:[rsi]
   140006aaa:	add    BYTE PTR [rax+0x1],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	add    BYTE PTR [rbx],bh
   140006ab1:	(bad)  
   140006ab2:	add    BYTE PTR [rax],al
   140006ab4:	add    BYTE PTR [rax],al
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	call   0x141406b2b
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	add    BYTE PTR [rcx],bh
   140006ac1:	(bad)  
   140006ac2:	add    BYTE PTR [rax],al
   140006ac4:	add    BYTE PTR [rax],al
   140006ac6:	add    BYTE PTR [rax],al
   140006ac8:	add    BYTE PTR [rdi+0x0],ch
   140006acb:	rex add DWORD PTR [rax],eax
   140006ace:	add    BYTE PTR [rax],al
   140006ad0:	rex.WR (bad) 
   140006ad2:	add    BYTE PTR [rax],al
   140006ad4:	add    BYTE PTR [rax],al
   140006ad6:	add    BYTE PTR [rax],al
   140006ad8:	sbb    BYTE PTR [rdi+0x0],ch
   140006adb:	rex add DWORD PTR [rax],eax
   140006ade:	add    BYTE PTR [rax],al
   140006ae0:	xor    esp,DWORD PTR [rdi]
   140006ae2:	add    BYTE PTR [rax],al
   140006ae4:	add    BYTE PTR [rax],al
   140006ae6:	add    BYTE PTR [rax],al
   140006ae8:	sub    BYTE PTR [rdi+0x0],ch
   140006aeb:	rex add DWORD PTR [rax],eax
	...
   140006afe:	add    BYTE PTR [rax],al
   140006b00:	jo     0x140006b67
   140006b02:	jb     0x140006b71
   140006b04:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140006b0b:	fs outs dx,BYTE PTR gs:[rsi]
   140006b0e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    BYTE PTR [rsi+0x69],ah
   140006b1a:	ins    BYTE PTR es:[rdi],dx
   140006b1b:	and    BYTE PTR gs:[rbp+0x78],ah
   140006b1f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140006b26:	add    BYTE PTR [rax],al
   140006b28:	outs   dx,BYTE PTR ds:[rsi]
   140006b29:	outs   dx,DWORD PTR ds:[rsi]
   140006b2a:	and    BYTE PTR [rbx+0x75],dh
   140006b2d:	movsxd ebp,DWORD PTR [rax+0x20]
   140006b30:	fs gs jbe 0x140006b9d
   140006b34:	movsxd esp,DWORD PTR [rbp+0x0]
   140006b37:	add    BYTE PTR [rsi+0x69],ah
   140006b3a:	ins    BYTE PTR es:[rdi],dx
   140006b3b:	outs   dx,BYTE PTR gs:[rsi]
   140006b3d:	(bad)  
   140006b3e:	ins    DWORD PTR es:[rdi],dx
   140006b3f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140006b44:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006b48:	add    BYTE PTR [eax],al
   140006b4b:	add    BYTE PTR [rax],al
   140006b4d:	add    BYTE PTR [rax],al
   140006b4f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140006b53:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140006b5a:	jb     0x140006bc1
   140006b5c:	jae    0x140006bcd
   140006b5e:	jne    0x140006bd2
   140006b60:	movsxd esp,DWORD PTR [rbp+0x20]
   140006b63:	(bad)  
   140006b64:	jne    0x140006bd9
   140006b66:	jns    0x140006b68
   140006b68:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140006b6f:	jb     0x140006b71
   140006b71:	add    BYTE PTR [rax],al
   140006b73:	add    BYTE PTR [rax],al
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140006b7b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140006b80:	jns    0x140006ba2
   140006b82:	outs   dx,BYTE PTR ds:[rsi]
   140006b83:	outs   dx,DWORD PTR ds:[rsi]
   140006b84:	je     0x140006ba6
   140006b86:	gs ins DWORD PTR es:[rdi],dx
   140006b88:	jo     0x140006bfe
   140006b8a:	jns    0x140006b8c
   140006b8c:	add    BYTE PTR [rax],al
   140006b8e:	add    BYTE PTR [rax],al
   140006b90:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140006b97:	and    BYTE PTR [rcx+0x72],ah
   140006b9a:	addr32 jne 0x140006c0a
   140006b9d:	outs   dx,BYTE PTR gs:[rsi]
   140006b9f:	je     0x140006ba1
   140006ba1:	add    BYTE PTR [rax],al
   140006ba3:	add    BYTE PTR [rax],al
   140006ba5:	add    BYTE PTR [rax],al
   140006ba7:	add    BYTE PTR [rsi+0x6f],ch
   140006baa:	and    BYTE PTR [rbx+0x70],dh
   140006bad:	(bad)  
   140006bae:	movsxd esp,DWORD PTR [rbp+0x20]
   140006bb1:	outs   dx,DWORD PTR ds:[rsi]
   140006bb2:	outs   dx,BYTE PTR ds:[rsi]
   140006bb3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140006bb7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140006bbe:	add    BYTE PTR [rax],al
   140006bc0:	outs   dx,BYTE PTR ds:[rsi]
   140006bc1:	outs   dx,DWORD PTR ds:[rsi]
   140006bc2:	and    BYTE PTR [rbx+0x75],dh
   140006bc5:	movsxd ebp,DWORD PTR [rax+0x20]
   140006bc8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140006bcf:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140006bd3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140006bd8:	jns    0x140006bda
   140006bda:	add    BYTE PTR [rax],al
   140006bdc:	add    BYTE PTR [rax],al
   140006bde:	add    BYTE PTR [rax],al
   140006be0:	data16 jne 0x140006c51
   140006be3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140006be7:	outs   dx,BYTE PTR ds:[rsi]
   140006be8:	and    BYTE PTR [rsi+0x6f],ch
   140006beb:	je     0x140006c0d
   140006bed:	jae    0x140006c64
   140006bef:	jo     0x140006c61
   140006bf1:	outs   dx,DWORD PTR ds:[rsi]
   140006bf2:	jb     0x140006c68
   140006bf4:	gs add BYTE PTR fs:[rax],al
   140006bf8:	outs   dx,BYTE PTR ds:[rsi]
   140006bf9:	outs   dx,DWORD PTR ds:[rsi]
   140006bfa:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140006bfe:	imul   esp,DWORD PTR [rax],0x61
   140006c01:	jbe    0x140006c64
   140006c03:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140006c0b:	add    BYTE PTR [rax],al
   140006c0d:	add    BYTE PTR [rax],al
   140006c0f:	add    BYTE PTR [rsi+0x6f],ch
   140006c12:	je     0x140006c34
   140006c14:	outs   dx,BYTE PTR gs:[rsi]
   140006c16:	outs   dx,DWORD PTR ds:[rsi]
   140006c17:	jne    0x140006c80
   140006c19:	push   0x6d656d20
   140006c1e:	outs   dx,DWORD PTR ds:[rsi]
   140006c1f:	jb     0x140006c9a
   140006c21:	add    BYTE PTR [rax],al
   140006c23:	add    BYTE PTR [rax],al
   140006c25:	add    BYTE PTR [rax],al
   140006c27:	add    BYTE PTR [rdx+0x65],dh
   140006c2a:	jae    0x140006c9b
   140006c2c:	jne    0x140006ca0
   140006c2e:	movsxd esp,DWORD PTR [rbp+0x20]
   140006c31:	jne    0x140006ca1
   140006c33:	(bad)  
   140006c34:	jbe    0x140006c97
   140006c36:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140006c3e:	jb     0x140006cb9
   140006c40:	and    BYTE PTR [rcx+0x67],ah
   140006c43:	(bad)  
   140006c44:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140006c4b:	jae    0x140006cc0
   140006c4d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140006c51:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140006c58:	imul   eax,DWORD PTR [rax],0x0
   140006c5b:	add    BYTE PTR [rax],al
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rdi+0x70],ch
   140006c62:	gs jb  0x140006cc6
   140006c65:	je     0x140006cd0
   140006c67:	outs   dx,DWORD PTR ds:[rsi]
   140006c68:	outs   dx,BYTE PTR ds:[rsi]
   140006c69:	and    BYTE PTR [rbx+0x61],ah
   140006c6c:	outs   dx,BYTE PTR ds:[rsi]
   140006c6d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140006c70:	gs add BYTE PTR fs:[rax],al
   140006c74:	add    BYTE PTR [rax],al
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	je     0x140006ce9
   140006c7a:	outs   dx,DWORD PTR ds:[rsi]
   140006c7b:	and    BYTE PTR [rbp+0x61],ch
   140006c7e:	outs   dx,BYTE PTR ds:[rsi]
   140006c7f:	jns    0x140006ca1
   140006c81:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140006c88:	jo     0x140006cef
   140006c8a:	outs   dx,BYTE PTR ds:[rsi]
   140006c8b:	add    BYTE PTR [rax],al
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    BYTE PTR [rax+0x65],dh
   140006c92:	jb     0x140006d01
   140006c94:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140006c9b:	fs outs dx,BYTE PTR gs:[rsi]
   140006c9e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140006ca5:	add    BYTE PTR [rax],al
   140006ca7:	add    BYTE PTR [rcx+0x64],ah
   140006caa:	fs jb  0x140006d12
   140006cad:	jae    0x140006d22
   140006caf:	pop    rdi
   140006cb0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140006cb7:	add    BYTE PTR [rcx+0x64],ah
   140006cba:	fs jb  0x140006d22
   140006cbd:	jae    0x140006d32
   140006cbf:	pop    rdi
   140006cc0:	outs   dx,BYTE PTR ds:[rsi]
   140006cc1:	outs   dx,DWORD PTR ds:[rsi]
   140006cc2:	je     0x140006d23
   140006cc4:	(bad)  
   140006cc5:	jbe    0x140006d28
   140006cc7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140006ccf:	add    BYTE PTR [rcx+0x64],ah
   140006cd2:	fs jb  0x140006d3a
   140006cd5:	jae    0x140006d4a
   140006cd7:	pop    rdi
   140006cd8:	data16 (bad) 
   140006cda:	ins    DWORD PTR es:[rdi],dx
   140006cdb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140006ce3:	jae    0x140006d5a
   140006ce5:	jo     0x140006d57
   140006ce7:	outs   dx,DWORD PTR ds:[rsi]
   140006ce8:	jb     0x140006d5e
   140006cea:	gs add BYTE PTR fs:[rax],al
   140006cee:	add    BYTE PTR [rax],al
   140006cf0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006cf3:	outs   dx,BYTE PTR ds:[rsi]
   140006cf4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006cf9:	outs   dx,BYTE PTR ds:[rsi]
   140006cfa:	pop    rdi
   140006cfb:	(bad)  
   140006cfc:	ins    BYTE PTR es:[rdi],dx
   140006cfd:	jb     0x140006d64
   140006cff:	(bad)  
   140006d00:	fs jns 0x140006d62
   140006d03:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140006d0a:	jb     0x140006d71
   140006d0c:	jae    0x140006d81
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	(bad)
   140006d15:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140006d1d:	jb     0x140006d88
   140006d1f:	jo     0x140006d95
   140006d21:	outs   dx,DWORD PTR ds:[rsi]
   140006d22:	jb     0x140006d24
   140006d24:	add    BYTE PTR [rax],al
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006d2b:	outs   dx,BYTE PTR ds:[rsi]
   140006d2c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006d31:	outs   dx,BYTE PTR ds:[rsi]
   140006d32:	pop    rdi
   140006d33:	(bad)  
   140006d34:	(bad)  
   140006d35:	outs   dx,DWORD PTR ds:[rsi]
   140006d36:	jb     0x140006dac
   140006d38:	gs add BYTE PTR fs:[rax],al
   140006d3c:	add    BYTE PTR [rax],al
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006d43:	outs   dx,BYTE PTR ds:[rsi]
   140006d44:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006d49:	outs   dx,BYTE PTR ds:[rsi]
   140006d4a:	pop    rdi
   140006d4b:	jb     0x140006db2
   140006d4d:	data16 jne 0x140006dc3
   140006d50:	gs add BYTE PTR fs:[rax],al
   140006d54:	add    BYTE PTR [rax],al
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006d5b:	outs   dx,BYTE PTR ds:[rsi]
   140006d5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006d61:	outs   dx,BYTE PTR ds:[rsi]
   140006d62:	pop    rdi
   140006d63:	jb     0x140006dca
   140006d65:	jae    0x140006dcc
   140006d67:	je     0x140006d69
   140006d69:	add    BYTE PTR [rax],al
   140006d6b:	add    BYTE PTR [rax],al
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140006d73:	je     0x140006dde
   140006d75:	outs   dx,BYTE PTR ds:[rsi]
   140006d76:	(bad)  
   140006d77:	je     0x140006de2
   140006d79:	outs   dx,DWORD PTR ds:[rsi]
   140006d7a:	outs   dx,BYTE PTR ds:[rsi]
   140006d7b:	pop    rdi
   140006d7c:	(bad)  
   140006d7d:	fs fs jb 0x140006de6
   140006d81:	jae    0x140006df6
   140006d83:	pop    rdi
   140006d84:	jb     0x140006deb
   140006d86:	jno    0x140006dfd
   140006d88:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140006d8f:	add    BYTE PTR [rdx+0x61],ah
   140006d92:	fs pop rdi
   140006d94:	(bad)  
   140006d95:	fs fs jb 0x140006dfe
   140006d99:	jae    0x140006e0e
   140006d9b:	add    BYTE PTR [rax],al
   140006d9d:	add    BYTE PTR [rax],al
   140006d9f:	add    BYTE PTR [rax+0x6f],ch
   140006da2:	jae    0x140006e18
   140006da4:	pop    rdi
   140006da5:	jne    0x140006e15
   140006da7:	jb     0x140006e0e
   140006da9:	(bad)  
   140006daa:	movsxd ebp,DWORD PTR [rax+0x61]
   140006dad:	(bad)  
   140006dae:	ins    BYTE PTR es:[rdi],dx
   140006daf:	add    BYTE PTR gs:[rax],al
   140006db2:	add    BYTE PTR [rax],al
   140006db4:	add    BYTE PTR [rax],al
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	outs   dx,DWORD PTR ds:[rsi]
   140006db9:	jo     0x140006e20
   140006dbb:	jb     0x140006e1e
   140006dbd:	je     0x140006e28
   140006dbf:	outs   dx,DWORD PTR ds:[rsi]
   140006dc0:	outs   dx,BYTE PTR ds:[rsi]
   140006dc1:	pop    rdi
   140006dc2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140006dc9:	jb     0x140006e30
   140006dcb:	jae    0x140006e40
   140006dcd:	add    BYTE PTR [rax],al
   140006dcf:	add    BYTE PTR [rcx+0x6e],ch
   140006dd2:	je     0x140006e39
   140006dd4:	jb     0x140006e48
   140006dd6:	jne    0x140006e48
   140006dd8:	je     0x140006e3f
   140006dda:	add    BYTE PTR fs:[rax],al
   140006ddd:	add    BYTE PTR [rax],al
   140006ddf:	add    BYTE PTR [rcx+0x6e],ch
   140006de2:	jbe    0x140006e45
   140006de4:	ins    BYTE PTR es:[rdi],dx
   140006de5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140006ded:	outs   dx,BYTE PTR gs:[rsi]
   140006def:	je     0x140006df1
   140006df1:	add    BYTE PTR [rax],al
   140006df3:	add    BYTE PTR [rax],al
   140006df5:	add    BYTE PTR [rax],al
   140006df7:	add    BYTE PTR [rcx+0x6c],ah
   140006dfa:	jb     0x140006e61
   140006dfc:	(bad)  
   140006dfd:	fs jns 0x140006e5f
   140006e00:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006e03:	outs   dx,BYTE PTR ds:[rsi]
   140006e04:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140006e09:	add    BYTE PTR [rax],al
   140006e0b:	add    BYTE PTR [rax],al
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140006e13:	pop    rdi
   140006e14:	ins    DWORD PTR es:[rdi],dx
   140006e15:	(bad)  
   140006e16:	outs   dx,BYTE PTR ds:[rsi]
   140006e17:	jns    0x140006e78
   140006e19:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140006e20:	jo     0x140006e87
   140006e22:	outs   dx,BYTE PTR ds:[rsi]
   140006e23:	add    BYTE PTR [rax],al
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rbp+0x65],ch
   140006e2a:	jae    0x140006e9f
   140006e2c:	(bad)  
   140006e2d:	addr32 gs pop rdi
   140006e30:	jae    0x140006e9b
   140006e32:	jp     0x140006e99
   140006e34:	add    BYTE PTR [rax],al
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140006e3f:	gs pop rdi
   140006e41:	je     0x140006eb2
   140006e43:	outs   dx,DWORD PTR ds:[rsi]
   140006e44:	pop    rdi
   140006e45:	ins    BYTE PTR es:[rdi],dx
   140006e46:	outs   dx,DWORD PTR ds:[rsi]
   140006e47:	outs   dx,BYTE PTR ds:[rsi]
   140006e48:	add    BYTE PTR [eax],al
   140006e4b:	add    BYTE PTR [rax],al
   140006e4d:	add    BYTE PTR [rax],al
   140006e4f:	add    BYTE PTR [rsi+0x65],ch
   140006e52:	je     0x140006ecb
   140006e54:	outs   dx,DWORD PTR ds:[rsi]
   140006e55:	jb     0x140006ec2
   140006e57:	pop    rdi
   140006e58:	outs   dx,DWORD PTR fs:[rsi]
   140006e5a:	ja     0x140006eca
   140006e5c:	add    BYTE PTR [rax],al
   140006e5e:	add    BYTE PTR [rax],al
   140006e60:	outs   dx,BYTE PTR ds:[rsi]
   140006e61:	gs je  0x140006edb
   140006e64:	outs   dx,DWORD PTR ds:[rsi]
   140006e65:	jb     0x140006ed2
   140006e67:	pop    rdi
   140006e68:	jb     0x140006ecf
   140006e6a:	jae    0x140006ed1
   140006e6c:	je     0x140006e6e
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	outs   dx,BYTE PTR ds:[rsi]
   140006e71:	gs je  0x140006eeb
   140006e74:	outs   dx,DWORD PTR ds:[rsi]
   140006e75:	jb     0x140006ee2
   140006e77:	pop    rdi
   140006e78:	jne    0x140006ee8
   140006e7a:	jb     0x140006ee1
   140006e7c:	(bad)  
   140006e7d:	movsxd ebp,DWORD PTR [rax+0x61]
   140006e80:	(bad)  
   140006e81:	ins    BYTE PTR es:[rdi],dx
   140006e82:	add    BYTE PTR gs:[rax],al
   140006e85:	add    BYTE PTR [rax],al
   140006e87:	add    BYTE PTR [rsi+0x6f],ch
   140006e8a:	pop    rdi
   140006e8b:	(bad)  
   140006e8c:	jne    0x140006ef4
   140006e8e:	data16 gs jb 0x140006ef1
   140006e92:	jae    0x140006f04
   140006e94:	(bad)  
   140006e95:	movsxd esp,DWORD PTR [rbp+0x0]
   140006e98:	outs   dx,BYTE PTR ds:[rsi]
   140006e99:	outs   dx,DWORD PTR ds:[rsi]
   140006e9a:	pop    rdi
   140006e9b:	jo     0x140006f0f
   140006e9d:	outs   dx,DWORD PTR ds:[rsi]
   140006e9e:	je     0x140006f0f
   140006ea0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006ea3:	pop    rdi
   140006ea4:	outs   dx,DWORD PTR ds:[rsi]
   140006ea5:	jo     0x140006f1b
   140006ea7:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	outs   dx,BYTE PTR ds:[rsi]
   140006eb1:	outs   dx,DWORD PTR ds:[rsi]
   140006eb2:	je     0x140006f13
   140006eb4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006eb7:	outs   dx,BYTE PTR ds:[rsi]
   140006eb8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rsi+0x6f],ch
   140006ec2:	je     0x140006f23
   140006ec4:	(bad)  
   140006ec5:	pop    rdi
   140006ec6:	jae    0x140006f37
   140006ec8:	movsxd ebp,DWORD PTR [rbx+0x65]
   140006ecb:	je     0x140006ecd
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rdi+0x70],ch
   140006ed2:	gs jb  0x140006f36
   140006ed5:	je     0x140006f40
   140006ed7:	outs   dx,DWORD PTR ds:[rsi]
   140006ed8:	outs   dx,BYTE PTR ds:[rsi]
   140006ed9:	pop    rdi
   140006eda:	outs   dx,BYTE PTR ds:[rsi]
   140006edb:	outs   dx,DWORD PTR ds:[rsi]
   140006edc:	je     0x140006f3d
   140006ede:	jae    0x140006f55
   140006ee0:	jo     0x140006f52
   140006ee2:	outs   dx,DWORD PTR ds:[rsi]
   140006ee3:	jb     0x140006f59
   140006ee5:	gs add BYTE PTR fs:[rax+0x72],dh
   140006eea:	outs   dx,DWORD PTR ds:[rsi]
   140006eeb:	je     0x140006f5c
   140006eed:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006ef0:	pop    rdi
   140006ef1:	outs   dx,BYTE PTR ds:[rsi]
   140006ef2:	outs   dx,DWORD PTR ds:[rsi]
   140006ef3:	je     0x140006f54
   140006ef5:	jae    0x140006f6c
   140006ef7:	jo     0x140006f69
   140006ef9:	outs   dx,DWORD PTR ds:[rsi]
   140006efa:	jb     0x140006f70
   140006efc:	gs add BYTE PTR fs:[rax],al
   140006f00:	ja     0x140006f74
   140006f02:	outs   dx,DWORD PTR ds:[rsi]
   140006f03:	outs   dx,BYTE PTR ds:[rsi]
   140006f04:	addr32 pop rdi
   140006f06:	jo     0x140006f7a
   140006f08:	outs   dx,DWORD PTR ds:[rsi]
   140006f09:	je     0x140006f7a
   140006f0b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006f0e:	pop    rdi
   140006f0f:	je     0x140006f8a
   140006f11:	jo     0x140006f78
   140006f13:	add    BYTE PTR [rax],al
   140006f15:	add    BYTE PTR [rax],al
   140006f17:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140006f1b:	gs fs pop rdi
   140006f1e:	outs   dx,DWORD PTR ds:[rsi]
   140006f1f:	jne    0x140006f95
   140006f21:	add    BYTE PTR [rax],al
   140006f23:	add    BYTE PTR [rax],al
   140006f25:	add    BYTE PTR [rax],al
   140006f27:	add    BYTE PTR [rdi+0x70],ch
   140006f2a:	gs jb  0x140006f8e
   140006f2d:	je     0x140006f98
   140006f2f:	outs   dx,DWORD PTR ds:[rsi]
   140006f30:	outs   dx,BYTE PTR ds:[rsi]
   140006f31:	pop    rdi
   140006f32:	ja     0x140006fa3
   140006f34:	jne    0x140006fa2
   140006f36:	fs pop rdi
   140006f38:	(bad)  
   140006f39:	ins    BYTE PTR es:[rdi],dx
   140006f3a:	outs   dx,DWORD PTR ds:[rsi]
   140006f3b:	movsxd ebp,DWORD PTR [rbx+0x0]
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	data16 add BYTE PTR [rax],al
   140006f43:	add    BYTE PTR [rax],al
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rax],dh
   140006f49:	je     0x140006f4b
   140006f4b:	rex add DWORD PTR [rax],eax
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	add    BYTE PTR fs:[rax],al
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	add    BYTE PTR [rax],al
   140006f57:	add    BYTE PTR [rax+0x74],dl
   140006f5a:	add    BYTE PTR [rax+0x1],al
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rbp+0x0],ah
   140006f62:	add    BYTE PTR [rax],al
   140006f64:	add    BYTE PTR [rax],al
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	(bad)  
   140006f69:	je     0x140006f6b
   140006f6b:	rex add DWORD PTR [rax],eax
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	jno    0x140006f72
   140006f72:	add    BYTE PTR [rax],al
   140006f74:	add    BYTE PTR [rax],al
   140006f76:	add    BYTE PTR [rax],al
   140006f78:	js     0x140006fee
   140006f7a:	add    BYTE PTR [rax+0x1],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rdi],al
   140006f81:	add    BYTE PTR [rax],al
   140006f83:	add    BYTE PTR [rax],al
   140006f85:	add    BYTE PTR [rax],al
   140006f87:	add    BYTE PTR [rax+0x1400074],dl
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rcx],ah
   140006f91:	add    BYTE PTR [rax],al
   140006f93:	add    BYTE PTR [rax],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	add    BYTE PTR [rax+0x1400074],ch
   140006f9d:	add    BYTE PTR [rax],al
   140006f9f:	add    BYTE PTR [rsi],cl
   140006fa1:	add    BYTE PTR [rax],al
   140006fa3:	add    BYTE PTR [rax],al
   140006fa5:	add    BYTE PTR [rax],al
   140006fa7:	add    al,al
   140006fa9:	je     0x140006fab
   140006fab:	rex add DWORD PTR [rax],eax
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	or     DWORD PTR [rax],eax
   140006fb2:	add    BYTE PTR [rax],al
   140006fb4:	add    BYTE PTR [rax],al
   140006fb6:	add    BYTE PTR [rax],al
   140006fb8:	shl    BYTE PTR [rax+rax*1+0x40],1
   140006fbc:	add    DWORD PTR [rax],eax
   140006fbe:	add    BYTE PTR [rax],al
   140006fc0:	push   0x0
   140006fc5:	add    BYTE PTR [rax],al
   140006fc7:	add    al,ch
   140006fc9:	je     0x140006fcb
   140006fcb:	rex add DWORD PTR [rax],eax
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	and    BYTE PTR [rax],al
   140006fd2:	add    BYTE PTR [rax],al
   140006fd4:	add    BYTE PTR [rax],al
   140006fd6:	add    BYTE PTR [rax],al
   140006fd8:	clc    
   140006fd9:	je     0x140006fdb
   140006fdb:	rex add DWORD PTR [rax],eax
   140006fde:	add    BYTE PTR [rax],al
   140006fe0:	push   0x0
   140006fe2:	add    BYTE PTR [rax],al
   140006fe4:	add    BYTE PTR [rax],al
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	or     BYTE PTR [rbp+0x0],dh
   140006feb:	rex add DWORD PTR [rax],eax
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	add    BYTE PTR [eax],al
   140006ff3:	add    BYTE PTR [rax],al
   140006ff5:	add    BYTE PTR [rax],al
   140006ff7:	add    BYTE PTR [rax],ah
   140006ff9:	jne    0x140006ffb
   140006ffb:	rex add DWORD PTR [rax],eax
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	imul   eax,DWORD PTR [rax],0x0
   140007003:	add    BYTE PTR [rax],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rax+0x75],al
   14000700a:	add    BYTE PTR [rax+0x1],al
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140007013:	add    BYTE PTR [rax],al
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rax+0x75],bl
   14000701a:	add    BYTE PTR [rax+0x1],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rdx],dl
   140007021:	add    BYTE PTR [rax],al
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rax+0x6c],cl
   14000702a:	add    BYTE PTR [rax+0x1],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rbp+0x0],ch
   140007032:	add    BYTE PTR [rax],al
   140007034:	add    BYTE PTR [rax],al
   140007036:	add    BYTE PTR [rax],al
   140007038:	jo     0x1400070af
   14000703a:	add    BYTE PTR [rax+0x1],al
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    BYTE PTR [rax],dl
   140007041:	add    BYTE PTR [rax],al
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax+0x6b],dl
   14000704a:	add    BYTE PTR [rax+0x1],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rcx],ch
   140007051:	add    BYTE PTR [rax],al
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rax+0x6b],bh
   14000705a:	add    BYTE PTR [rax+0x1],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rax],cl
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rax],al
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rax+0x1400075],dl
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    BYTE PTR [rcx],dl
   140007071:	add    BYTE PTR [rax],al
   140007073:	add    BYTE PTR [rax],al
   140007075:	add    BYTE PTR [rax],al
   140007077:	add    BYTE PTR [rax],bl
   140007079:	imul   eax,DWORD PTR [rax],0x40
   14000707c:	add    DWORD PTR [rax],eax
   14000707e:	add    BYTE PTR [rax],al
   140007080:	sbb    eax,DWORD PTR [rax]
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	test   al,0x75
   14000708a:	add    BYTE PTR [rax+0x1],al
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rsi],ah
   140007091:	add    BYTE PTR [rax],al
   140007093:	add    BYTE PTR [rax],al
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rax],bh
   140007099:	imul   eax,DWORD PTR [rax],0x40
   14000709c:	add    DWORD PTR [rax],eax
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	sub    BYTE PTR [rax],al
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	loopne 0x140007115
   1400070aa:	add    BYTE PTR [rax+0x1],al
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rsi+0x0],ch
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	mov    eax,0x1400075
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rdi+0x0],ch
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	shl    BYTE PTR [rbp+0x0],1
   1400070cb:	rex add DWORD PTR [rax],eax
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	sub    al,BYTE PTR [rax]
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	call   0x141407152
   1400070dd:	add    BYTE PTR [rax],al
   1400070df:	add    BYTE PTR [rcx],bl
	...
   1400070e9:	jbe    0x1400070eb
   1400070eb:	rex add DWORD PTR [rax],eax
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	add    al,0x0
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	shr    BYTE PTR [rbp+0x0],1
   1400070fb:	rex add DWORD PTR [rax],eax
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	(bad)  
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    BYTE PTR [rax],al
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    BYTE PTR [rax+0x140006b],dl
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    BYTE PTR [rip+0x0],bl        # 0x140007115
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    BYTE PTR [rax],ch
   140007119:	jbe    0x14000711b
   14000711b:	rex add DWORD PTR [rax],eax
   14000711e:	add    BYTE PTR [rax],al
   140007120:	add    eax,0x0
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rax+0x6b],ch
   14000712a:	add    BYTE PTR [rax+0x1],al
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rip+0x0],dl        # 0x140007135
   140007135:	add    BYTE PTR [rax],al
   140007137:	add    BYTE PTR [rax],bh
   140007139:	jbe    0x14000713b
   14000713b:	rex add DWORD PTR [rax],eax
   14000713e:	add    BYTE PTR [rax],al
   140007140:	jae    0x140007142
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	rex.W jbe 0x14000714b
   14000714b:	rex add DWORD PTR [rax],eax
   14000714e:	add    BYTE PTR [rax],al
   140007150:	je     0x140007152
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	pop    rax
   140007159:	jbe    0x14000715b
   14000715b:	rex add DWORD PTR [rax],eax
   14000715e:	add    BYTE PTR [rax],al
   140007160:	jne    0x140007162
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	push   0x1400076
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rsi+0x0],dh
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	js     0x1400071f0
   14000717a:	add    BYTE PTR [rax+0x1],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rdi+0x0],dh
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    BYTE PTR [rax],al
   140007186:	add    BYTE PTR [rax],al
   140007188:	nop
   140007189:	jbe    0x14000718b
   14000718b:	rex add DWORD PTR [rax],eax
   14000718e:	add    BYTE PTR [rax],al
   140007190:	or     al,BYTE PTR [rax]
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	movabs al,ds:0x7900000001400076
   1400071a1:	add    BYTE PTR [rax],al
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    BYTE PTR [rax+0x1400076],bh
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    BYTE PTR [rdi],ah
   1400071b1:	add    BYTE PTR [rax],al
   1400071b3:	add    BYTE PTR [rax],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    al,bh
   1400071b9:	imul   eax,DWORD PTR [rax],0x40
   1400071bc:	add    DWORD PTR [rax],eax
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	js     0x1400071c2
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	shl    BYTE PTR [rsi+0x0],0x40
   1400071cc:	add    DWORD PTR [rax],eax
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	jp     0x1400071d2
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	fdiv   DWORD PTR [rsi+0x0]
   1400071db:	rex add DWORD PTR [rax],eax
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	jnp    0x1400071e2
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	add    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	call   0x141407263
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    BYTE PTR [rax+rax*1],bl
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	test   al,0x6b
   1400071fa:	add    BYTE PTR [rax+0x1],al
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rax+rax*1+0x0],bh
   140007203:	add    BYTE PTR [rax],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    BYTE PTR [rax],al
   140007209:	ja     0x14000720b
   14000720b:	rex add DWORD PTR [rax],eax
   14000720e:	add    BYTE PTR [rax],al
   140007210:	(bad)  
   140007211:	add    BYTE PTR [rax],al
   140007213:	add    BYTE PTR [rax],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rax],bl
   140007219:	ja     0x14000721b
   14000721b:	rex add DWORD PTR [rax],eax
   14000721e:	add    BYTE PTR [rax],al
   140007220:	adc    eax,DWORD PTR [rax]
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	sub    BYTE PTR [rbx+0x0],ch
   14000722b:	rex add DWORD PTR [rax],eax
   14000722e:	add    BYTE PTR [rax],al
   140007230:	add    al,BYTE PTR [rax]
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	shr    BYTE PTR [rbx+0x0],0x40
   14000723c:	add    DWORD PTR [rax],eax
   14000723e:	add    BYTE PTR [rax],al
   140007240:	add    eax,DWORD PTR [rax]
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	cmp    BYTE PTR [rdi+0x0],dh
   14000724b:	rex add DWORD PTR [rax],eax
   14000724e:	add    BYTE PTR [rax],al
   140007250:	adc    al,0x0
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	rex.W ja 0x14000725b
   14000725b:	rex add DWORD PTR [rax],eax
   14000725e:	add    BYTE PTR [rax],al
   140007260:	add    BYTE PTR [rax],0x0
   140007263:	add    BYTE PTR [rax],al
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rax+0x77],bl
   14000726a:	add    BYTE PTR [rax+0x1],al
   14000726d:	add    BYTE PTR [rax],al
   14000726f:	add    BYTE PTR [rbp+0x0],bh
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	push   0x1400077
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rsi+0x0],bh
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	js     0x140007301
   14000728a:	add    BYTE PTR [rax+0x1],al
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax+rax*1],cl
   140007292:	add    BYTE PTR [rax],al
   140007294:	add    BYTE PTR [rax],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	adc    BYTE PTR [rax+rax*1+0x40],ch
   14000729c:	add    DWORD PTR [rax],eax
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	add    DWORD PTR [rax],0x0
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	mov    BYTE PTR [rdi+0x0],dh
   1400072ab:	rex add DWORD PTR [rax],eax
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	imul   eax,DWORD PTR [rax],0x0
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	(bad)  
   1400072b9:	ins    BYTE PTR es:[rdi],dx
   1400072ba:	add    BYTE PTR [rax+0x1],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    BYTE PTR [rax+0x0],dh
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	cwde   
   1400072c9:	ja     0x1400072cb
   1400072cb:	rex add DWORD PTR [rax],eax
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	add    DWORD PTR [rax],eax
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	mov    al,0x77
   1400072da:	add    BYTE PTR [rax+0x1],al
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rdx+0x0],al
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    al,cl
   1400072e9:	ja     0x1400072eb
   1400072eb:	rex add DWORD PTR [rax],eax
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	mov    WORD PTR [rax],es
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	loopne 0x140007371
   1400072fa:	add    BYTE PTR [rax+0x1],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rbp+0x0],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    al,bh
   140007309:	ja     0x14000730b
   14000730b:	rex add DWORD PTR [rax],eax
   14000730e:	add    BYTE PTR [rax],al
   140007310:	or     eax,0x0
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rax],al
   140007319:	imul   eax,DWORD PTR [rax],0x40
   14000731c:	add    DWORD PTR [rax],eax
   14000731e:	add    BYTE PTR [rax],al
   140007320:	xchg   BYTE PTR [rax],al
   140007322:	add    BYTE PTR [rax],al
   140007324:	add    BYTE PTR [rax],al
   140007326:	add    BYTE PTR [rax],al
   140007328:	or     BYTE PTR [rax+0x0],bh
   14000732b:	rex add DWORD PTR [rax],eax
   14000732e:	add    BYTE PTR [rax],al
   140007330:	xchg   DWORD PTR [rax],eax
   140007332:	add    BYTE PTR [rax],al
   140007334:	add    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax],al
   140007338:	sbb    BYTE PTR [rax+0x0],bh
   14000733b:	rex add DWORD PTR [rax],eax
   14000733e:	add    BYTE PTR [rax],al
   140007340:	(bad)  
   140007341:	add    BYTE PTR [rax],al
   140007343:	add    BYTE PTR [rax],al
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rax],dh
   140007349:	js     0x14000734b
   14000734b:	rex add DWORD PTR [rax],eax
   14000734e:	add    BYTE PTR [rax],al
   140007350:	and    al,0x0
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	rex.W js 0x14000735b
   14000735b:	rex add DWORD PTR [rax],eax
   14000735e:	add    BYTE PTR [rax],al
   140007360:	or     eax,DWORD PTR [rax]
   140007362:	add    BYTE PTR [rax],al
   140007364:	add    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	sub    BYTE PTR [rax+rax*1+0x40],ch
   14000736c:	add    DWORD PTR [rax],eax
   14000736e:	add    BYTE PTR [rax],al
   140007370:	and    al,BYTE PTR [rax]
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	push   0x1400078
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rdi+0x0],bh
   140007382:	add    BYTE PTR [rax],al
   140007384:	add    BYTE PTR [rax],al
   140007386:	add    BYTE PTR [rax],al
   140007388:	cmp    BYTE PTR [rax+0x0],0x40
   14000738c:	add    DWORD PTR [rax],eax
   14000738e:	add    BYTE PTR [rax],al
   140007390:	mov    DWORD PTR [rax],eax
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	cwde   
   140007399:	js     0x14000739b
   14000739b:	rex add DWORD PTR [rax],eax
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	mov    eax,DWORD PTR [rax]
   1400073a2:	add    BYTE PTR [rax],al
   1400073a4:	add    BYTE PTR [rax],al
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	test   al,0x78
   1400073aa:	add    BYTE PTR [rax+0x1],al
   1400073ad:	add    BYTE PTR [rax],al
   1400073af:	add    BYTE PTR [rdx+0x0],cl
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax+0x1400078],bh
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rdi],dl
   1400073c1:	add    BYTE PTR [rax],al
   1400073c3:	add    BYTE PTR [rax],al
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    al,cl
   1400073c9:	js     0x1400073cb
   1400073cb:	rex add DWORD PTR [rax],eax
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	sbb    BYTE PTR [rax],al
   1400073d2:	add    BYTE PTR [rax],al
   1400073d4:	add    BYTE PTR [rax],al
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	js     0x140007446
   1400073da:	add    BYTE PTR [rax+0x1],al
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rdi],bl
   1400073e1:	add    BYTE PTR [rax],al
   1400073e3:	add    BYTE PTR [rax],al
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    al,ch
   1400073e9:	js     0x1400073eb
   1400073eb:	rex add DWORD PTR [rax],eax
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	jb     0x1400073f2
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    BYTE PTR [rax],al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	clc    
   1400073f9:	js     0x1400073fb
   1400073fb:	rex add DWORD PTR [rax],eax
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	test   BYTE PTR [rax],al
   140007402:	add    BYTE PTR [rax],al
   140007404:	add    BYTE PTR [rax],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	sbb    BYTE PTR [rcx+0x0],bh
   14000740b:	rex add DWORD PTR [rax],eax
   14000740e:	add    BYTE PTR [rax],al
   140007410:	mov    BYTE PTR [rax],al
   140007412:	add    BYTE PTR [rax],al
   140007414:	add    BYTE PTR [rax],al
   140007416:	add    BYTE PTR [rax],al
   140007418:	sub    BYTE PTR [rcx+0x0],bh
   14000741b:	rex add DWORD PTR [rax],eax
	...
   14000742e:	add    BYTE PTR [rax],al
   140007430:	(bad)  
   140007431:	fs fs jb 0x14000749a
   140007435:	jae    0x1400074aa
   140007437:	and    BYTE PTR [rsi+0x61],ah
   14000743a:	ins    DWORD PTR es:[rdi],dx
   14000743b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140007443:	jae    0x1400074ba
   140007445:	jo     0x1400074b7
   140007447:	outs   dx,DWORD PTR ds:[rsi]
   140007448:	jb     0x1400074be
   14000744a:	gs add BYTE PTR fs:[rax],al
   14000744e:	add    BYTE PTR [rax],al
   140007450:	(bad)  
   140007451:	fs fs jb 0x1400074ba
   140007455:	jae    0x1400074ca
   140007457:	and    BYTE PTR [rcx+0x6e],ch
   14000745a:	and    BYTE PTR [rbp+0x73],dh
   14000745d:	add    BYTE PTR gs:[rax],al
   140007460:	(bad)  
   140007461:	fs fs jb 0x1400074ca
   140007465:	jae    0x1400074da
   140007467:	and    BYTE PTR [rsi+0x6f],ch
   14000746a:	je     0x14000748c
   14000746c:	(bad)  
   14000746d:	jbe    0x1400074d0
   14000746f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140007477:	add    BYTE PTR [rcx+0x6c],ah
   14000747a:	jb     0x1400074e1
   14000747c:	(bad)  
   14000747d:	fs jns 0x1400074a0
   140007480:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007483:	outs   dx,BYTE PTR ds:[rsi]
   140007484:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007489:	add    BYTE PTR [rax],al
   14000748b:	add    BYTE PTR [rax],al
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rcx+0x72],ah
   140007492:	addr32 jne 0x140007502
   140007495:	outs   dx,BYTE PTR gs:[rsi]
   140007497:	je     0x1400074b9
   140007499:	ins    BYTE PTR es:[rdi],dx
   14000749a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   1400074a1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400074a5:	add    BYTE PTR [eax],al
   1400074a8:	(bad)  
   1400074a9:	jb     0x140007512
   1400074ab:	jne    0x14000751a
   1400074ad:	outs   dx,BYTE PTR gs:[rsi]
   1400074af:	je     0x1400074d1
   1400074b1:	outs   dx,DWORD PTR ds:[rsi]
   1400074b2:	jne    0x140007528
   1400074b4:	and    BYTE PTR [rdi+0x66],ch
   1400074b7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   1400074bb:	(bad)  
   1400074bc:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   1400074c3:	and    BYTE PTR [rcx+0x64],ah
   1400074c6:	fs jb  0x14000752e
   1400074c9:	jae    0x14000753e
   1400074cb:	add    BYTE PTR [rax],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rdx+0x61],ah
   1400074d2:	and    BYTE PTR fs:[rsi+0x69],ah
   1400074d6:	ins    BYTE PTR es:[rdi],dx
   1400074d7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   1400074dc:	movsxd esi,DWORD PTR [rdx+0x69]
   1400074df:	jo     0x140007555
   1400074e1:	outs   dx,DWORD PTR ds:[rsi]
   1400074e2:	jb     0x1400074e4
   1400074e4:	add    BYTE PTR [rax],al
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	(bad)
   1400074ed:	gs jae 0x140007563
   1400074f0:	(bad)  
   1400074f1:	add    BYTE PTR gs:[eax],al
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rdx+0x72],ah
   1400074fa:	outs   dx,DWORD PTR ds:[rsi]
   1400074fb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   1400074ff:	jo     0x14000756a
   140007501:	jo     0x140007568
   140007503:	add    BYTE PTR [rax],al
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rbx+0x6f],ah
   14000750a:	outs   dx,BYTE PTR ds:[rsi]
   14000750b:	outs   dx,BYTE PTR ds:[rsi]
   14000750c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007511:	outs   dx,BYTE PTR ds:[rsi]
   140007512:	and    BYTE PTR [rcx+0x62],ah
   140007515:	outs   dx,DWORD PTR ds:[rsi]
   140007516:	jb     0x14000758c
   140007518:	gs add BYTE PTR fs:[rax],al
   14000751c:	add    BYTE PTR [rax],al
   14000751e:	add    BYTE PTR [rax],al
   140007520:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007523:	outs   dx,BYTE PTR ds:[rsi]
   140007524:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007529:	outs   dx,BYTE PTR ds:[rsi]
   14000752a:	and    BYTE PTR [rcx+0x6c],ah
   14000752d:	jb     0x140007594
   14000752f:	(bad)  
   140007530:	fs jns 0x140007553
   140007533:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14000753a:	jb     0x1400075a1
   14000753c:	jae    0x1400075b1
   14000753e:	add    BYTE PTR [rax],al
   140007540:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007543:	outs   dx,BYTE PTR ds:[rsi]
   140007544:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007549:	outs   dx,BYTE PTR ds:[rsi]
   14000754a:	and    BYTE PTR [rdx+0x65],dh
   14000754d:	data16 jne 0x1400075c3
   140007550:	gs add BYTE PTR fs:[rax],al
   140007554:	add    BYTE PTR [rax],al
   140007556:	add    BYTE PTR [rax],al
   140007558:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000755b:	outs   dx,BYTE PTR ds:[rsi]
   14000755c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007561:	outs   dx,BYTE PTR ds:[rsi]
   140007562:	and    BYTE PTR [rdx+0x65],dh
   140007565:	jae    0x1400075cc
   140007567:	je     0x140007569
   140007569:	add    BYTE PTR [rax],al
   14000756b:	add    BYTE PTR [rax],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140007573:	je     0x1400075de
   140007575:	outs   dx,BYTE PTR ds:[rsi]
   140007576:	(bad)  
   140007577:	je     0x1400075e2
   140007579:	outs   dx,DWORD PTR ds:[rsi]
   14000757a:	outs   dx,BYTE PTR ds:[rsi]
   14000757b:	and    BYTE PTR [rcx+0x64],ah
   14000757e:	fs jb  0x1400075e6
   140007581:	jae    0x1400075f6
   140007583:	and    BYTE PTR [rdx+0x65],dh
   140007586:	jno    0x1400075fd
   140007588:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000758f:	add    BYTE PTR [rbp+0x78],ah
   140007592:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140007596:	(bad)  
   140007597:	(bad)  
   140007598:	ins    BYTE PTR es:[rdi],dx
   140007599:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000759d:	jb     0x14000760c
   14000759f:	(bad)  
   1400075a0:	je     0x1400075c2
   1400075a2:	gs jb  0x140007617
   1400075a5:	outs   dx,DWORD PTR ds:[rsi]
   1400075a6:	jb     0x1400075a8
   1400075a8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   1400075af:	outs   dx,DWORD PTR ds:[rsi]
   1400075b0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400075b4:	add    BYTE PTR gs:[eax],al
   1400075b8:	push   0x2074736f
   1400075bd:	jne    0x14000762d
   1400075bf:	jb     0x140007626
   1400075c1:	(bad)  
   1400075c2:	movsxd ebp,DWORD PTR [rax+0x61]
   1400075c5:	(bad)  
   1400075c6:	ins    BYTE PTR es:[rdi],dx
   1400075c7:	add    BYTE PTR gs:[rax],al
   1400075ca:	add    BYTE PTR [rax],al
   1400075cc:	add    BYTE PTR [rax],al
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   1400075d8:	gs jb  0x1400075fb
   1400075db:	jb     0x140007642
   1400075dd:	ins    DWORD PTR es:[rdi],dx
   1400075de:	outs   dx,DWORD PTR ds:[rsi]
   1400075df:	jbe    0x140007646
   1400075e1:	add    BYTE PTR fs:[rax],al
   1400075e4:	add    BYTE PTR [rax],al
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   1400075f0:	(bad)  
   1400075f1:	jns    0x140007667
   1400075f3:	and    BYTE PTR gs:[rbx+0x65],dh
   1400075f7:	jno    0x14000766e
   1400075f9:	outs   dx,BYTE PTR gs:[rsi]
   1400075fb:	movsxd esp,DWORD PTR [rbp+0x0]
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140007607:	jo     0x14000767b
   140007609:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140007610:	and    BYTE PTR [rbx+0x6f],ah
   140007613:	outs   dx,BYTE PTR ds:[rsi]
   140007614:	je     0x140007688
   140007616:	outs   dx,DWORD PTR ds:[rsi]
   140007617:	ins    BYTE PTR es:[rdi],dx
   140007618:	and    BYTE PTR [rdi+0x70],ch
   14000761b:	gs jb  0x14000767f
   14000761e:	je     0x140007689
   140007620:	outs   dx,DWORD PTR ds:[rsi]
   140007621:	outs   dx,BYTE PTR ds:[rsi]
   140007622:	add    BYTE PTR [rax],al
   140007624:	add    BYTE PTR [rax],al
   140007626:	add    BYTE PTR [rax],al
   140007628:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000762f:	and    BYTE PTR [rbx+0x65],dh
   140007632:	imul   eax,DWORD PTR gs:[rax],0x0
   140007636:	add    BYTE PTR [rax],al
   140007638:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14000763f:	jb     0x1400076a6
   140007641:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140007645:	jns    0x140007647
   140007647:	add    BYTE PTR [rbp+0x65],ch
   14000764a:	jae    0x1400076bf
   14000764c:	(bad)  
   14000764d:	and    BYTE PTR gs:[ebx+0x69],dh
   140007652:	jp     0x1400076b9
   140007654:	add    BYTE PTR [rax],al
   140007656:	add    BYTE PTR [rax],al
   140007658:	outs   dx,BYTE PTR ds:[rsi]
   140007659:	gs je  0x1400076d3
   14000765c:	outs   dx,DWORD PTR ds:[rsi]
   14000765d:	jb     0x1400076ca
   14000765f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140007663:	outs   dx,BYTE PTR ds:[rsi]
   140007664:	add    BYTE PTR [rax],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	outs   dx,BYTE PTR ds:[rsi]
   140007669:	gs je  0x1400076e3
   14000766c:	outs   dx,DWORD PTR ds:[rsi]
   14000766d:	jb     0x1400076da
   14000766f:	and    BYTE PTR [rdx+0x65],dh
   140007672:	jae    0x1400076d9
   140007674:	je     0x140007676
   140007676:	add    BYTE PTR [rax],al
   140007678:	outs   dx,BYTE PTR ds:[rsi]
   140007679:	gs je  0x1400076f3
   14000767c:	outs   dx,DWORD PTR ds:[rsi]
   14000767d:	jb     0x1400076ea
   14000767f:	and    BYTE PTR [rbp+0x6e],dh
   140007682:	jb     0x1400076e9
   140007684:	(bad)  
   140007685:	movsxd ebp,DWORD PTR [rax+0x61]
   140007688:	(bad)  
   140007689:	ins    BYTE PTR es:[rdi],dx
   14000768a:	add    BYTE PTR gs:[rax],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rsi+0x6f],ch
   140007692:	and    BYTE PTR [rdx+0x75],ah
   140007695:	data16 data16 gs jb 0x1400076ba
   14000769a:	jae    0x14000770c
   14000769c:	(bad)  
   14000769d:	movsxd esp,DWORD PTR [rbp+0x0]
   1400076a0:	outs   dx,BYTE PTR ds:[rsi]
   1400076a1:	outs   dx,DWORD PTR ds:[rsi]
   1400076a2:	and    BYTE PTR [rbx+0x68],ah
   1400076a5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   1400076ad:	gs jae 0x140007723
	...
   1400076b8:	outs   dx,BYTE PTR ds:[rsi]
   1400076b9:	outs   dx,DWORD PTR ds:[rsi]
   1400076ba:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   1400076be:	imul   eax,DWORD PTR [rax],0x6e
   1400076c1:	outs   dx,DWORD PTR ds:[rsi]
   1400076c2:	and    BYTE PTR [rbp+0x65],ch
   1400076c5:	jae    0x14000773a
   1400076c7:	(bad)  
   1400076c8:	and    BYTE PTR gs:[ecx+0x76],ah
   1400076cd:	(bad)  
   1400076ce:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	outs   dx,BYTE PTR ds:[rsi]
   1400076d9:	outs   dx,DWORD PTR ds:[rsi]
   1400076da:	and    BYTE PTR [rbp+0x65],ch
   1400076dd:	jae    0x140007752
   1400076df:	(bad)  
   1400076e0:	add    BYTE PTR gs:[eax],al
   1400076e4:	add    BYTE PTR [rax],al
   1400076e6:	add    BYTE PTR [rax],al
   1400076e8:	outs   dx,BYTE PTR ds:[rsi]
   1400076e9:	outs   dx,DWORD PTR ds:[rsi]
   1400076ea:	and    BYTE PTR [rax+0x72],dh
   1400076ed:	outs   dx,DWORD PTR ds:[rsi]
   1400076ee:	je     0x14000775f
   1400076f0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400076f3:	and    BYTE PTR [rdi+0x70],ch
   1400076f6:	je     0x140007761
   1400076f8:	outs   dx,DWORD PTR ds:[rsi]
   1400076f9:	outs   dx,BYTE PTR ds:[rsi]
   1400076fa:	add    BYTE PTR [rax],al
   1400076fc:	add    BYTE PTR [rax],al
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	outs   dx,BYTE PTR ds:[rsi]
   140007701:	outs   dx,DWORD PTR ds:[rsi]
   140007702:	and    BYTE PTR [rbx+0x74],dh
   140007705:	jb     0x14000776c
   140007707:	(bad)  
   140007708:	ins    DWORD PTR es:[rdi],dx
   140007709:	and    BYTE PTR [rdx+0x65],dh
   14000770c:	jae    0x14000777d
   14000770e:	jne    0x140007782
   140007710:	movsxd esp,DWORD PTR [rbp+0x73]
   140007713:	add    BYTE PTR [rax],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    BYTE PTR [rsi+0x6f],ch
   14000771a:	and    BYTE PTR [rbx+0x75],dh
   14000771d:	movsxd ebp,DWORD PTR [rax+0x20]
   140007720:	fs gs jbe 0x14000778d
   140007724:	movsxd esp,DWORD PTR [rbp+0x20]
   140007727:	outs   dx,DWORD PTR ds:[rsi]
   140007728:	jb     0x14000774a
   14000772a:	(bad)  
   14000772b:	fs fs jb 0x140007794
   14000772f:	jae    0x1400077a4
   140007731:	add    BYTE PTR [rax],al
   140007733:	add    BYTE PTR [rax],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rsi+0x6f],ch
   14000773a:	and    BYTE PTR [rbx+0x75],dh
   14000773d:	movsxd ebp,DWORD PTR [rax+0x20]
   140007740:	jo     0x1400077b4
   140007742:	outs   dx,DWORD PTR ds:[rsi]
   140007743:	movsxd esp,DWORD PTR [rbp+0x73]
   140007746:	jae    0x140007748
   140007748:	outs   dx,BYTE PTR ds:[rsi]
   140007749:	outs   dx,DWORD PTR ds:[rsi]
   14000774a:	je     0x14000776c
   14000774c:	(bad)  
   14000774d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140007751:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140007756:	jns    0x140007758
   140007758:	outs   dx,BYTE PTR ds:[rsi]
   140007759:	outs   dx,DWORD PTR ds:[rsi]
   14000775a:	je     0x14000777c
   14000775c:	(bad)  
   14000775d:	and    BYTE PTR [rbx+0x6f],dh
   140007760:	movsxd ebp,DWORD PTR [rbx+0x65]
   140007763:	je     0x140007765
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rsi+0x6f],ch
   14000776a:	je     0x14000778c
   14000776c:	(bad)  
   14000776d:	and    BYTE PTR [rbx+0x74],dh
   140007770:	jb     0x1400077d7
   140007772:	(bad)  
   140007773:	ins    DWORD PTR es:[rdi],dx
   140007774:	add    BYTE PTR [rax],al
   140007776:	add    BYTE PTR [rax],al
   140007778:	outs   dx,BYTE PTR ds:[rsi]
   140007779:	outs   dx,DWORD PTR ds:[rsi]
   14000777a:	je     0x14000779c
   14000777c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000777f:	outs   dx,BYTE PTR ds:[rsi]
   140007780:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007785:	add    BYTE PTR [rax],al
   140007787:	add    BYTE PTR [rsi+0x6f],ch
   14000778a:	je     0x1400077ac
   14000778c:	jae    0x140007803
   14000778e:	jo     0x140007800
   140007790:	outs   dx,DWORD PTR ds:[rsi]
   140007791:	jb     0x140007807
   140007793:	gs add BYTE PTR fs:[rax],al
   140007797:	add    BYTE PTR [rdi+0x70],ch
   14000779a:	gs jb  0x1400077fe
   14000779d:	je     0x140007808
   14000779f:	outs   dx,DWORD PTR ds:[rsi]
   1400077a0:	outs   dx,BYTE PTR ds:[rsi]
   1400077a1:	and    BYTE PTR [rcx+0x6e],ch
   1400077a4:	and    BYTE PTR [rax+0x72],dh
   1400077a7:	outs   dx,DWORD PTR ds:[rsi]
   1400077a8:	addr32 jb 0x140007810
   1400077ab:	jae    0x140007820
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rdi+0x70],ch
   1400077b2:	gs jb  0x140007816
   1400077b5:	je     0x140007820
   1400077b7:	outs   dx,DWORD PTR ds:[rsi]
   1400077b8:	outs   dx,BYTE PTR ds:[rsi]
   1400077b9:	and    BYTE PTR [rsi+0x6f],ch
   1400077bc:	je     0x1400077de
   1400077be:	jo     0x140007825
   1400077c0:	jb     0x14000782f
   1400077c2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   1400077ca:	gs jb  0x14000782e
   1400077cd:	je     0x140007838
   1400077cf:	outs   dx,DWORD PTR ds:[rsi]
   1400077d0:	outs   dx,BYTE PTR ds:[rsi]
   1400077d1:	and    BYTE PTR [rsi+0x6f],ch
   1400077d4:	je     0x1400077f6
   1400077d6:	jae    0x14000784d
   1400077d8:	jo     0x14000784a
   1400077da:	outs   dx,DWORD PTR ds:[rsi]
   1400077db:	jb     0x140007851
   1400077dd:	gs add BYTE PTR fs:[rdi+0x70],ch
   1400077e2:	gs jb  0x140007846
   1400077e5:	je     0x140007850
   1400077e7:	outs   dx,DWORD PTR ds:[rsi]
   1400077e8:	outs   dx,BYTE PTR ds:[rsi]
   1400077e9:	and    BYTE PTR [rdi+0x6f],dh
   1400077ec:	jne    0x14000785a
   1400077ee:	and    BYTE PTR fs:[rdx+0x6c],ah
   1400077f2:	outs   dx,DWORD PTR ds:[rsi]
   1400077f3:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	outs   dx,DWORD PTR ds:[rsi]
   1400077f9:	ja     0x140007869
   1400077fb:	gs jb  0x14000781e
   1400077fe:	fs gs (bad) 
   140007801:	add    BYTE PTR fs:[rax],al
   140007804:	add    BYTE PTR [rax],al
   140007806:	add    BYTE PTR [rax],al
   140007808:	jo     0x14000787c
   14000780a:	outs   dx,DWORD PTR ds:[rsi]
   14000780b:	je     0x14000787c
   14000780d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007810:	and    BYTE PTR [rbp+0x72],ah
   140007813:	jb     0x140007884
   140007815:	jb     0x140007817
   140007817:	add    BYTE PTR [rax+0x72],dh
   14000781a:	outs   dx,DWORD PTR ds:[rsi]
   14000781b:	je     0x14000788c
   14000781d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007820:	and    BYTE PTR [rsi+0x6f],ch
   140007823:	je     0x140007845
   140007825:	jae    0x14000789c
   140007827:	jo     0x140007899
   140007829:	outs   dx,DWORD PTR ds:[rsi]
   14000782a:	jb     0x1400078a0
   14000782c:	gs add BYTE PTR fs:[rax],al
   140007830:	jb     0x140007897
   140007832:	(bad)  
   140007833:	and    BYTE PTR fs:[rdi+0x6e],ch
   140007837:	ins    BYTE PTR es:[rdi],dx
   140007838:	jns    0x14000785a
   14000783a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140007841:	jae    0x1400078b7
   140007843:	gs ins DWORD PTR es:[rdi],dx
   140007845:	add    BYTE PTR [rax],al
   140007847:	add    BYTE PTR [rdx+0x65],dh
   14000784a:	jae    0x1400078bb
   14000784c:	jne    0x1400078c0
   14000784e:	movsxd esp,DWORD PTR [rbp+0x20]
   140007851:	fs gs (bad) 
   140007854:	fs ins BYTE PTR es:[rdi],dx
   140007856:	outs   dx,DWORD PTR ds:[rsi]
   140007857:	movsxd ebp,DWORD PTR [rbx+0x20]
   14000785a:	ja     0x1400078cb
   14000785c:	jne    0x1400078ca
   14000785e:	and    BYTE PTR fs:[rdi+0x63],ch
   140007862:	movsxd esi,DWORD PTR [rbp+0x72]
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rdx+0x65],dh
   14000786a:	jae    0x1400078e1
   14000786c:	ins    BYTE PTR es:[rdi],dx
   14000786d:	je     0x14000788f
   14000786f:	outs   dx,DWORD PTR ds:[rsi]
   140007870:	jne    0x1400078e6
   140007872:	and    BYTE PTR [rdi+0x66],ch
   140007875:	and    BYTE PTR [rdx+0x61],dh
   140007878:	outs   dx,BYTE PTR ds:[rsi]
   140007879:	add    BYTE PTR gs:[eax],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rbx+0x74],dh
   140007882:	(bad)  
   140007883:	je     0x1400078ea
   140007885:	and    BYTE PTR [rsi+0x6f],ch
   140007888:	je     0x1400078aa
   14000788a:	jb     0x1400078f1
   14000788c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000788f:	gs jb  0x1400078f3
   140007892:	(bad)  
   140007893:	ins    BYTE PTR es:[rdi],dx
   140007894:	add    BYTE PTR gs:[rax],al
   140007897:	add    BYTE PTR [rbx+0x74],dh
   14000789a:	jb     0x140007901
   14000789c:	(bad)  
   14000789d:	ins    DWORD PTR es:[rdi],dx
   14000789e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   1400078a2:	outs   dx,DWORD PTR gs:[rsi]
   1400078a4:	jne    0x14000791a
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	je     0x14000790f
   1400078aa:	js     0x140007920
   1400078ac:	and    BYTE PTR [rsi+0x69],ah
   1400078af:	ins    BYTE PTR es:[rdi],dx
   1400078b0:	and    BYTE PTR gs:[rdx+0x75],ah
   1400078b4:	jae    0x14000792f
   1400078b6:	add    BYTE PTR [rax],al
   1400078b8:	je     0x140007923
   1400078ba:	ins    DWORD PTR es:[rdi],dx
   1400078bb:	gs and BYTE PTR fs:[rdi+0x75],ch
   1400078c0:	je     0x1400078c2
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	add    BYTE PTR [rax],al
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	je     0x140007939
   1400078ca:	outs   dx,DWORD PTR ds:[rsi]
   1400078cb:	and    BYTE PTR [rbp+0x61],ch
   1400078ce:	outs   dx,BYTE PTR ds:[rsi]
   1400078cf:	jns    0x1400078f1
   1400078d1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   1400078d8:	jo     0x14000793f
   1400078da:	outs   dx,BYTE PTR ds:[rsi]
   1400078db:	and    BYTE PTR [rcx+0x6e],ch
   1400078de:	and    BYTE PTR [rbx+0x79],dh
   1400078e1:	jae    0x140007957
   1400078e3:	gs ins DWORD PTR es:[rdi],dx
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400078eb:	and    BYTE PTR [rbp+0x61],ch
   1400078ee:	outs   dx,BYTE PTR ds:[rsi]
   1400078ef:	jns    0x140007911
   1400078f1:	ins    BYTE PTR es:[rdi],dx
   1400078f2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   1400078f9:	outs   dx,DWORD PTR ds:[rsi]
   1400078fa:	outs   dx,DWORD PTR ds:[rsi]
   1400078fb:	and    BYTE PTR [rbp+0x61],ch
   1400078fe:	outs   dx,BYTE PTR ds:[rsi]
   1400078ff:	jns    0x140007921
   140007901:	jae    0x14000797c
   140007903:	ins    DWORD PTR es:[rdi],dx
   140007904:	(bad)  
   140007905:	outs   dx,DWORD PTR ds:[rsi]
   140007906:	ins    BYTE PTR es:[rdi],dx
   140007907:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000790e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140007912:	gs ins BYTE PTR es:[rdi],dx
   140007914:	jae    0x140007916
   140007916:	add    BYTE PTR [rax],al
   140007918:	jbe    0x14000797b
   14000791a:	ins    BYTE PTR es:[rdi],dx
   14000791b:	jne    0x140007982
   14000791d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140007921:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140007925:	add    BYTE PTR gs:[edi+0x72],dh
   14000792a:	outs   dx,DWORD PTR ds:[rsi]
   14000792b:	outs   dx,BYTE PTR ds:[rsi]
   14000792c:	and    BYTE PTR [eax+0x72],dh
   140007930:	outs   dx,DWORD PTR ds:[rsi]
   140007931:	je     0x1400079a2
   140007933:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007936:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000793a:	add    BYTE PTR gs:[rax],al
	...
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    BYTE PTR [rbp+0x78],al
   14000794a:	movsxd esp,DWORD PTR [rbp+0x70]
   14000794d:	je     0x1400079b8
   14000794f:	outs   dx,DWORD PTR ds:[rsi]
   140007950:	outs   dx,BYTE PTR ds:[rsi]
   140007951:	add    BYTE PTR [rax],al
   140007953:	add    BYTE PTR [rax],al
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rdx+0x65],dl
   14000795a:	je     0x1400079d1
   14000795c:	jb     0x1400079cc
   14000795e:	rex.W jb 0x140007961
   140007961:	add    BYTE PTR [rax],al
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rdx+0x65],dl
   14000796a:	je     0x1400079e1
   14000796c:	jb     0x1400079dc
   14000796e:	rex.W jb 0x1400079cc
   140007971:	push   rax
   140007972:	jb     0x1400079d9
   140007974:	push   rdx
   140007975:	gs ins BYTE PTR es:[rdi],dx
   140007977:	gs (bad) 
   140007979:	jae    0x1400079e0
   14000797b:	pop    rbp
   14000797c:	add    BYTE PTR [rax],al
   14000797e:	add    BYTE PTR [rax],al
   140007980:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007982:	addr32 rex.W jb 0x140007986
   140007986:	add    BYTE PTR [rax],al
   140007988:	rex.RX (bad) 
   14000798a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    BYTE PTR [rax],al
   140007996:	add    BYTE PTR [rax],al
   140007998:	and    eax,0x73006800
   14000799d:	add    BYTE PTR [rax],ch
   14000799f:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900dda5
   1400079a5:	add    BYTE PTR [rax+rax*1+0x25],bl
   1400079a9:	add    BYTE PTR [rax+0x0],ch
   1400079ac:	jae    0x1400079ae
   1400079ae:	and    DWORD PTR [rax],eax
   1400079b0:	and    eax,0x3a007000
   1400079b5:	add    BYTE PTR [rax],ah
	...
   1400079bf:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e1c5
   1400079c5:	add    BYTE PTR [rcx],ah
   1400079c7:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a00e9cd
   1400079cd:	add    BYTE PTR [rax],ah
	...
   1400079d7:	add    BYTE PTR [rax],ch
   1400079d9:	add    BYTE PTR [rbx+0x0],ah
   1400079dc:	(bad)  
   1400079dd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400079e1:	add    BYTE PTR [rbp+0x0],ah
   1400079e4:	jb     0x1400079e6
   1400079e6:	cmp    al,BYTE PTR [rax]
   1400079e8:	and    BYTE PTR [rax],al
   1400079ea:	and    eax,0x29007000
   1400079ef:	add    BYTE PTR [rax],ah
   1400079f1:	add    BYTE PTR [rax],al
   1400079f3:	add    BYTE PTR [rax],al
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e1fd
   1400079fd:	add    BYTE PTR [rax],ch
   1400079ff:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900de05
   140007a05:	add    BYTE PTR [rax],ah
   140007a07:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007a0b:	add    BYTE PTR [rax+rax*1+0x28],ah
   140007a0f:	add    BYTE PTR [rip+0x29007800],ah        # 0x16900f215
   140007a15:	add    BYTE PTR [rax],ah
   140007a17:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800aa1d
   140007a1d:	add    BYTE PTR [rax+0x0],bl
   140007a20:	and    BYTE PTR [rax],al
   140007a22:	and    eax,0x73007700
	...
   140007a2f:	add    BYTE PTR [rax],ah
   140007a31:	add    BYTE PTR [rax],ah
   140007a33:	add    BYTE PTR [rax],ah
   140007a35:	add    BYTE PTR [rax],ah
	...
   140007a3f:	add    BYTE PTR [rbp+0x0],cl
   140007a42:	jae    0x140007a44
   140007a44:	add    BYTE PTR [edx],bh
   140007a47:	add    BYTE PTR [rbx+0x0],bl
   140007a4a:	and    eax,0x73007700
   140007a4f:	add    BYTE PTR [rbp+0x0],bl
   140007a52:	and    BYTE PTR [rax],al
   140007a54:	add    BYTE PTR [rax],al
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	rex.XB add BYTE PTR [r9+0x0],spl
   140007a5c:	ins    BYTE PTR es:[rdi],dx
   140007a5d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140007a61:	add    BYTE PTR [rdi+0x0],ch
   140007a64:	outs   dx,BYTE PTR ds:[rsi]
   140007a65:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007a69:	add    BYTE PTR [rax+0x0],bh
   140007a6c:	je     0x140007a6e
   140007a6e:	cmp    al,BYTE PTR [rax]
   140007a70:	pop    rbx
   140007a71:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e277
   140007a77:	add    BYTE PTR [rbp+0x0],bl
   140007a7a:	and    BYTE PTR [rax],al
   140007a7c:	add    BYTE PTR [rax],al
   140007a7e:	add    BYTE PTR [rax],al
   140007a80:	pop    rbx
   140007a81:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e287
   140007a87:	add    BYTE PTR [rax],ch
   140007a89:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e28f
   140007a8f:	add    BYTE PTR [rcx],ch
   140007a91:	add    BYTE PTR [rbp+0x0],bl
   140007a94:	or     al,BYTE PTR [rax]
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	pop    rbx
   140007a99:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e29f
   140007a9f:	add    BYTE PTR [rbp+0x0],bl
   140007aa2:	or     al,BYTE PTR [rax]
   140007aa4:	add    BYTE PTR [rax],al
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	or     al,BYTE PTR [rax]
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    BYTE PTR [rax],al
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	outs   dx,BYTE PTR ds:[rsi]
   140007ab1:	add    BYTE PTR [rax+rax*1+0x64],dh
   140007ab5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007ab9:	add    BYTE PTR [rsi],ch
   140007abb:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140007abf:	add    BYTE PTR [rax+rax*1+0x0],ch
   140007ac3:	add    BYTE PTR [rax],al
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rsp+riz*2+0x72],cl
   140007acb:	rex.RX (bad) 
   140007acd:	jae    0x140007b43
   140007acf:	rex.RX (bad) 
   140007ad1:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   140007ad9:	gs jb  0x140007b1f
   140007adc:	(bad)  
   140007add:	ins    BYTE PTR es:[rdi],dx
   140007ade:	ins    BYTE PTR es:[rdi],dx
   140007adf:	outs   dx,DWORD PTR ds:[rsi]
   140007ae0:	jne    0x140007b56
   140007ae2:	add    BYTE PTR [rax],al
   140007ae4:	add    BYTE PTR [rax],al
   140007ae6:	add    BYTE PTR [rax],al
   140007ae8:	push   rdx
   140007ae9:	je     0x140007b57
   140007aeb:	rex.WRX je 0x140007b41
   140007aee:	je     0x140007b51
   140007af0:	je     0x140007b67
   140007af2:	jae    0x140007b48
   140007af4:	outs   dx,DWORD PTR ds:[rsi]
   140007af5:	rex.R outs dx,DWORD PTR ds:[rsi]
   140007af7:	jae    0x140007b3e
   140007af9:	jb     0x140007b6d
   140007afb:	outs   dx,DWORD PTR ds:[rsi]
   140007afc:	jb     0x140007b4c
   140007afe:	outs   dx,DWORD PTR ds:[rsi]
   140007aff:	push   rsp
   140007b00:	gs (bad) 
   140007b02:	add    BYTE PTR [rax],al
   140007b04:	add    BYTE PTR [rax],al
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140007b0f:	ins    BYTE PTR es:[rdi],dx
   140007b10:	pop    rsp
   140007b11:	jae    0x140007b77
   140007b13:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   140007b18:	pop    rsp
   140007b19:	ja     0x140007b84
   140007b1b:	ins    BYTE PTR es:[rdi],dx
   140007b1c:	pop    rsp
   140007b1d:	jb     0x140007b84
   140007b1f:	jae    0x140007b96
   140007b21:	ins    BYTE PTR es:[rdi],dx
   140007b22:	je     0x140007b52
   140007b24:	push   0x54000000
   140007b29:	add    BYTE PTR [rbp+0x0],ah
   140007b2c:	ins    BYTE PTR es:[rdi],dx
   140007b2d:	add    BYTE PTR [rbp+0x0],ah
   140007b30:	ins    DWORD PTR es:[rdi],dx
   140007b31:	add    BYTE PTR [rbp+0x0],ah
   140007b34:	je     0x140007b36
   140007b36:	jb     0x140007b38
   140007b38:	jns    0x140007b3a
   140007b3a:	push   rbx
   140007b3b:	add    BYTE PTR [rcx+0x0],ah
   140007b3e:	ins    BYTE PTR es:[rdi],dx
   140007b3f:	add    BYTE PTR [rax+rax*1+0x0],dh
	...
   140007b4f:	add    BYTE PTR [rbx+0x0],dl
   140007b52:	outs   dx,DWORD PTR ds:[rsi]
   140007b53:	add    BYTE PTR [rsi+0x0],ah
   140007b56:	je     0x140007b58
   140007b58:	ja     0x140007b5a
   140007b5a:	(bad)  
   140007b5b:	add    BYTE PTR [rdx+0x0],dh
   140007b5e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140007b63:	add    BYTE PTR [rcx+0x0],ch
   140007b66:	movsxd eax,DWORD PTR [rax]
   140007b68:	jb     0x140007b6a
   140007b6a:	outs   dx,DWORD PTR ds:[rsi]
   140007b6b:	add    BYTE PTR [rbx+0x0],dh
   140007b6e:	outs   dx,DWORD PTR ds:[rsi]
   140007b6f:	add    BYTE PTR [rsi+0x0],ah
   140007b72:	je     0x140007b74
   140007b74:	pop    rsp
   140007b75:	add    BYTE PTR [rdi+0x0],dl
   140007b78:	imul   eax,DWORD PTR [rax],0x64006e
   140007b7e:	outs   dx,DWORD PTR ds:[rsi]
   140007b7f:	add    BYTE PTR [rdi+0x0],dh
   140007b82:	jae    0x140007b84
   140007b84:	pop    rsp
   140007b85:	add    BYTE PTR [rbx+0x0],al
   140007b88:	jne    0x140007b8a
   140007b8a:	jb     0x140007b8c
   140007b8c:	jb     0x140007b8e
   140007b8e:	add    BYTE PTR gs:[rsi+0x0],ch
   140007b92:	je     0x140007b94
   140007b94:	push   rsi
   140007b95:	add    BYTE PTR [rbp+0x0],ah
   140007b98:	jb     0x140007b9a
   140007b9a:	jae    0x140007b9c
   140007b9c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007ba2:	pop    rsp
   140007ba3:	add    BYTE PTR [rbp+0x0],al
   140007ba6:	js     0x140007ba8
   140007ba8:	jo     0x140007baa
   140007baa:	ins    BYTE PTR es:[rdi],dx
   140007bab:	add    BYTE PTR [rdi+0x0],ch
   140007bae:	jb     0x140007bb0
   140007bb0:	add    BYTE PTR gs:[rdx+0x0],dh
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	jae    0x140007c22
   140007bba:	gs ins BYTE PTR es:[rdi],dx
   140007bbc:	ins    BYTE PTR es:[rdi],dx
   140007bbd:	pop    rsp
   140007bbe:	je     0x140007c37
   140007bc0:	imul   ebp,DWORD PTR [rsi+0x75],0x73615c69
   140007bc7:	jae    0x140007c38
   140007bc9:	movsxd ebp,DWORD PTR [rcx+0x61]
   140007bcc:	je     0x140007c37
   140007bce:	outs   dx,DWORD PTR ds:[rsi]
   140007bcf:	outs   dx,BYTE PTR ds:[rsi]
   140007bd0:	ins    BYTE PTR es:[rdi],dx
   140007bd1:	(bad)  
   140007bd2:	jne    0x140007c42
   140007bd4:	movsxd ebp,DWORD PTR [rax+0x5c]
   140007bd7:	ins    BYTE PTR es:[rdi],dx
   140007bd8:	(bad)  
   140007bd9:	jne    0x140007c49
   140007bdb:	movsxd ebp,DWORD PTR [rax+0x77]
   140007bde:	imul   ebp,DWORD PTR [rsi+0x61],0x6c5c7070
   140007be5:	(bad)  
   140007be6:	jne    0x140007c56
   140007be8:	movsxd ebp,DWORD PTR [rax+0x77]
   140007beb:	imul   ebp,DWORD PTR [rsi+0x61],0x632e7070
   140007bf2:	jo     0x140007c64
   140007bf4:	add    BYTE PTR [rax],al
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	cmp    al,0x0
   140007bfa:	push   rbp
   140007bfb:	add    BYTE PTR [rsi+0x0],ch
   140007bfe:	imul   eax,DWORD PTR [rax],0x6e
   140007c01:	add    BYTE PTR [rdi+0x0],ch
   140007c04:	ja     0x140007c06
   140007c06:	outs   dx,BYTE PTR ds:[rsi]
   140007c07:	add    BYTE PTR [rax],ah
   140007c09:	add    BYTE PTR [rax+0x0],dl
   140007c0c:	(bad)  
   140007c0d:	add    BYTE PTR [rdx+0x0],dh
   140007c10:	add    BYTE PTR gs:[rsi+0x0],ch
   140007c14:	je     0x140007c16
   140007c16:	and    BYTE PTR [rax],al
   140007c18:	push   rax
   140007c19:	add    BYTE PTR [rdx+0x0],dh
   140007c1c:	outs   dx,DWORD PTR ds:[rsi]
   140007c1d:	add    BYTE PTR [rbx+0x0],ah
   140007c20:	add    BYTE PTR gs:[rbx+0x0],dh
   140007c24:	jae    0x140007c26
   140007c26:	add    BYTE PTR ds:[rax],al
   140007c29:	add    BYTE PTR [rax],al
   140007c2b:	add    BYTE PTR [rax],al
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rax+rax*1],bh
   140007c32:	push   rbp
   140007c33:	add    BYTE PTR [rsi+0x0],ch
   140007c36:	imul   eax,DWORD PTR [rax],0x6e
   140007c39:	add    BYTE PTR [rdi+0x0],ch
   140007c3c:	ja     0x140007c3e
   140007c3e:	outs   dx,BYTE PTR ds:[rsi]
   140007c3f:	add    BYTE PTR [rax],ah
   140007c41:	add    BYTE PTR [rsi+0x0],al
   140007c44:	imul   eax,DWORD PTR [rax],0x65006c
   140007c4a:	push   rsp
   140007c4b:	add    BYTE PTR [rcx+0x0],bh
   140007c4e:	jo     0x140007c50
   140007c50:	add    BYTE PTR gs:[rax],ah
   140007c53:	add    BYTE PTR [rdi+0x0],ch
   140007c56:	jb     0x140007c58
   140007c58:	and    BYTE PTR [rax],al
   140007c5a:	push   rbp
   140007c5b:	add    BYTE PTR [rdx+0x0],dh
   140007c5e:	imul   eax,DWORD PTR [rax],0x530020
   140007c64:	movsxd eax,DWORD PTR [rax]
   140007c66:	push   0x6d006500
   140007c6b:	add    BYTE PTR [rbp+0x0],ah
   140007c6e:	add    BYTE PTR ds:[rax],al
   140007c71:	add    BYTE PTR [rax],al
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    cl,al
   140007c79:	rex push rcx
   140007c7b:	ins    DWORD PTR es:[rdi],dx
   140007c7c:	ss je  0x140007c4d
   140007c7f:	adc    DWORD PTR [rax+0xaa0034],eax
   140007c85:	(bad)  
   140007c86:	or     edx,edi
   140007c88:	add    BYTE PTR [rax+0x0],al
   140007c8b:	rex add DWORD PTR [rax],eax
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	add    BYTE PTR [rax+0x0],al
   140007c93:	rex add DWORD PTR [rax],eax
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	add    BYTE PTR [rax+0x0],al
   140007c9b:	rex add DWORD PTR [rax],eax
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	mov    al,0x23
   140007ca2:	add    BYTE PTR [rax+0x1],al
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rax+0x24],al
   140007caa:	add    BYTE PTR [rax+0x1],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    al,dl
   140007cb1:	and    al,0x0
   140007cb3:	rex add DWORD PTR [rax],eax
   140007cb6:	add    BYTE PTR [rax],al
   140007cb8:	(bad)  
   140007cb9:	and    eax,0x14000
   140007cbe:	add    BYTE PTR [rax],al
   140007cc0:	loopne 0x140007ce7
   140007cc2:	add    BYTE PTR [rax+0x1],al
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rax],dh
   140007cc9:	add    BYTE PTR es:[rax+0x1],al
	...
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    al,al
   140007cd9:	add    BYTE PTR [rax],al
   140007cdb:	add    BYTE PTR [rax],al
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	rex.RX sar BYTE PTR [rdx],1
   140007ce2:	add    BYTE PTR [rax+0x1],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rax],ah
   140007ce9:	cmp    eax,DWORD PTR [rax]
   140007ceb:	rex add DWORD PTR [rax],eax
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	add    BYTE PTR [rbx],bh
   140007cf2:	add    BYTE PTR [rax+0x1],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rax],al
   140007cf9:	add    BYTE PTR [rax+0x1],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    BYTE PTR [rax],al
   140007d01:	add    BYTE PTR [rax+0x1],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rax+0x1400032],al
   140007d0d:	add    BYTE PTR [rax],al
   140007d0f:	add    al,ah
   140007d11:	xor    eax,DWORD PTR [rax]
   140007d13:	rex add DWORD PTR [rax],eax
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	add    BYTE PTR [rax+rax*1],dh
   140007d1b:	rex add DWORD PTR [rax],eax
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	shr    BYTE PTR [rip+0x14000],1        # 0x14001bd26
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	(bad)  
   140007d29:	cmp    al,BYTE PTR [rax]
   140007d2b:	rex add DWORD PTR [rax],eax
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	lock cmp al,BYTE PTR [rax]
   140007d33:	rex add DWORD PTR [rax],eax
   140007d36:	add    BYTE PTR [rax],al
   140007d38:	loopne 0x140007d74
   140007d3a:	add    BYTE PTR [rax+0x1],al
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rax],dl
   140007d41:	cmp    eax,DWORD PTR [rax]
   140007d43:	rex add DWORD PTR [rax],eax
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	mov    al,0x23
   140007d4a:	add    BYTE PTR [rax+0x1],al
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rax+0x24],al
   140007d52:	add    BYTE PTR [rax+0x1],al
   140007d55:	add    BYTE PTR [rax],al
   140007d57:	add    al,dl
   140007d59:	and    al,0x0
   140007d5b:	rex add DWORD PTR [rax],eax
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	(bad)  
   140007d61:	and    eax,0x14000
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	loopne 0x140007d8f
   140007d6a:	add    BYTE PTR [rax+0x1],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rax],dh
   140007d71:	add    BYTE PTR es:[rax+0x1],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    BYTE PTR [rax+0x1400032],al
   140007d7d:	add    BYTE PTR [rax],al
   140007d7f:	add    al,ah
   140007d81:	xor    eax,DWORD PTR [rax]
   140007d83:	rex add DWORD PTR [rax],eax
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	add    BYTE PTR [rax+rax*1],dh
   140007d8b:	rex add DWORD PTR [rax],eax
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	add    BYTE PTR [rax+0x0],al
   140007d93:	rex add DWORD PTR [rax],eax
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	(bad)  
   140007d99:	cmp    al,BYTE PTR [rax]
   140007d9b:	rex add DWORD PTR [rax],eax
   140007d9e:	add    BYTE PTR [rax],al
   140007da0:	sub    al,0x0
   140007da3:	rex add DWORD PTR [rax],eax
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	shr    BYTE PTR [rip+0x14000],0x0        # 0x14001bdaf
   140007daf:	add    BYTE PTR [rax+0x1400026],dl
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    BYTE PTR [rax+0x140002c],dh
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    al,dl
   140007dc1:	cmp    al,BYTE PTR [rax]
   140007dc3:	rex add DWORD PTR [rax],eax
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	and    BYTE PTR [rbx],bh
   140007dca:	add    BYTE PTR [rax+0x1],al
   140007dcd:	add    BYTE PTR [rax],al
   140007dcf:	add    BYTE PTR [rax],al
   140007dd1:	cmp    eax,DWORD PTR [rax]
   140007dd3:	rex add DWORD PTR [rax],eax
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	adc    BYTE PTR [rsi],ch
   140007dda:	add    BYTE PTR [rax+0x1],al
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    BYTE PTR [rax],ah
   140007de1:	add    BYTE PTR cs:[rax+0x1],al
   140007de5:	add    BYTE PTR [rax],al
   140007de7:	add    BYTE PTR [rax+0x2c],al
   140007dea:	add    BYTE PTR [rax+0x1],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rax+0x1400026],al
   140007df5:	add    BYTE PTR [rax],al
   140007df7:	add    BYTE PTR [rax+0x1400026],dl
   140007dfd:	add    BYTE PTR [rax],al
   140007dff:	add    BYTE PTR [rax+0x140002c],dh
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rbx],al
   140007e09:	add    BYTE PTR [rax],al
   140007e0b:	add    BYTE PTR [rax],al
   140007e0d:	add    BYTE PTR [rax],al
   140007e0f:	add    al,al
   140007e11:	add    BYTE PTR [rax],al
   140007e13:	add    BYTE PTR [rax],al
   140007e15:	add    BYTE PTR [rax],al
   140007e17:	rex.RX xchg esp,eax
   140007e19:	sub    ebp,edx
   140007e1b:	xchg   esp,eax
   140007e1c:	int3   
   140007e1d:	jmp    0x13fc0c802
   140007e22:	out    dx,al
   140007e23:	fs retf 0x5b8f
   140007e27:	nop
   140007e28:	xchg   DWORD PTR [rdx+0x9],ecx
   140007e2b:	xor    eax,0x42378bb1
   140007e30:	xchg   esi,eax
   140007e31:	mov    ah,0x17
   140007e34:	out    dx,al
   140007e35:	mov    ebp,0x4a8778b0
   140007e3a:	or     DWORD PTR [rip+0x42378bb1],esi        # 0x1823809f1
   140007e40:	xchg   esi,eax
   140007e41:	mov    ah,0x17
   140007e44:	out    dx,al
   140007e45:	mov    ebp,0x52278b0
   140007e4a:	xchg   ebx,eax
   140007e4b:	sbb    DWORD PTR [rdx],eax
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    ah,bh
   140007e51:	xchg   BYTE PTR [rax],al
	...
   140007e5b:	add    BYTE PTR [rip+0x10000000],al        # 0x150007e61
   140007e61:	xchg   DWORD PTR [rax],eax
   140007e63:	add    BYTE PTR [rax],ah
   140007e65:	add    BYTE PTR [rax],al
   140007e67:	add    BYTE PTR [rax],al
   140007e69:	add    BYTE PTR [rax],al
   140007e6b:	add    BYTE PTR [rcx],al
   140007e6d:	add    BYTE PTR [rax],al
   140007e6f:	add    BYTE PTR [rax],al
   140007e71:	add    BYTE PTR [rax],al
   140007e73:	add    BYTE PTR [rsi+0x3d],dl
   140007e76:	lahf   
   140007e77:	push   rbp
   140007e78:	add    BYTE PTR [rax],al
   140007e7a:	add    BYTE PTR [rax],al
   140007e7c:	add    al,BYTE PTR [rax]
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	sub    DWORD PTR [rax],eax
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	xor    al,0x82
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	xor    al,0x6a
   140007e8a:	add    BYTE PTR [rax],al
   140007e8c:	add    BYTE PTR [rax],al
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	push   rsi
   140007e91:	cmp    eax,0x559f
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	or     eax,0xb0000000
   140007e9d:	add    al,BYTE PTR [rax]
   140007e9f:	add    BYTE PTR [rdx+rax*4+0x0],dh
   140007ea3:	add    BYTE PTR [rdx+rbp*2+0x0],dh
	...
   140007ecf:	add    BYTE PTR [rax+0x0],ah
	...
   140007f25:	add    BYTE PTR [rax],al
   140007f27:	add    BYTE PTR [rax],cl
   140007f29:	movabs al,ds:0x14000
	...
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	adc    BYTE PTR [rbx+0x0],ah
   140007f43:	rex add DWORD PTR [rax],eax
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	sbb    BYTE PTR [rbx+0x0],ah
   140007f4b:	rex add DWORD PTR [rax],eax
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	and    BYTE PTR [rbx+0x0],0x40
   140007f54:	add    DWORD PTR [rax],eax
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	add    BYTE PTR ds:[rax],al
   140007f5b:	add    BYTE PTR [rax],al
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    BYTE PTR [rax],al
   140007f61:	xor    eax,0x0
	...
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	rex.RB push r12
   140007f72:	push   rdi
   140007f73:	xor    BYTE PTR [rax],dl
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    DWORD PTR [rsi+0x2b88040e],eax
   140007f7d:	add    eax,0xb03bb8a
   140007f82:	add    eax,0x0
   140007f87:	add    BYTE PTR [rax],al
   140007f89:	and    BYTE PTR [rax],al
   140007f8b:	add    bh,dh
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	rex.RX (bad) 
   140007f91:	ins    BYTE PTR es:[rdi],dx
   140007f92:	ins    BYTE PTR es:[rdi],dx
   140007f93:	(bad)  
   140007f95:	movsxd ebp,DWORD PTR [rbx+0x45]
   140007f98:	jb     0x14000800c
   140007f9a:	outs   dx,DWORD PTR ds:[rsi]
   140007f9b:	jb     0x140007f9d
   140007f9d:	ja     0x140008008
   140007f9f:	ins    BYTE PTR es:[rdi],dx
   140007fa0:	push   rdx
   140007fa1:	gs jae 0x140008019
   140007fa4:	ins    BYTE PTR es:[rdi],dx
   140007fa5:	je     0x140007fa7
   140007fa7:	cwde   
   140007fa8:	(bad)  
   140007fa9:	push   0x75736572
   140007fae:	ins    BYTE PTR es:[rdi],dx
   140007faf:	je     0x140007fb1
   140007fb1:	or     BYTE PTR [rsi+0x69],ah
   140007fb4:	ins    BYTE PTR es:[rdi],dx
   140007fb5:	gs rex.WRX (bad) 
   140007fb8:	ins    DWORD PTR es:[rdi],dx
   140007fb9:	add    BYTE PTR gs:[rdx],al
   140007fbc:	ins    BYTE PTR es:[rdi],dx
   140007fbd:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140007fc4:	gs jb  0x140007fc7
   140007fc7:	or     BYTE PTR [rbp+0x6f],ch
   140007fca:	fs jne 0x140008039
   140007fcd:	add    BYTE PTR gs:[rdx],al
   140007fd0:	data16 (bad) 
   140007fd2:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   140007fda:	add    BYTE PTR gs:[rax],cl
   140007fdd:	ins    DWORD PTR es:[rdi],dx
   140007fde:	gs jae 0x140008054
   140007fe1:	(bad)  
   140007fe2:	add    BYTE PTR gs:[ecx],al
   140007fe6:	je     0x140008050
   140007fe8:	jb     0x14000804f
   140007fea:	(bad)  
   140007feb:	fs rex.WB
   140007fed:	add    BYTE PTR fs:[rax],cl
   140007ff0:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007ff3:	ins    BYTE PTR es:[rdi],dx
   140007ff4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007ff6:	outs   dx,BYTE PTR ds:[rsi]
   140007ff7:	je     0x14000805e
   140007ff9:	js     0x14000806f
   140007ffb:	add    BYTE PTR [rdx],al
   140007ffd:	outs   dx,DWORD PTR ds:[rsi]
   140007ffe:	jb     0x140008069
   140008000:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140008008:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000800a:	outs   dx,BYTE PTR ds:[rsi]
   14000800b:	je     0x140008072
   14000800d:	js     0x140008083
   14000800f:	rex.WB
   140008010:	add    BYTE PTR fs:[rax],cl
   140008013:	outs   dx,DWORD PTR ds:[rsi]
   140008014:	jb     0x14000807f
   140008016:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000801e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008020:	outs   dx,BYTE PTR ds:[rsi]
   140008021:	je     0x140008088
   140008023:	js     0x140008099
   140008025:	rex.WRX (bad) 
   140008027:	ins    DWORD PTR es:[rdi],dx
   140008028:	add    BYTE PTR gs:[rdx],al
   14000802b:	outs   dx,DWORD PTR ds:[rsi]
   14000802c:	jb     0x140008097
   14000802e:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140008036:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008038:	outs   dx,BYTE PTR ds:[rsi]
   140008039:	je     0x1400080a0
   14000803b:	js     0x1400080b1
   14000803d:	rex.WRB
   14000803e:	gs jae 0x1400080b4
   140008041:	(bad)  
   140008042:	add    BYTE PTR gs:[ecx],al
   140008046:	movsxd esi,DWORD PTR [rbp+0x72]
   140008049:	jb     0x1400080b0
   14000804b:	outs   dx,BYTE PTR ds:[rsi]
   14000804c:	je     0x140008091
   14000804e:	outs   dx,DWORD PTR ds:[rsi]
   14000804f:	outs   dx,BYTE PTR ds:[rsi]
   140008050:	je     0x1400080b7
   140008052:	js     0x1400080c8
   140008054:	rex.WB
   140008055:	add    BYTE PTR fs:[rax],cl
   140008058:	movsxd esi,DWORD PTR [rbp+0x72]
   14000805b:	jb     0x1400080c2
   14000805d:	outs   dx,BYTE PTR ds:[rsi]
   14000805e:	je     0x1400080a3
   140008060:	outs   dx,DWORD PTR ds:[rsi]
   140008061:	outs   dx,BYTE PTR ds:[rsi]
   140008062:	je     0x1400080c9
   140008064:	js     0x1400080da
   140008066:	rex.WRX (bad) 
   140008068:	ins    DWORD PTR es:[rdi],dx
   140008069:	add    BYTE PTR gs:[rdx],al
   14000806c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000806f:	jb     0x1400080d6
   140008071:	outs   dx,BYTE PTR ds:[rsi]
   140008072:	je     0x1400080b7
   140008074:	outs   dx,DWORD PTR ds:[rsi]
   140008075:	outs   dx,BYTE PTR ds:[rsi]
   140008076:	je     0x1400080dd
   140008078:	js     0x1400080ee
   14000807a:	rex.WRB
   14000807b:	gs jae 0x1400080f1
   14000807e:	(bad)  
   14000807f:	add    BYTE PTR gs:[ecx],al
   140008083:	add    ecx,DWORD PTR [rbx]
   140008085:	add    eax,0x0
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rdx],bl
   140008090:	add    DWORD PTR [rax],eax
   140008092:	rex.RX (bad) 
   140008094:	ins    BYTE PTR es:[rdi],dx
   140008095:	ins    BYTE PTR es:[rdi],dx
   140008096:	(bad)  
   140008098:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000809b:	jb     0x14000810f
   14000809d:	outs   dx,DWORD PTR ds:[rsi]
   14000809e:	jb     0x1400080a0
   1400080a0:	ja     0x14000810b
   1400080a2:	ins    BYTE PTR es:[rdi],dx
   1400080a3:	push   rdx
   1400080a4:	gs jae 0x14000811c
   1400080a7:	ins    BYTE PTR es:[rdi],dx
   1400080a8:	je     0x1400080aa
   1400080aa:	cwde   
   1400080ab:	adc    DWORD PTR [rax+0x72],ebp
   1400080ae:	gs jae 0x140008126
   1400080b1:	ins    BYTE PTR es:[rdi],dx
   1400080b2:	je     0x1400080b4
   1400080b4:	or     BYTE PTR [rsi+0x69],ah
   1400080b7:	ins    BYTE PTR es:[rdi],dx
   1400080b8:	gs rex.WRX (bad) 
   1400080bb:	ins    DWORD PTR es:[rdi],dx
   1400080bc:	add    BYTE PTR gs:[rdx],al
   1400080bf:	ins    BYTE PTR es:[rdi],dx
   1400080c0:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400080c7:	gs jb  0x1400080ca
   1400080ca:	or     BYTE PTR [rbp+0x6f],ch
   1400080cd:	fs jne 0x14000813c
   1400080d0:	add    BYTE PTR gs:[rdx],al
   1400080d3:	data16 (bad) 
   1400080d5:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   1400080dd:	add    BYTE PTR gs:[rax],cl
   1400080e0:	ins    DWORD PTR es:[rdi],dx
   1400080e1:	gs jae 0x140008157
   1400080e4:	(bad)  
   1400080e5:	add    BYTE PTR gs:[ecx],al
   1400080e9:	je     0x140008153
   1400080eb:	jb     0x140008152
   1400080ed:	(bad)  
   1400080ee:	fs rex.WB
   1400080f0:	add    BYTE PTR fs:[rax],cl
   1400080f3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400080f6:	ins    BYTE PTR es:[rdi],dx
   1400080f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400080f9:	outs   dx,BYTE PTR ds:[rsi]
   1400080fa:	je     0x140008161
   1400080fc:	js     0x140008172
   1400080fe:	add    BYTE PTR [rdx],al
   140008100:	outs   dx,DWORD PTR ds:[rsi]
   140008101:	jb     0x14000816c
   140008103:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000810b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000810d:	outs   dx,BYTE PTR ds:[rsi]
   14000810e:	je     0x140008175
   140008110:	js     0x140008186
   140008112:	rex.WB
   140008113:	add    BYTE PTR fs:[rax],cl
   140008116:	outs   dx,DWORD PTR ds:[rsi]
   140008117:	jb     0x140008182
   140008119:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140008121:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008123:	outs   dx,BYTE PTR ds:[rsi]
   140008124:	je     0x14000818b
   140008126:	js     0x14000819c
   140008128:	rex.WRX (bad) 
   14000812a:	ins    DWORD PTR es:[rdi],dx
   14000812b:	add    BYTE PTR gs:[rdx],al
   14000812e:	outs   dx,DWORD PTR ds:[rsi]
   14000812f:	jb     0x14000819a
   140008131:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140008139:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000813b:	outs   dx,BYTE PTR ds:[rsi]
   14000813c:	je     0x1400081a3
   14000813e:	js     0x1400081b4
   140008140:	rex.WRB
   140008141:	gs jae 0x1400081b7
   140008144:	(bad)  
   140008145:	add    BYTE PTR gs:[ecx],al
   140008149:	movsxd esi,DWORD PTR [rbp+0x72]
   14000814c:	jb     0x1400081b3
   14000814e:	outs   dx,BYTE PTR ds:[rsi]
   14000814f:	je     0x140008194
   140008151:	outs   dx,DWORD PTR ds:[rsi]
   140008152:	outs   dx,BYTE PTR ds:[rsi]
   140008153:	je     0x1400081ba
   140008155:	js     0x1400081cb
   140008157:	rex.WB
   140008158:	add    BYTE PTR fs:[rax],cl
   14000815b:	movsxd esi,DWORD PTR [rbp+0x72]
   14000815e:	jb     0x1400081c5
   140008160:	outs   dx,BYTE PTR ds:[rsi]
   140008161:	je     0x1400081a6
   140008163:	outs   dx,DWORD PTR ds:[rsi]
   140008164:	outs   dx,BYTE PTR ds:[rsi]
   140008165:	je     0x1400081cc
   140008167:	js     0x1400081dd
   140008169:	rex.WRX (bad) 
   14000816b:	ins    DWORD PTR es:[rdi],dx
   14000816c:	add    BYTE PTR gs:[rdx],al
   14000816f:	movsxd esi,DWORD PTR [rbp+0x72]
   140008172:	jb     0x1400081d9
   140008174:	outs   dx,BYTE PTR ds:[rsi]
   140008175:	je     0x1400081ba
   140008177:	outs   dx,DWORD PTR ds:[rsi]
   140008178:	outs   dx,BYTE PTR ds:[rsi]
   140008179:	je     0x1400081e0
   14000817b:	js     0x1400081f1
   14000817d:	rex.WRB
   14000817e:	gs jae 0x1400081f4
   140008181:	(bad)  
   140008182:	add    BYTE PTR gs:[ecx],al
   140008186:	data16 (bad) 
   140008188:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   140008190:	or     BYTE PTR [rsi+0x61],ah
   140008193:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   14000819b:	outs   dx,BYTE PTR ds:[rsi]
   14000819c:	je     0x14000819e
   14000819e:	or     BYTE PTR [rsi+0x75],ah
   1400081a1:	outs   dx,BYTE PTR ds:[rsi]
   1400081a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400081a6:	outs   dx,BYTE PTR ds:[rsi]
   1400081a7:	add    BYTE PTR [rdx],al
   1400081a9:	add    ecx,DWORD PTR [rbx]
   1400081ab:	add    eax,0x0
   1400081b0:	add    BYTE PTR [rax],al
   1400081b2:	and    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],bh
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	rex.WR (bad) 
   1400081ba:	jne    0x14000822a
   1400081bc:	movsxd ebp,DWORD PTR [rax+0x57]
   1400081bf:	imul   ebp,DWORD PTR [rsi+0x41],0x6e497070
   1400081c6:	jbe    0x140008237
   1400081c8:	imul   esp,DWORD PTR [rbp+0x64],0x0
   1400081cc:	ins    DWORD PTR es:[rdi],dx
   1400081cd:	outs   dx,DWORD PTR ds:[rsi]
   1400081ce:	fs jne 0x14000823d
   1400081d1:	gs push rax
   1400081d3:	(bad)  
   1400081d4:	je     0x14000823e
   1400081d6:	add    BYTE PTR [rcx],al
   1400081d8:	imul   bp,WORD PTR [rbp+riz*2+0x54],0x7079
   1400081df:	gs rex.WRXB jb 0x140008238
   1400081e3:	jb     0x14000824e
   1400081e5:	push   rbx
   1400081e6:	movsxd ebp,DWORD PTR [rax+0x65]
   1400081e9:	ins    DWORD PTR es:[rdi],dx
   1400081ea:	add    BYTE PTR gs:[rcx],al
   1400081ed:	add    al,0xd2
   1400081ef:	fcom   QWORD PTR [rdx]
   1400081f1:	mov    ss,WORD PTR [rip+0x2a5af4fe]        # 0x16a5b76f5
   1400081f7:	push   0xffffffffffffffe7
   1400081f9:	(bad)  
   1400081fa:	(bad)  
   1400081fc:	jge    0x1400081e3
   1400081fe:	xor    al,BYTE PTR [rax]
   140008200:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140008208:	je     0x140008261
   14000820a:	imul   ebp,DWORD PTR [rsi+0x64],0x4673776f
   140008211:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x6f6c7078
   140008219:	jb     0x140008280
   14000821b:	jb     0x14000821d
   14000821d:	adc    eax,DWORD PTR [rax]
   14000821f:	add    DWORD PTR [rdx],ebx
   140008221:	jae    0x140008273
   140008223:	rex.WRXB iretq 
   140008225:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000822b:	call   0xfa7686f9
   140008230:	add    DWORD PTR [rax],eax
   140008232:	add    BYTE PTR [rax],al
   140008234:	push   rdx
   140008235:	push   rbx
   140008236:	rex.R push rbx
   140008238:	pop    rdi
   140008239:	mov    ebp,0xb21614ae
   14000823e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000823f:	rex.RXB mov r14b,0xfb
   140008242:	mov    BYTE PTR [rdx+0x37],dl
   140008245:	cli    
   140008246:	cld    
   140008247:	push   rdi
   140008248:	add    DWORD PTR [rax],eax
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	rex.WR (bad) 
   14000824e:	jne    0x1400082be
   140008250:	movsxd ebp,DWORD PTR [rax+0x57]
   140008253:	imul   ebp,DWORD PTR [rsi+0x41],0x702e7070
   14000825a:	fs (bad) 
	...
   140008274:	rex.RXB
   140008275:	rex.XB push r12
   140008277:	rex.WR add BYTE PTR [rax],r10b
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	jns    0x14000827f
   14000827e:	add    BYTE PTR [rax],al
   140008280:	cs je  0x1400082e8
   140008283:	js     0x1400082f9
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rcx+rdx*1+0x0],bh
   14000828b:	add    BYTE PTR [rax+0x2e000000],dl
   140008291:	je     0x1400082f8
   140008293:	js     0x140008309
   140008295:	and    al,0x64
   140008297:	imul   eax,DWORD PTR [rax],0x10000000
   14000829d:	adc    al,BYTE PTR [rax]
   14000829f:	add    ah,cl
   1400082a1:	cmp    eax,0x742e0000
   1400082a6:	gs js  0x14000831d
   1400082a9:	and    al,0x6d
   1400082ab:	outs   dx,BYTE PTR ds:[rsi]
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	loopne 0x140008301
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	jge    0x1400082b6
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	cs je  0x140008320
   1400082bb:	js     0x140008331
   1400082bd:	and    al,0x6d
   1400082bf:	outs   dx,BYTE PTR ds:[rsi]
   1400082c0:	and    al,0x30
   1400082c2:	xor    BYTE PTR [rax],al
   1400082c4:	(bad)  
   1400082c5:	push   rax
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	(bad)  
   1400082c9:	add    DWORD PTR [rax],eax
   1400082cb:	add    BYTE PTR [rsi],ch
   1400082cd:	je     0x140008334
   1400082cf:	js     0x140008345
   1400082d1:	and    al,0x78
   1400082d3:	add    BYTE PTR [rax+0x6f000051],al
   1400082d9:	add    DWORD PTR [rax],eax
   1400082db:	add    BYTE PTR [rsi],ch
   1400082dd:	je     0x140008344
   1400082df:	js     0x140008355
   1400082e1:	and    al,0x79
   1400082e3:	add    BYTE PTR fs:[rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	add    BYTE PTR [rax+0x0],ah
   1400082eb:	add    BYTE PTR [rax],dl
   1400082ed:	add    eax,DWORD PTR [rax]
   1400082ef:	add    BYTE PTR [rsi],ch
   1400082f1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400082f9:	add    BYTE PTR [rax],al
   1400082fb:	add    BYTE PTR [rax],dl
   1400082fd:	movsxd eax,DWORD PTR [rax]
   1400082ff:	add    BYTE PTR [rax],dl
   140008301:	add    BYTE PTR [rax],al
   140008303:	add    BYTE PTR [rsi],ch
   140008305:	xor    BYTE PTR [rax],dh
   140008307:	movsxd esp,DWORD PTR [rsi+0x67]
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	and    BYTE PTR [rbx+0x0],ah
   14000830f:	add    BYTE PTR [rax],cl
   140008311:	add    BYTE PTR [rax],al
   140008313:	add    BYTE PTR [rsi],ch
   140008315:	rex.XB push r10
   140008317:	push   rsp
   140008318:	and    al,0x58
   14000831a:	rex.XB
   14000831b:	add    BYTE PTR [r8],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	sub    BYTE PTR [rbx+0x0],ah
   140008323:	add    BYTE PTR [rax],cl
   140008325:	add    BYTE PTR [rax],al
   140008327:	add    BYTE PTR [rsi],ch
   140008329:	rex.XB push r10
   14000832b:	push   rsp
   14000832c:	and    al,0x58
   14000832e:	rex.XB
   14000832f:	rex.B
   140008330:	add    BYTE PTR [r8],al
   140008333:	add    BYTE PTR [rax],dh
   140008335:	movsxd eax,DWORD PTR [rax]
   140008337:	add    BYTE PTR [rax],ch
   140008339:	add    BYTE PTR [rax],al
   14000833b:	add    BYTE PTR [rsi],ch
   14000833d:	rex.XB push r10
   14000833f:	push   rsp
   140008340:	and    al,0x58
   140008342:	rex.XB push r13
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	pop    rax
   140008349:	movsxd eax,DWORD PTR [rax]
   14000834b:	add    BYTE PTR [rax],cl
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rsi],ch
   140008351:	rex.XB push r10
   140008353:	push   rsp
   140008354:	and    al,0x58
   140008356:	rex.XB pop r10
   140008358:	add    BYTE PTR [rax],al
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	(bad)  
   14000835d:	movsxd eax,DWORD PTR [rax]
   14000835f:	add    BYTE PTR [rax],cl
   140008361:	add    BYTE PTR [rax],al
   140008363:	add    BYTE PTR [rsi],ch
   140008365:	rex.XB push r10
   140008367:	push   rsp
   140008368:	and    al,0x58
   14000836a:	rex.WB
   14000836b:	add    BYTE PTR [r8],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	push   0x8000063
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rsi],ch
   140008379:	rex.XB push r10
   14000837b:	push   rsp
   14000837c:	and    al,0x58
   14000837e:	rex.WB
   14000837f:	rex.B
   140008380:	add    BYTE PTR [r8],al
   140008383:	add    BYTE PTR [rax+0x63],dh
   140008386:	add    BYTE PTR [rax],al
   140008388:	or     BYTE PTR [rax],al
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	cs rex.XB push r10
   14000838f:	push   rsp
   140008390:	and    al,0x58
   140008392:	rex.WB pop r9
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	js     0x1400083fd
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	or     BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	cs rex.XB push r10
   1400083a3:	push   rsp
   1400083a4:	and    al,0x58
   1400083a6:	rex.WB pop r10
   1400083a8:	add    BYTE PTR [rax],al
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	and    BYTE PTR [rbx+0x0],0x0
   1400083b0:	clc    
   1400083b1:	add    BYTE PTR [rax],al
   1400083b3:	add    BYTE PTR [rsi],ch
   1400083b5:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    BYTE PTR [rax-0xfffff9c],al
   1400083c5:	sbb    al,BYTE PTR [rax]
   1400083c7:	add    BYTE PTR [rsi],ch
   1400083c9:	jb     0x14000842f
   1400083cb:	(bad)  
   1400083cc:	je     0x14000842f
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	jo     0x140008451
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	adc    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	cs jb  0x14000843f
   1400083db:	(bad)  
   1400083dc:	je     0x14000843f
   1400083de:	and    al,0x7a
   1400083e0:	rex.RB push r12
   1400083e2:	push   rdi
   1400083e3:	xor    BYTE PTR [rax],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    BYTE PTR [rax+0x6d00007f],al
   1400083ed:	add    al,BYTE PTR [rax]
   1400083ef:	add    BYTE PTR [rsi],ch
   1400083f1:	jb     0x140008457
   1400083f3:	(bad)  
   1400083f4:	je     0x140008457
   1400083f6:	and    al,0x7a
   1400083f8:	rex.RB push r12
   1400083fa:	push   rdi
   1400083fb:	xor    DWORD PTR [rax],eax
   1400083fd:	add    BYTE PTR [rax],al
   1400083ff:	add    ch,ch
   140008401:	add    DWORD PTR [rax],0x4300
   140008407:	add    BYTE PTR [rsi],ch
   140008409:	jb     0x14000846f
   14000840b:	(bad)  
   14000840c:	je     0x14000846f
   14000840e:	and    al,0x7a
   140008410:	rex.RB push r12
   140008412:	push   rdi
   140008413:	xor    al,BYTE PTR [rax]
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax],dh
   140008419:	(bad)  
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    DWORD PTR [rax],eax
   14000841e:	add    BYTE PTR [rax],al
   140008420:	cs jb  0x140008487
   140008423:	(bad)  
   140008424:	je     0x140008487
   140008426:	and    al,0x7a
   140008428:	rex.RB push r12
   14000842a:	push   rdi
   14000842b:	cmp    DWORD PTR [rax],eax
   14000842d:	add    BYTE PTR [rax],al
   14000842f:	add    BYTE PTR [rdx+rax*4],dh
   140008432:	add    BYTE PTR [rax],al
   140008434:	lock add al,BYTE PTR [rax]
   140008437:	add    BYTE PTR [rsi],ch
   140008439:	jb     0x14000849f
   14000843b:	(bad)  
   14000843c:	je     0x14000849f
   14000843e:	and    al,0x7a
   140008440:	jp     0x1400084bc
   140008442:	fs (bad) 
   140008444:	add    BYTE PTR [eax],al
   140008447:	add    BYTE PTR [rax],dh
   140008449:	test   DWORD PTR [rax],eax
   14000844b:	add    al,ch
   14000844d:	add    al,0x0
   14000844f:	add    BYTE PTR [rsi],ch
   140008451:	js     0x1400084b7
   140008453:	(bad)  
   140008454:	je     0x1400084b7
   140008456:	add    BYTE PTR [rax],al
   140008458:	sbb    BYTE PTR [rdx+0x1d40000],cl
   14000845e:	add    BYTE PTR [rax],al
   140008460:	cs js  0x1400084c7
   140008463:	(bad)  
   140008464:	je     0x1400084c7
   140008466:	and    al,0x78
   140008468:	add    BYTE PTR [rax],al
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	lock mov eax,DWORD PTR [rax]
   14000846f:	add    BYTE PTR [rax+0x1],al
   140008472:	add    BYTE PTR [rax],al
   140008474:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rax],dh
   140008481:	lea    eax,[rax]
   140008483:	add    BYTE PTR [rax+rax*1],dl
   140008486:	add    BYTE PTR [rax],al
   140008488:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008491:	add    BYTE PTR [rax],al
   140008493:	add    BYTE PTR [rax-0x73],cl
   140008496:	add    BYTE PTR [rax],al
   140008498:	adc    BYTE PTR [rbx],al
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rax-0x70],bl
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	js     0x1400084b5
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400084b9:	add    BYTE PTR [rax],al
   1400084bb:	add    BYTE PTR [rax],al
   1400084bd:	movabs al,ds:0x642e000000900000
   1400084c6:	(bad)  
   1400084c7:	je     0x14000852a
   1400084c9:	add    BYTE PTR [rax],al
   1400084cb:	add    BYTE PTR [rax-0x15ffff60],dl
   1400084d1:	add    BYTE PTR [rax],al
   1400084d3:	add    BYTE PTR [rsi],ch
   1400084d5:	fs (bad) 
   1400084d7:	je     0x14000853a
   1400084d9:	and    al,0x72
   1400084db:	add    BYTE PTR [rax-0x2fffff5f],al
   1400084e1:	(bad)  
   1400084e2:	add    BYTE PTR [rax],al
   1400084e4:	cs (bad) 
   1400084e7:	jae    0x1400084e9
   1400084e9:	add    BYTE PTR [rax],al
   1400084eb:	add    BYTE PTR [rax],al
   1400084ed:	mov    al,0x0
   1400084ef:	add    BYTE PTR [rsp+rax*1+0x702e0000],ah
   1400084f6:	fs (bad) 
   1400084f8:	je     0x14000855b
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	add    al,al
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	pop    rax
   140008501:	add    BYTE PTR [rax],al
   140008503:	add    BYTE PTR [rsi],ch
   140008505:	jb     0x14000857a
   140008507:	jb     0x14000856c
   140008509:	and    al,0x30
   14000850b:	xor    DWORD PTR [rax],eax
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rax-0x40],ah
   140008512:	add    BYTE PTR [rax],al
   140008514:	movabs al,ds:0x637273722e000003
   14000851d:	and    al,0x30
   14000851f:	xor    al,BYTE PTR [rax]
	...
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	add    BYTE PTR [rcx],al
   140008531:	add    eax,0x34050002
   140008536:	add    DWORD PTR [rax],eax
   140008538:	add    DWORD PTR [rcx],edx
   14000853a:	add    al,0x0
   14000853c:	adc    DWORD PTR [rdx],esi
   14000853e:	or     eax,0xb600c70
   140008543:	xor    BYTE PTR [rcx],bl
   140008545:	and    eax,0x34130009
   14000854a:	push   rbx
   14000854b:	add    BYTE PTR [rbx],dl
   14000854d:	add    DWORD PTR [rdx+0x0],ecx
   140008550:	or     al,0xf0
   140008552:	or     ah,al
   140008554:	or     BYTE PTR [rax+0x7],dh
   140008557:	(bad)  
   140008558:	(bad)  
   140008559:	push   rax
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	rex.R
   14000855d:	rex.WRXB add BYTE PTR [r8],r8b
   140008560:	add    al,BYTE PTR [rax]
   140008563:	add    BYTE PTR [rcx],bl
   140008565:	(bad)  
   140008566:	add    eax,0x2c340d00
   14000856b:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600af72
   140008571:	(bad)  
   140008572:	add    BYTE PTR [rax],al
   140008574:	rex.R
   140008575:	rex.WRXB add BYTE PTR [r8],r8b
   140008578:	rex add DWORD PTR [rax],eax
   14000857b:	add    BYTE PTR [rcx],al
   14000857d:	(bad)  
   14000857e:	add    al,BYTE PTR [rax]
   140008580:	(bad)  
   140008581:	xor    al,BYTE PTR [rdx]
   140008583:	xor    BYTE PTR [rcx],al
   140008585:	clts   
   140008587:	add    BYTE PTR [rdi],cl
   140008589:	fs (bad) 
   14000858b:	add    BYTE PTR [rdi],cl
   14000858d:	xor    al,0x6
   14000858f:	add    BYTE PTR [rdi],cl
   140008591:	xor    cl,BYTE PTR [rbx]
   140008593:	jo     0x140008596
   140008595:	add    al,0x1
   140008597:	add    BYTE PTR [rdx+rax*2],al
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	add    DWORD PTR [rdx],ecx
   14000859e:	add    al,0x0
   1400085a0:	or     dh,BYTE PTR [rsi+rax*1]
   1400085a3:	add    BYTE PTR [rdx],cl
   1400085a5:	xor    al,BYTE PTR [rsi]
   1400085a7:	jo     0x1400085aa
   1400085a9:	adc    al,0x8
   1400085ab:	add    BYTE PTR [rsp+riz*2],dl
   1400085ae:	or     BYTE PTR [rax],al
   1400085b0:	adc    al,0x54
   1400085b2:	(bad)  
   1400085b3:	add    BYTE PTR [rsp+rsi*1],dl
   1400085b6:	(bad)  
   1400085b7:	add    BYTE PTR [rdx+rsi*1],dl
   1400085ba:	adc    BYTE PTR [rax+0x1],dh
   1400085bd:	sbb    al,0xc
   1400085bf:	add    BYTE PTR [rsp+riz*2],bl
   1400085c2:	or     eax,0xc541c00
   1400085c7:	add    BYTE PTR [rsp+rsi*1],bl
   1400085ca:	or     eax,DWORD PTR [rax]
   1400085cc:	sbb    al,0x32
   1400085ce:	sbb    al,dh
   1400085d0:	(bad)  
   1400085d1:	loopne 0x1400085e7
   1400085d3:	rcl    BYTE PTR [rdx],1
   1400085d5:	rcl    BYTE PTR [rax],0x70
   1400085d8:	add    DWORD PTR [rip+0x341d000a],ebx        # 0x1741d85e8
   1400085de:	adc    al,BYTE PTR [rax]
   1400085e0:	sbb    eax,0x17f01972
   1400085e5:	loopne 0x1400085fc
   1400085e7:	rcl    BYTE PTR [rbx],1
   1400085e9:	rcl    BYTE PTR [rcx],0x70
   1400085ec:	adc    BYTE PTR [rax+0xf],ah
   1400085ef:	push   rax
   1400085f0:	sbb    DWORD PTR [rdx],esp
   1400085f2:	add    al,0x0
   1400085f4:	adc    BYTE PTR [rcx],al
   1400085f6:	mov    ecx,0x2700302
   1400085fb:	xor    BYTE PTR [rdi+rcx*2+0x0],al
   1400085ff:	add    BYTE PTR [rax+0x1000015],dh
   140008605:	add    al,0x1
   140008607:	add    BYTE PTR [rdx+riz*4],al
   14000860a:	add    BYTE PTR [rax],al
   14000860c:	add    DWORD PTR [rdi],ecx
   14000860e:	(bad)  
   14000860f:	add    BYTE PTR [rdi],cl
   140008611:	fs or  eax,0xc340f00
   140008617:	add    BYTE PTR [rdi],cl
   140008619:	xchg   edx,eax
   14000861a:	or     esi,DWORD PTR [rax+0x1]
   14000861d:	add    al,0x1
   14000861f:	add    BYTE PTR [rdx+rax*4],al
   140008622:	add    BYTE PTR [rax],al
   140008624:	add    DWORD PTR [rcx],ebx
   140008626:	or     al,BYTE PTR [rax]
   140008628:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   14000862c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   140008630:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140008634:	sbb    DWORD PTR [rdx+rcx*1],esi
   140008637:	add    BYTE PTR [rcx],bl
   140008639:	jb     0x140008650
   14000863b:	loopne 0x14000863e
   14000863d:	sbb    DWORD PTR [rdx],ecx
   14000863f:	add    BYTE PTR [rcx],bl
   140008641:	je     0x14000864c
   140008643:	add    BYTE PTR [rcx],bl
   140008645:	or     BYTE PTR fs:[rax],al
   140008648:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000864c:	sbb    DWORD PTR [rsi+rax*1],esi
   14000864f:	add    BYTE PTR [rcx],bl
   140008651:	xor    dl,BYTE PTR [rip+0xc1d01e0]        # 0x14c1d8837
   140008657:	add    BYTE PTR [rip+0x1d000f74],bl        # 0x15d0095d1
   14000865d:	fs (bad) 
   14000865f:	add    BYTE PTR [rip+0x1d000d54],bl        # 0x15d0093b9
   140008665:	xor    al,0xc
   140008667:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f09fdf
   14000866d:	loopne 0x140008684
   14000866f:	rcr    BYTE PTR [rcx],0x29
   140008672:	or     DWORD PTR [rax],eax
   140008674:	sbb    esi,DWORD PTR [rcx+rsi*1+0x0]
   140008678:	sbb    esp,DWORD PTR [rax+rsi*1+0x0]
   14000867c:	sbb    esi,DWORD PTR [rdi+rbp*1]
   14000867f:	add    BYTE PTR [rbx],bl
   140008681:	add    DWORD PTR [rax+rax*1],ebp
   140008684:	adc    BYTE PTR [rax+0x0],dl
   140008687:	add    BYTE PTR [rdi+rcx*2+0x0],al
   14000868b:	add    BYTE PTR [rax+0x1],dl
   14000868e:	add    BYTE PTR [rax],al
   140008690:	sbb    DWORD PTR [rdi],ebp
   140008692:	or     DWORD PTR [rax],eax
   140008694:	(bad)  
   140008695:	je     0x1400086ce
   140008697:	add    BYTE PTR [rsi],bl
   140008699:	fs add BYTE PTR ss:[rsi],bl
   14000869d:	xor    al,0x35
   14000869f:	add    BYTE PTR [rsi],bl
   1400086a1:	add    DWORD PTR [rdx],esi
   1400086a3:	add    BYTE PTR [rax],dl
   1400086a5:	push   rax
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	rex.R
   1400086a9:	rex.WRXB add BYTE PTR [r8],r8b
   1400086ac:	add    BYTE PTR [rcx],0x0
   1400086af:	add    BYTE PTR [rcx],al
   1400086b1:	or     al,BYTE PTR [rax+rax*1]
   1400086b4:	or     dh,BYTE PTR [rax+rcx*1]
   1400086b7:	add    BYTE PTR [rdx],cl
   1400086b9:	xor    al,BYTE PTR [rsi]
   1400086bb:	jo     0x1400086be
   1400086bd:	or     BYTE PTR [rdx],al
   1400086bf:	add    BYTE PTR [rax],cl
   1400086c1:	jb     0x1400086c7
   1400086c3:	xor    BYTE PTR [rcx],al
   1400086c5:	syscall 
   1400086c7:	add    BYTE PTR [rdi],cl
   1400086c9:	xor    al,0x14
   1400086cb:	add    BYTE PTR [rdi],cl
   1400086cd:	add    DWORD PTR [rdx],edx
   1400086cf:	add    BYTE PTR [rax],cl
   1400086d1:	jo     0x1400086d3
   1400086d3:	add    BYTE PTR [rcx],al
   1400086d5:	or     eax,DWORD PTR [rax+rax*1]
   1400086d8:	or     esi,DWORD PTR [rdx+0x60067007]
   1400086de:	add    eax,0x81e1130
   1400086e3:	add    BYTE PTR [rsi],bl
   1400086e5:	xor    al,0xc
   1400086e7:	add    BYTE PTR [rdx],dl
   1400086e9:	push   rdx
   1400086ea:	(bad)  
   1400086eb:	lock or al,0xe0
   1400086ee:	or     dh,BYTE PTR [rax+0x9]
   1400086f1:	(bad)  
   1400086f2:	or     BYTE PTR [rax+0x56],dl
   1400086f5:	add    BYTE PTR [r8],r8b
   1400086f8:	rex.W jle 0x1400086fb
   1400086fb:	add    bh,bh
   1400086fd:	(bad)  
   1400086fe:	(bad)  
   1400086ff:	jmp    QWORD PTR [rsi+0x50]
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    BYTE PTR [rax],al
   140008708:	jb     0x14000875a
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	add    BYTE PTR [rax],al
   14000870e:	add    BYTE PTR [rax],al
   140008710:	lods   al,BYTE PTR ds:[rsi]
   140008711:	(bad)  
   140008712:	add    BYTE PTR [rax],al
   140008714:	(bad)  
   140008715:	(bad)  
   140008716:	(bad)  
   140008717:	(bad)  
   140008718:	fld    TBYTE PTR [rdi]
   14000871a:	add    BYTE PTR [rax],al
   14000871c:	add    BYTE PTR [rax],al
   14000871e:	add    BYTE PTR [rax],al
   140008720:	fild   QWORD PTR [rdi]
   140008722:	add    BYTE PTR [rax],al
   140008724:	add    DWORD PTR [rax],eax
   140008726:	add    BYTE PTR [rax],al
   140008728:	push   0x30
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rcx+0x30],bh
   140008732:	add    BYTE PTR [rax],al
   140008734:	(bad)  
   140008735:	(bad)  
   140008736:	(bad)  
   140008737:	call   FWORD PTR [rcx]
   140008739:	sub    DWORD PTR [rcx],ecx
   14000873b:	add    BYTE PTR [rdi],dl
   14000873d:	fs pop rsi
   14000873f:	add    BYTE PTR [rdi],dl
   140008741:	push   rsp
   140008742:	pop    rbp
   140008743:	add    BYTE PTR [rdi],dl
   140008745:	xor    al,0x5c
   140008747:	add    BYTE PTR [rdi],dl
   140008749:	add    DWORD PTR [rdx+0x0],ebx
   14000874c:	adc    BYTE PTR [rax+0x0],dh
   14000874f:	add    BYTE PTR [rdi+rcx*2+0x0],al
   140008753:	add    al,al
   140008755:	add    al,BYTE PTR [rax]
   140008757:	add    BYTE PTR [rcx],al
   140008759:	sbb    BYTE PTR [rdx],cl
   14000875b:	add    BYTE PTR [rax],bl
   14000875d:	or     eax,DWORD PTR fs:[rax]
   140008760:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140008764:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008767:	add    BYTE PTR [rax],bl
   140008769:	xor    dl,BYTE PTR [rax+rsi*8]
   14000876c:	adc    ah,al
   14000876e:	adc    BYTE PTR [rax+0x1],dh
   140008771:	adc    eax,0x74150008
   140008776:	or     DWORD PTR [rax],eax
   140008778:	adc    eax,0x15000864
   14000877d:	xor    al,0x7
   14000877f:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e098b7
   140008785:	xor    DWORD PTR [rip+0x1dc42300],ecx        # 0x15dc4aa8b
   14000878b:	add    BYTE PTR [rbx],ah
   14000878d:	je     0x1400087ab
   14000878f:	add    BYTE PTR [rbx],ah
   140008791:	sbb    eax,DWORD PTR fs:[rax]
   140008794:	and    esi,DWORD PTR [rdx+rbx*1]
   140008797:	add    BYTE PTR [rbx],ah
   140008799:	add    DWORD PTR [rsi],edx
   14000879b:	add    BYTE PTR [rax],bl
   14000879d:	loopne 0x1400087b5
   14000879f:	rcl    BYTE PTR [rax+rdx*2],1
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	rex.R
   1400087a5:	rex.WRXB add BYTE PTR [r8],r8b
   1400087a8:	movabs al,ds:0x400010401000000
   1400087b1:	(bad)  
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	or     DWORD PTR [rbx+rcx*1],ebx
   1400087b7:	add    BYTE PTR [rsp+rsi*2],bl
   1400087ba:	sbb    al,0x0
   1400087bc:	sbb    al,0x64
   1400087be:	sbb    eax,DWORD PTR [rax]
   1400087c0:	sbb    al,0x34
   1400087c2:	sbb    al,BYTE PTR [rax]
   1400087c4:	sbb    al,0x1
   1400087c6:	(bad)  
   1400087c7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e09bbd
   1400087cd:	rol    BYTE PTR [rax],0x0
   1400087d0:	add    BYTE PTR es:[r8],r8b
   1400087d4:	add    DWORD PTR [rax],eax
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	nop
   1400087d9:	cmp    al,0x0
   1400087db:	add    BYTE PTR [rsi-0x7bffffc2],al
   1400087e1:	push   rax
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	xchg   BYTE PTR [rsi],bh
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	add    DWORD PTR [rax],eax
   1400087ea:	add    BYTE PTR [rax],al
   1400087ec:	adc    DWORD PTR [rdx],ecx
   1400087ee:	add    al,0x0
   1400087f0:	or     dh,BYTE PTR [rsi+rax*1]
   1400087f3:	add    BYTE PTR [rdx],cl
   1400087f5:	xor    al,BYTE PTR [rsi]
   1400087f7:	jo     0x14000881f
   1400087f9:	add    BYTE PTR [r8],r8b
   1400087fc:	add    DWORD PTR [rax],eax
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	jne    0x140008841
   140008802:	add    BYTE PTR [rax],al
   140008804:	mov    edx,0xa800003f
   140008809:	push   rax
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	add    BYTE PTR [rax],al
   14000880e:	add    BYTE PTR [rax],al
   140008810:	add    DWORD PTR [rdx+rax*1],ecx
   140008813:	add    BYTE PTR [rcx+rax*1],cl
   140008816:	adc    DWORD PTR [rax],eax
   140008818:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204881f
   14000881e:	add    BYTE PTR [rax],al
   140008820:	push   rsi
   140008821:	add    BYTE PTR [r8],r8b
   140008824:	test   al,0x64
   140008826:	add    BYTE PTR [rax],al
   140008828:	(bad)  
   140008829:	(bad)  
   14000882a:	(bad)  
   14000882b:	inc    DWORD PTR [rax]
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    bh,bh
   140008831:	(bad)  
   140008832:	(bad)  
   140008833:	inc    DWORD PTR [rax]
	...
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rcx],al
   140008841:	add    BYTE PTR [rax],al
   140008843:	add    BYTE PTR [rcx],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rax+rcx*4+0x0],cl
   14000884b:	add    BYTE PTR [rax+0x0],al
	...
   140008856:	add    BYTE PTR [rax],al
   140008858:	leave  
   140008859:	push   rax
   14000885a:	add    BYTE PTR [rax],al
   14000885c:	cmp    BYTE PTR [rax],al
   14000885e:	add    BYTE PTR [rax],al
   140008860:	sbb    BYTE PTR [rdx+0x0],al
   140008863:	add    bh,bh
   140008865:	(bad)  
   140008866:	(bad)  
   140008867:	jmp    QWORD PTR [rip+0x42]        # 0x1400088af
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rbx],ch
   140008871:	rex.X add BYTE PTR [rax],al
   140008874:	(bad)  
   140008875:	(bad)  
   140008876:	(bad)  
   140008877:	dec    ecx
   140008879:	push   rax
   14000887a:	add    BYTE PTR [rax],al
   14000887c:	add    BYTE PTR [rax],al
   14000887e:	add    BYTE PTR [rax],al
   140008880:	(bad)  
   140008881:	push   rax
   140008882:	add    BYTE PTR [rax],al
   140008884:	add    DWORD PTR [rax],eax
   140008886:	add    BYTE PTR [rax],al
   140008888:	fist   DWORD PTR [rax+0x0]
   14000888b:	add    BYTE PTR [rax],al
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    BYTE PTR [rcx],bl
   140008891:	or     al,BYTE PTR [rdx]
   140008893:	add    BYTE PTR [rdx],cl
   140008895:	xor    al,BYTE PTR [rsi]
   140008897:	push   rax
   140008898:	push   rsi
   140008899:	add    BYTE PTR [r8],r8b
   14000889c:	test   al,0x64
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	or     DWORD PTR [rcx+rax*1],eax
   1400088a3:	add    BYTE PTR [rdx+riz*1],al
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	add    BYTE PTR es:[r8],r8b
   1400088ac:	add    DWORD PTR [rax],eax
   1400088ae:	add    BYTE PTR [rax],al
   1400088b0:	mov    esp,0xf2000042
   1400088b5:	rex.X add BYTE PTR [rax],al
   1400088b8:	add    DWORD PTR [rax],eax
   1400088ba:	add    BYTE PTR [rax],al
   1400088bc:	repnz rex.X add BYTE PTR [rax],al
   1400088c0:	or     DWORD PTR [rdx],ecx
   1400088c2:	add    al,0x0
   1400088c4:	or     dh,BYTE PTR [rsi+rax*1]
   1400088c7:	add    BYTE PTR [rdx],cl
   1400088c9:	xor    al,BYTE PTR [rsi]
   1400088cb:	jo     0x1400088f3
   1400088cd:	add    BYTE PTR [r8],r8b
   1400088d0:	add    DWORD PTR [rax],eax
   1400088d2:	add    BYTE PTR [rax],al
   1400088d4:	mov    ebp,0xf0000043
   1400088d9:	rex.XB add BYTE PTR [r8],al
   1400088dc:	lock push rax
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	lock rex.XB add BYTE PTR [r8],al
   1400088e4:	add    DWORD PTR [rsi],eax
   1400088e6:	add    al,BYTE PTR [rax]
   1400088e8:	(bad)  
   1400088e9:	xor    al,BYTE PTR [rdx]
   1400088eb:	push   rax
   1400088ec:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d88f6
   1400088f2:	or     DWORD PTR [rax],eax
   1400088f4:	or     eax,0x1500632
   1400088f9:	add    BYTE PTR [rax],al
   1400088fb:	add    BYTE PTR [rcx],bl
   1400088fd:	and    BYTE PTR [rip+0x14621800],al        # 0x15462a103
   140008903:	loopne 0x140008917
   140008905:	jo     0x140008918
   140008907:	(bad)  
   140008908:	adc    BYTE PTR [rax],dh
   14000890a:	add    BYTE PTR [rax],al
   14000890c:	push   rsi
   14000890d:	add    BYTE PTR [r8],r8b
   140008910:	shl    BYTE PTR [rax+rax*1+0x0],1
   140008914:	(bad)  
   140008915:	(bad)  
   140008916:	(bad)  
   140008917:	inc    DWORD PTR [rax]
   140008919:	add    BYTE PTR [rax],al
   14000891b:	add    bh,bh
   14000891d:	(bad)  
   14000891e:	(bad)  
   14000891f:	inc    DWORD PTR [rax]
   140008921:	add    BYTE PTR [rax],al
   140008923:	add    BYTE PTR [rcx],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rax],al
   140008929:	add    BYTE PTR [rax],al
   14000892b:	add    BYTE PTR [rcx],al
	...
   140008939:	add    BYTE PTR [rax],al
   14000893b:	add    BYTE PTR [rbx],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rcx],al
   140008941:	add    BYTE PTR [rax],al
   140008943:	add    BYTE PTR [rcx+rcx*4+0x0],bl
   140008947:	add    BYTE PTR [rdx],al
   140008949:	add    BYTE PTR [rax],al
   14000894b:	add    BYTE PTR [rdx],al
   14000894d:	add    BYTE PTR [rax],al
   14000894f:	add    BYTE PTR [rbx],al
   140008951:	add    BYTE PTR [rax],al
   140008953:	add    BYTE PTR [rcx],al
   140008955:	add    BYTE PTR [rax],al
   140008957:	add    BYTE PTR [rax-0x77],dh
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	add    BYTE PTR [rax],al
	...
   140008967:	add    BYTE PTR [rsi],dl
   140008969:	push   rcx
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	cmp    BYTE PTR [rax],al
   14000896e:	add    BYTE PTR [rax],al
   140008970:	add    BYTE PTR [rax],al
	...
   14000897b:	add    BYTE PTR [rdx+0x51],bl
   14000897e:	add    BYTE PTR [rax],al
   140008980:	cmp    BYTE PTR [rax],al
	...
   14000898e:	add    BYTE PTR [rax],al
   140008990:	cmp    BYTE PTR [rdi+0x0],al
   140008993:	add    bh,bh
   140008995:	(bad)  
   140008996:	(bad)  
   140008997:	jmp    QWORD PTR [rdi+0x47]
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    ah,cl
   1400089a1:	rex.RXB add BYTE PTR [r8],r8b
   1400089a4:	(bad)  
   1400089a5:	(bad)  
   1400089a6:	(bad)  
   1400089a7:	call   QWORD PTR [rsi]
   1400089a9:	push   rcx
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	add    BYTE PTR [rax],al
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	and    edx,DWORD PTR [rcx+0x0]
   1400089b3:	add    BYTE PTR [rcx],al
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rbx],ch
   1400089b9:	push   rcx
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	add    al,BYTE PTR [rax]
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	rex.WR push rcx
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	add    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	addr32 push rcx
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	add    eax,DWORD PTR [rax]
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	sbb    DWORD PTR [rdx],ecx
   1400089d2:	add    al,BYTE PTR [rax]
   1400089d4:	or     dh,BYTE PTR [rdx]
   1400089d6:	(bad)  
   1400089d7:	push   rax
   1400089d8:	push   rsi
   1400089d9:	add    BYTE PTR [r8],r8b
   1400089dc:	shl    BYTE PTR [rax+rax*1+0x0],1
   1400089e0:	add    DWORD PTR [rdx],ecx
   1400089e2:	add    al,BYTE PTR [rax]
   1400089e4:	or     dh,BYTE PTR [rdx]
   1400089e6:	(bad)  
   1400089e7:	xor    BYTE PTR [rcx],al
   1400089e9:	adc    eax,0x74150008
   1400089ee:	or     al,BYTE PTR [rax]
   1400089f0:	adc    eax,0x15000964
   1400089f5:	xor    al,0x8
   1400089f7:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e09b4f
   1400089fd:	(bad)  
   1400089fe:	add    al,BYTE PTR [rax]
   140008a00:	(bad)  
   140008a01:	push   rdx
   140008a02:	add    dh,BYTE PTR [rax]
   140008a04:	add    DWORD PTR [rdx],ecx
   140008a06:	add    al,0x0
   140008a08:	or     dh,BYTE PTR [rax+rcx*1]
   140008a0b:	add    BYTE PTR [rdx],cl
   140008a0d:	push   rdx
   140008a0e:	(bad)  
   140008a0f:	jo     0x140008a12
   140008a11:	add    al,0x1
   140008a13:	add    BYTE PTR [rdx+rdx*1],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	add    BYTE PTR [rax],al
   140008a1a:	add    BYTE PTR [rax],al
   140008a1c:	push   0x46
   140008a21:	add    BYTE PTR [rax],al
   140008a23:	add    BYTE PTR [rax],bh
   140008a25:	mov    al,BYTE PTR [rax]
	...
   140008a37:	add    BYTE PTR [rdx],al
   140008a39:	add    BYTE PTR [rax],al
   140008a3b:	add    BYTE PTR [rax-0x76],dl
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	js     0x1400089cc
	...
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	adc    BYTE PTR [rax],al
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	nop
   140008a55:	movabs al,ds:0xffff000000000000
   140008a5e:	(bad)  
   140008a5f:	inc    DWORD PTR [rax]
   140008a61:	add    BYTE PTR [rax],al
   140008a63:	add    BYTE PTR [rax],bl
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rax+0x45],ah
	...
   140008a79:	add    BYTE PTR [rax],al
   140008a7b:	add    BYTE PTR [rax+0xa0],bh
   140008a81:	add    BYTE PTR [rax],al
   140008a83:	add    bh,bh
   140008a85:	(bad)  
   140008a86:	(bad)  
   140008a87:	inc    DWORD PTR [rax]
   140008a89:	add    BYTE PTR [rax],al
   140008a8b:	add    BYTE PTR [rax],bl
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    dh,bh
   140008a91:	rex.WRX add BYTE PTR [rax],r8b
	...
   140008aa4:	fsub   DWORD PTR [rax+0x0]
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	(bad)  
   140008aad:	(bad)  
   140008aae:	(bad)  
   140008aaf:	inc    DWORD PTR [rax]
   140008ab1:	add    BYTE PTR [rax],al
   140008ab3:	add    BYTE PTR [rax],bl
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	add    BYTE PTR [rax],cl
   140008ab9:	rex.RX add BYTE PTR [rax],r8b
	...
   140008acc:	add    BYTE PTR [rsi+0x0],0x0
   140008ad0:	add    BYTE PTR [rax],al
   140008ad2:	add    BYTE PTR [rax],al
   140008ad4:	call   0x140008b63
	...
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	add    BYTE PTR [rbx],al
   140008ae9:	add    BYTE PTR [rax],al
   140008aeb:	add    BYTE PTR [rax],cl
   140008aed:	mov    eax,DWORD PTR [rax]
   140008aef:	add    BYTE PTR [rax+0x7800008a],ah
   140008af5:	mov    al,BYTE PTR [rax]
	...
   140008b0b:	add    BYTE PTR [rax],al
   140008b0d:	movabs eax,ds:0xffff000000000000
   140008b16:	(bad)  
   140008b17:	inc    DWORD PTR [rax]
   140008b19:	add    BYTE PTR [rax],al
   140008b1b:	add    BYTE PTR [rax],bl
   140008b1d:	add    BYTE PTR [rax],al
   140008b1f:	add    BYTE PTR [rax],cl
   140008b21:	rex.RX add BYTE PTR [rax],r8b
	...
   140008b34:	add    BYTE PTR [rsi+0x0],0x0
   140008b38:	add    BYTE PTR [rax],al
   140008b3a:	add    BYTE PTR [rax],al
   140008b3c:	push   rax
   140008b3d:	mov    eax,DWORD PTR [rax]
	...
   140008b4f:	add    BYTE PTR [rbx],al
   140008b51:	add    BYTE PTR [rax],al
   140008b53:	add    BYTE PTR [rax-0x75],dh
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	movabs al,ds:0x8a7800008a
	...
   140008b71:	add    BYTE PTR [rax],al
   140008b73:	add    BYTE PTR [rax],ch
   140008b75:	movabs eax,ds:0xffff000000000000
   140008b7e:	(bad)  
   140008b7f:	inc    DWORD PTR [rax]
   140008b81:	add    BYTE PTR [rax],al
   140008b83:	add    BYTE PTR [rax],bl
   140008b85:	add    BYTE PTR [rax],al
   140008b87:	add    BYTE PTR [rax],cl
   140008b89:	rex.RX add BYTE PTR [rax],r8b
	...
   140008b98:	add    DWORD PTR [rax],eax
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	test   al,0x8b
	...
   140008baa:	add    BYTE PTR [rax],al
   140008bac:	push   rax
   140008bad:	movabs eax,ds:0xffff000000000000
   140008bb6:	(bad)  
   140008bb7:	inc    DWORD PTR [rax]
   140008bb9:	add    BYTE PTR [rax],al
   140008bbb:	add    BYTE PTR [rax+0x78000000],ah
   140008bc1:	and    DWORD PTR [rax],eax
	...
   140008bd3:	add    BYTE PTR [rcx+riz*1],ch
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	add    BYTE PTR [rax],al
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	cwde   
   140008bdd:	mov    eax,DWORD PTR [rax]
	...
   140008bef:	add    BYTE PTR [rax-0x73],cl
	...
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	enter  0x90,0x0
   140008c00:	add    BYTE PTR [rax+0x0],ah
   140008c03:	add    BYTE PTR [rax+0x8d],al
   140008c09:	add    BYTE PTR [rax],al
   140008c0b:	add    BYTE PTR [rax],al
   140008c0d:	add    BYTE PTR [rax],al
   140008c0f:	add    BYTE PTR [rdx-0x6e],bl
   140008c12:	add    BYTE PTR [rax],al
   140008c14:	cmp    BYTE PTR [rax+0x0],ah
   140008c17:	add    BYTE PTR [rax],ch
   140008c19:	pop    QWORD PTR [rax]
	...
   140008c23:	add    BYTE PTR [rsi-0x6d],dl
   140008c26:	add    BYTE PTR [rax],al
   140008c28:	loopne 0x140008c8b
   140008c2a:	add    BYTE PTR [rax],al
   140008c2c:	enter  0x8e,0x0
	...
   140008c38:	in     al,0x93
   140008c3a:	add    BYTE PTR [rax],al
   140008c3c:	and    BYTE PTR [rcx+0x0],0x0
   140008c40:	push   rax
   140008c41:	mov    es,WORD PTR [rax]
	...
   140008c4b:	add    BYTE PTR [rbp+rdx*4+0x0],dl
   140008c4f:	add    BYTE PTR [rax],cl
   140008c51:	(bad)  
   140008c52:	add    BYTE PTR [rax],al
   140008c54:	add    BYTE PTR [rdi+0x0],cl
   140008c5a:	add    BYTE PTR [rax],al
   140008c5c:	add    BYTE PTR [rax],al
   140008c5e:	add    BYTE PTR [rax],al
   140008c60:	je     0x140008bf7
   140008c62:	add    BYTE PTR [rax],al
   140008c64:	mov    eax,0x28000061
   140008c69:	mov    es,WORD PTR [rax]
	...
   140008c73:	add    BYTE PTR [rsi-0x1fffff6b],dl
   140008c79:	(bad)  
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	fmul   DWORD PTR [rsi+0x0]
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	add    BYTE PTR [rax],al
   140008c86:	add    BYTE PTR [rax],al
   140008c88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008c89:	xchg   ebp,eax
   140008c8a:	add    BYTE PTR [rax],al
   140008c8c:	nop
   140008c8d:	(bad)  
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	js     0x140008c20
	...
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	(bad)  
   140008c9d:	xchg   ebp,eax
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	xor    BYTE PTR [rcx+0x0],ah
   140008ca3:	add    BYTE PTR [rax+0x8e],ch
   140008ca9:	add    BYTE PTR [rax],al
   140008cab:	add    BYTE PTR [rax],al
   140008cad:	add    BYTE PTR [rax],al
   140008caf:	add    al,dh
   140008cb1:	xchg   ebp,eax
   140008cb2:	add    BYTE PTR [rax],al
   140008cb4:	(bad)  
   140008cb5:	(bad)  
   140008cb6:	add    BYTE PTR [rax],al
   140008cb8:	(bad)  
   140008cb9:	mov    es,WORD PTR [rax]
	...
   140008cc3:	add    BYTE PTR [rsi],dl
   140008cc5:	xchg   esi,eax
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	sbb    BYTE PTR [rcx+0x0],ah
   140008ccb:	add    BYTE PTR [rax+0x8e],bl
   140008cd1:	add    BYTE PTR [rax],al
   140008cd3:	add    BYTE PTR [rax],al
   140008cd5:	add    BYTE PTR [rax],al
   140008cd7:	add    BYTE PTR [rax-0x6a],al
   140008cda:	add    BYTE PTR [rax],al
   140008cdc:	push   rax
   140008cdd:	(bad)  
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	call   0x140008d73
   140008ce5:	add    BYTE PTR [rax],al
   140008ce7:	add    BYTE PTR [rax],al
   140008ce9:	add    BYTE PTR [rax],al
   140008ceb:	add    BYTE PTR [rsi+rdx*4+0x0],ah
   140008cef:	add    BYTE PTR [rax+0x18000061],ah
   140008cf5:	pop    QWORD PTR [rax]
	...
   140008cff:	add    BYTE PTR [rsi+rdx*4+0x61d00000],dl
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	rex.W nop
	...
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	mov    esi,0x96
   140008d19:	movsxd eax,DWORD PTR [rax]
   140008d1b:	add    BYTE PTR [rax],bh
   140008d1d:	mov    es,WORD PTR [rax]
	...
   140008d27:	add    al,dh
   140008d29:	xchg   esi,eax
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	lock (bad) 
	...
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	outs   dx,BYTE PTR ds:[rsi]
   140008d49:	nop
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	adc    BYTE PTR [rax+0x0],0x0
   140008d57:	add    BYTE PTR [rdx+0x90],dl
   140008d5d:	add    BYTE PTR [rax],al
   140008d5f:	add    BYTE PTR [rax+0x90],ch
   140008d65:	add    BYTE PTR [rax],al
   140008d67:	add    BYTE PTR [rax+0x90],bh
   140008d6d:	add    BYTE PTR [rax],al
   140008d6f:	add    BYTE PTR [rax-0x70],bl
	...
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	(bad)  
   140008d81:	nop
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	add    BYTE PTR [rax],al
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	call   0x140008e1d
   140008d8d:	add    BYTE PTR [rax],al
   140008d8f:	add    ah,bh
   140008d91:	nop
   140008d92:	add    BYTE PTR [rax],al
   140008d94:	add    BYTE PTR [rax],al
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	(bad)  
   140008d99:	xchg   ecx,eax
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	add    BYTE PTR [rax],al
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	sub    BYTE PTR [rcx+0x0],dl
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	cmp    al,0x91
   140008daa:	add    BYTE PTR [rax],al
   140008dac:	add    BYTE PTR [rax],al
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	push   rdx
   140008db1:	xchg   ecx,eax
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	add    BYTE PTR [rax],al
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	push   0x91
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    BYTE PTR [rcx+rdx*4+0x0],bh
   140008dc3:	add    BYTE PTR [rax],al
   140008dc5:	add    BYTE PTR [rax],al
   140008dc7:	add    BYTE PTR [rsi+0x91],dl
   140008dcd:	add    BYTE PTR [rax],al
   140008dcf:	add    BYTE PTR [rcx+rdx*4+0x0],ah
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	mov    dh,0x91
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	add    BYTE PTR [rax],al
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	(bad)  
   140008de1:	xchg   ecx,eax
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	(bad)  
   140008de9:	xchg   ecx,eax
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	call   0x140008e86
   140008df5:	add    BYTE PTR [rax],al
   140008df7:	add    dh,bh
   140008df9:	xchg   ecx,eax
   140008dfa:	add    BYTE PTR [rax],al
   140008dfc:	add    BYTE PTR [rax],al
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	adc    al,0x92
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	and    dl,BYTE PTR [rdx+0x0]
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	cs xchg edx,eax
   140008e12:	add    BYTE PTR [rax],al
   140008e14:	add    BYTE PTR [rax],al
   140008e16:	add    BYTE PTR [rax],al
   140008e18:	xchg   rdx,rax
	...
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	(bad)  
   140008e29:	add    BYTE PTR [rax],al
   140008e2b:	add    BYTE PTR [rax],al
   140008e2d:	add    BYTE PTR [rax],al
   140008e2f:	add    BYTE PTR [rax],0x0
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	add    BYTE PTR [rax],al
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	enter  0x96,0x0
   140008e3c:	add    BYTE PTR [rax],al
   140008e3e:	add    BYTE PTR [rax],al
   140008e40:	ficom  DWORD PTR [rsi+0x0]
	...
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	(bad)  
   140008e51:	xchg   esp,eax
	...
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	lods   al,BYTE PTR ds:[rsi]
   140008e61:	xchg   esp,eax
   140008e62:	add    BYTE PTR [rax],al
   140008e64:	add    BYTE PTR [rax],al
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	enter  0x94,0x0
	...
   140008e78:	pop    rax
   140008e79:	xchg   esp,eax
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	add    BYTE PTR [rax],al
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	out    0x94,al
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	adc    al,0x95
	...
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	cli    
   140008e99:	xchg   esp,eax
	...
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	cwde   
   140008ea9:	xchg   esp,eax
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	add    BYTE PTR [rax],al
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	jle    0x140008e46
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    BYTE PTR [rax],al
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	push   0xffffffffffffff94
	...
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	(bad)  
   140008ec9:	xchg   ebx,eax
	...
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	push   rax
   140008ed9:	xchg   esp,eax
	...
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	sub    dl,BYTE PTR [rbp+0x0]
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	rex.R xchg ebp,eax
	...
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	cs xchg esp,eax
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	add    BYTE PTR [rax],al
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	ds xchg esp,eax
	...
   140008f16:	add    BYTE PTR [rax],al
   140008f18:	mov    BYTE PTR [rsi+0x0],dl
	...
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	mov    eax,0x93
   140008f2d:	add    BYTE PTR [rax],al
   140008f2f:	add    BYTE PTR [rdx+rdx*4+0x0],dl
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	movabs al,ds:0x9600000000000093
   140008f41:	xchg   ebx,eax
   140008f42:	add    BYTE PTR [rax],al
   140008f44:	add    BYTE PTR [rax],al
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	mov    BYTE PTR [rbx+0x0],dl
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	jle    0x140008ee5
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	jbe    0x140008eed
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	add    BYTE PTR [rax],al
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	(bad)  
   140008f62:	add    BYTE PTR [rax],al
   140008f64:	add    BYTE PTR [rax],al
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	rex.WX xchg rbx,rax
   140008f6a:	add    BYTE PTR [rax],al
   140008f6c:	add    BYTE PTR [rax],al
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	rex xchg ebx,eax
   140008f72:	add    BYTE PTR [rax],al
   140008f74:	add    BYTE PTR [rax],al
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	jp     0x140008f0c
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	add    BYTE PTR [rax],al
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	(bad)  
   140008f81:	xchg   ebx,eax
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	add    BYTE PTR [rax],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	adc    dl,BYTE PTR [rbx+0x0]
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	(bad)  
   140008f91:	xchg   edx,eax
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    BYTE PTR [rax],al
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	hlt    
   140008f99:	xchg   edx,eax
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	in     al,dx
   140008fa1:	xchg   edx,eax
   140008fa2:	add    BYTE PTR [rax],al
   140008fa4:	add    BYTE PTR [rax],al
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	in     al,0x92
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	add    BYTE PTR [rax],al
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	rcl    BYTE PTR [rdx+0x0],cl
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	rcl    BYTE PTR [rdx+0x0],0x0
   140008fbf:	add    BYTE PTR [rdx+0x92],dh
   140008fc5:	add    BYTE PTR [rax],al
   140008fc7:	add    BYTE PTR [rdx+rdx*4+0x0],ah
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	mov    BYTE PTR [rdx+0x0],dl
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	mov    esp,0x97
   140008fdd:	add    BYTE PTR [rax],al
   140008fdf:	add    BYTE PTR [rsi+0x97],ah
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    BYTE PTR [rax-0x6e],dh
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	add    BYTE PTR [rax],al
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	push   0x92
   140008ff5:	add    BYTE PTR [rax],al
   140008ff7:	add    BYTE PTR [rsi],dh
   140008ff9:	xchg   ebx,eax
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	cld    
   140009001:	xchg   esi,eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	or     BYTE PTR [rdi+0x0],dl
   14000900e:	add    BYTE PTR [rax],al
   140009010:	adc    dl,BYTE PTR [rdi+0x0]
   140009016:	add    BYTE PTR [rax],al
   140009018:	xor    dl,BYTE PTR [rdi+0x0]
   14000901e:	add    BYTE PTR [rax],al
   140009020:	push   rdx
   140009021:	xchg   edi,eax
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	jo     0x140008fc1
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    BYTE PTR [rax],al
   140009030:	mov    BYTE PTR [rdi+0x0],dl
   140009036:	add    BYTE PTR [rax],al
   140009038:	(bad)  
   140009039:	xchg   edi,eax
	...
   140009046:	add    BYTE PTR [rax],al
   140009048:	movabs ds:0x96,al
   140009051:	add    BYTE PTR [rax],al
   140009053:	add    BYTE PTR [rax],al
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax],ch
   140009059:	add    DWORD PTR [rbp+0x76],eax
   14000905c:	outs   dx,BYTE PTR gs:[rsi]
   14000905e:	je     0x1400090b7
   140009060:	jb     0x1400090cb
   140009062:	je     0x1400090c9
   140009064:	push   rsp
   140009065:	jb     0x1400090c8
   140009067:	outs   dx,BYTE PTR ds:[rsi]
   140009068:	jae    0x1400090d0
   14000906a:	gs jb  0x14000906d
   14000906d:	add    BYTE PTR [rdx],ah
   14000906f:	add    DWORD PTR [rbp+0x76],eax
   140009072:	outs   dx,BYTE PTR gs:[rsi]
   140009074:	je     0x1400090cb
   140009076:	outs   dx,BYTE PTR ds:[rsi]
   140009077:	jb     0x1400090de
   140009079:	imul   esi,DWORD PTR [ebx+0x74],0xa0007265
   140009081:	add    dl,BYTE PTR [rdx+0x65]
   140009084:	addr32 push rbx
   140009086:	gs je  0x1400090d4
   140009089:	gs jns 0x1400090e2
   14000908c:	(bad)  
   14000908d:	ins    BYTE PTR es:[rdi],dx
   14000908e:	jne    0x1400090f5
   140009090:	push   rdi
   140009091:	add    BYTE PTR [rcx],ah
   140009093:	add    DWORD PTR [rbp+0x76],eax
   140009096:	outs   dx,BYTE PTR gs:[rsi]
   140009098:	je     0x1400090ed
   14000909a:	gs je  0x1400090e6
   14000909d:	outs   dx,BYTE PTR ds:[rsi]
   14000909e:	outs   dx,WORD PTR ds:[rsi]
   1400090a0:	jb     0x14000910f
   1400090a2:	(bad)  
   1400090a3:	je     0x14000910e
   1400090a5:	outs   dx,DWORD PTR ds:[rsi]
   1400090a6:	outs   dx,BYTE PTR ds:[rsi]
   1400090a7:	add    BYTE PTR [rbx+0x2],bh
   1400090aa:	push   rdx
   1400090ab:	gs addr32 rex.RXB
   1400090ae:	gs je  0x140009107
   1400090b1:	(bad)  
   1400090b2:	ins    BYTE PTR es:[rdi],dx
   1400090b3:	jne    0x14000911a
   1400090b5:	push   rdi
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	and    BYTE PTR [rcx],al
   1400090ba:	rex.RB jbe 0x140009122
   1400090bd:	outs   dx,BYTE PTR ds:[rsi]
   1400090be:	je     0x140009112
   1400090c0:	imul   esi,DWORD PTR gs:[ebx+0x74],0x41007265
   1400090c9:	rex.R push rsi
   1400090cb:	push   r8
   1400090cd:	xor    rsi,QWORD PTR [r10]
   1400090d0:	cs fs ins BYTE PTR es:[rdi],dx
   1400090d3:	ins    BYTE PTR es:[rdi],dx
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	rol    BYTE PTR [rcx],1
   1400090d8:	rex.RXB
   1400090d9:	gs je  0x14000911f
   1400090dc:	outs   dx,DWORD PTR ds:[rsi]
   1400090dd:	ins    DWORD PTR es:[rdi],dx
   1400090de:	ins    DWORD PTR es:[rdi],dx
   1400090df:	(bad)  
   1400090e0:	outs   dx,BYTE PTR ds:[rsi]
   1400090e1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x34f0057
   1400090ea:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400090ec:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x6f436563
   1400090f4:	ins    DWORD PTR es:[rdi],dx
   1400090f5:	jo     0x140009163
   1400090f7:	gs je  0x14000915f
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	scas   al,BYTE PTR es:[rdi]
   1400090fd:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140009101:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000910a:	js     0x140009163
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	rex.WRX add r9,QWORD PTR [rcx+0x6e]
   140009112:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x65426563
   14000911a:	imul   ebp,DWORD PTR [esi+0x49],0x6974696e
   140009122:	(bad)  
   140009123:	ins    BYTE PTR es:[rdi],dx
   140009124:	imul   edi,DWORD PTR [rdx+0x65],0x47021000
   14000912b:	gs je  0x140009171
   14000912e:	jne    0x1400091a2
   140009130:	jb     0x140009197
   140009132:	outs   dx,BYTE PTR ds:[rsi]
   140009133:	je     0x140009185
   140009135:	jb     0x1400091a6
   140009137:	movsxd esp,DWORD PTR [rbp+0x73]
   14000913a:	jae    0x14000913c
   14000913c:	ins    DWORD PTR es:[rdi],dx
   14000913d:	add    al,BYTE PTR [rdi+0x65]
   140009140:	je     0x14000918f
   140009142:	outs   dx,DWORD PTR ds:[rsi]
   140009143:	fs jne 0x1400091b2
   140009146:	gs rex.W (bad) 
   140009149:	outs   dx,BYTE PTR ds:[rsi]
   14000914a:	fs ins BYTE PTR es:[rdi],dx
   14000914c:	gs rex.RB js 0x1400091a7
   140009150:	add    BYTE PTR [rax],al
   140009152:	add    al,BYTE PTR [rdi+rcx*2]
   140009155:	jne    0x1400091cb
   140009157:	jo     0x1400091ce
   140009159:	je     0x14000919f
   14000915b:	gs (bad) 
   14000915d:	jne    0x1400091c6
   14000915f:	push   rbx
   140009160:	je     0x1400091d4
   140009162:	imul   ebp,DWORD PTR [rsi+0x67],0x6e000057
   140009169:	add    al,BYTE PTR [rdi+0x65]
   14000916c:	je     0x1400091bb
   14000916e:	outs   dx,DWORD PTR ds:[rsi]
   14000916f:	fs jne 0x1400091de
   140009172:	gs rex.W (bad) 
   140009175:	outs   dx,BYTE PTR ds:[rsi]
   140009176:	fs ins BYTE PTR es:[rdi],dx
   140009178:	gs push rdi
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	pop    QWORD PTR [rbx]
   14000917e:	rex.WXB xor rsi,QWORD PTR [r10]
   140009181:	rex.RXB
   140009182:	gs je  0x1400091d2
   140009185:	outs   dx,DWORD PTR ds:[rsi]
   140009186:	fs jne 0x1400091f5
   140009189:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x45656d61
   140009193:	js     0x1400091ec
   140009195:	add    dh,dh
   140009197:	add    ecx,DWORD PTR [rdi+0x70]
   14000919a:	outs   dx,BYTE PTR gs:[rsi]
   14000919c:	push   rax
   14000919d:	jb     0x14000920e
   14000919f:	movsxd esp,DWORD PTR [rbp+0x73]
   1400091a2:	jae    0x1400091a4
   1400091a4:	movabs al,ds:0x4d74616d726f4601
   1400091ad:	gs jae 0x140009223
   1400091b0:	(bad)  
   1400091b1:	addr32 gs push rdi
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	push   rdi
   1400091b7:	add    al,BYTE PTR [rdi+0x65]
   1400091ba:	je     0x140009208
   1400091bc:	(bad)  
   1400091bd:	jae    0x140009233
   1400091bf:	rex.RB jb 0x140009234
   1400091c2:	outs   dx,DWORD PTR ds:[rsi]
   1400091c3:	jb     0x1400091c5
   1400091c5:	add    BYTE PTR [rbx],ah
   1400091c7:	add    eax,0x4c746553
   1400091cc:	(bad)  
   1400091cd:	jae    0x140009243
   1400091cf:	rex.RB jb 0x140009244
   1400091d2:	outs   dx,DWORD PTR ds:[rsi]
   1400091d3:	jb     0x1400091d5
   1400091d5:	add    BYTE PTR [rbp+0x74654702],ah
   1400091db:	push   rax
   1400091dc:	jb     0x14000924d
   1400091de:	movsxd eax,DWORD PTR [rcx+0x64]
   1400091e1:	fs jb  0x140009249
   1400091e4:	jae    0x140009259
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	imul   eax,DWORD PTR [rdx],0x4d746547
   1400091ee:	outs   dx,DWORD PTR ds:[rsi]
   1400091ef:	fs jne 0x14000925e
   1400091f2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	adc    eax,0x74654702
   140009203:	rex.XB jne 0x140009278
   140009206:	jb     0x14000926d
   140009208:	outs   dx,BYTE PTR ds:[rsi]
   140009209:	je     0x14000925f
   14000920b:	push   0x64616572
   140009210:	rex.WB
   140009211:	add    BYTE PTR fs:[rax],al
   140009214:	jge    0x140009216
   140009216:	rex.XB ins BYTE PTR es:[rdi],dx
   140009218:	outs   dx,DWORD PTR ds:[rsi]
   140009219:	jae    0x140009280
   14000921b:	rex.W (bad) 
   14000921d:	outs   dx,BYTE PTR ds:[rsi]
   14000921e:	fs ins BYTE PTR es:[rdi],dx
   140009220:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   140009227:	(bad)  
   140009228:	ins    BYTE PTR es:[rdi],dx
   140009229:	rex.RX jb 0x140009291
   14000922c:	add    BYTE PTR gs:[rbx+rax*1+0x4532334b],al
   140009234:	outs   dx,BYTE PTR ds:[rsi]
   140009235:	jne    0x1400092a4
   140009237:	push   rax
   140009238:	jb     0x1400092a9
   14000923a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000923d:	jae    0x14000928c
   14000923f:	outs   dx,DWORD PTR ds:[rsi]
   140009240:	fs jne 0x1400092af
   140009243:	gs jae 0x14000928b
   140009246:	js     0x140009248
   140009248:	inc    BYTE PTR [rdx]
   14000924a:	rex.RXB
   14000924b:	gs je  0x1400092a2
   14000924e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009255:	je     0x14000928d
   140009257:	xor    al,0x0
   140009259:	add    BYTE PTR [rbx+0x45],cl
   14000925c:	push   rdx
   14000925d:	rex.WRX
   14000925e:	rex.RB
   14000925f:	xor    r14,QWORD PTR [rdx]
   140009262:	cs fs ins BYTE PTR es:[rdi],dx
   140009265:	ins    BYTE PTR es:[rdi],dx
   140009266:	add    BYTE PTR [rax],al
   140009268:	rex.WR add al,0x66
   14000926b:	jb     0x1400092d2
   14000926d:	add    BYTE PTR gs:[rax],al
   140009270:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140009277:	movsxd eax,DWORD PTR [rax]
   140009279:	add    BYTE PTR [rcx+0x3],ch
   14000927c:	pop    rdi
   14000927d:	jbe    0x1400092f2
   14000927f:	outs   dx,BYTE PTR ds:[rsi]
   140009280:	ja     0x1400092f2
   140009282:	jb     0x1400092ed
   140009284:	outs   dx,BYTE PTR ds:[rsi]
   140009285:	je     0x1400092ed
   140009287:	add    BYTE PTR [rsi+0x75705f02],bl
   14000928d:	jb     0x1400092f4
   14000928f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009292:	ins    BYTE PTR es:[rdi],dx
   140009293:	add    BYTE PTR [rax+rax*1],dl
   140009296:	(bad)  
   140009297:	(bad)  
   140009298:	xor    eax,DWORD PTR [rax+0x59]
   14000929b:	pop    r8
   14000929d:	push   rax
   14000929e:	rex.RB
   14000929f:	pop    r8
   1400092a1:	rex pop rdx
   1400092a3:	add    BYTE PTR [rbp+0x0],dl
   1400092a6:	pop    rdi
   1400092a7:	pop    rax
   1400092a8:	movsxd esi,DWORD PTR [rax+0x74]
   1400092ab:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400092b4:	pop    rdi
   1400092b5:	(bad)  
   1400092b6:	ins    DWORD PTR es:[rdi],dx
   1400092b7:	jae    0x140009320
   1400092b9:	pop    rdi
   1400092ba:	gs js  0x140009326
   1400092bd:	je     0x1400092bf
   1400092bf:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400092c5:	addr32 gs je 0x140009336
   1400092c9:	(bad)  
   1400092ca:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400092d1:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400092d7:	gs je  0x140009339
   1400092da:	(bad)  
   1400092db:	jo     0x14000934d
   1400092dd:	pop    rdi
   1400092de:	je     0x140009359
   1400092e0:	jo     0x140009347
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	xor    al,BYTE PTR [riz*2+0x746978]
   1400092eb:	add    BYTE PTR [rsi],cl
   1400092ed:	add    DWORD PTR [rdi+0x65],ebx
   1400092f0:	js     0x14000935b
   1400092f2:	je     0x1400092f4
   1400092f4:	rol    DWORD PTR [rax],0x5f
   1400092f7:	movsxd esp,DWORD PTR [rbp+0x78]
   1400092fa:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140009302:	jae    0x140009369
   140009304:	je     0x14000937b
   140009306:	jae    0x14000936d
   140009308:	jb     0x140009377
   14000930a:	(bad)  
   14000930b:	je     0x140009375
   14000930d:	gs jb  0x140009382
   140009310:	add    BYTE PTR [rax],al
   140009312:	jge    0x140009315
   140009314:	pop    rdi
   140009315:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000931c:	ins    DWORD PTR es:[rdi],dx
   14000931d:	add    BYTE PTR [rdi+0x0],dl
   140009320:	pop    rdi
   140009321:	pop    rdi
   140009322:	rex.XB pop r15
   140009324:	jae    0x140009396
   140009326:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000932a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140009331:	ins    BYTE PTR es:[rdi],dx
   140009332:	gs jb  0x140009335
   140009335:	add    BYTE PTR [rdx+0x63775f03],al
   14000933b:	ins    DWORD PTR es:[rdi],dx
   14000933c:	fs ins BYTE PTR es:[rdi],dx
   14000933e:	outs   dx,BYTE PTR ds:[rsi]
   14000933f:	add    BYTE PTR [rdi],ah
   140009341:	add    DWORD PTR [rdi+0x66],ebx
   140009344:	ins    DWORD PTR es:[rdi],dx
   140009345:	outs   dx,DWORD PTR ds:[rsi]
   140009346:	fs add BYTE PTR gs:[rax],al
   14000934a:	rol    BYTE PTR [rax],cl
   14000934c:	pop    rdi
   14000934d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009350:	ins    DWORD PTR es:[rdi],dx
   140009351:	outs   dx,DWORD PTR ds:[rsi]
   140009352:	fs add BYTE PTR gs:[rax],al
   140009356:	ins    DWORD PTR es:[rdi],dx
   140009357:	jae    0x1400093cf
   140009359:	movsxd esi,DWORD PTR [rdx+0x74]
   14000935c:	cs fs ins BYTE PTR es:[rdi],dx
   14000935f:	ins    BYTE PTR es:[rdi],dx
   140009360:	add    BYTE PTR [rax],al
   140009362:	(bad)  
   140009363:	add    BYTE PTR [rdi],bh
   140009365:	je     0x1400093cc
   140009367:	jb     0x1400093d6
   140009369:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140009370:	pop    rcx
   140009371:	pop    r8
   140009373:	pop    rax
   140009374:	pop    rdx
   140009375:	add    dh,ah
   140009377:	add    DWORD PTR [rdi+0x6c],ebx
   14000937a:	outs   dx,DWORD PTR ds:[rsi]
   14000937b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000937e:	add    ebx,DWORD PTR [r15+0x75]
   140009382:	outs   dx,BYTE PTR ds:[rsi]
   140009383:	ins    BYTE PTR es:[rdi],dx
   140009384:	outs   dx,DWORD PTR ds:[rsi]
   140009385:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009388:	jnp    0x14000938a
   14000938a:	pop    rdi
   14000938b:	pop    rdi
   14000938c:	fs ins BYTE PTR es:[rdi],dx
   14000938e:	ins    BYTE PTR es:[rdi],dx
   14000938f:	outs   dx,DWORD PTR ds:[rsi]
   140009390:	outs   dx,BYTE PTR ds:[rsi]
   140009391:	gs js  0x1400093fd
   140009394:	je     0x140009396
   140009396:	nop
   140009397:	add    bl,BYTE PTR [rdi+0x6f]
   14000939a:	outs   dx,BYTE PTR ds:[rsi]
   14000939b:	gs js  0x140009407
   14000939e:	je     0x1400093a0
   1400093a0:	adc    al,BYTE PTR [rax]
   1400093a2:	(bad)  
   1400093a3:	(bad)  
   1400093a4:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400093a8:	gs pop rdi
   1400093aa:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400093b1:	rex.RB
   1400093b2:	rex.B
   1400093b3:	rex.B
   1400093b4:	rex pop rax
   1400093b6:	pop    rdx
   1400093b7:	add    BYTE PTR [rbx+0x0],bl
   1400093ba:	pop    rdi
   1400093bb:	pop    rdi
   1400093bc:	rex.XB js 0x140009437
   1400093bf:	rex.RX jb 0x140009423
   1400093c2:	ins    DWORD PTR es:[rdi],dx
   1400093c3:	gs rex.W (bad) 
   1400093c6:	outs   dx,BYTE PTR ds:[rsi]
   1400093c7:	fs ins BYTE PTR es:[rdi],dx
   1400093c9:	gs jb  0x1400093ff
   1400093cc:	add    BYTE PTR [rax],al
   1400093ce:	(bad)  
   1400093cf:	add    BYTE PTR [rax+0x61],dl
   1400093d2:	je     0x14000943c
   1400093d4:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x65747845
   1400093dc:	outs   dx,BYTE PTR ds:[rsi]
   1400093dd:	jae    0x140009448
   1400093df:	outs   dx,DWORD PTR ds:[rsi]
   1400093e0:	outs   dx,BYTE PTR ds:[rsi]
   1400093e1:	push   rdi
   1400093e2:	add    BYTE PTR [rax],al
   1400093e4:	(bad)  
   1400093e5:	jo     0x140009450
   1400093e7:	sub    eax,0x772d736d
   1400093ec:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400093f3:	sub    eax,0x776c6873
   1400093f8:	(bad)  
   1400093f9:	jo     0x140009464
   1400093fb:	sub    eax,0x6167656c
   140009400:	movsxd edi,DWORD PTR [rcx+0x2d]
   140009403:	ins    BYTE PTR es:[rdi],dx
   140009404:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c13b
   14000940a:	fs ins BYTE PTR es:[rdi],dx
   14000940c:	ins    BYTE PTR es:[rdi],dx
   14000940d:	add    BYTE PTR [rsi],al
   14000940f:	add    BYTE PTR [rbx+0x6f],al
   140009412:	rex.XB jb 0x14000947a
   140009415:	(bad)  
   140009416:	je     0x14000947d
   140009418:	rex.RX jb 0x140009480
   14000941b:	gs push rsp
   14000941d:	push   0x64616572
   140009422:	gs fs rex.WRB (bad) 
   140009426:	jb     0x14000949b
   140009428:	push   0x72656c61
   14000942d:	add    BYTE PTR [rbx],al
   14000942f:	add    BYTE PTR [rdx+0x6f],dl
   140009432:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009434:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000943c:	add    BYTE PTR [rax],al
   14000943e:	(bad)  
   14000943f:	add    BYTE PTR [rdx+0x6f],dl
   140009442:	push   rbp
   140009443:	outs   dx,BYTE PTR ds:[rsi]
   140009444:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000944b:	imul   edi,DWORD PTR [rdx+0x65],0x2d0000
   140009452:	push   rbx
   140009453:	ins    BYTE PTR es:[rdi],dx
   140009454:	gs gs jo 0x140009458
   140009458:	and    BYTE PTR [rax],al
   14000945a:	rex.RXB
   14000945b:	gs je  0x1400094b1
   14000945e:	je     0x1400094c1
   140009460:	jb     0x1400094d6
   140009462:	jne    0x1400094d4
   140009464:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009466:	outs   dx,WORD PTR ds:[rsi]
   140009468:	push   rdi
   140009469:	add    BYTE PTR [rdx],al
   14000946b:	add    BYTE PTR [rdx+0x74],dl
   14000946e:	ins    BYTE PTR es:[rdi],dx
   14000946f:	rex.XB (bad) 
   140009471:	jo     0x1400094e7
   140009473:	jne    0x1400094e7
   140009475:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009478:	outs   dx,BYTE PTR ds:[rsi]
   140009479:	je     0x1400094e0
   14000947b:	js     0x1400094f1
   14000947d:	add    BYTE PTR [rcx],cl
   14000947f:	add    BYTE PTR [rdx+0x74],dl
   140009482:	ins    BYTE PTR es:[rdi],dx
   140009483:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009485:	outs   dx,DWORD PTR ds:[rsi]
   140009486:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000948a:	jne    0x1400094fa
   14000948c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009490:	outs   dx,BYTE PTR ds:[rsi]
   140009491:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009493:	je     0x140009507
   140009495:	jns    0x140009497
   140009497:	add    BYTE PTR [rdi],cl
   140009499:	add    BYTE PTR [rdx+0x74],dl
   14000949c:	ins    BYTE PTR es:[rdi],dx
   14000949d:	push   rsi
   14000949e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400094a5:	outs   dx,BYTE PTR ds:[rsi]
   1400094a6:	ja     0x140009511
   1400094a8:	outs   dx,BYTE PTR ds:[rsi]
   1400094a9:	add    BYTE PTR fs:[rax],al
   1400094ac:	adc    DWORD PTR [rax],eax
   1400094ae:	push   rbp
   1400094af:	outs   dx,BYTE PTR ds:[rsi]
   1400094b0:	push   0x6c646e61
   1400094b5:	gs fs rex.RB js 0x14000951d
   1400094ba:	gs jo  0x140009531
   1400094bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400094c4:	gs jb  0x1400094c7
   1400094c7:	add    BYTE PTR [rdi],cl
   1400094c9:	add    BYTE PTR [rbx+0x65],dl
   1400094cc:	je     0x140009523
   1400094ce:	outs   dx,BYTE PTR ds:[rsi]
   1400094cf:	push   0x6c646e61
   1400094d4:	gs fs rex.RB js 0x14000953c
   1400094d9:	gs jo  0x140009550
   1400094dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400094e3:	gs jb  0x1400094e6
   1400094e6:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   1400094eb:	ins    DWORD PTR es:[rdi],dx
   1400094ec:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400094f3:	outs   dx,DWORD PTR ds:[rsi]
   1400094f4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400094f7:	jae    0x1400094f9
   1400094f9:	add    BYTE PTR [rax],al
   1400094fb:	add    BYTE PTR [rcx+0x75],dl
   1400094fe:	gs jb  0x14000957a
   140009501:	push   rax
   140009502:	gs jb  0x14000956b
   140009505:	outs   dx,DWORD PTR ds:[rsi]
   140009506:	jb     0x140009575
   140009508:	(bad)  
   140009509:	outs   dx,BYTE PTR ds:[rsi]
   14000950a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000950d:	outs   dx,DWORD PTR ds:[rsi]
   14000950e:	jne    0x14000957e
   140009510:	je     0x140009577
   140009512:	jb     0x140009514
   140009514:	or     eax,0x74654700
   140009519:	rex.XB jne 0x14000958e
   14000951c:	jb     0x140009583
   14000951e:	outs   dx,BYTE PTR ds:[rsi]
   14000951f:	je     0x140009571
   140009521:	jb     0x140009592
   140009523:	movsxd esp,DWORD PTR [rbp+0x73]
   140009526:	jae    0x140009571
   140009528:	add    BYTE PTR fs:[rax+rax*1],dl
   14000952c:	rex.RXB
   14000952d:	gs je  0x140009583
   140009530:	jns    0x1400095a5
   140009532:	je     0x140009599
   140009534:	ins    DWORD PTR es:[rdi],dx
   140009535:	push   rsp
   140009536:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000953d:	ins    BYTE PTR es:[rdi],dx
   14000953e:	gs push rsp
   140009540:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140009547:	gs je  0x14000959e
   14000954a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009551:	je     0x140009553
   140009553:	add    BYTE PTR [rcx+0x70],ah
   140009556:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e08cd
   140009560:	outs   dx,DWORD PTR ds:[rsi]
   140009561:	jb     0x1400095c8
   140009563:	sub    eax,0x2d6d6f63
   140009568:	ins    BYTE PTR es:[rdi],dx
   140009569:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c2a0
   14000956f:	fs ins BYTE PTR es:[rdi],dx
   140009571:	ins    BYTE PTR es:[rdi],dx
   140009572:	add    BYTE PTR [rax],al
   140009574:	(bad)  
   140009575:	jo     0x1400095e0
   140009577:	sub    eax,0x772d736d
   14000957c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009583:	sub    eax,0x726e6977
   140009588:	je     0x1400095b7
   14000958a:	ins    BYTE PTR es:[rdi],dx
   14000958b:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c2c2
   140009591:	fs ins BYTE PTR es:[rdi],dx
   140009593:	ins    BYTE PTR es:[rdi],dx
   140009594:	add    BYTE PTR [rax],al
   140009596:	rex.WRXB
   140009597:	rex.WR
   140009598:	rex.RB
   140009599:	push   r13
   14000959b:	push   rsp
   14000959c:	xor    esi,DWORD PTR [rdx]
   14000959e:	cs fs ins BYTE PTR es:[rdi],dx
   1400095a1:	ins    BYTE PTR es:[rdi],dx
   1400095a2:	add    BYTE PTR [rax],al
   1400095a4:	(bad)  
   1400095a5:	jo     0x140009610
   1400095a7:	sub    eax,0x772d736d
   1400095ac:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400095b3:	sub    eax,0x636e7973
   1400095b8:	push   0x2d316c2d
   1400095bd:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c3f3
   1400095c3:	ins    BYTE PTR es:[rdi],dx
   1400095c4:	add    BYTE PTR [rax],al
   1400095c6:	(bad)  
   1400095c7:	jo     0x140009632
   1400095c9:	sub    eax,0x772d736d
   1400095ce:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400095d5:	sub    eax,0x636f7270
   1400095da:	gs jae 0x140009650
   1400095dd:	je     0x140009647
   1400095df:	jb     0x140009646
   1400095e1:	(bad)  
   1400095e2:	fs jae 0x140009612
   1400095e5:	ins    BYTE PTR es:[rdi],dx
   1400095e6:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c31d
   1400095ec:	fs ins BYTE PTR es:[rdi],dx
   1400095ee:	ins    BYTE PTR es:[rdi],dx
   1400095ef:	add    BYTE PTR [rcx+0x70],ah
   1400095f2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0969
   1400095fc:	outs   dx,DWORD PTR ds:[rsi]
   1400095fd:	jb     0x140009664
   1400095ff:	sub    eax,0x736c7472
   140009604:	jne    0x140009676
   140009606:	jo     0x140009677
   140009608:	jb     0x14000967e
   14000960a:	sub    eax,0x322d316c
   14000960f:	sub    eax,0x6c642e30
   140009614:	ins    BYTE PTR es:[rdi],dx
   140009615:	add    BYTE PTR [rcx+0x70],ah
   140009618:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e098f
   140009622:	outs   dx,DWORD PTR ds:[rsi]
   140009623:	jb     0x14000968a
   140009625:	sub    eax,0x6f727265
   14000962a:	jb     0x140009694
   14000962c:	(bad)  
   14000962d:	outs   dx,BYTE PTR ds:[rsi]
   14000962e:	fs ins BYTE PTR es:[rdi],dx
   140009630:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140009637:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c46e
   14000963d:	ins    BYTE PTR es:[rdi],dx
   14000963e:	add    BYTE PTR [rax],al
   140009640:	(bad)  
   140009641:	jo     0x1400096ac
   140009643:	sub    eax,0x772d736d
   140009648:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000964f:	sub    eax,0x666f7270
   140009654:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000965c:	sub    eax,0x6c642e30
   140009661:	ins    BYTE PTR es:[rdi],dx
   140009662:	add    BYTE PTR [rax],al
   140009664:	(bad)  
   140009665:	jo     0x1400096d0
   140009667:	sub    eax,0x772d736d
   14000966c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009673:	sub    eax,0x69737973
   140009678:	outs   dx,BYTE PTR ds:[rsi]
   140009679:	outs   dx,WORD PTR ds:[rsi]
   14000967b:	sub    eax,0x322d316c
   140009680:	sub    eax,0x6c642e31
   140009685:	ins    BYTE PTR es:[rdi],dx
   140009686:	add    BYTE PTR [rax],al
   140009688:	add    al,BYTE PTR [rax]
   14000968a:	rex.XB jb 0x1400096f2
   14000968d:	(bad)  
   14000968e:	je     0x1400096f5
   140009690:	push   rbp
   140009691:	jb     0x1400096fc
   140009693:	add    BYTE PTR [rcx+0x65],ch
   140009696:	jb     0x14000970c
   140009698:	jne    0x14000970e
   14000969a:	imul   ebp,DWORD PTR [rsi+rbp*1+0x64],0x6c6c
   1400096a2:	mov    ecx,0x51744e01
   1400096a7:	jne    0x14000970e
   1400096a9:	jb     0x140009724
   1400096ab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400096ad:	outs   dx,WORD PTR ds:[rsi]
   1400096af:	jb     0x14000971e
   1400096b1:	(bad)  
   1400096b2:	je     0x14000971d
   1400096b4:	outs   dx,DWORD PTR ds:[rsi]
   1400096b5:	outs   dx,BYTE PTR ds:[rsi]
   1400096b6:	push   rax
   1400096b7:	jb     0x140009728
   1400096b9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400096bc:	jae    0x1400096be
   1400096be:	outs   dx,BYTE PTR ds:[rsi]
   1400096bf:	je     0x140009725
   1400096c1:	ins    BYTE PTR es:[rdi],dx
   1400096c2:	ins    BYTE PTR es:[rdi],dx
   1400096c3:	cs fs ins BYTE PTR es:[rdi],dx
   1400096c6:	ins    BYTE PTR es:[rdi],dx
   1400096c7:	add    BYTE PTR [rbp+0x65685301],dh
   1400096cd:	ins    BYTE PTR es:[rdi],dx
   1400096ce:	ins    BYTE PTR es:[rdi],dx
   1400096cf:	rex.RB js 0x140009737
   1400096d2:	movsxd esi,DWORD PTR [rbp+0x74]
   1400096d5:	gs rex.RB js 0x140009730
   1400096d9:	add    BYTE PTR [rdi],al
   1400096db:	add    BYTE PTR [rbx+0x6f],al
   1400096de:	ins    DWORD PTR es:[rdi],dx
   1400096df:	ins    DWORD PTR es:[rdi],dx
   1400096e0:	(bad)  
   1400096e1:	outs   dx,BYTE PTR ds:[rsi]
   1400096e2:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   1400096eb:	addr32 jbe 0x140009745
   1400096ee:	add    BYTE PTR [rax],al
   1400096f0:	push   rbx
   1400096f1:	rex.W
   1400096f2:	rex.RB
   1400096f3:	rex.WR
   1400096f4:	xor    r14,QWORD PTR [rdx]
   1400096f7:	cs fs ins BYTE PTR es:[rdi],dx
   1400096fa:	ins    BYTE PTR es:[rdi],dx
   1400096fb:	add    BYTE PTR [rdi+0x61635f00],bh
   140009701:	ins    BYTE PTR es:[rdi],dx
   140009702:	ins    BYTE PTR es:[rdi],dx
   140009703:	outs   dx,BYTE PTR ds:[rsi]
   140009704:	gs ja  0x14000976f
   140009707:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000970e:	outs   dx,DWORD PTR ds:[rsi]
   14000970f:	jbe    0x140009776
   140009711:	add    BYTE PTR [rdx],cl
   140009713:	add    BYTE PTR [rdi],bh
   140009715:	(bad)  
   140009716:	xor    BYTE PTR [rbp+0x78],ah
   140009719:	movsxd esp,DWORD PTR [rbp+0x70]
   14000971c:	je     0x140009787
   14000971e:	outs   dx,DWORD PTR ds:[rsi]
   14000971f:	outs   dx,BYTE PTR ds:[rsi]
   140009720:	rex
   140009721:	rex push rcx
   140009723:	rex.RB
   140009724:	rex.B
   140009725:	rex.B
   140009726:	rex
   140009727:	rex.B
   140009728:	rex.RB
   140009729:	rex.X push rcx
   14000972b:	rex.RB
   14000972c:	rex.X
   14000972d:	rex.R
   14000972e:	rex pop rdx
   140009730:	add    BYTE PTR [rax],al
   140009732:	or     eax,DWORD PTR [rax]
   140009734:	(bad)  
   140009735:	(bad)  
   140009736:	xor    BYTE PTR [rbp+0x78],ah
   140009739:	movsxd esp,DWORD PTR [rbp+0x70]
   14000973c:	je     0x1400097a7
   14000973e:	outs   dx,DWORD PTR ds:[rsi]
   14000973f:	outs   dx,BYTE PTR ds:[rsi]
   140009740:	rex
   140009741:	rex push rcx
   140009743:	rex.RB
   140009744:	rex.B
   140009745:	rex.B
   140009746:	rex
   140009747:	rex.B
   140009748:	rex.RB
   140009749:	rex.X push rcx
   14000974b:	rex.RB
   14000974c:	rex.X
   14000974d:	rex.R
   14000974e:	rex.W
   14000974f:	rex pop rdx
   140009751:	add    BYTE PTR [rax+rax*1],cl
   140009754:	(bad)  
   140009755:	(bad)  
   140009756:	xor    BYTE PTR [rbp+0x78],ah
   140009759:	movsxd esp,DWORD PTR [rbp+0x70]
   14000975c:	je     0x1400097c7
   14000975e:	outs   dx,DWORD PTR ds:[rsi]
   14000975f:	outs   dx,BYTE PTR ds:[rsi]
   140009760:	rex
   140009761:	rex push rcx
   140009763:	rex.RB
   140009764:	rex.B
   140009765:	rex.B
   140009766:	rex
   140009767:	rex.B
   140009768:	rex.RB
   140009769:	rex.X push rsi
   14000976b:	xor    BYTE PTR [rax+0x40],al
   14000976e:	pop    rdx
   14000976f:	add    BYTE PTR [rcx],dl
   140009771:	add    BYTE PTR [rdi],bh
   140009773:	(bad)  
   140009774:	xor    DWORD PTR [rbp+0x78],esp
   140009777:	movsxd esp,DWORD PTR [rbp+0x70]
   14000977a:	je     0x1400097e5
   14000977c:	outs   dx,DWORD PTR ds:[rsi]
   14000977d:	outs   dx,BYTE PTR ds:[rsi]
   14000977e:	rex
   14000977f:	rex push rbp
   140009781:	rex.RB
   140009782:	rex.B
   140009783:	rex.B
   140009784:	rex pop rax
   140009786:	pop    rdx
   140009787:	add    BYTE PTR [rcx],dh
   140009789:	add    BYTE PTR [rdi],bh
   14000978b:	ja     0x1400097f5
   14000978d:	(bad)  
   14000978e:	je     0x1400097d0
   140009790:	gs js  0x1400097f6
   140009793:	gs jo  0x14000980a
   140009796:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000979d:	rex.X
   14000979e:	push   r8
   1400097a0:	rex.RB
   1400097a1:	rex.X
   1400097a2:	rex.R pop rax
   1400097a4:	pop    rdx
   1400097a5:	add    BYTE PTR [rbx+0x0],cl
   1400097a8:	pop    rdi
   1400097a9:	rex.XB js 0x140009824
   1400097ac:	push   rsp
   1400097ad:	push   0x45776f72
   1400097b2:	js     0x140009817
   1400097b4:	gs jo  0x14000982b
   1400097b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   1400097be:	ins    DWORD PTR es:[rdi],dx
   1400097bf:	gs ins DWORD PTR es:[rdi],dx
   1400097c1:	movsxd esi,DWORD PTR [rax+0x79]
   1400097c4:	add    BYTE PTR [rax],al
   1400097c6:	xchg   esi,eax
   1400097c7:	add    al,0x6d
   1400097c9:	gs ins DWORD PTR es:[rdi],dx
   1400097cb:	jae    0x140009832
   1400097cd:	je     0x1400097cf
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rax+0x65],cl
   14000a022:	add    BYTE PTR [rax+0x1],al
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    BYTE PTR [rax+0x1400065],dl
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    al,ch
   14000a031:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    dh,bh
   14000a049:	add    DWORD PTR [rax],0x140
	...
   14000a07f:	add    BYTE PTR [rcx],al
   14000a081:	add    BYTE PTR [rax],al
   14000a083:	add    bh,bh
   14000a085:	(bad)  
   14000a086:	(bad)  
   14000a087:	inc    DWORD PTR [rcx]
   14000a089:	add    BYTE PTR [rax],al
   14000a08b:	add    BYTE PTR [rax],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rax+0x1400064],dl
	...
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    BYTE PTR [rsi],ch
   14000a0a1:	(bad)  
   14000a0a2:	push   r14
   14000a0a4:	(bad)
   14000a0a9:	ins    BYTE PTR es:[rdi],dx
   14000a0aa:	ins    BYTE PTR es:[rdi],dx
   14000a0ab:	outs   dx,DWORD PTR ds:[rsi]
   14000a0ac:	movsxd eax,DWORD PTR [rax+0x73]
   14000a0af:	je     0x14000a115
   14000a0b1:	rex
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rax+0x1400064],dl
	...
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rsi],ch
   14000a0c9:	(bad)  
   14000a0ca:	push   r14
   14000a0cc:	gs js  0x14000a132
   14000a0cf:	gs jo  0x14000a146
   14000a0d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x90004040
   14000a0d9:	add    BYTE PTR fs:[rax+0x1],al
	...
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rsi],ch
   14000a0e9:	(bad)  
   14000a0ea:	push   r14
   14000a0ec:	ins    BYTE PTR es:[rdi],dx
   14000a0ed:	outs   dx,DWORD PTR ds:[rsi]
   14000a0ee:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000a0f6:	jb     0x14000a138
   14000a0f8:	jae    0x14000a16e
   14000a0fa:	fs rex
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rax+0x1400064],dl
	...
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    BYTE PTR [rsi],ch
   14000a111:	(bad)  
   14000a112:	push   r14
   14000a114:	ins    BYTE PTR es:[rdi],dx
   14000a115:	outs   dx,BYTE PTR gs:[rsi]
   14000a117:	addr32 je 0x14000a182
   14000a11a:	pop    rdi
   14000a11b:	gs jb  0x14000a190
   14000a11e:	outs   dx,DWORD PTR ds:[rsi]
   14000a11f:	jb     0x14000a161
   14000a121:	jae    0x14000a197
   14000a123:	fs rex
   14000a125:	add    BYTE PTR [rax],al
   14000a128:	nop
   14000a129:	add    BYTE PTR fs:[rax+0x1],al
	...
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rsi],ch
   14000a139:	(bad)  
   14000a13a:	push   r14
   14000a13c:	outs   dx,DWORD PTR ds:[rsi]
   14000a13d:	jne    0x14000a1b3
   14000a13f:	pop    rdi
   14000a140:	outs   dx,DWORD PTR ds:[rsi]
   14000a141:	pop    di
   14000a143:	jb     0x14000a1a6
   14000a145:	outs   dx,BYTE PTR ds:[rsi]
   14000a146:	addr32 gs rex jae 0x14000a1bf
   14000a14b:	fs rex
   14000a14d:	add    BYTE PTR [rax],al
   14000a150:	nop
   14000a151:	add    BYTE PTR fs:[rax+0x1],al
	...
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rsi],ch
   14000a161:	(bad)  
   14000a162:	push   r14
   14000a164:	push   rdx
   14000a165:	gs jae 0x14000a1dd
   14000a168:	ins    BYTE PTR es:[rdi],dx
   14000a169:	je     0x14000a1b0
   14000a16b:	js     0x14000a1d0
   14000a16d:	gs jo  0x14000a1e4
   14000a170:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000a177:	rex
   14000a178:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	adc    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	rcl    DWORD PTR [rax],cl
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	push   rsp
   14000b009:	xchg   BYTE PTR [rax],al
   14000b00b:	add    ah,bl
   14000b00d:	adc    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rcx+0x11],bh
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	sbb    al,0x86
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	mov    al,0x11
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	fcom   DWORD PTR [rcx]
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	xchg   esp,eax
   14000b021:	test   DWORD PTR [rax],eax
   14000b023:	add    BYTE PTR [rax],bl
   14000b025:	adc    al,BYTE PTR [rax]
   14000b027:	add    BYTE PTR [rsi+0x30000012],cl
   14000b02d:	test   DWORD PTR [rax],eax
   14000b02f:	add    BYTE PTR [rdx+rdx*1+0x13120000],dl
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	cmp    BYTE PTR [rbp+0x13180000],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	rex.RX adc eax,0x85440000
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	loopne 0x14000b05f
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	call   0x1a400b067
   14000b051:	test   DWORD PTR [rax],eax
   14000b053:	add    al,dh
   14000b055:	(bad)  
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	xor    DWORD PTR [rdi],edx
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	jl     0x14000afe3
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	rex (bad) 
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	(bad)  
   14000b065:	(bad)  
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	test   BYTE PTR [rbp+0x17d00000],al
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	mov    ebx,0xa8000018
   14000b075:	test   DWORD PTR [rax],eax
   14000b077:	add    ah,al
   14000b079:	sbb    BYTE PTR [rax],al
   14000b07b:	add    BYTE PTR [rbx+0x1c],bh
   14000b07e:	add    BYTE PTR [rax],al
   14000b080:	mov    esp,0x84000085
   14000b085:	sbb    al,0x0
   14000b087:	add    BYTE PTR [rbx+0x7c00001c],ch
   14000b08d:	test   DWORD PTR [rax],eax
   14000b08f:	add    BYTE PTR [rsp+rbx*1+0x20080000],dh
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	fadd   DWORD PTR [rbp+0x20100000]
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	and    al,0x21
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	lock test DWORD PTR [rax],eax
   14000b0a7:	add    BYTE PTR [rcx+riz*1],ch
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	jo     0x14000b0cf
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	jl     0x14000b037
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	or     BYTE PTR [rdx],ah
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	rex.RX and r8b,BYTE PTR [rax]
   14000b0bb:	add    BYTE PTR [rsi+rax*4],al
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	rex.WR and r8b,BYTE PTR [rax]
   14000b0c3:	add    dl,dh
   14000b0c5:	and    al,BYTE PTR [rax]
   14000b0c7:	add    BYTE PTR [rsi+rax*4],cl
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	clc    
   14000b0cd:	and    al,BYTE PTR [rax]
   14000b0cf:	add    BYTE PTR [rip+0x1c000023],ch        # 0x15c00b0f8
   14000b0d5:	xchg   BYTE PTR [rax],al
   14000b0d7:	add    BYTE PTR [rbx+riz*1],dh
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	and    r8,QWORD PTR [rax]
   14000b0df:	add    BYTE PTR [rsi+rax*4],bl
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	push   rsp
   14000b0e5:	and    eax,DWORD PTR [rax]
   14000b0e7:	add    BYTE PTR [rbp+0x1c000023],al
   14000b0ed:	xchg   BYTE PTR [rax],al
   14000b0ef:	add    BYTE PTR [rbx+riz*1+0x23a30000],cl
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	xchg   esp,eax
   14000b0f9:	test   DWORD PTR [rax],eax
   14000b0fb:	add    BYTE PTR [rax+0x3a000023],dh
   14000b101:	and    al,0x0
   14000b103:	add    BYTE PTR [rsi+rax*4],ah
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	and    al,0x0
   14000b10b:	add    dl,cl
   14000b10d:	and    al,0x0
   14000b10f:	add    BYTE PTR [rsi+rax*4],ah
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	shl    BYTE PTR [rax+rax*1],1
   14000b117:	add    BYTE PTR [rax+0x25],bl
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	and    al,0x86
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	(bad)  
   14000b121:	and    eax,0x25cb0000
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	cmp    al,0x86
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	loopne 0x14000b153
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	sub    ah,BYTE PTR [rsi]
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	test   BYTE PTR [rbp+0x26300000],al
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	js     0x14000b164
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	test   BYTE PTR [rbp+0x26900000],al
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	mov    ebp,0x94000026
   14000b14d:	test   DWORD PTR [rax],eax
   14000b14f:	add    ah,al
   14000b151:	add    BYTE PTR es:[rax],al
   14000b154:	push   rsi
   14000b155:	sub    DWORD PTR [rax],eax
   14000b157:	add    BYTE PTR [rax-0x7a],dh
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	pop    rsp
   14000b15d:	sub    DWORD PTR [rax],eax
   14000b15f:	add    BYTE PTR [rbx],ch
   14000b161:	sub    al,0x0
   14000b163:	add    BYTE PTR [rax+0x40000086],dl
   14000b169:	sub    al,0x0
   14000b16b:	add    BYTE PTR [rsp+rbp*1-0x7a7c0000],bl
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	mov    al,0x2c
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	or     al,0x2d
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	test   BYTE PTR [rbp+0x2d140000],al
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	scas   al,BYTE PTR es:[rdi]
   14000b185:	sub    eax,0x86bc0000
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	sub    al,0x2e
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	loop   0x14000b1c0
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	(bad)  
   14000b195:	xchg   BYTE PTR [rax],al
   14000b197:	add    al,ch
   14000b199:	add    BYTE PTR cs:[rax],al
   14000b19c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b19d:	(bad)  
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	(bad)  
   14000b1a1:	xchg   BYTE PTR [rax],al
   14000b1a3:	add    BYTE PTR [rdi+rbp*1+0x30b10000],ch
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	loopne 0x14000b134
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	mov    eax,0x72000030
   14000b1b5:	xor    al,BYTE PTR [rax]
   14000b1b7:	add    BYTE PTR [rax],bh
   14000b1b9:	xchg   DWORD PTR [rax],eax
   14000b1bb:	add    BYTE PTR [rax-0x32ffffce],al
   14000b1c1:	xor    eax,DWORD PTR [rax]
   14000b1c3:	add    BYTE PTR [rbp+rax*4+0x34000000],al
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	outs   dx,DWORD PTR ds:[rsi]
   14000b1cd:	xor    al,0x0
   14000b1cf:	add    BYTE PTR [rbp+rax*4+0x34780000],al
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	scas   al,BYTE PTR es:[rdi]
   14000b1d9:	xor    al,0x0
   14000b1db:	add    BYTE PTR [rbp+rax*4+0x34b40000],bl
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	movsxd esi,DWORD PTR [rip+0xffffffff87580000]        # 0xc758b1ea
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	ins    BYTE PTR es:[rdi],dx
   14000b1ed:	xor    eax,0x36010000
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	jo     0x14000b17d
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	or     BYTE PTR [rsi],dh
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	pop    rax
   14000b1fd:	add    BYTE PTR ss:[rax],al
   14000b200:	pushf  
   14000b201:	test   DWORD PTR [rax],eax
   14000b203:	add    BYTE PTR [rax+0x36],ah
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	sbb    edi,DWORD PTR [rcx]
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	test   BYTE PTR [rdi+0x39240000],al
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	rex.WRX cmp r8b,BYTE PTR [rax]
   14000b217:	add    BYTE PTR [rax-0x79],dh
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	(bad)  
   14000b21d:	cmp    al,BYTE PTR [rax]
   14000b21f:	add    dl,cl
   14000b221:	cmp    al,BYTE PTR [rax]
   14000b223:	add    BYTE PTR [rax+0x30000085],ch
   14000b229:	cmp    eax,DWORD PTR [rax]
   14000b22b:	add    bh,bh
   14000b22d:	cmp    eax,DWORD PTR [rax]
   14000b22f:	add    BYTE PTR [rbp+rax*4+0x3c100000],dl
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	pop    rcx
   14000b239:	cmp    al,0x0
   14000b23b:	add    BYTE PTR [rdi+rax*4+0x3c600000],ch
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	sar    DWORD PTR [rsi],1
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	mov    ah,0x87
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	loopne 0x14000b28c
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	repnz add BYTE PTR ds:[rax],al
   14000b254:	xchg   esp,eax
   14000b255:	test   DWORD PTR [rax],eax
   14000b257:	add    BYTE PTR [rax],dl
   14000b259:	(bad)  
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	cs (bad) 
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	call   0x17400b2ec
   14000b265:	(bad)  
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	sar    BYTE PTR [rdi],cl
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	in     al,dx
   14000b26d:	xchg   DWORD PTR [rax],eax
   14000b26f:	add    al,bl
   14000b271:	(bad)  
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	out    dx,eax
   14000b275:	(bad)  
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	xchg   esp,eax
   14000b279:	test   DWORD PTR [rax],eax
   14000b27b:	add    BYTE PTR [rax],bl
   14000b27d:	add    BYTE PTR [rax],al
   14000b280:	rex.WR
   14000b281:	add    BYTE PTR [rax],al
   14000b284:	jl     0x14000b20b
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	(bad)  
   14000b289:	add    BYTE PTR [rax],al
   14000b28c:	rol    DWORD PTR [rcx+0x0],1
   14000b28f:	add    BYTE PTR [rax],dl
   14000b291:	mov    BYTE PTR [rax],al
   14000b293:	add    al,ah
   14000b295:	add    BYTE PTR [r8],al
   14000b298:	adc    BYTE PTR [rdx+0x0],al
   14000b29b:	add    BYTE PTR [rbp+rax*4+0x42180000],bl
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	(bad)  
   14000b2a5:	rex.X add BYTE PTR [rax],al
   14000b2a8:	sbb    BYTE PTR [rax+0x42400000],cl
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	jns    0x14000b2f4
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	xchg   esp,eax
   14000b2b5:	test   DWORD PTR [rax],eax
   14000b2b7:	add    BYTE PTR [rax-0x67ffffbe],al
   14000b2bd:	rex.X add BYTE PTR [rax],al
   14000b2c0:	xchg   esp,eax
   14000b2c1:	test   DWORD PTR [rax],eax
   14000b2c3:	add    BYTE PTR [rdx+rax*2+0x43000000],ch
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	movabs al,ds:0x4d00004308000088
   14000b2d5:	rex.XB add BYTE PTR [r8],al
   14000b2d8:	jl     0x14000b25f
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	mov    al,0x43
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	std    
   14000b2e1:	rex.XB add BYTE PTR [r8],al
   14000b2e4:	ror    BYTE PTR [rax+0x44440000],0x0
   14000b2eb:	add    BYTE PTR [rax*2-0x77140000],dl
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	push   0xffffffff99000045
   14000b2f9:	add    BYTE PTR [r8],r8b
   14000b2fc:	jl     0x14000b283
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	movabs al,ds:0x7c000045c1000045
   14000b309:	test   DWORD PTR [rax],eax
   14000b30b:	add    al,cl
   14000b30d:	add    BYTE PTR [r8],r8b
   14000b310:	add    BYTE PTR [rsi+0x0],al
   14000b313:	add    BYTE PTR [rbp+rax*4+0x0],bh
   14000b317:	add    BYTE PTR [rax],cl
   14000b319:	rex.RX add BYTE PTR [rax],r8b
   14000b31c:	sub    DWORD PTR [rsi+0x0],eax
   14000b31f:	add    BYTE PTR [rbp+rax*4+0x0],bh
   14000b323:	add    BYTE PTR [rax],dh
   14000b325:	rex.RX add BYTE PTR [rax],r8b
   14000b328:	pop    rdi
   14000b329:	rex.RX add BYTE PTR [rax],r8b
   14000b32c:	loopne 0x14000b2b7
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	nop
   14000b331:	rex.RX add BYTE PTR [rax],r8b
   14000b334:	leave  
   14000b335:	rex.RX add BYTE PTR [rax],r8b
   14000b338:	pushf  
   14000b339:	test   DWORD PTR [rax],eax
   14000b33b:	add    al,dl
   14000b33d:	rex.RX add BYTE PTR [rax],r8b
   14000b340:	test   BYTE PTR [rsi+0x0],0x0
   14000b344:	jl     0x14000b2cb
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	add    BYTE PTR [rdi+0x0],al
   14000b34b:	add    BYTE PTR [rdi],ch
   14000b34d:	rex.RXB add BYTE PTR [r8],r8b
   14000b350:	pushf  
   14000b351:	test   DWORD PTR [rax],eax
   14000b353:	add    BYTE PTR [rax],bh
   14000b355:	rex.RXB add BYTE PTR [r8],r8b
   14000b358:	cmp    cl,BYTE PTR [rax+0x0]
   14000b35b:	add    ah,bh
   14000b35d:	mov    BYTE PTR [rax],al
   14000b35f:	add    BYTE PTR [rax+0x48],al
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	cwde   
   14000b365:	rex.W add BYTE PTR [rax],al
   14000b368:	test   BYTE PTR [rbp+0x48a00000],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	ror    BYTE PTR [rax+0x0],0x0
   14000b374:	sbb    al,0x86
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	enter  0x48,0x0
   14000b37c:	(bad)  [rax+0x0]
   14000b37f:	add    BYTE PTR [rbp+rax*4+0x48e00000],dl
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	add    ecx,DWORD PTR [rcx+0x0]
   14000b38b:	add    BYTE PTR [rsi+rax*4],bl
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	or     al,0x49
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	(bad)  
   14000b395:	rex.WB add BYTE PTR [r8],al
   14000b398:	sbb    al,0x86
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	cmp    BYTE PTR [rcx+0x0],cl
   14000b39f:	add    BYTE PTR [rcx+0x49],cl
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	xchg   esp,eax
   14000b3a5:	test   DWORD PTR [rax],eax
   14000b3a7:	add    BYTE PTR [rax+0x49],dl
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	pop    rsi
   14000b3ad:	rex.WX add BYTE PTR [rax],al
   14000b3b0:	test   al,0x85
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	rex.WX add BYTE PTR fs:[rax],al
   14000b3b8:	(bad)  
   14000b3b9:	rex.WXB add BYTE PTR [r8],al
   14000b3bc:	test   BYTE PTR [rbp+0x4b700000],al
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	scas   eax,DWORD PTR es:[rdi]
   14000b3c5:	rex.WXB add BYTE PTR [r8],al
   14000b3c8:	pushf  
   14000b3c9:	test   DWORD PTR [rax],eax
   14000b3cb:	add    BYTE PTR [rax],al
   14000b3cd:	rex.WR add BYTE PTR [rax],r8b
   14000b3d0:	push   0x4c
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	call   0x1b000b462
   14000b3d9:	rex.WR add BYTE PTR [rax],r8b
   14000b3dc:	add    al,0x4d
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	pushf  
   14000b3e1:	test   DWORD PTR [rax],eax
   14000b3e3:	add    BYTE PTR [rax],dl
   14000b3e5:	rex.WRB add BYTE PTR [r8],r8b
   14000b3e8:	jae    0x14000b437
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    al,0x8a
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	or     BYTE PTR [rbp+0x0],0x0
   14000b3f4:	(bad)  
   14000b3f5:	rex.WRB add BYTE PTR [r8],r8b
   14000b3f8:	cld    
   14000b3f9:	mov    DWORD PTR [rax],eax
   14000b3fb:	add    al,dl
   14000b3fd:	rex.WRB add BYTE PTR [r8],r8b
   14000b400:	xor    ecx,DWORD PTR [rsi+0x0]
   14000b403:	add    BYTE PTR [rdx+rcx*4],al
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	rex.R
   14000b409:	rex.WRXB add BYTE PTR [r8],r8b
   14000b40c:	(bad)  
   14000b40d:	rex.WRXB add BYTE PTR [r8],r8b
   14000b410:	xchg   esp,eax
   14000b411:	test   DWORD PTR [rax],eax
   14000b413:	add    BYTE PTR [rax+0x4f],ch
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	retf   
   14000b419:	rex.WRXB add BYTE PTR [r8],r8b
   14000b41c:	jl     0x14000b3a3
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	lock rex.WRXB add BYTE PTR [r8],r8b
   14000b424:	repnz rex.WRXB add BYTE PTR [r8],r8b
   14000b428:	clc    
   14000b429:	mov    BYTE PTR [rax],al
   14000b42b:	add    BYTE PTR [rax],dl
   14000b42d:	push   rax
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	pop    rbp
   14000b431:	push   rax
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	adc    BYTE PTR [rdx+0x50840000],cl
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	movabs ds:0xa8000088e4000050,al
   14000b445:	push   rax
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	ret    
   14000b449:	push   rax
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	in     al,0x88
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	leave  
   14000b451:	push   rax
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	jmp    0xd000b4a9
   14000b459:	mov    BYTE PTR [rax],al
   14000b45b:	add    al,dh
   14000b45d:	push   rax
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	adc    BYTE PTR [rcx+0x0],dl
   14000b463:	add    ah,ah
   14000b465:	mov    BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rsi],dl
   14000b469:	push   rcx
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	pop    rdx
   14000b46d:	push   rcx
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	ror    BYTE PTR [rcx+0x515a0000],1
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	jg     0x14000b4cb
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	ror    BYTE PTR [rcx+0x51900000],1
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	(bad)  
   14000b485:	push   rcx
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	pushf  
   14000b489:	test   DWORD PTR [rax],eax
   14000b48b:	add    al,ah
   14000b48d:	push   rcx
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	xor    eax,0xb0000052
   14000b495:	xchg   BYTE PTR [rax],al
   14000b497:	add    BYTE PTR [rax+0x52],al
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	xchg   ebp,eax
   14000b49d:	push   rdx
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	mov    al,0x86
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	sbb    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x0],al
	...
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    DWORD PTR [rax],eax
   14000c028:	add    DWORD PTR [rax],eax
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	xor    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax+0x0],al
	...
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    DWORD PTR [rax],eax
   14000c040:	or     DWORD PTR [rax+rax*1],eax
   14000c043:	add    BYTE PTR [rax+0x0],cl
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	(bad)  
   14000c049:	rol    BYTE PTR [rax],0x0
   14000c04c:	pushf  
   14000c04d:	add    eax,DWORD PTR [rax]
	...
   14000c05f:	add    BYTE PTR [rbx+rax*1+0x34],bl
   14000c066:	push   rsi
   14000c067:	add    BYTE PTR [rbx+0x0],dl
   14000c06a:	pop    rdi
   14000c06b:	add    BYTE PTR [rsi+0x0],dl
   14000c06e:	add    BYTE PTR [r10+0x0],r10b
   14000c072:	push   rbx
   14000c073:	add    BYTE PTR [rcx+0x0],cl
   14000c076:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c07a:	pop    rdi
   14000c07b:	add    BYTE PTR [rcx+0x0],cl
   14000c07e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c082:	rex.WRXB add BYTE PTR [r8],r8b
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c08d:	add    BYTE PTR [rcx],al
   14000c08f:	add    BYTE PTR [rax],al
   14000c091:	add    BYTE PTR [rdx],cl
   14000c093:	add    BYTE PTR [rax],al
   14000c095:	add    BYTE PTR [rax],bpl
   14000c098:	add    BYTE PTR [rax],al
   14000c09a:	or     al,BYTE PTR [rax]
   14000c09c:	add    BYTE PTR [rax+0x0],al
   14000c09f:	sub    BYTE PTR [rdi],bh
   14000c0a1:	add    BYTE PTR [rax],al
   14000c0a3:	add    BYTE PTR [rax],al
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax+rax*1],al
   14000c0aa:	add    al,0x0
   14000c0ac:	add    DWORD PTR [rax],eax
	...
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	cli    
   14000c0bd:	add    al,BYTE PTR [rax]
   14000c0bf:	add    BYTE PTR [rcx],al
   14000c0c1:	add    BYTE PTR [rbx+0x0],dl
   14000c0c4:	je     0x14000c0c6
   14000c0c6:	jb     0x14000c0c8
   14000c0c8:	imul   eax,DWORD PTR [rax],0x67006e
   14000c0ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c0d2:	ins    BYTE PTR es:[rdi],dx
   14000c0d3:	add    BYTE PTR [rbp+0x0],ah
   14000c0d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c0da:	data16 add BYTE PTR [rdi+0x0],ch
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	(bad)  
   14000c0e1:	add    al,BYTE PTR [rax]
   14000c0e3:	add    BYTE PTR [rcx],al
   14000c0e5:	add    BYTE PTR [rax],dh
   14000c0e7:	add    BYTE PTR [rax+rax*1],dh
   14000c0ea:	xor    BYTE PTR [rax],al
   14000c0ec:	cmp    DWORD PTR [rax],eax
   14000c0ee:	xor    BYTE PTR [rax],al
   14000c0f0:	xor    al,0x0
   14000c0f2:	rex.X add BYTE PTR [rax],sil
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c0fb:	add    BYTE PTR [rcx],al
   14000c0fd:	add    BYTE PTR [rbx+0x0],al
   14000c100:	outs   dx,DWORD PTR ds:[rsi]
   14000c101:	add    BYTE PTR [rbp+0x0],ch
   14000c104:	jo     0x14000c106
   14000c106:	(bad)  
   14000c107:	add    BYTE PTR [rsi+0x0],ch
   14000c10a:	jns    0x14000c10c
   14000c10c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c110:	ins    DWORD PTR es:[rdi],dx
   14000c111:	add    BYTE PTR [rbp+0x0],ah
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c11c:	movsxd eax,DWORD PTR [rax]
   14000c11e:	jb     0x14000c120
   14000c120:	outs   dx,DWORD PTR ds:[rsi]
   14000c121:	add    BYTE PTR [rbx+0x0],dh
   14000c124:	outs   dx,DWORD PTR ds:[rsi]
   14000c125:	add    BYTE PTR [rsi+0x0],ah
   14000c128:	je     0x14000c12a
   14000c12a:	and    BYTE PTR [rax],al
   14000c12c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c130:	jb     0x14000c132
   14000c132:	jo     0x14000c134
   14000c134:	outs   dx,DWORD PTR ds:[rsi]
   14000c135:	add    BYTE PTR [rdx+0x0],dh
   14000c138:	(bad)  
   14000c139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c13d:	add    BYTE PTR [rdi+0x0],ch
   14000c140:	outs   dx,BYTE PTR ds:[rsi]
   14000c141:	add    BYTE PTR [rax],al
   14000c143:	add    BYTE PTR [rsi+0x0],cl
   14000c146:	adc    eax,DWORD PTR [rax]
   14000c148:	add    DWORD PTR [rax],eax
   14000c14a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c14e:	ins    BYTE PTR es:[rdi],dx
   14000c14f:	add    BYTE PTR [rbp+0x0],ah
   14000c152:	add    BYTE PTR [rbp+0x0],r12b
   14000c156:	jae    0x14000c158
   14000c158:	movsxd eax,DWORD PTR [rax]
   14000c15a:	jb     0x14000c15c
   14000c15c:	imul   eax,DWORD PTR [rax],0x740070
   14000c162:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c168:	add    BYTE PTR [rax],al
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c170:	jne    0x14000c172
   14000c172:	outs   dx,BYTE PTR ds:[rsi]
   14000c173:	add    BYTE PTR [rbx+0x0],ah
   14000c176:	push   0x57002000
   14000c17b:	add    BYTE PTR [rcx+0x0],ch
   14000c17e:	outs   dx,BYTE PTR ds:[rsi]
   14000c17f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c183:	add    BYTE PTR [rdi+0x0],dh
   14000c186:	jae    0x14000c188
   14000c188:	and    BYTE PTR [rax],al
   14000c18a:	add    BYTE PTR [r8+0x0],sil
   14000c18e:	jo     0x14000c190
   14000c190:	add    BYTE PTR [rax],al
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	data16 add BYTE PTR [rbx],ah
   14000c197:	add    BYTE PTR [rcx],al
   14000c199:	add    BYTE PTR [rsi+0x0],al
   14000c19c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c1a2:	push   rsi
   14000c1a3:	add    BYTE PTR [rbp+0x0],ah
   14000c1a6:	jb     0x14000c1a8
   14000c1a8:	jae    0x14000c1aa
   14000c1aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1b0:	add    BYTE PTR [rax],al
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	xor    DWORD PTR [rax],eax
   14000c1b6:	xor    BYTE PTR [rax],al
   14000c1b8:	add    BYTE PTR cs:[rax],dh
   14000c1bb:	add    BYTE PTR [rsi],ch
   14000c1bd:	add    BYTE PTR [rcx],dh
   14000c1bf:	add    BYTE PTR [rax],dh
   14000c1c1:	add    BYTE PTR [rdx],dh
   14000c1c3:	add    BYTE PTR [rax+rax*1],dh
   14000c1c6:	xor    BYTE PTR [rax],al
   14000c1c8:	add    BYTE PTR cs:[rcx],dh
   14000c1cb:	add    BYTE PTR [rsi],dh
   14000c1cd:	add    BYTE PTR [rbx],dh
   14000c1cf:	add    BYTE PTR [rax],bh
   14000c1d1:	add    BYTE PTR [rax+rax*1],dh
   14000c1d4:	and    BYTE PTR [rax],al
   14000c1d6:	sub    BYTE PTR [rax],al
   14000c1d8:	je     0x14000c1da
   14000c1da:	push   0x2e003100
   14000c1df:	add    BYTE PTR [rcx],dh
   14000c1e1:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f1e7
   14000c1e7:	add    BYTE PTR [rax],dh
   14000c1e9:	add    BYTE PTR [rcx],bh
   14000c1eb:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f2f1
   14000c1f1:	add    BYTE PTR [rax],dh
   14000c1f3:	add    BYTE PTR [rax],dh
   14000c1f5:	add    BYTE PTR [rcx],ch
   14000c1f7:	add    BYTE PTR [rax],al
   14000c1f9:	add    BYTE PTR [rax],al
   14000c1fb:	add    BYTE PTR [rdx],bh
   14000c1fd:	add    BYTE PTR [rip+0x49000100],cl        # 0x18900c303
   14000c203:	add    BYTE PTR [rsi+0x0],ch
   14000c206:	je     0x14000c208
   14000c208:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c20c:	outs   dx,BYTE PTR ds:[rsi]
   14000c20d:	add    BYTE PTR [rcx+0x0],ah
   14000c210:	ins    BYTE PTR es:[rdi],dx
   14000c211:	add    BYTE PTR [rsi+0x0],cl
   14000c214:	(bad)  
   14000c215:	add    BYTE PTR [rbp+0x0],ch
   14000c218:	add    BYTE PTR gs:[rax],al
   14000c21b:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000c21f:	add    BYTE PTR [rbp+0x0],dh
   14000c222:	outs   dx,BYTE PTR ds:[rsi]
   14000c223:	add    BYTE PTR [rbx+0x0],ah
   14000c226:	push   0x69005700
   14000c22b:	add    BYTE PTR [rsi+0x0],ch
   14000c22e:	add    BYTE PTR [r8+0x0],sil
   14000c232:	jo     0x14000c234
   14000c234:	add    BYTE PTR [rax],al
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	add    BYTE PTR [rax],0x2e
   14000c23b:	add    BYTE PTR [rcx],al
   14000c23d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c241:	add    BYTE PTR [rdi+0x0],ah
   14000c244:	(bad)  
   14000c245:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c249:	add    BYTE PTR [rdi+0x0],ch
   14000c24c:	jo     0x14000c24e
   14000c24e:	jns    0x14000c250
   14000c250:	jb     0x14000c252
   14000c252:	imul   eax,DWORD PTR [rax],0x680067
   14000c258:	je     0x14000c25a
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	test   eax,0x4d002000
   14000c261:	add    BYTE PTR [rcx+0x0],ch
   14000c264:	movsxd eax,DWORD PTR [rax]
   14000c266:	jb     0x14000c268
   14000c268:	outs   dx,DWORD PTR ds:[rsi]
   14000c269:	add    BYTE PTR [rbx+0x0],dh
   14000c26c:	outs   dx,DWORD PTR ds:[rsi]
   14000c26d:	add    BYTE PTR [rsi+0x0],ah
   14000c270:	je     0x14000c272
   14000c272:	and    BYTE PTR [rax],al
   14000c274:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c278:	jb     0x14000c27a
   14000c27a:	jo     0x14000c27c
   14000c27c:	outs   dx,DWORD PTR ds:[rsi]
   14000c27d:	add    BYTE PTR [rdx+0x0],dh
   14000c280:	(bad)  
   14000c281:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c285:	add    BYTE PTR [rdi+0x0],ch
   14000c288:	outs   dx,BYTE PTR ds:[rsi]
   14000c289:	add    BYTE PTR [rsi],ch
   14000c28b:	add    BYTE PTR [rax],ah
   14000c28d:	add    BYTE PTR [rcx+0x0],al
   14000c290:	ins    BYTE PTR es:[rdi],dx
   14000c291:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c295:	add    BYTE PTR [rdx+0x0],dh
   14000c298:	imul   eax,DWORD PTR [rax],0x680067
   14000c29e:	je     0x14000c2a0
   14000c2a0:	jae    0x14000c2a2
   14000c2a2:	and    BYTE PTR [rax],al
   14000c2a4:	jb     0x14000c2a6
   14000c2a6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c2aa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2ae:	jbe    0x14000c2b0
   14000c2b0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c2b5:	add    BYTE PTR [rax],al
   14000c2b7:	add    BYTE PTR [rdx+0x0],cl
   14000c2ba:	adc    DWORD PTR [rax],eax
   14000c2bc:	add    DWORD PTR [rax],eax
   14000c2be:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c2c2:	imul   eax,DWORD PTR [rax],0x690067
   14000c2c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c2c9:	add    BYTE PTR [rcx+0x0],ah
   14000c2cc:	ins    BYTE PTR es:[rdi],dx
   14000c2cd:	add    BYTE PTR [rsi+0x0],al
   14000c2d0:	imul   eax,DWORD PTR [rax],0x65006c
   14000c2d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c2d7:	add    BYTE PTR [rcx+0x0],ah
   14000c2da:	ins    DWORD PTR es:[rdi],dx
   14000c2db:	add    BYTE PTR [rbp+0x0],ah
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c2e4:	jne    0x14000c2e6
   14000c2e6:	outs   dx,BYTE PTR ds:[rsi]
   14000c2e7:	add    BYTE PTR [rbx+0x0],ah
   14000c2ea:	push   0x69005700
   14000c2ef:	add    BYTE PTR [rsi+0x0],ch
   14000c2f2:	add    BYTE PTR [r8+0x0],sil
   14000c2f6:	jo     0x14000c2f8
   14000c2f8:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c2fc:	js     0x14000c2fe
   14000c2fe:	add    BYTE PTR gs:[rax],al
   14000c301:	add    BYTE PTR [rax],al
   14000c303:	add    BYTE PTR [rdx+0x0],ch
   14000c306:	and    eax,0x50000100
   14000c30b:	add    BYTE PTR [rdx+0x0],dh
   14000c30e:	outs   dx,DWORD PTR ds:[rsi]
   14000c30f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c313:	add    BYTE PTR [rbx+0x0],ah
   14000c316:	je     0x14000c318
   14000c318:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c31c:	ins    DWORD PTR es:[rdi],dx
   14000c31d:	add    BYTE PTR [rbp+0x0],ah
   14000c320:	add    BYTE PTR [rax],al
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c328:	movsxd eax,DWORD PTR [rax]
   14000c32a:	jb     0x14000c32c
   14000c32c:	outs   dx,DWORD PTR ds:[rsi]
   14000c32d:	add    BYTE PTR [rbx+0x0],dh
   14000c330:	outs   dx,DWORD PTR ds:[rsi]
   14000c331:	add    BYTE PTR [rsi+0x0],ah
   14000c334:	je     0x14000c336
   14000c336:	scas   al,BYTE PTR es:[rdi]
   14000c337:	add    BYTE PTR [rax],ah
   14000c339:	add    BYTE PTR [rdi+0x0],dl
   14000c33c:	imul   eax,DWORD PTR [rax],0x64006e
   14000c342:	outs   dx,DWORD PTR ds:[rsi]
   14000c343:	add    BYTE PTR [rdi+0x0],dh
   14000c346:	jae    0x14000c348
   14000c348:	scas   al,BYTE PTR es:[rdi]
   14000c349:	add    BYTE PTR [rax],ah
   14000c34b:	add    BYTE PTR [rdi+0x0],cl
   14000c34e:	jo     0x14000c350
   14000c350:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c354:	(bad)  
   14000c355:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c359:	add    BYTE PTR [rsi+0x0],ch
   14000c35c:	add    BYTE PTR [eax],ah
   14000c35f:	add    BYTE PTR [rbx+0x0],dl
   14000c362:	jns    0x14000c364
   14000c364:	jae    0x14000c366
   14000c366:	je     0x14000c368
   14000c368:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c36c:	add    BYTE PTR [rax],al
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	rex.RX add BYTE PTR [rcx],r10b
   14000c373:	add    BYTE PTR [rcx],al
   14000c375:	add    BYTE PTR [rax+0x0],dl
   14000c378:	jb     0x14000c37a
   14000c37a:	outs   dx,DWORD PTR ds:[rsi]
   14000c37b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c37f:	add    BYTE PTR [rbx+0x0],ah
   14000c382:	je     0x14000c384
   14000c384:	push   rsi
   14000c385:	add    BYTE PTR [rbp+0x0],ah
   14000c388:	jb     0x14000c38a
   14000c38a:	jae    0x14000c38c
   14000c38c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	xor    DWORD PTR [rax],eax
   14000c396:	xor    BYTE PTR [rax],al
   14000c398:	add    BYTE PTR cs:[rax],dh
   14000c39b:	add    BYTE PTR [rsi],ch
   14000c39d:	add    BYTE PTR [rcx],dh
   14000c39f:	add    BYTE PTR [rax],dh
   14000c3a1:	add    BYTE PTR [rdx],dh
   14000c3a3:	add    BYTE PTR [rax+rax*1],dh
   14000c3a6:	xor    BYTE PTR [rax],al
   14000c3a8:	add    BYTE PTR cs:[rcx],dh
   14000c3ab:	add    BYTE PTR [rsi],dh
   14000c3ad:	add    BYTE PTR [rbx],dh
   14000c3af:	add    BYTE PTR [rax],bh
   14000c3b1:	add    BYTE PTR [rax+rax*1],dh
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	add    BYTE PTR [rax],r8b
   14000c3bb:	add    BYTE PTR [rcx],al
   14000c3bd:	add    BYTE PTR [rsi+0x0],dl
   14000c3c0:	(bad)  
   14000c3c1:	add    BYTE PTR [rdx+0x0],dh
   14000c3c4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c3c8:	ins    BYTE PTR es:[rdi],dx
   14000c3c9:	add    BYTE PTR [rbp+0x0],ah
   14000c3cc:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3d0:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	and    al,0x0
   14000c3da:	add    al,0x0
   14000c3dc:	add    BYTE PTR [rax],al
   14000c3de:	push   rsp
   14000c3df:	add    BYTE PTR [rdx+0x0],dh
   14000c3e2:	(bad)  
   14000c3e3:	add    BYTE PTR [rsi+0x0],ch
   14000c3e6:	jae    0x14000c3e8
   14000c3e8:	ins    BYTE PTR es:[rdi],dx
   14000c3e9:	add    BYTE PTR [rcx+0x0],ah
   14000c3ec:	je     0x14000c3ee
   14000c3ee:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	or     DWORD PTR [rax+rsi*4],eax
   14000c3fb:	add    al,0x0
   14000c3fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],ah
   14000d003:	add    BYTE PTR [rax],cl
   14000d005:	add    DWORD PTR [rax],eax
   14000d007:	add    BYTE PTR [rax],dl
   14000d009:	movabs ds:0xa338a330a328a318,eax
   14000d012:	rex movabs ds:0xa370a368a350a348,eax
   14000d01c:	and    BYTE PTR [rax+rcx*4-0x75b6f5c],0xa4
   14000d024:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14000d02a:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14000d030:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14000d036:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d038:	push   rax
   14000d039:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03a:	pop    rax
   14000d03b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03c:	(bad)  
   14000d03d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03e:	push   0xffffffff90a570a5
   14000d043:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d044:	cwde   
   14000d045:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d046:	movabs al,ds:0xe8a5b8a5b0a5a8a5
   14000d04f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d050:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d052:	clc    
   14000d053:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d054:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000d05a:	pop    rax
   14000d05b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d05c:	push   0xffffffff88a678a6
   14000d061:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d062:	cwde   
   14000d063:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d064:	test   al,0xa6
   14000d066:	mov    eax,0xd8a6c8a6
   14000d06b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d06c:	call   0x148a7c917
   14000d071:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d072:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14000d078:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000d07a:	pop    rax
   14000d07b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d07c:	push   0xffffffff88a778a7
   14000d081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d082:	cwde   
   14000d083:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d084:	test   al,0xa7
   14000d086:	mov    eax,0xd8a7c8a7
   14000d08b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d08c:	call   0x148a8c938
   14000d091:	test   al,0x18
   14000d093:	test   al,0x28
   14000d095:	test   al,0x38
   14000d097:	test   al,0x48
   14000d099:	test   al,0x58
   14000d09b:	test   al,0x68
   14000d09d:	test   al,0x78
   14000d09f:	test   al,0x88
   14000d0a1:	test   al,0x98
   14000d0a3:	test   al,0xa8
   14000d0a5:	test   al,0xb8
   14000d0a7:	test   al,0xc8
   14000d0a9:	test   al,0xd8
   14000d0ab:	test   al,0xe8
   14000d0ad:	test   al,0xf8
   14000d0af:	test   al,0x8
   14000d0b1:	test   eax,0xa928a918
   14000d0b6:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   14000d0bc:	push   0xffffffff88a978a9
   14000d0c1:	test   eax,0xa9a8a998
   14000d0c6:	mov    eax,0xd8a9c8a9
   14000d0cb:	test   eax,0xa9f8a9e8
   14000d0d0:	or     BYTE PTR [rdx-0x55d755e8],ch
   14000d0d6:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   14000d0dc:	push   0xffffffff88aa78aa
   14000d0e1:	stos   BYTE PTR es:[rdi],al
   14000d0e2:	cwde   
   14000d0e3:	stos   BYTE PTR es:[rdi],al
   14000d0e4:	test   al,0xaa
   14000d0e6:	mov    eax,0xd8aac8aa
   14000d0eb:	stos   BYTE PTR es:[rdi],al
   14000d0ec:	call   0x198b0199b
   14000d0f1:	scas   eax,DWORD PTR es:[rdi]
   14000d0f2:	push   0xffffffff88af78af
   14000d0f7:	scas   eax,DWORD PTR es:[rdi]
   14000d0f8:	cwde   
   14000d0f9:	scas   eax,DWORD PTR es:[rdi]
   14000d0fa:	test   al,0xaf
   14000d0fc:	mov    eax,0xd8afc8af
   14000d101:	scas   eax,DWORD PTR es:[rdi]
   14000d102:	call   0x140b0c9b6
   14000d107:	add    BYTE PTR [rax],al
   14000d109:	jo     0x14000d10b
   14000d10b:	add    al,dh
   14000d10d:	add    BYTE PTR [rax],al
   14000d10f:	add    BYTE PTR [rax],cl
   14000d111:	movabs al,ds:0xa048a038a028a018
   14000d11a:	pop    rax
   14000d11b:	movabs al,ds:0xa098a088a078a068
   14000d124:	test   al,0xa0
   14000d126:	mov    eax,0xd8a0c8a0
   14000d12b:	movabs al,ds:0xa118a108a0f8a0e8
   14000d134:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14000d13a:	pop    rax
   14000d13b:	movabs eax,ds:0xa198a188a178a168
   14000d144:	test   al,0xa1
   14000d146:	mov    eax,0xd8a1c8a1
   14000d14b:	movabs eax,ds:0xa218a208a1f8a1e8
   14000d154:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   14000d15a:	pop    rax
   14000d15b:	movabs ds:0xa298a288a278a268,al
   14000d164:	test   al,0xa2
   14000d166:	mov    eax,0xd8a2c8a2
   14000d16b:	movabs ds:0xa318a308a2f8a2e8,al
   14000d174:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   14000d17a:	pop    rax
   14000d17b:	movabs ds:0xa398a388a378a368,eax
   14000d184:	test   al,0xa3
   14000d186:	mov    eax,0xd8a3c8a3
   14000d18b:	movabs ds:0xa418a408a3f8a3e8,eax
   14000d194:	mov    BYTE PTR [rax+rdx*4-0x5f536754],ch
   14000d19b:	lods   al,BYTE PTR ds:[rsi]
   14000d19c:	test   al,0xac
   14000d19e:	mov    al,0xac
   14000d1a0:	mov    eax,0xc8acc0ac
   14000d1a5:	lods   al,BYTE PTR ds:[rsi]
   14000d1a6:	loopne 0x14000d154
   14000d1a8:	call   0x138adc259
   14000d1ad:	lods   al,BYTE PTR ds:[rsi]
   14000d1ae:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14000d1b4:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14000d1ba:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14000d1c0:	lods   rax,QWORD PTR ds:[rsi]
   14000d1c2:	push   rax
   14000d1c3:	lods   eax,DWORD PTR ds:[rsi]
   14000d1c4:	pop    rax
   14000d1c5:	lods   eax,DWORD PTR ds:[rsi]
   14000d1c6:	(bad)  
   14000d1c7:	lods   eax,DWORD PTR ds:[rsi]
   14000d1c8:	push   0x78ad70ad
   14000d1cd:	lods   eax,DWORD PTR ds:[rsi]
   14000d1ce:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14000d1d5:	lods   eax,DWORD PTR ds:[rsi]
   14000d1d6:	movabs al,ds:0xc0adb8adb0ada8ad
   14000d1df:	lods   eax,DWORD PTR ds:[rsi]
   14000d1e0:	enter  0xd0ad,0xad
   14000d1e4:	fsubr  DWORD PTR [rbp-0x52175220]
   14000d1ea:	lock lods eax,DWORD PTR ds:[rsi]
   14000d1ec:	clc    
   14000d1ed:	lods   eax,DWORD PTR ds:[rsi]
   14000d1ee:	add    BYTE PTR [rsi-0x50bf50d8],ch
   14000d1f4:	scas   rax,QWORD PTR es:[rdi]
   14000d1f6:	push   rax
   14000d1f7:	scas   eax,DWORD PTR es:[rdi]
   14000d1f8:	add    BYTE PTR [rax+0x1c0000],ah
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14000d206:	rex.W movabs al,ds:0xa100a0d8a0b8a090
   14000d210:	.byte 0x28
   14000d211:	.byte 0xa1
   14000d212:	push   rax
   14000d213:	.byte 0xa1
