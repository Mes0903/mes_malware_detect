
b5d8a878947d4572f77e237450a07671856b8097f859a67b7157d79dbc3073fe.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0x5285]        # 0x140006310
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	sub    rsp,0x48
   1400010e0:	mov    r8d,edx
   1400010e3:	lea    rax,[rip+0x6e86]        # 0x140007f70
   1400010ea:	sub    r8d,eax
   1400010ed:	mov    r10,rcx
   1400010f0:	mov    al,BYTE PTR [rip+0x713a]        # 0x140008230
   1400010f6:	xor    r9d,r9d
   1400010f9:	movzx  eax,BYTE PTR [rdx]
   1400010fc:	shl    eax,0x18
   1400010ff:	or     eax,r8d
   140001102:	lea    r8,[rdx+0x1]
   140001106:	mov    rdx,QWORD PTR [rsp+0x78]
   14000110b:	mov    DWORD PTR [rsp+0x30],eax
   14000110f:	movzx  eax,WORD PTR [r8]
   140001113:	mov    DWORD PTR [rsp+0x34],eax
   140001117:	mov    eax,DWORD PTR [r8+0x2]
   14000111b:	mov    DWORD PTR [rsp+0x38],eax
   14000111f:	mov    eax,DWORD PTR [r8+0x6]
   140001123:	add    r8,0xa
   140001127:	mov    DWORD PTR [rsp+0x3c],eax
   14000112b:	mov    rax,QWORD PTR [rcx+0x8]
   14000112f:	mov    QWORD PTR [rdx],rax
   140001132:	mov    rax,QWORD PTR [rcx+0x8]
   140001136:	mov    QWORD PTR [rsp+0x28],rdx
   14000113b:	movzx  ecx,WORD PTR [rax]
   14000113e:	mov    QWORD PTR [rdx+0x10],r8
   140001142:	mov    DWORD PTR [rdx+0x8],ecx
   140001145:	mov    DWORD PTR [rdx+0xc],0x2
   14000114c:	movzx  eax,WORD PTR [r8]
   140001150:	xor    r8d,r8d
   140001153:	mov    DWORD PTR [rdx+0x18],eax
   140001156:	mov    eax,DWORD PTR [rsp+0x70]
   14000115a:	mov    DWORD PTR [rdx+0x1c],0x1
   140001161:	lea    rdx,[rsp+0x30]
   140001166:	mov    rcx,QWORD PTR [r10+0x20]
   14000116a:	mov    DWORD PTR [rsp+0x20],eax
   14000116e:	call   QWORD PTR [rip+0x4eb4]        # 0x140006028
   140001174:	add    rsp,0x48
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x459]        # 0x1400015e0
   140001187:	mov    QWORD PTR [rip+0x960a],rax        # 0x14000a798
   14000118e:	lea    rax,[rip+0x55b]        # 0x1400016f0
   140001195:	mov    QWORD PTR [rip+0x95ec],rax        # 0x14000a788
   14000119c:	lea    rax,[rip+0x59d]        # 0x140001740
   1400011a3:	mov    QWORD PTR [rip+0x95e6],rax        # 0x14000a790
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	xor    edx,edx
   1400011b6:	lea    rcx,[rip+0x96a3]        # 0x14000a860
   1400011bd:	mov    r8d,0xa0
   1400011c3:	call   0x140004fd6
   1400011c8:	lea    rcx,[rip+0x3fc1]        # 0x140005190
   1400011cf:	add    rsp,0x28
   1400011d3:	jmp    0x140003fd8
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x40b9]        # 0x1400052a0
   1400011e7:	jmp    0x140003fd8
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	lea    rcx,[rip+0x40c9]        # 0x1400052c0
   1400011f7:	jmp    0x140003fd8
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    rcx,[rip+0x40d9]        # 0x1400052e0
   140001207:	jmp    0x140003fd8
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	mov    QWORD PTR [rsp+0x8],rbx
   14000121d:	xor    ebx,ebx
   14000121f:	lea    rax,[rdx-0x1]
   140001223:	mov    r10d,0x7ffffffe
   140001229:	mov    r9d,ebx
   14000122c:	cmp    rax,r10
   14000122f:	mov    r11d,0x80070057
   140001235:	cmova  r9d,r11d
   140001239:	test   r9d,r9d
   14000123c:	js     0x14000127d
   14000123e:	mov    r9d,ebx
   140001241:	test   rdx,rdx
   140001244:	je     0x140001271
   140001246:	sub    r10,rdx
   140001249:	sub    r8,rcx
   14000124c:	lea    rax,[r10+rdx*1]
   140001250:	test   rax,rax
   140001253:	je     0x14000126c
   140001255:	movzx  eax,WORD PTR [r8+rcx*1]
   14000125a:	test   ax,ax
   14000125d:	je     0x14000126c
   14000125f:	mov    WORD PTR [rcx],ax
   140001262:	add    rcx,0x2
   140001266:	sub    rdx,0x1
   14000126a:	jne    0x14000124c
   14000126c:	test   rdx,rdx
   14000126f:	jne    0x140001282
   140001271:	sub    rcx,0x2
   140001275:	mov    r9d,0x8007007a
   14000127b:	jmp    0x140001282
   14000127d:	test   rdx,rdx
   140001280:	je     0x140001285
   140001282:	mov    WORD PTR [rcx],bx
   140001285:	mov    rbx,QWORD PTR [rsp+0x8]
   14000128a:	mov    eax,r9d
   14000128d:	ret    
   14000128e:	int3   
   14000128f:	int3   
   140001290:	int3   
   140001291:	int3   
   140001292:	int3   
   140001293:	int3   
   140001294:	mov    QWORD PTR [rsp+0x18],r8
   140001299:	mov    QWORD PTR [rsp+0x20],r9
   14000129e:	push   rbx
   14000129f:	push   rsi
   1400012a0:	push   rdi
   1400012a1:	sub    rsp,0x20
   1400012a5:	mov    r10,rdx
   1400012a8:	lea    r9,[rsp+0x58]
   1400012ad:	sub    r10,rcx
   1400012b0:	mov    rsi,rdx
   1400012b3:	sar    r10,1
   1400012b6:	mov    rbx,rcx
   1400012b9:	lea    rax,[r10-0x1]
   1400012bd:	cmp    rax,0x7ffffffe
   1400012c3:	ja     0x1400012e7
   1400012c5:	lea    rdi,[r10-0x1]
   1400012c9:	mov    rdx,rdi
   1400012cc:	call   QWORD PTR [rip+0x4f5e]        # 0x140006230
   1400012d2:	xor    ecx,ecx
   1400012d4:	test   eax,eax
   1400012d6:	js     0x1400012e1
   1400012d8:	cdqe   
   1400012da:	cmp    rax,rdi
   1400012dd:	ja     0x1400012e1
   1400012df:	jne    0x1400012f1
   1400012e1:	mov    WORD PTR [rbx+rdi*2],cx
   1400012e5:	jmp    0x1400012f1
   1400012e7:	xor    ecx,ecx
   1400012e9:	test   r10,r10
   1400012ec:	je     0x1400012f1
   1400012ee:	mov    WORD PTR [rbx],cx
   1400012f1:	cmp    rsi,rbx
   1400012f4:	je     0x140001307
   1400012f6:	or     rax,0xffffffffffffffff
   1400012fa:	inc    rax
   1400012fd:	cmp    WORD PTR [rbx+rax*2],cx
   140001301:	jne    0x1400012fa
   140001303:	lea    rbx,[rbx+rax*2]
   140001307:	mov    rax,rbx
   14000130a:	add    rsp,0x20
   14000130e:	pop    rdi
   14000130f:	pop    rsi
   140001310:	pop    rbx
   140001311:	ret    
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	mov    QWORD PTR [rsp+0x20],rbx
   14000131d:	push   rbp
   14000131e:	push   rsi
   14000131f:	push   rdi
   140001320:	push   r14
   140001322:	push   r15
   140001324:	sub    rsp,0x250
   14000132b:	mov    rax,QWORD PTR [rip+0x8cd6]        # 0x14000a008
   140001332:	xor    rax,rsp
   140001335:	mov    QWORD PTR [rsp+0x240],rax
   14000133d:	mov    r14,rcx
   140001340:	lea    rsi,[rip+0x65f5]        # 0x14000793c
   140001347:	mov    ecx,DWORD PTR [r8]
   14000134a:	xor    r15d,r15d
   14000134d:	mov    rbx,r8
   140001350:	mov    rdi,rdx
   140001353:	test   ecx,ecx
   140001355:	je     0x14000138f
   140001357:	sub    ecx,0x1
   14000135a:	je     0x140001386
   14000135c:	sub    ecx,0x1
   14000135f:	je     0x14000137d
   140001361:	sub    ecx,0x1
   140001364:	je     0x140001374
   140001366:	cmp    ecx,0x1
   140001369:	jne    0x140001396
   14000136b:	lea    rsi,[rip+0x6616]        # 0x140007988
   140001372:	jmp    0x140001396
   140001374:	lea    rsi,[rip+0x6605]        # 0x140007980
   14000137b:	jmp    0x140001396
   14000137d:	lea    rsi,[rip+0x65e4]        # 0x140007968
   140001384:	jmp    0x140001396
   140001386:	lea    rsi,[rip+0x65cb]        # 0x140007958
   14000138d:	jmp    0x140001396
   14000138f:	lea    rsi,[rip+0x65b2]        # 0x140007948
   140001396:	mov    r8d,DWORD PTR [r8+0x4]
   14000139a:	lea    rax,[rsp+0x40]
   14000139f:	mov    QWORD PTR [rsp+0x30],r15
   1400013a4:	mov    r9d,0x400
   1400013aa:	mov    DWORD PTR [rsp+0x28],0x100
   1400013b2:	xor    edx,edx
   1400013b4:	mov    ecx,0x1200
   1400013b9:	mov    QWORD PTR [rsp+0x20],rax
   1400013be:	mov    WORD PTR [rsp+0x40],r15w
   1400013c4:	call   QWORD PTR [rip+0x4cbe]        # 0x140006088
   1400013ca:	mov    r9,QWORD PTR [rbx+0x30]
   1400013ce:	lea    rdi,[r14+rdi*2]
   1400013d2:	mov    rax,QWORD PTR [rbx+0x80]
   1400013d9:	mov    rdx,rdi
   1400013dc:	mov    rcx,r14
   1400013df:	test   r9,r9
   1400013e2:	je     0x140001407
   1400013e4:	mov    QWORD PTR [rsp+0x30],rax
   1400013e9:	lea    r8,[rip+0x65a8]        # 0x140007998
   1400013f0:	mov    rax,QWORD PTR [rbx+0x78]
   1400013f4:	mov    QWORD PTR [rsp+0x28],rax
   1400013f9:	mov    eax,DWORD PTR [rbx+0x38]
   1400013fc:	mov    DWORD PTR [rsp+0x20],eax
   140001400:	call   0x140001294
   140001405:	jmp    0x14000141c
   140001407:	mov    r9,QWORD PTR [rbx+0x78]
   14000140b:	lea    r8,[rip+0x65ae]        # 0x1400079c0
   140001412:	mov    QWORD PTR [rsp+0x20],rax
   140001417:	call   0x140001294
   14000141c:	mov    r9,QWORD PTR [rbx+0x88]
   140001423:	mov    rbp,rax
   140001426:	test   r9,r9
   140001429:	je     0x140001440
   14000142b:	lea    r8,[rip+0x65a6]        # 0x1400079d8
   140001432:	mov    rdx,rdi
   140001435:	mov    rcx,rax
   140001438:	call   0x140001294
   14000143d:	mov    rbp,rax
   140001440:	call   QWORD PTR [rip+0x4c6a]        # 0x1400060b0
   140001446:	lea    rcx,[rsp+0x40]
   14000144b:	mov    r9,rsi
   14000144e:	mov    QWORD PTR [rsp+0x38],rcx
   140001453:	lea    r8,[rip+0x659e]        # 0x1400079f8
   14000145a:	mov    ecx,DWORD PTR [rbx+0x4]
   14000145d:	mov    rdx,rdi
   140001460:	mov    DWORD PTR [rsp+0x30],ecx
   140001464:	mov    rcx,rbp
   140001467:	mov    DWORD PTR [rsp+0x28],eax
   14000146b:	mov    eax,DWORD PTR [rbx+0x3c]
   14000146e:	mov    DWORD PTR [rsp+0x20],eax
   140001472:	call   0x140001294
   140001477:	cmp    QWORD PTR [rbx+0x10],r15
   14000147b:	jne    0x14000148d
   14000147d:	cmp    QWORD PTR [rbx+0x40],r15
   140001481:	jne    0x14000148d
   140001483:	cmp    QWORD PTR [rbx+0x28],r15
   140001487:	je     0x14000151d
   14000148d:	lea    r8,[rip+0x659c]        # 0x140007a30
   140001494:	mov    rdx,rdi
   140001497:	mov    rcx,rax
   14000149a:	call   0x140001294
   14000149f:	mov    r9,QWORD PTR [rbx+0x10]
   1400014a3:	test   r9,r9
   1400014a6:	je     0x1400014ba
   1400014a8:	lea    r8,[rip+0x6591]        # 0x140007a40
   1400014af:	mov    rdx,rdi
   1400014b2:	mov    rcx,rax
   1400014b5:	call   0x140001294
   1400014ba:	mov    r9,QWORD PTR [rbx+0x40]
   1400014be:	test   r9,r9
   1400014c1:	je     0x1400014d5
   1400014c3:	lea    r8,[rip+0x658e]        # 0x140007a58
   1400014ca:	mov    rdx,rdi
   1400014cd:	mov    rcx,rax
   1400014d0:	call   0x140001294
   1400014d5:	mov    rcx,QWORD PTR [rbx+0x20]
   1400014d9:	mov    rdx,rdi
   1400014dc:	mov    r9,QWORD PTR [rbx+0x28]
   1400014e0:	test   rcx,rcx
   1400014e3:	je     0x1400014fb
   1400014e5:	mov    QWORD PTR [rsp+0x20],rcx
   1400014ea:	lea    r8,[rip+0x658f]        # 0x140007a80
   1400014f1:	mov    rcx,rax
   1400014f4:	call   0x140001294
   1400014f9:	jmp    0x14000151d
   1400014fb:	mov    rcx,rax
   1400014fe:	test   r9,r9
   140001501:	je     0x140001511
   140001503:	lea    r8,[rip+0x658e]        # 0x140007a98
   14000150a:	call   0x140001294
   14000150f:	jmp    0x14000151d
   140001511:	lea    r8,[rip+0x6590]        # 0x140007aa8
   140001518:	call   0x140001294
   14000151d:	xor    eax,eax
   14000151f:	mov    rcx,QWORD PTR [rsp+0x240]
   140001527:	xor    rcx,rsp
   14000152a:	call   0x140003f10
   14000152f:	mov    rbx,QWORD PTR [rsp+0x298]
   140001537:	add    rsp,0x250
   14000153e:	pop    r15
   140001540:	pop    r14
   140001542:	pop    rdi
   140001543:	pop    rsi
   140001544:	pop    rbp
   140001545:	ret    
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	mov    DWORD PTR [rip+0x928e],ecx        # 0x14000a7e0
   140001552:	mov    eax,0x1
   140001557:	lock xadd DWORD PTR [rip+0x9261],eax        # 0x14000a7c0
   14000155f:	inc    eax
   140001561:	ret    
   140001562:	int3   
   140001563:	int3   
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	mov    DWORD PTR [rip+0x91ee],ecx        # 0x14000a75c
   14000156e:	mov    eax,0x1
   140001573:	lock xadd DWORD PTR [rip+0x9255],eax        # 0x14000a7d0
   14000157b:	inc    eax
   14000157d:	ret    
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	mov    DWORD PTR [rip+0x924e],ecx        # 0x14000a7d8
   14000158a:	mov    eax,0x1
   14000158f:	lock xadd DWORD PTR [rip+0x91cd],eax        # 0x14000a764
   140001597:	inc    eax
   140001599:	ret    
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    DWORD PTR [rip+0x91ba],ecx        # 0x14000a760
   1400015a6:	mov    eax,0x1
   1400015ab:	lock xadd DWORD PTR [rip+0x91b5],eax        # 0x14000a768
   1400015b3:	inc    eax
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    DWORD PTR [rip+0x91ea],ecx        # 0x14000a7b0
   1400015c6:	mov    eax,0x1
   1400015cb:	ret    
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	int3   
   1400015d1:	int3   
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	int3   
   1400015d5:	int3   
   1400015d6:	int3   
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015e5:	push   rsi
   1400015e6:	sub    rsp,0x150
   1400015ed:	mov    rax,QWORD PTR [rip+0x8a14]        # 0x14000a008
   1400015f4:	xor    rax,rsp
   1400015f7:	mov    QWORD PTR [rsp+0x140],rax
   1400015ff:	mov    al,BYTE PTR [rip+0x91d7]        # 0x14000a7dc
   140001605:	lea    rsi,[rip+0x9214]        # 0x14000a820
   14000160c:	test   al,al
   14000160e:	jne    0x1400016c4
   140001614:	mov    ebx,0x40
   140001619:	xor    edx,edx
   14000161b:	mov    r8d,ebx
   14000161e:	mov    rcx,rsi
   140001621:	call   0x140004fd6
   140001626:	and    QWORD PTR [rsp+0x20],0x0
   14000162c:	lea    r8,[rsp+0x20]
   140001631:	lea    rdx,[rip+0xffffffffffffff88]        # 0x1400015c0
   140001638:	lea    ecx,[rbx-0x3a]
   14000163b:	call   QWORD PTR [rip+0x4a1f]        # 0x140006060
   140001641:	test   eax,eax
   140001643:	je     0x1400016bd
   140001645:	mov    rcx,QWORD PTR [rsp+0x20]
   14000164a:	lea    rdx,[rsp+0x30]
   14000164f:	mov    r8d,0x104
   140001655:	call   QWORD PTR [rip+0x4a4d]        # 0x1400060a8
   14000165b:	test   eax,eax
   14000165d:	je     0x1400016bd
   14000165f:	lea    rcx,[rsp+0x30]
   140001664:	or     rax,0xffffffffffffffff
   140001668:	inc    rax
   14000166b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000166f:	jne    0x140001668
   140001671:	lea    rdx,[rsp+0x30]
   140001676:	add    rdx,rax
   140001679:	jmp    0x140001684
   14000167b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000167f:	je     0x14000168e
   140001681:	dec    rdx
   140001684:	lea    rax,[rsp+0x30]
   140001689:	cmp    rdx,rax
   14000168c:	ja     0x14000167b
   14000168e:	mov    rcx,rsi
   140001691:	sub    rdx,rsi
   140001694:	lea    rax,[rbx+0x7fffffbe]
   14000169b:	test   rax,rax
   14000169e:	je     0x1400016b2
   1400016a0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400016a3:	test   al,al
   1400016a5:	je     0x1400016b2
   1400016a7:	mov    BYTE PTR [rcx],al
   1400016a9:	inc    rcx
   1400016ac:	sub    rbx,0x1
   1400016b0:	jne    0x140001694
   1400016b2:	test   rbx,rbx
   1400016b5:	jne    0x1400016ba
   1400016b7:	dec    rcx
   1400016ba:	mov    BYTE PTR [rcx],0x0
   1400016bd:	mov    BYTE PTR [rip+0x9118],0x1        # 0x14000a7dc
   1400016c4:	mov    rax,rsi
   1400016c7:	mov    rcx,QWORD PTR [rsp+0x140]
   1400016cf:	xor    rcx,rsp
   1400016d2:	call   0x140003f10
   1400016d7:	mov    rbx,QWORD PTR [rsp+0x160]
   1400016df:	add    rsp,0x150
   1400016e6:	pop    rsi
   1400016e7:	ret    
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	rex push rbx
   1400016f2:	sub    rsp,0x20
   1400016f6:	lea    rcx,[rip+0x63b3]        # 0x140007ab0
   1400016fd:	call   QWORD PTR [rip+0x496d]        # 0x140006070
   140001703:	test   rax,rax
   140001706:	je     0x14000172b
   140001708:	lea    rdx,[rip+0x63b9]        # 0x140007ac8
   14000170f:	mov    rcx,rax
   140001712:	call   QWORD PTR [rip+0x4988]        # 0x1400060a0
   140001718:	mov    rbx,rax
   14000171b:	test   rax,rax
   14000171e:	je     0x14000172b
   140001720:	mov    rcx,rax
   140001723:	call   QWORD PTR [rip+0x4be7]        # 0x140006310
   140001729:	call   rbx
   14000172b:	add    rsp,0x20
   14000172f:	pop    rbx
   140001730:	ret    
   140001731:	int3   
   140001732:	int3   
   140001733:	int3   
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    QWORD PTR [rsp+0x8],rbx
   140001745:	mov    QWORD PTR [rsp+0x10],rsi
   14000174a:	push   rdi
   14000174b:	sub    rsp,0x20
   14000174f:	mov    rdi,QWORD PTR [rip+0x9072]        # 0x14000a7c8
   140001756:	xor    ebx,ebx
   140001758:	mov    esi,ecx
   14000175a:	test   rdi,rdi
   14000175d:	jne    0x1400017a6
   14000175f:	mov    rax,QWORD PTR [rip+0x9052]        # 0x14000a7b8
   140001766:	test   rax,rax
   140001769:	jne    0x140001787
   14000176b:	xor    edx,edx
   14000176d:	lea    rcx,[rip+0x633c]        # 0x140007ab0
   140001774:	mov    r8d,0x800
   14000177a:	call   QWORD PTR [rip+0x48c8]        # 0x140006048
   140001780:	mov    QWORD PTR [rip+0x9031],rax        # 0x14000a7b8
   140001787:	lea    rdx,[rip+0x635a]        # 0x140007ae8
   14000178e:	mov    rcx,rax
   140001791:	call   QWORD PTR [rip+0x4909]        # 0x1400060a0
   140001797:	mov    QWORD PTR [rip+0x902a],rax        # 0x14000a7c8
   14000179e:	mov    rdi,rax
   1400017a1:	test   rax,rax
   1400017a4:	je     0x1400017b5
   1400017a6:	mov    rcx,rdi
   1400017a9:	call   QWORD PTR [rip+0x4b61]        # 0x140006310
   1400017af:	mov    ecx,esi
   1400017b1:	call   rdi
   1400017b3:	mov    ebx,eax
   1400017b5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400017ba:	mov    eax,ebx
   1400017bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017c1:	add    rsp,0x20
   1400017c5:	pop    rdi
   1400017c6:	ret    
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400017da:	mov    QWORD PTR [rsp+0x18],rsi
   1400017df:	push   rdi
   1400017e0:	sub    rsp,0x20
   1400017e4:	xor    al,al
   1400017e6:	mov    BYTE PTR [r8],0x0
   1400017ea:	mov    rbp,r9
   1400017ed:	mov    rbx,r8
   1400017f0:	mov    rsi,rdx
   1400017f3:	mov    rdi,rcx
   1400017f6:	test   rdx,rdx
   1400017f9:	je     0x1400018a6
   1400017ff:	mov    rdx,QWORD PTR [rdx+0x10]
   140001803:	call   0x1400017d0
   140001808:	mov    rdx,QWORD PTR [rsi+0x20]
   14000180c:	xor    esi,esi
   14000180e:	test   rdx,rdx
   140001811:	je     0x1400018a6
   140001817:	cmp    DWORD PTR [rdx],esi
   140001819:	jne    0x14000182a
   14000181b:	lea    eax,[rsi+0x1]
   14000181e:	lock xadd DWORD PTR [rip+0x885a],eax        # 0x14000a080
   140001826:	inc    eax
   140001828:	mov    DWORD PTR [rdx],eax
   14000182a:	cmp    DWORD PTR [rdi+0x48],esi
   14000182d:	jne    0x140001840
   14000182f:	movups xmm0,XMMWORD PTR [rdx]
   140001832:	movups XMMWORD PTR [rdi+0x48],xmm0
   140001836:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000183b:	movsd  QWORD PTR [rdi+0x58],xmm1
   140001840:	movups xmm0,XMMWORD PTR [rdx]
   140001843:	or     rcx,0xffffffffffffffff
   140001847:	mov    rax,rcx
   14000184a:	movups XMMWORD PTR [rdi+0x60],xmm0
   14000184e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001853:	movsd  QWORD PTR [rdi+0x70],xmm1
   140001858:	lea    rdi,[rbx+rbp*1]
   14000185c:	inc    rax
   14000185f:	cmp    BYTE PTR [rbx+rax*1],sil
   140001863:	jne    0x14000185c
   140001865:	add    rbx,rax
   140001868:	mov    rax,rdi
   14000186b:	sub    rax,rbx
   14000186e:	cmp    rax,0x2
   140001872:	jle    0x1400018a4
   140001874:	mov    BYTE PTR [rbx],0x5c
   140001877:	inc    rbx
   14000187a:	mov    rdx,QWORD PTR [rdx+0x8]
   14000187e:	inc    rcx
   140001881:	cmp    BYTE PTR [rdx+rcx*1],sil
   140001885:	jne    0x14000187e
   140001887:	inc    rcx
   14000188a:	sub    rdi,rbx
   14000188d:	cmp    rcx,rdi
   140001890:	cmovb  rdi,rcx
   140001894:	mov    rcx,rbx
   140001897:	mov    r8,rdi
   14000189a:	call   0x140004f38
   14000189f:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   1400018a4:	mov    al,0x1
   1400018a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400018b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400018b5:	add    rsp,0x20
   1400018b9:	pop    rdi
   1400018ba:	ret    
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	int3   
   1400018c1:	int3   
   1400018c2:	int3   
   1400018c3:	int3   
   1400018c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400018c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400018ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400018d3:	push   rdi
   1400018d4:	push   r12
   1400018d6:	push   r13
   1400018d8:	push   r14
   1400018da:	push   r15
   1400018dc:	sub    rsp,0x20
   1400018e0:	movups xmm0,XMMWORD PTR [rdx]
   1400018e3:	mov    rsi,rcx
   1400018e6:	or     r15,0xffffffffffffffff
   1400018ea:	xor    edi,edi
   1400018ec:	mov    r14,rdx
   1400018ef:	movups XMMWORD PTR [rcx],xmm0
   1400018f2:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400018f6:	lea    r12d,[r15+0x3]
   1400018fa:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400018fe:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001902:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001906:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000190a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000190e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001912:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001916:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14000191a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000191e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001922:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001926:	mov    ecx,0x80
   14000192b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000192f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140001934:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140001938:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   14000193c:	mov    rcx,QWORD PTR [rdx+0x10]
   140001940:	test   rcx,rcx
   140001943:	jne    0x14000194c
   140001945:	mov    QWORD PTR [rsp+0x50],r12
   14000194a:	jmp    0x140001965
   14000194c:	mov    rax,r15
   14000194f:	inc    rax
   140001952:	cmp    WORD PTR [rcx+rax*2],di
   140001956:	jne    0x14000194f
   140001958:	lea    rax,[rax*2+0x2]
   140001960:	mov    QWORD PTR [rsp+0x50],rax
   140001965:	mov    rax,QWORD PTR [rdx+0x20]
   140001969:	test   rax,rax
   14000196c:	jne    0x140001975
   14000196e:	lea    ebx,[rax+0x1]
   140001971:	mov    ecx,ebx
   140001973:	jmp    0x140001989
   140001975:	mov    rcx,r15
   140001978:	inc    rcx
   14000197b:	cmp    BYTE PTR [rax+rcx*1],dil
   14000197f:	jne    0x140001978
   140001981:	mov    ebx,0x1
   140001986:	add    rcx,rbx
   140001989:	mov    rax,QWORD PTR [rdx+0x28]
   14000198d:	test   rax,rax
   140001990:	jne    0x140001997
   140001992:	mov    r9,rbx
   140001995:	jmp    0x1400019a6
   140001997:	mov    r9,r15
   14000199a:	inc    r9
   14000199d:	cmp    BYTE PTR [rax+r9*1],dil
   1400019a1:	jne    0x14000199a
   1400019a3:	add    r9,rbx
   1400019a6:	mov    rax,QWORD PTR [rdx+0x30]
   1400019aa:	test   rax,rax
   1400019ad:	jne    0x1400019b4
   1400019af:	mov    r11,rbx
   1400019b2:	jmp    0x1400019c3
   1400019b4:	mov    r11,r15
   1400019b7:	inc    r11
   1400019ba:	cmp    BYTE PTR [rax+r11*1],dil
   1400019be:	jne    0x1400019b7
   1400019c0:	add    r11,rbx
   1400019c3:	mov    rax,QWORD PTR [rdx+0x40]
   1400019c7:	test   rax,rax
   1400019ca:	jne    0x1400019d1
   1400019cc:	mov    r10,rbx
   1400019cf:	jmp    0x1400019e0
   1400019d1:	mov    r10,r15
   1400019d4:	inc    r10
   1400019d7:	cmp    BYTE PTR [rax+r10*1],dil
   1400019db:	jne    0x1400019d4
   1400019dd:	add    r10,rbx
   1400019e0:	mov    rax,QWORD PTR [rdx+0x78]
   1400019e4:	test   rax,rax
   1400019e7:	jne    0x1400019ee
   1400019e9:	mov    r8,rbx
   1400019ec:	jmp    0x1400019fd
   1400019ee:	mov    r8,r15
   1400019f1:	inc    r8
   1400019f4:	cmp    BYTE PTR [rax+r8*1],dil
   1400019f8:	jne    0x1400019f1
   1400019fa:	add    r8,rbx
   1400019fd:	mov    rax,QWORD PTR [rdx+0x68]
   140001a01:	test   rax,rax
   140001a04:	jne    0x140001a0b
   140001a06:	mov    rdx,rbx
   140001a09:	jmp    0x140001a1a
   140001a0b:	mov    rdx,r15
   140001a0e:	inc    rdx
   140001a11:	cmp    BYTE PTR [rax+rdx*1],dil
   140001a15:	jne    0x140001a0e
   140001a17:	add    rdx,rbx
   140001a1a:	mov    rbp,QWORD PTR [r14+0x70]
   140001a1e:	test   rbp,rbp
   140001a21:	jne    0x140001a28
   140001a23:	mov    r13,r12
   140001a26:	jmp    0x140001a3d
   140001a28:	mov    rax,r15
   140001a2b:	inc    rax
   140001a2e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140001a33:	jne    0x140001a2b
   140001a35:	lea    r13,[rax*2+0x2]
   140001a3d:	mov    rbp,QWORD PTR [r14+0x50]
   140001a41:	test   rbp,rbp
   140001a44:	jne    0x140001a4b
   140001a46:	mov    rax,rbx
   140001a49:	jmp    0x140001a5a
   140001a4b:	mov    rax,r15
   140001a4e:	inc    rax
   140001a51:	cmp    BYTE PTR [rax+rbp*1],dil
   140001a55:	jne    0x140001a4e
   140001a57:	add    rax,rbx
   140001a5a:	mov    r15,QWORD PTR [r14+0x58]
   140001a5e:	test   r15,r15
   140001a61:	je     0x140001a79
   140001a63:	or     rbp,0xffffffffffffffff
   140001a67:	inc    rbp
   140001a6a:	cmp    WORD PTR [r15+rbp*2],di
   140001a6f:	jne    0x140001a67
   140001a71:	lea    r12,[rbp*2+0x2]
   140001a79:	lea    rbp,[r12+rax*1]
   140001a7d:	mov    rax,QWORD PTR [rsi+0x90]
   140001a84:	add    rbp,r13
   140001a87:	add    rbp,rdx
   140001a8a:	add    rbp,r8
   140001a8d:	add    rbp,r10
   140001a90:	add    rbp,r11
   140001a93:	add    rbp,r9
   140001a96:	add    rbp,rcx
   140001a99:	add    rbp,QWORD PTR [rsp+0x50]
   140001a9e:	test   rax,rax
   140001aa1:	je     0x140001ab4
   140001aa3:	cmp    DWORD PTR [rax],ebx
   140001aa5:	jne    0x140001ab4
   140001aa7:	cmp    QWORD PTR [rsi+0x98],rbp
   140001aae:	jae    0x140001b7a
   140001ab4:	mov    rcx,rax
   140001ab7:	test   rax,rax
   140001aba:	je     0x140001ae3
   140001abc:	or     eax,0xffffffff
   140001abf:	lock xadd DWORD PTR [rcx],eax
   140001ac3:	cmp    eax,0x1
   140001ac6:	jne    0x140001ad5
   140001ac8:	mov    rcx,QWORD PTR [rsi+0x90]
   140001acf:	call   QWORD PTR [rip+0x47d3]        # 0x1400062a8
   140001ad5:	mov    QWORD PTR [rsi+0x90],rdi
   140001adc:	mov    QWORD PTR [rsi+0x98],rdi
   140001ae3:	test   rbp,rbp
   140001ae6:	jne    0x140001b21
   140001ae8:	mov    rcx,QWORD PTR [rsi+0x90]
   140001aef:	test   rcx,rcx
   140001af2:	je     0x140001b7a
   140001af8:	or     eax,0xffffffff
   140001afb:	lock xadd DWORD PTR [rcx],eax
   140001aff:	cmp    eax,0x1
   140001b02:	jne    0x140001b11
   140001b04:	mov    rcx,QWORD PTR [rsi+0x90]
   140001b0b:	call   QWORD PTR [rip+0x4797]        # 0x1400062a8
   140001b11:	mov    QWORD PTR [rsi+0x90],rdi
   140001b18:	mov    QWORD PTR [rsi+0x98],rdi
   140001b1f:	jmp    0x140001b7a
   140001b21:	lea    rcx,[rbp+0x4]
   140001b25:	call   QWORD PTR [rip+0x4775]        # 0x1400062a0
   140001b2b:	mov    r15,rax
   140001b2e:	test   rax,rax
   140001b31:	je     0x140001b7a
   140001b33:	mov    DWORD PTR [rax],edi
   140001b35:	mov    rax,QWORD PTR [rsi+0x90]
   140001b3c:	test   rax,rax
   140001b3f:	je     0x140001b68
   140001b41:	or     ecx,0xffffffff
   140001b44:	lock xadd DWORD PTR [rax],ecx
   140001b48:	cmp    ecx,0x1
   140001b4b:	jne    0x140001b5a
   140001b4d:	mov    rcx,QWORD PTR [rsi+0x90]
   140001b54:	call   QWORD PTR [rip+0x474e]        # 0x1400062a8
   140001b5a:	mov    QWORD PTR [rsi+0x90],rdi
   140001b61:	mov    QWORD PTR [rsi+0x98],rdi
   140001b68:	mov    QWORD PTR [rsi+0x90],r15
   140001b6f:	mov    QWORD PTR [rsi+0x98],rbp
   140001b76:	lock add DWORD PTR [r15],ebx
   140001b7a:	mov    rax,QWORD PTR [rsi+0x90]
   140001b81:	mov    rcx,QWORD PTR [rsi+0x98]
   140001b88:	test   rax,rax
   140001b8b:	je     0x140001b91
   140001b8d:	lea    rdi,[rax+0x4]
   140001b91:	mov    r8,QWORD PTR [r14+0x10]
   140001b95:	lea    rdx,[rcx+rdi*1]
   140001b99:	mov    rax,rdi
   140001b9c:	lea    r9,[rsi+0x10]
   140001ba0:	neg    rax
   140001ba3:	mov    rcx,rdi
   140001ba6:	sbb    rbx,rbx
   140001ba9:	and    rbx,rdx
   140001bac:	mov    rdx,rbx
   140001baf:	call   0x1400034b4
   140001bb4:	mov    r8,QWORD PTR [r14+0x20]
   140001bb8:	lea    r9,[rsi+0x20]
   140001bbc:	mov    rdx,rbx
   140001bbf:	mov    rcx,rax
   140001bc2:	call   0x14000356c
   140001bc7:	mov    r8,QWORD PTR [r14+0x28]
   140001bcb:	lea    r9,[rsi+0x28]
   140001bcf:	mov    rdx,rbx
   140001bd2:	mov    rcx,rax
   140001bd5:	call   0x14000356c
   140001bda:	mov    r8,QWORD PTR [r14+0x30]
   140001bde:	lea    r9,[rsi+0x30]
   140001be2:	mov    rdx,rbx
   140001be5:	mov    rcx,rax
   140001be8:	call   0x14000356c
   140001bed:	mov    r8,QWORD PTR [r14+0x40]
   140001bf1:	lea    r9,[rsi+0x40]
   140001bf5:	mov    rdx,rbx
   140001bf8:	mov    rcx,rax
   140001bfb:	call   0x14000356c
   140001c00:	mov    r8,QWORD PTR [r14+0x78]
   140001c04:	lea    r9,[rsi+0x78]
   140001c08:	mov    rdx,rbx
   140001c0b:	mov    rcx,rax
   140001c0e:	call   0x14000356c
   140001c13:	mov    r8,QWORD PTR [r14+0x68]
   140001c17:	lea    r9,[rsi+0x68]
   140001c1b:	mov    rdx,rbx
   140001c1e:	mov    rcx,rax
   140001c21:	call   0x14000356c
   140001c26:	mov    r8,QWORD PTR [r14+0x70]
   140001c2a:	lea    r9,[rsi+0x70]
   140001c2e:	mov    rdx,rbx
   140001c31:	mov    rcx,rax
   140001c34:	call   0x1400034b4
   140001c39:	mov    r8,QWORD PTR [r14+0x50]
   140001c3d:	lea    r9,[rsi+0x50]
   140001c41:	mov    rdx,rbx
   140001c44:	mov    rcx,rax
   140001c47:	call   0x14000356c
   140001c4c:	mov    r8,QWORD PTR [r14+0x58]
   140001c50:	lea    r9,[rsi+0x58]
   140001c54:	mov    rdx,rbx
   140001c57:	mov    rcx,rax
   140001c5a:	mov    rbx,QWORD PTR [rsp+0x58]
   140001c5f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001c64:	mov    rsi,QWORD PTR [rsp+0x68]
   140001c69:	add    rsp,0x20
   140001c6d:	pop    r15
   140001c6f:	pop    r14
   140001c71:	pop    r13
   140001c73:	pop    r12
   140001c75:	pop    rdi
   140001c76:	jmp    0x1400034b4
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	rex push rbx
   140001c86:	sub    rsp,0x20
   140001c8a:	and    QWORD PTR [rcx+0x90],0x0
   140001c92:	mov    rbx,rcx
   140001c95:	and    QWORD PTR [rcx+0x98],0x0
   140001c9d:	call   0x1400018c4
   140001ca2:	mov    rax,rbx
   140001ca5:	add    rsp,0x20
   140001ca9:	pop    rbx
   140001caa:	ret    
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	int3   
   140001cb1:	int3   
   140001cb2:	int3   
   140001cb3:	int3   
   140001cb4:	mov    QWORD PTR [rsp+0x18],rbx
   140001cb9:	mov    DWORD PTR [rsp+0x10],edx
   140001cbd:	mov    QWORD PTR [rsp+0x8],rcx
   140001cc2:	push   rbp
   140001cc3:	push   rsi
   140001cc4:	push   rdi
   140001cc5:	push   r12
   140001cc7:	push   r13
   140001cc9:	push   r14
   140001ccb:	push   r15
   140001ccd:	sub    rsp,0x40
   140001cd1:	mov    r14d,DWORD PTR [rsp+0xb0]
   140001cd9:	mov    r13,r8
   140001cdc:	mov    r15,QWORD PTR [rsp+0xd0]
   140001ce4:	xor    r8d,r8d
   140001ce7:	mov    rbp,QWORD PTR [rsp+0xe0]
   140001cef:	mov    r12,r9
   140001cf2:	mov    ebx,DWORD PTR [rsp+0xb8]
   140001cf9:	mov    edi,r8d
   140001cfc:	mov    r10d,r14d
   140001cff:	mov    WORD PTR [r15],r8w
   140001d03:	mov    BYTE PTR [rbp+0x0],r8b
   140001d07:	test   r14d,r14d
   140001d0a:	je     0x140001d7f
   140001d0c:	sub    r10d,0x1
   140001d10:	je     0x140001d76
   140001d12:	sub    r10d,0x1
   140001d16:	je     0x140001d6d
   140001d18:	sub    r10d,0x1
   140001d1c:	je     0x140001d2d
   140001d1e:	cmp    r10d,0x1
   140001d22:	jne    0x140001d88
   140001d24:	mov    ecx,ebx
   140001d26:	call   0x1400015c0
   140001d2b:	jmp    0x140001d86
   140001d2d:	test   ebx,ebx
   140001d2f:	js     0x140001d64
   140001d31:	mov    rax,QWORD PTR [rsp+0xa8]
   140001d39:	mov    ebx,0x8007029c
   140001d3e:	mov    DWORD PTR [rsp+0x38],ebx
   140001d42:	mov    r8,r13
   140001d45:	mov    DWORD PTR [rsp+0x30],0x3
   140001d4d:	mov    QWORD PTR [rsp+0x28],rax
   140001d52:	mov    rax,QWORD PTR [rsp+0xa0]
   140001d5a:	mov    QWORD PTR [rsp+0x20],rax
   140001d5f:	call   0x140002208
   140001d64:	mov    ecx,ebx
   140001d66:	call   0x1400015a0
   140001d6b:	jmp    0x140001d86
   140001d6d:	mov    ecx,ebx
   140001d6f:	call   0x140001584
   140001d74:	jmp    0x140001d86
   140001d76:	mov    ecx,ebx
   140001d78:	call   0x140001568
   140001d7d:	jmp    0x140001d86
   140001d7f:	mov    ecx,ebx
   140001d81:	call   0x14000154c
   140001d86:	mov    edi,eax
   140001d88:	mov    rsi,QWORD PTR [rsp+0xf0]
   140001d90:	mov    DWORD PTR [rsi],r14d
   140001d93:	mov    r14d,0x1
   140001d99:	mov    eax,r14d
   140001d9c:	mov    DWORD PTR [rsi+0x4],ebx
   140001d9f:	lock xadd DWORD PTR [rip+0x8a2d],eax        # 0x14000a7d4
   140001da7:	add    eax,r14d
   140001daa:	xor    ecx,ecx
   140001dac:	mov    DWORD PTR [rsi+0x8],eax
   140001daf:	mov    rax,QWORD PTR [rsp+0xc0]
   140001db7:	test   rax,rax
   140001dba:	je     0x140001dc1
   140001dbc:	cmp    WORD PTR [rax],cx
   140001dbf:	jne    0x140001dc4
   140001dc1:	mov    rax,rcx
   140001dc4:	mov    QWORD PTR [rsi+0x10],rax
   140001dc8:	call   QWORD PTR [rip+0x42e2]        # 0x1400060b0
   140001dce:	mov    rbx,QWORD PTR [rip+0x89c3]        # 0x14000a798
   140001dd5:	mov    DWORD PTR [rsi+0x18],eax
   140001dd8:	mov    eax,DWORD PTR [rsp+0x88]
   140001ddf:	mov    DWORD PTR [rsi+0x38],eax
   140001de2:	mov    rax,QWORD PTR [rsp+0xa0]
   140001dea:	mov    QWORD PTR [rsi+0x20],rax
   140001dee:	mov    rax,QWORD PTR [rsp+0xa8]
   140001df6:	mov    QWORD PTR [rsi+0x80],rax
   140001dfd:	mov    rax,QWORD PTR [rsp+0x80]
   140001e05:	mov    QWORD PTR [rsi+0x30],r13
   140001e09:	xor    r13d,r13d
   140001e0c:	mov    QWORD PTR [rsi+0x88],rax
   140001e13:	mov    DWORD PTR [rsi+0x3c],edi
   140001e16:	mov    QWORD PTR [rsi+0x28],r12
   140001e1a:	mov    QWORD PTR [rsi+0x40],r13
   140001e1e:	mov    DWORD PTR [rsi+0x60],r13d
   140001e22:	mov    QWORD PTR [rsi+0x68],r13
   140001e26:	mov    QWORD PTR [rsi+0x70],r13
   140001e2a:	mov    DWORD PTR [rsi+0x48],r13d
   140001e2e:	mov    QWORD PTR [rsi+0x50],r13
   140001e32:	mov    QWORD PTR [rsi+0x58],r13
   140001e36:	test   rbx,rbx
   140001e39:	je     0x140001e48
   140001e3b:	mov    rcx,rbx
   140001e3e:	call   QWORD PTR [rip+0x44cc]        # 0x140006310
   140001e44:	call   rbx
   140001e46:	jmp    0x140001e4b
   140001e48:	mov    rax,r13
   140001e4b:	mov    QWORD PTR [rsi+0x78],rax
   140001e4f:	mov    r12b,r13b
   140001e52:	mov    BYTE PTR [rbp+0x0],r13b
   140001e56:	call   QWORD PTR [rip+0x4254]        # 0x1400060b0
   140001e5c:	mov    r8d,eax
   140001e5f:	lea    rbx,[rip+0x89fa]        # 0x14000a860
   140001e66:	mov    r9d,eax
   140001e69:	movabs rax,0xcccccccccccccccd
   140001e73:	mul    r9
   140001e76:	shr    rdx,0x4
   140001e7a:	lea    rcx,[rdx+rdx*4]
   140001e7e:	shl    rcx,0x2
   140001e82:	sub    r8,rcx
   140001e85:	mov    rbx,QWORD PTR [rbx+r8*8]
   140001e89:	jmp    0x140001e95
   140001e8b:	cmp    DWORD PTR [rbx+0x8],r9d
   140001e8f:	je     0x140001e9d
   140001e91:	mov    rbx,QWORD PTR [rbx+0x10]
   140001e95:	test   rbx,rbx
   140001e98:	jne    0x140001e8b
   140001e9a:	mov    rbx,r13
   140001e9d:	test   rbx,rbx
   140001ea0:	je     0x140001ef1
   140001ea2:	cmp    QWORD PTR [rbx],r13
   140001ea5:	je     0x140001ef1
   140001ea7:	mov    BYTE PTR [rbp+0x0],r13b
   140001eab:	mov    r9d,0x400
   140001eb1:	mov    rdx,QWORD PTR [rbx]
   140001eb4:	mov    r8,rbp
   140001eb7:	mov    rcx,rsi
   140001eba:	call   0x1400017d0
   140001ebf:	test   al,al
   140001ec1:	je     0x140001ec7
   140001ec3:	mov    QWORD PTR [rsi+0x40],rbp
   140001ec7:	mov    rbp,QWORD PTR [rbx]
   140001eca:	mov    rdi,QWORD PTR [rbp+0x8]
   140001ece:	mov    rax,QWORD PTR [rdi]
   140001ed1:	mov    rbx,QWORD PTR [rax]
   140001ed4:	mov    rcx,rbx
   140001ed7:	call   QWORD PTR [rip+0x4433]        # 0x140006310
   140001edd:	mov    rdx,rsi
   140001ee0:	mov    rcx,rdi
   140001ee3:	call   rbx
   140001ee5:	mov    rbp,QWORD PTR [rbp+0x10]
   140001ee9:	or     r12b,al
   140001eec:	test   rbp,rbp
   140001eef:	jne    0x140001eca
   140001ef1:	mov    rdi,QWORD PTR [rip+0x8880]        # 0x14000a778
   140001ef8:	test   rdi,rdi
   140001efb:	je     0x140001f15
   140001efd:	mov    rcx,rdi
   140001f00:	call   QWORD PTR [rip+0x440a]        # 0x140006310
   140001f06:	mov    rdx,rsi
   140001f09:	mov    cl,r12b
   140001f0c:	call   rdi
   140001f0e:	mov    rdi,QWORD PTR [rip+0x8863]        # 0x14000a778
   140001f15:	mov    rbx,QWORD PTR [rip+0x8854]        # 0x14000a770
   140001f1c:	test   rbx,rbx
   140001f1f:	je     0x140001f36
   140001f21:	mov    rcx,rbx
   140001f24:	call   QWORD PTR [rip+0x43e6]        # 0x140006310
   140001f2a:	mov    rcx,rsi
   140001f2d:	call   rbx
   140001f2f:	mov    rdi,QWORD PTR [rip+0x8842]        # 0x14000a778
   140001f36:	cmp    DWORD PTR [rsi+0x4],r13d
   140001f3a:	jl     0x140001f4a
   140001f3c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140001f44:	jne    0x140001ff1
   140001f4a:	cmp    BYTE PTR [rip+0x8850],r13b        # 0x14000a7a1
   140001f51:	mov    rbx,QWORD PTR [rip+0x8850]        # 0x14000a7a8
   140001f58:	jne    0x140001f67
   140001f5a:	test   rdi,rdi
   140001f5d:	jne    0x140001f64
   140001f5f:	test   rbx,rbx
   140001f62:	je     0x140001f67
   140001f64:	mov    r14b,r13b
   140001f67:	cmp    BYTE PTR [rsp+0xc8],r13b
   140001f6f:	jne    0x140001f99
   140001f71:	test   r14b,r14b
   140001f74:	jne    0x140001f99
   140001f76:	test   rbx,rbx
   140001f79:	je     0x140001fd9
   140001f7b:	cmp    BYTE PTR [rip+0x881e],r13b        # 0x14000a7a0
   140001f82:	jne    0x140001fd9
   140001f84:	mov    rcx,rbx
   140001f87:	call   QWORD PTR [rip+0x4383]        # 0x140006310
   140001f8d:	xor    r8d,r8d
   140001f90:	xor    edx,edx
   140001f92:	mov    rcx,rsi
   140001f95:	call   rbx
   140001f97:	jmp    0x140001fd9
   140001f99:	mov    edi,0x800
   140001f9e:	test   rbx,rbx
   140001fa1:	je     0x140001fb7
   140001fa3:	mov    rcx,rbx
   140001fa6:	call   QWORD PTR [rip+0x4364]        # 0x140006310
   140001fac:	mov    r8d,edi
   140001faf:	mov    rdx,r15
   140001fb2:	mov    rcx,rsi
   140001fb5:	call   rbx
   140001fb7:	cmp    WORD PTR [r15],r13w
   140001fbb:	jne    0x140001fcb
   140001fbd:	mov    r8,rsi
   140001fc0:	mov    rdx,rdi
   140001fc3:	mov    rcx,r15
   140001fc6:	call   0x140001318
   140001fcb:	test   r14b,r14b
   140001fce:	je     0x140001fd9
   140001fd0:	mov    rcx,r15
   140001fd3:	call   QWORD PTR [rip+0x408f]        # 0x140006068
   140001fd9:	mov    rbx,QWORD PTR [rsp+0x90]
   140001fe1:	add    rsp,0x40
   140001fe5:	pop    r15
   140001fe7:	pop    r14
   140001fe9:	pop    r13
   140001feb:	pop    r12
   140001fed:	pop    rdi
   140001fee:	pop    rsi
   140001fef:	pop    rbp
   140001ff0:	ret    
   140001ff1:	mov    rcx,QWORD PTR [rsp+0x78]
   140001ff6:	lea    r8,[rip+0x5b0b]        # 0x140007b08
   140001ffd:	mov    edx,0xb46
   140002002:	call   0x140002354
   140002007:	int3   
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	rex push rbx
   140002012:	push   rdi
   140002013:	mov    eax,0x15c8
   140002018:	call   0x140005010
   14000201d:	sub    rsp,rax
   140002020:	mov    rax,QWORD PTR [rip+0x7fe1]        # 0x14000a008
   140002027:	xor    rax,rsp
   14000202a:	mov    QWORD PTR [rsp+0x15b0],rax
   140002032:	mov    edi,DWORD PTR [rsp+0x1610]
   140002039:	mov    r10,QWORD PTR [rsp+0x1600]
   140002041:	mov    r11,QWORD PTR [rsp+0x1608]
   140002049:	test   edi,edi
   14000204b:	jne    0x14000205b
   14000204d:	cmp    QWORD PTR [rip+0x872b],0x0        # 0x14000a780
   140002055:	je     0x14000205b
   140002057:	mov    bl,0x1
   140002059:	jmp    0x14000205d
   14000205b:	xor    bl,bl
   14000205d:	lea    rax,[rsp+0x80]
   140002065:	mov    QWORD PTR [rsp+0x70],rax
   14000206a:	lea    rax,[rsp+0x1b0]
   140002072:	mov    QWORD PTR [rsp+0x60],rax
   140002077:	lea    rax,[rsp+0x5b0]
   14000207f:	mov    QWORD PTR [rsp+0x50],rax
   140002084:	mov    eax,DWORD PTR [rsp+0x1618]
   14000208b:	mov    BYTE PTR [rsp+0x48],bl
   14000208f:	and    QWORD PTR [rsp+0x40],0x0
   140002095:	mov    DWORD PTR [rsp+0x38],eax
   140002099:	mov    DWORD PTR [rsp+0x30],edi
   14000209d:	mov    QWORD PTR [rsp+0x28],r11
   1400020a2:	mov    QWORD PTR [rsp+0x20],r10
   1400020a7:	call   0x140001cb4
   1400020ac:	cmp    edi,0x4
   1400020af:	jne    0x1400020d0
   1400020b1:	lea    ecx,[rdi+0x3]
   1400020b4:	int    0x29
   1400020b6:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400020be:	xor    rcx,rsp
   1400020c1:	call   0x140003f10
   1400020c6:	add    rsp,0x15c8
   1400020cd:	pop    rdi
   1400020ce:	pop    rbx
   1400020cf:	ret    
   1400020d0:	test   edi,edi
   1400020d2:	jne    0x1400020b6
   1400020d4:	test   bl,bl
   1400020d6:	je     0x1400020fa
   1400020d8:	mov    rbx,QWORD PTR [rip+0x86a1]        # 0x14000a780
   1400020df:	mov    rcx,rbx
   1400020e2:	call   QWORD PTR [rip+0x4228]        # 0x140006310
   1400020e8:	lea    rdx,[rsp+0x5b0]
   1400020f0:	lea    rcx,[rsp+0x80]
   1400020f8:	call   rbx
   1400020fa:	lea    rdx,[rsp+0x80]
   140002102:	lea    rcx,[rsp+0x110]
   14000210a:	call   0x140001c84
   14000210f:	lea    rdx,[rip+0x6aba]        # 0x140008bd0
   140002116:	lea    rcx,[rsp+0x110]
   14000211e:	call   0x140004f2c
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	rex push rbx
   14000212e:	sub    rsp,0x20
   140002132:	mov    rbx,rcx
   140002135:	mov    rcx,QWORD PTR [rcx+0x90]
   14000213c:	test   rcx,rcx
   14000213f:	je     0x14000216a
   140002141:	or     eax,0xffffffff
   140002144:	lock xadd DWORD PTR [rcx],eax
   140002148:	cmp    eax,0x1
   14000214b:	jne    0x14000215a
   14000214d:	mov    rcx,QWORD PTR [rbx+0x90]
   140002154:	call   QWORD PTR [rip+0x414e]        # 0x1400062a8
   14000215a:	and    QWORD PTR [rbx+0x90],0x0
   140002162:	and    QWORD PTR [rbx+0x98],0x0
   14000216a:	add    rsp,0x20
   14000216e:	pop    rbx
   14000216f:	ret    
   140002170:	int3   
   140002171:	int3   
   140002172:	int3   
   140002173:	int3   
   140002174:	int3   
   140002175:	int3   
   140002176:	int3   
   140002177:	int3   
   140002178:	movups xmm0,XMMWORD PTR [rdx]
   14000217b:	mov    r9d,0x80
   140002181:	movups XMMWORD PTR [rcx],xmm0
   140002184:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002188:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000218c:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002190:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002194:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002198:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000219c:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400021a0:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400021a4:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400021a8:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400021ac:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400021b0:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400021b4:	movups xmm0,XMMWORD PTR [rdx+0x70]
   1400021b8:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   1400021be:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   1400021c3:	movups XMMWORD PTR [rcx+r9*1],xmm1
   1400021c8:	and    QWORD PTR [rcx+0x90],0x0
   1400021d0:	and    QWORD PTR [rcx+0x98],0x0
   1400021d8:	mov    rax,QWORD PTR [rdx+0x90]
   1400021df:	mov    r8,QWORD PTR [rdx+0x98]
   1400021e6:	test   rax,rax
   1400021e9:	je     0x1400021fc
   1400021eb:	mov    QWORD PTR [rcx+0x90],rax
   1400021f2:	mov    QWORD PTR [rcx+0x98],r8
   1400021f9:	lock inc DWORD PTR [rax]
   1400021fc:	mov    rax,rcx
   1400021ff:	ret    
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	sub    rsp,0x58
   14000220c:	mov    eax,DWORD PTR [rsp+0x98]
   140002213:	mov    DWORD PTR [rsp+0x38],eax
   140002217:	mov    eax,DWORD PTR [rsp+0x90]
   14000221e:	mov    DWORD PTR [rsp+0x30],eax
   140002222:	mov    rax,QWORD PTR [rsp+0x88]
   14000222a:	mov    QWORD PTR [rsp+0x28],rax
   14000222f:	mov    rax,QWORD PTR [rsp+0x80]
   140002237:	mov    QWORD PTR [rsp+0x20],rax
   14000223c:	call   0x140002010
   140002241:	add    rsp,0x58
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	mov    QWORD PTR [rsp+0x8],rbx
   140002251:	mov    QWORD PTR [rsp+0x10],rsi
   140002256:	push   rdi
   140002257:	sub    rsp,0x50
   14000225b:	mov    rdi,rcx
   14000225e:	call   QWORD PTR [rip+0x3e2c]        # 0x140006090
   140002264:	mov    rsi,QWORD PTR [rsp+0x88]
   14000226c:	test   eax,eax
   14000226e:	jne    0x1400022a5
   140002270:	mov    DWORD PTR [rsp+0x38],0x8007029c
   140002278:	lea    r8,[rip+0x5939]        # 0x140007bb8
   14000227f:	mov    DWORD PTR [rsp+0x30],0x3
   140002287:	lea    edx,[rax+0x39]
   14000228a:	mov    QWORD PTR [rsp+0x28],rsi
   14000228f:	xor    r9d,r9d
   140002292:	and    QWORD PTR [rsp+0x20],0x0
   140002298:	mov    rcx,rdi
   14000229b:	call   0x140002208
   1400022a0:	mov    eax,0x29c
   1400022a5:	movzx  ebx,ax
   1400022a8:	lea    r8,[rip+0x5909]        # 0x140007bb8
   1400022af:	or     ebx,0x80070000
   1400022b5:	mov    rcx,rdi
   1400022b8:	test   eax,eax
   1400022ba:	cmovle ebx,eax
   1400022bd:	xor    r9d,r9d
   1400022c0:	mov    DWORD PTR [rsp+0x38],ebx
   1400022c4:	mov    DWORD PTR [rsp+0x30],0x2
   1400022cc:	mov    QWORD PTR [rsp+0x28],rsi
   1400022d1:	and    QWORD PTR [rsp+0x20],0x0
   1400022d7:	lea    edx,[r9+0x39]
   1400022db:	call   0x140002010
   1400022e0:	mov    rsi,QWORD PTR [rsp+0x68]
   1400022e5:	mov    eax,ebx
   1400022e7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400022ec:	add    rsp,0x50
   1400022f0:	pop    rdi
   1400022f1:	ret    
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	int3   
   1400022f5:	int3   
   1400022f6:	int3   
   1400022f7:	int3   
   1400022f8:	sub    rsp,0x48
   1400022fc:	mov    rax,QWORD PTR [rsp+0x48]
   140002301:	lea    r8,[rip+0x58b0]        # 0x140007bb8
   140002308:	mov    DWORD PTR [rsp+0x38],r9d
   14000230d:	xor    r9d,r9d
   140002310:	mov    DWORD PTR [rsp+0x30],0x2
   140002318:	mov    QWORD PTR [rsp+0x28],rax
   14000231d:	and    QWORD PTR [rsp+0x20],0x0
   140002323:	call   0x140002208
   140002328:	add    rsp,0x48
   14000232c:	ret    
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	int3   
   140002331:	int3   
   140002332:	int3   
   140002333:	int3   
   140002334:	sub    rsp,0x48
   140002338:	mov    rax,QWORD PTR [rsp+0x48]
   14000233d:	mov    QWORD PTR [rsp+0x28],rax
   140002342:	call   0x14000224c
   140002347:	add    rsp,0x48
   14000234b:	ret    
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	int3   
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	sub    rsp,0x48
   140002358:	mov    rax,QWORD PTR [rsp+0x48]
   14000235d:	xor    r9d,r9d
   140002360:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140002368:	mov    DWORD PTR [rsp+0x30],0x4
   140002370:	mov    QWORD PTR [rsp+0x28],rax
   140002375:	and    QWORD PTR [rsp+0x20],0x0
   14000237b:	call   0x140002208
   140002380:	add    rsp,0x48
   140002384:	ret    
   140002385:	int3   
   140002386:	int3   
   140002387:	int3   
   140002388:	int3   
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	sub    rsp,0x28
   140002390:	mov    rcx,QWORD PTR [rcx]
   140002393:	test   rcx,rcx
   140002396:	je     0x14000239e
   140002398:	call   QWORD PTR [rip+0x3d42]        # 0x1400060e0
   14000239e:	add    rsp,0x28
   1400023a2:	ret    
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    rax,rsp
   1400023b3:	mov    QWORD PTR [rax+0x8],rbx
   1400023b7:	mov    QWORD PTR [rax+0x10],rbp
   1400023bb:	mov    QWORD PTR [rax+0x18],rsi
   1400023bf:	mov    QWORD PTR [rax+0x20],rdi
   1400023c3:	push   r14
   1400023c5:	sub    rsp,0x40
   1400023c9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400023cd:	mov    esi,r9d
   1400023d0:	mov    rbp,r8
   1400023d3:	mov    r14,rdx
   1400023d6:	test   rdi,rdi
   1400023d9:	je     0x14000241a
   1400023db:	mov    rax,QWORD PTR [rdi]
   1400023de:	mov    rbx,QWORD PTR [rax+0x18]
   1400023e2:	mov    rcx,rbx
   1400023e5:	call   QWORD PTR [rip+0x3f25]        # 0x140006310
   1400023eb:	mov    rax,QWORD PTR [rsp+0x80]
   1400023f3:	mov    r9d,esi
   1400023f6:	mov    QWORD PTR [rsp+0x30],rax
   1400023fb:	mov    r8,rbp
   1400023fe:	mov    eax,DWORD PTR [rsp+0x78]
   140002402:	mov    rdx,r14
   140002405:	mov    DWORD PTR [rsp+0x28],eax
   140002409:	mov    rcx,rdi
   14000240c:	mov    rax,QWORD PTR [rsp+0x70]
   140002411:	mov    QWORD PTR [rsp+0x20],rax
   140002416:	call   rbx
   140002418:	jmp    0x14000241f
   14000241a:	mov    eax,0x8007000e
   14000241f:	mov    rbx,QWORD PTR [rsp+0x50]
   140002424:	mov    rbp,QWORD PTR [rsp+0x58]
   140002429:	mov    rsi,QWORD PTR [rsp+0x60]
   14000242e:	mov    rdi,QWORD PTR [rsp+0x68]
   140002433:	add    rsp,0x40
   140002437:	pop    r14
   140002439:	ret    
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    rax,rsp
   140002443:	mov    QWORD PTR [rax+0x8],rbx
   140002447:	mov    QWORD PTR [rax+0x10],rbp
   14000244b:	mov    QWORD PTR [rax+0x18],rsi
   14000244f:	mov    QWORD PTR [rax+0x20],rdi
   140002453:	push   r14
   140002455:	sub    rsp,0x40
   140002459:	mov    rdi,QWORD PTR [rcx+0x10]
   14000245d:	mov    esi,r9d
   140002460:	mov    rbp,r8
   140002463:	mov    r14,rdx
   140002466:	test   rdi,rdi
   140002469:	je     0x1400024aa
   14000246b:	mov    rax,QWORD PTR [rdi]
   14000246e:	mov    rbx,QWORD PTR [rax+0x20]
   140002472:	mov    rcx,rbx
   140002475:	call   QWORD PTR [rip+0x3e95]        # 0x140006310
   14000247b:	mov    rax,QWORD PTR [rsp+0x80]
   140002483:	mov    r9d,esi
   140002486:	mov    QWORD PTR [rsp+0x30],rax
   14000248b:	mov    r8,rbp
   14000248e:	mov    eax,DWORD PTR [rsp+0x78]
   140002492:	mov    rdx,r14
   140002495:	mov    DWORD PTR [rsp+0x28],eax
   140002499:	mov    rcx,rdi
   14000249c:	mov    rax,QWORD PTR [rsp+0x70]
   1400024a1:	mov    QWORD PTR [rsp+0x20],rax
   1400024a6:	call   rbx
   1400024a8:	jmp    0x1400024af
   1400024aa:	mov    eax,0x8007000e
   1400024af:	mov    rbx,QWORD PTR [rsp+0x50]
   1400024b4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400024b9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400024be:	mov    rdi,QWORD PTR [rsp+0x68]
   1400024c3:	add    rsp,0x40
   1400024c7:	pop    r14
   1400024c9:	ret    
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    rax,rsp
   1400024d3:	mov    QWORD PTR [rax+0x8],rbx
   1400024d7:	mov    QWORD PTR [rax+0x10],rbp
   1400024db:	mov    QWORD PTR [rax+0x18],rsi
   1400024df:	mov    QWORD PTR [rax+0x20],rdi
   1400024e3:	push   r14
   1400024e5:	sub    rsp,0x40
   1400024e9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400024ed:	mov    rsi,r9
   1400024f0:	mov    rbp,r8
   1400024f3:	mov    r14,rdx
   1400024f6:	test   rdi,rdi
   1400024f9:	je     0x140002538
   1400024fb:	mov    rax,QWORD PTR [rdi]
   1400024fe:	mov    rbx,QWORD PTR [rax+0x28]
   140002502:	mov    rcx,rbx
   140002505:	call   QWORD PTR [rip+0x3e05]        # 0x140006310
   14000250b:	mov    eax,DWORD PTR [rsp+0x80]
   140002512:	mov    r9,rsi
   140002515:	mov    DWORD PTR [rsp+0x30],eax
   140002519:	mov    r8,rbp
   14000251c:	mov    rax,QWORD PTR [rsp+0x78]
   140002521:	mov    rdx,r14
   140002524:	mov    QWORD PTR [rsp+0x28],rax
   140002529:	mov    rcx,rdi
   14000252c:	mov    eax,DWORD PTR [rsp+0x70]
   140002530:	mov    DWORD PTR [rsp+0x20],eax
   140002534:	call   rbx
   140002536:	jmp    0x14000253d
   140002538:	mov    eax,0x8007000e
   14000253d:	mov    rbx,QWORD PTR [rsp+0x50]
   140002542:	mov    rbp,QWORD PTR [rsp+0x58]
   140002547:	mov    rsi,QWORD PTR [rsp+0x60]
   14000254c:	mov    rdi,QWORD PTR [rsp+0x68]
   140002551:	add    rsp,0x40
   140002555:	pop    r14
   140002557:	ret    
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,rsp
   140002563:	mov    QWORD PTR [rax+0x8],rbx
   140002567:	mov    QWORD PTR [rax+0x10],rbp
   14000256b:	mov    QWORD PTR [rax+0x18],rsi
   14000256f:	mov    QWORD PTR [rax+0x20],rdi
   140002573:	push   r14
   140002575:	sub    rsp,0x20
   140002579:	mov    rdi,QWORD PTR [rcx+0x10]
   14000257d:	mov    rsi,r9
   140002580:	mov    rbp,r8
   140002583:	mov    r14,rdx
   140002586:	test   rdi,rdi
   140002589:	je     0x1400025ab
   14000258b:	mov    rax,QWORD PTR [rdi]
   14000258e:	mov    rbx,QWORD PTR [rax+0x30]
   140002592:	mov    rcx,rbx
   140002595:	call   QWORD PTR [rip+0x3d75]        # 0x140006310
   14000259b:	mov    r9,rsi
   14000259e:	mov    r8,rbp
   1400025a1:	mov    rdx,r14
   1400025a4:	mov    rcx,rdi
   1400025a7:	call   rbx
   1400025a9:	jmp    0x1400025b0
   1400025ab:	mov    eax,0x8007000e
   1400025b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025b5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400025ba:	mov    rsi,QWORD PTR [rsp+0x40]
   1400025bf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400025c4:	add    rsp,0x20
   1400025c8:	pop    r14
   1400025ca:	ret    
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	int3   
   1400025d1:	int3   
   1400025d2:	int3   
   1400025d3:	int3   
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025ea:	push   rdi
   1400025eb:	sub    rsp,0x20
   1400025ef:	mov    rdi,QWORD PTR [rcx+0x10]
   1400025f3:	mov    rsi,rdx
   1400025f6:	test   rdi,rdi
   1400025f9:	je     0x140002615
   1400025fb:	mov    rax,QWORD PTR [rdi]
   1400025fe:	mov    rbx,QWORD PTR [rax+0x38]
   140002602:	mov    rcx,rbx
   140002605:	call   QWORD PTR [rip+0x3d05]        # 0x140006310
   14000260b:	mov    rdx,rsi
   14000260e:	mov    rcx,rdi
   140002611:	call   rbx
   140002613:	jmp    0x14000261a
   140002615:	mov    eax,0x8007000e
   14000261a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000261f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002624:	add    rsp,0x20
   140002628:	pop    rdi
   140002629:	ret    
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	mov    QWORD PTR [rsp+0x10],rsi
   14000263a:	push   rdi
   14000263b:	sub    rsp,0x20
   14000263f:	mov    rdi,QWORD PTR [rcx+0x10]
   140002643:	mov    esi,edx
   140002645:	test   rdi,rdi
   140002648:	je     0x140002663
   14000264a:	mov    rax,QWORD PTR [rdi]
   14000264d:	mov    rbx,QWORD PTR [rax+0x40]
   140002651:	mov    rcx,rbx
   140002654:	call   QWORD PTR [rip+0x3cb6]        # 0x140006310
   14000265a:	mov    edx,esi
   14000265c:	mov    rcx,rdi
   14000265f:	call   rbx
   140002661:	jmp    0x140002668
   140002663:	mov    eax,0x8007000e
   140002668:	mov    rbx,QWORD PTR [rsp+0x30]
   14000266d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002672:	add    rsp,0x20
   140002676:	pop    rdi
   140002677:	ret    
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	ret    0x0
   140002683:	int3   
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x28
   140002694:	test   dl,dl
   140002696:	jne    0x1400026b8
   140002698:	cmp    DWORD PTR [rcx+0x14],0x1
   14000269c:	jne    0x1400026aa
   14000269e:	mov    rdx,r8
   1400026a1:	add    rsp,0x28
   1400026a5:	jmp    0x1400026c4
   1400026aa:	cmp    DWORD PTR [rcx+0x14],0x2
   1400026ae:	jne    0x1400026b8
   1400026b0:	mov    rdx,r8
   1400026b3:	call   0x14000295c
   1400026b8:	add    rsp,0x28
   1400026bc:	ret    
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	int3   
   1400026c1:	int3   
   1400026c2:	int3   
   1400026c3:	int3   
   1400026c4:	mov    rax,rsp
   1400026c7:	mov    QWORD PTR [rax+0x10],rbx
   1400026cb:	mov    QWORD PTR [rax+0x18],rsi
   1400026cf:	mov    QWORD PTR [rax+0x20],rdi
   1400026d3:	push   rbp
   1400026d4:	lea    rbp,[rax-0x68]
   1400026d8:	sub    rsp,0x160
   1400026df:	mov    rax,QWORD PTR [rip+0x7922]        # 0x14000a008
   1400026e6:	xor    rax,rsp
   1400026e9:	mov    QWORD PTR [rbp+0x50],rax
   1400026ed:	mov    r9,QWORD PTR [rcx+0x8]
   1400026f1:	cmp    DWORD PTR [r9],0x5
   1400026f5:	jbe    0x140002931
   1400026fb:	movabs rcx,0x200000000000
   140002705:	test   QWORD PTR [r9+0x10],rcx
   140002709:	je     0x140002931
   14000270f:	mov    rax,QWORD PTR [r9+0x18]
   140002713:	and    rax,rcx
   140002716:	cmp    rax,QWORD PTR [r9+0x18]
   14000271a:	jne    0x140002931
   140002720:	mov    eax,DWORD PTR [rdx+0x4]
   140002723:	lea    r10,[rip+0x5212]        # 0x14000793c
   14000272a:	mov    rcx,QWORD PTR [rdx+0x30]
   14000272e:	xor    ebx,ebx
   140002730:	mov    DWORD PTR [rsp+0x40],eax
   140002734:	or     rdi,0xffffffffffffffff
   140002738:	mov    QWORD PTR [rsp+0x78],0x4
   140002741:	lea    rax,[rsp+0x40]
   140002746:	mov    QWORD PTR [rsp+0x70],rax
   14000274b:	mov    eax,ebx
   14000274d:	mov    r8,r10
   140002750:	test   rcx,rcx
   140002753:	je     0x140002763
   140002755:	mov    r8,rcx
   140002758:	mov    rax,rdi
   14000275b:	inc    rax
   14000275e:	cmp    BYTE PTR [rcx+rax*1],bl
   140002761:	jne    0x14000275b
   140002763:	mov    rcx,QWORD PTR [rdx+0x78]
   140002767:	inc    eax
   140002769:	mov    DWORD PTR [rbp-0x78],eax
   14000276c:	lea    rax,[rdx+0x38]
   140002770:	mov    QWORD PTR [rbp-0x70],rax
   140002774:	mov    rax,rbx
   140002777:	mov    QWORD PTR [rbp-0x80],r8
   14000277b:	mov    r8,r10
   14000277e:	mov    DWORD PTR [rbp-0x74],ebx
   140002781:	mov    QWORD PTR [rbp-0x68],0x4
   140002789:	test   rcx,rcx
   14000278c:	je     0x14000279c
   14000278e:	mov    r8,rcx
   140002791:	mov    rax,rdi
   140002794:	inc    rax
   140002797:	cmp    BYTE PTR [rcx+rax*1],bl
   14000279a:	jne    0x140002794
   14000279c:	mov    rcx,QWORD PTR [rdx+0x10]
   1400027a0:	lea    r11,[rip+0x5199]        # 0x140007940
   1400027a7:	inc    eax
   1400027a9:	mov    QWORD PTR [rbp-0x60],r8
   1400027ad:	mov    DWORD PTR [rbp-0x58],eax
   1400027b0:	mov    r8,r11
   1400027b3:	mov    eax,DWORD PTR [rdx]
   1400027b5:	mov    DWORD PTR [rsp+0x38],eax
   1400027b9:	lea    rax,[rsp+0x38]
   1400027be:	mov    QWORD PTR [rbp-0x50],rax
   1400027c2:	mov    rax,rbx
   1400027c5:	mov    DWORD PTR [rbp-0x54],ebx
   1400027c8:	mov    QWORD PTR [rbp-0x48],0x4
   1400027d0:	test   rcx,rcx
   1400027d3:	je     0x1400027e4
   1400027d5:	mov    r8,rcx
   1400027d8:	mov    rax,rdi
   1400027db:	inc    rax
   1400027de:	cmp    WORD PTR [rcx+rax*2],bx
   1400027e2:	jne    0x1400027db
   1400027e4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400027e8:	lea    eax,[rax*2+0x2]
   1400027ef:	mov    DWORD PTR [rbp-0x38],eax
   1400027f2:	mov    eax,DWORD PTR [rdx+0x18]
   1400027f5:	mov    DWORD PTR [rsp+0x30],eax
   1400027f9:	lea    rax,[rsp+0x30]
   1400027fe:	mov    QWORD PTR [rbp-0x30],rax
   140002802:	mov    rax,rbx
   140002805:	mov    QWORD PTR [rbp-0x40],r8
   140002809:	mov    r8,r10
   14000280c:	mov    DWORD PTR [rbp-0x34],ebx
   14000280f:	mov    QWORD PTR [rbp-0x28],0x4
   140002817:	test   rcx,rcx
   14000281a:	je     0x14000282a
   14000281c:	mov    r8,rcx
   14000281f:	mov    rax,rdi
   140002822:	inc    rax
   140002825:	cmp    BYTE PTR [rcx+rax*1],bl
   140002828:	jne    0x140002822
   14000282a:	mov    rcx,QWORD PTR [rdx+0x50]
   14000282e:	inc    eax
   140002830:	mov    DWORD PTR [rbp-0x18],eax
   140002833:	mov    eax,DWORD PTR [rdx+0x48]
   140002836:	mov    DWORD PTR [rsp+0x34],eax
   14000283a:	lea    rax,[rsp+0x34]
   14000283f:	mov    QWORD PTR [rbp-0x10],rax
   140002843:	mov    rax,rbx
   140002846:	mov    QWORD PTR [rbp-0x20],r8
   14000284a:	mov    r8,r10
   14000284d:	mov    DWORD PTR [rbp-0x14],ebx
   140002850:	mov    QWORD PTR [rbp-0x8],0x4
   140002858:	test   rcx,rcx
   14000285b:	je     0x14000286b
   14000285d:	mov    r8,rcx
   140002860:	mov    rax,rdi
   140002863:	inc    rax
   140002866:	cmp    BYTE PTR [rcx+rax*1],bl
   140002869:	jne    0x140002863
   14000286b:	mov    rcx,QWORD PTR [rdx+0x58]
   14000286f:	inc    eax
   140002871:	mov    DWORD PTR [rbp+0x8],eax
   140002874:	mov    rax,rbx
   140002877:	mov    QWORD PTR [rbp+0x0],r8
   14000287b:	mov    r8,r11
   14000287e:	mov    DWORD PTR [rbp+0xc],ebx
   140002881:	test   rcx,rcx
   140002884:	je     0x140002895
   140002886:	mov    r8,rcx
   140002889:	mov    rax,rdi
   14000288c:	inc    rax
   14000288f:	cmp    WORD PTR [rcx+rax*2],bx
   140002893:	jne    0x14000288c
   140002895:	mov    rcx,QWORD PTR [rdx+0x68]
   140002899:	lea    eax,[rax*2+0x2]
   1400028a0:	mov    DWORD PTR [rbp+0x18],eax
   1400028a3:	mov    eax,DWORD PTR [rdx+0x60]
   1400028a6:	mov    DWORD PTR [rsp+0x3c],eax
   1400028aa:	lea    rax,[rsp+0x3c]
   1400028af:	mov    QWORD PTR [rbp+0x20],rax
   1400028b3:	mov    rax,rbx
   1400028b6:	mov    QWORD PTR [rbp+0x10],r8
   1400028ba:	mov    DWORD PTR [rbp+0x1c],ebx
   1400028bd:	mov    QWORD PTR [rbp+0x28],0x4
   1400028c5:	test   rcx,rcx
   1400028c8:	je     0x1400028d8
   1400028ca:	mov    r10,rcx
   1400028cd:	mov    rax,rdi
   1400028d0:	inc    rax
   1400028d3:	cmp    BYTE PTR [rcx+rax*1],bl
   1400028d6:	jne    0x1400028d0
   1400028d8:	mov    rcx,QWORD PTR [rdx+0x70]
   1400028dc:	inc    eax
   1400028de:	mov    DWORD PTR [rbp+0x38],eax
   1400028e1:	mov    rax,rbx
   1400028e4:	mov    QWORD PTR [rbp+0x30],r10
   1400028e8:	mov    DWORD PTR [rbp+0x3c],ebx
   1400028eb:	test   rcx,rcx
   1400028ee:	je     0x1400028ff
   1400028f0:	mov    r11,rcx
   1400028f3:	mov    rax,rdi
   1400028f6:	inc    rax
   1400028f9:	cmp    WORD PTR [rcx+rax*2],bx
   1400028fd:	jne    0x1400028f6
   1400028ff:	lea    eax,[rax*2+0x2]
   140002906:	mov    QWORD PTR [rbp+0x40],r11
   14000290a:	mov    DWORD PTR [rbp+0x48],eax
   14000290d:	mov    DWORD PTR [rbp+0x4c],ebx
   140002910:	lea    rax,[rsp+0x50]
   140002915:	mov    rcx,r9
   140002918:	mov    QWORD PTR [rsp+0x28],rax
   14000291d:	lea    rdx,[rip+0x565d]        # 0x140007f81
   140002924:	mov    DWORD PTR [rsp+0x20],0x10
   14000292c:	call   0x1400010dc
   140002931:	mov    rcx,QWORD PTR [rbp+0x50]
   140002935:	xor    rcx,rsp
   140002938:	call   0x140003f10
   14000293d:	lea    r11,[rsp+0x160]
   140002945:	mov    rbx,QWORD PTR [r11+0x18]
   140002949:	mov    rsi,QWORD PTR [r11+0x20]
   14000294d:	mov    rdi,QWORD PTR [r11+0x28]
   140002951:	mov    rsp,r11
   140002954:	pop    rbp
   140002955:	ret    
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	mov    rax,rsp
   14000295f:	mov    QWORD PTR [rax+0x10],rbx
   140002963:	mov    QWORD PTR [rax+0x18],rsi
   140002967:	mov    QWORD PTR [rax+0x20],rdi
   14000296b:	push   rbp
   14000296c:	lea    rbp,[rax-0x98]
   140002973:	sub    rsp,0x190
   14000297a:	mov    rax,QWORD PTR [rip+0x7687]        # 0x14000a008
   140002981:	xor    rax,rsp
   140002984:	mov    QWORD PTR [rbp+0x80],rax
   14000298b:	mov    r11,QWORD PTR [rcx+0x8]
   14000298f:	cmp    DWORD PTR [r11],0x5
   140002993:	jbe    0x140002c03
   140002999:	mov    eax,DWORD PTR [rdx+0x4]
   14000299c:	lea    r9,[rip+0x4f99]        # 0x14000793c
   1400029a3:	mov    rcx,QWORD PTR [rdx+0x30]
   1400029a7:	xor    ebx,ebx
   1400029a9:	mov    DWORD PTR [rsp+0x40],eax
   1400029ad:	or     rdi,0xffffffffffffffff
   1400029b1:	mov    QWORD PTR [rsp+0x78],0x4
   1400029ba:	lea    rax,[rsp+0x40]
   1400029bf:	mov    QWORD PTR [rsp+0x70],rax
   1400029c4:	mov    eax,ebx
   1400029c6:	mov    r8,r9
   1400029c9:	test   rcx,rcx
   1400029cc:	je     0x1400029dc
   1400029ce:	mov    r8,rcx
   1400029d1:	mov    rax,rdi
   1400029d4:	inc    rax
   1400029d7:	cmp    BYTE PTR [rcx+rax*1],bl
   1400029da:	jne    0x1400029d4
   1400029dc:	mov    rcx,QWORD PTR [rdx+0x78]
   1400029e0:	inc    eax
   1400029e2:	mov    DWORD PTR [rbp-0x78],eax
   1400029e5:	lea    rax,[rdx+0x38]
   1400029e9:	mov    QWORD PTR [rbp-0x70],rax
   1400029ed:	mov    rax,rbx
   1400029f0:	mov    QWORD PTR [rbp-0x80],r8
   1400029f4:	mov    r8,r9
   1400029f7:	mov    DWORD PTR [rbp-0x74],ebx
   1400029fa:	mov    QWORD PTR [rbp-0x68],0x4
   140002a02:	test   rcx,rcx
   140002a05:	je     0x140002a15
   140002a07:	mov    r8,rcx
   140002a0a:	mov    rax,rdi
   140002a0d:	inc    rax
   140002a10:	cmp    BYTE PTR [rcx+rax*1],bl
   140002a13:	jne    0x140002a0d
   140002a15:	mov    rcx,QWORD PTR [rdx+0x10]
   140002a19:	lea    r10,[rip+0x4f20]        # 0x140007940
   140002a20:	inc    eax
   140002a22:	mov    QWORD PTR [rbp-0x60],r8
   140002a26:	mov    DWORD PTR [rbp-0x58],eax
   140002a29:	mov    r8,r10
   140002a2c:	mov    eax,DWORD PTR [rdx]
   140002a2e:	mov    DWORD PTR [rsp+0x38],eax
   140002a32:	lea    rax,[rsp+0x38]
   140002a37:	mov    QWORD PTR [rbp-0x50],rax
   140002a3b:	mov    rax,rbx
   140002a3e:	mov    DWORD PTR [rbp-0x54],ebx
   140002a41:	mov    QWORD PTR [rbp-0x48],0x4
   140002a49:	test   rcx,rcx
   140002a4c:	je     0x140002a5d
   140002a4e:	mov    r8,rcx
   140002a51:	mov    rax,rdi
   140002a54:	inc    rax
   140002a57:	cmp    WORD PTR [rcx+rax*2],bx
   140002a5b:	jne    0x140002a54
   140002a5d:	mov    rcx,QWORD PTR [rdx+0x40]
   140002a61:	lea    eax,[rax*2+0x2]
   140002a68:	mov    DWORD PTR [rbp-0x38],eax
   140002a6b:	mov    eax,DWORD PTR [rdx+0x18]
   140002a6e:	mov    DWORD PTR [rsp+0x48],eax
   140002a72:	lea    rax,[rsp+0x48]
   140002a77:	mov    QWORD PTR [rbp-0x30],rax
   140002a7b:	mov    rax,rbx
   140002a7e:	mov    QWORD PTR [rbp-0x40],r8
   140002a82:	mov    r8,r9
   140002a85:	mov    DWORD PTR [rbp-0x34],ebx
   140002a88:	mov    QWORD PTR [rbp-0x28],0x4
   140002a90:	test   rcx,rcx
   140002a93:	je     0x140002aa3
   140002a95:	mov    r8,rcx
   140002a98:	mov    rax,rdi
   140002a9b:	inc    rax
   140002a9e:	cmp    BYTE PTR [rcx+rax*1],bl
   140002aa1:	jne    0x140002a9b
   140002aa3:	mov    rcx,QWORD PTR [rdx+0x50]
   140002aa7:	inc    eax
   140002aa9:	mov    DWORD PTR [rbp-0x18],eax
   140002aac:	mov    eax,DWORD PTR [rdx+0x48]
   140002aaf:	mov    DWORD PTR [rsp+0x30],eax
   140002ab3:	lea    rax,[rsp+0x30]
   140002ab8:	mov    QWORD PTR [rbp-0x10],rax
   140002abc:	mov    rax,rbx
   140002abf:	mov    QWORD PTR [rbp-0x20],r8
   140002ac3:	mov    r8,r9
   140002ac6:	mov    DWORD PTR [rbp-0x14],ebx
   140002ac9:	mov    QWORD PTR [rbp-0x8],0x4
   140002ad1:	test   rcx,rcx
   140002ad4:	je     0x140002ae4
   140002ad6:	mov    r8,rcx
   140002ad9:	mov    rax,rdi
   140002adc:	inc    rax
   140002adf:	cmp    BYTE PTR [rcx+rax*1],bl
   140002ae2:	jne    0x140002adc
   140002ae4:	mov    rcx,QWORD PTR [rdx+0x58]
   140002ae8:	inc    eax
   140002aea:	mov    DWORD PTR [rbp+0x8],eax
   140002aed:	mov    rax,rbx
   140002af0:	mov    QWORD PTR [rbp+0x0],r8
   140002af4:	mov    r8,r10
   140002af7:	mov    DWORD PTR [rbp+0xc],ebx
   140002afa:	test   rcx,rcx
   140002afd:	je     0x140002b0e
   140002aff:	mov    r8,rcx
   140002b02:	mov    rax,rdi
   140002b05:	inc    rax
   140002b08:	cmp    WORD PTR [rcx+rax*2],bx
   140002b0c:	jne    0x140002b05
   140002b0e:	mov    rcx,QWORD PTR [rdx+0x68]
   140002b12:	lea    eax,[rax*2+0x2]
   140002b19:	mov    DWORD PTR [rbp+0x18],eax
   140002b1c:	mov    eax,DWORD PTR [rdx+0x60]
   140002b1f:	mov    DWORD PTR [rsp+0x34],eax
   140002b23:	lea    rax,[rsp+0x34]
   140002b28:	mov    QWORD PTR [rbp+0x20],rax
   140002b2c:	mov    rax,rbx
   140002b2f:	mov    QWORD PTR [rbp+0x10],r8
   140002b33:	mov    r8,r9
   140002b36:	mov    DWORD PTR [rbp+0x1c],ebx
   140002b39:	mov    QWORD PTR [rbp+0x28],0x4
   140002b41:	test   rcx,rcx
   140002b44:	je     0x140002b54
   140002b46:	mov    r8,rcx
   140002b49:	mov    rax,rdi
   140002b4c:	inc    rax
   140002b4f:	cmp    BYTE PTR [rcx+rax*1],bl
   140002b52:	jne    0x140002b4c
   140002b54:	mov    rcx,QWORD PTR [rdx+0x70]
   140002b58:	inc    eax
   140002b5a:	mov    DWORD PTR [rbp+0x38],eax
   140002b5d:	mov    rax,rbx
   140002b60:	mov    QWORD PTR [rbp+0x30],r8
   140002b64:	mov    DWORD PTR [rbp+0x3c],ebx
   140002b67:	test   rcx,rcx
   140002b6a:	je     0x140002b7b
   140002b6c:	mov    r10,rcx
   140002b6f:	mov    rax,rdi
   140002b72:	inc    rax
   140002b75:	cmp    WORD PTR [rcx+rax*2],bx
   140002b79:	jne    0x140002b72
   140002b7b:	mov    rcx,QWORD PTR [rdx+0x28]
   140002b7f:	lea    eax,[rax*2+0x2]
   140002b86:	mov    DWORD PTR [rbp+0x48],eax
   140002b89:	mov    eax,DWORD PTR [rdx+0x8]
   140002b8c:	mov    DWORD PTR [rsp+0x3c],eax
   140002b90:	lea    rax,[rsp+0x3c]
   140002b95:	mov    QWORD PTR [rbp+0x50],rax
   140002b99:	mov    eax,DWORD PTR [rdx+0x3c]
   140002b9c:	mov    DWORD PTR [rsp+0x44],eax
   140002ba0:	lea    rax,[rsp+0x44]
   140002ba5:	mov    QWORD PTR [rbp+0x60],rax
   140002ba9:	mov    rax,rbx
   140002bac:	mov    QWORD PTR [rbp+0x40],r10
   140002bb0:	mov    DWORD PTR [rbp+0x4c],ebx
   140002bb3:	mov    QWORD PTR [rbp+0x58],0x4
   140002bbb:	mov    QWORD PTR [rbp+0x68],0x4
   140002bc3:	test   rcx,rcx
   140002bc6:	je     0x140002bd6
   140002bc8:	mov    r9,rcx
   140002bcb:	mov    rax,rdi
   140002bce:	inc    rax
   140002bd1:	cmp    BYTE PTR [rcx+rax*1],bl
   140002bd4:	jne    0x140002bce
   140002bd6:	inc    eax
   140002bd8:	mov    QWORD PTR [rbp+0x70],r9
   140002bdc:	mov    DWORD PTR [rbp+0x78],eax
   140002bdf:	mov    DWORD PTR [rbp+0x7c],ebx
   140002be2:	lea    rax,[rsp+0x50]
   140002be7:	mov    rcx,r11
   140002bea:	mov    QWORD PTR [rsp+0x28],rax
   140002bef:	lea    rdx,[rip+0x548e]        # 0x140008084
   140002bf6:	mov    DWORD PTR [rsp+0x20],0x13
   140002bfe:	call   0x1400010dc
   140002c03:	mov    rcx,QWORD PTR [rbp+0x80]
   140002c0a:	xor    rcx,rsp
   140002c0d:	call   0x140003f10
   140002c12:	lea    r11,[rsp+0x190]
   140002c1a:	mov    rbx,QWORD PTR [r11+0x18]
   140002c1e:	mov    rsi,QWORD PTR [r11+0x20]
   140002c22:	mov    rdi,QWORD PTR [r11+0x28]
   140002c26:	mov    rsp,r11
   140002c29:	pop    rbp
   140002c2a:	ret    
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	mov    QWORD PTR [rsp+0x10],rsi
   140002c4a:	push   rdi
   140002c4b:	sub    rsp,0x20
   140002c4f:	mov    eax,DWORD PTR [rip+0x742f]        # 0x14000a084
   140002c55:	mov    rdi,rdx
   140002c58:	mov    r8d,DWORD PTR [rdx+0x8]
   140002c5c:	mov    rsi,rcx
   140002c5f:	cmp    eax,r8d
   140002c62:	mov    DWORD PTR [rip+0x741b],r8d        # 0x14000a084
   140002c69:	sete   al
   140002c6c:	test   al,al
   140002c6e:	jne    0x140002c8a
   140002c70:	mov    rax,QWORD PTR [rcx]
   140002c73:	mov    rbx,QWORD PTR [rax+0x10]
   140002c77:	mov    rcx,rbx
   140002c7a:	call   QWORD PTR [rip+0x3690]        # 0x140006310
   140002c80:	mov    r8,rdi
   140002c83:	xor    edx,edx
   140002c85:	mov    rcx,rsi
   140002c88:	call   rbx
   140002c8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c8f:	mov    al,0x1
   140002c91:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c96:	add    rsp,0x20
   140002c9a:	pop    rdi
   140002c9b:	ret    
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	mov    QWORD PTR [rsp+0x10],rsi
   140002cba:	push   rdi
   140002cbb:	sub    rsp,0x20
   140002cbf:	cmp    BYTE PTR [rcx+0x10],0x0
   140002cc3:	lea    rax,[rip+0x511e]        # 0x140007de8
   140002cca:	mov    QWORD PTR [rcx],rax
   140002ccd:	mov    esi,edx
   140002ccf:	mov    rdi,rcx
   140002cd2:	je     0x140002cea
   140002cd4:	mov    rbx,QWORD PTR [rcx+0x8]
   140002cd8:	mov    rcx,QWORD PTR [rbx+0x20]
   140002cdc:	call   QWORD PTR [rip+0x331e]        # 0x140006000
   140002ce2:	and    QWORD PTR [rbx+0x20],0x0
   140002ce7:	and    DWORD PTR [rbx],0x0
   140002cea:	test   sil,0x1
   140002cee:	je     0x140002cf9
   140002cf0:	mov    rcx,rdi
   140002cf3:	call   QWORD PTR [rip+0x34ef]        # 0x1400061e8
   140002cf9:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cfe:	mov    rax,rdi
   140002d01:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d06:	add    rsp,0x20
   140002d0a:	pop    rdi
   140002d0b:	ret    
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	int3   
   140002d11:	int3   
   140002d12:	int3   
   140002d13:	int3   
   140002d14:	mov    r11,rsp
   140002d17:	push   rbx
   140002d18:	sub    rsp,0x40
   140002d1c:	lea    rax,[r11+0x10]
   140002d20:	mov    DWORD PTR [rsp+0x58],0x4
   140002d28:	mov    QWORD PTR [r11-0x18],rax
   140002d2c:	lea    r8,[rip+0x4df5]        # 0x140007b28
   140002d33:	lea    rax,[r11+0x8]
   140002d37:	mov    rbx,rcx
   140002d3a:	mov    QWORD PTR [r11-0x20],rax
   140002d3e:	lea    rdx,[rip+0x4e0b]        # 0x140007b50
   140002d45:	and    QWORD PTR [r11-0x28],0x0
   140002d4a:	mov    r9d,0x10
   140002d50:	mov    rcx,0xffffffff80000001
   140002d57:	call   QWORD PTR [rip+0x32bb]        # 0x140006018
   140002d5d:	test   eax,eax
   140002d5f:	je     0x140002da1
   140002d61:	call   QWORD PTR [rip+0x3369]        # 0x1400060d0
   140002d67:	mov    DWORD PTR [rsp+0x28],0x4
   140002d6f:	lea    r8,[rip+0x4db2]        # 0x140007b28
   140002d76:	and    eax,0x7
   140002d79:	lea    rdx,[rip+0x4dd0]        # 0x140007b50
   140002d80:	mov    DWORD PTR [rsp+0x50],eax
   140002d84:	mov    r9d,0x4
   140002d8a:	lea    rax,[rsp+0x50]
   140002d8f:	mov    rcx,0xffffffff80000001
   140002d96:	mov    QWORD PTR [rsp+0x20],rax
   140002d9b:	call   QWORD PTR [rip+0x3267]        # 0x140006008
   140002da1:	mov    al,BYTE PTR [rsp+0x50]
   140002da5:	mov    BYTE PTR [rbx+0x18],al
   140002da8:	add    rsp,0x40
   140002dac:	pop    rbx
   140002dad:	ret    
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	int3   
   140002db1:	int3   
   140002db2:	int3   
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	jmp    0x140002d14
   140002dc5:	int3   
   140002dc6:	int3   
   140002dc7:	int3   
   140002dc8:	int3   
   140002dc9:	int3   
   140002dca:	int3   
   140002dcb:	int3   
   140002dcc:	int3   
   140002dcd:	int3   
   140002dce:	int3   
   140002dcf:	int3   
   140002dd0:	and    QWORD PTR [r9],0x0
   140002dd4:	mov    r10,r8
   140002dd7:	mov    rax,QWORD PTR [rdx]
   140002dda:	cmp    rax,QWORD PTR [rip+0x5057]        # 0x140007e38
   140002de1:	jne    0x140002dfb
   140002de3:	mov    rax,QWORD PTR [rdx+0x8]
   140002de7:	cmp    rax,QWORD PTR [rip+0x5052]        # 0x140007e40
   140002dee:	jne    0x140002dfb
   140002df0:	mov    r8,r9
   140002df3:	mov    rdx,r10
   140002df6:	jmp    0x140003280
   140002dfb:	mov    eax,0x80004001
   140002e00:	ret    
   140002e01:	int3   
   140002e02:	int3   
   140002e03:	int3   
   140002e04:	int3   
   140002e05:	int3   
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	xor    eax,eax
   140002e12:	ret    
   140002e13:	int3   
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    eax,0x800704c7
   140002e25:	ret    
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	mov    rax,rsp
   140002e2f:	mov    QWORD PTR [rax+0x8],rbx
   140002e33:	push   rdi
   140002e34:	sub    rsp,0x90
   140002e3b:	mov    rdi,rcx
   140002e3e:	lea    rcx,[rax+0x10]
   140002e42:	call   0x140003608
   140002e47:	mov    rbx,QWORD PTR [rsp+0xa8]
   140002e4f:	test   rbx,rbx
   140002e52:	jne    0x140002e6e
   140002e54:	mov    rcx,QWORD PTR [rsp+0x98]
   140002e5c:	lea    edx,[rbx+0x31]
   140002e5f:	mov    edi,0x8007000e
   140002e64:	mov    r9d,edi
   140002e67:	call   0x1400022f8
   140002e6c:	jmp    0x140002ec2
   140002e6e:	xor    edx,edx
   140002e70:	mov    DWORD PTR [rsp+0x20],0x70
   140002e78:	lea    rcx,[rsp+0x24]
   140002e7d:	lea    r8d,[rdx+0x6c]
   140002e81:	call   0x140004fd6
   140002e86:	lea    rcx,[rsp+0x20]
   140002e8b:	mov    DWORD PTR [rsp+0x24],0x8000100
   140002e93:	mov    DWORD PTR [rsp+0x50],0x1
   140002e9b:	mov    QWORD PTR [rsp+0x38],rdi
   140002ea0:	mov    QWORD PTR [rsp+0x58],rbx
   140002ea5:	call   QWORD PTR [rip+0x3245]        # 0x1400060f0
   140002eab:	test   eax,eax
   140002ead:	jne    0x140002ec0
   140002eaf:	mov    rcx,QWORD PTR [rsp+0x98]
   140002eb7:	call   0x140002334
   140002ebc:	mov    edi,eax
   140002ebe:	jmp    0x140002ec2
   140002ec0:	xor    edi,edi
   140002ec2:	test   rbx,rbx
   140002ec5:	je     0x140002ecf
   140002ec7:	mov    rcx,rbx
   140002eca:	call   0x140003400
   140002ecf:	mov    eax,edi
   140002ed1:	mov    rbx,QWORD PTR [rsp+0xa0]
   140002ed9:	add    rsp,0x90
   140002ee0:	pop    rdi
   140002ee1:	ret    
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	mov    DWORD PTR [rsp+0x10],edx
   140002eec:	push   rbx
   140002eed:	push   rsi
   140002eee:	push   rdi
   140002eef:	sub    rsp,0x60
   140002ef3:	xor    edi,edi
   140002ef5:	mov    rsi,rcx
   140002ef8:	mov    WORD PTR [rcx],di
   140002efb:	call   QWORD PTR [rip+0x3157]        # 0x140006058
   140002f01:	lea    r9d,[rdi+0x30]
   140002f05:	xor    edx,edx
   140002f07:	mov    rcx,rax
   140002f0a:	lea    r8,[rsp+0x30]
   140002f0f:	lea    rax,[rsp+0x88]
   140002f17:	mov    QWORD PTR [rsp+0x20],rax
   140002f1c:	call   QWORD PTR [rip+0x33de]        # 0x140006300
   140002f22:	test   eax,eax
   140002f24:	jne    0x140002f98
   140002f26:	mov    r8d,DWORD PTR [rsp+0x58]
   140002f2b:	xor    edx,edx
   140002f2d:	mov    ecx,0x410
   140002f32:	call   QWORD PTR [rip+0x3148]        # 0x140006080
   140002f38:	mov    rbx,rax
   140002f3b:	test   rax,rax
   140002f3e:	je     0x140002f98
   140002f40:	cmp    rax,0xffffffffffffffff
   140002f44:	je     0x140002f89
   140002f46:	lea    r9,[rsp+0x80]
   140002f4e:	mov    DWORD PTR [rsp+0x20],0x3
   140002f56:	lea    r8d,[rdi+0x8]
   140002f5a:	mov    rcx,rax
   140002f5d:	lea    rdx,[rsp+0x90]
   140002f65:	call   QWORD PTR [rip+0x315d]        # 0x1400060c8
   140002f6b:	test   eax,eax
   140002f6d:	je     0x140002f89
   140002f6f:	mov    rdx,QWORD PTR [rsp+0x90]
   140002f77:	mov    r9d,0x104
   140002f7d:	mov    r8,rsi
   140002f80:	mov    rcx,rbx
   140002f83:	call   QWORD PTR [rip+0x30ef]        # 0x140006078
   140002f89:	cmp    rbx,0xffffffffffffffff
   140002f8d:	je     0x140002f98
   140002f8f:	mov    rcx,rbx
   140002f92:	call   QWORD PTR [rip+0x3120]        # 0x1400060b8
   140002f98:	cmp    WORD PTR [rsi],di
   140002f9b:	setne  al
   140002f9e:	add    rsp,0x60
   140002fa2:	pop    rdi
   140002fa3:	pop    rsi
   140002fa4:	pop    rbx
   140002fa5:	ret    
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	mov    rax,rsp
   140002faf:	mov    QWORD PTR [rax+0x18],r8
   140002fb3:	push   rbp
   140002fb4:	push   rsi
   140002fb5:	push   rdi
   140002fb6:	push   r14
   140002fb8:	push   r15
   140002fba:	sub    rsp,0x30
   140002fbe:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140002fc6:	mov    QWORD PTR [rax+0x8],rbx
   140002fca:	mov    rdi,rdx
   140002fcd:	mov    rbp,rcx
   140002fd0:	xor    r15d,r15d
   140002fd3:	mov    WORD PTR [rdx],r15w
   140002fd7:	mov    QWORD PTR [rax+0x10],r15
   140002fdb:	mov    QWORD PTR [rax+0x18],r15
   140002fdf:	lea    r9,[rax+0x10]
   140002fe3:	xor    r8d,r8d
   140002fe6:	xor    edx,edx
   140002fe8:	call   QWORD PTR [rip+0x31e2]        # 0x1400061d0
   140002fee:	test   eax,eax
   140002ff0:	js     0x140003047
   140002ff2:	mov    r14,QWORD PTR [rsp+0x68]
   140002ff7:	mov    rsi,QWORD PTR [rsp+0x70]
   140002ffc:	test   rsi,rsi
   140002fff:	je     0x14000301a
   140003001:	call   QWORD PTR [rip+0x3089]        # 0x140006090
   140003007:	mov    ebx,eax
   140003009:	mov    rcx,rsi
   14000300c:	call   QWORD PTR [rip+0x30ce]        # 0x1400060e0
   140003012:	mov    ecx,ebx
   140003014:	call   QWORD PTR [rip+0x307e]        # 0x140006098
   14000301a:	mov    QWORD PTR [rsp+0x70],r15
   14000301f:	mov    rax,QWORD PTR [r14]
   140003022:	mov    rbx,QWORD PTR [rax+0x98]
   140003029:	mov    rcx,rbx
   14000302c:	call   QWORD PTR [rip+0x32de]        # 0x140006310
   140003032:	lea    rdx,[rsp+0x70]
   140003037:	mov    rcx,r14
   14000303a:	call   rbx
   14000303c:	test   eax,eax
   14000303e:	js     0x140003047
   140003040:	mov    r8,QWORD PTR [rsp+0x70]
   140003045:	jmp    0x140003053
   140003047:	mov    rcx,rbp
   14000304a:	call   QWORD PTR [rip+0x3130]        # 0x140006180
   140003050:	mov    r8,rax
   140003053:	mov    edx,0x40
   140003058:	mov    rcx,rdi
   14000305b:	call   0x140001218
   140003060:	cmp    WORD PTR [rdi],r15w
   140003064:	setne  sil
   140003068:	mov    rcx,QWORD PTR [rsp+0x70]
   14000306d:	test   rcx,rcx
   140003070:	je     0x140003079
   140003072:	call   QWORD PTR [rip+0x3068]        # 0x1400060e0
   140003078:	nop
   140003079:	mov    rdi,QWORD PTR [rsp+0x68]
   14000307e:	test   rdi,rdi
   140003081:	je     0x14000309d
   140003083:	mov    QWORD PTR [rsp+0x68],r15
   140003088:	mov    rdx,QWORD PTR [rdi]
   14000308b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000308f:	mov    rcx,rbx
   140003092:	call   QWORD PTR [rip+0x3278]        # 0x140006310
   140003098:	mov    rcx,rdi
   14000309b:	call   rbx
   14000309d:	mov    al,sil
   1400030a0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400030a5:	add    rsp,0x30
   1400030a9:	pop    r15
   1400030ab:	pop    r14
   1400030ad:	pop    rdi
   1400030ae:	pop    rsi
   1400030af:	pop    rbp
   1400030b0:	ret    
   1400030b1:	int3   
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400030bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400030c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400030c7:	push   rdi
   1400030c8:	sub    rsp,0x2d0
   1400030cf:	mov    rax,QWORD PTR [rip+0x6f32]        # 0x14000a008
   1400030d6:	xor    rax,rsp
   1400030d9:	mov    QWORD PTR [rsp+0x2c0],rax
   1400030e1:	xor    ecx,ecx
   1400030e3:	call   QWORD PTR [rip+0x30cf]        # 0x1400061b8
   1400030e9:	xor    ebp,ebp
   1400030eb:	mov    edi,eax
   1400030ed:	test   eax,eax
   1400030ef:	jns    0x14000310b
   1400030f1:	mov    rcx,QWORD PTR [rsp+0x2d8]
   1400030f9:	lea    edx,[rbp+0x77]
   1400030fc:	mov    r9d,eax
   1400030ff:	call   0x1400022f8
   140003104:	mov    esi,edi
   140003106:	jmp    0x14000323d
   14000310b:	call   QWORD PTR [rip+0x2f27]        # 0x140006038
   140003111:	mov    rcx,rax
   140003114:	lea    rdx,[rsp+0x20]
   140003119:	call   QWORD PTR [rip+0x2fd9]        # 0x1400060f8
   14000311f:	mov    rbx,rax
   140003122:	test   rax,rax
   140003125:	jne    0x140003131
   140003127:	mov    esi,0x8007000e
   14000312c:	lea    edx,[rax+0x7b]
   14000312f:	jmp    0x140003142
   140003131:	cmp    DWORD PTR [rsp+0x20],0x2
   140003136:	jge    0x140003157
   140003138:	mov    esi,0x80070057
   14000313d:	mov    edx,0x7c
   140003142:	mov    rcx,QWORD PTR [rsp+0x2d8]
   14000314a:	mov    r9d,esi
   14000314d:	call   0x1400022f8
   140003152:	jmp    0x14000322f
   140003157:	lea    rcx,[rsp+0xb0]
   14000315f:	call   0x140002ee8
   140003164:	test   al,al
   140003166:	jne    0x1400031b6
   140003168:	lea    r8,[rip+0x4a89]        # 0x140007bf8
   14000316f:	mov    edx,0x104
   140003174:	lea    rax,[rsp+0xb0]
   14000317c:	sub    r8,rax
   14000317f:	lea    rcx,[rsp+0xb0]
   140003187:	lea    rax,[rdx+0x7ffffefa]
   14000318e:	test   rax,rax
   140003191:	je     0x1400031aa
   140003193:	movzx  eax,WORD PTR [r8+rcx*1]
   140003198:	test   ax,ax
   14000319b:	je     0x1400031aa
   14000319d:	mov    WORD PTR [rcx],ax
   1400031a0:	add    rcx,0x2
   1400031a4:	sub    rdx,0x1
   1400031a8:	jne    0x140003187
   1400031aa:	test   rdx,rdx
   1400031ad:	jne    0x1400031b3
   1400031af:	sub    rcx,0x2
   1400031b3:	mov    WORD PTR [rcx],bp
   1400031b6:	mov    rsi,QWORD PTR [rbx+0x8]
   1400031ba:	lea    rdx,[rsp+0x30]
   1400031bf:	mov    rcx,rsi
   1400031c2:	call   0x140002fac
   1400031c7:	test   al,al
   1400031c9:	jne    0x140003213
   1400031cb:	lea    rcx,[rip+0x4a5e]        # 0x140007c30
   1400031d2:	mov    r8d,0x40
   1400031d8:	lea    rax,[rsp+0x30]
   1400031dd:	sub    rcx,rax
   1400031e0:	lea    rdx,[rsp+0x30]
   1400031e5:	lea    rax,[r8+0x7fffffbe]
   1400031ec:	test   rax,rax
   1400031ef:	je     0x140003207
   1400031f1:	movzx  eax,WORD PTR [rcx+rdx*1]
   1400031f5:	test   ax,ax
   1400031f8:	je     0x140003207
   1400031fa:	mov    WORD PTR [rdx],ax
   1400031fd:	add    rdx,0x2
   140003201:	sub    r8,0x1
   140003205:	jne    0x1400031e5
   140003207:	test   r8,r8
   14000320a:	jne    0x140003210
   14000320c:	sub    rdx,0x2
   140003210:	mov    WORD PTR [rdx],bp
   140003213:	lea    rdx,[rsp+0x30]
   140003218:	lea    rcx,[rsp+0xb0]
   140003220:	call   0x140003660
   140003225:	mov    rcx,rsi
   140003228:	call   0x140002e2c
   14000322d:	mov    esi,ebp
   14000322f:	test   rbx,rbx
   140003232:	je     0x14000323d
   140003234:	mov    rcx,rbx
   140003237:	call   QWORD PTR [rip+0x2e83]        # 0x1400060c0
   14000323d:	test   edi,edi
   14000323f:	js     0x140003247
   140003241:	call   QWORD PTR [rip+0x2f79]        # 0x1400061c0
   140003247:	mov    eax,esi
   140003249:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140003251:	xor    rcx,rsp
   140003254:	call   0x140003f10
   140003259:	lea    r11,[rsp+0x2d0]
   140003261:	mov    rbx,QWORD PTR [r11+0x10]
   140003265:	mov    rbp,QWORD PTR [r11+0x18]
   140003269:	mov    rsi,QWORD PTR [r11+0x20]
   14000326d:	mov    rsp,r11
   140003270:	pop    rdi
   140003271:	ret    
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    QWORD PTR [rsp+0x8],rbx
   140003285:	mov    QWORD PTR [rsp+0x10],rsi
   14000328a:	push   rdi
   14000328b:	sub    rsp,0x20
   14000328f:	xor    edi,edi
   140003291:	mov    rsi,rcx
   140003294:	mov    QWORD PTR [r8],rdi
   140003297:	cmp    DWORD PTR [rdx],edi
   140003299:	jne    0x1400032d9
   14000329b:	mov    eax,DWORD PTR [rip+0x4a33]        # 0x140007cd4
   1400032a1:	cmp    DWORD PTR [rdx+0x4],eax
   1400032a4:	jne    0x1400032d9
   1400032a6:	mov    eax,DWORD PTR [rip+0x4a2c]        # 0x140007cd8
   1400032ac:	cmp    DWORD PTR [rdx+0x8],eax
   1400032af:	jne    0x1400032d9
   1400032b1:	mov    eax,DWORD PTR [rip+0x4a25]        # 0x140007cdc
   1400032b7:	cmp    DWORD PTR [rdx+0xc],eax
   1400032ba:	jne    0x1400032d9
   1400032bc:	mov    QWORD PTR [r8],rcx
   1400032bf:	mov    rax,QWORD PTR [rcx]
   1400032c2:	mov    rbx,QWORD PTR [rax+0x8]
   1400032c6:	mov    rcx,rbx
   1400032c9:	call   QWORD PTR [rip+0x3041]        # 0x140006310
   1400032cf:	mov    rcx,rsi
   1400032d2:	call   rbx
   1400032d4:	jmp    0x1400033bb
   1400032d9:	cmp    DWORD PTR [rdx],0x6d5140c1
   1400032df:	jne    0x14000330c
   1400032e1:	mov    eax,DWORD PTR [rip+0x4995]        # 0x140007c7c
   1400032e7:	cmp    DWORD PTR [rdx+0x4],eax
   1400032ea:	jne    0x14000330c
   1400032ec:	mov    eax,DWORD PTR [rip+0x498e]        # 0x140007c80
   1400032f2:	cmp    DWORD PTR [rdx+0x8],eax
   1400032f5:	jne    0x14000330c
   1400032f7:	mov    eax,DWORD PTR [rip+0x4987]        # 0x140007c84
   1400032fd:	cmp    DWORD PTR [rdx+0xc],eax
   140003300:	jne    0x14000330c
   140003302:	mov    QWORD PTR [r8],rcx
   140003305:	mov    esi,edi
   140003307:	jmp    0x1400033a1
   14000330c:	add    rsi,0x8
   140003310:	cmp    DWORD PTR [rdx],0x35094a87
   140003316:	jne    0x14000333e
   140003318:	mov    eax,DWORD PTR [rip+0x4b0e]        # 0x140007e2c
   14000331e:	cmp    DWORD PTR [rdx+0x4],eax
   140003321:	jne    0x14000333e
   140003323:	mov    eax,DWORD PTR [rip+0x4b07]        # 0x140007e30
   140003329:	cmp    DWORD PTR [rdx+0x8],eax
   14000332c:	jne    0x14000333e
   14000332e:	mov    eax,DWORD PTR [rip+0x4b00]        # 0x140007e34
   140003334:	cmp    DWORD PTR [rdx+0xc],eax
   140003337:	jne    0x14000333e
   140003339:	mov    QWORD PTR [r8],rsi
   14000333c:	jmp    0x140003305
   14000333e:	add    rsi,0x8
   140003342:	cmp    DWORD PTR [rdx],0x94ea2b94
   140003348:	jne    0x140003372
   14000334a:	mov    eax,DWORD PTR [rip+0x4acc]        # 0x140007e1c
   140003350:	cmp    DWORD PTR [rdx+0x4],eax
   140003353:	jne    0x140003372
   140003355:	mov    eax,DWORD PTR [rip+0x4ac5]        # 0x140007e20
   14000335b:	cmp    DWORD PTR [rdx+0x8],eax
   14000335e:	jne    0x140003372
   140003360:	mov    eax,DWORD PTR [rip+0x4abe]        # 0x140007e24
   140003366:	cmp    DWORD PTR [rdx+0xc],eax
   140003369:	jne    0x140003372
   14000336b:	mov    QWORD PTR [r8],rsi
   14000336e:	mov    esi,edi
   140003370:	jmp    0x14000339d
   140003372:	cmp    DWORD PTR [rdx],0x3
   140003375:	jne    0x140003398
   140003377:	mov    eax,DWORD PTR [rip+0x4a8f]        # 0x140007e0c
   14000337d:	cmp    DWORD PTR [rdx+0x4],eax
   140003380:	jne    0x140003398
   140003382:	mov    eax,DWORD PTR [rip+0x4a88]        # 0x140007e10
   140003388:	cmp    DWORD PTR [rdx+0x8],eax
   14000338b:	jne    0x140003398
   14000338d:	mov    eax,DWORD PTR [rip+0x4a81]        # 0x140007e14
   140003393:	cmp    DWORD PTR [rdx+0xc],eax
   140003396:	je     0x14000336b
   140003398:	mov    esi,0x80004002
   14000339d:	test   esi,esi
   14000339f:	js     0x1400033b9
   1400033a1:	mov    rdi,QWORD PTR [r8]
   1400033a4:	mov    rax,QWORD PTR [rdi]
   1400033a7:	mov    rbx,QWORD PTR [rax+0x8]
   1400033ab:	mov    rcx,rbx
   1400033ae:	call   QWORD PTR [rip+0x2f5c]        # 0x140006310
   1400033b4:	mov    rcx,rdi
   1400033b7:	call   rbx
   1400033b9:	mov    edi,esi
   1400033bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033c0:	mov    eax,edi
   1400033c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033c7:	add    rsp,0x20
   1400033cb:	pop    rdi
   1400033cc:	ret    
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	int3   
   1400033d1:	int3   
   1400033d2:	int3   
   1400033d3:	int3   
   1400033d4:	int3   
   1400033d5:	int3   
   1400033d6:	int3   
   1400033d7:	int3   
   1400033d8:	int3   
   1400033d9:	int3   
   1400033da:	int3   
   1400033db:	int3   
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    eax,0x1
   1400033e5:	lock xadd DWORD PTR [rcx+0x2c],eax
   1400033ea:	inc    eax
   1400033ec:	ret    
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	int3   
   1400033f1:	int3   
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    QWORD PTR [rsp+0x8],rbx
   140003405:	mov    QWORD PTR [rsp+0x10],rsi
   14000340a:	push   rdi
   14000340b:	sub    rsp,0x20
   14000340f:	mov    rsi,rcx
   140003412:	or     edi,0xffffffff
   140003415:	lock xadd DWORD PTR [rcx+0x2c],edi
   14000341a:	sub    edi,0x1
   14000341d:	jne    0x14000345d
   14000341f:	test   rcx,rcx
   140003422:	je     0x14000343c
   140003424:	mov    rax,QWORD PTR [rcx]
   140003427:	mov    rbx,QWORD PTR [rax+0x20]
   14000342b:	mov    rcx,rbx
   14000342e:	call   QWORD PTR [rip+0x2edc]        # 0x140006310
   140003434:	lea    edx,[rdi+0x1]
   140003437:	mov    rcx,rsi
   14000343a:	call   rbx
   14000343c:	mov    rsi,QWORD PTR [rip+0x73a5]        # 0x14000a7e8
   140003443:	test   rsi,rsi
   140003446:	je     0x14000345d
   140003448:	mov    rdx,QWORD PTR [rsi]
   14000344b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000344f:	mov    rcx,rbx
   140003452:	call   QWORD PTR [rip+0x2eb8]        # 0x140006310
   140003458:	mov    rcx,rsi
   14000345b:	call   rbx
   14000345d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003462:	mov    eax,edi
   140003464:	mov    rsi,QWORD PTR [rsp+0x38]
   140003469:	add    rsp,0x20
   14000346d:	pop    rdi
   14000346e:	ret    
   14000346f:	int3   
   140003470:	int3   
   140003471:	int3   
   140003472:	int3   
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	mov    QWORD PTR [rsp+0x8],rbx
   14000347d:	push   rdi
   14000347e:	sub    rsp,0x20
   140003482:	mov    rdi,QWORD PTR [rcx]
   140003485:	test   rdi,rdi
   140003488:	je     0x1400034a3
   14000348a:	and    QWORD PTR [rcx],0x0
   14000348e:	mov    rax,QWORD PTR [rdi]
   140003491:	mov    rbx,QWORD PTR [rax+0x10]
   140003495:	mov    rcx,rbx
   140003498:	call   QWORD PTR [rip+0x2e72]        # 0x140006310
   14000349e:	mov    rcx,rdi
   1400034a1:	call   rbx
   1400034a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034a8:	add    rsp,0x20
   1400034ac:	pop    rdi
   1400034ad:	ret    
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	int3   
   1400034b1:	int3   
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	mov    rax,rsp
   1400034b7:	mov    QWORD PTR [rax+0x10],rbx
   1400034bb:	mov    QWORD PTR [rax+0x18],rbp
   1400034bf:	mov    QWORD PTR [rax+0x20],rsi
   1400034c3:	push   rdi
   1400034c4:	push   r14
   1400034c6:	push   r15
   1400034c8:	sub    rsp,0x20
   1400034cc:	xor    ebp,ebp
   1400034ce:	mov    rbx,rdx
   1400034d1:	test   r8,r8
   1400034d4:	mov    WORD PTR [rax+0x8],bp
   1400034d8:	lea    rdx,[rax+0x8]
   1400034dc:	mov    r15,r9
   1400034df:	cmovne rdx,r8
   1400034e3:	mov    rdi,rcx
   1400034e6:	test   rdx,rdx
   1400034e9:	jne    0x1400034f0
   1400034eb:	lea    esi,[rbp+0x2]
   1400034ee:	jmp    0x140003505
   1400034f0:	or     rax,0xffffffffffffffff
   1400034f4:	inc    rax
   1400034f7:	cmp    WORD PTR [rdx+rax*2],bp
   1400034fb:	jne    0x1400034f4
   1400034fd:	lea    rsi,[rax*2+0x2]
   140003505:	sub    rbx,rcx
   140003508:	shr    rsi,1
   14000350b:	shr    rbx,1
   14000350e:	cmp    rsi,rbx
   140003511:	cmovb  rbx,rsi
   140003515:	lea    r14,[rbx+rbx*1]
   140003519:	mov    r8,r14
   14000351c:	call   0x140004f38
   140003521:	test   r15,r15
   140003524:	je     0x140003534
   140003526:	cmp    rbx,0x1
   14000352a:	mov    rax,rbp
   14000352d:	cmova  rax,rdi
   140003531:	mov    QWORD PTR [r15],rax
   140003534:	cmp    rbx,rsi
   140003537:	jae    0x140003546
   140003539:	test   rbx,rbx
   14000353c:	je     0x140003546
   14000353e:	xor    eax,eax
   140003540:	mov    WORD PTR [r14+rdi*1-0x2],ax
   140003546:	mov    rbx,QWORD PTR [rsp+0x48]
   14000354b:	lea    rax,[r14+rdi*1]
   14000354f:	mov    rbp,QWORD PTR [rsp+0x50]
   140003554:	mov    rsi,QWORD PTR [rsp+0x58]
   140003559:	add    rsp,0x20
   14000355d:	pop    r15
   14000355f:	pop    r14
   140003561:	pop    rdi
   140003562:	ret    
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	mov    rax,rsp
   14000356f:	mov    QWORD PTR [rax+0x10],rbx
   140003573:	mov    QWORD PTR [rax+0x18],rsi
   140003577:	mov    QWORD PTR [rax+0x20],rdi
   14000357b:	push   r14
   14000357d:	sub    rsp,0x20
   140003581:	mov    rbx,rdx
   140003584:	mov    BYTE PTR [rax+0x8],0x0
   140003588:	test   r8,r8
   14000358b:	lea    rdx,[rax+0x8]
   14000358f:	mov    r14,r9
   140003592:	mov    rsi,rcx
   140003595:	cmovne rdx,r8
   140003599:	test   rdx,rdx
   14000359c:	jne    0x1400035a3
   14000359e:	lea    edi,[rdx+0x1]
   1400035a1:	jmp    0x1400035b3
   1400035a3:	or     rdi,0xffffffffffffffff
   1400035a7:	inc    rdi
   1400035aa:	cmp    BYTE PTR [rdx+rdi*1],0x0
   1400035ae:	jne    0x1400035a7
   1400035b0:	inc    rdi
   1400035b3:	sub    rbx,rcx
   1400035b6:	cmp    rdi,rbx
   1400035b9:	cmovb  rbx,rdi
   1400035bd:	mov    r8,rbx
   1400035c0:	call   0x140004f38
   1400035c5:	test   r14,r14
   1400035c8:	je     0x1400035d7
   1400035ca:	xor    eax,eax
   1400035cc:	cmp    rbx,0x1
   1400035d0:	cmova  rax,rsi
   1400035d4:	mov    QWORD PTR [r14],rax
   1400035d7:	cmp    rbx,rdi
   1400035da:	jae    0x1400035e7
   1400035dc:	test   rbx,rbx
   1400035df:	je     0x1400035e7
   1400035e1:	xor    eax,eax
   1400035e3:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   1400035e7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400035ec:	lea    rax,[rbx+rsi*1]
   1400035f0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400035f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400035fa:	add    rsp,0x20
   1400035fe:	pop    r14
   140003600:	ret    
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	mov    QWORD PTR [rsp+0x8],rbx
   14000360d:	push   rdi
   14000360e:	sub    rsp,0x20
   140003612:	and    QWORD PTR [rcx],0x0
   140003616:	lea    rdx,[rip+0x6b63]        # 0x14000a180
   14000361d:	mov    rbx,rcx
   140003620:	mov    ecx,0x30
   140003625:	call   0x140004218
   14000362a:	test   rax,rax
   14000362d:	je     0x14000364a
   14000362f:	mov    rcx,rax
   140003632:	call   0x140003924
   140003637:	mov    rcx,QWORD PTR [rbx]
   14000363a:	mov    rdi,rax
   14000363d:	test   rcx,rcx
   140003640:	je     0x140003647
   140003642:	call   0x140003400
   140003647:	mov    QWORD PTR [rbx],rdi
   14000364a:	mov    rax,rbx
   14000364d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003652:	add    rsp,0x20
   140003656:	pop    rdi
   140003657:	ret    
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    rax,rsp
   140003663:	mov    QWORD PTR [rax+0x8],rbx
   140003667:	mov    QWORD PTR [rax+0x10],rsi
   14000366b:	mov    QWORD PTR [rax+0x18],rdi
   14000366f:	mov    QWORD PTR [rax+0x20],r12
   140003673:	push   rbp
   140003674:	push   r13
   140003676:	push   r14
   140003678:	lea    rbp,[rax-0x5f]
   14000367c:	sub    rsp,0xb0
   140003683:	mov    rax,QWORD PTR [rip+0x697e]        # 0x14000a008
   14000368a:	xor    rax,rsp
   14000368d:	mov    QWORD PTR [rbp+0x37],rax
   140003691:	mov    eax,DWORD PTR [rip+0x7159]        # 0x14000a7f0
   140003697:	mov    rsi,rdx
   14000369a:	mov    rdi,rcx
   14000369d:	test   al,0x1
   14000369f:	jne    0x1400036b6
   1400036a1:	or     eax,0x1
   1400036a4:	lea    rcx,[rip+0x1b95]        # 0x140005240
   1400036ab:	mov    DWORD PTR [rip+0x713f],eax        # 0x14000a7f0
   1400036b1:	call   0x140003fd8
   1400036b6:	lea    r9,[rbp-0x29]
   1400036ba:	xor    edx,edx
   1400036bc:	lea    r8,[rbp-0x39]
   1400036c0:	lea    rcx,[rip+0x7131]        # 0x14000a7f8
   1400036c7:	call   QWORD PTR [rip+0x2983]        # 0x140006050
   1400036cd:	xor    r14d,r14d
   1400036d0:	cmp    DWORD PTR [rbp-0x39],r14d
   1400036d4:	je     0x14000383d
   1400036da:	lea    rax,[rip+0x46bf]        # 0x140007da0
   1400036e1:	mov    QWORD PTR [rip+0x7118],rax        # 0x14000a800
   1400036e8:	lea    r12,[rip+0x7111]        # 0x14000a800
   1400036ef:	mov    eax,DWORD PTR [rip+0x70ff]        # 0x14000a7f4
   1400036f5:	mov    QWORD PTR [rbp-0x29],r12
   1400036f9:	test   al,0x1
   1400036fb:	jne    0x140003712
   1400036fd:	or     eax,0x1
   140003700:	lea    rcx,[rip+0x1ad9]        # 0x1400051e0
   140003707:	mov    DWORD PTR [rip+0x70e7],eax        # 0x14000a7f4
   14000370d:	call   0x140003fd8
   140003712:	lea    r9,[rbp-0x31]
   140003716:	xor    edx,edx
   140003718:	lea    r8,[rbp-0x35]
   14000371c:	lea    rcx,[rip+0x71dd]        # 0x14000a900
   140003723:	call   QWORD PTR [rip+0x2927]        # 0x140006050
   140003729:	cmp    DWORD PTR [rbp-0x35],r14d
   14000372d:	je     0x1400037f2
   140003733:	lea    r13,[rip+0x71ce]        # 0x14000a908
   14000373a:	lea    rax,[rip+0x46a7]        # 0x140007de8
   140003741:	mov    QWORD PTR [rbp-0x31],r13
   140003745:	mov    QWORD PTR [rip+0x71bc],rax        # 0x14000a908
   14000374c:	mov    rax,QWORD PTR [rip+0x68f5]        # 0x14000a048
   140003753:	lea    r8,[rip+0x68e6]        # 0x14000a040
   14000375a:	mov    QWORD PTR [rip+0x71bf],r8        # 0x14000a920
   140003761:	lea    r9,[rip+0x68f8]        # 0x14000a060
   140003768:	mov    QWORD PTR [rip+0x71a1],r8        # 0x14000a910
   14000376f:	lea    rdx,[rip+0xffffffffffffd89a]        # 0x140001010
   140003776:	mov    BYTE PTR [rip+0x719b],0x1        # 0x14000a918
   14000377d:	lea    rcx,[rbp-0x21]
   140003781:	movups xmm0,XMMWORD PTR [rax-0x10]
   140003785:	mov    QWORD PTR [rip+0x68dc],r14        # 0x14000a068
   14000378c:	mov    QWORD PTR [rip+0x68dd],r14        # 0x14000a070
   140003793:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   140003798:	call   QWORD PTR [rip+0x2882]        # 0x140006020
   14000379e:	test   eax,eax
   1400037a0:	jne    0x1400037bd
   1400037a2:	mov    r8,QWORD PTR [rip+0x689f]        # 0x14000a048
   1400037a9:	lea    edx,[rax+0x2]
   1400037ac:	mov    rcx,QWORD PTR [rip+0x68ad]        # 0x14000a060
   1400037b3:	movzx  r9d,WORD PTR [r8]
   1400037b7:	call   QWORD PTR [rip+0x2853]        # 0x140006010
   1400037bd:	mov    rax,QWORD PTR [rip+0x7144]        # 0x14000a908
   1400037c4:	mov    DWORD PTR [rip+0x714e],0x1        # 0x14000a91c
   1400037ce:	mov    rbx,QWORD PTR [rax+0x8]
   1400037d2:	mov    rcx,rbx
   1400037d5:	call   QWORD PTR [rip+0x2b35]        # 0x140006310
   1400037db:	mov    rcx,r13
   1400037de:	call   rbx
   1400037e0:	mov    r8,r13
   1400037e3:	lea    rcx,[rip+0x7116]        # 0x14000a900
   1400037ea:	xor    edx,edx
   1400037ec:	call   QWORD PTR [rip+0x284e]        # 0x140006040
   1400037f2:	mov    rax,QWORD PTR [rbp-0x31]
   1400037f6:	mov    rdx,QWORD PTR [rax+0x8]
   1400037fa:	mov    rax,QWORD PTR [rip+0x6fff]        # 0x14000a800
   140003801:	mov    QWORD PTR [rip+0x7000],rdx        # 0x14000a808
   140003808:	mov    BYTE PTR [rip+0x7001],r14b        # 0x14000a810
   14000380f:	mov    DWORD PTR [rip+0x6ffb],0x1        # 0x14000a814
   140003819:	mov    rbx,QWORD PTR [rax+0x8]
   14000381d:	mov    rcx,rbx
   140003820:	call   QWORD PTR [rip+0x2aea]        # 0x140006310
   140003826:	mov    rcx,r12
   140003829:	call   rbx
   14000382b:	mov    r8,r12
   14000382e:	lea    rcx,[rip+0x6fc3]        # 0x14000a7f8
   140003835:	xor    edx,edx
   140003837:	call   QWORD PTR [rip+0x2803]        # 0x140006040
   14000383d:	mov    rax,QWORD PTR [rbp-0x29]
   140003841:	mov    rcx,QWORD PTR [rax+0x8]
   140003845:	cmp    DWORD PTR [rcx],0x5
   140003848:	jbe    0x1400038ee
   14000384e:	movabs rdx,0x200000000000
   140003858:	test   QWORD PTR [rcx+0x10],rdx
   14000385c:	je     0x1400038ee
   140003862:	mov    rax,QWORD PTR [rcx+0x18]
   140003866:	and    rax,rdx
   140003869:	cmp    rax,QWORD PTR [rcx+0x18]
   14000386d:	jne    0x1400038ee
   14000386f:	or     r9,0xffffffffffffffff
   140003873:	lea    rdx,[rip+0x40c6]        # 0x140007940
   14000387a:	mov    r8,rdx
   14000387d:	mov    rax,r14
   140003880:	test   rdi,rdi
   140003883:	je     0x140003895
   140003885:	mov    r8,rdi
   140003888:	mov    rax,r9
   14000388b:	inc    rax
   14000388e:	cmp    WORD PTR [rdi+rax*2],r14w
   140003893:	jne    0x14000388b
   140003895:	mov    QWORD PTR [rbp+0x17],r8
   140003899:	lea    eax,[rax*2+0x2]
   1400038a0:	mov    DWORD PTR [rbp+0x1f],eax
   1400038a3:	mov    rax,r14
   1400038a6:	mov    DWORD PTR [rbp+0x23],r14d
   1400038aa:	test   rsi,rsi
   1400038ad:	je     0x1400038bf
   1400038af:	mov    rdx,rsi
   1400038b2:	mov    rax,r9
   1400038b5:	inc    rax
   1400038b8:	cmp    WORD PTR [rsi+rax*2],r14w
   1400038bd:	jne    0x1400038b5
   1400038bf:	lea    eax,[rax*2+0x2]
   1400038c6:	mov    QWORD PTR [rbp+0x27],rdx
   1400038ca:	mov    DWORD PTR [rbp+0x2f],eax
   1400038cd:	mov    DWORD PTR [rbp+0x33],r14d
   1400038d1:	lea    rax,[rbp-0x9]
   1400038d5:	mov    QWORD PTR [rsp+0x28],rax
   1400038da:	lea    rdx,[rip+0x48c9]        # 0x1400081aa
   1400038e1:	mov    DWORD PTR [rsp+0x20],0x4
   1400038e9:	call   0x1400010dc
   1400038ee:	mov    rcx,QWORD PTR [rbp+0x37]
   1400038f2:	xor    rcx,rsp
   1400038f5:	call   0x140003f10
   1400038fa:	lea    r11,[rsp+0xb0]
   140003902:	mov    rbx,QWORD PTR [r11+0x20]
   140003906:	mov    rsi,QWORD PTR [r11+0x28]
   14000390a:	mov    rdi,QWORD PTR [r11+0x30]
   14000390e:	mov    r12,QWORD PTR [r11+0x38]
   140003912:	mov    rsp,r11
   140003915:	pop    r14
   140003917:	pop    r13
   140003919:	pop    rbp
   14000391a:	ret    
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	int3   
   140003921:	int3   
   140003922:	int3   
   140003923:	int3   
   140003924:	mov    r11,rsp
   140003927:	mov    QWORD PTR [r11+0x10],rbx
   14000392b:	mov    QWORD PTR [r11+0x18],rsi
   14000392f:	mov    QWORD PTR [r11+0x20],rdi
   140003933:	push   r14
   140003935:	sub    rsp,0x20
   140003939:	and    QWORD PTR [r11+0x8],0x0
   14000393e:	lea    r14,[rcx+0x20]
   140003942:	lea    rax,[rip+0x433f]        # 0x140007c88
   140003949:	mov    rsi,rcx
   14000394c:	mov    QWORD PTR [rcx+0x10],rax
   140003950:	lea    rdx,[r11+0x8]
   140003954:	and    QWORD PTR [r14],0x0
   140003958:	xor    ecx,ecx
   14000395a:	call   QWORD PTR [rip+0x27a8]        # 0x140006108
   140003960:	test   eax,eax
   140003962:	js     0x1400039a8
   140003964:	mov    rdi,QWORD PTR [r14]
   140003967:	test   rdi,rdi
   14000396a:	je     0x140003985
   14000396c:	and    QWORD PTR [r14],0x0
   140003970:	mov    rax,QWORD PTR [rdi]
   140003973:	mov    rbx,QWORD PTR [rax+0x10]
   140003977:	mov    rcx,rbx
   14000397a:	call   QWORD PTR [rip+0x2990]        # 0x140006310
   140003980:	mov    rcx,rdi
   140003983:	call   rbx
   140003985:	mov    rbx,QWORD PTR [rsp+0x30]
   14000398a:	mov    rax,QWORD PTR [rbx]
   14000398d:	mov    rdi,QWORD PTR [rax]
   140003990:	mov    rcx,rdi
   140003993:	call   QWORD PTR [rip+0x2977]        # 0x140006310
   140003999:	mov    r8,r14
   14000399c:	lea    rdx,[rip+0x4465]        # 0x140007e08
   1400039a3:	mov    rcx,rbx
   1400039a6:	call   rdi
   1400039a8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400039ad:	test   rdi,rdi
   1400039b0:	je     0x1400039cd
   1400039b2:	and    QWORD PTR [rsp+0x30],0x0
   1400039b8:	mov    rax,QWORD PTR [rdi]
   1400039bb:	mov    rbx,QWORD PTR [rax+0x10]
   1400039bf:	mov    rcx,rbx
   1400039c2:	call   QWORD PTR [rip+0x2948]        # 0x140006310
   1400039c8:	mov    rcx,rdi
   1400039cb:	call   rbx
   1400039cd:	mov    rdi,QWORD PTR [rip+0x6e14]        # 0x14000a7e8
   1400039d4:	lea    rax,[rip+0x439d]        # 0x140007d78
   1400039db:	mov    QWORD PTR [rsi],rax
   1400039de:	lea    rax,[rip+0x42fb]        # 0x140007ce0
   1400039e5:	mov    QWORD PTR [rsi+0x8],rax
   1400039e9:	lea    rax,[rip+0x4340]        # 0x140007d30
   1400039f0:	mov    QWORD PTR [rsi+0x10],rax
   1400039f4:	mov    DWORD PTR [rsi+0x2c],0x1
   1400039fb:	test   rdi,rdi
   1400039fe:	je     0x140003a15
   140003a00:	mov    rax,QWORD PTR [rdi]
   140003a03:	mov    rbx,QWORD PTR [rax+0x8]
   140003a07:	mov    rcx,rbx
   140003a0a:	call   QWORD PTR [rip+0x2900]        # 0x140006310
   140003a10:	mov    rcx,rdi
   140003a13:	call   rbx
   140003a15:	mov    rbx,QWORD PTR [rsp+0x38]
   140003a1a:	lea    rax,[rip+0x42e7]        # 0x140007d08
   140003a21:	mov    rdi,QWORD PTR [rsp+0x48]
   140003a26:	mov    QWORD PTR [rsi],rax
   140003a29:	lea    rax,[rip+0x4390]        # 0x140007dc0
   140003a30:	mov    QWORD PTR [rsi+0x8],rax
   140003a34:	lea    rax,[rip+0x42f5]        # 0x140007d30
   140003a3b:	mov    QWORD PTR [rsi+0x10],rax
   140003a3f:	mov    rax,rsi
   140003a42:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a47:	add    rsp,0x20
   140003a4b:	pop    r14
   140003a4d:	ret    
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	int3   
   140003a51:	int3   
   140003a52:	int3   
   140003a53:	int3   
   140003a54:	int3   
   140003a55:	int3   
   140003a56:	int3   
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	mov    QWORD PTR [rsp+0x8],rbx
   140003a65:	mov    QWORD PTR [rsp+0x10],rbp
   140003a6a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a6f:	push   rdi
   140003a70:	sub    rsp,0x20
   140003a74:	mov    DWORD PTR [rcx+0x2c],0xc0000001
   140003a7b:	mov    ebp,edx
   140003a7d:	mov    rsi,QWORD PTR [rcx+0x20]
   140003a81:	mov    rdi,rcx
   140003a84:	test   rsi,rsi
   140003a87:	je     0x140003aa3
   140003a89:	and    QWORD PTR [rcx+0x20],0x0
   140003a8e:	mov    rax,QWORD PTR [rsi]
   140003a91:	mov    rbx,QWORD PTR [rax+0x10]
   140003a95:	mov    rcx,rbx
   140003a98:	call   QWORD PTR [rip+0x2872]        # 0x140006310
   140003a9e:	mov    rcx,rsi
   140003aa1:	call   rbx
   140003aa3:	test   bpl,0x1
   140003aa7:	je     0x140003ab2
   140003aa9:	mov    rcx,rdi
   140003aac:	call   QWORD PTR [rip+0x2736]        # 0x1400061e8
   140003ab2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ab7:	mov    rax,rdi
   140003aba:	mov    rbp,QWORD PTR [rsp+0x38]
   140003abf:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ac4:	add    rsp,0x20
   140003ac8:	pop    rdi
   140003ac9:	ret    
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	sub    rcx,0x8
   140003ad4:	jmp    0x140003280
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	sub    rcx,0x10
   140003ae4:	jmp    0x1400033e0
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	sub    rcx,0x10
   140003af4:	jmp    0x140003280
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	sub    rcx,0x8
   140003b04:	jmp    0x140003400
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	sub    rcx,0x10
   140003b14:	jmp    0x140003400
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	sub    rcx,0x8
   140003b24:	jmp    0x1400033e0
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	sub    rsp,0x28
   140003b34:	mov    eax,0x5a4d
   140003b39:	cmp    WORD PTR [rip+0xffffffffffffc4c0],ax        # 0x140000000
   140003b40:	je     0x140003b46
   140003b42:	xor    eax,eax
   140003b44:	jmp    0x140003b95
   140003b46:	movsxd rcx,DWORD PTR [rip+0xffffffffffffc4ef]        # 0x14000003c
   140003b4d:	lea    rax,[rip+0xffffffffffffc4ac]        # 0x140000000
   140003b54:	add    rcx,rax
   140003b57:	cmp    DWORD PTR [rcx],0x4550
   140003b5d:	jne    0x140003b42
   140003b5f:	movzx  eax,WORD PTR [rcx+0x18]
   140003b63:	cmp    eax,0x10b
   140003b68:	je     0x140003b84
   140003b6a:	cmp    eax,0x20b
   140003b6f:	jne    0x140003b42
   140003b71:	xor    eax,eax
   140003b73:	cmp    DWORD PTR [rcx+0x84],0xe
   140003b7a:	jbe    0x140003b95
   140003b7c:	cmp    DWORD PTR [rcx+0xf8],eax
   140003b82:	jmp    0x140003b92
   140003b84:	xor    eax,eax
   140003b86:	cmp    DWORD PTR [rcx+0x74],0xe
   140003b8a:	jbe    0x140003b95
   140003b8c:	cmp    DWORD PTR [rcx+0xe8],eax
   140003b92:	setne  al
   140003b95:	mov    ecx,0x2
   140003b9a:	mov    DWORD PTR [rip+0x6608],eax        # 0x14000a1a8
   140003ba0:	call   0x140004308
   140003ba5:	mov    ecx,eax
   140003ba7:	call   QWORD PTR [rip+0x26bb]        # 0x140006268
   140003bad:	mov    rcx,QWORD PTR [rip+0x2674]        # 0x140006228
   140003bb4:	or     rax,0xffffffffffffffff
   140003bb8:	mov    QWORD PTR [rip+0x6d79],rax        # 0x14000a938
   140003bbf:	mov    QWORD PTR [rip+0x6d7a],rax        # 0x14000a940
   140003bc6:	mov    eax,DWORD PTR [rip+0x6b60]        # 0x14000a72c
   140003bcc:	mov    DWORD PTR [rcx],eax
   140003bce:	mov    rcx,QWORD PTR [rip+0x264b]        # 0x140006220
   140003bd5:	mov    eax,DWORD PTR [rip+0x6b45]        # 0x14000a720
   140003bdb:	mov    DWORD PTR [rcx],eax
   140003bdd:	call   0x140002e10
   140003be2:	cmp    DWORD PTR [rip+0x6417],0x0        # 0x14000a000
   140003be9:	jne    0x140003bf8
   140003beb:	lea    rcx,[rip+0xfffffffffffff21e]        # 0x140002e10
   140003bf2:	call   QWORD PTR [rip+0x2650]        # 0x140006248
   140003bf8:	xor    eax,eax
   140003bfa:	add    rsp,0x28
   140003bfe:	ret    
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	int3   
   140003c05:	int3   
   140003c06:	int3   
   140003c07:	int3   
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	sub    rsp,0x38
   140003c14:	mov    eax,DWORD PTR [rip+0x6b0e]        # 0x14000a728
   140003c1a:	lea    r8,[rip+0x657f]        # 0x14000a1a0
   140003c21:	mov    r9d,DWORD PTR [rip+0x6afc]        # 0x14000a724
   140003c28:	lea    rdx,[rip+0x6569]        # 0x14000a198
   140003c2f:	mov    DWORD PTR [rip+0x6577],eax        # 0x14000a1ac
   140003c35:	lea    rcx,[rip+0x6554]        # 0x14000a190
   140003c3c:	lea    rax,[rip+0x6569]        # 0x14000a1ac
   140003c43:	mov    QWORD PTR [rsp+0x20],rax
   140003c48:	call   QWORD PTR [rip+0x2622]        # 0x140006270
   140003c4e:	mov    DWORD PTR [rip+0x6540],eax        # 0x14000a194
   140003c54:	add    rsp,0x38
   140003c58:	ret    
   140003c59:	int3   
   140003c5a:	int3   
   140003c5b:	int3   
   140003c5c:	int3   
   140003c5d:	int3   
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	mov    QWORD PTR [rsp+0x8],rbx
   140003c65:	mov    QWORD PTR [rsp+0x10],rsi
   140003c6a:	mov    QWORD PTR [rsp+0x18],rdi
   140003c6f:	push   r12
   140003c71:	push   r14
   140003c73:	push   r15
   140003c75:	sub    rsp,0xb0
   140003c7c:	xor    r15d,r15d
   140003c7f:	mov    DWORD PTR [rsp+0x20],r15d
   140003c84:	lea    rcx,[rsp+0x40]
   140003c89:	call   QWORD PTR [rip+0x24a1]        # 0x140006130
   140003c8f:	nop
   140003c90:	mov    rax,QWORD PTR gs:0x30
   140003c99:	mov    rbx,QWORD PTR [rax+0x8]
   140003c9d:	mov    r14d,r15d
   140003ca0:	xor    eax,eax
   140003ca2:	lock cmpxchg QWORD PTR [rip+0x6c7d],rbx        # 0x14000a928
   140003cab:	je     0x140003cc9
   140003cad:	cmp    rax,rbx
   140003cb0:	jne    0x140003cbc
   140003cb2:	mov    edi,0x1
   140003cb7:	mov    r14d,edi
   140003cba:	jmp    0x140003cce
   140003cbc:	mov    ecx,0x3e8
   140003cc1:	call   QWORD PTR [rip+0x24c9]        # 0x140006190
   140003cc7:	jmp    0x140003ca0
   140003cc9:	mov    edi,0x1
   140003cce:	mov    eax,DWORD PTR [rip+0x6c5c]        # 0x14000a930
   140003cd4:	cmp    eax,edi
   140003cd6:	jne    0x140003ce6
   140003cd8:	mov    esi,0x1f
   140003cdd:	mov    ecx,esi
   140003cdf:	call   0x140004354
   140003ce4:	jmp    0x140003d57
   140003ce6:	mov    eax,DWORD PTR [rip+0x6c44]        # 0x14000a930
   140003cec:	test   eax,eax
   140003cee:	jne    0x140003d4c
   140003cf0:	mov    DWORD PTR [rip+0x6c3a],edi        # 0x14000a930
   140003cf6:	lea    r12,[rip+0x267b]        # 0x140006378
   140003cfd:	lea    rbx,[rip+0x265c]        # 0x140006360
   140003d04:	mov    QWORD PTR [rsp+0x30],rbx
   140003d09:	mov    eax,r15d
   140003d0c:	mov    DWORD PTR [rsp+0x24],eax
   140003d10:	cmp    rbx,r12
   140003d13:	jae    0x140003d3e
   140003d15:	test   eax,eax
   140003d17:	jne    0x140003d42
   140003d19:	mov    rsi,QWORD PTR [rbx]
   140003d1c:	test   rsi,rsi
   140003d1f:	je     0x140003d33
   140003d21:	mov    rcx,rsi
   140003d24:	mov    rax,QWORD PTR [rip+0x25e5]        # 0x140006310
   140003d2b:	call   rax
   140003d2d:	call   rsi
   140003d2f:	mov    DWORD PTR [rsp+0x24],eax
   140003d33:	add    rbx,0x8
   140003d37:	mov    QWORD PTR [rsp+0x30],rbx
   140003d3c:	jmp    0x140003d10
   140003d3e:	test   eax,eax
   140003d40:	je     0x140003d52
   140003d42:	mov    eax,0xff
   140003d47:	jmp    0x140003eb3
   140003d4c:	mov    DWORD PTR [rip+0x6436],edi        # 0x14000a188
   140003d52:	mov    esi,0x1f
   140003d57:	mov    eax,DWORD PTR [rip+0x6bd3]        # 0x14000a930
   140003d5d:	cmp    eax,edi
   140003d5f:	jne    0x140003d7e
   140003d61:	lea    rdx,[rip+0x25f0]        # 0x140006358
   140003d68:	lea    rcx,[rip+0x25b1]        # 0x140006320
   140003d6f:	call   0x14000451a
   140003d74:	mov    DWORD PTR [rip+0x6bb2],0x2        # 0x14000a930
   140003d7e:	test   r14d,r14d
   140003d81:	jne    0x140003d8d
   140003d83:	mov    rax,r15
   140003d86:	xchg   QWORD PTR [rip+0x6b9b],rax        # 0x14000a928
   140003d8d:	cmp    QWORD PTR [rip+0x6bb4],r15        # 0x14000a948
   140003d94:	je     0x140003dc4
   140003d96:	lea    rcx,[rip+0x6bab]        # 0x14000a948
   140003d9d:	call   0x1400043b0
   140003da2:	test   eax,eax
   140003da4:	je     0x140003dc4
   140003da6:	mov    rbx,QWORD PTR [rip+0x6b9b]        # 0x14000a948
   140003dad:	mov    rcx,rbx
   140003db0:	mov    rax,QWORD PTR [rip+0x2559]        # 0x140006310
   140003db7:	call   rax
   140003db9:	xor    r8d,r8d
   140003dbc:	lea    edx,[r8+0x2]
   140003dc0:	xor    ecx,ecx
   140003dc2:	call   rbx
   140003dc4:	mov    rax,QWORD PTR [rip+0x24e5]        # 0x1400062b0
   140003dcb:	mov    rdx,QWORD PTR [rax]
   140003dce:	test   rdx,rdx
   140003dd1:	jne    0x140003ddd
   140003dd3:	mov    eax,0xff
   140003dd8:	jmp    0x140003eb3
   140003ddd:	mov    QWORD PTR [rsp+0x28],rdx
   140003de2:	mov    ecx,DWORD PTR [rsp+0x20]
   140003de6:	cmp    WORD PTR [rdx],0x20
   140003dea:	ja     0x140003e64
   140003dec:	cmp    WORD PTR [rdx],r15w
   140003df0:	je     0x140003df6
   140003df2:	test   ecx,ecx
   140003df4:	jne    0x140003e64
   140003df6:	movzx  eax,WORD PTR [rdx]
   140003df9:	sub    ax,di
   140003dfc:	cmp    ax,si
   140003dff:	ja     0x140003e0c
   140003e01:	add    rdx,0x2
   140003e05:	mov    QWORD PTR [rsp+0x28],rdx
   140003e0a:	jmp    0x140003df6
   140003e0c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140003e10:	movzx  eax,WORD PTR [rsp+0x80]
   140003e18:	mov    r9d,0xa
   140003e1e:	and    cl,dil
   140003e21:	cmovne r9d,eax
   140003e25:	mov    r8,rdx
   140003e28:	xor    edx,edx
   140003e2a:	lea    rcx,[rip+0xffffffffffffc1cf]        # 0x140000000
   140003e31:	call   0x1400030b8
   140003e36:	mov    DWORD PTR [rip+0x6348],eax        # 0x14000a184
   140003e3c:	cmp    DWORD PTR [rip+0x6365],r15d        # 0x14000a1a8
   140003e43:	jne    0x140003e4d
   140003e45:	mov    ecx,eax
   140003e47:	call   QWORD PTR [rip+0x2413]        # 0x140006260
   140003e4d:	cmp    DWORD PTR [rip+0x6334],r15d        # 0x14000a188
   140003e54:	jne    0x140003e62
   140003e56:	call   QWORD PTR [rip+0x23f4]        # 0x140006250
   140003e5c:	mov    eax,DWORD PTR [rip+0x6322]        # 0x14000a184
   140003e62:	jmp    0x140003eb3
   140003e64:	cmp    WORD PTR [rdx],0x22
   140003e68:	jne    0x140003e78
   140003e6a:	mov    eax,r15d
   140003e6d:	test   ecx,ecx
   140003e6f:	sete   al
   140003e72:	mov    ecx,eax
   140003e74:	mov    DWORD PTR [rsp+0x20],eax
   140003e78:	add    rdx,0x2
   140003e7c:	mov    QWORD PTR [rsp+0x28],rdx
   140003e81:	jmp    0x140003de6
   140003e86:	mov    DWORD PTR [rip+0x62f8],eax        # 0x14000a184
   140003e8c:	cmp    DWORD PTR [rip+0x6315],0x0        # 0x14000a1a8
   140003e93:	jne    0x140003e9e
   140003e95:	mov    ecx,eax
   140003e97:	call   QWORD PTR [rip+0x23bb]        # 0x140006258
   140003e9d:	int3   
   140003e9e:	cmp    DWORD PTR [rip+0x62e3],0x0        # 0x14000a188
   140003ea5:	jne    0x140003eb3
   140003ea7:	call   QWORD PTR [rip+0x23a3]        # 0x140006250
   140003ead:	mov    eax,DWORD PTR [rip+0x62d1]        # 0x14000a184
   140003eb3:	lea    r11,[rsp+0xb0]
   140003ebb:	mov    rbx,QWORD PTR [r11+0x20]
   140003ebf:	mov    rsi,QWORD PTR [r11+0x28]
   140003ec3:	mov    rdi,QWORD PTR [r11+0x30]
   140003ec7:	mov    rsp,r11
   140003eca:	pop    r15
   140003ecc:	pop    r14
   140003ece:	pop    r12
   140003ed0:	ret    
   140003ed1:	int3   
   140003ed2:	int3   
   140003ed3:	int3   
   140003ed4:	int3   
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	sub    rsp,0x28
   140003ee4:	call   0x140004444
   140003ee9:	add    rsp,0x28
   140003eed:	jmp    0x140003c60
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	int3   
   140003f01:	int3   
   140003f02:	int3   
   140003f03:	int3   
   140003f04:	int3   
   140003f05:	int3   
   140003f06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003f10:	cmp    rcx,QWORD PTR [rip+0x60f1]        # 0x14000a008
   140003f17:	jne    0x140003f29
   140003f19:	rol    rcx,0x10
   140003f1d:	test   cx,0xffff
   140003f22:	jne    0x140003f25
   140003f24:	ret    
   140003f25:	ror    rcx,0x10
   140003f29:	jmp    0x140004060
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	int3   
   140003f31:	int3   
   140003f32:	int3   
   140003f33:	int3   
   140003f34:	mov    QWORD PTR [rsp+0x8],rbx
   140003f39:	push   rdi
   140003f3a:	sub    rsp,0x20
   140003f3e:	mov    rdi,rcx
   140003f41:	mov    rax,QWORD PTR [rip+0x69f8]        # 0x14000a940
   140003f48:	mov    QWORD PTR [rsp+0x38],rax
   140003f4d:	cmp    rax,0xffffffffffffffff
   140003f51:	jne    0x140003f6a
   140003f53:	mov    rbx,QWORD PTR [rip+0x229e]        # 0x1400061f8
   140003f5a:	mov    rcx,rbx
   140003f5d:	call   QWORD PTR [rip+0x23ad]        # 0x140006310
   140003f63:	mov    rcx,rdi
   140003f66:	call   rbx
   140003f68:	jmp    0x140003fc7
   140003f6a:	mov    ecx,0x8
   140003f6f:	call   0x140004532
   140003f74:	nop
   140003f75:	mov    rax,QWORD PTR [rip+0x69c4]        # 0x14000a940
   140003f7c:	mov    QWORD PTR [rsp+0x38],rax
   140003f81:	mov    rax,QWORD PTR [rip+0x69b0]        # 0x14000a938
   140003f88:	mov    QWORD PTR [rsp+0x40],rax
   140003f8d:	lea    r8,[rsp+0x40]
   140003f92:	lea    rdx,[rsp+0x38]
   140003f97:	mov    rcx,rdi
   140003f9a:	call   0x14000454a
   140003f9f:	mov    rbx,rax
   140003fa2:	mov    rdx,QWORD PTR [rsp+0x38]
   140003fa7:	mov    QWORD PTR [rip+0x6992],rdx        # 0x14000a940
   140003fae:	mov    rdx,QWORD PTR [rsp+0x40]
   140003fb3:	mov    QWORD PTR [rip+0x697e],rdx        # 0x14000a938
   140003fba:	mov    ecx,0x8
   140003fbf:	call   0x14000453e
   140003fc4:	mov    rax,rbx
   140003fc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fcc:	add    rsp,0x20
   140003fd0:	pop    rdi
   140003fd1:	ret    
   140003fd2:	int3   
   140003fd3:	int3   
   140003fd4:	int3   
   140003fd5:	int3   
   140003fd6:	int3   
   140003fd7:	int3   
   140003fd8:	sub    rsp,0x28
   140003fdc:	call   0x140003f34
   140003fe1:	neg    rax
   140003fe4:	sbb    eax,eax
   140003fe6:	neg    eax
   140003fe8:	dec    eax
   140003fea:	add    rsp,0x28
   140003fee:	ret    
   140003fef:	int3   
   140003ff0:	int3   
   140003ff1:	int3   
   140003ff2:	int3   
   140003ff3:	int3   
   140003ff4:	int3   
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	jmp    QWORD PTR [rip+0x2282]        # 0x140006288
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	jmp    QWORD PTR [rip+0x21d6]        # 0x1400061e8
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	rex push rbx
   14000401a:	sub    rsp,0x20
   14000401e:	mov    rbx,rcx
   140004021:	xor    ecx,ecx
   140004023:	call   QWORD PTR [rip+0x20f7]        # 0x140006120
   140004029:	mov    rcx,rbx
   14000402c:	call   QWORD PTR [rip+0x20e6]        # 0x140006118
   140004032:	call   QWORD PTR [rip+0x2020]        # 0x140006058
   140004038:	mov    rcx,rax
   14000403b:	mov    edx,0xc0000409
   140004040:	add    rsp,0x20
   140004044:	pop    rbx
   140004045:	rex.W jmp QWORD PTR [rip+0x20ec]        # 0x140006138
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	int3   
   140004051:	int3   
   140004052:	int3   
   140004053:	int3   
   140004054:	int3   
   140004055:	int3   
   140004056:	int3   
   140004057:	int3   
   140004058:	int3   
   140004059:	int3   
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	mov    QWORD PTR [rsp+0x8],rcx
   140004065:	sub    rsp,0x88
   14000406c:	lea    rcx,[rip+0x61dd]        # 0x14000a250
   140004073:	call   QWORD PTR [rip+0x20f7]        # 0x140006170
   140004079:	mov    rax,QWORD PTR [rip+0x62c8]        # 0x14000a348
   140004080:	mov    QWORD PTR [rsp+0x48],rax
   140004085:	xor    r8d,r8d
   140004088:	lea    rdx,[rsp+0x50]
   14000408d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004092:	call   QWORD PTR [rip+0x20d0]        # 0x140006168
   140004098:	mov    QWORD PTR [rsp+0x40],rax
   14000409d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400040a3:	je     0x1400040e7
   1400040a5:	mov    QWORD PTR [rsp+0x38],0x0
   1400040ae:	lea    rax,[rsp+0x58]
   1400040b3:	mov    QWORD PTR [rsp+0x30],rax
   1400040b8:	lea    rax,[rsp+0x60]
   1400040bd:	mov    QWORD PTR [rsp+0x28],rax
   1400040c2:	lea    rax,[rip+0x6187]        # 0x14000a250
   1400040c9:	mov    QWORD PTR [rsp+0x20],rax
   1400040ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400040d3:	mov    r8,QWORD PTR [rsp+0x48]
   1400040d8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400040dd:	xor    ecx,ecx
   1400040df:	call   QWORD PTR [rip+0x207b]        # 0x140006160
   1400040e5:	jmp    0x14000410a
   1400040e7:	mov    rax,QWORD PTR [rip+0x61fa]        # 0x14000a2e8
   1400040ee:	mov    rax,QWORD PTR [rax]
   1400040f1:	mov    QWORD PTR [rip+0x6250],rax        # 0x14000a348
   1400040f8:	mov    rax,QWORD PTR [rip+0x61e9]        # 0x14000a2e8
   1400040ff:	add    rax,0x8
   140004103:	mov    QWORD PTR [rip+0x61de],rax        # 0x14000a2e8
   14000410a:	mov    rax,QWORD PTR [rip+0x6237]        # 0x14000a348
   140004111:	mov    QWORD PTR [rip+0x60a8],rax        # 0x14000a1c0
   140004118:	mov    rax,QWORD PTR [rsp+0x90]
   140004120:	mov    QWORD PTR [rip+0x61a9],rax        # 0x14000a2d0
   140004127:	mov    DWORD PTR [rip+0x607f],0xc0000409        # 0x14000a1b0
   140004131:	mov    DWORD PTR [rip+0x6079],0x1        # 0x14000a1b4
   14000413b:	mov    DWORD PTR [rip+0x6083],0x3        # 0x14000a1c8
   140004145:	mov    eax,0x8
   14000414a:	imul   rax,rax,0x0
   14000414e:	lea    rcx,[rip+0x607b]        # 0x14000a1d0
   140004155:	mov    QWORD PTR [rcx+rax*1],0x2
   14000415d:	mov    eax,0x8
   140004162:	imul   rax,rax,0x1
   140004166:	lea    rcx,[rip+0x6063]        # 0x14000a1d0
   14000416d:	mov    rdx,QWORD PTR [rip+0x5e94]        # 0x14000a008
   140004174:	mov    QWORD PTR [rcx+rax*1],rdx
   140004178:	mov    eax,0x8
   14000417d:	imul   rax,rax,0x2
   140004181:	lea    rcx,[rip+0x6048]        # 0x14000a1d0
   140004188:	mov    rdx,QWORD PTR [rip+0x5e81]        # 0x14000a010
   14000418f:	mov    QWORD PTR [rcx+rax*1],rdx
   140004193:	mov    eax,0x8
   140004198:	imul   rax,rax,0x0
   14000419c:	mov    rcx,QWORD PTR [rip+0x5e65]        # 0x14000a008
   1400041a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400041a8:	mov    eax,0x8
   1400041ad:	imul   rax,rax,0x1
   1400041b1:	mov    rcx,QWORD PTR [rip+0x5e58]        # 0x14000a010
   1400041b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400041bd:	lea    rcx,[rip+0x22bc]        # 0x140006480
   1400041c4:	call   0x140004018
   1400041c9:	add    rsp,0x88
   1400041d0:	ret    
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	int3   
   1400041d5:	int3   
   1400041d6:	int3   
   1400041d7:	int3   
   1400041d8:	int3   
   1400041d9:	int3   
   1400041da:	int3   
   1400041db:	int3   
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041e5:	push   rdi
   1400041e6:	sub    rsp,0x20
   1400041ea:	mov    ebx,edx
   1400041ec:	mov    rdi,rcx
   1400041ef:	call   QWORD PTR [rip+0x1ffb]        # 0x1400061f0
   1400041f5:	test   bl,0x1
   1400041f8:	je     0x140004202
   1400041fa:	mov    rcx,rdi
   1400041fd:	call   0x14000400c
   140004202:	mov    rax,rdi
   140004205:	mov    rbx,QWORD PTR [rsp+0x30]
   14000420a:	add    rsp,0x20
   14000420e:	pop    rdi
   14000420f:	ret    
   140004210:	int3   
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	sub    rsp,0x38
   14000421c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004225:	call   0x140004568
   14000422a:	nop
   14000422b:	jmp    0x140004232
   14000422d:	mov    rax,QWORD PTR [rsp+0x50]
   140004232:	add    rsp,0x38
   140004236:	ret    
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	sub    rsp,0x28
   140004244:	mov    rax,QWORD PTR [rcx]
   140004247:	cmp    DWORD PTR [rax],0xe06d7363
   14000424d:	jne    0x140004272
   14000424f:	cmp    DWORD PTR [rax+0x18],0x4
   140004253:	jne    0x140004272
   140004255:	mov    ecx,DWORD PTR [rax+0x20]
   140004258:	lea    eax,[rcx-0x19930520]
   14000425e:	cmp    eax,0x2
   140004261:	jbe    0x14000426b
   140004263:	cmp    ecx,0x1994000
   140004269:	jne    0x140004272
   14000426b:	call   QWORD PTR [rip+0x1fa7]        # 0x140006218
   140004271:	int3   
   140004272:	xor    eax,eax
   140004274:	add    rsp,0x28
   140004278:	ret    
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	sub    rsp,0x28
   140004284:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004240
   14000428b:	call   QWORD PTR [rip+0x1e8f]        # 0x140006120
   140004291:	xor    eax,eax
   140004293:	add    rsp,0x28
   140004297:	ret    
   140004298:	int3   
   140004299:	int3   
   14000429a:	int3   
   14000429b:	int3   
   14000429c:	int3   
   14000429d:	int3   
   14000429e:	jmp    QWORD PTR [rip+0x1fdc]        # 0x140006280
   1400042a4:	int3   
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	sub    rsp,0x18
   1400042b0:	xor    edx,edx
   1400042b2:	lea    rax,[rcx-0x1]
   1400042b6:	cmp    rax,0xfffffffffffffffd
   1400042ba:	ja     0x1400042f8
   1400042bc:	mov    eax,0x5a4d
   1400042c1:	cmp    WORD PTR [rcx],ax
   1400042c4:	jne    0x1400042f0
   1400042c6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400042c9:	jl     0x1400042f0
   1400042cb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400042d2:	jae    0x1400042f0
   1400042d4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400042d8:	add    rax,rcx
   1400042db:	mov    QWORD PTR [rsp],rax
   1400042df:	cmp    DWORD PTR [rax],0x4550
   1400042e5:	cmovne rax,rdx
   1400042e9:	mov    rdx,rax
   1400042ec:	mov    QWORD PTR [rsp],rax
   1400042f0:	jmp    0x1400042f8
   1400042f2:	xor    edx,edx
   1400042f4:	mov    QWORD PTR [rsp],rdx
   1400042f8:	mov    rax,rdx
   1400042fb:	add    rsp,0x18
   1400042ff:	ret    
   140004300:	int3   
   140004301:	int3   
   140004302:	int3   
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	rex push rbx
   14000430a:	sub    rsp,0x20
   14000430e:	mov    ebx,ecx
   140004310:	xor    ecx,ecx
   140004312:	call   QWORD PTR [rip+0x1d58]        # 0x140006070
   140004318:	test   rax,rax
   14000431b:	je     0x140004345
   14000431d:	mov    rcx,rax
   140004320:	call   0x1400042ac
   140004325:	test   rax,rax
   140004328:	je     0x140004345
   14000432a:	mov    ecx,0x2
   14000432f:	cmp    WORD PTR [rax+0x5c],cx
   140004333:	jne    0x140004339
   140004335:	mov    eax,ecx
   140004337:	jmp    0x140004347
   140004339:	cmp    WORD PTR [rax+0x5c],0x3
   14000433e:	mov    eax,0x1
   140004343:	je     0x140004347
   140004345:	mov    eax,ebx
   140004347:	add    rsp,0x20
   14000434b:	pop    rbx
   14000434c:	ret    
   14000434d:	int3   
   14000434e:	int3   
   14000434f:	int3   
   140004350:	int3   
   140004351:	int3   
   140004352:	int3   
   140004353:	int3   
   140004354:	jmp    QWORD PTR [rip+0x1f1e]        # 0x140006278
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004364:	xor    r9d,r9d
   140004367:	add    r8,rcx
   14000436a:	mov    r10,rdx
   14000436d:	movzx  eax,WORD PTR [r8+0x14]
   140004372:	movzx  r11d,WORD PTR [r8+0x6]
   140004377:	add    rax,0x18
   14000437b:	add    rax,r8
   14000437e:	test   r11d,r11d
   140004381:	je     0x1400043a1
   140004383:	mov    edx,DWORD PTR [rax+0xc]
   140004386:	cmp    r10,rdx
   140004389:	jb     0x140004395
   14000438b:	mov    ecx,DWORD PTR [rax+0x8]
   14000438e:	add    ecx,edx
   140004390:	cmp    r10,rcx
   140004393:	jb     0x1400043a3
   140004395:	inc    r9d
   140004398:	add    rax,0x28
   14000439c:	cmp    r9d,r11d
   14000439f:	jb     0x140004383
   1400043a1:	xor    eax,eax
   1400043a3:	ret    
   1400043a4:	int3   
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	int3   
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043b5:	push   rdi
   1400043b6:	sub    rsp,0x20
   1400043ba:	mov    rbx,rcx
   1400043bd:	lea    rdi,[rip+0xffffffffffffbc3c]        # 0x140000000
   1400043c4:	mov    rcx,rdi
   1400043c7:	call   0x140004410
   1400043cc:	test   eax,eax
   1400043ce:	je     0x1400043f2
   1400043d0:	sub    rbx,rdi
   1400043d3:	mov    rdx,rbx
   1400043d6:	mov    rcx,rdi
   1400043d9:	call   0x140004360
   1400043de:	test   rax,rax
   1400043e1:	je     0x1400043f2
   1400043e3:	mov    eax,DWORD PTR [rax+0x24]
   1400043e6:	shr    eax,0x1f
   1400043e9:	not    eax
   1400043eb:	and    eax,0x1
   1400043ee:	jmp    0x1400043f2
   1400043f0:	xor    eax,eax
   1400043f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043f7:	add    rsp,0x20
   1400043fb:	pop    rdi
   1400043fc:	ret    
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    rax,rcx
   140004413:	mov    ecx,0x5a4d
   140004418:	cmp    WORD PTR [rax],cx
   14000441b:	je     0x140004420
   14000441d:	xor    eax,eax
   14000441f:	ret    
   140004420:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004424:	add    rcx,rax
   140004427:	xor    eax,eax
   140004429:	cmp    DWORD PTR [rcx],0x4550
   14000442f:	jne    0x14000443d
   140004431:	mov    edx,0x20b
   140004436:	cmp    WORD PTR [rcx+0x18],dx
   14000443a:	sete   al
   14000443d:	ret    
   14000443e:	int3   
   14000443f:	int3   
   140004440:	int3   
   140004441:	int3   
   140004442:	int3   
   140004443:	int3   
   140004444:	mov    QWORD PTR [rsp+0x20],rbx
   140004449:	push   rbp
   14000444a:	mov    rbp,rsp
   14000444d:	sub    rsp,0x20
   140004451:	and    QWORD PTR [rbp+0x18],0x0
   140004456:	movabs rbx,0x2b992ddfa232
   140004460:	mov    rax,QWORD PTR [rip+0x5ba1]        # 0x14000a008
   140004467:	cmp    rax,rbx
   14000446a:	jne    0x1400044ff
   140004470:	lea    rcx,[rbp+0x18]
   140004474:	call   QWORD PTR [rip+0x1d26]        # 0x1400061a0
   14000447a:	mov    rax,QWORD PTR [rbp+0x18]
   14000447e:	mov    QWORD PTR [rbp+0x10],rax
   140004482:	call   QWORD PTR [rip+0x1cb8]        # 0x140006140
   140004488:	mov    eax,eax
   14000448a:	xor    QWORD PTR [rbp+0x10],rax
   14000448e:	call   QWORD PTR [rip+0x1c1c]        # 0x1400060b0
   140004494:	mov    eax,eax
   140004496:	xor    QWORD PTR [rbp+0x10],rax
   14000449a:	call   QWORD PTR [rip+0x1d08]        # 0x1400061a8
   1400044a0:	mov    eax,eax
   1400044a2:	shl    rax,0x18
   1400044a6:	xor    QWORD PTR [rbp+0x10],rax
   1400044aa:	call   QWORD PTR [rip+0x1cf8]        # 0x1400061a8
   1400044b0:	mov    eax,eax
   1400044b2:	lea    rcx,[rbp+0x10]
   1400044b6:	xor    rax,QWORD PTR [rbp+0x10]
   1400044ba:	xor    rax,rcx
   1400044bd:	lea    rcx,[rbp+0x20]
   1400044c1:	mov    QWORD PTR [rbp+0x10],rax
   1400044c5:	call   QWORD PTR [rip+0x1c85]        # 0x140006150
   1400044cb:	mov    eax,DWORD PTR [rbp+0x20]
   1400044ce:	movabs rcx,0xffffffffffff
   1400044d8:	shl    rax,0x20
   1400044dc:	xor    rax,QWORD PTR [rbp+0x20]
   1400044e0:	xor    rax,QWORD PTR [rbp+0x10]
   1400044e4:	and    rax,rcx
   1400044e7:	movabs rcx,0x2b992ddfa233
   1400044f1:	cmp    rax,rbx
   1400044f4:	cmove  rax,rcx
   1400044f8:	mov    QWORD PTR [rip+0x5b09],rax        # 0x14000a008
   1400044ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140004504:	not    rax
   140004507:	mov    QWORD PTR [rip+0x5b02],rax        # 0x14000a010
   14000450e:	add    rsp,0x20
   140004512:	pop    rbp
   140004513:	ret    
   140004514:	int3   
   140004515:	int3   
   140004516:	int3   
   140004517:	int3   
   140004518:	int3   
   140004519:	int3   
   14000451a:	jmp    QWORD PTR [rip+0x1d20]        # 0x140006240
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	jmp    QWORD PTR [rip+0x1d0c]        # 0x140006238
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	int3   
   140004531:	int3   
   140004532:	jmp    QWORD PTR [rip+0x1cd8]        # 0x140006210
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	jmp    QWORD PTR [rip+0x1cc4]        # 0x140006208
   140004544:	int3   
   140004545:	int3   
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	jmp    QWORD PTR [rip+0x1cb0]        # 0x140006200
   140004550:	int3   
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	jmp    QWORD PTR [rip+0x1c84]        # 0x1400061e0
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	int3   
   140004561:	int3   
   140004562:	int3   
   140004563:	int3   
   140004564:	int3   
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	rex push rbx
   14000456a:	sub    rsp,0x20
   14000456e:	mov    rbx,rcx
   140004571:	jmp    0x140004582
   140004573:	mov    rcx,rbx
   140004576:	call   0x140004ece
   14000457b:	test   eax,eax
   14000457d:	je     0x140004593
   14000457f:	mov    rcx,rbx
   140004582:	call   QWORD PTR [rip+0x1d18]        # 0x1400062a0
   140004588:	test   rax,rax
   14000458b:	je     0x140004573
   14000458d:	add    rsp,0x20
   140004591:	pop    rbx
   140004592:	ret    
   140004593:	call   0x1400048a0
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	rex push rbx
   1400045a2:	sub    rsp,0x20
   1400045a6:	mov    rbx,rcx
   1400045a9:	call   0x140004efe
   1400045ae:	lea    rax,[rip+0x1f43]        # 0x1400064f8
   1400045b5:	mov    QWORD PTR [rbx],rax
   1400045b8:	mov    rax,rbx
   1400045bb:	add    rsp,0x20
   1400045bf:	pop    rbx
   1400045c0:	ret    
   1400045c1:	int3   
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	int3   
   1400045c5:	int3   
   1400045c6:	int3   
   1400045c7:	int3   
   1400045c8:	rex push rbx
   1400045ca:	sub    rsp,0x20
   1400045ce:	lea    rax,[rip+0x1ec3]        # 0x140006498
   1400045d5:	mov    r8d,0x1
   1400045db:	lea    rdx,[rsp+0x30]
   1400045e0:	mov    QWORD PTR [rsp+0x30],rax
   1400045e5:	mov    rbx,rcx
   1400045e8:	call   0x140004ef2
   1400045ed:	lea    rax,[rip+0x1f04]        # 0x1400064f8
   1400045f4:	mov    QWORD PTR [rbx],rax
   1400045f7:	mov    rax,rbx
   1400045fa:	add    rsp,0x20
   1400045fe:	pop    rbx
   1400045ff:	ret    
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	rex push rbx
   14000460a:	sub    rsp,0x20
   14000460e:	mov    rbx,rcx
   140004611:	call   0x140004efe
   140004616:	lea    rax,[rip+0x1eeb]        # 0x140006508
   14000461d:	mov    QWORD PTR [rbx],rax
   140004620:	mov    rax,rbx
   140004623:	add    rsp,0x20
   140004627:	pop    rbx
   140004628:	ret    
   140004629:	int3   
   14000462a:	int3   
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x8],rcx
   140004635:	push   rbx
   140004636:	sub    rsp,0x20
   14000463a:	mov    QWORD PTR [rsp+0x30],rdx
   14000463f:	mov    rbx,rcx
   140004642:	lea    rdx,[rsp+0x30]
   140004647:	call   0x140004ee6
   14000464c:	lea    rax,[rip+0x1eb5]        # 0x140006508
   140004653:	mov    QWORD PTR [rbx],rax
   140004656:	mov    rax,rbx
   140004659:	add    rsp,0x20
   14000465d:	pop    rbx
   14000465e:	ret    
   14000465f:	int3   
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	int3   
   140004665:	int3   
   140004666:	int3   
   140004667:	int3   
   140004668:	lea    rax,[rip+0x1e89]        # 0x1400064f8
   14000466f:	mov    QWORD PTR [rcx],rax
   140004672:	jmp    0x140004f0a
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	jmp    0x140004f0a
   140004685:	int3   
   140004686:	int3   
   140004687:	int3   
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    QWORD PTR [rsp+0x8],rbx
   140004695:	push   rdi
   140004696:	sub    rsp,0x20
   14000469a:	lea    rax,[rip+0x1e57]        # 0x1400064f8
   1400046a1:	mov    ebx,edx
   1400046a3:	mov    QWORD PTR [rcx],rax
   1400046a6:	mov    rdi,rcx
   1400046a9:	call   0x140004f0a
   1400046ae:	test   bl,0x1
   1400046b1:	je     0x1400046bb
   1400046b3:	mov    rcx,rdi
   1400046b6:	call   0x14000400c
   1400046bb:	mov    rax,rdi
   1400046be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046c3:	add    rsp,0x20
   1400046c7:	pop    rdi
   1400046c8:	ret    
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	rex push rbx
   1400046d2:	sub    rsp,0x20
   1400046d6:	lea    rax,[rip+0x1e3b]        # 0x140006518
   1400046dd:	mov    rbx,rcx
   1400046e0:	mov    QWORD PTR [rcx],rax
   1400046e3:	test   dl,0x1
   1400046e6:	je     0x1400046ed
   1400046e8:	call   0x14000400c
   1400046ed:	mov    rax,rbx
   1400046f0:	add    rsp,0x20
   1400046f4:	pop    rbx
   1400046f5:	ret    
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	mov    QWORD PTR [rsp+0x8],rbx
   140004705:	push   rdi
   140004706:	sub    rsp,0x20
   14000470a:	mov    ebx,edx
   14000470c:	mov    rdi,rcx
   14000470f:	call   0x140004f0a
   140004714:	test   bl,0x1
   140004717:	je     0x140004721
   140004719:	mov    rcx,rdi
   14000471c:	call   0x14000400c
   140004721:	mov    rax,rdi
   140004724:	mov    rbx,QWORD PTR [rsp+0x30]
   140004729:	add    rsp,0x20
   14000472d:	pop    rdi
   14000472e:	ret    
   14000472f:	int3   
   140004730:	int3   
   140004731:	int3   
   140004732:	int3   
   140004733:	int3   
   140004734:	int3   
   140004735:	int3   
   140004736:	int3   
   140004737:	int3   
   140004738:	mov    rax,rsp
   14000473b:	mov    QWORD PTR [rax+0x18],r8
   14000473f:	mov    QWORD PTR [rax+0x10],rdx
   140004743:	mov    QWORD PTR [rax+0x8],rcx
   140004747:	push   rbx
   140004748:	push   rsi
   140004749:	push   rdi
   14000474a:	push   r14
   14000474c:	sub    rsp,0x38
   140004750:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004758:	mov    rsi,r8
   14000475b:	mov    rbx,rcx
   14000475e:	mov    rdi,rdx
   140004761:	or     rdi,0xf
   140004765:	mov    r9,0xfffffffffffffffe
   14000476c:	cmp    rdi,r9
   14000476f:	jbe    0x140004776
   140004771:	mov    rdi,rdx
   140004774:	jmp    0x1400047a7
   140004776:	mov    r8,QWORD PTR [rcx+0x18]
   14000477a:	mov    rcx,r8
   14000477d:	shr    rcx,1
   140004780:	movabs rax,0xaaaaaaaaaaaaaaab
   14000478a:	mul    rdi
   14000478d:	shr    rdx,1
   140004790:	cmp    rcx,rdx
   140004793:	jbe    0x1400047a7
   140004795:	mov    rax,r9
   140004798:	sub    rax,rcx
   14000479b:	cmp    r8,rax
   14000479e:	lea    rdi,[rcx+r8*1]
   1400047a2:	jbe    0x1400047a7
   1400047a4:	mov    rdi,r9
   1400047a7:	lea    rcx,[rdi+0x1]
   1400047ab:	xor    r14d,r14d
   1400047ae:	test   rcx,rcx
   1400047b1:	je     0x1400047cc
   1400047b3:	cmp    rcx,0xffffffffffffffff
   1400047b7:	ja     0x1400047c6
   1400047b9:	call   0x140004568
   1400047be:	mov    r14,rax
   1400047c1:	test   rax,rax
   1400047c4:	jne    0x1400047cc
   1400047c6:	call   0x1400048a0
   1400047cb:	nop
   1400047cc:	jmp    0x1400047e2
   1400047ce:	mov    rbx,QWORD PTR [rsp+0x60]
   1400047d3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400047d8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400047dd:	mov    r14,QWORD PTR [rsp+0x78]
   1400047e2:	test   rsi,rsi
   1400047e5:	je     0x140004806
   1400047e7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400047ec:	jb     0x1400047f3
   1400047ee:	mov    rdx,QWORD PTR [rbx]
   1400047f1:	jmp    0x1400047f6
   1400047f3:	mov    rdx,rbx
   1400047f6:	test   rsi,rsi
   1400047f9:	je     0x140004806
   1400047fb:	mov    r8,rsi
   1400047fe:	mov    rcx,r14
   140004801:	call   0x140004f38
   140004806:	cmp    QWORD PTR [rbx+0x18],0x10
   14000480b:	jb     0x140004815
   14000480d:	mov    rcx,QWORD PTR [rbx]
   140004810:	call   0x14000400c
   140004815:	mov    BYTE PTR [rbx],0x0
   140004818:	mov    QWORD PTR [rbx],r14
   14000481b:	mov    QWORD PTR [rbx+0x18],rdi
   14000481f:	mov    QWORD PTR [rbx+0x10],rsi
   140004823:	cmp    rdi,0x10
   140004827:	jb     0x14000482c
   140004829:	mov    rbx,r14
   14000482c:	mov    BYTE PTR [rbx+rsi*1],0x0
   140004830:	add    rsp,0x38
   140004834:	pop    r14
   140004836:	pop    rdi
   140004837:	pop    rsi
   140004838:	pop    rbx
   140004839:	ret    
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    QWORD PTR [rsp+0x8],rbx
   140004845:	mov    QWORD PTR [rsp+0x10],rsi
   14000484a:	push   rdi
   14000484b:	sub    rsp,0x20
   14000484f:	mov    rdi,r8
   140004852:	mov    rbx,rcx
   140004855:	test   dl,dl
   140004857:	je     0x140004878
   140004859:	cmp    QWORD PTR [rcx+0x18],0x10
   14000485e:	jb     0x140004878
   140004860:	mov    rsi,QWORD PTR [rcx]
   140004863:	test   r8,r8
   140004866:	je     0x140004870
   140004868:	mov    rdx,rsi
   14000486b:	call   0x140004f38
   140004870:	mov    rcx,rsi
   140004873:	call   0x14000400c
   140004878:	mov    rsi,QWORD PTR [rsp+0x38]
   14000487d:	mov    QWORD PTR [rbx+0x18],0xf
   140004885:	mov    QWORD PTR [rbx+0x10],rdi
   140004889:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000488d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004892:	add    rsp,0x20
   140004896:	pop    rdi
   140004897:	ret    
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	sub    rsp,0x48
   1400048a4:	lea    rcx,[rsp+0x20]
   1400048a9:	call   0x1400045c8
   1400048ae:	lea    rdx,[rip+0x4163]        # 0x140008a18
   1400048b5:	lea    rcx,[rsp+0x20]
   1400048ba:	call   0x140004f2c
   1400048bf:	int3   
   1400048c0:	int3   
   1400048c1:	int3   
   1400048c2:	int3   
   1400048c3:	int3   
   1400048c4:	int3   
   1400048c5:	int3   
   1400048c6:	int3   
   1400048c7:	int3   
   1400048c8:	sub    rsp,0x28
   1400048cc:	lea    rcx,[rip+0x1d65]        # 0x140006638
   1400048d3:	call   0x1400048e0
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	sub    rsp,0x48
   1400048e4:	mov    rdx,rcx
   1400048e7:	lea    rcx,[rsp+0x20]
   1400048ec:	call   0x140004630
   1400048f1:	lea    rdx,[rip+0x41d0]        # 0x140008ac8
   1400048f8:	lea    rcx,[rsp+0x20]
   1400048fd:	call   0x140004f2c
   140004902:	int3   
   140004903:	int3   
   140004904:	int3   
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	sub    rsp,0x48
   140004910:	mov    rdx,rcx
   140004913:	lea    rcx,[rsp+0x20]
   140004918:	call   0x140004630
   14000491d:	lea    rdx,[rip+0x420c]        # 0x140008b30
   140004924:	lea    rcx,[rsp+0x20]
   140004929:	call   0x140004f2c
   14000492e:	int3   
   14000492f:	int3   
   140004930:	int3   
   140004931:	int3   
   140004932:	int3   
   140004933:	int3   
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	sub    rsp,0x28
   14000493c:	lea    rcx,[rip+0x1cdd]        # 0x140006620
   140004943:	call   0x14000490c
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    QWORD PTR [rsp+0x8],rbx
   140004955:	mov    QWORD PTR [rsp+0x10],rbp
   14000495a:	mov    QWORD PTR [rsp+0x18],rsi
   14000495f:	push   rdi
   140004960:	sub    rsp,0x20
   140004964:	mov    rdi,QWORD PTR [rdx+0x10]
   140004968:	mov    rbp,r8
   14000496b:	mov    rsi,rdx
   14000496e:	mov    rbx,rcx
   140004971:	cmp    rdi,r8
   140004974:	jb     0x140004a4c
   14000497a:	sub    rdi,r8
   14000497d:	cmp    r9,rdi
   140004980:	cmovb  rdi,r9
   140004984:	cmp    rcx,rdx
   140004987:	jne    0x1400049b5
   140004989:	lea    rax,[rdi+r8*1]
   14000498d:	cmp    QWORD PTR [rcx+0x10],rax
   140004991:	jb     0x140004a52
   140004997:	cmp    QWORD PTR [rcx+0x18],0x10
   14000499c:	mov    QWORD PTR [rcx+0x10],rax
   1400049a0:	jb     0x1400049a5
   1400049a2:	mov    rcx,QWORD PTR [rcx]
   1400049a5:	mov    BYTE PTR [rcx+rax*1],0x0
   1400049a9:	xor    edx,edx
   1400049ab:	mov    rcx,rbx
   1400049ae:	call   0x140004c70
   1400049b3:	jmp    0x140004a34
   1400049b5:	cmp    rdi,0xfffffffffffffffe
   1400049b9:	ja     0x140004a58
   1400049bf:	cmp    QWORD PTR [rcx+0x18],rdi
   1400049c3:	jae    0x1400049d3
   1400049c5:	mov    r8,QWORD PTR [rcx+0x10]
   1400049c9:	mov    rdx,rdi
   1400049cc:	call   0x140004738
   1400049d1:	jmp    0x1400049ee
   1400049d3:	test   rdi,rdi
   1400049d6:	jne    0x1400049f3
   1400049d8:	and    QWORD PTR [rcx+0x10],rdi
   1400049dc:	cmp    QWORD PTR [rcx+0x18],0x10
   1400049e1:	jb     0x1400049e8
   1400049e3:	mov    rax,QWORD PTR [rcx]
   1400049e6:	jmp    0x1400049eb
   1400049e8:	mov    rax,rcx
   1400049eb:	mov    BYTE PTR [rax],0x0
   1400049ee:	test   rdi,rdi
   1400049f1:	je     0x140004a34
   1400049f3:	cmp    QWORD PTR [rsi+0x18],0x10
   1400049f8:	jb     0x1400049fd
   1400049fa:	mov    rsi,QWORD PTR [rsi]
   1400049fd:	cmp    QWORD PTR [rbx+0x18],0x10
   140004a02:	jb     0x140004a09
   140004a04:	mov    rcx,QWORD PTR [rbx]
   140004a07:	jmp    0x140004a0c
   140004a09:	mov    rcx,rbx
   140004a0c:	test   rdi,rdi
   140004a0f:	je     0x140004a1d
   140004a11:	lea    rdx,[rsi+rbp*1]
   140004a15:	mov    r8,rdi
   140004a18:	call   0x140004f38
   140004a1d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004a22:	mov    QWORD PTR [rbx+0x10],rdi
   140004a26:	jb     0x140004a2d
   140004a28:	mov    rax,QWORD PTR [rbx]
   140004a2b:	jmp    0x140004a30
   140004a2d:	mov    rax,rbx
   140004a30:	mov    BYTE PTR [rax+rdi*1],0x0
   140004a34:	mov    rbp,QWORD PTR [rsp+0x38]
   140004a39:	mov    rax,rbx
   140004a3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a41:	mov    rsi,QWORD PTR [rsp+0x40]
   140004a46:	add    rsp,0x20
   140004a4a:	pop    rdi
   140004a4b:	ret    
   140004a4c:	call   0x140004938
   140004a51:	int3   
   140004a52:	call   0x140004938
   140004a57:	int3   
   140004a58:	call   0x1400048c8
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	mov    QWORD PTR [rsp+0x8],rbx
   140004a69:	mov    QWORD PTR [rsp+0x10],rsi
   140004a6e:	push   rdi
   140004a6f:	sub    rsp,0x20
   140004a73:	mov    rdi,r8
   140004a76:	mov    rsi,rdx
   140004a79:	mov    rbx,rcx
   140004a7c:	test   rdx,rdx
   140004a7f:	je     0x140004acd
   140004a81:	cmp    QWORD PTR [rcx+0x18],0x10
   140004a86:	jb     0x140004a8d
   140004a88:	mov    rax,QWORD PTR [rcx]
   140004a8b:	jmp    0x140004a90
   140004a8d:	mov    rax,rcx
   140004a90:	cmp    rdx,rax
   140004a93:	jb     0x140004acd
   140004a95:	cmp    QWORD PTR [rcx+0x18],0x10
   140004a9a:	jb     0x140004a9f
   140004a9c:	mov    rcx,QWORD PTR [rcx]
   140004a9f:	add    rcx,QWORD PTR [rbx+0x10]
   140004aa3:	cmp    rcx,rdx
   140004aa6:	jbe    0x140004acd
   140004aa8:	cmp    QWORD PTR [rbx+0x18],0x10
   140004aad:	jb     0x140004ab4
   140004aaf:	mov    rax,QWORD PTR [rbx]
   140004ab2:	jmp    0x140004ab7
   140004ab4:	mov    rax,rbx
   140004ab7:	sub    rsi,rax
   140004aba:	mov    r9,r8
   140004abd:	mov    r8,rsi
   140004ac0:	mov    rdx,rbx
   140004ac3:	mov    rcx,rbx
   140004ac6:	call   0x140004950
   140004acb:	jmp    0x140004b47
   140004acd:	cmp    r8,0xfffffffffffffffe
   140004ad1:	ja     0x140004b57
   140004ad7:	cmp    QWORD PTR [rbx+0x18],r8
   140004adb:	jae    0x140004aee
   140004add:	mov    r8,QWORD PTR [rbx+0x10]
   140004ae1:	mov    rdx,rdi
   140004ae4:	mov    rcx,rbx
   140004ae7:	call   0x140004738
   140004aec:	jmp    0x140004b09
   140004aee:	test   r8,r8
   140004af1:	jne    0x140004b09
   140004af3:	and    QWORD PTR [rbx+0x10],r8
   140004af7:	cmp    QWORD PTR [rbx+0x18],0x10
   140004afc:	jb     0x140004b03
   140004afe:	mov    rax,QWORD PTR [rbx]
   140004b01:	jmp    0x140004b06
   140004b03:	mov    rax,rbx
   140004b06:	mov    BYTE PTR [rax],0x0
   140004b09:	test   rdi,rdi
   140004b0c:	je     0x140004b44
   140004b0e:	cmp    QWORD PTR [rbx+0x18],0x10
   140004b13:	jb     0x140004b1a
   140004b15:	mov    rcx,QWORD PTR [rbx]
   140004b18:	jmp    0x140004b1d
   140004b1a:	mov    rcx,rbx
   140004b1d:	test   rdi,rdi
   140004b20:	je     0x140004b2d
   140004b22:	mov    r8,rdi
   140004b25:	mov    rdx,rsi
   140004b28:	call   0x140004f38
   140004b2d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004b32:	mov    QWORD PTR [rbx+0x10],rdi
   140004b36:	jb     0x140004b3d
   140004b38:	mov    rax,QWORD PTR [rbx]
   140004b3b:	jmp    0x140004b40
   140004b3d:	mov    rax,rbx
   140004b40:	mov    BYTE PTR [rax+rdi*1],0x0
   140004b44:	mov    rax,rbx
   140004b47:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b4c:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b51:	add    rsp,0x20
   140004b55:	pop    rdi
   140004b56:	ret    
   140004b57:	mov    rcx,rbx
   140004b5a:	call   0x1400048c8
   140004b5f:	int3   
   140004b60:	int3   
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	int3   
   140004b65:	int3   
   140004b66:	int3   
   140004b67:	int3   
   140004b68:	int3   
   140004b69:	int3   
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x8],rbx
   140004b75:	push   rdi
   140004b76:	sub    rsp,0x20
   140004b7a:	mov    ecx,r8d
   140004b7d:	mov    edi,r8d
   140004b80:	mov    rbx,rdx
   140004b83:	call   0x140004e70
   140004b88:	test   rax,rax
   140004b8b:	mov    DWORD PTR [rbx],edi
   140004b8d:	lea    rax,[rip+0x548c]        # 0x14000a020
   140004b94:	jne    0x140004b9d
   140004b96:	lea    rax,[rip+0x5493]        # 0x14000a030
   140004b9d:	mov    QWORD PTR [rbx+0x8],rax
   140004ba1:	mov    rax,rbx
   140004ba4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ba9:	add    rsp,0x20
   140004bad:	pop    rdi
   140004bae:	ret    
   140004baf:	int3   
   140004bb0:	int3   
   140004bb1:	int3   
   140004bb2:	int3   
   140004bb3:	int3   
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	int3   
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	mov    DWORD PTR [rdx],r8d
   140004bc3:	mov    rax,rdx
   140004bc6:	mov    QWORD PTR [rdx+0x8],rcx
   140004bca:	ret    
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	int3   
   140004bd1:	int3   
   140004bd2:	int3   
   140004bd3:	int3   
   140004bd4:	int3   
   140004bd5:	int3   
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004be4:	jne    0x140004bf1
   140004be6:	cmp    DWORD PTR [rdx],r8d
   140004be9:	jne    0x140004bf1
   140004beb:	mov    eax,0x1
   140004bf0:	ret    
   140004bf1:	xor    eax,eax
   140004bf3:	ret    
   140004bf4:	int3   
   140004bf5:	int3   
   140004bf6:	int3   
   140004bf7:	int3   
   140004bf8:	int3   
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	mov    QWORD PTR [rsp+0x8],rbx
   140004c05:	mov    QWORD PTR [rsp+0x10],rsi
   140004c0a:	mov    QWORD PTR [rsp+0x18],rdi
   140004c0f:	push   r14
   140004c11:	sub    rsp,0x30
   140004c15:	mov    rax,QWORD PTR [rcx]
   140004c18:	mov    rsi,rcx
   140004c1b:	mov    r14,r8
   140004c1e:	mov    edi,edx
   140004c20:	mov    rbx,QWORD PTR [rax+0x18]
   140004c24:	mov    rcx,rbx
   140004c27:	call   QWORD PTR [rip+0x16e3]        # 0x140006310
   140004c2d:	mov    r8d,edi
   140004c30:	lea    rdx,[rsp+0x20]
   140004c35:	mov    rcx,rsi
   140004c38:	call   rbx
   140004c3a:	mov    rcx,QWORD PTR [r14+0x8]
   140004c3e:	cmp    QWORD PTR [rax+0x8],rcx
   140004c42:	jne    0x140004c52
   140004c44:	mov    ecx,DWORD PTR [r14]
   140004c47:	cmp    DWORD PTR [rax],ecx
   140004c49:	jne    0x140004c52
   140004c4b:	mov    eax,0x1
   140004c50:	jmp    0x140004c54
   140004c52:	xor    eax,eax
   140004c54:	mov    rbx,QWORD PTR [rsp+0x40]
   140004c59:	mov    rsi,QWORD PTR [rsp+0x48]
   140004c5e:	mov    rdi,QWORD PTR [rsp+0x50]
   140004c63:	add    rsp,0x30
   140004c67:	pop    r14
   140004c69:	ret    
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	mov    QWORD PTR [rsp+0x8],rbx
   140004c75:	push   rdi
   140004c76:	sub    rsp,0x20
   140004c7a:	mov    rdi,QWORD PTR [rcx+0x10]
   140004c7e:	mov    rbx,rcx
   140004c81:	cmp    rdi,rdx
   140004c84:	jb     0x140004cfe
   140004c86:	mov    rax,rdi
   140004c89:	sub    rax,rdx
   140004c8c:	cmp    rax,r8
   140004c8f:	ja     0x140004caa
   140004c91:	cmp    QWORD PTR [rcx+0x18],0x10
   140004c96:	mov    QWORD PTR [rcx+0x10],rdx
   140004c9a:	jb     0x140004ca1
   140004c9c:	mov    rax,QWORD PTR [rcx]
   140004c9f:	jmp    0x140004ca4
   140004ca1:	mov    rax,rcx
   140004ca4:	mov    BYTE PTR [rax+rdx*1],0x0
   140004ca8:	jmp    0x140004cf0
   140004caa:	test   r8,r8
   140004cad:	je     0x140004cf0
   140004caf:	cmp    QWORD PTR [rcx+0x18],0x10
   140004cb4:	jb     0x140004cbb
   140004cb6:	mov    rax,QWORD PTR [rcx]
   140004cb9:	jmp    0x140004cbe
   140004cbb:	mov    rax,rcx
   140004cbe:	sub    rdi,r8
   140004cc1:	lea    rcx,[rax+rdx*1]
   140004cc5:	mov    rax,rdi
   140004cc8:	sub    rax,rdx
   140004ccb:	je     0x140004cd9
   140004ccd:	lea    rdx,[rcx+r8*1]
   140004cd1:	mov    r8,rax
   140004cd4:	call   0x140004eda
   140004cd9:	cmp    QWORD PTR [rbx+0x18],0x10
   140004cde:	mov    QWORD PTR [rbx+0x10],rdi
   140004ce2:	jb     0x140004ce9
   140004ce4:	mov    rax,QWORD PTR [rbx]
   140004ce7:	jmp    0x140004cec
   140004ce9:	mov    rax,rbx
   140004cec:	mov    BYTE PTR [rax+rdi*1],0x0
   140004cf0:	mov    rax,rbx
   140004cf3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004cf8:	add    rsp,0x20
   140004cfc:	pop    rdi
   140004cfd:	ret    
   140004cfe:	call   0x140004938
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	int3   
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	mov    QWORD PTR [rsp+0x8],rbx
   140004d15:	push   rdi
   140004d16:	sub    rsp,0x30
   140004d1a:	xor    ebx,ebx
   140004d1c:	mov    ecx,r8d
   140004d1f:	mov    DWORD PTR [rsp+0x20],ebx
   140004d23:	mov    rdi,rdx
   140004d26:	call   0x140004e70
   140004d2b:	test   rax,rax
   140004d2e:	mov    QWORD PTR [rdi+0x18],0xf
   140004d36:	mov    QWORD PTR [rdi+0x10],rbx
   140004d3a:	lea    rdx,[rip+0x183f]        # 0x140006580
   140004d41:	cmovne rdx,rax
   140004d45:	mov    BYTE PTR [rdi],bl
   140004d47:	cmp    BYTE PTR [rdx],bl
   140004d49:	je     0x140004d5a
   140004d4b:	or     rax,0xffffffffffffffff
   140004d4f:	inc    rax
   140004d52:	cmp    BYTE PTR [rdx+rax*1],bl
   140004d55:	jne    0x140004d4f
   140004d57:	mov    rbx,rax
   140004d5a:	mov    r8,rbx
   140004d5d:	mov    rcx,rdi
   140004d60:	call   0x140004a64
   140004d65:	mov    rbx,QWORD PTR [rsp+0x40]
   140004d6a:	mov    rax,rdi
   140004d6d:	add    rsp,0x30
   140004d71:	pop    rdi
   140004d72:	ret    
   140004d73:	int3   
   140004d74:	int3   
   140004d75:	int3   
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	int3   
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	rex push rbx
   140004d82:	sub    rsp,0x30
   140004d86:	xor    eax,eax
   140004d88:	mov    rbx,rdx
   140004d8b:	mov    DWORD PTR [rsp+0x20],eax
   140004d8f:	cmp    r8d,0x1
   140004d93:	jne    0x140004db8
   140004d95:	mov    QWORD PTR [rdx+0x18],0xf
   140004d9d:	lea    r8d,[rax+0x15]
   140004da1:	mov    QWORD PTR [rdx+0x10],rax
   140004da5:	mov    rcx,rbx
   140004da8:	mov    BYTE PTR [rdx],al
   140004daa:	lea    rdx,[rip+0x181f]        # 0x1400065d0
   140004db1:	call   0x140004a64
   140004db6:	jmp    0x140004dbd
   140004db8:	call   0x140004d10
   140004dbd:	mov    rax,rbx
   140004dc0:	add    rsp,0x30
   140004dc4:	pop    rbx
   140004dc5:	ret    
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004dd5:	push   rdi
   140004dd6:	sub    rsp,0x30
   140004dda:	xor    ebx,ebx
   140004ddc:	mov    ecx,r8d
   140004ddf:	mov    DWORD PTR [rsp+0x20],ebx
   140004de3:	mov    rdi,rdx
   140004de6:	call   0x140004ea0
   140004deb:	test   rax,rax
   140004dee:	mov    QWORD PTR [rdi+0x18],0xf
   140004df6:	mov    QWORD PTR [rdi+0x10],rbx
   140004dfa:	lea    rdx,[rip+0x177f]        # 0x140006580
   140004e01:	cmovne rdx,rax
   140004e05:	mov    BYTE PTR [rdi],bl
   140004e07:	cmp    BYTE PTR [rdx],bl
   140004e09:	je     0x140004e1a
   140004e0b:	or     rax,0xffffffffffffffff
   140004e0f:	inc    rax
   140004e12:	cmp    BYTE PTR [rdx+rax*1],bl
   140004e15:	jne    0x140004e0f
   140004e17:	mov    rbx,rax
   140004e1a:	mov    r8,rbx
   140004e1d:	mov    rcx,rdi
   140004e20:	call   0x140004a64
   140004e25:	mov    rbx,QWORD PTR [rsp+0x40]
   140004e2a:	mov    rax,rdi
   140004e2d:	add    rsp,0x30
   140004e31:	pop    rdi
   140004e32:	ret    
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	lea    rax,[rip+0x1731]        # 0x140006578
   140004e47:	ret    
   140004e48:	int3   
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	lea    rax,[rip+0x1769]        # 0x1400065c0
   140004e57:	ret    
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	lea    rax,[rip+0x17b1]        # 0x140006618
   140004e67:	ret    
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	cmp    QWORD PTR [rip+0x20d0],0x0        # 0x140006f48
   140004e78:	lea    rax,[rip+0x20c1]        # 0x140006f40
   140004e7f:	je     0x140004e90
   140004e81:	cmp    DWORD PTR [rax],ecx
   140004e83:	je     0x140004e93
   140004e85:	add    rax,0x10
   140004e89:	cmp    QWORD PTR [rax+0x8],0x0
   140004e8e:	jne    0x140004e81
   140004e90:	xor    eax,eax
   140004e92:	ret    
   140004e93:	mov    rax,QWORD PTR [rax+0x8]
   140004e97:	ret    
   140004e98:	int3   
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	cmp    QWORD PTR [rip+0x17b0],0x0        # 0x140006658
   140004ea8:	lea    rax,[rip+0x17a1]        # 0x140006650
   140004eaf:	je     0x140004ec0
   140004eb1:	cmp    DWORD PTR [rax],ecx
   140004eb3:	je     0x140004ec3
   140004eb5:	add    rax,0x10
   140004eb9:	cmp    QWORD PTR [rax+0x8],0x0
   140004ebe:	jne    0x140004eb1
   140004ec0:	xor    eax,eax
   140004ec2:	ret    
   140004ec3:	mov    rax,QWORD PTR [rax+0x8]
   140004ec7:	ret    
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	jmp    QWORD PTR [rip+0x13e4]        # 0x1400062b8
   140004ed4:	int3   
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	jmp    QWORD PTR [rip+0x13e0]        # 0x1400062c0
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	jmp    QWORD PTR [rip+0x13dc]        # 0x1400062c8
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	int3   
   140004ef1:	int3   
   140004ef2:	jmp    QWORD PTR [rip+0x13d8]        # 0x1400062d0
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	jmp    QWORD PTR [rip+0x13d4]        # 0x1400062d8
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	jmp    QWORD PTR [rip+0x13d0]        # 0x1400062e0
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	jmp    QWORD PTR [rip+0x13c2]        # 0x1400062e8
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	jmp    QWORD PTR [rip+0x1366]        # 0x140006298
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	int3   
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	jmp    QWORD PTR [rip+0x1352]        # 0x140006290
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	sub    rsp,0x28
   140004f48:	mov    r8,QWORD PTR [r9+0x38]
   140004f4c:	mov    rcx,rdx
   140004f4f:	mov    rdx,r9
   140004f52:	call   0x140004f68
   140004f57:	mov    eax,0x1
   140004f5c:	add    rsp,0x28
   140004f60:	ret    
   140004f61:	int3   
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	int3   
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	rex push rbx
   140004f6a:	sub    rsp,0x20
   140004f6e:	mov    r11d,DWORD PTR [r8]
   140004f71:	mov    rbx,rdx
   140004f74:	and    r11d,0xfffffff8
   140004f78:	mov    r9,rcx
   140004f7b:	test   BYTE PTR [r8],0x4
   140004f7f:	mov    r10,rcx
   140004f82:	je     0x140004f97
   140004f84:	mov    eax,DWORD PTR [r8+0x8]
   140004f88:	movsxd r10,DWORD PTR [r8+0x4]
   140004f8c:	neg    eax
   140004f8e:	add    r10,rcx
   140004f91:	movsxd rcx,eax
   140004f94:	and    r10,rcx
   140004f97:	movsxd rax,r11d
   140004f9a:	mov    rdx,QWORD PTR [rax+r10*1]
   140004f9e:	mov    rax,QWORD PTR [rbx+0x10]
   140004fa2:	mov    ecx,DWORD PTR [rax+0x8]
   140004fa5:	add    rcx,QWORD PTR [rbx+0x8]
   140004fa9:	test   BYTE PTR [rcx+0x3],0xf
   140004fad:	je     0x140004fbb
   140004faf:	movzx  eax,BYTE PTR [rcx+0x3]
   140004fb3:	and    eax,0xfffffff0
   140004fb6:	cdqe   
   140004fb8:	add    r9,rax
   140004fbb:	xor    r9,rdx
   140004fbe:	mov    rcx,r9
   140004fc1:	add    rsp,0x20
   140004fc5:	pop    rbx
   140004fc6:	jmp    0x140003f10
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	int3   
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	jmp    QWORD PTR [rip+0x1314]        # 0x1400062f0
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	int3   
   140004fe1:	int3   
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004ff0:	jmp    rax
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	int3   
   140004ff5:	int3   
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	int3   
   140005001:	int3   
   140005002:	int3   
   140005003:	int3   
   140005004:	int3   
   140005005:	int3   
   140005006:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005010:	sub    rsp,0x10
   140005014:	mov    QWORD PTR [rsp],r10
   140005018:	mov    QWORD PTR [rsp+0x8],r11
   14000501d:	xor    r11,r11
   140005020:	lea    r10,[rsp+0x18]
   140005025:	sub    r10,rax
   140005028:	cmovb  r10,r11
   14000502c:	mov    r11,QWORD PTR gs:0x10
   140005035:	cmp    r10,r11
   140005038:	jae    0x14000504f
   14000503a:	and    r10w,0xf000
   140005040:	lea    r11,[r11-0x1000]
   140005047:	test   BYTE PTR [r11],r11b
   14000504a:	cmp    r10,r11
   14000504d:	jne    0x140005040
   14000504f:	mov    r10,QWORD PTR [rsp]
   140005053:	mov    r11,QWORD PTR [rsp+0x8]
   140005058:	add    rsp,0x10
   14000505c:	ret    
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	int3   
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	int3   
   140005065:	int3   
   140005066:	lea    rcx,[rdx+0x68]
   14000506d:	jmp    0x140003478
   140005072:	lea    rcx,[rdx+0x70]
   140005079:	jmp    0x14000238c
   14000507e:	int3   
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	rex push rbp
   140005086:	sub    rsp,0x20
   14000508a:	mov    rbp,rdx
   14000508d:	mov    rax,QWORD PTR [rcx]
   140005090:	mov    rdx,rcx
   140005093:	mov    ecx,DWORD PTR [rax]
   140005095:	call   0x14000429e
   14000509a:	nop
   14000509b:	add    rsp,0x20
   14000509f:	pop    rbp
   1400050a0:	ret    
   1400050a1:	int3   
   1400050a2:	int3   
   1400050a3:	int3   
   1400050a4:	int3   
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	rex push rbp
   1400050aa:	sub    rsp,0x20
   1400050ae:	mov    rbp,rdx
   1400050b1:	mov    ecx,0x8
   1400050b6:	call   0x14000453e
   1400050bb:	nop
   1400050bc:	add    rsp,0x20
   1400050c0:	pop    rbp
   1400050c1:	ret    
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	int3   
   1400050c9:	mov    QWORD PTR [rsp+0x10],rdx
   1400050ce:	push   rbp
   1400050cf:	sub    rsp,0x20
   1400050d3:	mov    rbp,rdx
   1400050d6:	and    QWORD PTR [rbp+0x50],0x0
   1400050db:	lea    rax,[rip+0xfffffffffffff14b]        # 0x14000422d
   1400050e2:	add    rsp,0x20
   1400050e6:	pop    rbp
   1400050e7:	ret    
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	rex push rbp
   1400050f2:	sub    rsp,0x20
   1400050f6:	mov    rbp,rdx
   1400050f9:	mov    rax,QWORD PTR [rcx]
   1400050fc:	xor    ecx,ecx
   1400050fe:	cmp    DWORD PTR [rax],0xc0000005
   140005104:	sete   cl
   140005107:	mov    eax,ecx
   140005109:	add    rsp,0x20
   14000510d:	pop    rbp
   14000510e:	ret    
   14000510f:	int3   
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	mov    QWORD PTR [rsp+0x10],rdx
   14000511b:	push   rbp
   14000511c:	sub    rsp,0x20
   140005120:	mov    rbp,rdx
   140005123:	mov    rcx,QWORD PTR [rbp+0x68]
   140005127:	mov    QWORD PTR [rbp+0x68],rcx
   14000512b:	xor    eax,eax
   14000512d:	add    rcx,0x1
   140005131:	je     0x140005148
   140005133:	cmp    rcx,0xffffffffffffffff
   140005137:	ja     0x140005143
   140005139:	call   0x140004568
   14000513e:	test   rax,rax
   140005141:	jne    0x140005148
   140005143:	call   0x1400048a0
   140005148:	mov    QWORD PTR [rbp+0x78],rax
   14000514c:	lea    rax,[rip+0xfffffffffffff67b]        # 0x1400047ce
   140005153:	add    rsp,0x20
   140005157:	pop    rbp
   140005158:	ret    
   140005159:	int3   
   14000515a:	mov    QWORD PTR [rsp+0x10],rdx
   14000515f:	push   rbp
   140005160:	sub    rsp,0x20
   140005164:	mov    rbp,rdx
   140005167:	xor    r8d,r8d
   14000516a:	mov    dl,0x1
   14000516c:	mov    rcx,QWORD PTR [rbp+0x60]
   140005170:	call   0x140004840
   140005175:	xor    edx,edx
   140005177:	xor    ecx,ecx
   140005179:	call   0x140004f2c
   14000517e:	nop
   14000517f:	int3   
   140005180:	int3   
   140005181:	int3   
   140005182:	int3   
   140005183:	int3   
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    QWORD PTR [rsp+0x8],rbx
   140005195:	push   rdi
   140005196:	sub    rsp,0x20
   14000519a:	lea    rbx,[rip+0x56bf]        # 0x14000a860
   1400051a1:	mov    rdi,QWORD PTR [rbx]
   1400051a4:	jmp    0x1400051b3
   1400051a6:	mov    rcx,rdi
   1400051a9:	mov    rdi,QWORD PTR [rdi+0x10]
   1400051ad:	call   QWORD PTR [rip+0x10f5]        # 0x1400062a8
   1400051b3:	test   rdi,rdi
   1400051b6:	jne    0x1400051a6
   1400051b8:	mov    QWORD PTR [rbx],rdi
   1400051bb:	lea    rax,[rip+0x573e]        # 0x14000a900
   1400051c2:	add    rbx,0x8
   1400051c6:	cmp    rbx,rax
   1400051c9:	jne    0x1400051a1
   1400051cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051d0:	add    rsp,0x20
   1400051d4:	pop    rdi
   1400051d5:	ret    
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400051e5:	push   rdi
   1400051e6:	sub    rsp,0x20
   1400051ea:	lea    r9,[rsp+0x38]
   1400051ef:	xor    edx,edx
   1400051f1:	lea    r8,[rsp+0x30]
   1400051f6:	lea    rcx,[rip+0x5703]        # 0x14000a900
   1400051fd:	call   QWORD PTR [rip+0xe4d]        # 0x140006050
   140005203:	test   eax,eax
   140005205:	je     0x14000522a
   140005207:	cmp    DWORD PTR [rsp+0x30],0x0
   14000520c:	jne    0x14000522a
   14000520e:	mov    rdi,QWORD PTR [rsp+0x38]
   140005213:	mov    rax,QWORD PTR [rdi]
   140005216:	mov    rbx,QWORD PTR [rax+0x18]
   14000521a:	mov    rcx,rbx
   14000521d:	call   QWORD PTR [rip+0x10ed]        # 0x140006310
   140005223:	xor    edx,edx
   140005225:	mov    rcx,rdi
   140005228:	call   rbx
   14000522a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000522f:	add    rsp,0x20
   140005233:	pop    rdi
   140005234:	ret    
   140005235:	int3   
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	mov    QWORD PTR [rsp+0x18],rbx
   140005245:	push   rdi
   140005246:	sub    rsp,0x20
   14000524a:	lea    r9,[rsp+0x38]
   14000524f:	xor    edx,edx
   140005251:	lea    r8,[rsp+0x30]
   140005256:	lea    rcx,[rip+0x559b]        # 0x14000a7f8
   14000525d:	call   QWORD PTR [rip+0xded]        # 0x140006050
   140005263:	test   eax,eax
   140005265:	je     0x14000528a
   140005267:	cmp    DWORD PTR [rsp+0x30],0x0
   14000526c:	jne    0x14000528a
   14000526e:	mov    rdi,QWORD PTR [rsp+0x38]
   140005273:	mov    rax,QWORD PTR [rdi]
   140005276:	mov    rbx,QWORD PTR [rax+0x18]
   14000527a:	mov    rcx,rbx
   14000527d:	call   QWORD PTR [rip+0x108d]        # 0x140006310
   140005283:	xor    edx,edx
   140005285:	mov    rcx,rdi
   140005288:	call   rbx
   14000528a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000528f:	add    rsp,0x20
   140005293:	pop    rdi
   140005294:	ret    
   140005295:	int3   
   140005296:	int3   
   140005297:	int3   
   140005298:	int3   
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	lea    rax,[rip+0x1271]        # 0x140006518
   1400052a7:	mov    QWORD PTR [rip+0x4d72],rax        # 0x14000a020
   1400052ae:	ret    
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	lea    rax,[rip+0x1251]        # 0x140006518
   1400052c7:	mov    QWORD PTR [rip+0x4d5a],rax        # 0x14000a028
   1400052ce:	ret    
   1400052cf:	int3   
   1400052d0:	int3   
   1400052d1:	int3   
   1400052d2:	int3   
   1400052d3:	int3   
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	int3   
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	lea    rax,[rip+0x1231]        # 0x140006518
   1400052e7:	mov    QWORD PTR [rip+0x4d42],rax        # 0x14000a030
   1400052ee:	ret    
