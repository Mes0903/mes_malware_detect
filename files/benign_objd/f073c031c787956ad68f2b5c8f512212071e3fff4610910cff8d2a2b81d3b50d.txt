
f073c031c787956ad68f2b5c8f512212071e3fff4610910cff8d2a2b81d3b50d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x8],rbx
   14000100f:	mov    QWORD PTR [rax+0x10],rsi
   140001013:	push   rdi
   140001014:	sub    rsp,0x30
   140001018:	mov    ebx,r8d
   14000101b:	mov    rsi,rcx
   14000101e:	xor    edi,edi
   140001020:	lea    rcx,[rax-0x18]
   140001024:	mov    r8,r9
   140001027:	mov    QWORD PTR [rax-0x18],rdi
   14000102b:	mov    QWORD PTR [rax-0x10],rdi
   14000102f:	call   0x140003840
   140001034:	test   eax,eax
   140001036:	je     0x140001077
   140001038:	mov    eax,DWORD PTR [rsp+0x20]
   14000103c:	test   eax,eax
   14000103e:	je     0x140001066
   140001040:	mov    rbx,QWORD PTR [rsp+0x28]
   140001045:	mov    edi,eax
   140001047:	mov    r8,QWORD PTR [rbx]
   14000104a:	lea    rcx,[rip+0x54e7]        # 0x140006538
   140001051:	mov    rdx,rsi
   140001054:	call   QWORD PTR [rip+0x5316]        # 0x140006370
   14000105a:	lea    rbx,[rbx+0x8]
   14000105e:	sub    rdi,0x1
   140001062:	jne    0x140001047
   140001064:	jmp    0x140001077
   140001066:	test   ebx,ebx
   140001068:	je     0x140001077
   14000106a:	mov    rdx,rsi
   14000106d:	mov    ecx,0x2711
   140001072:	call   0x140003af4
   140001077:	lea    rcx,[rsp+0x20]
   14000107c:	call   0x140003668
   140001081:	mov    rbx,QWORD PTR [rsp+0x40]
   140001086:	mov    eax,0x1f
   14000108b:	mov    rsi,QWORD PTR [rsp+0x48]
   140001090:	add    rsp,0x30
   140001094:	pop    rdi
   140001095:	ret    
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	mov    QWORD PTR [rsp+0x8],rbx
   1400010a1:	mov    QWORD PTR [rsp+0x10],rdi
   1400010a6:	push   rbp
   1400010a7:	lea    rbp,[rsp-0x70]
   1400010ac:	sub    rsp,0x170
   1400010b3:	mov    rax,QWORD PTR [rip+0x7f4e]        # 0x140009008
   1400010ba:	xor    rax,rsp
   1400010bd:	mov    QWORD PTR [rbp+0x60],rax
   1400010c1:	and    QWORD PTR [rsp+0x50],0x0
   1400010c7:	lea    rax,[rsp+0x50]
   1400010cc:	and    QWORD PTR [rsp+0x58],0x0
   1400010d2:	lea    rdx,[rip+0x5477]        # 0x140006550
   1400010d9:	and    DWORD PTR [rsp+0x40],0x0
   1400010de:	mov    r9d,0x20019
   1400010e4:	xor    r8d,r8d
   1400010e7:	mov    QWORD PTR [rsp+0x20],rax
   1400010ec:	mov    rcx,0xffffffff80000002
   1400010f3:	call   QWORD PTR [rip+0x4f17]        # 0x140006010
   1400010f9:	test   eax,eax
   1400010fb:	je     0x14000112a
   1400010fd:	cmp    eax,0x2
   140001100:	je     0x14000111b
   140001102:	mov    r8d,eax
   140001105:	lea    rdx,[rip+0x5444]        # 0x140006550
   14000110c:	mov    ecx,0x2713
   140001111:	call   0x140003af4
   140001116:	jmp    0x1400012b9
   14000111b:	mov    ecx,0x2712
   140001120:	call   0x140003af4
   140001125:	jmp    0x1400012b9
   14000112a:	xor    edi,edi
   14000112c:	and    QWORD PTR [rsp+0x38],rdi
   140001131:	and    QWORD PTR [rsp+0x30],rdi
   140001136:	and    QWORD PTR [rsp+0x28],rdi
   14000113b:	and    QWORD PTR [rsp+0x20],rdi
   140001140:	xor    edx,edx
   140001142:	jmp    0x140001281
   140001147:	mov    rcx,QWORD PTR [rsp+0x50]
   14000114c:	lea    rax,[rsp+0x58]
   140001151:	mov    r9d,0x20019
   140001157:	mov    QWORD PTR [rsp+0x20],rax
   14000115c:	xor    r8d,r8d
   14000115f:	lea    rdx,[rsp+0x60]
   140001164:	call   QWORD PTR [rip+0x4ea6]        # 0x140006010
   14000116a:	test   eax,eax
   14000116c:	jne    0x1400012dc
   140001172:	lea    rdx,[rsp+0x60]
   140001177:	lea    rcx,[rip+0x543e]        # 0x1400065bc
   14000117e:	call   QWORD PTR [rip+0x51ec]        # 0x140006370
   140001184:	mov    rdx,QWORD PTR [rsp+0x58]
   140001189:	lea    r9,[rip+0x5438]        # 0x1400065c8
   140001190:	mov    r8d,0x1
   140001196:	lea    rcx,[rip+0x543f]        # 0x1400065dc
   14000119d:	call   0x140001008
   1400011a2:	mov    rdx,QWORD PTR [rsp+0x58]
   1400011a7:	lea    r9,[rip+0x5432]        # 0x1400065e0
   1400011ae:	xor    r8d,r8d
   1400011b1:	lea    rcx,[rip+0x5458]        # 0x140006610
   1400011b8:	call   0x140001008
   1400011bd:	mov    rdx,QWORD PTR [rsp+0x58]
   1400011c2:	lea    r9,[rip+0x545f]        # 0x140006628
   1400011c9:	xor    r8d,r8d
   1400011cc:	lea    rcx,[rip+0x5475]        # 0x140006648
   1400011d3:	call   0x140001008
   1400011d8:	lea    rdx,[rsp+0x40]
   1400011dd:	lea    rcx,[rsp+0x60]
   1400011e2:	call   0x140002ef4
   1400011e7:	test   eax,eax
   1400011e9:	js     0x140001265
   1400011eb:	mov    edx,DWORD PTR [rsp+0x40]
   1400011ef:	mov    ecx,0x2717
   1400011f4:	call   0x140003af4
   1400011f9:	mov    ebx,DWORD PTR [rsp+0x40]
   1400011fd:	mov    DWORD PTR [rsp+0x48],ebx
   140001201:	test   ebx,ebx
   140001203:	jne    0x140001211
   140001205:	mov    ecx,0x274c
   14000120a:	call   0x140003af4
   14000120f:	jmp    0x140001258
   140001211:	xor    r8d,r8d
   140001214:	lea    rdx,[rip+0x1b15]        # 0x140002d30
   14000121b:	lea    rcx,[rsp+0x48]
   140001220:	call   0x140002e34
   140001225:	test   eax,eax
   140001227:	jne    0x140001258
   140001229:	lea    rcx,[rip+0x5b00]        # 0x140006d30
   140001230:	call   QWORD PTR [rip+0x513a]        # 0x140006370
   140001236:	mov    edx,DWORD PTR [rsp+0x48]
   14000123a:	cmp    edx,ebx
   14000123c:	je     0x14000124b
   14000123e:	lea    rcx,[rip+0x5af7]        # 0x140006d3c
   140001245:	call   QWORD PTR [rip+0x5125]        # 0x140006370
   14000124b:	lea    rcx,[rip+0x5af2]        # 0x140006d44
   140001252:	call   QWORD PTR [rip+0x5118]        # 0x140006370
   140001258:	lea    rcx,[rip+0x53f1]        # 0x140006650
   14000125f:	call   QWORD PTR [rip+0x510b]        # 0x140006370
   140001265:	and    QWORD PTR [rsp+0x38],0x0
   14000126b:	inc    edi
   14000126d:	and    QWORD PTR [rsp+0x30],0x0
   140001273:	mov    edx,edi
   140001275:	and    QWORD PTR [rsp+0x28],0x0
   14000127b:	and    QWORD PTR [rsp+0x20],0x0
   140001281:	mov    rcx,QWORD PTR [rsp+0x50]
   140001286:	lea    r9,[rsp+0x44]
   14000128b:	lea    r8,[rsp+0x60]
   140001290:	mov    DWORD PTR [rsp+0x44],0x80
   140001298:	call   QWORD PTR [rip+0x4d7a]        # 0x140006018
   14000129e:	test   eax,eax
   1400012a0:	je     0x140001147
   1400012a6:	cmp    eax,0x103
   1400012ab:	je     0x1400012b9
   1400012ad:	mov    edx,eax
   1400012af:	mov    ecx,0x2714
   1400012b4:	call   0x140003af4
   1400012b9:	xor    eax,eax
   1400012bb:	mov    rcx,QWORD PTR [rbp+0x60]
   1400012bf:	xor    rcx,rsp
   1400012c2:	call   0x140005710
   1400012c7:	lea    r11,[rsp+0x170]
   1400012cf:	mov    rbx,QWORD PTR [r11+0x10]
   1400012d3:	mov    rdi,QWORD PTR [r11+0x18]
   1400012d7:	mov    rsp,r11
   1400012da:	pop    rbp
   1400012db:	ret    
   1400012dc:	mov    r9d,eax
   1400012df:	lea    r8,[rsp+0x60]
   1400012e4:	lea    rdx,[rip+0x5265]        # 0x140006550
   1400012eb:	mov    ecx,0x2716
   1400012f0:	call   0x140003af4
   1400012f5:	jmp    0x1400012b9
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    rax,rsp
   140001303:	mov    QWORD PTR [rax+0x8],rbx
   140001307:	mov    QWORD PTR [rax+0x10],rdi
   14000130b:	mov    QWORD PTR [rax+0x18],r12
   14000130f:	push   rbp
   140001310:	lea    rbp,[rax-0x778]
   140001317:	sub    rsp,0x870
   14000131e:	mov    rax,QWORD PTR [rip+0x7ce3]        # 0x140009008
   140001325:	xor    rax,rsp
   140001328:	mov    QWORD PTR [rbp+0x760],rax
   14000132f:	and    QWORD PTR [rsp+0x60],0x0
   140001335:	lea    rcx,[rsp+0x60]
   14000133a:	and    QWORD PTR [rsp+0x50],0x0
   140001340:	xor    ebx,ebx
   140001342:	and    DWORD PTR [rsp+0x68],ebx
   140001346:	and    QWORD PTR [rsp+0x70],rbx
   14000134b:	and    DWORD PTR [rsp+0x6c],ebx
   14000134f:	call   0x140004230
   140001354:	test   eax,eax
   140001356:	jne    0x140001525
   14000135c:	mov    rcx,QWORD PTR [rsp+0x60]
   140001361:	lea    rax,[rsp+0x50]
   140001366:	lea    r9d,[rbx+0x1]
   14000136a:	mov    QWORD PTR [rsp+0x20],rax
   14000136f:	xor    r8d,r8d
   140001372:	lea    rdx,[rip+0x52df]        # 0x140006658
   140001379:	call   QWORD PTR [rip+0x4c91]        # 0x140006010
   14000137f:	test   eax,eax
   140001381:	je     0x14000139d
   140001383:	cmp    eax,0x2
   140001386:	je     0x14000151b
   14000138c:	mov    edx,eax
   14000138e:	mov    ecx,0x2718
   140001393:	call   0x140003af4
   140001398:	jmp    0x140001525
   14000139d:	mov    r12d,0x3e8
   1400013a3:	lea    rcx,[rbp+0x370]
   1400013aa:	mov    r8d,r12d
   1400013ad:	mov    DWORD PTR [rsp+0x44],r12d
   1400013b2:	xor    edx,edx
   1400013b4:	xor    edi,edi
   1400013b6:	call   0x140005de2
   1400013bb:	mov    r8d,r12d
   1400013be:	lea    rcx,[rbp-0x80]
   1400013c2:	xor    edx,edx
   1400013c4:	call   0x140005de2
   1400013c9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400013ce:	lea    rax,[rsp+0x44]
   1400013d3:	mov    QWORD PTR [rsp+0x38],rax
   1400013d8:	lea    r9,[rsp+0x40]
   1400013dd:	lea    rax,[rbp-0x80]
   1400013e1:	mov    DWORD PTR [rsp+0x40],0x1f4
   1400013e9:	mov    QWORD PTR [rsp+0x30],rax
   1400013ee:	lea    r8,[rbp+0x370]
   1400013f5:	lea    rax,[rsp+0x58]
   1400013fa:	xor    edx,edx
   1400013fc:	mov    QWORD PTR [rsp+0x28],rax
   140001401:	and    QWORD PTR [rsp+0x20],rbx
   140001406:	call   QWORD PTR [rip+0x4bfc]        # 0x140006008
   14000140c:	test   eax,eax
   14000140e:	jne    0x140001504
   140001414:	lea    ebx,[rdi+0x1]
   140001417:	lea    rdx,[rip+0x524e]        # 0x14000666c
   14000141e:	lea    rcx,[rbp+0x370]
   140001425:	call   QWORD PTR [rip+0x4fc5]        # 0x1400063f0
   14000142b:	test   eax,eax
   14000142d:	jne    0x14000144d
   14000142f:	lea    r8,[rsp+0x48]
   140001434:	mov    DWORD PTR [rsp+0x48],0x1f4
   14000143c:	lea    rdx,[rbp+0x370]
   140001443:	mov    ecx,0x276e
   140001448:	call   0x140003a9c
   14000144d:	lea    rdx,[rip+0x5218]        # 0x14000666c
   140001454:	lea    rcx,[rbp-0x80]
   140001458:	call   QWORD PTR [rip+0x4f92]        # 0x1400063f0
   14000145e:	test   eax,eax
   140001460:	jne    0x14000147d
   140001462:	lea    r8,[rsp+0x48]
   140001467:	mov    DWORD PTR [rsp+0x48],0x1f4
   14000146f:	lea    rdx,[rbp-0x80]
   140001473:	mov    ecx,0x276f
   140001478:	call   0x140003a9c
   14000147d:	lea    r8,[rbp-0x80]
   140001481:	mov    ecx,0x271a
   140001486:	lea    rdx,[rbp+0x370]
   14000148d:	call   0x140003af4
   140001492:	mov    r8,r12
   140001495:	mov    DWORD PTR [rsp+0x44],r12d
   14000149a:	xor    edx,edx
   14000149c:	lea    rcx,[rbp+0x370]
   1400014a3:	inc    edi
   1400014a5:	call   0x140005de2
   1400014aa:	mov    r8,r12
   1400014ad:	lea    rcx,[rbp-0x80]
   1400014b1:	xor    edx,edx
   1400014b3:	call   0x140005de2
   1400014b8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400014bd:	lea    rax,[rsp+0x44]
   1400014c2:	mov    QWORD PTR [rsp+0x38],rax
   1400014c7:	lea    r9,[rsp+0x40]
   1400014cc:	lea    rax,[rbp-0x80]
   1400014d0:	mov    DWORD PTR [rsp+0x40],0x1f4
   1400014d8:	mov    QWORD PTR [rsp+0x30],rax
   1400014dd:	lea    r8,[rbp+0x370]
   1400014e4:	lea    rax,[rsp+0x58]
   1400014e9:	mov    edx,edi
   1400014eb:	mov    QWORD PTR [rsp+0x28],rax
   1400014f0:	and    QWORD PTR [rsp+0x20],0x0
   1400014f6:	call   QWORD PTR [rip+0x4b0c]        # 0x140006008
   1400014fc:	test   eax,eax
   1400014fe:	je     0x140001417
   140001504:	cmp    eax,0x103
   140001509:	je     0x140001517
   14000150b:	mov    edx,eax
   14000150d:	mov    ecx,0x2715
   140001512:	call   0x140003af4
   140001517:	test   ebx,ebx
   140001519:	jne    0x140001525
   14000151b:	mov    ecx,0x2719
   140001520:	call   0x140003af4
   140001525:	mov    rcx,QWORD PTR [rsp+0x60]
   14000152a:	test   rcx,rcx
   14000152d:	je     0x140001535
   14000152f:	call   QWORD PTR [rip+0x4aeb]        # 0x140006020
   140001535:	mov    rcx,QWORD PTR [rsp+0x50]
   14000153a:	test   rcx,rcx
   14000153d:	je     0x140001545
   14000153f:	call   QWORD PTR [rip+0x4adb]        # 0x140006020
   140001545:	lea    rcx,[rsp+0x68]
   14000154a:	call   0x140003668
   14000154f:	xor    eax,eax
   140001551:	mov    rcx,QWORD PTR [rbp+0x760]
   140001558:	xor    rcx,rsp
   14000155b:	call   0x140005710
   140001560:	lea    r11,[rsp+0x870]
   140001568:	mov    rbx,QWORD PTR [r11+0x10]
   14000156c:	mov    rdi,QWORD PTR [r11+0x18]
   140001570:	mov    r12,QWORD PTR [r11+0x20]
   140001574:	mov    rsp,r11
   140001577:	pop    rbp
   140001578:	ret    
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    QWORD PTR [rsp+0x8],rbx
   140001585:	push   rdi
   140001586:	sub    rsp,0x20
   14000158a:	mov    rcx,QWORD PTR [rip+0x869f]        # 0x140009c30
   140001591:	lea    r8,[rsp+0x38]
   140001596:	xor    edi,edi
   140001598:	mov    QWORD PTR [rsp+0x38],rdi
   14000159d:	lea    edx,[rdi+0xc]
   1400015a0:	call   QWORD PTR [rip+0x4a5a]        # 0x140006000
   1400015a6:	mov    ebx,eax
   1400015a8:	test   eax,eax
   1400015aa:	jns    0x1400015b0
   1400015ac:	mov    edx,eax
   1400015ae:	jmp    0x1400015c1
   1400015b0:	mov    rax,QWORD PTR [rsp+0x38]
   1400015b5:	test   rax,rax
   1400015b8:	jne    0x1400015cd
   1400015ba:	mov    ebx,0xc0000001
   1400015bf:	mov    edx,ebx
   1400015c1:	mov    ecx,0x271b
   1400015c6:	call   0x140003af4
   1400015cb:	jmp    0x14000160b
   1400015cd:	lea    rdx,[rax+0x10]
   1400015d1:	cmp    WORD PTR [rdx],di
   1400015d4:	jne    0x1400015dd
   1400015d6:	mov    ecx,0x271c
   1400015db:	jmp    0x1400015fc
   1400015dd:	mov    ecx,0x271d
   1400015e2:	call   0x140003af4
   1400015e7:	mov    rax,QWORD PTR [rsp+0x38]
   1400015ec:	mov    ecx,0x271e
   1400015f1:	cmp    QWORD PTR [rax+0x40],rdi
   1400015f5:	jne    0x1400015fc
   1400015f7:	mov    ecx,0x271f
   1400015fc:	call   0x140003af4
   140001601:	call   0x14000109c
   140001606:	call   0x140001300
   14000160b:	mov    rcx,QWORD PTR [rsp+0x38]
   140001610:	test   rcx,rcx
   140001613:	je     0x14000161b
   140001615:	call   QWORD PTR [rip+0x4a0d]        # 0x140006028
   14000161b:	mov    eax,ebx
   14000161d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001622:	add    rsp,0x20
   140001626:	pop    rdi
   140001627:	ret    
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    r11,rsp
   140001633:	mov    QWORD PTR [r11+0x10],rbx
   140001637:	mov    QWORD PTR [r11+0x18],rbp
   14000163b:	mov    QWORD PTR [r11+0x20],rsi
   14000163f:	push   rdi
   140001640:	sub    rsp,0x30
   140001644:	xor    edi,edi
   140001646:	cmp    QWORD PTR [rip+0x85c3],rdi        # 0x140009c10
   14000164d:	setne  dil
   140001651:	xor    ebx,ebx
   140001653:	test   edi,edi
   140001655:	jne    0x14000172d
   14000165b:	mov    rdx,QWORD PTR [rip+0x85b6]        # 0x140009c18
   140001662:	test   rdx,rdx
   140001665:	je     0x14000169d
   140001667:	lea    rax,[r11+0x8]
   14000166b:	xor    r9d,r9d
   14000166e:	mov    QWORD PTR [r11-0x10],rax
   140001672:	xor    r8d,r8d
   140001675:	xor    ecx,ecx
   140001677:	mov    DWORD PTR [rsp+0x20],0x8210
   14000167f:	call   QWORD PTR [rip+0x4c33]        # 0x1400062b8
   140001685:	test   eax,eax
   140001687:	jne    0x1400016d9
   140001689:	mov    rax,QWORD PTR [rsp+0x40]
   14000168e:	mov    rbx,QWORD PTR [rax]
   140001691:	jmp    0x140001697
   140001693:	add    rbx,0x2
   140001697:	cmp    WORD PTR [rbx],0x5c
   14000169b:	je     0x140001693
   14000169d:	mov    edx,0x185
   1400016a2:	mov    rcx,rbx
   1400016a5:	call   QWORD PTR [rip+0x4aed]        # 0x140006198
   1400016ab:	mov    rsi,rax
   1400016ae:	test   rax,rax
   1400016b1:	je     0x140001704
   1400016b3:	mov    r9d,0x486
   1400016b9:	xor    r8d,r8d
   1400016bc:	xor    edx,edx
   1400016be:	mov    rcx,rax
   1400016c1:	call   QWORD PTR [rip+0x4ad9]        # 0x1400061a0
   1400016c7:	mov    ebp,eax
   1400016c9:	test   eax,eax
   1400016cb:	jne    0x1400016f1
   1400016cd:	mov    QWORD PTR [rip+0x853c],rsi        # 0x140009c10
   1400016d4:	lea    edi,[rax+0x1]
   1400016d7:	jmp    0x14000172d
   1400016d9:	mov    rdx,QWORD PTR [rip+0x8538]        # 0x140009c18
   1400016e0:	mov    r8d,eax
   1400016e3:	mov    ecx,0x2720
   1400016e8:	call   0x140003af4
   1400016ed:	xor    eax,eax
   1400016ef:	jmp    0x14000172f
   1400016f1:	mov    rcx,rsi
   1400016f4:	call   QWORD PTR [rip+0x4a8e]        # 0x140006188
   1400016fa:	mov    r8d,ebp
   1400016fd:	mov    ecx,0x2721
   140001702:	jmp    0x140001712
   140001704:	call   QWORD PTR [rip+0x49a6]        # 0x1400060b0
   14000170a:	mov    r8d,eax
   14000170d:	mov    ecx,0x2722
   140001712:	test   rbx,rbx
   140001715:	lea    rdx,[rip+0x4f54]        # 0x140006670
   14000171c:	cmovne rdx,rbx
   140001720:	call   0x140003af4
   140001725:	and    QWORD PTR [rip+0x84e3],0x0        # 0x140009c10
   14000172d:	mov    eax,edi
   14000172f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001734:	mov    rbp,QWORD PTR [rsp+0x50]
   140001739:	mov    rsi,QWORD PTR [rsp+0x58]
   14000173e:	add    rsp,0x30
   140001742:	pop    rdi
   140001743:	ret    
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	mov    rax,rsp
   14000174f:	mov    QWORD PTR [rax+0x8],rbx
   140001753:	mov    QWORD PTR [rax+0x10],rbp
   140001757:	mov    QWORD PTR [rax+0x18],rsi
   14000175b:	mov    QWORD PTR [rax+0x20],rdi
   14000175f:	push   r14
   140001761:	sub    rsp,0x20
   140001765:	movzx  esi,WORD PTR [rcx]
   140001768:	mov    rdi,rcx
   14000176b:	mov    r14,rdx
   14000176e:	lea    rcx,[rsi+0x2]
   140001772:	call   QWORD PTR [rip+0x4bd8]        # 0x140006350
   140001778:	xor    ebp,ebp
   14000177a:	mov    rbx,rax
   14000177d:	test   rax,rax
   140001780:	je     0x1400017a2
   140001782:	mov    rdx,QWORD PTR [rdi+0x8]
   140001786:	mov    r8d,esi
   140001789:	mov    rcx,rax
   14000178c:	call   0x140005dd6
   140001791:	movzx  ecx,WORD PTR [rdi]
   140001794:	shr    rcx,1
   140001797:	xor    eax,eax
   140001799:	mov    WORD PTR [rbx+rcx*2],bp
   14000179d:	mov    QWORD PTR [r14],rbx
   1400017a0:	jmp    0x1400017a7
   1400017a2:	mov    eax,0xc0000017
   1400017a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400017b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400017b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400017bb:	add    rsp,0x20
   1400017bf:	pop    r14
   1400017c1:	ret    
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400017d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400017da:	mov    QWORD PTR [rsp+0x20],rdi
   1400017df:	push   rbp
   1400017e0:	mov    rbp,rsp
   1400017e3:	sub    rsp,0x80
   1400017ea:	mov    rax,QWORD PTR [rip+0x7817]        # 0x140009008
   1400017f1:	xor    rax,rsp
   1400017f4:	mov    QWORD PTR [rbp-0x8],rax
   1400017f8:	xor    eax,eax
   1400017fa:	mov    DWORD PTR [rbp-0x48],0x4
   140001801:	xor    esi,esi
   140001803:	mov    QWORD PTR [rbp-0x44],rax
   140001807:	mov    rbx,rcx
   14000180a:	mov    QWORD PTR [rbp-0x58],rsi
   14000180e:	xor    edx,edx
   140001810:	mov    WORD PTR [rbp-0x38],si
   140001814:	lea    r8d,[rax+0x28]
   140001818:	mov    edi,esi
   14000181a:	lea    rcx,[rbp-0x36]
   14000181e:	call   0x140005de2
   140001823:	mov    rdx,QWORD PTR [rbx]
   140001826:	mov    DWORD PTR [rbp-0x60],0x10
   14000182d:	test   rdx,rdx
   140001830:	je     0x140001843
   140001832:	mov    ecx,0x2723
   140001837:	mov    QWORD PTR [rip+0x83da],rdx        # 0x140009c18
   14000183e:	call   0x140003af4
   140001843:	lea    r9,[rbp-0x50]
   140001847:	mov    edx,0xc
   14000184c:	lea    r8,[rbp-0x58]
   140001850:	lea    rcx,[rbp-0x48]
   140001854:	call   0x140003ebc
   140001859:	mov    ebx,eax
   14000185b:	cmp    eax,0x8009030e
   140001860:	jne    0x1400019a2
   140001866:	lea    rcx,[rip+0x4e2b]        # 0x140006698
   14000186d:	call   QWORD PTR [rip+0x4afd]        # 0x140006370
   140001873:	lea    r8,[rip+0x4e0e]        # 0x140006688
   14000187a:	mov    edx,0x6
   14000187f:	lea    rax,[rbp-0x38]
   140001883:	mov    r9d,esi
   140001886:	sub    r8,rax
   140001889:	lea    rcx,[rbp-0x38]
   14000188d:	lea    rax,[rdx+0x7ffffff8]
   140001894:	test   rax,rax
   140001897:	je     0x1400018b0
   140001899:	movzx  eax,WORD PTR [r8+rcx*1]
   14000189e:	test   ax,ax
   1400018a1:	je     0x1400018b0
   1400018a3:	mov    WORD PTR [rcx],ax
   1400018a6:	add    rcx,0x2
   1400018aa:	sub    rdx,0x1
   1400018ae:	jne    0x14000188d
   1400018b0:	test   rdx,rdx
   1400018b3:	jne    0x1400018bf
   1400018b5:	sub    rcx,0x2
   1400018b9:	mov    r9d,0x8007007a
   1400018bf:	mov    WORD PTR [rcx],si
   1400018c2:	test   r9d,r9d
   1400018c5:	je     0x1400018d1
   1400018c7:	mov    ebx,0xc0000001
   1400018cc:	jmp    0x140001a14
   1400018d1:	lea    rdx,[rbp-0x60]
   1400018d5:	lea    rcx,[rbp-0x2e]
   1400018d9:	call   QWORD PTR [rip+0x47c1]        # 0x1400060a0
   1400018df:	test   eax,eax
   1400018e1:	je     0x1400018c7
   1400018e3:	mov    eax,DWORD PTR [rbp-0x60]
   1400018e6:	mov    ecx,0x40
   1400018eb:	lea    ebx,[rax*2+0x4a]
   1400018f2:	mov    edx,ebx
   1400018f4:	call   QWORD PTR [rip+0x47be]        # 0x1400060b8
   1400018fa:	mov    rdi,rax
   1400018fd:	test   rax,rax
   140001900:	jne    0x14000190c
   140001902:	mov    ebx,0xc000009a
   140001907:	jmp    0x140001a14
   14000190c:	mov    DWORD PTR [rax],0x8
   140001912:	lea    rcx,[rdi+0x40]
   140001916:	mov    DWORD PTR [rax+0x24],0x1
   14000191d:	lea    rdx,[rbp-0x38]
   140001921:	movzx  r8d,WORD PTR [rbp-0x60]
   140001926:	add    r8w,0x5
   14000192b:	add    r8w,r8w
   14000192f:	mov    WORD PTR [rax+0x10],r8w
   140001934:	movzx  eax,WORD PTR [rbp-0x60]
   140001938:	add    ax,0x5
   14000193c:	movzx  r8d,r8w
   140001940:	add    ax,ax
   140001943:	mov    QWORD PTR [rdi+0x18],rcx
   140001947:	mov    WORD PTR [rdi+0x12],ax
   14000194b:	call   0x140005dd6
   140001950:	lea    r9,[rbp-0x50]
   140001954:	mov    edx,ebx
   140001956:	lea    r8,[rbp-0x58]
   14000195a:	mov    rcx,rdi
   14000195d:	call   0x140003ebc
   140001962:	test   eax,eax
   140001964:	jns    0x14000197c
   140001966:	mov    r8d,eax
   140001969:	lea    rdx,[rbp-0x38]
   14000196d:	lea    rcx,[rip+0x4d5c]        # 0x1400066d0
   140001974:	call   QWORD PTR [rip+0x49f6]        # 0x140006370
   14000197a:	jmp    0x14000198a
   14000197c:	mov    rcx,QWORD PTR [rbp-0x58]
   140001980:	call   QWORD PTR [rip+0x47b2]        # 0x140006138
   140001986:	mov    QWORD PTR [rbp-0x58],rsi
   14000198a:	lea    r9,[rbp-0x50]
   14000198e:	mov    edx,0xc
   140001993:	lea    r8,[rbp-0x58]
   140001997:	lea    rcx,[rbp-0x48]
   14000199b:	call   0x140003ebc
   1400019a0:	mov    ebx,eax
   1400019a2:	test   ebx,ebx
   1400019a4:	js     0x1400019f0
   1400019a6:	cmp    QWORD PTR [rip+0x826b],rsi        # 0x140009c18
   1400019ad:	jne    0x1400019c3
   1400019af:	mov    rcx,QWORD PTR [rbp-0x58]
   1400019b3:	lea    rdx,[rip+0x825e]        # 0x140009c18
   1400019ba:	add    rcx,0x18
   1400019be:	call   0x14000174c
   1400019c3:	mov    rax,QWORD PTR [rbp-0x58]
   1400019c7:	lea    rdx,[rip+0x8252]        # 0x140009c20
   1400019ce:	mov    rcx,QWORD PTR [rax+0x10]
   1400019d2:	add    rcx,0x8
   1400019d6:	call   0x14000174c
   1400019db:	mov    rdx,QWORD PTR [rip+0x8236]        # 0x140009c18
   1400019e2:	mov    ecx,0x2731
   1400019e7:	mov    ebx,esi
   1400019e9:	call   0x140003af4
   1400019ee:	jmp    0x140001a06
   1400019f0:	mov    edx,ebx
   1400019f2:	mov    ecx,0x2724
   1400019f7:	call   0x140003af4
   1400019fc:	mov    ecx,0x2725
   140001a01:	call   0x140003af4
   140001a06:	test   rdi,rdi
   140001a09:	je     0x140001a14
   140001a0b:	mov    rcx,rdi
   140001a0e:	call   QWORD PTR [rip+0x4684]        # 0x140006098
   140001a14:	mov    rcx,QWORD PTR [rbp-0x58]
   140001a18:	test   rcx,rcx
   140001a1b:	je     0x140001a23
   140001a1d:	call   QWORD PTR [rip+0x4715]        # 0x140006138
   140001a23:	mov    eax,ebx
   140001a25:	mov    rcx,QWORD PTR [rbp-0x8]
   140001a29:	xor    rcx,rsp
   140001a2c:	call   0x140005710
   140001a31:	lea    r11,[rsp+0x80]
   140001a39:	mov    rbx,QWORD PTR [r11+0x18]
   140001a3d:	mov    rsi,QWORD PTR [r11+0x20]
   140001a41:	mov    rdi,QWORD PTR [r11+0x28]
   140001a45:	mov    rsp,r11
   140001a48:	pop    rbp
   140001a49:	ret    
   140001a4a:	int3   
   140001a4b:	int3   
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	rex push rbx
   140001a52:	sub    rsp,0x20
   140001a56:	mov    edx,0x79
   140001a5b:	mov    ecx,0x2727
   140001a60:	lea    r8d,[rdx-0xb]
   140001a64:	call   0x140003af4
   140001a69:	call   QWORD PTR [rip+0x48d1]        # 0x140006340
   140001a6f:	movzx  ecx,al
   140001a72:	mov    ebx,eax
   140001a74:	call   QWORD PTR [rip+0x48de]        # 0x140006358
   140001a7a:	test   eax,eax
   140001a7c:	jne    0x140001a69
   140001a7e:	movzx  edx,bl
   140001a81:	cmp    edx,0xffffffff
   140001a84:	je     0x140001ab0
   140001a86:	cmp    edx,0x4e
   140001a89:	je     0x140001aba
   140001a8b:	cmp    edx,0x59
   140001a8e:	je     0x140001aa9
   140001a90:	cmp    edx,0x6e
   140001a93:	je     0x140001aba
   140001a95:	cmp    edx,0x79
   140001a98:	je     0x140001aa9
   140001a9a:	mov    r8d,edx
   140001a9d:	mov    ecx,0x2729
   140001aa2:	call   0x140003af4
   140001aa7:	jmp    0x140001a56
   140001aa9:	mov    eax,0x1
   140001aae:	jmp    0x140001abc
   140001ab0:	mov    ecx,0x2728
   140001ab5:	call   0x140003af4
   140001aba:	xor    eax,eax
   140001abc:	add    rsp,0x20
   140001ac0:	pop    rbx
   140001ac1:	ret    
   140001ac2:	int3   
   140001ac3:	int3   
   140001ac4:	int3   
   140001ac5:	int3   
   140001ac6:	int3   
   140001ac7:	int3   
   140001ac8:	int3   
   140001ac9:	int3   
   140001aca:	int3   
   140001acb:	int3   
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	mov    QWORD PTR [rsp+0x10],rbx
   140001ad5:	mov    QWORD PTR [rsp+0x18],rdi
   140001ada:	push   rbp
   140001adb:	push   r12
   140001add:	push   r13
   140001adf:	push   r14
   140001ae1:	push   r15
   140001ae3:	lea    rbp,[rsp-0x37]
   140001ae8:	sub    rsp,0xa0
   140001aef:	mov    rax,QWORD PTR [rip+0x7512]        # 0x140009008
   140001af6:	xor    rax,rsp
   140001af9:	mov    QWORD PTR [rbp+0x27],rax
   140001afd:	mov    rdi,QWORD PTR [rcx]
   140001b00:	xor    r13d,r13d
   140001b03:	xor    edx,edx
   140001b05:	mov    WORD PTR [rbp-0x29],r13w
   140001b0a:	lea    rcx,[rbp-0x27]
   140001b0e:	lea    r8d,[r13+0x46]
   140001b12:	call   0x140005de2
   140001b17:	mov    QWORD PTR [rbp-0x49],r13
   140001b1b:	mov    r12d,r13d
   140001b1e:	test   rdi,rdi
   140001b21:	jne    0x140001b3a
   140001b23:	lea    rdi,[rip+0x4c16]        # 0x140006740
   140001b2a:	mov    ecx,0x272a
   140001b2f:	mov    QWORD PTR [rbp-0x41],rdi
   140001b33:	call   0x140003af4
   140001b38:	jmp    0x140001b3e
   140001b3a:	mov    QWORD PTR [rbp-0x41],rdi
   140001b3e:	mov    rcx,rdi
   140001b41:	call   0x140001d2c
   140001b46:	test   eax,eax
   140001b48:	jne    0x140001b54
   140001b4a:	mov    eax,0xc0000001
   140001b4f:	jmp    0x140001cfa
   140001b54:	mov    rcx,QWORD PTR [rip+0x80dd]        # 0x140009c38
   140001b5b:	lea    r8,[rbp-0x39]
   140001b5f:	mov    edx,0x65
   140001b64:	call   QWORD PTR [rip+0x48ce]        # 0x140006438
   140001b6a:	lea    r15,[rip+0x4baf]        # 0x140006720
   140001b71:	test   eax,eax
   140001b73:	je     0x140001ba6
   140001b75:	mov    rcx,QWORD PTR [rip+0x80bc]        # 0x140009c38
   140001b7c:	mov    rdx,r15
   140001b7f:	test   rcx,rcx
   140001b82:	mov    r8d,eax
   140001b85:	cmovne rdx,rcx
   140001b89:	mov    ecx,0x2726
   140001b8e:	call   0x140003af4
   140001b93:	mov    ebx,0x2732
   140001b98:	mov    r14d,0xc0000001
   140001b9e:	mov    r12d,0x1
   140001ba4:	jmp    0x140001bc0
   140001ba6:	mov    rcx,QWORD PTR [rbp-0x39]
   140001baa:	mov    r14d,r13d
   140001bad:	mov    ebx,DWORD PTR [rcx+0x18]
   140001bb0:	call   QWORD PTR [rip+0x4852]        # 0x140006408
   140001bb6:	test   bl,0x18
   140001bb9:	je     0x140001c16
   140001bbb:	mov    ebx,0x2733
   140001bc0:	mov    ecx,0x272b
   140001bc5:	call   0x140003af4
   140001bca:	mov    rax,QWORD PTR [rip+0x8067]        # 0x140009c38
   140001bd1:	mov    ecx,ebx
   140001bd3:	test   rax,rax
   140001bd6:	cmovne r15,rax
   140001bda:	mov    rdx,r15
   140001bdd:	call   0x140003af4
   140001be2:	mov    ecx,0x272c
   140001be7:	call   0x140003af4
   140001bec:	test   r12d,r12d
   140001bef:	jne    0x140001c05
   140001bf1:	mov    ecx,0x272d
   140001bf6:	call   0x140003af4
   140001bfb:	mov    eax,0xc0020035
   140001c00:	jmp    0x140001cfa
   140001c05:	call   0x140001a50
   140001c0a:	test   eax,eax
   140001c0c:	jne    0x140001c16
   140001c0e:	mov    eax,r14d
   140001c11:	jmp    0x140001cfa
   140001c16:	mov    ecx,0x2770
   140001c1b:	call   0x140003af4
   140001c20:	mov    rdx,rdi
   140001c23:	lea    rcx,[rbp-0x29]
   140001c27:	call   QWORD PTR [rip+0x47fb]        # 0x140006428
   140001c2d:	movzx  ecx,WORD PTR [rbp-0x29]
   140001c31:	mov    edx,r13d
   140001c34:	mov    r8d,ecx
   140001c37:	shr    r8d,1
   140001c3a:	je     0x140001c5d
   140001c3c:	mov    r9,QWORD PTR [rbp-0x21]
   140001c40:	mov    eax,edx
   140001c42:	cmp    WORD PTR [r9+rax*2],0x2e
   140001c48:	je     0x140001c53
   140001c4a:	inc    edx
   140001c4c:	cmp    edx,r8d
   140001c4f:	jb     0x140001c40
   140001c51:	jmp    0x140001c5d
   140001c53:	movzx  ecx,dx
   140001c56:	add    cx,cx
   140001c59:	mov    WORD PTR [rbp-0x29],cx
   140001c5d:	mov    eax,0x1e
   140001c62:	cmp    cx,ax
   140001c65:	jbe    0x140001c6b
   140001c67:	mov    WORD PTR [rbp-0x29],ax
   140001c6b:	mov    rdx,rdi
   140001c6e:	lea    rcx,[rbp-0x19]
   140001c72:	call   QWORD PTR [rip+0x47b0]        # 0x140006428
   140001c78:	mov    rcx,QWORD PTR [rip+0x7fb1]        # 0x140009c30
   140001c7f:	lea    r8,[rbp-0x29]
   140001c83:	mov    edx,0xc
   140001c88:	call   QWORD PTR [rip+0x43a2]        # 0x140006030
   140001c8e:	mov    ebx,eax
   140001c90:	test   eax,eax
   140001c92:	jns    0x140001ca2
   140001c94:	mov    edx,eax
   140001c96:	mov    ecx,0x2771
   140001c9b:	call   0x140003af4
   140001ca0:	jmp    0x140001cf8
   140001ca2:	mov    rdx,rdi
   140001ca5:	mov    ecx,0x6
   140001caa:	call   QWORD PTR [rip+0x43f8]        # 0x1400060a8
   140001cb0:	test   eax,eax
   140001cb2:	jne    0x140001cd6
   140001cb4:	call   QWORD PTR [rip+0x43f6]        # 0x1400060b0
   140001cba:	mov    ebx,eax
   140001cbc:	call   QWORD PTR [rip+0x43ee]        # 0x1400060b0
   140001cc2:	mov    r8d,ebx
   140001cc5:	mov    ecx,0x2772
   140001cca:	mov    edx,eax
   140001ccc:	call   0x140003af4
   140001cd1:	jmp    0x140001b4a
   140001cd6:	lea    rdx,[rbp-0x49]
   140001cda:	lea    rcx,[rbp-0x41]
   140001cde:	call   0x1400042e0
   140001ce3:	test   eax,eax
   140001ce5:	je     0x140001cee
   140001ce7:	mov    ebx,0xc0000001
   140001cec:	jmp    0x140001cf8
   140001cee:	mov    rcx,QWORD PTR [rbp-0x49]
   140001cf2:	call   QWORD PTR [rip+0x4328]        # 0x140006020
   140001cf8:	mov    eax,ebx
   140001cfa:	mov    rcx,QWORD PTR [rbp+0x27]
   140001cfe:	xor    rcx,rsp
   140001d01:	call   0x140005710
   140001d06:	lea    r11,[rsp+0xa0]
   140001d0e:	mov    rbx,QWORD PTR [r11+0x38]
   140001d12:	mov    rdi,QWORD PTR [r11+0x40]
   140001d16:	mov    rsp,r11
   140001d19:	pop    r15
   140001d1b:	pop    r14
   140001d1d:	pop    r13
   140001d1f:	pop    r12
   140001d21:	pop    rbp
   140001d22:	ret    
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	mov    QWORD PTR [rsp+0x8],rbx
   140001d31:	mov    QWORD PTR [rsp+0x10],rsi
   140001d36:	push   rdi
   140001d37:	sub    rsp,0x20
   140001d3b:	xor    ebx,ebx
   140001d3d:	mov    rsi,rcx
   140001d40:	cmp    WORD PTR [rcx],bx
   140001d43:	mov    rdi,rcx
   140001d46:	je     0x140001d86
   140001d48:	movzx  ecx,WORD PTR [rdi]
   140001d4b:	call   QWORD PTR [rip+0x45f7]        # 0x140006348
   140001d51:	test   eax,eax
   140001d53:	je     0x140001d62
   140001d55:	movzx  ecx,WORD PTR [rdi]
   140001d58:	call   QWORD PTR [rip+0x4602]        # 0x140006360
   140001d5e:	test   eax,eax
   140001d60:	je     0x140001d6b
   140001d62:	add    rdi,0x2
   140001d66:	cmp    WORD PTR [rdi],bx
   140001d69:	jmp    0x140001d46
   140001d6b:	mov    rdx,rsi
   140001d6e:	mov    ecx,0x272e
   140001d73:	call   0x140003af4
   140001d78:	call   0x140001a50
   140001d7d:	test   eax,eax
   140001d7f:	setne  bl
   140001d82:	mov    eax,ebx
   140001d84:	jmp    0x140001d8b
   140001d86:	mov    eax,0x1
   140001d8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d90:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d95:	add    rsp,0x20
   140001d99:	pop    rdi
   140001d9a:	ret    
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	int3   
   140001da1:	int3   
   140001da2:	int3   
   140001da3:	int3   
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	rex push rbp
   140001db2:	push   rbx
   140001db3:	push   rsi
   140001db4:	push   rdi
   140001db5:	push   r14
   140001db7:	push   r15
   140001db9:	lea    rbp,[rsp-0x2f]
   140001dbe:	sub    rsp,0x88
   140001dc5:	mov    r14,QWORD PTR [rcx]
   140001dc8:	xor    r15d,r15d
   140001dcb:	mov    rdi,QWORD PTR [rcx+0x8]
   140001dcf:	xor    eax,eax
   140001dd1:	mov    QWORD PTR [rbp+0x7f],r15
   140001dd5:	mov    ebx,r15d
   140001dd8:	mov    QWORD PTR [rbp+0x6f],r15
   140001ddc:	mov    QWORD PTR [rbp+0x77],r15
   140001de0:	mov    QWORD PTR [rbp+0x7],r15
   140001de4:	mov    QWORD PTR [rbp+0xf],r15
   140001de8:	mov    WORD PTR [rbp-0x9],r15w
   140001ded:	mov    QWORD PTR [rbp-0x7],rax
   140001df1:	mov    DWORD PTR [rbp+0x1],eax
   140001df4:	mov    WORD PTR [rbp+0x5],ax
   140001df8:	mov    WORD PTR [rbp+0x17],r15w
   140001dfd:	mov    QWORD PTR [rbp+0x19],rax
   140001e01:	mov    DWORD PTR [rbp+0x21],eax
   140001e04:	mov    WORD PTR [rbp+0x25],ax
   140001e08:	test   r14,r14
   140001e0b:	je     0x140001fd2
   140001e11:	test   rdi,rdi
   140001e14:	je     0x140001fd2
   140001e1a:	mov    rsi,rdi
   140001e1d:	mov    rcx,rdi
   140001e20:	jmp    0x140001e3f
   140001e22:	mov    rax,rcx
   140001e25:	sub    rax,rsi
   140001e28:	and    rax,0xfffffffffffffffe
   140001e2c:	cmp    rax,0x200
   140001e32:	jg     0x140001fd7
   140001e38:	lea    rsi,[rcx+0x2]
   140001e3c:	mov    rcx,rsi
   140001e3f:	lea    rdx,[rip+0x490e]        # 0x140006754
   140001e46:	call   QWORD PTR [rip+0x44ec]        # 0x140006338
   140001e4c:	mov    rcx,rax
   140001e4f:	test   rax,rax
   140001e52:	jne    0x140001e22
   140001e54:	or     rax,0xffffffffffffffff
   140001e58:	inc    rax
   140001e5b:	cmp    WORD PTR [r14+rax*2],r15w
   140001e60:	jne    0x140001e58
   140001e62:	cmp    rax,0x200
   140001e68:	ja     0x140001fd2
   140001e6e:	mov    rdx,rdi
   140001e71:	lea    rcx,[rbp-0x9]
   140001e75:	call   QWORD PTR [rip+0x45ad]        # 0x140006428
   140001e7b:	mov    rdx,r14
   140001e7e:	lea    rcx,[rbp+0x17]
   140001e82:	call   QWORD PTR [rip+0x45a0]        # 0x140006428
   140001e88:	lea    rcx,[rbp+0x7f]
   140001e8c:	call   0x140004230
   140001e91:	test   eax,eax
   140001e93:	je     0x140001e9f
   140001e95:	mov    ebx,0xc0000001
   140001e9a:	jmp    0x140001fd7
   140001e9f:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001ea3:	lea    rax,[rbp+0x6f]
   140001ea7:	mov    ebx,0x2001f
   140001eac:	mov    QWORD PTR [rsp+0x20],rax
   140001eb1:	mov    r9d,ebx
   140001eb4:	lea    rdx,[rip+0x489d]        # 0x140006758
   140001ebb:	xor    r8d,r8d
   140001ebe:	call   QWORD PTR [rip+0x414c]        # 0x140006010
   140001ec4:	test   eax,eax
   140001ec6:	je     0x140001f1d
   140001ec8:	cmp    eax,0x2
   140001ecb:	jne    0x140001e95
   140001ecd:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001ed1:	lea    rax,[rbp+0x67]
   140001ed5:	mov    QWORD PTR [rsp+0x40],rax
   140001eda:	lea    rdx,[rip+0x4877]        # 0x140006758
   140001ee1:	lea    rax,[rbp+0x6f]
   140001ee5:	xor    r9d,r9d
   140001ee8:	mov    QWORD PTR [rsp+0x38],rax
   140001eed:	xor    r8d,r8d
   140001ef0:	mov    QWORD PTR [rsp+0x30],r15
   140001ef5:	mov    DWORD PTR [rsp+0x28],ebx
   140001ef9:	mov    DWORD PTR [rsp+0x20],r15d
   140001efe:	call   QWORD PTR [rip+0x4134]        # 0x140006038
   140001f04:	mov    ecx,eax
   140001f06:	test   eax,eax
   140001f08:	je     0x140001f1d
   140001f0a:	mov    ebx,0xc0000001
   140001f0f:	cmp    ecx,0x5
   140001f12:	lea    eax,[rbx+0x21]
   140001f15:	cmove  ebx,eax
   140001f18:	jmp    0x140001fd7
   140001f1d:	mov    rdx,QWORD PTR [rbp-0x1]
   140001f21:	lea    rax,[rbp+0x77]
   140001f25:	mov    rcx,QWORD PTR [rbp+0x6f]
   140001f29:	mov    r9d,ebx
   140001f2c:	xor    r8d,r8d
   140001f2f:	mov    QWORD PTR [rsp+0x20],rax
   140001f34:	call   QWORD PTR [rip+0x40d6]        # 0x140006010
   140001f3a:	test   eax,eax
   140001f3c:	je     0x140001f81
   140001f3e:	cmp    eax,0x2
   140001f41:	jne    0x140001e95
   140001f47:	mov    rdx,QWORD PTR [rbp-0x1]
   140001f4b:	lea    rax,[rbp+0x67]
   140001f4f:	mov    rcx,QWORD PTR [rbp+0x6f]
   140001f53:	xor    r9d,r9d
   140001f56:	mov    QWORD PTR [rsp+0x40],rax
   140001f5b:	xor    r8d,r8d
   140001f5e:	lea    rax,[rbp+0x77]
   140001f62:	mov    QWORD PTR [rsp+0x38],rax
   140001f67:	mov    QWORD PTR [rsp+0x30],r15
   140001f6c:	mov    DWORD PTR [rsp+0x28],ebx
   140001f70:	mov    DWORD PTR [rsp+0x20],r15d
   140001f75:	call   QWORD PTR [rip+0x40bd]        # 0x140006038
   140001f7b:	mov    ecx,eax
   140001f7d:	test   eax,eax
   140001f7f:	jne    0x140001f0a
   140001f81:	mov    rdx,QWORD PTR [rbp+0x77]
   140001f85:	lea    r8,[rip+0x47e4]        # 0x140006770
   140001f8c:	lea    rcx,[rbp+0x7]
   140001f90:	mov    ebx,r15d
   140001f93:	call   0x140003840
   140001f98:	test   eax,eax
   140001f9a:	je     0x140001e95
   140001fa0:	mov    rdx,QWORD PTR [rbp+0x1f]
   140001fa4:	lea    rcx,[rbp+0x7]
   140001fa8:	call   0x1400036bc
   140001fad:	test   eax,eax
   140001faf:	je     0x140001e95
   140001fb5:	mov    rdx,QWORD PTR [rbp+0x77]
   140001fb9:	lea    r8,[rip+0x47b0]        # 0x140006770
   140001fc0:	lea    rcx,[rbp+0x7]
   140001fc4:	call   0x14000397c
   140001fc9:	test   eax,eax
   140001fcb:	jne    0x140001fd7
   140001fcd:	jmp    0x140001e95
   140001fd2:	mov    ebx,0xc000000d
   140001fd7:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001fdb:	test   rcx,rcx
   140001fde:	je     0x140001fe6
   140001fe0:	call   QWORD PTR [rip+0x403a]        # 0x140006020
   140001fe6:	mov    rcx,QWORD PTR [rbp+0x6f]
   140001fea:	test   rcx,rcx
   140001fed:	je     0x140001ff5
   140001fef:	call   QWORD PTR [rip+0x402b]        # 0x140006020
   140001ff5:	mov    rcx,QWORD PTR [rbp+0x77]
   140001ff9:	test   rcx,rcx
   140001ffc:	je     0x140002004
   140001ffe:	call   QWORD PTR [rip+0x401c]        # 0x140006020
   140002004:	lea    rcx,[rbp+0x7]
   140002008:	call   0x140003668
   14000200d:	mov    eax,ebx
   14000200f:	add    rsp,0x88
   140002016:	pop    r15
   140002018:	pop    r14
   14000201a:	pop    rdi
   14000201b:	pop    rsi
   14000201c:	pop    rbx
   14000201d:	pop    rbp
   14000201e:	ret    
   14000201f:	int3   
   140002020:	int3   
   140002021:	int3   
   140002022:	int3   
   140002023:	int3   
   140002024:	int3   
   140002025:	int3   
   140002026:	int3   
   140002027:	int3   
   140002028:	int3   
   140002029:	int3   
   14000202a:	int3   
   14000202b:	int3   
   14000202c:	int3   
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	mov    QWORD PTR [rsp+0x20],rbx
   140002035:	push   rbp
   140002036:	push   rsi
   140002037:	push   rdi
   140002038:	push   r14
   14000203a:	push   r15
   14000203c:	mov    rbp,rsp
   14000203f:	sub    rsp,0x60
   140002043:	mov    r14,QWORD PTR [rcx]
   140002046:	xor    r15d,r15d
   140002049:	mov    rdi,QWORD PTR [rcx+0x8]
   14000204d:	xor    eax,eax
   14000204f:	mov    QWORD PTR [rbp+0x40],r15
   140002053:	mov    ebx,r15d
   140002056:	mov    QWORD PTR [rbp+0x30],r15
   14000205a:	mov    QWORD PTR [rbp+0x38],r15
   14000205e:	mov    QWORD PTR [rbp-0x30],r15
   140002062:	mov    QWORD PTR [rbp-0x28],r15
   140002066:	mov    WORD PTR [rbp-0x20],r15w
   14000206b:	mov    QWORD PTR [rbp-0x1e],rax
   14000206f:	mov    DWORD PTR [rbp-0x16],eax
   140002072:	mov    WORD PTR [rbp-0x12],ax
   140002076:	mov    WORD PTR [rbp-0x10],r15w
   14000207b:	mov    QWORD PTR [rbp-0xe],rax
   14000207f:	mov    DWORD PTR [rbp-0x6],eax
   140002082:	mov    WORD PTR [rbp-0x2],ax
   140002086:	test   r14,r14
   140002089:	je     0x1400021f0
   14000208f:	test   rdi,rdi
   140002092:	je     0x1400021f0
   140002098:	mov    rsi,rdi
   14000209b:	mov    rcx,rdi
   14000209e:	jmp    0x1400020bd
   1400020a0:	mov    rax,rcx
   1400020a3:	sub    rax,rsi
   1400020a6:	and    rax,0xfffffffffffffffe
   1400020aa:	cmp    rax,0x200
   1400020b0:	jg     0x1400021f5
   1400020b6:	lea    rsi,[rcx+0x2]
   1400020ba:	mov    rcx,rsi
   1400020bd:	lea    rdx,[rip+0x4690]        # 0x140006754
   1400020c4:	call   QWORD PTR [rip+0x426e]        # 0x140006338
   1400020ca:	mov    rcx,rax
   1400020cd:	test   rax,rax
   1400020d0:	jne    0x1400020a0
   1400020d2:	or     rax,0xffffffffffffffff
   1400020d6:	inc    rax
   1400020d9:	cmp    WORD PTR [r14+rax*2],r15w
   1400020de:	jne    0x1400020d6
   1400020e0:	cmp    rax,0x200
   1400020e6:	ja     0x1400021f0
   1400020ec:	mov    rdx,rdi
   1400020ef:	lea    rcx,[rbp-0x20]
   1400020f3:	call   QWORD PTR [rip+0x432f]        # 0x140006428
   1400020f9:	mov    rdx,r14
   1400020fc:	lea    rcx,[rbp-0x10]
   140002100:	call   QWORD PTR [rip+0x4322]        # 0x140006428
   140002106:	lea    rcx,[rbp+0x40]
   14000210a:	call   0x140004230
   14000210f:	test   eax,eax
   140002111:	je     0x14000211d
   140002113:	mov    ebx,0xc0000001
   140002118:	jmp    0x1400021f5
   14000211d:	mov    rcx,QWORD PTR [rbp+0x40]
   140002121:	lea    rax,[rbp+0x30]
   140002125:	mov    ebx,0x2001f
   14000212a:	mov    QWORD PTR [rsp+0x20],rax
   14000212f:	mov    r9d,ebx
   140002132:	lea    rdx,[rip+0x461f]        # 0x140006758
   140002139:	xor    r8d,r8d
   14000213c:	call   QWORD PTR [rip+0x3ece]        # 0x140006010
   140002142:	mov    ecx,eax
   140002144:	test   eax,eax
   140002146:	je     0x14000215d
   140002148:	mov    eax,0xc000000f
   14000214d:	cmp    ecx,0x2
   140002150:	lea    ebx,[rax-0xe]
   140002153:	cmovne eax,ebx
   140002156:	mov    ebx,eax
   140002158:	jmp    0x1400021f5
   14000215d:	mov    rdx,QWORD PTR [rbp-0x18]
   140002161:	lea    rax,[rbp+0x38]
   140002165:	mov    rcx,QWORD PTR [rbp+0x30]
   140002169:	mov    r9d,ebx
   14000216c:	xor    r8d,r8d
   14000216f:	mov    QWORD PTR [rsp+0x20],rax
   140002174:	call   QWORD PTR [rip+0x3e96]        # 0x140006010
   14000217a:	mov    ecx,eax
   14000217c:	test   eax,eax
   14000217e:	jne    0x140002148
   140002180:	mov    rdx,QWORD PTR [rbp+0x38]
   140002184:	lea    r8,[rip+0x45e5]        # 0x140006770
   14000218b:	lea    rcx,[rbp-0x30]
   14000218f:	mov    ebx,r15d
   140002192:	call   0x140003840
   140002197:	test   eax,eax
   140002199:	je     0x140002113
   14000219f:	mov    rdx,QWORD PTR [rbp-0x8]
   1400021a3:	lea    rcx,[rbp-0x30]
   1400021a7:	call   0x140003768
   1400021ac:	test   eax,eax
   1400021ae:	je     0x140002113
   1400021b4:	cmp    DWORD PTR [rbp-0x30],r15d
   1400021b8:	jne    0x1400021d3
   1400021ba:	mov    rdx,QWORD PTR [rbp-0x18]
   1400021be:	mov    rcx,QWORD PTR [rbp+0x30]
   1400021c2:	call   QWORD PTR [rip+0x3e78]        # 0x140006040
   1400021c8:	mov    ebx,eax
   1400021ca:	test   eax,eax
   1400021cc:	je     0x1400021f5
   1400021ce:	jmp    0x140002113
   1400021d3:	mov    rdx,QWORD PTR [rbp+0x38]
   1400021d7:	lea    r8,[rip+0x4592]        # 0x140006770
   1400021de:	lea    rcx,[rbp-0x30]
   1400021e2:	call   0x14000397c
   1400021e7:	test   eax,eax
   1400021e9:	jne    0x1400021f5
   1400021eb:	jmp    0x140002113
   1400021f0:	mov    ebx,0xc000000d
   1400021f5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400021f9:	test   rcx,rcx
   1400021fc:	je     0x140002204
   1400021fe:	call   QWORD PTR [rip+0x3e1c]        # 0x140006020
   140002204:	mov    rcx,QWORD PTR [rbp+0x30]
   140002208:	test   rcx,rcx
   14000220b:	je     0x140002213
   14000220d:	call   QWORD PTR [rip+0x3e0d]        # 0x140006020
   140002213:	mov    rcx,QWORD PTR [rbp+0x38]
   140002217:	test   rcx,rcx
   14000221a:	je     0x140002222
   14000221c:	call   QWORD PTR [rip+0x3dfe]        # 0x140006020
   140002222:	lea    rcx,[rbp-0x30]
   140002226:	call   0x140003668
   14000222b:	mov    eax,ebx
   14000222d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140002235:	add    rsp,0x60
   140002239:	pop    r15
   14000223b:	pop    r14
   14000223d:	pop    rdi
   14000223e:	pop    rsi
   14000223f:	pop    rbp
   140002240:	ret    
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	mov    QWORD PTR [rsp+0x18],rbx
   14000224d:	push   rbp
   14000224e:	push   rsi
   14000224f:	push   rdi
   140002250:	push   r12
   140002252:	push   r13
   140002254:	push   r14
   140002256:	push   r15
   140002258:	lea    rbp,[rsp-0x780]
   140002260:	sub    rsp,0x880
   140002267:	mov    rax,QWORD PTR [rip+0x6d9a]        # 0x140009008
   14000226e:	xor    rax,rsp
   140002271:	mov    QWORD PTR [rbp+0x770],rax
   140002278:	mov    edi,ecx
   14000227a:	mov    r14,rdx
   14000227d:	xor    ecx,ecx
   14000227f:	mov    DWORD PTR [rsp+0x24],edi
   140002283:	mov    QWORD PTR [rsp+0x28],rdx
   140002288:	xor    r12d,r12d
   14000228b:	call   QWORD PTR [rip+0x3e2f]        # 0x1400060c0
   140002291:	mov    QWORD PTR [rip+0x79a8],rax        # 0x140009c40
   140002298:	test   rax,rax
   14000229b:	jne    0x1400022cd
   14000229d:	call   QWORD PTR [rip+0x3e0d]        # 0x1400060b0
   1400022a3:	lea    ecx,[r12+0x2]
   1400022a8:	mov    ebx,eax
   1400022aa:	call   0x140005d18
   1400022af:	mov    rcx,rax
   1400022b2:	lea    rdx,[rip+0x44cf]        # 0x140006788
   1400022b9:	mov    r8d,ebx
   1400022bc:	call   QWORD PTR [rip+0x406e]        # 0x140006330
   1400022c2:	call   QWORD PTR [rip+0x3de8]        # 0x1400060b0
   1400022c8:	jmp    0x1400025d1
   1400022cd:	call   0x140004cd0
   1400022d2:	test   eax,eax
   1400022d4:	jne    0x1400022de
   1400022d6:	or     eax,0xffffffff
   1400022d9:	jmp    0x1400025d1
   1400022de:	lea    rbx,[rdi+rdi*8]
   1400022e2:	shl    rbx,0x3
   1400022e6:	mov    rcx,rbx
   1400022e9:	call   QWORD PTR [rip+0x4061]        # 0x140006350
   1400022ef:	mov    r15,rax
   1400022f2:	test   rax,rax
   1400022f5:	je     0x1400022d6
   1400022f7:	mov    r8,rbx
   1400022fa:	xor    edx,edx
   1400022fc:	mov    rcx,rax
   1400022ff:	call   0x140005de2
   140002304:	mov    r13d,0x1
   14000230a:	lea    rbx,[rip+0x6d0f]        # 0x140009020
   140002311:	cmp    edi,r13d
   140002314:	jbe    0x1400024a5
   14000231a:	mov    eax,r13d
   14000231d:	xor    esi,esi
   14000231f:	mov    rdi,QWORD PTR [r14+rax*8]
   140002323:	mov    rdx,QWORD PTR [rbx]
   140002326:	mov    rcx,rdi
   140002329:	call   QWORD PTR [rip+0x3d99]        # 0x1400060c8
   14000232f:	test   eax,eax
   140002331:	je     0x140002350
   140002333:	inc    esi
   140002335:	add    rbx,0x30
   140002339:	cmp    esi,0x1a
   14000233c:	jb     0x140002323
   14000233e:	mov    rdx,rdi
   140002341:	mov    ecx,0x2735
   140002346:	call   0x140003af4
   14000234b:	jmp    0x14000246b
   140002350:	mov    eax,esi
   140002352:	lea    r8,[rip+0x6cc7]        # 0x140009020
   140002359:	lea    rcx,[r12+r12*8]
   14000235d:	inc    r13d
   140002360:	lea    rbx,[r15+rcx*8]
   140002364:	xor    r9d,r9d
   140002367:	mov    DWORD PTR [rbx],esi
   140002369:	lea    rdx,[rax+rax*2]
   14000236d:	shl    rdx,0x4
   140002371:	add    rdx,r8
   140002374:	cmp    DWORD PTR [rdx+0x8],r9d
   140002378:	je     0x1400023bc
   14000237a:	mov    rcx,QWORD PTR [r14+r13*8]
   14000237e:	test   rcx,rcx
   140002381:	je     0x1400023ac
   140002383:	cmp    r9d,0x7
   140002387:	jae    0x1400023ac
   140002389:	cmp    WORD PTR [rcx],0x2f
   14000238d:	je     0x1400023ac
   14000238f:	cmp    r9d,DWORD PTR [rdx+0x8]
   140002393:	jbe    0x14000239f
   140002395:	test   BYTE PTR [rdx+0x20],0x8
   140002399:	je     0x140002447
   14000239f:	inc    r13d
   1400023a2:	mov    QWORD PTR [rbx+r9*8+0x8],rcx
   1400023a7:	inc    r9d
   1400023aa:	jmp    0x14000237a
   1400023ac:	cmp    r9d,DWORD PTR [rdx+0x8]
   1400023b0:	jae    0x1400023bc
   1400023b2:	test   BYTE PTR [rdx+0x20],0x1
   1400023b6:	je     0x14000245a
   1400023bc:	and    QWORD PTR [rbx+r9*8+0x8],0x0
   1400023c2:	lea    r14,[rsi+rsi*2]
   1400023c6:	add    r14,r14
   1400023c9:	test   BYTE PTR [r8+r14*8+0x20],0x4
   1400023cf:	je     0x14000242c
   1400023d1:	mov    rdi,QWORD PTR [r8+r14*8+0x10]
   1400023d6:	mov    rcx,rdi
   1400023d9:	call   QWORD PTR [rip+0x4069]        # 0x140006448
   1400023df:	lea    rcx,[rbx+0x8]
   1400023e3:	call   rdi
   1400023e5:	mov    r8d,eax
   1400023e8:	test   eax,eax
   1400023ea:	js     0x14000247d
   1400023f0:	lea    rbx,[rip+0x6c29]        # 0x140009020
   1400023f7:	mov    ecx,DWORD PTR [rbx+r14*8+0x28]
   1400023fc:	test   ecx,ecx
   1400023fe:	je     0x140002436
   140002400:	lea    r8,[rsp+0x20]
   140002405:	mov    DWORD PTR [rsp+0x20],0x400
   14000240d:	lea    rdx,[rsp+0x70]
   140002412:	call   0x140003a9c
   140002417:	mov    rdx,QWORD PTR [rbx+r14*8]
   14000241b:	lea    r8,[rsp+0x70]
   140002420:	mov    ecx,0x273a
   140002425:	call   0x140003af4
   14000242a:	jmp    0x140002436
   14000242c:	inc    r12d
   14000242f:	lea    rbx,[rip+0x6bea]        # 0x140009020
   140002436:	cmp    r13d,DWORD PTR [rsp+0x24]
   14000243b:	jae    0x1400024a5
   14000243d:	mov    r14,QWORD PTR [rsp+0x28]
   140002442:	jmp    0x14000231a
   140002447:	mov    r8d,DWORD PTR [rdx+0x8]
   14000244b:	mov    ecx,0x2736
   140002450:	mov    rdx,QWORD PTR [rdx]
   140002453:	call   0x140003af4
   140002458:	jmp    0x14000246b
   14000245a:	mov    r8d,DWORD PTR [rdx+0x8]
   14000245e:	mov    ecx,0x2737
   140002463:	mov    rdx,QWORD PTR [rdx]
   140002466:	call   0x140003af4
   14000246b:	mov    rdx,QWORD PTR [r14]
   14000246e:	mov    ecx,0x2734
   140002473:	call   0x140003af4
   140002478:	jmp    0x1400022d6
   14000247d:	cmp    eax,0xc000000d
   140002482:	jne    0x140002490
   140002484:	mov    ecx,esi
   140002486:	call   0x140002b84
   14000248b:	jmp    0x1400025bd
   140002490:	lea    rdx,[rsi+rsi*2]
   140002494:	mov    ecx,0x2738
   140002499:	lea    r13,[rip+0x6b80]        # 0x140009020
   1400024a0:	jmp    0x14000261c
   1400024a5:	mov    rdx,QWORD PTR [rip+0x778c]        # 0x140009c38
   1400024ac:	lea    rcx,[rsp+0x28]
   1400024b1:	call   QWORD PTR [rip+0x3f71]        # 0x140006428
   1400024b7:	and    QWORD PTR [rsp+0x40],0x0
   1400024bd:	lea    r9,[rip+0x776c]        # 0x140009c30
   1400024c4:	and    DWORD PTR [rsp+0x50],0x0
   1400024c9:	lea    rdx,[rsp+0x38]
   1400024ce:	and    QWORD PTR [rsp+0x48],0x0
   1400024d4:	lea    rcx,[rsp+0x28]
   1400024d9:	xorps  xmm0,xmm0
   1400024dc:	mov    DWORD PTR [rsp+0x38],0x30
   1400024e4:	mov    r8d,0x2000000
   1400024ea:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   1400024f0:	call   QWORD PTR [rip+0x3b7a]        # 0x140006070
   1400024f6:	test   eax,eax
   1400024f8:	js     0x1400025bd
   1400024fe:	xor    esi,esi
   140002500:	test   r12d,r12d
   140002503:	je     0x1400025b6
   140002509:	mov    r14,r15
   14000250c:	mov    eax,DWORD PTR [r14]
   14000250f:	lea    rdi,[rax+rax*2]
   140002513:	add    rdi,rdi
   140002516:	test   BYTE PTR [rbx+rdi*8+0x20],0x4
   14000251b:	jne    0x1400025a2
   140002521:	lea    rcx,[rsi*8+0x1]
   140002529:	add    rcx,rsi
   14000252c:	lea    r13,[rip+0x6aed]        # 0x140009020
   140002533:	mov    rdi,QWORD PTR [r13+rdi*8+0x10]
   140002538:	lea    rbx,[r15+rcx*8]
   14000253c:	mov    rcx,rdi
   14000253f:	call   QWORD PTR [rip+0x3f03]        # 0x140006448
   140002545:	mov    rcx,rbx
   140002548:	call   rdi
   14000254a:	mov    r8d,eax
   14000254d:	test   eax,eax
   14000254f:	js     0x1400025fb
   140002555:	mov    eax,DWORD PTR [r14]
   140002558:	lea    rbx,[rip+0x6ac1]        # 0x140009020
   14000255f:	lea    rcx,[rax+rax*2]
   140002563:	add    rcx,rcx
   140002566:	mov    ecx,DWORD PTR [rbx+rcx*8+0x28]
   14000256a:	test   ecx,ecx
   14000256c:	je     0x1400025a2
   14000256e:	lea    r8,[rsp+0x20]
   140002573:	mov    DWORD PTR [rsp+0x20],0x400
   14000257b:	lea    rdx,[rsp+0x70]
   140002580:	call   0x140003a9c
   140002585:	mov    eax,DWORD PTR [r14]
   140002588:	lea    r8,[rsp+0x70]
   14000258d:	mov    ecx,0x273a
   140002592:	lea    rdx,[rax+rax*2]
   140002596:	add    rdx,rdx
   140002599:	mov    rdx,QWORD PTR [rbx+rdx*8]
   14000259d:	call   0x140003af4
   1400025a2:	inc    esi
   1400025a4:	add    r14,0x48
   1400025a8:	cmp    esi,r12d
   1400025ab:	jb     0x14000250c
   1400025b1:	test   r12d,r12d
   1400025b4:	jne    0x1400025bd
   1400025b6:	xor    ecx,ecx
   1400025b8:	call   0x140001580
   1400025bd:	mov    rcx,QWORD PTR [rip+0x766c]        # 0x140009c30
   1400025c4:	test   rcx,rcx
   1400025c7:	je     0x1400025cf
   1400025c9:	call   QWORD PTR [rip+0x3a79]        # 0x140006048
   1400025cf:	xor    eax,eax
   1400025d1:	mov    rcx,QWORD PTR [rbp+0x770]
   1400025d8:	xor    rcx,rsp
   1400025db:	call   0x140005710
   1400025e0:	mov    rbx,QWORD PTR [rsp+0x8d0]
   1400025e8:	add    rsp,0x880
   1400025ef:	pop    r15
   1400025f1:	pop    r14
   1400025f3:	pop    r13
   1400025f5:	pop    r12
   1400025f7:	pop    rdi
   1400025f8:	pop    rsi
   1400025f9:	pop    rbp
   1400025fa:	ret    
   1400025fb:	lea    rcx,[rsi+rsi*8]
   1400025ff:	cmp    eax,0xc000000d
   140002604:	jne    0x14000260f
   140002606:	mov    ecx,DWORD PTR [r15+rcx*8]
   14000260a:	jmp    0x140002486
   14000260f:	mov    eax,DWORD PTR [r15+rcx*8]
   140002613:	mov    ecx,0x2739
   140002618:	lea    rdx,[rax+rax*2]
   14000261c:	add    rdx,rdx
   14000261f:	mov    rdx,QWORD PTR [r13+rdx*8+0x0]
   140002624:	call   0x140003af4
   140002629:	jmp    0x1400025bd
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	int3   
   140002631:	int3   
   140002632:	int3   
   140002633:	int3   
   140002634:	mov    QWORD PTR [rsp+0x18],r8
   140002639:	mov    QWORD PTR [rsp+0x20],r9
   14000263e:	push   rbx
   14000263f:	push   rsi
   140002640:	push   rdi
   140002641:	sub    rsp,0x20
   140002645:	xor    edi,edi
   140002647:	lea    rax,[rdx-0x1]
   14000264b:	cmp    rax,0x7ffffffe
   140002651:	mov    rsi,rcx
   140002654:	mov    ecx,0x80070057
   140002659:	cmova  edi,ecx
   14000265c:	test   edi,edi
   14000265e:	js     0x140002695
   140002660:	lea    rbx,[rdx-0x1]
   140002664:	mov    rcx,rsi
   140002667:	mov    rdx,rbx
   14000266a:	lea    r9,[rsp+0x58]
   14000266f:	xor    edi,edi
   140002671:	call   QWORD PTR [rip+0x3ca9]        # 0x140006320
   140002677:	test   eax,eax
   140002679:	js     0x14000268a
   14000267b:	cdqe   
   14000267d:	cmp    rax,rbx
   140002680:	ja     0x14000268a
   140002682:	jne    0x14000269d
   140002684:	mov    BYTE PTR [rbx+rsi*1],dil
   140002688:	jmp    0x14000269d
   14000268a:	mov    BYTE PTR [rbx+rsi*1],dil
   14000268e:	mov    edi,0x8007007a
   140002693:	jmp    0x14000269d
   140002695:	test   rdx,rdx
   140002698:	je     0x14000269d
   14000269a:	mov    BYTE PTR [rsi],0x0
   14000269d:	mov    eax,edi
   14000269f:	add    rsp,0x20
   1400026a3:	pop    rdi
   1400026a4:	pop    rsi
   1400026a5:	pop    rbx
   1400026a6:	ret    
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400026b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400026ba:	push   rbp
   1400026bb:	push   rdi
   1400026bc:	push   r12
   1400026be:	push   r14
   1400026c0:	push   r15
   1400026c2:	lea    rbp,[rsp-0x110]
   1400026ca:	sub    rsp,0x210
   1400026d1:	mov    rax,QWORD PTR [rip+0x6930]        # 0x140009008
   1400026d8:	xor    rax,rsp
   1400026db:	mov    QWORD PTR [rbp+0x100],rax
   1400026e2:	and    QWORD PTR [rsp+0x50],0x0
   1400026e8:	lea    rax,[rsp+0x40]
   1400026ed:	and    QWORD PTR [rbp-0x80],0x0
   1400026f2:	lea    r12,[rip+0x6e2f]        # 0x140009528
   1400026f9:	mov    QWORD PTR [rsp+0x70],rax
   1400026fe:	mov    rbx,rdx
   140002701:	lea    rax,[rsp+0x60]
   140002706:	mov    DWORD PTR [rsp+0x60],0x1
   14000270e:	xorps  xmm0,xmm0
   140002711:	mov    QWORD PTR [rsp+0x78],rax
   140002716:	lea    rdx,[rip+0x3f4f]        # 0x14000666c
   14000271d:	mov    QWORD PTR [rsp+0x68],r12
   140002722:	mov    r14,rcx
   140002725:	mov    esi,0xc00000e5
   14000272a:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140002730:	call   QWORD PTR [rip+0x399a]        # 0x1400060d0
   140002736:	test   eax,eax
   140002738:	je     0x1400028ca
   14000273e:	test   rbx,rbx
   140002741:	je     0x14000275b
   140002743:	lea    rdx,[rip+0x3f22]        # 0x14000666c
   14000274a:	mov    rcx,rbx
   14000274d:	call   QWORD PTR [rip+0x397d]        # 0x1400060d0
   140002753:	test   eax,eax
   140002755:	je     0x1400028ca
   14000275b:	call   0x140001630
   140002760:	test   eax,eax
   140002762:	je     0x1400028c6
   140002768:	lea    r15,[rip+0x6da9]        # 0x140009518
   14000276f:	mov    edx,0x164
   140002774:	lea    r9,[rip+0x6d85]        # 0x140009500
   14000277b:	lea    rcx,[rbp-0x70]
   14000277f:	test   rbx,rbx
   140002782:	je     0x1400027a3
   140002784:	lea    r8,[rip+0x402d]        # 0x1400067b8
   14000278b:	mov    QWORD PTR [rsp+0x20],rbx
   140002790:	call   0x140002634
   140002795:	test   eax,eax
   140002797:	jns    0x1400027c0
   140002799:	mov    eax,0xc000000d
   14000279e:	jmp    0x1400028d9
   1400027a3:	mov    QWORD PTR [rsp+0x30],r14
   1400027a8:	lea    r8,[rip+0x4029]        # 0x1400067d8
   1400027af:	mov    QWORD PTR [rsp+0x28],r15
   1400027b4:	mov    QWORD PTR [rsp+0x20],r12
   1400027b9:	call   0x140002634
   1400027be:	jmp    0x140002795
   1400027c0:	lea    r9,[rsp+0x58]
   1400027c5:	lea    r8,[rsp+0x50]
   1400027ca:	lea    rdx,[rbp-0x70]
   1400027ce:	call   0x1400050ec
   1400027d3:	test   eax,eax
   1400027d5:	je     0x1400028bc
   1400027db:	mov    rcx,r14
   1400027de:	call   QWORD PTR [rip+0x38f4]        # 0x1400060d8
   1400027e4:	add    eax,0x1e
   1400027e7:	mov    ecx,eax
   1400027e9:	mov    edi,eax
   1400027eb:	call   QWORD PTR [rip+0x3b5f]        # 0x140006350
   1400027f1:	mov    QWORD PTR [rsp+0x40],rax
   1400027f6:	test   rax,rax
   1400027f9:	jne    0x140002805
   1400027fb:	mov    eax,0xc0000017
   140002800:	jmp    0x1400028d9
   140002805:	mov    r9,r15
   140002808:	mov    QWORD PTR [rsp+0x20],r14
   14000280d:	lea    r8,[rip+0x3fdc]        # 0x1400067f0
   140002814:	mov    rdx,rdi
   140002817:	mov    rcx,rax
   14000281a:	call   0x140002634
   14000281f:	test   eax,eax
   140002821:	jns    0x140002833
   140002823:	mov    rcx,QWORD PTR [rsp+0x40]
   140002828:	call   QWORD PTR [rip+0x3afa]        # 0x140006328
   14000282e:	jmp    0x140002799
   140002833:	mov    rdi,QWORD PTR [rsp+0x58]
   140002838:	lea    r8,[rsp+0x78]
   14000283d:	mov    rcx,QWORD PTR [rip+0x73cc]        # 0x140009c10
   140002844:	xor    eax,eax
   140002846:	test   rbx,rbx
   140002849:	mov    rdx,rdi
   14000284c:	sete   al
   14000284f:	mov    DWORD PTR [rsp+0x60],eax
   140002853:	call   QWORD PTR [rip+0x3927]        # 0x140006180
   140002859:	test   eax,eax
   14000285b:	je     0x140002890
   14000285d:	test   rbx,rbx
   140002860:	mov    DWORD PTR [rsp+0x20],eax
   140002864:	lea    rcx,[rip+0x3f8d]        # 0x1400067f8
   14000286b:	mov    r9,rdi
   14000286e:	lea    rdx,[rip+0x3f87]        # 0x1400067fc
   140002875:	mov    r8,r12
   140002878:	cmovne rdx,rcx
   14000287c:	lea    rcx,[rip+0x3f85]        # 0x140006808
   140002883:	call   QWORD PTR [rip+0x3ae7]        # 0x140006370
   140002889:	mov    esi,0xc0000001
   14000288e:	jmp    0x1400028a6
   140002890:	mov    ecx,0x273c
   140002895:	test   rbx,rbx
   140002898:	jne    0x14000289f
   14000289a:	mov    ecx,0x273d
   14000289f:	call   0x140003af4
   1400028a4:	xor    esi,esi
   1400028a6:	mov    rcx,rdi
   1400028a9:	call   QWORD PTR [rip+0x38c9]        # 0x140006178
   1400028af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400028b4:	call   QWORD PTR [rip+0x3a6e]        # 0x140006328
   1400028ba:	jmp    0x1400028c6
   1400028bc:	mov    ecx,0x273e
   1400028c1:	call   0x140003af4
   1400028c6:	mov    eax,esi
   1400028c8:	jmp    0x1400028d9
   1400028ca:	mov    ecx,0x273b
   1400028cf:	call   0x140003af4
   1400028d4:	mov    eax,0xc00000bb
   1400028d9:	mov    rcx,QWORD PTR [rbp+0x100]
   1400028e0:	xor    rcx,rsp
   1400028e3:	call   0x140005710
   1400028e8:	lea    r11,[rsp+0x210]
   1400028f0:	mov    rbx,QWORD PTR [r11+0x40]
   1400028f4:	mov    rsi,QWORD PTR [r11+0x48]
   1400028f8:	mov    rsp,r11
   1400028fb:	pop    r15
   1400028fd:	pop    r14
   1400028ff:	pop    r12
   140002901:	pop    rdi
   140002902:	pop    rbp
   140002903:	ret    
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    rax,rsp
   140002913:	mov    QWORD PTR [rax+0x8],rbx
   140002917:	push   rbp
   140002918:	push   rsi
   140002919:	push   rdi
   14000291a:	sub    rsp,0x60
   14000291e:	mov    rsi,rcx
   140002921:	xor    ebp,ebp
   140002923:	lea    rcx,[rax-0x28]
   140002927:	mov    QWORD PTR [rax-0x28],rbp
   14000292b:	mov    QWORD PTR [rax+0x20],rbp
   14000292f:	mov    rdi,rdx
   140002932:	call   0x140004230
   140002937:	mov    ebx,eax
   140002939:	test   eax,eax
   14000293b:	jne    0x1400029eb
   140002941:	mov    rcx,QWORD PTR [rsp+0x50]
   140002946:	lea    rax,[rsp+0x90]
   14000294e:	mov    QWORD PTR [rsp+0x40],rax
   140002953:	lea    rdx,[rip+0x3cfe]        # 0x140006658
   14000295a:	lea    rax,[rsp+0x98]
   140002962:	xor    r9d,r9d
   140002965:	mov    QWORD PTR [rsp+0x38],rax
   14000296a:	xor    r8d,r8d
   14000296d:	mov    QWORD PTR [rsp+0x30],rbp
   140002972:	mov    DWORD PTR [rsp+0x28],0x6
   14000297a:	mov    DWORD PTR [rsp+0x20],ebp
   14000297e:	call   QWORD PTR [rip+0x36b4]        # 0x140006038
   140002984:	mov    ebx,eax
   140002986:	test   eax,eax
   140002988:	jne    0x1400029eb
   14000298a:	test   rdi,rdi
   14000298d:	je     0x1400029cf
   14000298f:	cmp    WORD PTR [rdi],bp
   140002992:	je     0x1400029cf
   140002994:	or     rax,0xffffffffffffffff
   140002998:	inc    rax
   14000299b:	cmp    WORD PTR [rdi+rax*2],bp
   14000299f:	jne    0x140002998
   1400029a1:	mov    rcx,QWORD PTR [rsp+0x98]
   1400029a9:	lea    eax,[rax*2+0x2]
   1400029b0:	mov    DWORD PTR [rsp+0x28],eax
   1400029b4:	mov    r9d,0x1
   1400029ba:	xor    r8d,r8d
   1400029bd:	mov    QWORD PTR [rsp+0x20],rdi
   1400029c2:	mov    rdx,rsi
   1400029c5:	call   QWORD PTR [rip+0x368d]        # 0x140006058
   1400029cb:	mov    ebx,eax
   1400029cd:	jmp    0x1400029eb
   1400029cf:	mov    rcx,QWORD PTR [rsp+0x98]
   1400029d7:	mov    rdx,rsi
   1400029da:	call   QWORD PTR [rip+0x3670]        # 0x140006050
   1400029e0:	mov    ebx,eax
   1400029e2:	add    eax,0xfffffffe
   1400029e5:	cmp    eax,0x1
   1400029e8:	cmovbe ebx,ebp
   1400029eb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400029f0:	test   rcx,rcx
   1400029f3:	je     0x1400029fb
   1400029f5:	call   QWORD PTR [rip+0x3625]        # 0x140006020
   1400029fb:	mov    rcx,QWORD PTR [rsp+0x98]
   140002a03:	test   rcx,rcx
   140002a06:	je     0x140002a0e
   140002a08:	call   QWORD PTR [rip+0x3612]        # 0x140006020
   140002a0e:	neg    ebx
   140002a10:	mov    rbx,QWORD PTR [rsp+0x80]
   140002a18:	sbb    eax,eax
   140002a1a:	and    eax,0xc0000001
   140002a1f:	add    rsp,0x60
   140002a23:	pop    rdi
   140002a24:	pop    rsi
   140002a25:	pop    rbp
   140002a26:	ret    
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	mov    QWORD PTR [rsp+0x8],rbx
   140002a35:	mov    QWORD PTR [rsp+0x10],rsi
   140002a3a:	push   rdi
   140002a3b:	sub    rsp,0x20
   140002a3f:	mov    rdi,QWORD PTR [rcx]
   140002a42:	mov    rsi,rcx
   140002a45:	xor    ecx,ecx
   140002a47:	test   rdi,rdi
   140002a4a:	je     0x140002a7e
   140002a4c:	cmp    WORD PTR [rdi],cx
   140002a4f:	je     0x140002a7e
   140002a51:	cmp    QWORD PTR [rip+0x71c0],rcx        # 0x140009c18
   140002a58:	lea    rax,[rip+0xfffffffffffffc51]        # 0x1400026b0
   140002a5f:	lea    rbx,[rip+0xfffffffffffffeaa]        # 0x140002910
   140002a66:	cmovne rbx,rax
   140002a6a:	mov    rcx,rbx
   140002a6d:	call   QWORD PTR [rip+0x39d5]        # 0x140006448
   140002a73:	mov    rdx,QWORD PTR [rsi+0x8]
   140002a77:	mov    rcx,rdi
   140002a7a:	call   rbx
   140002a7c:	jmp    0x140002a83
   140002a7e:	mov    eax,0xc000000d
   140002a83:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a88:	mov    rsi,QWORD PTR [rsp+0x38]
   140002a8d:	add    rsp,0x20
   140002a91:	pop    rdi
   140002a92:	ret    
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	rex push rbx
   140002aa2:	sub    rsp,0x40
   140002aa6:	mov    rcx,QWORD PTR [rcx]
   140002aa9:	lea    r9,[rsp+0x50]
   140002aae:	lea    r8,[rip+0x3d7b]        # 0x140006830
   140002ab5:	mov    edx,0x2
   140002aba:	call   0x140003dc0
   140002abf:	test   eax,eax
   140002ac1:	jne    0x140002aca
   140002ac3:	mov    eax,0xc0000001
   140002ac8:	jmp    0x140002b2c
   140002aca:	mov    ecx,0x273f
   140002acf:	call   0x140003af4
   140002ad4:	mov    rdx,QWORD PTR [rsp+0x50]
   140002ad9:	lea    rcx,[rsp+0x20]
   140002ade:	call   QWORD PTR [rip+0x3944]        # 0x140006428
   140002ae4:	lea    rdx,[rip+0x3d65]        # 0x140006850
   140002aeb:	lea    rcx,[rsp+0x30]
   140002af0:	call   QWORD PTR [rip+0x3932]        # 0x140006428
   140002af6:	mov    rcx,QWORD PTR [rip+0x7133]        # 0x140009c30
   140002afd:	lea    r8,[rsp+0x20]
   140002b02:	lea    rdx,[rsp+0x30]
   140002b07:	call   QWORD PTR [rip+0x3553]        # 0x140006060
   140002b0d:	mov    ebx,eax
   140002b0f:	test   eax,eax
   140002b11:	jns    0x140002b1f
   140002b13:	mov    edx,eax
   140002b15:	mov    ecx,0x2740
   140002b1a:	call   0x140003af4
   140002b1f:	mov    rcx,QWORD PTR [rsp+0x50]
   140002b24:	call   QWORD PTR [rip+0x37fe]        # 0x140006328
   140002b2a:	mov    eax,ebx
   140002b2c:	add    rsp,0x40
   140002b30:	pop    rbx
   140002b31:	ret    
   140002b32:	int3   
   140002b33:	int3   
   140002b34:	int3   
   140002b35:	int3   
   140002b36:	int3   
   140002b37:	int3   
   140002b38:	int3   
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	rex push rbx
   140002b42:	sub    rsp,0x20
   140002b46:	mov    rdx,QWORD PTR [rcx]
   140002b49:	mov    rbx,rcx
   140002b4c:	mov    ecx,0x2773
   140002b51:	call   0x140003af4
   140002b56:	mov    r8,QWORD PTR [rbx]
   140002b59:	mov    edx,0x100
   140002b5e:	lea    rbx,[rip+0x70eb]        # 0x140009c50
   140002b65:	mov    rcx,rbx
   140002b68:	call   QWORD PTR [rip+0x37aa]        # 0x140006318
   140002b6e:	xor    eax,eax
   140002b70:	mov    QWORD PTR [rip+0x70c1],rbx        # 0x140009c38
   140002b77:	add    rsp,0x20
   140002b7b:	pop    rbx
   140002b7c:	ret    
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	int3   
   140002b81:	int3   
   140002b82:	int3   
   140002b83:	int3   
   140002b84:	mov    QWORD PTR [rsp+0x10],rbx
   140002b89:	push   rdi
   140002b8a:	sub    rsp,0x840
   140002b91:	mov    rax,QWORD PTR [rip+0x6470]        # 0x140009008
   140002b98:	xor    rax,rsp
   140002b9b:	mov    QWORD PTR [rsp+0x830],rax
   140002ba3:	mov    eax,ecx
   140002ba5:	lea    rdi,[rip+0x6474]        # 0x140009020
   140002bac:	mov    DWORD PTR [rsp+0x20],0x400
   140002bb4:	lea    rbx,[rax+rax*2]
   140002bb8:	add    rbx,rbx
   140002bbb:	cmp    QWORD PTR [rdi+rbx*8+0x18],0x0
   140002bc1:	je     0x140002c0c
   140002bc3:	mov    ecx,0x276d
   140002bc8:	call   0x140003af4
   140002bcd:	mov    r8,QWORD PTR [rdi+rbx*8+0x18]
   140002bd2:	lea    rcx,[rip+0x408f]        # 0x140006c68
   140002bd9:	mov    rdx,QWORD PTR [rdi+rbx*8]
   140002bdd:	call   QWORD PTR [rip+0x378d]        # 0x140006370
   140002be3:	mov    ecx,DWORD PTR [rdi+rbx*8+0x24]
   140002be7:	test   ecx,ecx
   140002be9:	je     0x140002c0c
   140002beb:	lea    r8,[rsp+0x20]
   140002bf0:	lea    rdx,[rsp+0x30]
   140002bf5:	call   0x140003a9c
   140002bfa:	lea    rdx,[rsp+0x30]
   140002bff:	lea    rcx,[rip+0x406e]        # 0x140006c74
   140002c06:	call   QWORD PTR [rip+0x3764]        # 0x140006370
   140002c0c:	mov    rcx,QWORD PTR [rsp+0x830]
   140002c14:	xor    rcx,rsp
   140002c17:	call   0x140005710
   140002c1c:	mov    rbx,QWORD PTR [rsp+0x858]
   140002c24:	add    rsp,0x840
   140002c2b:	pop    rdi
   140002c2c:	ret    
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	push   rdi
   140002c46:	sub    rsp,0x840
   140002c4d:	mov    rax,QWORD PTR [rip+0x63b4]        # 0x140009008
   140002c54:	xor    rax,rsp
   140002c57:	mov    QWORD PTR [rsp+0x830],rax
   140002c5f:	mov    ecx,0x276d
   140002c64:	call   0x140003af4
   140002c69:	lea    rbx,[rip+0x63b0]        # 0x140009020
   140002c70:	mov    edi,0x1a
   140002c75:	mov    r8,QWORD PTR [rbx+0x18]
   140002c79:	test   r8,r8
   140002c7c:	je     0x140002cbe
   140002c7e:	mov    rdx,QWORD PTR [rbx]
   140002c81:	lea    rcx,[rip+0x3fe0]        # 0x140006c68
   140002c88:	call   QWORD PTR [rip+0x36e2]        # 0x140006370
   140002c8e:	mov    ecx,DWORD PTR [rbx+0x24]
   140002c91:	test   ecx,ecx
   140002c93:	je     0x140002cbe
   140002c95:	lea    r8,[rsp+0x20]
   140002c9a:	mov    DWORD PTR [rsp+0x20],0x400
   140002ca2:	lea    rdx,[rsp+0x30]
   140002ca7:	call   0x140003a9c
   140002cac:	lea    rdx,[rsp+0x30]
   140002cb1:	lea    rcx,[rip+0x3fbc]        # 0x140006c74
   140002cb8:	call   QWORD PTR [rip+0x36b2]        # 0x140006370
   140002cbe:	add    rbx,0x30
   140002cc2:	sub    rdi,0x1
   140002cc6:	jne    0x140002c75
   140002cc8:	xor    eax,eax
   140002cca:	mov    rcx,QWORD PTR [rsp+0x830]
   140002cd2:	xor    rcx,rsp
   140002cd5:	call   0x140005710
   140002cda:	mov    rbx,QWORD PTR [rsp+0x850]
   140002ce2:	add    rsp,0x840
   140002ce9:	pop    rdi
   140002cea:	ret    
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	int3   
   140002cf1:	int3   
   140002cf2:	int3   
   140002cf3:	int3   
   140002cf4:	int3   
   140002cf5:	int3   
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	sub    rsp,0x28
   140002d04:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d08:	call   QWORD PTR [rip+0x36e2]        # 0x1400063f0
   140002d0e:	xor    ecx,ecx
   140002d10:	test   eax,eax
   140002d12:	sete   cl
   140002d15:	mov    eax,ecx
   140002d17:	add    rsp,0x28
   140002d1b:	ret    
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	int3   
   140002d21:	int3   
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    QWORD PTR [rsp+0x8],rbx
   140002d35:	push   rdi
   140002d36:	sub    rsp,0x20
   140002d3a:	mov    r8d,DWORD PTR [rdx]
   140002d3d:	xor    ebx,ebx
   140002d3f:	mov    rdi,rcx
   140002d42:	test   r8d,r8d
   140002d45:	jne    0x140002d65
   140002d47:	cmp    DWORD PTR [rcx],ebx
   140002d49:	jne    0x140002d61
   140002d4b:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d4f:	lea    rcx,[rip+0x3fba]        # 0x140006d10
   140002d56:	call   QWORD PTR [rip+0x3614]        # 0x140006370
   140002d5c:	lea    eax,[rbx+0x1]
   140002d5f:	jmp    0x140002d8d
   140002d61:	xor    eax,eax
   140002d63:	jmp    0x140002d8d
   140002d65:	mov    eax,DWORD PTR [rcx]
   140002d67:	and    eax,r8d
   140002d6a:	cmp    eax,r8d
   140002d6d:	jne    0x140002d86
   140002d6f:	not    r8d
   140002d72:	and    DWORD PTR [rcx],r8d
   140002d75:	lea    rcx,[rip+0x3f94]        # 0x140006d10
   140002d7c:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d80:	call   QWORD PTR [rip+0x35ea]        # 0x140006370
   140002d86:	cmp    DWORD PTR [rdi],ebx
   140002d88:	sete   bl
   140002d8b:	mov    eax,ebx
   140002d8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d92:	add    rsp,0x20
   140002d96:	pop    rdi
   140002d97:	ret    
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    QWORD PTR [rsp+0x18],rbx
   140002da5:	push   rdi
   140002da6:	sub    rsp,0x840
   140002dad:	mov    rax,QWORD PTR [rip+0x6254]        # 0x140009008
   140002db4:	xor    rax,rsp
   140002db7:	mov    QWORD PTR [rsp+0x830],rax
   140002dbf:	mov    eax,DWORD PTR [rcx]
   140002dc1:	mov    rdi,rdx
   140002dc4:	and    eax,DWORD PTR [rdx]
   140002dc6:	mov    rbx,rcx
   140002dc9:	mov    DWORD PTR [rsp+0x20],0x400
   140002dd1:	cmp    eax,DWORD PTR [rdx]
   140002dd3:	jne    0x140002e05
   140002dd5:	mov    ecx,DWORD PTR [rdi+0x10]
   140002dd8:	lea    r8,[rsp+0x20]
   140002ddd:	lea    rdx,[rsp+0x30]
   140002de2:	call   0x140003a9c
   140002de7:	mov    eax,DWORD PTR [rdi]
   140002de9:	lea    r9,[rsp+0x30]
   140002dee:	not    eax
   140002df0:	lea    rcx,[rip+0x3f21]        # 0x140006d18
   140002df7:	and    DWORD PTR [rbx],eax
   140002df9:	mov    r8,QWORD PTR [rdi+0x8]
   140002dfd:	mov    edx,DWORD PTR [rdi]
   140002dff:	call   QWORD PTR [rip+0x356b]        # 0x140006370
   140002e05:	xor    eax,eax
   140002e07:	cmp    DWORD PTR [rbx],eax
   140002e09:	sete   al
   140002e0c:	mov    rcx,QWORD PTR [rsp+0x830]
   140002e14:	xor    rcx,rsp
   140002e17:	call   0x140005710
   140002e1c:	mov    rbx,QWORD PTR [rsp+0x860]
   140002e24:	add    rsp,0x840
   140002e2b:	pop    rdi
   140002e2c:	ret    
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	int3   
   140002e31:	int3   
   140002e32:	int3   
   140002e33:	int3   
   140002e34:	mov    rax,rsp
   140002e37:	mov    QWORD PTR [rax+0x8],rbx
   140002e3b:	mov    QWORD PTR [rax+0x10],rbp
   140002e3f:	mov    QWORD PTR [rax+0x18],rsi
   140002e43:	mov    QWORD PTR [rax+0x20],rdi
   140002e47:	push   r14
   140002e49:	sub    rsp,0x20
   140002e4d:	mov    rsi,r8
   140002e50:	lea    rbx,[rip+0x66e9]        # 0x140009540
   140002e57:	mov    rbp,rdx
   140002e5a:	mov    r14,rcx
   140002e5d:	xor    edi,edi
   140002e5f:	mov    rcx,rbp
   140002e62:	call   QWORD PTR [rip+0x35e0]        # 0x140006448
   140002e68:	mov    rdx,rbx
   140002e6b:	mov    rcx,r14
   140002e6e:	call   rbp
   140002e70:	test   eax,eax
   140002e72:	jne    0x140002e81
   140002e74:	inc    edi
   140002e76:	add    rbx,0x18
   140002e7a:	cmp    edi,0x7
   140002e7d:	jb     0x140002e5f
   140002e7f:	jmp    0x140002e8e
   140002e81:	test   rsi,rsi
   140002e84:	je     0x140002e89
   140002e86:	mov    QWORD PTR [rsi],rbx
   140002e89:	mov    eax,0x1
   140002e8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e93:	mov    rbp,QWORD PTR [rsp+0x38]
   140002e98:	mov    rsi,QWORD PTR [rsp+0x40]
   140002e9d:	mov    rdi,QWORD PTR [rsp+0x48]
   140002ea2:	add    rsp,0x20
   140002ea6:	pop    r14
   140002ea8:	ret    
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	sub    rsp,0x28
   140002eb4:	or     DWORD PTR [rsp+0x38],0xffffffff
   140002eb9:	mov    ecx,0x2752
   140002ebe:	call   0x140003af4
   140002ec3:	xor    r8d,r8d
   140002ec6:	lea    rdx,[rip+0xfffffffffffffed3]        # 0x140002da0
   140002ecd:	lea    rcx,[rsp+0x38]
   140002ed2:	call   0x140002e34
   140002ed7:	lea    rcx,[rip+0x3772]        # 0x140006650
   140002ede:	call   QWORD PTR [rip+0x348c]        # 0x140006370
   140002ee4:	xor    ecx,ecx
   140002ee6:	call   QWORD PTR [rip+0x341c]        # 0x140006308
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	int3   
   140002ef1:	int3   
   140002ef2:	int3   
   140002ef3:	int3   
   140002ef4:	mov    QWORD PTR [rsp+0x8],rcx
   140002ef9:	push   rbp
   140002efa:	push   rbx
   140002efb:	push   rsi
   140002efc:	push   rdi
   140002efd:	mov    rbp,rsp
   140002f00:	sub    rsp,0x48
   140002f04:	and    QWORD PTR [rbp+0x40],0x0
   140002f09:	xor    ebx,ebx
   140002f0b:	and    DWORD PTR [rdx],ebx
   140002f0d:	mov    rdi,rdx
   140002f10:	and    QWORD PTR [rbp-0x18],rbx
   140002f14:	lea    rdx,[rbp-0x18]
   140002f18:	mov    DWORD PTR [rbp+0x30],0x4
   140002f1f:	call   0x1400045f8
   140002f24:	mov    esi,eax
   140002f26:	test   eax,eax
   140002f28:	jne    0x140002f48
   140002f2a:	mov    rcx,QWORD PTR [rbp-0x18]
   140002f2e:	mov    eax,0x80
   140002f33:	mov    edx,DWORD PTR [rcx+0x30]
   140002f36:	mov    cl,dl
   140002f38:	and    cl,al
   140002f3a:	cmovne ebx,eax
   140002f3d:	mov    eax,0x100
   140002f42:	test   eax,edx
   140002f44:	je     0x140002f48
   140002f46:	or     ebx,eax
   140002f48:	lea    rdx,[rbp+0x40]
   140002f4c:	lea    rcx,[rbp+0x28]
   140002f50:	call   0x1400042e0
   140002f55:	test   eax,eax
   140002f57:	jne    0x140002f9d
   140002f59:	mov    rcx,QWORD PTR [rbp+0x40]
   140002f5d:	lea    rax,[rbp+0x30]
   140002f61:	mov    QWORD PTR [rsp+0x28],rax
   140002f66:	lea    r9,[rbp+0x38]
   140002f6a:	xor    r8d,r8d
   140002f6d:	mov    QWORD PTR [rsp+0x20],rdi
   140002f72:	lea    rdx,[rip+0x3dcf]        # 0x140006d48
   140002f79:	call   QWORD PTR [rip+0x30f9]        # 0x140006078
   140002f7f:	test   eax,eax
   140002f81:	je     0x140002f91
   140002f83:	add    eax,0xfffffffe
   140002f86:	cmp    eax,0x1
   140002f89:	ja     0x140002f93
   140002f8b:	xor    esi,esi
   140002f8d:	and    DWORD PTR [rdi],esi
   140002f8f:	jmp    0x140002f93
   140002f91:	xor    esi,esi
   140002f93:	mov    rcx,QWORD PTR [rbp+0x40]
   140002f97:	call   QWORD PTR [rip+0x3083]        # 0x140006020
   140002f9d:	or     DWORD PTR [rdi],ebx
   140002f9f:	mov    rcx,QWORD PTR [rbp-0x18]
   140002fa3:	test   rcx,rcx
   140002fa6:	je     0x140002fae
   140002fa8:	call   QWORD PTR [rip+0x307a]        # 0x140006028
   140002fae:	mov    eax,esi
   140002fb0:	add    rsp,0x48
   140002fb4:	pop    rdi
   140002fb5:	pop    rsi
   140002fb6:	pop    rbx
   140002fb7:	pop    rbp
   140002fb8:	ret    
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    DWORD PTR [rsp+0x10],edx
   140002fc4:	mov    QWORD PTR [rsp+0x8],rcx
   140002fc9:	push   rbp
   140002fca:	push   rbx
   140002fcb:	push   rdi
   140002fcc:	mov    rbp,rsp
   140002fcf:	sub    rsp,0x70
   140002fd3:	and    QWORD PTR [rbp+0x38],0x0
   140002fd8:	lea    rdx,[rbp+0x30]
   140002fdc:	and    QWORD PTR [rbp+0x30],0x0
   140002fe1:	mov    rdi,rcx
   140002fe4:	call   0x1400045f8
   140002fe9:	mov    ebx,eax
   140002feb:	test   eax,eax
   140002fed:	jne    0x140003087
   140002ff3:	test   BYTE PTR [rbp+0x28],0x80
   140002ff7:	mov    rax,QWORD PTR [rbp+0x30]
   140002ffb:	je     0x140003004
   140002ffd:	bts    DWORD PTR [rax+0x30],0x7
   140003002:	jmp    0x140003009
   140003004:	btr    DWORD PTR [rax+0x30],0x7
   140003009:	mov    rax,QWORD PTR [rbp+0x30]
   14000300d:	mov    ecx,0x100
   140003012:	test   DWORD PTR [rbp+0x28],ecx
   140003015:	je     0x14000301c
   140003017:	or     DWORD PTR [rax+0x30],ecx
   14000301a:	jmp    0x140003021
   14000301c:	btr    DWORD PTR [rax+0x30],0x8
   140003021:	and    QWORD PTR [rbp-0x28],0x0
   140003026:	lea    r9,[rip+0x6c03]        # 0x140009c30
   14000302d:	and    DWORD PTR [rbp-0x18],0x0
   140003031:	lea    rdx,[rbp-0x30]
   140003035:	and    QWORD PTR [rbp-0x20],0x0
   14000303a:	xorps  xmm0,xmm0
   14000303d:	mov    r8d,0x1
   140003043:	mov    DWORD PTR [rbp-0x30],0x30
   14000304a:	xor    ecx,ecx
   14000304c:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140003051:	call   QWORD PTR [rip+0x3019]        # 0x140006070
   140003057:	mov    ebx,eax
   140003059:	test   eax,eax
   14000305b:	js     0x140003087
   14000305d:	mov    rdx,rdi
   140003060:	lea    rcx,[rbp-0x40]
   140003064:	call   QWORD PTR [rip+0x33be]        # 0x140006428
   14000306a:	mov    r9,QWORD PTR [rbp+0x30]
   14000306e:	lea    rdx,[rbp-0x40]
   140003072:	mov    rcx,QWORD PTR [rip+0x6bb7]        # 0x140009c30
   140003079:	mov    r8d,0x6
   14000307f:	call   QWORD PTR [rip+0x2fe3]        # 0x140006068
   140003085:	mov    ebx,eax
   140003087:	and    DWORD PTR [rbp+0x28],0xfffffe7f
   14000308e:	lea    rdx,[rbp+0x38]
   140003092:	lea    rcx,[rbp+0x20]
   140003096:	call   0x1400042e0
   14000309b:	test   eax,eax
   14000309d:	jne    0x1400030d5
   14000309f:	mov    rcx,QWORD PTR [rbp+0x38]
   1400030a3:	lea    r9d,[rax+0x4]
   1400030a7:	lea    rax,[rbp+0x28]
   1400030ab:	mov    DWORD PTR [rsp+0x28],r9d
   1400030b0:	xor    r8d,r8d
   1400030b3:	mov    QWORD PTR [rsp+0x20],rax
   1400030b8:	lea    rdx,[rip+0x3c89]        # 0x140006d48
   1400030bf:	call   QWORD PTR [rip+0x2f93]        # 0x140006058
   1400030c5:	mov    rcx,QWORD PTR [rbp+0x38]
   1400030c9:	neg    eax
   1400030cb:	sbb    edx,edx
   1400030cd:	and    ebx,edx
   1400030cf:	call   QWORD PTR [rip+0x2f4b]        # 0x140006020
   1400030d5:	mov    rcx,QWORD PTR [rbp+0x30]
   1400030d9:	test   rcx,rcx
   1400030dc:	je     0x1400030e4
   1400030de:	call   QWORD PTR [rip+0x2f44]        # 0x140006028
   1400030e4:	mov    rcx,QWORD PTR [rip+0x6b45]        # 0x140009c30
   1400030eb:	test   rcx,rcx
   1400030ee:	je     0x1400030fe
   1400030f0:	call   QWORD PTR [rip+0x2f52]        # 0x140006048
   1400030f6:	and    QWORD PTR [rip+0x6b32],0x0        # 0x140009c30
   1400030fe:	mov    eax,ebx
   140003100:	add    rsp,0x70
   140003104:	pop    rdi
   140003105:	pop    rbx
   140003106:	pop    rbp
   140003107:	ret    
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    QWORD PTR [rsp+0x10],rbx
   140003115:	mov    QWORD PTR [rsp+0x20],rsi
   14000311a:	push   rdi
   14000311b:	sub    rsp,0x20
   14000311f:	mov    rsi,rdx
   140003122:	mov    rbx,rcx
   140003125:	xor    edi,edi
   140003127:	mov    rcx,QWORD PTR [rbx]
   14000312a:	lea    rdx,[rsp+0x30]
   14000312f:	xor    r8d,r8d
   140003132:	call   QWORD PTR [rip+0x3270]        # 0x1400063a8
   140003138:	mov    ecx,eax
   14000313a:	mov    rax,QWORD PTR [rsp+0x30]
   14000313f:	cmp    WORD PTR [rax],di
   140003142:	je     0x140003163
   140003144:	mov    rcx,QWORD PTR [rbx]
   140003147:	lea    r8,[rsp+0x40]
   14000314c:	lea    rdx,[rip+0xfffffffffffffbad]        # 0x140002d00
   140003153:	call   0x140002e34
   140003158:	test   eax,eax
   14000315a:	je     0x140003170
   14000315c:	mov    rax,QWORD PTR [rsp+0x40]
   140003161:	mov    ecx,DWORD PTR [rax]
   140003163:	or     DWORD PTR [rsi],ecx
   140003165:	add    rbx,0x8
   140003169:	cmp    QWORD PTR [rbx],rdi
   14000316c:	je     0x140003182
   14000316e:	jmp    0x140003127
   140003170:	mov    rdx,QWORD PTR [rbx]
   140003173:	mov    ecx,0x2753
   140003178:	call   0x140003af4
   14000317d:	mov    edi,0xc000000d
   140003182:	mov    rbx,QWORD PTR [rsp+0x38]
   140003187:	mov    eax,edi
   140003189:	mov    rsi,QWORD PTR [rsp+0x48]
   14000318e:	add    rsp,0x20
   140003192:	pop    rdi
   140003193:	ret    
   140003194:	int3   
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400031a5:	push   rdi
   1400031a6:	sub    rsp,0x20
   1400031aa:	mov    rdi,QWORD PTR [rcx]
   1400031ad:	xor    ebx,ebx
   1400031af:	and    DWORD PTR [rsp+0x30],0x0
   1400031b4:	add    rcx,0x8
   1400031b8:	cmp    QWORD PTR [rcx],rbx
   1400031bb:	je     0x1400031dd
   1400031bd:	lea    rdx,[rsp+0x30]
   1400031c2:	call   0x140003110
   1400031c7:	mov    ebx,eax
   1400031c9:	test   eax,eax
   1400031cb:	js     0x1400031e7
   1400031cd:	mov    edx,DWORD PTR [rsp+0x30]
   1400031d1:	mov    rcx,rdi
   1400031d4:	call   0x140002fc0
   1400031d9:	mov    ebx,eax
   1400031db:	jmp    0x1400031e7
   1400031dd:	xor    edx,edx
   1400031df:	mov    rcx,rdi
   1400031e2:	call   0x140002fc0
   1400031e7:	mov    eax,ebx
   1400031e9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400031ee:	add    rsp,0x20
   1400031f2:	pop    rdi
   1400031f3:	ret    
   1400031f4:	int3   
   1400031f5:	int3   
   1400031f6:	int3   
   1400031f7:	int3   
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x10],rbx
   140003205:	push   rdi
   140003206:	sub    rsp,0x20
   14000320a:	mov    rbx,QWORD PTR [rcx]
   14000320d:	lea    rdx,[rsp+0x30]
   140003212:	and    DWORD PTR [rsp+0x30],0x0
   140003217:	mov    rdi,rcx
   14000321a:	mov    rcx,rbx
   14000321d:	call   0x140002ef4
   140003222:	test   eax,eax
   140003224:	js     0x140003244
   140003226:	lea    rcx,[rdi+0x8]
   14000322a:	lea    rdx,[rsp+0x30]
   14000322f:	call   0x140003110
   140003234:	test   eax,eax
   140003236:	js     0x140003244
   140003238:	mov    edx,DWORD PTR [rsp+0x30]
   14000323c:	mov    rcx,rbx
   14000323f:	call   0x140002fc0
   140003244:	mov    rbx,QWORD PTR [rsp+0x38]
   140003249:	add    rsp,0x20
   14000324d:	pop    rdi
   14000324e:	ret    
   14000324f:	int3   
   140003250:	int3   
   140003251:	int3   
   140003252:	int3   
   140003253:	int3   
   140003254:	int3   
   140003255:	int3   
   140003256:	int3   
   140003257:	int3   
   140003258:	int3   
   140003259:	int3   
   14000325a:	int3   
   14000325b:	int3   
   14000325c:	int3   
   14000325d:	int3   
   14000325e:	int3   
   14000325f:	int3   
   140003260:	mov    rax,rsp
   140003263:	mov    QWORD PTR [rax+0x18],rbx
   140003267:	push   rdi
   140003268:	sub    rsp,0x20
   14000326c:	mov    rdi,QWORD PTR [rcx]
   14000326f:	lea    rdx,[rax+0x10]
   140003273:	and    DWORD PTR [rax+0x10],0x0
   140003277:	mov    rbx,rcx
   14000327a:	and    DWORD PTR [rax+0x8],0x0
   14000327e:	mov    rcx,rdi
   140003281:	call   0x140002ef4
   140003286:	test   eax,eax
   140003288:	js     0x1400032ae
   14000328a:	lea    rcx,[rbx+0x8]
   14000328e:	lea    rdx,[rsp+0x30]
   140003293:	call   0x140003110
   140003298:	test   eax,eax
   14000329a:	js     0x1400032ae
   14000329c:	mov    edx,DWORD PTR [rsp+0x30]
   1400032a0:	mov    rcx,rdi
   1400032a3:	not    edx
   1400032a5:	and    edx,DWORD PTR [rsp+0x38]
   1400032a9:	call   0x140002fc0
   1400032ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032b3:	add    rsp,0x20
   1400032b7:	pop    rdi
   1400032b8:	ret    
   1400032b9:	int3   
   1400032ba:	int3   
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400032c5:	push   rdi
   1400032c6:	sub    rsp,0x20
   1400032ca:	mov    rdi,QWORD PTR [rcx]
   1400032cd:	lea    rdx,[rsp+0x30]
   1400032d2:	and    QWORD PTR [rsp+0x30],0x0
   1400032d8:	xor    ecx,ecx
   1400032da:	mov    ebx,0xc0000001
   1400032df:	call   0x1400042e0
   1400032e4:	test   eax,eax
   1400032e6:	jne    0x14000331e
   1400032e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400032ed:	mov    rdx,rdi
   1400032f0:	call   QWORD PTR [rip+0x2d4a]        # 0x140006040
   1400032f6:	test   eax,eax
   1400032f8:	je     0x140003311
   1400032fa:	add    eax,0xfffffffe
   1400032fd:	cmp    eax,0x1
   140003300:	ja     0x140003313
   140003302:	mov    rdx,rdi
   140003305:	mov    ecx,0x2741
   14000330a:	call   0x140003af4
   14000330f:	jmp    0x140003313
   140003311:	xor    ebx,ebx
   140003313:	mov    rcx,QWORD PTR [rsp+0x30]
   140003318:	call   QWORD PTR [rip+0x2d02]        # 0x140006020
   14000331e:	mov    eax,ebx
   140003320:	mov    rbx,QWORD PTR [rsp+0x38]
   140003325:	add    rsp,0x20
   140003329:	pop    rdi
   14000332a:	ret    
   14000332b:	int3   
   14000332c:	int3   
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	int3   
   140003331:	int3   
   140003332:	int3   
   140003333:	int3   
   140003334:	mov    rax,rsp
   140003337:	mov    QWORD PTR [rax+0x8],rbx
   14000333b:	mov    QWORD PTR [rax+0x10],rbp
   14000333f:	mov    QWORD PTR [rax+0x18],rsi
   140003343:	push   r14
   140003345:	sub    rsp,0x30
   140003349:	and    QWORD PTR [rax+0x20],0x0
   14000334e:	mov    rbp,rdx
   140003351:	and    DWORD PTR [rax-0x18],0x0
   140003355:	lea    rdx,[rax+0x20]
   140003359:	and    QWORD PTR [rax-0x10],0x0
   14000335e:	mov    rsi,r8
   140003361:	and    DWORD PTR [rax-0x14],0x0
   140003365:	mov    r14,rcx
   140003368:	call   0x1400042e0
   14000336d:	mov    ebx,eax
   14000336f:	test   eax,eax
   140003371:	jne    0x1400033c6
   140003373:	mov    rdx,QWORD PTR [rsp+0x58]
   140003378:	lea    rcx,[rsp+0x20]
   14000337d:	mov    r8,rbp
   140003380:	lea    ebx,[rax+0x1f]
   140003383:	call   0x140003840
   140003388:	test   eax,eax
   14000338a:	je     0x1400033c6
   14000338c:	mov    rdx,QWORD PTR [r14+0x8]
   140003390:	lea    rcx,[rsp+0x20]
   140003395:	call   0x140003768
   14000339a:	test   eax,eax
   14000339c:	je     0x1400033c6
   14000339e:	mov    rdx,QWORD PTR [rsp+0x58]
   1400033a3:	lea    rcx,[rsp+0x20]
   1400033a8:	mov    r8,rbp
   1400033ab:	call   0x14000397c
   1400033b0:	test   eax,eax
   1400033b2:	je     0x1400033c6
   1400033b4:	xor    ebx,ebx
   1400033b6:	test   rsi,rsi
   1400033b9:	je     0x1400033c6
   1400033bb:	xor    eax,eax
   1400033bd:	cmp    DWORD PTR [rsp+0x20],eax
   1400033c1:	sete   al
   1400033c4:	mov    DWORD PTR [rsi],eax
   1400033c6:	cmp    QWORD PTR [rsp+0x58],0x0
   1400033cc:	je     0x1400033d9
   1400033ce:	mov    rcx,QWORD PTR [rsp+0x58]
   1400033d3:	call   QWORD PTR [rip+0x2c47]        # 0x140006020
   1400033d9:	neg    ebx
   1400033db:	lea    rcx,[rsp+0x20]
   1400033e0:	sbb    ebx,ebx
   1400033e2:	and    ebx,0xc0000001
   1400033e8:	call   0x140003668
   1400033ed:	mov    rbp,QWORD PTR [rsp+0x48]
   1400033f2:	mov    eax,ebx
   1400033f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400033f9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400033fe:	add    rsp,0x30
   140003402:	pop    r14
   140003404:	ret    
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	mov    rax,rsp
   14000340f:	mov    QWORD PTR [rax+0x8],rbx
   140003413:	mov    QWORD PTR [rax+0x10],rbp
   140003417:	mov    QWORD PTR [rax+0x20],rsi
   14000341b:	push   r14
   14000341d:	sub    rsp,0x30
   140003421:	xor    r14d,r14d
   140003424:	mov    rsi,rdx
   140003427:	lea    rdx,[rax+0x18]
   14000342b:	mov    QWORD PTR [rax+0x18],r14
   14000342f:	mov    QWORD PTR [rax-0x18],r14
   140003433:	mov    rbp,rcx
   140003436:	mov    QWORD PTR [rax-0x10],r14
   14000343a:	call   0x1400042e0
   14000343f:	mov    ebx,eax
   140003441:	test   eax,eax
   140003443:	jne    0x140003484
   140003445:	mov    rdx,QWORD PTR [rsp+0x50]
   14000344a:	lea    rcx,[rsp+0x20]
   14000344f:	mov    r8,rsi
   140003452:	lea    ebx,[rax+0x1f]
   140003455:	call   0x140003840
   14000345a:	test   eax,eax
   14000345c:	je     0x140003484
   14000345e:	mov    rdx,QWORD PTR [rbp+0x8]
   140003462:	lea    rcx,[rsp+0x20]
   140003467:	call   0x1400036bc
   14000346c:	mov    rdx,QWORD PTR [rsp+0x50]
   140003471:	lea    rcx,[rsp+0x20]
   140003476:	mov    r8,rsi
   140003479:	call   0x14000397c
   14000347e:	test   eax,eax
   140003480:	cmovne ebx,r14d
   140003484:	cmp    QWORD PTR [rsp+0x50],r14
   140003489:	je     0x140003496
   14000348b:	mov    rcx,QWORD PTR [rsp+0x50]
   140003490:	call   QWORD PTR [rip+0x2b8a]        # 0x140006020
   140003496:	neg    ebx
   140003498:	lea    rcx,[rsp+0x20]
   14000349d:	sbb    ebx,ebx
   14000349f:	and    ebx,0xc0000001
   1400034a5:	call   0x140003668
   1400034aa:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034af:	mov    eax,ebx
   1400034b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034b6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400034bb:	add    rsp,0x30
   1400034bf:	pop    r14
   1400034c1:	ret    
   1400034c2:	int3   
   1400034c3:	int3   
   1400034c4:	int3   
   1400034c5:	int3   
   1400034c6:	int3   
   1400034c7:	int3   
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	rex push rbx
   1400034d2:	sub    rsp,0x20
   1400034d6:	mov    rbx,rcx
   1400034d9:	mov    rcx,QWORD PTR [rcx]
   1400034dc:	call   0x140001d2c
   1400034e1:	test   eax,eax
   1400034e3:	jne    0x1400034f0
   1400034e5:	mov    eax,0xc0000001
   1400034ea:	add    rsp,0x20
   1400034ee:	pop    rbx
   1400034ef:	ret    
   1400034f0:	cmp    QWORD PTR [rbx+0x8],0x0
   1400034f5:	mov    rcx,rbx
   1400034f8:	jne    0x140003524
   1400034fa:	and    QWORD PTR [rsp+0x30],0x0
   140003500:	lea    rdx,[rsp+0x30]
   140003505:	call   0x1400042e0
   14000350a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000350f:	mov    ebx,eax
   140003511:	test   rcx,rcx
   140003514:	je     0x14000351c
   140003516:	call   QWORD PTR [rip+0x2b04]        # 0x140006020
   14000351c:	mov    eax,ebx
   14000351e:	add    rsp,0x20
   140003522:	pop    rbx
   140003523:	ret    
   140003524:	lea    rdx,[rip+0x309d]        # 0x1400065c8
   14000352b:	add    rsp,0x20
   14000352f:	pop    rbx
   140003530:	jmp    0x14000340c
   140003535:	int3   
   140003536:	int3   
   140003537:	int3   
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	mov    QWORD PTR [rsp+0x18],rbx
   140003545:	push   rdi
   140003546:	sub    rsp,0x30
   14000354a:	and    QWORD PTR [rsp+0x48],0x0
   140003550:	mov    rbx,rcx
   140003553:	cmp    QWORD PTR [rcx+0x8],0x0
   140003558:	jne    0x140003564
   14000355a:	call   0x1400032c0
   14000355f:	jmp    0x140003612
   140003564:	lea    r8,[rsp+0x40]
   140003569:	lea    rdx,[rip+0x3058]        # 0x1400065c8
   140003570:	call   0x140003334
   140003575:	mov    edi,eax
   140003577:	test   eax,eax
   140003579:	js     0x140003610
   14000357f:	cmp    DWORD PTR [rsp+0x40],0x0
   140003584:	je     0x140003610
   14000358a:	mov    rdx,QWORD PTR [rbx]
   14000358d:	mov    ecx,0x2742
   140003592:	call   0x140003af4
   140003597:	mov    rcx,QWORD PTR [rip+0x6692]        # 0x140009c30
   14000359e:	lea    r8,[rsp+0x48]
   1400035a3:	mov    edx,0xc
   1400035a8:	call   QWORD PTR [rip+0x2a52]        # 0x140006000
   1400035ae:	mov    edi,eax
   1400035b0:	test   eax,eax
   1400035b2:	js     0x140003604
   1400035b4:	mov    rdx,QWORD PTR [rbx]
   1400035b7:	lea    rcx,[rsp+0x20]
   1400035bc:	call   QWORD PTR [rip+0x2e66]        # 0x140006428
   1400035c2:	mov    rdx,QWORD PTR [rsp+0x48]
   1400035c7:	lea    rcx,[rsp+0x20]
   1400035cc:	add    rdx,0x10
   1400035d0:	mov    r8b,0x1
   1400035d3:	call   QWORD PTR [rip+0x2e3f]        # 0x140006418
   1400035d9:	mov    rcx,QWORD PTR [rsp+0x48]
   1400035de:	test   eax,eax
   1400035e0:	jne    0x1400035fc
   1400035e2:	cmp    QWORD PTR [rcx+0x40],0x0
   1400035e7:	je     0x1400035fc
   1400035e9:	lea    rdx,[rcx+0x10]
   1400035ed:	mov    ecx,0x2743
   1400035f2:	call   0x140003af4
   1400035f7:	mov    rcx,QWORD PTR [rsp+0x48]
   1400035fc:	call   QWORD PTR [rip+0x2a26]        # 0x140006028
   140003602:	jmp    0x140003610
   140003604:	mov    edx,eax
   140003606:	mov    ecx,0x2744
   14000360b:	call   0x140003af4
   140003610:	mov    eax,edi
   140003612:	mov    rbx,QWORD PTR [rsp+0x50]
   140003617:	add    rsp,0x30
   14000361b:	pop    rdi
   14000361c:	ret    
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	int3   
   140003621:	int3   
   140003622:	int3   
   140003623:	int3   
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	lea    rdx,[rip+0x2ff1]        # 0x140006628
   140003637:	jmp    0x14000340c
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	int3   
   140003641:	int3   
   140003642:	int3   
   140003643:	int3   
   140003644:	int3   
   140003645:	int3   
   140003646:	int3   
   140003647:	int3   
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	xor    r8d,r8d
   140003653:	lea    rdx,[rip+0x2fce]        # 0x140006628
   14000365a:	jmp    0x140003334
   14000365f:	int3   
   140003660:	int3   
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	int3   
   140003665:	int3   
   140003666:	int3   
   140003667:	int3   
   140003668:	mov    QWORD PTR [rsp+0x8],rbx
   14000366d:	push   rdi
   14000366e:	sub    rsp,0x20
   140003672:	cmp    DWORD PTR [rcx],0x0
   140003675:	mov    rbx,rcx
   140003678:	je     0x1400036aa
   14000367a:	cmp    QWORD PTR [rcx+0x8],0x0
   14000367f:	je     0x1400036aa
   140003681:	xor    edi,edi
   140003683:	cmp    DWORD PTR [rcx],edi
   140003685:	jbe    0x1400036a0
   140003687:	mov    rax,QWORD PTR [rbx+0x8]
   14000368b:	mov    rcx,QWORD PTR [rax+rdi*8]
   14000368f:	test   rcx,rcx
   140003692:	je     0x14000369a
   140003694:	call   QWORD PTR [rip+0x2c8e]        # 0x140006328
   14000369a:	inc    edi
   14000369c:	cmp    edi,DWORD PTR [rbx]
   14000369e:	jb     0x140003687
   1400036a0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400036a4:	call   QWORD PTR [rip+0x2c7e]        # 0x140006328
   1400036aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036af:	add    rsp,0x20
   1400036b3:	pop    rdi
   1400036b4:	ret    
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400036c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400036c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400036cb:	push   rdi
   1400036cc:	sub    rsp,0x20
   1400036d0:	mov    rdi,rdx
   1400036d3:	mov    rbx,rcx
   1400036d6:	mov    edx,DWORD PTR [rcx]
   1400036d8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400036dc:	inc    edx
   1400036de:	shl    rdx,0x3
   1400036e2:	call   QWORD PTR [rip+0x2c28]        # 0x140006310
   1400036e8:	xor    ebp,ebp
   1400036ea:	mov    rsi,rax
   1400036ed:	test   rax,rax
   1400036f0:	je     0x140003748
   1400036f2:	mov    rcx,rdi
   1400036f5:	mov    QWORD PTR [rbx+0x8],rax
   1400036f9:	call   QWORD PTR [rip+0x2c01]        # 0x140006300
   1400036ff:	mov    rcx,rax
   140003702:	mov    eax,DWORD PTR [rbx]
   140003704:	mov    QWORD PTR [rsi+rax*8],rcx
   140003708:	mov    eax,DWORD PTR [rbx]
   14000370a:	cmp    QWORD PTR [rsi+rax*8],rbp
   14000370e:	je     0x14000372b
   140003710:	inc    eax
   140003712:	mov    DWORD PTR [rbx],eax
   140003714:	or     rcx,0xffffffffffffffff
   140003718:	inc    rcx
   14000371b:	cmp    WORD PTR [rdi+rcx*2],bp
   14000371f:	jne    0x140003718
   140003721:	add    DWORD PTR [rbx+0x4],ecx
   140003724:	mov    eax,0x1
   140003729:	jmp    0x14000374a
   14000372b:	mov    r8,rdi
   14000372e:	lea    rcx,[rip+0x362b]        # 0x140006d60
   140003735:	mov    edx,eax
   140003737:	call   QWORD PTR [rip+0x2c33]        # 0x140006370
   14000373d:	mov    ecx,0x8
   140003742:	call   QWORD PTR [rip+0x2998]        # 0x1400060e0
   140003748:	xor    eax,eax
   14000374a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000374f:	mov    rbp,QWORD PTR [rsp+0x38]
   140003754:	mov    rsi,QWORD PTR [rsp+0x40]
   140003759:	add    rsp,0x20
   14000375d:	pop    rdi
   14000375e:	ret    
   14000375f:	int3   
   140003760:	int3   
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	mov    rax,rsp
   14000376b:	mov    QWORD PTR [rax+0x8],rbx
   14000376f:	mov    QWORD PTR [rax+0x10],rbp
   140003773:	mov    QWORD PTR [rax+0x18],rsi
   140003777:	mov    QWORD PTR [rax+0x20],rdi
   14000377b:	push   r12
   14000377d:	push   r14
   14000377f:	push   r15
   140003781:	sub    rsp,0x20
   140003785:	xor    r12d,r12d
   140003788:	mov    r14,rdx
   14000378b:	mov    rbx,rcx
   14000378e:	mov    edi,r12d
   140003791:	mov    esi,r12d
   140003794:	lea    ebp,[r12+0x1]
   140003799:	cmp    DWORD PTR [rcx],r12d
   14000379c:	jbe    0x140003806
   14000379e:	mov    rdx,QWORD PTR [rbx+0x8]
   1400037a2:	mov    rcx,r14
   1400037a5:	mov    r15d,esi
   1400037a8:	mov    rdx,QWORD PTR [rdx+r15*8]
   1400037ac:	call   QWORD PTR [rip+0x2c3e]        # 0x1400063f0
   1400037b2:	test   eax,eax
   1400037b4:	jne    0x1400037d0
   1400037b6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400037ba:	mov    rcx,QWORD PTR [rcx+r15*8]
   1400037be:	call   QWORD PTR [rip+0x2b64]        # 0x140006328
   1400037c4:	mov    rax,QWORD PTR [rbx+0x8]
   1400037c8:	add    edi,ebp
   1400037ca:	mov    QWORD PTR [rax+r15*8],r12
   1400037ce:	jmp    0x1400037e4
   1400037d0:	test   edi,edi
   1400037d2:	je     0x1400037e4
   1400037d4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400037d8:	mov    ecx,esi
   1400037da:	sub    ecx,edi
   1400037dc:	mov    rax,QWORD PTR [rdx+r15*8]
   1400037e0:	mov    QWORD PTR [rdx+rcx*8],rax
   1400037e4:	add    esi,ebp
   1400037e6:	cmp    esi,DWORD PTR [rbx]
   1400037e8:	jb     0x14000379e
   1400037ea:	test   edi,edi
   1400037ec:	je     0x140003806
   1400037ee:	sub    DWORD PTR [rbx],edi
   1400037f0:	or     rax,0xffffffffffffffff
   1400037f4:	inc    rax
   1400037f7:	cmp    WORD PTR [r14+rax*2],r12w
   1400037fc:	jne    0x1400037f4
   1400037fe:	imul   eax,edi
   140003801:	sub    DWORD PTR [rbx+0x4],eax
   140003804:	jmp    0x140003819
   140003806:	mov    rdx,r14
   140003809:	lea    rcx,[rip+0x3588]        # 0x140006d98
   140003810:	call   QWORD PTR [rip+0x2b5a]        # 0x140006370
   140003816:	mov    ebp,r12d
   140003819:	mov    rbx,QWORD PTR [rsp+0x40]
   14000381e:	mov    eax,ebp
   140003820:	mov    rbp,QWORD PTR [rsp+0x48]
   140003825:	mov    rsi,QWORD PTR [rsp+0x50]
   14000382a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000382f:	add    rsp,0x20
   140003833:	pop    r15
   140003835:	pop    r14
   140003837:	pop    r12
   140003839:	ret    
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	mov    r11,rsp
   140003843:	mov    QWORD PTR [r11+0x8],rbx
   140003847:	mov    QWORD PTR [r11+0x10],rbp
   14000384b:	mov    QWORD PTR [r11+0x18],rsi
   14000384f:	push   rdi
   140003850:	push   r14
   140003852:	push   r15
   140003854:	sub    rsp,0x40
   140003858:	mov    rsi,r8
   14000385b:	lea    rax,[r11+0x20]
   14000385f:	mov    rbp,rdx
   140003862:	mov    QWORD PTR [r11-0x30],rax
   140003866:	xor    r15d,r15d
   140003869:	lea    r9,[r11-0x28]
   14000386d:	mov    r14,rcx
   140003870:	mov    QWORD PTR [r11-0x38],r15
   140003874:	mov    rdx,rsi
   140003877:	mov    DWORD PTR [r11+0x20],r15d
   14000387b:	mov    rcx,rbp
   14000387e:	xor    r8d,r8d
   140003881:	mov    ebx,r15d
   140003884:	call   QWORD PTR [rip+0x27ee]        # 0x140006078
   14000388a:	test   eax,eax
   14000388c:	jne    0x14000393e
   140003892:	mov    ecx,DWORD PTR [rsp+0x78]
   140003896:	call   QWORD PTR [rip+0x2ab4]        # 0x140006350
   14000389c:	mov    rdi,rax
   14000389f:	test   rax,rax
   1400038a2:	je     0x14000392b
   1400038a8:	lea    rax,[rsp+0x78]
   1400038ad:	xor    r8d,r8d
   1400038b0:	mov    QWORD PTR [rsp+0x28],rax
   1400038b5:	lea    r9,[rsp+0x30]
   1400038ba:	mov    rdx,rsi
   1400038bd:	mov    QWORD PTR [rsp+0x20],rdi
   1400038c2:	mov    rcx,rbp
   1400038c5:	call   QWORD PTR [rip+0x27ad]        # 0x140006078
   1400038cb:	test   eax,eax
   1400038cd:	jne    0x14000390d
   1400038cf:	cmp    DWORD PTR [rsp+0x78],0x4
   1400038d4:	lea    ebx,[rax+0x1]
   1400038d7:	jbe    0x140003920
   1400038d9:	mov    rsi,rdi
   1400038dc:	cmp    WORD PTR [rdi],r15w
   1400038e0:	je     0x140003920
   1400038e2:	mov    rdx,rsi
   1400038e5:	mov    rcx,r14
   1400038e8:	call   0x1400036bc
   1400038ed:	test   eax,eax
   1400038ef:	je     0x140003908
   1400038f1:	xor    edx,edx
   1400038f3:	mov    rcx,rsi
   1400038f6:	call   QWORD PTR [rip+0x2a8c]        # 0x140006388
   1400038fc:	lea    rsi,[rax+0x2]
   140003900:	cmp    WORD PTR [rsi],r15w
   140003904:	jne    0x1400038e2
   140003906:	jmp    0x140003920
   140003908:	mov    ebx,r15d
   14000390b:	jmp    0x140003920
   14000390d:	mov    r8d,eax
   140003910:	lea    rcx,[rip+0x3499]        # 0x140006db0
   140003917:	mov    rdx,rsi
   14000391a:	call   QWORD PTR [rip+0x2a50]        # 0x140006370
   140003920:	mov    rcx,rdi
   140003923:	call   QWORD PTR [rip+0x29ff]        # 0x140006328
   140003929:	jmp    0x14000395b
   14000392b:	mov    edx,DWORD PTR [rsp+0x78]
   14000392f:	lea    rcx,[rip+0x34a2]        # 0x140006dd8
   140003936:	call   QWORD PTR [rip+0x2a34]        # 0x140006370
   14000393c:	jmp    0x14000395b
   14000393e:	cmp    eax,0x2
   140003941:	jne    0x140003948
   140003943:	lea    ebx,[rax-0x1]
   140003946:	jmp    0x14000395b
   140003948:	mov    r8d,eax
   14000394b:	lea    rcx,[rip+0x34b6]        # 0x140006e08
   140003952:	mov    rdx,rsi
   140003955:	call   QWORD PTR [rip+0x2a15]        # 0x140006370
   14000395b:	mov    rbp,QWORD PTR [rsp+0x68]
   140003960:	mov    eax,ebx
   140003962:	mov    rbx,QWORD PTR [rsp+0x60]
   140003967:	mov    rsi,QWORD PTR [rsp+0x70]
   14000396c:	add    rsp,0x40
   140003970:	pop    r15
   140003972:	pop    r14
   140003974:	pop    rdi
   140003975:	ret    
   140003976:	int3   
   140003977:	int3   
   140003978:	int3   
   140003979:	int3   
   14000397a:	int3   
   14000397b:	int3   
   14000397c:	mov    rax,rsp
   14000397f:	mov    QWORD PTR [rax+0x8],rbx
   140003983:	mov    QWORD PTR [rax+0x18],rbp
   140003987:	mov    QWORD PTR [rax+0x20],rsi
   14000398b:	mov    QWORD PTR [rax+0x10],rdx
   14000398f:	push   rdi
   140003990:	push   r12
   140003992:	push   r13
   140003994:	push   r14
   140003996:	push   r15
   140003998:	sub    rsp,0x30
   14000399c:	mov    eax,DWORD PTR [rcx+0x4]
   14000399f:	mov    rbp,rcx
   1400039a2:	add    eax,DWORD PTR [rcx]
   1400039a4:	mov    rsi,r8
   1400039a7:	xor    ebx,ebx
   1400039a9:	lea    r12d,[rax*2+0x4]
   1400039b1:	mov    ecx,r12d
   1400039b4:	call   QWORD PTR [rip+0x2996]        # 0x140006350
   1400039ba:	mov    r14,rax
   1400039bd:	test   rax,rax
   1400039c0:	jne    0x1400039d7
   1400039c2:	mov    rdx,rsi
   1400039c5:	lea    rcx,[rip+0x345c]        # 0x140006e28
   1400039cc:	call   QWORD PTR [rip+0x299e]        # 0x140006370
   1400039d2:	jmp    0x140003a75
   1400039d7:	mov    r15d,ebx
   1400039da:	mov    r13d,ebx
   1400039dd:	cmp    DWORD PTR [rbp+0x0],ebx
   1400039e0:	jbe    0x140003a1a
   1400039e2:	mov    rax,QWORD PTR [rbp+0x8]
   1400039e6:	or     rdi,0xffffffffffffffff
   1400039ea:	mov    ecx,r15d
   1400039ed:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400039f1:	inc    rdi
   1400039f4:	cmp    WORD PTR [rdx+rdi*2],bx
   1400039f8:	jne    0x1400039f1
   1400039fa:	mov    eax,r13d
   1400039fd:	inc    edi
   1400039ff:	mov    r8d,edi
   140003a02:	add    r8,r8
   140003a05:	lea    rcx,[r14+rax*2]
   140003a09:	call   0x140005dd6
   140003a0e:	add    r13d,edi
   140003a11:	inc    r15d
   140003a14:	cmp    r15d,DWORD PTR [rbp+0x0]
   140003a18:	jb     0x1400039e2
   140003a1a:	mov    rcx,QWORD PTR [rsp+0x68]
   140003a1f:	mov    r9d,0x7
   140003a25:	mov    eax,r13d
   140003a28:	xor    r8d,r8d
   140003a2b:	mov    DWORD PTR [rsp+0x28],r12d
   140003a30:	mov    rdx,rsi
   140003a33:	mov    QWORD PTR [rsp+0x20],r14
   140003a38:	mov    WORD PTR [r14+rax*2],bx
   140003a3d:	lea    eax,[r13+0x1]
   140003a41:	mov    WORD PTR [r14+rax*2],bx
   140003a46:	call   QWORD PTR [rip+0x260c]        # 0x140006058
   140003a4c:	mov    rcx,r14
   140003a4f:	mov    edi,eax
   140003a51:	call   QWORD PTR [rip+0x28d1]        # 0x140006328
   140003a57:	test   edi,edi
   140003a59:	je     0x140003a70
   140003a5b:	mov    r8d,edi
   140003a5e:	lea    rcx,[rip+0x33f3]        # 0x140006e58
   140003a65:	mov    rdx,rsi
   140003a68:	call   QWORD PTR [rip+0x2902]        # 0x140006370
   140003a6e:	jmp    0x140003a75
   140003a70:	mov    ebx,0x1
   140003a75:	mov    rbp,QWORD PTR [rsp+0x70]
   140003a7a:	mov    eax,ebx
   140003a7c:	mov    rbx,QWORD PTR [rsp+0x60]
   140003a81:	mov    rsi,QWORD PTR [rsp+0x78]
   140003a86:	add    rsp,0x30
   140003a8a:	pop    r15
   140003a8c:	pop    r14
   140003a8e:	pop    r13
   140003a90:	pop    r12
   140003a92:	pop    rdi
   140003a93:	ret    
   140003a94:	int3   
   140003a95:	int3   
   140003a96:	int3   
   140003a97:	int3   
   140003a98:	int3   
   140003a99:	int3   
   140003a9a:	int3   
   140003a9b:	int3   
   140003a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140003aa1:	mov    QWORD PTR [rsp+0x10],rsi
   140003aa6:	push   rdi
   140003aa7:	sub    rsp,0x20
   140003aab:	mov    edi,ecx
   140003aad:	mov    rsi,r8
   140003ab0:	xor    ecx,ecx
   140003ab2:	mov    rbx,rdx
   140003ab5:	call   QWORD PTR [rip+0x2605]        # 0x1400060c0
   140003abb:	mov    r9d,DWORD PTR [rsi]
   140003abe:	mov    r8,rbx
   140003ac1:	mov    rcx,rax
   140003ac4:	mov    edx,edi
   140003ac6:	call   QWORD PTR [rip+0x273c]        # 0x140006208
   140003acc:	test   eax,eax
   140003ace:	jne    0x140003ada
   140003ad0:	and    DWORD PTR [rsi],eax
   140003ad2:	call   QWORD PTR [rip+0x25d8]        # 0x1400060b0
   140003ad8:	jmp    0x140003ade
   140003ada:	mov    DWORD PTR [rsi],eax
   140003adc:	xor    eax,eax
   140003ade:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ae3:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ae8:	add    rsp,0x20
   140003aec:	pop    rdi
   140003aed:	ret    
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	int3   
   140003af1:	int3   
   140003af2:	int3   
   140003af3:	int3   
   140003af4:	mov    rax,rsp
   140003af7:	mov    DWORD PTR [rax+0x8],ecx
   140003afa:	mov    QWORD PTR [rax+0x10],rdx
   140003afe:	mov    QWORD PTR [rax+0x18],r8
   140003b02:	mov    QWORD PTR [rax+0x20],r9
   140003b06:	sub    rsp,0x28
   140003b0a:	mov    r8d,ecx
   140003b0d:	lea    r9,[rax+0x10]
   140003b11:	mov    rcx,QWORD PTR [rip+0x6128]        # 0x140009c40
   140003b18:	mov    edx,0xfffffff5
   140003b1d:	call   0x140004f94
   140003b22:	add    rsp,0x28
   140003b26:	ret    
   140003b27:	int3   
   140003b28:	int3   
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	rex push rbx
   140003b32:	push   rbp
   140003b33:	push   rsi
   140003b34:	push   rdi
   140003b35:	push   r12
   140003b37:	push   r14
   140003b39:	push   r15
   140003b3b:	sub    rsp,0x240
   140003b42:	mov    rax,QWORD PTR [rip+0x54bf]        # 0x140009008
   140003b49:	xor    rax,rsp
   140003b4c:	mov    QWORD PTR [rsp+0x230],rax
   140003b54:	mov    r14d,r8d
   140003b57:	mov    ebp,edx
   140003b59:	mov    r12,rcx
   140003b5c:	xor    ebx,ebx
   140003b5e:	xor    edx,edx
   140003b60:	mov    WORD PTR [rsp+0x30],bx
   140003b65:	mov    r8d,0x1fe
   140003b6b:	lea    rcx,[rsp+0x32]
   140003b70:	mov    rsi,r9
   140003b73:	call   0x140005de2
   140003b78:	mov    ecx,0xfffffff6
   140003b7d:	call   QWORD PTR [rip+0x258d]        # 0x140006110
   140003b83:	mov    r15,rax
   140003b86:	test   rax,rax
   140003b89:	je     0x140003d5b
   140003b8f:	lea    rdx,[rsp+0x20]
   140003b94:	mov    rcx,rax
   140003b97:	call   QWORD PTR [rip+0x255b]        # 0x1400060f8
   140003b9d:	test   eax,eax
   140003b9f:	je     0x140003d40
   140003ba5:	mov    edx,DWORD PTR [rsp+0x20]
   140003ba9:	mov    rcx,r15
   140003bac:	and    edx,0xfffffffb
   140003baf:	call   QWORD PTR [rip+0x2553]        # 0x140006108
   140003bb5:	test   eax,eax
   140003bb7:	je     0x140003d16
   140003bbd:	lea    rcx,[rip+0x32c4]        # 0x140006e88
   140003bc4:	mov    eax,ebp
   140003bc6:	and    al,0x1
   140003bc8:	lea    rdi,[rip+0x32d9]        # 0x140006ea8
   140003bcf:	cmovne rdi,rcx
   140003bd3:	lea    ecx,[rbx+0x2]
   140003bd6:	call   0x140005d18
   140003bdb:	mov    rcx,rax
   140003bde:	mov    r8,r12
   140003be1:	mov    rdx,rdi
   140003be4:	call   QWORD PTR [rip+0x2746]        # 0x140006330
   140003bea:	xor    ecx,ecx
   140003bec:	call   0x140005d18
   140003bf1:	mov    r8,rax
   140003bf4:	mov    edx,r14d
   140003bf7:	mov    rcx,rsi
   140003bfa:	call   QWORD PTR [rip+0x26c8]        # 0x1400062c8
   140003c00:	test   rax,rax
   140003c03:	je     0x140003c66
   140003c05:	mov    eax,ebx
   140003c07:	test   r14d,r14d
   140003c0a:	je     0x140003c26
   140003c0c:	mov    rcx,rsi
   140003c0f:	cmp    WORD PTR [rcx],0xa
   140003c13:	je     0x140003c22
   140003c15:	inc    eax
   140003c17:	add    rcx,0x2
   140003c1b:	cmp    eax,r14d
   140003c1e:	jb     0x140003c0f
   140003c20:	jmp    0x140003c26
   140003c22:	mov    WORD PTR [rsi+rax*2],bx
   140003c26:	and    ebp,0x2
   140003c29:	je     0x140003c9c
   140003c2b:	mov    ecx,0x2
   140003c30:	call   0x140005d18
   140003c35:	mov    rcx,rax
   140003c38:	lea    rdx,[rip+0x32a1]        # 0x140006ee0
   140003c3f:	call   QWORD PTR [rip+0x26eb]        # 0x140006330
   140003c45:	xor    ecx,ecx
   140003c47:	call   0x140005d18
   140003c4c:	mov    edi,0x100
   140003c51:	lea    rcx,[rsp+0x30]
   140003c56:	mov    edx,edi
   140003c58:	mov    r8,rax
   140003c5b:	call   QWORD PTR [rip+0x2667]        # 0x1400062c8
   140003c61:	test   rax,rax
   140003c64:	jne    0x140003c85
   140003c66:	mov    ecx,0x2
   140003c6b:	call   0x140005d18
   140003c70:	lea    rdx,[rip+0x3249]        # 0x140006ec0
   140003c77:	mov    rcx,rax
   140003c7a:	call   QWORD PTR [rip+0x26b0]        # 0x140006330
   140003c80:	jmp    0x140003d07
   140003c85:	mov    eax,ebx
   140003c87:	lea    rcx,[rsp+0x30]
   140003c8c:	cmp    WORD PTR [rcx],0xa
   140003c90:	je     0x140003cec
   140003c92:	inc    eax
   140003c94:	add    rcx,0x2
   140003c98:	cmp    eax,edi
   140003c9a:	jb     0x140003c8c
   140003c9c:	mov    ecx,0x2
   140003ca1:	call   0x140005d18
   140003ca6:	mov    rcx,rax
   140003ca9:	lea    rdx,[rip+0x29a0]        # 0x140006650
   140003cb0:	call   QWORD PTR [rip+0x267a]        # 0x140006330
   140003cb6:	test   ebp,ebp
   140003cb8:	je     0x140003d02
   140003cba:	lea    rdx,[rsp+0x30]
   140003cbf:	sub    rdx,rsi
   140003cc2:	movzx  eax,WORD PTR [rsi]
   140003cc5:	movzx  ecx,WORD PTR [rsi+rdx*1]
   140003cc9:	sub    eax,ecx
   140003ccb:	jne    0x140003cd5
   140003ccd:	add    rsi,0x2
   140003cd1:	test   ecx,ecx
   140003cd3:	jne    0x140003cc2
   140003cd5:	test   eax,eax
   140003cd7:	je     0x140003d02
   140003cd9:	mov    ecx,0x2
   140003cde:	call   0x140005d18
   140003ce3:	lea    rdx,[rip+0x321e]        # 0x140006f08
   140003cea:	jmp    0x140003c77
   140003cec:	add    rax,rax
   140003cef:	cmp    rax,0x200
   140003cf5:	jae    0x140003db2
   140003cfb:	mov    WORD PTR [rsp+rax*1+0x30],bx
   140003d00:	jmp    0x140003c9c
   140003d02:	mov    ebx,0x1
   140003d07:	mov    edx,DWORD PTR [rsp+0x20]
   140003d0b:	mov    rcx,r15
   140003d0e:	call   QWORD PTR [rip+0x23f4]        # 0x140006108
   140003d14:	jmp    0x140003d80
   140003d16:	call   QWORD PTR [rip+0x2394]        # 0x1400060b0
   140003d1c:	mov    ecx,0x2
   140003d21:	mov    edi,eax
   140003d23:	call   0x140005d18
   140003d28:	mov    rcx,rax
   140003d2b:	lea    rdx,[rip+0x31f6]        # 0x140006f28
   140003d32:	mov    r9d,edi
   140003d35:	mov    r8,r12
   140003d38:	call   QWORD PTR [rip+0x25f2]        # 0x140006330
   140003d3e:	jmp    0x140003d80
   140003d40:	call   QWORD PTR [rip+0x236a]        # 0x1400060b0
   140003d46:	mov    ecx,0x2
   140003d4b:	mov    edi,eax
   140003d4d:	call   0x140005d18
   140003d52:	lea    rdx,[rip+0x320f]        # 0x140006f68
   140003d59:	jmp    0x140003d74
   140003d5b:	call   QWORD PTR [rip+0x234f]        # 0x1400060b0
   140003d61:	mov    ecx,0x2
   140003d66:	mov    edi,eax
   140003d68:	call   0x140005d18
   140003d6d:	lea    rdx,[rip+0x322c]        # 0x140006fa0
   140003d74:	mov    r8d,edi
   140003d77:	mov    rcx,rax
   140003d7a:	call   QWORD PTR [rip+0x25b0]        # 0x140006330
   140003d80:	xor    eax,eax
   140003d82:	lea    rdi,[rsp+0x30]
   140003d87:	mov    ecx,0x200
   140003d8c:	rep stos BYTE PTR es:[rdi],al
   140003d8e:	mov    eax,ebx
   140003d90:	mov    rcx,QWORD PTR [rsp+0x230]
   140003d98:	xor    rcx,rsp
   140003d9b:	call   0x140005710
   140003da0:	add    rsp,0x240
   140003da7:	pop    r15
   140003da9:	pop    r14
   140003dab:	pop    r12
   140003dad:	pop    rdi
   140003dae:	pop    rsi
   140003daf:	pop    rbp
   140003db0:	pop    rbx
   140003db1:	ret    
   140003db2:	call   0x1400058e8
   140003db7:	int3   
   140003db8:	int3   
   140003db9:	int3   
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	mov    rax,rsp
   140003dc3:	mov    QWORD PTR [rax+0x8],rbx
   140003dc7:	mov    QWORD PTR [rax+0x18],rbp
   140003dcb:	mov    QWORD PTR [rax+0x20],rsi
   140003dcf:	mov    DWORD PTR [rax+0x10],edx
   140003dd2:	push   rdi
   140003dd3:	push   r12
   140003dd5:	push   r13
   140003dd7:	push   r14
   140003dd9:	push   r15
   140003ddb:	sub    rsp,0x20
   140003ddf:	mov    r13,r9
   140003de2:	mov    r12,r8
   140003de5:	mov    r14,rcx
   140003de8:	xor    esi,esi
   140003dea:	call   QWORD PTR [rip+0x22e8]        # 0x1400060d8
   140003df0:	cmp    eax,0x1
   140003df3:	jne    0x140003e07
   140003df5:	lea    ecx,[rsi+0x2a]
   140003df8:	cmp    cx,WORD PTR [r14]
   140003dfc:	jne    0x140003e07
   140003dfe:	mov    edi,eax
   140003e00:	mov    eax,0x100
   140003e05:	jmp    0x140003e09
   140003e07:	xor    edi,edi
   140003e09:	lea    r15d,[rax*2+0x2]
   140003e11:	mov    ecx,r15d
   140003e14:	mov    ebp,r15d
   140003e17:	call   QWORD PTR [rip+0x2533]        # 0x140006350
   140003e1d:	mov    rbx,rax
   140003e20:	test   rax,rax
   140003e23:	je     0x140003e78
   140003e25:	test   edi,edi
   140003e27:	je     0x140003e42
   140003e29:	mov    edx,DWORD PTR [rsp+0x58]
   140003e2d:	mov    r9,rax
   140003e30:	shr    r15d,1
   140003e33:	mov    rcx,r12
   140003e36:	mov    r8d,r15d
   140003e39:	call   0x140003b30
   140003e3e:	mov    esi,eax
   140003e40:	jmp    0x140003e59
   140003e42:	mov    rdx,rbp
   140003e45:	mov    r8,r14
   140003e48:	shr    rdx,1
   140003e4b:	mov    rcx,rax
   140003e4e:	call   QWORD PTR [rip+0x24c4]        # 0x140006318
   140003e54:	mov    esi,0x1
   140003e59:	test   esi,esi
   140003e5b:	je     0x140003e63
   140003e5d:	mov    QWORD PTR [r13+0x0],rbx
   140003e61:	jmp    0x140003e95
   140003e63:	xor    eax,eax
   140003e65:	mov    rdi,rbx
   140003e68:	mov    rcx,rbp
   140003e6b:	rep stos BYTE PTR es:[rdi],al
   140003e6d:	mov    rcx,rbx
   140003e70:	call   QWORD PTR [rip+0x24b2]        # 0x140006328
   140003e76:	jmp    0x140003e95
   140003e78:	mov    ecx,0x2
   140003e7d:	call   0x140005d18
   140003e82:	mov    rcx,rax
   140003e85:	lea    rdx,[rip+0x3164]        # 0x140006ff0
   140003e8c:	mov    r8,r12
   140003e8f:	call   QWORD PTR [rip+0x249b]        # 0x140006330
   140003e95:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e9a:	mov    eax,esi
   140003e9c:	mov    rsi,QWORD PTR [rsp+0x68]
   140003ea1:	mov    rbp,QWORD PTR [rsp+0x60]
   140003ea6:	add    rsp,0x20
   140003eaa:	pop    r15
   140003eac:	pop    r14
   140003eae:	pop    r13
   140003eb0:	pop    r12
   140003eb2:	pop    rdi
   140003eb3:	ret    
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	mov    rax,rsp
   140003ebf:	mov    QWORD PTR [rax+0x8],rbx
   140003ec3:	mov    QWORD PTR [rax+0x10],rbp
   140003ec7:	mov    QWORD PTR [rax+0x18],rsi
   140003ecb:	mov    QWORD PTR [rax+0x20],rdi
   140003ecf:	push   r14
   140003ed1:	sub    rsp,0x50
   140003ed5:	mov    rbx,QWORD PTR [rip+0x5f94]        # 0x140009e70
   140003edc:	xor    eax,eax
   140003ede:	mov    rdi,r9
   140003ee1:	mov    rsi,r8
   140003ee4:	mov    ebp,edx
   140003ee6:	mov    r14,rcx
   140003ee9:	test   rbx,rbx
   140003eec:	jne    0x140003f14
   140003eee:	lea    rcx,[rip+0x5f7b]        # 0x140009e70
   140003ef5:	call   QWORD PTR [rip+0x222d]        # 0x140006128
   140003efb:	test   eax,eax
   140003efd:	jns    0x140003f0d
   140003eff:	and    QWORD PTR [rip+0x5f6a],rbx        # 0x140009e70
   140003f06:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f0b:	jmp    0x140003f14
   140003f0d:	mov    rbx,QWORD PTR [rip+0x5f5c]        # 0x140009e70
   140003f14:	test   eax,eax
   140003f16:	js     0x140003f8d
   140003f18:	cmp    DWORD PTR [rip+0x5f4d],0x0        # 0x140009e6c
   140003f1f:	jne    0x140003f59
   140003f21:	lea    rdx,[rip+0x30f8]        # 0x140007020
   140003f28:	lea    rcx,[rip+0x5f21]        # 0x140009e50
   140003f2f:	call   QWORD PTR [rip+0x24eb]        # 0x140006420
   140003f35:	lea    r8,[rip+0x5f2c]        # 0x140009e68
   140003f3c:	mov    rcx,rbx
   140003f3f:	lea    rdx,[rip+0x5f0a]        # 0x140009e50
   140003f46:	call   QWORD PTR [rip+0x21d4]        # 0x140006120
   140003f4c:	xor    edx,edx
   140003f4e:	test   eax,eax
   140003f50:	setns  dl
   140003f53:	mov    DWORD PTR [rip+0x5f13],edx        # 0x140009e6c
   140003f59:	test   eax,eax
   140003f5b:	js     0x140003f8d
   140003f5d:	mov    edx,DWORD PTR [rip+0x5f05]        # 0x140009e68
   140003f63:	lea    rax,[rsp+0x40]
   140003f68:	mov    QWORD PTR [rsp+0x30],rax
   140003f6d:	mov    r9d,ebp
   140003f70:	mov    QWORD PTR [rsp+0x28],rdi
   140003f75:	mov    r8,r14
   140003f78:	mov    rcx,rbx
   140003f7b:	mov    QWORD PTR [rsp+0x20],rsi
   140003f80:	call   QWORD PTR [rip+0x21aa]        # 0x140006130
   140003f86:	test   eax,eax
   140003f88:	cmovns eax,DWORD PTR [rsp+0x40]
   140003f8d:	mov    rbx,QWORD PTR [rsp+0x60]
   140003f92:	mov    rbp,QWORD PTR [rsp+0x68]
   140003f97:	mov    rsi,QWORD PTR [rsp+0x70]
   140003f9c:	mov    rdi,QWORD PTR [rsp+0x78]
   140003fa1:	add    rsp,0x50
   140003fa5:	pop    r14
   140003fa7:	ret    
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140003fba:	mov    QWORD PTR [rsp+0x18],rdi
   140003fbf:	push   r14
   140003fc1:	sub    rsp,0x20
   140003fc5:	mov    rsi,r8
   140003fc8:	mov    r14,rdx
   140003fcb:	mov    rdi,rcx
   140003fce:	call   QWORD PTR [rip+0x2104]        # 0x1400060d8
   140003fd4:	mov    rcx,QWORD PTR [r14]
   140003fd7:	mov    rdx,rdi
   140003fda:	lea    ebx,[rax+0x1]
   140003fdd:	add    rbx,rbx
   140003fe0:	mov    r8,rbx
   140003fe3:	call   0x140005dd6
   140003fe8:	mov    rdx,QWORD PTR [r14]
   140003feb:	mov    rcx,rsi
   140003fee:	call   QWORD PTR [rip+0x2434]        # 0x140006428
   140003ff4:	add    QWORD PTR [r14],rbx
   140003ff7:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ffc:	mov    rsi,QWORD PTR [rsp+0x38]
   140004001:	mov    rdi,QWORD PTR [rsp+0x40]
   140004006:	add    rsp,0x20
   14000400a:	pop    r14
   14000400c:	ret    
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	int3   
   140004011:	int3   
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	push   rbp
   140004026:	push   rsi
   140004027:	push   rdi
   140004028:	push   r12
   14000402a:	push   r15
   14000402c:	mov    rbp,rsp
   14000402f:	sub    rsp,0x30
   140004033:	and    QWORD PTR [rbp+0x40],0x0
   140004038:	xor    ebx,ebx
   14000403a:	cmp    QWORD PTR [rip+0x5bd7],rbx        # 0x140009c18
   140004041:	mov    rdi,rcx
   140004044:	mov    QWORD PTR [rbp+0x48],rbx
   140004048:	jne    0x140004061
   14000404a:	lea    rcx,[rip+0x2fdf]        # 0x140007030
   140004051:	call   QWORD PTR [rip+0x2319]        # 0x140006370
   140004057:	mov    esi,0xc000000d
   14000405c:	jmp    0x140004216
   140004061:	mov    rcx,QWORD PTR [rcx]
   140004064:	lea    r9,[rbp+0x40]
   140004068:	lea    r8,[rip+0x2fe9]        # 0x140007058
   14000406f:	xor    edx,edx
   140004071:	call   0x140003dc0
   140004076:	test   eax,eax
   140004078:	je     0x1400041bd
   14000407e:	mov    rcx,QWORD PTR [rdi+0x8]
   140004082:	lea    r9,[rbp+0x48]
   140004086:	lea    r8,[rip+0x2fe3]        # 0x140007070
   14000408d:	mov    edx,0x2
   140004092:	call   0x140003dc0
   140004097:	test   eax,eax
   140004099:	je     0x1400041b9
   14000409f:	mov    rcx,QWORD PTR [rip+0x5b72]        # 0x140009c18
   1400040a6:	call   QWORD PTR [rip+0x202c]        # 0x1400060d8
   1400040ac:	mov    rcx,QWORD PTR [rip+0x5b6d]        # 0x140009c20
   1400040b3:	lea    edi,[rax+0x1]
   1400040b6:	call   QWORD PTR [rip+0x201c]        # 0x1400060d8
   1400040bc:	mov    rcx,QWORD PTR [rbp+0x40]
   1400040c0:	inc    eax
   1400040c2:	add    edi,eax
   1400040c4:	call   QWORD PTR [rip+0x200e]        # 0x1400060d8
   1400040ca:	mov    rbx,QWORD PTR [rbp+0x48]
   1400040ce:	inc    eax
   1400040d0:	mov    rcx,rbx
   1400040d3:	add    edi,eax
   1400040d5:	call   QWORD PTR [rip+0x1ffd]        # 0x1400060d8
   1400040db:	add    eax,edi
   1400040dd:	lea    edi,[rax*2+0x52]
   1400040e4:	mov    ecx,edi
   1400040e6:	mov    r12d,edi
   1400040e9:	call   QWORD PTR [rip+0x2261]        # 0x140006350
   1400040ef:	mov    r15,rax
   1400040f2:	test   rax,rax
   1400040f5:	je     0x1400041a3
   1400040fb:	add    rax,0x50
   1400040ff:	mov    DWORD PTR [r15],0x7
   140004106:	mov    rcx,QWORD PTR [rip+0x5b0b]        # 0x140009c18
   14000410d:	lea    r8,[r15+0x8]
   140004111:	lea    rdx,[rbp+0x48]
   140004115:	mov    QWORD PTR [rbp+0x48],rax
   140004119:	call   0x140003fb0
   14000411e:	mov    rcx,QWORD PTR [rip+0x5afb]        # 0x140009c20
   140004125:	lea    r8,[r15+0x18]
   140004129:	lea    rdx,[rbp+0x48]
   14000412d:	call   0x140003fb0
   140004132:	mov    rcx,QWORD PTR [rbp+0x40]
   140004136:	lea    r8,[r15+0x28]
   14000413a:	lea    rdx,[rbp+0x48]
   14000413e:	call   0x140003fb0
   140004143:	lea    r8,[r15+0x38]
   140004147:	mov    rcx,rbx
   14000414a:	lea    rdx,[rbp+0x48]
   14000414e:	call   0x140003fb0
   140004153:	lea    r9,[rbp+0x38]
   140004157:	mov    BYTE PTR [r15+0x48],0x0
   14000415c:	lea    r8,[rbp-0x10]
   140004160:	mov    edx,edi
   140004162:	mov    rcx,r15
   140004165:	call   0x140003ebc
   14000416a:	mov    esi,eax
   14000416c:	test   eax,eax
   14000416e:	js     0x14000417f
   140004170:	lea    rcx,[rip+0x2f49]        # 0x1400070c0
   140004177:	call   QWORD PTR [rip+0x21f3]        # 0x140006370
   14000417d:	jmp    0x14000418e
   14000417f:	mov    edx,eax
   140004181:	lea    rcx,[rip+0x2f50]        # 0x1400070d8
   140004188:	call   QWORD PTR [rip+0x21e2]        # 0x140006370
   14000418e:	xor    eax,eax
   140004190:	mov    rdi,r15
   140004193:	mov    rcx,r12
   140004196:	rep stos BYTE PTR es:[rdi],al
   140004198:	mov    rcx,r15
   14000419b:	call   QWORD PTR [rip+0x2187]        # 0x140006328
   1400041a1:	jmp    0x1400041cf
   1400041a3:	mov    edx,edi
   1400041a5:	lea    rcx,[rip+0x2f54]        # 0x140007100
   1400041ac:	call   QWORD PTR [rip+0x21be]        # 0x140006370
   1400041b2:	mov    esi,0xc0000017
   1400041b7:	jmp    0x1400041cf
   1400041b9:	mov    rbx,QWORD PTR [rbp+0x48]
   1400041bd:	lea    rcx,[rip+0x2ec4]        # 0x140007088
   1400041c4:	call   QWORD PTR [rip+0x21a6]        # 0x140006370
   1400041ca:	mov    esi,0xc00000e5
   1400041cf:	test   rbx,rbx
   1400041d2:	je     0x1400041f0
   1400041d4:	mov    rcx,rbx
   1400041d7:	call   QWORD PTR [rip+0x1efb]        # 0x1400060d8
   1400041dd:	movsxd rcx,eax
   1400041e0:	mov    rdi,rbx
   1400041e3:	xor    eax,eax
   1400041e5:	rep stos BYTE PTR es:[rdi],al
   1400041e7:	mov    rcx,rbx
   1400041ea:	call   QWORD PTR [rip+0x2138]        # 0x140006328
   1400041f0:	cmp    QWORD PTR [rbp+0x40],0x0
   1400041f5:	je     0x140004216
   1400041f7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400041fb:	call   QWORD PTR [rip+0x1ed7]        # 0x1400060d8
   140004201:	mov    rdi,QWORD PTR [rbp+0x40]
   140004205:	movsxd rcx,eax
   140004208:	xor    eax,eax
   14000420a:	rep stos BYTE PTR es:[rdi],al
   14000420c:	mov    rcx,QWORD PTR [rbp+0x40]
   140004210:	call   QWORD PTR [rip+0x2112]        # 0x140006328
   140004216:	mov    eax,esi
   140004218:	mov    rbx,QWORD PTR [rsp+0x60]
   14000421d:	add    rsp,0x30
   140004221:	pop    r15
   140004223:	pop    r12
   140004225:	pop    rdi
   140004226:	pop    rsi
   140004227:	pop    rbp
   140004228:	ret    
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	mov    QWORD PTR [rsp+0x8],rbx
   140004235:	push   rdi
   140004236:	sub    rsp,0x50
   14000423a:	and    QWORD PTR [rsp+0x70],0x0
   140004240:	lea    r8,[rsp+0x70]
   140004245:	mov    rdi,rcx
   140004248:	mov    rdx,0xffffffff80000002
   14000424f:	mov    rcx,QWORD PTR [rip+0x59e2]        # 0x140009c38
   140004256:	call   QWORD PTR [rip+0x1e2c]        # 0x140006088
   14000425c:	mov    ebx,eax
   14000425e:	test   eax,eax
   140004260:	je     0x14000426b
   140004262:	lea    rcx,[rip+0x2ecf]        # 0x140007138
   140004269:	jmp    0x1400042b2
   14000426b:	mov    rcx,QWORD PTR [rsp+0x70]
   140004270:	lea    rax,[rsp+0x68]
   140004275:	mov    QWORD PTR [rsp+0x40],rax
   14000427a:	lea    rdx,[rip+0x2eef]        # 0x140007170
   140004281:	mov    QWORD PTR [rsp+0x38],rdi
   140004286:	xor    r9d,r9d
   140004289:	and    QWORD PTR [rsp+0x30],0x0
   14000428f:	xor    r8d,r8d
   140004292:	mov    DWORD PTR [rsp+0x28],0x4
   14000429a:	and    DWORD PTR [rsp+0x20],0x0
   14000429f:	call   QWORD PTR [rip+0x1d93]        # 0x140006038
   1400042a5:	mov    ebx,eax
   1400042a7:	test   eax,eax
   1400042a9:	je     0x1400042bd
   1400042ab:	lea    rcx,[rip+0x2f1e]        # 0x1400071d0
   1400042b2:	mov    r8d,eax
   1400042b5:	mov    edx,eax
   1400042b7:	call   QWORD PTR [rip+0x20b3]        # 0x140006370
   1400042bd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400042c2:	test   rcx,rcx
   1400042c5:	je     0x1400042cd
   1400042c7:	call   QWORD PTR [rip+0x1d53]        # 0x140006020
   1400042cd:	mov    eax,ebx
   1400042cf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400042d4:	add    rsp,0x50
   1400042d8:	pop    rdi
   1400042d9:	ret    
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042e5:	push   rbp
   1400042e6:	push   rsi
   1400042e7:	push   rdi
   1400042e8:	mov    rbp,rsp
   1400042eb:	sub    rsp,0x60
   1400042ef:	and    QWORD PTR [rbp-0x10],0x0
   1400042f4:	mov    rdi,rcx
   1400042f7:	and    QWORD PTR [rbp-0x8],0x0
   1400042fc:	lea    rcx,[rbp-0x10]
   140004300:	and    QWORD PTR [rbp+0x38],0x0
   140004305:	mov    rsi,rdx
   140004308:	call   0x140004230
   14000430d:	mov    ebx,eax
   14000430f:	test   eax,eax
   140004311:	jne    0x1400043ef
   140004317:	mov    rcx,QWORD PTR [rbp-0x10]
   14000431b:	lea    rax,[rbp+0x30]
   14000431f:	mov    QWORD PTR [rsp+0x40],rax
   140004324:	lea    rdx,[rip+0x2ed5]        # 0x140007200
   14000432b:	lea    rax,[rbp+0x38]
   14000432f:	xor    r9d,r9d
   140004332:	mov    QWORD PTR [rsp+0x38],rax
   140004337:	xor    r8d,r8d
   14000433a:	and    QWORD PTR [rsp+0x30],0x0
   140004340:	mov    DWORD PTR [rsp+0x28],0x4
   140004348:	and    DWORD PTR [rsp+0x20],ebx
   14000434c:	call   QWORD PTR [rip+0x1ce6]        # 0x140006038
   140004352:	mov    ebx,eax
   140004354:	test   eax,eax
   140004356:	jne    0x1400043d0
   140004358:	test   rdi,rdi
   14000435b:	je     0x1400043c7
   14000435d:	mov    rdx,QWORD PTR [rdi]
   140004360:	test   rdx,rdx
   140004363:	je     0x1400043c7
   140004365:	mov    rcx,QWORD PTR [rbp+0x38]
   140004369:	lea    rax,[rbp+0x30]
   14000436d:	mov    QWORD PTR [rsp+0x40],rax
   140004372:	xor    r9d,r9d
   140004375:	lea    rax,[rbp-0x8]
   140004379:	xor    r8d,r8d
   14000437c:	mov    QWORD PTR [rsp+0x38],rax
   140004381:	and    QWORD PTR [rsp+0x30],0x0
   140004387:	mov    DWORD PTR [rsp+0x28],0x7
   14000438f:	and    DWORD PTR [rsp+0x20],ebx
   140004393:	call   QWORD PTR [rip+0x1c9f]        # 0x140006038
   140004399:	mov    ebx,eax
   14000439b:	test   eax,eax
   14000439d:	jne    0x1400043a8
   14000439f:	mov    rax,QWORD PTR [rbp-0x8]
   1400043a3:	mov    QWORD PTR [rsi],rax
   1400043a6:	jmp    0x1400043bb
   1400043a8:	mov    rdx,QWORD PTR [rdi]
   1400043ab:	lea    rcx,[rip+0x2e5e]        # 0x140007210
   1400043b2:	mov    r8d,eax
   1400043b5:	call   QWORD PTR [rip+0x1fb5]        # 0x140006370
   1400043bb:	mov    rcx,QWORD PTR [rbp+0x38]
   1400043bf:	call   QWORD PTR [rip+0x1c5b]        # 0x140006020
   1400043c5:	jmp    0x1400043e3
   1400043c7:	mov    rax,QWORD PTR [rbp+0x38]
   1400043cb:	mov    QWORD PTR [rsi],rax
   1400043ce:	jmp    0x1400043e3
   1400043d0:	mov    rdx,QWORD PTR [rdi]
   1400043d3:	lea    rcx,[rip+0x2e56]        # 0x140007230
   1400043da:	mov    r8d,eax
   1400043dd:	call   QWORD PTR [rip+0x1f8d]        # 0x140006370
   1400043e3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400043e7:	call   QWORD PTR [rip+0x1c33]        # 0x140006020
   1400043ed:	jmp    0x1400043fe
   1400043ef:	mov    edx,eax
   1400043f1:	lea    rcx,[rip+0x2e58]        # 0x140007250
   1400043f8:	call   QWORD PTR [rip+0x1f72]        # 0x140006370
   1400043fe:	mov    eax,ebx
   140004400:	mov    rbx,QWORD PTR [rsp+0x80]
   140004408:	add    rsp,0x60
   14000440c:	pop    rdi
   14000440d:	pop    rsi
   14000440e:	pop    rbp
   14000440f:	ret    
   140004410:	int3   
   140004411:	int3   
   140004412:	int3   
   140004413:	int3   
   140004414:	int3   
   140004415:	int3   
   140004416:	int3   
   140004417:	int3   
   140004418:	mov    r11,rsp
   14000441b:	mov    QWORD PTR [r11+0x10],rbx
   14000441f:	mov    QWORD PTR [r11+0x18],rsi
   140004423:	push   rdi
   140004424:	sub    rsp,0xa80
   14000442b:	mov    rax,QWORD PTR [rip+0x4bd6]        # 0x140009008
   140004432:	xor    rax,rsp
   140004435:	mov    QWORD PTR [rsp+0xa70],rax
   14000443d:	xor    esi,esi
   14000443f:	mov    edi,ecx
   140004441:	lea    rcx,[rsp+0x40]
   140004446:	mov    WORD PTR [rip+0x6279],si        # 0x14000a6c6
   14000444d:	mov    edx,0xf9
   140004452:	mov    WORD PTR [r11-0x1a],si
   140004457:	mov    WORD PTR [rsp+0x246],si
   14000445f:	call   QWORD PTR [rip+0x1c83]        # 0x1400060e8
   140004465:	test   eax,eax
   140004467:	jne    0x140004491
   140004469:	call   QWORD PTR [rip+0x1c41]        # 0x1400060b0
   14000446f:	lea    ecx,[rsi+0x2]
   140004472:	mov    ebx,eax
   140004474:	call   0x140005d18
   140004479:	mov    rcx,rax
   14000447c:	lea    rdx,[rip+0x2df5]        # 0x140007278
   140004483:	mov    r8d,ebx
   140004486:	call   QWORD PTR [rip+0x1ea4]        # 0x140006330
   14000448c:	jmp    0x14000456c
   140004491:	mov    ebx,0x104
   140004496:	lea    r8,[rip+0x2093]        # 0x140006530
   14000449d:	mov    edx,ebx
   14000449f:	lea    rcx,[rsp+0x40]
   1400044a4:	mov    r9d,0x2
   1400044aa:	call   QWORD PTR [rip+0x1e28]        # 0x1400062d8
   1400044b0:	mov    r9d,0xa
   1400044b6:	lea    r8,[rip+0x2ddb]        # 0x140007298
   1400044bd:	mov    edx,ebx
   1400044bf:	lea    rcx,[rsp+0x40]
   1400044c4:	call   QWORD PTR [rip+0x1e0e]        # 0x1400062d8
   1400044ca:	mov    eax,edi
   1400044cc:	and    eax,0x1fff0000
   1400044d1:	cmp    eax,0x70000
   1400044d6:	jne    0x1400044db
   1400044d8:	movzx  edi,di
   1400044db:	cmp    QWORD PTR [rip+0x597e],rsi        # 0x140009e60
   1400044e2:	jne    0x1400044fb
   1400044e4:	lea    rcx,[rsp+0x40]
   1400044e9:	call   QWORD PTR [rip+0x1c01]        # 0x1400060f0
   1400044ef:	mov    QWORD PTR [rip+0x596a],rax        # 0x140009e60
   1400044f6:	test   rax,rax
   1400044f9:	je     0x14000456c
   1400044fb:	mov    QWORD PTR [rsp+0x30],rsi
   140004500:	lea    rax,[rsp+0x250]
   140004508:	mov    ebx,0x40f
   14000450d:	xor    r9d,r9d
   140004510:	mov    DWORD PTR [rsp+0x28],ebx
   140004514:	mov    r8d,edi
   140004517:	xor    edx,edx
   140004519:	mov    QWORD PTR [rsp+0x20],rax
   14000451e:	mov    ecx,0x1200
   140004523:	call   QWORD PTR [rip+0x1bd7]        # 0x140006100
   140004529:	test   eax,eax
   14000452b:	jne    0x140004593
   14000452d:	call   QWORD PTR [rip+0x1b7d]        # 0x1400060b0
   140004533:	cmp    eax,0x13d
   140004538:	jne    0x14000456c
   14000453a:	mov    rdx,QWORD PTR [rip+0x591f]        # 0x140009e60
   140004541:	lea    rax,[rsp+0x250]
   140004549:	mov    QWORD PTR [rsp+0x30],rsi
   14000454e:	xor    r9d,r9d
   140004551:	mov    DWORD PTR [rsp+0x28],ebx
   140004555:	mov    r8d,edi
   140004558:	mov    ecx,0xa00
   14000455d:	mov    QWORD PTR [rsp+0x20],rax
   140004562:	call   QWORD PTR [rip+0x1b98]        # 0x140006100
   140004568:	test   eax,eax
   14000456a:	jne    0x140004593
   14000456c:	mov    edx,0x424
   140004571:	mov    DWORD PTR [rsp+0x28],edi
   140004575:	lea    r9,[rip+0x2d54]        # 0x1400072d0
   14000457c:	mov    DWORD PTR [rsp+0x20],edi
   140004580:	lea    rcx,[rip+0x58f9]        # 0x140009e80
   140004587:	lea    r8d,[rdx-0x1]
   14000458b:	call   QWORD PTR [rip+0x1d3f]        # 0x1400062d0
   140004591:	jmp    0x1400045c5
   140004593:	mov    edx,0x424
   140004598:	lea    rax,[rsp+0x250]
   1400045a0:	mov    QWORD PTR [rsp+0x30],rax
   1400045a5:	lea    r9,[rip+0x2d04]        # 0x1400072b0
   1400045ac:	mov    DWORD PTR [rsp+0x28],edi
   1400045b0:	lea    rcx,[rip+0x58c9]        # 0x140009e80
   1400045b7:	mov    DWORD PTR [rsp+0x20],edi
   1400045bb:	lea    r8d,[rdx-0x1]
   1400045bf:	call   QWORD PTR [rip+0x1d0b]        # 0x1400062d0
   1400045c5:	lea    rax,[rip+0x58b4]        # 0x140009e80
   1400045cc:	mov    rcx,QWORD PTR [rsp+0xa70]
   1400045d4:	xor    rcx,rsp
   1400045d7:	call   0x140005710
   1400045dc:	lea    r11,[rsp+0xa80]
   1400045e4:	mov    rbx,QWORD PTR [r11+0x18]
   1400045e8:	mov    rsi,QWORD PTR [r11+0x20]
   1400045ec:	mov    rsp,r11
   1400045ef:	pop    rdi
   1400045f0:	ret    
   1400045f1:	int3   
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	int3   
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	mov    rax,rsp
   1400045fb:	mov    QWORD PTR [rax+0x8],rbx
   1400045ff:	mov    QWORD PTR [rax+0x10],rsi
   140004603:	push   rdi
   140004604:	sub    rsp,0x60
   140004608:	and    QWORD PTR [rax-0x30],0x0
   14000460d:	lea    r9,[rip+0x561c]        # 0x140009c30
   140004614:	and    DWORD PTR [rax-0x20],0x0
   140004618:	mov    rdi,rdx
   14000461b:	and    QWORD PTR [rax-0x28],0x0
   140004620:	lea    rdx,[rax-0x38]
   140004624:	mov    rsi,rcx
   140004627:	mov    DWORD PTR [rax-0x38],0x30
   14000462e:	xorps  xmm0,xmm0
   140004631:	xor    ecx,ecx
   140004633:	mov    r8d,0x1
   140004639:	movdqu XMMWORD PTR [rax-0x18],xmm0
   14000463e:	call   QWORD PTR [rip+0x1a2c]        # 0x140006070
   140004644:	mov    ebx,eax
   140004646:	test   eax,eax
   140004648:	jns    0x140004663
   14000464a:	mov    ecx,eax
   14000464c:	call   0x140004418
   140004651:	mov    rdx,rax
   140004654:	lea    rcx,[rip+0x2c85]        # 0x1400072e0
   14000465b:	call   QWORD PTR [rip+0x1d0f]        # 0x140006370
   140004661:	jmp    0x1400046bd
   140004663:	mov    rdx,rsi
   140004666:	lea    rcx,[rsp+0x20]
   14000466b:	call   QWORD PTR [rip+0x1db7]        # 0x140006428
   140004671:	mov    rcx,QWORD PTR [rip+0x55b8]        # 0x140009c30
   140004678:	lea    rdx,[rsp+0x20]
   14000467d:	mov    r9,rdi
   140004680:	mov    r8d,0x6
   140004686:	call   QWORD PTR [rip+0x19f4]        # 0x140006080
   14000468c:	mov    ecx,0x80000000
   140004691:	mov    ebx,eax
   140004693:	add    eax,ecx
   140004695:	test   ecx,eax
   140004697:	jne    0x1400046bd
   140004699:	cmp    ebx,0xc0000034
   14000469f:	je     0x1400046bd
   1400046a1:	mov    ecx,ebx
   1400046a3:	call   0x140004418
   1400046a8:	mov    r8,rax
   1400046ab:	lea    rdx,[rsp+0x20]
   1400046b0:	lea    rcx,[rip+0x2c51]        # 0x140007308
   1400046b7:	call   QWORD PTR [rip+0x1cb3]        # 0x140006370
   1400046bd:	mov    rcx,QWORD PTR [rip+0x556c]        # 0x140009c30
   1400046c4:	test   rcx,rcx
   1400046c7:	je     0x1400046d7
   1400046c9:	call   QWORD PTR [rip+0x1979]        # 0x140006048
   1400046cf:	and    QWORD PTR [rip+0x5559],0x0        # 0x140009c30
   1400046d7:	mov    rsi,QWORD PTR [rsp+0x78]
   1400046dc:	mov    eax,ebx
   1400046de:	mov    rbx,QWORD PTR [rsp+0x70]
   1400046e3:	add    rsp,0x60
   1400046e7:	pop    rdi
   1400046e8:	ret    
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    rax,rsp
   1400046f3:	mov    QWORD PTR [rax+0x8],rbx
   1400046f7:	mov    QWORD PTR [rax+0x10],rbp
   1400046fb:	mov    QWORD PTR [rax+0x18],rsi
   1400046ff:	mov    QWORD PTR [rax+0x20],rdi
   140004703:	push   r12
   140004705:	push   r14
   140004707:	push   r15
   140004709:	sub    rsp,0x20
   14000470d:	xor    ebx,ebx
   14000470f:	lea    rsi,[rcx+0x8]
   140004713:	mov    rdi,rdx
   140004716:	mov    r12,rcx
   140004719:	mov    DWORD PTR [rdx],ebx
   14000471b:	cmp    QWORD PTR [rsi],rbx
   14000471e:	je     0x140004771
   140004720:	lea    ebp,[rbx+0x1]
   140004723:	mov    r15d,ebx
   140004726:	lea    r14,[rip+0x4ecb]        # 0x1400095f8
   14000472d:	mov    rdx,QWORD PTR [r14-0x8]
   140004731:	or     r8,0xffffffffffffffff
   140004735:	inc    r8
   140004738:	cmp    WORD PTR [rdx+r8*2],bx
   14000473d:	jne    0x140004735
   14000473f:	mov    rcx,QWORD PTR [rsi]
   140004742:	call   QWORD PTR [rip+0x1bb0]        # 0x1400062f8
   140004748:	test   eax,eax
   14000474a:	jne    0x140004751
   14000474c:	mov    eax,DWORD PTR [r14]
   14000474f:	or     DWORD PTR [rdi],eax
   140004751:	inc    r15d
   140004754:	add    r14,0x10
   140004758:	movsxd rax,r15d
   14000475b:	cmp    rax,0x5
   14000475f:	jb     0x14000472d
   140004761:	inc    rbp
   140004764:	lea    rsi,[r12+rbp*8]
   140004768:	cmp    QWORD PTR [rsi],rbx
   14000476b:	jne    0x140004723
   14000476d:	cmp    DWORD PTR [rdi],ebx
   14000476f:	jne    0x140004776
   140004771:	mov    ebx,0xc000000d
   140004776:	mov    rbp,QWORD PTR [rsp+0x48]
   14000477b:	mov    eax,ebx
   14000477d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004782:	mov    rsi,QWORD PTR [rsp+0x50]
   140004787:	mov    rdi,QWORD PTR [rsp+0x58]
   14000478c:	add    rsp,0x20
   140004790:	pop    r15
   140004792:	pop    r14
   140004794:	pop    r12
   140004796:	ret    
   140004797:	int3   
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400047a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400047aa:	push   rbp
   1400047ab:	push   rdi
   1400047ac:	push   r14
   1400047ae:	lea    rbp,[rsp-0x47]
   1400047b3:	sub    rsp,0xb0
   1400047ba:	xor    r14d,r14d
   1400047bd:	xor    eax,eax
   1400047bf:	mov    rbx,rcx
   1400047c2:	mov    WORD PTR [rbp-0x49],r14w
   1400047c7:	xor    edx,edx
   1400047c9:	mov    QWORD PTR [rbp-0x47],rax
   1400047cd:	lea    rcx,[rbp-0x37]
   1400047d1:	mov    DWORD PTR [rbp-0x3f],eax
   1400047d4:	lea    r8d,[r14+0x76]
   1400047d8:	mov    WORD PTR [rbp-0x3b],ax
   1400047dc:	mov    DWORD PTR [rbp+0x67],r14d
   1400047e0:	mov    WORD PTR [rbp-0x39],r14w
   1400047e5:	call   0x140005de2
   1400047ea:	mov    rdx,QWORD PTR [rbx]
   1400047ed:	test   rdx,rdx
   1400047f0:	je     0x1400048a3
   1400047f6:	cmp    QWORD PTR [rbx+0x8],r14
   1400047fa:	je     0x1400048a3
   140004800:	lea    rcx,[rbp-0x49]
   140004804:	call   QWORD PTR [rip+0x1c1e]        # 0x140006428
   14000480a:	lea    rdx,[rbp+0x67]
   14000480e:	mov    rcx,rbx
   140004811:	call   0x1400046f0
   140004816:	mov    ebx,eax
   140004818:	test   eax,eax
   14000481a:	js     0x1400048b2
   140004820:	mov    esi,DWORD PTR [rbp+0x67]
   140004823:	lea    rdx,[rbp-0x49]
   140004827:	mov    ecx,0x2745
   14000482c:	mov    DWORD PTR [rbp-0x39],esi
   14000482f:	call   0x140003af4
   140004834:	mov    edi,r14d
   140004837:	lea    rbx,[rip+0x4db2]        # 0x1400095f0
   14000483e:	test   DWORD PTR [rbx+0x8],esi
   140004841:	je     0x140004853
   140004843:	mov    rdx,QWORD PTR [rbx]
   140004846:	lea    rcx,[rip+0x2ba3]        # 0x1400073f0
   14000484d:	call   QWORD PTR [rip+0x1b1d]        # 0x140006370
   140004853:	inc    edi
   140004855:	add    rbx,0x10
   140004859:	movsxd rax,edi
   14000485c:	cmp    rax,0x5
   140004860:	jb     0x14000483e
   140004862:	lea    rcx,[rip+0x1de7]        # 0x140006650
   140004869:	call   QWORD PTR [rip+0x1b01]        # 0x140006370
   14000486f:	mov    rcx,QWORD PTR [rip+0x53ba]        # 0x140009c30
   140004876:	lea    r9,[rbp-0x39]
   14000487a:	mov    r8d,0xd
   140004880:	lea    rdx,[rbp-0x49]
   140004884:	call   QWORD PTR [rip+0x17de]        # 0x140006068
   14000488a:	mov    ebx,eax
   14000488c:	test   eax,eax
   14000488e:	jns    0x1400048b2
   140004890:	mov    r8d,eax
   140004893:	lea    rdx,[rbp-0x49]
   140004897:	mov    ecx,0x2746
   14000489c:	call   0x140003af4
   1400048a1:	jmp    0x1400048b2
   1400048a3:	mov    ecx,0x2710
   1400048a8:	call   0x140003af4
   1400048ad:	mov    ebx,0xc000000d
   1400048b2:	lea    r11,[rsp+0xb0]
   1400048ba:	mov    eax,ebx
   1400048bc:	mov    rbx,QWORD PTR [r11+0x28]
   1400048c0:	mov    rsi,QWORD PTR [r11+0x30]
   1400048c4:	mov    rsp,r11
   1400048c7:	pop    r14
   1400048c9:	pop    rdi
   1400048ca:	pop    rbp
   1400048cb:	ret    
   1400048cc:	int3   
   1400048cd:	int3   
   1400048ce:	int3   
   1400048cf:	int3   
   1400048d0:	int3   
   1400048d1:	int3   
   1400048d2:	int3   
   1400048d3:	int3   
   1400048d4:	int3   
   1400048d5:	int3   
   1400048d6:	int3   
   1400048d7:	int3   
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400048e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400048ea:	push   rbp
   1400048eb:	push   rdi
   1400048ec:	push   r14
   1400048ee:	mov    rbp,rsp
   1400048f1:	sub    rsp,0x30
   1400048f5:	mov    rdx,QWORD PTR [rcx]
   1400048f8:	xor    eax,eax
   1400048fa:	xor    r14d,r14d
   1400048fd:	mov    QWORD PTR [rbp-0xe],rax
   140004901:	mov    WORD PTR [rbp-0x10],r14w
   140004906:	mov    DWORD PTR [rbp-0x6],eax
   140004909:	mov    WORD PTR [rbp-0x2],ax
   14000490d:	mov    QWORD PTR [rbp+0x20],r14
   140004911:	test   rdx,rdx
   140004914:	jne    0x14000492a
   140004916:	mov    ecx,0x2710
   14000491b:	call   0x140003af4
   140004920:	mov    edi,0xc000000d
   140004925:	jmp    0x1400049b3
   14000492a:	lea    rcx,[rbp-0x10]
   14000492e:	call   QWORD PTR [rip+0x1af4]        # 0x140006428
   140004934:	mov    rcx,QWORD PTR [rip+0x52f5]        # 0x140009c30
   14000493b:	lea    r9,[rbp+0x20]
   14000493f:	mov    r8d,0xd
   140004945:	lea    rdx,[rbp-0x10]
   140004949:	call   QWORD PTR [rip+0x1731]        # 0x140006080
   14000494f:	lea    rdx,[rbp-0x10]
   140004953:	mov    edi,eax
   140004955:	test   eax,eax
   140004957:	jns    0x140004968
   140004959:	mov    r8d,eax
   14000495c:	mov    ecx,0x2748
   140004961:	call   0x140003af4
   140004966:	jmp    0x1400049b3
   140004968:	mov    ecx,0x2749
   14000496d:	call   0x140003af4
   140004972:	mov    esi,r14d
   140004975:	lea    rbx,[rip+0x4c74]        # 0x1400095f0
   14000497c:	mov    rax,QWORD PTR [rbp+0x20]
   140004980:	mov    ecx,DWORD PTR [rbx+0x8]
   140004983:	test   DWORD PTR [rax],ecx
   140004985:	je     0x140004997
   140004987:	mov    rdx,QWORD PTR [rbx]
   14000498a:	lea    rcx,[rip+0x2a5f]        # 0x1400073f0
   140004991:	call   QWORD PTR [rip+0x19d9]        # 0x140006370
   140004997:	inc    esi
   140004999:	add    rbx,0x10
   14000499d:	movsxd rax,esi
   1400049a0:	cmp    rax,0x5
   1400049a4:	jb     0x14000497c
   1400049a6:	lea    rcx,[rip+0x1ca3]        # 0x140006650
   1400049ad:	call   QWORD PTR [rip+0x19bd]        # 0x140006370
   1400049b3:	mov    rcx,QWORD PTR [rbp+0x20]
   1400049b7:	test   rcx,rcx
   1400049ba:	je     0x1400049c2
   1400049bc:	call   QWORD PTR [rip+0x1666]        # 0x140006028
   1400049c2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400049c7:	mov    eax,edi
   1400049c9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400049ce:	add    rsp,0x30
   1400049d2:	pop    r14
   1400049d4:	pop    rdi
   1400049d5:	pop    rbp
   1400049d6:	ret    
   1400049d7:	int3   
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400049e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400049ea:	push   rbp
   1400049eb:	push   rdi
   1400049ec:	push   r14
   1400049ee:	mov    rbp,rsp
   1400049f1:	sub    rsp,0x30
   1400049f5:	mov    rdx,QWORD PTR [rcx]
   1400049f8:	xor    r14d,r14d
   1400049fb:	xor    eax,eax
   1400049fd:	mov    WORD PTR [rbp-0x10],r14w
   140004a02:	mov    QWORD PTR [rbp-0xe],rax
   140004a06:	mov    rbx,rcx
   140004a09:	mov    DWORD PTR [rbp-0x6],eax
   140004a0c:	mov    WORD PTR [rbp-0x2],ax
   140004a10:	mov    DWORD PTR [rbp+0x20],r14d
   140004a14:	mov    QWORD PTR [rbp+0x28],r14
   140004a18:	test   rdx,rdx
   140004a1b:	je     0x140004b4b
   140004a21:	cmp    QWORD PTR [rcx+0x8],r14
   140004a25:	je     0x140004b4b
   140004a2b:	lea    rcx,[rbp-0x10]
   140004a2f:	call   QWORD PTR [rip+0x19f3]        # 0x140006428
   140004a35:	lea    rdx,[rbp+0x20]
   140004a39:	mov    rcx,rbx
   140004a3c:	call   0x1400046f0
   140004a41:	mov    ebx,eax
   140004a43:	test   eax,eax
   140004a45:	js     0x140004b5a
   140004a4b:	mov    rcx,QWORD PTR [rip+0x51de]        # 0x140009c30
   140004a52:	lea    r9,[rbp+0x28]
   140004a56:	lea    r8d,[r14+0xd]
   140004a5a:	lea    rdx,[rbp-0x10]
   140004a5e:	call   QWORD PTR [rip+0x161c]        # 0x140006080
   140004a64:	lea    rdx,[rbp-0x10]
   140004a68:	mov    ebx,eax
   140004a6a:	test   eax,eax
   140004a6c:	jns    0x140004a78
   140004a6e:	mov    ecx,0x2748
   140004a73:	jmp    0x140004b41
   140004a78:	mov    ecx,0x2749
   140004a7d:	call   0x140003af4
   140004a82:	lea    rbx,[rip+0x4b67]        # 0x1400095f0
   140004a89:	mov    esi,r14d
   140004a8c:	mov    rdi,rbx
   140004a8f:	mov    rax,QWORD PTR [rbp+0x28]
   140004a93:	mov    ecx,DWORD PTR [rdi+0x8]
   140004a96:	test   DWORD PTR [rax],ecx
   140004a98:	je     0x140004aaa
   140004a9a:	mov    rdx,QWORD PTR [rdi]
   140004a9d:	lea    rcx,[rip+0x294c]        # 0x1400073f0
   140004aa4:	call   QWORD PTR [rip+0x18c6]        # 0x140006370
   140004aaa:	inc    esi
   140004aac:	add    rdi,0x10
   140004ab0:	movsxd rax,esi
   140004ab3:	cmp    rax,0x5
   140004ab7:	jb     0x140004a8f
   140004ab9:	lea    rcx,[rip+0x1b90]        # 0x140006650
   140004ac0:	call   QWORD PTR [rip+0x18aa]        # 0x140006370
   140004ac6:	mov    rcx,QWORD PTR [rbp+0x28]
   140004aca:	lea    rdx,[rbp-0x10]
   140004ace:	mov    eax,DWORD PTR [rbp+0x20]
   140004ad1:	or     DWORD PTR [rcx],eax
   140004ad3:	mov    ecx,0x2745
   140004ad8:	call   0x140003af4
   140004add:	mov    edi,r14d
   140004ae0:	mov    rax,QWORD PTR [rbp+0x28]
   140004ae4:	mov    ecx,DWORD PTR [rbx+0x8]
   140004ae7:	test   DWORD PTR [rax],ecx
   140004ae9:	je     0x140004afb
   140004aeb:	mov    rdx,QWORD PTR [rbx]
   140004aee:	lea    rcx,[rip+0x28fb]        # 0x1400073f0
   140004af5:	call   QWORD PTR [rip+0x1875]        # 0x140006370
   140004afb:	inc    edi
   140004afd:	add    rbx,0x10
   140004b01:	movsxd rax,edi
   140004b04:	cmp    rax,0x5
   140004b08:	jb     0x140004ae0
   140004b0a:	lea    rcx,[rip+0x1b3f]        # 0x140006650
   140004b11:	call   QWORD PTR [rip+0x1859]        # 0x140006370
   140004b17:	mov    r9,QWORD PTR [rbp+0x28]
   140004b1b:	lea    rdx,[rbp-0x10]
   140004b1f:	mov    rcx,QWORD PTR [rip+0x510a]        # 0x140009c30
   140004b26:	mov    r8d,0xd
   140004b2c:	call   QWORD PTR [rip+0x1536]        # 0x140006068
   140004b32:	mov    ebx,eax
   140004b34:	test   eax,eax
   140004b36:	jns    0x140004b5a
   140004b38:	lea    rdx,[rbp-0x10]
   140004b3c:	mov    ecx,0x2747
   140004b41:	mov    r8d,eax
   140004b44:	call   0x140003af4
   140004b49:	jmp    0x140004b5a
   140004b4b:	mov    ecx,0x2710
   140004b50:	call   0x140003af4
   140004b55:	mov    ebx,0xc000000d
   140004b5a:	mov    rcx,QWORD PTR [rbp+0x28]
   140004b5e:	test   rcx,rcx
   140004b61:	je     0x140004b69
   140004b63:	call   QWORD PTR [rip+0x14bf]        # 0x140006028
   140004b69:	mov    rsi,QWORD PTR [rsp+0x68]
   140004b6e:	mov    eax,ebx
   140004b70:	mov    rbx,QWORD PTR [rsp+0x60]
   140004b75:	add    rsp,0x30
   140004b79:	pop    r14
   140004b7b:	pop    rdi
   140004b7c:	pop    rbp
   140004b7d:	ret    
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	int3   
   140004b81:	int3   
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	mov    QWORD PTR [rsp+0x8],rbx
   140004b95:	mov    QWORD PTR [rsp+0x10],rdi
   140004b9a:	push   rbp
   140004b9b:	lea    rbp,[rsp-0x57]
   140004ba0:	sub    rsp,0xb0
   140004ba7:	xor    eax,eax
   140004ba9:	xor    edi,edi
   140004bab:	mov    rbx,rcx
   140004bae:	mov    WORD PTR [rbp-0x39],di
   140004bb2:	xor    edx,edx
   140004bb4:	mov    QWORD PTR [rbp-0x37],rax
   140004bb8:	lea    rcx,[rbp-0x27]
   140004bbc:	mov    DWORD PTR [rbp-0x2f],eax
   140004bbf:	lea    r8d,[rdi+0x76]
   140004bc3:	mov    WORD PTR [rbp-0x2b],ax
   140004bc7:	mov    WORD PTR [rbp-0x29],di
   140004bcb:	call   0x140005de2
   140004bd0:	mov    rdx,QWORD PTR [rbx]
   140004bd3:	test   rdx,rdx
   140004bd6:	jne    0x140004be9
   140004bd8:	mov    ecx,0x2710
   140004bdd:	call   0x140003af4
   140004be2:	mov    ebx,0xc000000d
   140004be7:	jmp    0x140004c33
   140004be9:	lea    rcx,[rbp-0x39]
   140004bed:	call   QWORD PTR [rip+0x1835]        # 0x140006428
   140004bf3:	lea    rdx,[rbp-0x39]
   140004bf7:	mov    DWORD PTR [rbp-0x29],edi
   140004bfa:	mov    ecx,0x274a
   140004bff:	call   0x140003af4
   140004c04:	mov    rcx,QWORD PTR [rip+0x5025]        # 0x140009c30
   140004c0b:	lea    r9,[rbp-0x29]
   140004c0f:	mov    r8d,0xd
   140004c15:	lea    rdx,[rbp-0x39]
   140004c19:	call   QWORD PTR [rip+0x1449]        # 0x140006068
   140004c1f:	mov    ebx,eax
   140004c21:	test   eax,eax
   140004c23:	jns    0x140004c33
   140004c25:	lea    rdx,[rbp-0x39]
   140004c29:	mov    ecx,0x274b
   140004c2e:	call   0x140003af4
   140004c33:	lea    r11,[rsp+0xb0]
   140004c3b:	mov    eax,ebx
   140004c3d:	mov    rbx,QWORD PTR [r11+0x10]
   140004c41:	mov    rdi,QWORD PTR [r11+0x18]
   140004c45:	mov    rsp,r11
   140004c48:	pop    rbp
   140004c49:	ret    
   140004c4a:	int3   
   140004c4b:	int3   
   140004c4c:	int3   
   140004c4d:	int3   
   140004c4e:	int3   
   140004c4f:	int3   
   140004c50:	mov    QWORD PTR [rsp+0x18],r8
   140004c55:	mov    QWORD PTR [rsp+0x20],r9
   140004c5a:	push   rbx
   140004c5b:	push   rbp
   140004c5c:	push   rsi
   140004c5d:	push   rdi
   140004c5e:	sub    rsp,0x28
   140004c62:	xor    ebp,ebp
   140004c64:	lea    rax,[rdx-0x1]
   140004c68:	cmp    rax,0x7ffffffe
   140004c6e:	mov    rsi,rcx
   140004c71:	mov    edi,ebp
   140004c73:	mov    ecx,0x80070057
   140004c78:	cmova  edi,ecx
   140004c7b:	test   edi,edi
   140004c7d:	js     0x140004cb4
   140004c7f:	lea    rbx,[rdx-0x1]
   140004c83:	mov    rcx,rsi
   140004c86:	mov    rdx,rbx
   140004c89:	lea    r9,[rsp+0x68]
   140004c8e:	mov    edi,ebp
   140004c90:	call   QWORD PTR [rip+0x1742]        # 0x1400063d8
   140004c96:	test   eax,eax
   140004c98:	js     0x140004ca9
   140004c9a:	cdqe   
   140004c9c:	cmp    rax,rbx
   140004c9f:	ja     0x140004ca9
   140004ca1:	jne    0x140004cbc
   140004ca3:	mov    WORD PTR [rsi+rbx*2],bp
   140004ca7:	jmp    0x140004cbc
   140004ca9:	mov    WORD PTR [rsi+rbx*2],bp
   140004cad:	mov    edi,0x8007007a
   140004cb2:	jmp    0x140004cbc
   140004cb4:	test   rdx,rdx
   140004cb7:	je     0x140004cbc
   140004cb9:	mov    WORD PTR [rsi],bp
   140004cbc:	mov    eax,edi
   140004cbe:	add    rsp,0x28
   140004cc2:	pop    rdi
   140004cc3:	pop    rsi
   140004cc4:	pop    rbp
   140004cc5:	pop    rbx
   140004cc6:	ret    
   140004cc7:	int3   
   140004cc8:	int3   
   140004cc9:	int3   
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	int3   
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004cd5:	push   rdi
   140004cd6:	sub    rsp,0xb0
   140004cdd:	mov    rax,QWORD PTR [rip+0x4324]        # 0x140009008
   140004ce4:	xor    rax,rsp
   140004ce7:	mov    QWORD PTR [rsp+0xa0],rax
   140004cef:	xor    edi,edi
   140004cf1:	lea    rcx,[rsp+0x22]
   140004cf6:	xor    edx,edx
   140004cf8:	mov    WORD PTR [rsp+0x20],di
   140004cfd:	lea    r8d,[rdi+0x7e]
   140004d01:	call   0x140005de2
   140004d06:	call   QWORD PTR [rip+0x14a4]        # 0x1400061b0
   140004d0c:	mov    r9d,eax
   140004d0f:	lea    r8,[rip+0x26e2]        # 0x1400073f8
   140004d16:	lea    edx,[rdi+0x40]
   140004d19:	lea    rcx,[rsp+0x20]
   140004d1e:	call   0x140004c50
   140004d23:	mov    ebx,eax
   140004d25:	test   eax,eax
   140004d27:	jns    0x140004d48
   140004d29:	lea    ecx,[rdi+0x2]
   140004d2c:	call   0x140005d18
   140004d31:	mov    rcx,rax
   140004d34:	lea    rdx,[rip+0x26c5]        # 0x140007400
   140004d3b:	mov    r8d,ebx
   140004d3e:	call   QWORD PTR [rip+0x169c]        # 0x1400063e0
   140004d44:	xor    eax,eax
   140004d46:	jmp    0x140004d62
   140004d48:	lea    rdx,[rsp+0x20]
   140004d4d:	xor    ecx,ecx
   140004d4f:	call   QWORD PTR [rip+0x1623]        # 0x140006378
   140004d55:	xor    ecx,ecx
   140004d57:	call   QWORD PTR [rip+0x14bb]        # 0x140006218
   140004d5d:	mov    eax,0x1
   140004d62:	mov    rcx,QWORD PTR [rsp+0xa0]
   140004d6a:	xor    rcx,rsp
   140004d6d:	call   0x140005710
   140004d72:	mov    rbx,QWORD PTR [rsp+0xc0]
   140004d7a:	add    rsp,0xb0
   140004d81:	pop    rdi
   140004d82:	ret    
   140004d83:	int3   
   140004d84:	int3   
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	test   rdx,rdx
   140004d8f:	je     0x140004ed9
   140004d95:	mov    QWORD PTR [rsp+0x8],rbx
   140004d9a:	mov    QWORD PTR [rsp+0x18],rbp
   140004d9f:	push   rsi
   140004da0:	push   rdi
   140004da1:	push   r14
   140004da3:	sub    rsp,0x40
   140004da7:	and    DWORD PTR [rsp+0x68],0x0
   140004dac:	mov    rsi,rdx
   140004daf:	mov    r14d,ecx
   140004db2:	call   QWORD PTR [rip+0x13f8]        # 0x1400061b0
   140004db8:	and    QWORD PTR [rsp+0x38],0x0
   140004dbe:	or     rdi,0xffffffffffffffff
   140004dc2:	and    QWORD PTR [rsp+0x30],0x0
   140004dc8:	mov    r9d,edi
   140004dcb:	and    DWORD PTR [rsp+0x28],0x0
   140004dd0:	mov    ecx,eax
   140004dd2:	and    QWORD PTR [rsp+0x20],0x0
   140004dd8:	mov    r8,rsi
   140004ddb:	xor    edx,edx
   140004ddd:	mov    ebp,eax
   140004ddf:	call   QWORD PTR [rip+0x149b]        # 0x140006280
   140004de5:	mov    DWORD PTR [rsp+0x68],eax
   140004de9:	test   eax,eax
   140004deb:	jne    0x140004e15
   140004ded:	call   QWORD PTR [rip+0x12bd]        # 0x1400060b0
   140004df3:	lea    ecx,[rdi+0x3]
   140004df6:	mov    ebx,eax
   140004df8:	call   0x140005d18
   140004dfd:	mov    rcx,rax
   140004e00:	lea    rdx,[rip+0x2669]        # 0x140007470
   140004e07:	mov    r8d,ebx
   140004e0a:	call   QWORD PTR [rip+0x15d0]        # 0x1400063e0
   140004e10:	jmp    0x140004ec7
   140004e15:	mov    ebx,eax
   140004e17:	call   QWORD PTR [rip+0x13cb]        # 0x1400061e8
   140004e1d:	mov    r8d,ebx
   140004e20:	xor    edx,edx
   140004e22:	mov    rcx,rax
   140004e25:	call   QWORD PTR [rip+0x13cd]        # 0x1400061f8
   140004e2b:	mov    rbx,rax
   140004e2e:	test   rax,rax
   140004e31:	jne    0x140004e56
   140004e33:	lea    ecx,[rax+0x2]
   140004e36:	call   0x140005d18
   140004e3b:	mov    r9d,DWORD PTR [rsp+0x68]
   140004e40:	lea    r8d,[rbx+0x8]
   140004e44:	mov    rcx,rax
   140004e47:	lea    rdx,[rip+0x26a2]        # 0x1400074f0
   140004e4e:	call   QWORD PTR [rip+0x158c]        # 0x1400063e0
   140004e54:	jmp    0x140004ec7
   140004e56:	and    QWORD PTR [rsp+0x38],0x0
   140004e5c:	mov    r9d,edi
   140004e5f:	and    QWORD PTR [rsp+0x30],0x0
   140004e65:	mov    r8,rsi
   140004e68:	mov    eax,DWORD PTR [rsp+0x68]
   140004e6c:	xor    edx,edx
   140004e6e:	mov    DWORD PTR [rsp+0x28],eax
   140004e72:	mov    ecx,ebp
   140004e74:	mov    QWORD PTR [rsp+0x20],rbx
   140004e79:	call   QWORD PTR [rip+0x1401]        # 0x140006280
   140004e7f:	mov    DWORD PTR [rsp+0x68],eax
   140004e83:	test   eax,eax
   140004e85:	je     0x140004eb3
   140004e87:	inc    rdi
   140004e8a:	cmp    BYTE PTR [rbx+rdi*1],0x0
   140004e8e:	jne    0x140004e87
   140004e90:	mov    ecx,r14d
   140004e93:	call   QWORD PTR [rip+0x1277]        # 0x140006110
   140004e99:	and    QWORD PTR [rsp+0x20],0x0
   140004e9f:	lea    r9,[rsp+0x68]
   140004ea4:	mov    rcx,rax
   140004ea7:	mov    r8d,edi
   140004eaa:	mov    rdx,rbx
   140004ead:	call   QWORD PTR [rip+0x1325]        # 0x1400061d8
   140004eb3:	call   QWORD PTR [rip+0x132f]        # 0x1400061e8
   140004eb9:	mov    r8,rbx
   140004ebc:	xor    edx,edx
   140004ebe:	mov    rcx,rax
   140004ec1:	call   QWORD PTR [rip+0x1329]        # 0x1400061f0
   140004ec7:	mov    rbx,QWORD PTR [rsp+0x60]
   140004ecc:	mov    rbp,QWORD PTR [rsp+0x70]
   140004ed1:	add    rsp,0x40
   140004ed5:	pop    r14
   140004ed7:	pop    rdi
   140004ed8:	pop    rsi
   140004ed9:	ret    
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	mov    rax,rsp
   140004ee3:	mov    QWORD PTR [rax+0x10],rdx
   140004ee7:	mov    QWORD PTR [rax+0x18],r8
   140004eeb:	mov    QWORD PTR [rax+0x20],r9
   140004eef:	push   rbx
   140004ef0:	push   rbp
   140004ef1:	push   rsi
   140004ef2:	push   rdi
   140004ef3:	push   r14
   140004ef5:	sub    rsp,0x30
   140004ef9:	mov    rsi,rdx
   140004efc:	lea    r14,[rax+0x18]
   140004f00:	mov    edi,ecx
   140004f02:	xor    ebp,ebp
   140004f04:	mov    edx,0x4000
   140004f09:	lea    ecx,[rbp+0x40]
   140004f0c:	call   QWORD PTR [rip+0x11a6]        # 0x1400060b8
   140004f12:	mov    rbx,rax
   140004f15:	test   rax,rax
   140004f18:	je     0x140004f80
   140004f1a:	mov    r8,rsi
   140004f1d:	mov    r9,r14
   140004f20:	mov    esi,0x1fff
   140004f25:	mov    rcx,rax
   140004f28:	mov    edx,esi
   140004f2a:	call   QWORD PTR [rip+0x14a8]        # 0x1400063d8
   140004f30:	test   eax,eax
   140004f32:	js     0x140004f50
   140004f34:	cdqe   
   140004f36:	cmp    rax,rsi
   140004f39:	ja     0x140004f50
   140004f3b:	jne    0x140004f44
   140004f3d:	mov    WORD PTR [rbx+0x3ffe],bp
   140004f44:	mov    rdx,rbx
   140004f47:	mov    ecx,edi
   140004f49:	call   0x140004d8c
   140004f4e:	jmp    0x140004f77
   140004f50:	mov    ecx,0x2
   140004f55:	mov    WORD PTR [rbx+0x3ffe],bp
   140004f5c:	call   0x140005d18
   140004f61:	mov    rcx,rax
   140004f64:	lea    rdx,[rip+0x25f5]        # 0x140007560
   140004f6b:	mov    r8d,0x8007007a
   140004f71:	call   QWORD PTR [rip+0x1469]        # 0x1400063e0
   140004f77:	mov    rcx,rbx
   140004f7a:	call   QWORD PTR [rip+0x1118]        # 0x140006098
   140004f80:	add    rsp,0x30
   140004f84:	pop    r14
   140004f86:	pop    rdi
   140004f87:	pop    rsi
   140004f88:	pop    rbp
   140004f89:	pop    rbx
   140004f8a:	ret    
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	int3   
   140004f91:	int3   
   140004f92:	int3   
   140004f93:	int3   
   140004f94:	mov    rax,rsp
   140004f97:	mov    QWORD PTR [rax+0x8],rbx
   140004f9b:	mov    QWORD PTR [rax+0x10],rbp
   140004f9f:	mov    QWORD PTR [rax+0x18],rsi
   140004fa3:	mov    QWORD PTR [rax+0x20],rdi
   140004fa7:	push   r12
   140004fa9:	push   r14
   140004fab:	push   r15
   140004fad:	sub    rsp,0x20
   140004fb1:	mov    ebx,edx
   140004fb3:	mov    r14,rcx
   140004fb6:	mov    edi,0x4000
   140004fbb:	mov    ecx,0x40
   140004fc0:	mov    edx,edi
   140004fc2:	mov    r15,r9
   140004fc5:	mov    ebp,r8d
   140004fc8:	call   QWORD PTR [rip+0x10ea]        # 0x1400060b8
   140004fce:	xor    r12d,r12d
   140004fd1:	mov    rsi,rax
   140004fd4:	test   rax,rax
   140004fd7:	je     0x1400050a2
   140004fdd:	mov    edx,edi
   140004fdf:	lea    ecx,[r12+0x40]
   140004fe4:	call   QWORD PTR [rip+0x10ce]        # 0x1400060b8
   140004fea:	mov    rdi,rax
   140004fed:	test   rax,rax
   140004ff0:	je     0x14000508b
   140004ff6:	mov    r9d,0x2000
   140004ffc:	mov    r8,rsi
   140004fff:	mov    edx,ebp
   140005001:	mov    rcx,r14
   140005004:	call   QWORD PTR [rip+0x11fe]        # 0x140006208
   14000500a:	test   eax,eax
   14000500c:	jne    0x14000502c
   14000500e:	call   QWORD PTR [rip+0x109c]        # 0x1400060b0
   140005014:	lea    ecx,[r12+0x2]
   140005019:	mov    ebx,eax
   14000501b:	call   0x140005d18
   140005020:	mov    r8d,ebx
   140005023:	lea    rdx,[rip+0x2586]        # 0x1400075b0
   14000502a:	jmp    0x140005082
   14000502c:	mov    ebp,0x1fff
   140005031:	mov    r9,r15
   140005034:	mov    edx,ebp
   140005036:	mov    r8,rsi
   140005039:	mov    rcx,rdi
   14000503c:	call   QWORD PTR [rip+0x1396]        # 0x1400063d8
   140005042:	test   eax,eax
   140005044:	js     0x140005063
   140005046:	cdqe   
   140005048:	cmp    rax,rbp
   14000504b:	ja     0x140005063
   14000504d:	jne    0x140005057
   14000504f:	mov    WORD PTR [rdi+0x3ffe],r12w
   140005057:	mov    rdx,rdi
   14000505a:	mov    ecx,ebx
   14000505c:	call   0x140004d8c
   140005061:	jmp    0x14000508b
   140005063:	mov    ecx,0x2
   140005068:	mov    WORD PTR [rdi+0x3ffe],r12w
   140005070:	call   0x140005d18
   140005075:	mov    r8d,0x8007007a
   14000507b:	lea    rdx,[rip+0x24de]        # 0x140007560
   140005082:	mov    rcx,rax
   140005085:	call   QWORD PTR [rip+0x1355]        # 0x1400063e0
   14000508b:	mov    rcx,rsi
   14000508e:	call   QWORD PTR [rip+0x1004]        # 0x140006098
   140005094:	test   rdi,rdi
   140005097:	je     0x1400050a2
   140005099:	mov    rcx,rdi
   14000509c:	call   QWORD PTR [rip+0xff6]        # 0x140006098
   1400050a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400050a7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400050ac:	mov    rsi,QWORD PTR [rsp+0x50]
   1400050b1:	mov    rdi,QWORD PTR [rsp+0x58]
   1400050b6:	add    rsp,0x20
   1400050ba:	pop    r15
   1400050bc:	pop    r14
   1400050be:	pop    r12
   1400050c0:	ret    
   1400050c1:	int3   
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	mov    DWORD PTR [rsp+0x18],r8d
   1400050cd:	mov    QWORD PTR [rsp+0x20],r9
   1400050d2:	sub    rsp,0x38
   1400050d6:	lea    r9,[rsp+0x58]
   1400050db:	call   0x140004f94
   1400050e0:	add    rsp,0x38
   1400050e4:	ret    
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400050f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400050f6:	mov    QWORD PTR [rsp+0x8],rcx
   1400050fb:	push   rbp
   1400050fc:	push   rdi
   1400050fd:	push   r12
   1400050ff:	push   r14
   140005101:	push   r15
   140005103:	mov    rbp,rsp
   140005106:	sub    rsp,0x50
   14000510a:	mov    rbx,QWORD PTR [rip+0x4aff]        # 0x140009c10
   140005111:	lea    rax,[rip+0x4528]        # 0x140009640
   140005118:	and    QWORD PTR [rbp+0x30],0x0
   14000511d:	xor    r15d,r15d
   140005120:	and    QWORD PTR [rbp+0x50],0x0
   140005125:	mov    r12,r8
   140005128:	and    QWORD PTR [rbp-0x8],r15
   14000512c:	mov    r14,rdx
   14000512f:	xor    r8d,r8d
   140005132:	mov    QWORD PTR [rbp-0x10],rax
   140005136:	lea    edx,[r15+0x8]
   14000513a:	mov    rcx,rbx
   14000513d:	mov    rsi,r9
   140005140:	call   QWORD PTR [rip+0x102a]        # 0x140006170
   140005146:	test   eax,eax
   140005148:	je     0x140005161
   14000514a:	mov    rcx,QWORD PTR [rip+0x4aef]        # 0x140009c40
   140005151:	mov    edx,0xfffffff5
   140005156:	mov    r8d,0x27ac
   14000515c:	call   0x1400050c8
   140005161:	lea    rax,[rbp+0x50]
   140005165:	xor    r8d,r8d
   140005168:	mov    QWORD PTR [rsp+0x30],rax
   14000516d:	lea    r9,[rip+0x247c]        # 0x1400075f0
   140005174:	and    DWORD PTR [rsp+0x28],r15d
   140005179:	lea    rax,[rbp-0x10]
   14000517d:	xor    edx,edx
   14000517f:	mov    QWORD PTR [rsp+0x20],rax
   140005184:	mov    rcx,rbx
   140005187:	call   QWORD PTR [rip+0x1003]        # 0x140006190
   14000518d:	mov    edi,eax
   14000518f:	test   eax,eax
   140005191:	jne    0x140005374
   140005197:	mov    rdx,QWORD PTR [rbp+0x50]
   14000519b:	lea    r8,[rip+0x449e]        # 0x140009640
   1400051a2:	mov    rcx,rbx
   1400051a5:	call   QWORD PTR [rip+0xfbd]        # 0x140006168
   1400051ab:	test   rax,rax
   1400051ae:	je     0x14000534f
   1400051b4:	mov    rdx,QWORD PTR [rax]
   1400051b7:	lea    rcx,[rbp+0x30]
   1400051bb:	mov    QWORD PTR [rsp+0x30],rcx
   1400051c0:	lea    r8d,[rdi+0x2]
   1400051c4:	and    DWORD PTR [rsp+0x28],r15d
   1400051c9:	mov    rcx,rbx
   1400051cc:	mov    r9,r14
   1400051cf:	mov    QWORD PTR [rsp+0x20],r12
   1400051d4:	call   QWORD PTR [rip+0xfb6]        # 0x140006190
   1400051da:	mov    rdx,QWORD PTR [rbp+0x30]
   1400051de:	mov    edi,eax
   1400051e0:	test   rdx,rdx
   1400051e3:	je     0x14000532f
   1400051e9:	mov    rcx,rbx
   1400051ec:	call   QWORD PTR [rip+0xf66]        # 0x140006158
   1400051f2:	test   rax,rax
   1400051f5:	jne    0x140005216
   1400051f7:	mov    rcx,QWORD PTR [rip+0x4a42]        # 0x140009c40
   1400051fe:	mov    r9,r14
   140005201:	mov    edx,0xfffffff5
   140005206:	mov    r8d,0x27ad
   14000520c:	call   0x1400050c8
   140005211:	jmp    0x14000531e
   140005216:	mov    rdx,QWORD PTR [rbp+0x30]
   14000521a:	mov    rcx,rbx
   14000521d:	call   QWORD PTR [rip+0xf35]        # 0x140006158
   140005223:	mov    rdx,rax
   140005226:	mov    rcx,rbx
   140005229:	call   QWORD PTR [rip+0xf19]        # 0x140006148
   14000522f:	test   rax,rax
   140005232:	je     0x1400052d5
   140005238:	mov    rcx,QWORD PTR [rip+0x4a01]        # 0x140009c40
   14000523f:	mov    r9,r14
   140005242:	mov    edx,0xfffffff5
   140005247:	mov    r8d,0x27bf
   14000524d:	mov    esi,0x1
   140005252:	call   0x1400050c8
   140005257:	mov    rdx,QWORD PTR [rbp+0x30]
   14000525b:	mov    rcx,rbx
   14000525e:	call   QWORD PTR [rip+0xef4]        # 0x140006158
   140005264:	jmp    0x1400052cb
   140005266:	mov    rdx,rdi
   140005269:	mov    rcx,rbx
   14000526c:	call   QWORD PTR [rip+0xede]        # 0x140006150
   140005272:	mov    r14,rax
   140005275:	test   rax,rax
   140005278:	jne    0x14000529d
   14000527a:	mov    eax,DWORD PTR [rbx+0x74]
   14000527d:	mov    r9d,esi
   140005280:	mov    rcx,QWORD PTR [rip+0x49b9]        # 0x140009c40
   140005287:	mov    edx,0xfffffff5
   14000528c:	mov    r8d,0x27ae
   140005292:	mov    DWORD PTR [rsp+0x20],eax
   140005296:	call   0x1400050c8
   14000529b:	jmp    0x1400052bd
   14000529d:	mov    r9,rax
   1400052a0:	lea    rdx,[rip+0x2359]        # 0x140007600
   1400052a7:	mov    r8d,esi
   1400052aa:	mov    ecx,0xfffffff5
   1400052af:	call   0x140004ee0
   1400052b4:	mov    rcx,r14
   1400052b7:	call   QWORD PTR [rip+0xebb]        # 0x140006178
   1400052bd:	mov    rdx,rdi
   1400052c0:	mov    rcx,rbx
   1400052c3:	call   QWORD PTR [rip+0xe7f]        # 0x140006148
   1400052c9:	inc    esi
   1400052cb:	mov    rdi,rax
   1400052ce:	test   rax,rax
   1400052d1:	jne    0x140005266
   1400052d3:	jmp    0x14000531e
   1400052d5:	mov    r15d,0x1
   1400052db:	test   rsi,rsi
   1400052de:	je     0x14000531e
   1400052e0:	mov    rdx,QWORD PTR [rbp+0x30]
   1400052e4:	mov    rcx,rbx
   1400052e7:	call   QWORD PTR [rip+0xe63]        # 0x140006150
   1400052ed:	test   rax,rax
   1400052f0:	je     0x1400052f7
   1400052f2:	mov    QWORD PTR [rsi],rax
   1400052f5:	jmp    0x14000531e
   1400052f7:	mov    r9d,DWORD PTR [rbx+0x74]
   1400052fb:	mov    edx,0xfffffff5
   140005300:	mov    rcx,QWORD PTR [rip+0x4939]        # 0x140009c40
   140005307:	mov    r8d,0x27af
   14000530d:	call   0x1400050c8
   140005312:	mov    ecx,DWORD PTR [rbx+0x74]
   140005315:	call   QWORD PTR [rip+0xdc5]        # 0x1400060e0
   14000531b:	xor    r15d,r15d
   14000531e:	mov    rcx,QWORD PTR [rbp+0x30]
   140005322:	test   rcx,rcx
   140005325:	je     0x140005396
   140005327:	call   QWORD PTR [rip+0xe33]        # 0x140006160
   14000532d:	jmp    0x140005396
   14000532f:	mov    rcx,QWORD PTR [rip+0x490a]        # 0x140009c40
   140005336:	mov    r9,r14
   140005339:	mov    edx,0xfffffff5
   14000533e:	mov    DWORD PTR [rsp+0x20],eax
   140005342:	mov    r8d,0x27b0
   140005348:	call   0x1400050c8
   14000534d:	jmp    0x14000538e
   14000534f:	mov    rcx,QWORD PTR [rip+0x48ea]        # 0x140009c40
   140005356:	lea    r9,[rip+0x42e3]        # 0x140009640
   14000535d:	mov    edx,0xfffffff5
   140005362:	mov    r8d,0x27b1
   140005368:	call   0x1400050c8
   14000536d:	mov    ecx,0x583
   140005372:	jmp    0x140005390
   140005374:	mov    rcx,QWORD PTR [rip+0x48c5]        # 0x140009c40
   14000537b:	mov    r9d,eax
   14000537e:	mov    edx,0xfffffff5
   140005383:	mov    r8d,0x27b2
   140005389:	call   0x1400050c8
   14000538e:	mov    ecx,edi
   140005390:	call   QWORD PTR [rip+0xd4a]        # 0x1400060e0
   140005396:	mov    rcx,QWORD PTR [rbp+0x50]
   14000539a:	test   rcx,rcx
   14000539d:	je     0x1400053a5
   14000539f:	call   QWORD PTR [rip+0xdbb]        # 0x140006160
   1400053a5:	lea    r11,[rsp+0x50]
   1400053aa:	mov    eax,r15d
   1400053ad:	mov    rbx,QWORD PTR [r11+0x38]
   1400053b1:	mov    rsi,QWORD PTR [r11+0x40]
   1400053b5:	mov    rsp,r11
   1400053b8:	pop    r15
   1400053ba:	pop    r14
   1400053bc:	pop    r12
   1400053be:	pop    rdi
   1400053bf:	pop    rbp
   1400053c0:	ret    
   1400053c1:	int3   
   1400053c2:	int3   
   1400053c3:	int3   
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	sub    rsp,0x28
   1400053d4:	mov    eax,0x5a4d
   1400053d9:	cmp    WORD PTR [rip+0xffffffffffffac20],ax        # 0x140000000
   1400053e0:	je     0x1400053e6
   1400053e2:	xor    eax,eax
   1400053e4:	jmp    0x140005435
   1400053e6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffac4f]        # 0x14000003c
   1400053ed:	lea    rax,[rip+0xffffffffffffac0c]        # 0x140000000
   1400053f4:	add    rcx,rax
   1400053f7:	cmp    DWORD PTR [rcx],0x4550
   1400053fd:	jne    0x1400053e2
   1400053ff:	movzx  eax,WORD PTR [rcx+0x18]
   140005403:	cmp    eax,0x10b
   140005408:	je     0x140005424
   14000540a:	cmp    eax,0x20b
   14000540f:	jne    0x1400053e2
   140005411:	xor    eax,eax
   140005413:	cmp    DWORD PTR [rcx+0x84],0xe
   14000541a:	jbe    0x140005435
   14000541c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005422:	jmp    0x140005432
   140005424:	xor    eax,eax
   140005426:	cmp    DWORD PTR [rcx+0x74],0xe
   14000542a:	jbe    0x140005435
   14000542c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005432:	setne  al
   140005435:	mov    ecx,0x1
   14000543a:	mov    DWORD PTR [rip+0x4240],eax        # 0x140009680
   140005440:	call   0x140005ab8
   140005445:	mov    ecx,eax
   140005447:	call   QWORD PTR [rip+0xf73]        # 0x1400063c0
   14000544d:	mov    rcx,QWORD PTR [rip+0xf74]        # 0x1400063c8
   140005454:	or     rax,0xffffffffffffffff
   140005458:	mov    QWORD PTR [rip+0x5269],rax        # 0x14000a6c8
   14000545f:	mov    QWORD PTR [rip+0x526a],rax        # 0x14000a6d0
   140005466:	mov    eax,DWORD PTR [rip+0x47a0]        # 0x140009c0c
   14000546c:	mov    DWORD PTR [rcx],eax
   14000546e:	mov    rcx,QWORD PTR [rip+0xe73]        # 0x1400062e8
   140005475:	mov    eax,DWORD PTR [rip+0x4785]        # 0x140009c00
   14000547b:	mov    DWORD PTR [rcx],eax
   14000547d:	call   0x140005b10
   140005482:	cmp    DWORD PTR [rip+0x3b77],0x0        # 0x140009000
   140005489:	jne    0x140005498
   14000548b:	lea    rcx,[rip+0x67e]        # 0x140005b10
   140005492:	call   QWORD PTR [rip+0xef8]        # 0x140006390
   140005498:	xor    eax,eax
   14000549a:	add    rsp,0x28
   14000549e:	ret    
   14000549f:	int3   
   1400054a0:	int3   
   1400054a1:	int3   
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	sub    rsp,0x38
   1400054b4:	mov    eax,DWORD PTR [rip+0x474e]        # 0x140009c08
   1400054ba:	lea    r8,[rip+0x41b7]        # 0x140009678
   1400054c1:	mov    r9d,DWORD PTR [rip+0x473c]        # 0x140009c04
   1400054c8:	lea    rdx,[rip+0x41a1]        # 0x140009670
   1400054cf:	mov    DWORD PTR [rip+0x41af],eax        # 0x140009684
   1400054d5:	lea    rcx,[rip+0x418c]        # 0x140009668
   1400054dc:	lea    rax,[rip+0x41a1]        # 0x140009684
   1400054e3:	mov    QWORD PTR [rsp+0x20],rax
   1400054e8:	call   QWORD PTR [rip+0xe02]        # 0x1400062f0
   1400054ee:	mov    DWORD PTR [rip+0x4178],eax        # 0x14000966c
   1400054f4:	add    rsp,0x38
   1400054f8:	ret    
   1400054f9:	int3   
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	mov    rax,rsp
   140005503:	mov    QWORD PTR [rax+0x8],rbx
   140005507:	mov    QWORD PTR [rax+0x10],rsi
   14000550b:	mov    QWORD PTR [rax+0x18],rdi
   14000550f:	mov    QWORD PTR [rax+0x20],r12
   140005513:	push   r14
   140005515:	sub    rsp,0x30
   140005519:	mov    rax,QWORD PTR gs:0x30
   140005522:	mov    rbx,QWORD PTR [rax+0x8]
   140005526:	xor    r14d,r14d
   140005529:	xor    eax,eax
   14000552b:	lock cmpxchg QWORD PTR [rip+0x51a4],rbx        # 0x14000a6d8
   140005534:	je     0x140005552
   140005536:	cmp    rax,rbx
   140005539:	jne    0x140005545
   14000553b:	mov    ebx,0x1
   140005540:	mov    r14d,ebx
   140005543:	jmp    0x140005557
   140005545:	mov    ecx,0x3e8
   14000554a:	call   QWORD PTR [rip+0xd40]        # 0x140006290
   140005550:	jmp    0x140005529
   140005552:	mov    ebx,0x1
   140005557:	mov    eax,DWORD PTR [rip+0x5183]        # 0x14000a6e0
   14000555d:	cmp    eax,ebx
   14000555f:	jne    0x14000556d
   140005561:	mov    ecx,0x1f
   140005566:	call   0x140005b04
   14000556b:	jmp    0x1400055d6
   14000556d:	mov    eax,DWORD PTR [rip+0x516d]        # 0x14000a6e0
   140005573:	test   eax,eax
   140005575:	jne    0x1400055d0
   140005577:	mov    DWORD PTR [rip+0x5163],ebx        # 0x14000a6e0
   14000557d:	lea    r12,[rip+0xf04]        # 0x140006488
   140005584:	lea    rdi,[rip+0xee5]        # 0x140006470
   14000558b:	mov    QWORD PTR [rsp+0x28],rdi
   140005590:	mov    DWORD PTR [rsp+0x20],eax
   140005594:	cmp    rdi,r12
   140005597:	jae    0x1400055c2
   140005599:	test   eax,eax
   14000559b:	jne    0x1400055c6
   14000559d:	mov    rsi,QWORD PTR [rdi]
   1400055a0:	test   rsi,rsi
   1400055a3:	je     0x1400055b7
   1400055a5:	mov    rcx,rsi
   1400055a8:	mov    rax,QWORD PTR [rip+0xe99]        # 0x140006448
   1400055af:	call   rax
   1400055b1:	call   rsi
   1400055b3:	mov    DWORD PTR [rsp+0x20],eax
   1400055b7:	add    rdi,0x8
   1400055bb:	mov    QWORD PTR [rsp+0x28],rdi
   1400055c0:	jmp    0x140005594
   1400055c2:	test   eax,eax
   1400055c4:	je     0x1400055d6
   1400055c6:	mov    eax,0xff
   1400055cb:	jmp    0x1400056b7
   1400055d0:	mov    DWORD PTR [rip+0x408e],ebx        # 0x140009664
   1400055d6:	mov    eax,DWORD PTR [rip+0x5104]        # 0x14000a6e0
   1400055dc:	cmp    eax,ebx
   1400055de:	jne    0x1400055fd
   1400055e0:	lea    rdx,[rip+0xe81]        # 0x140006468
   1400055e7:	lea    rcx,[rip+0xe6a]        # 0x140006458
   1400055ee:	call   0x140005cda
   1400055f3:	mov    DWORD PTR [rip+0x50e3],0x2        # 0x14000a6e0
   1400055fd:	test   r14d,r14d
   140005600:	jne    0x14000560b
   140005602:	xor    eax,eax
   140005604:	xchg   QWORD PTR [rip+0x50cd],rax        # 0x14000a6d8
   14000560b:	cmp    QWORD PTR [rip+0x50d5],0x0        # 0x14000a6e8
   140005613:	je     0x140005643
   140005615:	lea    rcx,[rip+0x50cc]        # 0x14000a6e8
   14000561c:	call   0x140005b70
   140005621:	test   eax,eax
   140005623:	je     0x140005643
   140005625:	mov    rbx,QWORD PTR [rip+0x50bc]        # 0x14000a6e8
   14000562c:	mov    rcx,rbx
   14000562f:	mov    rax,QWORD PTR [rip+0xe12]        # 0x140006448
   140005636:	call   rax
   140005638:	xor    r8d,r8d
   14000563b:	lea    edx,[r8+0x2]
   14000563f:	xor    ecx,ecx
   140005641:	call   rbx
   140005643:	mov    r8,QWORD PTR [rip+0x402e]        # 0x140009678
   14000564a:	mov    rdx,QWORD PTR [rip+0x401f]        # 0x140009670
   140005651:	mov    ecx,DWORD PTR [rip+0x4011]        # 0x140009668
   140005657:	call   0x140002248
   14000565c:	mov    DWORD PTR [rip+0x3ffe],eax        # 0x140009660
   140005662:	cmp    DWORD PTR [rip+0x4017],0x0        # 0x140009680
   140005669:	jne    0x140005673
   14000566b:	mov    ecx,eax
   14000566d:	call   QWORD PTR [rip+0xc95]        # 0x140006308
   140005673:	cmp    DWORD PTR [rip+0x3fea],0x0        # 0x140009664
   14000567a:	jne    0x140005688
   14000567c:	call   QWORD PTR [rip+0xd2e]        # 0x1400063b0
   140005682:	mov    eax,DWORD PTR [rip+0x3fd8]        # 0x140009660
   140005688:	jmp    0x1400056b7
   14000568a:	mov    DWORD PTR [rip+0x3fd0],eax        # 0x140009660
   140005690:	cmp    DWORD PTR [rip+0x3fe9],0x0        # 0x140009680
   140005697:	jne    0x1400056a2
   140005699:	mov    ecx,eax
   14000569b:	call   QWORD PTR [rip+0xd17]        # 0x1400063b8
   1400056a1:	int3   
   1400056a2:	cmp    DWORD PTR [rip+0x3fbb],0x0        # 0x140009664
   1400056a9:	jne    0x1400056b7
   1400056ab:	call   QWORD PTR [rip+0xcff]        # 0x1400063b0
   1400056b1:	mov    eax,DWORD PTR [rip+0x3fa9]        # 0x140009660
   1400056b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400056bc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400056c1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400056c6:	mov    r12,QWORD PTR [rsp+0x58]
   1400056cb:	add    rsp,0x30
   1400056cf:	pop    r14
   1400056d1:	ret    
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	int3   
   1400056d9:	int3   
   1400056da:	int3   
   1400056db:	int3   
   1400056dc:	int3   
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	sub    rsp,0x28
   1400056e4:	call   0x140005c04
   1400056e9:	add    rsp,0x28
   1400056ed:	jmp    0x140005500
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	int3   
   140005701:	int3   
   140005702:	int3   
   140005703:	int3   
   140005704:	int3   
   140005705:	int3   
   140005706:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005710:	cmp    rcx,QWORD PTR [rip+0x38f1]        # 0x140009008
   140005717:	jne    0x140005729
   140005719:	rol    rcx,0x10
   14000571d:	test   cx,0xffff
   140005722:	jne    0x140005725
   140005724:	ret    
   140005725:	ror    rcx,0x10
   140005729:	jmp    0x140005770
   14000572e:	int3   
   14000572f:	int3   
   140005730:	int3   
   140005731:	int3   
   140005732:	int3   
   140005733:	int3   
   140005734:	rex push rbx
   140005736:	sub    rsp,0x20
   14000573a:	mov    rbx,rcx
   14000573d:	xor    ecx,ecx
   14000573f:	call   QWORD PTR [rip+0xa7b]        # 0x1400061c0
   140005745:	mov    rcx,rbx
   140005748:	call   QWORD PTR [rip+0xa7a]        # 0x1400061c8
   14000574e:	call   QWORD PTR [rip+0xadc]        # 0x140006230
   140005754:	mov    rcx,rax
   140005757:	mov    edx,0xc0000409
   14000575c:	add    rsp,0x20
   140005760:	pop    rbx
   140005761:	rex.W jmp QWORD PTR [rip+0xad0]        # 0x140006238
   140005768:	int3   
   140005769:	int3   
   14000576a:	int3   
   14000576b:	int3   
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	mov    QWORD PTR [rsp+0x8],rcx
   140005775:	sub    rsp,0x88
   14000577c:	lea    rcx,[rip+0x3fad]        # 0x140009730
   140005783:	call   QWORD PTR [rip+0xae7]        # 0x140006270
   140005789:	mov    rax,QWORD PTR [rip+0x4098]        # 0x140009828
   140005790:	mov    QWORD PTR [rsp+0x48],rax
   140005795:	xor    r8d,r8d
   140005798:	lea    rdx,[rsp+0x50]
   14000579d:	mov    rcx,QWORD PTR [rsp+0x48]
   1400057a2:	call   QWORD PTR [rip+0xab8]        # 0x140006260
   1400057a8:	mov    QWORD PTR [rsp+0x40],rax
   1400057ad:	cmp    QWORD PTR [rsp+0x40],0x0
   1400057b3:	je     0x1400057f7
   1400057b5:	mov    QWORD PTR [rsp+0x38],0x0
   1400057be:	lea    rax,[rsp+0x58]
   1400057c3:	mov    QWORD PTR [rsp+0x30],rax
   1400057c8:	lea    rax,[rsp+0x60]
   1400057cd:	mov    QWORD PTR [rsp+0x28],rax
   1400057d2:	lea    rax,[rip+0x3f57]        # 0x140009730
   1400057d9:	mov    QWORD PTR [rsp+0x20],rax
   1400057de:	mov    r9,QWORD PTR [rsp+0x40]
   1400057e3:	mov    r8,QWORD PTR [rsp+0x48]
   1400057e8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400057ed:	xor    ecx,ecx
   1400057ef:	call   QWORD PTR [rip+0xa73]        # 0x140006268
   1400057f5:	jmp    0x14000581a
   1400057f7:	mov    rax,QWORD PTR [rip+0x3fca]        # 0x1400097c8
   1400057fe:	mov    rax,QWORD PTR [rax]
   140005801:	mov    QWORD PTR [rip+0x4020],rax        # 0x140009828
   140005808:	mov    rax,QWORD PTR [rip+0x3fb9]        # 0x1400097c8
   14000580f:	add    rax,0x8
   140005813:	mov    QWORD PTR [rip+0x3fae],rax        # 0x1400097c8
   14000581a:	mov    rax,QWORD PTR [rip+0x4007]        # 0x140009828
   140005821:	mov    QWORD PTR [rip+0x3e78],rax        # 0x1400096a0
   140005828:	mov    rax,QWORD PTR [rsp+0x90]
   140005830:	mov    QWORD PTR [rip+0x3f79],rax        # 0x1400097b0
   140005837:	mov    DWORD PTR [rip+0x3e4f],0xc0000409        # 0x140009690
   140005841:	mov    DWORD PTR [rip+0x3e49],0x1        # 0x140009694
   14000584b:	mov    DWORD PTR [rip+0x3e53],0x3        # 0x1400096a8
   140005855:	mov    eax,0x8
   14000585a:	imul   rax,rax,0x0
   14000585e:	lea    rcx,[rip+0x3e4b]        # 0x1400096b0
   140005865:	mov    QWORD PTR [rcx+rax*1],0x2
   14000586d:	mov    eax,0x8
   140005872:	imul   rax,rax,0x1
   140005876:	lea    rcx,[rip+0x3e33]        # 0x1400096b0
   14000587d:	mov    rdx,QWORD PTR [rip+0x3784]        # 0x140009008
   140005884:	mov    QWORD PTR [rcx+rax*1],rdx
   140005888:	mov    eax,0x8
   14000588d:	imul   rax,rax,0x2
   140005891:	lea    rcx,[rip+0x3e18]        # 0x1400096b0
   140005898:	mov    rdx,QWORD PTR [rip+0x3771]        # 0x140009010
   14000589f:	mov    QWORD PTR [rcx+rax*1],rdx
   1400058a3:	mov    eax,0x8
   1400058a8:	imul   rax,rax,0x0
   1400058ac:	mov    rcx,QWORD PTR [rip+0x3755]        # 0x140009008
   1400058b3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400058b8:	mov    eax,0x8
   1400058bd:	imul   rax,rax,0x1
   1400058c1:	mov    rcx,QWORD PTR [rip+0x3748]        # 0x140009010
   1400058c8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400058cd:	lea    rcx,[rip+0xc4c]        # 0x140006520
   1400058d4:	call   0x140005734
   1400058d9:	add    rsp,0x88
   1400058e0:	ret    
   1400058e1:	int3   
   1400058e2:	int3   
   1400058e3:	int3   
   1400058e4:	int3   
   1400058e5:	int3   
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	sub    rsp,0x78
   1400058ec:	lea    rcx,[rip+0x3e3d]        # 0x140009730
   1400058f3:	call   QWORD PTR [rip+0x977]        # 0x140006270
   1400058f9:	mov    rax,QWORD PTR [rip+0x3f28]        # 0x140009828
   140005900:	mov    QWORD PTR [rsp+0x48],rax
   140005905:	xor    r8d,r8d
   140005908:	lea    rdx,[rsp+0x50]
   14000590d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005912:	call   QWORD PTR [rip+0x948]        # 0x140006260
   140005918:	mov    QWORD PTR [rsp+0x40],rax
   14000591d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005923:	je     0x140005967
   140005925:	mov    QWORD PTR [rsp+0x38],0x0
   14000592e:	lea    rax,[rsp+0x58]
   140005933:	mov    QWORD PTR [rsp+0x30],rax
   140005938:	lea    rax,[rsp+0x60]
   14000593d:	mov    QWORD PTR [rsp+0x28],rax
   140005942:	lea    rax,[rip+0x3de7]        # 0x140009730
   140005949:	mov    QWORD PTR [rsp+0x20],rax
   14000594e:	mov    r9,QWORD PTR [rsp+0x40]
   140005953:	mov    r8,QWORD PTR [rsp+0x48]
   140005958:	mov    rdx,QWORD PTR [rsp+0x50]
   14000595d:	xor    ecx,ecx
   14000595f:	call   QWORD PTR [rip+0x903]        # 0x140006268
   140005965:	jmp    0x14000598a
   140005967:	mov    rax,QWORD PTR [rip+0x3e5a]        # 0x1400097c8
   14000596e:	mov    rax,QWORD PTR [rax]
   140005971:	mov    QWORD PTR [rip+0x3eb0],rax        # 0x140009828
   140005978:	mov    rax,QWORD PTR [rip+0x3e49]        # 0x1400097c8
   14000597f:	add    rax,0x8
   140005983:	mov    QWORD PTR [rip+0x3e3e],rax        # 0x1400097c8
   14000598a:	mov    rax,QWORD PTR [rip+0x3e97]        # 0x140009828
   140005991:	mov    QWORD PTR [rip+0x3d08],rax        # 0x1400096a0
   140005998:	mov    DWORD PTR [rip+0x3cee],0xc0000409        # 0x140009690
   1400059a2:	mov    DWORD PTR [rip+0x3ce8],0x1        # 0x140009694
   1400059ac:	mov    DWORD PTR [rip+0x3cf2],0x1        # 0x1400096a8
   1400059b6:	mov    eax,0x8
   1400059bb:	imul   rax,rax,0x0
   1400059bf:	lea    rcx,[rip+0x3cea]        # 0x1400096b0
   1400059c6:	mov    QWORD PTR [rcx+rax*1],0x8
   1400059ce:	lea    rcx,[rip+0xb4b]        # 0x140006520
   1400059d5:	call   0x140005734
   1400059da:	add    rsp,0x78
   1400059de:	ret    
   1400059df:	int3   
   1400059e0:	int3   
   1400059e1:	int3   
   1400059e2:	int3   
   1400059e3:	int3   
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	int3   
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	int3   
   1400059ed:	int3   
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	sub    rsp,0x28
   1400059f4:	mov    rax,QWORD PTR [rcx]
   1400059f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400059fd:	jne    0x140005a22
   1400059ff:	cmp    DWORD PTR [rax+0x18],0x4
   140005a03:	jne    0x140005a22
   140005a05:	mov    ecx,DWORD PTR [rax+0x20]
   140005a08:	lea    eax,[rcx-0x19930520]
   140005a0e:	cmp    eax,0x2
   140005a11:	jbe    0x140005a1b
   140005a13:	cmp    ecx,0x1994000
   140005a19:	jne    0x140005a22
   140005a1b:	call   QWORD PTR [rip+0x8bf]        # 0x1400062e0
   140005a21:	int3   
   140005a22:	xor    eax,eax
   140005a24:	add    rsp,0x28
   140005a28:	ret    
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	sub    rsp,0x28
   140005a34:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400059f0
   140005a3b:	call   QWORD PTR [rip+0x77f]        # 0x1400061c0
   140005a41:	xor    eax,eax
   140005a43:	add    rsp,0x28
   140005a47:	ret    
   140005a48:	int3   
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	jmp    QWORD PTR [rip+0x94c]        # 0x1400063a0
   140005a54:	int3   
   140005a55:	int3   
   140005a56:	int3   
   140005a57:	int3   
   140005a58:	int3   
   140005a59:	int3   
   140005a5a:	int3   
   140005a5b:	int3   
   140005a5c:	sub    rsp,0x18
   140005a60:	xor    edx,edx
   140005a62:	lea    rax,[rcx-0x1]
   140005a66:	cmp    rax,0xfffffffffffffffd
   140005a6a:	ja     0x140005aa8
   140005a6c:	mov    eax,0x5a4d
   140005a71:	cmp    WORD PTR [rcx],ax
   140005a74:	jne    0x140005aa0
   140005a76:	cmp    DWORD PTR [rcx+0x3c],edx
   140005a79:	jl     0x140005aa0
   140005a7b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005a82:	jae    0x140005aa0
   140005a84:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005a88:	add    rax,rcx
   140005a8b:	mov    QWORD PTR [rsp],rax
   140005a8f:	cmp    DWORD PTR [rax],0x4550
   140005a95:	cmovne rax,rdx
   140005a99:	mov    rdx,rax
   140005a9c:	mov    QWORD PTR [rsp],rax
   140005aa0:	jmp    0x140005aa8
   140005aa2:	xor    edx,edx
   140005aa4:	mov    QWORD PTR [rsp],rdx
   140005aa8:	mov    rax,rdx
   140005aab:	add    rsp,0x18
   140005aaf:	ret    
   140005ab0:	int3   
   140005ab1:	int3   
   140005ab2:	int3   
   140005ab3:	int3   
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	rex push rbx
   140005aba:	sub    rsp,0x20
   140005abe:	mov    ebx,ecx
   140005ac0:	xor    ecx,ecx
   140005ac2:	call   QWORD PTR [rip+0x5f8]        # 0x1400060c0
   140005ac8:	test   rax,rax
   140005acb:	je     0x140005af5
   140005acd:	mov    rcx,rax
   140005ad0:	call   0x140005a5c
   140005ad5:	test   rax,rax
   140005ad8:	je     0x140005af5
   140005ada:	mov    ecx,0x2
   140005adf:	cmp    WORD PTR [rax+0x5c],cx
   140005ae3:	jne    0x140005ae9
   140005ae5:	mov    eax,ecx
   140005ae7:	jmp    0x140005af7
   140005ae9:	cmp    WORD PTR [rax+0x5c],0x3
   140005aee:	mov    eax,0x1
   140005af3:	je     0x140005af7
   140005af5:	mov    eax,ebx
   140005af7:	add    rsp,0x20
   140005afb:	pop    rbx
   140005afc:	ret    
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	int3   
   140005b01:	int3   
   140005b02:	int3   
   140005b03:	int3   
   140005b04:	jmp    QWORD PTR [rip+0x8c6]        # 0x1400063d0
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	xor    eax,eax
   140005b12:	ret    
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005b24:	xor    r9d,r9d
   140005b27:	add    r8,rcx
   140005b2a:	mov    r10,rdx
   140005b2d:	movzx  eax,WORD PTR [r8+0x14]
   140005b32:	movzx  r11d,WORD PTR [r8+0x6]
   140005b37:	add    rax,0x18
   140005b3b:	add    rax,r8
   140005b3e:	test   r11d,r11d
   140005b41:	je     0x140005b61
   140005b43:	mov    edx,DWORD PTR [rax+0xc]
   140005b46:	cmp    r10,rdx
   140005b49:	jb     0x140005b55
   140005b4b:	mov    ecx,DWORD PTR [rax+0x8]
   140005b4e:	add    ecx,edx
   140005b50:	cmp    r10,rcx
   140005b53:	jb     0x140005b63
   140005b55:	inc    r9d
   140005b58:	add    rax,0x28
   140005b5c:	cmp    r9d,r11d
   140005b5f:	jb     0x140005b43
   140005b61:	xor    eax,eax
   140005b63:	ret    
   140005b64:	int3   
   140005b65:	int3   
   140005b66:	int3   
   140005b67:	int3   
   140005b68:	int3   
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	mov    QWORD PTR [rsp+0x8],rbx
   140005b75:	push   rdi
   140005b76:	sub    rsp,0x20
   140005b7a:	mov    rbx,rcx
   140005b7d:	lea    rdi,[rip+0xffffffffffffa47c]        # 0x140000000
   140005b84:	mov    rcx,rdi
   140005b87:	call   0x140005bd0
   140005b8c:	test   eax,eax
   140005b8e:	je     0x140005bb2
   140005b90:	sub    rbx,rdi
   140005b93:	mov    rdx,rbx
   140005b96:	mov    rcx,rdi
   140005b99:	call   0x140005b20
   140005b9e:	test   rax,rax
   140005ba1:	je     0x140005bb2
   140005ba3:	mov    eax,DWORD PTR [rax+0x24]
   140005ba6:	shr    eax,0x1f
   140005ba9:	not    eax
   140005bab:	and    eax,0x1
   140005bae:	jmp    0x140005bb2
   140005bb0:	xor    eax,eax
   140005bb2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005bb7:	add    rsp,0x20
   140005bbb:	pop    rdi
   140005bbc:	ret    
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	int3   
   140005bc3:	int3   
   140005bc4:	int3   
   140005bc5:	int3   
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	mov    rax,rcx
   140005bd3:	mov    ecx,0x5a4d
   140005bd8:	cmp    WORD PTR [rax],cx
   140005bdb:	je     0x140005be0
   140005bdd:	xor    eax,eax
   140005bdf:	ret    
   140005be0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005be4:	add    rcx,rax
   140005be7:	xor    eax,eax
   140005be9:	cmp    DWORD PTR [rcx],0x4550
   140005bef:	jne    0x140005bfd
   140005bf1:	mov    edx,0x20b
   140005bf6:	cmp    WORD PTR [rcx+0x18],dx
   140005bfa:	sete   al
   140005bfd:	ret    
   140005bfe:	int3   
   140005bff:	int3   
   140005c00:	int3   
   140005c01:	int3   
   140005c02:	int3   
   140005c03:	int3   
   140005c04:	mov    QWORD PTR [rsp+0x20],rbx
   140005c09:	push   rbp
   140005c0a:	mov    rbp,rsp
   140005c0d:	sub    rsp,0x20
   140005c11:	and    QWORD PTR [rbp+0x18],0x0
   140005c16:	movabs rbx,0x2b992ddfa232
   140005c20:	mov    rax,QWORD PTR [rip+0x33e1]        # 0x140009008
   140005c27:	cmp    rax,rbx
   140005c2a:	jne    0x140005cbf
   140005c30:	lea    rcx,[rbp+0x18]
   140005c34:	call   QWORD PTR [rip+0x66e]        # 0x1400062a8
   140005c3a:	mov    rax,QWORD PTR [rbp+0x18]
   140005c3e:	mov    QWORD PTR [rbp+0x10],rax
   140005c42:	call   QWORD PTR [rip+0x5f8]        # 0x140006240
   140005c48:	mov    eax,eax
   140005c4a:	xor    QWORD PTR [rbp+0x10],rax
   140005c4e:	call   QWORD PTR [rip+0x5d4]        # 0x140006228
   140005c54:	mov    eax,eax
   140005c56:	xor    QWORD PTR [rbp+0x10],rax
   140005c5a:	call   QWORD PTR [rip+0x640]        # 0x1400062a0
   140005c60:	mov    eax,eax
   140005c62:	shl    rax,0x18
   140005c66:	xor    QWORD PTR [rbp+0x10],rax
   140005c6a:	call   QWORD PTR [rip+0x630]        # 0x1400062a0
   140005c70:	mov    eax,eax
   140005c72:	lea    rcx,[rbp+0x10]
   140005c76:	xor    rax,QWORD PTR [rbp+0x10]
   140005c7a:	xor    rax,rcx
   140005c7d:	lea    rcx,[rbp+0x20]
   140005c81:	mov    QWORD PTR [rbp+0x10],rax
   140005c85:	call   QWORD PTR [rip+0x5c5]        # 0x140006250
   140005c8b:	mov    eax,DWORD PTR [rbp+0x20]
   140005c8e:	movabs rcx,0xffffffffffff
   140005c98:	shl    rax,0x20
   140005c9c:	xor    rax,QWORD PTR [rbp+0x20]
   140005ca0:	xor    rax,QWORD PTR [rbp+0x10]
   140005ca4:	and    rax,rcx
   140005ca7:	movabs rcx,0x2b992ddfa233
   140005cb1:	cmp    rax,rbx
   140005cb4:	cmove  rax,rcx
   140005cb8:	mov    QWORD PTR [rip+0x3349],rax        # 0x140009008
   140005cbf:	mov    rbx,QWORD PTR [rsp+0x48]
   140005cc4:	not    rax
   140005cc7:	mov    QWORD PTR [rip+0x3342],rax        # 0x140009010
   140005cce:	add    rsp,0x20
   140005cd2:	pop    rbp
   140005cd3:	ret    
   140005cd4:	int3   
   140005cd5:	int3   
   140005cd6:	int3   
   140005cd7:	int3   
   140005cd8:	int3   
   140005cd9:	int3   
   140005cda:	jmp    QWORD PTR [rip+0x6a0]        # 0x140006380
   140005ce0:	int3   
   140005ce1:	int3   
   140005ce2:	int3   
   140005ce3:	int3   
   140005ce4:	int3   
   140005ce5:	int3   
   140005ce6:	jmp    QWORD PTR [rip+0x67c]        # 0x140006368
   140005cec:	int3   
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	int3   
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	ret    0x0
   140005d03:	int3   
   140005d04:	int3   
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	int3   
   140005d11:	int3   
   140005d12:	int3   
   140005d13:	int3   
   140005d14:	int3   
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	rex push rbx
   140005d1a:	sub    rsp,0x20
   140005d1e:	mov    ebx,ecx
   140005d20:	call   0x140005d3c
   140005d25:	lea    rdx,[rbx+rbx*2]
   140005d29:	shl    rdx,0x4
   140005d2d:	add    rax,rdx
   140005d30:	add    rsp,0x20
   140005d34:	pop    rbx
   140005d35:	ret    
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	jmp    QWORD PTR [rip+0x6a6]        # 0x1400063e8
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	sub    rsp,0x28
   140005d4c:	mov    r8,QWORD PTR [r9+0x38]
   140005d50:	mov    rcx,rdx
   140005d53:	mov    rdx,r9
   140005d56:	call   0x140005d6c
   140005d5b:	mov    eax,0x1
   140005d60:	add    rsp,0x28
   140005d64:	ret    
   140005d65:	int3   
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	int3   
   140005d69:	int3   
   140005d6a:	int3   
   140005d6b:	int3   
   140005d6c:	rex push rbx
   140005d6e:	sub    rsp,0x20
   140005d72:	mov    r11d,DWORD PTR [r8]
   140005d75:	mov    rbx,rdx
   140005d78:	and    r11d,0xfffffff8
   140005d7c:	mov    r9,rcx
   140005d7f:	test   BYTE PTR [r8],0x4
   140005d83:	mov    r10,rcx
   140005d86:	je     0x140005d9b
   140005d88:	mov    eax,DWORD PTR [r8+0x8]
   140005d8c:	movsxd r10,DWORD PTR [r8+0x4]
   140005d90:	neg    eax
   140005d92:	add    r10,rcx
   140005d95:	movsxd rcx,eax
   140005d98:	and    r10,rcx
   140005d9b:	movsxd rax,r11d
   140005d9e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005da2:	mov    rax,QWORD PTR [rbx+0x10]
   140005da6:	mov    ecx,DWORD PTR [rax+0x8]
   140005da9:	add    rcx,QWORD PTR [rbx+0x8]
   140005dad:	test   BYTE PTR [rcx+0x3],0xf
   140005db1:	je     0x140005dbf
   140005db3:	movzx  eax,BYTE PTR [rcx+0x3]
   140005db7:	and    eax,0xfffffff0
   140005dba:	cdqe   
   140005dbc:	add    r9,rax
   140005dbf:	xor    r9,rdx
   140005dc2:	mov    rcx,r9
   140005dc5:	add    rsp,0x20
   140005dc9:	pop    rbx
   140005dca:	jmp    0x140005710
   140005dcf:	int3   
   140005dd0:	int3   
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	jmp    QWORD PTR [rip+0x5bc]        # 0x140006398
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	int3   
   140005de1:	int3   
   140005de2:	jmp    QWORD PTR [rip+0x610]        # 0x1400063f8
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	int3   
   140005df1:	int3   
   140005df2:	int3   
   140005df3:	int3   
   140005df4:	int3   
   140005df5:	int3   
   140005df6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005e00:	jmp    rax
   140005e02:	int3   
   140005e03:	int3   
   140005e04:	int3   
   140005e05:	int3   
   140005e06:	int3   
   140005e07:	int3   
   140005e08:	int3   
   140005e09:	int3   
   140005e0a:	int3   
   140005e0b:	int3   
   140005e0c:	int3   
   140005e0d:	int3   
   140005e0e:	int3   
   140005e0f:	int3   
   140005e10:	int3   
   140005e11:	int3   
   140005e12:	int3   
   140005e13:	int3   
   140005e14:	int3   
   140005e15:	int3   
   140005e16:	rex push rbp
   140005e18:	sub    rsp,0x20
   140005e1c:	mov    rbp,rdx
   140005e1f:	mov    rax,QWORD PTR [rcx]
   140005e22:	mov    rdx,rcx
   140005e25:	mov    ecx,DWORD PTR [rax]
   140005e27:	call   0x140005a4e
   140005e2c:	nop
   140005e2d:	add    rsp,0x20
   140005e31:	pop    rbp
   140005e32:	ret    
   140005e33:	int3   
   140005e34:	int3   
   140005e35:	int3   
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	int3   
   140005e39:	int3   
   140005e3a:	int3   
   140005e3b:	int3   
   140005e3c:	int3   
   140005e3d:	int3   
   140005e3e:	int3   
   140005e3f:	int3   
   140005e40:	rex push rbp
   140005e42:	sub    rsp,0x20
   140005e46:	mov    rbp,rdx
   140005e49:	mov    rax,QWORD PTR [rcx]
   140005e4c:	xor    ecx,ecx
   140005e4e:	cmp    DWORD PTR [rax],0xc0000005
   140005e54:	sete   cl
   140005e57:	mov    eax,ecx
   140005e59:	add    rsp,0x20
   140005e5d:	pop    rbp
   140005e5e:	ret    
   140005e5f:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	adc    BYTE PTR [rax+rax*1+0x0],al
   140006007:	add    BYTE PTR [rsp+rax*4],ch
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	cmp    al,0x84
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	rex.WR test BYTE PTR [rax],r8b
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rsp+rax*4+0x0],bl
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rdx-0x7c],ch
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	jp     0x140005fb6
   140006032:	add    BYTE PTR [rax],al
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	xchg   esp,eax
   140006039:	test   BYTE PTR [rax],al
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rsi+0x84],ah
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rsi+0x84],dh
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    dl,al
   140006051:	test   BYTE PTR [rax],al
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    ah,dl
   140006059:	test   BYTE PTR [rax],al
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    dh,ah
   140006061:	test   BYTE PTR [rax],al
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    ah,bh
   140006069:	test   BYTE PTR [rax],al
   14000606b:	add    BYTE PTR [rax],al
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    BYTE PTR [rax*4+0x0],bl
   140006076:	add    BYTE PTR [rax],al
   140006078:	sub    al,0x85
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	rex test DWORD PTR [rax],eax
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rdx-0x7b],ah
	...
   140006096:	add    BYTE PTR [rax],al
   140006098:	xchg   BYTE PTR [rbp+0x0],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	xchg   edx,eax
   1400060a1:	test   DWORD PTR [rax],eax
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rsi+0x85],ah
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rbp+rax*4+0x0],bh
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	int3   
   1400060b9:	test   DWORD PTR [rax],eax
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    dl,bl
   1400060c1:	test   DWORD PTR [rax],eax
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    dh,ch
   1400060c9:	test   DWORD PTR [rax],eax
   1400060cb:	add    BYTE PTR [rax],al
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    dl,bh
   1400060d1:	test   DWORD PTR [rax],eax
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rsi],al
   1400060d9:	xchg   BYTE PTR [rax],al
   1400060db:	add    BYTE PTR [rax],al
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    BYTE PTR [rdx],dl
   1400060e1:	xchg   BYTE PTR [rax],al
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rdx],ah
   1400060e9:	xchg   BYTE PTR [rax],al
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rax],bh
   1400060f1:	xchg   BYTE PTR [rax],al
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax-0x7a],cl
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	pop    rdx
   140006101:	xchg   BYTE PTR [rax],al
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rsi+rax*4+0x0],ch
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rsi-0x7a],bh
	...
   14000611e:	add    BYTE PTR [rax],al
   140006120:	mov    WORD PTR [rax+0x0],cs
   140006126:	add    BYTE PTR [rax],al
   140006128:	mov    esp,0x88
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    dl,dl
   140006131:	mov    BYTE PTR [rax],al
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rdx-0x78],ah
	...
   140006146:	add    BYTE PTR [rax],al
   140006148:	sbb    eax,DWORD PTR [rax]
   14000614a:	add    BYTE PTR [rax],al
   14000614c:	add    BYTE PTR [rax],al
   14000614e:	add    BYTE PTR [rax+0x1e],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax+0x1a],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax+0x29],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax+0x22],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax+0xd3],al
   140006174:	add    BYTE PTR [rax],al
   140006176:	add    BYTE PTR [rax+0x92],al
   14000617c:	add    BYTE PTR [rax],al
   14000617e:	add    BYTE PTR [rax+0x9c],al
   140006184:	add    BYTE PTR [rax],al
   140006186:	add    BYTE PTR [rax+0xd],al
   14000618c:	add    BYTE PTR [rax],al
   14000618e:	add    BYTE PTR [rax+0x32],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax+0xaa],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax+0x49],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax+0x0],al
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	jo     0x14000613c
	...
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	pop    rax
   1400061c1:	mov    DWORD PTR [rax],eax
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rcx+rcx*4],bh
	...
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	rex.WRX mov r8b,BYTE PTR [rax]
	...
   1400061e7:	add    BYTE PTR [rsi],ah
   1400061e9:	mov    al,BYTE PTR [rax]
   1400061eb:	add    BYTE PTR [rax],al
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rdx],bl
   1400061f1:	mov    al,BYTE PTR [rax]
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rsi],cl
   1400061f9:	mov    al,BYTE PTR [rax]
	...
   140006207:	add    BYTE PTR [rsi+0x88],ch
	...
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rax],bh
   140006219:	mov    al,BYTE PTR [rax]
	...
   140006227:	add    dh,cl
   140006229:	mov    DWORD PTR [rax],eax
   14000622b:	add    BYTE PTR [rax],al
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    BYTE PTR [rsi-0x77],dh
   140006232:	add    BYTE PTR [rax],al
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	mov    cl,BYTE PTR [rcx+0x0]
   14000623e:	add    BYTE PTR [rax],al
   140006240:	mov    eax,0x89
	...
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rsi+0x89],bl
	...
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rsi],cl
   140006261:	mov    DWORD PTR [rax],eax
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rax],ch
   140006269:	mov    DWORD PTR [rax],eax
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    dl,bh
   140006271:	mov    BYTE PTR [rax],al
	...
   14000627f:	add    BYTE PTR [rdx-0x76],bl
	...
   14000628e:	add    BYTE PTR [rax],al
   140006290:	repnz mov BYTE PTR [rax],al
	...
   14000629f:	add    dh,bh
   1400062a1:	mov    DWORD PTR [rax],eax
   1400062a3:	add    BYTE PTR [rax],al
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    ah,ah
   1400062a9:	mov    DWORD PTR [rax],eax
	...
   1400062b7:	add    BYTE PTR [rdx-0x78],dl
	...
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	rex.WRX xchg QWORD PTR [rax],r8
   1400062cb:	add    BYTE PTR [rax],al
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rax-0x79],bl
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	push   0x87
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rdx],ch
   1400062e1:	mov    BYTE PTR [rax],al
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rdx],dl
   1400062e9:	mov    BYTE PTR [rax],al
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rdx+0x87],bl
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    BYTE PTR [rdi+rax*4+0x0],dh
   1400062fb:	add    BYTE PTR [rax],al
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rdi+rax*4+0x0],al
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rax],ch
   140006309:	xchg   DWORD PTR [rax],eax
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rdx],bh
   140006311:	xchg   DWORD PTR [rax],eax
   140006313:	add    BYTE PTR [rax],al
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    BYTE PTR [rdx],dl
   140006319:	xchg   DWORD PTR [rax],eax
   14000631b:	add    BYTE PTR [rax],al
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    BYTE PTR [rdi+rax*4],al
   140006322:	add    BYTE PTR [rax],al
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	cld    
   140006329:	xchg   BYTE PTR [rax],al
   14000632b:	add    BYTE PTR [rax],al
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    dl,dh
   140006331:	xchg   BYTE PTR [rax],al
   140006333:	add    BYTE PTR [rax],al
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    al,ch
   140006339:	xchg   BYTE PTR [rax],al
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    dh,bl
   140006341:	xchg   BYTE PTR [rax],al
   140006343:	add    BYTE PTR [rax],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    dl,dl
   140006349:	xchg   BYTE PTR [rax],al
   14000634b:	add    BYTE PTR [rax],al
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    al,cl
   140006351:	xchg   BYTE PTR [rax],al
   140006353:	add    BYTE PTR [rax],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rsi+0x86],bh
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rdx+0x86],dh
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    al,dh
   140006369:	xchg   DWORD PTR [rax],eax
   14000636b:	add    BYTE PTR [rax],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rax+0x86],ch
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    dh,dh
   140006379:	mov    WORD PTR [rax],es
   14000637b:	add    BYTE PTR [rax],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    ah,ah
   140006381:	xchg   DWORD PTR [rax],eax
   140006383:	add    BYTE PTR [rax],al
   140006385:	add    BYTE PTR [rax],al
   140006387:	add    BYTE PTR [rax],dh
   140006389:	xchg   DWORD PTR [rax],eax
   14000638b:	add    BYTE PTR [rax],al
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    al,dl
   140006391:	xchg   DWORD PTR [rax],eax
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rcx*4+0x0],al
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	jle    0x140006329
   1400063a2:	add    BYTE PTR [rax],al
   1400063a4:	add    BYTE PTR [rax],al
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	(bad)  
   1400063a9:	xchg   DWORD PTR [rax],eax
   1400063ab:	add    BYTE PTR [rax],al
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    dh,al
   1400063b1:	xchg   DWORD PTR [rax],eax
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rsi+0x87],bh
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rdi+rax*4+0x0],ch
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	or     BYTE PTR [rax+0x0],cl
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	mov    WORD PTR [rdi+0x0],es
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	call   0x140006469
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    ah,bl
   1400063e1:	mov    WORD PTR [rax],es
   1400063e3:	add    BYTE PTR [rax],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    dh,cl
   1400063e9:	mov    WORD PTR [rax],es
   1400063eb:	add    BYTE PTR [rax],al
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rsi+rax*4+0x0],bl
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	(bad)  
   1400063f9:	lea    eax,[rax]
	...
   140006407:	add    BYTE PTR [rax-0x78],bh
	...
   140006416:	add    BYTE PTR [rax],al
   140006418:	(bad)  
   140006419:	mov    WORD PTR [rax],es
   14000641b:	add    BYTE PTR [rax],al
   14000641d:	add    BYTE PTR [rax],al
   14000641f:	add    BYTE PTR [rsp+rcx*4+0x0],dh
   140006426:	add    BYTE PTR [rax],al
   140006428:	(bad)  
   140006429:	mov    WORD PTR [rax],es
	...
   140006437:	add    BYTE PTR [rsi],bh
   140006439:	mov    BYTE PTR [rax],al
	...
   140006447:	add    BYTE PTR [rax],al
   140006449:	pop    rbp
   14000644a:	add    BYTE PTR [rax+0x1],al
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    BYTE PTR [rax],al
   140006451:	pop    rsi
   140006452:	add    BYTE PTR [rax+0x1],al
	...
   14000645d:	add    BYTE PTR [rax],al
   14000645f:	add    BYTE PTR [rax+0x1400054],dh
	...
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    al,dl
   140006479:	push   rbx
   14000647a:	add    BYTE PTR [rax+0x1],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rax],dh
   140006481:	pop    rdx
   140006482:	add    BYTE PTR [rax+0x1],al
	...
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax-0x2fffffeb],al
   140006495:	(bad)  
   140006496:	add    BYTE PTR [rax],al
   140006498:	rcr    BYTE PTR [rdx],1
   14000649a:	add    BYTE PTR [rax],al
   14000649c:	mov    al,0x1d
   14000649e:	add    BYTE PTR [rax],al
   1400064a0:	xor    BYTE PTR [rax],ah
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	mov    al,0x26
   1400064a6:	add    BYTE PTR [rax],al
   1400064a8:	adc    BYTE PTR [rcx],ch
   1400064aa:	add    BYTE PTR [rax],al
   1400064ac:	xor    BYTE PTR [rdx],ch
   1400064ae:	add    BYTE PTR [rax],al
   1400064b0:	movabs al,ds:0x4000002b4000002a
   1400064b9:	sub    al,0x0
   1400064bb:	add    BYTE PTR [rax],al
   1400064bd:	sub    eax,0x2d300000
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	movabs al,ds:0xa000002eb000002d
   1400064cd:	xor    DWORD PTR [rax],eax
   1400064cf:	add    BYTE PTR [rax],al
   1400064d1:	xor    al,BYTE PTR [rax]
   1400064d3:	add    BYTE PTR [rax+0x32],ah
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	shl    BYTE PTR [rdx],0x0
   1400064db:	add    al,dl
   1400064dd:	xor    al,0x0
   1400064df:	add    BYTE PTR [rax+0x35],al
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	xor    BYTE PTR [rsi],dh
   1400064e6:	add    BYTE PTR [rax],al
   1400064e8:	push   rax
   1400064e9:	add    BYTE PTR ss:[rax],al
   1400064ec:	and    BYTE PTR [rax+0x0],al
   1400064ef:	add    BYTE PTR [rax-0x1fffffb9],ah
   1400064f5:	rex.W add BYTE PTR [rax],al
   1400064f8:	loopne 0x140006543
   1400064fa:	add    BYTE PTR [rax],al
   1400064fc:	nop
   1400064fd:	rex.WXB add BYTE PTR [r8],al
   140006500:	rcl    BYTE PTR [rbx+0x0],1
   140006503:	add    BYTE PTR [rax-0x1fffffac],dh
   140006509:	push   rsi
   14000650a:	add    BYTE PTR [rax],al
   14000650c:	jo     0x140006565
   14000650e:	add    BYTE PTR [rax],al
   140006510:	lock pop rcx
   140006512:	add    BYTE PTR [rax],al
   140006514:	xor    BYTE PTR [rdx+0x0],bl
   140006517:	add    BYTE PTR [rax],dl
   140006519:	pop    rbx
   14000651a:	add    BYTE PTR [rax],al
   14000651c:	add    BYTE PTR [rbp+0x0],bl
   14000651f:	add    BYTE PTR [rax+0x1400096],dl
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rax],dh
   140006529:	xchg   edi,eax
   14000652a:	add    BYTE PTR [rax+0x1],al
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    BYTE PTR [rax+rax*1+0x0],bl
   140006533:	add    BYTE PTR [rax],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    BYTE PTR [rcx],cl
   140006539:	and    eax,0x3d207368
   14000653e:	and    BYTE PTR [rip+0xa7377],ah        # 0x1400ad8bb
	...
   140006550:	push   rbx
   140006551:	add    BYTE PTR [rcx+0x0],bh
   140006554:	jae    0x140006556
   140006556:	je     0x140006558
   140006558:	add    BYTE PTR gs:[rbp+0x0],ch
   14000655c:	pop    rsp
   14000655d:	add    BYTE PTR [rbx+0x0],al
   140006560:	jne    0x140006562
   140006562:	jb     0x140006564
   140006564:	jb     0x140006566
   140006566:	add    BYTE PTR gs:[rsi+0x0],ch
   14000656a:	je     0x14000656c
   14000656c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006570:	outs   dx,BYTE PTR ds:[rsi]
   140006571:	add    BYTE PTR [rax+rax*1+0x72],dh
   140006575:	add    BYTE PTR [rdi+0x0],ch
   140006578:	ins    BYTE PTR es:[rdi],dx
   140006579:	add    BYTE PTR [rbx+0x0],dl
   14000657c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140006581:	add    BYTE PTR [rbx+0x0],al
   140006584:	outs   dx,DWORD PTR ds:[rsi]
   140006585:	add    BYTE PTR [rsi+0x0],ch
   140006588:	je     0x14000658a
   14000658a:	jb     0x14000658c
   14000658c:	outs   dx,DWORD PTR ds:[rsi]
   14000658d:	add    BYTE PTR [rax+rax*1+0x5c],ch
   140006591:	add    BYTE PTR [rax+rax*1+0x73],cl
   140006595:	add    BYTE PTR [rcx+0x0],ah
   140006598:	pop    rsp
   140006599:	add    BYTE PTR [rbx+0x0],cl
   14000659c:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065a0:	(bad)  
   1400065a1:	add    BYTE PTR [rbp+0x0],ah
   1400065a4:	jb     0x1400065a6
   1400065a6:	outs   dx,DWORD PTR ds:[rsi]
   1400065a7:	add    BYTE PTR [rbx+0x0],dh
   1400065aa:	pop    rsp
   1400065ab:	add    BYTE PTR [rax+rax*1+0x6f],al
   1400065af:	add    BYTE PTR [rbp+0x0],ch
   1400065b2:	(bad)  
   1400065b3:	add    BYTE PTR [rcx+0x0],ch
   1400065b6:	outs   dx,BYTE PTR ds:[rsi]
   1400065b7:	add    BYTE PTR [rbx+0x0],dh
   1400065ba:	add    BYTE PTR [rax],al
   1400065bc:	and    eax,0xa3a7377
   1400065c1:	add    BYTE PTR [rax],al
   1400065c3:	add    BYTE PTR [rax],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rbx+0x0],cl
   1400065ca:	add    BYTE PTR fs:[rbx+0x0],ah
   1400065ce:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400065d2:	ins    DWORD PTR es:[rdi],dx
   1400065d3:	add    BYTE PTR [rbp+0x0],ah
   1400065d6:	jae    0x1400065d8
   1400065d8:	add    BYTE PTR [rax],al
   1400065da:	add    BYTE PTR [rax],al
   1400065dc:	imul   esp,DWORD PTR [rbx+riz*2+0x0],0x41
   1400065e1:	add    BYTE PTR [rax+rax*1+0x74],ch
   1400065e5:	add    BYTE PTR [rbp+0x0],ah
   1400065e8:	jb     0x1400065ea
   1400065ea:	outs   dx,BYTE PTR ds:[rsi]
   1400065eb:	add    BYTE PTR [rcx+0x0],ah
   1400065ee:	je     0x1400065f0
   1400065f0:	add    BYTE PTR gs:[rax+rax*1+0x6f],al
   1400065f5:	add    BYTE PTR [rbp+0x0],ch
   1400065f8:	(bad)  
   1400065f9:	add    BYTE PTR [rcx+0x0],ch
   1400065fc:	outs   dx,BYTE PTR ds:[rsi]
   1400065fd:	add    BYTE PTR [rsi+0x0],cl
   140006600:	(bad)  
   140006601:	add    BYTE PTR [rbp+0x0],ch
   140006604:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   140006610:	rex.B ins BYTE PTR es:[rdi],dx
   140006612:	je     0x140006679
   140006614:	jb     0x140006684
   140006616:	(bad)  
   140006617:	je     0x14000667e
   140006619:	push   rdx
   14000661a:	gs (bad) 
   14000661c:	ins    BYTE PTR es:[rdi],dx
   14000661d:	ins    DWORD PTR es:[rdi],dx
   14000661e:	rex.WRX (bad) 
   140006620:	ins    DWORD PTR es:[rdi],dx
   140006621:	add    BYTE PTR gs:[rax],al
   140006624:	add    BYTE PTR [rax],al
   140006626:	add    BYTE PTR [rax],al
   140006628:	rex.WXB add BYTE PTR [r8+0x0],sil
   14000662c:	(bad)  
   14000662d:	add    BYTE PTR [rbx+0x0],dh
   140006630:	jae    0x140006632
   140006632:	ja     0x140006634
   140006634:	add    BYTE PTR fs:[rsi+0x0],cl
   140006638:	(bad)  
   140006639:	add    BYTE PTR [rbp+0x0],ch
   14000663c:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   140006648:	imul   esi,DWORD PTR [rax+0x61],0x73
   14000664c:	jae    0x1400066c5
   14000664e:	add    BYTE PTR fs:[rdx],cl
   140006651:	add    BYTE PTR [rax],al
   140006653:	add    BYTE PTR [rax],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rbp+0x0],dl
   14000665a:	jae    0x14000665c
   14000665c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006660:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140006664:	jae    0x140006666
   140006666:	je     0x140006668
   140006668:	add    BYTE PTR [rax],al
   14000666a:	add    BYTE PTR [rax],al
   14000666c:	sub    al,BYTE PTR [rax]
   14000666e:	add    BYTE PTR [rax],al
   140006670:	add    BYTE PTR fs:[rbp+0x0],ah
   140006674:	data16 add BYTE PTR [rcx+0x0],ah
   140006678:	jne    0x14000667a
   14000667a:	ins    BYTE PTR es:[rdi],dx
   14000667b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000667f:	add    BYTE PTR [rax+rax*1+0x43],al
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rax+0x0],ch
   14000668a:	outs   dx,DWORD PTR ds:[rsi]
   14000668b:	add    BYTE PTR [rbx+0x0],dh
   14000668e:	je     0x140006690
   140006690:	(bad)  
   140006691:	add    BYTE PTR [rax],al
   140006693:	add    BYTE PTR [rax],al
   140006695:	add    BYTE PTR [rax],al
   140006697:	add    BYTE PTR [rsi+0x6f],cl
   14000669a:	and    BYTE PTR [rdi+rax*2+0x54],dl
   14000669e:	and    BYTE PTR [rdi+0x61],dh
   1400066a1:	jae    0x1400066c3
   1400066a3:	movsxd esp,DWORD PTR [rcx+0x63]
   1400066a6:	push   0x2e2e6465
   1400066ab:	cs (bad) 
   1400066ad:	je     0x140006723
   1400066af:	gs ins DWORD PTR es:[rdi],dx
   1400066b1:	jo     0x140006727
   1400066b3:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   1400066ba:	jb     0x140006721
   1400066bc:	data16 jb 0x140006724
   1400066bf:	jae    0x140006729
   1400066c1:	or     al,BYTE PTR cs:[rax]
	...
   1400066d0:	rex.B je 0x140006747
   1400066d3:	gs ins DWORD PTR es:[rdi],dx
   1400066d5:	jo     0x14000674b
   1400066d7:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   1400066de:	addr32 gs je 0x140006702
   1400066e2:	jae    0x140006749
   1400066e4:	jb     0x14000675c
   1400066e6:	imul   esp,DWORD PTR [rbx+0x65],0x63697420
   1400066ed:	imul   esp,DWORD PTR [rbp+0x74],0x20
   1400066f1:	outs   dx,WORD PTR ds:[rsi]
   1400066f3:	jb     0x140006715
   1400066f5:	and    eax,0x72207377
   1400066fa:	gs je  0x140006772
   1400066fd:	jb     0x14000676d
   1400066ff:	gs and BYTE PTR fs:[rax],dh
   140006703:	js     0x14000672a
   140006705:	js     0x140006735
   140006707:	and    BYTE PTR [rax],ah
   140006709:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000670b:	outs   dx,BYTE PTR ds:[rsi]
   14000670c:	je     0x140006777
   14000670e:	outs   dx,BYTE PTR ds:[rsi]
   14000670f:	jne    0x14000677a
   140006711:	outs   dx,BYTE PTR ds:[rsi]
   140006712:	and    BYTE PTR [ecx+0x6e],ah
   140006716:	jns    0x14000678f
   140006718:	(bad)  
   140006719:	jns    0x140006749
   14000671b:	or     al,BYTE PTR [rax]
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rax+rax*1+0x68],dh
   140006723:	add    BYTE PTR [rcx+0x0],ch
   140006726:	jae    0x140006728
   140006728:	and    BYTE PTR [rax],al
   14000672a:	movsxd eax,DWORD PTR [rax]
   14000672c:	outs   dx,DWORD PTR ds:[rsi]
   14000672d:	add    BYTE PTR [rbp+0x0],ch
   140006730:	jo     0x140006732
   140006732:	jne    0x140006734
   140006734:	je     0x140006736
   140006736:	add    BYTE PTR gs:[rdx+0x0],dh
   14000673a:	add    BYTE PTR [rax],al
   14000673c:	add    BYTE PTR [rax],al
   14000673e:	add    BYTE PTR [rax],al
   140006740:	push   rdi
   140006741:	add    BYTE PTR [rdi+0x0],cl
   140006744:	push   rdx
   140006745:	add    BYTE PTR [rbx+0x0],cl
   140006748:	rex.RXB add BYTE PTR [r10+0x0],r10b
   14000674c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140006750:	push   rax
   140006751:	add    BYTE PTR [rax],al
   140006753:	add    BYTE PTR [rsi],ch
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    BYTE PTR [rax+0x0],cl
   14000675a:	outs   dx,DWORD PTR ds:[rsi]
   14000675b:	add    BYTE PTR [rbx+0x0],dh
   14000675e:	je     0x140006760
   140006760:	push   rsp
   140006761:	add    BYTE PTR [rdi+0x0],ch
   140006764:	push   rdx
   140006765:	add    BYTE PTR [rbp+0x0],ah
   140006768:	(bad)  
   140006769:	add    BYTE PTR [rax+rax*1+0x6d],ch
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rbx+0x0],dl
   140006772:	jo     0x140006774
   140006774:	outs   dx,BYTE PTR ds:[rsi]
   140006775:	add    BYTE PTR [rbp+0x0],cl
   140006778:	(bad)  
   140006779:	add    BYTE PTR [rax+0x0],dh
   14000677c:	jo     0x14000677e
   14000677e:	imul   eax,DWORD PTR [rax],0x67006e
   140006784:	jae    0x140006786
   140006786:	add    BYTE PTR [rax],al
   140006788:	rex.RB jb 0x1400067fd
   14000678b:	outs   dx,DWORD PTR ds:[rsi]
   14000678c:	jb     0x1400067ae
   14000678e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140006795:	imul   edi,DWORD PTR [rdx+0x69],0x6c20676e
   14000679c:	outs   dx,DWORD PTR ds:[rsi]
   14000679d:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400067a0:	imul   edi,DWORD PTR [rdx+0x65],0x756f2064
   1400067a7:	je     0x140006819
   1400067a9:	jne    0x14000681f
   1400067ab:	cmp    ah,BYTE PTR [rax]
   1400067ad:	xor    BYTE PTR [rax+0x25],bh
   1400067b0:	xor    BYTE PTR [rax],bh
   1400067b2:	js     0x1400067be
   1400067b4:	add    BYTE PTR [rax],al
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	sub    BYTE PTR [rsi],ah
   1400067ba:	and    BYTE PTR [rip+0x28207368],ah        # 0x16820db28
   1400067c0:	jae    0x140006823
   1400067c2:	ins    DWORD PTR es:[rdi],dx
   1400067c3:	movsxd esp,DWORD PTR [r11+0x6f]
   1400067c7:	jne    0x140006837
   1400067c9:	je     0x140006819
   1400067cb:	(bad)  
   1400067cc:	ins    DWORD PTR es:[rdi],dx
   1400067cd:	gs cmp eax,0x29737725
   1400067d3:	sub    DWORD PTR [rax],eax
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    BYTE PTR [rax],ch
   1400067d9:	and    BYTE PTR es:[rip+0x28207368],ah        # 0x16820db48
   1400067e0:	and    eax,0x253d7368
   1400067e5:	push   0x73772573
   1400067ea:	sub    DWORD PTR [rcx],ebp
   1400067ec:	add    BYTE PTR [rax],al
   1400067ee:	add    BYTE PTR [rax],al
   1400067f0:	and    eax,0x77257368
   1400067f5:	jae    0x1400067f7
   1400067f7:	add    BYTE PTR [rbx+0x65],dh
   1400067fa:	je     0x1400067fc
   1400067fc:	fs gs ins BYTE PTR es:[rdi],dx
   1400067ff:	gs je  0x140006867
   140006802:	add    BYTE PTR [rax],al
   140006804:	add    BYTE PTR [rax],al
   140006806:	add    BYTE PTR [rax],al
   140006808:	rex.RX (bad) 
   14000680a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006812:	and    eax,0x25207368
   140006817:	push   0x6e6f2073
   14000681c:	and    BYTE PTR [rip+0x203b7368],ah        # 0x1603bdb8a
   140006822:	gs jb  0x140006897
   140006825:	outs   dx,DWORD PTR ds:[rsi]
   140006826:	jb     0x140006848
   140006828:	xor    BYTE PTR [rax+0x25],bh
   14000682b:	js     0x14000685b
   14000682d:	or     al,BYTE PTR [rax]
   14000682f:	add    BYTE PTR [rsi+0x0],ch
   140006832:	add    BYTE PTR gs:[rdi+0x0],dh
   140006836:	and    BYTE PTR [rax],al
   140006838:	movsxd eax,DWORD PTR [rax]
   14000683a:	outs   dx,DWORD PTR ds:[rsi]
   14000683b:	add    BYTE PTR [rbp+0x0],ch
   14000683e:	jo     0x140006840
   140006840:	jne    0x140006842
   140006842:	je     0x140006844
   140006844:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140006850:	and    al,0x0
   140006852:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140006856:	rex.XB add BYTE PTR [r8+0x0],cl
   14000685a:	rex.WB add BYTE PTR [r14+0x0],cl
   14000685e:	add    BYTE PTR [r14],r13b
   140006861:	add    BYTE PTR [rcx+0x0],al
   140006864:	rex.XB add BYTE PTR [r11+0x0],al
	...
   140006870:	(bad)  
   140006871:	add    BYTE PTR [rbx+0x0],dl
   140006874:	add    BYTE PTR gs:[rax+rax*1+0x44],dh
   140006879:	add    BYTE PTR [rdi+0x0],ch
   14000687c:	ins    DWORD PTR es:[rdi],dx
   14000687d:	add    BYTE PTR [rcx+0x0],ah
   140006880:	imul   eax,DWORD PTR [rax],0x6e
   140006886:	add    BYTE PTR [rax],al
   140006888:	(bad)  
   140006889:	add    BYTE PTR [rbx+0x0],dl
   14000688c:	add    BYTE PTR gs:[rax+rax*1+0x52],dh
   140006891:	add    BYTE PTR [rbp+0x0],ah
   140006894:	(bad)  
   140006895:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006899:	add    BYTE PTR [rax],al
   14000689b:	add    BYTE PTR [rax],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    BYTE PTR [rsp+rax*2],bh
   1400068a2:	outs   dx,BYTE PTR ds:[rsi]
   1400068a3:	jae    0x1400068e9
   1400068a5:	outs   dx,DWORD PTR ds:[rsi]
   1400068a6:	ins    DWORD PTR es:[rdi],dx
   1400068a7:	(bad)  
   1400068a8:	imul   ebp,DWORD PTR [rsi+0x4e],0x3e656d61
   1400068af:	add    BYTE PTR [rdi],ch
   1400068b1:	add    BYTE PTR [rbp+0x0],cl
   1400068b4:	(bad)  
   1400068b5:	add    BYTE PTR [rax+0x0],dh
   1400068b8:	push   rbp
   1400068b9:	add    BYTE PTR [rbx+0x0],dh
   1400068bc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   1400068c8:	cmp    al,0x50
   1400068ca:	jb     0x140006935
   1400068cc:	outs   dx,BYTE PTR ds:[rsi]
   1400068cd:	movsxd ebp,DWORD PTR [rcx+0x70]
   1400068d0:	(bad)  
   1400068d1:	ins    BYTE PTR es:[rdi],dx
   1400068d2:	and    BYTE PTR ds:[rbx+0x41],bl
   1400068d6:	movsxd esp,DWORD PTR [rbx+0x6f]
   1400068d9:	jne    0x140006949
   1400068db:	je     0x14000693a
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    BYTE PTR [rdi],ch
   1400068e1:	add    BYTE PTR [rcx+0x0],al
   1400068e4:	add    BYTE PTR fs:[rax+rax*1+0x4b],ah
   1400068e9:	add    BYTE PTR [rax+rax*1+0x63],ah
   1400068ed:	add    BYTE PTR [rax],al
   1400068ef:	add    BYTE PTR [rdx+rdx*2],bh
   1400068f2:	gs (bad) 
   1400068f4:	ins    BYTE PTR es:[rdi],dx
   1400068f5:	ins    DWORD PTR es:[rdi],dx
   1400068f6:	rex.WRX (bad) 
   1400068f8:	ins    DWORD PTR es:[rdi],dx
   1400068f9:	gs and BYTE PTR ds:[rbx+0x4b],bl
   1400068fe:	movsxd ecx,DWORD PTR fs:[rsi+0x61]
   140006902:	ins    DWORD PTR es:[rdi],dx
   140006903:	gs pop rbp
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rdi],ch
   140006909:	add    BYTE PTR [rax+rax*1+0x65],al
   14000690d:	add    BYTE PTR [rax+rax*1+0x4b],ch
   140006911:	add    BYTE PTR [rax+rax*1+0x63],ah
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rdi],ch
   140006919:	add    BYTE PTR [rcx+0x0],al
   14000691c:	add    BYTE PTR fs:[rax+rax*1+0x4b],ah
   140006921:	add    BYTE PTR [rax+0x0],dh
   140006924:	(bad)  
   140006925:	add    BYTE PTR [rbx+0x0],dh
   140006928:	jae    0x14000692a
   14000692a:	ja     0x14000692c
   14000692c:	add    BYTE PTR fs:[rax],al
   14000692f:	add    BYTE PTR [rdx+rdx*2],bh
   140006932:	gs (bad) 
   140006934:	ins    BYTE PTR es:[rdi],dx
   140006935:	ins    DWORD PTR es:[rdi],dx
   140006936:	outs   dx,BYTE PTR ds:[rsi]
   140006937:	(bad)  
   140006938:	ins    DWORD PTR es:[rdi],dx
   140006939:	gs and BYTE PTR ds:[rbx+rcx*2],bh
   14000693e:	jo     0x1400069a1
   140006940:	jae    0x1400069b5
   140006942:	ja     0x1400069a8
   140006944:	rex.WRX (bad) 
   140006946:	ins    DWORD PTR es:[rdi],dx
   140006947:	gs add BYTE PTR ds:[rax],al
   14000694b:	add    BYTE PTR [rax],al
   14000694d:	add    BYTE PTR [rax],al
   14000694f:	add    BYTE PTR [rdi],ch
   140006951:	add    BYTE PTR [rax+rax*1+0x65],al
   140006955:	add    BYTE PTR [rax+rax*1+0x4b],ch
   140006959:	add    BYTE PTR [rax+0x0],dh
   14000695c:	(bad)  
   14000695d:	add    BYTE PTR [rbx+0x0],dh
   140006960:	jae    0x140006962
   140006962:	ja     0x140006964
   140006964:	add    BYTE PTR fs:[rax],al
   140006967:	add    BYTE PTR [rdi],ch
   140006969:	add    BYTE PTR [rbx+0x0],dl
   14000696c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006970:	jbe    0x140006972
   140006972:	add    BYTE PTR gs:[rdx+0x0],dh
   140006976:	add    BYTE PTR [rax],al
   140006978:	cmp    al,0x53
   14000697a:	gs jb  0x1400069f3
   14000697d:	gs jb  0x1400069ee
   140006980:	(bad)  
   140006981:	ins    DWORD PTR es:[rdi],dx
   140006982:	gs add BYTE PTR ds:[rax],al
   140006986:	add    BYTE PTR [rax],al
   140006988:	(bad)  
   140006989:	add    BYTE PTR [rbx+0x0],dl
   14000698c:	add    BYTE PTR gs:[rax+rax*1+0x4d],dh
   140006991:	add    BYTE PTR [rcx+0x0],ah
   140006994:	movsxd eax,DWORD PTR [rax]
   140006996:	push   0x61005000
   14000699b:	add    BYTE PTR [rbx+0x0],dh
   14000699e:	jae    0x1400069a0
   1400069a0:	ja     0x1400069a2
   1400069a2:	outs   dx,DWORD PTR ds:[rsi]
   1400069a3:	add    BYTE PTR [rdx+0x0],dh
   1400069a6:	add    BYTE PTR fs:[rax],al
   1400069a9:	add    BYTE PTR [rax],al
   1400069ab:	add    BYTE PTR [rax],al
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rdi],ch
   1400069b1:	add    BYTE PTR [rbx+0x0],dl
   1400069b4:	add    BYTE PTR gs:[rax+rax*1+0x43],dh
   1400069b9:	add    BYTE PTR [rdi+0x0],ch
   1400069bc:	ins    DWORD PTR es:[rdi],dx
   1400069bd:	add    BYTE PTR [rax+0x0],dh
   1400069c0:	jne    0x1400069c2
   1400069c2:	je     0x1400069c4
   1400069c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400069c8:	push   rax
   1400069c9:	add    BYTE PTR [rcx+0x0],ah
   1400069cc:	jae    0x1400069ce
   1400069ce:	jae    0x1400069d0
   1400069d0:	ja     0x1400069d2
   1400069d2:	outs   dx,DWORD PTR ds:[rsi]
   1400069d3:	add    BYTE PTR [rdx+0x0],dh
   1400069d6:	add    BYTE PTR fs:[rax],al
   1400069d9:	add    BYTE PTR [rax],al
   1400069db:	add    BYTE PTR [rax],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    BYTE PTR [rax+rdx*2],bh
   1400069e2:	(bad)  
   1400069e3:	jae    0x140006a58
   1400069e5:	ja     0x140006a56
   1400069e7:	jb     0x140006a4d
   1400069e9:	add    BYTE PTR ds:[rax],al
   1400069ec:	add    BYTE PTR [rax],al
   1400069ee:	add    BYTE PTR [rax],al
   1400069f0:	(bad)  
   1400069f1:	add    BYTE PTR [rdx+0x0],dl
   1400069f4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400069f8:	outs   dx,DWORD PTR ds:[rsi]
   1400069f9:	add    BYTE PTR [rsi+0x0],dh
   1400069fc:	add    BYTE PTR gs:[rdx+0x0],dl
   140006a00:	add    BYTE PTR gs:[rcx+0x0],ah
   140006a04:	ins    BYTE PTR es:[rdi],dx
   140006a05:	add    BYTE PTR [rbp+0x0],ch
	...
   140006a10:	cmp    al,0x52
   140006a12:	gs (bad) 
   140006a14:	ins    BYTE PTR es:[rdi],dx
   140006a15:	ins    DWORD PTR es:[rdi],dx
   140006a16:	rex.WRX (bad) 
   140006a18:	ins    DWORD PTR es:[rdi],dx
   140006a19:	gs add BYTE PTR ds:[rax],al
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	add    BYTE PTR [rdi],ch
   140006a21:	add    BYTE PTR [rax+rax*1+0x6f],al
   140006a25:	add    BYTE PTR [rbp+0x0],ch
   140006a28:	(bad)  
   140006a29:	add    BYTE PTR [rcx+0x0],ch
   140006a2c:	outs   dx,BYTE PTR ds:[rsi]
   140006a2d:	add    BYTE PTR [rax],al
   140006a2f:	add    BYTE PTR [rbx+0x44],bl
   140006a32:	outs   dx,DWORD PTR ds:[rsi]
   140006a33:	ins    DWORD PTR es:[rdi],dx
   140006a34:	(bad)  
   140006a35:	imul   ebp,DWORD PTR [rsi+0x4e],0x5d656d61
   140006a3c:	add    BYTE PTR [rax],al
   140006a3e:	add    BYTE PTR [rax],al
   140006a40:	(bad)  
   140006a41:	add    BYTE PTR [rbx+0x0],al
   140006a44:	push   0x6e006100
   140006a49:	add    BYTE PTR [rdi+0x0],ah
   140006a4c:	add    BYTE PTR gs:[rax+0x0],dl
   140006a50:	(bad)  
   140006a51:	add    BYTE PTR [rbx+0x0],dh
   140006a54:	jae    0x140006a56
   140006a56:	ja     0x140006a58
   140006a58:	outs   dx,DWORD PTR ds:[rsi]
   140006a59:	add    BYTE PTR [rdx+0x0],dh
   140006a5c:	add    BYTE PTR fs:[rax],al
   140006a5f:	add    BYTE PTR [rdi+rcx*2],bh
   140006a62:	ins    BYTE PTR es:[rdi],dx
   140006a63:	fs push rax
   140006a65:	(bad)  
   140006a66:	jae    0x140006adb
   140006a68:	ja     0x140006ace
   140006a6a:	and    BYTE PTR ds:[rsi+rcx*2],bh
   140006a6e:	gs ja  0x140006ac1
   140006a71:	(bad)  
   140006a72:	jae    0x140006ae7
   140006a74:	ja     0x140006ada
   140006a76:	add    BYTE PTR ds:[rdi],ch
   140006a79:	add    BYTE PTR [rax+rax*1+0x69],cl
   140006a7d:	add    BYTE PTR [rbx+0x0],dh
   140006a80:	je     0x140006a82
   140006a82:	push   rdx
   140006a83:	add    BYTE PTR [rbp+0x0],ah
   140006a86:	(bad)  
   140006a87:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006a8b:	add    BYTE PTR [rsi+0x0],al
   140006a8e:	ins    BYTE PTR es:[rdi],dx
   140006a8f:	add    BYTE PTR [rcx+0x0],ah
   140006a92:	add    BYTE PTR [ebx+0x0],dh
   140006a96:	add    BYTE PTR [rax],al
   140006a98:	sub    BYTE PTR [rsi+0x6f],ch
   140006a9b:	and    BYTE PTR [rcx+0x72],ah
   140006a9e:	addr32 jae 0x140006aca
   140006aa1:	add    BYTE PTR [rax],al
   140006aa3:	add    BYTE PTR [rax],al
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    BYTE PTR [rdi],ch
   140006aa9:	add    BYTE PTR [rbx+0x0],dl
   140006aac:	add    BYTE PTR gs:[rax+rax*1+0x52],dh
   140006ab1:	add    BYTE PTR [rbp+0x0],ah
   140006ab4:	(bad)  
   140006ab5:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006ab9:	add    BYTE PTR [rsi+0x0],al
   140006abc:	ins    BYTE PTR es:[rdi],dx
   140006abd:	add    BYTE PTR [rcx+0x0],ah
   140006ac0:	add    BYTE PTR [ebx+0x0],dh
   140006ac4:	add    BYTE PTR [rax],al
   140006ac6:	add    BYTE PTR [rax],al
   140006ac8:	cmp    al,0x72
   140006aca:	gs (bad) 
   140006acc:	ins    BYTE PTR es:[rdi],dx
   140006acd:	ins    DWORD PTR es:[rdi],dx
   140006ace:	and    BYTE PTR ds:[rsi+riz*2],bh
   140006ad2:	ins    BYTE PTR es:[rdi],dx
   140006ad3:	(bad)  
   140006ad4:	and    BYTE PTR ds:[ebx+0x66],bl
   140006ad9:	ins    BYTE PTR es:[rdi],dx
   140006ada:	(bad)  
   140006adb:	addr32 pop rbp
   140006add:	and    BYTE PTR [rbx+0x66],bl
   140006ae0:	ins    BYTE PTR es:[rdi],dx
   140006ae1:	(bad)  
   140006ae2:	addr32 pop rbp
   140006ae4:	and    BYTE PTR [rbx+0x2e],bl
   140006ae7:	cs cs pop rbp
   140006aea:	add    BYTE PTR [rax],al
   140006aec:	add    BYTE PTR [rax],al
   140006aee:	add    BYTE PTR [rax],al
   140006af0:	(bad)  
   140006af1:	add    BYTE PTR [rcx+0x0],al
   140006af4:	add    BYTE PTR fs:[rax+rax*1+0x52],ah
   140006af9:	add    BYTE PTR [rbp+0x0],ah
   140006afc:	(bad)  
   140006afd:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006b01:	add    BYTE PTR [rsi+0x0],al
   140006b04:	ins    BYTE PTR es:[rdi],dx
   140006b05:	add    BYTE PTR [rcx+0x0],ah
   140006b08:	add    BYTE PTR [ebx+0x0],dh
   140006b0c:	add    BYTE PTR [rax],al
   140006b0e:	add    BYTE PTR [rax],al
   140006b10:	(bad)  
   140006b11:	add    BYTE PTR [rax+rax*1+0x65],al
   140006b15:	add    BYTE PTR [rax+rax*1+0x52],ch
   140006b19:	add    BYTE PTR [rbp+0x0],ah
   140006b1c:	(bad)  
   140006b1d:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006b21:	add    BYTE PTR [rsi+0x0],al
   140006b24:	ins    BYTE PTR es:[rdi],dx
   140006b25:	add    BYTE PTR [rcx+0x0],ah
   140006b28:	add    BYTE PTR [ebx+0x0],dh
   140006b2c:	add    BYTE PTR [rax],al
   140006b2e:	add    BYTE PTR [rax],al
   140006b30:	(bad)  
   140006b31:	add    BYTE PTR [rax+rax*1+0x75],al
   140006b35:	add    BYTE PTR [rbp+0x0],ch
   140006b38:	jo     0x140006b3a
   140006b3a:	push   rbx
   140006b3b:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006b3f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006b43:	add    BYTE PTR [rax],al
   140006b45:	add    BYTE PTR [rax],al
   140006b47:	add    BYTE PTR [rdi],ch
   140006b49:	add    BYTE PTR [rcx+0x0],al
   140006b4c:	add    BYTE PTR fs:[rax+rax*1+0x48],ah
   140006b51:	add    BYTE PTR [rdi+0x0],ch
   140006b54:	jae    0x140006b56
   140006b56:	je     0x140006b58
   140006b58:	push   rsp
   140006b59:	add    BYTE PTR [rdi+0x0],ch
   140006b5c:	push   rdx
   140006b5d:	add    BYTE PTR [rbp+0x0],ah
   140006b60:	(bad)  
   140006b61:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006b65:	add    BYTE PTR [rbp+0x0],cl
   140006b68:	(bad)  
   140006b69:	add    BYTE PTR [rax+0x0],dh
   140006b6c:	add    BYTE PTR [rax],al
   140006b6e:	add    BYTE PTR [rax],al
   140006b70:	cmp    al,0x68
   140006b72:	outs   dx,DWORD PTR ds:[rsi]
   140006b73:	jae    0x140006be9
   140006b75:	and    BYTE PTR ds:[rdx+rsi*2],bh
   140006b79:	gs (bad) 
   140006b7b:	ins    BYTE PTR es:[rdi],dx
   140006b7c:	ins    DWORD PTR es:[rdi],dx
   140006b7d:	add    BYTE PTR ds:[rax],al
   140006b80:	(bad)  
   140006b81:	add    BYTE PTR [rax+rax*1+0x65],al
   140006b85:	add    BYTE PTR [rax+rax*1+0x48],ch
   140006b89:	add    BYTE PTR [rdi+0x0],ch
   140006b8c:	jae    0x140006b8e
   140006b8e:	je     0x140006b90
   140006b90:	push   rsp
   140006b91:	add    BYTE PTR [rdi+0x0],ch
   140006b94:	push   rdx
   140006b95:	add    BYTE PTR [rbp+0x0],ah
   140006b98:	(bad)  
   140006b99:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006b9d:	add    BYTE PTR [rbp+0x0],cl
   140006ba0:	(bad)  
   140006ba1:	add    BYTE PTR [rax+0x0],dh
   140006ba4:	add    BYTE PTR [rax],al
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	(bad)  
   140006ba9:	add    BYTE PTR [rbx+0x0],dl
   140006bac:	add    BYTE PTR gs:[rax+rax*1+0x45],dh
   140006bb1:	add    BYTE PTR [rsi+0x0],ch
   140006bb4:	movsxd eax,DWORD PTR [rax]
   140006bb6:	push   rsp
   140006bb7:	add    BYTE PTR [rcx+0x0],bh
   140006bba:	jo     0x140006bbc
   140006bbc:	add    BYTE PTR gs:[rcx+0x0],al
   140006bc0:	je     0x140006bc2
   140006bc2:	je     0x140006bc4
   140006bc4:	jb     0x140006bc6
   140006bc6:	add    BYTE PTR [rax],al
   140006bc8:	cmp    al,0x64
   140006bca:	outs   dx,DWORD PTR ds:[rsi]
   140006bcb:	ins    DWORD PTR es:[rdi],dx
   140006bcc:	(bad)  
   140006bcd:	imul   ebp,DWORD PTR [rsi+0x6e],0x3e656d61
   140006bd4:	and    BYTE PTR [riz*2+0x7974636e],bh
   140006bdb:	jo     0x140006c42
   140006bdd:	jae    0x140006c1d
   140006bdf:	add    BYTE PTR [rdi],ch
   140006be1:	add    BYTE PTR [rdi+0x0],al
   140006be4:	add    BYTE PTR gs:[rax+rax*1+0x45],dh
   140006be9:	add    BYTE PTR [rsi+0x0],ch
   140006bec:	movsxd eax,DWORD PTR [rax]
   140006bee:	push   rsp
   140006bef:	add    BYTE PTR [rcx+0x0],bh
   140006bf2:	jo     0x140006bf4
   140006bf4:	add    BYTE PTR gs:[rcx+0x0],al
   140006bf8:	je     0x140006bfa
   140006bfa:	je     0x140006bfc
   140006bfc:	jb     0x140006bfe
   140006bfe:	add    BYTE PTR [rax],al
   140006c00:	cmp    al,0x64
   140006c02:	outs   dx,DWORD PTR ds:[rsi]
   140006c03:	ins    DWORD PTR es:[rdi],dx
   140006c04:	(bad)  
   140006c05:	imul   ebp,DWORD PTR [rsi+0x6e],0x3e656d61
   140006c0c:	add    BYTE PTR [rax],al
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	(bad)  
   140006c11:	add    BYTE PTR [rcx+0x0],al
   140006c14:	add    BYTE PTR fs:[rax+rax*1+0x45],ah
   140006c19:	add    BYTE PTR [rsi+0x0],ch
   140006c1c:	movsxd eax,DWORD PTR [rax]
   140006c1e:	push   rsp
   140006c1f:	add    BYTE PTR [rcx+0x0],bh
   140006c22:	jo     0x140006c24
   140006c24:	add    BYTE PTR gs:[rcx+0x0],al
   140006c28:	je     0x140006c2a
   140006c2a:	je     0x140006c2c
   140006c2c:	jb     0x140006c2e
   140006c2e:	add    BYTE PTR [rax],al
   140006c30:	(bad)  
   140006c31:	add    BYTE PTR [rax+rax*1+0x65],al
   140006c35:	add    BYTE PTR [rax+rax*1+0x45],ch
   140006c39:	add    BYTE PTR [rsi+0x0],ch
   140006c3c:	movsxd eax,DWORD PTR [rax]
   140006c3e:	push   rsp
   140006c3f:	add    BYTE PTR [rcx+0x0],bh
   140006c42:	jo     0x140006c44
   140006c44:	add    BYTE PTR gs:[rcx+0x0],al
   140006c48:	je     0x140006c4a
   140006c4a:	je     0x140006c4c
   140006c4c:	jb     0x140006c4e
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	(bad)  
   140006c51:	add    BYTE PTR [rdi],bh
   140006c53:	add    BYTE PTR [rax],al
   140006c55:	add    BYTE PTR [rax],al
   140006c57:	add    BYTE PTR [rdi],ch
   140006c59:	add    BYTE PTR [rax+0x0],ch
   140006c5c:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   140006c61:	add    BYTE PTR [rax],al
   140006c63:	add    BYTE PTR [rax],al
   140006c65:	add    BYTE PTR [rax],al
   140006c67:	add    BYTE PTR [rip+0x25207377],ah        # 0x16520dfe4
   140006c6d:	push   0xa73
   140006c72:	add    BYTE PTR [rax],al
   140006c74:	or     DWORD PTR [rip+0xa7377],esp        # 0x1400adff1
   140006c7a:	add    BYTE PTR [rax],al
   140006c7c:	add    BYTE PTR [rax],al
   140006c7e:	add    BYTE PTR [rax],al
   140006c80:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006c84:	outs   dx,BYTE PTR ds:[rsi]
   140006c85:	add    BYTE PTR [rbp+0x0],ah
	...
   140006c90:	push   rbx
   140006c91:	add    BYTE PTR [rbp+0x0],ah
   140006c94:	outs   dx,BYTE PTR ds:[rsi]
   140006c95:	add    BYTE PTR [rax+rax*1+0x41],ah
   140006c99:	add    BYTE PTR [rax+rax*1+0x64],ah
   140006c9d:	add    BYTE PTR [rdx+0x0],dh
   140006ca0:	add    BYTE PTR gs:[rbx+0x0],dh
   140006ca4:	jae    0x140006ca6
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	push   rsp
   140006ca9:	add    BYTE PTR [rbx+0x0],ah
   140006cac:	jo     0x140006cae
   140006cae:	push   rbx
   140006caf:	add    BYTE PTR [rbp+0x0],dh
   140006cb2:	jo     0x140006cb4
   140006cb4:	jo     0x140006cb6
   140006cb6:	outs   dx,DWORD PTR ds:[rsi]
   140006cb7:	add    BYTE PTR [rdx+0x0],dh
   140006cba:	je     0x140006cbc
   140006cbc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140006cc1:	add    BYTE PTR [rax],al
   140006cc3:	add    BYTE PTR [rax],al
   140006cc5:	add    BYTE PTR [rax],al
   140006cc7:	add    BYTE PTR [rax+rax*1+0x65],al
   140006ccb:	add    BYTE PTR [rax+rax*1+0x65],ch
   140006ccf:	add    BYTE PTR [rdi+0x0],ah
   140006cd2:	(bad)  
   140006cd3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   140006cdf:	add    BYTE PTR [rsi+0x0],cl
   140006ce2:	movsxd eax,DWORD PTR [rax]
   140006ce4:	push   rbx
   140006ce5:	add    BYTE PTR [rbp+0x0],dh
   140006ce8:	jo     0x140006cea
   140006cea:	jo     0x140006cec
   140006cec:	outs   dx,DWORD PTR ds:[rsi]
   140006ced:	add    BYTE PTR [rdx+0x0],dh
   140006cf0:	je     0x140006cf2
   140006cf2:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140006cf7:	add    BYTE PTR [rsi+0x0],al
   140006cfa:	add    BYTE PTR [r11+0x0],dl
   140006cfe:	push   rsp
	...
   140006d07:	add    BYTE PTR [rdx+0x0],dl
   140006d0a:	add    BYTE PTR [r8+r8*1],sil
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	and    BYTE PTR [rip+0x7377],ah        # 0x14000e08d
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	xor    BYTE PTR [rax+0x25],bh
   140006d1b:	xor    BYTE PTR [rdx],dh
   140006d1d:	js     0x140006d3f
   140006d1f:	and    eax,0x7732312d
   140006d24:	jae    0x140006d46
   140006d26:	and    eax,0xa7377
   140006d2b:	add    BYTE PTR [rax],al
   140006d2d:	add    BYTE PTR [rax],al
   140006d2f:	add    BYTE PTR [rax],ah
   140006d31:	pop    rbx
   140006d32:	jne    0x140006da2
   140006d34:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140006d38:	outs   dx,BYTE PTR ds:[rsi]
   140006d39:	add    BYTE PTR [rax],al
   140006d3b:	add    BYTE PTR [rdx],bh
   140006d3d:	and    BYTE PTR [rax],dh
   140006d3f:	js     0x140006d66
   140006d41:	js     0x140006d43
   140006d43:	add    BYTE PTR [rbp+0x0],bl
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	push   rdx
   140006d49:	add    BYTE PTR [rbp+0x0],ah
   140006d4c:	(bad)  
   140006d4d:	add    BYTE PTR [rax+rax*1+0x6d],ch
   140006d51:	add    BYTE PTR [rsi+0x0],al
   140006d54:	ins    BYTE PTR es:[rdi],dx
   140006d55:	add    BYTE PTR [rcx+0x0],ah
   140006d58:	add    BYTE PTR [ebx+0x0],dh
   140006d5c:	add    BYTE PTR [rax],al
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	rex.XB (bad) 
   140006d62:	outs   dx,BYTE PTR ds:[rsi]
   140006d63:	outs   dx,BYTE PTR ds:[rsi]
   140006d64:	outs   dx,DWORD PTR ds:[rsi]
   140006d65:	je     0x140006d87
   140006d67:	(bad)  
   140006d68:	fs and BYTE PTR fs:[rbx+0x74],dh
   140006d6d:	jb     0x140006dd8
   140006d6f:	outs   dx,BYTE PTR ds:[rsi]
   140006d70:	and    BYTE PTR [eip+0x2820646c],ah        # 0x16820d1e3
   140006d77:	and    eax,0x2e297377
   140006d7c:	and    BYTE PTR [rax],ah
   140006d7e:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006d80:	je     0x140006da2
   140006d82:	outs   dx,BYTE PTR gs:[rsi]
   140006d84:	outs   dx,DWORD PTR ds:[rsi]
   140006d85:	jne    0x140006dee
   140006d87:	push   0x6d656d20
   140006d8c:	outs   dx,DWORD PTR ds:[rsi]
   140006d8d:	jb     0x140006e08
   140006d8f:	or     al,BYTE PTR cs:[rax]
   140006d92:	add    BYTE PTR [rax],al
   140006d94:	add    BYTE PTR [rax],al
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006d9a:	and    BYTE PTR [rbp+0x61],ch
   140006d9d:	je     0x140006e02
   140006d9f:	push   0x726f6620
   140006da4:	and    BYTE PTR [rip+0xa2e7377],ah        # 0x14a2ee121
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	add    BYTE PTR [rax],al
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	rex.RX (bad) 
   140006db2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006dba:	jno    0x140006e31
   140006dbc:	gs jb  0x140006e38
   140006dbf:	and    BYTE PTR [rsi+0x61],dh
   140006dc2:	ins    BYTE PTR es:[rdi],dx
   140006dc3:	jne    0x140006e2a
   140006dc5:	and    BYTE PTR [rip+0x203a7377],ah        # 0x1603ae142
   140006dcb:	xor    BYTE PTR [rax+0x25],bh
   140006dce:	js     0x140006dda
	...
   140006dd8:	rex.RX (bad) 
   140006dda:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006de2:	(bad)  
   140006de3:	ins    BYTE PTR es:[rdi],dx
   140006de4:	ins    BYTE PTR es:[rdi],dx
   140006de5:	outs   dx,DWORD PTR ds:[rsi]
   140006de6:	movsxd esp,DWORD PTR [rcx+0x74]
   140006de9:	and    BYTE PTR gs:[rdx+0x75],ah
   140006ded:	data16 data16 gs jb 0x140006e12
   140006df2:	outs   dx,DWORD PTR ds:[rsi]
   140006df3:	data16 and BYTE PTR [rbx+0x69],dh
   140006df7:	jp     0x140006e5e
   140006df9:	and    BYTE PTR [rax],ch
   140006dfb:	xor    BYTE PTR [rax+0x25],bh
   140006dfe:	js     0x140006e29
   140006e00:	or     al,BYTE PTR [rax]
   140006e02:	add    BYTE PTR [rax],al
   140006e04:	add    BYTE PTR [rax],al
   140006e06:	add    BYTE PTR [rax],al
   140006e08:	rex.RX (bad) 
   140006e0a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006e12:	jno    0x140006e89
   140006e14:	gs jb  0x140006e90
   140006e17:	and    BYTE PTR [rip+0x203a7377],ah        # 0x1603ae194
   140006e1d:	xor    BYTE PTR [rax+0x25],bh
   140006e20:	js     0x140006e2c
   140006e22:	add    BYTE PTR [rax],al
   140006e24:	add    BYTE PTR [rax],al
   140006e26:	add    BYTE PTR [rax],al
   140006e28:	rex.RX (bad) 
   140006e2a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006e32:	(bad)  
   140006e33:	ins    BYTE PTR es:[rdi],dx
   140006e34:	ins    BYTE PTR es:[rdi],dx
   140006e35:	outs   dx,DWORD PTR ds:[rsi]
   140006e36:	movsxd esp,DWORD PTR [rcx+0x74]
   140006e39:	and    BYTE PTR gs:[rbx+0x74],dh
   140006e3d:	jb     0x140006ea8
   140006e3f:	outs   dx,BYTE PTR ds:[rsi]
   140006e40:	and    BYTE PTR [edx+0x6c],ah
   140006e44:	outs   dx,DWORD PTR ds:[rsi]
   140006e45:	(bad)  
   140006e46:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140006e4a:	ja     0x140006ebe
   140006e4c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x2e737725
   140006e54:	or     al,BYTE PTR [rax]
   140006e56:	add    BYTE PTR [rax],al
   140006e58:	rex.RX (bad) 
   140006e5a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006e62:	ja     0x140006ed6
   140006e64:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x20737725
   140006e6c:	jbe    0x140006ecf
   140006e6e:	ins    BYTE PTR es:[rdi],dx
   140006e6f:	jne    0x140006ed6
   140006e71:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140006e75:	jb     0x140006edc
   140006e77:	imul   esi,DWORD PTR [ebx+0x74],0x203a7972
   140006e7f:	xor    BYTE PTR [rax+0x25],bh
   140006e82:	js     0x140006eb2
   140006e84:	or     al,BYTE PTR [rax]
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006e8a:	je     0x140006ef1
   140006e8c:	jb     0x140006eae
   140006e8e:	jo     0x140006ef1
   140006e90:	jae    0x140006f05
   140006e92:	ja     0x140006f03
   140006e94:	jb     0x140006efa
   140006e96:	and    BYTE PTR [rsi+0x6f],ah
   140006e99:	jb     0x140006ebb
   140006e9b:	and    eax,0x203a7377
	...
   140006ea8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006eaa:	je     0x140006f11
   140006eac:	jb     0x140006ece
   140006eae:	and    eax,0x70207377
   140006eb3:	(bad)  
   140006eb4:	jae    0x140006f29
   140006eb6:	ja     0x140006f27
   140006eb8:	jb     0x140006f1e
   140006eba:	cmp    ah,BYTE PTR [rax]
   140006ebc:	add    BYTE PTR [rax],al
   140006ebe:	add    BYTE PTR [rax],al
   140006ec0:	rex.RB
   140006ec1:	rex.WRXB
   140006ec2:	rex.RX and BYTE PTR [rdi+0x6e],r13b
   140006ec6:	and    BYTE PTR [rcx+0x6e],ch
   140006ec9:	jo     0x140006f40
   140006ecb:	je     0x140006efb
   140006ecd:	and    BYTE PTR [rax],ah
   140006ecf:	rex.B (bad) 
   140006ed1:	outs   dx,DWORD PTR ds:[rsi]
   140006ed2:	jb     0x140006f48
   140006ed4:	gs fs or al,BYTE PTR cs:[rax]
   140006ed9:	add    BYTE PTR [rax],al
   140006edb:	add    BYTE PTR [rax],al
   140006edd:	add    BYTE PTR [rax],al
   140006edf:	add    BYTE PTR [rdx],cl
   140006ee1:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006ee3:	ja     0x140006f05
   140006ee5:	jb     0x140006f4c
   140006ee7:	sub    eax,0x65746e65
   140006eec:	jb     0x140006f0e
   140006eee:	jo     0x140006f51
   140006ef0:	jae    0x140006f65
   140006ef2:	ja     0x140006f63
   140006ef4:	jb     0x140006f5a
   140006ef6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140006efa:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006efd:	imul   si,WORD PTR [rdx+0x6d],0x203a
   140006f03:	add    BYTE PTR [rax],al
   140006f05:	add    BYTE PTR [rax],al
   140006f07:	add    BYTE PTR [rax+0x61],dl
   140006f0a:	jae    0x140006f7f
   140006f0c:	ja     0x140006f7d
   140006f0e:	jb     0x140006f74
   140006f10:	jae    0x140006f32
   140006f12:	outs   dx,DWORD PTR fs:[rsi]
   140006f14:	and    BYTE PTR [rsi+0x6f],ch
   140006f17:	je     0x140006f39
   140006f19:	ins    DWORD PTR es:[rdi],dx
   140006f1a:	(bad)  
   140006f1b:	je     0x140006f80
   140006f1d:	push   0xa2e
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	rex.RX (bad) 
   140006f2a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006f32:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
   140006f3a:	ins    BYTE PTR es:[rdi],dx
   140006f3b:	imul   ebp,DWORD PTR [rsi+0x65],0x68636520
   140006f42:	outs   dx,DWORD PTR ds:[rsi]
   140006f43:	and    BYTE PTR [rsi+0x6f],ah
   140006f46:	jb     0x140006f68
   140006f48:	jo     0x140006fab
   140006f4a:	jae    0x140006fbf
   140006f4c:	ja     0x140006fbd
   140006f4e:	jb     0x140006fb4
   140006f50:	and    BYTE PTR [rbp+0x6e],ah
   140006f53:	je     0x140006fc7
   140006f55:	jns    0x140006f77
   140006f57:	outs   dx,DWORD PTR ds:[rsi]
   140006f58:	data16 and BYTE PTR [rip+0x203a7377],ah        # 0x1603ae2d6
   140006f5f:	xor    BYTE PTR [rax+0x25],bh
   140006f62:	js     0x140006f92
   140006f64:	or     al,BYTE PTR [rax]
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	rex.RX (bad) 
   140006f6a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006f72:	jb     0x140006fd9
   140006f74:	je     0x140006fe8
   140006f76:	imul   esp,DWORD PTR [rbp+0x76],0x75632065
   140006f7d:	jb     0x140006ff1
   140006f7f:	outs   dx,BYTE PTR gs:[rsi]
   140006f81:	je     0x140006fa3
   140006f83:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006f86:	jae    0x140006ff7
   140006f88:	ins    BYTE PTR es:[rdi],dx
   140006f89:	and    BYTE PTR gs:[rbx+0x65],dh
   140006f8d:	je     0x140007003
   140006f8f:	imul   ebp,DWORD PTR [rsi+0x67],0x30203a73
   140006f96:	js     0x140006fbd
   140006f98:	js     0x140006fa4
   140006f9a:	add    BYTE PTR [rax],al
   140006f9c:	add    BYTE PTR [rax],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	rex.RX (bad) 
   140006fa2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006faa:	outs   dx,DWORD PTR ds:[rsi]
   140006fab:	(bad)  
   140006fac:	je     0x14000700f
   140006fae:	imul   ebp,DWORD PTR [rsi+0x20],0x736e6f63
   140006fb5:	outs   dx,DWORD PTR ds:[rsi]
   140006fb6:	ins    BYTE PTR es:[rdi],dx
   140006fb7:	and    BYTE PTR gs:[rax+0x61],ch
   140006fbb:	outs   dx,BYTE PTR ds:[rsi]
   140006fbc:	fs ins BYTE PTR es:[rdi],dx
   140006fbe:	and    BYTE PTR gs:[rbx+0x6f],dh
   140006fc2:	and    BYTE PTR [rdi+0x65],dh
   140006fc5:	and    BYTE PTR [rbx+0x6f],ah
   140006fc8:	jne    0x140007036
   140006fca:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
   140006fcf:	(bad)  
   140006fd0:	(bad)  
   140006fd1:	ins    BYTE PTR es:[rdi],dx
   140006fd2:	and    BYTE PTR gs:[rcx+rbp*2+0x6e],ch
   140006fd7:	and    BYTE PTR gs:[rcx+0x6e],ch
   140006fdb:	jo     0x140007052
   140006fdd:	je     0x140006fff
   140006fdf:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
   140006fe3:	cmp    ah,BYTE PTR [rax]
   140006fe5:	xor    BYTE PTR [rax+0x25],bh
   140006fe8:	js     0x140006ff4
   140006fea:	add    BYTE PTR [rax],al
   140006fec:	add    BYTE PTR [rax],al
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	rex.RX (bad) 
   140006ff2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140006ffa:	(bad)  
   140006ffb:	ins    BYTE PTR es:[rdi],dx
   140006ffc:	ins    BYTE PTR es:[rdi],dx
   140006ffd:	outs   dx,DWORD PTR ds:[rsi]
   140006ffe:	movsxd esp,DWORD PTR [rcx+0x74]
   140007001:	and    BYTE PTR gs:[rbp+0x65],ch
   140007005:	ins    DWORD PTR es:[rdi],dx
   140007006:	outs   dx,DWORD PTR ds:[rsi]
   140007007:	jb     0x140007082
   140007009:	and    BYTE PTR [rsi+0x6f],ah
   14000700c:	jb     0x14000702e
   14000700e:	and    eax,0x70207377
   140007013:	(bad)  
   140007014:	jae    0x140007089
   140007016:	ja     0x140007087
   140007018:	jb     0x14000707e
   14000701a:	or     al,BYTE PTR cs:[rax]
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rbx+0x65],cl
   140007022:	jb     0x140007086
   140007024:	gs jb  0x140007096
   140007027:	jae    0x140007029
   140007029:	add    BYTE PTR [rax],al
   14000702b:	add    BYTE PTR [rax],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rbx+0x61],al
   140007032:	outs   dx,BYTE PTR ds:[rsi]
   140007033:	(bad)  
   140007034:	je     0x140007056
   140007036:	movsxd ebp,DWORD PTR [rax+0x61]
   140007039:	outs   dx,BYTE PTR ds:[rsi]
   14000703a:	and    BYTE PTR gs:[eax+0x61],dh
   14000703f:	jae    0x1400070b4
   140007041:	ja     0x1400070b2
   140007043:	jb     0x1400070a9
   140007045:	and    BYTE PTR [rdi+0x69],dh
   140007048:	je     0x1400070b2
   14000704a:	outs   dx,DWORD PTR ds:[rsi]
   14000704b:	jne    0x1400070c1
   14000704d:	and    BYTE PTR [rdi],ch
   14000704f:	outs   dx,DWORD PTR fs:[rsi]
   140007051:	ins    DWORD PTR es:[rdi],dx
   140007052:	(bad)  
   140007053:	imul   ebp,DWORD PTR [rsi+0x2e],0x79000a
   14000705a:	outs   dx,DWORD PTR ds:[rsi]
   14000705b:	add    BYTE PTR [rbp+0x0],dh
   14000705e:	jb     0x140007060
   140007060:	and    BYTE PTR [rax],al
   140007062:	outs   dx,DWORD PTR ds:[rsi]
   140007063:	add    BYTE PTR [rax+rax*1+0x64],ch
	...
   14000706f:	add    BYTE PTR [rcx+0x0],bh
   140007072:	outs   dx,DWORD PTR ds:[rsi]
   140007073:	add    BYTE PTR [rbp+0x0],dh
   140007076:	jb     0x140007078
   140007078:	and    BYTE PTR [rax],al
   14000707a:	outs   dx,BYTE PTR ds:[rsi]
   14000707b:	add    BYTE PTR [rbp+0x0],ah
   14000707e:	ja     0x140007080
	...
   140007088:	rex.RX (bad) 
   14000708a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140007092:	jbe    0x1400070f5
   140007094:	ins    BYTE PTR es:[rdi],dx
   140007095:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x61702065
   14000709d:	jae    0x140007112
   14000709f:	ja     0x140007110
   1400070a1:	jb     0x140007107
   1400070a3:	jae    0x1400070c5
   1400070a5:	outs   dx,WORD PTR ds:[rsi]
   1400070a7:	jb     0x1400070c9
   1400070a9:	jo     0x14000710c
   1400070ab:	jae    0x140007120
   1400070ad:	ja     0x14000711e
   1400070af:	jb     0x140007115
   1400070b1:	and    BYTE PTR [rbx+0x68],ah
   1400070b4:	(bad)  
   1400070b5:	outs   dx,BYTE PTR ds:[rsi]
   1400070b6:	gs or  al,BYTE PTR cs:[eax]
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rax+0x61],dl
   1400070c2:	jae    0x140007137
   1400070c4:	ja     0x140007135
   1400070c6:	jb     0x14000712c
   1400070c8:	and    BYTE PTR [rbx+0x68],ah
   1400070cb:	(bad)  
   1400070cc:	outs   dx,BYTE PTR ds:[rsi]
   1400070cd:	gs fs or al,BYTE PTR cs:[eax]
   1400070d3:	add    BYTE PTR [rax],al
   1400070d5:	add    BYTE PTR [rax],al
   1400070d7:	add    BYTE PTR [rsi+0x61],al
   1400070da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400070e2:	movsxd ebp,DWORD PTR [rax+0x61]
   1400070e5:	outs   dx,BYTE PTR ds:[rsi]
   1400070e6:	and    BYTE PTR gs:[eax+0x61],dh
   1400070eb:	jae    0x140007160
   1400070ed:	ja     0x14000715e
   1400070ef:	jb     0x140007155
   1400070f1:	cmp    ah,BYTE PTR [rax]
   1400070f3:	xor    BYTE PTR [rax+0x25],bh
   1400070f6:	js     0x140007102
	...
   140007100:	rex.RX (bad) 
   140007102:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000710a:	(bad)  
   14000710b:	ins    BYTE PTR es:[rdi],dx
   14000710c:	ins    BYTE PTR es:[rdi],dx
   14000710d:	outs   dx,DWORD PTR ds:[rsi]
   14000710e:	movsxd esp,DWORD PTR [rcx+0x74]
   140007111:	and    BYTE PTR gs:[rip+0x622d646c],ah        # 0x1a22dd584
   140007118:	jns    0x14000718e
   14000711a:	and    BYTE PTR gs:[rax+0x61],dh
   14000711e:	jae    0x140007193
   140007120:	ja     0x140007191
   140007122:	jb     0x140007188
   140007124:	and    BYTE PTR [rbx+0x68],ah
   140007127:	(bad)  
   140007128:	outs   dx,BYTE PTR ds:[rsi]
   140007129:	and    BYTE PTR gs:[edx+0x65],dh
   14000712e:	jno    0x1400071a5
   140007130:	gs jae 0x1400071a7
   140007133:	or     al,BYTE PTR cs:[rax]
   140007136:	add    BYTE PTR [rax],al
   140007138:	rex.RX (bad) 
   14000713a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140007142:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007145:	outs   dx,BYTE PTR ds:[rsi]
   140007146:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
   14000714b:	outs   dx,DWORD PTR ds:[rsi]
   14000714c:	and    BYTE PTR [rdx+0x65],dh
   14000714f:	imul   esi,DWORD PTR [ebx+0x74],0x203a7972
   140007157:	and    eax,0x30282064
   14000715c:	js     0x140007183
   14000715e:	js     0x140007189
   140007160:	and    BYTE PTR [rdx],cl
	...
   14000716e:	add    BYTE PTR [rax],al
   140007170:	push   rbx
   140007171:	add    BYTE PTR [rcx+0x0],bh
   140007174:	jae    0x140007176
   140007176:	je     0x140007178
   140007178:	add    BYTE PTR gs:[rbp+0x0],ch
   14000717c:	pop    rsp
   14000717d:	add    BYTE PTR [rbx+0x0],al
   140007180:	jne    0x140007182
   140007182:	jb     0x140007184
   140007184:	jb     0x140007186
   140007186:	add    BYTE PTR gs:[rsi+0x0],ch
   14000718a:	je     0x14000718c
   14000718c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007190:	outs   dx,BYTE PTR ds:[rsi]
   140007191:	add    BYTE PTR [rax+rax*1+0x72],dh
   140007195:	add    BYTE PTR [rdi+0x0],ch
   140007198:	ins    BYTE PTR es:[rdi],dx
   140007199:	add    BYTE PTR [rbx+0x0],dl
   14000719c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400071a1:	add    BYTE PTR [rbx+0x0],al
   1400071a4:	outs   dx,DWORD PTR ds:[rsi]
   1400071a5:	add    BYTE PTR [rsi+0x0],ch
   1400071a8:	je     0x1400071aa
   1400071aa:	jb     0x1400071ac
   1400071ac:	outs   dx,DWORD PTR ds:[rsi]
   1400071ad:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400071b1:	add    BYTE PTR [rax+rax*1+0x73],cl
   1400071b5:	add    BYTE PTR [rcx+0x0],ah
   1400071b8:	pop    rsp
   1400071b9:	add    BYTE PTR [rbx+0x0],cl
   1400071bc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400071c0:	(bad)  
   1400071c1:	add    BYTE PTR [rbp+0x0],ah
   1400071c4:	jb     0x1400071c6
   1400071c6:	outs   dx,DWORD PTR ds:[rsi]
   1400071c7:	add    BYTE PTR [rbx+0x0],dh
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	rex.RX (bad) 
   1400071d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400071da:	movsxd esi,DWORD PTR [rdx+0x65]
   1400071dd:	(bad)  
   1400071de:	je     0x140007245
   1400071e0:	and    BYTE PTR [rbx+0x65],cl
   1400071e3:	jb     0x140007247
   1400071e5:	gs jb  0x140007257
   1400071e8:	jae    0x14000720a
   1400071ea:	imul   esp,DWORD PTR [rbp+0x79],0x3a
   1400071ee:	and    BYTE PTR [rip+0x30282064],ah        # 0x170289258
   1400071f4:	js     0x14000721b
   1400071f6:	js     0x140007221
   1400071f8:	or     al,BYTE PTR [rax]
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	add    BYTE PTR [rdi+0x0],r13b
   140007204:	ins    DWORD PTR es:[rdi],dx
   140007205:	add    BYTE PTR [rcx+0x0],ah
   140007208:	imul   eax,DWORD PTR [rax],0x73006e
   14000720e:	add    BYTE PTR [rax],al
   140007210:	rex.RX (bad) 
   140007212:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000721a:	movsxd esi,DWORD PTR [rdx+0x65]
   14000721d:	(bad)  
   14000721e:	je     0x140007285
   140007220:	and    BYTE PTR [rip+0x6b207377],ah        # 0x1ab20e59d
   140007226:	gs jns 0x140007263
   140007229:	and    BYTE PTR [rax],dh
   14000722b:	js     0x140007252
   14000722d:	js     0x140007239
   14000722f:	add    BYTE PTR [rsi+0x61],al
   140007232:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000723a:	movsxd esi,DWORD PTR [rdx+0x65]
   14000723d:	(bad)  
   14000723e:	je     0x1400072a5
   140007240:	and    BYTE PTR [rbx+0x65],ch
   140007243:	jns    0x140007265
   140007245:	and    eax,0x203a7377
   14000724a:	xor    BYTE PTR [rax+0x25],bh
   14000724d:	js     0x140007259
   14000724f:	add    BYTE PTR [rsi+0x61],al
   140007252:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000725a:	outs   dx,DWORD PTR ds:[rsi]
   14000725b:	jo     0x1400072c2
   14000725d:	outs   dx,BYTE PTR ds:[rsi]
   14000725e:	and    BYTE PTR [rbx+0x65],cl
   140007261:	jb     0x1400072c5
   140007263:	gs jb  0x1400072d5
   140007266:	jae    0x140007288
   140007268:	rex.WXB
   140007269:	gs jns 0x1400072a6
   14000726c:	and    BYTE PTR [rax],dh
   14000726e:	js     0x140007295
   140007270:	js     0x14000727c
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	rex.RB jb 0x1400072ed
   14000727b:	outs   dx,DWORD PTR ds:[rsi]
   14000727c:	jb     0x14000729e
   14000727e:	addr32 gs je 0x1400072f6
   140007282:	imul   ebp,DWORD PTR [rsi+0x67],0x73797320
   140007289:	je     0x1400072f0
   14000728b:	ins    DWORD PTR es:[rdi],dx
   14000728c:	and    BYTE PTR [rax+0x61],dh
   14000728f:	je     0x1400072f9
   140007291:	and    BYTE PTR [rax],dh
   140007293:	js     0x1400072ba
   140007295:	js     0x140007297
   140007297:	add    BYTE PTR [rsi+0x0],ch
   14000729a:	je     0x14000729c
   14000729c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   1400072a1:	add    BYTE PTR [rsi],ch
   1400072a3:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400072a7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b80095b5
   1400072b5:	add    BYTE PTR [rdi],ch
   1400072b7:	add    BYTE PTR [rip+0x20006400],ah        # 0x16000d6bd
   1400072bd:	add    BYTE PTR [rip+0x20003e00],ch        # 0x16000b0c3
   1400072c3:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e5c9
   1400072c9:	add    BYTE PTR [rax],al
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b80095d5
   1400072d5:	add    BYTE PTR [rdi],ch
   1400072d7:	add    BYTE PTR [rip+0x6400],ah        # 0x14000d6dd
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400072e3:	rex.WRXB jo 0x14000734b
   1400072e6:	outs   dx,BYTE PTR ds:[rsi]
   1400072e7:	push   rax
   1400072e8:	outs   dx,DWORD PTR ds:[rsi]
   1400072e9:	ins    BYTE PTR es:[rdi],dx
   1400072ea:	imul   esp,DWORD PTR [rbx+0x79],0x206e6f20
   1400072f1:	data16 (bad) 
   1400072f3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   1400072fb:	push   0x73772520
   140007300:	or     al,BYTE PTR [rax]
   140007302:	add    BYTE PTR [rax],al
   140007304:	add    BYTE PTR [rax],al
   140007306:	add    BYTE PTR [rax],al
   140007308:	rex.WR jae 0x14000736c
   14000730b:	push   rcx
   14000730c:	jne    0x140007373
   14000730e:	jb     0x140007389
   140007310:	push   rsp
   140007311:	jb     0x140007388
   140007313:	jae    0x140007389
   140007315:	gs rex.R outs dx,DWORD PTR fs:[rsi]
   140007319:	ins    DWORD PTR es:[rdi],dx
   14000731a:	(bad)  
   14000731b:	imul   ebp,DWORD PTR [rsi+0x49],0x426f666e
   140007322:	jns    0x140007372
   140007324:	(bad)  
   140007325:	ins    DWORD PTR es:[rdi],dx
   140007326:	and    BYTE PTR gs:[rdi+0x6e],ch
   14000732a:	and    BYTE PTR [rip+0x66205a77],ah        # 0x1a620cda7
   140007330:	(bad)  
   140007331:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   140007339:	push   0x73772520
   14000733e:	or     al,BYTE PTR [rax]
   140007340:	add    BYTE PTR [rbp+0x0],r8b
   140007344:	push   rbx
   140007345:	add    BYTE PTR [rip+0x42004300],ch        # 0x18200b64b
   14000734b:	add    BYTE PTR [rbx+0x0],al
   14000734e:	sub    eax,0x52004300
   140007353:	add    BYTE PTR [rbx+0x0],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	add    BYTE PTR [rbp+0x0],r8b
   14000735c:	push   rbx
   14000735d:	add    BYTE PTR [rip+0x42004300],ch        # 0x18200b663
   140007363:	add    BYTE PTR [rbx+0x0],al
   140007366:	sub    eax,0x44004d00
   14000736b:	add    BYTE PTR [rip+0x52000000],dh        # 0x192007371
   140007371:	add    BYTE PTR [rbx+0x0],al
   140007374:	xor    al,0x0
   140007376:	sub    eax,0x4d004800
   14000737b:	add    BYTE PTR [rcx+0x0],al
   14000737e:	rex.XB add BYTE PTR [rip+0x44004d00],bpl        # 0x18400c085
   140007385:	add    BYTE PTR [rip+0x0],dh        # 0x14000738b
   14000738b:	add    BYTE PTR [rax],al
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    BYTE PTR [rcx+0x0],al
   140007392:	add    BYTE PTR [r11+0x0],r10b
   140007396:	xor    DWORD PTR [rax],eax
   140007398:	xor    al,BYTE PTR [rax]
   14000739a:	cmp    BYTE PTR [rax],al
   14000739c:	sub    eax,0x54004300
   1400073a1:	add    BYTE PTR [rbx+0x0],dl
   1400073a4:	sub    eax,0x4d004800
   1400073a9:	add    BYTE PTR [rcx+0x0],al
   1400073ac:	rex.XB add BYTE PTR [rip+0x48005300],bpl        # 0x18800c6b3
   1400073b3:	add    BYTE PTR [rcx+0x0],al
   1400073b6:	xor    DWORD PTR [rax],eax
   1400073b8:	sub    eax,0x36003900
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rcx+0x0],al
   1400073c2:	add    BYTE PTR [r11+0x0],r10b
   1400073c6:	xor    al,BYTE PTR [rax]
   1400073c8:	xor    eax,0x2d003600
   1400073cd:	add    BYTE PTR [rbx+0x0],al
   1400073d0:	push   rsp
   1400073d1:	add    BYTE PTR [rbx+0x0],dl
   1400073d4:	sub    eax,0x4d004800
   1400073d9:	add    BYTE PTR [rcx+0x0],al
   1400073dc:	rex.XB add BYTE PTR [rip+0x48005300],bpl        # 0x18800c6e3
   1400073e3:	add    BYTE PTR [rcx+0x0],al
   1400073e6:	xor    DWORD PTR [rax],eax
   1400073e8:	sub    eax,0x36003900
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rip+0x2053],ah        # 0x140009448
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    BYTE PTR [rsi],ch
   1400073f9:	add    BYTE PTR [rip+0x6400],ah        # 0x14000d7ff
   1400073ff:	add    BYTE PTR [rbp+0x0],al
   140007402:	jb     0x140007404
   140007404:	jb     0x140007406
   140007406:	outs   dx,DWORD PTR ds:[rsi]
   140007407:	add    BYTE PTR [rdx+0x0],dh
   14000740a:	sub    BYTE PTR [rax],al
   14000740c:	and    eax,0x78002300
   140007411:	add    BYTE PTR [rcx],ch
   140007413:	add    BYTE PTR [rdx],bh
   140007415:	add    BYTE PTR [rax],ah
   140007417:	add    BYTE PTR [rsi+0x0],ah
   14000741a:	(bad)  
   14000741b:	add    BYTE PTR [rcx+0x0],ch
   14000741e:	ins    BYTE PTR es:[rdi],dx
   14000741f:	add    BYTE PTR [rbp+0x0],ah
   140007422:	add    BYTE PTR fs:[rax],ah
   140007425:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140007429:	add    BYTE PTR [rax],ah
   14000742b:	add    BYTE PTR [rbx+0x0],ah
   14000742e:	outs   dx,DWORD PTR ds:[rsi]
   14000742f:	add    BYTE PTR [rsi+0x0],ch
   140007432:	jae    0x140007434
   140007434:	je     0x140007436
   140007436:	jb     0x140007438
   140007438:	jne    0x14000743a
   14000743a:	movsxd eax,DWORD PTR [rax]
   14000743c:	je     0x14000743e
   14000743e:	and    BYTE PTR [rax],al
   140007440:	outs   dx,DWORD PTR ds:[rsi]
   140007441:	add    BYTE PTR [rbp+0x0],dh
   140007444:	je     0x140007446
   140007446:	jo     0x140007448
   140007448:	jne    0x14000744a
   14000744a:	je     0x14000744c
   14000744c:	and    BYTE PTR [rax],al
   14000744e:	movsxd eax,DWORD PTR [rax]
   140007450:	outs   dx,DWORD PTR ds:[rsi]
   140007451:	add    BYTE PTR [rax+rax*1+0x65],ah
   140007455:	add    BYTE PTR [rax],ah
   140007457:	add    BYTE PTR [rax+0x0],dh
   14000745a:	(bad)  
   14000745b:	add    BYTE PTR [rdi+0x0],ah
   14000745e:	add    BYTE PTR gs:[rsi],ch
   140007461:	add    BYTE PTR [rdx],cl
	...
   14000746f:	add    BYTE PTR [rbp+0x0],al
   140007472:	jb     0x140007474
   140007474:	jb     0x140007476
   140007476:	outs   dx,DWORD PTR ds:[rsi]
   140007477:	add    BYTE PTR [rdx+0x0],dh
   14000747a:	sub    BYTE PTR [rax],al
   14000747c:	and    eax,0x78002300
   140007481:	add    BYTE PTR [rcx],ch
   140007483:	add    BYTE PTR [rdx],bh
   140007485:	add    BYTE PTR [rax],ah
   140007487:	add    BYTE PTR [rbx+0x0],dh
   14000748a:	je     0x14000748c
   14000748c:	(bad)  
   14000748d:	add    BYTE PTR [rdx+0x0],dh
   140007490:	je     0x140007492
   140007492:	and    BYTE PTR [rax],al
   140007494:	outs   dx,DWORD PTR ds:[rsi]
   140007495:	add    BYTE PTR [rsi+0x0],ah
   140007498:	and    BYTE PTR [rax],al
   14000749a:	movsxd eax,DWORD PTR [rax]
   14000749c:	outs   dx,DWORD PTR ds:[rsi]
   14000749d:	add    BYTE PTR [rsi+0x0],ch
   1400074a0:	jbe    0x1400074a2
   1400074a2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400074a6:	jae    0x1400074a8
   1400074a8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400074ae:	and    BYTE PTR [rax],al
   1400074b0:	je     0x1400074b2
   1400074b2:	outs   dx,DWORD PTR ds:[rsi]
   1400074b3:	add    BYTE PTR [rax],ah
   1400074b5:	add    BYTE PTR [rbp+0x0],ch
   1400074b8:	jne    0x1400074ba
   1400074ba:	ins    BYTE PTR es:[rdi],dx
   1400074bb:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400074bf:	add    BYTE PTR [rdx+0x0],ah
   1400074c2:	jns    0x1400074c4
   1400074c4:	je     0x1400074c6
   1400074c6:	add    BYTE PTR gs:[rax],ah
   1400074c9:	add    BYTE PTR [rbx+0x0],dh
   1400074cc:	je     0x1400074ce
   1400074ce:	jb     0x1400074d0
   1400074d0:	imul   eax,DWORD PTR [rax],0x67006e
   1400074d6:	and    BYTE PTR [rax],al
   1400074d8:	data16 add BYTE PTR [rcx+0x0],ah
   1400074dc:	imul   eax,DWORD PTR [rax],0x65006c
   1400074e2:	add    BYTE PTR fs:[rsi],ch
   1400074e5:	add    BYTE PTR [rdx],cl
	...
   1400074ef:	add    BYTE PTR [rbp+0x0],al
   1400074f2:	jb     0x1400074f4
   1400074f4:	jb     0x1400074f6
   1400074f6:	outs   dx,DWORD PTR ds:[rsi]
   1400074f7:	add    BYTE PTR [rdx+0x0],dh
   1400074fa:	sub    BYTE PTR [rax],al
   1400074fc:	and    eax,0x78002300
   140007501:	add    BYTE PTR [rcx],ch
   140007503:	add    BYTE PTR [rdx],bh
   140007505:	add    BYTE PTR [rax],ah
   140007507:	add    BYTE PTR [rbp+0x0],ch
   14000750a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000750e:	outs   dx,DWORD PTR ds:[rsi]
   14000750f:	add    BYTE PTR [rdx+0x0],dh
   140007512:	jns    0x140007514
   140007514:	and    BYTE PTR [rax],al
   140007516:	(bad)  
   140007517:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000751b:	add    BYTE PTR [rdi+0x0],ch
   14000751e:	movsxd eax,DWORD PTR [rax]
   140007520:	(bad)  
   140007521:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007525:	add    BYTE PTR [rdi+0x0],ch
   140007528:	outs   dx,BYTE PTR ds:[rsi]
   140007529:	add    BYTE PTR [rax],ah
   14000752b:	add    BYTE PTR [rax],ch
   14000752d:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400e133
   140007533:	add    BYTE PTR [rax],ah
   140007535:	add    BYTE PTR [rdx+0x0],ah
   140007538:	jns    0x14000753a
   14000753a:	je     0x14000753c
   14000753c:	add    BYTE PTR gs:[rbx+0x0],dh
   140007540:	sub    DWORD PTR [rax],eax
   140007542:	and    BYTE PTR [rax],al
   140007544:	data16 add BYTE PTR [rcx+0x0],ah
   140007548:	imul   eax,DWORD PTR [rax],0x65006c
   14000754e:	add    BYTE PTR fs:[rsi],ch
   140007551:	add    BYTE PTR [rdx],cl
	...
   14000755f:	add    BYTE PTR [rbp+0x0],al
   140007562:	jb     0x140007564
   140007564:	jb     0x140007566
   140007566:	outs   dx,DWORD PTR ds:[rsi]
   140007567:	add    BYTE PTR [rdx+0x0],dh
   14000756a:	sub    BYTE PTR [rax],al
   14000756c:	and    eax,0x78002300
   140007571:	add    BYTE PTR [rcx],ch
   140007573:	add    BYTE PTR [rdx],bh
   140007575:	add    BYTE PTR [rax],ah
   140007577:	add    BYTE PTR [rbx+0x0],dh
   14000757a:	je     0x14000757c
   14000757c:	jb     0x14000757e
   14000757e:	imul   eax,DWORD PTR [rax],0x67006e
   140007584:	and    BYTE PTR [rax],al
   140007586:	movsxd eax,DWORD PTR [rax]
   140007588:	outs   dx,DWORD PTR ds:[rsi]
   140007589:	add    BYTE PTR [rbp+0x0],ch
   14000758c:	jo     0x14000758e
   14000758e:	outs   dx,DWORD PTR ds:[rsi]
   14000758f:	add    BYTE PTR [rbx+0x0],dh
   140007592:	imul   eax,DWORD PTR [rax],0x690074
   140007598:	outs   dx,DWORD PTR ds:[rsi]
   140007599:	add    BYTE PTR [rsi+0x0],ch
   14000759c:	and    BYTE PTR [rax],al
   14000759e:	data16 add BYTE PTR [rcx+0x0],ah
   1400075a2:	imul   eax,DWORD PTR [rax],0x65006c
   1400075a8:	add    BYTE PTR fs:[rsi],ch
   1400075ab:	add    BYTE PTR [rdx],cl
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rbp+0x0],al
   1400075b2:	jb     0x1400075b4
   1400075b4:	jb     0x1400075b6
   1400075b6:	outs   dx,DWORD PTR ds:[rsi]
   1400075b7:	add    BYTE PTR [rdx+0x0],dh
   1400075ba:	and    BYTE PTR [rax],al
   1400075bc:	ins    BYTE PTR es:[rdi],dx
   1400075bd:	add    BYTE PTR [rdi+0x0],ch
   1400075c0:	(bad)  
   1400075c1:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400075c5:	add    BYTE PTR [rsi+0x0],ch
   1400075c8:	add    BYTE PTR [eax],ah
   1400075cb:	add    BYTE PTR [rdx+0x0],dh
   1400075ce:	add    BYTE PTR gs:[rbx+0x0],dh
   1400075d2:	outs   dx,DWORD PTR ds:[rsi]
   1400075d3:	add    BYTE PTR [rbp+0x0],dh
   1400075d6:	jb     0x1400075d8
   1400075d8:	movsxd eax,DWORD PTR [rax]
   1400075da:	add    BYTE PTR gs:[rdx],bh
   1400075dd:	add    BYTE PTR [rax],ah
   1400075df:	add    BYTE PTR [rax],dh
   1400075e1:	add    BYTE PTR [rax+0x0],bh
   1400075e4:	and    eax,0x38003000
   1400075e9:	add    BYTE PTR [rax+0x0],bh
   1400075ec:	or     al,BYTE PTR [rax]
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	outs   dx,DWORD PTR ds:[rsi]
   1400075f1:	(bad)  
   1400075f2:	push   0x65
   1400075f4:	movsxd esi,DWORD PTR [rbx+rax*2+0x6c]
   1400075f8:	(bad)  
   1400075f9:	jae    0x14000766e
   1400075fb:	cmp    eax,0x2a
   140007600:	and    eax,0x6c003200
   140007605:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140007609:	add    BYTE PTR [rax],ah
   14000760b:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300de11
   140007611:	add    BYTE PTR [rdx],cl
	...
   140007623:	add    BYTE PTR [rax+0x559f39],cl
   140007629:	add    BYTE PTR [rax],al
   14000762b:	add    BYTE PTR [rdx],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rbx],ah
   140007631:	add    BYTE PTR [rax],al
   140007633:	add    BYTE PTR [rax],ah
   140007635:	ja     0x140007637
   140007637:	add    BYTE PTR [rax],ah
   140007639:	imul   eax,DWORD PTR [rax],0x0
   14000763c:	add    BYTE PTR [rax],al
   14000763e:	add    BYTE PTR [rax],al
   140007640:	mov    BYTE PTR [rcx],bh
   140007642:	lahf   
   140007643:	push   rbp
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	or     eax,0xe0000000
   14000764d:	add    DWORD PTR [rax],eax
   14000764f:	add    BYTE PTR [rax+0x77],bl
   140007652:	add    BYTE PTR [rax],al
   140007654:	pop    rax
   140007655:	imul   eax,DWORD PTR [rax],0x0
	...
   140007680:	movabs al,ds:0x0
	...
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax],cl
   1400076d9:	nop
   1400076da:	add    BYTE PTR [rax+0x1],al
	...
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rax+0x64],cl
   1400076f2:	add    BYTE PTR [rax+0x1],al
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rax+0x64],dl
   1400076fa:	add    BYTE PTR [rax+0x1],al
   1400076fd:	add    BYTE PTR [rax],al
   1400076ff:	add    BYTE PTR [rax+0x1400064],dl
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rax+rax*1],ah
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	add    BYTE PTR [rax],al
   14000770e:	add    BYTE PTR [rax],al
   140007710:	add    BYTE PTR [rip+0x0],dh        # 0x140007716
	...
   14000771e:	add    BYTE PTR [rax],al
   140007720:	push   rdx
   140007721:	push   rbx
   140007722:	rex.R push rbx
   140007724:	(bad)  
   140007725:	int3   
   140007726:	adc    al,dh
   140007728:	nop
   140007729:	es xchg esi,eax
   14000772b:	rex.R mov ecx,0x1f82aceb
   140007731:	push   0x1c715
   140007736:	add    BYTE PTR [rax],al
   140007738:	imul   esi,DWORD PTR [rbx+0x65],0x74
   14000773c:	jne    0x1400077ae
   14000773e:	cs jo  0x1400077a5
   140007741:	(bad)  
	...
   140007756:	add    BYTE PTR [rax],al
   140007758:	rex.RXB
   140007759:	rex.XB push r12
   14000775b:	rex.WR add BYTE PTR [rax],r10b
   14000775e:	add    BYTE PTR [rax],al
   140007760:	call   0x16e0077b2
   140007765:	je     0x1400077cc
   140007767:	js     0x1400077dd
   140007769:	and    al,0x6d
   14000776b:	outs   dx,BYTE PTR ds:[rsi]
   14000776c:	add    BYTE PTR [rax],al
   14000776e:	add    BYTE PTR [rax],al
   140007770:	lock pop rbp
   140007772:	add    BYTE PTR [rax],al
   140007774:	adc    al,BYTE PTR [rax]
   140007776:	add    BYTE PTR [rax],al
   140007778:	cs je  0x1400077e0
   14000777b:	js     0x1400077f1
   14000777d:	and    al,0x6d
   14000777f:	outs   dx,BYTE PTR ds:[rsi]
   140007780:	and    al,0x30
   140007782:	xor    BYTE PTR [rax],al
   140007784:	adc    BYTE PTR [rsi+0x0],bl
   140007787:	add    BYTE PTR [rax+0x0],dl
   14000778a:	add    BYTE PTR [rax],al
   14000778c:	cs je  0x1400077f4
   14000778f:	js     0x140007805
   140007791:	and    al,0x78
   140007793:	add    BYTE PTR [rax],al
   140007795:	(bad)  
   140007796:	add    BYTE PTR [rax],al
   140007798:	rex.W add al,0x0
   14000779b:	add    BYTE PTR [rsi],ch
   14000779d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rax+0x64],cl
   1400077aa:	add    BYTE PTR [rax],al
   1400077ac:	adc    BYTE PTR [rax],al
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	xor    BYTE PTR cs:[rax],dh
   1400077b3:	movsxd esp,DWORD PTR [rsi+0x67]
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	pop    rax
   1400077b9:	add    BYTE PTR fs:[rax],al
   1400077bc:	or     BYTE PTR [rax],al
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	cs rex.XB push r10
   1400077c3:	push   rsp
   1400077c4:	and    al,0x58
   1400077c6:	rex.XB
   1400077c7:	add    BYTE PTR [r8],al
   1400077ca:	add    BYTE PTR [rax],al
   1400077cc:	(bad)  
   1400077cd:	add    BYTE PTR fs:[rax],al
   1400077d0:	or     BYTE PTR [rax],al
   1400077d2:	add    BYTE PTR [rax],al
   1400077d4:	cs rex.XB push r10
   1400077d7:	push   rsp
   1400077d8:	and    al,0x58
   1400077da:	rex.XB
   1400077db:	rex.B
   1400077dc:	add    BYTE PTR [r8],al
   1400077df:	add    BYTE PTR [rax+0x64],ch
   1400077e2:	add    BYTE PTR [rax],al
   1400077e4:	or     BYTE PTR [rax],al
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	cs rex.XB push r10
   1400077eb:	push   rsp
   1400077ec:	and    al,0x58
   1400077ee:	rex.XB pop r10
   1400077f0:	add    BYTE PTR [rax],al
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	jo     0x14000785a
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	or     BYTE PTR [rax],al
   1400077fa:	add    BYTE PTR [rax],al
   1400077fc:	cs rex.XB push r10
   1400077ff:	push   rsp
   140007800:	and    al,0x58
   140007802:	rex.WB
   140007803:	add    BYTE PTR [r8],al
   140007806:	add    BYTE PTR [rax],al
   140007808:	js     0x14000786e
   14000780a:	add    BYTE PTR [rax],al
   14000780c:	or     BYTE PTR [rax],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	cs rex.XB push r10
   140007813:	push   rsp
   140007814:	and    al,0x58
   140007816:	rex.WB
   140007817:	rex.B
   140007818:	add    BYTE PTR [r8],al
   14000781b:	add    BYTE PTR [rax+0x8000064],al
   140007821:	add    BYTE PTR [rax],al
   140007823:	add    BYTE PTR [rsi],ch
   140007825:	rex.XB push r10
   140007827:	push   rsp
   140007828:	and    al,0x58
   14000782a:	rex.WB pop r9
   14000782c:	add    BYTE PTR [rax],al
   14000782e:	add    BYTE PTR [rax],al
   140007830:	mov    BYTE PTR [rax+rax*1+0x0],ah
   140007834:	or     BYTE PTR [rax],al
   140007836:	add    BYTE PTR [rax],al
   140007838:	cs rex.XB push r10
   14000783b:	push   rsp
   14000783c:	and    al,0x58
   14000783e:	rex.WB pop r10
   140007840:	add    BYTE PTR [rax],al
   140007842:	add    BYTE PTR [rax],al
   140007844:	nop
   140007845:	add    BYTE PTR fs:[rax],al
   140007848:	nop
   140007849:	add    BYTE PTR [rax],al
   14000784b:	add    BYTE PTR [rsi],ch
   14000784d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax],ah
   140007859:	add    BYTE PTR gs:[rax],al
   14000785c:	add    BYTE PTR [rdx],dl
   14000785e:	add    BYTE PTR [rax],al
   140007860:	cs jb  0x1400078c7
   140007863:	(bad)  
   140007864:	je     0x1400078c7
   140007866:	add    BYTE PTR [rax],al
   140007868:	and    BYTE PTR [rdi+0x0],dh
   14000786b:	add    BYTE PTR [rax],bl
   14000786d:	add    al,BYTE PTR [rax]
   14000786f:	add    BYTE PTR [rsi],ch
   140007871:	jb     0x1400078d7
   140007873:	(bad)  
   140007874:	je     0x1400078d7
   140007876:	and    al,0x7a
   140007878:	jp     0x1400078f4
   14000787a:	fs (bad) 
   14000787c:	add    BYTE PTR [eax],al
   14000787f:	add    BYTE PTR [rax],bh
   140007881:	jns    0x140007883
   140007883:	add    ah,dl
   140007885:	add    al,0x0
   140007887:	add    BYTE PTR [rsi],ch
   140007889:	js     0x1400078ef
   14000788b:	(bad)  
   14000788c:	je     0x1400078ef
   14000788e:	add    BYTE PTR [rax],al
   140007890:	or     al,0x7e
   140007892:	add    BYTE PTR [rax],al
   140007894:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007895:	add    DWORD PTR [rax],eax
   140007897:	add    BYTE PTR [rsi],ch
   140007899:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400078a1:	add    BYTE PTR [rax],al
   1400078a3:	add    BYTE PTR [rax+0x1400007f],dh
   1400078a9:	add    BYTE PTR [rax],al
   1400078ab:	add    BYTE PTR [rsi],ch
   1400078ad:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    al,cl
   1400078b9:	jg     0x1400078bb
   1400078bb:	add    BYTE PTR [rax+0x4],cl
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   1400078c9:	add    BYTE PTR [rax],al
   1400078cb:	add    BYTE PTR [rax],dl
   1400078cd:	test   BYTE PTR [rax],al
   1400078cf:	add    BYTE PTR [rax],cl
   1400078d1:	or     DWORD PTR [rax],eax
   1400078d3:	add    BYTE PTR [rsi],ch
   1400078d5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400078dd:	add    BYTE PTR [rax],al
   1400078df:	add    BYTE PTR [rax],al
   1400078e1:	nop
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	push   rbp
   1400078e5:	(bad)  
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	cs fs (bad) 
   1400078eb:	je     0x14000794e
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rax-0x6a],ah
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	nop
   1400078f5:	adc    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rsi],ch
   1400078f9:	(bad)  
   1400078fb:	jae    0x1400078fd
   1400078fd:	add    BYTE PTR [rax],al
   1400078ff:	add    BYTE PTR [rax],al
   140007901:	mov    al,0x0
   140007903:	add    ah,bh
   140007905:	add    eax,DWORD PTR [rax]
   140007907:	add    BYTE PTR [rsi],ch
   140007909:	jo     0x14000796f
   14000790b:	(bad)  
   14000790c:	je     0x14000796f
   14000790e:	add    BYTE PTR [rax],al
   140007910:	add    al,al
   140007912:	add    BYTE PTR [rax],al
   140007914:	test   al,0x0
   140007916:	add    BYTE PTR [rax],al
   140007918:	cs jb  0x14000798e
   14000791b:	jb     0x140007980
   14000791d:	and    al,0x30
   14000791f:	xor    DWORD PTR [rax],eax
   140007921:	add    BYTE PTR [rax],al
   140007923:	add    BYTE PTR [rax+0x580000c0],dh
   140007929:	add    al,0x0
   14000792b:	add    BYTE PTR [rsi],ch
   14000792d:	jb     0x1400079a2
   14000792f:	jb     0x140007994
   140007931:	and    al,0x30
   140007933:	xor    al,BYTE PTR [rax]
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rcx],al
   140007939:	adc    BYTE PTR [rsi],al
   14000793b:	add    BYTE PTR [rax],dl
   14000793d:	or     DWORD PTR fs:[rax],eax
   140007940:	adc    BYTE PTR [rax+rcx*1],dh
   140007943:	add    BYTE PTR [rax],dl
   140007945:	push   rdx
   140007946:	or     al,0x70
   140007948:	sbb    DWORD PTR [rip+0x74170007],esp        # 0x1b4177955
   14000794e:	xor    DWORD PTR [rax],eax
   140007950:	(bad)  
   140007951:	xor    al,0x30
   140007953:	add    BYTE PTR [rdi],dl
   140007955:	add    DWORD PTR [rsi],ebp
   140007957:	add    BYTE PTR [rbx],cl
   140007959:	push   rax
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	rex.W pop rbp
   14000795e:	add    BYTE PTR [rax],al
   140007960:	(bad)  
   140007961:	add    DWORD PTR [rax],eax
   140007963:	add    BYTE PTR [rcx],bl
   140007965:	(bad)  
   140007966:	or     DWORD PTR [rax],eax
   140007968:	(bad)  
   140007969:	(bad)  
   14000796a:	adc    al,BYTE PTR [rcx]
   14000796c:	(bad)  
   14000796d:	je     0x140007980
   14000796f:	add    DWORD PTR [rsi],ebx
   140007971:	xor    al,0x10
   140007973:	add    DWORD PTR [rsi],ebx
   140007975:	add    DWORD PTR [rsi],ecx
   140007977:	add    DWORD PTR [rax],edx
   140007979:	push   rax
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	rex.W pop rbp
   14000797e:	add    BYTE PTR [rax],al
   140007980:	(bad)  
   140007981:	or     BYTE PTR [rax],al
   140007983:	add    BYTE PTR [rcx],al
   140007985:	or     al,BYTE PTR [rax+rax*1]
   140007988:	or     dh,BYTE PTR [rsi+rax*1]
   14000798b:	add    BYTE PTR [rdx],cl
   14000798d:	xor    al,BYTE PTR [rsi]
   14000798f:	jo     0x140007992
   140007991:	adc    al,0x8
   140007993:	add    BYTE PTR [rsp+riz*2],dl
   140007996:	or     eax,DWORD PTR [rax]
   140007998:	adc    al,0x54
   14000799a:	or     al,BYTE PTR [rax]
   14000799c:	adc    al,0x34
   14000799e:	or     DWORD PTR [rax],eax
   1400079a0:	adc    al,0x52
   1400079a2:	adc    BYTE PTR [rax+0x1],dh
   1400079a5:	sbb    DWORD PTR [rdx],ecx
   1400079a7:	add    BYTE PTR [rcx],bl
   1400079a9:	je     0x1400079b4
   1400079ab:	add    BYTE PTR [rcx],bl
   1400079ad:	or     BYTE PTR fs:[rax],al
   1400079b0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400079b4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400079b7:	add    BYTE PTR [rcx],bl
   1400079b9:	xor    dl,BYTE PTR [rip+0x82819e0]        # 0x14828939f
   1400079bf:	add    BYTE PTR [rdx],bl
   1400079c1:	je     0x1400079d8
   1400079c3:	add    BYTE PTR [rdx],bl
   1400079c5:	fs adc al,0x0
   1400079c8:	sbb    dh,BYTE PTR [rbx+rdx*1]
   1400079cb:	add    BYTE PTR [rdx],bl
   1400079cd:	repnz adc BYTE PTR [rax+0x48],dl
   1400079d1:	pop    rbp
   1400079d2:	add    BYTE PTR [rax],al
   1400079d4:	js     0x1400079d6
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	add    DWORD PTR [rsi],eax
   1400079da:	add    al,BYTE PTR [rax]
   1400079dc:	(bad)  
   1400079dd:	xor    al,BYTE PTR [rdx]
   1400079df:	xor    BYTE PTR [rcx],bl
   1400079e1:	sub    eax,0x741f000b
   1400079e6:	sbb    al,0x0
   1400079e8:	(bad)  
   1400079e9:	xor    al,0x1b
   1400079eb:	add    BYTE PTR [rdi],bl
   1400079ed:	add    DWORD PTR [rax+rax*1],edx
   1400079f0:	adc    esi,eax
   1400079f2:	adc    eax,esp
   1400079f4:	(bad)  
   1400079f6:	or     eax,0x500bc0
   1400079fb:	add    BYTE PTR [rax+0x5d],cl
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	nop
   140007a01:	add    BYTE PTR [rax],al
   140007a03:	add    BYTE PTR [rcx],al
   140007a05:	clts   
   140007a07:	add    BYTE PTR [rdi],cl
   140007a09:	fs (bad) 
   140007a0b:	add    BYTE PTR [rdi],cl
   140007a0d:	xor    al,0x6
   140007a0f:	add    BYTE PTR [rdi],cl
   140007a11:	xor    cl,BYTE PTR [rbx]
   140007a13:	jo     0x140007a16
   140007a15:	adc    eax,0x1150008
   140007a1a:	adc    DWORD PTR [rax],eax
   140007a1c:	or     eax,esi
   140007a1e:	(bad)  
   140007a1f:	loopne 0x140007a26
   140007a21:	jo     0x140007a27
   140007a23:	(bad)  
   140007a24:	add    esi,DWORD PTR [rax]
   140007a26:	add    dl,BYTE PTR [rax+0x1]
   140007a29:	adc    ecx,DWORD PTR [rax]
   140007a2b:	add    BYTE PTR [rbx],dl
   140007a2d:	xor    al,0x15
   140007a2f:	add    BYTE PTR [rbx],dl
   140007a31:	mov    dl,0xc
   140007a33:	lock or ah,al
   140007a36:	or     BYTE PTR [rax+0x7],dh
   140007a39:	(bad)  
   140007a3a:	(bad)  
   140007a3b:	push   rax
   140007a3c:	sbb    DWORD PTR [rax],esi
   140007a3e:	or     eax,DWORD PTR [rax]
   140007a40:	(bad)  
   140007a41:	xor    al,0x1a
   140007a43:	add    DWORD PTR [rdi],ebx
   140007a45:	add    DWORD PTR [rax],edx
   140007a47:	add    DWORD PTR [rax],edx
   140007a49:	lock (bad) 
   140007a4b:	loopne 0x140007a59
   140007a4d:	ror    BYTE PTR [rdx],1
   140007a4f:	ror    BYTE PTR [rax],0x70
   140007a52:	(bad)  
   140007a53:	(bad)  
   140007a54:	(bad)  
   140007a55:	push   rax
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	rex.W pop rbp
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	jo     0x140007a66
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	add    DWORD PTR [rcx],edx
   140007a62:	add    al,0x0
   140007a64:	adc    DWORD PTR [rdx],esi
   140007a66:	or     eax,0xb600c70
   140007a6b:	xor    BYTE PTR [rcx],bl
   140007a6d:	xor    cl,BYTE PTR [rbx]
   140007a6f:	add    BYTE PTR [rcx],ah
   140007a71:	rex.WXB add BYTE PTR fs:[r9],spl
   140007a75:	xor    al,0x4a
   140007a77:	add    BYTE PTR [rcx],ah
   140007a79:	add    DWORD PTR [rdx+0x0],eax
   140007a7c:	adc    dh,al
   140007a7e:	adc    al,ah
   140007a80:	(bad)  
   140007a81:	ror    BYTE PTR [rax+rsi*2],0xb
   140007a85:	push   rax
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	rex.W pop rbp
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	add    BYTE PTR [rdx],al
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	add    DWORD PTR [rsi],ecx
   140007a92:	(bad)  
   140007a93:	add    BYTE PTR [rsi],cl
   140007a95:	xor    al,0x10
   140007a97:	add    BYTE PTR [rsi],cl
   140007a99:	mov    dl,0xa
   140007a9b:	jo     0x140007aa6
   140007a9d:	(bad)  
   140007a9e:	or     BYTE PTR [rax+0x1],dl
   140007aa1:	(bad)  
   140007aa2:	add    al,BYTE PTR [rax]
   140007aa4:	(bad)  
   140007aa5:	jb     0x140007aa9
   140007aa7:	xor    BYTE PTR [rcx],bl
   140007aa9:	(bad)  
   140007aaa:	add    eax,0xb340d00
   140007aaf:	add    DWORD PTR [rip+0x6010801],ecx        # 0x1460182b6
   140007ab5:	jo     0x140007ab7
   140007ab7:	add    BYTE PTR [rax+0x5d],cl
   140007aba:	add    BYTE PTR [rax],al
   140007abc:	xor    BYTE PTR [rax],cl
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	sbb    DWORD PTR [rdi],ebx
   140007ac2:	add    eax,0xa340d00
   140007ac7:	add    DWORD PTR [rip+0x6010801],ecx        # 0x1460182ce
   140007acd:	jo     0x140007acf
   140007acf:	add    BYTE PTR [rax+0x5d],cl
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	xor    BYTE PTR [rax],cl
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	add    DWORD PTR [rcx+rax*1],eax
   140007adb:	add    BYTE PTR [rdx+rax*2],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	sbb    DWORD PTR [rdi],ebx
   140007ae2:	add    eax,0xc340d00
   140007ae7:	add    DWORD PTR [rip+0x6010801],ecx        # 0x1460182ee
   140007aed:	jo     0x140007aef
   140007aef:	add    BYTE PTR [rax+0x5d],cl
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	xor    BYTE PTR [rax],cl
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	add    DWORD PTR [rax],edx
   140007afa:	add    eax,0x9821000
   140007aff:	jo     0x140007b09
   140007b01:	(bad)  
   140007b02:	(bad)  
   140007b03:	xor    BYTE PTR [rsi],al
   140007b05:	push   rax
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	add    DWORD PTR [rbx],edx
   140007b0a:	add    al,0x0
   140007b0c:	adc    edx,edx
   140007b0e:	or     al,0x70
   140007b10:	or     esi,DWORD PTR [rax]
   140007b12:	or     dl,BYTE PTR [rax+0x1]
   140007b15:	clts   
   140007b17:	add    BYTE PTR [rdi],cl
   140007b19:	or     DWORD PTR fs:[rax],eax
   140007b1c:	sysenter 
   140007b1e:	(bad)  
   140007b1f:	add    BYTE PTR [rdi],cl
   140007b21:	xor    cl,BYTE PTR [rbx]
   140007b23:	jo     0x140007b26
   140007b25:	or     al,BYTE PTR [rax+rax*1]
   140007b28:	or     dh,BYTE PTR [rdi+rax*1]
   140007b2b:	add    BYTE PTR [rdx],cl
   140007b2d:	xor    al,BYTE PTR [rsi]
   140007b2f:	jo     0x140007b32
   140007b31:	or     al,0x4
   140007b33:	add    BYTE PTR [rsp+rsi*1],cl
   140007b36:	or     BYTE PTR [rax],al
   140007b38:	or     al,0x32
   140007b3a:	or     BYTE PTR [rax+0x1],dh
   140007b3d:	adc    eax,0x64150008
   140007b42:	or     al,BYTE PTR [rax]
   140007b44:	adc    eax,0x15000954
   140007b49:	xor    al,0x8
   140007b4b:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e08ca3
   140007b51:	adc    eax,0x64150008
   140007b56:	or     eax,DWORD PTR [rax]
   140007b58:	adc    eax,0x15000954
   140007b5d:	xor    al,0x8
   140007b5f:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e08cb7
   140007b65:	or     al,BYTE PTR [rax+rax*1]
   140007b68:	or     dh,BYTE PTR [rdx+rcx*1]
   140007b6b:	add    BYTE PTR [rdx],cl
   140007b6d:	push   rdx
   140007b6e:	(bad)  
   140007b6f:	jo     0x140007b72
   140007b71:	adc    al,0x8
   140007b73:	add    BYTE PTR [rsp+riz*2],dl
   140007b76:	or     BYTE PTR [rax],al
   140007b78:	adc    al,0x54
   140007b7a:	(bad)  
   140007b7b:	add    BYTE PTR [rsp+rsi*1],dl
   140007b7e:	(bad)  
   140007b7f:	add    BYTE PTR [rdx+rsi*1],dl
   140007b82:	adc    BYTE PTR [rax+0x1],dh
   140007b85:	sbb    eax,0x741d000c
   140007b8a:	or     eax,DWORD PTR [rax]
   140007b8c:	sbb    eax,0x1d000a64
   140007b91:	push   rsp
   140007b92:	or     DWORD PTR [rax],eax
   140007b94:	sbb    eax,0x1d000834
   140007b99:	xor    bl,BYTE PTR [rcx]
   140007b9b:	lock (bad) 
   140007b9d:	loopne 0x140007bb4
   140007b9f:	rol    BYTE PTR [rcx],0x18
   140007ba2:	or     al,BYTE PTR [rax]
   140007ba4:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   140007ba8:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   140007bac:	sbb    BYTE PTR [rsp+rcx*1],dh
   140007baf:	add    BYTE PTR [rax],bl
   140007bb1:	jb     0x140007bc7
   140007bb3:	lock adc ah,al
   140007bb6:	adc    BYTE PTR [rax+0x1],dh
   140007bb9:	and    BYTE PTR [rax+rax*1],cl
   140007bbc:	and    BYTE PTR [rdi+rcx*1+0x0],ah
   140007bc0:	and    BYTE PTR [rsi+rcx*1+0x0],dl
   140007bc4:	and    BYTE PTR [rsp+rcx*1],dh
   140007bc7:	add    BYTE PTR [rax],ah
   140007bc9:	push   rdx
   140007bca:	sbb    al,0xf0
   140007bcc:	sbb    ah,al
   140007bce:	sbb    al,dl
   140007bd0:	(bad)  
   140007bd1:	rcl    BYTE PTR [rax+rsi*2],0x1
   140007bd5:	(bad)  
   140007bd6:	add    DWORD PTR [rax],eax
   140007bd8:	(bad)  
   140007bd9:	rex.X add BYTE PTR [rax],al
   140007bdc:	sbb    DWORD PTR [rcx+rcx*1],esp
   140007bdf:	add    BYTE PTR [rdx],dl
   140007be1:	add    DWORD PTR [rax+0x0],ecx
   140007be4:	or     esi,eax
   140007be6:	or     eax,esp
   140007be8:	(bad)  
   140007be9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143608060
   140007bf0:	add    dh,BYTE PTR [rax]
   140007bf2:	add    BYTE PTR [rax],al
   140007bf4:	rex.W pop rbp
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	xor    BYTE PTR [rdx],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    DWORD PTR [rdi],ebx
   140007bfe:	or     al,0x0
   140007c00:	(bad)  
   140007c01:	fs or  eax,0xc541f00
   140007c07:	add    BYTE PTR [rdi],bl
   140007c09:	xor    al,0xa
   140007c0b:	add    BYTE PTR [rdi],bl
   140007c0d:	xor    bl,BYTE PTR [rbx]
   140007c0f:	lock sbb eax,esp
   140007c12:	(bad)  
   140007c13:	rcl    BYTE PTR [rip+0x17013c0],1        # 0x141708fd9
   140007c19:	sbb    DWORD PTR [rdx],ecx
   140007c1b:	add    BYTE PTR [rcx],bl
   140007c1d:	je     0x140007c2e
   140007c1f:	add    BYTE PTR [rcx],bl
   140007c21:	fs (bad) 
   140007c23:	add    BYTE PTR [rcx],bl
   140007c25:	push   rsp
   140007c26:	or     eax,0xc341900
   140007c2b:	add    BYTE PTR [rcx],bl
   140007c2d:	xchg   edx,eax
   140007c2e:	adc    eax,0x81501e0
   140007c33:	add    BYTE PTR [rip+0x15000874],dl        # 0x1550084ad
   140007c39:	fs (bad) 
   140007c3b:	add    BYTE PTR [rip+0x15000634],dl        # 0x155008275
   140007c41:	xor    dl,BYTE PTR [rcx]
   140007c43:	loopne 0x140007c46
   140007c45:	adc    ecx,DWORD PTR [rax]
   140007c47:	add    BYTE PTR [rbx],dl
   140007c49:	xor    al,0xc
   140007c4b:	add    BYTE PTR [rbx],dl
   140007c4d:	push   rdx
   140007c4e:	or     al,0xf0
   140007c50:	or     al,al
   140007c52:	or     BYTE PTR [rax+0x7],dh
   140007c55:	(bad)  
   140007c56:	(bad)  
   140007c57:	push   rax
   140007c58:	add    DWORD PTR [rdx],ecx
   140007c5a:	add    al,0x0
   140007c5c:	or     dh,BYTE PTR [rsp+rcx*1]
   140007c5f:	add    BYTE PTR [rdx],cl
   140007c61:	xchg   edx,eax
   140007c62:	(bad)  
   140007c63:	jo     0x140007c66
   140007c65:	clts   
   140007c67:	add    BYTE PTR [rdi],cl
   140007c69:	xor    al,0x10
   140007c6b:	add    BYTE PTR [rdi],cl
   140007c6d:	mov    dl,0x8
   140007c6f:	jo     0x140007c78
   140007c71:	(bad)  
   140007c72:	(bad)  
   140007c73:	push   rax
   140007c74:	sbb    DWORD PTR [rip+0x64130007],esp        # 0x1a4137c81
   140007c7a:	push   rsp
   140007c7b:	add    DWORD PTR [rbx],edx
   140007c7d:	xor    al,0x53
   140007c7f:	add    DWORD PTR [rbx],edx
   140007c81:	add    DWORD PTR [rax+0x1],edx
   140007c84:	or     al,0x70
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	rex.W pop rbp
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	jo     0x140007c98
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	add    DWORD PTR [rax],edx
   140007c92:	(bad)  
   140007c93:	add    BYTE PTR [rax],dl
   140007c95:	lldt   WORD PTR fs:[rax]
   140007c99:	xor    al,0xe
   140007c9b:	add    BYTE PTR [rax],dl
   140007c9d:	mov    dl,0xc
   140007c9f:	jo     0x140007ca2
   140007ca1:	sbb    cl,BYTE PTR [rcx]
   140007ca3:	add    BYTE PTR [rdx],bl
   140007ca5:	fs sbb al,0x0
   140007ca8:	sbb    dh,BYTE PTR [rbx+rbx*1]
   140007cab:	add    BYTE PTR [rdx],bl
   140007cad:	add    DWORD PTR [rsi],edx
   140007caf:	add    BYTE PTR [rsi],cl
   140007cb1:	loopne 0x140007cbf
   140007cb3:	jo     0x140007cc0
   140007cb5:	push   rax
   140007cb6:	add    BYTE PTR [rax],al
   140007cb8:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a4157cc6
   140007cbe:	or     al,0x0
   140007cc0:	adc    eax,0x15000b34
   140007cc5:	push   rdx
   140007cc6:	(bad)  
   140007cc7:	loopne 0x140007cd5
   140007cc9:	jo     0x140007cd6
   140007ccb:	push   rax
   140007ccc:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a4157cda
   140007cd2:	or     eax,0xc341500
   140007cd7:	add    BYTE PTR [rip+0xce00e52],dl        # 0x14ce08b2f
   140007cdd:	jo     0x140007cea
   140007cdf:	push   rax
   140007ce0:	add    DWORD PTR [rdi],edx
   140007ce2:	(bad)  
   140007ce3:	add    BYTE PTR [rdi],dl
   140007ce5:	je     0x140007d00
   140007ce7:	add    BYTE PTR [rdi],dl
   140007ce9:	xor    al,0x18
   140007ceb:	add    BYTE PTR [rdi],dl
   140007ced:	add    DWORD PTR [rsi],edx
   140007cef:	add    BYTE PTR [rbx],cl
   140007cf1:	push   rax
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	add    DWORD PTR [rdx],edx
   140007cf6:	add    eax,0xe421200
   140007cfb:	jo     0x140007d0a
   140007cfd:	(bad)  
   140007cfe:	or     al,0x50
   140007d00:	or     esi,DWORD PTR [rax]
   140007d02:	add    BYTE PTR [rax],al
   140007d04:	sbb    DWORD PTR [rdi],ebx
   140007d06:	add    eax,0x18340d00
   140007d0b:	add    BYTE PTR [rip+0x6001601],cl        # 0x146009312
   140007d11:	jo     0x140007d13
   140007d13:	add    BYTE PTR [rax+0x5d],cl
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	movabs al,ds:0x1b00081b01000000
   140007d21:	push   rsp
   140007d22:	(bad)  
   140007d23:	add    BYTE PTR [rbx],bl
   140007d25:	xor    al,0xc
   140007d27:	add    BYTE PTR [rbx],bl
   140007d29:	jb     0x140007d42
   140007d2b:	loopne 0x140007d42
   140007d2d:	jo     0x140007d43
   140007d2f:	(bad)  
   140007d30:	add    DWORD PTR [rcx],ebx
   140007d32:	(bad)  
   140007d33:	add    BYTE PTR [rcx],bl
   140007d35:	push   rdx
   140007d36:	adc    eax,0x127013e0
   140007d3b:	(bad)  
   140007d3c:	adc    DWORD PTR [rax+0x10],edx
   140007d3f:	xor    BYTE PTR [rcx],al
   140007d41:	(bad)  
   140007d42:	add    DWORD PTR [rax],eax
   140007d44:	(bad)  
   140007d45:	(bad)  
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	add    DWORD PTR [rsi],ebx
   140007d4a:	or     al,BYTE PTR [rax]
   140007d4c:	(bad)  
   140007d4d:	adc    al,BYTE PTR fs:[rax]
   140007d50:	(bad)  
   140007d51:	xor    al,0x11
   140007d53:	add    BYTE PTR [rsi],bl
   140007d55:	xchg   edx,eax
   140007d56:	(bad)  
   140007d57:	lock adc eax,0x11c013e0
   140007d5d:	jo     0x140007d6f
   140007d5f:	push   rax
   140007d60:	add    DWORD PTR [rcx+rax*1],eax
   140007d63:	add    BYTE PTR [rdx+riz*2],al
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	or     DWORD PTR [rcx],ebx
   140007d6a:	or     al,BYTE PTR [rax]
   140007d6c:	sbb    esp,eax
   140007d6e:	or     eax,DWORD PTR [rax]
   140007d70:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140007d74:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140007d78:	sbb    DWORD PTR [rax+rcx*1],esi
   140007d7b:	add    BYTE PTR [rcx],bl
   140007d7d:	push   rdx
   140007d7e:	adc    eax,0x5ce6e0
   140007d83:	add    BYTE PTR [rcx],al
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rcx],bl
   140007d89:	push   rbp
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	mov    dl,BYTE PTR [rsi+0x0]
   140007d8f:	add    BYTE PTR [rsi],dl
   140007d91:	pop    rsi
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	mov    dl,BYTE PTR [rsi+0x0]
   140007d97:	add    BYTE PTR [rcx],al
   140007d99:	add    BYTE PTR [rax],al
   140007d9b:	add    BYTE PTR [rcx],al
   140007d9d:	add    al,0x1
   140007d9f:	add    BYTE PTR [rdx+riz*8],al
   140007da2:	add    BYTE PTR [rax],al
   140007da4:	add    DWORD PTR [rdx+rax*1],ecx
   140007da7:	add    BYTE PTR [rcx+rax*1],cl
   140007daa:	adc    DWORD PTR [rax],eax
   140007dac:	or     DWORD PTR [rcx+rax*1],eax
   140007daf:	add    BYTE PTR [rdx+riz*1],al
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	out    0x5c,al
   140007db6:	add    BYTE PTR [rax],al
   140007db8:	add    DWORD PTR [rax],eax
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	ins    BYTE PTR es:[rdi],dx
   140007dbd:	pop    rdx
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	movabs ds:0xa20000000100005a,al
   140007dc9:	pop    rdx
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	or     DWORD PTR [rdx],ecx
   140007dce:	add    al,0x0
   140007dd0:	or     dh,BYTE PTR [rsi+rax*1]
   140007dd3:	add    BYTE PTR [rdx],cl
   140007dd5:	xor    al,BYTE PTR [rsi]
   140007dd7:	jo     0x140007dbf
   140007dd9:	pop    rsp
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    DWORD PTR [rax],eax
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	jge    0x140007e3d
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	mov    al,0x5b
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	rex pop rsi
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	mov    al,0x5b
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	add    DWORD PTR [rsi],eax
   140007df2:	add    al,BYTE PTR [rax]
   140007df4:	(bad)  
   140007df5:	xor    al,BYTE PTR [rdx]
   140007df7:	push   rax
   140007df8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7e02
   140007dfe:	or     DWORD PTR [rax],eax
   140007e00:	or     eax,0x500632
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rcx],al
   140007e09:	add    BYTE PTR [rax],al
   140007e0b:	add    al,cl
   140007e0d:	jg     0x140007e0f
	...
   140007e17:	add    BYTE PTR [rax-0x7b],bh
   140007e1a:	add    BYTE PTR [rax],al
   140007e1c:	add    BYTE PTR [rax+0x0],ah
   140007e1f:	add    BYTE PTR [rax-0x80],ah
	...
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	mov    es,WORD PTR [rsi+0x60980000]
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	nop
   140007e35:	(bad)  
	...
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	(bad)  
   140007e41:	mov    BYTE PTR [rax],al
   140007e43:	add    al,cl
   140007e45:	(bad)  
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	adc    BYTE PTR [rcx+0x0],al
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	add    BYTE PTR [rax],al
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	xchg   BYTE PTR [rdx+0x61480000],cl
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	add    BYTE PTR [rax+rax*1+0x0],al
   140007e63:	add    BYTE PTR [rax],al
   140007e65:	add    BYTE PTR [rax],al
   140007e67:	add    BYTE PTR [rdx+0x3800008a],dl
   140007e6d:	add    BYTE PTR fs:[rax],al
   140007e70:	add    BYTE PTR [rdx+0x0],0x0
   140007e77:	add    BYTE PTR [rax],al
   140007e79:	add    BYTE PTR [rax],al
   140007e7b:	add    BYTE PTR [rsi-0x47ffff76],bl
   140007e81:	(bad)  
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	call   0x140007f09
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rdx+rcx*4+0x61200000],ch
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	rol    BYTE PTR [rbx+0x0],1
   140007e9e:	add    BYTE PTR [rax],al
   140007ea0:	add    BYTE PTR [rax],al
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	mov    eax,0x800008a
   140007ea9:	add    BYTE PTR fs:[rax],al
   140007eac:	rol    BYTE PTR [rcx+0x0],1
   140007eb2:	add    BYTE PTR [rax],al
   140007eb4:	add    BYTE PTR [rax],al
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	(bad)  
   140007eb9:	mov    al,BYTE PTR [rax]
   140007ebb:	add    BYTE PTR [rax],cl
   140007ebd:	(bad)  
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	pop    rax
   140007ec1:	(bad)  
	...
   140007eca:	add    BYTE PTR [rax],al
   140007ecc:	lock mov al,BYTE PTR [rax]
   140007ecf:	add    BYTE PTR [rax+0x28000062],dl
   140007ed5:	(bad)  
	...
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	adc    cl,BYTE PTR [rbx+0x62600000]
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	mov    BYTE PTR [rcx+0x0],al
   140007eee:	add    BYTE PTR [rax],al
   140007ef0:	add    BYTE PTR [rax],al
   140007ef2:	add    BYTE PTR [rax],al
   140007ef4:	cmp    BYTE PTR [rbx+0x61c00000],cl
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	lock add DWORD PTR [rax],0x0
   140007f03:	add    BYTE PTR [rax],al
   140007f05:	add    BYTE PTR [rax],al
   140007f07:	add    BYTE PTR [rdx-0x75],ah
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	sub    BYTE PTR [rdx+0x0],ah
   140007f0f:	add    BYTE PTR [rax],bl
   140007f11:	(bad)  
	...
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	mov    WORD PTR [rbx+0x62500000],cs
   140007f22:	add    BYTE PTR [rax],al
   140007f24:	push   0x82
   140007f29:	add    BYTE PTR [rax],al
   140007f2b:	add    BYTE PTR [rax],al
   140007f2d:	add    BYTE PTR [rax],al
   140007f2f:	add    BYTE PTR [rax-0x5fffff75],dh
   140007f35:	(bad)  
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	mov    al,0x81
	...
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	(bad)  
   140007f45:	mov    eax,DWORD PTR [rax]
   140007f47:	add    al,ch
   140007f49:	(bad)  
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	loopne 0x140007ecf
	...
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	hlt    
   140007f59:	mov    eax,DWORD PTR [rax]
   140007f5b:	add    BYTE PTR [rax],bl
   140007f5d:	(bad)  
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	movabs al,ds:0x81
   140007f69:	add    BYTE PTR [rax],al
   140007f6b:	add    BYTE PTR [rsp+rcx*4],bl
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	fsub   DWORD PTR [rcx+0x0]
   140007f73:	add    BYTE PTR [rax-0x7e],cl
	...
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	cmp    al,0x8c
   140007f82:	add    BYTE PTR [rax],al
   140007f84:	and    BYTE PTR [rdx+0x0],0x0
   140007f88:	js     0x140007f0b
	...
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	pop    rsi
   140007f95:	mov    WORD PTR [rax],es
   140007f97:	add    BYTE PTR [rax-0x1fffff9f],dh
   140007f9d:	add    DWORD PTR [rax],0x0
	...
   140007fa8:	(bad)  
   140007fa9:	mov    WORD PTR [rax],es
   140007fab:	add    BYTE PTR [rax],bl
   140007fad:	add    BYTE PTR fs:[rax],al
	...
   140007fc8:	adc    BYTE PTR [rax+rax*1+0x0],al
   140007fcf:	add    BYTE PTR [rsp+rax*4],ch
   140007fd2:	add    BYTE PTR [rax],al
   140007fd4:	add    BYTE PTR [rax],al
   140007fd6:	add    BYTE PTR [rax],al
   140007fd8:	cmp    al,0x84
   140007fda:	add    BYTE PTR [rax],al
   140007fdc:	add    BYTE PTR [rax],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	rex.WR test BYTE PTR [rax],r8b
   140007fe3:	add    BYTE PTR [rax],al
   140007fe5:	add    BYTE PTR [rax],al
   140007fe7:	add    BYTE PTR [rsp+rax*4+0x0],bl
   140007feb:	add    BYTE PTR [rax],al
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    BYTE PTR [rdx-0x7c],ch
   140007ff2:	add    BYTE PTR [rax],al
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	jp     0x140007f7e
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	add    BYTE PTR [rax],al
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	xchg   esp,eax
   140008001:	test   BYTE PTR [rax],al
   140008003:	add    BYTE PTR [rax],al
   140008005:	add    BYTE PTR [rax],al
   140008007:	add    BYTE PTR [rsi+0x84],ah
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rsi+0x84],dh
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    dl,al
   140008019:	test   BYTE PTR [rax],al
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    ah,dl
   140008021:	test   BYTE PTR [rax],al
   140008023:	add    BYTE PTR [rax],al
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    dh,ah
   140008029:	test   BYTE PTR [rax],al
   14000802b:	add    BYTE PTR [rax],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    ah,bh
   140008031:	test   BYTE PTR [rax],al
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax*4+0x0],bl
   14000803e:	add    BYTE PTR [rax],al
   140008040:	sub    al,0x85
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	rex test DWORD PTR [rax],eax
   14000804b:	add    BYTE PTR [rax],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rdx-0x7b],ah
	...
   14000805e:	add    BYTE PTR [rax],al
   140008060:	xchg   BYTE PTR [rbp+0x0],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	xchg   edx,eax
   140008069:	test   DWORD PTR [rax],eax
   14000806b:	add    BYTE PTR [rax],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rsi+0x85],ah
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    BYTE PTR [rbp+rax*4+0x0],bh
   14000807e:	add    BYTE PTR [rax],al
   140008080:	int3   
   140008081:	test   DWORD PTR [rax],eax
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    dl,bl
   140008089:	test   DWORD PTR [rax],eax
   14000808b:	add    BYTE PTR [rax],al
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    dh,ch
   140008091:	test   DWORD PTR [rax],eax
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    dl,bh
   140008099:	test   DWORD PTR [rax],eax
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rsi],al
   1400080a1:	xchg   BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rdx],dl
   1400080a9:	xchg   BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rdx],ah
   1400080b1:	xchg   BYTE PTR [rax],al
   1400080b3:	add    BYTE PTR [rax],al
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    BYTE PTR [rax],bh
   1400080b9:	xchg   BYTE PTR [rax],al
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rax-0x7a],cl
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	pop    rdx
   1400080c9:	xchg   BYTE PTR [rax],al
   1400080cb:	add    BYTE PTR [rax],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rsi+rax*4+0x0],ch
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rsi-0x7a],bh
	...
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	mov    WORD PTR [rax+0x0],cs
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	mov    esp,0x88
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    dl,dl
   1400080f9:	mov    BYTE PTR [rax],al
   1400080fb:	add    BYTE PTR [rax],al
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rdx-0x78],ah
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	sbb    eax,DWORD PTR [rax]
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax+0x1e],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax+0x1a],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax+0x29],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax+0x22],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax+0xd3],al
   14000813c:	add    BYTE PTR [rax],al
   14000813e:	add    BYTE PTR [rax+0x92],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax+0x9c],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax+0xd],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax+0x32],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax+0xaa],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax+0x49],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax+0x0],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	jo     0x140008104
	...
   140008186:	add    BYTE PTR [rax],al
   140008188:	pop    rax
   140008189:	mov    DWORD PTR [rax],eax
   14000818b:	add    BYTE PTR [rax],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rcx+rcx*4],bh
	...
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	rex.WRX mov r8b,BYTE PTR [rax]
	...
   1400081af:	add    BYTE PTR [rsi],ah
   1400081b1:	mov    al,BYTE PTR [rax]
   1400081b3:	add    BYTE PTR [rax],al
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    BYTE PTR [rdx],bl
   1400081b9:	mov    al,BYTE PTR [rax]
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rsi],cl
   1400081c1:	mov    al,BYTE PTR [rax]
	...
   1400081cf:	add    BYTE PTR [rsi+0x88],ch
	...
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rax],bh
   1400081e1:	mov    al,BYTE PTR [rax]
	...
   1400081ef:	add    dh,cl
   1400081f1:	mov    DWORD PTR [rax],eax
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rsi-0x77],dh
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	mov    cl,BYTE PTR [rcx+0x0]
   140008206:	add    BYTE PTR [rax],al
   140008208:	mov    eax,0x89
	...
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    BYTE PTR [rsi+0x89],bl
	...
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rsi],cl
   140008229:	mov    DWORD PTR [rax],eax
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rax],ch
   140008231:	mov    DWORD PTR [rax],eax
   140008233:	add    BYTE PTR [rax],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    dl,bh
   140008239:	mov    BYTE PTR [rax],al
	...
   140008247:	add    BYTE PTR [rdx-0x76],bl
	...
   140008256:	add    BYTE PTR [rax],al
   140008258:	repnz mov BYTE PTR [rax],al
	...
   140008267:	add    dh,bh
   140008269:	mov    DWORD PTR [rax],eax
   14000826b:	add    BYTE PTR [rax],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    ah,ah
   140008271:	mov    DWORD PTR [rax],eax
	...
   14000827f:	add    BYTE PTR [rdx-0x78],dl
	...
   14000828e:	add    BYTE PTR [rax],al
   140008290:	rex.WRX xchg QWORD PTR [rax],r8
   140008293:	add    BYTE PTR [rax],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rax-0x79],bl
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	push   0x87
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    BYTE PTR [rdx],ch
   1400082a9:	mov    BYTE PTR [rax],al
   1400082ab:	add    BYTE PTR [rax],al
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rdx],dl
   1400082b1:	mov    BYTE PTR [rax],al
   1400082b3:	add    BYTE PTR [rax],al
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rdx+0x87],bl
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    BYTE PTR [rdi+rax*4+0x0],dh
   1400082c3:	add    BYTE PTR [rax],al
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    BYTE PTR [rdi+rax*4+0x0],al
   1400082cb:	add    BYTE PTR [rax],al
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    BYTE PTR [rax],ch
   1400082d1:	xchg   DWORD PTR [rax],eax
   1400082d3:	add    BYTE PTR [rax],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rdx],bh
   1400082d9:	xchg   DWORD PTR [rax],eax
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rdx],dl
   1400082e1:	xchg   DWORD PTR [rax],eax
   1400082e3:	add    BYTE PTR [rax],al
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rdi+rax*4],al
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	cld    
   1400082f1:	xchg   BYTE PTR [rax],al
   1400082f3:	add    BYTE PTR [rax],al
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    dl,dh
   1400082f9:	xchg   BYTE PTR [rax],al
   1400082fb:	add    BYTE PTR [rax],al
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    al,ch
   140008301:	xchg   BYTE PTR [rax],al
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    dh,bl
   140008309:	xchg   BYTE PTR [rax],al
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    dl,dl
   140008311:	xchg   BYTE PTR [rax],al
   140008313:	add    BYTE PTR [rax],al
   140008315:	add    BYTE PTR [rax],al
   140008317:	add    al,cl
   140008319:	xchg   BYTE PTR [rax],al
   14000831b:	add    BYTE PTR [rax],al
   14000831d:	add    BYTE PTR [rax],al
   14000831f:	add    BYTE PTR [rsi+0x86],bh
   140008325:	add    BYTE PTR [rax],al
   140008327:	add    BYTE PTR [rdx+0x86],dh
   14000832d:	add    BYTE PTR [rax],al
   14000832f:	add    al,dh
   140008331:	xchg   DWORD PTR [rax],eax
   140008333:	add    BYTE PTR [rax],al
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    BYTE PTR [rax+0x86],ch
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    dh,dh
   140008341:	mov    WORD PTR [rax],es
   140008343:	add    BYTE PTR [rax],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    ah,ah
   140008349:	xchg   DWORD PTR [rax],eax
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rax],dh
   140008351:	xchg   DWORD PTR [rax],eax
   140008353:	add    BYTE PTR [rax],al
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    al,dl
   140008359:	xchg   DWORD PTR [rax],eax
   14000835b:	add    BYTE PTR [rax],al
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    BYTE PTR [rcx*4+0x0],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	jle    0x1400082f1
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	(bad)  
   140008371:	xchg   DWORD PTR [rax],eax
   140008373:	add    BYTE PTR [rax],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    dh,al
   140008379:	xchg   DWORD PTR [rax],eax
   14000837b:	add    BYTE PTR [rax],al
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rsi+0x87],bh
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rdi+rax*4+0x0],ch
   14000838e:	add    BYTE PTR [rax],al
   140008390:	or     BYTE PTR [rax+0x0],cl
   140008396:	add    BYTE PTR [rax],al
   140008398:	mov    WORD PTR [rdi+0x0],es
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	call   0x140008431
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    ah,bl
   1400083a9:	mov    WORD PTR [rax],es
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	add    BYTE PTR [rax],al
   1400083af:	add    dh,cl
   1400083b1:	mov    WORD PTR [rax],es
   1400083b3:	add    BYTE PTR [rax],al
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    BYTE PTR [rsi+rax*4+0x0],bl
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	(bad)  
   1400083c1:	lea    eax,[rax]
	...
   1400083cf:	add    BYTE PTR [rax-0x78],bh
	...
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	(bad)  
   1400083e1:	mov    WORD PTR [rax],es
   1400083e3:	add    BYTE PTR [rax],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    BYTE PTR [rsp+rcx*4+0x0],dh
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	(bad)  
   1400083f1:	mov    WORD PTR [rax],es
	...
   1400083ff:	add    BYTE PTR [rsi],bh
   140008401:	mov    BYTE PTR [rax],al
	...
   14000840f:	add    dh,bl
   140008411:	add    DWORD PTR [rbx+rsi*2+0x61],ecx
   140008415:	push   rcx
   140008416:	jne    0x14000847d
   140008418:	jb     0x140008493
   14000841a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000841c:	outs   dx,WORD PTR ds:[rsi]
   14000841e:	jb     0x14000848d
   140008420:	(bad)  
   140008421:	je     0x14000848c
   140008423:	outs   dx,DWORD PTR ds:[rsi]
   140008424:	outs   dx,BYTE PTR ds:[rsi]
   140008425:	push   rax
   140008426:	outs   dx,DWORD PTR ds:[rsi]
   140008427:	ins    BYTE PTR es:[rdi],dx
   140008428:	imul   esp,DWORD PTR [rbx+0x79],0x52027700
   14000842f:	rex.RB outs dx,BYTE PTR gs:[esi]
   140008433:	jne    0x1400084a2
   140008435:	push   rsi
   140008436:	(bad)  
   140008437:	ins    BYTE PTR es:[rdi],dx
   140008438:	jne    0x14000849f
   14000843a:	push   rdi
   14000843b:	add    BYTE PTR [rsi+0x67655202],al
   140008441:	rex.WRXB jo 0x1400084a9
   140008444:	outs   dx,BYTE PTR ds:[rsi]
   140008445:	rex.WXB
   140008446:	gs jns 0x14000848e
   140008449:	js     0x1400084a2
   14000844b:	add    BYTE PTR [rdx+rax*1+0x52],dh
   14000844f:	rex.RB outs dx,BYTE PTR gs:[esi]
   140008453:	jne    0x1400084c2
   140008455:	rex.WXB
   140008456:	gs jns 0x14000849e
   140008459:	js     0x1400084b2
   14000845b:	add    BYTE PTR [rbp+0x2],dl
   14000845e:	push   rdx
   14000845f:	gs rex.XB ins BYTE PTR es:[edi],dx
   140008463:	outs   dx,DWORD PTR ds:[rsi]
   140008464:	jae    0x1400084cb
   140008466:	rex.WXB
   140008467:	gs jns 0x14000846a
   14000846a:	rol    DWORD PTR [rcx],0x4c
   14000846d:	jae    0x1400084d0
   14000846f:	rex.RX jb 0x1400084d7
   140008472:	gs rex.WRB
   140008474:	gs ins DWORD PTR es:[rdi],dx
   140008476:	outs   dx,DWORD PTR ds:[rsi]
   140008477:	jb     0x1400084f2
   140008479:	add    cl,ch
   14000847b:	add    DWORD PTR [rbx+rsi*2+0x61],ecx
   14000847f:	push   rbx
   140008480:	gs je  0x1400084cc
   140008483:	outs   dx,BYTE PTR ds:[rsi]
   140008484:	outs   dx,WORD PTR ds:[rsi]
   140008486:	jb     0x1400084f5
   140008488:	(bad)  
   140008489:	je     0x1400084f4
   14000848b:	outs   dx,DWORD PTR ds:[rsi]
   14000848c:	outs   dx,BYTE PTR ds:[rsi]
   14000848d:	push   rax
   14000848e:	outs   dx,DWORD PTR ds:[rsi]
   14000848f:	ins    BYTE PTR es:[rdi],dx
   140008490:	imul   esp,DWORD PTR [rbx+0x79],0x52025e00
   140008497:	gs addr32 rex.XB jb 0x140008501
   14000849c:	(bad)  
   14000849d:	je     0x140008504
   14000849f:	rex.WXB
   1400084a0:	gs jns 0x1400084e8
   1400084a3:	js     0x1400084fc
   1400084a5:	add    BYTE PTR [rcx+0x2],ch
   1400084a8:	push   rdx
   1400084a9:	gs addr32 rex.R
   1400084ac:	gs ins BYTE PTR es:[rdi],dx
   1400084ae:	gs je  0x140008516
   1400084b1:	rex.WXB
   1400084b2:	gs jns 0x14000850c
   1400084b5:	add    BYTE PTR [rbx+0x61734c01],dh
   1400084bb:	rex.XB ins BYTE PTR es:[rdi],dx
   1400084bd:	outs   dx,DWORD PTR ds:[rsi]
   1400084be:	jae    0x140008525
   1400084c0:	add    BYTE PTR [rax],al
   1400084c2:	ins    DWORD PTR es:[rdi],dx
   1400084c3:	add    dl,BYTE PTR [rdx+0x65]
   1400084c6:	addr32 rex.R
   1400084c8:	gs ins BYTE PTR es:[rdi],dx
   1400084ca:	gs je  0x140008532
   1400084cd:	push   rsi
   1400084ce:	(bad)  
   1400084cf:	ins    BYTE PTR es:[rdi],dx
   1400084d0:	jne    0x140008537
   1400084d2:	push   rdi
   1400084d3:	add    BYTE PTR [rbx+0x67655202],ah
   1400084d9:	push   rbx
   1400084da:	gs je  0x140008533
   1400084dd:	(bad)  
   1400084de:	ins    BYTE PTR es:[rdi],dx
   1400084df:	jne    0x140008546
   1400084e1:	rex.RB js 0x14000853b
   1400084e4:	add    BYTE PTR [rax],al
   1400084e6:	icebp  
   1400084e7:	add    DWORD PTR [rbx+rsi*2+0x61],ecx
   1400084eb:	push   rbx
   1400084ec:	je     0x14000855d
   1400084ee:	jb     0x140008555
   1400084f0:	push   rax
   1400084f1:	jb     0x14000855c
   1400084f3:	jbe    0x140008556
   1400084f5:	je     0x14000855c
   1400084f7:	rex.R (bad) 
   1400084f9:	je     0x14000855c
   1400084fb:	add    bh,ch
   1400084fd:	add    DWORD PTR [rbx+rsi*2+0x61],ecx
   140008501:	push   rbx
   140008502:	gs je  0x140008559
   140008505:	jb     0x14000857c
   140008507:	jae    0x14000857d
   140008509:	gs rex.R outs dx,DWORD PTR fs:[rsi]
   14000850d:	ins    DWORD PTR es:[rdi],dx
   14000850e:	(bad)  
   14000850f:	imul   ebp,DWORD PTR [rsi+0x49],0x426f666e
   140008516:	jns    0x140008566
   140008518:	(bad)  
   140008519:	ins    DWORD PTR es:[rdi],dx
   14000851a:	gs add ch,dl
   14000851d:	add    DWORD PTR [rbx+rsi*2+0x61],ecx
   140008521:	rex.WRXB jo 0x140008589
   140008524:	outs   dx,BYTE PTR ds:[rsi]
   140008525:	push   rax
   140008526:	outs   dx,DWORD PTR ds:[rsi]
   140008527:	ins    BYTE PTR es:[rdi],dx
   140008528:	imul   esp,DWORD PTR [rbx+0x79],0x52029300
   14000852f:	gs addr32 push rcx
   140008532:	jne    0x140008599
   140008534:	jb     0x1400085af
   140008536:	push   rsi
   140008537:	(bad)  
   140008538:	ins    BYTE PTR es:[rdi],dx
   140008539:	jne    0x1400085a0
   14000853b:	rex.RB js 0x140008595
   14000853e:	add    BYTE PTR [rax],al
   140008540:	loop   0x140008543
   140008542:	rex.WR jae 0x1400085a6
   140008545:	push   rcx
   140008546:	jne    0x1400085ad
   140008548:	jb     0x1400085c3
   14000854a:	push   rsp
   14000854b:	jb     0x1400085c2
   14000854d:	jae    0x1400085c3
   14000854f:	gs rex.R outs dx,DWORD PTR fs:[rsi]
   140008553:	ins    DWORD PTR es:[rdi],dx
   140008554:	(bad)  
   140008555:	imul   ebp,DWORD PTR [rsi+0x49],0x426f666e
   14000855c:	jns    0x1400085ac
   14000855e:	(bad)  
   14000855f:	ins    DWORD PTR es:[rdi],dx
   140008560:	add    BYTE PTR gs:[rcx+0x2],bl
   140008564:	push   rdx
   140008565:	rex.XB outs dx,DWORD PTR gs:[esi]
   140008569:	outs   dx,BYTE PTR ds:[rsi]
   14000856a:	outs   dx,BYTE PTR ds:[rsi]
   14000856b:	movsxd esi,DWORD PTR gs:[rdx+rdx*2+0x65]
   140008570:	imul   esi,DWORD PTR [ebx+0x74],0x577972
   140008578:	rex.B
   140008579:	rex.R push rsi
   14000857b:	push   r8
   14000857d:	xor    rsi,QWORD PTR [r10]
   140008580:	cs fs ins BYTE PTR es:[rdi],dx
   140008583:	ins    BYTE PTR es:[rdi],dx
   140008584:	add    BYTE PTR [rax],al
   140008586:	mov    ecx,0x636f4c03
   14000858b:	(bad)  
   14000858c:	ins    BYTE PTR es:[rdi],dx
   14000858d:	rex.RX jb 0x1400085f5
   140008590:	gs add al,bl
   140008593:	add    DWORD PTR [rdi+0x65],eax
   140008596:	je     0x1400085db
   140008598:	outs   dx,DWORD PTR ds:[rsi]
   140008599:	ins    DWORD PTR es:[rdi],dx
   14000859a:	jo     0x140008611
   14000859c:	je     0x140008603
   14000859e:	jb     0x1400085ee
   1400085a0:	(bad)  
   1400085a1:	ins    DWORD PTR es:[rdi],dx
   1400085a2:	gs push rdi
   1400085a4:	add    BYTE PTR [rax],al
   1400085a6:	xlat   BYTE PTR ds:[rbx]
   1400085a7:	add    al,0x53
   1400085a9:	gs je  0x1400085ef
   1400085ac:	outs   dx,DWORD PTR ds:[rsi]
   1400085ad:	ins    DWORD PTR es:[rdi],dx
   1400085ae:	jo     0x140008625
   1400085b0:	je     0x140008617
   1400085b2:	jb     0x140008602
   1400085b4:	(bad)  
   1400085b5:	ins    DWORD PTR es:[rdi],dx
   1400085b6:	gs rex.RB js 0x140008611
   1400085ba:	add    BYTE PTR [rax],al
   1400085bc:	push   rdi
   1400085bd:	add    al,BYTE PTR [rdi+0x65]
   1400085c0:	je     0x14000860e
   1400085c2:	(bad)  
   1400085c3:	jae    0x140008639
   1400085c5:	rex.RB jb 0x14000863a
   1400085c8:	outs   dx,DWORD PTR ds:[rsi]
   1400085c9:	jb     0x1400085cb
   1400085cb:	add    BYTE PTR [rbp+0x636f4c03],dh
   1400085d1:	(bad)  
   1400085d2:	ins    BYTE PTR es:[rdi],dx
   1400085d3:	rex.B ins BYTE PTR es:[rdi],dx
   1400085d5:	ins    BYTE PTR es:[rdi],dx
   1400085d6:	outs   dx,DWORD PTR ds:[rsi]
   1400085d7:	movsxd eax,DWORD PTR [rax]
   1400085d9:	add    BYTE PTR [rsi+0x2],ch
   1400085dc:	rex.RXB
   1400085dd:	gs je  0x14000862d
   1400085e0:	outs   dx,DWORD PTR ds:[rsi]
   1400085e1:	fs jne 0x140008650
   1400085e4:	gs rex.W (bad) 
   1400085e7:	outs   dx,BYTE PTR ds:[rsi]
   1400085e8:	fs ins BYTE PTR es:[rdi],dx
   1400085ea:	gs push rdi
   1400085ec:	add    BYTE PTR [rax],al
   1400085ee:	and    eax,0x74736c06
   1400085f3:	jb     0x140008658
   1400085f5:	ins    DWORD PTR es:[rdi],dx
   1400085f6:	jo     0x140008661
   1400085f8:	push   rdi
   1400085f9:	add    BYTE PTR [rdx],ah
   1400085fb:	(bad)  
   1400085fc:	ins    BYTE PTR es:[rdi],dx
   1400085fd:	jae    0x140008673
   1400085ff:	jb     0x140008664
   140008601:	ins    DWORD PTR es:[rdi],dx
   140008602:	jo     0x14000865b
   140008604:	add    BYTE PTR [rax],al
   140008606:	cs (bad) 
   140008608:	ins    BYTE PTR es:[rdi],dx
   140008609:	jae    0x14000867f
   14000860b:	jb     0x140008679
   14000860d:	outs   dx,BYTE PTR gs:[rsi]
   14000860f:	push   rdi
   140008610:	add    BYTE PTR [rax],al
   140008612:	and    eax,DWORD PTR [rip+0x4c746553]        # 0x18c74eb6b
   140008618:	(bad)  
   140008619:	jae    0x14000868f
   14000861b:	rex.RB jb 0x140008690
   14000861e:	outs   dx,DWORD PTR ds:[rsi]
   14000861f:	jb     0x140008621
   140008621:	add    bh,dl
   140008623:	add    al,BYTE PTR [rdi+0x65]
   140008626:	je     0x14000867b
   140008628:	jns    0x14000869d
   14000862a:	je     0x140008691
   14000862c:	ins    DWORD PTR es:[rdi],dx
   14000862d:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140008635:	jns    0x14000868e
   140008637:	add    BYTE PTR [rdi+0x616f4c03],ch
   14000863d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140008646:	add    BYTE PTR [rax],al
   140008648:	cmc    
   140008649:	add    DWORD PTR [rdi+0x65],eax
   14000864c:	je     0x140008691
   14000864e:	outs   dx,DWORD PTR ds:[rsi]
   14000864f:	outs   dx,BYTE PTR ds:[rsi]
   140008650:	jae    0x1400086c1
   140008652:	ins    BYTE PTR es:[rdi],dx
   140008653:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140008656:	fs add BYTE PTR gs:[rax],al
   14000865a:	movabs al,ds:0x4d74616d726f4601
   140008663:	gs jae 0x1400086d9
   140008666:	(bad)  
   140008667:	addr32 gs push rdi
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	jmp    0x140008672
   14000866e:	push   rbx
   14000866f:	gs je  0x1400086b5
   140008672:	outs   dx,DWORD PTR ds:[rsi]
   140008673:	outs   dx,BYTE PTR ds:[rsi]
   140008674:	jae    0x1400086e5
   140008676:	ins    BYTE PTR es:[rdi],dx
   140008677:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000867a:	fs add BYTE PTR gs:[rax],al
   14000867e:	leave  
   14000867f:	add    al,BYTE PTR [rdi+0x65]
   140008682:	je     0x1400086d7
   140008684:	je     0x1400086ea
   140008686:	rex.W (bad) 
   140008688:	outs   dx,BYTE PTR ds:[rsi]
   140008689:	fs ins BYTE PTR es:[rdi],dx
   14000868b:	add    BYTE PTR gs:[rax],al
   14000868e:	rex.WXB
   14000868f:	rex.RB push r10
   140008691:	rex.WRX
   140008692:	rex.RB
   140008693:	xor    r14,QWORD PTR [rdx]
   140008696:	cs fs ins BYTE PTR es:[rdi],dx
   140008699:	ins    BYTE PTR es:[rdi],dx
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	mov    al,BYTE PTR [rbx]
   14000869e:	pop    rdi
   14000869f:	ja     0x140008704
   1400086a1:	jae    0x14000870c
   1400086a3:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	popf   
   1400086a9:	add    al,0x70
   1400086ab:	jb     0x140008716
   1400086ad:	outs   dx,BYTE PTR ds:[rsi]
   1400086ae:	je     0x140008716
   1400086b0:	add    BYTE PTR [rax],al
   1400086b2:	jns    0x1400086b8
   1400086b4:	imul   esi,DWORD PTR [rbx+0x77],0x65707075
   1400086bb:	jb     0x1400086bd
   1400086bd:	add    BYTE PTR [rsp+rax*1+0x69],ch
   1400086c1:	jae    0x140008736
   1400086c3:	jo     0x140008726
   1400086c5:	movsxd esp,DWORD PTR [rbp+0x0]
   1400086c8:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400086cf:	movsxd eax,DWORD PTR [rax]
   1400086d1:	add    BYTE PTR [rdi+0x4],ch
   1400086d4:	imul   esi,DWORD PTR [rbx+0x77],0x68706c61
   1400086db:	(bad)  
   1400086dc:	add    BYTE PTR [rax],al
   1400086de:	pop    rbx
   1400086df:	add    al,0x67
   1400086e1:	gs je  0x140008747
   1400086e4:	push   0x14007261
   1400086e9:	add    eax,0x73736377
   1400086ee:	je     0x140008762
   1400086f0:	add    BYTE PTR [rax],al
   1400086f2:	rex.RB add al,0x66
   1400086f5:	jo     0x140008769
   1400086f7:	imul   ebp,DWORD PTR [rsi+0x74],0x44c0066
   1400086fe:	data16 jb 0x140008766
   140008701:	add    BYTE PTR gs:[rax],al
   140008704:	movsxd eax,DWORD PTR [rbx]
   140008706:	pop    rdi
   140008707:	jbe    0x14000877c
   140008709:	outs   dx,BYTE PTR ds:[rsi]
   14000870a:	jo     0x14000877e
   14000870c:	imul   ebp,DWORD PTR [rsi+0x74],0x5000066
   140008713:	add    eax,0x63736377
   140008718:	jo     0x140008793
   14000871a:	pop    rdi
   14000871b:	jae    0x14000871d
   14000871d:	add    BYTE PTR [rbx],bl
   14000871f:	add    eax,0x74736377
   140008724:	outs   dx,DWORD PTR ds:[rsi]
   140008725:	jne    0x140008793
   140008727:	add    BYTE PTR [rdx],dh
   140008729:	add    al,0x65
   14000872b:	js     0x140008796
   14000872d:	je     0x14000872f
   14000872f:	add    BYTE PTR [rcx],al
   140008731:	add    eax,0x63736377
   140008736:	push   0xffffffffa9000072
   14000873b:	add    al,0x72
   14000873d:	gs (bad) 
   14000873f:	ins    BYTE PTR es:[rdi],dx
   140008740:	ins    BYTE PTR es:[rdi],dx
   140008741:	outs   dx,DWORD PTR ds:[rsi]
   140008742:	movsxd eax,DWORD PTR [rax]
   140008744:	test   DWORD PTR [rbx],eax
   140008746:	pop    rdi
   140008747:	ja     0x1400087ac
   140008749:	jae    0x1400087af
   14000874b:	jne    0x1400087bd
   14000874d:	add    BYTE PTR [rsi],bh
   14000874f:	add    al,0x66
   140008751:	addr32 gs je 0x1400087cc
   140008755:	jae    0x140008757
   140008757:	add    bh,dl
   140008759:	add    bl,BYTE PTR [rdi+0x73]
   14000875c:	outs   dx,BYTE PTR ds:[rsi]
   14000875d:	ja     0x1400087cf
   14000875f:	jb     0x1400087ca
   140008761:	outs   dx,BYTE PTR ds:[rsi]
   140008762:	je     0x1400087ca
   140008764:	pop    rdi
   140008765:	jae    0x140008767
   140008767:	add    BYTE PTR [rdx],cl
   140008769:	add    eax,0x6e736377
   14000876e:	movsxd esp,DWORD PTR [rcx+0x74]
   140008771:	pop    rdi
   140008772:	jae    0x140008774
   140008774:	or     eax,DWORD PTR [rip+0x6e736377]        # 0x1ae73eaf1
   14000877a:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000877d:	add    BYTE PTR [rbp+0x0],dl
   140008780:	pop    rdi
   140008781:	pop    rax
   140008782:	movsxd esi,DWORD PTR [rax+0x74]
   140008785:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000878e:	pop    rdi
   14000878f:	(bad)  
   140008790:	ins    DWORD PTR es:[rdi],dx
   140008791:	jae    0x1400087fa
   140008793:	pop    rdi
   140008794:	gs js  0x140008800
   140008797:	je     0x140008799
   140008799:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000879f:	addr32 gs je 0x140008810
   1400087a3:	(bad)  
   1400087a4:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400087ab:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400087b1:	gs je  0x140008813
   1400087b4:	(bad)  
   1400087b5:	jo     0x140008827
   1400087b7:	pop    rdi
   1400087b8:	je     0x140008833
   1400087ba:	jo     0x140008821
   1400087bc:	add    BYTE PTR [rax],al
   1400087be:	(bad)  
   1400087bf:	add    DWORD PTR [rdi+0x65],ebx
   1400087c2:	js     0x14000882d
   1400087c4:	je     0x1400087c6
   1400087c6:	rol    DWORD PTR [rax],0x5f
   1400087c9:	movsxd esp,DWORD PTR [rbp+0x78]
   1400087cc:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400087d4:	jae    0x14000883b
   1400087d6:	je     0x14000884d
   1400087d8:	jae    0x14000883f
   1400087da:	jb     0x140008849
   1400087dc:	(bad)  
   1400087dd:	je     0x140008847
   1400087df:	gs jb  0x140008854
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	jge    0x1400087e7
   1400087e6:	pop    rdi
   1400087e7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400087ee:	ins    DWORD PTR es:[rdi],dx
   1400087ef:	add    BYTE PTR [rdi+0x0],dl
   1400087f2:	pop    rdi
   1400087f3:	pop    rdi
   1400087f4:	rex.XB pop r15
   1400087f6:	jae    0x140008868
   1400087f8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400087fc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008803:	ins    BYTE PTR es:[rdi],dx
   140008804:	gs jb  0x140008807
   140008807:	add    BYTE PTR [rdi],ah
   140008809:	add    DWORD PTR [rdi+0x66],ebx
   14000880c:	ins    DWORD PTR es:[rdi],dx
   14000880d:	outs   dx,DWORD PTR ds:[rsi]
   14000880e:	fs add BYTE PTR gs:[rax],al
   140008812:	rol    BYTE PTR [rax],cl
   140008814:	pop    rdi
   140008815:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008818:	ins    DWORD PTR es:[rdi],dx
   140008819:	outs   dx,DWORD PTR ds:[rsi]
   14000881a:	fs add BYTE PTR gs:[rax],al
   14000881e:	ins    DWORD PTR es:[rdi],dx
   14000881f:	jae    0x140008897
   140008821:	movsxd esi,DWORD PTR [rdx+0x74]
   140008824:	cs fs ins BYTE PTR es:[rdi],dx
   140008827:	ins    BYTE PTR es:[rdi],dx
   140008828:	add    BYTE PTR [rax],al
   14000882a:	(bad)  
   14000882b:	add    BYTE PTR [rdi],bh
   14000882d:	je     0x140008894
   14000882f:	jb     0x14000889e
   140008831:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008838:	pop    rcx
   140008839:	pop    r8
   14000883b:	pop    rax
   14000883c:	pop    rdx
   14000883d:	add    BYTE PTR [rax],ah
   14000883f:	add    BYTE PTR [rsi+0x65],cl
   140008842:	je     0x140008897
   140008844:	gs jb  0x1400088bd
   140008847:	gs jb  0x140008891
   14000884a:	gs je  0x140008896
   14000884d:	outs   dx,BYTE PTR ds:[rsi]
   14000884e:	outs   dx,WORD PTR ds:[rsi]
   140008850:	add    BYTE PTR [rax],al
   140008852:	adc    al,BYTE PTR [rax]
   140008854:	rex.R jae 0x14000889e
   140008857:	gs je  0x14000889e
   14000885a:	movsxd ecx,DWORD PTR [rsi+0x61]
   14000885d:	ins    DWORD PTR es:[rdi],dx
   14000885e:	gs push rdi
   140008860:	add    BYTE PTR [rax],al
   140008862:	add    BYTE PTR es:[rbx+rsi*2+0x61],cl
   140008867:	rex.RX jb 0x1400088cf
   14000886a:	gs push rdx
   14000886c:	gs je  0x1400088e4
   14000886f:	jb     0x1400088df
   140008871:	rex.X jne 0x1400088da
   140008874:	data16 gs jb 0x140008878
   140008878:	add    DWORD PTR [rax],eax
   14000887a:	rex.WRX
   14000887b:	gs je  0x1400088bf
   14000887e:	jo     0x1400088e9
   140008880:	rex.X jne 0x1400088e9
   140008883:	data16 gs jb 0x1400088cd
   140008887:	jb     0x1400088ee
   140008889:	add    BYTE PTR gs:[rax],al
   14000888c:	sub    DWORD PTR [rax],eax
   14000888e:	rex.WR jae 0x1400088f2
   140008891:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008893:	outs   dx,DWORD PTR ds:[rsi]
   140008894:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140008898:	jne    0x14000890e
   14000889a:	push   0x69746e65
   14000889f:	movsxd esp,DWORD PTR [rcx+0x74]
   1400088a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b636150
   1400088a9:	(bad)  
   1400088aa:	add    BYTE PTR gs:[eax],al
   1400088ae:	sbb    eax,DWORD PTR [rax]
   1400088b0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400088b2:	(bad)  
   1400088b3:	fs push rbx
   1400088b5:	je     0x140008929
   1400088b7:	imul   ebp,DWORD PTR [rsi+0x67],0x230057
   1400088be:	rex.WR jae 0x140008922
   1400088c1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400088c3:	outs   dx,BYTE PTR ds:[rsi]
   1400088c4:	outs   dx,BYTE PTR ds:[rsi]
   1400088c5:	movsxd esi,DWORD PTR gs:[rbp+rdx*2+0x6e]
   1400088ca:	je     0x14000893e
   1400088cc:	jne    0x140008941
   1400088ce:	je     0x140008935
   1400088d0:	add    BYTE PTR fs:[rdx],ah
   1400088d3:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400088d7:	rex.XB (bad) 
   1400088d9:	ins    BYTE PTR es:[rdi],dx
   1400088da:	ins    BYTE PTR es:[rdi],dx
   1400088db:	rex.B jne 0x140008952
   1400088de:	push   0x69746e65
   1400088e3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400088e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b636150
   1400088ed:	(bad)  
   1400088ee:	add    BYTE PTR gs:[eax],al
   1400088f2:	sub    eax,0x656c5300
   1400088f7:	gs jo  0x1400088fa
   1400088fa:	add    al,BYTE PTR [rax]
   1400088fc:	push   rdx
   1400088fd:	je     0x14000896b
   1400088ff:	rex.XB (bad) 
   140008901:	jo     0x140008977
   140008903:	jne    0x140008977
   140008905:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008908:	outs   dx,BYTE PTR ds:[rsi]
   140008909:	je     0x140008970
   14000890b:	js     0x140008981
   14000890d:	add    BYTE PTR [rcx],cl
   14000890f:	add    BYTE PTR [rdx+0x74],dl
   140008912:	ins    BYTE PTR es:[rdi],dx
   140008913:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008915:	outs   dx,DWORD PTR ds:[rsi]
   140008916:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000891a:	jne    0x14000898a
   14000891c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008920:	outs   dx,BYTE PTR ds:[rsi]
   140008921:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008923:	je     0x140008997
   140008925:	jns    0x140008927
   140008927:	add    BYTE PTR [rdi],cl
   140008929:	add    BYTE PTR [rdx+0x74],dl
   14000892c:	ins    BYTE PTR es:[rdi],dx
   14000892d:	push   rsi
   14000892e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008935:	outs   dx,BYTE PTR ds:[rsi]
   140008936:	ja     0x1400089a1
   140008938:	outs   dx,BYTE PTR ds:[rsi]
   140008939:	add    BYTE PTR fs:[rax],al
   14000893c:	adc    DWORD PTR [rax],eax
   14000893e:	push   rbp
   14000893f:	outs   dx,BYTE PTR ds:[rsi]
   140008940:	push   0x6c646e61
   140008945:	gs fs rex.RB js 0x1400089ad
   14000894a:	gs jo  0x1400089c1
   14000894d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008954:	gs jb  0x140008957
   140008957:	add    BYTE PTR [rdi],cl
   140008959:	add    BYTE PTR [rbx+0x65],dl
   14000895c:	je     0x1400089b3
   14000895e:	outs   dx,BYTE PTR ds:[rsi]
   14000895f:	push   0x6c646e61
   140008964:	gs fs rex.RB js 0x1400089cc
   140008969:	gs jo  0x1400089e0
   14000896c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008973:	gs jb  0x140008976
   140008976:	or     al,0x0
   140008978:	rex.RXB
   140008979:	gs je  0x1400089bf
   14000897c:	jne    0x1400089f0
   14000897e:	jb     0x1400089e5
   140008980:	outs   dx,BYTE PTR ds:[rsi]
   140008981:	je     0x1400089d3
   140008983:	jb     0x1400089f4
   140008985:	movsxd esp,DWORD PTR [rbp+0x73]
   140008988:	jae    0x14000898a
   14000898a:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000898f:	ins    DWORD PTR es:[rdi],dx
   140008990:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008997:	outs   dx,DWORD PTR ds:[rsi]
   140008998:	movsxd esp,DWORD PTR [rbp+0x73]
   14000899b:	jae    0x14000899d
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    BYTE PTR [rcx+0x75],dl
   1400089a2:	gs jb  0x140008a1e
   1400089a5:	push   rax
   1400089a6:	gs jb  0x140008a0f
   1400089a9:	outs   dx,DWORD PTR ds:[rsi]
   1400089aa:	jb     0x140008a19
   1400089ac:	(bad)  
   1400089ad:	outs   dx,BYTE PTR ds:[rsi]
   1400089ae:	movsxd esp,DWORD PTR [rbp+0x43]
   1400089b1:	outs   dx,DWORD PTR ds:[rsi]
   1400089b2:	jne    0x140008a22
   1400089b4:	je     0x140008a1b
   1400089b6:	jb     0x1400089b8
   1400089b8:	or     eax,0x74654700
   1400089bd:	rex.XB jne 0x140008a32
   1400089c0:	jb     0x140008a27
   1400089c2:	outs   dx,BYTE PTR ds:[rsi]
   1400089c3:	je     0x140008a15
   1400089c5:	jb     0x140008a36
   1400089c7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400089ca:	jae    0x140008a15
   1400089cc:	add    BYTE PTR fs:[rcx],dl
   1400089cf:	add    BYTE PTR [rdi+0x65],al
   1400089d2:	je     0x140008a17
   1400089d4:	jne    0x140008a48
   1400089d6:	jb     0x140008a3d
   1400089d8:	outs   dx,BYTE PTR ds:[rsi]
   1400089d9:	je     0x140008a2f
   1400089db:	push   0x64616572
   1400089e0:	rex.WB
   1400089e1:	add    BYTE PTR fs:[rax],al
   1400089e4:	adc    al,0x0
   1400089e6:	rex.RXB
   1400089e7:	gs je  0x140008a3d
   1400089ea:	jns    0x140008a5f
   1400089ec:	je     0x140008a53
   1400089ee:	ins    DWORD PTR es:[rdi],dx
   1400089ef:	push   rsp
   1400089f0:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400089f7:	ins    BYTE PTR es:[rdi],dx
   1400089f8:	gs push rsp
   1400089fa:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140008a01:	gs je  0x140008a58
   140008a04:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008a0b:	je     0x140008a0d
   140008a0d:	add    BYTE PTR [rdx],al
   140008a0f:	add    BYTE PTR [rax+0x65],cl
   140008a12:	(bad)  
   140008a13:	jo     0x140008a56
   140008a15:	ins    BYTE PTR es:[rdi],dx
   140008a16:	ins    BYTE PTR es:[rdi],dx
   140008a17:	outs   dx,DWORD PTR ds:[rsi]
   140008a18:	movsxd eax,DWORD PTR [rax]
   140008a1a:	(bad)  
   140008a1b:	add    BYTE PTR [rax+0x65],cl
   140008a1e:	(bad)  
   140008a1f:	jo     0x140008a67
   140008a21:	jb     0x140008a88
   140008a23:	add    BYTE PTR gs:[rax],al
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	rex.RXB
   140008a29:	gs je  0x140008a7c
   140008a2c:	jb     0x140008a9d
   140008a2e:	movsxd esp,DWORD PTR [rbp+0x73]
   140008a31:	jae    0x140008a7b
   140008a33:	gs (bad) 
   140008a35:	jo     0x140008a37
   140008a37:	add    BYTE PTR [rdx],bh
   140008a39:	add    BYTE PTR [rbx+0x65],dl
   140008a3c:	je     0x140008a92
   140008a3e:	push   0x64616572
   140008a43:	push   rbp
   140008a44:	rex.WB
   140008a45:	rex.WR (bad) 
   140008a47:	outs   dx,BYTE PTR ds:[rsi]
   140008a48:	addr32 jne 0x140008aac
   140008a4b:	add    BYTE PTR gs:[ecx+0x0],bl
   140008a50:	push   rdi
   140008a51:	jb     0x140008abc
   140008a53:	je     0x140008aba
   140008a55:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x69570007
   140008a5e:	fs gs rex.XB push 0x6f547261
   140008a66:	rex.WRB jne 0x140008ad5
   140008a69:	je     0x140008ad4
   140008a6b:	rex.X jns 0x140008ae2
   140008a6e:	add    BYTE PTR gs:[rbx],al
   140008a71:	add    BYTE PTR [rdi+0x65],al
   140008a74:	je     0x140008ab9
   140008a76:	outs   dx,DWORD PTR ds:[rsi]
   140008a77:	outs   dx,BYTE PTR ds:[rsi]
   140008a78:	jae    0x140008ae9
   140008a7a:	ins    BYTE PTR es:[rdi],dx
   140008a7b:	gs rex.WRXB jne 0x140008af3
   140008a7f:	jo     0x140008af6
   140008a81:	je     0x140008ac6
   140008a83:	push   rax
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	push   rdi
   140008a87:	rex.WR
   140008a88:	rex.R
   140008a89:	push   r8
   140008a8b:	xor    esi,DWORD PTR [rdx]
   140008a8d:	cs fs ins BYTE PTR es:[rdi],dx
   140008a90:	ins    BYTE PTR es:[rdi],dx
   140008a91:	add    BYTE PTR [rbx+0x72],dh
   140008a94:	jbe    0x140008af9
   140008a96:	ins    BYTE PTR es:[rdi],dx
   140008a97:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   140008a9d:	add    BYTE PTR [rdi+rbp*2+0x67],ch
   140008aa1:	outs   dx,DWORD PTR ds:[rsi]
   140008aa2:	outs   dx,BYTE PTR ds:[rsi]
   140008aa3:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   140008aa7:	fs ins BYTE PTR es:[rdi],dx
   140008aa9:	ins    BYTE PTR es:[rdi],dx
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	push   rbx
   140008aad:	jae    0x140008b1f
   140008aaf:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   140008ab6:	ins    BYTE PTR es:[rdi],dx
   140008ab7:	add    BYTE PTR [rsi+0x65],ch
   140008aba:	je     0x140008b31
   140008abc:	je     0x140008b27
   140008abe:	ins    BYTE PTR es:[rdi],dx
   140008abf:	jae    0x140008aef
   140008ac1:	fs ins BYTE PTR es:[rdi],dx
   140008ac3:	ins    BYTE PTR es:[rdi],dx
   140008ac4:	add    BYTE PTR [rax],al
   140008ac6:	(bad)  
   140008ac7:	jo     0x140008b32
   140008ac9:	sub    eax,0x772d736d
   140008ace:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008ad5:	sub    eax,0x7262696c
   140008ada:	(bad)  
   140008adb:	jb     0x140008b56
   140008add:	ins    BYTE PTR es:[rdi],dx
   140008ade:	outs   dx,DWORD PTR ds:[rsi]
   140008adf:	(bad)  
   140008ae0:	fs gs jb 0x140008b11
   140008ae4:	ins    BYTE PTR es:[rdi],dx
   140008ae5:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b81d
   140008aeb:	fs ins BYTE PTR es:[rdi],dx
   140008aed:	ins    BYTE PTR es:[rdi],dx
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	(bad)  
   140008af1:	jo     0x140008b5c
   140008af3:	sub    eax,0x772d736d
   140008af8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008aff:	sub    eax,0x636e7973
   140008b04:	push   0x2d316c2d
   140008b09:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64b93f
   140008b0f:	ins    BYTE PTR es:[rdi],dx
   140008b10:	add    BYTE PTR [rax],al
   140008b12:	(bad)  
   140008b13:	jo     0x140008b7e
   140008b15:	sub    eax,0x772d736d
   140008b1a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008b21:	sub    eax,0x736c7472
   140008b26:	jne    0x140008b98
   140008b28:	jo     0x140008b99
   140008b2a:	jb     0x140008ba0
   140008b2c:	sub    eax,0x322d316c
   140008b31:	sub    eax,0x6c642e30
   140008b36:	ins    BYTE PTR es:[rdi],dx
   140008b37:	add    BYTE PTR [rcx+0x70],ah
   140008b3a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfeb1
   140008b44:	outs   dx,DWORD PTR ds:[rsi]
   140008b45:	jb     0x140008bac
   140008b47:	sub    eax,0x6f727265
   140008b4c:	jb     0x140008bb6
   140008b4e:	(bad)  
   140008b4f:	outs   dx,BYTE PTR ds:[rsi]
   140008b50:	fs ins BYTE PTR es:[rdi],dx
   140008b52:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140008b59:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64b990
   140008b5f:	ins    BYTE PTR es:[rdi],dx
   140008b60:	add    BYTE PTR [rax],al
   140008b62:	(bad)  
   140008b63:	jo     0x140008bce
   140008b65:	sub    eax,0x772d736d
   140008b6a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008b71:	sub    eax,0x636f7270
   140008b76:	gs jae 0x140008bec
   140008b79:	je     0x140008be3
   140008b7b:	jb     0x140008be2
   140008b7d:	(bad)  
   140008b7e:	fs jae 0x140008bae
   140008b81:	ins    BYTE PTR es:[rdi],dx
   140008b82:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32b8b9
   140008b88:	fs ins BYTE PTR es:[rdi],dx
   140008b8a:	ins    BYTE PTR es:[rdi],dx
   140008b8b:	add    BYTE PTR [rcx+0x70],ah
   140008b8e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dff05
   140008b98:	outs   dx,DWORD PTR ds:[rsi]
   140008b99:	jb     0x140008c00
   140008b9b:	sub    eax,0x666f7270
   140008ba0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140008ba8:	sub    eax,0x6c642e30
   140008bad:	ins    BYTE PTR es:[rdi],dx
   140008bae:	add    BYTE PTR [rax],al
   140008bb0:	(bad)  
   140008bb1:	jo     0x140008c1c
   140008bb3:	sub    eax,0x772d736d
   140008bb8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008bbf:	sub    eax,0x69737973
   140008bc4:	outs   dx,BYTE PTR ds:[rsi]
   140008bc5:	outs   dx,WORD PTR ds:[rsi]
   140008bc7:	sub    eax,0x322d316c
   140008bcc:	sub    eax,0x6c642e31
   140008bd1:	ins    BYTE PTR es:[rdi],dx
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	(bad)  
   140008bd5:	jo     0x140008c40
   140008bd7:	sub    eax,0x772d736d
   140008bdc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008be3:	sub    eax,0x70616568
   140008be8:	sub    eax,0x322d316c
   140008bed:	sub    eax,0x6c642e30
   140008bf2:	ins    BYTE PTR es:[rdi],dx
   140008bf3:	add    BYTE PTR [rcx+0x70],ah
   140008bf6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dff6d
   140008c00:	outs   dx,DWORD PTR ds:[rsi]
   140008c01:	jb     0x140008c68
   140008c03:	sub    eax,0x61636f6c
   140008c08:	ins    BYTE PTR es:[rdi],dx
   140008c09:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140008c10:	sub    eax,0x322d316c
   140008c15:	sub    eax,0x6c642e31
   140008c1a:	ins    BYTE PTR es:[rdi],dx
   140008c1b:	add    BYTE PTR [rcx+0x70],ah
   140008c1e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dff95
   140008c28:	outs   dx,DWORD PTR ds:[rsi]
   140008c29:	jb     0x140008c90
   140008c2b:	sub    eax,0x656c6966
   140008c30:	sub    eax,0x322d316c
   140008c35:	sub    eax,0x6c642e31
   140008c3a:	ins    BYTE PTR es:[rdi],dx
   140008c3b:	add    BYTE PTR [rcx+0x70],ah
   140008c3e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dffb5
   140008c48:	outs   dx,DWORD PTR ds:[rsi]
   140008c49:	jb     0x140008cb0
   140008c4b:	sub    eax,0x69727473
   140008c50:	outs   dx,BYTE PTR ds:[rsi]
   140008c51:	addr32 sub eax,0x312d316c
   140008c57:	sub    eax,0x6c642e30
   140008c5c:	ins    BYTE PTR es:[rdi],dx
   140008c5d:	add    BYTE PTR [rcx+0x70],ah
   140008c60:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dffd7
   140008c6a:	outs   dx,DWORD PTR ds:[rsi]
   140008c6b:	jb     0x140008cd2
   140008c6d:	sub    eax,0x736e6f63
   140008c72:	outs   dx,DWORD PTR ds:[rsi]
   140008c73:	ins    BYTE PTR es:[rdi],dx
   140008c74:	gs sub eax,0x312d316c
   140008c7a:	sub    eax,0x6c642e30
   140008c7f:	ins    BYTE PTR es:[rdi],dx
   140008c80:	add    BYTE PTR [rax],al
   140008c82:	(bad)  
   140008c83:	add    al,0x52
   140008c85:	je     0x140008cf3
   140008c87:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c89:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   140008c91:	gs push rbx
   140008c93:	je     0x140008d07
   140008c95:	imul   ebp,DWORD PTR [rsi+0x67],0x2df0000
   140008c9c:	push   rdx
   140008c9d:	je     0x140008d0b
   140008c9f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008ca1:	ins    DWORD PTR es:[rdi],dx
   140008ca2:	jo     0x140008d05
   140008ca4:	jb     0x140008d0b
   140008ca6:	push   rbp
   140008ca7:	outs   dx,BYTE PTR ds:[rsi]
   140008ca8:	imul   esp,DWORD PTR [rbx+0x6f],0x74536564
   140008caf:	jb     0x140008d1a
   140008cb1:	outs   dx,BYTE PTR ds:[rsi]
   140008cb2:	add    BYTE PTR [ebx],cl
   140008cb5:	add    al,0x52
   140008cb7:	je     0x140008d25
   140008cb9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008cbb:	imul   esi,DWORD PTR [rbx+rdx*2+0x74],0x676e6972
   140008cc3:	add    BYTE PTR [rsi+0x74],ch
   140008cc6:	fs ins BYTE PTR es:[rdi],dx
   140008cc8:	ins    BYTE PTR es:[rdi],dx
   140008cc9:	cs fs ins BYTE PTR es:[rdi],dx
   140008ccc:	ins    BYTE PTR es:[rdi],dx
   140008ccd:	add    BYTE PTR [rcx+0x695f5f00],al
   140008cd3:	outs   dx,DWORD PTR ds:[rsi]
   140008cd4:	(bad)  
   140008cd5:	pop    rdi
   140008cd6:	data16 jne 0x140008d47
   140008cd9:	movsxd eax,DWORD PTR [rax]
   140008cdb:	add    BYTE PTR [rbp+0x4],dl
   140008cde:	data16 ja 0x140008d51
   140008ce1:	jb     0x140008d4c
   140008ce3:	outs   dx,BYTE PTR ds:[rsi]
   140008ce4:	je     0x140008d4c
   140008ce6:	add    BYTE PTR [rax],al
   140008ce8:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140008cee:	ja     0x140008d60
   140008cf0:	jb     0x140008d5b
   140008cf2:	outs   dx,BYTE PTR ds:[rsi]
   140008cf3:	je     0x140008d5b
   140008cf5:	add    dl,ch
   140008cf7:	add    ebx,DWORD PTR [rdi+0x77]
   140008cfa:	jae    0x140008d61
   140008cfc:	je     0x140008d6a
   140008cfe:	outs   dx,DWORD PTR ds:[rsi]
   140008cff:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008d02:	add    BYTE PTR gs:[rdx+0x6d656d04],dl
   140008d09:	movsxd esi,DWORD PTR [rax+0x79]
   140008d0c:	add    BYTE PTR [rax],al
   140008d0e:	xchg   esi,eax
   140008d0f:	add    al,0x6d
   140008d11:	gs ins DWORD PTR es:[rdi],dx
   140008d13:	jae    0x140008d7a
   140008d15:	je     0x140008d17
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax+0x68],dh
   140009022:	add    BYTE PTR [rax+0x1],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rcx],al
   140009029:	add    BYTE PTR [rax],al
   14000902b:	add    BYTE PTR [rax],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    al,dl
   140009031:	sbb    al,BYTE PTR [rax]
   140009033:	rex add DWORD PTR [rax],eax
	...
   140009046:	add    BYTE PTR [rax],al
   140009048:	push   rsp
   140009049:	(bad)  
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	mov    BYTE PTR [rax+0x0],ch
   140009053:	rex add DWORD PTR [rax],eax
   140009056:	add    BYTE PTR [rax],al
   140009058:	add    DWORD PTR [rax],eax
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	rcr    BYTE PTR [rdx],1
   140009062:	add    BYTE PTR [rax+0x1],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax+0x1400068],ah
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rcx],al
   140009071:	add    BYTE PTR [rax],al
   140009073:	add    BYTE PTR [rsi+0x27],dl
   140009076:	add    BYTE PTR [rax],al
   140009078:	push   rsp
   140009079:	(bad)  
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	mov    al,0x68
   140009082:	add    BYTE PTR [rax+0x1],al
   140009085:	add    BYTE PTR [rax],al
   140009087:	add    BYTE PTR [rdx],al
   140009089:	add    BYTE PTR [rax],al
   14000908b:	add    BYTE PTR [rax],al
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rax],dh
   140009091:	sub    al,BYTE PTR [rax]
   140009093:	rex add DWORD PTR [rax],eax
   140009096:	add    BYTE PTR [rax],al
   140009098:	enter  0x68,0x40
   14000909c:	add    DWORD PTR [rax],eax
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	add    DWORD PTR [rax],eax
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	push   rdi
   1400090a5:	(bad)  
	...
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	loopne 0x14000911a
   1400090b2:	add    BYTE PTR [rax+0x1],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rcx],al
   1400090b9:	add    BYTE PTR [rax],al
   1400090bb:	add    BYTE PTR [rax],al
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    al,dl
   1400090c1:	xor    al,0x0
   1400090c3:	rex add DWORD PTR [rax],eax
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	lock push 0x14000
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	or     BYTE PTR [rax],al
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	pop    rax
   1400090d5:	(bad)  
	...
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	or     BYTE PTR [rcx+0x0],ch
   1400090e3:	rex add DWORD PTR [rax],eax
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	add    DWORD PTR [rax],eax
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	rex xor eax,0x14000
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	lock push 0x14000
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	or     BYTE PTR [rax],al
   140009102:	add    BYTE PTR [rax],al
   140009104:	pop    rcx
   140009105:	(bad)  
   140009106:	add    BYTE PTR [rax],al
   140009108:	push   rbp
   140009109:	(bad)  
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	sbb    BYTE PTR [rcx+0x0],ch
   140009113:	rex add DWORD PTR [rax],eax
   140009116:	add    BYTE PTR [rax],al
   140009118:	add    al,BYTE PTR [rax]
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	xor    BYTE PTR [rsi],dh
   140009122:	add    BYTE PTR [rax+0x1],al
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    BYTE PTR [rax],dh
   140009129:	imul   eax,DWORD PTR [rax],0x140
   14000912f:	add    BYTE PTR [rax],al
   140009131:	add    BYTE PTR [rax],al
   140009133:	add    BYTE PTR [rdx+0x27],bl
	...
   14000913e:	add    BYTE PTR [rax],al
   140009140:	push   rax
   140009141:	imul   eax,DWORD PTR [rax],0x140
   140009147:	add    BYTE PTR [rdx],al
   140009149:	add    BYTE PTR [rax],al
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rax+0x36],dl
   140009152:	add    BYTE PTR [rax+0x1],al
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rax],dh
   140009159:	imul   eax,DWORD PTR [rax],0x140
   14000915f:	add    BYTE PTR [rax],al
   140009161:	add    BYTE PTR [rax],al
   140009163:	add    BYTE PTR [rbx+0x27],bl
   140009166:	add    BYTE PTR [rax],al
   140009168:	push   rbp
   140009169:	(bad)  
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	add    BYTE PTR [rax],al
   140009170:	push   0x1400069
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rcx],al
   140009179:	add    BYTE PTR [rax],al
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax+0x2b],al
   140009182:	add    BYTE PTR [rax+0x1],al
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rax+0x69],bh
   14000918a:	add    BYTE PTR [rax+0x1],al
   14000918d:	add    BYTE PTR [rax],al
   14000918f:	add    BYTE PTR [rax+rax*1],al
   140009192:	add    BYTE PTR [rax],al
   140009194:	pop    rsp
   140009195:	(bad)  
	...
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	mov    BYTE PTR [rcx+0x0],ch
   1400091a3:	rex add DWORD PTR [rax],eax
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	add    DWORD PTR [rax],eax
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	movabs al,ds:0x140002a
	...
   1400091c5:	add    BYTE PTR [rax],al
   1400091c7:	add    BYTE PTR [rdi+riz*1+0x0],dl
   1400091cb:	add    BYTE PTR [rax],al
   1400091cd:	add    BYTE PTR [rax],al
   1400091cf:	add    BYTE PTR [rax+0x1400069],dh
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rcx],al
   1400091d9:	add    BYTE PTR [rax],al
   1400091db:	add    BYTE PTR [rax],al
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rax+0x140002a],ah
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    al,ah
   1400091e9:	imul   eax,DWORD PTR [rax],0x140
   1400091ef:	add    BYTE PTR [rax],al
   1400091f1:	add    BYTE PTR [rax],al
   1400091f3:	add    BYTE PTR [rbp+0x27],bl
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	push   rsp
   1400091f9:	(bad)  
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	lock imul eax,DWORD PTR [rax],0x140
   140009207:	add    BYTE PTR [rcx],al
   140009209:	add    BYTE PTR [rax],al
   14000920b:	add    BYTE PTR [rax],al
   14000920d:	add    BYTE PTR [rax],al
   14000920f:	add    al,al
   140009211:	xor    al,BYTE PTR [rax]
   140009213:	rex add DWORD PTR [rax],eax
   140009216:	add    BYTE PTR [rax],al
   140009218:	adc    BYTE PTR [rdx+0x0],ch
   14000921b:	rex add DWORD PTR [rax],eax
   14000921e:	add    BYTE PTR [rax],al
   140009220:	add    BYTE PTR [rax],al
   140009222:	add    BYTE PTR [rax],al
   140009224:	pop    rsi
   140009225:	(bad)  
   140009226:	add    BYTE PTR [rax],al
   140009228:	push   rbp
   140009229:	(bad)  
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	and    BYTE PTR [rdx+0x0],ch
   140009233:	rex add DWORD PTR [rax],eax
   140009236:	add    BYTE PTR [rax],al
   140009238:	add    DWORD PTR [rax],eax
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	add    BYTE PTR [rax],al
   14000923e:	add    BYTE PTR [rax],al
   140009240:	rcl    BYTE PTR [rdi],1
   140009242:	add    BYTE PTR [rax+0x1],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax],dh
   140009249:	push   0x0
   14000924b:	rex add DWORD PTR [rax],eax
   14000924e:	add    BYTE PTR [rax],al
   140009250:	add    eax,0x5f000000
   140009255:	(bad)  
	...
   14000925e:	add    BYTE PTR [rax],al
   140009260:	rex push 0x0
   140009263:	rex add DWORD PTR [rax],eax
   140009266:	add    BYTE PTR [rax],al
   140009268:	add    al,BYTE PTR [rax]
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	and    BYTE PTR [rax+0x0],al
   140009273:	rex add DWORD PTR [rax],eax
   140009276:	add    BYTE PTR [rax],al
   140009278:	(bad)  
   140009279:	push   0x0
   14000927b:	rex add DWORD PTR [rax],eax
   14000927e:	add    BYTE PTR [rax],al
   140009280:	add    al,0x0
   140009282:	add    BYTE PTR [rax],al
   140009284:	(bad)  
   140009285:	(bad)  
	...
   14000928e:	add    BYTE PTR [rax],al
   140009290:	js     0x1400092fc
   140009292:	add    BYTE PTR [rax+0x1],al
	...
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    BYTE PTR [rax+0x140002e],dh
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rax+0x140006a],bl
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rax+rax*1],al
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	(bad)  
   1400092b5:	(bad)  
	...
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	test   al,0x6a
   1400092c2:	add    BYTE PTR [rax+0x1],al
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    BYTE PTR [rdx],al
   1400092c9:	add    BYTE PTR [rax],al
   1400092cb:	add    BYTE PTR [rax],al
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rax+0x1400031],ah
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    al,cl
   1400092d9:	push   0x0
   1400092db:	rex add DWORD PTR [rax],eax
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	or     BYTE PTR [rax],al
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	(bad)  
   1400092e5:	(bad)  
	...
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	lock push 0x0
   1400092f3:	rex add DWORD PTR [rax],eax
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	add    al,BYTE PTR [rax]
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax],al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	add    BYTE PTR [rdx],dh
   140009302:	add    BYTE PTR [rax+0x1],al
   140009305:	add    BYTE PTR [rax],al
   140009307:	add    al,cl
   140009309:	push   0x0
   14000930b:	rex add DWORD PTR [rax],eax
   14000930e:	add    BYTE PTR [rax],al
   140009310:	or     BYTE PTR [rax],al
   140009312:	add    BYTE PTR [rax],al
   140009314:	movsxd esp,DWORD PTR [rdi]
	...
   14000931e:	add    BYTE PTR [rax],al
   140009320:	adc    BYTE PTR [rbx+0x0],ch
   140009323:	rex add DWORD PTR [rax],eax
   140009326:	add    BYTE PTR [rax],al
   140009328:	add    al,BYTE PTR [rax]
   14000932a:	add    BYTE PTR [rax],al
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	(bad)  
   140009331:	xor    al,BYTE PTR [rax]
   140009333:	rex add DWORD PTR [rax],eax
   140009336:	add    BYTE PTR [rax],al
   140009338:	enter  0x6a,0x40
   14000933c:	add    DWORD PTR [rax],eax
   14000933e:	add    BYTE PTR [rax],al
   140009340:	or     BYTE PTR [rax],al
   140009342:	add    BYTE PTR [rax],al
   140009344:	fs (bad) 
	...
   14000934e:	add    BYTE PTR [rax],al
   140009350:	xor    BYTE PTR [rbx+0x0],ch
   140009353:	rex add DWORD PTR [rax],eax
	...
   14000935e:	add    BYTE PTR [rax],al
   140009360:	adc    BYTE PTR [rip+0x14000],0x0        # 0x14001d367
   140009367:	add    BYTE PTR [rax+0x140006a],bl
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    BYTE PTR [rax],al
   140009371:	add    BYTE PTR [rax],al
   140009373:	add    BYTE PTR [rbp+0x27],ah
	...
   14000937e:	add    BYTE PTR [rax],al
   140009380:	imul   rax,QWORD PTR [rax],0x40
   140009384:	add    DWORD PTR [rax],eax
   140009386:	add    BYTE PTR [rax],al
   140009388:	add    al,BYTE PTR [rax]
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	mov    al,0x1d
   140009392:	add    BYTE PTR [rax+0x1],al
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rax+0x6b],dh
   14000939a:	add    BYTE PTR [rax+0x1],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rax],al
   1400093a1:	add    BYTE PTR [rax],al
   1400093a3:	add    BYTE PTR [rsi+0x27],ah
	...
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	sub    BYTE PTR [rbx+0x0],0x40
   1400093b4:	add    DWORD PTR [rax],eax
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	add    al,BYTE PTR [rax]
   1400093ba:	add    BYTE PTR [rax],al
   1400093bc:	add    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	xor    BYTE PTR [rax],ah
   1400093c2:	add    BYTE PTR [rax+0x1],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rax+0x6b],dh
   1400093ca:	add    BYTE PTR [rax+0x1],al
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rax],al
   1400093d1:	add    BYTE PTR [rax],al
   1400093d3:	add    BYTE PTR [rdi+0x27],ah
	...
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	test   al,0x6b
   1400093e2:	add    BYTE PTR [rax+0x1],al
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    BYTE PTR [rdx],al
   1400093e9:	add    BYTE PTR [rax],al
   1400093eb:	add    BYTE PTR [rax],al
   1400093ed:	add    BYTE PTR [rax],al
   1400093ef:	add    BYTE PTR [rax+0x1400047],ah
   1400093f5:	add    BYTE PTR [rax],al
   1400093f7:	add    al,cl
   1400093f9:	imul   eax,DWORD PTR [rax],0x40
   1400093fc:	add    DWORD PTR [rax],eax
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	or     BYTE PTR [rax],al
   140009402:	add    BYTE PTR [rax],al
   140009404:	push   0x27
   140009409:	add    BYTE PTR [rax],al
   14000940b:	add    BYTE PTR [rax],al
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    al,ah
   140009411:	imul   eax,DWORD PTR [rax],0x40
   140009414:	add    DWORD PTR [rax],eax
   140009416:	add    BYTE PTR [rax],al
   140009418:	add    DWORD PTR [rax],eax
   14000941a:	add    BYTE PTR [rax],al
   14000941c:	add    BYTE PTR [rax],al
   14000941e:	add    BYTE PTR [rax],al
   140009420:	loopne 0x14000946a
   140009422:	add    BYTE PTR [rax+0x1],al
   140009425:	add    BYTE PTR [rax],al
   140009427:	add    BYTE PTR [rax],al
   140009429:	ins    BYTE PTR es:[rdi],dx
   14000942a:	add    BYTE PTR [rax+0x1],al
   14000942d:	add    BYTE PTR [rax],al
   14000942f:	add    BYTE PTR [rax],al
   140009431:	add    BYTE PTR [rax],al
   140009433:	add    BYTE PTR [rcx+0x27],ch
	...
   14000943e:	add    BYTE PTR [rax],al
   140009440:	adc    BYTE PTR [rax+rax*1+0x40],ch
   140009444:	add    DWORD PTR [rax],eax
   140009446:	add    BYTE PTR [rax],al
   140009448:	add    al,BYTE PTR [rax]
   14000944a:	add    BYTE PTR [rax],al
   14000944c:	add    BYTE PTR [rax],al
   14000944e:	add    BYTE PTR [rax],al
   140009450:	loopne 0x14000949b
   140009452:	add    BYTE PTR [rax+0x1],al
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    al,cl
   140009459:	imul   eax,DWORD PTR [rax],0x40
   14000945c:	add    DWORD PTR [rax],eax
   14000945e:	add    BYTE PTR [rax],al
   140009460:	or     BYTE PTR [rax],al
   140009462:	add    BYTE PTR [rax],al
   140009464:	push   0x27
	...
   14000946e:	add    BYTE PTR [rax],al
   140009470:	xor    BYTE PTR [rax+rax*1+0x40],ch
   140009474:	add    DWORD PTR [rax],eax
   140009476:	add    BYTE PTR [rax],al
   140009478:	add    DWORD PTR [rax],eax
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	add    BYTE PTR [rax],al
   14000947e:	add    BYTE PTR [rax],al
   140009480:	nop
   140009481:	rex.WXB add BYTE PTR [r8+0x1],al
   140009485:	add    BYTE PTR [rax],al
   140009487:	add    BYTE PTR [rax],al
   140009489:	ins    BYTE PTR es:[rdi],dx
   14000948a:	add    BYTE PTR [rax+0x1],al
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rax],al
   140009491:	add    BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rbx+0x27],ch
	...
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	push   rax
   1400094a1:	ins    BYTE PTR es:[rdi],dx
   1400094a2:	add    BYTE PTR [rax+0x1],al
	...
   1400094ad:	add    BYTE PTR [rax],al
   1400094af:	add    BYTE PTR [rax+0x2c],al
   1400094b2:	add    BYTE PTR [rax+0x1],al
	...
   1400094cd:	add    BYTE PTR [rax],al
   1400094cf:	add    BYTE PTR [rax+0x6c],bl
   1400094d2:	add    BYTE PTR [rax+0x1],al
	...
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rax+0x2c],al
   1400094e2:	add    BYTE PTR [rax+0x1],al
	...
   1400094fd:	add    BYTE PTR [rax],al
   1400094ff:	add    BYTE PTR [rax],ch
   140009501:	outs   dx,DWORD PTR ds:[rsi]
   140009502:	(bad)  
   140009503:	push   0x65
   140009505:	movsxd esi,DWORD PTR [rbx+rax*2+0x6c]
   140009509:	(bad)  
   14000950a:	jae    0x14000957f
   14000950c:	cmp    eax,0x72657375
   140009511:	sub    DWORD PTR [rax],eax
   140009513:	add    BYTE PTR [rax],al
   140009515:	add    BYTE PTR [rax],al
   140009517:	add    BYTE PTR [rbx+0x45],cl
   14000951a:	push   rdx
   14000951b:	rex.X
   14000951c:	rex.RB push r10
   14000951e:	rex.WRXB push r11
   140009520:	cmp    al,BYTE PTR [rax]
   140009522:	add    BYTE PTR [rax],al
   140009524:	add    BYTE PTR [rax],al
   140009526:	add    BYTE PTR [rax],al
   140009528:	rex.B ins BYTE PTR es:[rdi],dx
   14000952a:	je     0x14000957f
   14000952c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009530:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x746e6564
   140009538:	imul   esi,DWORD PTR [rcx+rbp*2+0x65],0x73
	...
   140009548:	sub    BYTE PTR [rax+rax*1+0x40],0x1
   14000954d:	add    BYTE PTR [rax],al
   14000954f:	add    BYTE PTR [rdi+riz*1+0x0],cl
   140009553:	add    BYTE PTR [rax],al
   140009555:	add    BYTE PTR [rax],al
   140009557:	add    BYTE PTR [rcx],al
   140009559:	add    BYTE PTR [rax],al
   14000955b:	add    BYTE PTR [rax],al
   14000955d:	add    BYTE PTR [rax],al
   14000955f:	add    BYTE PTR [rax+0x140006c],dl
   140009565:	add    BYTE PTR [rax],al
   140009567:	add    BYTE PTR [rbp+0x27],cl
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	add    BYTE PTR [rax],al
   14000956e:	add    BYTE PTR [rax],al
   140009570:	add    al,BYTE PTR [rax]
   140009572:	add    BYTE PTR [rax],al
   140009574:	add    BYTE PTR [rax],al
   140009576:	add    BYTE PTR [rax],al
   140009578:	test   al,0x6c
   14000957a:	add    BYTE PTR [rax+0x1],al
   14000957d:	add    BYTE PTR [rax],al
   14000957f:	add    BYTE PTR [rsi+0x27],cl
   140009582:	add    BYTE PTR [rax],al
   140009584:	add    BYTE PTR [rax],al
   140009586:	add    BYTE PTR [rax],al
   140009588:	add    al,0x0
   14000958a:	add    BYTE PTR [rax],al
   14000958c:	add    BYTE PTR [rax],al
   14000958e:	add    BYTE PTR [rax],al
   140009590:	enter  0x6c,0x40
   140009594:	add    DWORD PTR [rax],eax
   140009596:	add    BYTE PTR [rax],al
   140009598:	rex.WRXB (bad) 
   14000959a:	add    BYTE PTR [rax],al
   14000959c:	add    BYTE PTR [rax],al
   14000959e:	add    BYTE PTR [rax],al
   1400095a0:	or     BYTE PTR [rax],al
   1400095a2:	add    BYTE PTR [rax],al
   1400095a4:	add    BYTE PTR [rax],al
   1400095a6:	add    BYTE PTR [rax],al
   1400095a8:	loopne 0x140009616
   1400095aa:	add    BYTE PTR [rax+0x1],al
   1400095ad:	add    BYTE PTR [rax],al
   1400095af:	add    BYTE PTR [rax+0x27],dl
   1400095b2:	add    BYTE PTR [rax],al
   1400095b4:	add    BYTE PTR [rax],al
   1400095b6:	add    BYTE PTR [rax],al
   1400095b8:	adc    BYTE PTR [rax],al
   1400095ba:	add    BYTE PTR [rax],al
   1400095bc:	add    BYTE PTR [rax],al
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	clc    
   1400095c1:	ins    BYTE PTR es:[rdi],dx
   1400095c2:	add    BYTE PTR [rax+0x1],al
   1400095c5:	add    BYTE PTR [rax],al
   1400095c7:	add    BYTE PTR [rdi+riz*1+0x0],dh
   1400095cb:	add    BYTE PTR [rax],al
   1400095cd:	add    BYTE PTR [rax],al
   1400095cf:	add    BYTE PTR [rax+0x0],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rax],cl
   1400095d9:	ins    DWORD PTR es:[rdi],dx
   1400095da:	add    BYTE PTR [rax+0x1],al
   1400095dd:	add    BYTE PTR [rax],al
   1400095df:	add    BYTE PTR [rcx+0x27],dl
	...
   1400095ee:	add    BYTE PTR [rax],al
   1400095f0:	rex jae 0x1400095f3
   1400095f3:	rex add DWORD PTR [rax],eax
   1400095f6:	add    BYTE PTR [rax],al
   1400095f8:	add    DWORD PTR [rax],eax
   1400095fa:	add    BYTE PTR [rax],al
   1400095fc:	add    BYTE PTR [rax],al
   1400095fe:	add    BYTE PTR [rax],al
   140009600:	pop    rax
   140009601:	jae    0x140009603
   140009603:	rex add DWORD PTR [rax],eax
   140009606:	add    BYTE PTR [rax],al
   140009608:	add    al,BYTE PTR [rax]
   14000960a:	add    BYTE PTR [rax],al
   14000960c:	add    BYTE PTR [rax],al
   14000960e:	add    BYTE PTR [rax],al
   140009610:	jo     0x140009685
   140009612:	add    BYTE PTR [rax+0x1],al
   140009615:	add    BYTE PTR [rax],al
   140009617:	add    BYTE PTR [rax+rax*1],al
   14000961a:	add    BYTE PTR [rax],al
   14000961c:	add    BYTE PTR [rax],al
   14000961e:	add    BYTE PTR [rax],al
   140009620:	nop
   140009621:	jae    0x140009623
   140009623:	rex add DWORD PTR [rax],eax
   140009626:	add    BYTE PTR [rax],al
   140009628:	or     BYTE PTR [rax],al
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	add    BYTE PTR [rax],al
   14000962e:	add    BYTE PTR [rax],al
   140009630:	shl    BYTE PTR [rbx+0x0],0x40
   140009634:	add    DWORD PTR [rax],eax
   140009636:	add    BYTE PTR [rax],al
   140009638:	adc    BYTE PTR [rax],al
   14000963a:	add    BYTE PTR [rax],al
   14000963c:	add    BYTE PTR [rax],al
   14000963e:	add    BYTE PTR [rax],al
   140009640:	fs gs data16 (bad) 
   140009644:	jne    0x1400096b2
   140009646:	je     0x140009696
   140009648:	(bad)  
   140009649:	ins    DWORD PTR es:[rdi],dx
   14000964a:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6f43
   140009651:	gs js  0x1400096c8
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	xchg   esi,eax
   14000b005:	adc    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax],bh
   14000b009:	jns    0x14000b00b
   14000b00b:	add    BYTE PTR [rax+rdx*1+0x12f70000],bl
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	rex.W jns 0x14000b017
   14000b017:	add    BYTE PTR [rax],al
   14000b019:	adc    eax,DWORD PTR [rax]
   14000b01b:	add    BYTE PTR [rcx+0x15],bh
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	fs jns 0x14000b023
   14000b023:	add    BYTE PTR [rax+0x28000015],al
   14000b029:	(bad)  
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	test   BYTE PTR [rcx+0x0],bh
   14000b02f:	add    BYTE PTR [rax],dh
   14000b031:	(bad)  
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	rex.R (bad) 
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	nop
   14000b039:	jns    0x14000b03b
   14000b03b:	add    BYTE PTR [rdi+rdx*1+0x0],cl
   14000b03f:	add    dl,al
   14000b041:	(bad)  
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b045:	jns    0x14000b047
   14000b047:	add    al,dl
   14000b049:	(bad)  
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	rex.WX sbb al,BYTE PTR [rax]
   14000b04f:	add    BYTE PTR [rcx+rdi*2+0x1a500000],bh
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	ret    0x1a
   14000b05b:	add    al,bl
   14000b05d:	jns    0x14000b05f
   14000b05f:	add    al,dl
   14000b061:	sbb    al,BYTE PTR [rax]
   14000b063:	add    BYTE PTR [rbx],ah
   14000b065:	sbb    eax,0x79e00000
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	sub    al,0x1d
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	fwait
   14000b071:	sbb    eax,0x7a040000
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	mov    al,0x1d
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	(bad)  
   14000b07d:	and    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rdx+rdi*2],dl
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	xor    BYTE PTR [rax],ah
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	and    al,BYTE PTR [r8]
   14000b08b:	add    BYTE PTR [rax],ch
   14000b08d:	jp     0x14000b08f
   14000b08f:	add    BYTE PTR [rax+0x22],cl
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	sub    esp,DWORD PTR [rsi]
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	cmp    al,0x7a
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	xor    al,0x26
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b0a1:	add    BYTE PTR es:[rax],al
   14000b0a4:	(bad)  
   14000b0a5:	jp     0x14000b0a7
   14000b0a7:	add    BYTE PTR [rax+0x4000026],dh
   14000b0ad:	sub    DWORD PTR [rax],eax
   14000b0af:	add    BYTE PTR [rdx+rdi*2+0x0],ch
   14000b0b3:	add    BYTE PTR [rax],dl
   14000b0b5:	sub    DWORD PTR [rax],eax
   14000b0b7:	add    BYTE PTR [rdi],ah
   14000b0b9:	sub    al,BYTE PTR [rax]
   14000b0bb:	add    BYTE PTR [rax+0x3000007a],dl
   14000b0c1:	sub    al,BYTE PTR [rax]
   14000b0c3:	add    BYTE PTR [rbx+0x400002a],dl
   14000b0c9:	jp     0x14000b0cb
   14000b0cb:	add    BYTE PTR [rax+0x3200002a],ah
   14000b0d1:	sub    eax,DWORD PTR [rax]
   14000b0d3:	add    BYTE PTR [rax+0x4000007a],ah
   14000b0d9:	sub    eax,DWORD PTR [rax]
   14000b0db:	add    BYTE PTR [rbp+0x2b],bh
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	fdivr  DWORD PTR [rcx+0x0]
   14000b0e3:	add    BYTE PTR [rbx+rbp*1+0x2c2d0000],al
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	test   al,0x7a
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	sub    al,0x0
   14000b0f3:	add    bl,ch
   14000b0f5:	sub    al,0x0
   14000b0f7:	add    al,al
   14000b0f9:	jp     0x14000b0fb
   14000b0fb:	add    BYTE PTR [rax],al
   14000b0fd:	sub    eax,0x2d1c0000
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	fdivr  DWORD PTR [rdx+0x0]
   14000b107:	add    BYTE PTR [rax],dh
   14000b109:	sub    eax,0x2d980000
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	test   BYTE PTR [rcx+0x0],bh
   14000b113:	add    BYTE PTR [rax+0x2d00002d],ah
   14000b119:	add    BYTE PTR cs:[rax],al
   14000b11c:	loopne 0x14000b198
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	xor    al,0x2e
   14000b122:	add    BYTE PTR [rax],al
   14000b124:	test   eax,0xa400002e
   14000b129:	jns    0x14000b12b
   14000b12b:	add    BYTE PTR [rax-0x12ffffd2],dh
   14000b131:	add    BYTE PTR cs:[rax],al
   14000b134:	fdivr  DWORD PTR [rdx+0x0]
   14000b137:	add    ah,dh
   14000b139:	add    BYTE PTR cs:[rax],al
   14000b13c:	mov    ecx,0xf800002f
   14000b141:	jp     0x14000b143
   14000b143:	add    al,al
   14000b145:	(bad)  
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	or     BYTE PTR [rcx],dh
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	or     BYTE PTR [rbx+0x0],bh
   14000b14f:	add    BYTE PTR [rax],dl
   14000b151:	xor    DWORD PTR [rax],eax
   14000b153:	add    BYTE PTR [rcx+rsi*1+0x7b140000],dl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	movabs al,ds:0x24000031f4000031
   14000b165:	jnp    0x14000b167
   14000b167:	add    BYTE PTR [rax],al
   14000b169:	xor    al,BYTE PTR [rax]
   14000b16b:	add    BYTE PTR [rdi+0x32],cl
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	and    al,0x7b
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	(bad)  
   14000b175:	xor    al,BYTE PTR [rax]
   14000b177:	add    BYTE PTR [rcx+0x30000032],bh
   14000b17d:	jnp    0x14000b17f
   14000b17f:	add    al,al
   14000b181:	xor    al,BYTE PTR [rax]
   14000b183:	add    BYTE PTR [rbx],ch
   14000b185:	xor    eax,DWORD PTR [rax]
   14000b187:	add    BYTE PTR [rbx+rdi*2],ah
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	xor    al,0x33
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	add    eax,0x3c000034
   14000b195:	jnp    0x14000b197
   14000b197:	add    BYTE PTR [rsp+rsi*1],cl
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	ret    0x34
   14000b19f:	add    BYTE PTR [rax+0x7b],dl
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	shl    BYTE PTR [rax+rax*1],1
   14000b1a7:	add    BYTE PTR [rip+0xffffffffd8000035],dh        # 0x11800b1e2
   14000b1ad:	jns    0x14000b1af
   14000b1af:	add    BYTE PTR [rax+0x35],al
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	sbb    eax,0x64000036
   14000b1b9:	jnp    0x14000b1bb
   14000b1bb:	add    BYTE PTR [rax+0x36],ch
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	mov    ch,0x36
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	test   BYTE PTR [rcx+0x0],bh
   14000b1c7:	add    BYTE PTR [rsi+rsi*1+0x375f0000],bh
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	jo     0x14000b24d
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	push   0x3a000037
   14000b1d9:	cmp    BYTE PTR [rax],al
   14000b1db:	add    BYTE PTR [rbx+rdi*2+0x38400000],al
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	jbe    0x14000b21f
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	movabs al,ds:0x940000397c00007b
   14000b1f1:	cmp    al,BYTE PTR [rax]
   14000b1f3:	add    BYTE PTR [rax-0x63ffff85],bh
   14000b1f9:	cmp    al,BYTE PTR [rax]
   14000b1fb:	add    dh,ch
   14000b1fd:	cmp    al,BYTE PTR [rax]
   14000b1ff:	add    BYTE PTR [rdx+rdi*2],al
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	hlt    
   14000b205:	cmp    al,BYTE PTR [rax]
   14000b207:	add    BYTE PTR [rdi],ah
   14000b209:	cmp    eax,DWORD PTR [rax]
   14000b20b:	add    ah,dl
   14000b20d:	jnp    0x14000b20f
   14000b20f:	add    BYTE PTR [rax],dh
   14000b211:	cmp    eax,DWORD PTR [rax]
   14000b213:	add    BYTE PTR [rax-0x23ffffc3],bh
   14000b219:	jnp    0x14000b21b
   14000b21b:	add    al,al
   14000b21d:	cmp    eax,0x3eb40000
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	cld    
   14000b225:	jnp    0x14000b227
   14000b227:	add    BYTE PTR [rsi+rdi*1+0x3fa80000],bh
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	sbb    BYTE PTR [rax+rax*1+0x0],bh
   14000b234:	mov    al,0x3f
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	or     eax,0x30000040
   14000b23d:	jl     0x14000b23f
   14000b23f:	add    BYTE PTR [rax],ah
   14000b241:	add    BYTE PTR [rax],al
   14000b244:	sub    DWORD PTR [rdx+0x0],eax
   14000b247:	add    BYTE PTR [rsp+rdi*2+0x0],al
   14000b24b:	add    BYTE PTR [rax],dh
   14000b24d:	rex.X add BYTE PTR [rax],al
   14000b250:	fiadd  DWORD PTR [rdx+0x0]
   14000b253:	add    BYTE PTR [rax+0x7c],bl
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	loopne 0x14000b29c
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	adc    BYTE PTR [rax+rax*1+0x0],al
   14000b260:	fs jl  0x14000b263
   14000b263:	add    BYTE PTR [rax],bl
   14000b265:	add    BYTE PTR [rax],r8b
   14000b268:	icebp  
   14000b269:	add    BYTE PTR [r8],r8b
   14000b26c:	je     0x14000b2ea
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	clc    
   14000b271:	add    BYTE PTR [r8],r8b
   14000b274:	jmp    0xd000b2bf
   14000b279:	jl     0x14000b27b
   14000b27b:	add    al,dh
   14000b27d:	rex.RX add BYTE PTR [rax],r8b
   14000b280:	xchg   edi,eax
   14000b281:	rex.RXB add BYTE PTR [r8],r8b
   14000b284:	test   BYTE PTR [rbx+0x0],bh
   14000b287:	add    BYTE PTR [rax-0x33ffffb9],ah
   14000b28d:	rex.W add BYTE PTR [rax],al
   14000b290:	movabs al,ds:0xd7000048e000007c
   14000b299:	rex.WB add BYTE PTR [r8],al
   14000b29c:	mov    eax,0xe000007c
   14000b2a1:	rex.WB add BYTE PTR [r8],al
   14000b2a4:	jle    0x14000b2f1
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	int3   
   14000b2a9:	jl     0x14000b2ab
   14000b2ab:	add    BYTE PTR [rax+0x4a00004b],dl
   14000b2b1:	rex.WR add BYTE PTR [rax],r8b
   14000b2b4:	loopne 0x14000b332
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	push   rax
   14000b2b9:	rex.WR add BYTE PTR [rax],r8b
   14000b2bc:	(bad)  
   14000b2bd:	rex.WR add BYTE PTR [rax],r8b
   14000b2c0:	hlt    
   14000b2c1:	jl     0x14000b2c3
   14000b2c3:	add    al,dl
   14000b2c5:	rex.WR add BYTE PTR [rax],r8b
   14000b2c8:	or     DWORD PTR [rbp+0x0],0x0
   14000b2cc:	add    al,0x7d
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	mov    WORD PTR [rbp+0x0],cs
   14000b2d3:	add    dl,bl
   14000b2d5:	rex.WRX add BYTE PTR [rax],r8b
   14000b2d8:	sbb    al,0x7d
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	loopne 0x14000b32c
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	mov    ecx,DWORD PTR [rdi+0x0]
   14000b2e3:	add    BYTE PTR [rax],dh
   14000b2e5:	jge    0x14000b2e7
   14000b2e7:	add    BYTE PTR [rdi+rcx*2+0x50c10000],dl
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	test   BYTE PTR [rbx+0x0],bh
   14000b2f3:	add    al,cl
   14000b2f5:	push   rax
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	in     eax,0x50
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	rex jge 0x14000b2ff
   14000b2ff:	add    ah,ch
   14000b301:	push   rax
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	rcl    DWORD PTR [rbx+0x0],0x0
   14000b308:	rex.W jge 0x14000b30b
   14000b30b:	add    al,dl
   14000b30d:	push   rbx
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	lahf   
   14000b311:	push   rsp
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	fdivr  DWORD PTR [rdx+0x0]
   14000b317:	add    BYTE PTR [rax-0x6ffffac],dh
   14000b31d:	push   rsp
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	(bad)  
   14000b321:	jge    0x14000b323
   14000b323:	add    BYTE PTR [rax],al
   14000b325:	push   rbp
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	rcl    BYTE PTR [rsi+0x0],cl
   14000b32b:	add    BYTE PTR [rax+0x7d],ch
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	loopne 0x14000b388
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	repnz push rsi
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	fdivr  DWORD PTR [rdx+0x0]
   14000b33b:	add    BYTE PTR [rax],dl
   14000b33d:	push   rdi
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	cs push rdi
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	cwde   
   14000b345:	jge    0x14000b347
   14000b347:	add    BYTE PTR [rdi+rdx*2],dh
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	push   0xffffffffd8000057
   14000b351:	jns    0x14000b353
   14000b353:	add    BYTE PTR [rax+0x57],dh
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	loope  0x14000b3b2
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b35d:	jge    0x14000b35f
   14000b35f:	add    al,ch
   14000b361:	pop    rax
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	fistp  WORD PTR [rcx+0x0]
   14000b367:	add    BYTE PTR [rbp+rdi*2+0x59f00000],bl
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	sub    DWORD PTR [rdx+0x0],ebx
   14000b373:	add    al,bl
   14000b375:	jp     0x14000b377
   14000b377:	add    BYTE PTR [rax],dh
   14000b379:	pop    rdx
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	rex.W pop rdx
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	fdivr  DWORD PTR [rdx+0x0]
   14000b383:	add    BYTE PTR [rdx+rbx*2+0x0],bl
   14000b387:	add    BYTE PTR [rax-0x53ffffa6],dh
   14000b38d:	jge    0x14000b38f
   14000b38f:	add    BYTE PTR [rax-0x2ffffa6],bh
   14000b395:	pop    rdx
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	fdivr  DWORD PTR [rcx+0x0]
   14000b39b:	add    BYTE PTR [rax+0x5b],dh
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	mov    ebp,0xcc00005b
   14000b3a5:	jge    0x14000b3a7
   14000b3a7:	add    BYTE PTR [rsp+rbx*2],al
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	(bad)  
   14000b3ad:	pop    rsp
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	clc    
   14000b3b1:	jge    0x14000b3b3
   14000b3b3:	add    BYTE PTR [rax],bl
   14000b3b5:	pop    rbp
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	ss pop rbp
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	fdivr  DWORD PTR [rcx+0x0]
   14000b3bf:	add    BYTE PTR [rax+0x5d],cl
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	gs pop rbp
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	fdivr  DWORD PTR [rdx+0x0]
   14000b3cb:	add    BYTE PTR [rbp+rbx*2+0x0],ch
   14000b3cf:	add    bh,cl
   14000b3d1:	pop    rbp
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	fdivr  DWORD PTR [rcx+0x0]
   14000b3d7:	add    BYTE PTR [rax],al
   14000b3d9:	pop    rsi
   14000b3da:	add    BYTE PTR [rax],al
   14000b3dc:	add    bl,BYTE PTR [rsi+0x0]
   14000b3df:	add    BYTE PTR [rax],cl
   14000b3e1:	jle    0x14000b3e3
   14000b3e3:	add    BYTE PTR [rsi],dl
   14000b3e5:	pop    rsi
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	xor    al,0x5e
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	lock jge 0x14000b3ef
   14000b3ef:	add    BYTE PTR [rax+0x5e],al
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	(bad)  
   14000b3f5:	pop    rsi
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	lock jge 0x14000b3fb
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	movabs al,ds:0x1080000020800000
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],bh
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax],0x0
	...
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x40000000],dl
   14000c081:	(bad)  
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	enter  0x0,0x0
	...
   14000c090:	mov    al,0xc0
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	mov    WORD PTR [rbx],es
	...
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	add    eax,DWORD PTR [rax]
   14000c0a2:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c0a6:	rex.WB add BYTE PTR [r8],al
   14000c0a9:	add    BYTE PTR [rax],al
   14000c0ab:	add    BYTE PTR [rax],al
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rbx+rax*1+0x34],cl
   14000c0b6:	push   rsi
   14000c0b7:	add    BYTE PTR [rbx+0x0],dl
   14000c0ba:	pop    rdi
   14000c0bb:	add    BYTE PTR [rsi+0x0],dl
   14000c0be:	add    BYTE PTR [r10+0x0],r10b
   14000c0c2:	push   rbx
   14000c0c3:	add    BYTE PTR [rcx+0x0],cl
   14000c0c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c0ca:	pop    rdi
   14000c0cb:	add    BYTE PTR [rcx+0x0],cl
   14000c0ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c0d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c0dd:	add    BYTE PTR [rcx],al
   14000c0df:	add    BYTE PTR [rax],al
   14000c0e1:	add    BYTE PTR [rdx],cl
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rax],bpl
   14000c0e8:	add    BYTE PTR [rax],al
   14000c0ea:	or     al,BYTE PTR [rax]
   14000c0ec:	add    BYTE PTR [rax+0x0],al
   14000c0ef:	sub    BYTE PTR [rdi],bh
   14000c0f1:	add    BYTE PTR [rax],al
   14000c0f3:	add    BYTE PTR [rax],al
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax+rax*1],al
   14000c0fa:	add    al,0x0
   14000c0fc:	add    al,BYTE PTR [rax]
	...
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	(bad)  
   14000c10d:	add    al,BYTE PTR [rax]
   14000c10f:	add    BYTE PTR [rcx],al
   14000c111:	add    BYTE PTR [rbx+0x0],dl
   14000c114:	je     0x14000c116
   14000c116:	jb     0x14000c118
   14000c118:	imul   eax,DWORD PTR [rax],0x67006e
   14000c11e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c122:	ins    BYTE PTR es:[rdi],dx
   14000c123:	add    BYTE PTR [rbp+0x0],ah
   14000c126:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c12a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	mov    BYTE PTR [rdx],0x0
   14000c133:	add    BYTE PTR [rcx],al
   14000c135:	add    BYTE PTR [rax],dh
   14000c137:	add    BYTE PTR [rax+rax*1],dh
   14000c13a:	xor    BYTE PTR [rax],al
   14000c13c:	cmp    DWORD PTR [rax],eax
   14000c13e:	xor    BYTE PTR [rax],al
   14000c140:	xor    al,0x0
   14000c142:	rex.X add BYTE PTR [rax],sil
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c14b:	add    BYTE PTR [rcx],al
   14000c14d:	add    BYTE PTR [rbx+0x0],al
   14000c150:	outs   dx,DWORD PTR ds:[rsi]
   14000c151:	add    BYTE PTR [rbp+0x0],ch
   14000c154:	jo     0x14000c156
   14000c156:	(bad)  
   14000c157:	add    BYTE PTR [rsi+0x0],ch
   14000c15a:	jns    0x14000c15c
   14000c15c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c160:	ins    DWORD PTR es:[rdi],dx
   14000c161:	add    BYTE PTR [rbp+0x0],ah
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c16c:	movsxd eax,DWORD PTR [rax]
   14000c16e:	jb     0x14000c170
   14000c170:	outs   dx,DWORD PTR ds:[rsi]
   14000c171:	add    BYTE PTR [rbx+0x0],dh
   14000c174:	outs   dx,DWORD PTR ds:[rsi]
   14000c175:	add    BYTE PTR [rsi+0x0],ah
   14000c178:	je     0x14000c17a
   14000c17a:	and    BYTE PTR [rax],al
   14000c17c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c180:	jb     0x14000c182
   14000c182:	jo     0x14000c184
   14000c184:	outs   dx,DWORD PTR ds:[rsi]
   14000c185:	add    BYTE PTR [rdx+0x0],dh
   14000c188:	(bad)  
   14000c189:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c18d:	add    BYTE PTR [rdi+0x0],ch
   14000c190:	outs   dx,BYTE PTR ds:[rsi]
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax+0x0],dl
   14000c196:	adc    al,0x0
   14000c198:	add    DWORD PTR [rax],eax
   14000c19a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c19e:	ins    BYTE PTR es:[rdi],dx
   14000c19f:	add    BYTE PTR [rbp+0x0],ah
   14000c1a2:	add    BYTE PTR [rbp+0x0],r12b
   14000c1a6:	jae    0x14000c1a8
   14000c1a8:	movsxd eax,DWORD PTR [rax]
   14000c1aa:	jb     0x14000c1ac
   14000c1ac:	imul   eax,DWORD PTR [rax],0x740070
   14000c1b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1b8:	add    BYTE PTR [rax],al
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000c1c0:	jb     0x14000c1c2
   14000c1c2:	(bad)  
   14000c1c3:	add    BYTE PTR [rbp+0x0],ah
   14000c1c6:	jb     0x14000c1c8
   14000c1c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c9:	add    BYTE PTR [rbx+0x0],dh
   14000c1cc:	and    BYTE PTR [rax],al
   14000c1ce:	push   rbx
   14000c1cf:	add    BYTE PTR [rbp+0x0],ah
   14000c1d2:	je     0x14000c1d4
   14000c1d4:	jne    0x14000c1d6
   14000c1d6:	jo     0x14000c1d8
   14000c1d8:	and    BYTE PTR [rax],al
   14000c1da:	je     0x14000c1dc
   14000c1dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c1dd:	add    BYTE PTR [rdi+0x0],ch
   14000c1e0:	ins    BYTE PTR es:[rdi],dx
   14000c1e1:	add    BYTE PTR [rax],al
   14000c1e3:	add    BYTE PTR [rsi+0x0],ah
   14000c1e6:	and    eax,DWORD PTR [rax]
   14000c1e8:	add    DWORD PTR [rax],eax
   14000c1ea:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c1ee:	ins    BYTE PTR es:[rdi],dx
   14000c1ef:	add    BYTE PTR [rbp+0x0],ah
   14000c1f2:	push   rsi
   14000c1f3:	add    BYTE PTR [rbp+0x0],ah
   14000c1f6:	jb     0x14000c1f8
   14000c1f8:	jae    0x14000c1fa
   14000c1fa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c200:	add    BYTE PTR [rax],al
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	xor    DWORD PTR [rax],eax
   14000c206:	xor    BYTE PTR [rax],al
   14000c208:	add    BYTE PTR cs:[rax],dh
   14000c20b:	add    BYTE PTR [rsi],ch
   14000c20d:	add    BYTE PTR [rcx],dh
   14000c20f:	add    BYTE PTR [rax],dh
   14000c211:	add    BYTE PTR [rdx],dh
   14000c213:	add    BYTE PTR [rax+rax*1],dh
   14000c216:	xor    BYTE PTR [rax],al
   14000c218:	add    BYTE PTR cs:[rcx],dh
   14000c21b:	add    BYTE PTR [rsi],dh
   14000c21d:	add    BYTE PTR [rbx],dh
   14000c21f:	add    BYTE PTR [rax],bh
   14000c221:	add    BYTE PTR [rax+rax*1],dh
   14000c224:	and    BYTE PTR [rax],al
   14000c226:	sub    BYTE PTR [rax],al
   14000c228:	je     0x14000c22a
   14000c22a:	push   0x2e003100
   14000c22f:	add    BYTE PTR [rcx],dh
   14000c231:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f237
   14000c237:	add    BYTE PTR [rax],dh
   14000c239:	add    BYTE PTR [rcx],bh
   14000c23b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f341
   14000c241:	add    BYTE PTR [rax],dh
   14000c243:	add    BYTE PTR [rax],dh
   14000c245:	add    BYTE PTR [rcx],ch
   14000c247:	add    BYTE PTR [rax],al
   14000c249:	add    BYTE PTR [rax],al
   14000c24b:	add    BYTE PTR [rsi],dh
   14000c24d:	add    BYTE PTR [rbx],cl
   14000c24f:	add    BYTE PTR [rcx],al
   14000c251:	add    BYTE PTR [rcx+0x0],cl
   14000c254:	outs   dx,BYTE PTR ds:[rsi]
   14000c255:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c259:	add    BYTE PTR [rdx+0x0],dh
   14000c25c:	outs   dx,BYTE PTR ds:[rsi]
   14000c25d:	add    BYTE PTR [rcx+0x0],ah
   14000c260:	ins    BYTE PTR es:[rdi],dx
   14000c261:	add    BYTE PTR [rsi+0x0],cl
   14000c264:	(bad)  
   14000c265:	add    BYTE PTR [rbp+0x0],ch
   14000c268:	add    BYTE PTR gs:[rax],al
   14000c26b:	add    BYTE PTR [rbx+0x0],ch
   14000c26e:	jae    0x14000c270
   14000c270:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000c275:	add    BYTE PTR [rax+0x0],dh
   14000c278:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c27c:	js     0x14000c27e
   14000c27e:	add    BYTE PTR gs:[rax],al
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rax+0x1002e00],al
   14000c289:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c28d:	add    BYTE PTR [rdi+0x0],ah
   14000c290:	(bad)  
   14000c291:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c295:	add    BYTE PTR [rdi+0x0],ch
   14000c298:	jo     0x14000c29a
   14000c29a:	jns    0x14000c29c
   14000c29c:	jb     0x14000c29e
   14000c29e:	imul   eax,DWORD PTR [rax],0x680067
   14000c2a4:	je     0x14000c2a6
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	test   eax,0x4d002000
   14000c2ad:	add    BYTE PTR [rcx+0x0],ch
   14000c2b0:	movsxd eax,DWORD PTR [rax]
   14000c2b2:	jb     0x14000c2b4
   14000c2b4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2b5:	add    BYTE PTR [rbx+0x0],dh
   14000c2b8:	outs   dx,DWORD PTR ds:[rsi]
   14000c2b9:	add    BYTE PTR [rsi+0x0],ah
   14000c2bc:	je     0x14000c2be
   14000c2be:	and    BYTE PTR [rax],al
   14000c2c0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c2c4:	jb     0x14000c2c6
   14000c2c6:	jo     0x14000c2c8
   14000c2c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c2c9:	add    BYTE PTR [rdx+0x0],dh
   14000c2cc:	(bad)  
   14000c2cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c2d1:	add    BYTE PTR [rdi+0x0],ch
   14000c2d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c2d5:	add    BYTE PTR [rsi],ch
   14000c2d7:	add    BYTE PTR [rax],ah
   14000c2d9:	add    BYTE PTR [rcx+0x0],al
   14000c2dc:	ins    BYTE PTR es:[rdi],dx
   14000c2dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c2e1:	add    BYTE PTR [rdx+0x0],dh
   14000c2e4:	imul   eax,DWORD PTR [rax],0x680067
   14000c2ea:	je     0x14000c2ec
   14000c2ec:	jae    0x14000c2ee
   14000c2ee:	and    BYTE PTR [rax],al
   14000c2f0:	jb     0x14000c2f2
   14000c2f2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c2f6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2fa:	jbe    0x14000c2fc
   14000c2fc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c301:	add    BYTE PTR [rax],al
   14000c303:	add    BYTE PTR [rsi],bh
   14000c305:	add    BYTE PTR [rbx],cl
   14000c307:	add    BYTE PTR [rcx],al
   14000c309:	add    BYTE PTR [rdi+0x0],cl
   14000c30c:	jb     0x14000c30e
   14000c30e:	imul   eax,DWORD PTR [rax],0x690067
   14000c314:	outs   dx,BYTE PTR ds:[rsi]
   14000c315:	add    BYTE PTR [rcx+0x0],ah
   14000c318:	ins    BYTE PTR es:[rdi],dx
   14000c319:	add    BYTE PTR [rsi+0x0],al
   14000c31c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c322:	outs   dx,BYTE PTR ds:[rsi]
   14000c323:	add    BYTE PTR [rcx+0x0],ah
   14000c326:	ins    DWORD PTR es:[rdi],dx
   14000c327:	add    BYTE PTR [rbp+0x0],ah
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	imul   eax,DWORD PTR [rax],0x73
   14000c32f:	add    BYTE PTR [rbp+0x0],ah
   14000c332:	je     0x14000c334
   14000c334:	jne    0x14000c336
   14000c336:	jo     0x14000c338
   14000c338:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c33c:	js     0x14000c33e
   14000c33e:	add    BYTE PTR gs:[rax],al
   14000c341:	add    BYTE PTR [rax],al
   14000c343:	add    BYTE PTR [rdx+0x0],ch
   14000c346:	and    eax,0x50000100
   14000c34b:	add    BYTE PTR [rdx+0x0],dh
   14000c34e:	outs   dx,DWORD PTR ds:[rsi]
   14000c34f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c353:	add    BYTE PTR [rbx+0x0],ah
   14000c356:	je     0x14000c358
   14000c358:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c35c:	ins    DWORD PTR es:[rdi],dx
   14000c35d:	add    BYTE PTR [rbp+0x0],ah
   14000c360:	add    BYTE PTR [rax],al
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c368:	movsxd eax,DWORD PTR [rax]
   14000c36a:	jb     0x14000c36c
   14000c36c:	outs   dx,DWORD PTR ds:[rsi]
   14000c36d:	add    BYTE PTR [rbx+0x0],dh
   14000c370:	outs   dx,DWORD PTR ds:[rsi]
   14000c371:	add    BYTE PTR [rsi+0x0],ah
   14000c374:	je     0x14000c376
   14000c376:	scas   al,BYTE PTR es:[rdi]
   14000c377:	add    BYTE PTR [rax],ah
   14000c379:	add    BYTE PTR [rdi+0x0],dl
   14000c37c:	imul   eax,DWORD PTR [rax],0x64006e
   14000c382:	outs   dx,DWORD PTR ds:[rsi]
   14000c383:	add    BYTE PTR [rdi+0x0],dh
   14000c386:	jae    0x14000c388
   14000c388:	scas   al,BYTE PTR es:[rdi]
   14000c389:	add    BYTE PTR [rax],ah
   14000c38b:	add    BYTE PTR [rdi+0x0],cl
   14000c38e:	jo     0x14000c390
   14000c390:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c394:	(bad)  
   14000c395:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c399:	add    BYTE PTR [rsi+0x0],ch
   14000c39c:	add    BYTE PTR [eax],ah
   14000c39f:	add    BYTE PTR [rbx+0x0],dl
   14000c3a2:	jns    0x14000c3a4
   14000c3a4:	jae    0x14000c3a6
   14000c3a6:	je     0x14000c3a8
   14000c3a8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c3ac:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	rex.RX add BYTE PTR [rcx],r10b
   14000c3b3:	add    BYTE PTR [rcx],al
   14000c3b5:	add    BYTE PTR [rax+0x0],dl
   14000c3b8:	jb     0x14000c3ba
   14000c3ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c3bb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c3bf:	add    BYTE PTR [rbx+0x0],ah
   14000c3c2:	je     0x14000c3c4
   14000c3c4:	push   rsi
   14000c3c5:	add    BYTE PTR [rbp+0x0],ah
   14000c3c8:	jb     0x14000c3ca
   14000c3ca:	jae    0x14000c3cc
   14000c3cc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	xor    DWORD PTR [rax],eax
   14000c3d6:	xor    BYTE PTR [rax],al
   14000c3d8:	add    BYTE PTR cs:[rax],dh
   14000c3db:	add    BYTE PTR [rsi],ch
   14000c3dd:	add    BYTE PTR [rcx],dh
   14000c3df:	add    BYTE PTR [rax],dh
   14000c3e1:	add    BYTE PTR [rdx],dh
   14000c3e3:	add    BYTE PTR [rax+rax*1],dh
   14000c3e6:	xor    BYTE PTR [rax],al
   14000c3e8:	add    BYTE PTR cs:[rcx],dh
   14000c3eb:	add    BYTE PTR [rsi],dh
   14000c3ed:	add    BYTE PTR [rbx],dh
   14000c3ef:	add    BYTE PTR [rax],bh
   14000c3f1:	add    BYTE PTR [rax+rax*1],dh
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	add    BYTE PTR [rax],r8b
   14000c3fb:	add    BYTE PTR [rcx],al
   14000c3fd:	add    BYTE PTR [rsi+0x0],dl
   14000c400:	(bad)  
   14000c401:	add    BYTE PTR [rdx+0x0],dh
   14000c404:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c408:	ins    BYTE PTR es:[rdi],dx
   14000c409:	add    BYTE PTR [rbp+0x0],ah
   14000c40c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c410:	data16 add BYTE PTR [rdi+0x0],ch
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	and    al,0x0
   14000c41a:	add    al,0x0
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	push   rsp
   14000c41f:	add    BYTE PTR [rdx+0x0],dh
   14000c422:	(bad)  
   14000c423:	add    BYTE PTR [rsi+0x0],ch
   14000c426:	jae    0x14000c428
   14000c428:	ins    BYTE PTR es:[rdi],dx
   14000c429:	add    BYTE PTR [rcx+0x0],ah
   14000c42c:	je     0x14000c42e
   14000c42e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	or     DWORD PTR [rax+rsi*4],eax
   14000c43b:	add    al,0x0
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    ch,cl
   14000c441:	dec    ch
   14000c443:	dec    al
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rax],al
   14000c449:	add    BYTE PTR [rcx],al
   14000c44b:	add    BYTE PTR [rax],al
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    BYTE PTR [rcx],dl
   14000c451:	add    BYTE PTR [rax],al
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rdx],al
   14000c459:	add    BYTE PTR [rax],al
   14000c45b:	add    BYTE PTR [rbp-0x56d319a3],al
   14000c461:	(bad)
   14000c465:	movabs eax,ds:0xca78f684857aa80a
   14000c46e:	movabs eax,ds:0x3fc4dcf8a0b401e5
   14000c477:	xchg   BYTE PTR [rcx],ch
   14000c479:	out    0x16,al
   14000c47b:	hlt    
	...
   14000c494:	mov    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	(bad)  
   14000c499:	add    BYTE PTR [rax],al
   14000c49b:	add    BYTE PTR [rax+0x4000000],bl
   14000c4a1:	add    BYTE PTR [rax],al
   14000c4a3:	add    BYTE PTR [rax+0xe000000],ah
   14000c4a9:	add    BYTE PTR [rax],al
   14000c4ab:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000c4b9:	add    BYTE PTR [rax],al
   14000c4bb:	add    BYTE PTR [rax+0xc000000],bh
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    BYTE PTR [rbp+0x0],cl
   14000c4ca:	push   rbp
   14000c4cb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	adc    BYTE PTR [rax],al
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	add    BYTE PTR [rax],al
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c4e4:	rex.WB add BYTE PTR [r8],al
	...
   14000c4ef:	add    BYTE PTR [rsi],al
   14000c4f1:	add    BYTE PTR [rax],al
   14000c4f3:	add    BYTE PTR [rax],dl
   14000c4f5:	add    BYTE PTR [rax],al
   14000c4f7:	add    BYTE PTR [rbp+0x0],ah
   14000c4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000c4fb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011a01
   14000c501:	add    BYTE PTR [rax],al
   14000c503:	add    BYTE PTR [rax],al
   14000c505:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],ah
   14000d003:	add    BYTE PTR [rax],bl
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x5c],cl
   14000d00a:	push   rax
   14000d00b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00c:	(bad)  
   14000d00d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00e:	js     0x14000cfb4
   14000d010:	and    BYTE PTR [rax+riz*1+0xa528a5],0x0
   14000d018:	add    BYTE PTR [rax+0x0],dh
   14000d01b:	add    BYTE PTR [rax],dl
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    al,bl
   14000d021:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d022:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d024:	clc    
   14000d025:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d026:	add    BYTE PTR [rdi+0x9000],ah
   14000d02c:	mov    ah,0x0
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	and    BYTE PTR [rax-0x5faf5fd0],ah
   14000d036:	(bad)  
   14000d037:	movabs al,ds:0xa098a090a080a068
   14000d040:	mov    al,0xa0
   14000d042:	shl    BYTE PTR [rax-0x5f1f5f38],0xf0
   14000d049:	movabs al,ds:0xa128a120a110a0f8
   14000d052:	rex movabs eax,ds:0xa180a170a158a150
   14000d05c:	mov    BYTE PTR [rcx-0x5e4f5e60],ah
   14000d062:	shl    BYTE PTR [rcx-0x5e175e20],1
   14000d068:	add    BYTE PTR [rdx-0x5de75df0],ah
   14000d06e:	xor    BYTE PTR [rdx-0x5db75dc0],ah
   14000d074:	(bad)  
   14000d075:	movabs ds:0xa2a0a290a278a270,al
   14000d07e:	test   al,0xa2
   14000d080:	shl    BYTE PTR [rdx-0x5d275d30],0xf0
   14000d087:	movabs ds:0xa330a320a308a300,al
   14000d090:	cmp    BYTE PTR [rbx-0x5c9f5cb0],ah
   14000d096:	push   0xffffffff90a380a3
   14000d09b:	movabs ds:0xa3c8a3c0a3b0a398,eax
   14000d0a4:	loopne 0x14000d049
   14000d0a6:	lock movabs ds:0xa428a420a410a3f8,eax
   14000d0b0:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0b2:	push   rax
   14000d0b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0b4:	pop    rax
   14000d0b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0b6:	jo     0x14000d05c
   14000d0b8:	and    BYTE PTR [rax+rcx*4-0x4f5b5f5c],0xa4
   14000d0c0:	shl    BYTE PTR [rax+riz*8+0x60a548a4],1
   14000d0c7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d0c8:	js     0x14000d06f
   14000d0ca:	nop
   14000d0cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d0cc:	test   al,0xa5
   14000d0ce:	shl    BYTE PTR [rbp-0x5a0f5a28],0x0
   14000d0d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0d6:	adc    BYTE PTR [rsi-0x59cf59e0],ah
