
60b19233a71bb337521d787cbb5af4253c76de3c9f8dda52dc435feed3a27c62.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x10],rdx
   14000100d:	push   rbx
   14000100e:	sub    rsp,0x20
   140001012:	lea    rdx,[rsp+0x38]
   140001017:	mov    rbx,rcx
   14000101a:	call   QWORD PTR [rip+0x62a8]        # 0x1400072c8
   140001020:	lea    rax,[rip+0x6621]        # 0x140007648
   140001027:	mov    QWORD PTR [rbx],rax
   14000102a:	mov    rax,rbx
   14000102d:	add    rsp,0x20
   140001031:	pop    rbx
   140001032:	ret    
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	lea    rax,[rip+0x6605]        # 0x140007648
   140001043:	mov    QWORD PTR [rcx],rax
   140001046:	rex.W jmp QWORD PTR [rip+0x6273]        # 0x1400072c0
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x48
   140001064:	mov    rdx,rcx
   140001067:	lea    rcx,[rsp+0x20]
   14000106c:	call   0x1400010d0
   140001071:	lea    rdx,[rip+0x78e0]        # 0x140008958
   140001078:	lea    rcx,[rsp+0x20]
   14000107d:	call   0x140005812
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rbx
   140001095:	push   rdi
   140001096:	sub    rsp,0x20
   14000109a:	lea    rax,[rip+0x65a7]        # 0x140007648
   1400010a1:	mov    ebx,edx
   1400010a3:	mov    QWORD PTR [rcx],rax
   1400010a6:	mov    rdi,rcx
   1400010a9:	call   QWORD PTR [rip+0x6211]        # 0x1400072c0
   1400010af:	test   bl,0x1
   1400010b2:	je     0x1400010bc
   1400010b4:	mov    rcx,rdi
   1400010b7:	call   0x14000484c
   1400010bc:	mov    rax,rdi
   1400010bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010c4:	add    rsp,0x20
   1400010c8:	pop    rdi
   1400010c9:	ret    
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	rex push rbx
   1400010d2:	sub    rsp,0x20
   1400010d6:	mov    rbx,rcx
   1400010d9:	call   QWORD PTR [rip+0x61d9]        # 0x1400072b8
   1400010df:	lea    rax,[rip+0x6562]        # 0x140007648
   1400010e6:	mov    QWORD PTR [rbx],rax
   1400010e9:	mov    rax,rbx
   1400010ec:	add    rsp,0x20
   1400010f0:	pop    rbx
   1400010f1:	ret    
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	mov    QWORD PTR [rsp+0x18],r8
   1400010fd:	mov    QWORD PTR [rsp+0x20],r9
   140001102:	push   rbx
   140001103:	push   rbp
   140001104:	push   rsi
   140001105:	push   rdi
   140001106:	sub    rsp,0x28
   14000110a:	xor    ebp,ebp
   14000110c:	lea    rax,[rdx-0x1]
   140001110:	cmp    rax,0x7ffffffe
   140001116:	mov    rsi,rcx
   140001119:	mov    edi,ebp
   14000111b:	mov    ecx,0x80070057
   140001120:	cmova  edi,ecx
   140001123:	test   edi,edi
   140001125:	js     0x14000115c
   140001127:	lea    rbx,[rdx-0x1]
   14000112b:	mov    rcx,rsi
   14000112e:	mov    rdx,rbx
   140001131:	lea    r9,[rsp+0x68]
   140001136:	mov    edi,ebp
   140001138:	call   QWORD PTR [rip+0x6162]        # 0x1400072a0
   14000113e:	test   eax,eax
   140001140:	js     0x140001151
   140001142:	cdqe   
   140001144:	cmp    rax,rbx
   140001147:	ja     0x140001151
   140001149:	jne    0x140001164
   14000114b:	mov    WORD PTR [rsi+rbx*2],bp
   14000114f:	jmp    0x140001164
   140001151:	mov    WORD PTR [rsi+rbx*2],bp
   140001155:	mov    edi,0x8007007a
   14000115a:	jmp    0x140001164
   14000115c:	test   rdx,rdx
   14000115f:	je     0x140001164
   140001161:	mov    WORD PTR [rsi],bp
   140001164:	mov    eax,edi
   140001166:	add    rsp,0x28
   14000116a:	pop    rdi
   14000116b:	pop    rsi
   14000116c:	pop    rbp
   14000116d:	pop    rbx
   14000116e:	ret    
   14000116f:	int3   
   140001170:	int3   
   140001171:	int3   
   140001172:	int3   
   140001173:	int3   
   140001174:	int3   
   140001175:	int3   
   140001176:	int3   
   140001177:	int3   
   140001178:	mov    rax,rsp
   14000117b:	mov    DWORD PTR [rax+0x8],ecx
   14000117e:	mov    QWORD PTR [rax+0x10],rdx
   140001182:	mov    QWORD PTR [rax+0x18],r8
   140001186:	mov    QWORD PTR [rax+0x20],r9
   14000118a:	push   rbx
   14000118b:	sub    rsp,0x470
   140001192:	mov    rax,QWORD PTR [rip+0x8e67]        # 0x14000a000
   140001199:	xor    rax,rsp
   14000119c:	mov    QWORD PTR [rsp+0x460],rax
   1400011a4:	xor    ebx,ebx
   1400011a6:	lea    rcx,[rsp+0x52]
   1400011ab:	xor    edx,edx
   1400011ad:	mov    WORD PTR [rsp+0x50],bx
   1400011b2:	mov    r8d,0x40e
   1400011b8:	call   0x140005d62
   1400011bd:	mov    rdx,QWORD PTR [rip+0xb544]        # 0x14000c708
   1400011c4:	lea    rax,[rsp+0x488]
   1400011cc:	mov    QWORD PTR [rsp+0x40],rax
   1400011d1:	lea    r8d,[rbx+0x6]
   1400011d5:	lea    rax,[rsp+0x40]
   1400011da:	xor    r9d,r9d
   1400011dd:	mov    QWORD PTR [rsp+0x30],rax
   1400011e2:	mov    ecx,0x800
   1400011e7:	lea    rax,[rsp+0x50]
   1400011ec:	mov    DWORD PTR [rsp+0x28],0x208
   1400011f4:	mov    QWORD PTR [rsp+0x20],rax
   1400011f9:	call   QWORD PTR [rip+0x5e19]        # 0x140007018
   1400011ff:	test   eax,eax
   140001201:	je     0x14000120e
   140001203:	lea    rcx,[rsp+0x50]
   140001208:	call   QWORD PTR [rip+0x608a]        # 0x140007298
   14000120e:	mov    rcx,QWORD PTR [rsp+0x460]
   140001216:	xor    rcx,rsp
   140001219:	call   0x1400054e0
   14000121e:	add    rsp,0x470
   140001225:	pop    rbx
   140001226:	ret    
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    rax,rsp
   140001233:	push   rdi
   140001234:	sub    rsp,0x250
   14000123b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001244:	mov    QWORD PTR [rax+0x8],rbx
   140001248:	mov    QWORD PTR [rax+0x18],rsi
   14000124c:	mov    rax,QWORD PTR [rip+0x8dad]        # 0x14000a000
   140001253:	xor    rax,rsp
   140001256:	mov    QWORD PTR [rsp+0x240],rax
   14000125e:	mov    rdi,rdx
   140001261:	mov    ebx,ecx
   140001263:	xor    esi,esi
   140001265:	mov    DWORD PTR [rsp+0x20],esi
   140001269:	mov    WORD PTR [rsp+0x30],si
   14000126e:	xor    edx,edx
   140001270:	mov    r8d,0x206
   140001276:	lea    rcx,[rsp+0x32]
   14000127b:	call   0x140005d62
   140001280:	xor    r8d,r8d
   140001283:	xor    edx,edx
   140001285:	mov    ecx,0x100
   14000128a:	call   QWORD PTR [rip+0x5d90]        # 0x140007020
   140001290:	call   QWORD PTR [rip+0x5d92]        # 0x140007028
   140001296:	test   eax,eax
   140001298:	je     0x1400012d4
   14000129a:	mov    r9d,eax
   14000129d:	lea    r8,[rip+0x63cc]        # 0x140007670
   1400012a4:	mov    edx,0x104
   1400012a9:	lea    rcx,[rsp+0x30]
   1400012ae:	call   0x1400010f8
   1400012b3:	test   eax,eax
   1400012b5:	js     0x1400012d4
   1400012b7:	lea    rdx,[rip+0x63ba]        # 0x140007678
   1400012be:	xor    ecx,ecx
   1400012c0:	call   QWORD PTR [rip+0x5fca]        # 0x140007290
   1400012c6:	lea    rdx,[rsp+0x30]
   1400012cb:	lea    ecx,[rsi+0x2]
   1400012ce:	call   QWORD PTR [rip+0x5fbc]        # 0x140007290
   1400012d4:	xor    r9d,r9d
   1400012d7:	xor    r8d,r8d
   1400012da:	lea    edx,[r9+0x1]
   1400012de:	xor    ecx,ecx
   1400012e0:	call   QWORD PTR [rip+0x5d4a]        # 0x140007030
   1400012e6:	xor    ecx,ecx
   1400012e8:	call   QWORD PTR [rip+0x5d4a]        # 0x140007038
   1400012ee:	mov    QWORD PTR [rip+0xb413],rax        # 0x14000c708
   1400012f5:	lea    eax,[rbx-0x2]
   1400012f8:	mov    rdx,rdi
   1400012fb:	mov    ecx,ebx
   1400012fd:	cmp    eax,0x1
   140001300:	ja     0x14000131c
   140001302:	call   0x140001978
   140001307:	mov    DWORD PTR [rsp+0x20],eax
   14000130b:	cmp    eax,0xd
   14000130e:	jne    0x140001325
   140001310:	mov    rdx,rdi
   140001313:	mov    ecx,ebx
   140001315:	call   0x140001358
   14000131a:	jmp    0x140001321
   14000131c:	call   0x140001358
   140001321:	mov    DWORD PTR [rsp+0x20],eax
   140001325:	jmp    0x14000132b
   140001327:	mov    eax,DWORD PTR [rsp+0x20]
   14000132b:	mov    rcx,QWORD PTR [rsp+0x240]
   140001333:	xor    rcx,rsp
   140001336:	call   0x1400054e0
   14000133b:	lea    r11,[rsp+0x250]
   140001343:	mov    rbx,QWORD PTR [r11+0x10]
   140001347:	mov    rsi,QWORD PTR [r11+0x20]
   14000134b:	mov    rsp,r11
   14000134e:	pop    rdi
   14000134f:	ret    
   140001350:	int3   
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	mov    rax,rsp
   14000135b:	mov    QWORD PTR [rax+0x8],rbx
   14000135f:	mov    QWORD PTR [rax+0x18],rsi
   140001363:	mov    QWORD PTR [rax+0x20],rdi
   140001367:	push   rbp
   140001368:	push   r12
   14000136a:	push   r13
   14000136c:	push   r14
   14000136e:	push   r15
   140001370:	lea    rbp,[rax-0x198]
   140001377:	sub    rsp,0x270
   14000137e:	mov    rax,QWORD PTR [rip+0x8c7b]        # 0x14000a000
   140001385:	xor    rax,rsp
   140001388:	mov    QWORD PTR [rbp+0x160],rax
   14000138f:	mov    r14,rdx
   140001392:	mov    r15d,ecx
   140001395:	xor    r12d,r12d
   140001398:	lea    rcx,[rsp+0x52]
   14000139d:	xor    edx,edx
   14000139f:	mov    WORD PTR [rsp+0x50],r12w
   1400013a5:	mov    r8d,0x208
   1400013ab:	mov    esi,0x4
   1400013b0:	call   0x140005d62
   1400013b5:	lea    r8,[rsp+0x40]
   1400013ba:	mov    QWORD PTR [rsp+0x40],r12
   1400013bf:	lea    rdx,[rip+0x62ca]        # 0x140007690
   1400013c6:	mov    rcx,0xffffffff80000002
   1400013cd:	mov    ebx,r12d
   1400013d0:	call   QWORD PTR [rip+0x5c32]        # 0x140007008
   1400013d6:	test   eax,eax
   1400013d8:	jne    0x1400013e8
   1400013da:	mov    rcx,QWORD PTR [rsp+0x40]
   1400013df:	lea    ebx,[rsi-0x3]
   1400013e2:	call   QWORD PTR [rip+0x5c18]        # 0x140007000
   1400013e8:	mov    edx,0x6
   1400013ed:	mov    DWORD PTR [rip+0xb321],ebx        # 0x14000c714
   1400013f3:	xor    ecx,ecx
   1400013f5:	call   QWORD PTR [rip+0x5efd]        # 0x1400072f8
   1400013fb:	mov    edi,eax
   1400013fd:	test   eax,eax
   1400013ff:	jns    0x140001413
   140001401:	movzx  eax,ax
   140001404:	mov    ecx,0x1f
   140001409:	test   eax,eax
   14000140b:	cmove  eax,ecx
   14000140e:	jmp    0x140001905
   140001413:	or     r13d,0xffffffff
   140001417:	mov    r9d,0xffff
   14000141d:	lea    r10d,[r9-0x2]
   140001421:	mov    ecx,DWORD PTR [rip+0x8bf9]        # 0x14000a020
   140001427:	cmp    ecx,r15d
   14000142a:	jae    0x1400014d1
   140001430:	mov    edx,DWORD PTR [rip+0x92ba]        # 0x14000a6f0
   140001436:	mov    eax,ecx
   140001438:	mov    r8,QWORD PTR [r14+rax*8]
   14000143c:	mov    eax,edx
   14000143e:	inc    edx
   140001440:	mov    DWORD PTR [rip+0x92aa],edx        # 0x14000a6f0
   140001446:	movzx  ebx,WORD PTR [r8+rax*2]
   14000144b:	test   bx,bx
   14000144e:	jne    0x14000146a
   140001450:	inc    ecx
   140001452:	mov    DWORD PTR [rip+0x9293],r12d        # 0x14000a6ec
   140001459:	mov    edx,r12d
   14000145c:	mov    DWORD PTR [rip+0x8bbe],ecx        # 0x14000a020
   140001462:	mov    DWORD PTR [rip+0x9288],edx        # 0x14000a6f0
   140001468:	jmp    0x1400014c2
   14000146a:	cmp    DWORD PTR [rip+0x927b],r12d        # 0x14000a6ec
   140001471:	jne    0x140001497
   140001473:	sub    bx,0x2d
   140001477:	test   r10w,bx
   14000147b:	jne    0x140001568
   140001481:	movzx  ebx,WORD PTR [r8+rdx*2]
   140001486:	inc    edx
   140001488:	mov    DWORD PTR [rip+0x9262],edx        # 0x14000a6f0
   14000148e:	test   bx,bx
   140001491:	je     0x140001560
   140001497:	movzx  edx,bx
   14000149a:	lea    rcx,[rip+0x636f]        # 0x140007810
   1400014a1:	call   QWORD PTR [rip+0x5dc1]        # 0x140007268
   1400014a7:	test   rax,rax
   1400014aa:	jne    0x140001572
   1400014b0:	mov    ecx,DWORD PTR [rip+0x8b6a]        # 0x14000a020
   1400014b6:	mov    r10d,0xfffd
   1400014bc:	mov    edx,DWORD PTR [rip+0x922e]        # 0x14000a6f0
   1400014c2:	cmp    ecx,r15d
   1400014c5:	jb     0x140001436
   1400014cb:	mov    r9d,0xffff
   1400014d1:	movzx  ebx,r9w
   1400014d5:	movzx  ecx,bx
   1400014d8:	call   QWORD PTR [rip+0x5daa]        # 0x140007288
   1400014de:	test   eax,eax
   1400014e0:	je     0x1400018ec
   1400014e6:	movzx  ecx,bx
   1400014e9:	call   QWORD PTR [rip+0x5d91]        # 0x140007280
   1400014ef:	mov    ecx,eax
   1400014f1:	cmp    eax,0x6c
   1400014f4:	jg     0x1400016b7
   1400014fa:	je     0x140001692
   140001500:	mov    r9d,0xffff
   140001506:	lea    r10d,[r9-0x2]
   14000150a:	cmp    eax,r13d
   14000150d:	je     0x140001421
   140001513:	cmp    eax,0x62
   140001516:	je     0x140001679
   14000151c:	cmp    eax,0x63
   14000151f:	je     0x140001622
   140001525:	cmp    eax,0x65
   140001528:	je     0x1400015f6
   14000152e:	cmp    eax,0x69
   140001531:	jne    0x1400018a2
   140001537:	lea    eax,[rcx-0x65]
   14000153a:	cmp    esi,eax
   14000153c:	je     0x14000184e
   140001542:	cmp    QWORD PTR [rip+0xb1b7],r12        # 0x14000c700
   140001549:	je     0x14000183f
   14000154f:	lea    r8,[rsp+0x50]
   140001554:	mov    edx,esi
   140001556:	call   0x1400023a8
   14000155b:	jmp    0x14000168b
   140001560:	inc    ecx
   140001562:	mov    DWORD PTR [rip+0x8ab8],ecx        # 0x14000a020
   140001568:	mov    ebx,0xffff
   14000156d:	jmp    0x1400014d5
   140001572:	cmp    WORD PTR [rax+0x2],0x3a
   140001577:	jne    0x1400015e7
   140001579:	mov    edx,DWORD PTR [rip+0x8aa1]        # 0x14000a020
   14000157f:	mov    ecx,DWORD PTR [rip+0x916b]        # 0x14000a6f0
   140001585:	mov    rax,QWORD PTR [r14+rdx*8]
   140001589:	lea    r8,[rax+rcx*2]
   14000158d:	cmp    WORD PTR [r8],r12w
   140001591:	je     0x14000159c
   140001593:	mov    QWORD PTR [rip+0xb166],r8        # 0x14000c700
   14000159a:	jmp    0x1400015c3
   14000159c:	inc    edx
   14000159e:	cmp    edx,r15d
   1400015a1:	jae    0x1400015de
   1400015a3:	mov    rcx,QWORD PTR [r14+rdx*8]
   1400015a7:	movzx  eax,WORD PTR [rcx]
   1400015aa:	mov    ecx,0xfffd
   1400015af:	sub    ax,0x2d
   1400015b3:	test   cx,ax
   1400015b6:	je     0x1400015de
   1400015b8:	mov    rcx,QWORD PTR [r14+rdx*8]
   1400015bc:	mov    QWORD PTR [rip+0xb13d],rcx        # 0x14000c700
   1400015c3:	inc    edx
   1400015c5:	mov    DWORD PTR [rip+0x9124],r12d        # 0x14000a6f0
   1400015cc:	mov    DWORD PTR [rip+0x8a4e],edx        # 0x14000a020
   1400015d2:	mov    DWORD PTR [rip+0x9113],r12d        # 0x14000a6ec
   1400015d9:	jmp    0x1400014d5
   1400015de:	movzx  ebx,r12w
   1400015e2:	jmp    0x1400014d5
   1400015e7:	mov    DWORD PTR [rip+0x90fb],0x1        # 0x14000a6ec
   1400015f1:	jmp    0x1400014d5
   1400015f6:	lea    rdx,[rsp+0x48]
   1400015fb:	mov    QWORD PTR [rsp+0x48],r12
   140001600:	xor    ecx,ecx
   140001602:	call   QWORD PTR [rip+0xca00]        # 0x14000e008
   140001608:	cmp    eax,0x80004001
   14000160d:	jne    0x14000185d
   140001613:	mov    DWORD PTR [rip+0xb0f3],0x1        # 0x14000c710
   14000161d:	jmp    0x140001417
   140001622:	mov    rax,QWORD PTR [rip+0xb0d7]        # 0x14000c700
   140001629:	test   rax,rax
   14000162c:	je     0x140001875
   140001632:	movzx  ecx,WORD PTR [rax]
   140001635:	call   QWORD PTR [rip+0x5c45]        # 0x140007280
   14000163b:	cmp    eax,0x61
   14000163e:	je     0x140001671
   140001640:	cmp    eax,0x63
   140001643:	je     0x140001667
   140001645:	cmp    eax,0x70
   140001648:	je     0x14000165d
   14000164a:	mov    esi,0x2
   14000164f:	cmp    eax,0x73
   140001652:	lea    eax,[rsi+0x2]
   140001655:	cmovne esi,eax
   140001658:	jmp    0x140001417
   14000165d:	mov    esi,0x1
   140001662:	jmp    0x140001417
   140001667:	mov    esi,0x3
   14000166c:	jmp    0x140001417
   140001671:	mov    esi,r12d
   140001674:	jmp    0x140001417
   140001679:	cmp    QWORD PTR [rip+0xb080],r12        # 0x14000c700
   140001680:	je     0x140001884
   140001686:	call   0x140003454
   14000168b:	mov    edi,eax
   14000168d:	jmp    0x140001417
   140001692:	mov    r8,QWORD PTR [rip+0xb067]        # 0x14000c700
   140001699:	test   r8,r8
   14000169c:	je     0x140001893
   1400016a2:	mov    edx,0x105
   1400016a7:	lea    rcx,[rsp+0x50]
   1400016ac:	call   QWORD PTR [rip+0x5bbe]        # 0x140007270
   1400016b2:	jmp    0x140001417
   1400016b7:	sub    ecx,0x71
   1400016ba:	je     0x1400017c1
   1400016c0:	sub    ecx,0x2
   1400016c3:	je     0x140001706
   1400016c5:	sub    ecx,0x2
   1400016c8:	je     0x1400016f2
   1400016ca:	sub    ecx,0x1
   1400016cd:	je     0x1400016e3
   1400016cf:	cmp    ecx,0x1
   1400016d2:	jne    0x1400018a2
   1400016d8:	mov    DWORD PTR [rip+0xb036],ecx        # 0x14000c714
   1400016de:	jmp    0x140001417
   1400016e3:	mov    DWORD PTR [rip+0xb02b],0x1        # 0x14000c718
   1400016ed:	jmp    0x140001417
   1400016f2:	cmp    QWORD PTR [rip+0xb007],r12        # 0x14000c700
   1400016f9:	je     0x1400018b0
   1400016ff:	call   0x1400028fc
   140001704:	jmp    0x14000168b
   140001706:	mov    rax,QWORD PTR [rip+0xaff3]        # 0x14000c700
   14000170d:	test   rax,rax
   140001710:	je     0x1400018ce
   140001716:	movzx  ecx,WORD PTR [rax]
   140001719:	call   QWORD PTR [rip+0x5b61]        # 0x140007280
   14000171f:	cmp    eax,0x61
   140001722:	je     0x1400017b7
   140001728:	cmp    eax,0x6e
   14000172b:	jne    0x1400018bf
   140001731:	lea    rdx,[rsp+0x40]
   140001736:	xor    ecx,ecx
   140001738:	call   0x1400035d4
   14000173d:	mov    edi,eax
   14000173f:	test   eax,eax
   140001741:	js     0x140001417
   140001747:	mov    rbx,r12
   14000174a:	lea    rdi,[rip+0xffffffffffffe8af]        # 0x140000000
   140001751:	mov    rax,QWORD PTR [rbx+rdi*1+0x7a90]
   140001759:	lea    r8,[rip+0x8fa0]        # 0x14000a700
   140001760:	mov    rcx,QWORD PTR [rip+0xafa1]        # 0x14000c708
   140001767:	mov    r9d,0x1000
   14000176d:	mov    QWORD PTR [rsp+0x28],rax
   140001772:	xor    edx,edx
   140001774:	mov    DWORD PTR [rsp+0x20],0xf
   14000177c:	call   0x140004030
   140001781:	mov    rcx,rax
   140001784:	call   QWORD PTR [rip+0x5b0e]        # 0x140007298
   14000178a:	mov    rdx,QWORD PTR [rbx+rdi*1+0x7ab0]
   140001792:	mov    rcx,QWORD PTR [rsp+0x40]
   140001797:	call   0x140002ec0
   14000179c:	add    rbx,0x8
   1400017a0:	cmp    rbx,0x20
   1400017a4:	jl     0x140001751
   1400017a6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400017ab:	xor    ecx,ecx
   1400017ad:	call   0x140003790
   1400017b2:	jmp    0x14000168b
   1400017b7:	call   0x140002c9c
   1400017bc:	jmp    0x14000168b
   1400017c1:	mov    rbx,QWORD PTR [rip+0xaf38]        # 0x14000c700
   1400017c8:	test   rbx,rbx
   1400017cb:	je     0x1400018dd
   1400017d1:	mov    rcx,rbx
   1400017d4:	call   0x14000231c
   1400017d9:	mov    rcx,QWORD PTR [rip+0xaf28]        # 0x14000c708
   1400017e0:	lea    r8,[rip+0x8f19]        # 0x14000a700
   1400017e7:	xor    edx,edx
   1400017e9:	mov    r9d,0x1000
   1400017ef:	test   eax,eax
   1400017f1:	jne    0x140001802
   1400017f3:	mov    QWORD PTR [rsp+0x28],rbx
   1400017f8:	mov    DWORD PTR [rsp+0x20],0x8
   140001800:	jmp    0x140001814
   140001802:	cmp    eax,0x1
   140001805:	jne    0x14000181b
   140001807:	mov    QWORD PTR [rsp+0x28],rbx
   14000180c:	mov    DWORD PTR [rsp+0x20],0x9
   140001814:	call   0x140004030
   140001819:	jmp    0x140001831
   14000181b:	mov    DWORD PTR [rsp+0x30],eax
   14000181f:	mov    QWORD PTR [rsp+0x28],rbx
   140001824:	mov    DWORD PTR [rsp+0x20],0xa
   14000182c:	call   0x140004030
   140001831:	mov    rcx,rax
   140001834:	call   QWORD PTR [rip+0x5a5e]        # 0x140007298
   14000183a:	jmp    0x140001417
   14000183f:	call   0x14000193c
   140001844:	mov    ecx,r13d
   140001847:	call   QWORD PTR [rip+0x5a2b]        # 0x140007278
   14000184d:	int3   
   14000184e:	call   0x14000193c
   140001853:	mov    ecx,r13d
   140001856:	call   QWORD PTR [rip+0x5a1c]        # 0x140007278
   14000185c:	int3   
   14000185d:	test   eax,eax
   14000185f:	jne    0x14000186c
   140001861:	mov    rcx,QWORD PTR [rsp+0x48]
   140001866:	call   QWORD PTR [rip+0xc794]        # 0x14000e000
   14000186c:	xor    ecx,ecx
   14000186e:	call   QWORD PTR [rip+0x57d4]        # 0x140007048
   140001874:	int3   
   140001875:	call   0x14000193c
   14000187a:	mov    ecx,r13d
   14000187d:	call   QWORD PTR [rip+0x59f5]        # 0x140007278
   140001883:	int3   
   140001884:	call   0x14000193c
   140001889:	mov    ecx,r13d
   14000188c:	call   QWORD PTR [rip+0x59e6]        # 0x140007278
   140001892:	int3   
   140001893:	call   0x14000193c
   140001898:	mov    ecx,r13d
   14000189b:	call   QWORD PTR [rip+0x59d7]        # 0x140007278
   1400018a1:	int3   
   1400018a2:	call   0x14000193c
   1400018a7:	xor    ecx,ecx
   1400018a9:	call   QWORD PTR [rip+0x59c9]        # 0x140007278
   1400018af:	int3   
   1400018b0:	call   0x14000193c
   1400018b5:	mov    ecx,r13d
   1400018b8:	call   QWORD PTR [rip+0x59ba]        # 0x140007278
   1400018be:	int3   
   1400018bf:	call   0x14000193c
   1400018c4:	mov    ecx,r13d
   1400018c7:	call   QWORD PTR [rip+0x59ab]        # 0x140007278
   1400018cd:	int3   
   1400018ce:	call   0x14000193c
   1400018d3:	mov    ecx,r13d
   1400018d6:	call   QWORD PTR [rip+0x599c]        # 0x140007278
   1400018dc:	int3   
   1400018dd:	call   0x14000193c
   1400018e2:	mov    ecx,r13d
   1400018e5:	call   QWORD PTR [rip+0x598d]        # 0x140007278
   1400018eb:	int3   
   1400018ec:	call   QWORD PTR [rip+0x59fe]        # 0x1400072f0
   1400018f2:	movzx  eax,di
   1400018f5:	mov    ecx,0x1f
   1400018fa:	test   eax,eax
   1400018fc:	cmove  eax,ecx
   1400018ff:	test   edi,edi
   140001901:	cmovns eax,r12d
   140001905:	mov    rcx,QWORD PTR [rbp+0x160]
   14000190c:	xor    rcx,rsp
   14000190f:	call   0x1400054e0
   140001914:	lea    r11,[rsp+0x270]
   14000191c:	mov    rbx,QWORD PTR [r11+0x30]
   140001920:	mov    rsi,QWORD PTR [r11+0x40]
   140001924:	mov    rdi,QWORD PTR [r11+0x48]
   140001928:	mov    rsp,r11
   14000192b:	pop    r15
   14000192d:	pop    r14
   14000192f:	pop    r13
   140001931:	pop    r12
   140001933:	pop    rbp
   140001934:	ret    
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	sub    rsp,0x38
   140001940:	mov    rcx,QWORD PTR [rip+0xadc1]        # 0x14000c708
   140001947:	lea    r8,[rip+0x8db2]        # 0x14000a700
   14000194e:	mov    r9d,0x1000
   140001954:	mov    DWORD PTR [rsp+0x20],0x15
   14000195c:	xor    edx,edx
   14000195e:	call   0x140004030
   140001963:	mov    rcx,rax
   140001966:	add    rsp,0x38
   14000196a:	rex.W jmp QWORD PTR [rip+0x5927]        # 0x140007298
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	mov    rax,rsp
   14000197b:	push   rbp
   14000197c:	push   r12
   14000197e:	push   r13
   140001980:	push   r14
   140001982:	push   r15
   140001984:	lea    rbp,[rax-0x2d8]
   14000198b:	sub    rsp,0x3b0
   140001992:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000199b:	mov    QWORD PTR [rax+0x8],rbx
   14000199f:	mov    QWORD PTR [rax+0x18],rsi
   1400019a3:	mov    QWORD PTR [rax+0x20],rdi
   1400019a7:	mov    rax,QWORD PTR [rip+0x8652]        # 0x14000a000
   1400019ae:	xor    rax,rsp
   1400019b1:	mov    QWORD PTR [rbp+0x2a0],rax
   1400019b8:	mov    r15,rdx
   1400019bb:	mov    r12d,ecx
   1400019be:	mov    edi,0xd
   1400019c3:	lea    r9,[rip+0x5d16]        # 0x1400076e0
   1400019ca:	mov    QWORD PTR [rbp-0x30],r9
   1400019ce:	lea    rax,[rip+0x5d13]        # 0x1400076e8
   1400019d5:	mov    QWORD PTR [rbp-0x28],rax
   1400019d9:	lea    r8,[rip+0x5d28]        # 0x140007708
   1400019e0:	mov    QWORD PTR [rbp-0x20],r8
   1400019e4:	lea    rdx,[rip+0x5d25]        # 0x140007710
   1400019eb:	mov    QWORD PTR [rbp-0x18],rdx
   1400019ef:	lea    rcx,[rip+0x5d1e]        # 0x140007714
   1400019f6:	mov    QWORD PTR [rbp-0x10],rcx
   1400019fa:	lea    rax,[rip+0x5d1f]        # 0x140007720
   140001a01:	mov    QWORD PTR [rbp-0x8],rax
   140001a05:	mov    QWORD PTR [rbp+0x0],r9
   140001a09:	lea    rax,[rip+0x5d28]        # 0x140007738
   140001a10:	mov    QWORD PTR [rbp+0x8],rax
   140001a14:	mov    QWORD PTR [rbp+0x10],r8
   140001a18:	lea    rax,[rip+0x5d39]        # 0x140007758
   140001a1f:	mov    QWORD PTR [rbp+0x18],rax
   140001a23:	mov    QWORD PTR [rbp+0x20],rcx
   140001a27:	lea    rax,[rip+0x5d32]        # 0x140007760
   140001a2e:	mov    QWORD PTR [rbp+0x28],rax
   140001a32:	mov    QWORD PTR [rbp+0x30],r9
   140001a36:	lea    rax,[rip+0x5d3b]        # 0x140007778
   140001a3d:	mov    QWORD PTR [rbp+0x38],rax
   140001a41:	mov    QWORD PTR [rbp+0x40],r8
   140001a45:	lea    rax,[rip+0x5d50]        # 0x14000779c
   140001a4c:	mov    QWORD PTR [rbp+0x48],rax
   140001a50:	mov    QWORD PTR [rbp+0x50],rcx
   140001a54:	lea    rax,[rip+0x5d45]        # 0x1400077a0
   140001a5b:	mov    QWORD PTR [rbp+0x58],rax
   140001a5f:	mov    QWORD PTR [rbp+0x60],r9
   140001a63:	lea    rax,[rip+0x5d4e]        # 0x1400077b8
   140001a6a:	mov    QWORD PTR [rbp+0x68],rax
   140001a6e:	mov    QWORD PTR [rbp+0x70],r8
   140001a72:	mov    QWORD PTR [rbp+0x78],rdx
   140001a76:	mov    QWORD PTR [rbp+0x80],rcx
   140001a7d:	lea    rax,[rip+0x5d5c]        # 0x1400077e0
   140001a84:	mov    QWORD PTR [rbp+0x88],rax
   140001a8b:	test   r12d,r12d
   140001a8e:	je     0x140001d0c
   140001a94:	test   r15,r15
   140001a97:	je     0x140001d0c
   140001a9d:	xor    r13b,r13b
   140001aa0:	xor    sil,sil
   140001aa3:	lea    eax,[rdi-0xc]
   140001aa6:	mov    r14d,eax
   140001aa9:	cmp    r12d,eax
   140001aac:	jbe    0x140001d0c
   140001ab2:	lea    rbx,[r15+0x8]
   140001ab6:	mov    rcx,QWORD PTR [rbx]
   140001ab9:	test   rcx,rcx
   140001abc:	je     0x140001b03
   140001abe:	lea    rdx,[rip+0x5d33]        # 0x1400077f8
   140001ac5:	call   QWORD PTR [rip+0x5795]        # 0x140007260
   140001acb:	test   eax,eax
   140001acd:	jne    0x140001ad9
   140001acf:	mov    eax,0x1
   140001ad4:	mov    r13b,al
   140001ad7:	jmp    0x140001af7
   140001ad9:	lea    rdx,[rip+0x5d28]        # 0x140007808
   140001ae0:	mov    rcx,QWORD PTR [rbx]
   140001ae3:	call   QWORD PTR [rip+0x5777]        # 0x140007260
   140001ae9:	movzx  esi,sil
   140001aed:	test   eax,eax
   140001aef:	mov    eax,0x1
   140001af4:	cmove  esi,eax
   140001af7:	add    r14d,eax
   140001afa:	add    rbx,0x8
   140001afe:	cmp    r14d,r12d
   140001b01:	jb     0x140001ab6
   140001b03:	xor    r14d,r14d
   140001b06:	test   r13b,r13b
   140001b09:	je     0x140001d0c
   140001b0f:	mov    WORD PTR [rbp+0x90],r14w
   140001b17:	xor    edx,edx
   140001b19:	mov    r8d,0x206
   140001b1f:	lea    rcx,[rbp+0x92]
   140001b26:	call   0x140005d62
   140001b2b:	mov    edx,0x104
   140001b30:	lea    rcx,[rbp+0x90]
   140001b37:	call   QWORD PTR [rip+0x5513]        # 0x140007050
   140001b3d:	test   eax,eax
   140001b3f:	je     0x140001d04
   140001b45:	lea    rdx,[rbp+0x90]
   140001b4c:	lea    rcx,[rbp-0x60]
   140001b50:	call   0x140001d44
   140001b55:	nop
   140001b56:	lea    rdx,[rbp+0x90]
   140001b5d:	lea    rcx,[rsp+0x28]
   140001b62:	call   0x140001d44
   140001b67:	nop
   140001b68:	lea    rdx,[rbp+0x90]
   140001b6f:	lea    rcx,[rsp+0x50]
   140001b74:	call   0x140001d44
   140001b79:	nop
   140001b7a:	lea    rdx,[rbp+0x90]
   140001b81:	lea    rcx,[rsp+0x78]
   140001b86:	call   0x140001d44
   140001b8b:	nop
   140001b8c:	lea    rdx,[rip+0x5b55]        # 0x1400076e8
   140001b93:	lea    rcx,[rbp-0x60]
   140001b97:	call   0x140001ea0
   140001b9c:	lea    rax,[rbp-0x58]
   140001ba0:	cmp    QWORD PTR [rbp-0x40],0x8
   140001ba5:	cmovae rax,QWORD PTR [rbp-0x58]
   140001baa:	mov    QWORD PTR [rbp-0x28],rax
   140001bae:	lea    rdx,[rip+0x5b83]        # 0x140007738
   140001bb5:	lea    rcx,[rsp+0x28]
   140001bba:	call   0x140001ea0
   140001bbf:	lea    rax,[rsp+0x30]
   140001bc4:	cmp    QWORD PTR [rsp+0x48],0x8
   140001bca:	cmovae rax,QWORD PTR [rsp+0x30]
   140001bd0:	mov    QWORD PTR [rbp+0x8],rax
   140001bd4:	lea    rdx,[rip+0x5b9d]        # 0x140007778
   140001bdb:	lea    rcx,[rsp+0x50]
   140001be0:	call   0x140001ea0
   140001be5:	lea    rax,[rsp+0x58]
   140001bea:	cmp    QWORD PTR [rsp+0x70],0x8
   140001bf0:	cmovae rax,QWORD PTR [rsp+0x58]
   140001bf6:	mov    QWORD PTR [rbp+0x38],rax
   140001bfa:	lea    rdx,[rip+0x5bb7]        # 0x1400077b8
   140001c01:	lea    rcx,[rsp+0x78]
   140001c06:	call   0x140001ea0
   140001c0b:	lea    rax,[rbp-0x80]
   140001c0f:	cmp    QWORD PTR [rbp-0x68],0x8
   140001c14:	cmovae rax,QWORD PTR [rbp-0x80]
   140001c19:	mov    QWORD PTR [rbp+0x68],rax
   140001c1d:	mov    ecx,0xd8
   140001c22:	call   0x1400047cc
   140001c27:	mov    rbx,rax
   140001c2a:	test   rax,rax
   140001c2d:	je     0x140001c84
   140001c2f:	mov    rcx,QWORD PTR [r15]
   140001c32:	mov    QWORD PTR [rax],rcx
   140001c35:	lea    ecx,[r14+0x1]
   140001c39:	test   sil,sil
   140001c3c:	je     0x140001c4d
   140001c3e:	lea    rax,[rip+0x5bc3]        # 0x140007808
   140001c45:	mov    QWORD PTR [rbx+0x8],rax
   140001c49:	lea    ecx,[r14+0x2]
   140001c4d:	lea    r8,[rbp-0x30]
   140001c51:	mov    r9d,0x18
   140001c57:	mov    edx,ecx
   140001c59:	mov    rax,QWORD PTR [r8]
   140001c5c:	mov    QWORD PTR [rbx+rdx*8],rax
   140001c60:	inc    ecx
   140001c62:	lea    r8,[r8+0x8]
   140001c66:	sub    r9,0x1
   140001c6a:	jne    0x140001c57
   140001c6c:	mov    QWORD PTR [rbx+rcx*8],r14
   140001c70:	mov    rdx,rbx
   140001c73:	call   0x140001358
   140001c78:	mov    edi,eax
   140001c7a:	mov    rcx,rbx
   140001c7d:	call   0x14000484c
   140001c82:	jmp    0x140001c8c
   140001c84:	call   QWORD PTR [rip+0x53b6]        # 0x140007040
   140001c8a:	mov    edi,eax
   140001c8c:	cmp    QWORD PTR [rbp-0x68],0x8
   140001c91:	jb     0x140001c9c
   140001c93:	mov    rcx,QWORD PTR [rbp-0x80]
   140001c97:	call   0x14000484c
   140001c9c:	mov    ebx,0x7
   140001ca1:	mov    QWORD PTR [rbp-0x68],rbx
   140001ca5:	mov    QWORD PTR [rbp-0x70],r14
   140001ca9:	mov    WORD PTR [rbp-0x80],r14w
   140001cae:	cmp    QWORD PTR [rsp+0x70],0x8
   140001cb4:	jb     0x140001cc0
   140001cb6:	mov    rcx,QWORD PTR [rsp+0x58]
   140001cbb:	call   0x14000484c
   140001cc0:	mov    QWORD PTR [rsp+0x70],rbx
   140001cc5:	mov    QWORD PTR [rsp+0x68],r14
   140001cca:	mov    WORD PTR [rsp+0x58],r14w
   140001cd0:	cmp    QWORD PTR [rsp+0x48],0x8
   140001cd6:	jb     0x140001ce2
   140001cd8:	mov    rcx,QWORD PTR [rsp+0x30]
   140001cdd:	call   0x14000484c
   140001ce2:	mov    QWORD PTR [rsp+0x48],rbx
   140001ce7:	mov    QWORD PTR [rsp+0x40],r14
   140001cec:	mov    WORD PTR [rsp+0x30],r14w
   140001cf2:	cmp    QWORD PTR [rbp-0x40],0x8
   140001cf7:	jb     0x140001d0c
   140001cf9:	mov    rcx,QWORD PTR [rbp-0x58]
   140001cfd:	call   0x14000484c
   140001d02:	jmp    0x140001d0c
   140001d04:	call   QWORD PTR [rip+0x5336]        # 0x140007040
   140001d0a:	mov    edi,eax
   140001d0c:	mov    eax,edi
   140001d0e:	mov    rcx,QWORD PTR [rbp+0x2a0]
   140001d15:	xor    rcx,rsp
   140001d18:	call   0x1400054e0
   140001d1d:	lea    r11,[rsp+0x3b0]
   140001d25:	mov    rbx,QWORD PTR [r11+0x30]
   140001d29:	mov    rsi,QWORD PTR [r11+0x40]
   140001d2d:	mov    rdi,QWORD PTR [r11+0x48]
   140001d31:	mov    rsp,r11
   140001d34:	pop    r15
   140001d36:	pop    r14
   140001d38:	pop    r13
   140001d3a:	pop    r12
   140001d3c:	pop    rbp
   140001d3d:	ret    
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	int3   
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	mov    QWORD PTR [rsp+0x8],rbx
   140001d49:	mov    QWORD PTR [rsp+0x10],rbp
   140001d4e:	mov    QWORD PTR [rsp+0x18],rsi
   140001d53:	push   rdi
   140001d54:	push   r14
   140001d56:	push   r15
   140001d58:	sub    rsp,0x20
   140001d5c:	xor    ebp,ebp
   140001d5e:	mov    QWORD PTR [rcx+0x20],0x7
   140001d66:	or     r15,0xffffffffffffffff
   140001d6a:	mov    QWORD PTR [rcx+0x18],rbp
   140001d6e:	lea    rbx,[rcx+0x8]
   140001d72:	mov    r14,r15
   140001d75:	mov    rdi,rdx
   140001d78:	mov    WORD PTR [rbx],bp
   140001d7b:	mov    rsi,rcx
   140001d7e:	inc    r14
   140001d81:	cmp    WORD PTR [rdx+r14*2],bp
   140001d86:	jne    0x140001d7e
   140001d88:	cmp    QWORD PTR [rcx+0x20],0x8
   140001d8d:	jb     0x140001d94
   140001d8f:	mov    rax,QWORD PTR [rbx]
   140001d92:	jmp    0x140001d97
   140001d94:	mov    rax,rbx
   140001d97:	cmp    rdx,rax
   140001d9a:	jb     0x140001dfe
   140001d9c:	cmp    QWORD PTR [rcx+0x20],0x8
   140001da1:	jb     0x140001da8
   140001da3:	mov    rax,QWORD PTR [rbx]
   140001da6:	jmp    0x140001dab
   140001da8:	mov    rax,rbx
   140001dab:	mov    rcx,QWORD PTR [rcx+0x18]
   140001daf:	lea    rax,[rax+rcx*2]
   140001db3:	cmp    rax,rdx
   140001db6:	jbe    0x140001dfe
   140001db8:	cmp    QWORD PTR [rsi+0x20],0x8
   140001dbd:	jb     0x140001dc2
   140001dbf:	mov    rbx,QWORD PTR [rbx]
   140001dc2:	sub    rdi,rbx
   140001dc5:	sar    rdi,1
   140001dc8:	cmp    rcx,rdi
   140001dcb:	jae    0x140001dd2
   140001dcd:	call   0x140004e70
   140001dd2:	mov    rax,QWORD PTR [rsi+0x18]
   140001dd6:	mov    r8,r15
   140001dd9:	sub    rax,rdi
   140001ddc:	mov    rcx,rsi
   140001ddf:	cmp    r14,rax
   140001de2:	cmovb  rax,r14
   140001de6:	lea    rdx,[rax+rdi*1]
   140001dea:	call   0x140002114
   140001def:	mov    r8,rdi
   140001df2:	xor    edx,edx
   140001df4:	mov    rcx,rsi
   140001df7:	call   0x140002114
   140001dfc:	jmp    0x140001e45
   140001dfe:	mov    rdx,r14
   140001e01:	mov    rcx,rsi
   140001e04:	call   0x140002098
   140001e09:	test   al,al
   140001e0b:	je     0x140001e45
   140001e0d:	mov    rdx,QWORD PTR [rsi+0x20]
   140001e11:	cmp    rdx,0x8
   140001e15:	jb     0x140001e1c
   140001e17:	mov    rcx,QWORD PTR [rbx]
   140001e1a:	jmp    0x140001e1f
   140001e1c:	mov    rcx,rbx
   140001e1f:	lea    r15,[r14+r14*1]
   140001e23:	add    rdx,rdx
   140001e26:	mov    r9,r15
   140001e29:	mov    r8,rdi
   140001e2c:	call   QWORD PTR [rip+0x547e]        # 0x1400072b0
   140001e32:	cmp    QWORD PTR [rsi+0x20],0x8
   140001e37:	mov    QWORD PTR [rsi+0x18],r14
   140001e3b:	jb     0x140001e40
   140001e3d:	mov    rbx,QWORD PTR [rbx]
   140001e40:	mov    WORD PTR [r15+rbx*1],bp
   140001e45:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e4a:	mov    rax,rsi
   140001e4d:	mov    rsi,QWORD PTR [rsp+0x50]
   140001e52:	mov    rbp,QWORD PTR [rsp+0x48]
   140001e57:	add    rsp,0x20
   140001e5b:	pop    r15
   140001e5d:	pop    r14
   140001e5f:	pop    rdi
   140001e60:	ret    
   140001e61:	int3   
   140001e62:	int3   
   140001e63:	int3   
   140001e64:	int3   
   140001e65:	int3   
   140001e66:	int3   
   140001e67:	int3   
   140001e68:	rex push rbx
   140001e6a:	sub    rsp,0x20
   140001e6e:	cmp    QWORD PTR [rcx+0x20],0x8
   140001e73:	mov    rbx,rcx
   140001e76:	jb     0x140001e81
   140001e78:	mov    rcx,QWORD PTR [rcx+0x8]
   140001e7c:	call   0x14000484c
   140001e81:	xor    eax,eax
   140001e83:	mov    QWORD PTR [rbx+0x20],0x7
   140001e8b:	mov    QWORD PTR [rbx+0x18],rax
   140001e8f:	mov    WORD PTR [rbx+0x8],ax
   140001e93:	add    rsp,0x20
   140001e97:	pop    rbx
   140001e98:	ret    
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	mov    QWORD PTR [rsp+0x10],rbp
   140001eaa:	mov    QWORD PTR [rsp+0x18],rsi
   140001eaf:	push   rdi
   140001eb0:	push   r14
   140001eb2:	push   r15
   140001eb4:	sub    rsp,0x20
   140001eb8:	or     r14,0xffffffffffffffff
   140001ebc:	mov    rbp,rdx
   140001ebf:	mov    rsi,r14
   140001ec2:	xor    r15d,r15d
   140001ec5:	mov    rdi,rcx
   140001ec8:	inc    rsi
   140001ecb:	cmp    WORD PTR [rdx+rsi*2],r15w
   140001ed0:	jne    0x140001ec8
   140001ed2:	cmp    QWORD PTR [rcx+0x20],0x8
   140001ed7:	lea    rbx,[rcx+0x8]
   140001edb:	jb     0x140001ee2
   140001edd:	mov    rax,QWORD PTR [rbx]
   140001ee0:	jmp    0x140001ee5
   140001ee2:	mov    rax,rbx
   140001ee5:	cmp    rdx,rax
   140001ee8:	jb     0x140001f92
   140001eee:	cmp    QWORD PTR [rcx+0x20],0x8
   140001ef3:	jb     0x140001efa
   140001ef5:	mov    rax,QWORD PTR [rbx]
   140001ef8:	jmp    0x140001efd
   140001efa:	mov    rax,rbx
   140001efd:	mov    rcx,QWORD PTR [rcx+0x18]
   140001f01:	lea    rax,[rax+rcx*2]
   140001f05:	cmp    rax,rdx
   140001f08:	jbe    0x140001f92
   140001f0e:	cmp    QWORD PTR [rdi+0x20],0x8
   140001f13:	jb     0x140001f1a
   140001f15:	mov    rax,QWORD PTR [rbx]
   140001f18:	jmp    0x140001f1d
   140001f1a:	mov    rax,rbx
   140001f1d:	sub    rbp,rax
   140001f20:	sar    rbp,1
   140001f23:	cmp    rcx,rbp
   140001f26:	jae    0x140001f2d
   140001f28:	call   0x140004e70
   140001f2d:	mov    rax,QWORD PTR [rdi+0x18]
   140001f31:	sub    rax,rbp
   140001f34:	cmp    rax,rsi
   140001f37:	cmovb  rsi,rax
   140001f3b:	sub    r14,QWORD PTR [rdi+0x18]
   140001f3f:	cmp    r14,rsi
   140001f42:	ja     0x140001f49
   140001f44:	call   0x140004e14
   140001f49:	test   rsi,rsi
   140001f4c:	je     0x140001ffb
   140001f52:	mov    r14,QWORD PTR [rdi+0x18]
   140001f56:	mov    rcx,rdi
   140001f59:	add    r14,rsi
   140001f5c:	mov    rdx,r14
   140001f5f:	call   0x140002098
   140001f64:	test   al,al
   140001f66:	je     0x140001ffb
   140001f6c:	mov    rdx,QWORD PTR [rdi+0x20]
   140001f70:	cmp    rdx,0x8
   140001f74:	jb     0x140001f7b
   140001f76:	mov    r8,QWORD PTR [rbx]
   140001f79:	jmp    0x140001f7e
   140001f7b:	mov    r8,rbx
   140001f7e:	cmp    rdx,0x8
   140001f82:	jb     0x140001f89
   140001f84:	mov    rcx,QWORD PTR [rbx]
   140001f87:	jmp    0x140001f8c
   140001f89:	mov    rcx,rbx
   140001f8c:	lea    r8,[r8+rbp*2]
   140001f90:	jmp    0x140001fd0
   140001f92:	sub    r14,QWORD PTR [rdi+0x18]
   140001f96:	cmp    r14,rsi
   140001f99:	ja     0x140001fa0
   140001f9b:	call   0x140004e14
   140001fa0:	test   rsi,rsi
   140001fa3:	je     0x140001ffb
   140001fa5:	mov    r14,QWORD PTR [rdi+0x18]
   140001fa9:	mov    rcx,rdi
   140001fac:	add    r14,rsi
   140001faf:	mov    rdx,r14
   140001fb2:	call   0x140002098
   140001fb7:	test   al,al
   140001fb9:	je     0x140001ffb
   140001fbb:	mov    rdx,QWORD PTR [rdi+0x20]
   140001fbf:	cmp    rdx,0x8
   140001fc3:	jb     0x140001fca
   140001fc5:	mov    rcx,QWORD PTR [rbx]
   140001fc8:	jmp    0x140001fcd
   140001fca:	mov    rcx,rbx
   140001fcd:	mov    r8,rbp
   140001fd0:	mov    rax,QWORD PTR [rdi+0x18]
   140001fd4:	lea    r9,[rsi+rsi*1]
   140001fd8:	sub    rdx,rax
   140001fdb:	add    rdx,rdx
   140001fde:	lea    rcx,[rcx+rax*2]
   140001fe2:	call   QWORD PTR [rip+0x52c8]        # 0x1400072b0
   140001fe8:	cmp    QWORD PTR [rdi+0x20],0x8
   140001fed:	mov    QWORD PTR [rdi+0x18],r14
   140001ff1:	jb     0x140001ff6
   140001ff3:	mov    rbx,QWORD PTR [rbx]
   140001ff6:	mov    WORD PTR [rbx+r14*2],r15w
   140001ffb:	mov    rbx,QWORD PTR [rsp+0x40]
   140002000:	mov    rax,rdi
   140002003:	mov    rbp,QWORD PTR [rsp+0x48]
   140002008:	mov    rsi,QWORD PTR [rsp+0x50]
   14000200d:	add    rsp,0x20
   140002011:	pop    r15
   140002013:	pop    r14
   140002015:	pop    rdi
   140002016:	ret    
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    QWORD PTR [rsp+0x8],rbx
   140002025:	mov    QWORD PTR [rsp+0x10],rbp
   14000202a:	mov    QWORD PTR [rsp+0x18],rsi
   14000202f:	push   rdi
   140002030:	sub    rsp,0x20
   140002034:	xor    ebp,ebp
   140002036:	mov    rdi,r8
   140002039:	mov    rbx,rcx
   14000203c:	test   dl,dl
   14000203e:	je     0x14000206b
   140002040:	cmp    QWORD PTR [rcx+0x20],0x8
   140002045:	jb     0x14000206b
   140002047:	add    rcx,0x8
   14000204b:	mov    rsi,QWORD PTR [rcx]
   14000204e:	test   r8,r8
   140002051:	je     0x140002063
   140002053:	lea    r9,[r8+r8*1]
   140002057:	mov    r8,rsi
   14000205a:	lea    edx,[rbp+0x10]
   14000205d:	call   QWORD PTR [rip+0x524d]        # 0x1400072b0
   140002063:	mov    rcx,rsi
   140002066:	call   0x14000484c
   14000206b:	mov    rsi,QWORD PTR [rsp+0x40]
   140002070:	mov    QWORD PTR [rbx+0x20],0x7
   140002078:	mov    QWORD PTR [rbx+0x18],rdi
   14000207c:	mov    WORD PTR [rbx+rdi*2+0x8],bp
   140002081:	mov    rbx,QWORD PTR [rsp+0x30]
   140002086:	mov    rbp,QWORD PTR [rsp+0x38]
   14000208b:	add    rsp,0x20
   14000208f:	pop    rdi
   140002090:	ret    
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	mov    QWORD PTR [rsp+0x8],rbx
   14000209d:	mov    QWORD PTR [rsp+0x10],rsi
   1400020a2:	push   rdi
   1400020a3:	sub    rsp,0x20
   1400020a7:	movabs rax,0x7ffffffffffffffe
   1400020b1:	mov    rsi,rdx
   1400020b4:	mov    rdi,rcx
   1400020b7:	cmp    rdx,rax
   1400020ba:	jbe    0x1400020c1
   1400020bc:	call   0x140004e14
   1400020c1:	xor    ebx,ebx
   1400020c3:	cmp    QWORD PTR [rdi+0x20],rsi
   1400020c7:	jae    0x1400020da
   1400020c9:	mov    r8,QWORD PTR [rdi+0x18]
   1400020cd:	mov    rdx,rsi
   1400020d0:	mov    rcx,rdi
   1400020d3:	call   0x1400021d8
   1400020d8:	jmp    0x1400020f7
   1400020da:	test   rsi,rsi
   1400020dd:	jne    0x1400020fa
   1400020df:	cmp    QWORD PTR [rdi+0x20],0x8
   1400020e4:	mov    QWORD PTR [rdi+0x18],rbx
   1400020e8:	jb     0x1400020f0
   1400020ea:	mov    rdi,QWORD PTR [rdi+0x8]
   1400020ee:	jmp    0x1400020f4
   1400020f0:	add    rdi,0x8
   1400020f4:	mov    WORD PTR [rdi],bx
   1400020f7:	test   rsi,rsi
   1400020fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020ff:	setne  al
   140002102:	mov    rsi,QWORD PTR [rsp+0x38]
   140002107:	add    rsp,0x20
   14000210b:	pop    rdi
   14000210c:	ret    
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	mov    rax,rsp
   140002117:	mov    QWORD PTR [rax+0x8],rbx
   14000211b:	mov    QWORD PTR [rax+0x10],rbp
   14000211f:	mov    QWORD PTR [rax+0x18],rsi
   140002123:	mov    QWORD PTR [rax+0x20],rdi
   140002127:	push   r14
   140002129:	sub    rsp,0x20
   14000212d:	mov    rsi,r8
   140002130:	mov    r14,rdx
   140002133:	mov    rdi,rcx
   140002136:	cmp    QWORD PTR [rcx+0x18],rdx
   14000213a:	jae    0x140002141
   14000213c:	call   0x140004e70
   140002141:	mov    r9,QWORD PTR [rdi+0x18]
   140002145:	sub    r9,r14
   140002148:	cmp    r9,rsi
   14000214b:	cmovb  rsi,r9
   14000214f:	xor    ebp,ebp
   140002151:	test   rsi,rsi
   140002154:	je     0x1400021b1
   140002156:	mov    rdx,QWORD PTR [rdi+0x20]
   14000215a:	lea    rbx,[rdi+0x8]
   14000215e:	cmp    rdx,0x8
   140002162:	jb     0x140002169
   140002164:	mov    r8,QWORD PTR [rbx]
   140002167:	jmp    0x14000216c
   140002169:	mov    r8,rbx
   14000216c:	cmp    rdx,0x8
   140002170:	jb     0x140002177
   140002172:	mov    rcx,QWORD PTR [rbx]
   140002175:	jmp    0x14000217a
   140002177:	mov    rcx,rbx
   14000217a:	sub    r9,rsi
   14000217d:	lea    rax,[r14+rsi*1]
   140002181:	sub    rdx,r14
   140002184:	lea    r8,[r8+rax*2]
   140002188:	add    r9,r9
   14000218b:	lea    rcx,[rcx+r14*2]
   14000218f:	add    rdx,rdx
   140002192:	call   QWORD PTR [rip+0x5110]        # 0x1400072a8
   140002198:	mov    rax,QWORD PTR [rdi+0x18]
   14000219c:	sub    rax,rsi
   14000219f:	cmp    QWORD PTR [rdi+0x20],0x8
   1400021a4:	mov    QWORD PTR [rdi+0x18],rax
   1400021a8:	jb     0x1400021ad
   1400021aa:	mov    rbx,QWORD PTR [rbx]
   1400021ad:	mov    WORD PTR [rbx+rax*2],bp
   1400021b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021b6:	mov    rax,rdi
   1400021b9:	mov    rdi,QWORD PTR [rsp+0x48]
   1400021be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400021c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400021c8:	add    rsp,0x20
   1400021cc:	pop    r14
   1400021ce:	ret    
   1400021cf:	int3   
   1400021d0:	int3   
   1400021d1:	int3   
   1400021d2:	int3   
   1400021d3:	int3   
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	mov    rax,rsp
   1400021db:	mov    QWORD PTR [rax+0x18],r8
   1400021df:	mov    QWORD PTR [rax+0x10],rdx
   1400021e3:	mov    QWORD PTR [rax+0x8],rcx
   1400021e7:	push   rbx
   1400021e8:	push   rsi
   1400021e9:	push   rdi
   1400021ea:	push   r14
   1400021ec:	push   r15
   1400021ee:	sub    rsp,0x60
   1400021f2:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   1400021fa:	mov    r14,r8
   1400021fd:	mov    rdi,rcx
   140002200:	mov    rbx,rdx
   140002203:	or     rbx,0x7
   140002207:	movabs r9,0x7ffffffffffffffe
   140002211:	cmp    rbx,r9
   140002214:	jbe    0x14000221b
   140002216:	mov    rbx,rdx
   140002219:	jmp    0x140002246
   14000221b:	mov    r8,QWORD PTR [rcx+0x20]
   14000221f:	mov    rcx,r8
   140002222:	shr    rcx,1
   140002225:	movabs rax,0xaaaaaaaaaaaaaaab
   14000222f:	mul    rbx
   140002232:	shr    rdx,1
   140002235:	cmp    rdx,rcx
   140002238:	jae    0x140002246
   14000223a:	sub    r9,rcx
   14000223d:	cmp    r8,r9
   140002240:	ja     0x140002246
   140002242:	lea    rbx,[rcx+r8*1]
   140002246:	lea    rcx,[rbx+0x1]
   14000224a:	xor    esi,esi
   14000224c:	test   rcx,rcx
   14000224f:	jne    0x140002255
   140002251:	mov    ecx,esi
   140002253:	jmp    0x140002281
   140002255:	xor    edx,edx
   140002257:	or     rax,0xffffffffffffffff
   14000225b:	div    rcx
   14000225e:	cmp    rax,0x2
   140002262:	jae    0x140002281
   140002264:	xor    edx,edx
   140002266:	lea    rcx,[rsp+0x28]
   14000226b:	call   0x140001008
   140002270:	lea    rdx,[rip+0x66e1]        # 0x140008958
   140002277:	lea    rcx,[rsp+0x28]
   14000227c:	call   0x140005812
   140002281:	add    rcx,rcx
   140002284:	call   0x14000474c
   140002289:	mov    r15,rax
   14000228c:	jmp    0x1400022b0
   14000228e:	xor    esi,esi
   140002290:	mov    rdi,QWORD PTR [rsp+0x90]
   140002298:	mov    r14,QWORD PTR [rsp+0xa0]
   1400022a0:	mov    rbx,QWORD PTR [rsp+0x98]
   1400022a8:	mov    r15,QWORD PTR [rsp+0xa8]
   1400022b0:	test   r14,r14
   1400022b3:	je     0x1400022db
   1400022b5:	cmp    QWORD PTR [rdi+0x20],0x8
   1400022ba:	jb     0x1400022c2
   1400022bc:	mov    r8,QWORD PTR [rdi+0x8]
   1400022c0:	jmp    0x1400022c6
   1400022c2:	lea    r8,[rdi+0x8]
   1400022c6:	lea    r9,[r14+r14*1]
   1400022ca:	lea    rdx,[rbx*2+0x2]
   1400022d2:	mov    rcx,r15
   1400022d5:	call   QWORD PTR [rip+0x4fd5]        # 0x1400072b0
   1400022db:	cmp    QWORD PTR [rdi+0x20],0x8
   1400022e0:	jb     0x1400022eb
   1400022e2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400022e6:	call   0x14000484c
   1400022eb:	lea    rax,[rdi+0x8]
   1400022ef:	mov    QWORD PTR [rax],r15
   1400022f2:	mov    QWORD PTR [rdi+0x20],rbx
   1400022f6:	mov    QWORD PTR [rdi+0x18],r14
   1400022fa:	cmp    rbx,0x8
   1400022fe:	cmovae rax,r15
   140002302:	mov    WORD PTR [rax+r14*2],si
   140002307:	add    rsp,0x60
   14000230b:	pop    r15
   14000230d:	pop    r14
   14000230f:	pop    rdi
   140002310:	pop    rsi
   140002311:	pop    rbx
   140002312:	ret    
   140002313:	int3   
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	mov    QWORD PTR [rsp+0x8],rbx
   140002321:	push   rsi
   140002322:	push   rdi
   140002323:	push   r14
   140002325:	sub    rsp,0x20
   140002329:	mov    rdi,rcx
   14000232c:	lea    rdx,[rsp+0x48]
   140002331:	xor    ecx,ecx
   140002333:	call   0x1400035d4
   140002338:	mov    esi,eax
   14000233a:	test   eax,eax
   14000233c:	jne    0x14000238f
   14000233e:	mov    r14,QWORD PTR [rsp+0x48]
   140002343:	mov    rax,QWORD PTR [r14]
   140002346:	mov    rbx,QWORD PTR [rax+0x40]
   14000234a:	mov    rcx,rbx
   14000234d:	call   QWORD PTR [rip+0x4fbd]        # 0x140007310
   140002353:	lea    r8,[rsp+0x50]
   140002358:	mov    rdx,rdi
   14000235b:	mov    rcx,r14
   14000235e:	call   rbx
   140002360:	mov    esi,eax
   140002362:	test   eax,eax
   140002364:	jne    0x140002385
   140002366:	mov    rdi,QWORD PTR [rsp+0x50]
   14000236b:	test   rdi,rdi
   14000236e:	je     0x140002385
   140002370:	mov    rax,QWORD PTR [rdi]
   140002373:	mov    rbx,QWORD PTR [rax+0x10]
   140002377:	mov    rcx,rbx
   14000237a:	call   QWORD PTR [rip+0x4f90]        # 0x140007310
   140002380:	mov    rcx,rdi
   140002383:	call   rbx
   140002385:	mov    rdx,r14
   140002388:	xor    ecx,ecx
   14000238a:	call   0x140003790
   14000238f:	mov    eax,esi
   140002391:	mov    rbx,QWORD PTR [rsp+0x40]
   140002396:	add    rsp,0x20
   14000239a:	pop    r14
   14000239c:	pop    rdi
   14000239d:	pop    rsi
   14000239e:	ret    
   14000239f:	int3   
   1400023a0:	int3   
   1400023a1:	int3   
   1400023a2:	int3   
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400023ad:	push   rbp
   1400023ae:	push   rsi
   1400023af:	push   rdi
   1400023b0:	push   r12
   1400023b2:	push   r13
   1400023b4:	push   r14
   1400023b6:	push   r15
   1400023b8:	sub    rsp,0x270
   1400023bf:	mov    rax,QWORD PTR [rip+0x7c3a]        # 0x14000a000
   1400023c6:	xor    rax,rsp
   1400023c9:	mov    QWORD PTR [rsp+0x260],rax
   1400023d1:	mov    rbp,QWORD PTR [rip+0xa328]        # 0x14000c700
   1400023d8:	xor    r14d,r14d
   1400023db:	movsxd r13,edx
   1400023de:	mov    r15,r8
   1400023e1:	mov    ebx,r14d
   1400023e4:	lea    eax,[r13-0x1]
   1400023e8:	cmp    eax,0x2
   1400023eb:	ja     0x140002685
   1400023f1:	mov    rcx,QWORD PTR [rip+0xa310]        # 0x14000c708
   1400023f8:	lea    esi,[r14+0x1]
   1400023fc:	mov    ebx,0x1000
   140002401:	mov    QWORD PTR [rsp+0x28],rbp
   140002406:	mov    r9d,ebx
   140002409:	mov    DWORD PTR [rsp+0x20],esi
   14000240d:	lea    r8,[rip+0x82ec]        # 0x14000a700
   140002414:	xor    edx,edx
   140002416:	call   0x140004030
   14000241b:	mov    rcx,rax
   14000241e:	call   QWORD PTR [rip+0x4e74]        # 0x140007298
   140002424:	cmp    DWORD PTR [rip+0xa2e5],r14d        # 0x14000c710
   14000242b:	je     0x140002561
   140002431:	lea    rax,[rsp+0x40]
   140002436:	mov    r12b,sil
   140002439:	test   rax,rax
   14000243c:	jne    0x1400024ba
   14000243e:	mov    edi,0x80004003
   140002443:	mov    DWORD PTR [rip+0xa2c6],r14d        # 0x14000c710
   14000244a:	test   edi,edi
   14000244c:	jns    0x14000247c
   14000244e:	mov    rcx,QWORD PTR [rip+0xa2b3]        # 0x14000c708
   140002455:	lea    r8,[rip+0x82a4]        # 0x14000a700
   14000245c:	mov    QWORD PTR [rsp+0x28],rbp
   140002461:	mov    r9d,ebx
   140002464:	xor    edx,edx
   140002466:	mov    DWORD PTR [rsp+0x20],0x18
   14000246e:	call   0x140004030
   140002473:	mov    rcx,rax
   140002476:	call   QWORD PTR [rip+0x4e1c]        # 0x140007298
   14000247c:	test   r12b,r12b
   14000247f:	jne    0x14000255c
   140002485:	mov    rcx,QWORD PTR [rip+0xa27c]        # 0x14000c708
   14000248c:	lea    r8,[rip+0x826d]        # 0x14000a700
   140002493:	mov    QWORD PTR [rsp+0x28],rbp
   140002498:	mov    r9d,ebx
   14000249b:	xor    edx,edx
   14000249d:	mov    DWORD PTR [rsp+0x20],0x16
   1400024a5:	call   0x140004030
   1400024aa:	mov    rcx,rax
   1400024ad:	call   QWORD PTR [rip+0x4de5]        # 0x140007298
   1400024b3:	xor    eax,eax
   1400024b5:	jmp    0x140002687
   1400024ba:	lea    rdx,[rsp+0x40]
   1400024bf:	lea    rcx,[rip+0x53aa]        # 0x140007870
   1400024c6:	call   0x140003c54
   1400024cb:	mov    edi,eax
   1400024cd:	test   eax,eax
   1400024cf:	js     0x140002443
   1400024d5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024da:	test   rsi,rsi
   1400024dd:	je     0x140002443
   1400024e3:	lea    rax,[rsp+0x40]
   1400024e8:	test   rax,rax
   1400024eb:	jne    0x1400024f4
   1400024ed:	mov    edi,0x80004003
   1400024f2:	jmp    0x14000253d
   1400024f4:	lea    r8,[rsp+0x40]
   1400024f9:	mov    rdx,rbp
   1400024fc:	mov    rcx,rsi
   1400024ff:	call   0x1400039a4
   140002504:	mov    edi,eax
   140002506:	test   eax,eax
   140002508:	js     0x14000253d
   14000250a:	mov    r14,QWORD PTR [rsp+0x40]
   14000250f:	test   r14,r14
   140002512:	je     0x14000253a
   140002514:	mov    rcx,rbp
   140002517:	call   0x14000231c
   14000251c:	cmp    eax,0x1
   14000251f:	mov    edi,eax
   140002521:	mov    rax,QWORD PTR [r14]
   140002524:	setne  r12b
   140002528:	mov    rbx,QWORD PTR [rax+0x10]
   14000252c:	mov    rcx,rbx
   14000252f:	call   QWORD PTR [rip+0x4ddb]        # 0x140007310
   140002535:	mov    rcx,r14
   140002538:	call   rbx
   14000253a:	xor    r14d,r14d
   14000253d:	mov    rax,QWORD PTR [rsi]
   140002540:	mov    rbx,QWORD PTR [rax+0x10]
   140002544:	mov    rcx,rbx
   140002547:	call   QWORD PTR [rip+0x4dc3]        # 0x140007310
   14000254d:	mov    rcx,rsi
   140002550:	call   rbx
   140002552:	mov    ebx,0x1000
   140002557:	jmp    0x14000244a
   14000255c:	mov    esi,0x1
   140002561:	cmp    DWORD PTR [rip+0xa1ac],r14d        # 0x14000c714
   140002568:	jne    0x140002617
   14000256e:	test   r15,r15
   140002571:	je     0x140002617
   140002577:	or     rax,0xffffffffffffffff
   14000257b:	inc    rax
   14000257e:	cmp    WORD PTR [r15+rax*2],r14w
   140002583:	jne    0x14000257b
   140002585:	test   rax,rax
   140002588:	je     0x140002617
   14000258e:	mov    QWORD PTR [rsp+0x38],r14
   140002593:	lea    rax,[rsp+0x50]
   140002598:	mov    QWORD PTR [rsp+0x30],r14
   14000259d:	xor    r9d,r9d
   1400025a0:	mov    DWORD PTR [rsp+0x28],0x104
   1400025a8:	mov    r8d,esi
   1400025ab:	xor    edx,edx
   1400025ad:	mov    QWORD PTR [rsp+0x20],rax
   1400025b2:	mov    rcx,r15
   1400025b5:	mov    WORD PTR [rsp+0x50],r14w
   1400025bb:	call   QWORD PTR [rip+0x4b97]        # 0x140007158
   1400025c1:	test   eax,eax
   1400025c3:	je     0x1400025ff
   1400025c5:	mov    rcx,QWORD PTR [rip+0xa13c]        # 0x14000c708
   1400025cc:	lea    rax,[rsp+0x50]
   1400025d1:	mov    QWORD PTR [rsp+0x30],rax
   1400025d6:	lea    r8,[rip+0x8123]        # 0x14000a700
   1400025dd:	mov    QWORD PTR [rsp+0x28],r15
   1400025e2:	mov    r9d,ebx
   1400025e5:	xor    edx,edx
   1400025e7:	mov    DWORD PTR [rsp+0x20],0x2
   1400025ef:	call   0x140004030
   1400025f4:	mov    rcx,rax
   1400025f7:	call   QWORD PTR [rip+0x4c9b]        # 0x140007298
   1400025fd:	jmp    0x140002617
   1400025ff:	call   QWORD PTR [rip+0x4a3b]        # 0x140007040
   140002605:	movzx  ebx,ax
   140002608:	or     ebx,0x80070000
   14000260e:	test   eax,eax
   140002610:	cmovle ebx,eax
   140002613:	test   ebx,ebx
   140002615:	jne    0x14000266b
   140002617:	lea    rdx,[rsp+0x40]
   14000261c:	mov    ecx,esi
   14000261e:	call   0x1400035d4
   140002623:	mov    ebx,eax
   140002625:	test   eax,eax
   140002627:	js     0x14000266b
   140002629:	mov    rdi,QWORD PTR [rsp+0x40]
   14000262e:	lea    rax,[rip+0x547b]        # 0x140007ab0
   140002635:	mov    r8,QWORD PTR [rax+r13*8]
   140002639:	mov    rcx,rdi
   14000263c:	mov    rdx,rbp
   14000263f:	call   0x1400027c4
   140002644:	mov    ebx,eax
   140002646:	test   eax,eax
   140002648:	js     0x140002661
   14000264a:	mov    rax,QWORD PTR [rdi]
   14000264d:	mov    rbx,QWORD PTR [rax+0x28]
   140002651:	mov    rcx,rbx
   140002654:	call   QWORD PTR [rip+0x4cb6]        # 0x140007310
   14000265a:	mov    rcx,rdi
   14000265d:	call   rbx
   14000265f:	mov    ebx,eax
   140002661:	mov    rdx,rdi
   140002664:	mov    ecx,esi
   140002666:	call   0x140003790
   14000266b:	cmp    DWORD PTR [rip+0xa0a2],r14d        # 0x14000c714
   140002672:	je     0x14000267e
   140002674:	cmp    ebx,0x4a020
   14000267a:	cmove  ebx,r14d
   14000267e:	mov    ecx,ebx
   140002680:	call   0x140003858
   140002685:	mov    eax,ebx
   140002687:	mov    rcx,QWORD PTR [rsp+0x260]
   14000268f:	xor    rcx,rsp
   140002692:	call   0x1400054e0
   140002697:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000269f:	add    rsp,0x270
   1400026a6:	pop    r15
   1400026a8:	pop    r14
   1400026aa:	pop    r13
   1400026ac:	pop    r12
   1400026ae:	pop    rdi
   1400026af:	pop    rsi
   1400026b0:	pop    rbp
   1400026b1:	ret    
   1400026b2:	int3   
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400026bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400026c2:	push   rbp
   1400026c3:	push   rdi
   1400026c4:	push   r14
   1400026c6:	mov    rbp,rsp
   1400026c9:	sub    rsp,0x20
   1400026cd:	mov    rax,QWORD PTR [rcx]
   1400026d0:	mov    rsi,rcx
   1400026d3:	and    QWORD PTR [rbp+0x30],0x0
   1400026d8:	mov    r14,rdx
   1400026db:	and    QWORD PTR [rbp+0x20],0x0
   1400026e0:	mov    rbx,QWORD PTR [rax]
   1400026e3:	mov    rcx,rbx
   1400026e6:	call   QWORD PTR [rip+0x4c24]        # 0x140007310
   1400026ec:	lea    r8,[rbp+0x20]
   1400026f0:	mov    rcx,rsi
   1400026f3:	lea    rdx,[rip+0x54b6]        # 0x140007bb0
   1400026fa:	call   rbx
   1400026fc:	mov    rdi,QWORD PTR [rbp+0x20]
   140002700:	test   eax,eax
   140002702:	js     0x140002766
   140002704:	test   rdi,rdi
   140002707:	je     0x140002766
   140002709:	mov    rax,QWORD PTR [rsi]
   14000270c:	mov    rbx,QWORD PTR [rax+0x40]
   140002710:	mov    rcx,rbx
   140002713:	call   QWORD PTR [rip+0x4bf7]        # 0x140007310
   140002719:	lea    r8,[rbp+0x30]
   14000271d:	mov    rdx,r14
   140002720:	mov    rcx,rsi
   140002723:	call   rbx
   140002725:	mov    rsi,QWORD PTR [rbp+0x30]
   140002729:	test   eax,eax
   14000272b:	js     0x14000275d
   14000272d:	test   rsi,rsi
   140002730:	je     0x14000275d
   140002732:	mov    rdi,QWORD PTR [rbp+0x20]
   140002736:	mov    rax,QWORD PTR [rdi]
   140002739:	mov    rbx,QWORD PTR [rax+0x40]
   14000273d:	mov    rcx,rbx
   140002740:	call   QWORD PTR [rip+0x4bca]        # 0x140007310
   140002746:	xor    r9d,r9d
   140002749:	xor    r8d,r8d
   14000274c:	mov    rdx,rsi
   14000274f:	mov    rcx,rdi
   140002752:	call   rbx
   140002754:	mov    rdi,QWORD PTR [rbp+0x20]
   140002758:	mov    r14d,eax
   14000275b:	jmp    0x14000276c
   14000275d:	mov    rdi,QWORD PTR [rbp+0x20]
   140002761:	xor    r14d,r14d
   140002764:	jmp    0x140002770
   140002766:	mov    r14d,0x80004005
   14000276c:	mov    rsi,QWORD PTR [rbp+0x30]
   140002770:	test   rsi,rsi
   140002773:	je     0x14000278e
   140002775:	mov    rax,QWORD PTR [rsi]
   140002778:	mov    rbx,QWORD PTR [rax+0x10]
   14000277c:	mov    rcx,rbx
   14000277f:	call   QWORD PTR [rip+0x4b8b]        # 0x140007310
   140002785:	mov    rcx,rsi
   140002788:	call   rbx
   14000278a:	mov    rdi,QWORD PTR [rbp+0x20]
   14000278e:	test   rdi,rdi
   140002791:	je     0x1400027a8
   140002793:	mov    rax,QWORD PTR [rdi]
   140002796:	mov    rbx,QWORD PTR [rax+0x10]
   14000279a:	mov    rcx,rbx
   14000279d:	call   QWORD PTR [rip+0x4b6d]        # 0x140007310
   1400027a3:	mov    rcx,rdi
   1400027a6:	call   rbx
   1400027a8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400027ad:	mov    eax,r14d
   1400027b0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400027b5:	add    rsp,0x20
   1400027b9:	pop    r14
   1400027bb:	pop    rdi
   1400027bc:	pop    rbp
   1400027bd:	ret    
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	int3   
   1400027c1:	int3   
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400027ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400027d3:	push   rdi
   1400027d4:	sub    rsp,0x80
   1400027db:	cmp    DWORD PTR [rip+0x9f2e],0x0        # 0x14000c710
   1400027e2:	mov    rsi,r8
   1400027e5:	mov    rbp,rdx
   1400027e8:	mov    rdi,rcx
   1400027eb:	je     0x140002803
   1400027ed:	lea    rax,[rip+0x53ac]        # 0x140007ba0
   1400027f4:	cmp    r8,rax
   1400027f7:	je     0x140002803
   1400027f9:	call   0x1400026b8
   1400027fe:	jmp    0x1400028db
   140002803:	xor    edx,edx
   140002805:	lea    rcx,[rsp+0x48]
   14000280a:	lea    r8d,[rdx+0x30]
   14000280e:	call   0x140005d62
   140002813:	mov    rax,QWORD PTR [rdi]
   140002816:	mov    DWORD PTR [rsp+0x48],0x1
   14000281e:	mov    rbx,QWORD PTR [rax+0x48]
   140002822:	mov    rcx,rbx
   140002825:	call   QWORD PTR [rip+0x4ae5]        # 0x140007310
   14000282b:	lea    r9,[rsp+0xa8]
   140002833:	mov    rdx,rsi
   140002836:	lea    r8,[rip+0x52d3]        # 0x140007b10
   14000283d:	mov    rcx,rdi
   140002840:	call   rbx
   140002842:	mov    esi,eax
   140002844:	test   eax,eax
   140002846:	js     0x1400028d9
   14000284c:	mov    rdi,QWORD PTR [rsp+0xa8]
   140002854:	mov    rax,QWORD PTR [rdi]
   140002857:	mov    rbx,QWORD PTR [rax+0x20]
   14000285b:	mov    rcx,rbx
   14000285e:	call   QWORD PTR [rip+0x4aac]        # 0x140007310
   140002864:	lea    rax,[rsp+0x40]
   140002869:	mov    r9d,0x2
   14000286f:	mov    QWORD PTR [rsp+0x38],rax
   140002874:	lea    r8,[rsp+0x48]
   140002879:	and    QWORD PTR [rsp+0x30],0x0
   14000287f:	mov    rdx,rbp
   140002882:	and    QWORD PTR [rsp+0x28],0x0
   140002888:	mov    rcx,rdi
   14000288b:	and    DWORD PTR [rsp+0x20],0x0
   140002890:	call   rbx
   140002892:	mov    esi,eax
   140002894:	test   eax,eax
   140002896:	js     0x1400028b7
   140002898:	mov    rdi,QWORD PTR [rsp+0x40]
   14000289d:	test   rdi,rdi
   1400028a0:	je     0x1400028b7
   1400028a2:	mov    rax,QWORD PTR [rdi]
   1400028a5:	mov    rbx,QWORD PTR [rax+0x10]
   1400028a9:	mov    rcx,rbx
   1400028ac:	call   QWORD PTR [rip+0x4a5e]        # 0x140007310
   1400028b2:	mov    rcx,rdi
   1400028b5:	call   rbx
   1400028b7:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400028bf:	test   rdi,rdi
   1400028c2:	je     0x1400028d9
   1400028c4:	mov    rax,QWORD PTR [rdi]
   1400028c7:	mov    rbx,QWORD PTR [rax+0x10]
   1400028cb:	mov    rcx,rbx
   1400028ce:	call   QWORD PTR [rip+0x4a3c]        # 0x140007310
   1400028d4:	mov    rcx,rdi
   1400028d7:	call   rbx
   1400028d9:	mov    eax,esi
   1400028db:	lea    r11,[rsp+0x80]
   1400028e3:	mov    rbx,QWORD PTR [r11+0x10]
   1400028e7:	mov    rbp,QWORD PTR [r11+0x18]
   1400028eb:	mov    rsi,QWORD PTR [r11+0x20]
   1400028ef:	mov    rsp,r11
   1400028f2:	pop    rdi
   1400028f3:	ret    
   1400028f4:	int3   
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	mov    rax,rsp
   1400028ff:	mov    QWORD PTR [rax+0x10],rbx
   140002903:	mov    QWORD PTR [rax+0x18],rbp
   140002907:	mov    QWORD PTR [rax+0x20],rsi
   14000290b:	mov    QWORD PTR [rax+0x8],rcx
   14000290f:	push   rdi
   140002910:	push   r14
   140002912:	push   r15
   140002914:	sub    rsp,0x30
   140002918:	mov    rbp,QWORD PTR [rip+0x9de1]        # 0x14000c700
   14000291f:	lea    r8,[rip+0x7dda]        # 0x14000a700
   140002926:	mov    rcx,QWORD PTR [rip+0x9ddb]        # 0x14000c708
   14000292d:	mov    r9d,0x1000
   140002933:	mov    QWORD PTR [rax-0x20],rbp
   140002937:	xor    edx,edx
   140002939:	mov    DWORD PTR [rax-0x28],0x3
   140002940:	call   0x140004030
   140002945:	mov    rcx,rax
   140002948:	call   QWORD PTR [rip+0x494a]        # 0x140007298
   14000294e:	cmp    DWORD PTR [rip+0x9dbb],0x0        # 0x14000c710
   140002955:	je     0x140002a64
   14000295b:	xor    sil,sil
   14000295e:	lea    rax,[rsp+0x50]
   140002963:	test   rax,rax
   140002966:	je     0x1400029f6
   14000296c:	lea    rdx,[rsp+0x50]
   140002971:	lea    rcx,[rip+0x4f68]        # 0x1400078e0
   140002978:	call   0x140003c54
   14000297d:	mov    edi,eax
   14000297f:	test   eax,eax
   140002981:	js     0x1400029f6
   140002983:	mov    r14,QWORD PTR [rsp+0x50]
   140002988:	test   r14,r14
   14000298b:	jne    0x140002992
   14000298d:	mov    sil,0x1
   140002990:	jmp    0x1400029f2
   140002992:	lea    rax,[rsp+0x50]
   140002997:	test   rax,rax
   14000299a:	jne    0x1400029a3
   14000299c:	mov    edi,0x80004003
   1400029a1:	jmp    0x1400029dd
   1400029a3:	lea    r8,[rsp+0x50]
   1400029a8:	mov    rdx,rbp
   1400029ab:	mov    rcx,r14
   1400029ae:	call   0x1400039a4
   1400029b3:	mov    edi,eax
   1400029b5:	test   eax,eax
   1400029b7:	js     0x1400029dd
   1400029b9:	mov    r15,QWORD PTR [rsp+0x50]
   1400029be:	test   r15,r15
   1400029c1:	jne    0x1400029c8
   1400029c3:	mov    sil,0x1
   1400029c6:	jmp    0x1400029dd
   1400029c8:	mov    rax,QWORD PTR [r15]
   1400029cb:	mov    rbx,QWORD PTR [rax+0x10]
   1400029cf:	mov    rcx,rbx
   1400029d2:	call   QWORD PTR [rip+0x4938]        # 0x140007310
   1400029d8:	mov    rcx,r15
   1400029db:	call   rbx
   1400029dd:	mov    rax,QWORD PTR [r14]
   1400029e0:	mov    rbx,QWORD PTR [rax+0x10]
   1400029e4:	mov    rcx,rbx
   1400029e7:	call   QWORD PTR [rip+0x4923]        # 0x140007310
   1400029ed:	mov    rcx,r14
   1400029f0:	call   rbx
   1400029f2:	test   edi,edi
   1400029f4:	jns    0x140002a27
   1400029f6:	mov    rcx,QWORD PTR [rip+0x9d0b]        # 0x14000c708
   1400029fd:	lea    r8,[rip+0x7cfc]        # 0x14000a700
   140002a04:	mov    QWORD PTR [rsp+0x28],rbp
   140002a09:	mov    r9d,0x1000
   140002a0f:	xor    edx,edx
   140002a11:	mov    DWORD PTR [rsp+0x20],0x18
   140002a19:	call   0x140004030
   140002a1e:	mov    rcx,rax
   140002a21:	call   QWORD PTR [rip+0x4871]        # 0x140007298
   140002a27:	test   sil,sil
   140002a2a:	jne    0x140002a64
   140002a2c:	mov    rcx,QWORD PTR [rip+0x9cd5]        # 0x14000c708
   140002a33:	lea    r8,[rip+0x7cc6]        # 0x14000a700
   140002a3a:	mov    QWORD PTR [rsp+0x28],rbp
   140002a3f:	mov    r9d,0x1000
   140002a45:	xor    edx,edx
   140002a47:	mov    DWORD PTR [rsp+0x20],0x17
   140002a4f:	call   0x140004030
   140002a54:	mov    rcx,rax
   140002a57:	call   QWORD PTR [rip+0x483b]        # 0x140007298
   140002a5d:	xor    eax,eax
   140002a5f:	jmp    0x140002af4
   140002a64:	lea    rdx,[rsp+0x50]
   140002a69:	mov    ecx,0x1
   140002a6e:	call   0x1400035d4
   140002a73:	mov    ebx,eax
   140002a75:	test   eax,eax
   140002a77:	js     0x140002aeb
   140002a79:	mov    rdi,QWORD PTR [rsp+0x50]
   140002a7e:	mov    rdx,rbp
   140002a81:	mov    rcx,rdi
   140002a84:	call   0x140002b14
   140002a89:	mov    ebx,eax
   140002a8b:	test   eax,eax
   140002a8d:	jne    0x140002aa8
   140002a8f:	mov    rax,QWORD PTR [rdi]
   140002a92:	mov    rbx,QWORD PTR [rax+0x28]
   140002a96:	mov    rcx,rbx
   140002a99:	call   QWORD PTR [rip+0x4871]        # 0x140007310
   140002a9f:	mov    rcx,rdi
   140002aa2:	call   rbx
   140002aa4:	mov    ebx,eax
   140002aa6:	jmp    0x140002ade
   140002aa8:	cmp    eax,0x1
   140002aab:	jne    0x140002ade
   140002aad:	mov    rcx,QWORD PTR [rip+0x9c54]        # 0x14000c708
   140002ab4:	lea    r8,[rip+0x7c45]        # 0x14000a700
   140002abb:	mov    QWORD PTR [rsp+0x28],rbp
   140002ac0:	mov    r9d,0x1000
   140002ac6:	xor    edx,edx
   140002ac8:	mov    DWORD PTR [rsp+0x20],0x4
   140002ad0:	call   0x140004030
   140002ad5:	mov    rcx,rax
   140002ad8:	call   QWORD PTR [rip+0x47ba]        # 0x140007298
   140002ade:	mov    rdx,rdi
   140002ae1:	mov    ecx,0x1
   140002ae6:	call   0x140003790
   140002aeb:	mov    ecx,ebx
   140002aed:	call   0x140003858
   140002af2:	mov    eax,ebx
   140002af4:	mov    rbx,QWORD PTR [rsp+0x58]
   140002af9:	mov    rbp,QWORD PTR [rsp+0x60]
   140002afe:	mov    rsi,QWORD PTR [rsp+0x68]
   140002b03:	add    rsp,0x30
   140002b07:	pop    r15
   140002b09:	pop    r14
   140002b0b:	pop    rdi
   140002b0c:	ret    
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	int3   
   140002b11:	int3   
   140002b12:	int3   
   140002b13:	int3   
   140002b14:	mov    QWORD PTR [rsp+0x18],rbx
   140002b19:	push   rbp
   140002b1a:	push   rsi
   140002b1b:	push   rdi
   140002b1c:	mov    rbp,rsp
   140002b1f:	sub    rsp,0x80
   140002b26:	mov    rax,QWORD PTR [rip+0x74d3]        # 0x14000a000
   140002b2d:	xor    rax,rsp
   140002b30:	mov    QWORD PTR [rbp-0x8],rax
   140002b34:	mov    rdi,rdx
   140002b37:	mov    rsi,rcx
   140002b3a:	xor    edx,edx
   140002b3c:	lea    rcx,[rbp-0x48]
   140002b40:	lea    r8d,[rdx+0x30]
   140002b44:	call   0x140005d62
   140002b49:	mov    rax,QWORD PTR [rsi]
   140002b4c:	mov    DWORD PTR [rbp-0x48],0x1
   140002b53:	mov    rbx,QWORD PTR [rax+0x40]
   140002b57:	mov    rcx,rbx
   140002b5a:	call   QWORD PTR [rip+0x47b0]        # 0x140007310
   140002b60:	lea    r8,[rbp-0x60]
   140002b64:	mov    rdx,rdi
   140002b67:	mov    rcx,rsi
   140002b6a:	call   rbx
   140002b6c:	mov    edi,eax
   140002b6e:	test   eax,eax
   140002b70:	jne    0x140002c74
   140002b76:	mov    rdi,QWORD PTR [rbp-0x60]
   140002b7a:	mov    rax,QWORD PTR [rdi]
   140002b7d:	mov    rbx,QWORD PTR [rax+0x50]
   140002b81:	mov    rcx,rbx
   140002b84:	call   QWORD PTR [rip+0x4786]        # 0x140007310
   140002b8a:	lea    rdx,[rbp-0x18]
   140002b8e:	mov    rcx,rdi
   140002b91:	call   rbx
   140002b93:	mov    edi,eax
   140002b95:	test   eax,eax
   140002b97:	jne    0x140002c56
   140002b9d:	mov    rax,QWORD PTR [rsi]
   140002ba0:	mov    rbx,QWORD PTR [rax+0x48]
   140002ba4:	mov    rcx,rbx
   140002ba7:	call   QWORD PTR [rip+0x4763]        # 0x140007310
   140002bad:	lea    r9,[rbp-0x58]
   140002bb1:	mov    rcx,rsi
   140002bb4:	lea    r8,[rip+0x4f45]        # 0x140007b00
   140002bbb:	lea    rdx,[rbp-0x18]
   140002bbf:	call   rbx
   140002bc1:	mov    edi,eax
   140002bc3:	test   eax,eax
   140002bc5:	js     0x140002c56
   140002bcb:	mov    rdi,QWORD PTR [rbp-0x58]
   140002bcf:	mov    rax,QWORD PTR [rdi]
   140002bd2:	mov    rbx,QWORD PTR [rax]
   140002bd5:	mov    rcx,rbx
   140002bd8:	call   QWORD PTR [rip+0x4732]        # 0x140007310
   140002bde:	lea    r8,[rbp-0x50]
   140002be2:	mov    rcx,rdi
   140002be5:	lea    rdx,[rip+0x4f24]        # 0x140007b10
   140002bec:	call   rbx
   140002bee:	mov    edi,eax
   140002bf0:	test   eax,eax
   140002bf2:	js     0x140002c38
   140002bf4:	mov    rdi,QWORD PTR [rbp-0x50]
   140002bf8:	mov    rax,QWORD PTR [rdi]
   140002bfb:	mov    rbx,QWORD PTR [rax+0x28]
   140002bff:	mov    rcx,rbx
   140002c02:	call   QWORD PTR [rip+0x4708]        # 0x140007310
   140002c08:	mov    rdx,QWORD PTR [rbp-0x60]
   140002c0c:	lea    r8,[rbp-0x48]
   140002c10:	xor    r9d,r9d
   140002c13:	mov    rcx,rdi
   140002c16:	call   rbx
   140002c18:	mov    rsi,QWORD PTR [rbp-0x50]
   140002c1c:	mov    edi,eax
   140002c1e:	test   rsi,rsi
   140002c21:	je     0x140002c38
   140002c23:	mov    rax,QWORD PTR [rsi]
   140002c26:	mov    rbx,QWORD PTR [rax+0x10]
   140002c2a:	mov    rcx,rbx
   140002c2d:	call   QWORD PTR [rip+0x46dd]        # 0x140007310
   140002c33:	mov    rcx,rsi
   140002c36:	call   rbx
   140002c38:	mov    rsi,QWORD PTR [rbp-0x58]
   140002c3c:	test   rsi,rsi
   140002c3f:	je     0x140002c56
   140002c41:	mov    rax,QWORD PTR [rsi]
   140002c44:	mov    rbx,QWORD PTR [rax+0x10]
   140002c48:	mov    rcx,rbx
   140002c4b:	call   QWORD PTR [rip+0x46bf]        # 0x140007310
   140002c51:	mov    rcx,rsi
   140002c54:	call   rbx
   140002c56:	mov    rsi,QWORD PTR [rbp-0x60]
   140002c5a:	test   rsi,rsi
   140002c5d:	je     0x140002c74
   140002c5f:	mov    rax,QWORD PTR [rsi]
   140002c62:	mov    rbx,QWORD PTR [rax+0x10]
   140002c66:	mov    rcx,rbx
   140002c69:	call   QWORD PTR [rip+0x46a1]        # 0x140007310
   140002c6f:	mov    rcx,rsi
   140002c72:	call   rbx
   140002c74:	mov    eax,edi
   140002c76:	mov    rcx,QWORD PTR [rbp-0x8]
   140002c7a:	xor    rcx,rsp
   140002c7d:	call   0x1400054e0
   140002c82:	mov    rbx,QWORD PTR [rsp+0xb0]
   140002c8a:	add    rsp,0x80
   140002c91:	pop    rdi
   140002c92:	pop    rsi
   140002c93:	pop    rbp
   140002c94:	ret    
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	mov    QWORD PTR [rsp+0x8],rbx
   140002ca1:	mov    QWORD PTR [rsp+0x10],rbp
   140002ca6:	mov    QWORD PTR [rsp+0x18],rsi
   140002cab:	push   rdi
   140002cac:	push   r12
   140002cae:	push   r13
   140002cb0:	push   r14
   140002cb2:	push   r15
   140002cb4:	sub    rsp,0x70
   140002cb8:	mov    rax,QWORD PTR [rip+0x7341]        # 0x14000a000
   140002cbf:	xor    rax,rsp
   140002cc2:	mov    QWORD PTR [rsp+0x68],rax
   140002cc7:	xor    ebx,ebx
   140002cc9:	lea    rcx,[rip+0x4ed0]        # 0x140007ba0
   140002cd0:	xor    r8d,r8d
   140002cd3:	xor    edx,edx
   140002cd5:	mov    r15d,ebx
   140002cd8:	mov    ebp,ebx
   140002cda:	mov    r12d,ebx
   140002cdd:	lea    r9d,[rbx+0x2]
   140002ce1:	call   QWORD PTR [rip+0x4489]        # 0x140007170
   140002ce7:	mov    rdi,rax
   140002cea:	call   QWORD PTR [rip+0x4370]        # 0x140007060
   140002cf0:	mov    r13d,0x2000
   140002cf6:	lea    esi,[rbx+0x8]
   140002cf9:	mov    rcx,rax
   140002cfc:	mov    r8d,r13d
   140002cff:	mov    edx,esi
   140002d01:	call   QWORD PTR [rip+0x4351]        # 0x140007058
   140002d07:	mov    r14,rax
   140002d0a:	call   QWORD PTR [rip+0x4350]        # 0x140007060
   140002d10:	mov    r8d,r13d
   140002d13:	mov    edx,esi
   140002d15:	mov    rcx,rax
   140002d18:	call   QWORD PTR [rip+0x433a]        # 0x140007058
   140002d1e:	mov    rsi,rax
   140002d21:	test   r14,r14
   140002d24:	je     0x140002e59
   140002d2a:	test   rax,rax
   140002d2d:	je     0x140002e45
   140002d33:	cmp    rdi,0xffffffffffffffff
   140002d37:	je     0x140002e45
   140002d3d:	lea    r8,[rsp+0x48]
   140002d42:	mov    DWORD PTR [rsp+0x48],0x20
   140002d4a:	xor    edx,edx
   140002d4c:	mov    rcx,rdi
   140002d4f:	call   QWORD PTR [rip+0x4423]        # 0x140007178
   140002d55:	test   eax,eax
   140002d57:	je     0x140002e3c
   140002d5d:	mov    r13d,0x1000
   140002d63:	mov    r9d,r13d
   140002d66:	mov    QWORD PTR [rsp+0x20],rbx
   140002d6b:	mov    r8,r14
   140002d6e:	lea    rdx,[rsp+0x48]
   140002d73:	mov    rcx,rdi
   140002d76:	inc    r15d
   140002d79:	call   QWORD PTR [rip+0x43d1]        # 0x140007150
   140002d7f:	mov    ebp,eax
   140002d81:	test   eax,eax
   140002d83:	je     0x140002e1b
   140002d89:	mov    QWORD PTR [rsp+0x30],rbx
   140002d8e:	lea    r9,[rsp+0x40]
   140002d93:	mov    DWORD PTR [rsp+0x28],r13d
   140002d98:	lea    rdx,[rsp+0x48]
   140002d9d:	xor    r8d,r8d
   140002da0:	mov    QWORD PTR [rsp+0x20],rsi
   140002da5:	mov    rcx,rdi
   140002da8:	call   QWORD PTR [rip+0x43b2]        # 0x140007160
   140002dae:	mov    ebp,eax
   140002db0:	test   eax,eax
   140002db2:	je     0x140002e1b
   140002db4:	test   r12d,r12d
   140002db7:	jne    0x140002de8
   140002db9:	mov    rcx,QWORD PTR [rip+0x9948]        # 0x14000c708
   140002dc0:	lea    r8,[rip+0x7939]        # 0x14000a700
   140002dc7:	mov    r9d,r13d
   140002dca:	mov    DWORD PTR [rsp+0x20],0xb
   140002dd2:	xor    edx,edx
   140002dd4:	mov    r12d,0x1
   140002dda:	call   0x140004030
   140002ddf:	mov    rcx,rax
   140002de2:	call   QWORD PTR [rip+0x44b0]        # 0x140007298
   140002de8:	mov    rcx,QWORD PTR [rip+0x9919]        # 0x14000c708
   140002def:	lea    r8,[rip+0x790a]        # 0x14000a700
   140002df6:	mov    QWORD PTR [rsp+0x30],rsi
   140002dfb:	mov    r9d,r13d
   140002dfe:	mov    QWORD PTR [rsp+0x28],r14
   140002e03:	xor    edx,edx
   140002e05:	mov    DWORD PTR [rsp+0x20],0xc
   140002e0d:	call   0x140004030
   140002e12:	mov    rcx,rax
   140002e15:	call   QWORD PTR [rip+0x447d]        # 0x140007298
   140002e1b:	lea    r8,[rsp+0x48]
   140002e20:	mov    DWORD PTR [rsp+0x48],0x20
   140002e28:	mov    edx,r15d
   140002e2b:	mov    rcx,rdi
   140002e2e:	call   QWORD PTR [rip+0x4344]        # 0x140007178
   140002e34:	test   eax,eax
   140002e36:	jne    0x140002d63
   140002e3c:	mov    rcx,rdi
   140002e3f:	call   QWORD PTR [rip+0x4323]        # 0x140007168
   140002e45:	call   QWORD PTR [rip+0x4215]        # 0x140007060
   140002e4b:	mov    r8,r14
   140002e4e:	xor    edx,edx
   140002e50:	mov    rcx,rax
   140002e53:	call   QWORD PTR [rip+0x420f]        # 0x140007068
   140002e59:	test   rsi,rsi
   140002e5c:	je     0x140002e72
   140002e5e:	call   QWORD PTR [rip+0x41fc]        # 0x140007060
   140002e64:	mov    r8,rsi
   140002e67:	xor    edx,edx
   140002e69:	mov    rcx,rax
   140002e6c:	call   QWORD PTR [rip+0x41f6]        # 0x140007068
   140002e72:	test   ebp,ebp
   140002e74:	jne    0x140002e8a
   140002e76:	call   QWORD PTR [rip+0x41c4]        # 0x140007040
   140002e7c:	movzx  ebx,ax
   140002e7f:	or     ebx,0x80070000
   140002e85:	test   eax,eax
   140002e87:	cmovle ebx,eax
   140002e8a:	mov    eax,ebx
   140002e8c:	mov    rcx,QWORD PTR [rsp+0x68]
   140002e91:	xor    rcx,rsp
   140002e94:	call   0x1400054e0
   140002e99:	lea    r11,[rsp+0x70]
   140002e9e:	mov    rbx,QWORD PTR [r11+0x30]
   140002ea2:	mov    rbp,QWORD PTR [r11+0x38]
   140002ea6:	mov    rsi,QWORD PTR [r11+0x40]
   140002eaa:	mov    rsp,r11
   140002ead:	pop    r15
   140002eaf:	pop    r14
   140002eb1:	pop    r13
   140002eb3:	pop    r12
   140002eb5:	pop    rdi
   140002eb6:	ret    
   140002eb7:	int3   
   140002eb8:	int3   
   140002eb9:	int3   
   140002eba:	int3   
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	mov    QWORD PTR [rsp+0x10],rbx
   140002ec5:	push   rbp
   140002ec6:	push   rsi
   140002ec7:	push   rdi
   140002ec8:	push   r14
   140002eca:	push   r15
   140002ecc:	mov    rbp,rsp
   140002ecf:	sub    rsp,0x60
   140002ed3:	mov    rax,QWORD PTR [rcx]
   140002ed6:	mov    rdi,rcx
   140002ed9:	mov    r14,rdx
   140002edc:	mov    rbx,QWORD PTR [rax+0x48]
   140002ee0:	mov    rcx,rbx
   140002ee3:	call   QWORD PTR [rip+0x4427]        # 0x140007310
   140002ee9:	lea    r9,[rbp-0x20]
   140002eed:	mov    rdx,r14
   140002ef0:	lea    r8,[rip+0x4c09]        # 0x140007b00
   140002ef7:	mov    rcx,rdi
   140002efa:	call   rbx
   140002efc:	xor    r15d,r15d
   140002eff:	mov    edi,eax
   140002f01:	test   eax,eax
   140002f03:	js     0x140003092
   140002f09:	mov    rdi,QWORD PTR [rbp-0x20]
   140002f0d:	mov    rax,QWORD PTR [rdi]
   140002f10:	mov    rbx,QWORD PTR [rax+0x20]
   140002f14:	mov    rcx,rbx
   140002f17:	call   QWORD PTR [rip+0x43f3]        # 0x140007310
   140002f1d:	lea    rdx,[rbp-0x8]
   140002f21:	mov    rcx,rdi
   140002f24:	call   rbx
   140002f26:	mov    rsi,QWORD PTR [rbp-0x20]
   140002f2a:	mov    edi,eax
   140002f2c:	test   rsi,rsi
   140002f2f:	je     0x140002f46
   140002f31:	mov    rax,QWORD PTR [rsi]
   140002f34:	mov    rbx,QWORD PTR [rax+0x10]
   140002f38:	mov    rcx,rbx
   140002f3b:	call   QWORD PTR [rip+0x43cf]        # 0x140007310
   140002f41:	mov    rcx,rsi
   140002f44:	call   rbx
   140002f46:	test   edi,edi
   140002f48:	js     0x140003074
   140002f4e:	mov    rdi,QWORD PTR [rbp-0x8]
   140002f52:	mov    rax,QWORD PTR [rdi]
   140002f55:	mov    rbx,QWORD PTR [rax+0x18]
   140002f59:	mov    rcx,rbx
   140002f5c:	call   QWORD PTR [rip+0x43ae]        # 0x140007310
   140002f62:	lea    r9,[rbp+0x40]
   140002f66:	mov    edx,0x1
   140002f6b:	lea    r8,[rbp+0x48]
   140002f6f:	mov    rcx,rdi
   140002f72:	call   rbx
   140002f74:	mov    edi,eax
   140002f76:	test   eax,eax
   140002f78:	jne    0x140003074
   140002f7e:	lea    rax,[rip+0x4c1b]        # 0x140007ba0
   140002f85:	cmp    r14,rax
   140002f88:	jne    0x140002fb9
   140002f8a:	mov    rdi,QWORD PTR [rbp+0x48]
   140002f8e:	mov    rax,QWORD PTR [rdi]
   140002f91:	mov    rbx,QWORD PTR [rax+0x38]
   140002f95:	mov    rcx,rbx
   140002f98:	call   QWORD PTR [rip+0x4372]        # 0x140007310
   140002f9e:	lea    rdx,[rbp+0x30]
   140002fa2:	mov    rcx,rdi
   140002fa5:	call   rbx
   140002fa7:	test   eax,eax
   140002fa9:	js     0x14000304d
   140002faf:	test   BYTE PTR [rbp+0x30],0x4
   140002fb3:	je     0x14000304d
   140002fb9:	mov    rdi,QWORD PTR [rbp+0x48]
   140002fbd:	mov    rax,QWORD PTR [rdi]
   140002fc0:	mov    rbx,QWORD PTR [rax+0x30]
   140002fc4:	mov    rcx,rbx
   140002fc7:	call   QWORD PTR [rip+0x4343]        # 0x140007310
   140002fcd:	lea    rdx,[rbp-0x10]
   140002fd1:	mov    rcx,rdi
   140002fd4:	call   rbx
   140002fd6:	test   eax,eax
   140002fd8:	jne    0x14000304d
   140002fda:	mov    rdi,QWORD PTR [rbp+0x48]
   140002fde:	mov    rax,QWORD PTR [rdi]
   140002fe1:	mov    rbx,QWORD PTR [rax+0x18]
   140002fe5:	mov    rcx,rbx
   140002fe8:	call   QWORD PTR [rip+0x4322]        # 0x140007310
   140002fee:	lea    rdx,[rbp-0x18]
   140002ff2:	mov    rcx,rdi
   140002ff5:	call   rbx
   140002ff7:	test   eax,eax
   140002ff9:	js     0x140003043
   140002ffb:	mov    rax,QWORD PTR [rbp-0x18]
   140002fff:	lea    r8,[rip+0x76fa]        # 0x14000a700
   140003006:	mov    rcx,QWORD PTR [rip+0x96fb]        # 0x14000c708
   14000300d:	mov    r9d,0x1000
   140003013:	mov    QWORD PTR [rsp+0x30],rax
   140003018:	xor    edx,edx
   14000301a:	mov    rax,QWORD PTR [rbp-0x10]
   14000301e:	mov    QWORD PTR [rsp+0x28],rax
   140003023:	mov    DWORD PTR [rsp+0x20],0xd
   14000302b:	call   0x140004030
   140003030:	mov    rcx,rax
   140003033:	call   QWORD PTR [rip+0x425f]        # 0x140007298
   140003039:	mov    rcx,QWORD PTR [rbp-0x18]
   14000303d:	call   QWORD PTR [rip+0x42a5]        # 0x1400072e8
   140003043:	mov    rcx,QWORD PTR [rbp-0x10]
   140003047:	call   QWORD PTR [rip+0x429b]        # 0x1400072e8
   14000304d:	mov    rdi,QWORD PTR [rbp+0x48]
   140003051:	test   rdi,rdi
   140003054:	je     0x140002f4e
   14000305a:	mov    rax,QWORD PTR [rdi]
   14000305d:	mov    rbx,QWORD PTR [rax+0x10]
   140003061:	mov    rcx,rbx
   140003064:	call   QWORD PTR [rip+0x42a6]        # 0x140007310
   14000306a:	mov    rcx,rdi
   14000306d:	call   rbx
   14000306f:	jmp    0x140002f4e
   140003074:	mov    rsi,QWORD PTR [rbp-0x8]
   140003078:	test   rsi,rsi
   14000307b:	je     0x140003092
   14000307d:	mov    rdx,QWORD PTR [rsi]
   140003080:	mov    rbx,QWORD PTR [rdx+0x10]
   140003084:	mov    rcx,rbx
   140003087:	call   QWORD PTR [rip+0x4283]        # 0x140007310
   14000308d:	mov    rcx,rsi
   140003090:	call   rbx
   140003092:	mov    rbx,QWORD PTR [rsp+0x98]
   14000309a:	cmp    edi,0x1
   14000309d:	cmove  edi,r15d
   1400030a1:	mov    eax,edi
   1400030a3:	add    rsp,0x60
   1400030a7:	pop    r15
   1400030a9:	pop    r14
   1400030ab:	pop    rdi
   1400030ac:	pop    rsi
   1400030ad:	pop    rbp
   1400030ae:	ret    
   1400030af:	int3   
   1400030b0:	int3   
   1400030b1:	int3   
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	mov    rax,rsp
   1400030bb:	mov    QWORD PTR [rax+0x8],rbx
   1400030bf:	mov    QWORD PTR [rax+0x10],rbp
   1400030c3:	push   rsi
   1400030c4:	push   rdi
   1400030c5:	push   r14
   1400030c7:	sub    rsp,0x20
   1400030cb:	and    QWORD PTR [rax+0x20],0x0
   1400030d0:	mov    rsi,r8
   1400030d3:	and    QWORD PTR [r8],0x0
   1400030d7:	mov    ebp,edx
   1400030d9:	mov    rdi,QWORD PTR [rip+0x9640]        # 0x14000c720
   1400030e0:	mov    r14,rcx
   1400030e3:	test   rdi,rdi
   1400030e6:	jne    0x140003165
   1400030e8:	and    QWORD PTR [rax+0x18],rdi
   1400030ec:	mov    rax,QWORD PTR [rcx]
   1400030ef:	mov    rbx,QWORD PTR [rax]
   1400030f2:	mov    rcx,rbx
   1400030f5:	call   QWORD PTR [rip+0x4215]        # 0x140007310
   1400030fb:	lea    r8,[rsp+0x50]
   140003100:	mov    rcx,r14
   140003103:	lea    rdx,[rip+0x49e6]        # 0x140007af0
   14000310a:	call   rbx
   14000310c:	mov    edi,eax
   14000310e:	test   eax,eax
   140003110:	jne    0x140003199
   140003116:	mov    rdi,QWORD PTR [rsp+0x50]
   14000311b:	mov    rax,QWORD PTR [rdi]
   14000311e:	mov    rbx,QWORD PTR [rax+0x40]
   140003122:	mov    rcx,rbx
   140003125:	call   QWORD PTR [rip+0x41e5]        # 0x140007310
   14000312b:	lea    r8,[rip+0x95ee]        # 0x14000c720
   140003132:	mov    edx,ebp
   140003134:	mov    rcx,rdi
   140003137:	call   rbx
   140003139:	mov    r14,QWORD PTR [rsp+0x50]
   14000313e:	mov    edi,eax
   140003140:	test   r14,r14
   140003143:	je     0x14000315a
   140003145:	mov    rax,QWORD PTR [r14]
   140003148:	mov    rbx,QWORD PTR [rax+0x10]
   14000314c:	mov    rcx,rbx
   14000314f:	call   QWORD PTR [rip+0x41bb]        # 0x140007310
   140003155:	mov    rcx,r14
   140003158:	call   rbx
   14000315a:	test   edi,edi
   14000315c:	jne    0x140003199
   14000315e:	mov    rdi,QWORD PTR [rip+0x95bb]        # 0x14000c720
   140003165:	mov    rax,QWORD PTR [rdi]
   140003168:	mov    rbx,QWORD PTR [rax+0x18]
   14000316c:	mov    rcx,rbx
   14000316f:	call   QWORD PTR [rip+0x419b]        # 0x140007310
   140003175:	lea    r9,[rsp+0x50]
   14000317a:	mov    edx,0x1
   14000317f:	lea    r8,[rsp+0x58]
   140003184:	mov    rcx,rdi
   140003187:	call   rbx
   140003189:	mov    edi,eax
   14000318b:	test   eax,eax
   14000318d:	jne    0x140003199
   14000318f:	mov    rax,QWORD PTR [rsp+0x58]
   140003194:	mov    QWORD PTR [rsi],rax
   140003197:	jmp    0x1400031c2
   140003199:	mov    rsi,QWORD PTR [rip+0x9580]        # 0x14000c720
   1400031a0:	test   rsi,rsi
   1400031a3:	je     0x1400031ba
   1400031a5:	mov    rax,QWORD PTR [rsi]
   1400031a8:	mov    rbx,QWORD PTR [rax+0x10]
   1400031ac:	mov    rcx,rbx
   1400031af:	call   QWORD PTR [rip+0x415b]        # 0x140007310
   1400031b5:	mov    rcx,rsi
   1400031b8:	call   rbx
   1400031ba:	and    QWORD PTR [rip+0x955e],0x0        # 0x14000c720
   1400031c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031c7:	mov    eax,edi
   1400031c9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400031ce:	add    rsp,0x20
   1400031d2:	pop    r14
   1400031d4:	pop    rdi
   1400031d5:	pop    rsi
   1400031d6:	ret    
   1400031d7:	int3   
   1400031d8:	int3   
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031e5:	push   rbp
   1400031e6:	push   rsi
   1400031e7:	push   rdi
   1400031e8:	push   r12
   1400031ea:	push   r13
   1400031ec:	push   r14
   1400031ee:	push   r15
   1400031f0:	mov    rbp,rsp
   1400031f3:	sub    rsp,0x40
   1400031f7:	xor    r13d,r13d
   1400031fa:	mov    r12,rcx
   1400031fd:	mov    QWORD PTR [rbp+0x50],r13
   140003201:	lea    r15d,[r13+0x1]
   140003205:	cmp    QWORD PTR [rip+0x951c],r13        # 0x14000c728
   14000320c:	mov    rsi,r13
   14000320f:	mov    QWORD PTR [rbp-0x10],r13
   140003213:	jne    0x140003238
   140003215:	mov    rax,QWORD PTR [r12]
   140003219:	mov    rbx,QWORD PTR [rax+0x50]
   14000321d:	mov    rcx,rbx
   140003220:	call   QWORD PTR [rip+0x40ea]        # 0x140007310
   140003226:	lea    rdx,[rip+0x94fb]        # 0x14000c728
   14000322d:	mov    rcx,r12
   140003230:	call   rbx
   140003232:	mov    edi,eax
   140003234:	test   eax,eax
   140003236:	jne    0x14000326d
   140003238:	mov    rdi,QWORD PTR [rip+0x94e9]        # 0x14000c728
   14000323f:	mov    rax,QWORD PTR [rdi]
   140003242:	mov    rbx,QWORD PTR [rax+0x18]
   140003246:	mov    rcx,rbx
   140003249:	call   QWORD PTR [rip+0x40c1]        # 0x140007310
   14000324f:	lea    r9,[rbp+0x48]
   140003253:	mov    edx,0x1
   140003258:	lea    r8,[rbp-0x10]
   14000325c:	mov    rcx,rdi
   14000325f:	call   rbx
   140003261:	mov    edi,eax
   140003263:	test   eax,eax
   140003265:	jne    0x14000326d
   140003267:	mov    rsi,QWORD PTR [rbp-0x10]
   14000326b:	jmp    0x14000329d
   14000326d:	mov    r14,QWORD PTR [rip+0x94b4]        # 0x14000c728
   140003274:	test   r14,r14
   140003277:	je     0x14000328e
   140003279:	mov    rax,QWORD PTR [r14]
   14000327c:	mov    rbx,QWORD PTR [rax+0x10]
   140003280:	mov    rcx,rbx
   140003283:	call   QWORD PTR [rip+0x4087]        # 0x140007310
   140003289:	mov    rcx,r14
   14000328c:	call   rbx
   14000328e:	mov    QWORD PTR [rip+0x9493],r13        # 0x14000c728
   140003295:	test   edi,edi
   140003297:	jne    0x14000341d
   14000329d:	test   r15d,r15d
   1400032a0:	je     0x140003350
   1400032a6:	mov    rax,QWORD PTR [rsi]
   1400032a9:	mov    r15d,r13d
   1400032ac:	mov    rbx,QWORD PTR [rax+0x20]
   1400032b0:	mov    rcx,rbx
   1400032b3:	call   QWORD PTR [rip+0x4057]        # 0x140007310
   1400032b9:	lea    rdx,[rbp+0x50]
   1400032bd:	mov    rcx,rsi
   1400032c0:	call   rbx
   1400032c2:	mov    edi,eax
   1400032c4:	test   eax,eax
   1400032c6:	js     0x1400033fb
   1400032cc:	mov    rdi,QWORD PTR [rbp+0x50]
   1400032d0:	mov    rax,QWORD PTR [rdi]
   1400032d3:	mov    rbx,QWORD PTR [rax+0x30]
   1400032d7:	mov    rcx,rbx
   1400032da:	call   QWORD PTR [rip+0x4030]        # 0x140007310
   1400032e0:	lea    rdx,[rbp+0x58]
   1400032e4:	mov    rcx,rdi
   1400032e7:	call   rbx
   1400032e9:	mov    r14,QWORD PTR [rbp+0x50]
   1400032ed:	mov    edi,eax
   1400032ef:	test   r14,r14
   1400032f2:	je     0x140003309
   1400032f4:	mov    rax,QWORD PTR [r14]
   1400032f7:	mov    rbx,QWORD PTR [rax+0x10]
   1400032fb:	mov    rcx,rbx
   1400032fe:	call   QWORD PTR [rip+0x400c]        # 0x140007310
   140003304:	mov    rcx,r14
   140003307:	call   rbx
   140003309:	test   edi,edi
   14000330b:	js     0x1400033fb
   140003311:	mov    rax,QWORD PTR [rbp+0x58]
   140003315:	lea    r8,[rip+0x73e4]        # 0x14000a700
   14000331c:	mov    rcx,QWORD PTR [rip+0x93e5]        # 0x14000c708
   140003323:	mov    r9d,0x1000
   140003329:	mov    QWORD PTR [rsp+0x28],rax
   14000332e:	xor    edx,edx
   140003330:	mov    DWORD PTR [rsp+0x20],0x10
   140003338:	call   0x140004030
   14000333d:	mov    rcx,rax
   140003340:	call   QWORD PTR [rip+0x3f52]        # 0x140007298
   140003346:	mov    rcx,QWORD PTR [rbp+0x58]
   14000334a:	call   QWORD PTR [rip+0x3f98]        # 0x1400072e8
   140003350:	test   edi,edi
   140003352:	js     0x1400033fb
   140003358:	mov    rax,QWORD PTR [rsi]
   14000335b:	mov    rbx,QWORD PTR [rax+0x28]
   14000335f:	mov    rcx,rbx
   140003362:	call   QWORD PTR [rip+0x3fa8]        # 0x140007310
   140003368:	lea    rdx,[rbp+0x50]
   14000336c:	mov    rcx,rsi
   14000336f:	call   rbx
   140003371:	mov    edi,eax
   140003373:	test   eax,eax
   140003375:	js     0x1400033fb
   14000337b:	mov    rdi,QWORD PTR [rbp+0x50]
   14000337f:	mov    rax,QWORD PTR [rdi]
   140003382:	mov    rbx,QWORD PTR [rax+0x30]
   140003386:	mov    rcx,rbx
   140003389:	call   QWORD PTR [rip+0x3f81]        # 0x140007310
   14000338f:	lea    rdx,[rbp+0x58]
   140003393:	mov    rcx,rdi
   140003396:	call   rbx
   140003398:	mov    edi,eax
   14000339a:	test   eax,eax
   14000339c:	js     0x1400033dd
   14000339e:	mov    rax,QWORD PTR [rbp+0x58]
   1400033a2:	lea    r8,[rip+0x7357]        # 0x14000a700
   1400033a9:	mov    rcx,QWORD PTR [rip+0x9358]        # 0x14000c708
   1400033b0:	mov    r9d,0x1000
   1400033b6:	mov    QWORD PTR [rsp+0x28],rax
   1400033bb:	xor    edx,edx
   1400033bd:	mov    DWORD PTR [rsp+0x20],0x11
   1400033c5:	call   0x140004030
   1400033ca:	mov    rcx,rax
   1400033cd:	call   QWORD PTR [rip+0x3ec5]        # 0x140007298
   1400033d3:	mov    rcx,QWORD PTR [rbp+0x58]
   1400033d7:	call   QWORD PTR [rip+0x3f0b]        # 0x1400072e8
   1400033dd:	mov    r14,QWORD PTR [rbp+0x50]
   1400033e1:	test   r14,r14
   1400033e4:	je     0x1400033fb
   1400033e6:	mov    rax,QWORD PTR [r14]
   1400033e9:	mov    rbx,QWORD PTR [rax+0x10]
   1400033ed:	mov    rcx,rbx
   1400033f0:	call   QWORD PTR [rip+0x3f1a]        # 0x140007310
   1400033f6:	mov    rcx,r14
   1400033f9:	call   rbx
   1400033fb:	test   rsi,rsi
   1400033fe:	je     0x140003415
   140003400:	mov    rax,QWORD PTR [rsi]
   140003403:	mov    rbx,QWORD PTR [rax+0x10]
   140003407:	mov    rcx,rbx
   14000340a:	call   QWORD PTR [rip+0x3f00]        # 0x140007310
   140003410:	mov    rcx,rsi
   140003413:	call   rbx
   140003415:	test   edi,edi
   140003417:	jns    0x140003205
   14000341d:	lea    rcx,[rip+0x45a4]        # 0x1400079c8
   140003424:	call   QWORD PTR [rip+0x3e26]        # 0x140007250
   14000342a:	mov    rbx,QWORD PTR [rsp+0x80]
   140003432:	cmp    edi,0x1
   140003435:	cmove  edi,r13d
   140003439:	mov    eax,edi
   14000343b:	add    rsp,0x40
   14000343f:	pop    r15
   140003441:	pop    r14
   140003443:	pop    r13
   140003445:	pop    r12
   140003447:	pop    rdi
   140003448:	pop    rsi
   140003449:	pop    rbp
   14000344a:	ret    
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	int3   
   140003451:	int3   
   140003452:	int3   
   140003453:	int3   
   140003454:	mov    QWORD PTR [rsp+0x8],rcx
   140003459:	push   rbp
   14000345a:	push   rbx
   14000345b:	push   rsi
   14000345c:	push   rdi
   14000345d:	push   r14
   14000345f:	mov    rbp,rsp
   140003462:	sub    rsp,0x30
   140003466:	mov    r14,QWORD PTR [rip+0x9293]        # 0x14000c700
   14000346d:	lea    rdx,[rbp+0x40]
   140003471:	and    QWORD PTR [rbp+0x40],0x0
   140003476:	xor    ecx,ecx
   140003478:	and    QWORD PTR [rbp+0x38],0x0
   14000347d:	and    QWORD PTR [rbp+0x30],0x0
   140003482:	call   0x1400035d4
   140003487:	test   eax,eax
   140003489:	js     0x1400035c1
   14000348f:	mov    rsi,QWORD PTR [rbp+0x40]
   140003493:	mov    rax,QWORD PTR [rsi]
   140003496:	mov    rbx,QWORD PTR [rax+0x40]
   14000349a:	mov    rcx,rbx
   14000349d:	call   QWORD PTR [rip+0x3e6d]        # 0x140007310
   1400034a3:	lea    r8,[rbp+0x38]
   1400034a7:	mov    rdx,r14
   1400034aa:	mov    rcx,rsi
   1400034ad:	call   rbx
   1400034af:	test   eax,eax
   1400034b1:	jne    0x1400035b7
   1400034b7:	mov    rcx,QWORD PTR [rip+0x924a]        # 0x14000c708
   1400034be:	lea    r8,[rip+0x723b]        # 0x14000a700
   1400034c5:	mov    QWORD PTR [rsp+0x28],r14
   1400034ca:	mov    r9d,0x1000
   1400034d0:	xor    edx,edx
   1400034d2:	mov    DWORD PTR [rsp+0x20],0x12
   1400034da:	call   0x140004030
   1400034df:	mov    rcx,rax
   1400034e2:	call   QWORD PTR [rip+0x3db0]        # 0x140007298
   1400034e8:	jmp    0x140003510
   1400034ea:	mov    rdi,QWORD PTR [rbp+0x30]
   1400034ee:	mov    rcx,rdi
   1400034f1:	call   0x1400031e0
   1400034f6:	test   rdi,rdi
   1400034f9:	je     0x140003510
   1400034fb:	mov    rax,QWORD PTR [rdi]
   1400034fe:	mov    rbx,QWORD PTR [rax+0x10]
   140003502:	mov    rcx,rbx
   140003505:	call   QWORD PTR [rip+0x3e05]        # 0x140007310
   14000350b:	mov    rcx,rdi
   14000350e:	call   rbx
   140003510:	mov    rcx,QWORD PTR [rbp+0x38]
   140003514:	lea    r8,[rbp+0x30]
   140003518:	mov    edx,0x2
   14000351d:	call   0x1400030b8
   140003522:	test   eax,eax
   140003524:	je     0x1400034ea
   140003526:	mov    rcx,QWORD PTR [rip+0x91db]        # 0x14000c708
   14000352d:	lea    r8,[rip+0x71cc]        # 0x14000a700
   140003534:	mov    QWORD PTR [rsp+0x28],r14
   140003539:	mov    r9d,0x1000
   14000353f:	xor    edx,edx
   140003541:	mov    DWORD PTR [rsp+0x20],0x13
   140003549:	call   0x140004030
   14000354e:	mov    rcx,rax
   140003551:	call   QWORD PTR [rip+0x3d41]        # 0x140007298
   140003557:	mov    r14d,0x1
   14000355d:	jmp    0x140003585
   14000355f:	mov    rdi,QWORD PTR [rbp+0x30]
   140003563:	mov    rcx,rdi
   140003566:	call   0x1400031e0
   14000356b:	test   rdi,rdi
   14000356e:	je     0x140003585
   140003570:	mov    rax,QWORD PTR [rdi]
   140003573:	mov    rbx,QWORD PTR [rax+0x10]
   140003577:	mov    rcx,rbx
   14000357a:	call   QWORD PTR [rip+0x3d90]        # 0x140007310
   140003580:	mov    rcx,rdi
   140003583:	call   rbx
   140003585:	mov    rcx,QWORD PTR [rbp+0x38]
   140003589:	lea    r8,[rbp+0x30]
   14000358d:	mov    edx,r14d
   140003590:	call   0x1400030b8
   140003595:	test   eax,eax
   140003597:	je     0x14000355f
   140003599:	mov    rdi,QWORD PTR [rbp+0x38]
   14000359d:	test   rdi,rdi
   1400035a0:	je     0x1400035b7
   1400035a2:	mov    rax,QWORD PTR [rdi]
   1400035a5:	mov    rbx,QWORD PTR [rax+0x10]
   1400035a9:	mov    rcx,rbx
   1400035ac:	call   QWORD PTR [rip+0x3d5e]        # 0x140007310
   1400035b2:	mov    rcx,rdi
   1400035b5:	call   rbx
   1400035b7:	mov    rdx,rsi
   1400035ba:	xor    ecx,ecx
   1400035bc:	call   0x140003790
   1400035c1:	add    rsp,0x30
   1400035c5:	pop    r14
   1400035c7:	pop    rdi
   1400035c8:	pop    rsi
   1400035c9:	pop    rbx
   1400035ca:	pop    rbp
   1400035cb:	ret    
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	int3   
   1400035d1:	int3   
   1400035d2:	int3   
   1400035d3:	int3   
   1400035d4:	rex push rbp
   1400035d6:	push   rbx
   1400035d7:	push   rsi
   1400035d8:	push   rdi
   1400035d9:	push   r14
   1400035db:	mov    rbp,rsp
   1400035de:	sub    rsp,0x30
   1400035e2:	and    QWORD PTR [rdx],0x0
   1400035e6:	lea    rax,[rbp+0x40]
   1400035ea:	mov    r14,rdx
   1400035ed:	mov    QWORD PTR [rsp+0x20],rax
   1400035f2:	xor    edx,edx
   1400035f4:	lea    r9,[rip+0x44e5]        # 0x140007ae0
   1400035fb:	mov    ebx,ecx
   1400035fd:	lea    rcx,[rip+0x45bc]        # 0x140007bc0
   140003604:	lea    r8d,[rdx+0x1]
   140003608:	call   QWORD PTR [rip+0x3cf2]        # 0x140007300
   14000360e:	mov    esi,eax
   140003610:	test   eax,eax
   140003612:	js     0x14000377c
   140003618:	and    QWORD PTR [rbp+0x38],0x0
   14000361d:	test   ebx,ebx
   14000361f:	je     0x1400036ed
   140003625:	mov    rdi,QWORD PTR [rbp+0x40]
   140003629:	mov    rax,QWORD PTR [rdi]
   14000362c:	mov    rbx,QWORD PTR [rax]
   14000362f:	mov    rcx,rbx
   140003632:	call   QWORD PTR [rip+0x3cd8]        # 0x140007310
   140003638:	lea    r8,[rbp+0x38]
   14000363c:	mov    rcx,rdi
   14000363f:	lea    rdx,[rip+0x448a]        # 0x140007ad0
   140003646:	call   rbx
   140003648:	mov    esi,eax
   14000364a:	test   eax,eax
   14000364c:	js     0x140003740
   140003652:	mov    rdi,QWORD PTR [rbp+0x38]
   140003656:	mov    rax,QWORD PTR [rdi]
   140003659:	mov    rbx,QWORD PTR [rax+0x18]
   14000365d:	mov    rcx,rbx
   140003660:	call   QWORD PTR [rip+0x3caa]        # 0x140007310
   140003666:	lea    r9,[rbp+0x48]
   14000366a:	mov    edx,0x3a98
   14000366f:	lea    r8,[rip+0x43ca]        # 0x140007a40
   140003676:	mov    rcx,rdi
   140003679:	call   rbx
   14000367b:	mov    esi,eax
   14000367d:	cmp    eax,0x1
   140003680:	jne    0x1400036ed
   140003682:	mov    rax,QWORD PTR [rbp+0x48]
   140003686:	lea    r8,[rip+0x7073]        # 0x14000a700
   14000368d:	mov    rcx,QWORD PTR [rip+0x9074]        # 0x14000c708
   140003694:	mov    r9d,0x1000
   14000369a:	mov    QWORD PTR [rsp+0x28],rax
   14000369f:	xor    edx,edx
   1400036a1:	mov    DWORD PTR [rsp+0x20],0x14
   1400036a9:	call   0x140004030
   1400036ae:	mov    rcx,rax
   1400036b1:	call   QWORD PTR [rip+0x3be1]        # 0x140007298
   1400036b7:	lea    rcx,[rip+0x4312]        # 0x1400079d0
   1400036be:	call   QWORD PTR [rip+0x3bd4]        # 0x140007298
   1400036c4:	mov    rdi,QWORD PTR [rbp+0x38]
   1400036c8:	mov    rax,QWORD PTR [rdi]
   1400036cb:	mov    rbx,QWORD PTR [rax+0x18]
   1400036cf:	mov    rcx,rbx
   1400036d2:	call   QWORD PTR [rip+0x3c38]        # 0x140007310
   1400036d8:	lea    r9,[rbp+0x48]
   1400036dc:	or     edx,0xffffffff
   1400036df:	lea    r8,[rip+0x435a]        # 0x140007a40
   1400036e6:	mov    rcx,rdi
   1400036e9:	call   rbx
   1400036eb:	mov    esi,eax
   1400036ed:	test   esi,esi
   1400036ef:	js     0x140003740
   1400036f1:	mov    rdi,QWORD PTR [rbp+0x40]
   1400036f5:	mov    rax,QWORD PTR [rdi]
   1400036f8:	mov    rbx,QWORD PTR [rax+0x18]
   1400036fc:	mov    rcx,rbx
   1400036ff:	call   QWORD PTR [rip+0x3c0b]        # 0x140007310
   140003705:	xor    edx,edx
   140003707:	mov    rcx,rdi
   14000370a:	call   rbx
   14000370c:	mov    esi,eax
   14000370e:	test   eax,eax
   140003710:	js     0x140003722
   140003712:	mov    rdi,QWORD PTR [rbp+0x40]
   140003716:	mov    QWORD PTR [r14],rdi
   140003719:	mov    rax,QWORD PTR [rdi]
   14000371c:	mov    rbx,QWORD PTR [rax+0x8]
   140003720:	jmp    0x140003732
   140003722:	mov    rdi,QWORD PTR [rbp+0x38]
   140003726:	test   rdi,rdi
   140003729:	je     0x14000375e
   14000372b:	mov    rax,QWORD PTR [rdi]
   14000372e:	mov    rbx,QWORD PTR [rax+0x20]
   140003732:	mov    rcx,rbx
   140003735:	call   QWORD PTR [rip+0x3bd5]        # 0x140007310
   14000373b:	mov    rcx,rdi
   14000373e:	call   rbx
   140003740:	mov    rdi,QWORD PTR [rbp+0x38]
   140003744:	test   rdi,rdi
   140003747:	je     0x14000375e
   140003749:	mov    rax,QWORD PTR [rdi]
   14000374c:	mov    rbx,QWORD PTR [rax+0x10]
   140003750:	mov    rcx,rbx
   140003753:	call   QWORD PTR [rip+0x3bb7]        # 0x140007310
   140003759:	mov    rcx,rdi
   14000375c:	call   rbx
   14000375e:	mov    rdi,QWORD PTR [rbp+0x40]
   140003762:	test   rdi,rdi
   140003765:	je     0x14000377c
   140003767:	mov    rax,QWORD PTR [rdi]
   14000376a:	mov    rbx,QWORD PTR [rax+0x10]
   14000376e:	mov    rcx,rbx
   140003771:	call   QWORD PTR [rip+0x3b99]        # 0x140007310
   140003777:	mov    rcx,rdi
   14000377a:	call   rbx
   14000377c:	mov    eax,esi
   14000377e:	add    rsp,0x30
   140003782:	pop    r14
   140003784:	pop    rdi
   140003785:	pop    rsi
   140003786:	pop    rbx
   140003787:	pop    rbp
   140003788:	ret    
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    QWORD PTR [rsp+0x8],rbx
   140003795:	mov    QWORD PTR [rsp+0x18],rbp
   14000379a:	push   rsi
   14000379b:	push   rdi
   14000379c:	push   r14
   14000379e:	sub    rsp,0x20
   1400037a2:	mov    rax,QWORD PTR [rdx]
   1400037a5:	mov    ebp,ecx
   1400037a7:	mov    rsi,rdx
   1400037aa:	mov    rbx,QWORD PTR [rax+0x20]
   1400037ae:	mov    rcx,rbx
   1400037b1:	call   QWORD PTR [rip+0x3b59]        # 0x140007310
   1400037b7:	mov    rcx,rsi
   1400037ba:	call   rbx
   1400037bc:	mov    edi,eax
   1400037be:	test   eax,eax
   1400037c0:	js     0x140003827
   1400037c2:	test   ebp,ebp
   1400037c4:	je     0x140003827
   1400037c6:	mov    rax,QWORD PTR [rsi]
   1400037c9:	mov    rbx,QWORD PTR [rax]
   1400037cc:	mov    rcx,rbx
   1400037cf:	call   QWORD PTR [rip+0x3b3b]        # 0x140007310
   1400037d5:	lea    r8,[rsp+0x48]
   1400037da:	mov    rcx,rsi
   1400037dd:	lea    rdx,[rip+0x42ec]        # 0x140007ad0
   1400037e4:	call   rbx
   1400037e6:	mov    edi,eax
   1400037e8:	test   eax,eax
   1400037ea:	js     0x140003827
   1400037ec:	mov    rdi,QWORD PTR [rsp+0x48]
   1400037f1:	mov    rax,QWORD PTR [rdi]
   1400037f4:	mov    rbx,QWORD PTR [rax+0x20]
   1400037f8:	mov    rcx,rbx
   1400037fb:	call   QWORD PTR [rip+0x3b0f]        # 0x140007310
   140003801:	mov    rcx,rdi
   140003804:	call   rbx
   140003806:	mov    r14,QWORD PTR [rsp+0x48]
   14000380b:	mov    edi,eax
   14000380d:	test   r14,r14
   140003810:	je     0x140003827
   140003812:	mov    rax,QWORD PTR [r14]
   140003815:	mov    rbx,QWORD PTR [rax+0x10]
   140003819:	mov    rcx,rbx
   14000381c:	call   QWORD PTR [rip+0x3aee]        # 0x140007310
   140003822:	mov    rcx,r14
   140003825:	call   rbx
   140003827:	mov    rax,QWORD PTR [rsi]
   14000382a:	mov    rbx,QWORD PTR [rax+0x10]
   14000382e:	mov    rcx,rbx
   140003831:	call   QWORD PTR [rip+0x3ad9]        # 0x140007310
   140003837:	mov    rcx,rsi
   14000383a:	call   rbx
   14000383c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003841:	mov    eax,edi
   140003843:	mov    rbp,QWORD PTR [rsp+0x50]
   140003848:	add    rsp,0x20
   14000384c:	pop    r14
   14000384e:	pop    rdi
   14000384f:	pop    rsi
   140003850:	ret    
   140003851:	int3   
   140003852:	int3   
   140003853:	int3   
   140003854:	int3   
   140003855:	int3   
   140003856:	int3   
   140003857:	int3   
   140003858:	rex push rbx
   14000385a:	sub    rsp,0x30
   14000385e:	xor    edx,edx
   140003860:	lea    r8,[rip+0x6e99]        # 0x14000a700
   140003867:	mov    ebx,ecx
   140003869:	mov    r9d,0x1000
   14000386f:	test   ecx,ecx
   140003871:	js     0x1400038bd
   140003873:	mov    rcx,QWORD PTR [rip+0x8e8e]        # 0x14000c708
   14000387a:	mov    DWORD PTR [rsp+0x20],0x7
   140003882:	call   0x140004030
   140003887:	mov    rcx,rax
   14000388a:	call   QWORD PTR [rip+0x3a08]        # 0x140007298
   140003890:	cmp    ebx,0x4a020
   140003896:	jne    0x1400038de
   140003898:	mov    rcx,QWORD PTR [rip+0x8e69]        # 0x14000c708
   14000389f:	lea    r8,[rip+0x6e5a]        # 0x14000a700
   1400038a6:	mov    r9d,0x1000
   1400038ac:	mov    DWORD PTR [rsp+0x20],0x5
   1400038b4:	xor    edx,edx
   1400038b6:	call   0x140004030
   1400038bb:	jmp    0x1400038d5
   1400038bd:	mov    DWORD PTR [rsp+0x28],ecx
   1400038c1:	mov    rcx,QWORD PTR [rip+0x8e40]        # 0x14000c708
   1400038c8:	mov    DWORD PTR [rsp+0x20],0x6
   1400038d0:	call   0x140004030
   1400038d5:	mov    rcx,rax
   1400038d8:	call   QWORD PTR [rip+0x39ba]        # 0x140007298
   1400038de:	add    rsp,0x30
   1400038e2:	pop    rbx
   1400038e3:	ret    
   1400038e4:	int3   
   1400038e5:	int3   
   1400038e6:	int3   
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	mov    rax,rsp
   1400038ef:	mov    QWORD PTR [rax+0x8],rbx
   1400038f3:	mov    QWORD PTR [rax+0x10],rbp
   1400038f7:	mov    QWORD PTR [rax+0x18],rsi
   1400038fb:	mov    QWORD PTR [rax+0x20],rdi
   1400038ff:	push   r14
   140003901:	sub    rsp,0x20
   140003905:	xor    r14d,r14d
   140003908:	mov    rdi,rdx
   14000390b:	mov    rbp,rcx
   14000390e:	test   rcx,rcx
   140003911:	je     0x140003970
   140003913:	cmp    r14w,WORD PTR [rcx]
   140003917:	je     0x140003970
   140003919:	test   rdx,rdx
   14000391c:	je     0x140003994
   14000391e:	cmp    r14w,WORD PTR [rdx]
   140003922:	je     0x140003994
   140003924:	or     rsi,0xffffffffffffffff
   140003928:	inc    rsi
   14000392b:	cmp    WORD PTR [rdx+rsi*2],r14w
   140003930:	jne    0x140003928
   140003932:	jmp    0x140003962
   140003934:	cmp    rbx,rbp
   140003937:	je     0x140003947
   140003939:	movzx  ecx,WORD PTR [rbx-0x2]
   14000393d:	call   QWORD PTR [rip+0x38a5]        # 0x1400071e8
   140003943:	test   eax,eax
   140003945:	je     0x14000395b
   140003947:	movzx  ecx,WORD PTR [rbx+rsi*2]
   14000394b:	cmp    r14w,cx
   14000394f:	je     0x140003990
   140003951:	call   QWORD PTR [rip+0x3891]        # 0x1400071e8
   140003957:	test   eax,eax
   140003959:	jne    0x140003990
   14000395b:	lea    rcx,[rbx+rsi*2]
   14000395f:	mov    rdx,rdi
   140003962:	call   QWORD PTR [rip+0x3888]        # 0x1400071f0
   140003968:	mov    rbx,rax
   14000396b:	test   rax,rax
   14000396e:	jne    0x140003934
   140003970:	mov    eax,0x1
   140003975:	mov    rbx,QWORD PTR [rsp+0x30]
   14000397a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000397f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003984:	mov    rdi,QWORD PTR [rsp+0x48]
   140003989:	add    rsp,0x20
   14000398d:	pop    r14
   14000398f:	ret    
   140003990:	xor    eax,eax
   140003992:	jmp    0x140003975
   140003994:	mov    eax,0x80070057
   140003999:	jmp    0x140003975
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	int3   
   1400039a1:	int3   
   1400039a2:	int3   
   1400039a3:	int3   
   1400039a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400039a9:	mov    QWORD PTR [rsp+0x18],r8
   1400039ae:	push   rbp
   1400039af:	push   rsi
   1400039b0:	push   rdi
   1400039b1:	push   r12
   1400039b3:	push   r13
   1400039b5:	push   r14
   1400039b7:	push   r15
   1400039b9:	mov    rbp,rsp
   1400039bc:	sub    rsp,0x50
   1400039c0:	and    QWORD PTR [r8],0x0
   1400039c4:	mov    rsi,r8
   1400039c7:	mov    r12,rdx
   1400039ca:	mov    rdi,rcx
   1400039cd:	test   rcx,rcx
   1400039d0:	jne    0x1400039dc
   1400039d2:	mov    eax,0x80004003
   1400039d7:	jmp    0x140003c33
   1400039dc:	lea    rax,[rip+0x3edd]        # 0x1400078c0
   1400039e3:	test   rax,rax
   1400039e6:	je     0x140003c2e
   1400039ec:	mov    rax,QWORD PTR [rcx]
   1400039ef:	and    QWORD PTR [rbp-0x18],0x0
   1400039f4:	mov    rbx,QWORD PTR [rax+0x1a8]
   1400039fb:	mov    rcx,rbx
   1400039fe:	call   QWORD PTR [rip+0x390c]        # 0x140007310
   140003a04:	lea    rdx,[rbp-0x18]
   140003a08:	mov    rcx,rdi
   140003a0b:	call   rbx
   140003a0d:	mov    edi,eax
   140003a0f:	test   eax,eax
   140003a11:	js     0x140003c0c
   140003a17:	mov    rdi,QWORD PTR [rbp-0x18]
   140003a1b:	mov    rax,QWORD PTR [rdi]
   140003a1e:	mov    rbx,QWORD PTR [rax+0x40]
   140003a22:	mov    rcx,rbx
   140003a25:	call   QWORD PTR [rip+0x38e5]        # 0x140007310
   140003a2b:	lea    rdx,[rbp+0x58]
   140003a2f:	mov    rcx,rdi
   140003a32:	call   rbx
   140003a34:	xor    ebx,ebx
   140003a36:	mov    edi,eax
   140003a38:	test   eax,eax
   140003a3a:	js     0x140003c0c
   140003a40:	test   r12,r12
   140003a43:	je     0x140003a4f
   140003a45:	mov    r15b,0x1
   140003a48:	cmp    WORD PTR [r12],bx
   140003a4d:	jne    0x140003a52
   140003a4f:	mov    r15b,bl
   140003a52:	mov    r13b,bl
   140003a55:	mov    r14d,ebx
   140003a58:	cmp    r14d,DWORD PTR [rbp+0x58]
   140003a5c:	jge    0x140003c0a
   140003a62:	mov    rdi,QWORD PTR [rbp-0x18]
   140003a66:	mov    QWORD PTR [rbp-0x20],rbx
   140003a6a:	mov    QWORD PTR [rbp-0x30],rbx
   140003a6e:	mov    QWORD PTR [rbp-0x28],rbx
   140003a72:	mov    QWORD PTR [rbp-0x10],rbx
   140003a76:	mov    rax,QWORD PTR [rdi]
   140003a79:	mov    rbx,QWORD PTR [rax+0x38]
   140003a7d:	mov    rcx,rbx
   140003a80:	call   QWORD PTR [rip+0x388a]        # 0x140007310
   140003a86:	lea    r8,[rbp-0x20]
   140003a8a:	mov    edx,r14d
   140003a8d:	mov    rcx,rdi
   140003a90:	call   rbx
   140003a92:	xor    ebx,ebx
   140003a94:	test   eax,eax
   140003a96:	js     0x140003ae0
   140003a98:	mov    rdi,QWORD PTR [rbp-0x20]
   140003a9c:	mov    rax,QWORD PTR [rdi]
   140003a9f:	mov    rbx,QWORD PTR [rax]
   140003aa2:	mov    rcx,rbx
   140003aa5:	call   QWORD PTR [rip+0x3865]        # 0x140007310
   140003aab:	lea    r8,[rbp-0x30]
   140003aaf:	mov    rcx,rdi
   140003ab2:	lea    rdx,[rip+0x4087]        # 0x140007b40
   140003ab9:	call   rbx
   140003abb:	xor    ebx,ebx
   140003abd:	test   eax,eax
   140003abf:	js     0x140003ae0
   140003ac1:	mov    rdi,QWORD PTR [rbp-0x30]
   140003ac5:	mov    rax,QWORD PTR [rdi]
   140003ac8:	mov    rbx,QWORD PTR [rax+0x58]
   140003acc:	mov    rcx,rbx
   140003acf:	call   QWORD PTR [rip+0x383b]        # 0x140007310
   140003ad5:	lea    rdx,[rbp-0x28]
   140003ad9:	mov    rcx,rdi
   140003adc:	call   rbx
   140003ade:	xor    ebx,ebx
   140003ae0:	mov    WORD PTR [rbp+0x40],bx
   140003ae4:	test   eax,eax
   140003ae6:	js     0x140003b8c
   140003aec:	mov    rdi,QWORD PTR [rbp-0x30]
   140003af0:	mov    rax,QWORD PTR [rdi]
   140003af3:	mov    rbx,QWORD PTR [rax+0x78]
   140003af7:	mov    rcx,rbx
   140003afa:	call   QWORD PTR [rip+0x3810]        # 0x140007310
   140003b00:	lea    rdx,[rbp+0x40]
   140003b04:	mov    rcx,rdi
   140003b07:	call   rbx
   140003b09:	xor    ebx,ebx
   140003b0b:	test   eax,eax
   140003b0d:	js     0x140003b8c
   140003b0f:	test   r15b,r15b
   140003b12:	je     0x140003b33
   140003b14:	mov    rdi,QWORD PTR [rbp-0x30]
   140003b18:	mov    rax,QWORD PTR [rdi]
   140003b1b:	mov    rbx,QWORD PTR [rax+0x68]
   140003b1f:	mov    rcx,rbx
   140003b22:	call   QWORD PTR [rip+0x37e8]        # 0x140007310
   140003b28:	lea    rdx,[rbp-0x10]
   140003b2c:	mov    rcx,rdi
   140003b2f:	call   rbx
   140003b31:	xor    ebx,ebx
   140003b33:	test   eax,eax
   140003b35:	js     0x140003b8c
   140003b37:	or     eax,0xffffffff
   140003b3a:	cmp    ax,WORD PTR [rbp+0x40]
   140003b3e:	jne    0x140003b8c
   140003b40:	mov    rcx,QWORD PTR [rbp-0x28]
   140003b44:	call   QWORD PTR [rip+0x35ee]        # 0x140007138
   140003b4a:	test   eax,eax
   140003b4c:	je     0x140003b8c
   140003b4e:	mov    rcx,QWORD PTR [rbp-0x28]
   140003b52:	lea    rdx,[rip+0x3d67]        # 0x1400078c0
   140003b59:	call   QWORD PTR [rip+0x3691]        # 0x1400071f0
   140003b5f:	test   rax,rax
   140003b62:	je     0x140003b8c
   140003b64:	test   r15b,r15b
   140003b67:	je     0x140003b79
   140003b69:	mov    rcx,QWORD PTR [rbp-0x10]
   140003b6d:	mov    rdx,r12
   140003b70:	call   0x1400038ec
   140003b75:	test   eax,eax
   140003b77:	jne    0x140003b8c
   140003b79:	mov    rax,QWORD PTR [rbp-0x30]
   140003b7d:	mov    rdi,rbx
   140003b80:	mov    QWORD PTR [rsi],rax
   140003b83:	mov    r13b,0x1
   140003b86:	mov    QWORD PTR [rbp-0x30],rbx
   140003b8a:	jmp    0x140003b90
   140003b8c:	mov    rdi,QWORD PTR [rbp-0x30]
   140003b90:	mov    rsi,QWORD PTR [rbp-0x20]
   140003b94:	test   rsi,rsi
   140003b97:	je     0x140003bb8
   140003b99:	mov    rax,QWORD PTR [rsi]
   140003b9c:	mov    rbx,QWORD PTR [rax+0x10]
   140003ba0:	mov    rcx,rbx
   140003ba3:	call   QWORD PTR [rip+0x3767]        # 0x140007310
   140003ba9:	mov    rcx,rsi
   140003bac:	call   rbx
   140003bae:	mov    rdi,QWORD PTR [rbp-0x30]
   140003bb2:	xor    ebx,ebx
   140003bb4:	mov    QWORD PTR [rbp-0x20],rbx
   140003bb8:	test   rdi,rdi
   140003bbb:	je     0x140003bd8
   140003bbd:	mov    rax,QWORD PTR [rdi]
   140003bc0:	mov    rbx,QWORD PTR [rax+0x10]
   140003bc4:	mov    rcx,rbx
   140003bc7:	call   QWORD PTR [rip+0x3743]        # 0x140007310
   140003bcd:	mov    rcx,rdi
   140003bd0:	call   rbx
   140003bd2:	xor    ebx,ebx
   140003bd4:	mov    QWORD PTR [rbp-0x30],rbx
   140003bd8:	mov    rcx,QWORD PTR [rbp-0x28]
   140003bdc:	test   rcx,rcx
   140003bdf:	je     0x140003beb
   140003be1:	call   QWORD PTR [rip+0x3559]        # 0x140007140
   140003be7:	mov    QWORD PTR [rbp-0x28],rbx
   140003beb:	mov    rcx,QWORD PTR [rbp-0x10]
   140003bef:	test   rcx,rcx
   140003bf2:	je     0x140003bfa
   140003bf4:	call   QWORD PTR [rip+0x3546]        # 0x140007140
   140003bfa:	mov    rsi,QWORD PTR [rbp+0x50]
   140003bfe:	inc    r14d
   140003c01:	test   r13b,r13b
   140003c04:	je     0x140003a58
   140003c0a:	mov    edi,ebx
   140003c0c:	mov    rsi,QWORD PTR [rbp-0x18]
   140003c10:	test   rsi,rsi
   140003c13:	je     0x140003c2a
   140003c15:	mov    rax,QWORD PTR [rsi]
   140003c18:	mov    rbx,QWORD PTR [rax+0x10]
   140003c1c:	mov    rcx,rbx
   140003c1f:	call   QWORD PTR [rip+0x36eb]        # 0x140007310
   140003c25:	mov    rcx,rsi
   140003c28:	call   rbx
   140003c2a:	mov    eax,edi
   140003c2c:	jmp    0x140003c33
   140003c2e:	mov    eax,0x80070057
   140003c33:	mov    rbx,QWORD PTR [rsp+0x98]
   140003c3b:	add    rsp,0x50
   140003c3f:	pop    r15
   140003c41:	pop    r14
   140003c43:	pop    r13
   140003c45:	pop    r12
   140003c47:	pop    rdi
   140003c48:	pop    rsi
   140003c49:	pop    rbp
   140003c4a:	ret    
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	int3   
   140003c51:	int3   
   140003c52:	int3   
   140003c53:	int3   
   140003c54:	rex push rbp
   140003c56:	push   rbx
   140003c57:	push   rsi
   140003c58:	push   rdi
   140003c59:	push   r12
   140003c5b:	push   r14
   140003c5d:	push   r15
   140003c5f:	mov    rbp,rsp
   140003c62:	sub    rsp,0x30
   140003c66:	xor    r12d,r12d
   140003c69:	lea    rax,[rbp+0x58]
   140003c6d:	mov    QWORD PTR [rdx],r12
   140003c70:	mov    r15,rdx
   140003c73:	mov    QWORD PTR [rbp+0x50],r12
   140003c77:	mov    rdi,rcx
   140003c7a:	mov    QWORD PTR [rbp+0x48],r12
   140003c7e:	test   rax,rax
   140003c81:	jne    0x140003c8d
   140003c83:	mov    edi,0x80004003
   140003c88:	jmp    0x140003dfe
   140003c8d:	mov    rsi,r12
   140003c90:	test   rcx,rcx
   140003c93:	je     0x140003d33
   140003c99:	cmp    r12w,WORD PTR [rcx]
   140003c9d:	je     0x140003d33
   140003ca3:	xor    r8d,r8d
   140003ca6:	xor    edx,edx
   140003ca8:	call   QWORD PTR [rip+0x33c2]        # 0x140007070
   140003cae:	mov    r14d,eax
   140003cb1:	test   eax,eax
   140003cb3:	jne    0x140003ccb
   140003cb5:	call   QWORD PTR [rip+0x3385]        # 0x140007040
   140003cbb:	movzx  edi,ax
   140003cbe:	or     edi,0x80070000
   140003cc4:	test   eax,eax
   140003cc6:	cmovle edi,eax
   140003cc9:	jmp    0x140003d38
   140003ccb:	lea    edx,[rax-0x1]
   140003cce:	xor    ecx,ecx
   140003cd0:	call   QWORD PTR [rip+0x345a]        # 0x140007130
   140003cd6:	mov    rbx,rax
   140003cd9:	test   rax,rax
   140003cdc:	jne    0x140003ce5
   140003cde:	mov    edi,0x8007000e
   140003ce3:	jmp    0x140003d38
   140003ce5:	mov    r8d,r14d
   140003ce8:	mov    rdx,rax
   140003ceb:	mov    rcx,rdi
   140003cee:	call   QWORD PTR [rip+0x337c]        # 0x140007070
   140003cf4:	test   eax,eax
   140003cf6:	jne    0x140003d0e
   140003cf8:	call   QWORD PTR [rip+0x3342]        # 0x140007040
   140003cfe:	movzx  edi,ax
   140003d01:	or     edi,0x80070000
   140003d07:	test   eax,eax
   140003d09:	cmovle edi,eax
   140003d0c:	jmp    0x140003d23
   140003d0e:	cmp    eax,r14d
   140003d11:	jbe    0x140003d1a
   140003d13:	mov    edi,0x8000ffff
   140003d18:	jmp    0x140003d23
   140003d1a:	mov    rsi,rbx
   140003d1d:	mov    edi,r12d
   140003d20:	mov    rbx,r12
   140003d23:	test   rbx,rbx
   140003d26:	je     0x140003d38
   140003d28:	mov    rcx,rbx
   140003d2b:	call   QWORD PTR [rip+0x340f]        # 0x140007140
   140003d31:	jmp    0x140003d38
   140003d33:	mov    edi,0x80070057
   140003d38:	test   edi,edi
   140003d3a:	js     0x140003dac
   140003d3c:	mov    edx,0x25
   140003d41:	mov    rcx,rsi
   140003d44:	call   QWORD PTR [rip+0x351e]        # 0x140007268
   140003d4a:	test   rax,rax
   140003d4d:	jne    0x140003da9
   140003d4f:	xor    edx,edx
   140003d51:	lea    rax,[rbp+0x50]
   140003d55:	lea    r9,[rip+0x3e04]        # 0x140007b60
   140003d5c:	mov    QWORD PTR [rsp+0x20],rax
   140003d61:	lea    rcx,[rip+0x3de8]        # 0x140007b50
   140003d68:	lea    r8d,[rdx+0x1]
   140003d6c:	call   QWORD PTR [rip+0x358e]        # 0x140007300
   140003d72:	mov    edi,eax
   140003d74:	test   eax,eax
   140003d76:	js     0x140003dac
   140003d78:	lea    rax,[rbp+0x48]
   140003d7c:	test   rax,rax
   140003d7f:	jne    0x140003d88
   140003d81:	mov    edi,0x80004003
   140003d86:	jmp    0x140003dac
   140003d88:	mov    rcx,QWORD PTR [rbp+0x50]
   140003d8c:	lea    r8,[rbp+0x48]
   140003d90:	mov    rdx,rsi
   140003d93:	call   0x140003e18
   140003d98:	mov    edi,eax
   140003d9a:	test   eax,eax
   140003d9c:	js     0x140003dac
   140003d9e:	mov    rax,QWORD PTR [rbp+0x48]
   140003da2:	mov    QWORD PTR [r15],rax
   140003da5:	mov    QWORD PTR [rbp+0x48],r12
   140003da9:	mov    edi,r12d
   140003dac:	mov    r14,QWORD PTR [rbp+0x50]
   140003db0:	test   r14,r14
   140003db3:	je     0x140003dce
   140003db5:	mov    rax,QWORD PTR [r14]
   140003db8:	mov    rbx,QWORD PTR [rax+0x10]
   140003dbc:	mov    rcx,rbx
   140003dbf:	call   QWORD PTR [rip+0x354b]        # 0x140007310
   140003dc5:	mov    rcx,r14
   140003dc8:	call   rbx
   140003dca:	mov    QWORD PTR [rbp+0x50],r12
   140003dce:	mov    r14,QWORD PTR [rbp+0x48]
   140003dd2:	test   r14,r14
   140003dd5:	je     0x140003df0
   140003dd7:	mov    rax,QWORD PTR [r14]
   140003dda:	mov    rbx,QWORD PTR [rax+0x10]
   140003dde:	mov    rcx,rbx
   140003de1:	call   QWORD PTR [rip+0x3529]        # 0x140007310
   140003de7:	mov    rcx,r14
   140003dea:	call   rbx
   140003dec:	mov    QWORD PTR [rbp+0x48],r12
   140003df0:	test   rsi,rsi
   140003df3:	je     0x140003dfe
   140003df5:	mov    rcx,rsi
   140003df8:	call   QWORD PTR [rip+0x3342]        # 0x140007140
   140003dfe:	mov    eax,edi
   140003e00:	add    rsp,0x30
   140003e04:	pop    r15
   140003e06:	pop    r14
   140003e08:	pop    r12
   140003e0a:	pop    rdi
   140003e0b:	pop    rsi
   140003e0c:	pop    rbx
   140003e0d:	pop    rbp
   140003e0e:	ret    
   140003e0f:	int3   
   140003e10:	int3   
   140003e11:	int3   
   140003e12:	int3   
   140003e13:	int3   
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	mov    QWORD PTR [rsp+0x10],rbx
   140003e1d:	mov    QWORD PTR [rsp+0x20],rsi
   140003e22:	push   rbp
   140003e23:	push   rdi
   140003e24:	push   r14
   140003e26:	mov    rbp,rsp
   140003e29:	sub    rsp,0x60
   140003e2d:	xor    r14d,r14d
   140003e30:	mov    rsi,r8
   140003e33:	mov    QWORD PTR [r8],r14
   140003e36:	mov    rbx,rdx
   140003e39:	test   rcx,rcx
   140003e3c:	jne    0x140003e48
   140003e3e:	mov    eax,0x80004003
   140003e43:	jmp    0x140003f24
   140003e48:	lea    rax,[rbp+0x20]
   140003e4c:	mov    QWORD PTR [rbp+0x20],r14
   140003e50:	mov    QWORD PTR [rbp+0x30],r14
   140003e54:	test   rax,rax
   140003e57:	jne    0x140003e63
   140003e59:	mov    edi,0x80004003
   140003e5e:	jmp    0x140003f22
   140003e63:	lea    rdx,[rbp+0x20]
   140003e67:	call   0x140003f40
   140003e6c:	mov    edi,eax
   140003e6e:	test   eax,eax
   140003e70:	js     0x140003ee2
   140003e72:	movsd  xmm1,QWORD PTR [rbp-0x30]
   140003e77:	mov    eax,0x8
   140003e7c:	mov    rdi,QWORD PTR [rbp+0x20]
   140003e80:	mov    WORD PTR [rbp-0x40],ax
   140003e84:	mov    QWORD PTR [rbp-0x38],rbx
   140003e88:	movups xmm0,XMMWORD PTR [rbp-0x40]
   140003e8c:	mov    rax,QWORD PTR [rdi]
   140003e8f:	movsd  QWORD PTR [rbp-0x10],xmm1
   140003e94:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140003e98:	mov    rbx,QWORD PTR [rax+0x38]
   140003e9c:	mov    rcx,rbx
   140003e9f:	call   QWORD PTR [rip+0x346b]        # 0x140007310
   140003ea5:	lea    r8,[rbp+0x30]
   140003ea9:	mov    rcx,rdi
   140003eac:	lea    rdx,[rbp-0x20]
   140003eb0:	call   rbx
   140003eb2:	mov    edi,eax
   140003eb4:	test   eax,eax
   140003eb6:	js     0x140003ee2
   140003eb8:	mov    rdi,QWORD PTR [rbp+0x30]
   140003ebc:	mov    rax,QWORD PTR [rdi]
   140003ebf:	mov    rbx,QWORD PTR [rax]
   140003ec2:	mov    rcx,rbx
   140003ec5:	call   QWORD PTR [rip+0x3445]        # 0x140007310
   140003ecb:	mov    r8,rsi
   140003ece:	lea    rdx,[rip+0x3c5b]        # 0x140007b30
   140003ed5:	mov    rcx,rdi
   140003ed8:	call   rbx
   140003eda:	test   eax,eax
   140003edc:	mov    edi,eax
   140003ede:	cmovns edi,r14d
   140003ee2:	mov    rsi,QWORD PTR [rbp+0x20]
   140003ee6:	test   rsi,rsi
   140003ee9:	je     0x140003f04
   140003eeb:	mov    rax,QWORD PTR [rsi]
   140003eee:	mov    rbx,QWORD PTR [rax+0x10]
   140003ef2:	mov    rcx,rbx
   140003ef5:	call   QWORD PTR [rip+0x3415]        # 0x140007310
   140003efb:	mov    rcx,rsi
   140003efe:	call   rbx
   140003f00:	mov    QWORD PTR [rbp+0x20],r14
   140003f04:	mov    rsi,QWORD PTR [rbp+0x30]
   140003f08:	test   rsi,rsi
   140003f0b:	je     0x140003f22
   140003f0d:	mov    rax,QWORD PTR [rsi]
   140003f10:	mov    rbx,QWORD PTR [rax+0x10]
   140003f14:	mov    rcx,rbx
   140003f17:	call   QWORD PTR [rip+0x33f3]        # 0x140007310
   140003f1d:	mov    rcx,rsi
   140003f20:	call   rbx
   140003f22:	mov    eax,edi
   140003f24:	lea    r11,[rsp+0x60]
   140003f29:	mov    rbx,QWORD PTR [r11+0x28]
   140003f2d:	mov    rsi,QWORD PTR [r11+0x38]
   140003f31:	mov    rsp,r11
   140003f34:	pop    r14
   140003f36:	pop    rdi
   140003f37:	pop    rbp
   140003f38:	ret    
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    QWORD PTR [rsp+0x10],rbx
   140003f45:	mov    QWORD PTR [rsp+0x18],rsi
   140003f4a:	mov    QWORD PTR [rsp+0x20],rdi
   140003f4f:	push   rbp
   140003f50:	push   r14
   140003f52:	push   r15
   140003f54:	mov    rbp,rsp
   140003f57:	sub    rsp,0x60
   140003f5b:	xor    r15d,r15d
   140003f5e:	mov    r14,rdx
   140003f61:	mov    QWORD PTR [rdx],r15
   140003f64:	mov    rdi,rcx
   140003f67:	test   rcx,rcx
   140003f6a:	jne    0x140003f76
   140003f6c:	mov    eax,0x80004003
   140003f71:	jmp    0x14000400e
   140003f76:	movsd  xmm1,QWORD PTR [rbp-0x30]
   140003f7b:	mov    eax,0xa
   140003f80:	mov    WORD PTR [rbp-0x40],ax
   140003f84:	mov    rax,QWORD PTR [rcx]
   140003f87:	mov    DWORD PTR [rbp-0x38],0x80020004
   140003f8e:	movups xmm0,XMMWORD PTR [rbp-0x40]
   140003f92:	mov    QWORD PTR [rbp+0x20],r15
   140003f96:	mov    rbx,QWORD PTR [rax+0x38]
   140003f9a:	mov    rcx,rbx
   140003f9d:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140003fa1:	movsd  QWORD PTR [rbp-0x10],xmm1
   140003fa6:	call   QWORD PTR [rip+0x3364]        # 0x140007310
   140003fac:	lea    r9,[rbp+0x20]
   140003fb0:	mov    edx,0x1e
   140003fb5:	lea    r8,[rbp-0x20]
   140003fb9:	mov    rcx,rdi
   140003fbc:	call   rbx
   140003fbe:	mov    esi,eax
   140003fc0:	test   eax,eax
   140003fc2:	js     0x140003fee
   140003fc4:	mov    rdi,QWORD PTR [rbp+0x20]
   140003fc8:	mov    rax,QWORD PTR [rdi]
   140003fcb:	mov    rbx,QWORD PTR [rax]
   140003fce:	mov    rcx,rbx
   140003fd1:	call   QWORD PTR [rip+0x3339]        # 0x140007310
   140003fd7:	mov    r8,r14
   140003fda:	lea    rdx,[rip+0x3b3f]        # 0x140007b20
   140003fe1:	mov    rcx,rdi
   140003fe4:	call   rbx
   140003fe6:	test   eax,eax
   140003fe8:	mov    esi,eax
   140003fea:	cmovns esi,r15d
   140003fee:	mov    rdi,QWORD PTR [rbp+0x20]
   140003ff2:	test   rdi,rdi
   140003ff5:	je     0x14000400c
   140003ff7:	mov    rax,QWORD PTR [rdi]
   140003ffa:	mov    rbx,QWORD PTR [rax+0x10]
   140003ffe:	mov    rcx,rbx
   140004001:	call   QWORD PTR [rip+0x3309]        # 0x140007310
   140004007:	mov    rcx,rdi
   14000400a:	call   rbx
   14000400c:	mov    eax,esi
   14000400e:	lea    r11,[rsp+0x60]
   140004013:	mov    rbx,QWORD PTR [r11+0x28]
   140004017:	mov    rsi,QWORD PTR [r11+0x30]
   14000401b:	mov    rdi,QWORD PTR [r11+0x38]
   14000401f:	mov    rsp,r11
   140004022:	pop    r15
   140004024:	pop    r14
   140004026:	pop    rbp
   140004027:	ret    
   140004028:	int3   
   140004029:	int3   
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	int3   
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	mov    r11,rsp
   140004033:	push   rbx
   140004034:	sub    rsp,0x50
   140004038:	mov    rax,rcx
   14000403b:	mov    rbx,r8
   14000403e:	lea    rcx,[r11+0x30]
   140004042:	mov    QWORD PTR [r11-0x18],rcx
   140004046:	xor    ecx,ecx
   140004048:	test   r8,r8
   14000404b:	je     0x140004083
   14000404d:	test   r9d,r9d
   140004050:	je     0x140004083
   140004052:	neg    edx
   140004054:	mov    WORD PTR [r8],cx
   140004058:	mov    r8d,DWORD PTR [r11+0x28]
   14000405c:	mov    edx,0x800
   140004061:	sbb    ecx,ecx
   140004063:	and    ecx,edx
   140004065:	add    ecx,edx
   140004067:	lea    rdx,[r11-0x18]
   14000406b:	mov    QWORD PTR [r11-0x28],rdx
   14000406f:	mov    rdx,rax
   140004072:	mov    DWORD PTR [r11-0x30],r9d
   140004076:	xor    r9d,r9d
   140004079:	mov    QWORD PTR [r11-0x38],rbx
   14000407d:	call   QWORD PTR [rip+0x2f95]        # 0x140007018
   140004083:	mov    rax,rbx
   140004086:	add    rsp,0x50
   14000408a:	pop    rbx
   14000408b:	ret    
   14000408c:	int3   
   14000408d:	int3   
   14000408e:	int3   
   14000408f:	int3   
   140004090:	int3   
   140004091:	int3   
   140004092:	int3   
   140004093:	int3   
   140004094:	mov    QWORD PTR [rsp+0x8],rbx
   140004099:	push   rdi
   14000409a:	sub    rsp,0x80
   1400040a1:	mov    rdi,rdx
   1400040a4:	mov    r8d,0x30
   1400040aa:	lea    rdx,[rsp+0x20]
   1400040af:	mov    rbx,rcx
   1400040b2:	call   QWORD PTR [rip+0x2fd0]        # 0x140007088
   1400040b8:	test   rax,rax
   1400040bb:	jne    0x1400040c2
   1400040bd:	lea    ecx,[rax+0x19]
   1400040c0:	int    0x29
   1400040c2:	test   BYTE PTR [rsp+0x44],0x44
   1400040c7:	je     0x14000411a
   1400040c9:	lea    rcx,[rsp+0x50]
   1400040ce:	call   QWORD PTR [rip+0x3034]        # 0x140007108
   1400040d4:	mov    r8d,DWORD PTR [rsp+0x54]
   1400040d9:	xor    edx,edx
   1400040db:	lea    eax,[r8-0x1]
   1400040df:	mov    ecx,eax
   1400040e1:	and    eax,ebx
   1400040e3:	and    ecx,edi
   1400040e5:	add    eax,ecx
   1400040e7:	dec    rax
   1400040ea:	add    rax,r8
   1400040ed:	div    r8
   1400040f0:	xor    edx,edx
   1400040f2:	mov    rcx,rax
   1400040f5:	mov    rax,rdi
   1400040f8:	div    r8
   1400040fb:	add    ecx,eax
   1400040fd:	lea    rax,[r8-0x1]
   140004101:	not    rax
   140004104:	mov    edx,ecx
   140004106:	and    rax,rbx
   140004109:	test   ecx,ecx
   14000410b:	je     0x14000411a
   14000410d:	lock or DWORD PTR [rax],0x0
   140004111:	add    rax,r8
   140004114:	sub    rdx,0x1
   140004118:	jne    0x14000410d
   14000411a:	mov    rbx,QWORD PTR [rsp+0x90]
   140004122:	add    rsp,0x80
   140004129:	pop    rdi
   14000412a:	ret    
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	int3   
   140004131:	int3   
   140004132:	int3   
   140004133:	int3   
   140004134:	mov    QWORD PTR [rsp+0x8],rbx
   140004139:	mov    QWORD PTR [rsp+0x10],rbp
   14000413e:	push   rsi
   14000413f:	push   rdi
   140004140:	push   r14
   140004142:	sub    rsp,0x20
   140004146:	movsxd r8,DWORD PTR [rip+0xffffffffffffbeef]        # 0x14000003c
   14000414d:	lea    r14,[rip+0xffffffffffffbeac]        # 0x140000000
   140004154:	add    r8,r14
   140004157:	mov    rsi,rdx
   14000415a:	mov    ebp,ecx
   14000415c:	cmp    DWORD PTR [r8+0x84],0xd
   140004164:	jbe    0x14000421a
   14000416a:	mov    r9d,DWORD PTR [r8+0xf0]
   140004171:	test   r9d,r9d
   140004174:	je     0x14000421a
   14000417a:	movzx  eax,WORD PTR [r8+0x14]
   14000417f:	lea    rdx,[r8+0x18]
   140004183:	mov    r10d,DWORD PTR [r9+r14*1+0xc]
   140004188:	add    rdx,rax
   14000418b:	movzx  r11d,WORD PTR [r8+0x6]
   140004190:	xor    r9d,r9d
   140004193:	test   r11d,r11d
   140004196:	je     0x1400041b6
   140004198:	mov    ecx,DWORD PTR [rdx+0xc]
   14000419b:	cmp    r10d,ecx
   14000419e:	jb     0x1400041aa
   1400041a0:	mov    eax,DWORD PTR [rdx+0x8]
   1400041a3:	add    ecx,eax
   1400041a5:	cmp    r10d,ecx
   1400041a8:	jb     0x14000420d
   1400041aa:	inc    r9d
   1400041ad:	add    rdx,0x28
   1400041b1:	cmp    r9d,r11d
   1400041b4:	jb     0x140004198
   1400041b6:	mov    eax,DWORD PTR [rsp+0x50]
   1400041ba:	xor    ebx,ebx
   1400041bc:	mov    edi,DWORD PTR [rsp+0x50]
   1400041c0:	test   rbx,rbx
   1400041c3:	je     0x14000421a
   1400041c5:	cmp    DWORD PTR [rip+0x859c],0x0        # 0x14000c768
   1400041cc:	mov    r14d,0x19
   1400041d2:	jne    0x1400041f1
   1400041d4:	mov    DWORD PTR [rip+0x858a],0x1        # 0x14000c768
   1400041de:	test   eax,eax
   1400041e0:	js     0x1400041e7
   1400041e2:	mov    ecx,r14d
   1400041e5:	int    0x29
   1400041e7:	mov    edx,edi
   1400041e9:	mov    rcx,rbx
   1400041ec:	call   0x140004094
   1400041f1:	mov    edx,edi
   1400041f3:	mov    r9,rsi
   1400041f6:	mov    r8d,ebp
   1400041f9:	mov    rcx,rbx
   1400041fc:	call   QWORD PTR [rip+0x2f16]        # 0x140007118
   140004202:	test   eax,eax
   140004204:	jne    0x140004220
   140004206:	mov    rcx,r14
   140004209:	int    0x29
   14000420b:	jmp    0x140004220
   14000420d:	mov    ebx,DWORD PTR [rdx+0xc]
   140004210:	mov    edi,eax
   140004212:	mov    eax,DWORD PTR [rdx+0x24]
   140004215:	add    rbx,r14
   140004218:	jmp    0x1400041c0
   14000421a:	mov    DWORD PTR [rsi],0x4
   140004220:	mov    rbx,QWORD PTR [rsp+0x40]
   140004225:	mov    rbp,QWORD PTR [rsp+0x48]
   14000422a:	add    rsp,0x20
   14000422e:	pop    r14
   140004230:	pop    rdi
   140004231:	pop    rsi
   140004232:	ret    
   140004233:	int3   
   140004234:	int3   
   140004235:	int3   
   140004236:	int3   
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	mov    QWORD PTR [rsp+0x10],rdx
   140004245:	push   rbp
   140004246:	push   rbx
   140004247:	push   rsi
   140004248:	push   rdi
   140004249:	push   r12
   14000424b:	push   r13
   14000424d:	push   r15
   14000424f:	lea    rbp,[rsp-0x27]
   140004254:	sub    rsp,0xa0
   14000425b:	test   DWORD PTR [rip+0x33cb],0x1000        # 0x140007630
   140004265:	lea    rbx,[rip+0x84c4]        # 0x14000c730
   14000426c:	mov    rdi,rdx
   14000426f:	mov    r15,rcx
   140004272:	mov    esi,0x1
   140004277:	je     0x1400042ac
   140004279:	mov    rcx,rbx
   14000427c:	call   QWORD PTR [rip+0x2e9e]        # 0x140007120
   140004282:	mov    eax,DWORD PTR [rip+0x84e4]        # 0x14000c76c
   140004288:	add    eax,esi
   14000428a:	mov    DWORD PTR [rip+0x84dc],eax        # 0x14000c76c
   140004290:	cmp    eax,esi
   140004292:	jne    0x1400042a3
   140004294:	lea    rdx,[rip+0x84d5]        # 0x14000c770
   14000429b:	lea    ecx,[rsi+0x3]
   14000429e:	call   0x140004134
   1400042a3:	mov    rcx,rbx
   1400042a6:	call   QWORD PTR [rip+0x2dcc]        # 0x140007078
   1400042ac:	and    QWORD PTR [rbp-0x31],0x0
   1400042b1:	lea    r10,[rip+0xffffffffffffbd48]        # 0x140000000
   1400042b8:	mov    r9d,DWORD PTR [r15+0x14]
   1400042bc:	mov    ecx,DWORD PTR [r15]
   1400042bf:	add    r9,r10
   1400042c2:	mov    eax,DWORD PTR [r15+0x4]
   1400042c6:	and    ecx,esi
   1400042c8:	mov    r12d,DWORD PTR [r15+0x8]
   1400042cc:	add    rax,r10
   1400042cf:	mov    r8d,DWORD PTR [r15+0xc]
   1400042d3:	add    r12,r10
   1400042d6:	mov    edx,DWORD PTR [r15+0x10]
   1400042da:	add    r8,r10
   1400042dd:	and    DWORD PTR [rbp-0x39],0x0
   1400042e1:	add    rdx,r10
   1400042e4:	and    DWORD PTR [rbp-0x31],0x0
   1400042e8:	and    QWORD PTR [rbp-0x29],0x0
   1400042ed:	and    QWORD PTR [rbp-0x21],0x0
   1400042f2:	and    DWORD PTR [rbp-0x19],0x0
   1400042f6:	mov    QWORD PTR [rbp-0x1],r9
   1400042fa:	mov    r9d,DWORD PTR [r15+0x1c]
   1400042fe:	mov    DWORD PTR [rbp+0x67],r9d
   140004302:	mov    DWORD PTR [rbp-0x59],0x48
   140004309:	mov    QWORD PTR [rbp-0x51],r15
   14000430d:	mov    QWORD PTR [rbp-0x49],rdi
   140004311:	mov    QWORD PTR [rbp-0x41],rax
   140004315:	test   cl,cl
   140004317:	jne    0x140004372
   140004319:	test   DWORD PTR [rip+0x330d],0x1000        # 0x140007630
   140004323:	lea    rax,[rbp-0x59]
   140004327:	mov    QWORD PTR [rbp+0x7],rax
   14000432b:	je     0x140004357
   14000432d:	mov    rcx,rbx
   140004330:	call   QWORD PTR [rip+0x2dea]        # 0x140007120
   140004336:	add    DWORD PTR [rip+0x842f],0xffffffff        # 0x14000c76c
   14000433d:	jne    0x14000434e
   14000433f:	mov    ecx,DWORD PTR [rip+0x842b]        # 0x14000c770
   140004345:	lea    rdx,[rbp+0x77]
   140004349:	call   0x140004134
   14000434e:	mov    rcx,rbx
   140004351:	call   QWORD PTR [rip+0x2d21]        # 0x140007078
   140004357:	lea    r9,[rbp+0x7]
   14000435b:	mov    r8d,esi
   14000435e:	xor    edx,edx
   140004360:	mov    ecx,0xc06d0057
   140004365:	call   QWORD PTR [rip+0x2d8d]        # 0x1400070f8
   14000436b:	xor    eax,eax
   14000436d:	jmp    0x1400046ff
   140004372:	mov    rbx,QWORD PTR [r12]
   140004376:	movabs rax,0x8000000000000000
   140004380:	mov    r13,rdi
   140004383:	sub    r13,r8
   140004386:	sar    r13,0x3
   14000438a:	mov    r13d,r13d
   14000438d:	test   QWORD PTR [rdx+r13*8],rax
   140004391:	mov    eax,0x0
   140004396:	sete   al
   140004399:	mov    DWORD PTR [rbp-0x39],eax
   14000439c:	test   eax,eax
   14000439e:	je     0x1400043b4
   1400043a0:	mov    eax,DWORD PTR [rdx+r13*8]
   1400043a4:	lea    rcx,[rip+0xffffffffffffbc57]        # 0x140000002
   1400043ab:	add    rax,rcx
   1400043ae:	mov    QWORD PTR [rbp-0x31],rax
   1400043b2:	jmp    0x1400043bc
   1400043b4:	movzx  eax,WORD PTR [rdx+r13*8]
   1400043b9:	mov    DWORD PTR [rbp-0x31],eax
   1400043bc:	mov    rdi,QWORD PTR [rip+0x380d]        # 0x140007bd0
   1400043c3:	xor    esi,esi
   1400043c5:	test   rdi,rdi
   1400043c8:	je     0x1400043e7
   1400043ca:	mov    rcx,rdi
   1400043cd:	call   QWORD PTR [rip+0x2f3d]        # 0x140007310
   1400043d3:	lea    rdx,[rbp-0x59]
   1400043d7:	xor    ecx,ecx
   1400043d9:	call   rdi
   1400043db:	mov    rsi,rax
   1400043de:	test   rax,rax
   1400043e1:	jne    0x140004692
   1400043e7:	test   rbx,rbx
   1400043ea:	jne    0x14000452e
   1400043f0:	mov    rdi,QWORD PTR [rip+0x37d9]        # 0x140007bd0
   1400043f7:	test   rdi,rdi
   1400043fa:	je     0x14000441a
   1400043fc:	mov    rcx,rdi
   1400043ff:	call   QWORD PTR [rip+0x2f0b]        # 0x140007310
   140004405:	lea    rdx,[rbp-0x59]
   140004409:	lea    ecx,[rbx+0x1]
   14000440c:	call   rdi
   14000440e:	mov    rbx,rax
   140004411:	test   rax,rax
   140004414:	jne    0x1400044ca
   14000441a:	mov    rcx,QWORD PTR [rbp-0x41]
   14000441e:	xor    r8d,r8d
   140004421:	xor    edx,edx
   140004423:	call   QWORD PTR [rip+0x2ce7]        # 0x140007110
   140004429:	mov    rbx,rax
   14000442c:	test   rax,rax
   14000442f:	jne    0x1400044ca
   140004435:	call   QWORD PTR [rip+0x2c05]        # 0x140007040
   14000443b:	mov    rbx,QWORD PTR [rip+0x378e]        # 0x140007bd0
   140004442:	mov    DWORD PTR [rbp-0x19],eax
   140004445:	test   rbx,rbx
   140004448:	je     0x140004466
   14000444a:	mov    rcx,rbx
   14000444d:	call   QWORD PTR [rip+0x2ebd]        # 0x140007310
   140004453:	lea    rdx,[rbp-0x59]
   140004457:	mov    ecx,0x3
   14000445c:	call   rbx
   14000445e:	mov    rbx,rax
   140004461:	test   rax,rax
   140004464:	jne    0x1400044ca
   140004466:	test   DWORD PTR [rip+0x31c0],0x1000        # 0x140007630
   140004470:	lea    rax,[rbp-0x59]
   140004474:	mov    QWORD PTR [rbp-0x9],rax
   140004478:	je     0x1400044ac
   14000447a:	lea    rcx,[rip+0x82af]        # 0x14000c730
   140004481:	call   QWORD PTR [rip+0x2c99]        # 0x140007120
   140004487:	add    DWORD PTR [rip+0x82de],0xffffffff        # 0x14000c76c
   14000448e:	jne    0x14000449f
   140004490:	mov    ecx,DWORD PTR [rip+0x82da]        # 0x14000c770
   140004496:	lea    rdx,[rbp+0x7f]
   14000449a:	call   0x140004134
   14000449f:	lea    rcx,[rip+0x828a]        # 0x14000c730
   1400044a6:	call   QWORD PTR [rip+0x2bcc]        # 0x140007078
   1400044ac:	xor    edx,edx
   1400044ae:	lea    r9,[rbp-0x9]
   1400044b2:	mov    ecx,0xc06d007e
   1400044b7:	lea    r8d,[rdx+0x1]
   1400044bb:	call   QWORD PTR [rip+0x2c37]        # 0x1400070f8
   1400044c1:	mov    rax,QWORD PTR [rbp-0x21]
   1400044c5:	jmp    0x1400046ff
   1400044ca:	xor    eax,eax
   1400044cc:	lock cmpxchg QWORD PTR [r12],rbx
   1400044d2:	mov    rdi,rax
   1400044d5:	jne    0x140004518
   1400044d7:	cmp    rbx,0xffffffffffffffff
   1400044db:	je     0x14000452e
   1400044dd:	cmp    DWORD PTR [r15+0x18],0x0
   1400044e2:	je     0x14000452e
   1400044e4:	call   QWORD PTR [rip+0x2b76]        # 0x140007060
   1400044ea:	mov    edx,0x8
   1400044ef:	mov    rcx,rax
   1400044f2:	lea    r8d,[rdx+0x8]
   1400044f6:	call   QWORD PTR [rip+0x2b5c]        # 0x140007058
   1400044fc:	test   rax,rax
   1400044ff:	je     0x14000452e
   140004501:	mov    QWORD PTR [rax+0x8],r15
   140004505:	mov    rcx,QWORD PTR [rip+0x822c]        # 0x14000c738
   14000450c:	mov    QWORD PTR [rax],rcx
   14000450f:	mov    QWORD PTR [rip+0x8222],rax        # 0x14000c738
   140004516:	jmp    0x14000452e
   140004518:	cmp    rbx,0xffffffffffffffff
   14000451c:	je     0x140004527
   14000451e:	mov    rcx,rbx
   140004521:	call   QWORD PTR [rip+0x2b59]        # 0x140007080
   140004527:	cmp    rbx,rdi
   14000452a:	cmovne rbx,rdi
   14000452e:	mov    rdi,QWORD PTR [rip+0x369b]        # 0x140007bd0
   140004535:	mov    QWORD PTR [rbp-0x29],rbx
   140004539:	test   rdi,rdi
   14000453c:	je     0x140004555
   14000453e:	mov    rcx,rdi
   140004541:	call   QWORD PTR [rip+0x2dc9]        # 0x140007310
   140004547:	lea    rdx,[rbp-0x59]
   14000454b:	mov    ecx,0x2
   140004550:	call   rdi
   140004552:	mov    rsi,rax
   140004555:	test   rsi,rsi
   140004558:	jne    0x14000468b
   14000455e:	cmp    DWORD PTR [r15+0x14],esi
   140004562:	je     0x140004598
   140004564:	cmp    DWORD PTR [r15+0x1c],esi
   140004568:	je     0x140004598
   14000456a:	movsxd rax,DWORD PTR [rbx+0x3c]
   14000456e:	cmp    DWORD PTR [rax+rbx*1],0x4550
   140004575:	jne    0x140004598
   140004577:	mov    ecx,DWORD PTR [rbp+0x67]
   14000457a:	cmp    DWORD PTR [rax+rbx*1+0x8],ecx
   14000457e:	jne    0x140004598
   140004580:	cmp    rbx,QWORD PTR [rax+rbx*1+0x30]
   140004585:	jne    0x140004598
   140004587:	mov    rsi,QWORD PTR [rbp-0x1]
   14000458b:	mov    rsi,QWORD PTR [rsi+r13*8]
   14000458f:	test   rsi,rsi
   140004592:	jne    0x14000468b
   140004598:	mov    rdx,QWORD PTR [rbp-0x31]
   14000459c:	mov    rcx,rbx
   14000459f:	call   QWORD PTR [rip+0x2b5b]        # 0x140007100
   1400045a5:	mov    rsi,rax
   1400045a8:	test   rax,rax
   1400045ab:	jne    0x14000468b
   1400045b1:	call   QWORD PTR [rip+0x2a89]        # 0x140007040
   1400045b7:	mov    rdi,QWORD PTR [rip+0x3612]        # 0x140007bd0
   1400045be:	mov    DWORD PTR [rbp-0x19],eax
   1400045c1:	test   rdi,rdi
   1400045c4:	je     0x1400045e4
   1400045c6:	mov    rcx,rdi
   1400045c9:	call   QWORD PTR [rip+0x2d41]        # 0x140007310
   1400045cf:	lea    rdx,[rbp-0x59]
   1400045d3:	lea    ecx,[rsi+0x4]
   1400045d6:	call   rdi
   1400045d8:	mov    rsi,rax
   1400045db:	test   rax,rax
   1400045de:	jne    0x14000468b
   1400045e4:	test   DWORD PTR [rip+0x3042],0x1000        # 0x140007630
   1400045ee:	lea    rax,[rbp-0x59]
   1400045f2:	mov    QWORD PTR [rbp+0xf],rax
   1400045f6:	je     0x14000462a
   1400045f8:	lea    rcx,[rip+0x8131]        # 0x14000c730
   1400045ff:	call   QWORD PTR [rip+0x2b1b]        # 0x140007120
   140004605:	add    DWORD PTR [rip+0x8160],0xffffffff        # 0x14000c76c
   14000460c:	jne    0x14000461d
   14000460e:	mov    ecx,DWORD PTR [rip+0x815c]        # 0x14000c770
   140004614:	lea    rdx,[rbp+0x17]
   140004618:	call   0x140004134
   14000461d:	lea    rcx,[rip+0x810c]        # 0x14000c730
   140004624:	call   QWORD PTR [rip+0x2a4e]        # 0x140007078
   14000462a:	xor    edx,edx
   14000462c:	lea    r9,[rbp+0xf]
   140004630:	mov    ecx,0xc06d007f
   140004635:	lea    r8d,[rdx+0x1]
   140004639:	call   QWORD PTR [rip+0x2ab9]        # 0x1400070f8
   14000463f:	test   DWORD PTR [rip+0x2fe7],0x1000        # 0x140007630
   140004649:	je     0x140004687
   14000464b:	lea    rcx,[rip+0x80de]        # 0x14000c730
   140004652:	call   QWORD PTR [rip+0x2ac8]        # 0x140007120
   140004658:	mov    eax,DWORD PTR [rip+0x810e]        # 0x14000c76c
   14000465e:	inc    eax
   140004660:	mov    DWORD PTR [rip+0x8106],eax        # 0x14000c76c
   140004666:	cmp    eax,0x1
   140004669:	jne    0x14000467a
   14000466b:	lea    rdx,[rip+0x80fe]        # 0x14000c770
   140004672:	lea    ecx,[rax+0x3]
   140004675:	call   0x140004134
   14000467a:	lea    rcx,[rip+0x80af]        # 0x14000c730
   140004681:	call   QWORD PTR [rip+0x29f1]        # 0x140007078
   140004687:	mov    rsi,QWORD PTR [rbp-0x21]
   14000468b:	mov    rax,QWORD PTR [rbp+0x6f]
   14000468f:	mov    QWORD PTR [rax],rsi
   140004692:	mov    rdi,QWORD PTR [rip+0x3537]        # 0x140007bd0
   140004699:	test   rdi,rdi
   14000469c:	je     0x1400046be
   14000469e:	and    DWORD PTR [rbp-0x19],0x0
   1400046a2:	mov    rcx,rdi
   1400046a5:	mov    QWORD PTR [rbp-0x29],rbx
   1400046a9:	mov    QWORD PTR [rbp-0x21],rsi
   1400046ad:	call   QWORD PTR [rip+0x2c5d]        # 0x140007310
   1400046b3:	lea    rdx,[rbp-0x59]
   1400046b7:	mov    ecx,0x5
   1400046bc:	call   rdi
   1400046be:	test   DWORD PTR [rip+0x2f68],0x1000        # 0x140007630
   1400046c8:	je     0x1400046fc
   1400046ca:	lea    rcx,[rip+0x805f]        # 0x14000c730
   1400046d1:	call   QWORD PTR [rip+0x2a49]        # 0x140007120
   1400046d7:	add    DWORD PTR [rip+0x808e],0xffffffff        # 0x14000c76c
   1400046de:	jne    0x1400046ef
   1400046e0:	mov    ecx,DWORD PTR [rip+0x808a]        # 0x14000c770
   1400046e6:	lea    rdx,[rbp+0x1b]
   1400046ea:	call   0x140004134
   1400046ef:	lea    rcx,[rip+0x803a]        # 0x14000c730
   1400046f6:	call   QWORD PTR [rip+0x297c]        # 0x140007078
   1400046fc:	mov    rax,rsi
   1400046ff:	add    rsp,0xa0
   140004706:	pop    r15
   140004708:	pop    r13
   14000470a:	pop    r12
   14000470c:	pop    rdi
   14000470d:	pop    rsi
   14000470e:	pop    rbx
   14000470f:	pop    rbp
   140004710:	ret    
   140004711:	int3   
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	rex push rbx
   14000471a:	sub    rsp,0x20
   14000471e:	mov    r8d,0x1
   140004724:	lea    rdx,[rip+0x58fd]        # 0x14000a028
   14000472b:	mov    rbx,rcx
   14000472e:	call   0x1400057fa
   140004733:	lea    rax,[rip+0x2f0e]        # 0x140007648
   14000473a:	mov    QWORD PTR [rbx],rax
   14000473d:	mov    rax,rbx
   140004740:	add    rsp,0x20
   140004744:	pop    rbx
   140004745:	ret    
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	rex push rbx
   14000474e:	sub    rsp,0x40
   140004752:	mov    rbx,rcx
   140004755:	jmp    0x140004766
   140004757:	mov    rcx,rbx
   14000475a:	call   0x140005806
   14000475f:	test   eax,eax
   140004761:	je     0x140004777
   140004763:	mov    rcx,rbx
   140004766:	call   QWORD PTR [rip+0x2a6c]        # 0x1400071d8
   14000476c:	test   rax,rax
   14000476f:	je     0x140004757
   140004771:	add    rsp,0x40
   140004775:	pop    rbx
   140004776:	ret    
   140004777:	mov    eax,DWORD PTR [rip+0x598b]        # 0x14000a108
   14000477d:	test   al,0x1
   14000477f:	jne    0x1400047a2
   140004781:	or     eax,0x1
   140004784:	lea    rcx,[rip+0x5965]        # 0x14000a0f0
   14000478b:	mov    DWORD PTR [rip+0x5977],eax        # 0x14000a108
   140004791:	call   0x140004718
   140004796:	lea    rcx,[rip+0x1833]        # 0x140005fd0
   14000479d:	call   0x1400057dc
   1400047a2:	lea    rdx,[rip+0x5947]        # 0x14000a0f0
   1400047a9:	lea    rcx,[rsp+0x20]
   1400047ae:	call   0x1400010d0
   1400047b3:	lea    rdx,[rip+0x419e]        # 0x140008958
   1400047ba:	lea    rcx,[rsp+0x20]
   1400047bf:	call   0x140005812
   1400047c4:	int3   
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	rex push rbx
   1400047ce:	sub    rsp,0x40
   1400047d2:	mov    rbx,rcx
   1400047d5:	jmp    0x1400047e6
   1400047d7:	mov    rcx,rbx
   1400047da:	call   0x140005806
   1400047df:	test   eax,eax
   1400047e1:	je     0x1400047f7
   1400047e3:	mov    rcx,rbx
   1400047e6:	call   QWORD PTR [rip+0x29ec]        # 0x1400071d8
   1400047ec:	test   rax,rax
   1400047ef:	je     0x1400047d7
   1400047f1:	add    rsp,0x40
   1400047f5:	pop    rbx
   1400047f6:	ret    
   1400047f7:	mov    eax,DWORD PTR [rip+0x592b]        # 0x14000a128
   1400047fd:	test   al,0x1
   1400047ff:	jne    0x140004822
   140004801:	or     eax,0x1
   140004804:	lea    rcx,[rip+0x5905]        # 0x14000a110
   14000480b:	mov    DWORD PTR [rip+0x5917],eax        # 0x14000a128
   140004811:	call   0x140004718
   140004816:	lea    rcx,[rip+0x17d3]        # 0x140005ff0
   14000481d:	call   0x1400057dc
   140004822:	lea    rdx,[rip+0x58e7]        # 0x14000a110
   140004829:	lea    rcx,[rsp+0x20]
   14000482e:	call   0x1400010d0
   140004833:	lea    rdx,[rip+0x411e]        # 0x140008958
   14000483a:	lea    rcx,[rsp+0x20]
   14000483f:	call   0x140005812
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	int3   
   140004849:	int3   
   14000484a:	int3   
   14000484b:	int3   
   14000484c:	rex.W jmp QWORD PTR [rip+0x298d]        # 0x1400071e0
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	rex push rbx
   14000485e:	sub    rsp,0x20
   140004862:	xor    eax,eax
   140004864:	mov    QWORD PTR [rcx+0x20],0xf
   14000486c:	mov    QWORD PTR [rcx+0x18],rax
   140004870:	mov    rbx,rcx
   140004873:	mov    BYTE PTR [rcx+0x8],al
   140004876:	or     r8,0xffffffffffffffff
   14000487a:	inc    r8
   14000487d:	cmp    BYTE PTR [rdx+r8*1],al
   140004881:	jne    0x14000487a
   140004883:	call   0x140004fd8
   140004888:	mov    rax,rbx
   14000488b:	add    rsp,0x20
   14000488f:	pop    rbx
   140004890:	ret    
   140004891:	int3   
   140004892:	int3   
   140004893:	int3   
   140004894:	int3   
   140004895:	int3   
   140004896:	int3   
   140004897:	int3   
   140004898:	mov    QWORD PTR [rsp+0x8],rcx
   14000489d:	push   rdi
   14000489e:	sub    rsp,0x30
   1400048a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400048ab:	mov    QWORD PTR [rsp+0x48],rbx
   1400048b0:	mov    rbx,rdx
   1400048b3:	mov    rdi,rcx
   1400048b6:	call   0x140005546
   1400048bb:	nop
   1400048bc:	lea    rax,[rip+0x2c3d]        # 0x140007500
   1400048c3:	mov    QWORD PTR [rdi],rax
   1400048c6:	lea    rcx,[rdi+0x18]
   1400048ca:	mov    QWORD PTR [rcx+0x20],0xf
   1400048d2:	and    QWORD PTR [rcx+0x18],0x0
   1400048d7:	mov    BYTE PTR [rcx+0x8],0x0
   1400048db:	lea    rdx,[rbx+0x18]
   1400048df:	or     r9,0xffffffffffffffff
   1400048e3:	xor    r8d,r8d
   1400048e6:	call   0x140004ed0
   1400048eb:	nop
   1400048ec:	lea    rax,[rip+0x2c25]        # 0x140007518
   1400048f3:	mov    QWORD PTR [rdi],rax
   1400048f6:	mov    rax,rdi
   1400048f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400048fe:	add    rsp,0x30
   140004902:	pop    rdi
   140004903:	ret    
   140004904:	int3   
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	mov    rax,rsp
   14000490f:	mov    QWORD PTR [rax+0x8],rcx
   140004913:	push   rdi
   140004914:	sub    rsp,0x30
   140004918:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004920:	mov    QWORD PTR [rax+0x10],rbx
   140004924:	mov    QWORD PTR [rax+0x18],rsi
   140004928:	mov    rdi,rdx
   14000492b:	mov    rsi,rcx
   14000492e:	call   0x14000581e
   140004933:	nop
   140004934:	lea    rax,[rip+0x2bc5]        # 0x140007500
   14000493b:	mov    QWORD PTR [rsi],rax
   14000493e:	xor    r8d,r8d
   140004941:	xor    edx,edx
   140004943:	lea    rcx,[rsi+0x18]
   140004947:	call   0x140004da8
   14000494c:	or     r9,0xffffffffffffffff
   140004950:	xor    r8d,r8d
   140004953:	mov    rdx,rdi
   140004956:	lea    rcx,[rsi+0x18]
   14000495a:	call   0x140004ed0
   14000495f:	nop
   140004960:	lea    rax,[rip+0x2bb1]        # 0x140007518
   140004967:	mov    QWORD PTR [rsi],rax
   14000496a:	mov    rax,rsi
   14000496d:	mov    rbx,QWORD PTR [rsp+0x48]
   140004972:	mov    rsi,QWORD PTR [rsp+0x50]
   140004977:	add    rsp,0x30
   14000497b:	pop    rdi
   14000497c:	ret    
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	int3   
   140004981:	int3   
   140004982:	int3   
   140004983:	int3   
   140004984:	mov    QWORD PTR [rsp+0x8],rcx
   140004989:	push   rdi
   14000498a:	sub    rsp,0x30
   14000498e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004997:	mov    QWORD PTR [rsp+0x48],rbx
   14000499c:	mov    rbx,rdx
   14000499f:	mov    rdi,rcx
   1400049a2:	call   0x140005546
   1400049a7:	nop
   1400049a8:	lea    rax,[rip+0x2b51]        # 0x140007500
   1400049af:	mov    QWORD PTR [rdi],rax
   1400049b2:	lea    rcx,[rdi+0x18]
   1400049b6:	mov    QWORD PTR [rcx+0x20],0xf
   1400049be:	and    QWORD PTR [rcx+0x18],0x0
   1400049c3:	mov    BYTE PTR [rcx+0x8],0x0
   1400049c7:	lea    rdx,[rbx+0x18]
   1400049cb:	or     r9,0xffffffffffffffff
   1400049cf:	xor    r8d,r8d
   1400049d2:	call   0x140004ed0
   1400049d7:	nop
   1400049d8:	mov    rax,rdi
   1400049db:	mov    rbx,QWORD PTR [rsp+0x48]
   1400049e0:	add    rsp,0x30
   1400049e4:	pop    rdi
   1400049e5:	ret    
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	int3   
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400049f1:	push   rdi
   1400049f2:	sub    rsp,0x30
   1400049f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400049ff:	mov    QWORD PTR [rsp+0x48],rbx
   140004a04:	mov    rbx,rdx
   140004a07:	mov    rdi,rcx
   140004a0a:	call   0x140005546
   140004a0f:	nop
   140004a10:	lea    rax,[rip+0x2ae9]        # 0x140007500
   140004a17:	mov    QWORD PTR [rdi],rax
   140004a1a:	lea    rcx,[rdi+0x18]
   140004a1e:	mov    QWORD PTR [rcx+0x20],0xf
   140004a26:	and    QWORD PTR [rcx+0x18],0x0
   140004a2b:	mov    BYTE PTR [rcx+0x8],0x0
   140004a2f:	lea    rdx,[rbx+0x18]
   140004a33:	or     r9,0xffffffffffffffff
   140004a37:	xor    r8d,r8d
   140004a3a:	call   0x140004ed0
   140004a3f:	nop
   140004a40:	lea    rax,[rip+0x2ae9]        # 0x140007530
   140004a47:	mov    QWORD PTR [rdi],rax
   140004a4a:	mov    rax,rdi
   140004a4d:	mov    rbx,QWORD PTR [rsp+0x48]
   140004a52:	add    rsp,0x30
   140004a56:	pop    rdi
   140004a57:	ret    
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    rax,rsp
   140004a63:	mov    QWORD PTR [rax+0x8],rcx
   140004a67:	push   rdi
   140004a68:	sub    rsp,0x30
   140004a6c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004a74:	mov    QWORD PTR [rax+0x10],rbx
   140004a78:	mov    QWORD PTR [rax+0x18],rsi
   140004a7c:	mov    rdi,rdx
   140004a7f:	mov    rsi,rcx
   140004a82:	call   0x14000581e
   140004a87:	nop
   140004a88:	lea    rax,[rip+0x2a71]        # 0x140007500
   140004a8f:	mov    QWORD PTR [rsi],rax
   140004a92:	xor    r8d,r8d
   140004a95:	xor    edx,edx
   140004a97:	lea    rcx,[rsi+0x18]
   140004a9b:	call   0x140004da8
   140004aa0:	or     r9,0xffffffffffffffff
   140004aa4:	xor    r8d,r8d
   140004aa7:	mov    rdx,rdi
   140004aaa:	lea    rcx,[rsi+0x18]
   140004aae:	call   0x140004ed0
   140004ab3:	nop
   140004ab4:	lea    rax,[rip+0x2a75]        # 0x140007530
   140004abb:	mov    QWORD PTR [rsi],rax
   140004abe:	mov    rax,rsi
   140004ac1:	mov    rbx,QWORD PTR [rsp+0x48]
   140004ac6:	mov    rsi,QWORD PTR [rsp+0x50]
   140004acb:	add    rsp,0x30
   140004acf:	pop    rdi
   140004ad0:	ret    
   140004ad1:	int3   
   140004ad2:	int3   
   140004ad3:	int3   
   140004ad4:	int3   
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	rex push rbx
   140004ada:	sub    rsp,0x20
   140004ade:	cmp    QWORD PTR [rcx+0x20],0x10
   140004ae3:	mov    rbx,rcx
   140004ae6:	jb     0x140004af1
   140004ae8:	mov    rcx,QWORD PTR [rcx+0x8]
   140004aec:	call   0x14000484c
   140004af1:	and    QWORD PTR [rbx+0x18],0x0
   140004af6:	mov    QWORD PTR [rbx+0x20],0xf
   140004afe:	mov    BYTE PTR [rbx+0x8],0x0
   140004b02:	add    rsp,0x20
   140004b06:	pop    rbx
   140004b07:	ret    
   140004b08:	int3   
   140004b09:	int3   
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	rex push rbx
   140004b12:	sub    rsp,0x20
   140004b16:	lea    rax,[rip+0x29e3]        # 0x140007500
   140004b1d:	mov    rbx,rcx
   140004b20:	mov    QWORD PTR [rcx],rax
   140004b23:	cmp    QWORD PTR [rcx+0x38],0x10
   140004b28:	jb     0x140004b33
   140004b2a:	mov    rcx,QWORD PTR [rcx+0x20]
   140004b2e:	call   0x14000484c
   140004b33:	and    QWORD PTR [rbx+0x30],0x0
   140004b38:	mov    rcx,rbx
   140004b3b:	mov    QWORD PTR [rbx+0x38],0xf
   140004b43:	mov    BYTE PTR [rbx+0x20],0x0
   140004b47:	add    rsp,0x20
   140004b4b:	pop    rbx
   140004b4c:	jmp    0x140005504
   140004b51:	int3   
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	int3   
   140004b57:	int3   
   140004b58:	int3   
   140004b59:	int3   
   140004b5a:	int3   
   140004b5b:	int3   
   140004b5c:	int3   
   140004b5d:	int3   
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	mov    QWORD PTR [rsp+0x8],rbx
   140004b65:	push   rdi
   140004b66:	sub    rsp,0x20
   140004b6a:	lea    rax,[rip+0x298f]        # 0x140007500
   140004b71:	mov    edi,edx
   140004b73:	mov    QWORD PTR [rcx],rax
   140004b76:	mov    rbx,rcx
   140004b79:	cmp    QWORD PTR [rcx+0x38],0x10
   140004b7e:	jb     0x140004b89
   140004b80:	mov    rcx,QWORD PTR [rcx+0x20]
   140004b84:	call   0x14000484c
   140004b89:	and    QWORD PTR [rbx+0x30],0x0
   140004b8e:	mov    rcx,rbx
   140004b91:	mov    QWORD PTR [rbx+0x38],0xf
   140004b99:	mov    BYTE PTR [rbx+0x20],0x0
   140004b9d:	call   0x140005504
   140004ba2:	test   dil,0x1
   140004ba6:	je     0x140004bb0
   140004ba8:	mov    rcx,rbx
   140004bab:	call   0x14000484c
   140004bb0:	mov    rax,rbx
   140004bb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bb8:	add    rsp,0x20
   140004bbc:	pop    rdi
   140004bbd:	ret    
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	int3   
   140004bc1:	int3   
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	mov    rax,rsp
   140004bc7:	mov    QWORD PTR [rax+0x18],r8
   140004bcb:	mov    QWORD PTR [rax+0x10],rdx
   140004bcf:	mov    QWORD PTR [rax+0x8],rcx
   140004bd3:	push   rbx
   140004bd4:	push   rsi
   140004bd5:	push   rdi
   140004bd6:	push   r14
   140004bd8:	sub    rsp,0x68
   140004bdc:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140004be4:	mov    rsi,r8
   140004be7:	mov    rdi,rcx
   140004bea:	mov    rbx,rdx
   140004bed:	or     rbx,0xf
   140004bf1:	mov    r9,0xfffffffffffffffe
   140004bf8:	cmp    rbx,r9
   140004bfb:	jbe    0x140004c02
   140004bfd:	mov    rbx,rdx
   140004c00:	jmp    0x140004c2d
   140004c02:	mov    r8,QWORD PTR [rcx+0x20]
   140004c06:	mov    rcx,r8
   140004c09:	shr    rcx,1
   140004c0c:	movabs rax,0xaaaaaaaaaaaaaaab
   140004c16:	mul    rbx
   140004c19:	shr    rdx,1
   140004c1c:	cmp    rdx,rcx
   140004c1f:	jae    0x140004c2d
   140004c21:	sub    r9,rcx
   140004c24:	cmp    r8,r9
   140004c27:	ja     0x140004c2d
   140004c29:	lea    rbx,[rcx+r8*1]
   140004c2d:	lea    rcx,[rbx+0x1]
   140004c31:	test   rcx,rcx
   140004c34:	je     0x140004c62
   140004c36:	xor    edx,edx
   140004c38:	or     rax,0xffffffffffffffff
   140004c3c:	div    rcx
   140004c3f:	cmp    rax,0x1
   140004c43:	jae    0x140004c62
   140004c45:	xor    edx,edx
   140004c47:	lea    rcx,[rsp+0x28]
   140004c4c:	call   0x140001008
   140004c51:	lea    rdx,[rip+0x3d00]        # 0x140008958
   140004c58:	lea    rcx,[rsp+0x28]
   140004c5d:	call   0x140005812
   140004c62:	call   0x14000474c
   140004c67:	mov    r14,rax
   140004c6a:	jmp    0x140004c8c
   140004c6c:	mov    rdi,QWORD PTR [rsp+0x90]
   140004c74:	mov    rsi,QWORD PTR [rsp+0xa0]
   140004c7c:	mov    rbx,QWORD PTR [rsp+0x98]
   140004c84:	mov    r14,QWORD PTR [rsp+0xa8]
   140004c8c:	test   rsi,rsi
   140004c8f:	je     0x140004cb1
   140004c91:	cmp    QWORD PTR [rdi+0x20],0x10
   140004c96:	jb     0x140004c9e
   140004c98:	mov    r8,QWORD PTR [rdi+0x8]
   140004c9c:	jmp    0x140004ca2
   140004c9e:	lea    r8,[rdi+0x8]
   140004ca2:	lea    rdx,[rbx+0x1]
   140004ca6:	mov    r9,rsi
   140004ca9:	mov    rcx,r14
   140004cac:	call   0x140005552
   140004cb1:	cmp    QWORD PTR [rdi+0x20],0x10
   140004cb6:	jb     0x140004cc1
   140004cb8:	mov    rcx,QWORD PTR [rdi+0x8]
   140004cbc:	call   0x14000484c
   140004cc1:	lea    rax,[rdi+0x8]
   140004cc5:	mov    BYTE PTR [rax],0x0
   140004cc8:	mov    QWORD PTR [rax],r14
   140004ccb:	mov    QWORD PTR [rdi+0x20],rbx
   140004ccf:	mov    QWORD PTR [rdi+0x18],rsi
   140004cd3:	cmp    rbx,0x10
   140004cd7:	cmovae rax,r14
   140004cdb:	mov    BYTE PTR [rax+rsi*1],0x0
   140004cdf:	add    rsp,0x68
   140004ce3:	pop    r14
   140004ce5:	pop    rdi
   140004ce6:	pop    rsi
   140004ce7:	pop    rbx
   140004ce8:	ret    
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	sub    rsp,0x78
   140004cf4:	mov    rax,QWORD PTR [rip+0x5305]        # 0x14000a000
   140004cfb:	xor    rax,rsp
   140004cfe:	mov    QWORD PTR [rsp+0x60],rax
   140004d03:	mov    rdx,rcx
   140004d06:	lea    rcx,[rsp+0x20]
   140004d0b:	call   0x140004898
   140004d10:	lea    rdx,[rip+0x3b31]        # 0x140008848
   140004d17:	lea    rcx,[rsp+0x20]
   140004d1c:	call   0x140005812
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	sub    rsp,0x78
   140004d34:	mov    rax,QWORD PTR [rip+0x52c5]        # 0x14000a000
   140004d3b:	xor    rax,rsp
   140004d3e:	mov    QWORD PTR [rsp+0x60],rax
   140004d43:	mov    rdx,rcx
   140004d46:	lea    rcx,[rsp+0x20]
   140004d4b:	call   0x140004984
   140004d50:	lea    rdx,[rip+0x3a91]        # 0x1400087e8
   140004d57:	lea    rcx,[rsp+0x20]
   140004d5c:	call   0x140005812
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	int3   
   140004d69:	int3   
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	int3   
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	sub    rsp,0x78
   140004d74:	mov    rax,QWORD PTR [rip+0x5285]        # 0x14000a000
   140004d7b:	xor    rax,rsp
   140004d7e:	mov    QWORD PTR [rsp+0x60],rax
   140004d83:	mov    rdx,rcx
   140004d86:	lea    rcx,[rsp+0x20]
   140004d8b:	call   0x1400049ec
   140004d90:	lea    rdx,[rip+0x3b19]        # 0x1400088b0
   140004d97:	lea    rcx,[rsp+0x20]
   140004d9c:	call   0x140005812
   140004da1:	int3   
   140004da2:	int3   
   140004da3:	int3   
   140004da4:	int3   
   140004da5:	int3   
   140004da6:	int3   
   140004da7:	int3   
   140004da8:	mov    QWORD PTR [rsp+0x8],rbx
   140004dad:	mov    QWORD PTR [rsp+0x10],rsi
   140004db2:	push   rdi
   140004db3:	sub    rsp,0x20
   140004db7:	mov    rdi,r8
   140004dba:	mov    rbx,rcx
   140004dbd:	test   dl,dl
   140004dbf:	je     0x140004deb
   140004dc1:	mov    edx,0x10
   140004dc6:	cmp    QWORD PTR [rcx+0x20],rdx
   140004dca:	jb     0x140004deb
   140004dcc:	add    rcx,0x8
   140004dd0:	mov    rsi,QWORD PTR [rcx]
   140004dd3:	test   r8,r8
   140004dd6:	je     0x140004de3
   140004dd8:	mov    r9,r8
   140004ddb:	mov    r8,rsi
   140004dde:	call   0x140005552
   140004de3:	mov    rcx,rsi
   140004de6:	call   0x14000484c
   140004deb:	mov    rsi,QWORD PTR [rsp+0x38]
   140004df0:	mov    QWORD PTR [rbx+0x20],0xf
   140004df8:	mov    QWORD PTR [rbx+0x18],rdi
   140004dfc:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   140004e01:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e06:	add    rsp,0x20
   140004e0a:	pop    rdi
   140004e0b:	ret    
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	int3   
   140004e11:	int3   
   140004e12:	int3   
   140004e13:	int3   
   140004e14:	sub    rsp,0xa8
   140004e1b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e24:	mov    rax,QWORD PTR [rip+0x51d5]        # 0x14000a000
   140004e2b:	xor    rax,rsp
   140004e2e:	mov    QWORD PTR [rsp+0x90],rax
   140004e36:	lea    rdx,[rip+0x270b]        # 0x140007548
   140004e3d:	lea    rcx,[rsp+0x28]
   140004e42:	call   0x14000485c
   140004e47:	nop
   140004e48:	lea    rdx,[rsp+0x28]
   140004e4d:	lea    rcx,[rsp+0x50]
   140004e52:	call   0x14000490c
   140004e57:	lea    rdx,[rip+0x39ea]        # 0x140008848
   140004e5e:	lea    rcx,[rsp+0x50]
   140004e63:	call   0x140005812
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	sub    rsp,0xa8
   140004e77:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e80:	mov    rax,QWORD PTR [rip+0x5179]        # 0x14000a000
   140004e87:	xor    rax,rsp
   140004e8a:	mov    QWORD PTR [rsp+0x90],rax
   140004e92:	lea    rdx,[rip+0x26bf]        # 0x140007558
   140004e99:	lea    rcx,[rsp+0x28]
   140004e9e:	call   0x14000485c
   140004ea3:	nop
   140004ea4:	xor    r8d,r8d
   140004ea7:	lea    rdx,[rsp+0x28]
   140004eac:	lea    rcx,[rsp+0x50]
   140004eb1:	call   0x140004a60
   140004eb6:	lea    rdx,[rip+0x39f3]        # 0x1400088b0
   140004ebd:	lea    rcx,[rsp+0x50]
   140004ec2:	call   0x140005812
   140004ec7:	int3   
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140004eda:	mov    QWORD PTR [rsp+0x18],rsi
   140004edf:	push   rdi
   140004ee0:	sub    rsp,0x20
   140004ee4:	mov    rdi,QWORD PTR [rdx+0x18]
   140004ee8:	mov    rbp,r8
   140004eeb:	mov    rsi,rdx
   140004eee:	mov    rbx,rcx
   140004ef1:	cmp    rdi,r8
   140004ef4:	jb     0x140004fc5
   140004efa:	sub    rdi,r8
   140004efd:	cmp    r9,rdi
   140004f00:	cmovb  rdi,r9
   140004f04:	cmp    rcx,rdx
   140004f07:	jne    0x140004f28
   140004f09:	lea    rdx,[rdi+r8*1]
   140004f0d:	or     r8,0xffffffffffffffff
   140004f11:	call   0x1400050d4
   140004f16:	mov    r8,rbp
   140004f19:	xor    edx,edx
   140004f1b:	mov    rcx,rbx
   140004f1e:	call   0x1400050d4
   140004f23:	jmp    0x140004fad
   140004f28:	cmp    rdi,0xfffffffffffffffe
   140004f2c:	ja     0x140004fcb
   140004f32:	cmp    QWORD PTR [rcx+0x20],rdi
   140004f36:	jae    0x140004f46
   140004f38:	mov    r8,QWORD PTR [rcx+0x18]
   140004f3c:	mov    rdx,rdi
   140004f3f:	call   0x140004bc4
   140004f44:	jmp    0x140004f63
   140004f46:	test   rdi,rdi
   140004f49:	jne    0x140004f68
   140004f4b:	and    QWORD PTR [rcx+0x18],rdi
   140004f4f:	cmp    QWORD PTR [rcx+0x20],0x10
   140004f54:	jb     0x140004f5c
   140004f56:	mov    rax,QWORD PTR [rcx+0x8]
   140004f5a:	jmp    0x140004f60
   140004f5c:	lea    rax,[rcx+0x8]
   140004f60:	mov    BYTE PTR [rax],0x0
   140004f63:	test   rdi,rdi
   140004f66:	je     0x140004fad
   140004f68:	cmp    QWORD PTR [rsi+0x20],0x10
   140004f6d:	jb     0x140004f75
   140004f6f:	mov    rax,QWORD PTR [rsi+0x8]
   140004f73:	jmp    0x140004f79
   140004f75:	lea    rax,[rsi+0x8]
   140004f79:	mov    rdx,QWORD PTR [rbx+0x20]
   140004f7d:	lea    rsi,[rbx+0x8]
   140004f81:	cmp    rdx,0x10
   140004f85:	jb     0x140004f8c
   140004f87:	mov    rcx,QWORD PTR [rsi]
   140004f8a:	jmp    0x140004f8f
   140004f8c:	mov    rcx,rsi
   140004f8f:	lea    r8,[rax+rbp*1]
   140004f93:	mov    r9,rdi
   140004f96:	call   0x140005552
   140004f9b:	cmp    QWORD PTR [rbx+0x20],0x10
   140004fa0:	mov    QWORD PTR [rbx+0x18],rdi
   140004fa4:	jb     0x140004fa9
   140004fa6:	mov    rsi,QWORD PTR [rsi]
   140004fa9:	mov    BYTE PTR [rsi+rdi*1],0x0
   140004fad:	mov    rbp,QWORD PTR [rsp+0x38]
   140004fb2:	mov    rax,rbx
   140004fb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fba:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fbf:	add    rsp,0x20
   140004fc3:	pop    rdi
   140004fc4:	ret    
   140004fc5:	call   0x140004e70
   140004fca:	int3   
   140004fcb:	call   0x140004e14
   140004fd0:	int3   
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	mov    QWORD PTR [rsp+0x8],rbx
   140004fdd:	mov    QWORD PTR [rsp+0x10],rbp
   140004fe2:	mov    QWORD PTR [rsp+0x18],rsi
   140004fe7:	push   rdi
   140004fe8:	sub    rsp,0x20
   140004fec:	mov    rsi,r8
   140004fef:	lea    rbx,[rcx+0x8]
   140004ff3:	mov    r8,QWORD PTR [rcx+0x20]
   140004ff7:	mov    rbp,rdx
   140004ffa:	mov    rdi,rcx
   140004ffd:	cmp    r8,0x10
   140005001:	jb     0x140005008
   140005003:	mov    rax,QWORD PTR [rbx]
   140005006:	jmp    0x14000500b
   140005008:	mov    rax,rbx
   14000500b:	cmp    rdx,rax
   14000500e:	jb     0x140005046
   140005010:	cmp    r8,0x10
   140005014:	jb     0x14000501b
   140005016:	mov    rcx,QWORD PTR [rbx]
   140005019:	jmp    0x14000501e
   14000501b:	mov    rcx,rbx
   14000501e:	add    rcx,QWORD PTR [rdi+0x18]
   140005022:	cmp    rcx,rdx
   140005025:	jbe    0x140005046
   140005027:	cmp    r8,0x10
   14000502b:	jb     0x140005030
   14000502d:	mov    rbx,QWORD PTR [rbx]
   140005030:	sub    rbp,rbx
   140005033:	mov    r9,rsi
   140005036:	mov    r8,rbp
   140005039:	mov    rdx,rdi
   14000503c:	mov    rcx,rdi
   14000503f:	call   0x140004ed0
   140005044:	jmp    0x1400050b3
   140005046:	cmp    rsi,0xfffffffffffffffe
   14000504a:	ja     0x1400050c8
   14000504c:	cmp    r8,rsi
   14000504f:	jae    0x140005062
   140005051:	mov    r8,QWORD PTR [rdi+0x18]
   140005055:	mov    rdx,rsi
   140005058:	mov    rcx,rdi
   14000505b:	call   0x140004bc4
   140005060:	jmp    0x14000507c
   140005062:	test   rsi,rsi
   140005065:	jne    0x140005081
   140005067:	and    QWORD PTR [rdi+0x18],rsi
   14000506b:	cmp    r8,0x10
   14000506f:	jb     0x140005076
   140005071:	mov    rax,QWORD PTR [rbx]
   140005074:	jmp    0x140005079
   140005076:	mov    rax,rbx
   140005079:	mov    BYTE PTR [rax],0x0
   14000507c:	test   rsi,rsi
   14000507f:	je     0x1400050b0
   140005081:	mov    rdx,QWORD PTR [rdi+0x20]
   140005085:	cmp    rdx,0x10
   140005089:	jb     0x140005090
   14000508b:	mov    rcx,QWORD PTR [rbx]
   14000508e:	jmp    0x140005093
   140005090:	mov    rcx,rbx
   140005093:	mov    r9,rsi
   140005096:	mov    r8,rbp
   140005099:	call   0x140005552
   14000509e:	cmp    QWORD PTR [rdi+0x20],0x10
   1400050a3:	mov    QWORD PTR [rdi+0x18],rsi
   1400050a7:	jb     0x1400050ac
   1400050a9:	mov    rbx,QWORD PTR [rbx]
   1400050ac:	mov    BYTE PTR [rbx+rsi*1],0x0
   1400050b0:	mov    rax,rdi
   1400050b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050b8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400050bd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400050c2:	add    rsp,0x20
   1400050c6:	pop    rdi
   1400050c7:	ret    
   1400050c8:	call   0x140004e14
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	int3   
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400050d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400050de:	push   rdi
   1400050df:	sub    rsp,0x20
   1400050e3:	mov    r9,QWORD PTR [rcx+0x18]
   1400050e7:	mov    rsi,r8
   1400050ea:	mov    rax,rdx
   1400050ed:	mov    rdi,rcx
   1400050f0:	cmp    r9,rdx
   1400050f3:	jb     0x140005168
   1400050f5:	sub    r9,rax
   1400050f8:	cmp    r9,r8
   1400050fb:	cmovb  rsi,r9
   1400050ff:	test   rsi,rsi
   140005102:	je     0x140005155
   140005104:	mov    rdx,QWORD PTR [rcx+0x20]
   140005108:	lea    rbx,[rcx+0x8]
   14000510c:	cmp    rdx,0x10
   140005110:	jb     0x140005117
   140005112:	mov    r8,QWORD PTR [rbx]
   140005115:	jmp    0x14000511a
   140005117:	mov    r8,rbx
   14000511a:	cmp    rdx,0x10
   14000511e:	jb     0x140005125
   140005120:	mov    rcx,QWORD PTR [rbx]
   140005123:	jmp    0x140005128
   140005125:	mov    rcx,rbx
   140005128:	add    r8,rax
   14000512b:	sub    r9,rsi
   14000512e:	add    r8,rsi
   140005131:	sub    rdx,rax
   140005134:	add    rcx,rax
   140005137:	call   0x14000555e
   14000513c:	mov    rax,QWORD PTR [rdi+0x18]
   140005140:	sub    rax,rsi
   140005143:	cmp    QWORD PTR [rdi+0x20],0x10
   140005148:	mov    QWORD PTR [rdi+0x18],rax
   14000514c:	jb     0x140005151
   14000514e:	mov    rbx,QWORD PTR [rbx]
   140005151:	mov    BYTE PTR [rbx+rax*1],0x0
   140005155:	mov    rbx,QWORD PTR [rsp+0x30]
   14000515a:	mov    rax,rdi
   14000515d:	mov    rsi,QWORD PTR [rsp+0x38]
   140005162:	add    rsp,0x20
   140005166:	pop    rdi
   140005167:	ret    
   140005168:	call   0x140004e70
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	int3   
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	cmp    QWORD PTR [rcx+0x38],0x10
   140005185:	jb     0x14000518c
   140005187:	mov    rax,QWORD PTR [rcx+0x20]
   14000518b:	ret    
   14000518c:	lea    rax,[rcx+0x20]
   140005190:	ret    
   140005191:	int3   
   140005192:	int3   
   140005193:	int3   
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	sub    rsp,0x28
   1400051a4:	mov    eax,0x5a4d
   1400051a9:	cmp    WORD PTR [rip+0xffffffffffffae50],ax        # 0x140000000
   1400051b0:	je     0x1400051b6
   1400051b2:	xor    eax,eax
   1400051b4:	jmp    0x140005205
   1400051b6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffae7f]        # 0x14000003c
   1400051bd:	lea    rax,[rip+0xffffffffffffae3c]        # 0x140000000
   1400051c4:	add    rcx,rax
   1400051c7:	cmp    DWORD PTR [rcx],0x4550
   1400051cd:	jne    0x1400051b2
   1400051cf:	movzx  eax,WORD PTR [rcx+0x18]
   1400051d3:	cmp    eax,0x10b
   1400051d8:	je     0x1400051f4
   1400051da:	cmp    eax,0x20b
   1400051df:	jne    0x1400051b2
   1400051e1:	xor    eax,eax
   1400051e3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400051ea:	jbe    0x140005205
   1400051ec:	cmp    DWORD PTR [rcx+0xf8],eax
   1400051f2:	jmp    0x140005202
   1400051f4:	xor    eax,eax
   1400051f6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400051fa:	jbe    0x140005205
   1400051fc:	cmp    DWORD PTR [rcx+0xe8],eax
   140005202:	setne  al
   140005205:	mov    ecx,0x1
   14000520a:	mov    DWORD PTR [rip+0x4f40],eax        # 0x14000a150
   140005210:	call   0x140005a28
   140005215:	mov    ecx,eax
   140005217:	call   QWORD PTR [rip+0x1ffb]        # 0x140007218
   14000521d:	mov    rcx,QWORD PTR [rip+0x1f6c]        # 0x140007190
   140005224:	or     rax,0xffffffffffffffff
   140005228:	mov    QWORD PTR [rip+0x7521],rax        # 0x14000c750
   14000522f:	mov    QWORD PTR [rip+0x7522],rax        # 0x14000c758
   140005236:	mov    eax,DWORD PTR [rip+0x54a0]        # 0x14000a6dc
   14000523c:	mov    DWORD PTR [rcx],eax
   14000523e:	mov    rcx,QWORD PTR [rip+0x1f53]        # 0x140007198
   140005245:	mov    eax,DWORD PTR [rip+0x5485]        # 0x14000a6d0
   14000524b:	mov    DWORD PTR [rcx],eax
   14000524d:	call   0x140005a80
   140005252:	cmp    DWORD PTR [rip+0x4db7],0x0        # 0x14000a010
   140005259:	jne    0x140005268
   14000525b:	lea    rcx,[rip+0x81e]        # 0x140005a80
   140005262:	call   QWORD PTR [rip+0x1f90]        # 0x1400071f8
   140005268:	xor    eax,eax
   14000526a:	add    rsp,0x28
   14000526e:	ret    
   14000526f:	int3   
   140005270:	int3   
   140005271:	int3   
   140005272:	int3   
   140005273:	int3   
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	sub    rsp,0x38
   140005284:	mov    eax,DWORD PTR [rip+0x544e]        # 0x14000a6d8
   14000528a:	lea    r8,[rip+0x4eb7]        # 0x14000a148
   140005291:	mov    r9d,DWORD PTR [rip+0x543c]        # 0x14000a6d4
   140005298:	lea    rdx,[rip+0x4ea1]        # 0x14000a140
   14000529f:	mov    DWORD PTR [rip+0x4eaf],eax        # 0x14000a154
   1400052a5:	lea    rcx,[rip+0x4e8c]        # 0x14000a138
   1400052ac:	lea    rax,[rip+0x4ea1]        # 0x14000a154
   1400052b3:	mov    QWORD PTR [rsp+0x20],rax
   1400052b8:	call   QWORD PTR [rip+0x1f62]        # 0x140007220
   1400052be:	mov    DWORD PTR [rip+0x4e78],eax        # 0x14000a13c
   1400052c4:	add    rsp,0x38
   1400052c8:	ret    
   1400052c9:	int3   
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	int3   
   1400052cd:	int3   
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	mov    rax,rsp
   1400052d3:	mov    QWORD PTR [rax+0x8],rbx
   1400052d7:	mov    QWORD PTR [rax+0x10],rsi
   1400052db:	mov    QWORD PTR [rax+0x18],rdi
   1400052df:	mov    QWORD PTR [rax+0x20],r12
   1400052e3:	push   r14
   1400052e5:	sub    rsp,0x30
   1400052e9:	mov    rax,QWORD PTR gs:0x30
   1400052f2:	mov    rbx,QWORD PTR [rax+0x8]
   1400052f6:	xor    r14d,r14d
   1400052f9:	xor    eax,eax
   1400052fb:	lock cmpxchg QWORD PTR [rip+0x743c],rbx        # 0x14000c740
   140005304:	je     0x140005322
   140005306:	cmp    rax,rbx
   140005309:	jne    0x140005315
   14000530b:	mov    ebx,0x1
   140005310:	mov    r14d,ebx
   140005313:	jmp    0x140005327
   140005315:	mov    ecx,0x3e8
   14000531a:	call   QWORD PTR [rip+0x1dd0]        # 0x1400070f0
   140005320:	jmp    0x1400052f9
   140005322:	mov    ebx,0x1
   140005327:	mov    eax,DWORD PTR [rip+0x741b]        # 0x14000c748
   14000532d:	cmp    eax,ebx
   14000532f:	jne    0x14000533d
   140005331:	mov    ecx,0x1f
   140005336:	call   0x140005a74
   14000533b:	jmp    0x1400053a6
   14000533d:	mov    eax,DWORD PTR [rip+0x7405]        # 0x14000c748
   140005343:	test   eax,eax
   140005345:	jne    0x1400053a0
   140005347:	mov    DWORD PTR [rip+0x73fb],ebx        # 0x14000c748
   14000534d:	lea    r12,[rip+0x1ffc]        # 0x140007350
   140005354:	lea    rdi,[rip+0x1fdd]        # 0x140007338
   14000535b:	mov    QWORD PTR [rsp+0x28],rdi
   140005360:	mov    DWORD PTR [rsp+0x20],eax
   140005364:	cmp    rdi,r12
   140005367:	jae    0x140005392
   140005369:	test   eax,eax
   14000536b:	jne    0x140005396
   14000536d:	mov    rsi,QWORD PTR [rdi]
   140005370:	test   rsi,rsi
   140005373:	je     0x140005387
   140005375:	mov    rcx,rsi
   140005378:	mov    rax,QWORD PTR [rip+0x1f91]        # 0x140007310
   14000537f:	call   rax
   140005381:	call   rsi
   140005383:	mov    DWORD PTR [rsp+0x20],eax
   140005387:	add    rdi,0x8
   14000538b:	mov    QWORD PTR [rsp+0x28],rdi
   140005390:	jmp    0x140005364
   140005392:	test   eax,eax
   140005394:	je     0x1400053a6
   140005396:	mov    eax,0xff
   14000539b:	jmp    0x140005487
   1400053a0:	mov    DWORD PTR [rip+0x4d8a],ebx        # 0x14000a130
   1400053a6:	mov    eax,DWORD PTR [rip+0x739c]        # 0x14000c748
   1400053ac:	cmp    eax,ebx
   1400053ae:	jne    0x1400053cd
   1400053b0:	lea    rdx,[rip+0x1f79]        # 0x140007330
   1400053b7:	lea    rcx,[rip+0x1f62]        # 0x140007320
   1400053be:	call   0x140005c4a
   1400053c3:	mov    DWORD PTR [rip+0x737b],0x2        # 0x14000c748
   1400053cd:	test   r14d,r14d
   1400053d0:	jne    0x1400053db
   1400053d2:	xor    eax,eax
   1400053d4:	xchg   QWORD PTR [rip+0x7365],rax        # 0x14000c740
   1400053db:	cmp    QWORD PTR [rip+0x737d],0x0        # 0x14000c760
   1400053e3:	je     0x140005413
   1400053e5:	lea    rcx,[rip+0x7374]        # 0x14000c760
   1400053ec:	call   0x140005ae0
   1400053f1:	test   eax,eax
   1400053f3:	je     0x140005413
   1400053f5:	mov    rbx,QWORD PTR [rip+0x7364]        # 0x14000c760
   1400053fc:	mov    rcx,rbx
   1400053ff:	mov    rax,QWORD PTR [rip+0x1f0a]        # 0x140007310
   140005406:	call   rax
   140005408:	xor    r8d,r8d
   14000540b:	lea    edx,[r8+0x2]
   14000540f:	xor    ecx,ecx
   140005411:	call   rbx
   140005413:	mov    r8,QWORD PTR [rip+0x4d2e]        # 0x14000a148
   14000541a:	mov    rdx,QWORD PTR [rip+0x4d1f]        # 0x14000a140
   140005421:	mov    ecx,DWORD PTR [rip+0x4d11]        # 0x14000a138
   140005427:	call   0x140001230
   14000542c:	mov    DWORD PTR [rip+0x4cfa],eax        # 0x14000a12c
   140005432:	cmp    DWORD PTR [rip+0x4d17],0x0        # 0x14000a150
   140005439:	jne    0x140005443
   14000543b:	mov    ecx,eax
   14000543d:	call   QWORD PTR [rip+0x1e35]        # 0x140007278
   140005443:	cmp    DWORD PTR [rip+0x4ce6],0x0        # 0x14000a130
   14000544a:	jne    0x140005458
   14000544c:	call   QWORD PTR [rip+0x1e7e]        # 0x1400072d0
   140005452:	mov    eax,DWORD PTR [rip+0x4cd4]        # 0x14000a12c
   140005458:	jmp    0x140005487
   14000545a:	mov    DWORD PTR [rip+0x4ccc],eax        # 0x14000a12c
   140005460:	cmp    DWORD PTR [rip+0x4ce9],0x0        # 0x14000a150
   140005467:	jne    0x140005472
   140005469:	mov    ecx,eax
   14000546b:	call   QWORD PTR [rip+0x1d9f]        # 0x140007210
   140005471:	int3   
   140005472:	cmp    DWORD PTR [rip+0x4cb7],0x0        # 0x14000a130
   140005479:	jne    0x140005487
   14000547b:	call   QWORD PTR [rip+0x1e4f]        # 0x1400072d0
   140005481:	mov    eax,DWORD PTR [rip+0x4ca5]        # 0x14000a12c
   140005487:	mov    rbx,QWORD PTR [rsp+0x40]
   14000548c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005491:	mov    rdi,QWORD PTR [rsp+0x50]
   140005496:	mov    r12,QWORD PTR [rsp+0x58]
   14000549b:	add    rsp,0x30
   14000549f:	pop    r14
   1400054a1:	ret    
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	sub    rsp,0x28
   1400054b4:	call   0x140005b74
   1400054b9:	add    rsp,0x28
   1400054bd:	jmp    0x1400052d0
   1400054c2:	int3   
   1400054c3:	int3   
   1400054c4:	int3   
   1400054c5:	int3   
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	int3   
   1400054d1:	int3   
   1400054d2:	int3   
   1400054d3:	int3   
   1400054d4:	int3   
   1400054d5:	int3   
   1400054d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400054e0:	cmp    rcx,QWORD PTR [rip+0x4b19]        # 0x14000a000
   1400054e7:	jne    0x1400054f9
   1400054e9:	rol    rcx,0x10
   1400054ed:	test   cx,0xffff
   1400054f2:	jne    0x1400054f5
   1400054f4:	ret    
   1400054f5:	ror    rcx,0x10
   1400054f9:	jmp    0x1400055c0
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	int3   
   140005501:	int3   
   140005502:	int3   
   140005503:	int3   
   140005504:	jmp    QWORD PTR [rip+0x1db6]        # 0x1400072c0
   14000550a:	int3   
   14000550b:	int3   
   14000550c:	int3   
   14000550d:	int3   
   14000550e:	int3   
   14000550f:	int3   
   140005510:	mov    QWORD PTR [rsp+0x8],rbx
   140005515:	push   rdi
   140005516:	sub    rsp,0x20
   14000551a:	mov    ebx,edx
   14000551c:	mov    rdi,rcx
   14000551f:	call   QWORD PTR [rip+0x1c7b]        # 0x1400071a0
   140005525:	test   bl,0x1
   140005528:	je     0x140005532
   14000552a:	mov    rcx,rdi
   14000552d:	call   0x14000484c
   140005532:	mov    rax,rdi
   140005535:	mov    rbx,QWORD PTR [rsp+0x30]
   14000553a:	add    rsp,0x20
   14000553e:	pop    rdi
   14000553f:	ret    
   140005540:	int3   
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	jmp    QWORD PTR [rip+0x1d6c]        # 0x1400072b8
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	int3   
   140005551:	int3   
   140005552:	jmp    QWORD PTR [rip+0x1d58]        # 0x1400072b0
   140005558:	int3   
   140005559:	int3   
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	jmp    QWORD PTR [rip+0x1d44]        # 0x1400072a8
   140005564:	int3   
   140005565:	int3   
   140005566:	int3   
   140005567:	int3   
   140005568:	int3   
   140005569:	int3   
   14000556a:	int3   
   14000556b:	int3   
   14000556c:	int3   
   14000556d:	int3   
   14000556e:	int3   
   14000556f:	int3   
   140005570:	jmp    QWORD PTR [rip+0x1ce2]        # 0x140007258
   140005576:	int3   
   140005577:	int3   
   140005578:	int3   
   140005579:	int3   
   14000557a:	int3   
   14000557b:	int3   
   14000557c:	rex push rbx
   14000557e:	sub    rsp,0x20
   140005582:	mov    rbx,rcx
   140005585:	xor    ecx,ecx
   140005587:	call   QWORD PTR [rip+0x1b3b]        # 0x1400070c8
   14000558d:	mov    rcx,rbx
   140005590:	call   QWORD PTR [rip+0x1b3a]        # 0x1400070d0
   140005596:	call   QWORD PTR [rip+0x1b24]        # 0x1400070c0
   14000559c:	mov    rcx,rax
   14000559f:	mov    edx,0xc0000409
   1400055a4:	add    rsp,0x20
   1400055a8:	pop    rbx
   1400055a9:	rex.W jmp QWORD PTR [rip+0x1b08]        # 0x1400070b8
   1400055b0:	int3   
   1400055b1:	int3   
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400055c5:	sub    rsp,0x88
   1400055cc:	lea    rcx,[rip+0x4c2d]        # 0x14000a200
   1400055d3:	call   QWORD PTR [rip+0x1b0f]        # 0x1400070e8
   1400055d9:	mov    rax,QWORD PTR [rip+0x4d18]        # 0x14000a2f8
   1400055e0:	mov    QWORD PTR [rsp+0x48],rax
   1400055e5:	xor    r8d,r8d
   1400055e8:	lea    rdx,[rsp+0x50]
   1400055ed:	mov    rcx,QWORD PTR [rsp+0x48]
   1400055f2:	call   QWORD PTR [rip+0x1ae8]        # 0x1400070e0
   1400055f8:	mov    QWORD PTR [rsp+0x40],rax
   1400055fd:	cmp    QWORD PTR [rsp+0x40],0x0
   140005603:	je     0x140005647
   140005605:	mov    QWORD PTR [rsp+0x38],0x0
   14000560e:	lea    rax,[rsp+0x58]
   140005613:	mov    QWORD PTR [rsp+0x30],rax
   140005618:	lea    rax,[rsp+0x60]
   14000561d:	mov    QWORD PTR [rsp+0x28],rax
   140005622:	lea    rax,[rip+0x4bd7]        # 0x14000a200
   140005629:	mov    QWORD PTR [rsp+0x20],rax
   14000562e:	mov    r9,QWORD PTR [rsp+0x40]
   140005633:	mov    r8,QWORD PTR [rsp+0x48]
   140005638:	mov    rdx,QWORD PTR [rsp+0x50]
   14000563d:	xor    ecx,ecx
   14000563f:	call   QWORD PTR [rip+0x1a93]        # 0x1400070d8
   140005645:	jmp    0x14000566a
   140005647:	mov    rax,QWORD PTR [rip+0x4c4a]        # 0x14000a298
   14000564e:	mov    rax,QWORD PTR [rax]
   140005651:	mov    QWORD PTR [rip+0x4ca0],rax        # 0x14000a2f8
   140005658:	mov    rax,QWORD PTR [rip+0x4c39]        # 0x14000a298
   14000565f:	add    rax,0x8
   140005663:	mov    QWORD PTR [rip+0x4c2e],rax        # 0x14000a298
   14000566a:	mov    rax,QWORD PTR [rip+0x4c87]        # 0x14000a2f8
   140005671:	mov    QWORD PTR [rip+0x4af8],rax        # 0x14000a170
   140005678:	mov    rax,QWORD PTR [rsp+0x90]
   140005680:	mov    QWORD PTR [rip+0x4bf9],rax        # 0x14000a280
   140005687:	mov    DWORD PTR [rip+0x4acf],0xc0000409        # 0x14000a160
   140005691:	mov    DWORD PTR [rip+0x4ac9],0x1        # 0x14000a164
   14000569b:	mov    DWORD PTR [rip+0x4ad3],0x3        # 0x14000a178
   1400056a5:	mov    eax,0x8
   1400056aa:	imul   rax,rax,0x0
   1400056ae:	lea    rcx,[rip+0x4acb]        # 0x14000a180
   1400056b5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400056bd:	mov    eax,0x8
   1400056c2:	imul   rax,rax,0x1
   1400056c6:	lea    rcx,[rip+0x4ab3]        # 0x14000a180
   1400056cd:	mov    rdx,QWORD PTR [rip+0x492c]        # 0x14000a000
   1400056d4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400056d8:	mov    eax,0x8
   1400056dd:	imul   rax,rax,0x2
   1400056e1:	lea    rcx,[rip+0x4a98]        # 0x14000a180
   1400056e8:	mov    rdx,QWORD PTR [rip+0x4919]        # 0x14000a008
   1400056ef:	mov    QWORD PTR [rcx+rax*1],rdx
   1400056f3:	mov    eax,0x8
   1400056f8:	imul   rax,rax,0x0
   1400056fc:	mov    rcx,QWORD PTR [rip+0x48fd]        # 0x14000a000
   140005703:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005708:	mov    eax,0x8
   14000570d:	imul   rax,rax,0x1
   140005711:	mov    rcx,QWORD PTR [rip+0x48f0]        # 0x14000a008
   140005718:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000571d:	lea    rcx,[rip+0x1e54]        # 0x140007578
   140005724:	call   0x14000557c
   140005729:	add    rsp,0x88
   140005730:	ret    
   140005731:	int3   
   140005732:	int3   
   140005733:	int3   
   140005734:	int3   
   140005735:	int3   
   140005736:	int3   
   140005737:	int3   
   140005738:	mov    QWORD PTR [rsp+0x8],rbx
   14000573d:	push   rdi
   14000573e:	sub    rsp,0x20
   140005742:	mov    rdi,rcx
   140005745:	mov    rax,QWORD PTR [rip+0x700c]        # 0x14000c758
   14000574c:	mov    QWORD PTR [rsp+0x38],rax
   140005751:	cmp    rax,0xffffffffffffffff
   140005755:	jne    0x14000576e
   140005757:	mov    rbx,QWORD PTR [rip+0x1aea]        # 0x140007248
   14000575e:	mov    rcx,rbx
   140005761:	call   QWORD PTR [rip+0x1ba9]        # 0x140007310
   140005767:	mov    rcx,rdi
   14000576a:	call   rbx
   14000576c:	jmp    0x1400057cb
   14000576e:	mov    ecx,0x8
   140005773:	call   0x140005c7a
   140005778:	nop
   140005779:	mov    rax,QWORD PTR [rip+0x6fd8]        # 0x14000c758
   140005780:	mov    QWORD PTR [rsp+0x38],rax
   140005785:	mov    rax,QWORD PTR [rip+0x6fc4]        # 0x14000c750
   14000578c:	mov    QWORD PTR [rsp+0x40],rax
   140005791:	lea    r8,[rsp+0x40]
   140005796:	lea    rdx,[rsp+0x38]
   14000579b:	mov    rcx,rdi
   14000579e:	call   0x140005c92
   1400057a3:	mov    rbx,rax
   1400057a6:	mov    rdx,QWORD PTR [rsp+0x38]
   1400057ab:	mov    QWORD PTR [rip+0x6fa6],rdx        # 0x14000c758
   1400057b2:	mov    rdx,QWORD PTR [rsp+0x40]
   1400057b7:	mov    QWORD PTR [rip+0x6f92],rdx        # 0x14000c750
   1400057be:	mov    ecx,0x8
   1400057c3:	call   0x140005c86
   1400057c8:	mov    rax,rbx
   1400057cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057d0:	add    rsp,0x20
   1400057d4:	pop    rdi
   1400057d5:	ret    
   1400057d6:	int3   
   1400057d7:	int3   
   1400057d8:	int3   
   1400057d9:	int3   
   1400057da:	int3   
   1400057db:	int3   
   1400057dc:	sub    rsp,0x28
   1400057e0:	call   0x140005738
   1400057e5:	neg    rax
   1400057e8:	sbb    eax,eax
   1400057ea:	neg    eax
   1400057ec:	dec    eax
   1400057ee:	add    rsp,0x28
   1400057f2:	ret    
   1400057f3:	int3   
   1400057f4:	int3   
   1400057f5:	int3   
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	jmp    QWORD PTR [rip+0x19d0]        # 0x1400071d0
   140005800:	int3   
   140005801:	int3   
   140005802:	int3   
   140005803:	int3   
   140005804:	int3   
   140005805:	int3   
   140005806:	jmp    QWORD PTR [rip+0x19fc]        # 0x140007208
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	jmp    QWORD PTR [rip+0x19e8]        # 0x140007200
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	jmp    QWORD PTR [rip+0x1a1c]        # 0x140007240
   140005824:	int3   
   140005825:	int3   
   140005826:	int3   
   140005827:	int3   
   140005828:	int3   
   140005829:	int3   
   14000582a:	jmp    QWORD PTR [rip+0x1a08]        # 0x140007238
   140005830:	int3   
   140005831:	int3   
   140005832:	int3   
   140005833:	int3   
   140005834:	int3   
   140005835:	int3   
   140005836:	int3   
   140005837:	int3   
   140005838:	sub    rsp,0x28
   14000583c:	mov    r8,QWORD PTR [r9+0x38]
   140005840:	mov    rcx,rdx
   140005843:	mov    rdx,r9
   140005846:	call   0x14000585c
   14000584b:	mov    eax,0x1
   140005850:	add    rsp,0x28
   140005854:	ret    
   140005855:	int3   
   140005856:	int3   
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	rex push rbx
   14000585e:	sub    rsp,0x20
   140005862:	mov    r11d,DWORD PTR [r8]
   140005865:	mov    rbx,rdx
   140005868:	and    r11d,0xfffffff8
   14000586c:	mov    r9,rcx
   14000586f:	test   BYTE PTR [r8],0x4
   140005873:	mov    r10,rcx
   140005876:	je     0x14000588b
   140005878:	mov    eax,DWORD PTR [r8+0x8]
   14000587c:	movsxd r10,DWORD PTR [r8+0x4]
   140005880:	neg    eax
   140005882:	add    r10,rcx
   140005885:	movsxd rcx,eax
   140005888:	and    r10,rcx
   14000588b:	movsxd rax,r11d
   14000588e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005892:	mov    rax,QWORD PTR [rbx+0x10]
   140005896:	mov    ecx,DWORD PTR [rax+0x8]
   140005899:	add    rcx,QWORD PTR [rbx+0x8]
   14000589d:	test   BYTE PTR [rcx+0x3],0xf
   1400058a1:	je     0x1400058af
   1400058a3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400058a7:	and    eax,0xfffffff0
   1400058aa:	cdqe   
   1400058ac:	add    r9,rax
   1400058af:	xor    r9,rdx
   1400058b2:	mov    rcx,r9
   1400058b5:	add    rsp,0x20
   1400058b9:	pop    rbx
   1400058ba:	jmp    0x1400054e0
   1400058bf:	int3   
   1400058c0:	int3   
   1400058c1:	int3   
   1400058c2:	int3   
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	int3   
   1400058c7:	int3   
   1400058c8:	mov    rax,rsp
   1400058cb:	mov    QWORD PTR [rax+0x8],rbx
   1400058cf:	mov    QWORD PTR [rax+0x10],rbp
   1400058d3:	mov    QWORD PTR [rax+0x18],rsi
   1400058d7:	mov    QWORD PTR [rax+0x20],rdi
   1400058db:	push   r14
   1400058dd:	sub    rsp,0x20
   1400058e1:	mov    rbx,QWORD PTR [r9+0x38]
   1400058e5:	mov    rsi,rdx
   1400058e8:	mov    r14,r8
   1400058eb:	mov    rbp,rcx
   1400058ee:	mov    rdx,r9
   1400058f1:	mov    rcx,rsi
   1400058f4:	mov    rdi,r9
   1400058f7:	lea    r8,[rbx+0x4]
   1400058fb:	call   0x14000585c
   140005900:	mov    r11d,DWORD PTR [rbx+0x4]
   140005904:	mov    r8d,0x1
   14000590a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000590e:	mov    eax,r11d
   140005911:	and    eax,r8d
   140005914:	and    r11d,0x2
   140005918:	and    r10b,0x66
   14000591c:	cmove  r11d,eax
   140005920:	test   r11d,r11d
   140005923:	je     0x140005939
   140005925:	mov    r9,rdi
   140005928:	mov    r8,r14
   14000592b:	mov    rdx,rsi
   14000592e:	mov    rcx,rbp
   140005931:	call   0x14000582a
   140005936:	mov    r8d,eax
   140005939:	mov    rbx,QWORD PTR [rsp+0x30]
   14000593e:	mov    eax,r8d
   140005941:	mov    rbp,QWORD PTR [rsp+0x38]
   140005946:	mov    rsi,QWORD PTR [rsp+0x40]
   14000594b:	mov    rdi,QWORD PTR [rsp+0x48]
   140005950:	add    rsp,0x20
   140005954:	pop    r14
   140005956:	ret    
   140005957:	int3   
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	sub    rsp,0x28
   140005964:	mov    rax,QWORD PTR [rcx]
   140005967:	cmp    DWORD PTR [rax],0xe06d7363
   14000596d:	jne    0x140005992
   14000596f:	cmp    DWORD PTR [rax+0x18],0x4
   140005973:	jne    0x140005992
   140005975:	mov    ecx,DWORD PTR [rax+0x20]
   140005978:	lea    eax,[rcx-0x19930520]
   14000597e:	cmp    eax,0x2
   140005981:	jbe    0x14000598b
   140005983:	cmp    ecx,0x1994000
   140005989:	jne    0x140005992
   14000598b:	call   QWORD PTR [rip+0x1837]        # 0x1400071c8
   140005991:	int3   
   140005992:	xor    eax,eax
   140005994:	add    rsp,0x28
   140005998:	ret    
   140005999:	int3   
   14000599a:	int3   
   14000599b:	int3   
   14000599c:	int3   
   14000599d:	int3   
   14000599e:	int3   
   14000599f:	int3   
   1400059a0:	sub    rsp,0x28
   1400059a4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005960
   1400059ab:	call   QWORD PTR [rip+0x1717]        # 0x1400070c8
   1400059b1:	xor    eax,eax
   1400059b3:	add    rsp,0x28
   1400059b7:	ret    
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	jmp    QWORD PTR [rip+0x186c]        # 0x140007230
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	sub    rsp,0x18
   1400059d0:	xor    edx,edx
   1400059d2:	lea    rax,[rcx-0x1]
   1400059d6:	cmp    rax,0xfffffffffffffffd
   1400059da:	ja     0x140005a18
   1400059dc:	mov    eax,0x5a4d
   1400059e1:	cmp    WORD PTR [rcx],ax
   1400059e4:	jne    0x140005a10
   1400059e6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400059e9:	jl     0x140005a10
   1400059eb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400059f2:	jae    0x140005a10
   1400059f4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400059f8:	add    rax,rcx
   1400059fb:	mov    QWORD PTR [rsp],rax
   1400059ff:	cmp    DWORD PTR [rax],0x4550
   140005a05:	cmovne rax,rdx
   140005a09:	mov    rdx,rax
   140005a0c:	mov    QWORD PTR [rsp],rax
   140005a10:	jmp    0x140005a18
   140005a12:	xor    edx,edx
   140005a14:	mov    QWORD PTR [rsp],rdx
   140005a18:	mov    rax,rdx
   140005a1b:	add    rsp,0x18
   140005a1f:	ret    
   140005a20:	int3   
   140005a21:	int3   
   140005a22:	int3   
   140005a23:	int3   
   140005a24:	int3   
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	rex push rbx
   140005a2a:	sub    rsp,0x20
   140005a2e:	mov    ebx,ecx
   140005a30:	xor    ecx,ecx
   140005a32:	call   QWORD PTR [rip+0x1600]        # 0x140007038
   140005a38:	test   rax,rax
   140005a3b:	je     0x140005a65
   140005a3d:	mov    rcx,rax
   140005a40:	call   0x1400059cc
   140005a45:	test   rax,rax
   140005a48:	je     0x140005a65
   140005a4a:	mov    ecx,0x2
   140005a4f:	cmp    WORD PTR [rax+0x5c],cx
   140005a53:	jne    0x140005a59
   140005a55:	mov    eax,ecx
   140005a57:	jmp    0x140005a67
   140005a59:	cmp    WORD PTR [rax+0x5c],0x3
   140005a5e:	mov    eax,0x1
   140005a63:	je     0x140005a67
   140005a65:	mov    eax,ebx
   140005a67:	add    rsp,0x20
   140005a6b:	pop    rbx
   140005a6c:	ret    
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	int3   
   140005a71:	int3   
   140005a72:	int3   
   140005a73:	int3   
   140005a74:	jmp    QWORD PTR [rip+0x17ae]        # 0x140007228
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	int3   
   140005a7d:	int3   
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	xor    eax,eax
   140005a82:	ret    
   140005a83:	int3   
   140005a84:	int3   
   140005a85:	int3   
   140005a86:	int3   
   140005a87:	int3   
   140005a88:	int3   
   140005a89:	int3   
   140005a8a:	int3   
   140005a8b:	int3   
   140005a8c:	int3   
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005a94:	xor    r9d,r9d
   140005a97:	add    r8,rcx
   140005a9a:	mov    r10,rdx
   140005a9d:	movzx  eax,WORD PTR [r8+0x14]
   140005aa2:	movzx  r11d,WORD PTR [r8+0x6]
   140005aa7:	add    rax,0x18
   140005aab:	add    rax,r8
   140005aae:	test   r11d,r11d
   140005ab1:	je     0x140005ad1
   140005ab3:	mov    edx,DWORD PTR [rax+0xc]
   140005ab6:	cmp    r10,rdx
   140005ab9:	jb     0x140005ac5
   140005abb:	mov    ecx,DWORD PTR [rax+0x8]
   140005abe:	add    ecx,edx
   140005ac0:	cmp    r10,rcx
   140005ac3:	jb     0x140005ad3
   140005ac5:	inc    r9d
   140005ac8:	add    rax,0x28
   140005acc:	cmp    r9d,r11d
   140005acf:	jb     0x140005ab3
   140005ad1:	xor    eax,eax
   140005ad3:	ret    
   140005ad4:	int3   
   140005ad5:	int3   
   140005ad6:	int3   
   140005ad7:	int3   
   140005ad8:	int3   
   140005ad9:	int3   
   140005ada:	int3   
   140005adb:	int3   
   140005adc:	int3   
   140005add:	int3   
   140005ade:	int3   
   140005adf:	int3   
   140005ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ae5:	push   rdi
   140005ae6:	sub    rsp,0x20
   140005aea:	mov    rbx,rcx
   140005aed:	lea    rdi,[rip+0xffffffffffffa50c]        # 0x140000000
   140005af4:	mov    rcx,rdi
   140005af7:	call   0x140005b40
   140005afc:	test   eax,eax
   140005afe:	je     0x140005b22
   140005b00:	sub    rbx,rdi
   140005b03:	mov    rdx,rbx
   140005b06:	mov    rcx,rdi
   140005b09:	call   0x140005a90
   140005b0e:	test   rax,rax
   140005b11:	je     0x140005b22
   140005b13:	mov    eax,DWORD PTR [rax+0x24]
   140005b16:	shr    eax,0x1f
   140005b19:	not    eax
   140005b1b:	and    eax,0x1
   140005b1e:	jmp    0x140005b22
   140005b20:	xor    eax,eax
   140005b22:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b27:	add    rsp,0x20
   140005b2b:	pop    rdi
   140005b2c:	ret    
   140005b2d:	int3   
   140005b2e:	int3   
   140005b2f:	int3   
   140005b30:	int3   
   140005b31:	int3   
   140005b32:	int3   
   140005b33:	int3   
   140005b34:	int3   
   140005b35:	int3   
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	int3   
   140005b39:	int3   
   140005b3a:	int3   
   140005b3b:	int3   
   140005b3c:	int3   
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	mov    rax,rcx
   140005b43:	mov    ecx,0x5a4d
   140005b48:	cmp    WORD PTR [rax],cx
   140005b4b:	je     0x140005b50
   140005b4d:	xor    eax,eax
   140005b4f:	ret    
   140005b50:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005b54:	add    rcx,rax
   140005b57:	xor    eax,eax
   140005b59:	cmp    DWORD PTR [rcx],0x4550
   140005b5f:	jne    0x140005b6d
   140005b61:	mov    edx,0x20b
   140005b66:	cmp    WORD PTR [rcx+0x18],dx
   140005b6a:	sete   al
   140005b6d:	ret    
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	int3   
   140005b71:	int3   
   140005b72:	int3   
   140005b73:	int3   
   140005b74:	mov    QWORD PTR [rsp+0x20],rbx
   140005b79:	push   rbp
   140005b7a:	mov    rbp,rsp
   140005b7d:	sub    rsp,0x20
   140005b81:	and    QWORD PTR [rbp+0x18],0x0
   140005b86:	movabs rbx,0x2b992ddfa232
   140005b90:	mov    rax,QWORD PTR [rip+0x4469]        # 0x14000a000
   140005b97:	cmp    rax,rbx
   140005b9a:	jne    0x140005c2f
   140005ba0:	lea    rcx,[rbp+0x18]
   140005ba4:	call   QWORD PTR [rip+0x14ee]        # 0x140007098
   140005baa:	mov    rax,QWORD PTR [rbp+0x18]
   140005bae:	mov    QWORD PTR [rbp+0x10],rax
   140005bb2:	call   QWORD PTR [rip+0x14f0]        # 0x1400070a8
   140005bb8:	mov    eax,eax
   140005bba:	xor    QWORD PTR [rbp+0x10],rax
   140005bbe:	call   QWORD PTR [rip+0x14dc]        # 0x1400070a0
   140005bc4:	mov    eax,eax
   140005bc6:	xor    QWORD PTR [rbp+0x10],rax
   140005bca:	call   QWORD PTR [rip+0x14c0]        # 0x140007090
   140005bd0:	mov    eax,eax
   140005bd2:	shl    rax,0x18
   140005bd6:	xor    QWORD PTR [rbp+0x10],rax
   140005bda:	call   QWORD PTR [rip+0x14b0]        # 0x140007090
   140005be0:	mov    eax,eax
   140005be2:	lea    rcx,[rbp+0x10]
   140005be6:	xor    rax,QWORD PTR [rbp+0x10]
   140005bea:	xor    rax,rcx
   140005bed:	lea    rcx,[rbp+0x20]
   140005bf1:	mov    QWORD PTR [rbp+0x10],rax
   140005bf5:	call   QWORD PTR [rip+0x14b5]        # 0x1400070b0
   140005bfb:	mov    eax,DWORD PTR [rbp+0x20]
   140005bfe:	movabs rcx,0xffffffffffff
   140005c08:	shl    rax,0x20
   140005c0c:	xor    rax,QWORD PTR [rbp+0x20]
   140005c10:	xor    rax,QWORD PTR [rbp+0x10]
   140005c14:	and    rax,rcx
   140005c17:	movabs rcx,0x2b992ddfa233
   140005c21:	cmp    rax,rbx
   140005c24:	cmove  rax,rcx
   140005c28:	mov    QWORD PTR [rip+0x43d1],rax        # 0x14000a000
   140005c2f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005c34:	not    rax
   140005c37:	mov    QWORD PTR [rip+0x43ca],rax        # 0x14000a008
   140005c3e:	add    rsp,0x20
   140005c42:	pop    rbp
   140005c43:	ret    
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	int3   
   140005c49:	int3   
   140005c4a:	jmp    QWORD PTR [rip+0x1570]        # 0x1400071c0
   140005c50:	int3   
   140005c51:	int3   
   140005c52:	int3   
   140005c53:	int3   
   140005c54:	int3   
   140005c55:	int3   
   140005c56:	jmp    QWORD PTR [rip+0x152c]        # 0x140007188
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	int3   
   140005c61:	int3   
   140005c62:	int3   
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	ret    0x0
   140005c73:	int3   
   140005c74:	int3   
   140005c75:	int3   
   140005c76:	int3   
   140005c77:	int3   
   140005c78:	int3   
   140005c79:	int3   
   140005c7a:	jmp    QWORD PTR [rip+0x1528]        # 0x1400071a8
   140005c80:	int3   
   140005c81:	int3   
   140005c82:	int3   
   140005c83:	int3   
   140005c84:	int3   
   140005c85:	int3   
   140005c86:	jmp    QWORD PTR [rip+0x1524]        # 0x1400071b0
   140005c8c:	int3   
   140005c8d:	int3   
   140005c8e:	int3   
   140005c8f:	int3   
   140005c90:	int3   
   140005c91:	int3   
   140005c92:	jmp    QWORD PTR [rip+0x1520]        # 0x1400071b8
   140005c98:	int3   
   140005c99:	int3   
   140005c9a:	int3   
   140005c9b:	int3   
   140005c9c:	int3   
   140005c9d:	int3   
   140005c9e:	int3   
   140005c9f:	int3   
   140005ca0:	int3   
   140005ca1:	int3   
   140005ca2:	int3   
   140005ca3:	int3   
   140005ca4:	int3   
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	int3   
   140005ca9:	int3   
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	int3   
   140005cad:	int3   
   140005cae:	int3   
   140005caf:	int3   
   140005cb0:	lea    rax,[rip+0x8351]        # 0x14000e008
   140005cb7:	jmp    0x140005cd0
   140005cbc:	int3   
   140005cbd:	int3   
   140005cbe:	int3   
   140005cbf:	int3   
   140005cc0:	int3   
   140005cc1:	int3   
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	int3   
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	int3   
   140005cc9:	int3   
   140005cca:	int3   
   140005ccb:	int3   
   140005ccc:	int3   
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	mov    QWORD PTR [rsp+0x8],rcx
   140005cd5:	mov    QWORD PTR [rsp+0x10],rdx
   140005cda:	mov    QWORD PTR [rsp+0x18],r8
   140005cdf:	mov    QWORD PTR [rsp+0x20],r9
   140005ce4:	sub    rsp,0x68
   140005ce8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140005cee:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140005cf4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140005cfa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140005d00:	mov    rdx,rax
   140005d03:	lea    rcx,[rip+0x2c92]        # 0x14000899c
   140005d0a:	call   0x140004240
   140005d0f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005d15:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140005d1b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140005d21:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140005d27:	mov    rcx,QWORD PTR [rsp+0x70]
   140005d2c:	mov    rdx,QWORD PTR [rsp+0x78]
   140005d31:	mov    r8,QWORD PTR [rsp+0x80]
   140005d39:	mov    r9,QWORD PTR [rsp+0x88]
   140005d41:	add    rsp,0x68
   140005d45:	jmp    0x140005d47
   140005d47:	jmp    rax
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	lea    rax,[rip+0x82a9]        # 0x14000e000
   140005d57:	jmp    0x140005cd0
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	int3   
   140005d61:	int3   
   140005d62:	jmp    QWORD PTR [rip+0x1570]        # 0x1400072d8
   140005d68:	int3   
   140005d69:	int3   
   140005d6a:	int3   
   140005d6b:	int3   
   140005d6c:	int3   
   140005d6d:	int3   
   140005d6e:	int3   
   140005d6f:	int3   
   140005d70:	int3   
   140005d71:	int3   
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005d80:	jmp    rax
   140005d82:	int3   
   140005d83:	int3   
   140005d84:	int3   
   140005d85:	int3   
   140005d86:	int3   
   140005d87:	int3   
   140005d88:	int3   
   140005d89:	int3   
   140005d8a:	int3   
   140005d8b:	int3   
   140005d8c:	int3   
   140005d8d:	int3   
   140005d8e:	int3   
   140005d8f:	int3   
   140005d90:	int3   
   140005d91:	int3   
   140005d92:	int3   
   140005d93:	int3   
   140005d94:	int3   
   140005d95:	int3   
   140005d96:	mov    QWORD PTR [rsp+0x10],rdx
   140005d9b:	push   rbp
   140005d9c:	sub    rsp,0x20
   140005da0:	mov    rbp,rdx
   140005da3:	call   QWORD PTR [rip+0x1297]        # 0x140007040
   140005da9:	mov    edx,eax
   140005dab:	mov    ecx,0x6
   140005db0:	call   0x140001178
   140005db5:	nop
   140005db6:	lea    rax,[rip+0xffffffffffffb56a]        # 0x140001327
   140005dbd:	add    rsp,0x20
   140005dc1:	pop    rbp
   140005dc2:	ret    
   140005dc3:	int3   
   140005dc4:	int3   
   140005dc5:	int3   
   140005dc6:	int3   
   140005dc7:	int3   
   140005dc8:	int3   
   140005dc9:	int3   
   140005dca:	lea    rcx,[rdx+0xa0]
   140005dd1:	jmp    0x140001e68
   140005dd6:	lea    rcx,[rdx+0x28]
   140005ddd:	jmp    0x140001e68
   140005de2:	lea    rcx,[rdx+0x50]
   140005de9:	jmp    0x140001e68
   140005dee:	lea    rcx,[rdx+0x78]
   140005df5:	jmp    0x140001e68
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	mov    QWORD PTR [rsp+0x10],rdx
   140005e05:	push   rbp
   140005e06:	sub    rsp,0x20
   140005e0a:	mov    rbp,rdx
   140005e0d:	mov    rcx,QWORD PTR [rbp+0x98]
   140005e14:	mov    QWORD PTR [rbp+0x98],rcx
   140005e1b:	add    rcx,0x1
   140005e1f:	je     0x140005e4b
   140005e21:	xor    edx,edx
   140005e23:	or     rax,0xffffffffffffffff
   140005e27:	div    rcx
   140005e2a:	cmp    rax,0x2
   140005e2e:	jae    0x140005e4b
   140005e30:	xor    edx,edx
   140005e32:	lea    rcx,[rbp+0x40]
   140005e36:	call   0x140001008
   140005e3b:	lea    rdx,[rip+0x2b16]        # 0x140008958
   140005e42:	lea    rcx,[rbp+0x40]
   140005e46:	call   0x140005812
   140005e4b:	add    rcx,rcx
   140005e4e:	call   0x14000474c
   140005e53:	mov    QWORD PTR [rbp+0xa8],rax
   140005e5a:	lea    rax,[rip+0xffffffffffffc42d]        # 0x14000228e
   140005e61:	add    rsp,0x20
   140005e65:	pop    rbp
   140005e66:	ret    
   140005e67:	int3   
   140005e68:	mov    QWORD PTR [rsp+0x10],rdx
   140005e6d:	push   rbp
   140005e6e:	sub    rsp,0x20
   140005e72:	mov    rbp,rdx
   140005e75:	xor    r8d,r8d
   140005e78:	mov    dl,0x1
   140005e7a:	mov    rcx,QWORD PTR [rbp+0x90]
   140005e81:	call   0x140002020
   140005e86:	xor    edx,edx
   140005e88:	xor    ecx,ecx
   140005e8a:	call   0x140005812
   140005e8f:	nop
   140005e90:	int3   
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	int3   
   140005e95:	int3   
   140005e96:	mov    rcx,QWORD PTR [rdx+0x40]
   140005e9d:	jmp    0x140005504
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	int3   
   140005ea5:	int3   
   140005ea6:	int3   
   140005ea7:	int3   
   140005ea8:	mov    QWORD PTR [rsp+0x10],rdx
   140005ead:	push   rbp
   140005eae:	sub    rsp,0x20
   140005eb2:	mov    rbp,rdx
   140005eb5:	mov    rcx,QWORD PTR [rbp+0x98]
   140005ebc:	mov    QWORD PTR [rbp+0x98],rcx
   140005ec3:	add    rcx,0x1
   140005ec7:	je     0x140005ef3
   140005ec9:	xor    edx,edx
   140005ecb:	or     rax,0xffffffffffffffff
   140005ecf:	div    rcx
   140005ed2:	cmp    rax,0x1
   140005ed6:	jae    0x140005ef3
   140005ed8:	xor    edx,edx
   140005eda:	lea    rcx,[rbp+0x40]
   140005ede:	call   0x140001008
   140005ee3:	lea    rdx,[rip+0x2a6e]        # 0x140008958
   140005eea:	lea    rcx,[rbp+0x40]
   140005eee:	call   0x140005812
   140005ef3:	call   0x14000474c
   140005ef8:	mov    QWORD PTR [rbp+0xa8],rax
   140005eff:	lea    rax,[rip+0xffffffffffffed66]        # 0x140004c6c
   140005f06:	add    rsp,0x20
   140005f0a:	pop    rbp
   140005f0b:	ret    
   140005f0c:	int3   
   140005f0d:	mov    QWORD PTR [rsp+0x10],rdx
   140005f12:	push   rbp
   140005f13:	sub    rsp,0x20
   140005f17:	mov    rbp,rdx
   140005f1a:	xor    r8d,r8d
   140005f1d:	mov    dl,0x1
   140005f1f:	mov    rcx,QWORD PTR [rbp+0x90]
   140005f26:	call   0x140004da8
   140005f2b:	xor    edx,edx
   140005f2d:	xor    ecx,ecx
   140005f2f:	call   0x140005812
   140005f34:	nop
   140005f35:	int3   
   140005f36:	int3   
   140005f37:	int3   
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	lea    rcx,[rdx+0x28]
   140005f42:	jmp    0x140004ad8
   140005f47:	int3   
   140005f48:	int3   
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	rex push rbp
   140005f4f:	sub    rsp,0x20
   140005f53:	mov    rbp,rdx
   140005f56:	mov    rax,QWORD PTR [rcx]
   140005f59:	mov    rdx,rcx
   140005f5c:	mov    ecx,DWORD PTR [rax]
   140005f5e:	call   0x1400059be
   140005f63:	nop
   140005f64:	add    rsp,0x20
   140005f68:	pop    rbp
   140005f69:	ret    
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	int3   
   140005f71:	rex push rbp
   140005f73:	sub    rsp,0x20
   140005f77:	mov    rbp,rdx
   140005f7a:	mov    ecx,0x8
   140005f7f:	call   0x140005c86
   140005f84:	nop
   140005f85:	add    rsp,0x20
   140005f89:	pop    rbp
   140005f8a:	ret    
   140005f8b:	int3   
   140005f8c:	int3   
   140005f8d:	int3   
   140005f8e:	int3   
   140005f8f:	int3   
   140005f90:	int3   
   140005f91:	int3   
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	rex push rbp
   140005fa2:	sub    rsp,0x20
   140005fa6:	mov    rbp,rdx
   140005fa9:	mov    rax,QWORD PTR [rcx]
   140005fac:	xor    ecx,ecx
   140005fae:	cmp    DWORD PTR [rax],0xc0000005
   140005fb4:	sete   cl
   140005fb7:	mov    eax,ecx
   140005fb9:	add    rsp,0x20
   140005fbd:	pop    rbp
   140005fbe:	ret    
   140005fbf:	int3   
   140005fc0:	int3   
   140005fc1:	int3   
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	lea    rax,[rip+0x1671]        # 0x140007648
   140005fd7:	lea    rcx,[rip+0x4112]        # 0x14000a0f0
   140005fde:	mov    QWORD PTR [rip+0x410b],rax        # 0x14000a0f0
   140005fe5:	jmp    0x140005504
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	lea    rax,[rip+0x1651]        # 0x140007648
   140005ff7:	lea    rcx,[rip+0x4112]        # 0x14000a110
   140005ffe:	mov    QWORD PTR [rip+0x410b],rax        # 0x14000a110
   140006005:	jmp    0x140005504

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	out    0x8d,al
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	fmul   DWORD PTR [rbp+0x0]
	...
   140007016:	add    BYTE PTR [rax],al
   140007018:	add    cl,BYTE PTR [rsi+0x0]
   14000701e:	add    BYTE PTR [rax],al
   140007020:	adc    al,0x8e
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	xor    al,0x8e
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	rex.WX mov es,WORD PTR [rax]
   140007033:	add    BYTE PTR [rax],al
   140007035:	add    BYTE PTR [rax],al
   140007037:	add    BYTE PTR [rax-0x72],ah
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	je     0x140006fd0
   140007042:	add    BYTE PTR [rax],al
   140007044:	add    BYTE PTR [rax],al
   140007046:	add    BYTE PTR [rax],al
   140007048:	test   BYTE PTR [rsi+0x0],cl
   14000704e:	add    BYTE PTR [rax],al
   140007050:	xchg   edx,eax
   140007051:	mov    es,WORD PTR [rax]
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rdx+0x8e],ch
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rsi+0x8e],dh
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    al,cl
   140007069:	mov    es,WORD PTR [rax]
   14000706b:	add    BYTE PTR [rax],al
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    ah,dl
   140007071:	mov    es,WORD PTR [rax]
   140007073:	add    BYTE PTR [rax],al
   140007075:	add    BYTE PTR [rax],al
   140007077:	add    dl,ah
   140007079:	xchg   ebx,eax
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	(bad)  
   140007081:	xchg   ebx,eax
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	(bad)  
   140007089:	xchg   ebx,eax
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	mov    ah,0x93
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	(bad)  
   140007099:	xchg   ebx,eax
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	test   BYTE PTR [rbx+0x0],dl
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	outs   dx,BYTE PTR ds:[rsi]
   1400070a9:	xchg   ebx,eax
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	push   rsp
   1400070b1:	xchg   ebx,eax
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	rex xchg ebx,eax
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	sub    al,0x93
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	(bad)  
   1400070c9:	xchg   ebx,eax
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	repnz xchg edx,eax
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	ficom  WORD PTR [rdx+0x0]
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	(bad)  
   1400070e1:	xchg   edx,eax
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	mov    al,0x92
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	test   al,0x92
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	(bad)  
   1400070f9:	xchg   esp,eax
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140007107:	add    BYTE PTR [rdx],bh
   140007109:	xchg   esp,eax
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	rex.WX xchg rsp,rax
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rax],al
   140007118:	pop    rsp
   140007119:	xchg   esp,eax
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	cld    
   140007121:	xchg   ebx,eax
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	add    al,0x0
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax+0x7],al
   14000713c:	add    BYTE PTR [rax],al
   14000713e:	add    BYTE PTR [rax+0x6],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax+0x0],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	cmp    BYTE PTR [rdx+0x0],dl
   140007156:	add    BYTE PTR [rax],al
   140007158:	hlt    
   140007159:	xchg   ecx,eax
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	push   rsi
   140007161:	xchg   edx,eax
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	jp     0x1400070fc
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	or     BYTE PTR [rdx+0x0],dl
   140007176:	add    BYTE PTR [rax],al
   140007178:	and    BYTE PTR [rdx+0x0],dl
	...
   140007186:	add    BYTE PTR [rax],al
   140007188:	add    al,0x91
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	sbb    al,0x91
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	es xchg ecx,eax
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	ds xchg ecx,eax
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	push   rsi
   1400071a9:	xchg   ecx,eax
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	pop    rsi
   1400071b1:	xchg   ecx,eax
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	add    BYTE PTR [rax],al
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	push   0x91
   1400071bd:	add    BYTE PTR [rax],al
   1400071bf:	add    al,bh
   1400071c1:	nop
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	adc    BYTE PTR [rcx+0x0],0x0
   1400071cf:	add    BYTE PTR [rdx],ah
   1400071d1:	nop
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	sbb    BYTE PTR [rax+0x0],dl
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	adc    BYTE PTR [rax+0x0],dl
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	add    al,0x90
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	cli    
   1400071f1:	pop    QWORD PTR [rax]
   1400071f3:	add    BYTE PTR [rax],al
   1400071f5:	add    BYTE PTR [rax],al
   1400071f7:	add    ah,ah
   1400071f9:	nop
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	rex.WRX xchg rax,rax
   140007202:	add    BYTE PTR [rax],al
   140007204:	add    BYTE PTR [rax],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	rex.X xchg eax,eax
   14000720a:	add    BYTE PTR [rax],al
   14000720c:	add    BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	rcl    BYTE PTR [rax+0x0],cl
   140007216:	add    BYTE PTR [rax],al
   140007218:	rcl    BYTE PTR [rax+0x0],0x0
   14000721f:	add    BYTE PTR [rsi+0x90],ch
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rax+0x90],ah
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rdx+0x90],dl
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    BYTE PTR [rax+rdx*4+0x0],bh
   14000723b:	add    BYTE PTR [rax],al
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    BYTE PTR [rax+rdx*4+0x0],ah
   140007243:	add    BYTE PTR [rax],al
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    BYTE PTR [rsi-0x6f],dh
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	add    BYTE PTR [rax],al
   14000724e:	add    BYTE PTR [rax],al
   140007250:	lock pop QWORD PTR [rax]
   140007253:	add    BYTE PTR [rax],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    dl,dl
   140007259:	pop    QWORD PTR [rax]
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    dh,al
   140007261:	pop    QWORD PTR [rax]
   140007263:	add    BYTE PTR [rax],al
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rdi+rcx*4+0x0],bh
   14000726e:	add    BYTE PTR [rax],al
   140007270:	mov    al,0x8f
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	test   al,0x8f
   14000727a:	add    BYTE PTR [rax],al
   14000727c:	add    BYTE PTR [rax],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	sahf   
   140007281:	pop    QWORD PTR [rax]
   140007283:	add    BYTE PTR [rax],al
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rdx+0x8f],dl
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rdi+rcx*4+0x0],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	jp     0x140007229
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	ins    BYTE PTR es:[rdi],dx
   1400072a1:	pop    QWORD PTR [rax]
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rax-0x71],ah
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	push   rsp
   1400072b1:	pop    QWORD PTR [rax]
   1400072b3:	add    BYTE PTR [rax],al
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rsi],dh
   1400072b9:	pop    QWORD PTR [rax]
   1400072bb:	add    BYTE PTR [rax],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    BYTE PTR [rsi],bl
   1400072c1:	pop    QWORD PTR [rax]
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    dh,bh
   1400072c9:	mov    es,WORD PTR [rax]
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    dl,bl
   1400072d1:	nop
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	outs   dx,BYTE PTR ds:[rsi]
   1400072d9:	xchg   esp,eax
	...
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	mov    eax,0x91
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rsi+0x91],ah
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rcx+rdx*4+0x0],dl
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	enter  0x91,0x0
	...
   140007310:	jo     0x14000736e
   140007312:	add    BYTE PTR [rax+0x1],al
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rax+0x140005d],al
	...
   140007325:	add    BYTE PTR [rax],al
   140007327:	add    BYTE PTR [rax+0x1400052],al
	...
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rax+0x1400051],ah
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rax+0x1400059],ah
	...
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rax+0x10],ah
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	nop
   14000735d:	adc    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rax+0x42],al
   140007362:	add    BYTE PTR [rax],al
   140007364:	(bad)  
   140007365:	rex.WXB add BYTE PTR [r8],al
   140007368:	lock rex.WR add BYTE PTR [rax],r8b
   14000736c:	xor    BYTE PTR [rbp+0x0],cl
   14000736f:	add    BYTE PTR [rax+0x4d],dh
   140007372:	add    BYTE PTR [rax],al
   140007374:	adc    BYTE PTR [rcx+0x0],0x0
   140007378:	movabs al,ds:0xb000005280000051
   140007381:	push   rsp
   140007382:	add    BYTE PTR [rax],al
   140007384:	adc    BYTE PTR [rbp+0x0],dl
   140007387:	add    BYTE PTR [rax+0x55],dh
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	rcl    BYTE PTR [rbp+0x0],0x0
   140007390:	(bad)  
   140007391:	pop    rcx
   140007392:	add    BYTE PTR [rax],al
   140007394:	movabs al,ds:0x7000005a80000059
   14000739d:	pop    rsp
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	mov    al,0x5c
   1400073a2:	add    BYTE PTR [rax],al
   1400073a4:	rcr    BYTE PTR [rax+rax*1+0x0],1
   1400073a8:	push   rax
   1400073a9:	pop    rbp
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	rcr    BYTE PTR [rdi+0x0],1
   1400073af:	add    al,dh
   1400073b1:	pop    rdi
	...
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018d59
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	xor    al,0x85
	...
   1400073d2:	add    BYTE PTR [rax],al
   1400073d4:	add    al,BYTE PTR [rax]
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	adc    BYTE PTR [rbp+0x200000],al
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	add    BYTE PTR [rax],al
   1400073e2:	add    BYTE PTR [rax],al
   1400073e4:	add    DWORD PTR [rax],eax
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	and    al,BYTE PTR [rip+0x11993]        # 0x140018d81
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	xor    al,0x85
	...
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    al,BYTE PTR [rax]
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	rex test DWORD PTR [rax],eax
   140007403:	add    BYTE PTR [rax],ah
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax],al
   140007409:	add    BYTE PTR [rax],al
   14000740b:	add    BYTE PTR [rcx],al
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rdx],ah
   140007411:	add    eax,0x41993
   140007416:	add    BYTE PTR [rax],al
   140007418:	fs (bad) 
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	add    al,BYTE PTR [rax]
   14000741e:	add    BYTE PTR [rax],al
   140007420:	push   0x8000085
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    al,al
   140007429:	test   DWORD PTR [rax],eax
   14000742b:	add    BYTE PTR [rax],ah
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rax],al
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rcx],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rdx],ah
   140007439:	add    eax,0x11993
   14000743e:	add    BYTE PTR [rax],al
   140007440:	hlt    
   140007441:	xchg   BYTE PTR [rax],al
	...
   14000744b:	add    BYTE PTR [rbx],al
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rax],ch
   140007451:	xchg   BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rax],ah
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rax],al
   140007459:	add    BYTE PTR [rax],al
   14000745b:	add    BYTE PTR [rcx],al
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    BYTE PTR [rdx],ah
   140007461:	add    eax,0x11993
   140007466:	add    BYTE PTR [rax],al
   140007468:	hlt    
   140007469:	xchg   BYTE PTR [rax],al
	...
   140007473:	add    BYTE PTR [rbx],al
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rax-0x7a],bl
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	and    BYTE PTR [rax],al
   14000747e:	add    BYTE PTR [rax],al
   140007480:	add    BYTE PTR [rax],al
   140007482:	add    BYTE PTR [rax],al
   140007484:	add    DWORD PTR [rax],eax
   140007486:	add    BYTE PTR [rax],al
   140007488:	and    al,BYTE PTR [rip+0x11993]        # 0x140018e21
   14000748e:	add    BYTE PTR [rax],al
   140007490:	hlt    
   140007491:	xchg   BYTE PTR [rax],al
	...
   14000749b:	add    BYTE PTR [rbx],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rax+0x20000086],bl
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax],al
   1400074a9:	add    BYTE PTR [rax],al
   1400074ab:	add    BYTE PTR [rcx],al
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rdx],ah
   1400074b1:	add    eax,0x11993
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	hlt    
   1400074b9:	xchg   BYTE PTR [rax],al
	...
   1400074c3:	add    BYTE PTR [rbx],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    al,cl
   1400074c9:	xchg   BYTE PTR [rax],al
   1400074cb:	add    BYTE PTR [rax],ah
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rax],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rcx],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rdx],ah
   1400074d9:	add    eax,0x11993
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	hlt    
   1400074e1:	xchg   BYTE PTR [rax],al
	...
   1400074eb:	add    BYTE PTR [rbx],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax],al
   1400074f1:	xchg   DWORD PTR [rax],eax
   1400074f3:	add    BYTE PTR [rax],ah
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rax],al
   1400074f9:	add    BYTE PTR [rax],al
   1400074fb:	add    BYTE PTR [rcx],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rax+0x4b],ah
   140007502:	add    BYTE PTR [rax+0x1],al
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rax+0x1400051],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax],dh
   140007511:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rax+0x4b],ah
   14000751a:	add    BYTE PTR [rax+0x1],al
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rax+0x1400051],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    al,dh
   140007529:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    BYTE PTR [rax+0x4b],ah
   140007532:	add    BYTE PTR [rax+0x1],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rax+0x1400051],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    BYTE PTR [rax+0x4d],dh
   140007542:	add    BYTE PTR [rax+0x1],al
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    BYTE PTR [rbx+0x74],dh
   14000754a:	jb     0x1400075b5
   14000754c:	outs   dx,BYTE PTR ds:[rsi]
   14000754d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140007552:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140007556:	add    BYTE PTR [ecx+0x6e],ch
   14000755a:	jbe    0x1400075bd
   14000755c:	ins    BYTE PTR es:[rdi],dx
   14000755d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140007565:	and    BYTE PTR [eax+0x6f],dh
   140007569:	jae    0x1400075d4
   14000756b:	je     0x1400075d6
   14000756d:	outs   dx,DWORD PTR ds:[rsi]
   14000756e:	outs   dx,BYTE PTR ds:[rsi]
   14000756f:	add    BYTE PTR [rax],dl
   140007571:	push   rbp
   140007572:	add    BYTE PTR [rax+0x1],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax-0x5f],ah
   14000757a:	add    BYTE PTR [rax+0x1],al
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax],al
   140007581:	movabs ds:0x14000,al
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	add    BYTE PTR [rax],al
   14000758e:	add    BYTE PTR [rax],al
   140007590:	rex.WRX
   140007591:	gs je  0x1400075e7
   140007594:	gs je  0x14000760c
   140007597:	jo     0x1400075da
   140007599:	jo     0x140007604
   14000759b:	cs fs ins BYTE PTR es:[rdi],dx
   14000759e:	ins    BYTE PTR es:[rdi],dx
   14000759f:	add    BYTE PTR [rax+0x0],ah
	...
   1400075f9:	movabs al,ds:0x14000
	...
   14000760e:	add    BYTE PTR [rax],al
   140007610:	adc    BYTE PTR [rbx+0x0],dh
   140007613:	rex add DWORD PTR [rax],eax
   140007616:	add    BYTE PTR [rax],al
   140007618:	sbb    BYTE PTR [rbx+0x0],dh
   14000761b:	rex add DWORD PTR [rax],eax
   14000761e:	add    BYTE PTR [rax],al
   140007620:	pop    rax
   140007621:	jae    0x140007623
   140007623:	rex add DWORD PTR [rax],eax
   140007626:	add    BYTE PTR [rax],al
   140007628:	(bad)  
	...
   140007631:	xor    eax,0x0
	...
   14000763e:	add    BYTE PTR [rax],al
   140007640:	push   rax
   140007641:	jge    0x140007643
   140007643:	rex add DWORD PTR [rax],eax
   140007646:	add    BYTE PTR [rax],al
   140007648:	nop
   140007649:	adc    BYTE PTR [rax],al
   14000764b:	rex add DWORD PTR [rax],eax
   14000764e:	add    BYTE PTR [rax],al
   140007650:	jo     0x1400076a7
   140007652:	add    BYTE PTR [rax+0x1],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x10],ah
   14000765a:	add    BYTE PTR [rax+0x1],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rdx+0x61],ah
   140007662:	and    BYTE PTR fs:[rcx+0x6c],ah
   140007666:	ins    BYTE PTR es:[rdi],dx
   140007667:	outs   dx,DWORD PTR ds:[rsi]
   140007668:	movsxd esp,DWORD PTR [rcx+0x74]
   14000766b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e0000
   140007672:	and    eax,0x7500
   140007677:	add    BYTE PTR [rsi],ch
   140007679:	add    BYTE PTR [rdi+0x0],cl
   14000767c:	rex.XB add BYTE PTR [r8+0x0],dl
	...
   140007690:	push   rbx
   140007691:	add    BYTE PTR [rcx+0x0],bl
   140007694:	push   rbx
   140007695:	add    BYTE PTR [rax+rax*1+0x45],dl
   140007699:	add    BYTE PTR [rbp+0x0],cl
   14000769c:	pop    rsp
   14000769d:	add    BYTE PTR [rbx+0x0],al
   1400076a0:	jne    0x1400076a2
   1400076a2:	jb     0x1400076a4
   1400076a4:	jb     0x1400076a6
   1400076a6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400076aa:	je     0x1400076ac
   1400076ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400076b0:	outs   dx,BYTE PTR ds:[rsi]
   1400076b1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400076b5:	add    BYTE PTR [rdi+0x0],ch
   1400076b8:	ins    BYTE PTR es:[rdi],dx
   1400076b9:	add    BYTE PTR [rbx+0x0],dl
   1400076bc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400076c1:	add    BYTE PTR [rbx+0x0],al
   1400076c4:	outs   dx,DWORD PTR ds:[rsi]
   1400076c5:	add    BYTE PTR [rsi+0x0],ch
   1400076c8:	je     0x1400076ca
   1400076ca:	jb     0x1400076cc
   1400076cc:	outs   dx,DWORD PTR ds:[rsi]
   1400076cd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400076d1:	add    BYTE PTR [rbp+0x0],cl
   1400076d4:	imul   eax,DWORD PTR [rax],0x69006e
   1400076da:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   1400076df:	add    BYTE PTR [rip+0x6c00],ch        # 0x14000e2e5
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rax+rax*1+0x69],bl
   1400076eb:	add    BYTE PTR [rsi+0x0],ch
   1400076ee:	data16 add BYTE PTR [rax+rax*1+0x6e],bl
   1400076f3:	add    BYTE PTR [rbp+0x0],ah
   1400076f6:	je     0x1400076f8
   1400076f8:	imul   eax,DWORD PTR [rax],0x360070
   1400076fe:	add    BYTE PTR cs:[rcx+0x0],ch
   140007702:	outs   dx,BYTE PTR ds:[rsi]
   140007703:	add    BYTE PTR [rsi+0x0],ah
   140007706:	add    BYTE PTR [rax],al
   140007708:	sub    eax,0x6300
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rax+0x0],dh
   140007712:	add    BYTE PTR [rax],al
   140007714:	sub    eax,0x6900
   140007719:	add    BYTE PTR [rax],al
   14000771b:	add    BYTE PTR [rax],al
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    BYTE PTR [rbp+0x0],ch
   140007722:	jae    0x140007724
   140007724:	pop    rdi
   140007725:	add    BYTE PTR [rax+rax*1+0x63],dh
   140007729:	add    BYTE PTR [rax+0x0],dh
   14000772c:	imul   eax,DWORD PTR [rax],0x360070
   140007732:	add    BYTE PTR [rax],al
   140007734:	add    BYTE PTR [rax],al
   140007736:	add    BYTE PTR [rax],al
   140007738:	pop    rsp
   140007739:	add    BYTE PTR [rcx+0x0],ch
   14000773c:	outs   dx,BYTE PTR ds:[rsi]
   14000773d:	add    BYTE PTR [rsi+0x0],ah
   140007740:	pop    rsp
   140007741:	add    BYTE PTR [rsi+0x0],ch
   140007744:	add    BYTE PTR gs:[rax+rax*1+0x6e],dh
   140007749:	add    BYTE PTR [rdx+0x0],ah
   14000774c:	add    BYTE PTR cs:[rcx+0x0],ch
   140007750:	outs   dx,BYTE PTR ds:[rsi]
   140007751:	add    BYTE PTR [rsi+0x0],ah
   140007754:	add    BYTE PTR [rax],al
   140007756:	add    BYTE PTR [rax],al
   140007758:	jae    0x14000775a
   14000775a:	add    BYTE PTR [rax],al
   14000775c:	add    BYTE PTR [rax],al
   14000775e:	add    BYTE PTR [rax],al
   140007760:	ins    DWORD PTR es:[rdi],dx
   140007761:	add    BYTE PTR [rbx+0x0],dh
   140007764:	pop    rdi
   140007765:	add    BYTE PTR [rsi+0x0],ch
   140007768:	add    BYTE PTR gs:[rax+rax*1+0x62],dh
   14000776d:	add    BYTE PTR [rcx+0x0],ch
   140007770:	outs   dx,DWORD PTR ds:[rsi]
   140007771:	add    BYTE PTR [rbx+0x0],dh
   140007774:	add    BYTE PTR [rax],al
   140007776:	add    BYTE PTR [rax],al
   140007778:	pop    rsp
   140007779:	add    BYTE PTR [rcx+0x0],ch
   14000777c:	outs   dx,BYTE PTR ds:[rsi]
   14000777d:	add    BYTE PTR [rsi+0x0],ah
   140007780:	pop    rsp
   140007781:	add    BYTE PTR [rsi+0x0],ch
   140007784:	add    BYTE PTR gs:[rax+rax*1+0x6d],dh
   140007789:	add    BYTE PTR [rbx+0x0],dh
   14000778c:	movsxd eax,DWORD PTR [rax]
   14000778e:	ins    BYTE PTR es:[rdi],dx
   14000778f:	add    BYTE PTR [rcx+0x0],ch
   140007792:	add    BYTE PTR cs:[rcx+0x0],ch
   140007796:	outs   dx,BYTE PTR ds:[rsi]
   140007797:	add    BYTE PTR [rsi+0x0],ah
   14000779a:	add    BYTE PTR [rax],al
   14000779c:	movsxd eax,DWORD PTR [rax]
   14000779e:	add    BYTE PTR [rax],al
   1400077a0:	ins    DWORD PTR es:[rdi],dx
   1400077a1:	add    BYTE PTR [rbx+0x0],dh
   1400077a4:	pop    rdi
   1400077a5:	add    BYTE PTR [rbp+0x0],ch
   1400077a8:	jae    0x1400077aa
   1400077aa:	movsxd eax,DWORD PTR [rax]
   1400077ac:	ins    BYTE PTR es:[rdi],dx
   1400077ad:	add    BYTE PTR [rcx+0x0],ch
   1400077b0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400077b4:	je     0x1400077b6
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	pop    rsp
   1400077b9:	add    BYTE PTR [rcx+0x0],ch
   1400077bc:	outs   dx,BYTE PTR ds:[rsi]
   1400077bd:	add    BYTE PTR [rsi+0x0],ah
   1400077c0:	pop    rsp
   1400077c1:	add    BYTE PTR [rsi+0x0],ch
   1400077c4:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   1400077c9:	add    BYTE PTR [rbx+0x0],ah
   1400077cc:	jo     0x1400077ce
   1400077ce:	imul   eax,DWORD PTR [rax],0x2e0070
   1400077d4:	imul   eax,DWORD PTR [rax],0x66006e
   1400077da:	add    BYTE PTR [rax],al
   1400077dc:	add    BYTE PTR [rax],al
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	ins    DWORD PTR es:[rdi],dx
   1400077e1:	add    BYTE PTR [rbx+0x0],dh
   1400077e4:	pop    rdi
   1400077e5:	add    BYTE PTR [rax+rax*1+0x63],dh
   1400077e9:	add    BYTE PTR [rax+0x0],dh
   1400077ec:	imul   eax,DWORD PTR [rax],0x70
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	sub    eax,0x69007700
   1400077fd:	add    BYTE PTR [rsi+0x0],ch
   140007800:	jo     0x140007802
   140007802:	add    BYTE PTR gs:[rax],al
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rip+0x7600],ch        # 0x14000ee0d
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rax+0x0],ch
   140007812:	rex.W add BYTE PTR [rdi],dil
   140007815:	add    BYTE PTR [rbx+0x0],ah
   140007818:	cmp    al,BYTE PTR [rax]
   14000781a:	rex.XB add BYTE PTR [r10],dil
   14000781d:	add    BYTE PTR [rax+rax*1+0x3a],ch
   140007821:	add    BYTE PTR [rax+rax*1+0x3a],cl
   140007825:	add    BYTE PTR [rcx+0x0],ch
   140007828:	cmp    al,BYTE PTR [rax]
   14000782a:	rex.WB add BYTE PTR [r10],dil
   14000782d:	add    BYTE PTR [rbp+0x0],dh
   140007830:	cmp    al,BYTE PTR [rax]
   140007832:	push   rbp
   140007833:	add    BYTE PTR [rdx],bh
   140007835:	add    BYTE PTR [rsi+0x0],dh
   140007838:	push   rsi
   140007839:	add    BYTE PTR [rax+0x0],dh
   14000783c:	cmp    al,BYTE PTR [rax]
   14000783e:	push   rax
   14000783f:	add    BYTE PTR [rdx],bh
   140007841:	add    BYTE PTR [rbx+0x0],dh
   140007844:	cmp    al,BYTE PTR [rax]
   140007846:	push   rbx
   140007847:	add    BYTE PTR [rdx],bh
   140007849:	add    BYTE PTR [rdx+0x0],ah
   14000784c:	cmp    al,BYTE PTR [rax]
   14000784e:	rex.X add BYTE PTR [rdx],dil
   140007851:	add    BYTE PTR [rcx+0x0],dh
   140007854:	cmp    al,BYTE PTR [rax]
   140007856:	push   rcx
   140007857:	add    BYTE PTR [rdx],bh
   140007859:	add    BYTE PTR [rdi+0x0],dh
   14000785c:	push   rdi
   14000785d:	add    BYTE PTR [rbp+0x0],ah
   140007860:	add    BYTE PTR [r8],r8b
	...
   14000786f:	add    BYTE PTR [rip+0x4e004900],ah        # 0x18e00c175
   140007875:	add    BYTE PTR [rbx+0x0],dl
   140007878:	push   rsp
   140007879:	add    BYTE PTR [rcx+0x0],al
   14000787c:	rex.WR add BYTE PTR [rax+rax*1+0x45],r9b
   140007881:	add    BYTE PTR [rdx+0x0],dl
   140007884:	pop    rdi
   140007885:	add    BYTE PTR [rbx+0x0],dl
   140007888:	rex.W add BYTE PTR [rcx+0x0],al
   14000788c:	add    BYTE PTR [rdi+0x0],r9b
   140007890:	push   rdi
   140007891:	add    BYTE PTR [rbp+0x0],al
   140007894:	add    BYTE PTR [rdi+0x0],r11b
   140007898:	rex.XB add BYTE PTR [r15+0x0],cl
   14000789c:	rex.WRB add BYTE PTR [r8+0x0],r10b
   1400078a0:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400078a4:	add    BYTE PTR [r14+0x0],r9b
   1400078a8:	push   rsp
   1400078a9:	add    BYTE PTR [rdi+0x0],bl
   1400078ac:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400078b0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400078b4:	rex.RX add BYTE PTR [rbp+0x0],r8b
   1400078b8:	push   rbx
   1400078b9:	add    BYTE PTR [rax+rax*1+0x25],dl
   1400078bd:	add    BYTE PTR [rax],al
   1400078bf:	add    BYTE PTR [rsi+0x0],ch
   1400078c2:	add    BYTE PTR gs:[rax+rax*1+0x63],dh
   1400078c7:	add    BYTE PTR [rsi+0x0],ah
   1400078ca:	add    BYTE PTR [esi],ch
   1400078cd:	add    BYTE PTR [rbp+0x0],ah
   1400078d0:	js     0x1400078d2
   1400078d2:	add    BYTE PTR gs:[rax],al
	...
   1400078dd:	add    BYTE PTR [rax],al
   1400078df:	add    BYTE PTR [rip+0x4e004900],ah        # 0x18e00c1e5
   1400078e5:	add    BYTE PTR [rbx+0x0],dl
   1400078e8:	push   rsp
   1400078e9:	add    BYTE PTR [rcx+0x0],al
   1400078ec:	rex.WR add BYTE PTR [rax+rax*1+0x45],r9b
   1400078f1:	add    BYTE PTR [rdx+0x0],dl
   1400078f4:	pop    rdi
   1400078f5:	add    BYTE PTR [rdi+0x0],dl
   1400078f8:	rex.WB add BYTE PTR [r14+0x0],cl
   1400078fc:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140007900:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   140007904:	pop    rdi
   140007905:	add    BYTE PTR [rbx+0x0],al
   140007908:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000790c:	push   rax
   14000790d:	add    BYTE PTR [rdi+0x0],cl
   140007910:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140007914:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   140007919:	add    BYTE PTR [rbp+0x0],cl
   14000791c:	add    BYTE PTR [r14+0x0],cl
   140007920:	rex.WB add BYTE PTR [r14+0x0],al
   140007924:	add    BYTE PTR [r11+0x0],r10b
   140007928:	push   rsp
   140007929:	add    BYTE PTR [rip+0x0],ah        # 0x14000792f
   14000792f:	add    BYTE PTR [rsi+0x0],cl
   140007932:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140007937:	add    BYTE PTR [rdi+0x0],ch
   14000793a:	jb     0x14000793c
   14000793c:	imul   eax,DWORD PTR [rax],0x20
   14000793f:	add    BYTE PTR [rcx+0x0],al
   140007942:	add    BYTE PTR fs:[rcx+0x0],ah
   140007946:	jo     0x140007948
   140007948:	je     0x14000794a
   14000794a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000794e:	jae    0x140007950
	...
   140007958:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000795c:	je     0x14000795e
   14000795e:	ja     0x140007960
   140007960:	outs   dx,DWORD PTR ds:[rsi]
   140007961:	add    BYTE PTR [rdx+0x0],dh
   140007964:	imul   eax,DWORD PTR [rax],0x20
   140007967:	add    BYTE PTR [rax+0x0],dl
   14000796a:	jb     0x14000796c
   14000796c:	outs   dx,DWORD PTR ds:[rsi]
   14000796d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140007971:	add    BYTE PTR [rbx+0x0],ah
   140007974:	outs   dx,DWORD PTR ds:[rsi]
   140007975:	add    BYTE PTR [rax+rax*1+0x73],ch
   140007979:	add    BYTE PTR [rax],al
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rsi+0x0],cl
   140007982:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140007987:	add    BYTE PTR [rdi+0x0],ch
   14000798a:	jb     0x14000798c
   14000798c:	imul   eax,DWORD PTR [rax],0x20
   14000798f:	add    BYTE PTR [rbx+0x0],dl
   140007992:	add    BYTE PTR gs:[rdx+0x0],dh
   140007996:	jbe    0x140007998
   140007998:	imul   eax,DWORD PTR [rax],0x650063
   14000799e:	jae    0x1400079a0
	...
   1400079a8:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   1400079ac:	je     0x1400079ae
   1400079ae:	ja     0x1400079b0
   1400079b0:	outs   dx,DWORD PTR ds:[rsi]
   1400079b1:	add    BYTE PTR [rdx+0x0],dh
   1400079b4:	imul   eax,DWORD PTR [rax],0x20
   1400079b7:	add    BYTE PTR [rbx+0x0],al
   1400079ba:	ins    BYTE PTR es:[rdi],dx
   1400079bb:	add    BYTE PTR [rcx+0x0],ch
   1400079be:	add    BYTE PTR gs:[rsi+0x0],ch
   1400079c2:	je     0x1400079c4
   1400079c4:	jae    0x1400079c6
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	or     al,BYTE PTR [rax]
   1400079ca:	add    BYTE PTR [rax],al
   1400079cc:	add    BYTE PTR [rax],al
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	push   rdx
   1400079d1:	add    BYTE PTR [rbp+0x0],ah
   1400079d4:	je     0x1400079d6
   1400079d6:	jb     0x1400079d8
   1400079d8:	jns    0x1400079da
   1400079da:	imul   eax,DWORD PTR [rax],0x67006e
   1400079e0:	and    BYTE PTR [rax],al
   1400079e2:	add    BYTE PTR [r11+0x0],spl
   1400079e6:	jno    0x1400079e8
   1400079e8:	jne    0x1400079ea
   1400079ea:	imul   eax,DWORD PTR [rax],0x650072
   1400079f0:	push   rdi
   1400079f1:	add    BYTE PTR [rdx+0x0],dh
   1400079f4:	imul   eax,DWORD PTR [rax],0x650074
   1400079fa:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400079fe:	movsxd eax,DWORD PTR [rax]
   140007a00:	imul   eax,DWORD PTR [rax],0x20
   140007a03:	add    BYTE PTR [rdi+0x0],dh
   140007a06:	imul   eax,DWORD PTR [rax],0x680074
   140007a0c:	and    BYTE PTR [rax],al
   140007a0e:	imul   eax,DWORD PTR [rax],0x66006e
   140007a14:	imul   eax,DWORD PTR [rax],0x69006e
   140007a1a:	je     0x140007a1c
   140007a1c:	add    BYTE PTR gs:[rax],ah
   140007a1f:	add    BYTE PTR [rdi+0x0],dh
   140007a22:	(bad)  
   140007a23:	add    BYTE PTR [rcx+0x0],ch
   140007a26:	je     0x140007a28
   140007a28:	and    BYTE PTR [rax],al
   140007a2a:	je     0x140007a2c
   140007a2c:	imul   eax,DWORD PTR [rax],0x65006d
   140007a32:	add    BYTE PTR cs:[rsi],ch
   140007a35:	add    BYTE PTR [rsi],ch
   140007a37:	add    BYTE PTR [rdx],cl
   140007a39:	add    BYTE PTR [rax],al
   140007a3b:	add    BYTE PTR [rax],al
   140007a3d:	add    BYTE PTR [rax],al
   140007a3f:	add    BYTE PTR [rbx+0x0],dl
   140007a42:	(bad)  
   140007a43:	add    BYTE PTR [rbp+0x0],ch
   140007a46:	jo     0x140007a48
   140007a48:	ins    BYTE PTR es:[rdi],dx
   140007a49:	add    BYTE PTR [rbp+0x0],ah
   140007a4c:	and    BYTE PTR [rax],al
   140007a4e:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140007a52:	je     0x140007a54
   140007a54:	movsxd eax,DWORD PTR [rax]
   140007a56:	data16 add BYTE PTR [rdi+0x0],ah
   140007a5a:	and    BYTE PTR [rax],al
   140007a5c:	add    BYTE PTR [r8+0x0],sil
   140007a60:	jo     0x140007a62
   140007a62:	ins    BYTE PTR es:[rdi],dx
   140007a63:	add    BYTE PTR [rcx+0x0],ch
   140007a66:	movsxd eax,DWORD PTR [rax]
   140007a68:	(bad)  
   140007a69:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007a6d:	add    BYTE PTR [rdi+0x0],ch
   140007a70:	outs   dx,BYTE PTR ds:[rsi]
   140007a71:	add    BYTE PTR [rax],ah
   140007a73:	add    BYTE PTR [rax],ch
   140007a75:	add    BYTE PTR [rsi+0x0],ch
   140007a78:	add    BYTE PTR gs:[rax+rax*1+0x63],dh
   140007a7d:	add    BYTE PTR [rsi+0x0],ah
   140007a80:	add    BYTE PTR [esi],ch
   140007a83:	add    BYTE PTR [rbp+0x0],ah
   140007a86:	js     0x140007a88
   140007a88:	add    BYTE PTR gs:[rcx],ch
   140007a8b:	add    BYTE PTR [rax],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rax],dh
   140007a91:	jns    0x140007a93
   140007a93:	rex add DWORD PTR [rax],eax
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	pop    rax
   140007a99:	jns    0x140007a9b
   140007a9b:	rex add DWORD PTR [rax],eax
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	cmp    BYTE PTR [rcx+0x0],0x40
   140007aa4:	add    DWORD PTR [rax],eax
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	test   al,0x79
   140007aaa:	add    BYTE PTR [rax+0x1],al
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    BYTE PTR [rax+0x140007b],ah
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rax+0x140007b],dl
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rax+0x140007b],al
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rax+0x7b],dh
   140007aca:	add    BYTE PTR [rax+0x1],al
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rdi+0x6ec0e8ae],bl
   140007ad5:	xor    cl,dl
   140007ad7:	adc    DWORD PTR [rdx+0x5f8000cf],ebp
   140007add:	shl    DWORD PTR [rdi],0xe
   140007ae0:	xchg   ebx,eax
   140007ae1:	scas   al,BYTE PTR es:[rdi]
   140007ae2:	call   0x11130e9a7
   140007ae7:	adc    DWORD PTR [rdx+0x5f8000cf],ebp
   140007aed:	shl    DWORD PTR [rdi],0xe
   140007af0:	sahf   
   140007af1:	scas   al,BYTE PTR es:[rdi]
   140007af2:	call   0x11130e9b7
   140007af7:	adc    DWORD PTR [rdx+0x5f8000cf],ebp
   140007afd:	shl    DWORD PTR [rdi],0xe
   140007b00:	xchg   edi,eax
   140007b01:	scas   al,BYTE PTR es:[rdi]
   140007b02:	call   0x11130e9c7
   140007b07:	adc    DWORD PTR [rdx+0x5f8000cf],ebp
   140007b0d:	shl    DWORD PTR [rdi],0xe
   140007b10:	popf   
   140007b11:	scas   al,BYTE PTR es:[rdi]
   140007b12:	call   0x11130e9d7
   140007b17:	adc    DWORD PTR [rdx+0x5f8000cf],ebp
   140007b1d:	shl    DWORD PTR [rdi],0xe
   140007b20:	pop    rsi
   140007b21:	xchg   ebx,eax
   140007b22:	fiadd  WORD PTR [rbx]
   140007b24:	lods   al,BYTE PTR ds:[rsi]
   140007b25:	mov    al,0xd6
   140007b27:	adc    DWORD PTR [rsi+0x565000fc],esi
   140007b2d:	rol    BYTE PTR [rax],0x8
   140007b30:	in     eax,dx
   140007b31:	xchg   ecx,eax
   140007b32:	adc    bl,dh
   140007b34:	test   al,0xb0
   140007b36:	(bad)  
   140007b37:	adc    DWORD PTR [rsi+0x565000fc],esi
   140007b3d:	rol    BYTE PTR [rax],0x8
   140007b40:	mov    dl,0x3c
   140007b42:	mov    bl,0x5a
   140007b44:	test   BYTE PTR [rbp+0x7e],0x44
   140007b48:	xchg   BYTE PTR [rax],dl
   140007b4a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007b4b:	mov    ebx,0xf6fa1c31
   140007b50:	(bad)  
   140007b51:	xchg   ecx,eax
   140007b52:	adc    bl,dh
   140007b54:	test   al,0xb0
   140007b56:	(bad)  
   140007b57:	adc    DWORD PTR [rsi+0x565000fc],esi
   140007b5d:	rol    BYTE PTR [rax],0x8
   140007b60:	call   0xe8f38bf6
   140007b65:	mov    al,0xd6
   140007b67:	adc    DWORD PTR [rsi+0x565000fc],esi
   140007b6d:	rol    BYTE PTR [rax],0x8
   140007b70:	jae    0x140007b5b
   140007b72:	ss rex.WRB and rax,0xffffffffbf11cee3
   140007b79:	ror    DWORD PTR [rax],0x0
   140007b7c:	sub    esp,ecx
   140007b7e:	add    ebx,DWORD PTR [rax]
   140007b80:	je     0x140007b6b
   140007b82:	ss rex.WRB and rax,0xffffffffbf11cee3
   140007b89:	ror    DWORD PTR [rax],0x0
   140007b8c:	sub    esp,ecx
   140007b8e:	add    ebx,DWORD PTR [rax]
   140007b90:	jne    0x140007b7b
   140007b92:	ss rex.WRB and rax,0xffffffffbf11cee3
   140007b99:	ror    DWORD PTR [rax],0x0
   140007b9c:	sub    esp,ecx
   140007b9e:	add    ebx,DWORD PTR [rax]
   140007ba0:	jb     0x140007b8b
   140007ba2:	ss rex.WRB and rax,0xffffffffbf11cee3
   140007ba9:	ror    DWORD PTR [rax],0x0
   140007bac:	sub    esp,ecx
   140007bae:	add    ebx,DWORD PTR [rax]
   140007bb0:	jbe    0x140007be4
   140007bb2:	adc    ebx,DWORD PTR [rax+0x11d14b20]
   140007bb8:	stos   DWORD PTR es:[rdi],eax
   140007bb9:	add    DWORD PTR [rax],eax
   140007bbb:	sbb    BYTE PTR [rdi-0x3f],0x27
   140007bbf:	(bad)  
   140007bc0:	(bad)  
   140007bc1:	push   rdx
   140007bc2:	add    ebx,DWORD PTR [rbx-0x7]
   140007bc5:	rex rcl DWORD PTR [rcx],1
   140007bc8:	stos   BYTE PTR es:[rdi],al
   140007bc9:	in     al,dx
   140007bca:	add    BYTE PTR [rax+0xe27c15f],al
	...
   140007bd8:	and    al,BYTE PTR [rip+0x41993]        # 0x140049571
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	fs (bad) 
   140007be2:	add    BYTE PTR [rax],al
   140007be4:	add    al,BYTE PTR [rax]
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	test   BYTE PTR [rdx+0x80000],al
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	loopne 0x140007b74
   140007bf2:	add    BYTE PTR [rax],al
   140007bf4:	and    BYTE PTR [rax],al
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	add    BYTE PTR [rax],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    DWORD PTR [rax],eax
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	and    al,BYTE PTR [rip+0x41993]        # 0x140049599
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	mov    WORD PTR [rcx+0x0],es
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	add    BYTE PTR [rax],al
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	or     DWORD PTR [rax],eax
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	mov    al,0x81
   140007c1a:	add    BYTE PTR [rax],al
   140007c1c:	and    BYTE PTR [rax],al
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	add    BYTE PTR [rax],al
   140007c22:	add    BYTE PTR [rax],al
   140007c24:	add    DWORD PTR [rax],eax
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	and    al,BYTE PTR [rip+0x21993]        # 0x1400295c1
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	mov    eax,0x1000080
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    al,cl
   140007c39:	add    BYTE PTR [rax],0x0
   140007c3c:	(bad)  
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    al,dh
   140007c41:	add    BYTE PTR [rax],0x0
   140007c44:	sub    BYTE PTR [rax],al
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	add    BYTE PTR [rax],al
   140007c4a:	add    BYTE PTR [rax],al
   140007c4c:	add    DWORD PTR [rax],eax
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	add    BYTE PTR [rax],al
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	cdq    
   140007c55:	cmp    BYTE PTR [rdi+0x55],bl
   140007c5b:	add    BYTE PTR [rdx],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rbx],ah
   140007c61:	add    BYTE PTR [rax],al
   140007c63:	add    BYTE PTR [rbp+rdi*2+0x0],dh
   140007c67:	add    BYTE PTR [rbx+riz*2+0x0],dh
   140007c6b:	add    BYTE PTR [rax],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rcx+0x559f38],bl
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rip+0xffffffffa4000000],cl        # 0xe4007c7d
   140007c7d:	add    al,BYTE PTR [rax]
   140007c7f:	add    BYTE PTR [rbp+rdi*2+0x63ac0000],ch
	...
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	sar    BYTE PTR [rax+rax*1+0x0],1
   140007cac:	clc    
   140007cad:	jl     0x140007caf
	...
   140007cbf:	add    al,bh
   140007cc1:	jl     0x140007cc3
	...
   140007ccf:	add    BYTE PTR [rax+0x10000a0],ch
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rax],al
   140007cd9:	add    BYTE PTR [rax],al
   140007cdb:	add    bh,bh
   140007cdd:	(bad)  
   140007cde:	(bad)  
   140007cdf:	inc    DWORD PTR [rax]
   140007ce1:	add    BYTE PTR [rax],al
   140007ce3:	add    BYTE PTR [rax+0x0],al
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	and    BYTE PTR [rbp+0x0],bh
	...
   140007cf7:	add    al,dl
   140007cf9:	movabs al,ds:0x0
   140007d02:	add    BYTE PTR [rax],al
   140007d04:	(bad)  
   140007d05:	(bad)  
   140007d06:	(bad)  
   140007d07:	inc    DWORD PTR [rax]
   140007d09:	add    BYTE PTR [rax],al
   140007d0b:	add    BYTE PTR [rax+0x0],al
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	cmp    BYTE PTR [rbp+0x0],bh
	...
   140007d27:	add    BYTE PTR [rdx],al
   140007d29:	add    BYTE PTR [rax],al
   140007d2b:	add    BYTE PTR [rax+0x7c],ch
	...
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rcx],al
   140007d41:	add    BYTE PTR [rax],al
   140007d43:	add    al,al
   140007d45:	jl     0x140007d47
	...
   140007d4f:	add    BYTE PTR [rcx],al
	...
   140007d59:	add    BYTE PTR [rax],al
   140007d5b:	add    BYTE PTR [rax+0x200000a0],ch
   140007d61:	jge    0x140007d63
   140007d63:	add    BYTE PTR [rax+0x7d],dl
	...
   140007d72:	add    BYTE PTR [rax],al
   140007d74:	push   rdx
   140007d75:	push   rbx
   140007d76:	rex.R push rbx
   140007d78:	shl    DWORD PTR [rax-0x46bb97fc],0x10
   140007d7f:	rex.WRB mov r11,cs
   140007d82:	sahf   
   140007d83:	mov    al,0x1f
   140007d85:	ss leave 
   140007d87:	loopne 0x140007d8a
   140007d89:	add    BYTE PTR [rax],al
   140007d8b:	add    BYTE PTR [rsi+0x65],ch
   140007d8e:	je     0x140007df3
   140007d90:	data16 addr32 cs jo 0x140007df9
   140007d95:	(bad)  
	...
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	rex.RXB
   140007dad:	rex.XB push r12
   140007daf:	rex.WR add BYTE PTR [rax],r10b
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	push   0x2e00004d
   140007db9:	je     0x140007e20
   140007dbb:	js     0x140007e31
   140007dbd:	and    al,0x6d
   140007dbf:	outs   dx,BYTE PTR ds:[rsi]
   140007dc0:	add    BYTE PTR [rax],al
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	jo     0x140007e23
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	adc    al,BYTE PTR [rax]
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	cs je  0x140007e34
   140007dcf:	js     0x140007e45
   140007dd1:	and    al,0x6d
   140007dd3:	outs   dx,BYTE PTR ds:[rsi]
   140007dd4:	and    al,0x30
   140007dd6:	xor    BYTE PTR [rax],al
   140007dd8:	nop
   140007dd9:	pop    rbp
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	xor    BYTE PTR [rdx],al
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	cs je  0x140007e48
   140007de3:	js     0x140007e59
   140007de5:	and    al,0x78
   140007de7:	add    al,al
   140007de9:	pop    rdi
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	rex.WX add BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rsi],ch
   140007df1:	je     0x140007e58
   140007df3:	js     0x140007e69
   140007df5:	and    al,0x79
   140007df7:	add    BYTE PTR fs:[rax],al
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	add    BYTE PTR [rax+0x0],dh
   140007dff:	add    BYTE PTR [rax],dl
   140007e01:	add    eax,DWORD PTR [rax]
   140007e03:	add    BYTE PTR [rsi],ch
   140007e05:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007e0d:	add    BYTE PTR [rax],al
   140007e0f:	add    BYTE PTR [rax],dl
   140007e11:	jae    0x140007e13
   140007e13:	add    BYTE PTR [rax],dl
   140007e15:	add    BYTE PTR [rax],al
   140007e17:	add    BYTE PTR [rsi],ch
   140007e19:	xor    BYTE PTR [rax],dh
   140007e1b:	movsxd esp,DWORD PTR [rsi+0x67]
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	and    BYTE PTR [rbx+0x0],dh
   140007e23:	add    BYTE PTR [rax],cl
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rsi],ch
   140007e29:	rex.XB push r10
   140007e2b:	push   rsp
   140007e2c:	and    al,0x58
   140007e2e:	rex.XB
   140007e2f:	add    BYTE PTR [r8],al
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	sub    BYTE PTR [rbx+0x0],dh
   140007e37:	add    BYTE PTR [rax],cl
   140007e39:	add    BYTE PTR [rax],al
   140007e3b:	add    BYTE PTR [rsi],ch
   140007e3d:	rex.XB push r10
   140007e3f:	push   rsp
   140007e40:	and    al,0x58
   140007e42:	rex.XB
   140007e43:	rex.B
   140007e44:	add    BYTE PTR [r8],al
   140007e47:	add    BYTE PTR [rax],dh
   140007e49:	jae    0x140007e4b
   140007e4b:	add    BYTE PTR [rax],cl
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    BYTE PTR [rsi],ch
   140007e51:	rex.XB push r10
   140007e53:	push   rsp
   140007e54:	and    al,0x58
   140007e56:	rex.XB pop r10
   140007e58:	add    BYTE PTR [rax],al
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	cmp    BYTE PTR [rbx+0x0],dh
   140007e5f:	add    BYTE PTR [rax],cl
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rsi],ch
   140007e65:	rex.XB push r10
   140007e67:	push   rsp
   140007e68:	and    al,0x58
   140007e6a:	rex.WB
   140007e6b:	add    BYTE PTR [r8],al
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	rex jae 0x140007e73
   140007e73:	add    BYTE PTR [rax],cl
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    BYTE PTR [rsi],ch
   140007e79:	rex.XB push r10
   140007e7b:	push   rsp
   140007e7c:	and    al,0x58
   140007e7e:	rex.WB
   140007e7f:	rex.B
   140007e80:	add    BYTE PTR [r8],al
   140007e83:	add    BYTE PTR [rax+0x73],cl
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	or     BYTE PTR [rax],al
   140007e8a:	add    BYTE PTR [rax],al
   140007e8c:	cs rex.XB push r10
   140007e8f:	push   rsp
   140007e90:	and    al,0x58
   140007e92:	rex.WB pop r9
   140007e94:	add    BYTE PTR [rax],al
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	push   rax
   140007e99:	jae    0x140007e9b
   140007e9b:	add    BYTE PTR [rax],cl
   140007e9d:	add    BYTE PTR [rax],al
   140007e9f:	add    BYTE PTR [rsi],ch
   140007ea1:	rex.XB push r10
   140007ea3:	push   rsp
   140007ea4:	and    al,0x58
   140007ea6:	rex.WB pop r10
   140007ea8:	add    BYTE PTR [rax],al
   140007eaa:	add    BYTE PTR [rax],al
   140007eac:	pop    rax
   140007ead:	jae    0x140007eaf
   140007eaf:	add    BYTE PTR [rax+rax*1+0x0],bl
   140007eb3:	add    BYTE PTR [rsi],ch
   140007eb5:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007ebd:	add    BYTE PTR [rax],al
   140007ebf:	add    al,al
   140007ec1:	jae    0x140007ec3
   140007ec3:	add    ah,ah
   140007ec5:	or     BYTE PTR [rax],al
   140007ec7:	add    BYTE PTR [rsi],ch
   140007ec9:	jb     0x140007f2f
   140007ecb:	(bad)  
   140007ecc:	je     0x140007f2f
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	test   al,0x7c
   140007ed2:	add    BYTE PTR [rax],al
   140007ed4:	int3   
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rsi],ch
   140007ed9:	jb     0x140007f3f
   140007edb:	(bad)  
   140007edc:	je     0x140007f3f
   140007ede:	and    al,0x72
   140007ee0:	add    BYTE PTR [rax],al
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	je     0x140007f63
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	fadd   QWORD PTR [rdx]
   140007eea:	add    BYTE PTR [rax],al
   140007eec:	cs jb  0x140007f53
   140007eef:	(bad)  
   140007ef0:	je     0x140007f53
   140007ef2:	and    al,0x7a
   140007ef4:	jp     0x140007f70
   140007ef6:	fs (bad) 
   140007ef8:	add    BYTE PTR [eax],al
   140007efb:	add    BYTE PTR [rax-0x80],dl
   140007efe:	add    BYTE PTR [rax],al
   140007f00:	xchg   esp,eax
   140007f01:	(bad)  
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	cs js  0x140007f6b
   140007f07:	(bad)  
   140007f08:	je     0x140007f6b
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	call   0xf4007f98
   140007f11:	add    DWORD PTR [rax],eax
   140007f13:	add    BYTE PTR [rsi],ch
   140007f15:	js     0x140007f7b
   140007f17:	(bad)  
   140007f18:	je     0x140007f7b
   140007f1a:	and    al,0x78
   140007f1c:	add    BYTE PTR [rax],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	pushf  
   140007f21:	mov    DWORD PTR [rax],eax
   140007f23:	add    BYTE PTR [rax],ah
   140007f25:	add    BYTE PTR [rax],al
   140007f27:	add    BYTE PTR [rsi],ch
   140007f29:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140007f32:	add    BYTE PTR [rax],al
   140007f34:	mov    esp,0x20000089
   140007f39:	add    BYTE PTR [rax],al
   140007f3b:	add    BYTE PTR [rsi],ch
   140007f3d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	loopne 0x140007ed3
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	sbb    BYTE PTR [rax],al
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140007f5a:	add    BYTE PTR [rax],al
   140007f5c:	clc    
   140007f5d:	mov    DWORD PTR [rax],eax
   140007f5f:	add    BYTE PTR [rsi],ah
   140007f61:	add    BYTE PTR [rax],al
   140007f63:	add    BYTE PTR [rsi],ch
   140007f65:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	and    BYTE PTR [rdx+0x180000],cl
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140007f82:	add    BYTE PTR [rax],al
   140007f84:	cmp    BYTE PTR [rdx+0x780000],cl
   140007f8a:	add    BYTE PTR [rax],al
   140007f8c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rax+0x1400008a],dh
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rsi],ch
   140007fa1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    al,cl
   140007fad:	mov    al,BYTE PTR [rax]
   140007faf:	add    BYTE PTR [rax],dl
   140007fb1:	add    eax,DWORD PTR [rax]
   140007fb3:	add    BYTE PTR [rsi],ch
   140007fb5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007fbd:	add    BYTE PTR [rax],al
   140007fbf:	add    al,bl
   140007fc1:	lea    eax,[rax]
   140007fc3:	add    BYTE PTR [rax+0x2e000006],ah
   140007fc9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007fd1:	add    BYTE PTR [rax],al
   140007fd3:	add    BYTE PTR [rax],al
   140007fd5:	movabs al,ds:0x642e000000300000
   140007fde:	(bad)  
   140007fdf:	je     0x140008042
   140007fe1:	add    BYTE PTR [rax],al
   140007fe3:	add    BYTE PTR [rax],dh
   140007fe5:	movabs al,ds:0x642e000000c00000
   140007fee:	(bad)  
   140007fef:	je     0x140008052
   140007ff1:	and    al,0x72
   140007ff3:	add    al,dh
   140007ff5:	movabs al,ds:0x622e000026840000
   140007ffe:	jae    0x140008073
   140008000:	add    BYTE PTR [rax],al
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    al,dl
   140008006:	add    BYTE PTR [rax],al
   140008008:	rex.R add al,0x0
   14000800b:	add    BYTE PTR [rsi],ch
   14000800d:	jo     0x140008073
   14000800f:	(bad)  
   140008010:	je     0x140008073
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    al,ah
   140008016:	add    BYTE PTR [rax],al
   140008018:	sbb    BYTE PTR [rax],al
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140008026:	add    BYTE PTR [rax],al
   140008028:	add    al,dh
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	lock add BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rsi],ch
   140008031:	jb     0x1400080a6
   140008033:	jb     0x140008098
   140008035:	and    al,0x30
   140008037:	xor    DWORD PTR [rax],eax
   140008039:	add    BYTE PTR [rax],al
   14000803b:	add    al,dh
   14000803d:	lock add BYTE PTR [rax],al
   140008040:	sbb    BYTE PTR [rdi],al
   140008042:	add    BYTE PTR [rax],al
   140008044:	cs jb  0x1400080ba
   140008047:	jb     0x1400080ac
   140008049:	and    al,0x30
   14000804b:	xor    al,BYTE PTR [rax]
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rcx],al
   140008051:	or     al,BYTE PTR [rdx]
   140008053:	add    BYTE PTR [rdx],cl
   140008055:	xor    al,BYTE PTR [rsi]
   140008057:	xor    BYTE PTR [rcx],al
   140008059:	add    al,0x1
   14000805b:	add    BYTE PTR [rdx+rax*4],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	add    DWORD PTR [rdx],ecx
   140008062:	add    al,0x0
   140008064:	or     dh,BYTE PTR [rsi+rax*1]
   140008067:	add    BYTE PTR [rdx],cl
   140008069:	xor    al,BYTE PTR [rsi]
   14000806b:	jo     0x14000806e
   14000806d:	(bad)  
   14000806e:	add    al,BYTE PTR [rax]
   140008070:	(bad)  
   140008071:	xor    al,BYTE PTR [rdx]
   140008073:	xor    BYTE PTR [rcx],al
   140008075:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42927b
   14000807b:	jo     0x14000808a
   14000807d:	(bad)  
   14000807e:	or     al,0x50
   140008080:	or     esi,DWORD PTR [rax]
   140008082:	add    BYTE PTR [rax],al
   140008084:	sbb    DWORD PTR [rbx+rax*1],ebp
   140008087:	add    BYTE PTR [rdx],bl
   140008089:	add    DWORD PTR [rsi+0x301300],ecx
   14000808f:	add    BYTE PTR [rax],bh
   140008091:	pop    rax
   140008092:	add    BYTE PTR [rax],al
   140008094:	(bad)  
   140008095:	add    al,0x0
   140008097:	add    BYTE PTR [rcx],bl
   140008099:	cs (bad) 
   14000809b:	add    BYTE PTR [rsp+riz*2],bl
   14000809e:	rex.WRX add BYTE PTR [rax],r11b
   1400080a1:	xor    al,0x4c
   1400080a3:	add    BYTE PTR [rbx],cl
   1400080a5:	add    DWORD PTR [rdx+0x0],ecx
   1400080a8:	add    al,0x70
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	enter  0x58,0x0
   1400080b0:	sub    BYTE PTR [rax+rax*1+0x0],bh
   1400080b4:	rex.XB add al,BYTE PTR [r8]
   1400080b7:	add    bh,bh
   1400080b9:	(bad)  
   1400080ba:	(bad)  
   1400080bb:	inc    DWORD PTR [rax]
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    bh,bh
   1400080c1:	(bad)  
   1400080c2:	(bad)  
   1400080c3:	inc    DWORD PTR [rax]
	...
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rcx],al
   1400080d1:	add    BYTE PTR [rax],al
   1400080d3:	add    BYTE PTR [rcx],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    ah,bl
   1400080d9:	add    BYTE PTR [rax],0x0
   1400080dc:	add    BYTE PTR [rax],al
	...
   1400080e7:	add    BYTE PTR [rsi+0x3800005d],dl
   1400080ed:	add    BYTE PTR [rax],al
   1400080ef:	add    BYTE PTR [rax],dh
   1400080f1:	adc    al,BYTE PTR [rax]
   1400080f3:	add    bh,bh
   1400080f5:	(bad)  
   1400080f6:	(bad)  
   1400080f7:	push   rbp
   1400080f9:	adc    al,BYTE PTR [rax]
   1400080fb:	add    BYTE PTR [rax],al
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rip+0xffffffffff000013],ah        # 0x13f008118
   140008105:	(bad)  
   140008106:	(bad)  
   140008107:	call   QWORD PTR [rsi+0x5d]
   14000810d:	add    BYTE PTR [rax],al
   14000810f:	add    BYTE PTR [rbx+0x100005d],ah
   140008115:	add    BYTE PTR [rax],al
   140008117:	add    BYTE PTR [rsi+0x5d],dh
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rcx],bl
   140008121:	or     al,BYTE PTR [rdx]
   140008123:	add    BYTE PTR [rdx],cl
   140008125:	xor    al,BYTE PTR [rsi]
   140008127:	push   rax
   140008128:	sub    bl,BYTE PTR [rax+0x0]
   14000812b:	add    BYTE PTR [rax],ch
   14000812d:	jl     0x14000812f
   14000812f:	add    BYTE PTR [rcx],bl
   140008131:	(bad)  
   140008132:	or     eax,0x57742600
   140008137:	add    BYTE PTR [rsi],ah
   140008139:	fs push rsi
   14000813b:	add    BYTE PTR [rsi],ah
   14000813d:	xor    al,0x54
   14000813f:	add    BYTE PTR [rsi],ah
   140008141:	add    DWORD PTR [rsi+0x0],ecx
   140008144:	sbb    al,dh
   140008146:	(bad)  
   140008147:	loopne 0x14000815d
   140008149:	rcl    BYTE PTR [rdx],1
   14000814b:	rcl    BYTE PTR [rax],0x50
   14000814e:	add    BYTE PTR [rax],al
   140008150:	cmp    BYTE PTR [rax+0x0],bl
   140008153:	add    BYTE PTR [rax+0x2],ah
   140008156:	add    BYTE PTR [rax],al
   140008158:	add    DWORD PTR [rcx+rax*1],eax
   14000815b:	add    BYTE PTR [rdx+riz*2],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	sbb    DWORD PTR [rax+0xd],eax
   140008163:	add    BYTE PTR [rdi],ch
   140008165:	je     0x1400081e6
   140008167:	add    BYTE PTR [rbx],ch
   140008169:	fs jle 0x14000816c
   14000816c:	(bad)  
   14000816d:	xor    al,0x7c
   14000816f:	add    BYTE PTR [rdx],bl
   140008171:	add    DWORD PTR [rsi+0x0],esi
   140008174:	or     al,0xf0
   140008176:	or     ah,al
   140008178:	or     al,dl
   14000817a:	(bad)  
   14000817b:	rol    BYTE PTR [rax+rdx*2],0x0
   14000817f:	add    al,cl
   140008181:	pop    rax
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax+rax*1+0x0],bh
   140008188:	movabs ds:0xcaffffffff000003,al
   140008191:	pop    rbp
   140008192:	add    BYTE PTR [rax],al
   140008194:	add    BYTE PTR [rax],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	(bad)  
   140008199:	pop    rbp
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    DWORD PTR [rax],eax
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	loop   0x1400081ff
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    al,BYTE PTR [rax]
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	out    dx,al
   1400081a9:	pop    rbp
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	js     0x1400081cb
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	(bad)  
   1400081b5:	(bad)  
   1400081b6:	(bad)  
   1400081b7:	call   QWORD PTR [rsi+0x1b]
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	push   0x100001b
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rdx+0x1b],bh
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    al,BYTE PTR [rax]
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	mov    WORD PTR [rbx],ds
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    eax,DWORD PTR [rax]
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	mov    WORD PTR [rax+rax*1],ds
   1400081db:	add    BYTE PTR [rdx],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rsi+0x100001c],ch
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    al,dl
   1400081e9:	sbb    al,0x0
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    dl,dh
   1400081f1:	sbb    al,0x0
   1400081f3:	add    bh,bh
   1400081f5:	(bad)  
   1400081f6:	(bad)  
   1400081f7:	inc    DWORD PTR [rcx]
   1400081f9:	sbb    BYTE PTR [rdx],cl
   1400081fb:	add    BYTE PTR [rax],bl
   1400081fd:	or     al,BYTE PTR fs:[rax]
   140008200:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008204:	sbb    BYTE PTR [rax+rcx*1],dh
   140008207:	add    BYTE PTR [rax],bl
   140008209:	xor    dl,BYTE PTR [rax+rsi*8]
   14000820c:	adc    ah,al
   14000820e:	adc    BYTE PTR [rax+0x1],dh
   140008211:	adc    al,0x8
   140008213:	add    BYTE PTR [rsp+riz*2],dl
   140008216:	or     BYTE PTR [rax],al
   140008218:	adc    al,0x54
   14000821a:	(bad)  
   14000821b:	add    BYTE PTR [rsp+rsi*1],dl
   14000821e:	(bad)  
   14000821f:	add    BYTE PTR [rdx+rsi*1],dl
   140008222:	adc    BYTE PTR [rax+0x1],dh
   140008225:	clts   
   140008227:	add    BYTE PTR [rdi],cl
   140008229:	fs (bad) 
   14000822b:	add    BYTE PTR [rdi],cl
   14000822d:	xor    al,0x6
   14000822f:	add    BYTE PTR [rdi],cl
   140008231:	xor    cl,BYTE PTR [rbx]
   140008233:	jo     0x140008236
   140008235:	sbb    DWORD PTR [rdx],ecx
   140008237:	add    BYTE PTR [rcx],bl
   140008239:	je     0x140008244
   14000823b:	add    BYTE PTR [rcx],bl
   14000823d:	or     BYTE PTR fs:[rax],al
   140008240:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008244:	sbb    DWORD PTR [rsi+rax*1],esi
   140008247:	add    BYTE PTR [rcx],bl
   140008249:	xor    dl,BYTE PTR [rip+0x62219e0]        # 0x146229c2f
   14000824f:	add    BYTE PTR [rdx],bl
   140008251:	mov    dl,0x16
   140008253:	lock adc al,0xe0
   140008256:	adc    dh,BYTE PTR [rax+0x11]
   140008259:	(bad)  
   14000825a:	adc    BYTE PTR [rax],dh
   14000825c:	sub    bl,BYTE PTR [rax+0x0]
   14000825f:	add    al,bl
   140008261:	jnp    0x140008263
   140008263:	add    bh,bh
   140008265:	(bad)  
   140008266:	(bad)  
   140008267:	inc    DWORD PTR [rax]
   140008269:	add    BYTE PTR [rax],al
   14000826b:	add    bh,bh
   14000826d:	(bad)  
   14000826e:	(bad)  
   14000826f:	inc    DWORD PTR [rax]
   140008271:	add    BYTE PTR [rax],al
   140008273:	add    BYTE PTR [rcx],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rax],al
   140008279:	add    BYTE PTR [rax],al
   14000827b:	add    BYTE PTR [rcx],al
	...
   140008289:	add    BYTE PTR [rax],al
   14000828b:	add    BYTE PTR [rbx],al
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rcx],al
   140008291:	add    BYTE PTR [rax],al
   140008293:	add    BYTE PTR [rdx+rax*4+0x20000],ch
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    al,BYTE PTR [rax]
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	add    eax,DWORD PTR [rax]
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    DWORD PTR [rax],eax
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	rol    BYTE PTR [rdx+0x400000],0x0
	...
   1400082b7:	add    BYTE PTR [rax],al
   1400082b9:	pop    rsi
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	cmp    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	add    BYTE PTR [rax],al
	...
   1400082cb:	add    BYTE PTR [rax+0x5e],ch
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	cmp    BYTE PTR [rax],al
	...
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	fsub   DWORD PTR [rcx]
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	(bad)  
   1400082e5:	(bad)  
   1400082e6:	(bad)  
   1400082e7:	inc    DWORD PTR [rsi+0x22]
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	mov    WORD PTR [rdx],fs
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	(bad)  
   1400082f5:	(bad)  
   1400082f6:	(bad)  
   1400082f7:	inc    DWORD PTR [rax]
   1400082f9:	pop    rsi
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	or     eax,0x100005e
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rbx],bl
   140008309:	pop    rsi
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    al,BYTE PTR [rax]
   14000830e:	add    BYTE PTR [rax],al
   140008310:	pop    rdx
   140008311:	pop    rsi
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	jne    0x140008378
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    eax,DWORD PTR [rax]
   14000831e:	add    BYTE PTR [rax],al
   140008320:	sbb    DWORD PTR [rdx],ecx
   140008322:	add    al,BYTE PTR [rax]
   140008324:	or     dh,BYTE PTR [rdx]
   140008326:	(bad)  
   140008327:	push   rax
   140008328:	sub    bl,BYTE PTR [rax+0x0]
   14000832b:	add    al,bl
   14000832d:	jnp    0x14000832f
   14000832f:	add    BYTE PTR [rcx],al
   140008331:	or     eax,0x340d0006
   140008336:	or     BYTE PTR [rax],al
   140008338:	or     eax,0x7e00932
   14000833d:	jo     0x140008345
   14000833f:	(bad)  
   140008340:	sbb    DWORD PTR [rcx],ebp
   140008342:	or     eax,DWORD PTR [rax]
   140008344:	(bad)  
   140008345:	xor    al,0x56
   140008347:	add    BYTE PTR [rdi],dl
   140008349:	add    DWORD PTR [rsi+0x0],ecx
   14000834c:	adc    al,dh
   14000834e:	(bad)  
   14000834f:	loopne 0x14000835d
   140008351:	ror    BYTE PTR [rdx],1
   140008353:	ror    BYTE PTR [rax],0x70
   140008356:	(bad)  
   140008357:	(bad)  
   140008358:	(bad)  
   140008359:	push   rax
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	cmp    BYTE PTR [rax+0x0],bl
   14000835f:	add    BYTE PTR [rax+0x2],ah
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a4158372
   14000836a:	or     eax,DWORD PTR [rax]
   14000836c:	adc    eax,0x15000934
   140008371:	xor    cl,BYTE PTR [rsi]
   140008373:	loopne 0x140008381
   140008375:	jo     0x140008382
   140008377:	push   rax
   140008378:	add    DWORD PTR [rdi],edx
   14000837a:	or     BYTE PTR [rax],al
   14000837c:	(bad)  
   14000837d:	fs adc al,0x0
   140008380:	(bad)  
   140008381:	push   rsp
   140008382:	adc    eax,DWORD PTR [rax]
   140008384:	(bad)  
   140008385:	xor    al,0x12
   140008387:	add    BYTE PTR [rdi],dl
   140008389:	repnz adc BYTE PTR [rax+0x1],dh
   14000838d:	sbb    al,0xa
   14000838f:	add    BYTE PTR [rsp+riz*2],bl
   140008392:	or     eax,0xc541c00
   140008397:	add    BYTE PTR [rsp+rsi*1],bl
   14000839a:	or     eax,DWORD PTR [rax]
   14000839c:	sbb    al,0x52
   14000839e:	sbb    al,dh
   1400083a0:	(bad)  
   1400083a1:	loopne 0x1400083b7
   1400083a3:	jo     0x1400083be
   1400083a5:	and    BYTE PTR [rsi],al
   1400083a7:	add    BYTE PTR [rdx],dl
   1400083a9:	xor    al,0x16
   1400083ab:	add    BYTE PTR [rdx],dl
   1400083ad:	repnz or BYTE PTR [rax+0x7],dh
   1400083b1:	(bad)  
   1400083b2:	(bad)  
   1400083b3:	push   rax
   1400083b4:	cmp    BYTE PTR [rax+0x0],bl
   1400083b7:	add    BYTE PTR [rax+0x0],bh
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	sbb    DWORD PTR [rbx],ebp
   1400083be:	or     al,0x0
   1400083c0:	sbb    al,0x64
   1400083c2:	(bad)  
   1400083c3:	add    BYTE PTR [rsp+rdx*2],bl
   1400083c6:	adc    eax,0x14341c00
   1400083cb:	add    BYTE PTR [rdx+rdx*8],bl
   1400083ce:	sbb    al,dh
   1400083d0:	(bad)  
   1400083d1:	loopne 0x1400083e7
   1400083d3:	rcl    BYTE PTR [rdx],1
   1400083d5:	rcl    BYTE PTR [rax],0x70
   1400083d8:	cmp    BYTE PTR [rax+0x0],bl
   1400083db:	add    BYTE PTR [rax+0x0],ch
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	add    DWORD PTR [rbx],edx
   1400083e2:	or     BYTE PTR [rax],al
   1400083e4:	adc    esi,DWORD PTR [rbx+rdx*1]
   1400083e7:	add    BYTE PTR [rbx],dl
   1400083e9:	mov    dl,0xc
   1400083eb:	lock or ah,al
   1400083ee:	or     BYTE PTR [rax+0x7],dh
   1400083f1:	(bad)  
   1400083f2:	(bad)  
   1400083f3:	push   rax
   1400083f4:	add    DWORD PTR [rbx],edx
   1400083f6:	or     BYTE PTR [rax],al
   1400083f8:	adc    edx,DWORD PTR [rcx+rcx*1+0x0]
   1400083fc:	adc    esi,DWORD PTR [rax+rcx*1]
   1400083ff:	add    BYTE PTR [rbx],dl
   140008401:	xor    cl,BYTE PTR [rdi]
   140008403:	loopne 0x140008412
   140008405:	jo     0x140008413
   140008407:	(bad)  
   140008408:	add    DWORD PTR [rdi],edx
   14000840a:	or     al,BYTE PTR [rax]
   14000840c:	(bad)  
   14000840d:	xor    al,0x10
   14000840f:	add    BYTE PTR [rdi],dl
   140008411:	jb     0x140008423
   140008413:	lock (bad) 
   140008415:	loopne 0x140008423
   140008417:	ror    BYTE PTR [rdx],1
   140008419:	ror    BYTE PTR [rax],0x70
   14000841c:	(bad)  
   14000841d:	(bad)  
   14000841e:	(bad)  
   14000841f:	push   rax
   140008420:	add    DWORD PTR [rdx],edx
   140008422:	(bad)  
   140008423:	add    BYTE PTR [rdx],dl
   140008425:	push   rdx
   140008426:	or     esp,eax
   140008428:	or     DWORD PTR [rax+0x8],esi
   14000842b:	(bad)  
   14000842c:	(bad)  
   14000842d:	xor    BYTE PTR [rsi],al
   14000842f:	push   rax
   140008430:	add    DWORD PTR [rsi],ecx
   140008432:	(bad)  
   140008433:	add    BYTE PTR [rsi],cl
   140008435:	push   rdx
   140008436:	(bad)  
   140008437:	loopne 0x14000843e
   140008439:	jo     0x14000843f
   14000843b:	(bad)  
   14000843c:	add    esi,DWORD PTR [rax]
   14000843e:	add    dl,BYTE PTR [rax+0x1]
   140008441:	adc    cl,BYTE PTR [rax]
   140008443:	add    BYTE PTR [rdx],dl
   140008445:	push   rsp
   140008446:	or     al,BYTE PTR [rax]
   140008448:	adc    dh,BYTE PTR [rax+rcx*1]
   14000844b:	add    BYTE PTR [rdx],dl
   14000844d:	xor    cl,BYTE PTR [rsi]
   14000844f:	loopne 0x14000845d
   140008451:	jo     0x14000845e
   140008453:	(bad)  
   140008454:	add    DWORD PTR [rsi],eax
   140008456:	add    al,BYTE PTR [rax]
   140008458:	(bad)  
   140008459:	push   rdx
   14000845a:	add    dh,BYTE PTR [rax]
   14000845c:	add    DWORD PTR [rdx+rcx*1],ebx
   14000845f:	add    BYTE PTR [rsp+rsi*1],bl
   140008462:	adc    eax,DWORD PTR [rax]
   140008464:	sbb    al,0x92
   140008466:	adc    eax,0x11e013f0
   14000846b:	ror    BYTE PTR [rdi],1
   14000846d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6090e4
   140008474:	add    DWORD PTR [rdx],edx
   140008476:	or     BYTE PTR [rax],al
   140008478:	adc    dl,BYTE PTR [rdx+0xb]
   14000847b:	lock or eax,esp
   14000847e:	(bad)  
   14000847f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436088f6
   140008486:	add    dl,BYTE PTR [rax+0x1]
   140008489:	adc    eax,0x64150008
   14000848e:	adc    eax,DWORD PTR [rax]
   140008490:	adc    eax,0x15001134
   140008495:	mov    dl,0xe
   140008497:	loopne 0x1400084a5
   140008499:	jo     0x1400084a6
   14000849b:	push   rax
   14000849c:	add    DWORD PTR [rbx],ebx
   14000849e:	or     al,BYTE PTR [rax]
   1400084a0:	sbb    esi,DWORD PTR [rbx+rdx*1+0x0]
   1400084a4:	sbb    esp,DWORD PTR [rdx+rdx*1+0x0]
   1400084a8:	sbb    esi,DWORD PTR [rcx+rdx*1]
   1400084ab:	add    BYTE PTR [rbx],bl
   1400084ad:	mov    dl,0x14
   1400084af:	lock adc ah,al
   1400084b2:	adc    BYTE PTR [rax+0x1],dl
   1400084b5:	or     BYTE PTR [rdx],al
   1400084b7:	add    BYTE PTR [rax],cl
   1400084b9:	xchg   edx,eax
   1400084ba:	add    al,0x30
   1400084bc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d84c6
   1400084c2:	adc    al,BYTE PTR [rax]
   1400084c4:	or     eax,0x17006f2
   1400084c9:	adc    cl,BYTE PTR [rax]
   1400084cb:	add    BYTE PTR [rdx],dl
   1400084cd:	push   rsp
   1400084ce:	or     DWORD PTR [rax],eax
   1400084d0:	adc    dh,BYTE PTR [rax+rcx*1]
   1400084d3:	add    BYTE PTR [rdx],dl
   1400084d5:	xor    cl,BYTE PTR [rsi]
   1400084d7:	loopne 0x1400084e5
   1400084d9:	jo     0x1400084e6
   1400084db:	(bad)  
   1400084dc:	add    DWORD PTR [rbx],ebx
   1400084de:	or     DWORD PTR [rax],eax
   1400084e0:	sbb    eax,DWORD PTR [rcx]
   1400084e2:	adc    al,0x0
   1400084e4:	(bad)  
   1400084e6:	or     eax,0x9c00bd0
   1400084eb:	jo     0x1400084f5
   1400084ed:	(bad)  
   1400084ee:	(bad)  
   1400084ef:	xor    BYTE PTR [rsi],al
   1400084f1:	push   rax
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	add    DWORD PTR [rsi],eax
   1400084f6:	add    al,BYTE PTR [rax]
   1400084f8:	(bad)  
   1400084f9:	jb     0x1400084fd
   1400084fb:	xor    BYTE PTR [rcx],bl
   1400084fd:	and    al,BYTE PTR [rdx]
   1400084ff:	add    BYTE PTR [rdi],al
   140008501:	add    DWORD PTR [rip+0x58c800],edx        # 0x140594d07
   140008507:	add    al,al
   140008509:	jae    0x14000850b
   14000850b:	add    BYTE PTR [rdx+0x14000000],dl
   140008511:	rex.WRX add BYTE PTR [rax],r8b
   140008514:	(bad)  
   140008515:	(bad)  
   140008516:	(bad)  
   140008517:	dec    DWORD PTR [rax+0x4e]
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	add    BYTE PTR [rax],al
   14000851e:	add    BYTE PTR [rax],al
   140008520:	sbb    DWORD PTR [rdx],esp
   140008522:	add    al,BYTE PTR [rax]
   140008524:	(bad)  
   140008525:	add    DWORD PTR [rip+0x58c800],edx        # 0x140594d2b
   14000852b:	add    al,ch
   14000852d:	jae    0x14000852f
   14000852f:	add    BYTE PTR [rdx-0x1000000],dl
   140008535:	(bad)  
   140008536:	(bad)  
   140008537:	(bad)  
   140008538:	cmp    ebx,DWORD PTR [rdi+0x0]
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rax+0x4e],dh
   140008542:	add    BYTE PTR [rax],al
   140008544:	(bad)  
   140008545:	(bad)  
   140008546:	(bad)  
   140008547:	jmp    QWORD PTR [rsi+rcx*2+0x0]
   14000854e:	add    BYTE PTR [rax],al
   140008550:	sbb    DWORD PTR [rax],esp
   140008552:	add    eax,0x14c21800
   140008557:	loopne 0x14000856b
   140008559:	jo     0x14000856c
   14000855b:	(bad)  
   14000855c:	adc    BYTE PTR [rax],dh
   14000855e:	add    BYTE PTR [rax],al
   140008560:	sub    bl,BYTE PTR [rax+0x0]
   140008563:	add    BYTE PTR [rax],dl
   140008565:	je     0x140008567
	...
   14000856f:	add    BYTE PTR [rbx],al
   140008571:	add    BYTE PTR [rax],al
   140008573:	add    BYTE PTR [rcx],al
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax+0x2000085],dl
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rdx],al
   140008581:	add    BYTE PTR [rax],al
   140008583:	add    BYTE PTR [rbx],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rcx],al
   140008589:	add    BYTE PTR [rax],al
   14000858b:	add    BYTE PTR [rbp+rax*4+0x400000],ah
	...
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	test   al,0x5e
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	cmp    BYTE PTR [rax],al
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	add    BYTE PTR [rax],al
	...
   1400085af:	add    BYTE PTR [rip+0x3800005f],cl        # 0x178008614
	...
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    ah,al
   1400085c1:	rex.WXB add BYTE PTR [r8],al
   1400085c4:	(bad)  
   1400085c5:	(bad)  
   1400085c6:	(bad)  
   1400085c7:	jmp    FWORD PTR [rip+0x4c]        # 0x140008619
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rdx+0x4c],ch
   1400085d2:	add    BYTE PTR [rax],al
   1400085d4:	(bad)  
   1400085d5:	(bad)  
   1400085d6:	(bad)  
   1400085d7:	jmp    FWORD PTR [rax+0x5e]
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rbp+0x100005e],dh
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    bl,al
   1400085e9:	pop    rsi
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	add    al,BYTE PTR [rax]
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	call   FWORD PTR [rsi+0x0]
   1400085f3:	add    BYTE PTR [rax],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rdx],bl
   1400085f9:	pop    rdi
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	add    eax,DWORD PTR [rax]
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	sbb    DWORD PTR [rdx],ecx
   140008602:	add    al,BYTE PTR [rax]
   140008604:	or     dh,BYTE PTR [rdx]
   140008606:	(bad)  
   140008607:	push   rax
   140008608:	sub    bl,BYTE PTR [rax+0x0]
   14000860b:	add    BYTE PTR [rax],dl
   14000860d:	je     0x14000860f
   14000860f:	add    BYTE PTR [rcx],dl
   140008611:	sbb    BYTE PTR [rax+rax*1],al
   140008614:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008617:	add    BYTE PTR [rdx],cl
   140008619:	push   rdx
   14000861a:	(bad)  
   14000861b:	jo     0x140008647
   14000861d:	pop    rax
   14000861e:	add    BYTE PTR [rax],al
   140008620:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   140008624:	add    BYTE PTR [rax],al
   140008626:	add    BYTE PTR [rax],al
   140008628:	test   BYTE PTR [rcx+0x0],cl
   14000862b:	add    bh,bh
   14000862d:	(bad)  
   14000862e:	(bad)  
   14000862f:	jmp    FWORD PTR [rax+0x49]
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    al,bl
   140008639:	rex.WB add BYTE PTR [r8],al
   14000863c:	(bad)  
   14000863d:	(bad)  
   14000863e:	(bad)  
   14000863f:	call   QWORD PTR [rcx]
   140008641:	sbb    al,0x6
   140008643:	add    BYTE PTR [rsp+riz*2],bl
   140008646:	or     al,BYTE PTR [rax]
   140008648:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000864b:	add    BYTE PTR [rdx+rdx*2],cl
   14000864e:	or     BYTE PTR [rax+0x2a],dh
   140008651:	pop    rax
   140008652:	add    BYTE PTR [rax],al
   140008654:	(bad)  
   140008655:	je     0x140008657
   140008657:	add    BYTE PTR [rcx+rcx*2],cl
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	(bad)  
   14000865d:	(bad)  
   14000865e:	(bad)  
   14000865f:	push   QWORD PTR [rcx+rcx*2]
   140008662:	add    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	(bad)  
   140008669:	rex.WB add BYTE PTR [r8],al
   14000866c:	(bad)  
   14000866d:	(bad)  
   14000866e:	(bad)  
   14000866f:	call   FWORD PTR [rcx]
   140008671:	adc    eax,DWORD PTR [rcx]
   140008673:	add    BYTE PTR [rdx+riz*8],al
   140008676:	add    BYTE PTR [rax],al
   140008678:	cmp    BYTE PTR [rax+0x0],bl
   14000867b:	add    BYTE PTR [rax+0x0],ah
   14000867e:	add    BYTE PTR [rax],al
   140008680:	adc    DWORD PTR [rax],ebx
   140008682:	add    al,0x0
   140008684:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008687:	add    BYTE PTR [rdx],cl
   140008689:	push   rdx
   14000868a:	(bad)  
   14000868b:	jo     0x1400086b7
   14000868d:	pop    rax
   14000868e:	add    BYTE PTR [rax],al
   140008690:	mov    BYTE PTR [rax+rax*1+0x0],dh
   140008694:	add    BYTE PTR [rax],al
   140008696:	add    BYTE PTR [rax],al
   140008698:	cwde   
   140008699:	rex.W add BYTE PTR [rax],al
   14000869c:	(bad)  
   14000869d:	(bad)  
   14000869e:	(bad)  
   14000869f:	(bad)  
   1400086a0:	mov    esp,0x48
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    ah,ch
   1400086a9:	rex.W add BYTE PTR [rax],al
   1400086ac:	(bad)  
   1400086ad:	(bad)  
   1400086ae:	(bad)  
   1400086af:	call   QWORD PTR [rcx]
   1400086b1:	sbb    al,0x6
   1400086b3:	add    BYTE PTR [rsp+riz*2],bl
   1400086b6:	or     al,BYTE PTR [rax]
   1400086b8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400086bb:	add    BYTE PTR [rdx+rdx*2],cl
   1400086be:	or     BYTE PTR [rax+0x2a],dh
   1400086c1:	pop    rax
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	mov    al,0x74
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	(bad)  
   1400086c9:	rex.WX add BYTE PTR [rax],al
   1400086cc:	(bad)  
   1400086cd:	(bad)  
   1400086ce:	(bad)  
   1400086cf:	dec    DWORD PTR [rax+0x4a]
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    BYTE PTR [rdx+rcx*2-0x10000],dh
   1400086de:	(bad)  
   1400086df:	call   QWORD PTR [rcx]
   1400086e1:	sbb    BYTE PTR [rax+rax*1],al
   1400086e4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400086e7:	add    BYTE PTR [rdx],cl
   1400086e9:	push   rdx
   1400086ea:	(bad)  
   1400086eb:	jo     0x140008717
   1400086ed:	pop    rax
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	fdiv   DWORD PTR [rax+rax*1+0x0]
   1400086f4:	(bad)  
   1400086f5:	(bad)  
   1400086f6:	(bad)  
   1400086f7:	call   QWORD PTR [rsi+0x5e]
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    ah,ch
   140008701:	rex.WB add BYTE PTR [r8],al
   140008704:	(bad)  
   140008705:	(bad)  
   140008706:	(bad)  
   140008707:	call   QWORD PTR [rax]
   140008709:	rex.WX add BYTE PTR [rax],al
   14000870c:	add    BYTE PTR [rax],al
   14000870e:	add    BYTE PTR [rax],al
   140008710:	rex
   140008711:	rex.WX add BYTE PTR [rax],al
   140008714:	(bad)  
   140008715:	(bad)  
   140008716:	(bad)  
   140008717:	dec    DWORD PTR [rcx]
   140008719:	sbb    DWORD PTR [rdx],ecx
   14000871b:	add    BYTE PTR [rcx],bl
   14000871d:	(bad)  
   14000871e:	or     eax,DWORD PTR [rax]
   140008720:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008724:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008728:	sbb    DWORD PTR [rax+rcx*1],esi
   14000872b:	add    BYTE PTR [rcx],bl
   14000872d:	push   rdx
   14000872e:	adc    eax,0x5c56e0
   140008733:	add    BYTE PTR [rcx],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    cl,ch
   140008739:	push   rdx
   14000873a:	add    BYTE PTR [rax],al
   14000873c:	pop    rdx
   14000873d:	push   rsp
   14000873e:	add    BYTE PTR [rax],al
   140008740:	rex.WRB pop r15
   140008742:	add    BYTE PTR [rax],al
   140008744:	pop    rdx
   140008745:	push   rsp
   140008746:	add    BYTE PTR [rax],al
   140008748:	add    DWORD PTR [rax],eax
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	add    DWORD PTR [rdx+rax*1],ecx
   14000874f:	add    BYTE PTR [rcx+rax*1],cl
   140008752:	adc    DWORD PTR [rax],eax
   140008754:	adc    DWORD PTR [rdx],ecx
   140008756:	add    al,0x0
   140008758:	or     dh,BYTE PTR [rsi+rax*1]
   14000875b:	add    BYTE PTR [rdx],cl
   14000875d:	xor    al,BYTE PTR [rsi]
   14000875f:	jo     0x1400087b7
   140008761:	pop    rsp
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    DWORD PTR [rax],eax
   140008766:	add    BYTE PTR [rax],al
   140008768:	jns    0x1400087c1
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	mov    esi,0x71000057
   140008771:	pop    rdi
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax],al
   140008778:	add    DWORD PTR [rcx+rax*1],eax
   14000877b:	add    BYTE PTR [rdx+rax*2],al
   14000877e:	add    BYTE PTR [rax],al
   140008780:	or     DWORD PTR [rcx+rax*1],eax
   140008783:	add    BYTE PTR [rdx+riz*1],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	push   rsi
   140008789:	pop    rsp
   14000878a:	add    BYTE PTR [rax],al
   14000878c:	add    DWORD PTR [rax],eax
   14000878e:	add    BYTE PTR [rax],al
   140008790:	fcomp  QWORD PTR [rcx+0x0]
   140008793:	add    BYTE PTR [rdx],dl
   140008795:	pop    rdx
   140008796:	add    BYTE PTR [rax],al
   140008798:	add    DWORD PTR [rax],eax
   14000879a:	add    BYTE PTR [rax],al
   14000879c:	adc    bl,BYTE PTR [rdx+0x0]
   14000879f:	add    BYTE PTR [rcx],cl
   1400087a1:	or     al,BYTE PTR [rax+rax*1]
   1400087a4:	or     dh,BYTE PTR [rsi+rax*1]
   1400087a7:	add    BYTE PTR [rdx],cl
   1400087a9:	xor    al,BYTE PTR [rsi]
   1400087ab:	jo     0x140008803
   1400087ad:	pop    rsp
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	add    DWORD PTR [rax],eax
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	in     eax,dx
   1400087b5:	pop    rdx
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	and    BYTE PTR [rbx+0x0],bl
   1400087bb:	add    BYTE PTR [rax+0x2000005f],ah
   1400087c1:	pop    rbx
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	add    DWORD PTR [rsi],eax
   1400087c6:	add    al,BYTE PTR [rax]
   1400087c8:	(bad)  
   1400087c9:	xor    al,BYTE PTR [rdx]
   1400087cb:	push   rax
   1400087cc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d87d6
   1400087d2:	or     DWORD PTR [rax],eax
   1400087d4:	or     eax,0x1500632
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rcx],al
   1400087dd:	sbb    BYTE PTR [rcx],al
   1400087df:	add    BYTE PTR [rax],bl
   1400087e1:	ret    0x0
	...
   1400087ec:	adc    BYTE PTR [rbx+0x0],cl
   1400087ef:	add    BYTE PTR [rax],al
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rax],cl
   1400087f5:	mov    BYTE PTR [rax],al
	...
   140008807:	add    BYTE PTR [rdx],al
   140008809:	add    BYTE PTR [rax],al
   14000880b:	add    BYTE PTR [rax],ah
   14000880d:	mov    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rax-0x77],bh
	...
   140008822:	add    BYTE PTR [rax],al
   140008824:	xor    BYTE PTR [rax+0x0],ah
   14000882a:	add    BYTE PTR [rax],al
   14000882c:	(bad)  
   14000882d:	(bad)  
   14000882e:	(bad)  
   14000882f:	inc    DWORD PTR [rax]
   140008831:	add    BYTE PTR [rax],al
   140008833:	add    BYTE PTR [rax+0x0],al
   140008836:	add    BYTE PTR [rax],al
   140008838:	test   BYTE PTR [rcx+0x0],cl
	...
   14000884b:	add    BYTE PTR [rax],dl
   14000884d:	rex.WXB add BYTE PTR [r8],al
   140008850:	add    BYTE PTR [rax],al
   140008852:	add    BYTE PTR [rax],al
   140008854:	push   0x88
	...
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    BYTE PTR [rbx],al
   140008869:	add    BYTE PTR [rax],al
   14000886b:	add    BYTE PTR [rax+0x20000088],cl
   140008871:	mov    BYTE PTR [rax],al
   140008873:	add    BYTE PTR [rax-0x77],bh
	...
   14000888a:	add    BYTE PTR [rax],al
   14000888c:	pop    rax
   14000888d:	movabs al,ds:0xffff000000000000
   140008896:	(bad)  
   140008897:	inc    DWORD PTR [rax]
   140008899:	add    BYTE PTR [rax],al
   14000889b:	add    BYTE PTR [rax+0x0],al
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	cwde   
   1400088a1:	rex.W add BYTE PTR [rax],al
	...
   1400088b4:	adc    BYTE PTR [rbx+0x0],cl
   1400088b7:	add    BYTE PTR [rax],al
   1400088b9:	add    BYTE PTR [rax],al
   1400088bb:	add    al,dl
   1400088bd:	mov    BYTE PTR [rax],al
	...
   1400088cf:	add    BYTE PTR [rbx],al
   1400088d1:	add    BYTE PTR [rax],al
   1400088d3:	add    al,dh
   1400088d5:	mov    BYTE PTR [rax],al
   1400088d7:	add    BYTE PTR [rax],ah
   1400088d9:	mov    BYTE PTR [rax],al
   1400088db:	add    BYTE PTR [rax-0x77],bh
	...
   1400088f2:	add    BYTE PTR [rax],al
   1400088f4:	and    BYTE PTR [rax+0x0],0x0
   1400088fb:	add    bh,bh
   1400088fd:	(bad)  
   1400088fe:	(bad)  
   1400088ff:	inc    DWORD PTR [rax]
   140008901:	add    BYTE PTR [rax],al
   140008903:	add    BYTE PTR [rax+0x0],al
   140008906:	add    BYTE PTR [rax],al
   140008908:	in     al,dx
   140008909:	rex.WB add BYTE PTR [r8],al
	...
   140008918:	add    al,BYTE PTR [rax]
   14000891a:	add    BYTE PTR [rax],al
   14000891c:	xor    BYTE PTR [rcx-0x76880000],cl
	...
   14000892e:	add    BYTE PTR [rax],al
   140008930:	adc    BYTE PTR [rax],al
   140008932:	add    BYTE PTR [rax],al
   140008934:	test   al,0xa0
   140008936:	add    BYTE PTR [rax],al
   140008938:	add    BYTE PTR [rax],al
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	(bad)  
   14000893d:	(bad)  
   14000893e:	(bad)  
   14000893f:	inc    DWORD PTR [rax]
   140008941:	add    BYTE PTR [rax],al
   140008943:	add    BYTE PTR [rax],bl
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    al,dl
   140008949:	adc    BYTE PTR [rax],al
	...
   14000895b:	add    BYTE PTR [rax+rdx*1],bh
   14000895e:	add    BYTE PTR [rax],al
   140008960:	add    BYTE PTR [rax],al
   140008962:	add    BYTE PTR [rax],al
   140008964:	sbb    BYTE PTR [rcx+0x0],cl
	...
   14000897a:	add    BYTE PTR [rax],al
   14000897c:	shl    BYTE PTR [rax+0x0],1
   140008982:	add    BYTE PTR [rax],al
   140008984:	(bad)  
   140008985:	(bad)  
   140008986:	(bad)  
   140008987:	inc    DWORD PTR [rax]
   140008989:	add    BYTE PTR [rax],al
   14000898b:	add    BYTE PTR [rax],bl
   14000898d:	add    BYTE PTR [rax],al
   14000898f:	add    BYTE PTR [rsi+0x55],al
	...
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	add    DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	nop
   1400089a1:	jne    0x1400089a3
   1400089a3:	add    al,ah
   1400089a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	add    al,ah
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	loopne 0x140008937
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	and    BYTE PTR [rdx+0x0],cl
	...
   1400089de:	add    BYTE PTR [rax],al
   1400089e0:	(bad)  
   1400089e1:	mov    al,BYTE PTR [rax]
   1400089e3:	add    BYTE PTR [rax],al
   1400089e5:	add    BYTE PTR [rax],al
   1400089e7:	add    al,bh
   1400089e9:	mov    DWORD PTR [rax],eax
	...
   1400089f7:	add    BYTE PTR [rax],al
   1400089f9:	add    BYTE PTR [rsi+0x65],cl
   1400089fc:	je     0x140008a51
   1400089fe:	gs je  0x140008a76
   140008a01:	jo     0x140008a4c
   140008a03:	outs   dx,BYTE PTR ds:[rsi]
   140008a04:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008a0c:	add    BYTE PTR [rax],al
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	rex.WRX
   140008a11:	gs je  0x140008a67
   140008a14:	gs je  0x140008a8c
   140008a17:	jo     0x140008a5c
   140008a19:	ins    BYTE PTR es:[rdi],dx
   140008a1a:	outs   dx,DWORD PTR ds:[rsi]
   140008a1b:	jae    0x140008a82
	...
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    al,cl
   140008a39:	mov    al,BYTE PTR [rax]
	...
   140008a43:	add    ah,dh
   140008a45:	lea    eax,[rax]
   140008a47:	add    BYTE PTR [rax],al
   140008a49:	jo     0x140008a4b
   140008a4b:	add    al,ah
   140008a4d:	mov    al,BYTE PTR [rax]
	...
   140008a57:	add    al,dh
   140008a59:	mov    es,WORD PTR [rax]
   140008a5b:	add    BYTE PTR [rax],bl
   140008a5d:	jo     0x140008a5f
   140008a5f:	add    BYTE PTR [rax-0x74],dl
	...
   140008a6a:	add    BYTE PTR [rax],al
   140008a6c:	xor    dl,BYTE PTR [rcx+0x71880000]
   140008a72:	add    BYTE PTR [rax],al
   140008a74:	mov    al,0x8d
	...
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	fcom   QWORD PTR [rcx+0x72e80000]
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	clc    
   140008a89:	mov    eax,DWORD PTR [rax]
	...
   140008a93:	add    dh,ah
   140008a95:	xchg   ecx,eax
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	xor    BYTE PTR [rcx+0x0],dh
   140008a9b:	add    BYTE PTR [rax],bl
   140008a9d:	mov    WORD PTR [rax],es
	...
   140008aa7:	add    BYTE PTR [rdx+0x50000092],bl
   140008aad:	jno    0x140008aaf
	...
   140008ac7:	add    dh,ah
   140008ac9:	lea    eax,[rax]
   140008acb:	add    BYTE PTR [rax],al
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	add    al,bl
   140008ad1:	lea    eax,[rax]
	...
   140008adf:	add    BYTE PTR [rdx],al
   140008ae1:	mov    es,WORD PTR [rax]
   140008ae3:	add    BYTE PTR [rax],al
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	add    BYTE PTR [rsi+rcx*4],dl
   140008aea:	add    BYTE PTR [rax],al
   140008aec:	add    BYTE PTR [rax],al
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	xor    al,0x8e
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	add    BYTE PTR [rax],al
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	rex.WX mov es,WORD PTR [rax]
   140008afb:	add    BYTE PTR [rax],al
   140008afd:	add    BYTE PTR [rax],al
   140008aff:	add    BYTE PTR [rax-0x72],ah
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	add    BYTE PTR [rax],al
   140008b06:	add    BYTE PTR [rax],al
   140008b08:	je     0x140008a98
   140008b0a:	add    BYTE PTR [rax],al
   140008b0c:	add    BYTE PTR [rax],al
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	test   BYTE PTR [rsi+0x0],cl
   140008b16:	add    BYTE PTR [rax],al
   140008b18:	xchg   edx,eax
   140008b19:	mov    es,WORD PTR [rax]
   140008b1b:	add    BYTE PTR [rax],al
   140008b1d:	add    BYTE PTR [rax],al
   140008b1f:	add    BYTE PTR [rdx+0x8e],ch
   140008b25:	add    BYTE PTR [rax],al
   140008b27:	add    BYTE PTR [rsi+0x8e],dh
   140008b2d:	add    BYTE PTR [rax],al
   140008b2f:	add    al,cl
   140008b31:	mov    es,WORD PTR [rax]
   140008b33:	add    BYTE PTR [rax],al
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    ah,dl
   140008b39:	mov    es,WORD PTR [rax]
   140008b3b:	add    BYTE PTR [rax],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    dl,ah
   140008b41:	xchg   ebx,eax
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	add    BYTE PTR [rax],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	(bad)  
   140008b49:	xchg   ebx,eax
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	add    BYTE PTR [rax],al
   140008b4e:	add    BYTE PTR [rax],al
   140008b50:	(bad)  
   140008b51:	xchg   ebx,eax
   140008b52:	add    BYTE PTR [rax],al
   140008b54:	add    BYTE PTR [rax],al
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	mov    ah,0x93
   140008b5a:	add    BYTE PTR [rax],al
   140008b5c:	add    BYTE PTR [rax],al
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	(bad)  
   140008b61:	xchg   ebx,eax
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	add    BYTE PTR [rax],al
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	test   BYTE PTR [rbx+0x0],dl
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	outs   dx,BYTE PTR ds:[rsi]
   140008b71:	xchg   ebx,eax
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	add    BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	push   rsp
   140008b79:	xchg   ebx,eax
   140008b7a:	add    BYTE PTR [rax],al
   140008b7c:	add    BYTE PTR [rax],al
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	rex xchg ebx,eax
   140008b82:	add    BYTE PTR [rax],al
   140008b84:	add    BYTE PTR [rax],al
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	sub    al,0x93
   140008b8a:	add    BYTE PTR [rax],al
   140008b8c:	add    BYTE PTR [rax],al
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	(bad)  
   140008b91:	xchg   ebx,eax
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	add    BYTE PTR [rax],al
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	repnz xchg edx,eax
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	add    BYTE PTR [rax],al
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	ficom  WORD PTR [rdx+0x0]
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	(bad)  
   140008ba9:	xchg   edx,eax
   140008baa:	add    BYTE PTR [rax],al
   140008bac:	add    BYTE PTR [rax],al
   140008bae:	add    BYTE PTR [rax],al
   140008bb0:	mov    al,0x92
   140008bb2:	add    BYTE PTR [rax],al
   140008bb4:	add    BYTE PTR [rax],al
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	test   al,0x92
   140008bba:	add    BYTE PTR [rax],al
   140008bbc:	add    BYTE PTR [rax],al
   140008bbe:	add    BYTE PTR [rax],al
   140008bc0:	(bad)  
   140008bc1:	xchg   esp,eax
   140008bc2:	add    BYTE PTR [rax],al
   140008bc4:	add    BYTE PTR [rax],al
   140008bc6:	add    BYTE PTR [rax],al
   140008bc8:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140008bcf:	add    BYTE PTR [rdx],bh
   140008bd1:	xchg   esp,eax
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	add    BYTE PTR [rax],al
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	rex.WX xchg rsp,rax
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	add    BYTE PTR [rax],al
   140008bde:	add    BYTE PTR [rax],al
   140008be0:	pop    rsp
   140008be1:	xchg   esp,eax
   140008be2:	add    BYTE PTR [rax],al
   140008be4:	add    BYTE PTR [rax],al
   140008be6:	add    BYTE PTR [rax],al
   140008be8:	cld    
   140008be9:	xchg   ebx,eax
	...
   140008bf6:	add    BYTE PTR [rax],al
   140008bf8:	add    al,0x0
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	add    BYTE PTR [rax],al
   140008bfe:	add    BYTE PTR [rax+0x7],al
   140008c04:	add    BYTE PTR [rax],al
   140008c06:	add    BYTE PTR [rax+0x6],al
   140008c0c:	add    BYTE PTR [rax],al
   140008c0e:	add    BYTE PTR [rax+0x0],al
   140008c14:	add    BYTE PTR [rax],al
   140008c16:	add    BYTE PTR [rax],al
   140008c18:	cmp    BYTE PTR [rdx+0x0],dl
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	hlt    
   140008c21:	xchg   ecx,eax
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	add    BYTE PTR [rax],al
   140008c26:	add    BYTE PTR [rax],al
   140008c28:	push   rsi
   140008c29:	xchg   edx,eax
   140008c2a:	add    BYTE PTR [rax],al
   140008c2c:	add    BYTE PTR [rax],al
   140008c2e:	add    BYTE PTR [rax],al
   140008c30:	jp     0x140008bc4
   140008c32:	add    BYTE PTR [rax],al
   140008c34:	add    BYTE PTR [rax],al
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	or     BYTE PTR [rdx+0x0],dl
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	and    BYTE PTR [rdx+0x0],dl
	...
   140008c4e:	add    BYTE PTR [rax],al
   140008c50:	add    al,0x91
   140008c52:	add    BYTE PTR [rax],al
   140008c54:	add    BYTE PTR [rax],al
   140008c56:	add    BYTE PTR [rax],al
   140008c58:	sbb    al,0x91
   140008c5a:	add    BYTE PTR [rax],al
   140008c5c:	add    BYTE PTR [rax],al
   140008c5e:	add    BYTE PTR [rax],al
   140008c60:	es xchg ecx,eax
   140008c62:	add    BYTE PTR [rax],al
   140008c64:	add    BYTE PTR [rax],al
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	ds xchg ecx,eax
   140008c6a:	add    BYTE PTR [rax],al
   140008c6c:	add    BYTE PTR [rax],al
   140008c6e:	add    BYTE PTR [rax],al
   140008c70:	push   rsi
   140008c71:	xchg   ecx,eax
   140008c72:	add    BYTE PTR [rax],al
   140008c74:	add    BYTE PTR [rax],al
   140008c76:	add    BYTE PTR [rax],al
   140008c78:	pop    rsi
   140008c79:	xchg   ecx,eax
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	add    BYTE PTR [rax],al
   140008c7e:	add    BYTE PTR [rax],al
   140008c80:	push   0x91
   140008c85:	add    BYTE PTR [rax],al
   140008c87:	add    al,bh
   140008c89:	nop
   140008c8a:	add    BYTE PTR [rax],al
   140008c8c:	add    BYTE PTR [rax],al
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	adc    BYTE PTR [rcx+0x0],0x0
   140008c97:	add    BYTE PTR [rdx],ah
   140008c99:	nop
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	add    BYTE PTR [rax],al
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	sbb    BYTE PTR [rax+0x0],dl
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	adc    BYTE PTR [rax+0x0],dl
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	add    al,0x90
   140008cb2:	add    BYTE PTR [rax],al
   140008cb4:	add    BYTE PTR [rax],al
   140008cb6:	add    BYTE PTR [rax],al
   140008cb8:	cli    
   140008cb9:	pop    QWORD PTR [rax]
   140008cbb:	add    BYTE PTR [rax],al
   140008cbd:	add    BYTE PTR [rax],al
   140008cbf:	add    ah,ah
   140008cc1:	nop
   140008cc2:	add    BYTE PTR [rax],al
   140008cc4:	add    BYTE PTR [rax],al
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	rex.WRX xchg rax,rax
   140008cca:	add    BYTE PTR [rax],al
   140008ccc:	add    BYTE PTR [rax],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	rex.X xchg eax,eax
   140008cd2:	add    BYTE PTR [rax],al
   140008cd4:	add    BYTE PTR [rax],al
   140008cd6:	add    BYTE PTR [rax],al
   140008cd8:	rcl    BYTE PTR [rax+0x0],cl
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	rcl    BYTE PTR [rax+0x0],0x0
   140008ce7:	add    BYTE PTR [rsi+0x90],ch
   140008ced:	add    BYTE PTR [rax],al
   140008cef:	add    BYTE PTR [rax+0x90],ah
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rdx+0x90],dl
   140008cfd:	add    BYTE PTR [rax],al
   140008cff:	add    BYTE PTR [rax+rdx*4+0x0],bh
   140008d03:	add    BYTE PTR [rax],al
   140008d05:	add    BYTE PTR [rax],al
   140008d07:	add    BYTE PTR [rax+rdx*4+0x0],ah
   140008d0b:	add    BYTE PTR [rax],al
   140008d0d:	add    BYTE PTR [rax],al
   140008d0f:	add    BYTE PTR [rsi-0x6f],dh
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	lock pop QWORD PTR [rax]
   140008d1b:	add    BYTE PTR [rax],al
   140008d1d:	add    BYTE PTR [rax],al
   140008d1f:	add    dl,dl
   140008d21:	pop    QWORD PTR [rax]
   140008d23:	add    BYTE PTR [rax],al
   140008d25:	add    BYTE PTR [rax],al
   140008d27:	add    dh,al
   140008d29:	pop    QWORD PTR [rax]
   140008d2b:	add    BYTE PTR [rax],al
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	add    BYTE PTR [rdi+rcx*4+0x0],bh
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	mov    al,0x8f
   140008d3a:	add    BYTE PTR [rax],al
   140008d3c:	add    BYTE PTR [rax],al
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	test   al,0x8f
   140008d42:	add    BYTE PTR [rax],al
   140008d44:	add    BYTE PTR [rax],al
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	sahf   
   140008d49:	pop    QWORD PTR [rax]
   140008d4b:	add    BYTE PTR [rax],al
   140008d4d:	add    BYTE PTR [rax],al
   140008d4f:	add    BYTE PTR [rdx+0x8f],dl
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rdi+rcx*4+0x0],al
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	jp     0x140008cf1
   140008d62:	add    BYTE PTR [rax],al
   140008d64:	add    BYTE PTR [rax],al
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	ins    BYTE PTR es:[rdi],dx
   140008d69:	pop    QWORD PTR [rax]
   140008d6b:	add    BYTE PTR [rax],al
   140008d6d:	add    BYTE PTR [rax],al
   140008d6f:	add    BYTE PTR [rax-0x71],ah
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    BYTE PTR [rax],al
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	push   rsp
   140008d79:	pop    QWORD PTR [rax]
   140008d7b:	add    BYTE PTR [rax],al
   140008d7d:	add    BYTE PTR [rax],al
   140008d7f:	add    BYTE PTR [rsi],dh
   140008d81:	pop    QWORD PTR [rax]
   140008d83:	add    BYTE PTR [rax],al
   140008d85:	add    BYTE PTR [rax],al
   140008d87:	add    BYTE PTR [rsi],bl
   140008d89:	pop    QWORD PTR [rax]
   140008d8b:	add    BYTE PTR [rax],al
   140008d8d:	add    BYTE PTR [rax],al
   140008d8f:	add    dh,bh
   140008d91:	mov    es,WORD PTR [rax]
   140008d93:	add    BYTE PTR [rax],al
   140008d95:	add    BYTE PTR [rax],al
   140008d97:	add    dl,bl
   140008d99:	nop
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	add    BYTE PTR [rax],al
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	outs   dx,BYTE PTR ds:[rsi]
   140008da1:	xchg   esp,eax
	...
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	mov    eax,0x91
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rsi+0x91],ah
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    BYTE PTR [rcx+rdx*4+0x0],dl
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	enter  0x91,0x0
	...
   140008dd8:	mov    DWORD PTR [rdx],eax
   140008dda:	push   rdx
   140008ddb:	gs addr32 rex.WRXB jo 0x140008e45
   140008de0:	outs   dx,BYTE PTR ds:[rsi]
   140008de1:	rex.WXB
   140008de2:	gs jns 0x140008e3c
   140008de5:	add    BYTE PTR [rbp+0x2],dl
   140008de8:	push   rdx
   140008de9:	gs rex.XB ins BYTE PTR es:[edi],dx
   140008ded:	outs   dx,DWORD PTR ds:[rsi]
   140008dee:	jae    0x140008e55
   140008df0:	rex.WXB
   140008df1:	gs jns 0x140008df4
   140008df4:	rex.B
   140008df5:	rex.R push rsi
   140008df7:	push   r8
   140008df9:	xor    rsi,QWORD PTR [r10]
   140008dfc:	cs fs ins BYTE PTR es:[rdi],dx
   140008dff:	ins    BYTE PTR es:[rdi],dx
   140008e00:	add    BYTE PTR [rax],al
   140008e02:	movabs al,ds:0x4d74616d726f4601
   140008e0b:	gs jae 0x140008e81
   140008e0e:	(bad)  
   140008e0f:	addr32 gs push rdi
   140008e12:	add    BYTE PTR [rax],al
   140008e14:	rex.WRB add rax,0x54746553
   140008e1a:	push   0x64616572
   140008e1f:	push   rax
   140008e20:	jb     0x140008e87
   140008e22:	data16 gs jb 0x140008e98
   140008e26:	gs fs push rbp
   140008e29:	rex.WB
   140008e2a:	rex.WR (bad) 
   140008e2c:	outs   dx,BYTE PTR ds:[rsi]
   140008e2d:	addr32 jne 0x140008e91
   140008e30:	addr32 gs jae 0x140008e34
   140008e34:	stc    
   140008e35:	add    DWORD PTR [rdi+0x65],eax
   140008e38:	je     0x140008e7d
   140008e3a:	outs   dx,DWORD PTR ds:[rsi]
   140008e3b:	outs   dx,BYTE PTR ds:[rsi]
   140008e3c:	jae    0x140008ead
   140008e3e:	ins    BYTE PTR es:[rdi],dx
   140008e3f:	gs rex.WRXB jne 0x140008eb7
   140008e43:	jo     0x140008eba
   140008e45:	je     0x140008e8a
   140008e47:	push   rax
   140008e48:	add    BYTE PTR [rax],al
   140008e4a:	add    r9d,DWORD PTR [rax+0x65]
   140008e4e:	(bad)  
   140008e4f:	jo     0x140008ea4
   140008e51:	gs je  0x140008e9d
   140008e54:	outs   dx,BYTE PTR ds:[rsi]
   140008e55:	outs   dx,WORD PTR ds:[rsi]
   140008e57:	jb     0x140008ec6
   140008e59:	(bad)  
   140008e5a:	je     0x140008ec5
   140008e5c:	outs   dx,DWORD PTR ds:[rsi]
   140008e5d:	outs   dx,BYTE PTR ds:[rsi]
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	outs   dx,BYTE PTR ds:[rsi]
   140008e61:	add    al,BYTE PTR [rdi+0x65]
   140008e64:	je     0x140008eb3
   140008e66:	outs   dx,DWORD PTR ds:[rsi]
   140008e67:	fs jne 0x140008ed6
   140008e6a:	gs rex.W (bad) 
   140008e6d:	outs   dx,BYTE PTR ds:[rsi]
   140008e6e:	fs ins BYTE PTR es:[rdi],dx
   140008e70:	gs push rdi
   140008e72:	add    BYTE PTR [rax],al
   140008e74:	push   rdi
   140008e75:	add    al,BYTE PTR [rdi+0x65]
   140008e78:	je     0x140008ec6
   140008e7a:	(bad)  
   140008e7b:	jae    0x140008ef1
   140008e7d:	rex.RB jb 0x140008ef2
   140008e80:	outs   dx,DWORD PTR ds:[rsi]
   140008e81:	jb     0x140008e83
   140008e83:	add    BYTE PTR [rdi+0x1],dl
   140008e86:	rex.RB js 0x140008ef2
   140008e89:	je     0x140008edb
   140008e8b:	jb     0x140008efc
   140008e8d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008e90:	jae    0x140008e92
   140008e92:	sbb    eax,0x74654703
   140008e97:	push   rdi
   140008e98:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140008e9f:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140008ea6:	jns    0x140008eff
   140008ea8:	add    BYTE PTR [rax],al
   140008eaa:	cmp    al,0x3
   140008eac:	rex.W
   140008ead:	gs (bad) 
   140008eaf:	jo     0x140008ef2
   140008eb1:	ins    BYTE PTR es:[rdi],dx
   140008eb2:	ins    BYTE PTR es:[rdi],dx
   140008eb3:	outs   dx,DWORD PTR ds:[rsi]
   140008eb4:	movsxd eax,DWORD PTR [rax]
   140008eb6:	stos   DWORD PTR es:[rdi],eax
   140008eb7:	add    al,BYTE PTR [rdi+0x65]
   140008eba:	je     0x140008f0c
   140008ebc:	jb     0x140008f2d
   140008ebe:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ec1:	jae    0x140008f0b
   140008ec3:	gs (bad) 
   140008ec5:	jo     0x140008ec7
   140008ec7:	add    BYTE PTR [rax+0x3],al
   140008eca:	rex.W
   140008ecb:	gs (bad) 
   140008ecd:	jo     0x140008f15
   140008ecf:	jb     0x140008f36
   140008ed1:	add    BYTE PTR gs:[rax],al
   140008ed4:	pop    rbx
   140008ed5:	add    DWORD PTR [rbp+0x78],eax
   140008ed8:	jo     0x140008f3b
   140008eda:	outs   dx,BYTE PTR ds:[rsi]
   140008edb:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140008ede:	jbe    0x140008f49
   140008ee0:	jb     0x140008f51
   140008ee2:	outs   dx,BYTE PTR ds:[rsi]
   140008ee3:	ins    DWORD PTR es:[rdi],dx
   140008ee4:	outs   dx,BYTE PTR gs:[rsi]
   140008ee6:	je     0x140008f3b
   140008ee8:	je     0x140008f5c
   140008eea:	imul   ebp,DWORD PTR [rsi+0x67],0x4b005773
   140008ef1:	rex.RB push r10
   140008ef3:	rex.WRX
   140008ef4:	rex.RB
   140008ef5:	xor    r14,QWORD PTR [rdx]
   140008ef8:	cs fs ins BYTE PTR es:[rdi],dx
   140008efb:	ins    BYTE PTR es:[rdi],dx
   140008efc:	add    BYTE PTR [rax],al
   140008efe:	or     al,BYTE PTR [rax]
   140008f00:	(bad)  
   140008f01:	(bad)  
   140008f02:	xor    BYTE PTR [rbp+0x78],ah
   140008f05:	movsxd esp,DWORD PTR [rbp+0x70]
   140008f08:	je     0x140008f73
   140008f0a:	outs   dx,DWORD PTR ds:[rsi]
   140008f0b:	outs   dx,BYTE PTR ds:[rsi]
   140008f0c:	rex
   140008f0d:	rex push rcx
   140008f0f:	rex.RB
   140008f10:	rex.B
   140008f11:	rex.B
   140008f12:	rex
   140008f13:	rex.B
   140008f14:	rex.RB
   140008f15:	rex.X push rcx
   140008f17:	rex.RB
   140008f18:	rex.X
   140008f19:	rex.R
   140008f1a:	rex pop rdx
   140008f1c:	add    BYTE PTR [rax],al
   140008f1e:	adc    DWORD PTR [rax],eax
   140008f20:	(bad)  
   140008f21:	(bad)  
   140008f22:	xor    DWORD PTR [rbp+0x78],esp
   140008f25:	movsxd esp,DWORD PTR [rbp+0x70]
   140008f28:	je     0x140008f93
   140008f2a:	outs   dx,DWORD PTR ds:[rsi]
   140008f2b:	outs   dx,BYTE PTR ds:[rsi]
   140008f2c:	rex
   140008f2d:	rex push rbp
   140008f2f:	rex.RB
   140008f30:	rex.B
   140008f31:	rex.B
   140008f32:	rex pop rax
   140008f34:	pop    rdx
   140008f35:	add    BYTE PTR [rax+rax*1],cl
   140008f38:	(bad)  
   140008f39:	(bad)  
   140008f3a:	xor    BYTE PTR [rbp+0x78],ah
   140008f3d:	movsxd esp,DWORD PTR [rbp+0x70]
   140008f40:	je     0x140008fab
   140008f42:	outs   dx,DWORD PTR ds:[rsi]
   140008f43:	outs   dx,BYTE PTR ds:[rsi]
   140008f44:	rex
   140008f45:	rex push rcx
   140008f47:	rex.RB
   140008f48:	rex.B
   140008f49:	rex.B
   140008f4a:	rex
   140008f4b:	rex.B
   140008f4c:	rex.RB
   140008f4d:	rex.X push rsi
   140008f4f:	xor    BYTE PTR [rax+0x40],al
   140008f52:	pop    rdx
   140008f53:	add    BYTE PTR [rbx+0x6d656d04],dl
   140008f59:	movsxd esi,DWORD PTR [rax+0x79]
   140008f5c:	pop    rdi
   140008f5d:	jae    0x140008f5f
   140008f5f:	add    BYTE PTR [rbp+0x6d656d04],dl
   140008f65:	ins    DWORD PTR es:[rdi],dx
   140008f66:	outs   dx,DWORD PTR ds:[rsi]
   140008f67:	jbe    0x140008fce
   140008f69:	pop    rdi
   140008f6a:	jae    0x140008f6c
   140008f6c:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140008f72:	ja     0x140008fe4
   140008f74:	jb     0x140008fdf
   140008f76:	outs   dx,BYTE PTR ds:[rsi]
   140008f77:	je     0x140008fdf
   140008f79:	add    BYTE PTR [rdx+rax*1+0x7475705f],ah
   140008f80:	ja     0x140008ff5
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	(bad)  
   140008f85:	add    ebx,DWORD PTR [rdi+0x77]
   140008f88:	jae    0x140008fef
   140008f8a:	je     0x140008ff8
   140008f8c:	outs   dx,DWORD PTR ds:[rsi]
   140008f8d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008f90:	add    BYTE PTR gs:[rsi+0x4],dh
   140008f94:	imul   esi,DWORD PTR [rbx+0x77],0x6e697270
   140008f9b:	je     0x140008f9d
   140008f9d:	add    cl,ch
   140008f9f:	add    al,0x74
   140008fa1:	outs   dx,DWORD PTR ds:[rsi]
   140008fa2:	ins    BYTE PTR es:[rdi],dx
   140008fa3:	outs   dx,DWORD PTR ds:[rsi]
   140008fa4:	ja     0x14000900b
   140008fa6:	jb     0x140008fa8
   140008fa8:	xor    al,BYTE PTR [riz*2+0x746978]
   140008faf:	add    BYTE PTR [rip+0x73637705],al        # 0x1b36406ba
   140008fb5:	movsxd esi,DWORD PTR [rax+0x79]
   140008fb8:	pop    rdi
   140008fb9:	jae    0x140008fbb
   140008fbb:	add    BYTE PTR [rcx],al
   140008fbd:	add    eax,0x63736377
   140008fc2:	push   0xffffffff8a000072
   140008fc7:	add    ebx,DWORD PTR [rdi+0x77]
   140008fca:	movsxd esi,DWORD PTR [rbx+0x69]
   140008fcd:	movsxd ebp,DWORD PTR [rbp+0x70]
   140008fd0:	add    BYTE PTR [rax],al
   140008fd2:	xor    DWORD PTR [rax],eax
   140008fd4:	(bad)  
   140008fd5:	ja     0x14000903f
   140008fd7:	(bad)  
   140008fd8:	je     0x14000901a
   140008fda:	gs js  0x140009040
   140008fdd:	gs jo  0x140009054
   140008fe0:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140008fe7:	rex.X
   140008fe8:	push   r8
   140008fea:	rex.RB
   140008feb:	rex.X
   140008fec:	rex.R pop rax
   140008fee:	pop    rdx
   140008fef:	add    BYTE PTR [rax],ah
   140008ff1:	add    eax,0x69727077
   140008ff6:	outs   dx,BYTE PTR ds:[rsi]
   140008ff7:	je     0x14000905f
   140008ff9:	add    BYTE PTR [rax*1+0x73736377],dl
   140009000:	je     0x140009074
   140009002:	add    BYTE PTR [rax],al
   140009004:	js     0x14000900a
   140009006:	imul   esi,DWORD PTR [rbx+0x77],0x63617073
   14000900d:	add    BYTE PTR gs:[rax],al
   140009010:	rex.WR add al,0x66
   140009013:	jb     0x14000907a
   140009015:	add    BYTE PTR gs:[rax],al
   140009018:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000901f:	movsxd eax,DWORD PTR [rax]
   140009021:	add    BYTE PTR [rbx],cl
   140009023:	add    BYTE PTR [rdi],bh
   140009025:	(bad)  
   140009026:	xor    BYTE PTR [rbp+0x78],ah
   140009029:	movsxd esp,DWORD PTR [rbp+0x70]
   14000902c:	je     0x140009097
   14000902e:	outs   dx,DWORD PTR ds:[rsi]
   14000902f:	outs   dx,BYTE PTR ds:[rsi]
   140009030:	rex
   140009031:	rex push rcx
   140009033:	rex.RB
   140009034:	rex.B
   140009035:	rex.B
   140009036:	rex
   140009037:	rex.B
   140009038:	rex.RB
   140009039:	rex.X push rcx
   14000903b:	rex.RB
   14000903c:	rex.X
   14000903d:	rex.R
   14000903e:	rex.W
   14000903f:	rex pop rdx
   140009041:	add    BYTE PTR [rdi+0x61635f00],bh
   140009047:	ins    BYTE PTR es:[rdi],dx
   140009048:	ins    BYTE PTR es:[rdi],dx
   140009049:	outs   dx,BYTE PTR ds:[rsi]
   14000904a:	gs ja  0x1400090b5
   14000904d:	add    BYTE PTR [rbx+0x0],cl
   140009050:	pop    rdi
   140009051:	rex.XB js 0x1400090cc
   140009054:	push   rsp
   140009055:	push   0x45776f72
   14000905a:	js     0x1400090bf
   14000905c:	gs jo  0x1400090d3
   14000905f:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0000
   140009066:	(bad)  
   140009067:	(bad)  
   140009068:	xor    BYTE PTR [rbp+0x78],ah
   14000906b:	movsxd esp,DWORD PTR [rbp+0x70]
   14000906e:	je     0x1400090d9
   140009070:	outs   dx,DWORD PTR ds:[rsi]
   140009071:	outs   dx,BYTE PTR ds:[rsi]
   140009072:	rex
   140009073:	rex push rcx
   140009075:	rex.RB
   140009076:	rex.B
   140009077:	rex.B
   140009078:	rex pop rax
   14000907a:	pop    rdx
   14000907b:	add    BYTE PTR [rbx+0x0],bl
   14000907e:	pop    rdi
   14000907f:	pop    rdi
   140009080:	rex.XB js 0x1400090fb
   140009083:	rex.RX jb 0x1400090e7
   140009086:	ins    DWORD PTR es:[rdi],dx
   140009087:	gs rex.W (bad) 
   14000908a:	outs   dx,BYTE PTR ds:[rsi]
   14000908b:	fs ins BYTE PTR es:[rdi],dx
   14000908d:	gs jb  0x1400090c3
   140009090:	add    BYTE PTR [rax],al
   140009092:	push   rbp
   140009093:	add    BYTE PTR [rdi+0x58],bl
   140009096:	movsxd esi,DWORD PTR [rax+0x74]
   140009099:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400090a2:	pop    rdi
   1400090a3:	(bad)  
   1400090a4:	ins    DWORD PTR es:[rdi],dx
   1400090a5:	jae    0x14000910e
   1400090a7:	pop    rdi
   1400090a8:	gs js  0x140009114
   1400090ab:	je     0x1400090ad
   1400090ad:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400090b3:	addr32 gs je 0x140009124
   1400090b7:	(bad)  
   1400090b8:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400090bf:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400090c5:	gs je  0x140009127
   1400090c8:	(bad)  
   1400090c9:	jo     0x14000913b
   1400090cb:	pop    rdi
   1400090cc:	je     0x140009147
   1400090ce:	jo     0x140009135
   1400090d0:	add    BYTE PTR [rax],al
   1400090d2:	(bad)  
   1400090d3:	add    DWORD PTR [rdi+0x65],ebx
   1400090d6:	js     0x140009141
   1400090d8:	je     0x1400090da
   1400090da:	rol    DWORD PTR [rax],0x5f
   1400090dd:	movsxd esp,DWORD PTR [rbp+0x78]
   1400090e0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400090e8:	jae    0x14000914f
   1400090ea:	je     0x140009161
   1400090ec:	jae    0x140009153
   1400090ee:	jb     0x14000915d
   1400090f0:	(bad)  
   1400090f1:	je     0x14000915b
   1400090f3:	gs jb  0x140009168
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	jge    0x1400090fb
   1400090fa:	pop    rdi
   1400090fb:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009102:	ins    DWORD PTR es:[rdi],dx
   140009103:	add    BYTE PTR [rdi+0x0],dl
   140009106:	pop    rdi
   140009107:	pop    rdi
   140009108:	rex.XB pop r15
   14000910a:	jae    0x14000917c
   14000910c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140009110:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140009117:	ins    BYTE PTR es:[rdi],dx
   140009118:	gs jb  0x14000911b
   14000911b:	add    BYTE PTR [rdi],ah
   14000911d:	add    DWORD PTR [rdi+0x66],ebx
   140009120:	ins    DWORD PTR es:[rdi],dx
   140009121:	outs   dx,DWORD PTR ds:[rsi]
   140009122:	fs add BYTE PTR gs:[rax],al
   140009126:	rol    BYTE PTR [rax],cl
   140009128:	pop    rdi
   140009129:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000912c:	ins    DWORD PTR es:[rdi],dx
   14000912d:	outs   dx,DWORD PTR ds:[rsi]
   14000912e:	fs add BYTE PTR gs:[rax],al
   140009132:	ins    DWORD PTR es:[rdi],dx
   140009133:	jae    0x1400091ab
   140009135:	movsxd esi,DWORD PTR [rdx+0x74]
   140009138:	cs fs ins BYTE PTR es:[rdi],dx
   14000913b:	ins    BYTE PTR es:[rdi],dx
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	adc    al,BYTE PTR [rax]
   140009140:	(bad)  
   140009141:	(bad)  
   140009142:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   140009146:	gs pop rdi
   140009148:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000914f:	rex.RB
   140009150:	rex.B
   140009151:	rex.B
   140009152:	rex pop rax
   140009154:	pop    rdx
   140009155:	add    dh,ah
   140009157:	add    DWORD PTR [rdi+0x6c],ebx
   14000915a:	outs   dx,DWORD PTR ds:[rsi]
   14000915b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000915e:	add    ebx,DWORD PTR [r15+0x75]
   140009162:	outs   dx,BYTE PTR ds:[rsi]
   140009163:	ins    BYTE PTR es:[rdi],dx
   140009164:	outs   dx,DWORD PTR ds:[rsi]
   140009165:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009168:	jnp    0x14000916a
   14000916a:	pop    rdi
   14000916b:	pop    rdi
   14000916c:	fs ins BYTE PTR es:[rdi],dx
   14000916e:	ins    BYTE PTR es:[rdi],dx
   14000916f:	outs   dx,DWORD PTR ds:[rsi]
   140009170:	outs   dx,BYTE PTR ds:[rsi]
   140009171:	gs js  0x1400091dd
   140009174:	je     0x140009176
   140009176:	nop
   140009177:	add    bl,BYTE PTR [rdi+0x6f]
   14000917a:	outs   dx,BYTE PTR ds:[rsi]
   14000917b:	gs js  0x1400091e7
   14000917e:	je     0x140009180
   140009180:	(bad)  
   140009181:	add    BYTE PTR [rdi],bh
   140009183:	je     0x1400091ea
   140009185:	jb     0x1400091f4
   140009187:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000918e:	pop    rcx
   14000918f:	pop    r8
   140009191:	pop    rax
   140009192:	pop    rdx
   140009193:	add    BYTE PTR [rcx+0x0],ah
   140009196:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009198:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000919a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400091a2:	rex.RB js 0x1400091a5
   1400091a5:	add    BYTE PTR [rax+0x556f4300],dl
   1400091ab:	outs   dx,BYTE PTR ds:[rsi]
   1400091ac:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400091b3:	imul   edi,DWORD PTR [rdx+0x65],0x8c0000
   1400091ba:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400091bc:	push   rsp
   1400091bd:	(bad)  
   1400091be:	jae    0x14000922b
   1400091c0:	rex.WRB
   1400091c1:	gs ins DWORD PTR es:[rdi],dx
   1400091c3:	rex.RX jb 0x14000922b
   1400091c6:	add    BYTE PTR gs:[rbx],ch
   1400091c9:	add    BYTE PTR [rbx+0x6f],al
   1400091cc:	rex.XB jb 0x140009234
   1400091cf:	(bad)  
   1400091d0:	je     0x140009237
   1400091d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400091d4:	jae    0x14000924a
   1400091d6:	(bad)  
   1400091d7:	outs   dx,BYTE PTR ds:[rsi]
   1400091d8:	movsxd esp,DWORD PTR [rbp+0x0]
   1400091db:	add    BYTE PTR [rdi+0x6c],ch
   1400091de:	xor    esi,DWORD PTR gs:[rdx]
   1400091e1:	cs fs ins BYTE PTR es:[rdi],dx
   1400091e4:	ins    BYTE PTR es:[rdi],dx
   1400091e5:	add    BYTE PTR [rdi+0x4c],cl
   1400091e8:	rex.RB
   1400091e9:	push   r13
   1400091eb:	push   rsp
   1400091ec:	xor    esi,DWORD PTR [rdx]
   1400091ee:	cs fs ins BYTE PTR es:[rdi],dx
   1400091f1:	ins    BYTE PTR es:[rdi],dx
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	adc    DWORD PTR [rcx],eax
   1400091f6:	push   rbx
   1400091f7:	gs je  0x14000926f
   1400091fa:	jo     0x14000923f
   1400091fc:	outs   dx,DWORD PTR ds:[rsi]
   1400091fd:	jo     0x140009278
   1400091ff:	rex.WRXB
   140009200:	rex.RB
   140009201:	rex.WRB
   140009202:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009204:	push   di
   140009206:	add    BYTE PTR [rax],al
   140009208:	push   rsp
   140009209:	add    DWORD PTR [rbx+0x65],edx
   14000920c:	je     0x140009283
   14000920e:	jo     0x140009254
   140009210:	imul   eax,DWORD PTR [rdi+0x65],0x616c4374
   140009217:	jae    0x14000928c
   140009219:	rex.R
   14000921a:	gs jbe 0x140009290
   14000921d:	push   rdi
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rex add DWORD PTR [rbx+0x65],edx
   140009224:	je     0x14000929b
   140009226:	jo     0x14000926c
   140009228:	imul   eax,DWORD PTR [rbp+0x6e],0x65446d75
   14000922f:	jbe    0x14000929a
   140009231:	movsxd esp,DWORD PTR [rbp+0x49]
   140009234:	outs   dx,BYTE PTR ds:[rsi]
   140009235:	outs   dx,WORD PTR ds:[rsi]
   140009237:	add    BYTE PTR [rcx+0x1],ch
   14000923a:	push   rbx
   14000923b:	gs je  0x1400092b3
   14000923e:	jo     0x140009284
   140009240:	imul   eax,DWORD PTR [rdi+0x65],0x76654474
   140009247:	imul   esp,DWORD PTR [rbx+0x65],0x74736e49
   14000924e:	(bad)  
   14000924f:	outs   dx,BYTE PTR ds:[rsi]
   140009250:	movsxd esp,DWORD PTR [rbp+0x49]
   140009253:	fs push rdi
   140009255:	add    BYTE PTR [rdx+0x1],dh
   140009258:	push   rbx
   140009259:	gs je  0x1400092d1
   14000925c:	jo     0x1400092a2
   14000925e:	imul   eax,DWORD PTR [rdi+0x65],0x76654474
   140009265:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   14000926c:	jae    0x1400092e2
   14000926e:	jb     0x1400092e9
   140009270:	push   rax
   140009271:	jb     0x1400092e2
   140009273:	jo     0x1400092da
   140009275:	jb     0x1400092eb
   140009277:	jns    0x1400092d0
   140009279:	add    BYTE PTR [rip+0x74655301],bh        # 0x1b465e580
   14000927f:	jne    0x1400092f1
   140009281:	imul   r8d,DWORD PTR [rbp+riz*2+0x73],0x796f7274
   14000928a:	rex.R
   14000928b:	gs jbe 0x1400092f7
   14000928e:	movsxd esp,DWORD PTR [rbp+0x49]
   140009291:	outs   dx,BYTE PTR ds:[rsi]
   140009292:	outs   dx,WORD PTR ds:[rsi]
   140009294:	imul   r14,QWORD PTR [rbx+0x74],0x45530000
   14000929c:	push   rsp
   14000929d:	push   rbp
   14000929e:	push   rax
   14000929f:	push   r8
   1400092a1:	rex.WB
   1400092a2:	cs fs ins BYTE PTR es:[rdi],dx
   1400092a5:	ins    BYTE PTR es:[rdi],dx
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	ins    DWORD PTR es:[rdi],dx
   1400092a9:	add    eax,0x65656c53
   1400092ae:	jo     0x1400092b0
   1400092b0:	mov    bh,0x4
   1400092b2:	push   rdx
   1400092b3:	je     0x140009321
   1400092b5:	rex.XB (bad) 
   1400092b7:	jo     0x14000932d
   1400092b9:	jne    0x14000932d
   1400092bb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400092be:	outs   dx,BYTE PTR ds:[rsi]
   1400092bf:	je     0x140009326
   1400092c1:	js     0x140009337
   1400092c3:	add    BYTE PTR [rsi+0x6c745204],bh
   1400092c9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400092cb:	outs   dx,DWORD PTR ds:[rsi]
   1400092cc:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400092d0:	jne    0x140009340
   1400092d2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400092d6:	outs   dx,BYTE PTR ds:[rsi]
   1400092d7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400092d9:	je     0x14000934d
   1400092db:	jns    0x1400092dd
   1400092dd:	add    ch,al
   1400092df:	add    al,0x52
   1400092e1:	je     0x14000934f
   1400092e3:	push   rsi
   1400092e4:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400092eb:	outs   dx,BYTE PTR ds:[rsi]
   1400092ec:	ja     0x140009357
   1400092ee:	outs   dx,BYTE PTR ds:[rsi]
   1400092ef:	add    BYTE PTR fs:[rax],al
   1400092f2:	sahf   
   1400092f3:	add    eax,0x61686e55
   1400092f8:	outs   dx,BYTE PTR ds:[rsi]
   1400092f9:	fs ins BYTE PTR es:[rdi],dx
   1400092fb:	gs fs rex.RB js 0x140009363
   140009300:	gs jo  0x140009377
   140009303:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000930a:	gs jb  0x14000930d
   14000930d:	add    BYTE PTR [rsi+0x5],bl
   140009310:	push   rbx
   140009311:	gs je  0x140009369
   140009314:	outs   dx,BYTE PTR ds:[rsi]
   140009315:	push   0x6c646e61
   14000931a:	gs fs rex.RB js 0x140009382
   14000931f:	gs jo  0x140009396
   140009322:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009329:	gs jb  0x14000932c
   14000932c:	adc    BYTE PTR [rdx],al
   14000932e:	rex.RXB
   14000932f:	gs je  0x140009375
   140009332:	jne    0x1400093a6
   140009334:	jb     0x14000939b
   140009336:	outs   dx,BYTE PTR ds:[rsi]
   140009337:	je     0x140009389
   140009339:	jb     0x1400093aa
   14000933b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000933e:	jae    0x140009340
   140009340:	jl     0x140009347
   140009342:	push   rsp
   140009343:	gs jb  0x1400093b3
   140009346:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000934d:	outs   dx,DWORD PTR ds:[rsi]
   14000934e:	movsxd esp,DWORD PTR [rbp+0x73]
   140009351:	jae    0x140009353
   140009353:	add    BYTE PTR [rsi],dh
   140009355:	add    al,0x51
   140009357:	jne    0x1400093be
   140009359:	jb     0x1400093d4
   14000935b:	push   rax
   14000935c:	gs jb  0x1400093c5
   14000935f:	outs   dx,DWORD PTR ds:[rsi]
   140009360:	jb     0x1400093cf
   140009362:	(bad)  
   140009363:	outs   dx,BYTE PTR ds:[rsi]
   140009364:	movsxd esp,DWORD PTR [rbp+0x43]
   140009367:	outs   dx,DWORD PTR ds:[rsi]
   140009368:	jne    0x1400093d8
   14000936a:	je     0x1400093d1
   14000936c:	jb     0x14000936e
   14000936e:	adc    DWORD PTR [rdx],eax
   140009370:	rex.RXB
   140009371:	gs je  0x1400093b7
   140009374:	jne    0x1400093e8
   140009376:	jb     0x1400093dd
   140009378:	outs   dx,BYTE PTR ds:[rsi]
   140009379:	je     0x1400093cb
   14000937b:	jb     0x1400093ec
   14000937d:	movsxd esp,DWORD PTR [rbp+0x73]
   140009380:	jae    0x1400093cb
   140009382:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465da8b
   140009389:	rex.XB jne 0x1400093fe
   14000938c:	jb     0x1400093f3
   14000938e:	outs   dx,BYTE PTR ds:[rsi]
   14000938f:	je     0x1400093e5
   140009391:	push   0x64616572
   140009396:	rex.WB
   140009397:	add    BYTE PTR fs:[rax],al
   14000939a:	loopne 0x14000939e
   14000939c:	rex.RXB
   14000939d:	gs je  0x1400093f3
   1400093a0:	jns    0x140009415
   1400093a2:	je     0x140009409
   1400093a4:	ins    DWORD PTR es:[rdi],dx
   1400093a5:	push   rsp
   1400093a6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400093ad:	ins    BYTE PTR es:[rdi],dx
   1400093ae:	gs push rsp
   1400093b0:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   1400093b7:	gs je  0x14000940e
   1400093ba:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400093c1:	je     0x1400093c3
   1400093c3:	add    BYTE PTR [rdi+0x72695605],bh
   1400093c9:	je     0x140009440
   1400093cb:	(bad)  
   1400093cc:	ins    BYTE PTR es:[rdi],dx
   1400093cd:	push   rcx
   1400093ce:	jne    0x140009435
   1400093d0:	jb     0x14000944b
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400093d5:	add    DWORD PTR [rsi+0x72],eax
   1400093d8:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   1400093e2:	fwait
   1400093e3:	add    al,0x52
   1400093e5:	gs ins BYTE PTR es:[rdi],dx
   1400093e7:	gs (bad) 
   1400093e9:	jae    0x140009450
   1400093eb:	push   rbx
   1400093ec:	push   rdx
   1400093ed:	push   rdi
   1400093ee:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400093f0:	movsxd ebp,DWORD PTR [rbx+0x45]
   1400093f3:	js     0x140009458
   1400093f5:	ins    BYTE PTR es:[rdi],dx
   1400093f6:	jne    0x14000946b
   1400093f8:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   1400093ff:	movsxd esi,DWORD PTR [rcx+0x75]
   140009402:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140009409:	outs   dx,DWORD PTR ds:[rsi]
   14000940a:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000940d:	js     0x140009472
   14000940f:	ins    BYTE PTR es:[rdi],dx
   140009410:	jne    0x140009485
   140009412:	imul   esi,DWORD PTR [rsi+0x65],0x52044c00
   140009419:	(bad)  
   14000941a:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140009421:	jo     0x140009497
   140009423:	imul   ebp,DWORD PTR [rdi+0x6e],0x2a50000
   14000942a:	rex.RXB
   14000942b:	gs je  0x14000947e
   14000942e:	jb     0x14000949f
   140009430:	movsxd eax,DWORD PTR [rcx+0x64]
   140009433:	fs jb  0x14000949b
   140009436:	jae    0x1400094ab
   140009438:	add    BYTE PTR [rax],al
   14000943a:	fiadd  DWORD PTR [rdx]
   14000943c:	rex.RXB
   14000943d:	gs je  0x140009493
   140009440:	jns    0x1400094b5
   140009442:	je     0x1400094a9
   140009444:	ins    DWORD PTR es:[rdi],dx
   140009445:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009447:	outs   dx,WORD PTR ds:[rsi]
   140009449:	add    BYTE PTR [rbp+0x616f4c03],ch
   14000944f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140009458:	js     0x14000949b
   14000945a:	add    BYTE PTR [rax],al
   14000945c:	mov    ebp,0x72695605
   140009461:	je     0x1400094d8
   140009463:	(bad)  
   140009464:	ins    BYTE PTR es:[rdi],dx
   140009465:	push   rax
   140009466:	jb     0x1400094d7
   140009468:	je     0x1400094cf
   14000946a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000946e:	xchg   esi,eax
   14000946f:	add    al,0x6d
   140009471:	gs ins DWORD PTR es:[rdi],dx
   140009473:	jae    0x1400094da
   140009475:	je     0x140009477
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	int    0x5d
   14000a00a:	and    dl,dl
   14000a00c:	data16 (bad) 
   14000a00e:	(bad)  
   14000a00f:	inc    DWORD PTR [rcx]
	...
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rcx],al
   14000a021:	add    BYTE PTR [rax],al
   14000a023:	add    BYTE PTR [rax],al
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    BYTE PTR [rax+0x76],ah
   14000a02a:	add    BYTE PTR [rax+0x1],al
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    BYTE PTR [rax+0x75],dh
   14000a032:	add    BYTE PTR [rax+0x1],al
	...
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	add    BYTE PTR [rsi],ch
   14000a041:	(bad)  
   14000a042:	push   r14
   14000a044:	ins    BYTE PTR es:[rdi],dx
   14000a045:	outs   dx,DWORD PTR ds:[rsi]
   14000a046:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000a04e:	jb     0x14000a090
   14000a050:	jae    0x14000a0c6
   14000a052:	fs rex
   14000a054:	add    BYTE PTR [rax],al
   14000a057:	add    BYTE PTR [rax+0x75],dh
   14000a05a:	add    BYTE PTR [rax+0x1],al
	...
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    BYTE PTR [rsi],ch
   14000a069:	(bad)  
   14000a06a:	push   r14
   14000a06c:	ins    BYTE PTR es:[rdi],dx
   14000a06d:	outs   dx,BYTE PTR gs:[rsi]
   14000a06f:	addr32 je 0x14000a0da
   14000a072:	pop    rdi
   14000a073:	gs jb  0x14000a0e8
   14000a076:	outs   dx,DWORD PTR ds:[rsi]
   14000a077:	jb     0x14000a0b9
   14000a079:	jae    0x14000a0ef
   14000a07b:	fs rex
   14000a07d:	add    BYTE PTR [rax],al
   14000a080:	jo     0x14000a0f7
   14000a082:	add    BYTE PTR [rax+0x1],al
	...
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi],ch
   14000a091:	(bad)  
   14000a092:	push   r14
   14000a094:	outs   dx,DWORD PTR ds:[rsi]
   14000a095:	jne    0x14000a10b
   14000a097:	pop    rdi
   14000a098:	outs   dx,DWORD PTR ds:[rsi]
   14000a099:	pop    di
   14000a09b:	jb     0x14000a0fe
   14000a09d:	outs   dx,BYTE PTR ds:[rsi]
   14000a09e:	addr32 gs rex jae 0x14000a117
   14000a0a3:	fs rex
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a8:	jo     0x14000a11f
   14000a0aa:	add    BYTE PTR [rax+0x1],al
	...
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rsi],ch
   14000a0b9:	(bad)  
   14000a0ba:	push   r14
   14000a0bc:	(bad)
   14000a0c1:	ins    BYTE PTR es:[rdi],dx
   14000a0c2:	ins    BYTE PTR es:[rdi],dx
   14000a0c3:	outs   dx,DWORD PTR ds:[rsi]
   14000a0c4:	movsxd eax,DWORD PTR [rax+0x73]
   14000a0c7:	je     0x14000a12d
   14000a0c9:	rex
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    BYTE PTR [rax+0x75],dh
   14000a0d2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rsi],ch
   14000a0e1:	(bad)  
   14000a0e2:	push   r14
   14000a0e4:	gs js  0x14000a14a
   14000a0e7:	gs jo  0x14000a15e
   14000a0ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	or     BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	xor    edx,DWORD PTR [rax]
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	push   rax
   14000d009:	add    BYTE PTR [rax],0x0
   14000d00c:	(bad)  
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rbx+0x58000010],al
   14000d015:	add    BYTE PTR [rax],0x0
   14000d018:	nop
   14000d019:	adc    BYTE PTR [rax],al
   14000d01b:	add    dl,cl
   14000d01d:	adc    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax-0x80],ah
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	rcl    BYTE PTR [rax],1
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	repnz adc BYTE PTR [rax],al
   14000d02b:	add    BYTE PTR [rax+rax*4+0x0],ch
   14000d02f:	add    al,bh
   14000d031:	adc    BYTE PTR [rax],al
   14000d033:	add    BYTE PTR [rdi+0x11],ch
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	je     0x14000cfba
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	js     0x14000d04f
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	(bad)  
   14000d041:	adc    al,BYTE PTR [rax]
   14000d043:	add    BYTE PTR [rax+rax*4+0x12300000],al
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	push   rax
   14000d04d:	adc    eax,DWORD PTR [rax]
   14000d04f:	add    BYTE PTR [rax+0x58000080],bl
   14000d055:	adc    eax,DWORD PTR [rax]
   14000d057:	add    BYTE PTR [rip+0x30000019],dh        # 0x17000d076
   14000d05d:	add    DWORD PTR [rax],0x193c00
   14000d063:	add    BYTE PTR [rcx+0x19],dh
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	pop    rax
   14000d069:	add    DWORD PTR [rax],0x197800
   14000d06f:	add    BYTE PTR [rsi],bh
   14000d071:	sbb    eax,0x81600000
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	rex.R sbb eax,0x1e610000
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	clc    
   14000d081:	add    DWORD PTR [rax],0x1e6800
   14000d087:	add    BYTE PTR [rcx+0x6c00001e],bl
   14000d08d:	add    BYTE PTR [rax],0x0
   14000d090:	movabs al,ds:0xf80000201700001e
   14000d099:	add    DWORD PTR [rax],0x202000
   14000d09f:	add    BYTE PTR [rcx+0x10000020],dl
   14000d0a5:	(bad)  
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	cwde   
   14000d0a9:	and    BYTE PTR [rax],al
   14000d0ab:	add    BYTE PTR [rip+0x24000021],cl        # 0x16400d0d2
   14000d0b1:	(bad)  
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	adc    al,0x21
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	iret   
   14000d0b9:	and    DWORD PTR [rax],eax
   14000d0bb:	add    BYTE PTR [rdx+rax*4],dh
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	fsub   DWORD PTR [rcx]
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	adc    esp,DWORD PTR [rbx]
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	rex.WR (bad) 
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	sbb    al,0x23
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	lahf   
   14000d0d1:	and    eax,DWORD PTR [rax]
   14000d0d3:	add    BYTE PTR [rax],dh
   14000d0d5:	add    DWORD PTR [rax],0x0
   14000d0d8:	test   al,0x23
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	mov    dl,0x26
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	rex add DWORD PTR [rax],0x0
   14000d0e4:	mov    eax,0xbe000026
   14000d0e9:	(bad)  
   14000d0ea:	add    BYTE PTR [rax],al
   14000d0ec:	add    DWORD PTR fs:[rax],0x0
   14000d0f0:	(bad)  
   14000d0f1:	(bad)  
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	hlt    
   14000d0f5:	sub    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rax-0x7d],bh
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	cld    
   14000d0fd:	sub    BYTE PTR [rax],al
   14000d0ff:	add    BYTE PTR [rip+0xffffffff8c00002b],cl        # 0xcc00d130
   14000d105:	add    DWORD PTR [rax],0x0
   14000d108:	adc    al,0x2b
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	xchg   ebp,eax
   14000d10d:	sub    al,0x0
   14000d10f:	add    BYTE PTR [rbx+rax*4+0x2c9c0000],ah
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	mov    bh,0x2e
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	mov    esp,0xc0000083
   14000d121:	add    BYTE PTR cs:[rax],al
   14000d124:	scas   eax,DWORD PTR es:[rdi]
   14000d125:	xor    BYTE PTR [rax],al
   14000d127:	add    al,ah
   14000d129:	add    DWORD PTR [rax],0x0
   14000d12c:	mov    eax,0xd7000030
   14000d131:	xor    DWORD PTR [rax],eax
   14000d133:	add    ah,dh
   14000d135:	add    DWORD PTR [rax],0x0
   14000d138:	loopne 0x14000d16b
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	rex.WXB xor al,0x0
   14000d13f:	add    BYTE PTR [rax],cl
   14000d141:	test   BYTE PTR [rax],al
   14000d143:	add    BYTE PTR [rsp+rsi*1+0x0],dl
   14000d147:	add    ah,cl
   14000d149:	xor    eax,0x84200000
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	(bad)  
   14000d151:	xor    eax,0x37890000
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	xor    BYTE PTR [rax+rax*1+0x379000],al
   14000d15f:	add    BYTE PTR [rcx+0x38],dl
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	test   BYTE PTR [rax],al
   14000d167:	add    BYTE PTR [rax+0x38],bl
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	in     al,0x38
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	push   rsp
   14000d171:	test   BYTE PTR [rax],al
   14000d173:	add    ah,ch
   14000d175:	cmp    BYTE PTR [rax],al
   14000d177:	add    BYTE PTR [rbx+0x34000039],bl
   14000d17d:	(bad)  
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d181:	cmp    DWORD PTR [rax],eax
   14000d183:	add    BYTE PTR [rbx+0x3c],cl
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	pop    rsp
   14000d189:	test   BYTE PTR [rax],al
   14000d18b:	add    BYTE PTR [rsp+rdi*1+0x0],dl
   14000d18f:	add    BYTE PTR [rdi],cl
   14000d191:	add    BYTE PTR ds:[rax],al
   14000d194:	je     0x14000d11a
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	sbb    BYTE PTR [rsi],bh
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	cmp    DWORD PTR [rdi],edi
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	mov    BYTE PTR [rax+rax*1+0x3f4000],al
   14000d1a7:	add    BYTE PTR [rax],ch
   14000d1a9:	add    BYTE PTR [rax],al
   14000d1ac:	pushf  
   14000d1ad:	test   BYTE PTR [rax],al
   14000d1af:	add    BYTE PTR [rax],dh
   14000d1b1:	add    BYTE PTR [rax],al
   14000d1b4:	mov    WORD PTR [rax+0x0],es
   14000d1b7:	add    BYTE PTR [rsp+rax*4+0x40940000],dh
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	sub    eax,DWORD PTR [rcx+0x0]
   14000d1c3:	add    BYTE PTR [rsp+rax*4+0x41340000],bh
   14000d1ca:	add    BYTE PTR [rax],al
   14000d1cc:	xor    eax,DWORD PTR [rdx+0x0]
   14000d1cf:	add    al,cl
   14000d1d1:	test   BYTE PTR [rax],al
   14000d1d3:	add    BYTE PTR [rax+0x42],al
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	adc    DWORD PTR [rdi+0x0],eax
   14000d1db:	add    ah,bl
   14000d1dd:	test   BYTE PTR [rax],al
   14000d1df:	add    BYTE PTR [rax],bl
   14000d1e1:	rex.RXB add BYTE PTR [r8],r8b
   14000d1e4:	rex.RX
   14000d1e5:	rex.RXB add BYTE PTR [r8],r8b
   14000d1e8:	ins    BYTE PTR es:[rdi],dx
   14000d1e9:	add    BYTE PTR [rax],0x0
   14000d1ec:	rex.WR
   14000d1ed:	rex.RXB add BYTE PTR [r8],r8b
   14000d1f0:	(bad)
   14000d1f3:	add    ah,dh
   14000d1f5:	test   BYTE PTR [rax],al
   14000d1f7:	add    ah,cl
   14000d1f9:	rex.RXB add BYTE PTR [r8],r8b
   14000d1fc:	rex.RB
   14000d1fd:	rex.W add BYTE PTR [rax],al
   14000d200:	hlt    
   14000d201:	test   BYTE PTR [rax],al
   14000d203:	add    BYTE PTR [rax+rcx*2+0x0],bl
   14000d207:	add    BYTE PTR [rcx+0x6c000048],dl
   14000d20d:	add    BYTE PTR [rax],0x0
   14000d210:	cwde   
   14000d211:	rex.W add BYTE PTR [rax],al
   14000d214:	add    al,0x49
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	add    BYTE PTR [rsi+0x490c0000],0x0
   14000d21f:	add    BYTE PTR [rbp+0x49],bh
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	xchg   BYTE PTR [rax],al
   14000d227:	add    BYTE PTR [rcx+rcx*2+0x49e60000],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	adc    BYTE PTR [rsi+0x49ec0000],al
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	pop    rax
   14000d239:	rex.WX add BYTE PTR [rax],al
   14000d23c:	loopne 0x14000d1c4
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	(bad)  
   14000d241:	rex.WX add BYTE PTR [rax],al
   14000d244:	ror    DWORD PTR [rdx+0x0],1
   14000d247:	add    BYTE PTR [rax-0x27ffff7a],dh
   14000d24d:	rex.WX add BYTE PTR [rax],al
   14000d250:	or     BYTE PTR [rbx+0x0],cl
   14000d253:	add    BYTE PTR [rax+rax*4+0x0],ch
   14000d257:	add    BYTE PTR [rax],dl
   14000d259:	rex.WXB add BYTE PTR [r8],al
   14000d25c:	push   rcx
   14000d25d:	rex.WXB add BYTE PTR [r8],al
   14000d260:	ins    BYTE PTR es:[rdi],dx
   14000d261:	add    BYTE PTR [rax],0x0
   14000d264:	(bad)  
   14000d265:	rex.WXB add BYTE PTR [r8],al
   14000d268:	mov    esi,0x6000004b
   14000d26d:	add    BYTE PTR [rax],0x0
   14000d270:	(bad)  
   14000d271:	rex.WXB add BYTE PTR [r8],al
   14000d274:	jmp    0x19000d2c5
   14000d279:	test   DWORD PTR [rax],eax
   14000d27b:	add    al,dh
   14000d27d:	rex.WR add BYTE PTR [rax],r8b
   14000d280:	and    cl,BYTE PTR [rbp+0x0]
   14000d283:	add    BYTE PTR [rax-0x7a],dh
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	xor    BYTE PTR [rbp+0x0],cl
   14000d28b:	add    BYTE PTR [rdx+0x4d],ah
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	jo     0x14000d218
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	jo     0x14000d2e3
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	movabs ds:0xa80000867000004d,al
   14000d2a1:	rex.WRB add BYTE PTR [r8],r8b
   14000d2a4:	or     al,0x4e
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	and    al,0x82
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	adc    al,0x4e
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	imul   ecx,DWORD PTR [rsi+0x0],0x84fc00
   14000d2b7:	add    BYTE PTR [rax+0x4e],dh
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	enter  0x4e,0x0
   14000d2c0:	and    BYTE PTR [rbp+0x4ed00000],al
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	ror    DWORD PTR [rdi+0x0],1
   14000d2cb:	add    BYTE PTR [rax],dl
   14000d2cd:	(bad)  
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	fmul   DWORD PTR [rdi+0x0]
   14000d2d3:	add    dh,cl
   14000d2d5:	push   rax
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	adc    BYTE PTR [rdx+0x50d40000],al
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d2e1:	push   rcx
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	and    al,0x82
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	movabs al,ds:0x780000526f000051
   14000d2f1:	xchg   DWORD PTR [rax],eax
   14000d2f3:	add    BYTE PTR [rax-0x36ffffae],al
   14000d2f9:	push   rdx
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	pop    rax
   14000d2fd:	add    DWORD PTR [rax],0x52d000
   14000d303:	add    BYTE PTR [rdx+0x18000054],ah
   14000d309:	xchg   DWORD PTR [rax],eax
   14000d30b:	add    BYTE PTR [rax-0x3dffffac],dh
   14000d311:	push   rsp
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	js     0x14000d29d
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	loopne 0x14000d36e
   14000d31a:	add    BYTE PTR [rax],al
   14000d31c:	(bad)  
   14000d31d:	push   rsp
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	xchg   QWORD PTR [rax],rax
   14000d323:	add    BYTE PTR [rax],dl
   14000d325:	push   rbp
   14000d326:	add    BYTE PTR [rax],al
   14000d328:	rex push rbp
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	(bad)  
   14000d32d:	add    BYTE PTR [rax],0x0
   14000d330:	jl     0x14000d387
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	mov    al,0x55
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	ins    BYTE PTR es:[rdi],dx
   14000d339:	add    BYTE PTR [rax],0x0
   14000d33c:	rcl    BYTE PTR [rbp+0x0],0x0
   14000d340:	xor    DWORD PTR [rdi+0x0],edx
   14000d343:	add    BYTE PTR [rdi+rax*4+0x0],cl
   14000d347:	add    BYTE PTR [rax],bh
   14000d349:	push   rdi
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	(bad)  
   14000d34d:	push   rdi
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	push   rsp
   14000d351:	xchg   DWORD PTR [rax],eax
   14000d353:	add    ah,bl
   14000d355:	push   rdi
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	repz push rdi
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	js     0x14000d2e5
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	cmp    BYTE PTR [rax+0x0],bl
   14000d363:	add    BYTE PTR [rbp+0x58],dl
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	js     0x14000d2f1
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	pop    rsp
   14000d36d:	pop    rax
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	mov    edi,0x6c000058
   14000d375:	add    BYTE PTR [rax],0x0
   14000d378:	enter  0x58,0x0
   14000d37c:	push   rdi
   14000d37d:	pop    rcx
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	xor    al,0x82
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	(bad)  
   14000d385:	pop    rcx
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	cdq    
   14000d389:	pop    rcx
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	js     0x14000d315
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	movabs al,ds:0x78000059b8000059
   14000d399:	xchg   DWORD PTR [rax],eax
   14000d39b:	add    ah,cl
   14000d39d:	pop    rcx
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	and    BYTE PTR [rdx+0x0],bl
   14000d3a3:	add    BYTE PTR [rax+0x28000087],al
   14000d3a9:	pop    rdx
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	ins    DWORD PTR es:[rdi],dx
   14000d3ad:	pop    rdx
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	ins    BYTE PTR es:[rdi],dx
   14000d3b1:	add    BYTE PTR [rax],0x0
   14000d3b4:	loopne 0x14000d410
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	sub    eax,0xa000005b
   14000d3bd:	xchg   DWORD PTR [rax],eax
   14000d3bf:	add    BYTE PTR [rbx+rbx*2+0x0],dh
   14000d3c3:	add    BYTE PTR [rsp+rbx*2+0x0],al
   14000d3c7:	add    ah,cl
   14000d3c9:	xchg   DWORD PTR [rax],eax
   14000d3cb:	add    al,dl
   14000d3cd:	pop    rsp
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	rex.RXB pop r13
   14000d3d2:	add    BYTE PTR [rax],al
   14000d3d4:	fadd   QWORD PTR [rdi+0x5d800000]
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	(bad)  
   14000d3dd:	pop    rbp
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	fadd   DWORD PTR [rdi+0x5d960000]
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	(bad)  
   14000d3e9:	pop    rbp
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	and    BYTE PTR [rcx+0x5e000000],al
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	push   0x2000005e
   14000d3f9:	add    DWORD PTR [rax],0x0
   14000d3fc:	push   0xffffffff9000005e
   14000d401:	pop    rsi
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	and    BYTE PTR [rbx+0x5ea80000],al
   14000d40a:	add    BYTE PTR [rax],al
   14000d40c:	or     eax,0x5f
   14000d411:	xchg   BYTE PTR [rax],al
   14000d413:	add    BYTE PTR [rip+0x3500005f],cl        # 0x17500d478
   14000d419:	pop    rdi
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	add    BYTE PTR [rsi+0x5f4d0000],al
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	imul   ebx,DWORD PTR [rdi+0x0],0x0
   14000d428:	(bad)  
   14000d429:	xchg   DWORD PTR [rax],eax
   14000d42b:	add    BYTE PTR [rcx+0x5f],dh
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	mov    WORD PTR [rdi+0x0],ds
   14000d433:	add    ah,al
   14000d435:	xchg   DWORD PTR [rax],eax
   14000d437:	add    BYTE PTR [rax-0x3fffffa1],ah
   14000d43d:	pop    rdi
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	(bad)  
   14000d441:	xchg   DWORD PTR [rax],eax
	...

Disassembly of section .didat:

000000014000e000 <.didat>:
   14000e000:	push   rax
   14000e001:	pop    rbp
   14000e002:	add    BYTE PTR [rax+0x1],al
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rax+0x140005c],dh
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    DWORD PTR [rax],eax
   14000f00e:	add    al,BYTE PTR [rax]
   14000f010:	call   0x16880f015
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	adc    BYTE PTR [rax],0x0
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	add    BYTE PTR [rax],al
   14000f01f:	sbb    BYTE PTR [rax],0x0
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	pop    rax
   14000f025:	add    BYTE PTR [rax],al
   14000f027:	add    BYTE PTR [rax],0x0
	...
   14000f036:	add    DWORD PTR [rax],eax
   14000f038:	add    DWORD PTR [rax],eax
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	jo     0x14000f03e
   14000f03e:	add    BYTE PTR [rax+0x0],al
	...
   14000f04c:	add    BYTE PTR [rax],al
   14000f04e:	add    DWORD PTR [rax],eax
   14000f050:	add    DWORD PTR [rax],eax
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	mov    BYTE PTR [rax],al
   14000f056:	add    BYTE PTR [rax+0x0],al
	...
   14000f064:	add    BYTE PTR [rax],al
   14000f066:	add    DWORD PTR [rax],eax
   14000f068:	add    DWORD PTR [rax],eax
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	movabs al,ds:0x800000
	...
   14000f07d:	add    BYTE PTR [rcx],al
   14000f07f:	add    BYTE PTR [rcx],cl
   14000f081:	add    al,0x0
   14000f083:	add    BYTE PTR [rax+0x0],bh
	...
   14000f095:	add    BYTE PTR [rcx],al
   14000f097:	add    BYTE PTR [rcx],cl
   14000f099:	add    al,0x0
   14000f09b:	add    al,cl
	...
   14000f0ad:	add    BYTE PTR [rcx],al
   14000f0af:	add    BYTE PTR [rcx],cl
   14000f0b1:	add    al,0x0
   14000f0b3:	add    al,bl
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rax-0x9],al
   14000f0ba:	add    BYTE PTR [rax],al
   14000f0bc:	enter  0x0,0x0
	...
   14000f0c8:	test   al,0xf3
   14000f0ca:	add    BYTE PTR [rax],al
   14000f0cc:	xchg   esp,eax
   14000f0cd:	add    eax,DWORD PTR [rax]
	...
   14000f0d7:	add    al,dh
   14000f0d9:	lock add BYTE PTR [rax],al
   14000f0dc:	mov    dl,0x2
	...
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	add    eax,DWORD PTR [rax]
   14000f0ea:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f0ee:	rex.WB add BYTE PTR [r15+rdi*1],dil
   14000f0f2:	js     0x14000f161
   14000f0f4:	ins    BYTE PTR es:[rdi],dx
   14000f0f5:	and    BYTE PTR [rsi+0x65],dh
   14000f0f8:	jb     0x14000f16d
   14000f0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f101:	xor    BYTE PTR [rdx],ah
   14000f103:	and    BYTE PTR [rbp+0x6e],ah
   14000f106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f110:	rex.RX sub eax,0x73202238
   14000f116:	je     0x14000f179
   14000f118:	outs   dx,BYTE PTR ds:[rsi]
   14000f119:	fs (bad) 
   14000f11b:	ins    BYTE PTR es:[rdi],dx
   14000f11c:	outs   dx,DWORD PTR ds:[rsi]
   14000f11d:	outs   dx,BYTE PTR ds:[rsi]
   14000f11e:	gs cmp eax,0x73657922
   14000f124:	and    bh,BYTE PTR [rdi]
   14000f126:	ds or  eax,0x2d213c0a
   14000f12c:	sub    eax,0x706f4320
   14000f131:	jns    0x14000f1a5
   14000f133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f13a:	sub    DWORD PTR [rax],esp
   14000f13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f144:	je     0x14000f166
   14000f146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f148:	jb     0x14000f1ba
   14000f14a:	outs   dx,DWORD PTR ds:[rsi]
   14000f14b:	jb     0x14000f1ae
   14000f14d:	je     0x14000f1b8
   14000f14f:	outs   dx,DWORD PTR ds:[rsi]
   14000f150:	outs   dx,BYTE PTR ds:[rsi]
   14000f151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e2f84
   14000f157:	cmp    al,0x61
   14000f159:	jae    0x14000f1ce
   14000f15b:	gs ins DWORD PTR es:[rdi],dx
   14000f15d:	(bad)  
   14000f15e:	ins    BYTE PTR es:[rdi],dx
   14000f15f:	jns    0x14000f181
   14000f161:	js     0x14000f1d0
   14000f163:	ins    BYTE PTR es:[rdi],dx
   14000f164:	outs   dx,BYTE PTR ds:[rsi]
   14000f165:	jae    0x14000f1a4
   14000f167:	and    dh,BYTE PTR [rbp+0x72]
   14000f16a:	outs   dx,BYTE PTR ds:[rsi]
   14000f16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f16e:	push   0x73616d65
   14000f173:	sub    eax,0x7263696d
   14000f178:	outs   dx,DWORD PTR ds:[rsi]
   14000f179:	jae    0x14000f1ea
   14000f17b:	data16 je 0x14000f1ab
   14000f17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f184:	ins    DWORD PTR es:[rdi],dx
   14000f185:	cs jbe 0x14000f1b9
   14000f188:	and    ah,BYTE PTR [rax]
   14000f18a:	ins    DWORD PTR es:[rdi],dx
   14000f18b:	(bad)  
   14000f18c:	outs   dx,BYTE PTR ds:[rsi]
   14000f18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f194:	jb     0x14000f209
   14000f196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f19d:	xor    BYTE PTR [rdx],ah
   14000f19f:	ds or  eax,0x73613c0a
   14000f1a5:	jae    0x14000f20c
   14000f1a7:	ins    DWORD PTR es:[rdi],dx
   14000f1a8:	(bad)  
   14000f1a9:	ins    BYTE PTR es:[rdi],dx
   14000f1aa:	jns    0x14000f1f5
   14000f1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000f1af:	je     0x14000f21a
   14000f1b1:	je     0x14000f22c
   14000f1b3:	or     eax,0x2020200a
   14000f1b8:	and    BYTE PTR [rsi+0x65],dh
   14000f1bb:	jb     0x14000f230
   14000f1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f1c4:	xor    DWORD PTR [rsi],ebp
   14000f1c6:	xor    BYTE PTR [rsi],ch
   14000f1c8:	xor    BYTE PTR [rdx],ah
   14000f1ca:	or     eax,0x2020200a
   14000f1cf:	and    BYTE PTR [rax+0x72],dh
   14000f1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000f1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f1d6:	jae    0x14000f247
   14000f1d8:	jb     0x14000f21b
   14000f1da:	jb     0x14000f23f
   14000f1dc:	push   0x63657469
   14000f1e1:	je     0x14000f258
   14000f1e3:	jb     0x14000f24a
   14000f1e5:	cmp    eax,0x646d6122
   14000f1ea:	ss xor al,0x22
   14000f1ed:	or     eax,0x2020200a
   14000f1f2:	and    BYTE PTR [rsi+0x61],ch
   14000f1f5:	ins    DWORD PTR es:[rdi],dx
   14000f1f6:	gs cmp eax,0x63694d22
   14000f1fc:	jb     0x14000f26d
   14000f1fe:	jae    0x14000f26f
   14000f200:	data16 je 0x14000f231
   14000f203:	push   rdi
   14000f204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f20b:	push   rdi
   14000f20c:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000f213:	gs jo  0x14000f282
   14000f216:	outs   dx,DWORD PTR ds:[rsi]
   14000f217:	jns    0x14000f286
   14000f219:	outs   dx,BYTE PTR gs:[rsi]
   14000f21b:	je     0x14000f270
   14000f21d:	gs jb  0x14000f296
   14000f220:	imul   esp,DWORD PTR [rbx+0x65],0x614d2e73
   14000f227:	outs   dx,BYTE PTR ds:[rsi]
   14000f228:	(bad)  
   14000f229:	gs ins DWORD PTR es:[edi],dx
   14000f22c:	outs   dx,BYTE PTR gs:[rsi]
   14000f22e:	je     0x14000f25e
   14000f230:	rex.WRX
   14000f231:	gs je  0x14000f297
   14000f234:	data16 and cl,BYTE PTR [eip+0x2020200a]        # 0x160211246
   14000f23c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f240:	gs cmp eax,0x6e697722
   14000f246:	xor    esi,DWORD PTR [rdx]
   14000f248:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f2158
   14000f24e:	or     bh,BYTE PTR [rsp+riz*2]
   14000f251:	gs jae 0x14000f2b7
   14000f254:	jb     0x14000f2bf
   14000f256:	jo     0x14000f2cc
   14000f258:	imul   ebp,DWORD PTR [rdi+0x6e],0x74654e3e
   14000f25f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000f262:	cmp    al,0x2f
   14000f264:	fs gs jae 0x14000f2cb
   14000f268:	jb     0x14000f2d3
   14000f26a:	jo     0x14000f2e0
   14000f26c:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000f273:	or     bh,BYTE PTR [rsp+rsi*2]
   14000f276:	jb     0x14000f2ed
   14000f278:	jae    0x14000f2ee
   14000f27a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f27c:	outs   dx,WORD PTR ds:[rsi]
   14000f27e:	and    BYTE PTR [rax+0x6d],bh
   14000f281:	ins    BYTE PTR es:[rdi],dx
   14000f282:	outs   dx,BYTE PTR ds:[rsi]
   14000f283:	jae    0x14000f2c2
   14000f285:	and    dh,BYTE PTR [rbp+0x72]
   14000f288:	outs   dx,BYTE PTR ds:[rsi]
   14000f289:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f28c:	push   0x73616d65
   14000f291:	sub    eax,0x7263696d
   14000f296:	outs   dx,DWORD PTR ds:[rsi]
   14000f297:	jae    0x14000f308
   14000f299:	data16 je 0x14000f2c9
   14000f29c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f29f:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f2a2:	ins    DWORD PTR es:[rdi],dx
   14000f2a3:	cs jbe 0x14000f2d9
   14000f2a6:	and    bh,BYTE PTR [rsi]
   14000f2a8:	or     eax,0x2020200a
   14000f2ad:	and    BYTE PTR [rbx+rsi*2],bh
   14000f2b0:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f2b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f2bc:	and    BYTE PTR [rax],ah
   14000f2be:	and    BYTE PTR [rax],ah
   14000f2c0:	and    BYTE PTR [rax],ah
   14000f2c2:	cmp    al,0x72
   14000f2c4:	gs jno 0x14000f33c
   14000f2c7:	gs jae 0x14000f33e
   14000f2ca:	gs fs push rax
   14000f2cd:	jb     0x14000f338
   14000f2cf:	jbe    0x14000f33a
   14000f2d1:	ins    BYTE PTR es:[rdi],dx
   14000f2d2:	gs addr32 gs jae 0x14000f315
   14000f2d7:	or     eax,0x2020200a
   14000f2dc:	and    BYTE PTR [rax],ah
   14000f2de:	and    BYTE PTR [rax],ah
   14000f2e0:	and    BYTE PTR [rax],ah
   14000f2e2:	and    BYTE PTR [rax],ah
   14000f2e4:	and    BYTE PTR [rdx+rsi*2],bh
   14000f2e7:	gs jno 0x14000f35f
   14000f2ea:	gs jae 0x14000f361
   14000f2ed:	gs fs rex.RB js 0x14000f357
   14000f2f2:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f2f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f2fc:	ins    BYTE PTR es:[rdi],dx
   14000f2fd:	or     eax,0x2020200a
   14000f302:	and    BYTE PTR [rax],ah
   14000f304:	and    BYTE PTR [rax],ah
   14000f306:	and    BYTE PTR [rax],ah
   14000f308:	and    BYTE PTR [rax],ah
   14000f30a:	and    BYTE PTR [rax],ah
   14000f30c:	and    BYTE PTR [rax],ah
   14000f30e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f312:	gs ins BYTE PTR es:[rdi],dx
   14000f314:	cmp    eax,0x49736122
   14000f319:	outs   dx,BYTE PTR ds:[rsi]
   14000f31a:	jbe    0x14000f38b
   14000f31c:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f320:	or     eax,0x2020200a
   14000f325:	and    BYTE PTR [rax],ah
   14000f327:	and    BYTE PTR [rax],ah
   14000f329:	and    BYTE PTR [rax],ah
   14000f32b:	and    BYTE PTR [rax],ah
   14000f32d:	and    BYTE PTR [rax],ah
   14000f32f:	and    BYTE PTR [rax],ah
   14000f331:	and    BYTE PTR [rbp+0x69],dh
   14000f334:	movsxd esp,DWORD PTR [r11+0x65]
   14000f338:	jae    0x14000f3ad
   14000f33a:	cmp    eax,0x6c616622
   14000f33f:	jae    0x14000f3a6
   14000f341:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211351
   14000f347:	and    BYTE PTR [rax],ah
   14000f349:	and    BYTE PTR [rax],ah
   14000f34b:	and    BYTE PTR [rax],ah
   14000f34d:	and    BYTE PTR [rax],ah
   14000f34f:	and    BYTE PTR [rdi],ch
   14000f351:	ds or  eax,0x2020200a
   14000f357:	and    BYTE PTR [rax],ah
   14000f359:	and    BYTE PTR [rax],ah
   14000f35b:	and    BYTE PTR [rdi+rbp*1],bh
   14000f35e:	jb     0x14000f3c5
   14000f360:	jno    0x14000f3d7
   14000f362:	gs jae 0x14000f3d9
   14000f365:	gs fs push rax
   14000f368:	jb     0x14000f3d3
   14000f36a:	jbe    0x14000f3d5
   14000f36c:	ins    BYTE PTR es:[rdi],dx
   14000f36d:	gs addr32 gs jae 0x14000f3b0
   14000f372:	or     eax,0x2020200a
   14000f377:	and    BYTE PTR [rdi+rbp*1],bh
   14000f37a:	jae    0x14000f3e1
   14000f37c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f37f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f387:	je     0x14000f3fb
   14000f389:	jne    0x14000f3fe
   14000f38b:	je     0x14000f3d6
   14000f38d:	outs   dx,BYTE PTR ds:[rsi]
   14000f38e:	outs   dx,WORD PTR ds:[rsi]
   14000f390:	ds or  eax,0x612f3c0a
   14000f396:	jae    0x14000f40b
   14000f398:	gs ins DWORD PTR es:[rdi],dx
   14000f39a:	(bad)  
   14000f39b:	ins    BYTE PTR es:[rdi],dx
   14000f39c:	jns    0x14000f3dc
   14000f39e:	or     eax,0xa0d0a
   14000f3a3:	add    BYTE PTR [rax],al
   14000f3a5:	add    BYTE PTR [rax],al
   14000f3a7:	add    BYTE PTR [rbx+rax*1+0x34],dl
   14000f3ae:	push   rsi
   14000f3af:	add    BYTE PTR [rbx+0x0],dl
   14000f3b2:	pop    rdi
   14000f3b3:	add    BYTE PTR [rsi+0x0],dl
   14000f3b6:	add    BYTE PTR [r10+0x0],r10b
   14000f3ba:	push   rbx
   14000f3bb:	add    BYTE PTR [rcx+0x0],cl
   14000f3be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000f3c2:	pop    rdi
   14000f3c3:	add    BYTE PTR [rcx+0x0],cl
   14000f3c6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000f3ca:	rex.WRXB add BYTE PTR [r8],r8b
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rbp+0xfeef04],bh
   14000f3d5:	add    BYTE PTR [rcx],al
   14000f3d7:	add    BYTE PTR [rax],al
   14000f3d9:	add    BYTE PTR [rdx],cl
   14000f3db:	add    BYTE PTR [rax],al
   14000f3dd:	add    BYTE PTR [rax],bpl
   14000f3e0:	add    BYTE PTR [rax],al
   14000f3e2:	or     al,BYTE PTR [rax]
   14000f3e4:	add    BYTE PTR [rax+0x0],al
   14000f3e7:	sub    BYTE PTR [rdi],bh
   14000f3e9:	add    BYTE PTR [rax],al
   14000f3eb:	add    BYTE PTR [rax],al
   14000f3ed:	add    BYTE PTR [rax],al
   14000f3ef:	add    BYTE PTR [rax+rax*1],al
   14000f3f2:	add    al,0x0
   14000f3f4:	add    DWORD PTR [rax],eax
	...
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	repnz add al,BYTE PTR [rax]
   14000f407:	add    BYTE PTR [rcx],al
   14000f409:	add    BYTE PTR [rbx+0x0],dl
   14000f40c:	je     0x14000f40e
   14000f40e:	jb     0x14000f410
   14000f410:	imul   eax,DWORD PTR [rax],0x67006e
   14000f416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f41a:	ins    BYTE PTR es:[rdi],dx
   14000f41b:	add    BYTE PTR [rbp+0x0],ah
   14000f41e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f422:	data16 add BYTE PTR [rdi+0x0],ch
   14000f426:	add    BYTE PTR [rax],al
   14000f428:	(bad)  
   14000f429:	add    al,BYTE PTR [rax]
   14000f42b:	add    BYTE PTR [rcx],al
   14000f42d:	add    BYTE PTR [rax],dh
   14000f42f:	add    BYTE PTR [rax],dh
   14000f431:	add    BYTE PTR [rax],dh
   14000f433:	add    BYTE PTR [rax],dh
   14000f435:	add    BYTE PTR [rax],dh
   14000f437:	add    BYTE PTR [rax+rax*1],dh
   14000f43a:	rex.X add BYTE PTR [rax],sil
   14000f43d:	add    BYTE PTR [rax],al
   14000f43f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f443:	add    BYTE PTR [rcx],al
   14000f445:	add    BYTE PTR [rbx+0x0],al
   14000f448:	outs   dx,DWORD PTR ds:[rsi]
   14000f449:	add    BYTE PTR [rbp+0x0],ch
   14000f44c:	jo     0x14000f44e
   14000f44e:	(bad)  
   14000f44f:	add    BYTE PTR [rsi+0x0],ch
   14000f452:	jns    0x14000f454
   14000f454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f458:	ins    DWORD PTR es:[rdi],dx
   14000f459:	add    BYTE PTR [rbp+0x0],ah
   14000f45c:	add    BYTE PTR [rax],al
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f464:	movsxd eax,DWORD PTR [rax]
   14000f466:	jb     0x14000f468
   14000f468:	outs   dx,DWORD PTR ds:[rsi]
   14000f469:	add    BYTE PTR [rbx+0x0],dh
   14000f46c:	outs   dx,DWORD PTR ds:[rsi]
   14000f46d:	add    BYTE PTR [rsi+0x0],ah
   14000f470:	je     0x14000f472
   14000f472:	and    BYTE PTR [rax],al
   14000f474:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f478:	jb     0x14000f47a
   14000f47a:	jo     0x14000f47c
   14000f47c:	outs   dx,DWORD PTR ds:[rsi]
   14000f47d:	add    BYTE PTR [rdx+0x0],dh
   14000f480:	(bad)  
   14000f481:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f485:	add    BYTE PTR [rdi+0x0],ch
   14000f488:	outs   dx,BYTE PTR ds:[rsi]
   14000f489:	add    BYTE PTR [rax],al
   14000f48b:	add    BYTE PTR [rax+0x0],bl
   14000f48e:	sbb    BYTE PTR [rax],al
   14000f490:	add    DWORD PTR [rax],eax
   14000f492:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f496:	ins    BYTE PTR es:[rdi],dx
   14000f497:	add    BYTE PTR [rbp+0x0],ah
   14000f49a:	add    BYTE PTR [rbp+0x0],r12b
   14000f49e:	jae    0x14000f4a0
   14000f4a0:	movsxd eax,DWORD PTR [rax]
   14000f4a2:	jb     0x14000f4a4
   14000f4a4:	imul   eax,DWORD PTR [rax],0x740070
   14000f4aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f4b0:	add    BYTE PTR [rax],al
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	push   rdi
   14000f4b5:	add    BYTE PTR [rcx+0x0],ch
   14000f4b8:	outs   dx,BYTE PTR ds:[rsi]
   14000f4b9:	add    BYTE PTR [rax+0x0],dl
   14000f4bc:	add    BYTE PTR [r8],r12b
   14000f4bf:	add    BYTE PTR [rsi+0x0],ch
   14000f4c2:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   14000f4c7:	add    BYTE PTR [rdi+0x0],ch
   14000f4ca:	jb     0x14000f4cc
   14000f4cc:	imul   eax,DWORD PTR [rax],0x20
   14000f4cf:	add    BYTE PTR [rcx+0x0],ch
   14000f4d2:	outs   dx,BYTE PTR ds:[rsi]
   14000f4d3:	add    BYTE PTR [rbx+0x0],dh
   14000f4d6:	je     0x14000f4d8
   14000f4d8:	(bad)  
   14000f4d9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000f4dd:	add    BYTE PTR [rbp+0x0],ah
   14000f4e0:	jb     0x14000f4e2
   14000f4e2:	add    BYTE PTR [rax],al
   14000f4e4:	data16 add BYTE PTR [rbx],ah
   14000f4e7:	add    BYTE PTR [rcx],al
   14000f4e9:	add    BYTE PTR [rsi+0x0],al
   14000f4ec:	imul   eax,DWORD PTR [rax],0x65006c
   14000f4f2:	push   rsi
   14000f4f3:	add    BYTE PTR [rbp+0x0],ah
   14000f4f6:	jb     0x14000f4f8
   14000f4f8:	jae    0x14000f4fa
   14000f4fa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f500:	add    BYTE PTR [rax],al
   14000f502:	add    BYTE PTR [rax],al
   14000f504:	xor    DWORD PTR [rax],eax
   14000f506:	xor    BYTE PTR [rax],al
   14000f508:	add    BYTE PTR cs:[rax],dh
   14000f50b:	add    BYTE PTR [rsi],ch
   14000f50d:	add    BYTE PTR [rcx],dh
   14000f50f:	add    BYTE PTR [rax],dh
   14000f511:	add    BYTE PTR [rdx],dh
   14000f513:	add    BYTE PTR [rax+rax*1],dh
   14000f516:	xor    BYTE PTR [rax],al
   14000f518:	add    BYTE PTR cs:[rcx],dh
   14000f51b:	add    BYTE PTR [rsi],dh
   14000f51d:	add    BYTE PTR [rbx],dh
   14000f51f:	add    BYTE PTR [rax],bh
   14000f521:	add    BYTE PTR [rax+rax*1],dh
   14000f524:	and    BYTE PTR [rax],al
   14000f526:	sub    BYTE PTR [rax],al
   14000f528:	je     0x14000f52a
   14000f52a:	push   0x2e003100
   14000f52f:	add    BYTE PTR [rcx],dh
   14000f531:	add    BYTE PTR [rip+0x37003000],dh        # 0x177012537
   14000f537:	add    BYTE PTR [rax],dh
   14000f539:	add    BYTE PTR [rcx],bh
   14000f53b:	add    BYTE PTR [rip+0x37003100],ch        # 0x177012641
   14000f541:	add    BYTE PTR [rax],dh
   14000f543:	add    BYTE PTR [rax],dh
   14000f545:	add    BYTE PTR [rcx],ch
   14000f547:	add    BYTE PTR [rax],al
   14000f549:	add    BYTE PTR [rax],al
   14000f54b:	add    BYTE PTR [rax],bh
   14000f54d:	add    BYTE PTR [rax+rax*1],cl
   14000f550:	add    DWORD PTR [rax],eax
   14000f552:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f556:	je     0x14000f558
   14000f558:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f55c:	outs   dx,BYTE PTR ds:[rsi]
   14000f55d:	add    BYTE PTR [rcx+0x0],ah
   14000f560:	ins    BYTE PTR es:[rdi],dx
   14000f561:	add    BYTE PTR [rsi+0x0],cl
   14000f564:	(bad)  
   14000f565:	add    BYTE PTR [rbp+0x0],ch
   14000f568:	add    BYTE PTR gs:[rax],al
   14000f56b:	add    BYTE PTR [rbx+0x0],dh
   14000f56e:	outs   dx,BYTE PTR ds:[rsi]
   14000f56f:	add    BYTE PTR [rbp+0x0],ah
   14000f572:	je     0x14000f574
   14000f574:	movsxd eax,DWORD PTR [rax]
   14000f576:	data16 add BYTE PTR [rdi+0x0],ah
   14000f57a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000f57e:	js     0x14000f580
   14000f580:	add    BYTE PTR gs:[rax],al
   14000f583:	add    BYTE PTR [rax+0x1002e00],al
   14000f589:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000f58d:	add    BYTE PTR [rdi+0x0],ah
   14000f590:	(bad)  
   14000f591:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000f595:	add    BYTE PTR [rdi+0x0],ch
   14000f598:	jo     0x14000f59a
   14000f59a:	jns    0x14000f59c
   14000f59c:	jb     0x14000f59e
   14000f59e:	imul   eax,DWORD PTR [rax],0x680067
   14000f5a4:	je     0x14000f5a6
   14000f5a6:	add    BYTE PTR [rax],al
   14000f5a8:	test   eax,0x4d002000
   14000f5ad:	add    BYTE PTR [rcx+0x0],ch
   14000f5b0:	movsxd eax,DWORD PTR [rax]
   14000f5b2:	jb     0x14000f5b4
   14000f5b4:	outs   dx,DWORD PTR ds:[rsi]
   14000f5b5:	add    BYTE PTR [rbx+0x0],dh
   14000f5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000f5b9:	add    BYTE PTR [rsi+0x0],ah
   14000f5bc:	je     0x14000f5be
   14000f5be:	and    BYTE PTR [rax],al
   14000f5c0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f5c4:	jb     0x14000f5c6
   14000f5c6:	jo     0x14000f5c8
   14000f5c8:	outs   dx,DWORD PTR ds:[rsi]
   14000f5c9:	add    BYTE PTR [rdx+0x0],dh
   14000f5cc:	(bad)  
   14000f5cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f5d1:	add    BYTE PTR [rdi+0x0],ch
   14000f5d4:	outs   dx,BYTE PTR ds:[rsi]
   14000f5d5:	add    BYTE PTR [rsi],ch
   14000f5d7:	add    BYTE PTR [rax],ah
   14000f5d9:	add    BYTE PTR [rcx+0x0],al
   14000f5dc:	ins    BYTE PTR es:[rdi],dx
   14000f5dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f5e1:	add    BYTE PTR [rdx+0x0],dh
   14000f5e4:	imul   eax,DWORD PTR [rax],0x680067
   14000f5ea:	je     0x14000f5ec
   14000f5ec:	jae    0x14000f5ee
   14000f5ee:	and    BYTE PTR [rax],al
   14000f5f0:	jb     0x14000f5f2
   14000f5f2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f5f6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f5fa:	jbe    0x14000f5fc
   14000f5fc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000f601:	add    BYTE PTR [rax],al
   14000f603:	add    BYTE PTR [rsi],bh
   14000f605:	add    BYTE PTR [rbx],cl
   14000f607:	add    BYTE PTR [rcx],al
   14000f609:	add    BYTE PTR [rdi+0x0],cl
   14000f60c:	jb     0x14000f60e
   14000f60e:	imul   eax,DWORD PTR [rax],0x690067
   14000f614:	outs   dx,BYTE PTR ds:[rsi]
   14000f615:	add    BYTE PTR [rcx+0x0],ah
   14000f618:	ins    BYTE PTR es:[rdi],dx
   14000f619:	add    BYTE PTR [rsi+0x0],al
   14000f61c:	imul   eax,DWORD PTR [rax],0x65006c
   14000f622:	outs   dx,BYTE PTR ds:[rsi]
   14000f623:	add    BYTE PTR [rcx+0x0],ah
   14000f626:	ins    DWORD PTR es:[rdi],dx
   14000f627:	add    BYTE PTR [rbp+0x0],ah
   14000f62a:	add    BYTE PTR [rax],al
   14000f62c:	outs   dx,BYTE PTR ds:[rsi]
   14000f62d:	add    BYTE PTR [rbp+0x0],ah
   14000f630:	je     0x14000f632
   14000f632:	movsxd eax,DWORD PTR [rax]
   14000f634:	data16 add BYTE PTR [rdi+0x0],ah
   14000f638:	add    BYTE PTR cs:[rbp+0x0],ah
   14000f63c:	js     0x14000f63e
   14000f63e:	add    BYTE PTR gs:[rax],al
   14000f641:	add    BYTE PTR [rax],al
   14000f643:	add    BYTE PTR [rdx+0x0],ch
   14000f646:	and    eax,0x50000100
   14000f64b:	add    BYTE PTR [rdx+0x0],dh
   14000f64e:	outs   dx,DWORD PTR ds:[rsi]
   14000f64f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f653:	add    BYTE PTR [rbx+0x0],ah
   14000f656:	je     0x14000f658
   14000f658:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f65c:	ins    DWORD PTR es:[rdi],dx
   14000f65d:	add    BYTE PTR [rbp+0x0],ah
   14000f660:	add    BYTE PTR [rax],al
   14000f662:	add    BYTE PTR [rax],al
   14000f664:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f668:	movsxd eax,DWORD PTR [rax]
   14000f66a:	jb     0x14000f66c
   14000f66c:	outs   dx,DWORD PTR ds:[rsi]
   14000f66d:	add    BYTE PTR [rbx+0x0],dh
   14000f670:	outs   dx,DWORD PTR ds:[rsi]
   14000f671:	add    BYTE PTR [rsi+0x0],ah
   14000f674:	je     0x14000f676
   14000f676:	scas   al,BYTE PTR es:[rdi]
   14000f677:	add    BYTE PTR [rax],ah
   14000f679:	add    BYTE PTR [rdi+0x0],dl
   14000f67c:	imul   eax,DWORD PTR [rax],0x64006e
   14000f682:	outs   dx,DWORD PTR ds:[rsi]
   14000f683:	add    BYTE PTR [rdi+0x0],dh
   14000f686:	jae    0x14000f688
   14000f688:	scas   al,BYTE PTR es:[rdi]
   14000f689:	add    BYTE PTR [rax],ah
   14000f68b:	add    BYTE PTR [rdi+0x0],cl
   14000f68e:	jo     0x14000f690
   14000f690:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f694:	(bad)  
   14000f695:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f699:	add    BYTE PTR [rsi+0x0],ch
   14000f69c:	add    BYTE PTR [eax],ah
   14000f69f:	add    BYTE PTR [rbx+0x0],dl
   14000f6a2:	jns    0x14000f6a4
   14000f6a4:	jae    0x14000f6a6
   14000f6a6:	je     0x14000f6a8
   14000f6a8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f6ac:	add    BYTE PTR [rax],al
   14000f6ae:	add    BYTE PTR [rax],al
   14000f6b0:	rex.RX add BYTE PTR [rcx],r10b
   14000f6b3:	add    BYTE PTR [rcx],al
   14000f6b5:	add    BYTE PTR [rax+0x0],dl
   14000f6b8:	jb     0x14000f6ba
   14000f6ba:	outs   dx,DWORD PTR ds:[rsi]
   14000f6bb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f6bf:	add    BYTE PTR [rbx+0x0],ah
   14000f6c2:	je     0x14000f6c4
   14000f6c4:	push   rsi
   14000f6c5:	add    BYTE PTR [rbp+0x0],ah
   14000f6c8:	jb     0x14000f6ca
   14000f6ca:	jae    0x14000f6cc
   14000f6cc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f6d2:	add    BYTE PTR [rax],al
   14000f6d4:	xor    DWORD PTR [rax],eax
   14000f6d6:	xor    BYTE PTR [rax],al
   14000f6d8:	add    BYTE PTR cs:[rax],dh
   14000f6db:	add    BYTE PTR [rsi],ch
   14000f6dd:	add    BYTE PTR [rcx],dh
   14000f6df:	add    BYTE PTR [rax],dh
   14000f6e1:	add    BYTE PTR [rdx],dh
   14000f6e3:	add    BYTE PTR [rax+rax*1],dh
   14000f6e6:	xor    BYTE PTR [rax],al
   14000f6e8:	add    BYTE PTR cs:[rcx],dh
   14000f6eb:	add    BYTE PTR [rsi],dh
   14000f6ed:	add    BYTE PTR [rbx],dh
   14000f6ef:	add    BYTE PTR [rax],bh
   14000f6f1:	add    BYTE PTR [rax+rax*1],dh
   14000f6f4:	add    BYTE PTR [rax],al
   14000f6f6:	add    BYTE PTR [rax],al
   14000f6f8:	add    BYTE PTR [rax],r8b
   14000f6fb:	add    BYTE PTR [rcx],al
   14000f6fd:	add    BYTE PTR [rsi+0x0],dl
   14000f700:	(bad)  
   14000f701:	add    BYTE PTR [rdx+0x0],dh
   14000f704:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f708:	ins    BYTE PTR es:[rdi],dx
   14000f709:	add    BYTE PTR [rbp+0x0],ah
   14000f70c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f710:	data16 add BYTE PTR [rdi+0x0],ch
   14000f714:	add    BYTE PTR [rax],al
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	and    al,0x0
   14000f71a:	add    al,0x0
   14000f71c:	add    BYTE PTR [rax],al
   14000f71e:	push   rsp
   14000f71f:	add    BYTE PTR [rdx+0x0],dh
   14000f722:	(bad)  
   14000f723:	add    BYTE PTR [rsi+0x0],ch
   14000f726:	jae    0x14000f728
   14000f728:	ins    BYTE PTR es:[rdi],dx
   14000f729:	add    BYTE PTR [rcx+0x0],ah
   14000f72c:	je     0x14000f72e
   14000f72e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f734:	add    BYTE PTR [rax],al
   14000f736:	add    BYTE PTR [rax],al
   14000f738:	add    BYTE PTR [rax],al
   14000f73a:	mov    al,0x4
   14000f73c:	add    BYTE PTR [rax],al
   14000f73e:	add    BYTE PTR [rax],al
   14000f740:	int    0xfe
   14000f742:	int    0xfe
   14000f744:	enter  0x0,0x0
   14000f748:	add    BYTE PTR [rax],al
   14000f74a:	add    DWORD PTR [rax],eax
   14000f74c:	add    BYTE PTR [rax],al
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	adc    DWORD PTR [rax],eax
   14000f752:	add    BYTE PTR [rax],al
   14000f754:	add    BYTE PTR [rax],al
   14000f756:	add    BYTE PTR [rax],al
   14000f758:	add    al,BYTE PTR [rax]
   14000f75a:	add    BYTE PTR [rax],al
   14000f75c:	fwait
   14000f75d:	out    0x46,al
   14000f75f:	js     0x14000f7af
   14000f761:	cmp    ecx,eax
   14000f763:	movabs ds:0x63f67d5d7da64294,al
   14000f76c:	or     eax,0x9e1e9de4
   14000f771:	cmp    ah,bl
   14000f773:	mov    edi,0xd6af2150
   14000f778:	push   rax
   14000f779:	rcr    BYTE PTR [rbx-0x62],cl
	...
   14000f794:	mov    BYTE PTR [rax],al
   14000f796:	add    BYTE PTR [rax],al
   14000f798:	(bad)  
   14000f799:	add    BYTE PTR [rax],al
   14000f79b:	add    BYTE PTR [rax+0x8000000],bl
   14000f7a1:	add    BYTE PTR [rax],al
   14000f7a3:	add    BYTE PTR [rax+0xe000000],ah
   14000f7a9:	add    BYTE PTR [rax],al
   14000f7ab:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000f7b9:	add    BYTE PTR [rax],al
   14000f7bb:	add    BYTE PTR [rax+0xc000000],bh
   14000f7c1:	add    BYTE PTR [rax],al
   14000f7c3:	add    BYTE PTR [rax],al
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    BYTE PTR [rbp+0x0],cl
   14000f7ca:	push   rbp
   14000f7cb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000f7d6:	add    BYTE PTR [rax],al
   14000f7d8:	adc    BYTE PTR [rax],al
   14000f7da:	add    BYTE PTR [rax],al
   14000f7dc:	sbb    BYTE PTR [rax],al
   14000f7de:	add    BYTE PTR [rax],al
   14000f7e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f7e4:	rex.WB add BYTE PTR [r8],al
	...
   14000f7ef:	add    BYTE PTR [rbx],cl
   14000f7f1:	add    BYTE PTR [rax],al
   14000f7f3:	add    BYTE PTR [rax],dl
   14000f7f5:	add    BYTE PTR [rax],al
   14000f7f7:	add    BYTE PTR [rbp+0x0],ah
   14000f7fa:	outs   dx,BYTE PTR ds:[rsi]
   14000f7fb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193014d01
   14000f801:	add    BYTE PTR [rax],al
   14000f803:	add    BYTE PTR [rax],al
   14000f805:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x0],dh
   140010003:	add    BYTE PTR [rax+rax*1+0x0],cl
   140010007:	add    BYTE PTR [rax],dl
   140010009:	movabs ds:0xa348a340a328a318,eax
   140010012:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140010018:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14001001e:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140010024:	jo     0x14000ffcb
   140010026:	js     0x14000ffcd
   140010028:	and    BYTE PTR [rbp-0x59ef5a08],0x18
   14001002f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010030:	and    BYTE PTR [rsi-0x59b759c0],ah
   140010036:	push   rax
   140010037:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010038:	pop    rax
   140010039:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001003a:	nop
   14001003b:	stos   BYTE PTR es:[rdi],al
   14001003c:	cwde   
   14001003d:	stos   BYTE PTR es:[rdi],al
   14001003e:	movabs al,ds:0xc0aab8aab0aaa8aa
   140010047:	stos   BYTE PTR es:[rdi],al
   140010048:	enter  0xaa,0x0
   14001004c:	add    BYTE PTR [rax+0x140000],ah
   140010052:	add    BYTE PTR [rax],al
   140010054:	sub    BYTE PTR [rax-0x5fa75fd0],ah
   14001005a:	and    BYTE PTR [rax-0x5f2f5f58],0x0
   140010061:	loopne 0x140010063
   140010063:	add    BYTE PTR [rax+rax*1],cl
   140010066:	add    BYTE PTR [rax],al
   140010068:	.byte 0x0
   140010069:	.byte 0xa0
   14001006a:	.byte 0x8
   14001006b:	.byte 0xa0
